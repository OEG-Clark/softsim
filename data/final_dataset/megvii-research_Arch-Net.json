{"home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet18.AverageMeter.__init__": [[442, 444], ["train_archnet_resnet18.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet34.AverageMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet18.AverageMeter.reset": [[445, 450], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet18.AverageMeter.update": [[451, 456], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet18.get_teacher_model": [[171, 177], ["torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "models.teachers.resnet.resnet18", "models.teachers.resnet.resnet18.load_state_dict"], "function", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.resnet18"], ["def", "get_teacher_model", "(", "teacher_model_path", ")", ":", "\n", "    ", "teacher_model_state_dict", "=", "torch", ".", "load", "(", "teacher_model_path", ",", "map_location", "=", "'cpu'", ")", "\n", "teacher_model", "=", "teacher_model_function", "(", ")", "\n", "teacher_model", ".", "load_state_dict", "(", "teacher_model_state_dict", ")", "\n", "\n", "return", "teacher_model", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet18.get_student_model": [[179, 215], ["models.students.resnet18.archnet_resnet18", "models.students.resnet18.archnet_resnet18.state_dict", "models.students.resnet18.archnet_resnet18.load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "student_model.state_dict.keys", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load.items", "k.split"], "function", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet18.archnet_resnet18"], ["", "def", "get_student_model", "(", "teacher_model_path", ",", "idx", ",", "saved_model_path", ",", "training_periods", ",", "args", ")", ":", "\n", "    ", "student_model", "=", "student_model_function", "(", "args", ".", "weight_bit", ",", "args", ".", "feature_bit", ",", "squeeze_factor", "=", "24", ",", "distillation_idx", "=", "idx", ",", "is_train", "=", "True", ")", "\n", "student_model_state_dict", "=", "student_model", ".", "state_dict", "(", ")", "\n", "\n", "if", "idx", "==", "0", ":", "\n", "        ", "teacher_model_state_dict", "=", "torch", ".", "load", "(", "teacher_model_path", ",", "map_location", "=", "'cpu'", ")", "\n", "for", "k", "in", "student_model_state_dict", ".", "keys", "(", ")", ":", "\n", "            ", "if", "k", "==", "'conv1.conv_Q.weight'", "or", "(", "'layer'", "not", "in", "k", "and", "'bn1'", "in", "k", ")", ":", "\n", "                ", "continue", "\n", "", "elif", "k", "in", "teacher_model_state_dict", ":", "\n", "                ", "student_model_state_dict", "[", "k", "]", "=", "teacher_model_state_dict", "[", "k", "]", "\n", "# conv weight and bias", "\n", "", "elif", "'.conv_Q'", "in", "k", "and", "'concat'", "not", "in", "k", "and", "'fc'", "not", "in", "k", ":", "\n", "                ", "k_split", "=", "k", ".", "split", "(", "'.conv_Q'", ")", "\n", "new_k", "=", "''", ".", "join", "(", "k_split", ")", "\n", "if", "new_k", "in", "teacher_model_state_dict", ":", "\n", "                    ", "if", "'downsample'", "in", "k", ":", "\n", "                        ", "student_v", "=", "student_model_state_dict", "[", "k", "]", "\n", "student_v", "[", ":", "]", "=", "1e-10", "\n", "student_v", "[", ":", ",", ":", ",", "1", ":", "2", ",", "1", ":", "2", "]", "=", "teacher_model_state_dict", "[", "new_k", "]", "\n", "student_model_state_dict", "[", "k", "]", "=", "student_v", "\n", "", "else", ":", "\n", "                        ", "student_model_state_dict", "[", "k", "]", "=", "teacher_model_state_dict", "[", "new_k", "]", "\n", "# elif 'fc.linear_Q.weight' in k:", "\n", "#     student_model_state_dict[k] = teacher_model_state_dict['fc.weight']", "\n", "# elif 'fc.linear_Q.bias' in k:", "\n", "#     student_model_state_dict[k] = teacher_model_state_dict['fc.bias']", "\n", "", "", "", "", "", "else", ":", "\n", "        ", "distillation_model_path", "=", "saved_model_path", "+", "'/period_{}_epoch_{}.pth'", ".", "format", "(", "idx", "-", "1", ",", "training_periods", "[", "idx", "-", "1", "]", ")", "\n", "student_model_state_dict_multigpus", "=", "torch", ".", "load", "(", "distillation_model_path", ",", "map_location", "=", "'cpu'", ")", "\n", "for", "k", ",", "v", "in", "student_model_state_dict_multigpus", ".", "items", "(", ")", ":", "\n", "            ", "student_model_state_dict", "[", "k", "[", "7", ":", "]", "]", "=", "v", "\n", "\n", "", "", "student_model", ".", "load_state_dict", "(", "student_model_state_dict", ")", "\n", "\n", "return", "student_model", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet18.mixup_data": [[217, 224], ["numpy.random.beta", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm"], "function", ["None"], ["", "def", "mixup_data", "(", "batch", ",", "alpha", ")", ":", "\n", "    ", "lam", "=", "np", ".", "random", ".", "beta", "(", "alpha", ",", "alpha", ")", "\n", "batch_size", "=", "batch", ".", "shape", "[", "0", "]", "\n", "idx", "=", "torch", ".", "randperm", "(", "batch_size", ")", "\n", "mixup_batch", "=", "lam", "*", "batch", "+", "(", "1", "-", "lam", ")", "*", "batch", "[", "idx", "]", "\n", "\n", "return", "mixup_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet18.get_loss": [[226, 241], ["torch.MSELoss", "len", "range", "len", "len", "torch.logspace", "torch.logspace", "torch.logspace", "torch.logspace", "torch.logspace", "torch.logspace", "torch.logspace", "torch.logspace", "torch.logspace", "torch.logspace", "nn.MSELoss."], "function", ["None"], ["", "def", "get_loss", "(", "outputs", ",", "labels", ",", "last_period", "=", "False", ")", ":", "\n", "    ", "assert", "len", "(", "outputs", ")", "==", "len", "(", "labels", ")", "\n", "\n", "loss_fn", "=", "nn", ".", "MSELoss", "(", ")", "\n", "len_outputs", "=", "len", "(", "outputs", ")", "\n", "if", "last_period", ":", "\n", "        ", "multiplier", "=", "torch", ".", "logspace", "(", "len_outputs", ",", "1", ",", "len_outputs", ",", "base", "=", "0.8", ")", "\n", "", "else", ":", "\n", "        ", "multiplier", "=", "torch", ".", "logspace", "(", "len_outputs", "-", "1", ",", "0", ",", "len_outputs", ",", "base", "=", "0.8", ")", "\n", "\n", "", "loss", "=", "0", "\n", "for", "i", "in", "range", "(", "len_outputs", ")", ":", "\n", "        ", "loss", "+=", "multiplier", "[", "i", "]", "*", "loss_fn", "(", "outputs", "[", "i", "]", ",", "labels", "[", "i", "]", ")", "# default is F norm", "\n", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet18.cosine_loss": [[243, 255], ["len", "torch.logspace", "torch.logspace", "torch.logspace", "torch.logspace", "torch.logspace", "range", "len", "len", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.cosine_similarity", "torch.cosine_similarity", "torch.cosine_similarity", "torch.cosine_similarity", "torch.cosine_similarity"], "function", ["None"], ["", "def", "cosine_loss", "(", "outputs", ",", "labels", ")", ":", "\n", "    ", "assert", "len", "(", "outputs", ")", "==", "len", "(", "labels", ")", "\n", "\n", "len_outputs", "=", "len", "(", "outputs", ")", "\n", "multiplier", "=", "torch", ".", "logspace", "(", "len_outputs", "-", "1", ",", "0", ",", "len_outputs", ",", "base", "=", "0.8", ")", "\n", "\n", "loss", "=", "0", "\n", "for", "i", "in", "range", "(", "len_outputs", ")", ":", "\n", "        ", "loss_i", "=", "1.0", "-", "torch", ".", "mean", "(", "torch", ".", "cosine_similarity", "(", "outputs", "[", "i", "]", ",", "labels", "[", "i", "]", ")", ")", "\n", "loss", "+=", "multiplier", "[", "i", "]", "*", "loss_i", "\n", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet18.validate": [[257, 276], ["models.students.resnet18.archnet_resnet18", "models.students.resnet18.archnet_resnet18.state_dict", "os.listdir", "len", "train_archnet_resnet18.get_print_info", "os.path.join", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load.items", "models.students.resnet18.archnet_resnet18.load_state_dict", "print", "evaluate.imagenet_validataion.imagenet_validation", "logger.info"], "function", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet18.archnet_resnet18", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet34.get_print_info", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.evaluate.imagenet_validataion.imagenet_validation"], ["", "def", "validate", "(", "model_dir", ",", "training_periods", ",", "logger", ",", "workers", ",", "args", ")", ":", "\n", "# build new model", "\n", "    ", "new_model", "=", "student_model_function", "(", "args", ".", "weight_bit", ",", "args", ".", "feature_bit", ",", "squeeze_factor", "=", "24", ",", "distillation_idx", "=", "None", ",", "is_train", "=", "False", ")", "\n", "new_model_state_dict", "=", "new_model", ".", "state_dict", "(", ")", "\n", "last_period", "=", "'period_{}'", ".", "format", "(", "len", "(", "training_periods", ")", "-", "1", ")", "\n", "for", "path", "in", "os", ".", "listdir", "(", "model_dir", ")", ":", "\n", "        ", "if", "last_period", "in", "path", ":", "\n", "            ", "model_name", ",", "period", ",", "epoch", "=", "get_print_info", "(", "path", ")", "\n", "model_path", "=", "os", ".", "path", ".", "join", "(", "model_dir", ",", "path", ")", "\n", "model_state_dict", "=", "torch", ".", "load", "(", "model_path", ",", "map_location", "=", "'cpu'", ")", "\n", "for", "k", ",", "v", "in", "model_state_dict", ".", "items", "(", ")", ":", "\n", "                ", "new_model_state_dict", "[", "k", "[", "7", ":", "]", "]", "=", "v", "\n", "", "new_model", ".", "load_state_dict", "(", "new_model_state_dict", ")", "\n", "\n", "# validate", "\n", "print", "(", "'Start evaluating model: '", "+", "model_name", ")", "\n", "prec1", ",", "prec5", "=", "imagenet_validation", "(", "new_model", ",", "args", ".", "val_data_path", ",", "num_threads", "=", "workers", ",", "model_name", "=", "model_name", ",", "batch_size", "=", "32", ")", "\n", "info_str", "=", "f'Period: {period} Epoch: {epoch} | top-1: {prec1} | top-5: {prec5}'", "\n", "logger", ".", "info", "(", "info_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet18.get_print_info": [[278, 285], ["model_name.split", "model_path.split"], "function", ["None"], ["", "", "", "def", "get_print_info", "(", "model_path", ")", ":", "\n", "    ", "model_name", "=", "model_path", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "period_and_epoch", "=", "model_name", ".", "split", "(", "'_'", ")", "\n", "period", "=", "period_and_epoch", "[", "1", "]", "\n", "epoch", "=", "period_and_epoch", "[", "-", "1", "]", "\n", "\n", "return", "model_name", ",", "period", ",", "epoch", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet18.construct_logger": [[287, 305], ["logging.getLogger", "logging.getLogger.setLevel", "str", "logging.FileHandler", "logging.FileHandler.setLevel", "logging.Formatter", "logging.FileHandler.setFormatter", "logging.getLogger.addHandler", "subprocess.check_output().strip", "isinstance", "datetime.datetime.now().strftime", "os.path.join", "ret.decode.decode", "subprocess.check_output", "datetime.datetime.now", "shlex.split", "train_archnet_resnet18.construct_logger.git_hash"], "function", ["None"], ["", "def", "construct_logger", "(", "name", ",", "save_dir", ")", ":", "\n", "    ", "def", "git_hash", "(", ")", ":", "\n", "        ", "cmd", "=", "'git log -n 1 --pretty=\"%h\"'", "\n", "ret", "=", "subprocess", ".", "check_output", "(", "shlex", ".", "split", "(", "cmd", ")", ")", ".", "strip", "(", ")", "\n", "if", "isinstance", "(", "ret", ",", "bytes", ")", ":", "\n", "            ", "ret", "=", "ret", ".", "decode", "(", ")", "\n", "", "return", "ret", "\n", "\n", "", "logger", "=", "logging", ".", "getLogger", "(", "name", ")", "\n", "logger", ".", "setLevel", "(", "logging", ".", "DEBUG", ")", "\n", "date", "=", "str", "(", "datetime", ".", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%m%d%H'", ")", ")", "\n", "fh", "=", "logging", ".", "FileHandler", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "f'log-{date}-{git_hash()}.txt'", ")", ")", "\n", "fh", ".", "setLevel", "(", "logging", ".", "DEBUG", ")", "\n", "formatter", "=", "logging", ".", "Formatter", "(", "\"%(asctime)s %(name)s %(levelname)s: %(message)s\"", ")", "\n", "fh", ".", "setFormatter", "(", "formatter", ")", "\n", "logger", ".", "addHandler", "(", "fh", ")", "\n", "\n", "return", "logger", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet18.main": [[307, 437], ["datetime.datetime.now", "parser.parse_args", "train_archnet_resnet18.construct_logger", "train_archnet_resnet18.get_teacher_model", "torch.nn.parallel.DistributedDataParallel.to", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel.eval", "datasets.imagenet_dataset.CustomImagenetDataset", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "train_archnet_resnet18.AverageMeter", "sum", "enumerate", "datetime.datetime.now", "str", "os.path.exists", "os.makedirs", "train_archnet_resnet18.get_student_model", "torch.distributed.barrier", "torch.distributed.barrier", "torch.distributed.barrier", "torch.distributed.barrier", "torch.distributed.barrier", "torch.nn.SyncBatchNorm.convert_sync_batchnorm.to", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.SyncBatchNorm.convert_sync_batchnorm.train", "torch.Adam", "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts", "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts", "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts", "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts", "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts", "range", "print", "print", "print", "print", "train_archnet_resnet18.validate", "print", "train_archnet_resnet18.validate", "torchvision.Compose", "torch.distributed.new_group", "torch.distributed.new_group", "torch.distributed.new_group", "torch.distributed.new_group", "torch.distributed.new_group", "torch.nn.SyncBatchNorm.convert_sync_batchnorm", "torch.nn.SyncBatchNorm.convert_sync_batchnorm", "torch.nn.SyncBatchNorm.convert_sync_batchnorm", "torch.nn.SyncBatchNorm.convert_sync_batchnorm", "torch.nn.SyncBatchNorm.convert_sync_batchnorm", "torch.nn.SyncBatchNorm.convert_sync_batchnorm.parameters", "print", "time.time", "torch.utils.data.distributed.DistributedSampler.set_epoch", "enumerate", "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.step", "torch.distributed.barrier", "torch.distributed.barrier", "torch.distributed.barrier", "torch.distributed.barrier", "torch.distributed.barrier", "str", "mixup_data.cuda", "optim.Adam.zero_grad", "torch.nn.SyncBatchNorm.convert_sync_batchnorm.", "get_loss.backward", "optim.Adam.step", "train_archnet_resnet18.AverageMeter.update", "time.time", "get_loss.item", "torch.initial_seed", "torch.initial_seed", "torch.initial_seed", "torch.initial_seed", "torch.initial_seed", "range", "torchvision.Resize", "torchvision.CenterCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.Normalize", "random.random", "train_archnet_resnet18.mixup_data", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.nn.parallel.DistributedDataParallel.", "train_archnet_resnet18.get_loss", "print", "len", "os.path.join", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "str().replace", "len", "train_archnet_resnet18.get_loss", "train_archnet_resnet18.cosine_loss", "time.time", "torch.nn.SyncBatchNorm.convert_sync_batchnorm.state_dict", "os.path.join", "os.path.exists", "os.path.join", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "os.remove", "torch.nn.SyncBatchNorm.convert_sync_batchnorm.state_dict", "str", "str", "len", "datetime.timedelta"], "function", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet34.construct_logger", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.get_teacher_model", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.get_student_model", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.validate", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.validate", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.dorefa.quantize_helper.QuantWeight.backward", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet34.AverageMeter.update", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet50.mixup_data", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.get_loss", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.get_loss", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet34.cosine_loss"], ["", "def", "main", "(", ")", ":", "\n", "    ", "start_time", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "training_periods", "=", "[", "args", ".", "first_period_epochs", "]", "+", "[", "args", ".", "middle_period_epochs", "for", "_", "in", "range", "(", "args", ".", "number_of_middle_periods", ")", "]", "+", "[", "args", ".", "last_period_epochs", "]", "\n", "save_dir", "=", "args", ".", "output_path", "+", "'_lr'", "+", "str", "(", "args", ".", "lr", ")", ".", "replace", "(", "'.'", ",", "'_'", ")", "+", "'_bs'", "+", "str", "(", "args", ".", "batch_size", ")", "+", "'_images'", "+", "str", "(", "args", ".", "total_images_per_period", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "save_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "save_dir", ",", "exist_ok", "=", "True", ")", "\n", "", "logger", "=", "construct_logger", "(", "'resnet18'", ",", "save_dir", ")", "\n", "\n", "if", "args", ".", "evaluate", ":", "\n", "        ", "if", "local_rank", "==", "0", ":", "\n", "            ", "print", "(", "'Start Validating...'", ")", "\n", "validate", "(", "save_dir", ",", "training_periods", ",", "logger", ",", "args", ".", "validate_workers", ",", "args", ")", "\n", "", "return", "\n", "\n", "# get teacher model", "\n", "", "teacher_model", "=", "get_teacher_model", "(", "args", ".", "teacher_model_path", ")", "\n", "teacher_model", "=", "teacher_model", ".", "to", "(", "device", ")", "\n", "teacher_model", "=", "torch", ".", "nn", ".", "parallel", ".", "DistributedDataParallel", "(", "teacher_model", ",", "device_ids", "=", "[", "local_rank", "]", ",", "output_device", "=", "local_rank", ",", "find_unused_parameters", "=", "True", ")", "\n", "teacher_model", ".", "eval", "(", ")", "\n", "\n", "# prepare datalaoder", "\n", "ds", "=", "imagenet_dataset", "(", "args", ".", "train_data_path", ",", "transform", "=", "transform", ".", "Compose", "(", "[", "\n", "transform", ".", "Resize", "(", "256", ")", ",", "\n", "transform", ".", "CenterCrop", "(", "224", ")", ",", "\n", "transform", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transform", ".", "ToTensor", "(", ")", ",", "\n", "transform", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ",", "\n", "]", ")", ",", "num_images", "=", "args", ".", "total_images_all_periods", ")", "\n", "sampler", "=", "DistributedSampler", "(", "ds", ")", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "ds", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "False", ",", "num_workers", "=", "args", ".", "workers", ",", "pin_memory", "=", "True", ",", "sampler", "=", "sampler", ")", "\n", "iters_per_epoch", "=", "args", ".", "total_images_per_period", "//", "args", ".", "batch_size", "//", "args", ".", "num_gpus", "\n", "\n", "batch_time", "=", "AverageMeter", "(", ")", "\n", "total_epochs", "=", "sum", "(", "training_periods", "[", "args", ".", "restart_period", ":", "]", ")", "\n", "current_total_epochs", "=", "0", "\n", "for", "idx", ",", "training_period", "in", "enumerate", "(", "training_periods", ")", ":", "\n", "        ", "if", "idx", "<", "args", ".", "restart_period", ":", "\n", "            ", "continue", "\n", "# get student model and its middle output", "\n", "", "student_model", "=", "get_student_model", "(", "args", ".", "teacher_model_path", ",", "idx", ",", "save_dir", ",", "training_periods", ",", "args", ")", "\n", "torch", ".", "distributed", ".", "barrier", "(", ")", "\n", "student_model", "=", "student_model", ".", "to", "(", "device", ")", "\n", "if", "args", ".", "sync_bn", ":", "\n", "            ", "process_group", "=", "torch", ".", "distributed", ".", "new_group", "(", ")", "\n", "student_model", "=", "torch", ".", "nn", ".", "SyncBatchNorm", ".", "convert_sync_batchnorm", "(", "student_model", ",", "process_group", ")", "\n", "", "student_model", "=", "torch", ".", "nn", ".", "parallel", ".", "DistributedDataParallel", "(", "student_model", ",", "device_ids", "=", "[", "local_rank", "]", ",", "output_device", "=", "local_rank", ",", "find_unused_parameters", "=", "True", ")", "\n", "student_model", ".", "train", "(", ")", "\n", "\n", "cudnn", ".", "benchmark", "=", "True", "\n", "\n", "# optimizer", "\n", "opt", "=", "optim", ".", "Adam", "(", "student_model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ",", "weight_decay", "=", "args", ".", "weight_decay", ")", "\n", "\n", "# distillation", "\n", "scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "CosineAnnealingWarmRestarts", "(", "opt", ",", "T_0", "=", "10", ",", "T_mult", "=", "2", ")", "\n", "\n", "if", "local_rank", "==", "0", ":", "\n", "            ", "print", "(", "'Start Training Period {}, {} epochs in total'", ".", "format", "(", "idx", ",", "training_period", ")", ")", "\n", "", "for", "epoch", "in", "range", "(", "training_period", ")", ":", "\n", "            ", "current_total_epochs", "+=", "1", "\n", "running_loss", "=", "0.0", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "sampler", ".", "set_epoch", "(", "current_total_epochs", ")", "\n", "for", "new_idx", ",", "sample", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "                ", "if", "new_idx", ">", "args", ".", "total_images_per_period", "//", "args", ".", "batch_size", "//", "args", ".", "num_gpus", "-", "1", ":", "\n", "                    ", "break", "\n", "", "inputs", "=", "sample", "[", "0", "]", "\n", "if", "random", ".", "random", "(", ")", ">", "0.9", ":", "\n", "                    ", "inputs", "=", "mixup_data", "(", "inputs", ",", "1.0", ")", "\n", "", "inputs", "=", "inputs", ".", "cuda", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "labels", "=", "teacher_model", "(", "inputs", ")", "\n", "\n", "", "opt", ".", "zero_grad", "(", ")", "\n", "student_model_middle_output", "=", "student_model", "(", "[", "labels", ",", "inputs", "]", ")", "\n", "if", "idx", "==", "len", "(", "training_periods", ")", "-", "1", ":", "\n", "                    ", "loss", "=", "get_loss", "(", "student_model_middle_output", "[", ":", "-", "1", "]", ",", "labels", "[", ":", "-", "1", "]", ",", "last_period", "=", "True", ")", "+", "cosine_loss", "(", "[", "student_model_middle_output", "[", "-", "1", "]", "]", ",", "[", "labels", "[", "-", "1", "]", "]", ")", "\n", "", "else", ":", "\n", "                    ", "loss", "=", "get_loss", "(", "student_model_middle_output", ",", "labels", "[", ":", "idx", "+", "1", "]", ")", "\n", "", "loss", ".", "backward", "(", ")", "\n", "opt", ".", "step", "(", ")", "\n", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "eta", "=", "batch_time", ".", "avg", "*", "(", "iters_per_epoch", "-", "1", "-", "new_idx", "+", "iters_per_epoch", "*", "(", "total_epochs", "-", "current_total_epochs", "-", "1", ")", ")", "//", "1", "\n", "\n", "# print statistics", "\n", "running_loss", "+=", "loss", ".", "item", "(", ")", "\n", "if", "new_idx", "%", "args", ".", "print_frequency", "==", "args", ".", "print_frequency", "-", "1", "and", "local_rank", "==", "0", ":", "# print every 1 mini-batch", "\n", "                    ", "print", "(", "\n", "'Period/Epoch/Iteration: [{0}/{1}/{2}] '", "\n", "'Loss: {loss:.10f} '", "\n", "'Eta: {eta}'", ".", "format", "(", "\n", "idx", ",", "\n", "epoch", "+", "1", ",", "\n", "new_idx", "+", "1", ",", "\n", "loss", "=", "running_loss", "/", "args", ".", "print_frequency", ",", "\n", "eta", "=", "str", "(", "datetime", ".", "timedelta", "(", "seconds", "=", "eta", ")", ")", ",", "\n", ")", ")", "\n", "running_loss", "=", "0.0", "\n", "", "", "scheduler", ".", "step", "(", ")", "\n", "\n", "if", "idx", "<", "len", "(", "training_periods", ")", "-", "1", ":", "\n", "                ", "if", "epoch", "==", "training_period", "-", "1", "and", "local_rank", "==", "0", ":", "\n", "                    ", "model_path", "=", "'period_{}_epoch_{}.pth'", ".", "format", "(", "idx", ",", "epoch", "+", "1", ")", "\n", "model_save_path", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "model_path", ")", "\n", "torch", ".", "save", "(", "student_model", ".", "state_dict", "(", ")", ",", "model_save_path", ")", "\n", "\n", "if", "idx", ">", "0", "and", "idx", "<", "len", "(", "training_periods", ")", "-", "1", "and", "local_rank", "==", "0", ":", "\n", "                        ", "delete_model_path", "=", "'period_{}_epoch_{}.pth'", ".", "format", "(", "idx", "-", "1", ",", "training_periods", "[", "idx", "-", "1", "]", ")", "\n", "delete_model_save_path", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "delete_model_path", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "delete_model_save_path", ")", ":", "\n", "                            ", "os", ".", "remove", "(", "delete_model_save_path", ")", "\n", "", "", "", "", "elif", "local_rank", "==", "0", ":", "\n", "                ", "if", "epoch", ">", "args", ".", "last_period_epochs", "-", "20", ":", "\n", "                    ", "model_path", "=", "'period_{}_epoch_{}.pth'", ".", "format", "(", "idx", ",", "epoch", "+", "1", ")", "\n", "model_save_path", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "model_path", ")", "\n", "torch", ".", "save", "(", "student_model", ".", "state_dict", "(", ")", ",", "model_save_path", ")", "\n", "", "", "torch", ".", "distributed", ".", "barrier", "(", ")", "\n", "\n", "", "", "end_time", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "\n", "if", "local_rank", "==", "0", ":", "\n", "        ", "print", "(", "'The torch random seed of the training procedure is {}'", ".", "format", "(", "torch", ".", "initial_seed", "(", ")", ")", ")", "\n", "print", "(", "'It took {} to train'", ".", "format", "(", "end_time", "-", "start_time", ")", ")", "\n", "print", "(", "'The output path is '", "+", "save_dir", ")", "\n", "print", "(", "'Finish Training. Start Validating...'", ")", "\n", "validate", "(", "save_dir", ",", "training_periods", ",", "logger", ",", "args", ".", "validate_workers", ",", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet50.AverageMeter.__init__": [[449, 451], ["train_archnet_resnet50.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet34.AverageMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet50.AverageMeter.reset": [[452, 457], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet50.AverageMeter.update": [[458, 463], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet50.get_teacher_model": [[171, 177], ["torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "models.teachers.resnet.resnet50", "models.teachers.resnet.resnet50.load_state_dict"], "function", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.resnet50"], ["def", "get_teacher_model", "(", "teacher_model_path", ")", ":", "\n", "    ", "teacher_model_state_dict", "=", "torch", ".", "load", "(", "teacher_model_path", ",", "map_location", "=", "'cpu'", ")", "\n", "teacher_model", "=", "teacher_model_function", "(", ")", "\n", "teacher_model", ".", "load_state_dict", "(", "teacher_model_state_dict", ")", "\n", "\n", "return", "teacher_model", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet50.get_student_model": [[179, 222], ["models.students.resnet50.archnet_resnet50", "models.students.resnet50.archnet_resnet50.state_dict", "models.students.resnet50.archnet_resnet50.load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "student_model.state_dict.keys", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load.items", "k.split"], "function", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.archnet_resnet50"], ["", "def", "get_student_model", "(", "teacher_model_path", ",", "idx", ",", "saved_model_path", ",", "training_periods", ",", "args", ")", ":", "\n", "    ", "student_model", "=", "student_model_function", "(", "args", ".", "weight_bit", ",", "args", ".", "feature_bit", ",", "squeeze_factor", "=", "24", ",", "distillation_idx", "=", "idx", ",", "is_train", "=", "True", ")", "\n", "student_model_state_dict", "=", "student_model", ".", "state_dict", "(", ")", "\n", "\n", "if", "idx", "==", "0", ":", "\n", "        ", "teacher_model_state_dict", "=", "torch", ".", "load", "(", "teacher_model_path", ",", "map_location", "=", "'cpu'", ")", "\n", "for", "k", "in", "student_model_state_dict", ".", "keys", "(", ")", ":", "\n", "            ", "if", "k", "==", "'conv1.conv_Q.weight'", "or", "(", "'layer'", "not", "in", "k", "and", "'bn1'", "in", "k", ")", ":", "\n", "                ", "continue", "\n", "", "elif", "k", "in", "teacher_model_state_dict", ":", "\n", "                ", "student_model_state_dict", "[", "k", "]", "=", "teacher_model_state_dict", "[", "k", "]", "\n", "# conv weight and bias", "\n", "", "elif", "'.conv_Q'", "in", "k", "and", "'concat'", "not", "in", "k", "and", "'fc'", "not", "in", "k", ":", "\n", "                ", "k_split", "=", "k", ".", "split", "(", "'.conv_Q'", ")", "\n", "new_k", "=", "''", ".", "join", "(", "k_split", ")", "\n", "if", "new_k", "in", "teacher_model_state_dict", ":", "\n", "                    ", "if", "'downsample'", "in", "k", "and", "'layer4'", "not", "in", "k", ":", "# downsample in last stage is different", "\n", "                        ", "student_v", "=", "student_model_state_dict", "[", "k", "]", "\n", "student_v", "[", ":", "]", "=", "1e-10", "\n", "student_v", "[", ":", ",", ":", ",", "1", ":", "2", ",", "1", ":", "2", "]", "=", "teacher_model_state_dict", "[", "new_k", "]", "\n", "student_model_state_dict", "[", "k", "]", "=", "student_v", "\n", "", "elif", "'downsample'", "not", "in", "k", ":", "\n", "                        ", "teacher_v", "=", "teacher_model_state_dict", "[", "new_k", "]", "\n", "if", "teacher_v", ".", "shape", "[", "-", "1", "]", "==", "3", ":", "# kernel size = 3", "\n", "                            ", "student_model_state_dict", "[", "k", "]", "=", "teacher_v", "\n", "", "elif", "teacher_v", ".", "shape", "[", "-", "1", "]", "==", "1", ":", "# kernel size = 1", "\n", "                            ", "student_v", "=", "student_model_state_dict", "[", "k", "]", "\n", "student_v", "[", ":", "]", "=", "1e-10", "\n", "student_v", "[", ":", ",", ":", ",", "1", ":", "2", ",", "1", ":", "2", "]", "=", "teacher_model_state_dict", "[", "new_k", "]", "\n", "student_model_state_dict", "[", "k", "]", "=", "student_v", "\n", "# elif 'fc.linear_Q.weight' in k:", "\n", "#     student_model_state_dict[k] = teacher_model_state_dict['fc.weight']", "\n", "# elif 'fc.linear_Q.bias' in k:", "\n", "#     student_model_state_dict[k] = teacher_model_state_dict['fc.bias']", "\n", "", "", "", "", "", "", "else", ":", "\n", "        ", "distillation_model_path", "=", "saved_model_path", "+", "'/period_{}_epoch_{}.pth'", ".", "format", "(", "idx", "-", "1", ",", "training_periods", "[", "idx", "-", "1", "]", ")", "\n", "student_model_state_dict_multigpus", "=", "torch", ".", "load", "(", "distillation_model_path", ",", "map_location", "=", "'cpu'", ")", "\n", "for", "k", ",", "v", "in", "student_model_state_dict_multigpus", ".", "items", "(", ")", ":", "\n", "            ", "student_model_state_dict", "[", "k", "[", "7", ":", "]", "]", "=", "v", "\n", "\n", "", "", "student_model", ".", "load_state_dict", "(", "student_model_state_dict", ")", "\n", "\n", "return", "student_model", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet50.mixup_data": [[224, 231], ["numpy.random.beta", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm"], "function", ["None"], ["", "def", "mixup_data", "(", "batch", ",", "alpha", ")", ":", "\n", "    ", "lam", "=", "np", ".", "random", ".", "beta", "(", "alpha", ",", "alpha", ")", "\n", "batch_size", "=", "batch", ".", "shape", "[", "0", "]", "\n", "idx", "=", "torch", ".", "randperm", "(", "batch_size", ")", "\n", "mixup_batch", "=", "lam", "*", "batch", "+", "(", "1", "-", "lam", ")", "*", "batch", "[", "idx", "]", "\n", "\n", "return", "mixup_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet50.get_loss": [[233, 248], ["torch.MSELoss", "len", "range", "len", "len", "torch.logspace", "torch.logspace", "torch.logspace", "torch.logspace", "torch.logspace", "torch.logspace", "torch.logspace", "torch.logspace", "torch.logspace", "torch.logspace", "nn.MSELoss."], "function", ["None"], ["", "def", "get_loss", "(", "outputs", ",", "labels", ",", "last_period", "=", "False", ")", ":", "\n", "    ", "assert", "len", "(", "outputs", ")", "==", "len", "(", "labels", ")", "\n", "\n", "loss_fn", "=", "nn", ".", "MSELoss", "(", ")", "\n", "len_outputs", "=", "len", "(", "outputs", ")", "\n", "if", "last_period", ":", "\n", "        ", "multiplier", "=", "torch", ".", "logspace", "(", "len_outputs", ",", "1", ",", "len_outputs", ",", "base", "=", "0.8", ")", "\n", "", "else", ":", "\n", "        ", "multiplier", "=", "torch", ".", "logspace", "(", "len_outputs", "-", "1", ",", "0", ",", "len_outputs", ",", "base", "=", "0.8", ")", "\n", "\n", "", "loss", "=", "0", "\n", "for", "i", "in", "range", "(", "len_outputs", ")", ":", "\n", "        ", "loss", "+=", "multiplier", "[", "i", "]", "*", "loss_fn", "(", "outputs", "[", "i", "]", ",", "labels", "[", "i", "]", ")", "# default is F norm", "\n", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet50.cosine_loss": [[250, 262], ["len", "torch.logspace", "torch.logspace", "torch.logspace", "torch.logspace", "torch.logspace", "range", "len", "len", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.cosine_similarity", "torch.cosine_similarity", "torch.cosine_similarity", "torch.cosine_similarity", "torch.cosine_similarity"], "function", ["None"], ["", "def", "cosine_loss", "(", "outputs", ",", "labels", ")", ":", "\n", "    ", "assert", "len", "(", "outputs", ")", "==", "len", "(", "labels", ")", "\n", "\n", "len_outputs", "=", "len", "(", "outputs", ")", "\n", "multiplier", "=", "torch", ".", "logspace", "(", "len_outputs", "-", "1", ",", "0", ",", "len_outputs", ",", "base", "=", "0.8", ")", "\n", "\n", "loss", "=", "0", "\n", "for", "i", "in", "range", "(", "len_outputs", ")", ":", "\n", "        ", "loss_i", "=", "1.0", "-", "torch", ".", "mean", "(", "torch", ".", "cosine_similarity", "(", "outputs", "[", "i", "]", ",", "labels", "[", "i", "]", ")", ")", "\n", "loss", "+=", "multiplier", "[", "i", "]", "*", "loss_i", "\n", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet50.validate": [[264, 283], ["models.students.resnet50.archnet_resnet50", "models.students.resnet50.archnet_resnet50.state_dict", "os.listdir", "len", "train_archnet_resnet50.get_print_info", "os.path.join", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load.items", "models.students.resnet50.archnet_resnet50.load_state_dict", "print", "evaluate.imagenet_validataion.imagenet_validation", "logger.info"], "function", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.archnet_resnet50", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet34.get_print_info", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.evaluate.imagenet_validataion.imagenet_validation"], ["", "def", "validate", "(", "model_dir", ",", "training_periods", ",", "logger", ",", "workers", ",", "args", ")", ":", "\n", "# build new model", "\n", "    ", "new_model", "=", "student_model_function", "(", "args", ".", "weight_bit", ",", "args", ".", "feature_bit", ",", "squeeze_factor", "=", "24", ",", "distillation_idx", "=", "None", ",", "is_train", "=", "False", ")", "\n", "new_model_state_dict", "=", "new_model", ".", "state_dict", "(", ")", "\n", "last_period", "=", "'period_{}'", ".", "format", "(", "len", "(", "training_periods", ")", "-", "1", ")", "\n", "for", "path", "in", "os", ".", "listdir", "(", "model_dir", ")", ":", "\n", "        ", "if", "last_period", "in", "path", ":", "\n", "            ", "model_name", ",", "period", ",", "epoch", "=", "get_print_info", "(", "path", ")", "\n", "model_path", "=", "os", ".", "path", ".", "join", "(", "model_dir", ",", "path", ")", "\n", "model_state_dict", "=", "torch", ".", "load", "(", "model_path", ",", "map_location", "=", "'cpu'", ")", "\n", "for", "k", ",", "v", "in", "model_state_dict", ".", "items", "(", ")", ":", "\n", "                ", "new_model_state_dict", "[", "k", "[", "7", ":", "]", "]", "=", "v", "\n", "", "new_model", ".", "load_state_dict", "(", "new_model_state_dict", ")", "\n", "\n", "# validate", "\n", "print", "(", "'Start evaluating model: '", "+", "model_name", ")", "\n", "prec1", ",", "prec5", "=", "imagenet_validation", "(", "new_model", ",", "args", ".", "val_data_path", ",", "num_threads", "=", "workers", ",", "model_name", "=", "model_name", ",", "batch_size", "=", "32", ")", "\n", "info_str", "=", "f'Period: {period} Epoch: {epoch} | top-1: {prec1} | top-5: {prec5}'", "\n", "logger", ".", "info", "(", "info_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet50.get_print_info": [[285, 292], ["model_name.split", "model_path.split"], "function", ["None"], ["", "", "", "def", "get_print_info", "(", "model_path", ")", ":", "\n", "    ", "model_name", "=", "model_path", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "period_and_epoch", "=", "model_name", ".", "split", "(", "'_'", ")", "\n", "period", "=", "period_and_epoch", "[", "1", "]", "\n", "epoch", "=", "period_and_epoch", "[", "-", "1", "]", "\n", "\n", "return", "model_name", ",", "period", ",", "epoch", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet50.construct_logger": [[294, 312], ["logging.getLogger", "logging.getLogger.setLevel", "str", "logging.FileHandler", "logging.FileHandler.setLevel", "logging.Formatter", "logging.FileHandler.setFormatter", "logging.getLogger.addHandler", "subprocess.check_output().strip", "isinstance", "datetime.datetime.now().strftime", "os.path.join", "ret.decode.decode", "subprocess.check_output", "datetime.datetime.now", "shlex.split", "train_archnet_resnet50.construct_logger.git_hash"], "function", ["None"], ["", "def", "construct_logger", "(", "name", ",", "save_dir", ")", ":", "\n", "    ", "def", "git_hash", "(", ")", ":", "\n", "        ", "cmd", "=", "'git log -n 1 --pretty=\"%h\"'", "\n", "ret", "=", "subprocess", ".", "check_output", "(", "shlex", ".", "split", "(", "cmd", ")", ")", ".", "strip", "(", ")", "\n", "if", "isinstance", "(", "ret", ",", "bytes", ")", ":", "\n", "            ", "ret", "=", "ret", ".", "decode", "(", ")", "\n", "", "return", "ret", "\n", "\n", "", "logger", "=", "logging", ".", "getLogger", "(", "name", ")", "\n", "logger", ".", "setLevel", "(", "logging", ".", "DEBUG", ")", "\n", "date", "=", "str", "(", "datetime", ".", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%m%d%H'", ")", ")", "\n", "fh", "=", "logging", ".", "FileHandler", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "f'log-{date}-{git_hash()}.txt'", ")", ")", "\n", "fh", ".", "setLevel", "(", "logging", ".", "DEBUG", ")", "\n", "formatter", "=", "logging", ".", "Formatter", "(", "\"%(asctime)s %(name)s %(levelname)s: %(message)s\"", ")", "\n", "fh", ".", "setFormatter", "(", "formatter", ")", "\n", "logger", ".", "addHandler", "(", "fh", ")", "\n", "\n", "return", "logger", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet50.main": [[314, 444], ["datetime.datetime.now", "parser.parse_args", "train_archnet_resnet50.construct_logger", "train_archnet_resnet50.get_teacher_model", "torch.nn.parallel.DistributedDataParallel.to", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel.eval", "datasets.imagenet_dataset.CustomImagenetDataset", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "train_archnet_resnet50.AverageMeter", "sum", "enumerate", "datetime.datetime.now", "str", "os.path.exists", "os.makedirs", "train_archnet_resnet50.get_student_model", "torch.distributed.barrier", "torch.distributed.barrier", "torch.distributed.barrier", "torch.distributed.barrier", "torch.distributed.barrier", "torch.nn.SyncBatchNorm.convert_sync_batchnorm.to", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.SyncBatchNorm.convert_sync_batchnorm.train", "torch.Adam", "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts", "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts", "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts", "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts", "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts", "range", "print", "print", "print", "print", "train_archnet_resnet50.validate", "print", "train_archnet_resnet50.validate", "torchvision.Compose", "torch.distributed.new_group", "torch.distributed.new_group", "torch.distributed.new_group", "torch.distributed.new_group", "torch.distributed.new_group", "torch.nn.SyncBatchNorm.convert_sync_batchnorm", "torch.nn.SyncBatchNorm.convert_sync_batchnorm", "torch.nn.SyncBatchNorm.convert_sync_batchnorm", "torch.nn.SyncBatchNorm.convert_sync_batchnorm", "torch.nn.SyncBatchNorm.convert_sync_batchnorm", "torch.nn.SyncBatchNorm.convert_sync_batchnorm.parameters", "print", "time.time", "torch.utils.data.distributed.DistributedSampler.set_epoch", "enumerate", "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.step", "torch.distributed.barrier", "torch.distributed.barrier", "torch.distributed.barrier", "torch.distributed.barrier", "torch.distributed.barrier", "str", "mixup_data.cuda", "optim.Adam.zero_grad", "torch.nn.SyncBatchNorm.convert_sync_batchnorm.", "get_loss.backward", "optim.Adam.step", "train_archnet_resnet50.AverageMeter.update", "time.time", "get_loss.item", "torch.initial_seed", "torch.initial_seed", "torch.initial_seed", "torch.initial_seed", "torch.initial_seed", "range", "torchvision.Resize", "torchvision.CenterCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.Normalize", "random.random", "train_archnet_resnet50.mixup_data", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.nn.parallel.DistributedDataParallel.", "train_archnet_resnet50.get_loss", "print", "len", "os.path.join", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "str().replace", "len", "train_archnet_resnet50.get_loss", "train_archnet_resnet50.cosine_loss", "time.time", "torch.nn.SyncBatchNorm.convert_sync_batchnorm.state_dict", "os.path.join", "os.path.exists", "os.path.join", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "os.remove", "torch.nn.SyncBatchNorm.convert_sync_batchnorm.state_dict", "str", "str", "len", "datetime.timedelta"], "function", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet34.construct_logger", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.get_teacher_model", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.get_student_model", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.validate", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.validate", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.dorefa.quantize_helper.QuantWeight.backward", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet34.AverageMeter.update", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet50.mixup_data", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.get_loss", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.get_loss", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet34.cosine_loss"], ["", "def", "main", "(", ")", ":", "\n", "    ", "start_time", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "training_periods", "=", "[", "args", ".", "first_period_epochs", "]", "+", "[", "args", ".", "middle_period_epochs", "for", "_", "in", "range", "(", "args", ".", "number_of_middle_periods", ")", "]", "+", "[", "args", ".", "last_period_epochs", "]", "\n", "save_dir", "=", "args", ".", "output_path", "+", "'_lr'", "+", "str", "(", "args", ".", "lr", ")", ".", "replace", "(", "'.'", ",", "'_'", ")", "+", "'_bs'", "+", "str", "(", "args", ".", "batch_size", ")", "+", "'_images'", "+", "str", "(", "args", ".", "total_images_per_period", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "save_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "save_dir", ",", "exist_ok", "=", "True", ")", "\n", "", "logger", "=", "construct_logger", "(", "'resnet50'", ",", "save_dir", ")", "\n", "\n", "if", "args", ".", "evaluate", ":", "\n", "        ", "if", "local_rank", "==", "0", ":", "\n", "            ", "print", "(", "'Start Validating...'", ")", "\n", "validate", "(", "save_dir", ",", "training_periods", ",", "logger", ",", "args", ".", "validate_workers", ",", "args", ")", "\n", "", "return", "\n", "\n", "# get teacher model", "\n", "", "teacher_model", "=", "get_teacher_model", "(", "args", ".", "teacher_model_path", ")", "\n", "teacher_model", "=", "teacher_model", ".", "to", "(", "device", ")", "\n", "teacher_model", "=", "torch", ".", "nn", ".", "parallel", ".", "DistributedDataParallel", "(", "teacher_model", ",", "device_ids", "=", "[", "local_rank", "]", ",", "output_device", "=", "local_rank", ",", "find_unused_parameters", "=", "True", ")", "\n", "teacher_model", ".", "eval", "(", ")", "\n", "\n", "# prepare datalaoder", "\n", "ds", "=", "imagenet_dataset", "(", "args", ".", "train_data_path", ",", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "256", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "224", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ",", "\n", "]", ")", ",", "num_images", "=", "args", ".", "total_images_all_periods", ")", "\n", "sampler", "=", "DistributedSampler", "(", "ds", ")", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "ds", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "False", ",", "num_workers", "=", "args", ".", "workers", ",", "pin_memory", "=", "True", ",", "sampler", "=", "sampler", ")", "\n", "iters_per_epoch", "=", "args", ".", "total_images_per_period", "//", "args", ".", "batch_size", "//", "args", ".", "num_gpus", "\n", "\n", "batch_time", "=", "AverageMeter", "(", ")", "\n", "total_epochs", "=", "sum", "(", "training_periods", "[", "args", ".", "restart_period", ":", "]", ")", "\n", "current_total_epochs", "=", "0", "\n", "for", "idx", ",", "training_period", "in", "enumerate", "(", "training_periods", ")", ":", "\n", "        ", "if", "idx", "<", "args", ".", "restart_period", ":", "\n", "            ", "continue", "\n", "# get student model and its middle output", "\n", "", "student_model", "=", "get_student_model", "(", "args", ".", "teacher_model_path", ",", "idx", ",", "save_dir", ",", "training_periods", ",", "args", ")", "\n", "torch", ".", "distributed", ".", "barrier", "(", ")", "\n", "student_model", "=", "student_model", ".", "to", "(", "device", ")", "\n", "if", "args", ".", "sync_bn", ":", "\n", "            ", "process_group", "=", "torch", ".", "distributed", ".", "new_group", "(", ")", "\n", "student_model", "=", "torch", ".", "nn", ".", "SyncBatchNorm", ".", "convert_sync_batchnorm", "(", "student_model", ",", "process_group", ")", "\n", "", "student_model", "=", "torch", ".", "nn", ".", "parallel", ".", "DistributedDataParallel", "(", "student_model", ",", "device_ids", "=", "[", "local_rank", "]", ",", "output_device", "=", "local_rank", ",", "find_unused_parameters", "=", "True", ")", "\n", "student_model", ".", "train", "(", ")", "\n", "\n", "cudnn", ".", "benchmark", "=", "True", "\n", "\n", "# optimizer", "\n", "opt", "=", "optim", ".", "Adam", "(", "student_model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ",", "weight_decay", "=", "args", ".", "weight_decay", ")", "\n", "\n", "# distillation", "\n", "scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "CosineAnnealingWarmRestarts", "(", "opt", ",", "T_0", "=", "10", ",", "T_mult", "=", "2", ")", "\n", "\n", "if", "local_rank", "==", "0", ":", "\n", "            ", "print", "(", "'Start Training Period {}, {} epochs in total'", ".", "format", "(", "idx", ",", "training_period", ")", ")", "\n", "", "for", "epoch", "in", "range", "(", "training_period", ")", ":", "\n", "            ", "current_total_epochs", "+=", "1", "\n", "running_loss", "=", "0.0", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "sampler", ".", "set_epoch", "(", "current_total_epochs", ")", "\n", "for", "new_idx", ",", "sample", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "                ", "if", "new_idx", ">", "args", ".", "total_images_per_period", "//", "args", ".", "batch_size", "//", "args", ".", "num_gpus", "-", "1", ":", "\n", "                    ", "break", "\n", "", "inputs", "=", "sample", "[", "0", "]", "\n", "if", "random", ".", "random", "(", ")", ">", "0.9", ":", "\n", "                    ", "inputs", "=", "mixup_data", "(", "inputs", ",", "1.0", ")", "\n", "", "inputs", "=", "inputs", ".", "cuda", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "labels", "=", "teacher_model", "(", "inputs", ")", "\n", "\n", "", "opt", ".", "zero_grad", "(", ")", "\n", "student_model_middle_output", "=", "student_model", "(", "[", "labels", ",", "inputs", "]", ")", "\n", "if", "idx", "==", "len", "(", "training_periods", ")", "-", "1", ":", "\n", "                    ", "loss", "=", "get_loss", "(", "student_model_middle_output", "[", ":", "-", "1", "]", ",", "labels", "[", ":", "-", "1", "]", ",", "last_period", "=", "True", ")", "+", "cosine_loss", "(", "[", "student_model_middle_output", "[", "-", "1", "]", "]", ",", "[", "labels", "[", "-", "1", "]", "]", ")", "\n", "", "else", ":", "\n", "                    ", "loss", "=", "get_loss", "(", "student_model_middle_output", ",", "labels", "[", ":", "idx", "+", "1", "]", ")", "\n", "", "loss", ".", "backward", "(", ")", "\n", "opt", ".", "step", "(", ")", "\n", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "eta", "=", "batch_time", ".", "avg", "*", "(", "iters_per_epoch", "-", "1", "-", "new_idx", "+", "iters_per_epoch", "*", "(", "total_epochs", "-", "current_total_epochs", "-", "1", ")", ")", "//", "1", "\n", "\n", "# print statistics", "\n", "running_loss", "+=", "loss", ".", "item", "(", ")", "\n", "if", "new_idx", "%", "args", ".", "print_frequency", "==", "args", ".", "print_frequency", "-", "1", "and", "local_rank", "==", "0", ":", "# print every 1 mini-batch", "\n", "                    ", "print", "(", "\n", "'Period/Epoch/Iteration: [{0}/{1}/{2}] '", "\n", "'Loss: {loss:.10f} '", "\n", "'Eta: {eta}'", ".", "format", "(", "\n", "idx", ",", "\n", "epoch", "+", "1", ",", "\n", "new_idx", "+", "1", ",", "\n", "loss", "=", "running_loss", "/", "args", ".", "print_frequency", ",", "\n", "eta", "=", "str", "(", "datetime", ".", "timedelta", "(", "seconds", "=", "eta", ")", ")", ",", "\n", ")", ")", "\n", "running_loss", "=", "0.0", "\n", "", "", "scheduler", ".", "step", "(", ")", "\n", "\n", "if", "idx", "<", "len", "(", "training_periods", ")", "-", "1", ":", "\n", "                ", "if", "epoch", "==", "training_period", "-", "1", "and", "local_rank", "==", "0", ":", "\n", "                    ", "model_path", "=", "'period_{}_epoch_{}.pth'", ".", "format", "(", "idx", ",", "epoch", "+", "1", ")", "\n", "model_save_path", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "model_path", ")", "\n", "torch", ".", "save", "(", "student_model", ".", "state_dict", "(", ")", ",", "model_save_path", ")", "\n", "\n", "if", "idx", ">", "0", "and", "idx", "<", "len", "(", "training_periods", ")", "-", "1", "and", "local_rank", "==", "0", ":", "\n", "                        ", "delete_model_path", "=", "'period_{}_epoch_{}.pth'", ".", "format", "(", "idx", "-", "1", ",", "training_periods", "[", "idx", "-", "1", "]", ")", "\n", "delete_model_save_path", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "delete_model_path", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "delete_model_save_path", ")", ":", "\n", "                            ", "os", ".", "remove", "(", "delete_model_save_path", ")", "\n", "", "", "", "", "elif", "local_rank", "==", "0", ":", "\n", "                ", "if", "epoch", ">", "args", ".", "last_period_epochs", "-", "20", ":", "\n", "                    ", "model_path", "=", "'period_{}_epoch_{}.pth'", ".", "format", "(", "idx", ",", "epoch", "+", "1", ")", "\n", "model_save_path", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "model_path", ")", "\n", "torch", ".", "save", "(", "student_model", ".", "state_dict", "(", ")", ",", "model_save_path", ")", "\n", "", "", "torch", ".", "distributed", ".", "barrier", "(", ")", "\n", "\n", "", "", "end_time", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "\n", "if", "local_rank", "==", "0", ":", "\n", "        ", "print", "(", "'The torch random seed of the training procedure is {}'", ".", "format", "(", "torch", ".", "initial_seed", "(", ")", ")", ")", "\n", "print", "(", "'It took {} to train'", ".", "format", "(", "end_time", "-", "start_time", ")", ")", "\n", "print", "(", "'The save path is '", "+", "save_dir", ")", "\n", "print", "(", "'Finish Training. Start Validating...'", ")", "\n", "validate", "(", "save_dir", ",", "training_periods", ",", "logger", ",", "args", ".", "validate_workers", ",", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet34.AverageMeter.__init__": [[429, 431], ["train_archnet_resnet34.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet34.AverageMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet34.AverageMeter.reset": [[432, 437], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet34.AverageMeter.update": [[438, 443], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet34.get_teacher_model": [[170, 176], ["torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "models.teachers.resnet.resnet34", "models.teachers.resnet.resnet34.load_state_dict"], "function", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.resnet34"], ["def", "get_teacher_model", "(", "teacher_model_path", ")", ":", "\n", "    ", "teacher_model_state_dict", "=", "torch", ".", "load", "(", "teacher_model_path", ",", "map_location", "=", "'cpu'", ")", "\n", "teacher_model", "=", "teacher_model_function", "(", ")", "\n", "teacher_model", ".", "load_state_dict", "(", "teacher_model_state_dict", ")", "\n", "\n", "return", "teacher_model", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet34.get_student_model": [[178, 214], ["models.students.resnet34.archnet_resnet34", "models.students.resnet34.archnet_resnet34.state_dict", "models.students.resnet34.archnet_resnet34.load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "student_model.state_dict.keys", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load.items", "k.split"], "function", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet34.archnet_resnet34"], ["", "def", "get_student_model", "(", "teacher_model_path", ",", "idx", ",", "saved_model_path", ",", "training_periods", ",", "args", ")", ":", "\n", "    ", "student_model", "=", "student_model_function", "(", "args", ".", "weight_bit", ",", "args", ".", "feature_bit", ",", "squeeze_factor", "=", "24", ",", "distillation_idx", "=", "idx", ",", "is_train", "=", "True", ")", "\n", "student_model_state_dict", "=", "student_model", ".", "state_dict", "(", ")", "\n", "\n", "if", "idx", "==", "0", ":", "\n", "        ", "teacher_model_state_dict", "=", "torch", ".", "load", "(", "teacher_model_path", ",", "map_location", "=", "'cpu'", ")", "\n", "for", "k", "in", "student_model_state_dict", ".", "keys", "(", ")", ":", "\n", "            ", "if", "k", "==", "'conv1.conv_Q.weight'", "or", "(", "'layer'", "not", "in", "k", "and", "'bn1'", "in", "k", ")", ":", "\n", "                ", "continue", "\n", "", "elif", "k", "in", "teacher_model_state_dict", ":", "\n", "                ", "student_model_state_dict", "[", "k", "]", "=", "teacher_model_state_dict", "[", "k", "]", "\n", "# conv weight and bias", "\n", "", "elif", "'.conv_Q'", "in", "k", "and", "'concat'", "not", "in", "k", "and", "'fc'", "not", "in", "k", ":", "\n", "                ", "k_split", "=", "k", ".", "split", "(", "'.conv_Q'", ")", "\n", "new_k", "=", "''", ".", "join", "(", "k_split", ")", "\n", "if", "new_k", "in", "teacher_model_state_dict", ":", "\n", "                    ", "if", "'downsample'", "in", "k", ":", "\n", "                        ", "student_v", "=", "student_model_state_dict", "[", "k", "]", "\n", "student_v", "[", ":", "]", "=", "1e-10", "\n", "student_v", "[", ":", ",", ":", ",", "1", ":", "2", ",", "1", ":", "2", "]", "=", "teacher_model_state_dict", "[", "new_k", "]", "\n", "student_model_state_dict", "[", "k", "]", "=", "student_v", "\n", "", "else", ":", "\n", "                        ", "student_model_state_dict", "[", "k", "]", "=", "teacher_model_state_dict", "[", "new_k", "]", "\n", "# elif 'fc.linear_Q.weight' in k:", "\n", "#     student_model_state_dict[k] = teacher_model_state_dict['fc.weight']", "\n", "# elif 'fc.linear_Q.bias' in k:", "\n", "#     student_model_state_dict[k] = teacher_model_state_dict['fc.bias']", "\n", "", "", "", "", "", "else", ":", "\n", "        ", "distillation_model_path", "=", "saved_model_path", "+", "'/period_{}_epoch_{}.pth'", ".", "format", "(", "idx", "-", "1", ",", "training_periods", "[", "idx", "-", "1", "]", ")", "\n", "student_model_state_dict_multigpus", "=", "torch", ".", "load", "(", "distillation_model_path", ",", "map_location", "=", "'cpu'", ")", "\n", "for", "k", ",", "v", "in", "student_model_state_dict_multigpus", ".", "items", "(", ")", ":", "\n", "            ", "student_model_state_dict", "[", "k", "[", "7", ":", "]", "]", "=", "v", "\n", "\n", "", "", "student_model", ".", "load_state_dict", "(", "student_model_state_dict", ")", "\n", "\n", "return", "student_model", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet34.get_loss": [[216, 231], ["torch.MSELoss", "len", "range", "len", "len", "torch.logspace", "torch.logspace", "torch.logspace", "torch.logspace", "torch.logspace", "torch.logspace", "torch.logspace", "torch.logspace", "torch.logspace", "torch.logspace", "nn.MSELoss."], "function", ["None"], ["", "def", "get_loss", "(", "outputs", ",", "labels", ",", "last_period", "=", "False", ")", ":", "\n", "    ", "assert", "len", "(", "outputs", ")", "==", "len", "(", "labels", ")", "\n", "\n", "loss_fn", "=", "nn", ".", "MSELoss", "(", ")", "\n", "len_outputs", "=", "len", "(", "outputs", ")", "\n", "if", "last_period", ":", "\n", "        ", "multiplier", "=", "torch", ".", "logspace", "(", "len_outputs", ",", "1", ",", "len_outputs", ",", "base", "=", "0.8", ")", "\n", "", "else", ":", "\n", "        ", "multiplier", "=", "torch", ".", "logspace", "(", "len_outputs", "-", "1", ",", "0", ",", "len_outputs", ",", "base", "=", "0.8", ")", "\n", "\n", "", "loss", "=", "0", "\n", "for", "i", "in", "range", "(", "len_outputs", ")", ":", "\n", "        ", "loss", "+=", "multiplier", "[", "i", "]", "*", "loss_fn", "(", "outputs", "[", "i", "]", ",", "labels", "[", "i", "]", ")", "# default is F norm", "\n", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet34.cosine_loss": [[233, 245], ["len", "torch.logspace", "torch.logspace", "torch.logspace", "torch.logspace", "torch.logspace", "range", "len", "len", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.cosine_similarity", "torch.cosine_similarity", "torch.cosine_similarity", "torch.cosine_similarity", "torch.cosine_similarity"], "function", ["None"], ["", "def", "cosine_loss", "(", "outputs", ",", "labels", ")", ":", "\n", "    ", "assert", "len", "(", "outputs", ")", "==", "len", "(", "labels", ")", "\n", "\n", "len_outputs", "=", "len", "(", "outputs", ")", "\n", "multiplier", "=", "torch", ".", "logspace", "(", "len_outputs", "-", "1", ",", "0", ",", "len_outputs", ",", "base", "=", "0.8", ")", "\n", "\n", "loss", "=", "0", "\n", "for", "i", "in", "range", "(", "len_outputs", ")", ":", "\n", "        ", "loss_i", "=", "1.0", "-", "torch", ".", "mean", "(", "torch", ".", "cosine_similarity", "(", "outputs", "[", "i", "]", ",", "labels", "[", "i", "]", ")", ")", "\n", "loss", "+=", "multiplier", "[", "i", "]", "*", "loss_i", "\n", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet34.validate": [[247, 266], ["models.students.resnet34.archnet_resnet34", "models.students.resnet34.archnet_resnet34.state_dict", "os.listdir", "len", "train_archnet_resnet34.get_print_info", "os.path.join", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load.items", "models.students.resnet34.archnet_resnet34.load_state_dict", "print", "evaluate.imagenet_validataion.imagenet_validation", "logger.info"], "function", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet34.archnet_resnet34", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet34.get_print_info", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.evaluate.imagenet_validataion.imagenet_validation"], ["", "def", "validate", "(", "model_dir", ",", "training_periods", ",", "logger", ",", "workers", ",", "args", ")", ":", "\n", "# build new model", "\n", "    ", "new_model", "=", "student_model_function", "(", "args", ".", "weight_bit", ",", "args", ".", "feature_bit", ",", "squeeze_factor", "=", "24", ",", "distillation_idx", "=", "None", ",", "is_train", "=", "False", ")", "\n", "new_model_state_dict", "=", "new_model", ".", "state_dict", "(", ")", "\n", "last_period", "=", "'period_{}'", ".", "format", "(", "len", "(", "training_periods", ")", "-", "1", ")", "\n", "for", "path", "in", "os", ".", "listdir", "(", "model_dir", ")", ":", "\n", "        ", "if", "last_period", "in", "path", ":", "\n", "            ", "model_name", ",", "period", ",", "epoch", "=", "get_print_info", "(", "path", ")", "\n", "model_path", "=", "os", ".", "path", ".", "join", "(", "model_dir", ",", "path", ")", "\n", "model_state_dict", "=", "torch", ".", "load", "(", "model_path", ",", "map_location", "=", "'cpu'", ")", "\n", "for", "k", ",", "v", "in", "model_state_dict", ".", "items", "(", ")", ":", "\n", "                ", "new_model_state_dict", "[", "k", "[", "7", ":", "]", "]", "=", "v", "\n", "", "new_model", ".", "load_state_dict", "(", "new_model_state_dict", ")", "\n", "\n", "# validate", "\n", "print", "(", "'Start evaluating model: '", "+", "model_name", ")", "\n", "prec1", ",", "prec5", "=", "imagenet_validation", "(", "new_model", ",", "args", ".", "val_data_path", ",", "num_threads", "=", "workers", ",", "model_name", "=", "model_name", ",", "batch_size", "=", "32", ")", "\n", "info_str", "=", "f'Period: {period} Epoch: {epoch} | top-1: {prec1} | top-5: {prec5}'", "\n", "logger", ".", "info", "(", "info_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet34.get_print_info": [[268, 275], ["model_name.split", "model_path.split"], "function", ["None"], ["", "", "", "def", "get_print_info", "(", "model_path", ")", ":", "\n", "    ", "model_name", "=", "model_path", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "period_and_epoch", "=", "model_name", ".", "split", "(", "'_'", ")", "\n", "period", "=", "period_and_epoch", "[", "1", "]", "\n", "epoch", "=", "period_and_epoch", "[", "-", "1", "]", "\n", "\n", "return", "model_name", ",", "period", ",", "epoch", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet34.construct_logger": [[277, 295], ["logging.getLogger", "logging.getLogger.setLevel", "str", "logging.FileHandler", "logging.FileHandler.setLevel", "logging.Formatter", "logging.FileHandler.setFormatter", "logging.getLogger.addHandler", "subprocess.check_output().strip", "isinstance", "datetime.datetime.now().strftime", "os.path.join", "ret.decode.decode", "subprocess.check_output", "datetime.datetime.now", "shlex.split", "train_archnet_resnet34.construct_logger.git_hash"], "function", ["None"], ["", "def", "construct_logger", "(", "name", ",", "save_dir", ")", ":", "\n", "    ", "def", "git_hash", "(", ")", ":", "\n", "        ", "cmd", "=", "'git log -n 1 --pretty=\"%h\"'", "\n", "ret", "=", "subprocess", ".", "check_output", "(", "shlex", ".", "split", "(", "cmd", ")", ")", ".", "strip", "(", ")", "\n", "if", "isinstance", "(", "ret", ",", "bytes", ")", ":", "\n", "            ", "ret", "=", "ret", ".", "decode", "(", ")", "\n", "", "return", "ret", "\n", "\n", "", "logger", "=", "logging", ".", "getLogger", "(", "name", ")", "\n", "logger", ".", "setLevel", "(", "logging", ".", "DEBUG", ")", "\n", "date", "=", "str", "(", "datetime", ".", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%m%d%H'", ")", ")", "\n", "fh", "=", "logging", ".", "FileHandler", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "f'log-{date}-{git_hash()}.txt'", ")", ")", "\n", "fh", ".", "setLevel", "(", "logging", ".", "DEBUG", ")", "\n", "formatter", "=", "logging", ".", "Formatter", "(", "\"%(asctime)s %(name)s %(levelname)s: %(message)s\"", ")", "\n", "fh", ".", "setFormatter", "(", "formatter", ")", "\n", "logger", ".", "addHandler", "(", "fh", ")", "\n", "\n", "return", "logger", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet34.main": [[297, 424], ["datetime.datetime.now", "parser.parse_args", "train_archnet_resnet34.construct_logger", "train_archnet_resnet34.get_teacher_model", "torch.nn.parallel.DistributedDataParallel.to", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel.eval", "datasets.imagenet_dataset.CustomImagenetDataset", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "train_archnet_resnet34.AverageMeter", "sum", "enumerate", "datetime.datetime.now", "str", "os.path.exists", "os.makedirs", "train_archnet_resnet34.get_student_model", "torch.distributed.barrier", "torch.distributed.barrier", "torch.distributed.barrier", "torch.distributed.barrier", "torch.distributed.barrier", "torch.nn.SyncBatchNorm.convert_sync_batchnorm.to", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.SyncBatchNorm.convert_sync_batchnorm.train", "torch.Adam", "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts", "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts", "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts", "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts", "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts", "range", "print", "print", "print", "print", "train_archnet_resnet34.validate", "print", "train_archnet_resnet34.validate", "torchvision.Compose", "torch.distributed.new_group", "torch.distributed.new_group", "torch.distributed.new_group", "torch.distributed.new_group", "torch.distributed.new_group", "torch.nn.SyncBatchNorm.convert_sync_batchnorm", "torch.nn.SyncBatchNorm.convert_sync_batchnorm", "torch.nn.SyncBatchNorm.convert_sync_batchnorm", "torch.nn.SyncBatchNorm.convert_sync_batchnorm", "torch.nn.SyncBatchNorm.convert_sync_batchnorm", "torch.nn.SyncBatchNorm.convert_sync_batchnorm.parameters", "print", "time.time", "torch.utils.data.distributed.DistributedSampler.set_epoch", "enumerate", "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.step", "torch.distributed.barrier", "torch.distributed.barrier", "torch.distributed.barrier", "torch.distributed.barrier", "torch.distributed.barrier", "str", "optim.Adam.zero_grad", "torch.nn.SyncBatchNorm.convert_sync_batchnorm.", "get_loss.backward", "optim.Adam.step", "train_archnet_resnet34.AverageMeter.update", "time.time", "get_loss.item", "torch.initial_seed", "torch.initial_seed", "torch.initial_seed", "torch.initial_seed", "torch.initial_seed", "range", "torchvision.Resize", "torchvision.CenterCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.Normalize", "sample[].cuda", "sample[].cuda", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.nn.parallel.DistributedDataParallel.", "train_archnet_resnet34.get_loss", "print", "len", "os.path.join", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "str().replace", "len", "train_archnet_resnet34.get_loss", "train_archnet_resnet34.cosine_loss", "time.time", "torch.nn.SyncBatchNorm.convert_sync_batchnorm.state_dict", "os.path.join", "os.path.exists", "os.path.join", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "os.remove", "torch.nn.SyncBatchNorm.convert_sync_batchnorm.state_dict", "str", "str", "len", "datetime.timedelta"], "function", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet34.construct_logger", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.get_teacher_model", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.get_student_model", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.validate", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.validate", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.dorefa.quantize_helper.QuantWeight.backward", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet34.AverageMeter.update", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.get_loss", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.get_loss", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet34.cosine_loss"], ["", "def", "main", "(", ")", ":", "\n", "    ", "start_time", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "training_periods", "=", "[", "args", ".", "first_period_epochs", "]", "+", "[", "args", ".", "middle_period_epochs", "for", "_", "in", "range", "(", "args", ".", "number_of_middle_periods", ")", "]", "+", "[", "args", ".", "last_period_epochs", "]", "\n", "save_dir", "=", "args", ".", "output_path", "+", "'_lr'", "+", "str", "(", "args", ".", "lr", ")", ".", "replace", "(", "'.'", ",", "'_'", ")", "+", "'_bs'", "+", "str", "(", "args", ".", "batch_size", ")", "+", "'_images'", "+", "str", "(", "args", ".", "total_images_per_period", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "save_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "save_dir", ",", "exist_ok", "=", "True", ")", "\n", "", "logger", "=", "construct_logger", "(", "'resnet34'", ",", "save_dir", ")", "\n", "\n", "if", "args", ".", "evaluate", ":", "\n", "        ", "if", "local_rank", "==", "0", ":", "\n", "            ", "print", "(", "'Start Validating...'", ")", "\n", "validate", "(", "save_dir", ",", "training_periods", ",", "logger", ",", "args", ".", "validate_workers", ",", "args", ")", "\n", "", "return", "\n", "\n", "# get teacher model", "\n", "", "teacher_model", "=", "get_teacher_model", "(", "args", ".", "teacher_model_path", ")", "\n", "teacher_model", "=", "teacher_model", ".", "to", "(", "device", ")", "\n", "teacher_model", "=", "torch", ".", "nn", ".", "parallel", ".", "DistributedDataParallel", "(", "teacher_model", ",", "device_ids", "=", "[", "local_rank", "]", ",", "output_device", "=", "local_rank", ",", "find_unused_parameters", "=", "True", ")", "\n", "teacher_model", ".", "eval", "(", ")", "\n", "\n", "# prepare datalaoder", "\n", "ds", "=", "imagenet_dataset", "(", "args", ".", "train_data_path", ",", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "256", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "224", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ",", "\n", "]", ")", ",", "num_images", "=", "args", ".", "total_images_all_periods", ")", "\n", "sampler", "=", "DistributedSampler", "(", "ds", ")", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "ds", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "False", ",", "num_workers", "=", "args", ".", "workers", ",", "pin_memory", "=", "True", ",", "sampler", "=", "sampler", ")", "\n", "iters_per_epoch", "=", "args", ".", "total_images_per_period", "//", "args", ".", "batch_size", "//", "args", ".", "num_gpus", "\n", "\n", "batch_time", "=", "AverageMeter", "(", ")", "\n", "total_epochs", "=", "sum", "(", "training_periods", "[", "args", ".", "restart_period", ":", "]", ")", "\n", "current_total_epochs", "=", "0", "\n", "for", "idx", ",", "training_period", "in", "enumerate", "(", "training_periods", ")", ":", "\n", "        ", "if", "idx", "<", "args", ".", "restart_period", ":", "\n", "            ", "continue", "\n", "# get student model and its middle output", "\n", "", "student_model", "=", "get_student_model", "(", "args", ".", "teacher_model_path", ",", "idx", ",", "save_dir", ",", "training_periods", ",", "args", ")", "\n", "torch", ".", "distributed", ".", "barrier", "(", ")", "\n", "student_model", "=", "student_model", ".", "to", "(", "device", ")", "\n", "if", "args", ".", "sync_bn", ":", "\n", "            ", "process_group", "=", "torch", ".", "distributed", ".", "new_group", "(", ")", "\n", "student_model", "=", "torch", ".", "nn", ".", "SyncBatchNorm", ".", "convert_sync_batchnorm", "(", "student_model", ",", "process_group", ")", "\n", "", "student_model", "=", "torch", ".", "nn", ".", "parallel", ".", "DistributedDataParallel", "(", "student_model", ",", "device_ids", "=", "[", "local_rank", "]", ",", "output_device", "=", "local_rank", ",", "find_unused_parameters", "=", "True", ")", "\n", "student_model", ".", "train", "(", ")", "\n", "\n", "cudnn", ".", "benchmark", "=", "True", "\n", "\n", "# optimizer", "\n", "opt", "=", "optim", ".", "Adam", "(", "student_model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ",", "weight_decay", "=", "args", ".", "weight_decay", ")", "\n", "\n", "# distillation", "\n", "scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "CosineAnnealingWarmRestarts", "(", "opt", ",", "T_0", "=", "10", ",", "T_mult", "=", "2", ")", "\n", "\n", "if", "local_rank", "==", "0", ":", "\n", "            ", "print", "(", "'Start Training Period {}, {} epochs in total'", ".", "format", "(", "idx", ",", "training_period", ")", ")", "\n", "", "for", "epoch", "in", "range", "(", "training_period", ")", ":", "\n", "            ", "current_total_epochs", "+=", "1", "\n", "running_loss", "=", "0.0", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "sampler", ".", "set_epoch", "(", "current_total_epochs", ")", "\n", "for", "new_idx", ",", "sample", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "                ", "if", "new_idx", ">", "args", ".", "total_images_per_period", "//", "args", ".", "batch_size", "//", "args", ".", "num_gpus", "-", "1", ":", "\n", "                    ", "break", "\n", "", "inputs", ",", "_", "=", "sample", "[", "0", "]", ".", "cuda", "(", ")", ",", "sample", "[", "1", "]", ".", "cuda", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "labels", "=", "teacher_model", "(", "inputs", ")", "\n", "\n", "", "opt", ".", "zero_grad", "(", ")", "\n", "student_model_middle_output", "=", "student_model", "(", "[", "labels", ",", "inputs", "]", ")", "\n", "if", "idx", "==", "len", "(", "training_periods", ")", "-", "1", ":", "\n", "                    ", "loss", "=", "get_loss", "(", "student_model_middle_output", "[", ":", "-", "1", "]", ",", "labels", "[", ":", "-", "1", "]", ",", "last_period", "=", "True", ")", "+", "cosine_loss", "(", "[", "student_model_middle_output", "[", "-", "1", "]", "]", ",", "[", "labels", "[", "-", "1", "]", "]", ")", "\n", "", "else", ":", "\n", "                    ", "loss", "=", "get_loss", "(", "student_model_middle_output", ",", "labels", "[", ":", "idx", "+", "1", "]", ")", "\n", "", "loss", ".", "backward", "(", ")", "\n", "opt", ".", "step", "(", ")", "\n", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "eta", "=", "batch_time", ".", "avg", "*", "(", "iters_per_epoch", "-", "1", "-", "new_idx", "+", "iters_per_epoch", "*", "(", "total_epochs", "-", "current_total_epochs", "-", "1", ")", ")", "//", "1", "\n", "\n", "# print statistics", "\n", "running_loss", "+=", "loss", ".", "item", "(", ")", "\n", "if", "new_idx", "%", "args", ".", "print_frequency", "==", "args", ".", "print_frequency", "-", "1", "and", "local_rank", "==", "0", ":", "# print every 1 mini-batch", "\n", "                    ", "print", "(", "\n", "'Period/Epoch/Iteration: [{0}/{1}/{2}] '", "\n", "'Loss: {loss:.10f} '", "\n", "'Eta: {eta}'", ".", "format", "(", "\n", "idx", ",", "\n", "epoch", "+", "1", ",", "\n", "new_idx", "+", "1", ",", "\n", "loss", "=", "running_loss", "/", "args", ".", "print_frequency", ",", "\n", "eta", "=", "str", "(", "datetime", ".", "timedelta", "(", "seconds", "=", "eta", ")", ")", ",", "\n", ")", ")", "\n", "running_loss", "=", "0.0", "\n", "", "", "scheduler", ".", "step", "(", ")", "\n", "\n", "if", "idx", "<", "len", "(", "training_periods", ")", "-", "1", ":", "\n", "                ", "if", "epoch", "==", "training_period", "-", "1", "and", "local_rank", "==", "0", ":", "\n", "                    ", "model_path", "=", "'period_{}_epoch_{}.pth'", ".", "format", "(", "idx", ",", "epoch", "+", "1", ")", "\n", "model_save_path", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "model_path", ")", "\n", "torch", ".", "save", "(", "student_model", ".", "state_dict", "(", ")", ",", "model_save_path", ")", "\n", "\n", "if", "idx", ">", "0", "and", "idx", "<", "len", "(", "training_periods", ")", "-", "1", "and", "local_rank", "==", "0", ":", "\n", "                        ", "delete_model_path", "=", "'period_{}_epoch_{}.pth'", ".", "format", "(", "idx", "-", "1", ",", "training_periods", "[", "idx", "-", "1", "]", ")", "\n", "delete_model_save_path", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "delete_model_path", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "delete_model_save_path", ")", ":", "\n", "                            ", "os", ".", "remove", "(", "delete_model_save_path", ")", "\n", "", "", "", "", "elif", "local_rank", "==", "0", ":", "\n", "                ", "if", "epoch", ">", "args", ".", "last_period_epochs", "-", "20", ":", "\n", "                    ", "model_path", "=", "'period_{}_epoch_{}.pth'", ".", "format", "(", "idx", ",", "epoch", "+", "1", ")", "\n", "model_save_path", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "model_path", ")", "\n", "torch", ".", "save", "(", "student_model", ".", "state_dict", "(", ")", ",", "model_save_path", ")", "\n", "", "", "torch", ".", "distributed", ".", "barrier", "(", ")", "\n", "\n", "", "", "end_time", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "\n", "if", "local_rank", "==", "0", ":", "\n", "        ", "print", "(", "'The torch random seed of the training procedure is {}'", ".", "format", "(", "torch", ".", "initial_seed", "(", ")", ")", ")", "\n", "print", "(", "'It took {} to train'", ".", "format", "(", "end_time", "-", "start_time", ")", ")", "\n", "print", "(", "'The save path is '", "+", "save_dir", ")", "\n", "print", "(", "'Finish Training. Start Validating...'", ")", "\n", "validate", "(", "save_dir", ",", "training_periods", ",", "logger", ",", "args", ".", "validate_workers", ",", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.datasets.imagenet_dataset.CustomImagenetDataset.__init__": [[13, 26], ["torchvision.DatasetFolder.__init__", "random.shuffle"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "root", ":", "str", ",", "\n", "transform", ":", "Optional", "[", "Callable", "]", "=", "None", ",", "\n", "target_transform", ":", "Optional", "[", "Callable", "]", "=", "None", ",", "\n", "loader", ":", "Callable", "[", "[", "str", "]", ",", "Any", "]", "=", "datasets", ".", "folder", ".", "default_loader", ",", "\n", "is_valid_file", ":", "Optional", "[", "Callable", "[", "[", "str", "]", ",", "bool", "]", "]", "=", "None", ",", "\n", "num_images", ":", "int", "=", "0", ",", "\n", ")", ":", "\n", "        ", "super", "(", "CustomImagenetDataset", ",", "self", ")", ".", "__init__", "(", "root", ",", "loader", ",", "IMG_EXTENSIONS", "if", "is_valid_file", "is", "None", "else", "None", ",", "transform", "=", "transform", ",", "target_transform", "=", "target_transform", ",", "is_valid_file", "=", "is_valid_file", ")", "\n", "if", "num_images", ">", "0", ":", "\n", "            ", "random", ".", "shuffle", "(", "self", ".", "samples", ")", "\n", "self", ".", "samples", "=", "self", ".", "samples", "[", ":", "num_images", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules.FunStopGradient.forward": [[43, 47], ["ctx.save_for_backward"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "weight", ",", "stopGradientMask", ")", ":", "\n", "        ", "ctx", ".", "save_for_backward", "(", "stopGradientMask", ")", "\n", "return", "weight", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules.FunStopGradient.backward": [[48, 53], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_outputs", ")", ":", "\n", "        ", "stopGradientMask", ",", "=", "ctx", ".", "saved_tensors", "\n", "grad_inputs", "=", "grad_outputs", "*", "stopGradientMask", "\n", "return", "grad_inputs", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules._Conv2dQ.__init__": [[179, 194], ["torch.Conv2d.__init__", "lsq_modules.get_default_kwargs_q", "lsq_modules._Conv2dQ.register_buffer", "lsq_modules._Conv2dQ.register_parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules.get_default_kwargs_q"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "bias", "=", "True", ",", "**", "kwargs_q", ")", ":", "\n", "        ", "super", "(", "_Conv2dQ", ",", "self", ")", ".", "__init__", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "groups", "=", "groups", ",", "bias", "=", "bias", ")", "\n", "self", ".", "kwargs_q", "=", "get_default_kwargs_q", "(", "kwargs_q", ",", "layer_type", "=", "self", ")", "\n", "self", ".", "nbits", "=", "kwargs_q", "[", "'nbits'", "]", "\n", "if", "self", ".", "nbits", "<", "0", ":", "\n", "            ", "self", ".", "register_parameter", "(", "'alpha'", ",", "None", ")", "\n", "return", "\n", "", "self", ".", "q_mode", "=", "kwargs_q", "[", "'mode'", "]", "\n", "if", "self", ".", "q_mode", "==", "Qmodes", ".", "kernel_wise", ":", "\n", "            ", "self", ".", "alpha", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "out_channels", ")", ")", "\n", "", "else", ":", "# layer-wise quantization", "\n", "            ", "self", ".", "alpha", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "1", ")", ")", "\n", "", "self", ".", "register_buffer", "(", "'init_state'", ",", "torch", ".", "zeros", "(", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules._Conv2dQ.add_param": [[195, 197], ["None"], "methods", ["None"], ["", "def", "add_param", "(", "self", ",", "param_k", ",", "param_v", ")", ":", "\n", "        ", "self", ".", "kwargs_q", "[", "param_k", "]", "=", "param_v", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules._Conv2dQ.extra_repr": [[198, 203], ["super().extra_repr"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules._ActQ.extra_repr"], ["", "def", "extra_repr", "(", "self", ")", ":", "\n", "        ", "s_prefix", "=", "super", "(", "_Conv2dQ", ",", "self", ")", ".", "extra_repr", "(", ")", "\n", "if", "self", ".", "alpha", "is", "None", ":", "\n", "            ", "return", "'{}, fake'", ".", "format", "(", "s_prefix", ")", "\n", "", "return", "'{}, {}'", ".", "format", "(", "s_prefix", ",", "self", ".", "kwargs_q", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules._LinearQ.__init__": [[206, 215], ["torch.Linear.__init__", "lsq_modules.get_default_kwargs_q", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "lsq_modules._LinearQ.register_buffer", "lsq_modules._LinearQ.register_parameter", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules.get_default_kwargs_q"], ["    ", "def", "__init__", "(", "self", ",", "in_features", ",", "out_features", ",", "bias", "=", "True", ",", "**", "kwargs_q", ")", ":", "\n", "        ", "super", "(", "_LinearQ", ",", "self", ")", ".", "__init__", "(", "in_features", "=", "in_features", ",", "out_features", "=", "out_features", ",", "bias", "=", "bias", ")", "\n", "self", ".", "kwargs_q", "=", "get_default_kwargs_q", "(", "kwargs_q", ",", "layer_type", "=", "self", ")", "\n", "self", ".", "nbits", "=", "kwargs_q", "[", "'nbits'", "]", "\n", "if", "self", ".", "nbits", "<", "0", ":", "\n", "            ", "self", ".", "register_parameter", "(", "'alpha'", ",", "None", ")", "\n", "return", "\n", "", "self", ".", "alpha", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "1", ")", ")", "\n", "self", ".", "register_buffer", "(", "'init_state'", ",", "torch", ".", "zeros", "(", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules._LinearQ.add_param": [[216, 218], ["None"], "methods", ["None"], ["", "def", "add_param", "(", "self", ",", "param_k", ",", "param_v", ")", ":", "\n", "        ", "self", ".", "kwargs_q", "[", "param_k", "]", "=", "param_v", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules._LinearQ.extra_repr": [[219, 224], ["super().extra_repr"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules._ActQ.extra_repr"], ["", "def", "extra_repr", "(", "self", ")", ":", "\n", "        ", "s_prefix", "=", "super", "(", "_LinearQ", ",", "self", ")", ".", "extra_repr", "(", ")", "\n", "if", "self", ".", "alpha", "is", "None", ":", "\n", "            ", "return", "'{}, fake'", ".", "format", "(", "s_prefix", ")", "\n", "", "return", "'{}, {}'", ".", "format", "(", "s_prefix", ",", "self", ".", "kwargs_q", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules._ActQ.__init__": [[227, 237], ["torch.Module.__init__", "lsq_modules.get_default_kwargs_q", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "lsq_modules._ActQ.register_buffer", "lsq_modules._ActQ.register_parameter", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules.get_default_kwargs_q"], ["    ", "def", "__init__", "(", "self", ",", "**", "kwargs_q", ")", ":", "\n", "        ", "super", "(", "_ActQ", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "kwargs_q", "=", "get_default_kwargs_q", "(", "kwargs_q", ",", "layer_type", "=", "self", ")", "\n", "self", ".", "nbits", "=", "kwargs_q", "[", "'nbits'", "]", "\n", "if", "self", ".", "nbits", "<", "0", ":", "\n", "            ", "self", ".", "register_parameter", "(", "'alpha'", ",", "None", ")", "\n", "return", "\n", "", "self", ".", "signed", "=", "kwargs_q", "[", "'signed'", "]", "\n", "self", ".", "alpha", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "1", ")", ")", "\n", "self", ".", "register_buffer", "(", "'init_state'", ",", "torch", ".", "zeros", "(", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules._ActQ.add_param": [[238, 240], ["None"], "methods", ["None"], ["", "def", "add_param", "(", "self", ",", "param_k", ",", "param_v", ")", ":", "\n", "        ", "self", ".", "kwargs_q", "[", "param_k", "]", "=", "param_v", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules._ActQ.extra_repr": [[241, 246], ["None"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", ":", "\n", "# s_prefix = super(_ActQ, self).extra_repr()", "\n", "        ", "if", "self", ".", "alpha", "is", "None", ":", "\n", "            ", "return", "'fake'", "\n", "", "return", "'{}'", ".", "format", "(", "self", ".", "kwargs_q", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules.grad_scale": [[23, 27], ["y.detach", "y_grad.detach"], "function", ["None"], ["", "def", "grad_scale", "(", "x", ",", "scale", ")", ":", "\n", "    ", "y", "=", "x", "\n", "y_grad", "=", "x", "*", "scale", "\n", "return", "y", ".", "detach", "(", ")", "-", "y_grad", ".", "detach", "(", ")", "+", "y_grad", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules.get_sparsity_mask": [[29, 33], ["torch.topk", "torch.topk", "torch.gt().type", "torch.gt().type", "param.abs().view", "int", "param.type", "torch.gt", "torch.gt", "param.abs", "param.numel", "torch.abs", "torch.abs"], "function", ["None"], ["", "def", "get_sparsity_mask", "(", "param", ",", "sparsity", ")", ":", "\n", "    ", "bottomk", ",", "_", "=", "torch", ".", "topk", "(", "param", ".", "abs", "(", ")", ".", "view", "(", "-", "1", ")", ",", "int", "(", "sparsity", "*", "param", ".", "numel", "(", ")", ")", ",", "largest", "=", "False", ",", "sorted", "=", "True", ")", "\n", "threshold", "=", "bottomk", ".", "data", "[", "-", "1", "]", "# This is the largest elemet from the group of elements that we prune away", "\n", "return", "torch", ".", "gt", "(", "torch", ".", "abs", "(", "param", ")", ",", "threshold", ")", ".", "type", "(", "param", ".", "type", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules.round_pass": [[35, 39], ["x.round", "x.round.detach", "y_grad.detach"], "function", ["None"], ["", "def", "round_pass", "(", "x", ")", ":", "\n", "    ", "y", "=", "x", ".", "round", "(", ")", "\n", "y_grad", "=", "x", "\n", "return", "y", ".", "detach", "(", ")", "-", "y_grad", ".", "detach", "(", ")", "+", "y_grad", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules.log_shift": [[55, 58], ["torch.log2().ceil", "torch.log2().ceil", "torch.log2", "torch.log2"], "function", ["None"], ["", "", "def", "log_shift", "(", "value_fp", ")", ":", "\n", "    ", "value_shift", "=", "2", "**", "(", "torch", ".", "log2", "(", "value_fp", ")", ".", "ceil", "(", ")", ")", "\n", "return", "value_shift", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules.clamp": [[60, 65], ["torch.clamp", "torch.clamp", "input.clamp_"], "function", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules.clamp", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules.clamp"], ["", "def", "clamp", "(", "input", ",", "min", ",", "max", ",", "inplace", "=", "False", ")", ":", "\n", "    ", "if", "inplace", ":", "\n", "        ", "input", ".", "clamp_", "(", "min", ",", "max", ")", "\n", "return", "input", "\n", "", "return", "torch", ".", "clamp", "(", "input", ",", "min", ",", "max", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules.get_quantized_range": [[67, 72], ["None"], "function", ["None"], ["", "def", "get_quantized_range", "(", "num_bits", ",", "signed", "=", "True", ")", ":", "\n", "    ", "if", "signed", ":", "\n", "        ", "n", "=", "2", "**", "(", "num_bits", "-", "1", ")", "\n", "return", "-", "n", ",", "n", "-", "1", "\n", "", "return", "0", ",", "2", "**", "num_bits", "-", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules.linear_quantize": [[74, 79], ["torch.round", "torch.round", "input.mul_().round_", "input.mul_"], "function", ["None"], ["", "def", "linear_quantize", "(", "input", ",", "scale_factor", ",", "inplace", "=", "False", ")", ":", "\n", "    ", "if", "inplace", ":", "\n", "        ", "input", ".", "mul_", "(", "scale_factor", ")", ".", "round_", "(", ")", "\n", "return", "input", "\n", "", "return", "torch", ".", "round", "(", "scale_factor", "*", "input", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules.linear_quantize_clamp": [[81, 84], ["lsq_modules.linear_quantize", "lsq_modules.clamp"], "function", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules.linear_quantize", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules.clamp"], ["", "def", "linear_quantize_clamp", "(", "input", ",", "scale_factor", ",", "clamp_min", ",", "clamp_max", ",", "inplace", "=", "False", ")", ":", "\n", "    ", "output", "=", "linear_quantize", "(", "input", ",", "scale_factor", ",", "inplace", ")", "\n", "return", "clamp", "(", "output", ",", "clamp_min", ",", "clamp_max", ",", "inplace", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules.linear_dequantize": [[86, 91], ["input.div_"], "function", ["None"], ["", "def", "linear_dequantize", "(", "input", ",", "scale_factor", ",", "inplace", "=", "False", ")", ":", "\n", "    ", "if", "inplace", ":", "\n", "        ", "input", ".", "div_", "(", "scale_factor", ")", "\n", "return", "input", "\n", "", "return", "input", "/", "scale_factor", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules.truncation": [[93, 102], ["math.ceil", "lsq_modules.get_quantized_range", "lsq_modules.linear_quantize_clamp", "lsq_modules.linear_dequantize", "torch.log2", "torch.log2", "torch.max", "torch.max", "fp_data.max", "fp_data.min().abs", "fp_data.min"], "function", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules.get_quantized_range", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules.linear_quantize_clamp", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules.linear_dequantize"], ["", "def", "truncation", "(", "fp_data", ",", "nbits", "=", "8", ")", ":", "\n", "    ", "il", "=", "torch", ".", "log2", "(", "torch", ".", "max", "(", "fp_data", ".", "max", "(", ")", ",", "fp_data", ".", "min", "(", ")", ".", "abs", "(", ")", ")", ")", "+", "1", "\n", "il", "=", "math", ".", "ceil", "(", "il", "-", "1e-5", ")", "\n", "qcode", "=", "nbits", "-", "il", "\n", "scale_factor", "=", "2", "**", "qcode", "\n", "clamp_min", ",", "clamp_max", "=", "get_quantized_range", "(", "nbits", ",", "signed", "=", "True", ")", "\n", "q_data", "=", "linear_quantize_clamp", "(", "fp_data", ",", "scale_factor", ",", "clamp_min", ",", "clamp_max", ")", "\n", "q_data", "=", "linear_dequantize", "(", "q_data", ",", "scale_factor", ")", "\n", "return", "q_data", ",", "qcode", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules.round_cus": [[104, 113], ["t.clone", "t.copy_"], "function", ["None"], ["", "def", "round_cus", "(", "t", ",", "inplace", "=", "False", ")", ":", "\n", "    ", "tt", "=", "t", ".", "clone", "(", ")", "\n", "tt", "[", "tt", ">", "0", "]", "=", "1.0", "\n", "tt", "[", "tt", "<", "0", "]", "=", "-", "1.0", "+", "2", "**", "-", "16", "\n", "temp", "=", "(", "t", "+", "0.5", "*", "tt", ")", ".", "type", "(", "torch", ".", "int32", ")", ".", "type_as", "(", "t", ")", "\n", "if", "inplace", ":", "\n", "        ", "t", ".", "copy_", "(", "temp", ")", "\n", "return", "t", "\n", "", "return", "temp", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules.update_running_scale": [[115, 137], ["lsq_modules.ln_error", "lsq_modules.ln_error"], "function", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules.ln_error", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules.ln_error"], ["", "def", "update_running_scale", "(", "data_fp", ",", "scale_old", ",", "error", ",", "Qn", ",", "Qp", ",", "qmode", "=", "Qmodes", ".", "layer_wise", ",", "is_l2", "=", "True", ")", ":", "\n", "    ", "s_error", "=", "ln_error", "(", "data_fp", ",", "scale_old", "/", "2", ",", "Qn", ",", "Qp", ",", "qmode", ",", "is_l2", ")", "\n", "b_error", "=", "ln_error", "(", "data_fp", ",", "scale_old", "*", "2", ",", "Qn", ",", "Qp", ",", "qmode", ",", "is_l2", ")", "\n", "a1", "=", "error", "-", "s_error", "\n", "a2", "=", "b_error", "-", "error", "\n", "g1", "=", "a1", ">=", "0", "\n", "g2", "=", "a2", ">", "0", "\n", "g3", "=", "a1", "+", "a2", ">=", "0", "\n", "\"\"\"\n                    g1  g2  g3  res\n                    0   0   0   big\n                    0   0   1   big\n                    0   1   0   keep\n                    0   1   1   keep\n                    1   0   0   big\n                    1   0   1   small\n                    1   1   0   small\n                    1   1   1   small\n    \"\"\"", "\n", "b", "=", "(", "(", "g1", "==", "0", ")", "*", "(", "g2", "==", "0", ")", "==", "1", ")", "+", "(", "(", "g1", "*", "(", "g2", "==", "0", ")", "*", "(", "g3", "==", "0", ")", ")", ">", "0", ")", ">", "0", "\n", "s", "=", "(", "(", "(", "g1", "*", "g2", ")", ">", "0", ")", "+", "(", "(", "g1", "*", "(", "g2", "==", "0", ")", "*", "g3", ")", ">", "0", ")", ")", ">", "0", "\n", "return", "b", ",", "s", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules.ln_error": [[139, 155], ["x_clip.round", "x.reshape().size", "x.reshape().size", "x.reshape", "x.reshape"], "function", ["None"], ["", "def", "ln_error", "(", "x", ",", "scale", ",", "Qn", ",", "Qp", ",", "qmode", "=", "Qmodes", ".", "layer_wise", ",", "is_l2", "=", "True", ")", ":", "\n", "    ", "x_clip", "=", "(", "x", "/", "scale", ")", ".", "clamp", "(", "Qn", ",", "Qp", ")", "\n", "x_q", "=", "x_clip", ".", "round", "(", ")", "\n", "x_q", "=", "x_q", "*", "scale", "\n", "if", "qmode", "==", "Qmodes", ".", "layer_wise", ":", "\n", "        ", "if", "is_l2", ":", "\n", "            ", "error", "=", "(", "(", "x", "-", "x_q", ")", "**", "2", ")", ".", "sum", "(", ")", "/", "x", ".", "reshape", "(", "-", "1", ")", ".", "size", "(", ")", "[", "0", "]", "\n", "", "else", ":", "\n", "            ", "error", "=", "(", "x", "-", "x_q", ")", ".", "abs", "(", ")", ".", "sum", "(", ")", "/", "x", ".", "reshape", "(", "-", "1", ")", ".", "size", "(", ")", "[", "0", "]", "\n", "", "", "else", ":", "\n", "        ", "if", "is_l2", ":", "\n", "            ", "error", "=", "(", "(", "x", "-", "x_q", ")", "**", "2", ")", ".", "sum", "(", "dim", "=", "0", ")", "/", "x", ".", "shape", "[", "0", "]", "\n", "", "else", ":", "\n", "            ", "error", "=", "(", "x", "-", "x_q", ")", ".", "abs", "(", ")", ".", "sum", "(", "dim", "=", "0", ")", "/", "x", ".", "shape", "[", "0", "]", "\n", "# x_clip = x_clip * scale", "\n", "", "", "return", "error", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules.get_default_kwargs_q": [[157, 176], ["isinstance", "default.items", "default.update", "isinstance", "isinstance", "default.update"], "function", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet34.AverageMeter.update", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_imagenet.train_archnet_resnet34.AverageMeter.update"], ["", "def", "get_default_kwargs_q", "(", "kwargs_q", ",", "layer_type", ")", ":", "\n", "    ", "default", "=", "{", "\n", "'nbits'", ":", "4", "\n", "}", "\n", "if", "isinstance", "(", "layer_type", ",", "_Conv2dQ", ")", ":", "\n", "        ", "default", ".", "update", "(", "{", "\n", "'mode'", ":", "Qmodes", ".", "layer_wise", "}", ")", "\n", "", "elif", "isinstance", "(", "layer_type", ",", "_LinearQ", ")", ":", "\n", "        ", "pass", "\n", "", "elif", "isinstance", "(", "layer_type", ",", "_ActQ", ")", ":", "\n", "        ", "default", ".", "update", "(", "{", "\n", "'signed'", ":", "True", "}", ")", "\n", "", "else", ":", "\n", "        ", "assert", "NotImplementedError", "\n", "return", "\n", "", "for", "k", ",", "v", "in", "default", ".", "items", "(", ")", ":", "\n", "        ", "if", "k", "not", "in", "kwargs_q", ":", "\n", "            ", "kwargs_q", "[", "k", "]", "=", "v", "\n", "", "", "return", "kwargs_q", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq.Conv2dLSQ.__init__": [[25, 32], ["lsq_modules._Conv2dQ.__init__"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "bias", "=", "True", ",", "nbits", "=", "4", ",", "\n", "mode", "=", "Qmodes", ".", "layer_wise", ")", ":", "\n", "        ", "super", "(", "Conv2dLSQ", ",", "self", ")", ".", "__init__", "(", "\n", "in_channels", "=", "in_channels", ",", "out_channels", "=", "out_channels", ",", "kernel_size", "=", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "groups", "=", "groups", ",", "bias", "=", "bias", ",", "\n", "nbits", "=", "nbits", ",", "mode", "=", "mode", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq.Conv2dLSQ.forward": [[33, 50], ["lsq.grad_scale", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "lsq.Conv2dLSQ.alpha.data.copy_", "lsq.Conv2dLSQ.init_state.fill_", "math.sqrt", "lsq.round_pass", "math.sqrt", "lsq.Conv2dLSQ.weight.numel", "lsq.Conv2dLSQ.weight.abs().mean", "lsq.Conv2dLSQ.weight.abs"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq.grad_scale", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq.round_pass"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "alpha", "is", "None", ":", "\n", "            ", "return", "F", ".", "conv2d", "(", "x", ",", "self", ".", "weight", ",", "self", ".", "bias", ",", "self", ".", "stride", ",", "\n", "self", ".", "padding", ",", "self", ".", "dilation", ",", "self", ".", "groups", ")", "\n", "", "Qn", "=", "-", "2", "**", "(", "self", ".", "nbits", "-", "1", ")", "\n", "Qp", "=", "2", "**", "(", "self", ".", "nbits", "-", "1", ")", "-", "1", "\n", "if", "self", ".", "training", "and", "self", ".", "init_state", "==", "0", ":", "\n", "            ", "self", ".", "alpha", ".", "data", ".", "copy_", "(", "2", "*", "self", ".", "weight", ".", "abs", "(", ")", ".", "mean", "(", ")", "/", "math", ".", "sqrt", "(", "Qp", ")", ")", "\n", "self", ".", "init_state", ".", "fill_", "(", "1", ")", "\n", "\n", "", "g", "=", "1.0", "/", "math", ".", "sqrt", "(", "self", ".", "weight", ".", "numel", "(", ")", "*", "Qp", ")", "\n", "\n", "alpha", "=", "grad_scale", "(", "self", ".", "alpha", ",", "g", ")", "\n", "w_q", "=", "round_pass", "(", "(", "self", ".", "weight", "/", "alpha", ")", ".", "clamp", "(", "Qn", ",", "Qp", ")", ")", "*", "alpha", "\n", "\n", "return", "F", ".", "conv2d", "(", "x", ",", "w_q", ",", "self", ".", "bias", ",", "self", ".", "stride", ",", "\n", "self", ".", "padding", ",", "self", ".", "dilation", ",", "self", ".", "groups", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq.LinearLSQ.__init__": [[53, 55], ["lsq_modules._LinearQ.__init__"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_features", ",", "out_features", ",", "bias", "=", "True", ",", "nbits", "=", "4", ")", ":", "\n", "        ", "super", "(", "LinearLSQ", ",", "self", ")", ".", "__init__", "(", "in_features", "=", "in_features", ",", "out_features", "=", "out_features", ",", "bias", "=", "bias", ",", "nbits", "=", "nbits", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq.LinearLSQ.forward": [[56, 70], ["lsq.grad_scale", "torch.linear", "torch.linear", "torch.linear", "torch.linear", "lsq.LinearLSQ.alpha.data.copy_", "lsq.LinearLSQ.init_state.fill_", "math.sqrt", "lsq.round_pass", "math.sqrt", "lsq.LinearLSQ.weight.numel", "lsq.LinearLSQ.weight.abs().mean", "lsq.LinearLSQ.weight.abs"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq.grad_scale", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq.round_pass"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "alpha", "is", "None", ":", "\n", "            ", "return", "F", ".", "linear", "(", "x", ",", "self", ".", "weight", ",", "self", ".", "bias", ")", "\n", "", "Qn", "=", "-", "2", "**", "(", "self", ".", "nbits", "-", "1", ")", "\n", "Qp", "=", "2", "**", "(", "self", ".", "nbits", "-", "1", ")", "-", "1", "\n", "if", "self", ".", "training", "and", "self", ".", "init_state", "==", "0", ":", "\n", "            ", "self", ".", "alpha", ".", "data", ".", "copy_", "(", "2", "*", "self", ".", "weight", ".", "abs", "(", ")", ".", "mean", "(", ")", "/", "math", ".", "sqrt", "(", "Qp", ")", ")", "\n", "self", ".", "init_state", ".", "fill_", "(", "1", ")", "\n", "", "g", "=", "1.0", "/", "math", ".", "sqrt", "(", "self", ".", "weight", ".", "numel", "(", ")", "*", "Qp", ")", "\n", "\n", "alpha", "=", "grad_scale", "(", "self", ".", "alpha", ",", "g", ")", "\n", "w_q", "=", "round_pass", "(", "(", "self", ".", "weight", "/", "alpha", ")", ".", "clamp", "(", "Qn", ",", "Qp", ")", ")", "*", "alpha", "\n", "\n", "return", "F", ".", "linear", "(", "x", ",", "w_q", ",", "self", ".", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq.ActLSQ.__init__": [[73, 75], ["lsq_modules._ActQ.__init__"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nbits", "=", "4", ",", "signed", "=", "False", ")", ":", "\n", "        ", "super", "(", "ActLSQ", ",", "self", ")", ".", "__init__", "(", "nbits", "=", "nbits", ",", "signed", "=", "signed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq.ActLSQ.forward": [[76, 95], ["lsq.grad_scale", "lsq.ActLSQ.alpha.data.copy_", "lsq.ActLSQ.init_state.fill_", "math.sqrt", "lsq.round_pass", "math.sqrt", "x.numel", "x.abs().mean", "x.abs"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq.grad_scale", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq.round_pass"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "alpha", "is", "None", ":", "\n", "            ", "return", "x", "\n", "", "if", "self", ".", "signed", ":", "\n", "            ", "Qn", "=", "-", "2", "**", "(", "self", ".", "nbits", "-", "1", ")", "\n", "Qp", "=", "2", "**", "(", "self", ".", "nbits", "-", "1", ")", "-", "1", "\n", "", "else", ":", "\n", "            ", "Qn", "=", "0", "\n", "Qp", "=", "2", "**", "self", ".", "nbits", "-", "1", "\n", "", "if", "self", ".", "training", "and", "self", ".", "init_state", "==", "0", ":", "\n", "            ", "self", ".", "alpha", ".", "data", ".", "copy_", "(", "2", "*", "x", ".", "abs", "(", ")", ".", "mean", "(", ")", "/", "math", ".", "sqrt", "(", "Qp", ")", ")", "\n", "self", ".", "init_state", ".", "fill_", "(", "1", ")", "\n", "\n", "", "g", "=", "1.0", "/", "math", ".", "sqrt", "(", "x", ".", "numel", "(", ")", "*", "Qp", ")", "\n", "\n", "alpha", "=", "grad_scale", "(", "self", ".", "alpha", ",", "g", ")", "\n", "x", "=", "round_pass", "(", "(", "x", "/", "alpha", ")", ".", "clamp", "(", "Qn", ",", "Qp", ")", ")", "*", "alpha", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq.EmbeddingLSQ.__init__": [[98, 102], ["super().__init__", "lsq.LinearLSQ"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_embeddings", ",", "embedding_dim", ",", "padding_idx", ",", "weight_bit", ")", ":", "\n", "        ", "super", "(", "EmbeddingLSQ", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "padding_idx", "=", "padding_idx", "\n", "self", ".", "linear", "=", "LinearLSQ", "(", "num_embeddings", ",", "embedding_dim", ",", "bias", "=", "False", ",", "nbits", "=", "weight_bit", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq.EmbeddingLSQ.forward": [[103, 111], ["onehot_to_idx.eq", "lsq.EmbeddingLSQ.linear", "x.masked_fill.masked_fill.masked_fill", "torch.topk", "torch.topk", "torch.topk", "torch.topk"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "onehot_to_idx", "=", "torch", ".", "topk", "(", "x", ",", "1", ")", "[", "1", "]", "\n", "mask", "=", "onehot_to_idx", ".", "eq", "(", "self", ".", "padding_idx", ")", "\n", "\n", "x", "=", "self", ".", "linear", "(", "x", ")", "\n", "x", "=", "x", ".", "masked_fill", "(", "mask", ",", "value", "=", "0", ")", "\n", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq.grad_scale": [[12, 16], ["y.detach", "y_grad.detach"], "function", ["None"], ["def", "grad_scale", "(", "x", ",", "scale", ")", ":", "\n", "    ", "y", "=", "x", "\n", "y_grad", "=", "x", "*", "scale", "\n", "return", "y", ".", "detach", "(", ")", "-", "y_grad", ".", "detach", "(", ")", "+", "y_grad", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq.round_pass": [[18, 22], ["x.round", "x.round.detach", "y_grad.detach"], "function", ["None"], ["", "def", "round_pass", "(", "x", ")", ":", "\n", "    ", "y", "=", "x", ".", "round", "(", ")", "\n", "y_grad", "=", "x", "\n", "return", "y", ".", "detach", "(", ")", "-", "y_grad", ".", "detach", "(", ")", "+", "y_grad", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.dorefa.data_type.DataType.__init__": [[5, 12], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "bits", ",", "details", ",", "name", "=", "None", ")", ":", "\n", "        ", "self", ".", "bits", "=", "bits", "\n", "self", ".", "lower", "=", "details", "[", "0", "]", "[", "0", "]", "\n", "self", ".", "upper", "=", "details", "[", "0", "]", "[", "1", "]", "\n", "self", ".", "max_val", "=", "details", "[", "1", "]", "-", "1", "\n", "self", ".", "is_signed", "=", "self", ".", "lower", "<", "0", "\n", "self", ".", "name", "=", "name", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.dorefa.quantize_helper.RoundSTE.forward": [[8, 13], ["None"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "x", ",", "dtype", ")", ":", "\n", "        ", "offset", "=", "0", "if", "dtype", "in", "[", "dorefa_int16", ",", "dorefa_uint16", "]", "else", "0.5", "\n", "y", "=", "(", "x", "+", "offset", ")", "//", "1", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.dorefa.quantize_helper.RoundSTE.backward": [[14, 17], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad", ")", ":", "\n", "        ", "return", "grad", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.dorefa.quantize_helper.QuantWeight.forward": [[20, 30], ["x.abs().mean", "torch.clamp", "x.abs"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules.clamp"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "x", ",", "dtype", ")", ":", "\n", "        ", "scale", "=", "x", ".", "abs", "(", ")", ".", "mean", "(", ")", "*", "2", "\n", "multiplier", "=", "dtype", ".", "max_val", "\n", "upper_bound", "=", "0.5", "\n", "lower_bound", "=", "upper_bound", "-", "1", "\n", "\n", "x", "=", "torch", ".", "clamp", "(", "x", "/", "scale", ",", "lower_bound", ",", "upper_bound", ")", "-", "lower_bound", "# [0, 1]", "\n", "y", "=", "(", "(", "x", "*", "multiplier", "+", "0.5", ")", "//", "1", ")", "/", "multiplier", "+", "lower_bound", "# [lower, upper]", "\n", "return", "y", "*", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.dorefa.quantize_helper.QuantWeight.backward": [[31, 34], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad", ")", ":", "\n", "        ", "return", "grad", ",", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.dorefa.quantize_helper.quant_weight": [[36, 58], ["mode.lower", "x.tanh.tanh", "len", "mode.lower", "x.tanh.tanh", "QuantWeight.apply", "torch.mean", "[].view", "len", "torch.mean", "[].view", "RoundSTE.apply", "x.tanh.view().abs().max", "x.tanh.view().abs().max", "x.tanh.view().abs", "x.tanh.view().abs", "x.tanh.view", "x.tanh.view"], "function", ["None"], ["", "", "def", "quant_weight", "(", "x", ",", "dtype", ",", "mode", ")", ":", "\n", "    ", "if", "mode", ".", "lower", "(", ")", "==", "\"gaussian\"", ":", "\n", "        ", "x", "=", "x", ".", "tanh", "(", ")", "\n", "if", "len", "(", "x", ".", "shape", ")", "==", "2", ":", "\n", "            ", "x", "=", "x", "-", "torch", ".", "mean", "(", "x", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "scale", "=", "x", ".", "view", "(", "x", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ".", "abs", "(", ")", ".", "max", "(", "dim", "=", "1", ")", "[", "0", "]", ".", "view", "(", "x", ".", "shape", "[", "0", "]", ",", "1", ")", "*", "2", "\n", "", "elif", "len", "(", "x", ".", "shape", ")", "==", "4", ":", "\n", "            ", "x", "=", "x", "-", "torch", ".", "mean", "(", "x", ",", "dim", "=", "[", "1", ",", "2", ",", "3", "]", ",", "keepdim", "=", "True", ")", "\n", "scale", "=", "(", "\n", "x", ".", "view", "(", "x", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ".", "abs", "(", ")", ".", "max", "(", "dim", "=", "1", ")", "[", "0", "]", ".", "view", "(", "x", ".", "shape", "[", "0", "]", ",", "1", ",", "1", ",", "1", ")", "*", "2", "\n", ")", "\n", "", "x", "=", "(", "x", "/", "scale", "+", "0.5", ")", "*", "dtype", ".", "max_val", "\n", "x_qt", "=", "(", "RoundSTE", ".", "apply", "(", "x", ",", "dtype", ")", "/", "dtype", ".", "max_val", "-", "0.5", ")", "*", "scale", "\n", "", "elif", "mode", ".", "lower", "(", ")", "==", "\"normal\"", ":", "\n", "        ", "x", "=", "x", ".", "tanh", "(", ")", "\n", "x_qt", "=", "QuantWeight", ".", "apply", "(", "x", ",", "dtype", ")", "\n", "scale", "=", "None", "\n", "", "else", ":", "\n", "        ", "assert", "(", "\n", "False", "\n", ")", ",", "\"only support quant_weight_mode in ['normal', 'gaussian']\"", "\n", "", "return", "x_qt", ",", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.dorefa.quantize_helper.quant_feature": [[60, 84], ["scale.view.to", "torch.clamp.dim", "scale.view.view", "torch.clamp.dim", "scale.view.view", "torch.clamp", "len", "RoundSTE.apply", "torch.clamp_min", "torch.unique", "len", "torch.unique().item", "torch.min", "torch.unique", "torch.unique"], "function", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.lsq.lsq_modules.clamp"], ["", "def", "quant_feature", "(", "x", ",", "dtype", ",", "scale", ")", ":", "\n", "    ", "if", "len", "(", "torch", ".", "unique", "(", "scale", ")", ")", ">", "1", "or", "(", "\n", "len", "(", "torch", ".", "unique", "(", "scale", ")", ")", "==", "1", "and", "torch", ".", "unique", "(", "scale", ")", ".", "item", "(", ")", "!=", "1.0", "\n", ")", ":", "\n", "        ", "assert", "dtype", "in", "[", "\n", "dorefa_int16", ",", "\n", "dorefa_uint16", ",", "\n", "]", ",", "\"out_scale != 1.0 and multi-out_scale only support feature_dtype in ['dorefa_int16', 'dorefa_uint16']\"", "\n", "", "scale", "=", "scale", ".", "to", "(", "x", ".", "device", ")", "\n", "if", "x", ".", "dim", "(", ")", "==", "2", ":", "\n", "        ", "scale", "=", "scale", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "", "if", "x", ".", "dim", "(", ")", "==", "4", ":", "\n", "        ", "scale", "=", "scale", ".", "view", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", "\n", "", "is_quant", "=", "False", "if", "dtype", "in", "[", "dorefa_int16", ",", "dorefa_uint16", "]", "else", "True", "\n", "offset", "=", "0.5", "if", "dtype", ".", "is_signed", "is", "True", "else", "0", "\n", "if", "is_quant", ":", "\n", "        ", "x", "=", "torch", ".", "clamp", "(", "x", "+", "offset", ",", "0", ",", "1", ")", "\n", "x", "=", "x", "*", "dtype", ".", "max_val", "\n", "x", "=", "RoundSTE", ".", "apply", "(", "x", ",", "dtype", ")", "-", "offset", "*", "dtype", ".", "max_val", "\n", "x", "=", "x", "/", "dtype", ".", "max_val", "\n", "", "else", ":", "\n", "        ", "offset", "*=", "scale", "\n", "x", "=", "torch", ".", "clamp_min", "(", "torch", ".", "min", "(", "x", "+", "offset", ",", "scale", ")", ",", "0", ")", "-", "offset", "\n", "", "return", "x", "\n", "", ""]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.dorefa.dorefa.DorefaConv2d.__init__": [[29, 48], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "weight_dtype", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "(", "1", ",", "1", ")", ",", "\n", "stride", "=", "1", ",", "\n", "bias", "=", "True", ",", "\n", "quant_weight_mode", "=", "\"normal\"", ",", "\n", ")", ":", "\n", "        ", "super", "(", "DorefaConv2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "weight_dtype", "=", "weight_dtype", "\n", "self", ".", "padding", "=", "padding", "\n", "self", ".", "conv_Q", "=", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "bias", "=", "bias", "\n", ")", "\n", "self", ".", "quant_weight_mode", "=", "quant_weight_mode", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.dorefa.dorefa.DorefaConv2d.forward": [[49, 59], ["quantize_helper.quant_weight", "torch.conv2d", "torch.conv2d", "torch.conv2d"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.dorefa.quantize_helper.quant_weight"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "weight", ",", "_", "=", "quant_weight", "(", "\n", "self", ".", "conv_Q", ".", "weight", ",", "\n", "self", ".", "weight_dtype", ",", "\n", "self", ".", "quant_weight_mode", ",", "\n", ")", "\n", "x", "=", "F", ".", "conv2d", "(", "\n", "x", ",", "weight", ",", "bias", "=", "self", ".", "conv_Q", ".", "bias", ",", "stride", "=", "self", ".", "stride", ",", "padding", "=", "self", ".", "padding", "\n", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.dorefa.dorefa.DorefaLinear1d.__init__": [[62, 74], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "in_features", ",", "\n", "out_features", ",", "\n", "weight_dtype", ",", "\n", "bias", "=", "True", ",", "\n", "quant_weight_mode", "=", "\"normal\"", ",", "\n", ")", ":", "\n", "        ", "super", "(", "DorefaLinear1d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "weight_dtype", "=", "weight_dtype", "\n", "self", ".", "linear_Q", "=", "nn", ".", "Linear", "(", "in_features", ",", "out_features", ",", "bias", "=", "bias", ")", "\n", "self", ".", "quant_weight_mode", "=", "quant_weight_mode", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.dorefa.dorefa.DorefaLinear1d.forward": [[75, 83], ["quantize_helper.quant_weight", "torch.linear", "torch.linear", "torch.linear"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.dorefa.quantize_helper.quant_weight"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "weight", ",", "_", "=", "quant_weight", "(", "\n", "self", ".", "linear_Q", ".", "weight", ",", "\n", "self", ".", "weight_dtype", ",", "\n", "self", ".", "quant_weight_mode", ",", "\n", ")", "\n", "x", "=", "F", ".", "linear", "(", "x", ",", "weight", ",", "bias", "=", "self", ".", "linear_Q", ".", "bias", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.dorefa.dorefa.DorefaQuantizeActivation.__init__": [[86, 100], ["torch.Module.__init__", "dorefa.get_out_scale"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.dorefa.dorefa.get_out_scale"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "feature_dtype", ",", "\n", "out_channels", ",", "\n", "out_scale", "=", "1.0", ",", "\n", "multiplier", "=", "None", ",", "# magic number", "\n", "after_bn", "=", "True", ",", "# if there is a bn layer before this layer, we use a magic number", "\n", ")", ":", "\n", "        ", "super", "(", "DorefaQuantizeActivation", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "feature_dtype", "=", "feature_dtype", "\n", "self", ".", "out_scale", "=", "get_out_scale", "(", "out_scale", ",", "out_channels", ")", "\n", "if", "multiplier", "is", "None", ":", "\n", "            ", "multiplier", "=", "0.1", "if", "after_bn", "else", "1.0", "\n", "", "self", ".", "mul", "=", "multiplier", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.dorefa.dorefa.DorefaQuantizeActivation.forward": [[101, 105], ["quantize_helper.quant_feature", "dorefa.DorefaQuantizeActivation.out_scale.to"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.dorefa.quantize_helper.quant_feature"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "x", "*", "self", ".", "mul", "\n", "x", "=", "quant_feature", "(", "x", ",", "self", ".", "feature_dtype", ",", "self", ".", "out_scale", ".", "to", "(", "x", ".", "device", ")", ")", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.dorefa.dorefa.get_out_scale": [[10, 26], ["isinstance", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "isinstance", "len", "torch.from_numpy.dim", "numpy.array().astype", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "isinstance", "torch.from_numpy.astype", "AssertionError", "numpy.array", "torch.ones", "torch.ones", "torch.ones"], "function", ["None"], ["def", "get_out_scale", "(", "out_scale", ",", "out_channels", ")", ":", "\n", "    ", "if", "isinstance", "(", "out_scale", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "        ", "out_scale", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "out_scale", ")", ".", "astype", "(", "np", ".", "float32", ")", ")", "\n", "", "elif", "isinstance", "(", "out_scale", ",", "np", ".", "ndarray", ")", ":", "\n", "        ", "out_scale", "=", "torch", ".", "from_numpy", "(", "out_scale", ".", "astype", "(", "np", ".", "float32", ")", ")", "\n", "", "elif", "isinstance", "(", "out_scale", ",", "(", "int", ",", "float", ")", ")", ":", "\n", "        ", "out_scale", "=", "torch", ".", "ones", "(", "out_channels", ")", "*", "out_scale", "\n", "", "else", ":", "\n", "        ", "raise", "AssertionError", "(", "\n", "\"only support out_scale in ['int', 'float', 'list', 'tuple', 'numpy.ndarray']\"", "\n", ")", "\n", "", "assert", "(", "\n", "len", "(", "out_scale", ")", "==", "out_channels", "\n", ")", ",", "\"The length of out_scale does not match out_channels\"", "\n", "assert", "out_scale", ".", "dim", "(", ")", "==", "1", ",", "\"Multi-dimensional out_scale are not supported.\"", "\n", "return", "out_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.evaluate.translate.convert_to_onehot": [[21, 27], ["idx_input.reshape().to.size", "idx_input.reshape().to.reshape().to", "torch.zeros().scatter", "one_hot.reshape.reshape", "idx_input.reshape().to.reshape", "torch.zeros", "idx_input.reshape().to.size"], "function", ["None"], ["def", "convert_to_onehot", "(", "idx_input", ",", "vocab_size", ")", ":", "\n", "    ", "original_batch", ",", "original_word_nums", "=", "idx_input", ".", "size", "(", ")", "\n", "idx_input", "=", "idx_input", ".", "reshape", "(", "-", "1", ",", "1", ")", ".", "to", "(", "'cpu'", ")", "\n", "one_hot", "=", "torch", ".", "zeros", "(", "idx_input", ".", "size", "(", "0", ")", ",", "vocab_size", ")", ".", "scatter", "(", "1", ",", "idx_input", ",", "1", ")", "\n", "one_hot", "=", "one_hot", ".", "reshape", "(", "original_batch", ",", "original_word_nums", ",", "vocab_size", ")", "\n", "return", "one_hot", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.evaluate.translate.load_model": [[29, 58], ["torch.load", "models.students.transformer.ArchNetTransformer.to", "Transformer().to.load_state_dict", "print", "models.students.transformer.ArchNetTransformer"], "function", ["None"], ["", "def", "load_model", "(", "opt", ",", "device", ")", ":", "\n", "\n", "    ", "checkpoint", "=", "torch", ".", "load", "(", "opt", ".", "model", ",", "map_location", "=", "device", ")", "\n", "model_opt", "=", "checkpoint", "[", "'settings'", "]", "\n", "\n", "model", "=", "Transformer", "(", "\n", "model_opt", ".", "src_vocab_size", ",", "\n", "model_opt", ".", "trg_vocab_size", ",", "\n", "\n", "model_opt", ".", "src_pad_idx", ",", "\n", "model_opt", ".", "trg_pad_idx", ",", "\n", "\n", "trg_emb_prj_weight_sharing", "=", "model_opt", ".", "proj_share_weight", ",", "\n", "emb_src_trg_weight_sharing", "=", "model_opt", ".", "embs_share_weight", ",", "\n", "d_k", "=", "model_opt", ".", "d_k", ",", "\n", "d_v", "=", "model_opt", ".", "d_v", ",", "\n", "d_model", "=", "model_opt", ".", "d_model", ",", "\n", "d_word_vec", "=", "model_opt", ".", "d_word_vec", ",", "\n", "d_inner", "=", "model_opt", ".", "d_inner_hid", ",", "\n", "n_layers", "=", "model_opt", ".", "n_layers", ",", "\n", "n_head", "=", "model_opt", ".", "n_head", ",", "\n", "dropout", "=", "model_opt", ".", "dropout", ",", "\n", "weight_bit", "=", "model_opt", ".", "weight_bit", ",", "\n", "feature_bit", "=", "model_opt", ".", "feature_bit", ",", "\n", "is_train", "=", "False", ")", ".", "to", "(", "device", ")", "\n", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'model'", "]", ")", "\n", "print", "(", "'[Info] Trained model state loaded.'", ")", "\n", "return", "model", ",", "model_opt", ".", "output_dir", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.evaluate.translate.main": [[60, 110], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "dill.load", "len", "len", "torchtext.data.Dataset", "torch.device", "translate.load_model", "translator.Translator().to", "print", "open", "open", "tqdm.tqdm", "translator.Translator", "os.path.join", "torch.LongTensor().to", "convert_to_onehot().to", "Translator().to.translate_sentence", "pred_line.replace.replace().replace", "pred_line.replace.replace", "pred_line.replace.replace", "f.write", "torch.LongTensor", "translate.convert_to_onehot", "pred_line.replace.replace", "pred_line.replace.strip", "SRC.vocab.stoi.get"], "function", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.evaluate.translate.load_model", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.evaluate.translator.Translator.translate_sentence", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.convert_to_onehot"], ["", "def", "main", "(", ")", ":", "\n", "    ", "'''Main Function'''", "\n", "\n", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'translate.py'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--model'", ",", "required", "=", "True", ",", "help", "=", "'Path to model weight file'", ")", "\n", "parser", ".", "add_argument", "(", "'--data_pkl'", ",", "required", "=", "True", ",", "help", "=", "'Pickle file with both instances and vocabulary.'", ")", "\n", "# parser.add_argument('--output', default='otuput/pred.txt', help=\"\"\"Path to output the predictions (each line will be the decoded sequence\"\"\")", "\n", "parser", ".", "add_argument", "(", "'--beam_size'", ",", "type", "=", "int", ",", "default", "=", "5", ")", "\n", "parser", ".", "add_argument", "(", "'--max_seq_len'", ",", "type", "=", "int", ",", "default", "=", "100", ")", "\n", "parser", ".", "add_argument", "(", "'--no_cuda'", ",", "action", "=", "'store_true'", ")", "\n", "opt", "=", "parser", ".", "parse_args", "(", ")", "\n", "opt", ".", "cuda", "=", "not", "opt", ".", "no_cuda", "\n", "\n", "data", "=", "pickle", ".", "load", "(", "open", "(", "opt", ".", "data_pkl", ",", "'rb'", ")", ")", "\n", "SRC", ",", "TRG", "=", "data", "[", "'vocab'", "]", "[", "'src'", "]", ",", "data", "[", "'vocab'", "]", "[", "'trg'", "]", "\n", "opt", ".", "src_pad_idx", "=", "SRC", ".", "vocab", ".", "stoi", "[", "PAD_WORD", "]", "\n", "opt", ".", "trg_pad_idx", "=", "TRG", ".", "vocab", ".", "stoi", "[", "PAD_WORD", "]", "\n", "opt", ".", "trg_bos_idx", "=", "TRG", ".", "vocab", ".", "stoi", "[", "BOS_WORD", "]", "\n", "opt", ".", "trg_eos_idx", "=", "TRG", ".", "vocab", ".", "stoi", "[", "EOS_WORD", "]", "\n", "opt", ".", "src_vocab_size", "=", "len", "(", "SRC", ".", "vocab", ")", "\n", "opt", ".", "trg_vocab_size", "=", "len", "(", "TRG", ".", "vocab", ")", "\n", "\n", "test_loader", "=", "Dataset", "(", "examples", "=", "data", "[", "'test'", "]", ",", "fields", "=", "{", "'src'", ":", "SRC", ",", "'trg'", ":", "TRG", "}", ")", "\n", "\n", "device", "=", "torch", ".", "device", "(", "'cuda'", "if", "opt", ".", "cuda", "else", "'cpu'", ")", "\n", "model", ",", "output_dir", "=", "load_model", "(", "opt", ",", "device", ")", "\n", "translator", "=", "Translator", "(", "\n", "model", "=", "model", ",", "\n", "beam_size", "=", "opt", ".", "beam_size", ",", "\n", "max_seq_len", "=", "opt", ".", "max_seq_len", ",", "\n", "src_pad_idx", "=", "opt", ".", "src_pad_idx", ",", "\n", "trg_pad_idx", "=", "opt", ".", "trg_pad_idx", ",", "\n", "trg_bos_idx", "=", "opt", ".", "trg_bos_idx", ",", "\n", "trg_eos_idx", "=", "opt", ".", "trg_eos_idx", ",", "\n", "trg_vocab_size", "=", "opt", ".", "trg_vocab_size", ")", ".", "to", "(", "device", ")", "\n", "\n", "unk_idx", "=", "SRC", ".", "vocab", ".", "stoi", "[", "SRC", ".", "unk_token", "]", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "output_dir", ",", "'predictions.txt'", ")", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "for", "example", "in", "tqdm", "(", "test_loader", ",", "mininterval", "=", "2", ",", "desc", "=", "'  - (Test)'", ",", "leave", "=", "False", ")", ":", "\n", "            ", "original_src_seq", "=", "torch", ".", "LongTensor", "(", "[", "[", "SRC", ".", "vocab", ".", "stoi", ".", "get", "(", "word", ",", "unk_idx", ")", "for", "word", "in", "example", ".", "src", "]", "]", ")", ".", "to", "(", "device", ")", "\n", "onehot_src_seq", "=", "convert_to_onehot", "(", "original_src_seq", ",", "opt", ".", "src_vocab_size", ")", ".", "to", "(", "device", ")", "\n", "pred_seq", "=", "translator", ".", "translate_sentence", "(", "onehot_src_seq", ",", "original_src_seq", ")", "\n", "pred_line", "=", "' '", ".", "join", "(", "TRG", ".", "vocab", ".", "itos", "[", "idx", "]", "for", "idx", "in", "pred_seq", ")", "\n", "pred_line", "=", "pred_line", ".", "replace", "(", "BOS_WORD", ",", "''", ")", ".", "replace", "(", "EOS_WORD", ",", "''", ")", "\n", "pred_line", "=", "pred_line", ".", "replace", "(", "' ,'", ",", "','", ")", "\n", "pred_line", "=", "pred_line", ".", "replace", "(", "' .'", ",", "'.'", ")", "\n", "f", ".", "write", "(", "pred_line", ".", "strip", "(", ")", "+", "'\\n'", ")", "\n", "\n", "", "", "print", "(", "'[Info] Finished.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.evaluate.translator.Translator.__init__": [[23, 45], ["torch.Module.__init__", "translator.Translator.model.eval", "translator.Translator.register_buffer", "translator.Translator.register_buffer", "translator.Translator.register_buffer", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.arange().unsqueeze", "torch.arange().unsqueeze", "torch.arange().unsqueeze", "torch.arange().unsqueeze", "torch.arange().unsqueeze", "torch.arange().unsqueeze", "torch.arange().unsqueeze", "torch.arange().unsqueeze", "torch.arange().unsqueeze", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__"], ["def", "__init__", "(", "self", ",", "model", ",", "beam_size", ",", "max_seq_len", ",", "src_pad_idx", ",", "trg_pad_idx", ",", "trg_bos_idx", ",", "trg_eos_idx", ",", "trg_vocab_size", ")", ":", "\n", "        ", "super", "(", "Translator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "alpha", "=", "0.7", "\n", "self", ".", "beam_size", "=", "beam_size", "\n", "self", ".", "max_seq_len", "=", "max_seq_len", "\n", "self", ".", "src_pad_idx", "=", "src_pad_idx", "\n", "self", ".", "trg_bos_idx", "=", "trg_bos_idx", "\n", "self", ".", "trg_eos_idx", "=", "trg_eos_idx", "\n", "self", ".", "trg_vocab_size", "=", "trg_vocab_size", "\n", "\n", "self", ".", "model", "=", "model", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "\n", "self", ".", "register_buffer", "(", "'init_seq'", ",", "torch", ".", "LongTensor", "(", "[", "[", "trg_bos_idx", "]", "]", ")", ")", "\n", "self", ".", "register_buffer", "(", "\n", "'blank_seqs'", ",", "\n", "torch", ".", "full", "(", "(", "beam_size", ",", "max_seq_len", ")", ",", "trg_pad_idx", ",", "dtype", "=", "torch", ".", "long", ")", ")", "\n", "self", ".", "blank_seqs", "[", ":", ",", "0", "]", "=", "self", ".", "trg_bos_idx", "\n", "self", ".", "register_buffer", "(", "\n", "'len_map'", ",", "\n", "torch", ".", "arange", "(", "1", ",", "max_seq_len", "+", "1", ",", "dtype", "=", "torch", ".", "long", ")", ".", "unsqueeze", "(", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.evaluate.translator.Translator.convert_to_onehot": [[46, 52], ["idx_input.reshape().to.reshape().to.size", "idx_input.reshape().to.reshape().to.reshape().to", "torch.zeros().scatter", "torch.zeros().scatter", "torch.zeros().scatter", "torch.zeros().scatter", "torch.zeros().scatter", "torch.zeros().scatter", "torch.zeros().scatter", "torch.zeros().scatter", "torch.zeros().scatter", "one_hot.reshape.reshape.reshape", "idx_input.reshape().to.reshape().to.reshape", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "idx_input.reshape().to.reshape().to.size"], "methods", ["None"], ["", "def", "convert_to_onehot", "(", "self", ",", "idx_input", ",", "vocab_size", ")", ":", "\n", "        ", "original_batch", ",", "original_word_nums", "=", "idx_input", ".", "size", "(", ")", "\n", "idx_input", "=", "idx_input", ".", "reshape", "(", "-", "1", ",", "1", ")", ".", "to", "(", "'cpu'", ")", "\n", "one_hot", "=", "torch", ".", "zeros", "(", "idx_input", ".", "size", "(", "0", ")", ",", "vocab_size", ")", ".", "scatter", "(", "1", ",", "idx_input", ",", "1", ")", "\n", "one_hot", "=", "one_hot", ".", "reshape", "(", "original_batch", ",", "original_word_nums", ",", "vocab_size", ")", "\n", "return", "one_hot", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.evaluate.translator.Translator._model_decode": [[53, 58], ["translator.get_subsequent_mask", "translator.Translator.convert_to_onehot().to", "translator.Translator.model.decoder", "torch.softmax", "torch.softmax", "torch.softmax", "translator.Translator.model.trg_word_prj", "translator.Translator.convert_to_onehot"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.get_subsequent_mask", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.convert_to_onehot"], ["", "def", "_model_decode", "(", "self", ",", "trg_seq", ",", "enc_output", ",", "src_mask", ")", ":", "\n", "        ", "trg_mask", "=", "get_subsequent_mask", "(", "trg_seq", ")", "\n", "onehot_trg_seq", "=", "self", ".", "convert_to_onehot", "(", "trg_seq", ",", "self", ".", "trg_vocab_size", ")", ".", "to", "(", "trg_seq", ".", "device", ")", "\n", "dec_output", ",", "*", "_", "=", "self", ".", "model", ".", "decoder", "(", "onehot_trg_seq", ",", "trg_mask", ",", "enc_output", ",", "src_mask", ")", "\n", "return", "F", ".", "softmax", "(", "self", ".", "model", ".", "trg_word_prj", "(", "dec_output", ")", ",", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.evaluate.translator.Translator._get_init_state": [[59, 72], ["translator.Translator.model.encoder", "translator.Translator._model_decode", "dec_output[].topk", "torch.log().view", "torch.log().view", "torch.log().view", "torch.log().view", "torch.log().view", "torch.log().view", "torch.log().view", "torch.log().view", "torch.log().view", "translator.Translator.blank_seqs.clone().detach", "enc_output.repeat.repeat.repeat", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "translator.Translator.blank_seqs.clone"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.evaluate.translator.Translator._model_decode"], ["", "def", "_get_init_state", "(", "self", ",", "src_seq", ",", "src_mask", ")", ":", "\n", "        ", "beam_size", "=", "self", ".", "beam_size", "\n", "\n", "enc_output", ",", "*", "_", "=", "self", ".", "model", ".", "encoder", "(", "src_seq", ",", "src_mask", ")", "\n", "dec_output", "=", "self", ".", "_model_decode", "(", "self", ".", "init_seq", ",", "enc_output", ",", "src_mask", ")", "\n", "\n", "best_k_probs", ",", "best_k_idx", "=", "dec_output", "[", ":", ",", "-", "1", ",", ":", "]", ".", "topk", "(", "beam_size", ")", "\n", "\n", "scores", "=", "torch", ".", "log", "(", "best_k_probs", ")", ".", "view", "(", "beam_size", ")", "\n", "gen_seq", "=", "self", ".", "blank_seqs", ".", "clone", "(", ")", ".", "detach", "(", ")", "\n", "gen_seq", "[", ":", ",", "1", "]", "=", "best_k_idx", "[", "0", "]", "\n", "enc_output", "=", "enc_output", ".", "repeat", "(", "beam_size", ",", "1", ",", "1", ")", "\n", "return", "enc_output", ",", "gen_seq", ",", "scores", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.evaluate.translator.Translator._get_the_best_score_and_idx": [[73, 97], ["dec_output[].topk", "scores.view().topk", "len", "torch.log().view", "torch.log().view", "torch.log().view", "torch.log().view", "torch.log().view", "torch.log().view", "torch.log().view", "torch.log().view", "torch.log().view", "scores.view", "scores.size", "scores.view", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log"], "methods", ["None"], ["", "def", "_get_the_best_score_and_idx", "(", "self", ",", "gen_seq", ",", "dec_output", ",", "scores", ",", "step", ")", ":", "\n", "        ", "assert", "len", "(", "scores", ".", "size", "(", ")", ")", "==", "1", "\n", "\n", "beam_size", "=", "self", ".", "beam_size", "\n", "\n", "# Get k candidates for each beam, k^2 candidates in total.", "\n", "best_k2_probs", ",", "best_k2_idx", "=", "dec_output", "[", ":", ",", "-", "1", ",", ":", "]", ".", "topk", "(", "beam_size", ")", "\n", "\n", "# Include the previous scores.", "\n", "scores", "=", "torch", ".", "log", "(", "best_k2_probs", ")", ".", "view", "(", "beam_size", ",", "-", "1", ")", "+", "scores", ".", "view", "(", "beam_size", ",", "1", ")", "\n", "\n", "# Get the best k candidates from k^2 candidates.", "\n", "scores", ",", "best_k_idx_in_k2", "=", "scores", ".", "view", "(", "-", "1", ")", ".", "topk", "(", "beam_size", ")", "\n", "\n", "# Get the corresponding positions of the best k candidiates.", "\n", "best_k_r_idxs", ",", "best_k_c_idxs", "=", "best_k_idx_in_k2", "//", "beam_size", ",", "best_k_idx_in_k2", "%", "beam_size", "\n", "best_k_idx", "=", "best_k2_idx", "[", "best_k_r_idxs", ",", "best_k_c_idxs", "]", "\n", "\n", "# Copy the corresponding previous tokens.", "\n", "gen_seq", "[", ":", ",", ":", "step", "]", "=", "gen_seq", "[", "best_k_r_idxs", ",", ":", "step", "]", "\n", "# Set the best tokens in this beam search step", "\n", "gen_seq", "[", ":", ",", "step", "]", "=", "best_k_idx", "\n", "\n", "return", "gen_seq", ",", "scores", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.evaluate.translator.Translator.translate_sentence": [[98, 126], ["[].tolist", "original_src_seq.size", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "translator.get_pad_mask", "translator.Translator._get_init_state", "range", "translator.Translator._model_decode", "translator.Translator._get_the_best_score_and_idx", "translator.Translator.len_map.masked_fill().min", "scores.div().max", "ans_idx.item.item.item", "translator.Translator.len_map.masked_fill", "scores.div", "seq_lens.float", "eos_locs.sum"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.get_pad_mask", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.evaluate.translator.Translator._get_init_state", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.evaluate.translator.Translator._model_decode", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.evaluate.translator.Translator._get_the_best_score_and_idx"], ["", "def", "translate_sentence", "(", "self", ",", "onehot_src_seq", ",", "original_src_seq", ")", ":", "\n", "# Only accept batch size equals to 1 in this function.", "\n", "        ", "assert", "original_src_seq", ".", "size", "(", "0", ")", "==", "1", "\n", "\n", "src_pad_idx", ",", "trg_eos_idx", "=", "self", ".", "src_pad_idx", ",", "self", ".", "trg_eos_idx", "\n", "max_seq_len", ",", "beam_size", ",", "alpha", "=", "self", ".", "max_seq_len", ",", "self", ".", "beam_size", ",", "self", ".", "alpha", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "src_mask", "=", "get_pad_mask", "(", "original_src_seq", ",", "src_pad_idx", ")", "\n", "enc_output", ",", "gen_seq", ",", "scores", "=", "self", ".", "_get_init_state", "(", "onehot_src_seq", ",", "src_mask", ")", "\n", "\n", "ans_idx", "=", "0", "# default", "\n", "for", "step", "in", "range", "(", "2", ",", "max_seq_len", ")", ":", "# decode up to max length", "\n", "                ", "dec_output", "=", "self", ".", "_model_decode", "(", "gen_seq", "[", ":", ",", ":", "step", "]", ",", "enc_output", ",", "src_mask", ")", "\n", "gen_seq", ",", "scores", "=", "self", ".", "_get_the_best_score_and_idx", "(", "gen_seq", ",", "dec_output", ",", "scores", ",", "step", ")", "\n", "\n", "# Check if all path finished", "\n", "# -- locate the eos in the generated sequences", "\n", "eos_locs", "=", "gen_seq", "==", "trg_eos_idx", "\n", "# -- replace the eos with its position for the length penalty use", "\n", "seq_lens", ",", "_", "=", "self", ".", "len_map", ".", "masked_fill", "(", "~", "eos_locs", ",", "max_seq_len", ")", ".", "min", "(", "1", ")", "\n", "# -- check if all beams contain eos", "\n", "if", "(", "eos_locs", ".", "sum", "(", "1", ")", ">", "0", ")", ".", "sum", "(", "0", ")", ".", "item", "(", ")", "==", "beam_size", ":", "\n", "# TODO: Try different terminate conditions.", "\n", "                    ", "_", ",", "ans_idx", "=", "scores", ".", "div", "(", "seq_lens", ".", "float", "(", ")", "**", "alpha", ")", ".", "max", "(", "0", ")", "\n", "ans_idx", "=", "ans_idx", ".", "item", "(", ")", "\n", "break", "\n", "", "", "", "return", "gen_seq", "[", "ans_idx", "]", "[", ":", "seq_lens", "[", "ans_idx", "]", "]", ".", "tolist", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.evaluate.translator.get_pad_mask": [[8, 10], ["None"], "function", ["None"], ["def", "get_pad_mask", "(", "seq", ",", "pad_idx", ")", ":", "\n", "    ", "return", "(", "seq", "!=", "pad_idx", ")", ".", "unsqueeze", "(", "-", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.evaluate.translator.get_subsequent_mask": [[12, 18], ["seq.size", "torch.triu", "torch.triu", "torch.triu", "torch.ones", "torch.ones", "torch.ones"], "function", ["None"], ["", "def", "get_subsequent_mask", "(", "seq", ")", ":", "\n", "    ", "''' For masking out the subsequent info. '''", "\n", "sz_b", ",", "len_s", "=", "seq", ".", "size", "(", ")", "\n", "subsequent_mask", "=", "(", "1", "-", "torch", ".", "triu", "(", "\n", "torch", ".", "ones", "(", "(", "1", ",", "len_s", ",", "len_s", ")", ",", "device", "=", "seq", ".", "device", ")", ",", "diagonal", "=", "1", ")", ")", ".", "bool", "(", ")", "\n", "return", "subsequent_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.evaluate.imagenet_validataion.imagenet_validation": [[16, 45], ["datasets.imagenet_dataset.CustomImagenetDataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torchnet.meter.ClassErrorMeter", "torch.device", "torch.device", "torch.device", "model.to.to", "model.to.eval", "tnt.meter.ClassErrorMeter.value", "torch.no_grad", "torch.no_grad", "torch.no_grad", "tqdm.tqdm", "print", "print", "torchvision.Compose", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "inputs.cuda.cuda", "model.to.", "tnt.meter.ClassErrorMeter.add", "tnt.meter.ClassErrorMeter.value", "tnt.meter.ClassErrorMeter.value", "torchvision.Resize", "torchvision.CenterCrop", "torchvision.ToTensor", "torchvision.Normalize"], "function", ["None"], ["def", "imagenet_validation", "(", "model", ",", "val_data_path", ",", "num_threads", "=", "4", ",", "model_name", "=", "None", ",", "batch_size", "=", "32", ")", ":", "\n", "    ", "ds", "=", "imagenet_dataset", "(", "val_data_path", ",", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "256", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "224", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "]", ")", ")", "\n", "val_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "ds", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ",", "num_workers", "=", "num_threads", ",", "pin_memory", "=", "True", ")", "\n", "\n", "# for calculating accuracy", "\n", "class_err", "=", "tnt", ".", "meter", ".", "ClassErrorMeter", "(", "topk", "=", "[", "1", ",", "5", "]", ",", "accuracy", "=", "True", ")", "\n", "\n", "device", "=", "torch", ".", "device", "(", "\"cuda\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", ")", "\n", "model", "=", "model", ".", "to", "(", "device", ")", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "sample", "in", "tqdm", "(", "val_loader", ")", ":", "\n", "            ", "inputs", ",", "targets", "=", "sample", "\n", "inputs", "=", "inputs", ".", "cuda", "(", ")", "\n", "output", "=", "model", "(", "inputs", ")", "\n", "class_err", ".", "add", "(", "output", ".", "data", ",", "targets", ")", "\n", "\n", "", "", "if", "not", "model_name", ":", "\n", "        ", "print", "(", "'Validation top1/top5 accuracy:'", ",", "class_err", ".", "value", "(", ")", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "model_name", "+", "' Validation top1/top5 accuracy:'", ",", "class_err", ".", "value", "(", ")", ")", "\n", "\n", "", "return", "class_err", ".", "value", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet34.BasicBlock.__init__": [[25, 42], ["torch.Module.__init__", "resnet34.conv3x3", "norm_layer", "torch.ReLU", "torch.ReLU", "resnet34.conv3x3", "norm_layer", "ValueError", "NotImplementedError"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "if", "groups", "!=", "1", "or", "base_width", "!=", "64", ":", "\n", "            ", "raise", "ValueError", "(", "'BasicBlock only supports groups=1 and base_width=64'", ")", "\n", "", "if", "dilation", ">", "1", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"Dilation > 1 not supported in BasicBlock\"", ")", "\n", "# Both self.conv1 and self.downsample layers downsample the input when stride != 1", "\n", "", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "norm_layer", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet34.BasicBlock.forward": [[43, 60], ["resnet34.BasicBlock.conv1", "resnet34.BasicBlock.bn1", "resnet34.BasicBlock.relu", "resnet34.BasicBlock.conv2", "resnet34.BasicBlock.bn2", "resnet34.BasicBlock.relu", "resnet34.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet34.Bottleneck.__init__": [[65, 81], ["torch.Module.__init__", "resnet34.conv1x1", "norm_layer", "resnet34.conv3x3", "norm_layer", "resnet34.conv1x1", "norm_layer", "torch.ReLU", "torch.ReLU", "int"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "width", "=", "int", "(", "planes", "*", "(", "base_width", "/", "64.", ")", ")", "*", "groups", "\n", "# Both self.conv2 and self.downsample layers downsample the input when stride != 1", "\n", "self", ".", "conv1", "=", "conv1x1", "(", "inplanes", ",", "width", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "width", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "width", ",", "width", ",", "stride", ",", "groups", ",", "dilation", ")", "\n", "self", ".", "bn2", "=", "norm_layer", "(", "width", ")", "\n", "self", ".", "conv3", "=", "conv1x1", "(", "width", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "bn3", "=", "norm_layer", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet34.Bottleneck.forward": [[82, 103], ["resnet34.Bottleneck.conv1", "resnet34.Bottleneck.bn1", "resnet34.Bottleneck.relu", "resnet34.Bottleneck.conv2", "resnet34.Bottleneck.bn2", "resnet34.Bottleneck.relu", "resnet34.Bottleneck.conv3", "resnet34.Bottleneck.bn3", "resnet34.Bottleneck.relu", "resnet34.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet34.QuantizeBasicBlockV1.__init__": [[110, 151], ["torch.Module.__init__", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "resnet34.conv1x1", "resnet34.conv3x3", "resnet34.conv1x1", "resnet34.conv1x1", "resnet34.conv3x3", "resnet34.conv1x1", "resnet34.conv1x1", "resnet34.conv3x3", "resnet34.conv1x1", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Sigmoid", "torch.Sigmoid", "ValueError", "NotImplementedError"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ",", "weight_dtype", "=", "None", ",", "feature_dtype", "=", "None", ",", "squeeze_factor", "=", "8", ",", "zero_weight_mode", "=", "False", ",", "fa_res", "=", "True", ",", "is_train", "=", "True", ")", ":", "\n", "        ", "super", "(", "QuantizeBasicBlockV1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "if", "groups", "!=", "1", "or", "base_width", "!=", "64", ":", "\n", "            ", "raise", "ValueError", "(", "'BasicBlock only supports groups=1 and base_width=64'", ")", "\n", "", "if", "dilation", ">", "1", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"Dilation > 1 not supported in BasicBlock\"", ")", "\n", "# Both self.conv1 and self.downsample layers downsample the input when stride != 1", "\n", "", "self", ".", "conv1", "=", "DorefaConv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "quantize_activation_1", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "planes", ")", "\n", "self", ".", "conv2", "=", "DorefaConv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "quantize_activation_2", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "planes", ")", "\n", "self", ".", "concat_conv", "=", "DorefaConv2d", "(", "planes", "*", "2", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "quantize_activation_3", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n", "self", ".", "feature_adaptation_1_1", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_1_2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_1_3", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_2_1", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_2_2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_2_3", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_3_1", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_3_2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_3_3", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "fc1_1", "=", "nn", ".", "Linear", "(", "planes", ",", "planes", "//", "squeeze_factor", ")", "\n", "self", ".", "fc1_2", "=", "nn", ".", "Linear", "(", "planes", "//", "squeeze_factor", ",", "planes", ")", "\n", "self", ".", "fc2_1", "=", "nn", ".", "Linear", "(", "planes", ",", "planes", "//", "squeeze_factor", ")", "\n", "self", ".", "fc2_2", "=", "nn", ".", "Linear", "(", "planes", "//", "squeeze_factor", ",", "planes", ")", "\n", "self", ".", "fc3_1", "=", "nn", ".", "Linear", "(", "planes", ",", "planes", "//", "squeeze_factor", ")", "\n", "self", ".", "fc3_2", "=", "nn", ".", "Linear", "(", "planes", "//", "squeeze_factor", ",", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "fa_res", "=", "fa_res", "\n", "self", ".", "is_train", "=", "is_train", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet34.QuantizeBasicBlockV1.downsample_and_squeeze": [[152, 157], ["torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.Flatten", "torch.nn.Flatten", "torch.nn.Flatten", "torch.nn.Flatten"], "methods", ["None"], ["", "def", "downsample_and_squeeze", "(", "self", ",", "input_tensor", ")", ":", "\n", "        ", "out", "=", "torch", ".", "nn", ".", "functional", ".", "adaptive_avg_pool2d", "(", "input_tensor", ",", "(", "1", ",", "1", ")", ")", "\n", "out", "=", "torch", ".", "nn", ".", "Flatten", "(", ")", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet34.QuantizeBasicBlockV1.forward": [[158, 225], ["resnet34.QuantizeBasicBlockV1.conv1", "resnet34.QuantizeBasicBlockV1.bn1", "resnet34.QuantizeBasicBlockV1.relu", "resnet34.QuantizeBasicBlockV1.quantize_activation_1", "resnet34.QuantizeBasicBlockV1.conv2", "resnet34.QuantizeBasicBlockV1.bn2", "resnet34.QuantizeBasicBlockV1.relu", "resnet34.QuantizeBasicBlockV1.quantize_activation_2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet34.QuantizeBasicBlockV1.concat_conv", "resnet34.QuantizeBasicBlockV1.bn3", "resnet34.QuantizeBasicBlockV1.relu", "resnet34.QuantizeBasicBlockV1.quantize_activation_3", "resnet34.QuantizeBasicBlockV1.downsample_and_squeeze", "resnet34.QuantizeBasicBlockV1.fc1_1", "resnet34.QuantizeBasicBlockV1.relu", "resnet34.QuantizeBasicBlockV1.fc1_2", "resnet34.QuantizeBasicBlockV1.sigmoid", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "resnet34.QuantizeBasicBlockV1.feature_adaptation_1_1", "resnet34.QuantizeBasicBlockV1.feature_adaptation_1_2", "resnet34.QuantizeBasicBlockV1.feature_adaptation_1_3", "resnet34.QuantizeBasicBlockV1.downsample_and_squeeze", "resnet34.QuantizeBasicBlockV1.fc2_1", "resnet34.QuantizeBasicBlockV1.relu", "resnet34.QuantizeBasicBlockV1.fc2_2", "resnet34.QuantizeBasicBlockV1.sigmoid", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "resnet34.QuantizeBasicBlockV1.feature_adaptation_2_1", "resnet34.QuantizeBasicBlockV1.feature_adaptation_2_2", "resnet34.QuantizeBasicBlockV1.feature_adaptation_2_3", "resnet34.QuantizeBasicBlockV1.downsample", "resnet34.QuantizeBasicBlockV1.downsample_and_squeeze", "resnet34.QuantizeBasicBlockV1.fc3_1", "resnet34.QuantizeBasicBlockV1.relu", "resnet34.QuantizeBasicBlockV1.fc3_2", "resnet34.QuantizeBasicBlockV1.sigmoid", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "resnet34.QuantizeBasicBlockV1.feature_adaptation_3_1", "resnet34.QuantizeBasicBlockV1.feature_adaptation_3_2", "resnet34.QuantizeBasicBlockV1.feature_adaptation_3_3", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.expand_as", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.expand_as", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.expand_as", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.downsample_and_squeeze", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.downsample_and_squeeze", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.downsample_and_squeeze"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "is_train", ":", "\n", "            ", "teacher_middle_outputs", "=", "x", "[", "0", "]", "\n", "x", "=", "x", "[", "1", "]", "\n", "", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "quantize_activation_1", "(", "out", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "attention_out", "=", "self", ".", "downsample_and_squeeze", "(", "teacher_middle_outputs", "[", "0", "]", ")", "\n", "attention_out", "=", "self", ".", "fc1_1", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "relu", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "fc1_2", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "sigmoid", "(", "attention_out", ")", "\n", "attention_out", "=", "attention_out", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "attention_out", "=", "attention_out", ".", "expand_as", "(", "out", ")", "*", "out", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_1_1", "(", "attention_out", ")", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_1_2", "(", "feature_adaptation_1", ")", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_1_3", "(", "feature_adaptation_1", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_1", "=", "feature_adaptation_1", "+", "out", "\n", "\n", "", "", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "quantize_activation_2", "(", "out", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "attention_out", "=", "self", ".", "downsample_and_squeeze", "(", "teacher_middle_outputs", "[", "1", "]", ")", "\n", "attention_out", "=", "self", ".", "fc2_1", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "relu", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "fc2_2", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "sigmoid", "(", "attention_out", ")", "\n", "attention_out", "=", "attention_out", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "attention_out", "=", "attention_out", ".", "expand_as", "(", "out", ")", "*", "out", "\n", "feature_adaptation_2", "=", "self", ".", "feature_adaptation_2_1", "(", "attention_out", ")", "\n", "feature_adaptation_2", "=", "self", ".", "feature_adaptation_2_2", "(", "feature_adaptation_2", ")", "\n", "feature_adaptation_2", "=", "self", ".", "feature_adaptation_2_3", "(", "feature_adaptation_2", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_2", "=", "feature_adaptation_2", "+", "out", "\n", "\n", "", "", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "=", "torch", ".", "cat", "(", "(", "out", ",", "identity", ")", ",", "dim", "=", "1", ")", "\n", "out", "=", "self", ".", "concat_conv", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "quantize_activation_3", "(", "out", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "attention_out", "=", "self", ".", "downsample_and_squeeze", "(", "teacher_middle_outputs", "[", "2", "]", ")", "\n", "attention_out", "=", "self", ".", "fc3_1", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "relu", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "fc3_2", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "sigmoid", "(", "attention_out", ")", "\n", "attention_out", "=", "attention_out", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "attention_out", "=", "attention_out", ".", "expand_as", "(", "out", ")", "*", "out", "\n", "feature_adaptation_3", "=", "self", ".", "feature_adaptation_3_1", "(", "attention_out", ")", "\n", "feature_adaptation_3", "=", "self", ".", "feature_adaptation_3_2", "(", "feature_adaptation_3", ")", "\n", "feature_adaptation_3", "=", "self", ".", "feature_adaptation_3_3", "(", "feature_adaptation_3", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_3", "=", "feature_adaptation_3", "+", "out", "\n", "\n", "", "return", "[", "feature_adaptation_1", ",", "feature_adaptation_2", ",", "feature_adaptation_3", ",", "out", "]", "\n", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet34.QuantizeBasicBlockV2.__init__": [[232, 278], ["torch.Module.__init__", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "resnet34.conv1x1", "resnet34.conv3x3", "resnet34.conv1x1", "resnet34.conv1x1", "resnet34.conv3x3", "resnet34.conv1x1", "resnet34.conv1x1", "resnet34.conv3x3", "resnet34.conv1x1", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Sigmoid", "torch.Sigmoid", "ValueError", "NotImplementedError"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ",", "weight_dtype", "=", "None", ",", "feature_dtype", "=", "None", ",", "squeeze_factor", "=", "8", ",", "zero_weight_mode", "=", "False", ",", "fa_res", "=", "True", ",", "is_train", "=", "True", ")", ":", "\n", "        ", "super", "(", "QuantizeBasicBlockV2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "if", "groups", "!=", "1", "or", "base_width", "!=", "64", ":", "\n", "            ", "raise", "ValueError", "(", "'BasicBlock only supports groups=1 and base_width=64'", ")", "\n", "", "if", "dilation", ">", "1", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"Dilation > 1 not supported in BasicBlock\"", ")", "\n", "# Both self.conv1 and self.downsample layers downsample the input when stride != 1", "\n", "", "self", ".", "half_inplanes", "=", "inplanes", "//", "2", "\n", "self", ".", "half_planes", "=", "planes", "//", "2", "\n", "self", ".", "conv1", "=", "DorefaConv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "quantize_activation_1", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "planes", ")", "\n", "self", ".", "conv2", "=", "DorefaConv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "quantize_activation_2", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "planes", ")", "\n", "self", ".", "concat_conv1", "=", "DorefaConv2d", "(", "planes", ",", "self", ".", "half_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "concat_bn1", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "half_planes", ")", "\n", "self", ".", "concat_quantize_activation_1", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "self", ".", "half_planes", ")", "\n", "self", ".", "concat_conv2", "=", "DorefaConv2d", "(", "planes", ",", "self", ".", "half_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "concat_bn2", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "half_planes", ")", "\n", "self", ".", "concat_quantize_activation_2", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "self", ".", "half_planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n", "self", ".", "feature_adaptation_1_1", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_1_2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_1_3", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_2_1", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_2_2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_2_3", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_3_1", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_3_2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_3_3", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "fc1_1", "=", "nn", ".", "Linear", "(", "planes", ",", "planes", "//", "squeeze_factor", ")", "\n", "self", ".", "fc1_2", "=", "nn", ".", "Linear", "(", "planes", "//", "squeeze_factor", ",", "planes", ")", "\n", "self", ".", "fc2_1", "=", "nn", ".", "Linear", "(", "planes", ",", "planes", "//", "squeeze_factor", ")", "\n", "self", ".", "fc2_2", "=", "nn", ".", "Linear", "(", "planes", "//", "squeeze_factor", ",", "planes", ")", "\n", "self", ".", "fc3_1", "=", "nn", ".", "Linear", "(", "planes", ",", "planes", "//", "squeeze_factor", ")", "\n", "self", ".", "fc3_2", "=", "nn", ".", "Linear", "(", "planes", "//", "squeeze_factor", ",", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "fa_res", "=", "fa_res", "\n", "self", ".", "is_train", "=", "is_train", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet34.QuantizeBasicBlockV2.downsample_and_squeeze": [[279, 284], ["torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.Flatten", "torch.nn.Flatten", "torch.nn.Flatten", "torch.nn.Flatten"], "methods", ["None"], ["", "def", "downsample_and_squeeze", "(", "self", ",", "input_tensor", ")", ":", "\n", "        ", "out", "=", "torch", ".", "nn", ".", "functional", ".", "adaptive_avg_pool2d", "(", "input_tensor", ",", "(", "1", ",", "1", ")", ")", "\n", "out", "=", "torch", ".", "nn", ".", "Flatten", "(", ")", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet34.QuantizeBasicBlockV2.forward": [[285, 362], ["resnet34.QuantizeBasicBlockV2.conv1", "resnet34.QuantizeBasicBlockV2.bn1", "resnet34.QuantizeBasicBlockV2.relu", "resnet34.QuantizeBasicBlockV2.quantize_activation_1", "resnet34.QuantizeBasicBlockV2.conv2", "resnet34.QuantizeBasicBlockV2.bn2", "resnet34.QuantizeBasicBlockV2.relu", "resnet34.QuantizeBasicBlockV2.quantize_activation_2", "resnet34.QuantizeBasicBlockV2.concat_conv1", "resnet34.QuantizeBasicBlockV2.concat_bn1", "resnet34.QuantizeBasicBlockV2.relu", "resnet34.QuantizeBasicBlockV2.concat_quantize_activation_1", "resnet34.QuantizeBasicBlockV2.concat_conv2", "resnet34.QuantizeBasicBlockV2.concat_bn2", "resnet34.QuantizeBasicBlockV2.relu", "resnet34.QuantizeBasicBlockV2.concat_quantize_activation_2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "isinstance", "resnet34.QuantizeBasicBlockV2.downsample_and_squeeze", "resnet34.QuantizeBasicBlockV2.fc1_1", "resnet34.QuantizeBasicBlockV2.relu", "resnet34.QuantizeBasicBlockV2.fc1_2", "resnet34.QuantizeBasicBlockV2.sigmoid", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "resnet34.QuantizeBasicBlockV2.feature_adaptation_1_1", "resnet34.QuantizeBasicBlockV2.feature_adaptation_1_2", "resnet34.QuantizeBasicBlockV2.feature_adaptation_1_3", "resnet34.QuantizeBasicBlockV2.downsample_and_squeeze", "resnet34.QuantizeBasicBlockV2.fc2_1", "resnet34.QuantizeBasicBlockV2.relu", "resnet34.QuantizeBasicBlockV2.fc2_2", "resnet34.QuantizeBasicBlockV2.sigmoid", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "resnet34.QuantizeBasicBlockV2.feature_adaptation_2_1", "resnet34.QuantizeBasicBlockV2.feature_adaptation_2_2", "resnet34.QuantizeBasicBlockV2.feature_adaptation_2_3", "resnet34.QuantizeBasicBlockV2.downsample", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet34.QuantizeBasicBlockV2.downsample_and_squeeze", "resnet34.QuantizeBasicBlockV2.fc3_1", "resnet34.QuantizeBasicBlockV2.relu", "resnet34.QuantizeBasicBlockV2.fc3_2", "resnet34.QuantizeBasicBlockV2.sigmoid", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "resnet34.QuantizeBasicBlockV2.feature_adaptation_3_1", "resnet34.QuantizeBasicBlockV2.feature_adaptation_3_2", "resnet34.QuantizeBasicBlockV2.feature_adaptation_3_3", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.expand_as", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.expand_as", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.expand_as", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.downsample_and_squeeze", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.downsample_and_squeeze", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.downsample_and_squeeze"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "is_train", ":", "\n", "            ", "if", "isinstance", "(", "x", ",", "list", ")", ":", "\n", "                ", "teacher_middle_outputs", "=", "x", "[", "0", "]", "\n", "x", "=", "x", "[", "1", "]", "\n", "", "", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "quantize_activation_1", "(", "out", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "attention_out", "=", "self", ".", "downsample_and_squeeze", "(", "teacher_middle_outputs", "[", "0", "]", ")", "\n", "attention_out", "=", "self", ".", "fc1_1", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "relu", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "fc1_2", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "sigmoid", "(", "attention_out", ")", "\n", "attention_out", "=", "attention_out", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "attention_out", "=", "attention_out", ".", "expand_as", "(", "out", ")", "*", "out", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_1_1", "(", "attention_out", ")", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_1_2", "(", "feature_adaptation_1", ")", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_1_3", "(", "feature_adaptation_1", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_1", "=", "feature_adaptation_1", "+", "out", "\n", "\n", "", "", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "quantize_activation_2", "(", "out", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "attention_out", "=", "self", ".", "downsample_and_squeeze", "(", "teacher_middle_outputs", "[", "1", "]", ")", "\n", "attention_out", "=", "self", ".", "fc2_1", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "relu", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "fc2_2", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "sigmoid", "(", "attention_out", ")", "\n", "attention_out", "=", "attention_out", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "attention_out", "=", "attention_out", ".", "expand_as", "(", "out", ")", "*", "out", "\n", "feature_adaptation_2", "=", "self", ".", "feature_adaptation_2_1", "(", "attention_out", ")", "\n", "feature_adaptation_2", "=", "self", ".", "feature_adaptation_2_2", "(", "feature_adaptation_2", ")", "\n", "feature_adaptation_2", "=", "self", ".", "feature_adaptation_2_3", "(", "feature_adaptation_2", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_2", "=", "feature_adaptation_2", "+", "out", "\n", "\n", "", "", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "identity", ")", "\n", "", "identity1", "=", "identity", "[", ":", ",", ":", "self", ".", "half_planes", "]", "\n", "identity2", "=", "identity", "[", ":", ",", "self", ".", "half_planes", ":", "]", "\n", "\n", "out1", "=", "out", "[", ":", ",", ":", "self", ".", "half_planes", "]", "\n", "out2", "=", "out", "[", ":", ",", "self", ".", "half_planes", ":", "]", "\n", "\n", "out1", "=", "self", ".", "concat_conv1", "(", "torch", ".", "cat", "(", "(", "out1", ",", "identity1", ")", ",", "dim", "=", "1", ")", ")", "\n", "out1", "=", "self", ".", "concat_bn1", "(", "out1", ")", "\n", "out1", "=", "self", ".", "relu", "(", "out1", ")", "\n", "out1", "=", "self", ".", "concat_quantize_activation_1", "(", "out1", ")", "\n", "out2", "=", "self", ".", "concat_conv2", "(", "torch", ".", "cat", "(", "(", "out2", ",", "identity2", ")", ",", "dim", "=", "1", ")", ")", "\n", "out2", "=", "self", ".", "concat_bn2", "(", "out2", ")", "\n", "out2", "=", "self", ".", "relu", "(", "out2", ")", "\n", "out2", "=", "self", ".", "concat_quantize_activation_2", "(", "out2", ")", "\n", "out", "=", "torch", ".", "cat", "(", "(", "out1", ",", "out2", ")", ",", "dim", "=", "1", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "attention_out", "=", "self", ".", "downsample_and_squeeze", "(", "teacher_middle_outputs", "[", "2", "]", ")", "\n", "attention_out", "=", "self", ".", "fc3_1", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "relu", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "fc3_2", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "sigmoid", "(", "attention_out", ")", "\n", "attention_out", "=", "attention_out", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "attention_out", "=", "attention_out", ".", "expand_as", "(", "out", ")", "*", "out", "\n", "feature_adaptation_3", "=", "self", ".", "feature_adaptation_3_1", "(", "attention_out", ")", "\n", "feature_adaptation_3", "=", "self", ".", "feature_adaptation_3_2", "(", "feature_adaptation_3", ")", "\n", "feature_adaptation_3", "=", "self", ".", "feature_adaptation_3_3", "(", "feature_adaptation_3", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_3", "=", "feature_adaptation_3", "+", "out", "\n", "\n", "", "return", "[", "feature_adaptation_1", ",", "feature_adaptation_2", ",", "feature_adaptation_3", ",", "out", "]", "\n", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet34.ArchNetResNet.__init__": [[365, 413], ["torch.Module.__init__", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "torch.MaxPool2d", "torch.MaxPool2d", "torch.ReLU", "torch.ReLU", "resnet34.ArchNetResNet._make_layer", "resnet34.ArchNetResNet._make_layer", "resnet34.ArchNetResNet._make_layer", "resnet34.ArchNetResNet._make_layer", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "operators.dorefa.dorefa.DorefaLinear1d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "resnet34.ArchNetResNet.modules", "len", "ValueError", "isinstance", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block_normal", ",", "block_split", ",", "layers", ",", "weight_dtype", ",", "feature_dtype", ",", "num_classes", "=", "1000", ",", "\n", "groups", "=", "1", ",", "width_per_group", "=", "64", ",", "replace_stride_with_dilation", "=", "None", ",", "\n", "norm_layer", "=", "None", ",", "squeeze_factor", "=", "8", ",", "distillation_idx", "=", "None", ",", "fa_res", "=", "True", ",", "is_train", "=", "True", ")", ":", "\n", "        ", "super", "(", "ArchNetResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "self", ".", "_norm_layer", "=", "norm_layer", "\n", "\n", "self", ".", "inplanes", "=", "64", "\n", "self", ".", "dilation", "=", "1", "\n", "if", "replace_stride_with_dilation", "is", "None", ":", "\n", "# each element in the tuple indicates if we should replace", "\n", "# the 2x2 stride with a dilated convolution instead", "\n", "            ", "replace_stride_with_dilation", "=", "[", "False", ",", "False", ",", "False", "]", "\n", "", "if", "len", "(", "replace_stride_with_dilation", ")", "!=", "3", ":", "\n", "            ", "raise", "ValueError", "(", "\"replace_stride_with_dilation should be None \"", "\n", "\"or a 3-element tuple, got {}\"", ".", "format", "(", "replace_stride_with_dilation", ")", ")", "\n", "", "self", ".", "groups", "=", "groups", "\n", "self", ".", "base_width", "=", "width_per_group", "\n", "self", ".", "w_dtype", "=", "weight_dtype", "\n", "self", ".", "f_dtype", "=", "feature_dtype", "\n", "self", ".", "conv1", "=", "DorefaConv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "quantize_activation_1", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "64", ")", "\n", "self", ".", "conv2", "=", "DorefaConv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "quantize_activation_2", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "64", ")", "\n", "self", ".", "conv3", "=", "DorefaConv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "quantize_activation_3", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "64", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block_normal", ",", "64", ",", "layers", "[", "0", "]", ",", "squeeze_factor", "=", "squeeze_factor", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block_normal", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ",", "\n", "dilate", "=", "replace_stride_with_dilation", "[", "0", "]", ",", "squeeze_factor", "=", "squeeze_factor", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block_normal", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ",", "\n", "dilate", "=", "replace_stride_with_dilation", "[", "1", "]", ",", "squeeze_factor", "=", "squeeze_factor", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block_split", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ",", "\n", "dilate", "=", "replace_stride_with_dilation", "[", "2", "]", ",", "squeeze_factor", "=", "squeeze_factor", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "fc", "=", "DorefaLinear1d", "(", "512", ",", "1000", ",", "weight_dtype", "=", "DATA_TYPE_DICT", "[", "'uint8'", "]", ",", "bias", "=", "True", ",", "quant_weight_mode", "=", "'gaussian'", ")", "\n", "self", ".", "quantize_activation_fc", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "DATA_TYPE_DICT", "[", "'int16'", "]", ",", "out_channels", "=", "1000", ",", "out_scale", "=", "32", ",", "after_bn", "=", "False", ")", "\n", "self", ".", "distillation_idx", "=", "distillation_idx", "\n", "self", ".", "is_train", "=", "is_train", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "# elif isinstance(m, (nn.BatchNorm2d, nn.GroupNorm)):", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet34.ArchNetResNet._make_layer": [[417, 441], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "operators.dorefa.dorefa.DorefaQuantizeActivation", "block"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ",", "dilate", "=", "False", ",", "squeeze_factor", "=", "8", ",", "fa_res", "=", "True", ",", "is_train", "=", "True", ")", ":", "\n", "        ", "norm_layer", "=", "self", ".", "_norm_layer", "\n", "downsample", "=", "None", "\n", "previous_dilation", "=", "self", ".", "dilation", "\n", "if", "dilate", ":", "\n", "            ", "self", ".", "dilation", "*=", "stride", "\n", "stride", "=", "1", "\n", "", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "DorefaConv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "self", ".", "w_dtype", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "self", ".", "f_dtype", ",", "out_channels", "=", "64", ")", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "weight_dtype", "=", "self", ".", "w_dtype", ",", "feature_dtype", "=", "self", ".", "f_dtype", ",", "stride", "=", "stride", ",", "downsample", "=", "downsample", ",", "groups", "=", "self", ".", "groups", ",", "\n", "base_width", "=", "self", ".", "base_width", ",", "dilation", "=", "previous_dilation", ",", "norm_layer", "=", "norm_layer", ",", "squeeze_factor", "=", "squeeze_factor", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "_", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "weight_dtype", "=", "self", ".", "w_dtype", ",", "feature_dtype", "=", "self", ".", "f_dtype", ",", "groups", "=", "self", ".", "groups", ",", "\n", "base_width", "=", "self", ".", "base_width", ",", "dilation", "=", "self", ".", "dilation", ",", "\n", "norm_layer", "=", "norm_layer", ",", "squeeze_factor", "=", "squeeze_factor", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet34.ArchNetResNet._forward_impl": [[442, 487], ["resnet34.ArchNetResNet.conv1", "resnet34.ArchNetResNet.bn1", "resnet34.ArchNetResNet.relu", "resnet34.ArchNetResNet.quantize_activation_1", "resnet34.ArchNetResNet.conv2", "resnet34.ArchNetResNet.bn2", "resnet34.ArchNetResNet.relu", "resnet34.ArchNetResNet.quantize_activation_2", "resnet34.ArchNetResNet.conv3", "resnet34.ArchNetResNet.bn3", "resnet34.ArchNetResNet.relu", "resnet34.ArchNetResNet.quantize_activation_3", "resnet34.ArchNetResNet.maxpool", "resnet34.ArchNetResNet.avgpool", "resnet34.ArchNetResNet.fc", "resnet34.ArchNetResNet.quantize_activation_fc", "isinstance", "all_middle_outputs.append", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "all_middle_outputs.append", "block", "all_middle_outputs.extend", "block"], "methods", ["None"], ["", "def", "_forward_impl", "(", "self", ",", "x", ")", ":", "\n", "# See note [TorchScript super()]", "\n", "        ", "if", "self", ".", "is_train", ":", "\n", "            ", "all_middle_outputs", "=", "[", "]", "\n", "if", "isinstance", "(", "x", ",", "list", ")", ":", "\n", "                ", "teacher_middle_outputs", "=", "x", "[", "0", "]", "\n", "x", "=", "x", "[", "1", "]", "\n", "\n", "", "", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "quantize_activation_1", "(", "x", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "x", "=", "self", ".", "bn2", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "quantize_activation_2", "(", "x", ")", "\n", "x", "=", "self", ".", "conv3", "(", "x", ")", "\n", "x", "=", "self", ".", "bn3", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "quantize_activation_3", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "all_middle_outputs", ".", "append", "(", "x", ")", "\n", "\n", "", "block_count", "=", "0", "\n", "for", "layer", "in", "[", "self", ".", "layer1", ",", "self", ".", "layer2", ",", "self", ".", "layer3", ",", "self", ".", "layer4", "]", ":", "\n", "            ", "for", "block", "in", "layer", ":", "\n", "                ", "block_count", "+=", "1", "\n", "if", "self", ".", "is_train", ":", "\n", "                    ", "tmp_teacher_middle_outputs", "=", "teacher_middle_outputs", "[", "3", "*", "block_count", "-", "2", ":", "3", "*", "block_count", "+", "1", "]", "\n", "outs", "=", "block", "(", "[", "tmp_teacher_middle_outputs", ",", "x", "]", ")", "\n", "x", "=", "outs", "[", "-", "1", "]", "\n", "all_middle_outputs", ".", "extend", "(", "outs", "[", ":", "-", "1", "]", ")", "\n", "", "else", ":", "\n", "                    ", "x", "=", "block", "(", "x", ")", "\n", "\n", "", "", "", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "self", ".", "fc", "(", "torch", ".", "flatten", "(", "x", ",", "1", ")", ")", "\n", "x", "=", "self", ".", "quantize_activation_fc", "(", "x", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "all_middle_outputs", ".", "append", "(", "x", ")", "\n", "return", "all_middle_outputs", "[", ":", "self", ".", "distillation_idx", "+", "1", "]", "\n", "", "else", ":", "\n", "            ", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet34.ArchNetResNet.forward": [[488, 490], ["resnet34.ArchNetResNet._forward_impl"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.ResNet._forward_impl"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "_forward_impl", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet34.conv3x3": [[11, 15], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ",", "groups", "=", "1", ",", "dilation", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "dilation", ",", "groups", "=", "groups", ",", "bias", "=", "False", ",", "dilation", "=", "dilation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet34.conv1x1": [[17, 20], ["torch.Conv2d"], "function", ["None"], ["", "def", "conv1x1", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"1x1 convolution\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet34.archnet_resnet34": [[492, 500], ["resnet34.ArchNetResNet"], "function", ["None"], ["", "", "def", "archnet_resnet34", "(", "weight_bit", ",", "feature_bit", ",", "squeeze_factor", "=", "24", ",", "distillation_idx", "=", "None", ",", "fa_res", "=", "True", ",", "is_train", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "bit_map_dict", "=", "{", "2", ":", "'uint2'", ",", "4", ":", "'uint4'", ",", "8", ":", "'uint8'", "}", "\n", "if", "weight_bit", "not", "in", "bit_map_dict", "or", "feature_bit", "not", "in", "bit_map_dict", ":", "\n", "        ", "assert", "False", ",", "'Not supported bit width'", "\n", "\n", "", "model", "=", "ArchNetResNet", "(", "QuantizeBasicBlockV1", ",", "QuantizeBasicBlockV2", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "weight_dtype", "=", "DATA_TYPE_DICT", "[", "bit_map_dict", "[", "weight_bit", "]", "]", ",", "feature_dtype", "=", "DATA_TYPE_DICT", "[", "bit_map_dict", "[", "feature_bit", "]", "]", ",", "squeeze_factor", "=", "squeeze_factor", ",", "distillation_idx", "=", "distillation_idx", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ",", "**", "kwargs", ")", "\n", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet18.BasicBlock.__init__": [[25, 42], ["torch.Module.__init__", "resnet18.conv3x3", "norm_layer", "torch.ReLU", "torch.ReLU", "resnet18.conv3x3", "norm_layer", "ValueError", "NotImplementedError"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "if", "groups", "!=", "1", "or", "base_width", "!=", "64", ":", "\n", "            ", "raise", "ValueError", "(", "'BasicBlock only supports groups=1 and base_width=64'", ")", "\n", "", "if", "dilation", ">", "1", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"Dilation > 1 not supported in BasicBlock\"", ")", "\n", "# Both self.conv1 and self.downsample layers downsample the input when stride != 1", "\n", "", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "norm_layer", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet18.BasicBlock.forward": [[43, 60], ["resnet18.BasicBlock.conv1", "resnet18.BasicBlock.bn1", "resnet18.BasicBlock.relu", "resnet18.BasicBlock.conv2", "resnet18.BasicBlock.bn2", "resnet18.BasicBlock.relu", "resnet18.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet18.Bottleneck.__init__": [[65, 81], ["torch.Module.__init__", "resnet18.conv1x1", "norm_layer", "resnet18.conv3x3", "norm_layer", "resnet18.conv1x1", "norm_layer", "torch.ReLU", "torch.ReLU", "int"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "width", "=", "int", "(", "planes", "*", "(", "base_width", "/", "64.", ")", ")", "*", "groups", "\n", "# Both self.conv2 and self.downsample layers downsample the input when stride != 1", "\n", "self", ".", "conv1", "=", "conv1x1", "(", "inplanes", ",", "width", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "width", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "width", ",", "width", ",", "stride", ",", "groups", ",", "dilation", ")", "\n", "self", ".", "bn2", "=", "norm_layer", "(", "width", ")", "\n", "self", ".", "conv3", "=", "conv1x1", "(", "width", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "bn3", "=", "norm_layer", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet18.Bottleneck.forward": [[82, 103], ["resnet18.Bottleneck.conv1", "resnet18.Bottleneck.bn1", "resnet18.Bottleneck.relu", "resnet18.Bottleneck.conv2", "resnet18.Bottleneck.bn2", "resnet18.Bottleneck.relu", "resnet18.Bottleneck.conv3", "resnet18.Bottleneck.bn3", "resnet18.Bottleneck.relu", "resnet18.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet18.QuantizeBasicBlockV1.__init__": [[110, 151], ["torch.Module.__init__", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "resnet18.conv1x1", "resnet18.conv3x3", "resnet18.conv1x1", "resnet18.conv1x1", "resnet18.conv3x3", "resnet18.conv1x1", "resnet18.conv1x1", "resnet18.conv3x3", "resnet18.conv1x1", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Sigmoid", "torch.Sigmoid", "ValueError", "NotImplementedError"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ",", "weight_dtype", "=", "None", ",", "feature_dtype", "=", "None", ",", "squeeze_factor", "=", "8", ",", "zero_weight_mode", "=", "False", ",", "fa_res", "=", "True", ",", "is_train", "=", "True", ")", ":", "\n", "        ", "super", "(", "QuantizeBasicBlockV1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "if", "groups", "!=", "1", "or", "base_width", "!=", "64", ":", "\n", "            ", "raise", "ValueError", "(", "'BasicBlock only supports groups=1 and base_width=64'", ")", "\n", "", "if", "dilation", ">", "1", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"Dilation > 1 not supported in BasicBlock\"", ")", "\n", "# Both self.conv1 and self.downsample layers downsample the input when stride != 1", "\n", "", "self", ".", "conv1", "=", "DorefaConv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "quantize_activation_1", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "planes", ")", "\n", "self", ".", "conv2", "=", "DorefaConv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "quantize_activation_2", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "planes", ")", "\n", "self", ".", "concat_conv", "=", "DorefaConv2d", "(", "planes", "*", "2", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "quantize_activation_3", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n", "self", ".", "feature_adaptation_1_1", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_1_2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_1_3", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_2_1", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_2_2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_2_3", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_3_1", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_3_2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_3_3", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "fc1_1", "=", "nn", ".", "Linear", "(", "planes", ",", "planes", "//", "squeeze_factor", ")", "\n", "self", ".", "fc1_2", "=", "nn", ".", "Linear", "(", "planes", "//", "squeeze_factor", ",", "planes", ")", "\n", "self", ".", "fc2_1", "=", "nn", ".", "Linear", "(", "planes", ",", "planes", "//", "squeeze_factor", ")", "\n", "self", ".", "fc2_2", "=", "nn", ".", "Linear", "(", "planes", "//", "squeeze_factor", ",", "planes", ")", "\n", "self", ".", "fc3_1", "=", "nn", ".", "Linear", "(", "planes", ",", "planes", "//", "squeeze_factor", ")", "\n", "self", ".", "fc3_2", "=", "nn", ".", "Linear", "(", "planes", "//", "squeeze_factor", ",", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "fa_res", "=", "fa_res", "\n", "self", ".", "is_train", "=", "is_train", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet18.QuantizeBasicBlockV1.downsample_and_squeeze": [[152, 157], ["torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.Flatten", "torch.nn.Flatten", "torch.nn.Flatten", "torch.nn.Flatten"], "methods", ["None"], ["", "def", "downsample_and_squeeze", "(", "self", ",", "input_tensor", ")", ":", "\n", "        ", "out", "=", "torch", ".", "nn", ".", "functional", ".", "adaptive_avg_pool2d", "(", "input_tensor", ",", "(", "1", ",", "1", ")", ")", "\n", "out", "=", "torch", ".", "nn", ".", "Flatten", "(", ")", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet18.QuantizeBasicBlockV1.forward": [[158, 225], ["resnet18.QuantizeBasicBlockV1.conv1", "resnet18.QuantizeBasicBlockV1.bn1", "resnet18.QuantizeBasicBlockV1.relu", "resnet18.QuantizeBasicBlockV1.quantize_activation_1", "resnet18.QuantizeBasicBlockV1.conv2", "resnet18.QuantizeBasicBlockV1.bn2", "resnet18.QuantizeBasicBlockV1.relu", "resnet18.QuantizeBasicBlockV1.quantize_activation_2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet18.QuantizeBasicBlockV1.concat_conv", "resnet18.QuantizeBasicBlockV1.bn3", "resnet18.QuantizeBasicBlockV1.relu", "resnet18.QuantizeBasicBlockV1.quantize_activation_3", "resnet18.QuantizeBasicBlockV1.downsample_and_squeeze", "resnet18.QuantizeBasicBlockV1.fc1_1", "resnet18.QuantizeBasicBlockV1.relu", "resnet18.QuantizeBasicBlockV1.fc1_2", "resnet18.QuantizeBasicBlockV1.sigmoid", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "resnet18.QuantizeBasicBlockV1.feature_adaptation_1_1", "resnet18.QuantizeBasicBlockV1.feature_adaptation_1_2", "resnet18.QuantizeBasicBlockV1.feature_adaptation_1_3", "resnet18.QuantizeBasicBlockV1.downsample_and_squeeze", "resnet18.QuantizeBasicBlockV1.fc2_1", "resnet18.QuantizeBasicBlockV1.relu", "resnet18.QuantizeBasicBlockV1.fc2_2", "resnet18.QuantizeBasicBlockV1.sigmoid", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "resnet18.QuantizeBasicBlockV1.feature_adaptation_2_1", "resnet18.QuantizeBasicBlockV1.feature_adaptation_2_2", "resnet18.QuantizeBasicBlockV1.feature_adaptation_2_3", "resnet18.QuantizeBasicBlockV1.downsample", "resnet18.QuantizeBasicBlockV1.downsample_and_squeeze", "resnet18.QuantizeBasicBlockV1.fc3_1", "resnet18.QuantizeBasicBlockV1.relu", "resnet18.QuantizeBasicBlockV1.fc3_2", "resnet18.QuantizeBasicBlockV1.sigmoid", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "resnet18.QuantizeBasicBlockV1.feature_adaptation_3_1", "resnet18.QuantizeBasicBlockV1.feature_adaptation_3_2", "resnet18.QuantizeBasicBlockV1.feature_adaptation_3_3", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.expand_as", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.expand_as", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.expand_as", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.downsample_and_squeeze", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.downsample_and_squeeze", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.downsample_and_squeeze"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "is_train", ":", "\n", "            ", "teacher_middle_outputs", "=", "x", "[", "0", "]", "\n", "x", "=", "x", "[", "1", "]", "\n", "", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "quantize_activation_1", "(", "out", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "attention_out", "=", "self", ".", "downsample_and_squeeze", "(", "teacher_middle_outputs", "[", "0", "]", ")", "\n", "attention_out", "=", "self", ".", "fc1_1", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "relu", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "fc1_2", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "sigmoid", "(", "attention_out", ")", "\n", "attention_out", "=", "attention_out", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "attention_out", "=", "attention_out", ".", "expand_as", "(", "out", ")", "*", "out", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_1_1", "(", "attention_out", ")", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_1_2", "(", "feature_adaptation_1", ")", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_1_3", "(", "feature_adaptation_1", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_1", "=", "feature_adaptation_1", "+", "out", "\n", "\n", "", "", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "quantize_activation_2", "(", "out", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "attention_out", "=", "self", ".", "downsample_and_squeeze", "(", "teacher_middle_outputs", "[", "1", "]", ")", "\n", "attention_out", "=", "self", ".", "fc2_1", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "relu", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "fc2_2", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "sigmoid", "(", "attention_out", ")", "\n", "attention_out", "=", "attention_out", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "attention_out", "=", "attention_out", ".", "expand_as", "(", "out", ")", "*", "out", "\n", "feature_adaptation_2", "=", "self", ".", "feature_adaptation_2_1", "(", "attention_out", ")", "\n", "feature_adaptation_2", "=", "self", ".", "feature_adaptation_2_2", "(", "feature_adaptation_2", ")", "\n", "feature_adaptation_2", "=", "self", ".", "feature_adaptation_2_3", "(", "feature_adaptation_2", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_2", "=", "feature_adaptation_2", "+", "out", "\n", "\n", "", "", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "=", "torch", ".", "cat", "(", "(", "out", ",", "identity", ")", ",", "dim", "=", "1", ")", "\n", "out", "=", "self", ".", "concat_conv", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "quantize_activation_3", "(", "out", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "attention_out", "=", "self", ".", "downsample_and_squeeze", "(", "teacher_middle_outputs", "[", "2", "]", ")", "\n", "attention_out", "=", "self", ".", "fc3_1", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "relu", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "fc3_2", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "sigmoid", "(", "attention_out", ")", "\n", "attention_out", "=", "attention_out", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "attention_out", "=", "attention_out", ".", "expand_as", "(", "out", ")", "*", "out", "\n", "feature_adaptation_3", "=", "self", ".", "feature_adaptation_3_1", "(", "attention_out", ")", "\n", "feature_adaptation_3", "=", "self", ".", "feature_adaptation_3_2", "(", "feature_adaptation_3", ")", "\n", "feature_adaptation_3", "=", "self", ".", "feature_adaptation_3_3", "(", "feature_adaptation_3", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_3", "=", "feature_adaptation_3", "+", "out", "\n", "\n", "", "return", "[", "feature_adaptation_1", ",", "feature_adaptation_2", ",", "feature_adaptation_3", ",", "out", "]", "\n", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet18.QuantizeBasicBlockV2.__init__": [[232, 278], ["torch.Module.__init__", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "resnet18.conv1x1", "resnet18.conv3x3", "resnet18.conv1x1", "resnet18.conv1x1", "resnet18.conv3x3", "resnet18.conv1x1", "resnet18.conv1x1", "resnet18.conv3x3", "resnet18.conv1x1", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Sigmoid", "torch.Sigmoid", "ValueError", "NotImplementedError"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ",", "weight_dtype", "=", "None", ",", "feature_dtype", "=", "None", ",", "squeeze_factor", "=", "8", ",", "zero_weight_mode", "=", "False", ",", "fa_res", "=", "True", ",", "is_train", "=", "True", ")", ":", "\n", "        ", "super", "(", "QuantizeBasicBlockV2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "if", "groups", "!=", "1", "or", "base_width", "!=", "64", ":", "\n", "            ", "raise", "ValueError", "(", "'BasicBlock only supports groups=1 and base_width=64'", ")", "\n", "", "if", "dilation", ">", "1", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"Dilation > 1 not supported in BasicBlock\"", ")", "\n", "# Both self.conv1 and self.downsample layers downsample the input when stride != 1", "\n", "", "self", ".", "half_inplanes", "=", "inplanes", "//", "2", "\n", "self", ".", "half_planes", "=", "planes", "//", "2", "\n", "self", ".", "conv1", "=", "DorefaConv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "quantize_activation_1", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "planes", ")", "\n", "self", ".", "conv2", "=", "DorefaConv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "quantize_activation_2", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "planes", ")", "\n", "self", ".", "concat_conv1", "=", "DorefaConv2d", "(", "planes", ",", "self", ".", "half_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "concat_bn1", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "half_planes", ")", "\n", "self", ".", "concat_quantize_activation_1", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "self", ".", "half_planes", ")", "\n", "self", ".", "concat_conv2", "=", "DorefaConv2d", "(", "planes", ",", "self", ".", "half_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "concat_bn2", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "half_planes", ")", "\n", "self", ".", "concat_quantize_activation_2", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "self", ".", "half_planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n", "self", ".", "feature_adaptation_1_1", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_1_2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_1_3", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_2_1", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_2_2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_2_3", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_3_1", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_3_2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_3_3", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "fc1_1", "=", "nn", ".", "Linear", "(", "planes", ",", "planes", "//", "squeeze_factor", ")", "\n", "self", ".", "fc1_2", "=", "nn", ".", "Linear", "(", "planes", "//", "squeeze_factor", ",", "planes", ")", "\n", "self", ".", "fc2_1", "=", "nn", ".", "Linear", "(", "planes", ",", "planes", "//", "squeeze_factor", ")", "\n", "self", ".", "fc2_2", "=", "nn", ".", "Linear", "(", "planes", "//", "squeeze_factor", ",", "planes", ")", "\n", "self", ".", "fc3_1", "=", "nn", ".", "Linear", "(", "planes", ",", "planes", "//", "squeeze_factor", ")", "\n", "self", ".", "fc3_2", "=", "nn", ".", "Linear", "(", "planes", "//", "squeeze_factor", ",", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "fa_res", "=", "fa_res", "\n", "self", ".", "is_train", "=", "is_train", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet18.QuantizeBasicBlockV2.downsample_and_squeeze": [[279, 284], ["torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.Flatten", "torch.nn.Flatten", "torch.nn.Flatten", "torch.nn.Flatten"], "methods", ["None"], ["", "def", "downsample_and_squeeze", "(", "self", ",", "input_tensor", ")", ":", "\n", "        ", "out", "=", "torch", ".", "nn", ".", "functional", ".", "adaptive_avg_pool2d", "(", "input_tensor", ",", "(", "1", ",", "1", ")", ")", "\n", "out", "=", "torch", ".", "nn", ".", "Flatten", "(", ")", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet18.QuantizeBasicBlockV2.forward": [[285, 362], ["resnet18.QuantizeBasicBlockV2.conv1", "resnet18.QuantizeBasicBlockV2.bn1", "resnet18.QuantizeBasicBlockV2.relu", "resnet18.QuantizeBasicBlockV2.quantize_activation_1", "resnet18.QuantizeBasicBlockV2.conv2", "resnet18.QuantizeBasicBlockV2.bn2", "resnet18.QuantizeBasicBlockV2.relu", "resnet18.QuantizeBasicBlockV2.quantize_activation_2", "resnet18.QuantizeBasicBlockV2.concat_conv1", "resnet18.QuantizeBasicBlockV2.concat_bn1", "resnet18.QuantizeBasicBlockV2.relu", "resnet18.QuantizeBasicBlockV2.concat_quantize_activation_1", "resnet18.QuantizeBasicBlockV2.concat_conv2", "resnet18.QuantizeBasicBlockV2.concat_bn2", "resnet18.QuantizeBasicBlockV2.relu", "resnet18.QuantizeBasicBlockV2.concat_quantize_activation_2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "isinstance", "resnet18.QuantizeBasicBlockV2.downsample_and_squeeze", "resnet18.QuantizeBasicBlockV2.fc1_1", "resnet18.QuantizeBasicBlockV2.relu", "resnet18.QuantizeBasicBlockV2.fc1_2", "resnet18.QuantizeBasicBlockV2.sigmoid", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "resnet18.QuantizeBasicBlockV2.feature_adaptation_1_1", "resnet18.QuantizeBasicBlockV2.feature_adaptation_1_2", "resnet18.QuantizeBasicBlockV2.feature_adaptation_1_3", "resnet18.QuantizeBasicBlockV2.downsample_and_squeeze", "resnet18.QuantizeBasicBlockV2.fc2_1", "resnet18.QuantizeBasicBlockV2.relu", "resnet18.QuantizeBasicBlockV2.fc2_2", "resnet18.QuantizeBasicBlockV2.sigmoid", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "resnet18.QuantizeBasicBlockV2.feature_adaptation_2_1", "resnet18.QuantizeBasicBlockV2.feature_adaptation_2_2", "resnet18.QuantizeBasicBlockV2.feature_adaptation_2_3", "resnet18.QuantizeBasicBlockV2.downsample", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet18.QuantizeBasicBlockV2.downsample_and_squeeze", "resnet18.QuantizeBasicBlockV2.fc3_1", "resnet18.QuantizeBasicBlockV2.relu", "resnet18.QuantizeBasicBlockV2.fc3_2", "resnet18.QuantizeBasicBlockV2.sigmoid", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "resnet18.QuantizeBasicBlockV2.feature_adaptation_3_1", "resnet18.QuantizeBasicBlockV2.feature_adaptation_3_2", "resnet18.QuantizeBasicBlockV2.feature_adaptation_3_3", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.expand_as", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.expand_as", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.expand_as", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.downsample_and_squeeze", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.downsample_and_squeeze", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.downsample_and_squeeze"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "is_train", ":", "\n", "            ", "if", "isinstance", "(", "x", ",", "list", ")", ":", "\n", "                ", "teacher_middle_outputs", "=", "x", "[", "0", "]", "\n", "x", "=", "x", "[", "1", "]", "\n", "", "", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "quantize_activation_1", "(", "out", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "attention_out", "=", "self", ".", "downsample_and_squeeze", "(", "teacher_middle_outputs", "[", "0", "]", ")", "\n", "attention_out", "=", "self", ".", "fc1_1", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "relu", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "fc1_2", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "sigmoid", "(", "attention_out", ")", "\n", "attention_out", "=", "attention_out", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "attention_out", "=", "attention_out", ".", "expand_as", "(", "out", ")", "*", "out", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_1_1", "(", "attention_out", ")", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_1_2", "(", "feature_adaptation_1", ")", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_1_3", "(", "feature_adaptation_1", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_1", "=", "feature_adaptation_1", "+", "out", "\n", "\n", "", "", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "quantize_activation_2", "(", "out", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "attention_out", "=", "self", ".", "downsample_and_squeeze", "(", "teacher_middle_outputs", "[", "1", "]", ")", "\n", "attention_out", "=", "self", ".", "fc2_1", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "relu", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "fc2_2", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "sigmoid", "(", "attention_out", ")", "\n", "attention_out", "=", "attention_out", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "attention_out", "=", "attention_out", ".", "expand_as", "(", "out", ")", "*", "out", "\n", "feature_adaptation_2", "=", "self", ".", "feature_adaptation_2_1", "(", "attention_out", ")", "\n", "feature_adaptation_2", "=", "self", ".", "feature_adaptation_2_2", "(", "feature_adaptation_2", ")", "\n", "feature_adaptation_2", "=", "self", ".", "feature_adaptation_2_3", "(", "feature_adaptation_2", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_2", "=", "feature_adaptation_2", "+", "out", "\n", "\n", "", "", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "identity", ")", "\n", "", "identity1", "=", "identity", "[", ":", ",", ":", "self", ".", "half_planes", "]", "\n", "identity2", "=", "identity", "[", ":", ",", "self", ".", "half_planes", ":", "]", "\n", "\n", "out1", "=", "out", "[", ":", ",", ":", "self", ".", "half_planes", "]", "\n", "out2", "=", "out", "[", ":", ",", "self", ".", "half_planes", ":", "]", "\n", "\n", "out1", "=", "self", ".", "concat_conv1", "(", "torch", ".", "cat", "(", "(", "out1", ",", "identity1", ")", ",", "dim", "=", "1", ")", ")", "\n", "out1", "=", "self", ".", "concat_bn1", "(", "out1", ")", "\n", "out1", "=", "self", ".", "relu", "(", "out1", ")", "\n", "out1", "=", "self", ".", "concat_quantize_activation_1", "(", "out1", ")", "\n", "out2", "=", "self", ".", "concat_conv2", "(", "torch", ".", "cat", "(", "(", "out2", ",", "identity2", ")", ",", "dim", "=", "1", ")", ")", "\n", "out2", "=", "self", ".", "concat_bn2", "(", "out2", ")", "\n", "out2", "=", "self", ".", "relu", "(", "out2", ")", "\n", "out2", "=", "self", ".", "concat_quantize_activation_2", "(", "out2", ")", "\n", "out", "=", "torch", ".", "cat", "(", "(", "out1", ",", "out2", ")", ",", "dim", "=", "1", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "attention_out", "=", "self", ".", "downsample_and_squeeze", "(", "teacher_middle_outputs", "[", "2", "]", ")", "\n", "attention_out", "=", "self", ".", "fc3_1", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "relu", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "fc3_2", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "sigmoid", "(", "attention_out", ")", "\n", "attention_out", "=", "attention_out", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "attention_out", "=", "attention_out", ".", "expand_as", "(", "out", ")", "*", "out", "\n", "feature_adaptation_3", "=", "self", ".", "feature_adaptation_3_1", "(", "attention_out", ")", "\n", "feature_adaptation_3", "=", "self", ".", "feature_adaptation_3_2", "(", "feature_adaptation_3", ")", "\n", "feature_adaptation_3", "=", "self", ".", "feature_adaptation_3_3", "(", "feature_adaptation_3", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_3", "=", "feature_adaptation_3", "+", "out", "\n", "\n", "", "return", "[", "feature_adaptation_1", ",", "feature_adaptation_2", ",", "feature_adaptation_3", ",", "out", "]", "\n", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet18.ArchNetResNet.__init__": [[365, 413], ["torch.Module.__init__", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "torch.MaxPool2d", "torch.MaxPool2d", "torch.ReLU", "torch.ReLU", "resnet18.ArchNetResNet._make_layer", "resnet18.ArchNetResNet._make_layer", "resnet18.ArchNetResNet._make_layer", "resnet18.ArchNetResNet._make_layer", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "operators.dorefa.dorefa.DorefaLinear1d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "resnet18.ArchNetResNet.modules", "len", "ValueError", "isinstance", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block_normal", ",", "block_split", ",", "layers", ",", "weight_dtype", ",", "feature_dtype", ",", "num_classes", "=", "1000", ",", "\n", "groups", "=", "1", ",", "width_per_group", "=", "64", ",", "replace_stride_with_dilation", "=", "None", ",", "\n", "norm_layer", "=", "None", ",", "squeeze_factor", "=", "8", ",", "distillation_idx", "=", "None", ",", "fa_res", "=", "True", ",", "is_train", "=", "True", ")", ":", "\n", "        ", "super", "(", "ArchNetResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "self", ".", "_norm_layer", "=", "norm_layer", "\n", "\n", "self", ".", "inplanes", "=", "64", "\n", "self", ".", "dilation", "=", "1", "\n", "if", "replace_stride_with_dilation", "is", "None", ":", "\n", "# each element in the tuple indicates if we should replace", "\n", "# the 2x2 stride with a dilated convolution instead", "\n", "            ", "replace_stride_with_dilation", "=", "[", "False", ",", "False", ",", "False", "]", "\n", "", "if", "len", "(", "replace_stride_with_dilation", ")", "!=", "3", ":", "\n", "            ", "raise", "ValueError", "(", "\"replace_stride_with_dilation should be None \"", "\n", "\"or a 3-element tuple, got {}\"", ".", "format", "(", "replace_stride_with_dilation", ")", ")", "\n", "", "self", ".", "groups", "=", "groups", "\n", "self", ".", "base_width", "=", "width_per_group", "\n", "self", ".", "w_dtype", "=", "weight_dtype", "\n", "self", ".", "f_dtype", "=", "feature_dtype", "\n", "self", ".", "conv1", "=", "DorefaConv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "quantize_activation_1", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "64", ")", "\n", "self", ".", "conv2", "=", "DorefaConv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "quantize_activation_2", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "64", ")", "\n", "self", ".", "conv3", "=", "DorefaConv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "quantize_activation_3", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "64", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block_normal", ",", "64", ",", "layers", "[", "0", "]", ",", "squeeze_factor", "=", "squeeze_factor", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block_normal", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ",", "\n", "dilate", "=", "replace_stride_with_dilation", "[", "0", "]", ",", "squeeze_factor", "=", "squeeze_factor", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block_normal", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ",", "\n", "dilate", "=", "replace_stride_with_dilation", "[", "1", "]", ",", "squeeze_factor", "=", "squeeze_factor", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block_split", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ",", "\n", "dilate", "=", "replace_stride_with_dilation", "[", "2", "]", ",", "squeeze_factor", "=", "squeeze_factor", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "fc", "=", "DorefaLinear1d", "(", "512", ",", "1000", ",", "weight_dtype", "=", "DATA_TYPE_DICT", "[", "'uint8'", "]", ",", "bias", "=", "True", ",", "quant_weight_mode", "=", "'gaussian'", ")", "\n", "self", ".", "quantize_activation_fc", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "DATA_TYPE_DICT", "[", "'int16'", "]", ",", "out_channels", "=", "1000", ",", "out_scale", "=", "32", ",", "after_bn", "=", "False", ")", "\n", "self", ".", "distillation_idx", "=", "distillation_idx", "\n", "self", ".", "is_train", "=", "is_train", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "# elif isinstance(m, (nn.BatchNorm2d, nn.GroupNorm)):", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet18.ArchNetResNet._make_layer": [[417, 441], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "operators.dorefa.dorefa.DorefaQuantizeActivation", "block"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ",", "dilate", "=", "False", ",", "squeeze_factor", "=", "8", ",", "fa_res", "=", "True", ",", "is_train", "=", "True", ")", ":", "\n", "        ", "norm_layer", "=", "self", ".", "_norm_layer", "\n", "downsample", "=", "None", "\n", "previous_dilation", "=", "self", ".", "dilation", "\n", "if", "dilate", ":", "\n", "            ", "self", ".", "dilation", "*=", "stride", "\n", "stride", "=", "1", "\n", "", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "DorefaConv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "self", ".", "w_dtype", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "self", ".", "f_dtype", ",", "out_channels", "=", "64", ")", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "weight_dtype", "=", "self", ".", "w_dtype", ",", "feature_dtype", "=", "self", ".", "f_dtype", ",", "stride", "=", "stride", ",", "downsample", "=", "downsample", ",", "groups", "=", "self", ".", "groups", ",", "\n", "base_width", "=", "self", ".", "base_width", ",", "dilation", "=", "previous_dilation", ",", "norm_layer", "=", "norm_layer", ",", "squeeze_factor", "=", "squeeze_factor", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "_", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "weight_dtype", "=", "self", ".", "w_dtype", ",", "feature_dtype", "=", "self", ".", "f_dtype", ",", "groups", "=", "self", ".", "groups", ",", "\n", "base_width", "=", "self", ".", "base_width", ",", "dilation", "=", "self", ".", "dilation", ",", "\n", "norm_layer", "=", "norm_layer", ",", "squeeze_factor", "=", "squeeze_factor", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet18.ArchNetResNet._forward_impl": [[442, 487], ["resnet18.ArchNetResNet.conv1", "resnet18.ArchNetResNet.bn1", "resnet18.ArchNetResNet.relu", "resnet18.ArchNetResNet.quantize_activation_1", "resnet18.ArchNetResNet.conv2", "resnet18.ArchNetResNet.bn2", "resnet18.ArchNetResNet.relu", "resnet18.ArchNetResNet.quantize_activation_2", "resnet18.ArchNetResNet.conv3", "resnet18.ArchNetResNet.bn3", "resnet18.ArchNetResNet.relu", "resnet18.ArchNetResNet.quantize_activation_3", "resnet18.ArchNetResNet.maxpool", "resnet18.ArchNetResNet.avgpool", "resnet18.ArchNetResNet.fc", "resnet18.ArchNetResNet.quantize_activation_fc", "isinstance", "all_middle_outputs.append", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "all_middle_outputs.append", "block", "all_middle_outputs.extend", "block"], "methods", ["None"], ["", "def", "_forward_impl", "(", "self", ",", "x", ")", ":", "\n", "# See note [TorchScript super()]", "\n", "        ", "if", "self", ".", "is_train", ":", "\n", "            ", "all_middle_outputs", "=", "[", "]", "\n", "if", "isinstance", "(", "x", ",", "list", ")", ":", "\n", "                ", "teacher_middle_outputs", "=", "x", "[", "0", "]", "\n", "x", "=", "x", "[", "1", "]", "\n", "\n", "", "", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "quantize_activation_1", "(", "x", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "x", "=", "self", ".", "bn2", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "quantize_activation_2", "(", "x", ")", "\n", "x", "=", "self", ".", "conv3", "(", "x", ")", "\n", "x", "=", "self", ".", "bn3", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "quantize_activation_3", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "all_middle_outputs", ".", "append", "(", "x", ")", "\n", "\n", "", "block_count", "=", "0", "\n", "for", "layer", "in", "[", "self", ".", "layer1", ",", "self", ".", "layer2", ",", "self", ".", "layer3", ",", "self", ".", "layer4", "]", ":", "\n", "            ", "for", "block", "in", "layer", ":", "\n", "                ", "block_count", "+=", "1", "\n", "if", "self", ".", "is_train", ":", "\n", "                    ", "tmp_teacher_middle_outputs", "=", "teacher_middle_outputs", "[", "3", "*", "block_count", "-", "2", ":", "3", "*", "block_count", "+", "1", "]", "\n", "outs", "=", "block", "(", "[", "tmp_teacher_middle_outputs", ",", "x", "]", ")", "\n", "x", "=", "outs", "[", "-", "1", "]", "\n", "all_middle_outputs", ".", "extend", "(", "outs", "[", ":", "-", "1", "]", ")", "\n", "", "else", ":", "\n", "                    ", "x", "=", "block", "(", "x", ")", "\n", "\n", "", "", "", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "self", ".", "fc", "(", "torch", ".", "flatten", "(", "x", ",", "1", ")", ")", "\n", "x", "=", "self", ".", "quantize_activation_fc", "(", "x", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "all_middle_outputs", ".", "append", "(", "x", ")", "\n", "return", "all_middle_outputs", "[", ":", "self", ".", "distillation_idx", "+", "1", "]", "\n", "", "else", ":", "\n", "            ", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet18.ArchNetResNet.forward": [[488, 490], ["resnet18.ArchNetResNet._forward_impl"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.ResNet._forward_impl"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "_forward_impl", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet18.conv3x3": [[11, 15], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ",", "groups", "=", "1", ",", "dilation", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "dilation", ",", "groups", "=", "groups", ",", "bias", "=", "False", ",", "dilation", "=", "dilation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet18.conv1x1": [[17, 20], ["torch.Conv2d"], "function", ["None"], ["", "def", "conv1x1", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"1x1 convolution\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet18.archnet_resnet18": [[492, 500], ["resnet18.ArchNetResNet"], "function", ["None"], ["", "", "def", "archnet_resnet18", "(", "weight_bit", ",", "feature_bit", ",", "squeeze_factor", "=", "24", ",", "distillation_idx", "=", "None", ",", "fa_res", "=", "True", ",", "is_train", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "bit_map_dict", "=", "{", "2", ":", "'uint2'", ",", "4", ":", "'uint4'", ",", "8", ":", "'uint8'", "}", "\n", "if", "weight_bit", "not", "in", "bit_map_dict", "or", "feature_bit", "not", "in", "bit_map_dict", ":", "\n", "        ", "assert", "False", ",", "'Not supported bit width'", "\n", "\n", "", "model", "=", "ArchNetResNet", "(", "QuantizeBasicBlockV1", ",", "QuantizeBasicBlockV2", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "weight_dtype", "=", "DATA_TYPE_DICT", "[", "bit_map_dict", "[", "weight_bit", "]", "]", ",", "feature_dtype", "=", "DATA_TYPE_DICT", "[", "bit_map_dict", "[", "feature_bit", "]", "]", ",", "squeeze_factor", "=", "squeeze_factor", ",", "distillation_idx", "=", "distillation_idx", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ",", "**", "kwargs", ")", "\n", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.SplitDownsample.__init__": [[23, 33], ["torch.Module.__init__", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "planes", ",", "stride", ",", "weight_dtype", ",", "feature_dtype", ")", ":", "\n", "        ", "super", "(", "SplitDownsample", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "max_ic", "=", "512", "\n", "self", ".", "conv1", "=", "DorefaConv2d", "(", "self", ".", "max_ic", ",", "planes", "*", "block", ".", "expansion", "//", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", "//", "2", ")", "\n", "self", ".", "quantize_activation_1", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "planes", "*", "block", ".", "expansion", "//", "2", ")", "\n", "self", ".", "conv2", "=", "DorefaConv2d", "(", "self", ".", "max_ic", ",", "planes", "*", "block", ".", "expansion", "//", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", "//", "2", ")", "\n", "self", ".", "quantize_activation_2", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "planes", "*", "block", ".", "expansion", "//", "2", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.SplitDownsample.forward": [[34, 45], ["resnet50.SplitDownsample.conv1", "resnet50.SplitDownsample.bn1", "resnet50.SplitDownsample.relu", "resnet50.SplitDownsample.quantize_activation_1", "resnet50.SplitDownsample.conv2", "resnet50.SplitDownsample.bn2", "resnet50.SplitDownsample.relu", "resnet50.SplitDownsample.quantize_activation_2", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x1", "=", "self", ".", "conv1", "(", "x", "[", ":", ",", ":", "self", ".", "max_ic", "]", ")", "\n", "x1", "=", "self", ".", "bn1", "(", "x1", ")", "\n", "x1", "=", "self", ".", "relu", "(", "x1", ")", "\n", "x1", "=", "self", ".", "quantize_activation_1", "(", "x1", ")", "\n", "x2", "=", "self", ".", "conv2", "(", "x", "[", ":", ",", "self", ".", "max_ic", ":", "]", ")", "\n", "x2", "=", "self", ".", "bn2", "(", "x2", ")", "\n", "x2", "=", "self", ".", "relu", "(", "x2", ")", "\n", "x2", "=", "self", ".", "quantize_activation_2", "(", "x2", ")", "\n", "\n", "return", "torch", ".", "cat", "(", "(", "x1", ",", "x2", ")", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.BasicBlock.__init__": [[50, 67], ["torch.Module.__init__", "resnet50.conv3x3", "norm_layer", "torch.ReLU", "torch.ReLU", "resnet50.conv3x3", "norm_layer", "ValueError", "NotImplementedError"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "if", "groups", "!=", "1", "or", "base_width", "!=", "64", ":", "\n", "            ", "raise", "ValueError", "(", "'BasicBlock only supports groups=1 and base_width=64'", ")", "\n", "", "if", "dilation", ">", "1", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"Dilation > 1 not supported in BasicBlock\"", ")", "\n", "# Both self.conv1 and self.downsample layers downsample the input when stride != 1", "\n", "", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "norm_layer", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.BasicBlock.forward": [[68, 85], ["resnet50.BasicBlock.conv1", "resnet50.BasicBlock.bn1", "resnet50.BasicBlock.relu", "resnet50.BasicBlock.conv2", "resnet50.BasicBlock.bn2", "resnet50.BasicBlock.relu", "resnet50.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.Bottleneck.__init__": [[90, 106], ["torch.Module.__init__", "resnet50.conv1x1", "norm_layer", "resnet50.conv3x3", "norm_layer", "resnet50.conv1x1", "norm_layer", "torch.ReLU", "torch.ReLU", "int"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "width", "=", "int", "(", "planes", "*", "(", "base_width", "/", "64.", ")", ")", "*", "groups", "\n", "# Both self.conv2 and self.downsample layers downsample the input when stride != 1", "\n", "self", ".", "conv1", "=", "conv1x1", "(", "inplanes", ",", "width", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "width", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "width", ",", "width", ",", "stride", ",", "groups", ",", "dilation", ")", "\n", "self", ".", "bn2", "=", "norm_layer", "(", "width", ")", "\n", "self", ".", "conv3", "=", "conv1x1", "(", "width", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "bn3", "=", "norm_layer", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.Bottleneck.forward": [[107, 128], ["resnet50.Bottleneck.conv1", "resnet50.Bottleneck.bn1", "resnet50.Bottleneck.relu", "resnet50.Bottleneck.conv2", "resnet50.Bottleneck.bn2", "resnet50.Bottleneck.relu", "resnet50.Bottleneck.conv3", "resnet50.Bottleneck.bn3", "resnet50.Bottleneck.relu", "resnet50.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV1.__init__": [[133, 183], ["torch.Module.__init__", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "resnet50.conv1x1", "resnet50.conv3x3", "resnet50.conv1x1", "resnet50.conv1x1", "resnet50.conv3x3", "resnet50.conv1x1", "resnet50.conv1x1", "resnet50.conv3x3", "resnet50.conv1x1", "resnet50.conv1x1", "resnet50.conv3x3", "resnet50.conv1x1", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Sigmoid", "torch.Sigmoid", "ValueError", "NotImplementedError"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ",", "weight_dtype", "=", "None", ",", "feature_dtype", "=", "None", ",", "squeeze_factor", "=", "8", ",", "fa_res", "=", "True", ",", "is_train", "=", "True", ")", ":", "\n", "        ", "super", "(", "QuantizeBottleneckV1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "if", "groups", "!=", "1", "or", "base_width", "!=", "64", ":", "\n", "            ", "raise", "ValueError", "(", "'BasicBlock only supports groups=1 and base_width=64'", ")", "\n", "", "if", "dilation", ">", "1", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"Dilation > 1 not supported in BasicBlock\"", ")", "\n", "# Both self.conv1 and self.downsample layers downsample the input when stride != 1", "\n", "\n", "", "self", ".", "conv1", "=", "DorefaConv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "quantize_activation_1", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "planes", ")", "\n", "self", ".", "conv2", "=", "DorefaConv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "quantize_activation_2", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "planes", ")", "\n", "self", ".", "conv3", "=", "DorefaConv2d", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "quantize_activation_3", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "concat_conv", "=", "DorefaConv2d", "(", "planes", "*", "self", ".", "expansion", "*", "2", ",", "planes", "*", "self", ".", "expansion", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "concat_bn", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "concat_quantize_activation", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "fa_res", "=", "fa_res", "\n", "self", ".", "is_train", "=", "is_train", "\n", "\n", "self", ".", "feature_adaptation_1_1", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_1_2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_1_3", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_2_1", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_2_2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_2_3", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_3_1", "=", "conv1x1", "(", "planes", "*", "self", ".", "expansion", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_3_2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_3_3", "=", "conv1x1", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "feature_adaptation_4_1", "=", "conv1x1", "(", "planes", "*", "self", ".", "expansion", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_4_2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_4_3", "=", "conv1x1", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "fc1_1", "=", "nn", ".", "Linear", "(", "planes", ",", "planes", "//", "squeeze_factor", ")", "\n", "self", ".", "fc1_2", "=", "nn", ".", "Linear", "(", "planes", "//", "squeeze_factor", ",", "planes", ")", "\n", "self", ".", "fc2_1", "=", "nn", ".", "Linear", "(", "planes", ",", "planes", "//", "squeeze_factor", ")", "\n", "self", ".", "fc2_2", "=", "nn", ".", "Linear", "(", "planes", "//", "squeeze_factor", ",", "planes", ")", "\n", "self", ".", "fc3_1", "=", "nn", ".", "Linear", "(", "planes", "*", "self", ".", "expansion", ",", "planes", "//", "squeeze_factor", ")", "\n", "self", ".", "fc3_2", "=", "nn", ".", "Linear", "(", "planes", "//", "squeeze_factor", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "fc4_1", "=", "nn", ".", "Linear", "(", "planes", "*", "self", ".", "expansion", ",", "planes", "//", "squeeze_factor", ")", "\n", "self", ".", "fc4_2", "=", "nn", ".", "Linear", "(", "planes", "//", "squeeze_factor", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV1.downsample_and_squeeze": [[184, 189], ["torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.Flatten", "torch.nn.Flatten", "torch.nn.Flatten", "torch.nn.Flatten"], "methods", ["None"], ["", "def", "downsample_and_squeeze", "(", "self", ",", "input_tensor", ")", ":", "\n", "        ", "out", "=", "torch", ".", "nn", ".", "functional", ".", "adaptive_avg_pool2d", "(", "input_tensor", ",", "(", "1", ",", "1", ")", ")", "\n", "out", "=", "torch", ".", "nn", ".", "Flatten", "(", ")", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV1.forward": [[190, 275], ["resnet50.QuantizeBottleneckV1.conv1", "resnet50.QuantizeBottleneckV1.bn1", "resnet50.QuantizeBottleneckV1.relu", "resnet50.QuantizeBottleneckV1.quantize_activation_1", "resnet50.QuantizeBottleneckV1.conv2", "resnet50.QuantizeBottleneckV1.bn2", "resnet50.QuantizeBottleneckV1.relu", "resnet50.QuantizeBottleneckV1.quantize_activation_2", "resnet50.QuantizeBottleneckV1.conv3", "resnet50.QuantizeBottleneckV1.bn3", "resnet50.QuantizeBottleneckV1.relu", "resnet50.QuantizeBottleneckV1.quantize_activation_3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet50.QuantizeBottleneckV1.concat_conv", "resnet50.QuantizeBottleneckV1.concat_bn", "resnet50.QuantizeBottleneckV1.relu", "resnet50.QuantizeBottleneckV1.concat_quantize_activation", "resnet50.QuantizeBottleneckV1.downsample_and_squeeze", "resnet50.QuantizeBottleneckV1.fc1_1", "resnet50.QuantizeBottleneckV1.relu", "resnet50.QuantizeBottleneckV1.fc1_2", "resnet50.QuantizeBottleneckV1.sigmoid", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "resnet50.QuantizeBottleneckV1.feature_adaptation_1_1", "resnet50.QuantizeBottleneckV1.feature_adaptation_1_2", "resnet50.QuantizeBottleneckV1.feature_adaptation_1_3", "resnet50.QuantizeBottleneckV1.downsample_and_squeeze", "resnet50.QuantizeBottleneckV1.fc2_1", "resnet50.QuantizeBottleneckV1.relu", "resnet50.QuantizeBottleneckV1.fc2_2", "resnet50.QuantizeBottleneckV1.sigmoid", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "resnet50.QuantizeBottleneckV1.feature_adaptation_2_1", "resnet50.QuantizeBottleneckV1.feature_adaptation_2_2", "resnet50.QuantizeBottleneckV1.feature_adaptation_2_3", "resnet50.QuantizeBottleneckV1.downsample_and_squeeze", "resnet50.QuantizeBottleneckV1.fc3_1", "resnet50.QuantizeBottleneckV1.relu", "resnet50.QuantizeBottleneckV1.fc3_2", "resnet50.QuantizeBottleneckV1.sigmoid", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "resnet50.QuantizeBottleneckV1.feature_adaptation_3_1", "resnet50.QuantizeBottleneckV1.feature_adaptation_3_2", "resnet50.QuantizeBottleneckV1.feature_adaptation_3_3", "resnet50.QuantizeBottleneckV1.downsample", "resnet50.QuantizeBottleneckV1.downsample_and_squeeze", "resnet50.QuantizeBottleneckV1.fc4_1", "resnet50.QuantizeBottleneckV1.relu", "resnet50.QuantizeBottleneckV1.fc4_2", "resnet50.QuantizeBottleneckV1.sigmoid", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "resnet50.QuantizeBottleneckV1.feature_adaptation_4_1", "resnet50.QuantizeBottleneckV1.feature_adaptation_4_2", "resnet50.QuantizeBottleneckV1.feature_adaptation_4_3", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.expand_as", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.expand_as", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.expand_as", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.expand_as", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.downsample_and_squeeze", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.downsample_and_squeeze", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.downsample_and_squeeze", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.downsample_and_squeeze"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "is_train", ":", "\n", "            ", "teacher_middle_outputs", "=", "x", "[", "0", "]", "\n", "x", "=", "x", "[", "1", "]", "\n", "", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "quantize_activation_1", "(", "out", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "attention_out", "=", "self", ".", "downsample_and_squeeze", "(", "teacher_middle_outputs", "[", "0", "]", ")", "\n", "attention_out", "=", "self", ".", "fc1_1", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "relu", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "fc1_2", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "sigmoid", "(", "attention_out", ")", "\n", "attention_out", "=", "attention_out", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "attention_out", "=", "attention_out", ".", "expand_as", "(", "out", ")", "*", "out", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_1_1", "(", "attention_out", ")", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_1_2", "(", "feature_adaptation_1", ")", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_1_3", "(", "feature_adaptation_1", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_1", "=", "feature_adaptation_1", "+", "out", "\n", "\n", "", "", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "quantize_activation_2", "(", "out", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "attention_out", "=", "self", ".", "downsample_and_squeeze", "(", "teacher_middle_outputs", "[", "1", "]", ")", "\n", "attention_out", "=", "self", ".", "fc2_1", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "relu", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "fc2_2", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "sigmoid", "(", "attention_out", ")", "\n", "attention_out", "=", "attention_out", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "attention_out", "=", "attention_out", ".", "expand_as", "(", "out", ")", "*", "out", "\n", "feature_adaptation_2", "=", "self", ".", "feature_adaptation_2_1", "(", "attention_out", ")", "\n", "feature_adaptation_2", "=", "self", ".", "feature_adaptation_2_2", "(", "feature_adaptation_2", ")", "\n", "feature_adaptation_2", "=", "self", ".", "feature_adaptation_2_3", "(", "feature_adaptation_2", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_2", "=", "feature_adaptation_2", "+", "out", "\n", "\n", "", "", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "quantize_activation_3", "(", "out", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "attention_out", "=", "self", ".", "downsample_and_squeeze", "(", "teacher_middle_outputs", "[", "2", "]", ")", "\n", "attention_out", "=", "self", ".", "fc3_1", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "relu", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "fc3_2", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "sigmoid", "(", "attention_out", ")", "\n", "attention_out", "=", "attention_out", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "attention_out", "=", "attention_out", ".", "expand_as", "(", "out", ")", "*", "out", "\n", "feature_adaptation_3", "=", "self", ".", "feature_adaptation_3_1", "(", "attention_out", ")", "\n", "feature_adaptation_3", "=", "self", ".", "feature_adaptation_3_2", "(", "feature_adaptation_3", ")", "\n", "feature_adaptation_3", "=", "self", ".", "feature_adaptation_3_3", "(", "feature_adaptation_3", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_3", "=", "feature_adaptation_3", "+", "out", "\n", "\n", "", "", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "=", "torch", ".", "cat", "(", "(", "out", ",", "identity", ")", ",", "dim", "=", "1", ")", "\n", "out", "=", "self", ".", "concat_conv", "(", "out", ")", "\n", "out", "=", "self", ".", "concat_bn", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "concat_quantize_activation", "(", "out", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "attention_out", "=", "self", ".", "downsample_and_squeeze", "(", "teacher_middle_outputs", "[", "3", "]", ")", "\n", "attention_out", "=", "self", ".", "fc4_1", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "relu", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "fc4_2", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "sigmoid", "(", "attention_out", ")", "\n", "attention_out", "=", "attention_out", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "attention_out", "=", "attention_out", ".", "expand_as", "(", "out", ")", "*", "out", "\n", "feature_adaptation_4", "=", "self", ".", "feature_adaptation_4_1", "(", "attention_out", ")", "\n", "feature_adaptation_4", "=", "self", ".", "feature_adaptation_4_2", "(", "feature_adaptation_4", ")", "\n", "feature_adaptation_4", "=", "self", ".", "feature_adaptation_4_3", "(", "feature_adaptation_4", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_4", "=", "feature_adaptation_4", "+", "out", "\n", "\n", "", "return", "[", "feature_adaptation_1", ",", "feature_adaptation_2", ",", "feature_adaptation_3", ",", "feature_adaptation_4", ",", "out", "]", "\n", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV2.__init__": [[280, 333], ["torch.Module.__init__", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "resnet50.conv1x1", "resnet50.conv3x3", "resnet50.conv1x1", "resnet50.conv1x1", "resnet50.conv3x3", "resnet50.conv1x1", "resnet50.conv1x1", "resnet50.conv3x3", "resnet50.conv1x1", "resnet50.conv1x1", "resnet50.conv3x3", "resnet50.conv1x1", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Sigmoid", "torch.Sigmoid", "ValueError", "NotImplementedError"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ",", "weight_dtype", "=", "None", ",", "feature_dtype", "=", "None", ",", "squeeze_factor", "=", "8", ",", "fa_res", "=", "True", ",", "is_train", "=", "True", ")", ":", "\n", "        ", "super", "(", "QuantizeBottleneckV2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "if", "groups", "!=", "1", "or", "base_width", "!=", "64", ":", "\n", "            ", "raise", "ValueError", "(", "'BasicBlock only supports groups=1 and base_width=64'", ")", "\n", "", "if", "dilation", ">", "1", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"Dilation > 1 not supported in BasicBlock\"", ")", "\n", "# Both self.conv1 and self.downsample layers downsample the input when stride != 1", "\n", "", "self", ".", "half_max_ic", "=", "256", "\n", "self", ".", "conv1", "=", "DorefaConv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "quantize_activation_1", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "planes", ")", "\n", "self", ".", "conv2", "=", "DorefaConv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "quantize_activation_2", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "planes", ")", "\n", "self", ".", "conv3", "=", "DorefaConv2d", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "quantize_activation_3", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "concat_conv_1", "=", "DorefaConv2d", "(", "self", ".", "half_max_ic", "*", "2", ",", "self", ".", "half_max_ic", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "concat_bn_1", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_quantize_activation_1", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_conv_2", "=", "DorefaConv2d", "(", "self", ".", "half_max_ic", "*", "2", ",", "self", ".", "half_max_ic", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "concat_bn_2", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_quantize_activation_2", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "self", ".", "half_max_ic", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "fa_res", "=", "fa_res", "\n", "self", ".", "is_train", "=", "is_train", "\n", "\n", "self", ".", "feature_adaptation_1_1", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_1_2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_1_3", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_2_1", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_2_2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_2_3", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_3_1", "=", "conv1x1", "(", "planes", "*", "self", ".", "expansion", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_3_2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_3_3", "=", "conv1x1", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "feature_adaptation_4_1", "=", "conv1x1", "(", "planes", "*", "self", ".", "expansion", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_4_2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_4_3", "=", "conv1x1", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "fc1_1", "=", "nn", ".", "Linear", "(", "planes", ",", "planes", "//", "squeeze_factor", ")", "\n", "self", ".", "fc1_2", "=", "nn", ".", "Linear", "(", "planes", "//", "squeeze_factor", ",", "planes", ")", "\n", "self", ".", "fc2_1", "=", "nn", ".", "Linear", "(", "planes", ",", "planes", "//", "squeeze_factor", ")", "\n", "self", ".", "fc2_2", "=", "nn", ".", "Linear", "(", "planes", "//", "squeeze_factor", ",", "planes", ")", "\n", "self", ".", "fc3_1", "=", "nn", ".", "Linear", "(", "planes", "*", "self", ".", "expansion", ",", "planes", "//", "squeeze_factor", ")", "\n", "self", ".", "fc3_2", "=", "nn", ".", "Linear", "(", "planes", "//", "squeeze_factor", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "fc4_1", "=", "nn", ".", "Linear", "(", "planes", "*", "self", ".", "expansion", ",", "planes", "//", "squeeze_factor", ")", "\n", "self", ".", "fc4_2", "=", "nn", ".", "Linear", "(", "planes", "//", "squeeze_factor", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV2.downsample_and_squeeze": [[334, 339], ["torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.Flatten", "torch.nn.Flatten", "torch.nn.Flatten", "torch.nn.Flatten"], "methods", ["None"], ["", "def", "downsample_and_squeeze", "(", "self", ",", "input_tensor", ")", ":", "\n", "        ", "out", "=", "torch", ".", "nn", ".", "functional", ".", "adaptive_avg_pool2d", "(", "input_tensor", ",", "(", "1", ",", "1", ")", ")", "\n", "out", "=", "torch", ".", "nn", ".", "Flatten", "(", ")", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV2.forward": [[340, 435], ["resnet50.QuantizeBottleneckV2.conv1", "resnet50.QuantizeBottleneckV2.bn1", "resnet50.QuantizeBottleneckV2.relu", "resnet50.QuantizeBottleneckV2.quantize_activation_1", "resnet50.QuantizeBottleneckV2.conv2", "resnet50.QuantizeBottleneckV2.bn2", "resnet50.QuantizeBottleneckV2.relu", "resnet50.QuantizeBottleneckV2.quantize_activation_2", "resnet50.QuantizeBottleneckV2.conv3", "resnet50.QuantizeBottleneckV2.bn3", "resnet50.QuantizeBottleneckV2.relu", "resnet50.QuantizeBottleneckV2.quantize_activation_3", "resnet50.QuantizeBottleneckV2.concat_conv_1", "resnet50.QuantizeBottleneckV2.concat_bn_1", "resnet50.QuantizeBottleneckV2.relu", "resnet50.QuantizeBottleneckV2.concat_quantize_activation_1", "resnet50.QuantizeBottleneckV2.concat_conv_2", "resnet50.QuantizeBottleneckV2.concat_bn_2", "resnet50.QuantizeBottleneckV2.relu", "resnet50.QuantizeBottleneckV2.concat_quantize_activation_2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet50.QuantizeBottleneckV2.downsample_and_squeeze", "resnet50.QuantizeBottleneckV2.fc1_1", "resnet50.QuantizeBottleneckV2.relu", "resnet50.QuantizeBottleneckV2.fc1_2", "resnet50.QuantizeBottleneckV2.sigmoid", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "resnet50.QuantizeBottleneckV2.feature_adaptation_1_1", "resnet50.QuantizeBottleneckV2.feature_adaptation_1_2", "resnet50.QuantizeBottleneckV2.feature_adaptation_1_3", "resnet50.QuantizeBottleneckV2.downsample_and_squeeze", "resnet50.QuantizeBottleneckV2.fc2_1", "resnet50.QuantizeBottleneckV2.relu", "resnet50.QuantizeBottleneckV2.fc2_2", "resnet50.QuantizeBottleneckV2.sigmoid", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "resnet50.QuantizeBottleneckV2.feature_adaptation_2_1", "resnet50.QuantizeBottleneckV2.feature_adaptation_2_2", "resnet50.QuantizeBottleneckV2.feature_adaptation_2_3", "resnet50.QuantizeBottleneckV2.downsample_and_squeeze", "resnet50.QuantizeBottleneckV2.fc3_1", "resnet50.QuantizeBottleneckV2.relu", "resnet50.QuantizeBottleneckV2.fc3_2", "resnet50.QuantizeBottleneckV2.sigmoid", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "resnet50.QuantizeBottleneckV2.feature_adaptation_3_1", "resnet50.QuantizeBottleneckV2.feature_adaptation_3_2", "resnet50.QuantizeBottleneckV2.feature_adaptation_3_3", "resnet50.QuantizeBottleneckV2.downsample", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet50.QuantizeBottleneckV2.downsample_and_squeeze", "resnet50.QuantizeBottleneckV2.fc4_1", "resnet50.QuantizeBottleneckV2.relu", "resnet50.QuantizeBottleneckV2.fc4_2", "resnet50.QuantizeBottleneckV2.sigmoid", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "resnet50.QuantizeBottleneckV2.feature_adaptation_4_1", "resnet50.QuantizeBottleneckV2.feature_adaptation_4_2", "resnet50.QuantizeBottleneckV2.feature_adaptation_4_3", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.expand_as", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.expand_as", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.expand_as", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.expand_as", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.downsample_and_squeeze", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.downsample_and_squeeze", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.downsample_and_squeeze", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.downsample_and_squeeze"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "is_train", ":", "\n", "            ", "teacher_middle_outputs", "=", "x", "[", "0", "]", "\n", "x", "=", "x", "[", "1", "]", "\n", "", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "quantize_activation_1", "(", "out", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "attention_out", "=", "self", ".", "downsample_and_squeeze", "(", "teacher_middle_outputs", "[", "0", "]", ")", "\n", "attention_out", "=", "self", ".", "fc1_1", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "relu", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "fc1_2", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "sigmoid", "(", "attention_out", ")", "\n", "attention_out", "=", "attention_out", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "attention_out", "=", "attention_out", ".", "expand_as", "(", "out", ")", "*", "out", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_1_1", "(", "attention_out", ")", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_1_2", "(", "feature_adaptation_1", ")", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_1_3", "(", "feature_adaptation_1", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_1", "=", "feature_adaptation_1", "+", "out", "\n", "\n", "", "", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "quantize_activation_2", "(", "out", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "attention_out", "=", "self", ".", "downsample_and_squeeze", "(", "teacher_middle_outputs", "[", "1", "]", ")", "\n", "attention_out", "=", "self", ".", "fc2_1", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "relu", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "fc2_2", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "sigmoid", "(", "attention_out", ")", "\n", "attention_out", "=", "attention_out", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "attention_out", "=", "attention_out", ".", "expand_as", "(", "out", ")", "*", "out", "\n", "feature_adaptation_2", "=", "self", ".", "feature_adaptation_2_1", "(", "attention_out", ")", "\n", "feature_adaptation_2", "=", "self", ".", "feature_adaptation_2_2", "(", "feature_adaptation_2", ")", "\n", "feature_adaptation_2", "=", "self", ".", "feature_adaptation_2_3", "(", "feature_adaptation_2", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_2", "=", "feature_adaptation_2", "+", "out", "\n", "\n", "", "", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "quantize_activation_3", "(", "out", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "attention_out", "=", "self", ".", "downsample_and_squeeze", "(", "teacher_middle_outputs", "[", "2", "]", ")", "\n", "attention_out", "=", "self", ".", "fc3_1", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "relu", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "fc3_2", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "sigmoid", "(", "attention_out", ")", "\n", "attention_out", "=", "attention_out", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "attention_out", "=", "attention_out", ".", "expand_as", "(", "out", ")", "*", "out", "\n", "feature_adaptation_3", "=", "self", ".", "feature_adaptation_3_1", "(", "attention_out", ")", "\n", "feature_adaptation_3", "=", "self", ".", "feature_adaptation_3_2", "(", "feature_adaptation_3", ")", "\n", "feature_adaptation_3", "=", "self", ".", "feature_adaptation_3_3", "(", "feature_adaptation_3", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_3", "=", "feature_adaptation_3", "+", "out", "\n", "\n", "", "", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "identity1", "=", "identity", "[", ":", ",", ":", "self", ".", "half_max_ic", "]", "\n", "identity2", "=", "identity", "[", ":", ",", "self", ".", "half_max_ic", ":", "]", "\n", "\n", "out1", "=", "out", "[", ":", ",", ":", "self", ".", "half_max_ic", "]", "\n", "out2", "=", "out", "[", ":", ",", "self", ".", "half_max_ic", ":", "]", "\n", "\n", "out1", "=", "self", ".", "concat_conv_1", "(", "torch", ".", "cat", "(", "(", "out1", ",", "identity1", ")", ",", "dim", "=", "1", ")", ")", "\n", "out1", "=", "self", ".", "concat_bn_1", "(", "out1", ")", "\n", "out1", "=", "self", ".", "relu", "(", "out1", ")", "\n", "out1", "=", "self", ".", "concat_quantize_activation_1", "(", "out1", ")", "\n", "out2", "=", "self", ".", "concat_conv_2", "(", "torch", ".", "cat", "(", "(", "out2", ",", "identity2", ")", ",", "dim", "=", "1", ")", ")", "\n", "out2", "=", "self", ".", "concat_bn_2", "(", "out2", ")", "\n", "out2", "=", "self", ".", "relu", "(", "out2", ")", "\n", "out2", "=", "self", ".", "concat_quantize_activation_2", "(", "out2", ")", "\n", "out2", "=", "torch", ".", "cat", "(", "(", "out1", ",", "out2", ")", ",", "dim", "=", "1", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "attention_out", "=", "self", ".", "downsample_and_squeeze", "(", "teacher_middle_outputs", "[", "3", "]", ")", "\n", "attention_out", "=", "self", ".", "fc4_1", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "relu", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "fc4_2", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "sigmoid", "(", "attention_out", ")", "\n", "attention_out", "=", "attention_out", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "attention_out", "=", "attention_out", ".", "expand_as", "(", "out", ")", "*", "out", "\n", "feature_adaptation_4", "=", "self", ".", "feature_adaptation_4_1", "(", "attention_out", ")", "\n", "feature_adaptation_4", "=", "self", ".", "feature_adaptation_4_2", "(", "feature_adaptation_4", ")", "\n", "feature_adaptation_4", "=", "self", ".", "feature_adaptation_4_3", "(", "feature_adaptation_4", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_4", "=", "feature_adaptation_4", "+", "out", "\n", "\n", "", "return", "[", "feature_adaptation_1", ",", "feature_adaptation_2", ",", "feature_adaptation_3", ",", "feature_adaptation_4", ",", "out", "]", "\n", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV3.__init__": [[440, 499], ["torch.Module.__init__", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "resnet50.conv1x1", "resnet50.conv3x3", "resnet50.conv1x1", "resnet50.conv1x1", "resnet50.conv3x3", "resnet50.conv1x1", "resnet50.conv1x1", "resnet50.conv3x3", "resnet50.conv1x1", "resnet50.conv1x1", "resnet50.conv3x3", "resnet50.conv1x1", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Sigmoid", "torch.Sigmoid", "ValueError", "NotImplementedError"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ",", "weight_dtype", "=", "None", ",", "feature_dtype", "=", "None", ",", "squeeze_factor", "=", "8", ",", "fa_res", "=", "True", ",", "is_train", "=", "True", ")", ":", "\n", "        ", "super", "(", "QuantizeBottleneckV3", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "if", "groups", "!=", "1", "or", "base_width", "!=", "64", ":", "\n", "            ", "raise", "ValueError", "(", "'BasicBlock only supports groups=1 and base_width=64'", ")", "\n", "", "if", "dilation", ">", "1", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"Dilation > 1 not supported in BasicBlock\"", ")", "\n", "# Both self.conv1 and self.downsample layers downsample the input when stride != 1", "\n", "", "self", ".", "half_max_ic", "=", "256", "\n", "self", ".", "conv1", "=", "DorefaConv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "quantize_activation_1", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "planes", ")", "\n", "self", ".", "conv2", "=", "DorefaConv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "quantize_activation_2", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "planes", ")", "\n", "self", ".", "conv3", "=", "DorefaConv2d", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "quantize_activation_3", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "concat_conv_1", "=", "DorefaConv2d", "(", "self", ".", "half_max_ic", "*", "2", ",", "self", ".", "half_max_ic", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "concat_bn_1", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_quantize_activation_1", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_conv_2", "=", "DorefaConv2d", "(", "self", ".", "half_max_ic", "*", "2", ",", "self", ".", "half_max_ic", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "concat_bn_2", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_quantize_activation_2", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_conv_3", "=", "DorefaConv2d", "(", "self", ".", "half_max_ic", "*", "2", ",", "self", ".", "half_max_ic", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "concat_bn_3", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_quantize_activation_3", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_conv_4", "=", "DorefaConv2d", "(", "self", ".", "half_max_ic", "*", "2", ",", "self", ".", "half_max_ic", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "concat_bn_4", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_quantize_activation_4", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "self", ".", "half_max_ic", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "fa_res", "=", "fa_res", "\n", "self", ".", "is_train", "=", "is_train", "\n", "\n", "self", ".", "feature_adaptation_1_1", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_1_2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_1_3", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_2_1", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_2_2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_2_3", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_3_1", "=", "conv1x1", "(", "planes", "*", "self", ".", "expansion", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_3_2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_3_3", "=", "conv1x1", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "feature_adaptation_4_1", "=", "conv1x1", "(", "planes", "*", "self", ".", "expansion", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_4_2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_4_3", "=", "conv1x1", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "fc1_1", "=", "nn", ".", "Linear", "(", "planes", ",", "planes", "//", "squeeze_factor", ")", "\n", "self", ".", "fc1_2", "=", "nn", ".", "Linear", "(", "planes", "//", "squeeze_factor", ",", "planes", ")", "\n", "self", ".", "fc2_1", "=", "nn", ".", "Linear", "(", "planes", ",", "planes", "//", "squeeze_factor", ")", "\n", "self", ".", "fc2_2", "=", "nn", ".", "Linear", "(", "planes", "//", "squeeze_factor", ",", "planes", ")", "\n", "self", ".", "fc3_1", "=", "nn", ".", "Linear", "(", "planes", "*", "self", ".", "expansion", ",", "planes", "//", "squeeze_factor", ")", "\n", "self", ".", "fc3_2", "=", "nn", ".", "Linear", "(", "planes", "//", "squeeze_factor", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "fc4_1", "=", "nn", ".", "Linear", "(", "planes", "*", "self", ".", "expansion", ",", "planes", "//", "squeeze_factor", ")", "\n", "self", ".", "fc4_2", "=", "nn", ".", "Linear", "(", "planes", "//", "squeeze_factor", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV3.downsample_and_squeeze": [[500, 505], ["torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.Flatten", "torch.nn.Flatten", "torch.nn.Flatten", "torch.nn.Flatten"], "methods", ["None"], ["", "def", "downsample_and_squeeze", "(", "self", ",", "input_tensor", ")", ":", "\n", "        ", "out", "=", "torch", ".", "nn", ".", "functional", ".", "adaptive_avg_pool2d", "(", "input_tensor", ",", "(", "1", ",", "1", ")", ")", "\n", "out", "=", "torch", ".", "nn", ".", "Flatten", "(", ")", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV3.forward": [[506, 613], ["resnet50.QuantizeBottleneckV3.conv1", "resnet50.QuantizeBottleneckV3.bn1", "resnet50.QuantizeBottleneckV3.relu", "resnet50.QuantizeBottleneckV3.quantize_activation_1", "resnet50.QuantizeBottleneckV3.conv2", "resnet50.QuantizeBottleneckV3.bn2", "resnet50.QuantizeBottleneckV3.relu", "resnet50.QuantizeBottleneckV3.quantize_activation_2", "resnet50.QuantizeBottleneckV3.conv3", "resnet50.QuantizeBottleneckV3.bn3", "resnet50.QuantizeBottleneckV3.relu", "resnet50.QuantizeBottleneckV3.quantize_activation_3", "resnet50.QuantizeBottleneckV3.concat_conv_1", "resnet50.QuantizeBottleneckV3.concat_bn_1", "resnet50.QuantizeBottleneckV3.relu", "resnet50.QuantizeBottleneckV3.concat_quantize_activation_1", "resnet50.QuantizeBottleneckV3.concat_conv_2", "resnet50.QuantizeBottleneckV3.concat_bn_2", "resnet50.QuantizeBottleneckV3.relu", "resnet50.QuantizeBottleneckV3.concat_quantize_activation_2", "resnet50.QuantizeBottleneckV3.concat_conv_3", "resnet50.QuantizeBottleneckV3.concat_bn_3", "resnet50.QuantizeBottleneckV3.relu", "resnet50.QuantizeBottleneckV3.concat_quantize_activation_3", "resnet50.QuantizeBottleneckV3.concat_conv_4", "resnet50.QuantizeBottleneckV3.concat_bn_4", "resnet50.QuantizeBottleneckV3.relu", "resnet50.QuantizeBottleneckV3.concat_quantize_activation_4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet50.QuantizeBottleneckV3.downsample_and_squeeze", "resnet50.QuantizeBottleneckV3.fc1_1", "resnet50.QuantizeBottleneckV3.relu", "resnet50.QuantizeBottleneckV3.fc1_2", "resnet50.QuantizeBottleneckV3.sigmoid", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "resnet50.QuantizeBottleneckV3.feature_adaptation_1_1", "resnet50.QuantizeBottleneckV3.feature_adaptation_1_2", "resnet50.QuantizeBottleneckV3.feature_adaptation_1_3", "resnet50.QuantizeBottleneckV3.downsample_and_squeeze", "resnet50.QuantizeBottleneckV3.fc2_1", "resnet50.QuantizeBottleneckV3.relu", "resnet50.QuantizeBottleneckV3.fc2_2", "resnet50.QuantizeBottleneckV3.sigmoid", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "resnet50.QuantizeBottleneckV3.feature_adaptation_2_1", "resnet50.QuantizeBottleneckV3.feature_adaptation_2_2", "resnet50.QuantizeBottleneckV3.feature_adaptation_2_3", "resnet50.QuantizeBottleneckV3.downsample_and_squeeze", "resnet50.QuantizeBottleneckV3.fc3_1", "resnet50.QuantizeBottleneckV3.relu", "resnet50.QuantizeBottleneckV3.fc3_2", "resnet50.QuantizeBottleneckV3.sigmoid", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "resnet50.QuantizeBottleneckV3.feature_adaptation_3_1", "resnet50.QuantizeBottleneckV3.feature_adaptation_3_2", "resnet50.QuantizeBottleneckV3.feature_adaptation_3_3", "resnet50.QuantizeBottleneckV3.downsample", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet50.QuantizeBottleneckV3.downsample_and_squeeze", "resnet50.QuantizeBottleneckV3.fc4_1", "resnet50.QuantizeBottleneckV3.relu", "resnet50.QuantizeBottleneckV3.fc4_2", "resnet50.QuantizeBottleneckV3.sigmoid", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "resnet50.QuantizeBottleneckV3.feature_adaptation_4_1", "resnet50.QuantizeBottleneckV3.feature_adaptation_4_2", "resnet50.QuantizeBottleneckV3.feature_adaptation_4_3", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.expand_as", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.expand_as", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.expand_as", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.expand_as", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.downsample_and_squeeze", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.downsample_and_squeeze", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.downsample_and_squeeze", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.downsample_and_squeeze"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "is_train", ":", "\n", "            ", "teacher_middle_outputs", "=", "x", "[", "0", "]", "\n", "x", "=", "x", "[", "1", "]", "\n", "", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "quantize_activation_1", "(", "out", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "attention_out", "=", "self", ".", "downsample_and_squeeze", "(", "teacher_middle_outputs", "[", "0", "]", ")", "\n", "attention_out", "=", "self", ".", "fc1_1", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "relu", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "fc1_2", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "sigmoid", "(", "attention_out", ")", "\n", "attention_out", "=", "attention_out", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "attention_out", "=", "attention_out", ".", "expand_as", "(", "out", ")", "*", "out", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_1_1", "(", "attention_out", ")", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_1_2", "(", "feature_adaptation_1", ")", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_1_3", "(", "feature_adaptation_1", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_1", "=", "feature_adaptation_1", "+", "out", "\n", "\n", "", "", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "quantize_activation_2", "(", "out", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "attention_out", "=", "self", ".", "downsample_and_squeeze", "(", "teacher_middle_outputs", "[", "1", "]", ")", "\n", "attention_out", "=", "self", ".", "fc2_1", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "relu", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "fc2_2", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "sigmoid", "(", "attention_out", ")", "\n", "attention_out", "=", "attention_out", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "attention_out", "=", "attention_out", ".", "expand_as", "(", "out", ")", "*", "out", "\n", "feature_adaptation_2", "=", "self", ".", "feature_adaptation_2_1", "(", "attention_out", ")", "\n", "feature_adaptation_2", "=", "self", ".", "feature_adaptation_2_2", "(", "feature_adaptation_2", ")", "\n", "feature_adaptation_2", "=", "self", ".", "feature_adaptation_2_3", "(", "feature_adaptation_2", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "                ", "feature_adaptation_2", "=", "feature_adaptation_2", "+", "out", "\n", "\n", "", "", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "quantize_activation_3", "(", "out", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "attention_out", "=", "self", ".", "downsample_and_squeeze", "(", "teacher_middle_outputs", "[", "2", "]", ")", "\n", "attention_out", "=", "self", ".", "fc3_1", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "relu", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "fc3_2", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "sigmoid", "(", "attention_out", ")", "\n", "attention_out", "=", "attention_out", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "attention_out", "=", "attention_out", ".", "expand_as", "(", "out", ")", "*", "out", "\n", "feature_adaptation_3", "=", "self", ".", "feature_adaptation_3_1", "(", "attention_out", ")", "\n", "feature_adaptation_3", "=", "self", ".", "feature_adaptation_3_2", "(", "feature_adaptation_3", ")", "\n", "feature_adaptation_3", "=", "self", ".", "feature_adaptation_3_3", "(", "feature_adaptation_3", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_3", "=", "feature_adaptation_3", "+", "out", "\n", "\n", "", "", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "identity1", "=", "identity", "[", ":", ",", ":", "self", ".", "half_max_ic", "]", "\n", "identity2", "=", "identity", "[", ":", ",", "self", ".", "half_max_ic", ":", "self", ".", "half_max_ic", "*", "2", "]", "\n", "identity3", "=", "identity", "[", ":", ",", "self", ".", "half_max_ic", "*", "2", ":", "self", ".", "half_max_ic", "*", "3", "]", "\n", "identity4", "=", "identity", "[", ":", ",", "self", ".", "half_max_ic", "*", "3", ":", "]", "\n", "\n", "out1", "=", "out", "[", ":", ",", ":", "self", ".", "half_max_ic", "]", "\n", "out2", "=", "out", "[", ":", ",", "self", ".", "half_max_ic", ":", "self", ".", "half_max_ic", "*", "2", "]", "\n", "out3", "=", "out", "[", ":", ",", "self", ".", "half_max_ic", "*", "2", ":", "self", ".", "half_max_ic", "*", "3", "]", "\n", "out4", "=", "out", "[", ":", ",", "self", ".", "half_max_ic", "*", "3", ":", "]", "\n", "\n", "out1", "=", "self", ".", "concat_conv_1", "(", "torch", ".", "cat", "(", "(", "out1", ",", "identity1", ")", ",", "dim", "=", "1", ")", ")", "\n", "out1", "=", "self", ".", "concat_bn_1", "(", "out1", ")", "\n", "out1", "=", "self", ".", "relu", "(", "out1", ")", "\n", "out1", "=", "self", ".", "concat_quantize_activation_1", "(", "out1", ")", "\n", "out2", "=", "self", ".", "concat_conv_2", "(", "torch", ".", "cat", "(", "(", "out2", ",", "identity2", ")", ",", "dim", "=", "1", ")", ")", "\n", "out2", "=", "self", ".", "concat_bn_2", "(", "out2", ")", "\n", "out2", "=", "self", ".", "relu", "(", "out2", ")", "\n", "out2", "=", "self", ".", "concat_quantize_activation_2", "(", "out2", ")", "\n", "out3", "=", "self", ".", "concat_conv_3", "(", "torch", ".", "cat", "(", "(", "out3", ",", "identity3", ")", ",", "dim", "=", "1", ")", ")", "\n", "out3", "=", "self", ".", "concat_bn_3", "(", "out3", ")", "\n", "out3", "=", "self", ".", "relu", "(", "out3", ")", "\n", "out3", "=", "self", ".", "concat_quantize_activation_3", "(", "out3", ")", "\n", "out4", "=", "self", ".", "concat_conv_4", "(", "torch", ".", "cat", "(", "(", "out4", ",", "identity4", ")", ",", "dim", "=", "1", ")", ")", "\n", "out4", "=", "self", ".", "concat_bn_4", "(", "out4", ")", "\n", "out4", "=", "self", ".", "relu", "(", "out4", ")", "\n", "out4", "=", "self", ".", "concat_quantize_activation_4", "(", "out4", ")", "\n", "out", "=", "torch", ".", "cat", "(", "(", "out1", ",", "out2", ",", "out3", ",", "out4", ")", ",", "dim", "=", "1", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "attention_out", "=", "self", ".", "downsample_and_squeeze", "(", "teacher_middle_outputs", "[", "3", "]", ")", "\n", "attention_out", "=", "self", ".", "fc4_1", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "relu", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "fc4_2", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "sigmoid", "(", "attention_out", ")", "\n", "attention_out", "=", "attention_out", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "attention_out", "=", "attention_out", ".", "expand_as", "(", "out", ")", "*", "out", "\n", "feature_adaptation_4", "=", "self", ".", "feature_adaptation_4_1", "(", "attention_out", ")", "\n", "feature_adaptation_4", "=", "self", ".", "feature_adaptation_4_2", "(", "feature_adaptation_4", ")", "\n", "feature_adaptation_4", "=", "self", ".", "feature_adaptation_4_3", "(", "feature_adaptation_4", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_4", "=", "feature_adaptation_4", "+", "out", "\n", "\n", "", "return", "[", "feature_adaptation_1", ",", "feature_adaptation_2", ",", "feature_adaptation_3", ",", "feature_adaptation_4", ",", "out", "]", "\n", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV4.__init__": [[618, 680], ["torch.Module.__init__", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "resnet50.conv1x1", "resnet50.conv3x3", "resnet50.conv1x1", "resnet50.conv1x1", "resnet50.conv3x3", "resnet50.conv1x1", "resnet50.conv1x1", "resnet50.conv3x3", "resnet50.conv1x1", "resnet50.conv1x1", "resnet50.conv3x3", "resnet50.conv1x1", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Sigmoid", "torch.Sigmoid", "ValueError", "NotImplementedError"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ",", "weight_dtype", "=", "None", ",", "feature_dtype", "=", "None", ",", "squeeze_factor", "=", "8", ",", "fa_res", "=", "True", ",", "is_train", "=", "True", ")", ":", "\n", "        ", "super", "(", "QuantizeBottleneckV4", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "if", "groups", "!=", "1", "or", "base_width", "!=", "64", ":", "\n", "            ", "raise", "ValueError", "(", "'BasicBlock only supports groups=1 and base_width=64'", ")", "\n", "", "if", "dilation", ">", "1", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"Dilation > 1 not supported in BasicBlock\"", ")", "\n", "# Both self.conv1 and self.downsample layers downsample the input when stride != 1", "\n", "", "self", ".", "half_max_ic", "=", "256", "\n", "self", ".", "conv1_1", "=", "DorefaConv2d", "(", "inplanes", "//", "2", ",", "planes", "//", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn1_1", "=", "nn", ".", "BatchNorm2d", "(", "planes", "//", "2", ")", "\n", "self", ".", "quantize_activation_1_1", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "planes", "//", "2", ")", "\n", "self", ".", "conv1_2", "=", "DorefaConv2d", "(", "inplanes", "//", "2", ",", "planes", "//", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn1_2", "=", "nn", ".", "BatchNorm2d", "(", "planes", "//", "2", ")", "\n", "self", ".", "quantize_activation_1_2", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "planes", "//", "2", ")", "\n", "self", ".", "conv2", "=", "DorefaConv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "quantize_activation_2", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "planes", ")", "\n", "self", ".", "conv3", "=", "DorefaConv2d", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "quantize_activation_3", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "concat_conv_1", "=", "DorefaConv2d", "(", "self", ".", "half_max_ic", "*", "2", ",", "self", ".", "half_max_ic", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "concat_bn_1", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_quantize_activation_1", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_conv_2", "=", "DorefaConv2d", "(", "self", ".", "half_max_ic", "*", "2", ",", "self", ".", "half_max_ic", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "concat_bn_2", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_quantize_activation_2", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_conv_3", "=", "DorefaConv2d", "(", "self", ".", "half_max_ic", "*", "2", ",", "self", ".", "half_max_ic", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "concat_bn_3", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_quantize_activation_3", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_conv_4", "=", "DorefaConv2d", "(", "self", ".", "half_max_ic", "*", "2", ",", "self", ".", "half_max_ic", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "concat_bn_4", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_quantize_activation_4", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "self", ".", "half_max_ic", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "fa_res", "=", "fa_res", "\n", "self", ".", "is_train", "=", "is_train", "\n", "\n", "self", ".", "feature_adaptation_1_1", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_1_2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_1_3", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_2_1", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_2_2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_2_3", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_3_1", "=", "conv1x1", "(", "planes", "*", "self", ".", "expansion", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_3_2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_3_3", "=", "conv1x1", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "feature_adaptation_4_1", "=", "conv1x1", "(", "planes", "*", "self", ".", "expansion", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_4_2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_4_3", "=", "conv1x1", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "fc1_1", "=", "nn", ".", "Linear", "(", "planes", ",", "planes", "//", "squeeze_factor", ")", "\n", "self", ".", "fc1_2", "=", "nn", ".", "Linear", "(", "planes", "//", "squeeze_factor", ",", "planes", ")", "\n", "self", ".", "fc2_1", "=", "nn", ".", "Linear", "(", "planes", ",", "planes", "//", "squeeze_factor", ")", "\n", "self", ".", "fc2_2", "=", "nn", ".", "Linear", "(", "planes", "//", "squeeze_factor", ",", "planes", ")", "\n", "self", ".", "fc3_1", "=", "nn", ".", "Linear", "(", "planes", "*", "self", ".", "expansion", ",", "planes", "//", "squeeze_factor", ")", "\n", "self", ".", "fc3_2", "=", "nn", ".", "Linear", "(", "planes", "//", "squeeze_factor", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "fc4_1", "=", "nn", ".", "Linear", "(", "planes", "*", "self", ".", "expansion", ",", "planes", "//", "squeeze_factor", ")", "\n", "self", ".", "fc4_2", "=", "nn", ".", "Linear", "(", "planes", "//", "squeeze_factor", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV4.downsample_and_squeeze": [[681, 686], ["torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.Flatten", "torch.nn.Flatten", "torch.nn.Flatten", "torch.nn.Flatten"], "methods", ["None"], ["", "def", "downsample_and_squeeze", "(", "self", ",", "input_tensor", ")", ":", "\n", "        ", "out", "=", "torch", ".", "nn", ".", "functional", ".", "adaptive_avg_pool2d", "(", "input_tensor", ",", "(", "1", ",", "1", ")", ")", "\n", "out", "=", "torch", ".", "nn", ".", "Flatten", "(", ")", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV4.forward": [[687, 799], ["resnet50.QuantizeBottleneckV4.conv1_1", "resnet50.QuantizeBottleneckV4.bn1_1", "resnet50.QuantizeBottleneckV4.relu", "resnet50.QuantizeBottleneckV4.quantize_activation_1_1", "resnet50.QuantizeBottleneckV4.conv1_2", "resnet50.QuantizeBottleneckV4.bn1_2", "resnet50.QuantizeBottleneckV4.relu", "resnet50.QuantizeBottleneckV4.quantize_activation_1_2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet50.QuantizeBottleneckV4.conv2", "resnet50.QuantizeBottleneckV4.bn2", "resnet50.QuantizeBottleneckV4.relu", "resnet50.QuantizeBottleneckV4.quantize_activation_2", "resnet50.QuantizeBottleneckV4.conv3", "resnet50.QuantizeBottleneckV4.bn3", "resnet50.QuantizeBottleneckV4.relu", "resnet50.QuantizeBottleneckV4.quantize_activation_3", "resnet50.QuantizeBottleneckV4.concat_conv_1", "resnet50.QuantizeBottleneckV4.concat_bn_1", "resnet50.QuantizeBottleneckV4.relu", "resnet50.QuantizeBottleneckV4.concat_quantize_activation_1", "resnet50.QuantizeBottleneckV4.concat_conv_2", "resnet50.QuantizeBottleneckV4.concat_bn_2", "resnet50.QuantizeBottleneckV4.relu", "resnet50.QuantizeBottleneckV4.concat_quantize_activation_2", "resnet50.QuantizeBottleneckV4.concat_conv_3", "resnet50.QuantizeBottleneckV4.concat_bn_3", "resnet50.QuantizeBottleneckV4.relu", "resnet50.QuantizeBottleneckV4.concat_quantize_activation_3", "resnet50.QuantizeBottleneckV4.concat_conv_4", "resnet50.QuantizeBottleneckV4.concat_bn_4", "resnet50.QuantizeBottleneckV4.relu", "resnet50.QuantizeBottleneckV4.concat_quantize_activation_4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet50.QuantizeBottleneckV4.downsample_and_squeeze", "resnet50.QuantizeBottleneckV4.fc1_1", "resnet50.QuantizeBottleneckV4.relu", "resnet50.QuantizeBottleneckV4.fc1_2", "resnet50.QuantizeBottleneckV4.sigmoid", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "resnet50.QuantizeBottleneckV4.feature_adaptation_1_1", "resnet50.QuantizeBottleneckV4.feature_adaptation_1_2", "resnet50.QuantizeBottleneckV4.feature_adaptation_1_3", "resnet50.QuantizeBottleneckV4.downsample_and_squeeze", "resnet50.QuantizeBottleneckV4.fc2_1", "resnet50.QuantizeBottleneckV4.relu", "resnet50.QuantizeBottleneckV4.fc2_2", "resnet50.QuantizeBottleneckV4.sigmoid", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "resnet50.QuantizeBottleneckV4.feature_adaptation_2_1", "resnet50.QuantizeBottleneckV4.feature_adaptation_2_2", "resnet50.QuantizeBottleneckV4.feature_adaptation_2_3", "resnet50.QuantizeBottleneckV4.downsample_and_squeeze", "resnet50.QuantizeBottleneckV4.fc3_1", "resnet50.QuantizeBottleneckV4.relu", "resnet50.QuantizeBottleneckV4.fc3_2", "resnet50.QuantizeBottleneckV4.sigmoid", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "resnet50.QuantizeBottleneckV4.feature_adaptation_3_1", "resnet50.QuantizeBottleneckV4.feature_adaptation_3_2", "resnet50.QuantizeBottleneckV4.feature_adaptation_3_3", "resnet50.QuantizeBottleneckV4.downsample", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet50.QuantizeBottleneckV4.downsample_and_squeeze", "resnet50.QuantizeBottleneckV4.fc4_1", "resnet50.QuantizeBottleneckV4.relu", "resnet50.QuantizeBottleneckV4.fc4_2", "resnet50.QuantizeBottleneckV4.sigmoid", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "resnet50.QuantizeBottleneckV4.feature_adaptation_4_1", "resnet50.QuantizeBottleneckV4.feature_adaptation_4_2", "resnet50.QuantizeBottleneckV4.feature_adaptation_4_3", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.expand_as", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.expand_as", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.expand_as", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.expand_as", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.downsample_and_squeeze", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.downsample_and_squeeze", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.downsample_and_squeeze", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.downsample_and_squeeze"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "is_train", ":", "\n", "            ", "teacher_middle_outputs", "=", "x", "[", "0", "]", "\n", "x", "=", "x", "[", "1", "]", "\n", "", "identity", "=", "x", "\n", "\n", "out1", "=", "self", ".", "conv1_1", "(", "x", "[", ":", ",", ":", "self", ".", "half_max_ic", "*", "2", "]", ")", "\n", "out1", "=", "self", ".", "bn1_1", "(", "out1", ")", "\n", "out1", "=", "self", ".", "relu", "(", "out1", ")", "\n", "out1", "=", "self", ".", "quantize_activation_1_1", "(", "out1", ")", "\n", "out2", "=", "self", ".", "conv1_2", "(", "x", "[", ":", ",", "self", ".", "half_max_ic", "*", "2", ":", "]", ")", "\n", "out2", "=", "self", ".", "bn1_2", "(", "out2", ")", "\n", "out2", "=", "self", ".", "relu", "(", "out2", ")", "\n", "out2", "=", "self", ".", "quantize_activation_1_2", "(", "out2", ")", "\n", "out", "=", "torch", ".", "cat", "(", "(", "out1", ",", "out2", ")", ",", "dim", "=", "1", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "attention_out", "=", "self", ".", "downsample_and_squeeze", "(", "teacher_middle_outputs", "[", "0", "]", ")", "\n", "attention_out", "=", "self", ".", "fc1_1", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "relu", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "fc1_2", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "sigmoid", "(", "attention_out", ")", "\n", "attention_out", "=", "attention_out", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "attention_out", "=", "attention_out", ".", "expand_as", "(", "out", ")", "*", "out", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_1_1", "(", "attention_out", ")", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_1_2", "(", "feature_adaptation_1", ")", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_1_3", "(", "feature_adaptation_1", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_1", "=", "feature_adaptation_1", "+", "out", "\n", "\n", "", "", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "quantize_activation_2", "(", "out", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "attention_out", "=", "self", ".", "downsample_and_squeeze", "(", "teacher_middle_outputs", "[", "1", "]", ")", "\n", "attention_out", "=", "self", ".", "fc2_1", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "relu", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "fc2_2", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "sigmoid", "(", "attention_out", ")", "\n", "attention_out", "=", "attention_out", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "attention_out", "=", "attention_out", ".", "expand_as", "(", "out", ")", "*", "out", "\n", "feature_adaptation_2", "=", "self", ".", "feature_adaptation_2_1", "(", "attention_out", ")", "\n", "feature_adaptation_2", "=", "self", ".", "feature_adaptation_2_2", "(", "feature_adaptation_2", ")", "\n", "feature_adaptation_2", "=", "self", ".", "feature_adaptation_2_3", "(", "feature_adaptation_2", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_2", "=", "feature_adaptation_2", "+", "out", "\n", "\n", "", "", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "quantize_activation_3", "(", "out", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "attention_out", "=", "self", ".", "downsample_and_squeeze", "(", "teacher_middle_outputs", "[", "2", "]", ")", "\n", "attention_out", "=", "self", ".", "fc3_1", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "relu", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "fc3_2", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "sigmoid", "(", "attention_out", ")", "\n", "attention_out", "=", "attention_out", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "attention_out", "=", "attention_out", ".", "expand_as", "(", "out", ")", "*", "out", "\n", "feature_adaptation_3", "=", "self", ".", "feature_adaptation_3_1", "(", "attention_out", ")", "\n", "feature_adaptation_3", "=", "self", ".", "feature_adaptation_3_2", "(", "feature_adaptation_3", ")", "\n", "feature_adaptation_3", "=", "self", ".", "feature_adaptation_3_3", "(", "feature_adaptation_3", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_3", "=", "feature_adaptation_3", "+", "out", "\n", "\n", "", "", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "identity1", "=", "identity", "[", ":", ",", ":", "self", ".", "half_max_ic", "]", "\n", "identity2", "=", "identity", "[", ":", ",", "self", ".", "half_max_ic", ":", "self", ".", "half_max_ic", "*", "2", "]", "\n", "identity3", "=", "identity", "[", ":", ",", "self", ".", "half_max_ic", "*", "2", ":", "self", ".", "half_max_ic", "*", "3", "]", "\n", "identity4", "=", "identity", "[", ":", ",", "self", ".", "half_max_ic", "*", "3", ":", "]", "\n", "\n", "out1", "=", "out", "[", ":", ",", ":", "self", ".", "half_max_ic", "]", "\n", "out2", "=", "out", "[", ":", ",", "self", ".", "half_max_ic", ":", "self", ".", "half_max_ic", "*", "2", "]", "\n", "out3", "=", "out", "[", ":", ",", "self", ".", "half_max_ic", "*", "2", ":", "self", ".", "half_max_ic", "*", "3", "]", "\n", "out4", "=", "out", "[", ":", ",", "self", ".", "half_max_ic", "*", "3", ":", "]", "\n", "\n", "out1", "=", "self", ".", "concat_conv_1", "(", "torch", ".", "cat", "(", "(", "out1", ",", "identity1", ")", ",", "dim", "=", "1", ")", ")", "\n", "out1", "=", "self", ".", "concat_bn_1", "(", "out1", ")", "\n", "out1", "=", "self", ".", "relu", "(", "out1", ")", "\n", "out1", "=", "self", ".", "concat_quantize_activation_1", "(", "out1", ")", "\n", "out2", "=", "self", ".", "concat_conv_2", "(", "torch", ".", "cat", "(", "(", "out2", ",", "identity2", ")", ",", "dim", "=", "1", ")", ")", "\n", "out2", "=", "self", ".", "concat_bn_2", "(", "out2", ")", "\n", "out2", "=", "self", ".", "relu", "(", "out2", ")", "\n", "out2", "=", "self", ".", "concat_quantize_activation_2", "(", "out2", ")", "\n", "out3", "=", "self", ".", "concat_conv_3", "(", "torch", ".", "cat", "(", "(", "out3", ",", "identity3", ")", ",", "dim", "=", "1", ")", ")", "\n", "out3", "=", "self", ".", "concat_bn_3", "(", "out3", ")", "\n", "out3", "=", "self", ".", "relu", "(", "out3", ")", "\n", "out3", "=", "self", ".", "concat_quantize_activation_3", "(", "out3", ")", "\n", "out4", "=", "self", ".", "concat_conv_4", "(", "torch", ".", "cat", "(", "(", "out4", ",", "identity4", ")", ",", "dim", "=", "1", ")", ")", "\n", "out4", "=", "self", ".", "concat_bn_4", "(", "out4", ")", "\n", "out4", "=", "self", ".", "relu", "(", "out4", ")", "\n", "out4", "=", "self", ".", "concat_quantize_activation_4", "(", "out4", ")", "\n", "out", "=", "torch", ".", "cat", "(", "(", "out1", ",", "out2", ",", "out3", ",", "out4", ")", ",", "dim", "=", "1", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "attention_out", "=", "self", ".", "downsample_and_squeeze", "(", "teacher_middle_outputs", "[", "3", "]", ")", "\n", "attention_out", "=", "self", ".", "fc4_1", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "relu", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "fc4_2", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "sigmoid", "(", "attention_out", ")", "\n", "attention_out", "=", "attention_out", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "attention_out", "=", "attention_out", ".", "expand_as", "(", "out", ")", "*", "out", "\n", "feature_adaptation_4", "=", "self", ".", "feature_adaptation_4_1", "(", "attention_out", ")", "\n", "feature_adaptation_4", "=", "self", ".", "feature_adaptation_4_2", "(", "feature_adaptation_4", ")", "\n", "feature_adaptation_4", "=", "self", ".", "feature_adaptation_4_3", "(", "feature_adaptation_4", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_4", "=", "feature_adaptation_4", "+", "out", "\n", "\n", "", "return", "[", "feature_adaptation_1", ",", "feature_adaptation_2", ",", "feature_adaptation_3", ",", "feature_adaptation_4", ",", "out", "]", "\n", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV5.__init__": [[804, 878], ["torch.Module.__init__", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "resnet50.conv1x1", "resnet50.conv3x3", "resnet50.conv1x1", "resnet50.conv1x1", "resnet50.conv3x3", "resnet50.conv1x1", "resnet50.conv1x1", "resnet50.conv3x3", "resnet50.conv1x1", "resnet50.conv1x1", "resnet50.conv3x3", "resnet50.conv1x1", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Sigmoid", "torch.Sigmoid", "ValueError", "NotImplementedError"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ",", "weight_dtype", "=", "None", ",", "feature_dtype", "=", "None", ",", "squeeze_factor", "=", "8", ",", "fa_res", "=", "True", ",", "is_train", "=", "True", ")", ":", "\n", "        ", "super", "(", "QuantizeBottleneckV5", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "if", "groups", "!=", "1", "or", "base_width", "!=", "64", ":", "\n", "            ", "raise", "ValueError", "(", "'BasicBlock only supports groups=1 and base_width=64'", ")", "\n", "", "if", "dilation", ">", "1", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"Dilation > 1 not supported in BasicBlock\"", ")", "\n", "# Both self.conv1 and self.downsample layers downsample the input when stride != 1", "\n", "", "self", ".", "half_max_ic", "=", "256", "\n", "self", ".", "conv1_1", "=", "DorefaConv2d", "(", "inplanes", "//", "2", ",", "planes", "//", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn1_1", "=", "nn", ".", "BatchNorm2d", "(", "planes", "//", "2", ")", "\n", "self", ".", "quantize_activation_1_1", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "planes", "//", "2", ")", "\n", "self", ".", "conv1_2", "=", "DorefaConv2d", "(", "inplanes", "//", "2", ",", "planes", "//", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn1_2", "=", "nn", ".", "BatchNorm2d", "(", "planes", "//", "2", ")", "\n", "self", ".", "quantize_activation_1_2", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "planes", "//", "2", ")", "\n", "self", ".", "conv2", "=", "DorefaConv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "quantize_activation_2", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "planes", ")", "\n", "self", ".", "conv3", "=", "DorefaConv2d", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "quantize_activation_3", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "concat_conv_1", "=", "DorefaConv2d", "(", "self", ".", "half_max_ic", "*", "2", ",", "self", ".", "half_max_ic", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "concat_bn_1", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_quantize_activation_1", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_conv_2", "=", "DorefaConv2d", "(", "self", ".", "half_max_ic", "*", "2", ",", "self", ".", "half_max_ic", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "concat_bn_2", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_quantize_activation_2", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_conv_3", "=", "DorefaConv2d", "(", "self", ".", "half_max_ic", "*", "2", ",", "self", ".", "half_max_ic", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "concat_bn_3", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_quantize_activation_3", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_conv_4", "=", "DorefaConv2d", "(", "self", ".", "half_max_ic", "*", "2", ",", "self", ".", "half_max_ic", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "concat_bn_4", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_quantize_activation_4", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_conv_5", "=", "DorefaConv2d", "(", "self", ".", "half_max_ic", "*", "2", ",", "self", ".", "half_max_ic", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "concat_bn_5", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_quantize_activation_5", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_conv_6", "=", "DorefaConv2d", "(", "self", ".", "half_max_ic", "*", "2", ",", "self", ".", "half_max_ic", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "concat_bn_6", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_quantize_activation_6", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_conv_7", "=", "DorefaConv2d", "(", "self", ".", "half_max_ic", "*", "2", ",", "self", ".", "half_max_ic", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "concat_bn_7", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_quantize_activation_7", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_conv_8", "=", "DorefaConv2d", "(", "self", ".", "half_max_ic", "*", "2", ",", "self", ".", "half_max_ic", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "concat_bn_8", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_quantize_activation_8", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "self", ".", "half_max_ic", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "fa_res", "=", "fa_res", "\n", "self", ".", "is_train", "=", "is_train", "\n", "\n", "self", ".", "feature_adaptation_1_1", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_1_2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_1_3", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_2_1", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_2_2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_2_3", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_3_1", "=", "conv1x1", "(", "planes", "*", "self", ".", "expansion", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_3_2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_3_3", "=", "conv1x1", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "feature_adaptation_4_1", "=", "conv1x1", "(", "planes", "*", "self", ".", "expansion", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_4_2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_4_3", "=", "conv1x1", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "fc1_1", "=", "nn", ".", "Linear", "(", "planes", ",", "planes", "//", "squeeze_factor", ")", "\n", "self", ".", "fc1_2", "=", "nn", ".", "Linear", "(", "planes", "//", "squeeze_factor", ",", "planes", ")", "\n", "self", ".", "fc2_1", "=", "nn", ".", "Linear", "(", "planes", ",", "planes", "//", "squeeze_factor", ")", "\n", "self", ".", "fc2_2", "=", "nn", ".", "Linear", "(", "planes", "//", "squeeze_factor", ",", "planes", ")", "\n", "self", ".", "fc3_1", "=", "nn", ".", "Linear", "(", "planes", "*", "self", ".", "expansion", ",", "planes", "//", "squeeze_factor", ")", "\n", "self", ".", "fc3_2", "=", "nn", ".", "Linear", "(", "planes", "//", "squeeze_factor", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "fc4_1", "=", "nn", ".", "Linear", "(", "planes", "*", "self", ".", "expansion", ",", "planes", "//", "squeeze_factor", ")", "\n", "self", ".", "fc4_2", "=", "nn", ".", "Linear", "(", "planes", "//", "squeeze_factor", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV5.downsample_and_squeeze": [[879, 884], ["torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.Flatten", "torch.nn.Flatten", "torch.nn.Flatten", "torch.nn.Flatten"], "methods", ["None"], ["", "def", "downsample_and_squeeze", "(", "self", ",", "input_tensor", ")", ":", "\n", "        ", "out", "=", "torch", ".", "nn", ".", "functional", ".", "adaptive_avg_pool2d", "(", "input_tensor", ",", "(", "1", ",", "1", ")", ")", "\n", "out", "=", "torch", ".", "nn", ".", "Flatten", "(", ")", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV5.forward": [[885, 1022], ["resnet50.QuantizeBottleneckV5.conv1_1", "resnet50.QuantizeBottleneckV5.bn1_1", "resnet50.QuantizeBottleneckV5.relu", "resnet50.QuantizeBottleneckV5.quantize_activation_1_1", "resnet50.QuantizeBottleneckV5.conv1_2", "resnet50.QuantizeBottleneckV5.bn1_2", "resnet50.QuantizeBottleneckV5.relu", "resnet50.QuantizeBottleneckV5.quantize_activation_1_2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet50.QuantizeBottleneckV5.conv2", "resnet50.QuantizeBottleneckV5.bn2", "resnet50.QuantizeBottleneckV5.relu", "resnet50.QuantizeBottleneckV5.quantize_activation_2", "resnet50.QuantizeBottleneckV5.conv3", "resnet50.QuantizeBottleneckV5.bn3", "resnet50.QuantizeBottleneckV5.relu", "resnet50.QuantizeBottleneckV5.quantize_activation_3", "resnet50.QuantizeBottleneckV5.concat_conv_1", "resnet50.QuantizeBottleneckV5.concat_bn_1", "resnet50.QuantizeBottleneckV5.relu", "resnet50.QuantizeBottleneckV5.concat_quantize_activation_1", "resnet50.QuantizeBottleneckV5.concat_conv_2", "resnet50.QuantizeBottleneckV5.concat_bn_2", "resnet50.QuantizeBottleneckV5.relu", "resnet50.QuantizeBottleneckV5.concat_quantize_activation_2", "resnet50.QuantizeBottleneckV5.concat_conv_3", "resnet50.QuantizeBottleneckV5.concat_bn_3", "resnet50.QuantizeBottleneckV5.relu", "resnet50.QuantizeBottleneckV5.concat_quantize_activation_3", "resnet50.QuantizeBottleneckV5.concat_conv_4", "resnet50.QuantizeBottleneckV5.concat_bn_4", "resnet50.QuantizeBottleneckV5.relu", "resnet50.QuantizeBottleneckV5.concat_quantize_activation_4", "resnet50.QuantizeBottleneckV5.concat_conv_5", "resnet50.QuantizeBottleneckV5.concat_bn_5", "resnet50.QuantizeBottleneckV5.relu", "resnet50.QuantizeBottleneckV5.concat_quantize_activation_5", "resnet50.QuantizeBottleneckV5.concat_conv_6", "resnet50.QuantizeBottleneckV5.concat_bn_6", "resnet50.QuantizeBottleneckV5.relu", "resnet50.QuantizeBottleneckV5.concat_quantize_activation_6", "resnet50.QuantizeBottleneckV5.concat_conv_7", "resnet50.QuantizeBottleneckV5.concat_bn_7", "resnet50.QuantizeBottleneckV5.relu", "resnet50.QuantizeBottleneckV5.concat_quantize_activation_7", "resnet50.QuantizeBottleneckV5.concat_conv_8", "resnet50.QuantizeBottleneckV5.concat_bn_8", "resnet50.QuantizeBottleneckV5.relu", "resnet50.QuantizeBottleneckV5.concat_quantize_activation_8", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet50.QuantizeBottleneckV5.downsample_and_squeeze", "resnet50.QuantizeBottleneckV5.fc1_1", "resnet50.QuantizeBottleneckV5.relu", "resnet50.QuantizeBottleneckV5.fc1_2", "resnet50.QuantizeBottleneckV5.sigmoid", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "resnet50.QuantizeBottleneckV5.feature_adaptation_1_1", "resnet50.QuantizeBottleneckV5.feature_adaptation_1_2", "resnet50.QuantizeBottleneckV5.feature_adaptation_1_3", "resnet50.QuantizeBottleneckV5.downsample_and_squeeze", "resnet50.QuantizeBottleneckV5.fc2_1", "resnet50.QuantizeBottleneckV5.relu", "resnet50.QuantizeBottleneckV5.fc2_2", "resnet50.QuantizeBottleneckV5.sigmoid", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "resnet50.QuantizeBottleneckV5.feature_adaptation_2_1", "resnet50.QuantizeBottleneckV5.feature_adaptation_2_2", "resnet50.QuantizeBottleneckV5.feature_adaptation_2_3", "resnet50.QuantizeBottleneckV5.downsample_and_squeeze", "resnet50.QuantizeBottleneckV5.fc3_1", "resnet50.QuantizeBottleneckV5.relu", "resnet50.QuantizeBottleneckV5.fc3_2", "resnet50.QuantizeBottleneckV5.sigmoid", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "resnet50.QuantizeBottleneckV5.feature_adaptation_3_1", "resnet50.QuantizeBottleneckV5.feature_adaptation_3_2", "resnet50.QuantizeBottleneckV5.feature_adaptation_3_3", "resnet50.QuantizeBottleneckV5.downsample", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet50.QuantizeBottleneckV5.downsample_and_squeeze", "resnet50.QuantizeBottleneckV5.fc4_1", "resnet50.QuantizeBottleneckV5.relu", "resnet50.QuantizeBottleneckV5.fc4_2", "resnet50.QuantizeBottleneckV5.sigmoid", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "resnet50.QuantizeBottleneckV5.feature_adaptation_4_1", "resnet50.QuantizeBottleneckV5.feature_adaptation_4_2", "resnet50.QuantizeBottleneckV5.feature_adaptation_4_3", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.expand_as", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.expand_as", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.expand_as", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.expand_as", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.downsample_and_squeeze", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.downsample_and_squeeze", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.downsample_and_squeeze", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.downsample_and_squeeze"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "is_train", ":", "\n", "            ", "teacher_middle_outputs", "=", "x", "[", "0", "]", "\n", "x", "=", "x", "[", "1", "]", "\n", "", "identity", "=", "x", "\n", "\n", "out1", "=", "self", ".", "conv1_1", "(", "x", "[", ":", ",", ":", "self", ".", "half_max_ic", "*", "2", "]", ")", "\n", "out1", "=", "self", ".", "bn1_1", "(", "out1", ")", "\n", "out1", "=", "self", ".", "relu", "(", "out1", ")", "\n", "out1", "=", "self", ".", "quantize_activation_1_1", "(", "out1", ")", "\n", "out2", "=", "self", ".", "conv1_2", "(", "x", "[", ":", ",", "self", ".", "half_max_ic", "*", "2", ":", "]", ")", "\n", "out2", "=", "self", ".", "bn1_2", "(", "out2", ")", "\n", "out2", "=", "self", ".", "relu", "(", "out2", ")", "\n", "out2", "=", "self", ".", "quantize_activation_1_2", "(", "out2", ")", "\n", "out", "=", "torch", ".", "cat", "(", "(", "out1", ",", "out2", ")", ",", "dim", "=", "1", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "attention_out", "=", "self", ".", "downsample_and_squeeze", "(", "teacher_middle_outputs", "[", "0", "]", ")", "\n", "attention_out", "=", "self", ".", "fc1_1", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "relu", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "fc1_2", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "sigmoid", "(", "attention_out", ")", "\n", "attention_out", "=", "attention_out", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "attention_out", "=", "attention_out", ".", "expand_as", "(", "out", ")", "*", "out", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_1_1", "(", "attention_out", ")", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_1_2", "(", "feature_adaptation_1", ")", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_1_3", "(", "feature_adaptation_1", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_1", "=", "feature_adaptation_1", "+", "out", "\n", "\n", "", "", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "quantize_activation_2", "(", "out", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "attention_out", "=", "self", ".", "downsample_and_squeeze", "(", "teacher_middle_outputs", "[", "1", "]", ")", "\n", "attention_out", "=", "self", ".", "fc2_1", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "relu", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "fc2_2", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "sigmoid", "(", "attention_out", ")", "\n", "attention_out", "=", "attention_out", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "attention_out", "=", "attention_out", ".", "expand_as", "(", "out", ")", "*", "out", "\n", "feature_adaptation_2", "=", "self", ".", "feature_adaptation_2_1", "(", "attention_out", ")", "\n", "feature_adaptation_2", "=", "self", ".", "feature_adaptation_2_2", "(", "feature_adaptation_2", ")", "\n", "feature_adaptation_2", "=", "self", ".", "feature_adaptation_2_3", "(", "feature_adaptation_2", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_2", "=", "feature_adaptation_2", "+", "out", "\n", "\n", "", "", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "quantize_activation_3", "(", "out", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "attention_out", "=", "self", ".", "downsample_and_squeeze", "(", "teacher_middle_outputs", "[", "2", "]", ")", "\n", "attention_out", "=", "self", ".", "fc3_1", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "relu", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "fc3_2", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "sigmoid", "(", "attention_out", ")", "\n", "attention_out", "=", "attention_out", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "attention_out", "=", "attention_out", ".", "expand_as", "(", "out", ")", "*", "out", "\n", "feature_adaptation_3", "=", "self", ".", "feature_adaptation_3_1", "(", "attention_out", ")", "\n", "feature_adaptation_3", "=", "self", ".", "feature_adaptation_3_2", "(", "feature_adaptation_3", ")", "\n", "feature_adaptation_3", "=", "self", ".", "feature_adaptation_3_3", "(", "feature_adaptation_3", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_3", "=", "feature_adaptation_3", "+", "out", "\n", "\n", "", "", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "identity1", "=", "identity", "[", ":", ",", ":", "self", ".", "half_max_ic", "]", "\n", "identity2", "=", "identity", "[", ":", ",", "self", ".", "half_max_ic", ":", "self", ".", "half_max_ic", "*", "2", "]", "\n", "identity3", "=", "identity", "[", ":", ",", "self", ".", "half_max_ic", "*", "2", ":", "self", ".", "half_max_ic", "*", "3", "]", "\n", "identity4", "=", "identity", "[", ":", ",", "self", ".", "half_max_ic", "*", "3", ":", "self", ".", "half_max_ic", "*", "4", "]", "\n", "identity5", "=", "identity", "[", ":", ",", "self", ".", "half_max_ic", "*", "4", ":", "self", ".", "half_max_ic", "*", "5", "]", "\n", "identity6", "=", "identity", "[", ":", ",", "self", ".", "half_max_ic", "*", "5", ":", "self", ".", "half_max_ic", "*", "6", "]", "\n", "identity7", "=", "identity", "[", ":", ",", "self", ".", "half_max_ic", "*", "6", ":", "self", ".", "half_max_ic", "*", "7", "]", "\n", "identity8", "=", "identity", "[", ":", ",", "self", ".", "half_max_ic", "*", "7", ":", "]", "\n", "\n", "out1", "=", "out", "[", ":", ",", ":", "self", ".", "half_max_ic", "]", "\n", "out2", "=", "out", "[", ":", ",", "self", ".", "half_max_ic", ":", "self", ".", "half_max_ic", "*", "2", "]", "\n", "out3", "=", "out", "[", ":", ",", "self", ".", "half_max_ic", "*", "2", ":", "self", ".", "half_max_ic", "*", "3", "]", "\n", "out4", "=", "out", "[", ":", ",", "self", ".", "half_max_ic", "*", "3", ":", "self", ".", "half_max_ic", "*", "4", "]", "\n", "out5", "=", "out", "[", ":", ",", "self", ".", "half_max_ic", "*", "4", ":", "self", ".", "half_max_ic", "*", "5", "]", "\n", "out6", "=", "out", "[", ":", ",", "self", ".", "half_max_ic", "*", "5", ":", "self", ".", "half_max_ic", "*", "6", "]", "\n", "out7", "=", "out", "[", ":", ",", "self", ".", "half_max_ic", "*", "6", ":", "self", ".", "half_max_ic", "*", "7", "]", "\n", "out8", "=", "out", "[", ":", ",", "self", ".", "half_max_ic", "*", "7", ":", "]", "\n", "\n", "out1", "=", "self", ".", "concat_conv_1", "(", "torch", ".", "cat", "(", "(", "out1", ",", "identity1", ")", ",", "dim", "=", "1", ")", ")", "\n", "out1", "=", "self", ".", "concat_bn_1", "(", "out1", ")", "\n", "out1", "=", "self", ".", "relu", "(", "out1", ")", "\n", "out1", "=", "self", ".", "concat_quantize_activation_1", "(", "out1", ")", "\n", "out2", "=", "self", ".", "concat_conv_2", "(", "torch", ".", "cat", "(", "(", "out2", ",", "identity2", ")", ",", "dim", "=", "1", ")", ")", "\n", "out2", "=", "self", ".", "concat_bn_2", "(", "out2", ")", "\n", "out2", "=", "self", ".", "relu", "(", "out2", ")", "\n", "out2", "=", "self", ".", "concat_quantize_activation_2", "(", "out2", ")", "\n", "out3", "=", "self", ".", "concat_conv_3", "(", "torch", ".", "cat", "(", "(", "out3", ",", "identity3", ")", ",", "dim", "=", "1", ")", ")", "\n", "out3", "=", "self", ".", "concat_bn_3", "(", "out3", ")", "\n", "out3", "=", "self", ".", "relu", "(", "out3", ")", "\n", "out3", "=", "self", ".", "concat_quantize_activation_3", "(", "out3", ")", "\n", "out4", "=", "self", ".", "concat_conv_4", "(", "torch", ".", "cat", "(", "(", "out4", ",", "identity4", ")", ",", "dim", "=", "1", ")", ")", "\n", "out4", "=", "self", ".", "concat_bn_4", "(", "out4", ")", "\n", "out4", "=", "self", ".", "relu", "(", "out4", ")", "\n", "out4", "=", "self", ".", "concat_quantize_activation_4", "(", "out4", ")", "\n", "out5", "=", "self", ".", "concat_conv_5", "(", "torch", ".", "cat", "(", "(", "out5", ",", "identity5", ")", ",", "dim", "=", "1", ")", ")", "\n", "out5", "=", "self", ".", "concat_bn_5", "(", "out5", ")", "\n", "out5", "=", "self", ".", "relu", "(", "out5", ")", "\n", "out5", "=", "self", ".", "concat_quantize_activation_5", "(", "out5", ")", "\n", "out6", "=", "self", ".", "concat_conv_6", "(", "torch", ".", "cat", "(", "(", "out6", ",", "identity6", ")", ",", "dim", "=", "1", ")", ")", "\n", "out6", "=", "self", ".", "concat_bn_6", "(", "out6", ")", "\n", "out6", "=", "self", ".", "relu", "(", "out6", ")", "\n", "out6", "=", "self", ".", "concat_quantize_activation_6", "(", "out6", ")", "\n", "out7", "=", "self", ".", "concat_conv_7", "(", "torch", ".", "cat", "(", "(", "out7", ",", "identity7", ")", ",", "dim", "=", "1", ")", ")", "\n", "out7", "=", "self", ".", "concat_bn_7", "(", "out7", ")", "\n", "out7", "=", "self", ".", "relu", "(", "out7", ")", "\n", "out7", "=", "self", ".", "concat_quantize_activation_7", "(", "out7", ")", "\n", "out8", "=", "self", ".", "concat_conv_8", "(", "torch", ".", "cat", "(", "(", "out8", ",", "identity8", ")", ",", "dim", "=", "1", ")", ")", "\n", "out8", "=", "self", ".", "concat_bn_8", "(", "out8", ")", "\n", "out8", "=", "self", ".", "relu", "(", "out8", ")", "\n", "out8", "=", "self", ".", "concat_quantize_activation_8", "(", "out8", ")", "\n", "out", "=", "torch", ".", "cat", "(", "(", "out1", ",", "out2", ",", "out3", ",", "out4", ",", "out5", ",", "out6", ",", "out7", ",", "out8", ")", ",", "dim", "=", "1", ")", "\n", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "attention_out", "=", "self", ".", "downsample_and_squeeze", "(", "teacher_middle_outputs", "[", "3", "]", ")", "\n", "attention_out", "=", "self", ".", "fc4_1", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "relu", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "fc4_2", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "sigmoid", "(", "attention_out", ")", "\n", "attention_out", "=", "attention_out", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "attention_out", "=", "attention_out", ".", "expand_as", "(", "out", ")", "*", "out", "\n", "feature_adaptation_4", "=", "self", ".", "feature_adaptation_4_1", "(", "attention_out", ")", "\n", "feature_adaptation_4", "=", "self", ".", "feature_adaptation_4_2", "(", "feature_adaptation_4", ")", "\n", "feature_adaptation_4", "=", "self", ".", "feature_adaptation_4_3", "(", "feature_adaptation_4", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_4", "=", "feature_adaptation_4", "+", "out", "\n", "\n", "", "return", "[", "feature_adaptation_1", ",", "feature_adaptation_2", ",", "feature_adaptation_3", ",", "feature_adaptation_4", ",", "out", "]", "\n", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.__init__": [[1027, 1107], ["torch.Module.__init__", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "resnet50.conv1x1", "resnet50.conv3x3", "resnet50.conv1x1", "resnet50.conv1x1", "resnet50.conv3x3", "resnet50.conv1x1", "resnet50.conv1x1", "resnet50.conv3x3", "resnet50.conv1x1", "resnet50.conv1x1", "resnet50.conv3x3", "resnet50.conv1x1", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Sigmoid", "torch.Sigmoid", "ValueError", "NotImplementedError"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ",", "weight_dtype", "=", "None", ",", "feature_dtype", "=", "None", ",", "squeeze_factor", "=", "8", ",", "fa_res", "=", "True", ",", "is_train", "=", "True", ")", ":", "\n", "        ", "super", "(", "QuantizeBottleneckV6", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "if", "groups", "!=", "1", "or", "base_width", "!=", "64", ":", "\n", "            ", "raise", "ValueError", "(", "'BasicBlock only supports groups=1 and base_width=64'", ")", "\n", "", "if", "dilation", ">", "1", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"Dilation > 1 not supported in BasicBlock\"", ")", "\n", "# Both self.conv1 and self.downsample layers downsample the input when stride != 1", "\n", "", "self", ".", "half_max_ic", "=", "256", "\n", "self", ".", "conv1_1", "=", "DorefaConv2d", "(", "inplanes", "//", "4", ",", "planes", "//", "4", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn1_1", "=", "nn", ".", "BatchNorm2d", "(", "planes", "//", "4", ")", "\n", "self", ".", "quantize_activation_1_1", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "planes", "//", "4", ")", "\n", "self", ".", "conv1_2", "=", "DorefaConv2d", "(", "inplanes", "//", "4", ",", "planes", "//", "4", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn1_2", "=", "nn", ".", "BatchNorm2d", "(", "planes", "//", "4", ")", "\n", "self", ".", "quantize_activation_1_2", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "planes", "//", "4", ")", "\n", "self", ".", "conv1_3", "=", "DorefaConv2d", "(", "inplanes", "//", "4", ",", "planes", "//", "4", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn1_3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "//", "4", ")", "\n", "self", ".", "quantize_activation_1_3", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "planes", "//", "4", ")", "\n", "self", ".", "conv1_4", "=", "DorefaConv2d", "(", "inplanes", "//", "4", ",", "planes", "//", "4", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn1_4", "=", "nn", ".", "BatchNorm2d", "(", "planes", "//", "4", ")", "\n", "self", ".", "quantize_activation_1_4", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "planes", "//", "4", ")", "\n", "self", ".", "conv2", "=", "DorefaConv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "quantize_activation_2", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "planes", ")", "\n", "self", ".", "conv3", "=", "DorefaConv2d", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "quantize_activation_3", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "concat_conv_1", "=", "DorefaConv2d", "(", "self", ".", "half_max_ic", "*", "2", ",", "self", ".", "half_max_ic", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "concat_bn_1", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_quantize_activation_1", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_conv_2", "=", "DorefaConv2d", "(", "self", ".", "half_max_ic", "*", "2", ",", "self", ".", "half_max_ic", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "concat_bn_2", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_quantize_activation_2", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_conv_3", "=", "DorefaConv2d", "(", "self", ".", "half_max_ic", "*", "2", ",", "self", ".", "half_max_ic", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "concat_bn_3", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_quantize_activation_3", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_conv_4", "=", "DorefaConv2d", "(", "self", ".", "half_max_ic", "*", "2", ",", "self", ".", "half_max_ic", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "concat_bn_4", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_quantize_activation_4", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_conv_5", "=", "DorefaConv2d", "(", "self", ".", "half_max_ic", "*", "2", ",", "self", ".", "half_max_ic", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "concat_bn_5", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_quantize_activation_5", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_conv_6", "=", "DorefaConv2d", "(", "self", ".", "half_max_ic", "*", "2", ",", "self", ".", "half_max_ic", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "concat_bn_6", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_quantize_activation_6", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_conv_7", "=", "DorefaConv2d", "(", "self", ".", "half_max_ic", "*", "2", ",", "self", ".", "half_max_ic", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "concat_bn_7", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_quantize_activation_7", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_conv_8", "=", "DorefaConv2d", "(", "self", ".", "half_max_ic", "*", "2", ",", "self", ".", "half_max_ic", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "concat_bn_8", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "half_max_ic", ")", "\n", "self", ".", "concat_quantize_activation_8", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "self", ".", "half_max_ic", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "fa_res", "=", "fa_res", "\n", "self", ".", "is_train", "=", "is_train", "\n", "\n", "self", ".", "feature_adaptation_1_1", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_1_2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_1_3", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_2_1", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_2_2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_2_3", "=", "conv1x1", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_3_1", "=", "conv1x1", "(", "planes", "*", "self", ".", "expansion", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_3_2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_3_3", "=", "conv1x1", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "feature_adaptation_4_1", "=", "conv1x1", "(", "planes", "*", "self", ".", "expansion", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_4_2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "feature_adaptation_4_3", "=", "conv1x1", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "fc1_1", "=", "nn", ".", "Linear", "(", "planes", ",", "planes", "//", "squeeze_factor", ")", "\n", "self", ".", "fc1_2", "=", "nn", ".", "Linear", "(", "planes", "//", "squeeze_factor", ",", "planes", ")", "\n", "self", ".", "fc2_1", "=", "nn", ".", "Linear", "(", "planes", ",", "planes", "//", "squeeze_factor", ")", "\n", "self", ".", "fc2_2", "=", "nn", ".", "Linear", "(", "planes", "//", "squeeze_factor", ",", "planes", ")", "\n", "self", ".", "fc3_1", "=", "nn", ".", "Linear", "(", "planes", "*", "self", ".", "expansion", ",", "planes", "//", "squeeze_factor", ")", "\n", "self", ".", "fc3_2", "=", "nn", ".", "Linear", "(", "planes", "//", "squeeze_factor", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "fc4_1", "=", "nn", ".", "Linear", "(", "planes", "*", "self", ".", "expansion", ",", "planes", "//", "squeeze_factor", ")", "\n", "self", ".", "fc4_2", "=", "nn", ".", "Linear", "(", "planes", "//", "squeeze_factor", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.downsample_and_squeeze": [[1108, 1113], ["torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.Flatten", "torch.nn.Flatten", "torch.nn.Flatten", "torch.nn.Flatten"], "methods", ["None"], ["", "def", "downsample_and_squeeze", "(", "self", ",", "input_tensor", ")", ":", "\n", "        ", "out", "=", "torch", ".", "nn", ".", "functional", ".", "adaptive_avg_pool2d", "(", "input_tensor", ",", "(", "1", ",", "1", ")", ")", "\n", "out", "=", "torch", ".", "nn", ".", "Flatten", "(", ")", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.forward": [[1114, 1258], ["resnet50.QuantizeBottleneckV6.conv1_1", "resnet50.QuantizeBottleneckV6.bn1_1", "resnet50.QuantizeBottleneckV6.relu", "resnet50.QuantizeBottleneckV6.quantize_activation_1_1", "resnet50.QuantizeBottleneckV6.conv1_2", "resnet50.QuantizeBottleneckV6.bn1_2", "resnet50.QuantizeBottleneckV6.relu", "resnet50.QuantizeBottleneckV6.quantize_activation_1_2", "resnet50.QuantizeBottleneckV6.conv1_3", "resnet50.QuantizeBottleneckV6.bn1_3", "resnet50.QuantizeBottleneckV6.relu", "resnet50.QuantizeBottleneckV6.quantize_activation_1_3", "resnet50.QuantizeBottleneckV6.conv1_4", "resnet50.QuantizeBottleneckV6.bn1_4", "resnet50.QuantizeBottleneckV6.relu", "resnet50.QuantizeBottleneckV6.quantize_activation_1_4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet50.QuantizeBottleneckV6.conv2", "resnet50.QuantizeBottleneckV6.bn2", "resnet50.QuantizeBottleneckV6.relu", "resnet50.QuantizeBottleneckV6.quantize_activation_2", "resnet50.QuantizeBottleneckV6.conv3", "resnet50.QuantizeBottleneckV6.bn3", "resnet50.QuantizeBottleneckV6.relu", "resnet50.QuantizeBottleneckV6.quantize_activation_3", "resnet50.QuantizeBottleneckV6.concat_conv_1", "resnet50.QuantizeBottleneckV6.concat_bn_1", "resnet50.QuantizeBottleneckV6.relu", "resnet50.QuantizeBottleneckV6.concat_quantize_activation_1", "resnet50.QuantizeBottleneckV6.concat_conv_2", "resnet50.QuantizeBottleneckV6.concat_bn_2", "resnet50.QuantizeBottleneckV6.relu", "resnet50.QuantizeBottleneckV6.concat_quantize_activation_2", "resnet50.QuantizeBottleneckV6.concat_conv_3", "resnet50.QuantizeBottleneckV6.concat_bn_3", "resnet50.QuantizeBottleneckV6.relu", "resnet50.QuantizeBottleneckV6.concat_quantize_activation_3", "resnet50.QuantizeBottleneckV6.concat_conv_4", "resnet50.QuantizeBottleneckV6.concat_bn_4", "resnet50.QuantizeBottleneckV6.relu", "resnet50.QuantizeBottleneckV6.concat_quantize_activation_4", "resnet50.QuantizeBottleneckV6.concat_conv_5", "resnet50.QuantizeBottleneckV6.concat_bn_5", "resnet50.QuantizeBottleneckV6.relu", "resnet50.QuantizeBottleneckV6.concat_quantize_activation_5", "resnet50.QuantizeBottleneckV6.concat_conv_6", "resnet50.QuantizeBottleneckV6.concat_bn_6", "resnet50.QuantizeBottleneckV6.relu", "resnet50.QuantizeBottleneckV6.concat_quantize_activation_6", "resnet50.QuantizeBottleneckV6.concat_conv_7", "resnet50.QuantizeBottleneckV6.concat_bn_7", "resnet50.QuantizeBottleneckV6.relu", "resnet50.QuantizeBottleneckV6.concat_quantize_activation_7", "resnet50.QuantizeBottleneckV6.concat_conv_8", "resnet50.QuantizeBottleneckV6.concat_bn_8", "resnet50.QuantizeBottleneckV6.relu", "resnet50.QuantizeBottleneckV6.concat_quantize_activation_8", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet50.QuantizeBottleneckV6.downsample_and_squeeze", "resnet50.QuantizeBottleneckV6.fc1_1", "resnet50.QuantizeBottleneckV6.relu", "resnet50.QuantizeBottleneckV6.fc1_2", "resnet50.QuantizeBottleneckV6.sigmoid", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "resnet50.QuantizeBottleneckV6.feature_adaptation_1_1", "resnet50.QuantizeBottleneckV6.feature_adaptation_1_2", "resnet50.QuantizeBottleneckV6.feature_adaptation_1_3", "resnet50.QuantizeBottleneckV6.downsample_and_squeeze", "resnet50.QuantizeBottleneckV6.fc2_1", "resnet50.QuantizeBottleneckV6.relu", "resnet50.QuantizeBottleneckV6.fc2_2", "resnet50.QuantizeBottleneckV6.sigmoid", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "resnet50.QuantizeBottleneckV6.feature_adaptation_2_1", "resnet50.QuantizeBottleneckV6.feature_adaptation_2_2", "resnet50.QuantizeBottleneckV6.feature_adaptation_2_3", "resnet50.QuantizeBottleneckV6.downsample_and_squeeze", "resnet50.QuantizeBottleneckV6.fc3_1", "resnet50.QuantizeBottleneckV6.relu", "resnet50.QuantizeBottleneckV6.fc3_2", "resnet50.QuantizeBottleneckV6.sigmoid", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "resnet50.QuantizeBottleneckV6.feature_adaptation_3_1", "resnet50.QuantizeBottleneckV6.feature_adaptation_3_2", "resnet50.QuantizeBottleneckV6.feature_adaptation_3_3", "resnet50.QuantizeBottleneckV6.downsample", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet50.QuantizeBottleneckV6.downsample_and_squeeze", "resnet50.QuantizeBottleneckV6.fc4_1", "resnet50.QuantizeBottleneckV6.relu", "resnet50.QuantizeBottleneckV6.fc4_2", "resnet50.QuantizeBottleneckV6.sigmoid", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "resnet50.QuantizeBottleneckV6.feature_adaptation_4_1", "resnet50.QuantizeBottleneckV6.feature_adaptation_4_2", "resnet50.QuantizeBottleneckV6.feature_adaptation_4_3", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.expand_as", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.expand_as", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.expand_as", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.expand_as", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze", "attention_out.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.downsample_and_squeeze", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.downsample_and_squeeze", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.downsample_and_squeeze", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.QuantizeBottleneckV6.downsample_and_squeeze"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "is_train", ":", "\n", "            ", "teacher_middle_outputs", "=", "x", "[", "0", "]", "\n", "x", "=", "x", "[", "1", "]", "\n", "", "identity", "=", "x", "\n", "\n", "out1", "=", "self", ".", "conv1_1", "(", "x", "[", ":", ",", ":", "self", ".", "half_max_ic", "*", "2", "]", ")", "\n", "out1", "=", "self", ".", "bn1_1", "(", "out1", ")", "\n", "out1", "=", "self", ".", "relu", "(", "out1", ")", "\n", "out1", "=", "self", ".", "quantize_activation_1_1", "(", "out1", ")", "\n", "out2", "=", "self", ".", "conv1_2", "(", "x", "[", ":", ",", "self", ".", "half_max_ic", "*", "2", ":", "self", ".", "half_max_ic", "*", "4", "]", ")", "\n", "out2", "=", "self", ".", "bn1_2", "(", "out2", ")", "\n", "out2", "=", "self", ".", "relu", "(", "out2", ")", "\n", "out2", "=", "self", ".", "quantize_activation_1_2", "(", "out2", ")", "\n", "out3", "=", "self", ".", "conv1_3", "(", "x", "[", ":", ",", "self", ".", "half_max_ic", "*", "4", ":", "self", ".", "half_max_ic", "*", "6", "]", ")", "\n", "out3", "=", "self", ".", "bn1_3", "(", "out3", ")", "\n", "out3", "=", "self", ".", "relu", "(", "out3", ")", "\n", "out3", "=", "self", ".", "quantize_activation_1_3", "(", "out3", ")", "\n", "out4", "=", "self", ".", "conv1_4", "(", "x", "[", ":", ",", "self", ".", "half_max_ic", "*", "6", ":", "]", ")", "\n", "out4", "=", "self", ".", "bn1_4", "(", "out4", ")", "\n", "out4", "=", "self", ".", "relu", "(", "out4", ")", "\n", "out4", "=", "self", ".", "quantize_activation_1_4", "(", "out4", ")", "\n", "out", "=", "torch", ".", "cat", "(", "(", "out1", ",", "out2", ",", "out3", ",", "out4", ")", ",", "dim", "=", "1", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "attention_out", "=", "self", ".", "downsample_and_squeeze", "(", "teacher_middle_outputs", "[", "0", "]", ")", "\n", "attention_out", "=", "self", ".", "fc1_1", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "relu", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "fc1_2", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "sigmoid", "(", "attention_out", ")", "\n", "attention_out", "=", "attention_out", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "attention_out", "=", "attention_out", ".", "expand_as", "(", "out", ")", "*", "out", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_1_1", "(", "attention_out", ")", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_1_2", "(", "feature_adaptation_1", ")", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_1_3", "(", "feature_adaptation_1", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_1", "=", "feature_adaptation_1", "+", "out", "\n", "\n", "", "", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "quantize_activation_2", "(", "out", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "attention_out", "=", "self", ".", "downsample_and_squeeze", "(", "teacher_middle_outputs", "[", "1", "]", ")", "\n", "attention_out", "=", "self", ".", "fc2_1", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "relu", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "fc2_2", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "sigmoid", "(", "attention_out", ")", "\n", "attention_out", "=", "attention_out", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "attention_out", "=", "attention_out", ".", "expand_as", "(", "out", ")", "*", "out", "\n", "feature_adaptation_2", "=", "self", ".", "feature_adaptation_2_1", "(", "attention_out", ")", "\n", "feature_adaptation_2", "=", "self", ".", "feature_adaptation_2_2", "(", "feature_adaptation_2", ")", "\n", "feature_adaptation_2", "=", "self", ".", "feature_adaptation_2_3", "(", "feature_adaptation_2", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_2", "=", "feature_adaptation_2", "+", "out", "\n", "\n", "", "", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "quantize_activation_3", "(", "out", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "attention_out", "=", "self", ".", "downsample_and_squeeze", "(", "teacher_middle_outputs", "[", "2", "]", ")", "\n", "attention_out", "=", "self", ".", "fc3_1", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "relu", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "fc3_2", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "sigmoid", "(", "attention_out", ")", "\n", "attention_out", "=", "attention_out", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "attention_out", "=", "attention_out", ".", "expand_as", "(", "out", ")", "*", "out", "\n", "feature_adaptation_3", "=", "self", ".", "feature_adaptation_3_1", "(", "attention_out", ")", "\n", "feature_adaptation_3", "=", "self", ".", "feature_adaptation_3_2", "(", "feature_adaptation_3", ")", "\n", "feature_adaptation_3", "=", "self", ".", "feature_adaptation_3_3", "(", "feature_adaptation_3", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_3", "=", "feature_adaptation_3", "+", "out", "\n", "\n", "", "", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "identity1", "=", "identity", "[", ":", ",", ":", "self", ".", "half_max_ic", "]", "\n", "identity2", "=", "identity", "[", ":", ",", "self", ".", "half_max_ic", ":", "self", ".", "half_max_ic", "*", "2", "]", "\n", "identity3", "=", "identity", "[", ":", ",", "self", ".", "half_max_ic", "*", "2", ":", "self", ".", "half_max_ic", "*", "3", "]", "\n", "identity4", "=", "identity", "[", ":", ",", "self", ".", "half_max_ic", "*", "3", ":", "self", ".", "half_max_ic", "*", "4", "]", "\n", "identity5", "=", "identity", "[", ":", ",", "self", ".", "half_max_ic", "*", "4", ":", "self", ".", "half_max_ic", "*", "5", "]", "\n", "identity6", "=", "identity", "[", ":", ",", "self", ".", "half_max_ic", "*", "5", ":", "self", ".", "half_max_ic", "*", "6", "]", "\n", "identity7", "=", "identity", "[", ":", ",", "self", ".", "half_max_ic", "*", "6", ":", "self", ".", "half_max_ic", "*", "7", "]", "\n", "identity8", "=", "identity", "[", ":", ",", "self", ".", "half_max_ic", "*", "7", ":", "]", "\n", "\n", "out1", "=", "out", "[", ":", ",", ":", "self", ".", "half_max_ic", "]", "\n", "out2", "=", "out", "[", ":", ",", "self", ".", "half_max_ic", ":", "self", ".", "half_max_ic", "*", "2", "]", "\n", "out3", "=", "out", "[", ":", ",", "self", ".", "half_max_ic", "*", "2", ":", "self", ".", "half_max_ic", "*", "3", "]", "\n", "out4", "=", "out", "[", ":", ",", "self", ".", "half_max_ic", "*", "3", ":", "self", ".", "half_max_ic", "*", "4", "]", "\n", "out5", "=", "out", "[", ":", ",", "self", ".", "half_max_ic", "*", "4", ":", "self", ".", "half_max_ic", "*", "5", "]", "\n", "out6", "=", "out", "[", ":", ",", "self", ".", "half_max_ic", "*", "5", ":", "self", ".", "half_max_ic", "*", "6", "]", "\n", "out7", "=", "out", "[", ":", ",", "self", ".", "half_max_ic", "*", "6", ":", "self", ".", "half_max_ic", "*", "7", "]", "\n", "out8", "=", "out", "[", ":", ",", "self", ".", "half_max_ic", "*", "7", ":", "]", "\n", "\n", "out1", "=", "self", ".", "concat_conv_1", "(", "torch", ".", "cat", "(", "(", "out1", ",", "identity1", ")", ",", "dim", "=", "1", ")", ")", "\n", "out1", "=", "self", ".", "concat_bn_1", "(", "out1", ")", "\n", "out1", "=", "self", ".", "relu", "(", "out1", ")", "\n", "out1", "=", "self", ".", "concat_quantize_activation_1", "(", "out1", ")", "\n", "out2", "=", "self", ".", "concat_conv_2", "(", "torch", ".", "cat", "(", "(", "out2", ",", "identity2", ")", ",", "dim", "=", "1", ")", ")", "\n", "out2", "=", "self", ".", "concat_bn_2", "(", "out2", ")", "\n", "out2", "=", "self", ".", "relu", "(", "out2", ")", "\n", "out2", "=", "self", ".", "concat_quantize_activation_2", "(", "out2", ")", "\n", "out3", "=", "self", ".", "concat_conv_3", "(", "torch", ".", "cat", "(", "(", "out3", ",", "identity3", ")", ",", "dim", "=", "1", ")", ")", "\n", "out3", "=", "self", ".", "concat_bn_3", "(", "out3", ")", "\n", "out3", "=", "self", ".", "relu", "(", "out3", ")", "\n", "out3", "=", "self", ".", "concat_quantize_activation_3", "(", "out3", ")", "\n", "out4", "=", "self", ".", "concat_conv_4", "(", "torch", ".", "cat", "(", "(", "out4", ",", "identity4", ")", ",", "dim", "=", "1", ")", ")", "\n", "out4", "=", "self", ".", "concat_bn_4", "(", "out4", ")", "\n", "out4", "=", "self", ".", "relu", "(", "out4", ")", "\n", "out4", "=", "self", ".", "concat_quantize_activation_4", "(", "out4", ")", "\n", "out5", "=", "self", ".", "concat_conv_5", "(", "torch", ".", "cat", "(", "(", "out5", ",", "identity5", ")", ",", "dim", "=", "1", ")", ")", "\n", "out5", "=", "self", ".", "concat_bn_5", "(", "out5", ")", "\n", "out5", "=", "self", ".", "relu", "(", "out5", ")", "\n", "out5", "=", "self", ".", "concat_quantize_activation_5", "(", "out5", ")", "\n", "out6", "=", "self", ".", "concat_conv_6", "(", "torch", ".", "cat", "(", "(", "out6", ",", "identity6", ")", ",", "dim", "=", "1", ")", ")", "\n", "out6", "=", "self", ".", "concat_bn_6", "(", "out6", ")", "\n", "out6", "=", "self", ".", "relu", "(", "out6", ")", "\n", "out6", "=", "self", ".", "concat_quantize_activation_6", "(", "out6", ")", "\n", "out7", "=", "self", ".", "concat_conv_7", "(", "torch", ".", "cat", "(", "(", "out7", ",", "identity7", ")", ",", "dim", "=", "1", ")", ")", "\n", "out7", "=", "self", ".", "concat_bn_7", "(", "out7", ")", "\n", "out7", "=", "self", ".", "relu", "(", "out7", ")", "\n", "out7", "=", "self", ".", "concat_quantize_activation_7", "(", "out7", ")", "\n", "out8", "=", "self", ".", "concat_conv_8", "(", "torch", ".", "cat", "(", "(", "out8", ",", "identity8", ")", ",", "dim", "=", "1", ")", ")", "\n", "out8", "=", "self", ".", "concat_bn_8", "(", "out8", ")", "\n", "out8", "=", "self", ".", "relu", "(", "out8", ")", "\n", "out8", "=", "self", ".", "concat_quantize_activation_8", "(", "out8", ")", "\n", "out", "=", "torch", ".", "cat", "(", "(", "out1", ",", "out2", ",", "out3", ",", "out4", ",", "out5", ",", "out6", ",", "out7", ",", "out8", ")", ",", "dim", "=", "1", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "attention_out", "=", "self", ".", "downsample_and_squeeze", "(", "teacher_middle_outputs", "[", "3", "]", ")", "\n", "attention_out", "=", "self", ".", "fc4_1", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "relu", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "fc4_2", "(", "attention_out", ")", "\n", "attention_out", "=", "self", ".", "sigmoid", "(", "attention_out", ")", "\n", "attention_out", "=", "attention_out", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "attention_out", "=", "attention_out", ".", "expand_as", "(", "out", ")", "*", "out", "\n", "feature_adaptation_4", "=", "self", ".", "feature_adaptation_4_1", "(", "attention_out", ")", "\n", "feature_adaptation_4", "=", "self", ".", "feature_adaptation_4_2", "(", "feature_adaptation_4", ")", "\n", "feature_adaptation_4", "=", "self", ".", "feature_adaptation_4_3", "(", "feature_adaptation_4", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "                ", "feature_adaptation_4", "=", "feature_adaptation_4", "+", "out", "\n", "\n", "", "return", "[", "feature_adaptation_1", ",", "feature_adaptation_2", ",", "feature_adaptation_3", ",", "feature_adaptation_4", ",", "out", "]", "\n", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.ArchNetResNet.__init__": [[1261, 1304], ["torch.Module.__init__", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "torch.MaxPool2d", "torch.MaxPool2d", "torch.ReLU", "torch.ReLU", "resnet50.ArchNetResNet._make_layer", "resnet50.ArchNetResNet._make_layer", "resnet50.ArchNetResNet._make_layer_2_blocks", "resnet50.ArchNetResNet._make_layer_2_blocks", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "operators.dorefa.dorefa.DorefaLinear1d", "operators.dorefa.dorefa.DorefaQuantizeActivation", "resnet50.ArchNetResNet.modules", "len", "ValueError", "isinstance", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.ArchNetResNet._make_layer_2_blocks", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.ArchNetResNet._make_layer_2_blocks"], ["    ", "def", "__init__", "(", "self", ",", "block_normal", ",", "block_split_for_bottleneck2", ",", "block_split_for_bottleneck3_1", ",", "block_split_for_bottleneck3_2", ",", "block_split_for_bottleneck4_1", ",", "block_split_for_bottleneck4_2", ",", "layers", ",", "weight_dtype", ",", "feature_dtype", ",", "num_classes", "=", "1000", ",", "groups", "=", "1", ",", "width_per_group", "=", "64", ",", "replace_stride_with_dilation", "=", "None", ",", "norm_layer", "=", "None", ",", "squeeze_factor", "=", "8", ",", "distillation_idx", "=", "None", ",", "fa_res", "=", "True", ",", "is_train", "=", "True", ")", ":", "\n", "        ", "super", "(", "ArchNetResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "self", ".", "_norm_layer", "=", "norm_layer", "\n", "\n", "self", ".", "inplanes", "=", "64", "\n", "self", ".", "dilation", "=", "1", "\n", "if", "replace_stride_with_dilation", "is", "None", ":", "\n", "# each element in the tuple indicates if we should replace", "\n", "# the 2x2 stride with a dilated convolution instead", "\n", "            ", "replace_stride_with_dilation", "=", "[", "False", ",", "False", ",", "False", "]", "\n", "", "if", "len", "(", "replace_stride_with_dilation", ")", "!=", "3", ":", "\n", "            ", "raise", "ValueError", "(", "\"replace_stride_with_dilation should be None \"", "\n", "\"or a 3-element tuple, got {}\"", ".", "format", "(", "replace_stride_with_dilation", ")", ")", "\n", "", "self", ".", "groups", "=", "groups", "\n", "self", ".", "base_width", "=", "width_per_group", "\n", "self", ".", "w_dtype", "=", "weight_dtype", "\n", "self", ".", "f_dtype", "=", "feature_dtype", "\n", "self", ".", "conv1", "=", "DorefaConv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "quantize_activation_1", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "64", ")", "\n", "self", ".", "conv2", "=", "DorefaConv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "quantize_activation_2", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "64", ")", "\n", "self", ".", "conv3", "=", "DorefaConv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "weight_dtype", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "quantize_activation_3", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "feature_dtype", ",", "out_channels", "=", "64", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block_normal", ",", "64", ",", "layers", "[", "0", "]", ",", "squeeze_factor", "=", "squeeze_factor", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block_split_for_bottleneck2", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ",", "dilate", "=", "replace_stride_with_dilation", "[", "0", "]", ",", "squeeze_factor", "=", "squeeze_factor", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer_2_blocks", "(", "block_split_for_bottleneck3_1", ",", "block_split_for_bottleneck3_2", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ",", "dilate", "=", "replace_stride_with_dilation", "[", "1", "]", ",", "squeeze_factor", "=", "squeeze_factor", ",", "is_last_stage", "=", "False", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer_2_blocks", "(", "block_split_for_bottleneck4_1", ",", "block_split_for_bottleneck4_2", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ",", "dilate", "=", "replace_stride_with_dilation", "[", "2", "]", ",", "squeeze_factor", "=", "squeeze_factor", ",", "is_last_stage", "=", "True", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "fc", "=", "DorefaLinear1d", "(", "2048", ",", "1000", ",", "weight_dtype", "=", "DATA_TYPE_DICT", "[", "'uint8'", "]", ",", "bias", "=", "True", ",", "quant_weight_mode", "=", "'gaussian'", ")", "\n", "self", ".", "quantize_activation_fc", "=", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "DATA_TYPE_DICT", "[", "'int16'", "]", ",", "out_channels", "=", "1000", ",", "out_scale", "=", "32", ",", "after_bn", "=", "False", ")", "\n", "self", ".", "distillation_idx", "=", "distillation_idx", "\n", "self", ".", "is_train", "=", "is_train", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "# elif isinstance(m, (nn.BatchNorm2d, nn.GroupNorm)):", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.ArchNetResNet._make_layer": [[1308, 1329], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "operators.dorefa.dorefa.DorefaQuantizeActivation", "block"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ",", "dilate", "=", "False", ",", "squeeze_factor", "=", "8", ",", "fa_res", "=", "True", ",", "is_train", "=", "True", ")", ":", "\n", "        ", "norm_layer", "=", "self", ".", "_norm_layer", "\n", "downsample", "=", "None", "\n", "previous_dilation", "=", "self", ".", "dilation", "\n", "if", "dilate", ":", "\n", "            ", "self", ".", "dilation", "*=", "stride", "\n", "stride", "=", "1", "\n", "", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "DorefaConv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "self", ".", "w_dtype", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "self", ".", "f_dtype", ",", "out_channels", "=", "64", ")", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "weight_dtype", "=", "self", ".", "w_dtype", ",", "feature_dtype", "=", "self", ".", "f_dtype", ",", "stride", "=", "stride", ",", "downsample", "=", "downsample", ",", "groups", "=", "self", ".", "groups", ",", "base_width", "=", "self", ".", "base_width", ",", "dilation", "=", "previous_dilation", ",", "norm_layer", "=", "norm_layer", ",", "squeeze_factor", "=", "squeeze_factor", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "_", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "weight_dtype", "=", "self", ".", "w_dtype", ",", "feature_dtype", "=", "self", ".", "f_dtype", ",", "groups", "=", "self", ".", "groups", ",", "base_width", "=", "self", ".", "base_width", ",", "dilation", "=", "self", ".", "dilation", ",", "norm_layer", "=", "norm_layer", ",", "squeeze_factor", "=", "squeeze_factor", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.ArchNetResNet._make_layer_2_blocks": [[1330, 1354], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "block1", "layers.append", "torch.Sequential", "torch.Sequential", "resnet50.SplitDownsample", "block2", "operators.dorefa.dorefa.DorefaConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "operators.dorefa.dorefa.DorefaQuantizeActivation"], "methods", ["None"], ["", "def", "_make_layer_2_blocks", "(", "self", ",", "block1", ",", "block2", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ",", "dilate", "=", "False", ",", "squeeze_factor", "=", "8", ",", "is_last_stage", "=", "False", ",", "fa_res", "=", "True", ",", "is_train", "=", "True", ")", ":", "\n", "        ", "norm_layer", "=", "self", ".", "_norm_layer", "\n", "downsample", "=", "None", "\n", "previous_dilation", "=", "self", ".", "dilation", "\n", "if", "dilate", ":", "\n", "            ", "self", ".", "dilation", "*=", "stride", "\n", "stride", "=", "1", "\n", "", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block1", ".", "expansion", ":", "\n", "            ", "if", "not", "is_last_stage", ":", "\n", "                ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "DorefaConv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block1", ".", "expansion", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "weight_dtype", "=", "self", ".", "w_dtype", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block1", ".", "expansion", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "DorefaQuantizeActivation", "(", "feature_dtype", "=", "self", ".", "f_dtype", ",", "out_channels", "=", "64", ")", ")", "\n", "", "else", ":", "\n", "                ", "downsample", "=", "SplitDownsample", "(", "block1", ",", "planes", ",", "stride", ",", "weight_dtype", "=", "self", ".", "w_dtype", ",", "feature_dtype", "=", "self", ".", "f_dtype", ")", "\n", "\n", "", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block1", "(", "self", ".", "inplanes", ",", "planes", ",", "weight_dtype", "=", "self", ".", "w_dtype", ",", "feature_dtype", "=", "self", ".", "f_dtype", ",", "stride", "=", "stride", ",", "downsample", "=", "downsample", ",", "groups", "=", "self", ".", "groups", ",", "base_width", "=", "self", ".", "base_width", ",", "dilation", "=", "previous_dilation", ",", "norm_layer", "=", "norm_layer", ",", "squeeze_factor", "=", "squeeze_factor", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block1", ".", "expansion", "\n", "for", "_", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block2", "(", "self", ".", "inplanes", ",", "planes", ",", "weight_dtype", "=", "self", ".", "w_dtype", ",", "feature_dtype", "=", "self", ".", "f_dtype", ",", "groups", "=", "self", ".", "groups", ",", "base_width", "=", "self", ".", "base_width", ",", "dilation", "=", "self", ".", "dilation", ",", "norm_layer", "=", "norm_layer", ",", "squeeze_factor", "=", "squeeze_factor", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.ArchNetResNet._forward_impl": [[1355, 1400], ["resnet50.ArchNetResNet.conv1", "resnet50.ArchNetResNet.bn1", "resnet50.ArchNetResNet.relu", "resnet50.ArchNetResNet.quantize_activation_1", "resnet50.ArchNetResNet.conv2", "resnet50.ArchNetResNet.bn2", "resnet50.ArchNetResNet.relu", "resnet50.ArchNetResNet.quantize_activation_2", "resnet50.ArchNetResNet.conv3", "resnet50.ArchNetResNet.bn3", "resnet50.ArchNetResNet.relu", "resnet50.ArchNetResNet.quantize_activation_3", "resnet50.ArchNetResNet.maxpool", "resnet50.ArchNetResNet.avgpool", "resnet50.ArchNetResNet.fc", "resnet50.ArchNetResNet.quantize_activation_fc", "isinstance", "all_middle_outputs.append", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "all_middle_outputs.append", "block", "all_middle_outputs.extend", "block"], "methods", ["None"], ["", "def", "_forward_impl", "(", "self", ",", "x", ")", ":", "\n", "# See note [TorchScript super()]", "\n", "        ", "if", "self", ".", "is_train", ":", "\n", "            ", "all_middle_outputs", "=", "[", "]", "\n", "if", "isinstance", "(", "x", ",", "list", ")", ":", "\n", "                ", "teacher_middle_outputs", "=", "x", "[", "0", "]", "\n", "x", "=", "x", "[", "1", "]", "\n", "\n", "", "", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "quantize_activation_1", "(", "x", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "x", "=", "self", ".", "bn2", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "quantize_activation_2", "(", "x", ")", "\n", "x", "=", "self", ".", "conv3", "(", "x", ")", "\n", "x", "=", "self", ".", "bn3", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "quantize_activation_3", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "all_middle_outputs", ".", "append", "(", "x", ")", "\n", "\n", "", "block_count", "=", "0", "\n", "for", "layer", "in", "[", "self", ".", "layer1", ",", "self", ".", "layer2", ",", "self", ".", "layer3", ",", "self", ".", "layer4", "]", ":", "\n", "            ", "for", "block", "in", "layer", ":", "\n", "                ", "block_count", "+=", "1", "\n", "if", "self", ".", "is_train", ":", "\n", "                    ", "tmp_teacher_middle_outputs", "=", "teacher_middle_outputs", "[", "4", "*", "block_count", "-", "3", ":", "4", "*", "block_count", "+", "1", "]", "\n", "outs", "=", "block", "(", "[", "tmp_teacher_middle_outputs", ",", "x", "]", ")", "\n", "x", "=", "outs", "[", "-", "1", "]", "\n", "all_middle_outputs", ".", "extend", "(", "outs", "[", ":", "-", "1", "]", ")", "\n", "", "else", ":", "\n", "                    ", "x", "=", "block", "(", "x", ")", "\n", "\n", "", "", "", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "self", ".", "fc", "(", "torch", ".", "flatten", "(", "x", ",", "1", ")", ")", "\n", "x", "=", "self", ".", "quantize_activation_fc", "(", "x", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "all_middle_outputs", ".", "append", "(", "x", ")", "\n", "return", "all_middle_outputs", "[", ":", "self", ".", "distillation_idx", "+", "1", "]", "\n", "", "else", ":", "\n", "            ", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.ArchNetResNet.forward": [[1401, 1403], ["resnet50.ArchNetResNet._forward_impl"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.ResNet._forward_impl"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "_forward_impl", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.conv3x3": [[11, 15], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ",", "groups", "=", "1", ",", "dilation", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "dilation", ",", "groups", "=", "groups", ",", "bias", "=", "False", ",", "dilation", "=", "dilation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.conv1x1": [[17, 20], ["torch.Conv2d"], "function", ["None"], ["", "def", "conv1x1", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"1x1 convolution\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.resnet50.archnet_resnet50": [[1405, 1413], ["resnet50.ArchNetResNet"], "function", ["None"], ["", "", "def", "archnet_resnet50", "(", "weight_bit", ",", "feature_bit", ",", "squeeze_factor", "=", "24", ",", "distillation_idx", "=", "None", ",", "fa_res", "=", "True", ",", "is_train", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "bit_map_dict", "=", "{", "2", ":", "'uint2'", ",", "4", ":", "'uint4'", ",", "8", ":", "'uint8'", "}", "\n", "if", "weight_bit", "not", "in", "bit_map_dict", "or", "feature_bit", "not", "in", "bit_map_dict", ":", "\n", "        ", "assert", "False", ",", "'Not supported bit width'", "\n", "\n", "", "model", "=", "ArchNetResNet", "(", "block_normal", "=", "QuantizeBottleneckV1", ",", "block_split_for_bottleneck2", "=", "QuantizeBottleneckV2", ",", "block_split_for_bottleneck3_1", "=", "QuantizeBottleneckV3", ",", "block_split_for_bottleneck3_2", "=", "QuantizeBottleneckV4", ",", "block_split_for_bottleneck4_1", "=", "QuantizeBottleneckV5", ",", "block_split_for_bottleneck4_2", "=", "QuantizeBottleneckV6", ",", "layers", "=", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "weight_dtype", "=", "DATA_TYPE_DICT", "[", "bit_map_dict", "[", "weight_bit", "]", "]", ",", "feature_dtype", "=", "DATA_TYPE_DICT", "[", "bit_map_dict", "[", "feature_bit", "]", "]", ",", "squeeze_factor", "=", "squeeze_factor", ",", "distillation_idx", "=", "distillation_idx", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ",", "**", "kwargs", ")", "\n", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.transformer.ScaledDotProductAttention.__init__": [[25, 29], ["torch.Module.__init__", "torch.Dropout", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__"], ["def", "__init__", "(", "self", ",", "temperature", ",", "attn_dropout", "=", "0.1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "temperature", "=", "temperature", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "attn_dropout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.transformer.ScaledDotProductAttention.forward": [[30, 41], ["torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "transformer.ScaledDotProductAttention.dropout", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "k.transpose", "attn.masked_fill.masked_fill.masked_fill", "torch.softmax", "torch.softmax", "torch.softmax"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "q", ",", "k", ",", "v", ",", "mask", "=", "None", ")", ":", "\n", "\n", "        ", "attn", "=", "torch", ".", "matmul", "(", "q", "/", "self", ".", "temperature", ",", "k", ".", "transpose", "(", "2", ",", "3", ")", ")", "\n", "\n", "if", "mask", "is", "not", "None", ":", "\n", "            ", "attn", "=", "attn", ".", "masked_fill", "(", "mask", "==", "0", ",", "-", "1e9", ")", "\n", "\n", "", "attn", "=", "self", ".", "dropout", "(", "F", ".", "softmax", "(", "attn", ",", "dim", "=", "-", "1", ")", ")", "\n", "output", "=", "torch", ".", "matmul", "(", "attn", ",", "v", ")", "\n", "\n", "return", "output", ",", "attn", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.transformer.PositionalEncoding.__init__": [[45, 50], ["torch.Module.__init__", "transformer.PositionalEncoding.register_buffer", "transformer.PositionalEncoding._get_sinusoid_encoding_table"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.PositionalEncoding._get_sinusoid_encoding_table"], ["    ", "def", "__init__", "(", "self", ",", "d_hid", ",", "n_position", "=", "200", ")", ":", "\n", "        ", "super", "(", "PositionalEncoding", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# Not a parameter", "\n", "self", ".", "register_buffer", "(", "'pos_table'", ",", "self", ".", "_get_sinusoid_encoding_table", "(", "n_position", ",", "d_hid", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.transformer.PositionalEncoding._get_sinusoid_encoding_table": [[51, 63], ["numpy.array", "numpy.sin", "numpy.cos", "torch.FloatTensor().unsqueeze", "torch.FloatTensor().unsqueeze", "torch.FloatTensor().unsqueeze", "torch.FloatTensor().unsqueeze", "torch.FloatTensor().unsqueeze", "torch.FloatTensor().unsqueeze", "torch.FloatTensor().unsqueeze", "torch.FloatTensor().unsqueeze", "torch.FloatTensor().unsqueeze", "transformer.PositionalEncoding._get_sinusoid_encoding_table.get_position_angle_vec"], "methods", ["None"], ["", "def", "_get_sinusoid_encoding_table", "(", "self", ",", "n_position", ",", "d_hid", ")", ":", "\n", "        ", "''' Sinusoid position encoding table '''", "\n", "# TODO: make it with torch instead of numpy", "\n", "\n", "def", "get_position_angle_vec", "(", "position", ")", ":", "\n", "            ", "return", "[", "position", "/", "np", ".", "power", "(", "10000", ",", "2", "*", "(", "hid_j", "//", "2", ")", "/", "d_hid", ")", "for", "hid_j", "in", "range", "(", "d_hid", ")", "]", "\n", "\n", "", "sinusoid_table", "=", "np", ".", "array", "(", "[", "get_position_angle_vec", "(", "pos_i", ")", "for", "pos_i", "in", "range", "(", "n_position", ")", "]", ")", "\n", "sinusoid_table", "[", ":", ",", "0", ":", ":", "2", "]", "=", "np", ".", "sin", "(", "sinusoid_table", "[", ":", ",", "0", ":", ":", "2", "]", ")", "# dim 2i", "\n", "sinusoid_table", "[", ":", ",", "1", ":", ":", "2", "]", "=", "np", ".", "cos", "(", "sinusoid_table", "[", ":", ",", "1", ":", ":", "2", "]", ")", "# dim 2i+1", "\n", "\n", "return", "torch", ".", "FloatTensor", "(", "sinusoid_table", ")", ".", "unsqueeze", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.transformer.PositionalEncoding.forward": [[64, 66], ["transformer.PositionalEncoding.pos_table[].clone().detach", "transformer.PositionalEncoding.pos_table[].clone", "x.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", "+", "self", ".", "pos_table", "[", ":", ",", ":", "x", ".", "size", "(", "1", ")", "]", ".", "clone", "(", ")", ".", "detach", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.transformer.QuantizeMultiHeadAttention.__init__": [[71, 97], ["torch.Module.__init__", "operators.lsq.lsq.LinearLSQ", "operators.lsq.lsq.ActLSQ", "operators.lsq.lsq.LinearLSQ", "operators.lsq.lsq.ActLSQ", "operators.lsq.lsq.LinearLSQ", "operators.lsq.lsq.ActLSQ", "operators.lsq.lsq.LinearLSQ", "operators.lsq.lsq.ActLSQ", "operators.lsq.lsq.ActLSQ", "transformer.ScaledDotProductAttention", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__"], ["def", "__init__", "(", "self", ",", "n_head", ",", "d_model", ",", "d_k", ",", "d_v", ",", "weight_bit", ",", "feature_bit", ",", "dropout", "=", "0.1", ",", "squeeze_factor", "=", "16", ",", "fa_res", "=", "True", ",", "is_train", "=", "True", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "n_head", "=", "n_head", "\n", "self", ".", "d_k", "=", "d_k", "\n", "self", ".", "d_v", "=", "d_v", "\n", "\n", "self", ".", "w_qs", "=", "LinearLSQ", "(", "d_model", ",", "n_head", "*", "d_k", ",", "bias", "=", "False", ",", "nbits", "=", "weight_bit", ")", "\n", "self", ".", "q_act1", "=", "ActLSQ", "(", "nbits", "=", "feature_bit", ")", "\n", "self", ".", "w_ks", "=", "LinearLSQ", "(", "d_model", ",", "n_head", "*", "d_k", ",", "bias", "=", "False", ",", "nbits", "=", "weight_bit", ")", "\n", "self", ".", "q_act2", "=", "ActLSQ", "(", "nbits", "=", "feature_bit", ")", "\n", "self", ".", "w_vs", "=", "LinearLSQ", "(", "d_model", ",", "n_head", "*", "d_v", ",", "bias", "=", "False", ",", "nbits", "=", "weight_bit", ")", "\n", "self", ".", "q_act3", "=", "ActLSQ", "(", "nbits", "=", "feature_bit", ")", "\n", "self", ".", "fc", "=", "LinearLSQ", "(", "n_head", "*", "d_v", ",", "d_model", ",", "bias", "=", "False", ",", "nbits", "=", "weight_bit", ")", "\n", "self", ".", "q_act4", "=", "ActLSQ", "(", "nbits", "=", "feature_bit", ")", "\n", "self", ".", "q_act5", "=", "ActLSQ", "(", "nbits", "=", "feature_bit", ")", "\n", "\n", "self", ".", "attention", "=", "ScaledDotProductAttention", "(", "temperature", "=", "d_k", "**", "0.5", ")", "\n", "\n", "self", ".", "layer_norm", "=", "nn", ".", "BatchNorm2d", "(", "d_model", ",", "eps", "=", "1e-6", ")", "\n", "self", ".", "fa_res", "=", "fa_res", "\n", "self", ".", "is_train", "=", "is_train", "\n", "\n", "self", ".", "feature_adaptation_1", "=", "nn", ".", "Linear", "(", "d_model", ",", "d_model", "//", "squeeze_factor", ")", "\n", "self", ".", "feature_adaptation_2", "=", "nn", ".", "Linear", "(", "d_model", "//", "squeeze_factor", ",", "d_model", "//", "squeeze_factor", ")", "\n", "self", ".", "feature_adaptation_3", "=", "nn", ".", "Linear", "(", "d_model", "//", "squeeze_factor", ",", "d_model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.transformer.QuantizeMultiHeadAttention.forward": [[98, 139], ["transformer.QuantizeMultiHeadAttention.q_act1().view", "transformer.QuantizeMultiHeadAttention.q_act2().view", "transformer.QuantizeMultiHeadAttention.q_act3().view", "transformer.QuantizeMultiHeadAttention.attention", "q.transpose().squeeze.transpose().squeeze.transpose().contiguous().view", "transformer.QuantizeMultiHeadAttention.q_act4", "q.transpose().squeeze.transpose().squeeze.transpose().unsqueeze", "transformer.QuantizeMultiHeadAttention.layer_norm", "transformer.QuantizeMultiHeadAttention.q_act5", "q.transpose().squeeze.transpose().squeeze.transpose().squeeze", "q.transpose().squeeze.transpose().squeeze.size", "q.transpose().squeeze.transpose().squeeze.size", "transformer.QuantizeMultiHeadAttention.size", "transformer.QuantizeMultiHeadAttention.size", "q.transpose().squeeze.transpose().squeeze.transpose", "transformer.QuantizeMultiHeadAttention.transpose", "transformer.QuantizeMultiHeadAttention.transpose", "mask.unsqueeze.unsqueeze.unsqueeze", "transformer.QuantizeMultiHeadAttention.fc", "transformer.QuantizeMultiHeadAttention.feature_adaptation_1", "transformer.QuantizeMultiHeadAttention.feature_adaptation_2", "transformer.QuantizeMultiHeadAttention.feature_adaptation_3", "transformer.QuantizeMultiHeadAttention.q_act1", "transformer.QuantizeMultiHeadAttention.q_act2", "transformer.QuantizeMultiHeadAttention.q_act3", "q.transpose().squeeze.transpose().squeeze.transpose().contiguous", "q.transpose().squeeze.transpose().squeeze.transpose", "q.transpose().squeeze.transpose().squeeze.transpose", "transformer.QuantizeMultiHeadAttention.w_qs", "transformer.QuantizeMultiHeadAttention.w_ks", "transformer.QuantizeMultiHeadAttention.w_vs", "q.transpose().squeeze.transpose().squeeze.transpose"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "q", ",", "k", ",", "v", ",", "mask", "=", "None", ")", ":", "\n", "\n", "        ", "d_k", ",", "d_v", ",", "n_head", "=", "self", ".", "d_k", ",", "self", ".", "d_v", ",", "self", ".", "n_head", "\n", "sz_b", ",", "len_q", ",", "len_k", ",", "len_v", "=", "q", ".", "size", "(", "0", ")", ",", "q", ".", "size", "(", "1", ")", ",", "k", ".", "size", "(", "1", ")", ",", "v", ".", "size", "(", "1", ")", "\n", "\n", "residual", "=", "q", "\n", "\n", "# Pass through the pre-attention projection: b x lq x (n*dv)", "\n", "# Separate different heads: b x lq x n x dv", "\n", "q", "=", "self", ".", "q_act1", "(", "self", ".", "w_qs", "(", "q", ")", ")", ".", "view", "(", "sz_b", ",", "len_q", ",", "n_head", ",", "d_k", ")", "\n", "k", "=", "self", ".", "q_act2", "(", "self", ".", "w_ks", "(", "k", ")", ")", ".", "view", "(", "sz_b", ",", "len_k", ",", "n_head", ",", "d_k", ")", "\n", "v", "=", "self", ".", "q_act3", "(", "self", ".", "w_vs", "(", "v", ")", ")", ".", "view", "(", "sz_b", ",", "len_v", ",", "n_head", ",", "d_v", ")", "\n", "\n", "# Transpose for attention dot product: b x n x lq x dv", "\n", "q", ",", "k", ",", "v", "=", "q", ".", "transpose", "(", "1", ",", "2", ")", ",", "k", ".", "transpose", "(", "1", ",", "2", ")", ",", "v", ".", "transpose", "(", "1", ",", "2", ")", "\n", "\n", "if", "mask", "is", "not", "None", ":", "\n", "            ", "mask", "=", "mask", ".", "unsqueeze", "(", "1", ")", "# For head axis broadcasting.", "\n", "\n", "", "q", ",", "attn", "=", "self", ".", "attention", "(", "q", ",", "k", ",", "v", ",", "mask", "=", "mask", ")", "\n", "\n", "# Transpose to move the head dimension back: b x lqx n x dv", "\n", "# Combine the last two dimensions to concatenate all the heads together: b x lq x (n*dv)", "\n", "q", "=", "q", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", ".", "view", "(", "sz_b", ",", "len_q", ",", "-", "1", ")", "\n", "q", "=", "self", ".", "q_act4", "(", "self", ".", "fc", "(", "q", ")", ")", "\n", "\n", "q", "+=", "residual", "\n", "q", "=", "q", ".", "transpose", "(", "1", ",", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "q", "=", "self", ".", "layer_norm", "(", "q", ")", "\n", "q", "=", "self", ".", "q_act5", "(", "q", ")", "\n", "q", "=", "q", ".", "transpose", "(", "1", ",", "2", ")", ".", "squeeze", "(", "3", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_1", "(", "q", ")", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_2", "(", "feature_adaptation_1", ")", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_3", "(", "feature_adaptation_1", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_1", "=", "feature_adaptation_1", "+", "q", "\n", "\n", "", "return", "q", ",", "attn", ",", "feature_adaptation_1", "\n", "", "else", ":", "\n", "            ", "return", "q", ",", "attn", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.transformer.QuantizePositionwiseFeedForward.__init__": [[144, 158], ["torch.Module.__init__", "operators.lsq.lsq.LinearLSQ", "operators.lsq.lsq.LinearLSQ", "operators.lsq.lsq.ActLSQ", "operators.lsq.lsq.ActLSQ", "operators.lsq.lsq.ActLSQ", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__"], ["def", "__init__", "(", "self", ",", "d_in", ",", "d_hid", ",", "weight_bit", ",", "feature_bit", ",", "dropout", "=", "0.1", ",", "squeeze_factor", "=", "16", ",", "fa_res", "=", "True", ",", "is_train", "=", "True", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "w_1", "=", "LinearLSQ", "(", "d_in", ",", "d_hid", ",", "nbits", "=", "weight_bit", ")", "\n", "self", ".", "w_2", "=", "LinearLSQ", "(", "d_hid", ",", "d_in", ",", "nbits", "=", "weight_bit", ")", "\n", "self", ".", "q_act1", "=", "ActLSQ", "(", "nbits", "=", "feature_bit", ")", "\n", "self", ".", "q_act2", "=", "ActLSQ", "(", "nbits", "=", "feature_bit", ")", "\n", "self", ".", "q_act3", "=", "ActLSQ", "(", "nbits", "=", "feature_bit", ")", "\n", "self", ".", "layer_norm", "=", "nn", ".", "BatchNorm2d", "(", "d_in", ",", "eps", "=", "1e-6", ")", "\n", "self", ".", "fa_res", "=", "fa_res", "\n", "self", ".", "is_train", "=", "is_train", "\n", "\n", "self", ".", "feature_adaptation_1", "=", "nn", ".", "Linear", "(", "d_in", ",", "d_in", "//", "squeeze_factor", ")", "\n", "self", ".", "feature_adaptation_2", "=", "nn", ".", "Linear", "(", "d_in", "//", "squeeze_factor", ",", "d_in", "//", "squeeze_factor", ")", "\n", "self", ".", "feature_adaptation_3", "=", "nn", ".", "Linear", "(", "d_in", "//", "squeeze_factor", ",", "d_in", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.transformer.QuantizePositionwiseFeedForward.forward": [[159, 179], ["transformer.QuantizePositionwiseFeedForward.q_act2", "x.transpose().squeeze.transpose().squeeze.transpose().unsqueeze", "transformer.QuantizePositionwiseFeedForward.layer_norm", "transformer.QuantizePositionwiseFeedForward.q_act3", "x.transpose().squeeze.transpose().squeeze.transpose().squeeze", "transformer.QuantizePositionwiseFeedForward.w_2", "transformer.QuantizePositionwiseFeedForward.feature_adaptation_1", "transformer.QuantizePositionwiseFeedForward.feature_adaptation_2", "transformer.QuantizePositionwiseFeedForward.feature_adaptation_3", "transformer.QuantizePositionwiseFeedForward.q_act1", "x.transpose().squeeze.transpose().squeeze.transpose", "x.transpose().squeeze.transpose().squeeze.transpose", "transformer.QuantizePositionwiseFeedForward.w_1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "residual", "=", "x", "\n", "\n", "x", "=", "self", ".", "q_act2", "(", "self", ".", "w_2", "(", "self", ".", "q_act1", "(", "self", ".", "w_1", "(", "x", ")", ")", ")", ")", "\n", "x", "+=", "residual", "\n", "\n", "x", "=", "x", ".", "transpose", "(", "1", ",", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "x", "=", "self", ".", "layer_norm", "(", "x", ")", "\n", "x", "=", "self", ".", "q_act3", "(", "x", ")", "\n", "x", "=", "x", ".", "transpose", "(", "1", ",", "2", ")", ".", "squeeze", "(", "3", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_1", "(", "x", ")", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_2", "(", "feature_adaptation_1", ")", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_3", "(", "feature_adaptation_1", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_1", "=", "feature_adaptation_1", "+", "x", "\n", "", "return", "x", ",", "feature_adaptation_1", "\n", "", "else", ":", "\n", "            ", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.transformer.QuantizeEncoderLayer.__init__": [[184, 189], ["torch.Module.__init__", "transformer.QuantizeMultiHeadAttention", "transformer.QuantizePositionwiseFeedForward"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__"], ["def", "__init__", "(", "self", ",", "d_model", ",", "d_inner", ",", "n_head", ",", "d_k", ",", "d_v", ",", "weight_bit", ",", "feature_bit", ",", "dropout", "=", "0.1", ",", "squeeze_factor", "=", "16", ",", "fa_res", "=", "True", ",", "is_train", "=", "True", ")", ":", "\n", "        ", "super", "(", "QuantizeEncoderLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "slf_attn", "=", "QuantizeMultiHeadAttention", "(", "n_head", ",", "d_model", ",", "d_k", ",", "d_v", ",", "weight_bit", ",", "feature_bit", ",", "dropout", "=", "dropout", ",", "squeeze_factor", "=", "squeeze_factor", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ")", "\n", "self", ".", "pos_ffn", "=", "QuantizePositionwiseFeedForward", "(", "d_model", ",", "d_inner", ",", "weight_bit", ",", "feature_bit", ",", "dropout", "=", "dropout", ",", "squeeze_factor", "=", "squeeze_factor", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ")", "\n", "self", ".", "is_train", "=", "is_train", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.transformer.QuantizeEncoderLayer.forward": [[190, 199], ["transformer.QuantizeEncoderLayer.slf_attn", "transformer.QuantizeEncoderLayer.pos_ffn", "transformer.QuantizeEncoderLayer.slf_attn", "transformer.QuantizeEncoderLayer.pos_ffn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "enc_input", ",", "slf_attn_mask", "=", "None", ")", ":", "\n", "        ", "if", "self", ".", "is_train", ":", "\n", "            ", "enc_output", ",", "enc_slf_attn", ",", "feature_adaptation_1", "=", "self", ".", "slf_attn", "(", "enc_input", ",", "enc_input", ",", "enc_input", ",", "mask", "=", "slf_attn_mask", ")", "\n", "enc_output", ",", "feature_adaptation_2", "=", "self", ".", "pos_ffn", "(", "enc_output", ")", "\n", "return", "enc_output", ",", "enc_slf_attn", ",", "feature_adaptation_1", ",", "feature_adaptation_2", "\n", "", "else", ":", "\n", "            ", "enc_output", ",", "enc_slf_attn", "=", "self", ".", "slf_attn", "(", "enc_input", ",", "enc_input", ",", "enc_input", ",", "mask", "=", "slf_attn_mask", ")", "\n", "enc_output", "=", "self", ".", "pos_ffn", "(", "enc_output", ")", "\n", "return", "enc_output", ",", "enc_slf_attn", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.transformer.QuantizeDecoderLayer.__init__": [[204, 210], ["torch.Module.__init__", "transformer.QuantizeMultiHeadAttention", "transformer.QuantizeMultiHeadAttention", "transformer.QuantizePositionwiseFeedForward"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__"], ["def", "__init__", "(", "self", ",", "d_model", ",", "d_inner", ",", "n_head", ",", "d_k", ",", "d_v", ",", "weight_bit", ",", "feature_bit", ",", "dropout", "=", "0.1", ",", "squeeze_factor", "=", "16", ",", "fa_res", "=", "True", ",", "is_train", "=", "True", ")", ":", "\n", "        ", "super", "(", "QuantizeDecoderLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "slf_attn", "=", "QuantizeMultiHeadAttention", "(", "n_head", ",", "d_model", ",", "d_k", ",", "d_v", ",", "weight_bit", ",", "feature_bit", ",", "dropout", "=", "dropout", ",", "squeeze_factor", "=", "squeeze_factor", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ")", "\n", "self", ".", "enc_attn", "=", "QuantizeMultiHeadAttention", "(", "n_head", ",", "d_model", ",", "d_k", ",", "d_v", ",", "weight_bit", ",", "feature_bit", ",", "dropout", "=", "dropout", ",", "squeeze_factor", "=", "squeeze_factor", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ")", "\n", "self", ".", "pos_ffn", "=", "QuantizePositionwiseFeedForward", "(", "d_model", ",", "d_inner", ",", "weight_bit", ",", "feature_bit", ",", "dropout", "=", "dropout", ",", "squeeze_factor", "=", "squeeze_factor", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ")", "\n", "self", ".", "is_train", "=", "is_train", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.transformer.QuantizeDecoderLayer.forward": [[211, 222], ["transformer.QuantizeDecoderLayer.slf_attn", "transformer.QuantizeDecoderLayer.enc_attn", "transformer.QuantizeDecoderLayer.pos_ffn", "transformer.QuantizeDecoderLayer.slf_attn", "transformer.QuantizeDecoderLayer.enc_attn", "transformer.QuantizeDecoderLayer.pos_ffn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "dec_input", ",", "enc_output", ",", "slf_attn_mask", "=", "None", ",", "dec_enc_attn_mask", "=", "None", ")", ":", "\n", "        ", "if", "self", ".", "is_train", ":", "\n", "            ", "dec_output", ",", "dec_slf_attn", ",", "feature_adaptation_1", "=", "self", ".", "slf_attn", "(", "dec_input", ",", "dec_input", ",", "dec_input", ",", "mask", "=", "slf_attn_mask", ")", "\n", "dec_output", ",", "dec_enc_attn", ",", "feature_adaptation_2", "=", "self", ".", "enc_attn", "(", "dec_output", ",", "enc_output", ",", "enc_output", ",", "mask", "=", "dec_enc_attn_mask", ")", "\n", "dec_output", ",", "feature_adaptation_3", "=", "self", ".", "pos_ffn", "(", "dec_output", ")", "\n", "return", "dec_output", ",", "dec_slf_attn", ",", "dec_enc_attn", ",", "feature_adaptation_1", ",", "feature_adaptation_2", ",", "feature_adaptation_3", "\n", "", "else", ":", "\n", "            ", "dec_output", ",", "dec_slf_attn", "=", "self", ".", "slf_attn", "(", "dec_input", ",", "dec_input", ",", "dec_input", ",", "mask", "=", "slf_attn_mask", ")", "\n", "dec_output", ",", "dec_enc_attn", "=", "self", ".", "enc_attn", "(", "dec_output", ",", "enc_output", ",", "enc_output", ",", "mask", "=", "dec_enc_attn_mask", ")", "\n", "dec_output", "=", "self", ".", "pos_ffn", "(", "dec_output", ")", "\n", "return", "dec_output", ",", "dec_slf_attn", ",", "dec_enc_attn", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.transformer.QuantizeEncoder.__init__": [[227, 247], ["torch.Module.__init__", "operators.lsq.lsq.EmbeddingLSQ", "transformer.PositionalEncoding", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "operators.lsq.lsq.ActLSQ", "operators.lsq.lsq.ActLSQ", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "transformer.QuantizeEncoderLayer", "range"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__"], ["def", "__init__", "(", "self", ",", "n_src_vocab", ",", "d_word_vec", ",", "n_layers", ",", "n_head", ",", "d_k", ",", "d_v", ",", "d_model", ",", "d_inner", ",", "pad_idx", ",", "weight_bit", ",", "feature_bit", ",", "dropout", "=", "0.1", ",", "n_position", "=", "200", ",", "scale_emb", "=", "False", ",", "squeeze_factor", "=", "16", ",", "fa_res", "=", "True", ",", "is_train", "=", "True", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "src_word_emb", "=", "EmbeddingLSQ", "(", "n_src_vocab", ",", "d_word_vec", ",", "padding_idx", "=", "pad_idx", ",", "weight_bit", "=", "weight_bit", ")", "\n", "self", ".", "position_enc", "=", "PositionalEncoding", "(", "d_word_vec", ",", "n_position", "=", "n_position", ")", "\n", "self", ".", "layer_stack", "=", "nn", ".", "ModuleList", "(", "[", "\n", "QuantizeEncoderLayer", "(", "d_model", ",", "d_inner", ",", "n_head", ",", "d_k", ",", "d_v", ",", "weight_bit", ",", "feature_bit", ",", "dropout", "=", "dropout", ",", "squeeze_factor", "=", "squeeze_factor", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ")", "\n", "for", "_", "in", "range", "(", "n_layers", ")", "]", ")", "\n", "self", ".", "q_act1", "=", "ActLSQ", "(", "nbits", "=", "feature_bit", ")", "\n", "self", ".", "q_act2", "=", "ActLSQ", "(", "nbits", "=", "feature_bit", ")", "\n", "self", ".", "layer_norm", "=", "nn", ".", "BatchNorm2d", "(", "d_model", ",", "eps", "=", "1e-6", ")", "\n", "self", ".", "scale_emb", "=", "scale_emb", "\n", "self", ".", "d_model", "=", "d_model", "\n", "self", ".", "fa_res", "=", "fa_res", "\n", "self", ".", "is_train", "=", "is_train", "\n", "\n", "self", ".", "feature_adaptation1_1", "=", "nn", ".", "Linear", "(", "d_model", ",", "d_model", "//", "squeeze_factor", ")", "\n", "self", ".", "feature_adaptation1_2", "=", "nn", ".", "Linear", "(", "d_model", "//", "squeeze_factor", ",", "d_model", "//", "squeeze_factor", ")", "\n", "self", ".", "feature_adaptation1_3", "=", "nn", ".", "Linear", "(", "d_model", "//", "squeeze_factor", ",", "d_model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.transformer.QuantizeEncoder.forward": [[248, 286], ["transformer.QuantizeEncoder.src_word_emb", "transformer.QuantizeEncoder.q_act1", "transformer.QuantizeEncoder.position_enc", "enc_output.transpose().squeeze.transpose().squeeze.transpose().unsqueeze", "transformer.QuantizeEncoder.layer_norm", "transformer.QuantizeEncoder.q_act2", "enc_output.transpose().squeeze.transpose().squeeze.transpose().squeeze", "transformer.QuantizeEncoder.middle_outputs[].append", "transformer.QuantizeEncoder.feature_adaptation1_1", "transformer.QuantizeEncoder.feature_adaptation1_2", "transformer.QuantizeEncoder.feature_adaptation1_3", "transformer.QuantizeEncoder.middle_outputs[].append", "enc_output.transpose().squeeze.transpose().squeeze.transpose", "enc_output.transpose().squeeze.transpose().squeeze.transpose", "enc_layer", "transformer.QuantizeEncoder.middle_outputs[].extend", "transformer.QuantizeEncoder.middle_outputs[].append", "enc_layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "src_seq", ",", "src_mask", ",", "return_attns", "=", "False", ")", ":", "\n", "\n", "        ", "enc_slf_attn_list", "=", "[", "]", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "self", ".", "middle_outputs", "=", "{", "'encoder_outputs'", ":", "[", "]", ",", "'encoder_attention_outputs'", ":", "[", "]", ",", "'embedding_outputs'", ":", "[", "]", "}", "\n", "\n", "# -- Forward", "\n", "", "enc_output", "=", "self", ".", "src_word_emb", "(", "src_seq", ")", "\n", "enc_output", "=", "self", ".", "q_act1", "(", "enc_output", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "self", ".", "middle_outputs", "[", "'embedding_outputs'", "]", ".", "append", "(", "enc_output", ")", "\n", "", "if", "self", ".", "scale_emb", ":", "\n", "            ", "enc_output", "*=", "self", ".", "d_model", "**", "0.5", "\n", "", "enc_output", "=", "self", ".", "position_enc", "(", "enc_output", ")", "\n", "enc_output", "=", "enc_output", ".", "transpose", "(", "1", ",", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "enc_output", "=", "self", ".", "layer_norm", "(", "enc_output", ")", "\n", "enc_output", "=", "self", ".", "q_act2", "(", "enc_output", ")", "\n", "enc_output", "=", "enc_output", ".", "transpose", "(", "1", ",", "2", ")", ".", "squeeze", "(", "3", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "feature_adaptation_1", "=", "self", ".", "feature_adaptation1_1", "(", "enc_output", ")", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation1_2", "(", "feature_adaptation_1", ")", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation1_3", "(", "feature_adaptation_1", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_1", "=", "feature_adaptation_1", "+", "enc_output", "\n", "", "self", ".", "middle_outputs", "[", "'encoder_outputs'", "]", ".", "append", "(", "feature_adaptation_1", ")", "\n", "\n", "", "for", "enc_layer", "in", "self", ".", "layer_stack", ":", "\n", "            ", "if", "self", ".", "is_train", ":", "\n", "                ", "enc_output", ",", "enc_slf_attn", ",", "feature_adaptation_1", ",", "feature_adaptation_2", "=", "enc_layer", "(", "enc_output", ",", "slf_attn_mask", "=", "src_mask", ")", "\n", "self", ".", "middle_outputs", "[", "'encoder_outputs'", "]", ".", "extend", "(", "[", "feature_adaptation_1", ",", "feature_adaptation_2", "]", ")", "\n", "self", ".", "middle_outputs", "[", "'encoder_attention_outputs'", "]", ".", "append", "(", "enc_slf_attn", ")", "\n", "", "else", ":", "\n", "                ", "enc_output", ",", "enc_slf_attn", "=", "enc_layer", "(", "enc_output", ",", "slf_attn_mask", "=", "src_mask", ")", "\n", "", "enc_slf_attn_list", "+=", "[", "enc_slf_attn", "]", "if", "return_attns", "else", "[", "]", "\n", "\n", "", "if", "return_attns", ":", "\n", "            ", "return", "enc_output", ",", "enc_slf_attn_list", "\n", "", "return", "enc_output", ",", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.transformer.QuantizeDecoder.__init__": [[291, 310], ["torch.Module.__init__", "operators.lsq.lsq.EmbeddingLSQ", "transformer.PositionalEncoding", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "operators.lsq.lsq.ActLSQ", "operators.lsq.lsq.ActLSQ", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "transformer.QuantizeDecoderLayer", "range"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__"], ["def", "__init__", "(", "self", ",", "n_trg_vocab", ",", "d_word_vec", ",", "n_layers", ",", "n_head", ",", "d_k", ",", "d_v", ",", "d_model", ",", "d_inner", ",", "pad_idx", ",", "weight_bit", ",", "feature_bit", ",", "n_position", "=", "200", ",", "dropout", "=", "0.1", ",", "scale_emb", "=", "False", ",", "squeeze_factor", "=", "16", ",", "fa_res", "=", "True", ",", "is_train", "=", "True", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "trg_word_emb", "=", "EmbeddingLSQ", "(", "n_trg_vocab", ",", "d_word_vec", ",", "padding_idx", "=", "pad_idx", ",", "weight_bit", "=", "weight_bit", ")", "\n", "self", ".", "position_enc", "=", "PositionalEncoding", "(", "d_word_vec", ",", "n_position", "=", "n_position", ")", "\n", "self", ".", "layer_stack", "=", "nn", ".", "ModuleList", "(", "[", "\n", "QuantizeDecoderLayer", "(", "d_model", ",", "d_inner", ",", "n_head", ",", "d_k", ",", "d_v", ",", "weight_bit", ",", "feature_bit", ",", "dropout", "=", "dropout", ",", "squeeze_factor", "=", "squeeze_factor", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ")", "\n", "for", "_", "in", "range", "(", "n_layers", ")", "]", ")", "\n", "self", ".", "layer_norm", "=", "nn", ".", "BatchNorm2d", "(", "d_model", ",", "eps", "=", "1e-6", ")", "\n", "self", ".", "q_act1", "=", "ActLSQ", "(", "nbits", "=", "feature_bit", ")", "\n", "self", ".", "q_act2", "=", "ActLSQ", "(", "nbits", "=", "feature_bit", ")", "\n", "self", ".", "scale_emb", "=", "scale_emb", "\n", "self", ".", "d_model", "=", "d_model", "\n", "self", ".", "fa_res", "=", "fa_res", "\n", "self", ".", "is_train", "=", "is_train", "\n", "self", ".", "feature_adaptation1_1", "=", "nn", ".", "Linear", "(", "d_model", ",", "d_model", "//", "squeeze_factor", ")", "\n", "self", ".", "feature_adaptation1_2", "=", "nn", ".", "Linear", "(", "d_model", "//", "squeeze_factor", ",", "d_model", "//", "squeeze_factor", ")", "\n", "self", ".", "feature_adaptation1_3", "=", "nn", ".", "Linear", "(", "d_model", "//", "squeeze_factor", ",", "d_model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.transformer.QuantizeDecoder.forward": [[311, 351], ["transformer.QuantizeDecoder.trg_word_emb", "transformer.QuantizeDecoder.q_act1", "transformer.QuantizeDecoder.position_enc", "dec_output.transpose().squeeze.transpose().squeeze.transpose().unsqueeze", "transformer.QuantizeDecoder.layer_norm", "transformer.QuantizeDecoder.q_act2", "dec_output.transpose().squeeze.transpose().squeeze.transpose().squeeze", "transformer.QuantizeDecoder.middle_outputs[].append", "transformer.QuantizeDecoder.feature_adaptation1_1", "transformer.QuantizeDecoder.feature_adaptation1_2", "transformer.QuantizeDecoder.feature_adaptation1_3", "transformer.QuantizeDecoder.middle_outputs[].append", "dec_output.transpose().squeeze.transpose().squeeze.transpose", "dec_output.transpose().squeeze.transpose().squeeze.transpose", "dec_layer", "transformer.QuantizeDecoder.middle_outputs[].extend", "transformer.QuantizeDecoder.middle_outputs[].append", "transformer.QuantizeDecoder.middle_outputs[].append", "dec_layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "trg_seq", ",", "trg_mask", ",", "enc_output", ",", "src_mask", ",", "return_attns", "=", "False", ")", ":", "\n", "\n", "        ", "dec_slf_attn_list", ",", "dec_enc_attn_list", "=", "[", "]", ",", "[", "]", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "self", ".", "middle_outputs", "=", "{", "'decoder_outputs'", ":", "[", "]", ",", "'decoder_attention_outputs'", ":", "[", "]", ",", "'decoder_encoder_attention_outputs'", ":", "[", "]", ",", "'embedding_outputs'", ":", "[", "]", "}", "\n", "\n", "# -- Forward", "\n", "", "dec_output", "=", "self", ".", "trg_word_emb", "(", "trg_seq", ")", "\n", "dec_output", "=", "self", ".", "q_act1", "(", "dec_output", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "self", ".", "middle_outputs", "[", "'embedding_outputs'", "]", ".", "append", "(", "dec_output", ")", "\n", "", "if", "self", ".", "scale_emb", ":", "\n", "            ", "dec_output", "*=", "self", ".", "d_model", "**", "0.5", "\n", "", "dec_output", "=", "self", ".", "position_enc", "(", "dec_output", ")", "\n", "dec_output", "=", "dec_output", ".", "transpose", "(", "1", ",", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "dec_output", "=", "self", ".", "layer_norm", "(", "dec_output", ")", "\n", "dec_output", "=", "self", ".", "q_act2", "(", "dec_output", ")", "\n", "dec_output", "=", "dec_output", ".", "transpose", "(", "1", ",", "2", ")", ".", "squeeze", "(", "3", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "feature_adaptation_1", "=", "self", ".", "feature_adaptation1_1", "(", "dec_output", ")", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation1_2", "(", "feature_adaptation_1", ")", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation1_3", "(", "feature_adaptation_1", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_1", "=", "feature_adaptation_1", "+", "dec_output", "\n", "", "self", ".", "middle_outputs", "[", "'decoder_outputs'", "]", ".", "append", "(", "feature_adaptation_1", ")", "\n", "\n", "", "for", "dec_layer", "in", "self", ".", "layer_stack", ":", "\n", "            ", "if", "self", ".", "is_train", ":", "\n", "                ", "dec_output", ",", "dec_slf_attn", ",", "dec_enc_attn", ",", "feature_adaptation_1", ",", "feature_adaptation_2", ",", "feature_adaptation_3", "=", "dec_layer", "(", "dec_output", ",", "enc_output", ",", "slf_attn_mask", "=", "trg_mask", ",", "dec_enc_attn_mask", "=", "src_mask", ")", "\n", "self", ".", "middle_outputs", "[", "'decoder_outputs'", "]", ".", "extend", "(", "[", "feature_adaptation_1", ",", "feature_adaptation_2", ",", "feature_adaptation_3", "]", ")", "\n", "self", ".", "middle_outputs", "[", "'decoder_attention_outputs'", "]", ".", "append", "(", "dec_slf_attn", ")", "\n", "self", ".", "middle_outputs", "[", "'decoder_encoder_attention_outputs'", "]", ".", "append", "(", "dec_enc_attn", ")", "\n", "", "else", ":", "\n", "                ", "dec_output", ",", "dec_slf_attn", ",", "dec_enc_attn", "=", "dec_layer", "(", "dec_output", ",", "enc_output", ",", "slf_attn_mask", "=", "trg_mask", ",", "dec_enc_attn_mask", "=", "src_mask", ")", "\n", "", "dec_slf_attn_list", "+=", "[", "dec_slf_attn", "]", "if", "return_attns", "else", "[", "]", "\n", "dec_enc_attn_list", "+=", "[", "dec_enc_attn", "]", "if", "return_attns", "else", "[", "]", "\n", "\n", "", "if", "return_attns", ":", "\n", "            ", "return", "dec_output", ",", "dec_slf_attn_list", ",", "dec_enc_attn_list", "\n", "", "return", "dec_output", ",", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.transformer.ArchNetTransformer.__init__": [[356, 399], ["torch.Module.__init__", "transformer.QuantizeEncoder", "transformer.QuantizeDecoder", "operators.lsq.lsq.LinearLSQ", "transformer.ArchNetTransformer.parameters", "transformer.ArchNetTransformer.decoder.trg_word_emb.linear.weight.transpose", "p.dim", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__"], ["def", "__init__", "(", "\n", "self", ",", "n_src_vocab", ",", "n_trg_vocab", ",", "src_pad_idx", ",", "trg_pad_idx", ",", "weight_bit", ",", "feature_bit", ",", "\n", "d_word_vec", "=", "512", ",", "d_model", "=", "512", ",", "d_inner", "=", "2048", ",", "\n", "n_layers", "=", "6", ",", "n_head", "=", "8", ",", "d_k", "=", "64", ",", "d_v", "=", "64", ",", "dropout", "=", "0.1", ",", "n_position", "=", "200", ",", "\n", "trg_emb_prj_weight_sharing", "=", "True", ",", "emb_src_trg_weight_sharing", "=", "True", ",", "\n", "scale_emb_or_prj", "=", "'prj'", ",", "squeeze_factor", "=", "16", ",", "fa_res", "=", "True", ",", "is_train", "=", "True", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "src_pad_idx", ",", "self", ".", "trg_pad_idx", "=", "src_pad_idx", ",", "trg_pad_idx", "\n", "\n", "assert", "scale_emb_or_prj", "in", "[", "'emb'", ",", "'prj'", ",", "'none'", "]", "\n", "scale_emb", "=", "(", "scale_emb_or_prj", "==", "'emb'", ")", "if", "trg_emb_prj_weight_sharing", "else", "False", "\n", "self", ".", "scale_prj", "=", "(", "scale_emb_or_prj", "==", "'prj'", ")", "if", "trg_emb_prj_weight_sharing", "else", "False", "\n", "self", ".", "d_model", "=", "d_model", "\n", "self", ".", "is_train", "=", "is_train", "\n", "\n", "self", ".", "encoder", "=", "QuantizeEncoder", "(", "\n", "n_src_vocab", "=", "n_src_vocab", ",", "n_position", "=", "n_position", ",", "\n", "d_word_vec", "=", "d_word_vec", ",", "d_model", "=", "d_model", ",", "d_inner", "=", "d_inner", ",", "\n", "n_layers", "=", "n_layers", ",", "n_head", "=", "n_head", ",", "d_k", "=", "d_k", ",", "d_v", "=", "d_v", ",", "\n", "pad_idx", "=", "src_pad_idx", ",", "weight_bit", "=", "weight_bit", ",", "feature_bit", "=", "feature_bit", ",", "dropout", "=", "dropout", ",", "scale_emb", "=", "scale_emb", ",", "squeeze_factor", "=", "squeeze_factor", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ")", "\n", "\n", "self", ".", "decoder", "=", "QuantizeDecoder", "(", "\n", "n_trg_vocab", "=", "n_trg_vocab", ",", "n_position", "=", "n_position", ",", "\n", "d_word_vec", "=", "d_word_vec", ",", "d_model", "=", "d_model", ",", "d_inner", "=", "d_inner", ",", "\n", "n_layers", "=", "n_layers", ",", "n_head", "=", "n_head", ",", "d_k", "=", "d_k", ",", "d_v", "=", "d_v", ",", "\n", "pad_idx", "=", "trg_pad_idx", ",", "weight_bit", "=", "weight_bit", ",", "feature_bit", "=", "feature_bit", ",", "dropout", "=", "dropout", ",", "scale_emb", "=", "scale_emb", ",", "squeeze_factor", "=", "squeeze_factor", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ")", "\n", "\n", "self", ".", "trg_word_prj", "=", "LinearLSQ", "(", "d_model", ",", "n_trg_vocab", ",", "nbits", "=", "8", ",", "bias", "=", "False", ")", "\n", "\n", "for", "p", "in", "self", ".", "parameters", "(", ")", ":", "\n", "            ", "if", "p", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "nn", ".", "init", ".", "xavier_uniform_", "(", "p", ")", "\n", "\n", "", "", "assert", "d_model", "==", "d_word_vec", ",", "'To facilitate the residual connections, the dimensions of all module outputs shall be the same.'", "\n", "\n", "if", "trg_emb_prj_weight_sharing", ":", "\n", "# Share the weight between target word embedding & last dense layer", "\n", "            ", "self", ".", "trg_word_prj", ".", "weight", "=", "self", ".", "decoder", ".", "trg_word_emb", ".", "linear", ".", "weight", ".", "transpose", "(", "1", ",", "0", ")", "\n", "\n", "", "if", "emb_src_trg_weight_sharing", ":", "\n", "            ", "self", ".", "encoder", ".", "src_word_emb", ".", "linear", ".", "weight", "=", "self", ".", "decoder", ".", "trg_word_emb", ".", "linear", ".", "weight", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.transformer.ArchNetTransformer.forward": [[400, 411], ["transformer.get_pad_mask", "transformer.ArchNetTransformer.encoder", "transformer.ArchNetTransformer.decoder", "transformer.ArchNetTransformer.trg_word_prj", "transformer.ArchNetTransformer.view", "transformer.get_pad_mask", "transformer.get_subsequent_mask", "transformer.ArchNetTransformer.size"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.get_pad_mask", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.get_pad_mask", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.get_subsequent_mask"], ["", "", "def", "forward", "(", "self", ",", "onehot_src_seq", ",", "onehot_trg_seq", ",", "original_src_seq", ",", "original_trg_seq", ")", ":", "\n", "        ", "src_mask", "=", "get_pad_mask", "(", "original_src_seq", ",", "self", ".", "src_pad_idx", ")", "\n", "trg_mask", "=", "get_pad_mask", "(", "original_trg_seq", ",", "self", ".", "trg_pad_idx", ")", "&", "get_subsequent_mask", "(", "original_trg_seq", ")", "\n", "\n", "enc_output", ",", "*", "_", "=", "self", ".", "encoder", "(", "onehot_src_seq", ",", "src_mask", ")", "\n", "dec_output", ",", "*", "_", "=", "self", ".", "decoder", "(", "onehot_trg_seq", ",", "trg_mask", ",", "enc_output", ",", "src_mask", ")", "\n", "seq_logit", "=", "self", ".", "trg_word_prj", "(", "dec_output", ")", "\n", "if", "self", ".", "scale_prj", ":", "\n", "            ", "seq_logit", "*=", "self", ".", "d_model", "**", "-", "0.5", "\n", "\n", "", "return", "seq_logit", ".", "view", "(", "-", "1", ",", "seq_logit", ".", "size", "(", "2", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.transformer.get_pad_mask": [[10, 12], ["None"], "function", ["None"], ["def", "get_pad_mask", "(", "seq", ",", "pad_idx", ")", ":", "\n", "    ", "return", "(", "seq", "!=", "pad_idx", ")", ".", "unsqueeze", "(", "-", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.students.transformer.get_subsequent_mask": [[14, 20], ["seq.size", "torch.triu", "torch.triu", "torch.triu", "torch.ones", "torch.ones", "torch.ones"], "function", ["None"], ["", "def", "get_subsequent_mask", "(", "seq", ")", ":", "\n", "    ", "''' For masking out the subsequent info. '''", "\n", "sz_b", ",", "len_s", "=", "seq", ".", "size", "(", ")", "\n", "subsequent_mask", "=", "(", "1", "-", "torch", ".", "triu", "(", "\n", "torch", ".", "ones", "(", "(", "1", ",", "len_s", ",", "len_s", ")", ",", "device", "=", "seq", ".", "device", ")", ",", "diagonal", "=", "1", ")", ")", ".", "bool", "(", ")", "\n", "return", "subsequent_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.BasicBlock.__init__": [[22, 39], ["torch.Module.__init__", "resnet.conv3x3", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet.conv3x3", "norm_layer", "ValueError", "NotImplementedError"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "if", "groups", "!=", "1", "or", "base_width", "!=", "64", ":", "\n", "            ", "raise", "ValueError", "(", "'BasicBlock only supports groups=1 and base_width=64'", ")", "\n", "", "if", "dilation", ">", "1", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"Dilation > 1 not supported in BasicBlock\"", ")", "\n", "# Both self.conv1 and self.downsample layers downsample the input when stride != 1", "\n", "", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "norm_layer", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.BasicBlock.forward": [[40, 61], ["resnet.BasicBlock.conv1", "resnet.BasicBlock.bn1", "resnet.BasicBlock.relu", "middle_outputs.append", "resnet.BasicBlock.conv2", "resnet.BasicBlock.bn2", "middle_outputs.append", "resnet.BasicBlock.relu", "middle_outputs.append", "resnet.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "middle_outputs", "=", "[", "]", "\n", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "middle_outputs", ".", "append", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "middle_outputs", ".", "append", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "middle_outputs", ".", "append", "(", "out", ")", "\n", "\n", "return", "middle_outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.Bottleneck.__init__": [[66, 82], ["torch.Module.__init__", "resnet.conv1x1", "norm_layer", "resnet.conv3x3", "norm_layer", "resnet.conv1x1", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "int"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "width", "=", "int", "(", "planes", "*", "(", "base_width", "/", "64.", ")", ")", "*", "groups", "\n", "# Both self.conv2 and self.downsample layers downsample the input when stride != 1", "\n", "self", ".", "conv1", "=", "conv1x1", "(", "inplanes", ",", "width", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "width", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "width", ",", "width", ",", "stride", ",", "groups", ",", "dilation", ")", "\n", "self", ".", "bn2", "=", "norm_layer", "(", "width", ")", "\n", "self", ".", "conv3", "=", "conv1x1", "(", "width", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "bn3", "=", "norm_layer", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.Bottleneck.forward": [[83, 109], ["resnet.Bottleneck.conv1", "resnet.Bottleneck.bn1", "resnet.Bottleneck.relu", "middle_outputs.append", "resnet.Bottleneck.conv2", "resnet.Bottleneck.bn2", "resnet.Bottleneck.relu", "middle_outputs.append", "resnet.Bottleneck.conv3", "resnet.Bottleneck.bn3", "middle_outputs.append", "resnet.Bottleneck.relu", "middle_outputs.append", "resnet.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "middle_outputs", "=", "[", "]", "\n", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "middle_outputs", ".", "append", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "middle_outputs", ".", "append", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "middle_outputs", ".", "append", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "middle_outputs", ".", "append", "(", "out", ")", "\n", "\n", "return", "middle_outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.ResNet.__init__": [[113, 163], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "resnet.ResNet.modules", "len", "ValueError", "isinstance", "resnet.ResNet.modules", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "num_classes", "=", "1000", ",", "zero_init_residual", "=", "False", ",", "\n", "groups", "=", "1", ",", "width_per_group", "=", "64", ",", "replace_stride_with_dilation", "=", "None", ",", "\n", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "self", ".", "_norm_layer", "=", "norm_layer", "\n", "\n", "self", ".", "inplanes", "=", "64", "\n", "self", ".", "dilation", "=", "1", "\n", "if", "replace_stride_with_dilation", "is", "None", ":", "\n", "# each element in the tuple indicates if we should replace", "\n", "# the 2x2 stride with a dilated convolution instead", "\n", "            ", "replace_stride_with_dilation", "=", "[", "False", ",", "False", ",", "False", "]", "\n", "", "if", "len", "(", "replace_stride_with_dilation", ")", "!=", "3", ":", "\n", "            ", "raise", "ValueError", "(", "\"replace_stride_with_dilation should be None \"", "\n", "\"or a 3-element tuple, got {}\"", ".", "format", "(", "replace_stride_with_dilation", ")", ")", "\n", "", "self", ".", "groups", "=", "groups", "\n", "self", ".", "base_width", "=", "width_per_group", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "self", ".", "inplanes", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "self", ".", "inplanes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ",", "\n", "dilate", "=", "replace_stride_with_dilation", "[", "0", "]", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ",", "\n", "dilate", "=", "replace_stride_with_dilation", "[", "1", "]", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ",", "\n", "dilate", "=", "replace_stride_with_dilation", "[", "2", "]", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "num_classes", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "(", "nn", ".", "BatchNorm2d", ",", "nn", ".", "GroupNorm", ")", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n", "# Zero-initialize the last BN in each residual branch,", "\n", "# so that the residual branch starts with zeros, and each residual block behaves like an identity.", "\n", "# This improves the model by 0.2~0.3% according to https://arxiv.org/abs/1706.02677", "\n", "", "", "if", "zero_init_residual", ":", "\n", "            ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "m", ",", "Bottleneck", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn3", ".", "weight", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "BasicBlock", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn2", ".", "weight", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.ResNet._make_layer": [[164, 187], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "resnet.conv1x1", "norm_layer", "block"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1"], ["", "", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ",", "dilate", "=", "False", ")", ":", "\n", "        ", "norm_layer", "=", "self", ".", "_norm_layer", "\n", "downsample", "=", "None", "\n", "previous_dilation", "=", "self", ".", "dilation", "\n", "if", "dilate", ":", "\n", "            ", "self", ".", "dilation", "*=", "stride", "\n", "stride", "=", "1", "\n", "", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "conv1x1", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "stride", ")", ",", "\n", "norm_layer", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ",", "self", ".", "groups", ",", "\n", "self", ".", "base_width", ",", "previous_dilation", ",", "norm_layer", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "_", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "groups", "=", "self", ".", "groups", ",", "\n", "base_width", "=", "self", ".", "base_width", ",", "dilation", "=", "self", ".", "dilation", ",", "\n", "norm_layer", "=", "norm_layer", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.ResNet._forward_impl": [[188, 210], ["resnet.ResNet.conv1", "resnet.ResNet.bn1", "resnet.ResNet.relu", "resnet.ResNet.maxpool", "all_middle_outputs.append", "resnet.ResNet.avgpool", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "resnet.ResNet.fc", "all_middle_outputs.append", "block", "all_middle_outputs.extend"], "methods", ["None"], ["", "def", "_forward_impl", "(", "self", ",", "x", ")", ":", "\n", "# See note [TorchScript super()]", "\n", "        ", "all_middle_outputs", "=", "[", "]", "\n", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "all_middle_outputs", ".", "append", "(", "x", ")", "\n", "\n", "for", "layer", "in", "[", "self", ".", "layer1", ",", "self", ".", "layer2", ",", "self", ".", "layer3", ",", "self", ".", "layer4", "]", ":", "\n", "            ", "for", "block", "in", "layer", ":", "\n", "                ", "outs", "=", "block", "(", "x", ")", "\n", "x", "=", "outs", "[", "-", "1", "]", "\n", "all_middle_outputs", ".", "extend", "(", "outs", ")", "\n", "\n", "", "", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "torch", ".", "flatten", "(", "x", ",", "1", ")", "\n", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "all_middle_outputs", ".", "append", "(", "x", ")", "\n", "\n", "return", "all_middle_outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.ResNet.forward": [[211, 213], ["resnet.ResNet._forward_impl"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.ResNet._forward_impl"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "_forward_impl", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv1x1": [[8, 11], ["torch.Conv2d"], "function", ["None"], ["def", "conv1x1", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"1x1 convolution\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.conv3x3": [[13, 17], ["torch.Conv2d"], "function", ["None"], ["", "def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ",", "groups", "=", "1", ",", "dilation", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "dilation", ",", "groups", "=", "groups", ",", "bias", "=", "False", ",", "dilation", "=", "dilation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.resnet18": [[215, 219], ["resnet.ResNet"], "function", ["None"], ["", "", "def", "resnet18", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.resnet34": [[221, 225], ["resnet.ResNet"], "function", ["None"], ["", "def", "resnet34", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.resnet.resnet50": [[227, 231], ["resnet.ResNet"], "function", ["None"], ["", "def", "resnet50", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ")", "\n", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.ScaledDotProductAttention.__init__": [[24, 28], ["torch.Module.__init__", "torch.Dropout", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__"], ["\n", "def", "__init__", "(", "self", ",", "temperature", ",", "attn_dropout", "=", "0.1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "temperature", "=", "temperature", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "attn_dropout", ")", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.ScaledDotProductAttention.forward": [[29, 40], ["torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "transformer.ScaledDotProductAttention.dropout", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "k.transpose", "attn.masked_fill.masked_fill.masked_fill", "torch.softmax", "torch.softmax", "torch.softmax"], "methods", ["None"], ["\n", "", "def", "forward", "(", "self", ",", "q", ",", "k", ",", "v", ",", "mask", "=", "None", ")", ":", "\n", "\n", "        ", "attn", "=", "torch", ".", "matmul", "(", "q", "/", "self", ".", "temperature", ",", "k", ".", "transpose", "(", "2", ",", "3", ")", ")", "\n", "\n", "if", "mask", "is", "not", "None", ":", "\n", "            ", "attn", "=", "attn", ".", "masked_fill", "(", "mask", "==", "0", ",", "-", "1e9", ")", "\n", "\n", "", "attn", "=", "self", ".", "dropout", "(", "F", ".", "softmax", "(", "attn", ",", "dim", "=", "-", "1", ")", ")", "\n", "output", "=", "torch", ".", "matmul", "(", "attn", ",", "v", ")", "\n", "\n", "return", "output", ",", "attn", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.PositionalEncoding.__init__": [[44, 49], ["torch.Module.__init__", "transformer.PositionalEncoding.register_buffer", "transformer.PositionalEncoding._get_sinusoid_encoding_table"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.PositionalEncoding._get_sinusoid_encoding_table"], ["\n", "    ", "def", "__init__", "(", "self", ",", "d_hid", ",", "n_position", "=", "200", ")", ":", "\n", "        ", "super", "(", "PositionalEncoding", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# Not a parameter", "\n", "self", ".", "register_buffer", "(", "'pos_table'", ",", "self", ".", "_get_sinusoid_encoding_table", "(", "n_position", ",", "d_hid", ")", ")", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.PositionalEncoding._get_sinusoid_encoding_table": [[50, 62], ["numpy.array", "numpy.sin", "numpy.cos", "torch.FloatTensor().unsqueeze", "torch.FloatTensor().unsqueeze", "torch.FloatTensor().unsqueeze", "torch.FloatTensor().unsqueeze", "torch.FloatTensor().unsqueeze", "torch.FloatTensor().unsqueeze", "torch.FloatTensor().unsqueeze", "torch.FloatTensor().unsqueeze", "torch.FloatTensor().unsqueeze", "transformer.PositionalEncoding._get_sinusoid_encoding_table.get_position_angle_vec"], "methods", ["None"], ["\n", "", "def", "_get_sinusoid_encoding_table", "(", "self", ",", "n_position", ",", "d_hid", ")", ":", "\n", "        ", "''' Sinusoid position encoding table '''", "\n", "# TODO: make it with torch instead of numpy", "\n", "\n", "def", "get_position_angle_vec", "(", "position", ")", ":", "\n", "            ", "return", "[", "position", "/", "np", ".", "power", "(", "10000", ",", "2", "*", "(", "hid_j", "//", "2", ")", "/", "d_hid", ")", "for", "hid_j", "in", "range", "(", "d_hid", ")", "]", "\n", "\n", "", "sinusoid_table", "=", "np", ".", "array", "(", "[", "get_position_angle_vec", "(", "pos_i", ")", "for", "pos_i", "in", "range", "(", "n_position", ")", "]", ")", "\n", "sinusoid_table", "[", ":", ",", "0", ":", ":", "2", "]", "=", "np", ".", "sin", "(", "sinusoid_table", "[", ":", ",", "0", ":", ":", "2", "]", ")", "# dim 2i", "\n", "sinusoid_table", "[", ":", ",", "1", ":", ":", "2", "]", "=", "np", ".", "cos", "(", "sinusoid_table", "[", ":", ",", "1", ":", ":", "2", "]", ")", "# dim 2i+1", "\n", "\n", "return", "torch", ".", "FloatTensor", "(", "sinusoid_table", ")", ".", "unsqueeze", "(", "0", ")", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.PositionalEncoding.forward": [[63, 65], ["transformer.PositionalEncoding.pos_table[].clone().detach", "transformer.PositionalEncoding.pos_table[].clone", "x.size"], "methods", ["None"], ["\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", "+", "self", ".", "pos_table", "[", ":", ",", ":", "x", ".", "size", "(", "1", ")", "]", ".", "clone", "(", ")", ".", "detach", "(", ")", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.MultiHeadAttention.__init__": [[70, 86], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "transformer.ScaledDotProductAttention", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__"], ["\n", "def", "__init__", "(", "self", ",", "n_head", ",", "d_model", ",", "d_k", ",", "d_v", ",", "weight_bit", ",", "feature_bit", ",", "dropout", "=", "0.1", ",", "squeeze_factor", "=", "16", ",", "fa_res", "=", "True", ",", "is_train", "=", "True", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "n_head", "=", "n_head", "\n", "self", ".", "d_k", "=", "d_k", "\n", "self", ".", "d_v", "=", "d_v", "\n", "\n", "self", ".", "w_qs", "=", "LinearLSQ", "(", "d_model", ",", "n_head", "*", "d_k", ",", "bias", "=", "False", ",", "nbits", "=", "weight_bit", ")", "\n", "self", ".", "q_act1", "=", "ActLSQ", "(", "nbits", "=", "feature_bit", ")", "\n", "self", ".", "w_ks", "=", "LinearLSQ", "(", "d_model", ",", "n_head", "*", "d_k", ",", "bias", "=", "False", ",", "nbits", "=", "weight_bit", ")", "\n", "self", ".", "q_act2", "=", "ActLSQ", "(", "nbits", "=", "feature_bit", ")", "\n", "self", ".", "w_vs", "=", "LinearLSQ", "(", "d_model", ",", "n_head", "*", "d_v", ",", "bias", "=", "False", ",", "nbits", "=", "weight_bit", ")", "\n", "self", ".", "q_act3", "=", "ActLSQ", "(", "nbits", "=", "feature_bit", ")", "\n", "self", ".", "fc", "=", "LinearLSQ", "(", "n_head", "*", "d_v", ",", "d_model", ",", "bias", "=", "False", ",", "nbits", "=", "weight_bit", ")", "\n", "self", ".", "q_act4", "=", "ActLSQ", "(", "nbits", "=", "feature_bit", ")", "\n", "self", ".", "q_act5", "=", "ActLSQ", "(", "nbits", "=", "feature_bit", ")", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.MultiHeadAttention.forward": [[87, 118], ["transformer.MultiHeadAttention.w_qs().view", "transformer.MultiHeadAttention.w_ks().view", "transformer.MultiHeadAttention.w_vs().view", "transformer.MultiHeadAttention.attention", "transformer.MultiHeadAttention.transpose().contiguous().view", "transformer.MultiHeadAttention.dropout", "transformer.MultiHeadAttention.layer_norm", "transformer.MultiHeadAttention.size", "transformer.MultiHeadAttention.size", "transformer.MultiHeadAttention.size", "transformer.MultiHeadAttention.size", "transformer.MultiHeadAttention.transpose", "transformer.MultiHeadAttention.transpose", "transformer.MultiHeadAttention.transpose", "mask.unsqueeze.unsqueeze.unsqueeze", "transformer.MultiHeadAttention.fc", "transformer.MultiHeadAttention.w_qs", "transformer.MultiHeadAttention.w_ks", "transformer.MultiHeadAttention.w_vs", "transformer.MultiHeadAttention.transpose().contiguous", "transformer.MultiHeadAttention.transpose"], "methods", ["None"], ["\n", "self", ".", "attention", "=", "ScaledDotProductAttention", "(", "temperature", "=", "d_k", "**", "0.5", ")", "\n", "\n", "self", ".", "layer_norm", "=", "nn", ".", "BatchNorm2d", "(", "d_model", ",", "eps", "=", "1e-6", ")", "\n", "self", ".", "fa_res", "=", "fa_res", "\n", "self", ".", "is_train", "=", "is_train", "\n", "\n", "self", ".", "feature_adaptation_1", "=", "nn", ".", "Linear", "(", "d_model", ",", "d_model", "//", "squeeze_factor", ")", "\n", "self", ".", "feature_adaptation_2", "=", "nn", ".", "Linear", "(", "d_model", "//", "squeeze_factor", ",", "d_model", "//", "squeeze_factor", ")", "\n", "self", ".", "feature_adaptation_3", "=", "nn", ".", "Linear", "(", "d_model", "//", "squeeze_factor", ",", "d_model", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "q", ",", "k", ",", "v", ",", "mask", "=", "None", ")", ":", "\n", "\n", "        ", "d_k", ",", "d_v", ",", "n_head", "=", "self", ".", "d_k", ",", "self", ".", "d_v", ",", "self", ".", "n_head", "\n", "sz_b", ",", "len_q", ",", "len_k", ",", "len_v", "=", "q", ".", "size", "(", "0", ")", ",", "q", ".", "size", "(", "1", ")", ",", "k", ".", "size", "(", "1", ")", ",", "v", ".", "size", "(", "1", ")", "\n", "\n", "residual", "=", "q", "\n", "\n", "# Pass through the pre-attention projection: b x lq x (n*dv)", "\n", "# Separate different heads: b x lq x n x dv", "\n", "q", "=", "self", ".", "q_act1", "(", "self", ".", "w_qs", "(", "q", ")", ")", ".", "view", "(", "sz_b", ",", "len_q", ",", "n_head", ",", "d_k", ")", "\n", "k", "=", "self", ".", "q_act2", "(", "self", ".", "w_ks", "(", "k", ")", ")", ".", "view", "(", "sz_b", ",", "len_k", ",", "n_head", ",", "d_k", ")", "\n", "v", "=", "self", ".", "q_act3", "(", "self", ".", "w_vs", "(", "v", ")", ")", ".", "view", "(", "sz_b", ",", "len_v", ",", "n_head", ",", "d_v", ")", "\n", "\n", "# Transpose for attention dot product: b x n x lq x dv", "\n", "q", ",", "k", ",", "v", "=", "q", ".", "transpose", "(", "1", ",", "2", ")", ",", "k", ".", "transpose", "(", "1", ",", "2", ")", ",", "v", ".", "transpose", "(", "1", ",", "2", ")", "\n", "\n", "if", "mask", "is", "not", "None", ":", "\n", "            ", "mask", "=", "mask", ".", "unsqueeze", "(", "1", ")", "# For head axis broadcasting.", "\n", "\n", "", "q", ",", "attn", "=", "self", ".", "attention", "(", "q", ",", "k", ",", "v", ",", "mask", "=", "mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.PositionwiseFeedForward.__init__": [[123, 129], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.Dropout", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__"], ["\n", "q", "+=", "residual", "\n", "q", "=", "q", ".", "transpose", "(", "1", ",", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "q", "=", "self", ".", "layer_norm", "(", "q", ")", "\n", "q", "=", "self", ".", "q_act5", "(", "q", ")", "\n", "q", "=", "q", ".", "transpose", "(", "1", ",", "2", ")", ".", "squeeze", "(", "3", ")", "\n", "if", "self", ".", "is_train", ":", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.PositionwiseFeedForward.forward": [[130, 142], ["transformer.PositionwiseFeedForward.w_2", "transformer.PositionwiseFeedForward.dropout", "transformer.PositionwiseFeedForward.layer_norm", "torch.relu", "torch.relu", "torch.relu", "transformer.PositionwiseFeedForward.w_1"], "methods", ["None"], ["            ", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_1", "(", "q", ")", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_2", "(", "feature_adaptation_1", ")", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_3", "(", "feature_adaptation_1", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_1", "=", "feature_adaptation_1", "+", "q", "\n", "\n", "", "return", "q", ",", "attn", ",", "feature_adaptation_1", "\n", "", "else", ":", "\n", "            ", "return", "q", ",", "attn", "\n", "\n", "\n", "", "", "", "class", "QuantizePositionwiseFeedForward", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "''' A two-feed-forward-layer module '''", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.EncoderLayer.__init__": [[147, 151], ["torch.Module.__init__", "transformer.MultiHeadAttention", "transformer.PositionwiseFeedForward"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__"], ["self", ".", "w_2", "=", "LinearLSQ", "(", "d_hid", ",", "d_in", ",", "nbits", "=", "weight_bit", ")", "\n", "self", ".", "q_act1", "=", "ActLSQ", "(", "nbits", "=", "feature_bit", ")", "\n", "self", ".", "q_act2", "=", "ActLSQ", "(", "nbits", "=", "feature_bit", ")", "\n", "self", ".", "q_act3", "=", "ActLSQ", "(", "nbits", "=", "feature_bit", ")", "\n", "self", ".", "layer_norm", "=", "nn", ".", "BatchNorm2d", "(", "d_in", ",", "eps", "=", "1e-6", ")", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.EncoderLayer.forward": [[152, 157], ["transformer.EncoderLayer.slf_attn", "transformer.EncoderLayer.pos_ffn"], "methods", ["None"], ["self", ".", "fa_res", "=", "fa_res", "\n", "self", ".", "is_train", "=", "is_train", "\n", "\n", "self", ".", "feature_adaptation_1", "=", "nn", ".", "Linear", "(", "d_in", ",", "d_in", "//", "squeeze_factor", ")", "\n", "self", ".", "feature_adaptation_2", "=", "nn", ".", "Linear", "(", "d_in", "//", "squeeze_factor", ",", "d_in", "//", "squeeze_factor", ")", "\n", "self", ".", "feature_adaptation_3", "=", "nn", ".", "Linear", "(", "d_in", "//", "squeeze_factor", ",", "d_in", ")", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.DecoderLayer.__init__": [[162, 167], ["torch.Module.__init__", "transformer.MultiHeadAttention", "transformer.MultiHeadAttention", "transformer.PositionwiseFeedForward"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__"], ["\n", "x", "=", "self", ".", "q_act2", "(", "self", ".", "w_2", "(", "self", ".", "q_act1", "(", "self", ".", "w_1", "(", "x", ")", ")", ")", ")", "\n", "x", "+=", "residual", "\n", "\n", "x", "=", "x", ".", "transpose", "(", "1", ",", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "x", "=", "self", ".", "layer_norm", "(", "x", ")", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.DecoderLayer.forward": [[168, 177], ["transformer.DecoderLayer.slf_attn", "transformer.DecoderLayer.enc_attn", "transformer.DecoderLayer.pos_ffn"], "methods", ["None"], ["x", "=", "self", ".", "q_act3", "(", "x", ")", "\n", "x", "=", "x", ".", "transpose", "(", "1", ",", "2", ")", ".", "squeeze", "(", "3", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_1", "(", "x", ")", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_2", "(", "feature_adaptation_1", ")", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation_3", "(", "feature_adaptation_1", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_1", "=", "feature_adaptation_1", "+", "x", "\n", "", "return", "x", ",", "feature_adaptation_1", "\n", "", "else", ":", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Encoder.__init__": [[182, 197], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "torch.Embedding", "transformer.PositionalEncoding", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "transformer.EncoderLayer", "range"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__"], ["    ", "''' Compose with two layers '''", "\n", "\n", "def", "__init__", "(", "self", ",", "d_model", ",", "d_inner", ",", "n_head", ",", "d_k", ",", "d_v", ",", "weight_bit", ",", "feature_bit", ",", "dropout", "=", "0.1", ",", "squeeze_factor", "=", "16", ",", "fa_res", "=", "True", ",", "is_train", "=", "True", ")", ":", "\n", "        ", "super", "(", "QuantizeEncoderLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "slf_attn", "=", "QuantizeMultiHeadAttention", "(", "n_head", ",", "d_model", ",", "d_k", ",", "d_v", ",", "weight_bit", ",", "feature_bit", ",", "dropout", "=", "dropout", ",", "squeeze_factor", "=", "squeeze_factor", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ")", "\n", "self", ".", "pos_ffn", "=", "QuantizePositionwiseFeedForward", "(", "d_model", ",", "d_inner", ",", "weight_bit", ",", "feature_bit", ",", "dropout", "=", "dropout", ",", "squeeze_factor", "=", "squeeze_factor", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ")", "\n", "self", ".", "is_train", "=", "is_train", "\n", "\n", "", "def", "forward", "(", "self", ",", "enc_input", ",", "slf_attn_mask", "=", "None", ")", ":", "\n", "        ", "if", "self", ".", "is_train", ":", "\n", "            ", "enc_output", ",", "enc_slf_attn", ",", "feature_adaptation_1", "=", "self", ".", "slf_attn", "(", "enc_input", ",", "enc_input", ",", "enc_input", ",", "mask", "=", "slf_attn_mask", ")", "\n", "enc_output", ",", "feature_adaptation_2", "=", "self", ".", "pos_ffn", "(", "enc_output", ")", "\n", "return", "enc_output", ",", "enc_slf_attn", ",", "feature_adaptation_1", ",", "feature_adaptation_2", "\n", "", "else", ":", "\n", "            ", "enc_output", ",", "enc_slf_attn", "=", "self", ".", "slf_attn", "(", "enc_input", ",", "enc_input", ",", "enc_input", ",", "mask", "=", "slf_attn_mask", ")", "\n", "enc_output", "=", "self", ".", "pos_ffn", "(", "enc_output", ")", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Encoder.forward": [[198, 223], ["transformer.Encoder.src_word_emb", "transformer.Encoder.middle_outputs[].append", "transformer.Encoder.dropout", "transformer.Encoder.middle_outputs[].append", "transformer.Encoder.layer_norm", "transformer.Encoder.middle_outputs[].append", "transformer.Encoder.position_enc", "enc_layer", "transformer.Encoder.middle_outputs[].extend", "transformer.Encoder.middle_outputs[].extend", "transformer.Encoder.middle_outputs[].append"], "methods", ["None"], ["return", "enc_output", ",", "enc_slf_attn", "\n", "\n", "\n", "", "", "", "class", "QuantizeDecoderLayer", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "''' Compose with three layers '''", "\n", "\n", "def", "__init__", "(", "self", ",", "d_model", ",", "d_inner", ",", "n_head", ",", "d_k", ",", "d_v", ",", "weight_bit", ",", "feature_bit", ",", "dropout", "=", "0.1", ",", "squeeze_factor", "=", "16", ",", "fa_res", "=", "True", ",", "is_train", "=", "True", ")", ":", "\n", "        ", "super", "(", "QuantizeDecoderLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "slf_attn", "=", "QuantizeMultiHeadAttention", "(", "n_head", ",", "d_model", ",", "d_k", ",", "d_v", ",", "weight_bit", ",", "feature_bit", ",", "dropout", "=", "dropout", ",", "squeeze_factor", "=", "squeeze_factor", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ")", "\n", "self", ".", "enc_attn", "=", "QuantizeMultiHeadAttention", "(", "n_head", ",", "d_model", ",", "d_k", ",", "d_v", ",", "weight_bit", ",", "feature_bit", ",", "dropout", "=", "dropout", ",", "squeeze_factor", "=", "squeeze_factor", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ")", "\n", "self", ".", "pos_ffn", "=", "QuantizePositionwiseFeedForward", "(", "d_model", ",", "d_inner", ",", "weight_bit", ",", "feature_bit", ",", "dropout", "=", "dropout", ",", "squeeze_factor", "=", "squeeze_factor", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ")", "\n", "self", ".", "is_train", "=", "is_train", "\n", "\n", "", "def", "forward", "(", "self", ",", "dec_input", ",", "enc_output", ",", "slf_attn_mask", "=", "None", ",", "dec_enc_attn_mask", "=", "None", ")", ":", "\n", "        ", "if", "self", ".", "is_train", ":", "\n", "            ", "dec_output", ",", "dec_slf_attn", ",", "feature_adaptation_1", "=", "self", ".", "slf_attn", "(", "dec_input", ",", "dec_input", ",", "dec_input", ",", "mask", "=", "slf_attn_mask", ")", "\n", "dec_output", ",", "dec_enc_attn", ",", "feature_adaptation_2", "=", "self", ".", "enc_attn", "(", "dec_output", ",", "enc_output", ",", "enc_output", ",", "mask", "=", "dec_enc_attn_mask", ")", "\n", "dec_output", ",", "feature_adaptation_3", "=", "self", ".", "pos_ffn", "(", "dec_output", ")", "\n", "return", "dec_output", ",", "dec_slf_attn", ",", "dec_enc_attn", ",", "feature_adaptation_1", ",", "feature_adaptation_2", ",", "feature_adaptation_3", "\n", "", "else", ":", "\n", "            ", "dec_output", ",", "dec_slf_attn", "=", "self", ".", "slf_attn", "(", "dec_input", ",", "dec_input", ",", "dec_input", ",", "mask", "=", "slf_attn_mask", ")", "\n", "dec_output", ",", "dec_enc_attn", "=", "self", ".", "enc_attn", "(", "dec_output", ",", "enc_output", ",", "enc_output", ",", "mask", "=", "dec_enc_attn_mask", ")", "\n", "dec_output", "=", "self", ".", "pos_ffn", "(", "dec_output", ")", "\n", "return", "dec_output", ",", "dec_slf_attn", ",", "dec_enc_attn", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Decoder.__init__": [[228, 243], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "torch.Embedding", "transformer.PositionalEncoding", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "transformer.DecoderLayer", "range"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__"], ["\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "src_word_emb", "=", "EmbeddingLSQ", "(", "n_src_vocab", ",", "d_word_vec", ",", "padding_idx", "=", "pad_idx", ",", "weight_bit", "=", "weight_bit", ")", "\n", "self", ".", "position_enc", "=", "PositionalEncoding", "(", "d_word_vec", ",", "n_position", "=", "n_position", ")", "\n", "self", ".", "layer_stack", "=", "nn", ".", "ModuleList", "(", "[", "\n", "QuantizeEncoderLayer", "(", "d_model", ",", "d_inner", ",", "n_head", ",", "d_k", ",", "d_v", ",", "weight_bit", ",", "feature_bit", ",", "dropout", "=", "dropout", ",", "squeeze_factor", "=", "squeeze_factor", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ")", "\n", "for", "_", "in", "range", "(", "n_layers", ")", "]", ")", "\n", "self", ".", "q_act1", "=", "ActLSQ", "(", "nbits", "=", "feature_bit", ")", "\n", "self", ".", "q_act2", "=", "ActLSQ", "(", "nbits", "=", "feature_bit", ")", "\n", "self", ".", "layer_norm", "=", "nn", ".", "BatchNorm2d", "(", "d_model", ",", "eps", "=", "1e-6", ")", "\n", "self", ".", "scale_emb", "=", "scale_emb", "\n", "self", ".", "d_model", "=", "d_model", "\n", "self", ".", "fa_res", "=", "fa_res", "\n", "self", ".", "is_train", "=", "is_train", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Decoder.forward": [[244, 272], ["transformer.Decoder.trg_word_emb", "transformer.Decoder.middle_outputs[].append", "transformer.Decoder.dropout", "transformer.Decoder.middle_outputs[].append", "transformer.Decoder.layer_norm", "transformer.Decoder.middle_outputs[].append", "transformer.Decoder.position_enc", "dec_layer", "transformer.Decoder.middle_outputs[].extend", "transformer.Decoder.middle_outputs[].extend", "transformer.Decoder.middle_outputs[].append", "transformer.Decoder.middle_outputs[].append"], "methods", ["None"], ["self", ".", "feature_adaptation1_1", "=", "nn", ".", "Linear", "(", "d_model", ",", "d_model", "//", "squeeze_factor", ")", "\n", "self", ".", "feature_adaptation1_2", "=", "nn", ".", "Linear", "(", "d_model", "//", "squeeze_factor", ",", "d_model", "//", "squeeze_factor", ")", "\n", "self", ".", "feature_adaptation1_3", "=", "nn", ".", "Linear", "(", "d_model", "//", "squeeze_factor", ",", "d_model", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "src_seq", ",", "src_mask", ",", "return_attns", "=", "False", ")", ":", "\n", "\n", "        ", "enc_slf_attn_list", "=", "[", "]", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "self", ".", "middle_outputs", "=", "{", "'encoder_outputs'", ":", "[", "]", ",", "'encoder_attention_outputs'", ":", "[", "]", ",", "'embedding_outputs'", ":", "[", "]", "}", "\n", "\n", "# -- Forward", "\n", "", "enc_output", "=", "self", ".", "src_word_emb", "(", "src_seq", ")", "\n", "enc_output", "=", "self", ".", "q_act1", "(", "enc_output", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "self", ".", "middle_outputs", "[", "'embedding_outputs'", "]", ".", "append", "(", "enc_output", ")", "\n", "", "if", "self", ".", "scale_emb", ":", "\n", "            ", "enc_output", "*=", "self", ".", "d_model", "**", "0.5", "\n", "", "enc_output", "=", "self", ".", "position_enc", "(", "enc_output", ")", "\n", "enc_output", "=", "enc_output", ".", "transpose", "(", "1", ",", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "enc_output", "=", "self", ".", "layer_norm", "(", "enc_output", ")", "\n", "enc_output", "=", "self", ".", "q_act2", "(", "enc_output", ")", "\n", "enc_output", "=", "enc_output", ".", "transpose", "(", "1", ",", "2", ")", ".", "squeeze", "(", "3", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "feature_adaptation_1", "=", "self", ".", "feature_adaptation1_1", "(", "enc_output", ")", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation1_2", "(", "feature_adaptation_1", ")", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation1_3", "(", "feature_adaptation_1", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_1", "=", "feature_adaptation_1", "+", "enc_output", "\n", "", "self", ".", "middle_outputs", "[", "'encoder_outputs'", "]", ".", "append", "(", "feature_adaptation_1", ")", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__": [[277, 329], ["torch.Module.__init__", "transformer.Encoder", "transformer.Decoder", "torch.Linear", "torch.Linear", "torch.Linear", "transformer.Transformer.parameters", "p.dim", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.__init__"], ["self", ".", "middle_outputs", "[", "'encoder_outputs'", "]", ".", "extend", "(", "[", "feature_adaptation_1", ",", "feature_adaptation_2", "]", ")", "\n", "self", ".", "middle_outputs", "[", "'encoder_attention_outputs'", "]", ".", "append", "(", "enc_slf_attn", ")", "\n", "", "else", ":", "\n", "                ", "enc_output", ",", "enc_slf_attn", "=", "enc_layer", "(", "enc_output", ",", "slf_attn_mask", "=", "src_mask", ")", "\n", "", "enc_slf_attn_list", "+=", "[", "enc_slf_attn", "]", "if", "return_attns", "else", "[", "]", "\n", "\n", "", "if", "return_attns", ":", "\n", "            ", "return", "enc_output", ",", "enc_slf_attn_list", "\n", "", "return", "enc_output", ",", "\n", "\n", "\n", "", "", "class", "QuantizeDecoder", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "''' A decoder model with self attention mechanism. '''", "\n", "\n", "def", "__init__", "(", "self", ",", "n_trg_vocab", ",", "d_word_vec", ",", "n_layers", ",", "n_head", ",", "d_k", ",", "d_v", ",", "d_model", ",", "d_inner", ",", "pad_idx", ",", "weight_bit", ",", "feature_bit", ",", "n_position", "=", "200", ",", "dropout", "=", "0.1", ",", "scale_emb", "=", "False", ",", "squeeze_factor", "=", "16", ",", "fa_res", "=", "True", ",", "is_train", "=", "True", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "trg_word_emb", "=", "EmbeddingLSQ", "(", "n_trg_vocab", ",", "d_word_vec", ",", "padding_idx", "=", "pad_idx", ",", "weight_bit", "=", "weight_bit", ")", "\n", "self", ".", "position_enc", "=", "PositionalEncoding", "(", "d_word_vec", ",", "n_position", "=", "n_position", ")", "\n", "self", ".", "layer_stack", "=", "nn", ".", "ModuleList", "(", "[", "\n", "QuantizeDecoderLayer", "(", "d_model", ",", "d_inner", ",", "n_head", ",", "d_k", ",", "d_v", ",", "weight_bit", ",", "feature_bit", ",", "dropout", "=", "dropout", ",", "squeeze_factor", "=", "squeeze_factor", ",", "fa_res", "=", "fa_res", ",", "is_train", "=", "is_train", ")", "\n", "for", "_", "in", "range", "(", "n_layers", ")", "]", ")", "\n", "self", ".", "layer_norm", "=", "nn", ".", "BatchNorm2d", "(", "d_model", ",", "eps", "=", "1e-6", ")", "\n", "self", ".", "q_act1", "=", "ActLSQ", "(", "nbits", "=", "feature_bit", ")", "\n", "self", ".", "q_act2", "=", "ActLSQ", "(", "nbits", "=", "feature_bit", ")", "\n", "self", ".", "scale_emb", "=", "scale_emb", "\n", "self", ".", "d_model", "=", "d_model", "\n", "self", ".", "fa_res", "=", "fa_res", "\n", "self", ".", "is_train", "=", "is_train", "\n", "self", ".", "feature_adaptation1_1", "=", "nn", ".", "Linear", "(", "d_model", ",", "d_model", "//", "squeeze_factor", ")", "\n", "self", ".", "feature_adaptation1_2", "=", "nn", ".", "Linear", "(", "d_model", "//", "squeeze_factor", ",", "d_model", "//", "squeeze_factor", ")", "\n", "self", ".", "feature_adaptation1_3", "=", "nn", ".", "Linear", "(", "d_model", "//", "squeeze_factor", ",", "d_model", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "trg_seq", ",", "trg_mask", ",", "enc_output", ",", "src_mask", ",", "return_attns", "=", "False", ")", ":", "\n", "\n", "        ", "dec_slf_attn_list", ",", "dec_enc_attn_list", "=", "[", "]", ",", "[", "]", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "self", ".", "middle_outputs", "=", "{", "'decoder_outputs'", ":", "[", "]", ",", "'decoder_attention_outputs'", ":", "[", "]", ",", "'decoder_encoder_attention_outputs'", ":", "[", "]", ",", "'embedding_outputs'", ":", "[", "]", "}", "\n", "\n", "# -- Forward", "\n", "", "dec_output", "=", "self", ".", "trg_word_emb", "(", "trg_seq", ")", "\n", "dec_output", "=", "self", ".", "q_act1", "(", "dec_output", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "self", ".", "middle_outputs", "[", "'embedding_outputs'", "]", ".", "append", "(", "dec_output", ")", "\n", "", "if", "self", ".", "scale_emb", ":", "\n", "            ", "dec_output", "*=", "self", ".", "d_model", "**", "0.5", "\n", "", "dec_output", "=", "self", ".", "position_enc", "(", "dec_output", ")", "\n", "dec_output", "=", "dec_output", ".", "transpose", "(", "1", ",", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "dec_output", "=", "self", ".", "layer_norm", "(", "dec_output", ")", "\n", "dec_output", "=", "self", ".", "q_act2", "(", "dec_output", ")", "\n", "dec_output", "=", "dec_output", ".", "transpose", "(", "1", ",", "2", ")", ".", "squeeze", "(", "3", ")", "\n", "if", "self", ".", "is_train", ":", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.Transformer.forward": [[330, 345], ["transformer.get_pad_mask", "transformer.Transformer.encoder", "transformer.Transformer.middle_outputs.append", "transformer.Transformer.decoder", "transformer.Transformer.middle_outputs.append", "transformer.Transformer.trg_word_prj", "transformer.Transformer.view", "transformer.get_pad_mask", "transformer.get_subsequent_mask", "transformer.Transformer.size"], "methods", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.get_pad_mask", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.get_pad_mask", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.get_subsequent_mask"], ["            ", "feature_adaptation_1", "=", "self", ".", "feature_adaptation1_1", "(", "dec_output", ")", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation1_2", "(", "feature_adaptation_1", ")", "\n", "feature_adaptation_1", "=", "self", ".", "feature_adaptation1_3", "(", "feature_adaptation_1", ")", "\n", "if", "self", ".", "fa_res", ":", "\n", "                ", "feature_adaptation_1", "=", "feature_adaptation_1", "+", "dec_output", "\n", "", "self", ".", "middle_outputs", "[", "'decoder_outputs'", "]", ".", "append", "(", "feature_adaptation_1", ")", "\n", "\n", "", "for", "dec_layer", "in", "self", ".", "layer_stack", ":", "\n", "            ", "if", "self", ".", "is_train", ":", "\n", "                ", "dec_output", ",", "dec_slf_attn", ",", "dec_enc_attn", ",", "feature_adaptation_1", ",", "feature_adaptation_2", ",", "feature_adaptation_3", "=", "dec_layer", "(", "dec_output", ",", "enc_output", ",", "slf_attn_mask", "=", "trg_mask", ",", "dec_enc_attn_mask", "=", "src_mask", ")", "\n", "self", ".", "middle_outputs", "[", "'decoder_outputs'", "]", ".", "extend", "(", "[", "feature_adaptation_1", ",", "feature_adaptation_2", ",", "feature_adaptation_3", "]", ")", "\n", "self", ".", "middle_outputs", "[", "'decoder_attention_outputs'", "]", ".", "append", "(", "dec_slf_attn", ")", "\n", "self", ".", "middle_outputs", "[", "'decoder_encoder_attention_outputs'", "]", ".", "append", "(", "dec_enc_attn", ")", "\n", "", "else", ":", "\n", "                ", "dec_output", ",", "dec_slf_attn", ",", "dec_enc_attn", "=", "dec_layer", "(", "dec_output", ",", "enc_output", ",", "slf_attn_mask", "=", "trg_mask", ",", "dec_enc_attn_mask", "=", "src_mask", ")", "\n", "", "dec_slf_attn_list", "+=", "[", "dec_slf_attn", "]", "if", "return_attns", "else", "[", "]", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.get_pad_mask": [[9, 11], ["None"], "function", ["None"], ["\n", "def", "get_pad_mask", "(", "seq", ",", "pad_idx", ")", ":", "\n", "    ", "return", "(", "seq", "!=", "pad_idx", ")", ".", "unsqueeze", "(", "-", "2", ")", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.teachers.transformer.get_subsequent_mask": [[13, 19], ["seq.size", "torch.triu", "torch.triu", "torch.triu", "torch.ones", "torch.ones", "torch.ones"], "function", ["None"], ["\n", "", "def", "get_subsequent_mask", "(", "seq", ")", ":", "\n", "    ", "''' For masking out the subsequent info. '''", "\n", "sz_b", ",", "len_s", "=", "seq", ".", "size", "(", ")", "\n", "subsequent_mask", "=", "(", "1", "-", "torch", ".", "triu", "(", "\n", "torch", ".", "ones", "(", "(", "1", ",", "len_s", ",", "len_s", ")", ",", "device", "=", "seq", ".", "device", ")", ",", "diagonal", "=", "1", ")", ")", ".", "bool", "(", ")", "\n", "return", "subsequent_mask", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.prepare_dataloaders": [[31, 54], ["dill.load", "len", "len", "torchtext.data.Dataset", "torchtext.data.Dataset", "torchtext.data.BucketIterator", "torchtext.data.BucketIterator", "open"], "function", ["None"], ["def", "prepare_dataloaders", "(", "args", ",", "device", ")", ":", "\n", "    ", "batch_size", "=", "args", ".", "batch_size", "\n", "data", "=", "pickle", ".", "load", "(", "open", "(", "args", ".", "data_pkl", ",", "'rb'", ")", ")", "\n", "\n", "args", ".", "max_token_seq_len", "=", "data", "[", "'settings'", "]", ".", "max_len", "\n", "args", ".", "src_pad_idx", "=", "data", "[", "'vocab'", "]", "[", "'src'", "]", ".", "vocab", ".", "stoi", "[", "PAD_WORD", "]", "# PAD_WORD='<blank>', src_pad_idx=1", "\n", "args", ".", "trg_pad_idx", "=", "data", "[", "'vocab'", "]", "[", "'trg'", "]", ".", "vocab", ".", "stoi", "[", "PAD_WORD", "]", "# 1", "\n", "\n", "args", ".", "src_vocab_size", "=", "len", "(", "data", "[", "'vocab'", "]", "[", "'src'", "]", ".", "vocab", ")", "# 9521", "\n", "args", ".", "trg_vocab_size", "=", "len", "(", "data", "[", "'vocab'", "]", "[", "'trg'", "]", ".", "vocab", ")", "# 9521", "\n", "\n", "if", "args", ".", "embs_share_weight", ":", "\n", "        ", "assert", "data", "[", "'vocab'", "]", "[", "'src'", "]", ".", "vocab", ".", "stoi", "==", "data", "[", "'vocab'", "]", "[", "'trg'", "]", ".", "vocab", ".", "stoi", ",", "'To sharing word embedding the src/trg word2idx table shall be the same.'", "\n", "\n", "", "fields", "=", "{", "'src'", ":", "data", "[", "'vocab'", "]", "[", "'src'", "]", ",", "'trg'", ":", "data", "[", "'vocab'", "]", "[", "'trg'", "]", "}", "\n", "\n", "train", "=", "Dataset", "(", "examples", "=", "data", "[", "'train'", "]", ",", "fields", "=", "fields", ")", "\n", "val", "=", "Dataset", "(", "examples", "=", "data", "[", "'valid'", "]", ",", "fields", "=", "fields", ")", "\n", "\n", "train_iterator", "=", "BucketIterator", "(", "train", ",", "batch_size", "=", "batch_size", ",", "device", "=", "device", ",", "train", "=", "True", ")", "\n", "val_iterator", "=", "BucketIterator", "(", "val", ",", "batch_size", "=", "batch_size", ",", "device", "=", "device", ")", "\n", "\n", "return", "train_iterator", ",", "val_iterator", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.cal_loss": [[56, 75], ["gold.contiguous().view.contiguous().view", "pred.size", "torch.zeros_like().scatter", "torch.zeros_like().scatter", "torch.zeros_like().scatter", "torch.zeros_like().scatter", "torch.zeros_like().scatter", "torch.log_softmax", "gold.contiguous().view.ne", "F.cross_entropy.masked_select().sum", "torch.cross_entropy", "gold.contiguous().view.contiguous", "gold.contiguous().view.view", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "F.cross_entropy.masked_select"], "function", ["None"], ["", "def", "cal_loss", "(", "pred", ",", "gold", ",", "trg_pad_idx", ",", "smoothing", "=", "False", ")", ":", "\n", "    ", "''' Calculate cross entropy loss, apply label smoothing if needed. '''", "\n", "\n", "gold", "=", "gold", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "\n", "if", "smoothing", ":", "\n", "        ", "eps", "=", "0.1", "\n", "n_class", "=", "pred", ".", "size", "(", "1", ")", "\n", "\n", "one_hot", "=", "torch", ".", "zeros_like", "(", "pred", ")", ".", "scatter", "(", "1", ",", "gold", ".", "view", "(", "-", "1", ",", "1", ")", ",", "1", ")", "\n", "one_hot", "=", "one_hot", "*", "(", "1", "-", "eps", ")", "+", "(", "1", "-", "one_hot", ")", "*", "eps", "/", "(", "n_class", "-", "1", ")", "\n", "log_prb", "=", "F", ".", "log_softmax", "(", "pred", ",", "dim", "=", "1", ")", "\n", "\n", "non_pad_mask", "=", "gold", ".", "ne", "(", "trg_pad_idx", ")", "\n", "loss", "=", "-", "(", "one_hot", "*", "log_prb", ")", ".", "sum", "(", "dim", "=", "1", ")", "\n", "loss", "=", "loss", ".", "masked_select", "(", "non_pad_mask", ")", ".", "sum", "(", ")", "# average later", "\n", "", "else", ":", "\n", "        ", "loss", "=", "F", ".", "cross_entropy", "(", "pred", ",", "gold", ",", "ignore_index", "=", "trg_pad_idx", ",", "reduction", "=", "'sum'", ")", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.cal_performance": [[77, 87], ["train_archnet_transformer.cal_loss", "gold.contiguous().view.contiguous().view", "gold.contiguous().view.ne", "pred.eq().masked_select().sum().item", "gold.ne.sum().item", "pred.max", "gold.contiguous().view.contiguous", "pred.eq().masked_select().sum", "gold.ne.sum", "pred.eq().masked_select", "pred.eq"], "function", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.cal_loss"], ["", "def", "cal_performance", "(", "pred", ",", "gold", ",", "trg_pad_idx", ",", "smoothing", "=", "False", ")", ":", "\n", "    ", "loss", "=", "cal_loss", "(", "pred", ",", "gold", ",", "trg_pad_idx", ",", "smoothing", "=", "smoothing", ")", "\n", "\n", "pred", "=", "pred", ".", "max", "(", "1", ")", "[", "1", "]", "# return the index of the biggest value in each row", "\n", "gold", "=", "gold", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "non_pad_mask", "=", "gold", ".", "ne", "(", "trg_pad_idx", ")", "\n", "n_correct", "=", "pred", ".", "eq", "(", "gold", ")", ".", "masked_select", "(", "non_pad_mask", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "n_word", "=", "non_pad_mask", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n", "return", "loss", ",", "n_correct", ",", "n_word", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.get_teacher_model": [[89, 110], ["models.teachers.transformer.Transformer", "models.teachers.transformer.Transformer.load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load"], "function", ["None"], ["", "def", "get_teacher_model", "(", "teacher_model_path", ",", "args", ")", ":", "\n", "    ", "teacher_model_state_dict", "=", "torch", ".", "load", "(", "teacher_model_path", ",", "map_location", "=", "'cpu'", ")", "[", "'model'", "]", "\n", "teacher_model", "=", "teacher_model_function", "(", "\n", "args", ".", "src_vocab_size", ",", "\n", "args", ".", "trg_vocab_size", ",", "\n", "src_pad_idx", "=", "args", ".", "src_pad_idx", ",", "\n", "trg_pad_idx", "=", "args", ".", "trg_pad_idx", ",", "\n", "trg_emb_prj_weight_sharing", "=", "args", ".", "proj_share_weight", ",", "\n", "emb_src_trg_weight_sharing", "=", "args", ".", "embs_share_weight", ",", "\n", "d_k", "=", "args", ".", "d_k", ",", "\n", "d_v", "=", "args", ".", "d_v", ",", "\n", "d_model", "=", "args", ".", "d_model", ",", "\n", "d_word_vec", "=", "args", ".", "d_word_vec", ",", "\n", "d_inner", "=", "args", ".", "d_inner_hid", ",", "\n", "n_layers", "=", "args", ".", "n_layers", ",", "\n", "n_head", "=", "args", ".", "n_head", ",", "\n", "dropout", "=", "args", ".", "dropout", ",", "\n", "scale_emb_or_prj", "=", "args", ".", "scale_emb_or_prj", ")", "\n", "teacher_model", ".", "load_state_dict", "(", "teacher_model_state_dict", ")", "\n", "\n", "return", "teacher_model", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.get_student_model": [[112, 146], ["models.students.transformer.ArchNetTransformer", "models.students.transformer.ArchNetTransformer.load_state_dict", "models.students.transformer.ArchNetTransformer.state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "os.path.join"], "function", ["None"], ["", "def", "get_student_model", "(", "teacher_model_path", ",", "args", ",", "idx", ",", "training_periods", ")", ":", "\n", "    ", "student_model", "=", "student_model_function", "(", "\n", "args", ".", "src_vocab_size", ",", "\n", "args", ".", "trg_vocab_size", ",", "\n", "src_pad_idx", "=", "args", ".", "src_pad_idx", ",", "\n", "trg_pad_idx", "=", "args", ".", "trg_pad_idx", ",", "\n", "trg_emb_prj_weight_sharing", "=", "args", ".", "proj_share_weight", ",", "\n", "emb_src_trg_weight_sharing", "=", "args", ".", "embs_share_weight", ",", "\n", "d_k", "=", "args", ".", "d_k", ",", "\n", "d_v", "=", "args", ".", "d_v", ",", "\n", "d_model", "=", "args", ".", "d_model", ",", "\n", "d_word_vec", "=", "args", ".", "d_word_vec", ",", "\n", "d_inner", "=", "args", ".", "d_inner_hid", ",", "\n", "n_layers", "=", "args", ".", "n_layers", ",", "\n", "n_head", "=", "args", ".", "n_head", ",", "\n", "dropout", "=", "args", ".", "dropout", ",", "\n", "scale_emb_or_prj", "=", "args", ".", "scale_emb_or_prj", ",", "\n", "weight_bit", "=", "args", ".", "weight_bit", ",", "\n", "feature_bit", "=", "args", ".", "feature_bit", ",", "\n", "fa_res", "=", "True", ",", "\n", "is_train", "=", "True", ")", "\n", "if", "idx", "==", "0", ":", "\n", "        ", "teacher_model_state_dict", "=", "torch", ".", "load", "(", "teacher_model_path", ",", "map_location", "=", "'cpu'", ")", "[", "'model'", "]", "\n", "student_model_state_dict", "=", "student_model", ".", "state_dict", "(", ")", "\n", "for", "k", "in", "student_model_state_dict", ":", "\n", "            ", "if", "k", "in", "teacher_model_state_dict", ":", "\n", "                ", "student_model_state_dict", "[", "k", "]", "=", "teacher_model_state_dict", "[", "k", "]", "\n", "", "", "", "else", ":", "\n", "        ", "student_model_state_dict", "=", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "args", ".", "output_dir", ",", "'period_{}_epoch_{}.chkpt'", ".", "format", "(", "idx", "-", "1", ",", "training_periods", "[", "idx", "-", "1", "]", ")", ")", ",", "map_location", "=", "'cpu'", ")", "\n", "student_model_state_dict", "=", "student_model_state_dict", "[", "'model'", "]", "\n", "\n", "", "student_model", ".", "load_state_dict", "(", "student_model_state_dict", ")", "\n", "\n", "return", "student_model", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.patch_src": [[148, 151], ["src.transpose.transpose"], "function", ["None"], ["", "def", "patch_src", "(", "src", ",", "pad_idx", ")", ":", "\n", "    ", "src", "=", "src", ".", "transpose", "(", "0", ",", "1", ")", "\n", "return", "src", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.patch_trg": [[153, 157], ["trg.transpose.transpose", "trg[].contiguous().view", "trg[].contiguous"], "function", ["None"], ["", "def", "patch_trg", "(", "trg", ",", "pad_idx", ")", ":", "\n", "    ", "trg", "=", "trg", ".", "transpose", "(", "0", ",", "1", ")", "\n", "trg", ",", "gold", "=", "trg", "[", ":", ",", ":", "-", "1", "]", ",", "trg", "[", ":", ",", "1", ":", "]", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "return", "trg", ",", "gold", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.convert_to_onehot": [[159, 165], ["idx_input.reshape().to.size", "idx_input.reshape().to.reshape().to", "torch.zeros().scatter", "torch.zeros().scatter", "torch.zeros().scatter", "torch.zeros().scatter", "torch.zeros().scatter", "one_hot.reshape.reshape", "idx_input.reshape().to.reshape", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "idx_input.reshape().to.size"], "function", ["None"], ["", "def", "convert_to_onehot", "(", "idx_input", ",", "vocab_size", ")", ":", "\n", "    ", "original_batch", ",", "original_word_nums", "=", "idx_input", ".", "size", "(", ")", "\n", "idx_input", "=", "idx_input", ".", "reshape", "(", "-", "1", ",", "1", ")", ".", "to", "(", "'cpu'", ")", "\n", "one_hot", "=", "torch", ".", "zeros", "(", "idx_input", ".", "size", "(", "0", ")", ",", "vocab_size", ")", ".", "scatter", "(", "1", ",", "idx_input", ",", "1", ")", "\n", "one_hot", "=", "one_hot", ".", "reshape", "(", "original_batch", ",", "original_word_nums", ",", "vocab_size", ")", "\n", "return", "one_hot", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.get_mse_loss": [[167, 180], ["torch.MSELoss", "len", "torch.logspace", "torch.logspace", "torch.logspace", "torch.logspace", "torch.logspace", "range", "gold.ne", "gold.ne.sum().item", "len", "len", "len", "nn.MSELoss.", "gold.ne.sum"], "function", ["None"], ["", "def", "get_mse_loss", "(", "pred", ",", "label", ",", "gold", ",", "trg_pad_idx", ")", ":", "\n", "    ", "assert", "len", "(", "pred", ")", "==", "len", "(", "label", ")", "\n", "loss_fn", "=", "nn", ".", "MSELoss", "(", ")", "\n", "loss", "=", "0", "\n", "len_output", "=", "len", "(", "pred", ")", "\n", "multiplier", "=", "torch", ".", "logspace", "(", "len_output", "-", "1", ",", "0", ",", "len_output", ",", "base", "=", "0.8", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "pred", ")", ")", ":", "\n", "        ", "loss", "+=", "multiplier", "[", "i", "]", "*", "loss_fn", "(", "pred", "[", "i", "]", ",", "label", "[", "i", "]", ")", "\n", "\n", "", "non_pad_mask", "=", "gold", ".", "ne", "(", "trg_pad_idx", ")", "\n", "n_word", "=", "non_pad_mask", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n", "return", "loss", ",", "n_word", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.get_mse_loss_simple": [[182, 192], ["torch.MSELoss", "len", "torch.logspace", "torch.logspace", "torch.logspace", "torch.logspace", "torch.logspace", "range", "len", "len", "len", "nn.MSELoss."], "function", ["None"], ["", "def", "get_mse_loss_simple", "(", "pred", ",", "label", ")", ":", "\n", "    ", "assert", "len", "(", "pred", ")", "==", "len", "(", "label", ")", "\n", "loss_fn", "=", "nn", ".", "MSELoss", "(", ")", "\n", "loss", "=", "0", "\n", "len_output", "=", "len", "(", "pred", ")", "\n", "multiplier", "=", "torch", ".", "logspace", "(", "len_output", "-", "1", ",", "0", ",", "len_output", ",", "base", "=", "0.8", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "pred", ")", ")", ":", "\n", "        ", "loss", "+=", "multiplier", "[", "i", "]", "*", "loss_fn", "(", "pred", "[", "i", "]", ",", "label", "[", "i", "]", ")", "\n", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.get_cos_loss_simple": [[194, 203], ["len", "torch.logspace", "torch.logspace", "torch.logspace", "torch.logspace", "torch.logspace", "range", "len", "len", "len", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.cosine_similarity", "torch.cosine_similarity", "torch.cosine_similarity", "torch.cosine_similarity", "torch.cosine_similarity"], "function", ["None"], ["", "def", "get_cos_loss_simple", "(", "pred", ",", "label", ")", ":", "\n", "    ", "assert", "len", "(", "pred", ")", "==", "len", "(", "label", ")", "\n", "loss", "=", "0", "\n", "len_output", "=", "len", "(", "pred", ")", "\n", "multiplier", "=", "torch", ".", "logspace", "(", "len_output", "-", "1", ",", "0", ",", "len_output", ",", "base", "=", "0.8", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "pred", ")", ")", ":", "\n", "        ", "loss", "+=", "multiplier", "[", "i", "]", "*", "(", "1.0", "-", "torch", ".", "mean", "(", "torch", ".", "cosine_similarity", "(", "pred", "[", "i", "]", ",", "label", "[", "i", "]", ")", ")", ")", "\n", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.get_loss": [[205, 226], ["gold.contiguous().view.contiguous().view", "gold.contiguous().view.ne", "new_pred.eq().masked_select().sum().item", "label.ne.sum().item", "pred.size", "torch.zeros_like().scatter", "torch.zeros_like().scatter", "torch.zeros_like().scatter", "torch.zeros_like().scatter", "torch.zeros_like().scatter", "torch.log_softmax", "label.ne", "F.cross_entropy.masked_select().sum", "torch.cross_entropy", "pred.max", "label.view", "gold.contiguous().view.contiguous", "new_pred.eq().masked_select().sum", "label.ne.sum", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "F.cross_entropy.masked_select", "new_pred.eq().masked_select", "new_pred.eq"], "function", ["None"], ["", "def", "get_loss", "(", "pred", ",", "label", ",", "gold", ",", "trg_pad_idx", ",", "label_smooth", "=", "False", ")", ":", "\n", "    ", "if", "label_smooth", ":", "\n", "        ", "eps", "=", "0.1", "\n", "n_class", "=", "pred", ".", "size", "(", "1", ")", "\n", "\n", "one_hot", "=", "torch", ".", "zeros_like", "(", "pred", ")", ".", "scatter", "(", "1", ",", "label", ".", "view", "(", "-", "1", ",", "1", ")", ",", "1", ")", "\n", "one_hot", "=", "one_hot", "*", "(", "1", "-", "eps", ")", "+", "(", "1", "-", "one_hot", ")", "*", "eps", "/", "(", "n_class", "-", "1", ")", "\n", "log_prb", "=", "F", ".", "log_softmax", "(", "pred", ",", "dim", "=", "1", ")", "\n", "\n", "non_pad_mask", "=", "label", ".", "ne", "(", "trg_pad_idx", ")", "\n", "loss", "=", "-", "(", "one_hot", "*", "log_prb", ")", ".", "sum", "(", "dim", "=", "1", ")", "\n", "loss", "=", "loss", ".", "masked_select", "(", "non_pad_mask", ")", ".", "sum", "(", ")", "# average later", "\n", "", "else", ":", "\n", "        ", "loss", "=", "F", ".", "cross_entropy", "(", "pred", ",", "label", ",", "ignore_index", "=", "trg_pad_idx", ",", "reduction", "=", "'sum'", ")", "\n", "", "new_pred", "=", "pred", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "gold", "=", "gold", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "non_pad_mask", "=", "gold", ".", "ne", "(", "trg_pad_idx", ")", "\n", "n_correct", "=", "new_pred", ".", "eq", "(", "gold", ")", ".", "masked_select", "(", "non_pad_mask", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "n_word", "=", "non_pad_mask", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n", "return", "loss", ",", "n_correct", ",", "n_word", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.validate": [[228, 258], ["model.eval", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "tqdm.tqdm", "train_archnet_transformer.patch_src", "train_archnet_transformer.patch_trg", "convert_to_onehot().to", "convert_to_onehot().to", "original_src_seq.to.to", "original_trg_seq.to.to", "gold.to.to", "model", "train_archnet_transformer.cal_performance", "loss.item", "train_archnet_transformer.convert_to_onehot", "train_archnet_transformer.convert_to_onehot"], "function", ["home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.patch_src", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.patch_trg", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.cal_performance", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.convert_to_onehot", "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.convert_to_onehot"], ["", "def", "validate", "(", "model", ",", "validation_data", ",", "device", ",", "args", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "total_loss", ",", "n_word_total", ",", "n_word_correct", "=", "0", ",", "0", ",", "0", "\n", "\n", "desc", "=", "'  - (Validation) '", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "batch", "in", "tqdm", "(", "validation_data", ",", "mininterval", "=", "2", ",", "desc", "=", "desc", ",", "leave", "=", "False", ")", ":", "\n", "\n", "# prepare data", "\n", "            ", "original_src_seq", "=", "patch_src", "(", "batch", ".", "src", ",", "args", ".", "src_pad_idx", ")", "\n", "original_trg_seq", ",", "gold", "=", "patch_trg", "(", "batch", ".", "trg", ",", "args", ".", "trg_pad_idx", ")", "\n", "src_seq", "=", "convert_to_onehot", "(", "original_src_seq", ",", "args", ".", "src_vocab_size", ")", ".", "to", "(", "device", ")", "\n", "trg_seq", "=", "convert_to_onehot", "(", "original_trg_seq", ",", "args", ".", "trg_vocab_size", ")", ".", "to", "(", "device", ")", "\n", "original_src_seq", "=", "original_src_seq", ".", "to", "(", "device", ")", "\n", "original_trg_seq", "=", "original_trg_seq", ".", "to", "(", "device", ")", "\n", "gold", "=", "gold", ".", "to", "(", "device", ")", "\n", "\n", "# forward", "\n", "pred", "=", "model", "(", "src_seq", ",", "trg_seq", ",", "original_src_seq", ",", "original_trg_seq", ")", "\n", "loss", ",", "n_correct", ",", "n_word", "=", "cal_performance", "(", "\n", "pred", ",", "gold", ",", "args", ".", "trg_pad_idx", ",", "smoothing", "=", "False", ")", "\n", "\n", "# note keeping", "\n", "n_word_total", "+=", "n_word", "\n", "n_word_correct", "+=", "n_correct", "\n", "total_loss", "+=", "loss", ".", "item", "(", ")", "\n", "\n", "", "", "loss_per_word", "=", "total_loss", "/", "n_word_total", "\n", "accuracy", "=", "n_word_correct", "/", "n_word_total", "\n", "return", "loss_per_word", ",", "accuracy", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_Arch-Net.train_transformer.train_archnet_transformer.print_performances": [[260, 265], ["print", "print", "time.time", "time.time"], "function", ["None"], ["", "def", "print_performances", "(", "header", ",", "loss", ",", "ppl", ",", "accu", ",", "start_time", ",", "lr", ")", ":", "\n", "    ", "if", "ppl", "is", "None", "and", "accu", "is", "None", ":", "\n", "        ", "print", "(", "'  - {header:12} loss: {loss: 8.5f}, lr: {lr:8.5f}, elapse: {elapse:3.3f} min'", ".", "format", "(", "header", "=", "f\"({header})\"", ",", "loss", "=", "loss", ",", "elapse", "=", "(", "time", ".", "time", "(", ")", "-", "start_time", ")", "/", "60", ",", "lr", "=", "lr", ")", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "'  - {header:12} loss: {loss: 8.5f}, ppl: {ppl: 8.5f}, accuracy: {accu:3.3f} %, lr: {lr:8.5f}, elapse: {elapse:3.3f} min'", ".", "format", "(", "header", "=", "f\"({header})\"", ",", "loss", "=", "loss", ",", "ppl", "=", "ppl", ",", "accu", "=", "100", "*", "accu", ",", "elapse", "=", "(", "time", ".", "time", "(", ")", "-", "start_time", ")", "/", "60", ",", "lr", "=", "lr", ")", ")", "\n", "\n"]]}