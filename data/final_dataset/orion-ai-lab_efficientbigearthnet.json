{"home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.BigEarthModel.__init__": [[64, 251], ["tensorflow.keras.layers.Input", "tensorflow.keras.layers.Input", "tensorflow.keras.layers.Input", "tensorflow.keras.layers.Input", "tensorflow.keras.layers.Input", "tensorflow.keras.layers.Input", "tensorflow.stack", "models.BigEarthModel.__init__.resize"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "nb_class", ",", "resolution", "=", "(", "120", ",", "120", ")", ",", "modality", "=", "\"MM\"", ",", "dtype", "=", "\"float64\"", ")", ":", "\n", "        ", "self", ".", "_nb_class", "=", "nb_class", "\n", "self", ".", "_dtype", "=", "dtype", "\n", "self", ".", "_resolution", "=", "resolution", "\n", "self", ".", "_modality", "=", "modality", "\n", "\n", "def", "resize", "(", "input", ")", ":", "\n", "            ", "if", "input", ".", "shape", "[", "1", ":", "3", "]", "!=", "self", ".", "_resolution", ":", "\n", "                ", "return", "tf", ".", "image", ".", "resize", "(", "\n", "input", ",", "self", ".", "_resolution", ",", "method", "=", "tf", ".", "image", ".", "ResizeMethod", ".", "BICUBIC", "\n", ")", "\n", "", "return", "input", "\n", "\n", "", "self", ".", "_inputB02", "=", "Input", "(", "\n", "shape", "=", "(", "\n", "120", ",", "\n", "120", ",", "\n", ")", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", ")", "\n", "self", ".", "_inputB03", "=", "Input", "(", "\n", "shape", "=", "(", "\n", "120", ",", "\n", "120", ",", "\n", ")", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", ")", "\n", "self", ".", "_inputB04", "=", "Input", "(", "\n", "shape", "=", "(", "\n", "120", ",", "\n", "120", ",", "\n", ")", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", ")", "\n", "self", ".", "_inputB08", "=", "Input", "(", "\n", "shape", "=", "(", "\n", "120", ",", "\n", "120", ",", "\n", ")", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", ")", "\n", "self", ".", "_inputVV", "=", "Input", "(", "\n", "shape", "=", "(", "\n", "120", ",", "\n", "120", ",", "\n", ")", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", ")", "\n", "self", ".", "_inputVH", "=", "Input", "(", "\n", "shape", "=", "(", "\n", "120", ",", "\n", "120", ",", "\n", ")", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", ")", "\n", "bands_10m", "=", "tf", ".", "stack", "(", "\n", "[", "\n", "self", ".", "_inputB02", ",", "\n", "self", ".", "_inputB03", ",", "\n", "self", ".", "_inputB04", ",", "\n", "self", ".", "_inputB08", ",", "\n", "]", ",", "\n", "axis", "=", "3", ",", "\n", ")", "\n", "bands_10m", "=", "resize", "(", "bands_10m", ")", "\n", "print", "(", "\"10m shape: {}\"", ".", "format", "(", "bands_10m", ".", "shape", ")", ")", "\n", "\n", "self", ".", "_inputB05", "=", "Input", "(", "\n", "shape", "=", "(", "\n", "60", ",", "\n", "60", ",", "\n", ")", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", ")", "\n", "self", ".", "_inputB06", "=", "Input", "(", "\n", "shape", "=", "(", "\n", "60", ",", "\n", "60", ",", "\n", ")", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", ")", "\n", "self", ".", "_inputB07", "=", "Input", "(", "\n", "shape", "=", "(", "\n", "60", ",", "\n", "60", ",", "\n", ")", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", ")", "\n", "self", ".", "_inputB8A", "=", "Input", "(", "\n", "shape", "=", "(", "\n", "60", ",", "\n", "60", ",", "\n", ")", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", ")", "\n", "self", ".", "_inputB11", "=", "Input", "(", "\n", "shape", "=", "(", "\n", "60", ",", "\n", "60", ",", "\n", ")", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", ")", "\n", "self", ".", "_inputB12", "=", "Input", "(", "\n", "shape", "=", "(", "\n", "60", ",", "\n", "60", ",", "\n", ")", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", ")", "\n", "bands_20m", "=", "tf", ".", "stack", "(", "\n", "[", "\n", "self", ".", "_inputB05", ",", "\n", "self", ".", "_inputB06", ",", "\n", "self", ".", "_inputB07", ",", "\n", "self", ".", "_inputB8A", ",", "\n", "self", ".", "_inputB11", ",", "\n", "self", ".", "_inputB12", ",", "\n", "]", ",", "\n", "axis", "=", "3", ",", "\n", ")", "\n", "bands_20m", "=", "resize", "(", "bands_20m", ")", "\n", "print", "(", "\"20m shape: {}\"", ".", "format", "(", "bands_20m", ".", "shape", ")", ")", "\n", "\n", "s1_bands", "=", "resize", "(", "tf", ".", "stack", "(", "[", "self", ".", "_inputVV", ",", "self", ".", "_inputVH", "]", ",", "axis", "=", "3", ")", ")", "\n", "s2_bands", "=", "tf", ".", "concat", "(", "[", "bands_10m", ",", "bands_20m", "]", ",", "axis", "=", "3", ")", "\n", "\n", "if", "self", ".", "_modality", "==", "\"S1\"", ":", "\n", "            ", "allbands", "=", "s1_bands", "\n", "inputs", "=", "[", "\n", "self", ".", "_inputVV", ",", "\n", "self", ".", "_inputVH", ",", "\n", "]", "\n", "", "elif", "self", ".", "_modality", "==", "\"S2\"", ":", "\n", "            ", "allbands", "=", "s2_bands", "\n", "inputs", "=", "[", "\n", "self", ".", "_inputB02", ",", "\n", "self", ".", "_inputB03", ",", "\n", "self", ".", "_inputB04", ",", "\n", "self", ".", "_inputB05", ",", "\n", "self", ".", "_inputB06", ",", "\n", "self", ".", "_inputB07", ",", "\n", "self", ".", "_inputB08", ",", "\n", "self", ".", "_inputB8A", ",", "\n", "self", ".", "_inputB11", ",", "\n", "self", ".", "_inputB12", ",", "\n", "]", "\n", "", "elif", "self", ".", "_modality", "==", "\"MM\"", ":", "\n", "            ", "allbands", "=", "tf", ".", "concat", "(", "[", "s2_bands", ",", "s1_bands", "]", ",", "axis", "=", "3", ")", "\n", "inputs", "=", "[", "\n", "self", ".", "_inputB02", ",", "\n", "self", ".", "_inputB03", ",", "\n", "self", ".", "_inputB04", ",", "\n", "self", ".", "_inputB05", ",", "\n", "self", ".", "_inputB06", ",", "\n", "self", ".", "_inputB07", ",", "\n", "self", ".", "_inputB08", ",", "\n", "self", ".", "_inputB8A", ",", "\n", "self", ".", "_inputB11", ",", "\n", "self", ".", "_inputB12", ",", "\n", "self", ".", "_inputVV", ",", "\n", "self", ".", "_inputVH", ",", "\n", "]", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\"Incompatible modality.\"", ")", "\n", "\n", "", "self", ".", "_num_bands", "=", "allbands", ".", "shape", "[", "3", "]", "\n", "print", "(", "\"allbands shape: {}\"", ".", "format", "(", "allbands", ".", "shape", ")", ")", "\n", "\n", "# Legacy attributes for BigEarthNet-S2 related models", "\n", "self", ".", "band_dict", "=", "{", "\"band_10\"", ":", "bands_10m", ",", "\"band_20\"", ":", "bands_20m", "}", "\n", "self", ".", "feature_size", "=", "128", "\n", "self", ".", "nb_bands_10m", "=", "4", "\n", "self", ".", "nb_bands_20m", "=", "6", "\n", "self", ".", "bands_10m", "=", "self", ".", "band_dict", "[", "\"band_10\"", "]", "\n", "self", ".", "bands_20m", "=", "self", ".", "band_dict", "[", "\"band_20\"", "]", "\n", "\n", "# Create internal model", "\n", "self", ".", "_logits", "=", "self", ".", "_create_model_logits", "(", "allbands", ")", "\n", "\n", "# Add one last dense layer with biases and sigmoid activation", "\n", "# This is like having nb_class separate binary classifiers", "\n", "self", ".", "_output", "=", "Dense", "(", "\n", "units", "=", "self", ".", "_nb_class", ",", "dtype", "=", "self", ".", "_dtype", ",", "activation", "=", "\"sigmoid\"", ",", "use_bias", "=", "True", "\n", ")", "(", "self", ".", "_logits", ")", "\n", "\n", "self", ".", "_model", "=", "Model", "(", "inputs", "=", "inputs", ",", "outputs", "=", "self", ".", "_output", ")", "\n", "self", ".", "_logits_model", "=", "Model", "(", "inputs", "=", "inputs", ",", "outputs", "=", "self", ".", "_logits", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.BigEarthModel.model": [[252, 255], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "model", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_model", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.BigEarthModel.logits_model": [[256, 259], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "logits_model", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_logits_model", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.BigEarthModel._create_model_logits": [[260, 265], ["tensorflow.keras.layers.Flatten", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense"], "methods", ["None"], ["", "def", "_create_model_logits", "(", "self", ",", "allbands", ")", ":", "\n", "        ", "x", "=", "Flatten", "(", "dtype", "=", "self", ".", "_dtype", ")", "(", "allbands", ")", "\n", "x", "=", "Dense", "(", "128", ",", "dtype", "=", "self", ".", "_dtype", ")", "(", "x", ")", "\n", "x", "=", "Dense", "(", "64", ",", "dtype", "=", "self", ".", "_dtype", ")", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DenseNet121BigEarthModel.__init__": [[268, 270], ["models.BigEarthModel.__init__"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.metrics.CustomMetrics.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nb_class", ",", "modality", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nb_class", ",", "modality", "=", "modality", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DenseNet121BigEarthModel._create_model_logits": [[271, 281], ["tensorflow.keras.applications.DenseNet121"], "methods", ["None"], ["", "def", "_create_model_logits", "(", "self", ",", "allbands", ")", ":", "\n", "        ", "num_bands", "=", "self", ".", "_num_bands", "\n", "x", "=", "tf", ".", "keras", ".", "applications", ".", "DenseNet121", "(", "\n", "include_top", "=", "False", ",", "\n", "weights", "=", "None", ",", "\n", "input_shape", "=", "(", "120", ",", "120", ",", "num_bands", ")", ",", "\n", "pooling", "=", "\"avg\"", ",", "\n", ")", "(", "allbands", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DenseNet169BigEarthModel.__init__": [[284, 286], ["models.BigEarthModel.__init__"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.metrics.CustomMetrics.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nb_class", ",", "modality", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nb_class", ",", "modality", "=", "modality", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DenseNet169BigEarthModel._create_model_logits": [[287, 297], ["tensorflow.keras.applications.DenseNet169"], "methods", ["None"], ["", "def", "_create_model_logits", "(", "self", ",", "allbands", ")", ":", "\n", "        ", "num_bands", "=", "self", ".", "_num_bands", "\n", "x", "=", "tf", ".", "keras", ".", "applications", ".", "DenseNet169", "(", "\n", "include_top", "=", "False", ",", "\n", "weights", "=", "None", ",", "\n", "input_shape", "=", "(", "120", ",", "120", ",", "num_bands", ")", ",", "\n", "pooling", "=", "\"avg\"", ",", "\n", ")", "(", "allbands", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DenseNet201BigEarthModel.__init__": [[300, 302], ["models.BigEarthModel.__init__"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.metrics.CustomMetrics.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nb_class", ",", "modality", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nb_class", ",", "modality", "=", "modality", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DenseNet201BigEarthModel._create_model_logits": [[303, 313], ["tensorflow.keras.applications.DenseNet201"], "methods", ["None"], ["", "def", "_create_model_logits", "(", "self", ",", "allbands", ")", ":", "\n", "        ", "num_bands", "=", "self", ".", "_num_bands", "\n", "x", "=", "tf", ".", "keras", ".", "applications", ".", "DenseNet201", "(", "\n", "include_top", "=", "False", ",", "\n", "weights", "=", "None", ",", "\n", "input_shape", "=", "(", "120", ",", "120", ",", "num_bands", ")", ",", "\n", "pooling", "=", "\"avg\"", ",", "\n", ")", "(", "allbands", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.ResNet50BigEarthModel.__init__": [[316, 318], ["models.BigEarthModel.__init__"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.metrics.CustomMetrics.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nb_class", ",", "modality", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nb_class", ",", "modality", "=", "modality", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.ResNet50BigEarthModel._create_model_logits": [[319, 329], ["tensorflow.keras.applications.ResNet50"], "methods", ["None"], ["", "def", "_create_model_logits", "(", "self", ",", "allbands", ")", ":", "\n", "        ", "num_bands", "=", "self", ".", "_num_bands", "\n", "x", "=", "ResNet50", "(", "\n", "include_top", "=", "False", ",", "\n", "weights", "=", "None", ",", "\n", "input_shape", "=", "(", "120", ",", "120", ",", "num_bands", ")", ",", "\n", "pooling", "=", "\"avg\"", ",", "\n", ")", "(", "allbands", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.ResNet101BigEarthModel.__init__": [[332, 334], ["models.BigEarthModel.__init__"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.metrics.CustomMetrics.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nb_class", ",", "modality", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nb_class", ",", "modality", "=", "modality", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.ResNet101BigEarthModel._create_model_logits": [[335, 345], ["tensorflow.keras.applications.ResNet101"], "methods", ["None"], ["", "def", "_create_model_logits", "(", "self", ",", "allbands", ")", ":", "\n", "        ", "num_bands", "=", "self", ".", "_num_bands", "\n", "x", "=", "ResNet101", "(", "\n", "include_top", "=", "False", ",", "\n", "weights", "=", "None", ",", "\n", "input_shape", "=", "(", "120", ",", "120", ",", "num_bands", ")", ",", "\n", "pooling", "=", "\"avg\"", ",", "\n", ")", "(", "allbands", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.ResNet152BigEarthModel.__init__": [[348, 350], ["models.BigEarthModel.__init__"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.metrics.CustomMetrics.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nb_class", ",", "modality", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nb_class", ",", "modality", "=", "modality", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.ResNet152BigEarthModel._create_model_logits": [[351, 361], ["tensorflow.keras.applications.ResNet152"], "methods", ["None"], ["", "def", "_create_model_logits", "(", "self", ",", "allbands", ")", ":", "\n", "        ", "num_bands", "=", "self", ".", "_num_bands", "\n", "x", "=", "ResNet152", "(", "\n", "include_top", "=", "False", ",", "\n", "weights", "=", "None", ",", "\n", "input_shape", "=", "(", "120", ",", "120", ",", "num_bands", ")", ",", "\n", "pooling", "=", "\"avg\"", ",", "\n", ")", "(", "allbands", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.VGG16BigEarthModel.__init__": [[364, 366], ["models.BigEarthModel.__init__"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.metrics.CustomMetrics.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nb_class", ",", "modality", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nb_class", ",", "modality", "=", "modality", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.VGG16BigEarthModel._create_model_logits": [[367, 377], ["tensorflow.keras.applications.VGG16"], "methods", ["None"], ["", "def", "_create_model_logits", "(", "self", ",", "allbands", ")", ":", "\n", "        ", "num_bands", "=", "self", ".", "_num_bands", "\n", "x", "=", "VGG16", "(", "\n", "include_top", "=", "False", ",", "\n", "weights", "=", "None", ",", "\n", "input_shape", "=", "(", "120", ",", "120", ",", "num_bands", ")", ",", "\n", "pooling", "=", "\"avg\"", ",", "\n", ")", "(", "allbands", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.VGG19BigEarthModel.__init__": [[380, 382], ["models.BigEarthModel.__init__"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.metrics.CustomMetrics.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nb_class", ",", "modality", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nb_class", ",", "modality", "=", "modality", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.VGG19BigEarthModel._create_model_logits": [[383, 394], ["tensorflow.keras.applications.VGG19"], "methods", ["None"], ["", "def", "_create_model_logits", "(", "self", ",", "allbands", ")", ":", "\n", "        ", "num_bands", "=", "self", ".", "_num_bands", "\n", "# Add VGG19", "\n", "x", "=", "VGG19", "(", "\n", "include_top", "=", "False", ",", "\n", "weights", "=", "None", ",", "\n", "input_shape", "=", "(", "120", ",", "120", ",", "num_bands", ")", ",", "\n", "pooling", "=", "\"avg\"", ",", "\n", ")", "(", "allbands", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.ResNet_50.__init__": [[397, 400], ["models.BigEarthModel.__init__"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.metrics.CustomMetrics.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nb_class", ",", "modality", ",", "resolution", "=", "(", "120", ",", "120", ")", ",", "dtype", "=", "\"float64\"", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "\n", "nb_class", ",", "modality", "=", "modality", ",", "resolution", "=", "resolution", ",", "dtype", "=", "dtype", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.ResNet_50._create_model_logits": [[402, 486], ["models.ResNet_50._create_model_logits.conv_block"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.conv_block"], ["", "def", "_create_model_logits", "(", "self", ",", "allbands", ")", ":", "\n", "        ", "def", "identity_block", "(", "input_tensor", ",", "kernel_size", ",", "filters", ",", "stage", ",", "block", ")", ":", "\n", "\n", "            ", "filters1", ",", "filters2", ",", "filters3", "=", "filters", "\n", "conv_name_base", "=", "\"res\"", "+", "str", "(", "stage", ")", "+", "block", "+", "\"_branch\"", "\n", "bn_name_base", "=", "\"bn\"", "+", "str", "(", "stage", ")", "+", "block", "+", "\"_branch\"", "\n", "\n", "x", "=", "Conv2D", "(", "filters1", ",", "(", "1", ",", "1", ")", ",", "name", "=", "conv_name_base", "+", "\"2a\"", ")", "(", "input_tensor", ")", "\n", "x", "=", "BatchNormalization", "(", "name", "=", "bn_name_base", "+", "\"2a\"", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "\n", "x", "=", "Conv2D", "(", "\n", "filters2", ",", "kernel_size", ",", "padding", "=", "\"same\"", ",", "name", "=", "conv_name_base", "+", "\"2b\"", "\n", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", "name", "=", "bn_name_base", "+", "\"2b\"", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "\n", "x", "=", "Conv2D", "(", "filters3", ",", "(", "1", ",", "1", ")", ",", "name", "=", "conv_name_base", "+", "\"2c\"", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", "name", "=", "bn_name_base", "+", "\"2c\"", ")", "(", "x", ")", "\n", "\n", "x", "=", "layers", ".", "add", "(", "[", "x", ",", "input_tensor", "]", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "return", "x", "\n", "\n", "", "def", "conv_block", "(", "\n", "input_tensor", ",", "kernel_size", ",", "filters", ",", "stage", ",", "block", ",", "strides", "=", "(", "2", ",", "2", ")", "\n", ")", ":", "\n", "            ", "filters1", ",", "filters2", ",", "filters3", "=", "filters", "\n", "conv_name_base", "=", "\"res\"", "+", "str", "(", "stage", ")", "+", "block", "+", "\"_branch\"", "\n", "bn_name_base", "=", "\"bn\"", "+", "str", "(", "stage", ")", "+", "block", "+", "\"_branch\"", "\n", "\n", "x", "=", "Conv2D", "(", "filters1", ",", "(", "1", ",", "1", ")", ",", "strides", "=", "strides", ",", "name", "=", "conv_name_base", "+", "\"2a\"", ")", "(", "\n", "input_tensor", "\n", ")", "\n", "x", "=", "BatchNormalization", "(", "name", "=", "bn_name_base", "+", "\"2a\"", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "\n", "x", "=", "Conv2D", "(", "\n", "filters2", ",", "kernel_size", ",", "padding", "=", "\"same\"", ",", "name", "=", "conv_name_base", "+", "\"2b\"", "\n", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", "name", "=", "bn_name_base", "+", "\"2b\"", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "\n", "x", "=", "Conv2D", "(", "filters3", ",", "(", "1", ",", "1", ")", ",", "name", "=", "conv_name_base", "+", "\"2c\"", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", "name", "=", "bn_name_base", "+", "\"2c\"", ")", "(", "x", ")", "\n", "\n", "shortcut", "=", "Conv2D", "(", "\n", "filters3", ",", "(", "1", ",", "1", ")", ",", "strides", "=", "strides", ",", "name", "=", "conv_name_base", "+", "\"1\"", "\n", ")", "(", "input_tensor", ")", "\n", "shortcut", "=", "BatchNormalization", "(", "name", "=", "bn_name_base", "+", "\"1\"", ")", "(", "shortcut", ")", "\n", "\n", "x", "=", "layers", ".", "add", "(", "[", "x", ",", "shortcut", "]", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "return", "x", "\n", "\n", "", "x", "=", "tf", ".", "keras", ".", "layers", ".", "ZeroPadding2D", "(", "(", "3", ",", "3", ")", ")", "(", "allbands", ")", "\n", "x", "=", "Conv2D", "(", "64", ",", "(", "7", ",", "7", ")", ",", "strides", "=", "(", "2", ",", "2", ")", ",", "name", "=", "\"conv1\"", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", "name", "=", "\"bn_conv1\"", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "ZeroPadding2D", "(", "padding", "=", "(", "1", ",", "1", ")", ",", "name", "=", "\"pool1_pad\"", ")", "(", "x", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "MaxPooling2D", "(", "(", "3", ",", "3", ")", ",", "strides", "=", "(", "2", ",", "2", ")", ")", "(", "x", ")", "\n", "\n", "x", "=", "conv_block", "(", "x", ",", "3", ",", "[", "64", ",", "64", ",", "256", "]", ",", "stage", "=", "2", ",", "block", "=", "\"a\"", ",", "strides", "=", "(", "1", ",", "1", ")", ")", "\n", "x", "=", "identity_block", "(", "x", ",", "3", ",", "[", "64", ",", "64", ",", "256", "]", ",", "stage", "=", "2", ",", "block", "=", "\"b\"", ")", "\n", "x", "=", "identity_block", "(", "x", ",", "3", ",", "[", "64", ",", "64", ",", "256", "]", ",", "stage", "=", "2", ",", "block", "=", "\"c\"", ")", "\n", "\n", "x", "=", "conv_block", "(", "x", ",", "3", ",", "[", "128", ",", "128", ",", "512", "]", ",", "stage", "=", "3", ",", "block", "=", "\"a\"", ")", "\n", "x", "=", "identity_block", "(", "x", ",", "3", ",", "[", "128", ",", "128", ",", "512", "]", ",", "stage", "=", "3", ",", "block", "=", "\"b\"", ")", "\n", "x", "=", "identity_block", "(", "x", ",", "3", ",", "[", "128", ",", "128", ",", "512", "]", ",", "stage", "=", "3", ",", "block", "=", "\"c\"", ")", "\n", "x", "=", "identity_block", "(", "x", ",", "3", ",", "[", "128", ",", "128", ",", "512", "]", ",", "stage", "=", "3", ",", "block", "=", "\"d\"", ")", "\n", "\n", "x", "=", "conv_block", "(", "x", ",", "3", ",", "[", "256", ",", "256", ",", "1024", "]", ",", "stage", "=", "4", ",", "block", "=", "\"a\"", ")", "\n", "x", "=", "identity_block", "(", "x", ",", "3", ",", "[", "256", ",", "256", ",", "1024", "]", ",", "stage", "=", "4", ",", "block", "=", "\"b\"", ")", "\n", "x", "=", "identity_block", "(", "x", ",", "3", ",", "[", "256", ",", "256", ",", "1024", "]", ",", "stage", "=", "4", ",", "block", "=", "\"c\"", ")", "\n", "x", "=", "identity_block", "(", "x", ",", "3", ",", "[", "256", ",", "256", ",", "1024", "]", ",", "stage", "=", "4", ",", "block", "=", "\"d\"", ")", "\n", "x", "=", "identity_block", "(", "x", ",", "3", ",", "[", "256", ",", "256", ",", "1024", "]", ",", "stage", "=", "4", ",", "block", "=", "\"e\"", ")", "\n", "x", "=", "identity_block", "(", "x", ",", "3", ",", "[", "256", ",", "256", ",", "1024", "]", ",", "stage", "=", "4", ",", "block", "=", "\"f\"", ")", "\n", "\n", "x", "=", "conv_block", "(", "x", ",", "3", ",", "[", "512", ",", "512", ",", "2048", "]", ",", "stage", "=", "5", ",", "block", "=", "\"a\"", ")", "\n", "x", "=", "identity_block", "(", "x", ",", "3", ",", "[", "512", ",", "512", ",", "2048", "]", ",", "stage", "=", "5", ",", "block", "=", "\"b\"", ")", "\n", "x", "=", "identity_block", "(", "x", ",", "3", ",", "[", "512", ",", "512", ",", "2048", "]", ",", "stage", "=", "5", ",", "block", "=", "\"c\"", ")", "\n", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "GlobalAveragePooling2D", "(", ")", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.EfficientNet.__init__": [[489, 506], ["models.BigEarthModel.__init__", "tuple", "int", "math.ceil"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.metrics.CustomMetrics.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nb_class", ",", "coefficients", ",", "modality", ")", ":", "\n", "        ", "self", ".", "phi", "=", "coefficients", "[", "\"phi\"", "]", "\n", "self", ".", "alpha", "=", "coefficients", "[", "\"alpha\"", "]", "**", "self", ".", "phi", "\n", "self", ".", "beta", "=", "coefficients", "[", "\"beta\"", "]", "**", "self", ".", "phi", "\n", "self", ".", "gamma", "=", "coefficients", "[", "\"gamma\"", "]", "**", "self", ".", "phi", "\n", "self", ".", "dropout_rate", "=", "coefficients", "[", "\"dropout\"", "]", "\n", "self", ".", "attention_module", "=", "(", "\n", "eca_module", "# se_module, cbam_module, coord_module, eca_module", "\n", ")", "\n", "self", ".", "ghost_conv", "=", "True", "\n", "super", "(", ")", ".", "__init__", "(", "\n", "nb_class", ",", "\n", "tuple", "(", "\n", "int", "(", "math", ".", "ceil", "(", "dimension", "*", "self", ".", "gamma", "/", "10.0", ")", ")", "*", "10", "\n", "for", "dimension", "in", "(", "60", ",", "60", ")", "\n", ")", ",", "\n", "modality", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.EfficientNet._create_model_logits": [[508, 679], ["print", "models.EfficientNet._create_model_logits.conv_bn_0"], "methods", ["None"], ["", "def", "_create_model_logits", "(", "self", ",", "allbands", ")", ":", "\n", "        ", "def", "swish", "(", "x", ")", ":", "\n", "            ", "return", "x", "*", "tf", ".", "nn", ".", "sigmoid", "(", "x", ")", "\n", "\n", "", "def", "round_filters", "(", "filters", ",", "multiplier", ")", ":", "\n", "            ", "depth_divisor", "=", "8", "\n", "min_depth", "=", "None", "\n", "min_depth", "=", "min_depth", "or", "depth_divisor", "\n", "filters", "=", "filters", "*", "multiplier", "\n", "new_filters", "=", "max", "(", "\n", "min_depth", ",", "\n", "int", "(", "filters", "+", "depth_divisor", "/", "2", ")", "//", "depth_divisor", "*", "depth_divisor", ",", "\n", ")", "\n", "if", "new_filters", "<", "0.9", "*", "filters", ":", "\n", "                ", "new_filters", "+=", "depth_divisor", "\n", "", "return", "int", "(", "new_filters", ")", "\n", "\n", "", "def", "round_repeats", "(", "repeats", ",", "multiplier", ")", ":", "\n", "            ", "if", "not", "multiplier", ":", "\n", "                ", "return", "repeats", "\n", "", "return", "int", "(", "math", ".", "ceil", "(", "multiplier", "*", "repeats", ")", ")", "\n", "\n", "", "def", "conv_bn", "(", "x", ",", "filters", ",", "kernel_size", ",", "strides", ",", "activation", "=", "True", ")", ":", "\n", "            ", "if", "self", ".", "ghost_conv", ":", "\n", "                ", "x", "=", "ghost_module", "(", "x", ",", "filters", ",", "kernel_size", ",", "strides", ")", "\n", "", "else", ":", "\n", "                ", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Conv2D", "(", "\n", "filters", "=", "filters", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "strides", "=", "strides", ",", "\n", "padding", "=", "\"same\"", ",", "\n", "kernel_initializer", "=", "\"he_normal\"", ",", "\n", "kernel_regularizer", "=", "tf", ".", "keras", ".", "regularizers", ".", "l2", "(", "5e-4", ")", ",", "\n", ")", "(", "x", ")", "\n", "", "x", "=", "tf", ".", "keras", ".", "layers", ".", "BatchNormalization", "(", "\n", "momentum", "=", "0.1", ",", "epsilon", "=", "1e-5", ",", "gamma_initializer", "=", "\"uniform\"", "\n", ")", "(", "x", ")", "\n", "if", "activation", ":", "\n", "                ", "x", "=", "swish", "(", "x", ")", "\n", "", "return", "x", "\n", "\n", "", "def", "conv_bn_0", "(", "x", ",", "filters", ",", "kernel_size", ",", "strides", ",", "activation", "=", "True", ")", ":", "\n", "            ", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Conv2D", "(", "\n", "filters", "=", "filters", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "strides", "=", "strides", ",", "\n", "padding", "=", "\"same\"", ",", "\n", "kernel_initializer", "=", "\"he_normal\"", ",", "\n", "kernel_regularizer", "=", "tf", ".", "keras", ".", "regularizers", ".", "l2", "(", "5e-4", ")", ",", "\n", ")", "(", "x", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "BatchNormalization", "(", "\n", "momentum", "=", "0.1", ",", "epsilon", "=", "1e-5", ",", "gamma_initializer", "=", "\"uniform\"", "\n", ")", "(", "x", ")", "\n", "if", "activation", ":", "\n", "                ", "x", "=", "swish", "(", "x", ")", "\n", "", "return", "x", "\n", "\n", "", "def", "depthwiseConv_bn", "(", "x", ",", "kernel_size", ",", "strides", ")", ":", "\n", "            ", "x", "=", "tf", ".", "keras", ".", "layers", ".", "DepthwiseConv2D", "(", "\n", "kernel_size", ",", "\n", "padding", "=", "\"same\"", ",", "\n", "strides", "=", "strides", ",", "\n", "kernel_initializer", "=", "\"he_normal\"", ",", "\n", "kernel_regularizer", "=", "tf", ".", "keras", ".", "regularizers", ".", "l2", "(", "5e-4", ")", ",", "\n", ")", "(", "x", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "BatchNormalization", "(", "\n", "momentum", "=", "0.1", ",", "epsilon", "=", "1e-5", ",", "gamma_initializer", "=", "\"uniform\"", "\n", ")", "(", "x", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Activation", "(", "tf", ".", "nn", ".", "relu6", ")", "(", "x", ")", "\n", "return", "x", "\n", "\n", "", "def", "MBConv_idskip", "(", "x", ",", "filters", ",", "drop_connect_rate", ",", "kernel_size", ",", "strides", ",", "t", ")", ":", "\n", "            ", "x_input", "=", "x", "\n", "x", "=", "conv_bn", "(", "x", ",", "filters", "=", "x", ".", "shape", "[", "-", "1", "]", "*", "t", ",", "kernel_size", "=", "1", ",", "strides", "=", "1", ")", "\n", "x", "=", "depthwiseConv_bn", "(", "x", ",", "kernel_size", "=", "kernel_size", ",", "strides", "=", "strides", ")", "\n", "x", "=", "self", ".", "attention_module", "(", "x", ")", "\n", "x", "=", "swish", "(", "x", ")", "\n", "x", "=", "conv_bn", "(", "x", ",", "filters", "=", "filters", ",", "kernel_size", "=", "1", ",", "strides", "=", "1", ",", "activation", "=", "False", ")", "\n", "\n", "if", "strides", "==", "1", "and", "x", ".", "shape", "[", "-", "1", "]", "==", "x_input", ".", "shape", "[", "-", "1", "]", ":", "\n", "                ", "if", "drop_connect_rate", ":", "\n", "                    ", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Dropout", "(", "rate", "=", "drop_connect_rate", ")", "(", "x", ")", "\n", "", "x", "=", "tf", ".", "keras", ".", "layers", ".", "add", "(", "[", "x_input", ",", "x", "]", ")", "\n", "", "return", "x", "\n", "\n", "", "def", "MBConv", "(", "x", ",", "filters", ",", "drop_connect_rate", ",", "kernel_size", ",", "strides", ",", "t", ",", "n", ")", ":", "\n", "            ", "x", "=", "MBConv_idskip", "(", "x", ",", "filters", ",", "drop_connect_rate", ",", "kernel_size", ",", "strides", ",", "t", ")", "\n", "for", "_", "in", "range", "(", "1", ",", "n", ")", ":", "\n", "                ", "x", "=", "MBConv_idskip", "(", "x", ",", "filters", ",", "drop_connect_rate", ",", "kernel_size", ",", "1", ",", "t", ")", "\n", "", "return", "x", "\n", "\n", "", "print", "(", "self", ".", "alpha", ",", "self", ".", "beta", ",", "self", ".", "gamma", ",", "self", ".", "dropout_rate", ")", "\n", "\n", "x", "=", "conv_bn_0", "(", "\n", "allbands", ",", "\n", "round_filters", "(", "32", ",", "self", ".", "beta", ")", ",", "\n", "kernel_size", "=", "3", ",", "\n", "strides", "=", "2", ",", "\n", "activation", "=", "True", ",", "\n", ")", "\n", "x", "=", "MBConv", "(", "\n", "x", ",", "\n", "filters", "=", "round_filters", "(", "16", ",", "self", ".", "beta", ")", ",", "\n", "kernel_size", "=", "3", ",", "\n", "drop_connect_rate", "=", "self", ".", "dropout_rate", ",", "\n", "strides", "=", "1", ",", "\n", "t", "=", "1", ",", "\n", "n", "=", "round_repeats", "(", "1", ",", "self", ".", "alpha", ")", ",", "\n", ")", "\n", "x", "=", "MBConv", "(", "\n", "x", ",", "\n", "filters", "=", "round_filters", "(", "24", ",", "self", ".", "beta", ")", ",", "\n", "kernel_size", "=", "3", ",", "\n", "drop_connect_rate", "=", "self", ".", "dropout_rate", ",", "\n", "strides", "=", "2", ",", "\n", "t", "=", "6", ",", "\n", "n", "=", "round_repeats", "(", "2", ",", "self", ".", "alpha", ")", ",", "\n", ")", "\n", "x", "=", "MBConv", "(", "\n", "x", ",", "\n", "filters", "=", "round_filters", "(", "40", ",", "self", ".", "beta", ")", ",", "\n", "kernel_size", "=", "5", ",", "\n", "drop_connect_rate", "=", "self", ".", "dropout_rate", ",", "\n", "strides", "=", "2", ",", "\n", "t", "=", "6", ",", "\n", "n", "=", "round_repeats", "(", "2", ",", "self", ".", "alpha", ")", ",", "\n", ")", "\n", "x", "=", "MBConv", "(", "\n", "x", ",", "\n", "filters", "=", "round_filters", "(", "80", ",", "self", ".", "beta", ")", ",", "\n", "kernel_size", "=", "3", ",", "\n", "drop_connect_rate", "=", "self", ".", "dropout_rate", ",", "\n", "strides", "=", "2", ",", "\n", "t", "=", "6", ",", "\n", "n", "=", "round_repeats", "(", "3", ",", "self", ".", "alpha", ")", ",", "\n", ")", "\n", "x", "=", "MBConv", "(", "\n", "x", ",", "\n", "filters", "=", "round_filters", "(", "112", ",", "self", ".", "beta", ")", ",", "\n", "kernel_size", "=", "5", ",", "\n", "drop_connect_rate", "=", "self", ".", "dropout_rate", ",", "\n", "strides", "=", "1", ",", "\n", "t", "=", "6", ",", "\n", "n", "=", "round_repeats", "(", "3", ",", "self", ".", "alpha", ")", ",", "\n", ")", "\n", "x", "=", "MBConv", "(", "\n", "x", ",", "\n", "filters", "=", "round_filters", "(", "192", ",", "self", ".", "beta", ")", ",", "\n", "kernel_size", "=", "5", ",", "\n", "drop_connect_rate", "=", "self", ".", "dropout_rate", ",", "\n", "strides", "=", "2", ",", "\n", "t", "=", "6", ",", "\n", "n", "=", "round_repeats", "(", "4", ",", "self", ".", "alpha", ")", ",", "\n", ")", "\n", "x", "=", "MBConv", "(", "\n", "x", ",", "\n", "filters", "=", "round_filters", "(", "320", ",", "self", ".", "beta", ")", ",", "\n", "kernel_size", "=", "3", ",", "\n", "drop_connect_rate", "=", "self", ".", "dropout_rate", ",", "\n", "strides", "=", "1", ",", "\n", "t", "=", "6", ",", "\n", "n", "=", "round_repeats", "(", "1", ",", "self", ".", "alpha", ")", ",", "\n", ")", "\n", "\n", "x", "=", "conv_bn_0", "(", "\n", "x", ",", "filters", "=", "round_filters", "(", "1280", ",", "self", ".", "beta", ")", ",", "kernel_size", "=", "1", ",", "strides", "=", "1", "\n", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "GlobalAveragePooling2D", "(", ")", "(", "x", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Dropout", "(", "rate", "=", "self", ".", "dropout_rate", ")", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.WideResNet.__init__": [[682, 700], ["models.BigEarthModel.__init__", "tuple", "int", "math.ceil"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.metrics.CustomMetrics.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nb_class", ",", "coefficients", ",", "modality", ")", ":", "\n", "        ", "self", ".", "phi", "=", "coefficients", "[", "\"phi\"", "]", "\n", "self", ".", "alpha", "=", "coefficients", "[", "\"alpha\"", "]", "**", "self", ".", "phi", "\n", "self", ".", "beta", "=", "coefficients", "[", "\"beta\"", "]", "**", "self", ".", "phi", "\n", "self", ".", "gamma", "=", "coefficients", "[", "\"gamma\"", "]", "**", "self", ".", "phi", "\n", "self", ".", "dropout_rate", "=", "coefficients", "[", "\"dropout\"", "]", "\n", "self", ".", "attention_addition", "=", "True", "\n", "self", ".", "attention_module", "=", "(", "\n", "eca_module", "# se_module, cbam_module, coord_module, eca_module", "\n", ")", "\n", "self", ".", "ghost_conv", "=", "False", "\n", "super", "(", ")", ".", "__init__", "(", "\n", "nb_class", ",", "\n", "tuple", "(", "\n", "int", "(", "math", ".", "ceil", "(", "dimension", "*", "self", ".", "gamma", "/", "10.0", ")", ")", "*", "10", "\n", "for", "dimension", "in", "(", "60", ",", "60", ")", "\n", ")", ",", "\n", "modality", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.WideResNet._create_model_logits": [[702, 954], ["models.WideResNet._create_model_logits.WResNet"], "methods", ["None"], ["", "def", "_create_model_logits", "(", "self", ",", "allbands", ")", ":", "\n", "        ", "def", "_make_divisible", "(", "value", ",", "divisor", "=", "4", ",", "min_value", "=", "None", ")", ":", "\n", "            ", "if", "min_value", "is", "None", ":", "\n", "                ", "min_value", "=", "divisor", "\n", "", "new_value", "=", "max", "(", "min_value", ",", "int", "(", "value", "+", "divisor", "/", "2", ")", "//", "divisor", "*", "divisor", ")", "\n", "# Make sure that round-down does not exceed 10%.", "\n", "if", "new_value", "<", "0.9", "*", "value", ":", "\n", "                ", "new_value", "+=", "divisor", "\n", "", "return", "new_value", "\n", "\n", "", "def", "initial_conv", "(", "input", ")", ":", "\n", "            ", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Conv2D", "(", "\n", "16", ",", "\n", "(", "3", ",", "3", ")", ",", "\n", "padding", "=", "\"same\"", ",", "\n", "kernel_initializer", "=", "\"he_normal\"", ",", "\n", "kernel_regularizer", "=", "tf", ".", "keras", ".", "regularizers", ".", "l2", "(", "5e-4", ")", ",", "\n", "use_bias", "=", "False", ",", "\n", ")", "(", "input", ")", "\n", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "BatchNormalization", "(", "\n", "momentum", "=", "0.1", ",", "epsilon", "=", "1e-5", ",", "gamma_initializer", "=", "\"uniform\"", "\n", ")", "(", "x", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "return", "x", "\n", "\n", "", "def", "expand_conv", "(", "init", ",", "base", ",", "k", ",", "strides", "=", "(", "1", ",", "1", ")", ")", ":", "\n", "            ", "if", "self", ".", "ghost_conv", ":", "\n", "                ", "x", "=", "ghost_module", "(", "init", ",", "_make_divisible", "(", "base", "*", "k", ")", ",", "(", "3", ",", "3", ")", ",", "strides", ")", "\n", "", "else", ":", "\n", "                ", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Conv2D", "(", "\n", "_make_divisible", "(", "base", "*", "k", ")", ",", "\n", "(", "3", ",", "3", ")", ",", "\n", "padding", "=", "\"same\"", ",", "\n", "strides", "=", "strides", ",", "\n", "kernel_initializer", "=", "\"he_normal\"", ",", "\n", "kernel_regularizer", "=", "tf", ".", "keras", ".", "regularizers", ".", "l2", "(", "5e-4", ")", ",", "\n", "use_bias", "=", "False", ",", "\n", ")", "(", "init", ")", "\n", "\n", "", "x", "=", "tf", ".", "keras", ".", "layers", ".", "BatchNormalization", "(", "\n", "momentum", "=", "0.1", ",", "epsilon", "=", "1e-5", ",", "gamma_initializer", "=", "\"uniform\"", "\n", ")", "(", "x", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "\n", "if", "self", ".", "ghost_conv", ":", "\n", "                ", "x", "=", "ghost_module", "(", "x", ",", "_make_divisible", "(", "base", "*", "k", ")", ",", "(", "3", ",", "3", ")", ",", "1", ")", "\n", "", "else", ":", "\n", "                ", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Conv2D", "(", "\n", "_make_divisible", "(", "base", "*", "k", ")", ",", "\n", "(", "3", ",", "3", ")", ",", "\n", "padding", "=", "\"same\"", ",", "\n", "kernel_initializer", "=", "\"he_normal\"", ",", "\n", "kernel_regularizer", "=", "tf", ".", "keras", ".", "regularizers", ".", "l2", "(", "5e-4", ")", ",", "\n", "use_bias", "=", "False", ",", "\n", ")", "(", "x", ")", "\n", "", "if", "self", ".", "attention_addition", ":", "\n", "                ", "x", "=", "self", ".", "attention_module", "(", "x", ")", "\n", "\n", "", "if", "self", ".", "ghost_conv", ":", "\n", "                ", "skip", "=", "ghost_module", "(", "init", ",", "_make_divisible", "(", "base", "*", "k", ")", ",", "(", "1", ",", "1", ")", ",", "strides", ")", "\n", "", "else", ":", "\n", "                ", "skip", "=", "tf", ".", "keras", ".", "layers", ".", "Conv2D", "(", "\n", "_make_divisible", "(", "base", "*", "k", ")", ",", "\n", "(", "1", ",", "1", ")", ",", "\n", "padding", "=", "\"same\"", ",", "\n", "strides", "=", "strides", ",", "\n", "kernel_initializer", "=", "\"he_normal\"", ",", "\n", "kernel_regularizer", "=", "tf", ".", "keras", ".", "regularizers", ".", "l2", "(", "5e-4", ")", ",", "\n", "use_bias", "=", "False", ",", "\n", ")", "(", "init", ")", "\n", "", "m", "=", "Add", "(", ")", "(", "[", "x", ",", "skip", "]", ")", "\n", "return", "m", "\n", "\n", "", "def", "conv1_block", "(", "input", ",", "k", "=", "1", ",", "dropout", "=", "0.0", ")", ":", "\n", "            ", "init", "=", "input", "\n", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "BatchNormalization", "(", "\n", "momentum", "=", "0.1", ",", "epsilon", "=", "1e-5", ",", "gamma_initializer", "=", "\"uniform\"", "\n", ")", "(", "input", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "if", "self", ".", "ghost_conv", ":", "\n", "                ", "x", "=", "ghost_module", "(", "x", ",", "_make_divisible", "(", "16", "*", "k", ")", ",", "(", "3", ",", "3", ")", ",", "1", ")", "\n", "", "else", ":", "\n", "                ", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Conv2D", "(", "\n", "_make_divisible", "(", "16", "*", "k", ")", ",", "\n", "(", "3", ",", "3", ")", ",", "\n", "padding", "=", "\"same\"", ",", "\n", "kernel_initializer", "=", "\"he_normal\"", ",", "\n", "kernel_regularizer", "=", "tf", ".", "keras", ".", "regularizers", ".", "l2", "(", "5e-4", ")", ",", "\n", "use_bias", "=", "False", ",", "\n", ")", "(", "x", ")", "\n", "\n", "", "if", "dropout", ">", "0.0", ":", "\n", "                ", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Dropout", "(", "dropout", ")", "(", "x", ")", "\n", "\n", "", "x", "=", "tf", ".", "keras", ".", "layers", ".", "BatchNormalization", "(", "\n", "momentum", "=", "0.1", ",", "epsilon", "=", "1e-5", ",", "gamma_initializer", "=", "\"uniform\"", "\n", ")", "(", "x", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "if", "self", ".", "ghost_conv", ":", "\n", "                ", "x", "=", "ghost_module", "(", "x", ",", "_make_divisible", "(", "16", "*", "k", ")", ",", "(", "3", ",", "3", ")", ",", "1", ")", "\n", "", "else", ":", "\n", "                ", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Conv2D", "(", "\n", "_make_divisible", "(", "16", "*", "k", ")", ",", "\n", "(", "3", ",", "3", ")", ",", "\n", "padding", "=", "\"same\"", ",", "\n", "kernel_initializer", "=", "\"he_normal\"", ",", "\n", "kernel_regularizer", "=", "tf", ".", "keras", ".", "regularizers", ".", "l2", "(", "5e-4", ")", ",", "\n", "use_bias", "=", "False", ",", "\n", ")", "(", "x", ")", "\n", "", "if", "self", ".", "attention_addition", ":", "\n", "                ", "x", "=", "self", ".", "attention_module", "(", "x", ")", "\n", "\n", "", "m", "=", "Add", "(", ")", "(", "[", "init", ",", "x", "]", ")", "\n", "return", "m", "\n", "\n", "", "def", "conv2_block", "(", "input", ",", "k", "=", "1", ",", "dropout", "=", "0.0", ")", ":", "\n", "            ", "init", "=", "input", "\n", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "BatchNormalization", "(", "\n", "momentum", "=", "0.1", ",", "epsilon", "=", "1e-5", ",", "gamma_initializer", "=", "\"uniform\"", "\n", ")", "(", "init", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "if", "self", ".", "ghost_conv", ":", "\n", "                ", "x", "=", "ghost_module", "(", "x", ",", "_make_divisible", "(", "32", "*", "k", ")", ",", "(", "3", ",", "3", ")", ",", "1", ")", "\n", "", "else", ":", "\n", "                ", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Conv2D", "(", "\n", "_make_divisible", "(", "32", "*", "k", ")", ",", "\n", "(", "3", ",", "3", ")", ",", "\n", "padding", "=", "\"same\"", ",", "\n", "kernel_initializer", "=", "\"he_normal\"", ",", "\n", "kernel_regularizer", "=", "tf", ".", "keras", ".", "regularizers", ".", "l2", "(", "5e-4", ")", ",", "\n", "use_bias", "=", "False", ",", "\n", ")", "(", "x", ")", "\n", "\n", "", "if", "dropout", ">", "0.0", ":", "\n", "                ", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Dropout", "(", "dropout", ")", "(", "x", ")", "\n", "\n", "", "x", "=", "tf", ".", "keras", ".", "layers", ".", "BatchNormalization", "(", "\n", "momentum", "=", "0.1", ",", "epsilon", "=", "1e-5", ",", "gamma_initializer", "=", "\"uniform\"", "\n", ")", "(", "x", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "if", "self", ".", "ghost_conv", ":", "\n", "                ", "x", "=", "ghost_module", "(", "x", ",", "_make_divisible", "(", "32", "*", "k", ")", ",", "(", "3", ",", "3", ")", ",", "1", ")", "\n", "", "else", ":", "\n", "                ", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Conv2D", "(", "\n", "_make_divisible", "(", "32", "*", "k", ")", ",", "\n", "(", "3", ",", "3", ")", ",", "\n", "padding", "=", "\"same\"", ",", "\n", "kernel_initializer", "=", "\"he_normal\"", ",", "\n", "kernel_regularizer", "=", "tf", ".", "keras", ".", "regularizers", ".", "l2", "(", "5e-4", ")", ",", "\n", "use_bias", "=", "False", ",", "\n", ")", "(", "x", ")", "\n", "", "if", "self", ".", "attention_addition", ":", "\n", "                ", "x", "=", "self", ".", "attention_module", "(", "x", ")", "\n", "\n", "", "m", "=", "Add", "(", ")", "(", "[", "init", ",", "x", "]", ")", "\n", "return", "m", "\n", "\n", "", "def", "conv3_block", "(", "input", ",", "k", "=", "1", ",", "dropout", "=", "0.0", ")", ":", "\n", "            ", "init", "=", "input", "\n", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "BatchNormalization", "(", "\n", "momentum", "=", "0.1", ",", "epsilon", "=", "1e-5", ",", "gamma_initializer", "=", "\"uniform\"", "\n", ")", "(", "input", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "if", "self", ".", "ghost_conv", ":", "\n", "                ", "x", "=", "ghost_module", "(", "x", ",", "_make_divisible", "(", "64", "*", "k", ")", ",", "(", "3", ",", "3", ")", ",", "1", ")", "\n", "", "else", ":", "\n", "                ", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Conv2D", "(", "\n", "_make_divisible", "(", "64", "*", "k", ")", ",", "\n", "(", "3", ",", "3", ")", ",", "\n", "padding", "=", "\"same\"", ",", "\n", "kernel_initializer", "=", "\"he_normal\"", ",", "\n", "kernel_regularizer", "=", "tf", ".", "keras", ".", "regularizers", ".", "l2", "(", "5e-4", ")", ",", "\n", "use_bias", "=", "False", ",", "\n", ")", "(", "x", ")", "\n", "\n", "", "if", "dropout", ">", "0.0", ":", "\n", "                ", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Dropout", "(", "dropout", ")", "(", "x", ")", "\n", "\n", "", "x", "=", "tf", ".", "keras", ".", "layers", ".", "BatchNormalization", "(", "\n", "momentum", "=", "0.1", ",", "epsilon", "=", "1e-5", ",", "gamma_initializer", "=", "\"uniform\"", "\n", ")", "(", "x", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "if", "self", ".", "ghost_conv", ":", "\n", "                ", "x", "=", "ghost_module", "(", "x", ",", "_make_divisible", "(", "64", "*", "k", ")", ",", "(", "3", ",", "3", ")", ",", "1", ")", "\n", "", "else", ":", "\n", "                ", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Conv2D", "(", "\n", "_make_divisible", "(", "64", "*", "k", ")", ",", "\n", "(", "3", ",", "3", ")", ",", "\n", "padding", "=", "\"same\"", ",", "\n", "kernel_initializer", "=", "\"he_normal\"", ",", "\n", "kernel_regularizer", "=", "tf", ".", "keras", ".", "regularizers", ".", "l2", "(", "5e-4", ")", ",", "\n", "use_bias", "=", "False", ",", "\n", ")", "(", "x", ")", "\n", "", "if", "self", ".", "attention_addition", ":", "\n", "                ", "x", "=", "self", ".", "attention_module", "(", "x", ")", "\n", "\n", "", "m", "=", "Add", "(", ")", "(", "[", "init", ",", "x", "]", ")", "\n", "return", "m", "\n", "\n", "", "def", "WResNet", "(", "depth", "=", "16", ",", "k", "=", "2", ",", "dropout", "=", "self", ".", "dropout_rate", ")", ":", "\n", "# assert (depth - 4) % 6 == 0, 'depth should be 6n+4'", "\n", "            ", "N", "=", "int", "(", "(", "depth", "-", "4", ")", "//", "6", "*", "self", ".", "alpha", ")", "\n", "\n", "x", "=", "initial_conv", "(", "allbands", ")", "\n", "nb_conv", "=", "4", "\n", "\n", "x", "=", "expand_conv", "(", "x", ",", "16", ",", "k", ")", "\n", "nb_conv", "+=", "2", "\n", "\n", "for", "_", "in", "range", "(", "N", "-", "1", ")", ":", "\n", "                ", "x", "=", "conv1_block", "(", "x", ",", "k", ",", "dropout", ")", "\n", "nb_conv", "+=", "2", "\n", "\n", "", "x", "=", "tf", ".", "keras", ".", "layers", ".", "BatchNormalization", "(", "\n", "momentum", "=", "0.1", ",", "epsilon", "=", "1e-5", ",", "gamma_initializer", "=", "\"uniform\"", "\n", ")", "(", "x", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "\n", "x", "=", "expand_conv", "(", "x", ",", "32", ",", "k", ",", "strides", "=", "(", "2", ",", "2", ")", ")", "\n", "nb_conv", "+=", "2", "\n", "\n", "for", "_", "in", "range", "(", "N", "-", "1", ")", ":", "\n", "                ", "x", "=", "conv2_block", "(", "x", ",", "k", ",", "dropout", ")", "\n", "nb_conv", "+=", "2", "\n", "\n", "", "x", "=", "tf", ".", "keras", ".", "layers", ".", "BatchNormalization", "(", "\n", "momentum", "=", "0.1", ",", "epsilon", "=", "1e-5", ",", "gamma_initializer", "=", "\"uniform\"", "\n", ")", "(", "x", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "\n", "x", "=", "expand_conv", "(", "x", ",", "64", ",", "k", ",", "strides", "=", "(", "2", ",", "2", ")", ")", "\n", "nb_conv", "+=", "2", "\n", "\n", "for", "_", "in", "range", "(", "N", "-", "1", ")", ":", "\n", "                ", "x", "=", "conv3_block", "(", "x", ",", "k", ",", "dropout", ")", "\n", "nb_conv", "+=", "2", "\n", "\n", "", "x", "=", "tf", ".", "keras", ".", "layers", ".", "BatchNormalization", "(", "\n", "momentum", "=", "0.1", ",", "epsilon", "=", "1e-5", ",", "gamma_initializer", "=", "\"uniform\"", "\n", ")", "(", "x", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "AveragePooling2D", "(", "(", "8", ",", "8", ")", ")", "(", "x", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "GlobalAveragePooling2D", "(", ")", "(", "x", ")", "\n", "\n", "print", "(", "\"Wide Residual Network-{}-{} created.\"", ".", "format", "(", "nb_conv", ",", "int", "(", "k", ")", ")", ")", "\n", "return", "x", "\n", "\n", "", "return", "WResNet", "(", "10", "*", "self", ".", "alpha", ",", "2", "*", "self", ".", "beta", ",", "self", ".", "dropout_rate", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.EfficientNetB0.__init__": [[957, 959], ["models.BigEarthModel.__init__"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.metrics.CustomMetrics.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nb_class", ",", "modality", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nb_class", ",", "modality", "=", "modality", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.EfficientNetB0._create_model_logits": [[960, 971], ["tensorflow.keras.applications.EfficientNetB0"], "methods", ["None"], ["", "def", "_create_model_logits", "(", "self", ",", "allbands", ")", ":", "\n", "        ", "num_bands", "=", "self", ".", "_num_bands", "\n", "# Add VGG19", "\n", "x", "=", "tf", ".", "keras", ".", "applications", ".", "EfficientNetB0", "(", "\n", "include_top", "=", "False", ",", "\n", "weights", "=", "None", ",", "\n", "input_shape", "=", "(", "120", ",", "120", ",", "num_bands", ")", ",", "\n", "pooling", "=", "\"avg\"", ",", "\n", ")", "(", "allbands", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.EfficientNetB1.__init__": [[974, 976], ["models.BigEarthModel.__init__"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.metrics.CustomMetrics.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nb_class", ",", "modality", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nb_class", ",", "modality", "=", "modality", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.EfficientNetB1._create_model_logits": [[977, 988], ["tensorflow.keras.applications.EfficientNetB1"], "methods", ["None"], ["", "def", "_create_model_logits", "(", "self", ",", "allbands", ")", ":", "\n", "        ", "num_bands", "=", "self", ".", "_num_bands", "\n", "# Add VGG19", "\n", "x", "=", "tf", ".", "keras", ".", "applications", ".", "EfficientNetB1", "(", "\n", "include_top", "=", "False", ",", "\n", "weights", "=", "None", ",", "\n", "input_shape", "=", "(", "120", ",", "120", ",", "num_bands", ")", ",", "\n", "pooling", "=", "\"avg\"", ",", "\n", ")", "(", "allbands", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.EfficientNetB2.__init__": [[991, 993], ["models.BigEarthModel.__init__"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.metrics.CustomMetrics.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nb_class", ",", "modality", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nb_class", ",", "modality", "=", "modality", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.EfficientNetB2._create_model_logits": [[994, 1005], ["tensorflow.keras.applications.EfficientNetB2"], "methods", ["None"], ["", "def", "_create_model_logits", "(", "self", ",", "allbands", ")", ":", "\n", "        ", "num_bands", "=", "self", ".", "_num_bands", "\n", "# Add VGG19", "\n", "x", "=", "tf", ".", "keras", ".", "applications", ".", "EfficientNetB2", "(", "\n", "include_top", "=", "False", ",", "\n", "weights", "=", "None", ",", "\n", "input_shape", "=", "(", "120", ",", "120", ",", "num_bands", ")", ",", "\n", "pooling", "=", "\"avg\"", ",", "\n", ")", "(", "allbands", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.EfficientNetB3.__init__": [[1008, 1010], ["models.BigEarthModel.__init__"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.metrics.CustomMetrics.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nb_class", ",", "modality", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nb_class", ",", "modality", "=", "modality", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.EfficientNetB3._create_model_logits": [[1011, 1022], ["tensorflow.keras.applications.EfficientNetB3"], "methods", ["None"], ["", "def", "_create_model_logits", "(", "self", ",", "allbands", ")", ":", "\n", "        ", "num_bands", "=", "self", ".", "_num_bands", "\n", "# Add VGG19", "\n", "x", "=", "tf", ".", "keras", ".", "applications", ".", "EfficientNetB3", "(", "\n", "include_top", "=", "False", ",", "\n", "weights", "=", "None", ",", "\n", "input_shape", "=", "(", "120", ",", "120", ",", "num_bands", ")", ",", "\n", "pooling", "=", "\"avg\"", ",", "\n", ")", "(", "allbands", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.EfficientNetB4.__init__": [[1025, 1027], ["models.BigEarthModel.__init__"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.metrics.CustomMetrics.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nb_class", ",", "modality", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nb_class", ",", "modality", "=", "modality", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.EfficientNetB4._create_model_logits": [[1028, 1039], ["tensorflow.keras.applications.EfficientNetB4"], "methods", ["None"], ["", "def", "_create_model_logits", "(", "self", ",", "allbands", ")", ":", "\n", "        ", "num_bands", "=", "self", ".", "_num_bands", "\n", "# Add VGG19", "\n", "x", "=", "tf", ".", "keras", ".", "applications", ".", "EfficientNetB4", "(", "\n", "include_top", "=", "False", ",", "\n", "weights", "=", "None", ",", "\n", "input_shape", "=", "(", "120", ",", "120", ",", "num_bands", ")", ",", "\n", "pooling", "=", "\"avg\"", ",", "\n", ")", "(", "allbands", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.EfficientNetB5.__init__": [[1042, 1044], ["models.BigEarthModel.__init__"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.metrics.CustomMetrics.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nb_class", ",", "modality", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nb_class", ",", "modality", "=", "modality", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.EfficientNetB5._create_model_logits": [[1045, 1056], ["tensorflow.keras.applications.EfficientNetB5"], "methods", ["None"], ["", "def", "_create_model_logits", "(", "self", ",", "allbands", ")", ":", "\n", "        ", "num_bands", "=", "self", ".", "_num_bands", "\n", "# Add VGG19", "\n", "x", "=", "tf", ".", "keras", ".", "applications", ".", "EfficientNetB5", "(", "\n", "include_top", "=", "False", ",", "\n", "weights", "=", "None", ",", "\n", "input_shape", "=", "(", "120", ",", "120", ",", "num_bands", ")", ",", "\n", "pooling", "=", "\"avg\"", ",", "\n", ")", "(", "allbands", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.EfficientNetB6.__init__": [[1059, 1061], ["models.BigEarthModel.__init__"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.metrics.CustomMetrics.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nb_class", ",", "modality", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nb_class", ",", "modality", "=", "modality", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.EfficientNetB6._create_model_logits": [[1062, 1073], ["tensorflow.keras.applications.EfficientNetB6"], "methods", ["None"], ["", "def", "_create_model_logits", "(", "self", ",", "allbands", ")", ":", "\n", "        ", "num_bands", "=", "self", ".", "_num_bands", "\n", "# Add VGG19", "\n", "x", "=", "tf", ".", "keras", ".", "applications", ".", "EfficientNetB6", "(", "\n", "include_top", "=", "False", ",", "\n", "weights", "=", "None", ",", "\n", "input_shape", "=", "(", "120", ",", "120", ",", "num_bands", ")", ",", "\n", "pooling", "=", "\"avg\"", ",", "\n", ")", "(", "allbands", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.EfficientNetB7.__init__": [[1076, 1078], ["models.BigEarthModel.__init__"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.metrics.CustomMetrics.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nb_class", ",", "modality", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nb_class", ",", "modality", "=", "modality", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.EfficientNetB7._create_model_logits": [[1079, 1090], ["tensorflow.keras.applications.EfficientNetB7"], "methods", ["None"], ["", "def", "_create_model_logits", "(", "self", ",", "allbands", ")", ":", "\n", "        ", "num_bands", "=", "self", ".", "_num_bands", "\n", "# Add VGG19", "\n", "x", "=", "tf", ".", "keras", ".", "applications", ".", "EfficientNetB7", "(", "\n", "include_top", "=", "False", ",", "\n", "weights", "=", "None", ",", "\n", "input_shape", "=", "(", "120", ",", "120", ",", "num_bands", ")", ",", "\n", "pooling", "=", "\"avg\"", ",", "\n", ")", "(", "allbands", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.__init__": [[1093, 1095], ["models.BigEarthModel.__init__"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.metrics.CustomMetrics.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nb_class", ",", "modality", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nb_class", ",", "modality", "=", "modality", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.fully_connected_block": [[1096, 1111], ["tensorflow.nn.relu", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.BatchNormalization", "tensorflow.keras.initializers.GlorotNormal", "tensorflow.keras.initializers.Zeros", "tensorflow.keras.regularizers.l2"], "methods", ["None"], ["", "def", "fully_connected_block", "(", "self", ",", "inputs", ",", "nb_neurons", ",", "name", ")", ":", "\n", "        ", "fully_connected_res", "=", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "\n", "units", "=", "nb_neurons", ",", "\n", "activation", "=", "None", ",", "\n", "use_bias", "=", "True", ",", "\n", "kernel_initializer", "=", "tf", ".", "keras", ".", "initializers", ".", "GlorotNormal", "(", "seed", "=", "SEED", ")", ",", "\n", "bias_initializer", "=", "tf", ".", "keras", ".", "initializers", ".", "Zeros", "(", ")", ",", "\n", "kernel_regularizer", "=", "tf", ".", "keras", ".", "regularizers", ".", "l2", "(", "l", "=", "2e-5", ")", ",", "\n", "bias_regularizer", "=", "None", ",", "\n", "activity_regularizer", "=", "None", ",", "\n", "trainable", "=", "True", ",", "\n", "name", "=", "name", ",", "\n", ")", "(", "inputs", ")", "\n", "batch_res", "=", "tf", ".", "keras", ".", "layers", ".", "BatchNormalization", "(", ")", "(", "fully_connected_res", ")", "\n", "return", "tf", ".", "nn", ".", "relu", "(", "features", "=", "batch_res", ",", "name", "=", "\"relu\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.conv_block": [[1112, 1133], ["tensorflow.nn.relu", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.BatchNormalization", "tensorflow.keras.initializers.GlorotNormal", "tensorflow.keras.initializers.Zeros", "tensorflow.keras.regularizers.l2"], "methods", ["None"], ["", "def", "conv_block", "(", "self", ",", "inputs", ",", "nb_filter", ",", "filter_size", ",", "name", ")", ":", "\n", "        ", "conv_res", "=", "tf", ".", "keras", ".", "layers", ".", "Conv2D", "(", "\n", "filters", "=", "nb_filter", ",", "\n", "kernel_size", "=", "filter_size", ",", "\n", "strides", "=", "(", "1", ",", "1", ")", ",", "\n", "padding", "=", "\"same\"", ",", "\n", "data_format", "=", "\"channels_last\"", ",", "\n", "dilation_rate", "=", "(", "1", ",", "1", ")", ",", "\n", "activation", "=", "None", ",", "\n", "use_bias", "=", "True", ",", "\n", "kernel_initializer", "=", "tf", ".", "keras", ".", "initializers", ".", "GlorotNormal", "(", "seed", "=", "SEED", ")", ",", "\n", "bias_initializer", "=", "tf", ".", "keras", ".", "initializers", ".", "Zeros", "(", ")", ",", "\n", "kernel_regularizer", "=", "tf", ".", "keras", ".", "regularizers", ".", "l2", "(", "l", "=", "2e-5", ")", ",", "\n", "bias_regularizer", "=", "None", ",", "\n", "activity_regularizer", "=", "None", ",", "\n", "trainable", "=", "True", ",", "\n", "name", "=", "name", ",", "\n", ")", "(", "inputs", ")", "\n", "batch_res", "=", "tf", ".", "keras", ".", "layers", ".", "BatchNormalization", "(", ")", "(", "conv_res", ")", "\n", "\n", "return", "tf", ".", "nn", ".", "relu", "(", "features", "=", "batch_res", ",", "name", "=", "\"relu\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.pooling": [[1134, 1142], ["tensorflow.nn.max_pool"], "methods", ["None"], ["", "def", "pooling", "(", "self", ",", "inputs", ",", "name", ")", ":", "\n", "        ", "return", "tf", ".", "nn", ".", "max_pool", "(", "\n", "input", "=", "inputs", ",", "\n", "ksize", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "\n", "strides", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "\n", "padding", "=", "\"VALID\"", ",", "\n", "data_format", "=", "\"NHWC\"", ",", "\n", "name", "=", "name", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.dropout": [[1144, 1147], ["tensorflow.nn.dropout"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.dropout"], ["", "def", "dropout", "(", "self", ",", "inputs", ",", "drop_rate", ",", "name", ")", ":", "\n", "        ", "return", "tf", ".", "nn", ".", "dropout", "(", "\n", "inputs", ",", "rate", "=", "drop_rate", ",", "noise_shape", "=", "None", ",", "seed", "=", "SEED", ",", "name", "=", "name", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.convert_image_to_uint8": [[1149, 1158], ["tensorflow.map_fn", "tensorflow.image.convert_image_dtype", "tensorflow.image.per_image_standardization"], "methods", ["None"], ["", "def", "convert_image_to_uint8", "(", "self", ",", "img_batch", ")", ":", "\n", "        ", "return", "tf", ".", "map_fn", "(", "\n", "lambda", "x", ":", "tf", ".", "image", ".", "convert_image_dtype", "(", "\n", "(", "tf", ".", "image", ".", "per_image_standardization", "(", "x", ")", "+", "1.0", ")", "/", "2.0", ",", "\n", "dtype", "=", "tf", ".", "uint8", ",", "\n", "saturate", "=", "True", ",", "\n", ")", ",", "\n", "img_batch", ",", "\n", "dtype", "=", "tf", ".", "uint8", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.branch_model_10m": [[1160, 1174], ["models.DNN_model.conv_block", "models.DNN_model.pooling", "models.DNN_model.dropout", "models.DNN_model.conv_block", "models.DNN_model.pooling", "models.DNN_model.dropout", "models.DNN_model.conv_block", "models.DNN_model.dropout", "models.DNN_model.fully_connected_block", "models.DNN_model.dropout", "tensorflow.keras.layers.Flatten"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.conv_block", "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.pooling", "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.dropout", "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.conv_block", "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.pooling", "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.dropout", "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.conv_block", "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.dropout", "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.fully_connected_block", "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.dropout"], ["", "def", "branch_model_10m", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv_block", "(", "inputs", ",", "32", ",", "[", "5", ",", "5", "]", ",", "\"conv_block_10_0\"", ")", "\n", "out", "=", "self", ".", "pooling", "(", "out", ",", "\"max_pooling_10\"", ")", "\n", "out", "=", "self", ".", "dropout", "(", "out", ",", "0.25", ",", "\"dropout_10_0\"", ")", "\n", "\n", "out", "=", "self", ".", "conv_block", "(", "out", ",", "32", ",", "[", "5", ",", "5", "]", ",", "\"conv_block_10_1\"", ")", "\n", "out", "=", "self", ".", "pooling", "(", "out", ",", "\"max_pooling_10_1\"", ")", "\n", "out", "=", "self", ".", "dropout", "(", "out", ",", "0.25", ",", "\"dropout_10_1\"", ")", "\n", "out", "=", "self", ".", "conv_block", "(", "out", ",", "64", ",", "[", "3", ",", "3", "]", ",", "\"conv_block_10_2\"", ")", "\n", "out", "=", "self", ".", "dropout", "(", "out", ",", "0.25", ",", "\"dropout_10_2\"", ")", "\n", "out", "=", "tf", ".", "keras", ".", "layers", ".", "Flatten", "(", ")", "(", "out", ")", "\n", "out", "=", "self", ".", "fully_connected_block", "(", "out", ",", "self", ".", "feature_size", ",", "\"fc_block_10_0\"", ")", "\n", "feature", "=", "self", ".", "dropout", "(", "out", ",", "0.5", ",", "\"dropout_10_3\"", ")", "\n", "return", "feature", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.branch_model_20m": [[1175, 1187], ["models.DNN_model.conv_block", "models.DNN_model.pooling", "models.DNN_model.dropout", "models.DNN_model.conv_block", "models.DNN_model.dropout", "models.DNN_model.conv_block", "models.DNN_model.dropout", "models.DNN_model.fully_connected_block", "models.DNN_model.dropout", "tensorflow.keras.layers.Flatten"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.conv_block", "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.pooling", "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.dropout", "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.conv_block", "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.dropout", "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.conv_block", "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.dropout", "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.fully_connected_block", "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.dropout"], ["", "def", "branch_model_20m", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv_block", "(", "inputs", ",", "32", ",", "[", "3", ",", "3", "]", ",", "\"conv_block_20_0\"", ")", "\n", "out", "=", "self", ".", "pooling", "(", "out", ",", "\"max_pooling_20_0\"", ")", "\n", "out", "=", "self", ".", "dropout", "(", "out", ",", "0.25", ",", "\"dropout_20_0\"", ")", "\n", "out", "=", "self", ".", "conv_block", "(", "out", ",", "32", ",", "[", "3", ",", "3", "]", ",", "\"conv_block_20_1\"", ")", "\n", "out", "=", "self", ".", "dropout", "(", "out", ",", "0.25", ",", "\"dropout_20_1\"", ")", "\n", "out", "=", "self", ".", "conv_block", "(", "out", ",", "64", ",", "[", "3", ",", "3", "]", ",", "\"conv_block_20_2\"", ")", "\n", "out", "=", "self", ".", "dropout", "(", "out", ",", "0.25", ",", "\"dropout_20_2\"", ")", "\n", "out", "=", "tf", ".", "keras", ".", "layers", ".", "Flatten", "(", ")", "(", "out", ")", "\n", "out", "=", "self", ".", "fully_connected_block", "(", "out", ",", "self", ".", "feature_size", ",", "\"fc_block_20_0\"", ")", "\n", "feature", "=", "self", ".", "dropout", "(", "out", ",", "0.5", ",", "\"dropout_20_3\"", ")", "\n", "return", "feature", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.branch_model_60m": [[1188, 1199], ["models.DNN_model.conv_block", "models.DNN_model.dropout", "models.DNN_model.conv_block", "models.DNN_model.dropout", "models.DNN_model.conv_block", "models.DNN_model.dropout", "models.DNN_model.fully_connected_block", "models.DNN_model.dropout", "tensorflow.keras.layers.Flatten"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.conv_block", "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.dropout", "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.conv_block", "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.dropout", "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.conv_block", "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.dropout", "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.fully_connected_block", "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.dropout"], ["", "def", "branch_model_60m", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv_block", "(", "inputs", ",", "32", ",", "[", "2", ",", "2", "]", ",", "\"conv_block_60_0\"", ")", "\n", "out", "=", "self", ".", "dropout", "(", "out", ",", "0.25", ",", "\"dropout_60_0\"", ")", "\n", "out", "=", "self", ".", "conv_block", "(", "out", ",", "32", ",", "[", "2", ",", "2", "]", ",", "\"conv_block_60_1\"", ")", "\n", "out", "=", "self", ".", "dropout", "(", "out", ",", "0.25", ",", "\"dropout_60_1\"", ")", "\n", "out", "=", "self", ".", "conv_block", "(", "out", ",", "32", ",", "[", "2", ",", "2", "]", ",", "\"conv_block_60_2\"", ")", "\n", "out", "=", "self", ".", "dropout", "(", "out", ",", "0.25", ",", "\"dropout_60_2\"", ")", "\n", "out", "=", "tf", ".", "keras", ".", "layers", ".", "Flatten", "(", ")", "(", "out", ")", "\n", "out", "=", "self", ".", "fully_connected_block", "(", "out", ",", "self", ".", "feature_size", ",", "\"fc_block_60_0\"", ")", "\n", "feature", "=", "self", ".", "dropout", "(", "out", ",", "0.5", ",", "\"dropout_60_3\"", ")", "\n", "return", "feature", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model._create_model_logits": [[1200, 1222], ["zip", "models.DNN_model.dropout", "print", "branch_features.append", "tensorflow.concat", "models.DNN_model.fully_connected_block", "models.DNN_model.dropout", "tensorflow.reshape", "branch_model"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.dropout", "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.fully_connected_block", "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.DNN_model.dropout"], ["", "def", "_create_model_logits", "(", "self", ",", "allbands", ")", ":", "\n", "        ", "branch_features", "=", "[", "]", "\n", "for", "img_bands", ",", "nb_bands", ",", "branch_model", ",", "resolution", "in", "zip", "(", "\n", "[", "self", ".", "bands_10m", ",", "self", ".", "bands_20m", ",", "self", ".", "bands_60m", "]", ",", "\n", "[", "self", ".", "nb_bands_10m", ",", "self", ".", "nb_bands_20m", ",", "self", ".", "nb_bands_60m", "]", ",", "\n", "[", "self", ".", "branch_model_10m", ",", "self", ".", "branch_model_20m", ",", "self", ".", "branch_model_60m", "]", ",", "\n", "[", "\"_10\"", ",", "\"_20\"", ",", "\"_60\"", "]", ",", "\n", ")", ":", "\n", "            ", "print", "(", "\"Shape : \"", ",", "img_bands", ".", "shape", ")", "\n", "branch_features", ".", "append", "(", "\n", "tf", ".", "reshape", "(", "branch_model", "(", "img_bands", ")", ",", "[", "-", "1", ",", "self", ".", "feature_size", "]", ")", "\n", ")", "\n", "\n", "patches_concat_embed_", "=", "tf", ".", "concat", "(", "branch_features", ",", "-", "1", ")", "\n", "patches_concat_embed_", "=", "self", ".", "fully_connected_block", "(", "\n", "patches_concat_embed_", ",", "self", ".", "feature_size", ",", "\"fc_block_0\"", "+", "resolution", "\n", ")", "\n", "patches_concat_embed_", "=", "self", ".", "dropout", "(", "\n", "patches_concat_embed_", ",", "0.25", ",", "\"dropout_0\"", "+", "resolution", "\n", ")", "\n", "\n", "", "return", "self", ".", "dropout", "(", "patches_concat_embed_", ",", "0.5", ",", "\"dropout_0\"", "+", "resolution", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.Patches.__init__": [[1225, 1228], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.metrics.CustomMetrics.__init__"], ["    ", "def", "__init__", "(", "self", ",", "patch_size", ")", ":", "\n", "        ", "super", "(", "Patches", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "patch_size", "=", "patch_size", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.Patches.call": [[1229, 1241], ["tensorflow.image.extract_patches", "tensorflow.reshape", "tensorflow.shape"], "methods", ["None"], ["", "def", "call", "(", "self", ",", "images", ")", ":", "\n", "        ", "batch_size", "=", "tf", ".", "shape", "(", "images", ")", "[", "0", "]", "\n", "patches", "=", "tf", ".", "image", ".", "extract_patches", "(", "\n", "images", "=", "images", ",", "\n", "sizes", "=", "[", "1", ",", "self", ".", "patch_size", ",", "self", ".", "patch_size", ",", "1", "]", ",", "\n", "strides", "=", "[", "1", ",", "self", ".", "patch_size", ",", "self", ".", "patch_size", ",", "1", "]", ",", "\n", "rates", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "\n", "padding", "=", "\"VALID\"", ",", "\n", ")", "\n", "patch_dims", "=", "patches", ".", "shape", "[", "-", "1", "]", "\n", "patches", "=", "tf", ".", "reshape", "(", "patches", ",", "[", "batch_size", ",", "-", "1", ",", "patch_dims", "]", ")", "\n", "return", "patches", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.PatchEncoder.__init__": [[1244, 1250], ["super().__init__", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.metrics.CustomMetrics.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_patches", ",", "projection_dim", ")", ":", "\n", "        ", "super", "(", "PatchEncoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_patches", "=", "num_patches", "\n", "self", ".", "projection", "=", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "units", "=", "projection_dim", ")", "\n", "self", ".", "position_embedding", "=", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "\n", "units", "=", "projection_dim", ",", "use_bias", "=", "False", "\n", ")", "# self.add_weight(", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.PatchEncoder.call": [[1256, 1266], ["tensorflow.range", "tensorflow.expand_dims", "models.PatchEncoder.position_embedding", "models.PatchEncoder.projection"], "methods", ["None"], ["", "def", "call", "(", "self", ",", "patch", ")", ":", "\n", "        ", "positions", "=", "tf", ".", "range", "(", "start", "=", "0", ",", "limit", "=", "self", ".", "num_patches", ",", "delta", "=", "1", ")", "\n", "positions", "=", "tf", ".", "expand_dims", "(", "positions", ",", "axis", "=", "1", ")", "\n", "\n", "emb", "=", "self", ".", "position_embedding", "(", "positions", ")", "\n", "# print(emb.shape,flush = True)", "\n", "proj", "=", "self", ".", "projection", "(", "patch", ")", "\n", "# print('projection shape : ', proj.shape, flush = True)", "\n", "encoded", "=", "proj", "+", "emb", "\n", "return", "encoded", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.ViT.__init__": [[1269, 1271], ["models.BigEarthModel.__init__"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.metrics.CustomMetrics.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nb_class", ",", "modality", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nb_class", ",", "modality", "=", "modality", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.ViT._create_model_logits": [[1272, 1293], ["models.ViT.create_vit_classifier"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.ViT.create_vit_classifier"], ["", "def", "_create_model_logits", "(", "self", ",", "allbands", ")", ":", "\n", "# num_bands = self._num_bands", "\n", "\n", "# self.learning_rate = 0.001", "\n", "# weight_decay = 0.0001", "\n", "# batch_size = 256", "\n", "# num_epochs = 100", "\n", "        ", "image_size", "=", "120", "# We'll resize input images to this size", "\n", "self", ".", "patch_size", "=", "6", "# Size of the patches to be extract from the input images", "\n", "self", ".", "num_patches", "=", "(", "image_size", "//", "self", ".", "patch_size", ")", "**", "2", "\n", "self", ".", "projection_dim", "=", "64", "\n", "self", ".", "num_heads", "=", "4", "\n", "self", ".", "transformer_units", "=", "[", "\n", "self", ".", "projection_dim", "*", "2", ",", "\n", "self", ".", "projection_dim", ",", "\n", "]", "# Size of the transformer layers", "\n", "self", ".", "transformer_layers", "=", "8", "\n", "self", ".", "mlp_head_units", "=", "[", "2048", ",", "1024", "]", "\n", "x", "=", "self", ".", "create_vit_classifier", "(", "allbands", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.ViT.mlp": [[1294, 1299], ["tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dropout"], "methods", ["None"], ["", "def", "mlp", "(", "self", ",", "x", ",", "hidden_units", ",", "dropout_rate", ")", ":", "\n", "        ", "for", "units", "in", "hidden_units", ":", "\n", "            ", "x", "=", "layers", ".", "Dense", "(", "units", ",", "activation", "=", "tf", ".", "nn", ".", "gelu", ")", "(", "x", ")", "\n", "x", "=", "layers", ".", "Dropout", "(", "dropout_rate", ")", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.ViT.create_vit_classifier": [[1300, 1340], ["range", "models.ViT.mlp", "models.Patches", "models.PatchEncoder", "models.ViT.mlp", "tensorflow.keras.layers.LayerNormalization", "tensorflow.keras.layers.Flatten", "tensorflow.keras.layers.Dropout", "tensorflow.keras.layers.LayerNormalization", "tensorflow.keras.layers.MultiHeadAttention", "tensorflow.keras.layers.Add", "tensorflow.keras.layers.LayerNormalization", "tensorflow.keras.layers.Add"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.ViT.mlp", "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.ViT.mlp"], ["", "def", "create_vit_classifier", "(", "self", ",", "allbands", ")", ":", "\n", "        ", "num_bands", "=", "self", ".", "_num_bands", "\n", "# Augment data.", "\n", "# augmented = data_augmentation(inputs)", "\n", "# Create patches.", "\n", "patches", "=", "Patches", "(", "self", ".", "patch_size", ")", "(", "allbands", ")", "\n", "# Encode patches.", "\n", "encoded_patches", "=", "PatchEncoder", "(", "self", ".", "num_patches", ",", "self", ".", "projection_dim", ")", "(", "patches", ")", "\n", "\n", "# Create multiple layers of the Transformer block.", "\n", "for", "_", "in", "range", "(", "self", ".", "transformer_layers", ")", ":", "\n", "# Layer normalization 1.", "\n", "            ", "x1", "=", "layers", ".", "LayerNormalization", "(", "epsilon", "=", "1e-6", ")", "(", "encoded_patches", ")", "\n", "# Create a multi-head attention layer.", "\n", "attention_output", "=", "layers", ".", "MultiHeadAttention", "(", "\n", "num_heads", "=", "self", ".", "num_heads", ",", "key_dim", "=", "self", ".", "projection_dim", ",", "dropout", "=", "0.1", "\n", ")", "(", "x1", ",", "x1", ")", "\n", "# Skip connection 1.", "\n", "x2", "=", "layers", ".", "Add", "(", ")", "(", "[", "attention_output", ",", "encoded_patches", "]", ")", "\n", "# Layer normalization 2.", "\n", "x3", "=", "layers", ".", "LayerNormalization", "(", "epsilon", "=", "1e-6", ")", "(", "x2", ")", "\n", "# MLP.", "\n", "x3", "=", "self", ".", "mlp", "(", "x3", ",", "hidden_units", "=", "self", ".", "transformer_units", ",", "dropout_rate", "=", "0.1", ")", "\n", "# Skip connection 2.", "\n", "encoded_patches", "=", "layers", ".", "Add", "(", ")", "(", "[", "x3", ",", "x2", "]", ")", "\n", "\n", "# Create a [batch_size, projection_dim] tensor.", "\n", "", "representation", "=", "layers", ".", "LayerNormalization", "(", "epsilon", "=", "1e-6", ")", "(", "encoded_patches", ")", "\n", "representation", "=", "layers", ".", "Flatten", "(", ")", "(", "representation", ")", "\n", "representation", "=", "layers", ".", "Dropout", "(", "0.5", ")", "(", "representation", ")", "\n", "# Add MLP.", "\n", "features", "=", "self", ".", "mlp", "(", "\n", "representation", ",", "hidden_units", "=", "self", ".", "mlp_head_units", ",", "dropout_rate", "=", "0.5", "\n", ")", "\n", "# Classify outputs.", "\n", "# logits = layers.Dense(num_classes)(features)", "\n", "# Create the Keras model.", "\n", "# model = tf.keras.Model(inputs=allbands, outputs=features)", "\n", "# model.summary()", "\n", "return", "features", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.LambdaLayer.__init__": [[1346, 1375], ["tensorflow.keras.layers.Layer.__init__", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.BatchNormalization", "tensorflow.keras.layers.BatchNormalization", "tensorflow.keras.layers.Conv3D", "tensorflow.keras.layers.Flatten", "models.LambdaLayer.add_weight", "tensorflow.pad", "tensorflow.constant"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.metrics.CustomMetrics.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", ",", "dim_k", ",", "n", "=", "None", ",", "r", "=", "None", ",", "heads", "=", "4", ",", "dim_out", "=", "None", ",", "dim_u", "=", "1", ")", ":", "\n", "        ", "super", "(", "LambdaLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "u", "=", "dim_u", "\n", "self", ".", "heads", "=", "heads", "\n", "\n", "assert", "(", "dim_out", "%", "heads", ")", "==", "0", "\n", "dim_v", "=", "dim_out", "//", "heads", "\n", "\n", "self", ".", "to_q", "=", "Conv2D", "(", "filters", "=", "dim_k", "*", "heads", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "use_bias", "=", "False", ")", "\n", "self", ".", "to_k", "=", "Conv2D", "(", "filters", "=", "dim_k", "*", "dim_u", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "use_bias", "=", "False", ")", "\n", "self", ".", "to_v", "=", "Conv2D", "(", "filters", "=", "dim_v", "*", "dim_u", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "use_bias", "=", "False", ")", "\n", "\n", "self", ".", "norm_q", "=", "BatchNormalization", "(", ")", "\n", "self", ".", "norm_v", "=", "BatchNormalization", "(", ")", "\n", "\n", "self", ".", "local_contexts", "=", "r", "is", "not", "None", "\n", "\n", "if", "self", ".", "local_contexts", ":", "\n", "            ", "assert", "(", "r", "%", "2", ")", "==", "1", ",", "\"Receptive kernel size should be odd.\"", "\n", "self", ".", "pad_fn", "=", "lambda", "x", ":", "tf", ".", "pad", "(", "\n", "x", ",", "tf", ".", "constant", "(", "[", "[", "0", ",", "0", "]", ",", "[", "r", "//", "2", ",", "r", "//", "2", "]", ",", "[", "r", "//", "2", ",", "r", "//", "2", "]", ",", "[", "0", ",", "0", "]", "]", ")", "\n", ")", "\n", "self", ".", "pos_conv", "=", "Conv3D", "(", "filters", "=", "dim_k", ",", "kernel_size", "=", "(", "1", ",", "r", ",", "r", ")", ")", "\n", "self", ".", "flatten", "=", "tf", ".", "keras", ".", "layers", ".", "Flatten", "(", ")", "\n", "", "else", ":", "\n", "            ", "assert", "n", "is", "not", "None", ",", "\"You must specify the total sequence length (h x w)\"", "\n", "self", ".", "pos_emb", "=", "self", ".", "add_weight", "(", "\n", "name", "=", "\"position_embed\"", ",", "shape", "=", "(", "n", ",", "n", ",", "dim_k", ",", "dim_u", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.LambdaLayer.call": [[1377, 1421], ["models.LambdaLayer.to_q", "models.LambdaLayer.to_k", "models.LambdaLayer.to_v", "models.LambdaLayer.norm_q", "models.LambdaLayer.norm_v", "rearrange", "rearrange", "rearrange", "tensorflow.nn.softmax", "tensorflow.einsum", "tensorflow.einsum", "rearrange", "rearrange", "tensorflow.map_fn", "models.LambdaLayer.pos_conv", "tensorflow.reshape", "tensorflow.einsum", "tensorflow.einsum", "tensorflow.einsum"], "methods", ["None"], ["", "", "def", "call", "(", "self", ",", "x", ")", ":", "\n", "# For verbosity and understandings sake", "\n", "        ", "batch_size", ",", "height", ",", "width", ",", "channels", ",", "u", ",", "heads", "=", "*", "x", ".", "shape", ",", "self", ".", "u", ",", "self", ".", "heads", "\n", "b", ",", "hh", ",", "ww", ",", "c", ",", "u", ",", "h", "=", "batch_size", ",", "height", ",", "width", ",", "channels", ",", "u", ",", "heads", "\n", "\n", "q", "=", "self", ".", "to_q", "(", "x", ")", "\n", "k", "=", "self", ".", "to_k", "(", "x", ")", "\n", "v", "=", "self", ".", "to_v", "(", "x", ")", "\n", "\n", "q", "=", "self", ".", "norm_q", "(", "q", ")", "\n", "v", "=", "self", ".", "norm_v", "(", "v", ")", "\n", "\n", "q", "=", "rearrange", "(", "q", ",", "\"b hh ww (h k) -> b h (hh ww) k\"", ",", "h", "=", "h", ")", "\n", "k", "=", "rearrange", "(", "k", ",", "\"b hh ww (k u) -> b u (hh ww) k\"", ",", "u", "=", "u", ")", "\n", "v", "=", "rearrange", "(", "v", ",", "\"b hh ww (v u) -> b u (hh ww) v\"", ",", "u", "=", "u", ")", "\n", "\n", "k", "=", "tf", ".", "nn", ".", "softmax", "(", "k", ",", "axis", "=", "-", "1", ")", "\n", "\n", "lambda_c", "=", "einsum", "(", "\"b u m k, b u m v -> b k v\"", ",", "k", ",", "v", ")", "\n", "Y_c", "=", "einsum", "(", "\"b h n k, b k v -> b n h v\"", ",", "q", ",", "lambda_c", ")", "\n", "\n", "if", "self", ".", "local_contexts", ":", "\n", "            ", "v", "=", "rearrange", "(", "v", ",", "\"b u (hh ww) v -> b v hh ww u\"", ",", "hh", "=", "hh", ",", "ww", "=", "ww", ")", "\n", "# We need to add explicit padding across the batch dimension", "\n", "lambda_p", "=", "tf", ".", "map_fn", "(", "self", ".", "pad_fn", ",", "v", ")", "\n", "lambda_p", "=", "self", ".", "pos_conv", "(", "lambda_p", ")", "\n", "lambda_p", "=", "tf", ".", "reshape", "(", "\n", "lambda_p", ",", "\n", "(", "\n", "lambda_p", ".", "shape", "[", "0", "]", ",", "\n", "lambda_p", ".", "shape", "[", "1", "]", ",", "\n", "lambda_p", ".", "shape", "[", "2", "]", "*", "lambda_p", ".", "shape", "[", "3", "]", ",", "\n", "lambda_p", ".", "shape", "[", "4", "]", ",", "\n", ")", ",", "\n", ")", "\n", "Y_p", "=", "einsum", "(", "\"b h n k, b v n k -> b n h v\"", ",", "q", ",", "lambda_p", ")", "\n", "", "else", ":", "\n", "            ", "lambda_p", "=", "einsum", "(", "\"n m k u, b u m v -> b n k v\"", ",", "self", ".", "pos_emb", ",", "v", ")", "\n", "Y_p", "=", "einsum", "(", "\"b h n k, b n k v -> b n h v\"", ",", "q", ",", "lambda_p", ")", "\n", "\n", "", "Y", "=", "Y_c", "+", "Y_p", "\n", "out", "=", "rearrange", "(", "Y", ",", "\"b (hh ww) h v -> b hh ww (h v)\"", ",", "hh", "=", "hh", ",", "ww", "=", "ww", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.LambdaConv.__init__": [[1424, 1439], ["tensorflow.keras.layers.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.metrics.CustomMetrics.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "channels_out", ",", "\n", "*", ",", "\n", "receptive_field", "=", "None", ",", "\n", "key_dim", "=", "16", ",", "\n", "intra_depth_dim", "=", "1", ",", "\n", "heads", "=", "4", "\n", ")", ":", "\n", "        ", "super", "(", "LambdaConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "channels_out", "=", "channels_out", "\n", "self", ".", "receptive_field", "=", "receptive_field", "\n", "self", ".", "key_dim", "=", "key_dim", "\n", "self", ".", "intra_depth_dim", "=", "intra_depth_dim", "\n", "self", ".", "heads", "=", "heads", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.LambdaConv.build": [[1440, 1445], ["models.LambdaLayer"], "methods", ["None"], ["", "def", "build", "(", "self", ",", "input_shape", ")", ":", "\n", "        ", "self", ".", "layer", "=", "LambdaLayer", "(", "\n", "dim_out", "=", "self", ".", "channels_out", ",", "\n", "dim_k", "=", "self", ".", "key_dim", ",", "\n", "n", "=", "input_shape", "[", "1", "]", "*", "input_shape", "[", "2", "]", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.LambdaConv.call": [[1447, 1449], ["models.LambdaConv.layer"], "methods", ["None"], ["", "def", "call", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "layer", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.LambdaResNet.__init__": [[1452, 1454], ["models.BigEarthModel.__init__"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.metrics.CustomMetrics.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nb_class", ",", "modality", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nb_class", ",", "modality", "=", "modality", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.LambdaResNet._create_model_logits": [[1455, 1659], ["models.LambdaResNet._create_model_logits.initial_conv"], "methods", ["None"], ["", "def", "_create_model_logits", "(", "self", ",", "allbands", ")", ":", "\n", "        ", "def", "initial_conv", "(", "input", ")", ":", "\n", "            ", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Conv2D", "(", "\n", "16", ",", "\n", "(", "3", ",", "3", ")", ",", "\n", "padding", "=", "\"same\"", ",", "\n", "kernel_initializer", "=", "\"he_normal\"", ",", "\n", "kernel_regularizer", "=", "tf", ".", "keras", ".", "regularizers", ".", "l2", "(", "weight_decay", ")", ",", "\n", "use_bias", "=", "False", ",", "\n", ")", "(", "input", ")", "\n", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "BatchNormalization", "(", "\n", "momentum", "=", "0.1", ",", "epsilon", "=", "1e-5", ",", "gamma_initializer", "=", "\"uniform\"", "\n", ")", "(", "x", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "return", "x", "\n", "\n", "", "def", "expand_conv", "(", "init", ",", "base", ",", "k", ",", "strides", "=", "(", "1", ",", "1", ")", ")", ":", "\n", "            ", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Conv2D", "(", "\n", "base", "*", "k", ",", "\n", "(", "3", ",", "3", ")", ",", "\n", "padding", "=", "\"same\"", ",", "\n", "strides", "=", "strides", ",", "\n", "kernel_initializer", "=", "\"he_normal\"", ",", "\n", "kernel_regularizer", "=", "tf", ".", "keras", ".", "regularizers", ".", "l2", "(", "weight_decay", ")", ",", "\n", "use_bias", "=", "False", ",", "\n", ")", "(", "init", ")", "\n", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "BatchNormalization", "(", "\n", "momentum", "=", "0.1", ",", "epsilon", "=", "1e-5", ",", "gamma_initializer", "=", "\"uniform\"", "\n", ")", "(", "x", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Conv2D", "(", "\n", "base", "*", "k", ",", "\n", "(", "3", ",", "3", ")", ",", "\n", "padding", "=", "\"same\"", ",", "\n", "kernel_initializer", "=", "\"he_normal\"", ",", "\n", "kernel_regularizer", "=", "tf", ".", "keras", ".", "regularizers", ".", "l2", "(", "weight_decay", ")", ",", "\n", "use_bias", "=", "False", ",", "\n", ")", "(", "x", ")", "\n", "\n", "skip", "=", "tf", ".", "keras", ".", "layers", ".", "Conv2D", "(", "\n", "base", "*", "k", ",", "\n", "(", "1", ",", "1", ")", ",", "\n", "padding", "=", "\"same\"", ",", "\n", "strides", "=", "strides", ",", "\n", "kernel_initializer", "=", "\"he_normal\"", ",", "\n", "kernel_regularizer", "=", "tf", ".", "keras", ".", "regularizers", ".", "l2", "(", "weight_decay", ")", ",", "\n", "use_bias", "=", "False", ",", "\n", ")", "(", "init", ")", "\n", "\n", "m", "=", "Add", "(", ")", "(", "[", "x", ",", "skip", "]", ")", "\n", "return", "m", "\n", "\n", "", "def", "conv1_block", "(", "input", ",", "k", "=", "1", ",", "dropout", "=", "0.0", ")", ":", "\n", "            ", "init", "=", "input", "\n", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "BatchNormalization", "(", "\n", "momentum", "=", "0.1", ",", "epsilon", "=", "1e-5", ",", "gamma_initializer", "=", "\"uniform\"", "\n", ")", "(", "input", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Conv2D", "(", "\n", "8", "*", "k", ",", "\n", "(", "3", ",", "3", ")", ",", "\n", "padding", "=", "\"same\"", ",", "\n", "kernel_initializer", "=", "\"he_normal\"", ",", "\n", "kernel_regularizer", "=", "tf", ".", "keras", ".", "regularizers", ".", "l2", "(", "weight_decay", ")", ",", "\n", "use_bias", "=", "False", ",", "\n", ")", "(", "x", ")", "\n", "\n", "if", "dropout", ">", "0.0", ":", "\n", "                ", "x", "=", "Dropout", "(", "dropout", ")", "(", "x", ")", "\n", "\n", "", "x", "=", "tf", ".", "keras", ".", "layers", ".", "BatchNormalization", "(", "\n", "momentum", "=", "0.1", ",", "epsilon", "=", "1e-5", ",", "gamma_initializer", "=", "\"uniform\"", "\n", ")", "(", "x", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "# x = tf.keras.layers.Conv2D(16 * k, (3, 3), padding='same', kernel_initializer='he_normal',", "\n", "#                           kernel_regularizer=tf.keras.regularizers.l2(weight_decay),", "\n", "#                           use_bias=False)(x)", "\n", "print", "(", "\"Conv1\"", ")", "\n", "print", "(", "x", ".", "shape", ",", "flush", "=", "True", ")", "\n", "layer", "=", "LambdaConv", "(", "8", "*", "k", ")", "\n", "x", "=", "layer", "(", "x", ")", "\n", "m", "=", "Add", "(", ")", "(", "[", "init", ",", "x", "]", ")", "\n", "return", "m", "\n", "\n", "", "def", "conv2_block", "(", "input", ",", "k", "=", "1", ",", "dropout", "=", "0.0", ")", ":", "\n", "            ", "init", "=", "input", "\n", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "BatchNormalization", "(", "\n", "momentum", "=", "0.1", ",", "epsilon", "=", "1e-5", ",", "gamma_initializer", "=", "\"uniform\"", "\n", ")", "(", "init", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Conv2D", "(", "\n", "16", "*", "k", ",", "\n", "(", "3", ",", "3", ")", ",", "\n", "padding", "=", "\"same\"", ",", "\n", "kernel_initializer", "=", "\"he_normal\"", ",", "\n", "kernel_regularizer", "=", "tf", ".", "keras", ".", "regularizers", ".", "l2", "(", "weight_decay", ")", ",", "\n", "use_bias", "=", "False", ",", "\n", ")", "(", "x", ")", "\n", "\n", "if", "dropout", ">", "0.0", ":", "\n", "                ", "x", "=", "Dropout", "(", "dropout", ")", "(", "x", ")", "\n", "\n", "", "x", "=", "tf", ".", "keras", ".", "layers", ".", "BatchNormalization", "(", "\n", "momentum", "=", "0.1", ",", "epsilon", "=", "1e-5", ",", "gamma_initializer", "=", "\"uniform\"", "\n", ")", "(", "x", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "# x = tf.keras.layers.Conv2D(32 * k, (3, 3), padding='same', kernel_initializer='he_normal',", "\n", "#                           kernel_regularizer=tf.keras.regularizers.l2(weight_decay),", "\n", "#                           use_bias=False)(x)", "\n", "layer", "=", "LambdaConv", "(", "16", "*", "k", ")", "\n", "print", "(", "\"Conv2\"", ")", "\n", "print", "(", "x", ".", "shape", ",", "flush", "=", "True", ")", "\n", "x", "=", "layer", "(", "x", ")", "\n", "m", "=", "Add", "(", ")", "(", "[", "init", ",", "x", "]", ")", "\n", "return", "m", "\n", "\n", "", "def", "conv3_block", "(", "input", ",", "k", "=", "1", ",", "dropout", "=", "0.0", ")", ":", "\n", "            ", "init", "=", "input", "\n", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "BatchNormalization", "(", "\n", "momentum", "=", "0.1", ",", "epsilon", "=", "1e-5", ",", "gamma_initializer", "=", "\"uniform\"", "\n", ")", "(", "input", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Conv2D", "(", "\n", "32", "*", "k", ",", "\n", "(", "3", ",", "3", ")", ",", "\n", "padding", "=", "\"same\"", ",", "\n", "kernel_initializer", "=", "\"he_normal\"", ",", "\n", "kernel_regularizer", "=", "tf", ".", "keras", ".", "regularizers", ".", "l2", "(", "weight_decay", ")", ",", "\n", "use_bias", "=", "False", ",", "\n", ")", "(", "x", ")", "\n", "\n", "if", "dropout", ">", "0.0", ":", "\n", "                ", "x", "=", "Dropout", "(", "dropout", ")", "(", "x", ")", "\n", "\n", "", "x", "=", "tf", ".", "keras", ".", "layers", ".", "BatchNormalization", "(", "\n", "momentum", "=", "0.1", ",", "epsilon", "=", "1e-5", ",", "gamma_initializer", "=", "\"uniform\"", "\n", ")", "(", "x", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "# x = tf.keras.layers.Conv2D(64 * k, (3, 3), padding='same', kernel_initializer='he_normal',", "\n", "#                           kernel_regularizer=tf.keras.regularizers.l2(weight_decay),", "\n", "#                           use_bias=False)(x)", "\n", "layer", "=", "LambdaConv", "(", "32", "*", "k", ")", "\n", "print", "(", "\"Conv3\"", ")", "\n", "print", "(", "x", ".", "shape", ",", "flush", "=", "True", ")", "\n", "x", "=", "layer", "(", "x", ")", "\n", "m", "=", "Add", "(", ")", "(", "[", "init", ",", "x", "]", ")", "\n", "return", "m", "\n", "\n", "", "depth", "=", "16", "\n", "k", "=", "2", "\n", "dropout", "=", "0.0", "\n", "weight_decay", "=", "0.0005", "\n", "\n", "N", "=", "(", "depth", "-", "4", ")", "//", "6", "\n", "\n", "x", "=", "initial_conv", "(", "allbands", ")", "\n", "nb_conv", "=", "4", "\n", "\n", "x", "=", "expand_conv", "(", "x", ",", "16", ",", "k", ")", "\n", "nb_conv", "+=", "2", "\n", "\n", "for", "i", "in", "range", "(", "N", "-", "1", ")", ":", "\n", "            ", "x", "=", "conv1_block", "(", "x", ",", "k", ",", "dropout", ")", "\n", "nb_conv", "+=", "2", "\n", "\n", "", "x", "=", "tf", ".", "keras", ".", "layers", ".", "BatchNormalization", "(", "\n", "momentum", "=", "0.1", ",", "epsilon", "=", "1e-5", ",", "gamma_initializer", "=", "\"uniform\"", "\n", ")", "(", "x", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "\n", "x", "=", "expand_conv", "(", "x", ",", "32", ",", "k", ",", "strides", "=", "(", "2", ",", "2", ")", ")", "\n", "nb_conv", "+=", "2", "\n", "\n", "for", "i", "in", "range", "(", "N", "-", "1", ")", ":", "\n", "            ", "x", "=", "conv2_block", "(", "x", ",", "k", ",", "dropout", ")", "\n", "nb_conv", "+=", "2", "\n", "\n", "", "x", "=", "tf", ".", "keras", ".", "layers", ".", "BatchNormalization", "(", "\n", "momentum", "=", "0.1", ",", "epsilon", "=", "1e-5", ",", "gamma_initializer", "=", "\"uniform\"", "\n", ")", "(", "x", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "\n", "x", "=", "expand_conv", "(", "x", ",", "64", ",", "k", ",", "strides", "=", "(", "2", ",", "2", ")", ")", "\n", "nb_conv", "+=", "2", "\n", "\n", "for", "i", "in", "range", "(", "N", "-", "1", ")", ":", "\n", "            ", "x", "=", "conv3_block", "(", "x", ",", "k", ",", "dropout", ")", "\n", "nb_conv", "+=", "2", "\n", "\n", "", "x", "=", "tf", ".", "keras", ".", "layers", ".", "BatchNormalization", "(", "\n", "momentum", "=", "0.1", ",", "epsilon", "=", "1e-5", ",", "gamma_initializer", "=", "\"uniform\"", "\n", ")", "(", "x", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "AveragePooling2D", "(", "(", "8", ",", "8", ")", ")", "(", "x", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "GlobalAveragePooling2D", "(", ")", "(", "x", ")", "\n", "\n", "print", "(", "\"Wide Residual Network-{}-{} created.\"", ".", "format", "(", "nb_conv", ",", "k", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.MlpBlock.__init__": [[1662, 1672], ["tensorflow.keras.layers.Layer.__init__", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Activation", "tensorflow.keras.layers.Dense"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.metrics.CustomMetrics.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", ":", "int", ",", "hidden_dim", ":", "int", ",", "activation", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "MlpBlock", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "\n", "if", "activation", "is", "None", ":", "\n", "            ", "activation", "=", "tf", ".", "keras", ".", "activations", ".", "gelu", "\n", "\n", "", "self", ".", "dim", "=", "dim", "\n", "self", ".", "dense1", "=", "Dense", "(", "hidden_dim", ")", "\n", "self", ".", "activation", "=", "Activation", "(", "activation", ")", "\n", "self", ".", "dense2", "=", "Dense", "(", "dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.MlpBlock.call": [[1673, 1679], ["models.MlpBlock.dense1", "models.MlpBlock.activation", "models.MlpBlock.dense2"], "methods", ["None"], ["", "def", "call", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "x", "=", "inputs", "\n", "x", "=", "self", ".", "dense1", "(", "x", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "dense2", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.MlpBlock.compute_output_shape": [[1680, 1682], ["None"], "methods", ["None"], ["", "def", "compute_output_shape", "(", "self", ",", "input_signature", ")", ":", "\n", "        ", "return", "(", "input_signature", "[", "0", "]", ",", "self", ".", "dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.MixerBlock.__init__": [[1685, 1716], ["tensorflow.keras.layers.Layer.__init__", "tensorflow.keras.layers.LayerNormalization", "tensorflow.keras.layers.Permute", "models.MlpBlock", "tensorflow.keras.layers.Permute", "tensorflow.keras.layers.LayerNormalization", "models.MlpBlock", "tensorflow.keras.layers.Add", "tensorflow.keras.layers.Add"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.metrics.CustomMetrics.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "num_patches", ":", "int", ",", "\n", "channel_dim", ":", "int", ",", "\n", "token_mixer_hidden_dim", ":", "int", ",", "\n", "channel_mixer_hidden_dim", ":", "int", "=", "None", ",", "\n", "activation", "=", "None", ",", "\n", "**", "kwargs", "\n", ")", ":", "\n", "        ", "super", "(", "MixerBlock", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "\n", "if", "activation", "is", "None", ":", "\n", "            ", "activation", "=", "tf", ".", "keras", ".", "activations", ".", "gelu", "\n", "\n", "", "if", "channel_mixer_hidden_dim", "is", "None", ":", "\n", "            ", "channel_mixer_hidden_dim", "=", "token_mixer_hidden_dim", "\n", "\n", "", "self", ".", "norm1", "=", "LayerNormalization", "(", "axis", "=", "1", ")", "\n", "self", ".", "permute1", "=", "Permute", "(", "(", "2", ",", "1", ")", ")", "\n", "self", ".", "token_mixer", "=", "MlpBlock", "(", "\n", "num_patches", ",", "token_mixer_hidden_dim", ",", "name", "=", "\"token_mixer\"", "\n", ")", "\n", "\n", "self", ".", "permute2", "=", "Permute", "(", "(", "2", ",", "1", ")", ")", "\n", "self", ".", "norm2", "=", "LayerNormalization", "(", "axis", "=", "1", ")", "\n", "self", ".", "channel_mixer", "=", "MlpBlock", "(", "\n", "channel_dim", ",", "channel_mixer_hidden_dim", ",", "name", "=", "\"channel_mixer\"", "\n", ")", "\n", "\n", "self", ".", "skip_connection1", "=", "Add", "(", ")", "\n", "self", ".", "skip_connection2", "=", "Add", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.MixerBlock.call": [[1717, 1735], ["models.MixerBlock.norm1", "models.MixerBlock.permute1", "models.MixerBlock.token_mixer", "models.MixerBlock.permute2", "models.MixerBlock.skip_connection1", "models.MixerBlock.norm2", "models.MixerBlock.channel_mixer", "models.MixerBlock.skip_connection2"], "methods", ["None"], ["", "def", "call", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "x", "=", "inputs", "\n", "skip_x", "=", "x", "\n", "x", "=", "self", ".", "norm1", "(", "x", ")", "\n", "x", "=", "self", ".", "permute1", "(", "x", ")", "\n", "x", "=", "self", ".", "token_mixer", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "permute2", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "skip_connection1", "(", "[", "x", ",", "skip_x", "]", ")", "\n", "skip_x", "=", "x", "\n", "\n", "x", "=", "self", ".", "norm2", "(", "x", ")", "\n", "x", "=", "self", ".", "channel_mixer", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "skip_connection2", "(", "[", "x", ",", "skip_x", "]", ")", "# TODO need 2?", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.MixerBlock.compute_output_shape": [[1736, 1738], ["None"], "methods", ["None"], ["", "def", "compute_output_shape", "(", "self", ",", "input_shape", ")", ":", "\n", "        ", "return", "input_shape", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.Mixer.__init__": [[1792, 1794], ["models.BigEarthModel.__init__"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.metrics.CustomMetrics.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nb_class", ",", "modality", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nb_class", ",", "modality", "=", "modality", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.Mixer._create_model_logits": [[1795, 1806], ["models.MlpMixerModel"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.MlpMixerModel"], ["", "def", "_create_model_logits", "(", "self", ",", "allbands", ")", ":", "\n", "        ", "num_bands", "=", "self", ".", "_num_bands", "\n", "x", "=", "MlpMixerModel", "(", "\n", "input_shape", "=", "(", "120", ",", "120", ",", "num_bands", ")", ",", "\n", "num_blocks", "=", "4", ",", "# 4,", "\n", "patch_size", "=", "12", ",", "\n", "hidden_dim", "=", "128", ",", "\n", "tokens_mlp_dim", "=", "64", ",", "\n", "channels_mlp_dim", "=", "200", ",", "\n", ")", "(", "allbands", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.Mixer_Tiny.__init__": [[1809, 1811], ["models.BigEarthModel.__init__"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.metrics.CustomMetrics.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nb_class", ",", "modality", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nb_class", ",", "modality", "=", "modality", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.Mixer_Tiny._create_model_logits": [[1812, 1823], ["models.MlpMixerModel"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.MlpMixerModel"], ["", "def", "_create_model_logits", "(", "self", ",", "allbands", ")", ":", "\n", "        ", "num_bands", "=", "self", ".", "_num_bands", "\n", "x", "=", "MlpMixerModel", "(", "\n", "input_shape", "=", "(", "120", ",", "120", ",", "num_bands", ")", ",", "\n", "num_blocks", "=", "2", ",", "# 4,", "\n", "patch_size", "=", "12", ",", "\n", "hidden_dim", "=", "64", ",", "\n", "tokens_mlp_dim", "=", "64", ",", "\n", "channels_mlp_dim", "=", "64", ",", "\n", ")", "(", "allbands", ")", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.MlpMixerModel": [[1741, 1789], ["tensorflow.keras.Input", "range", "tensorflow.keras.Model", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.Reshape", "tensorflow.keras.layers.GlobalAveragePooling1D", "tensorflow.keras.layers.LayerNormalization", "models.MixerBlock"], "function", ["None"], ["", "", "def", "MlpMixerModel", "(", "\n", "input_shape", ":", "int", ",", "\n", "num_blocks", ":", "int", ",", "\n", "patch_size", ":", "int", ",", "\n", "hidden_dim", ":", "int", ",", "\n", "tokens_mlp_dim", ":", "int", ",", "\n", "channels_mlp_dim", ":", "int", "=", "None", ",", "\n", ")", ":", "\n", "    ", "height", ",", "width", ",", "_", "=", "input_shape", "\n", "\n", "if", "channels_mlp_dim", "is", "None", ":", "\n", "        ", "channels_mlp_dim", "=", "tokens_mlp_dim", "\n", "\n", "", "num_patches", "=", "(", "height", "*", "width", ")", "//", "(", "\n", "patch_size", "**", "2", "\n", ")", "# TODO verify how this behaves with same padding", "\n", "\n", "inputs", "=", "tf", ".", "keras", ".", "Input", "(", "input_shape", ")", "\n", "x", "=", "inputs", "\n", "\n", "x", "=", "Conv2D", "(", "\n", "hidden_dim", ",", "\n", "kernel_size", "=", "patch_size", ",", "\n", "strides", "=", "patch_size", ",", "\n", "padding", "=", "\"same\"", ",", "\n", "name", "=", "\"projector\"", ",", "\n", ")", "(", "x", ")", "\n", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Reshape", "(", "[", "-", "1", ",", "hidden_dim", "]", ")", "(", "x", ")", "\n", "\n", "for", "_", "in", "range", "(", "num_blocks", ")", ":", "\n", "        ", "x", "=", "MixerBlock", "(", "\n", "num_patches", "=", "num_patches", ",", "\n", "channel_dim", "=", "hidden_dim", ",", "\n", "token_mixer_hidden_dim", "=", "tokens_mlp_dim", ",", "\n", "channel_mixer_hidden_dim", "=", "channels_mlp_dim", ",", "\n", ")", "(", "x", ")", "\n", "\n", "", "x", "=", "GlobalAveragePooling1D", "(", ")", "(", "\n", "x", "\n", ")", "# TODO verify this global average pool is correct choice here", "\n", "\n", "x", "=", "LayerNormalization", "(", "name", "=", "\"pre_head_layer_norm\"", ")", "(", "x", ")", "\n", "# x = Dense(num_classes, name='head')(x)", "\n", "\n", "# if use_softmax:", "\n", "#    x = Softmax()(x)", "\n", "return", "tf", ".", "keras", ".", "Model", "(", "inputs", ",", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.inputs._parse_function": [[37, 82], ["tensorflow.io.parse_single_example", "tensorflow.cast", "tensorflow.cast", "tensorflow.cast", "tensorflow.cast", "tensorflow.cast", "tensorflow.cast", "tensorflow.cast", "tensorflow.cast", "tensorflow.cast", "tensorflow.cast", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.io.FixedLenFeature", "tensorflow.io.FixedLenFeature", "tensorflow.io.FixedLenFeature", "tensorflow.io.FixedLenFeature", "tensorflow.io.FixedLenFeature", "tensorflow.io.FixedLenFeature", "tensorflow.io.FixedLenFeature", "tensorflow.io.FixedLenFeature", "tensorflow.io.FixedLenFeature", "tensorflow.io.FixedLenFeature", "tensorflow.io.FixedLenFeature", "tensorflow.io.FixedLenFeature", "tensorflow.io.VarLenFeature", "tensorflow.io.VarLenFeature", "tensorflow.io.VarLenFeature", "tensorflow.io.FixedLenFeature", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape"], "function", ["None"], ["def", "_parse_function", "(", "example_proto", ",", "label_type", ")", ":", "\n", "    ", "\"\"\"Parse an example from a tfrecord.\"\"\"", "\n", "nb_class", "=", "43", "if", "label_type", "==", "\"original\"", "else", "19", "\n", "\n", "parsed_features", "=", "tf", ".", "io", ".", "parse_single_example", "(", "\n", "example_proto", ",", "\n", "{", "\n", "\"B02\"", ":", "tf", ".", "io", ".", "FixedLenFeature", "(", "[", "120", "*", "120", "]", ",", "tf", ".", "int64", ")", ",", "\n", "\"B03\"", ":", "tf", ".", "io", ".", "FixedLenFeature", "(", "[", "120", "*", "120", "]", ",", "tf", ".", "int64", ")", ",", "\n", "\"B04\"", ":", "tf", ".", "io", ".", "FixedLenFeature", "(", "[", "120", "*", "120", "]", ",", "tf", ".", "int64", ")", ",", "\n", "\"B05\"", ":", "tf", ".", "io", ".", "FixedLenFeature", "(", "[", "60", "*", "60", "]", ",", "tf", ".", "int64", ")", ",", "\n", "\"B06\"", ":", "tf", ".", "io", ".", "FixedLenFeature", "(", "[", "60", "*", "60", "]", ",", "tf", ".", "int64", ")", ",", "\n", "\"B07\"", ":", "tf", ".", "io", ".", "FixedLenFeature", "(", "[", "60", "*", "60", "]", ",", "tf", ".", "int64", ")", ",", "\n", "\"B08\"", ":", "tf", ".", "io", ".", "FixedLenFeature", "(", "[", "120", "*", "120", "]", ",", "tf", ".", "int64", ")", ",", "\n", "\"B8A\"", ":", "tf", ".", "io", ".", "FixedLenFeature", "(", "[", "60", "*", "60", "]", ",", "tf", ".", "int64", ")", ",", "\n", "\"B11\"", ":", "tf", ".", "io", ".", "FixedLenFeature", "(", "[", "60", "*", "60", "]", ",", "tf", ".", "int64", ")", ",", "\n", "\"B12\"", ":", "tf", ".", "io", ".", "FixedLenFeature", "(", "[", "60", "*", "60", "]", ",", "tf", ".", "int64", ")", ",", "\n", "\"VV\"", ":", "tf", ".", "io", ".", "FixedLenFeature", "(", "[", "120", "*", "120", "]", ",", "tf", ".", "float32", ")", ",", "\n", "\"VH\"", ":", "tf", ".", "io", ".", "FixedLenFeature", "(", "[", "120", "*", "120", "]", ",", "tf", ".", "float32", ")", ",", "\n", "\"patch_name_s1\"", ":", "tf", ".", "io", ".", "VarLenFeature", "(", "dtype", "=", "tf", ".", "string", ")", ",", "\n", "\"patch_name_s2\"", ":", "tf", ".", "io", ".", "VarLenFeature", "(", "dtype", "=", "tf", ".", "string", ")", ",", "\n", "label_type", "+", "\"_labels\"", ":", "tf", ".", "io", ".", "VarLenFeature", "(", "dtype", "=", "tf", ".", "string", ")", ",", "\n", "label_type", "\n", "+", "\"_labels_multi_hot\"", ":", "tf", ".", "io", ".", "FixedLenFeature", "(", "[", "nb_class", "]", ",", "tf", ".", "int64", ")", ",", "\n", "}", ",", "\n", ")", "\n", "\n", "return", "{", "\n", "\"B02\"", ":", "tf", ".", "cast", "(", "tf", ".", "reshape", "(", "parsed_features", "[", "\"B02\"", "]", ",", "[", "120", ",", "120", "]", ")", ",", "tf", ".", "float32", ")", ",", "\n", "\"B03\"", ":", "tf", ".", "cast", "(", "tf", ".", "reshape", "(", "parsed_features", "[", "\"B03\"", "]", ",", "[", "120", ",", "120", "]", ")", ",", "tf", ".", "float32", ")", ",", "\n", "\"B04\"", ":", "tf", ".", "cast", "(", "tf", ".", "reshape", "(", "parsed_features", "[", "\"B04\"", "]", ",", "[", "120", ",", "120", "]", ")", ",", "tf", ".", "float32", ")", ",", "\n", "\"B05\"", ":", "tf", ".", "cast", "(", "tf", ".", "reshape", "(", "parsed_features", "[", "\"B05\"", "]", ",", "[", "60", ",", "60", "]", ")", ",", "tf", ".", "float32", ")", ",", "\n", "\"B06\"", ":", "tf", ".", "cast", "(", "tf", ".", "reshape", "(", "parsed_features", "[", "\"B06\"", "]", ",", "[", "60", ",", "60", "]", ")", ",", "tf", ".", "float32", ")", ",", "\n", "\"B07\"", ":", "tf", ".", "cast", "(", "tf", ".", "reshape", "(", "parsed_features", "[", "\"B07\"", "]", ",", "[", "60", ",", "60", "]", ")", ",", "tf", ".", "float32", ")", ",", "\n", "\"B08\"", ":", "tf", ".", "cast", "(", "tf", ".", "reshape", "(", "parsed_features", "[", "\"B08\"", "]", ",", "[", "120", ",", "120", "]", ")", ",", "tf", ".", "float32", ")", ",", "\n", "\"B8A\"", ":", "tf", ".", "cast", "(", "tf", ".", "reshape", "(", "parsed_features", "[", "\"B8A\"", "]", ",", "[", "60", ",", "60", "]", ")", ",", "tf", ".", "float32", ")", ",", "\n", "\"B11\"", ":", "tf", ".", "cast", "(", "tf", ".", "reshape", "(", "parsed_features", "[", "\"B11\"", "]", ",", "[", "60", ",", "60", "]", ")", ",", "tf", ".", "float32", ")", ",", "\n", "\"B12\"", ":", "tf", ".", "cast", "(", "tf", ".", "reshape", "(", "parsed_features", "[", "\"B12\"", "]", ",", "[", "60", ",", "60", "]", ")", ",", "tf", ".", "float32", ")", ",", "\n", "\"VV\"", ":", "tf", ".", "reshape", "(", "parsed_features", "[", "\"VV\"", "]", ",", "[", "120", ",", "120", "]", ")", ",", "\n", "\"VH\"", ":", "tf", ".", "reshape", "(", "parsed_features", "[", "\"VV\"", "]", ",", "[", "120", ",", "120", "]", ")", ",", "\n", "\"patch_name_s1\"", ":", "parsed_features", "[", "\"patch_name_s1\"", "]", ",", "\n", "\"patch_name_s2\"", ":", "parsed_features", "[", "\"patch_name_s2\"", "]", ",", "\n", "label_type", "+", "\"_labels\"", ":", "parsed_features", "[", "label_type", "+", "\"_labels\"", "]", ",", "\n", "label_type", "\n", "+", "\"_labels_multi_hot\"", ":", "parsed_features", "[", "label_type", "+", "\"_labels_multi_hot\"", "]", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.inputs._preprocess_function": [[85, 105], ["BAND_STATS[].keys", "tensorflow.divide", "tensorflow.math.subtract", "tensorflow.constant", "tensorflow.constant"], "function", ["None"], ["", "def", "_preprocess_function", "(", "example", ",", "label_type", ")", ":", "\n", "    ", "\"\"\"Preprocess an example.\"\"\"", "\n", "newexample", "=", "{", "}", "\n", "for", "band", "in", "BAND_STATS", "[", "\"mean\"", "]", ".", "keys", "(", ")", ":", "\n", "        ", "band_tensor", "=", "example", "[", "band", "]", "\n", "newexample", "[", "band", "]", "=", "tf", ".", "divide", "(", "\n", "tf", ".", "math", ".", "subtract", "(", "\n", "band_tensor", ",", "\n", "tf", ".", "constant", "(", "BAND_STATS", "[", "\"mean\"", "]", "[", "band", "]", ",", "shape", "=", "band_tensor", ".", "shape", ")", ",", "\n", ")", ",", "\n", "tf", ".", "constant", "(", "BAND_STATS", "[", "\"std\"", "]", "[", "band", "]", ",", "shape", "=", "band_tensor", ".", "shape", ")", ",", "\n", ")", "\n", "", "newexample", "[", "label_type", "+", "\"_labels\"", "]", "=", "example", "[", "label_type", "+", "\"_labels\"", "]", "\n", "newexample", "[", "label_type", "+", "\"_labels_multi_hot\"", "]", "=", "example", "[", "\n", "label_type", "+", "\"_labels_multi_hot\"", "\n", "]", "\n", "newexample", "[", "\"patch_name_s1\"", "]", "=", "example", "[", "\"patch_name_s1\"", "]", "\n", "newexample", "[", "\"patch_name_s2\"", "]", "=", "example", "[", "\"patch_name_s2\"", "]", "\n", "\n", "return", "newexample", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.inputs.create_batched_dataset": [[107, 137], ["tensorflow.data.Dataset.list_files", "dataset.shuffle.shard", "dataset.shuffle.interleave", "dataset.shuffle.map", "dataset.shuffle.map", "dataset.shuffle.batch", "dataset.shuffle.prefetch", "inputs._parse_function", "inputs._preprocess_function", "records.extend", "dataset.shuffle.shuffle", "glob.glob"], "function", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.inputs._parse_function", "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.inputs._preprocess_function"], ["", "def", "create_batched_dataset", "(", "\n", "TFRecord_paths", ",", "\n", "batch_size", ",", "\n", "shuffle_buffer_size", ",", "\n", "label_type", ",", "\n", "num_workers", ",", "\n", "worker_index", ",", "\n", "num_parallel_calls", "=", "tf", ".", "data", ".", "experimental", ".", "AUTOTUNE", ",", "\n", ")", ":", "\n", "    ", "\"\"\"Create an input batched dataset.\"\"\"", "\n", "parse_fn", "=", "lambda", "x", ":", "_parse_function", "(", "x", ",", "label_type", "=", "label_type", ")", "\n", "preprocess_fn", "=", "lambda", "x", ":", "_preprocess_function", "(", "x", ",", "label_type", "=", "label_type", ")", "\n", "\n", "records", "=", "[", "]", "\n", "for", "i", "in", "TFRecord_paths", ":", "\n", "        ", "records", ".", "extend", "(", "glob", "(", "i", ")", ")", "\n", "\n", "", "dataset", "=", "tf", ".", "data", ".", "Dataset", ".", "list_files", "(", "TFRecord_paths", ")", "\n", "dataset", "=", "dataset", ".", "shard", "(", "num_workers", ",", "worker_index", ")", "\n", "dataset", "=", "dataset", ".", "interleave", "(", "\n", "tf", ".", "data", ".", "TFRecordDataset", ",", "num_parallel_calls", "=", "num_parallel_calls", "\n", ")", "\n", "if", "shuffle_buffer_size", ">", "0", ":", "\n", "        ", "dataset", "=", "dataset", ".", "shuffle", "(", "buffer_size", "=", "shuffle_buffer_size", ")", "\n", "", "dataset", "=", "dataset", ".", "map", "(", "parse_fn", ",", "num_parallel_calls", "=", "num_parallel_calls", ")", "\n", "dataset", "=", "dataset", ".", "map", "(", "preprocess_fn", ",", "num_parallel_calls", "=", "num_parallel_calls", ")", "\n", "dataset", "=", "dataset", ".", "batch", "(", "batch_size", ",", "drop_remainder", "=", "False", ")", "\n", "\n", "batched_dataset", "=", "dataset", ".", "prefetch", "(", "num_parallel_calls", ")", "\n", "return", "batched_dataset", "\n", "", ""]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.modules.eca_module": [[24, 35], ["int", "tensorflow.keras.layers.multiply", "abs", "tensorflow.keras.layers.GlobalAveragePooling2D", "tensorflow.keras.layers.Reshape", "tensorflow.keras.layers.Conv1D", "tensorflow.keras.layers.Activation", "tensorflow.keras.layers.Reshape", "math.log"], "function", ["None"], ["def", "eca_module", "(", "inputs_tensor", "=", "None", ",", "num", "=", "None", ",", "gamma", "=", "2", ",", "b", "=", "1", ")", ":", "\n", "    ", "channels", "=", "inputs_tensor", ".", "shape", "[", "-", "1", "]", "\n", "t", "=", "int", "(", "abs", "(", "(", "math", ".", "log", "(", "channels", ",", "2", ")", "+", "b", ")", "/", "gamma", ")", ")", "\n", "k", "=", "t", "if", "t", "%", "2", "else", "t", "+", "1", "\n", "x_global_avg_pool", "=", "GlobalAveragePooling2D", "(", ")", "(", "inputs_tensor", ")", "\n", "x", "=", "Reshape", "(", "(", "channels", ",", "1", ")", ")", "(", "x_global_avg_pool", ")", "\n", "x", "=", "Conv1D", "(", "1", ",", "kernel_size", "=", "k", ",", "padding", "=", "\"same\"", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "sigmoid", ")", "(", "x", ")", "\n", "x", "=", "Reshape", "(", "(", "1", ",", "1", ",", "channels", ")", ")", "(", "x", ")", "\n", "output", "=", "multiply", "(", "[", "inputs_tensor", ",", "x", "]", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.modules.ghost_module": [[37, 59], ["tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.BatchNormalization", "tensorflow.keras.layers.Activation", "tensorflow.keras.layers.DepthwiseConv2D", "tensorflow.keras.layers.BatchNormalization", "tensorflow.keras.layers.Activation", "tensorflow.keras.layers.Concatenate", "tensorflow.keras.regularizers.l2", "tensorflow.keras.regularizers.l2"], "function", ["None"], ["", "def", "ghost_module", "(", "x", ",", "out_channels", ",", "kernel_size", ",", "strides", ")", ":", "\n", "    ", "x1", "=", "Conv2D", "(", "\n", "out_channels", "//", "2", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "strides", "=", "strides", ",", "\n", "padding", "=", "\"same\"", ",", "\n", "use_bias", "=", "False", ",", "\n", "kernel_initializer", "=", "\"he_normal\"", ",", "\n", "kernel_regularizer", "=", "tf", ".", "keras", ".", "regularizers", ".", "l2", "(", "5e-4", ")", ",", "\n", ")", "(", "x", ")", "\n", "x2", "=", "BatchNormalization", "(", "momentum", "=", "0.1", ",", "epsilon", "=", "1e-5", ",", "gamma_initializer", "=", "\"uniform\"", ")", "(", "x1", ")", "\n", "x2", "=", "Activation", "(", "relu", ")", "(", "x2", ")", "\n", "x2", "=", "DepthwiseConv2D", "(", "\n", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "\n", "strides", "=", "1", ",", "\n", "padding", "=", "\"same\"", ",", "\n", "use_bias", "=", "False", ",", "\n", "kernel_regularizer", "=", "tf", ".", "keras", ".", "regularizers", ".", "l2", "(", "5e-4", ")", ",", "\n", ")", "(", "x2", ")", "\n", "x2", "=", "BatchNormalization", "(", "momentum", "=", "0.1", ",", "epsilon", "=", "1e-5", ",", "gamma_initializer", "=", "\"uniform\"", ")", "(", "x1", ")", "\n", "x2", "=", "Activation", "(", "relu", ")", "(", "x2", ")", "\n", "return", "Concatenate", "(", ")", "(", "[", "x1", ",", "x2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.modules.coord_module": [[61, 86], ["x.get_shape().as_list", "tensorflow.transpose", "tensorflow.concat", "max", "modules.coord_module.coord_act"], "function", ["None"], ["", "def", "coord_module", "(", "x", ",", "reduction", "=", "32", ")", ":", "\n", "    ", "def", "coord_act", "(", "x", ")", ":", "\n", "        ", "tmpx", "=", "tf", ".", "nn", ".", "relu6", "(", "x", "+", "3", ")", "/", "6", "\n", "x", "=", "x", "*", "tmpx", "\n", "return", "x", "\n", "\n", "", "x_shape", "=", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "\n", "[", "b", ",", "h", ",", "w", ",", "c", "]", "=", "x_shape", "\n", "x_h", "=", "AveragePooling2D", "(", "pool_size", "=", "(", "1", ",", "w", ")", ",", "strides", "=", "1", ")", "(", "x", ")", "\n", "x_w", "=", "AveragePooling2D", "(", "pool_size", "=", "(", "h", ",", "1", ")", ",", "strides", "=", "1", ")", "(", "x", ")", "\n", "x_w", "=", "tf", ".", "transpose", "(", "x_w", ",", "[", "0", ",", "2", ",", "1", ",", "3", "]", ")", "\n", "\n", "y", "=", "tf", ".", "concat", "(", "[", "x_h", ",", "x_w", "]", ",", "axis", "=", "1", ")", "\n", "mip", "=", "max", "(", "8", ",", "c", "//", "reduction", ")", "\n", "y", "=", "Conv2D", "(", "mip", ",", "(", "1", ",", "1", ")", ",", "strides", "=", "1", ",", "padding", "=", "\"VALID\"", ")", "(", "y", ")", "\n", "y", "=", "BatchNormalization", "(", "momentum", "=", "0.1", ",", "epsilon", "=", "1e-5", ",", "gamma_initializer", "=", "\"uniform\"", ")", "(", "y", ")", "\n", "y", "=", "coord_act", "(", "y", ")", "\n", "\n", "x_h", ",", "x_w", "=", "tf", ".", "split", "(", "y", ",", "num_or_size_splits", "=", "2", ",", "axis", "=", "1", ")", "\n", "x_w", "=", "tf", ".", "transpose", "(", "x_w", ",", "[", "0", ",", "2", ",", "1", ",", "3", "]", ")", "\n", "a_h", "=", "Conv2D", "(", "c", ",", "(", "1", ",", "1", ")", ",", "strides", "=", "1", ",", "padding", "=", "\"VALID\"", ",", "activation", "=", "sigmoid", ")", "(", "x_h", ")", "\n", "a_w", "=", "Conv2D", "(", "c", ",", "(", "1", ",", "1", ")", ",", "strides", "=", "1", ",", "padding", "=", "\"VALID\"", ",", "activation", "=", "sigmoid", ")", "(", "x_w", ")", "\n", "\n", "out", "=", "x", "*", "a_h", "*", "a_w", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.modules.se_module": [[88, 114], ["tensorflow.keras.layers.multiply", "tensorflow.keras.layers.GlobalAveragePooling2D", "tensorflow.keras.layers.Reshape", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense"], "function", ["None"], ["", "def", "se_module", "(", "input_feature", ",", "ratio", "=", "16", ")", ":", "\n", "    ", "\"\"\"Contains the implementation of Squeeze-and-Excitation(SE) block.\n    As described in https://arxiv.org/abs/1709.01507.\n    \"\"\"", "\n", "\n", "channel", "=", "input_feature", ".", "shape", "[", "-", "1", "]", "\n", "\n", "se_feature", "=", "GlobalAveragePooling2D", "(", ")", "(", "input_feature", ")", "\n", "se_feature", "=", "Reshape", "(", "(", "1", ",", "1", ",", "channel", ")", ")", "(", "se_feature", ")", "\n", "se_feature", "=", "Dense", "(", "\n", "channel", "//", "ratio", ",", "\n", "activation", "=", "\"swish\"", ",", "\n", "kernel_initializer", "=", "\"he_normal\"", ",", "\n", "use_bias", "=", "True", ",", "\n", "bias_initializer", "=", "\"zeros\"", ",", "\n", ")", "(", "se_feature", ")", "\n", "se_feature", "=", "Dense", "(", "\n", "channel", ",", "\n", "activation", "=", "\"sigmoid\"", ",", "\n", "kernel_initializer", "=", "\"he_normal\"", ",", "\n", "use_bias", "=", "True", ",", "\n", "bias_initializer", "=", "\"zeros\"", ",", "\n", ")", "(", "se_feature", ")", "\n", "\n", "se_feature", "=", "multiply", "(", "[", "input_feature", ",", "se_feature", "]", ")", "\n", "return", "se_feature", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.modules.cbam_module": [[116, 124], ["modules.channel_attention", "modules.spatial_attention"], "function", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.modules.channel_attention", "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.modules.spatial_attention"], ["", "def", "cbam_module", "(", "cbam_feature", ",", "ratio", "=", "16", ")", ":", "\n", "    ", "\"\"\"Contains the implementation of Convolutional Block Attention Module(CBAM) block.\n    As described in https://arxiv.org/abs/1807.06521.\n    \"\"\"", "\n", "\n", "cbam_feature", "=", "channel_attention", "(", "cbam_feature", ",", "ratio", ")", "\n", "cbam_feature", "=", "spatial_attention", "(", "cbam_feature", ")", "\n", "return", "cbam_feature", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.modules.channel_attention": [[126, 154], ["tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense.", "tensorflow.keras.layers.Dense.", "tensorflow.keras.layers.Dense.", "tensorflow.keras.layers.Dense.", "tensorflow.keras.layers.multiply", "tensorflow.keras.layers.GlobalAveragePooling2D", "tensorflow.keras.layers.Reshape", "tensorflow.keras.layers.GlobalMaxPooling2D", "tensorflow.keras.layers.Reshape", "tensorflow.keras.layers.Add", "tensorflow.keras.layers.Activation"], "function", ["None"], ["", "def", "channel_attention", "(", "input_feature", ",", "ratio", "=", "8", ")", ":", "\n", "\n", "    ", "channel", "=", "input_feature", ".", "shape", "[", "-", "1", "]", "\n", "shared_layer_one", "=", "Dense", "(", "\n", "channel", "//", "ratio", ",", "\n", "activation", "=", "\"relu\"", ",", "\n", "kernel_initializer", "=", "\"he_normal\"", ",", "\n", "use_bias", "=", "True", ",", "\n", "bias_initializer", "=", "\"zeros\"", ",", "\n", ")", "\n", "shared_layer_two", "=", "Dense", "(", "\n", "channel", ",", "kernel_initializer", "=", "\"he_normal\"", ",", "use_bias", "=", "True", ",", "bias_initializer", "=", "\"zeros\"", "\n", ")", "\n", "\n", "avg_pool", "=", "GlobalAveragePooling2D", "(", ")", "(", "input_feature", ")", "\n", "avg_pool", "=", "Reshape", "(", "(", "1", ",", "1", ",", "channel", ")", ")", "(", "avg_pool", ")", "\n", "avg_pool", "=", "shared_layer_one", "(", "avg_pool", ")", "\n", "avg_pool", "=", "shared_layer_two", "(", "avg_pool", ")", "\n", "\n", "max_pool", "=", "GlobalMaxPooling2D", "(", ")", "(", "input_feature", ")", "\n", "max_pool", "=", "Reshape", "(", "(", "1", ",", "1", ",", "channel", ")", ")", "(", "max_pool", ")", "\n", "max_pool", "=", "shared_layer_one", "(", "max_pool", ")", "\n", "max_pool", "=", "shared_layer_two", "(", "max_pool", ")", "\n", "\n", "cbam_feature", "=", "Add", "(", ")", "(", "[", "avg_pool", ",", "max_pool", "]", ")", "\n", "cbam_feature", "=", "Activation", "(", "\"sigmoid\"", ")", "(", "cbam_feature", ")", "\n", "\n", "return", "multiply", "(", "[", "input_feature", ",", "cbam_feature", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.modules.spatial_attention": [[156, 174], ["tensorflow.keras.layers.multiply", "tensorflow.keras.layers.Lambda", "tensorflow.keras.layers.Lambda", "tensorflow.keras.layers.Concatenate", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.backend.mean", "tensorflow.keras.backend.max"], "function", ["None"], ["", "def", "spatial_attention", "(", "input_feature", ")", ":", "\n", "    ", "kernel_size", "=", "7", "\n", "\n", "cbam_feature", "=", "input_feature", "\n", "avg_pool", "=", "Lambda", "(", "lambda", "x", ":", "K", ".", "mean", "(", "x", ",", "axis", "=", "3", ",", "keepdims", "=", "True", ")", ")", "(", "cbam_feature", ")", "\n", "max_pool", "=", "Lambda", "(", "lambda", "x", ":", "K", ".", "max", "(", "x", ",", "axis", "=", "3", ",", "keepdims", "=", "True", ")", ")", "(", "cbam_feature", ")", "\n", "concat", "=", "Concatenate", "(", "axis", "=", "3", ")", "(", "[", "avg_pool", ",", "max_pool", "]", ")", "\n", "cbam_feature", "=", "Conv2D", "(", "\n", "filters", "=", "1", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "strides", "=", "1", ",", "\n", "padding", "=", "\"same\"", ",", "\n", "activation", "=", "\"sigmoid\"", ",", "\n", "kernel_initializer", "=", "\"he_normal\"", ",", "\n", "use_bias", "=", "False", ",", "\n", ")", "(", "concat", ")", "\n", "\n", "return", "multiply", "(", "[", "input_feature", ",", "cbam_feature", "]", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.metrics.CustomMetrics.__init__": [[15, 38], ["super().__init__", "tensorflow.constant", "metrics.CustomMetrics.add_weight", "metrics.CustomMetrics.add_weight", "metrics.CustomMetrics.add_weight", "metrics.CustomMetrics.add_weight", "metrics.CustomMetrics.add_weight"], "methods", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.metrics.CustomMetrics.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nb_class", ",", "name", "=", "\"custom_metrics\"", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "CustomMetrics", ",", "self", ")", ".", "__init__", "(", "name", "=", "name", ",", "**", "kwargs", ")", "\n", "self", ".", "_prediction_threshold", "=", "0.5", "\n", "self", ".", "_zero", "=", "tf", ".", "constant", "(", "0.0", ",", "dtype", "=", "tf", ".", "float64", ")", "\n", "self", ".", "_nb_class", "=", "nb_class", "\n", "\n", "self", ".", "_class_tp", "=", "self", ".", "add_weight", "(", "\n", "name", "=", "\"tp\"", ",", "shape", "=", "(", "nb_class", ",", ")", ",", "initializer", "=", "\"zeros\"", ",", "dtype", "=", "tf", ".", "float64", "\n", ")", "\n", "self", ".", "_class_fp", "=", "self", ".", "add_weight", "(", "\n", "name", "=", "\"fp\"", ",", "shape", "=", "(", "nb_class", ",", ")", ",", "initializer", "=", "\"zeros\"", ",", "dtype", "=", "tf", ".", "float64", "\n", ")", "\n", "self", ".", "_class_tn", "=", "self", ".", "add_weight", "(", "\n", "name", "=", "\"tn\"", ",", "shape", "=", "(", "nb_class", ",", ")", ",", "initializer", "=", "\"zeros\"", ",", "dtype", "=", "tf", ".", "float64", "\n", ")", "\n", "self", ".", "_class_fn", "=", "self", ".", "add_weight", "(", "\n", "name", "=", "\"fn\"", ",", "shape", "=", "(", "nb_class", ",", ")", ",", "initializer", "=", "\"zeros\"", ",", "dtype", "=", "tf", ".", "float64", "\n", ")", "\n", "self", ".", "_class_label_union_pred", "=", "self", ".", "add_weight", "(", "\n", "name", "=", "\"label_union_pred\"", ",", "\n", "shape", "=", "(", "nb_class", ",", ")", ",", "\n", "initializer", "=", "\"zeros\"", ",", "\n", "dtype", "=", "tf", ".", "float64", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.metrics.CustomMetrics.update_state": [[40, 93], ["tensorflow.cast", "tensorflow.cast", "tensorflow.cast", "tensorflow.cast", "tensorflow.cast", "tensorflow.cast", "tensorflow.cast", "metrics.CustomMetrics._class_tp.assign_add", "metrics.CustomMetrics._class_fp.assign_add", "metrics.CustomMetrics._class_tn.assign_add", "metrics.CustomMetrics._class_fn.assign_add", "metrics.CustomMetrics._class_label_union_pred.assign_add", "tensorflow.convert_to_tensor", "tensorflow.reshape", "tensorflow.logical_and", "tensorflow.logical_and", "tensorflow.logical_and", "tensorflow.logical_and", "tensorflow.logical_or", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.transpose", "tensorflow.not_equal", "tensorflow.not_equal", "tensorflow.not_equal", "tensorflow.equal", "tensorflow.equal", "tensorflow.equal", "tensorflow.equal", "tensorflow.not_equal", "tensorflow.not_equal", "tensorflow.not_equal"], "methods", ["None"], ["", "def", "update_state", "(", "self", ",", "y_true", ",", "y_pred", ",", "sample_weight", "=", "None", ")", ":", "\n", "        ", "y_true", "=", "tf", ".", "cast", "(", "y_true", ",", "tf", ".", "float64", ")", "\n", "predictions", "=", "tf", ".", "cast", "(", "y_pred", ">=", "self", ".", "_prediction_threshold", ",", "tf", ".", "float64", ")", "\n", "\n", "true_positive", "=", "tf", ".", "cast", "(", "\n", "tf", ".", "logical_and", "(", "\n", "tf", ".", "not_equal", "(", "predictions", ",", "self", ".", "_zero", ")", ",", "tf", ".", "not_equal", "(", "y_true", ",", "self", ".", "_zero", ")", "\n", ")", ",", "\n", "tf", ".", "float64", ",", "\n", ")", "\n", "false_positive", "=", "tf", ".", "cast", "(", "\n", "tf", ".", "logical_and", "(", "\n", "tf", ".", "not_equal", "(", "predictions", ",", "self", ".", "_zero", ")", ",", "tf", ".", "equal", "(", "y_true", ",", "self", ".", "_zero", ")", "\n", ")", ",", "\n", "tf", ".", "float64", ",", "\n", ")", "\n", "true_negative", "=", "tf", ".", "cast", "(", "\n", "tf", ".", "logical_and", "(", "\n", "tf", ".", "equal", "(", "predictions", ",", "self", ".", "_zero", ")", ",", "tf", ".", "equal", "(", "y_true", ",", "self", ".", "_zero", ")", "\n", ")", ",", "\n", "tf", ".", "float64", ",", "\n", ")", "\n", "false_negative", "=", "tf", ".", "cast", "(", "\n", "tf", ".", "logical_and", "(", "\n", "tf", ".", "equal", "(", "predictions", ",", "self", ".", "_zero", ")", ",", "tf", ".", "not_equal", "(", "y_true", ",", "self", ".", "_zero", ")", "\n", ")", ",", "\n", "tf", ".", "float64", ",", "\n", ")", "\n", "label_union_prediction", "=", "tf", ".", "cast", "(", "\n", "tf", ".", "logical_or", "(", "\n", "tf", ".", "not_equal", "(", "predictions", ",", "self", ".", "_zero", ")", ",", "tf", ".", "not_equal", "(", "y_true", ",", "self", ".", "_zero", ")", "\n", ")", ",", "\n", "tf", ".", "float64", ",", "\n", ")", "\n", "\n", "self", ".", "_class_tp", ".", "assign_add", "(", "tf", ".", "reduce_sum", "(", "true_positive", ",", "axis", "=", "0", ")", ")", "\n", "self", ".", "_class_fp", ".", "assign_add", "(", "tf", ".", "reduce_sum", "(", "false_positive", ",", "axis", "=", "0", ")", ")", "\n", "self", ".", "_class_tn", ".", "assign_add", "(", "tf", ".", "reduce_sum", "(", "true_negative", ",", "axis", "=", "0", ")", ")", "\n", "self", ".", "_class_fn", ".", "assign_add", "(", "tf", ".", "reduce_sum", "(", "false_negative", ",", "axis", "=", "0", ")", ")", "\n", "self", ".", "_class_label_union_pred", ".", "assign_add", "(", "\n", "tf", ".", "reduce_sum", "(", "label_union_prediction", ",", "axis", "=", "0", ")", "\n", ")", "\n", "\n", "flat_confusion_matrix", "=", "tf", ".", "convert_to_tensor", "(", "\n", "[", "\n", "self", ".", "_class_tn", ",", "\n", "self", ".", "_class_fp", ",", "\n", "self", ".", "_class_fn", ",", "\n", "self", ".", "_class_tp", ",", "\n", "]", "\n", ")", "\n", "self", ".", "_confusion_matrix", "=", "tf", ".", "reshape", "(", "\n", "tf", ".", "transpose", "(", "flat_confusion_matrix", ")", ",", "[", "-", "1", ",", "2", ",", "2", "]", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.metrics.CustomMetrics.result": [[95, 229], ["tensorflow.where", "tensorflow.where", "tensorflow.reduce_mean", "tensorflow.where", "tensorflow.where", "tensorflow.reduce_mean", "tensorflow.reduce_sum", "tensorflow.where", "tensorflow.where", "tensorflow.reduce_mean", "tensorflow.where", "tensorflow.where", "tensorflow.reduce_mean", "tensorflow.where", "tensorflow.where", "tensorflow.reduce_mean", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.equal", "tensorflow.equal", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.equal", "tensorflow.equal", "tensorflow.equal", "tensorflow.equal", "tensorflow.logical_and", "tensorflow.logical_and", "tensorflow.logical_and", "tensorflow.logical_and", "tensorflow.divide", "tensorflow.divide", "tensorflow.divide", "tensorflow.divide", "tensorflow.divide", "tensorflow.divide", "tensorflow.equal", "tensorflow.equal", "tensorflow.equal", "tensorflow.equal", "tensorflow.equal", "tensorflow.equal", "tensorflow.equal", "tensorflow.equal", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum"], "methods", ["None"], ["", "def", "result", "(", "self", ")", ":", "\n", "# Precision", "\n", "        ", "nb_label", "=", "tf", ".", "reduce_sum", "(", "self", ".", "_class_tp", ")", "+", "tf", ".", "reduce_sum", "(", "self", ".", "_class_fp", ")", "\n", "micro_precision", "=", "tf", ".", "where", "(", "\n", "tf", ".", "equal", "(", "nb_label", ",", "self", ".", "_zero", ")", ",", "\n", "x", "=", "self", ".", "_zero", ",", "\n", "y", "=", "tf", ".", "divide", "(", "tf", ".", "reduce_sum", "(", "self", ".", "_class_tp", ")", ",", "nb_label", ")", ",", "\n", ")", "\n", "\n", "nb_predict_class", "=", "self", ".", "_class_tp", "+", "self", ".", "_class_fp", "\n", "\n", "macro_precision_class", "=", "tf", ".", "where", "(", "\n", "tf", ".", "equal", "(", "nb_predict_class", ",", "self", ".", "_zero", ")", ",", "\n", "x", "=", "self", ".", "_zero", ",", "\n", "y", "=", "tf", ".", "divide", "(", "self", ".", "_class_tp", ",", "nb_predict_class", ")", ",", "\n", ")", "\n", "macro_precision", "=", "tf", ".", "reduce_mean", "(", "macro_precision_class", ")", "\n", "\n", "# Recall", "\n", "nb_label", "=", "tf", ".", "reduce_sum", "(", "self", ".", "_class_tp", ")", "+", "tf", ".", "reduce_sum", "(", "self", ".", "_class_fn", ")", "\n", "micro_recall", "=", "tf", ".", "where", "(", "\n", "tf", ".", "equal", "(", "nb_label", ",", "self", ".", "_zero", ")", ",", "\n", "x", "=", "self", ".", "_zero", ",", "\n", "y", "=", "tf", ".", "divide", "(", "tf", ".", "reduce_sum", "(", "self", ".", "_class_tp", ")", ",", "nb_label", ")", ",", "\n", ")", "\n", "\n", "nb_label_class", "=", "self", ".", "_class_tp", "+", "self", ".", "_class_fn", "\n", "macro_recall_class", "=", "tf", ".", "where", "(", "\n", "tf", ".", "equal", "(", "nb_label_class", ",", "self", ".", "_zero", ")", ",", "\n", "x", "=", "self", ".", "_zero", ",", "\n", "y", "=", "tf", ".", "divide", "(", "self", ".", "_class_tp", ",", "nb_label_class", ")", ",", "\n", ")", "\n", "macro_recall", "=", "tf", ".", "reduce_mean", "(", "macro_recall_class", ")", "\n", "\n", "# Accuracy", "\n", "label_union_pred_class_sum", "=", "tf", ".", "reduce_sum", "(", "self", ".", "_class_label_union_pred", ")", "\n", "micro_accuracy", "=", "tf", ".", "where", "(", "\n", "tf", ".", "equal", "(", "label_union_pred_class_sum", ",", "self", ".", "_zero", ")", ",", "\n", "x", "=", "self", ".", "_zero", ",", "\n", "y", "=", "tf", ".", "divide", "(", "tf", ".", "reduce_sum", "(", "self", ".", "_class_tp", ")", ",", "label_union_pred_class_sum", ")", ",", "\n", ")", "\n", "\n", "label_union_pred_class", "=", "self", ".", "_class_label_union_pred", "\n", "macro_accuracy_class", "=", "tf", ".", "where", "(", "\n", "tf", ".", "equal", "(", "label_union_pred_class", ",", "self", ".", "_zero", ")", ",", "\n", "x", "=", "self", ".", "_zero", ",", "\n", "y", "=", "tf", ".", "divide", "(", "self", ".", "_class_tp", ",", "label_union_pred_class", ")", ",", "\n", ")", "\n", "macro_accuracy", "=", "tf", ".", "reduce_mean", "(", "macro_accuracy_class", ")", "\n", "\n", "# F1-Score", "\n", "micro_f1score", "=", "tf", ".", "where", "(", "\n", "tf", ".", "logical_and", "(", "\n", "tf", ".", "equal", "(", "micro_precision", ",", "self", ".", "_zero", ")", ",", "\n", "tf", ".", "equal", "(", "micro_recall", ",", "self", ".", "_zero", ")", ",", "\n", ")", ",", "\n", "x", "=", "self", ".", "_zero", ",", "\n", "y", "=", "2", "*", "(", "micro_precision", "*", "micro_recall", ")", "/", "(", "micro_precision", "+", "micro_recall", ")", ",", "\n", ")", "\n", "\n", "macro_f1score_class", "=", "tf", ".", "where", "(", "\n", "tf", ".", "logical_and", "(", "\n", "tf", ".", "equal", "(", "macro_precision_class", ",", "self", ".", "_zero", ")", ",", "\n", "tf", ".", "equal", "(", "macro_recall_class", ",", "self", ".", "_zero", ")", ",", "\n", ")", ",", "\n", "x", "=", "self", ".", "_zero", ",", "\n", "y", "=", "2", "\n", "*", "(", "macro_precision_class", "*", "macro_recall_class", ")", "\n", "/", "(", "macro_precision_class", "+", "macro_recall_class", ")", ",", "\n", ")", "\n", "macro_f1score", "=", "tf", ".", "reduce_mean", "(", "macro_f1score_class", ")", "\n", "\n", "# F2-Score", "\n", "micro_f2score", "=", "tf", ".", "where", "(", "\n", "tf", ".", "logical_and", "(", "\n", "tf", ".", "equal", "(", "micro_precision", ",", "self", ".", "_zero", ")", ",", "\n", "tf", ".", "equal", "(", "micro_recall", ",", "self", ".", "_zero", ")", ",", "\n", ")", ",", "\n", "x", "=", "self", ".", "_zero", ",", "\n", "y", "=", "(", "5", "*", "micro_precision", "*", "micro_recall", ")", "\n", "/", "(", "4", "*", "micro_precision", "+", "micro_recall", ")", ",", "\n", ")", "\n", "\n", "macro_f2score_class", "=", "tf", ".", "where", "(", "\n", "tf", ".", "logical_and", "(", "\n", "tf", ".", "equal", "(", "macro_precision_class", ",", "self", ".", "_zero", ")", ",", "\n", "tf", ".", "equal", "(", "macro_recall_class", ",", "self", ".", "_zero", ")", ",", "\n", ")", ",", "\n", "x", "=", "self", ".", "_zero", ",", "\n", "y", "=", "(", "5", "*", "macro_precision_class", "*", "macro_recall_class", ")", "\n", "/", "(", "4", "*", "macro_precision_class", "+", "macro_recall_class", ")", ",", "\n", ")", "\n", "macro_f2score", "=", "tf", ".", "reduce_mean", "(", "macro_f2score_class", ")", "\n", "\n", "# pprint(", "\n", "#     dict(", "\n", "#         zip(", "\n", "#             [", "\n", "#                 \"Urban fabric\",", "\n", "#                 \"Industrial or commercial units\",", "\n", "#                 \"Arable land\",", "\n", "#                 \"Permanent crops\",", "\n", "#                 \"Pastures\",", "\n", "#                 \"Complex cultivation patterns\",", "\n", "#                 \"Land principally occupied by agriculture, with significant areas of natural vegetation\",", "\n", "#                 \"Agro-forestry areas\",", "\n", "#                 \"Broad-leaved forest\",", "\n", "#                 \"Coniferous forest\",", "\n", "#                 \"Mixed forest\",", "\n", "#                 \"Natural grassland and sparsely vegetated areas\",", "\n", "#                 \"Moors, heathland and sclerophyllous vegetation\",", "\n", "#                 \"Transitional woodland, shrub\",", "\n", "#                 \"Beaches, dunes, sands\",", "\n", "#                 \"Inland wetlands\",", "\n", "#                 \"Coastal wetlands\",", "\n", "#                 \"Inland waters\",", "\n", "#                 \"Marine waters\",", "\n", "#             ],", "\n", "#             np.round(macro_f2score_class.numpy(), 4),", "\n", "#         )", "\n", "#     )", "\n", "# )", "\n", "\n", "return", "(", "\n", "micro_precision", ",", "\n", "macro_precision", ",", "\n", "micro_recall", ",", "\n", "macro_recall", ",", "\n", "micro_accuracy", ",", "\n", "macro_accuracy", ",", "\n", "micro_f1score", ",", "\n", "macro_f1score", ",", "\n", "micro_f2score", ",", "\n", "macro_f2score", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.metrics.CustomMetrics.reset_states": [[231, 233], ["tensorflow.python.keras.backend.batch_set_value", "numpy.zeros"], "methods", ["None"], ["", "def", "reset_states", "(", "self", ")", ":", "\n", "        ", "K", ".", "batch_set_value", "(", "[", "(", "v", ",", "np", ".", "zeros", "(", "(", "self", ".", "_nb_class", ",", ")", ")", ")", "for", "v", "in", "self", ".", "variables", "]", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.train.evaluate_model": [[21, 172], ["print", "metrics.CustomMetrics", "time.time", "enumerate", "metrics.CustomMetrics.result", "iter", "model", "metrics.CustomMetrics.update_state", "print", "print", "hvd.join", "hvd.allreduce", "hvd.allreduce", "hvd.allreduce", "hvd.allreduce", "hvd.allreduce", "hvd.allreduce", "hvd.allreduce", "hvd.allreduce", "hvd.allreduce", "hvd.allreduce", "range", "enumerate", "len", "single_batch[].values.numpy().tolist", "GradCAM", "gradcam_x_all.append", "single_batch[].values.numpy().tolist", "str", "hvd.rank", "gradcam_x_all.append", "single_batch[].values.numpy", "single_batch[].values.numpy().tolist", "single_batch[].values.numpy().tolist", "list", "ValueError", "datetime.datetime.now().strftime", "gradcam_x_all.append", "single_batch[].values.numpy", "map", "time.time", "single_batch[].values.numpy", "single_batch[].values.numpy", "zip", "datetime.datetime.now"], "function", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.metrics.CustomMetrics.result", "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.BigEarthModel.model", "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.metrics.CustomMetrics.update_state", "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.gradcam.GradCAM"], ["def", "evaluate_model", "(", "model", ",", "batched_dataset", ",", "nb_class", ",", "args", ",", "gradcam", "=", "False", ")", ":", "\n", "    ", "\"\"\"Evaluate model using the eval dataset\"\"\"", "\n", "print", "(", "\"Running model on validation dataset\"", ")", "\n", "custom_metrics", "=", "CustomMetrics", "(", "nb_class", "=", "nb_class", ")", "\n", "\n", "processed_imgs", "=", "0", "\n", "start", "=", "time", ".", "time", "(", ")", "\n", "for", "_", ",", "single_batch", "in", "enumerate", "(", "iter", "(", "batched_dataset", ")", ")", ":", "\n", "        ", "if", "args", "[", "\"modality\"", "]", "==", "\"S1\"", ":", "\n", "            ", "x_all", "=", "[", "\n", "single_batch", "[", "\"VV\"", "]", ",", "\n", "single_batch", "[", "\"VH\"", "]", ",", "\n", "]", "\n", "", "elif", "args", "[", "\"modality\"", "]", "==", "\"S2\"", ":", "\n", "            ", "x_all", "=", "[", "\n", "single_batch", "[", "\"B02\"", "]", ",", "\n", "single_batch", "[", "\"B03\"", "]", ",", "\n", "single_batch", "[", "\"B04\"", "]", ",", "\n", "single_batch", "[", "\"B05\"", "]", ",", "\n", "single_batch", "[", "\"B06\"", "]", ",", "\n", "single_batch", "[", "\"B07\"", "]", ",", "\n", "single_batch", "[", "\"B08\"", "]", ",", "\n", "single_batch", "[", "\"B8A\"", "]", ",", "\n", "single_batch", "[", "\"B11\"", "]", ",", "\n", "single_batch", "[", "\"B12\"", "]", ",", "\n", "]", "\n", "", "elif", "args", "[", "\"modality\"", "]", "==", "\"MM\"", ":", "\n", "            ", "x_all", "=", "[", "\n", "single_batch", "[", "\"B02\"", "]", ",", "\n", "single_batch", "[", "\"B03\"", "]", ",", "\n", "single_batch", "[", "\"B04\"", "]", ",", "\n", "single_batch", "[", "\"B05\"", "]", ",", "\n", "single_batch", "[", "\"B06\"", "]", ",", "\n", "single_batch", "[", "\"B07\"", "]", ",", "\n", "single_batch", "[", "\"B08\"", "]", ",", "\n", "single_batch", "[", "\"B8A\"", "]", ",", "\n", "single_batch", "[", "\"B11\"", "]", ",", "\n", "single_batch", "[", "\"B12\"", "]", ",", "\n", "single_batch", "[", "\"VV\"", "]", ",", "\n", "single_batch", "[", "\"VH\"", "]", ",", "\n", "]", "\n", "", "y", "=", "single_batch", "[", "args", "[", "\"label_type\"", "]", "+", "\"_labels_multi_hot\"", "]", "\n", "# Compare predicted label to actual label", "\n", "y_", "=", "model", "(", "x_all", ",", "training", "=", "False", ")", "\n", "\n", "# Update all custom metrics", "\n", "custom_metrics", ".", "update_state", "(", "y", ",", "y_", ")", "\n", "\n", "processed_imgs", "+=", "x_all", "[", "0", "]", ".", "shape", "[", "0", "]", "\n", "\n", "if", "gradcam", ":", "\n", "            ", "gradcam_x_all", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "len", "(", "single_batch", ")", ")", ":", "\n", "                ", "if", "args", "[", "\"modality\"", "]", "==", "\"S1\"", ":", "\n", "                    ", "gradcam_x_all", ".", "append", "(", "\n", "[", "\n", "single_batch", "[", "\"VV\"", "]", "[", "j", ":", "j", "+", "1", "]", "[", ":", "]", "[", ":", "]", ",", "\n", "single_batch", "[", "\"VH\"", "]", "[", "j", ":", "j", "+", "1", "]", "[", ":", "]", "[", ":", "]", ",", "\n", "]", "\n", ")", "\n", "", "elif", "args", "[", "\"modality\"", "]", "==", "\"S2\"", ":", "\n", "                    ", "gradcam_x_all", ".", "append", "(", "\n", "[", "\n", "single_batch", "[", "\"B02\"", "]", "[", "j", ":", "j", "+", "1", "]", "[", ":", "]", "[", ":", "]", ",", "\n", "single_batch", "[", "\"B03\"", "]", "[", "j", ":", "j", "+", "1", "]", "[", ":", "]", "[", ":", "]", ",", "\n", "single_batch", "[", "\"B04\"", "]", "[", "j", ":", "j", "+", "1", "]", "[", ":", "]", "[", ":", "]", ",", "\n", "single_batch", "[", "\"B05\"", "]", "[", "j", ":", "j", "+", "1", "]", "[", ":", "]", "[", ":", "]", ",", "\n", "single_batch", "[", "\"B06\"", "]", "[", "j", ":", "j", "+", "1", "]", "[", ":", "]", "[", ":", "]", ",", "\n", "single_batch", "[", "\"B07\"", "]", "[", "j", ":", "j", "+", "1", "]", "[", ":", "]", "[", ":", "]", ",", "\n", "single_batch", "[", "\"B08\"", "]", "[", "j", ":", "j", "+", "1", "]", "[", ":", "]", "[", ":", "]", ",", "\n", "single_batch", "[", "\"B8A\"", "]", "[", "j", ":", "j", "+", "1", "]", "[", ":", "]", "[", ":", "]", ",", "\n", "single_batch", "[", "\"B11\"", "]", "[", "j", ":", "j", "+", "1", "]", "[", ":", "]", "[", ":", "]", ",", "\n", "single_batch", "[", "\"B12\"", "]", "[", "j", ":", "j", "+", "1", "]", "[", ":", "]", "[", ":", "]", ",", "\n", "]", "\n", ")", "\n", "", "elif", "args", "[", "\"modality\"", "]", "==", "\"MM\"", ":", "\n", "                    ", "gradcam_x_all", ".", "append", "(", "\n", "[", "\n", "single_batch", "[", "\"B02\"", "]", "[", "j", ":", "j", "+", "1", "]", "[", ":", "]", "[", ":", "]", ",", "\n", "single_batch", "[", "\"B03\"", "]", "[", "j", ":", "j", "+", "1", "]", "[", ":", "]", "[", ":", "]", ",", "\n", "single_batch", "[", "\"B04\"", "]", "[", "j", ":", "j", "+", "1", "]", "[", ":", "]", "[", ":", "]", ",", "\n", "single_batch", "[", "\"B05\"", "]", "[", "j", ":", "j", "+", "1", "]", "[", ":", "]", "[", ":", "]", ",", "\n", "single_batch", "[", "\"B06\"", "]", "[", "j", ":", "j", "+", "1", "]", "[", ":", "]", "[", ":", "]", ",", "\n", "single_batch", "[", "\"B07\"", "]", "[", "j", ":", "j", "+", "1", "]", "[", ":", "]", "[", ":", "]", ",", "\n", "single_batch", "[", "\"B08\"", "]", "[", "j", ":", "j", "+", "1", "]", "[", ":", "]", "[", ":", "]", ",", "\n", "single_batch", "[", "\"B8A\"", "]", "[", "j", ":", "j", "+", "1", "]", "[", ":", "]", "[", ":", "]", ",", "\n", "single_batch", "[", "\"B11\"", "]", "[", "j", ":", "j", "+", "1", "]", "[", ":", "]", "[", ":", "]", ",", "\n", "single_batch", "[", "\"B12\"", "]", "[", "j", ":", "j", "+", "1", "]", "[", ":", "]", "[", ":", "]", ",", "\n", "single_batch", "[", "\"VV\"", "]", "[", "j", ":", "j", "+", "1", "]", "[", ":", "]", "[", ":", "]", ",", "\n", "single_batch", "[", "\"VH\"", "]", "[", "j", ":", "j", "+", "1", "]", "[", ":", "]", "[", ":", "]", ",", "\n", "]", "\n", ")", "\n", "\n", "", "", "if", "args", "[", "\"modality\"", "]", "==", "\"S1\"", ":", "\n", "                ", "patch_names", "=", "single_batch", "[", "\"patch_name_s1\"", "]", ".", "values", ".", "numpy", "(", ")", ".", "tolist", "(", ")", "\n", "", "elif", "args", "[", "\"modality\"", "]", "==", "\"S2\"", ":", "\n", "                ", "patch_names", "=", "single_batch", "[", "\"patch_name_s2\"", "]", ".", "values", ".", "numpy", "(", ")", ".", "tolist", "(", ")", "\n", "", "elif", "args", "[", "\"modality\"", "]", "==", "\"MM\"", ":", "\n", "                ", "s1", "=", "single_batch", "[", "\"patch_name_s1\"", "]", ".", "values", ".", "numpy", "(", ")", ".", "tolist", "(", ")", "\n", "s2", "=", "single_batch", "[", "\"patch_name_s2\"", "]", ".", "values", ".", "numpy", "(", ")", ".", "tolist", "(", ")", "\n", "patch_names", "=", "list", "(", "map", "(", "\"-\"", ".", "join", ",", "zip", "(", "s1", ",", "s2", ")", ")", ")", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "\"Incompatible modality.\"", ")", "\n", "\n", "", "for", "index", ",", "x", "in", "enumerate", "(", "gradcam_x_all", ")", ":", "\n", "                ", "GradCAM", "(", "model", ",", "x", ",", "y", "[", "index", "]", ",", "patch_names", "[", "index", "]", ")", "\n", "\n", "", "", "", "if", "args", "[", "\"worker_index\"", "]", "==", "0", ":", "\n", "        ", "print", "(", "f\"Inference rate: {processed_imgs // (time.time() - start)} images/sec\"", ")", "\n", "\n", "", "(", "\n", "micro_precision", ",", "\n", "macro_precision", ",", "\n", "micro_recall", ",", "\n", "macro_recall", ",", "\n", "micro_accuracy", ",", "\n", "macro_accuracy", ",", "\n", "micro_f1score", ",", "\n", "macro_f1score", ",", "\n", "micro_f2score", ",", "\n", "macro_f2score", ",", "\n", ")", "=", "custom_metrics", ".", "result", "(", ")", "\n", "\n", "if", "args", "[", "\"parallel\"", "]", ":", "\n", "        ", "print", "(", "\n", "f\"Time : {str(datetime.now().strftime('%Y-%m-%d %H:%M:%S'))} Process {hvd.rank()} Reduce\"", ",", "\n", "flush", "=", "True", ",", "\n", ")", "\n", "hvd", ".", "join", "(", ")", "\n", "micro_precision", "=", "hvd", ".", "allreduce", "(", "micro_precision", ")", "\n", "macro_precision", "=", "hvd", ".", "allreduce", "(", "macro_precision", ")", "\n", "micro_recall", "=", "hvd", ".", "allreduce", "(", "micro_recall", ")", "\n", "macro_recall", "=", "hvd", ".", "allreduce", "(", "macro_recall", ")", "\n", "micro_accuracy", "=", "hvd", ".", "allreduce", "(", "micro_accuracy", ")", "\n", "macro_accuracy", "=", "hvd", ".", "allreduce", "(", "macro_accuracy", ")", "\n", "micro_f1score", "=", "hvd", ".", "allreduce", "(", "micro_f1score", ")", "\n", "macro_f1score", "=", "hvd", ".", "allreduce", "(", "macro_f1score", ")", "\n", "micro_f2score", "=", "hvd", ".", "allreduce", "(", "micro_f2score", ")", "\n", "macro_f2score", "=", "hvd", ".", "allreduce", "(", "macro_f2score", ")", "\n", "\n", "", "return", "(", "\n", "micro_precision", ",", "\n", "macro_precision", ",", "\n", "micro_recall", ",", "\n", "macro_recall", ",", "\n", "micro_accuracy", ",", "\n", "macro_accuracy", ",", "\n", "micro_f1score", ",", "\n", "macro_f1score", ",", "\n", "micro_f2score", ",", "\n", "macro_f2score", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.train._write_summary": [[175, 200], ["summary_writer.as_default", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar"], "function", ["None"], ["", "def", "_write_summary", "(", "summary_writer", ",", "custom_metrics", ",", "epoch", ")", ":", "\n", "    ", "(", "\n", "epoch_micro_precision", ",", "\n", "epoch_macro_precision", ",", "\n", "epoch_micro_recall", ",", "\n", "epoch_macro_recall", ",", "\n", "epoch_micro_accuracy", ",", "\n", "epoch_macro_accuracy", ",", "\n", "epoch_micro_f1score", ",", "\n", "epoch_macro_f1score", ",", "\n", "epoch_micro_f2score", ",", "\n", "epoch_macro_f2score", ",", "\n", ")", "=", "custom_metrics", "\n", "\n", "with", "summary_writer", ".", "as_default", "(", ")", ":", "\n", "        ", "tf", ".", "summary", ".", "scalar", "(", "\"micro_precision\"", ",", "epoch_micro_precision", ",", "step", "=", "epoch", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "\"macro_precision\"", ",", "epoch_macro_precision", ",", "step", "=", "epoch", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "\"micro_recall\"", ",", "epoch_micro_recall", ",", "step", "=", "epoch", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "\"macro_recall\"", ",", "epoch_macro_recall", ",", "step", "=", "epoch", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "\"micro_accuracy\"", ",", "epoch_micro_accuracy", ",", "step", "=", "epoch", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "\"macro_accuracy\"", ",", "epoch_macro_accuracy", ",", "step", "=", "epoch", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "\"micro_f1score\"", ",", "epoch_micro_f1score", ",", "step", "=", "epoch", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "\"macro_f1score\"", ",", "epoch_macro_f1score", ",", "step", "=", "epoch", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "\"micro_f2score\"", ",", "epoch_micro_f2score", ",", "step", "=", "epoch", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "\"macro_f2score\"", ",", "epoch_macro_f2score", ",", "step", "=", "epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.train.run_model": [[202, 528], ["print", "print", "print", "print", "print", "random.seed", "numpy.random.seed", "tensorflow.random.set_seed", "inputs.create_batched_dataset", "inputs.create_batched_dataset", "inputs.create_batched_dataset", "print", "tensorflow.keras.losses.BinaryCrossentropy", "print", "int", "print", "print", "print", "tensorflow.keras.optimizers.Adam", "tensorflow.summary.create_file_writer", "tf.summary.create_file_writer.set_as_default", "tensorflow.summary.create_file_writer", "tensorflow.train.Checkpoint", "metrics.CustomMetrics", "range", "print", "hvd.DistributedGradientTape.gradient", "hvd.DistributedOptimizer.apply_gradients", "hvd.DistributedOptimizer", "os.path.join", "os.path.join", "tensorflow.train.Checkpoint", "tf.train.Checkpoint.restore", "train.evaluate_model", "time.time", "print", "print", "tensorflow.keras.metrics.Mean", "metrics.CustomMetrics.reset_states", "tensorflow.keras.utils.Progbar", "iter", "enumerate", "getattr", "getattr", "model.summary", "tensorflow.cast", "tensorflow.GradientTape", "model", "tf.keras.losses.BinaryCrossentropy.", "hvd.DistributedGradientTape", "zip", "datetime.datetime.now().strftime", "tensorflow.train.latest_checkpoint", "print", "print", "print", "train.run_model.training_step"], "function", ["home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.inputs.create_batched_dataset", "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.inputs.create_batched_dataset", "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.inputs.create_batched_dataset", "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.train.evaluate_model", "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.metrics.CustomMetrics.reset_states", "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.models.BigEarthModel.model"], ["", "", "def", "run_model", "(", "args", ")", ":", "\n", "    ", "print", "(", "f\"TensorFlow version: {tf.__version__}\"", ")", "\n", "print", "(", "f\"Eager execution: {tf.executing_eagerly()}\"", ")", "\n", "print", "(", "f\"Running using random seed: {SEED}\"", ")", "\n", "print", "(", "f\"Batch size: {args['batch_size']}\"", ")", "\n", "print", "(", "f\"Epochs: {args['nb_epoch']}\"", ")", "\n", "\n", "rn", ".", "seed", "(", "SEED", ")", "\n", "np", ".", "random", ".", "seed", "(", "SEED", ")", "\n", "tf", ".", "random", ".", "set_seed", "(", "SEED", ")", "\n", "\n", "# Create our data pipeline", "\n", "train_batched_dataset", "=", "create_batched_dataset", "(", "\n", "args", "[", "\"tr_tf_record_files\"", "]", ",", "\n", "args", "[", "\"batch_size\"", "]", ",", "\n", "args", "[", "\"shuffle_buffer_size\"", "]", ",", "\n", "args", "[", "\"label_type\"", "]", ",", "\n", "args", "[", "\"num_workers\"", "]", ",", "\n", "args", "[", "\"worker_index\"", "]", ",", "\n", ")", "\n", "\n", "val_batched_dataset", "=", "create_batched_dataset", "(", "\n", "args", "[", "\"val_tf_record_files\"", "]", ",", "\n", "args", "[", "\"batch_size\"", "]", ",", "\n", "args", "[", "\"shuffle_buffer_size\"", "]", ",", "\n", "args", "[", "\"label_type\"", "]", ",", "\n", "args", "[", "\"num_workers\"", "]", ",", "\n", "args", "[", "\"worker_index\"", "]", ",", "\n", ")", "\n", "\n", "test_batched_dataset", "=", "create_batched_dataset", "(", "\n", "args", "[", "\"test_tf_record_files\"", "]", ",", "\n", "args", "[", "\"batch_size\"", "]", ",", "\n", "args", "[", "\"shuffle_buffer_size\"", "]", ",", "\n", "args", "[", "\"label_type\"", "]", ",", "\n", "args", "[", "\"num_workers\"", "]", ",", "\n", "args", "[", "\"worker_index\"", "]", ",", "\n", ")", "\n", "\n", "# Create our model", "\n", "nb_class", "=", "19", "if", "args", "[", "\"label_type\"", "]", "==", "\"BigEarthNet-19\"", "else", "43", "\n", "\n", "try", ":", "\n", "        ", "bigearth_model_class", "=", "MODELS_CLASS", "[", "args", "[", "\"model_name\"", "]", "]", "\n", "", "except", ":", "\n", "        ", "bigearth_model_class", "=", "MODELS_CLASS", "[", "\"dense\"", "]", "\n", "\n", "", "print", "(", "f\"Creating model: {args['model_name']}\"", ")", "\n", "if", "args", "[", "\"model_name\"", "]", "in", "(", "\"EfficientNet\"", ",", "\"WideResNet\"", ")", ":", "\n", "        ", "bigearth_model", "=", "getattr", "(", "models", ",", "bigearth_model_class", ")", "(", "\n", "nb_class", "=", "nb_class", ",", "modality", "=", "args", "[", "\"modality\"", "]", ",", "coefficients", "=", "args", "[", "\"hparams\"", "]", "\n", ")", "\n", "", "else", ":", "\n", "        ", "bigearth_model", "=", "getattr", "(", "models", ",", "bigearth_model_class", ")", "(", "\n", "nb_class", "=", "nb_class", ",", "modality", "=", "args", "[", "\"modality\"", "]", "\n", ")", "\n", "", "model", "=", "bigearth_model", ".", "model", "\n", "if", "args", "[", "\"worker_index\"", "]", "==", "0", ":", "\n", "        ", "print", "(", "model", ".", "summary", "(", ")", ")", "\n", "\n", "# DEBUG (use this to understand what the iterators are returning)", "\n", "# debug = False", "\n", "# if debug:", "\n", "#     single_batch = next(iter(train_batched_dataset))", "\n", "#     x_all = [", "\n", "#         single_batch[\"B02\"],", "\n", "#         single_batch[\"B03\"],", "\n", "#         single_batch[\"B04\"],", "\n", "#         single_batch[\"B05\"],", "\n", "#         single_batch[\"B06\"],", "\n", "#         single_batch[\"B07\"],", "\n", "#         single_batch[\"B08\"],", "\n", "#         single_batch[\"B8A\"],", "\n", "#         single_batch[\"B11\"],", "\n", "#         single_batch[\"B12\"],", "\n", "#         single_batch[\"VV\"],", "\n", "#         single_batch[\"VH\"],", "\n", "#     ]", "\n", "#     y = single_batch[args[\"label_type\"] + \"_labels_multi_hot\"]", "\n", "#     y_ = model(x_all, training=False)", "\n", "\n", "# Create loss", "\n", "", "loss", "=", "tf", ".", "keras", ".", "losses", ".", "BinaryCrossentropy", "(", "\n", "label_smoothing", "=", "tf", ".", "cast", "(", "args", "[", "\"label_smoothing\"", "]", ",", "tf", ".", "float64", ")", "\n", ")", "\n", "print", "(", "f\"Learning Rate : {args['learning_rate']}\"", ")", "\n", "# Setup training step", "\n", "@", "tf", ".", "function", "\n", "def", "training_step", "(", "inputs", ",", "targets", ",", "first_batch", ")", ":", "\n", "        ", "with", "tf", ".", "GradientTape", "(", ")", "as", "tape", ":", "\n", "            ", "y_pred", "=", "model", "(", "inputs", ",", "training", "=", "True", ")", "\n", "loss_value", "=", "loss", "(", "y_true", "=", "targets", ",", "y_pred", "=", "y_pred", ")", "\n", "\n", "", "if", "args", "[", "\"parallel\"", "]", ":", "\n", "# Horovod: add Horovod Distributed GradientTape.", "\n", "            ", "tape", "=", "hvd", ".", "DistributedGradientTape", "(", "tape", ")", "\n", "\n", "", "grads", "=", "tape", ".", "gradient", "(", "loss_value", ",", "model", ".", "trainable_variables", ")", "\n", "optimizer", ".", "apply_gradients", "(", "zip", "(", "grads", ",", "model", ".", "trainable_variables", ")", ")", "\n", "\n", "if", "args", "[", "\"parallel\"", "]", ":", "\n", "            ", "if", "first_batch", ":", "\n", "                ", "hvd", ".", "broadcast_variables", "(", "model", ".", "variables", ",", "root_rank", "=", "0", ")", "\n", "hvd", ".", "broadcast_variables", "(", "optimizer", ".", "variables", "(", ")", ",", "root_rank", "=", "0", ")", "\n", "\n", "", "", "return", "loss_value", ",", "y_pred", "\n", "\n", "# Setup optimizer", "\n", "", "step_epochs", "=", "args", "[", "\"decay_step\"", "]", "\n", "nb_iterations_per_epoch", "=", "(", "args", "[", "\"training_size\"", "]", "/", "args", "[", "\"num_workers\"", "]", ")", "/", "args", "[", "\n", "\"batch_size\"", "\n", "]", "\n", "\n", "decay_step", "=", "int", "(", "step_epochs", "*", "nb_iterations_per_epoch", ")", "\n", "back_passes", "=", "args", "[", "\"backward_passes\"", "]", "\n", "decay_rate", "=", "args", "[", "\"decay_rate\"", "]", "\n", "print", "(", "\"decay step : \"", ",", "decay_step", ")", "\n", "print", "(", "\"Back passes : \"", ",", "back_passes", ")", "\n", "print", "(", "\"Decay rate : \"", ",", "decay_rate", ")", "\n", "learning_rate", "=", "args", "[", "\"learning_rate\"", "]", "*", "args", "[", "\"num_workers\"", "]", "\n", "\n", "optimizer", "=", "tf", ".", "keras", ".", "optimizers", ".", "Adam", "(", "learning_rate", "=", "learning_rate", ")", "\n", "if", "args", "[", "\"num_workers\"", "]", ">", "2", ":", "\n", "        ", "optimizer", "=", "hvd", ".", "DistributedOptimizer", "(", "\n", "optimizer", ",", "backward_passes_per_step", "=", "back_passes", "\n", ")", "\n", "\n", "# Setup metrics logging", "\n", "", "logdir", "=", "f\"logs/scalars/{datetime.now().strftime('%Y%m%d-%H%M%S')}\"", "\n", "train_summary_writer", "=", "tf", ".", "summary", ".", "create_file_writer", "(", "os", ".", "path", ".", "join", "(", "logdir", ",", "\"train\"", ")", ")", "\n", "train_summary_writer", ".", "set_as_default", "(", ")", "\n", "test_summary_writer", "=", "tf", ".", "summary", ".", "create_file_writer", "(", "os", ".", "path", ".", "join", "(", "logdir", ",", "\"test\"", ")", ")", "\n", "checkpoint_dir", "=", "f\"./checkpoint_{args['model_name']}/checkpoints\"", "\n", "checkpoint", "=", "tf", ".", "train", ".", "Checkpoint", "(", "model", "=", "model", ",", "optimizer", "=", "optimizer", ")", "\n", "# The main loop", "\n", "batch_size", "=", "args", "[", "\"batch_size\"", "]", "\n", "epoch_custom_metrics", "=", "CustomMetrics", "(", "nb_class", "=", "nb_class", ")", "\n", "bestfscore", "=", "0", "\n", "\n", "if", "args", "[", "\"mode\"", "]", "==", "\"eval\"", ":", "\n", "        ", "check_dir", "=", "args", "[", "\"eval_checkpoint\"", "]", "\n", "checkpoint_test", "=", "tf", ".", "train", ".", "Checkpoint", "(", "model", "=", "model", ",", "optimizer", "=", "optimizer", ")", "\n", "checkpoint_test", ".", "restore", "(", "tf", ".", "train", ".", "latest_checkpoint", "(", "check_dir", ")", ")", "\n", "test_eval", "=", "evaluate_model", "(", "model", ",", "test_batched_dataset", ",", "nb_class", ",", "args", ",", "True", ")", "\n", "(", "\n", "epoch_micro_precision", ",", "\n", "epoch_macro_precision", ",", "\n", "epoch_micro_recall", ",", "\n", "epoch_macro_recall", ",", "\n", "epoch_micro_accuracy", ",", "\n", "epoch_macro_accuracy", ",", "\n", "epoch_micro_f1score", ",", "\n", "epoch_macro_f1score", ",", "\n", "epoch_micro_f2score", ",", "\n", "epoch_macro_f2score", ",", "\n", ")", "=", "test_eval", "\n", "if", "args", "[", "\"worker_index\"", "]", "==", "0", ":", "\n", "            ", "print", "(", "\"\\n\\n\\n\\n Test Scores \\n\\n\\n=============\"", ")", "\n", "\n", "print", "(", "\n", "f\"Evaluation : micro: accuracy: {epoch_micro_accuracy:.3f}, precision: {epoch_micro_precision:.3f}, recall: {epoch_micro_recall:.3f}, f1-score: {epoch_micro_f1score:.3f}, f2-score: {epoch_micro_f2score:.3f}\"", "\n", ")", "\n", "\n", "print", "(", "\n", "f\"\\t macro: accuracy: {epoch_macro_accuracy:.3f}, precision: {epoch_macro_precision:.3f}, recall: {epoch_macro_recall:.3f}, f1-score: {epoch_macro_f1score:.3f}, f2-score: {epoch_macro_f2score:.3f}\"", "\n", ")", "\n", "", "return", "0", "\n", "\n", "", "if", "args", "[", "\"worker_index\"", "]", "==", "0", ":", "\n", "        ", "start", "=", "time", ".", "time", "(", ")", "\n", "", "for", "epoch", "in", "range", "(", "args", "[", "\"nb_epoch\"", "]", ")", ":", "\n", "        ", "if", "epoch", "%", "args", "[", "\"decay_step\"", "]", "==", "0", "and", "epoch", ">", "0", ":", "\n", "            ", "optimizer", ".", "lr", "=", "optimizer", ".", "lr", "*", "args", "[", "\"decay_rate\"", "]", "\n", "", "print", "(", "f\"\\nProcess {args['worker_index']} : Starting epoch {epoch}\"", ")", "\n", "print", "(", "f\"Learning rate: {optimizer._decayed_lr('float32').numpy():.6f}\"", ")", "\n", "\n", "epoch_loss_avg", "=", "tf", ".", "keras", ".", "metrics", ".", "Mean", "(", "dtype", "=", "\"float64\"", ")", "\n", "epoch_custom_metrics", ".", "reset_states", "(", ")", "\n", "\n", "nb_iterations", "=", "(", "args", "[", "\"training_size\"", "]", "/", "args", "[", "\"num_workers\"", "]", ")", "/", "args", "[", "\n", "\"batch_size\"", "\n", "]", "\n", "if", "(", "args", "[", "\"training_size\"", "]", "/", "args", "[", "\"num_workers\"", "]", ")", "%", "args", "[", "\"batch_size\"", "]", "!=", "0", ":", "\n", "            ", "nb_iterations", "+=", "1", "\n", "\n", "", "progress_bar", "=", "tf", ".", "keras", ".", "utils", ".", "Progbar", "(", "target", "=", "nb_iterations", ")", "\n", "\n", "batch_iterator", "=", "iter", "(", "train_batched_dataset", ")", "\n", "for", "i", ",", "single_batch", "in", "enumerate", "(", "batch_iterator", ")", ":", "\n", "            ", "if", "args", "[", "\"modality\"", "]", "==", "\"S1\"", ":", "\n", "                ", "x_all", "=", "[", "\n", "single_batch", "[", "\"VV\"", "]", ",", "\n", "single_batch", "[", "\"VH\"", "]", ",", "\n", "]", "\n", "", "elif", "args", "[", "\"modality\"", "]", "==", "\"S2\"", ":", "\n", "                ", "x_all", "=", "[", "\n", "single_batch", "[", "\"B02\"", "]", ",", "\n", "single_batch", "[", "\"B03\"", "]", ",", "\n", "single_batch", "[", "\"B04\"", "]", ",", "\n", "single_batch", "[", "\"B05\"", "]", ",", "\n", "single_batch", "[", "\"B06\"", "]", ",", "\n", "single_batch", "[", "\"B07\"", "]", ",", "\n", "single_batch", "[", "\"B08\"", "]", ",", "\n", "single_batch", "[", "\"B8A\"", "]", ",", "\n", "single_batch", "[", "\"B11\"", "]", ",", "\n", "single_batch", "[", "\"B12\"", "]", ",", "\n", "]", "\n", "", "elif", "args", "[", "\"modality\"", "]", "==", "\"MM\"", ":", "\n", "                ", "x_all", "=", "[", "\n", "single_batch", "[", "\"B02\"", "]", ",", "\n", "single_batch", "[", "\"B03\"", "]", ",", "\n", "single_batch", "[", "\"B04\"", "]", ",", "\n", "single_batch", "[", "\"B05\"", "]", ",", "\n", "single_batch", "[", "\"B06\"", "]", ",", "\n", "single_batch", "[", "\"B07\"", "]", ",", "\n", "single_batch", "[", "\"B08\"", "]", ",", "\n", "single_batch", "[", "\"B8A\"", "]", ",", "\n", "single_batch", "[", "\"B11\"", "]", ",", "\n", "single_batch", "[", "\"B12\"", "]", ",", "\n", "single_batch", "[", "\"VV\"", "]", ",", "\n", "single_batch", "[", "\"VH\"", "]", ",", "\n", "]", "\n", "", "y", "=", "single_batch", "[", "args", "[", "\"label_type\"", "]", "+", "\"_labels_multi_hot\"", "]", "\n", "\n", "# Optimize the model", "\n", "first_batch", "=", "i", "==", "0", "and", "epoch", "==", "0", "\n", "loss_value", ",", "y_", "=", "training_step", "(", "x_all", ",", "y", ",", "first_batch", ")", "\n", "# Track progress", "\n", "epoch_loss_avg", ".", "update_state", "(", "loss_value", ")", "# Add current batch loss", "\n", "\n", "# Update all custom metrics", "\n", "epoch_custom_metrics", ".", "update_state", "(", "y", ",", "y_", ")", "\n", "if", "i", "%", "20", "==", "0", "and", "args", "[", "\"worker_index\"", "]", "==", "0", ":", "\n", "# print('Process %d Epoch %d Iteration %d'%(args['worker_index'],epoch,i),flush=True)", "\n", "                ", "print", "(", "\n", "f\"Process {args['worker_index']:01d}:  Epoch {epoch:03d}: Iteration {i:03d} Loss: {loss_value.numpy():.3f}\"", "\n", ")", "\n", "", "progress_bar", ".", "update", "(", "i", "+", "1", ")", "\n", "\n", "# End epoch", "\n", "\n", "", "if", "epoch", "%", "10", "==", "0", "or", "epoch", "==", "args", "[", "\"nb_epoch\"", "]", "-", "1", ":", "\n", "            ", "if", "args", "[", "\"worker_index\"", "]", "==", "0", ":", "\n", "                ", "eval_start", "=", "time", ".", "time", "(", ")", "\n", "\n", "", "tf", ".", "summary", ".", "scalar", "(", "\"loss\"", ",", "epoch_loss_avg", ".", "result", "(", ")", ",", "step", "=", "epoch", ")", "\n", "_write_summary", "(", "train_summary_writer", ",", "epoch_custom_metrics", ".", "result", "(", ")", ",", "epoch", ")", "\n", "print", "(", "\n", "f\"Process {args['worker_index']:01d}:  Epoch : {epoch:03d}: Loss: {epoch_loss_avg.result():.3f}\"", "\n", ")", "\n", "# Evaluate model using the eval dataset", "\n", "evaluation", "=", "evaluate_model", "(", "model", ",", "val_batched_dataset", ",", "nb_class", ",", "args", ")", "\n", "\n", "_write_summary", "(", "test_summary_writer", ",", "evaluation", ",", "epoch", ")", "\n", "\n", "(", "\n", "epoch_micro_precision", ",", "\n", "epoch_macro_precision", ",", "\n", "epoch_micro_recall", ",", "\n", "epoch_macro_recall", ",", "\n", "epoch_micro_accuracy", ",", "\n", "epoch_macro_accuracy", ",", "\n", "epoch_micro_f1score", ",", "\n", "epoch_macro_f1score", ",", "\n", "epoch_micro_f2score", ",", "\n", "epoch_macro_f2score", ",", "\n", ")", "=", "evaluation", "\n", "if", "args", "[", "\"worker_index\"", "]", "==", "0", "and", "epoch_micro_f1score", ">", "bestfscore", ":", "\n", "                ", "bestfscore", "=", "epoch_micro_f1score", ".", "numpy", "(", ")", "\n", "print", "(", "\n", "f\"Process {args['worker_index']:01d}: New Best F1-Score : {bestfscore:.3f}\\n Epoch : {epoch:03d} Writing Checkpoint\"", "\n", ")", "\n", "print", "(", "\n", "f\"Process {args['worker_index']:01d}:  Epoch : {epoch:03d} Writing Checkpoint\"", "\n", ")", "\n", "checkpoint", ".", "save", "(", "checkpoint_dir", ")", "\n", "print", "(", "\n", "f\"Epoch {epoch:03d}: micro: accuracy: {epoch_micro_accuracy:.3f}, precision: {epoch_micro_precision:.3f}, recall: {epoch_micro_recall:.3f}, f1-score: {epoch_micro_f1score:.3f}, f2-score: {epoch_micro_f2score:.3f}\"", "\n", ")", "\n", "print", "(", "\n", "f\"Epoch {epoch:03d}: macro: accuracy: {epoch_macro_accuracy:.3f}, precision: {epoch_macro_precision:.3f}, recall: {epoch_macro_recall:.3f}, f1-score: {epoch_macro_f1score:.3f}, f2-score: {epoch_macro_f2score:.3f}\"", "\n", ")", "\n", "\n", "", "if", "args", "[", "\"worker_index\"", "]", "==", "0", ":", "\n", "                ", "eval_end", "=", "time", ".", "time", "(", ")", "\n", "eval_time", "=", "eval_end", "-", "eval_start", "\n", "eval_hours", ",", "eval_remainder", "=", "divmod", "(", "eval_end", "-", "eval_start", ",", "3600", ")", "\n", "eval_minutes", ",", "eval_seconds", "=", "divmod", "(", "eval_remainder", ",", "60", ")", "\n", "\n", "start", "=", "start", "+", "eval_time", "\n", "train_end", "=", "time", ".", "time", "(", ")", "\n", "train_time", "=", "train_end", "-", "start", "\n", "train_hours", ",", "train_remainder", "=", "divmod", "(", "train_time", ",", "3600", ")", "\n", "train_minutes", ",", "train_seconds", "=", "divmod", "(", "train_remainder", ",", "60", ")", "\n", "\n", "print", "(", "\n", "f\"Train took: {int(train_hours):0>2}hr. {int(train_minutes):0>2}min. {train_seconds:05.2f}sec.\"", "\n", ")", "\n", "print", "(", "\n", "f\"Validation took: {int(eval_hours):0>2}hr. {int(eval_minutes):0>2}min. {eval_seconds:05.2f}sec.\"", "\n", ")", "\n", "\n", "", "if", "epoch", "==", "args", "[", "\"nb_epoch\"", "]", "-", "1", ":", "\n", "                ", "checkpoint_test", "=", "tf", ".", "train", ".", "Checkpoint", "(", "model", "=", "model", ",", "optimizer", "=", "optimizer", ")", "\n", "checkpoint_test", ".", "restore", "(", "tf", ".", "train", ".", "latest_checkpoint", "(", "checkpoint_dir", ")", ")", "\n", "test_eval", "=", "evaluate_model", "(", "model", ",", "test_batched_dataset", ",", "nb_class", ",", "args", ")", "\n", "(", "\n", "epoch_micro_precision", ",", "\n", "epoch_macro_precision", ",", "\n", "epoch_micro_recall", ",", "\n", "epoch_macro_recall", ",", "\n", "epoch_micro_accuracy", ",", "\n", "epoch_macro_accuracy", ",", "\n", "epoch_micro_f1score", ",", "\n", "epoch_macro_f1score", ",", "\n", "epoch_micro_f2score", ",", "\n", "epoch_macro_f2score", ",", "\n", ")", "=", "test_eval", "\n", "if", "args", "[", "\"worker_index\"", "]", "==", "0", ":", "\n", "                    ", "print", "(", "\"\\n\\n\\n\\n Test Scores \\n\\n\\n=============\"", ")", "\n", "\n", "print", "(", "\n", "f\"Epoch {epoch:03d}: micro: accuracy: {epoch_micro_accuracy:.3f}, precision: {epoch_micro_precision:.3f}, recall: {epoch_micro_recall:.3f}, f1-score: {epoch_micro_f1score:.3f}, f2-score: {epoch_micro_f2score:.3f}\"", "\n", ")", "\n", "print", "(", "\n", "f\"Epoch {epoch:03d}: macro: accuracy: {epoch_macro_accuracy:.3f}, precision: {epoch_macro_precision:.3f}, recall: {epoch_macro_recall:.3f}, f1-score: {epoch_macro_f1score:.3f}, f2-score: {epoch_macro_f2score:.3f}\"", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.orion-ai-lab_efficientbigearthnet.None.gradcam.GradCAM": [[11, 182], ["next", "model.get_layer", "tf.stack().numpy().transpose.append", "tf.stack().numpy().transpose.append", "tf.stack().numpy().transpose.append", "tensorflow.stack().numpy().transpose", "patch_name.decode.decode", "tensorflow.math.add", "tensorflow.math.add", "tensorflow.math.add", "tensorflow.maximum", "tensorflow.math.reduce_max().numpy", "numpy.nonzero", "tensorflow.GradientTape", "tensorflow.keras.models.Model", "tape.watch", "tensorflow.keras.models.Model.", "enumerate", "tensorflow.multiply", "tensorflow.constant", "tensorflow.multiply", "tensorflow.constant", "tensorflow.multiply", "tensorflow.constant", "tensorflow.stack().numpy", "tape.gradient", "tensorflow.reduce_mean", "tensorflow.squeeze", "cv2.resize.numpy", "cv2.resize", "cv2.normalize", "cv2.applyColorMap", "cv2.cvtColor", "tensorflow.keras.preprocessing.image.array_to_img", "matplotlib.subplots", "ax1.imshow", "enumerate", "ax1.axes.get_xaxis().set_visible", "ax1.axes.get_yaxis().set_visible", "ax2.imshow", "ax2.axes.get_xaxis().set_visible", "ax2.axes.get_yaxis().set_visible", "all", "matplotlib.close", "isinstance", "tensorflow.constant", "tensorflow.constant", "tensorflow.constant", "tensorflow.math.reduce_max", "tensorflow.keras.models.Model.get_layer", "ax1.set_title", "ax1.set_title", "loss.numpy", "ax2.set_title", "ax2.set_title", "matplotlib.savefig", "tensorflow.stack", "ax1.axes.get_xaxis", "ax1.axes.get_yaxis", "ax2.axes.get_xaxis", "ax2.axes.get_yaxis", "matplotlib.savefig", "tensorflow.squeeze", "textwrap.wrap", "textwrap.wrap", "textwrap.wrap", "textwrap.wrap", "matplotlib.savefig", "str", "str", "str", "str", "str", "numpy.around", "numpy.around", "loss.numpy", "loss.numpy"], "function", ["None"], ["def", "GradCAM", "(", "model", ",", "image", ",", "y_true", ",", "patch_name", ",", "interpolant", "=", "0.0015", ")", ":", "\n", "    ", "labels", "=", "[", "\n", "\"Urban fabric\"", ",", "\n", "\"Industrial or commercial units\"", ",", "\n", "\"Arable land\"", ",", "\n", "\"Permanent crops\"", ",", "\n", "\"Pastures\"", ",", "\n", "\"Complex cultivation patterns\"", ",", "\n", "\"Land principally occupied by agriculture, with significant areas of natural vegetation\"", ",", "\n", "\"Agro-forestry areas\"", ",", "\n", "\"Broad-leaved forest\"", ",", "\n", "\"Coniferous forest\"", ",", "\n", "\"Mixed forest\"", ",", "\n", "\"Natural grassland and sparsely vegetated areas\"", ",", "\n", "\"Moors, heathland and sclerophyllous vegetation\"", ",", "\n", "\"Transitional woodland, shrub\"", ",", "\n", "\"Beaches, dunes, sands\"", ",", "\n", "\"Inland wetlands\"", ",", "\n", "\"Coastal wetlands\"", ",", "\n", "\"Inland waters\"", ",", "\n", "\"Marine waters\"", ",", "\n", "]", "\n", "\n", "last_conv_layer", "=", "next", "(", "\n", "x", "for", "x", "in", "model", ".", "layers", "[", ":", ":", "-", "1", "]", "if", "isinstance", "(", "x", ",", "K", ".", "layers", ".", "Conv2D", ")", "\n", ")", "\n", "target_layer", "=", "model", ".", "get_layer", "(", "last_conv_layer", ".", "name", ")", "\n", "\n", "rgb_image", "=", "[", "]", "\n", "rgb_image", ".", "append", "(", "\n", "tf", ".", "math", ".", "add", "(", "\n", "tf", ".", "multiply", "(", "image", "[", "2", "]", ",", "tf", ".", "constant", "(", "675.88746967", ")", ")", ",", "tf", ".", "constant", "(", "590.23569706", ")", "\n", ")", "\n", ")", "\n", "rgb_image", ".", "append", "(", "\n", "tf", ".", "math", ".", "add", "(", "\n", "tf", ".", "multiply", "(", "image", "[", "1", "]", ",", "tf", ".", "constant", "(", "582.87945694", ")", ")", ",", "tf", ".", "constant", "(", "614.21682446", ")", "\n", ")", "\n", ")", "\n", "rgb_image", ".", "append", "(", "\n", "tf", ".", "math", ".", "add", "(", "\n", "tf", ".", "multiply", "(", "image", "[", "0", "]", ",", "tf", ".", "constant", "(", "572.41639287", ")", ")", ",", "tf", ".", "constant", "(", "429.9430203", ")", "\n", ")", "\n", ")", "\n", "rgb_image", "=", "tf", ".", "stack", "(", "tf", ".", "squeeze", "(", "rgb_image", ")", ")", ".", "numpy", "(", ")", ".", "transpose", "(", "1", ",", "2", ",", "0", ")", "\n", "rgb_image", "=", "tf", ".", "maximum", "(", "rgb_image", ",", "0", ")", "/", "tf", ".", "math", ".", "reduce_max", "(", "rgb_image", ")", ".", "numpy", "(", ")", "\n", "\n", "true_label_indexes", "=", "np", ".", "nonzero", "(", "y_true", ")", "[", "0", "]", "\n", "patch_name", "=", "patch_name", ".", "decode", "(", "\"utf-8\"", ")", "\n", "\n", "# Compute Gradient of Top Predicted Class", "\n", "with", "tf", ".", "GradientTape", "(", "persistent", "=", "True", ")", "as", "tape", ":", "\n", "        ", "gradient_model", "=", "Model", "(", "[", "model", ".", "inputs", "]", ",", "[", "target_layer", ".", "output", ",", "model", ".", "output", "]", ")", "\n", "tape", ".", "watch", "(", "gradient_model", ".", "get_layer", "(", "last_conv_layer", ".", "name", ")", ".", "variables", ")", "\n", "conv2d_out", ",", "prediction", "=", "gradient_model", "(", "image", ")", "\n", "# Obtain the Prediction Loss", "\n", "\n", "for", "i", ",", "loss", "in", "enumerate", "(", "prediction", "[", "0", "]", ")", ":", "\n", "# Gradient() computes the gradient using operations recorded", "\n", "# in context of this tape", "\n", "            ", "gradients", "=", "tape", ".", "gradient", "(", "loss", ",", "conv2d_out", ")", "\n", "\n", "# Obtain Depthwise Mean", "\n", "weights", "=", "tf", ".", "reduce_mean", "(", "gradients", ",", "axis", "=", "(", "0", ",", "1", ",", "2", ")", ")", "\n", "heatmap", "=", "conv2d_out", "@", "weights", "[", "...", ",", "tf", ".", "newaxis", "]", "\n", "heatmap", "=", "tf", ".", "squeeze", "(", "heatmap", ")", "\n", "heatmap", "=", "heatmap", ".", "numpy", "(", ")", "\n", "\n", "heatmap", "=", "cv2", ".", "resize", "(", "\n", "heatmap", ",", "(", "image", "[", "0", "]", ".", "shape", "[", "1", "]", ",", "image", "[", "0", "]", ".", "shape", "[", "1", "]", ")", ",", "fx", "=", "0", ",", "fy", "=", "0", "\n", ")", "\n", "jet_heatmap", "=", "cv2", ".", "normalize", "(", "\n", "heatmap", ",", "\n", "None", ",", "\n", "alpha", "=", "0", ",", "\n", "beta", "=", "255", ",", "\n", "norm_type", "=", "cv2", ".", "NORM_MINMAX", ",", "\n", "dtype", "=", "cv2", ".", "CV_8U", ",", "\n", ")", "\n", "jet_heatmap", "=", "cv2", ".", "applyColorMap", "(", "jet_heatmap", ",", "cv2", ".", "COLORMAP_JET", ")", "\n", "jet_heatmap", "=", "cv2", ".", "cvtColor", "(", "jet_heatmap", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "\n", "# Superimpose the heatmap on original image", "\n", "superimposed_img", "=", "jet_heatmap", "*", "interpolant", "+", "rgb_image", "\n", "superimposed_img", "=", "tf", ".", "keras", ".", "preprocessing", ".", "image", ".", "array_to_img", "(", "\n", "superimposed_img", "\n", ")", "\n", "\n", "# Save the superimposed image", "\n", "fig", ",", "(", "ax1", ",", "ax2", ")", "=", "plt", ".", "subplots", "(", "1", ",", "2", ")", "\n", "ax1", ".", "imshow", "(", "rgb_image", ")", "\n", "\n", "t_label", "=", "False", "\n", "p_label", "=", "False", "\n", "\n", "true_labels", "=", "\"\"", "\n", "for", "enum", ",", "index", "in", "enumerate", "(", "true_label_indexes", ")", ":", "\n", "                ", "true_labels", "+=", "\"[{}] {} \"", ".", "format", "(", "enum", ",", "labels", "[", "index", "]", ")", "\n", "\n", "", "if", "i", "in", "true_label_indexes", ":", "\n", "                ", "t_label", "=", "True", "\n", "ax1", ".", "set_title", "(", "\n", "\"\\n\"", ".", "join", "(", "wrap", "(", "\"True label: \"", "+", "true_labels", ",", "45", ")", ")", ",", "\n", "fontsize", "=", "8", ",", "\n", "wrap", "=", "True", ",", "\n", "color", "=", "\"g\"", ",", "\n", ")", "\n", "", "else", ":", "\n", "                ", "ax1", ".", "set_title", "(", "\n", "\"\\n\"", ".", "join", "(", "wrap", "(", "\"True label: \"", "+", "true_labels", ",", "45", ")", ")", ",", "\n", "fontsize", "=", "8", ",", "\n", "wrap", "=", "True", ",", "\n", "color", "=", "\"r\"", ",", "\n", ")", "\n", "", "ax1", ".", "axes", ".", "get_xaxis", "(", ")", ".", "set_visible", "(", "False", ")", "\n", "ax1", ".", "axes", ".", "get_yaxis", "(", ")", ".", "set_visible", "(", "False", ")", "\n", "\n", "ax2", ".", "imshow", "(", "superimposed_img", ")", "\n", "if", "loss", ".", "numpy", "(", ")", ">=", "0.5", ":", "\n", "                ", "p_label", "=", "True", "\n", "ax2", ".", "set_title", "(", "\n", "\"\\n\"", ".", "join", "(", "\n", "wrap", "(", "\n", "\"Predicted label: \"", "\n", "+", "labels", "[", "i", "]", "\n", "+", "\" [P=\"", "\n", "+", "str", "(", "np", ".", "around", "(", "loss", ".", "numpy", "(", ")", ",", "2", ")", ")", "\n", "+", "\"]\"", ",", "\n", "45", ",", "\n", ")", "\n", ")", ",", "\n", "fontsize", "=", "8", ",", "\n", "wrap", "=", "True", ",", "\n", "color", "=", "\"g\"", ",", "\n", ")", "\n", "", "else", ":", "\n", "                ", "ax2", ".", "set_title", "(", "\n", "\"\\n\"", ".", "join", "(", "\n", "wrap", "(", "\n", "\"Predicted label: \"", "\n", "+", "labels", "[", "i", "]", "\n", "+", "\" [P=\"", "\n", "+", "str", "(", "np", ".", "around", "(", "loss", ".", "numpy", "(", ")", ",", "2", ")", ")", "\n", "+", "\"]\"", ",", "\n", "45", ",", "\n", ")", "\n", ")", ",", "\n", "fontsize", "=", "8", ",", "\n", "wrap", "=", "True", ",", "\n", "color", "=", "\"r\"", ",", "\n", ")", "\n", "", "ax2", ".", "axes", ".", "get_xaxis", "(", ")", ".", "set_visible", "(", "False", ")", "\n", "ax2", ".", "axes", ".", "get_yaxis", "(", ")", ".", "set_visible", "(", "False", ")", "\n", "\n", "# plt.tight_layout()", "\n", "if", "all", "(", "[", "t_label", ",", "p_label", "]", ")", ":", "\n", "                ", "plt", ".", "savefig", "(", "\n", "\"gradcam/true_positive/\"", "+", "patch_name", "+", "\"_\"", "+", "str", "(", "i", ")", "+", "\".png\"", ",", "\n", "bbox_inches", "=", "\"tight\"", ",", "\n", ")", "\n", "", "elif", "t_label", "==", "True", "and", "p_label", "==", "False", ":", "\n", "                ", "plt", ".", "savefig", "(", "\n", "\"gradcam/false_negative/\"", "+", "patch_name", "+", "\"_\"", "+", "str", "(", "i", ")", "+", "\".png\"", ",", "\n", "bbox_inches", "=", "\"tight\"", ",", "\n", ")", "\n", "", "elif", "t_label", "==", "False", "and", "p_label", "==", "True", ":", "\n", "                ", "plt", ".", "savefig", "(", "\n", "\"gradcam/false_positive/\"", "+", "patch_name", "+", "\"_\"", "+", "str", "(", "i", ")", "+", "\".png\"", ",", "\n", "bbox_inches", "=", "\"tight\"", ",", "\n", ")", "\n", "", "plt", ".", "close", "(", "\"all\"", ")", "\n", "", "", "", ""]]}