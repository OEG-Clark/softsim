{"home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.test_matterport.find_N_peaks": [[61, 75], ["scipy.ndimage.filters.maximum_filter", "numpy.where", "numpy.argsort", "numpy.sort", "numpy.argsort", "numpy.argsort"], "function", ["None"], ["def", "find_N_peaks", "(", "signal", ",", "r", "=", "29", ",", "min_v", "=", "0.05", ",", "N", "=", "None", ")", ":", "\n", "    ", "max_v", "=", "maximum_filter", "(", "signal", ",", "size", "=", "r", ",", "mode", "=", "'wrap'", ")", "\n", "pk_loc", "=", "np", ".", "where", "(", "max_v", "==", "signal", ")", "[", "0", "]", "\n", "pk_loc", "=", "pk_loc", "[", "signal", "[", "pk_loc", "]", ">", "min_v", "]", "\n", "# check for odd case, remove one ", "\n", "if", "(", "pk_loc", ".", "shape", "[", "0", "]", "%", "2", ")", "!=", "0", ":", "\n", "        ", "pk_id", "=", "np", ".", "argsort", "(", "-", "signal", "[", "pk_loc", "]", ")", "\n", "pk_loc", "=", "pk_loc", "[", "pk_id", "[", ":", "-", "1", "]", "]", "\n", "pk_loc", "=", "np", ".", "sort", "(", "pk_loc", ")", "\n", "", "if", "N", "is", "not", "None", ":", "\n", "        ", "order", "=", "np", ".", "argsort", "(", "-", "signal", "[", "pk_loc", "]", ")", "\n", "pk_loc", "=", "pk_loc", "[", "order", "[", ":", "N", "]", "]", "\n", "pk_loc", "=", "pk_loc", "[", "np", ".", "argsort", "(", "pk_loc", ")", "]", "\n", "", "return", "pk_loc", ",", "signal", "[", "pk_loc", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.test_matterport.find_N_peaks_conv": [[76, 85], ["scipy.signal.find_peaks", "scipy.signal.find_peaks", "numpy.argsort", "numpy.sort", "min", "len"], "function", ["None"], ["", "def", "find_N_peaks_conv", "(", "signal", ",", "prominence", ",", "distance", ",", "N", "=", "4", ")", ":", "\n", "    ", "locs", ",", "_", "=", "scipy", ".", "signal", ".", "find_peaks", "(", "signal", ",", "\n", "prominence", "=", "prominence", ",", "\n", "distance", "=", "distance", ")", "\n", "pks", "=", "signal", "[", "locs", "]", "\n", "pk_id", "=", "np", ".", "argsort", "(", "-", "pks", ")", "\n", "pk_loc", "=", "locs", "[", "pk_id", "[", ":", "min", "(", "N", ",", "len", "(", "pks", ")", ")", "]", "]", "\n", "pk_loc", "=", "np", ".", "sort", "(", "pk_loc", ")", "\n", "return", "pk_loc", ",", "signal", "[", "pk_loc", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.test_matterport.get_ini_cor": [[86, 114], ["scipy.ndimage.convolve", "cor_img.sum", "numpy.array", "numpy.ones", "numpy.ptp", "test_matterport.find_N_peaks", "int", "cor[].sum", "np.array.append", "np.array.append", "numpy.amin", "test_matterport.find_N_peaks", "numpy.round", "test_matterport.find_N_peaks_conv", "test_matterport.find_N_peaks", "max"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.find_N_peaks", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.find_N_peaks", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.test_matterport.find_N_peaks_conv", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.find_N_peaks"], ["", "def", "get_ini_cor", "(", "cor_img", ",", "d1", "=", "21", ",", "d2", "=", "3", ")", ":", "\n", "    ", "cor", "=", "convolve", "(", "cor_img", ",", "np", ".", "ones", "(", "(", "d1", ",", "d1", ")", ")", ",", "mode", "=", "'constant'", ",", "cval", "=", "0.0", ")", "\n", "cor_id", "=", "[", "]", "\n", "cor_", "=", "cor_img", ".", "sum", "(", "0", ")", "\n", "cor_", "=", "(", "cor_", "-", "np", ".", "amin", "(", "cor_", ")", ")", "/", "np", ".", "ptp", "(", "cor_", ")", "\n", "\n", "min_v", "=", "0.25", "#0.05", "\n", "xs_", "=", "find_N_peaks", "(", "cor_", ",", "r", "=", "26", ",", "min_v", "=", "min_v", ",", "N", "=", "None", ")", "[", "0", "]", "\n", "\n", "# spetial case for too less corner", "\n", "if", "xs_", ".", "shape", "[", "0", "]", "<", "4", ":", "\n", "        ", "xs_", "=", "find_N_peaks", "(", "cor_", ",", "r", "=", "26", ",", "min_v", "=", "0.05", ",", "N", "=", "None", ")", "[", "0", "]", "\n", "if", "xs_", ".", "shape", "[", "0", "]", "<", "4", ":", "\n", "            ", "xs_", "=", "find_N_peaks", "(", "cor_", ",", "r", "=", "26", ",", "min_v", "=", "0", ",", "N", "=", "None", ")", "[", "0", "]", "\n", "\n", "", "", "X_loc", "=", "xs_", "\n", "for", "x", "in", "X_loc", ":", "\n", "        ", "x_", "=", "int", "(", "np", ".", "round", "(", "x", ")", ")", "\n", "\n", "V_signal", "=", "cor", "[", ":", ",", "max", "(", "0", ",", "x_", "-", "d2", ")", ":", "x_", "+", "d2", "+", "1", "]", ".", "sum", "(", "1", ")", "\n", "y1", ",", "y2", "=", "find_N_peaks_conv", "(", "V_signal", ",", "prominence", "=", "None", ",", "\n", "distance", "=", "20", ",", "N", "=", "2", ")", "[", "0", "]", "\n", "cor_id", ".", "append", "(", "(", "x", ",", "y1", ")", ")", "\n", "cor_id", ".", "append", "(", "(", "x", ",", "y2", ")", ")", "\n", "\n", "", "cor_id", "=", "np", ".", "array", "(", "cor_id", ",", "np", ".", "float64", ")", "\n", "\n", "return", "cor_id", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.test_matterport.test_general": [[115, 169], ["len", "post_proc2.np_coor2xy", "post_proc2.np_coor2xy", "shapely.geometry.Polygon", "shapely.geometry.Polygon", "post_proc2.get_z1", "post_proc2.get_z1", "abs", "abs", "len", "[].append", "[].append", "[].append", "[].append", "print", "len", "[].append", "[].append", "[].append", "[].append", "shapely.geometry.Polygon.intersection", "shapely.geometry.Polygon.union", "shapely.geometry.Polygon.difference", "shapely.geometry.Polygon.difference", "str", "str", "post_proc.get_z1.mean", "post_proc.get_z1.mean", "min", "max"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.np_coor2xy", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.np_coor2xy", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.get_z1", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.get_z1"], ["", "def", "test_general", "(", "dt_cor_id", ",", "gt_cor_id", ",", "w", ",", "h", ",", "losses", ")", ":", "\n", "\n", "    ", "dt_floor_coor", "=", "dt_cor_id", "[", "1", ":", ":", "2", "]", "\n", "dt_ceil_coor", "=", "dt_cor_id", "[", "0", ":", ":", "2", "]", "\n", "gt_floor_coor", "=", "gt_cor_id", "[", "1", ":", ":", "2", "]", "\n", "gt_ceil_coor", "=", "gt_cor_id", "[", "0", ":", ":", "2", "]", "\n", "assert", "(", "dt_floor_coor", "[", ":", ",", "0", "]", "!=", "dt_ceil_coor", "[", ":", ",", "0", "]", ")", ".", "sum", "(", ")", "==", "0", "\n", "assert", "(", "gt_floor_coor", "[", ":", ",", "0", "]", "!=", "gt_ceil_coor", "[", ":", ",", "0", "]", ")", ".", "sum", "(", ")", "==", "0", "\n", "\n", "# Eval 3d IoU and height error(in meter)", "\n", "N", "=", "len", "(", "dt_floor_coor", ")", "\n", "ch", "=", "-", "1.6", "\n", "dt_floor_xy", "=", "post_proc", ".", "np_coor2xy", "(", "dt_floor_coor", ",", "ch", ",", "1024", ",", "512", ",", "floorW", "=", "1", ",", "floorH", "=", "1", ")", "\n", "gt_floor_xy", "=", "post_proc", ".", "np_coor2xy", "(", "gt_floor_coor", ",", "ch", ",", "1024", ",", "512", ",", "floorW", "=", "1", ",", "floorH", "=", "1", ")", "\n", "dt_poly", "=", "Polygon", "(", "dt_floor_xy", ")", "\n", "gt_poly", "=", "Polygon", "(", "gt_floor_xy", ")", "\n", "\n", "area_dt", "=", "dt_poly", ".", "area", "\n", "area_gt", "=", "gt_poly", ".", "area", "\n", "\n", "if", "area_dt", "<", "1e-05", ":", "\n", "        ", "print", "(", "'too small room'", ")", "\n", "# Add a result", "\n", "n_corners", "=", "len", "(", "gt_floor_coor", ")", "\n", "n_corners", "=", "str", "(", "n_corners", ")", "if", "n_corners", "<", "14", "else", "'14+'", "\n", "losses", "[", "n_corners", "]", "[", "'2DIoU'", "]", ".", "append", "(", "0", ")", "\n", "losses", "[", "n_corners", "]", "[", "'3DIoU'", "]", ".", "append", "(", "0", ")", "\n", "losses", "[", "'overall'", "]", "[", "'2DIoU'", "]", ".", "append", "(", "0", ")", "\n", "losses", "[", "'overall'", "]", "[", "'3DIoU'", "]", ".", "append", "(", "0", ")", "\n", "return", "\n", "\n", "", "area_inter", "=", "dt_poly", ".", "intersection", "(", "gt_poly", ")", ".", "area", "\n", "\n", "area_union", "=", "dt_poly", ".", "union", "(", "gt_poly", ")", ".", "area", "\n", "area_pred_wo_gt", "=", "dt_poly", ".", "difference", "(", "gt_poly", ")", ".", "area", "\n", "area_gt_wo_pred", "=", "gt_poly", ".", "difference", "(", "dt_poly", ")", ".", "area", "\n", "\n", "iou2d", "=", "area_inter", "/", "(", "area_gt", "+", "area_dt", "-", "area_inter", ")", "\n", "cch_dt", "=", "post_proc", ".", "get_z1", "(", "dt_floor_coor", "[", ":", ",", "1", "]", ",", "dt_ceil_coor", "[", ":", ",", "1", "]", ",", "ch", ",", "512", ")", "\n", "cch_gt", "=", "post_proc", ".", "get_z1", "(", "gt_floor_coor", "[", ":", ",", "1", "]", ",", "gt_ceil_coor", "[", ":", ",", "1", "]", ",", "ch", ",", "512", ")", "\n", "\n", "h_dt", "=", "abs", "(", "cch_dt", ".", "mean", "(", ")", "-", "ch", ")", "\n", "h_gt", "=", "abs", "(", "cch_gt", ".", "mean", "(", ")", "-", "ch", ")", "\n", "#iouH = min(h_dt, h_gt) / max(h_dt, h_gt)", "\n", "#iou3d = iou2d * iouH", "\n", "iou3d", "=", "(", "area_inter", "*", "min", "(", "h_dt", ",", "h_gt", ")", ")", "/", "(", "area_pred_wo_gt", "*", "h_dt", "+", "area_gt_wo_pred", "*", "h_gt", "+", "area_inter", "*", "max", "(", "h_dt", ",", "h_gt", ")", ")", "\n", "\n", "# Add a result", "\n", "n_corners", "=", "len", "(", "gt_floor_coor", ")", "\n", "n_corners", "=", "str", "(", "n_corners", ")", "if", "n_corners", "<", "14", "else", "'14+'", "\n", "losses", "[", "n_corners", "]", "[", "'2DIoU'", "]", ".", "append", "(", "iou2d", ")", "\n", "losses", "[", "n_corners", "]", "[", "'3DIoU'", "]", ".", "append", "(", "iou3d", ")", "\n", "losses", "[", "'overall'", "]", "[", "'2DIoU'", "]", ".", "append", "(", "iou2d", ")", "\n", "losses", "[", "'overall'", "]", "[", "'3DIoU'", "]", ".", "append", "(", "iou3d", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.utils_eval.np_coorx2u": [[7, 9], ["None"], "function", ["None"], ["def", "np_coorx2u", "(", "coorx", ",", "coorW", "=", "1024", ")", ":", "\n", "    ", "return", "(", "(", "coorx", "+", "0.5", ")", "/", "coorW", "-", "0.5", ")", "*", "2", "*", "np", ".", "pi", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.utils_eval.np_coory2v": [[11, 13], ["None"], "function", ["None"], ["", "def", "np_coory2v", "(", "coory", ",", "coorH", "=", "512", ")", ":", "\n", "    ", "return", "-", "(", "(", "coory", "+", "0.5", ")", "/", "coorH", "-", "0.5", ")", "*", "np", ".", "pi", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.utils_eval.np_coor2xy": [[15, 26], ["numpy.array", "utils_eval.np_coorx2u", "utils_eval.np_coory2v", "numpy.hstack", "numpy.tan", "numpy.sin", "numpy.cos"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.np_coorx2u", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.np_coory2v"], ["", "def", "np_coor2xy", "(", "coor", ",", "z", "=", "50", ",", "coorW", "=", "1024", ",", "coorH", "=", "512", ")", ":", "\n", "    ", "'''\n    coor: N x 2, index of array in (col, row) format\n    '''", "\n", "coor", "=", "np", ".", "array", "(", "coor", ")", "\n", "u", "=", "np_coorx2u", "(", "coor", "[", ":", ",", "0", "]", ",", "coorW", ")", "\n", "v", "=", "np_coory2v", "(", "coor", "[", ":", ",", "1", "]", ",", "coorH", ")", "\n", "c", "=", "z", "/", "np", ".", "tan", "(", "v", ")", "\n", "x", "=", "c", "*", "np", ".", "sin", "(", "u", ")", "\n", "y", "=", "-", "c", "*", "np", ".", "cos", "(", "u", ")", "\n", "return", "np", ".", "hstack", "(", "[", "x", "[", ":", ",", "None", "]", ",", "y", "[", ":", ",", "None", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.utils_eval.tri2halfspace": [[28, 35], ["numpy.cross"], "function", ["None"], ["", "def", "tri2halfspace", "(", "pa", ",", "pb", ",", "p", ")", ":", "\n", "    ", "v1", "=", "pa", "-", "p", "\n", "v2", "=", "pb", "-", "p", "\n", "vn", "=", "np", ".", "cross", "(", "v1", ",", "v2", ")", "\n", "if", "-", "vn", "@", "p", ">", "0", ":", "\n", "        ", "vn", "=", "-", "vn", "\n", "", "return", "[", "*", "vn", ",", "-", "vn", "@", "p", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.utils_eval.xyzlst2halfspaces": [[37, 60], ["range", "numpy.array", "halfspaces.append", "halfspaces.append", "halfspaces.append", "halfspaces.append", "halfspaces.append", "halfspaces.append", "utils_eval.tri2halfspace", "utils_eval.tri2halfspace", "utils_eval.tri2halfspace", "utils_eval.tri2halfspace", "utils_eval.tri2halfspace", "utils_eval.tri2halfspace"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.utils_eval.tri2halfspace", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.utils_eval.tri2halfspace", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.utils_eval.tri2halfspace", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.utils_eval.tri2halfspace", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.utils_eval.tri2halfspace", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.utils_eval.tri2halfspace"], ["", "def", "xyzlst2halfspaces", "(", "xyz_floor", ",", "xyz_ceil", ")", ":", "\n", "    ", "'''\n    return halfspace enclose (0, 0, 0)\n    '''", "\n", "N", "=", "xyz_floor", ".", "shape", "[", "0", "]", "\n", "halfspaces", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "        ", "last_i", "=", "(", "i", "-", "1", "+", "N", ")", "%", "N", "\n", "next_i", "=", "(", "i", "+", "1", ")", "%", "N", "\n", "\n", "p_floor_a", "=", "xyz_floor", "[", "last_i", "]", "\n", "p_floor_b", "=", "xyz_floor", "[", "next_i", "]", "\n", "p_floor", "=", "xyz_floor", "[", "i", "]", "\n", "p_ceil_a", "=", "xyz_ceil", "[", "last_i", "]", "\n", "p_ceil_b", "=", "xyz_ceil", "[", "next_i", "]", "\n", "p_ceil", "=", "xyz_ceil", "[", "i", "]", "\n", "halfspaces", ".", "append", "(", "tri2halfspace", "(", "p_floor_a", ",", "p_floor_b", ",", "p_floor", ")", ")", "\n", "halfspaces", ".", "append", "(", "tri2halfspace", "(", "p_floor_a", ",", "p_ceil", ",", "p_floor", ")", ")", "\n", "halfspaces", ".", "append", "(", "tri2halfspace", "(", "p_ceil", ",", "p_floor_b", ",", "p_floor", ")", ")", "\n", "halfspaces", ".", "append", "(", "tri2halfspace", "(", "p_ceil_a", ",", "p_ceil_b", ",", "p_ceil", ")", ")", "\n", "halfspaces", ".", "append", "(", "tri2halfspace", "(", "p_ceil_a", ",", "p_floor", ",", "p_ceil", ")", ")", "\n", "halfspaces", ".", "append", "(", "tri2halfspace", "(", "p_floor", ",", "p_ceil_b", ",", "p_ceil", ")", ")", "\n", "", "return", "np", ".", "array", "(", "halfspaces", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.utils_eval.eval_3diou": [[62, 115], ["numpy.array", "numpy.array", "numpy.array", "numpy.array", "len", "numpy.hstack", "numpy.hstack", "numpy.sqrt", "numpy.sqrt", "utils_eval.np_coory2v", "utils_eval.np_coory2v", "np.hstack.copy", "np.hstack.copy", "utils_eval.xyzlst2halfspaces", "utils_eval.xyzlst2halfspaces", "scipy.spatial.HalfspaceIntersection", "scipy.spatial.HalfspaceIntersection", "scipy.spatial.HalfspaceIntersection", "numpy.tan", "numpy.tan", "numpy.concatenate", "numpy.zeros", "numpy.zeros", "numpy.zeros", "scipy.spatial.ConvexHull", "scipy.spatial.ConvexHull", "scipy.spatial.ConvexHull", "utils_eval.np_coor2xy", "utils_eval.np_coor2xy", "numpy.zeros", "numpy.zeros"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.np_coory2v", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.np_coory2v", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.utils_eval.xyzlst2halfspaces", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.utils_eval.xyzlst2halfspaces", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.np_coor2xy", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.np_coor2xy"], ["", "def", "eval_3diou", "(", "dt_floor_coor", ",", "dt_ceil_coor", ",", "gt_floor_coor", ",", "gt_ceil_coor", ",", "\n", "ch", "=", "-", "1.6", ",", "coorW", "=", "1024", ",", "coorH", "=", "512", ")", ":", "\n", "    ", "'''\n    Evaluate 3D IoU of \"convex layout\".\n    Instead of voxelization, this function use halfspace intersection\n    to evaluate the volume.\n    Input parameters:\n        dt_ceil_coor, dt_floor_coor, gt_ceil_coor, gt_floor_coor\n    have to be in shape [N, 2] and in the format of:\n        [[x, y], ...]\n    listing the corner position from left to right on the equirect image.\n    '''", "\n", "dt_floor_coor", "=", "np", ".", "array", "(", "dt_floor_coor", ")", "\n", "dt_ceil_coor", "=", "np", ".", "array", "(", "dt_ceil_coor", ")", "\n", "gt_floor_coor", "=", "np", ".", "array", "(", "gt_floor_coor", ")", "\n", "gt_ceil_coor", "=", "np", ".", "array", "(", "gt_ceil_coor", ")", "\n", "assert", "(", "dt_floor_coor", "[", ":", ",", "0", "]", "!=", "dt_ceil_coor", "[", ":", ",", "0", "]", ")", ".", "sum", "(", ")", "==", "0", "\n", "assert", "(", "gt_floor_coor", "[", ":", ",", "0", "]", "!=", "gt_ceil_coor", "[", ":", ",", "0", "]", ")", ".", "sum", "(", ")", "==", "0", "\n", "N", "=", "len", "(", "dt_floor_coor", ")", "\n", "dt_floor_xyz", "=", "np", ".", "hstack", "(", "[", "\n", "np_coor2xy", "(", "dt_floor_coor", ",", "ch", ",", "coorW", ",", "coorH", ")", ",", "\n", "np", ".", "zeros", "(", "(", "N", ",", "1", ")", ")", "+", "ch", ",", "\n", "]", ")", "\n", "gt_floor_xyz", "=", "np", ".", "hstack", "(", "[", "\n", "np_coor2xy", "(", "gt_floor_coor", ",", "ch", ",", "coorW", ",", "coorH", ")", ",", "\n", "np", ".", "zeros", "(", "(", "N", ",", "1", ")", ")", "+", "ch", ",", "\n", "]", ")", "\n", "dt_c", "=", "np", ".", "sqrt", "(", "(", "dt_floor_xyz", "[", ":", ",", ":", "2", "]", "**", "2", ")", ".", "sum", "(", "1", ")", ")", "\n", "gt_c", "=", "np", ".", "sqrt", "(", "(", "gt_floor_xyz", "[", ":", ",", ":", "2", "]", "**", "2", ")", ".", "sum", "(", "1", ")", ")", "\n", "dt_v2", "=", "np_coory2v", "(", "dt_ceil_coor", "[", ":", ",", "1", "]", ",", "coorH", ")", "\n", "gt_v2", "=", "np_coory2v", "(", "gt_ceil_coor", "[", ":", ",", "1", "]", ",", "coorH", ")", "\n", "dt_ceil_z", "=", "dt_c", "*", "np", ".", "tan", "(", "dt_v2", ")", "\n", "gt_ceil_z", "=", "gt_c", "*", "np", ".", "tan", "(", "gt_v2", ")", "\n", "\n", "dt_ceil_xyz", "=", "dt_floor_xyz", ".", "copy", "(", ")", "\n", "dt_ceil_xyz", "[", ":", ",", "2", "]", "=", "dt_ceil_z", "\n", "gt_ceil_xyz", "=", "gt_floor_xyz", ".", "copy", "(", ")", "\n", "gt_ceil_xyz", "[", ":", ",", "2", "]", "=", "gt_ceil_z", "\n", "\n", "dt_halfspaces", "=", "xyzlst2halfspaces", "(", "dt_floor_xyz", ",", "dt_ceil_xyz", ")", "\n", "gt_halfspaces", "=", "xyzlst2halfspaces", "(", "gt_floor_xyz", ",", "gt_ceil_xyz", ")", "\n", "\n", "in_halfspaces", "=", "HalfspaceIntersection", "(", "np", ".", "concatenate", "(", "[", "dt_halfspaces", ",", "gt_halfspaces", "]", ")", ",", "\n", "np", ".", "zeros", "(", "3", ")", ")", "\n", "dt_halfspaces", "=", "HalfspaceIntersection", "(", "dt_halfspaces", ",", "np", ".", "zeros", "(", "3", ")", ")", "\n", "gt_halfspaces", "=", "HalfspaceIntersection", "(", "gt_halfspaces", ",", "np", ".", "zeros", "(", "3", ")", ")", "\n", "\n", "in_volume", "=", "ConvexHull", "(", "in_halfspaces", ".", "intersections", ")", ".", "volume", "\n", "dt_volume", "=", "ConvexHull", "(", "dt_halfspaces", ".", "intersections", ")", ".", "volume", "\n", "gt_volume", "=", "ConvexHull", "(", "gt_halfspaces", ".", "intersections", ")", ".", "volume", "\n", "un_volume", "=", "dt_volume", "+", "gt_volume", "-", "in_volume", "\n", "\n", "return", "in_volume", "/", "un_volume", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.utils_eval.eval_PE": [[117, 153], ["numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "numpy.zeros", "numpy.cumsum", "numpy.zeros", "numpy.cumsum", "pano.pano_connect_points", "pano.pano_connect_points", "pano.pano_connect_points", "pano.pano_connect_points", "numpy.round().astype", "numpy.round().astype", "numpy.round().astype", "numpy.round().astype", "numpy.round().astype", "numpy.arange", "numpy.round().astype", "numpy.arange", "numpy.round().astype", "numpy.arange", "numpy.round().astype", "numpy.arange", "numpy.round", "numpy.round", "numpy.round", "numpy.round", "numpy.round", "numpy.round", "numpy.round", "numpy.round"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.pano_connect_points", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.pano_connect_points", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.pano_connect_points", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.pano_connect_points"], ["", "def", "eval_PE", "(", "dt_ceil_coor", ",", "dt_floor_coor", ",", "gt_ceil_coor", ",", "gt_floor_coor", ",", "H", "=", "512", ",", "W", "=", "1024", ")", ":", "\n", "    ", "'''\n    Evaluate pixel surface error (3 labels: ceiling, wall, floor)\n    Input parameters:\n        dt_ceil_coor, dt_floor_coor, gt_ceil_coor, gt_floor_coor\n    have to be in shape [N, 2] and in the format of:\n        [[x, y], ...]\n    listing the corner position from left to right on the equirect image.\n    '''", "\n", "y0", "=", "np", ".", "zeros", "(", "W", ")", "\n", "y1", "=", "np", ".", "zeros", "(", "W", ")", "\n", "y0_gt", "=", "np", ".", "zeros", "(", "W", ")", "\n", "y1_gt", "=", "np", ".", "zeros", "(", "W", ")", "\n", "for", "j", "in", "range", "(", "dt_ceil_coor", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "coorxy", "=", "pano_connect_points", "(", "dt_ceil_coor", "[", "j", "]", ",", "dt_ceil_coor", "[", "(", "j", "+", "1", ")", "%", "4", "]", ",", "-", "50", ")", "\n", "y0", "[", "np", ".", "round", "(", "coorxy", "[", ":", ",", "0", "]", ")", ".", "astype", "(", "int", ")", "]", "=", "coorxy", "[", ":", ",", "1", "]", "\n", "\n", "coorxy", "=", "pano_connect_points", "(", "dt_floor_coor", "[", "j", "]", ",", "dt_floor_coor", "[", "(", "j", "+", "1", ")", "%", "4", "]", ",", "50", ")", "\n", "y1", "[", "np", ".", "round", "(", "coorxy", "[", ":", ",", "0", "]", ")", ".", "astype", "(", "int", ")", "]", "=", "coorxy", "[", ":", ",", "1", "]", "\n", "\n", "coorxy", "=", "pano_connect_points", "(", "gt_ceil_coor", "[", "j", "]", ",", "gt_ceil_coor", "[", "(", "j", "+", "1", ")", "%", "4", "]", ",", "-", "50", ")", "\n", "y0_gt", "[", "np", ".", "round", "(", "coorxy", "[", ":", ",", "0", "]", ")", ".", "astype", "(", "int", ")", "]", "=", "coorxy", "[", ":", ",", "1", "]", "\n", "\n", "coorxy", "=", "pano_connect_points", "(", "gt_floor_coor", "[", "j", "]", ",", "gt_floor_coor", "[", "(", "j", "+", "1", ")", "%", "4", "]", ",", "50", ")", "\n", "y1_gt", "[", "np", ".", "round", "(", "coorxy", "[", ":", ",", "0", "]", ")", ".", "astype", "(", "int", ")", "]", "=", "coorxy", "[", ":", ",", "1", "]", "\n", "\n", "", "surface", "=", "np", ".", "zeros", "(", "(", "H", ",", "W", ")", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "surface", "[", "np", ".", "round", "(", "y0", ")", ".", "astype", "(", "int", ")", ",", "np", ".", "arange", "(", "W", ")", "]", "=", "1", "\n", "surface", "[", "np", ".", "round", "(", "y1", ")", ".", "astype", "(", "int", ")", ",", "np", ".", "arange", "(", "W", ")", "]", "=", "1", "\n", "surface", "=", "np", ".", "cumsum", "(", "surface", ",", "axis", "=", "0", ")", "\n", "surface_gt", "=", "np", ".", "zeros", "(", "(", "H", ",", "W", ")", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "surface_gt", "[", "np", ".", "round", "(", "y0_gt", ")", ".", "astype", "(", "int", ")", ",", "np", ".", "arange", "(", "W", ")", "]", "=", "1", "\n", "surface_gt", "[", "np", ".", "round", "(", "y1_gt", ")", ".", "astype", "(", "int", ")", ",", "np", ".", "arange", "(", "W", ")", "]", "=", "1", "\n", "surface_gt", "=", "np", ".", "cumsum", "(", "surface_gt", ",", "axis", "=", "0", ")", "\n", "\n", "return", "(", "surface", "!=", "surface_gt", ")", ".", "sum", "(", ")", "/", "(", "H", "*", "W", ")", ",", "surface", ",", "surface_gt", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.utils_eval.augment": [[155, 166], ["aug_type.append", "x_imgs_augmented.append", "int", "aug_type.append", "x_imgs_augmented.append", "numpy.array", "numpy.flip", "round", "numpy.roll"], "function", ["None"], ["", "def", "augment", "(", "x_img", ",", "flip", ",", "rotate", ")", ":", "\n", "    ", "aug_type", "=", "[", "''", "]", "\n", "x_imgs_augmented", "=", "[", "x_img", "]", "\n", "if", "flip", ":", "\n", "        ", "aug_type", ".", "append", "(", "'flip'", ")", "\n", "x_imgs_augmented", ".", "append", "(", "np", ".", "flip", "(", "x_img", ",", "axis", "=", "-", "1", ")", ")", "\n", "", "for", "rotate", "in", "rotate", ":", "\n", "        ", "shift", "=", "int", "(", "round", "(", "rotate", "*", "x_img", ".", "shape", "[", "-", "1", "]", ")", ")", "\n", "aug_type", ".", "append", "(", "'rotate %d'", "%", "shift", ")", "\n", "x_imgs_augmented", ".", "append", "(", "np", ".", "roll", "(", "x_img", ",", "shift", ",", "axis", "=", "-", "1", ")", ")", "\n", "", "return", "np", ".", "array", "(", "x_imgs_augmented", ")", ",", "aug_type", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.utils_eval.augment_undo": [[168, 181], ["zip", "numpy.array", "x_imgs.append", "aug.startswith", "numpy.flip", "int", "x_imgs.append", "numpy.roll", "x_imgs.append", "NotImplementedError", "aug.split"], "function", ["None"], ["", "def", "augment_undo", "(", "x_imgs_augmented", ",", "aug_type", ")", ":", "\n", "    ", "x_imgs", "=", "[", "]", "\n", "for", "x_img", ",", "aug", "in", "zip", "(", "x_imgs_augmented", ",", "aug_type", ")", ":", "\n", "        ", "if", "aug", "==", "'flip'", ":", "\n", "            ", "x_imgs", ".", "append", "(", "np", ".", "flip", "(", "x_img", ",", "axis", "=", "-", "1", ")", ")", "\n", "", "elif", "aug", ".", "startswith", "(", "'rotate'", ")", ":", "\n", "            ", "shift", "=", "int", "(", "aug", ".", "split", "(", ")", "[", "-", "1", "]", ")", "\n", "x_imgs", ".", "append", "(", "np", ".", "roll", "(", "x_img", ",", "-", "shift", ",", "axis", "=", "-", "1", ")", ")", "\n", "", "elif", "aug", "==", "''", ":", "\n", "            ", "x_imgs", ".", "append", "(", "x_img", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", ")", "\n", "", "", "return", "np", ".", "array", "(", "x_imgs", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.train_PC.train_model": [[59, 153], ["time.time", "range", "print", "print", "model.load_state_dict", "print", "print", "print", "time.time", "print", "model.train", "model.eval", "inputs.to.to", "labels.to.to", "labels2.to.to", "optimizer.zero_grad", "val_acc_history.append", "copy.deepcopy", "torch.save", "torch.save", "torch.save", "print", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "model", "loss.item", "model.state_dict", "criterion", "criterion2", "loss.backward", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "optimizer.step", "model.parameters"], "function", ["None"], ["def", "train_model", "(", "model", ",", "train_generator", ",", "val_generator", ",", "optimizer", ",", "criterion", ",", "criterion2", ",", "steps", "=", "100", ",", "num_epochs", "=", "25", ")", ":", "\n", "    ", "since", "=", "time", ".", "time", "(", ")", "\n", "\n", "val_acc_history", "=", "[", "]", "\n", "\n", "best_acc", "=", "np", ".", "Inf", "\n", "\n", "for", "epoch", "in", "range", "(", "num_epochs", ")", ":", "\n", "        ", "print", "(", "'Epoch {}/{}'", ".", "format", "(", "epoch", ",", "num_epochs", "-", "1", ")", ")", "\n", "print", "(", "'-'", "*", "10", ")", "\n", "\n", "# Each epoch has a training and validation phase", "\n", "for", "phase", "in", "[", "'train'", ",", "'val'", "]", ":", "\n", "            ", "if", "phase", "==", "'train'", ":", "\n", "                ", "model", ".", "train", "(", ")", "# Set model to training mode", "\n", "dataloaders", "=", "train_generator", "\n", "", "else", ":", "\n", "                ", "model", ".", "eval", "(", ")", "# Set model to evaluate mode", "\n", "dataloaders", "=", "val_generator", "\n", "\n", "", "loss_sum", "=", "0.0", "\n", "step", "=", "0", "\n", "\n", "# Iterate over data.", "\n", "for", "input", "in", "dataloaders", ":", "\n", "\n", "                ", "inputs", "=", "input", "[", "0", "]", "\n", "labels", "=", "input", "[", "1", "]", "\n", "labels2", "=", "input", "[", "2", "]", "\n", "\n", "# gpu mode", "\n", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "labels", "=", "labels", ".", "to", "(", "device", ")", "\n", "labels2", "=", "labels2", ".", "to", "(", "device", ")", "\n", "\n", "# zero the parameter gradients", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "# forward", "\n", "with", "torch", ".", "set_grad_enabled", "(", "phase", "==", "'train'", ")", ":", "\n", "\n", "# Get model outputs and calculate loss", "\n", "                    ", "outputs", ",", "outputs2", "=", "model", "(", "inputs", ")", "\n", "\n", "# loss", "\n", "mask", "=", "(", "labels", ">", "0", ")", ".", "float", "(", ")", "\n", "mask", "=", "mask", "+", "0.2", "*", "(", "1.0", "-", "mask", ")", "\n", "mask2", "=", "(", "labels2", ">", "0", ")", ".", "float", "(", ")", "\n", "mask2", "=", "mask2", "+", "0.2", "*", "(", "1.0", "-", "mask2", ")", "\n", "\n", "loss", "=", "criterion", "(", "outputs", "*", "mask", ",", "labels", "*", "mask", ")", "+", "criterion2", "(", "outputs2", "*", "mask2", ",", "labels2", "*", "mask2", ")", "\n", "# backward + optimize only if in training phase", "\n", "if", "phase", "==", "'train'", ":", "\n", "                        ", "loss", ".", "backward", "(", ")", "\n", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "model", ".", "parameters", "(", ")", ",", "5.0", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# clear cache", "\n", "#torch.cuda.empty_cache()", "\n", "", "", "del", "inputs", ",", "outputs", ",", "outputs2", ",", "mask", ",", "mask2", ",", "labels", ",", "labels2", "\n", "#del inputs, outputs, mask, labels", "\n", "\n", "# statistics", "\n", "loss_sum", "+=", "loss", ".", "item", "(", ")", "/", "steps", "#*inputs.size(0)/steps", "\n", "\n", "# clear", "\n", "del", "loss", "\n", "\n", "# Break after 'steps' steps", "\n", "if", "step", "==", "steps", "-", "1", ":", "\n", "                    ", "break", "\n", "", "step", "+=", "1", "\n", "\n", "", "print", "(", "'{} Loss: {:.6f}'", ".", "format", "(", "phase", ",", "loss_sum", ")", ")", "\n", "\n", "# deep copy the model", "\n", "if", "phase", "==", "'val'", "and", "loss_sum", "<", "best_acc", ":", "\n", "                ", "val_acc_history", ".", "append", "(", "loss_sum", ")", "\n", "best_acc", "=", "loss_sum", "\n", "best_model_wts", "=", "copy", ".", "deepcopy", "(", "model", ".", "state_dict", "(", ")", ")", "\n", "# save model", "\n", "torch", ".", "save", "(", "best_model_wts", ",", "model_path", ")", "\n", "print", "(", "\"Model saved ...\"", ")", "\n", "del", "best_model_wts", "\n", "\n", "", "", "print", "(", ")", "\n", "\n", "", "time_elapsed", "=", "time", ".", "time", "(", ")", "-", "since", "\n", "print", "(", "'Training complete in {:.0f}m {:.0f}s'", ".", "format", "(", "time_elapsed", "//", "60", ",", "time_elapsed", "%", "60", ")", ")", "\n", "print", "(", "'Best val Acc: {:6f}'", ".", "format", "(", "best_acc", ")", ")", "\n", "\n", "# load best model weights", "\n", "model", ".", "load_state_dict", "(", "best_model_wts", ")", "\n", "return", "model", ",", "val_acc_history", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_gen.find_N_peaks": [[12, 21], ["scipy.signal.find_peaks", "numpy.argsort", "numpy.sort", "min", "len"], "function", ["None"], ["def", "find_N_peaks", "(", "signal", ",", "prominence", ",", "distance", ",", "N", "=", "4", ")", ":", "\n", "    ", "locs", ",", "_", "=", "scipy", ".", "signal", ".", "find_peaks", "(", "signal", ",", "\n", "prominence", "=", "prominence", ",", "\n", "distance", "=", "distance", ")", "\n", "pks", "=", "signal", "[", "locs", "]", "\n", "pk_id", "=", "np", ".", "argsort", "(", "-", "pks", ")", "\n", "pk_loc", "=", "locs", "[", "pk_id", "[", ":", "min", "(", "N", ",", "len", "(", "pks", ")", ")", "]", "]", "\n", "pk_loc", "=", "np", ".", "sort", "(", "pk_loc", ")", "\n", "return", "pk_loc", ",", "signal", "[", "pk_loc", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_gen.constraint_cor_id_same_z": [[23, 67], ["numpy.tan", "numpy.stack", "numpy.stack", "numpy.stack", "numpy.arctan2", "numpy.arctan2", "numpy.cos", "numpy.sin", "numpy.sqrt"], "function", ["None"], ["", "def", "constraint_cor_id_same_z", "(", "cor_id", ",", "cor_img", ",", "z", "=", "-", "1", ")", ":", "\n", "# Convert to uv space", "\n", "    ", "cor_id_u", "=", "(", "(", "cor_id", "[", ":", ",", "0", "]", "+", "0.5", ")", "/", "cor_img", ".", "shape", "[", "1", "]", "-", "0.5", ")", "*", "2", "*", "np", ".", "pi", "\n", "cor_id_v", "=", "(", "(", "cor_id", "[", ":", ",", "1", "]", "+", "0.5", ")", "/", "cor_img", ".", "shape", "[", "0", "]", "-", "0.5", ")", "*", "np", ".", "pi", "\n", "\n", "# Convert to xyz space (z=-1)", "\n", "cor_id_c", "=", "z", "/", "np", ".", "tan", "(", "cor_id_v", ")", "\n", "cor_id_xy", "=", "np", ".", "stack", "(", "[", "\n", "cor_id_c", "*", "np", ".", "cos", "(", "cor_id_u", ")", ",", "\n", "cor_id_c", "*", "np", ".", "sin", "(", "cor_id_u", ")", ",", "\n", "]", ",", "axis", "=", "0", ")", ".", "T", "\n", "\n", "#    # Fix 2 diagonal corner, move the others", "\n", "#    cor_id_score = map_coordinates(cor_img, [cor_id[:, 1], cor_id[:, 0]])", "\n", "#    if cor_id_score[0::2].sum() > cor_id_score[1::2].sum():", "\n", "#        idx0, idx1 = 0, 1", "\n", "#    else:", "\n", "#        idx0, idx1 = 1, 0", "\n", "#    pc = cor_id_xy[idx0::2].mean(0, keepdims=True)", "\n", "#    radius2 = np.sqrt(((cor_id_xy[idx0::2] - pc) ** 2).sum(1)).mean()", "\n", "#    d = cor_id_xy[idx1::2] - pc", "\n", "#    d1 = d[0]", "\n", "#    d2 = d[1]", "\n", "#    theta1 = (np.arctan2(d1[1], d1[0]) + 2 * np.pi) % (2 * np.pi)", "\n", "#    theta2 = (np.arctan2(d2[1], d2[0]) + 2 * np.pi) % (2 * np.pi)", "\n", "#    theta2 = theta2 - np.pi", "\n", "#    theta2 = (theta2 + 2 * np.pi) % (2 * np.pi)", "\n", "#    theta = (theta1 + theta2) / 2", "\n", "#    d[0] = (radius2 * np.cos(theta), radius2 * np.sin(theta))", "\n", "#    theta = theta - np.pi", "\n", "#    d[1] = (radius2 * np.cos(theta), radius2 * np.sin(theta))", "\n", "\n", "#    cor_id_xy[idx1::2] = pc + d", "\n", "\n", "# Convert refined xyz back to uv space", "\n", "cor_id_uv", "=", "np", ".", "stack", "(", "[", "\n", "np", ".", "arctan2", "(", "cor_id_xy", "[", ":", ",", "1", "]", ",", "cor_id_xy", "[", ":", ",", "0", "]", ")", ",", "\n", "np", ".", "arctan2", "(", "z", ",", "np", ".", "sqrt", "(", "(", "cor_id_xy", "**", "2", ")", ".", "sum", "(", "1", ")", ")", ")", ",", "\n", "]", ",", "axis", "=", "0", ")", ".", "T", "\n", "\n", "# Convert to image index", "\n", "col", "=", "(", "cor_id_uv", "[", ":", ",", "0", "]", "/", "(", "2", "*", "np", ".", "pi", ")", "+", "0.5", ")", "*", "cor_img", ".", "shape", "[", "1", "]", "-", "0.5", "\n", "row", "=", "(", "cor_id_uv", "[", ":", ",", "1", "]", "/", "np", ".", "pi", "+", "0.5", ")", "*", "cor_img", ".", "shape", "[", "0", "]", "-", "0.5", "\n", "return", "np", ".", "stack", "(", "[", "col", ",", "row", "]", ",", "axis", "=", "0", ")", ".", "T", ",", "cor_id_xy", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_gen.fit_avg_z": [[69, 76], ["scipy.ndimage.map_coordinates", "numpy.sqrt", "numpy.tan", "scipy.ndimage.map_coordinates.sum"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.map_coordinates"], ["", "def", "fit_avg_z", "(", "cor_id", ",", "cor_id_xy", ",", "cor_img", ")", ":", "\n", "    ", "score", "=", "map_coordinates", "(", "cor_img", ",", "[", "cor_id", "[", ":", ",", "1", "]", ",", "cor_id", "[", ":", ",", "0", "]", "]", ")", "\n", "c", "=", "np", ".", "sqrt", "(", "(", "cor_id_xy", "**", "2", ")", ".", "sum", "(", "1", ")", ")", "\n", "cor_id_v", "=", "(", "(", "cor_id", "[", ":", ",", "1", "]", "+", "0.5", ")", "/", "cor_img", ".", "shape", "[", "0", "]", "-", "0.5", ")", "*", "np", ".", "pi", "\n", "z", "=", "c", "*", "np", ".", "tan", "(", "cor_id_v", ")", "\n", "fit_z", "=", "(", "z", "*", "score", ")", ".", "sum", "(", ")", "/", "score", ".", "sum", "(", ")", "\n", "return", "fit_z", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_gen.constraint_cor_id_on_xy": [[78, 86], ["numpy.sqrt", "pano_gen.fit_avg_z", "cor_id[].copy", "numpy.stack", "numpy.arctan2"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.fit_avg_z"], ["", "def", "constraint_cor_id_on_xy", "(", "cor_id", ",", "cor_id_xy", ",", "cor_img", ")", ":", "\n", "    ", "c", "=", "np", ".", "sqrt", "(", "(", "cor_id_xy", "**", "2", ")", ".", "sum", "(", "1", ")", ")", "\n", "z", "=", "fit_avg_z", "(", "cor_id", ",", "cor_id_xy", ",", "cor_img", ")", "\n", "\n", "# Convert to image index", "\n", "col", "=", "cor_id", "[", ":", ",", "0", "]", ".", "copy", "(", ")", "\n", "row", "=", "(", "np", ".", "arctan2", "(", "z", ",", "c", ")", "/", "np", ".", "pi", "+", "0.5", ")", "*", "cor_img", ".", "shape", "[", "0", "]", "-", "0.5", "\n", "return", "np", ".", "stack", "(", "[", "col", ",", "row", "]", ",", "axis", "=", "0", ")", ".", "T", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_gen.get_ini_cor": [[88, 105], ["scipy.ndimage.convolve", "numpy.array", "numpy.ones", "pano_gen.find_N_peaks", "int", "cor[].sum", "np.array.append", "np.array.append", "scipy.ndimage.convolve.sum", "numpy.round", "pano_gen.find_N_peaks", "max"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.find_N_peaks", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.find_N_peaks"], ["", "def", "get_ini_cor", "(", "cor_img", ",", "d1", "=", "21", ",", "d2", "=", "3", ")", ":", "\n", "    ", "cor", "=", "convolve", "(", "cor_img", ",", "np", ".", "ones", "(", "(", "d1", ",", "d1", ")", ")", ",", "mode", "=", "'constant'", ",", "cval", "=", "0.0", ")", "\n", "cor_id", "=", "[", "]", "\n", "X_loc", "=", "find_N_peaks", "(", "cor", ".", "sum", "(", "0", ")", ",", "prominence", "=", "None", ",", "\n", "distance", "=", "20", ",", "N", "=", "4", ")", "[", "0", "]", "\n", "for", "x", "in", "X_loc", ":", "\n", "        ", "x_", "=", "int", "(", "np", ".", "round", "(", "x", ")", ")", "\n", "\n", "V_signal", "=", "cor", "[", ":", ",", "max", "(", "0", ",", "x_", "-", "d2", ")", ":", "x_", "+", "d2", "+", "1", "]", ".", "sum", "(", "1", ")", "\n", "y1", ",", "y2", "=", "find_N_peaks", "(", "V_signal", ",", "prominence", "=", "None", ",", "\n", "distance", "=", "20", ",", "N", "=", "2", ")", "[", "0", "]", "\n", "cor_id", ".", "append", "(", "(", "x", ",", "y1", ")", ")", "\n", "cor_id", ".", "append", "(", "(", "x", ",", "y2", ")", ")", "\n", "\n", "", "cor_id", "=", "np", ".", "array", "(", "cor_id", ",", "np", ".", "float64", ")", "\n", "\n", "return", "cor_id", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_gen.coords2uv": [[107, 117], ["numpy.hstack"], "function", ["None"], ["", "def", "coords2uv", "(", "coords", ",", "width", ",", "height", ")", ":", "\n", "    ", "'''\n    Image coordinates (xy) to uv\n    '''", "\n", "middleX", "=", "width", "/", "2", "+", "0.5", "\n", "middleY", "=", "height", "/", "2", "+", "0.5", "\n", "uv", "=", "np", ".", "hstack", "(", "[", "\n", "(", "coords", "[", ":", ",", "[", "0", "]", "]", "-", "middleX", ")", "/", "width", "*", "2", "*", "np", ".", "pi", ",", "\n", "-", "(", "coords", "[", ":", ",", "[", "1", "]", "]", "-", "middleY", ")", "/", "height", "*", "np", ".", "pi", "]", ")", "\n", "return", "uv", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_gen.uv2xyzN": [[119, 128], ["numpy.zeros", "numpy.sin", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.cos", "int", "int", "int"], "function", ["None"], ["", "def", "uv2xyzN", "(", "uv", ",", "planeID", "=", "1", ")", ":", "\n", "    ", "ID1", "=", "(", "int", "(", "planeID", ")", "-", "1", "+", "0", ")", "%", "3", "\n", "ID2", "=", "(", "int", "(", "planeID", ")", "-", "1", "+", "1", ")", "%", "3", "\n", "ID3", "=", "(", "int", "(", "planeID", ")", "-", "1", "+", "2", ")", "%", "3", "\n", "xyz", "=", "np", ".", "zeros", "(", "(", "uv", ".", "shape", "[", "0", "]", ",", "3", ")", ")", "\n", "xyz", "[", ":", ",", "ID1", "]", "=", "np", ".", "cos", "(", "uv", "[", ":", ",", "1", "]", ")", "*", "np", ".", "sin", "(", "uv", "[", ":", ",", "0", "]", ")", "\n", "xyz", "[", ":", ",", "ID2", "]", "=", "np", ".", "cos", "(", "uv", "[", ":", ",", "1", "]", ")", "*", "np", ".", "cos", "(", "uv", "[", ":", ",", "0", "]", ")", "\n", "xyz", "[", ":", ",", "ID3", "]", "=", "np", ".", "sin", "(", "uv", "[", ":", ",", "1", "]", ")", "\n", "return", "xyz", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_gen.uv2xyzN_vec": [[130, 147], ["planeID.astype.astype", "numpy.arange", "numpy.zeros", "numpy.sin", "len", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.cos", "len", "planeID.astype.astype"], "function", ["None"], ["", "def", "uv2xyzN_vec", "(", "uv", ",", "planeID", ")", ":", "\n", "    ", "'''\n    vectorization version of uv2xyzN\n    @uv       N x 2\n    @planeID  N\n    '''", "\n", "assert", "(", "planeID", ".", "astype", "(", "int", ")", "!=", "planeID", ")", ".", "sum", "(", ")", "==", "0", "\n", "planeID", "=", "planeID", ".", "astype", "(", "int", ")", "\n", "ID1", "=", "(", "planeID", "-", "1", "+", "0", ")", "%", "3", "\n", "ID2", "=", "(", "planeID", "-", "1", "+", "1", ")", "%", "3", "\n", "ID3", "=", "(", "planeID", "-", "1", "+", "2", ")", "%", "3", "\n", "ID", "=", "np", ".", "arange", "(", "len", "(", "uv", ")", ")", "\n", "xyz", "=", "np", ".", "zeros", "(", "(", "len", "(", "uv", ")", ",", "3", ")", ")", "\n", "xyz", "[", "ID", ",", "ID1", "]", "=", "np", ".", "cos", "(", "uv", "[", ":", ",", "1", "]", ")", "*", "np", ".", "sin", "(", "uv", "[", ":", ",", "0", "]", ")", "\n", "xyz", "[", "ID", ",", "ID2", "]", "=", "np", ".", "cos", "(", "uv", "[", ":", ",", "1", "]", ")", "*", "np", ".", "cos", "(", "uv", "[", ":", ",", "0", "]", ")", "\n", "xyz", "[", "ID", ",", "ID3", "]", "=", "np", ".", "sin", "(", "uv", "[", ":", ",", "1", "]", ")", "\n", "return", "xyz", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_gen.xyz2uvN": [[149, 165], ["numpy.sqrt", "numpy.sqrt", "numpy.arcsin", "numpy.arcsin", "numpy.hstack", "int", "int", "int", "numpy.isnan"], "function", ["None"], ["", "def", "xyz2uvN", "(", "xyz", ",", "planeID", "=", "1", ")", ":", "\n", "    ", "ID1", "=", "(", "int", "(", "planeID", ")", "-", "1", "+", "0", ")", "%", "3", "\n", "ID2", "=", "(", "int", "(", "planeID", ")", "-", "1", "+", "1", ")", "%", "3", "\n", "ID3", "=", "(", "int", "(", "planeID", ")", "-", "1", "+", "2", ")", "%", "3", "\n", "normXY", "=", "np", ".", "sqrt", "(", "xyz", "[", ":", ",", "[", "ID1", "]", "]", "**", "2", "+", "xyz", "[", ":", ",", "[", "ID2", "]", "]", "**", "2", ")", "\n", "normXY", "[", "normXY", "<", "0.000001", "]", "=", "0.000001", "\n", "normXYZ", "=", "np", ".", "sqrt", "(", "xyz", "[", ":", ",", "[", "ID1", "]", "]", "**", "2", "+", "xyz", "[", ":", ",", "[", "ID2", "]", "]", "**", "2", "+", "xyz", "[", ":", ",", "[", "ID3", "]", "]", "**", "2", ")", "\n", "v", "=", "np", ".", "arcsin", "(", "xyz", "[", ":", ",", "[", "ID3", "]", "]", "/", "normXYZ", ")", "\n", "u", "=", "np", ".", "arcsin", "(", "xyz", "[", ":", ",", "[", "ID1", "]", "]", "/", "normXY", ")", "\n", "valid", "=", "(", "xyz", "[", ":", ",", "[", "ID2", "]", "]", "<", "0", ")", "&", "(", "u", ">=", "0", ")", "\n", "u", "[", "valid", "]", "=", "np", ".", "pi", "-", "u", "[", "valid", "]", "\n", "valid", "=", "(", "xyz", "[", ":", ",", "[", "ID2", "]", "]", "<", "0", ")", "&", "(", "u", "<=", "0", ")", "\n", "u", "[", "valid", "]", "=", "-", "np", ".", "pi", "-", "u", "[", "valid", "]", "\n", "uv", "=", "np", ".", "hstack", "(", "[", "u", ",", "v", "]", ")", "\n", "uv", "[", "np", ".", "isnan", "(", "uv", "[", ":", ",", "0", "]", ")", ",", "0", "]", "=", "0", "\n", "return", "uv", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_gen.computeUVN": [[167, 179], ["numpy.arctan", "numpy.array", "numpy.array", "numpy.sin", "numpy.cos"], "function", ["None"], ["", "def", "computeUVN", "(", "n", ",", "in_", ",", "planeID", ")", ":", "\n", "    ", "'''\n    compute v given u and normal.\n    '''", "\n", "if", "planeID", "==", "2", ":", "\n", "        ", "n", "=", "np", ".", "array", "(", "[", "n", "[", "1", "]", ",", "n", "[", "2", "]", ",", "n", "[", "0", "]", "]", ")", "\n", "", "elif", "planeID", "==", "3", ":", "\n", "        ", "n", "=", "np", ".", "array", "(", "[", "n", "[", "2", "]", ",", "n", "[", "0", "]", ",", "n", "[", "1", "]", "]", ")", "\n", "", "bc", "=", "n", "[", "0", "]", "*", "np", ".", "sin", "(", "in_", ")", "+", "n", "[", "1", "]", "*", "np", ".", "cos", "(", "in_", ")", "\n", "bs", "=", "n", "[", "2", "]", "\n", "out", "=", "np", ".", "arctan", "(", "-", "bc", "/", "(", "bs", "+", "1e-9", ")", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_gen.computeUVN_vec": [[181, 199], ["np.repeat.copy", "numpy.repeat", "numpy.arctan", "numpy.roll", "numpy.roll", "numpy.sin", "numpy.cos"], "function", ["None"], ["", "def", "computeUVN_vec", "(", "n", ",", "in_", ",", "planeID", ")", ":", "\n", "    ", "'''\n    vectorization version of computeUVN\n    @n         N x 3\n    @in_      MN x 1\n    @planeID   N\n    '''", "\n", "n", "=", "n", ".", "copy", "(", ")", "\n", "if", "(", "planeID", "==", "2", ")", ".", "sum", "(", ")", ":", "\n", "        ", "n", "[", "planeID", "==", "2", "]", "=", "np", ".", "roll", "(", "n", "[", "planeID", "==", "2", "]", ",", "2", ",", "axis", "=", "1", ")", "\n", "", "if", "(", "planeID", "==", "3", ")", ".", "sum", "(", ")", ":", "\n", "        ", "n", "[", "planeID", "==", "3", "]", "=", "np", ".", "roll", "(", "n", "[", "planeID", "==", "3", "]", ",", "1", ",", "axis", "=", "1", ")", "\n", "", "n", "=", "np", ".", "repeat", "(", "n", ",", "in_", ".", "shape", "[", "0", "]", "//", "n", ".", "shape", "[", "0", "]", ",", "axis", "=", "0", ")", "\n", "assert", "n", ".", "shape", "[", "0", "]", "==", "in_", ".", "shape", "[", "0", "]", "\n", "bc", "=", "n", "[", ":", ",", "[", "0", "]", "]", "*", "np", ".", "sin", "(", "in_", ")", "+", "n", "[", ":", ",", "[", "1", "]", "]", "*", "np", ".", "cos", "(", "in_", ")", "\n", "bs", "=", "n", "[", ":", ",", "[", "2", "]", "]", "\n", "out", "=", "np", ".", "arctan", "(", "-", "bc", "/", "(", "bs", "+", "1e-9", ")", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_gen.lineFromTwoPoint": [[201, 232], ["numpy.zeros", "numpy.cross", "numpy.abs", "numpy.abs", "numpy.abs", "range", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.argmax", "pano_gen.xyz2uvN", "numpy.repmat", "numpy.hstack", "numpy.vstack", "uv[].max", "uv[].min", "numpy.sqrt", "numpy.repmat", "numpy.repmat", "numpy.repmat", "numpy.sum", "numpy.array", "numpy.array"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.xyz2uvN"], ["", "def", "lineFromTwoPoint", "(", "pt1", ",", "pt2", ")", ":", "\n", "    ", "'''\n    Generate line segment based on two points on panorama\n    pt1, pt2: two points on panorama\n    line:\n        1~3-th dim: normal of the line\n        4-th dim: the projection dimension ID\n        5~6-th dim: the u of line segment endpoints in projection plane\n    '''", "\n", "numLine", "=", "pt1", ".", "shape", "[", "0", "]", "\n", "lines", "=", "np", ".", "zeros", "(", "(", "numLine", ",", "6", ")", ")", "\n", "n", "=", "np", ".", "cross", "(", "pt1", ",", "pt2", ")", "\n", "n", "=", "n", "/", "(", "matlib", ".", "repmat", "(", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "n", "**", "2", ",", "1", ",", "keepdims", "=", "1", ")", ")", ",", "1", ",", "3", ")", "+", "1e-9", ")", "\n", "lines", "[", ":", ",", "0", ":", "3", "]", "=", "n", "\n", "\n", "areaXY", "=", "np", ".", "abs", "(", "np", ".", "sum", "(", "n", "*", "matlib", ".", "repmat", "(", "[", "0", ",", "0", ",", "1", "]", ",", "numLine", ",", "1", ")", ",", "1", ",", "keepdims", "=", "True", ")", ")", "\n", "areaYZ", "=", "np", ".", "abs", "(", "np", ".", "sum", "(", "n", "*", "matlib", ".", "repmat", "(", "[", "1", ",", "0", ",", "0", "]", ",", "numLine", ",", "1", ")", ",", "1", ",", "keepdims", "=", "True", ")", ")", "\n", "areaZX", "=", "np", ".", "abs", "(", "np", ".", "sum", "(", "n", "*", "matlib", ".", "repmat", "(", "[", "0", ",", "1", ",", "0", "]", ",", "numLine", ",", "1", ")", ",", "1", ",", "keepdims", "=", "True", ")", ")", "\n", "planeIDs", "=", "np", ".", "argmax", "(", "np", ".", "hstack", "(", "[", "areaXY", ",", "areaYZ", ",", "areaZX", "]", ")", ",", "axis", "=", "1", ")", "+", "1", "\n", "lines", "[", ":", ",", "3", "]", "=", "planeIDs", "\n", "\n", "for", "i", "in", "range", "(", "numLine", ")", ":", "\n", "        ", "uv", "=", "xyz2uvN", "(", "np", ".", "vstack", "(", "[", "pt1", "[", "i", ",", ":", "]", ",", "pt2", "[", "i", ",", ":", "]", "]", ")", ",", "lines", "[", "i", ",", "3", "]", ")", "\n", "umax", "=", "uv", "[", ":", ",", "0", "]", ".", "max", "(", ")", "+", "np", ".", "pi", "\n", "umin", "=", "uv", "[", ":", ",", "0", "]", ".", "min", "(", ")", "+", "np", ".", "pi", "\n", "if", "umax", "-", "umin", ">", "np", ".", "pi", ":", "\n", "            ", "lines", "[", "i", ",", "4", ":", "6", "]", "=", "np", ".", "array", "(", "[", "umax", ",", "umin", "]", ")", "/", "2", "/", "np", ".", "pi", "\n", "", "else", ":", "\n", "            ", "lines", "[", "i", ",", "4", ":", "6", "]", "=", "np", ".", "array", "(", "[", "umin", ",", "umax", "]", ")", "/", "2", "/", "np", ".", "pi", "\n", "\n", "", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_gen.lineIdxFromCors": [[234, 264], ["pano_gen.coords2uv", "pano_gen.uv2xyzN", "pano_gen.lineFromTwoPoint", "max", "range", "pano_gen.computeUVN", "pano_gen.uv2xyzN", "pano_gen.xyz2uvN", "numpy.minimum().astype", "numpy.minimum().astype", "cs.extend", "rs.extend", "len", "numpy.linspace", "numpy.linspace", "np.linspace.reshape", "numpy.hstack", "numpy.minimum", "numpy.minimum", "numpy.floor", "numpy.floor"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.coords2uv", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.uv2xyzN", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.lineFromTwoPoint", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.computeUVN", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.uv2xyzN", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.xyz2uvN"], ["", "def", "lineIdxFromCors", "(", "cor_all", ",", "im_w", ",", "im_h", ")", ":", "\n", "    ", "assert", "len", "(", "cor_all", ")", "%", "2", "==", "0", "\n", "uv", "=", "coords2uv", "(", "cor_all", ",", "im_w", ",", "im_h", ")", "\n", "xyz", "=", "uv2xyzN", "(", "uv", ")", "\n", "lines", "=", "lineFromTwoPoint", "(", "xyz", "[", "0", ":", ":", "2", "]", ",", "xyz", "[", "1", ":", ":", "2", "]", ")", "\n", "num_sample", "=", "max", "(", "im_h", ",", "im_w", ")", "\n", "\n", "cs", ",", "rs", "=", "[", "]", ",", "[", "]", "\n", "for", "i", "in", "range", "(", "lines", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "n", "=", "lines", "[", "i", ",", "0", ":", "3", "]", "\n", "sid", "=", "lines", "[", "i", ",", "4", "]", "*", "2", "*", "np", ".", "pi", "\n", "eid", "=", "lines", "[", "i", ",", "5", "]", "*", "2", "*", "np", ".", "pi", "\n", "if", "eid", "<", "sid", ":", "\n", "            ", "x", "=", "np", ".", "linspace", "(", "sid", ",", "eid", "+", "2", "*", "np", ".", "pi", ",", "num_sample", ")", "\n", "x", "=", "x", "%", "(", "2", "*", "np", ".", "pi", ")", "\n", "", "else", ":", "\n", "            ", "x", "=", "np", ".", "linspace", "(", "sid", ",", "eid", ",", "num_sample", ")", "\n", "\n", "", "u", "=", "-", "np", ".", "pi", "+", "x", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "v", "=", "computeUVN", "(", "n", ",", "u", ",", "lines", "[", "i", ",", "3", "]", ")", "\n", "xyz", "=", "uv2xyzN", "(", "np", ".", "hstack", "(", "[", "u", ",", "v", "]", ")", ",", "lines", "[", "i", ",", "3", "]", ")", "\n", "uv", "=", "xyz2uvN", "(", "xyz", ",", "1", ")", "\n", "\n", "r", "=", "np", ".", "minimum", "(", "np", ".", "floor", "(", "(", "uv", "[", ":", ",", "0", "]", "+", "np", ".", "pi", ")", "/", "(", "2", "*", "np", ".", "pi", ")", "*", "im_w", ")", "+", "1", ",", "\n", "im_w", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "c", "=", "np", ".", "minimum", "(", "np", ".", "floor", "(", "(", "np", ".", "pi", "/", "2", "-", "uv", "[", ":", ",", "1", "]", ")", "/", "np", ".", "pi", "*", "im_h", ")", "+", "1", ",", "\n", "im_h", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "cs", ".", "extend", "(", "r", "-", "1", ")", "\n", "rs", ".", "extend", "(", "c", "-", "1", ")", "\n", "", "return", "rs", ",", "cs", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_gen.draw_boundary": [[266, 298], ["pano_gen.get_ini_cor", "range", "numpy.vstack", "pano_gen.lineIdxFromCors", "pano_opt.optimize_cor_id", "len", "np.vstack.append", "np.vstack.append", "numpy.zeros", "img_src.astype", "len", "len"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.get_ini_cor", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.lineIdxFromCors", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.optimize_cor_id"], ["", "def", "draw_boundary", "(", "cor_src", ",", "img_src", "=", "None", ",", "post_optimize", "=", "False", ",", "edg_src", "=", "None", ")", ":", "\n", "    ", "'''\n    @cor_src (numpy array H x W x 1, [0, 255])\n        model output corner probability map\n    @img_src (numpy array H x W x 3, [0, 255])\n    '''", "\n", "assert", "not", "post_optimize", "or", "edg_src", "is", "not", "None", "\n", "\n", "im_h", ",", "im_w", "=", "cor_src", ".", "shape", "\n", "cor_id", "=", "get_ini_cor", "(", "cor_src", ")", "\n", "if", "post_optimize", ":", "\n", "        ", "assert", "len", "(", "edg_src", ".", "shape", ")", "==", "3", "\n", "assert", "edg_src", ".", "shape", "[", ":", "2", "]", "==", "cor_src", ".", "shape", "[", ":", "2", "]", "\n", "assert", "edg_src", ".", "shape", "[", "2", "]", "==", "3", "\n", "cor_id", "=", "optimize_cor_id", "(", "cor_id", ",", "edg_src", ",", "cor_src", ")", "\n", "", "cor_all", "=", "[", "cor_id", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "cor_id", ")", ")", ":", "\n", "        ", "cor_all", ".", "append", "(", "cor_id", "[", "i", ",", ":", "]", ")", "\n", "cor_all", ".", "append", "(", "cor_id", "[", "(", "i", "+", "2", ")", "%", "len", "(", "cor_id", ")", ",", ":", "]", ")", "\n", "", "cor_all", "=", "np", ".", "vstack", "(", "cor_all", ")", "\n", "\n", "rs", ",", "cs", "=", "lineIdxFromCors", "(", "cor_all", ",", "im_w", ",", "im_h", ")", "\n", "\n", "if", "img_src", "is", "None", ":", "\n", "        ", "panoEdgeC", "=", "np", ".", "zeros", "(", "(", "im_h", ",", "im_w", ",", "3", ")", ",", "np", ".", "uint8", ")", "\n", "", "else", ":", "\n", "        ", "panoEdgeC", "=", "img_src", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "assert", "img_src", ".", "shape", "[", "0", "]", "==", "im_h", "and", "img_src", ".", "shape", "[", "1", "]", "==", "im_w", "\n", "\n", "", "panoEdgeC", "[", "rs", ",", "cs", ",", "1", "]", "=", "255", "\n", "\n", "return", "panoEdgeC", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_gen.draw_boundary_from_cor_id": [[300, 317], ["range", "numpy.vstack", "pano_gen.lineIdxFromCors", "numpy.array", "numpy.array", "img_src.astype", "len", "np.vstack.append", "np.vstack.append", "numpy.clip", "numpy.clip", "len"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.lineIdxFromCors"], ["", "def", "draw_boundary_from_cor_id", "(", "cor_id", ",", "img_src", ")", ":", "\n", "    ", "im_h", ",", "im_w", "=", "img_src", ".", "shape", "[", ":", "2", "]", "\n", "cor_all", "=", "[", "cor_id", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "cor_id", ")", ")", ":", "\n", "        ", "cor_all", ".", "append", "(", "cor_id", "[", "i", ",", ":", "]", ")", "\n", "cor_all", ".", "append", "(", "cor_id", "[", "(", "i", "+", "2", ")", "%", "len", "(", "cor_id", ")", ",", ":", "]", ")", "\n", "", "cor_all", "=", "np", ".", "vstack", "(", "cor_all", ")", "\n", "\n", "rs", ",", "cs", "=", "lineIdxFromCors", "(", "cor_all", ",", "im_w", ",", "im_h", ")", "\n", "rs", "=", "np", ".", "array", "(", "rs", ")", "\n", "cs", "=", "np", ".", "array", "(", "cs", ")", "\n", "\n", "panoEdgeC", "=", "img_src", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "for", "dx", ",", "dy", "in", "[", "[", "-", "1", ",", "0", "]", ",", "[", "1", ",", "0", "]", ",", "[", "0", ",", "0", "]", ",", "[", "0", ",", "1", "]", ",", "[", "0", ",", "-", "1", "]", "]", ":", "\n", "        ", "panoEdgeC", "[", "np", ".", "clip", "(", "rs", "+", "dx", ",", "0", ",", "im_h", "-", "1", ")", ",", "np", ".", "clip", "(", "cs", "+", "dy", ",", "0", ",", "im_w", "-", "1", ")", ",", "1", "]", "=", "255", "\n", "\n", "", "return", "panoEdgeC", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_gen.coorx2u": [[319, 321], ["None"], "function", ["None"], ["", "def", "coorx2u", "(", "x", ",", "w", "=", "1024", ")", ":", "\n", "    ", "return", "(", "(", "x", "+", "0.5", ")", "/", "w", "-", "0.5", ")", "*", "2", "*", "np", ".", "pi", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_gen.coory2v": [[322, 324], ["None"], "function", ["None"], ["", "def", "coory2v", "(", "y", ",", "h", "=", "512", ")", ":", "\n", "    ", "return", "(", "(", "y", "+", "0.5", ")", "/", "h", "-", "0.5", ")", "*", "np", ".", "pi", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_gen.u2coorx": [[325, 327], ["None"], "function", ["None"], ["", "def", "u2coorx", "(", "u", ",", "w", "=", "1024", ")", ":", "\n", "    ", "return", "(", "u", "/", "(", "2", "*", "np", ".", "pi", ")", "+", "0.5", ")", "*", "w", "-", "0.5", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_gen.v2coory": [[328, 330], ["None"], "function", ["None"], ["", "def", "v2coory", "(", "v", ",", "h", "=", "512", ")", ":", "\n", "    ", "return", "(", "v", "/", "np", ".", "pi", "+", "0.5", ")", "*", "h", "-", "0.5", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_gen.uv2xy": [[331, 336], ["numpy.tan", "numpy.cos", "numpy.sin"], "function", ["None"], ["", "def", "uv2xy", "(", "u", ",", "v", ",", "z", "=", "-", "50", ")", ":", "\n", "    ", "c", "=", "z", "/", "np", ".", "tan", "(", "v", ")", "\n", "x", "=", "c", "*", "np", ".", "cos", "(", "u", ")", "\n", "y", "=", "c", "*", "np", ".", "sin", "(", "u", ")", "\n", "return", "x", ",", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_gen.pano_connect_points": [[338, 363], ["pano_gen.coorx2u", "pano_gen.coory2v", "pano_gen.coorx2u", "pano_gen.coory2v", "pano_gen.uv2xy", "pano_gen.uv2xy", "pano_gen.coorx2u", "numpy.sqrt", "numpy.arctan2", "pano_gen.v2coory", "numpy.stack", "abs", "numpy.ceil", "numpy.floor", "numpy.ceil", "numpy.floor", "min", "max", "max", "min", "numpy.arange", "numpy.tan", "numpy.tan"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.coorx2u", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.coory2v", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.coorx2u", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.coory2v", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.uv2xy", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.uv2xy", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.coorx2u", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.v2coory"], ["", "def", "pano_connect_points", "(", "p1", ",", "p2", ",", "z", "=", "-", "50", ",", "w", "=", "1024", ",", "h", "=", "512", ")", ":", "\n", "    ", "u1", "=", "coorx2u", "(", "p1", "[", "0", "]", ",", "w", ")", "\n", "v1", "=", "coory2v", "(", "p1", "[", "1", "]", ",", "h", ")", "\n", "u2", "=", "coorx2u", "(", "p2", "[", "0", "]", ",", "w", ")", "\n", "v2", "=", "coory2v", "(", "p2", "[", "1", "]", ",", "h", ")", "\n", "\n", "x1", ",", "y1", "=", "uv2xy", "(", "u1", ",", "v1", ",", "z", ")", "\n", "x2", ",", "y2", "=", "uv2xy", "(", "u2", ",", "v2", ",", "z", ")", "\n", "\n", "if", "abs", "(", "p1", "[", "0", "]", "-", "p2", "[", "0", "]", ")", "<", "w", "/", "2", ":", "\n", "        ", "pstart", "=", "np", ".", "ceil", "(", "min", "(", "p1", "[", "0", "]", ",", "p2", "[", "0", "]", ")", ")", "\n", "pend", "=", "np", ".", "floor", "(", "max", "(", "p1", "[", "0", "]", ",", "p2", "[", "0", "]", ")", ")", "\n", "", "else", ":", "\n", "        ", "pstart", "=", "np", ".", "ceil", "(", "max", "(", "p1", "[", "0", "]", ",", "p2", "[", "0", "]", ")", ")", "\n", "pend", "=", "np", ".", "floor", "(", "min", "(", "p1", "[", "0", "]", ",", "p2", "[", "0", "]", ")", "+", "w", ")", "\n", "", "coorxs", "=", "(", "np", ".", "arange", "(", "pstart", ",", "pend", "+", "1", ")", "%", "w", ")", ".", "astype", "(", "np", ".", "float64", ")", "\n", "vx", "=", "x2", "-", "x1", "\n", "vy", "=", "y2", "-", "y1", "\n", "us", "=", "coorx2u", "(", "coorxs", ",", "w", ")", "\n", "ps", "=", "(", "np", ".", "tan", "(", "us", ")", "*", "x1", "-", "y1", ")", "/", "(", "vy", "-", "np", ".", "tan", "(", "us", ")", "*", "vx", ")", "\n", "cs", "=", "np", ".", "sqrt", "(", "(", "x1", "+", "ps", "*", "vx", ")", "**", "2", "+", "(", "y1", "+", "ps", "*", "vy", ")", "**", "2", ")", "\n", "vs", "=", "np", ".", "arctan2", "(", "z", ",", "cs", ")", "\n", "coorys", "=", "v2coory", "(", "vs", ")", "\n", "\n", "return", "np", ".", "stack", "(", "[", "coorxs", ",", "coorys", "]", ",", "axis", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.data_generator_matterport.ShapeNetDataset.__init__": [[52, 67], ["print", "open", "f.readline().strip", "data_generator_matterport.ShapeNetDataset.namelist.append", "f.readline"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "file_list", ",", "root_dir", ",", "train_type", ",", "transform", "=", "None", ")", ":", "\n", "        ", "print", "(", "root_dir", ")", "\n", "self", ".", "namelist", "=", "[", "]", "\n", "with", "open", "(", "file_list", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "while", "(", "True", ")", ":", "\n", "                ", "line", "=", "f", ".", "readline", "(", ")", ".", "strip", "(", ")", "\n", "if", "not", "line", ":", "\n", "                    ", "break", "\n", "", "self", ".", "namelist", ".", "append", "(", "line", ")", "\n", "", "", "self", ".", "root_dir", "=", "root_dir", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "train_type", "=", "train_type", "\n", "self", ".", "max_stretch", "=", "2.0", "\n", "self", ".", "im_w", "=", "1024", "\n", "self", ".", "im_h", "=", "512", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.data_generator_matterport.ShapeNetDataset.__len__": [[68, 70], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "namelist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.data_generator_matterport.ShapeNetDataset.__getitem__": [[71, 210], ["data_generator_matterport.ShapeNetDataset.namelist[].split", "os.path.join", "cv2.imread", "cv2.imread", "numpy.loadtxt", "numpy.zeros", "numpy.zeros_like", "range", "numpy.zeros", "numpy.loadtxt.copy", "range", "range", "numpy.zeros", "numpy.loadtxt.copy", "numpy.concatenate", "range", "range", "numpy.stack", "numpy.zeros", "range", "numpy.expand_dims", "numpy.clip", "numpy.clip", "numpy.clip", "numpy.clip", "numpy.concatenate", "os.path.join", "numpy.fliplr().copy.astype", "os.path.join", "numpy.fliplr().copy.astype", "os.path.join", "data_generator_matterport.cor2xybound", "numpy.random.uniform", "numpy.random.uniform", "panostretch.pano_stretch", "random.seed", "int", "numpy.concatenate", "numpy.concatenate", "pano.draw_boundary_from_cor_id", "scipy.ndimage.gaussian_filter", "scipy.ndimage.gaussian_filter", "numpy.maximum", "pano.draw_boundary_from_cor_id", "scipy.ndimage.gaussian_filter", "scipy.ndimage.gaussian_filter", "numpy.maximum", "pano.draw_boundary_from_cor_id", "scipy.ndimage.gaussian_filter", "scipy.ndimage.gaussian_filter", "numpy.maximum", "numpy.zeros", "int", "int", "scipy.ndimage.gaussian_filter", "scipy.ndimage.gaussian_filter", "numpy.maximum", "random.seed", "skimage.exposure.adjust_gamma", "random.seed", "skimage.exposure.rescale_intensity", "random.seed", "random.seed", "random.seed", "numpy.random.randint", "max", "min", "numpy.random.randint", "max", "min", "numpy.floor", "scipy.ndimage.gaussian_filter.astype", "scipy.ndimage.gaussian_filter.astype", "numpy.max", "panoEdgeC[].astype", "numpy.max", "numpy.expand_dims", "panoEdgeC[].astype", "numpy.max", "numpy.round", "numpy.round", "numpy.max", "numpy.random.random", "random.uniform", "numpy.fliplr().copy", "numpy.fliplr().copy", "numpy.fliplr().copy", "numpy.fliplr().copy", "min", "max", "min", "max", "numpy.random.random", "numpy.random.random", "numpy.random.random", "numpy.random.random", "numpy.random.random", "numpy.fliplr", "numpy.fliplr", "numpy.fliplr", "numpy.fliplr", "int", "int", "numpy.amax", "numpy.amin"], "methods", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.data_generator.cor2xybound", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.pano_stretch", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.draw_boundary_from_cor_id", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.draw_boundary_from_cor_id", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.draw_boundary_from_cor_id"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "file_list_sub", "=", "self", ".", "namelist", "[", "idx", "]", ".", "split", "(", "\" \"", ")", "\n", "pkl_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root_dir", ",", "file_list_sub", "[", "0", "]", ",", "file_list_sub", "[", "1", "]", ")", "\n", "img", "=", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "pkl_path", ",", "'aligned_rgb.png'", ")", ")", "\n", "img", "=", "img", ".", "astype", "(", "'float32'", ")", "/", "255.0", "\n", "mask", "=", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "pkl_path", ",", "'aligned_line.png'", ")", ")", "\n", "mask", "=", "mask", ".", "astype", "(", "'float32'", ")", "/", "255.0", "\n", "cor", "=", "np", ".", "loadtxt", "(", "os", ".", "path", ".", "join", "(", "pkl_path", ",", "'cor.txt'", ")", ")", "\n", "\n", "# data augmentation", "\n", "if", "self", ".", "train_type", "==", "'train'", ":", "\n", "# random streching", "\n", "            ", "xmin", ",", "ymin", ",", "xmax", ",", "ymax", "=", "cor2xybound", "(", "cor", ")", "\n", "kx", "=", "np", ".", "random", ".", "uniform", "(", "1.0", ",", "self", ".", "max_stretch", ")", "\n", "ky", "=", "np", ".", "random", ".", "uniform", "(", "1.0", ",", "self", ".", "max_stretch", ")", "\n", "if", "np", ".", "random", ".", "randint", "(", "2", ")", "==", "0", ":", "\n", "                ", "kx", "=", "max", "(", "1", "/", "kx", ",", "min", "(", "0.5", "/", "xmin", ",", "1.0", ")", ")", "\n", "", "else", ":", "\n", "                ", "kx", "=", "min", "(", "kx", ",", "max", "(", "10.0", "/", "xmax", ",", "1.0", ")", ")", "\n", "", "if", "np", ".", "random", ".", "randint", "(", "2", ")", "==", "0", ":", "\n", "                ", "ky", "=", "max", "(", "1", "/", "ky", ",", "min", "(", "0.5", "/", "ymin", ",", "1.0", ")", ")", "\n", "", "else", ":", "\n", "                ", "ky", "=", "min", "(", "ky", ",", "max", "(", "10.0", "/", "ymax", ",", "1.0", ")", ")", "\n", "", "img", ",", "mask", ",", "cor", "=", "panostretch", ".", "pano_stretch", "(", "img", ",", "mask", ",", "cor", ",", "kx", ",", "ky", ")", "\n", "\n", "# random rotation", "\n", "random", ".", "seed", "(", ")", "\n", "h", "=", "img", ".", "shape", "[", "0", "]", "\n", "w", "=", "img", ".", "shape", "[", "1", "]", "\n", "rot", "=", "int", "(", "np", ".", "floor", "(", "np", ".", "random", ".", "random", "(", ")", "*", "w", ")", ")", "\n", "img", "=", "np", ".", "concatenate", "(", "(", "img", "[", ":", ",", "rot", ":", ",", ":", "]", ",", "img", "[", ":", ",", ":", "rot", ",", ":", "]", ")", ",", "axis", "=", "1", ")", "\n", "mask", "=", "np", ".", "concatenate", "(", "(", "mask", "[", ":", ",", "rot", ":", ",", ":", "]", ",", "mask", "[", ":", ",", ":", "rot", ",", ":", "]", ")", ",", "axis", "=", "1", ")", "\n", "cor", "[", ":", ",", "0", "]", "=", "cor", "[", ":", ",", "0", "]", "-", "rot", "\n", "id", "=", "cor", "[", ":", ",", "0", "]", "<", "0", "\n", "cor", "[", "id", ",", "0", "]", "=", "cor", "[", "id", ",", "0", "]", "+", "1023", "\n", "\n", "# generate line label", "\n", "# wall", "\n", "", "kpmap_w", "=", "np", ".", "zeros", "(", "(", "self", ".", "im_h", ",", "self", ".", "im_w", ")", ")", "\n", "bg", "=", "np", ".", "zeros_like", "(", "img", ")", "\n", "for", "l_id", "in", "range", "(", "0", ",", "cor", ".", "shape", "[", "0", "]", ",", "2", ")", ":", "\n", "            ", "panoEdgeC", "=", "draw_boundary_from_cor_id", "(", "cor", "[", "l_id", ":", "l_id", "+", "2", ",", ":", "]", ",", "bg", ")", "\n", "# add gaussian", "\n", "panoEdgeC", "=", "panoEdgeC", ".", "astype", "(", "'float32'", ")", "/", "255.0", "\n", "panoEdgeC", "=", "gaussian_filter", "(", "panoEdgeC", "[", ":", ",", ":", ",", "1", "]", ",", "sigma", "=", "20", ")", "\n", "panoEdgeC", "=", "panoEdgeC", "/", "np", ".", "max", "(", "panoEdgeC", ")", "\n", "kpmap_w", "=", "np", ".", "maximum", "(", "kpmap_w", ",", "panoEdgeC", ")", "\n", "# ceil", "\n", "", "kpmap_c", "=", "np", ".", "zeros", "(", "(", "self", ".", "im_h", ",", "self", ".", "im_w", ")", ")", "\n", "cor_all", "=", "cor", ".", "copy", "(", ")", "\n", "for", "l_id", "in", "range", "(", "0", ",", "cor", ".", "shape", "[", "0", "]", "-", "2", ",", "2", ")", ":", "\n", "            ", "cor_all", "[", "l_id", "+", "1", ",", ":", "]", "=", "cor_all", "[", "l_id", "+", "2", ",", ":", "]", "\n", "", "cor_all", "[", "cor", ".", "shape", "[", "0", "]", "-", "1", ",", ":", "]", "=", "cor_all", "[", "0", ",", ":", "]", "\n", "for", "l_id", "in", "range", "(", "0", ",", "cor_all", ".", "shape", "[", "0", "]", ",", "2", ")", ":", "\n", "            ", "panoEdgeC", "=", "draw_boundary_from_cor_id", "(", "cor_all", "[", "l_id", ":", "l_id", "+", "2", ",", ":", "]", ",", "bg", ")", "\n", "# add gaussian", "\n", "panoEdgeC", "=", "panoEdgeC", "[", ":", ",", ":", ",", "1", "]", ".", "astype", "(", "'float32'", ")", "/", "255.0", "\n", "panoEdgeC", "[", "int", "(", "np", ".", "amax", "(", "cor_all", "[", "l_id", ":", "l_id", "+", "2", ",", "1", "]", ")", ")", "+", "5", ":", ",", ":", "]", "=", "0", "\n", "panoEdgeC", "=", "gaussian_filter", "(", "panoEdgeC", ",", "sigma", "=", "20", ")", "\n", "panoEdgeC", "=", "panoEdgeC", "/", "np", ".", "max", "(", "panoEdgeC", ")", "\n", "kpmap_c", "=", "np", ".", "maximum", "(", "kpmap_c", ",", "panoEdgeC", ")", "\n", "# floor", "\n", "", "kpmap_f", "=", "np", ".", "zeros", "(", "(", "self", ".", "im_h", ",", "self", ".", "im_w", ")", ")", "\n", "cor_all", "=", "cor", ".", "copy", "(", ")", "\n", "cor_all", "=", "np", ".", "concatenate", "(", "(", "cor_all", "[", "1", ":", ",", ":", "]", ",", "np", ".", "expand_dims", "(", "cor_all", "[", "0", ",", ":", "]", ",", "axis", "=", "0", ")", ")", ",", "axis", "=", "0", ")", "\n", "for", "l_id", "in", "range", "(", "1", ",", "cor", ".", "shape", "[", "0", "]", "-", "2", ",", "2", ")", ":", "\n", "            ", "cor_all", "[", "l_id", ",", ":", "]", "=", "cor_all", "[", "l_id", "+", "1", ",", ":", "]", "\n", "", "cor_all", "[", "cor", ".", "shape", "[", "0", "]", "-", "1", ",", ":", "]", "=", "cor_all", "[", "0", ",", ":", "]", "\n", "for", "l_id", "in", "range", "(", "0", ",", "cor_all", ".", "shape", "[", "0", "]", ",", "2", ")", ":", "\n", "            ", "panoEdgeC", "=", "draw_boundary_from_cor_id", "(", "cor_all", "[", "l_id", ":", "l_id", "+", "2", ",", ":", "]", ",", "bg", ")", "\n", "# add gaussian", "\n", "panoEdgeC", "=", "panoEdgeC", "[", ":", ",", ":", ",", "1", "]", ".", "astype", "(", "'float32'", ")", "/", "255.0", "\n", "panoEdgeC", "[", ":", "int", "(", "np", ".", "amin", "(", "cor_all", "[", "l_id", ":", "l_id", "+", "2", ",", "1", "]", ")", ")", "-", "5", ",", ":", "]", "=", "0", "\n", "panoEdgeC", "=", "gaussian_filter", "(", "panoEdgeC", ",", "sigma", "=", "20", ")", "\n", "panoEdgeC", "=", "panoEdgeC", "/", "np", ".", "max", "(", "panoEdgeC", ")", "\n", "kpmap_f", "=", "np", ".", "maximum", "(", "kpmap_f", ",", "panoEdgeC", ")", "\n", "", "label", "=", "np", ".", "stack", "(", "(", "kpmap_w", ",", "kpmap_c", ",", "kpmap_f", ")", ",", "axis", "=", "-", "1", ")", "\n", "\n", "# generate corner label", "\n", "label2", "=", "np", ".", "zeros", "(", "(", "self", ".", "im_h", ",", "self", ".", "im_w", ")", ")", "\n", "for", "l_id", "in", "range", "(", "cor", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "panoEdgeC", "=", "np", ".", "zeros", "(", "(", "self", ".", "im_h", ",", "self", ".", "im_w", ")", ")", "\n", "hh", "=", "int", "(", "np", ".", "round", "(", "cor", "[", "l_id", ",", "1", "]", ")", ")", "\n", "ww", "=", "int", "(", "np", ".", "round", "(", "cor", "[", "l_id", ",", "0", "]", ")", ")", "\n", "panoEdgeC", "[", "hh", "-", "1", ":", "hh", "+", "2", ",", "ww", "]", "=", "1.0", "\n", "panoEdgeC", "[", "hh", ",", "ww", "-", "1", ":", "ww", "+", "2", "]", "=", "1.0", "\n", "# add gaussian", "\n", "panoEdgeC", "=", "gaussian_filter", "(", "panoEdgeC", ",", "sigma", "=", "20", ")", "\n", "panoEdgeC", "=", "panoEdgeC", "/", "np", ".", "max", "(", "panoEdgeC", ")", "\n", "label2", "=", "np", ".", "maximum", "(", "label2", ",", "panoEdgeC", ")", "\n", "", "label2", "=", "np", ".", "expand_dims", "(", "label2", ",", "axis", "=", "2", ")", "\n", "\n", "if", "self", ".", "train_type", "==", "'train'", ":", "\n", "# gamma", "\n", "            ", "random", ".", "seed", "(", ")", "\n", "g_prob", "=", "np", ".", "random", ".", "random", "(", ")", "*", "1", "+", "0.5", "\n", "img", "=", "exposure", ".", "adjust_gamma", "(", "img", ",", "g_prob", ")", "\n", "# intensity", "\n", "random", ".", "seed", "(", ")", "\n", "g_prob", "=", "np", ".", "random", ".", "random", "(", ")", "*", "127", "\n", "img", "=", "exposure", ".", "rescale_intensity", "(", "img", "*", "255.0", ",", "in_range", "=", "(", "g_prob", ",", "255", ")", ")", "\n", "# color channel", "\n", "random", ".", "seed", "(", ")", "\n", "g_prob", "=", "np", ".", "random", ".", "random", "(", ")", "*", "0.4", "+", "0.8", "\n", "img", "[", ":", ",", ":", ",", "0", "]", "=", "img", "[", ":", ",", ":", ",", "0", "]", "*", "g_prob", "\n", "random", ".", "seed", "(", ")", "\n", "g_prob", "=", "np", ".", "random", ".", "random", "(", ")", "*", "0.4", "+", "0.8", "\n", "img", "[", ":", ",", ":", ",", "1", "]", "=", "img", "[", ":", ",", ":", ",", "1", "]", "*", "g_prob", "\n", "random", ".", "seed", "(", ")", "\n", "g_prob", "=", "np", ".", "random", ".", "random", "(", ")", "*", "0.4", "+", "0.8", "\n", "img", "[", ":", ",", ":", ",", "2", "]", "=", "img", "[", ":", ",", ":", ",", "2", "]", "*", "g_prob", "\n", "\n", "# random flip", "\n", "if", "random", ".", "uniform", "(", "0", ",", "1", ")", ">", "0.5", ":", "\n", "                ", "img", "=", "np", ".", "fliplr", "(", "img", ")", ".", "copy", "(", ")", "\n", "mask", "=", "np", ".", "fliplr", "(", "mask", ")", ".", "copy", "(", ")", "\n", "label", "=", "np", ".", "fliplr", "(", "label", ")", ".", "copy", "(", ")", "\n", "label2", "=", "np", ".", "fliplr", "(", "label2", ")", ".", "copy", "(", ")", "\n", "\n", "# reshape", "\n", "", "", "np", ".", "clip", "(", "img", ",", "0.0", ",", "1.0", ",", "out", "=", "img", ")", "\n", "np", ".", "clip", "(", "label", ",", "0.0", ",", "1.0", ",", "out", "=", "label", ")", "\n", "np", ".", "clip", "(", "label2", ",", "0.0", ",", "1.0", ",", "out", "=", "label2", ")", "\n", "np", ".", "clip", "(", "mask", ",", "0.0", ",", "1.0", ",", "out", "=", "mask", ")", "\n", "\n", "img", "=", "np", ".", "concatenate", "(", "(", "img", ",", "mask", ")", ",", "axis", "=", "2", ")", "\n", "\n", "# permute dim", "\n", "if", "self", ".", "transform", ":", "\n", "            ", "if", "self", ".", "train_type", "==", "'train'", ":", "\n", "                ", "img", "=", "data_transforms", "[", "'train'", "]", "(", "img", ")", ".", "float", "(", ")", "\n", "label", "=", "data_transforms", "[", "'train'", "]", "(", "label", ")", ".", "float", "(", ")", "\n", "label2", "=", "data_transforms", "[", "'train'", "]", "(", "label2", ")", ".", "float", "(", ")", "\n", "", "else", ":", "\n", "                ", "img", "=", "data_transforms", "[", "'val'", "]", "(", "img", ")", ".", "float", "(", ")", "\n", "label", "=", "data_transforms", "[", "'val'", "]", "(", "label", ")", ".", "float", "(", ")", "\n", "label2", "=", "data_transforms", "[", "'val'", "]", "(", "label2", ")", ".", "float", "(", ")", "\n", "\n", "", "", "return", "img", ",", "label", ",", "label2", "\n", "", "", ""]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.data_generator_matterport.cor2xybound": [[29, 49], ["panostretch.coorx2u", "panostretch.coory2v", "panostretch.coory2v", "panostretch.uv2xy", "numpy.sqrt", "numpy.tan", "x.min", "x.max", "y.min", "y.max", "abs", "abs", "abs", "abs", "abs", "min", "min", "max", "max", "zB.mean"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.coorx2u", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.coory2v", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.coory2v", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.uv2xy"], ["def", "cor2xybound", "(", "cor", ")", ":", "\n", "    ", "''' Helper function to clip max/min stretch factor '''", "\n", "corU", "=", "cor", "[", "0", ":", ":", "2", "]", "\n", "corB", "=", "cor", "[", "1", ":", ":", "2", "]", "\n", "zU", "=", "-", "50", "\n", "u", "=", "panostretch", ".", "coorx2u", "(", "corU", "[", ":", ",", "0", "]", ")", "\n", "vU", "=", "panostretch", ".", "coory2v", "(", "corU", "[", ":", ",", "1", "]", ")", "\n", "vB", "=", "panostretch", ".", "coory2v", "(", "corB", "[", ":", ",", "1", "]", ")", "\n", "\n", "x", ",", "y", "=", "panostretch", ".", "uv2xy", "(", "u", ",", "vU", ",", "z", "=", "zU", ")", "\n", "c", "=", "np", ".", "sqrt", "(", "x", "**", "2", "+", "y", "**", "2", ")", "\n", "zB", "=", "c", "*", "np", ".", "tan", "(", "vB", ")", "\n", "xmin", ",", "xmax", "=", "x", ".", "min", "(", ")", ",", "x", ".", "max", "(", ")", "\n", "ymin", ",", "ymax", "=", "y", ".", "min", "(", ")", ",", "y", ".", "max", "(", ")", "\n", "\n", "S", "=", "3", "/", "abs", "(", "zB", ".", "mean", "(", ")", "-", "zU", ")", "\n", "dx", "=", "[", "abs", "(", "xmin", "*", "S", ")", ",", "abs", "(", "xmax", "*", "S", ")", "]", "\n", "dy", "=", "[", "abs", "(", "ymin", "*", "S", ")", ",", "abs", "(", "ymax", "*", "S", ")", "]", "\n", "\n", "return", "min", "(", "dx", ")", ",", "min", "(", "dy", ")", ",", "max", "(", "dx", ")", ",", "max", "(", "dy", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.train_matterport.train_model": [[63, 157], ["time.time", "range", "print", "print", "model.load_state_dict", "print", "print", "print", "time.time", "print", "model.train", "model.eval", "inputs.to.to", "labels.to.to", "labels2.to.to", "optimizer.zero_grad", "val_acc_history.append", "copy.deepcopy", "torch.save", "torch.save", "torch.save", "print", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "model", "loss.item", "model.state_dict", "criterion", "criterion2", "loss.backward", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "optimizer.step", "model.parameters"], "function", ["None"], ["def", "train_model", "(", "model", ",", "train_generator", ",", "val_generator", ",", "optimizer", ",", "criterion", ",", "criterion2", ",", "steps", "=", "100", ",", "num_epochs", "=", "25", ")", ":", "\n", "    ", "since", "=", "time", ".", "time", "(", ")", "\n", "\n", "val_acc_history", "=", "[", "]", "\n", "\n", "best_acc", "=", "np", ".", "Inf", "\n", "\n", "for", "epoch", "in", "range", "(", "num_epochs", ")", ":", "\n", "        ", "print", "(", "'Epoch {}/{}'", ".", "format", "(", "epoch", ",", "num_epochs", "-", "1", ")", ")", "\n", "print", "(", "'-'", "*", "10", ")", "\n", "\n", "# Each epoch has a training and validation phase", "\n", "for", "phase", "in", "[", "'train'", ",", "'val'", "]", ":", "\n", "            ", "if", "phase", "==", "'train'", ":", "\n", "                ", "model", ".", "train", "(", ")", "# Set model to training mode", "\n", "dataloaders", "=", "train_generator", "\n", "", "else", ":", "\n", "                ", "model", ".", "eval", "(", ")", "# Set model to evaluate mode", "\n", "dataloaders", "=", "val_generator", "\n", "\n", "", "loss_sum", "=", "0.0", "\n", "step", "=", "0", "\n", "\n", "# Iterate over data.", "\n", "for", "input", "in", "dataloaders", ":", "\n", "\n", "                ", "inputs", "=", "input", "[", "0", "]", "\n", "labels", "=", "input", "[", "1", "]", "\n", "labels2", "=", "input", "[", "2", "]", "\n", "\n", "# gpu mode", "\n", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "labels", "=", "labels", ".", "to", "(", "device", ")", "\n", "labels2", "=", "labels2", ".", "to", "(", "device", ")", "\n", "\n", "# zero the parameter gradients", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "# forward", "\n", "# track history if only in train", "\n", "with", "torch", ".", "set_grad_enabled", "(", "phase", "==", "'train'", ")", ":", "\n", "# Get model outputs and calculate loss", "\n", "                    ", "outputs", ",", "outputs2", "=", "model", "(", "inputs", ")", "\n", "\n", "# loss", "\n", "mask", "=", "(", "labels", ">", "0", ")", ".", "float", "(", ")", "\n", "mask", "=", "mask", "+", "0.2", "*", "(", "1.0", "-", "mask", ")", "\n", "mask2", "=", "(", "labels2", ">", "0", ")", ".", "float", "(", ")", "\n", "mask2", "=", "mask2", "+", "0.2", "*", "(", "1.0", "-", "mask2", ")", "\n", "\n", "loss", "=", "criterion", "(", "outputs", "*", "mask", ",", "labels", "*", "mask", ")", "+", "criterion2", "(", "outputs2", "*", "mask2", ",", "labels2", "*", "mask2", ")", "\n", "# backward + optimize only if in training phase", "\n", "if", "phase", "==", "'train'", ":", "\n", "                        ", "loss", ".", "backward", "(", ")", "\n", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "model", ".", "parameters", "(", ")", ",", "5.0", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# clear cache", "\n", "#torch.cuda.empty_cache()", "\n", "", "", "del", "inputs", ",", "outputs", ",", "outputs2", ",", "mask", ",", "mask2", ",", "labels", ",", "labels2", "\n", "#del inputs, outputs, mask, labels", "\n", "\n", "# statistics", "\n", "loss_sum", "+=", "loss", ".", "item", "(", ")", "/", "steps", "#*inputs.size(0)/steps", "\n", "\n", "# clear", "\n", "del", "loss", "\n", "\n", "# Break after 'steps' steps", "\n", "if", "step", "==", "steps", "-", "1", ":", "\n", "                    ", "break", "\n", "", "step", "+=", "1", "\n", "\n", "", "print", "(", "'{} Loss: {:.6f}'", ".", "format", "(", "phase", ",", "loss_sum", ")", ")", "\n", "\n", "# deep copy the model", "\n", "if", "phase", "==", "'val'", "and", "loss_sum", "<", "best_acc", ":", "\n", "                ", "val_acc_history", ".", "append", "(", "loss_sum", ")", "\n", "best_acc", "=", "loss_sum", "\n", "best_model_wts", "=", "copy", ".", "deepcopy", "(", "model", ".", "state_dict", "(", ")", ")", "\n", "# save model", "\n", "torch", ".", "save", "(", "best_model_wts", ",", "model_path", ")", "\n", "print", "(", "\"Model saved ...\"", ")", "\n", "del", "best_model_wts", "\n", "\n", "", "", "print", "(", ")", "\n", "\n", "", "time_elapsed", "=", "time", ".", "time", "(", ")", "-", "since", "\n", "print", "(", "'Training complete in {:.0f}m {:.0f}s'", ".", "format", "(", "time_elapsed", "//", "60", ",", "time_elapsed", "%", "60", ")", ")", "\n", "print", "(", "'Best val Acc: {:6f}'", ".", "format", "(", "best_acc", ")", ")", "\n", "\n", "# load best model weights", "\n", "model", ".", "load_state_dict", "(", "best_model_wts", ")", "\n", "return", "model", ",", "val_acc_history", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.fuv2img": [[10, 20], ["numpy.meshgrid", "scipy.ndimage.map_coordinates", "floor_plane.reshape.reshape", "range", "range", "floor_plane_coridx.reshape", "numpy.arctan2"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.map_coordinates"], ["def", "fuv2img", "(", "fuv", ",", "coorW", "=", "1024", ",", "floorW", "=", "1024", ",", "floorH", "=", "512", ")", ":", "\n", "    ", "'''\n    Project 1d signal in uv space to 2d floor plane image\n    '''", "\n", "floor_plane_x", ",", "floor_plane_y", "=", "np", ".", "meshgrid", "(", "range", "(", "floorW", ")", ",", "range", "(", "floorH", ")", ")", "\n", "floor_plane_x", ",", "floor_plane_y", "=", "-", "(", "floor_plane_y", "-", "floorH", "/", "2", ")", ",", "floor_plane_x", "-", "floorW", "/", "2", "\n", "floor_plane_coridx", "=", "(", "np", ".", "arctan2", "(", "floor_plane_y", ",", "floor_plane_x", ")", "/", "(", "2", "*", "PI", ")", "+", "0.5", ")", "*", "coorW", "-", "0.5", "\n", "floor_plane", "=", "map_coordinates", "(", "fuv", ",", "floor_plane_coridx", ".", "reshape", "(", "1", ",", "-", "1", ")", ",", "order", "=", "1", ",", "mode", "=", "'wrap'", ")", "\n", "floor_plane", "=", "floor_plane", ".", "reshape", "(", "floorH", ",", "floorW", ")", "\n", "return", "floor_plane", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.np_coorx2u": [[22, 24], ["None"], "function", ["None"], ["", "def", "np_coorx2u", "(", "coorx", ",", "coorW", "=", "1024", ")", ":", "\n", "    ", "return", "(", "(", "coorx", "+", "0.5", ")", "/", "coorW", "-", "0.5", ")", "*", "2", "*", "PI", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.np_coory2v": [[26, 28], ["None"], "function", ["None"], ["", "def", "np_coory2v", "(", "coory", ",", "coorH", "=", "512", ")", ":", "\n", "    ", "return", "-", "(", "(", "coory", "+", "0.5", ")", "/", "coorH", "-", "0.5", ")", "*", "PI", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.np_coor2xy": [[30, 41], ["numpy.array", "post_proc2.np_coorx2u", "post_proc2.np_coory2v", "numpy.hstack", "numpy.tan", "numpy.sin", "numpy.cos"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.np_coorx2u", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.np_coory2v"], ["", "def", "np_coor2xy", "(", "coor", ",", "z", "=", "50", ",", "coorW", "=", "1024", ",", "coorH", "=", "512", ",", "floorW", "=", "1024", ",", "floorH", "=", "512", ")", ":", "\n", "    ", "'''\n    coor: N x 2, index of array in (col, row) format\n    '''", "\n", "coor", "=", "np", ".", "array", "(", "coor", ")", "\n", "u", "=", "np_coorx2u", "(", "coor", "[", ":", ",", "0", "]", ",", "coorW", ")", "\n", "v", "=", "np_coory2v", "(", "coor", "[", ":", ",", "1", "]", ",", "coorH", ")", "\n", "c", "=", "z", "/", "np", ".", "tan", "(", "v", ")", "\n", "x", "=", "c", "*", "np", ".", "sin", "(", "u", ")", "+", "floorW", "/", "2", "-", "0.5", "\n", "y", "=", "-", "c", "*", "np", ".", "cos", "(", "u", ")", "+", "floorH", "/", "2", "-", "0.5", "\n", "return", "np", ".", "hstack", "(", "[", "x", "[", ":", ",", "None", "]", ",", "y", "[", ":", ",", "None", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.np_x_u_solve_y": [[43, 46], ["numpy.sin", "numpy.cos"], "function", ["None"], ["", "def", "np_x_u_solve_y", "(", "x", ",", "u", ",", "floorW", "=", "1024", ",", "floorH", "=", "512", ")", ":", "\n", "    ", "c", "=", "(", "x", "-", "floorW", "/", "2", "+", "0.5", ")", "/", "np", ".", "sin", "(", "u", ")", "\n", "return", "-", "c", "*", "np", ".", "cos", "(", "u", ")", "+", "floorH", "/", "2", "-", "0.5", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.np_y_u_solve_x": [[48, 51], ["numpy.cos", "numpy.sin"], "function", ["None"], ["", "def", "np_y_u_solve_x", "(", "y", ",", "u", ",", "floorW", "=", "1024", ",", "floorH", "=", "512", ")", ":", "\n", "    ", "c", "=", "-", "(", "y", "-", "floorH", "/", "2", "+", "0.5", ")", "/", "np", ".", "cos", "(", "u", ")", "\n", "return", "c", "*", "np", ".", "sin", "(", "u", ")", "+", "floorW", "/", "2", "-", "0.5", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.np_xy2coor": [[53, 67], ["numpy.arctan2", "numpy.arctan", "numpy.hstack", "numpy.sqrt"], "function", ["None"], ["", "def", "np_xy2coor", "(", "xy", ",", "z", "=", "50", ",", "coorW", "=", "1024", ",", "coorH", "=", "512", ",", "floorW", "=", "1024", ",", "floorH", "=", "512", ")", ":", "\n", "    ", "'''\n    xy: N x 2\n    '''", "\n", "x", "=", "xy", "[", ":", ",", "0", "]", "-", "floorW", "/", "2", "+", "0.5", "\n", "y", "=", "xy", "[", ":", ",", "1", "]", "-", "floorH", "/", "2", "+", "0.5", "\n", "\n", "u", "=", "np", ".", "arctan2", "(", "x", ",", "-", "y", ")", "\n", "v", "=", "np", ".", "arctan", "(", "z", "/", "np", ".", "sqrt", "(", "x", "**", "2", "+", "y", "**", "2", ")", ")", "\n", "\n", "coorx", "=", "(", "u", "/", "(", "2", "*", "PI", ")", "+", "0.5", ")", "*", "coorW", "-", "0.5", "\n", "coory", "=", "(", "-", "v", "/", "PI", "+", "0.5", ")", "*", "coorH", "-", "0.5", "\n", "\n", "return", "np", ".", "hstack", "(", "[", "coorx", "[", ":", ",", "None", "]", ",", "coory", "[", ":", ",", "None", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.mean_percentile": [[69, 73], ["numpy.percentile", "numpy.percentile", "vec[].mean"], "function", ["None"], ["", "def", "mean_percentile", "(", "vec", ",", "p1", "=", "25", ",", "p2", "=", "75", ")", ":", "\n", "    ", "vmin", "=", "np", ".", "percentile", "(", "vec", ",", "p1", ")", "\n", "vmax", "=", "np", ".", "percentile", "(", "vec", ",", "p2", ")", "\n", "return", "vec", "[", "(", "vmin", "<=", "vec", ")", "&", "(", "vec", "<=", "vmax", ")", "]", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.vote": [[75, 99], ["numpy.sort", "scipy.spatial.distance.squareform", "numpy.abs().mean", "numpy.arange", "numpy.median", "score.argmax", "vec[].mean", "len", "scipy.spatial.distance.pdist", "len", "len", "len", "len", "numpy.abs", "len"], "function", ["None"], ["", "def", "vote", "(", "vec", ",", "tol", ")", ":", "\n", "    ", "vec", "=", "np", ".", "sort", "(", "vec", ")", "\n", "n", "=", "np", ".", "arange", "(", "len", "(", "vec", ")", ")", "[", ":", ":", "-", "1", "]", "\n", "n", "=", "n", "[", ":", ",", "None", "]", "-", "n", "[", "None", ",", ":", "]", "+", "1.0", "\n", "l", "=", "squareform", "(", "pdist", "(", "vec", "[", ":", ",", "None", "]", ",", "'minkowski'", ",", "p", "=", "1", ")", "+", "1e-9", ")", "\n", "\n", "invalid", "=", "(", "n", "<", "len", "(", "vec", ")", "*", "0.4", ")", "|", "(", "l", ">", "tol", ")", "\n", "if", "(", "~", "invalid", ")", ".", "sum", "(", ")", "==", "0", "or", "len", "(", "vec", ")", "<", "tol", ":", "\n", "        ", "best_fit", "=", "np", ".", "median", "(", "vec", ")", "\n", "p_score", "=", "0", "\n", "", "else", ":", "\n", "        ", "l", "[", "invalid", "]", "=", "1e5", "\n", "n", "[", "invalid", "]", "=", "-", "1", "\n", "score", "=", "n", "\n", "max_idx", "=", "score", ".", "argmax", "(", ")", "\n", "max_row", "=", "max_idx", "//", "len", "(", "vec", ")", "\n", "max_col", "=", "max_idx", "%", "len", "(", "vec", ")", "\n", "assert", "max_col", ">", "max_row", "\n", "best_fit", "=", "vec", "[", "max_row", ":", "max_col", "+", "1", "]", ".", "mean", "(", ")", "\n", "p_score", "=", "(", "max_col", "-", "max_row", "+", "1", ")", "/", "len", "(", "vec", ")", "\n", "\n", "", "l1_score", "=", "np", ".", "abs", "(", "vec", "-", "best_fit", ")", ".", "mean", "(", ")", "\n", "\n", "return", "best_fit", ",", "p_score", ",", "l1_score", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.get_z1": [[101, 107], ["post_proc2.np_coory2v", "post_proc2.np_coory2v", "numpy.tan", "numpy.tan"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.np_coory2v", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.np_coory2v"], ["", "def", "get_z1", "(", "coory0", ",", "coory1", ",", "z0", "=", "50", ",", "coorH", "=", "512", ")", ":", "\n", "    ", "v0", "=", "np_coory2v", "(", "coory0", ",", "coorH", ")", "\n", "v1", "=", "np_coory2v", "(", "coory1", ",", "coorH", ")", "\n", "c0", "=", "z0", "/", "np", ".", "tan", "(", "v0", ")", "\n", "z1", "=", "c0", "*", "np", ".", "tan", "(", "v1", ")", "\n", "return", "z1", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.np_refine_by_fix_z": [[109, 124], ["post_proc2.np_coory2v", "post_proc2.np_coory2v", "post_proc2.mean_percentile", "numpy.arctan2", "numpy.tan", "numpy.tan"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.np_coory2v", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.np_coory2v", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.mean_percentile"], ["", "def", "np_refine_by_fix_z", "(", "coory0", ",", "coory1", ",", "z0", "=", "50", ",", "coorH", "=", "512", ")", ":", "\n", "    ", "'''\n    Refine coory1 by coory0\n    coory0 are assumed on given plane z\n    '''", "\n", "v0", "=", "np_coory2v", "(", "coory0", ",", "coorH", ")", "\n", "v1", "=", "np_coory2v", "(", "coory1", ",", "coorH", ")", "\n", "\n", "c0", "=", "z0", "/", "np", ".", "tan", "(", "v0", ")", "\n", "z1", "=", "c0", "*", "np", ".", "tan", "(", "v1", ")", "\n", "z1_mean", "=", "mean_percentile", "(", "z1", ")", "\n", "v1_refine", "=", "np", ".", "arctan2", "(", "z1_mean", ",", "c0", ")", "\n", "coory1_refine", "=", "(", "-", "v1_refine", "/", "PI", "+", "0.5", ")", "*", "coorH", "-", "0.5", "\n", "\n", "return", "coory1_refine", ",", "z1_mean", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.infer_coory": [[126, 132], ["post_proc2.np_coory2v", "numpy.arctan2", "numpy.tan"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.np_coory2v"], ["", "def", "infer_coory", "(", "coory0", ",", "h", ",", "z0", "=", "50", ",", "coorH", "=", "512", ")", ":", "\n", "    ", "v0", "=", "np_coory2v", "(", "coory0", ",", "coorH", ")", "\n", "c0", "=", "z0", "/", "np", ".", "tan", "(", "v0", ")", "\n", "z1", "=", "z0", "+", "h", "\n", "v1", "=", "np", ".", "arctan2", "(", "z1", ",", "c0", ")", "\n", "return", "(", "-", "v1", "/", "PI", "+", "0.5", ")", "*", "coorH", "-", "0.5", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.get_gpid": [[134, 140], ["numpy.zeros", "numpy.cumsum().astype", "numpy.round().astype", "numpy.cumsum", "numpy.round"], "function", ["None"], ["", "def", "get_gpid", "(", "coorx", ",", "coorW", ")", ":", "\n", "    ", "gpid", "=", "np", ".", "zeros", "(", "coorW", ")", "\n", "gpid", "[", "np", ".", "round", "(", "coorx", ")", ".", "astype", "(", "int", ")", "]", "=", "1", "\n", "gpid", "=", "np", ".", "cumsum", "(", "gpid", ")", ".", "astype", "(", "int", ")", "\n", "gpid", "[", "gpid", "==", "gpid", "[", "-", "1", "]", "]", "=", "0", "\n", "return", "gpid", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.get_gpid_idx": [[142, 148], ["numpy.where", "numpy.roll", "len", "numpy.where", "numpy.arange", "len"], "function", ["None"], ["", "def", "get_gpid_idx", "(", "gpid", ",", "j", ")", ":", "\n", "    ", "idx", "=", "np", ".", "where", "(", "gpid", "==", "j", ")", "[", "0", "]", "\n", "if", "idx", "[", "0", "]", "==", "0", "and", "idx", "[", "-", "1", "]", "!=", "len", "(", "idx", ")", "-", "1", ":", "\n", "        ", "_shift", "=", "-", "np", ".", "where", "(", "idx", "!=", "np", ".", "arange", "(", "len", "(", "idx", ")", ")", ")", "[", "0", "]", "[", "0", "]", "\n", "idx", "=", "np", ".", "roll", "(", "idx", ",", "_shift", ")", "\n", "", "return", "idx", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.gpid_two_split": [[150, 165], ["numpy.cumsum", "numpy.cumsum", "xy[].mean", "xy[].mean", "numpy.arange", "score.argmax", "len"], "function", ["None"], ["", "def", "gpid_two_split", "(", "xy", ",", "tpid_a", ",", "tpid_b", ")", ":", "\n", "    ", "m", "=", "np", ".", "arange", "(", "len", "(", "xy", ")", ")", "+", "1", "\n", "cum_a", "=", "np", ".", "cumsum", "(", "xy", "[", ":", ",", "tpid_a", "]", ")", "\n", "cum_b", "=", "np", ".", "cumsum", "(", "xy", "[", ":", ":", "-", "1", ",", "tpid_b", "]", ")", "\n", "l1_a", "=", "cum_a", "/", "m", "-", "cum_a", "/", "(", "m", "*", "m", ")", "\n", "l1_b", "=", "cum_b", "/", "m", "-", "cum_b", "/", "(", "m", "*", "m", ")", "\n", "l1_b", "=", "l1_b", "[", ":", ":", "-", "1", "]", "\n", "\n", "score", "=", "l1_a", "[", ":", "-", "1", "]", "+", "l1_b", "[", "1", ":", "]", "\n", "best_split", "=", "score", ".", "argmax", "(", ")", "+", "1", "\n", "\n", "va", "=", "xy", "[", ":", "best_split", ",", "tpid_a", "]", ".", "mean", "(", ")", "\n", "vb", "=", "xy", "[", "best_split", ":", ",", "tpid_b", "]", ".", "mean", "(", ")", "\n", "\n", "return", "va", ",", "vb", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2._get_rot_rad": [[167, 176], ["numpy.arctan2"], "function", ["None"], ["", "def", "_get_rot_rad", "(", "px", ",", "py", ")", ":", "\n", "    ", "if", "px", "<", "0", ":", "\n", "        ", "px", ",", "py", "=", "-", "px", ",", "-", "py", "\n", "", "rad", "=", "np", ".", "arctan2", "(", "py", ",", "px", ")", "*", "180", "/", "np", ".", "pi", "\n", "if", "rad", ">", "45", ":", "\n", "        ", "return", "90", "-", "rad", "\n", "", "if", "rad", "<", "-", "45", ":", "\n", "        ", "return", "-", "90", "-", "rad", "\n", "", "return", "-", "rad", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.get_rot_rad": [[178, 203], ["post_proc2.get_gpid", "numpy.hstack", "post_proc2.np_coor2xy", "range", "numpy.sort", "numpy.mean", "range", "int", "len", "sklearn.decomposition.PCA", "sklearn.decomposition.PCA.fit", "np.sort.append", "len", "round", "post_proc2._get_rot_rad", "numpy.arange", "rot_rad_suggestions[].mean"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.get_gpid", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.np_coor2xy", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2._get_rot_rad"], ["", "def", "get_rot_rad", "(", "init_coorx", ",", "coory", ",", "z", "=", "50", ",", "coorW", "=", "1024", ",", "coorH", "=", "512", ",", "floorW", "=", "1024", ",", "floorH", "=", "512", ",", "tol", "=", "5", ")", ":", "\n", "    ", "gpid", "=", "get_gpid", "(", "init_coorx", ",", "coorW", ")", "\n", "coor", "=", "np", ".", "hstack", "(", "[", "np", ".", "arange", "(", "coorW", ")", "[", ":", ",", "None", "]", ",", "coory", "[", ":", ",", "None", "]", "]", ")", "\n", "xy", "=", "np_coor2xy", "(", "coor", ",", "z", ",", "coorW", ",", "coorH", ",", "floorW", ",", "floorH", ")", "\n", "xy_cor", "=", "[", "]", "\n", "\n", "rot_rad_suggestions", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "len", "(", "init_coorx", ")", ")", ":", "\n", "        ", "pca", "=", "PCA", "(", "n_components", "=", "1", ")", "\n", "pca", ".", "fit", "(", "xy", "[", "gpid", "==", "j", "]", ")", "\n", "rot_rad_suggestions", ".", "append", "(", "_get_rot_rad", "(", "*", "pca", ".", "components_", "[", "0", "]", ")", ")", "\n", "", "rot_rad_suggestions", "=", "np", ".", "sort", "(", "rot_rad_suggestions", "+", "[", "1e9", "]", ")", "\n", "\n", "rot_rad", "=", "np", ".", "mean", "(", "rot_rad_suggestions", "[", ":", "-", "1", "]", ")", "\n", "best_rot_rad_sz", "=", "-", "1", "\n", "last_j", "=", "0", "\n", "for", "j", "in", "range", "(", "1", ",", "len", "(", "rot_rad_suggestions", ")", ")", ":", "\n", "        ", "if", "rot_rad_suggestions", "[", "j", "]", "-", "rot_rad_suggestions", "[", "j", "-", "1", "]", ">", "tol", ":", "\n", "            ", "last_j", "=", "j", "\n", "", "elif", "j", "-", "last_j", ">", "best_rot_rad_sz", ":", "\n", "            ", "rot_rad", "=", "rot_rad_suggestions", "[", "last_j", ":", "j", "+", "1", "]", ".", "mean", "(", ")", "\n", "best_rot_rad_sz", "=", "j", "-", "last_j", "\n", "\n", "", "", "dx", "=", "int", "(", "round", "(", "rot_rad", "*", "1024", "/", "360", ")", ")", "\n", "return", "dx", ",", "rot_rad", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.gen_ww_cuboid": [[205, 239], ["range", "range", "len", "post_proc2.vote", "post_proc2.vote", "numpy.unique", "xy_cor.append", "xy_cor.append"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.vote", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.vote"], ["", "def", "gen_ww_cuboid", "(", "xy", ",", "gpid", ",", "tol", ")", ":", "\n", "    ", "xy_cor", "=", "[", "]", "\n", "assert", "len", "(", "np", ".", "unique", "(", "gpid", ")", ")", "==", "4", "\n", "\n", "# For each part seperated by wall-wall peak, voting for a wall", "\n", "for", "j", "in", "range", "(", "4", ")", ":", "\n", "        ", "now_x", "=", "xy", "[", "gpid", "==", "j", ",", "0", "]", "\n", "now_y", "=", "xy", "[", "gpid", "==", "j", ",", "1", "]", "\n", "new_x", ",", "x_score", ",", "x_l1", "=", "vote", "(", "now_x", ",", "tol", ")", "\n", "new_y", ",", "y_score", ",", "y_l1", "=", "vote", "(", "now_y", ",", "tol", ")", "\n", "if", "(", "x_score", ",", "-", "x_l1", ")", ">", "(", "y_score", ",", "-", "y_l1", ")", ":", "\n", "            ", "xy_cor", ".", "append", "(", "{", "'type'", ":", "0", ",", "'val'", ":", "new_x", ",", "'score'", ":", "x_score", "}", ")", "\n", "", "else", ":", "\n", "            ", "xy_cor", ".", "append", "(", "{", "'type'", ":", "1", ",", "'val'", ":", "new_y", ",", "'score'", ":", "y_score", "}", ")", "\n", "\n", "# Sanity fallback", "\n", "", "", "scores", "=", "[", "0", ",", "0", "]", "\n", "for", "j", "in", "range", "(", "4", ")", ":", "\n", "        ", "if", "xy_cor", "[", "j", "]", "[", "'type'", "]", "==", "0", ":", "\n", "            ", "scores", "[", "j", "%", "2", "]", "+=", "xy_cor", "[", "j", "]", "[", "'score'", "]", "\n", "", "else", ":", "\n", "            ", "scores", "[", "j", "%", "2", "]", "-=", "xy_cor", "[", "j", "]", "[", "'score'", "]", "\n", "", "", "if", "scores", "[", "0", "]", ">", "scores", "[", "1", "]", ":", "\n", "        ", "xy_cor", "[", "0", "]", "[", "'type'", "]", "=", "0", "\n", "xy_cor", "[", "1", "]", "[", "'type'", "]", "=", "1", "\n", "xy_cor", "[", "2", "]", "[", "'type'", "]", "=", "0", "\n", "xy_cor", "[", "3", "]", "[", "'type'", "]", "=", "1", "\n", "", "else", ":", "\n", "        ", "xy_cor", "[", "0", "]", "[", "'type'", "]", "=", "1", "\n", "xy_cor", "[", "1", "]", "[", "'type'", "]", "=", "0", "\n", "xy_cor", "[", "2", "]", "[", "'type'", "]", "=", "1", "\n", "xy_cor", "[", "3", "]", "[", "'type'", "]", "=", "0", "\n", "\n", "", "return", "xy_cor", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.gen_ww_general": [[241, 335], ["range", "len", "len", "len", "post_proc2.vote", "post_proc2.vote", "post_proc2.np_coorx2u", "post_proc2.np_coorx2u", "range", "numpy.unique", "xy_cor.append", "xy_cor.append", "len", "len", "len", "len", "xy[].mean", "post_proc2.np_x_u_solve_y", "post_proc2.np_y_u_solve_x", "post_proc2.np_y_u_solve_x", "post_proc2.np_x_u_solve_y", "xy_cor.insert", "len", "len", "post_proc2.np_x_u_solve_y", "post_proc2.np_y_u_solve_x", "post_proc2.np_x_u_solve_y", "post_proc2.np_y_u_solve_x"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.vote", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.vote", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.np_coorx2u", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.np_coorx2u", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.np_x_u_solve_y", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.np_y_u_solve_x", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.np_y_u_solve_x", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.np_x_u_solve_y", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.np_x_u_solve_y", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.np_y_u_solve_x", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.np_x_u_solve_y", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.np_y_u_solve_x"], ["", "def", "gen_ww_general", "(", "init_coorx", ",", "xy", ",", "gpid", ",", "tol", ")", ":", "\n", "    ", "xy_cor", "=", "[", "]", "\n", "assert", "len", "(", "init_coorx", ")", "==", "len", "(", "np", ".", "unique", "(", "gpid", ")", ")", "\n", "\n", "# Candidate for each part seperated by wall-wall boundary", "\n", "for", "j", "in", "range", "(", "len", "(", "init_coorx", ")", ")", ":", "\n", "        ", "now_x", "=", "xy", "[", "gpid", "==", "j", ",", "0", "]", "\n", "now_y", "=", "xy", "[", "gpid", "==", "j", ",", "1", "]", "\n", "new_x", ",", "x_score", ",", "x_l1", "=", "vote", "(", "now_x", ",", "tol", ")", "\n", "new_y", ",", "y_score", ",", "y_l1", "=", "vote", "(", "now_y", ",", "tol", ")", "\n", "u0", "=", "np_coorx2u", "(", "init_coorx", "[", "(", "j", "-", "1", "+", "len", "(", "init_coorx", ")", ")", "%", "len", "(", "init_coorx", ")", "]", ")", "\n", "u1", "=", "np_coorx2u", "(", "init_coorx", "[", "j", "]", ")", "\n", "if", "(", "x_score", ",", "-", "x_l1", ")", ">", "(", "y_score", ",", "-", "y_l1", ")", ":", "\n", "            ", "xy_cor", ".", "append", "(", "{", "'type'", ":", "0", ",", "'val'", ":", "new_x", ",", "'score'", ":", "x_score", ",", "'action'", ":", "'ori'", ",", "'gpid'", ":", "j", ",", "'u0'", ":", "u0", ",", "'u1'", ":", "u1", ",", "'tbd'", ":", "True", "}", ")", "\n", "", "else", ":", "\n", "            ", "xy_cor", ".", "append", "(", "{", "'type'", ":", "1", ",", "'val'", ":", "new_y", ",", "'score'", ":", "y_score", ",", "'action'", ":", "'ori'", ",", "'gpid'", ":", "j", ",", "'u0'", ":", "u0", ",", "'u1'", ":", "u1", ",", "'tbd'", ":", "True", "}", ")", "\n", "\n", "# Construct wall from highest score to lowest", "\n", "", "", "while", "True", ":", "\n", "# Finding undetermined wall with highest score", "\n", "        ", "tbd", "=", "-", "1", "\n", "for", "i", "in", "range", "(", "len", "(", "xy_cor", ")", ")", ":", "\n", "            ", "if", "xy_cor", "[", "i", "]", "[", "'tbd'", "]", "and", "(", "tbd", "==", "-", "1", "or", "xy_cor", "[", "i", "]", "[", "'score'", "]", ">", "xy_cor", "[", "tbd", "]", "[", "'score'", "]", ")", ":", "\n", "                ", "tbd", "=", "i", "\n", "", "", "if", "tbd", "==", "-", "1", ":", "\n", "            ", "break", "\n", "\n", "# This wall is determined", "\n", "", "xy_cor", "[", "tbd", "]", "[", "'tbd'", "]", "=", "False", "\n", "p_idx", "=", "(", "tbd", "-", "1", "+", "len", "(", "xy_cor", ")", ")", "%", "len", "(", "xy_cor", ")", "\n", "n_idx", "=", "(", "tbd", "+", "1", ")", "%", "len", "(", "xy_cor", ")", "\n", "\n", "num_tbd_neighbor", "=", "xy_cor", "[", "p_idx", "]", "[", "'tbd'", "]", "+", "xy_cor", "[", "n_idx", "]", "[", "'tbd'", "]", "\n", "\n", "# Two adjacency walls are not determined yet => not special case", "\n", "if", "num_tbd_neighbor", "==", "2", ":", "\n", "            ", "continue", "\n", "\n", "# Only one of adjacency two walls is determine => add now or later special case", "\n", "", "if", "num_tbd_neighbor", "==", "1", ":", "\n", "            ", "if", "(", "not", "xy_cor", "[", "p_idx", "]", "[", "'tbd'", "]", "and", "xy_cor", "[", "p_idx", "]", "[", "'type'", "]", "==", "xy_cor", "[", "tbd", "]", "[", "'type'", "]", ")", "or", "(", "not", "xy_cor", "[", "n_idx", "]", "[", "'tbd'", "]", "and", "xy_cor", "[", "n_idx", "]", "[", "'type'", "]", "==", "xy_cor", "[", "tbd", "]", "[", "'type'", "]", ")", ":", "\n", "# Current wall is different from one determined adjacency wall", "\n", "                ", "if", "xy_cor", "[", "tbd", "]", "[", "'score'", "]", ">=", "-", "1", ":", "\n", "# Later special case, add current to tbd", "\n", "                    ", "xy_cor", "[", "tbd", "]", "[", "'tbd'", "]", "=", "True", "\n", "xy_cor", "[", "tbd", "]", "[", "'score'", "]", "-=", "100", "\n", "", "else", ":", "\n", "# Fallback: forced change the current wall or infinite loop", "\n", "                    ", "if", "not", "xy_cor", "[", "p_idx", "]", "[", "'tbd'", "]", ":", "\n", "                        ", "insert_at", "=", "tbd", "\n", "if", "xy_cor", "[", "p_idx", "]", "[", "'type'", "]", "==", "0", ":", "\n", "                            ", "new_val", "=", "np_x_u_solve_y", "(", "xy_cor", "[", "p_idx", "]", "[", "'val'", "]", ",", "xy_cor", "[", "p_idx", "]", "[", "'u1'", "]", ")", "\n", "new_type", "=", "1", "\n", "", "else", ":", "\n", "                            ", "new_val", "=", "np_y_u_solve_x", "(", "xy_cor", "[", "p_idx", "]", "[", "'val'", "]", ",", "xy_cor", "[", "p_idx", "]", "[", "'u1'", "]", ")", "\n", "new_type", "=", "0", "\n", "", "", "else", ":", "\n", "                        ", "insert_at", "=", "n_idx", "\n", "if", "xy_cor", "[", "n_idx", "]", "[", "'type'", "]", "==", "0", ":", "\n", "                            ", "new_val", "=", "np_x_u_solve_y", "(", "xy_cor", "[", "n_idx", "]", "[", "'val'", "]", ",", "xy_cor", "[", "n_idx", "]", "[", "'u0'", "]", ")", "\n", "new_type", "=", "1", "\n", "", "else", ":", "\n", "                            ", "new_val", "=", "np_y_u_solve_x", "(", "xy_cor", "[", "n_idx", "]", "[", "'val'", "]", ",", "xy_cor", "[", "n_idx", "]", "[", "'u0'", "]", ")", "\n", "new_type", "=", "0", "\n", "", "", "new_add", "=", "{", "'type'", ":", "new_type", ",", "'val'", ":", "new_val", ",", "'score'", ":", "0", ",", "'action'", ":", "'forced infer'", ",", "'gpid'", ":", "-", "1", ",", "'u0'", ":", "-", "1", ",", "'u1'", ":", "-", "1", ",", "'tbd'", ":", "False", "}", "\n", "xy_cor", ".", "insert", "(", "insert_at", ",", "new_add", ")", "\n", "", "", "continue", "\n", "\n", "# Below checking special case", "\n", "", "if", "xy_cor", "[", "p_idx", "]", "[", "'type'", "]", "==", "xy_cor", "[", "n_idx", "]", "[", "'type'", "]", ":", "\n", "# Two adjacency walls are same type, current wall should be differen type", "\n", "            ", "if", "xy_cor", "[", "tbd", "]", "[", "'type'", "]", "==", "xy_cor", "[", "p_idx", "]", "[", "'type'", "]", ":", "\n", "# Fallback: three walls with same type => forced change the middle wall", "\n", "                ", "xy_cor", "[", "tbd", "]", "[", "'type'", "]", "=", "(", "xy_cor", "[", "tbd", "]", "[", "'type'", "]", "+", "1", ")", "%", "2", "\n", "xy_cor", "[", "tbd", "]", "[", "'action'", "]", "=", "'forced change'", "\n", "xy_cor", "[", "tbd", "]", "[", "'val'", "]", "=", "xy", "[", "gpid", "==", "xy_cor", "[", "tbd", "]", "[", "'gpid'", "]", ",", "xy_cor", "[", "tbd", "]", "[", "'type'", "]", "]", ".", "mean", "(", ")", "\n", "", "", "else", ":", "\n", "# Two adjacency walls are different type => add one", "\n", "            ", "tp0", "=", "xy_cor", "[", "n_idx", "]", "[", "'type'", "]", "\n", "tp1", "=", "xy_cor", "[", "p_idx", "]", "[", "'type'", "]", "\n", "if", "xy_cor", "[", "p_idx", "]", "[", "'type'", "]", "==", "0", ":", "\n", "                ", "val0", "=", "np_x_u_solve_y", "(", "xy_cor", "[", "p_idx", "]", "[", "'val'", "]", ",", "xy_cor", "[", "p_idx", "]", "[", "'u1'", "]", ")", "\n", "val1", "=", "np_y_u_solve_x", "(", "xy_cor", "[", "n_idx", "]", "[", "'val'", "]", ",", "xy_cor", "[", "n_idx", "]", "[", "'u0'", "]", ")", "\n", "", "else", ":", "\n", "                ", "val0", "=", "np_y_u_solve_x", "(", "xy_cor", "[", "p_idx", "]", "[", "'val'", "]", ",", "xy_cor", "[", "p_idx", "]", "[", "'u1'", "]", ")", "\n", "val1", "=", "np_x_u_solve_y", "(", "xy_cor", "[", "n_idx", "]", "[", "'val'", "]", ",", "xy_cor", "[", "n_idx", "]", "[", "'u0'", "]", ")", "\n", "", "new_add", "=", "[", "\n", "{", "'type'", ":", "tp0", ",", "'val'", ":", "val0", ",", "'score'", ":", "0", ",", "'action'", ":", "'forced infer'", ",", "'gpid'", ":", "-", "1", ",", "'u0'", ":", "-", "1", ",", "'u1'", ":", "-", "1", ",", "'tbd'", ":", "False", "}", ",", "\n", "{", "'type'", ":", "tp1", ",", "'val'", ":", "val1", ",", "'score'", ":", "0", ",", "'action'", ":", "'forced infer'", ",", "'gpid'", ":", "-", "1", ",", "'u0'", ":", "-", "1", ",", "'u1'", ":", "-", "1", ",", "'tbd'", ":", "False", "}", ",", "\n", "]", "\n", "xy_cor", "=", "xy_cor", "[", ":", "tbd", "]", "+", "new_add", "+", "xy_cor", "[", "tbd", "+", "1", ":", "]", "\n", "\n", "", "", "return", "xy_cor", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.gen_ww": [[337, 360], ["post_proc2.get_gpid", "numpy.hstack", "post_proc2.np_coor2xy", "range", "post_proc2.np_xy2coor", "numpy.roll", "post_proc2.gen_ww_cuboid", "post_proc2.gen_ww_general", "len", "numpy.array", "len", "np.roll.append", "np.roll.append", "cor[].argmin", "numpy.arange"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.get_gpid", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.np_coor2xy", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.np_xy2coor", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.gen_ww_cuboid", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.post_proc2.gen_ww_general"], ["", "def", "gen_ww", "(", "init_coorx", ",", "coory", ",", "z", "=", "50", ",", "coorW", "=", "1024", ",", "coorH", "=", "512", ",", "floorW", "=", "1024", ",", "floorH", "=", "512", ",", "tol", "=", "3", ",", "force_cuboid", "=", "True", ")", ":", "\n", "    ", "gpid", "=", "get_gpid", "(", "init_coorx", ",", "coorW", ")", "\n", "coor", "=", "np", ".", "hstack", "(", "[", "np", ".", "arange", "(", "coorW", ")", "[", ":", ",", "None", "]", ",", "coory", "[", ":", ",", "None", "]", "]", ")", "\n", "xy", "=", "np_coor2xy", "(", "coor", ",", "z", ",", "coorW", ",", "coorH", ",", "floorW", ",", "floorH", ")", "\n", "\n", "# Generate wall-wall", "\n", "if", "force_cuboid", ":", "\n", "        ", "xy_cor", "=", "gen_ww_cuboid", "(", "xy", ",", "gpid", ",", "tol", ")", "\n", "", "else", ":", "\n", "        ", "xy_cor", "=", "gen_ww_general", "(", "init_coorx", ",", "xy", ",", "gpid", ",", "tol", ")", "\n", "\n", "# Ceiling view to normal view", "\n", "", "cor", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "len", "(", "xy_cor", ")", ")", ":", "\n", "        ", "next_j", "=", "(", "j", "+", "1", ")", "%", "len", "(", "xy_cor", ")", "\n", "if", "xy_cor", "[", "j", "]", "[", "'type'", "]", "==", "1", ":", "\n", "            ", "cor", ".", "append", "(", "(", "xy_cor", "[", "next_j", "]", "[", "'val'", "]", ",", "xy_cor", "[", "j", "]", "[", "'val'", "]", ")", ")", "\n", "", "else", ":", "\n", "            ", "cor", ".", "append", "(", "(", "xy_cor", "[", "j", "]", "[", "'val'", "]", ",", "xy_cor", "[", "next_j", "]", "[", "'val'", "]", ")", ")", "\n", "", "", "cor", "=", "np_xy2coor", "(", "np", ".", "array", "(", "cor", ")", ",", "z", ",", "coorW", ",", "coorH", ",", "floorW", ",", "floorH", ")", "\n", "cor", "=", "np", ".", "roll", "(", "cor", ",", "-", "2", "*", "cor", "[", ":", ":", "2", ",", "0", "]", ".", "argmin", "(", ")", ",", "axis", "=", "0", ")", "\n", "\n", "return", "cor", ",", "xy_cor", "\n", "", ""]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.train_stanford.train_model": [[57, 152], ["time.time", "range", "print", "print", "model.load_state_dict", "print", "print", "print", "time.time", "print", "model.train", "model.eval", "inputs.to.to", "labels.to.to", "labels2.to.to", "optimizer.zero_grad", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "val_acc_history.append", "copy.deepcopy", "torch.save", "torch.save", "torch.save", "print", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "model", "loss.item", "model.state_dict", "criterion", "criterion2", "loss.backward", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "optimizer.step", "model.parameters"], "function", ["None"], ["def", "train_model", "(", "model", ",", "train_generator", ",", "val_generator", ",", "optimizer", ",", "criterion", ",", "criterion2", ",", "steps", "=", "100", ",", "num_epochs", "=", "25", ")", ":", "\n", "    ", "since", "=", "time", ".", "time", "(", ")", "\n", "\n", "val_acc_history", "=", "[", "]", "\n", "\n", "best_acc", "=", "np", ".", "Inf", "\n", "\n", "for", "epoch", "in", "range", "(", "num_epochs", ")", ":", "\n", "        ", "print", "(", "'Epoch {}/{}'", ".", "format", "(", "epoch", ",", "num_epochs", "-", "1", ")", ")", "\n", "print", "(", "'-'", "*", "10", ")", "\n", "\n", "# Each epoch has a training and validation phase", "\n", "for", "phase", "in", "[", "'train'", ",", "'val'", "]", ":", "\n", "            ", "if", "phase", "==", "'train'", ":", "\n", "                ", "model", ".", "train", "(", ")", "# Set model to training mode", "\n", "dataloaders", "=", "train_generator", "\n", "", "else", ":", "\n", "                ", "model", ".", "eval", "(", ")", "# Set model to evaluate mode", "\n", "dataloaders", "=", "val_generator", "\n", "\n", "", "loss_sum", "=", "0.0", "\n", "step", "=", "0", "\n", "\n", "# Iterate over data.", "\n", "for", "input", "in", "dataloaders", ":", "\n", "\n", "                ", "inputs", "=", "input", "[", "0", "]", "\n", "labels", "=", "input", "[", "1", "]", "\n", "labels2", "=", "input", "[", "2", "]", "\n", "\n", "# gpu mode", "\n", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "labels", "=", "labels", ".", "to", "(", "device", ")", "\n", "labels2", "=", "labels2", ".", "to", "(", "device", ")", "\n", "\n", "# zero the parameter gradients", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "# forward", "\n", "# track history if only in train", "\n", "with", "torch", ".", "set_grad_enabled", "(", "phase", "==", "'train'", ")", ":", "\n", "# Get model outputs and calculate loss", "\n", "                    ", "outputs", ",", "outputs2", "=", "model", "(", "inputs", ")", "\n", "\n", "# loss", "\n", "mask", "=", "(", "labels", ">", "0", ")", ".", "float", "(", ")", "\n", "mask", "=", "mask", "+", "0.2", "*", "(", "1.0", "-", "mask", ")", "\n", "mask2", "=", "(", "labels2", ">", "0", ")", ".", "float", "(", ")", "\n", "mask2", "=", "mask2", "+", "0.2", "*", "(", "1.0", "-", "mask2", ")", "\n", "\n", "loss", "=", "criterion", "(", "outputs", "*", "mask", ",", "labels", "*", "mask", ")", "+", "criterion2", "(", "outputs2", "*", "mask2", ",", "labels2", "*", "mask2", ")", "\n", "\n", "# backward + optimize only if in training phase", "\n", "if", "phase", "==", "'train'", ":", "\n", "                        ", "loss", ".", "backward", "(", ")", "\n", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "model", ".", "parameters", "(", ")", ",", "5.0", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# clear cache", "\n", "", "", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "del", "inputs", ",", "outputs", ",", "outputs2", ",", "mask", ",", "mask2", ",", "labels", ",", "labels2", "\n", "#del inputs, outputs, mask, labels", "\n", "\n", "# statistics", "\n", "loss_sum", "+=", "loss", ".", "item", "(", ")", "/", "steps", "#*inputs.size(0)/steps", "\n", "\n", "# clear", "\n", "del", "loss", "\n", "\n", "# Break after 'steps' steps", "\n", "if", "step", "==", "steps", "-", "1", ":", "\n", "                    ", "break", "\n", "", "step", "+=", "1", "\n", "\n", "", "print", "(", "'{} Loss: {:.6f}'", ".", "format", "(", "phase", ",", "loss_sum", ")", ")", "\n", "\n", "# deep copy the model", "\n", "if", "phase", "==", "'val'", "and", "loss_sum", "<", "best_acc", ":", "\n", "                ", "val_acc_history", ".", "append", "(", "loss_sum", ")", "\n", "best_acc", "=", "loss_sum", "\n", "best_model_wts", "=", "copy", ".", "deepcopy", "(", "model", ".", "state_dict", "(", ")", ")", "\n", "# save model", "\n", "torch", ".", "save", "(", "best_model_wts", ",", "model_path", ")", "\n", "print", "(", "\"Model saved ...\"", ")", "\n", "del", "best_model_wts", "\n", "\n", "", "", "print", "(", ")", "\n", "\n", "", "time_elapsed", "=", "time", ".", "time", "(", ")", "-", "since", "\n", "print", "(", "'Training complete in {:.0f}m {:.0f}s'", ".", "format", "(", "time_elapsed", "//", "60", ",", "time_elapsed", "%", "60", ")", ")", "\n", "print", "(", "'Best val Acc: {:6f}'", ".", "format", "(", "best_acc", ")", ")", "\n", "\n", "# load best model weights", "\n", "model", ".", "load_state_dict", "(", "best_model_wts", ")", "\n", "return", "model", ",", "val_acc_history", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.find_N_peaks": [[12, 21], ["scipy.signal.find_peaks", "numpy.argsort", "numpy.sort", "min", "len"], "function", ["None"], ["def", "find_N_peaks", "(", "signal", ",", "prominence", ",", "distance", ",", "N", "=", "4", ")", ":", "\n", "    ", "locs", ",", "_", "=", "scipy", ".", "signal", ".", "find_peaks", "(", "signal", ",", "\n", "prominence", "=", "prominence", ",", "\n", "distance", "=", "distance", ")", "\n", "pks", "=", "signal", "[", "locs", "]", "\n", "pk_id", "=", "np", ".", "argsort", "(", "-", "pks", ")", "\n", "pk_loc", "=", "locs", "[", "pk_id", "[", ":", "min", "(", "N", ",", "len", "(", "pks", ")", ")", "]", "]", "\n", "pk_loc", "=", "np", ".", "sort", "(", "pk_loc", ")", "\n", "return", "pk_loc", ",", "signal", "[", "pk_loc", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.constraint_cor_id_same_z": [[23, 67], ["scipy.ndimage.map_coordinates", "cor_id_xy[].mean", "numpy.sqrt().mean", "numpy.tan", "numpy.stack", "cor_id_score[].sum", "cor_id_score[].sum", "numpy.stack", "numpy.sqrt", "numpy.arctan2", "numpy.arctan2", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.sin", "numpy.stack", "numpy.arctan2", "numpy.arctan2", "numpy.cos", "numpy.sin", "numpy.sqrt"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.map_coordinates"], ["", "def", "constraint_cor_id_same_z", "(", "cor_id", ",", "cor_img", ",", "z", "=", "-", "1", ")", ":", "\n", "# Convert to uv space", "\n", "    ", "cor_id_u", "=", "(", "(", "cor_id", "[", ":", ",", "0", "]", "+", "0.5", ")", "/", "cor_img", ".", "shape", "[", "1", "]", "-", "0.5", ")", "*", "2", "*", "np", ".", "pi", "\n", "cor_id_v", "=", "(", "(", "cor_id", "[", ":", ",", "1", "]", "+", "0.5", ")", "/", "cor_img", ".", "shape", "[", "0", "]", "-", "0.5", ")", "*", "np", ".", "pi", "\n", "\n", "# Convert to xyz space (z=-1)", "\n", "cor_id_c", "=", "z", "/", "np", ".", "tan", "(", "cor_id_v", ")", "\n", "cor_id_xy", "=", "np", ".", "stack", "(", "[", "\n", "cor_id_c", "*", "np", ".", "cos", "(", "cor_id_u", ")", ",", "\n", "cor_id_c", "*", "np", ".", "sin", "(", "cor_id_u", ")", ",", "\n", "]", ",", "axis", "=", "0", ")", ".", "T", "\n", "\n", "# Fix 2 diagonal corner, move the others", "\n", "cor_id_score", "=", "map_coordinates", "(", "cor_img", ",", "[", "cor_id", "[", ":", ",", "1", "]", ",", "cor_id", "[", ":", ",", "0", "]", "]", ")", "\n", "if", "cor_id_score", "[", "0", ":", ":", "2", "]", ".", "sum", "(", ")", ">", "cor_id_score", "[", "1", ":", ":", "2", "]", ".", "sum", "(", ")", ":", "\n", "        ", "idx0", ",", "idx1", "=", "0", ",", "1", "\n", "", "else", ":", "\n", "        ", "idx0", ",", "idx1", "=", "1", ",", "0", "\n", "", "pc", "=", "cor_id_xy", "[", "idx0", ":", ":", "2", "]", ".", "mean", "(", "0", ",", "keepdims", "=", "True", ")", "\n", "radius2", "=", "np", ".", "sqrt", "(", "(", "(", "cor_id_xy", "[", "idx0", ":", ":", "2", "]", "-", "pc", ")", "**", "2", ")", ".", "sum", "(", "1", ")", ")", ".", "mean", "(", ")", "\n", "d", "=", "cor_id_xy", "[", "idx1", ":", ":", "2", "]", "-", "pc", "\n", "d1", "=", "d", "[", "0", "]", "\n", "d2", "=", "d", "[", "1", "]", "\n", "theta1", "=", "(", "np", ".", "arctan2", "(", "d1", "[", "1", "]", ",", "d1", "[", "0", "]", ")", "+", "2", "*", "np", ".", "pi", ")", "%", "(", "2", "*", "np", ".", "pi", ")", "\n", "theta2", "=", "(", "np", ".", "arctan2", "(", "d2", "[", "1", "]", ",", "d2", "[", "0", "]", ")", "+", "2", "*", "np", ".", "pi", ")", "%", "(", "2", "*", "np", ".", "pi", ")", "\n", "theta2", "=", "theta2", "-", "np", ".", "pi", "\n", "theta2", "=", "(", "theta2", "+", "2", "*", "np", ".", "pi", ")", "%", "(", "2", "*", "np", ".", "pi", ")", "\n", "theta", "=", "(", "theta1", "+", "theta2", ")", "/", "2", "\n", "d", "[", "0", "]", "=", "(", "radius2", "*", "np", ".", "cos", "(", "theta", ")", ",", "radius2", "*", "np", ".", "sin", "(", "theta", ")", ")", "\n", "theta", "=", "theta", "-", "np", ".", "pi", "\n", "d", "[", "1", "]", "=", "(", "radius2", "*", "np", ".", "cos", "(", "theta", ")", ",", "radius2", "*", "np", ".", "sin", "(", "theta", ")", ")", "\n", "\n", "cor_id_xy", "[", "idx1", ":", ":", "2", "]", "=", "pc", "+", "d", "\n", "\n", "# Convert refined xyz back to uv space", "\n", "cor_id_uv", "=", "np", ".", "stack", "(", "[", "\n", "np", ".", "arctan2", "(", "cor_id_xy", "[", ":", ",", "1", "]", ",", "cor_id_xy", "[", ":", ",", "0", "]", ")", ",", "\n", "np", ".", "arctan2", "(", "z", ",", "np", ".", "sqrt", "(", "(", "cor_id_xy", "**", "2", ")", ".", "sum", "(", "1", ")", ")", ")", ",", "\n", "]", ",", "axis", "=", "0", ")", ".", "T", "\n", "\n", "# Convert to image index", "\n", "col", "=", "(", "cor_id_uv", "[", ":", ",", "0", "]", "/", "(", "2", "*", "np", ".", "pi", ")", "+", "0.5", ")", "*", "cor_img", ".", "shape", "[", "1", "]", "-", "0.5", "\n", "row", "=", "(", "cor_id_uv", "[", ":", ",", "1", "]", "/", "np", ".", "pi", "+", "0.5", ")", "*", "cor_img", ".", "shape", "[", "0", "]", "-", "0.5", "\n", "return", "np", ".", "stack", "(", "[", "col", ",", "row", "]", ",", "axis", "=", "0", ")", ".", "T", ",", "cor_id_xy", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.fit_avg_z": [[69, 76], ["scipy.ndimage.map_coordinates", "numpy.sqrt", "numpy.tan", "scipy.ndimage.map_coordinates.sum"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.map_coordinates"], ["", "def", "fit_avg_z", "(", "cor_id", ",", "cor_id_xy", ",", "cor_img", ")", ":", "\n", "    ", "score", "=", "map_coordinates", "(", "cor_img", ",", "[", "cor_id", "[", ":", ",", "1", "]", ",", "cor_id", "[", ":", ",", "0", "]", "]", ")", "\n", "c", "=", "np", ".", "sqrt", "(", "(", "cor_id_xy", "**", "2", ")", ".", "sum", "(", "1", ")", ")", "\n", "cor_id_v", "=", "(", "(", "cor_id", "[", ":", ",", "1", "]", "+", "0.5", ")", "/", "cor_img", ".", "shape", "[", "0", "]", "-", "0.5", ")", "*", "np", ".", "pi", "\n", "z", "=", "c", "*", "np", ".", "tan", "(", "cor_id_v", ")", "\n", "fit_z", "=", "(", "z", "*", "score", ")", ".", "sum", "(", ")", "/", "score", ".", "sum", "(", ")", "\n", "return", "fit_z", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.constraint_cor_id_on_xy": [[78, 86], ["numpy.sqrt", "pano.fit_avg_z", "cor_id[].copy", "numpy.stack", "numpy.arctan2"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.fit_avg_z"], ["", "def", "constraint_cor_id_on_xy", "(", "cor_id", ",", "cor_id_xy", ",", "cor_img", ")", ":", "\n", "    ", "c", "=", "np", ".", "sqrt", "(", "(", "cor_id_xy", "**", "2", ")", ".", "sum", "(", "1", ")", ")", "\n", "z", "=", "fit_avg_z", "(", "cor_id", ",", "cor_id_xy", ",", "cor_img", ")", "\n", "\n", "# Convert to image index", "\n", "col", "=", "cor_id", "[", ":", ",", "0", "]", ".", "copy", "(", ")", "\n", "row", "=", "(", "np", ".", "arctan2", "(", "z", ",", "c", ")", "/", "np", ".", "pi", "+", "0.5", ")", "*", "cor_img", ".", "shape", "[", "0", "]", "-", "0.5", "\n", "return", "np", ".", "stack", "(", "[", "col", ",", "row", "]", ",", "axis", "=", "0", ")", ".", "T", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.get_ini_cor": [[88, 105], ["scipy.ndimage.convolve", "numpy.array", "numpy.ones", "pano.find_N_peaks", "int", "cor[].sum", "np.array.append", "np.array.append", "scipy.ndimage.convolve.sum", "numpy.round", "pano.find_N_peaks", "max"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.find_N_peaks", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.find_N_peaks"], ["", "def", "get_ini_cor", "(", "cor_img", ",", "d1", "=", "21", ",", "d2", "=", "3", ")", ":", "\n", "    ", "cor", "=", "convolve", "(", "cor_img", ",", "np", ".", "ones", "(", "(", "d1", ",", "d1", ")", ")", ",", "mode", "=", "'constant'", ",", "cval", "=", "0.0", ")", "\n", "cor_id", "=", "[", "]", "\n", "X_loc", "=", "find_N_peaks", "(", "cor", ".", "sum", "(", "0", ")", ",", "prominence", "=", "None", ",", "\n", "distance", "=", "20", ",", "N", "=", "4", ")", "[", "0", "]", "\n", "for", "x", "in", "X_loc", ":", "\n", "        ", "x_", "=", "int", "(", "np", ".", "round", "(", "x", ")", ")", "\n", "\n", "V_signal", "=", "cor", "[", ":", ",", "max", "(", "0", ",", "x_", "-", "d2", ")", ":", "x_", "+", "d2", "+", "1", "]", ".", "sum", "(", "1", ")", "\n", "y1", ",", "y2", "=", "find_N_peaks", "(", "V_signal", ",", "prominence", "=", "None", ",", "\n", "distance", "=", "20", ",", "N", "=", "2", ")", "[", "0", "]", "\n", "cor_id", ".", "append", "(", "(", "x", ",", "y1", ")", ")", "\n", "cor_id", ".", "append", "(", "(", "x", ",", "y2", ")", ")", "\n", "\n", "", "cor_id", "=", "np", ".", "array", "(", "cor_id", ",", "np", ".", "float64", ")", "\n", "\n", "return", "cor_id", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.coords2uv": [[107, 117], ["numpy.hstack"], "function", ["None"], ["", "def", "coords2uv", "(", "coords", ",", "width", ",", "height", ")", ":", "\n", "    ", "'''\n    Image coordinates (xy) to uv\n    '''", "\n", "middleX", "=", "width", "/", "2", "+", "0.5", "\n", "middleY", "=", "height", "/", "2", "+", "0.5", "\n", "uv", "=", "np", ".", "hstack", "(", "[", "\n", "(", "coords", "[", ":", ",", "[", "0", "]", "]", "-", "middleX", ")", "/", "width", "*", "2", "*", "np", ".", "pi", ",", "\n", "-", "(", "coords", "[", ":", ",", "[", "1", "]", "]", "-", "middleY", ")", "/", "height", "*", "np", ".", "pi", "]", ")", "\n", "return", "uv", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.uv2xyzN": [[119, 128], ["numpy.zeros", "numpy.sin", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.cos", "int", "int", "int"], "function", ["None"], ["", "def", "uv2xyzN", "(", "uv", ",", "planeID", "=", "1", ")", ":", "\n", "    ", "ID1", "=", "(", "int", "(", "planeID", ")", "-", "1", "+", "0", ")", "%", "3", "\n", "ID2", "=", "(", "int", "(", "planeID", ")", "-", "1", "+", "1", ")", "%", "3", "\n", "ID3", "=", "(", "int", "(", "planeID", ")", "-", "1", "+", "2", ")", "%", "3", "\n", "xyz", "=", "np", ".", "zeros", "(", "(", "uv", ".", "shape", "[", "0", "]", ",", "3", ")", ")", "\n", "xyz", "[", ":", ",", "ID1", "]", "=", "np", ".", "cos", "(", "uv", "[", ":", ",", "1", "]", ")", "*", "np", ".", "sin", "(", "uv", "[", ":", ",", "0", "]", ")", "\n", "xyz", "[", ":", ",", "ID2", "]", "=", "np", ".", "cos", "(", "uv", "[", ":", ",", "1", "]", ")", "*", "np", ".", "cos", "(", "uv", "[", ":", ",", "0", "]", ")", "\n", "xyz", "[", ":", ",", "ID3", "]", "=", "np", ".", "sin", "(", "uv", "[", ":", ",", "1", "]", ")", "\n", "return", "xyz", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.uv2xyzN_vec": [[130, 147], ["planeID.astype.astype", "numpy.arange", "numpy.zeros", "numpy.sin", "len", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.cos", "len", "planeID.astype.astype"], "function", ["None"], ["", "def", "uv2xyzN_vec", "(", "uv", ",", "planeID", ")", ":", "\n", "    ", "'''\n    vectorization version of uv2xyzN\n    @uv       N x 2\n    @planeID  N\n    '''", "\n", "assert", "(", "planeID", ".", "astype", "(", "int", ")", "!=", "planeID", ")", ".", "sum", "(", ")", "==", "0", "\n", "planeID", "=", "planeID", ".", "astype", "(", "int", ")", "\n", "ID1", "=", "(", "planeID", "-", "1", "+", "0", ")", "%", "3", "\n", "ID2", "=", "(", "planeID", "-", "1", "+", "1", ")", "%", "3", "\n", "ID3", "=", "(", "planeID", "-", "1", "+", "2", ")", "%", "3", "\n", "ID", "=", "np", ".", "arange", "(", "len", "(", "uv", ")", ")", "\n", "xyz", "=", "np", ".", "zeros", "(", "(", "len", "(", "uv", ")", ",", "3", ")", ")", "\n", "xyz", "[", "ID", ",", "ID1", "]", "=", "np", ".", "cos", "(", "uv", "[", ":", ",", "1", "]", ")", "*", "np", ".", "sin", "(", "uv", "[", ":", ",", "0", "]", ")", "\n", "xyz", "[", "ID", ",", "ID2", "]", "=", "np", ".", "cos", "(", "uv", "[", ":", ",", "1", "]", ")", "*", "np", ".", "cos", "(", "uv", "[", ":", ",", "0", "]", ")", "\n", "xyz", "[", "ID", ",", "ID3", "]", "=", "np", ".", "sin", "(", "uv", "[", ":", ",", "1", "]", ")", "\n", "return", "xyz", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.xyz2uvN": [[149, 165], ["numpy.sqrt", "numpy.sqrt", "numpy.arcsin", "numpy.arcsin", "numpy.hstack", "int", "int", "int", "numpy.isnan"], "function", ["None"], ["", "def", "xyz2uvN", "(", "xyz", ",", "planeID", "=", "1", ")", ":", "\n", "    ", "ID1", "=", "(", "int", "(", "planeID", ")", "-", "1", "+", "0", ")", "%", "3", "\n", "ID2", "=", "(", "int", "(", "planeID", ")", "-", "1", "+", "1", ")", "%", "3", "\n", "ID3", "=", "(", "int", "(", "planeID", ")", "-", "1", "+", "2", ")", "%", "3", "\n", "normXY", "=", "np", ".", "sqrt", "(", "xyz", "[", ":", ",", "[", "ID1", "]", "]", "**", "2", "+", "xyz", "[", ":", ",", "[", "ID2", "]", "]", "**", "2", ")", "\n", "normXY", "[", "normXY", "<", "0.000001", "]", "=", "0.000001", "\n", "normXYZ", "=", "np", ".", "sqrt", "(", "xyz", "[", ":", ",", "[", "ID1", "]", "]", "**", "2", "+", "xyz", "[", ":", ",", "[", "ID2", "]", "]", "**", "2", "+", "xyz", "[", ":", ",", "[", "ID3", "]", "]", "**", "2", ")", "\n", "v", "=", "np", ".", "arcsin", "(", "xyz", "[", ":", ",", "[", "ID3", "]", "]", "/", "normXYZ", ")", "\n", "u", "=", "np", ".", "arcsin", "(", "xyz", "[", ":", ",", "[", "ID1", "]", "]", "/", "normXY", ")", "\n", "valid", "=", "(", "xyz", "[", ":", ",", "[", "ID2", "]", "]", "<", "0", ")", "&", "(", "u", ">=", "0", ")", "\n", "u", "[", "valid", "]", "=", "np", ".", "pi", "-", "u", "[", "valid", "]", "\n", "valid", "=", "(", "xyz", "[", ":", ",", "[", "ID2", "]", "]", "<", "0", ")", "&", "(", "u", "<=", "0", ")", "\n", "u", "[", "valid", "]", "=", "-", "np", ".", "pi", "-", "u", "[", "valid", "]", "\n", "uv", "=", "np", ".", "hstack", "(", "[", "u", ",", "v", "]", ")", "\n", "uv", "[", "np", ".", "isnan", "(", "uv", "[", ":", ",", "0", "]", ")", ",", "0", "]", "=", "0", "\n", "return", "uv", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.computeUVN": [[167, 179], ["numpy.arctan", "numpy.array", "numpy.array", "numpy.sin", "numpy.cos"], "function", ["None"], ["", "def", "computeUVN", "(", "n", ",", "in_", ",", "planeID", ")", ":", "\n", "    ", "'''\n    compute v given u and normal.\n    '''", "\n", "if", "planeID", "==", "2", ":", "\n", "        ", "n", "=", "np", ".", "array", "(", "[", "n", "[", "1", "]", ",", "n", "[", "2", "]", ",", "n", "[", "0", "]", "]", ")", "\n", "", "elif", "planeID", "==", "3", ":", "\n", "        ", "n", "=", "np", ".", "array", "(", "[", "n", "[", "2", "]", ",", "n", "[", "0", "]", ",", "n", "[", "1", "]", "]", ")", "\n", "", "bc", "=", "n", "[", "0", "]", "*", "np", ".", "sin", "(", "in_", ")", "+", "n", "[", "1", "]", "*", "np", ".", "cos", "(", "in_", ")", "\n", "bs", "=", "n", "[", "2", "]", "\n", "out", "=", "np", ".", "arctan", "(", "-", "bc", "/", "(", "bs", "+", "1e-9", ")", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.computeUVN_vec": [[181, 199], ["np.repeat.copy", "numpy.repeat", "numpy.arctan", "numpy.roll", "numpy.roll", "numpy.sin", "numpy.cos"], "function", ["None"], ["", "def", "computeUVN_vec", "(", "n", ",", "in_", ",", "planeID", ")", ":", "\n", "    ", "'''\n    vectorization version of computeUVN\n    @n         N x 3\n    @in_      MN x 1\n    @planeID   N\n    '''", "\n", "n", "=", "n", ".", "copy", "(", ")", "\n", "if", "(", "planeID", "==", "2", ")", ".", "sum", "(", ")", ":", "\n", "        ", "n", "[", "planeID", "==", "2", "]", "=", "np", ".", "roll", "(", "n", "[", "planeID", "==", "2", "]", ",", "2", ",", "axis", "=", "1", ")", "\n", "", "if", "(", "planeID", "==", "3", ")", ".", "sum", "(", ")", ":", "\n", "        ", "n", "[", "planeID", "==", "3", "]", "=", "np", ".", "roll", "(", "n", "[", "planeID", "==", "3", "]", ",", "1", ",", "axis", "=", "1", ")", "\n", "", "n", "=", "np", ".", "repeat", "(", "n", ",", "in_", ".", "shape", "[", "0", "]", "//", "n", ".", "shape", "[", "0", "]", ",", "axis", "=", "0", ")", "\n", "assert", "n", ".", "shape", "[", "0", "]", "==", "in_", ".", "shape", "[", "0", "]", "\n", "bc", "=", "n", "[", ":", ",", "[", "0", "]", "]", "*", "np", ".", "sin", "(", "in_", ")", "+", "n", "[", ":", ",", "[", "1", "]", "]", "*", "np", ".", "cos", "(", "in_", ")", "\n", "bs", "=", "n", "[", ":", ",", "[", "2", "]", "]", "\n", "out", "=", "np", ".", "arctan", "(", "-", "bc", "/", "(", "bs", "+", "1e-9", ")", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.lineFromTwoPoint": [[201, 232], ["numpy.zeros", "numpy.cross", "numpy.abs", "numpy.abs", "numpy.abs", "range", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.argmax", "pano.xyz2uvN", "numpy.repmat", "numpy.hstack", "numpy.vstack", "uv[].max", "uv[].min", "numpy.sqrt", "numpy.repmat", "numpy.repmat", "numpy.repmat", "numpy.sum", "numpy.array", "numpy.array"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.xyz2uvN"], ["", "def", "lineFromTwoPoint", "(", "pt1", ",", "pt2", ")", ":", "\n", "    ", "'''\n    Generate line segment based on two points on panorama\n    pt1, pt2: two points on panorama\n    line:\n        1~3-th dim: normal of the line\n        4-th dim: the projection dimension ID\n        5~6-th dim: the u of line segment endpoints in projection plane\n    '''", "\n", "numLine", "=", "pt1", ".", "shape", "[", "0", "]", "\n", "lines", "=", "np", ".", "zeros", "(", "(", "numLine", ",", "6", ")", ")", "\n", "n", "=", "np", ".", "cross", "(", "pt1", ",", "pt2", ")", "\n", "n", "=", "n", "/", "(", "matlib", ".", "repmat", "(", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "n", "**", "2", ",", "1", ",", "keepdims", "=", "1", ")", ")", ",", "1", ",", "3", ")", "+", "1e-9", ")", "\n", "lines", "[", ":", ",", "0", ":", "3", "]", "=", "n", "\n", "\n", "areaXY", "=", "np", ".", "abs", "(", "np", ".", "sum", "(", "n", "*", "matlib", ".", "repmat", "(", "[", "0", ",", "0", ",", "1", "]", ",", "numLine", ",", "1", ")", ",", "1", ",", "keepdims", "=", "True", ")", ")", "\n", "areaYZ", "=", "np", ".", "abs", "(", "np", ".", "sum", "(", "n", "*", "matlib", ".", "repmat", "(", "[", "1", ",", "0", ",", "0", "]", ",", "numLine", ",", "1", ")", ",", "1", ",", "keepdims", "=", "True", ")", ")", "\n", "areaZX", "=", "np", ".", "abs", "(", "np", ".", "sum", "(", "n", "*", "matlib", ".", "repmat", "(", "[", "0", ",", "1", ",", "0", "]", ",", "numLine", ",", "1", ")", ",", "1", ",", "keepdims", "=", "True", ")", ")", "\n", "planeIDs", "=", "np", ".", "argmax", "(", "np", ".", "hstack", "(", "[", "areaXY", ",", "areaYZ", ",", "areaZX", "]", ")", ",", "axis", "=", "1", ")", "+", "1", "\n", "lines", "[", ":", ",", "3", "]", "=", "planeIDs", "\n", "\n", "for", "i", "in", "range", "(", "numLine", ")", ":", "\n", "        ", "uv", "=", "xyz2uvN", "(", "np", ".", "vstack", "(", "[", "pt1", "[", "i", ",", ":", "]", ",", "pt2", "[", "i", ",", ":", "]", "]", ")", ",", "lines", "[", "i", ",", "3", "]", ")", "\n", "umax", "=", "uv", "[", ":", ",", "0", "]", ".", "max", "(", ")", "+", "np", ".", "pi", "\n", "umin", "=", "uv", "[", ":", ",", "0", "]", ".", "min", "(", ")", "+", "np", ".", "pi", "\n", "if", "umax", "-", "umin", ">", "np", ".", "pi", ":", "\n", "            ", "lines", "[", "i", ",", "4", ":", "6", "]", "=", "np", ".", "array", "(", "[", "umax", ",", "umin", "]", ")", "/", "2", "/", "np", ".", "pi", "\n", "", "else", ":", "\n", "            ", "lines", "[", "i", ",", "4", ":", "6", "]", "=", "np", ".", "array", "(", "[", "umin", ",", "umax", "]", ")", "/", "2", "/", "np", ".", "pi", "\n", "\n", "", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.lineIdxFromCors": [[234, 264], ["pano.coords2uv", "pano.uv2xyzN", "pano.lineFromTwoPoint", "max", "range", "pano.computeUVN", "pano.uv2xyzN", "pano.xyz2uvN", "numpy.minimum().astype", "numpy.minimum().astype", "cs.extend", "rs.extend", "len", "numpy.linspace", "numpy.linspace", "np.linspace.reshape", "numpy.hstack", "numpy.minimum", "numpy.minimum", "numpy.floor", "numpy.floor"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.coords2uv", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.uv2xyzN", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.lineFromTwoPoint", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.computeUVN", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.uv2xyzN", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.xyz2uvN"], ["", "def", "lineIdxFromCors", "(", "cor_all", ",", "im_w", ",", "im_h", ")", ":", "\n", "    ", "assert", "len", "(", "cor_all", ")", "%", "2", "==", "0", "\n", "uv", "=", "coords2uv", "(", "cor_all", ",", "im_w", ",", "im_h", ")", "\n", "xyz", "=", "uv2xyzN", "(", "uv", ")", "\n", "lines", "=", "lineFromTwoPoint", "(", "xyz", "[", "0", ":", ":", "2", "]", ",", "xyz", "[", "1", ":", ":", "2", "]", ")", "\n", "num_sample", "=", "max", "(", "im_h", ",", "im_w", ")", "\n", "\n", "cs", ",", "rs", "=", "[", "]", ",", "[", "]", "\n", "for", "i", "in", "range", "(", "lines", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "n", "=", "lines", "[", "i", ",", "0", ":", "3", "]", "\n", "sid", "=", "lines", "[", "i", ",", "4", "]", "*", "2", "*", "np", ".", "pi", "\n", "eid", "=", "lines", "[", "i", ",", "5", "]", "*", "2", "*", "np", ".", "pi", "\n", "if", "eid", "<", "sid", ":", "\n", "            ", "x", "=", "np", ".", "linspace", "(", "sid", ",", "eid", "+", "2", "*", "np", ".", "pi", ",", "num_sample", ")", "\n", "x", "=", "x", "%", "(", "2", "*", "np", ".", "pi", ")", "\n", "", "else", ":", "\n", "            ", "x", "=", "np", ".", "linspace", "(", "sid", ",", "eid", ",", "num_sample", ")", "\n", "\n", "", "u", "=", "-", "np", ".", "pi", "+", "x", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "v", "=", "computeUVN", "(", "n", ",", "u", ",", "lines", "[", "i", ",", "3", "]", ")", "\n", "xyz", "=", "uv2xyzN", "(", "np", ".", "hstack", "(", "[", "u", ",", "v", "]", ")", ",", "lines", "[", "i", ",", "3", "]", ")", "\n", "uv", "=", "xyz2uvN", "(", "xyz", ",", "1", ")", "\n", "\n", "r", "=", "np", ".", "minimum", "(", "np", ".", "floor", "(", "(", "uv", "[", ":", ",", "0", "]", "+", "np", ".", "pi", ")", "/", "(", "2", "*", "np", ".", "pi", ")", "*", "im_w", ")", "+", "1", ",", "\n", "im_w", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "c", "=", "np", ".", "minimum", "(", "np", ".", "floor", "(", "(", "np", ".", "pi", "/", "2", "-", "uv", "[", ":", ",", "1", "]", ")", "/", "np", ".", "pi", "*", "im_h", ")", "+", "1", ",", "\n", "im_h", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "cs", ".", "extend", "(", "r", "-", "1", ")", "\n", "rs", ".", "extend", "(", "c", "-", "1", ")", "\n", "", "return", "rs", ",", "cs", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.draw_boundary": [[266, 298], ["pano.get_ini_cor", "range", "numpy.vstack", "pano.lineIdxFromCors", "pano_opt.optimize_cor_id", "len", "np.vstack.append", "np.vstack.append", "numpy.zeros", "img_src.astype", "len", "len"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.get_ini_cor", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.lineIdxFromCors", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.optimize_cor_id"], ["", "def", "draw_boundary", "(", "cor_src", ",", "img_src", "=", "None", ",", "post_optimize", "=", "False", ",", "edg_src", "=", "None", ")", ":", "\n", "    ", "'''\n    @cor_src (numpy array H x W x 1, [0, 255])\n        model output corner probability map\n    @img_src (numpy array H x W x 3, [0, 255])\n    '''", "\n", "assert", "not", "post_optimize", "or", "edg_src", "is", "not", "None", "\n", "\n", "im_h", ",", "im_w", "=", "cor_src", ".", "shape", "\n", "cor_id", "=", "get_ini_cor", "(", "cor_src", ")", "\n", "if", "post_optimize", ":", "\n", "        ", "assert", "len", "(", "edg_src", ".", "shape", ")", "==", "3", "\n", "assert", "edg_src", ".", "shape", "[", ":", "2", "]", "==", "cor_src", ".", "shape", "[", ":", "2", "]", "\n", "assert", "edg_src", ".", "shape", "[", "2", "]", "==", "3", "\n", "cor_id", "=", "optimize_cor_id", "(", "cor_id", ",", "edg_src", ",", "cor_src", ")", "\n", "", "cor_all", "=", "[", "cor_id", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "cor_id", ")", ")", ":", "\n", "        ", "cor_all", ".", "append", "(", "cor_id", "[", "i", ",", ":", "]", ")", "\n", "cor_all", ".", "append", "(", "cor_id", "[", "(", "i", "+", "2", ")", "%", "len", "(", "cor_id", ")", ",", ":", "]", ")", "\n", "", "cor_all", "=", "np", ".", "vstack", "(", "cor_all", ")", "\n", "\n", "rs", ",", "cs", "=", "lineIdxFromCors", "(", "cor_all", ",", "im_w", ",", "im_h", ")", "\n", "\n", "if", "img_src", "is", "None", ":", "\n", "        ", "panoEdgeC", "=", "np", ".", "zeros", "(", "(", "im_h", ",", "im_w", ",", "3", ")", ",", "np", ".", "uint8", ")", "\n", "", "else", ":", "\n", "        ", "panoEdgeC", "=", "img_src", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "assert", "img_src", ".", "shape", "[", "0", "]", "==", "im_h", "and", "img_src", ".", "shape", "[", "1", "]", "==", "im_w", "\n", "\n", "", "panoEdgeC", "[", "rs", ",", "cs", ",", "1", "]", "=", "255", "\n", "\n", "return", "panoEdgeC", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.draw_boundary_from_cor_id": [[300, 317], ["range", "numpy.vstack", "pano.lineIdxFromCors", "numpy.array", "numpy.array", "img_src.astype", "len", "np.vstack.append", "np.vstack.append", "numpy.clip", "numpy.clip", "len"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.lineIdxFromCors"], ["", "def", "draw_boundary_from_cor_id", "(", "cor_id", ",", "img_src", ")", ":", "\n", "    ", "im_h", ",", "im_w", "=", "img_src", ".", "shape", "[", ":", "2", "]", "\n", "cor_all", "=", "[", "cor_id", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "cor_id", ")", ")", ":", "\n", "        ", "cor_all", ".", "append", "(", "cor_id", "[", "i", ",", ":", "]", ")", "\n", "cor_all", ".", "append", "(", "cor_id", "[", "(", "i", "+", "2", ")", "%", "len", "(", "cor_id", ")", ",", ":", "]", ")", "\n", "", "cor_all", "=", "np", ".", "vstack", "(", "cor_all", ")", "\n", "\n", "rs", ",", "cs", "=", "lineIdxFromCors", "(", "cor_all", ",", "im_w", ",", "im_h", ")", "\n", "rs", "=", "np", ".", "array", "(", "rs", ")", "\n", "cs", "=", "np", ".", "array", "(", "cs", ")", "\n", "\n", "panoEdgeC", "=", "img_src", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "for", "dx", ",", "dy", "in", "[", "[", "-", "1", ",", "0", "]", ",", "[", "1", ",", "0", "]", ",", "[", "0", ",", "0", "]", ",", "[", "0", ",", "1", "]", ",", "[", "0", ",", "-", "1", "]", "]", ":", "\n", "        ", "panoEdgeC", "[", "np", ".", "clip", "(", "rs", "+", "dx", ",", "0", ",", "im_h", "-", "1", ")", ",", "np", ".", "clip", "(", "cs", "+", "dy", ",", "0", ",", "im_w", "-", "1", ")", ",", "1", "]", "=", "255", "\n", "\n", "", "return", "panoEdgeC", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.coorx2u": [[319, 321], ["None"], "function", ["None"], ["", "def", "coorx2u", "(", "x", ",", "w", "=", "1024", ")", ":", "\n", "    ", "return", "(", "(", "x", "+", "0.5", ")", "/", "w", "-", "0.5", ")", "*", "2", "*", "np", ".", "pi", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.coory2v": [[322, 324], ["None"], "function", ["None"], ["", "def", "coory2v", "(", "y", ",", "h", "=", "512", ")", ":", "\n", "    ", "return", "(", "(", "y", "+", "0.5", ")", "/", "h", "-", "0.5", ")", "*", "np", ".", "pi", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.u2coorx": [[325, 327], ["None"], "function", ["None"], ["", "def", "u2coorx", "(", "u", ",", "w", "=", "1024", ")", ":", "\n", "    ", "return", "(", "u", "/", "(", "2", "*", "np", ".", "pi", ")", "+", "0.5", ")", "*", "w", "-", "0.5", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.v2coory": [[328, 330], ["None"], "function", ["None"], ["", "def", "v2coory", "(", "v", ",", "h", "=", "512", ")", ":", "\n", "    ", "return", "(", "v", "/", "np", ".", "pi", "+", "0.5", ")", "*", "h", "-", "0.5", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.uv2xy": [[331, 336], ["numpy.tan", "numpy.cos", "numpy.sin"], "function", ["None"], ["", "def", "uv2xy", "(", "u", ",", "v", ",", "z", "=", "-", "50", ")", ":", "\n", "    ", "c", "=", "z", "/", "np", ".", "tan", "(", "v", ")", "\n", "x", "=", "c", "*", "np", ".", "cos", "(", "u", ")", "\n", "y", "=", "c", "*", "np", ".", "sin", "(", "u", ")", "\n", "return", "x", ",", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.pano_connect_points": [[338, 363], ["pano.coorx2u", "pano.coory2v", "pano.coorx2u", "pano.coory2v", "pano.uv2xy", "pano.uv2xy", "pano.coorx2u", "numpy.sqrt", "numpy.arctan2", "pano.v2coory", "numpy.stack", "abs", "numpy.ceil", "numpy.floor", "numpy.ceil", "numpy.floor", "min", "max", "max", "min", "numpy.arange", "numpy.tan", "numpy.tan"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.coorx2u", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.coory2v", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.coorx2u", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.coory2v", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.uv2xy", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.uv2xy", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.coorx2u", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.v2coory"], ["", "def", "pano_connect_points", "(", "p1", ",", "p2", ",", "z", "=", "-", "50", ",", "w", "=", "1024", ",", "h", "=", "512", ")", ":", "\n", "    ", "u1", "=", "coorx2u", "(", "p1", "[", "0", "]", ",", "w", ")", "\n", "v1", "=", "coory2v", "(", "p1", "[", "1", "]", ",", "h", ")", "\n", "u2", "=", "coorx2u", "(", "p2", "[", "0", "]", ",", "w", ")", "\n", "v2", "=", "coory2v", "(", "p2", "[", "1", "]", ",", "h", ")", "\n", "\n", "x1", ",", "y1", "=", "uv2xy", "(", "u1", ",", "v1", ",", "z", ")", "\n", "x2", ",", "y2", "=", "uv2xy", "(", "u2", ",", "v2", ",", "z", ")", "\n", "\n", "if", "abs", "(", "p1", "[", "0", "]", "-", "p2", "[", "0", "]", ")", "<", "w", "/", "2", ":", "\n", "        ", "pstart", "=", "np", ".", "ceil", "(", "min", "(", "p1", "[", "0", "]", ",", "p2", "[", "0", "]", ")", ")", "\n", "pend", "=", "np", ".", "floor", "(", "max", "(", "p1", "[", "0", "]", ",", "p2", "[", "0", "]", ")", ")", "\n", "", "else", ":", "\n", "        ", "pstart", "=", "np", ".", "ceil", "(", "max", "(", "p1", "[", "0", "]", ",", "p2", "[", "0", "]", ")", ")", "\n", "pend", "=", "np", ".", "floor", "(", "min", "(", "p1", "[", "0", "]", ",", "p2", "[", "0", "]", ")", "+", "w", ")", "\n", "", "coorxs", "=", "(", "np", ".", "arange", "(", "pstart", ",", "pend", "+", "1", ")", "%", "w", ")", ".", "astype", "(", "np", ".", "float64", ")", "\n", "vx", "=", "x2", "-", "x1", "\n", "vy", "=", "y2", "-", "y1", "\n", "us", "=", "coorx2u", "(", "coorxs", ",", "w", ")", "\n", "ps", "=", "(", "np", ".", "tan", "(", "us", ")", "*", "x1", "-", "y1", ")", "/", "(", "vy", "-", "np", ".", "tan", "(", "us", ")", "*", "vx", ")", "\n", "cs", "=", "np", ".", "sqrt", "(", "(", "x1", "+", "ps", "*", "vx", ")", "**", "2", "+", "(", "y1", "+", "ps", "*", "vy", ")", "**", "2", ")", "\n", "vs", "=", "np", ".", "arctan2", "(", "z", ",", "cs", ")", "\n", "coorys", "=", "v2coory", "(", "vs", ")", "\n", "\n", "return", "np", ".", "stack", "(", "[", "coorxs", ",", "coorys", "]", ",", "axis", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.model.SegNet.__init__": [[61, 96], ["torch.Module.__init__", "torch.Upsample", "torch.Upsample", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.data_generator.ShapeNetDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "encoder", ",", "num_classes", ")", ":", "\n", "        ", "super", "(", "SegNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "resnet", "=", "encoder", "\n", "self", ".", "upsample", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", "\n", "\n", "# resnet50", "\n", "#        self.conv1 = nn.Conv2d(2048, 1024, kernel_size=3, stride=1, padding=1)", "\n", "#        self.conv2 = nn.Conv2d(2048, 512, kernel_size=3, stride=1, padding=1)", "\n", "#        self.conv3 = nn.Conv2d(1024, 256, kernel_size=3, stride=1, padding=1)", "\n", "#        self.conv4 = nn.Conv2d(512, 64, kernel_size=3, stride=1, padding=1)", "\n", "#        self.conv5 = nn.Conv2d(128, 3, kernel_size=3, stride=1, padding=1)", "\n", "#        #self.conv5 = nn.Conv2d(128, 1, kernel_size=3, stride=1, padding=1)", "\n", "\n", "#        self.conv11 = nn.Conv2d(2048, 1024, kernel_size=3, stride=1, padding=1)", "\n", "#        self.conv22 = nn.Conv2d(2048+1024, 512, kernel_size=3, stride=1, padding=1)", "\n", "#        self.conv33 = nn.Conv2d(1024+512, 256, kernel_size=3, stride=1, padding=1)", "\n", "#        self.conv44 = nn.Conv2d(512+256, 64, kernel_size=3, stride=1, padding=1)", "\n", "#        self.conv55 = nn.Conv2d(128+64, 1, kernel_size=3, stride=1, padding=1)", "\n", "\n", "# resnet18/34", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "512", ",", "256", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "512", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "256", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "#self.conv5 = nn.Conv2d(128, 1, kernel_size=3, stride=1, padding=1)", "\n", "self", ".", "conv5", "=", "nn", ".", "Conv2d", "(", "128", ",", "3", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "conv11", "=", "nn", ".", "Conv2d", "(", "512", ",", "256", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv22", "=", "nn", ".", "Conv2d", "(", "512", "+", "256", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv33", "=", "nn", ".", "Conv2d", "(", "256", "+", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv44", "=", "nn", ".", "Conv2d", "(", "128", "+", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv55", "=", "nn", ".", "Conv2d", "(", "128", "+", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.model.SegNet.forward": [[97, 124], ["model.SegNet.resnet", "model.SegNet.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.SegNet.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.SegNet.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.SegNet.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.SegNet.sigmoid", "model.SegNet.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.SegNet.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.SegNet.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.SegNet.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.SegNet.sigmoid", "model.SegNet.conv1", "model.SegNet.conv2", "model.SegNet.conv3", "model.SegNet.conv4", "model.SegNet.conv5", "model.SegNet.conv11", "model.SegNet.conv22", "model.SegNet.conv33", "model.SegNet.conv44", "model.SegNet.conv55", "model.SegNet.upsample", "model.SegNet.upsample", "model.SegNet.upsample", "model.SegNet.upsample", "model.SegNet.upsample", "model.SegNet.upsample", "model.SegNet.upsample", "model.SegNet.upsample", "model.SegNet.upsample", "model.SegNet.upsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "images", ")", ":", "\n", "        ", "x4", ",", "x3", ",", "x2", ",", "x1", ",", "x0", "=", "self", ".", "resnet", "(", "images", ")", "\n", "\n", "# decoder", "\n", "# lay", "\n", "x3_", "=", "self", ".", "relu", "(", "self", ".", "conv1", "(", "self", ".", "upsample", "(", "x4", ")", ")", ")", "\n", "x3_c", "=", "torch", ".", "cat", "(", "(", "x3_", ",", "x3", ")", ",", "1", ")", "\n", "x2_", "=", "self", ".", "relu", "(", "self", ".", "conv2", "(", "self", ".", "upsample", "(", "x3_c", ")", ")", ")", "\n", "x2_c", "=", "torch", ".", "cat", "(", "(", "x2_", ",", "x2", ")", ",", "1", ")", "\n", "x1_", "=", "self", ".", "relu", "(", "self", ".", "conv3", "(", "self", ".", "upsample", "(", "x2_c", ")", ")", ")", "\n", "x1_c", "=", "torch", ".", "cat", "(", "(", "x1_", ",", "x1", ")", ",", "1", ")", "\n", "x0_", "=", "self", ".", "relu", "(", "self", ".", "conv4", "(", "self", ".", "upsample", "(", "x1_c", ")", ")", ")", "\n", "x0_c", "=", "torch", ".", "cat", "(", "(", "x0_", ",", "x0", ")", ",", "1", ")", "\n", "x0_cs", "=", "self", ".", "sigmoid", "(", "self", ".", "conv5", "(", "self", ".", "upsample", "(", "x0_c", ")", ")", ")", "\n", "\n", "# cor", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "conv11", "(", "self", ".", "upsample", "(", "x4", ")", ")", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x", ",", "x3_c", ")", ",", "1", ")", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "conv22", "(", "self", ".", "upsample", "(", "x", ")", ")", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x", ",", "x2_c", ")", ",", "1", ")", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "conv33", "(", "self", ".", "upsample", "(", "x", ")", ")", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x", ",", "x1_c", ")", ",", "1", ")", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "conv44", "(", "self", ".", "upsample", "(", "x", ")", ")", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x", ",", "x0_c", ")", ",", "1", ")", "\n", "x", "=", "self", ".", "sigmoid", "(", "self", ".", "conv55", "(", "self", ".", "upsample", "(", "x", ")", ")", ")", "\n", "\n", "return", "x0_cs", ",", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.model.initialize_encoder": [[12, 58], ["resnet_seg_ae.resnet18", "torch.Linear", "resnet_seg_ae.resnet34", "torch.Linear", "resnet_seg_ae.resnet50", "torch.Linear", "resnet_seg_ae.resnet101", "torch.Linear", "print", "exit"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.resnet_seg_ae.resnet18", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.resnet_seg_ae.resnet34", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.resnet_seg_ae.resnet50", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.resnet_seg_ae.resnet101"], ["def", "initialize_encoder", "(", "model_name", ",", "num_classes", ",", "use_pretrained", "=", "True", ")", ":", "\n", "# Initialize these variables which will be set in this if statement. Each of these", "\n", "#   variables is model specific.", "\n", "    ", "model_ft", "=", "None", "\n", "\n", "if", "model_name", "==", "\"resnet18\"", ":", "\n", "        ", "\"\"\" Resnet18\n        \"\"\"", "\n", "#model_ft = models.resnet18(pretrained=use_pretrained)", "\n", "model_ft", "=", "resnet", ".", "resnet18", "(", "pretrained", "=", "use_pretrained", ",", "num_classes", "=", "1000", ")", "\n", "#set_parameter_requires_grad(model_ft)", "\n", "num_ftrs", "=", "model_ft", ".", "fc", ".", "in_features", "\n", "model_ft", ".", "fc", "=", "nn", ".", "Linear", "(", "num_ftrs", ",", "num_classes", ")", "\n", "\n", "", "elif", "model_name", "==", "\"resnet34\"", ":", "\n", "        ", "\"\"\" Resnet34\n        \"\"\"", "\n", "#model_ft = models.resnet34(pretrained=use_pretrained)", "\n", "model_ft", "=", "resnet", ".", "resnet34", "(", "pretrained", "=", "use_pretrained", ",", "num_classes", "=", "1000", ")", "\n", "#set_parameter_requires_grad(model_ft)", "\n", "num_ftrs", "=", "model_ft", ".", "fc", ".", "in_features", "\n", "model_ft", ".", "fc", "=", "nn", ".", "Linear", "(", "num_ftrs", ",", "num_classes", ")", "\n", "\n", "", "elif", "model_name", "==", "\"resnet50\"", ":", "\n", "        ", "\"\"\" Resnet50\n        \"\"\"", "\n", "#model_ft = models.resnet50(pretrained=use_pretrained)", "\n", "model_ft", "=", "resnet", ".", "resnet50", "(", "pretrained", "=", "use_pretrained", ",", "num_classes", "=", "1000", ")", "\n", "#set_parameter_requires_grad(model_ft)", "\n", "num_ftrs", "=", "model_ft", ".", "fc", ".", "in_features", "\n", "model_ft", ".", "fc", "=", "nn", ".", "Linear", "(", "num_ftrs", ",", "num_classes", ")", "\n", "\n", "", "elif", "model_name", "==", "\"resnet101\"", ":", "\n", "        ", "\"\"\" Resnet101\n        \"\"\"", "\n", "#model_ft = models.resnet101(pretrained=use_pretrained)", "\n", "model_ft", "=", "resnet", ".", "resnet101", "(", "pretrained", "=", "use_pretrained", ",", "num_classes", "=", "1000", ")", "\n", "#set_parameter_requires_grad(model_ft)", "\n", "num_ftrs", "=", "model_ft", ".", "fc", ".", "in_features", "\n", "model_ft", ".", "fc", "=", "nn", ".", "Linear", "(", "num_ftrs", ",", "num_classes", ")", "\n", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"Invalid model name, exiting...\"", ")", "\n", "exit", "(", ")", "\n", "\n", "", "return", "model_ft", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.model.set_parameter_requires_grad": [[126, 129], ["model.parameters"], "function", ["None"], ["", "", "def", "set_parameter_requires_grad", "(", "model", ")", ":", "\n", "    ", "for", "param", "in", "model", ".", "parameters", "(", ")", ":", "\n", "        ", "param", ".", "requires_grad", "=", "True", "\n", "", "", ""]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.resnet_seg_ae.BasicBlock.__init__": [[28, 37], ["torch.Module.__init__", "resnet_seg_ae.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_seg_ae.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.data_generator.ShapeNetDataset.__init__", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.resnet_seg_ae.conv3x3", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.resnet_seg_ae.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.resnet_seg_ae.BasicBlock.forward": [[38, 55], ["resnet_seg_ae.BasicBlock.conv1", "resnet_seg_ae.BasicBlock.bn1", "resnet_seg_ae.BasicBlock.relu", "resnet_seg_ae.BasicBlock.conv2", "resnet_seg_ae.BasicBlock.bn2", "resnet_seg_ae.BasicBlock.relu", "resnet_seg_ae.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.resnet_seg_ae.Bottleneck.__init__": [[60, 72], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.data_generator.ShapeNetDataset.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "*", "4", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "4", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.resnet_seg_ae.Bottleneck.forward": [[73, 94], ["resnet_seg_ae.Bottleneck.conv1", "resnet_seg_ae.Bottleneck.bn1", "resnet_seg_ae.Bottleneck.relu", "resnet_seg_ae.Bottleneck.conv2", "resnet_seg_ae.Bottleneck.bn2", "resnet_seg_ae.Bottleneck.relu", "resnet_seg_ae.Bottleneck.conv3", "resnet_seg_ae.Bottleneck.bn3", "resnet_seg_ae.Bottleneck.relu", "resnet_seg_ae.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.resnet_seg_ae.ResNet.__init__": [[98, 122], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "resnet_seg_ae.ResNet._make_layer", "resnet_seg_ae.ResNet._make_layer", "resnet_seg_ae.ResNet._make_layer", "resnet_seg_ae.ResNet._make_layer", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "resnet_seg_ae.ResNet.modules", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.data_generator.ShapeNetDataset.__init__", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.resnet_seg_ae.ResNet._make_layer", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.resnet_seg_ae.ResNet._make_layer", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.resnet_seg_ae.ResNet._make_layer", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.resnet_seg_ae.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "num_classes", "=", "1000", ")", ":", "\n", "        ", "self", ".", "inplanes", "=", "64", "\n", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "#self.conv1 = nn.Conv2d(3, 64, kernel_size=7, stride=2, padding=3,", "\n", "#                       bias=False)", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "6", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AvgPool2d", "(", "7", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "num_classes", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.resnet_seg_ae.ResNet._make_layer": [[123, 139], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "block"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.resnet_seg_ae.ResNet.forward": [[140, 156], ["resnet_seg_ae.ResNet.conv1", "resnet_seg_ae.ResNet.bn1", "resnet_seg_ae.ResNet.relu", "resnet_seg_ae.ResNet.maxpool", "resnet_seg_ae.ResNet.layer1", "resnet_seg_ae.ResNet.layer2", "resnet_seg_ae.ResNet.layer3", "resnet_seg_ae.ResNet.layer4"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x0", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x0", ")", "\n", "\n", "x1", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x2", "=", "self", ".", "layer2", "(", "x1", ")", "\n", "x3", "=", "self", ".", "layer3", "(", "x2", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x3", ")", "\n", "\n", "#x = self.avgpool(x)", "\n", "#x = x.view(x.size(0), -1)", "\n", "#x = self.fc(x)", "\n", "\n", "return", "x", ",", "x3", ",", "x2", ",", "x1", ",", "x0", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.resnet_seg_ae.conv3x3": [[19, 23], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"3x3 convolution with padding\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.resnet_seg_ae.resnet18": [[158, 173], ["resnet_seg_ae.ResNet", "torch.load_url", "ResNet.state_dict", "torch.cat", "torch.cat", "torch.cat", "model.state_dict.update", "ResNet.load_state_dict", "model_zoo.load_url.items"], "function", ["None"], ["", "", "def", "resnet18", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-18 model.\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "pretrained_dict", "=", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet18'", "]", ")", "\n", "model_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "pretrained_dict", "[", "'conv1.weight'", "]", "=", "torch", ".", "cat", "(", "(", "pretrained_dict", "[", "'conv1.weight'", "]", ",", "model_dict", "[", "'conv1.weight'", "]", "[", ":", ",", "3", ":", ",", ":", ",", ":", "]", ")", ",", "1", ")", "\n", "pretrained_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "pretrained_dict", ".", "items", "(", ")", "if", "k", "in", "model_dict", "}", "\n", "model_dict", ".", "update", "(", "pretrained_dict", ")", "\n", "model", ".", "load_state_dict", "(", "model_dict", ")", "\n", "#model.load_state_dict(model_zoo.load_url(model_urls['resnet18']))", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.resnet_seg_ae.resnet34": [[175, 190], ["resnet_seg_ae.ResNet", "torch.load_url", "ResNet.state_dict", "torch.cat", "torch.cat", "torch.cat", "model.state_dict.update", "ResNet.load_state_dict", "model_zoo.load_url.items"], "function", ["None"], ["", "def", "resnet34", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-34 model.\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "pretrained_dict", "=", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet34'", "]", ")", "\n", "model_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "pretrained_dict", "[", "'conv1.weight'", "]", "=", "torch", ".", "cat", "(", "(", "pretrained_dict", "[", "'conv1.weight'", "]", ",", "model_dict", "[", "'conv1.weight'", "]", "[", ":", ",", "3", ":", ",", ":", ",", ":", "]", ")", ",", "1", ")", "\n", "pretrained_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "pretrained_dict", ".", "items", "(", ")", "if", "k", "in", "model_dict", "}", "\n", "model_dict", ".", "update", "(", "pretrained_dict", ")", "\n", "model", ".", "load_state_dict", "(", "model_dict", ")", "\n", "#model.load_state_dict(model_zoo.load_url(model_urls['resnet34']))", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.resnet_seg_ae.resnet50": [[192, 207], ["resnet_seg_ae.ResNet", "torch.load_url", "ResNet.state_dict", "torch.cat", "torch.cat", "torch.cat", "model.state_dict.update", "ResNet.load_state_dict", "model_zoo.load_url.items"], "function", ["None"], ["", "def", "resnet50", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-50 model.\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "pretrained_dict", "=", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet50'", "]", ")", "\n", "model_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "pretrained_dict", "[", "'conv1.weight'", "]", "=", "torch", ".", "cat", "(", "(", "pretrained_dict", "[", "'conv1.weight'", "]", ",", "model_dict", "[", "'conv1.weight'", "]", "[", ":", ",", "3", ":", ",", ":", ",", ":", "]", ")", ",", "1", ")", "\n", "pretrained_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "pretrained_dict", ".", "items", "(", ")", "if", "k", "in", "model_dict", "}", "\n", "model_dict", ".", "update", "(", "pretrained_dict", ")", "\n", "model", ".", "load_state_dict", "(", "model_dict", ")", "\n", "#model.load_state_dict(model_zoo.load_url(model_urls['resnet50']))", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.resnet_seg_ae.resnet101": [[209, 218], ["resnet_seg_ae.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet101", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-101 model.\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet101'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.resnet_seg_ae.resnet152": [[220, 229], ["resnet_seg_ae.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet152", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-152 model.\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet152'", "]", ")", ")", "\n", "", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.uv_meshgrid": [[6, 12], ["numpy.stack", "uv.astype.astype", "numpy.meshgrid", "range", "range"], "function", ["None"], ["def", "uv_meshgrid", "(", "w", ",", "h", ")", ":", "\n", "    ", "uv", "=", "np", ".", "stack", "(", "np", ".", "meshgrid", "(", "range", "(", "w", ")", ",", "range", "(", "h", ")", ")", ",", "axis", "=", "-", "1", ")", "\n", "uv", "=", "uv", ".", "astype", "(", "np", ".", "float64", ")", "\n", "uv", "[", "...", ",", "0", "]", "=", "(", "(", "uv", "[", "...", ",", "0", "]", "+", "0.5", ")", "/", "w", "-", "0.5", ")", "*", "2", "*", "np", ".", "pi", "\n", "uv", "[", "...", ",", "1", "]", "=", "(", "(", "uv", "[", "...", ",", "1", "]", "+", "0.5", ")", "/", "h", "-", "0.5", ")", "*", "np", ".", "pi", "\n", "return", "uv", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch._uv_tri": [[14, 21], ["functools.lru_cache", "panostretch.uv_meshgrid", "numpy.sin", "numpy.cos", "numpy.tan"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.uv_meshgrid"], ["", "@", "functools", ".", "lru_cache", "(", ")", "\n", "def", "_uv_tri", "(", "w", ",", "h", ")", ":", "\n", "    ", "uv", "=", "uv_meshgrid", "(", "w", ",", "h", ")", "\n", "sin_u", "=", "np", ".", "sin", "(", "uv", "[", "...", ",", "0", "]", ")", "\n", "cos_u", "=", "np", ".", "cos", "(", "uv", "[", "...", ",", "0", "]", ")", "\n", "tan_v", "=", "np", ".", "tan", "(", "uv", "[", "...", ",", "1", "]", ")", "\n", "return", "sin_u", ",", "cos_u", ",", "tan_v", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.uv_tri": [[23, 26], ["panostretch._uv_tri", "sin_u.copy", "cos_u.copy", "tan_v.copy"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch._uv_tri"], ["", "def", "uv_tri", "(", "w", ",", "h", ")", ":", "\n", "    ", "sin_u", ",", "cos_u", ",", "tan_v", "=", "_uv_tri", "(", "w", ",", "h", ")", "\n", "return", "sin_u", ".", "copy", "(", ")", ",", "cos_u", ".", "copy", "(", ")", ",", "tan_v", ".", "copy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.coorx2u": [[28, 30], ["None"], "function", ["None"], ["", "def", "coorx2u", "(", "x", ",", "w", "=", "1024", ")", ":", "\n", "    ", "return", "(", "(", "x", "+", "0.5", ")", "/", "w", "-", "0.5", ")", "*", "2", "*", "np", ".", "pi", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.coory2v": [[32, 34], ["None"], "function", ["None"], ["", "def", "coory2v", "(", "y", ",", "h", "=", "512", ")", ":", "\n", "    ", "return", "(", "(", "y", "+", "0.5", ")", "/", "h", "-", "0.5", ")", "*", "np", ".", "pi", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.u2coorx": [[36, 38], ["None"], "function", ["None"], ["", "def", "u2coorx", "(", "u", ",", "w", "=", "1024", ")", ":", "\n", "    ", "return", "(", "u", "/", "(", "2", "*", "np", ".", "pi", ")", "+", "0.5", ")", "*", "w", "-", "0.5", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.v2coory": [[40, 42], ["None"], "function", ["None"], ["", "def", "v2coory", "(", "v", ",", "h", "=", "512", ")", ":", "\n", "    ", "return", "(", "v", "/", "np", ".", "pi", "+", "0.5", ")", "*", "h", "-", "0.5", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.uv2xy": [[44, 49], ["numpy.tan", "numpy.cos", "numpy.sin"], "function", ["None"], ["", "def", "uv2xy", "(", "u", ",", "v", ",", "z", "=", "-", "50", ")", ":", "\n", "    ", "c", "=", "z", "/", "np", ".", "tan", "(", "v", ")", "\n", "x", "=", "c", "*", "np", ".", "cos", "(", "u", ")", "\n", "y", "=", "c", "*", "np", ".", "sin", "(", "u", ")", "\n", "return", "x", ",", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.pano_connect_points": [[51, 79], ["panostretch.coorx2u", "panostretch.coory2v", "panostretch.coorx2u", "panostretch.coory2v", "panostretch.uv2xy", "panostretch.uv2xy", "panostretch.coorx2u", "numpy.sqrt", "numpy.arctan2", "panostretch.v2coory", "numpy.stack", "numpy.array", "abs", "numpy.ceil", "numpy.floor", "numpy.ceil", "numpy.floor", "min", "max", "max", "min", "numpy.arange", "numpy.tan", "numpy.tan"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.coorx2u", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.coory2v", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.coorx2u", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.coory2v", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.uv2xy", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.uv2xy", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.coorx2u", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.v2coory"], ["", "def", "pano_connect_points", "(", "p1", ",", "p2", ",", "z", "=", "-", "50", ",", "w", "=", "1024", ",", "h", "=", "512", ")", ":", "\n", "    ", "if", "p1", "[", "0", "]", "==", "p2", "[", "0", "]", ":", "\n", "        ", "return", "np", ".", "array", "(", "[", "p1", ",", "p2", "]", ",", "np", ".", "float32", ")", "\n", "\n", "", "u1", "=", "coorx2u", "(", "p1", "[", "0", "]", ",", "w", ")", "\n", "v1", "=", "coory2v", "(", "p1", "[", "1", "]", ",", "h", ")", "\n", "u2", "=", "coorx2u", "(", "p2", "[", "0", "]", ",", "w", ")", "\n", "v2", "=", "coory2v", "(", "p2", "[", "1", "]", ",", "h", ")", "\n", "\n", "x1", ",", "y1", "=", "uv2xy", "(", "u1", ",", "v1", ",", "z", ")", "\n", "x2", ",", "y2", "=", "uv2xy", "(", "u2", ",", "v2", ",", "z", ")", "\n", "\n", "if", "abs", "(", "p1", "[", "0", "]", "-", "p2", "[", "0", "]", ")", "<", "w", "/", "2", ":", "\n", "        ", "pstart", "=", "np", ".", "ceil", "(", "min", "(", "p1", "[", "0", "]", ",", "p2", "[", "0", "]", ")", ")", "\n", "pend", "=", "np", ".", "floor", "(", "max", "(", "p1", "[", "0", "]", ",", "p2", "[", "0", "]", ")", ")", "\n", "", "else", ":", "\n", "        ", "pstart", "=", "np", ".", "ceil", "(", "max", "(", "p1", "[", "0", "]", ",", "p2", "[", "0", "]", ")", ")", "\n", "pend", "=", "np", ".", "floor", "(", "min", "(", "p1", "[", "0", "]", ",", "p2", "[", "0", "]", ")", "+", "w", ")", "\n", "", "coorxs", "=", "(", "np", ".", "arange", "(", "pstart", ",", "pend", "+", "1", ")", "%", "w", ")", ".", "astype", "(", "np", ".", "float64", ")", "\n", "vx", "=", "x2", "-", "x1", "\n", "vy", "=", "y2", "-", "y1", "\n", "us", "=", "coorx2u", "(", "coorxs", ",", "w", ")", "\n", "ps", "=", "(", "np", ".", "tan", "(", "us", ")", "*", "x1", "-", "y1", ")", "/", "(", "vy", "-", "np", ".", "tan", "(", "us", ")", "*", "vx", ")", "\n", "cs", "=", "np", ".", "sqrt", "(", "(", "x1", "+", "ps", "*", "vx", ")", "**", "2", "+", "(", "y1", "+", "ps", "*", "vy", ")", "**", "2", ")", "\n", "vs", "=", "np", ".", "arctan2", "(", "z", ",", "cs", ")", "\n", "coorys", "=", "v2coory", "(", "vs", ")", "\n", "\n", "return", "np", ".", "stack", "(", "[", "coorxs", ",", "coorys", "]", ",", "axis", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.pano_stretch": [[81, 122], ["panostretch.uv_tri", "numpy.arctan2", "numpy.arctan", "numpy.stack", "numpy.stack", "panostretch.coorx2u", "panostretch.coory2v", "numpy.arctan2", "numpy.arctan", "panostretch.u2coorx", "panostretch.v2coory", "numpy.stack", "numpy.cos", "scipy.ndimage.map_coordinates", "scipy.ndimage.map_coordinates", "range", "range", "numpy.sin", "numpy.sin", "numpy.sin", "numpy.tan", "numpy.sin"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.uv_tri", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.coorx2u", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.coory2v", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.u2coorx", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.v2coory", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.map_coordinates", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.map_coordinates"], ["", "def", "pano_stretch", "(", "img", ",", "mask", ",", "corners", ",", "kx", ",", "ky", ",", "order", "=", "1", ")", ":", "\n", "    ", "'''\n    img:     [H, W, C]\n    corners: [N, 2] in image coordinate (x, y) format\n    kx:      Stretching along front-back direction\n    ky:      Stretching along left-right direction\n    order:   Interpolation order. 0 for nearest-neighbor. 1 for bilinear.\n    '''", "\n", "\n", "# Process image", "\n", "sin_u", ",", "cos_u", ",", "tan_v", "=", "uv_tri", "(", "img", ".", "shape", "[", "1", "]", ",", "img", ".", "shape", "[", "0", "]", ")", "\n", "u0", "=", "np", ".", "arctan2", "(", "sin_u", "*", "kx", "/", "ky", ",", "cos_u", ")", "\n", "v0", "=", "np", ".", "arctan", "(", "tan_v", "*", "np", ".", "sin", "(", "u0", ")", "/", "sin_u", "*", "ky", ")", "\n", "\n", "refx", "=", "(", "u0", "/", "(", "2", "*", "np", ".", "pi", ")", "+", "0.5", ")", "*", "img", ".", "shape", "[", "1", "]", "-", "0.5", "\n", "refy", "=", "(", "v0", "/", "np", ".", "pi", "+", "0.5", ")", "*", "img", ".", "shape", "[", "0", "]", "-", "0.5", "\n", "\n", "# [TODO]: using opencv remap could probably speedup the process a little", "\n", "stretched_img", "=", "np", ".", "stack", "(", "[", "\n", "map_coordinates", "(", "img", "[", "...", ",", "i", "]", ",", "[", "refy", ",", "refx", "]", ",", "order", "=", "order", ",", "mode", "=", "'wrap'", ")", "\n", "for", "i", "in", "range", "(", "img", ".", "shape", "[", "-", "1", "]", ")", "\n", "]", ",", "axis", "=", "-", "1", ")", "\n", "stretched_mask", "=", "np", ".", "stack", "(", "[", "\n", "map_coordinates", "(", "mask", "[", "...", ",", "i", "]", ",", "[", "refy", ",", "refx", "]", ",", "order", "=", "order", ",", "mode", "=", "'wrap'", ")", "\n", "for", "i", "in", "range", "(", "mask", ".", "shape", "[", "-", "1", "]", ")", "\n", "]", ",", "axis", "=", "-", "1", ")", "\n", "#stretched_label = np.stack([", "\n", "#    map_coordinates(label[..., i], [refy, refx], order=order, mode='wrap')", "\n", "#    for i in range(label.shape[-1])", "\n", "#], axis=-1)", "\n", "\n", "# Process corners", "\n", "corners_u0", "=", "coorx2u", "(", "corners", "[", ":", ",", "0", "]", ",", "img", ".", "shape", "[", "1", "]", ")", "\n", "corners_v0", "=", "coory2v", "(", "corners", "[", ":", ",", "1", "]", ",", "img", ".", "shape", "[", "0", "]", ")", "\n", "corners_u", "=", "np", ".", "arctan2", "(", "np", ".", "sin", "(", "corners_u0", ")", "*", "ky", "/", "kx", ",", "np", ".", "cos", "(", "corners_u0", ")", ")", "\n", "corners_v", "=", "np", ".", "arctan", "(", "np", ".", "tan", "(", "corners_v0", ")", "*", "np", ".", "sin", "(", "corners_u", ")", "/", "np", ".", "sin", "(", "corners_u0", ")", "/", "ky", ")", "\n", "cornersX", "=", "u2coorx", "(", "corners_u", ",", "img", ".", "shape", "[", "1", "]", ")", "\n", "cornersY", "=", "v2coory", "(", "corners_v", ",", "img", ".", "shape", "[", "0", "]", ")", "\n", "stretched_corners", "=", "np", ".", "stack", "(", "[", "cornersX", ",", "cornersY", "]", ",", "axis", "=", "-", "1", ")", "\n", "\n", "return", "stretched_img", ",", "stretched_mask", ",", "stretched_corners", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.visualize_pano_stretch": [[124, 156], ["range", "range", "cv2.putText", "stretched_img.astype", "panostretch.pano_connect_points", "xys.astype.astype", "panostretch.pano_connect_points", "xys.astype.astype", "numpy.where", "len", "cv2.polylines", "cv2.polylines", "cv2.polylines", "numpy.where", "len", "cv2.polylines", "cv2.polylines", "cv2.polylines"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.pano_connect_points", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.pano_connect_points"], ["", "def", "visualize_pano_stretch", "(", "stretched_img", ",", "stretched_cor", ",", "title", ")", ":", "\n", "    ", "'''\n    Helper function for visualizing the effect of pano_stretch\n    '''", "\n", "thikness", "=", "2", "\n", "color", "=", "(", "0", ",", "255", ",", "0", ")", "\n", "for", "i", "in", "range", "(", "4", ")", ":", "\n", "        ", "xys", "=", "pano_connect_points", "(", "stretched_cor", "[", "i", "*", "2", "]", ",", "stretched_cor", "[", "(", "i", "*", "2", "+", "2", ")", "%", "8", "]", ",", "z", "=", "-", "50", ")", "\n", "xys", "=", "xys", ".", "astype", "(", "int", ")", "\n", "blue_split", "=", "np", ".", "where", "(", "(", "xys", "[", "1", ":", ",", "0", "]", "-", "xys", "[", ":", "-", "1", ",", "0", "]", ")", "<", "0", ")", "[", "0", "]", "\n", "if", "len", "(", "blue_split", ")", "==", "0", ":", "\n", "            ", "cv2", ".", "polylines", "(", "stretched_img", ",", "[", "xys", "]", ",", "False", ",", "color", ",", "2", ")", "\n", "", "else", ":", "\n", "            ", "t", "=", "blue_split", "[", "0", "]", "+", "1", "\n", "cv2", ".", "polylines", "(", "stretched_img", ",", "[", "xys", "[", ":", "t", "]", "]", ",", "False", ",", "color", ",", "thikness", ")", "\n", "cv2", ".", "polylines", "(", "stretched_img", ",", "[", "xys", "[", "t", ":", "]", "]", ",", "False", ",", "color", ",", "thikness", ")", "\n", "\n", "", "", "for", "i", "in", "range", "(", "4", ")", ":", "\n", "        ", "xys", "=", "pano_connect_points", "(", "stretched_cor", "[", "i", "*", "2", "+", "1", "]", ",", "stretched_cor", "[", "(", "i", "*", "2", "+", "3", ")", "%", "8", "]", ",", "z", "=", "50", ")", "\n", "xys", "=", "xys", ".", "astype", "(", "int", ")", "\n", "blue_split", "=", "np", ".", "where", "(", "(", "xys", "[", "1", ":", ",", "0", "]", "-", "xys", "[", ":", "-", "1", ",", "0", "]", ")", "<", "0", ")", "[", "0", "]", "\n", "if", "len", "(", "blue_split", ")", "==", "0", ":", "\n", "            ", "cv2", ".", "polylines", "(", "stretched_img", ",", "[", "xys", "]", ",", "False", ",", "color", ",", "2", ")", "\n", "", "else", ":", "\n", "            ", "t", "=", "blue_split", "[", "0", "]", "+", "1", "\n", "cv2", ".", "polylines", "(", "stretched_img", ",", "[", "xys", "[", ":", "t", "]", "]", ",", "False", ",", "color", ",", "thikness", ")", "\n", "cv2", ".", "polylines", "(", "stretched_img", ",", "[", "xys", "[", "t", ":", "]", "]", ",", "False", ",", "color", ",", "thikness", ")", "\n", "\n", "", "", "cv2", ".", "putText", "(", "stretched_img", ",", "title", ",", "(", "25", ",", "50", ")", ",", "cv2", ".", "FONT_HERSHEY_SIMPLEX", ",", "1", ",", "\n", "(", "0", ",", "0", ",", "0", ")", ",", "2", ",", "cv2", ".", "LINE_AA", ")", "\n", "\n", "return", "stretched_img", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.data_generator.ShapeNetDataset.__init__": [[52, 61], ["print", "next", "os.walk"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "root_dir", ",", "train_type", ",", "transform", "=", "None", ")", ":", "\n", "        ", "print", "(", "root_dir", ")", "\n", "self", ".", "namelist", "=", "next", "(", "os", ".", "walk", "(", "root_dir", ")", ")", "[", "2", "]", "\n", "self", ".", "root_dir", "=", "root_dir", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "train_type", "=", "train_type", "\n", "self", ".", "max_stretch", "=", "2.0", "\n", "self", ".", "im_w", "=", "1024", "\n", "self", ".", "im_h", "=", "512", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.data_generator.ShapeNetDataset.__len__": [[62, 64], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "namelist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.data_generator.ShapeNetDataset.__getitem__": [[65, 202], ["pickle.load", "pkl[].astype", "pkl[].astype", "pkl[].astype", "pkl[].astype", "numpy.argsort", "range", "numpy.zeros", "numpy.zeros_like", "range", "numpy.zeros", "range", "numpy.zeros", "range", "numpy.stack", "numpy.zeros", "range", "numpy.expand_dims", "numpy.clip", "numpy.clip", "numpy.clip", "numpy.clip", "numpy.concatenate", "open", "data_generator.cor2xybound", "numpy.random.uniform", "numpy.random.uniform", "panostretch.pano_stretch", "random.seed", "int", "numpy.concatenate", "numpy.concatenate", "numpy.argsort", "pano.draw_boundary_from_cor_id", "scipy.ndimage.gaussian_filter", "scipy.ndimage.gaussian_filter", "numpy.maximum", "pano.draw_boundary_from_cor_id", "scipy.ndimage.gaussian_filter", "scipy.ndimage.gaussian_filter", "numpy.maximum", "pano.draw_boundary_from_cor_id", "scipy.ndimage.gaussian_filter", "scipy.ndimage.gaussian_filter", "numpy.maximum", "numpy.zeros", "int", "int", "scipy.ndimage.gaussian_filter", "scipy.ndimage.gaussian_filter", "numpy.maximum", "random.seed", "skimage.exposure.adjust_gamma", "random.seed", "skimage.exposure.rescale_intensity", "random.seed", "random.seed", "random.seed", "numpy.random.randint", "max", "min", "numpy.random.randint", "max", "min", "numpy.floor", "scipy.ndimage.gaussian_filter.astype", "scipy.ndimage.gaussian_filter.astype", "numpy.max", "panoEdgeC[].astype", "numpy.max", "panoEdgeC[].astype", "numpy.max", "numpy.round", "numpy.round", "numpy.max", "numpy.random.random", "random.uniform", "numpy.fliplr().copy", "numpy.fliplr().copy", "numpy.fliplr().copy", "numpy.fliplr().copy", "min", "max", "min", "max", "numpy.random.random", "numpy.random.random", "numpy.random.random", "numpy.random.random", "numpy.random.random", "numpy.fliplr", "numpy.fliplr", "numpy.fliplr", "numpy.fliplr", "int", "int", "numpy.amax", "numpy.amin"], "methods", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.data_generator.cor2xybound", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.pano_stretch", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.draw_boundary_from_cor_id", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.draw_boundary_from_cor_id", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.draw_boundary_from_cor_id"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "pkl_path", "=", "self", ".", "root_dir", "+", "self", ".", "namelist", "[", "idx", "]", "\n", "pkl", "=", "pkl", "=", "pickle", ".", "load", "(", "open", "(", "pkl_path", ",", "'rb'", ")", ")", "\n", "img", "=", "pkl", "[", "'image'", "]", ".", "astype", "(", "'float32'", ")", "\n", "label", "=", "pkl", "[", "'edge'", "]", ".", "astype", "(", "'float32'", ")", "\n", "mask", "=", "pkl", "[", "'line'", "]", ".", "astype", "(", "'float32'", ")", "\n", "cor", "=", "pkl", "[", "'cor'", "]", ".", "astype", "(", "'float32'", ")", "\n", "\n", "# data augmentation", "\n", "if", "self", ".", "train_type", "==", "'train'", ":", "\n", "# random streching", "\n", "            ", "xmin", ",", "ymin", ",", "xmax", ",", "ymax", "=", "cor2xybound", "(", "cor", ")", "\n", "kx", "=", "np", ".", "random", ".", "uniform", "(", "1.0", ",", "self", ".", "max_stretch", ")", "\n", "ky", "=", "np", ".", "random", ".", "uniform", "(", "1.0", ",", "self", ".", "max_stretch", ")", "\n", "if", "np", ".", "random", ".", "randint", "(", "2", ")", "==", "0", ":", "\n", "                ", "kx", "=", "max", "(", "1", "/", "kx", ",", "min", "(", "0.5", "/", "xmin", ",", "1.0", ")", ")", "\n", "", "else", ":", "\n", "                ", "kx", "=", "min", "(", "kx", ",", "max", "(", "10.0", "/", "xmax", ",", "1.0", ")", ")", "\n", "", "if", "np", ".", "random", ".", "randint", "(", "2", ")", "==", "0", ":", "\n", "                ", "ky", "=", "max", "(", "1", "/", "ky", ",", "min", "(", "0.5", "/", "ymin", ",", "1.0", ")", ")", "\n", "", "else", ":", "\n", "                ", "ky", "=", "min", "(", "ky", ",", "max", "(", "10.0", "/", "ymax", ",", "1.0", ")", ")", "\n", "", "img", ",", "mask", ",", "cor", "=", "panostretch", ".", "pano_stretch", "(", "img", ",", "mask", ",", "cor", ",", "kx", ",", "ky", ")", "\n", "\n", "# random rotation", "\n", "random", ".", "seed", "(", ")", "\n", "h", "=", "img", ".", "shape", "[", "0", "]", "\n", "w", "=", "img", ".", "shape", "[", "1", "]", "\n", "rot", "=", "int", "(", "np", ".", "floor", "(", "np", ".", "random", ".", "random", "(", ")", "*", "w", ")", ")", "\n", "img", "=", "np", ".", "concatenate", "(", "(", "img", "[", ":", ",", "rot", ":", ",", ":", "]", ",", "img", "[", ":", ",", ":", "rot", ",", ":", "]", ")", ",", "axis", "=", "1", ")", "\n", "mask", "=", "np", ".", "concatenate", "(", "(", "mask", "[", ":", ",", "rot", ":", ",", ":", "]", ",", "mask", "[", ":", ",", ":", "rot", ",", ":", "]", ")", ",", "axis", "=", "1", ")", "\n", "cor", "[", ":", ",", "0", "]", "=", "cor", "[", ":", ",", "0", "]", "-", "rot", "\n", "id", "=", "cor", "[", ":", ",", "0", "]", "<", "0", "\n", "cor", "[", "id", ",", "0", "]", "=", "cor", "[", "id", ",", "0", "]", "+", "1023", "\n", "\n", "# generate line label", "\n", "# sort gt", "\n", "", "cor_id", "=", "np", ".", "argsort", "(", "cor", "[", ":", ",", "0", "]", ")", "\n", "cor", "=", "cor", "[", "cor_id", ",", ":", "]", "\n", "for", "row", "in", "range", "(", "0", ",", "cor", ".", "shape", "[", "0", "]", ",", "2", ")", ":", "\n", "            ", "cor_id", "=", "np", ".", "argsort", "(", "cor", "[", "row", ":", "row", "+", "2", ",", "1", "]", ")", "\n", "cor", "[", "row", ":", "row", "+", "2", ",", ":", "]", "=", "cor", "[", "row", ":", "row", "+", "2", ",", "cor_id", "]", "\n", "# wall", "\n", "", "kpmap_w", "=", "np", ".", "zeros", "(", "(", "self", ".", "im_h", ",", "self", ".", "im_w", ")", ")", "\n", "bg", "=", "np", ".", "zeros_like", "(", "img", ")", "\n", "for", "l_id", "in", "range", "(", "0", ",", "cor", ".", "shape", "[", "0", "]", ",", "2", ")", ":", "\n", "            ", "panoEdgeC", "=", "draw_boundary_from_cor_id", "(", "cor", "[", "l_id", ":", "l_id", "+", "2", ",", ":", "]", ",", "bg", ")", "\n", "# add gaussian", "\n", "panoEdgeC", "=", "panoEdgeC", ".", "astype", "(", "'float32'", ")", "/", "255.0", "\n", "panoEdgeC", "=", "gaussian_filter", "(", "panoEdgeC", "[", ":", ",", ":", ",", "1", "]", ",", "sigma", "=", "20", ")", "\n", "panoEdgeC", "=", "panoEdgeC", "/", "np", ".", "max", "(", "panoEdgeC", ")", "\n", "kpmap_w", "=", "np", ".", "maximum", "(", "kpmap_w", ",", "panoEdgeC", ")", "\n", "# ceil", "\n", "", "kpmap_c", "=", "np", ".", "zeros", "(", "(", "self", ".", "im_h", ",", "self", ".", "im_w", ")", ")", "\n", "cor_all", "=", "cor", "[", "[", "0", ",", "2", ",", "2", ",", "4", ",", "4", ",", "6", ",", "6", ",", "0", "]", ",", ":", "]", "\n", "for", "l_id", "in", "range", "(", "0", ",", "cor_all", ".", "shape", "[", "0", "]", ",", "2", ")", ":", "\n", "            ", "panoEdgeC", "=", "draw_boundary_from_cor_id", "(", "cor_all", "[", "l_id", ":", "l_id", "+", "2", ",", ":", "]", ",", "bg", ")", "\n", "# add gaussian", "\n", "panoEdgeC", "=", "panoEdgeC", "[", ":", ",", ":", ",", "1", "]", ".", "astype", "(", "'float32'", ")", "/", "255.0", "\n", "panoEdgeC", "[", "int", "(", "np", ".", "amax", "(", "cor_all", "[", "l_id", ":", "l_id", "+", "2", ",", "1", "]", ")", ")", "+", "5", ":", ",", ":", "]", "=", "0", "\n", "panoEdgeC", "=", "gaussian_filter", "(", "panoEdgeC", ",", "sigma", "=", "20", ")", "\n", "panoEdgeC", "=", "panoEdgeC", "/", "np", ".", "max", "(", "panoEdgeC", ")", "\n", "kpmap_c", "=", "np", ".", "maximum", "(", "kpmap_c", ",", "panoEdgeC", ")", "\n", "# floor", "\n", "", "kpmap_f", "=", "np", ".", "zeros", "(", "(", "self", ".", "im_h", ",", "self", ".", "im_w", ")", ")", "\n", "cor_all", "=", "cor", "[", "[", "1", ",", "3", ",", "3", ",", "5", ",", "5", ",", "7", ",", "7", ",", "1", "]", ",", ":", "]", "\n", "for", "l_id", "in", "range", "(", "0", ",", "cor_all", ".", "shape", "[", "0", "]", ",", "2", ")", ":", "\n", "            ", "panoEdgeC", "=", "draw_boundary_from_cor_id", "(", "cor_all", "[", "l_id", ":", "l_id", "+", "2", ",", ":", "]", ",", "bg", ")", "\n", "# add gaussian", "\n", "panoEdgeC", "=", "panoEdgeC", "[", ":", ",", ":", ",", "1", "]", ".", "astype", "(", "'float32'", ")", "/", "255.0", "\n", "panoEdgeC", "[", ":", "int", "(", "np", ".", "amin", "(", "cor_all", "[", "l_id", ":", "l_id", "+", "2", ",", "1", "]", ")", ")", "-", "5", ",", ":", "]", "=", "0", "\n", "panoEdgeC", "=", "gaussian_filter", "(", "panoEdgeC", ",", "sigma", "=", "20", ")", "\n", "panoEdgeC", "=", "panoEdgeC", "/", "np", ".", "max", "(", "panoEdgeC", ")", "\n", "kpmap_f", "=", "np", ".", "maximum", "(", "kpmap_f", ",", "panoEdgeC", ")", "\n", "", "label", "=", "np", ".", "stack", "(", "(", "kpmap_w", ",", "kpmap_c", ",", "kpmap_f", ")", ",", "axis", "=", "-", "1", ")", "\n", "\n", "# generate corner label", "\n", "label2", "=", "np", ".", "zeros", "(", "(", "self", ".", "im_h", ",", "self", ".", "im_w", ")", ")", "\n", "for", "l_id", "in", "range", "(", "cor", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "panoEdgeC", "=", "np", ".", "zeros", "(", "(", "self", ".", "im_h", ",", "self", ".", "im_w", ")", ")", "\n", "hh", "=", "int", "(", "np", ".", "round", "(", "cor", "[", "l_id", ",", "1", "]", ")", ")", "\n", "ww", "=", "int", "(", "np", ".", "round", "(", "cor", "[", "l_id", ",", "0", "]", ")", ")", "\n", "panoEdgeC", "[", "hh", "-", "1", ":", "hh", "+", "2", ",", "ww", "]", "=", "1.0", "\n", "panoEdgeC", "[", "hh", ",", "ww", "-", "1", ":", "ww", "+", "2", "]", "=", "1.0", "\n", "# add gaussian", "\n", "panoEdgeC", "=", "gaussian_filter", "(", "panoEdgeC", ",", "sigma", "=", "20", ")", "\n", "panoEdgeC", "=", "panoEdgeC", "/", "np", ".", "max", "(", "panoEdgeC", ")", "\n", "label2", "=", "np", ".", "maximum", "(", "label2", ",", "panoEdgeC", ")", "\n", "", "label2", "=", "np", ".", "expand_dims", "(", "label2", ",", "axis", "=", "2", ")", "\n", "\n", "if", "self", ".", "train_type", "==", "'train'", ":", "\n", "# gamma", "\n", "            ", "random", ".", "seed", "(", ")", "\n", "g_prob", "=", "np", ".", "random", ".", "random", "(", ")", "*", "1", "+", "0.5", "\n", "img", "=", "exposure", ".", "adjust_gamma", "(", "img", ",", "g_prob", ")", "\n", "# intensity", "\n", "random", ".", "seed", "(", ")", "\n", "g_prob", "=", "np", ".", "random", ".", "random", "(", ")", "*", "127", "\n", "img", "=", "exposure", ".", "rescale_intensity", "(", "img", "*", "255.0", ",", "in_range", "=", "(", "g_prob", ",", "255", ")", ")", "\n", "# color channel", "\n", "random", ".", "seed", "(", ")", "\n", "g_prob", "=", "np", ".", "random", ".", "random", "(", ")", "*", "0.4", "+", "0.8", "\n", "img", "[", ":", ",", ":", ",", "0", "]", "=", "img", "[", ":", ",", ":", ",", "0", "]", "*", "g_prob", "\n", "random", ".", "seed", "(", ")", "\n", "g_prob", "=", "np", ".", "random", ".", "random", "(", ")", "*", "0.4", "+", "0.8", "\n", "img", "[", ":", ",", ":", ",", "1", "]", "=", "img", "[", ":", ",", ":", ",", "1", "]", "*", "g_prob", "\n", "random", ".", "seed", "(", ")", "\n", "g_prob", "=", "np", ".", "random", ".", "random", "(", ")", "*", "0.4", "+", "0.8", "\n", "img", "[", ":", ",", ":", ",", "2", "]", "=", "img", "[", ":", ",", ":", ",", "2", "]", "*", "g_prob", "\n", "\n", "# random flip", "\n", "if", "random", ".", "uniform", "(", "0", ",", "1", ")", ">", "0.5", ":", "\n", "                ", "img", "=", "np", ".", "fliplr", "(", "img", ")", ".", "copy", "(", ")", "\n", "mask", "=", "np", ".", "fliplr", "(", "mask", ")", ".", "copy", "(", ")", "\n", "label", "=", "np", ".", "fliplr", "(", "label", ")", ".", "copy", "(", ")", "\n", "label2", "=", "np", ".", "fliplr", "(", "label2", ")", ".", "copy", "(", ")", "\n", "\n", "# reshape", "\n", "", "", "np", ".", "clip", "(", "img", ",", "0.0", ",", "1.0", ",", "out", "=", "img", ")", "\n", "np", ".", "clip", "(", "label", ",", "0.0", ",", "1.0", ",", "out", "=", "label", ")", "\n", "np", ".", "clip", "(", "label2", ",", "0.0", ",", "1.0", ",", "out", "=", "label2", ")", "\n", "np", ".", "clip", "(", "mask", ",", "0.0", ",", "1.0", ",", "out", "=", "mask", ")", "\n", "\n", "img", "=", "np", ".", "concatenate", "(", "(", "img", ",", "mask", ")", ",", "axis", "=", "2", ")", "\n", "\n", "# permute dim", "\n", "if", "self", ".", "transform", ":", "\n", "            ", "if", "self", ".", "train_type", "==", "'train'", ":", "\n", "                ", "img", "=", "data_transforms", "[", "'train'", "]", "(", "img", ")", ".", "float", "(", ")", "\n", "label", "=", "data_transforms", "[", "'train'", "]", "(", "label", ")", ".", "float", "(", ")", "\n", "label2", "=", "data_transforms", "[", "'train'", "]", "(", "label2", ")", ".", "float", "(", ")", "\n", "", "else", ":", "\n", "                ", "img", "=", "data_transforms", "[", "'val'", "]", "(", "img", ")", ".", "float", "(", ")", "\n", "label", "=", "data_transforms", "[", "'val'", "]", "(", "label", ")", ".", "float", "(", ")", "\n", "label2", "=", "data_transforms", "[", "'val'", "]", "(", "label2", ")", ".", "float", "(", ")", "\n", "\n", "", "", "return", "img", ",", "label", ",", "label2", "\n", "", "", ""]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.data_generator.cor2xybound": [[29, 49], ["panostretch.coorx2u", "panostretch.coory2v", "panostretch.coory2v", "panostretch.uv2xy", "numpy.sqrt", "numpy.tan", "x.min", "x.max", "y.min", "y.max", "abs", "abs", "abs", "abs", "abs", "min", "min", "max", "max", "zB.mean"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.coorx2u", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.coory2v", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.coory2v", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.panostretch.uv2xy"], ["def", "cor2xybound", "(", "cor", ")", ":", "\n", "    ", "''' Helper function to clip max/min stretch factor '''", "\n", "corU", "=", "cor", "[", "0", ":", ":", "2", "]", "\n", "corB", "=", "cor", "[", "1", ":", ":", "2", "]", "\n", "zU", "=", "-", "50", "\n", "u", "=", "panostretch", ".", "coorx2u", "(", "corU", "[", ":", ",", "0", "]", ")", "\n", "vU", "=", "panostretch", ".", "coory2v", "(", "corU", "[", ":", ",", "1", "]", ")", "\n", "vB", "=", "panostretch", ".", "coory2v", "(", "corB", "[", ":", ",", "1", "]", ")", "\n", "\n", "x", ",", "y", "=", "panostretch", ".", "uv2xy", "(", "u", ",", "vU", ",", "z", "=", "zU", ")", "\n", "c", "=", "np", ".", "sqrt", "(", "x", "**", "2", "+", "y", "**", "2", ")", "\n", "zB", "=", "c", "*", "np", ".", "tan", "(", "vB", ")", "\n", "xmin", ",", "xmax", "=", "x", ".", "min", "(", ")", ",", "x", ".", "max", "(", ")", "\n", "ymin", ",", "ymax", "=", "y", ".", "min", "(", ")", ",", "y", ".", "max", "(", ")", "\n", "\n", "S", "=", "3", "/", "abs", "(", "zB", ".", "mean", "(", ")", "-", "zU", ")", "\n", "dx", "=", "[", "abs", "(", "xmin", "*", "S", ")", ",", "abs", "(", "xmax", "*", "S", ")", "]", "\n", "dy", "=", "[", "abs", "(", "ymin", "*", "S", ")", ",", "abs", "(", "ymax", "*", "S", ")", "]", "\n", "\n", "return", "min", "(", "dx", ")", ",", "min", "(", "dy", ")", ",", "max", "(", "dx", ")", ",", "max", "(", "dy", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt.vecang": [[8, 12], ["numpy.arccos", "numpy.sqrt", "numpy.sqrt", "numpy.dot"], "function", ["None"], ["def", "vecang", "(", "vec1", ",", "vec2", ")", ":", "\n", "    ", "vec1", "=", "vec1", "/", "np", ".", "sqrt", "(", "(", "vec1", "**", "2", ")", ".", "sum", "(", ")", ")", "\n", "vec2", "=", "vec2", "/", "np", ".", "sqrt", "(", "(", "vec2", "**", "2", ")", ".", "sum", "(", ")", ")", "\n", "return", "np", ".", "arccos", "(", "np", ".", "dot", "(", "vec1", ",", "vec2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt.rotatevec": [[14, 18], ["torch.cat", "torch.cat", "torch.cos", "torch.cos", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.cos", "torch.cos"], "function", ["None"], ["", "def", "rotatevec", "(", "vec", ",", "theta", ")", ":", "\n", "    ", "x", "=", "vec", "[", "0", "]", "*", "torch", ".", "cos", "(", "theta", ")", "-", "vec", "[", "1", "]", "*", "torch", ".", "sin", "(", "theta", ")", "\n", "y", "=", "vec", "[", "0", "]", "*", "torch", ".", "sin", "(", "theta", ")", "+", "vec", "[", "1", "]", "*", "torch", ".", "cos", "(", "theta", ")", "\n", "return", "torch", ".", "cat", "(", "[", "x", ",", "y", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt.pts_linspace": [[20, 25], ["pa.view.view", "pb.view.view", "torch.arange().view", "torch.arange().view", "torch.arange", "torch.arange"], "function", ["None"], ["", "def", "pts_linspace", "(", "pa", ",", "pb", ",", "pts", "=", "300", ")", ":", "\n", "    ", "pa", "=", "pa", ".", "view", "(", "1", ",", "2", ")", "\n", "pb", "=", "pb", ".", "view", "(", "1", ",", "2", ")", "\n", "w", "=", "torch", ".", "arange", "(", "0", ",", "pts", "+", "1", ",", "dtype", "=", "pa", ".", "dtype", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "return", "(", "pa", "*", "(", "pts", "-", "w", ")", "+", "pb", "*", "w", ")", "/", "pts", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt.xyz2uv": [[27, 32], ["torch.sqrt", "torch.sqrt", "torch.atan2().view", "torch.atan2().view", "torch.atan2().view", "torch.atan2().view", "torch.cat", "torch.cat", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.zeros_like", "torch.zeros_like"], "function", ["None"], ["", "def", "xyz2uv", "(", "xy", ",", "z", "=", "-", "1", ")", ":", "\n", "    ", "c", "=", "torch", ".", "sqrt", "(", "(", "xy", "**", "2", ")", ".", "sum", "(", "1", ")", ")", "\n", "u", "=", "torch", ".", "atan2", "(", "xy", "[", ":", ",", "1", "]", ",", "xy", "[", ":", ",", "0", "]", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "v", "=", "torch", ".", "atan2", "(", "torch", ".", "zeros_like", "(", "c", ")", "+", "z", ",", "c", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "return", "torch", ".", "cat", "(", "[", "u", ",", "v", "]", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt.uv2idx": [[34, 38], ["torch.cat", "torch.cat", "col.view", "row.view"], "function", ["None"], ["", "def", "uv2idx", "(", "uv", ",", "w", ",", "h", ")", ":", "\n", "    ", "col", "=", "(", "uv", "[", ":", ",", "0", "]", "/", "(", "2", "*", "np", ".", "pi", ")", "+", "0.5", ")", "*", "w", "-", "0.5", "\n", "row", "=", "(", "uv", "[", ":", ",", "1", "]", "/", "np", ".", "pi", "+", "0.5", ")", "*", "h", "-", "0.5", "\n", "return", "torch", ".", "cat", "(", "[", "col", ".", "view", "(", "-", "1", ",", "1", ")", ",", "row", ".", "view", "(", "-", "1", ",", "1", ")", "]", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt.wallidx": [[40, 49], ["torch.sqrt", "torch.sqrt", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "pano_opt.pts_linspace", "col.view", "row_s.view", "col.view", "row_t.view", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.pts_linspace"], ["", "def", "wallidx", "(", "xy", ",", "w", ",", "h", ",", "z1", ",", "z2", ")", ":", "\n", "    ", "col", "=", "(", "torch", ".", "atan2", "(", "xy", "[", "1", "]", ",", "xy", "[", "0", "]", ")", "/", "(", "2", "*", "np", ".", "pi", ")", "+", "0.5", ")", "*", "w", "-", "0.5", "\n", "c", "=", "torch", ".", "sqrt", "(", "(", "xy", "**", "2", ")", ".", "sum", "(", ")", ")", "\n", "row_s", "=", "(", "torch", ".", "atan2", "(", "torch", ".", "zeros_like", "(", "c", ")", "+", "z1", ",", "c", ")", "/", "np", ".", "pi", "+", "0.5", ")", "*", "h", "-", "0.5", "\n", "row_t", "=", "(", "torch", ".", "atan2", "(", "torch", ".", "zeros_like", "(", "c", ")", "+", "z2", ",", "c", ")", "/", "np", ".", "pi", "+", "0.5", ")", "*", "h", "-", "0.5", "\n", "\n", "pa", "=", "torch", ".", "cat", "(", "[", "col", ".", "view", "(", "1", ")", ",", "row_s", ".", "view", "(", "1", ")", "]", ")", "\n", "pb", "=", "torch", ".", "cat", "(", "[", "col", ".", "view", "(", "1", ")", ",", "row_t", ".", "view", "(", "1", ")", "]", ")", "\n", "return", "pts_linspace", "(", "pa", ",", "pb", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt.map_coordinates": [[51, 77], ["torch.floor().long", "torch.floor().long", "torch.ceil().long", "torch.ceil().long", "pano_opt.map_coordinates._coordinates_pad_wrap"], "function", ["None"], ["", "def", "map_coordinates", "(", "input", ",", "coordinates", ")", ":", "\n", "    ", "''' PyTorch version of scipy.ndimage.interpolation.map_coordinates\n    input: (H, W)\n    coordinates: (2, ...)\n    '''", "\n", "h", "=", "input", ".", "shape", "[", "0", "]", "\n", "w", "=", "input", ".", "shape", "[", "1", "]", "\n", "\n", "def", "_coordinates_pad_wrap", "(", "h", ",", "w", ",", "coordinates", ")", ":", "\n", "        ", "coordinates", "[", "0", "]", "=", "coordinates", "[", "0", "]", "%", "h", "\n", "coordinates", "[", "1", "]", "=", "coordinates", "[", "1", "]", "%", "w", "\n", "return", "coordinates", "\n", "\n", "", "co_floor", "=", "torch", ".", "floor", "(", "coordinates", ")", ".", "long", "(", ")", "\n", "co_ceil", "=", "torch", ".", "ceil", "(", "coordinates", ")", ".", "long", "(", ")", "\n", "d1", "=", "(", "coordinates", "[", "1", "]", "-", "co_floor", "[", "1", "]", ".", "float", "(", ")", ")", "\n", "d2", "=", "(", "coordinates", "[", "0", "]", "-", "co_floor", "[", "0", "]", ".", "float", "(", ")", ")", "\n", "co_floor", "=", "_coordinates_pad_wrap", "(", "h", ",", "w", ",", "co_floor", ")", "\n", "co_ceil", "=", "_coordinates_pad_wrap", "(", "h", ",", "w", ",", "co_ceil", ")", "\n", "f00", "=", "input", "[", "co_floor", "[", "0", "]", ",", "co_floor", "[", "1", "]", "]", "\n", "f10", "=", "input", "[", "co_floor", "[", "0", "]", ",", "co_ceil", "[", "1", "]", "]", "\n", "f01", "=", "input", "[", "co_ceil", "[", "0", "]", ",", "co_floor", "[", "1", "]", "]", "\n", "f11", "=", "input", "[", "co_ceil", "[", "0", "]", ",", "co_ceil", "[", "1", "]", "]", "\n", "fx1", "=", "f00", "+", "d1", "*", "(", "f10", "-", "f00", ")", "\n", "fx2", "=", "f01", "+", "d1", "*", "(", "f11", "-", "f01", ")", "\n", "return", "fx1", "+", "d2", "*", "(", "fx2", "-", "fx1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt.pc2cor_id": [[79, 91], ["torch.stack", "torch.stack", "torch.cat", "torch.cat", "pano_opt.uv2idx", "pano_opt.uv2idx", "pano_opt.rotatevec", "pano_opt.rotatevec", "pano_opt.xyz2uv", "pano_opt.xyz2uv"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.uv2idx", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.uv2idx", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.rotatevec", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.rotatevec", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.xyz2uv", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.xyz2uv"], ["", "def", "pc2cor_id", "(", "pc", ",", "pc_vec", ",", "pc_theta", ",", "pc_height", ")", ":", "\n", "    ", "ps", "=", "torch", ".", "stack", "(", "[", "\n", "(", "pc", "+", "pc_vec", ")", ",", "\n", "(", "pc", "+", "rotatevec", "(", "pc_vec", ",", "pc_theta", ")", ")", ",", "\n", "(", "pc", "-", "pc_vec", ")", ",", "\n", "(", "pc", "+", "rotatevec", "(", "pc_vec", ",", "pc_theta", "-", "np", ".", "pi", ")", ")", "\n", "]", ")", "\n", "\n", "return", "torch", ".", "cat", "(", "[", "\n", "uv2idx", "(", "xyz2uv", "(", "ps", ",", "z", "=", "-", "1", ")", ",", "1024", ",", "512", ")", ",", "\n", "uv2idx", "(", "xyz2uv", "(", "ps", ",", "z", "=", "pc_height", ")", ",", "1024", ",", "512", ")", ",", "\n", "]", ",", "dim", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt.project2sphere_score": [[93, 152], ["pano_opt.pc2cor_id", "torch.stack", "torch.stack", "map_coordinates().mean", "pano_opt.rotatevec", "pano_opt.rotatevec", "pano_opt.pts_linspace", "pano_opt.pts_linspace", "pano_opt.pts_linspace", "pano_opt.pts_linspace", "pano_opt.xyz2uv", "pano_opt.uv2idx", "torch.stack", "torch.stack", "pano_opt.xyz2uv", "pano_opt.uv2idx", "torch.stack", "torch.stack", "map_coordinates().mean", "len", "map_coordinates().mean", "len", "torch.no_grad", "torch.no_grad", "print", "pano_opt.map_coordinates", "pano_opt.map_coordinates", "pano_opt.map_coordinates"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.pc2cor_id", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.rotatevec", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.rotatevec", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.pts_linspace", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.pts_linspace", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.pts_linspace", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.pts_linspace", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.xyz2uv", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.uv2idx", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.xyz2uv", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.uv2idx", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.map_coordinates", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.map_coordinates", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.map_coordinates"], ["", "def", "project2sphere_score", "(", "pc", ",", "pc_vec", ",", "pc_theta", ",", "pc_height", ",", "scoreedg", ",", "scorecor", ",", "i_step", "=", "None", ")", ":", "\n", "\n", "# Sample corner loss", "\n", "    ", "corid", "=", "pc2cor_id", "(", "pc", ",", "pc_vec", ",", "pc_theta", ",", "pc_height", ")", "\n", "corid_coordinates", "=", "torch", ".", "stack", "(", "[", "corid", "[", ":", ",", "1", "]", ",", "corid", "[", ":", ",", "0", "]", "]", ")", "\n", "loss_cor", "=", "-", "map_coordinates", "(", "scorecor", ",", "corid_coordinates", ")", ".", "mean", "(", ")", "\n", "\n", "# Sample boundary loss", "\n", "p1", "=", "pc", "+", "pc_vec", "\n", "p2", "=", "pc", "+", "rotatevec", "(", "pc_vec", ",", "pc_theta", ")", "\n", "p3", "=", "pc", "-", "pc_vec", "\n", "p4", "=", "pc", "+", "rotatevec", "(", "pc_vec", ",", "pc_theta", "-", "np", ".", "pi", ")", "\n", "\n", "segs", "=", "[", "\n", "pts_linspace", "(", "p1", ",", "p2", ")", ",", "\n", "pts_linspace", "(", "p2", ",", "p3", ")", ",", "\n", "pts_linspace", "(", "p3", ",", "p4", ")", ",", "\n", "pts_linspace", "(", "p4", ",", "p1", ")", ",", "\n", "]", "\n", "\n", "# wall-wall", "\n", "#    loss_wallwall = 0", "\n", "#    walls_idx = [", "\n", "#        wallidx(p1, 1024, 512, -1, pc_height),", "\n", "#        wallidx(p2, 1024, 512, -1, pc_height),", "\n", "#        wallidx(p3, 1024, 512, -1, pc_height),", "\n", "#        wallidx(p4, 1024, 512, -1, pc_height),", "\n", "#    ]", "\n", "#    for wall_idx in walls_idx:", "\n", "#        wall_coordinates = torch.stack([wall_idx[:, 1], wall_idx[:, 0]])", "\n", "#        loss_wallwall -= map_coordinates(scoreedg[..., 0], wall_coordinates).mean() / len(walls_idx)", "\n", "\n", "# ceil-wall", "\n", "loss_ceilwall", "=", "0", "\n", "for", "seg", "in", "segs", ":", "\n", "        ", "ceil_uv", "=", "xyz2uv", "(", "seg", ",", "z", "=", "-", "1", ")", "\n", "ceil_idx", "=", "uv2idx", "(", "ceil_uv", ",", "1024", ",", "512", ")", "\n", "ceil_coordinates", "=", "torch", ".", "stack", "(", "[", "ceil_idx", "[", ":", ",", "1", "]", ",", "ceil_idx", "[", ":", ",", "0", "]", "]", ")", "\n", "loss_ceilwall", "-=", "map_coordinates", "(", "scoreedg", "[", "...", ",", "1", "]", ",", "ceil_coordinates", ")", ".", "mean", "(", ")", "/", "len", "(", "segs", ")", "\n", "\n", "# floor-wall", "\n", "", "loss_floorwall", "=", "0", "\n", "for", "seg", "in", "segs", ":", "\n", "        ", "floor_uv", "=", "xyz2uv", "(", "seg", ",", "z", "=", "pc_height", ")", "\n", "floor_idx", "=", "uv2idx", "(", "floor_uv", ",", "1024", ",", "512", ")", "\n", "floor_coordinates", "=", "torch", ".", "stack", "(", "[", "floor_idx", "[", ":", ",", "1", "]", ",", "floor_idx", "[", ":", ",", "0", "]", "]", ")", "\n", "loss_floorwall", "-=", "map_coordinates", "(", "scoreedg", "[", "...", ",", "2", "]", ",", "floor_coordinates", ")", ".", "mean", "(", ")", "/", "len", "(", "segs", ")", "\n", "\n", "#losses = 1.0 * loss_cor + 0.1 * loss_wallwall + 0.5 * loss_ceilwall + 1.0 * loss_floorwall", "\n", "", "losses", "=", "1.0", "*", "loss_cor", "+", "1.0", "*", "loss_ceilwall", "+", "1.0", "*", "loss_floorwall", "\n", "\n", "if", "i_step", "is", "not", "None", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "print", "(", "'step %d: %.3f (cor %.3f, wall %.3f, ceil %.3f, floor %.3f)'", "%", "(", "\n", "i_step", ",", "losses", ",", "\n", "loss_cor", ",", "loss_wallwall", ",", "\n", "loss_ceilwall", ",", "loss_floorwall", ")", ")", "\n", "\n", "", "", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt.optimize_cor_id": [[154, 208], ["pano.constraint_cor_id_same_z", "numpy.hstack", "numpy.mean", "pano_opt.vecang", "pano.fit_avg_z", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.SGD", "range", "pc2cor_id().detach().numpy", "numpy.stack().reshape", "optim.SGD.zero_grad", "pano_opt.project2sphere_score", "project2sphere_score.backward", "optim.SGD.step", "project2sphere_score.item", "project2sphere_score.item", "torch.FloatTensor.clone", "torch.FloatTensor.clone", "torch.FloatTensor.clone", "torch.FloatTensor.clone", "pc2cor_id().detach", "numpy.stack", "numpy.zeros().reshape", "pano_opt.pc2cor_id", "numpy.zeros"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.constraint_cor_id_same_z", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.vecang", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.fit_avg_z", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.project2sphere_score", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.pc2cor_id"], ["", "def", "optimize_cor_id", "(", "cor_id", ",", "scoreedg", ",", "scorecor", ",", "num_iters", "=", "100", ",", "verbose", "=", "False", ")", ":", "\n", "    ", "assert", "scoreedg", ".", "shape", "==", "(", "512", ",", "1024", ",", "3", ")", "\n", "assert", "scorecor", ".", "shape", "==", "(", "512", ",", "1024", ")", "\n", "\n", "Z", "=", "-", "1", "\n", "ceil_cor_id", "=", "cor_id", "[", "0", ":", ":", "2", "]", "\n", "floor_cor_id", "=", "cor_id", "[", "1", ":", ":", "2", "]", "\n", "ceil_cor_id", ",", "ceil_cor_id_xy", "=", "pano", ".", "constraint_cor_id_same_z", "(", "ceil_cor_id", ",", "scorecor", ",", "Z", ")", "\n", "ceil_cor_id_xyz", "=", "np", ".", "hstack", "(", "[", "ceil_cor_id_xy", ",", "np", ".", "zeros", "(", "4", ")", ".", "reshape", "(", "-", "1", ",", "1", ")", "+", "Z", "]", ")", "\n", "\n", "#pc = (ceil_cor_id_xy[0] + ceil_cor_id_xy[2]) / 2", "\n", "pc", "=", "np", ".", "mean", "(", "ceil_cor_id_xy", ",", "axis", "=", "0", ")", "\n", "pc_vec", "=", "ceil_cor_id_xy", "[", "0", "]", "-", "pc", "\n", "pc_theta", "=", "vecang", "(", "pc_vec", ",", "ceil_cor_id_xy", "[", "1", "]", "-", "pc", ")", "\n", "pc_height", "=", "pano", ".", "fit_avg_z", "(", "floor_cor_id", ",", "ceil_cor_id_xy", ",", "scorecor", ")", "\n", "\n", "scoreedg", "=", "torch", ".", "FloatTensor", "(", "scoreedg", ")", "\n", "scorecor", "=", "torch", ".", "FloatTensor", "(", "scorecor", ")", "\n", "pc", "=", "torch", ".", "FloatTensor", "(", "pc", ")", "\n", "pc_vec", "=", "torch", ".", "FloatTensor", "(", "pc_vec", ")", "\n", "pc_theta", "=", "torch", ".", "FloatTensor", "(", "[", "pc_theta", "]", ")", "\n", "pc_height", "=", "torch", ".", "FloatTensor", "(", "[", "pc_height", "]", ")", "\n", "pc", ".", "requires_grad", "=", "True", "\n", "pc_vec", ".", "requires_grad", "=", "True", "\n", "pc_theta", ".", "requires_grad", "=", "True", "\n", "pc_height", ".", "requires_grad", "=", "True", "\n", "\n", "optimizer", "=", "optim", ".", "SGD", "(", "[", "\n", "pc", ",", "pc_vec", ",", "pc_theta", ",", "pc_height", "\n", "]", ",", "lr", "=", "1e-3", ",", "momentum", "=", "0.9", ")", "\n", "\n", "best", "=", "{", "'score'", ":", "1e9", "}", "\n", "\n", "for", "i_step", "in", "range", "(", "num_iters", ")", ":", "\n", "        ", "i", "=", "i_step", "if", "verbose", "else", "None", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "score", "=", "project2sphere_score", "(", "pc", ",", "pc_vec", ",", "pc_theta", ",", "pc_height", ",", "scoreedg", ",", "scorecor", ",", "i", ")", "\n", "if", "score", ".", "item", "(", ")", "<", "best", "[", "'score'", "]", ":", "\n", "            ", "best", "[", "'score'", "]", "=", "score", ".", "item", "(", ")", "\n", "best", "[", "'pc'", "]", "=", "pc", ".", "clone", "(", ")", "\n", "best", "[", "'pc_vec'", "]", "=", "pc_vec", ".", "clone", "(", ")", "\n", "best", "[", "'pc_theta'", "]", "=", "pc_theta", ".", "clone", "(", ")", "\n", "best", "[", "'pc_height'", "]", "=", "pc_height", ".", "clone", "(", ")", "\n", "", "score", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "", "pc", "=", "best", "[", "'pc'", "]", "\n", "pc_vec", "=", "best", "[", "'pc_vec'", "]", "\n", "pc_theta", "=", "best", "[", "'pc_theta'", "]", "\n", "pc_height", "=", "best", "[", "'pc_height'", "]", "\n", "opt_cor_id", "=", "pc2cor_id", "(", "pc", ",", "pc_vec", ",", "pc_theta", ",", "pc_height", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "opt_cor_id", "=", "np", ".", "stack", "(", "[", "opt_cor_id", "[", ":", "4", "]", ",", "opt_cor_id", "[", "4", ":", "]", "]", ",", "axis", "=", "1", ")", ".", "reshape", "(", "8", ",", "2", ")", "\n", "\n", "return", "opt_cor_id", "\n", "", ""]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.vecang": [[9, 13], ["numpy.arccos", "numpy.sqrt", "numpy.sqrt", "numpy.dot"], "function", ["None"], ["def", "vecang", "(", "vec1", ",", "vec2", ")", ":", "\n", "    ", "vec1", "=", "vec1", "/", "np", ".", "sqrt", "(", "(", "vec1", "**", "2", ")", ".", "sum", "(", ")", ")", "\n", "vec2", "=", "vec2", "/", "np", ".", "sqrt", "(", "(", "vec2", "**", "2", ")", ".", "sum", "(", ")", ")", "\n", "return", "np", ".", "arccos", "(", "np", ".", "dot", "(", "vec1", ",", "vec2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.rotatevec": [[15, 19], ["torch.cat", "torch.cat", "torch.cos", "torch.cos", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.cos", "torch.cos"], "function", ["None"], ["", "def", "rotatevec", "(", "vec", ",", "theta", ")", ":", "\n", "    ", "x", "=", "vec", "[", "0", "]", "*", "torch", ".", "cos", "(", "theta", ")", "-", "vec", "[", "1", "]", "*", "torch", ".", "sin", "(", "theta", ")", "\n", "y", "=", "vec", "[", "0", "]", "*", "torch", ".", "sin", "(", "theta", ")", "+", "vec", "[", "1", "]", "*", "torch", ".", "cos", "(", "theta", ")", "\n", "return", "torch", ".", "cat", "(", "[", "x", ",", "y", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.pts_linspace": [[21, 26], ["pa.view.view", "pb.view.view", "torch.arange().view", "torch.arange().view", "torch.arange", "torch.arange"], "function", ["None"], ["", "def", "pts_linspace", "(", "pa", ",", "pb", ",", "pts", "=", "300", ")", ":", "\n", "    ", "pa", "=", "pa", ".", "view", "(", "1", ",", "2", ")", "\n", "pb", "=", "pb", ".", "view", "(", "1", ",", "2", ")", "\n", "w", "=", "torch", ".", "arange", "(", "0", ",", "pts", "+", "1", ",", "dtype", "=", "pa", ".", "dtype", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "return", "(", "pa", "*", "(", "pts", "-", "w", ")", "+", "pb", "*", "w", ")", "/", "pts", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.xyz2uv": [[28, 33], ["torch.sqrt", "torch.sqrt", "torch.atan2().view", "torch.atan2().view", "torch.atan2().view", "torch.atan2().view", "torch.cat", "torch.cat", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.zeros_like", "torch.zeros_like"], "function", ["None"], ["", "def", "xyz2uv", "(", "xy", ",", "z", "=", "-", "1", ")", ":", "\n", "    ", "c", "=", "torch", ".", "sqrt", "(", "(", "xy", "**", "2", ")", ".", "sum", "(", "1", ")", ")", "\n", "u", "=", "torch", ".", "atan2", "(", "xy", "[", ":", ",", "1", "]", ",", "xy", "[", ":", ",", "0", "]", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "v", "=", "torch", ".", "atan2", "(", "torch", ".", "zeros_like", "(", "c", ")", "+", "z", ",", "c", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "return", "torch", ".", "cat", "(", "[", "u", ",", "v", "]", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.uv2idx": [[35, 39], ["torch.cat", "torch.cat", "col.view", "row.view"], "function", ["None"], ["", "def", "uv2idx", "(", "uv", ",", "w", ",", "h", ")", ":", "\n", "    ", "col", "=", "(", "uv", "[", ":", ",", "0", "]", "/", "(", "2", "*", "np", ".", "pi", ")", "+", "0.5", ")", "*", "w", "-", "0.5", "\n", "row", "=", "(", "uv", "[", ":", ",", "1", "]", "/", "np", ".", "pi", "+", "0.5", ")", "*", "h", "-", "0.5", "\n", "return", "torch", ".", "cat", "(", "[", "col", ".", "view", "(", "-", "1", ",", "1", ")", ",", "row", ".", "view", "(", "-", "1", ",", "1", ")", "]", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.wallidx": [[41, 50], ["torch.sqrt", "torch.sqrt", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "pano_opt_gen.pts_linspace", "col.view", "row_s.view", "col.view", "row_t.view", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.pts_linspace"], ["", "def", "wallidx", "(", "xy", ",", "w", ",", "h", ",", "z1", ",", "z2", ")", ":", "\n", "    ", "col", "=", "(", "torch", ".", "atan2", "(", "xy", "[", "1", "]", ",", "xy", "[", "0", "]", ")", "/", "(", "2", "*", "np", ".", "pi", ")", "+", "0.5", ")", "*", "w", "-", "0.5", "\n", "c", "=", "torch", ".", "sqrt", "(", "(", "xy", "**", "2", ")", ".", "sum", "(", ")", ")", "\n", "row_s", "=", "(", "torch", ".", "atan2", "(", "torch", ".", "zeros_like", "(", "c", ")", "+", "z1", ",", "c", ")", "/", "np", ".", "pi", "+", "0.5", ")", "*", "h", "-", "0.5", "\n", "row_t", "=", "(", "torch", ".", "atan2", "(", "torch", ".", "zeros_like", "(", "c", ")", "+", "z2", ",", "c", ")", "/", "np", ".", "pi", "+", "0.5", ")", "*", "h", "-", "0.5", "\n", "\n", "pa", "=", "torch", ".", "cat", "(", "[", "col", ".", "view", "(", "1", ")", ",", "row_s", ".", "view", "(", "1", ")", "]", ")", "\n", "pb", "=", "torch", ".", "cat", "(", "[", "col", ".", "view", "(", "1", ")", ",", "row_t", ".", "view", "(", "1", ")", "]", ")", "\n", "return", "pts_linspace", "(", "pa", ",", "pb", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.map_coordinates": [[52, 78], ["torch.floor().long", "torch.floor().long", "torch.ceil().long", "torch.ceil().long", "pano_opt_gen.map_coordinates._coordinates_pad_wrap"], "function", ["None"], ["", "def", "map_coordinates", "(", "input", ",", "coordinates", ")", ":", "\n", "    ", "''' PyTorch version of scipy.ndimage.interpolation.map_coordinates\n    input: (H, W)\n    coordinates: (2, ...)\n    '''", "\n", "h", "=", "input", ".", "shape", "[", "0", "]", "\n", "w", "=", "input", ".", "shape", "[", "1", "]", "\n", "\n", "def", "_coordinates_pad_wrap", "(", "h", ",", "w", ",", "coordinates", ")", ":", "\n", "        ", "coordinates", "[", "0", "]", "=", "coordinates", "[", "0", "]", "%", "h", "\n", "coordinates", "[", "1", "]", "=", "coordinates", "[", "1", "]", "%", "w", "\n", "return", "coordinates", "\n", "\n", "", "co_floor", "=", "torch", ".", "floor", "(", "coordinates", ")", ".", "long", "(", ")", "\n", "co_ceil", "=", "torch", ".", "ceil", "(", "coordinates", ")", ".", "long", "(", ")", "\n", "d1", "=", "(", "coordinates", "[", "1", "]", "-", "co_floor", "[", "1", "]", ".", "float", "(", ")", ")", "\n", "d2", "=", "(", "coordinates", "[", "0", "]", "-", "co_floor", "[", "0", "]", ".", "float", "(", ")", ")", "\n", "co_floor", "=", "_coordinates_pad_wrap", "(", "h", ",", "w", ",", "co_floor", ")", "\n", "co_ceil", "=", "_coordinates_pad_wrap", "(", "h", ",", "w", ",", "co_ceil", ")", "\n", "f00", "=", "input", "[", "co_floor", "[", "0", "]", ",", "co_floor", "[", "1", "]", "]", "\n", "f10", "=", "input", "[", "co_floor", "[", "0", "]", ",", "co_ceil", "[", "1", "]", "]", "\n", "f01", "=", "input", "[", "co_ceil", "[", "0", "]", ",", "co_floor", "[", "1", "]", "]", "\n", "f11", "=", "input", "[", "co_ceil", "[", "0", "]", ",", "co_ceil", "[", "1", "]", "]", "\n", "fx1", "=", "f00", "+", "d1", "*", "(", "f10", "-", "f00", ")", "\n", "fx2", "=", "f01", "+", "d1", "*", "(", "f11", "-", "f01", ")", "\n", "return", "fx1", "+", "d2", "*", "(", "fx2", "-", "fx1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.pc2cor_id": [[80, 105], ["torch.cat", "torch.cat", "pc_theta.numel", "torch.stack", "torch.stack", "torch.cat.view", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "pano_opt_gen.uv2idx", "pano_opt_gen.uv2idx", "pano_opt_gen.xyz2uv", "pano_opt_gen.xyz2uv", "pano_opt_gen.rotatevec", "pano_opt_gen.rotatevec"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.uv2idx", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.uv2idx", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.xyz2uv", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.xyz2uv", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.rotatevec", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.rotatevec"], ["", "def", "pc2cor_id", "(", "pc", ",", "pc_vec", ",", "pc_theta", ",", "pc_height", ")", ":", "\n", "\n", "    ", "if", "pc_theta", ".", "numel", "(", ")", "==", "1", ":", "\n", "        ", "ps", "=", "torch", ".", "stack", "(", "[", "\n", "(", "pc", "+", "pc_vec", ")", ",", "\n", "(", "pc", "+", "rotatevec", "(", "pc_vec", ",", "pc_theta", ")", ")", ",", "\n", "(", "pc", "-", "pc_vec", ")", ",", "\n", "(", "pc", "+", "rotatevec", "(", "pc_vec", ",", "pc_theta", "-", "np", ".", "pi", ")", ")", "\n", "]", ")", "\n", "", "else", ":", "\n", "        ", "ps", "=", "pc", "+", "pc_vec", "\n", "ps", "=", "ps", ".", "view", "(", "-", "1", ",", "2", ")", "\n", "for", "c_num", "in", "range", "(", "pc_theta", ".", "shape", "[", "1", "]", ")", ":", "\n", "            ", "ps", "=", "torch", ".", "cat", "(", "(", "ps", ",", "ps", "[", "c_num", ":", ",", ":", "]", ")", ",", "0", ")", "\n", "if", "(", "c_num", "%", "2", ")", "==", "0", ":", "\n", "                ", "ps", "[", "-", "1", ",", "1", "]", "=", "pc_theta", "[", "0", ",", "c_num", "]", "\n", "", "else", ":", "\n", "                ", "ps", "[", "-", "1", ",", "0", "]", "=", "pc_theta", "[", "0", ",", "c_num", "]", "\n", "", "", "ps", "=", "torch", ".", "cat", "(", "(", "ps", ",", "ps", "[", "-", "1", ":", ",", ":", "]", ")", ",", "0", ")", "\n", "ps", "[", "-", "1", ",", "1", "]", "=", "ps", "[", "0", ",", "1", "]", "\n", "\n", "", "return", "torch", ".", "cat", "(", "[", "\n", "uv2idx", "(", "xyz2uv", "(", "ps", ",", "z", "=", "-", "1", ")", ",", "1024", ",", "512", ")", ",", "\n", "uv2idx", "(", "xyz2uv", "(", "ps", ",", "z", "=", "pc_height", ")", ",", "1024", ",", "512", ")", ",", "\n", "]", ",", "dim", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.project2sphere_score": [[107, 170], ["pano_opt_gen.pc2cor_id", "torch.stack", "torch.stack", "map_coordinates().mean", "pc_theta.numel", "torch.cat.view", "range", "torch.cat", "torch.cat", "range", "segs.append", "pano_opt_gen.xyz2uv", "pano_opt_gen.uv2idx", "torch.stack", "torch.stack", "pano_opt_gen.xyz2uv", "pano_opt_gen.uv2idx", "torch.stack", "torch.stack", "pano_opt_gen.rotatevec", "pano_opt_gen.rotatevec", "pano_opt_gen.pts_linspace", "pano_opt_gen.pts_linspace", "pano_opt_gen.pts_linspace", "pano_opt_gen.pts_linspace", "torch.cat", "torch.cat", "segs.append", "pano_opt_gen.pts_linspace", "map_coordinates().mean", "len", "map_coordinates().mean", "len", "torch.no_grad", "torch.no_grad", "print", "pano_opt_gen.map_coordinates", "pano_opt_gen.pts_linspace", "pano_opt_gen.map_coordinates", "pano_opt_gen.map_coordinates"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.pc2cor_id", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.xyz2uv", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.uv2idx", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.xyz2uv", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.uv2idx", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.rotatevec", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.rotatevec", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.pts_linspace", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.pts_linspace", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.pts_linspace", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.pts_linspace", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.pts_linspace", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.map_coordinates", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.pts_linspace", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.map_coordinates", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.map_coordinates"], ["", "def", "project2sphere_score", "(", "pc", ",", "pc_vec", ",", "pc_theta", ",", "pc_height", ",", "scoreedg", ",", "scorecor", ",", "i_step", "=", "None", ")", ":", "\n", "\n", "# Sample corner loss", "\n", "    ", "corid", "=", "pc2cor_id", "(", "pc", ",", "pc_vec", ",", "pc_theta", ",", "pc_height", ")", "\n", "corid_coordinates", "=", "torch", ".", "stack", "(", "[", "corid", "[", ":", ",", "1", "]", ",", "corid", "[", ":", ",", "0", "]", "]", ")", "\n", "loss_cor", "=", "-", "map_coordinates", "(", "scorecor", ",", "corid_coordinates", ")", ".", "mean", "(", ")", "\n", "\n", "# Sample boundary loss", "\n", "if", "pc_theta", ".", "numel", "(", ")", "==", "1", ":", "\n", "        ", "p1", "=", "pc", "+", "pc_vec", "\n", "p2", "=", "pc", "+", "rotatevec", "(", "pc_vec", ",", "pc_theta", ")", "\n", "p3", "=", "pc", "-", "pc_vec", "\n", "p4", "=", "pc", "+", "rotatevec", "(", "pc_vec", ",", "pc_theta", "-", "np", ".", "pi", ")", "\n", "\n", "segs", "=", "[", "\n", "pts_linspace", "(", "p1", ",", "p2", ")", ",", "\n", "pts_linspace", "(", "p2", ",", "p3", ")", ",", "\n", "pts_linspace", "(", "p3", ",", "p4", ")", ",", "\n", "pts_linspace", "(", "p4", ",", "p1", ")", ",", "\n", "]", "\n", "", "else", ":", "\n", "        ", "ps", "=", "pc", "+", "pc_vec", "\n", "ps", "=", "ps", ".", "view", "(", "-", "1", ",", "2", ")", "\n", "for", "c_num", "in", "range", "(", "pc_theta", ".", "shape", "[", "1", "]", ")", ":", "\n", "            ", "ps", "=", "torch", ".", "cat", "(", "(", "ps", ",", "ps", "[", "c_num", ":", ",", ":", "]", ")", ",", "0", ")", "\n", "if", "(", "c_num", "%", "2", ")", "==", "0", ":", "\n", "                ", "ps", "[", "-", "1", ",", "1", "]", "=", "pc_theta", "[", "0", ",", "c_num", "]", "\n", "", "else", ":", "\n", "                ", "ps", "[", "-", "1", ",", "0", "]", "=", "pc_theta", "[", "0", ",", "c_num", "]", "\n", "", "", "ps", "=", "torch", ".", "cat", "(", "(", "ps", ",", "ps", "[", "-", "1", ":", ",", ":", "]", ")", ",", "0", ")", "\n", "ps", "[", "-", "1", ",", "1", "]", "=", "ps", "[", "0", ",", "1", "]", "\n", "segs", "=", "[", "]", "\n", "for", "c_num", "in", "range", "(", "ps", ".", "shape", "[", "0", "]", "-", "1", ")", ":", "\n", "            ", "segs", ".", "append", "(", "pts_linspace", "(", "ps", "[", "c_num", ",", ":", "]", ",", "ps", "[", "c_num", "+", "1", ",", ":", "]", ")", ")", "\n", "", "segs", ".", "append", "(", "pts_linspace", "(", "ps", "[", "-", "1", ",", ":", "]", ",", "ps", "[", "0", ",", ":", "]", ")", ")", "\n", "\n", "# ceil-wall", "\n", "", "loss_ceilwall", "=", "0", "\n", "for", "seg", "in", "segs", ":", "\n", "        ", "ceil_uv", "=", "xyz2uv", "(", "seg", ",", "z", "=", "-", "1", ")", "\n", "ceil_idx", "=", "uv2idx", "(", "ceil_uv", ",", "1024", ",", "512", ")", "\n", "ceil_coordinates", "=", "torch", ".", "stack", "(", "[", "ceil_idx", "[", ":", ",", "1", "]", ",", "ceil_idx", "[", ":", ",", "0", "]", "]", ")", "\n", "loss_ceilwall", "-=", "map_coordinates", "(", "scoreedg", "[", "...", ",", "1", "]", ",", "ceil_coordinates", ")", ".", "mean", "(", ")", "/", "len", "(", "segs", ")", "\n", "\n", "# floor-wall", "\n", "", "loss_floorwall", "=", "0", "\n", "for", "seg", "in", "segs", ":", "\n", "        ", "floor_uv", "=", "xyz2uv", "(", "seg", ",", "z", "=", "pc_height", ")", "\n", "floor_idx", "=", "uv2idx", "(", "floor_uv", ",", "1024", ",", "512", ")", "\n", "floor_coordinates", "=", "torch", ".", "stack", "(", "[", "floor_idx", "[", ":", ",", "1", "]", ",", "floor_idx", "[", ":", ",", "0", "]", "]", ")", "\n", "loss_floorwall", "-=", "map_coordinates", "(", "scoreedg", "[", "...", ",", "2", "]", ",", "floor_coordinates", ")", ".", "mean", "(", ")", "/", "len", "(", "segs", ")", "\n", "\n", "#losses = 1.0 * loss_cor + 0.1 * loss_wallwall + 0.5 * loss_ceilwall + 1.0 * loss_floorwall", "\n", "", "losses", "=", "1.0", "*", "loss_cor", "+", "1.0", "*", "loss_ceilwall", "+", "1.0", "*", "loss_floorwall", "\n", "\n", "if", "i_step", "is", "not", "None", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "print", "(", "'step %d: %.3f (cor %.3f, wall %.3f, ceil %.3f, floor %.3f)'", "%", "(", "\n", "i_step", ",", "losses", ",", "\n", "loss_cor", ",", "loss_wallwall", ",", "\n", "loss_ceilwall", ",", "loss_floorwall", ")", ")", "\n", "\n", "", "", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.optimize_cor_id": [[172, 249], ["pano_gen.constraint_cor_id_same_z", "numpy.hstack", "numpy.mean", "pano_opt_gen.vecang", "pano_gen.fit_avg_z", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.SGD", "range", "pc2cor_id().detach().numpy", "int", "numpy.stack().reshape", "abs", "abs", "numpy.concatenate", "numpy.array", "range", "optim.SGD.zero_grad", "pano_opt_gen.project2sphere_score", "project2sphere_score.backward", "optim.SGD.step", "project2sphere_score.item", "project2sphere_score.item", "torch.FloatTensor.clone", "torch.FloatTensor.clone", "np.append.clone", "torch.FloatTensor.clone", "pc2cor_id().detach", "numpy.stack", "numpy.zeros().reshape", "numpy.append", "numpy.append", "pano_opt_gen.pc2cor_id", "numpy.zeros"], "function", ["home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.constraint_cor_id_same_z", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.vecang", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano.fit_avg_z", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.project2sphere_score", "home.repos.pwc.inspect_result.zouchuhang_LayoutNetv2.None.pano_opt_gen.pc2cor_id"], ["", "def", "optimize_cor_id", "(", "cor_id", ",", "scoreedg", ",", "scorecor", ",", "num_iters", "=", "100", ",", "verbose", "=", "False", ")", ":", "\n", "    ", "assert", "scoreedg", ".", "shape", "==", "(", "512", ",", "1024", ",", "3", ")", "\n", "assert", "scorecor", ".", "shape", "==", "(", "512", ",", "1024", ")", "\n", "\n", "Z", "=", "-", "1", "\n", "ceil_cor_id", "=", "cor_id", "[", "0", ":", ":", "2", "]", "\n", "floor_cor_id", "=", "cor_id", "[", "1", ":", ":", "2", "]", "\n", "\n", "ceil_cor_id", ",", "ceil_cor_id_xy", "=", "pano", ".", "constraint_cor_id_same_z", "(", "ceil_cor_id", ",", "scorecor", ",", "Z", ")", "\n", "#ceil_cor_id_xyz = np.hstack([ceil_cor_id_xy, np.zeros(4).reshape(-1, 1) + Z])", "\n", "ceil_cor_id_xyz", "=", "np", ".", "hstack", "(", "[", "ceil_cor_id_xy", ",", "np", ".", "zeros", "(", "ceil_cor_id", ".", "shape", "[", "0", "]", ")", ".", "reshape", "(", "-", "1", ",", "1", ")", "+", "Z", "]", ")", "\n", "\n", "# TODO: revise here to general layout", "\n", "#pc = (ceil_cor_id_xy[0] + ceil_cor_id_xy[2]) / 2", "\n", "#print(ceil_cor_id_xy)", "\n", "if", "abs", "(", "ceil_cor_id_xy", "[", "0", ",", "0", "]", "-", "ceil_cor_id_xy", "[", "1", ",", "0", "]", ")", ">", "abs", "(", "ceil_cor_id_xy", "[", "0", ",", "1", "]", "-", "ceil_cor_id_xy", "[", "1", ",", "1", "]", ")", ":", "\n", "        ", "ceil_cor_id_xy", "=", "np", ".", "concatenate", "(", "(", "ceil_cor_id_xy", "[", "1", ":", ",", ":", "]", ",", "ceil_cor_id_xy", "[", ":", "1", ",", ":", "]", ")", ",", "axis", "=", "0", ")", "\n", "#print(cor_id)", "\n", "#print(ceil_cor_id_xy)", "\n", "", "pc", "=", "np", ".", "mean", "(", "ceil_cor_id_xy", ",", "axis", "=", "0", ")", "\n", "pc_vec", "=", "ceil_cor_id_xy", "[", "0", "]", "-", "pc", "\n", "pc_theta", "=", "vecang", "(", "pc_vec", ",", "ceil_cor_id_xy", "[", "1", "]", "-", "pc", ")", "\n", "pc_height", "=", "pano", ".", "fit_avg_z", "(", "floor_cor_id", ",", "ceil_cor_id_xy", ",", "scorecor", ")", "\n", "\n", "if", "ceil_cor_id_xy", ".", "shape", "[", "0", "]", ">", "4", ":", "\n", "        ", "pc_theta", "=", "np", ".", "array", "(", "[", "ceil_cor_id_xy", "[", "1", ",", "1", "]", "]", ")", "\n", "for", "c_num", "in", "range", "(", "2", ",", "ceil_cor_id_xy", ".", "shape", "[", "0", "]", "-", "1", ")", ":", "\n", "            ", "if", "(", "c_num", "%", "2", ")", "==", "0", ":", "\n", "                ", "pc_theta", "=", "np", ".", "append", "(", "pc_theta", ",", "ceil_cor_id_xy", "[", "c_num", ",", "0", "]", ")", "\n", "", "else", ":", "\n", "                ", "pc_theta", "=", "np", ".", "append", "(", "pc_theta", ",", "ceil_cor_id_xy", "[", "c_num", ",", "1", "]", ")", "\n", "\n", "", "", "", "scoreedg", "=", "torch", ".", "FloatTensor", "(", "scoreedg", ")", "\n", "scorecor", "=", "torch", ".", "FloatTensor", "(", "scorecor", ")", "\n", "pc", "=", "torch", ".", "FloatTensor", "(", "pc", ")", "\n", "pc_vec", "=", "torch", ".", "FloatTensor", "(", "pc_vec", ")", "\n", "pc_theta", "=", "torch", ".", "FloatTensor", "(", "[", "pc_theta", "]", ")", "\n", "pc_height", "=", "torch", ".", "FloatTensor", "(", "[", "pc_height", "]", ")", "\n", "pc", ".", "requires_grad", "=", "True", "\n", "pc_vec", ".", "requires_grad", "=", "True", "\n", "pc_theta", ".", "requires_grad", "=", "True", "\n", "pc_height", ".", "requires_grad", "=", "True", "\n", "\n", "#print(pc_theta)", "\n", "#time.sleep(2)", "\n", "#return cor_id", "\n", "optimizer", "=", "optim", ".", "SGD", "(", "[", "\n", "pc", ",", "pc_vec", ",", "pc_theta", ",", "pc_height", "\n", "]", ",", "lr", "=", "1e-3", ",", "momentum", "=", "0.9", ")", "\n", "\n", "best", "=", "{", "'score'", ":", "1e9", "}", "\n", "\n", "for", "i_step", "in", "range", "(", "num_iters", ")", ":", "\n", "        ", "i", "=", "i_step", "if", "verbose", "else", "None", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "score", "=", "project2sphere_score", "(", "pc", ",", "pc_vec", ",", "pc_theta", ",", "pc_height", ",", "scoreedg", ",", "scorecor", ",", "i", ")", "\n", "if", "score", ".", "item", "(", ")", "<", "best", "[", "'score'", "]", ":", "\n", "            ", "best", "[", "'score'", "]", "=", "score", ".", "item", "(", ")", "\n", "best", "[", "'pc'", "]", "=", "pc", ".", "clone", "(", ")", "\n", "best", "[", "'pc_vec'", "]", "=", "pc_vec", ".", "clone", "(", ")", "\n", "best", "[", "'pc_theta'", "]", "=", "pc_theta", ".", "clone", "(", ")", "\n", "best", "[", "'pc_height'", "]", "=", "pc_height", ".", "clone", "(", ")", "\n", "", "score", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "", "pc", "=", "best", "[", "'pc'", "]", "\n", "pc_vec", "=", "best", "[", "'pc_vec'", "]", "\n", "pc_theta", "=", "best", "[", "'pc_theta'", "]", "\n", "pc_height", "=", "best", "[", "'pc_height'", "]", "\n", "opt_cor_id", "=", "pc2cor_id", "(", "pc", ",", "pc_vec", ",", "pc_theta", ",", "pc_height", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "split_num", "=", "int", "(", "opt_cor_id", ".", "shape", "[", "0", "]", "//", "2", ")", "\n", "opt_cor_id", "=", "np", ".", "stack", "(", "[", "opt_cor_id", "[", ":", "split_num", "]", ",", "opt_cor_id", "[", "split_num", ":", "]", "]", ",", "axis", "=", "1", ")", ".", "reshape", "(", "split_num", "*", "2", ",", "2", ")", "\n", "\n", "#print(opt_cor_id)", "\n", "#print(cor_id)", "\n", "#time.sleep(500)", "\n", "return", "opt_cor_id", "\n", "", ""]]}