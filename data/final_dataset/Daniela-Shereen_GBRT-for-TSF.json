{"home.repos.pwc.inspect_result.Daniela-Shereen_GBRT-for-TSF.Multivariate.xgboostWB_sequence_to_sequence_dl_framework.preprocessing": [[37, 128], ["pandas.to_datetime", "numpy.arange", "normalizer.transform.pop", "normalizer.transform.astype", "normalizer.transform.pop", "normalizer.transform.astype", "print", "normalizer.transform.astype", "sklearn.preprocessing.MinMaxScaler().fit", "MinMaxScaler().fit.transform", "len", "numpy.asarray", "y_batches.reshape.reshape", "numpy.asarray", "x_batches.reshape.reshape", "print", "normalizer.transform.astype", "MinMaxScaler().fit.transform", "len", "numpy.asarray", "y_testbatches.reshape.reshape", "numpy.asarray", "x_testbatches.reshape.reshape", "print", "print", "len", "x_batches.reshape.append", "y_batches.reshape.append", "len", "x_testbatches.reshape.append", "y_testbatches.reshape.append", "len", "len", "sklearn.preprocessing.MinMaxScaler", "numpy.isnan"], "function", ["None"], ["def", "preprocessing", "(", "df_", ",", "num_features", ")", ":", "\n", "    ", "cols", "=", "df_", ".", "columns", "\n", "#print('shape before',df_.shape)", "\n", "df_", "=", "df_", "[", "np", ".", "isnan", "(", "df_", "[", "'pm2.5'", "]", ")", "!=", "True", "]", "\n", "#print('shape AFTER',df_.shape)", "\n", "#print('date',df_['Date'].dtype)", "\n", "df_", "[", "'Date'", "]", "=", "pd", ".", "to_datetime", "(", "df_", "[", "'Date'", "]", ",", "format", "=", "'%Y-%m-%d'", ")", "\n", "#print('date',df_['Date'].dtype)", "\n", "df_", "[", "'DayofWeek'", "]", "=", "df_", "[", "'Date'", "]", ".", "dt", ".", "dayofweek", "\n", "df_", "[", "'Week'", "]", "=", "df_", "[", "'Date'", "]", ".", "dt", ".", "week", "\n", "df_", "[", "'dayofyear'", "]", "=", "df_", "[", "'Date'", "]", ".", "dt", ".", "dayofyear", "\n", "df_", "[", "'seq'", "]", "=", "np", ".", "arange", "(", "0", ",", "len", "(", "df_", ")", ",", "1", ")", "\n", "Train", "=", "df_", "[", "(", "df_", ".", "year", "==", "2010", ")", "|", "(", "df_", ".", "year", "==", "2011", ")", "|", "(", "df_", ".", "year", "==", "2012", ")", "|", "(", "df_", ".", "year", "==", "2013", ")", "]", "\n", "Test", "=", "df_", "[", "(", "df_", ".", "year", "==", "2014", ")", "]", "\n", "\n", "################################################encoding########################", "\n", "\n", "Train", "=", "Train", "[", "[", "'pm2.5'", ",", "'seq'", ",", "'No'", ",", "'year'", ",", "'month'", ",", "'day'", ",", "'hour'", ",", "'DEWP'", ",", "'TEMP'", ",", "'PRES'", ",", "'cbwd'", ",", "'Iws'", ",", "'Is'", ",", "'Ir'", "]", "]", "\n", "\n", "cbwd", "=", "Train", ".", "pop", "(", "'cbwd'", ")", "\n", "Train", ".", "loc", "[", ":", ",", "'cbwd_cv'", "]", "=", "(", "cbwd", "==", "'cv'", ")", "*", "1.0", "\n", "Train", ".", "loc", "[", ":", ",", "'cbwd_NE'", "]", "=", "(", "cbwd", "==", "'NE'", ")", "*", "1.0", "\n", "Train", ".", "loc", "[", ":", ",", "'cbwd_NW'", "]", "=", "(", "cbwd", "==", "'NW'", ")", "*", "1.0", "\n", "Train", ".", "loc", "[", ":", ",", "'cbwd_SE'", "]", "=", "(", "cbwd", "==", "'SE'", ")", "*", "1.0", "\n", "Train", "=", "Train", ".", "values", "\n", "Train", "=", "Train", ".", "astype", "(", "'float32'", ")", "\n", "#################################################################################", "\n", "\n", "Test", "=", "Test", "[", "[", "'pm2.5'", ",", "'seq'", ",", "'No'", ",", "'year'", ",", "'month'", ",", "'day'", ",", "'hour'", ",", "'DEWP'", ",", "'TEMP'", ",", "'PRES'", ",", "'cbwd'", ",", "'Iws'", ",", "'Is'", ",", "'Ir'", "]", "]", "\n", "\n", "cbwd", "=", "Test", ".", "pop", "(", "'cbwd'", ")", "\n", "Test", ".", "loc", "[", ":", ",", "'cbwd_cv'", "]", "=", "(", "cbwd", "==", "'cv'", ")", "*", "1.0", "\n", "Test", ".", "loc", "[", ":", ",", "'cbwd_NE'", "]", "=", "(", "cbwd", "==", "'NE'", ")", "*", "1.0", "\n", "Test", ".", "loc", "[", ":", ",", "'cbwd_NW'", "]", "=", "(", "cbwd", "==", "'NW'", ")", "*", "1.0", "\n", "Test", ".", "loc", "[", ":", ",", "'cbwd_SE'", "]", "=", "(", "cbwd", "==", "'SE'", ")", "*", "1.0", "\n", "Test", "=", "Test", ".", "values", "\n", "Test", "=", "Test", ".", "astype", "(", "'float32'", ")", "\n", "#################################################################################", "\n", "Number_Of_Features", "=", "num_features", "\n", "\n", "#############################  Normalization on training #############", "\n", "#normalizing data", "\n", "print", "(", "'Len of training   '", ",", "Train", ")", "\n", "Train", "=", "Train", ".", "astype", "(", "'float32'", ")", "\n", "normalizer", "=", "MinMaxScaler", "(", ")", ".", "fit", "(", "Train", ")", "\n", "Train", "=", "normalizer", ".", "transform", "(", "Train", ")", "\n", "############################################ TRAIN windows ##################################", "\n", "\n", "end", "=", "len", "(", "Train", ")", "\n", "start", "=", "0", "\n", "next", "=", "0", "\n", "x_batches", "=", "[", "]", "\n", "y_batches", "=", "[", "]", "\n", "\n", "count", "=", "0", "\n", "limit", "=", "num_periods_output", "+", "num_periods_input", "\n", "while", "start", "+", "(", "limit", ")", "<=", "end", ":", "\n", "        ", "next", "=", "start", "+", "num_periods_input", "\n", "x_batches", ".", "append", "(", "Train", "[", "start", ":", "next", ",", ":", "]", ")", "\n", "y_batches", ".", "append", "(", "Train", "[", "next", ":", "next", "+", "num_periods_output", ",", "0", "]", ")", "\n", "start", "=", "start", "+", "1", "\n", "", "y_batches", "=", "np", ".", "asarray", "(", "y_batches", ")", "\n", "y_batches", "=", "y_batches", ".", "reshape", "(", "-", "1", ",", "num_periods_output", ",", "1", ")", "\n", "x_batches", "=", "np", ".", "asarray", "(", "x_batches", ")", "\n", "x_batches", "=", "x_batches", ".", "reshape", "(", "-", "1", ",", "num_periods_input", ",", "Number_Of_Features", ")", "\n", "print", "(", "'len x_batches '", ",", "len", "(", "x_batches", ")", ")", "\n", "\n", "###########################################TEST normalization ################################", "\n", "Test", "=", "Test", ".", "astype", "(", "'float32'", ")", "\n", "Test", "=", "normalizer", ".", "transform", "(", "Test", ")", "\n", "#------------------", "\n", "############################################ TEST windows ##################################", "\n", "end_test", "=", "len", "(", "Test", ")", "\n", "start_test", "=", "0", "\n", "next_test", "=", "0", "\n", "x_testbatches", "=", "[", "]", "\n", "y_testbatches", "=", "[", "]", "\n", "\n", "while", "start_test", "+", "(", "limit", ")", "<=", "end_test", ":", "\n", "        ", "next_test", "=", "start_test", "+", "num_periods_input", "\n", "x_testbatches", ".", "append", "(", "Test", "[", "start_test", ":", "next_test", ",", ":", "]", ")", "\n", "y_testbatches", ".", "append", "(", "Test", "[", "next_test", ":", "next_test", "+", "num_periods_output", ",", "0", "]", ")", "\n", "start_test", "=", "start_test", "+", "num_periods_output", "\n", "", "y_testbatches", "=", "np", ".", "asarray", "(", "y_testbatches", ")", "\n", "y_testbatches", "=", "y_testbatches", ".", "reshape", "(", "-", "1", ",", "num_periods_output", ",", "1", ")", "\n", "x_testbatches", "=", "np", ".", "asarray", "(", "x_testbatches", ")", "\n", "x_testbatches", "=", "x_testbatches", ".", "reshape", "(", "-", "1", ",", "num_periods_input", ",", "Number_Of_Features", ")", "\n", "print", "(", "'len Test'", ",", "len", "(", "Test", ")", ")", "\n", "print", "(", "'len xTestbatches'", ",", "len", "(", "x_testbatches", ")", ")", "\n", "\n", "return", "x_batches", ",", "y_batches", ",", "x_testbatches", ",", "y_testbatches", "\n", "\n"]], "home.repos.pwc.inspect_result.Daniela-Shereen_GBRT-for-TSF.Multivariate.xgboostWB_forecasting_using_hybrid_dl_urban_dataset.preprocessing": [[37, 130], ["np.append.fillna", "np.append.fillna", "np.append.astype", "np.append.astype", "numpy.delete", "print", "np.append.astype", "sklearn.preprocessing.MinMaxScaler().fit", "MinMaxScaler().fit.transform", "numpy.reshape", "numpy.append", "len", "numpy.asarray", "x_batches.reshape.reshape", "numpy.asarray", "y_batches.reshape.reshape", "numpy.delete", "np.append.astype", "MinMaxScaler().fit.transform", "numpy.reshape", "numpy.append", "len", "numpy.asarray", "x_testbatches.reshape.reshape", "numpy.asarray", "y_testbatches.reshape.reshape", "print", "print", "np.append.mean", "np.append.mean", "x_batches.reshape.append", "y_batches.reshape.append", "x_testbatches.reshape.append", "y_testbatches.reshape.append", "len", "len", "sklearn.preprocessing.MinMaxScaler", "len", "len"], "function", ["None"], ["def", "preprocessing", "(", "df_", ",", "num_features", ")", ":", "\n", "\n", "    ", "cols", "=", "df_", ".", "columns", "\n", "Train", "=", "df_", "[", "(", "df_", ".", "year", "==", "2014", ")", "]", "\n", "Test", "=", "df_", "[", "(", "df_", ".", "year", "==", "2015", ")", "]", "\n", "Train", "=", "Train", ".", "fillna", "(", "Train", ".", "mean", "(", ")", ")", "\n", "Test", "=", "Test", ".", "fillna", "(", "Test", ".", "mean", "(", ")", ")", "\n", "################################################encoding########################", "\n", "Train", "=", "Train", "[", "[", "'PM25_Concentration'", ",", "'station_id'", ",", "'year'", ",", "'month'", ",", "'day'", ",", "'hour'", ",", "'PM10_Concentration'", ",", "'NO2_Concentration'", ",", "'CO_Concentration'", ",", "'O3_Concentration'", ",", "\n", "'SO2_Concentration'", ",", "'temperature'", ",", "'pressure'", ",", "'humidity'", ",", "'wind_speed'", ",", "'wind_direction'", "]", "]", "\n", "\n", "Train", "=", "Train", ".", "values", "\n", "Train", "=", "Train", ".", "astype", "(", "'float32'", ")", "\n", "#################################################################################", "\n", "\n", "Test", "=", "Test", "[", "[", "'PM25_Concentration'", ",", "'station_id'", ",", "'year'", ",", "'month'", ",", "'day'", ",", "'hour'", ",", "'PM10_Concentration'", ",", "'NO2_Concentration'", ",", "'CO_Concentration'", ",", "'O3_Concentration'", ",", "\n", "'SO2_Concentration'", ",", "'temperature'", ",", "'pressure'", ",", "'humidity'", ",", "'wind_speed'", ",", "'wind_direction'", "]", "]", "\n", "Test", "=", "Test", ".", "values", "\n", "Test", "=", "Test", ".", "astype", "(", "'float32'", ")", "\n", "#################################################################################", "\n", "Number_Of_Features", "=", "num_features", "\n", "split", "=", "num_periods_output", "+", "num_periods_input", "\n", "\n", "#############################  Normalization on training #############", "\n", "PM_Train", "=", "Train", "[", ":", ",", "0", "]", "\n", "Train", "=", "np", ".", "delete", "(", "Train", ",", "[", "0", "]", ",", "1", ")", "\n", "#normalizing data", "\n", "print", "(", "'Len of training   '", ",", "Train", ")", "\n", "Train", "=", "Train", ".", "astype", "(", "'float32'", ")", "\n", "normalizer", "=", "MinMaxScaler", "(", ")", ".", "fit", "(", "Train", ")", "\n", "#normalizer = Normalizer().fit(Train)", "\n", "Train", "=", "normalizer", ".", "transform", "(", "Train", ")", "\n", "\n", "PM_Train", "=", "np", ".", "reshape", "(", "PM_Train", ",", "(", "len", "(", "PM_Train", ")", ",", "1", ")", ")", "\n", "Train", "=", "np", ".", "append", "(", "PM_Train", ",", "Train", ",", "axis", "=", "1", ")", "\n", "############################################ TRAIN windows ##################################", "\n", "\n", "end", "=", "len", "(", "Train", ")", "\n", "start", "=", "0", "\n", "next", "=", "0", "\n", "x_batches", "=", "[", "]", "\n", "y_batches", "=", "[", "]", "\n", "\n", "count", "=", "0", "\n", "#print('len',len(Train))", "\n", "limit", "=", "num_periods_output", "+", "num_periods_input", "\n", "while", "start", "+", "(", "limit", ")", "<=", "end", ":", "\n", "        ", "next", "=", "start", "+", "num_periods_input", "\n", "x_batches", ".", "append", "(", "Train", "[", "start", ":", "next", ",", ":", "]", ")", "\n", "y_batches", ".", "append", "(", "Train", "[", "next", ":", "next", "+", "num_periods_output", ",", "0", "]", ")", "\n", "start", "=", "start", "+", "1", "\n", "", "x_batches", "=", "np", ".", "asarray", "(", "x_batches", ")", "\n", "#print('x-------------',len(x_batches))", "\n", "x_batches", "=", "x_batches", ".", "reshape", "(", "-", "1", ",", "num_periods_input", ",", "Number_Of_Features", ")", "\n", "y_batches", "=", "np", ".", "asarray", "(", "y_batches", ")", "\n", "#print('y=======',len(y_batches))", "\n", "y_batches", "=", "y_batches", ".", "reshape", "(", "-", "1", ",", "num_periods_output", ",", "1", ")", "\n", "#print('len x_batches ',len(x_batches))", "\n", "\n", "###########################################TEST normalization#####################################", "\n", "PM_Test", "=", "Test", "[", ":", ",", "0", "]", "\n", "Test", "=", "np", ".", "delete", "(", "Test", ",", "[", "0", "]", ",", "1", ")", "\n", "\n", "Test", "=", "Test", ".", "astype", "(", "'float32'", ")", "\n", "Test", "=", "normalizer", ".", "transform", "(", "Test", ")", "\n", "\n", "PM_Test", "=", "np", ".", "reshape", "(", "PM_Test", ",", "(", "len", "(", "PM_Test", ")", ",", "1", ")", ")", "\n", "Test", "=", "np", ".", "append", "(", "PM_Test", ",", "Test", ",", "axis", "=", "1", ")", "\n", "#------------------", "\n", "############################################ TEST windows ##################################", "\n", "end_test", "=", "len", "(", "Test", ")", "\n", "start_test", "=", "0", "\n", "next_test", "=", "0", "\n", "x_testbatches", "=", "[", "]", "\n", "y_testbatches", "=", "[", "]", "\n", "\n", "#print('len',len(Train))", "\n", "while", "start_test", "+", "(", "limit", ")", "<=", "end_test", ":", "\n", "        ", "next_test", "=", "start_test", "+", "num_periods_input", "\n", "x_testbatches", ".", "append", "(", "Test", "[", "start_test", ":", "next_test", ",", ":", "]", ")", "\n", "y_testbatches", ".", "append", "(", "Test", "[", "next_test", ":", "next_test", "+", "num_periods_output", ",", "0", "]", ")", "\n", "start_test", "=", "start_test", "+", "num_periods_output", "\n", "", "x_testbatches", "=", "np", ".", "asarray", "(", "x_testbatches", ")", "\n", "#print('x-------------',len(x_testbatches))", "\n", "\n", "x_testbatches", "=", "x_testbatches", ".", "reshape", "(", "-", "1", ",", "num_periods_input", ",", "Number_Of_Features", ")", "\n", "y_testbatches", "=", "np", ".", "asarray", "(", "y_testbatches", ")", "\n", "#print('yyyy=======',len(y_testbatches))", "\n", "y_testbatches", "=", "y_testbatches", ".", "reshape", "(", "-", "1", ",", "num_periods_output", ",", "1", ")", "\n", "print", "(", "'len Test'", ",", "len", "(", "Test", ")", ")", "\n", "print", "(", "'len xTestbatches'", ",", "len", "(", "x_testbatches", ")", ")", "\n", "\n", "return", "x_batches", ",", "y_batches", ",", "x_testbatches", ",", "y_testbatches", "\n", "\n"]], "home.repos.pwc.inspect_result.Daniela-Shereen_GBRT-for-TSF.Multivariate.xgboostWB_sml2010.preprocessing": [[36, 139], ["pandas.to_datetime", "pandas.to_datetime", "normalizer.transform.fillna", "normalizer.transform.fillna", "normalizer.transform.astype", "normalizer.transform.astype", "normalizer.transform.astype", "sklearn.preprocessing.StandardScaler().fit", "StandardScaler().fit.transform", "len", "print", "numpy.asarray", "x_batches.reshape.reshape", "numpy.asarray", "y_batches.reshape.reshape", "normalizer.transform.astype", "StandardScaler().fit.transform", "len", "numpy.asarray", "x_testbatches.reshape.reshape", "numpy.asarray", "y_testbatches.reshape.reshape", "y_testbatches.reshape.reshape", "print", "print", "normalizer.transform.mean", "normalizer.transform.mean", "len", "x_batches.reshape.append", "y_batches.reshape.append", "x_testbatches.reshape.append", "y_testbatches.reshape.append", "len", "len", "len", "sklearn.preprocessing.StandardScaler"], "function", ["None"], ["def", "preprocessing", "(", "df_", ",", "num_features", ")", ":", "\n", "#,'Month','Day','Hour','Minute'", "\n", "# select feature", "\n", "    ", "df_", "[", "'Date'", "]", "=", "pd", ".", "to_datetime", "(", "df_", "[", "'Date'", "]", ")", "#, format='%d/%m/%Y'", "\n", "df_", "[", "'day'", "]", "=", "df_", "[", "'Date'", "]", ".", "dt", ".", "day", "\n", "df_", "[", "'month'", "]", "=", "df_", "[", "'Date'", "]", ".", "dt", ".", "month", "\n", "df_", "[", "'year'", "]", "=", "df_", "[", "'Date'", "]", ".", "dt", ".", "year", "\n", "df_", "[", "'Time'", "]", "=", "pd", ".", "to_datetime", "(", "df_", "[", "'Time'", "]", ")", "#, format='%h:%m'", "\n", "df_", "[", "'hour'", "]", "=", "df_", "[", "'Time'", "]", ".", "dt", ".", "hour", "\n", "df_", "[", "'min'", "]", "=", "df_", "[", "'Time'", "]", ".", "dt", ".", "minute", "\n", "cols", "=", "df_", ".", "columns", "\n", "\n", "Train", "=", "df_", ".", "iloc", "[", "0", ":", "3600", ",", ":", "]", "\n", "Test", "=", "df_", ".", "iloc", "[", "3600", "-", "num_periods_input", ":", ",", ":", "]", "\n", "Train", "=", "Train", ".", "fillna", "(", "Train", ".", "mean", "(", ")", ")", "\n", "Test", "=", "Test", ".", "fillna", "(", "Test", ".", "mean", "(", ")", ")", "\n", "################################################encoding########################", "\n", "Train", "=", "Train", "[", "[", "'Temperature_Habitacion_Sensor'", ",", "'day'", ",", "'month'", ",", "'year'", ",", "'hour'", ",", "'min'", ",", "'Temperature_Comedor_Sensor'", ",", "\n", "'Weather_Temperature'", ",", "'CO2_Comedor_Sensor'", ",", "'CO2_Habitacion_Sensor'", ",", "'Humedad_Comedor_Sensor'", ",", "\n", "'Humedad_Habitacion_Sensor'", ",", "'Lighting_Comedor_Sensor'", ",", "'Lighting_Habitacion_Sensor'", ",", "'Precipitacion'", ",", "\n", "'Meteo_Exterior_Crepusculo'", ",", "'Meteo_Exterior_Viento'", ",", "'Meteo_Exterior_Sol_Oest'", ",", "'Meteo_Exterior_Sol_Est'", ",", "\n", "'Meteo_Exterior_Sol_Sud'", ",", "'Meteo_Exterior_Piranometro'", ",", "'Exterior_Entalpic_1'", ",", "\n", "'Exterior_Entalpic_2'", ",", "'Exterior_Entalpic_turbo'", ",", "'Temperature_Exterior_Sensor'", ",", "'Humedad_Exterior_Sensor'", ",", "'Day_Of_Week'", "]", "]", "\n", "\n", "Train", "=", "Train", ".", "values", "\n", "Train", "=", "Train", ".", "astype", "(", "'float32'", ")", "\n", "#################################################################################", "\n", "\n", "Test", "=", "Test", "[", "[", "'Temperature_Habitacion_Sensor'", ",", "'day'", ",", "'month'", ",", "'year'", ",", "'hour'", ",", "'min'", ",", "'Temperature_Comedor_Sensor'", ",", "\n", "'Weather_Temperature'", ",", "'CO2_Comedor_Sensor'", ",", "'CO2_Habitacion_Sensor'", ",", "'Humedad_Comedor_Sensor'", ",", "\n", "'Humedad_Habitacion_Sensor'", ",", "'Lighting_Comedor_Sensor'", ",", "'Lighting_Habitacion_Sensor'", ",", "'Precipitacion'", ",", "\n", "'Meteo_Exterior_Crepusculo'", ",", "'Meteo_Exterior_Viento'", ",", "'Meteo_Exterior_Sol_Oest'", ",", "'Meteo_Exterior_Sol_Est'", ",", "\n", "'Meteo_Exterior_Sol_Sud'", ",", "'Meteo_Exterior_Piranometro'", ",", "'Exterior_Entalpic_1'", ",", "\n", "'Exterior_Entalpic_2'", ",", "'Exterior_Entalpic_turbo'", ",", "'Temperature_Exterior_Sensor'", ",", "'Humedad_Exterior_Sensor'", ",", "'Day_Of_Week'", "]", "]", "\n", "Test", "=", "Test", ".", "values", "\n", "Test", "=", "Test", ".", "astype", "(", "'float32'", ")", "\n", "#################################################################################", "\n", "Number_Of_Features", "=", "num_features", "\n", "split", "=", "num_periods_output", "+", "num_periods_input", "\n", "\n", "####################### CUT THE PORTION of the data that we are working on ", "\n", "\n", "#############################  Normalization on train  #############", "\n", "\n", "#print('Len o training   ',Train)", "\n", "Train", "=", "Train", ".", "astype", "(", "'float32'", ")", "\n", "normalizer", "=", "StandardScaler", "(", ")", ".", "fit", "(", "Train", ")", "\n", "Train", "=", "normalizer", ".", "transform", "(", "Train", ")", "\n", "\n", "############################################ TRAIN minibatches ##################################", "\n", "\n", "end", "=", "len", "(", "Train", ")", "\n", "start", "=", "0", "\n", "next", "=", "0", "\n", "x_batches", "=", "[", "]", "\n", "y_batches", "=", "[", "]", "\n", "\n", "count", "=", "0", "\n", "print", "(", "'lennnn'", ",", "len", "(", "Train", ")", ")", "\n", "limit", "=", "num_periods_output", "+", "num_periods_input", "\n", "while", "start", "+", "(", "limit", ")", "<=", "end", ":", "\n", "        ", "next", "=", "start", "+", "num_periods_input", "\n", "x_batches", ".", "append", "(", "Train", "[", "start", ":", "next", ",", ":", "]", ")", "\n", "y_batches", ".", "append", "(", "Train", "[", "next", ":", "next", "+", "num_periods_output", ",", "0", "]", ")", "\n", "start", "=", "start", "+", "1", "\n", "", "x_batches", "=", "np", ".", "asarray", "(", "x_batches", ")", "\n", "#print('x-------------',len(x_batches))", "\n", "x_batches", "=", "x_batches", ".", "reshape", "(", "-", "1", ",", "num_periods_input", ",", "Number_Of_Features", ")", "\n", "y_batches", "=", "np", ".", "asarray", "(", "y_batches", ")", "\n", "#print('y=======',len(y_batches))", "\n", "y_batches", "=", "y_batches", ".", "reshape", "(", "-", "1", ",", "num_periods_output", ",", "1", ")", "\n", "#print('len x_batches ',len(x_batches))", "\n", "\n", "###########################################TEST Normalization################################", "\n", "\n", "Test", "=", "Test", ".", "astype", "(", "'float32'", ")", "\n", "Test", "=", "normalizer", ".", "transform", "(", "Test", ")", "\n", "\n", "############################################ TEST minibatches ##################################", "\n", "end_test", "=", "len", "(", "Test", ")", "\n", "start_test", "=", "0", "\n", "next_test", "=", "0", "\n", "x_testbatches", "=", "[", "]", "\n", "y_testbatches", "=", "[", "]", "\n", "\n", "#print('lennnn',len(Train))", "\n", "while", "start_test", "+", "(", "limit", ")", "<=", "end_test", ":", "\n", "        ", "next_test", "=", "start_test", "+", "num_periods_input", "\n", "x_testbatches", ".", "append", "(", "Test", "[", "start_test", ":", "next_test", ",", ":", "]", ")", "\n", "y_testbatches", ".", "append", "(", "Test", "[", "next_test", ":", "next_test", "+", "num_periods_output", ",", "0", "]", ")", "\n", "start_test", "=", "start_test", "+", "num_periods_output", "\n", "", "x_testbatches", "=", "np", ".", "asarray", "(", "x_testbatches", ")", "\n", "#print('x test-------------',len(x_testbatches))", "\n", "\n", "x_testbatches", "=", "x_testbatches", ".", "reshape", "(", "-", "1", ",", "num_periods_input", ",", "Number_Of_Features", ")", "\n", "y_testbatches", "=", "np", ".", "asarray", "(", "y_testbatches", ")", "\n", "#print('yyyy=======',[len(s) for s in y_testbatches])", "\n", "y_testbatches", "=", "y_testbatches", ".", "reshape", "(", "len", "(", "y_testbatches", ")", ",", "num_periods_output", ")", "\n", "y_testbatches", "=", "y_testbatches", ".", "reshape", "(", "-", "1", ",", "num_periods_output", ",", "1", ")", "\n", "print", "(", "'len Test'", ",", "len", "(", "Test", ")", ")", "\n", "print", "(", "'len xTestbatches'", ",", "len", "(", "x_testbatches", ")", ")", "\n", "\n", "return", "x_batches", ",", "y_batches", ",", "x_testbatches", ",", "y_testbatches", "\n", "\n"]], "home.repos.pwc.inspect_result.Daniela-Shereen_GBRT-for-TSF.Multivariate.xgboostWB_sml2010.mean_absolute_percentage_error": [[239, 244], ["numpy.divide", "numpy.mean", "numpy.abs", "numpy.zeros_like"], "function", ["None"], ["def", "mean_absolute_percentage_error", "(", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "a", "=", "(", "y_true", "-", "y_pred", ")", "\n", "b", "=", "y_true", "\n", "c", "=", "np", ".", "divide", "(", "a", ",", "b", ",", "out", "=", "np", ".", "zeros_like", "(", "a", ")", ",", "where", "=", "b", "!=", "0", ")", "\n", "return", "np", ".", "mean", "(", "np", ".", "abs", "(", "c", ")", ")", "\n", "# =================================================================", "\n"]], "home.repos.pwc.inspect_result.Daniela-Shereen_GBRT-for-TSF.Multivariate.xgboostWB_nasdaq.preprocessing": [[39, 138], ["normalizer.transform.fillna", "normalizer.transform.fillna", "normalizer.transform.astype", "normalizer.transform.astype", "normalizer.transform.astype", "sklearn.preprocessing.StandardScaler().fit", "StandardScaler().fit.transform", "len", "print", "numpy.asarray", "x_batches.reshape.reshape", "numpy.asarray", "y_batches.reshape.reshape", "print", "normalizer.transform.astype", "StandardScaler().fit.transform", "len", "numpy.asarray", "print", "x_testbatches.reshape.reshape", "numpy.asarray", "y_testbatches.reshape.reshape", "y_testbatches.reshape.reshape", "print", "print", "normalizer.transform.mean", "normalizer.transform.mean", "len", "x_batches.reshape.append", "y_batches.reshape.append", "len", "x_testbatches.reshape.append", "y_testbatches.reshape.append", "len", "len", "len", "len", "sklearn.preprocessing.StandardScaler"], "function", ["None"], ["def", "preprocessing", "(", "df_", ",", "num_features", ")", ":", "\n", "    ", "cols", "=", "df_", ".", "columns", "\n", "\n", "Train", "=", "df_", ".", "iloc", "[", "0", ":", "37830", ",", ":", "]", "\n", "Test", "=", "df_", ".", "iloc", "[", "37830", "-", "num_periods_input", ":", ",", ":", "]", "\n", "Train", "=", "Train", ".", "fillna", "(", "Train", ".", "mean", "(", ")", ")", "\n", "Test", "=", "Test", ".", "fillna", "(", "Test", ".", "mean", "(", ")", ")", "\n", "################################################encoding########################", "\n", "\n", "Train", "=", "Train", "[", "[", "'NDX'", ",", "'AAL'", ",", "'AAPL'", ",", "'ADBE'", ",", "'ADI'", ",", "'ADP'", ",", "'ADSK'", ",", "'AKAM'", ",", "'ALXN'", ",", "'AMAT'", ",", "'AMGN'", ",", "'AMZN'", ",", "\n", "'ATVI'", ",", "'AVGO'", ",", "'BBBY'", ",", "'BIDU'", ",", "'BIIB'", ",", "'CA'", ",", "'CELG'", ",", "'CERN'", ",", "'CMCSA'", ",", "'COST'", ",", "\n", "'CSCO'", ",", "'CSX'", ",", "'CTRP'", ",", "'CTSH'", ",", "'DISCA'", ",", "'DISH'", ",", "'DLTR'", ",", "'EA'", ",", "'EBAY'", ",", "'ESRX'", ",", "\n", "'EXPE'", ",", "'FAST'", ",", "'FB'", ",", "'FOX'", ",", "'FOXA'", ",", "'GILD'", ",", "'GOOGL'", ",", "'INTC'", ",", "'JD'", ",", "'KHC'", ",", "'LBTYA'", ",", "\n", "'LBTYK'", ",", "'LRCX'", ",", "'MAR'", ",", "'MAT'", ",", "'MCHP'", ",", "'MDLZ'", ",", "'MSFT'", ",", "'MU'", ",", "'MXIM'", ",", "'MYL'", ",", "'NCLH'", ",", "\n", "'NFLX'", ",", "'NTAP'", ",", "'NVDA'", ",", "'NXPI'", ",", "'PAYX'", ",", "'PCAR'", ",", "'PYPL'", ",", "'QCOM'", ",", "'QVCA'", ",", "'ROST'", ",", "\n", "'SBUX'", ",", "'SIRI'", ",", "'STX'", ",", "'SWKS'", ",", "'SYMC'", ",", "'TMUS'", ",", "'TRIP'", ",", "'TSCO'", ",", "'TSLA'", ",", "'TXN'", ",", "\n", "'VIAB'", ",", "'VOD'", ",", "'VRTX'", ",", "'WBA'", ",", "'WDC'", ",", "'WFM'", ",", "'XLNX'", ",", "'YHOO'", "]", "]", "\n", "\n", "Train", "=", "Train", ".", "values", "\n", "Train", "=", "Train", ".", "astype", "(", "'float32'", ")", "\n", "#################################################################################", "\n", "\n", "Test", "=", "Test", "[", "[", "'NDX'", ",", "'AAL'", ",", "'AAPL'", ",", "'ADBE'", ",", "'ADI'", ",", "'ADP'", ",", "'ADSK'", ",", "'AKAM'", ",", "'ALXN'", ",", "'AMAT'", ",", "'AMGN'", ",", "'AMZN'", ",", "\n", "'ATVI'", ",", "'AVGO'", ",", "'BBBY'", ",", "'BIDU'", ",", "'BIIB'", ",", "'CA'", ",", "'CELG'", ",", "'CERN'", ",", "'CMCSA'", ",", "'COST'", ",", "\n", "'CSCO'", ",", "'CSX'", ",", "'CTRP'", ",", "'CTSH'", ",", "'DISCA'", ",", "'DISH'", ",", "'DLTR'", ",", "'EA'", ",", "'EBAY'", ",", "'ESRX'", ",", "\n", "'EXPE'", ",", "'FAST'", ",", "'FB'", ",", "'FOX'", ",", "'FOXA'", ",", "'GILD'", ",", "'GOOGL'", ",", "'INTC'", ",", "'JD'", ",", "'KHC'", ",", "'LBTYA'", ",", "\n", "'LBTYK'", ",", "'LRCX'", ",", "'MAR'", ",", "'MAT'", ",", "'MCHP'", ",", "'MDLZ'", ",", "'MSFT'", ",", "'MU'", ",", "'MXIM'", ",", "'MYL'", ",", "'NCLH'", ",", "\n", "'NFLX'", ",", "'NTAP'", ",", "'NVDA'", ",", "'NXPI'", ",", "'PAYX'", ",", "'PCAR'", ",", "'PYPL'", ",", "'QCOM'", ",", "'QVCA'", ",", "'ROST'", ",", "\n", "'SBUX'", ",", "'SIRI'", ",", "'STX'", ",", "'SWKS'", ",", "'SYMC'", ",", "'TMUS'", ",", "'TRIP'", ",", "'TSCO'", ",", "'TSLA'", ",", "'TXN'", ",", "\n", "'VIAB'", ",", "'VOD'", ",", "'VRTX'", ",", "'WBA'", ",", "'WDC'", ",", "'WFM'", ",", "'XLNX'", ",", "'YHOO'", "]", "]", "\n", "Test", "=", "Test", ".", "values", "\n", "Test", "=", "Test", ".", "astype", "(", "'float32'", ")", "\n", "#################################################################################", "\n", "Number_Of_Features", "=", "num_features", "\n", "split", "=", "num_periods_output", "+", "num_periods_input", "\n", "\n", "####################### CUT THE PORTION of the data that we are working on ", "\n", "\n", "#############################  Normalization on train   #############", "\n", "\n", "#print('Len o training   ',Train)", "\n", "Train", "=", "Train", ".", "astype", "(", "'float32'", ")", "\n", "normalizer", "=", "StandardScaler", "(", ")", ".", "fit", "(", "Train", ")", "\n", "Train", "=", "normalizer", ".", "transform", "(", "Train", ")", "\n", "############################################ TRAIN minibatches ##################################", "\n", "\n", "end", "=", "len", "(", "Train", ")", "\n", "start", "=", "0", "\n", "next", "=", "0", "\n", "x_batches", "=", "[", "]", "\n", "y_batches", "=", "[", "]", "\n", "\n", "count", "=", "0", "\n", "print", "(", "'lennnn'", ",", "len", "(", "Train", ")", ")", "\n", "limit", "=", "num_periods_output", "+", "num_periods_input", "\n", "while", "start", "+", "(", "limit", ")", "<=", "end", ":", "\n", "        ", "next", "=", "start", "+", "num_periods_input", "\n", "x_batches", ".", "append", "(", "Train", "[", "start", ":", "next", ",", ":", "]", ")", "\n", "y_batches", ".", "append", "(", "Train", "[", "next", ":", "next", "+", "num_periods_output", ",", "0", "]", ")", "\n", "start", "=", "start", "+", "1", "\n", "", "x_batches", "=", "np", ".", "asarray", "(", "x_batches", ")", "\n", "#print('xxxxxx-------------',len(x_batches))", "\n", "x_batches", "=", "x_batches", ".", "reshape", "(", "-", "1", ",", "num_periods_input", ",", "Number_Of_Features", ")", "\n", "y_batches", "=", "np", ".", "asarray", "(", "y_batches", ")", "\n", "#print('yyyy=======',len(y_batches))", "\n", "y_batches", "=", "y_batches", ".", "reshape", "(", "-", "1", ",", "num_periods_output", ",", "1", ")", "\n", "print", "(", "'len x_batches '", ",", "len", "(", "x_batches", ")", ")", "\n", "\n", "###########################################TEST#####################################", "\n", "\n", "Test", "=", "Test", ".", "astype", "(", "'float32'", ")", "\n", "Test", "=", "normalizer", ".", "transform", "(", "Test", ")", "\n", "\n", "############################################ TEST minibatches ##################################", "\n", "end_test", "=", "len", "(", "Test", ")", "\n", "start_test", "=", "0", "\n", "next_test", "=", "0", "\n", "x_testbatches", "=", "[", "]", "\n", "y_testbatches", "=", "[", "]", "\n", "\n", "\n", "#print('lennnn',len(Train))", "\n", "while", "start_test", "+", "(", "limit", ")", "<=", "end_test", ":", "\n", "        ", "next_test", "=", "start_test", "+", "num_periods_input", "\n", "x_testbatches", ".", "append", "(", "Test", "[", "start_test", ":", "next_test", ",", ":", "]", ")", "\n", "y_testbatches", ".", "append", "(", "Test", "[", "next_test", ":", "next_test", "+", "num_periods_output", ",", "0", "]", ")", "\n", "start_test", "=", "start_test", "+", "num_periods_output", "\n", "", "x_testbatches", "=", "np", ".", "asarray", "(", "x_testbatches", ")", "\n", "print", "(", "'x---------'", ",", "len", "(", "x_testbatches", ")", ")", "\n", "\n", "x_testbatches", "=", "x_testbatches", ".", "reshape", "(", "-", "1", ",", "num_periods_input", ",", "Number_Of_Features", ")", "\n", "y_testbatches", "=", "np", ".", "asarray", "(", "y_testbatches", ")", "\n", "#print('y=====',[len(s) for s in y_testbatches])", "\n", "y_testbatches", "=", "y_testbatches", ".", "reshape", "(", "len", "(", "y_testbatches", ")", ",", "num_periods_output", ")", "\n", "y_testbatches", "=", "y_testbatches", ".", "reshape", "(", "-", "1", ",", "num_periods_output", ",", "1", ")", "\n", "print", "(", "'len Test'", ",", "len", "(", "Test", ")", ")", "\n", "print", "(", "'len xTestbatches'", ",", "len", "(", "x_testbatches", ")", ")", "\n", "\n", "return", "x_batches", ",", "y_batches", ",", "x_testbatches", ",", "y_testbatches", "\n", "\n"]], "home.repos.pwc.inspect_result.Daniela-Shereen_GBRT-for-TSF.Multivariate.xgboostWB_nasdaq.mean_absolute_percentage_error": [[230, 235], ["numpy.divide", "numpy.mean", "numpy.abs", "numpy.zeros_like"], "function", ["None"], ["def", "mean_absolute_percentage_error", "(", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "a", "=", "(", "y_true", "-", "y_pred", ")", "\n", "b", "=", "y_true", "\n", "c", "=", "np", ".", "divide", "(", "a", ",", "b", ",", "out", "=", "np", ".", "zeros_like", "(", "a", ")", ",", "where", "=", "b", "!=", "0", ")", "\n", "return", "np", ".", "mean", "(", "np", ".", "abs", "(", "c", ")", ")", "\n", "# =================================================================", "\n"]], "home.repos.pwc.inspect_result.Daniela-Shereen_GBRT-for-TSF.Multivariate.xgboostWB_forecasting_using_hybrid_dl_framework_pm2_5.preprocessing": [[37, 144], ["pandas.to_datetime", "np.append.fillna", "np.append.fillna", "np.append.pop", "np.append.astype", "np.append.pop", "np.append.astype", "numpy.delete", "print", "np.append.astype", "sklearn.preprocessing.MinMaxScaler().fit", "MinMaxScaler().fit.transform", "numpy.reshape", "numpy.append", "len", "numpy.asarray", "x_batches.reshape.reshape", "numpy.asarray", "y_batches.reshape.reshape", "numpy.delete", "np.append.astype", "MinMaxScaler().fit.transform", "numpy.reshape", "numpy.append", "len", "numpy.asarray", "x_testbatches.reshape.reshape", "numpy.asarray", "y_testbatches.reshape.reshape", "print", "print", "np.append.mean", "np.append.mean", "x_batches.reshape.append", "y_batches.reshape.append", "x_testbatches.reshape.append", "y_testbatches.reshape.append", "len", "len", "sklearn.preprocessing.MinMaxScaler", "len", "len"], "function", ["None"], ["def", "preprocessing", "(", "df_", ",", "num_features", ")", ":", "\n", "\n", "    ", "cols", "=", "df_", ".", "columns", "\n", "#print('shape before',df_.shape)", "\n", "#print('date',df_['Date'].dtype)", "\n", "df_", "[", "'Date'", "]", "=", "pd", ".", "to_datetime", "(", "df_", "[", "'Date'", "]", ",", "format", "=", "'%Y-%m-%d'", ")", "\n", "#print('date',df_['Date'].dtype)", "\n", "df_", "[", "'DayofWeek'", "]", "=", "df_", "[", "'Date'", "]", ".", "dt", ".", "dayofweek", "\n", "df_", "[", "'Week'", "]", "=", "df_", "[", "'Date'", "]", ".", "dt", ".", "week", "\n", "df_", "[", "'dayofyear'", "]", "=", "df_", "[", "'Date'", "]", ".", "dt", ".", "dayofyear", "\n", "Train", "=", "df_", "[", "(", "df_", ".", "year", "==", "2010", ")", "|", "(", "df_", ".", "year", "==", "2011", ")", "|", "(", "df_", ".", "year", "==", "2012", ")", "|", "(", "df_", ".", "year", "==", "2013", ")", "]", "\n", "#Train=df_[(df_.year==2010) | (df_.year==2011)| (df_.year==2012)]", "\n", "Test", "=", "df_", "[", "(", "df_", ".", "year", "==", "2014", ")", "]", "\n", "Train", "=", "Train", ".", "fillna", "(", "Train", ".", "mean", "(", ")", ")", "\n", "Test", "=", "Test", ".", "fillna", "(", "Test", ".", "mean", "(", ")", ")", "\n", "################################################encoding########################", "\n", "\n", "Train", "=", "Train", "[", "[", "'pm2.5'", ",", "'No'", ",", "'year'", ",", "'month'", ",", "'day'", ",", "'hour'", ",", "'DEWP'", ",", "'TEMP'", ",", "'PRES'", ",", "'cbwd'", ",", "'Iws'", ",", "'Is'", ",", "'Ir'", "]", "]", "\n", "cbwd", "=", "Train", ".", "pop", "(", "'cbwd'", ")", "\n", "Train", ".", "loc", "[", ":", ",", "'cbwd_cv'", "]", "=", "(", "cbwd", "==", "'cv'", ")", "*", "1.0", "\n", "Train", ".", "loc", "[", ":", ",", "'cbwd_NE'", "]", "=", "(", "cbwd", "==", "'NE'", ")", "*", "1.0", "\n", "Train", ".", "loc", "[", ":", ",", "'cbwd_NW'", "]", "=", "(", "cbwd", "==", "'NW'", ")", "*", "1.0", "\n", "Train", ".", "loc", "[", ":", ",", "'cbwd_SE'", "]", "=", "(", "cbwd", "==", "'SE'", ")", "*", "1.0", "\n", "Train", "=", "Train", ".", "values", "\n", "Train", "=", "Train", ".", "astype", "(", "'float32'", ")", "\n", "#################################################################################", "\n", "\n", "Test", "=", "Test", "[", "[", "'pm2.5'", ",", "'No'", ",", "'year'", ",", "'month'", ",", "'day'", ",", "'hour'", ",", "'DEWP'", ",", "'TEMP'", ",", "'PRES'", ",", "'cbwd'", ",", "'Iws'", ",", "'Is'", ",", "'Ir'", "]", "]", "\n", "\n", "cbwd", "=", "Test", ".", "pop", "(", "'cbwd'", ")", "\n", "Test", ".", "loc", "[", ":", ",", "'cbwd_cv'", "]", "=", "(", "cbwd", "==", "'cv'", ")", "*", "1.0", "\n", "Test", ".", "loc", "[", ":", ",", "'cbwd_NE'", "]", "=", "(", "cbwd", "==", "'NE'", ")", "*", "1.0", "\n", "Test", ".", "loc", "[", ":", ",", "'cbwd_NW'", "]", "=", "(", "cbwd", "==", "'NW'", ")", "*", "1.0", "\n", "Test", ".", "loc", "[", ":", ",", "'cbwd_SE'", "]", "=", "(", "cbwd", "==", "'SE'", ")", "*", "1.0", "\n", "Test", "=", "Test", ".", "values", "\n", "Test", "=", "Test", ".", "astype", "(", "'float32'", ")", "\n", "#################################################################################", "\n", "Number_Of_Features", "=", "num_features", "\n", "#split=num_periods_output+num_periods_input", "\n", "\n", "#############################  Normalization on train  #############", "\n", "PM_Train", "=", "Train", "[", ":", ",", "0", "]", "\n", "Train", "=", "np", ".", "delete", "(", "Train", ",", "[", "0", "]", ",", "1", ")", "\n", "#normalizing data", "\n", "print", "(", "'Len of training   '", ",", "Train", ")", "\n", "Train", "=", "Train", ".", "astype", "(", "'float32'", ")", "\n", "normalizer", "=", "MinMaxScaler", "(", ")", ".", "fit", "(", "Train", ")", "\n", "Train", "=", "normalizer", ".", "transform", "(", "Train", ")", "\n", "\n", "PM_Train", "=", "np", ".", "reshape", "(", "PM_Train", ",", "(", "len", "(", "PM_Train", ")", ",", "1", ")", ")", "\n", "Train", "=", "np", ".", "append", "(", "PM_Train", ",", "Train", ",", "axis", "=", "1", ")", "\n", "############################################ TRAIN windows ##################################", "\n", "end", "=", "len", "(", "Train", ")", "\n", "start", "=", "0", "\n", "next", "=", "0", "\n", "x_batches", "=", "[", "]", "\n", "y_batches", "=", "[", "]", "\n", "\n", "count", "=", "0", "\n", "#print('len',len(Train))", "\n", "limit", "=", "num_periods_output", "+", "num_periods_input", "\n", "while", "start", "+", "(", "limit", ")", "<=", "end", ":", "\n", "        ", "next", "=", "start", "+", "num_periods_input", "\n", "x_batches", ".", "append", "(", "Train", "[", "start", ":", "next", ",", ":", "]", ")", "\n", "y_batches", ".", "append", "(", "Train", "[", "next", ":", "next", "+", "num_periods_output", ",", "0", "]", ")", "\n", "start", "=", "start", "+", "1", "\n", "", "x_batches", "=", "np", ".", "asarray", "(", "x_batches", ")", "\n", "#print('x-------------',len(x_batches))", "\n", "x_batches", "=", "x_batches", ".", "reshape", "(", "-", "1", ",", "num_periods_input", ",", "Number_Of_Features", ")", "\n", "y_batches", "=", "np", ".", "asarray", "(", "y_batches", ")", "\n", "#print('y=======',len(y_batches))", "\n", "y_batches", "=", "y_batches", ".", "reshape", "(", "-", "1", ",", "num_periods_output", ",", "1", ")", "\n", "#print('len x_batches ',len(x_batches))", "\n", "\n", "###########################################TEST Normalization##################################", "\n", "PM_Test", "=", "Test", "[", ":", ",", "0", "]", "\n", "Test", "=", "np", ".", "delete", "(", "Test", ",", "[", "0", "]", ",", "1", ")", "\n", "\n", "Test", "=", "Test", ".", "astype", "(", "'float32'", ")", "\n", "Test", "=", "normalizer", ".", "transform", "(", "Test", ")", "\n", "\n", "PM_Test", "=", "np", ".", "reshape", "(", "PM_Test", ",", "(", "len", "(", "PM_Test", ")", ",", "1", ")", ")", "\n", "Test", "=", "np", ".", "append", "(", "PM_Test", ",", "Test", ",", "axis", "=", "1", ")", "\n", "#------------------", "\n", "############################################ TEST windows ##################################", "\n", "end_test", "=", "len", "(", "Test", ")", "\n", "start_test", "=", "0", "\n", "next_test", "=", "0", "\n", "x_testbatches", "=", "[", "]", "\n", "y_testbatches", "=", "[", "]", "\n", "\n", "#print('len',len(Train))", "\n", "while", "start_test", "+", "(", "limit", ")", "<=", "end_test", ":", "\n", "        ", "next_test", "=", "start_test", "+", "num_periods_input", "\n", "x_testbatches", ".", "append", "(", "Test", "[", "start_test", ":", "next_test", ",", ":", "]", ")", "\n", "y_testbatches", ".", "append", "(", "Test", "[", "next_test", ":", "next_test", "+", "num_periods_output", ",", "0", "]", ")", "\n", "start_test", "=", "start_test", "+", "num_periods_output", "\n", "", "x_testbatches", "=", "np", ".", "asarray", "(", "x_testbatches", ")", "\n", "#print('x----------',len(x_testbatches))", "\n", "\n", "x_testbatches", "=", "x_testbatches", ".", "reshape", "(", "-", "1", ",", "num_periods_input", ",", "Number_Of_Features", ")", "\n", "y_testbatches", "=", "np", ".", "asarray", "(", "y_testbatches", ")", "\n", "#print('y====',len(y_testbatches))", "\n", "y_testbatches", "=", "y_testbatches", ".", "reshape", "(", "-", "1", ",", "num_periods_output", ",", "1", ")", "\n", "print", "(", "'len Test'", ",", "len", "(", "Test", ")", ")", "\n", "print", "(", "'len xTestbatches'", ",", "len", "(", "x_testbatches", ")", ")", "\n", "return", "x_batches", ",", "y_batches", ",", "x_testbatches", ",", "y_testbatches", "\n", "\n"]], "home.repos.pwc.inspect_result.Daniela-Shereen_GBRT-for-TSF.Univariate.xgboostWB_trafffic.New_preprocessing": [[35, 106], ["datetime.datetime", "range", "pandas.DataFrame", "sklearn.preprocessing.minmax_scale", "pandas.DataFrame", "Train.astype.astype", "Test.astype.astype", "len", "numpy.asarray", "y_batches.reshape.reshape", "numpy.asarray", "x_batches.reshape.reshape", "len", "numpy.asarray", "y_testbatches.reshape.reshape", "numpy.asarray", "x_testbatches.reshape.reshape", "len", "record.append", "record.append", "record.append", "record.append", "record.append", "record.append", "record.append", "Data.append", "pandas.np.column_stack", "x_batches.reshape.append", "y_batches.reshape.append", "x_testbatches.reshape.append", "y_testbatches.reshape.append", "datetime.datetime.weekday", "datetime.timedelta", "datetime.datetime.timetuple", "datetime.datetime.isocalendar"], "function", ["None"], ["def", "New_preprocessing", "(", "TimeSeries", ")", ":", "\n", "   ", "Data", "=", "[", "]", "\n", "start_date", "=", "datetime", "(", "2012", ",", "1", ",", "1", ",", "00", ",", "00", ",", "00", ")", "# define start date", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "TimeSeries", ")", ")", ":", "\n", "      ", "record", "=", "[", "]", "\n", "record", ".", "append", "(", "TimeSeries", "[", "i", "]", ")", "\n", "record", ".", "append", "(", "start_date", ".", "month", ")", "\n", "record", ".", "append", "(", "start_date", ".", "day", ")", "\n", "record", ".", "append", "(", "start_date", ".", "hour", ")", "\n", "record", ".", "append", "(", "start_date", ".", "weekday", "(", ")", ")", "\n", "record", ".", "append", "(", "start_date", ".", "timetuple", "(", ")", ".", "tm_yday", ")", "\n", "record", ".", "append", "(", "start_date", ".", "isocalendar", "(", ")", "[", "1", "]", ")", "\n", "#print(start_date.month,' ',start_date.day,' ',start_date.hour,' ',start_date.weekday(),' ',start_date.timetuple().tm_yday,' ',start_date.isocalendar()[1])", "\n", "start_date", "=", "start_date", "+", "timedelta", "(", "hours", "=", "1", ")", "\n", "#print('year',start_date.year,'Month:',start_date.month,' day:',start_date.day,' hour:',start_date.hour)", "\n", "Data", ".", "append", "(", "record", ")", "\n", "########## change list of lists to df ################", "\n", "", "headers", "=", "[", "'traffic'", ",", "'month'", ",", "'day'", ",", "'hour'", ",", "'day_of_week'", ",", "'day_of_year'", ",", "'week_of_year'", "]", "\n", "Data_df", "=", "pd", ".", "DataFrame", "(", "Data", ",", "columns", "=", "headers", ")", "\n", "sub", "=", "Data_df", ".", "iloc", "[", ":", ",", "1", ":", "]", "\n", "#Normalize features to be from -0.5 to 0.5 as mentioned in the paper", "\n", "New_sub", "=", "preprocessing", ".", "minmax_scale", "(", "sub", ",", "feature_range", "=", "(", "-", "0.5", ",", "0.5", ")", ")", "\n", "Normalized_Data_df", "=", "pd", ".", "DataFrame", "(", "pd", ".", "np", ".", "column_stack", "(", "[", "Data_df", ".", "iloc", "[", ":", ",", "0", "]", ",", "New_sub", "]", ")", ",", "columns", "=", "headers", ")", "\n", "\n", "#################################################################################################", "\n", "# cut training and testing training is 10392", "\n", "Train", "=", "Normalized_Data_df", ".", "iloc", "[", "0", ":", "10392", ",", ":", "]", "\n", "Train", "=", "Train", ".", "values", "\n", "Train", "=", "Train", ".", "astype", "(", "'float32'", ")", "\n", "Test", "=", "Normalized_Data_df", ".", "iloc", "[", "10392", "-", "num_periods_input", ":", ",", ":", "]", "\n", "Test", "=", "Test", ".", "values", "\n", "Test", "=", "Test", ".", "astype", "(", "'float32'", ")", "\n", "Number_Of_Features", "=", "7", "\n", "\n", "############################################ Windowing ##################################", "\n", "end", "=", "len", "(", "Train", ")", "\n", "start", "=", "0", "\n", "next", "=", "0", "\n", "x_batches", "=", "[", "]", "\n", "y_batches", "=", "[", "]", "\n", "count", "=", "0", "\n", "while", "next", "+", "(", "num_periods_input", ")", "<", "end", ":", "\n", "        ", "next", "=", "start", "+", "num_periods_input", "\n", "x_batches", ".", "append", "(", "Train", "[", "start", ":", "next", ",", ":", "]", ")", "\n", "y_batches", ".", "append", "(", "Train", "[", "next", ":", "next", "+", "num_periods_output", ",", "0", "]", ")", "\n", "start", "=", "start", "+", "1", "\n", "", "y_batches", "=", "np", ".", "asarray", "(", "y_batches", ")", "\n", "y_batches", "=", "y_batches", ".", "reshape", "(", "-", "1", ",", "num_periods_output", ",", "1", ")", "\n", "#print('Length of y batches :',len(y_batches),' ',num_periods_input,' ',num_periods_output)", "\n", "#print(x_batches)", "\n", "x_batches", "=", "np", ".", "asarray", "(", "x_batches", ")", "\n", "x_batches", "=", "x_batches", ".", "reshape", "(", "-", "1", ",", "num_periods_input", ",", "Number_Of_Features", ")", "\n", "\n", "############################################ Windowing ##################################", "\n", "end_test", "=", "len", "(", "Test", ")", "\n", "start_test", "=", "0", "\n", "next_test", "=", "0", "\n", "x_testbatches", "=", "[", "]", "\n", "y_testbatches", "=", "[", "]", "\n", "while", "next_test", "+", "(", "num_periods_input", ")", "<", "end_test", ":", "\n", "        ", "next_test", "=", "start_test", "+", "num_periods_input", "\n", "x_testbatches", ".", "append", "(", "Test", "[", "start_test", ":", "next_test", ",", ":", "]", ")", "\n", "y_testbatches", ".", "append", "(", "Test", "[", "next_test", ":", "next_test", "+", "num_periods_output", ",", "0", "]", ")", "\n", "start_test", "=", "start_test", "+", "num_periods_input", "\n", "", "y_testbatches", "=", "np", ".", "asarray", "(", "y_testbatches", ")", "\n", "y_testbatches", "=", "y_testbatches", ".", "reshape", "(", "-", "1", ",", "num_periods_output", ",", "1", ")", "\n", "x_testbatches", "=", "np", ".", "asarray", "(", "x_testbatches", ")", "\n", "x_testbatches", "=", "x_testbatches", ".", "reshape", "(", "-", "1", ",", "num_periods_input", ",", "Number_Of_Features", ")", "\n", "#print('len Test',len(Test))", "\n", "#print('len xTestbatches',len(x_testbatches))", "\n", "return", "x_batches", ",", "y_batches", ",", "x_testbatches", ",", "y_testbatches", "\n", "\n"]], "home.repos.pwc.inspect_result.Daniela-Shereen_GBRT-for-TSF.Univariate.xgboostWB_electricity.New_preprocessing": [[35, 107], ["datetime.datetime", "range", "pandas.DataFrame", "sklearn.preprocessing.minmax_scale", "pandas.DataFrame", "Train.astype.astype", "print", "Test.astype.astype", "print", "len", "numpy.asarray", "y_batches.reshape.reshape", "numpy.asarray", "x_batches.reshape.reshape", "len", "numpy.asarray", "y_testbatches.reshape.reshape", "numpy.asarray", "x_testbatches.reshape.reshape", "len", "record.append", "record.append", "record.append", "record.append", "record.append", "record.append", "record.append", "Data.append", "pandas.np.column_stack", "len", "len", "x_batches.reshape.append", "y_batches.reshape.append", "x_testbatches.reshape.append", "y_testbatches.reshape.append", "datetime.datetime.weekday", "datetime.timedelta", "datetime.datetime.timetuple", "datetime.datetime.isocalendar"], "function", ["None"], ["def", "New_preprocessing", "(", "TimeSeries", ")", ":", "\n", "   ", "Data", "=", "[", "]", "\n", "start_date", "=", "datetime", "(", "2012", ",", "1", ",", "1", ",", "00", ",", "00", ",", "00", ")", "# define start date", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "TimeSeries", ")", ")", ":", "\n", "      ", "record", "=", "[", "]", "\n", "record", ".", "append", "(", "TimeSeries", "[", "i", "]", ")", "#adding the electricity value", "\n", "record", ".", "append", "(", "start_date", ".", "month", ")", "\n", "record", ".", "append", "(", "start_date", ".", "day", ")", "\n", "record", ".", "append", "(", "start_date", ".", "hour", ")", "\n", "record", ".", "append", "(", "start_date", ".", "weekday", "(", ")", ")", "\n", "record", ".", "append", "(", "start_date", ".", "timetuple", "(", ")", ".", "tm_yday", ")", "\n", "record", ".", "append", "(", "start_date", ".", "isocalendar", "(", ")", "[", "1", "]", ")", "\n", "#print(start_date.month,' ',start_date.day,' ',start_date.hour,' ',start_date.weekday(),' ',start_date.timetuple().tm_yday,' ',start_date.isocalendar()[1])", "\n", "start_date", "=", "start_date", "+", "timedelta", "(", "hours", "=", "1", ")", "\n", "#print('year',start_date.year,'Month:',start_date.month,' day:',start_date.day,' hour:',start_date.hour)", "\n", "Data", ".", "append", "(", "record", ")", "\n", "########## change list of lists to df ################", "\n", "", "headers", "=", "[", "'electricity'", ",", "'month'", ",", "'day'", ",", "'hour'", ",", "'day_of_week'", ",", "'day_of_year'", ",", "'week_of_year'", "]", "\n", "Data_df", "=", "pd", ".", "DataFrame", "(", "Data", ",", "columns", "=", "headers", ")", "\n", "#print(Data_df)", "\n", "sub", "=", "Data_df", ".", "iloc", "[", ":", ",", "1", ":", "]", "\n", "#Normalize features to be from -0.5 to 0.5 as mentioned in the paper", "\n", "New_sub", "=", "preprocessing", ".", "minmax_scale", "(", "sub", ",", "feature_range", "=", "(", "-", "0.5", ",", "0.5", ")", ")", "\n", "Normalized_Data_df", "=", "pd", ".", "DataFrame", "(", "pd", ".", "np", ".", "column_stack", "(", "[", "Data_df", ".", "iloc", "[", ":", ",", "0", "]", ",", "New_sub", "]", ")", ",", "columns", "=", "headers", ")", "\n", "#################################################################################################", "\n", "# cut training and testing training is 25968", "\n", "Train", "=", "Normalized_Data_df", ".", "iloc", "[", "0", ":", "25968", ",", ":", "]", "\n", "Train", "=", "Train", ".", "values", "\n", "Train", "=", "Train", ".", "astype", "(", "'float32'", ")", "\n", "print", "(", "'Traing length :'", ",", "len", "(", "Train", ")", ")", "\n", "Test", "=", "Normalized_Data_df", ".", "iloc", "[", "(", "25968", "-", "num_periods_input", ")", ":", ",", ":", "]", "\n", "Test", "=", "Test", ".", "values", "\n", "Test", "=", "Test", ".", "astype", "(", "'float32'", ")", "\n", "print", "(", "'Test length :'", ",", "len", "(", "Test", ")", ")", "\n", "Number_Of_Features", "=", "7", "\n", "############################################ Windowing ##################################", "\n", "end", "=", "len", "(", "Train", ")", "\n", "start", "=", "0", "\n", "next", "=", "0", "\n", "x_batches", "=", "[", "]", "\n", "y_batches", "=", "[", "]", "\n", "count", "=", "0", "\n", "while", "next", "+", "(", "num_periods_input", ")", "<", "end", ":", "\n", "        ", "next", "=", "start", "+", "num_periods_input", "\n", "x_batches", ".", "append", "(", "Train", "[", "start", ":", "next", ",", ":", "]", ")", "\n", "y_batches", ".", "append", "(", "Train", "[", "next", ":", "next", "+", "num_periods_output", ",", "0", "]", ")", "\n", "start", "=", "start", "+", "1", "\n", "", "y_batches", "=", "np", ".", "asarray", "(", "y_batches", ")", "\n", "y_batches", "=", "y_batches", ".", "reshape", "(", "-", "1", ",", "num_periods_output", ",", "1", ")", "\n", "#print('Length of y batches :',len(y_batches),' ',num_periods_input,' ',num_periods_output)", "\n", "#print(x_batches)", "\n", "x_batches", "=", "np", ".", "asarray", "(", "x_batches", ")", "\n", "x_batches", "=", "x_batches", ".", "reshape", "(", "-", "1", ",", "num_periods_input", ",", "Number_Of_Features", ")", "\n", "#print('len x_batches ',len(x_batches))", "\n", "############################################ Windowing ##################################", "\n", "end_test", "=", "len", "(", "Test", ")", "\n", "start_test", "=", "0", "\n", "next_test", "=", "0", "\n", "x_testbatches", "=", "[", "]", "\n", "y_testbatches", "=", "[", "]", "\n", "while", "next_test", "+", "(", "num_periods_input", ")", "<", "end_test", ":", "\n", "        ", "next_test", "=", "start_test", "+", "num_periods_input", "\n", "x_testbatches", ".", "append", "(", "Test", "[", "start_test", ":", "next_test", ",", ":", "]", ")", "\n", "y_testbatches", ".", "append", "(", "Test", "[", "next_test", ":", "next_test", "+", "num_periods_output", ",", "0", "]", ")", "\n", "start_test", "=", "start_test", "+", "num_periods_input", "\n", "", "y_testbatches", "=", "np", ".", "asarray", "(", "y_testbatches", ")", "\n", "y_testbatches", "=", "y_testbatches", ".", "reshape", "(", "-", "1", ",", "num_periods_output", ",", "1", ")", "\n", "x_testbatches", "=", "np", ".", "asarray", "(", "x_testbatches", ")", "\n", "x_testbatches", "=", "x_testbatches", ".", "reshape", "(", "-", "1", ",", "num_periods_input", ",", "Number_Of_Features", ")", "\n", "#print('len Test',len(Test))", "\n", "#print('len xTestbatches',len(x_testbatches))", "\n", "return", "x_batches", ",", "y_batches", ",", "x_testbatches", ",", "y_testbatches", "\n", "\n"]], "home.repos.pwc.inspect_result.Daniela-Shereen_GBRT-for-TSF.Univariate.xgboostWB_electricity.mean_absolute_percentage_error": [[199, 204], ["numpy.divide", "numpy.mean", "numpy.zeros_like", "numpy.abs"], "function", ["None"], ["def", "mean_absolute_percentage_error", "(", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "a", "=", "(", "y_true", "-", "y_pred", ")", "\n", "b", "=", "y_true", "\n", "c", "=", "np", ".", "divide", "(", "a", ",", "b", ",", "out", "=", "np", ".", "zeros_like", "(", "a", ")", ",", "where", "=", "b", "!=", "0", ")", "\n", "return", "np", ".", "mean", "(", "np", ".", "abs", "(", "c", ")", ")", "*", "100", "\n", "\n"]], "home.repos.pwc.inspect_result.Daniela-Shereen_GBRT-for-TSF.Univariate.xgboostWB_pemds7.New_preprocessing": [[37, 112], ["datetime.datetime", "range", "pandas.DataFrame", "sklearn.preprocessing.minmax_scale", "pandas.DataFrame", "Train.astype.astype", "Test.astype.astype", "len", "numpy.asarray", "y_batches.reshape.reshape", "numpy.asarray", "x_batches.reshape.reshape", "len", "numpy.asarray", "y_testbatches.reshape.reshape", "numpy.asarray", "x_testbatches.reshape.reshape", "len", "record.append", "record.append", "record.append", "record.append", "record.append", "record.append", "record.append", "record.append", "Data.append", "pandas.np.column_stack", "x_batches.reshape.append", "y_batches.reshape.append", "x_testbatches.reshape.append", "y_testbatches.reshape.append", "datetime.datetime.weekday", "datetime.timedelta", "datetime.datetime.timetuple", "datetime.datetime.isocalendar"], "function", ["None"], ["def", "New_preprocessing", "(", "TimeSeries", ")", ":", "\n", "#print(len(TimeSeries))", "\n", "   ", "Data", "=", "[", "]", "\n", "start_date", "=", "datetime", "(", "2012", ",", "5", ",", "1", ",", "00", ",", "00", ",", "00", ")", "# define start date", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "TimeSeries", ")", ")", ":", "\n", "      ", "record", "=", "[", "]", "\n", "record", ".", "append", "(", "TimeSeries", "[", "i", "]", ")", "#adding the pemds7 value", "\n", "record", ".", "append", "(", "start_date", ".", "month", ")", "\n", "record", ".", "append", "(", "start_date", ".", "day", ")", "\n", "record", ".", "append", "(", "start_date", ".", "hour", ")", "\n", "record", ".", "append", "(", "start_date", ".", "minute", ")", "\n", "record", ".", "append", "(", "start_date", ".", "weekday", "(", ")", ")", "\n", "record", ".", "append", "(", "start_date", ".", "timetuple", "(", ")", ".", "tm_yday", ")", "\n", "record", ".", "append", "(", "start_date", ".", "isocalendar", "(", ")", "[", "1", "]", ")", "\n", "#print(start_date.month,' ',start_date.day,' ',start_date.hour,' ',start_date.weekday(),' ',start_date.timetuple().tm_yday,' ',start_date.isocalendar()[1])", "\n", "start_date", "=", "start_date", "+", "timedelta", "(", "minutes", "=", "5", ")", "\n", "#print('year',start_date.year,'Month:',start_date.month,' day:',start_date.day,' hour:',start_date.hour)", "\n", "Data", ".", "append", "(", "record", ")", "\n", "########## change list of lists to df ################", "\n", "", "headers", "=", "[", "'pems'", ",", "'month'", ",", "'day'", ",", "'hour'", ",", "'minute'", ",", "'day_of_week'", ",", "'day_of_year'", ",", "'week_of_year'", "]", "\n", "Data_df", "=", "pd", ".", "DataFrame", "(", "Data", ",", "columns", "=", "headers", ")", "\n", "sub", "=", "Data_df", ".", "iloc", "[", ":", ",", "1", ":", "]", "\n", "#Normalize features to be from -0.5 to 0.5 as mentioned in the paper", "\n", "New_sub", "=", "preprocessing", ".", "minmax_scale", "(", "sub", ",", "feature_range", "=", "(", "-", "0.5", ",", "0.5", ")", ")", "\n", "Normalized_Data_df", "=", "pd", ".", "DataFrame", "(", "pd", ".", "np", ".", "column_stack", "(", "[", "Data_df", ".", "iloc", "[", ":", ",", "0", "]", ",", "New_sub", "]", ")", ",", "columns", "=", "headers", ")", "\n", "#print(Normalized_Data_df)", "\n", "#################################################################################################", "\n", "# cut training and testing training is 11232", "\n", "Train", "=", "Normalized_Data_df", ".", "iloc", "[", "0", ":", "11232", ",", ":", "]", "\n", "Train", "=", "Train", ".", "values", "\n", "Train", "=", "Train", ".", "astype", "(", "'float32'", ")", "\n", "#print('Traing length :',len(Train))", "\n", "Test", "=", "Normalized_Data_df", ".", "iloc", "[", "(", "11232", "-", "num_periods_input", ")", ":", ",", ":", "]", "\n", "Test", "=", "Test", ".", "values", "\n", "Test", "=", "Test", ".", "astype", "(", "'float32'", ")", "\n", "#print('Traing length :',len(Test))", "\n", "Number_Of_Features", "=", "8", "\n", "############################################ Windowing ##################################", "\n", "end", "=", "len", "(", "Train", ")", "\n", "start", "=", "0", "\n", "next", "=", "0", "\n", "x_batches", "=", "[", "]", "\n", "y_batches", "=", "[", "]", "\n", "count", "=", "0", "\n", "while", "next", "+", "(", "num_periods_input", "+", "num_periods_output", ")", "<", "end", ":", "\n", "        ", "next", "=", "start", "+", "num_periods_input", "\n", "x_batches", ".", "append", "(", "Train", "[", "start", ":", "next", ",", ":", "]", ")", "\n", "y_batches", ".", "append", "(", "Train", "[", "next", ":", "next", "+", "num_periods_output", ",", "0", "]", ")", "\n", "start", "=", "start", "+", "1", "\n", "", "y_batches", "=", "np", ".", "asarray", "(", "y_batches", ")", "\n", "y_batches", "=", "y_batches", ".", "reshape", "(", "-", "1", ",", "num_periods_output", ",", "1", ")", "\n", "#print('Length of y batches :',len(y_batches),' ',num_periods_input,' ',num_periods_output)", "\n", "#print(x_batches)", "\n", "x_batches", "=", "np", ".", "asarray", "(", "x_batches", ")", "\n", "x_batches", "=", "x_batches", ".", "reshape", "(", "-", "1", ",", "num_periods_input", ",", "Number_Of_Features", ")", "\n", "#print('len x_batches ',len(x_batches))", "\n", "############################################ Windowing ##################################", "\n", "end_test", "=", "len", "(", "Test", ")", "\n", "start_test", "=", "0", "\n", "next_test", "=", "0", "\n", "x_testbatches", "=", "[", "]", "\n", "y_testbatches", "=", "[", "]", "\n", "#print('lennnn',len(Train))", "\n", "while", "next_test", "+", "(", "num_periods_input", "+", "num_periods_output", ")", "<", "end_test", ":", "\n", "        ", "next_test", "=", "start_test", "+", "num_periods_input", "\n", "x_testbatches", ".", "append", "(", "Test", "[", "start_test", ":", "next_test", ",", ":", "]", ")", "\n", "y_testbatches", ".", "append", "(", "Test", "[", "next_test", ":", "next_test", "+", "num_periods_output", ",", "0", "]", ")", "\n", "start_test", "=", "start_test", "+", "1", "\n", "", "y_testbatches", "=", "np", ".", "asarray", "(", "y_testbatches", ")", "\n", "y_testbatches", "=", "y_testbatches", ".", "reshape", "(", "-", "1", ",", "num_periods_output", ",", "1", ")", "\n", "x_testbatches", "=", "np", ".", "asarray", "(", "x_testbatches", ")", "\n", "x_testbatches", "=", "x_testbatches", ".", "reshape", "(", "-", "1", ",", "num_periods_input", ",", "Number_Of_Features", ")", "\n", "#print('len Test',len(Test))", "\n", "#print('len xTestbatches',len(x_testbatches))", "\n", "return", "x_batches", ",", "y_batches", ",", "x_testbatches", ",", "y_testbatches", "\n", "\n"]], "home.repos.pwc.inspect_result.Daniela-Shereen_GBRT-for-TSF.Univariate.xgboostWB_rate_exchange.New_preprocessing": [[32, 117], ["datetime.datetime", "range", "pandas.DataFrame", "sklearn.preprocessing.minmax_scale", "pandas.DataFrame", "numpy.floor", "int", "Train.astype.astype", "print", "len", "numpy.floor", "int", "Test.astype.astype", "print", "len", "max", "numpy.asarray", "y_batches.reshape.reshape", "numpy.asarray", "x_batches.reshape.reshape", "len", "numpy.asarray", "y_testbatches.reshape.reshape", "numpy.asarray", "x_testbatches.reshape.reshape", "len", "record.append", "record.append", "record.append", "record.append", "record.append", "record.append", "Data.append", "pandas.np.column_stack", "len", "len", "x_batches.reshape.append", "y_batches.reshape.append", "x_testbatches.reshape.append", "y_testbatches.reshape.append", "datetime.datetime.weekday", "datetime.timedelta", "len", "len", "datetime.datetime.timetuple", "datetime.datetime.isocalendar"], "function", ["None"], ["def", "New_preprocessing", "(", "TimeSeries", ")", ":", "\n", "#print(len(TimeSeries))", "\n", "   ", "Data", "=", "[", "]", "\n", "start_date", "=", "datetime", "(", "1990", ",", "1", ",", "1", ",", "00", ",", "00", ",", "00", ")", "# define start date", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "TimeSeries", ")", ")", ":", "\n", "      ", "record", "=", "[", "]", "\n", "record", ".", "append", "(", "TimeSeries", "[", "i", "]", ")", "#adding the xchangerate value", "\n", "record", ".", "append", "(", "start_date", ".", "month", ")", "\n", "record", ".", "append", "(", "start_date", ".", "day", ")", "\n", "#record.append(start_date.hour)", "\n", "#record.append(start_date.minute)", "\n", "record", ".", "append", "(", "start_date", ".", "weekday", "(", ")", ")", "\n", "record", ".", "append", "(", "start_date", ".", "timetuple", "(", ")", ".", "tm_yday", ")", "\n", "record", ".", "append", "(", "start_date", ".", "isocalendar", "(", ")", "[", "1", "]", ")", "\n", "#print(start_date.month,' ',start_date.day,' ',start_date.hour,' ',start_date.weekday(),' ',start_date.timetuple().tm_yday,' ',start_date.isocalendar()[1])", "\n", "start_date", "=", "start_date", "+", "timedelta", "(", "days", "=", "1", ")", "\n", "#print('year',start_date.year,'Month:',start_date.month,' day:',start_date.day,' hour:',start_date.hour)", "\n", "Data", ".", "append", "(", "record", ")", "\n", "########## change list of lists to df ################", "\n", "", "headers", "=", "[", "'pems'", ",", "'month'", ",", "'day'", ",", "'day_of_week'", ",", "'day_of_year'", ",", "'week_of_year'", "]", "\n", "Data_df", "=", "pd", ".", "DataFrame", "(", "Data", ",", "columns", "=", "headers", ")", "\n", "#print(Data_df)", "\n", "sub", "=", "Data_df", ".", "iloc", "[", ":", ",", "1", ":", "]", "\n", "New_sub", "=", "preprocessing", ".", "minmax_scale", "(", "sub", ",", "feature_range", "=", "(", "-", "0.5", ",", "0.5", ")", ")", "\n", "#Normalize features to be from -0.5 to 0.5 as mentioned in the paper", "\n", "Normalized_Data_df", "=", "pd", ".", "DataFrame", "(", "pd", ".", "np", ".", "column_stack", "(", "[", "Data_df", ".", "iloc", "[", ":", ",", "0", "]", ",", "New_sub", "]", ")", ",", "columns", "=", "headers", ")", "\n", "#print(Normalized_Data_df)", "\n", "#################################################################################################", "\n", "# cut training and testing ", "\n", "train_split", "=", "np", ".", "floor", "(", "len", "(", "Normalized_Data_df", ")", "*", "0.8", ")", "# 60 % training", "\n", "#train_split=180", "\n", "train_split", "=", "int", "(", "train_split", "-", "(", "train_split", "%", "(", "num_periods_output", "+", "num_periods_input", ")", ")", ")", "\n", "#print('-------------------',train_split)", "\n", "Train", "=", "Normalized_Data_df", ".", "iloc", "[", "0", ":", "train_split", ",", ":", "]", "\n", "Train", "=", "Train", ".", "values", "\n", "Train", "=", "Train", ".", "astype", "(", "'float32'", ")", "\n", "print", "(", "'Traing length :'", ",", "len", "(", "Train", ")", ")", "\n", "total", "=", "len", "(", "Normalized_Data_df", ")", "\n", "test_split", "=", "np", ".", "floor", "(", "len", "(", "Normalized_Data_df", ")", "*", "0.2", ")", "# 20 % testing", "\n", "#test_split=20", "\n", "#print('-------------------test: ',test_split)", "\n", "test_split", "=", "int", "(", "test_split", "-", "(", "test_split", "%", "(", "num_periods_output", "+", "num_periods_input", ")", ")", ")", "\n", "Test", "=", "Normalized_Data_df", ".", "iloc", "[", "(", "total", "-", "test_split", "-", "num_periods_input", ")", ":", ",", ":", "]", "\n", "Test", "=", "Test", ".", "values", "\n", "Test", "=", "Test", ".", "astype", "(", "'float32'", ")", "\n", "print", "(", "'Traing length :'", ",", "len", "(", "Test", ")", ")", "\n", "Number_Of_Features", "=", "6", "\n", "############################################ Windowing ##################################", "\n", "end", "=", "len", "(", "Train", ")", "\n", "start", "=", "0", "\n", "next", "=", "0", "\n", "x_batches", "=", "[", "]", "\n", "y_batches", "=", "[", "]", "\n", "count", "=", "0", "\n", "#print('lennnn',len(Train))", "\n", "limit", "=", "max", "(", "num_periods_input", ",", "num_periods_output", ")", "\n", "while", "next", "+", "(", "limit", ")", "<", "end", ":", "\n", "        ", "next", "=", "start", "+", "num_periods_input", "\n", "x_batches", ".", "append", "(", "Train", "[", "start", ":", "next", ",", ":", "]", ")", "\n", "y_batches", ".", "append", "(", "Train", "[", "next", ":", "next", "+", "num_periods_output", ",", "0", "]", ")", "\n", "start", "=", "start", "+", "1", "\n", "", "y_batches", "=", "np", ".", "asarray", "(", "y_batches", ")", "\n", "y_batches", "=", "y_batches", ".", "reshape", "(", "-", "1", ",", "num_periods_output", ",", "1", ")", "\n", "#print('Length of y batches :',len(y_batches),' ',num_periods_input,' ',num_periods_output)", "\n", "#print(x_batches)", "\n", "x_batches", "=", "np", ".", "asarray", "(", "x_batches", ")", "\n", "x_batches", "=", "x_batches", ".", "reshape", "(", "-", "1", ",", "num_periods_input", ",", "Number_Of_Features", ")", "\n", "#print('len x_batches ',len(x_batches))", "\n", "############################################ Windowing ##################################", "\n", "end_test", "=", "len", "(", "Test", ")", "\n", "start_test", "=", "0", "\n", "next_test", "=", "0", "\n", "x_testbatches", "=", "[", "]", "\n", "y_testbatches", "=", "[", "]", "\n", "while", "next_test", "+", "(", "limit", ")", "<", "end_test", ":", "\n", "        ", "next_test", "=", "start_test", "+", "num_periods_input", "\n", "x_testbatches", ".", "append", "(", "Test", "[", "start_test", ":", "next_test", ",", ":", "]", ")", "\n", "y_testbatches", ".", "append", "(", "Test", "[", "next_test", ":", "next_test", "+", "num_periods_output", ",", "0", "]", ")", "\n", "start_test", "=", "start_test", "+", "num_periods_input", "\n", "", "y_testbatches", "=", "np", ".", "asarray", "(", "y_testbatches", ")", "\n", "y_testbatches", "=", "y_testbatches", ".", "reshape", "(", "-", "1", ",", "num_periods_output", ",", "1", ")", "\n", "x_testbatches", "=", "np", ".", "asarray", "(", "x_testbatches", ")", "\n", "x_testbatches", "=", "x_testbatches", ".", "reshape", "(", "-", "1", ",", "num_periods_input", ",", "Number_Of_Features", ")", "\n", "#print(' xTestbatches',len(x_testbatches),' yTestbatches',len(y_testbatches))", "\n", "return", "x_batches", ",", "y_batches", ",", "x_testbatches", ",", "y_testbatches", "\n", "\n"]]}