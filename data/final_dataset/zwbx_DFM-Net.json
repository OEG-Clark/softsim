{"home.repos.pwc.inspect_result.zwbx_DFM-Net.None.mobilenet.MobileNetV2Encoder.__init__": [[14, 39], ["torchvision.models.MobileNetV2.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.zwbx_DFM-Net.None.utils.LR_Scheduler.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "# Replace first conv layer if in_channels doesn't match.", "\n", "if", "in_channels", "!=", "3", ":", "\n", "            ", "self", ".", "features", "[", "0", "]", "[", "0", "]", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "32", ",", "3", ",", "2", ",", "1", ",", "bias", "=", "False", ")", "\n", "\n", "# Remove last block", "\n", "", "self", ".", "features", "=", "self", ".", "features", "[", ":", "-", "1", "]", "\n", "\n", "# Change to use dilation to maintain output stride = 16", "\n", "self", ".", "features", "[", "14", "]", ".", "conv", "[", "1", "]", "[", "0", "]", ".", "stride", "=", "(", "1", ",", "1", ")", "\n", "for", "feature", "in", "self", ".", "features", "[", "15", ":", "]", ":", "\n", "            ", "feature", ".", "conv", "[", "1", "]", "[", "0", "]", ".", "dilation", "=", "(", "2", ",", "2", ")", "\n", "feature", ".", "conv", "[", "1", "]", "[", "0", "]", ".", "padding", "=", "(", "2", ",", "2", ")", "\n", "\n", "# Delete classifier", "\n", "", "del", "self", ".", "classifier", "\n", "\n", "self", ".", "layer1", "=", "nn", ".", "Sequential", "(", "self", ".", "features", "[", "0", "]", ",", "self", ".", "features", "[", "1", "]", ")", "\n", "self", ".", "layer2", "=", "nn", ".", "Sequential", "(", "self", ".", "features", "[", "2", "]", ",", "self", ".", "features", "[", "3", "]", ")", "\n", "self", ".", "layer3", "=", "nn", ".", "Sequential", "(", "self", ".", "features", "[", "4", "]", ",", "self", ".", "features", "[", "5", "]", ",", "self", ".", "features", "[", "6", "]", ")", "\n", "self", ".", "layer4", "=", "nn", ".", "Sequential", "(", "self", ".", "features", "[", "7", "]", ",", "self", ".", "features", "[", "8", "]", ",", "self", ".", "features", "[", "9", "]", ",", "self", ".", "features", "[", "10", "]", ",", "\n", "self", ".", "features", "[", "11", "]", ",", "self", ".", "features", "[", "12", "]", ",", "self", ".", "features", "[", "13", "]", ")", "\n", "self", ".", "layer5", "=", "nn", ".", "Sequential", "(", "self", ".", "features", "[", "14", "]", ",", "self", ".", "features", "[", "15", "]", ",", "self", ".", "features", "[", "16", "]", ",", "self", ".", "features", "[", "17", "]", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.mobilenet.MobileNetV2Encoder.forward": [[39, 66], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x0", "=", "x", "# 1/1", "\n", "x", "=", "self", ".", "features", "[", "0", "]", "(", "x", ")", "\n", "x", "=", "self", ".", "features", "[", "1", "]", "(", "x", ")", "\n", "x", "=", "x", "\n", "x1", "=", "x", "# 1/2", "\n", "x", "=", "self", ".", "features", "[", "2", "]", "(", "x", ")", "\n", "x", "=", "self", ".", "features", "[", "3", "]", "(", "x", ")", "\n", "x2", "=", "x", "# 1/4", "\n", "x", "=", "self", ".", "features", "[", "4", "]", "(", "x", ")", "\n", "x", "=", "self", ".", "features", "[", "5", "]", "(", "x", ")", "\n", "x", "=", "self", ".", "features", "[", "6", "]", "(", "x", ")", "\n", "x3", "=", "x", "# 1/8", "\n", "x", "=", "self", ".", "features", "[", "7", "]", "(", "x", ")", "\n", "x", "=", "self", ".", "features", "[", "8", "]", "(", "x", ")", "\n", "x", "=", "self", ".", "features", "[", "9", "]", "(", "x", ")", "\n", "x", "=", "self", ".", "features", "[", "10", "]", "(", "x", ")", "\n", "x", "=", "self", ".", "features", "[", "11", "]", "(", "x", ")", "\n", "x", "=", "self", ".", "features", "[", "12", "]", "(", "x", ")", "\n", "x", "=", "self", ".", "features", "[", "13", "]", "(", "x", ")", "\n", "x4", "=", "x", "# 1/16", "\n", "x", "=", "self", ".", "features", "[", "14", "]", "(", "x", ")", "\n", "x", "=", "self", ".", "features", "[", "15", "]", "(", "x", ")", "\n", "x", "=", "self", ".", "features", "[", "16", "]", "(", "x", ")", "\n", "x", "=", "self", ".", "features", "[", "17", "]", "(", "x", ")", "\n", "x5", "=", "x", "# 1/16", "\n", "return", "x1", ",", "x2", ",", "x3", ",", "x4", ",", "x5", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.net.DFMNet.__init__": [[20, 24], ["torch.Module.__init__", "net.RGBBranch", "depth.DepthBranch"], "methods", ["home.repos.pwc.inspect_result.zwbx_DFM-Net.None.utils.LR_Scheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "DFMNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "rgb", "=", "RGBBranch", "(", ")", "\n", "self", ".", "depth", "=", "DepthBranch", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.net.DFMNet.forward": [[25, 39], ["net.DFMNet.depth", "net.DFMNet.rgb", "net.upsample", "net.upsample", "outputs.append", "outputs.append"], "methods", ["home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.upsample", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.upsample"], ["", "def", "forward", "(", "self", ",", "r", ",", "d", ")", ":", "\n", "        ", "size", "=", "r", ".", "shape", "[", "2", ":", "]", "\n", "outputs", "=", "[", "]", "\n", "\n", "sal_d", ",", "feat", "=", "self", ".", "depth", "(", "d", ")", "\n", "sal_final", "=", "self", ".", "rgb", "(", "r", ",", "feat", ")", "\n", "\n", "sal_final", "=", "upsample", "(", "sal_final", ",", "size", ")", "\n", "sal_d", "=", "upsample", "(", "sal_d", ",", "size", ")", "\n", "\n", "outputs", ".", "append", "(", "sal_final", ")", "\n", "outputs", ".", "append", "(", "sal_d", ")", "\n", "\n", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.net._ConvBNReLU.__init__": [[43, 49], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.zwbx_DFM-Net.None.utils.LR_Scheduler.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "dilation", "=", "1", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "_ConvBNReLU", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "padding", ",", "dilation", "=", "dilation", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.net._ConvBNReLU.forward": [[51, 53], ["net._ConvBNReLU.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "conv", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.net._ConvBNSig.__init__": [[57, 63], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.zwbx_DFM-Net.None.utils.LR_Scheduler.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "dilation", "=", "1", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "_ConvBNSig", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "padding", ",", "dilation", "=", "dilation", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.net._ConvBNSig.forward": [[65, 67], ["net._ConvBNSig.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "conv", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.net._DSConv.__init__": [[72, 81], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.zwbx_DFM-Net.None.utils.LR_Scheduler.__init__"], ["def", "__init__", "(", "self", ",", "dw_channels", ",", "out_channels", ",", "stride", "=", "1", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "_DSConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "dw_channels", ",", "dw_channels", ",", "3", ",", "stride", ",", "1", ",", "groups", "=", "dw_channels", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "dw_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "dw_channels", ",", "out_channels", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.net._DSConv.forward": [[83, 85], ["net._DSConv.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "conv", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.net._DWConv.__init__": [[94, 100], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.zwbx_DFM-Net.None.utils.LR_Scheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dw_channels", ",", "out_channels", ",", "stride", "=", "1", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "_DWConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "dw_channels", ",", "out_channels", ",", "3", ",", "stride", ",", "1", ",", "groups", "=", "dw_channels", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.net._DWConv.forward": [[102, 104], ["net._DWConv.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "conv", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.net.LinearBottleneck.__init__": [[109, 120], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "net._ConvBNReLU", "net._DWConv", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.zwbx_DFM-Net.None.utils.LR_Scheduler.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "t", "=", "6", ",", "stride", "=", "2", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "LinearBottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "use_shortcut", "=", "stride", "==", "1", "and", "in_channels", "==", "out_channels", "\n", "self", ".", "block", "=", "nn", ".", "Sequential", "(", "\n", "# pw", "\n", "_ConvBNReLU", "(", "in_channels", ",", "in_channels", "*", "t", ",", "1", ")", ",", "\n", "# dw", "\n", "_DWConv", "(", "in_channels", "*", "t", ",", "in_channels", "*", "t", ",", "stride", ")", ",", "\n", "# pw-linear", "\n", "nn", ".", "Conv2d", "(", "in_channels", "*", "t", ",", "out_channels", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.net.LinearBottleneck.forward": [[122, 127], ["net.LinearBottleneck.block"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "block", "(", "x", ")", "\n", "if", "self", ".", "use_shortcut", ":", "\n", "            ", "out", "=", "x", "+", "out", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.net.PyramidPooling.__init__": [[133, 141], ["torch.Module.__init__", "int", "net._ConvBNReLU", "net._ConvBNReLU", "net._ConvBNReLU", "net._ConvBNReLU", "net._ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.zwbx_DFM-Net.None.utils.LR_Scheduler.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "PyramidPooling", ",", "self", ")", ".", "__init__", "(", ")", "\n", "inter_channels", "=", "int", "(", "in_channels", "/", "4", ")", "\n", "self", ".", "conv1", "=", "_ConvBNReLU", "(", "in_channels", ",", "inter_channels", ",", "1", ",", "**", "kwargs", ")", "\n", "self", ".", "conv2", "=", "_ConvBNReLU", "(", "in_channels", ",", "inter_channels", ",", "1", ",", "**", "kwargs", ")", "\n", "self", ".", "conv3", "=", "_ConvBNReLU", "(", "in_channels", ",", "inter_channels", ",", "1", ",", "**", "kwargs", ")", "\n", "self", ".", "conv4", "=", "_ConvBNReLU", "(", "in_channels", ",", "inter_channels", ",", "1", ",", "**", "kwargs", ")", "\n", "self", ".", "out", "=", "_ConvBNReLU", "(", "in_channels", "*", "2", ",", "out_channels", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.net.PyramidPooling.pool": [[142, 145], ["torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d."], "methods", ["None"], ["", "def", "pool", "(", "self", ",", "x", ",", "size", ")", ":", "\n", "        ", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "size", ")", "\n", "return", "avgpool", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.net.PyramidPooling.forward": [[146, 155], ["net.upsample", "net.upsample", "net.upsample", "net.upsample", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "net.PyramidPooling.out", "net.PyramidPooling.size", "net.PyramidPooling.conv1", "net.PyramidPooling.conv2", "net.PyramidPooling.conv3", "net.PyramidPooling.conv4", "net.PyramidPooling.pool", "net.PyramidPooling.pool", "net.PyramidPooling.pool", "net.PyramidPooling.pool"], "methods", ["home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.upsample", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.upsample", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.upsample", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.upsample", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.PyramidPooling.pool", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.PyramidPooling.pool", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.PyramidPooling.pool", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.PyramidPooling.pool"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "size", "=", "x", ".", "size", "(", ")", "[", "2", ":", "]", "\n", "feat1", "=", "upsample", "(", "self", ".", "conv1", "(", "self", ".", "pool", "(", "x", ",", "1", ")", ")", ",", "size", ")", "\n", "feat2", "=", "upsample", "(", "self", ".", "conv2", "(", "self", ".", "pool", "(", "x", ",", "2", ")", ")", ",", "size", ")", "\n", "feat3", "=", "upsample", "(", "self", ".", "conv3", "(", "self", ".", "pool", "(", "x", ",", "3", ")", ")", ",", "size", ")", "\n", "feat4", "=", "upsample", "(", "self", ".", "conv4", "(", "self", ".", "pool", "(", "x", ",", "6", ")", ")", ",", "size", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "feat1", ",", "feat2", ",", "feat3", ",", "feat4", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "self", ".", "out", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.net.RGBBranch.__init__": [[161, 195], ["torch.Module.__init__", "mobilenet.MobileNetV2Encoder", "net.initialize_weights", "net._DSConv", "net._DSConv", "net._DSConv", "net._DSConv", "net._DSConv", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "net._ConvBNReLU", "net._ConvBNReLU", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "net._ConvBNReLU", "net._ConvBNReLU", "net._ConvBNReLU", "net._ConvBNReLU", "net._ConvBNSig", "net.PyramidPooling", "net._ConvBNReLU", "net._DSConv", "net._DSConv", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "net._ConvBNReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "net._ConvBNReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "net._ConvBNReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "net._ConvBNReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "net._ConvBNReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "net._ConvBNReLU", "net._ConvBNSig"], "methods", ["home.repos.pwc.inspect_result.zwbx_DFM-Net.None.utils.LR_Scheduler.__init__", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.initialize_weights"], ["def", "__init__", "(", "self", ",", "c1", "=", "16", ",", "c2", "=", "24", ",", "c3", "=", "32", ",", "c4", "=", "96", ",", "c5", "=", "320", ",", "k", "=", "32", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "RGBBranch", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "base", "=", "MobileNetV2Encoder", "(", "3", ")", "\n", "initialize_weights", "(", "self", ".", "base", ")", "\n", "\n", "self", ".", "conv_cp1", "=", "_DSConv", "(", "c1", ",", "k", ")", "\n", "self", ".", "conv_cp2", "=", "_DSConv", "(", "c2", ",", "k", ")", "\n", "self", ".", "conv_cp3", "=", "_DSConv", "(", "c3", ",", "k", ")", "\n", "self", ".", "conv_cp4", "=", "_DSConv", "(", "c4", ",", "k", ")", "\n", "self", ".", "conv_cp5", "=", "_DSConv", "(", "c5", ",", "k", ")", "\n", "self", ".", "conv_s_f", "=", "nn", ".", "Sequential", "(", "_DSConv", "(", "2", "*", "k", ",", "k", ")", ",", "\n", "_DSConv", "(", "k", ",", "k", ")", ",", "\n", "nn", ".", "Conv2d", "(", "k", ",", "1", ",", "1", ")", ",", ")", "\n", "\n", "# self.focus = focus()", "\n", "self", ".", "ca1", "=", "nn", ".", "Sequential", "(", "_ConvBNReLU", "(", "k", ",", "k", ",", "1", ",", "1", ")", ",", "nn", ".", "Conv2d", "(", "k", ",", "k", ",", "1", ",", "1", ")", ",", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "self", ".", "ca2", "=", "nn", ".", "Sequential", "(", "_ConvBNReLU", "(", "k", ",", "k", ",", "1", ",", "1", ")", ",", "nn", ".", "Conv2d", "(", "k", ",", "k", ",", "1", ",", "1", ")", ",", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "self", ".", "ca3", "=", "nn", ".", "Sequential", "(", "_ConvBNReLU", "(", "k", ",", "k", ",", "1", ",", "1", ")", ",", "nn", ".", "Conv2d", "(", "k", ",", "k", ",", "1", ",", "1", ")", ",", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "self", ".", "ca4", "=", "nn", ".", "Sequential", "(", "_ConvBNReLU", "(", "k", ",", "k", ",", "1", ",", "1", ")", ",", "nn", ".", "Conv2d", "(", "k", ",", "k", ",", "1", ",", "1", ")", ",", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "self", ".", "ca5", "=", "nn", ".", "Sequential", "(", "_ConvBNReLU", "(", "k", ",", "k", ",", "1", ",", "1", ")", ",", "nn", ".", "Conv2d", "(", "k", ",", "k", ",", "1", ",", "1", ")", ",", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "\n", "self", ".", "conv_r1_tran", "=", "_ConvBNReLU", "(", "16", ",", "16", ",", "1", ",", "1", ")", "\n", "self", ".", "conv_d1_tran", "=", "_ConvBNReLU", "(", "16", ",", "16", ",", "1", ",", "1", ")", "\n", "self", ".", "mlp", "=", "nn", ".", "Sequential", "(", "_ConvBNReLU", "(", "48", ",", "24", ",", "1", ",", "1", ")", ",", "_ConvBNSig", "(", "24", ",", "5", ",", "1", ",", "1", ")", ")", "\n", "\n", "self", ".", "conv_r1_tran2", "=", "_ConvBNReLU", "(", "16", ",", "16", ",", "1", ",", "1", ")", "\n", "self", ".", "conv_d1_tran2", "=", "_ConvBNReLU", "(", "16", ",", "16", ",", "1", ",", "1", ")", "\n", "self", ".", "conv_sgate1", "=", "_ConvBNReLU", "(", "16", ",", "16", ",", "3", ",", "1", ",", "2", ",", "2", ")", "\n", "self", ".", "conv_sgate2", "=", "_ConvBNReLU", "(", "16", ",", "16", ",", "3", ",", "1", ",", "2", ",", "2", ")", "\n", "self", ".", "conv_sgate3", "=", "_ConvBNSig", "(", "16", ",", "5", ",", "3", ",", "1", ",", "1", ")", "\n", "\n", "self", ".", "ppm", "=", "PyramidPooling", "(", "320", ",", "32", ")", "\n", "\n", "self", ".", "conv_guide", "=", "_ConvBNReLU", "(", "320", ",", "16", ",", "1", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.net.RGBBranch.forward": [[198, 283], ["net.upsample", "net.RGBBranch.base.layer1", "net.RGBBranch.conv_r1_tran", "net.RGBBranch.conv_d1_tran", "net.RGBBranch.conv_r1_tran2", "net.RGBBranch.conv_d1_tran2", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool2d", "net.RGBBranch.mlp", "net.RGBBranch.conv_sgate1", "net.RGBBranch.conv_sgate1", "net.RGBBranch.conv_sgate3", "net.upsample", "net.upsample", "net.upsample", "net.upsample", "net.upsample", "net.RGBBranch.ppm", "net.RGBBranch.conv_cp5", "net.RGBBranch.conv_cp4", "net.RGBBranch.conv_cp3", "net.RGBBranch.conv_cp2", "net.RGBBranch.conv_cp1", "net.upsample", "net.upsample", "net.upsample", "net.RGBBranch.conv_s_f", "net.RGBBranch.conv_guide", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "net.upsample", "net.upsample", "net.upsample", "net.upsample", "net.RGBBranch.base.layer2", "net.RGBBranch.base.layer3", "net.RGBBranch.base.layer4", "net.RGBBranch.base.layer5", "net.RGBBranch.ca5", "net.RGBBranch.ca4", "net.RGBBranch.ca3", "net.RGBBranch.ca2", "net.RGBBranch.ca1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d"], "methods", ["home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.upsample", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.upsample", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.upsample", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.upsample", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.upsample", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.upsample", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.upsample", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.upsample", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.upsample", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.upsample", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.upsample", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.upsample", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.upsample"], ["", "def", "forward", "(", "self", ",", "x", ",", "feat", ")", ":", "\n", "\n", "        ", "d1", ",", "d2", ",", "d3", ",", "d4", ",", "d5", "=", "feat", "\n", "\n", "d5_guide", "=", "upsample", "(", "self", ".", "conv_guide", "(", "d5", ")", ",", "d1", ".", "shape", "[", "2", ":", "]", ")", "\n", "\n", "r1", "=", "self", ".", "base", ".", "layer1", "(", "x", ")", "\n", "\n", "r1t", "=", "self", ".", "conv_r1_tran", "(", "r1", ")", "\n", "d1t", "=", "self", ".", "conv_d1_tran", "(", "d1", ")", "\n", "r1t2", "=", "self", ".", "conv_r1_tran2", "(", "r1", ")", "\n", "d1t2", "=", "self", ".", "conv_d1_tran2", "(", "d1", ")", "\n", "\n", "# QDW", "\n", "iou", "=", "F", ".", "adaptive_avg_pool2d", "(", "r1t", "*", "d1t", ",", "1", ")", "/", "(", "F", ".", "adaptive_avg_pool2d", "(", "r1t", "+", "d1t", ",", "1", ")", ")", "\n", "\n", "e_rp", "=", "F", ".", "max_pool2d", "(", "r1t", ",", "2", ",", "2", ")", "\n", "e_dp", "=", "F", ".", "max_pool2d", "(", "d1t", ",", "2", ",", "2", ")", "\n", "\n", "e_rp2", "=", "F", ".", "max_pool2d", "(", "e_rp", ",", "2", ",", "2", ")", "\n", "e_dp2", "=", "F", ".", "max_pool2d", "(", "e_dp", ",", "2", ",", "2", ")", "\n", "\n", "iou_p1", "=", "F", ".", "adaptive_avg_pool2d", "(", "e_rp", "*", "e_dp", ",", "1", ")", "/", "(", "F", ".", "adaptive_avg_pool2d", "(", "e_rp", "+", "e_dp", ",", "1", ")", ")", "\n", "\n", "iou_p2", "=", "F", ".", "adaptive_avg_pool2d", "(", "e_rp2", "*", "e_dp2", ",", "1", ")", "/", "(", "F", ".", "adaptive_avg_pool2d", "(", "e_rp2", "+", "e_dp2", ",", "1", ")", ")", "\n", "\n", "gate", "=", "self", ".", "mlp", "(", "torch", ".", "cat", "(", "(", "iou", ",", "iou_p1", ",", "iou_p2", ")", ",", "dim", "=", "1", ")", ")", "\n", "\n", "\n", "# DHA", "\n", "mc", "=", "r1t2", "*", "d1t2", "\n", "\n", "sgate", "=", "self", ".", "conv_sgate1", "(", "upsample", "(", "mc", "+", "d5_guide", ",", "d2", ".", "shape", "[", "2", ":", "]", ")", ")", "\n", "d5_guide1", "=", "mc", "+", "upsample", "(", "sgate", ",", "d1", ".", "shape", "[", "2", ":", "]", ")", "\n", "\n", "sgate", "=", "self", ".", "conv_sgate1", "(", "upsample", "(", "mc", "+", "d5_guide1", ",", "d2", ".", "shape", "[", "2", ":", "]", ")", ")", "\n", "d5_guide2", "=", "mc", "+", "upsample", "(", "sgate", ",", "d1", ".", "shape", "[", "2", ":", "]", ")", "\n", "\n", "sgate", "=", "self", ".", "conv_sgate3", "(", "d5_guide1", "+", "d5_guide2", "+", "mc", ")", "\n", "\n", "dqw1", "=", "gate", "[", ":", ",", "0", ":", "1", ",", "...", "]", "\n", "dha1", "=", "upsample", "(", "sgate", "[", ":", ",", "0", ":", "1", ",", "...", "]", ",", "d1", ".", "shape", "[", "2", ":", "]", ")", "\n", "dqw2", "=", "gate", "[", ":", ",", "1", ":", "2", ",", "...", "]", "\n", "dha2", "=", "upsample", "(", "sgate", "[", ":", ",", "1", ":", "2", ",", "...", "]", ",", "d2", ".", "shape", "[", "2", ":", "]", ")", "\n", "dqw3", "=", "gate", "[", ":", ",", "2", ":", "3", ",", "...", "]", "\n", "dha3", "=", "upsample", "(", "sgate", "[", ":", ",", "2", ":", "3", ",", "...", "]", ",", "d3", ".", "shape", "[", "2", ":", "]", ")", "\n", "dqw4", "=", "gate", "[", ":", ",", "3", ":", "4", ",", "...", "]", "\n", "dha4", "=", "upsample", "(", "sgate", "[", ":", ",", "3", ":", "4", ",", "...", "]", ",", "d4", ".", "shape", "[", "2", ":", "]", ")", "\n", "dqw5", "=", "gate", "[", ":", ",", "4", ":", "5", ",", "...", "]", "\n", "dha5", "=", "upsample", "(", "sgate", "[", ":", ",", "4", ":", "5", ",", "...", "]", ",", "d5", ".", "shape", "[", "2", ":", "]", ")", "\n", "\n", "r1", "=", "r1", "+", "d1", "*", "dqw1", "*", "dha1", "\n", "r2", "=", "self", ".", "base", ".", "layer2", "(", "r1", ")", "+", "d2", "*", "dqw2", "*", "dha2", "\n", "r3", "=", "self", ".", "base", ".", "layer3", "(", "r2", ")", "+", "d3", "*", "dqw3", "*", "dha3", "\n", "r4", "=", "self", ".", "base", ".", "layer4", "(", "r3", ")", "+", "d4", "*", "dqw4", "*", "dha4", "\n", "r5", "=", "self", ".", "base", ".", "layer5", "(", "r4", ")", "+", "d5", "*", "dqw5", "*", "dha5", "\n", "r6", "=", "self", ".", "ppm", "(", "r5", ")", "\n", "\n", "# Two stage decoder", "\n", "## pre-fusion", "\n", "r5", "=", "self", ".", "conv_cp5", "(", "r5", ")", "\n", "r4", "=", "self", ".", "conv_cp4", "(", "r4", ")", "\n", "r3", "=", "self", ".", "conv_cp3", "(", "r3", ")", "\n", "r2", "=", "self", ".", "conv_cp2", "(", "r2", ")", "\n", "r1", "=", "self", ".", "conv_cp1", "(", "r1", ")", "\n", "\n", "r5", "=", "self", ".", "ca5", "(", "F", ".", "adaptive_avg_pool2d", "(", "r5", ",", "1", ")", ")", "*", "r5", "\n", "r4", "=", "self", ".", "ca4", "(", "F", ".", "adaptive_avg_pool2d", "(", "r4", ",", "1", ")", ")", "*", "r4", "\n", "r3", "=", "self", ".", "ca3", "(", "F", ".", "adaptive_avg_pool2d", "(", "r3", ",", "1", ")", ")", "*", "r3", "\n", "r2", "=", "self", ".", "ca2", "(", "F", ".", "adaptive_avg_pool2d", "(", "r2", ",", "1", ")", ")", "*", "r2", "\n", "r1", "=", "self", ".", "ca1", "(", "F", ".", "adaptive_avg_pool2d", "(", "r1", ",", "1", ")", ")", "*", "r1", "\n", "\n", "r3", "=", "upsample", "(", "r3", ",", "r1", ".", "shape", "[", "2", ":", "]", ")", "\n", "r2", "=", "upsample", "(", "r2", ",", "r1", ".", "shape", "[", "2", ":", "]", ")", "\n", "rh", "=", "r4", "+", "r5", "+", "r6", "\n", "rl", "=", "r1", "+", "r2", "+", "r3", "\n", "\n", "## full-fusion", "\n", "rh", "=", "upsample", "(", "rh", ",", "rl", ".", "shape", "[", "2", ":", "]", ")", "\n", "sal", "=", "self", ".", "conv_s_f", "(", "torch", ".", "cat", "(", "(", "rh", ",", "rl", ")", ",", "dim", "=", "1", ")", ")", "\n", "\n", "return", "sal", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.net.upsample": [[16, 18], ["torch.nn.functional.interpolate"], "function", ["None"], ["def", "upsample", "(", "x", ",", "size", ")", ":", "\n", "    ", "return", "F", ".", "interpolate", "(", "x", ",", "size", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.net._make_layer": [[86, 92], ["layers.append", "range", "torch.Sequential", "block", "layers.append", "block"], "function", ["None"], ["", "", "def", "_make_layer", "(", "block", ",", "inplanes", ",", "planes", ",", "blocks", ",", "t", "=", "6", ",", "stride", "=", "1", ")", ":", "\n", "    ", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "inplanes", ",", "planes", ",", "t", ",", "stride", ")", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "        ", "layers", ".", "append", "(", "block", "(", "planes", ",", "planes", ",", "t", ",", "1", ")", ")", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.net.initialize_weights": [[284, 293], ["torch.hub.load", "torch.hub.load", "torch.hub.load", "torch.hub.load", "torch.hub.load", "torch.hub.load.state_dict", "model.state_dict().items", "model.load_state_dict", "model.state_dict", "m.state_dict.keys"], "function", ["None"], ["", "", "def", "initialize_weights", "(", "model", ")", ":", "\n", "    ", "m", "=", "torch", ".", "hub", ".", "load", "(", "'pytorch/vision:v0.6.0'", ",", "'mobilenet_v2'", ",", "pretrained", "=", "True", ")", "\n", "pretrained_dict", "=", "m", ".", "state_dict", "(", ")", "\n", "all_params", "=", "{", "}", "\n", "for", "k", ",", "v", "in", "model", ".", "state_dict", "(", ")", ".", "items", "(", ")", ":", "\n", "        ", "if", "k", "in", "pretrained_dict", ".", "keys", "(", ")", ":", "\n", "            ", "v", "=", "pretrained_dict", "[", "k", "]", "\n", "all_params", "[", "k", "]", "=", "v", "\n", "", "", "model", ".", "load_state_dict", "(", "all_params", ",", "strict", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.train.upsample": [[19, 21], ["torch.interpolate"], "function", ["None"], ["def", "upsample", "(", "x", ",", "size", ")", ":", "\n", "    ", "return", "F", ".", "interpolate", "(", "x", ",", "size", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.train.train": [[23, 74], ["model.train", "enumerate", "logging.info", "writer.add_scalar", "optimizer.zero_grad", "images.cuda.cuda", "gts.cuda.cuda", "depths.cuda.cuda", "lr_scheduler", "writer.add_scalar", "model", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "loss.backward", "utils.clip_gradient", "optimizer.step", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "print", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "print", "print", "logging.info", "writer.add_scalar", "model.state_dict", "os.path.exists", "os.makedirs", "model.state_dict", "datetime.datetime.now"], "function", ["home.repos.pwc.inspect_result.zwbx_DFM-Net.None.train.train", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.utils.clip_gradient", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.test.save", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.test.save", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.test.save", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.test.save", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.test.save", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.test.save", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.test.save", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.test.save", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.test.save", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.test.save"], ["", "def", "train", "(", "train_loader", ",", "model", ",", "optimizer", ",", "epoch", ",", "save_path", ")", ":", "\n", "\n", "    ", "global", "step", "\n", "model", ".", "train", "(", ")", "\n", "loss_all", "=", "0", "\n", "epoch_step", "=", "0", "\n", "try", ":", "\n", "        ", "for", "i", ",", "(", "images", ",", "gts", ",", "depths", ")", "in", "enumerate", "(", "train_loader", ",", "start", "=", "1", ")", ":", "\n", "            ", "optimizer", ".", "zero_grad", "(", ")", "\n", "images", "=", "images", ".", "cuda", "(", ")", "\n", "gts", "=", "gts", ".", "cuda", "(", ")", "\n", "depths", "=", "depths", ".", "cuda", "(", ")", "\n", "\n", "\n", "cur_lr", "=", "lr_scheduler", "(", "optimizer", ",", "i", ",", "epoch", ")", "\n", "writer", ".", "add_scalar", "(", "'learning_rate'", ",", "cur_lr", ",", "global_step", "=", "(", "epoch", "-", "1", ")", "*", "total_step", "+", "i", ")", "\n", "\n", "out", ",", "feature_r", ",", "feature_d", "=", "model", "(", "images", ",", "depths", ")", "\n", "loss_f", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "out", "[", "0", "]", ",", "gts", ")", "\n", "loss_d", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "out", "[", "1", "]", ",", "gts", ")", "\n", "\n", "\n", "loss", "=", "loss_f", "+", "loss_d", "\n", "loss", ".", "backward", "(", ")", "\n", "\n", "clip_gradient", "(", "optimizer", ",", "opt", ".", "clip", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "step", "+=", "1", "\n", "epoch_step", "+=", "1", "\n", "loss_all", "+=", "loss", ".", "data", "\n", "\n", "\n", "if", "i", "%", "100", "==", "0", "or", "i", "==", "total_step", "or", "i", "==", "1", ":", "\n", "                ", "print", "(", "'{} Epoch [{:03d}/{:03d}], Step [{:04d}/{:04d}], loss: {:.4f}, loss_final: {:.4f}, loss_d: {:.4f}'", ".", "\n", "format", "(", "datetime", ".", "now", "(", ")", ",", "epoch", ",", "opt", ".", "epoch", ",", "i", ",", "total_step", ",", "loss", ",", "loss_f", ".", "data", ",", "loss_d", ".", "data", ")", ")", "\n", "logging", ".", "info", "(", "'#TRAIN#:Epoch [{:03d}/{:03d}], Step [{:04d}/{:04d}], Loss1: {:.4f} '", ".", "\n", "format", "(", "epoch", ",", "opt", ".", "epoch", ",", "i", ",", "total_step", ",", "loss", ".", "data", ")", ")", "\n", "writer", ".", "add_scalar", "(", "'Loss'", ",", "loss", ".", "data", ",", "global_step", "=", "step", ")", "\n", "\n", "", "", "loss_all", "/=", "epoch_step", "\n", "logging", ".", "info", "(", "'#TRAIN#:Epoch [{:03d}/{:03d}], Loss_AVG: {:.4f}'", ".", "format", "(", "epoch", ",", "opt", ".", "epoch", ",", "loss_all", ")", ")", "\n", "writer", ".", "add_scalar", "(", "'Loss-epoch'", ",", "loss_all", ",", "global_step", "=", "epoch", ")", "\n", "if", "epoch", "==", "300", ":", "\n", "            ", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "save_path", "+", "'/epoch_{}.pth'", ".", "format", "(", "epoch", ")", ")", "\n", "", "", "except", "KeyboardInterrupt", ":", "\n", "        ", "print", "(", "'Keyboard Interrupt: save model and exit.'", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "save_path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "save_path", ")", "\n", "", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "save_path", "+", "'/epoch_{}.pth'", ".", "format", "(", "epoch", "+", "1", ")", ")", "\n", "print", "(", "'save checkpoints successfully!'", ")", "\n", "raise", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.train.test": [[76, 105], ["model.eval", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "range", "writer.add_scalar", "print", "logging.info", "test_loader.load_data", "numpy.asarray", "image.cuda.cuda", "depth.cuda.cuda", "model", "torch.upsample", "res.sigmoid().data.cpu().numpy().squeeze.sigmoid().data.cpu().numpy().squeeze", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "np.asarray.max", "model.state_dict", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "print", "res.sigmoid().data.cpu().numpy().squeeze.sigmoid().data.cpu().numpy", "res.sigmoid().data.cpu().numpy().squeeze.min", "numpy.sum", "model.state_dict", "res.sigmoid().data.cpu().numpy().squeeze.max", "res.sigmoid().data.cpu().numpy().squeeze.min", "numpy.abs", "res.sigmoid().data.cpu().numpy().squeeze.sigmoid().data.cpu", "res.sigmoid().data.cpu().numpy().squeeze.sigmoid"], "function", ["home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.test_dataset.load_data", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.upsample", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.test.save", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.test.save", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.test.save", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.test.save", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.test.save", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.test.save", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.test.save", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.test.save", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.test.save", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.test.save"], ["", "", "def", "test", "(", "test_loader", ",", "model", ",", "epoch", ",", "save_path", ")", ":", "\n", "    ", "global", "best_mae", ",", "best_epoch", "\n", "model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "mae_sum", "=", "0", "\n", "for", "i", "in", "range", "(", "test_loader", ".", "size", ")", ":", "\n", "            ", "image", ",", "gt", ",", "depth", ",", "name", ",", "img_for_post", "=", "test_loader", ".", "load_data", "(", ")", "\n", "gt", "=", "np", ".", "asarray", "(", "gt", ",", "np", ".", "float32", ")", "\n", "gt", "/=", "(", "gt", ".", "max", "(", ")", "+", "1e-8", ")", "\n", "image", "=", "image", ".", "cuda", "(", ")", "\n", "depth", "=", "depth", ".", "cuda", "(", ")", "\n", "res", ",", "_", ",", "_", "=", "model", "(", "image", ",", "depth", ")", "\n", "res", "=", "F", ".", "upsample", "(", "res", "[", "0", "]", ",", "size", "=", "gt", ".", "shape", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "res", "=", "res", ".", "sigmoid", "(", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", "\n", "res", "=", "(", "res", "-", "res", ".", "min", "(", ")", ")", "/", "(", "res", ".", "max", "(", ")", "-", "res", ".", "min", "(", ")", "+", "1e-8", ")", "\n", "mae_sum", "+=", "np", ".", "sum", "(", "np", ".", "abs", "(", "res", "-", "gt", ")", ")", "*", "1.0", "/", "(", "gt", ".", "shape", "[", "0", "]", "*", "gt", ".", "shape", "[", "1", "]", ")", "\n", "", "mae", "=", "mae_sum", "/", "test_loader", ".", "size", "\n", "writer", ".", "add_scalar", "(", "'MAE'", ",", "torch", ".", "tensor", "(", "mae", ")", ",", "global_step", "=", "epoch", ")", "\n", "print", "(", "'Epoch: {} MAE: {} ####  bestMAE: {} bestEpoch: {}'", ".", "format", "(", "epoch", ",", "mae", ",", "best_mae", ",", "best_epoch", ")", ")", "\n", "if", "epoch", "==", "1", ":", "\n", "            ", "best_mae", "=", "mae", "\n", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "save_path", "+", "'/epoch_best.pth'", ")", "\n", "", "else", ":", "\n", "            ", "if", "mae", "<", "best_mae", ":", "\n", "                ", "best_mae", "=", "mae", "\n", "best_epoch", "=", "epoch", "\n", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "save_path", "+", "'/epoch_best.pth'", ")", "\n", "print", "(", "'best epoch:{}'", ".", "format", "(", "epoch", ")", ")", "\n", "", "", "logging", ".", "info", "(", "'#TEST#:Epoch:{} MAE:{} bestEpoch:{} bestMAE:{}'", ".", "format", "(", "epoch", ",", "mae", ",", "best_epoch", ",", "best_mae", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.SalObjDataset.__init__": [[90, 118], ["natsort.natsorted", "natsort.natsorted", "natsort.natsorted", "natsort.natsorted", "torch.SalObjDataset.filter_files", "len", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "os.listdir", "f.endswith", "os.listdir", "os.listdir", "os.listdir", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Resize", "torchvision.ToTensor", "f.endswith", "f.endswith", "f.endswith", "f.endswith", "f.endswith", "f.endswith"], "methods", ["home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.test_dataset.filter_files"], ["    ", "def", "__init__", "(", "self", ",", "image_root", ",", "gt_root", ",", "depth_root", ",", "edge_root", ",", "trainsize", ")", ":", "\n", "        ", "self", ".", "trainsize", "=", "trainsize", "\n", "self", ".", "images", "=", "[", "image_root", "+", "f", "for", "f", "in", "os", ".", "listdir", "(", "image_root", ")", "if", "f", ".", "endswith", "(", "'.jpg'", ")", "]", "\n", "self", ".", "gts", "=", "[", "gt_root", "+", "f", "for", "f", "in", "os", ".", "listdir", "(", "gt_root", ")", "if", "f", ".", "endswith", "(", "'.jpg'", ")", "\n", "or", "f", ".", "endswith", "(", "'.png'", ")", "]", "\n", "self", ".", "depths", "=", "[", "depth_root", "+", "f", "for", "f", "in", "os", ".", "listdir", "(", "depth_root", ")", "if", "f", ".", "endswith", "(", "'.bmp'", ")", "\n", "or", "f", ".", "endswith", "(", "'.png'", ")", "]", "\n", "self", ".", "edges", "=", "[", "edge_root", "+", "f", "for", "f", "in", "os", ".", "listdir", "(", "edge_root", ")", "if", "f", ".", "endswith", "(", "'.bmp'", ")", "\n", "or", "f", ".", "endswith", "(", "'.png'", ")", "]", "\n", "self", ".", "images", "=", "natsorted", "(", "self", ".", "images", ")", "\n", "self", ".", "gts", "=", "natsorted", "(", "self", ".", "gts", ")", "\n", "self", ".", "depths", "=", "natsorted", "(", "self", ".", "depths", ")", "\n", "self", ".", "edges", "=", "natsorted", "(", "self", ".", "edges", ")", "\n", "# print(self.images)", "\n", "# print(self.depths)", "\n", "# print(self.gts)", "\n", "self", ".", "filter_files", "(", ")", "\n", "self", ".", "size", "=", "len", "(", "self", ".", "images", ")", "\n", "self", ".", "img_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "self", ".", "trainsize", ",", "self", ".", "trainsize", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "]", ")", "\n", "self", ".", "gt_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "self", ".", "trainsize", ",", "self", ".", "trainsize", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "self", ".", "depths_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "self", ".", "trainsize", ",", "self", ".", "trainsize", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.SalObjDataset.__getitem__": [[119, 138], ["torch.SalObjDataset.rgb_loader", "torch.SalObjDataset.binary_loader", "torch.SalObjDataset.binary_loader", "torch.SalObjDataset.binary_loader", "PIL.ImageOps.invert", "data.cv_random_flip", "data.randomCrop", "data.randomRotation", "data.colorEnhance", "data.randomPeper", "torch.SalObjDataset.img_transform", "torch.SalObjDataset.gt_transform", "torch.SalObjDataset.gt_transform", "torch.SalObjDataset.depths_transform", "torch.SalObjDataset.min", "torch.SalObjDataset.max", "torch.SalObjDataset.min"], "methods", ["home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.test_dataset.rgb_loader", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.test_dataset.binary_loader", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.test_dataset.binary_loader", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.test_dataset.binary_loader", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.cv_random_flip", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.randomCrop", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.randomRotation", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.colorEnhance", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.randomPeper"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "image", "=", "self", ".", "rgb_loader", "(", "self", ".", "images", "[", "index", "]", ")", "\n", "gt", "=", "self", ".", "binary_loader", "(", "self", ".", "gts", "[", "index", "]", ")", "\n", "depth", "=", "self", ".", "binary_loader", "(", "self", ".", "depths", "[", "index", "]", ")", "\n", "edge_gt", "=", "self", ".", "binary_loader", "(", "self", ".", "edges", "[", "index", "]", ")", "\n", "depth", "=", "PIL", ".", "ImageOps", ".", "invert", "(", "depth", ")", "\n", "image", ",", "gt", ",", "depth", ",", "edge_gt", "=", "cv_random_flip", "(", "image", ",", "gt", ",", "depth", ",", "edge_gt", ")", "\n", "image", ",", "gt", ",", "depth", ",", "edge_gt", "=", "randomCrop", "(", "image", ",", "gt", ",", "depth", ",", "edge_gt", ")", "\n", "image", ",", "gt", ",", "depth", ",", "edge_gt", "=", "randomRotation", "(", "image", ",", "gt", ",", "depth", ",", "edge_gt", ")", "\n", "image", "=", "colorEnhance", "(", "image", ")", "\n", "# depth= colorEnhance(depth)", "\n", "#gt=randomGaussian(gt)", "\n", "gt", "=", "randomPeper", "(", "gt", ")", "\n", "image", "=", "self", ".", "img_transform", "(", "image", ")", "\n", "gt", "=", "self", ".", "gt_transform", "(", "gt", ")", "\n", "edge_gt", "=", "self", ".", "gt_transform", "(", "edge_gt", ")", "\n", "edge_gt", "=", "(", "edge_gt", "-", "edge_gt", ".", "min", "(", ")", ")", "/", "(", "edge_gt", ".", "max", "(", ")", "-", "edge_gt", ".", "min", "(", ")", "+", "1e-8", ")", "\n", "depth", "=", "self", ".", "depths_transform", "(", "depth", ")", "\n", "return", "image", ",", "gt", ",", "depth", ",", "edge_gt", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.SalObjDataset.filter_files": [[139, 156], ["zip", "PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "len", "len", "len", "len", "images.append", "gts.append", "depths.append", "len", "len", "len", "len"], "methods", ["None"], ["", "def", "filter_files", "(", "self", ")", ":", "\n", "        ", "assert", "len", "(", "self", ".", "images", ")", "==", "len", "(", "self", ".", "gts", ")", "and", "len", "(", "self", ".", "gts", ")", "==", "len", "(", "self", ".", "images", ")", "\n", "images", "=", "[", "]", "\n", "gts", "=", "[", "]", "\n", "depths", "=", "[", "]", "\n", "for", "img_path", ",", "gt_path", ",", "depth_path", "in", "zip", "(", "self", ".", "images", ",", "self", ".", "gts", ",", "self", ".", "depths", ")", ":", "\n", "            ", "img", "=", "Image", ".", "open", "(", "img_path", ")", "\n", "gt", "=", "Image", ".", "open", "(", "gt_path", ")", "\n", "depth", "=", "Image", ".", "open", "(", "depth_path", ")", "\n", "if", "img", ".", "size", "==", "gt", ".", "size", "and", "gt", ".", "size", "==", "depth", ".", "size", ":", "\n", "                ", "images", ".", "append", "(", "img_path", ")", "\n", "gts", ".", "append", "(", "gt_path", ")", "\n", "depths", ".", "append", "(", "depth_path", ")", "\n", "", "", "self", ".", "images", "=", "images", "\n", "self", ".", "gts", "=", "gts", "\n", "self", ".", "depths", "=", "depths", "\n", "assert", "len", "(", "self", ".", "images", ")", "==", "len", "(", "self", ".", "gts", ")", "and", "len", "(", "self", ".", "gts", ")", "==", "len", "(", "self", ".", "images", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.SalObjDataset.rgb_loader": [[157, 161], ["open", "PIL.Image.open", "PIL.Image.open.convert"], "methods", ["None"], ["", "def", "rgb_loader", "(", "self", ",", "path", ")", ":", "\n", "        ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "img", "=", "Image", ".", "open", "(", "f", ")", "\n", "return", "img", ".", "convert", "(", "'RGB'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.SalObjDataset.binary_loader": [[162, 166], ["open", "PIL.Image.open", "PIL.Image.open.convert"], "methods", ["None"], ["", "", "def", "binary_loader", "(", "self", ",", "path", ")", ":", "\n", "        ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "img", "=", "Image", ".", "open", "(", "f", ")", "\n", "return", "img", ".", "convert", "(", "'L'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.SalObjDataset.rgb_loader_ops": [[167, 171], ["open", "PIL.Image.open", "PIL.ImageOps.invert", "PIL.Image.open.convert"], "methods", ["None"], ["", "", "def", "rgb_loader_ops", "(", "self", ",", "path", ")", ":", "\n", "        ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "img", "=", "Image", ".", "open", "(", "f", ")", "\n", "return", "PIL", ".", "ImageOps", ".", "invert", "(", "img", ".", "convert", "(", "'RGB'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.SalObjDataset.resize": [[172, 181], ["max", "max", "img.resize", "gt.resize", "depth.resize"], "methods", ["home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.SalObjDataset.resize", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.SalObjDataset.resize", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.SalObjDataset.resize"], ["", "", "def", "resize", "(", "self", ",", "img", ",", "gt", ",", "depth", ")", ":", "\n", "        ", "assert", "img", ".", "size", "==", "gt", ".", "size", "and", "gt", ".", "size", "==", "depth", ".", "size", "\n", "w", ",", "h", "=", "img", ".", "size", "\n", "if", "h", "<", "self", ".", "trainsize", "or", "w", "<", "self", ".", "trainsize", ":", "\n", "            ", "h", "=", "max", "(", "h", ",", "self", ".", "trainsize", ")", "\n", "w", "=", "max", "(", "w", ",", "self", ".", "trainsize", ")", "\n", "return", "img", ".", "resize", "(", "(", "w", ",", "h", ")", ",", "Image", ".", "BILINEAR", ")", ",", "gt", ".", "resize", "(", "(", "w", ",", "h", ")", ",", "Image", ".", "NEAREST", ")", ",", "depth", ".", "resize", "(", "(", "w", ",", "h", ")", ",", "Image", ".", "NEAREST", ")", "\n", "", "else", ":", "\n", "            ", "return", "img", ",", "gt", ",", "depth", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.SalObjDataset.__len__": [[182, 184], ["None"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.test_dataset.__init__": [[198, 226], ["natsort.natsorted", "natsort.natsorted", "natsort.natsorted", "torch.test_dataset.filter_files", "torchvision.Compose", "torchvision.ToTensor", "torchvision.Compose", "len", "os.listdir", "f.endswith", "os.listdir", "os.listdir", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.Resize", "torchvision.ToTensor", "f.endswith", "f.endswith", "f.endswith", "f.endswith"], "methods", ["home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.test_dataset.filter_files"], ["    ", "def", "__init__", "(", "self", ",", "image_root", ",", "gt_root", ",", "depth_root", ",", "testsize", ")", ":", "\n", "        ", "self", ".", "testsize", "=", "testsize", "\n", "self", ".", "images", "=", "[", "image_root", "+", "f", "for", "f", "in", "os", ".", "listdir", "(", "image_root", ")", "if", "f", ".", "endswith", "(", "'.jpg'", ")", "]", "\n", "self", ".", "gts", "=", "[", "gt_root", "+", "f", "for", "f", "in", "os", ".", "listdir", "(", "gt_root", ")", "if", "f", ".", "endswith", "(", "'.jpg'", ")", "\n", "or", "f", ".", "endswith", "(", "'.png'", ")", "]", "\n", "self", ".", "depths", "=", "[", "depth_root", "+", "f", "for", "f", "in", "os", ".", "listdir", "(", "depth_root", ")", "if", "f", ".", "endswith", "(", "'.bmp'", ")", "\n", "or", "f", ".", "endswith", "(", "'.png'", ")", "]", "\n", "self", ".", "images", "=", "natsorted", "(", "self", ".", "images", ")", "\n", "self", ".", "gts", "=", "natsorted", "(", "self", ".", "gts", ")", "\n", "self", ".", "depths", "=", "natsorted", "(", "self", ".", "depths", ")", "\n", "# print(self.images)", "\n", "# print(self.depths)", "\n", "# print(self.gts)", "\n", "self", ".", "filter_files", "(", ")", "\n", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "self", ".", "testsize", ",", "self", ".", "testsize", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "]", ")", "\n", "self", ".", "gt_transform", "=", "transforms", ".", "ToTensor", "(", ")", "\n", "# self.gt_transform = transforms.Compose([", "\n", "#     transforms.Resize((self.trainsize, self.trainsize)),", "\n", "#     transforms.ToTensor()])", "\n", "self", ".", "depths_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "self", ".", "testsize", ",", "self", ".", "testsize", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", "\n", "self", ".", "size", "=", "len", "(", "self", ".", "images", ")", "\n", "self", ".", "index", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.test_dataset.load_data": [[227, 242], ["torch.test_dataset.rgb_loader", "torch.test_dataset.transform().unsqueeze", "torch.test_dataset.binary_loader", "torch.test_dataset.binary_loader_ops", "torch.test_dataset.depths_transform().unsqueeze", "torch.test_dataset.depths_transform().unsqueeze", "torch.test_dataset.rgb_loader", "image_for_post.resize.resize.resize", "name.endswith", "torch.test_dataset.images[].split", "numpy.array", "torch.test_dataset.transform", "torch.test_dataset.depths_transform", "torch.test_dataset.depths_transform", "torch.test_dataset.rgb_loader_ops", "name.split"], "methods", ["home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.test_dataset.rgb_loader", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.test_dataset.binary_loader", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.test_dataset.binary_loader_ops", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.test_dataset.rgb_loader", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.SalObjDataset.resize", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.test_dataset.rgb_loader_ops"], ["", "def", "load_data", "(", "self", ")", ":", "\n", "        ", "image", "=", "self", ".", "rgb_loader", "(", "self", ".", "images", "[", "self", ".", "index", "]", ")", "\n", "image", "=", "self", ".", "transform", "(", "image", ")", ".", "unsqueeze", "(", "0", ")", "\n", "gt", "=", "self", ".", "binary_loader", "(", "self", ".", "gts", "[", "self", ".", "index", "]", ")", "\n", "depth", "=", "self", ".", "binary_loader_ops", "(", "self", ".", "depths", "[", "self", ".", "index", "]", ")", "\n", "pesudo_depth", "=", "self", ".", "depths_transform", "(", "self", ".", "rgb_loader_ops", "(", "self", ".", "gts", "[", "self", ".", "index", "]", ")", ")", ".", "unsqueeze", "(", "0", ")", "\n", "depth", "=", "self", ".", "depths_transform", "(", "depth", ")", ".", "unsqueeze", "(", "0", ")", "\n", "name", "=", "self", ".", "images", "[", "self", ".", "index", "]", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "image_for_post", "=", "self", ".", "rgb_loader", "(", "self", ".", "images", "[", "self", ".", "index", "]", ")", "\n", "image_for_post", "=", "image_for_post", ".", "resize", "(", "gt", ".", "size", ")", "\n", "if", "name", ".", "endswith", "(", "'.jpg'", ")", ":", "\n", "            ", "name", "=", "name", ".", "split", "(", "'.jpg'", ")", "[", "0", "]", "+", "'.png'", "\n", "", "self", ".", "index", "+=", "1", "\n", "self", ".", "index", "=", "self", ".", "index", "%", "self", ".", "size", "\n", "return", "image", ",", "gt", ",", "depth", ",", "name", ",", "np", ".", "array", "(", "image_for_post", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.test_dataset.rgb_loader": [[243, 247], ["open", "PIL.Image.open", "PIL.Image.open.convert"], "methods", ["None"], ["", "def", "rgb_loader", "(", "self", ",", "path", ")", ":", "\n", "        ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "img", "=", "Image", ".", "open", "(", "f", ")", "\n", "return", "img", ".", "convert", "(", "'RGB'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.test_dataset.binary_loader": [[248, 252], ["open", "PIL.Image.open", "PIL.Image.open.convert"], "methods", ["None"], ["", "", "def", "binary_loader", "(", "self", ",", "path", ")", ":", "\n", "        ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "img", "=", "Image", ".", "open", "(", "f", ")", "\n", "return", "img", ".", "convert", "(", "'L'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.test_dataset.binary_loader_ops": [[253, 257], ["open", "PIL.Image.open", "PIL.ImageOps.invert", "PIL.Image.open.convert"], "methods", ["None"], ["", "", "def", "binary_loader_ops", "(", "self", ",", "path", ")", ":", "\n", "        ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "img", "=", "Image", ".", "open", "(", "f", ")", "\n", "return", "PIL", ".", "ImageOps", ".", "invert", "(", "img", ".", "convert", "(", "'L'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.test_dataset.rgb_loader_ops": [[258, 263], ["open", "PIL.Image.open", "PIL.ImageOps.invert", "PIL.ImageOps.invert.convert"], "methods", ["None"], ["", "", "def", "rgb_loader_ops", "(", "self", ",", "path", ")", ":", "\n", "        ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "img", "=", "Image", ".", "open", "(", "f", ")", "\n", "img", "=", "PIL", ".", "ImageOps", ".", "invert", "(", "img", ".", "convert", "(", "'RGB'", ")", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.test_dataset.__len__": [[264, 266], ["None"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.test_dataset.filter_files": [[267, 286], ["zip", "PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "len", "len", "len", "len", "images.append", "gts.append", "depths.append", "len", "len", "len", "len"], "methods", ["None"], ["", "def", "filter_files", "(", "self", ")", ":", "\n", "        ", "assert", "len", "(", "self", ".", "images", ")", "==", "len", "(", "self", ".", "gts", ")", "and", "len", "(", "self", ".", "gts", ")", "==", "len", "(", "self", ".", "images", ")", "\n", "images", "=", "[", "]", "\n", "gts", "=", "[", "]", "\n", "depths", "=", "[", "]", "\n", "for", "img_path", ",", "gt_path", ",", "depth_path", "in", "zip", "(", "self", ".", "images", ",", "self", ".", "gts", ",", "self", ".", "depths", ")", ":", "\n", "            ", "img", "=", "Image", ".", "open", "(", "img_path", ")", "\n", "gt", "=", "Image", ".", "open", "(", "gt_path", ")", "\n", "depth", "=", "Image", ".", "open", "(", "depth_path", ")", "\n", "if", "img", ".", "size", "==", "gt", ".", "size", "and", "gt", ".", "size", "==", "depth", ".", "size", ":", "\n", "                ", "images", ".", "append", "(", "img_path", ")", "\n", "gts", ".", "append", "(", "gt_path", ")", "\n", "depths", ".", "append", "(", "depth_path", ")", "\n", "# else:", "\n", "#     print(img.size, depth.size, gt.size)", "\n", "", "", "self", ".", "images", "=", "images", "\n", "self", ".", "gts", "=", "gts", "\n", "self", ".", "depths", "=", "depths", "\n", "assert", "len", "(", "self", ".", "images", ")", "==", "len", "(", "self", ".", "gts", ")", "and", "len", "(", "self", ".", "gts", ")", "==", "len", "(", "self", ".", "images", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.cv_random_flip": [[13, 28], ["random.randint", "img.transpose.transpose", "label.transpose.transpose", "depth.transpose.transpose", "edge.transpose.transpose"], "function", ["None"], ["def", "cv_random_flip", "(", "img", ",", "label", ",", "depth", ",", "edge", ")", ":", "\n", "    ", "flip_flag", "=", "random", ".", "randint", "(", "0", ",", "1", ")", "\n", "# flip_flag2= random.randint(0,1)", "\n", "#left right flip", "\n", "if", "flip_flag", "==", "1", ":", "\n", "        ", "img", "=", "img", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "label", "=", "label", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "depth", "=", "depth", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "edge", "=", "edge", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "#top bottom flip", "\n", "# if flip_flag2==1:", "\n", "#     img = img.transpose(Image.FLIP_TOP_BOTTOM)", "\n", "#     label = label.transpose(Image.FLIP_TOP_BOTTOM)", "\n", "#     depth = depth.transpose(Image.FLIP_TOP_BOTTOM)", "\n", "", "return", "img", ",", "label", ",", "depth", ",", "edge", "\n", "", "def", "randomCrop", "(", "image", ",", "label", ",", "depth", ",", "edge", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.randomCrop": [[28, 38], ["numpy.random.randint", "numpy.random.randint", "image.crop", "label.crop", "depth.crop", "edge.crop"], "function", ["None"], ["", "def", "randomCrop", "(", "image", ",", "label", ",", "depth", ",", "edge", ")", ":", "\n", "    ", "border", "=", "30", "\n", "image_width", "=", "image", ".", "size", "[", "0", "]", "\n", "image_height", "=", "image", ".", "size", "[", "1", "]", "\n", "crop_win_width", "=", "np", ".", "random", ".", "randint", "(", "image_width", "-", "border", ",", "image_width", ")", "\n", "crop_win_height", "=", "np", ".", "random", ".", "randint", "(", "image_height", "-", "border", ",", "image_height", ")", "\n", "random_region", "=", "(", "\n", "(", "image_width", "-", "crop_win_width", ")", ">>", "1", ",", "(", "image_height", "-", "crop_win_height", ")", ">>", "1", ",", "(", "image_width", "+", "crop_win_width", ")", ">>", "1", ",", "\n", "(", "image_height", "+", "crop_win_height", ")", ">>", "1", ")", "\n", "return", "image", ".", "crop", "(", "random_region", ")", ",", "label", ".", "crop", "(", "random_region", ")", ",", "depth", ".", "crop", "(", "random_region", ")", ",", "edge", ".", "crop", "(", "random_region", ")", "\n", "", "def", "randomRotation", "(", "image", ",", "label", ",", "depth", ",", "edge", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.randomRotation": [[38, 47], ["random.random", "numpy.random.randint", "image.rotate.rotate", "label.rotate.rotate", "depth.rotate.rotate", "edge.rotate.rotate"], "function", ["None"], ["", "def", "randomRotation", "(", "image", ",", "label", ",", "depth", ",", "edge", ")", ":", "\n", "    ", "mode", "=", "Image", ".", "BICUBIC", "\n", "if", "random", ".", "random", "(", ")", ">", "0.8", ":", "\n", "        ", "random_angle", "=", "np", ".", "random", ".", "randint", "(", "-", "15", ",", "15", ")", "\n", "image", "=", "image", ".", "rotate", "(", "random_angle", ",", "mode", ")", "\n", "label", "=", "label", ".", "rotate", "(", "random_angle", ",", "mode", ")", "\n", "depth", "=", "depth", ".", "rotate", "(", "random_angle", ",", "mode", ")", "\n", "edge", "=", "edge", ".", "rotate", "(", "random_angle", ",", "mode", ")", "\n", "", "return", "image", ",", "label", ",", "depth", ",", "edge", "\n", "", "def", "colorEnhance", "(", "image", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.colorEnhance": [[47, 57], ["PIL.ImageEnhance.Brightness().enhance", "PIL.ImageEnhance.Contrast().enhance", "PIL.ImageEnhance.Color().enhance", "PIL.ImageEnhance.Sharpness().enhance", "random.randint", "random.randint", "random.randint", "random.randint", "PIL.ImageEnhance.Brightness", "PIL.ImageEnhance.Contrast", "PIL.ImageEnhance.Color", "PIL.ImageEnhance.Sharpness"], "function", ["None"], ["", "def", "colorEnhance", "(", "image", ")", ":", "\n", "    ", "bright_intensity", "=", "random", ".", "randint", "(", "5", ",", "15", ")", "/", "10.0", "\n", "image", "=", "ImageEnhance", ".", "Brightness", "(", "image", ")", ".", "enhance", "(", "bright_intensity", ")", "\n", "contrast_intensity", "=", "random", ".", "randint", "(", "5", ",", "15", ")", "/", "10.0", "\n", "image", "=", "ImageEnhance", ".", "Contrast", "(", "image", ")", ".", "enhance", "(", "contrast_intensity", ")", "\n", "color_intensity", "=", "random", ".", "randint", "(", "0", ",", "20", ")", "/", "10.0", "\n", "image", "=", "ImageEnhance", ".", "Color", "(", "image", ")", ".", "enhance", "(", "color_intensity", ")", "\n", "sharp_intensity", "=", "random", ".", "randint", "(", "0", ",", "30", ")", "/", "10.0", "\n", "image", "=", "ImageEnhance", ".", "Sharpness", "(", "image", ")", ".", "enhance", "(", "sharp_intensity", ")", "\n", "return", "image", "\n", "", "def", "randomGaussian", "(", "image", ",", "mean", "=", "0.1", ",", "sigma", "=", "0.35", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.randomGaussian": [[57, 67], ["numpy.asarray", "data.randomGaussian.gaussianNoisy"], "function", ["None"], ["", "def", "randomGaussian", "(", "image", ",", "mean", "=", "0.1", ",", "sigma", "=", "0.35", ")", ":", "\n", "    ", "def", "gaussianNoisy", "(", "im", ",", "mean", "=", "mean", ",", "sigma", "=", "sigma", ")", ":", "\n", "        ", "for", "_i", "in", "range", "(", "len", "(", "im", ")", ")", ":", "\n", "            ", "im", "[", "_i", "]", "+=", "random", ".", "gauss", "(", "mean", ",", "sigma", ")", "\n", "", "return", "im", "\n", "", "img", "=", "np", ".", "asarray", "(", "image", ")", "\n", "width", ",", "height", "=", "img", ".", "shape", "\n", "img", "=", "gaussianNoisy", "(", "img", "[", ":", "]", ".", "flatten", "(", ")", ",", "mean", ",", "sigma", ")", "\n", "img", "=", "img", ".", "reshape", "(", "[", "width", ",", "height", "]", ")", "\n", "return", "Image", ".", "fromarray", "(", "np", ".", "uint8", "(", "img", ")", ")", "\n", "", "def", "randomPeper", "(", "img", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.randomPeper": [[67, 85], ["numpy.array", "int", "range", "PIL.Image.fromarray", "random.randint", "random.randint", "random.randint"], "function", ["None"], ["", "def", "randomPeper", "(", "img", ")", ":", "\n", "\n", "    ", "img", "=", "np", ".", "array", "(", "img", ")", "\n", "noiseNum", "=", "int", "(", "0.0015", "*", "img", ".", "shape", "[", "0", "]", "*", "img", ".", "shape", "[", "1", "]", ")", "\n", "for", "i", "in", "range", "(", "noiseNum", ")", ":", "\n", "\n", "        ", "randX", "=", "random", ".", "randint", "(", "0", ",", "img", ".", "shape", "[", "0", "]", "-", "1", ")", "\n", "\n", "randY", "=", "random", ".", "randint", "(", "0", ",", "img", ".", "shape", "[", "1", "]", "-", "1", ")", "\n", "\n", "if", "random", ".", "randint", "(", "0", ",", "1", ")", "==", "0", ":", "\n", "\n", "            ", "img", "[", "randX", ",", "randY", "]", "=", "0", "\n", "\n", "", "else", ":", "\n", "\n", "            ", "img", "[", "randX", ",", "randY", "]", "=", "255", "\n", "", "", "return", "Image", ".", "fromarray", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.data.get_loader": [[186, 195], ["data.SalObjDataset", "torch.DataLoader"], "function", ["None"], ["", "", "def", "get_loader", "(", "image_root", ",", "gt_root", ",", "depth_root", ",", "edge_root", ",", "batchsize", ",", "trainsize", ",", "shuffle", "=", "True", ",", "num_workers", "=", "2", ",", "pin_memory", "=", "False", ")", ":", "\n", "\n", "    ", "dataset", "=", "SalObjDataset", "(", "image_root", ",", "gt_root", ",", "depth_root", ",", "edge_root", ",", "trainsize", ")", "\n", "data_loader", "=", "data", ".", "DataLoader", "(", "dataset", "=", "dataset", ",", "\n", "batch_size", "=", "batchsize", ",", "\n", "shuffle", "=", "shuffle", ",", "\n", "num_workers", "=", "num_workers", ",", "\n", "pin_memory", "=", "pin_memory", ")", "\n", "return", "data_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.test.save": [[42, 48], ["torch.upsample", "print", "cv2.imwrite", "F.upsample.sigmoid().data.cpu().numpy().squeeze", "F.upsample.data.cpu().numpy().squeeze", "os.path.join", "os.path.join", "F.upsample.min", "F.upsample.sigmoid().data.cpu().numpy", "F.upsample.data.cpu().numpy", "F.upsample.max", "F.upsample.min", "name.replace", "name.replace", "F.upsample.sigmoid().data.cpu", "F.upsample.data.cpu", "F.upsample.sigmoid"], "function", ["home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.upsample"], ["def", "save", "(", "res", ",", "gt", ",", "notation", "=", "None", ",", "sigmoid", "=", "True", ")", ":", "\n", "    ", "res", "=", "F", ".", "upsample", "(", "res", ",", "size", "=", "gt", ".", "shape", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "res", "=", "res", ".", "sigmoid", "(", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", "if", "sigmoid", "==", "True", "else", "res", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", "\n", "res", "=", "(", "res", "-", "res", ".", "min", "(", ")", ")", "/", "(", "res", ".", "max", "(", ")", "-", "res", ".", "min", "(", ")", "+", "1e-8", ")", "\n", "print", "(", "'save img to: '", ",", "os", ".", "path", ".", "join", "(", "save_path", ",", "name", ".", "replace", "(", "'.png'", ",", "'_'", "+", "notation", "+", "'.png'", ")", "if", "notation", "!=", "None", "else", "name", ")", ")", "\n", "cv2", ".", "imwrite", "(", "os", ".", "path", ".", "join", "(", "save_path", ",", "name", ".", "replace", "(", "'.png'", ",", "'_'", "+", "notation", "+", "'.png'", ")", "if", "notation", "!=", "None", "else", "name", ")", ",", "res", "*", "255", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.DepthBranch.__init__": [[32, 39], ["torch.Module.__init__", "depth._make_layer", "depth._make_layer", "depth._make_layer", "depth._make_layer", "depth._make_layer"], "methods", ["home.repos.pwc.inspect_result.zwbx_DFM-Net.None.utils.LR_Scheduler.__init__", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth._make_layer", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth._make_layer", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth._make_layer", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth._make_layer", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "c1", "=", "8", ",", "c2", "=", "16", ",", "c3", "=", "32", ",", "c4", "=", "48", ",", "c5", "=", "320", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "DepthBranch", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bottleneck1", "=", "_make_layer", "(", "LinearBottleneck", ",", "1", ",", "16", ",", "blocks", "=", "1", ",", "t", "=", "3", ",", "stride", "=", "2", ")", "\n", "self", ".", "bottleneck2", "=", "_make_layer", "(", "LinearBottleneck", ",", "16", ",", "24", ",", "blocks", "=", "3", ",", "t", "=", "3", ",", "stride", "=", "2", ")", "\n", "self", ".", "bottleneck3", "=", "_make_layer", "(", "LinearBottleneck", ",", "24", ",", "32", ",", "blocks", "=", "7", ",", "t", "=", "3", ",", "stride", "=", "2", ")", "\n", "self", ".", "bottleneck4", "=", "_make_layer", "(", "LinearBottleneck", ",", "32", ",", "96", ",", "blocks", "=", "3", ",", "t", "=", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "bottleneck5", "=", "_make_layer", "(", "LinearBottleneck", ",", "96", ",", "320", ",", "blocks", "=", "1", ",", "t", "=", "2", ",", "stride", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.DepthBranch.forward": [[45, 62], ["depth.DepthBranch.bottleneck1", "depth.DepthBranch.bottleneck2", "depth.DepthBranch.bottleneck3", "depth.DepthBranch.bottleneck4", "depth.DepthBranch.bottleneck5", "feat.append", "feat.append", "feat.append", "feat.append", "feat.append", "x.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "size", "=", "x", ".", "size", "(", ")", "[", "2", ":", "]", "\n", "feat", "=", "[", "]", "\n", "\n", "x1", "=", "self", ".", "bottleneck1", "(", "x", ")", "\n", "x2", "=", "self", ".", "bottleneck2", "(", "x1", ")", "\n", "x3", "=", "self", ".", "bottleneck3", "(", "x2", ")", "\n", "x4", "=", "self", ".", "bottleneck4", "(", "x3", ")", "\n", "x5", "=", "self", ".", "bottleneck5", "(", "x4", ")", "\n", "# s_d = self.conv_s_d(x5)", "\n", "\n", "feat", ".", "append", "(", "x1", ")", "\n", "feat", ".", "append", "(", "x2", ")", "\n", "feat", ".", "append", "(", "x3", ")", "\n", "feat", ".", "append", "(", "x4", ")", "\n", "feat", ".", "append", "(", "x5", ")", "\n", "return", "x1", ",", "feat", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth._ConvBNReLU.__init__": [[66, 72], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.zwbx_DFM-Net.None.utils.LR_Scheduler.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "_ConvBNReLU", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth._ConvBNReLU.forward": [[74, 76], ["depth._ConvBNReLU.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "conv", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth._DSConv.__init__": [[81, 90], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.zwbx_DFM-Net.None.utils.LR_Scheduler.__init__"], ["def", "__init__", "(", "self", ",", "dw_channels", ",", "out_channels", ",", "stride", "=", "1", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "_DSConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "dw_channels", ",", "dw_channels", ",", "3", ",", "stride", ",", "1", ",", "groups", "=", "dw_channels", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "dw_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "dw_channels", ",", "out_channels", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth._DSConv.forward": [[92, 94], ["depth._DSConv.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "conv", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth._DWConv.__init__": [[103, 109], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.zwbx_DFM-Net.None.utils.LR_Scheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dw_channels", ",", "out_channels", ",", "stride", "=", "1", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "_DWConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "dw_channels", ",", "out_channels", ",", "3", ",", "stride", ",", "1", ",", "groups", "=", "dw_channels", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth._DWConv.forward": [[111, 113], ["depth._DWConv.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "conv", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.LinearBottleneck.__init__": [[120, 131], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "depth._ConvBNReLU", "depth._DWConv", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.zwbx_DFM-Net.None.utils.LR_Scheduler.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "t", "=", "6", ",", "stride", "=", "2", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "LinearBottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "use_shortcut", "=", "stride", "==", "1", "and", "in_channels", "==", "out_channels", "\n", "self", ".", "block", "=", "nn", ".", "Sequential", "(", "\n", "# pw", "\n", "_ConvBNReLU", "(", "in_channels", ",", "in_channels", "*", "t", ",", "1", ")", ",", "\n", "# dw", "\n", "_DWConv", "(", "in_channels", "*", "t", ",", "in_channels", "*", "t", ",", "stride", ")", ",", "\n", "# pw-linear", "\n", "nn", ".", "Conv2d", "(", "in_channels", "*", "t", ",", "out_channels", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.LinearBottleneck.forward": [[133, 138], ["depth.LinearBottleneck.block"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "block", "(", "x", ")", "\n", "if", "self", ".", "use_shortcut", ":", "\n", "            ", "out", "=", "x", "+", "out", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.PyramidPooling.__init__": [[143, 151], ["torch.Module.__init__", "int", "depth._ConvBNReLU", "depth._ConvBNReLU", "depth._ConvBNReLU", "depth._ConvBNReLU", "depth._ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.zwbx_DFM-Net.None.utils.LR_Scheduler.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "PyramidPooling", ",", "self", ")", ".", "__init__", "(", ")", "\n", "inter_channels", "=", "int", "(", "in_channels", "/", "4", ")", "\n", "self", ".", "conv1", "=", "_ConvBNReLU", "(", "in_channels", ",", "inter_channels", ",", "1", ",", "**", "kwargs", ")", "\n", "self", ".", "conv2", "=", "_ConvBNReLU", "(", "in_channels", ",", "inter_channels", ",", "1", ",", "**", "kwargs", ")", "\n", "self", ".", "conv3", "=", "_ConvBNReLU", "(", "in_channels", ",", "inter_channels", ",", "1", ",", "**", "kwargs", ")", "\n", "self", ".", "conv4", "=", "_ConvBNReLU", "(", "in_channels", ",", "inter_channels", ",", "1", ",", "**", "kwargs", ")", "\n", "self", ".", "out", "=", "_ConvBNReLU", "(", "in_channels", "*", "2", ",", "out_channels", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.PyramidPooling.pool": [[152, 155], ["torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d."], "methods", ["None"], ["", "def", "pool", "(", "self", ",", "x", ",", "size", ")", ":", "\n", "        ", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "size", ")", "\n", "return", "avgpool", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.PyramidPooling.forward": [[156, 165], ["depth.upsample", "depth.upsample", "depth.upsample", "depth.upsample", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "depth.PyramidPooling.out", "depth.PyramidPooling.size", "depth.PyramidPooling.conv1", "depth.PyramidPooling.conv2", "depth.PyramidPooling.conv3", "depth.PyramidPooling.conv4", "depth.PyramidPooling.pool", "depth.PyramidPooling.pool", "depth.PyramidPooling.pool", "depth.PyramidPooling.pool"], "methods", ["home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.upsample", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.upsample", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.upsample", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.upsample", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.PyramidPooling.pool", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.PyramidPooling.pool", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.PyramidPooling.pool", "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.PyramidPooling.pool"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "size", "=", "x", ".", "size", "(", ")", "[", "2", ":", "]", "\n", "feat1", "=", "upsample", "(", "self", ".", "conv1", "(", "self", ".", "pool", "(", "x", ",", "1", ")", ")", ",", "size", ")", "\n", "feat2", "=", "upsample", "(", "self", ".", "conv2", "(", "self", ".", "pool", "(", "x", ",", "2", ")", ")", ",", "size", ")", "\n", "feat3", "=", "upsample", "(", "self", ".", "conv3", "(", "self", ".", "pool", "(", "x", ",", "3", ")", ")", ",", "size", ")", "\n", "feat4", "=", "upsample", "(", "self", ".", "conv4", "(", "self", ".", "pool", "(", "x", ",", "6", ")", ")", ",", "size", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "feat1", ",", "feat2", ",", "feat3", ",", "feat4", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "self", ".", "out", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.BasicConv2d.__init__": [[170, 179], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.zwbx_DFM-Net.None.utils.LR_Scheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "dilation", "=", "1", ",", "activation", "=", "'relu'", ")", ":", "\n", "        ", "super", "(", "BasicConv2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "\n", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "activation", "=", "activation", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.BasicConv2d.forward": [[180, 186], ["depth.BasicConv2d.conv", "depth.BasicConv2d.bn", "depth.BasicConv2d.relu", "depth.BasicConv2d.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "x", ")", "\n", "return", "self", ".", "relu", "(", "x", ")", "if", "self", ".", "activation", "==", "'relu'", "else", "self", ".", "sigmoid", "(", "x", ")", "if", "self", ".", "activation", "==", "'sigmoid'", "else", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.upsample": [[17, 19], ["torch.nn.functional.interpolate"], "function", ["None"], ["def", "upsample", "(", "x", ",", "size", ")", ":", "\n", "    ", "return", "F", ".", "interpolate", "(", "x", ",", "size", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth.initialize_weights": [[20, 30], ["torch.hub.load", "torch.hub.load", "torch.hub.load", "torch.hub.load", "torch.hub.load", "torch.hub.load.state_dict", "model.state_dict().items", "model.load_state_dict", "model.state_dict", "m.state_dict.keys"], "function", ["None"], ["", "def", "initialize_weights", "(", "model", ")", ":", "\n", "    ", "m", "=", "torch", ".", "hub", ".", "load", "(", "'pytorch/vision:v0.6.0'", ",", "'mobilenet_v2'", ",", "pretrained", "=", "True", ")", "\n", "pretrained_dict", "=", "m", ".", "state_dict", "(", ")", "\n", "all_params", "=", "{", "}", "\n", "for", "k", ",", "v", "in", "model", ".", "state_dict", "(", ")", ".", "items", "(", ")", ":", "\n", "        ", "if", "k", "in", "pretrained_dict", ".", "keys", "(", ")", "and", "v", ".", "shape", "==", "pretrained_dict", "[", "k", "]", ":", "\n", "            ", "v", "=", "pretrained_dict", "[", "k", "]", "\n", "all_params", "[", "k", "]", "=", "v", "\n", "# assert len(all_params.keys()) == len(self.resnet.state_dict().keys())", "\n", "", "", "model", ".", "load_state_dict", "(", "all_params", ",", "strict", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.depth._make_layer": [[95, 101], ["layers.append", "range", "torch.Sequential", "block", "layers.append", "block"], "function", ["None"], ["", "", "def", "_make_layer", "(", "block", ",", "inplanes", ",", "planes", ",", "blocks", ",", "t", "=", "6", ",", "stride", "=", "1", ")", ":", "\n", "    ", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "inplanes", ",", "planes", ",", "t", ",", "stride", ")", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "        ", "layers", ".", "append", "(", "block", "(", "planes", ",", "planes", ",", "t", ",", "1", ")", ")", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.utils.LR_Scheduler.__init__": [[32, 44], ["print"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "mode", ",", "base_lr", ",", "num_epochs", ",", "iters_per_epoch", "=", "0", ",", "\n", "lr_step", "=", "0", ",", "warmup_epochs", "=", "0", ")", ":", "\n", "        ", "self", ".", "mode", "=", "mode", "\n", "print", "(", "'Using {} LR Scheduler!'", ".", "format", "(", "self", ".", "mode", ")", ")", "\n", "self", ".", "lr", "=", "base_lr", "\n", "if", "mode", "==", "'step'", ":", "\n", "            ", "assert", "lr_step", "\n", "", "self", ".", "lr_step", "=", "lr_step", "\n", "self", ".", "iters_per_epoch", "=", "iters_per_epoch", "\n", "self", ".", "N", "=", "num_epochs", "*", "iters_per_epoch", "\n", "self", ".", "epoch", "=", "-", "1", "\n", "self", ".", "warmup_iters", "=", "warmup_epochs", "*", "iters_per_epoch", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.utils.LR_Scheduler.__call__": [[45, 65], ["utils.LR_Scheduler._adjust_learning_rate", "math.cos", "pow"], "methods", ["home.repos.pwc.inspect_result.zwbx_DFM-Net.None.utils.LR_Scheduler._adjust_learning_rate"], ["", "def", "__call__", "(", "self", ",", "optimizer", ",", "i", ",", "epoch", ")", ":", "#, best_pred):", "\n", "        ", "T", "=", "epoch", "*", "self", ".", "iters_per_epoch", "+", "i", "\n", "if", "self", ".", "mode", "==", "'cos'", ":", "\n", "            ", "lr", "=", "0.5", "*", "self", ".", "lr", "*", "(", "1", "+", "math", ".", "cos", "(", "1.0", "*", "T", "/", "self", ".", "N", "*", "math", ".", "pi", ")", ")", "\n", "", "elif", "self", ".", "mode", "==", "'poly'", ":", "\n", "            ", "lr", "=", "self", ".", "lr", "*", "pow", "(", "(", "1", "-", "1.0", "*", "T", "/", "self", ".", "N", ")", ",", "0.9", ")", "\n", "", "elif", "self", ".", "mode", "==", "'step'", ":", "\n", "            ", "lr", "=", "self", ".", "lr", "*", "(", "0.1", "**", "(", "epoch", "//", "self", ".", "lr_step", ")", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplemented", "\n", "# warm up lr schedule", "\n", "", "if", "self", ".", "warmup_iters", ">", "0", "and", "T", "<", "self", ".", "warmup_iters", ":", "\n", "            ", "lr", "=", "lr", "*", "1.0", "*", "T", "/", "self", ".", "warmup_iters", "\n", "# if epoch > self.epoch:", "\n", "#     print('\\n=>Epoches %i, learning rate = %.4f, \\", "\n", "#         previous best = %.4f' % (epoch, lr, best_pred))", "\n", "#     self.epoch = epoch", "\n", "", "assert", "lr", ">=", "0", "\n", "self", ".", "_adjust_learning_rate", "(", "optimizer", ",", "lr", ")", "\n", "return", "lr", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.utils.LR_Scheduler._adjust_learning_rate": [[66, 74], ["len", "range", "len"], "methods", ["None"], ["", "def", "_adjust_learning_rate", "(", "self", ",", "optimizer", ",", "lr", ")", ":", "\n", "        ", "if", "len", "(", "optimizer", ".", "param_groups", ")", "==", "1", ":", "\n", "            ", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", "=", "lr", "\n", "", "else", ":", "\n", "# enlarge the lr at the head", "\n", "            ", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", "=", "lr", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "optimizer", ".", "param_groups", ")", ")", ":", "\n", "                ", "optimizer", ".", "param_groups", "[", "i", "]", "[", "'lr'", "]", "=", "lr", "*", "10", "", "", "", "", "", ""]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.utils.clip_gradient": [[2, 7], ["param.grad.data.clamp_"], "function", ["None"], ["def", "clip_gradient", "(", "optimizer", ",", "grad_clip", ")", ":", "\n", "    ", "for", "group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "for", "param", "in", "group", "[", "'params'", "]", ":", "\n", "            ", "if", "param", ".", "grad", "is", "not", "None", ":", "\n", "                ", "param", ".", "grad", ".", "data", ".", "clamp_", "(", "-", "grad_clip", ",", "grad_clip", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_DFM-Net.None.utils.adjust_lr": [[9, 18], ["None"], "function", ["None"], ["", "", "", "", "def", "adjust_lr", "(", "optimizer", ",", "init_lr", ",", "epoch", ",", ")", ":", "\n", "    ", "if", "epoch", "in", "[", "200", ",", "300", ",", "375", ",", "450", "]", ":", "\n", "        ", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "            ", "param_group", "[", "'lr'", "]", "=", "0.1", "*", "param_group", "[", "'lr'", "]", "\n", "lr", "=", "param_group", "[", "'lr'", "]", "\n", "", "return", "lr", "\n", "", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "lr", "=", "param_group", "[", "'lr'", "]", "\n", "return", "lr", "\n", "\n"]]}