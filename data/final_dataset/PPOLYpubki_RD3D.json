{"home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.train.parse_option": [[20, 53], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_known_args", "os.path.join", "str", "int", "time.time"], "function", ["None"], ["def", "parse_option", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "# data", "\n", "parser", ".", "add_argument", "(", "'--batchsize'", ",", "type", "=", "int", ",", "default", "=", "10", ",", "help", "=", "'training batch size'", ")", "\n", "parser", ".", "add_argument", "(", "'--trainsize'", ",", "type", "=", "int", ",", "default", "=", "352", ",", "help", "=", "'training dataset size'", ")", "\n", "parser", ".", "add_argument", "(", "'--hflip'", ",", "action", "=", "'store_true'", ",", "help", "=", "'hflip data'", ")", "\n", "parser", ".", "add_argument", "(", "'--vflip'", ",", "action", "=", "'store_true'", ",", "help", "=", "'vflip data'", ")", "\n", "parser", ".", "add_argument", "(", "'--data_dir'", ",", "type", "=", "str", ",", "default", "=", "'data_dir'", ",", "help", "=", "'data director'", ")", "\n", "\n", "# training", "\n", "parser", ".", "add_argument", "(", "'--model'", ",", "type", "=", "str", ",", "default", "=", "''", ",", "help", "=", "'RD3D or RD3D+'", ")", "\n", "parser", ".", "add_argument", "(", "'--epochs'", ",", "type", "=", "int", ",", "default", "=", "50", ",", "help", "=", "'epoch number'", ")", "\n", "parser", ".", "add_argument", "(", "'--optim'", ",", "type", "=", "str", ",", "default", "=", "'adamW'", ",", "help", "=", "'optimizer'", ")", "\n", "parser", ".", "add_argument", "(", "'--lr'", ",", "type", "=", "float", ",", "default", "=", "0.000125", ",", "help", "=", "'learning rate'", ")", "\n", "parser", ".", "add_argument", "(", "'--lr_scheduler'", ",", "type", "=", "str", ",", "default", "=", "'cosine'", ",", "\n", "choices", "=", "[", "\"step\"", ",", "\"cosine\"", "]", ",", "help", "=", "\"learning rate scheduler\"", ")", "\n", "parser", ".", "add_argument", "(", "'--warmup_epoch'", ",", "type", "=", "int", ",", "default", "=", "-", "1", ",", "help", "=", "'warmup epoch'", ")", "\n", "parser", ".", "add_argument", "(", "'--warmup_multiplier'", ",", "type", "=", "int", ",", "default", "=", "100", ",", "help", "=", "'warmup multiplier'", ")", "\n", "parser", ".", "add_argument", "(", "'--lr_decay_epochs'", ",", "type", "=", "int", ",", "default", "=", "[", "120", ",", "160", ",", "200", "]", ",", "nargs", "=", "'+'", ",", "\n", "help", "=", "'for step scheduler. where to decay lr, can be a list'", ")", "\n", "parser", ".", "add_argument", "(", "'--lr_decay_steps'", ",", "type", "=", "int", ",", "default", "=", "20", ",", "\n", "help", "=", "'for step scheduler. step size to decay lr'", ")", "\n", "parser", ".", "add_argument", "(", "'--lr_decay_rate'", ",", "type", "=", "float", ",", "default", "=", "0.1", ",", "\n", "help", "=", "'for step scheduler. decay rate for learning rate'", ")", "\n", "parser", ".", "add_argument", "(", "'--weight_decay'", ",", "type", "=", "float", ",", "default", "=", "0.0001", ",", "help", "=", "'weight decay'", ")", "\n", "parser", ".", "add_argument", "(", "'--momentum'", ",", "type", "=", "float", ",", "default", "=", "0.9", ",", "help", "=", "'momentum for SGD'", ")", "\n", "parser", ".", "add_argument", "(", "'--clip'", ",", "type", "=", "float", ",", "default", "=", "0.5", ",", "help", "=", "'gradient clipping margin'", ")", "\n", "# io", "\n", "parser", ".", "add_argument", "(", "'--output_dir'", ",", "type", "=", "str", ",", "default", "=", "'./output'", ",", "help", "=", "'output director'", ")", "\n", "\n", "opt", ",", "unparsed", "=", "parser", ".", "parse_known_args", "(", ")", "\n", "opt", ".", "output_dir", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "output_dir", ",", "str", "(", "int", "(", "time", ".", "time", "(", ")", ")", ")", ")", "\n", "return", "opt", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.train.build_loader": [[55, 65], ["torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "print", "os.path.join", "os.path.join", "os.path.join", "data.get_loader"], "function", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.data.get_loader"], ["", "def", "build_loader", "(", "opt", ")", ":", "\n", "    ", "num_gpus", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "print", "(", "f\"========>num_gpus:{num_gpus}==========\"", ")", "\n", "\n", "image_root", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "data_dir", ",", "'RGB-train/'", ")", "\n", "gt_root", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "data_dir", ",", "'GT-train/'", ")", "\n", "depth_root", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "data_dir", ",", "'depth-train/'", ")", "\n", "train_loader", "=", "get_loader", "(", "image_root", ",", "gt_root", ",", "depth_root", ",", "batchsize", "=", "opt", ".", "batchsize", "*", "num_gpus", ",", "\n", "trainsize", "=", "opt", ".", "trainsize", ")", "\n", "return", "train_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.train.build_model": [[67, 77], ["torchvision.models.resnet50", "print", "torch.DataParallel().cuda", "model.rd3d.RD3D", "model.rd3d_plus.RD3D_plus", "copy.deepcopy", "copy.deepcopy", "torch.DataParallel"], "function", ["None"], ["", "def", "build_model", "(", "opt", ")", ":", "\n", "# build model", "\n", "    ", "resnet", "=", "torchvision", ".", "models", ".", "resnet50", "(", "pretrained", "=", "True", ")", "\n", "if", "opt", ".", "model", "==", "\"RD3D\"", ":", "\n", "        ", "model", "=", "RD3D", "(", "32", ",", "copy", ".", "deepcopy", "(", "resnet", ")", ")", "\n", "", "else", ":", "\n", "        ", "model", "=", "RD3D_plus", "(", "32", ",", "copy", ".", "deepcopy", "(", "resnet", ")", ")", "\n", "", "print", "(", "model", ")", "\n", "model", "=", "nn", ".", "DataParallel", "(", "model", ")", ".", "cuda", "(", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.train.main": [[79, 111], ["train.build_loader", "len", "logger.info", "train.build_model", "torch.nn.BCEWithLogitsLoss().cuda", "torch.nn.BCEWithLogitsLoss().cuda", "torch.nn.BCEWithLogitsLoss().cuda", "utils.lr_scheduler.get_scheduler", "range", "torch.save", "torch.save", "torch.save", "logger.info", "os.path.join", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "len", "time.time", "train.train", "logger.info", "build_model.state_dict", "os.path.join", "torch.nn.BCEWithLogitsLoss", "torch.nn.BCEWithLogitsLoss", "torch.nn.BCEWithLogitsLoss", "build_model.parameters", "torch.optim.AdamW", "torch.optim.AdamW", "torch.optim.AdamW", "torch.save", "torch.save", "torch.save", "logger.info", "os.path.join", "build_model.parameters", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "build_model.state_dict", "os.path.join", "build_model.parameters", "time.time", "os.path.join"], "function", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.train.build_loader", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.train.build_model", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.utils.lr_scheduler.get_scheduler", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.train.train", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.utils.lr_scheduler.GradualWarmupScheduler.state_dict", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.utils.lr_scheduler.GradualWarmupScheduler.state_dict"], ["", "def", "main", "(", "opt", ")", ":", "\n", "# build dataloader", "\n", "    ", "train_loader", "=", "build_loader", "(", "opt", ")", "\n", "n_data", "=", "len", "(", "train_loader", ".", "dataset", ")", "\n", "logger", ".", "info", "(", "f\"length of training dataset: {n_data}\"", ")", "\n", "# build model", "\n", "model", "=", "build_model", "(", "opt", ")", "\n", "CE", "=", "torch", ".", "nn", ".", "BCEWithLogitsLoss", "(", ")", ".", "cuda", "(", ")", "\n", "# build optimizer", "\n", "if", "opt", ".", "optim", "==", "'adam'", ":", "\n", "        ", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "opt", ".", "lr", ",", "weight_decay", "=", "opt", ".", "weight_decay", ")", "\n", "", "elif", "opt", ".", "optim", "==", "'adamW'", ":", "\n", "        ", "optimizer", "=", "torch", ".", "optim", ".", "AdamW", "(", "model", ".", "parameters", "(", ")", ",", "opt", ".", "lr", ",", "weight_decay", "=", "opt", ".", "weight_decay", ")", "\n", "", "elif", "opt", ".", "optim", "==", "'sdg'", ":", "\n", "        ", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "model", ".", "parameters", "(", ")", ",", "opt", ".", "lr", "/", "10.0", "*", "opt", ".", "batchsize", ",", "momentum", "=", "opt", ".", "momentum", ",", "\n", "weight_decay", "=", "opt", ".", "weight_decay", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "", "scheduler", "=", "get_scheduler", "(", "optimizer", ",", "len", "(", "train_loader", ")", ",", "opt", ")", "\n", "\n", "# routine", "\n", "for", "epoch", "in", "range", "(", "1", ",", "opt", ".", "epochs", "+", "1", ")", ":", "\n", "        ", "tic", "=", "time", ".", "time", "(", ")", "\n", "train", "(", "train_loader", ",", "model", ",", "optimizer", ",", "CE", ",", "scheduler", ",", "epoch", ",", "opt", ")", "\n", "logger", ".", "info", "(", "'epoch {}, total time {:.2f}, learning_rate {}'", ".", "format", "(", "epoch", ",", "(", "time", ".", "time", "(", ")", "-", "tic", ")", ",", "\n", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", ")", ")", "\n", "if", "(", "epoch", ")", "%", "10", "==", "0", ":", "\n", "            ", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "opt", ".", "output_dir", ",", "f\"RD3D_{epoch}_ckpt.pth\"", ")", ")", "\n", "logger", ".", "info", "(", "\"model saved {}!\"", ".", "format", "(", "os", ".", "path", ".", "join", "(", "opt", ".", "output_dir", ",", "f\"RD3D_{epoch}_ckpt.pth\"", ")", ")", ")", "\n", "", "", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "opt", ".", "output_dir", ",", "f\"RD3D_last_ckpt.pth\"", ")", ")", "\n", "logger", ".", "info", "(", "\"model saved {}!\"", ".", "format", "(", "os", ".", "path", ".", "join", "(", "opt", ".", "output_dir", ",", "f\"RD3D_ckpt.pth\"", ")", ")", ")", "\n", "return", "os", ".", "path", ".", "join", "(", "opt", ".", "output_dir", ",", "f\"RD3D_last_ckpt.pth\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.train.train": [[114, 159], ["model.train", "utils.func.AvgMeter", "enumerate", "optimizer.zero_grad", "torch.cat.cuda", "F.upsample.cuda", "depths.unsqueeze.cuda", "int", "model", "criterion", "criterion.backward", "utils.func.clip_gradient", "optimizer.step", "scheduler.step", "logger.info", "torch.upsample", "torch.cat.unsqueeze", "torch.upsample", "torch.upsample", "depths.unsqueeze.unsqueeze", "torch.cat", "torch.cat", "torch.cat", "torch.cat.unsqueeze", "depths.unsqueeze.unsqueeze", "torch.cat", "torch.cat", "torch.cat", "utils.func.AvgMeter.update", "len", "round", "len", "utils.func.AvgMeter.show"], "function", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.train.train", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.utils.func.clip_gradient", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.utils.lr_scheduler.GradualWarmupScheduler.step", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.utils.lr_scheduler.GradualWarmupScheduler.step", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.utils.func.AvgMeter.update", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.utils.func.AvgMeter.show"], ["", "def", "train", "(", "train_loader", ",", "model", ",", "optimizer", ",", "criterion", ",", "scheduler", ",", "epoch", ",", "opt", ")", ":", "\n", "# multi-scale training", "\n", "    ", "size_rates", "=", "[", "0.75", ",", "1", ",", "1.25", "]", "\n", "\n", "model", ".", "train", "(", ")", "\n", "loss_record", "=", "AvgMeter", "(", ")", "\n", "for", "i", ",", "pack", "in", "enumerate", "(", "train_loader", ",", "start", "=", "1", ")", ":", "\n", "        ", "for", "rate", "in", "size_rates", ":", "\n", "            ", "optimizer", ".", "zero_grad", "(", ")", "\n", "images", ",", "gts", ",", "depths", "=", "pack", "\n", "images", "=", "images", ".", "cuda", "(", ")", "\n", "gts", "=", "gts", ".", "cuda", "(", ")", "\n", "depths", "=", "depths", ".", "cuda", "(", ")", "\n", "\n", "# multi-scale training samples", "\n", "trainsize", "=", "int", "(", "round", "(", "opt", ".", "trainsize", "*", "rate", "/", "32", ")", "*", "32", ")", "\n", "if", "rate", "!=", "1", ":", "\n", "                ", "images", "=", "F", ".", "upsample", "(", "images", ",", "size", "=", "(", "trainsize", ",", "trainsize", ")", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "images", "=", "images", ".", "unsqueeze", "(", "2", ")", "\n", "gts", "=", "F", ".", "upsample", "(", "gts", ",", "size", "=", "(", "trainsize", ",", "trainsize", ")", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n", "depths", "=", "F", ".", "upsample", "(", "depths", ",", "size", "=", "(", "trainsize", ",", "trainsize", ")", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "depths", "=", "depths", ".", "unsqueeze", "(", "2", ")", "\n", "images", "=", "torch", ".", "cat", "(", "[", "images", ",", "depths", "]", ",", "2", ")", "\n", "\n", "", "if", "rate", "==", "1", ":", "\n", "                ", "images", "=", "images", ".", "unsqueeze", "(", "2", ")", "\n", "depths", "=", "depths", ".", "unsqueeze", "(", "2", ")", "\n", "images", "=", "torch", ".", "cat", "(", "[", "images", ",", "depths", "]", ",", "2", ")", "\n", "\n", "# forward", "\n", "", "pred_s", "=", "model", "(", "images", ")", "\n", "loss", "=", "criterion", "(", "pred_s", ",", "gts", ")", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "clip_gradient", "(", "optimizer", ",", "opt", ".", "clip", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "scheduler", ".", "step", "(", ")", "\n", "if", "rate", "==", "1", ":", "\n", "                ", "loss_record", ".", "update", "(", "loss", ".", "data", ",", "opt", ".", "batchsize", ")", "\n", "\n", "", "", "if", "i", "%", "100", "==", "0", "or", "i", "==", "len", "(", "train_loader", ")", ":", "\n", "            ", "logger", ".", "info", "(", "'Epoch [{:03d}/{:03d}], Step [{:04d}/{:04d}], Loss: {:.4f}'", ".", "\n", "format", "(", "epoch", ",", "opt", ".", "epochs", ",", "i", ",", "len", "(", "train_loader", ")", ",", "\n", "loss_record", ".", "show", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.data.SalObjDataset.__init__": [[76, 96], ["sorted", "sorted", "sorted", "torch.SalObjDataset.filter_files", "len", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "os.listdir", "f.endswith", "os.listdir", "os.listdir", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Resize", "torchvision.ToTensor", "f.endswith", "f.endswith", "f.endswith", "f.endswith"], "methods", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.data.SalObjDataset.filter_files"], ["    ", "def", "__init__", "(", "self", ",", "image_root", ",", "gt_root", ",", "depth_root", ",", "trainsize", ")", ":", "\n", "        ", "self", ".", "trainsize", "=", "trainsize", "\n", "self", ".", "images", "=", "[", "image_root", "+", "f", "for", "f", "in", "os", ".", "listdir", "(", "image_root", ")", "if", "f", ".", "endswith", "(", "'.jpg'", ")", "]", "\n", "self", ".", "gts", "=", "[", "gt_root", "+", "f", "for", "f", "in", "os", ".", "listdir", "(", "gt_root", ")", "if", "f", ".", "endswith", "(", "'.jpg'", ")", "\n", "or", "f", ".", "endswith", "(", "'.png'", ")", "]", "\n", "self", ".", "depths", "=", "[", "depth_root", "+", "f", "for", "f", "in", "os", ".", "listdir", "(", "depth_root", ")", "if", "f", ".", "endswith", "(", "'.bmp'", ")", "\n", "or", "f", ".", "endswith", "(", "'.png'", ")", "]", "\n", "self", ".", "images", "=", "sorted", "(", "self", ".", "images", ")", "\n", "self", ".", "gts", "=", "sorted", "(", "self", ".", "gts", ")", "\n", "self", ".", "depths", "=", "sorted", "(", "self", ".", "depths", ")", "\n", "self", ".", "filter_files", "(", ")", "\n", "self", ".", "size", "=", "len", "(", "self", ".", "images", ")", "\n", "self", ".", "img_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "self", ".", "trainsize", ",", "self", ".", "trainsize", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "]", ")", "\n", "self", ".", "gt_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "self", ".", "trainsize", ",", "self", ".", "trainsize", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "self", ".", "depths_transform", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "Resize", "(", "(", "self", ".", "trainsize", ",", "self", ".", "trainsize", ")", ")", ",", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.data.SalObjDataset.__getitem__": [[97, 113], ["torch.SalObjDataset.rgb_loader", "torch.SalObjDataset.binary_loader", "torch.SalObjDataset.binary_loader", "data.cv_random_flip", "data.randomCrop", "data.randomRotation", "data.colorEnhance", "data.randomPeper", "torch.SalObjDataset.img_transform", "torch.SalObjDataset.gt_transform", "torch.SalObjDataset.depths_transform", "torch.SalObjDataset.repeat"], "methods", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.data.test_dataset.rgb_loader", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.data.test_dataset.binary_loader", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.data.test_dataset.binary_loader", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.data.cv_random_flip", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.data.randomCrop", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.data.randomRotation", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.data.colorEnhance", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.data.randomPeper"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "image", "=", "self", ".", "rgb_loader", "(", "self", ".", "images", "[", "index", "]", ")", "\n", "gt", "=", "self", ".", "binary_loader", "(", "self", ".", "gts", "[", "index", "]", ")", "\n", "depth", "=", "self", ".", "binary_loader", "(", "self", ".", "depths", "[", "index", "]", ")", "\n", "image", ",", "gt", ",", "depth", "=", "cv_random_flip", "(", "image", ",", "gt", ",", "depth", ")", "\n", "image", ",", "gt", ",", "depth", "=", "randomCrop", "(", "image", ",", "gt", ",", "depth", ")", "\n", "image", ",", "gt", ",", "depth", "=", "randomRotation", "(", "image", ",", "gt", ",", "depth", ")", "\n", "image", "=", "colorEnhance", "(", "image", ")", "\n", "# gt=randomGaussian(gt)", "\n", "gt", "=", "randomPeper", "(", "gt", ")", "\n", "image", "=", "self", ".", "img_transform", "(", "image", ")", "\n", "gt", "=", "self", ".", "gt_transform", "(", "gt", ")", "\n", "depth", "=", "self", ".", "depths_transform", "(", "depth", ")", "\n", "depth_new", "=", "depth", ".", "repeat", "(", "3", ",", "1", ",", "1", ")", "\n", "\n", "return", "image", ",", "gt", ",", "depth_new", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.data.SalObjDataset.filter_files": [[114, 130], ["zip", "PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "len", "len", "len", "len", "images.append", "gts.append", "depths.append"], "methods", ["None"], ["", "def", "filter_files", "(", "self", ")", ":", "\n", "        ", "assert", "len", "(", "self", ".", "images", ")", "==", "len", "(", "self", ".", "gts", ")", "and", "len", "(", "self", ".", "gts", ")", "==", "len", "(", "self", ".", "images", ")", "\n", "images", "=", "[", "]", "\n", "gts", "=", "[", "]", "\n", "depths", "=", "[", "]", "\n", "for", "img_path", ",", "gt_path", ",", "depth_path", "in", "zip", "(", "self", ".", "images", ",", "self", ".", "gts", ",", "self", ".", "depths", ")", ":", "\n", "            ", "img", "=", "Image", ".", "open", "(", "img_path", ")", "\n", "gt", "=", "Image", ".", "open", "(", "gt_path", ")", "\n", "depth", "=", "Image", ".", "open", "(", "depth_path", ")", "\n", "if", "img", ".", "size", "==", "gt", ".", "size", "and", "gt", ".", "size", "==", "depth", ".", "size", ":", "\n", "                ", "images", ".", "append", "(", "img_path", ")", "\n", "gts", ".", "append", "(", "gt_path", ")", "\n", "depths", ".", "append", "(", "depth_path", ")", "\n", "", "", "self", ".", "images", "=", "images", "\n", "self", ".", "gts", "=", "gts", "\n", "self", ".", "depths", "=", "depths", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.data.SalObjDataset.rgb_loader": [[131, 135], ["open", "PIL.Image.open", "PIL.Image.open.convert"], "methods", ["None"], ["", "def", "rgb_loader", "(", "self", ",", "path", ")", ":", "\n", "        ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "img", "=", "Image", ".", "open", "(", "f", ")", "\n", "return", "img", ".", "convert", "(", "'RGB'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.data.SalObjDataset.binary_loader": [[136, 140], ["open", "PIL.Image.open", "PIL.Image.open.convert"], "methods", ["None"], ["", "", "def", "binary_loader", "(", "self", ",", "path", ")", ":", "\n", "        ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "img", "=", "Image", ".", "open", "(", "f", ")", "\n", "return", "img", ".", "convert", "(", "'L'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.data.SalObjDataset.resize": [[141, 150], ["max", "max", "img.resize", "gt.resize", "depth.resize"], "methods", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.data.SalObjDataset.resize", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.data.SalObjDataset.resize", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.data.SalObjDataset.resize"], ["", "", "def", "resize", "(", "self", ",", "img", ",", "gt", ",", "depth", ")", ":", "\n", "        ", "assert", "img", ".", "size", "==", "gt", ".", "size", "and", "gt", ".", "size", "==", "depth", ".", "size", "\n", "w", ",", "h", "=", "img", ".", "size", "\n", "if", "h", "<", "self", ".", "trainsize", "or", "w", "<", "self", ".", "trainsize", ":", "\n", "            ", "h", "=", "max", "(", "h", ",", "self", ".", "trainsize", ")", "\n", "w", "=", "max", "(", "w", ",", "self", ".", "trainsize", ")", "\n", "return", "img", ".", "resize", "(", "(", "w", ",", "h", ")", ",", "Image", ".", "BILINEAR", ")", ",", "gt", ".", "resize", "(", "(", "w", ",", "h", ")", ",", "Image", ".", "NEAREST", ")", ",", "depth", ".", "resize", "(", "(", "w", ",", "h", ")", ",", "Image", ".", "NEAREST", ")", "\n", "", "else", ":", "\n", "            ", "return", "img", ",", "gt", ",", "depth", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.data.SalObjDataset.__len__": [[151, 153], ["None"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.data.test_dataset.__init__": [[167, 188], ["sorted", "sorted", "sorted", "torchvision.Compose", "torchvision.ToTensor", "torchvision.Compose", "len", "os.listdir", "f.endswith", "os.listdir", "os.listdir", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.Resize", "torchvision.ToTensor", "f.endswith", "f.endswith", "f.endswith", "f.endswith"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "image_root", ",", "gt_root", ",", "depth_root", ",", "testsize", ")", ":", "\n", "        ", "self", ".", "testsize", "=", "testsize", "\n", "self", ".", "images", "=", "[", "image_root", "+", "f", "for", "f", "in", "os", ".", "listdir", "(", "image_root", ")", "if", "f", ".", "endswith", "(", "'.jpg'", ")", "]", "\n", "self", ".", "gts", "=", "[", "gt_root", "+", "f", "for", "f", "in", "os", ".", "listdir", "(", "gt_root", ")", "if", "f", ".", "endswith", "(", "'.jpg'", ")", "\n", "or", "f", ".", "endswith", "(", "'.png'", ")", "]", "\n", "self", ".", "depths", "=", "[", "depth_root", "+", "f", "for", "f", "in", "os", ".", "listdir", "(", "depth_root", ")", "if", "f", ".", "endswith", "(", "'.bmp'", ")", "\n", "or", "f", ".", "endswith", "(", "'.png'", ")", "]", "\n", "self", ".", "images", "=", "sorted", "(", "self", ".", "images", ")", "\n", "self", ".", "gts", "=", "sorted", "(", "self", ".", "gts", ")", "\n", "self", ".", "depths", "=", "sorted", "(", "self", ".", "depths", ")", "\n", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "self", ".", "testsize", ",", "self", ".", "testsize", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "]", ")", "\n", "self", ".", "gt_transform", "=", "transforms", ".", "ToTensor", "(", ")", "\n", "# self.gt_transform = transforms.Compose([", "\n", "#     transforms.Resize((self.trainsize, self.trainsize)),", "\n", "#     transforms.ToTensor()])", "\n", "self", ".", "depths_transform", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "Resize", "(", "(", "self", ".", "testsize", ",", "self", ".", "testsize", ")", ")", ",", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "self", ".", "size", "=", "len", "(", "self", ".", "images", ")", "\n", "self", ".", "index", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.data.test_dataset.load_data": [[189, 204], ["torch.test_dataset.rgb_loader", "torch.test_dataset.transform().unsqueeze", "torch.test_dataset.binary_loader", "torch.test_dataset.binary_loader", "torch.test_dataset.depths_transform().unsqueeze", "torch.test_dataset.repeat", "torch.test_dataset.rgb_loader", "image_for_post.resize.resize.resize", "name.endswith", "torch.test_dataset.images[].split", "torch.test_dataset.transform", "torch.test_dataset.depths_transform", "name.split"], "methods", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.data.test_dataset.rgb_loader", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.data.test_dataset.binary_loader", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.data.test_dataset.binary_loader", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.data.test_dataset.rgb_loader", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.data.SalObjDataset.resize"], ["", "def", "load_data", "(", "self", ")", ":", "\n", "        ", "image", "=", "self", ".", "rgb_loader", "(", "self", ".", "images", "[", "self", ".", "index", "]", ")", "\n", "image", "=", "self", ".", "transform", "(", "image", ")", ".", "unsqueeze", "(", "0", ")", "\n", "gt", "=", "self", ".", "binary_loader", "(", "self", ".", "gts", "[", "self", ".", "index", "]", ")", "\n", "depth", "=", "self", ".", "binary_loader", "(", "self", ".", "depths", "[", "self", ".", "index", "]", ")", "\n", "depth", "=", "self", ".", "depths_transform", "(", "depth", ")", ".", "unsqueeze", "(", "0", ")", "\n", "depth_new", "=", "depth", ".", "repeat", "(", "1", ",", "3", ",", "1", ",", "1", ")", "\n", "name", "=", "self", ".", "images", "[", "self", ".", "index", "]", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "image_for_post", "=", "self", ".", "rgb_loader", "(", "self", ".", "images", "[", "self", ".", "index", "]", ")", "\n", "image_for_post", "=", "image_for_post", ".", "resize", "(", "gt", ".", "size", ")", "\n", "if", "name", ".", "endswith", "(", "'.jpg'", ")", ":", "\n", "            ", "name", "=", "name", ".", "split", "(", "'.jpg'", ")", "[", "0", "]", "+", "'.png'", "\n", "", "self", ".", "index", "+=", "1", "\n", "self", ".", "index", "=", "self", ".", "index", "%", "self", ".", "size", "\n", "return", "image", ",", "gt", ",", "depth_new", ",", "name", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.data.test_dataset.rgb_loader": [[205, 209], ["open", "PIL.Image.open", "PIL.Image.open.convert"], "methods", ["None"], ["", "def", "rgb_loader", "(", "self", ",", "path", ")", ":", "\n", "        ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "img", "=", "Image", ".", "open", "(", "f", ")", "\n", "return", "img", ".", "convert", "(", "'RGB'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.data.test_dataset.binary_loader": [[210, 214], ["open", "PIL.Image.open", "PIL.Image.open.convert"], "methods", ["None"], ["", "", "def", "binary_loader", "(", "self", ",", "path", ")", ":", "\n", "        ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "img", "=", "Image", ".", "open", "(", "f", ")", "\n", "return", "img", ".", "convert", "(", "'L'", ")", "\n", "", "", "def", "__len__", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.data.test_dataset.__len__": [[214, 216], ["None"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "size", "", "", "", ""]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.data.cv_random_flip": [[10, 17], ["random.randint", "img.transpose.transpose", "label.transpose.transpose", "depth.transpose.transpose"], "function", ["None"], ["def", "cv_random_flip", "(", "img", ",", "label", ",", "depth", ")", ":", "\n", "    ", "flip_flag", "=", "random", ".", "randint", "(", "0", ",", "1", ")", "\n", "if", "flip_flag", "==", "1", ":", "\n", "        ", "img", "=", "img", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "label", "=", "label", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "depth", "=", "depth", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "", "return", "img", ",", "label", ",", "depth", "\n", "", "def", "randomCrop", "(", "image", ",", "label", ",", "depth", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.data.randomCrop": [[17, 27], ["numpy.random.randint", "numpy.random.randint", "image.crop", "label.crop", "depth.crop"], "function", ["None"], ["", "def", "randomCrop", "(", "image", ",", "label", ",", "depth", ")", ":", "\n", "    ", "border", "=", "30", "\n", "image_width", "=", "image", ".", "size", "[", "0", "]", "\n", "image_height", "=", "image", ".", "size", "[", "1", "]", "\n", "crop_win_width", "=", "np", ".", "random", ".", "randint", "(", "image_width", "-", "border", ",", "image_width", ")", "\n", "crop_win_height", "=", "np", ".", "random", ".", "randint", "(", "image_height", "-", "border", ",", "image_height", ")", "\n", "random_region", "=", "(", "\n", "(", "image_width", "-", "crop_win_width", ")", ">>", "1", ",", "(", "image_height", "-", "crop_win_height", ")", ">>", "1", ",", "(", "image_width", "+", "crop_win_width", ")", ">>", "1", ",", "\n", "(", "image_height", "+", "crop_win_height", ")", ">>", "1", ")", "\n", "return", "image", ".", "crop", "(", "random_region", ")", ",", "label", ".", "crop", "(", "random_region", ")", ",", "depth", ".", "crop", "(", "random_region", ")", "\n", "", "def", "randomRotation", "(", "image", ",", "label", ",", "depth", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.data.randomRotation": [[27, 35], ["random.random", "numpy.random.randint", "image.rotate.rotate", "label.rotate.rotate", "depth.rotate.rotate"], "function", ["None"], ["", "def", "randomRotation", "(", "image", ",", "label", ",", "depth", ")", ":", "\n", "    ", "mode", "=", "Image", ".", "BICUBIC", "\n", "if", "random", ".", "random", "(", ")", ">", "0.8", ":", "\n", "        ", "random_angle", "=", "np", ".", "random", ".", "randint", "(", "-", "15", ",", "15", ")", "\n", "image", "=", "image", ".", "rotate", "(", "random_angle", ",", "mode", ")", "\n", "label", "=", "label", ".", "rotate", "(", "random_angle", ",", "mode", ")", "\n", "depth", "=", "depth", ".", "rotate", "(", "random_angle", ",", "mode", ")", "\n", "", "return", "image", ",", "label", ",", "depth", "\n", "", "def", "colorEnhance", "(", "image", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.data.colorEnhance": [[35, 45], ["PIL.ImageEnhance.Brightness().enhance", "PIL.ImageEnhance.Contrast().enhance", "PIL.ImageEnhance.Color().enhance", "PIL.ImageEnhance.Sharpness().enhance", "random.randint", "random.randint", "random.randint", "random.randint", "PIL.ImageEnhance.Brightness", "PIL.ImageEnhance.Contrast", "PIL.ImageEnhance.Color", "PIL.ImageEnhance.Sharpness"], "function", ["None"], ["", "def", "colorEnhance", "(", "image", ")", ":", "\n", "    ", "bright_intensity", "=", "random", ".", "randint", "(", "5", ",", "15", ")", "/", "10.0", "\n", "image", "=", "ImageEnhance", ".", "Brightness", "(", "image", ")", ".", "enhance", "(", "bright_intensity", ")", "\n", "contrast_intensity", "=", "random", ".", "randint", "(", "5", ",", "15", ")", "/", "10.0", "\n", "image", "=", "ImageEnhance", ".", "Contrast", "(", "image", ")", ".", "enhance", "(", "contrast_intensity", ")", "\n", "color_intensity", "=", "random", ".", "randint", "(", "0", ",", "20", ")", "/", "10.0", "\n", "image", "=", "ImageEnhance", ".", "Color", "(", "image", ")", ".", "enhance", "(", "color_intensity", ")", "\n", "sharp_intensity", "=", "random", ".", "randint", "(", "0", ",", "30", ")", "/", "10.0", "\n", "image", "=", "ImageEnhance", ".", "Sharpness", "(", "image", ")", ".", "enhance", "(", "sharp_intensity", ")", "\n", "return", "image", "\n", "", "def", "randomGaussian", "(", "image", ",", "mean", "=", "0.1", ",", "sigma", "=", "0.35", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.data.randomGaussian": [[45, 55], ["numpy.asarray", "data.randomGaussian.gaussianNoisy"], "function", ["None"], ["", "def", "randomGaussian", "(", "image", ",", "mean", "=", "0.1", ",", "sigma", "=", "0.35", ")", ":", "\n", "    ", "def", "gaussianNoisy", "(", "im", ",", "mean", "=", "mean", ",", "sigma", "=", "sigma", ")", ":", "\n", "        ", "for", "_i", "in", "range", "(", "len", "(", "im", ")", ")", ":", "\n", "            ", "im", "[", "_i", "]", "+=", "random", ".", "gauss", "(", "mean", ",", "sigma", ")", "\n", "", "return", "im", "\n", "", "img", "=", "np", ".", "asarray", "(", "image", ")", "\n", "width", ",", "height", "=", "img", ".", "shape", "\n", "img", "=", "gaussianNoisy", "(", "img", "[", ":", "]", ".", "flatten", "(", ")", ",", "mean", ",", "sigma", ")", "\n", "img", "=", "img", ".", "reshape", "(", "[", "width", ",", "height", "]", ")", "\n", "return", "Image", ".", "fromarray", "(", "np", ".", "uint8", "(", "img", ")", ")", "\n", "", "def", "randomPeper", "(", "img", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.data.randomPeper": [[55, 73], ["numpy.array", "int", "range", "PIL.Image.fromarray", "random.randint", "random.randint", "random.randint"], "function", ["None"], ["", "def", "randomPeper", "(", "img", ")", ":", "\n", "\n", "    ", "img", "=", "np", ".", "array", "(", "img", ")", "\n", "noiseNum", "=", "int", "(", "0.0015", "*", "img", ".", "shape", "[", "0", "]", "*", "img", ".", "shape", "[", "1", "]", ")", "\n", "for", "i", "in", "range", "(", "noiseNum", ")", ":", "\n", "\n", "        ", "randX", "=", "random", ".", "randint", "(", "0", ",", "img", ".", "shape", "[", "0", "]", "-", "1", ")", "\n", "\n", "randY", "=", "random", ".", "randint", "(", "0", ",", "img", ".", "shape", "[", "1", "]", "-", "1", ")", "\n", "\n", "if", "random", ".", "randint", "(", "0", ",", "1", ")", "==", "0", ":", "\n", "\n", "            ", "img", "[", "randX", ",", "randY", "]", "=", "0", "\n", "\n", "", "else", ":", "\n", "\n", "            ", "img", "[", "randX", ",", "randY", "]", "=", "255", "\n", "", "", "return", "Image", ".", "fromarray", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.None.data.get_loader": [[155, 164], ["data.SalObjDataset", "torch.DataLoader"], "function", ["None"], ["", "", "def", "get_loader", "(", "image_root", ",", "gt_root", ",", "depth_root", ",", "batchsize", ",", "trainsize", ",", "shuffle", "=", "True", ",", "num_workers", "=", "12", ",", "pin_memory", "=", "True", ")", ":", "\n", "\n", "    ", "dataset", "=", "SalObjDataset", "(", "image_root", ",", "gt_root", ",", "depth_root", ",", "trainsize", ")", "\n", "data_loader", "=", "data", ".", "DataLoader", "(", "dataset", "=", "dataset", ",", "\n", "batch_size", "=", "batchsize", ",", "\n", "shuffle", "=", "shuffle", ",", "\n", "num_workers", "=", "num_workers", ",", "\n", "pin_memory", "=", "pin_memory", ")", "\n", "return", "data_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.utils.logger._ColorfulFormatter.__init__": [[10, 16], ["kwargs.pop", "len", "logging.Formatter.__init__", "kwargs.pop"], "methods", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.RD3D.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "_root_name", "=", "kwargs", ".", "pop", "(", "\"root_name\"", ")", "+", "\".\"", "\n", "self", ".", "_abbrev_name", "=", "kwargs", ".", "pop", "(", "\"abbrev_name\"", ",", "\"\"", ")", "\n", "if", "len", "(", "self", ".", "_abbrev_name", ")", ":", "\n", "            ", "self", ".", "_abbrev_name", "=", "self", ".", "_abbrev_name", "+", "\".\"", "\n", "", "super", "(", "_ColorfulFormatter", ",", "self", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.utils.logger._ColorfulFormatter.formatMessage": [[17, 27], ["record.name.replace", "super().formatMessage", "termcolor.colored", "termcolor.colored"], "methods", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.utils.logger._ColorfulFormatter.formatMessage"], ["", "def", "formatMessage", "(", "self", ",", "record", ")", ":", "\n", "        ", "record", ".", "name", "=", "record", ".", "name", ".", "replace", "(", "self", ".", "_root_name", ",", "self", ".", "_abbrev_name", ")", "\n", "log", "=", "super", "(", "_ColorfulFormatter", ",", "self", ")", ".", "formatMessage", "(", "record", ")", "\n", "if", "record", ".", "levelno", "==", "logging", ".", "WARNING", ":", "\n", "            ", "prefix", "=", "colored", "(", "\"WARNING\"", ",", "\"red\"", ",", "attrs", "=", "[", "\"blink\"", "]", ")", "\n", "", "elif", "record", ".", "levelno", "==", "logging", ".", "ERROR", "or", "record", ".", "levelno", "==", "logging", ".", "CRITICAL", ":", "\n", "            ", "prefix", "=", "colored", "(", "\"ERROR\"", ",", "\"red\"", ",", "attrs", "=", "[", "\"blink\"", ",", "\"underline\"", "]", ")", "\n", "", "else", ":", "\n", "            ", "return", "log", "\n", "", "return", "prefix", "+", "\" \"", "+", "log", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.utils.logger.setup_logger": [[30, 88], ["functools.lru_cache", "logging.getLogger", "logging.getLogger.setLevel", "logging.Formatter", "logging.StreamHandler", "logging.StreamHandler.setLevel", "logging.StreamHandler.setFormatter", "logging.getLogger.addHandler", "os.makedirs", "logging.StreamHandler", "logging.StreamHandler.setLevel", "logging.StreamHandler.setFormatter", "logging.getLogger.addHandler", "logger._ColorfulFormatter", "output.endswith", "output.endswith", "os.path.join", "os.path.dirname", "logger._cached_log_stream", "termcolor.colored", "str"], "function", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.utils.logger._cached_log_stream"], ["", "", "@", "functools", ".", "lru_cache", "(", ")", "\n", "def", "setup_logger", "(", "\n", "output", "=", "None", ",", "distributed_rank", "=", "0", ",", "*", ",", "color", "=", "True", ",", "name", "=", "\"rd3d\"", ",", "abbrev_name", "=", "None", "\n", ")", ":", "\n", "    ", "\"\"\"\n    Initialize the detectron2 logger and set its verbosity level to \"INFO\".\n\n    Args:\n        output (str): a file name or a directory to save log. If None, will not save log file.\n            If ends with \".txt\" or \".log\", assumed to be a file name.\n            Otherwise, logs will be saved to `output/log.txt`.\n        name (str): the root module name of this logger\n\n    Returns:\n        logging.Logger: a logger\n    \"\"\"", "\n", "logger", "=", "logging", ".", "getLogger", "(", "name", ")", "\n", "logger", ".", "setLevel", "(", "logging", ".", "DEBUG", ")", "\n", "logger", ".", "propagate", "=", "False", "\n", "\n", "if", "abbrev_name", "is", "None", ":", "\n", "        ", "abbrev_name", "=", "name", "\n", "\n", "", "plain_formatter", "=", "logging", ".", "Formatter", "(", "\n", "\"[%(asctime)s] %(name)s %(levelname)s: %(message)s\"", ",", "datefmt", "=", "\"%m/%d %H:%M:%S\"", "\n", ")", "\n", "# stdout logging: master only", "\n", "if", "distributed_rank", "==", "0", ":", "\n", "        ", "ch", "=", "logging", ".", "StreamHandler", "(", "stream", "=", "sys", ".", "stdout", ")", "\n", "ch", ".", "setLevel", "(", "logging", ".", "DEBUG", ")", "\n", "if", "color", ":", "\n", "            ", "formatter", "=", "_ColorfulFormatter", "(", "\n", "colored", "(", "\"[%(asctime)s %(name)s]: \"", ",", "\"green\"", ")", "+", "\"%(message)s\"", ",", "\n", "datefmt", "=", "\"%m/%d %H:%M:%S\"", ",", "\n", "root_name", "=", "name", ",", "\n", "abbrev_name", "=", "str", "(", "abbrev_name", ")", ",", "\n", ")", "\n", "", "else", ":", "\n", "            ", "formatter", "=", "plain_formatter", "\n", "", "ch", ".", "setFormatter", "(", "formatter", ")", "\n", "logger", ".", "addHandler", "(", "ch", ")", "\n", "\n", "# file logging: all workers", "\n", "", "if", "output", "is", "not", "None", ":", "\n", "        ", "if", "output", ".", "endswith", "(", "\".txt\"", ")", "or", "output", ".", "endswith", "(", "\".log\"", ")", ":", "\n", "            ", "filename", "=", "output", "\n", "", "else", ":", "\n", "            ", "filename", "=", "os", ".", "path", ".", "join", "(", "output", ",", "\"log.txt\"", ")", "\n", "", "if", "distributed_rank", ">", "0", ":", "\n", "            ", "filename", "=", "filename", "+", "f\".rank{distributed_rank}\"", "\n", "", "os", ".", "makedirs", "(", "os", ".", "path", ".", "dirname", "(", "filename", ")", ",", "exist_ok", "=", "True", ")", "\n", "\n", "fh", "=", "logging", ".", "StreamHandler", "(", "_cached_log_stream", "(", "filename", ")", ")", "\n", "fh", ".", "setLevel", "(", "logging", ".", "DEBUG", ")", "\n", "fh", ".", "setFormatter", "(", "plain_formatter", ")", "\n", "logger", ".", "addHandler", "(", "fh", ")", "\n", "\n", "", "return", "logger", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.utils.logger._cached_log_stream": [[92, 95], ["functools.lru_cache", "open"], "function", ["None"], ["", "@", "functools", ".", "lru_cache", "(", "maxsize", "=", "None", ")", "\n", "def", "_cached_log_stream", "(", "filename", ")", ":", "\n", "    ", "return", "open", "(", "filename", ",", "\"a\"", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.utils.func.AvgMeter.__init__": [[12, 15], ["func.AvgMeter.reset"], "methods", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.utils.func.AvgMeter.reset"], ["    ", "def", "__init__", "(", "self", ",", "num", "=", "40", ")", ":", "\n", "        ", "self", ".", "num", "=", "num", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.utils.func.AvgMeter.reset": [[16, 22], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "self", ".", "losses", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.utils.func.AvgMeter.update": [[23, 29], ["func.AvgMeter.losses.append", "val.item"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "self", ".", "losses", ".", "append", "(", "val", ".", "item", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.utils.func.AvgMeter.show": [[30, 32], ["numpy.mean", "numpy.maximum", "len"], "methods", ["None"], ["", "def", "show", "(", "self", ")", ":", "\n", "        ", "return", "np", ".", "mean", "(", "self", ".", "losses", "[", "np", ".", "maximum", "(", "len", "(", "self", ".", "losses", ")", "-", "self", ".", "num", ",", "0", ")", ":", "]", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.utils.func.clip_gradient": [[4, 9], ["param.grad.data.clamp_"], "function", ["None"], ["def", "clip_gradient", "(", "optimizer", ",", "grad_clip", ")", ":", "\n", "    ", "for", "group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "for", "param", "in", "group", "[", "'params'", "]", ":", "\n", "            ", "if", "param", ".", "grad", "is", "not", "None", ":", "\n", "                ", "param", ".", "grad", ".", "data", ".", "clamp_", "(", "-", "grad_clip", ",", "grad_clip", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.utils.lr_scheduler.GradualWarmupScheduler.__init__": [[16, 24], ["torch.optim.lr_scheduler._LRScheduler.__init__", "ValueError"], "methods", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.RD3D.__init__"], ["def", "__init__", "(", "self", ",", "optimizer", ",", "multiplier", ",", "warmup_epoch", ",", "after_scheduler", ",", "last_epoch", "=", "-", "1", ")", ":", "\n", "        ", "self", ".", "multiplier", "=", "multiplier", "\n", "if", "self", ".", "multiplier", "<=", "1.", ":", "\n", "            ", "raise", "ValueError", "(", "'multiplier should be greater than 1.'", ")", "\n", "", "self", ".", "warmup_epoch", "=", "warmup_epoch", "\n", "self", ".", "after_scheduler", "=", "after_scheduler", "\n", "self", ".", "finished", "=", "False", "\n", "super", "(", ")", ".", "__init__", "(", "optimizer", ",", "last_epoch", "=", "last_epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.utils.lr_scheduler.GradualWarmupScheduler.get_lr": [[25, 31], ["lr_scheduler.GradualWarmupScheduler.after_scheduler.get_lr"], "methods", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.utils.lr_scheduler.GradualWarmupScheduler.get_lr"], ["", "def", "get_lr", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "last_epoch", ">", "self", ".", "warmup_epoch", ":", "\n", "            ", "return", "self", ".", "after_scheduler", ".", "get_lr", "(", ")", "\n", "", "else", ":", "\n", "            ", "return", "[", "base_lr", "/", "self", ".", "multiplier", "*", "(", "(", "self", ".", "multiplier", "-", "1.", ")", "*", "self", ".", "last_epoch", "/", "self", ".", "warmup_epoch", "+", "1.", ")", "\n", "for", "base_lr", "in", "self", ".", "base_lrs", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.utils.lr_scheduler.GradualWarmupScheduler.step": [[32, 40], ["lr_scheduler.GradualWarmupScheduler.after_scheduler.step", "super().step"], "methods", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.utils.lr_scheduler.GradualWarmupScheduler.step", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.utils.lr_scheduler.GradualWarmupScheduler.step"], ["", "", "def", "step", "(", "self", ",", "epoch", "=", "None", ")", ":", "\n", "        ", "if", "epoch", "is", "None", ":", "\n", "            ", "epoch", "=", "self", ".", "last_epoch", "+", "1", "\n", "", "self", ".", "last_epoch", "=", "epoch", "\n", "if", "epoch", ">", "self", ".", "warmup_epoch", ":", "\n", "            ", "self", ".", "after_scheduler", ".", "step", "(", "epoch", "-", "self", ".", "warmup_epoch", ")", "\n", "", "else", ":", "\n", "            ", "super", "(", "GradualWarmupScheduler", ",", "self", ")", ".", "step", "(", "epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.utils.lr_scheduler.GradualWarmupScheduler.state_dict": [[41, 51], ["lr_scheduler.GradualWarmupScheduler.after_scheduler.state_dict", "lr_scheduler.GradualWarmupScheduler.__dict__.items"], "methods", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.utils.lr_scheduler.GradualWarmupScheduler.state_dict"], ["", "", "def", "state_dict", "(", "self", ")", ":", "\n", "        ", "\"\"\"Returns the state of the scheduler as a :class:`dict`.\n\n        It contains an entry for every variable in self.__dict__ which\n        is not the optimizer.\n        \"\"\"", "\n", "\n", "state", "=", "{", "key", ":", "value", "for", "key", ",", "value", "in", "self", ".", "__dict__", ".", "items", "(", ")", "if", "key", "!=", "'optimizer'", "and", "key", "!=", "'after_scheduler'", "}", "\n", "state", "[", "'after_scheduler'", "]", "=", "self", ".", "after_scheduler", ".", "state_dict", "(", ")", "\n", "return", "state", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.utils.lr_scheduler.GradualWarmupScheduler.load_state_dict": [[52, 63], ["state_dict.pop", "lr_scheduler.GradualWarmupScheduler.__dict__.update", "lr_scheduler.GradualWarmupScheduler.after_scheduler.load_state_dict"], "methods", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.utils.func.AvgMeter.update", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.utils.lr_scheduler.GradualWarmupScheduler.load_state_dict"], ["", "def", "load_state_dict", "(", "self", ",", "state_dict", ")", ":", "\n", "        ", "\"\"\"Loads the schedulers state.\n\n        Arguments:\n            state_dict (dict): scheduler state. Should be an object returned\n                from a call to :meth:`state_dict`.\n        \"\"\"", "\n", "\n", "after_scheduler_state", "=", "state_dict", ".", "pop", "(", "'after_scheduler'", ")", "\n", "self", ".", "__dict__", ".", "update", "(", "state_dict", ")", "\n", "self", ".", "after_scheduler", ".", "load_state_dict", "(", "after_scheduler_state", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.utils.lr_scheduler.get_scheduler": [[65, 90], ["torch.optim.lr_scheduler.CosineAnnealingLR", "lr_scheduler.GradualWarmupScheduler", "torch.optim.lr_scheduler.MultiStepLR", "NotImplementedError", "len", "range"], "function", ["None"], ["", "", "def", "get_scheduler", "(", "optimizer", ",", "n_iter_per_epoch", ",", "args", ")", ":", "\n", "    ", "if", "\"cosine\"", "in", "args", ".", "lr_scheduler", ":", "\n", "        ", "scheduler", "=", "CosineAnnealingLR", "(", "\n", "optimizer", "=", "optimizer", ",", "\n", "eta_min", "=", "0.000001", ",", "\n", "T_max", "=", "(", "args", ".", "epochs", "-", "args", ".", "warmup_epoch", ")", "*", "n_iter_per_epoch", ")", "\n", "", "elif", "\"step\"", "in", "args", ".", "lr_scheduler", ":", "\n", "        ", "if", "len", "(", "args", ".", "lr_decay_epochs", ")", ">", "0", ":", "\n", "            ", "lr_decay_epochs", "=", "args", ".", "lr_decay_epochs", "\n", "", "else", ":", "\n", "            ", "lr_decay_epochs", "=", "[", "args", ".", "lr_decay_steps", "*", "i", "for", "i", "in", "range", "(", "1", ",", "args", ".", "epochs", "//", "args", ".", "lr_decay_steps", ")", "]", "\n", "", "scheduler", "=", "MultiStepLR", "(", "\n", "optimizer", "=", "optimizer", ",", "\n", "gamma", "=", "args", ".", "lr_decay_rate", ",", "\n", "milestones", "=", "[", "(", "m", "-", "args", ".", "warmup_epoch", ")", "*", "n_iter_per_epoch", "for", "m", "in", "lr_decay_epochs", "]", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "(", "f\"scheduler {args.lr_scheduler} not supported\"", ")", "\n", "\n", "", "if", "args", ".", "warmup_epoch", ">", "0", ":", "\n", "        ", "scheduler", "=", "GradualWarmupScheduler", "(", "\n", "optimizer", ",", "\n", "multiplier", "=", "args", ".", "warmup_multiplier", ",", "\n", "after_scheduler", "=", "scheduler", ",", "\n", "warmup_epoch", "=", "args", ".", "warmup_epoch", "*", "n_iter_per_epoch", ")", "\n", "", "return", "scheduler", "\n", "", ""]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.resnet3d.I3DResNet.__init__": [[6, 24], ["super().__init__", "model.inflate.inflate_conv", "model.inflate.inflate_batch_norm", "torch.nn.ReLU", "model.inflate.inflate_pool", "resnet3d.inflate_reslayer", "resnet3d.inflate_reslayer", "resnet3d.inflate_reslayer", "resnet3d.inflate_reslayer"], "methods", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.RD3D.__init__", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.inflate.inflate_conv", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.inflate.inflate_batch_norm", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.inflate.inflate_pool", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.resnet3d.inflate_reslayer", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.resnet3d.inflate_reslayer", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.resnet3d.inflate_reslayer", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.resnet3d.inflate_reslayer"], ["    ", "def", "__init__", "(", "self", ",", "resnet2d", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            conv_class: Whether to use convolutional layer as classifier to\n                adapt to various number of frames\n        \"\"\"", "\n", "super", "(", "I3DResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "inflate", ".", "inflate_conv", "(", "\n", "resnet2d", ".", "conv1", ",", "time_dim", "=", "3", ",", "time_padding", "=", "1", ",", "center", "=", "True", ")", "\n", "self", ".", "bn1", "=", "inflate", ".", "inflate_batch_norm", "(", "resnet2d", ".", "bn1", ")", "\n", "self", ".", "relu", "=", "torch", ".", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "inflate", ".", "inflate_pool", "(", "\n", "resnet2d", ".", "maxpool", ",", "time_dim", "=", "1", ",", "time_padding", "=", "0", ",", "time_stride", "=", "1", ")", "\n", "\n", "self", ".", "layer1", "=", "inflate_reslayer", "(", "resnet2d", ".", "layer1", ")", "\n", "self", ".", "layer2", "=", "inflate_reslayer", "(", "resnet2d", ".", "layer2", ")", "\n", "self", ".", "layer3", "=", "inflate_reslayer", "(", "resnet2d", ".", "layer3", ")", "\n", "self", ".", "layer4", "=", "inflate_reslayer", "(", "resnet2d", ".", "layer4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.resnet3d.I3DResNet.forward": [[25, 38], ["resnet3d.I3DResNet.conv1", "resnet3d.I3DResNet.bn1", "resnet3d.I3DResNet.relu", "resnet3d.I3DResNet.maxpool", "resnet3d.I3DResNet.layer1", "resnet3d.I3DResNet.layer2", "resnet3d.I3DResNet.layer3", "resnet3d.I3DResNet.layer4"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "\n", "return", "x", "\n", "", "", "class", "I3DResNet_light", "(", "torch", ".", "nn", ".", "Module", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.resnet3d.I3DResNet_light.__init__": [[39, 57], ["super().__init__", "model.inflate.inflate_conv_light", "model.inflate.inflate_batch_norm", "torch.nn.ReLU", "model.inflate.inflate_pool", "resnet3d.inflate_reslayer_light", "resnet3d.inflate_reslayer_light", "resnet3d.inflate_reslayer_light", "resnet3d.inflate_reslayer_light"], "methods", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.RD3D.__init__", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.inflate.inflate_batch_norm", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.inflate.inflate_pool", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.resnet3d.inflate_reslayer_light", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.resnet3d.inflate_reslayer_light", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.resnet3d.inflate_reslayer_light", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.resnet3d.inflate_reslayer_light"], ["    ", "def", "__init__", "(", "self", ",", "resnet2d", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            conv_class: Whether to use convolutional layer as classifier to\n                adapt to various number of frames\n        \"\"\"", "\n", "super", "(", "I3DResNet_light", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "inflate", ".", "inflate_conv_light", "(", "\n", "resnet2d", ".", "conv1", ",", "time_dim", "=", "3", ",", "time_padding", "=", "1", ",", "center", "=", "True", ")", "\n", "self", ".", "bn1", "=", "inflate", ".", "inflate_batch_norm", "(", "resnet2d", ".", "bn1", ")", "\n", "self", ".", "relu", "=", "torch", ".", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "inflate", ".", "inflate_pool", "(", "\n", "resnet2d", ".", "maxpool", ",", "time_dim", "=", "1", ",", "time_padding", "=", "0", ",", "time_stride", "=", "1", ")", "\n", "\n", "self", ".", "layer1", "=", "inflate_reslayer_light", "(", "resnet2d", ".", "layer1", ")", "\n", "self", ".", "layer2", "=", "inflate_reslayer_light", "(", "resnet2d", ".", "layer2", ")", "\n", "self", ".", "layer3", "=", "inflate_reslayer_light", "(", "resnet2d", ".", "layer3", ")", "\n", "self", ".", "layer4", "=", "inflate_reslayer_light", "(", "resnet2d", ".", "layer4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.resnet3d.I3DResNet_light.forward": [[58, 71], ["resnet3d.I3DResNet_light.conv1", "resnet3d.I3DResNet_light.bn1", "resnet3d.I3DResNet_light.relu", "resnet3d.I3DResNet_light.maxpool", "resnet3d.I3DResNet_light.layer1", "resnet3d.I3DResNet_light.layer2", "resnet3d.I3DResNet_light.layer3", "resnet3d.I3DResNet_light.layer4"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.resnet3d.Bottleneck3d.__init__": [[89, 117], ["super().__init__", "model.inflate.inflate_conv", "model.inflate.inflate_batch_norm", "model.inflate.inflate_conv", "model.inflate.inflate_batch_norm", "model.inflate.inflate_conv", "model.inflate.inflate_batch_norm", "torch.nn.ReLU", "resnet3d.inflate_downsample"], "methods", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.RD3D.__init__", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.inflate.inflate_conv", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.inflate.inflate_batch_norm", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.inflate.inflate_conv", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.inflate.inflate_batch_norm", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.inflate.inflate_conv", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.inflate.inflate_batch_norm", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.resnet3d.inflate_downsample"], ["    ", "def", "__init__", "(", "self", ",", "bottleneck2d", ")", ":", "\n", "        ", "super", "(", "Bottleneck3d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "inflate", ".", "inflate_conv", "(", "\n", "bottleneck2d", ".", "conv1", ",", "time_dim", "=", "1", ",", "center", "=", "True", ")", "\n", "self", ".", "bn1", "=", "inflate", ".", "inflate_batch_norm", "(", "bottleneck2d", ".", "bn1", ")", "\n", "\n", "self", ".", "conv2", "=", "inflate", ".", "inflate_conv", "(", "\n", "bottleneck2d", ".", "conv2", ",", "\n", "time_dim", "=", "3", ",", "\n", "time_padding", "=", "1", ",", "\n", "time_stride", "=", "1", ",", "\n", "center", "=", "True", ")", "\n", "self", ".", "bn2", "=", "inflate", ".", "inflate_batch_norm", "(", "bottleneck2d", ".", "bn2", ")", "\n", "\n", "self", ".", "conv3", "=", "inflate", ".", "inflate_conv", "(", "\n", "bottleneck2d", ".", "conv3", ",", "time_dim", "=", "1", ",", "center", "=", "True", ")", "\n", "self", ".", "bn3", "=", "inflate", ".", "inflate_batch_norm", "(", "bottleneck2d", ".", "bn3", ")", "\n", "\n", "self", ".", "relu", "=", "torch", ".", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "if", "bottleneck2d", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "self", ".", "downsample", "=", "inflate_downsample", "(", "\n", "bottleneck2d", ".", "downsample", ",", "time_stride", "=", "1", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "downsample", "=", "None", "\n", "\n", "", "self", ".", "stride", "=", "bottleneck2d", ".", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.resnet3d.Bottleneck3d.forward": [[118, 137], ["resnet3d.Bottleneck3d.conv1", "resnet3d.Bottleneck3d.bn1", "resnet3d.Bottleneck3d.relu", "resnet3d.Bottleneck3d.conv2", "resnet3d.Bottleneck3d.bn2", "resnet3d.Bottleneck3d.relu", "resnet3d.Bottleneck3d.conv3", "resnet3d.Bottleneck3d.bn3", "resnet3d.Bottleneck3d.relu", "resnet3d.Bottleneck3d.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "", "", "class", "Bottleneck3d_light", "(", "torch", ".", "nn", ".", "Module", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.resnet3d.Bottleneck3d_light.__init__": [[138, 166], ["super().__init__", "model.inflate.inflate_conv_light", "model.inflate.inflate_batch_norm", "model.inflate.inflate_conv_light", "model.inflate.inflate_batch_norm", "model.inflate.inflate_conv_light", "model.inflate.inflate_batch_norm", "torch.nn.ReLU", "resnet3d.inflate_downsample"], "methods", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.RD3D.__init__", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.inflate.inflate_batch_norm", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.inflate.inflate_batch_norm", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.inflate.inflate_batch_norm", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.resnet3d.inflate_downsample"], ["    ", "def", "__init__", "(", "self", ",", "bottleneck2d", ")", ":", "\n", "        ", "super", "(", "Bottleneck3d_light", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "inflate", ".", "inflate_conv_light", "(", "\n", "bottleneck2d", ".", "conv1", ",", "time_dim", "=", "1", ",", "center", "=", "True", ")", "\n", "self", ".", "bn1", "=", "inflate", ".", "inflate_batch_norm", "(", "bottleneck2d", ".", "bn1", ")", "\n", "\n", "self", ".", "conv2", "=", "inflate", ".", "inflate_conv_light", "(", "\n", "bottleneck2d", ".", "conv2", ",", "\n", "time_dim", "=", "3", ",", "\n", "time_padding", "=", "1", ",", "\n", "time_stride", "=", "1", ",", "\n", "center", "=", "True", ")", "\n", "self", ".", "bn2", "=", "inflate", ".", "inflate_batch_norm", "(", "bottleneck2d", ".", "bn2", ")", "\n", "\n", "self", ".", "conv3", "=", "inflate", ".", "inflate_conv_light", "(", "\n", "bottleneck2d", ".", "conv3", ",", "time_dim", "=", "1", ",", "center", "=", "True", ")", "\n", "self", ".", "bn3", "=", "inflate", ".", "inflate_batch_norm", "(", "bottleneck2d", ".", "bn3", ")", "\n", "\n", "self", ".", "relu", "=", "torch", ".", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "if", "bottleneck2d", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "self", ".", "downsample", "=", "inflate_downsample", "(", "\n", "bottleneck2d", ".", "downsample", ",", "time_stride", "=", "1", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "downsample", "=", "None", "\n", "\n", "", "self", ".", "stride", "=", "bottleneck2d", ".", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.resnet3d.Bottleneck3d_light.forward": [[167, 186], ["resnet3d.Bottleneck3d_light.conv1", "resnet3d.Bottleneck3d_light.bn1", "resnet3d.Bottleneck3d_light.relu", "resnet3d.Bottleneck3d_light.conv2", "resnet3d.Bottleneck3d_light.bn2", "resnet3d.Bottleneck3d_light.relu", "resnet3d.Bottleneck3d_light.conv3", "resnet3d.Bottleneck3d_light.bn3", "resnet3d.Bottleneck3d_light.relu", "resnet3d.Bottleneck3d_light.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.resnet3d.inflate_reslayer": [[73, 79], ["torch.nn.Sequential", "resnet3d.Bottleneck3d", "reslayers3d.append"], "function", ["None"], ["", "", "def", "inflate_reslayer", "(", "reslayer2d", ")", ":", "\n", "    ", "reslayers3d", "=", "[", "]", "\n", "for", "layer2d", "in", "reslayer2d", ":", "\n", "        ", "layer3d", "=", "Bottleneck3d", "(", "layer2d", ")", "\n", "reslayers3d", ".", "append", "(", "layer3d", ")", "\n", "", "return", "torch", ".", "nn", ".", "Sequential", "(", "*", "reslayers3d", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.resnet3d.inflate_reslayer_light": [[80, 86], ["torch.nn.Sequential", "resnet3d.Bottleneck3d_light", "reslayers3d.append"], "function", ["None"], ["", "def", "inflate_reslayer_light", "(", "reslayer2d", ")", ":", "\n", "    ", "reslayers3d", "=", "[", "]", "\n", "for", "layer2d", "in", "reslayer2d", ":", "\n", "        ", "layer3d", "=", "Bottleneck3d_light", "(", "layer2d", ")", "\n", "reslayers3d", ".", "append", "(", "layer3d", ")", "\n", "", "return", "torch", ".", "nn", ".", "Sequential", "(", "*", "reslayers3d", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.resnet3d.inflate_downsample": [[187, 193], ["torch.nn.Sequential", "model.inflate.inflate_conv", "model.inflate.inflate_batch_norm"], "function", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.inflate.inflate_conv", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.inflate.inflate_batch_norm"], ["", "", "def", "inflate_downsample", "(", "downsample2d", ",", "time_stride", "=", "1", ")", ":", "\n", "    ", "downsample3d", "=", "torch", ".", "nn", ".", "Sequential", "(", "\n", "inflate", ".", "inflate_conv", "(", "\n", "downsample2d", "[", "0", "]", ",", "time_dim", "=", "1", ",", "time_stride", "=", "time_stride", ",", "center", "=", "True", ")", ",", "\n", "inflate", ".", "inflate_batch_norm", "(", "downsample2d", "[", "1", "]", ")", ")", "\n", "return", "downsample3d", "\n", "", ""]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.inflate.inflate_conv_light.__init__": [[42, 81], ["torch.Module.__init__", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "weight_2d.unsqueeze", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Parameter", "torch.nn.Parameter", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.eye_", "torch.nn.init.eye_", "torch.nn.init.eye_", "torch.nn.init.eye_", "weight_2d.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.RD3D.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv2d", ",", "time_dim", "=", "3", ",", "time_padding", "=", "0", ",", "time_stride", "=", "1", ",", "time_dilation", "=", "1", ",", "center", "=", "False", ")", ":", "\n", "        ", "super", "(", "inflate_conv_light", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "time_dim", "=", "time_dim", "\n", "kernel_dim", "=", "(", "time_dim", ",", "conv2d", ".", "kernel_size", "[", "0", "]", ",", "conv2d", ".", "kernel_size", "[", "1", "]", ")", "\n", "padding", "=", "(", "time_padding", ",", "conv2d", ".", "padding", "[", "0", "]", ",", "conv2d", ".", "padding", "[", "1", "]", ")", "\n", "stride", "=", "(", "time_stride", ",", "conv2d", ".", "stride", "[", "0", "]", ",", "conv2d", ".", "stride", "[", "0", "]", ")", "\n", "dilation", "=", "(", "time_dilation", ",", "conv2d", ".", "dilation", "[", "0", "]", ",", "conv2d", ".", "dilation", "[", "1", "]", ")", "\n", "if", "time_dim", "==", "1", ":", "\n", "            ", "self", ".", "conv3d", "=", "torch", ".", "nn", ".", "Conv3d", "(", "\n", "conv2d", ".", "in_channels", ",", "\n", "conv2d", ".", "out_channels", ",", "\n", "kernel_dim", ",", "\n", "padding", "=", "padding", ",", "\n", "dilation", "=", "dilation", ",", "\n", "stride", "=", "stride", ")", "\n", "# Repeat filter time_dim times along time dimension", "\n", "weight_2d", "=", "conv2d", ".", "weight", ".", "data", "\n", "weight_3d", "=", "weight_2d", ".", "unsqueeze", "(", "2", ")", "\n", "# Assign new params", "\n", "self", ".", "conv3d", ".", "weight", "=", "Parameter", "(", "weight_3d", ")", "\n", "self", ".", "conv3d", ".", "bias", "=", "conv2d", ".", "bias", "\n", "", "else", ":", "\n", "            ", "self", ".", "conv3d_spatial", "=", "torch", ".", "nn", ".", "Conv3d", "(", "\n", "conv2d", ".", "in_channels", ",", "\n", "conv2d", ".", "out_channels", ",", "\n", "kernel_size", "=", "(", "1", ",", "kernel_dim", "[", "1", "]", ",", "kernel_dim", "[", "2", "]", ")", ",", "\n", "padding", "=", "(", "0", ",", "padding", "[", "1", "]", ",", "padding", "[", "2", "]", ")", ",", "\n", "dilation", "=", "(", "1", ",", "dilation", "[", "1", "]", ",", "dilation", "[", "2", "]", ")", ",", "\n", "stride", "=", "(", "1", ",", "stride", "[", "1", "]", ",", "stride", "[", "2", "]", ")", "\n", ")", "\n", "weight_2d", "=", "conv2d", ".", "weight", ".", "data", "\n", "self", ".", "conv3d_spatial", ".", "weight", "=", "Parameter", "(", "weight_2d", ".", "unsqueeze", "(", "2", ")", ")", "\n", "self", ".", "conv3d_spatial", ".", "bias", "=", "conv2d", ".", "bias", "\n", "self", ".", "conv3d_time_1", "=", "nn", ".", "Conv3d", "(", "conv2d", ".", "out_channels", ",", "conv2d", ".", "out_channels", ",", "[", "1", ",", "1", ",", "1", "]", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv3d_time_2", "=", "nn", ".", "Conv3d", "(", "conv2d", ".", "out_channels", ",", "conv2d", ".", "out_channels", ",", "[", "1", ",", "1", ",", "1", "]", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv3d_time_3", "=", "nn", ".", "Conv3d", "(", "conv2d", ".", "out_channels", ",", "conv2d", ".", "out_channels", ",", "[", "1", ",", "1", ",", "1", "]", ",", "bias", "=", "False", ")", "\n", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv3d_time_1", ".", "weight", ",", "0", ")", "\n", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv3d_time_3", ".", "weight", ",", "0", ")", "\n", "torch", ".", "nn", ".", "init", ".", "eye_", "(", "self", ".", "conv3d_time_2", ".", "weight", "[", ":", ",", ":", ",", "0", ",", "0", ",", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.inflate.inflate_conv_light.forward": [[82, 96], ["inflate.inflate_conv_light.conv3d", "inflate.inflate_conv_light.conv3d_spatial", "inflate.inflate_conv_light.conv3d_time_2", "inflate.inflate_conv_light.conv3d_time_2", "inflate.inflate_conv_light.conv3d_time_1", "inflate.inflate_conv_light.conv3d_time_3", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "#N,C,T,H,W", "\n", "        ", "if", "self", ".", "time_dim", "==", "1", ":", "\n", "            ", "return", "self", ".", "conv3d", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "x_spatial", "=", "self", ".", "conv3d_spatial", "(", "x", ")", "\n", "rgb", "=", "x_spatial", "[", ":", ",", ":", ",", "0", ":", "1", ",", ":", ",", ":", "]", "\n", "depth", "=", "x_spatial", "[", ":", ",", ":", ",", "1", ":", "2", ",", ":", ",", ":", "]", "\n", "f_rgb", "=", "self", ".", "conv3d_time_2", "(", "rgb", ")", "\n", "f_depth", "=", "self", ".", "conv3d_time_2", "(", "depth", ")", "\n", "f2_rgb", "=", "self", ".", "conv3d_time_1", "(", "rgb", ")", "\n", "f2_depth", "=", "self", ".", "conv3d_time_3", "(", "depth", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "f_rgb", "+", "f2_depth", ",", "f2_rgb", "+", "f_depth", "]", ",", "dim", "=", "2", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.inflate.inflate_conv": [[6, 40], ["torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Parameter", "torch.zeros", "torch.zeros", "weight_2d.unsqueeze().repeat.unsqueeze().repeat", "weight_2d.unsqueeze().repeat", "weight_2d.unsqueeze().repeat.unsqueeze", "weight_2d.unsqueeze"], "function", ["None"], ["def", "inflate_conv", "(", "conv2d", ",", "\n", "time_dim", "=", "3", ",", "\n", "time_padding", "=", "0", ",", "\n", "time_stride", "=", "1", ",", "\n", "time_dilation", "=", "1", ",", "\n", "center", "=", "False", ")", ":", "\n", "# To preserve activations, padding should be by continuity and not zero", "\n", "# or no padding in time dimension", "\n", "    ", "kernel_dim", "=", "(", "time_dim", ",", "conv2d", ".", "kernel_size", "[", "0", "]", ",", "conv2d", ".", "kernel_size", "[", "1", "]", ")", "\n", "padding", "=", "(", "time_padding", ",", "conv2d", ".", "padding", "[", "0", "]", ",", "conv2d", ".", "padding", "[", "1", "]", ")", "\n", "stride", "=", "(", "time_stride", ",", "conv2d", ".", "stride", "[", "0", "]", ",", "conv2d", ".", "stride", "[", "0", "]", ")", "\n", "dilation", "=", "(", "time_dilation", ",", "conv2d", ".", "dilation", "[", "0", "]", ",", "conv2d", ".", "dilation", "[", "1", "]", ")", "\n", "conv3d", "=", "torch", ".", "nn", ".", "Conv3d", "(", "\n", "conv2d", ".", "in_channels", ",", "\n", "conv2d", ".", "out_channels", ",", "\n", "kernel_dim", ",", "\n", "padding", "=", "padding", ",", "\n", "dilation", "=", "dilation", ",", "\n", "stride", "=", "stride", ")", "\n", "# Repeat filter time_dim times along time dimension", "\n", "weight_2d", "=", "conv2d", ".", "weight", ".", "data", "\n", "if", "center", ":", "\n", "        ", "weight_3d", "=", "torch", ".", "zeros", "(", "*", "weight_2d", ".", "shape", ")", "\n", "weight_3d", "=", "weight_3d", ".", "unsqueeze", "(", "2", ")", ".", "repeat", "(", "1", ",", "1", ",", "time_dim", ",", "1", ",", "1", ")", "\n", "middle_idx", "=", "time_dim", "//", "2", "\n", "weight_3d", "[", ":", ",", ":", ",", "middle_idx", ",", ":", ",", ":", "]", "=", "weight_2d", "\n", "", "else", ":", "\n", "        ", "weight_3d", "=", "weight_2d", ".", "unsqueeze", "(", "2", ")", ".", "repeat", "(", "1", ",", "1", ",", "time_dim", ",", "1", ",", "1", ")", "\n", "weight_3d", "=", "weight_3d", "/", "time_dim", "\n", "\n", "# Assign new params", "\n", "", "conv3d", ".", "weight", "=", "Parameter", "(", "weight_3d", ")", "\n", "conv3d", ".", "bias", "=", "conv2d", ".", "bias", "\n", "return", "conv3d", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.inflate.inflate_linear": [[97, 110], ["torch.nn.Linear", "torch.nn.Linear", "linear2d.weight.data.repeat", "torch.nn.Parameter"], "function", ["None"], ["", "", "", "def", "inflate_linear", "(", "linear2d", ",", "time_dim", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        time_dim: final time dimension of the features\n    \"\"\"", "\n", "linear3d", "=", "torch", ".", "nn", ".", "Linear", "(", "linear2d", ".", "in_features", "*", "time_dim", ",", "\n", "linear2d", ".", "out_features", ")", "\n", "weight3d", "=", "linear2d", ".", "weight", ".", "data", ".", "repeat", "(", "1", ",", "time_dim", ")", "\n", "weight3d", "=", "weight3d", "/", "time_dim", "\n", "\n", "linear3d", ".", "weight", "=", "Parameter", "(", "weight3d", ")", "\n", "linear3d", ".", "bias", "=", "linear2d", ".", "bias", "\n", "return", "linear3d", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.inflate.inflate_batch_norm": [[112, 121], ["torch.nn.BatchNorm3d", "torch.nn.BatchNorm3d"], "function", ["None"], ["", "def", "inflate_batch_norm", "(", "batch2d", ")", ":", "\n", "# In pytorch 0.2.0 the 2d and 3d versions of batch norm", "\n", "# work identically except for the check that verifies the", "\n", "# input dimensions", "\n", "\n", "    ", "batch3d", "=", "torch", ".", "nn", ".", "BatchNorm3d", "(", "batch2d", ".", "num_features", ")", "\n", "# retrieve 3d _check_input_dim function", "\n", "batch2d", ".", "_check_input_dim", "=", "batch3d", ".", "_check_input_dim", "\n", "return", "batch2d", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.inflate.inflate_pool": [[123, 150], ["isinstance", "torch.nn.AdaptiveAvgPool3d", "torch.nn.AdaptiveAvgPool3d", "isinstance", "torch.nn.MaxPool3d", "torch.nn.MaxPool3d", "isinstance", "torch.nn.AvgPool3d", "torch.nn.AvgPool3d", "ValueError", "type"], "function", ["None"], ["", "def", "inflate_pool", "(", "pool2d", ",", "\n", "time_dim", "=", "1", ",", "\n", "time_padding", "=", "0", ",", "\n", "time_stride", "=", "None", ",", "\n", "time_dilation", "=", "1", ")", ":", "\n", "    ", "if", "isinstance", "(", "pool2d", ",", "torch", ".", "nn", ".", "AdaptiveAvgPool2d", ")", ":", "\n", "        ", "pool3d", "=", "torch", ".", "nn", ".", "AdaptiveAvgPool3d", "(", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "", "else", ":", "\n", "        ", "kernel_dim", "=", "(", "time_dim", ",", "pool2d", ".", "kernel_size", ",", "pool2d", ".", "kernel_size", ")", "\n", "padding", "=", "(", "time_padding", ",", "pool2d", ".", "padding", ",", "pool2d", ".", "padding", ")", "\n", "if", "time_stride", "is", "None", ":", "\n", "            ", "time_stride", "=", "time_dim", "\n", "", "stride", "=", "(", "time_stride", ",", "pool2d", ".", "stride", ",", "pool2d", ".", "stride", ")", "\n", "if", "isinstance", "(", "pool2d", ",", "torch", ".", "nn", ".", "MaxPool2d", ")", ":", "\n", "            ", "dilation", "=", "(", "time_dilation", ",", "pool2d", ".", "dilation", ",", "pool2d", ".", "dilation", ")", "\n", "pool3d", "=", "torch", ".", "nn", ".", "MaxPool3d", "(", "\n", "kernel_dim", ",", "\n", "padding", "=", "padding", ",", "\n", "dilation", "=", "dilation", ",", "\n", "stride", "=", "stride", ",", "\n", "ceil_mode", "=", "pool2d", ".", "ceil_mode", ")", "\n", "", "elif", "isinstance", "(", "pool2d", ",", "torch", ".", "nn", ".", "AvgPool2d", ")", ":", "\n", "            ", "pool3d", "=", "torch", ".", "nn", ".", "AvgPool3d", "(", "kernel_dim", ",", "stride", "=", "stride", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'{} is not among known pooling classes'", ".", "format", "(", "type", "(", "pool2d", ")", ")", ")", "\n", "\n", "", "", "return", "pool3d", "\n", "", ""]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d_plus.BasicConv2d.__init__": [[9, 16], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.RD3D.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "super", "(", "BasicConv2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv_bn", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "\n", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d_plus.BasicConv2d.forward": [[18, 21], ["rd3d_plus.BasicConv2d.conv_bn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv_bn", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d_plus.BasicConv3d.__init__": [[24, 31], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.RD3D.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "super", "(", "BasicConv3d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv_bn", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "padding", "=", "padding", ",", "\n", "dilation", "=", "dilation", ",", "stride", "=", "stride", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d_plus.BasicConv3d.forward": [[33, 36], ["rd3d_plus.BasicConv3d.conv_bn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv_bn", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d_plus.DeconvBlock.__init__": [[39, 46], ["super().__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.RD3D.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "DeconvBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "deconv_bn", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ConvTranspose3d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ",", "output_padding", "=", "[", "0", ",", "1", ",", "1", "]", ",", "\n", "dilation", "=", "dilation", ",", "stride", "=", "stride", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d_plus.DeconvBlock.forward": [[48, 51], ["rd3d_plus.DeconvBlock.deconv_bn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "deconv_bn", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d_plus.Reduction3D.__init__": [[54, 60], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "rd3d_plus.BasicConv3d", "rd3d_plus.BasicConv3d", "rd3d_plus.BasicConv3d"], "methods", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.RD3D.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "out_channel", ")", ":", "\n", "        ", "super", "(", "Reduction3D", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "reduce", "=", "nn", ".", "Sequential", "(", "\n", "BasicConv3d", "(", "in_channel", ",", "out_channel", ",", "kernel_size", "=", "[", "1", ",", "1", ",", "1", "]", ")", ",", "\n", "BasicConv3d", "(", "out_channel", ",", "out_channel", ",", "kernel_size", "=", "[", "3", ",", "3", ",", "3", "]", ",", "padding", "=", "1", ")", ",", "\n", "BasicConv3d", "(", "out_channel", ",", "out_channel", ",", "kernel_size", "=", "[", "3", ",", "3", ",", "3", "]", ",", "padding", "=", "1", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d_plus.Reduction3D.forward": [[62, 64], ["rd3d_plus.Reduction3D.reduce"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "reduce", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d_plus.CMA_variant.__init__": [[67, 78], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "max", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.RD3D.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inp", ",", "oup", ",", "reduction", "=", "1", ")", ":", "\n", "        ", "super", "(", "CMA_variant", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pool_h", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "None", ",", "1", ")", ")", "\n", "self", ".", "pool_w", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "None", ")", ")", "\n", "\n", "mip", "=", "max", "(", "8", ",", "inp", "//", "reduction", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inp", ",", "mip", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "mip", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "mip", ",", "oup", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "mip", ",", "oup", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d_plus.CMA_variant.forward": [[79, 98], ["x.size", "rd3d_plus.CMA_variant.pool_h", "rd3d_plus.CMA_variant.pool_w().permute", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "rd3d_plus.CMA_variant.conv1", "rd3d_plus.CMA_variant.bn1", "rd3d_plus.CMA_variant.relu", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "x_w.expand.expand.permute", "rd3d_plus.CMA_variant.conv2().sigmoid", "rd3d_plus.CMA_variant.conv3().sigmoid", "x_h.expand.expand.expand", "x_w.expand.expand.expand", "rd3d_plus.CMA_variant.pool_w", "rd3d_plus.CMA_variant.conv2", "rd3d_plus.CMA_variant.conv3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "n", ",", "c", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "x_h", "=", "self", ".", "pool_h", "(", "x", ")", "\n", "x_w", "=", "self", ".", "pool_w", "(", "x", ")", ".", "permute", "(", "0", ",", "1", ",", "3", ",", "2", ")", "\n", "y", "=", "torch", ".", "cat", "(", "[", "x_h", ",", "x_w", "]", ",", "dim", "=", "2", ")", "\n", "y", "=", "self", ".", "conv1", "(", "y", ")", "\n", "y", "=", "self", ".", "bn1", "(", "y", ")", "\n", "y", "=", "self", ".", "relu", "(", "y", ")", "\n", "x_h", ",", "x_w", "=", "torch", ".", "split", "(", "y", ",", "[", "h", ",", "w", "]", ",", "dim", "=", "2", ")", "\n", "x_w", "=", "x_w", ".", "permute", "(", "0", ",", "1", ",", "3", ",", "2", ")", "\n", "\n", "x_h", "=", "self", ".", "conv2", "(", "x_h", ")", ".", "sigmoid", "(", ")", "\n", "x_w", "=", "self", ".", "conv3", "(", "x_w", ")", ".", "sigmoid", "(", ")", "\n", "x_h", "=", "x_h", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "h", ",", "w", ")", "\n", "x_w", "=", "x_w", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "h", ",", "w", ")", "\n", "y", "=", "identity", "*", "x_w", "*", "x_h", "\n", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d_plus.ThreeDDecoder_plus.__init__": [[101, 161], ["torch.Module.__init__", "torch.Upsample", "torch.Upsample", "torch.Upsample", "rd3d_plus.BasicConv3d", "rd3d_plus.BasicConv3d", "rd3d_plus.BasicConv3d", "rd3d_plus.BasicConv3d", "rd3d_plus.BasicConv3d", "rd3d_plus.BasicConv3d", "rd3d_plus.BasicConv3d", "rd3d_plus.BasicConv3d", "rd3d_plus.BasicConv3d", "rd3d_plus.BasicConv3d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "rd3d_plus.CMA_variant", "rd3d_plus.CMA_variant", "rd3d_plus.CMA_variant", "rd3d_plus.CMA_variant", "rd3d_plus.BasicConv3d", "rd3d_plus.BasicConv3d", "rd3d_plus.BasicConv3d", "rd3d_plus.BasicConv3d", "rd3d_plus.BasicConv3d", "rd3d_plus.BasicConv3d", "rd3d_plus.BasicConv3d", "rd3d_plus.BasicConv3d", "rd3d_plus.BasicConv3d", "rd3d_plus.BasicConv3d", "rd3d_plus.BasicConv3d", "rd3d_plus.BasicConv3d", "rd3d_plus.BasicConv3d", "rd3d_plus.BasicConv3d", "rd3d_plus.BasicConv3d", "rd3d_plus.BasicConv3d", "rd3d_plus.BasicConv3d", "rd3d_plus.BasicConv3d", "rd3d_plus.BasicConv3d", "rd3d_plus.BasicConv2d", "rd3d_plus.BasicConv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.RD3D.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ")", ":", "\n", "        ", "super", "(", "ThreeDDecoder_plus", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "upsample", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "self", ".", "conv_upsample1", "=", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "3", ",", "3", ",", "3", "]", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv_upsample2", "=", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "3", ",", "3", ",", "3", "]", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv_upsample3", "=", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "3", ",", "3", ",", "3", "]", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv_upsample4", "=", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "3", ",", "3", ",", "3", "]", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "conv_downsample2_1", "=", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "1", ",", "3", ",", "3", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ")", "\n", "self", ".", "conv_downsample1_1", "=", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "1", ",", "3", ",", "3", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ")", "\n", "self", ".", "conv_downsample1_2", "=", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "1", ",", "3", ",", "3", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ")", "\n", "self", ".", "conv_downsample0_1", "=", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "1", ",", "3", ",", "3", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ")", "\n", "self", ".", "conv_downsample0_2", "=", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "1", ",", "3", ",", "3", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ")", "\n", "self", ".", "conv_downsample0_3", "=", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "1", ",", "3", ",", "3", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ")", "\n", "\n", "self", ".", "conv_cat1", "=", "nn", ".", "Sequential", "(", "\n", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "3", ",", "3", ",", "3", "]", ",", "padding", "=", "1", ")", ",", "\n", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "1", ",", "1", ",", "1", "]", ")", "\n", ")", "\n", "self", ".", "conv_cat2", "=", "nn", ".", "Sequential", "(", "\n", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "3", ",", "3", ",", "3", "]", ",", "padding", "=", "1", ")", ",", "\n", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "1", ",", "1", ",", "1", "]", ")", "\n", ")", "\n", "self", ".", "conv_cat3", "=", "nn", ".", "Sequential", "(", "\n", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "3", ",", "3", ",", "3", "]", ",", "padding", "=", "1", ")", ",", "\n", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "1", ",", "1", ",", "1", "]", ")", "\n", ")", "\n", "self", ".", "conv_cat4", "=", "nn", ".", "Sequential", "(", "\n", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "3", ",", "3", ",", "3", "]", ",", "padding", "=", "1", ")", ",", "\n", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "1", ",", "1", ",", "1", "]", ")", "\n", ")", "\n", "self", ".", "downt1", "=", "nn", ".", "Sequential", "(", "\n", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "3", ",", "3", ",", "3", "]", ",", "padding", "=", "[", "1", ",", "1", ",", "1", "]", ")", ",", "\n", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "4", ",", "3", ",", "3", "]", ",", "stride", "=", "[", "2", ",", "1", ",", "1", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ")", ",", "\n", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "3", ",", "1", ",", "1", "]", ")", "\n", ")", "\n", "self", ".", "downt2", "=", "nn", ".", "Sequential", "(", "\n", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "3", ",", "3", ",", "3", "]", ",", "padding", "=", "[", "1", ",", "1", ",", "1", "]", ")", ",", "\n", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "4", ",", "3", ",", "3", "]", ",", "stride", "=", "[", "2", ",", "1", ",", "1", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ")", ",", "\n", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "2", ",", "1", ",", "1", "]", ")", "\n", ")", "\n", "self", ".", "downt3", "=", "nn", ".", "Sequential", "(", "\n", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "3", ",", "3", ",", "3", "]", ",", "padding", "=", "1", ")", ",", "\n", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "4", ",", "3", ",", "3", "]", ",", "stride", "=", "[", "2", ",", "1", ",", "1", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ")", ",", "\n", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "1", ",", "1", ",", "1", "]", ")", "\n", ")", "\n", "self", ".", "downt4", "=", "nn", ".", "Sequential", "(", "\n", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "3", ",", "3", ",", "3", "]", ",", "padding", "=", "1", ")", ",", "\n", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "4", ",", "3", ",", "3", "]", ",", "stride", "=", "[", "2", ",", "1", ",", "1", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ")", "\n", ")", "\n", "\n", "self", ".", "out", "=", "nn", ".", "Sequential", "(", "\n", "BasicConv2d", "(", "channel", ",", "2", "*", "channel", ",", "[", "1", ",", "1", "]", ")", ",", "\n", "BasicConv2d", "(", "2", "*", "channel", ",", "channel", ",", "[", "1", ",", "1", "]", ")", ",", "\n", "nn", ".", "Conv2d", "(", "channel", ",", "1", ",", "[", "1", ",", "1", "]", ")", "\n", ")", "\n", "self", ".", "se3", "=", "CMA_variant", "(", "10", "*", "channel", ",", "10", "*", "channel", ",", "1", ")", "\n", "self", ".", "se2", "=", "CMA_variant", "(", "8", "*", "channel", ",", "8", "*", "channel", ",", "1", ")", "\n", "self", ".", "se1", "=", "CMA_variant", "(", "6", "*", "channel", ",", "6", "*", "channel", ",", "1", ")", "\n", "self", ".", "se0", "=", "CMA_variant", "(", "4", "*", "channel", ",", "4", "*", "channel", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d_plus.ThreeDDecoder_plus.forward": [[162, 230], ["rd3d_plus.ThreeDDecoder_plus.conv_downsample2_1", "rd3d_plus.ThreeDDecoder_plus.conv_downsample1_1", "rd3d_plus.ThreeDDecoder_plus.conv_downsample1_2", "rd3d_plus.ThreeDDecoder_plus.conv_downsample0_1", "rd3d_plus.ThreeDDecoder_plus.conv_downsample0_2", "rd3d_plus.ThreeDDecoder_plus.conv_downsample0_3", "x4.size", "x4.view", "rd3d_plus.ThreeDDecoder_plus.upsample", "rd3d_plus.ThreeDDecoder_plus.view", "rd3d_plus.ThreeDDecoder_plus.conv_upsample4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "rd3d_plus.ThreeDDecoder_plus.conv_cat4", "x3.view.view.view", "rd3d_plus.ThreeDDecoder_plus.se3", "rd3d_plus.ThreeDDecoder_plus.view.view", "rd3d_plus.ThreeDDecoder_plus.downt1", "rd3d_plus.ThreeDDecoder_plus.size", "rd3d_plus.ThreeDDecoder_plus.view", "rd3d_plus.ThreeDDecoder_plus.upsample", "rd3d_plus.ThreeDDecoder_plus.view", "rd3d_plus.ThreeDDecoder_plus.conv_upsample3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "rd3d_plus.ThreeDDecoder_plus.conv_cat3", "x2.view.view.view", "rd3d_plus.ThreeDDecoder_plus.se2", "rd3d_plus.ThreeDDecoder_plus.view.view", "rd3d_plus.ThreeDDecoder_plus.downt2", "rd3d_plus.ThreeDDecoder_plus.size", "rd3d_plus.ThreeDDecoder_plus.view", "rd3d_plus.ThreeDDecoder_plus.upsample", "rd3d_plus.ThreeDDecoder_plus.view", "rd3d_plus.ThreeDDecoder_plus.conv_upsample2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "rd3d_plus.ThreeDDecoder_plus.conv_cat2", "x1.view.view.view", "rd3d_plus.ThreeDDecoder_plus.se1", "rd3d_plus.ThreeDDecoder_plus.view.view", "rd3d_plus.ThreeDDecoder_plus.downt3", "rd3d_plus.ThreeDDecoder_plus.size", "rd3d_plus.ThreeDDecoder_plus.view", "rd3d_plus.ThreeDDecoder_plus.upsample", "rd3d_plus.ThreeDDecoder_plus.view", "rd3d_plus.ThreeDDecoder_plus.conv_upsample1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "rd3d_plus.ThreeDDecoder_plus.conv_cat1", "rd3d_plus.ThreeDDecoder_plus.view.view", "rd3d_plus.ThreeDDecoder_plus.se0", "rd3d_plus.ThreeDDecoder_plus.view", "rd3d_plus.ThreeDDecoder_plus.downt4", "rd3d_plus.ThreeDDecoder_plus.squeeze", "rd3d_plus.ThreeDDecoder_plus.out"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x0", ",", "x1", ",", "x2", ",", "x3", ",", "x4", ")", ":", "\n", "        ", "x2_downconv1", "=", "self", ".", "conv_downsample2_1", "(", "x2", ")", "# 16", "\n", "x1_downconv1", "=", "self", ".", "conv_downsample1_1", "(", "x1", ")", "# 32", "\n", "x1_downconv2", "=", "self", ".", "conv_downsample1_2", "(", "x1_downconv1", ")", "# 16", "\n", "x0_downconv1", "=", "self", ".", "conv_downsample0_1", "(", "x0", ")", "# 64n", "\n", "x0_downconv2", "=", "self", ".", "conv_downsample0_2", "(", "x0_downconv1", ")", "# 32", "\n", "x0_downconv3", "=", "self", ".", "conv_downsample0_3", "(", "x0_downconv2", ")", "# 16", "\n", "\n", "# 3,4", "\n", "B", ",", "C4", ",", "T4", ",", "H4", ",", "W4", "=", "x4", ".", "size", "(", ")", "\n", "x4_flatten", "=", "x4", ".", "view", "(", "B", ",", "C4", "*", "T4", ",", "H4", ",", "W4", ")", "\n", "x4_flatten_up", "=", "self", ".", "upsample", "(", "x4_flatten", ")", "\n", "x4_up", "=", "x4_flatten_up", ".", "view", "(", "B", ",", "C4", ",", "T4", ",", "2", "*", "H4", ",", "2", "*", "W4", ")", "\n", "x4_upconv", "=", "self", ".", "conv_upsample4", "(", "x4_up", ")", "\n", "residual3", "=", "torch", ".", "cat", "(", "(", "x4_upconv", ",", "x3", ",", "x2_downconv1", ",", "x1_downconv2", ",", "x0_downconv3", ")", ",", "2", ")", "\n", "x3_", "=", "self", ".", "conv_cat4", "(", "residual3", ")", "\n", "x3_flatten", "=", "x3_", ".", "view", "(", "x3_", ".", "shape", "[", "0", "]", ",", "x3_", ".", "shape", "[", "1", "]", "*", "x3_", ".", "shape", "[", "2", "]", ",", "x3_", ".", "shape", "[", "3", "]", ",", "x3_", ".", "shape", "[", "4", "]", ")", "\n", "x3_flatten", "=", "self", ".", "se3", "(", "x3_flatten", ")", "\n", "x3_", "=", "x3_flatten", ".", "view", "(", "x3_", ".", "shape", "[", "0", "]", ",", "x3_", ".", "shape", "[", "1", "]", ",", "x3_", ".", "shape", "[", "2", "]", ",", "x3_", ".", "shape", "[", "3", "]", ",", "x3_", ".", "shape", "[", "4", "]", ")", "\n", "x3", "=", "residual3", "+", "x3_", "\n", "x3", "=", "self", ".", "downt1", "(", "x3", ")", "\n", "\n", "# 2,3", "\n", "B", ",", "C3", ",", "T3", ",", "H3", ",", "W3", "=", "x3", ".", "size", "(", ")", "\n", "x3_flatten", "=", "x3", ".", "view", "(", "B", ",", "C3", "*", "T3", ",", "H3", ",", "W3", ")", "\n", "x3_flatten_up", "=", "self", ".", "upsample", "(", "x3_flatten", ")", "\n", "x3_up", "=", "x3_flatten_up", ".", "view", "(", "B", ",", "C3", ",", "T3", ",", "2", "*", "H3", ",", "2", "*", "W3", ")", "\n", "x3_upconv", "=", "self", ".", "conv_upsample3", "(", "x3_up", ")", "\n", "residual2", "=", "torch", ".", "cat", "(", "(", "x3_upconv", ",", "x2", ",", "x1_downconv1", ",", "x0_downconv2", ")", ",", "2", ")", "\n", "x2_", "=", "self", ".", "conv_cat3", "(", "residual2", ")", "\n", "x2_flatten", "=", "x2_", ".", "view", "(", "x2_", ".", "shape", "[", "0", "]", ",", "x2_", ".", "shape", "[", "1", "]", "*", "x2_", ".", "shape", "[", "2", "]", ",", "x2_", ".", "shape", "[", "3", "]", ",", "x2_", ".", "shape", "[", "4", "]", ")", "\n", "x2_flatten", "=", "self", ".", "se2", "(", "x2_flatten", ")", "\n", "x2_", "=", "x2_flatten", ".", "view", "(", "x2_", ".", "shape", "[", "0", "]", ",", "x2_", ".", "shape", "[", "1", "]", ",", "x2_", ".", "shape", "[", "2", "]", ",", "x2_", ".", "shape", "[", "3", "]", ",", "x2_", ".", "shape", "[", "4", "]", ")", "\n", "x2", "=", "residual2", "+", "x2_", "\n", "x2", "=", "self", ".", "downt2", "(", "x2", ")", "\n", "\n", "# 1,2", "\n", "B", ",", "C2", ",", "T2", ",", "H2", ",", "W2", "=", "x2", ".", "size", "(", ")", "\n", "x2_flatten", "=", "x2", ".", "view", "(", "B", ",", "C2", "*", "T2", ",", "H2", ",", "W2", ")", "\n", "x2_flatten_up", "=", "self", ".", "upsample", "(", "x2_flatten", ")", "\n", "x2_up", "=", "x2_flatten_up", ".", "view", "(", "B", ",", "C2", ",", "T2", ",", "2", "*", "H2", ",", "2", "*", "W2", ")", "\n", "x2_upconv", "=", "self", ".", "conv_upsample2", "(", "x2_up", ")", "\n", "residual1", "=", "torch", ".", "cat", "(", "(", "x2_upconv", ",", "x1", ",", "x0_downconv1", ")", ",", "2", ")", "\n", "x1_", "=", "self", ".", "conv_cat2", "(", "residual1", ")", "# 64", "\n", "x1_flatten", "=", "x1_", ".", "view", "(", "x1_", ".", "shape", "[", "0", "]", ",", "x1_", ".", "shape", "[", "1", "]", "*", "x1_", ".", "shape", "[", "2", "]", ",", "x1_", ".", "shape", "[", "3", "]", ",", "x1_", ".", "shape", "[", "4", "]", ")", "\n", "x1_flatten", "=", "self", ".", "se1", "(", "x1_flatten", ")", "\n", "x1_", "=", "x1_flatten", ".", "view", "(", "x1_", ".", "shape", "[", "0", "]", ",", "x1_", ".", "shape", "[", "1", "]", ",", "x1_", ".", "shape", "[", "2", "]", ",", "x1_", ".", "shape", "[", "3", "]", ",", "x1_", ".", "shape", "[", "4", "]", ")", "\n", "x1", "=", "residual1", "+", "x1_", "\n", "x1", "=", "self", ".", "downt3", "(", "x1", ")", "\n", "\n", "# 0,1", "\n", "B", ",", "C1", ",", "T1", ",", "H1", ",", "W1", "=", "x1", ".", "size", "(", ")", "\n", "x1_flatten", "=", "x1", ".", "view", "(", "B", ",", "C1", "*", "T1", ",", "H1", ",", "W1", ")", "\n", "x1_flatten_up", "=", "self", ".", "upsample", "(", "x1_flatten", ")", "\n", "x1_up", "=", "x1_flatten_up", ".", "view", "(", "B", ",", "C1", ",", "T1", ",", "2", "*", "H1", ",", "2", "*", "W1", ")", "\n", "x1_upconv", "=", "self", ".", "conv_upsample1", "(", "x1_up", ")", "\n", "residual0", "=", "torch", ".", "cat", "(", "(", "x0", ",", "x1_upconv", ")", ",", "2", ")", "\n", "x0_", "=", "self", ".", "conv_cat1", "(", "residual0", ")", "\n", "x0_flatten", "=", "x0_", ".", "view", "(", "x0_", ".", "shape", "[", "0", "]", ",", "x0_", ".", "shape", "[", "1", "]", "*", "x0_", ".", "shape", "[", "2", "]", ",", "x0_", ".", "shape", "[", "3", "]", ",", "x0_", ".", "shape", "[", "4", "]", ")", "\n", "x0_flatten", "=", "self", ".", "se0", "(", "x0_flatten", ")", "\n", "x0_", "=", "x0_flatten", ".", "view", "(", "x0_", ".", "shape", "[", "0", "]", ",", "x0_", ".", "shape", "[", "1", "]", ",", "x0_", ".", "shape", "[", "2", "]", ",", "x0_", ".", "shape", "[", "3", "]", ",", "x0_", ".", "shape", "[", "4", "]", ")", "\n", "x0", "=", "residual0", "+", "x0_", "\n", "x0", "=", "self", ".", "downt4", "(", "x0", ")", "\n", "x", "=", "x0", ".", "squeeze", "(", "2", ")", "\n", "\n", "out", "=", "self", ".", "out", "(", "x", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d_plus.DownBlock.__init__": [[232, 237], ["super().__init__", "rd3d_plus.BasicConv3d", "rd3d_plus.DeconvBlock", "rd3d_plus.BasicConv3d"], "methods", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.RD3D.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ":", "\n", "        ", "super", "(", "DownBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "down_conv1", "=", "BasicConv3d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "padding", ")", "\n", "self", ".", "down_conv2", "=", "DeconvBlock", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "padding", ")", "\n", "self", ".", "down_conv3", "=", "BasicConv3d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "padding", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d_plus.DownBlock.forward": [[238, 244], ["rd3d_plus.DownBlock.down_conv1", "rd3d_plus.DownBlock.down_conv2", "rd3d_plus.DownBlock.down_conv3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# ipdb.set_trace()", "\n", "        ", "l0", "=", "self", ".", "down_conv1", "(", "x", ")", "\n", "h0", "=", "self", ".", "down_conv2", "(", "l0", ")", "\n", "l1", "=", "self", ".", "down_conv3", "(", "h0", "-", "x", ")", "\n", "return", "l1", "+", "l0", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d_plus.Unet3D.__init__": [[247, 257], ["torch.Module.__init__", "rd3d_plus.Reduction3D", "rd3d_plus.Reduction3D", "rd3d_plus.Reduction3D", "rd3d_plus.Reduction3D", "rd3d_plus.Reduction3D", "rd3d_plus.ThreeDDecoder_plus"], "methods", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.RD3D.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ")", ":", "\n", "        ", "super", "(", "Unet3D", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "reductions0", "=", "Reduction3D", "(", "64", ",", "channel", ")", "\n", "self", ".", "reductions1", "=", "Reduction3D", "(", "256", ",", "channel", ")", "\n", "self", ".", "reductions2", "=", "Reduction3D", "(", "512", ",", "channel", ")", "\n", "self", ".", "reductions3", "=", "Reduction3D", "(", "1024", ",", "channel", ")", "\n", "self", ".", "reductions4", "=", "Reduction3D", "(", "2048", ",", "channel", ")", "\n", "\n", "self", ".", "output_s", "=", "ThreeDDecoder_plus", "(", "channel", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d_plus.Unet3D.forward": [[258, 268], ["rd3d_plus.Unet3D.reductions0", "rd3d_plus.Unet3D.reductions1", "rd3d_plus.Unet3D.reductions2", "rd3d_plus.Unet3D.reductions3", "rd3d_plus.Unet3D.reductions4", "rd3d_plus.Unet3D.output_s"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x0", ",", "x1", ",", "x2", ",", "x3", ",", "x4", ")", ":", "\n", "        ", "x_s0", "=", "self", ".", "reductions0", "(", "x0", ")", "\n", "x_s1", "=", "self", ".", "reductions1", "(", "x1", ")", "\n", "x_s2", "=", "self", ".", "reductions2", "(", "x2", ")", "\n", "x_s3", "=", "self", ".", "reductions3", "(", "x3", ")", "\n", "x_s4", "=", "self", ".", "reductions4", "(", "x4", ")", "\n", "\n", "pred_s", "=", "self", ".", "output_s", "(", "x_s0", ",", "x_s1", ",", "x_s2", ",", "x_s3", ",", "x_s4", ")", "\n", "\n", "return", "pred_s", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d_plus.RD3D_plus.__init__": [[271, 276], ["torch.Module.__init__", "model.resnet3d.I3DResNet_light", "rd3d_plus.Unet3D"], "methods", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.RD3D.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "resnet", ")", ":", "\n", "        ", "super", "(", "RD3D_plus", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "resnet", "=", "I3DResNet_light", "(", "resnet", ")", "\n", "self", ".", "unet", "=", "Unet3D", "(", "channel", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d_plus.RD3D_plus.forward": [[277, 291], ["rd3d_plus.RD3D_plus.resnet.conv1", "rd3d_plus.RD3D_plus.resnet.bn1", "rd3d_plus.RD3D_plus.resnet.relu", "rd3d_plus.RD3D_plus.resnet.maxpool", "rd3d_plus.RD3D_plus.resnet.layer1", "rd3d_plus.RD3D_plus.resnet.layer2", "rd3d_plus.RD3D_plus.resnet.layer3", "rd3d_plus.RD3D_plus.resnet.layer4", "rd3d_plus.RD3D_plus.unet", "torch.upsample", "torch.upsample", "torch.upsample", "rd3d_plus.RD3D_plus.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "size", "=", "x", ".", "size", "(", ")", "[", "3", ":", "]", "\n", "x", "=", "self", ".", "resnet", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "resnet", ".", "bn1", "(", "x", ")", "\n", "x0", "=", "self", ".", "resnet", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "resnet", ".", "maxpool", "(", "x0", ")", "\n", "x1", "=", "self", ".", "resnet", ".", "layer1", "(", "x", ")", "\n", "x2", "=", "self", ".", "resnet", ".", "layer2", "(", "x1", ")", "\n", "x3", "=", "self", ".", "resnet", ".", "layer3", "(", "x2", ")", "\n", "x4", "=", "self", ".", "resnet", ".", "layer4", "(", "x3", ")", "\n", "pred_s", "=", "self", ".", "unet", "(", "x0", ",", "x1", ",", "x2", ",", "x3", ",", "x4", ")", "\n", "pred_s", "=", "F", ".", "upsample", "(", "pred_s", ",", "size", "=", "size", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n", "return", "pred_s", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.resnet2d.BasicBlock.__init__": [[14, 23], ["torch.Module.__init__", "resnet2d.conv3x3", "torch.BatchNorm2d", "torch.ReLU", "resnet2d.conv3x3", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.RD3D.__init__", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.resnet2d.conv3x3", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.resnet2d.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.resnet2d.BasicBlock.forward": [[24, 41], ["resnet2d.BasicBlock.conv1", "resnet2d.BasicBlock.bn1", "resnet2d.BasicBlock.relu", "resnet2d.BasicBlock.conv2", "resnet2d.BasicBlock.bn2", "resnet2d.BasicBlock.relu", "resnet2d.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.resnet2d.Bottleneck.__init__": [[46, 58], ["torch.Module.__init__", "torch.Conv2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.RD3D.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "*", "4", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "4", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.resnet2d.Bottleneck.forward": [[59, 80], ["resnet2d.Bottleneck.conv1", "resnet2d.Bottleneck.bn1", "resnet2d.Bottleneck.relu", "resnet2d.Bottleneck.conv2", "resnet2d.Bottleneck.bn2", "resnet2d.Bottleneck.relu", "resnet2d.Bottleneck.conv3", "resnet2d.Bottleneck.bn3", "resnet2d.Bottleneck.relu", "resnet2d.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.resnet2d.ResNet50.__init__": [[84, 105], ["torch.Module.__init__", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.MaxPool2d", "resnet2d.ResNet50._make_layer", "resnet2d.ResNet50._make_layer", "resnet2d.ResNet50._make_layer", "resnet2d.ResNet50._make_layer", "resnet2d.ResNet50.modules", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.RD3D.__init__", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.resnet2d.ResNet50._make_layer", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.resnet2d.ResNet50._make_layer", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.resnet2d.ResNet50._make_layer", "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.resnet2d.ResNet50._make_layer"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "inplanes", "=", "64", "\n", "super", "(", "ResNet50", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "Bottleneck", ",", "64", ",", "3", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "Bottleneck", ",", "128", ",", "4", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "Bottleneck", ",", "256", ",", "6", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "Bottleneck", ",", "512", ",", "3", ",", "stride", "=", "2", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.resnet2d.ResNet50._make_layer": [[106, 122], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "block", "layers.append", "torch.Conv2d", "torch.BatchNorm2d", "block"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.resnet2d.ResNet50.forward": [[123, 135], ["resnet2d.ResNet50.conv1", "resnet2d.ResNet50.bn1", "resnet2d.ResNet50.relu", "resnet2d.ResNet50.maxpool", "resnet2d.ResNet50.layer1", "resnet2d.ResNet50.layer2", "resnet2d.ResNet50.layer3", "resnet2d.ResNet50.layer4"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.resnet2d.conv3x3": [[5, 9], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.BasicConv2d.__init__": [[9, 16], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.RD3D.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "super", "(", "BasicConv2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv_bn", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "\n", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.BasicConv2d.forward": [[18, 21], ["rd3d.BasicConv2d.conv_bn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv_bn", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.BasicConv3d.__init__": [[24, 31], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.RD3D.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "super", "(", "BasicConv3d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv_bn", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "padding", "=", "padding", ",", "\n", "dilation", "=", "dilation", ",", "stride", "=", "stride", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.BasicConv3d.forward": [[33, 36], ["rd3d.BasicConv3d.conv_bn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv_bn", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.DeconvBlock.__init__": [[39, 46], ["super().__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.RD3D.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "DeconvBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "deconv_bn", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ConvTranspose3d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ",", "output_padding", "=", "[", "0", ",", "1", ",", "1", "]", ",", "\n", "dilation", "=", "dilation", ",", "stride", "=", "stride", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.DeconvBlock.forward": [[48, 51], ["rd3d.DeconvBlock.deconv_bn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "deconv_bn", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.Reduction3D.__init__": [[54, 60], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "rd3d.BasicConv3d", "rd3d.BasicConv3d", "rd3d.BasicConv3d"], "methods", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.RD3D.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "out_channel", ")", ":", "\n", "        ", "super", "(", "Reduction3D", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "reduce", "=", "nn", ".", "Sequential", "(", "\n", "BasicConv3d", "(", "in_channel", ",", "out_channel", ",", "kernel_size", "=", "[", "1", ",", "1", ",", "1", "]", ")", ",", "\n", "BasicConv3d", "(", "out_channel", ",", "out_channel", ",", "kernel_size", "=", "[", "3", ",", "3", ",", "3", "]", ",", "padding", "=", "1", ")", ",", "\n", "BasicConv3d", "(", "out_channel", ",", "out_channel", ",", "kernel_size", "=", "[", "3", ",", "3", ",", "3", "]", ",", "padding", "=", "1", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.Reduction3D.forward": [[62, 64], ["rd3d.Reduction3D.reduce"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "reduce", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.CMA.__init__": [[67, 75], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.RD3D.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "reduction", "=", "16", ")", ":", "\n", "        ", "super", "(", "CMA", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "channel", ",", "channel", "//", "reduction", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "channel", "//", "reduction", ",", "channel", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.CMA.forward": [[77, 82], ["x.size", "rd3d.CMA.avg_pool().view", "rd3d.CMA.fc().view", "rd3d.CMA.expand_as", "rd3d.CMA.avg_pool", "rd3d.CMA.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "b", ",", "c", ",", "_", ",", "_", "=", "x", ".", "size", "(", ")", "\n", "y", "=", "self", ".", "avg_pool", "(", "x", ")", ".", "view", "(", "b", ",", "c", ")", "\n", "y", "=", "self", ".", "fc", "(", "y", ")", ".", "view", "(", "b", ",", "c", ",", "1", ",", "1", ")", "\n", "return", "x", "*", "y", ".", "expand_as", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.ThreeDDecoder.__init__": [[85, 130], ["torch.Module.__init__", "torch.Upsample", "torch.Upsample", "torch.Upsample", "rd3d.BasicConv3d", "rd3d.BasicConv3d", "rd3d.BasicConv3d", "rd3d.BasicConv3d", "rd3d.BasicConv3d", "rd3d.BasicConv3d", "rd3d.BasicConv3d", "rd3d.BasicConv3d", "rd3d.BasicConv3d", "rd3d.BasicConv3d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "rd3d.BasicConv3d", "rd3d.BasicConv3d", "rd3d.BasicConv3d", "rd3d.BasicConv3d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "rd3d.CMA", "rd3d.CMA", "rd3d.CMA", "rd3d.CMA", "rd3d.BasicConv3d", "rd3d.BasicConv3d", "rd3d.BasicConv3d", "rd3d.BasicConv3d", "rd3d.BasicConv3d", "rd3d.BasicConv3d", "rd3d.BasicConv3d", "rd3d.BasicConv3d", "rd3d.BasicConv2d", "rd3d.BasicConv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.RD3D.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ")", ":", "\n", "        ", "super", "(", "ThreeDDecoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "upsample", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "self", ".", "conv_upsample1", "=", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "3", ",", "3", ",", "3", "]", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv_upsample2", "=", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "3", ",", "3", ",", "3", "]", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv_upsample3", "=", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "3", ",", "3", ",", "3", "]", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv_upsample4", "=", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "3", ",", "3", ",", "3", "]", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "conv_downsample2_1", "=", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "1", ",", "3", ",", "3", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ")", "\n", "self", ".", "conv_downsample1_1", "=", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "1", ",", "3", ",", "3", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ")", "\n", "self", ".", "conv_downsample1_2", "=", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "1", ",", "3", ",", "3", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ")", "\n", "self", ".", "conv_downsample0_1", "=", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "1", ",", "3", ",", "3", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ")", "\n", "self", ".", "conv_downsample0_2", "=", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "1", ",", "3", ",", "3", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ")", "\n", "self", ".", "conv_downsample0_3", "=", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "1", ",", "3", ",", "3", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ")", "\n", "\n", "self", ".", "conv_cat1", "=", "nn", ".", "Sequential", "(", "\n", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "3", ",", "3", ",", "3", "]", ",", "padding", "=", "1", ")", ",", "\n", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "1", ",", "1", ",", "1", "]", ")", "\n", ")", "\n", "self", ".", "conv_cat2", "=", "nn", ".", "Sequential", "(", "\n", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "3", ",", "3", ",", "3", "]", ",", "padding", "=", "1", ")", ",", "\n", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "1", ",", "1", ",", "1", "]", ")", "\n", ")", "\n", "self", ".", "conv_cat3", "=", "nn", ".", "Sequential", "(", "\n", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "3", ",", "3", ",", "3", "]", ",", "padding", "=", "1", ")", ",", "\n", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "1", ",", "1", ",", "1", "]", ")", "\n", ")", "\n", "self", ".", "conv_cat4", "=", "nn", ".", "Sequential", "(", "\n", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "3", ",", "3", ",", "3", "]", ",", "padding", "=", "1", ")", ",", "\n", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "1", ",", "1", ",", "1", "]", ")", "\n", ")", "\n", "self", ".", "downt1", "=", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "10", ",", "1", ",", "1", "]", ")", "\n", "self", ".", "downt2", "=", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "7", ",", "1", ",", "1", "]", ")", "\n", "self", ".", "downt3", "=", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "5", ",", "1", ",", "1", "]", ")", "\n", "self", ".", "downt4", "=", "BasicConv3d", "(", "channel", ",", "channel", ",", "[", "3", ",", "1", ",", "1", "]", ")", "\n", "\n", "self", ".", "out", "=", "nn", ".", "Sequential", "(", "\n", "BasicConv2d", "(", "channel", ",", "2", "*", "channel", ",", "[", "1", ",", "1", "]", ")", ",", "\n", "BasicConv2d", "(", "2", "*", "channel", ",", "channel", ",", "[", "1", ",", "1", "]", ")", ",", "\n", "nn", ".", "Conv2d", "(", "channel", ",", "1", ",", "[", "1", ",", "1", "]", ")", "\n", ")", "\n", "self", ".", "se3", "=", "CMA", "(", "channel", "*", "10", ")", "\n", "self", ".", "se2", "=", "CMA", "(", "channel", "*", "7", ")", "\n", "self", ".", "se1", "=", "CMA", "(", "channel", "*", "5", ")", "\n", "self", ".", "se0", "=", "CMA", "(", "channel", "*", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.ThreeDDecoder.forward": [[131, 199], ["rd3d.ThreeDDecoder.conv_downsample2_1", "rd3d.ThreeDDecoder.conv_downsample1_1", "rd3d.ThreeDDecoder.conv_downsample1_2", "rd3d.ThreeDDecoder.conv_downsample0_1", "rd3d.ThreeDDecoder.conv_downsample0_2", "rd3d.ThreeDDecoder.conv_downsample0_3", "x4.size", "x4.view", "rd3d.ThreeDDecoder.upsample", "rd3d.ThreeDDecoder.view", "rd3d.ThreeDDecoder.conv_upsample4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "rd3d.ThreeDDecoder.conv_cat4", "x3.view.view.view", "rd3d.ThreeDDecoder.se3", "rd3d.ThreeDDecoder.view.view", "rd3d.ThreeDDecoder.downt1", "rd3d.ThreeDDecoder.size", "rd3d.ThreeDDecoder.view", "rd3d.ThreeDDecoder.upsample", "rd3d.ThreeDDecoder.view", "rd3d.ThreeDDecoder.conv_upsample3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "rd3d.ThreeDDecoder.conv_cat3", "x2.view.view.view", "rd3d.ThreeDDecoder.se2", "rd3d.ThreeDDecoder.view.view", "rd3d.ThreeDDecoder.downt2", "rd3d.ThreeDDecoder.size", "rd3d.ThreeDDecoder.view", "rd3d.ThreeDDecoder.upsample", "rd3d.ThreeDDecoder.view", "rd3d.ThreeDDecoder.conv_upsample2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "rd3d.ThreeDDecoder.conv_cat2", "x1.view.view.view", "rd3d.ThreeDDecoder.se1", "rd3d.ThreeDDecoder.view.view", "rd3d.ThreeDDecoder.downt3", "rd3d.ThreeDDecoder.size", "rd3d.ThreeDDecoder.view", "rd3d.ThreeDDecoder.upsample", "rd3d.ThreeDDecoder.view", "rd3d.ThreeDDecoder.conv_upsample1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "rd3d.ThreeDDecoder.conv_cat1", "rd3d.ThreeDDecoder.view.view", "rd3d.ThreeDDecoder.se0", "rd3d.ThreeDDecoder.view", "rd3d.ThreeDDecoder.downt4", "rd3d.ThreeDDecoder.squeeze", "rd3d.ThreeDDecoder.out"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x0", ",", "x1", ",", "x2", ",", "x3", ",", "x4", ")", ":", "\n", "        ", "x2_downconv1", "=", "self", ".", "conv_downsample2_1", "(", "x2", ")", "# 16", "\n", "x1_downconv1", "=", "self", ".", "conv_downsample1_1", "(", "x1", ")", "# 32", "\n", "x1_downconv2", "=", "self", ".", "conv_downsample1_2", "(", "x1_downconv1", ")", "# 16", "\n", "x0_downconv1", "=", "self", ".", "conv_downsample0_1", "(", "x0", ")", "# 64n", "\n", "x0_downconv2", "=", "self", ".", "conv_downsample0_2", "(", "x0_downconv1", ")", "# 32", "\n", "x0_downconv3", "=", "self", ".", "conv_downsample0_3", "(", "x0_downconv2", ")", "# 16", "\n", "\n", "# 3,4", "\n", "B", ",", "C4", ",", "T4", ",", "H4", ",", "W4", "=", "x4", ".", "size", "(", ")", "\n", "x4_flatten", "=", "x4", ".", "view", "(", "B", ",", "C4", "*", "T4", ",", "H4", ",", "W4", ")", "\n", "x4_flatten_up", "=", "self", ".", "upsample", "(", "x4_flatten", ")", "\n", "x4_up", "=", "x4_flatten_up", ".", "view", "(", "B", ",", "C4", ",", "T4", ",", "2", "*", "H4", ",", "2", "*", "W4", ")", "\n", "x4_upconv", "=", "self", ".", "conv_upsample4", "(", "x4_up", ")", "\n", "residual3", "=", "torch", ".", "cat", "(", "(", "x4_upconv", ",", "x3", ",", "x2_downconv1", ",", "x1_downconv2", ",", "x0_downconv3", ")", ",", "2", ")", "\n", "x3_", "=", "self", ".", "conv_cat4", "(", "residual3", ")", "\n", "x3_flatten", "=", "x3_", ".", "view", "(", "x3_", ".", "shape", "[", "0", "]", ",", "x3_", ".", "shape", "[", "1", "]", "*", "x3_", ".", "shape", "[", "2", "]", ",", "x3_", ".", "shape", "[", "3", "]", ",", "x3_", ".", "shape", "[", "4", "]", ")", "\n", "x3_flatten", "=", "self", ".", "se3", "(", "x3_flatten", ")", "\n", "x3_", "=", "x3_flatten", ".", "view", "(", "x3_", ".", "shape", "[", "0", "]", ",", "x3_", ".", "shape", "[", "1", "]", ",", "x3_", ".", "shape", "[", "2", "]", ",", "x3_", ".", "shape", "[", "3", "]", ",", "x3_", ".", "shape", "[", "4", "]", ")", "\n", "x3", "=", "residual3", "+", "x3_", "\n", "x3", "=", "self", ".", "downt1", "(", "x3", ")", "\n", "\n", "# 2,3", "\n", "B", ",", "C3", ",", "T3", ",", "H3", ",", "W3", "=", "x3", ".", "size", "(", ")", "\n", "x3_flatten", "=", "x3", ".", "view", "(", "B", ",", "C3", "*", "T3", ",", "H3", ",", "W3", ")", "\n", "x3_flatten_up", "=", "self", ".", "upsample", "(", "x3_flatten", ")", "\n", "x3_up", "=", "x3_flatten_up", ".", "view", "(", "B", ",", "C3", ",", "T3", ",", "2", "*", "H3", ",", "2", "*", "W3", ")", "\n", "x3_upconv", "=", "self", ".", "conv_upsample3", "(", "x3_up", ")", "\n", "residual2", "=", "torch", ".", "cat", "(", "(", "x3_upconv", ",", "x2", ",", "x1_downconv1", ",", "x0_downconv2", ")", ",", "2", ")", "\n", "x2_", "=", "self", ".", "conv_cat3", "(", "residual2", ")", "\n", "x2_flatten", "=", "x2_", ".", "view", "(", "x2_", ".", "shape", "[", "0", "]", ",", "x2_", ".", "shape", "[", "1", "]", "*", "x2_", ".", "shape", "[", "2", "]", ",", "x2_", ".", "shape", "[", "3", "]", ",", "x2_", ".", "shape", "[", "4", "]", ")", "\n", "x2_flatten", "=", "self", ".", "se2", "(", "x2_flatten", ")", "\n", "x2_", "=", "x2_flatten", ".", "view", "(", "x2_", ".", "shape", "[", "0", "]", ",", "x2_", ".", "shape", "[", "1", "]", ",", "x2_", ".", "shape", "[", "2", "]", ",", "x2_", ".", "shape", "[", "3", "]", ",", "x2_", ".", "shape", "[", "4", "]", ")", "\n", "x2", "=", "residual2", "+", "x2_", "\n", "x2", "=", "self", ".", "downt2", "(", "x2", ")", "\n", "\n", "# 1,2", "\n", "B", ",", "C2", ",", "T2", ",", "H2", ",", "W2", "=", "x2", ".", "size", "(", ")", "\n", "x2_flatten", "=", "x2", ".", "view", "(", "B", ",", "C2", "*", "T2", ",", "H2", ",", "W2", ")", "\n", "x2_flatten_up", "=", "self", ".", "upsample", "(", "x2_flatten", ")", "\n", "x2_up", "=", "x2_flatten_up", ".", "view", "(", "B", ",", "C2", ",", "T2", ",", "2", "*", "H2", ",", "2", "*", "W2", ")", "\n", "x2_upconv", "=", "self", ".", "conv_upsample2", "(", "x2_up", ")", "\n", "residual1", "=", "torch", ".", "cat", "(", "(", "x2_upconv", ",", "x1", ",", "x0_downconv1", ")", ",", "2", ")", "\n", "x1_", "=", "self", ".", "conv_cat2", "(", "residual1", ")", "# 64", "\n", "x1_flatten", "=", "x1_", ".", "view", "(", "x1_", ".", "shape", "[", "0", "]", ",", "x1_", ".", "shape", "[", "1", "]", "*", "x1_", ".", "shape", "[", "2", "]", ",", "x1_", ".", "shape", "[", "3", "]", ",", "x1_", ".", "shape", "[", "4", "]", ")", "\n", "x1_flatten", "=", "self", ".", "se1", "(", "x1_flatten", ")", "\n", "x1_", "=", "x1_flatten", ".", "view", "(", "x1_", ".", "shape", "[", "0", "]", ",", "x1_", ".", "shape", "[", "1", "]", ",", "x1_", ".", "shape", "[", "2", "]", ",", "x1_", ".", "shape", "[", "3", "]", ",", "x1_", ".", "shape", "[", "4", "]", ")", "\n", "x1", "=", "residual1", "+", "x1_", "\n", "x1", "=", "self", ".", "downt3", "(", "x1", ")", "\n", "\n", "# 0,1", "\n", "B", ",", "C1", ",", "T1", ",", "H1", ",", "W1", "=", "x1", ".", "size", "(", ")", "\n", "x1_flatten", "=", "x1", ".", "view", "(", "B", ",", "C1", "*", "T1", ",", "H1", ",", "W1", ")", "\n", "x1_flatten_up", "=", "self", ".", "upsample", "(", "x1_flatten", ")", "\n", "x1_up", "=", "x1_flatten_up", ".", "view", "(", "B", ",", "C1", ",", "T1", ",", "2", "*", "H1", ",", "2", "*", "W1", ")", "\n", "x1_upconv", "=", "self", ".", "conv_upsample1", "(", "x1_up", ")", "\n", "residual0", "=", "torch", ".", "cat", "(", "(", "x0", ",", "x1_upconv", ")", ",", "2", ")", "\n", "x0_", "=", "self", ".", "conv_cat1", "(", "residual0", ")", "\n", "x0_flatten", "=", "x0_", ".", "view", "(", "x0_", ".", "shape", "[", "0", "]", ",", "x0_", ".", "shape", "[", "1", "]", "*", "x0_", ".", "shape", "[", "2", "]", ",", "x0_", ".", "shape", "[", "3", "]", ",", "x0_", ".", "shape", "[", "4", "]", ")", "\n", "x0_flatten", "=", "self", ".", "se0", "(", "x0_flatten", ")", "\n", "x0_", "=", "x0_flatten", ".", "view", "(", "x0_", ".", "shape", "[", "0", "]", ",", "x0_", ".", "shape", "[", "1", "]", ",", "x0_", ".", "shape", "[", "2", "]", ",", "x0_", ".", "shape", "[", "3", "]", ",", "x0_", ".", "shape", "[", "4", "]", ")", "\n", "x0", "=", "residual0", "+", "x0_", "\n", "x0", "=", "self", ".", "downt4", "(", "x0", ")", "\n", "x", "=", "x0", ".", "squeeze", "(", "2", ")", "\n", "\n", "out", "=", "self", ".", "out", "(", "x", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.DownBlock.__init__": [[202, 207], ["super().__init__", "rd3d.BasicConv3d", "rd3d.DeconvBlock", "rd3d.BasicConv3d"], "methods", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.RD3D.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ":", "\n", "        ", "super", "(", "DownBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "down_conv1", "=", "BasicConv3d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "padding", ")", "\n", "self", ".", "down_conv2", "=", "DeconvBlock", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "padding", ")", "\n", "self", ".", "down_conv3", "=", "BasicConv3d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "padding", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.DownBlock.forward": [[208, 214], ["rd3d.DownBlock.down_conv1", "rd3d.DownBlock.down_conv2", "rd3d.DownBlock.down_conv3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# ipdb.set_trace()", "\n", "        ", "l0", "=", "self", ".", "down_conv1", "(", "x", ")", "\n", "h0", "=", "self", ".", "down_conv2", "(", "l0", ")", "\n", "l1", "=", "self", ".", "down_conv3", "(", "h0", "-", "x", ")", "\n", "return", "l1", "+", "l0", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.Unet3D.__init__": [[217, 227], ["torch.Module.__init__", "rd3d.Reduction3D", "rd3d.Reduction3D", "rd3d.Reduction3D", "rd3d.Reduction3D", "rd3d.Reduction3D", "rd3d.ThreeDDecoder"], "methods", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.RD3D.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ")", ":", "\n", "        ", "super", "(", "Unet3D", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "reductions0", "=", "Reduction3D", "(", "64", ",", "channel", ")", "\n", "self", ".", "reductions1", "=", "Reduction3D", "(", "256", ",", "channel", ")", "\n", "self", ".", "reductions2", "=", "Reduction3D", "(", "512", ",", "channel", ")", "\n", "self", ".", "reductions3", "=", "Reduction3D", "(", "1024", ",", "channel", ")", "\n", "self", ".", "reductions4", "=", "Reduction3D", "(", "2048", ",", "channel", ")", "\n", "\n", "self", ".", "output_s", "=", "ThreeDDecoder", "(", "channel", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.Unet3D.forward": [[228, 238], ["rd3d.Unet3D.reductions0", "rd3d.Unet3D.reductions1", "rd3d.Unet3D.reductions2", "rd3d.Unet3D.reductions3", "rd3d.Unet3D.reductions4", "rd3d.Unet3D.output_s"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x0", ",", "x1", ",", "x2", ",", "x3", ",", "x4", ")", ":", "\n", "        ", "x_s0", "=", "self", ".", "reductions0", "(", "x0", ")", "\n", "x_s1", "=", "self", ".", "reductions1", "(", "x1", ")", "\n", "x_s2", "=", "self", ".", "reductions2", "(", "x2", ")", "\n", "x_s3", "=", "self", ".", "reductions3", "(", "x3", ")", "\n", "x_s4", "=", "self", ".", "reductions4", "(", "x4", ")", "\n", "\n", "pred_s", "=", "self", ".", "output_s", "(", "x_s0", ",", "x_s1", ",", "x_s2", ",", "x_s3", ",", "x_s4", ")", "\n", "\n", "return", "pred_s", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.RD3D.__init__": [[241, 246], ["torch.Module.__init__", "model.resnet3d.I3DResNet", "rd3d.Unet3D"], "methods", ["home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.RD3D.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "resnet", ")", ":", "\n", "        ", "super", "(", "RD3D", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "resnet", "=", "I3DResNet", "(", "resnet", ")", "\n", "self", ".", "unet", "=", "Unet3D", "(", "channel", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PPOLYpubki_RD3D.model.rd3d.RD3D.forward": [[247, 261], ["rd3d.RD3D.resnet.conv1", "rd3d.RD3D.resnet.bn1", "rd3d.RD3D.resnet.relu", "rd3d.RD3D.resnet.maxpool", "rd3d.RD3D.resnet.layer1", "rd3d.RD3D.resnet.layer2", "rd3d.RD3D.resnet.layer3", "rd3d.RD3D.resnet.layer4", "rd3d.RD3D.unet", "torch.upsample", "torch.upsample", "torch.upsample", "rd3d.RD3D.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "size", "=", "x", ".", "size", "(", ")", "[", "3", ":", "]", "\n", "x", "=", "self", ".", "resnet", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "resnet", ".", "bn1", "(", "x", ")", "\n", "x0", "=", "self", ".", "resnet", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "resnet", ".", "maxpool", "(", "x0", ")", "\n", "x1", "=", "self", ".", "resnet", ".", "layer1", "(", "x", ")", "\n", "x2", "=", "self", ".", "resnet", ".", "layer2", "(", "x1", ")", "\n", "x3", "=", "self", ".", "resnet", ".", "layer3", "(", "x2", ")", "\n", "x4", "=", "self", ".", "resnet", ".", "layer4", "(", "x3", ")", "\n", "pred_s", "=", "self", ".", "unet", "(", "x0", ",", "x1", ",", "x2", ",", "x3", ",", "x4", ")", "\n", "pred_s", "=", "F", ".", "upsample", "(", "pred_s", ",", "size", "=", "size", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n", "return", "pred_s", "\n", "", "", ""]]}