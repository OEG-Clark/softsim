{"home.repos.pwc.inspect_result.palmagro_gg2vec.gg2vec.composite_experiment.composite_experiment.__init__": [[9, 15], ["figure"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "ds", ",", "param", ",", "trainset_p", ",", "iteraciones", ")", ":", "\n", "        ", "self", ".", "ds", "=", "ds", "\n", "self", ".", "param", "=", "param", "\n", "self", ".", "p", "=", "figure", "(", "plot_width", "=", "500", ",", "plot_height", "=", "250", ")", "\n", "self", ".", "trainset_p", "=", "trainset_p", "\n", "self", ".", "iteraciones", "=", "iteraciones", "\n", "\n"]], "home.repos.pwc.inspect_result.palmagro_gg2vec.gg2vec.composite_experiment.composite_experiment.ntype_prediction": [[16, 27], ["pallete", "enumerate", "experiment", "experiment.ntype_prediction", "composite_experiment.composite_experiment.p.line", "composite_experiment.composite_experiment.p.line"], "methods", ["home.repos.pwc.inspect_result.palmagro_gg2vec.gg2vec.composite_experiment.composite_experiment.ntype_prediction"], ["", "def", "ntype_prediction", "(", "self", ",", "a", ",", "b", ",", "jump", ",", "dev", ")", ":", "\n", "        ", "pal", "=", "pallete", "(", "\"db\"", ")", "\n", "for", "idx", ",", "d", "in", "enumerate", "(", "self", ".", "ds", ")", ":", "\n", "            ", "e", "=", "experiment", "(", "d", "[", "0", "]", ",", "7474", ",", "user", ",", "pswd", ",", "d", "[", "1", "]", ",", "\"normal\"", ",", "self", ".", "param", ",", "self", ".", "trainset_p", ",", "self", ".", "iteraciones", ")", "\n", "x", ",", "y", ",", "xd", ",", "yd", "=", "e", ".", "ntype_prediction", "(", "a", ",", "b", ",", "jump", ")", "\n", "self", ".", "p", ".", "line", "(", "x", ",", "y", ",", "color", "=", "pal", "[", "idx", "]", ",", "legend", "=", "d", "[", "2", "]", ",", "line_width", "=", "2.0", ")", "\n", "if", "(", "dev", ")", ":", "\n", "                ", "self", ".", "p", ".", "line", "(", "xd", ",", "yd", ",", "color", "=", "pal", "[", "idx", "]", ",", "legend", "=", "d", "[", "2", "]", "+", "\"dev\"", ",", "line_width", "=", "2.0", ",", "line_dash", "=", "'dotted'", ")", "\n", "", "self", ".", "p", ".", "legend", ".", "background_fill_alpha", "=", "0.7", "\n", "self", ".", "p", ".", "xaxis", ".", "axis_label", "=", "xaxis_legend", "[", "self", ".", "param", "]", "\n", "self", ".", "p", ".", "yaxis", ".", "axis_label", "=", "'Accuracy'", "\n", "\n"]], "home.repos.pwc.inspect_result.palmagro_gg2vec.gg2vec.composite_experiment.composite_experiment.ltype_prediction": [[28, 39], ["pallete", "enumerate", "experiment", "experiment.ltype_prediction", "composite_experiment.composite_experiment.p.line", "composite_experiment.composite_experiment.p.line"], "methods", ["home.repos.pwc.inspect_result.palmagro_gg2vec.gg2vec.composite_experiment.composite_experiment.ltype_prediction"], ["", "", "def", "ltype_prediction", "(", "self", ",", "a", ",", "b", ",", "jump", ",", "dev", ")", ":", "\n", "        ", "pal", "=", "pallete", "(", "\"db\"", ")", "\n", "for", "idx", ",", "d", "in", "enumerate", "(", "self", ".", "ds", ")", ":", "\n", "            ", "e", "=", "experiment", "(", "d", "[", "0", "]", ",", "7474", ",", "user", ",", "pswd", ",", "d", "[", "1", "]", ",", "\"normal\"", ",", "self", ".", "param", ",", "self", ".", "trainset_p", ",", "self", ".", "iteraciones", ")", "\n", "x", ",", "y", ",", "xd", ",", "yd", "=", "e", ".", "ltype_prediction", "(", "a", ",", "b", ",", "jump", ")", "\n", "self", ".", "p", ".", "line", "(", "x", ",", "y", ",", "color", "=", "pal", "[", "idx", "]", ",", "legend", "=", "d", "[", "2", "]", ",", "line_width", "=", "2.0", ")", "\n", "if", "(", "dev", ")", ":", "\n", "                ", "self", ".", "p", ".", "line", "(", "xd", ",", "yd", ",", "color", "=", "pal", "[", "idx", "]", ",", "legend", "=", "d", "[", "2", "]", "+", "\"dev\"", ",", "line_width", "=", "2.0", ",", "line_dash", "=", "'dotted'", ")", "\n", "", "self", ".", "p", ".", "legend", ".", "background_fill_alpha", "=", "0.5", "\n", "self", ".", "p", ".", "xaxis", ".", "axis_label", "=", "xaxis_legend", "[", "self", ".", "param", "]", "\n", "self", ".", "p", ".", "yaxis", ".", "axis_label", "=", "'Accuracy'", "\n", "\n"]], "home.repos.pwc.inspect_result.palmagro_gg2vec.gg2vec.composite_experiment.composite_experiment.link_prediction": [[41, 52], ["pallete", "enumerate", "experiment", "experiment.link_prediction", "composite_experiment.composite_experiment.p.line", "composite_experiment.composite_experiment.p.line"], "methods", ["home.repos.pwc.inspect_result.palmagro_gg2vec.gg2vec.composite_experiment.composite_experiment.link_prediction"], ["", "", "def", "link_prediction", "(", "self", ",", "traversals", ",", "a", ",", "b", ",", "jump", ",", "dev", ",", "metrica", ",", "filtrado", ")", ":", "\n", "        ", "pal", "=", "pallete", "(", "\"db\"", ")", "\n", "for", "idx", ",", "d", "in", "enumerate", "(", "self", ".", "ds", ")", ":", "\n", "            ", "e", "=", "experiment", "(", "d", "[", "0", "]", ",", "7474", ",", "user", ",", "pswd", ",", "d", "[", "1", "]", ",", "\"normal\"", ",", "self", ".", "param", ",", "self", ".", "trainset_p", ",", "self", ".", "iteraciones", ")", "\n", "x", ",", "y", ",", "xd", ",", "yd", "=", "e", ".", "link_prediction", "(", "traversals", ",", "a", ",", "b", ",", "jump", ",", "metrica", ",", "filtrado", ")", "\n", "self", ".", "p", ".", "line", "(", "x", ",", "y", ",", "color", "=", "pal", "[", "idx", "]", ",", "legend", "=", "d", "[", "2", "]", ",", "line_width", "=", "2.0", ")", "\n", "if", "(", "dev", ")", ":", "\n", "                ", "self", ".", "p", ".", "line", "(", "xd", ",", "yd", ",", "color", "=", "pal", "[", "idx", "]", ",", "legend", "=", "d", "[", "2", "]", "+", "\"dev\"", ",", "line_width", "=", "2.0", ",", "line_dash", "=", "'dotted'", ")", "\n", "", "self", ".", "p", ".", "legend", ".", "background_fill_alpha", "=", "0.5", "\n", "self", ".", "p", ".", "xaxis", ".", "axis_label", "=", "xaxis_legend", "[", "self", ".", "param", "]", "\n", "self", ".", "p", ".", "yaxis", ".", "axis_label", "=", "'MRR'", "\n", "\n"]], "home.repos.pwc.inspect_result.palmagro_gg2vec.gg2vec.composite_experiment.composite_experiment.traversal_prediction": [[53, 64], ["pallete", "enumerate", "experiment", "experiment.traversal_prediction", "composite_experiment.composite_experiment.p.line", "composite_experiment.composite_experiment.p.line", "str"], "methods", ["home.repos.pwc.inspect_result.palmagro_gg2vec.gg2vec.composite_experiment.composite_experiment.traversal_prediction"], ["", "", "def", "traversal_prediction", "(", "self", ",", "traversals", ",", "a", ",", "b", ",", "jump", ",", "dev", ",", "metrica", ",", "filtrado", ")", ":", "\n", "        ", "pal", "=", "pallete", "(", "\"traversals\"", ")", "\n", "for", "idx", ",", "t", "in", "enumerate", "(", "traversals", ")", ":", "\n", "            ", "e", "=", "experiment", "(", "self", ".", "ds", "[", "0", "]", ",", "7474", ",", "user", ",", "pswd", ",", "self", ".", "ds", "[", "1", "]", ",", "\"normal\"", ",", "self", ".", "param", ",", "self", ".", "trainset_p", ",", "self", ".", "iteraciones", ")", "\n", "x", ",", "y", ",", "xd", ",", "yd", "=", "e", ".", "traversal_prediction", "(", "t", ",", "a", ",", "b", ",", "jump", ",", "metrica", ",", "filtrado", ")", "\n", "self", ".", "p", ".", "line", "(", "x", ",", "y", ",", "color", "=", "pal", "[", "idx", "]", ",", "legend", "=", "\"T\"", "+", "str", "(", "idx", "+", "1", ")", ",", "line_width", "=", "2.0", ")", "\n", "if", "(", "dev", ")", ":", "\n", "                ", "self", ".", "p", ".", "line", "(", "xd", ",", "yd", ",", "color", "=", "pal", "[", "idx", "]", ",", "legend", "=", "self", ".", "ds", "[", "2", "]", "+", "\"dev\"", ",", "line_width", "=", "2.0", ",", "line_dash", "=", "'dotted'", ")", "\n", "", "self", ".", "p", ".", "legend", ".", "background_fill_alpha", "=", "0.5", "\n", "self", ".", "p", ".", "xaxis", ".", "axis_label", "=", "xaxis_legend", "[", "self", ".", "param", "]", "\n", "self", ".", "p", ".", "yaxis", ".", "axis_label", "=", "'MRR'", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.palmagro_gg2vec.gg2vec.overs.train_sentence_sg": [[3, 32], ["len", "len", "model.random.randint", "max", "enumerate", "gensim.models.word2vec.train_sg_pair", "model.random.rand"], "function", ["None"], ["def", "train_sentence_sg", "(", "model", ",", "sentence", ",", "alpha", ",", "work", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Update skip-gram model by training on a single sentence.\n\n    The sentence is a list of string tokens, which are looked up in the model's\n    vocab dictionary. Called internally from `Word2Vec.train()`.\n\n    This is the non-optimized, Python version. If you have cython installed, gensim\n    will use the optimized version from word2vec_inner instead.\n\n    \"\"\"", "\n", "word_vocabs", "=", "[", "model", ".", "vocab", "[", "w", "]", "for", "w", "in", "sentence", "if", "w", "in", "model", ".", "vocab", "and", "\n", "model", ".", "vocab", "[", "w", "]", ".", "sample_int", ">", "model", ".", "random", ".", "rand", "(", ")", "*", "2", "**", "32", "]", "\n", "\n", "\n", "#    for pos, word in enumerate(word_vocabs):", "\n", "if", "len", "(", "word_vocabs", ")", ">", "0", ":", "\n", "        ", "pos", "=", "0", "\n", "word", "=", "word_vocabs", "[", "0", "]", "\n", "reduced_window", "=", "model", ".", "random", ".", "randint", "(", "model", ".", "window", ")", "# `b` in the original word2vec code", "\n", "\n", "# now go over all words from the (reduced) window, predicting each one in turn", "\n", "start", "=", "max", "(", "0", ",", "pos", "-", "model", ".", "window", "+", "reduced_window", ")", "\n", "for", "pos2", ",", "word2", "in", "enumerate", "(", "word_vocabs", "[", "start", ":", "(", "pos", "+", "model", ".", "window", "+", "1", "-", "reduced_window", ")", "]", ",", "start", ")", ":", "\n", "# don't train on the `word` itself", "\n", "            ", "if", "pos2", "!=", "pos", ":", "\n", "                ", "word2vec", ".", "train_sg_pair", "(", "model", ",", "model", ".", "index2word", "[", "word", ".", "index", "]", ",", "word2", ".", "index", ",", "alpha", ")", "\n", "\n", "", "", "", "return", "len", "(", "word_vocabs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.palmagro_gg2vec.gg2vec.overs.train_sentence_cbow": [[33, 59], ["model.random.randint", "max", "enumerate", "gensim.models.word2vec.np_sum", "gensim.models.word2vec.train_cbow_pair", "len", "len", "enumerate", "model.random.rand"], "function", ["None"], ["", "def", "train_sentence_cbow", "(", "model", ",", "sentence", ",", "alpha", ",", "work", "=", "None", ",", "neu1", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Update CBOW model by training on a single sentence.\n\n    The sentence is a list of string tokens, which are looked up in the model's\n    vocab dictionary. Called internally from `Word2Vec.train()`.\n\n    This is the non-optimized, Python version. If you have cython installed, gensim\n    will use the optimized version from word2vec_inner instead.\n\n    \"\"\"", "\n", "word_vocabs", "=", "[", "model", ".", "vocab", "[", "w", "]", "for", "w", "in", "sentence", "if", "w", "in", "model", ".", "vocab", "and", "\n", "model", ".", "vocab", "[", "w", "]", ".", "sample_int", ">", "model", ".", "random", ".", "rand", "(", ")", "*", "2", "**", "32", "]", "\n", "pos", "=", "0", "\n", "word", "=", "word_vocabs", "[", "0", "]", "\n", "context", "=", "word_vocabs", "[", "1", ":", "]", "\n", "reduced_window", "=", "model", ".", "random", ".", "randint", "(", "model", ".", "window", ")", "# `b` in the original word2vec code", "\n", "start", "=", "max", "(", "0", ",", "pos", "-", "model", ".", "window", "+", "reduced_window", ")", "\n", "window_pos", "=", "enumerate", "(", "word_vocabs", "[", "start", ":", "(", "pos", "+", "model", ".", "window", "+", "1", "-", "reduced_window", ")", "]", ",", "start", ")", "\n", "word2_indices", "=", "[", "word2", ".", "index", "for", "pos2", ",", "word2", "in", "enumerate", "(", "context", ")", "if", "(", "word2", "is", "not", "None", "and", "pos2", "!=", "pos", ")", "]", "\n", "l1", "=", "word2vec", ".", "np_sum", "(", "model", ".", "syn0", "[", "word2_indices", "]", ",", "axis", "=", "0", ")", "# 1 x vector_size", "\n", "if", "word2_indices", "and", "model", ".", "cbow_mean", ":", "\n", "        ", "l1", "/=", "len", "(", "word2_indices", ")", "\n", "", "word2vec", ".", "train_cbow_pair", "(", "model", ",", "word", ",", "word2_indices", ",", "l1", ",", "alpha", ")", "\n", "\n", "return", "len", "(", "word_vocabs", ")", "\n", "\n"]]}