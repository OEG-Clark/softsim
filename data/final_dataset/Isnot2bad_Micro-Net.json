{"home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.None.read_data.get_generator": [[16, 66], ["keras.preprocessing.image.ImageDataGenerator", "keras.preprocessing.image.ImageDataGenerator.flow_from_directory", "keras.preprocessing.image.ImageDataGenerator", "keras.preprocessing.image.ImageDataGenerator.flow_from_directory", "zip", "len", "print", "os.path.join", "os.path.join"], "function", ["None"], ["def", "get_generator", "(", "subset", ")", ":", "\n", "    ", "\"\"\"\n    Get dataset generator\n\n    :param subset: The dataset to be returned. \"training\" or \"validation\"\n    :return:\n    \"\"\"", "\n", "assert", "subset", "==", "\"training\"", "or", "subset", "==", "\"validation\"", "\n", "\n", "image_datagen", "=", "ImageDataGenerator", "(", "\n", "horizontal_flip", "=", "True", ",", "\n", "validation_split", "=", "FLAGS", ".", "validation_split", ",", "\n", "rescale", "=", "1.", "/", "255.", ",", "\n", ")", "\n", "image_generator", "=", "image_datagen", ".", "flow_from_directory", "(", "\n", "directory", "=", "\n", "os", ".", "path", ".", "join", "(", "\n", "FLAGS", ".", "dataset_dir", ",", "FLAGS", ".", "cropped", ",", "\"train\"", ",", "FLAGS", ".", "images_folder_name", ",", "\n", ")", ",", "\n", "target_size", "=", "(", "FLAGS", ".", "resize_size", ",", "FLAGS", ".", "resize_size", ")", ",", "\n", "class_mode", "=", "None", ",", "\n", "color_mode", "=", "\"rgb\"", ",", "\n", "batch_size", "=", "FLAGS", ".", "batch_size", ",", "\n", "seed", "=", "FLAGS", ".", "seed", ",", "\n", "subset", "=", "subset", ",", "\n", "shuffle", "=", "False", "if", "subset", "==", "\"validation\"", "else", "True", ",", "\n", ")", "\n", "\n", "label_datagen", "=", "ImageDataGenerator", "(", "\n", "horizontal_flip", "=", "True", ",", "\n", "validation_split", "=", "FLAGS", ".", "validation_split", ",", "\n", ")", "\n", "label_generator", "=", "label_datagen", ".", "flow_from_directory", "(", "\n", "directory", "=", "\n", "os", ".", "path", ".", "join", "(", "\n", "FLAGS", ".", "dataset_dir", ",", "FLAGS", ".", "cropped", ",", "\"train\"", ",", "FLAGS", ".", "labels_folder_name", ",", "\n", ")", ",", "\n", "target_size", "=", "(", "FLAGS", ".", "resize_size", ",", "FLAGS", ".", "resize_size", ")", ",", "\n", "class_mode", "=", "None", ",", "\n", "color_mode", "=", "\"grayscale\"", ",", "\n", "batch_size", "=", "FLAGS", ".", "batch_size", ",", "\n", "seed", "=", "FLAGS", ".", "seed", ",", "\n", "subset", "=", "subset", ",", "\n", "shuffle", "=", "False", "if", "subset", "==", "\"validation\"", "else", "True", ",", "\n", ")", "\n", "\n", "train_generator", "=", "zip", "(", "image_generator", ",", "label_generator", ")", "\n", "steps_per_epoch", "=", "len", "(", "label_generator", ")", "\n", "print", "(", "\"steps_per_epoch =\"", ",", "steps_per_epoch", ")", "\n", "return", "train_generator", ",", "steps_per_epoch", "\n", "", ""]], "home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.None.config._get_flags": [[8, 42], ["tensorflow.app.flags.DEFINE_integer", "tensorflow.app.flags.DEFINE_integer", "tensorflow.app.flags.DEFINE_float", "tensorflow.app.flags.DEFINE_float", "tensorflow.app.flags.DEFINE_float", "tensorflow.app.flags.DEFINE_float", "tensorflow.app.flags.DEFINE_boolean", "tensorflow.app.flags.DEFINE_boolean", "tensorflow.app.flags.DEFINE_float", "tensorflow.app.flags.DEFINE_integer", "tensorflow.app.flags.DEFINE_integer", "tensorflow.app.flags.DEFINE_integer", "tensorflow.app.flags.DEFINE_integer", "tensorflow.app.flags.DEFINE_integer", "tensorflow.app.flags.DEFINE_integer", "tensorflow.app.flags.DEFINE_integer", "tensorflow.app.flags.DEFINE_boolean", "tensorflow.app.flags.DEFINE_string", "tensorflow.app.flags.DEFINE_string", "tensorflow.app.flags.DEFINE_string", "tensorflow.app.flags.DEFINE_string", "os.path.expanduser", "os.path.expanduser"], "function", ["None"], ["def", "_get_flags", "(", ")", ":", "\n", "    ", "\"\"\"\n    Get tensorflow configuration parameters\n\n    :return: FLAG object\n    \"\"\"", "\n", "flags", "=", "tf", ".", "app", ".", "flags", ".", "FLAGS", "\n", "tf", ".", "app", ".", "flags", ".", "DEFINE_integer", "(", "\"batch_size\"", ",", "2", ",", "help", "=", "\"batch size\"", ")", "\n", "tf", ".", "app", ".", "flags", ".", "DEFINE_integer", "(", "\"epoch\"", ",", "20", ",", "help", "=", "\"the number of epoch\"", ")", "\n", "tf", ".", "app", ".", "flags", ".", "DEFINE_float", "(", "\"lr\"", ",", "1e-3", ",", "\"learning rate\"", ")", "\n", "tf", ".", "app", ".", "flags", ".", "DEFINE_float", "(", "\"decay\"", ",", "flags", ".", "lr", "/", "flags", ".", "epoch", ",", "\"decay of learning rate \"", ")", "\n", "tf", ".", "app", ".", "flags", ".", "DEFINE_float", "(", "\"momentum\"", ",", "0.9", ",", "\"optimizer momentum parameter\"", ")", "\n", "tf", ".", "app", ".", "flags", ".", "DEFINE_float", "(", "\"validation_split\"", ",", "0.1", ",", "\"proportion of val dataset\"", ")", "\n", "\n", "tf", ".", "app", ".", "flags", ".", "DEFINE_boolean", "(", "\"use_gpus\"", ",", "False", ",", "\"whether to use multi-GPU\"", ")", "\n", "tf", ".", "app", ".", "flags", ".", "DEFINE_boolean", "(", "\"use_reg_l2\"", ",", "False", ",", "\"whether to use l2 regularization\"", ")", "\n", "tf", ".", "app", ".", "flags", ".", "DEFINE_float", "(", "\"l2\"", ",", "5e-4", ",", "\"l2 regularization parameter\"", ")", "\n", "\n", "tf", ".", "app", ".", "flags", ".", "DEFINE_integer", "(", "\"seed\"", ",", "1", ",", "help", "=", "\"Random number seed\"", ")", "\n", "tf", ".", "app", ".", "flags", ".", "DEFINE_integer", "(", "\"nb_classes\"", ",", "2", ",", "help", "=", "\"number of categories\"", ")", "\n", "tf", ".", "app", ".", "flags", ".", "DEFINE_integer", "(", "\"image_size\"", ",", "5000", ",", "help", "=", "\"original image size\"", ")", "\n", "tf", ".", "app", ".", "flags", ".", "DEFINE_integer", "(", "\"sub_size\"", ",", "500", ",", "help", "=", "\"cropped image size\"", ")", "\n", "tf", ".", "app", ".", "flags", ".", "DEFINE_integer", "(", "\"resize_size\"", ",", "500", ",", "help", "=", "\"resized image size\"", ")", "\n", "tf", ".", "app", ".", "flags", ".", "DEFINE_integer", "(", "\"device_id\"", ",", "1", ",", "help", "=", "\"The GPU to be used\"", ")", "\n", "tf", ".", "app", ".", "flags", ".", "DEFINE_integer", "(", "\"workers\"", ",", "1", ",", "help", "=", "\"number of data pre-load threads\"", ")", "\n", "\n", "tf", ".", "app", ".", "flags", ".", "DEFINE_boolean", "(", "\"pre_trained\"", ",", "False", ",", "\"whether to load the pre-training model\"", ")", "\n", "\n", "tf", ".", "app", ".", "flags", ".", "DEFINE_string", "(", "\"dataset_dir\"", ",", "os", ".", "path", ".", "expanduser", "(", "\"~/DATASET/AerialImageDataset\"", ")", ",", "\"dataset directory\"", ")", "\n", "tf", ".", "app", ".", "flags", ".", "DEFINE_string", "(", "\"cropped\"", ",", "os", ".", "path", ".", "expanduser", "(", "\"cropped\"", ")", ",", "\"folder for storing dataset after cropped\"", ")", "\n", "tf", ".", "app", ".", "flags", ".", "DEFINE_string", "(", "\"images_folder_name\"", ",", "\"images\"", ",", "\"Identifier used to identify whether the file is image\"", ")", "\n", "tf", ".", "app", ".", "flags", ".", "DEFINE_string", "(", "\"labels_folder_name\"", ",", "\"gt\"", ",", "\"Identifier used to identify whether the file is label\"", ")", "\n", "\n", "return", "flags", "\n", "\n"]], "home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.None._test_read_data.test_get_generator": [[12, 57], ["read_data.get_generator", "iter", "print", "print"], "function", ["home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.None.read_data.get_generator"], ["def", "test_get_generator", "(", ")", ":", "\n", "    ", "\"\"\"\n    get_generator() test case\n\n    :return:\n    \"\"\"", "\n", "# train_generator, image_datagen, label_datagen = get_generator()", "\n", "train_generator", ",", "steps_per_epoch", "=", "get_generator", "(", "\n", "subset", "=", "\"validation\"", "# \"training\" / \"validation\"", "\n", ")", "\n", "\n", "i", "=", "0", "\n", "for", "image_batch", ",", "label_batch", "in", "iter", "(", "train_generator", ")", ":", "\n", "        ", "print", "(", "\"image_batch.shape, label_batch.shape =\"", ",", "image_batch", ".", "shape", ",", "label_batch", ".", "shape", ")", "\n", "# image_batch = image_datagen.standardize(image_batch)", "\n", "# label_batch = label_datagen.standardize(label_batch)", "\n", "\n", "print", "(", "image_batch", ".", "dtype", ",", "label_batch", ".", "dtype", ")", "\n", "# print(image_batch[0])", "\n", "# print(label_batch[0])", "\n", "\n", "# # plt.figure(num='Sample', figsize=(8, 8))", "\n", "#", "\n", "# plt.subplot(2, 2, 1)", "\n", "# plt.title('Image')", "\n", "# plt.imshow(image_batch[0, ..., 0])", "\n", "#", "\n", "# plt.subplot(2, 2, 2)", "\n", "# plt.title('Label')", "\n", "# plt.imshow(label_batch[0, ..., 0])", "\n", "# plt.axis('off')", "\n", "#", "\n", "# plt.subplot(2, 2, 3)", "\n", "# plt.title('Image')", "\n", "# plt.imshow(image_batch[1, ..., 0])", "\n", "#", "\n", "# plt.subplot(2, 2, 4)", "\n", "# plt.title('Label')", "\n", "# plt.imshow(label_batch[1, ..., 0])", "\n", "# plt.axis('off')", "\n", "#", "\n", "# plt.show()", "\n", "i", "+=", "1", "\n", "if", "i", "==", "5", ":", "\n", "            ", "break", "\n", "\n"]], "home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.None._test_utils.test_get_city_and_no": [[4, 11], ["utils.get_city_and_no"], "function", ["home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.None.utils.get_city_and_no"], ["def", "test_get_city_and_no", "(", ")", ":", "\n", "    ", "\"\"\"\n    get_city_and_no() test case\n\n    :return:\n    \"\"\"", "\n", "get_city_and_no", "(", "image_path", "=", "\"/Users/chen/TIFF_DATA/AerialImageDataset/train/images/austin26.png\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.None._test_utils.test_crop_dataset": [[13, 24], ["utils.crop_dataset", "os.path.join"], "function", ["home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.None.utils.crop_dataset"], ["", "def", "test_crop_dataset", "(", ")", ":", "\n", "    ", "\"\"\"\n    crop_dataset() test case\n\n    :return:\n    \"\"\"", "\n", "crop_dataset", "(", "output_dir", "=", "os", ".", "path", ".", "join", "(", "FLAGS", ".", "dataset_dir", ",", "FLAGS", ".", "cropped", ")", ",", "\n", "sub_size", "=", "FLAGS", ".", "sub_size", ",", "\n", "stride", "=", "FLAGS", ".", "sub_size", "//", "2", ",", "\n", "city_names_needed", "=", "[", "\"austin\"", "]", ",", "\n", "percent", "=", "0.5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.None.utils.TrainValTensorBoard.__init__": [[27, 32], ["os.path.join", "super().__init__", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.None.utils.TrainValTensorBoard.__init__"], ["def", "__init__", "(", "self", ",", "log_dir", "=", "'./logs'", ",", "**", "kwargs", ")", ":", "\n", "        ", "training_log_dir", "=", "os", ".", "path", ".", "join", "(", "log_dir", ",", "'training'", ")", "\n", "super", "(", "TrainValTensorBoard", ",", "self", ")", ".", "__init__", "(", "training_log_dir", ",", "**", "kwargs", ")", "\n", "\n", "self", ".", "val_log_dir", "=", "os", ".", "path", ".", "join", "(", "log_dir", ",", "'validation'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.None.utils.TrainValTensorBoard.set_model": [[33, 36], ["tensorflow.summary.FileWriter", "super().set_model"], "methods", ["home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.None.utils.TrainValTensorBoard.set_model"], ["", "def", "set_model", "(", "self", ",", "model", ")", ":", "\n", "        ", "self", ".", "val_writer", "=", "tf", ".", "summary", ".", "FileWriter", "(", "self", ".", "val_log_dir", ")", "\n", "super", "(", "TrainValTensorBoard", ",", "self", ")", ".", "set_model", "(", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.None.utils.TrainValTensorBoard.on_epoch_end": [[37, 50], ["val_logs.items", "utils.TrainValTensorBoard.val_writer.flush", "super().on_epoch_end", "k.replace", "tensorflow.Summary", "tensorflow.Summary.value.add", "value.item", "utils.TrainValTensorBoard.val_writer.add_summary", "logs.items", "k.startswith", "logs.items", "k.startswith"], "methods", ["home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.None.utils.TrainValTensorBoard.on_epoch_end"], ["", "def", "on_epoch_end", "(", "self", ",", "epoch", ",", "logs", "=", "None", ")", ":", "\n", "        ", "logs", "=", "logs", "or", "{", "}", "\n", "val_logs", "=", "{", "k", ".", "replace", "(", "'val_'", ",", "''", ")", ":", "v", "for", "k", ",", "v", "in", "logs", ".", "items", "(", ")", "if", "k", ".", "startswith", "(", "'val_'", ")", "}", "\n", "for", "name", ",", "value", "in", "val_logs", ".", "items", "(", ")", ":", "\n", "            ", "summary", "=", "tf", ".", "Summary", "(", ")", "\n", "summary_value", "=", "summary", ".", "value", ".", "add", "(", ")", "\n", "summary_value", ".", "simple_value", "=", "value", ".", "item", "(", ")", "\n", "summary_value", ".", "tag", "=", "name", "\n", "self", ".", "val_writer", ".", "add_summary", "(", "summary", ",", "epoch", ")", "\n", "", "self", ".", "val_writer", ".", "flush", "(", ")", "\n", "\n", "logs", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "logs", ".", "items", "(", ")", "if", "not", "k", ".", "startswith", "(", "'val_'", ")", "}", "\n", "super", "(", "TrainValTensorBoard", ",", "self", ")", ".", "on_epoch_end", "(", "epoch", ",", "logs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.None.utils.TrainValTensorBoard.on_train_end": [[51, 54], ["super().on_train_end", "utils.TrainValTensorBoard.val_writer.close"], "methods", ["home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.None.utils.TrainValTensorBoard.on_train_end"], ["", "def", "on_train_end", "(", "self", ",", "logs", "=", "None", ")", ":", "\n", "        ", "super", "(", "TrainValTensorBoard", ",", "self", ")", ".", "on_train_end", "(", "logs", ")", "\n", "self", ".", "val_writer", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.None.utils.get_city_and_no": [[56, 75], ["CITYS.values", "[].split", "image_path.startswith", "int", "image_path.split", "image_path.split"], "function", ["None"], ["", "", "def", "get_city_and_no", "(", "image_path", ")", ":", "\n", "    ", "\"\"\"\n    Get the city name and serial number of the file based on the incoming image path\n\n    :param image_path: image path\n    :return: (city name, serial number)\n    \"\"\"", "\n", "image_path", "=", "image_path", ".", "split", "(", "\"/\"", ")", "[", "-", "1", "]", ".", "split", "(", "\".\"", ")", "[", "0", "]", "\n", "city_name", "=", "\"\"", "\n", "no", "=", "-", "1", "\n", "has_found", "=", "False", "\n", "for", "value", "in", "CITYS", ".", "values", "(", ")", ":", "\n", "        ", "if", "image_path", ".", "startswith", "(", "value", ")", ":", "\n", "            ", "city_name", "=", "value", "\n", "no", "=", "int", "(", "image_path", ".", "split", "(", "city_name", ")", "[", "-", "1", "]", ")", "\n", "has_found", "=", "True", "\n", "break", "\n", "", "", "assert", "has_found", ",", "\"City not found!\"", "\n", "return", "city_name", ",", "no", "\n", "\n"]], "home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.None.utils.crop_dataset": [[77, 124], ["isinstance", "isinstance", "glob.glob", "tqdm.tqdm", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "os.path.join", "image_path.replace", "utils.get_city_and_no", "print", "scipy.misc.imread", "scipy.misc.imread", "range", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "range", "os.path.join", "os.path.join.replace", "scipy.misc.imsave", "scipy.misc.imsave", "int"], "function", ["home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.None.utils.get_city_and_no"], ["", "def", "crop_dataset", "(", "output_dir", ",", "sub_size", ",", "stride", ",", "city_names_needed", ",", "percent", ")", ":", "\n", "    ", "\"\"\"\n    Crop the dataset\n\n    :param output_dir: Output path\n    :param sub_size: Sub-image size\n    :param stride: stride\n    :param city_names_needed: List of city names to be cropped\n    :param percent: Percentage of original images for each city to be cropped\n    :return: None\n    \"\"\"", "\n", "assert", "isinstance", "(", "city_names_needed", ",", "list", ")", "\n", "assert", "isinstance", "(", "percent", ",", "float", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "output_dir", ",", "\"train\"", ",", "FLAGS", ".", "images_folder_name", ",", "FLAGS", ".", "images_folder_name", ")", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "output_dir", ",", "\"train\"", ",", "FLAGS", ".", "images_folder_name", ",", "FLAGS", ".", "images_folder_name", ")", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "output_dir", ",", "\"train\"", ",", "FLAGS", ".", "labels_folder_name", ",", "FLAGS", ".", "labels_folder_name", ")", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "output_dir", ",", "\"train\"", ",", "FLAGS", ".", "labels_folder_name", ",", "FLAGS", ".", "labels_folder_name", ")", ")", "\n", "\n", "", "image_paths", "=", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "FLAGS", ".", "dataset_dir", ",", "\"train\"", ",", "FLAGS", ".", "images_folder_name", ",", "\"*.png\"", ")", ")", "\n", "for", "image_path", "in", "tqdm", "(", "image_paths", ")", ":", "\n", "        ", "label_path", "=", "image_path", ".", "replace", "(", "\"images\"", ",", "\"gt\"", ")", "\n", "city_name", ",", "city_no", "=", "get_city_and_no", "(", "image_path", ")", "\n", "\n", "if", "not", "(", "city_name", "in", "city_names_needed", "and", "city_no", "<", "int", "(", "36", "*", "percent", ")", ")", ":", "\n", "            ", "continue", "\n", "", "print", "(", "\"city_name = %s, city_no = %d\"", "%", "(", "city_name", ",", "city_no", ")", ")", "\n", "\n", "image", "=", "misc", ".", "imread", "(", "image_path", ")", "\n", "label", "=", "misc", ".", "imread", "(", "label_path", ")", "\n", "\n", "label", "[", "label", "==", "255", "]", "=", "1", "\n", "h", ",", "w", "=", "label", ".", "shape", "\n", "\n", "sub_counter", "=", "1", "\n", "for", "h_pixel", "in", "range", "(", "0", ",", "h", "-", "sub_size", "+", "1", ",", "stride", ")", ":", "\n", "            ", "for", "w_pixel", "in", "range", "(", "0", ",", "w", "-", "sub_size", "+", "1", ",", "stride", ")", ":", "\n", "                ", "sub_image", "=", "image", "[", "h_pixel", ":", "h_pixel", "+", "sub_size", ",", "w_pixel", ":", "w_pixel", "+", "sub_size", ",", ":", "]", "\n", "sub_label", "=", "label", "[", "h_pixel", ":", "h_pixel", "+", "sub_size", ",", "w_pixel", ":", "w_pixel", "+", "sub_size", "]", "\n", "sub_image_path", "=", "os", ".", "path", ".", "join", "(", "\n", "output_dir", ",", "\"train\"", ",", "FLAGS", ".", "images_folder_name", ",", "FLAGS", ".", "images_folder_name", ",", "\n", "city_name", "+", "\"-%d-%d.png\"", "%", "(", "city_no", ",", "sub_counter", ")", ")", "\n", "sub_label_path", "=", "sub_image_path", ".", "replace", "(", "\"images\"", ",", "\"gt\"", ")", "\n", "\n", "misc", ".", "imsave", "(", "name", "=", "sub_image_path", ",", "arr", "=", "sub_image", ")", "\n", "misc", ".", "imsave", "(", "name", "=", "sub_label_path", ",", "arr", "=", "sub_label", ")", "\n", "sub_counter", "+=", "1", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.Metrics.miou.miou": [[11, 59], ["keras.backend.reshape", "keras.backend.argmax", "keras.backend.reshape", "tensorflow.contrib.metrics.confusion_matrix", "tensorflow.cast", "range", "tensorflow.cond", "keras.backend.sum", "tensorflow.cond", "tensorflow.cond", "tensorflow.equal", "tensorflow.equal", "tensorflow.equal", "tensorflow.cast", "tensorflow.cast", "tensorflow.cast", "tensorflow.cast", "keras.backend.sum", "keras.backend.sum", "tensorflow.cast"], "function", ["None"], ["def", "miou", "(", "y_true", ",", "y_pred", ",", "n_classes", "=", "FLAGS", ".", "nb_classes", ")", ":", "\n", "    ", "\"\"\"\n    Calculate mIOU\n\n    :param y_true: labels of one batch, shape=(batch_size, H, W, n_classes) (one-hot format)\n    :param y_pred: predicts of one batch, shape=(batch_size, H, W, n_classes)\n    :param n_classes: Number of categories\n\n    :return: Average of the IOU for each category\n    \"\"\"", "\n", "\n", "class_label", "=", "K", ".", "reshape", "(", "y_true", ",", "shape", "=", "[", "-", "1", "]", ")", "\n", "\n", "class_pred", "=", "K", ".", "argmax", "(", "y_pred", ",", "-", "1", ")", "\n", "class_pred", "=", "K", ".", "reshape", "(", "class_pred", ",", "shape", "=", "[", "-", "1", "]", ")", "\n", "\n", "confusion_metrics", "=", "confusion_matrix", "(", "labels", "=", "class_label", ",", "\n", "predictions", "=", "class_pred", ",", "\n", "num_classes", "=", "n_classes", ")", "\n", "\n", "denominator", "=", "tf", ".", "cast", "(", "n_classes", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "avg_iou", "=", "0.", "\n", "\n", "for", "class_index", "in", "range", "(", "0", ",", "n_classes", ")", ":", "\n", "        ", "sum_of_one_class", "=", "K", ".", "sum", "(", "confusion_metrics", "[", "class_index", "]", ")", "\n", "\n", "denominator", "=", "tf", ".", "cond", "(", "\n", "tf", ".", "equal", "(", "sum_of_one_class", ",", "0", ")", ",", "\n", "lambda", ":", "tf", ".", "cast", "(", "denominator", "-", "1", ",", "dtype", "=", "tf", ".", "float32", ")", ",", "\n", "lambda", ":", "tf", ".", "cast", "(", "denominator", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", ")", "\n", "\n", "# | X \u2229 Y |", "\n", "intersection", "=", "confusion_metrics", "[", "class_index", ",", "class_index", "]", "\n", "# | X | + | Y |", "\n", "union", "=", "K", ".", "sum", "(", "confusion_metrics", "[", "class_index", ",", ":", "]", ")", "+", "K", ".", "sum", "(", "confusion_metrics", "[", ":", ",", "class_index", "]", ")", "-", "intersection", "\n", "\n", "iou_one_class", "=", "tf", ".", "cond", "(", "\n", "tf", ".", "equal", "(", "intersection", ",", "0", ")", ",", "\n", "lambda", ":", "0.", ",", "\n", "lambda", ":", "tf", ".", "cast", "(", "intersection", "/", "union", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", ")", "\n", "avg_iou", "+=", "iou_one_class", "\n", "\n", "", "return", "tf", ".", "cond", "(", "\n", "tf", ".", "equal", "(", "denominator", ",", "0", ")", ",", "\n", "lambda", ":", "tf", ".", "cast", "(", "0", ",", "dtype", "=", "tf", ".", "float32", ")", ",", "\n", "lambda", ":", "tf", ".", "cast", "(", "avg_iou", "/", "denominator", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.Models._test_micro_net.test_micro_net": [[7, 15], ["micro_net", "micro_net.summary"], "function", ["home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.Models.micro_net.micro_net"], ["def", "test_micro_net", "(", ")", ":", "\n", "    ", "\"\"\"\n    micro_net() test case\n\n    :return:\n    \"\"\"", "\n", "model", "=", "micro_net", "(", "nb_classes", "=", "2", ",", "inputs_shape", "=", "(", "500", ",", "500", ",", "3", ")", ")", "\n", "model", ".", "summary", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.Models.unet.unet": [[8, 87], ["keras.layers.Input", "keras.models.Model", "keras.layers.Conv2D", "keras.layers.Conv2D", "keras.layers.MaxPooling2D", "keras.layers.Conv2D", "keras.layers.Conv2D", "keras.layers.MaxPooling2D", "keras.layers.Conv2D", "keras.layers.Conv2D", "keras.layers.MaxPooling2D", "keras.layers.Conv2D", "keras.layers.Conv2D", "keras.layers.MaxPooling2D", "keras.layers.Conv2D", "keras.layers.Conv2D", "keras.layers.Deconv2D", "keras.layers.Cropping2D", "keras.layers.Concatenate", "keras.layers.Conv2D", "keras.layers.Conv2D", "keras.layers.Deconv2D", "keras.layers.Cropping2D", "keras.layers.Concatenate", "keras.layers.Conv2D", "keras.layers.Conv2D", "keras.layers.Deconv2D", "keras.layers.Concatenate", "keras.layers.Conv2D", "keras.layers.Conv2D", "keras.layers.Deconv2D", "keras.layers.Concatenate", "keras.layers.Conv2D", "keras.layers.Conv2D", "keras.layers.Conv2D"], "function", ["None"], ["def", "unet", "(", "inputs_shape", ",", "nb_classes", ",", "use_bias", "=", "False", ",", "activation", "=", "'relu'", ",", "kernel_initializer", "=", "'he_normal'", ")", ":", "\n", "    ", "inputs", "=", "Input", "(", "shape", "=", "inputs_shape", ")", "\n", "\n", "# Encoder", "\n", "conv1", "=", "Conv2D", "(", "64", ",", "3", ",", "use_bias", "=", "use_bias", ",", "activation", "=", "activation", ",", "padding", "=", "'same'", ",", "\n", "kernel_initializer", "=", "kernel_initializer", ")", "(", "inputs", ")", "\n", "conv1", "=", "Conv2D", "(", "64", ",", "3", ",", "use_bias", "=", "use_bias", ",", "activation", "=", "activation", ",", "padding", "=", "'same'", ",", "\n", "kernel_initializer", "=", "kernel_initializer", ")", "(", "conv1", ")", "\n", "pool1", "=", "MaxPooling2D", "(", "pool_size", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "'same'", ")", "(", "conv1", ")", "\n", "\n", "conv2", "=", "Conv2D", "(", "128", ",", "3", ",", "use_bias", "=", "use_bias", ",", "activation", "=", "activation", ",", "padding", "=", "'same'", ",", "\n", "kernel_initializer", "=", "kernel_initializer", ")", "(", "pool1", ")", "\n", "conv2", "=", "Conv2D", "(", "128", ",", "3", ",", "use_bias", "=", "use_bias", ",", "activation", "=", "activation", ",", "padding", "=", "'same'", ",", "\n", "kernel_initializer", "=", "kernel_initializer", ")", "(", "conv2", ")", "\n", "pool2", "=", "MaxPooling2D", "(", "pool_size", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "'same'", ")", "(", "conv2", ")", "\n", "\n", "conv3", "=", "Conv2D", "(", "256", ",", "3", ",", "use_bias", "=", "use_bias", ",", "activation", "=", "activation", ",", "padding", "=", "'same'", ",", "\n", "kernel_initializer", "=", "kernel_initializer", ")", "(", "pool2", ")", "\n", "conv3", "=", "Conv2D", "(", "256", ",", "3", ",", "use_bias", "=", "use_bias", ",", "activation", "=", "activation", ",", "padding", "=", "'same'", ",", "\n", "kernel_initializer", "=", "kernel_initializer", ")", "(", "conv3", ")", "\n", "pool3", "=", "MaxPooling2D", "(", "pool_size", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "'same'", ")", "(", "conv3", ")", "\n", "\n", "conv4", "=", "Conv2D", "(", "512", ",", "3", ",", "use_bias", "=", "use_bias", ",", "activation", "=", "activation", ",", "padding", "=", "'same'", ",", "\n", "kernel_initializer", "=", "kernel_initializer", ")", "(", "pool3", ")", "\n", "conv4", "=", "Conv2D", "(", "512", ",", "3", ",", "use_bias", "=", "use_bias", ",", "activation", "=", "activation", ",", "padding", "=", "'same'", ",", "\n", "kernel_initializer", "=", "kernel_initializer", ")", "(", "conv4", ")", "\n", "pool4", "=", "MaxPooling2D", "(", "pool_size", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "'same'", ")", "(", "conv4", ")", "\n", "\n", "conv5", "=", "Conv2D", "(", "1024", ",", "3", ",", "use_bias", "=", "use_bias", ",", "activation", "=", "activation", ",", "padding", "=", "'same'", ",", "\n", "kernel_initializer", "=", "kernel_initializer", ")", "(", "pool4", ")", "\n", "conv5", "=", "Conv2D", "(", "1024", ",", "3", ",", "use_bias", "=", "use_bias", ",", "activation", "=", "activation", ",", "padding", "=", "'same'", ",", "\n", "kernel_initializer", "=", "kernel_initializer", ")", "(", "conv5", ")", "\n", "\n", "# Decoder", "\n", "up6", "=", "Deconv2D", "(", "filters", "=", "512", ",", "kernel_size", "=", "(", "2", ",", "2", ")", ",", "strides", "=", "2", ",", "padding", "=", "'same'", ",", "\n", "kernel_initializer", "=", "kernel_initializer", ",", "use_bias", "=", "use_bias", ")", "(", "conv5", ")", "\n", "cropped_up6", "=", "Cropping2D", "(", "\n", "cropping", "=", "(", "(", "0", ",", "1", ")", ",", "\n", "(", "0", ",", "1", ")", ")", "\n", ")", "(", "up6", ")", "\n", "merge6", "=", "Concatenate", "(", "axis", "=", "-", "1", ")", "(", "[", "conv4", ",", "cropped_up6", "]", ")", "\n", "conv6", "=", "Conv2D", "(", "512", ",", "3", ",", "use_bias", "=", "use_bias", ",", "activation", "=", "activation", ",", "padding", "=", "'same'", ",", "\n", "kernel_initializer", "=", "kernel_initializer", ")", "(", "merge6", ")", "\n", "conv6", "=", "Conv2D", "(", "512", ",", "3", ",", "use_bias", "=", "use_bias", ",", "activation", "=", "activation", ",", "padding", "=", "'same'", ",", "\n", "kernel_initializer", "=", "kernel_initializer", ")", "(", "conv6", ")", "\n", "\n", "up7", "=", "Deconv2D", "(", "filters", "=", "256", ",", "kernel_size", "=", "(", "2", ",", "2", ")", ",", "strides", "=", "2", ",", "padding", "=", "'same'", ",", "\n", "kernel_initializer", "=", "kernel_initializer", ",", "use_bias", "=", "use_bias", ")", "(", "conv6", ")", "\n", "cropped_up7", "=", "Cropping2D", "(", "\n", "cropping", "=", "(", "(", "0", ",", "1", ")", ",", "\n", "(", "0", ",", "1", ")", ")", "\n", ")", "(", "up7", ")", "\n", "merge7", "=", "Concatenate", "(", "axis", "=", "3", ")", "(", "[", "conv3", ",", "cropped_up7", "]", ")", "\n", "conv7", "=", "Conv2D", "(", "256", ",", "3", ",", "use_bias", "=", "use_bias", ",", "activation", "=", "activation", ",", "padding", "=", "'same'", ",", "\n", "kernel_initializer", "=", "kernel_initializer", ")", "(", "merge7", ")", "\n", "conv7", "=", "Conv2D", "(", "256", ",", "3", ",", "use_bias", "=", "use_bias", ",", "activation", "=", "activation", ",", "padding", "=", "'same'", ",", "\n", "kernel_initializer", "=", "kernel_initializer", ")", "(", "conv7", ")", "\n", "\n", "up8", "=", "Deconv2D", "(", "filters", "=", "128", ",", "kernel_size", "=", "(", "2", ",", "2", ")", ",", "strides", "=", "2", ",", "padding", "=", "'same'", ",", "\n", "kernel_initializer", "=", "kernel_initializer", ",", "use_bias", "=", "use_bias", ")", "(", "conv7", ")", "\n", "merge8", "=", "Concatenate", "(", "axis", "=", "3", ")", "(", "[", "conv2", ",", "up8", "]", ")", "\n", "conv8", "=", "Conv2D", "(", "128", ",", "3", ",", "use_bias", "=", "use_bias", ",", "activation", "=", "activation", ",", "padding", "=", "'same'", ",", "\n", "kernel_initializer", "=", "kernel_initializer", ")", "(", "merge8", ")", "\n", "conv8", "=", "Conv2D", "(", "128", ",", "3", ",", "use_bias", "=", "use_bias", ",", "activation", "=", "activation", ",", "padding", "=", "'same'", ",", "\n", "kernel_initializer", "=", "kernel_initializer", ")", "(", "conv8", ")", "\n", "\n", "up9", "=", "Deconv2D", "(", "filters", "=", "64", ",", "kernel_size", "=", "(", "2", ",", "2", ")", ",", "strides", "=", "2", ",", "padding", "=", "'same'", ",", "\n", "kernel_initializer", "=", "kernel_initializer", ",", "use_bias", "=", "use_bias", ")", "(", "conv8", ")", "\n", "merge9", "=", "Concatenate", "(", "axis", "=", "3", ")", "(", "[", "conv1", ",", "up9", "]", ")", "\n", "conv9", "=", "Conv2D", "(", "64", ",", "3", ",", "use_bias", "=", "use_bias", ",", "activation", "=", "activation", ",", "padding", "=", "'same'", ",", "\n", "kernel_initializer", "=", "kernel_initializer", ")", "(", "merge9", ")", "\n", "conv9", "=", "Conv2D", "(", "64", ",", "3", ",", "use_bias", "=", "use_bias", ",", "activation", "=", "activation", ",", "padding", "=", "'same'", ",", "\n", "kernel_initializer", "=", "kernel_initializer", ")", "(", "conv9", ")", "\n", "\n", "conv10", "=", "Conv2D", "(", "nb_classes", ",", "kernel_size", "=", "1", ",", "use_bias", "=", "use_bias", ",", "activation", "=", "'softmax'", ")", "(", "conv9", ")", "\n", "\n", "net", "=", "Model", "(", "inputs", "=", "inputs", ",", "outputs", "=", "conv10", ")", "\n", "net", ".", "name", "=", "\"unet\"", "\n", "return", "net", "\n", "", ""]], "home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.Models._test_unet.test_unet": [[9, 17], ["Models.unet", "Models.unet.summary"], "function", ["home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.Models.unet.unet"], ["def", "test_unet", "(", ")", ":", "\n", "    ", "\"\"\"\n    unet() test case\n    :return:\n    \"\"\"", "\n", "model", "=", "unet", "(", "inputs_shape", "=", "(", "500", ",", "500", ",", "3", ")", ",", "\n", "nb_classes", "=", "FLAGS", ".", "nb_classes", ")", "\n", "model", ".", "summary", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.Models.micro_net.get_fire_config": [[8, 27], ["int", "int", "isinstance", "isinstance"], "function", ["None"], ["def", "get_fire_config", "(", "i", ",", "base_e", ",", "freq", ",", "squeeze_ratio", ",", "pct_3x3", ")", ":", "\n", "    ", "\"\"\"\n    get configuration for fire module\n\n    :param i: i-th Fire Module\n    :param base_e: base number of e\n    :param freq: The frequency of e_i updates\n    :param squeeze_ratio: s_1x1 = squeeze_ratio * e_i\n    :param pct_3x3: proportion of e_3x3 to e_i\n    :return: parameters: e_i, s_1x1, e_1x1, e_3x3\n    \"\"\"", "\n", "assert", "isinstance", "(", "squeeze_ratio", ",", "float", ")", "and", "0", "<=", "squeeze_ratio", "<=", "1", ",", "\"Incorrect parameters\"", "\n", "assert", "isinstance", "(", "pct_3x3", ",", "float", ")", "and", "0", "<=", "pct_3x3", "<=", "1", ",", "\"Incorrect parameters\"", "\n", "\n", "e_i", "=", "base_e", "*", "(", "2", "**", "(", "i", "//", "freq", ")", ")", "\n", "s_1x1", "=", "int", "(", "squeeze_ratio", "*", "e_i", ")", "\n", "e_3x3", "=", "int", "(", "pct_3x3", "*", "e_i", ")", "\n", "e_1x1", "=", "e_i", "-", "e_3x3", "\n", "return", "e_i", ",", "s_1x1", ",", "e_1x1", ",", "e_3x3", "\n", "\n"]], "home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.Models.micro_net.fire_module": [[29, 56], ["micro_net.get_fire_config", "keras.layers.Conv2D", "keras.layers.Conv2D", "keras.layers.Conv2D", "keras.layers.Concatenate"], "function", ["home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.Models.micro_net.get_fire_config"], ["", "def", "fire_module", "(", "inputs", ",", "fire_i", ",", "base_e", ",", "freq", ",", "squeeze_ratio", ",", "pct_3x3", ",", "dilation_rate", ",", "\n", "activation", ",", "kernel_initializer", ",", "data_format", ",", "use_bias", "=", "False", ",", "decoder", "=", "False", ")", ":", "\n", "    ", "e_i", ",", "s_1x1", ",", "e_1x1", ",", "e_3x3", "=", "get_fire_config", "(", "\n", "i", "=", "fire_i", ",", "base_e", "=", "base_e", ",", "freq", "=", "freq", ",", "\n", "squeeze_ratio", "=", "squeeze_ratio", ",", "pct_3x3", "=", "pct_3x3", ")", "\n", "if", "decoder", ":", "\n", "        ", "d", "=", "\"decoder_\"", "\n", "", "else", ":", "\n", "        ", "d", "=", "\"\"", "\n", "\n", "", "squeeze", "=", "Conv2D", "(", "\n", "s_1x1", ",", "(", "1", ",", "1", ")", ",", "use_bias", "=", "use_bias", ",", "activation", "=", "activation", ",", "kernel_initializer", "=", "kernel_initializer", ",", "\n", "padding", "=", "'same'", ",", "dilation_rate", "=", "dilation_rate", ",", "name", "=", "d", "+", "\"fire%d_s1x1\"", "%", "fire_i", ",", "\n", "data_format", "=", "data_format", ")", "(", "inputs", ")", "\n", "\n", "fire2_expand1", "=", "Conv2D", "(", "\n", "e_1x1", ",", "(", "1", ",", "1", ")", ",", "use_bias", "=", "use_bias", ",", "activation", "=", "activation", ",", "kernel_initializer", "=", "kernel_initializer", ",", "\n", "padding", "=", "'same'", ",", "dilation_rate", "=", "dilation_rate", ",", "name", "=", "d", "+", "\"fire%d_e1x1\"", "%", "fire_i", ",", "\n", "data_format", "=", "data_format", ")", "(", "squeeze", ")", "\n", "\n", "fire2_expand2", "=", "Conv2D", "(", "\n", "e_3x3", ",", "(", "3", ",", "3", ")", ",", "use_bias", "=", "use_bias", ",", "activation", "=", "activation", ",", "kernel_initializer", "=", "kernel_initializer", ",", "\n", "padding", "=", "'same'", ",", "dilation_rate", "=", "dilation_rate", ",", "name", "=", "d", "+", "\"fire%d_e3x3\"", "%", "fire_i", ",", "\n", "data_format", "=", "data_format", ")", "(", "squeeze", ")", "\n", "\n", "merge", "=", "Concatenate", "(", "axis", "=", "-", "1", ",", "name", "=", "d", "+", "\"fire_merge%d\"", "%", "fire_i", ")", "(", "[", "fire2_expand1", ",", "fire2_expand2", "]", ")", "\n", "return", "merge", "\n", "\n"]], "home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.Models.micro_net.micro_net": [[58, 145], ["keras.layers.Input", "micro_net.fire_module", "micro_net.fire_module", "micro_net.fire_module", "micro_net.fire_module", "micro_net.fire_module", "micro_net.fire_module", "micro_net.fire_module", "micro_net.fire_module", "micro_net.fire_module", "micro_net.fire_module", "micro_net.fire_module", "micro_net.fire_module", "micro_net.fire_module", "micro_net.fire_module", "micro_net.fire_module", "micro_net.fire_module", "micro_net.fire_module", "micro_net.fire_module", "micro_net.fire_module", "micro_net.fire_module", "micro_net.fire_module", "keras.models.Model", "keras.layers.MaxPooling2D", "keras.layers.MaxPooling2D", "keras.layers.Deconv2D", "keras.layers.Add", "keras.layers.Deconv2D", "keras.layers.Add", "keras.layers.Conv2D", "str"], "function", ["home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.Models.micro_net.fire_module", "home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.Models.micro_net.fire_module", "home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.Models.micro_net.fire_module", "home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.Models.micro_net.fire_module", "home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.Models.micro_net.fire_module", "home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.Models.micro_net.fire_module", "home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.Models.micro_net.fire_module", "home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.Models.micro_net.fire_module", "home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.Models.micro_net.fire_module", "home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.Models.micro_net.fire_module", "home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.Models.micro_net.fire_module", "home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.Models.micro_net.fire_module", "home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.Models.micro_net.fire_module", "home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.Models.micro_net.fire_module", "home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.Models.micro_net.fire_module", "home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.Models.micro_net.fire_module", "home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.Models.micro_net.fire_module", "home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.Models.micro_net.fire_module", "home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.Models.micro_net.fire_module", "home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.Models.micro_net.fire_module", "home.repos.pwc.inspect_result.Isnot2bad_Micro-Net.Models.micro_net.fire_module"], ["", "def", "micro_net", "(", "nb_classes", ",", "\n", "base_e", "=", "64", ",", "freq", "=", "4", ",", "squeeze_ratio", "=", "0.25", ",", "pct_3x3", "=", "0.5", ",", "\n", "inputs_shape", "=", "(", "224", ",", "224", ",", "3", ")", ",", "\n", "use_bias", "=", "False", ",", "\n", "data_format", "=", "\"channels_last\"", ",", "\n", "activation", "=", "\"relu\"", ",", "\n", "kernel_initializer", "=", "\"he_normal\"", ",", "\n", ")", ":", "\n", "    ", "\"\"\"\n    :param nb_classes: Number of categories\n    :param base_e: base number of e\n    :param freq: The frequency of e_i updates\n    :param squeeze_ratio: s_1x1 = squeeze_ratio * e_i\n    :param pct_3x3: proportion of e_3x3 to e_i\n    :param inputs_shape : shape of input: (channel, cols, rows)\n    :param use_bias: whether to use 'bias'\n    :param data_format : data format: \"channels_first\" or \"channels_last\"\n    :param activation : activation function\n    :param kernel_initializer: weight initializer (in convolution layer)\n    \"\"\"", "\n", "inputs", "=", "Input", "(", "shape", "=", "inputs_shape", ")", "\n", "\n", "# Encoder", "\n", "conv1", "=", "fire_module", "(", "inputs", ",", "0", ",", "base_e", ",", "freq", ",", "squeeze_ratio", ",", "pct_3x3", ",", "1", ",", "# rate", "\n", "activation", ",", "kernel_initializer", ",", "data_format", ")", "\n", "conv1", "=", "fire_module", "(", "conv1", ",", "1", ",", "base_e", ",", "freq", ",", "squeeze_ratio", ",", "pct_3x3", ",", "1", ",", "# rate", "\n", "activation", ",", "kernel_initializer", ",", "data_format", ")", "\n", "conv1", "=", "fire_module", "(", "conv1", ",", "2", ",", "base_e", ",", "freq", ",", "squeeze_ratio", ",", "pct_3x3", ",", "2", ",", "# rate", "\n", "activation", ",", "kernel_initializer", ",", "data_format", ")", "\n", "conv1", "=", "fire_module", "(", "conv1", ",", "3", ",", "base_e", ",", "freq", ",", "squeeze_ratio", ",", "pct_3x3", ",", "3", ",", "# rate", "\n", "activation", ",", "kernel_initializer", ",", "data_format", ")", "\n", "pool1", "=", "MaxPooling2D", "(", "pool_size", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "'same'", ")", "(", "conv1", ")", "\n", "\n", "conv2", "=", "fire_module", "(", "pool1", ",", "4", ",", "base_e", ",", "freq", ",", "squeeze_ratio", ",", "pct_3x3", ",", "1", ",", "# rate", "\n", "activation", ",", "kernel_initializer", ",", "data_format", ")", "\n", "conv2", "=", "fire_module", "(", "conv2", ",", "5", ",", "base_e", ",", "freq", ",", "squeeze_ratio", ",", "pct_3x3", ",", "1", ",", "# rate", "\n", "activation", ",", "kernel_initializer", ",", "data_format", ")", "\n", "conv2", "=", "fire_module", "(", "conv2", ",", "6", ",", "base_e", ",", "freq", ",", "squeeze_ratio", ",", "pct_3x3", ",", "2", ",", "# rate", "\n", "activation", ",", "kernel_initializer", ",", "data_format", ")", "\n", "conv2", "=", "fire_module", "(", "conv2", ",", "7", ",", "base_e", ",", "freq", ",", "squeeze_ratio", ",", "pct_3x3", ",", "3", ",", "# rate", "\n", "activation", ",", "kernel_initializer", ",", "data_format", ")", "\n", "pool2", "=", "MaxPooling2D", "(", "pool_size", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "'same'", ")", "(", "conv2", ")", "\n", "\n", "conv3", "=", "fire_module", "(", "pool2", ",", "8", ",", "base_e", ",", "freq", ",", "squeeze_ratio", ",", "pct_3x3", ",", "1", ",", "# rate", "\n", "activation", ",", "kernel_initializer", ",", "data_format", ")", "\n", "conv3", "=", "fire_module", "(", "conv3", ",", "9", ",", "base_e", ",", "freq", ",", "squeeze_ratio", ",", "pct_3x3", ",", "1", ",", "# rate", "\n", "activation", ",", "kernel_initializer", ",", "data_format", ")", "\n", "conv3", "=", "fire_module", "(", "conv3", ",", "10", ",", "base_e", ",", "freq", ",", "squeeze_ratio", ",", "pct_3x3", ",", "2", ",", "# rate", "\n", "activation", ",", "kernel_initializer", ",", "data_format", ")", "\n", "conv3", "=", "fire_module", "(", "conv3", ",", "11", ",", "base_e", ",", "freq", ",", "squeeze_ratio", ",", "pct_3x3", ",", "3", ",", "# rate", "\n", "activation", ",", "kernel_initializer", ",", "data_format", ")", "\n", "\n", "# Decoder", "\n", "d_conv3", "=", "fire_module", "(", "conv3", ",", "10", ",", "base_e", ",", "freq", ",", "squeeze_ratio", ",", "pct_3x3", ",", "3", ",", "# rate", "\n", "activation", ",", "kernel_initializer", ",", "data_format", ",", "decoder", "=", "True", ")", "\n", "d_conv3", "=", "fire_module", "(", "d_conv3", ",", "9", ",", "base_e", ",", "freq", ",", "squeeze_ratio", ",", "pct_3x3", ",", "2", ",", "# rate", "\n", "activation", ",", "kernel_initializer", ",", "data_format", ",", "decoder", "=", "True", ")", "\n", "d_conv3", "=", "fire_module", "(", "d_conv3", ",", "8", ",", "base_e", ",", "freq", ",", "squeeze_ratio", ",", "pct_3x3", ",", "1", ",", "# rate", "\n", "activation", ",", "kernel_initializer", ",", "data_format", ",", "decoder", "=", "True", ")", "\n", "up2", "=", "Deconv2D", "(", "filters", "=", "128", ",", "kernel_size", "=", "(", "2", ",", "2", ")", ",", "strides", "=", "2", ",", "padding", "=", "'same'", ",", "\n", "kernel_initializer", "=", "kernel_initializer", ",", "use_bias", "=", "use_bias", ")", "(", "d_conv3", ")", "\n", "\n", "added_conv3", "=", "Add", "(", ")", "(", "[", "up2", ",", "conv2", "]", ")", "\n", "d_conv2", "=", "fire_module", "(", "added_conv3", ",", "6", ",", "base_e", ",", "freq", ",", "squeeze_ratio", ",", "pct_3x3", ",", "3", ",", "# rate", "\n", "activation", ",", "kernel_initializer", ",", "data_format", ",", "decoder", "=", "True", ")", "\n", "d_conv2", "=", "fire_module", "(", "d_conv2", ",", "5", ",", "base_e", ",", "freq", ",", "squeeze_ratio", ",", "pct_3x3", ",", "2", ",", "# rate", "\n", "activation", ",", "kernel_initializer", ",", "data_format", ",", "decoder", "=", "True", ")", "\n", "d_conv2", "=", "fire_module", "(", "d_conv2", ",", "4", ",", "base_e", ",", "freq", ",", "squeeze_ratio", ",", "pct_3x3", ",", "1", ",", "# rate", "\n", "activation", ",", "kernel_initializer", ",", "data_format", ",", "decoder", "=", "True", ")", "\n", "up1", "=", "Deconv2D", "(", "filters", "=", "64", ",", "kernel_size", "=", "(", "2", ",", "2", ")", ",", "strides", "=", "2", ",", "padding", "=", "'same'", ",", "\n", "kernel_initializer", "=", "kernel_initializer", ",", "use_bias", "=", "use_bias", ")", "(", "d_conv2", ")", "\n", "\n", "added_conv2", "=", "Add", "(", ")", "(", "[", "up1", ",", "conv1", "]", ")", "\n", "d_conv1", "=", "fire_module", "(", "added_conv2", ",", "2", ",", "base_e", ",", "freq", ",", "squeeze_ratio", ",", "pct_3x3", ",", "3", ",", "# rate", "\n", "activation", ",", "kernel_initializer", ",", "data_format", ",", "decoder", "=", "True", ")", "\n", "d_conv1", "=", "fire_module", "(", "d_conv1", ",", "1", ",", "base_e", ",", "freq", ",", "squeeze_ratio", ",", "pct_3x3", ",", "2", ",", "# rate", "\n", "activation", ",", "kernel_initializer", ",", "data_format", ",", "decoder", "=", "True", ")", "\n", "d_conv1", "=", "fire_module", "(", "d_conv1", ",", "0", ",", "base_e", ",", "freq", ",", "squeeze_ratio", ",", "pct_3x3", ",", "1", ",", "# rate", "\n", "activation", ",", "kernel_initializer", ",", "data_format", ",", "decoder", "=", "True", ")", "\n", "\n", "# Classifier", "\n", "out_conv", "=", "Conv2D", "(", "nb_classes", ",", "kernel_size", "=", "1", ",", "use_bias", "=", "use_bias", ",", "activation", "=", "'softmax'", ")", "(", "d_conv1", ")", "\n", "\n", "# Model", "\n", "net", "=", "Model", "(", "inputs", "=", "inputs", ",", "outputs", "=", "out_conv", ")", "\n", "net", ".", "name", "=", "\"micro_net_\"", "+", "str", "(", "squeeze_ratio", ")", "+", "\"_1123_1123_1123\"", "\n", "return", "net", "\n", "", ""]]}