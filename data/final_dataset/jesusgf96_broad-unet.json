{"home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.models.UNet_original": [[8, 60], ["tensorflow.keras.initializers.GlorotUniform", "tensorflow.keras.layers.Input", "tensorflow.keras.layers.concatenate", "tensorflow.keras.layers.concatenate", "tensorflow.keras.layers.concatenate", "tensorflow.keras.layers.concatenate", "tensorflow.keras.models.Model", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.MaxPool2D", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.MaxPool2D", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.MaxPool2D", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.Dropout", "tensorflow.keras.layers.MaxPool2D", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.Dropout", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.UpSampling2D", "tensorflow.keras.layers.UpSampling2D", "tensorflow.keras.layers.UpSampling2D", "tensorflow.keras.layers.UpSampling2D"], "function", ["None"], ["def", "UNet_original", "(", "lags", ",", "latitude", ",", "longitude", ",", "features", ",", "features_output", ",", "filters", ",", "dropout", ",", "kernel_init", "=", "tf", ".", "keras", ".", "initializers", ".", "GlorotUniform", "(", "seed", "=", "50", ")", ")", ":", "\n", "\n", "#--- Contracting part / encoder ---#", "\n", "    ", "inputs", "=", "Input", "(", "shape", "=", "(", "latitude", ",", "longitude", ",", "features", ")", ")", "\n", "conv1", "=", "Conv2D", "(", "filters", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "inputs", ")", "\n", "conv1", "=", "Conv2D", "(", "filters", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "conv1", ")", "\n", "pool1", "=", "MaxPool2D", "(", "pool_size", "=", "(", "2", ",", "2", ")", ")", "(", "conv1", ")", "\n", "\n", "conv2", "=", "Conv2D", "(", "2", "*", "filters", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "pool1", ")", "\n", "conv2", "=", "Conv2D", "(", "2", "*", "filters", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "conv2", ")", "\n", "pool2", "=", "MaxPool2D", "(", "pool_size", "=", "(", "2", ",", "2", ")", ")", "(", "conv2", ")", "\n", "\n", "conv3", "=", "Conv2D", "(", "4", "*", "filters", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "pool2", ")", "\n", "conv3", "=", "Conv2D", "(", "4", "*", "filters", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "conv3", ")", "\n", "pool3", "=", "MaxPool2D", "(", "pool_size", "=", "(", "2", ",", "2", ")", ")", "(", "conv3", ")", "\n", "\n", "conv4", "=", "Conv2D", "(", "8", "*", "filters", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "pool3", ")", "\n", "conv4", "=", "Conv2D", "(", "8", "*", "filters", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "conv4", ")", "\n", "drop4", "=", "Dropout", "(", "dropout", ")", "(", "conv4", ")", "\n", "\n", "#--- Bottleneck part ---#", "\n", "pool4", "=", "MaxPool2D", "(", "pool_size", "=", "(", "2", ",", "2", ")", ")", "(", "drop4", ")", "\n", "conv5", "=", "Conv2D", "(", "16", "*", "filters", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "pool4", ")", "\n", "conv5", "=", "Conv2D", "(", "16", "*", "filters", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "pool4", ")", "\n", "drop5", "=", "Dropout", "(", "dropout", ")", "(", "conv5", ")", "\n", "\n", "#--- Expanding part / decoder ---#", "\n", "up6", "=", "Conv2D", "(", "8", "*", "filters", ",", "2", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "UpSampling2D", "(", "size", "=", "(", "2", ",", "2", ")", ")", "(", "drop5", ")", ")", "\n", "merge6", "=", "concatenate", "(", "[", "drop4", ",", "up6", "]", ",", "axis", "=", "-", "1", ")", "\n", "conv6", "=", "Conv2D", "(", "8", "*", "filters", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "merge6", ")", "\n", "conv6", "=", "Conv2D", "(", "8", "*", "filters", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "conv6", ")", "\n", "\n", "up7", "=", "Conv2D", "(", "4", "*", "filters", ",", "2", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "UpSampling2D", "(", "size", "=", "(", "2", ",", "2", ")", ")", "(", "conv6", ")", ")", "\n", "merge7", "=", "concatenate", "(", "[", "conv3", ",", "up7", "]", ",", "axis", "=", "-", "1", ")", "\n", "conv7", "=", "Conv2D", "(", "4", "*", "filters", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "merge7", ")", "\n", "conv7", "=", "Conv2D", "(", "4", "*", "filters", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "conv7", ")", "\n", "\n", "up8", "=", "Conv2D", "(", "2", "*", "filters", ",", "2", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "UpSampling2D", "(", "size", "=", "(", "2", ",", "2", ")", ")", "(", "conv7", ")", ")", "\n", "merge8", "=", "concatenate", "(", "[", "conv2", ",", "up8", "]", ",", "axis", "=", "-", "1", ")", "\n", "conv8", "=", "Conv2D", "(", "2", "*", "filters", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "merge8", ")", "\n", "conv8", "=", "Conv2D", "(", "2", "*", "filters", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "conv8", ")", "\n", "\n", "up9", "=", "Conv2D", "(", "filters", ",", "2", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "UpSampling2D", "(", "size", "=", "(", "2", ",", "2", ")", ")", "(", "conv8", ")", ")", "\n", "merge9", "=", "concatenate", "(", "[", "conv1", ",", "up9", "]", ",", "axis", "=", "-", "1", ")", "\n", "conv9", "=", "Conv2D", "(", "filters", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "merge9", ")", "\n", "conv9", "=", "Conv2D", "(", "filters", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "conv9", ")", "\n", "\n", "conv9", "=", "Conv2D", "(", "2", "*", "features_output", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "conv9", ")", "\n", "\n", "conv10", "=", "Conv2D", "(", "features_output", ",", "1", ",", "activation", "=", "'sigmoid'", ",", "padding", "=", "'same'", ")", "(", "conv9", ")", "#Reduce last dimension    ", "\n", "\n", "return", "Model", "(", "inputs", "=", "inputs", ",", "outputs", "=", "conv10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.models.UNet_AsymmetricInceptionRes3DDR": [[64, 141], ["tensorflow.keras.initializers.GlorotUniform", "tensorflow.keras.layers.Input", "models.UNet_AsymmetricInceptionRes3DDR.res_inception_block"], "function", ["None"], ["", "def", "UNet_AsymmetricInceptionRes3DDR", "(", "lags", ",", "latitude", ",", "longitude", ",", "features", ",", "features_output", ",", "filters", ",", "dropout", ",", "kernel_init", "=", "tf", ".", "keras", ".", "initializers", ".", "GlorotUniform", "(", "seed", "=", "50", ")", ")", ":", "\n", "\n", "    ", "def", "res_inception_block", "(", "x", ",", "f", ",", "k", ")", ":", "\n", "        ", "shortcut", "=", "x", "\n", "x1", "=", "Conv3D", "(", "f", ",", "1", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "x", ")", "\n", "x2", "=", "Conv3D", "(", "f", ",", "(", "1", ",", "1", ",", "3", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "x", ")", "\n", "x2", "=", "Conv3D", "(", "f", ",", "(", "1", ",", "3", ",", "1", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "x2", ")", "\n", "x2", "=", "Conv3D", "(", "f", ",", "(", "3", ",", "1", ",", "1", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "x2", ")", "\n", "x3", "=", "Conv3D", "(", "f", ",", "(", "1", ",", "1", ",", "5", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "x", ")", "\n", "x3", "=", "Conv3D", "(", "f", ",", "(", "1", ",", "5", ",", "1", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "x3", ")", "\n", "x3", "=", "Conv3D", "(", "f", ",", "(", "5", ",", "1", ",", "1", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "x3", ")", "\n", "x4", "=", "Conv3D", "(", "f", ",", "(", "1", ",", "1", ",", "3", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "x", ")", "\n", "x4", "=", "Conv3D", "(", "f", ",", "(", "1", ",", "3", ",", "1", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "x4", ")", "\n", "x4", "=", "Conv3D", "(", "f", ",", "(", "3", ",", "1", ",", "1", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "x4", ")", "\n", "x5", "=", "Conv3D", "(", "f", ",", "(", "1", ",", "1", ",", "3", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "x", ")", "\n", "x5", "=", "Conv3D", "(", "f", ",", "(", "1", ",", "3", ",", "1", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "x5", ")", "\n", "x5", "=", "Conv3D", "(", "f", ",", "(", "3", ",", "1", ",", "1", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "x5", ")", "\n", "x", "=", "concatenate", "(", "[", "x1", ",", "x2", ",", "x3", ",", "x4", ",", "x5", "]", ",", "axis", "=", "-", "1", ")", "\n", "x", "=", "Conv3D", "(", "f", ",", "1", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "x", ")", "\n", "x", "=", "Add", "(", ")", "(", "[", "x", ",", "shortcut", "]", ")", "\n", "x", "=", "Activation", "(", "'relu'", ")", "(", "x", ")", "\n", "return", "x", "\n", "\n", "#--- Contracting part / encoder ---#", "\n", "", "inputs", "=", "Input", "(", "shape", "=", "(", "lags", ",", "latitude", ",", "longitude", ",", "features", ")", ")", "\n", "conv1", "=", "Conv3D", "(", "filters", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "inputs", ")", "\n", "conv1", "=", "res_inception_block", "(", "conv1", ",", "filters", ",", "3", ")", "\n", "pool1", "=", "MaxPool3D", "(", "pool_size", "=", "(", "1", ",", "2", ",", "2", ")", ")", "(", "conv1", ")", "\n", "\n", "conv2", "=", "Conv3D", "(", "2", "*", "filters", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "pool1", ")", "\n", "conv2", "=", "res_inception_block", "(", "conv2", ",", "2", "*", "filters", ",", "3", ")", "\n", "pool2", "=", "MaxPool3D", "(", "pool_size", "=", "(", "1", ",", "2", ",", "2", ")", ")", "(", "conv2", ")", "\n", "\n", "conv3", "=", "Conv3D", "(", "4", "*", "filters", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "pool2", ")", "\n", "conv3", "=", "res_inception_block", "(", "conv3", ",", "4", "*", "filters", ",", "3", ")", "\n", "pool3", "=", "MaxPool3D", "(", "pool_size", "=", "(", "1", ",", "2", ",", "2", ")", ")", "(", "conv3", ")", "\n", "\n", "conv4", "=", "Conv3D", "(", "8", "*", "filters", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "pool3", ")", "\n", "conv4", "=", "res_inception_block", "(", "conv4", ",", "8", "*", "filters", ",", "3", ")", "\n", "drop4", "=", "Dropout", "(", "dropout", ")", "(", "conv4", ")", "\n", "\n", "#--- Bottleneck part ---#", "\n", "pool4", "=", "MaxPool3D", "(", "pool_size", "=", "(", "1", ",", "2", ",", "2", ")", ")", "(", "drop4", ")", "\n", "conv5", "=", "Conv3D", "(", "16", "*", "filters", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "pool4", ")", "\n", "conv5", "=", "res_inception_block", "(", "conv5", ",", "16", "*", "filters", ",", "3", ")", "\n", "compressLags", "=", "Conv3D", "(", "16", "*", "filters", ",", "(", "lags", ",", "1", ",", "1", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'valid'", ")", "(", "conv5", ")", "\n", "drop5", "=", "Dropout", "(", "dropout", ")", "(", "compressLags", ")", "\n", "\n", "#--- Expanding part / decoder ---#", "\n", "up6", "=", "Conv3D", "(", "8", "*", "filters", ",", "2", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "UpSampling3D", "(", "size", "=", "(", "1", ",", "2", ",", "2", ")", ")", "(", "drop5", ")", ")", "\n", "compressLags", "=", "Conv3D", "(", "8", "*", "filters", ",", "(", "lags", ",", "1", ",", "1", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'valid'", ")", "(", "drop4", ")", "\n", "merge6", "=", "concatenate", "(", "[", "compressLags", ",", "up6", "]", ",", "axis", "=", "-", "1", ")", "\n", "conv6", "=", "Conv3D", "(", "8", "*", "filters", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "merge6", ")", "\n", "conv6", "=", "res_inception_block", "(", "conv6", ",", "8", "*", "filters", ",", "3", ")", "\n", "\n", "up7", "=", "Conv3D", "(", "4", "*", "filters", ",", "2", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "UpSampling3D", "(", "size", "=", "(", "1", ",", "2", ",", "2", ")", ")", "(", "conv6", ")", ")", "\n", "compressLags", "=", "Conv3D", "(", "4", "*", "filters", ",", "(", "lags", ",", "1", ",", "1", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'valid'", ")", "(", "conv3", ")", "\n", "merge7", "=", "concatenate", "(", "[", "compressLags", ",", "up7", "]", ",", "axis", "=", "-", "1", ")", "\n", "conv7", "=", "Conv3D", "(", "4", "*", "filters", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "merge7", ")", "\n", "conv7", "=", "res_inception_block", "(", "conv7", ",", "4", "*", "filters", ",", "3", ")", "\n", "\n", "up8", "=", "Conv3D", "(", "2", "*", "filters", ",", "2", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "UpSampling3D", "(", "size", "=", "(", "1", ",", "2", ",", "2", ")", ")", "(", "conv7", ")", ")", "\n", "compressLags", "=", "Conv3D", "(", "2", "*", "filters", ",", "(", "lags", ",", "1", ",", "1", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'valid'", ")", "(", "conv2", ")", "\n", "merge8", "=", "concatenate", "(", "[", "compressLags", ",", "up8", "]", ",", "axis", "=", "-", "1", ")", "\n", "conv8", "=", "Conv3D", "(", "2", "*", "filters", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "merge8", ")", "\n", "conv8", "=", "res_inception_block", "(", "conv8", ",", "2", "*", "filters", ",", "3", ")", "\n", "\n", "up9", "=", "Conv3D", "(", "filters", ",", "2", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "UpSampling3D", "(", "size", "=", "(", "1", ",", "2", ",", "2", ")", ")", "(", "conv8", ")", ")", "\n", "compressLags", "=", "Conv3D", "(", "filters", ",", "(", "lags", ",", "1", ",", "1", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'valid'", ")", "(", "conv1", ")", "\n", "merge9", "=", "concatenate", "(", "[", "compressLags", ",", "up9", "]", ",", "axis", "=", "-", "1", ")", "\n", "conv9", "=", "Conv3D", "(", "filters", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "merge9", ")", "\n", "conv9", "=", "res_inception_block", "(", "conv9", ",", "filters", ",", "3", ")", "\n", "conv9", "=", "Conv3D", "(", "2", "*", "features_output", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "conv9", ")", "\n", "\n", "conv10", "=", "Conv3D", "(", "features_output", ",", "1", ",", "activation", "=", "'sigmoid'", ",", "padding", "=", "'same'", ")", "(", "conv9", ")", "#Reduce last dimension    ", "\n", "\n", "return", "Model", "(", "inputs", "=", "inputs", ",", "outputs", "=", "conv10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.models.broad_UNet": [[144, 241], ["tensorflow.keras.initializers.GlorotUniform", "tensorflow.keras.layers.Input", "models.broad_UNet.convolutional_block"], "function", ["None"], ["", "def", "broad_UNet", "(", "lags", ",", "latitude", ",", "longitude", ",", "features", ",", "features_output", ",", "filters", ",", "dropout", ",", "kernel_init", "=", "tf", ".", "keras", ".", "initializers", ".", "GlorotUniform", "(", "seed", "=", "50", ")", ")", ":", "\n", "\n", "    ", "def", "image_level_feature_pooling", "(", "x", ",", "f", ")", ":", "\n", "        ", "up_size", "=", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "2", ":", "4", "]", "\n", "x", "=", "GlobalAveragePooling3D", "(", ")", "(", "x", ")", "\n", "x", "=", "Reshape", "(", "(", "1", ",", "1", ",", "1", ",", "f", ")", ")", "(", "x", ")", "\n", "x", "=", "UpSampling3D", "(", "size", "=", "(", "1", ",", "up_size", "[", "0", "]", ",", "up_size", "[", "1", "]", ")", ")", "(", "x", ")", "\n", "return", "x", "\n", "\n", "\n", "", "def", "ASPP_block", "(", "x", ",", "f", ")", ":", "\n", "        ", "x1", "=", "Conv3D", "(", "f", ",", "1", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "x", ")", "\n", "x2", "=", "Conv3D", "(", "f", ",", "(", "1", ",", "3", ",", "3", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "dilation_rate", "=", "6", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "x", ")", "\n", "x3", "=", "Conv3D", "(", "f", ",", "(", "1", ",", "3", ",", "3", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "dilation_rate", "=", "12", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "x", ")", "\n", "x4", "=", "Conv3D", "(", "f", ",", "(", "1", ",", "3", ",", "3", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "dilation_rate", "=", "18", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "x", ")", "\n", "x5", "=", "image_level_feature_pooling", "(", "x", ",", "f", ")", "\n", "x", "=", "concatenate", "(", "[", "x1", ",", "x2", ",", "x3", ",", "x4", ",", "x5", "]", ",", "axis", "=", "-", "1", ")", "\n", "x", "=", "Conv3D", "(", "f", ",", "1", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "x", ")", "\n", "return", "x", "\n", "\n", "\n", "", "def", "convolutional_block", "(", "x", ",", "f", ",", "k", ")", ":", "\n", "        ", "shortcut", "=", "x", "\n", "x1", "=", "Conv3D", "(", "f", ",", "1", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "x", ")", "\n", "x2", "=", "Conv3D", "(", "f", ",", "(", "1", ",", "1", ",", "3", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "x", ")", "\n", "x2", "=", "Conv3D", "(", "f", ",", "(", "1", ",", "3", ",", "1", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "x2", ")", "\n", "x2", "=", "Conv3D", "(", "f", ",", "(", "3", ",", "1", ",", "1", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "x2", ")", "\n", "x3", "=", "Conv3D", "(", "f", ",", "(", "1", ",", "1", ",", "5", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "x", ")", "\n", "x3", "=", "Conv3D", "(", "f", ",", "(", "1", ",", "5", ",", "1", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "x3", ")", "\n", "x3", "=", "Conv3D", "(", "f", ",", "(", "5", ",", "1", ",", "1", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "x3", ")", "\n", "x4", "=", "Conv3D", "(", "f", ",", "(", "1", ",", "1", ",", "3", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "x", ")", "\n", "x4", "=", "Conv3D", "(", "f", ",", "(", "1", ",", "3", ",", "1", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "x4", ")", "\n", "x4", "=", "Conv3D", "(", "f", ",", "(", "3", ",", "1", ",", "1", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "x4", ")", "\n", "x5", "=", "Conv3D", "(", "f", ",", "(", "1", ",", "1", ",", "3", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "x", ")", "\n", "x5", "=", "Conv3D", "(", "f", ",", "(", "1", ",", "3", ",", "1", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "x5", ")", "\n", "x5", "=", "Conv3D", "(", "f", ",", "(", "3", ",", "1", ",", "1", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "x5", ")", "\n", "x", "=", "concatenate", "(", "[", "x1", ",", "x2", ",", "x3", ",", "x4", ",", "x5", "]", ",", "axis", "=", "-", "1", ")", "\n", "x", "=", "Conv3D", "(", "f", ",", "1", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "x", ")", "\n", "x", "=", "Add", "(", ")", "(", "[", "x", ",", "shortcut", "]", ")", "\n", "x", "=", "Activation", "(", "'relu'", ")", "(", "x", ")", "\n", "return", "x", "\n", "\n", "#--- Contracting part / encoder ---#", "\n", "", "inputs", "=", "Input", "(", "shape", "=", "(", "lags", ",", "latitude", ",", "longitude", ",", "features", ")", ")", "\n", "conv1", "=", "Conv3D", "(", "filters", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "inputs", ")", "\n", "conv1", "=", "convolutional_block", "(", "conv1", ",", "filters", ",", "3", ")", "\n", "pool1", "=", "MaxPool3D", "(", "pool_size", "=", "(", "1", ",", "2", ",", "2", ")", ")", "(", "conv1", ")", "\n", "\n", "conv2", "=", "Conv3D", "(", "2", "*", "filters", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "pool1", ")", "\n", "conv2", "=", "convolutional_block", "(", "conv2", ",", "2", "*", "filters", ",", "3", ")", "\n", "pool2", "=", "MaxPool3D", "(", "pool_size", "=", "(", "1", ",", "2", ",", "2", ")", ")", "(", "conv2", ")", "\n", "\n", "conv3", "=", "Conv3D", "(", "4", "*", "filters", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "pool2", ")", "\n", "conv3", "=", "convolutional_block", "(", "conv3", ",", "4", "*", "filters", ",", "3", ")", "\n", "pool3", "=", "MaxPool3D", "(", "pool_size", "=", "(", "1", ",", "2", ",", "2", ")", ")", "(", "conv3", ")", "\n", "\n", "conv4", "=", "Conv3D", "(", "8", "*", "filters", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "pool3", ")", "\n", "conv4", "=", "convolutional_block", "(", "conv4", ",", "8", "*", "filters", ",", "3", ")", "\n", "drop4", "=", "Dropout", "(", "dropout", ")", "(", "conv4", ")", "\n", "\n", "#--- Bottleneck part ---#", "\n", "pool4", "=", "MaxPool3D", "(", "pool_size", "=", "(", "1", ",", "2", ",", "2", ")", ")", "(", "drop4", ")", "\n", "conv5", "=", "Conv3D", "(", "16", "*", "filters", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "pool4", ")", "\n", "conv5", "=", "convolutional_block", "(", "conv5", ",", "16", "*", "filters", ",", "3", ")", "\n", "compressLags", "=", "Conv3D", "(", "16", "*", "filters", ",", "(", "lags", ",", "1", ",", "1", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'valid'", ")", "(", "conv5", ")", "\n", "aspp", "=", "ASPP_block", "(", "compressLags", ",", "16", "*", "filters", ")", "\n", "drop5", "=", "Dropout", "(", "dropout", ")", "(", "aspp", ")", "\n", "\n", "#--- Expanding part / decoder ---#", "\n", "up6", "=", "Conv3D", "(", "8", "*", "filters", ",", "2", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "UpSampling3D", "(", "size", "=", "(", "1", ",", "2", ",", "2", ")", ")", "(", "drop5", ")", ")", "\n", "compressLags", "=", "Conv3D", "(", "8", "*", "filters", ",", "(", "lags", ",", "1", ",", "1", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'valid'", ")", "(", "drop4", ")", "\n", "merge6", "=", "concatenate", "(", "[", "compressLags", ",", "up6", "]", ",", "axis", "=", "-", "1", ")", "\n", "conv6", "=", "Conv3D", "(", "8", "*", "filters", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "merge6", ")", "\n", "conv6", "=", "convolutional_block", "(", "conv6", ",", "8", "*", "filters", ",", "3", ")", "\n", "\n", "up7", "=", "Conv3D", "(", "4", "*", "filters", ",", "2", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "UpSampling3D", "(", "size", "=", "(", "1", ",", "2", ",", "2", ")", ")", "(", "conv6", ")", ")", "\n", "compressLags", "=", "Conv3D", "(", "4", "*", "filters", ",", "(", "lags", ",", "1", ",", "1", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'valid'", ")", "(", "conv3", ")", "\n", "merge7", "=", "concatenate", "(", "[", "compressLags", ",", "up7", "]", ",", "axis", "=", "-", "1", ")", "\n", "conv7", "=", "Conv3D", "(", "4", "*", "filters", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "merge7", ")", "\n", "conv7", "=", "convolutional_block", "(", "conv7", ",", "4", "*", "filters", ",", "3", ")", "\n", "\n", "up8", "=", "Conv3D", "(", "2", "*", "filters", ",", "2", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "UpSampling3D", "(", "size", "=", "(", "1", ",", "2", ",", "2", ")", ")", "(", "conv7", ")", ")", "\n", "compressLags", "=", "Conv3D", "(", "2", "*", "filters", ",", "(", "lags", ",", "1", ",", "1", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'valid'", ")", "(", "conv2", ")", "\n", "merge8", "=", "concatenate", "(", "[", "compressLags", ",", "up8", "]", ",", "axis", "=", "-", "1", ")", "\n", "conv8", "=", "Conv3D", "(", "2", "*", "filters", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "merge8", ")", "\n", "conv8", "=", "convolutional_block", "(", "conv8", ",", "2", "*", "filters", ",", "3", ")", "\n", "\n", "up9", "=", "Conv3D", "(", "filters", ",", "2", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "UpSampling3D", "(", "size", "=", "(", "1", ",", "2", ",", "2", ")", ")", "(", "conv8", ")", ")", "\n", "compressLags", "=", "Conv3D", "(", "filters", ",", "(", "lags", ",", "1", ",", "1", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'valid'", ")", "(", "conv1", ")", "\n", "merge9", "=", "concatenate", "(", "[", "compressLags", ",", "up9", "]", ",", "axis", "=", "-", "1", ")", "\n", "conv9", "=", "Conv3D", "(", "filters", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "merge9", ")", "\n", "conv9", "=", "convolutional_block", "(", "conv9", ",", "filters", ",", "3", ")", "\n", "conv9", "=", "Conv3D", "(", "2", "*", "features_output", ",", "3", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "kernel_init", ")", "(", "conv9", ")", "\n", "\n", "conv10", "=", "Conv3D", "(", "features_output", ",", "1", ",", "activation", "=", "'sigmoid'", ",", "padding", "=", "'same'", ")", "(", "conv9", ")", "#Reduce last dimension     ", "\n", "\n", "return", "Model", "(", "inputs", "=", "inputs", ",", "outputs", "=", "conv10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.generators.DataGeneratorCloudsData.__init__": [[8, 26], ["os.listdir", "numpy.asarray", "len", "generators.DataGeneratorCloudsData.path_samples.append", "numpy.random.permutation", "len", "str"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dir_data", ",", "ts_lags", ",", "ts_ahead", ",", "batch_size", ",", "shuffle", "=", "False", ",", "dim_model", "=", "'3d'", ")", ":", "\n", "# Get path to samples", "\n", "        ", "self", ".", "path_samples", "=", "[", "]", "\n", "self", ".", "dir_data", "=", "dir_data", "\n", "for", "s", "in", "listdir", "(", "dir_data", ")", ":", "\n", "            ", "self", ".", "path_samples", ".", "append", "(", "dir_data", "+", "str", "(", "'/'", ")", "+", "s", ")", "\n", "", "self", ".", "path_samples", "=", "np", ".", "asarray", "(", "self", ".", "path_samples", ")", "\n", "\n", "# Shuffle data", "\n", "if", "shuffle", ":", "\n", "            ", "idx", "=", "np", ".", "random", ".", "permutation", "(", "len", "(", "self", ".", "path_samples", ")", ")", "\n", "self", ".", "path_samples", "=", "self", ".", "path_samples", "[", "idx", "]", "\n", "\n", "", "self", ".", "b_size", "=", "batch_size", "\n", "self", ".", "num_samples", "=", "len", "(", "self", ".", "path_samples", ")", "\n", "self", ".", "ts_lags", "=", "ts_lags", "\n", "self", ".", "ts_ahead", "=", "ts_ahead", "\n", "self", ".", "dim_model", "=", "dim_model", "\n", "\n"]], "home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.generators.DataGeneratorCloudsData.create_validation_generator": [[28, 37], ["generators.DataGeneratorCloudsData", "len", "len", "int", "int"], "methods", ["None"], ["", "def", "create_validation_generator", "(", "self", ",", "percentage_data", ")", ":", "\n", "# Instantiate validation generator", "\n", "        ", "val_generator", "=", "DataGeneratorCloudsData", "(", "dir_data", "=", "self", ".", "dir_data", ",", "ts_lags", "=", "self", ".", "ts_lags", ",", "ts_ahead", "=", "self", ".", "ts_ahead", ",", "batch_size", "=", "self", ".", "b_size", ",", "shuffle", "=", "False", ",", "dim_model", "=", "self", ".", "dim_model", ")", "\n", "# Split samples between training and validation", "\n", "val_generator", ".", "path_samples", "=", "self", ".", "path_samples", "[", "-", "int", "(", "self", ".", "num_samples", "*", "percentage_data", ")", ":", "]", "\n", "val_generator", ".", "num_samples", "=", "len", "(", "val_generator", ".", "path_samples", ")", "\n", "self", ".", "path_samples", "=", "self", ".", "path_samples", "[", ":", "-", "int", "(", "self", ".", "num_samples", "*", "percentage_data", ")", "]", "\n", "self", ".", "num_samples", "=", "len", "(", "self", ".", "path_samples", ")", "\n", "return", "val_generator", "\n", "\n"]], "home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.generators.DataGeneratorCloudsData.__len__": [[40, 42], ["int"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "int", "(", "self", ".", "num_samples", "/", "self", ".", "b_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.generators.DataGeneratorCloudsData.__getitem__": [[45, 69], ["numpy.asarray", "numpy.asarray", "numpy.expand_dims.append", "numpy.expand_dims.append", "numpy.moveaxis", "numpy.expand_dims", "numpy.expand_dims", "numpy.moveaxis", "numpy.expand_dims", "numpy.expand_dims", "numpy.load", "numpy.load"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "x", "=", "[", "]", "\n", "y", "=", "[", "]", "\n", "\n", "# Reading images for samples", "\n", "for", "sample", "in", "self", ".", "path_samples", "[", "idx", "*", "self", ".", "b_size", ":", "(", "idx", "+", "1", ")", "*", "self", ".", "b_size", "]", ":", "\n", "            ", "x", ".", "append", "(", "np", ".", "load", "(", "sample", ")", "[", "'arr_0'", "]", "[", ":", ",", ":", ",", ":", "self", ".", "ts_lags", "]", ")", "\n", "y", ".", "append", "(", "np", ".", "load", "(", "sample", ")", "[", "'arr_0'", "]", "[", ":", ",", ":", ",", "self", ".", "ts_lags", "+", "self", ".", "ts_ahead", "-", "1", "]", ")", "\n", "\n", "# 3D_UNet", "\n", "", "if", "self", ".", "dim_model", "==", "'3d'", ":", "\n", "            ", "x", "=", "np", ".", "moveaxis", "(", "x", ",", "-", "1", ",", "1", ")", "\n", "x", "=", "np", ".", "expand_dims", "(", "x", ",", "axis", "=", "-", "1", ")", "\n", "y", "=", "np", ".", "expand_dims", "(", "y", ",", "axis", "=", "-", "1", ")", "\n", "y", "=", "np", ".", "moveaxis", "(", "y", ",", "-", "1", ",", "1", ")", "\n", "y", "=", "np", ".", "expand_dims", "(", "y", ",", "axis", "=", "-", "1", ")", "\n", "# 2D_UNet", "\n", "", "else", ":", "\n", "            ", "y", "=", "np", ".", "expand_dims", "(", "y", ",", "axis", "=", "-", "1", ")", "\n", "\n", "", "x", "=", "np", ".", "asarray", "(", "x", ")", "\n", "y", "=", "np", ".", "asarray", "(", "y", ")", "\n", "\n", "return", "x", ",", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.generators.DataGeneratorPrecipitationData.__init__": [[73, 78], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data", ",", "batch_size", ",", "lags", ")", ":", "\n", "        ", "self", ".", "data", "=", "data", "\n", "self", ".", "b_size", "=", "batch_size", "\n", "self", ".", "lags", "=", "lags", "\n", "self", ".", "time_steps", "=", "data", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.generators.DataGeneratorPrecipitationData.__len__": [[81, 84], ["int"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "#Calculating the number of batches ", "\n", "        ", "return", "int", "(", "self", ".", "time_steps", "/", "self", ".", "b_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.generators.DataGeneratorPrecipitationData.__getitem__": [[87, 97], ["numpy.expand_dims", "numpy.expand_dims", "numpy.expand_dims"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "x", "=", "self", ".", "data", "[", "idx", "*", "self", ".", "b_size", ":", "(", "idx", "+", "1", ")", "*", "self", ".", "b_size", ",", "0", ":", "self", ".", "lags", ",", ":", ",", ":", "]", "\n", "y", "=", "self", ".", "data", "[", "idx", "*", "self", ".", "b_size", ":", "(", "idx", "+", "1", ")", "*", "self", ".", "b_size", ",", "-", "1", ",", ":", ",", ":", "]", "\n", "\n", "x", "=", "np", ".", "expand_dims", "(", "x", ",", "axis", "=", "-", "1", ")", "\n", "y", "=", "np", ".", "expand_dims", "(", "y", ",", "axis", "=", "-", "1", ")", "\n", "y", "=", "np", ".", "expand_dims", "(", "y", ",", "axis", "=", "1", ")", "\n", "\n", "\n", "return", "x", ",", "y", "", "", "", ""]], "home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.utils.MSE_denormalized.__init__": [[8, 16], ["tensorflow.cast", "tensorflow.math.multiply", "tensorflow.keras.losses.MeanSquaredError", "tensorflow.keras.losses.MeanSquaredError"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "maxValue", ",", "batch_size", ",", "latitude", ",", "longitude", ",", "reduction_sum", "=", "False", ")", ":", "\n", "        ", "self", ".", "maxValue", "=", "maxValue", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "n_pixels", "=", "tf", ".", "cast", "(", "tf", ".", "math", ".", "multiply", "(", "latitude", ",", "longitude", ")", ",", "tf", ".", "float32", ")", "\n", "if", "reduction_sum", ":", "\n", "            ", "self", ".", "mse", "=", "tf", ".", "keras", ".", "losses", ".", "MeanSquaredError", "(", "reduction", "=", "tf", ".", "keras", ".", "losses", ".", "Reduction", ".", "SUM", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "mse", "=", "tf", ".", "keras", ".", "losses", ".", "MeanSquaredError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.utils.MSE_denormalized.mse_denormalized_per_image": [[17, 25], ["tensorflow.math.multiply", "tensorflow.math.multiply", "tensorflow.truediv", "utils.MSE_denormalized.mse"], "methods", ["None"], ["", "", "def", "mse_denormalized_per_image", "(", "self", ",", "y_true", ",", "y_pred", ")", ":", "\n", "# Denormalizing ground truth", "\n", "        ", "y_true", "=", "tf", ".", "math", ".", "multiply", "(", "y_true", ",", "self", ".", "maxValue", ")", "\n", "# Denormalizing prediction", "\n", "y_pred", "=", "tf", ".", "math", ".", "multiply", "(", "y_pred", ",", "self", ".", "maxValue", ")", "\n", "# Calculating mse per image", "\n", "mse_image", "=", "tf", ".", "truediv", "(", "self", ".", "mse", "(", "y_true", ",", "y_pred", ")", ",", "self", ".", "batch_size", ")", "\n", "return", "mse_image", "\n", "\n"]], "home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.utils.MSE_denormalized.mse_denormalized_per_pixel": [[26, 32], ["utils.MSE_denormalized.mse_denormalized_per_image", "tensorflow.truediv"], "methods", ["home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.utils.MSE_denormalized.mse_denormalized_per_image"], ["", "def", "mse_denormalized_per_pixel", "(", "self", ",", "y_true", ",", "y_pred", ")", ":", "\n", "# Calculating mse per image", "\n", "        ", "mse_image", "=", "self", ".", "mse_denormalized_per_image", "(", "y_true", ",", "y_pred", ")", "\n", "# Calculating mse per pixel", "\n", "mse_pixel", "=", "tf", ".", "truediv", "(", "mse_image", ",", "self", ".", "n_pixels", ")", "\n", "return", "mse_pixel", "\n", "\n"]], "home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.utils.thresholded_mask_metrics.__init__": [[36, 49], ["tensorflow.keras.losses.MeanSquaredError", "tensorflow.keras.metrics.Accuracy", "tensorflow.keras.metrics.Precision", "tensorflow.keras.metrics.Recall", "tensorflow.keras.metrics.TruePositives", "tensorflow.keras.metrics.TrueNegatives", "tensorflow.keras.metrics.FalsePositives", "tensorflow.keras.metrics.FalseNegatives", "numpy.mean"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "test_data", "=", "None", ",", "threshold", "=", "None", ")", ":", "\n", "        ", "self", ".", "_binarized_mse", "=", "tf", ".", "keras", ".", "losses", ".", "MeanSquaredError", "(", ")", "\n", "self", ".", "_acc", "=", "tf", ".", "keras", ".", "metrics", ".", "Accuracy", "(", ")", "\n", "self", ".", "_precision", "=", "tf", ".", "keras", ".", "metrics", ".", "Precision", "(", ")", "\n", "self", ".", "_recall", "=", "tf", ".", "keras", ".", "metrics", ".", "Recall", "(", ")", "\n", "if", "threshold", "is", "not", "None", ":", "\n", "            ", "self", ".", "_threshold", "=", "threshold", "\n", "", "else", ":", "\n", "            ", "self", ".", "_threshold", "=", "np", ".", "mean", "(", "test_data", ")", "\n", "", "self", ".", "_TP", "=", "tf", ".", "keras", ".", "metrics", ".", "TruePositives", "(", ")", "\n", "self", ".", "_TN", "=", "tf", ".", "keras", ".", "metrics", ".", "TrueNegatives", "(", ")", "\n", "self", ".", "_FP", "=", "tf", ".", "keras", ".", "metrics", ".", "FalsePositives", "(", ")", "\n", "self", ".", "_FN", "=", "tf", ".", "keras", ".", "metrics", ".", "FalseNegatives", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.utils.thresholded_mask_metrics.binarize_mask": [[50, 59], ["tensorflow.cast", "tensorflow.cast", "tensorflow.cast", "tensorflow.where", "tensorflow.where", "tensorflow.constant", "tensorflow.constant", "tensorflow.constant", "tensorflow.math.greater_equal", "tensorflow.math.less"], "methods", ["None"], ["", "def", "binarize_mask", "(", "self", ",", "values", ")", ":", "\n", "# Initialize TF values", "\n", "        ", "zero", "=", "tf", ".", "cast", "(", "tf", ".", "constant", "(", "0", ")", ",", "tf", ".", "float32", ")", "\n", "one", "=", "tf", ".", "cast", "(", "tf", ".", "constant", "(", "1", ")", ",", "tf", ".", "float32", ")", "\n", "limit", "=", "tf", ".", "cast", "(", "tf", ".", "constant", "(", "self", ".", "_threshold", ")", ",", "tf", ".", "float32", ")", "\n", "# Replacing values for 0s and 1s", "\n", "values", "=", "tf", ".", "where", "(", "tf", ".", "math", ".", "greater_equal", "(", "values", ",", "limit", ")", ",", "one", ",", "values", ")", "\n", "values", "=", "tf", ".", "where", "(", "tf", ".", "math", ".", "less", "(", "values", ",", "limit", ")", ",", "zero", ",", "values", ")", "\n", "return", "values", "\n", "\n"]], "home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.utils.thresholded_mask_metrics.binarized_mse": [[60, 66], ["utils.thresholded_mask_metrics.binarize_mask", "utils.thresholded_mask_metrics.binarize_mask", "utils.thresholded_mask_metrics._binarized_mse"], "methods", ["home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.utils.thresholded_mask_metrics.binarize_mask", "home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.utils.thresholded_mask_metrics.binarize_mask"], ["", "def", "binarized_mse", "(", "self", ",", "y_true", ",", "y_pred", ")", ":", "\n", "# Binarize mask", "\n", "        ", "y_true", "=", "self", ".", "binarize_mask", "(", "y_true", ")", "\n", "y_pred", "=", "self", ".", "binarize_mask", "(", "y_pred", ")", "\n", "# Calculate metrics", "\n", "return", "self", ".", "_binarized_mse", "(", "y_true", ",", "y_pred", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.utils.thresholded_mask_metrics.acc": [[67, 73], ["utils.thresholded_mask_metrics.binarize_mask", "utils.thresholded_mask_metrics.binarize_mask", "utils.thresholded_mask_metrics._acc"], "methods", ["home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.utils.thresholded_mask_metrics.binarize_mask", "home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.utils.thresholded_mask_metrics.binarize_mask"], ["", "def", "acc", "(", "self", ",", "y_true", ",", "y_pred", ")", ":", "\n", "# Binarize mask", "\n", "        ", "y_true", "=", "self", ".", "binarize_mask", "(", "y_true", ")", "\n", "y_pred", "=", "self", ".", "binarize_mask", "(", "y_pred", ")", "\n", "# Calculate metrics", "\n", "return", "self", ".", "_acc", "(", "y_true", ",", "y_pred", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.utils.thresholded_mask_metrics.precision": [[74, 80], ["utils.thresholded_mask_metrics.binarize_mask", "utils.thresholded_mask_metrics.binarize_mask", "utils.thresholded_mask_metrics._precision"], "methods", ["home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.utils.thresholded_mask_metrics.binarize_mask", "home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.utils.thresholded_mask_metrics.binarize_mask"], ["", "def", "precision", "(", "self", ",", "y_true", ",", "y_pred", ")", ":", "\n", "# Binarize mask", "\n", "        ", "y_true", "=", "self", ".", "binarize_mask", "(", "y_true", ")", "\n", "y_pred", "=", "self", ".", "binarize_mask", "(", "y_pred", ")", "\n", "# Calculate metrics", "\n", "return", "self", ".", "_precision", "(", "y_true", ",", "y_pred", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.utils.thresholded_mask_metrics.recall": [[81, 87], ["utils.thresholded_mask_metrics.binarize_mask", "utils.thresholded_mask_metrics.binarize_mask", "utils.thresholded_mask_metrics._recall"], "methods", ["home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.utils.thresholded_mask_metrics.binarize_mask", "home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.utils.thresholded_mask_metrics.binarize_mask"], ["", "def", "recall", "(", "self", ",", "y_true", ",", "y_pred", ")", ":", "\n", "# Binarize mask", "\n", "        ", "y_true", "=", "self", ".", "binarize_mask", "(", "y_true", ")", "\n", "y_pred", "=", "self", ".", "binarize_mask", "(", "y_pred", ")", "\n", "# Calculate metrics", "\n", "return", "self", ".", "_recall", "(", "y_true", ",", "y_pred", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.utils.thresholded_mask_metrics.f1_score": [[88, 96], ["utils.thresholded_mask_metrics.binarize_mask", "utils.thresholded_mask_metrics.binarize_mask", "utils.thresholded_mask_metrics._precision", "utils.thresholded_mask_metrics._recall"], "methods", ["home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.utils.thresholded_mask_metrics.binarize_mask", "home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.utils.thresholded_mask_metrics.binarize_mask"], ["", "def", "f1_score", "(", "self", ",", "y_true", ",", "y_pred", ")", ":", "\n", "# Binarize mask", "\n", "        ", "y_true", "=", "self", ".", "binarize_mask", "(", "y_true", ")", "\n", "y_pred", "=", "self", ".", "binarize_mask", "(", "y_pred", ")", "\n", "# Calculate metrics", "\n", "precision", "=", "self", ".", "_precision", "(", "y_true", ",", "y_pred", ")", "\n", "recall", "=", "self", ".", "_recall", "(", "y_true", ",", "y_pred", ")", "\n", "return", "2", "*", "precision", "*", "recall", "/", "(", "precision", "+", "recall", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.utils.thresholded_mask_metrics.CSI": [[97, 108], ["utils.thresholded_mask_metrics.binarize_mask", "utils.thresholded_mask_metrics.binarize_mask", "utils.thresholded_mask_metrics._TP", "utils.thresholded_mask_metrics._TN", "utils.thresholded_mask_metrics._FP", "utils.thresholded_mask_metrics._FN"], "methods", ["home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.utils.thresholded_mask_metrics.binarize_mask", "home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.utils.thresholded_mask_metrics.binarize_mask"], ["", "def", "CSI", "(", "self", ",", "y_true", ",", "y_pred", ")", ":", "\n", "# Binarize mask", "\n", "        ", "y_true", "=", "self", ".", "binarize_mask", "(", "y_true", ")", "\n", "y_pred", "=", "self", ".", "binarize_mask", "(", "y_pred", ")", "\n", "# Calculate TP, TN, FP, FN", "\n", "TP", "=", "self", ".", "_TP", "(", "y_true", ",", "y_pred", ")", "\n", "TN", "=", "self", ".", "_TN", "(", "y_true", ",", "y_pred", ")", "\n", "FP", "=", "self", ".", "_FP", "(", "y_true", ",", "y_pred", ")", "\n", "FN", "=", "self", ".", "_FN", "(", "y_true", ",", "y_pred", ")", "\n", "# Calculate metrics", "\n", "return", "TP", "/", "(", "TP", "+", "FN", "+", "FP", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.utils.thresholded_mask_metrics.FAR": [[109, 120], ["utils.thresholded_mask_metrics.binarize_mask", "utils.thresholded_mask_metrics.binarize_mask", "utils.thresholded_mask_metrics._TP", "utils.thresholded_mask_metrics._TN", "utils.thresholded_mask_metrics._FP", "utils.thresholded_mask_metrics._FN"], "methods", ["home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.utils.thresholded_mask_metrics.binarize_mask", "home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.utils.thresholded_mask_metrics.binarize_mask"], ["", "def", "FAR", "(", "self", ",", "y_true", ",", "y_pred", ")", ":", "\n", "# Binarize mask", "\n", "        ", "y_true", "=", "self", ".", "binarize_mask", "(", "y_true", ")", "\n", "y_pred", "=", "self", ".", "binarize_mask", "(", "y_pred", ")", "\n", "# Calculate TP, TN, FP, FN", "\n", "TP", "=", "self", ".", "_TP", "(", "y_true", ",", "y_pred", ")", "\n", "TN", "=", "self", ".", "_TN", "(", "y_true", ",", "y_pred", ")", "\n", "FP", "=", "self", ".", "_FP", "(", "y_true", ",", "y_pred", ")", "\n", "FN", "=", "self", ".", "_FN", "(", "y_true", ",", "y_pred", ")", "\n", "# Calculate metrics", "\n", "return", "FP", "/", "(", "TP", "+", "FP", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.utils.model_persistence": [[122, 124], ["None"], "function", ["None"], ["", "", "def", "model_persistence", "(", "x", ")", ":", "\n", "    ", "return", "x", "[", ":", ",", ":", ",", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.utils.acc": [[126, 128], ["numpy.sum", "numpy.asarray", "numpy.asarray"], "function", ["None"], ["", "def", "acc", "(", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "return", "np", ".", "sum", "(", "(", "np", ".", "asarray", "(", "y_true", ")", "==", "np", ".", "asarray", "(", "y_pred", ")", ")", ")", "/", "(", "y_true", ".", "shape", "[", "0", "]", "*", "y_true", ".", "shape", "[", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.utils.precision": [[130, 134], ["None"], "function", ["None"], ["", "def", "precision", "(", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "TP", "=", "(", "(", "y_pred", "==", "1", ")", "&", "(", "y_true", "==", "1", ")", ")", ".", "sum", "(", ")", "\n", "FP", "=", "(", "(", "y_pred", "==", "1", ")", "&", "(", "y_true", "==", "0", ")", ")", ".", "sum", "(", ")", "\n", "return", "TP", "/", "(", "TP", "+", "FP", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.utils.recall": [[136, 141], ["None"], "function", ["None"], ["", "def", "recall", "(", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "TP", "=", "(", "(", "y_pred", "==", "1", ")", "&", "(", "y_true", "==", "1", ")", ")", ".", "sum", "(", ")", "\n", "FP", "=", "(", "(", "y_pred", "==", "1", ")", "&", "(", "y_true", "==", "0", ")", ")", ".", "sum", "(", ")", "\n", "FN", "=", "(", "(", "y_pred", "==", "0", ")", "&", "(", "y_true", "==", "1", ")", ")", ".", "sum", "(", ")", "\n", "return", "TP", "/", "(", "TP", "+", "FN", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jesusgf96_broad-unet.None.utils.extract_datasets": [[143, 154], ["utils.extract_datasets.h5py_dataset_iterator"], "function", ["None"], ["", "def", "extract_datasets", "(", "hdf_file", ")", ":", "\n", "    ", "def", "h5py_dataset_iterator", "(", "g", ",", "prefix", "=", "''", ")", ":", "\n", "        ", "for", "key", "in", "g", ".", "keys", "(", ")", ":", "\n", "            ", "item", "=", "g", "[", "key", "]", "\n", "path", "=", "f'{prefix}/{key}'", "\n", "if", "isinstance", "(", "item", ",", "h5py", ".", "Dataset", ")", ":", "# test for dataset", "\n", "                ", "yield", "(", "path", ",", "item", ")", "\n", "", "elif", "isinstance", "(", "item", ",", "h5py", ".", "Group", ")", ":", "# test for group (go down)", "\n", "                ", "yield", "from", "h5py_dataset_iterator", "(", "item", ",", "path", ")", "\n", "", "", "", "for", "path", ",", "_", "in", "h5py_dataset_iterator", "(", "hdf_file", ")", ":", "\n", "        ", "yield", "path", "", "", "", ""]]}