{"home.repos.pwc.inspect_result.neuroethology_TREBA.None.feature_extraction.extract_features": [[11, 88], ["print", "os.path.join", "os.path.isfile", "util.datasets.load_dataset", "util.datasets.load_dataset.eval", "torch.load", "lib.models.get_model_class", "lib.models.get_model_class.", "model_class.load_state_dict", "torch.utils.data.DataLoader", "next", "states.transpose.transpose", "actions.transpose.transpose", "numpy.array", "enumerate", "numpy.savez", "print", "os.path.join", "open", "json.load", "os.path.join", "model_config[].lower", "iter", "states.transpose.transpose", "actions.transpose.transpose", "os.path.join", "os.path.join", "torch.no_grad", "os.path.join", "labels_dict.items", "len", "enumerate", "torch.cat", "model_class.encode_mean", "model_class.encode_mean", "numpy.concatenate", "label_list.append"], "function", ["home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.__init__.load_dataset", "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.TrajectoryDataset.eval", "home.repos.pwc.inspect_result.neuroethology_TREBA.models.__init__.get_model_class", "home.repos.pwc.inspect_result.neuroethology_TREBA.models.core.BaseSequentialModel.encode_mean", "home.repos.pwc.inspect_result.neuroethology_TREBA.models.core.BaseSequentialModel.encode_mean"], ["def", "extract_features", "(", "exp_dir", ",", "\n", "trial_id", ",", "\n", "test_name", ",", "\n", "save_name", ")", ":", "\n", "    ", "'''Saves features after training. '''", "\n", "print", "(", "'#################### Feature Extraction {} ####################'", ".", "format", "(", "trial_id", ")", ")", "\n", "\n", "# Get trial folder", "\n", "trial_dir", "=", "os", ".", "path", ".", "join", "(", "exp_dir", ",", "trial_id", ")", "\n", "assert", "os", ".", "path", ".", "isfile", "(", "os", ".", "path", ".", "join", "(", "trial_dir", ",", "'summary.json'", ")", ")", "\n", "\n", "# Load config", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "exp_dir", ",", "'configs'", ",", "'{}.json'", ".", "format", "(", "trial_id", ")", ")", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "config", "=", "json", ".", "load", "(", "f", ")", "\n", "", "data_config", "=", "config", "[", "'data_config'", "]", "\n", "model_config", "=", "config", "[", "'model_config'", "]", "\n", "\n", "# No need to load training data for feature extraction.", "\n", "\n", "data_config", "[", "\"label_train_set\"", "]", "=", "False", "\n", "# Load dataset", "\n", "if", "test_name", "is", "not", "None", ":", "\n", "        ", "data_config", "[", "\"test_name\"", "]", "=", "test_name", "\n", "\n", "", "dataset", "=", "load_dataset", "(", "data_config", ")", "\n", "dataset", ".", "eval", "(", ")", "\n", "\n", "# Load best model", "\n", "state_dict", "=", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "\n", "trial_dir", ",", "'best.pth'", ")", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", "\n", "\n", "model_class", "=", "get_model_class", "(", "model_config", "[", "'name'", "]", ".", "lower", "(", ")", ")", "\n", "\n", "model_config", "[", "'label_functions'", "]", "=", "dataset", ".", "active_label_functions", "\n", "\n", "model_config", "[", "'augmentations'", "]", "=", "dataset", ".", "active_augmentations", "\n", "model", "=", "model_class", "(", "model_config", ")", "\n", "model", ".", "load_state_dict", "(", "state_dict", ")", "\n", "\n", "num_samples", "=", "128", "\n", "loader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "num_samples", ",", "shuffle", "=", "False", ")", "\n", "(", "states", ",", "actions", ",", "labels_dict", ")", "=", "next", "(", "iter", "(", "loader", ")", ")", "\n", "\n", "states", "=", "states", ".", "transpose", "(", "0", ",", "1", ")", "\n", "actions", "=", "actions", ".", "transpose", "(", "0", ",", "1", ")", "\n", "\n", "save_array", "=", "np", ".", "array", "(", "[", "]", ")", "\n", "\n", "for", "batch_idx", ",", "(", "states", ",", "actions", ",", "labels_dict", ")", "in", "enumerate", "(", "loader", ")", ":", "\n", "        ", "states", "=", "states", "\n", "actions", "=", "actions", "\n", "\n", "labels_dict", "=", "{", "key", ":", "value", "for", "key", ",", "value", "in", "labels_dict", ".", "items", "(", ")", "}", "\n", "\n", "states", "=", "states", ".", "transpose", "(", "0", ",", "1", ")", "\n", "actions", "=", "actions", ".", "transpose", "(", "0", ",", "1", ")", "\n", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "if", "len", "(", "dataset", ".", "active_label_functions", ")", ">", "0", ":", "\n", "                ", "label_list", "=", "[", "]", "\n", "for", "lf_idx", ",", "lf_name", "in", "enumerate", "(", "labels_dict", ")", ":", "\n", "                    ", "label_list", ".", "append", "(", "labels_dict", "[", "lf_name", "]", ")", "\n", "", "label_input", "=", "torch", ".", "cat", "(", "label_list", ",", "-", "1", ")", "\n", "\n", "encodings_mean", ",", "_", "=", "model", ".", "encode_mean", "(", "states", "[", ":", "-", "1", "]", ",", "actions", ",", "\n", "labels", "=", "label_input", ")", "\n", "", "else", ":", "\n", "                ", "encodings_mean", ",", "_", "=", "model", ".", "encode_mean", "(", "states", "[", ":", "-", "1", "]", ",", "actions", ")", "\n", "\n", "", "if", "save_array", ".", "shape", "[", "0", "]", "==", "0", ":", "\n", "                ", "save_array", "=", "encodings_mean", "\n", "", "else", ":", "\n", "                ", "save_array", "=", "np", ".", "concatenate", "(", "[", "save_array", ",", "encodings_mean", "]", ",", "axis", "=", "0", ")", "\n", "\n", "", "", "", "np", ".", "savez", "(", "os", ".", "path", ".", "join", "(", "trial_dir", ",", "save_name", ")", ",", "save_array", ")", "\n", "print", "(", "\"Saved Features: \"", "+", "os", ".", "path", ".", "join", "(", "trial_dir", ",", "save_name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.None.train.run_epoch": [[14, 47], ["util.logging.LogEntry", "enumerate", "util.logging.LogEntry.average", "print", "print", "util.logging.LogEntry.to_dict", "model.eval.train", "data_loader.dataset.train", "model.eval.eval", "data_loader.dataset.eval", "states.to.to", "actions.to.to", "model.eval.", "model.itemize", "util.logging.LogEntry.absorb", "str", "value.to", "model.eval.optimize", "len", "labels_dict.items"], "function", ["home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.average", "home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.to_dict", "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.TrajectoryDataset.train", "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.TrajectoryDataset.train", "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.TrajectoryDataset.eval", "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.TrajectoryDataset.eval", "home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.itemize", "home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.absorb", "home.repos.pwc.inspect_result.neuroethology_TREBA.models.treba_model.TREBA_model.optimize"], ["def", "run_epoch", "(", "data_loader", ",", "model", ",", "device", ",", "train", "=", "True", ",", "early_break", "=", "False", ")", ":", "\n", "    ", "log", "=", "LogEntry", "(", ")", "\n", "\n", "# Setting model and dataset into train/eval mode", "\n", "if", "train", ":", "\n", "        ", "model", "=", "model", ".", "train", "(", ")", "\n", "data_loader", ".", "dataset", ".", "train", "(", ")", "\n", "", "else", ":", "\n", "        ", "model", "=", "model", ".", "eval", "(", ")", "\n", "data_loader", ".", "dataset", ".", "eval", "(", ")", "\n", "\n", "", "for", "batch_idx", ",", "(", "states", ",", "actions", ",", "labels_dict", ")", "in", "enumerate", "(", "data_loader", ")", ":", "\n", "        ", "states", "=", "states", ".", "to", "(", "device", ")", "\n", "actions", "=", "actions", ".", "to", "(", "device", ")", "\n", "labels_dict", "=", "{", "key", ":", "value", ".", "to", "(", "device", ")", "for", "key", ",", "value", "in", "labels_dict", ".", "items", "(", ")", "}", "\n", "\n", "batch_log", "=", "model", "(", "states", ",", "actions", ",", "labels_dict", ")", "\n", "\n", "if", "train", ":", "\n", "            ", "model", ".", "optimize", "(", "batch_log", ".", "losses", ")", "\n", "\n", "", "batch_log", ".", "itemize", "(", ")", "# itemize here since we shouldn't need gradient information anymore", "\n", "log", ".", "absorb", "(", "batch_log", ")", "\n", "\n", "if", "early_break", ":", "\n", "            ", "break", "\n", "\n", "", "", "log", ".", "average", "(", "N", "=", "len", "(", "data_loader", ".", "dataset", ")", ")", "\n", "\n", "print", "(", "'TRAIN'", "if", "train", "else", "'TEST'", ")", "\n", "print", "(", "str", "(", "log", ")", ")", "\n", "\n", "return", "log", ".", "to_dict", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.None.train.start_training": [[49, 173], ["torch.manual_seed", "torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "numpy.random.seed", "random.seed", "util.datasets.load_dataset", "lib.models.get_model_class", "lib.models.get_model_class.to", "torch.utils.data.DataLoader", "isinstance", "time.time", "torch.save", "torch.save", "print", "round", "model_config.pop", "model_config.pop", "random.randint", "model_config[].lower", "print", "os.path.join", "torch.load", "torch.load", "model_class().to.load_state_dict", "torch.save", "torch.save", "model_class().to.prepare_stage", "time.time", "print", "range", "summary[].append", "model_class().to.state_dict", "os.path.join", "lib.models.get_model_class.", "numpy.random.seed", "os.path.dirname", "model_class().to.state_dict", "os.path.join", "print", "time.time", "train.run_epoch", "train.run_epoch", "print", "logger.append", "len", "torch.load", "torch.load", "model_class().to.load_state_dict", "torch.save", "torch.save", "time.time", "os.path.dirname", "time.time", "torch.save", "torch.save", "print", "best_test_log_times.append", "torch.save", "torch.save", "print", "round", "os.path.join", "model_class().to.state_dict", "os.path.join", "sum", "model_class().to.state_dict", "os.path.join", "sum", "sum", "model_class().to.state_dict", "os.path.join", "test_log[].values", "best_test_log[].values", "time.time"], "function", ["home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.__init__.load_dataset", "home.repos.pwc.inspect_result.neuroethology_TREBA.models.__init__.get_model_class", "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.FlyV1Dataset.save", "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.FlyV1Dataset.save", "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.FlyV1Dataset.save", "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.FlyV1Dataset.save", "home.repos.pwc.inspect_result.neuroethology_TREBA.models.core.BaseSequentialModel.prepare_stage", "home.repos.pwc.inspect_result.neuroethology_TREBA.None.train.run_epoch", "home.repos.pwc.inspect_result.neuroethology_TREBA.None.train.run_epoch", "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.FlyV1Dataset.save", "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.FlyV1Dataset.save", "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.FlyV1Dataset.save", "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.FlyV1Dataset.save", "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.FlyV1Dataset.save", "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.FlyV1Dataset.save"], ["", "def", "start_training", "(", "save_path", ",", "data_config", ",", "model_config", ",", "train_config", ",", "device", ",", "test_code", "=", "False", ")", ":", "\n", "    ", "summary", "=", "{", "'training'", ":", "[", "]", "}", "\n", "logger", "=", "[", "]", "\n", "\n", "# Sample and fix a random seed if not set in train_config", "\n", "if", "'seed'", "not", "in", "train_config", ":", "\n", "        ", "train_config", "[", "'seed'", "]", "=", "random", ".", "randint", "(", "0", ",", "9999", ")", "\n", "", "seed", "=", "train_config", "[", "'seed'", "]", "\n", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "random", ".", "seed", "(", "seed", ")", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "\n", "# Initialize dataset", "\n", "dataset", "=", "load_dataset", "(", "data_config", ")", "\n", "summary", "[", "'dataset'", "]", "=", "dataset", ".", "summary", "\n", "\n", "# Add state and action dims to model config", "\n", "model_config", "[", "'state_dim'", "]", "=", "dataset", ".", "state_dim", "\n", "model_config", "[", "'action_dim'", "]", "=", "dataset", ".", "action_dim", "\n", "\n", "# Get model class", "\n", "model_class", "=", "get_model_class", "(", "model_config", "[", "'name'", "]", ".", "lower", "(", ")", ")", "\n", "\n", "# Check if model needs labels as input", "\n", "#if model_class.requires_labels:", "\n", "model_config", "[", "'label_dim'", "]", "=", "dataset", ".", "label_dim", "\n", "model_config", "[", "'label_functions'", "]", "=", "dataset", ".", "active_label_functions", "\n", "\n", "#if model_class.requires_augmentations:", "\n", "model_config", "[", "'augmentations'", "]", "=", "dataset", ".", "active_augmentations", "\n", "\n", "# Initialize model", "\n", "model", "=", "model_class", "(", "model_config", ")", ".", "to", "(", "device", ")", "\n", "summary", "[", "'model'", "]", "=", "model_config", "\n", "summary", "[", "'model'", "]", "[", "'num_parameters'", "]", "=", "model", ".", "num_parameters", "\n", "\n", "# Initialize dataloaders", "\n", "kwargs", "=", "{", "'num_workers'", ":", "8", ",", "'pin_memory'", ":", "False", ",", "'worker_init_fn'", ":", "np", ".", "random", ".", "seed", "(", "seed", ")", "}", "if", "device", "is", "not", "'cpu'", "else", "{", "}", "\n", "data_loader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "train_config", "[", "'batch_size'", "]", ",", "shuffle", "=", "True", ",", "**", "kwargs", ")", "\n", "\n", "# Initialize with pretrained model (if specified)", "\n", "if", "'pretrained_model'", "in", "train_config", ":", "\n", "        ", "print", "(", "'LOADING pretrained model: {}'", ".", "format", "(", "train_config", "[", "'pretrained_model'", "]", ")", ")", "\n", "# model_path = os.path.join(os.path.dirname(save_path), train_config['pretrained_model'])", "\n", "model_path", "=", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "dirname", "(", "save_path", ")", ")", ",", "train_config", "[", "'pretrained_model'", "]", ")", "\n", "state_dict", "=", "torch", ".", "load", "(", "model_path", ")", "\n", "model", ".", "load_state_dict", "(", "state_dict", ")", "\n", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "save_path", ",", "'best.pth'", ")", ")", "# copy over best model", "\n", "\n", "# Start training", "\n", "", "if", "isinstance", "(", "train_config", "[", "'num_epochs'", "]", ",", "int", ")", ":", "\n", "        ", "train_config", "[", "'num_epochs'", "]", "=", "[", "train_config", "[", "'num_epochs'", "]", "]", "\n", "\n", "", "start_time", "=", "time", ".", "time", "(", ")", "\n", "epochs_done", "=", "0", "\n", "\n", "for", "num_epochs", "in", "train_config", "[", "'num_epochs'", "]", ":", "\n", "\n", "        ", "model", ".", "prepare_stage", "(", "train_config", ")", "\n", "stage_start_time", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "'##### STAGE {} #####'", ".", "format", "(", "model", ".", "stage", ")", ")", "\n", "\n", "best_test_log", "=", "{", "}", "\n", "best_test_log_times", "=", "[", "]", "\n", "\n", "for", "epoch", "in", "range", "(", "num_epochs", ")", ":", "\n", "            ", "epochs_done", "+=", "1", "\n", "print", "(", "'--- EPOCH [{}/{}] ---'", ".", "format", "(", "epochs_done", ",", "sum", "(", "train_config", "[", "'num_epochs'", "]", ")", ")", ")", "\n", "\n", "epoch_start_time", "=", "time", ".", "time", "(", ")", "\n", "train_log", "=", "run_epoch", "(", "data_loader", ",", "model", ",", "device", ",", "train", "=", "True", ",", "early_break", "=", "test_code", ")", "\n", "test_log", "=", "run_epoch", "(", "data_loader", ",", "model", ",", "device", ",", "train", "=", "False", ",", "early_break", "=", "test_code", ")", "\n", "epoch_time", "=", "time", ".", "time", "(", ")", "-", "epoch_start_time", "\n", "print", "(", "'{:.3f} seconds'", ".", "format", "(", "epoch_time", ")", ")", "\n", "\n", "logger", ".", "append", "(", "{", "\n", "'epoch'", ":", "epochs_done", ",", "\n", "'stage'", ":", "model", ".", "stage", ",", "\n", "'train'", ":", "train_log", ",", "\n", "'test'", ":", "test_log", ",", "\n", "'time'", ":", "epoch_time", "\n", "}", ")", "\n", "\n", "# Save model checkpoints", "\n", "if", "epochs_done", "%", "train_config", "[", "'checkpoint_freq'", "]", "==", "0", ":", "\n", "                ", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "save_path", ",", "'checkpoints'", ",", "'checkpoint_{}.pth'", ".", "format", "(", "epochs_done", ")", ")", ")", "\n", "print", "(", "'Checkpoint saved'", ")", "\n", "\n", "# Save model with best test loss during stage", "\n", "", "if", "epoch", "==", "0", "or", "sum", "(", "test_log", "[", "'losses'", "]", ".", "values", "(", ")", ")", "<", "sum", "(", "best_test_log", "[", "'losses'", "]", ".", "values", "(", ")", ")", ":", "\n", "\n", "                ", "best_test_log", "=", "test_log", "\n", "best_test_log_times", ".", "append", "(", "epochs_done", ")", "\n", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "save_path", ",", "'best.pth'", ")", ")", "\n", "print", "(", "'Best model saved'", ")", "\n", "\n", "# Save training statistics by stage", "\n", "", "", "summary", "[", "'training'", "]", ".", "append", "(", "{", "\n", "'stage'", ":", "model", ".", "stage", ",", "\n", "'num_epochs'", ":", "num_epochs", ",", "\n", "'stage_time'", ":", "round", "(", "time", ".", "time", "(", ")", "-", "stage_start_time", ",", "3", ")", ",", "\n", "'best_test_log_times'", ":", "best_test_log_times", ",", "\n", "'best_test_log'", ":", "best_test_log", "\n", "}", ")", "\n", "\n", "# Load best model for next stage", "\n", "if", "model", ".", "stage", "<", "len", "(", "train_config", "[", "'num_epochs'", "]", ")", ":", "\n", "            ", "best_state", "=", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "save_path", ",", "'best.pth'", ")", ")", "\n", "model", ".", "load_state_dict", "(", "best_state", ")", "\n", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "save_path", ",", "'best_stage_{}.pth'", ".", "format", "(", "model", ".", "stage", ")", ")", ")", "\n", "\n", "# Save final model", "\n", "", "", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "save_path", ",", "'final.pth'", ")", ")", "\n", "print", "(", "'Final model saved'", ")", "\n", "\n", "# Save total time", "\n", "summary", "[", "'total_time'", "]", "=", "round", "(", "time", ".", "time", "(", ")", "-", "start_time", ",", "3", ")", "\n", "\n", "model_config", ".", "pop", "(", "'label_functions'", ")", "\n", "model_config", ".", "pop", "(", "'augmentations'", ")", "\n", "\n", "return", "summary", ",", "logger", ",", "data_config", ",", "model_config", ",", "train_config", "\n", "", ""]], "home.repos.pwc.inspect_result.neuroethology_TREBA.distributions.core.Distribution.__init__": [[5, 7], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Distribution", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.distributions.core.Distribution.sample": [[8, 10], ["None"], "methods", ["None"], ["", "def", "sample", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.distributions.core.Distribution.log_prob": [[11, 13], ["None"], "methods", ["None"], ["", "def", "log_prob", "(", "self", ",", "value", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "", "", ""]], "home.repos.pwc.inspect_result.neuroethology_TREBA.distributions.multinomial.Multinomial.__init__": [[9, 13], ["core.Distribution.__init__"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.__init__"], ["    ", "def", "__init__", "(", "self", ",", "log_probs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "log_probs", "=", "log_probs", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.distributions.multinomial.Multinomial.sample": [[14, 19], ["torch.multinomial", "torch.multinomial", "torch.multinomial", "torch.multinomial", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros.scatter_", "torch.zeros.scatter_", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "multinomial.Multinomial.log_probs.size"], "methods", ["None"], ["", "def", "sample", "(", "self", ")", ":", "\n", "        ", "inds", "=", "torch", ".", "multinomial", "(", "torch", ".", "exp", "(", "self", ".", "log_probs", ")", ",", "1", ")", "\n", "samples", "=", "torch", ".", "zeros", "(", "self", ".", "log_probs", ".", "size", "(", ")", ")", "\n", "samples", ".", "scatter_", "(", "-", "1", ",", "inds", ",", "1", ")", "\n", "return", "samples", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.distributions.multinomial.Multinomial.log_prob": [[20, 23], ["torch.sum", "torch.sum", "torch.sum", "torch.sum", "value.size", "multinomial.Multinomial.log_probs.size"], "methods", ["None"], ["", "def", "log_prob", "(", "self", ",", "value", ")", ":", "\n", "        ", "assert", "value", ".", "size", "(", ")", "==", "self", ".", "log_probs", ".", "size", "(", ")", "\n", "return", "torch", ".", "sum", "(", "self", ".", "log_probs", "*", "value", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.neuroethology_TREBA.distributions.normal.Normal.__init__": [[12, 17], ["core.Distribution.__init__", "torch.clamp"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.__init__"], ["def", "__init__", "(", "self", ",", "mean", ",", "logvar", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "mean", "=", "mean", "\n", "self", ".", "logvar", "=", "torch", ".", "clamp", "(", "logvar", ",", "self", ".", "logvar_min", ",", "self", ".", "logvar_max", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.distributions.normal.Normal.sample": [[18, 22], ["torch.exp", "torch.randn_like"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "temperature", "=", "1.0", ")", ":", "\n", "        ", "std", "=", "torch", ".", "exp", "(", "self", ".", "logvar", "/", "2", ")", "\n", "eps", "=", "torch", ".", "randn_like", "(", "std", ")", "\n", "return", "self", ".", "mean", "+", "eps", "*", "std", "*", "temperature", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.distributions.normal.Normal.log_prob": [[23, 28], ["torch.FloatTensor().to", "torch.log", "torch.sum", "torch.FloatTensor", "torch.exp"], "methods", ["None"], ["", "def", "log_prob", "(", "self", ",", "value", ")", ":", "\n", "        ", "pi", "=", "torch", ".", "FloatTensor", "(", "[", "math", ".", "pi", "]", ")", ".", "to", "(", "value", ".", "device", ")", "\n", "nll_element", "=", "(", "value", "-", "self", ".", "mean", ")", ".", "pow", "(", "2", ")", "/", "torch", ".", "exp", "(", "self", ".", "logvar", ")", "+", "self", ".", "logvar", "+", "torch", ".", "log", "(", "2", "*", "pi", ")", "\n", "return", "-", "0.5", "*", "torch", ".", "sum", "(", "nll_element", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.distributions.normal.Normal.kl_divergence": [[29, 62], ["isinstance", "torch.sum", "isinstance", "torch.max", "torch.ones().to", "torch.exp", "mean_1.pow", "torch.ones", "torch.exp", "torch.max.size", "torch.exp"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "kl_divergence", "(", "normal_1", ",", "normal_2", "=", "None", ",", "free_bits", "=", "0.0", ")", ":", "\n", "        ", "'''\n        Computes the kl-divergence between two normal distributions.\n\n        Args:\n            normal_1 (Normal): first normal distribution\n            normal_2 (Normal): second normal distribution (assume standard normal if not provided)\n        '''", "\n", "\n", "assert", "isinstance", "(", "normal_1", ",", "Normal", ")", "\n", "mean_1", ",", "logvar_1", "=", "normal_1", ".", "mean", ",", "normal_1", ".", "logvar", "\n", "\n", "if", "normal_2", "is", "not", "None", ":", "\n", "            ", "assert", "isinstance", "(", "normal_2", ",", "Normal", ")", "\n", "mean_2", ",", "logvar_2", "=", "normal_2", ".", "mean", ",", "normal_2", ".", "logvar", "\n", "\n", "kld_elements", "=", "0.5", "*", "(", "logvar_2", "-", "logvar_1", "+", "\n", "(", "torch", ".", "exp", "(", "logvar_1", ")", "+", "(", "mean_1", "-", "mean_2", ")", ".", "pow", "(", "2", ")", ")", "/", "\n", "torch", ".", "exp", "(", "logvar_2", ")", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "kld_elements", "=", "-", "0.5", "*", "(", "1", "+", "logvar_1", "-", "mean_1", ".", "pow", "(", "2", ")", "-", "torch", ".", "exp", "(", "logvar_1", ")", ")", "\n", "\n", "# Prevent posterior collapse with free bits", "\n", "", "if", "free_bits", ">", "0.0", ":", "\n", "            ", "_lambda", "=", "free_bits", "*", "torch", ".", "ones", "(", "kld_elements", ".", "size", "(", ")", ")", ".", "to", "(", "kld_elements", ".", "device", ")", "\n", "kld_elements", "=", "torch", ".", "max", "(", "kld_elements", ",", "_lambda", ")", "\n", "\n", "", "kld", "=", "torch", ".", "sum", "(", "kld_elements", ",", "dim", "=", "-", "1", ")", "\n", "\n", "return", "kld", "\n", "", "", ""]], "home.repos.pwc.inspect_result.neuroethology_TREBA.models.core.BaseSequentialModel.__init__": [[14, 44], ["torch.Module.__init__", "util.logging.LogEntry", "core.BaseSequentialModel._construct_model", "core.BaseSequentialModel._define_losses", "core.BaseSequentialModel.model_args.append", "set", "set", "len", "hasattr", "core.BaseSequentialModel.model_args.append", "core.BaseSequentialModel.model_args.append"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.__init__", "home.repos.pwc.inspect_result.neuroethology_TREBA.models.treba_model.TREBA_model._construct_model", "home.repos.pwc.inspect_result.neuroethology_TREBA.models.treba_model.TREBA_model._define_losses"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.models.core.BaseSequentialModel._construct_model": [[45, 47], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.models.core.BaseSequentialModel._define_losses": [[48, 50], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.models.core.BaseSequentialModel.num_parameters": [[51, 62], ["hasattr", "core.BaseSequentialModel.parameters", "p.size"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.models.core.BaseSequentialModel.init_hidden_state": [[63, 66], ["torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.models.core.BaseSequentialModel.update_hidden": [[67, 73], ["torch.cat().unsqueeze", "torch.cat().unsqueeze", "torch.cat().unsqueeze", "torch.cat().unsqueeze", "core.BaseSequentialModel.dec_rnn", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.models.core.BaseSequentialModel.encode": [[75, 93], ["core.BaseSequentialModel.enc_birnn", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "core.BaseSequentialModel.enc_mean", "core.BaseSequentialModel.enc_logvar", "lib.distributions.Normal", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "hasattr", "core.BaseSequentialModel.enc_fc", "states.size", "actions.size"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.models.core.BaseSequentialModel.encode_mean": [[94, 112], ["core.BaseSequentialModel.enc_birnn", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "core.BaseSequentialModel.enc_mean", "core.BaseSequentialModel.enc_logvar", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "hasattr", "core.BaseSequentialModel.enc_fc", "states.size", "actions.size"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.models.core.BaseSequentialModel.decode_action": [[113, 128], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "core.BaseSequentialModel.dec_action_fc", "core.BaseSequentialModel.dec_action_mean", "isinstance", "lib.distributions.Normal", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "core.BaseSequentialModel.dec_action_logvar"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.models.core.BaseSequentialModel.reset_policy": [[129, 151], ["labels.size", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "core.BaseSequentialModel.init_hidden_state().to", "labels.size", "labels.size", "torch.randn().to.size", "torch.randn().to.size", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "core.BaseSequentialModel.init_hidden_state", "torch.randn().to.size", "torch.randn().to.size"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.models.core.BaseSequentialModel.init_hidden_state"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.models.core.BaseSequentialModel.act": [[153, 161], ["core.BaseSequentialModel.decode_action", "core.BaseSequentialModel.sample", "core.BaseSequentialModel.update_hidden"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.models.treba_model.TREBA_model.decode_action", "home.repos.pwc.inspect_result.neuroethology_TREBA.distributions.normal.Normal.sample", "home.repos.pwc.inspect_result.neuroethology_TREBA.models.core.BaseSequentialModel.update_hidden"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.models.core.BaseSequentialModel.prepare_stage": [[162, 166], ["core.BaseSequentialModel.init_optimizer", "torch.utils.clip_grad_norm_", "torch.utils.clip_grad_norm_", "core.BaseSequentialModel.parameters"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.models.treba_model.TREBA_model.init_optimizer"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.models.core.BaseSequentialModel.init_optimizer": [[167, 171], ["torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "filter", "core.BaseSequentialModel.parameters"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.models.core.BaseSequentialModel.optimize": [[172, 179], ["isinstance", "core.BaseSequentialModel.optimizer.zero_grad", "sum", "sum.backward", "core.BaseSequentialModel.clip_grad", "core.BaseSequentialModel.optimizer.step", "losses.values"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.models.treba_model.TREBA_model.__init__": [[35, 37], ["lib.models.core.BaseSequentialModel.__init__"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.__init__"], ["def", "__init__", "(", "self", ",", "model_config", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "model_config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.models.treba_model.TREBA_model._construct_model": [[38, 122], ["treba_model.TREBA_model.loss_params.keys", "torch.GRU", "torch.GRU", "torch.GRU", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "treba_model.TREBA_model.config.keys", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.GRU", "torch.GRU", "torch.GRU", "len", "treba_model.TREBA_model.config.keys", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.GRU", "torch.GRU", "torch.GRU", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["None"], ["", "def", "_construct_model", "(", "self", ")", ":", "\n", "        ", "state_dim", "=", "self", ".", "config", "[", "'state_dim'", "]", "\n", "action_dim", "=", "self", ".", "config", "[", "'action_dim'", "]", "\n", "z_dim", "=", "self", ".", "config", "[", "'z_dim'", "]", "\n", "h_dim", "=", "self", ".", "config", "[", "'h_dim'", "]", "\n", "enc_rnn_dim", "=", "self", ".", "config", "[", "'rnn_dim'", "]", "\n", "dec_rnn_dim", "=", "self", ".", "config", "[", "'rnn_dim'", "]", "if", "self", ".", "is_recurrent", "else", "0", "\n", "label_rnn_dim", "=", "self", ".", "config", "[", "'rnn_dim'", "]", "\n", "num_layers", "=", "self", ".", "config", "[", "'num_layers'", "]", "\n", "\n", "for", "param_key", "in", "self", ".", "loss_params", ".", "keys", "(", ")", ":", "\n", "            ", "if", "param_key", "in", "self", ".", "config", ".", "keys", "(", ")", ":", "\n", "                ", "self", ".", "loss_params", "[", "param_key", "]", "=", "self", ".", "config", "[", "param_key", "]", "\n", "\n", "# Define models used in TREBA.", "\n", "", "", "self", ".", "enc_birnn", "=", "nn", ".", "GRU", "(", "state_dim", "+", "action_dim", ",", "enc_rnn_dim", ",", "\n", "num_layers", "=", "num_layers", ",", "bidirectional", "=", "True", ")", "\n", "\n", "# If label functions are defined in config.", "\n", "if", "'label_functions'", "in", "self", ".", "config", ".", "keys", "(", ")", ":", "\n", "            ", "self", ".", "label_functions", "=", "self", ".", "config", "[", "'label_functions'", "]", "\n", "label_dim", "=", "self", ".", "config", "[", "'label_dim'", "]", "\n", "", "else", ":", "\n", "            ", "label_dim", "=", "0", "\n", "\n", "# Define TVAE Encoder and Decoder.", "\n", "", "self", ".", "enc_fc", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "2", "*", "enc_rnn_dim", "+", "label_dim", ",", "h_dim", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "h_dim", ",", "h_dim", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "enc_mean", "=", "nn", ".", "Linear", "(", "h_dim", ",", "z_dim", ")", "\n", "self", ".", "enc_logvar", "=", "nn", ".", "Linear", "(", "h_dim", ",", "z_dim", ")", "\n", "\n", "self", ".", "dec_action_fc", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "state_dim", "+", "z_dim", "+", "dec_rnn_dim", ",", "h_dim", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "h_dim", ",", "h_dim", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "dec_action_mean", "=", "nn", ".", "Linear", "(", "h_dim", ",", "action_dim", ")", "\n", "self", ".", "dec_action_logvar", "=", "nn", ".", "Linear", "(", "h_dim", ",", "action_dim", ")", "\n", "\n", "# Whether the trajectory decoder is recurrent.", "\n", "if", "self", ".", "is_recurrent", ":", "\n", "            ", "self", ".", "dec_rnn", "=", "nn", ".", "GRU", "(", "state_dim", "+", "action_dim", ",", "dec_rnn_dim", ",", "num_layers", "=", "num_layers", ")", "\n", "\n", "# Define Models and Decoders for loss functions using labels.", "\n", "", "if", "len", "(", "self", ".", "label_functions", ")", ">", "0", ":", "\n", "# Consistency loss of labels from programmed labeling functions.", "\n", "            ", "if", "self", ".", "loss_params", "[", "'consistency_loss_weight'", "]", ">", "0", ":", "\n", "\n", "# Label approximator.", "\n", "                ", "self", ".", "label_approx_birnn", "=", "nn", ".", "ModuleList", "(", "[", "\n", "nn", ".", "GRU", "(", "state_dim", "+", "action_dim", ",", "label_rnn_dim", ",", "\n", "num_layers", "=", "num_layers", ",", "bidirectional", "=", "True", ")", "for", "lf", "in", "self", ".", "label_functions", "]", ")", "\n", "\n", "self", ".", "label_approx_fc", "=", "nn", ".", "ModuleList", "(", "[", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "2", "*", "label_rnn_dim", ",", "h_dim", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "h_dim", ",", "h_dim", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "h_dim", ",", "lf", ".", "output_dim", ")", ")", "for", "lf", "in", "self", ".", "label_functions", "]", ")", "\n", "\n", "# Contrastive loss of labels programmatically supervised by the functions.", "\n", "", "if", "self", ".", "loss_params", "[", "'contrastive_loss_weight'", "]", ">", "0", ":", "\n", "\n", "                ", "self", ".", "label_decoder_fc_contrastive", "=", "nn", ".", "ModuleList", "(", "[", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "z_dim", ",", "z_dim", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "z_dim", ",", "z_dim", ")", ")", "for", "lf", "in", "self", ".", "label_functions", "]", ")", "\n", "\n", "# Decoding loss.", "\n", "", "if", "self", ".", "loss_params", "[", "'decoding_loss_weight'", "]", ">", "0", ":", "\n", "                ", "self", ".", "label_decoder_fc_decoding", "=", "nn", ".", "ModuleList", "(", "[", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "z_dim", ",", "z_dim", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "z_dim", ",", "lf", ".", "output_dim", ")", ")", "for", "lf", "in", "self", ".", "label_functions", "]", ")", "\n", "", "", "else", ":", "\n", "# If we don't have labels, we can train using unsupervised contrastive loss.", "\n", "            ", "if", "self", ".", "loss_params", "[", "'contrastive_loss_weight'", "]", ">", "0", ":", "\n", "                ", "self", ".", "label_decoder_fc_contrastive", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "z_dim", ",", "z_dim", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "z_dim", ",", "z_dim", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.models.treba_model.TREBA_model._define_losses": [[123, 167], ["treba_model.TREBA_model.log.add_loss", "treba_model.TREBA_model.log.add_loss", "treba_model.TREBA_model.log.add_metric", "len", "treba_model.TREBA_model.config.keys", "treba_model.TREBA_model.log.add_loss", "treba_model.TREBA_model.log.add_loss", "treba_model.TREBA_model.log.add_metric", "treba_model.TREBA_model.config.keys", "treba_model.TREBA_model.log.add_loss", "treba_model.TREBA_model.log.add_loss", "treba_model.TREBA_model.log.add_metric", "treba_model.TREBA_model.log.add_metric", "len", "treba_model.TREBA_model.log.add_loss", "treba_model.TREBA_model.log.add_loss", "treba_model.TREBA_model.log.add_loss", "len", "treba_model.TREBA_model.log.add_loss", "treba_model.TREBA_model.log.add_loss"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.add_loss", "home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.add_loss", "home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.add_metric", "home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.add_loss", "home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.add_loss", "home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.add_metric", "home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.add_loss", "home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.add_loss", "home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.add_metric", "home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.add_metric", "home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.add_loss", "home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.add_loss", "home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.add_loss", "home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.add_loss", "home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.add_loss"], ["", "", "", "def", "_define_losses", "(", "self", ")", ":", "\n", "        ", "self", ".", "log", ".", "add_loss", "(", "'kl_div'", ")", "\n", "self", ".", "log", ".", "add_loss", "(", "'nll'", ")", "\n", "self", ".", "log", ".", "add_metric", "(", "'kl_div_true'", ")", "\n", "\n", "# Handle labeling function cases.", "\n", "if", "len", "(", "self", ".", "label_functions", ")", ">", "0", ":", "\n", "\n", "            ", "for", "lf", "in", "self", ".", "config", "[", "'label_functions'", "]", ":", "\n", "                ", "if", "self", ".", "config", "[", "'decoding_loss_weight'", "]", ">", "0", ":", "\n", "                    ", "self", ".", "log", ".", "add_loss", "(", "'decoded_'", "+", "lf", ".", "name", ")", "\n", "\n", "", "if", "self", ".", "loss_params", "[", "'consistency_loss_weight'", "]", ">", "0", ":", "\n", "\n", "                    ", "self", ".", "log", ".", "add_loss", "(", "lf", ".", "name", "+", "'_consistency'", ")", "\n", "self", ".", "log", ".", "add_metric", "(", "'{}_approx'", ".", "format", "(", "lf", ".", "name", ")", ")", "\n", "self", ".", "log", ".", "add_metric", "(", "'{}_true'", ".", "format", "(", "lf", ".", "name", ")", ")", "\n", "\n", "# Handle augmentation cases.", "\n", "", "", "", "if", "'augmentations'", "in", "self", ".", "config", ".", "keys", "(", ")", ":", "\n", "            ", "for", "aug", "in", "self", ".", "config", "[", "'augmentations'", "]", ":", "\n", "                ", "self", ".", "log", ".", "add_loss", "(", "'{}_kl_div'", ".", "format", "(", "aug", ".", "name", ")", ")", "\n", "self", ".", "log", ".", "add_loss", "(", "'{}_nll'", ".", "format", "(", "aug", ".", "name", ")", ")", "\n", "self", ".", "log", ".", "add_metric", "(", "'{}_kl_div_true'", ".", "format", "(", "aug", ".", "name", ")", ")", "\n", "\n", "for", "lf", "in", "self", ".", "label_functions", ":", "\n", "                    ", "if", "self", ".", "loss_params", "[", "'decoding_loss_weight'", "]", ">", "0", ":", "\n", "                        ", "self", ".", "log", ".", "add_loss", "(", "aug", ".", "name", "+", "'_decoded_'", "+", "lf", ".", "name", ")", "\n", "\n", "# Handle cases of unsupervised or programmatically supervised contrastive loss.  ", "\n", "", "", "", "", "if", "self", ".", "loss_params", "[", "'contrastive_loss_weight'", "]", ">", "0", ":", "\n", "            ", "if", "'augmentations'", "in", "self", ".", "config", ".", "keys", "(", ")", ":", "\n", "                ", "for", "aug", "in", "self", ".", "config", "[", "'augmentations'", "]", ":", "\n", "\n", "                    ", "if", "len", "(", "self", ".", "label_functions", ")", ">", "0", ":", "\n", "                        ", "for", "lf", "in", "self", ".", "label_functions", ":", "\n", "                            ", "self", ".", "log", ".", "add_loss", "(", "aug", ".", "name", "+", "'_contrastive_'", "+", "lf", ".", "name", ")", "\n", "", "", "else", ":", "\n", "                        ", "self", ".", "log", ".", "add_loss", "(", "aug", ".", "name", "+", "'_contrastive'", ")", "\n", "", "", "", "else", ":", "\n", "                ", "if", "len", "(", "self", ".", "label_functions", ")", ">", "0", ":", "\n", "                    ", "self", ".", "log", ".", "add_loss", "(", "'contrastive_'", "+", "lf", ".", "name", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "log", ".", "add_loss", "(", "'contrastive'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.models.treba_model.TREBA_model.model_params": [[169, 186], ["list", "list", "list", "treba_model.TREBA_model.enc_fc.parameters", "treba_model.TREBA_model.dec_action_logvar.parameters", "list", "list", "list", "list", "treba_model.TREBA_model.dec_action_mean.parameters", "treba_model.TREBA_model.label_decoder_fc_contrastive.parameters", "len", "treba_model.TREBA_model.label_decoder_fc_decoding.parameters", "treba_model.TREBA_model.dec_rnn.parameters", "list", "treba_model.TREBA_model.dec_action_fc.parameters", "list", "list", "treba_model.TREBA_model.enc_logvar.parameters", "treba_model.TREBA_model.enc_birnn.parameters", "treba_model.TREBA_model.enc_mean.parameters"], "methods", ["None"], ["", "", "", "", "def", "model_params", "(", "self", ")", ":", "\n", "        ", "params", "=", "list", "(", "self", ".", "enc_birnn", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "enc_mean", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "enc_logvar", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "dec_action_fc", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "dec_action_mean", ".", "parameters", "(", ")", ")", "\n", "\n", "params", "+=", "list", "(", "self", ".", "enc_fc", ".", "parameters", "(", ")", ")", "\n", "params", "+=", "list", "(", "self", ".", "dec_action_logvar", ".", "parameters", "(", ")", ")", "\n", "\n", "if", "self", ".", "loss_params", "[", "'contrastive_loss_weight'", "]", ">", "0", ":", "\n", "            ", "params", "+=", "list", "(", "self", ".", "label_decoder_fc_contrastive", ".", "parameters", "(", ")", ")", "\n", "\n", "", "if", "len", "(", "self", ".", "label_functions", ")", ">", "0", "and", "self", ".", "loss_params", "[", "'decoding_loss_weight'", "]", ">", "0", ":", "\n", "            ", "params", "+=", "list", "(", "self", ".", "label_decoder_fc_decoding", ".", "parameters", "(", ")", ")", "\n", "\n", "", "if", "self", ".", "is_recurrent", ":", "\n", "            ", "params", "+=", "list", "(", "self", ".", "dec_rnn", ".", "parameters", "(", ")", ")", "\n", "\n", "", "return", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.models.treba_model.TREBA_model.label_approx_params": [[187, 189], ["list", "list", "treba_model.TREBA_model.label_approx_birnn.parameters", "treba_model.TREBA_model.label_approx_fc.parameters"], "methods", ["None"], ["", "def", "label_approx_params", "(", "self", ")", ":", "\n", "        ", "return", "list", "(", "self", ".", "label_approx_birnn", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "label_approx_fc", ".", "parameters", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.models.treba_model.TREBA_model.init_optimizer": [[190, 195], ["torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "treba_model.TREBA_model.model_params", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "len", "treba_model.TREBA_model.label_approx_params"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.models.treba_model.TREBA_model.model_params", "home.repos.pwc.inspect_result.neuroethology_TREBA.models.treba_model.TREBA_model.label_approx_params"], ["", "def", "init_optimizer", "(", "self", ",", "lr", ")", ":", "\n", "        ", "self", ".", "model_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "model_params", "(", ")", ",", "lr", "=", "lr", ")", "\n", "\n", "if", "len", "(", "self", ".", "label_functions", ")", ">", "0", "and", "self", ".", "loss_params", "[", "'consistency_loss_weight'", "]", ">", "0", ":", "\n", "            ", "self", ".", "label_approx_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "label_approx_params", "(", ")", ",", "lr", "=", "lr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.models.treba_model.TREBA_model.optimize": [[196, 216], ["isinstance", "treba_model.TREBA_model.label_approx_optimizer.zero_grad", "sum", "sum.backward", "torch.utils.clip_grad_norm_", "torch.utils.clip_grad_norm_", "torch.utils.clip_grad_norm_", "treba_model.TREBA_model.label_approx_optimizer.step", "treba_model.TREBA_model.model_optimizer.zero_grad", "sum", "sum.backward", "torch.utils.clip_grad_norm_", "torch.utils.clip_grad_norm_", "torch.utils.clip_grad_norm_", "treba_model.TREBA_model.model_optimizer.step", "treba_model.TREBA_model.label_approx_params", "treba_model.TREBA_model.model_params", "losses.items", "losses.items"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.models.treba_model.TREBA_model.label_approx_params", "home.repos.pwc.inspect_result.neuroethology_TREBA.models.treba_model.TREBA_model.model_params"], ["", "", "def", "optimize", "(", "self", ",", "losses", ")", ":", "\n", "        ", "assert", "isinstance", "(", "losses", ",", "dict", ")", "\n", "\n", "# Optimize program approximators.", "\n", "# Only need to do this if we are using consistency loss.", "\n", "if", "self", ".", "stage", "==", "1", "and", "self", ".", "loss_params", "[", "'consistency_loss_weight'", "]", ">", "0", ":", "\n", "            ", "self", ".", "label_approx_optimizer", ".", "zero_grad", "(", ")", "\n", "label_preds", "=", "[", "value", "for", "key", ",", "value", "in", "losses", ".", "items", "(", ")", "if", "'LF'", "in", "key", "]", "\n", "label_approx_loss", "=", "sum", "(", "label_preds", ")", "\n", "label_approx_loss", ".", "backward", "(", "retain_graph", "=", "True", ")", "\n", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "self", ".", "label_approx_params", "(", ")", ",", "10", ")", "\n", "self", ".", "label_approx_optimizer", ".", "step", "(", ")", "\n", "\n", "", "if", "self", ".", "stage", ">=", "2", "or", "not", "self", ".", "loss_params", "[", "'consistency_loss_weight'", "]", ">", "0", ":", "\n", "            ", "self", ".", "model_optimizer", ".", "zero_grad", "(", ")", "\n", "model_losses", "=", "[", "value", "for", "key", ",", "value", "in", "losses", ".", "items", "(", ")", "]", "\n", "model_loss", "=", "sum", "(", "model_losses", ")", "\n", "model_loss", ".", "backward", "(", "retain_graph", "=", "True", ")", "\n", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "self", ".", "model_params", "(", ")", ",", "10", ")", "\n", "self", ".", "model_optimizer", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.models.treba_model.TREBA_model.label": [[217, 227], ["torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "treba_model.TREBA_model._one_hot_encode", "states.size", "actions.size", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.argmax.long", "torch.argmax.long", "torch.argmax.long"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.LabelFunction._one_hot_encode"], ["", "", "def", "label", "(", "self", ",", "states", ",", "actions", ",", "lf_idx", ",", "categorical", ")", ":", "\n", "        ", "assert", "states", ".", "size", "(", "0", ")", "==", "actions", ".", "size", "(", "0", ")", "\n", "hiddens", ",", "_", "=", "self", ".", "label_approx_birnn", "[", "lf_idx", "]", "(", "torch", ".", "cat", "(", "[", "states", ",", "actions", "]", ",", "dim", "=", "-", "1", ")", ")", "\n", "avg_hiddens", "=", "torch", ".", "mean", "(", "hiddens", ",", "dim", "=", "0", ")", "\n", "approx_out", "=", "self", ".", "label_approx_fc", "[", "lf_idx", "]", "(", "avg_hiddens", ")", "\n", "\n", "approx_out", "=", "F", ".", "log_softmax", "(", "approx_out", ",", "dim", "=", "-", "1", ")", "\n", "label_class", "=", "torch", ".", "argmax", "(", "approx_out", ",", "dim", "=", "1", ")", "\n", "approx_labels", "=", "self", ".", "_one_hot_encode", "(", "label_class", ".", "long", "(", ")", ",", "approx_out", ".", "shape", "[", "-", "1", "]", ")", "\n", "return", "approx_labels", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.models.treba_model.TREBA_model._one_hot_encode": [[228, 234], ["dims.append", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to.scatter_", "torch.zeros().to.scatter_", "torch.zeros().to.scatter_", "labels.size", "labels.unsqueeze", "range", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "len", "labels.size"], "methods", ["None"], ["", "def", "_one_hot_encode", "(", "self", ",", "labels", ",", "dim", ")", ":", "\n", "        ", "dims", "=", "[", "labels", ".", "size", "(", "i", ")", "for", "i", "in", "range", "(", "len", "(", "labels", ".", "size", "(", ")", ")", ")", "]", "\n", "dims", ".", "append", "(", "dim", ")", "\n", "label_ohe", "=", "torch", ".", "zeros", "(", "dims", ")", ".", "to", "(", "labels", ".", "device", ")", "\n", "label_ohe", ".", "scatter_", "(", "-", "1", ",", "labels", ".", "unsqueeze", "(", "-", "1", ")", ",", "1", ")", "\n", "return", "label_ohe", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.models.treba_model.TREBA_model.forward": [[235, 407], ["treba_model.TREBA_model.log.reset", "states.transpose.transpose.transpose", "actions.transpose.transpose.transpose", "states.transpose.transpose.size", "len", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "enumerate", "len", "actions.transpose.transpose.size", "list", "lib.models.loss.compute_label_loss", "treba_model.TREBA_model.encode", "lib.distributions.Normal.kl_divergence().detach", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "lib.distributions.Normal.kl_divergence", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "treba_model.TREBA_model.reset_policy", "range", "labels_dict.values", "treba_model.TREBA_model.label", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "actions.transpose.transpose.size", "treba_model.TREBA_model.decode_action", "treba_model.TREBA_model.log_prob", "enumerate", "treba_model.TREBA_model.reset_policy", "treba_model.TREBA_model.generate_rollout", "enumerate", "treba_model.TREBA_model.config.keys", "treba_model.TREBA_model.size", "lf_labels.size", "lib.distributions.Normal.kl_divergence", "treba_model.TREBA_model.sample", "treba_model.TREBA_model.update_hidden", "lib.models.loss.compute_decoding_loss", "lib.models.loss.compute_label_loss", "aug.augment", "augmented_states.transpose.transpose.transpose", "augmented_actions.transpose.transpose.transpose", "treba_model.TREBA_model.encode", "lib.distributions.Normal.kl_divergence().detach", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "lib.distributions.Normal.kl_divergence", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "treba_model.TREBA_model.reset_policy", "range", "enumerate", "len", "lib.models.loss.compute_contrastive_loss", "treba_model.TREBA_model.sample", "actions.transpose.transpose.size", "treba_model.TREBA_model.label", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "lf.label", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "states.transpose.transpose.transpose", "actions.transpose.transpose.transpose", "actions.transpose.transpose.size", "treba_model.TREBA_model.decode_action", "treba_model.TREBA_model.log_prob", "lib.models.loss.compute_contrastive_loss", "treba_model.TREBA_model.config.keys", "len", "len", "enumerate", "treba_model.TREBA_model.size", "lf_labels.size", "rollout_states.transpose().detach().cpu", "rollout_actions.transpose().detach().cpu", "lf.label.size", "lf_labels.size", "lib.distributions.Normal.kl_divergence", "treba_model.TREBA_model.sample", "treba_model.TREBA_model.update_hidden", "lib.models.loss.compute_contrastive_loss", "lib.models.loss.compute_decoding_loss", "len", "lib.models.loss.compute_contrastive_loss", "lf_labels.cpu", "rollout_states.transpose().detach", "rollout_actions.transpose().detach", "rollout_states.transpose", "rollout_actions.transpose"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.reset", "home.repos.pwc.inspect_result.neuroethology_TREBA.models.loss.compute_label_loss", "home.repos.pwc.inspect_result.neuroethology_TREBA.models.core.BaseSequentialModel.encode", "home.repos.pwc.inspect_result.neuroethology_TREBA.distributions.normal.Normal.kl_divergence", "home.repos.pwc.inspect_result.neuroethology_TREBA.models.core.BaseSequentialModel.reset_policy", "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.LabelFunction.label", "home.repos.pwc.inspect_result.neuroethology_TREBA.models.treba_model.TREBA_model.decode_action", "home.repos.pwc.inspect_result.neuroethology_TREBA.distributions.normal.Normal.log_prob", "home.repos.pwc.inspect_result.neuroethology_TREBA.models.core.BaseSequentialModel.reset_policy", "home.repos.pwc.inspect_result.neuroethology_TREBA.models.treba_model.TREBA_model.generate_rollout", "home.repos.pwc.inspect_result.neuroethology_TREBA.distributions.normal.Normal.kl_divergence", "home.repos.pwc.inspect_result.neuroethology_TREBA.distributions.normal.Normal.sample", "home.repos.pwc.inspect_result.neuroethology_TREBA.models.core.BaseSequentialModel.update_hidden", "home.repos.pwc.inspect_result.neuroethology_TREBA.models.loss.compute_decoding_loss", "home.repos.pwc.inspect_result.neuroethology_TREBA.models.loss.compute_label_loss", "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.Augmentations.augment", "home.repos.pwc.inspect_result.neuroethology_TREBA.models.core.BaseSequentialModel.encode", "home.repos.pwc.inspect_result.neuroethology_TREBA.distributions.normal.Normal.kl_divergence", "home.repos.pwc.inspect_result.neuroethology_TREBA.models.core.BaseSequentialModel.reset_policy", "home.repos.pwc.inspect_result.neuroethology_TREBA.models.loss.compute_contrastive_loss", "home.repos.pwc.inspect_result.neuroethology_TREBA.distributions.normal.Normal.sample", "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.LabelFunction.label", "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.LabelFunction.label", "home.repos.pwc.inspect_result.neuroethology_TREBA.models.treba_model.TREBA_model.decode_action", "home.repos.pwc.inspect_result.neuroethology_TREBA.distributions.normal.Normal.log_prob", "home.repos.pwc.inspect_result.neuroethology_TREBA.models.loss.compute_contrastive_loss", "home.repos.pwc.inspect_result.neuroethology_TREBA.distributions.normal.Normal.kl_divergence", "home.repos.pwc.inspect_result.neuroethology_TREBA.distributions.normal.Normal.sample", "home.repos.pwc.inspect_result.neuroethology_TREBA.models.core.BaseSequentialModel.update_hidden", "home.repos.pwc.inspect_result.neuroethology_TREBA.models.loss.compute_contrastive_loss", "home.repos.pwc.inspect_result.neuroethology_TREBA.models.loss.compute_decoding_loss", "home.repos.pwc.inspect_result.neuroethology_TREBA.models.loss.compute_contrastive_loss"], ["", "def", "forward", "(", "self", ",", "states", ",", "actions", ",", "labels_dict", ")", ":", "\n", "        ", "self", ".", "log", ".", "reset", "(", ")", "\n", "\n", "# Consistency and decoding loss need labels.", "\n", "if", "(", "self", ".", "loss_params", "[", "'consistency_loss_weight'", "]", ">", "0", "or", "\n", "self", ".", "loss_params", "[", "'decoding_loss_weight'", "]", ">", "0", ")", ":", "\n", "            ", "assert", "len", "(", "labels_dict", ")", ">", "0", "\n", "\n", "", "assert", "actions", ".", "size", "(", "1", ")", "+", "1", "==", "states", ".", "size", "(", "1", ")", "# final state has no corresponding action", "\n", "states", "=", "states", ".", "transpose", "(", "0", ",", "1", ")", "\n", "actions", "=", "actions", ".", "transpose", "(", "0", ",", "1", ")", "\n", "\n", "labels", "=", "None", "\n", "if", "len", "(", "labels_dict", ")", ">", "0", ":", "\n", "            ", "labels", "=", "torch", ".", "cat", "(", "list", "(", "labels_dict", ".", "values", "(", ")", ")", ",", "dim", "=", "-", "1", ")", "\n", "\n", "# Pretrain program approximators, if using consistency loss.", "\n", "", "if", "self", ".", "stage", "==", "1", "and", "self", ".", "loss_params", "[", "'consistency_loss_weight'", "]", ">", "0", ":", "\n", "            ", "for", "lf_idx", ",", "lf_name", "in", "enumerate", "(", "labels_dict", ")", ":", "\n", "                ", "lf", "=", "self", ".", "config", "[", "'label_functions'", "]", "[", "lf_idx", "]", "\n", "lf_labels", "=", "labels_dict", "[", "lf_name", "]", "\n", "self", ".", "log", ".", "losses", "[", "lf_name", "]", "=", "compute_label_loss", "(", "states", "[", ":", "-", "1", "]", ",", "actions", ",", "lf_labels", ",", "\n", "self", ".", "label_approx_birnn", "[", "lf_idx", "]", ",", "\n", "self", ".", "label_approx_fc", "[", "lf_idx", "]", ",", "\n", "lf", ".", "categorical", ")", "\n", "\n", "# Compute label loss with approx", "\n", "if", "self", ".", "log_metrics", ":", "\n", "                    ", "approx_labels", "=", "self", ".", "label", "(", "states", "[", ":", "-", "1", "]", ",", "actions", ",", "lf_idx", ",", "lf", ".", "categorical", ")", "\n", "assert", "approx_labels", ".", "size", "(", ")", "==", "lf_labels", ".", "size", "(", ")", "\n", "self", ".", "log", ".", "metrics", "[", "'{}_approx'", ".", "format", "(", "lf", ".", "name", ")", "]", "=", "torch", ".", "sum", "(", "approx_labels", "*", "lf_labels", ")", "\n", "\n", "# Train TVAE with programs.", "\n", "", "", "", "elif", "self", ".", "stage", ">=", "2", "or", "not", "self", ".", "loss_params", "[", "'consistency_loss_weight'", "]", ">", "0", ":", "\n", "# Encode", "\n", "            ", "posterior", "=", "self", ".", "encode", "(", "states", "[", ":", "-", "1", "]", ",", "actions", "=", "actions", ",", "labels", "=", "labels", ")", "\n", "\n", "kld", "=", "Normal", ".", "kl_divergence", "(", "posterior", ",", "free_bits", "=", "0.0", ")", ".", "detach", "(", ")", "\n", "self", ".", "log", ".", "metrics", "[", "'kl_div_true'", "]", "=", "torch", ".", "sum", "(", "kld", ")", "\n", "\n", "kld", "=", "Normal", ".", "kl_divergence", "(", "posterior", ",", "free_bits", "=", "1", "/", "self", ".", "config", "[", "'z_dim'", "]", ")", "\n", "self", ".", "log", ".", "losses", "[", "'kl_div'", "]", "=", "torch", ".", "sum", "(", "kld", ")", "\n", "\n", "# Decode", "\n", "self", ".", "reset_policy", "(", "labels", "=", "labels", ",", "z", "=", "posterior", ".", "sample", "(", ")", ")", "\n", "\n", "for", "t", "in", "range", "(", "actions", ".", "size", "(", "0", ")", ")", ":", "\n", "                ", "action_likelihood", "=", "self", ".", "decode_action", "(", "states", "[", "t", "]", ")", "\n", "self", ".", "log", ".", "losses", "[", "'nll'", "]", "-=", "action_likelihood", ".", "log_prob", "(", "actions", "[", "t", "]", ")", "\n", "\n", "if", "self", ".", "is_recurrent", ":", "\n", "                    ", "self", ".", "update_hidden", "(", "states", "[", "t", "]", ",", "actions", "[", "t", "]", ")", "\n", "\n", "# Add decoding loss.", "\n", "", "", "if", "self", ".", "loss_params", "[", "'decoding_loss_weight'", "]", ">", "0", ":", "\n", "# Compute label loss", "\n", "                ", "for", "lf_idx", ",", "lf_name", "in", "enumerate", "(", "labels_dict", ")", ":", "\n", "                    ", "lf", "=", "self", ".", "config", "[", "'label_functions'", "]", "[", "lf_idx", "]", "\n", "lf_labels", "=", "labels_dict", "[", "lf_name", "]", "\n", "self", ".", "log", ".", "losses", "[", "\"decoded_\"", "+", "lf_name", "]", "=", "compute_decoding_loss", "(", "posterior", ".", "mean", ",", "\n", "lf_labels", ",", "self", ".", "label_decoder_fc_decoding", "[", "lf_idx", "]", ",", "\n", "lf", ".", "categorical", ",", "loss_weight", "=", "self", ".", "loss_params", "[", "'decoding_loss_weight'", "]", ")", "\n", "\n", "# Generate rollout for consistency loss.", "\n", "# Use the posterior to train here.", "\n", "", "", "if", "self", ".", "loss_params", "[", "'consistency_loss_weight'", "]", ">", "0", ":", "\n", "                ", "self", ".", "reset_policy", "(", "labels", "=", "labels", ",", "z", "=", "posterior", ".", "sample", "(", ")", ",", "\n", "temperature", "=", "self", ".", "loss_params", "[", "'consistency_temperature'", "]", ")", "\n", "\n", "rollout_states", ",", "rollout_actions", "=", "self", ".", "generate_rollout", "(", "states", ",", "horizon", "=", "actions", ".", "size", "(", "0", ")", ")", "\n", "\n", "# Compute label loss", "\n", "for", "lf_idx", ",", "lf_name", "in", "enumerate", "(", "labels_dict", ")", ":", "\n", "                    ", "lf", "=", "self", ".", "config", "[", "'label_functions'", "]", "[", "lf_idx", "]", "\n", "lf_labels", "=", "labels_dict", "[", "lf_name", "]", "\n", "self", ".", "log", ".", "losses", "[", "lf_name", "+", "'_consistency'", "]", "=", "compute_label_loss", "(", "rollout_states", "[", ":", "-", "1", "]", ",", "\n", "rollout_actions", ",", "lf_labels", ",", "\n", "self", ".", "label_approx_birnn", "[", "lf_idx", "]", ",", "\n", "self", ".", "label_approx_fc", "[", "lf_idx", "]", ",", "\n", "lf", ".", "categorical", ",", "\n", "loss_weight", "=", "self", ".", "loss_params", "[", "'consistency_loss_weight'", "]", ")", "\n", "\n", "# Compute label loss with approx", "\n", "if", "self", ".", "log_metrics", ":", "\n", "                        ", "approx_labels", "=", "self", ".", "label", "(", "rollout_states", "[", ":", "-", "1", "]", ",", "rollout_actions", ",", "lf_idx", ",", "lf", ".", "categorical", ")", "\n", "assert", "approx_labels", ".", "size", "(", ")", "==", "lf_labels", ".", "size", "(", ")", "\n", "self", ".", "log", ".", "metrics", "[", "'{}_approx'", ".", "format", "(", "lf", ".", "name", ")", "]", "=", "torch", ".", "sum", "(", "approx_labels", "*", "lf_labels", ")", "\n", "\n", "# Compute label loss with true LF    ", "\n", "rollout_lf_labels", "=", "lf", ".", "label", "(", "rollout_states", ".", "transpose", "(", "0", ",", "1", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "\n", "rollout_actions", ".", "transpose", "(", "0", ",", "1", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "batch", "=", "True", ")", "\n", "assert", "rollout_lf_labels", ".", "size", "(", ")", "==", "lf_labels", ".", "size", "(", ")", "\n", "self", ".", "log", ".", "metrics", "[", "'{}_true'", ".", "format", "(", "lf", ".", "name", ")", "]", "=", "torch", ".", "sum", "(", "rollout_lf_labels", "*", "lf_labels", ".", "cpu", "(", ")", ")", "\n", "\n", "# If augmentations are provided, additionally train with those.", "\n", "", "", "", "if", "'augmentations'", "in", "self", ".", "config", ".", "keys", "(", ")", ":", "\n", "                ", "for", "aug", "in", "self", ".", "config", "[", "'augmentations'", "]", ":", "\n", "\n", "                    ", "augmented_states", ",", "augmented_actions", "=", "aug", ".", "augment", "(", "states", ".", "transpose", "(", "0", ",", "1", ")", ",", "\n", "actions", ".", "transpose", "(", "0", ",", "1", ")", ",", "\n", "batch", "=", "True", ")", "\n", "\n", "augmented_states", "=", "augmented_states", ".", "transpose", "(", "0", ",", "1", ")", "\n", "augmented_actions", "=", "augmented_actions", ".", "transpose", "(", "0", ",", "1", ")", "\n", "aug_posterior", "=", "self", ".", "encode", "(", "augmented_states", "[", ":", "-", "1", "]", ",", "actions", "=", "augmented_actions", ",", "\n", "labels", "=", "labels", ")", "\n", "\n", "kld", "=", "Normal", ".", "kl_divergence", "(", "aug_posterior", ",", "free_bits", "=", "0.0", ")", ".", "detach", "(", ")", "\n", "self", ".", "log", ".", "metrics", "[", "'{}_kl_div_true'", ".", "format", "(", "aug", ".", "name", ")", "]", "=", "torch", ".", "sum", "(", "kld", ")", "\n", "\n", "kld", "=", "Normal", ".", "kl_divergence", "(", "aug_posterior", ",", "free_bits", "=", "1", "/", "self", ".", "config", "[", "'z_dim'", "]", ")", "\n", "self", ".", "log", ".", "losses", "[", "'{}_kl_div'", ".", "format", "(", "aug", ".", "name", ")", "]", "=", "torch", ".", "sum", "(", "kld", ")", "\n", "\n", "# Decode", "\n", "self", ".", "reset_policy", "(", "labels", "=", "labels", ",", "z", "=", "aug_posterior", ".", "sample", "(", ")", ")", "\n", "\n", "for", "t", "in", "range", "(", "actions", ".", "size", "(", "0", ")", ")", ":", "\n", "                        ", "action_likelihood", "=", "self", ".", "decode_action", "(", "augmented_states", "[", "t", "]", ")", "\n", "self", ".", "log", ".", "losses", "[", "'{}_nll'", ".", "format", "(", "aug", ".", "name", ")", "]", "-=", "action_likelihood", ".", "log_prob", "(", "augmented_actions", "[", "t", "]", ")", "\n", "\n", "if", "self", ".", "is_recurrent", ":", "\n", "                            ", "self", ".", "update_hidden", "(", "augmented_states", "[", "t", "]", ",", "augmented_actions", "[", "t", "]", ")", "\n", "\n", "", "", "for", "lf_idx", ",", "lf_name", "in", "enumerate", "(", "labels_dict", ")", ":", "\n", "\n", "# Train contrastive loss with augmentations and programs.", "\n", "                        ", "lf_labels", "=", "labels_dict", "[", "lf_name", "]", "\n", "if", "self", ".", "loss_params", "[", "'contrastive_loss_weight'", "]", ">", "0", ":", "\n", "\n", "                            ", "self", ".", "log", ".", "losses", "[", "aug", ".", "name", "+", "\"_contrastive_\"", "+", "lf_name", "]", "=", "compute_contrastive_loss", "(", "posterior", ".", "mean", ",", "aug_posterior", ".", "mean", ",", "\n", "self", ".", "label_decoder_fc_contrastive", "[", "lf_idx", "]", ",", "labels", "=", "lf_labels", ",", "\n", "temperature", "=", "self", ".", "loss_params", "[", "'contrastive_temperature'", "]", ",", "\n", "base_temperature", "=", "self", ".", "loss_params", "[", "'contrastive_base_temperature'", "]", ",", "\n", "loss_weight", "=", "self", ".", "loss_params", "[", "'contrastive_loss_weight'", "]", ")", "\n", "\n", "", "if", "self", ".", "loss_params", "[", "'decoding_loss_weight'", "]", ">", "0", ":", "\n", "                            ", "self", ".", "log", ".", "losses", "[", "aug", ".", "name", "+", "\"_decoded_\"", "+", "lf_name", "]", "=", "compute_decoding_loss", "(", "aug_posterior", ".", "mean", ",", "\n", "lf_labels", ",", "self", ".", "label_decoder_fc_decoding", "[", "lf_idx", "]", ",", "lf", ".", "categorical", ",", "\n", "loss_weight", "=", "self", ".", "loss_params", "[", "'decoding_loss_weight'", "]", ")", "\n", "\n", "", "", "if", "len", "(", "labels_dict", ")", "==", "0", "and", "self", ".", "loss_params", "[", "'contrastive_loss_weight'", "]", ">", "0", ":", "\n", "# Train with unsupervised contrastive loss.", "\n", "                        ", "self", ".", "log", ".", "losses", "[", "aug", ".", "name", "+", "'_contrastive'", "]", "=", "compute_contrastive_loss", "(", "posterior", ".", "mean", ",", "aug_posterior", ".", "mean", ",", "\n", "self", ".", "label_decoder_fc_contrastive", ",", "\n", "temperature", "=", "self", ".", "loss_params", "[", "'contrastive_temperature'", "]", ",", "\n", "base_temperature", "=", "self", ".", "loss_params", "[", "'contrastive_base_temperature'", "]", ",", "\n", "loss_weight", "=", "self", ".", "loss_params", "[", "'contrastive_loss_weight'", "]", ")", "\n", "\n", "\n", "# Add contrastive loss for cases where there are no augmentations.", "\n", "", "", "", "if", "(", "(", "'augmentations'", "not", "in", "self", ".", "config", ".", "keys", "(", ")", "or", "len", "(", "self", ".", "config", "[", "'augmentations'", "]", ")", "==", "0", ")", "\n", "and", "self", ".", "loss_params", "[", "'contrastive_loss_weight'", "]", ">", "0", ")", ":", "\n", "\n", "                ", "if", "len", "(", "labels_dict", ")", "==", "0", ":", "\n", "                    ", "self", ".", "log", ".", "losses", "[", "'contrastive'", "]", "=", "compute_contrastive_loss", "(", "posterior", ".", "mean", ",", "posterior", ".", "mean", ",", "\n", "self", ".", "label_decoder_fc_contrastive", ",", "\n", "temperature", "=", "self", ".", "loss_params", "[", "'contrastive_temperature'", "]", ",", "\n", "base_temperature", "=", "self", ".", "loss_params", "[", "'contrastive_base_temperature'", "]", ",", "\n", "loss_weight", "=", "self", ".", "loss_params", "[", "'contrastive_loss_weight'", "]", ")", "\n", "\n", "", "elif", "len", "(", "labels_dict", ")", ">", "0", ":", "\n", "                    ", "for", "lf_idx", ",", "lf_name", "in", "enumerate", "(", "labels_dict", ")", ":", "\n", "\n", "                        ", "lf_labels", "=", "labels_dict", "[", "lf_name", "]", "\n", "\n", "self", ".", "log", ".", "losses", "[", "\"contrastive_\"", "+", "lf_name", "]", "=", "compute_contrastive_loss", "(", "posterior", ".", "mean", ",", "posterior", ".", "mean", ",", "\n", "lf_idx", ",", "labels", "=", "lf_labels", ",", "temperature", "=", "self", ".", "loss_params", "[", "'contrastive_temperature'", "]", ",", "\n", "base_temperature", "=", "self", ".", "loss_params", "[", "'contrastive_base_temperature'", "]", ",", "\n", "loss_weight", "=", "self", ".", "loss_params", "[", "'contrastive_loss_weight'", "]", ")", "\n", "\n", "\n", "", "", "", "", "return", "self", ".", "log", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.models.treba_model.TREBA_model.generate_rollout": [[408, 427], ["range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "states[].unsqueeze", "torch.cat.append", "torch.cat.append", "torch.cat.append", "torch.cat.append", "torch.cat.append", "torch.cat.append", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "rollout_states[].squeeze", "treba_model.TREBA_model.act", "next_state.unsqueeze", "treba_model.TREBA_model.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.models.core.BaseSequentialModel.act"], ["", "def", "generate_rollout", "(", "self", ",", "states", ",", "horizon", ")", ":", "\n", "        ", "rollout_states", "=", "[", "states", "[", "0", "]", ".", "unsqueeze", "(", "0", ")", "]", "\n", "rollout_actions", "=", "[", "]", "\n", "\n", "T", "=", "horizon", "\n", "\n", "for", "t", "in", "range", "(", "T", ")", ":", "\n", "            ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "curr_state", "=", "rollout_states", "[", "-", "1", "]", ".", "squeeze", "(", "0", ")", "\n", "action", "=", "self", ".", "act", "(", "curr_state", ")", "\n", "next_state", "=", "curr_state", "+", "action", "\n", "\n", "", "rollout_states", ".", "append", "(", "next_state", ".", "unsqueeze", "(", "0", ")", ")", "\n", "rollout_actions", ".", "append", "(", "action", ".", "unsqueeze", "(", "0", ")", ")", "\n", "\n", "", "rollout_states", "=", "torch", ".", "cat", "(", "rollout_states", ",", "dim", "=", "0", ")", "\n", "rollout_actions", "=", "torch", ".", "cat", "(", "rollout_actions", ",", "dim", "=", "0", ")", "\n", "\n", "return", "rollout_states", ",", "rollout_actions", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.models.treba_model.TREBA_model.decode_action": [[429, 444], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "treba_model.TREBA_model.dec_action_fc", "treba_model.TREBA_model.dec_action_mean", "isinstance", "lib.distributions.Normal", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "treba_model.TREBA_model.dec_action_logvar"], "methods", ["None"], ["", "def", "decode_action", "(", "self", ",", "state", ")", ":", "\n", "        ", "dec_fc_input", "=", "torch", ".", "cat", "(", "[", "state", ",", "self", ".", "z", "]", ",", "dim", "=", "1", ")", "\n", "\n", "if", "self", ".", "is_recurrent", ":", "\n", "            ", "dec_fc_input", "=", "torch", ".", "cat", "(", "[", "dec_fc_input", ",", "self", ".", "hidden", "[", "-", "1", "]", "]", ",", "dim", "=", "1", ")", "\n", "\n", "", "dec_h", "=", "self", ".", "dec_action_fc", "(", "dec_fc_input", ")", "\n", "dec_mean", "=", "self", ".", "dec_action_mean", "(", "dec_h", ")", "\n", "\n", "if", "isinstance", "(", "self", ".", "dec_action_logvar", ",", "nn", ".", "Parameter", ")", ":", "\n", "            ", "dec_logvar", "=", "self", ".", "dec_action_logvar", "\n", "", "else", ":", "\n", "            ", "dec_logvar", "=", "self", ".", "dec_action_logvar", "(", "dec_h", ")", "\n", "\n", "", "return", "Normal", "(", "dec_mean", ",", "dec_logvar", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.neuroethology_TREBA.models.loss.compute_label_loss": [[5, 20], ["approx_rnn", "torch.mean", "torch.mean", "approx_fc", "states.size", "actions.size", "torch.cat", "torch.cat", "F.log_softmax.size", "labels.size", "torch.log_softmax", "torch.mse_loss", "torch.sum", "torch.sum"], "function", ["None"], ["def", "compute_label_loss", "(", "states", ",", "actions", ",", "labels", ",", "approx_rnn", ",", "approx_fc", ",", "categorical", ",", "loss_weight", "=", "1.0", ")", ":", "\n", "    ", "'''Compute attribute consistency loss'''", "\n", "assert", "states", ".", "size", "(", "0", ")", "==", "actions", ".", "size", "(", "0", ")", "\n", "\n", "hiddens", ",", "_", "=", "approx_rnn", "(", "torch", ".", "cat", "(", "[", "states", ",", "actions", "]", ",", "dim", "=", "-", "1", ")", ")", "\n", "avg_hiddens", "=", "torch", ".", "mean", "(", "hiddens", ",", "dim", "=", "0", ")", "\n", "approx_out", "=", "approx_fc", "(", "avg_hiddens", ")", "\n", "\n", "assert", "approx_out", ".", "size", "(", ")", "==", "labels", ".", "size", "(", ")", "\n", "\n", "if", "categorical", ":", "\n", "        ", "approx_out", "=", "F", ".", "log_softmax", "(", "approx_out", ",", "dim", "=", "-", "1", ")", "\n", "return", "-", "torch", ".", "sum", "(", "approx_out", "*", "labels", ")", "*", "loss_weight", "\n", "", "else", ":", "\n", "        ", "return", "F", ".", "mse_loss", "(", "approx_out", ",", "labels", ",", "reduction", "=", "'sum'", ")", "*", "loss_weight", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.models.loss.compute_decoding_loss": [[22, 34], ["decoding_fc", "decoding_fc.size", "labels.size", "torch.log_softmax", "torch.sum", "torch.sum", "torch.mse_loss"], "function", ["None"], ["", "", "def", "compute_decoding_loss", "(", "representations", ",", "labels", ",", "decoding_fc", ",", "categorical", ",", "loss_weight", "=", "1.0", ")", ":", "\n", "    ", "'''Compute attribute decoding loss'''", "\n", "\n", "approx_out", "=", "decoding_fc", "(", "representations", ")", "\n", "\n", "assert", "approx_out", ".", "size", "(", ")", "==", "labels", ".", "size", "(", ")", "\n", "\n", "if", "categorical", ":", "\n", "        ", "approx_out", "=", "F", ".", "log_softmax", "(", "approx_out", ",", "dim", "=", "-", "1", ")", "*", "loss_weight", "\n", "return", "-", "torch", ".", "sum", "(", "approx_out", "*", "labels", ")", "\n", "", "else", ":", "\n", "        ", "return", "F", ".", "mse_loss", "(", "approx_out", ",", "labels", ",", "reduction", "=", "'sum'", ")", "*", "loss_weight", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.models.loss.compute_contrastive_loss": [[38, 117], ["contrastive_fc", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "contrastive_fc", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.stack", "torch.stack", "features.view.view", "torch.cat", "torch.cat", "torch.div", "torch.div", "torch.max", "torch.max", "mask.float().to.repeat", "torch.scatter", "torch.scatter", "loss.view().mean.view().mean", "torch.argmax", "torch.argmax", "torch.device", "torch.device", "torch.device", "torch.device", "ValueError", "torch.unbind", "torch.unbind", "torch.matmul", "torch.matmul", "logits_max.detach", "torch.ones_like", "torch.ones_like", "torch.arange().view().to", "torch.arange().view().to", "torch.exp", "torch.exp", "torch.log", "torch.log", "mask.float().to.sum", "torch.eye().to", "torch.eye().to", "ValueError", "torch.cat.permute", "exp_logits.sum", "loss.view().mean.view", "labels.contiguous().view.contiguous().view", "torch.eq().float().to", "torch.eq().float().to", "mask.float().to.float().to", "torch.arange().view", "torch.arange().view", "torch.eye", "torch.eye", "ValueError", "labels.contiguous().view.contiguous", "torch.eq().float", "torch.eq().float", "mask.float().to.float", "torch.arange", "torch.arange", "torch.eq", "torch.eq", "labels.contiguous().view.permute"], "function", ["home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.normalize", "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.normalize", "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.normalize", "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.normalize"], ["", "", "def", "compute_contrastive_loss", "(", "posterior", ",", "aug_posterior", ",", "contrastive_fc", ",", "\n", "labels", "=", "None", ",", "mask", "=", "None", ",", "contrast_mode", "=", "'all'", ",", "temperature", "=", "0.07", ",", "\n", "base_temperature", "=", "0.07", ",", "loss_weight", "=", "1.0", ")", ":", "\n", "    ", "'''Compute contrastive loss'''", "\n", "\n", "zis", "=", "contrastive_fc", "(", "posterior", ")", "\n", "# normalize", "\n", "zis", "=", "torch", ".", "nn", ".", "functional", ".", "normalize", "(", "zis", ",", "dim", "=", "1", ")", "\n", "\n", "zjs", "=", "contrastive_fc", "(", "aug_posterior", ")", "\n", "# normalize      ", "\n", "zjs", "=", "torch", ".", "nn", ".", "functional", ".", "normalize", "(", "zjs", ",", "dim", "=", "1", ")", "\n", "\n", "features", "=", "torch", ".", "stack", "(", "[", "zis", ",", "zjs", "]", ",", "dim", "=", "1", ")", "\n", "\n", "if", "labels", "is", "not", "None", ":", "\n", "        ", "labels", "=", "torch", ".", "argmax", "(", "labels", ",", "dim", "=", "-", "1", ")", "\n", "\n", "", "device", "=", "(", "torch", ".", "device", "(", "'cuda'", ")", "\n", "if", "features", ".", "is_cuda", "\n", "else", "torch", ".", "device", "(", "'cpu'", ")", ")", "\n", "\n", "features", "=", "features", ".", "view", "(", "features", ".", "shape", "[", "0", "]", ",", "features", ".", "shape", "[", "1", "]", ",", "-", "1", ")", "\n", "\n", "batch_size", "=", "features", ".", "shape", "[", "0", "]", "\n", "if", "labels", "is", "not", "None", "and", "mask", "is", "not", "None", ":", "\n", "        ", "raise", "ValueError", "(", "'Cannot define both `labels` and `mask`'", ")", "\n", "", "elif", "labels", "is", "None", "and", "mask", "is", "None", ":", "\n", "        ", "mask", "=", "torch", ".", "eye", "(", "batch_size", ",", "dtype", "=", "torch", ".", "float32", ")", ".", "to", "(", "device", ")", "\n", "", "elif", "labels", "is", "not", "None", ":", "\n", "        ", "labels", "=", "labels", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "if", "labels", ".", "shape", "[", "0", "]", "!=", "batch_size", ":", "\n", "            ", "raise", "ValueError", "(", "'Num of labels does not match num of features'", ")", "\n", "", "mask", "=", "torch", ".", "eq", "(", "labels", ",", "labels", ".", "permute", "(", "1", ",", "0", ")", ")", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "", "else", ":", "\n", "        ", "mask", "=", "mask", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "\n", "", "contrast_count", "=", "features", ".", "shape", "[", "1", "]", "\n", "contrast_feature", "=", "torch", ".", "cat", "(", "torch", ".", "unbind", "(", "features", ",", "dim", "=", "1", ")", ",", "dim", "=", "0", ")", "\n", "if", "contrast_mode", "==", "'one'", ":", "\n", "        ", "anchor_feature", "=", "features", "[", ":", ",", "0", "]", "\n", "anchor_count", "=", "1", "\n", "", "elif", "contrast_mode", "==", "'all'", ":", "\n", "        ", "anchor_feature", "=", "contrast_feature", "\n", "anchor_count", "=", "contrast_count", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'Unknown mode: {}'", ".", "format", "(", "self", ".", "contrast_mode", ")", ")", "\n", "\n", "# compute logits", "\n", "", "anchor_dot_contrast", "=", "torch", ".", "div", "(", "\n", "torch", ".", "matmul", "(", "anchor_feature", ",", "contrast_feature", ".", "permute", "(", "1", ",", "0", ")", ")", ",", "\n", "temperature", ")", "\n", "# for numerical stability", "\n", "logits_max", ",", "_", "=", "torch", ".", "max", "(", "anchor_dot_contrast", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "logits", "=", "anchor_dot_contrast", "-", "logits_max", ".", "detach", "(", ")", "\n", "\n", "# tile mask", "\n", "mask", "=", "mask", ".", "repeat", "(", "anchor_count", ",", "contrast_count", ")", "\n", "# mask-out self-contrast cases", "\n", "logits_mask", "=", "torch", ".", "scatter", "(", "\n", "torch", ".", "ones_like", "(", "mask", ")", ",", "\n", "1", ",", "\n", "torch", ".", "arange", "(", "batch_size", "*", "anchor_count", ")", ".", "view", "(", "-", "1", ",", "1", ")", ".", "to", "(", "device", ")", ",", "\n", "0", "\n", ")", "\n", "mask", "=", "mask", "*", "logits_mask", "\n", "\n", "# compute log_prob", "\n", "exp_logits", "=", "torch", ".", "exp", "(", "logits", ")", "*", "logits_mask", "\n", "log_prob", "=", "logits", "-", "torch", ".", "log", "(", "exp_logits", ".", "sum", "(", "1", ",", "keepdim", "=", "True", ")", ")", "\n", "\n", "# compute mean of log-likelihood over positives", "\n", "mean_log_prob_pos", "=", "(", "mask", "*", "log_prob", ")", ".", "sum", "(", "1", ")", "/", "mask", ".", "sum", "(", "1", ")", "\n", "\n", "# loss", "\n", "loss", "=", "-", "(", "temperature", "/", "base_temperature", ")", "*", "mean_log_prob_pos", "\n", "loss", "=", "loss", ".", "view", "(", "anchor_count", ",", "batch_size", ")", ".", "mean", "(", ")", "\n", "\n", "return", "loss", "*", "loss_weight", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.models.__init__.get_model_class": [[9, 14], ["None"], "function", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.TrajectoryDataset.__init__": [[27, 121], ["hasattr", "core.TrajectoryDataset._load_data", "core.TrajectoryDataset._init_augmentations", "core.TrajectoryDataset._init_label_functions", "core.TrajectoryDataset.label_data", "isinstance", "isinstance", "hasattr", "isinstance", "hasattr", "isinstance", "core.TrajectoryDataset.train_states.size", "core.TrajectoryDataset.train_actions.size", "core.TrajectoryDataset.train_actions.size", "hasattr", "isinstance", "hasattr", "isinstance", "core.TrajectoryDataset.test_states.size", "core.TrajectoryDataset.test_actions.size", "core.TrajectoryDataset.test_actions.size", "isinstance", "isinstance", "core.TrajectoryDataset.label_data", "len", "len", "isinstance", "core.TrajectoryDataset.train_states.size", "core.TrajectoryDataset.test_states.size", "core.TrajectoryDataset.train_labels.size", "core.TrajectoryDataset.train_data.size", "core.TrajectoryDataset.test_labels.size", "core.TrajectoryDataset.test_data.size", "torch.mean", "torch.mean.squeeze().tolist", "hasattr", "hasattr", "torch.mean", "torch.mean.squeeze().tolist", "core.TrajectoryDataset.test_lf_labels[].float", "torch.min().item", "torch.max().item", "torch.mean().item", "torch.min().item", "torch.max().item", "torch.mean().item", "len", "len", "core.TrajectoryDataset.train_lf_labels[].float", "torch.mean.squeeze", "torch.mean.squeeze", "torch.min", "torch.max", "torch.mean", "torch.min", "torch.max", "torch.mean", "train_labels.float", "test_labels.float"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.FlyV1Dataset._load_data", "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.TrajectoryDataset._init_augmentations", "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.TrajectoryDataset._init_label_functions", "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.TrajectoryDataset.label_data", "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.TrajectoryDataset.label_data"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.TrajectoryDataset.__len__": [[122, 124], ["core.TrajectoryDataset.states[].size"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.TrajectoryDataset.__getitem__": [[125, 130], ["core.TrajectoryDataset.lf_labels[].items"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.TrajectoryDataset.seq_len": [[131, 135], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.TrajectoryDataset.state_dim": [[136, 140], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.TrajectoryDataset.action_dim": [[141, 145], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.TrajectoryDataset._load_data": [[146, 148], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.TrajectoryDataset.train": [[149, 151], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.TrajectoryDataset.eval": [[152, 154], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.TrajectoryDataset._get_label_function": [[155, 163], ["lf_config[].lower", "lf"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.TrajectoryDataset._get_augmentations": [[164, 172], ["aug_config[].lower", "aug"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.TrajectoryDataset._init_augmentations": [[174, 183], ["core.TrajectoryDataset._get_augmentations", "core.TrajectoryDataset.active_augmentations.append"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.TrajectoryDataset._get_augmentations"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.TrajectoryDataset._init_label_functions": [[185, 196], ["core.TrajectoryDataset._get_label_function", "core.TrajectoryDataset.active_label_functions.append"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.TrajectoryDataset._get_label_function"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.TrajectoryDataset.label_data": [[197, 206], ["lf.label", "labels[].size", "states.size", "actions.size"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.LabelFunction.label"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.TrajectoryDataset.generate_random_labels": [[207, 214], ["lf.generate_random_labels"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.LabelFunction.generate_random_labels"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.LabelFunction.__init__": [[220, 245], ["hasattr", "hasattr", "isinstance", "torch.tensor().float", "len", "core.LabelFunction.thresholds.size", "torch.tensor", "sorted"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.LabelFunction.__repr__": [[247, 249], ["str"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.LabelFunction.__str__": [[250, 252], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.LabelFunction.label": [[253, 289], ["range", "torch.cat", "states.unsqueeze.unsqueeze.unsqueeze", "actions.unsqueeze.unsqueeze.unsqueeze", "len", "states.unsqueeze.unsqueeze.size", "actions.unsqueeze.unsqueeze.size", "states.unsqueeze.unsqueeze.size", "core.LabelFunction.label_func", "isinstance", "torch.nn.functional.one_hot().float.append", "hasattr", "torch.sum", "core.LabelFunction._one_hot_encode", "torch.nn.functional.one_hot().float.unsqueeze", "true_labels.unsqueeze", "core.LabelFunction.unsqueeze", "len", "torch.nn.functional.one_hot().float.long", "core.LabelFunction._one_hot_encode", "states.unsqueeze.unsqueeze.size", "torch.nn.functional.one_hot().float.size", "torch.nn.functional.one_hot().float.unsqueeze", "len", "len", "torch.nn.functional.one_hot().float.long", "torch.nn.functional.one_hot().float", "torch.nn.functional.one_hot().float.size", "torch.nn.functional.one_hot().float.size", "torch.nn.functional.one_hot", "torch.nn.functional.one_hot().float.long"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleWingAngleMaxIntruder.label_func", "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.LabelFunction._one_hot_encode", "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.LabelFunction._one_hot_encode"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.LabelFunction.label_func": [[290, 292], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.LabelFunction._one_hot_encode": [[294, 300], ["dims.append", "torch.zeros", "torch.zeros.scatter_", "labels.size", "labels.unsqueeze", "range", "len", "labels.size"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.LabelFunction.generate_random_labels": [[301, 309], ["pdb.set_trace", "torch.zeros().long", "range", "core.LabelFunction._one_hot_encode", "random.randint", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.LabelFunction._one_hot_encode"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.Augmentations.__init__": [[315, 324], ["hasattr"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.Augmentations.__repr__": [[326, 328], ["str"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.Augmentations.__str__": [[329, 331], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.Augmentations.augment": [[332, 353], ["range", "torch.cat", "torch.cat", "states.unsqueeze.unsqueeze.unsqueeze", "actions.unsqueeze.unsqueeze.unsqueeze", "states.unsqueeze.unsqueeze.size", "actions.unsqueeze.unsqueeze.size", "states.unsqueeze.unsqueeze.size", "core.Augmentations.augment_func", "isinstance", "isinstance", "torch.cat.append", "torch.cat.append", "torch.squeeze", "torch.squeeze", "augmented_state.unsqueeze", "augmented_action.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.augmentations.augmentation_functions.AllRandomAugmentations.augment_func"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.core.Augmentations.augment_func": [[354, 356], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.datasets.__init__.load_dataset": [[11, 18], ["data_config[].lower"], "function", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.mouse_v1.core.MouseV1Dataset.__init__": [[38, 40], ["util.datasets.TrajectoryDataset.__init__"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.__init__"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.mouse_v1.core.MouseV1Dataset._load_data": [[41, 81], ["util.logging.LogEntry", "core.MouseV1Dataset._load_and_preprocess", "core.MouseV1Dataset._load_and_preprocess", "isinstance", "isinstance", "core.MouseV1Dataset.keypoints.sort", "open", "pickle.load", "open", "pickle.load"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.FlyV1Dataset._load_and_preprocess", "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.FlyV1Dataset._load_and_preprocess"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.mouse_v1.core.MouseV1Dataset._load_and_preprocess": [[83, 134], ["os.path.join", "numpy.load", "len", "preprocess.normalize", "len", "data_svd.reshape.reshape", "data_svd.reshape", "torch.Tensor", "torch.Tensor", "preprocess.transform_to_svd_components", "preprocess.transform_to_svd_components"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.normalize", "home.repos.pwc.inspect_result.neuroethology_TREBA.mouse_v1.preprocess.transform_to_svd_components", "home.repos.pwc.inspect_result.neuroethology_TREBA.mouse_v1.preprocess.transform_to_svd_components"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.mouse_v1.preprocess.normalize": [[13, 19], ["numpy.divide", "int", "int", "int", "int"], "function", ["None"], ["def", "normalize", "(", "data", ")", ":", "\n", "    ", "\"\"\"Scale by dimensions of image and mean-shift to center of image.\"\"\"", "\n", "state_dim", "=", "data", ".", "shape", "[", "2", "]", "//", "2", "\n", "shift", "=", "[", "int", "(", "FRAME_WIDTH_TOP", "/", "2", ")", ",", "int", "(", "FRAME_HEIGHT_TOP", "/", "2", ")", "]", "*", "state_dim", "\n", "scale", "=", "[", "int", "(", "FRAME_WIDTH_TOP", "/", "2", ")", ",", "int", "(", "FRAME_HEIGHT_TOP", "/", "2", ")", "]", "*", "state_dim", "\n", "return", "np", ".", "divide", "(", "data", "-", "shift", ",", "scale", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.mouse_v1.preprocess.unnormalize": [[21, 27], ["numpy.multiply", "int", "int", "int", "int"], "function", ["None"], ["", "def", "unnormalize", "(", "data", ")", ":", "\n", "    ", "\"\"\"Undo normalize.\"\"\"", "\n", "state_dim", "=", "data", ".", "shape", "[", "2", "]", "//", "2", "\n", "shift", "=", "[", "int", "(", "FRAME_WIDTH_TOP", "/", "2", ")", ",", "int", "(", "FRAME_HEIGHT_TOP", "/", "2", ")", "]", "*", "state_dim", "\n", "scale", "=", "[", "int", "(", "FRAME_WIDTH_TOP", "/", "2", ")", ",", "int", "(", "FRAME_HEIGHT_TOP", "/", "2", ")", "]", "*", "state_dim", "\n", "return", "np", ".", "multiply", "(", "data", ",", "scale", ")", "+", "shift", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.mouse_v1.preprocess.transform_to_svd_components": [[29, 91], ["numpy.concatenate", "numpy.arctan2", "numpy.array().transpose", "numpy.concatenate", "numpy.matmul", "centered_data.reshape.transpose", "centered_data.reshape.reshape", "numpy.concatenate", "centered_data.reshape.transpose", "numpy.mean", "sklearn.decomposition.TruncatedSVD", "sklearn.decomposition.TruncatedSVD.fit_transform", "sklearn.decomposition.TruncatedSVD.transform", "numpy.concatenate", "numpy.stack", "numpy.array", "numpy.var", "numpy.var().sum", "open", "pickle.dump", "open", "pickle.dump", "numpy.sin", "numpy.cos", "numpy.var", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.sin"], "function", ["None"], ["", "def", "transform_to_svd_components", "(", "data", ",", "\n", "center_index", "=", "3", ",", "\n", "n_components", "=", "5", ",", "\n", "svd_computer", "=", "None", ",", "\n", "mean", "=", "None", ",", "\n", "stack_agents", "=", "False", ",", "\n", "stack_axis", "=", "1", ",", "\n", "save_svd", "=", "False", ")", ":", "\n", "# data shape is num_seq x 2 x 7 x 2", "\n", "    ", "resident_keypoints", "=", "data", "[", ":", ",", "0", ",", ":", ",", ":", "]", "\n", "intruder_keypoints", "=", "data", "[", ":", ",", "1", ",", ":", ",", ":", "]", "\n", "data", "=", "np", ".", "concatenate", "(", "[", "resident_keypoints", ",", "intruder_keypoints", "]", ",", "axis", "=", "0", ")", "\n", "\n", "# Center the data using given center_index", "\n", "mouse_center", "=", "data", "[", ":", ",", "center_index", ",", ":", "]", "\n", "centered_data", "=", "data", "-", "mouse_center", "[", ":", ",", "np", ".", "newaxis", ",", ":", "]", "\n", "\n", "# Rotate such that keypoints 3 and 6 are parallel with the y axis", "\n", "mouse_rotation", "=", "np", ".", "arctan2", "(", "\n", "data", "[", ":", ",", "3", ",", "0", "]", "-", "data", "[", ":", ",", "6", ",", "0", "]", ",", "data", "[", ":", ",", "3", ",", "1", "]", "-", "data", "[", ":", ",", "6", ",", "1", "]", ")", "\n", "\n", "R", "=", "(", "np", ".", "array", "(", "[", "[", "np", ".", "cos", "(", "mouse_rotation", ")", ",", "-", "np", ".", "sin", "(", "mouse_rotation", ")", "]", ",", "\n", "[", "np", ".", "sin", "(", "mouse_rotation", ")", ",", "np", ".", "cos", "(", "mouse_rotation", ")", "]", "]", ")", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", ")", "\n", "\n", "# Encode mouse rotation as sine and cosine", "\n", "mouse_rotation", "=", "np", ".", "concatenate", "(", "[", "np", ".", "sin", "(", "mouse_rotation", ")", "[", ":", ",", "np", ".", "newaxis", "]", ",", "np", ".", "cos", "(", "\n", "mouse_rotation", ")", "[", ":", ",", "np", ".", "newaxis", "]", "]", ",", "axis", "=", "-", "1", ")", "\n", "\n", "centered_data", "=", "np", ".", "matmul", "(", "R", ",", "centered_data", ".", "transpose", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "centered_data", "=", "centered_data", ".", "transpose", "(", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "\n", "centered_data", "=", "centered_data", ".", "reshape", "(", "(", "-", "1", ",", "14", ")", ")", "\n", "\n", "if", "mean", "is", "None", ":", "\n", "        ", "mean", "=", "np", ".", "mean", "(", "centered_data", ",", "axis", "=", "0", ")", "\n", "", "centered_data", "=", "centered_data", "-", "mean", "\n", "\n", "# Compute SVD components", "\n", "if", "svd_computer", "is", "None", ":", "\n", "        ", "svd_computer", "=", "TruncatedSVD", "(", "n_components", "=", "n_components", ")", "\n", "svd_data", "=", "svd_computer", ".", "fit_transform", "(", "centered_data", ")", "\n", "", "else", ":", "\n", "        ", "svd_data", "=", "svd_computer", ".", "transform", "(", "centered_data", ")", "\n", "explained_variances", "=", "np", ".", "var", "(", "svd_data", ",", "axis", "=", "0", ")", "/", "np", ".", "var", "(", "centered_data", ",", "axis", "=", "0", ")", ".", "sum", "(", ")", "\n", "\n", "# Concatenate state as mouse center, mouse rotation and svd components", "\n", "", "data", "=", "np", ".", "concatenate", "(", "[", "mouse_center", ",", "mouse_rotation", ",", "svd_data", "]", ",", "axis", "=", "1", ")", "\n", "resident_keypoints", "=", "data", "[", ":", "data", ".", "shape", "[", "0", "]", "//", "2", ",", ":", "]", "\n", "intruder_keypoints", "=", "data", "[", "data", ".", "shape", "[", "0", "]", "//", "2", ":", ",", ":", "]", "\n", "\n", "if", "not", "stack_agents", ":", "\n", "        ", "data", "=", "np", ".", "concatenate", "(", "[", "resident_keypoints", ",", "intruder_keypoints", "]", ",", "axis", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "        ", "data", "=", "np", ".", "stack", "(", "[", "resident_keypoints", ",", "intruder_keypoints", "]", ",", "axis", "=", "stack_axis", ")", "\n", "\n", "", "if", "save_svd", ":", "\n", "        ", "with", "open", "(", "svd_computer_path", ",", "'wb'", ")", "as", "f", ":", "\n", "            ", "pickle", ".", "dump", "(", "svd_computer", ",", "f", ")", "\n", "", "with", "open", "(", "mean_path", ",", "'wb'", ")", "as", "f", ":", "\n", "            ", "pickle", ".", "dump", "(", "mean", ",", "f", ")", "\n", "\n", "", "", "return", "data", ",", "svd_computer", ",", "mean", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.mouse_v1.preprocess.unnormalize_keypoint_center_rotation": [[93, 107], ["keypoints.transpose.reshape", "numpy.array().transpose", "numpy.matmul", "keypoints.transpose.transpose", "keypoints.transpose.reshape", "keypoints.transpose.transpose", "numpy.array", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.sin"], "function", ["None"], ["", "def", "unnormalize_keypoint_center_rotation", "(", "keypoints", ",", "center", ",", "rotation", ")", ":", "\n", "\n", "    ", "keypoints", "=", "keypoints", ".", "reshape", "(", "(", "-", "1", ",", "7", ",", "2", ")", ")", "\n", "\n", "# Apply inverse rotation", "\n", "rotation", "=", "-", "1", "*", "rotation", "\n", "R", "=", "np", ".", "array", "(", "[", "[", "np", ".", "cos", "(", "rotation", ")", ",", "-", "np", ".", "sin", "(", "rotation", ")", "]", ",", "\n", "[", "np", ".", "sin", "(", "rotation", ")", ",", "np", ".", "cos", "(", "rotation", ")", "]", "]", ")", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "centered_data", "=", "np", ".", "matmul", "(", "R", ",", "keypoints", ".", "transpose", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "\n", "keypoints", "=", "centered_data", "+", "center", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", "\n", "keypoints", "=", "keypoints", ".", "transpose", "(", "0", ",", "2", ",", "1", ")", "\n", "\n", "return", "keypoints", ".", "reshape", "(", "-", "1", ",", "14", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.mouse_v1.preprocess.transform_svd_to_keypoints": [[109, 143], ["svd_computer.inverse_transform", "svd_computer.inverse_transform", "numpy.arctan2", "numpy.arctan2", "preprocess.unnormalize_keypoint_center_rotation", "preprocess.unnormalize_keypoint_center_rotation", "numpy.concatenate", "numpy.stack"], "function", ["home.repos.pwc.inspect_result.neuroethology_TREBA.mouse_v1.preprocess.unnormalize_keypoint_center_rotation", "home.repos.pwc.inspect_result.neuroethology_TREBA.mouse_v1.preprocess.unnormalize_keypoint_center_rotation"], ["", "def", "transform_svd_to_keypoints", "(", "data", ",", "svd_computer", ",", "mean", ",", "stack_agents", "=", "False", ",", "\n", "stack_axis", "=", "0", ")", ":", "\n", "    ", "num_components", "=", "data", ".", "shape", "[", "1", "]", "//", "2", "\n", "resident_center", "=", "data", "[", ":", ",", ":", "2", "]", "\n", "resident_rotation", "=", "data", "[", ":", ",", "2", ":", "4", "]", "\n", "resident_components", "=", "data", "[", ":", ",", "4", ":", "num_components", "]", "\n", "intruder_center", "=", "data", "[", ":", ",", "num_components", ":", "num_components", "+", "2", "]", "\n", "intruder_rotation", "=", "data", "[", ":", ",", "num_components", "+", "2", ":", "num_components", "+", "4", "]", "\n", "intruder_components", "=", "data", "[", ":", ",", "num_components", "+", "4", ":", "]", "\n", "\n", "resident_keypoints", "=", "svd_computer", ".", "inverse_transform", "(", "resident_components", ")", "\n", "intruder_keypoints", "=", "svd_computer", ".", "inverse_transform", "(", "intruder_components", ")", "\n", "\n", "if", "mean", "is", "not", "None", ":", "\n", "        ", "resident_keypoints", "=", "resident_keypoints", "+", "mean", "\n", "intruder_keypoints", "=", "intruder_keypoints", "+", "mean", "\n", "\n", "# Compute rotation angle from sine and cosine representation", "\n", "", "resident_rotation", "=", "np", ".", "arctan2", "(", "\n", "resident_rotation", "[", ":", ",", "0", "]", ",", "resident_rotation", "[", ":", ",", "1", "]", ")", "\n", "intruder_rotation", "=", "np", ".", "arctan2", "(", "\n", "intruder_rotation", "[", ":", ",", "0", "]", ",", "intruder_rotation", "[", ":", ",", "1", "]", ")", "\n", "\n", "resident_keypoints", "=", "unnormalize_keypoint_center_rotation", "(", "\n", "resident_keypoints", ",", "resident_center", ",", "resident_rotation", ")", "\n", "intruder_keypoints", "=", "unnormalize_keypoint_center_rotation", "(", "\n", "intruder_keypoints", ",", "intruder_center", ",", "intruder_rotation", ")", "\n", "\n", "if", "not", "stack_agents", ":", "\n", "        ", "data", "=", "np", ".", "concatenate", "(", "[", "resident_keypoints", ",", "intruder_keypoints", "]", ",", "axis", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "        ", "data", "=", "np", ".", "stack", "(", "[", "resident_keypoints", ",", "intruder_keypoints", "]", ",", "axis", "=", "stack_axis", ")", "\n", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.mouse_v1.convert_calms21_to_npz.sliding_window_stack": [[13, 18], ["numpy.stack", "range"], "function", ["None"], ["def", "sliding_window_stack", "(", "input_array", ",", "seq_length", "=", "100", ",", "sliding_window", "=", "1", ")", ":", "\n", "    ", "total", "=", "input_array", ".", "shape", "[", "0", "]", "\n", "\n", "return", "np", ".", "stack", "(", "[", "input_array", "[", "i", ":", "total", "+", "i", "-", "seq_length", "+", "1", ":", "sliding_window", "]", "\n", "for", "i", "in", "range", "(", "seq_length", ")", "]", ",", "axis", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.mouse_v1.convert_calms21_to_npz.stack_pose_to_traj_list": [[19, 51], ["numpy.array", "pose_value.transpose", "current_pose_list.reshape.reshape", "numpy.pad", "convert_calms21_to_npz.sliding_window_stack", "len", "numpy.concatenate"], "function", ["home.repos.pwc.inspect_result.neuroethology_TREBA.mouse_v1.convert_calms21_to_npz.sliding_window_stack"], ["", "def", "stack_pose_to_traj_list", "(", "input_pose", ",", "seq_length", ",", "sliding_window", "=", "1", ")", ":", "\n", "    ", "\"\"\"\n    Cut pose list into array of seq_number x seq_length x 28.\n    If sliding_window size == seq_length, there will be no overlaps in the saved trajectories.\n    If sliding_window == 1, the number of trajectories will be equal to the number of input frames.\n    \"\"\"", "\n", "pose_list", "=", "[", "]", "\n", "\n", "if", "sliding_window", "is", "None", ":", "\n", "        ", "sliding_window", "=", "seq_length", "\n", "\n", "", "for", "pose_value", "in", "input_pose", ":", "\n", "\n", "# Processing mouse trajectories.", "\n", "        ", "current_pose_list", "=", "pose_value", ".", "transpose", "(", "(", "0", ",", "1", ",", "3", ",", "2", ")", ")", "\n", "\n", "current_pose_list", "=", "current_pose_list", ".", "reshape", "(", "(", "current_pose_list", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ")", "\n", "\n", "# Do edge padding.", "\n", "converted_padded", "=", "np", ".", "pad", "(", "current_pose_list", ",", "(", "(", "seq_length", "//", "2", ",", "\n", "seq_length", "-", "1", "-", "seq_length", "//", "2", ")", ",", "(", "0", ",", "0", ")", ")", ",", "mode", "=", "'edge'", ")", "\n", "\n", "cut_pose_list", "=", "sliding_window_stack", "(", "converted_padded", ",", "seq_length", "=", "seq_length", ",", "\n", "sliding_window", "=", "sliding_window", ")", "\n", "\n", "if", "len", "(", "pose_list", ")", "==", "0", ":", "\n", "            ", "pose_list", "=", "cut_pose_list", "\n", "", "else", ":", "\n", "            ", "pose_list", "=", "np", ".", "concatenate", "(", "[", "pose_list", ",", "cut_pose_list", "]", ",", "axis", "=", "0", ")", "\n", "\n", "", "", "pose_list", "=", "np", ".", "array", "(", "pose_list", ")", "\n", "return", "pose_list", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.ReadLabels.__init__": [[24, 26], ["util.datasets.LabelFunction.__init__"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.__init__"], ["def", "__init__", "(", "self", ",", "lf_config", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "lf_config", ",", "output_dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.ReadLabels.label_func": [[28, 31], ["None"], "methods", ["None"], ["", "def", "label_func", "(", "self", ",", "states", ",", "actions", ",", "true_label", ")", ":", "\n", "\n", "        ", "return", "true_label", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.ReadLabels.plot": [[33, 35], ["None"], "methods", ["None"], ["", "def", "plot", "(", "self", ",", "ax", ",", "states", ",", "label", ",", "width", ",", "length", ")", ":", "\n", "        ", "return", "ax", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleAngleSocial.__init__": [[211, 213], ["util.datasets.LabelFunction.__init__"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.__init__"], ["label_tensor", "=", "label_tensor", ".", "to", "(", "states", ".", "device", ")", "\n", "\n", "return", "torch", ".", "mean", "(", "label_tensor", ".", "float", "(", ")", ")", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleAngleSocial.label_func": [[214, 225], ["heuristics.unnormalize", "heuristics.social_angle", "torch.from_numpy", "label_tensor.to.to.to", "torch.mean", "numpy.array", "label_tensor.to.to.float"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.unnormalize", "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.social_angle"], ["\n", "\n", "", "def", "plot", "(", "self", ",", "ax", ",", "states", ",", "label", ",", "width", ",", "length", ")", ":", "\n", "        ", "return", "ax", "\n", "\n", "\n", "\n", "", "", "class", "MiddleDistNoseTail", "(", "LabelFunction", ")", ":", "\n", "\n", "    ", "name", "=", "'middle_dist_nose_tail'", "\n", "svd_computer", "=", "None", "\n", "mean", "=", "None", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleAngleSocial.plot": [[227, 229], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "lf_config", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "lf_config", ",", "output_dim", "=", "1", ")", "\n", "with", "open", "(", "svd_computer_path", ",", "'rb'", ")", "as", "f", ":", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleAngleSocialIntruder.__init__": [[238, 240], ["util.datasets.LabelFunction.__init__"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.__init__"], ["keypoints", "=", "unnormalize", "(", "keypoints", ")", "\n", "\n", "keypoints_resident", "=", "keypoints", "[", "0", "]", ".", "reshape", "(", "(", "-", "1", ",", "7", ",", "2", ")", ")", "[", "MIDDLE_INDEX", "]", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleAngleSocialIntruder.label_func": [[241, 252], ["heuristics.unnormalize", "heuristics.social_angle", "torch.from_numpy", "label_tensor.to.to.to", "torch.mean", "numpy.array", "label_tensor.to.to.float"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.unnormalize", "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.social_angle"], ["keypoints_intruder", "=", "keypoints", "[", "1", "]", ".", "reshape", "(", "(", "-", "1", ",", "7", ",", "2", ")", ")", "[", "MIDDLE_INDEX", "]", "\n", "\n", "dist", "=", "dist_nose_tail", "(", "keypoints_resident", "[", ":", ",", "0", "]", ",", "keypoints_resident", "[", ":", ",", "1", "]", ",", "\n", "keypoints_intruder", "[", ":", ",", "0", "]", ",", "keypoints_intruder", "[", ":", ",", "1", "]", ")", "\n", "\n", "label_tensor", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "dist", ")", ")", "\n", "\n", "label_tensor", "=", "label_tensor", ".", "to", "(", "states", ".", "device", ")", "\n", "\n", "return", "torch", ".", "mean", "(", "label_tensor", ".", "float", "(", ")", ")", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleAngleSocialIntruder.plot": [[254, 256], ["None"], "methods", ["None"], ["        ", "return", "ax", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleMovementNoseResident.__init__": [[115, 121], ["util.datasets.LabelFunction.__init__", "open", "pickle.load", "open", "pickle.load"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.__init__"], ["def", "__init__", "(", "self", ",", "lf_config", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "lf_config", ",", "output_dim", "=", "1", ")", "\n", "with", "open", "(", "svd_computer_path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "svd_computer", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "with", "open", "(", "mean_path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "mean", "=", "pickle", ".", "load", "(", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleMovementNoseResident.label_func": [[123, 140], ["transform_svd_to_keypoints", "unnormalize", "keypoints[].reshape", "heuristics.nose_to_centroid_movement", "torch.from_numpy", "label_tensor.to.to.to", "torch.mean", "numpy.array", "label_tensor.to.to.float", "states.numpy"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.mouse_v1.preprocess.transform_svd_to_keypoints", "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.unnormalize", "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.nose_to_centroid_movement"], ["", "", "def", "label_func", "(", "self", ",", "states", ",", "actions", ",", "true_label", "=", "None", ")", ":", "\n", "        ", "keypoints", "=", "transform_svd_to_keypoints", "(", "states", ".", "numpy", "(", ")", "[", ":", "-", "1", "]", ",", "self", ".", "svd_computer", ",", "self", ".", "mean", ",", "\n", "stack_agents", "=", "True", ")", "\n", "keypoints", "=", "unnormalize", "(", "keypoints", ")", "\n", "\n", "keypoints_resident", "=", "keypoints", "[", "0", "]", ".", "reshape", "(", "(", "-", "1", ",", "7", ",", "2", ")", ")", "\n", "\n", "speed", "=", "nose_to_centroid_movement", "(", "keypoints_resident", "[", "MIDDLE_INDEX", "-", "2", ",", ":", ",", "0", "]", ",", "\n", "keypoints_resident", "[", "MIDDLE_INDEX", "-", "2", ",", ":", ",", "1", "]", ",", "\n", "keypoints_resident", "[", "MIDDLE_INDEX", "+", "2", ",", ":", ",", "0", "]", ",", "\n", "keypoints_resident", "[", "MIDDLE_INDEX", "+", "2", ",", ":", ",", "1", "]", ")", "\n", "\n", "label_tensor", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "speed", ")", ")", "\n", "\n", "label_tensor", "=", "label_tensor", ".", "to", "(", "states", ".", "device", ")", "\n", "\n", "return", "torch", ".", "mean", "(", "label_tensor", ".", "float", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleMovementNoseResident.plot": [[142, 144], ["None"], "methods", ["None"], ["", "def", "plot", "(", "self", ",", "ax", ",", "states", ",", "label", ",", "width", ",", "length", ")", ":", "\n", "        ", "return", "ax", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleMovementNoseIntruder.__init__": [[152, 158], ["util.datasets.LabelFunction.__init__", "open", "pickle.load", "open", "pickle.load"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.__init__"], ["def", "__init__", "(", "self", ",", "lf_config", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "lf_config", ",", "output_dim", "=", "1", ")", "\n", "with", "open", "(", "svd_computer_path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "svd_computer", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "with", "open", "(", "mean_path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "mean", "=", "pickle", ".", "load", "(", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleMovementNoseIntruder.label_func": [[160, 177], ["transform_svd_to_keypoints", "unnormalize", "keypoints[].reshape", "heuristics.nose_to_centroid_movement", "torch.from_numpy", "label_tensor.to.to.to", "torch.mean", "numpy.array", "label_tensor.to.to.float", "states.numpy"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.mouse_v1.preprocess.transform_svd_to_keypoints", "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.unnormalize", "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.nose_to_centroid_movement"], ["", "", "def", "label_func", "(", "self", ",", "states", ",", "actions", ",", "true_label", "=", "None", ")", ":", "\n", "        ", "keypoints", "=", "transform_svd_to_keypoints", "(", "states", ".", "numpy", "(", ")", "[", ":", "-", "1", "]", ",", "self", ".", "svd_computer", ",", "self", ".", "mean", ",", "\n", "stack_agents", "=", "True", ")", "\n", "keypoints", "=", "unnormalize", "(", "keypoints", ")", "\n", "\n", "keypoints_intruder", "=", "keypoints", "[", "1", "]", ".", "reshape", "(", "(", "-", "1", ",", "7", ",", "2", ")", ")", "\n", "\n", "speed", "=", "nose_to_centroid_movement", "(", "keypoints_intruder", "[", "MIDDLE_INDEX", "-", "2", ",", ":", ",", "0", "]", ",", "\n", "keypoints_intruder", "[", "MIDDLE_INDEX", "-", "2", ",", ":", ",", "1", "]", ",", "\n", "keypoints_intruder", "[", "MIDDLE_INDEX", "+", "2", ",", ":", ",", "0", "]", ",", "\n", "keypoints_intruder", "[", "MIDDLE_INDEX", "+", "2", ",", ":", ",", "1", "]", ")", "\n", "\n", "label_tensor", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "speed", ")", ")", "\n", "\n", "label_tensor", "=", "label_tensor", ".", "to", "(", "states", ".", "device", ")", "\n", "\n", "return", "torch", ".", "mean", "(", "label_tensor", ".", "float", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleMovementNoseIntruder.plot": [[179, 181], ["None"], "methods", ["None"], ["", "def", "plot", "(", "self", ",", "ax", ",", "states", ",", "label", ",", "width", ",", "length", ")", ":", "\n", "        ", "return", "ax", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleDistNoseNose.__init__": [[190, 196], ["util.datasets.LabelFunction.__init__", "open", "pickle.load", "open", "pickle.load"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.__init__"], ["def", "__init__", "(", "self", ",", "lf_config", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "lf_config", ",", "output_dim", "=", "1", ")", "\n", "with", "open", "(", "svd_computer_path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "svd_computer", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "with", "open", "(", "mean_path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "mean", "=", "pickle", ".", "load", "(", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleDistNoseNose.label_func": [[198, 214], ["transform_svd_to_keypoints", "unnormalize", "heuristics.dist_nose_nose", "torch.from_numpy", "label_tensor.to.to.to", "torch.mean", "keypoints[].reshape", "keypoints[].reshape", "numpy.array", "label_tensor.to.to.float", "states.numpy"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.mouse_v1.preprocess.transform_svd_to_keypoints", "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.unnormalize", "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.dist_nose_nose"], ["", "", "def", "label_func", "(", "self", ",", "states", ",", "actions", ",", "true_label", "=", "None", ")", ":", "\n", "        ", "keypoints", "=", "transform_svd_to_keypoints", "(", "states", ".", "numpy", "(", ")", "[", ":", "-", "1", "]", ",", "self", ".", "svd_computer", ",", "self", ".", "mean", ",", "\n", "stack_agents", "=", "True", ")", "\n", "keypoints", "=", "unnormalize", "(", "keypoints", ")", "\n", "\n", "keypoints_resident", "=", "keypoints", "[", "0", "]", ".", "reshape", "(", "(", "-", "1", ",", "7", ",", "2", ")", ")", "[", "MIDDLE_INDEX", "]", "\n", "keypoints_intruder", "=", "keypoints", "[", "1", "]", ".", "reshape", "(", "(", "-", "1", ",", "7", ",", "2", ")", ")", "[", "MIDDLE_INDEX", "]", "\n", "\n", "dist", "=", "dist_nose_nose", "(", "keypoints_resident", "[", ":", ",", "0", "]", ",", "keypoints_resident", "[", ":", ",", "1", "]", ",", "\n", "keypoints_intruder", "[", ":", ",", "0", "]", ",", "keypoints_intruder", "[", ":", ",", "1", "]", ")", "\n", "\n", "label_tensor", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "dist", ")", ")", "\n", "\n", "label_tensor", "=", "label_tensor", ".", "to", "(", "states", ".", "device", ")", "\n", "\n", "return", "torch", ".", "mean", "(", "label_tensor", ".", "float", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleDistNoseNose.plot": [[216, 218], ["None"], "methods", ["None"], ["", "def", "plot", "(", "self", ",", "ax", ",", "states", ",", "label", ",", "width", ",", "length", ")", ":", "\n", "        ", "return", "ax", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleDistNoseTail.__init__": [[227, 233], ["util.datasets.LabelFunction.__init__", "open", "pickle.load", "open", "pickle.load"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.__init__"], ["def", "__init__", "(", "self", ",", "lf_config", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "lf_config", ",", "output_dim", "=", "1", ")", "\n", "with", "open", "(", "svd_computer_path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "svd_computer", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "with", "open", "(", "mean_path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "mean", "=", "pickle", ".", "load", "(", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleDistNoseTail.label_func": [[235, 251], ["transform_svd_to_keypoints", "unnormalize", "heuristics.dist_nose_tail", "torch.from_numpy", "label_tensor.to.to.to", "torch.mean", "keypoints[].reshape", "keypoints[].reshape", "numpy.array", "label_tensor.to.to.float", "states.numpy"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.mouse_v1.preprocess.transform_svd_to_keypoints", "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.unnormalize", "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.dist_nose_tail"], ["", "", "def", "label_func", "(", "self", ",", "states", ",", "actions", ",", "true_label", "=", "None", ")", ":", "\n", "        ", "keypoints", "=", "transform_svd_to_keypoints", "(", "states", ".", "numpy", "(", ")", "[", ":", "-", "1", "]", ",", "self", ".", "svd_computer", ",", "self", ".", "mean", ",", "\n", "stack_agents", "=", "True", ")", "\n", "keypoints", "=", "unnormalize", "(", "keypoints", ")", "\n", "\n", "keypoints_resident", "=", "keypoints", "[", "0", "]", ".", "reshape", "(", "(", "-", "1", ",", "7", ",", "2", ")", ")", "[", "MIDDLE_INDEX", "]", "\n", "keypoints_intruder", "=", "keypoints", "[", "1", "]", ".", "reshape", "(", "(", "-", "1", ",", "7", ",", "2", ")", ")", "[", "MIDDLE_INDEX", "]", "\n", "\n", "dist", "=", "dist_nose_tail", "(", "keypoints_resident", "[", ":", ",", "0", "]", ",", "keypoints_resident", "[", ":", ",", "1", "]", ",", "\n", "keypoints_intruder", "[", ":", ",", "0", "]", ",", "keypoints_intruder", "[", ":", ",", "1", "]", ")", "\n", "\n", "label_tensor", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "dist", ")", ")", "\n", "\n", "label_tensor", "=", "label_tensor", ".", "to", "(", "states", ".", "device", ")", "\n", "\n", "return", "torch", ".", "mean", "(", "label_tensor", ".", "float", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleDistNoseTail.plot": [[253, 255], ["None"], "methods", ["None"], ["", "def", "plot", "(", "self", ",", "ax", ",", "states", ",", "label", ",", "width", ",", "length", ")", ":", "\n", "        ", "return", "ax", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleAngleHeadBodyResident.__init__": [[263, 269], ["util.datasets.LabelFunction.__init__", "open", "pickle.load", "open", "pickle.load"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.__init__"], ["def", "__init__", "(", "self", ",", "lf_config", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "lf_config", ",", "output_dim", "=", "1", ")", "\n", "with", "open", "(", "svd_computer_path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "svd_computer", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "with", "open", "(", "mean_path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "mean", "=", "pickle", ".", "load", "(", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleAngleHeadBodyResident.label_func": [[271, 285], ["transform_svd_to_keypoints", "unnormalize", "heuristics.interior_angle", "torch.from_numpy", "label_tensor.to.to.to", "torch.mean", "keypoints[].reshape", "numpy.array", "label_tensor.to.to.float", "states.numpy"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.mouse_v1.preprocess.transform_svd_to_keypoints", "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.unnormalize", "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.interior_angle"], ["", "", "def", "label_func", "(", "self", ",", "states", ",", "actions", ",", "true_label", "=", "None", ")", ":", "\n", "        ", "keypoints", "=", "transform_svd_to_keypoints", "(", "states", ".", "numpy", "(", ")", "[", ":", "-", "1", "]", ",", "self", ".", "svd_computer", ",", "self", ".", "mean", ",", "\n", "stack_agents", "=", "True", ")", "\n", "keypoints", "=", "unnormalize", "(", "keypoints", ")", "\n", "\n", "keypoints_resident", "=", "keypoints", "[", "0", "]", ".", "reshape", "(", "(", "-", "1", ",", "7", ",", "2", ")", ")", "[", "MIDDLE_INDEX", "]", "\n", "\n", "angle", "=", "interior_angle", "(", "keypoints_resident", "[", "0", "]", ",", "keypoints_resident", "[", "3", "]", ",", "keypoints_resident", "[", "6", "]", ")", "\n", "\n", "label_tensor", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "angle", ")", ")", "\n", "\n", "label_tensor", "=", "label_tensor", ".", "to", "(", "states", ".", "device", ")", "\n", "\n", "return", "torch", ".", "mean", "(", "label_tensor", ".", "float", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleAngleHeadBodyResident.plot": [[287, 289], ["None"], "methods", ["None"], ["", "def", "plot", "(", "self", ",", "ax", ",", "states", ",", "label", ",", "width", ",", "length", ")", ":", "\n", "        ", "return", "ax", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleAngleHeadBodyIntruder.__init__": [[297, 303], ["util.datasets.LabelFunction.__init__", "open", "pickle.load", "open", "pickle.load"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.__init__"], ["def", "__init__", "(", "self", ",", "lf_config", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "lf_config", ",", "output_dim", "=", "1", ")", "\n", "with", "open", "(", "svd_computer_path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "svd_computer", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "with", "open", "(", "mean_path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "mean", "=", "pickle", ".", "load", "(", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleAngleHeadBodyIntruder.label_func": [[305, 319], ["transform_svd_to_keypoints", "unnormalize", "heuristics.interior_angle", "torch.from_numpy", "label_tensor.to.to.to", "torch.mean", "keypoints[].reshape", "numpy.array", "label_tensor.to.to.float", "states.numpy"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.mouse_v1.preprocess.transform_svd_to_keypoints", "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.unnormalize", "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.interior_angle"], ["", "", "def", "label_func", "(", "self", ",", "states", ",", "actions", ",", "true_label", "=", "None", ")", ":", "\n", "        ", "keypoints", "=", "transform_svd_to_keypoints", "(", "states", ".", "numpy", "(", ")", "[", ":", "-", "1", "]", ",", "self", ".", "svd_computer", ",", "self", ".", "mean", ",", "\n", "stack_agents", "=", "True", ")", "\n", "keypoints", "=", "unnormalize", "(", "keypoints", ")", "\n", "\n", "keypoints_intruder", "=", "keypoints", "[", "1", "]", ".", "reshape", "(", "(", "-", "1", ",", "7", ",", "2", ")", ")", "[", "MIDDLE_INDEX", "]", "\n", "\n", "angle", "=", "interior_angle", "(", "keypoints_intruder", "[", "0", "]", ",", "keypoints_intruder", "[", "3", "]", ",", "keypoints_intruder", "[", "6", "]", ")", "\n", "\n", "label_tensor", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "angle", ")", ")", "\n", "\n", "label_tensor", "=", "label_tensor", ".", "to", "(", "states", ".", "device", ")", "\n", "\n", "return", "torch", ".", "mean", "(", "label_tensor", ".", "float", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleAngleHeadBodyIntruder.plot": [[321, 323], ["None"], "methods", ["None"], ["", "def", "plot", "(", "self", ",", "ax", ",", "states", ",", "label", ",", "width", ",", "length", ")", ":", "\n", "        ", "return", "ax", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleSpeedResident.__init__": [[46, 48], ["util.datasets.LabelFunction.__init__"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.__init__"], ["            ", "self", ".", "svd_computer", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "with", "open", "(", "mean_path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "mean", "=", "pickle", ".", "load", "(", "f", ")", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleSpeedResident.label_func": [[49, 61], ["heuristics.unnormalize", "heuristics.speed_centroid", "torch.from_numpy", "label_tensor.to.to.to", "label_tensor.to.to.float", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.unnormalize", "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.speed_centroid"], ["\n", "\n", "", "", "def", "label_func", "(", "self", ",", "states", ",", "actions", ",", "true_label", "=", "None", ")", ":", "\n", "        ", "keypoints", "=", "transform_svd_to_keypoints", "(", "states", ".", "numpy", "(", ")", "[", ":", "-", "1", "]", ",", "self", ".", "svd_computer", ",", "self", ".", "mean", ",", "\n", "stack_agents", "=", "True", ")", "\n", "keypoints", "=", "unnormalize", "(", "keypoints", ")", "\n", "\n", "keypoints_resident", "=", "keypoints", "[", "0", "]", ".", "reshape", "(", "(", "-", "1", ",", "7", ",", "2", ")", ")", "[", "MIDDLE_INDEX", "]", "\n", "keypoints_intruder", "=", "keypoints", "[", "1", "]", ".", "reshape", "(", "(", "-", "1", ",", "7", ",", "2", ")", ")", "[", "MIDDLE_INDEX", "]", "\n", "\n", "angle", "=", "social_angle", "(", "keypoints_resident", "[", ":", ",", "0", "]", ",", "keypoints_resident", "[", ":", ",", "1", "]", ",", "\n", "keypoints_intruder", "[", ":", ",", "0", "]", ",", "keypoints_intruder", "[", ":", ",", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleSpeedResident.plot": [[63, 65], ["None"], "methods", ["None"], ["\n", "label_tensor", "=", "label_tensor", ".", "to", "(", "states", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleSpeedIntruder.__init__": [[72, 74], ["util.datasets.LabelFunction.__init__"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.__init__"], ["\n", "", "", "class", "MiddleAngleSocialIntruder", "(", "LabelFunction", ")", ":", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleSpeedIntruder.label_func": [[75, 87], ["heuristics.unnormalize", "heuristics.speed_centroid", "torch.from_numpy", "label_tensor.to.to.to", "label_tensor.to.to.float", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.unnormalize", "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.speed_centroid"], ["    ", "name", "=", "'middle_angle_social_intruder'", "\n", "svd_computer", "=", "None", "\n", "mean", "=", "None", "\n", "\n", "def", "__init__", "(", "self", ",", "lf_config", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "lf_config", ",", "output_dim", "=", "1", ")", "\n", "with", "open", "(", "svd_computer_path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "svd_computer", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "with", "open", "(", "mean_path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "mean", "=", "pickle", ".", "load", "(", "f", ")", "\n", "\n", "\n", "", "", "def", "label_func", "(", "self", ",", "states", ",", "actions", ",", "true_label", "=", "None", ")", ":", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleSpeedIntruder.plot": [[395, 397], ["None"], "methods", ["None"], ["", "def", "plot", "(", "self", ",", "ax", ",", "states", ",", "label", ",", "width", ",", "length", ")", ":", "\n", "        ", "return", "ax", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.speed_centroid": [[387, 393], ["numpy.linalg.norm"], "function", ["None"], ["\n", "label_tensor", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "speed", ")", ")", "\n", "\n", "label_tensor", "=", "label_tensor", ".", "to", "(", "states", ".", "device", ")", "\n", "\n", "return", "torch", ".", "mean", "(", "label_tensor", ".", "float", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.nose_to_centroid_movement": [[411, 424], ["numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.linalg.norm"], "function", ["None"], ["", "def", "nose_to_centroid_movement", "(", "x1", ",", "y1", ",", "x2", ",", "y2", ")", ":", "\n", "    ", "x1_c", "=", "np", ".", "mean", "(", "x1", ")", "\n", "y1_c", "=", "np", ".", "mean", "(", "y1", ")", "\n", "x2_c", "=", "np", ".", "mean", "(", "x2", ")", "\n", "y2_c", "=", "np", ".", "mean", "(", "y2", ")", "\n", "\n", "dx", "=", "x2_c", "-", "x1_c", "\n", "dy", "=", "y2_c", "-", "y1_c", "\n", "\n", "dx_nose", "=", "x2", "[", "0", "]", "-", "x1", "[", "0", "]", "\n", "dy_nose", "=", "y2", "[", "0", "]", "-", "y1", "[", "0", "]", "\n", "\n", "return", "np", ".", "linalg", ".", "norm", "(", "[", "dx_nose", "-", "dx", ",", "dy_nose", "-", "dy", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.acceleration_centroid": [[425, 438], ["numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.linalg.norm"], "function", ["None"], ["", "def", "acceleration_centroid", "(", "x0", ",", "y0", ",", "x1", ",", "y1", ",", "x2", ",", "y2", ")", ":", "\n", "\n", "    ", "x0_c", "=", "np", ".", "mean", "(", "x0", ")", "\n", "y0_c", "=", "np", ".", "mean", "(", "y0", ")", "\n", "x1_c", "=", "np", ".", "mean", "(", "x1", ")", "\n", "y1_c", "=", "np", ".", "mean", "(", "y1", ")", "\n", "x2_c", "=", "np", ".", "mean", "(", "x2", ")", "\n", "y2_c", "=", "np", ".", "mean", "(", "y2", ")", "\n", "\n", "ax", "=", "x2_c", "-", "2", "*", "x1_c", "+", "x0_c", "\n", "ay", "=", "y2_c", "-", "2", "*", "y1_c", "+", "y0_c", "\n", "\n", "return", "np", ".", "linalg", ".", "norm", "(", "[", "ax", ",", "ay", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.get_angle": [[440, 443], ["math.atan2"], "function", ["None"], ["", "def", "get_angle", "(", "Ax", ",", "Ay", ",", "Bx", ",", "By", ")", ":", "\n", "    ", "angle", "=", "(", "mh", ".", "atan2", "(", "Ax", "-", "Bx", ",", "Ay", "-", "By", ")", "+", "mh", ".", "pi", "/", "2", ")", "%", "(", "mh", ".", "pi", "*", "2", ")", "\n", "return", "angle", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.social_angle": [[422, 431], ["numpy.mod", "numpy.minimum", "numpy.arctan2", "numpy.arctan2"], "function", ["None"], ["\n", "return", "np", ".", "linalg", ".", "norm", "(", "[", "dx_nose", "-", "dx", ",", "dy_nose", "-", "dy", "]", ")", "\n", "\n", "", "def", "acceleration_centroid", "(", "x0", ",", "y0", ",", "x1", ",", "y1", ",", "x2", ",", "y2", ")", ":", "\n", "\n", "    ", "x0_c", "=", "np", ".", "mean", "(", "x0", ")", "\n", "y0_c", "=", "np", ".", "mean", "(", "y0", ")", "\n", "x1_c", "=", "np", ".", "mean", "(", "x1", ")", "\n", "y1_c", "=", "np", ".", "mean", "(", "y1", ")", "\n", "x2_c", "=", "np", ".", "mean", "(", "x2", ")", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.dist_nose_nose": [[454, 458], ["numpy.linalg.norm"], "function", ["None"], ["", "def", "dist_nose_nose", "(", "x1", ",", "y1", ",", "x2", ",", "y2", ")", ":", "\n", "    ", "x_dif", "=", "x1", "[", "0", "]", "-", "x2", "[", "0", "]", "\n", "y_dif", "=", "y1", "[", "0", "]", "-", "y2", "[", "0", "]", "\n", "return", "np", ".", "linalg", ".", "norm", "(", "[", "x_dif", ",", "y_dif", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.dist_nose_tail": [[459, 463], ["numpy.linalg.norm"], "function", ["None"], ["", "def", "dist_nose_tail", "(", "x1", ",", "y1", ",", "x2", ",", "y2", ")", ":", "\n", "    ", "x_dif", "=", "x1", "[", "0", "]", "-", "x2", "[", "6", "]", "\n", "y_dif", "=", "y1", "[", "0", "]", "-", "y2", "[", "6", "]", "\n", "return", "np", ".", "linalg", ".", "norm", "(", "[", "x_dif", ",", "y_dif", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.interior_angle": [[439, 445], ["math.atan2", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.linalg.det", "numpy.dot"], "function", ["None"], ["\n", "", "def", "get_angle", "(", "Ax", ",", "Ay", ",", "Bx", ",", "By", ")", ":", "\n", "    ", "angle", "=", "(", "mh", ".", "atan2", "(", "Ax", "-", "Bx", ",", "Ay", "-", "By", ")", "+", "mh", ".", "pi", "/", "2", ")", "%", "(", "mh", ".", "pi", "*", "2", ")", "\n", "return", "angle", "\n", "\n", "", "def", "social_angle", "(", "x1", ",", "y1", ",", "x2", ",", "y2", ")", ":", "\n", "    ", "x_dif", "=", "np", ".", "mean", "(", "x1", ")", "-", "np", ".", "mean", "(", "x2", ")", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.RandomLabeler.__init__": [[25, 27], ["util.datasets.LabelFunction.__init__"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.__init__"], ["        ", "super", "(", ")", ".", "__init__", "(", "lf_config", ",", "output_dim", "=", "1", ")", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.RandomLabeler.label_func": [[28, 35], ["torch.from_numpy", "label_tensor.to.to.to", "torch.mean", "numpy.array", "label_tensor.to.to.float", "numpy.random.rand"], "methods", ["None"], ["", "def", "label_func", "(", "self", ",", "states", ",", "actions", ",", "true_label", ")", ":", "\n", "\n", "        ", "return", "true_label", "\n", "\n", "\n", "", "def", "plot", "(", "self", ",", "ax", ",", "states", ",", "label", ",", "width", ",", "length", ")", ":", "\n", "        ", "return", "ax", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.RandomLabeler.plot": [[37, 39], ["None"], "methods", ["None"], ["", "", "class", "MiddleAngleSocial", "(", "LabelFunction", ")", ":", "\n", "\n", "    ", "name", "=", "'middle_angle_social'", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleAngularSpeedResident.__init__": [[94, 96], ["util.datasets.LabelFunction.__init__"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.__init__"], ["\n", "angle", "=", "social_angle", "(", "keypoints_intruder", "[", ":", ",", "0", "]", ",", "keypoints_intruder", "[", ":", ",", "1", "]", ",", "\n", "keypoints_resident", "[", ":", ",", "0", "]", ",", "keypoints_resident", "[", ":", ",", "1", "]", ")", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleAngularSpeedResident.label_func": [[97, 111], ["heuristics.unnormalize", "heuristics.angular_speed", "torch.from_numpy", "label_tensor.to.to.to", "label_tensor.to.to.float", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.unnormalize", "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.angular_speed"], ["\n", "label_tensor", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "angle", ")", ")", "\n", "\n", "label_tensor", "=", "label_tensor", ".", "to", "(", "states", ".", "device", ")", "\n", "\n", "return", "torch", ".", "mean", "(", "label_tensor", ".", "float", "(", ")", ")", "\n", "\n", "\n", "", "def", "plot", "(", "self", ",", "ax", ",", "states", ",", "label", ",", "width", ",", "length", ")", ":", "\n", "        ", "return", "ax", "\n", "\n", "\n", "", "", "class", "MiddleMovementNoseResident", "(", "LabelFunction", ")", ":", "\n", "\n", "    ", "name", "=", "'middle_movement_nose_resident'", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleAngularSpeedResident.plot": [[113, 115], ["None"], "methods", ["None"], ["mean", "=", "None", "\n", "\n", "def", "__init__", "(", "self", ",", "lf_config", ")", ":", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleAngularSpeedIntruder.__init__": [[122, 124], ["util.datasets.LabelFunction.__init__"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.__init__"], ["\n", "", "", "def", "label_func", "(", "self", ",", "states", ",", "actions", ",", "true_label", "=", "None", ")", ":", "\n", "        ", "keypoints", "=", "transform_svd_to_keypoints", "(", "states", ".", "numpy", "(", ")", "[", ":", "-", "1", "]", ",", "self", ".", "svd_computer", ",", "self", ".", "mean", ",", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleAngularSpeedIntruder.label_func": [[125, 137], ["heuristics.unnormalize", "heuristics.angular_speed", "torch.from_numpy", "label_tensor.to.to.to", "label_tensor.to.to.float", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.unnormalize", "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.angular_speed"], ["stack_agents", "=", "True", ")", "\n", "keypoints", "=", "unnormalize", "(", "keypoints", ")", "\n", "\n", "keypoints_resident", "=", "keypoints", "[", "0", "]", ".", "reshape", "(", "(", "-", "1", ",", "7", ",", "2", ")", ")", "\n", "\n", "speed", "=", "nose_to_centroid_movement", "(", "keypoints_resident", "[", "MIDDLE_INDEX", "-", "2", ",", ":", ",", "0", "]", ",", "\n", "keypoints_resident", "[", "MIDDLE_INDEX", "-", "2", ",", ":", ",", "1", "]", ",", "\n", "keypoints_resident", "[", "MIDDLE_INDEX", "+", "2", ",", ":", ",", "0", "]", ",", "\n", "keypoints_resident", "[", "MIDDLE_INDEX", "+", "2", ",", ":", ",", "1", "]", ")", "\n", "\n", "label_tensor", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "speed", ")", ")", "\n", "\n", "label_tensor", "=", "label_tensor", ".", "to", "(", "states", ".", "device", ")", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleAngularSpeedIntruder.plot": [[140, 142], ["None"], "methods", ["None"], ["\n", "\n", "", "def", "plot", "(", "self", ",", "ax", ",", "states", ",", "label", ",", "width", ",", "length", ")", ":", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleAxisRatioResident.__init__": [[150, 152], ["util.datasets.LabelFunction.__init__"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.__init__"], ["mean", "=", "None", "\n", "\n", "def", "__init__", "(", "self", ",", "lf_config", ")", ":", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleAxisRatioResident.label_func": [[153, 167], ["heuristics.unnormalize", "torch.from_numpy", "label_tensor.to.to.to", "torch.mean", "numpy.array", "label_tensor.to.to.float"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.unnormalize"], ["        ", "super", "(", ")", ".", "__init__", "(", "lf_config", ",", "output_dim", "=", "1", ")", "\n", "with", "open", "(", "svd_computer_path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "svd_computer", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "with", "open", "(", "mean_path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "mean", "=", "pickle", ".", "load", "(", "f", ")", "\n", "\n", "\n", "", "", "def", "label_func", "(", "self", ",", "states", ",", "actions", ",", "true_label", "=", "None", ")", ":", "\n", "        ", "keypoints", "=", "transform_svd_to_keypoints", "(", "states", ".", "numpy", "(", ")", "[", ":", "-", "1", "]", ",", "self", ".", "svd_computer", ",", "self", ".", "mean", ",", "\n", "stack_agents", "=", "True", ")", "\n", "keypoints", "=", "unnormalize", "(", "keypoints", ")", "\n", "\n", "keypoints_intruder", "=", "keypoints", "[", "1", "]", ".", "reshape", "(", "(", "-", "1", ",", "7", ",", "2", ")", ")", "\n", "\n", "speed", "=", "nose_to_centroid_movement", "(", "keypoints_intruder", "[", "MIDDLE_INDEX", "-", "2", ",", ":", ",", "0", "]", ",", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleAxisRatioResident.plot": [[169, 171], ["None"], "methods", ["None"], ["keypoints_intruder", "[", "MIDDLE_INDEX", "+", "2", ",", ":", ",", "0", "]", ",", "\n", "keypoints_intruder", "[", "MIDDLE_INDEX", "+", "2", ",", ":", ",", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleAxisRatioIntruder.__init__": [[180, 182], ["util.datasets.LabelFunction.__init__"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.__init__"], ["        ", "return", "ax", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleAxisRatioIntruder.label_func": [[183, 198], ["heuristics.unnormalize", "torch.from_numpy", "label_tensor.to.to.to", "torch.mean", "numpy.array", "label_tensor.to.to.float"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.unnormalize"], ["\n", "", "", "class", "MiddleDistNoseNose", "(", "LabelFunction", ")", ":", "\n", "\n", "    ", "name", "=", "'middle_dist_nose_nose'", "\n", "svd_computer", "=", "None", "\n", "mean", "=", "None", "\n", "\n", "def", "__init__", "(", "self", ",", "lf_config", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "lf_config", ",", "output_dim", "=", "1", ")", "\n", "with", "open", "(", "svd_computer_path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "svd_computer", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "with", "open", "(", "mean_path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "mean", "=", "pickle", ".", "load", "(", "f", ")", "\n", "\n", "\n", "", "", "def", "label_func", "(", "self", ",", "states", ",", "actions", ",", "true_label", "=", "None", ")", ":", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleAxisRatioIntruder.plot": [[200, 202], ["None"], "methods", ["None"], ["stack_agents", "=", "True", ")", "\n", "keypoints", "=", "unnormalize", "(", "keypoints", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleDistCentroid.__init__": [[263, 265], ["util.datasets.LabelFunction.__init__"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.__init__"], ["def", "__init__", "(", "self", ",", "lf_config", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "lf_config", ",", "output_dim", "=", "1", ")", "\n", "with", "open", "(", "svd_computer_path", ",", "'rb'", ")", "as", "f", ":", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleDistCentroid.label_func": [[266, 280], ["heuristics.unnormalize", "numpy.linalg.norm", "torch.from_numpy", "label_tensor.to.to.to", "torch.mean", "numpy.array", "label_tensor.to.to.float"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.unnormalize"], ["            ", "self", ".", "svd_computer", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "with", "open", "(", "mean_path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "mean", "=", "pickle", ".", "load", "(", "f", ")", "\n", "\n", "\n", "", "", "def", "label_func", "(", "self", ",", "states", ",", "actions", ",", "true_label", "=", "None", ")", ":", "\n", "        ", "keypoints", "=", "transform_svd_to_keypoints", "(", "states", ".", "numpy", "(", ")", "[", ":", "-", "1", "]", ",", "self", ".", "svd_computer", ",", "self", ".", "mean", ",", "\n", "stack_agents", "=", "True", ")", "\n", "keypoints", "=", "unnormalize", "(", "keypoints", ")", "\n", "\n", "keypoints_resident", "=", "keypoints", "[", "0", "]", ".", "reshape", "(", "(", "-", "1", ",", "7", ",", "2", ")", ")", "[", "MIDDLE_INDEX", "]", "\n", "\n", "angle", "=", "interior_angle", "(", "keypoints_resident", "[", "0", "]", ",", "keypoints_resident", "[", "3", "]", ",", "keypoints_resident", "[", "6", "]", ")", "\n", "\n", "label_tensor", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "angle", ")", ")", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleDistCentroid.plot": [[282, 284], ["None"], "methods", ["None"], ["label_tensor", "=", "label_tensor", ".", "to", "(", "states", ".", "device", ")", "\n", "\n", "return", "torch", ".", "mean", "(", "label_tensor", ".", "float", "(", ")", ")", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleWingAngleMinResident.__init__": [[292, 294], ["util.datasets.LabelFunction.__init__"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.__init__"], ["\n", "    ", "name", "=", "'middle_angle_head_body_intruder'", "\n", "svd_computer", "=", "None", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleWingAngleMinResident.label_func": [[295, 306], ["heuristics.unnormalize", "heuristics.wing_angles", "numpy.minimum", "torch.from_numpy", "label_tensor.to.to.to", "torch.mean", "numpy.array", "label_tensor.to.to.float"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.unnormalize", "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.wing_angles"], ["mean", "=", "None", "\n", "\n", "def", "__init__", "(", "self", ",", "lf_config", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "lf_config", ",", "output_dim", "=", "1", ")", "\n", "with", "open", "(", "svd_computer_path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "svd_computer", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "with", "open", "(", "mean_path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "mean", "=", "pickle", ".", "load", "(", "f", ")", "\n", "\n", "\n", "", "", "def", "label_func", "(", "self", ",", "states", ",", "actions", ",", "true_label", "=", "None", ")", ":", "\n", "        ", "keypoints", "=", "transform_svd_to_keypoints", "(", "states", ".", "numpy", "(", ")", "[", ":", "-", "1", "]", ",", "self", ".", "svd_computer", ",", "self", ".", "mean", ",", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleWingAngleMinResident.plot": [[308, 310], ["None"], "methods", ["None"], ["keypoints", "=", "unnormalize", "(", "keypoints", ")", "\n", "\n", "keypoints_intruder", "=", "keypoints", "[", "1", "]", ".", "reshape", "(", "(", "-", "1", ",", "7", ",", "2", ")", ")", "[", "MIDDLE_INDEX", "]", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleWingAngleMaxResident.__init__": [[317, 319], ["util.datasets.LabelFunction.__init__"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.__init__"], ["\n", "return", "torch", ".", "mean", "(", "label_tensor", ".", "float", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleWingAngleMaxResident.label_func": [[320, 331], ["heuristics.unnormalize", "heuristics.wing_angles", "numpy.maximum", "torch.from_numpy", "label_tensor.to.to.to", "torch.mean", "numpy.array", "label_tensor.to.to.float"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.unnormalize", "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.wing_angles"], ["\n", "", "def", "plot", "(", "self", ",", "ax", ",", "states", ",", "label", ",", "width", ",", "length", ")", ":", "\n", "        ", "return", "ax", "\n", "\n", "\n", "", "", "class", "MiddleSpeedResident", "(", "LabelFunction", ")", ":", "\n", "\n", "    ", "name", "=", "'middle_speed_resident'", "\n", "svd_computer", "=", "None", "\n", "mean", "=", "None", "\n", "\n", "def", "__init__", "(", "self", ",", "lf_config", ")", ":", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleWingAngleMaxResident.plot": [[333, 335], ["None"], "methods", ["None"], ["with", "open", "(", "svd_computer_path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "svd_computer", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "with", "open", "(", "mean_path", ",", "'rb'", ")", "as", "f", ":", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleWingAngleMinIntruder.__init__": [[342, 344], ["util.datasets.LabelFunction.__init__"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.__init__"], ["keypoints", "=", "unnormalize", "(", "keypoints", ")", "\n", "\n", "keypoints_resident", "=", "keypoints", "[", "0", "]", ".", "reshape", "(", "(", "-", "1", ",", "7", ",", "2", ")", ")", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleWingAngleMinIntruder.label_func": [[345, 356], ["heuristics.unnormalize", "heuristics.wing_angles", "numpy.minimum", "torch.from_numpy", "label_tensor.to.to.to", "torch.mean", "numpy.array", "label_tensor.to.to.float"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.unnormalize", "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.wing_angles"], ["\n", "speed", "=", "speed_centroid", "(", "keypoints_resident", "[", "MIDDLE_INDEX", "-", "2", ",", ":", ",", "0", "]", ",", "\n", "keypoints_resident", "[", "MIDDLE_INDEX", "-", "2", ",", ":", ",", "1", "]", ",", "\n", "keypoints_resident", "[", "MIDDLE_INDEX", "+", "2", ",", ":", ",", "0", "]", ",", "\n", "keypoints_resident", "[", "MIDDLE_INDEX", "+", "2", ",", ":", ",", "1", "]", ")", "\n", "\n", "label_tensor", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "speed", ")", ")", "\n", "\n", "label_tensor", "=", "label_tensor", ".", "to", "(", "states", ".", "device", ")", "\n", "\n", "return", "torch", ".", "mean", "(", "label_tensor", ".", "float", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleWingAngleMinIntruder.plot": [[358, 360], ["None"], "methods", ["None"], ["", "def", "plot", "(", "self", ",", "ax", ",", "states", ",", "label", ",", "width", ",", "length", ")", ":", "\n", "        ", "return", "ax", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleWingAngleMaxIntruder.__init__": [[367, 369], ["util.datasets.LabelFunction.__init__"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.__init__"], ["\n", "def", "__init__", "(", "self", ",", "lf_config", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "lf_config", ",", "output_dim", "=", "1", ")", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleWingAngleMaxIntruder.label_func": [[370, 381], ["heuristics.unnormalize", "heuristics.wing_angles", "numpy.maximum", "torch.from_numpy", "label_tensor.to.to.to", "torch.mean", "numpy.array", "label_tensor.to.to.float"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.unnormalize", "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.wing_angles"], ["with", "open", "(", "svd_computer_path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "svd_computer", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "with", "open", "(", "mean_path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "mean", "=", "pickle", ".", "load", "(", "f", ")", "\n", "\n", "\n", "", "", "def", "label_func", "(", "self", ",", "states", ",", "actions", ",", "true_label", "=", "None", ")", ":", "\n", "        ", "keypoints", "=", "transform_svd_to_keypoints", "(", "states", ".", "numpy", "(", ")", "[", ":", "-", "1", "]", ",", "self", ".", "svd_computer", ",", "self", ".", "mean", ",", "\n", "stack_agents", "=", "True", ")", "\n", "keypoints", "=", "unnormalize", "(", "keypoints", ")", "\n", "\n", "keypoints_intruder", "=", "keypoints", "[", "1", "]", ".", "reshape", "(", "(", "-", "1", ",", "7", ",", "2", ")", ")", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.MiddleWingAngleMaxIntruder.plot": [[383, 385], ["None"], "methods", ["None"], ["speed", "=", "speed_centroid", "(", "keypoints_intruder", "[", "MIDDLE_INDEX", "-", "2", ",", ":", ",", "0", "]", ",", "\n", "keypoints_intruder", "[", "MIDDLE_INDEX", "-", "2", ",", ":", ",", "1", "]", ",", "\n", "keypoints_intruder", "[", "MIDDLE_INDEX", "+", "2", ",", ":", ",", "0", "]", ",", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.unnormalize": [[395, 420], ["numpy.zeros", "int", "int"], "function", ["None"], ["", "def", "plot", "(", "self", ",", "ax", ",", "states", ",", "label", ",", "width", ",", "length", ")", ":", "\n", "        ", "return", "ax", "\n", "\n", "\n", "", "", "def", "speed_centroid", "(", "x1", ",", "y1", ",", "x2", ",", "y2", ")", ":", "\n", "    ", "x1_c", "=", "np", ".", "mean", "(", "x1", ")", "\n", "y1_c", "=", "np", ".", "mean", "(", "y1", ")", "\n", "x2_c", "=", "np", ".", "mean", "(", "x2", ")", "\n", "y2_c", "=", "np", ".", "mean", "(", "y2", ")", "\n", "\n", "dx", "=", "x2_c", "-", "x1_c", "\n", "dy", "=", "y2_c", "-", "y1_c", "\n", "\n", "return", "np", ".", "linalg", ".", "norm", "(", "[", "dx", ",", "dy", "]", ")", "\n", "\n", "\n", "", "def", "nose_to_centroid_movement", "(", "x1", ",", "y1", ",", "x2", ",", "y2", ")", ":", "\n", "    ", "x1_c", "=", "np", ".", "mean", "(", "x1", ")", "\n", "y1_c", "=", "np", ".", "mean", "(", "y1", ")", "\n", "x2_c", "=", "np", ".", "mean", "(", "x2", ")", "\n", "y2_c", "=", "np", ".", "mean", "(", "y2", ")", "\n", "\n", "dx", "=", "x2_c", "-", "x1_c", "\n", "dy", "=", "y2_c", "-", "y1_c", "\n", "\n", "dx_nose", "=", "x2", "[", "0", "]", "-", "x1", "[", "0", "]", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.dist_centroid": [[433, 437], ["numpy.linalg.norm", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean"], "function", ["None"], ["\n", "ax", "=", "x2_c", "-", "2", "*", "x1_c", "+", "x0_c", "\n", "ay", "=", "y2_c", "-", "2", "*", "y1_c", "+", "y0_c", "\n", "\n", "return", "np", ".", "linalg", ".", "norm", "(", "[", "ax", ",", "ay", "]", ")", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.wing_angles": [[447, 458], ["heuristics.interior_angle", "heuristics.interior_angle", "numpy.minimum", "numpy.minimum"], "function", ["home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.interior_angle", "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.interior_angle"], ["theta", "=", "(", "np", ".", "arctan2", "(", "y_dif", ",", "x_dif", ")", "+", "2", "*", "np", ".", "pi", ")", "%", "2", "*", "np", ".", "pi", "\n", "\n", "ori_body", "=", "get_angle", "(", "x1", "[", "6", "]", ",", "y1", "[", "6", "]", ",", "x1", "[", "3", "]", ",", "y1", "[", "3", "]", ")", "\n", "ang", "=", "np", ".", "mod", "(", "theta", "-", "ori_body", ",", "2", "*", "np", ".", "pi", ")", "\n", "return", "np", ".", "minimum", "(", "ang", ",", "2", "*", "np", ".", "pi", "-", "ang", ")", "\n", "\n", "\n", "", "def", "dist_nose_nose", "(", "x1", ",", "y1", ",", "x2", ",", "y2", ")", ":", "\n", "    ", "x_dif", "=", "x1", "[", "0", "]", "-", "x2", "[", "0", "]", "\n", "y_dif", "=", "y1", "[", "0", "]", "-", "y2", "[", "0", "]", "\n", "return", "np", ".", "linalg", ".", "norm", "(", "[", "x_dif", ",", "y_dif", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.label_functions.heuristics.angular_speed": [[460, 466], ["math.atan2", "math.atan2", "numpy.mod", "numpy.minimum"], "function", ["None"], ["    ", "x_dif", "=", "x1", "[", "0", "]", "-", "x2", "[", "6", "]", "\n", "y_dif", "=", "y1", "[", "0", "]", "-", "y2", "[", "6", "]", "\n", "return", "np", ".", "linalg", ".", "norm", "(", "[", "x_dif", ",", "y_dif", "]", ")", "\n", "\n", "\n", "", "def", "interior_angle", "(", "p0", ",", "p1", ",", "p2", ")", ":", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.augmentations.augmentation_functions.AllRandomAugmentations.__init__": [[21, 23], ["util.datasets.Augmentations.__init__"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.__init__"], ["        ", "super", "(", ")", ".", "__init__", "(", "aug_config", ")", "\n", "with", "open", "(", "svd_computer_path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "svd_computer", "=", "pickle", ".", "load", "(", "f", ")", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.augmentations.augmentation_functions.AllRandomAugmentations.augment_func": [[24, 49], ["augmentation_functions.unnormalize", "augmentation_functions.add_rotation_translation", "numpy.random.uniform", "numpy.random.uniform", "augmentation_functions.normalize", "torch.from_numpy().to().float", "states.cpu().numpy", "augmentation_functions.reflect_points", "augmentation_functions.reflect_points", "torch.from_numpy().to", "states.cpu", "torch.from_numpy"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.unnormalize", "home.repos.pwc.inspect_result.neuroethology_TREBA.augmentations.augmentation_functions.add_rotation_translation", "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.normalize", "home.repos.pwc.inspect_result.neuroethology_TREBA.augmentations.augmentation_functions.reflect_points", "home.repos.pwc.inspect_result.neuroethology_TREBA.augmentations.augmentation_functions.reflect_points"], ["", "with", "open", "(", "mean_path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "mean", "=", "pickle", ".", "load", "(", "f", ")", "\n", "\n", "", "", "def", "augment_func", "(", "self", ",", "states", ",", "actions", ")", ":", "\n", "        ", "keypoints", "=", "transform_svd_to_keypoints", "(", "states", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "self", ".", "svd_computer", ",", "self", ".", "mean", ",", "\n", "stack_agents", "=", "True", ")", "\n", "keypoints", "=", "unnormalize", "(", "keypoints", ")", "\n", "\n", "seq_len", "=", "states", ".", "shape", "[", "0", "]", "\n", "keypoints", "=", "keypoints", ".", "reshape", "(", "(", "2", ",", "seq_len", ",", "7", ",", "2", ")", ")", "\n", "\n", "new_keypoints", "=", "keypoints", "\n", "new_keypoints", "=", "add_rotation_translation", "(", "new_keypoints", ")", "\n", "\n", "# Add random reflection and noise augmentations based on chance.", "\n", "add_horizontal_reflection", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", ")", "\n", "if", "add_horizontal_reflection", ">", "0.5", ":", "\n", "            ", "new_keypoints", "=", "reflect_points", "(", "new_keypoints", ",", "0", ",", "1", ",", "-", "FRAME_HEIGHT_TOP", "//", "2", ")", "\n", "\n", "", "add_vertical_reflection", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", ")", "\n", "if", "add_vertical_reflection", ">", "0.5", ":", "\n", "            ", "new_keypoints", "=", "reflect_points", "(", "new_keypoints", ",", "1", ",", "0", ",", "-", "FRAME_WIDTH_TOP", "//", "2", ")", "\n", "\n", "", "add_noise_shift", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", ")", "\n", "if", "add_noise_shift", ">", "0.75", ":", "\n", "            ", "new_keypoints", "=", "add_gaussian_noise", "(", "new_keypoints", ")", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.augmentations.augmentation_functions.AllRandomAugmentations.plot": [[50, 53], ["None"], "methods", ["None"], ["new_keypoints", "=", "add_relative_shift", "(", "new_keypoints", ")", "\n", "\n", "# 2, seq_len, 7, 2", "\n", "", "new_keypoints", "=", "new_keypoints", ".", "transpose", "(", "(", "1", ",", "0", ",", "2", ",", "3", ")", ")", ".", "reshape", "(", "(", "-", "1", ",", "2", ",", "14", ")", ")", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.augmentations.augmentation_functions.add_gaussian_noise": [[70, 74], ["numpy.random.normal"], "function", ["None"], ["", "", "def", "add_gaussian_noise", "(", "points", ",", "mu", "=", "0", ",", "sigma", "=", "2", ")", ":", "\n", "# Add Gaussian noise", "\n", "    ", "noise", "=", "np", ".", "random", ".", "normal", "(", "mu", ",", "sigma", ",", "points", ".", "shape", ")", "\n", "return", "points", "+", "noise", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.augmentations.augmentation_functions.add_relative_shift": [[76, 93], ["numpy.random.randint", "min", "min", "min", "min", "numpy.random.uniform", "numpy.random.uniform", "numpy.amax", "numpy.amin", "numpy.amax", "numpy.amin"], "function", ["None"], ["", "def", "add_relative_shift", "(", "points", ",", "shift_range", "=", "20", ")", ":", "\n", "# Add small shift between mice", "\n", "    ", "rand_ind", "=", "np", ".", "random", ".", "randint", "(", "2", ")", "\n", "\n", "\n", "max_horizontal_shift", "=", "min", "(", "np", ".", "amax", "(", "FRAME_WIDTH_TOP", "-", "points", "[", "rand_ind", ",", ":", ",", ":", ",", "0", "]", ")", ",", "shift_range", ")", "\n", "min_horizontal_shift", "=", "min", "(", "np", ".", "amin", "(", "points", "[", "rand_ind", ",", ":", ",", ":", ",", "0", "]", ")", ",", "shift_range", ")", "\n", "max_vertical_shift", "=", "min", "(", "np", ".", "amax", "(", "FRAME_HEIGHT_TOP", "-", "points", "[", "rand_ind", ",", ":", ",", ":", ",", "1", "]", ")", ",", "shift_range", ")", "\n", "min_vertical_shift", "=", "min", "(", "np", ".", "amin", "(", "points", "[", "rand_ind", ",", ":", ",", ":", ",", "1", "]", ")", ",", "shift_range", ")", "\n", "\n", "horizontal_shift", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "-", "1", "*", "min_horizontal_shift", ",", "high", "=", "max_horizontal_shift", ")", "\n", "vertical_shift", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "-", "1", "*", "min_vertical_shift", ",", "high", "=", "max_vertical_shift", ")", "\n", "\n", "points", "[", "rand_ind", ",", ":", ",", ":", ",", "0", "]", "=", "points", "[", "rand_ind", ",", ":", ",", ":", ",", "0", "]", "+", "horizontal_shift", "\n", "points", "[", "rand_ind", ",", ":", ",", ":", ",", "1", "]", "=", "points", "[", "rand_ind", ",", ":", ",", ":", ",", "1", "]", "+", "vertical_shift", "\n", "\n", "return", "points", "\n", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.augmentations.augmentation_functions.add_rotation_translation": [[55, 115], ["points.copy", "numpy.random.uniform", "numpy.array", "numpy.matmul().transpose", "numpy.matmul().transpose", "numpy.amax", "numpy.amin", "numpy.amax", "numpy.amin", "numpy.amin", "numpy.amin", "numpy.amin", "numpy.amin", "numpy.random.uniform", "numpy.random.uniform", "numpy.matmul", "numpy.matmul", "numpy.matmul().transpose", "numpy.cos", "numpy.sin", "numpy.cos", "points[].transpose", "points[].transpose", "numpy.amax", "numpy.amin", "numpy.amax", "numpy.amin", "numpy.sin", "numpy.matmul"], "function", ["None"], ["# reshape", "\n", "new_keypoints", "=", "new_keypoints", ".", "reshape", "(", "(", "seq_len", ",", "2", ",", "7", ",", "2", ")", ")", "\n", "new_states", ",", "_", ",", "_", "=", "transform_to_svd_components", "(", "\n", "new_keypoints", ",", "center_index", "=", "3", ",", "n_components", "=", "self", ".", "svd_computer", ".", "n_components", ",", "\n", "svd_computer", "=", "self", ".", "svd_computer", ",", "mean", "=", "self", ".", "mean", ")", "\n", "\n", "new_states", "=", "torch", ".", "from_numpy", "(", "new_states", ")", ".", "to", "(", "states", ".", "device", ")", ".", "float", "(", ")", "\n", "return", "new_states", ",", "new_states", "[", "1", ":", "]", "-", "new_states", "[", ":", "-", "1", "]", "\n", "\n", "\n", "\n", "", "def", "plot", "(", "self", ",", "ax", ",", "states", ")", ":", "\n", "\n", "        ", "return", "ax", "\n", "\n", "", "", "def", "add_gaussian_noise", "(", "points", ",", "mu", "=", "0", ",", "sigma", "=", "2", ")", ":", "\n", "# Add Gaussian noise", "\n", "    ", "noise", "=", "np", ".", "random", ".", "normal", "(", "mu", ",", "sigma", ",", "points", ".", "shape", ")", "\n", "return", "points", "+", "noise", "\n", "\n", "\n", "", "def", "add_relative_shift", "(", "points", ",", "shift_range", "=", "20", ")", ":", "\n", "# Add small shift between mice", "\n", "    ", "rand_ind", "=", "np", ".", "random", ".", "randint", "(", "2", ")", "\n", "\n", "\n", "max_horizontal_shift", "=", "min", "(", "np", ".", "amax", "(", "FRAME_WIDTH_TOP", "-", "points", "[", "rand_ind", ",", ":", ",", ":", ",", "0", "]", ")", ",", "shift_range", ")", "\n", "min_horizontal_shift", "=", "min", "(", "np", ".", "amin", "(", "points", "[", "rand_ind", ",", ":", ",", ":", ",", "0", "]", ")", ",", "shift_range", ")", "\n", "max_vertical_shift", "=", "min", "(", "np", ".", "amax", "(", "FRAME_HEIGHT_TOP", "-", "points", "[", "rand_ind", ",", ":", ",", ":", ",", "1", "]", ")", ",", "shift_range", ")", "\n", "min_vertical_shift", "=", "min", "(", "np", ".", "amin", "(", "points", "[", "rand_ind", ",", ":", ",", ":", ",", "1", "]", ")", ",", "shift_range", ")", "\n", "\n", "horizontal_shift", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "-", "1", "*", "min_horizontal_shift", ",", "high", "=", "max_horizontal_shift", ")", "\n", "vertical_shift", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "-", "1", "*", "min_vertical_shift", ",", "high", "=", "max_vertical_shift", ")", "\n", "\n", "points", "[", "rand_ind", ",", ":", ",", ":", ",", "0", "]", "=", "points", "[", "rand_ind", ",", ":", ",", ":", ",", "0", "]", "+", "horizontal_shift", "\n", "points", "[", "rand_ind", ",", ":", ",", ":", ",", "1", "]", "=", "points", "[", "rand_ind", ",", ":", ",", ":", ",", "1", "]", "+", "vertical_shift", "\n", "\n", "return", "points", "\n", "\n", "", "def", "add_rotation_translation", "(", "points", ",", "rotation_range", "=", "np", ".", "pi", ",", "translation_range", "=", "500", ")", ":", "\n", "\n", "    ", "original", "=", "points", ".", "copy", "(", ")", "\n", "\n", "image_center", "=", "[", "FRAME_WIDTH_TOP", "/", "2", ",", "FRAME_HEIGHT_TOP", "/", "2", "]", "\n", "\n", "mouse_rotation", "=", "np", ".", "repeat", "(", "np", ".", "random", ".", "uniform", "(", "low", "=", "-", "1", "*", "rotation_range", ",", "high", "=", "rotation_range", ")", ",", "points", ".", "shape", "[", "1", "]", ")", "\n", "R", "=", "(", "np", ".", "array", "(", "[", "[", "np", ".", "cos", "(", "mouse_rotation", ")", ",", "-", "np", ".", "sin", "(", "mouse_rotation", ")", "]", ",", "\n", "[", "np", ".", "sin", "(", "mouse_rotation", ")", ",", "np", ".", "cos", "(", "mouse_rotation", ")", "]", "]", ")", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", ")", "\n", "\n", "points", "[", "0", "]", "=", "np", ".", "matmul", "(", "R", ",", "(", "points", "[", "0", "]", "-", "image_center", ")", ".", "transpose", "(", "0", ",", "2", ",", "1", ")", ")", ".", "transpose", "(", "0", ",", "2", ",", "1", ")", "+", "image_center", "\n", "points", "[", "1", "]", "=", "np", ".", "matmul", "(", "R", ",", "(", "points", "[", "1", "]", "-", "image_center", ")", ".", "transpose", "(", "0", ",", "2", ",", "1", ")", ")", ".", "transpose", "(", "0", ",", "2", ",", "1", ")", "+", "image_center", "\n", "\n", "# Check if possible for trajectory to fit within borders", "\n", "bounded", "=", "(", "(", "np", ".", "amax", "(", "points", "[", ":", ",", ":", ",", ":", ",", "0", "]", ")", "-", "np", ".", "amin", "(", "points", "[", ":", ",", ":", ",", ":", ",", "0", "]", ")", ")", "<", "FRAME_WIDTH_TOP", ")", "and", "(", "(", "np", ".", "amax", "(", "points", "[", ":", ",", ":", ",", ":", ",", "1", "]", ")", "-", "np", ".", "amin", "(", "points", "[", ":", ",", ":", ",", ":", ",", "1", "]", ")", ")", "<", "FRAME_HEIGHT_TOP", ")", "\n", "\n", "if", "bounded", ":", "\n", "# Shift all points to within borders first", "\n", "        ", "horizontal_shift", "=", "np", ".", "amax", "(", "points", "[", ":", ",", ":", ",", ":", ",", "0", "]", "-", "FRAME_WIDTH_TOP", ")", "\n", "horizontal_shift_2", "=", "np", ".", "amin", "(", "points", "[", ":", ",", ":", ",", ":", ",", "0", "]", ")", "\n", "if", "horizontal_shift", ">", "0", ":", "\n", "            ", "points", "[", ":", ",", ":", ",", ":", ",", "0", "]", "=", "points", "[", ":", ",", ":", ",", ":", ",", "0", "]", "-", "horizontal_shift", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.augmentations.augmentation_functions.reflect_points": [[117, 179], ["numpy.zeros", "numpy.sqrt", "numpy.arctan2", "numpy.arctan2", "numpy.sin", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.arctan2", "numpy.arctan2", "numpy.sin", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where"], "function", ["None"], ["            ", "points", "[", ":", ",", ":", ",", ":", ",", "0", "]", "=", "points", "[", ":", ",", ":", ",", ":", ",", "0", "]", "-", "horizontal_shift_2", "\n", "\n", "", "vertical_shift", "=", "np", ".", "amax", "(", "points", "[", ":", ",", ":", ",", ":", ",", "1", "]", "-", "FRAME_HEIGHT_TOP", ")", "\n", "vertical_shift_2", "=", "np", ".", "amin", "(", "points", "[", ":", ",", ":", ",", ":", ",", "1", "]", ")", "\n", "if", "vertical_shift", ">", "0", ":", "\n", "            ", "points", "[", ":", ",", ":", ",", ":", ",", "1", "]", "=", "points", "[", ":", ",", ":", ",", ":", ",", "1", "]", "-", "vertical_shift", "\n", "", "if", "vertical_shift_2", "<", "0", ":", "\n", "            ", "points", "[", ":", ",", ":", ",", ":", ",", "1", "]", "=", "points", "[", ":", ",", ":", ",", ":", ",", "1", "]", "-", "vertical_shift_2", "\n", "\n", "\n", "", "max_horizontal_shift", "=", "np", ".", "amin", "(", "FRAME_WIDTH_TOP", "-", "points", "[", ":", ",", ":", ",", ":", ",", "0", "]", ")", "\n", "min_horizontal_shift", "=", "np", ".", "amin", "(", "points", "[", ":", ",", ":", ",", ":", ",", "0", "]", ")", "\n", "max_vertical_shift", "=", "np", ".", "amin", "(", "FRAME_HEIGHT_TOP", "-", "points", "[", ":", ",", ":", ",", ":", ",", "1", "]", ")", "\n", "min_vertical_shift", "=", "np", ".", "amin", "(", "points", "[", ":", ",", ":", ",", ":", ",", "1", "]", ")", "\n", "horizontal_shift", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "-", "1", "*", "min_horizontal_shift", ",", "high", "=", "max_horizontal_shift", ")", "\n", "vertical_shift", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "-", "1", "*", "min_vertical_shift", ",", "high", "=", "max_vertical_shift", ")", "\n", "\n", "points", "[", ":", ",", ":", ",", ":", ",", "0", "]", "=", "points", "[", ":", ",", ":", ",", ":", ",", "0", "]", "+", "horizontal_shift", "\n", "points", "[", ":", ",", ":", ",", ":", ",", "1", "]", "=", "points", "[", ":", ",", ":", ",", ":", ",", "1", "]", "+", "vertical_shift", "\n", "\n", "return", "points", "\n", "", "else", ":", "\n", "        ", "return", "original", "\n", "\n", "", "", "def", "reflect_points", "(", "points", ",", "A", ",", "B", ",", "C", ")", ":", "\n", "# A * x + B * y + C = 0", "\n", "    ", "new_points", "=", "np", ".", "zeros", "(", "points", ".", "shape", ")", "\n", "\n", "M", "=", "np", ".", "sqrt", "(", "A", "*", "A", "+", "B", "*", "B", ")", "\n", "A", "=", "A", "/", "M", "\n", "B", "=", "B", "/", "M", "\n", "C", "=", "C", "/", "M", "\n", "\n", "D", "=", "A", "*", "points", "[", ":", ",", ":", ",", ":", ",", "0", "]", "+", "B", "*", "points", "[", ":", ",", ":", ",", ":", ",", "1", "]", "+", "C", "\n", "\n", "new_points", "[", ":", ",", ":", ",", ":", ",", "0", "]", "=", "points", "[", ":", ",", ":", ",", ":", ",", "0", "]", "-", "2", "*", "A", "*", "D", "\n", "new_points", "[", ":", ",", ":", ",", ":", ",", "1", "]", "=", "points", "[", ":", ",", ":", ",", ":", ",", "1", "]", "-", "2", "*", "B", "*", "D", "\n", "\n", "return", "new_points", "\n", "", ""]], "home.repos.pwc.inspect_result.neuroethology_TREBA.augmentations.augmentation_functions.normalize": [[181, 207], ["numpy.zeros", "int", "int"], "function", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.augmentations.augmentation_functions.unnormalize": [[210, 237], ["numpy.zeros", "int", "int"], "function", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.FlyV1Dataset.__init__": [[52, 54], ["util.datasets.TrajectoryDataset.__init__"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.__init__"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.FlyV1Dataset._load_data": [[55, 73], ["util.logging.LogEntry", "core.FlyV1Dataset._load_and_preprocess", "core.FlyV1Dataset._load_and_preprocess"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.FlyV1Dataset._load_and_preprocess", "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.FlyV1Dataset._load_and_preprocess"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.FlyV1Dataset._load_and_preprocess": [[74, 102], ["os.path.join", "numpy.load", "len", "core.normalize", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.normalize"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.FlyV1Dataset.compute_and_log_metrics": [[103, 125], ["core.FlyV1Dataset.log.reset", "unnormalize.detach().numpy", "numpy.array", "numpy.sum", "core.unnormalize", "core.normalize", "numpy.array", "numpy.sum", "unnormalize.detach", "numpy.sum", "numpy.sum", "numpy.absolute", "numpy.absolute"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.reset", "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.unnormalize", "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.normalize"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.FlyV1Dataset.save": [[126, 192], ["unnormalize.detach().numpy", "range", "os.path.exists", "os.makedirs", "core.unnormalize", "len", "os.path.join", "range", "matplotlib.figure", "matplotlib.figure", "matplotlib.imshow", "matplotlib.imshow", "matplotlib.animation.FuncAnimation", "matplotlib.animation.FuncAnimation", "matplotlib.animation.FuncAnimation.save", "matplotlib.close", "matplotlib.close", "unnormalize.detach", "os.path.exists", "os.makedirs", "core._set_figax", "core.plot_fly", "core.plot_fly", "ax.set_title", "matplotlib.tight_layout", "matplotlib.tight_layout", "numpy.fromstring", "image.reshape.reshape.reshape", "image_list.append", "matplotlib.close", "matplotlib.close", "matplotlib.imshow.set_array", "os.path.join", "len", "matplotlib.savefig", "matplotlib.savefig", "matplotlib.savefig", "matplotlib.savefig", "matplotlib.figure.canvas.tostring_rgb", "os.path.join", "os.path.join", "matplotlib.figure.canvas.get_width_height"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.unnormalize", "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.FlyV1Dataset.save", "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core._set_figax", "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.plot_fly", "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.plot_fly"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.FlyV1Dataset.save_augmented": [[193, 268], ["unnormalize.detach().numpy", "unnormalize.detach().numpy", "numpy.zeros", "range", "os.path.exists", "os.makedirs", "core.unnormalize", "core.unnormalize", "len", "range", "matplotlib.figure", "matplotlib.figure", "matplotlib.imshow", "matplotlib.imshow", "matplotlib.animation.FuncAnimation", "matplotlib.animation.FuncAnimation", "matplotlib.animation.FuncAnimation.save", "matplotlib.close", "matplotlib.close", "unnormalize.detach", "unnormalize.detach", "matplotlib.subplots", "matplotlib.subplots", "ax1.imshow", "ax1.get_xaxis().set_visible", "ax1.get_yaxis().set_visible", "ax2.imshow", "ax2.get_xaxis().set_visible", "ax2.get_yaxis().set_visible", "core.plot_fly", "core.plot_fly", "core.plot_fly", "core.plot_fly", "matplotlib.figure.suptitle", "ax1.axis", "ax2.axis", "matplotlib.tight_layout", "matplotlib.tight_layout", "matplotlib.figure.canvas.draw", "numpy.fromstring", "image.reshape.reshape.reshape", "image_list.append", "matplotlib.close", "matplotlib.close", "matplotlib.imshow.set_array", "os.path.join", "matplotlib.figure.canvas.tostring_rgb", "ax1.get_xaxis", "ax1.get_yaxis", "ax2.get_xaxis", "ax2.get_yaxis", "matplotlib.figure.canvas.get_width_height"], "methods", ["home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.unnormalize", "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.unnormalize", "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.FlyV1Dataset.save", "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.plot_fly", "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.plot_fly", "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.plot_fly", "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.plot_fly"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.normalize": [[270, 294], ["int", "int"], "function", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.unnormalize": [[296, 320], ["int", "int"], "function", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core._set_figax": [[322, 336], ["matplotlib.figure", "numpy.zeros", "plt.figure.add_subplot", "fig.add_subplot.imshow", "fig.add_subplot.get_xaxis().set_visible", "fig.add_subplot.get_yaxis().set_visible", "fig.add_subplot.get_xaxis", "fig.add_subplot.get_yaxis"], "function", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_v1.core.plot_fly": [[338, 371], ["ax.plot", "ax.plot", "ax.plot", "ax.plot", "ax.plot", "ax.plot", "ax.plot", "ax.plot", "ax.plot"], "function", ["home.repos.pwc.inspect_result.neuroethology_TREBA.augmentations.augmentation_functions.AllRandomAugmentations.plot", "home.repos.pwc.inspect_result.neuroethology_TREBA.augmentations.augmentation_functions.AllRandomAugmentations.plot", "home.repos.pwc.inspect_result.neuroethology_TREBA.augmentations.augmentation_functions.AllRandomAugmentations.plot", "home.repos.pwc.inspect_result.neuroethology_TREBA.augmentations.augmentation_functions.AllRandomAugmentations.plot", "home.repos.pwc.inspect_result.neuroethology_TREBA.augmentations.augmentation_functions.AllRandomAugmentations.plot", "home.repos.pwc.inspect_result.neuroethology_TREBA.augmentations.augmentation_functions.AllRandomAugmentations.plot", "home.repos.pwc.inspect_result.neuroethology_TREBA.augmentations.augmentation_functions.AllRandomAugmentations.plot", "home.repos.pwc.inspect_result.neuroethology_TREBA.augmentations.augmentation_functions.AllRandomAugmentations.plot", "home.repos.pwc.inspect_result.neuroethology_TREBA.augmentations.augmentation_functions.AllRandomAugmentations.plot"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.__init__": [[6, 16], ["isinstance", "isinstance"], "methods", ["None"], ["        ", "super", "(", "Distribution", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "", "def", "sample", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n", "", "def", "log_prob", "(", "self", ",", "value", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "", "", ""]], "home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.__repr__": [[17, 19], ["str"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.__str__": [[20, 42], ["core.LogEntry._losses.items", "core.LogEntry._metrics.items", "sum", "len", "len", "len", "core.LogEntry._losses.values"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.losses": [[43, 46], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.metrics": [[47, 50], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.clear": [[51, 54], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.reset": [[55, 60], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.add_loss": [[61, 64], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.add_metric": [[65, 68], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.itemize": [[69, 77], ["core.LogEntry._losses.items", "core.LogEntry._metrics.items", "isinstance", "isinstance", "value.item", "value.item"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.absorb": [[78, 92], ["isinstance", "other_log.losses.items", "other_log.metrics.items"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.average": [[93, 99], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.logging.core.LogEntry.to_dict": [[100, 102], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_classification.fly_classification_script.timeStamped": [[55, 57], ["datetime.datetime.now().strftime().format", "datetime.datetime.now().strftime", "datetime.datetime.now"], "function", ["None"], ["def", "timeStamped", "(", "fname", ",", "fmt", "=", "'%Y-%m-%d-%H-%M-%S_{fname}'", ")", ":", "\n", "    ", "return", "datetime", ".", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "fmt", ")", ".", "format", "(", "fname", "=", "fname", ")", "\n", "", "log_file", "=", "open", "(", "log_file_name", ",", "\"a\"", ")", "\n"]], "home.repos.pwc.inspect_result.neuroethology_TREBA.fly_classification.fly_classification_script.load_data_splits": [[69, 72], ["numpy.load"], "function", ["None"], ["def", "load_data_splits", "(", "filename", ",", "feature_key", ")", ":", "\n", "    ", "all_data", "=", "np", ".", "load", "(", "filename", ",", "allow_pickle", "=", "True", ")", "\n", "return", "all_data", "[", "feature_key", "]", ",", "all_data", "[", "'annotations'", "]", "\n", "\n"]]}