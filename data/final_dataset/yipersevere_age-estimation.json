{"home.repos.pwc.inspect_result.yipersevere_age-estimation.None.main.parse_loss_weight": [[18, 22], ["opts.args"], "function", ["None"], ["def", "parse_loss_weight", "(", "args", ")", ":", "\n", "\n", "    ", "folder_sub_name", "=", "\"_\"", "+", "args", ".", "model", "+", "\"_\"", "+", "args", ".", "classification_loss", "\n", "return", "folder_sub_name", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.None.main.main": [[24, 123], ["kwargs.items", "main.parse_loss_weight", "datetime.datetime.now", "datetime.datetime.now.strftime", "os.path.join", "os.makedirs", "print", "utils.helper_2.LOG", "tensorboardX.SummaryWriter", "data_load.cvpr_16_chalearn_dataloader.get_cvpr_age_data", "utils.utils_1.get_model", "torch.SGD", "torch.CrossEntropyLoss", "torch.optim.lr_scheduler.ReduceLROnPlateau", "torch.optim.lr_scheduler.ReduceLROnPlateau", "torch.optim.lr_scheduler.ReduceLROnPlateau", "utils.helper_2.LOG", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "range", "tensorboardX.SummaryWriter.close", "utils.helper_2.LOG", "utils.helper_2.LOG", "utils.helper_2.LOG", "opts.args.__setattr__", "filter", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "model.cuda.cuda", "age_cls_criterion.cuda.cuda", "train_valid.train_valid.train_valid", "utils.helper_2.log_variables_to_board", "train_valid.train_valid.train_valid", "utils.helper_2.log_variables_to_board", "utils.helper_2.LOG", "epochs_train_lr.append", "tensorboardX.SummaryWriter.add_scalar", "utils.helper_2.LOG", "utils.helper_2.LOG", "torch.optim.lr_scheduler.ReduceLROnPlateau.step", "model.cuda.parameters", "utils.helper.save_checkpoint", "model.cuda.state_dict", "optim.SGD.state_dict"], "function", ["home.repos.pwc.inspect_result.yipersevere_age-estimation.None.main.parse_loss_weight", "home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.helper_2.LOG", "home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.cvpr_16_chalearn_dataloader.get_cvpr_age_data", "home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.utils_1.get_model", "home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.helper_2.LOG", "home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.helper_2.LOG", "home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.helper_2.LOG", "home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.helper_2.LOG", "home.repos.pwc.inspect_result.yipersevere_age-estimation.train_valid.train_valid.train_valid", "home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.helper_2.log_variables_to_board", "home.repos.pwc.inspect_result.yipersevere_age-estimation.train_valid.train_valid.train_valid", "home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.helper_2.log_variables_to_board", "home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.helper_2.LOG", "home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.helper_2.LOG", "home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.helper_2.LOG", "home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.helper.save_checkpoint"], ["", "def", "main", "(", "**", "kwargs", ")", ":", "\n", "    ", "global", "args", "\n", "for", "arg", ",", "v", "in", "kwargs", ".", "items", "(", ")", ":", "\n", "        ", "args", ".", "__setattr__", "(", "arg", ",", "v", ")", "\n", "\n", "# parse loss weight to sub folder name", "\n", "", "args", ".", "folder_sub_name", "=", "parse_loss_weight", "(", "args", ")", "\n", "\n", "timestamp", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "\n", "ts_str", "=", "timestamp", ".", "strftime", "(", "'%Y-%m-%d-%H-%M-%S'", ")", "\n", "\n", "path", "=", "\"./results\"", "+", "os", ".", "sep", "+", "args", ".", "model", "+", "\"_\"", "+", "args", ".", "dataset", "+", "os", ".", "sep", "+", "args", ".", "folder_sub_name", "+", "os", ".", "sep", "+", "ts_str", "\n", "\n", "tensorboard_folder", "=", "os", ".", "path", ".", "join", "(", "path", ",", "\"Graph\"", ")", "\n", "os", ".", "makedirs", "(", "path", ")", "\n", "print", "(", "\"path: \"", ",", "path", ")", "\n", "\n", "global", "logFile", "\n", "logFile", "=", "path", "+", "os", ".", "sep", "+", "\"log.txt\"", "\n", "LOG", "(", "args", ",", "logFile", ")", "\n", "\n", "global", "writer", "\n", "writer", "=", "SummaryWriter", "(", "tensorboard_folder", ")", "\n", "age_train_loader", ",", "age_test_loader", "=", "get_cvpr_age_data", "(", "args", ")", "\n", "model", "=", "get_model", "(", "args", ",", "logFile", ")", "\n", "\n", "optimizer", "=", "optim", ".", "SGD", "(", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "model", ".", "parameters", "(", ")", ")", ",", "\n", "momentum", "=", "0.9", ",", "lr", "=", "args", ".", "lr_rate", ",", "weight_decay", "=", "args", ".", "weight_decay", ")", "\n", "\n", "age_cls_criterion", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "optimizer", ",", "mode", "=", "'min'", ",", "threshold", "=", "1e-5", ",", "patience", "=", "10", ")", "\n", "\n", "LOG", "(", "model", ",", "logFile", ")", "\n", "\n", "use_gpu", "=", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "if", "use_gpu", ":", "\n", "        ", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "model", "=", "model", ".", "cuda", "(", ")", "\n", "age_cls_criterion", "=", "age_cls_criterion", ".", "cuda", "(", ")", "\n", "\n", "", "epochs_train_total_loss", ",", "epochs_valid_total_loss", "=", "[", "]", ",", "[", "]", "\n", "epochs_train_age_cls_loss", ",", "epochs_valid_age_cls_loss", "=", "[", "]", ",", "[", "]", "\n", "epochs_train_age_rgs_mae_loss", ",", "epochs_valid_age_rgs_mae_loss", "=", "[", "]", ",", "[", "]", "\n", "\n", "epochs_train_lr", "=", "[", "]", "\n", "\n", "lowest_loss", "=", "100000", "\n", "\n", "columns", "=", "[", "'Timstamp'", ",", "'Epoch'", ",", "'lr'", ",", "\n", "'train_total_loss'", ",", "'train_age_cls_loss'", ",", "'train_age_l1_mae_loss'", ",", "\n", "'val_total_loss'", ",", "'val_age_cls_loss'", ",", "'val_age_l1_mae_loss'", "]", "\n", "\n", "# csv_checkpoint = pd.DataFrame(data=[], columns=columns)", "\n", "\n", "for", "epoch", "in", "range", "(", "0", ",", "args", ".", "epoch", ")", ":", "\n", "\n", "        ", "train_losses", ",", "lr", ",", "model", "=", "train_valid", "(", "model", ",", "[", "age_train_loader", "]", ",", "\n", "[", "age_cls_criterion", "]", ",", "\n", "optimizer", ",", "epoch", ",", "logFile", ",", "args", ",", "\"train\"", ")", "\n", "\n", "log_variables_to_board", "(", "[", "epochs_train_total_loss", ",", "epochs_train_age_cls_loss", ",", "epochs_train_age_rgs_mae_loss", "]", ",", "\n", "train_losses", ",", "\n", "[", "'train_total_loss'", ",", "'train_age_cls_loss'", ",", "'train_age_mae_loss'", "]", ",", "\n", "\"Train\"", ",", "tensorboard_folder", ",", "epoch", ",", "logFile", ",", "writer", ")", "\n", "\n", "val_losses", ",", "lr", ",", "model", "=", "train_valid", "(", "model", ",", "[", "age_test_loader", "]", ",", "\n", "[", "age_cls_criterion", "]", ",", "\n", "optimizer", ",", "epoch", ",", "logFile", ",", "args", ",", "\"valid\"", ")", "\n", "\n", "log_variables_to_board", "(", "[", "epochs_valid_total_loss", ",", "epochs_valid_age_cls_loss", ",", "epochs_valid_age_rgs_mae_loss", "]", ",", "\n", "val_losses", ",", "\n", "[", "'val_total_loss'", ",", "'val_age_cls_loss'", ",", "'val_age_l1_mae_loss'", "]", ",", "\n", "\"Valid\"", ",", "tensorboard_folder", ",", "epoch", ",", "logFile", ",", "writer", ")", "\n", "\n", "LOG", "(", "\"\\n\"", ",", "logFile", ")", "\n", "\n", "epochs_train_lr", ".", "append", "(", "lr", ")", "\n", "writer", ".", "add_scalar", "(", "tensorboard_folder", "+", "os", ".", "sep", "+", "'lr'", ",", "lr", ",", "epoch", ")", "\n", "message", "=", "'\\n\\nEpoch: {}/{}: '", ".", "format", "(", "epoch", "+", "1", ",", "args", ".", "epoch", ")", "\n", "LOG", "(", "message", ",", "logFile", ")", "\n", "LOG", "(", "args", ",", "logFile", ")", "\n", "\n", "scheduler", ".", "step", "(", "val_losses", "[", "-", "1", "]", ")", "\n", "if", "lowest_loss", ">", "val_losses", "[", "-", "1", "]", ":", "\n", "            ", "lowest_loss", "=", "val_losses", "[", "-", "1", "]", "\n", "\n", "save_checkpoint", "(", "{", "\n", "'epoch'", ":", "epoch", ",", "\n", "'model'", ":", "args", ".", "model", ",", "\n", "'state_dict'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'lowest_loss'", ":", "lowest_loss", ",", "\n", "'optimizer'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "}", ",", "path", ")", "\n", "\n", "", "", "writer", ".", "close", "(", ")", "\n", "LOG", "(", "\"done\"", ",", "logFile", ")", "\n", "LOG", "(", "args", ",", "logFile", ")", "\n", "LOG", "(", "path", ",", "logFile", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.helper_2.LOG": [[5, 12], ["datetime.datetime.now().strftime", "print", "open", "fp.write", "datetime.datetime.now"], "function", ["None"], ["def", "LOG", "(", "message", ",", "log_file", ")", ":", "\n", "    ", "ts", "=", "datetime", ".", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "\"%d.%m.%Y %H:%M:%S\"", ")", "\n", "msg", "=", "\"[%s] %s\"", "%", "(", "ts", ",", "message", ")", "\n", "\n", "with", "open", "(", "log_file", ",", "\"a\"", ")", "as", "fp", ":", "\n", "        ", "fp", ".", "write", "(", "msg", "+", "\"\\n\"", ")", "\n", "", "print", "(", "msg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.helper_2.log_variables_to_board": [[14, 20], ["zip", "e_loss.append", "writer.add_scalar"], "function", ["None"], ["", "def", "log_variables_to_board", "(", "epoch_losses", ",", "losses", ",", "losses_name", ",", "phrase", ",", "folder", ",", "epoch", ",", "log_file", ",", "writer", ")", ":", "\n", "# global writer", "\n", "# LOG(phrase + \" epoch    \" + str(epoch+1) + \":\", log_file)", "\n", "    ", "for", "e_loss", ",", "l", ",", "l_n", "in", "zip", "(", "epoch_losses", ",", "losses", ",", "losses_name", ")", ":", "\n", "        ", "e_loss", ".", "append", "(", "l", ")", "\n", "writer", ".", "add_scalar", "(", "folder", "+", "os", ".", "sep", "+", "\"data\"", "+", "os", ".", "sep", "+", "l_n", ",", "l", ",", "epoch", ")", "\n", "# LOG(\"          \" + l_n + \": \"+ str(l), log_file)", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.helper_2.save_csv_logging": [[25, 39], ["csv_checkpoint.to_csv", "str", "helper_2.LOG", "len", "datetime.datetime.now"], "function", ["home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.helper_2.LOG"], ["", "", "def", "save_csv_logging", "(", "csv_checkpoint", ",", "epoch", ",", "lr", ",", "losses", ",", "val_losses", ",", "total_loss", ",", "total_val_loss", ",", "csv_path", ",", "log_file", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "csv_checkpoint", ".", "loc", "[", "len", "(", "csv_checkpoint", ")", "]", "=", "[", "str", "(", "datetime", ".", "datetime", ".", "now", "(", ")", ")", ",", "epoch", ",", "lr", ",", "\n", "losses", "[", "0", "]", ",", "losses", "[", "1", "]", ",", "losses", "[", "2", "]", ",", "\n", "val_losses", "[", "0", "]", ",", "val_losses", "[", "1", "]", ",", "val_losses", "[", "2", "]", ",", "\n", "val_losses", "[", "0", "]", ",", "val_losses", "[", "1", "]", ",", "val_losses", "[", "2", "]", ",", "\n", "total_loss", ",", "total_val_loss", "]", "\n", "csv_checkpoint", ".", "to_csv", "(", "csv_path", ",", "index", "=", "False", ")", "\n", "\n", "", "except", ":", "\n", "        ", "LOG", "(", "\"Error when saving csv files! [tip]: Please check csv column names.\"", ",", "log_file", ")", "\n", "\n", "# print(csv_checkpoint.columns)", "\n", "", "return", "csv_checkpoint", "\n", "", ""]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.helper_4.plot_images": [[18, 38], ["matplotlib.subplots", "enumerate", "matplotlib.show", "len", "len", "ax.imshow", "ax.set_xlabel", "ax.set_xticks", "ax.set_yticks"], "function", ["None"], ["def", "plot_images", "(", "images", ",", "cls_true", ",", "name", ")", ":", "\n", "    ", "assert", "len", "(", "images", ")", "==", "len", "(", "cls_true", ")", "==", "36", "\n", "# Create figure with sub-plots.", "\n", "fig", ",", "axes", "=", "plt", ".", "subplots", "(", "6", ",", "6", ")", "\n", "\n", "for", "i", ",", "ax", "in", "enumerate", "(", "axes", ".", "flat", ")", ":", "\n", "# plot the image", "\n", "        ", "ax", ".", "imshow", "(", "images", "[", "i", ",", ":", ",", ":", ",", ":", "]", ",", "interpolation", "=", "'spline16'", ")", "\n", "\n", "# get its equivalent class name", "\n", "if", "name", "==", "'cifar10'", ":", "\n", "            ", "cls_true_name", "=", "CHALEARN2016_LABEL_NAMES", "[", "cls_true", "[", "i", "]", "]", "\n", "", "else", ":", "\n", "            ", "cls_true_name", "=", "CHALEARN2016_LABEL_NAMES", "[", "cls_true", "[", "i", "]", "]", "\n", "\n", "", "xlabel", "=", "\"{0} ({1})\"", ".", "format", "(", "cls_true_name", ",", "cls_true", "[", "i", "]", ")", "\n", "ax", ".", "set_xlabel", "(", "xlabel", ")", "\n", "ax", ".", "set_xticks", "(", "[", "]", ")", "\n", "ax", ".", "set_yticks", "(", "[", "]", ")", "\n", "", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.helper_4.convert_tensor_to_image": [[40, 48], ["img_tensor.cpu().numpy", "np.transpose", "helper_4.plot_images", "img_tensor.cpu"], "function", ["home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.helper_4.plot_images"], ["", "def", "convert_tensor_to_image", "(", "img_tensor", ",", "labels", ")", ":", "\n", "    ", "'''\n    convert tensor to image and show it\n    '''", "\n", "X", "=", "img_tensor", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "X", "=", "np", ".", "transpose", "(", "X", ",", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "\n", "plot_images", "(", "X", ",", "labels", ",", "\"convert_tensor_to_image\"", ")", "\n", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.helper_4.convert_to_onehot_tensor": [[50, 61], ["y.reshape.reshape", "torch.cuda.LongTensor", "torch.cuda.LongTensor.zero_", "torch.cuda.LongTensor.scatter_", "y.reshape.size", "len"], "function", ["None"], ["", "def", "convert_to_onehot_tensor", "(", "y", ",", "nb_digits", ")", ":", "\n", "# y = [1,2,3,4]", "\n", "    ", "y", "=", "y", ".", "reshape", "(", "[", "len", "(", "y", ")", ",", "1", "]", ")", "\n", "# y = [[1],[2],[3],[4]]", "\n", "batch_size", "=", "y", ".", "size", "(", ")", "[", "0", "]", "\n", "y_onehot", "=", "torch", ".", "cuda", ".", "LongTensor", "(", "batch_size", ",", "nb_digits", ")", "\n", "# y_onehot = torch.cuda.FloatTensor(batch_size, nb_digits)", "\n", "y_onehot", ".", "zero_", "(", ")", "\n", "y_onehot", ".", "scatter_", "(", "1", ",", "y", ",", "1", ")", "\n", "\n", "return", "y_onehot", "\n", "", ""]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.helper.save_checkpoint": [[5, 16], ["os.path.join", "os.path.join", "torch.save", "print", "os.path.exists", "os.makedirs"], "function", ["None"], ["def", "save_checkpoint", "(", "state", ",", "savedir", ")", ":", "\n", "\n", "    ", "model_dir", "=", "os", ".", "path", ".", "join", "(", "savedir", ",", "'save_models'", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "model_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "model_dir", ")", "\n", "", "best_filename", "=", "os", ".", "path", ".", "join", "(", "model_dir", ",", "'model_best.pth.tar'", ")", "\n", "torch", ".", "save", "(", "state", ",", "best_filename", ")", "\n", "print", "(", "\"=> saved checkpoint '{}'\"", ".", "format", "(", "best_filename", ")", ")", "\n", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.helper.load_model_weights": [[18, 26], ["torch.load", "initial_model.load_state_dict"], "function", ["None"], ["", "def", "load_model_weights", "(", "initial_model", ",", "checkpoint_path", ")", ":", "\n", "    ", "checkpoint", "=", "torch", ".", "load", "(", "checkpoint_path", ")", "\n", "\n", "initial_model", ".", "load_state_dict", "(", "state_dict", ",", "strict", "=", "True", ")", "\n", "# for k, v in initial_model.parameters():", "\n", "#     print(\"k, v\", k)", "\n", "\n", "return", "initial_model", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.helper.indexes_to_one_hot": [[28, 36], ["indexes.type().view.type().view", "torch.zeros().scatter_", "indexes.type().view.type", "int", "torch.zeros", "torch.max", "indexes.type().view.size"], "function", ["None"], ["", "def", "indexes_to_one_hot", "(", "indexes", ",", "n_dims", "=", "None", ")", ":", "\n", "    ", "\"\"\"Converts a vector of indexes to a batch of one-hot vectors. \"\"\"", "\n", "indexes", "=", "indexes", ".", "type", "(", "torch", ".", "int64", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "n_dims", "=", "n_dims", "if", "n_dims", "is", "not", "None", "else", "int", "(", "torch", ".", "max", "(", "indexes", ")", ")", "+", "1", "\n", "one_hots", "=", "torch", ".", "zeros", "(", "indexes", ".", "size", "(", ")", "[", "0", "]", ",", "n_dims", ")", ".", "scatter_", "(", "1", ",", "indexes", ",", "1", ")", "\n", "# one_hots = one_hots.view(*indexes.shape, -1)", "\n", "# print(one_hots)", "\n", "return", "one_hots", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.utils_1.get_model": [[19, 43], ["models.multi_classification_alexnet.MultiClassificationAlexNet", "models.multi_classification_resnet50.MultiClassificationResNet50", "models.multi_classification_vgg16_bn.MultiClassificationVGG16bn", "models.multi_classification_densenet121.MultiClassificationDenseNet121", "models.multi_classification_inception_v3.MultiClassificationInceptionv3"], "function", ["None"], ["def", "get_model", "(", "args", ",", "logFile", ")", ":", "\n", "\n", "    ", "if", "args", ".", "model", "==", "Multi_Classification_AlexNet_model", ":", "\n", "        ", "model", "=", "MultiClassificationAlexNet", "(", "args", ")", "\n", "\n", "# elif args.model == Multi_Classification_MobileNet_V1_model:", "\n", "#     model = MultiClassificationMobileNetv1(args)", "\n", "\n", "", "elif", "args", ".", "model", "==", "Multi_Classification_ResNet50_model", ":", "\n", "        ", "model", "=", "MultiClassificationResNet50", "(", "args", ")", "\n", "\n", "", "elif", "args", ".", "model", "==", "Multi_Classification_VGG16_bn_model", ":", "\n", "        ", "model", "=", "MultiClassificationVGG16bn", "(", "args", ")", "\n", "\n", "", "elif", "args", ".", "model", "==", "Multi_Classification_DenseNet_121_model", ":", "\n", "        ", "model", "=", "MultiClassificationDenseNet121", "(", "args", ")", "\n", "\n", "", "elif", "args", ".", "model", "==", "Multi_Classification_InceptionV3_model", ":", "\n", "        ", "model", "=", "MultiClassificationInceptionv3", "(", "args", ")", "\n", "\n", "", "else", ":", "\n", "        ", "NotImplementedError", "\n", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.helper_3.AverageMeter.__init__": [[8, 10], ["helper_3.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.helper_3.AverageMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.helper_3.AverageMeter.reset": [[11, 16], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.helper_3.AverageMeter.update": [[17, 22], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.helper_3.accuracy": [[24, 49], ["max", "target.type.size", "output.topk", "pred.t.t", "pred.t.eq", "target.type.type", "target.type.view().expand_as", "correct[].view().float().sum", "res.append", "correct[].view().float().sum.mul_", "target.type.type", "target.type.view", "correct[].view().float", "correct[].view"], "function", ["None"], ["", "", "def", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", ")", ")", ":", "\n", "    ", "\"\"\"Computes the precision@k for the specified values of k\"\"\"", "\n", "maxk", "=", "max", "(", "topk", ")", "\n", "batch_size", "=", "target", ".", "size", "(", "0", ")", "\n", "\n", "try", ":", "\n", "        ", "target", "=", "target", ".", "type", "(", "torch", ".", "cuda", ".", "LongTensor", ")", "\n", "\n", "", "except", "ValueError", "as", "identifier", ":", "\n", "        ", "try", ":", "\n", "            ", "target", "=", "target", ".", "type", "(", "torch", ".", "LongTensor", ")", "\n", "", "except", "ValueError", "as", "verr", ":", "\n", "            ", "pass", "\n", "\n", "# print(\"target: \", target)", "\n", "\n", "", "", "_", ",", "pred", "=", "output", ".", "topk", "(", "maxk", ",", "1", ",", "True", ",", "True", ")", "\n", "pred", "=", "pred", ".", "t", "(", ")", "\n", "correct", "=", "pred", ".", "eq", "(", "target", ".", "view", "(", "1", ",", "-", "1", ")", ".", "expand_as", "(", "pred", ")", ")", "\n", "\n", "res", "=", "[", "]", "\n", "for", "k", "in", "topk", ":", "\n", "        ", "correct_k", "=", "correct", "[", ":", "k", "]", ".", "view", "(", "-", "1", ")", ".", "float", "(", ")", ".", "sum", "(", "0", ")", "\n", "res", ".", "append", "(", "correct_k", ".", "mul_", "(", "100.0", "/", "batch_size", ")", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.helper_3.calculate_age_loss": [[51, 73], ["torch.max", "pred_age.view().cpu().numpy.view().cpu().numpy", "torch.FloatTensor", "pred_ages.cuda.cuda", "torch.autograd.Variable.cuda", "numpy.reshape", "torch.autograd.Variable.type", "torch.autograd.Variable", "age_criterion", "pred_ages.cuda.append", "pred_age.view().cpu().numpy.view().cpu", "len", "pred_age.view().cpu().numpy.view"], "function", ["None"], ["", "def", "calculate_age_loss", "(", "age_criterion", ",", "age_out", ",", "age_label", ")", ":", "\n", "# age_label format is: [0,7,6,2] with batch_size = 4", "\n", "    ", "_", ",", "pred_age", "=", "torch", ".", "max", "(", "age_out", ",", "1", ")", "\n", "pred_age", "=", "pred_age", ".", "view", "(", "-", "1", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "pred_ages", "=", "[", "]", "\n", "for", "p", "in", "pred_age", ":", "\n", "        ", "pred_ages", ".", "append", "(", "[", "p", "]", ")", "\n", "\n", "", "pred_ages", "=", "torch", ".", "FloatTensor", "(", "pred_ages", ")", "\n", "pred_ages", "=", "pred_ages", ".", "cuda", "(", ")", "\n", "\n", "age_label", "=", "age_label", ".", "cuda", "(", ")", "\n", "age_label", "=", "np", ".", "reshape", "(", "age_label", ",", "(", "len", "(", "age_label", ")", ",", "1", ")", ")", "\n", "age_label", "=", "age_label", ".", "type", "(", "torch", ".", "cuda", ".", "FloatTensor", ")", "\n", "age_label", "=", "torch", ".", "autograd", ".", "Variable", "(", "age_label", ")", "\n", "\n", "# print(\"age out: \", pred_ages)", "\n", "# print(\"age label: \", age_label)", "\n", "\n", "age_loss", "=", "age_criterion", "(", "pred_ages", ",", "age_label", ")", "\n", "\n", "return", "age_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.helper_3.set_lr": [[75, 78], ["None"], "function", ["None"], ["", "def", "set_lr", "(", "optimizer", ",", "lr", ")", ":", "\n", "    ", "for", "group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "group", "[", "'lr'", "]", "=", "lr", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.train_valid.age_losses_methods.calculate_epsilon_loss": [[4, 9], ["torch.exp", "torch.pow"], "function", ["None"], ["def", "calculate_epsilon_loss", "(", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "mu", "=", "0", "\n", "sigma", "=", "0", "\n", "epsilon", "=", "1", "-", "torch", ".", "exp", "(", "-", "torch", ".", "pow", "(", "(", "y_pred", "-", "mu", ")", ",", "2", ")", "/", "(", "2", "*", "sigma", "^", "2", ")", ")", "\n", "return", "epsilon", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.train_valid.age_losses_methods.pure_age_l1_loss": [[10, 17], ["None"], "function", ["None"], ["", "def", "pure_age_l1_loss", "(", ")", ":", "\n", "    ", "'''\n    use l1_loss to calcualte age loss, but after many experiments, the result is not good.\n    $M A E=\\frac{1}{N} \\sum_{n=1}^{N}\\left|\\hat{y}_{n}-y_{n}\\right|$\n    '''", "\n", "loss", "=", "0", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.train_valid.age_losses_methods.age_crossentropy_loss": [[18, 21], ["None"], "function", ["None"], ["", "def", "age_crossentropy_loss", "(", "age_out_1", ",", "age_label", ")", ":", "\n", "    ", "loss", "=", "0", "\n", "return", "loss", "", "", ""]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.train_valid.train_valid.age_mae_criterion_encapsulation": [[8, 14], ["torch.max", "torch.max", "pred_ages.type.type", "age_label.type.type", "age_criterion"], "function", ["None"], ["def", "age_mae_criterion_encapsulation", "(", "age_criterion", ",", "age_out_cls", ",", "age_label", ")", ":", "\n", "    ", "_", ",", "pred_ages", "=", "torch", ".", "max", "(", "age_out_cls", ",", "1", ")", "\n", "pred_ages", "=", "pred_ages", ".", "type", "(", "torch", ".", "cuda", ".", "FloatTensor", ")", "\n", "age_label", "=", "age_label", ".", "type", "(", "torch", ".", "cuda", ".", "FloatTensor", ")", "\n", "age_loss_mae", "=", "age_criterion", "(", "pred_ages", ",", "age_label", ")", "\n", "return", "age_loss_mae", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.train_valid.train_valid.age_mapping_function": [[15, 19], ["origin_value.cpu.cpu", "torch.div", "torch.div"], "function", ["None"], ["", "def", "age_mapping_function", "(", "origin_value", ",", "age_divide", ")", ":", "\n", "    ", "origin_value", "=", "origin_value", ".", "cpu", "(", ")", "\n", "y_true_rgs", "=", "torch", ".", "div", "(", "origin_value", ",", "age_divide", ")", "\n", "return", "y_true_rgs", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.train_valid.train_valid.age_cls_criterion_encapsulation": [[20, 37], ["train_valid.age_mapping_function", "mapped_age_label.type.type", "mapped_age_label.type.type", "age_criterion", "print"], "function", ["home.repos.pwc.inspect_result.yipersevere_age-estimation.train_valid.train_valid.age_mapping_function"], ["", "def", "age_cls_criterion_encapsulation", "(", "age_criterion", ",", "age_out_cls", ",", "age_label", ",", "classification_type", ")", ":", "\n", "    ", "if", "classification_type", "==", "\"100_classes\"", ":", "\n", "        ", "age_divide", "=", "1", "\n", "", "elif", "classification_type", "==", "\"20_classes\"", ":", "\n", "        ", "age_divide", "=", "5", "\n", "", "elif", "classification_type", "==", "\"10_classes\"", ":", "\n", "        ", "age_divide", "=", "10", "\n", "", "elif", "classification_type", "==", "\"5_classes\"", ":", "\n", "        ", "age_divide", "=", "20", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"classification type value is wrong\"", ")", "\n", "raise", "ValueError", "\n", "", "mapped_age_label", "=", "age_mapping_function", "(", "age_label", ",", "age_divide", ")", "\n", "mapped_age_label", "=", "mapped_age_label", ".", "type", "(", "torch", ".", "cuda", ".", "FloatTensor", ")", "\n", "mapped_age_label", "=", "mapped_age_label", ".", "type", "(", "torch", ".", "cuda", ".", "LongTensor", ")", "\n", "age_cls_loss", "=", "age_criterion", "(", "age_out_cls", ",", "mapped_age_label", ")", "\n", "return", "age_cls_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.train_valid.train_valid.train_valid": [[38, 122], ["utils.helper_2.LOG", "utils.helper_3.AverageMeter", "utils.helper_3.AverageMeter", "utils.helper_3.AverageMeter", "utils.helper_3.AverageMeter", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "enumerate", "utils.helper_2.LOG", "utils.helper_2.LOG", "utils.helper_2.LOG", "model.train", "age_img.cuda.cuda", "age_label.cuda.cuda", "model", "train_valid.age_mae_criterion_encapsulation", "utils.helper_3.AverageMeter.update", "utils.helper_3.AverageMeter.update", "utils.helper_3.AverageMeter.update", "float", "str", "model.eval", "optimizer.zero_grad", "train_valid.age_cls_criterion_encapsulation", "torch.L1Loss", "age_mae_criterion_encapsulation.item", "age_loss_cls.item", "loss.item", "loss.backward", "optimizer.step", "str", "str", "str", "train_valid.age_cls_criterion_encapsulation", "train_valid.age_cls_criterion_encapsulation", "print", "[].split", "train_valid.age_cls_criterion_encapsulation", "train_valid.age_cls_criterion_encapsulation", "train_valid.age_cls_criterion_encapsulation", "train_valid.age_cls_criterion_encapsulation", "train_valid.age_cls_criterion_encapsulation", "train_valid.age_cls_criterion_encapsulation", "train_valid.age_cls_criterion_encapsulation", "print", "str().split", "str"], "function", ["home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.helper_2.LOG", "home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.helper_2.LOG", "home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.helper_2.LOG", "home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.helper_2.LOG", "home.repos.pwc.inspect_result.yipersevere_age-estimation.train_valid.train_valid.age_mae_criterion_encapsulation", "home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.helper_3.AverageMeter.update", "home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.helper_3.AverageMeter.update", "home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.helper_3.AverageMeter.update", "home.repos.pwc.inspect_result.yipersevere_age-estimation.train_valid.train_valid.age_cls_criterion_encapsulation", "home.repos.pwc.inspect_result.yipersevere_age-estimation.train_valid.train_valid.age_cls_criterion_encapsulation", "home.repos.pwc.inspect_result.yipersevere_age-estimation.train_valid.train_valid.age_cls_criterion_encapsulation", "home.repos.pwc.inspect_result.yipersevere_age-estimation.train_valid.train_valid.age_cls_criterion_encapsulation", "home.repos.pwc.inspect_result.yipersevere_age-estimation.train_valid.train_valid.age_cls_criterion_encapsulation", "home.repos.pwc.inspect_result.yipersevere_age-estimation.train_valid.train_valid.age_cls_criterion_encapsulation", "home.repos.pwc.inspect_result.yipersevere_age-estimation.train_valid.train_valid.age_cls_criterion_encapsulation", "home.repos.pwc.inspect_result.yipersevere_age-estimation.train_valid.train_valid.age_cls_criterion_encapsulation", "home.repos.pwc.inspect_result.yipersevere_age-estimation.train_valid.train_valid.age_cls_criterion_encapsulation", "home.repos.pwc.inspect_result.yipersevere_age-estimation.train_valid.train_valid.age_cls_criterion_encapsulation"], ["", "def", "train_valid", "(", "model", ",", "loader", ",", "criterion", ",", "optimizer", ",", "epoch", ",", "logFile", ",", "args", ",", "pharse", ")", ":", "\n", "    ", "LOG", "(", "\"[\"", "+", "pharse", "+", "\"]: Starting, Epoch: \"", "+", "str", "(", "epoch", ")", ",", "logFile", ")", "\n", "best_age_mae", "=", "99.", "\n", "loss", "=", "0", "\n", "age_cls_epoch_loss", "=", "AverageMeter", "(", ")", "\n", "age_epoch_loss", "=", "AverageMeter", "(", ")", "\n", "age_epoch_mae", "=", "AverageMeter", "(", ")", "\n", "total_loss", "=", "AverageMeter", "(", ")", "\n", "age_epoch_mae_own_list", "=", "[", "]", "\n", "if", "pharse", "==", "\"train\"", ":", "\n", "        ", "model", ".", "train", "(", ")", "\n", "", "elif", "pharse", "==", "\"valid\"", ":", "\n", "        ", "model", ".", "eval", "(", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "# epoch_start_time = time.time()", "\n", "age_cls_criterion", "=", "criterion", "[", "0", "]", "\n", "age_loader", "=", "loader", "[", "0", "]", "\n", "for", "j_batch_idx", ",", "(", "age_img", ",", "age_label", ")", "in", "enumerate", "(", "age_loader", ")", ":", "\n", "        ", "if", "pharse", "==", "\"train\"", ":", "\n", "            ", "optimizer", ".", "zero_grad", "(", ")", "\n", "# age", "\n", "", "age_img", "=", "age_img", ".", "cuda", "(", ")", "\n", "age_label", "=", "age_label", ".", "cuda", "(", ")", "\n", "age_pred_100_classes", ",", "age_pred_20_classes", ",", "age_pred_10_classes", ",", "age_pred_5_classes", "=", "model", "(", "age_img", ")", "\n", "\n", "if", "args", ".", "age_classification_combination", "==", "[", "1", ",", "0", ",", "0", ",", "0", "]", ":", "\n", "            ", "age_loss_cls_100_classes", "=", "age_cls_criterion_encapsulation", "(", "age_cls_criterion", ",", "age_pred_100_classes", ",", "age_label", ",", "\"100_classes\"", ")", "\n", "age_loss_cls", "=", "age_loss_cls_100_classes", "\n", "\n", "", "elif", "args", ".", "age_classification_combination", "==", "[", "1", ",", "1", ",", "0", ",", "0", "]", ":", "\n", "# print(\"age classification combination list [1, 1, 0, 0]\")", "\n", "            ", "age_loss_cls_100_classes", "=", "age_cls_criterion_encapsulation", "(", "age_cls_criterion", ",", "age_pred_100_classes", ",", "age_label", ",", "\"100_classes\"", ")", "\n", "age_loss_cls_20_classes", "=", "age_cls_criterion_encapsulation", "(", "age_cls_criterion", ",", "age_pred_20_classes", ",", "age_label", ",", "\"20_classes\"", ")", "\n", "# print(\"100-classes: \", age_loss_cls_100_classes)", "\n", "# print(\"20-classes: \", age_loss_cls_20_classes)", "\n", "\n", "age_loss_cls", "=", "age_loss_cls_100_classes", "+", "age_loss_cls_20_classes", "\n", "\n", "", "elif", "args", ".", "age_classification_combination", "==", "[", "1", ",", "1", ",", "1", ",", "0", "]", ":", "\n", "            ", "age_loss_cls_100_classes", "=", "age_cls_criterion_encapsulation", "(", "age_cls_criterion", ",", "age_pred_100_classes", ",", "age_label", ",", "\"100_classes\"", ")", "\n", "age_loss_cls_20_classes", "=", "age_cls_criterion_encapsulation", "(", "age_cls_criterion", ",", "age_pred_20_classes", ",", "age_label", ",", "\"20_classes\"", ")", "\n", "age_loss_cls_10_classes", "=", "age_cls_criterion_encapsulation", "(", "age_cls_criterion", ",", "age_pred_10_classes", ",", "age_label", ",", "\"10_classes\"", ")", "\n", "age_loss_cls", "=", "age_loss_cls_100_classes", "+", "age_loss_cls_20_classes", "+", "age_loss_cls_10_classes", "\n", "\n", "", "elif", "args", ".", "age_classification_combination", "==", "[", "1", ",", "1", ",", "1", ",", "1", "]", ":", "\n", "            ", "age_loss_cls_100_classes", "=", "age_cls_criterion_encapsulation", "(", "age_cls_criterion", ",", "age_pred_100_classes", ",", "age_label", ",", "\"100_classes\"", ")", "\n", "age_loss_cls_20_classes", "=", "age_cls_criterion_encapsulation", "(", "age_cls_criterion", ",", "age_pred_20_classes", ",", "age_label", ",", "\"20_classes\"", ")", "\n", "age_loss_cls_10_classes", "=", "age_cls_criterion_encapsulation", "(", "age_cls_criterion", ",", "age_pred_10_classes", ",", "age_label", ",", "\"10_classes\"", ")", "\n", "age_loss_cls_5_classes", "=", "age_cls_criterion_encapsulation", "(", "age_cls_criterion", ",", "age_pred_5_classes", ",", "age_label", ",", "\"5_classes\"", ")", "\n", "age_loss_cls", "=", "age_loss_cls_100_classes", "+", "age_loss_cls_20_classes", "+", "age_loss_cls_10_classes", "+", "age_loss_cls_5_classes", "\n", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"age_divide_100_classes, age_divide_20_classes, age_divide_10_classes, age_divide_5_classes\"", ")", "\n", "raise", "ValueError", "\n", "\n", "# age l1 regrssion to calculate the age MAE value", "\n", "", "age_mae", "=", "age_mae_criterion_encapsulation", "(", "nn", ".", "L1Loss", "(", ")", ",", "age_pred_100_classes", ",", "age_label", ")", "\n", "age_epoch_mae", ".", "update", "(", "age_mae", ".", "item", "(", ")", ",", "1", ")", "\n", "\n", "age_cls_epoch_loss", ".", "update", "(", "age_loss_cls", ".", "item", "(", ")", ",", "1", ")", "\n", "loss", "=", "age_loss_cls", "\n", "total_loss", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "1", ")", "\n", "if", "pharse", "==", "\"train\"", ":", "\n", "            ", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "", "elif", "pharse", "==", "\"valid\"", ":", "\n", "# print(\"valid pharse\")", "\n", "            ", "continue", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"pharse should be in [train, valid]\"", ")", "\n", "raise", "NotImplementedError", "\n", "\n", "", "", "losses", "=", "[", "total_loss", ".", "avg", ",", "age_cls_epoch_loss", ".", "avg", "]", "\n", "LOG", "(", "\"[\"", "+", "pharse", "+", "\"] [Loss  ], [total, cls, l1 ]: \"", "+", "str", "(", "losses", ")", ",", "logFile", ")", "\n", "LOG", "(", "\"[\"", "+", "pharse", "+", "\"] , MAE                  : \"", "+", "str", "(", "age_epoch_mae", ".", "avg", ")", ",", "logFile", ")", "\n", "try", ":", "\n", "        ", "lr", "=", "float", "(", "str", "(", "optimizer", ")", ".", "split", "(", "\"\\n\"", ")", "[", "3", "]", ".", "split", "(", "\" \"", ")", "[", "-", "1", "]", ")", "\n", "", "except", ":", "\n", "        ", "lr", "=", "100", "\n", "", "LOG", "(", "\"lr: \"", "+", "str", "(", "lr", ")", ",", "logFile", ")", "\n", "\n", "return", "losses", ",", "lr", ",", "model", "", "", ""]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.cvpr_16_chalearn_dataset.CVPRAgeLoadDatasetImagefolder.__init__": [[72, 83], ["super().__init__", "cvpr_16_chalearn_dataset.CVPRAgeLoadDatasetImagefolder._find_classes", "cvpr_16_chalearn_dataset.make_dataset"], "methods", ["home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_mobilenet_v2.MultiClassificationMobileNetv2.__init__", "home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.cvpr_16_chalearn_dataset.CVPRAgeLoadDatasetImagefolder._find_classes", "home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.cvpr_16_chalearn_dataset.make_dataset"], ["    ", "def", "__init__", "(", "self", ",", "folder_to_classes", ",", "age_classes", ",", "root", ",", "transform", "=", "None", ",", "target_transform", "=", "None", ")", ":", "\n", "        ", "super", "(", "CVPRAgeLoadDatasetImagefolder", ",", "self", ")", ".", "__init__", "(", "root", ",", "default_loader", ",", "IMG_EXTENSIONS", ")", "\n", "self", ".", "transform", "=", "transform", "\n", "# self.class_to_idx = folder_to_classes", "\n", "# self.classes = age_classes", "\n", "classes", ",", "class_to_idx", "=", "self", ".", "_find_classes", "(", "root", ")", "\n", "samples", "=", "make_dataset", "(", "root", ",", "class_to_idx", ",", "IMG_EXTENSIONS", ")", "\n", "self", ".", "samples", "=", "samples", "\n", "\n", "self", ".", "classes", "=", "classes", "\n", "self", ".", "class_to_idx", "=", "class_to_idx", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.cvpr_16_chalearn_dataset.CVPRAgeLoadDatasetImagefolder._find_classes": [[84, 115], ["classes.sort", "int", "os.scandir", "d.is_dir", "os.listdir", "os.path.isdir", "os.path.join"], "methods", ["None"], ["", "def", "_find_classes", "(", "self", ",", "dir", ")", ":", "\n", "        ", "\"\"\"\n        Finds the class folders in a dataset.\n        Args:\n            dir (string): Root directory path.\n        Returns:\n            tuple: (classes, class_to_idx) where classes are relative to (dir), and class_to_idx is a dictionary.\n        Ensures:\n            No class is a subdirectory of another.\n        \"\"\"", "\n", "if", "sys", ".", "version_info", ">=", "(", "3", ",", "5", ")", ":", "\n", "# Faster and available in Python 3.5 and above", "\n", "            ", "classes", "=", "[", "d", ".", "name", "for", "d", "in", "os", ".", "scandir", "(", "dir", ")", "if", "d", ".", "is_dir", "(", ")", "]", "\n", "# classes = [int(d.name) for d in os.scandir(dir) if d.is_dir()]", "\n", "", "else", ":", "\n", "            ", "classes", "=", "[", "d", "for", "d", "in", "os", ".", "listdir", "(", "dir", ")", "if", "os", ".", "path", ".", "isdir", "(", "os", ".", "path", ".", "join", "(", "dir", ",", "d", ")", ")", "]", "\n", "# classes = [int(d) for d in os.listdir(dir) if os.path.isdir(os.path.join(dir, d))]", "\n", "", "classes", ".", "sort", "(", ")", "\n", "# classes = [str(i) for i in classes]", "\n", "# \u91cd\u5199\u51fd\u6570\u4e4b\u524d\u662f\u8fd9\u6837\u7684", "\n", "# >>> classes.sort()", "\n", "# >>> classes", "\n", "# ['1', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '2', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '3', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '4', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '5', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '6', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '7', '70', '71', '72', '73', '74', '75', '76', '77', '79', '8', '80', '81', '82', '83', '84', '85', '87', '9']", "\n", "# \u91cd\u5199\u51fd\u6570\u4e4b\u540e\u662f\u8fd9\u6837\u7684", "\n", "# >>> classes = [str(i) for i in classes]", "\n", "# >>> classes", "\n", "# ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '79', '80', '81', '82', '83', '84', '85', '87']", "\n", "# >>>", "\n", "# class_to_idx = {classes[i]: i for i in range(len(classes))}", "\n", "class_to_idx", "=", "{", "i", ":", "int", "(", "i", ")", "-", "1", "for", "i", "in", "classes", "}", "\n", "return", "classes", ",", "class_to_idx", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.cvpr_16_chalearn_dataset.pil_loader": [[11, 16], ["open", "PIL.Image.open", "Image.open.convert"], "function", ["None"], ["def", "pil_loader", "(", "path", ")", ":", "\n", "# open path as file to avoid ResourceWarning (https://github.com/python-pillow/Pillow/issues/835)", "\n", "    ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "img", "=", "Image", ".", "open", "(", "f", ")", "\n", "return", "img", ".", "convert", "(", "'RGB'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.cvpr_16_chalearn_dataset.accimage_loader": [[18, 24], ["accimage.Image", "cvpr_16_chalearn_dataset.pil_loader"], "function", ["home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.cvpr_16_chalearn_dataset.pil_loader"], ["", "", "def", "accimage_loader", "(", "path", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "return", "accimage", ".", "Image", "(", "path", ")", "\n", "", "except", "IOError", ":", "\n", "# Potentially a decoding problem, fall back to PIL.Image", "\n", "        ", "return", "pil_loader", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.cvpr_16_chalearn_dataset.default_loader": [[34, 40], ["get_image_backend", "cvpr_16_chalearn_dataset.accimage_loader", "cvpr_16_chalearn_dataset.pil_loader"], "function", ["home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.cvpr_16_chalearn_dataset.accimage_loader", "home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.cvpr_16_chalearn_dataset.pil_loader"], ["", "", "def", "default_loader", "(", "path", ")", ":", "\n", "    ", "from", "torchvision", "import", "get_image_backend", "\n", "if", "get_image_backend", "(", ")", "==", "'accimage'", ":", "\n", "        ", "return", "accimage_loader", "(", "path", ")", "\n", "", "else", ":", "\n", "        ", "return", "pil_loader", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.cvpr_16_chalearn_dataset.has_file_allowed_extension": [[42, 51], ["filename.lower().endswith", "filename.lower"], "function", ["None"], ["", "", "def", "has_file_allowed_extension", "(", "filename", ",", "extensions", ")", ":", "\n", "    ", "\"\"\"Checks if a file is an allowed extension.\n    Args:\n        filename (string): path to a file\n        extensions (tuple of strings): extensions to consider (lowercase)\n    Returns:\n        bool: True if the filename ends with one of given extensions\n    \"\"\"", "\n", "return", "filename", ".", "lower", "(", ")", ".", "endswith", "(", "extensions", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.cvpr_16_chalearn_dataset.make_dataset": [[53, 69], ["os.path.expanduser", "sorted", "class_to_idx.keys", "os.path.join", "sorted", "os.path.isdir", "os.walk", "sorted", "cvpr_16_chalearn_dataset.has_file_allowed_extension", "os.path.join", "images.append"], "function", ["home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.cvpr_16_chalearn_dataset.has_file_allowed_extension"], ["", "def", "make_dataset", "(", "dir", ",", "class_to_idx", ",", "extensions", ")", ":", "\n", "    ", "images", "=", "[", "]", "\n", "dir", "=", "os", ".", "path", ".", "expanduser", "(", "dir", ")", "\n", "for", "target", "in", "sorted", "(", "class_to_idx", ".", "keys", "(", ")", ")", ":", "\n", "        ", "d", "=", "os", ".", "path", ".", "join", "(", "dir", ",", "target", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "d", ")", ":", "\n", "            ", "continue", "\n", "\n", "", "for", "root", ",", "_", ",", "fnames", "in", "sorted", "(", "os", ".", "walk", "(", "d", ")", ")", ":", "\n", "            ", "for", "fname", "in", "sorted", "(", "fnames", ")", ":", "\n", "                ", "if", "has_file_allowed_extension", "(", "fname", ",", "extensions", ")", ":", "\n", "                    ", "path", "=", "os", ".", "path", ".", "join", "(", "root", ",", "fname", ")", "\n", "item", "=", "(", "path", ",", "class_to_idx", "[", "target", "]", ")", "\n", "images", ".", "append", "(", "item", ")", "\n", "\n", "", "", "", "", "return", "images", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.cvpr_16_chalearn_dataloader.cvpr_age_load_dataset": [[41, 64], ["print", "data_load.cvpr_16_chalearn_dataset.CVPRAgeLoadDatasetImagefolder"], "function", ["None"], ["def", "cvpr_age_load_dataset", "(", "data_path", ",", "transforms", ")", ":", "\n", "# # data_path = '/home/yi/Narvi_MLG/AGE_ESTIMATION/CVPR_AGE_5_points/TRAIN/'", "\n", "# train_dataset = torchvision.datasets.ImageFolder(", "\n", "#     root=data_path,", "\n", "#     transform=transforms", "\n", "# )", "\n", "    ", "print", "(", "\"data_path: \"", ",", "data_path", ")", "\n", "folder_to_classes", "=", "FOLDER_2_CLASSES", "\n", "age_classes", "=", "AGE_CLASSES", "\n", "\n", "train_dataset", "=", "CVPRAgeLoadDatasetImagefolder", "(", "folder_to_classes", ",", "age_classes", ",", "\n", "root", "=", "data_path", ",", "\n", "transform", "=", "transforms", ")", "\n", "# train_dataset = CVPE_AGE_load_dataset_ImageFolder_class(root=data_path, transform=transforms)", "\n", "# # # CVPR_AGE_5_POINT, train dataset has 87 classes; validation has 88 classes", "\n", "# # train_dataset.class_to_idx = {'1': 0, '2': 1, '3': 2, '4': 3, '5': 4, '6': 5, '7': 6, '8': 7, '9': 8, '10': 9, '11': 10, '12': 11, '13': 12, '14': 13, '15': 14, '16': 15, '17': 16, '18': 17, '19': 18, '20': 19, '21': 20, '22': 21, '23': 22, '24': 23, '25': 24, '26': 25, '27': 26, '28': 27, '29': 28, '30': 29, '31': 30, '32': 31, '33': 32, '34': 33, '35': 34, '36': 35, '37': 36, '38': 37, '39': 38, '40': 39, '41': 40, '42': 41, '43': 42, '44': 43, '45': 44, '46': 45, '47': 46, '48': 47, '49': 48, '50': 49, '51': 50, '52': 51, '53': 52, '54': 53, '55': 54, '56': 55, '57': 56, '58': 57, '59': 58, '60': 59, '61': 60, '62': 61, '63': 62, '64': 63, '65': 64, '66': 65, '67': 66, '68': 67, '69': 68, '70': 69, '71': 70, '72': 71, '73': 72, '74': 73, '75': 74, '76': 75, '77': 76, '78': 77, '79': 78, '80': 79, '81': 80, '82': 81, '83': 82, '84': 83, '85': 84, '86': 85, '87': 86, '88':87}", "\n", "# train_loader = torch.utils.data.DataLoader(", "\n", "#     train_dataset,", "\n", "#     batch_size=64,", "\n", "#     num_workers=0,", "\n", "#     shuffle=True", "\n", "# )", "\n", "return", "train_dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.cvpr_16_chalearn_dataloader.dataset_augmentation_sampler": [[66, 71], ["torch.utils.data.RandomSampler"], "function", ["None"], ["", "def", "dataset_augmentation_sampler", "(", "origin_dataset", ",", "target_num_samples", ")", ":", "\n", "# randomSampler to increase the number of dataset into the target_num_samples", "\n", "    ", "augmentation_sampler", "=", "RandomSampler", "(", "origin_dataset", ",", "replacement", "=", "True", ",", "num_samples", "=", "target_num_samples", ")", "\n", "\n", "return", "augmentation_sampler", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.cvpr_16_chalearn_dataloader.get_cvpr_age_data": [[73, 158], ["print", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "cvpr_16_chalearn_dataloader.cvpr_age_load_dataset", "cvpr_16_chalearn_dataloader.cvpr_age_load_dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "iter", "cvpr_16_chalearn_dataloader.cvpr_age_load_dataset", "cvpr_16_chalearn_dataloader.cvpr_age_load_dataset", "print", "images.numpy", "numpy.transpose", "utils.helper_4.plot_images", "torchvision.transforms.RandomCrop", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.Resize", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.Resize", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "cvpr_16_chalearn_dataloader.dataset_augmentation_sampler", "cvpr_16_chalearn_dataloader.dataset_augmentation_sampler"], "function", ["home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.cvpr_16_chalearn_dataloader.cvpr_age_load_dataset", "home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.cvpr_16_chalearn_dataloader.cvpr_age_load_dataset", "home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.cvpr_16_chalearn_dataloader.cvpr_age_load_dataset", "home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.cvpr_16_chalearn_dataloader.cvpr_age_load_dataset", "home.repos.pwc.inspect_result.yipersevere_age-estimation.utils.helper_4.plot_images", "home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.cvpr_16_chalearn_dataloader.dataset_augmentation_sampler", "home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.cvpr_16_chalearn_dataloader.dataset_augmentation_sampler"], ["", "def", "get_cvpr_age_data", "(", "args", ",", "show_sample", "=", "False", ")", ":", "\n", "# augment = True", "\n", "    ", "augment", "=", "False", "\n", "\n", "resize", "=", "224", "\n", "if", "args", ".", "model", "==", "\"Multi_loss_InceptionV3\"", ":", "\n", "        ", "resize", "=", "299", "\n", "print", "(", "\"Inception V3: \"", ",", "resize", ",", "\" image size\"", ")", "\n", "\n", "", "if", "augment", "==", "True", ":", "\n", "\n", "        ", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomCrop", "(", "resize", ",", "padding", "=", "4", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "Resize", "(", "resize", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "]", ")", "\n", "\n", "", "else", ":", "\n", "        ", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "resize", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "]", ")", "\n", "", "if", "args", ".", "working_machine", "==", "THINKSTATION", ":", "\n", "# tut thinkstation", "\n", "\n", "        ", "age_train_dataset", "=", "cvpr_age_load_dataset", "(", "AGE_TRAIN_DATASET_THINKSTATION", ",", "transform", ")", "\n", "age_test_dataset", "=", "cvpr_age_load_dataset", "(", "AGE_TEST_DATASET_THINKSTATION", ",", "transform", ")", "\n", "# age train set images: 3707; test image: 1356", "\n", "\n", "", "elif", "args", ".", "working_machine", "==", "NARVI", ":", "\n", "# Narvi", "\n", "        ", "age_train_dataset", "=", "cvpr_age_load_dataset", "(", "AGE_TRAIN_DATASET_NARVI", ",", "transform", ")", "\n", "age_test_dataset", "=", "cvpr_age_load_dataset", "(", "AGE_TEST_DATASET_NARVI", ",", "transform", ")", "\n", "# age train set images: 3707; test image: 1356", "\n", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"working machine should be  [thinkstation, Narvi]\"", ")", "\n", "NotImplementedError", "\n", "\n", "", "resampling", "=", "False", "\n", "\n", "if", "resampling", "==", "False", ":", "\n", "        ", "age_train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "age_train_dataset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "shuffle", "=", "True", ",", "num_workers", "=", "args", ".", "loading_jobs", ")", "\n", "\n", "age_test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "age_test_dataset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "shuffle", "=", "True", ",", "num_workers", "=", "args", ".", "loading_jobs", ")", "\n", "\n", "", "else", ":", "\n", "        ", "age_train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "age_train_dataset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "shuffle", "=", "False", ",", "num_workers", "=", "args", ".", "loading_jobs", ",", "\n", "sampler", "=", "dataset_augmentation_sampler", "(", "age_train_dataset", ",", "28710", ")", ")", "\n", "\n", "age_test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "age_test_dataset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "shuffle", "=", "False", ",", "num_workers", "=", "args", ".", "loading_jobs", ",", "\n", "sampler", "=", "dataset_augmentation_sampler", "(", "age_test_dataset", ",", "3590", ")", ")", "\n", "\n", "", "show_sample", "=", "False", "\n", "\n", "if", "show_sample", "==", "True", ":", "\n", "        ", "sample_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "age_train_dataset", ",", "\n", "batch_size", "=", "36", ",", "\n", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "args", ".", "loading_jobs", ")", "\n", "\n", "show_sample_times", "=", "0", "\n", "show_sampel_max_times", "=", "5", "\n", "\n", "data_iter", "=", "iter", "(", "sample_loader", ")", "\n", "for", "images", ",", "labels", "in", "data_iter", ":", "\n", "            ", "X", "=", "images", ".", "numpy", "(", ")", "\n", "X", "=", "np", ".", "transpose", "(", "X", ",", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "\n", "plot_images", "(", "X", ",", "labels", ",", "\"Cha_Learn_2016_dataset\"", ")", "\n", "\n", "show_sample_times", "=", "show_sample_times", "+", "1", "\n", "if", "show_sample_times", ">", "show_sampel_max_times", ":", "\n", "                ", "break", "\n", "", "else", ":", "\n", "                ", "continue", "\n", "\n", "# model_dataloader", "\n", "", "", "", "return", "[", "age_train_loader", ",", "age_test_loader", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.cvpr_16_chalearn_dataloader.load_chalearn_dataset": [[164, 189], ["torchvision.transforms.Compose", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "AGE_ImageFolder", "os.path.join", "torchvision.transforms.RandomSizedCrop", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.RandomCrop", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.RandomCrop", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "max"], "function", ["None"], ["", "def", "load_chalearn_dataset", "(", "data_dir", ",", "resize", "=", "(", "224", ",", "224", ")", ")", ":", "\n", "    ", "data_transforms", "=", "{", "\n", "'TRAIN'", ":", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomSizedCrop", "(", "max", "(", "resize", ")", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "]", ")", ",", "\n", "'VALID'", ":", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomCrop", "(", "224", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "]", ")", ",", "\n", "'TEST'", ":", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomCrop", "(", "224", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "]", ")", "\n", "\n", "}", "\n", "dsets", "=", "{", "x", ":", "AGE_ImageFolder", "(", "os", ".", "path", ".", "join", "(", "data_dir", ",", "x", ")", ",", "data_transforms", "[", "x", "]", ")", "for", "x", "in", "[", "'TRAIN'", ",", "'VALID'", ",", "'TEST'", "]", "}", "\n", "\n", "return", "dsets", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.cvpr_16_chalearn_dataloader.getstd": [[191, 201], ["open", "enumerate", "line.split", "float"], "function", ["None"], ["", "def", "getstd", "(", "csv_path", ")", ":", "\n", "    ", "std_output", "=", "{", "}", "\n", "for", "ann_file", "in", "[", "csv_path", "]", ":", "\n", "        ", "with", "open", "(", "ann_file", ",", "\"r\"", ")", "as", "fp", ":", "\n", "            ", "for", "k", ",", "line", "in", "enumerate", "(", "fp", ")", ":", "\n", "                ", "if", "k", "==", "0", ":", "# skip header", "\n", "                    ", "continue", "\n", "", "name", ",", "age", ",", "std", "=", "line", ".", "split", "(", "\",\"", ")", "\n", "std_output", "[", "name", "]", "=", "float", "(", "std", ")", "\n", "", "", "", "return", "std_output", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.cvpr_16_chalearn_dataloader.load_raw_chalearn_age_dataset": [[203, 218], ["cvpr_16_chalearn_dataloader.getstd", "cvpr_16_chalearn_dataloader.getstd"], "function", ["home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.cvpr_16_chalearn_dataloader.getstd", "home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.cvpr_16_chalearn_dataloader.getstd"], ["", "def", "load_raw_chalearn_age_dataset", "(", ")", ":", "\n", "# load cvpr age dataset", "\n", "    ", "age_folder", "=", "RAW_CHALEARN_AGE_DATASET_AGE_FOLDER", "\n", "age_valid_folder", "=", "RAW_CHALEARN_AGE_DATASET_AGE_FOLDER_VALID", "\n", "age_train_folder", "=", "RAW_CHALEARN_AGE_DATASET_AGE_FOLDER_TRAIN", "\n", "age_test_folder", "=", "age_folder", "+", "os", ".", "sep", "+", "\"test_data/test\"", "\n", "\n", "age_csv_train_file", "=", "age_folder", "+", "os", ".", "sep", "+", "'training_data/train_gt.csv'", "\n", "age_csv_valid_file", "=", "age_folder", "+", "os", ".", "sep", "+", "'validation_data/valid_gt.csv'", "\n", "age_csv_test_file", "=", "age_folder", "+", "os", ".", "sep", "+", "'test_data/test_gt.csv'", "\n", "\n", "STD_VALID", "=", "getstd", "(", "age_csv_valid_file", ")", "\n", "STD_TEST", "=", "getstd", "(", "age_csv_test_file", ")", "\n", "\n", "return", "age_train_folder", ",", "age_valid_folder", ",", "age_test_folder", ",", "age_csv_train_file", ",", "age_csv_valid_file", ",", "age_csv_test_file", "\n", "", ""]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.imdb_wiki_dataloader.FaceDataset.__init__": [[83, 102], ["float", "int", "print", "imdb_wiki_dataloader.FaceDataset.GaussianProb", "imdb_wiki_dataloader.FaceDataset.ZeroOneProb", "glob.glob", "range", "range", "len"], "methods", ["home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.imdb_wiki_dataloader.FaceDataset.GaussianProb", "home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.imdb_wiki_dataloader.FaceDataset.ZeroOneProb"], ["def", "__init__", "(", "self", ",", "datapath", ",", "transformer", ")", ":", "\n", "        ", "\"\"\"\n    init function\n    :param datapath: datapath to aligned folder  \n    :param transformer: image transformer\n    \"\"\"", "\n", "if", "datapath", "[", "-", "1", "]", "!=", "'/'", ":", "\n", "            ", "print", "(", "\"[WARNING] PARAM: datapath SHOULD END WITH '/'\"", ")", "\n", "datapath", "+=", "'/'", "\n", "", "self", ".", "datapath", "=", "datapath", "\n", "self", ".", "pics", "=", "[", "f", "[", "len", "(", "datapath", ")", ":", "]", "for", "f", "in", "\n", "glob", ".", "glob", "(", "datapath", "+", "\"*.jpg\"", ")", "]", "\n", "self", ".", "transformer", "=", "transformer", "\n", "self", ".", "age_divde", "=", "float", "(", "10", ")", "\n", "self", ".", "AGE_CLS_UNIT", "=", "int", "(", "AGE_CLS_UNIT", ")", "\n", "\n", "# \u3000\u8fd9\u91cc\u5c06\u6570\u636e\u8f6c\u5316\u7ef4\u6807\u51c6\u7684\u6b63\u592a\u5206\u5e03", "\n", "self", ".", "age_cls", "=", "{", "x", ":", "self", ".", "GaussianProb", "(", "x", ")", "for", "x", "in", "range", "(", "1", ",", "self", ".", "AGE_CLS_UNIT", "+", "1", ")", "}", "\n", "self", ".", "age_cls_zeroone", "=", "{", "x", ":", "self", ".", "ZeroOneProb", "(", "x", ")", "for", "x", "in", "range", "(", "1", ",", "self", ".", "AGE_CLS_UNIT", "+", "1", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.imdb_wiki_dataloader.FaceDataset.__len__": [[103, 105], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "pics", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.imdb_wiki_dataloader.FaceDataset.GaussianProb": [[107, 111], ["numpy.array", "range", "numpy.exp", "probs.max", "numpy.square"], "methods", ["None"], ["", "def", "GaussianProb", "(", "self", ",", "true", ",", "var", "=", "2.5", ")", ":", "\n", "        ", "x", "=", "np", ".", "array", "(", "range", "(", "1", ",", "self", ".", "AGE_CLS_UNIT", "+", "1", ")", ",", "dtype", "=", "'float'", ")", "\n", "probs", "=", "np", ".", "exp", "(", "-", "np", ".", "square", "(", "x", "-", "true", ")", "/", "(", "2", "*", "var", "**", "2", ")", ")", "/", "(", "var", "*", "(", "2", "*", "np", ".", "pi", "**", ".5", ")", ")", "\n", "return", "probs", "/", "probs", ".", "max", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.imdb_wiki_dataloader.FaceDataset.ZeroOneProb": [[112, 116], ["numpy.zeros"], "methods", ["None"], ["", "def", "ZeroOneProb", "(", "self", ",", "true", ")", ":", "\n", "        ", "x", "=", "np", ".", "zeros", "(", "shape", "=", "(", "self", ".", "AGE_CLS_UNIT", ",", ")", ")", "\n", "x", "[", "true", "-", "1", "]", "=", "1", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.imdb_wiki_dataloader.FaceDataset.__getitem__": [[117, 194], ["skimage.io.imread", "max", "float", "torch.from_numpy", "gender.type.type.type", "torch.from_numpy", "age_rgs_label.type.type.type", "torch.tensor", "age_cls_label.type.type.type", "len", "numpy.repeat", "re.findall", "min", "imdb_wiki_dataloader.FaceDataset.transformer", "torch.from_numpy", "numpy.array", "numpy.array", "int", "float", "float", "torchvision.transforms.ToPILImage"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "\"\"\"\n    get images and labels\n    :param idx: image index \n    :return: image: transformed image, gender: torch.LongTensor, age: torch.FloatTensor\n    \"\"\"", "\n", "# read image and labels", "\n", "img_name", "=", "self", ".", "datapath", "+", "self", ".", "pics", "[", "idx", "]", "\n", "img", "=", "io", ".", "imread", "(", "img_name", ")", "\n", "if", "len", "(", "img", ".", "shape", ")", "==", "2", ":", "# gray image", "\n", "            ", "img", "=", "np", ".", "repeat", "(", "img", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", ",", "3", ",", "axis", "=", "2", ")", "\n", "# \u89e3\u6790\u4e0b\uff0c\u56fe\u7247\u540d\u79f0\u4e3a\uff1a7_0_DakotaFanning2614.jpg\uff0c\u3000\u5176\u4e2d\uff0c\u3000\uff17\u4ee3\u8868 \u5e74\u9f84\uff0c\uff10\u3000\u4ee3\u8868\u6027\u522b\u5973", "\n", "", "(", "age", ",", "gender", ")", "=", "re", ".", "findall", "(", "r\"([^_]*)_([^_]*)_[^_]*.jpg\"", ",", "self", ".", "pics", "[", "idx", "]", ")", "[", "0", "]", "\n", "age", "=", "max", "(", "1.", ",", "min", "(", "float", "(", "age", ")", ",", "float", "(", "self", ".", "AGE_CLS_UNIT", ")", ")", ")", "\n", "\n", "# preprcess images", "\n", "if", "self", ".", "transformer", ":", "\n", "            ", "img", "=", "transforms", ".", "ToPILImage", "(", ")", "(", "img", ")", "\n", "image", "=", "self", ".", "transformer", "(", "img", ")", "\n", "", "else", ":", "\n", "            ", "image", "=", "torch", ".", "from_numpy", "(", "img", ")", "\n", "\n", "# preprocess labels", "\n", "", "gender", "=", "float", "(", "gender", ")", "\n", "gender", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "[", "gender", "]", ",", "dtype", "=", "'float'", ")", ")", "\n", "gender", "=", "gender", ".", "type", "(", "torch", ".", "LongTensor", ")", "\n", "\n", "# through the age_divide, convert the age from [0, 100] to [0, 10], age/ 10 = age_regression", "\n", "\n", "age_rgs_label", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "[", "age", "/", "self", ".", "age_divde", "]", ",", "dtype", "=", "'float'", ")", ")", "\n", "age_rgs_label", "=", "age_rgs_label", ".", "type", "(", "torch", ".", "FloatTensor", ")", "\n", "\n", "# \u8fd9\u91cc\u7684age_cls_label \u5e76\u4e0d\u662f\u4e00\u4e2a single label, \u800c\u662f\u4e00\u4e2a\u6570\u7ec4, \u4e0b\u9762\u662f\u6253\u5370\u51fa\u6765", "\n", "# print(image_datasets[\"train\"].age_cls[1])", "\n", "# [1.00000000e+000 9.23116346e-001 7.26149037e-001 4.86752256e-001", "\n", "#  2.78037300e-001 1.35335283e-001 5.61347628e-002 1.98410947e-002", "\n", "#  5.97602290e-003 1.53381068e-003 3.35462628e-004 6.25215038e-005", "\n", "#  9.92950431e-006 1.34381228e-006 1.54975314e-007 1.52299797e-008", "\n", "#  1.27540763e-009 9.10147076e-011 5.53461007e-012 2.86797501e-013", "\n", "#  1.26641655e-014 4.76530474e-016 1.52797997e-017 4.17501006e-019", "\n", "#  9.72098502e-021 1.92874985e-022 3.26102718e-024 4.69835486e-026", "\n", "#  5.76832996e-028 6.03486081e-030 5.38018616e-032 4.08733497e-034", "\n", "#  2.64603779e-036 1.45970379e-038 6.86193048e-041 2.74878501e-043", "\n", "#  9.38313827e-046 2.72940726e-048 6.76552418e-051 1.42905006e-053", "\n", "#  2.57220937e-056 3.94528221e-059 5.15659133e-062 5.74328327e-065", "\n", "#  5.45093048e-068 4.40853133e-071 3.03829615e-074 1.78434636e-077", "\n", "#  8.92978691e-081 3.80816639e-084 1.38389653e-087 4.28552670e-091", "\n", "#  1.13088300e-094 2.54298634e-098 4.87285246e-102 7.95674389e-106", "\n", "#  1.10713449e-109 1.31273862e-113 1.32638325e-117 1.14201729e-121", "\n", "#  8.37894253e-126 5.23864087e-130 2.79100700e-134 1.26711522e-138", "\n", "#  4.90212262e-143 1.61608841e-147 4.54003234e-152 1.08684011e-156", "\n", "#  2.21709986e-161 3.85405344e-166 5.70904011e-171 7.20644934e-176", "\n", "#  7.75161983e-181 7.10520275e-186 5.54974933e-191 3.69388307e-196", "\n", "#  2.09510504e-201 1.01260798e-206 4.17051577e-212 1.46369664e-217", "\n", "#  4.37749104e-223 1.11560985e-228 2.42277060e-234 4.48358217e-240", "\n", "#  7.07051186e-246 9.50144065e-252 1.08803019e-257 1.06170856e-263", "\n", "#  8.82841157e-270 6.25565382e-276 3.77724997e-282 1.94353170e-288", "\n", "#  8.52158565e-295 3.18391952e-301 1.01371677e-307 2.75032531e-314", "\n", "#  6.34874355e-321 0.00000000e+000 0.00000000e+000 0.00000000e+000]", "\n", "# age_cls_label = self.age_cls[int(age)]", "\n", "\n", "# age_cls_label = self.age_cls_zeroone[int(age)]", "\n", "\n", "# age_cls_label = torch.from_numpy(np.array([age_cls_label], dtype='float'))", "\n", "# age_cls_label = age_cls_label.type(torch.FloatTensor)", "\n", "\n", "# the index starts from 0 instead of 1.", "\n", "age", "=", "age", "-", "1", "\n", "\n", "age_cls_label", "=", "torch", ".", "tensor", "(", "int", "(", "age", ")", ")", "\n", "age_cls_label", "=", "age_cls_label", ".", "type", "(", "torch", ".", "LongTensor", ")", "\n", "\n", "# image of shape [256, 256]", "\n", "# gender of shape [,1] and value in {0, 1}", "\n", "# age of shape [,1] and value in [0 ~ 10)", "\n", "# \u8fd9\u91cc\u7684age_rgs_label \u8fd8\u662f\u975e\u5e38\u96be\u751f\u6210\u7684\uff1b\u6ce8\u610f\u770b\u8fd9\u91cc\u4e5f\u7528\u5230\u4e86\u9ad8\u65af\u5206\u5e03\uff0cage_divide, \u8fd9\u91cc\u7684\u6570\u5b66\u539f\u7406\u5176\u5b9e\u6211\u5e76\u6ca1\u6709\u61c2", "\n", "return", "image", ",", "gender", ",", "age_rgs_label", ",", "age_cls_label", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.imdb_wiki_dataloader.load_FGNet_data": [[32, 46], ["sum", "numpy.array"], "function", ["None"], ["def", "load_FGNet_data", "(", ")", ":", "\n", "# fg_net_data_path = \"\"", "\n", "\n", "# distribution of test dataset: FG-NET, len(fg_distr) = 70,", "\n", "# sum(fg_distr) = 376, check the excel table for data visualization", "\n", "    ", "fg_distr", "=", "[", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "9", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "\n", "9", ",", "8", ",", "8", ",", "9", ",", "9", ",", "5", ",", "7", ",", "6", ",", "6", ",", "7", ",", "6", ",", "9", ",", "5", ",", "4", ",", "6", ",", "5", ",", "7", ",", "6", ",", "3", ",", "3", ",", "5", ",", "5", ",", "4", ",", "4", ",", "2", ",", "\n", "3", ",", "5", ",", "2", ",", "2", ",", "2", ",", "3", ",", "2", ",", "3", ",", "3", ",", "2", ",", "2", ",", "2", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "3", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", "]", "\n", "\n", "fg_distr", "[", "AGE_CLS_UNIT_FG_NET", "-", "1", "]", "=", "sum", "(", "fg_distr", "[", "AGE_CLS_UNIT_FG_NET", "-", "1", ":", "]", ")", "\n", "fg_distr", "=", "fg_distr", "[", ":", "AGE_CLS_UNIT_FG_NET", "]", "\n", "fg_distr", "=", "np", ".", "array", "(", "fg_distr", ",", "dtype", "=", "'float'", ")", "+", "1", "\n", "\n", "return", "fg_distr", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.imdb_wiki_dataloader.image_transformer": [[214, 231], ["torchvision.transforms.Compose", "torchvision.transforms.Compose", "torchvision.transforms.RandomCrop", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.Resize", "torchvision.transforms.CenterCrop", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize"], "function", ["None"], ["", "", "def", "image_transformer", "(", ")", ":", "\n", "    ", "\"\"\"\n  :return:  A transformer to convert a PIL image to a tensor image\n            ready to feed into a neural network, for IMDB-WIKI cropped Face Images\n  \"\"\"", "\n", "return", "{", "\n", "'train'", ":", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomCrop", "(", "224", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "]", ")", ",", "\n", "'val'", ":", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "256", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "224", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "]", ")", ",", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.imdb_wiki_dataloader.load_IMDB_WIKI_dataset": [[235, 276], ["imdb_wiki_dataloader.image_transformer", "print", "print", "imdb_wiki_dataloader.FaceDataset", "torch.utils.data.DataLoader", "len", "print"], "function", ["home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.imdb_wiki_dataloader.image_transformer"], ["", "def", "load_IMDB_WIKI_dataset", "(", "args", ")", ":", "\n", "    ", "if", "args", ".", "working_machine", "==", "\"thinkstation\"", ":", "\n", "        ", "processed_imdb_wiki_dataset", "=", "PROCESSED_IMDB_WIKI_DATASET_THINKSTATION", "\n", "\n", "# imdb_crop_path = \"/media/yi/harddrive/data/IMDB_only_face/imdb_crop\"", "\n", "# wiki_crop_path = \"/media/yi/harddrive/data/WIKI_only_face/wiki_crop\"", "\n", "\n", "", "elif", "args", ".", "working_machine", "==", "\"Narvi\"", ":", "\n", "        ", "processed_imdb_wiki_dataset", "=", "PROCESSED_IMDB_WIKI_DATASET_NARVI", "\n", "\n", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"working machine should be  [thinkstation, Narvi]\"", ")", "\n", "NotImplementedError", "\n", "\n", "", "transformer", "=", "image_transformer", "(", ")", "\n", "\n", "# image_datasets = {x: FaceDataset(processed_imdb_wiki_dataset + x + '/', transformer[x])", "\n", "#                 for x in ['train', 'val']}", "\n", "\n", "print", "(", "\"[IMDB_WIKI] dataset: start loading...\"", ")", "\n", "image_datasets", "=", "{", "x", ":", "FaceDataset", "(", "processed_imdb_wiki_dataset", "+", "x", "+", "'/'", ",", "transformer", "[", "x", "]", ")", "\n", "for", "x", "in", "[", "'train'", ",", "'val'", "]", "}", "\n", "dataloaders", "=", "{", "x", ":", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "image_datasets", "[", "x", "]", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "args", ".", "num_workers", ")", "for", "x", "in", "[", "'train'", ",", "'val'", "]", "}", "\n", "dataset_sizes", "=", "{", "x", ":", "len", "(", "image_datasets", "[", "x", "]", ")", "for", "x", "in", "[", "'train'", ",", "'val'", "]", "}", "\n", "print", "(", "\"[IMDB_WIKI] load_data: Done! Get {} for train and {} for test!\"", "\n", ".", "format", "(", "dataset_sizes", "[", "'train'", "]", ",", "\n", "dataset_sizes", "[", "'val'", "]", ")", ")", "\n", "# print(\"[IMDB_WIKI] dataset: Done  ...\")", "\n", "\n", "# # train age task", "\n", "# for i, input_data in enumerate(dataloaders[\"val\"]):", "\n", "#     print(\"i: \", i)", "\n", "#     img = input_data[0]", "\n", "#     label = input_data[1]", "\n", "\n", "#     print(\"input_img: \", img)", "\n", "#     print(\"label: \", label)", "\n", "\n", "return", "dataloaders", "[", "\"train\"", "]", ",", "dataloaders", "[", "\"val\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.data_load.fgnet_dataloader.creat_fgnet_val": [[3, 23], ["os.getcwd", "os.chdir", "glob.glob", "os.chdir", "clear_dir", "os.path.exists", "copyfile", "re.findall", "name[].replace().replace().replace", "random.randint", "name[].replace().replace", "name[].replace"], "function", ["None"], ["def", "creat_fgnet_val", "(", "clean", "=", "False", ")", ":", "\n", "    ", "if", "clean", ":", "\n", "        ", "clear_dir", "(", "config", ".", "val", ")", "\n", "", "pwd", "=", "os", ".", "getcwd", "(", ")", "\n", "os", ".", "chdir", "(", "config", ".", "fgnet_raw", ")", "\n", "for", "pic", "in", "glob", ".", "glob", "(", "\"*\"", ")", ":", "\n", "        ", "name", ",", "age", "=", "re", ".", "findall", "(", "r'(\\d)*A(\\d*).*'", ",", "pic", ")", "[", "0", "]", "\n", "newName", "=", "\"{}_1_{}.jpg\"", ".", "format", "(", "age", ",", "\n", "name", "[", "0", "]", "\n", ".", "replace", "(", "' '", ",", "''", ")", "\n", ".", "replace", "(", "'/'", ",", "''", ")", "\n", ".", "replace", "(", "':'", ",", "''", ")", ")", "\n", "# 2.1 check duplicate", "\n", "# 2.1 if duplicate exist, append a random number to it name", "\n", "newNameNoDupli", "=", "newName", "\n", "while", "os", ".", "path", ".", "exists", "(", "config", ".", "labeled", "+", "newNameNoDupli", ")", ":", "\n", "            ", "newNameNoDupli", "=", "\"{}{}{}\"", ".", "format", "(", "newName", "[", ":", "-", "4", "]", ",", "random", ".", "randint", "(", "1", ",", "9999", ")", ",", "newName", "[", "-", "4", ":", "]", ")", "\n", "# 2.2 save as a new file", "\n", "", "copyfile", "(", "config", ".", "fgnet_raw", "+", "pic", ",", "config", ".", "val", "+", "newNameNoDupli", ")", "\n", "", "os", ".", "chdir", "(", "pwd", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_inception_v3.MultiClassificationInceptionv3.__init__": [[5, 34], ["torch.Module.__init__", "multi_classification_inception_v3.MultiClassificationInceptionv3.get_Inception_V3", "multi_classification_inception_v3.MultiClassificationInceptionv3.get_age_cls_class", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.ReLU", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.Dropout", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_mobilenet_v2.MultiClassificationMobileNetv2.__init__", "home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_inception_v3.MultiClassificationInceptionv3.get_Inception_V3", "home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_vgg16_bn.MultiClassificationVGG16bn.get_age_cls_class"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "MultiClassificationInceptionv3", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "Inception_v3_feature", "=", "self", ".", "get_Inception_V3", "(", ")", "\n", "self", ".", "features_length", "=", "2508800", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "age_divide_100_classes", ",", "self", ".", "age_divide_20_classes", ",", "self", ".", "age_divide_10_classes", ",", "self", ".", "age_divide_5_classes", "=", "self", ".", "get_age_cls_class", "(", ")", "\n", "self", ".", "age_clf_100_classes", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "self", ".", "features_length", ",", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.5", ",", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "100", ")", "\n", ")", "\n", "self", ".", "age_clf_20_classes", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "self", ".", "features_length", ",", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.5", ",", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "20", ")", "\n", ")", "\n", "self", ".", "age_clf_10_classes", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "self", ".", "features_length", ",", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.5", ",", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "10", ")", "\n", ")", "\n", "self", ".", "age_clf_5_classes", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "self", ".", "features_length", ",", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.5", ",", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "5", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_inception_v3.MultiClassificationInceptionv3.get_Inception_V3": [[36, 39], ["torch.Sequential", "list", "torchvision.inception_v3().children", "torchvision.inception_v3"], "methods", ["None"], ["", "def", "get_Inception_V3", "(", "self", ")", ":", "\n", "        ", "Inception_v3_feature", "=", "nn", ".", "Sequential", "(", "*", "list", "(", "models", ".", "inception_v3", "(", "pretrained", "=", "False", ",", "aux_logits", "=", "False", ")", ".", "children", "(", ")", ")", "[", ":", "-", "1", "]", ")", "\n", "return", "Inception_v3_feature", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_inception_v3.MultiClassificationInceptionv3.get_age_cls_class": [[40, 70], ["print"], "methods", ["None"], ["", "def", "get_age_cls_class", "(", "self", ")", ":", "\n", "        ", "age_divide_100_classes", "=", "False", "\n", "age_divide_20_classes", "=", "False", "\n", "age_divide_10_classes", "=", "False", "\n", "age_divide_5_classes", "=", "False", "\n", "\n", "if", "self", ".", "args", ".", "age_classification_combination", "==", "[", "1", ",", "0", ",", "0", ",", "0", "]", ":", "\n", "            ", "age_divide_100_classes", "=", "True", "\n", "age_divide_20_classes", "=", "False", "\n", "age_divide_10_classes", "=", "False", "\n", "age_divide_5_classes", "=", "False", "\n", "", "elif", "self", ".", "args", ".", "age_classification_combination", "==", "[", "1", ",", "1", ",", "0", ",", "0", "]", ":", "\n", "            ", "age_divide_100_classes", "=", "True", "\n", "age_divide_20_classes", "=", "True", "\n", "age_divide_10_classes", "=", "False", "\n", "age_divide_5_classes", "=", "False", "\n", "", "elif", "self", ".", "args", ".", "age_classification_combination", "==", "[", "1", ",", "1", ",", "1", ",", "0", "]", ":", "\n", "            ", "age_divide_100_classes", "=", "True", "\n", "age_divide_20_classes", "=", "True", "\n", "age_divide_10_classes", "=", "True", "\n", "age_divide_5_classes", "=", "False", "\n", "", "elif", "self", ".", "args", ".", "age_classification_combination", "==", "[", "1", ",", "1", ",", "1", ",", "1", "]", ":", "\n", "            ", "age_divide_100_classes", "=", "True", "\n", "age_divide_20_classes", "=", "True", "\n", "age_divide_10_classes", "=", "True", "\n", "age_divide_5_classes", "=", "True", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"age_divide_100_classes, age_divide_20_classes, age_divide_10_classes, age_divide_5_classes\"", ")", "\n", "ValueError", "\n", "", "return", "age_divide_100_classes", ",", "age_divide_20_classes", ",", "age_divide_10_classes", ",", "age_divide_5_classes", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_inception_v3.MultiClassificationInceptionv3.forward": [[71, 86], ["multi_classification_inception_v3.MultiClassificationInceptionv3.Inception_v3_feature", "print", "x.view.view.view", "x.view.view.size", "x.view.view.size", "multi_classification_inception_v3.MultiClassificationInceptionv3.age_clf_100_classes", "multi_classification_inception_v3.MultiClassificationInceptionv3.age_clf_20_classes", "multi_classification_inception_v3.MultiClassificationInceptionv3.age_clf_10_classes", "multi_classification_inception_v3.MultiClassificationInceptionv3.age_clf_5_classes"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "Inception_v3_feature", "(", "x", ")", "\n", "print", "(", "x", ".", "size", "(", ")", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "age_pred_100_classes", ",", "age_pred_20_classes", ",", "age_pred_10_classes", ",", "age_pred_5_classes", "=", "None", ",", "None", ",", "None", ",", "None", "\n", "if", "self", ".", "age_divide_100_classes", "==", "True", ":", "\n", "            ", "age_pred_100_classes", "=", "self", ".", "age_clf_100_classes", "(", "x", ")", "\n", "", "if", "self", ".", "age_divide_20_classes", "==", "True", ":", "\n", "            ", "age_pred_20_classes", "=", "self", ".", "age_clf_20_classes", "(", "x", ")", "\n", "", "if", "self", ".", "age_divide_10_classes", "==", "True", ":", "\n", "            ", "age_pred_10_classes", "=", "self", ".", "age_clf_10_classes", "(", "x", ")", "\n", "", "if", "self", ".", "age_divide_5_classes", "==", "True", ":", "\n", "            ", "age_pred_5_classes", "=", "self", ".", "age_clf_5_classes", "(", "x", ")", "\n", "\n", "", "return", "age_pred_100_classes", ",", "age_pred_20_classes", ",", "age_pred_10_classes", ",", "age_pred_5_classes", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_resnet18.MultiClassificationResNet18.__init__": [[7, 37], ["super().__init__", "torchvision.models.resnet18", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "multi_classification_resnet18.MultiClassificationResNet18.get_age_cls_class", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_mobilenet_v2.MultiClassificationMobileNetv2.__init__", "home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_vgg16_bn.MultiClassificationVGG16bn.get_age_cls_class"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "MultiClassificationResNet18", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "resnet", "=", "models", ".", "resnet18", "(", "pretrained", "=", "True", ")", "\n", "self", ".", "use_gpu", "=", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "features_length", "=", "512", "\n", "self", ".", "age_divide_100_classes", ",", "self", ".", "age_divide_20_classes", ",", "self", ".", "age_divide_10_classes", ",", "self", ".", "age_divide_5_classes", "=", "self", ".", "get_age_cls_class", "(", ")", "\n", "self", ".", "age_clf_100_classes", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "self", ".", "features_length", ",", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.5", ",", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "100", ")", "\n", ")", "\n", "self", ".", "age_clf_20_classes", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "self", ".", "features_length", ",", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.5", ",", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "20", ")", "\n", ")", "\n", "self", ".", "age_clf_10_classes", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "self", ".", "features_length", ",", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.5", ",", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "10", ")", "\n", ")", "\n", "self", ".", "age_clf_5_classes", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "self", ".", "features_length", ",", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.5", ",", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "5", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_resnet18.MultiClassificationResNet18.get_resnet_convs_out": [[39, 54], ["multi_classification_resnet18.MultiClassificationResNet18.resnet.conv1", "multi_classification_resnet18.MultiClassificationResNet18.resnet.bn1", "multi_classification_resnet18.MultiClassificationResNet18.resnet.relu", "multi_classification_resnet18.MultiClassificationResNet18.resnet.maxpool", "multi_classification_resnet18.MultiClassificationResNet18.resnet.layer1", "multi_classification_resnet18.MultiClassificationResNet18.resnet.layer2", "multi_classification_resnet18.MultiClassificationResNet18.resnet.layer3", "multi_classification_resnet18.MultiClassificationResNet18.resnet.layer4"], "methods", ["None"], ["", "def", "get_resnet_convs_out", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"\n        get outputs from convolutional layers of ResNet\n        :param x: image input\n        :return: middle ouput from layer2, and final ouput from layer4\n        \"\"\"", "\n", "x", "=", "self", ".", "resnet", ".", "conv1", "(", "x", ")", "# out = [N, 64, 112, 112]", "\n", "x", "=", "self", ".", "resnet", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "resnet", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "resnet", ".", "maxpool", "(", "x", ")", "# out = [N, 64, 56, 56]", "\n", "x", "=", "self", ".", "resnet", ".", "layer1", "(", "x", ")", "# out = [N, 64, 56, 56]", "\n", "x", "=", "self", ".", "resnet", ".", "layer2", "(", "x", ")", "# out = [N, 128, 28, 28]", "\n", "x", "=", "self", ".", "resnet", ".", "layer3", "(", "x", ")", "# out = [N, 256, 14, 14]", "\n", "x", "=", "self", ".", "resnet", ".", "layer4", "(", "x", ")", "# out = [N, 512, 7, 7]", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_resnet18.MultiClassificationResNet18.get_age_cls_class": [[55, 84], ["print"], "methods", ["None"], ["", "def", "get_age_cls_class", "(", "self", ")", ":", "\n", "        ", "age_divide_100_classes", "=", "False", "\n", "age_divide_20_classes", "=", "False", "\n", "age_divide_10_classes", "=", "False", "\n", "age_divide_5_classes", "=", "False", "\n", "if", "self", ".", "args", ".", "age_classification_combination", "==", "[", "1", ",", "0", ",", "0", ",", "0", "]", ":", "\n", "            ", "age_divide_100_classes", "=", "True", "\n", "age_divide_20_classes", "=", "False", "\n", "age_divide_10_classes", "=", "False", "\n", "age_divide_5_classes", "=", "False", "\n", "", "elif", "self", ".", "args", ".", "age_classification_combination", "==", "[", "1", ",", "1", ",", "0", ",", "0", "]", ":", "\n", "            ", "age_divide_100_classes", "=", "True", "\n", "age_divide_20_classes", "=", "True", "\n", "age_divide_10_classes", "=", "False", "\n", "age_divide_5_classes", "=", "False", "\n", "", "elif", "self", ".", "args", ".", "age_classification_combination", "==", "[", "1", ",", "1", ",", "1", ",", "0", "]", ":", "\n", "            ", "age_divide_100_classes", "=", "True", "\n", "age_divide_20_classes", "=", "True", "\n", "age_divide_10_classes", "=", "True", "\n", "age_divide_5_classes", "=", "False", "\n", "", "elif", "self", ".", "args", ".", "age_classification_combination", "==", "[", "1", ",", "1", ",", "1", ",", "1", "]", ":", "\n", "            ", "age_divide_100_classes", "=", "True", "\n", "age_divide_20_classes", "=", "True", "\n", "age_divide_10_classes", "=", "True", "\n", "age_divide_5_classes", "=", "True", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"age_divide_100_classes, age_divide_20_classes, age_divide_10_classes, age_divide_5_classes\"", ")", "\n", "ValueError", "\n", "", "return", "age_divide_100_classes", ",", "age_divide_20_classes", ",", "age_divide_10_classes", ",", "age_divide_5_classes", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_resnet18.MultiClassificationResNet18.forward": [[85, 98], ["multi_classification_resnet18.MultiClassificationResNet18.get_resnet_convs_out", "x.view.view.view", "x.view.view.size", "multi_classification_resnet18.MultiClassificationResNet18.age_clf_100_classes", "multi_classification_resnet18.MultiClassificationResNet18.age_clf_20_classes", "multi_classification_resnet18.MultiClassificationResNet18.age_clf_10_classes", "multi_classification_resnet18.MultiClassificationResNet18.age_clf_5_classes"], "methods", ["home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_resnet18.MultiClassificationResNet18.get_resnet_convs_out"], ["", "def", "forward", "(", "self", ",", "x", ",", "return_atten_info", "=", "False", ")", ":", "\n", "        ", "x", "=", "self", ".", "get_resnet_convs_out", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "age_pred_100_classes", ",", "age_pred_20_classes", ",", "age_pred_10_classes", ",", "age_pred_5_classes", "=", "None", ",", "None", ",", "None", ",", "None", "\n", "if", "self", ".", "age_divide_100_classes", "==", "True", ":", "\n", "            ", "age_pred_100_classes", "=", "self", ".", "age_clf_100_classes", "(", "x", ")", "\n", "", "if", "self", ".", "age_divide_20_classes", "==", "True", ":", "\n", "            ", "age_pred_20_classes", "=", "self", ".", "age_clf_20_classes", "(", "x", ")", "\n", "", "if", "self", ".", "age_divide_10_classes", "==", "True", ":", "\n", "            ", "age_pred_10_classes", "=", "self", ".", "age_clf_10_classes", "(", "x", ")", "\n", "", "if", "self", ".", "age_divide_5_classes", "==", "True", ":", "\n", "            ", "age_pred_5_classes", "=", "self", ".", "age_clf_5_classes", "(", "x", ")", "\n", "", "return", "age_pred_100_classes", ",", "age_pred_20_classes", ",", "age_pred_10_classes", ",", "age_pred_5_classes", "", "", "", ""]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_densenet121.MultiClassificationDenseNet121.__init__": [[6, 35], ["super().__init__", "multi_classification_densenet121.MultiClassificationDenseNet121.get_age_cls_class", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torchvision.models.densenet121", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_mobilenet_v2.MultiClassificationMobileNetv2.__init__", "home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_vgg16_bn.MultiClassificationVGG16bn.get_age_cls_class"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "MultiClassificationDenseNet121", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "densenet121_features", "=", "models", ".", "densenet121", "(", "pretrained", "=", "True", ")", ".", "features", "\n", "self", ".", "features_length", "=", "50176", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "age_divide_100_classes", ",", "self", ".", "age_divide_20_classes", ",", "self", ".", "age_divide_10_classes", ",", "self", ".", "age_divide_5_classes", "=", "self", ".", "get_age_cls_class", "(", ")", "\n", "self", ".", "age_clf_100_classes", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "self", ".", "features_length", ",", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.5", ",", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "100", ")", "\n", ")", "\n", "self", ".", "age_clf_20_classes", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "self", ".", "features_length", ",", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.5", ",", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "20", ")", "\n", ")", "\n", "self", ".", "age_clf_10_classes", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "self", ".", "features_length", ",", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.5", ",", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "10", ")", "\n", ")", "\n", "self", ".", "age_clf_5_classes", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "self", ".", "features_length", ",", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.5", ",", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "5", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_densenet121.MultiClassificationDenseNet121.get_age_cls_class": [[36, 66], ["print"], "methods", ["None"], ["", "def", "get_age_cls_class", "(", "self", ")", ":", "\n", "        ", "age_divide_100_classes", "=", "False", "\n", "age_divide_20_classes", "=", "False", "\n", "age_divide_10_classes", "=", "False", "\n", "age_divide_5_classes", "=", "False", "\n", "\n", "if", "self", ".", "args", ".", "age_classification_combination", "==", "[", "1", ",", "0", ",", "0", ",", "0", "]", ":", "\n", "            ", "age_divide_100_classes", "=", "True", "\n", "age_divide_20_classes", "=", "False", "\n", "age_divide_10_classes", "=", "False", "\n", "age_divide_5_classes", "=", "False", "\n", "", "elif", "self", ".", "args", ".", "age_classification_combination", "==", "[", "1", ",", "1", ",", "0", ",", "0", "]", ":", "\n", "            ", "age_divide_100_classes", "=", "True", "\n", "age_divide_20_classes", "=", "True", "\n", "age_divide_10_classes", "=", "False", "\n", "age_divide_5_classes", "=", "False", "\n", "", "elif", "self", ".", "args", ".", "age_classification_combination", "==", "[", "1", ",", "1", ",", "1", ",", "0", "]", ":", "\n", "            ", "age_divide_100_classes", "=", "True", "\n", "age_divide_20_classes", "=", "True", "\n", "age_divide_10_classes", "=", "True", "\n", "age_divide_5_classes", "=", "False", "\n", "", "elif", "self", ".", "args", ".", "age_classification_combination", "==", "[", "1", ",", "1", ",", "1", ",", "1", "]", ":", "\n", "            ", "age_divide_100_classes", "=", "True", "\n", "age_divide_20_classes", "=", "True", "\n", "age_divide_10_classes", "=", "True", "\n", "age_divide_5_classes", "=", "True", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"age_divide_100_classes, age_divide_20_classes, age_divide_10_classes, age_divide_5_classes\"", ")", "\n", "ValueError", "\n", "", "return", "age_divide_100_classes", ",", "age_divide_20_classes", ",", "age_divide_10_classes", ",", "age_divide_5_classes", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_densenet121.MultiClassificationDenseNet121.forward": [[67, 81], ["multi_classification_densenet121.MultiClassificationDenseNet121.densenet121_features", "x.view.view.view", "x.view.view.size", "multi_classification_densenet121.MultiClassificationDenseNet121.age_clf_100_classes", "multi_classification_densenet121.MultiClassificationDenseNet121.age_clf_20_classes", "multi_classification_densenet121.MultiClassificationDenseNet121.age_clf_10_classes", "multi_classification_densenet121.MultiClassificationDenseNet121.age_clf_5_classes"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "densenet121_features", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "age_pred_100_classes", ",", "age_pred_20_classes", ",", "age_pred_10_classes", ",", "age_pred_5_classes", "=", "None", ",", "None", ",", "None", ",", "None", "\n", "if", "self", ".", "age_divide_100_classes", "==", "True", ":", "\n", "            ", "age_pred_100_classes", "=", "self", ".", "age_clf_100_classes", "(", "x", ")", "\n", "", "if", "self", ".", "age_divide_20_classes", "==", "True", ":", "\n", "            ", "age_pred_20_classes", "=", "self", ".", "age_clf_20_classes", "(", "x", ")", "\n", "", "if", "self", ".", "age_divide_10_classes", "==", "True", ":", "\n", "            ", "age_pred_10_classes", "=", "self", ".", "age_clf_10_classes", "(", "x", ")", "\n", "", "if", "self", ".", "age_divide_5_classes", "==", "True", ":", "\n", "            ", "age_pred_5_classes", "=", "self", ".", "age_clf_5_classes", "(", "x", ")", "\n", "\n", "", "return", "age_pred_100_classes", ",", "age_pred_20_classes", ",", "age_pred_10_classes", ",", "age_pred_5_classes", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_resnet50.MultiClassificationResNet50.__init__": [[7, 49], ["super().__init__", "torchvision.models.resnet50", "torch.Sequential", "torch.Sequential", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "multi_classification_resnet50.MultiClassificationResNet50.get_age_cls_class", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_mobilenet_v2.MultiClassificationMobileNetv2.__init__", "home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_vgg16_bn.MultiClassificationVGG16bn.get_age_cls_class"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "MultiClassificationResNet50", ",", "self", ")", ".", "__init__", "(", ")", "\n", "resnet50_model", "=", "models", ".", "resnet50", "(", "pretrained", "=", "True", ")", "\n", "self", ".", "resnet_50_features", "=", "nn", ".", "Sequential", "(", "\n", "resnet50_model", ".", "conv1", ",", "\n", "resnet50_model", ".", "bn1", ",", "\n", "resnet50_model", ".", "relu", ",", "\n", "resnet50_model", ".", "maxpool", ",", "\n", "resnet50_model", ".", "layer1", ",", "\n", "resnet50_model", ".", "layer2", ",", "\n", "resnet50_model", ".", "layer3", ",", "\n", "resnet50_model", ".", "layer4", ",", "\n", "resnet50_model", ".", "avgpool", "\n", ")", "\n", "self", ".", "features_length", "=", "2048", "\n", "self", ".", "use_gpu", "=", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "self", ".", "args", "=", "args", "\n", "\n", "self", ".", "age_divide_100_classes", ",", "self", ".", "age_divide_20_classes", ",", "self", ".", "age_divide_10_classes", ",", "self", ".", "age_divide_5_classes", "=", "self", ".", "get_age_cls_class", "(", ")", "\n", "self", ".", "age_clf_100_classes", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "self", ".", "features_length", ",", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.5", ",", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "100", ")", "\n", ")", "\n", "self", ".", "age_clf_20_classes", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "self", ".", "features_length", ",", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.5", ",", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "20", ")", "\n", ")", "\n", "self", ".", "age_clf_10_classes", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "self", ".", "features_length", ",", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.5", ",", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "10", ")", "\n", ")", "\n", "self", ".", "age_clf_5_classes", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "self", ".", "features_length", ",", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.5", ",", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "5", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_resnet50.MultiClassificationResNet50.get_age_cls_class": [[51, 80], ["print"], "methods", ["None"], ["", "def", "get_age_cls_class", "(", "self", ")", ":", "\n", "        ", "age_divide_100_classes", "=", "False", "\n", "age_divide_20_classes", "=", "False", "\n", "age_divide_10_classes", "=", "False", "\n", "age_divide_5_classes", "=", "False", "\n", "if", "self", ".", "args", ".", "age_classification_combination", "==", "[", "1", ",", "0", ",", "0", ",", "0", "]", ":", "\n", "            ", "age_divide_100_classes", "=", "True", "\n", "age_divide_20_classes", "=", "False", "\n", "age_divide_10_classes", "=", "False", "\n", "age_divide_5_classes", "=", "False", "\n", "", "elif", "self", ".", "args", ".", "age_classification_combination", "==", "[", "1", ",", "1", ",", "0", ",", "0", "]", ":", "\n", "            ", "age_divide_100_classes", "=", "True", "\n", "age_divide_20_classes", "=", "True", "\n", "age_divide_10_classes", "=", "False", "\n", "age_divide_5_classes", "=", "False", "\n", "", "elif", "self", ".", "args", ".", "age_classification_combination", "==", "[", "1", ",", "1", ",", "1", ",", "0", "]", ":", "\n", "            ", "age_divide_100_classes", "=", "True", "\n", "age_divide_20_classes", "=", "True", "\n", "age_divide_10_classes", "=", "True", "\n", "age_divide_5_classes", "=", "False", "\n", "", "elif", "self", ".", "args", ".", "age_classification_combination", "==", "[", "1", ",", "1", ",", "1", ",", "1", "]", ":", "\n", "            ", "age_divide_100_classes", "=", "True", "\n", "age_divide_20_classes", "=", "True", "\n", "age_divide_10_classes", "=", "True", "\n", "age_divide_5_classes", "=", "True", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"age_divide_100_classes, age_divide_20_classes, age_divide_10_classes, age_divide_5_classes\"", ")", "\n", "ValueError", "\n", "", "return", "age_divide_100_classes", ",", "age_divide_20_classes", ",", "age_divide_10_classes", ",", "age_divide_5_classes", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_resnet50.MultiClassificationResNet50.forward": [[81, 94], ["multi_classification_resnet50.MultiClassificationResNet50.resnet_50_features", "x.view.view.view", "x.view.view.size", "multi_classification_resnet50.MultiClassificationResNet50.age_clf_100_classes", "multi_classification_resnet50.MultiClassificationResNet50.age_clf_20_classes", "multi_classification_resnet50.MultiClassificationResNet50.age_clf_10_classes", "multi_classification_resnet50.MultiClassificationResNet50.age_clf_5_classes"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "resnet_50_features", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "age_pred_100_classes", ",", "age_pred_20_classes", ",", "age_pred_10_classes", ",", "age_pred_5_classes", "=", "None", ",", "None", ",", "None", ",", "None", "\n", "if", "self", ".", "age_divide_100_classes", "==", "True", ":", "\n", "            ", "age_pred_100_classes", "=", "self", ".", "age_clf_100_classes", "(", "x", ")", "\n", "", "if", "self", ".", "age_divide_20_classes", "==", "True", ":", "\n", "            ", "age_pred_20_classes", "=", "self", ".", "age_clf_20_classes", "(", "x", ")", "\n", "", "if", "self", ".", "age_divide_10_classes", "==", "True", ":", "\n", "            ", "age_pred_10_classes", "=", "self", ".", "age_clf_10_classes", "(", "x", ")", "\n", "", "if", "self", ".", "age_divide_5_classes", "==", "True", ":", "\n", "            ", "age_pred_5_classes", "=", "self", ".", "age_clf_5_classes", "(", "x", ")", "\n", "", "return", "age_pred_100_classes", ",", "age_pred_20_classes", ",", "age_pred_10_classes", ",", "age_pred_5_classes", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_alexnet.MultiClassificationAlexNet.__init__": [[5, 35], ["torch.Module.__init__", "multi_classification_alexnet.MultiClassificationAlexNet.get_age_cls_class", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torchvision.models.alexnet", "torch.Linear", "torch.ReLU", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.Dropout", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_mobilenet_v2.MultiClassificationMobileNetv2.__init__", "home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_vgg16_bn.MultiClassificationVGG16bn.get_age_cls_class"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "MultiClassificationAlexNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "multi_classification_AlexNet_features", "=", "models", ".", "alexnet", "(", "pretrained", "=", "True", ")", ".", "features", "\n", "self", ".", "features_length", "=", "9216", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "age_divide_100_classes", ",", "self", ".", "age_divide_20_classes", ",", "self", ".", "age_divide_10_classes", ",", "self", ".", "age_divide_5_classes", "=", "self", ".", "get_age_cls_class", "(", ")", "\n", "self", ".", "age_clf_100_classes", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "self", ".", "features_length", ",", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.5", ",", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "100", ")", "\n", ")", "\n", "self", ".", "age_clf_20_classes", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "self", ".", "features_length", ",", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.5", ",", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "20", ")", "\n", ")", "\n", "self", ".", "age_clf_10_classes", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "self", ".", "features_length", ",", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.5", ",", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "10", ")", "\n", ")", "\n", "self", ".", "age_clf_5_classes", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "self", ".", "features_length", ",", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.5", ",", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "5", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_alexnet.MultiClassificationAlexNet.get_age_cls_class": [[37, 67], ["print"], "methods", ["None"], ["", "def", "get_age_cls_class", "(", "self", ")", ":", "\n", "        ", "age_divide_100_classes", "=", "False", "\n", "age_divide_20_classes", "=", "False", "\n", "age_divide_10_classes", "=", "False", "\n", "age_divide_5_classes", "=", "False", "\n", "if", "self", ".", "args", ".", "age_classification_combination", "==", "[", "1", ",", "0", ",", "0", ",", "0", "]", ":", "\n", "            ", "age_divide_100_classes", "=", "True", "\n", "age_divide_20_classes", "=", "False", "\n", "age_divide_10_classes", "=", "False", "\n", "age_divide_5_classes", "=", "False", "\n", "", "elif", "self", ".", "args", ".", "age_classification_combination", "==", "[", "1", ",", "1", ",", "0", ",", "0", "]", ":", "\n", "            ", "age_divide_100_classes", "=", "True", "\n", "age_divide_20_classes", "=", "True", "\n", "age_divide_10_classes", "=", "False", "\n", "age_divide_5_classes", "=", "False", "\n", "", "elif", "self", ".", "args", ".", "age_classification_combination", "==", "[", "1", ",", "1", ",", "1", ",", "0", "]", ":", "\n", "            ", "age_divide_100_classes", "=", "True", "\n", "age_divide_20_classes", "=", "True", "\n", "age_divide_10_classes", "=", "True", "\n", "age_divide_5_classes", "=", "False", "\n", "", "elif", "self", ".", "args", ".", "age_classification_combination", "==", "[", "1", ",", "1", ",", "1", ",", "1", "]", ":", "\n", "            ", "age_divide_100_classes", "=", "True", "\n", "age_divide_20_classes", "=", "True", "\n", "age_divide_10_classes", "=", "True", "\n", "age_divide_5_classes", "=", "True", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"age_divide_100_classes, age_divide_20_classes, age_divide_10_classes, age_divide_5_classes\"", ")", "\n", "ValueError", "\n", "\n", "", "return", "age_divide_100_classes", ",", "age_divide_20_classes", ",", "age_divide_10_classes", ",", "age_divide_5_classes", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_alexnet.MultiClassificationAlexNet.forward": [[68, 82], ["multi_classification_alexnet.MultiClassificationAlexNet.multi_classification_AlexNet_features", "x.view.view.view", "x.view.view.size", "multi_classification_alexnet.MultiClassificationAlexNet.age_clf_100_classes", "multi_classification_alexnet.MultiClassificationAlexNet.age_clf_20_classes", "multi_classification_alexnet.MultiClassificationAlexNet.age_clf_10_classes", "multi_classification_alexnet.MultiClassificationAlexNet.age_clf_5_classes"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "multi_classification_AlexNet_features", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "age_pred_100_classes", ",", "age_pred_20_classes", ",", "age_pred_10_classes", ",", "age_pred_5_classes", "=", "None", ",", "None", ",", "None", ",", "None", "\n", "if", "self", ".", "age_divide_100_classes", "==", "True", ":", "\n", "            ", "age_pred_100_classes", "=", "self", ".", "age_clf_100_classes", "(", "x", ")", "\n", "", "if", "self", ".", "age_divide_20_classes", "==", "True", ":", "\n", "            ", "age_pred_20_classes", "=", "self", ".", "age_clf_20_classes", "(", "x", ")", "\n", "", "if", "self", ".", "age_divide_10_classes", "==", "True", ":", "\n", "            ", "age_pred_10_classes", "=", "self", ".", "age_clf_10_classes", "(", "x", ")", "\n", "", "if", "self", ".", "age_divide_5_classes", "==", "True", ":", "\n", "            ", "age_pred_5_classes", "=", "self", ".", "age_clf_5_classes", "(", "x", ")", "\n", "\n", "", "return", "age_pred_100_classes", ",", "age_pred_20_classes", ",", "age_pred_10_classes", ",", "age_pred_5_classes", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_vgg16_bn.MultiClassificationVGG16bn.__init__": [[6, 36], ["super().__init__", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "multi_classification_vgg16_bn.MultiClassificationVGG16bn.get_age_cls_class", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torchvision.models.vgg16_bn", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_mobilenet_v2.MultiClassificationMobileNetv2.__init__", "home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_vgg16_bn.MultiClassificationVGG16bn.get_age_cls_class"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "MultiClassificationVGG16bn", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "vgg16_bn_features", "=", "models", ".", "vgg16_bn", "(", "pretrained", "=", "True", ")", ".", "features", "\n", "self", ".", "features_length", "=", "25088", "\n", "self", ".", "use_gpu", "=", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "age_divide_100_classes", ",", "self", ".", "age_divide_20_classes", ",", "self", ".", "age_divide_10_classes", ",", "self", ".", "age_divide_5_classes", "=", "self", ".", "get_age_cls_class", "(", ")", "\n", "self", ".", "age_clf_100_classes", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "self", ".", "features_length", ",", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.5", ",", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "100", ")", "\n", ")", "\n", "self", ".", "age_clf_20_classes", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "self", ".", "features_length", ",", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.5", ",", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "20", ")", "\n", ")", "\n", "self", ".", "age_clf_10_classes", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "self", ".", "features_length", ",", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.5", ",", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "10", ")", "\n", ")", "\n", "self", ".", "age_clf_5_classes", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "self", ".", "features_length", ",", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.5", ",", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "5", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_vgg16_bn.MultiClassificationVGG16bn.get_age_cls_class": [[37, 66], ["print"], "methods", ["None"], ["", "def", "get_age_cls_class", "(", "self", ")", ":", "\n", "        ", "age_divide_100_classes", "=", "False", "\n", "age_divide_20_classes", "=", "False", "\n", "age_divide_10_classes", "=", "False", "\n", "age_divide_5_classes", "=", "False", "\n", "if", "self", ".", "args", ".", "age_classification_combination", "==", "[", "1", ",", "0", ",", "0", ",", "0", "]", ":", "\n", "            ", "age_divide_100_classes", "=", "True", "\n", "age_divide_20_classes", "=", "False", "\n", "age_divide_10_classes", "=", "False", "\n", "age_divide_5_classes", "=", "False", "\n", "", "elif", "self", ".", "args", ".", "age_classification_combination", "==", "[", "1", ",", "1", ",", "0", ",", "0", "]", ":", "\n", "            ", "age_divide_100_classes", "=", "True", "\n", "age_divide_20_classes", "=", "True", "\n", "age_divide_10_classes", "=", "False", "\n", "age_divide_5_classes", "=", "False", "\n", "", "elif", "self", ".", "args", ".", "age_classification_combination", "==", "[", "1", ",", "1", ",", "1", ",", "0", "]", ":", "\n", "            ", "age_divide_100_classes", "=", "True", "\n", "age_divide_20_classes", "=", "True", "\n", "age_divide_10_classes", "=", "True", "\n", "age_divide_5_classes", "=", "False", "\n", "", "elif", "self", ".", "args", ".", "age_classification_combination", "==", "[", "1", ",", "1", ",", "1", ",", "1", "]", ":", "\n", "            ", "age_divide_100_classes", "=", "True", "\n", "age_divide_20_classes", "=", "True", "\n", "age_divide_10_classes", "=", "True", "\n", "age_divide_5_classes", "=", "True", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"age_divide_100_classes, age_divide_20_classes, age_divide_10_classes, age_divide_5_classes\"", ")", "\n", "ValueError", "\n", "", "return", "age_divide_100_classes", ",", "age_divide_20_classes", ",", "age_divide_10_classes", ",", "age_divide_5_classes", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_vgg16_bn.MultiClassificationVGG16bn.forward": [[67, 80], ["multi_classification_vgg16_bn.MultiClassificationVGG16bn.vgg16_bn_features", "x.view.view.view", "x.view.view.size", "multi_classification_vgg16_bn.MultiClassificationVGG16bn.age_clf_100_classes", "multi_classification_vgg16_bn.MultiClassificationVGG16bn.age_clf_20_classes", "multi_classification_vgg16_bn.MultiClassificationVGG16bn.age_clf_10_classes", "multi_classification_vgg16_bn.MultiClassificationVGG16bn.age_clf_5_classes"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "vgg16_bn_features", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "age_pred_100_classes", ",", "age_pred_20_classes", ",", "age_pred_10_classes", ",", "age_pred_5_classes", "=", "None", ",", "None", ",", "None", ",", "None", "\n", "if", "self", ".", "age_divide_100_classes", "==", "True", ":", "\n", "            ", "age_pred_100_classes", "=", "self", ".", "age_clf_100_classes", "(", "x", ")", "\n", "", "if", "self", ".", "age_divide_20_classes", "==", "True", ":", "\n", "            ", "age_pred_20_classes", "=", "self", ".", "age_clf_20_classes", "(", "x", ")", "\n", "", "if", "self", ".", "age_divide_10_classes", "==", "True", ":", "\n", "            ", "age_pred_10_classes", "=", "self", ".", "age_clf_10_classes", "(", "x", ")", "\n", "", "if", "self", ".", "age_divide_5_classes", "==", "True", ":", "\n", "            ", "age_pred_5_classes", "=", "self", ".", "age_clf_5_classes", "(", "x", ")", "\n", "", "return", "age_pred_100_classes", ",", "age_pred_20_classes", ",", "age_pred_10_classes", ",", "age_pred_5_classes", "", "", "", ""]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_mobilenet_v2.ConvBNReLU.__init__": [[5, 11], ["torch.nn.Sequential.__init__", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU6"], "methods", ["home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_mobilenet_v2.MultiClassificationMobileNetv2.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "groups", "=", "1", ")", ":", "\n", "        ", "padding", "=", "(", "kernel_size", "-", "1", ")", "//", "2", "\n", "super", "(", "ConvBNReLU", ",", "self", ")", ".", "__init__", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", ",", "stride", ",", "padding", ",", "groups", "=", "groups", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", ",", "\n", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_mobilenet_v2.InvertedResidual.__init__": [[14, 34], ["torch.nn.Module.__init__", "int", "layers.extend", "torch.nn.Sequential", "round", "layers.append", "multi_classification_mobilenet_v2.ConvBNReLU", "multi_classification_mobilenet_v2.ConvBNReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_mobilenet_v2.MultiClassificationMobileNetv2.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inp", ",", "oup", ",", "stride", ",", "expand_ratio", ")", ":", "\n", "        ", "super", "(", "InvertedResidual", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "stride", "=", "stride", "\n", "assert", "stride", "in", "[", "1", ",", "2", "]", "\n", "\n", "hidden_dim", "=", "int", "(", "round", "(", "inp", "*", "expand_ratio", ")", ")", "\n", "self", ".", "use_res_connect", "=", "self", ".", "stride", "==", "1", "and", "inp", "==", "oup", "\n", "\n", "layers", "=", "[", "]", "\n", "if", "expand_ratio", "!=", "1", ":", "\n", "# pw", "\n", "            ", "layers", ".", "append", "(", "ConvBNReLU", "(", "inp", ",", "hidden_dim", ",", "kernel_size", "=", "1", ")", ")", "\n", "", "layers", ".", "extend", "(", "[", "\n", "# dw", "\n", "ConvBNReLU", "(", "hidden_dim", ",", "hidden_dim", ",", "stride", "=", "stride", ",", "groups", "=", "hidden_dim", ")", ",", "\n", "# pw-linear", "\n", "nn", ".", "Conv2d", "(", "hidden_dim", ",", "oup", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "oup", ")", ",", "\n", "]", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_mobilenet_v2.InvertedResidual.forward": [[35, 40], ["multi_classification_mobilenet_v2.InvertedResidual.conv", "multi_classification_mobilenet_v2.InvertedResidual.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "use_res_connect", ":", "\n", "            ", "return", "x", "+", "self", ".", "conv", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "conv", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_mobilenet_v2.MobileNetV2.__init__": [[43, 90], ["torch.nn.Module.__init__", "int", "int", "features.append", "torch.nn.Sequential", "torch.nn.Sequential", "multi_classification_mobilenet_v2.MobileNetV2.modules", "multi_classification_mobilenet_v2.ConvBNReLU", "int", "range", "multi_classification_mobilenet_v2.ConvBNReLU", "torch.nn.Dropout", "torch.nn.Linear", "isinstance", "max", "features.append", "torch.nn.init.kaiming_normal_", "isinstance", "block", "torch.nn.init.zeros_", "torch.nn.init.ones_", "torch.nn.init.zeros_", "isinstance", "torch.nn.init.normal_", "torch.nn.init.zeros_"], "methods", ["home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_mobilenet_v2.MultiClassificationMobileNetv2.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "1000", ",", "width_mult", "=", "1.0", ")", ":", "\n", "        ", "super", "(", "MobileNetV2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "block", "=", "InvertedResidual", "\n", "input_channel", "=", "32", "\n", "last_channel", "=", "1280", "\n", "inverted_residual_setting", "=", "[", "\n", "# t, c, n, s", "\n", "[", "1", ",", "16", ",", "1", ",", "1", "]", ",", "\n", "[", "6", ",", "24", ",", "2", ",", "2", "]", ",", "\n", "[", "6", ",", "32", ",", "3", ",", "2", "]", ",", "\n", "[", "6", ",", "64", ",", "4", ",", "2", "]", ",", "\n", "[", "6", ",", "96", ",", "3", ",", "1", "]", ",", "\n", "[", "6", ",", "160", ",", "3", ",", "2", "]", ",", "\n", "[", "6", ",", "320", ",", "1", ",", "1", "]", ",", "\n", "]", "\n", "# building first layer", "\n", "input_channel", "=", "int", "(", "input_channel", "*", "width_mult", ")", "\n", "self", ".", "last_channel", "=", "int", "(", "last_channel", "*", "max", "(", "1.0", ",", "width_mult", ")", ")", "\n", "features", "=", "[", "ConvBNReLU", "(", "3", ",", "input_channel", ",", "stride", "=", "2", ")", "]", "\n", "# building inverted residual blocks", "\n", "for", "t", ",", "c", ",", "n", ",", "s", "in", "inverted_residual_setting", ":", "\n", "            ", "output_channel", "=", "int", "(", "c", "*", "width_mult", ")", "\n", "for", "i", "in", "range", "(", "n", ")", ":", "\n", "                ", "stride", "=", "s", "if", "i", "==", "0", "else", "1", "\n", "features", ".", "append", "(", "block", "(", "input_channel", ",", "output_channel", ",", "stride", ",", "expand_ratio", "=", "t", ")", ")", "\n", "input_channel", "=", "output_channel", "\n", "# building last several layers", "\n", "", "", "features", ".", "append", "(", "ConvBNReLU", "(", "input_channel", ",", "self", ".", "last_channel", ",", "kernel_size", "=", "1", ")", ")", "\n", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "*", "features", ")", "\n", "\n", "# building classifier", "\n", "self", ".", "classifier", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Dropout", "(", "0.2", ")", ",", "\n", "nn", ".", "Linear", "(", "self", ".", "last_channel", ",", "num_classes", ")", ",", "\n", ")", "\n", "# weight initialization", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "nn", ".", "init", ".", "zeros_", "(", "m", ".", "bias", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "ones_", "(", "m", ".", "weight", ")", "\n", "nn", ".", "init", ".", "zeros_", "(", "m", ".", "bias", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "nn", ".", "init", ".", "normal_", "(", "m", ".", "weight", ",", "0", ",", "0.01", ")", "\n", "nn", ".", "init", ".", "zeros_", "(", "m", ".", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_mobilenet_v2.MobileNetV2.forward": [[91, 96], ["multi_classification_mobilenet_v2.MobileNetV2.features", "multi_classification_mobilenet_v2.MobileNetV2.mean", "multi_classification_mobilenet_v2.MobileNetV2.classifier"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "x", "=", "x", ".", "mean", "(", "[", "2", ",", "3", "]", ")", "\n", "x", "=", "self", ".", "classifier", "(", "x", ")", "\n", "return", "x", "\n", "", "", "def", "mobilenet_v2", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_mobilenet_v2.MultiClassificationMobileNetv2.__init__": [[100, 116], ["super().__init__", "multi_classification_mobilenet_v2.mobilenet_v2", "torch.nn.Sequential", "torch.cuda.is_available", "torch.nn.Sequential", "torch.nn.AvgPool2d", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.Dropout", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_mobilenet_v2.MultiClassificationMobileNetv2.__init__", "home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_mobilenet_v2.mobilenet_v2"], ["  ", "def", "__init__", "(", "self", ",", "age_classes", "=", "100", ")", ":", "\n", "    ", "super", "(", "MultiClassificationMobileNetv2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "backbone_model", "=", "mobilenet_v2", "(", "pretrained", "=", "True", ")", "\n", "self", ".", "multi_Classification_MobileNet_V2_model_feature", "=", "nn", ".", "Sequential", "(", "\n", "backbone_model", ".", "features", ",", "\n", "torch", ".", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "(", "7", ",", "7", ")", ")", "\n", ")", "\n", "self", ".", "features_length", "=", "1280", "\n", "\n", "self", ".", "use_gpu", "=", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "\n", "self", ".", "age_clf", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "self", ".", "features_length", ",", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.5", ",", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "age_classes", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_mobilenet_v2.MultiClassificationMobileNetv2.forward": [[118, 126], ["multi_classification_mobilenet_v2.MultiClassificationMobileNetv2.multi_Classification_MobileNet_V2_model_feature", "x.view.view.view", "multi_classification_mobilenet_v2.MultiClassificationMobileNetv2.age_clf", "x.view.view.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "x", "=", "self", ".", "multi_Classification_MobileNet_V2_model_feature", "(", "x", ")", "\n", "# print(x.size())  # torch.Size([8, 1280, 7, 7])", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "# print(x.size())   # torch.Size([8, 62720])", "\n", "age_pred", "=", "self", ".", "age_clf", "(", "x", ")", "\n", "\n", "return", "age_pred", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yipersevere_age-estimation.models.multi_classification_mobilenet_v2.mobilenet_v2": [[96, 98], ["multi_classification_mobilenet_v2.MobileNetV2"], "function", ["None"], ["", "", "def", "mobilenet_v2", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "return", "MobileNetV2", "(", "**", "kwargs", ")", "\n", "\n"]]}