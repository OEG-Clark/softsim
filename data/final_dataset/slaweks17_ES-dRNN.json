{"home.repos.pwc.inspect_result.slaweks17_ES-dRNN.None.es_drnn.PerSeriesParams.__init__": [[279, 289], ["super().__init__", "torch.nn.Parameter", "es_drnn.PerSeriesParams.register_parameter", "torch.nn.Parameter", "es_drnn.PerSeriesParams.register_parameter", "torch.tensor", "torch.tensor", "str", "str"], "methods", ["home.repos.pwc.inspect_result.slaweks17_ES-dRNN.None.es_drnn.DilatedSparseRnnStack.__init__"], ["  ", "def", "__init__", "(", "self", ",", "series", ")", ":", "\n", "    ", "super", "(", "PerSeriesParams", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "tep", "=", "torch", ".", "nn", ".", "Parameter", "(", "torch", ".", "tensor", "(", "LEV_SM0", ")", ")", "\n", "self", ".", "register_parameter", "(", "\"initLevSm_\"", "+", "str", "(", "series", ")", ",", "tep", ")", "\n", "self", ".", "initLevSm", "=", "tep", "\n", "\n", "tep", "=", "torch", ".", "nn", ".", "Parameter", "(", "torch", ".", "tensor", "(", "S_SM0", ")", ")", "\n", "self", ".", "register_parameter", "(", "\"initSSm_\"", "+", "str", "(", "series", ")", ",", "tep", ")", "\n", "self", ".", "initSSm", "=", "tep", "\n", "\n"]], "home.repos.pwc.inspect_result.slaweks17_ES-dRNN.None.es_drnn.Batch.__init__": [[311, 344], ["len", "range", "random.choice", "torch.any", "train_t[].t", "test_t[].t", "torch.mean", "initialSeasonality.append", "torch.isnan", "random.choice", "initialSeasonality_t[].view"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "batch", ",", "isTraining", "=", "True", ")", ":", "\n", "    ", "self", ".", "series", "=", "batch", "\n", "batchSize", "=", "len", "(", "batch", ")", "\n", "\n", "if", "isTraining", ":", "\n", "      ", "warmupSteps", "=", "TRAINING_WARMUP_STEPS", "\n", "startingIndex", "=", "random", ".", "choice", "(", "startingIndices", ")", "\n", "startupArea", "=", "train_t", "[", "startingIndex", "-", "warmupSteps", "*", "STEP_SIZE", ":", "startingIndex", ",", "batch", "]", "\n", "while", "torch", ".", "any", "(", "torch", ".", "isnan", "(", "startupArea", ")", ")", ":", "\n", "        ", "startingIndex", "=", "random", ".", "choice", "(", "startingIndices", ")", "\n", "startupArea", "=", "train_t", "[", "startingIndex", "-", "warmupSteps", "*", "STEP_SIZE", ":", "startingIndex", ",", "batch", "]", "\n", "\n", "", "reallyStartingIndex", "=", "startingIndex", "-", "warmupSteps", "*", "STEP_SIZE", "+", "SEASONALITY", "\n", "initialSeasonalityArea", "=", "train_t", "[", "startingIndex", "-", "warmupSteps", "*", "STEP_SIZE", ":", "\n", "reallyStartingIndex", ",", "batch", "]", "\n", "self", ".", "y", "=", "train_t", "[", "reallyStartingIndex", ":", ",", "batch", "]", ".", "t", "(", ")", "\n", "self", ".", "dates", "=", "trainDates", "[", "reallyStartingIndex", ":", "]", "\n", "", "else", ":", "\n", "      ", "warmupSteps", "=", "TESTING_WARMUP_STEPS", "\n", "startingIndex", "=", "warmupSteps", "*", "STEP_SIZE", "\n", "initialSeasonalityArea", "=", "test_t", "[", "0", ":", "SEASONALITY", ",", "batch", "]", "\n", "self", ".", "y", "=", "test_t", "[", "SEASONALITY", ":", ",", "batch", "]", ".", "t", "(", ")", "\n", "self", ".", "dates", "=", "testDates", "[", "SEASONALITY", ":", "]", "\n", "\n", "", "initialSeasonality_t", "=", "initialSeasonalityArea", "/", "torch", ".", "mean", "(", "initialSeasonalityArea", ",", "dim", "=", "0", ")", "\n", "initialSeasonality", "=", "[", "]", "\n", "for", "ir", "in", "range", "(", "SEASONALITY", ")", ":", "\n", "      ", "initialSeasonality", ".", "append", "(", "initialSeasonality_t", "[", "ir", "]", ".", "view", "(", "[", "batchSize", ",", "1", "]", ")", ")", "\n", "\n", "#and continue calculating levels and seasonality in the main", "\n", "", "self", ".", "batchSize", "=", "batchSize", "\n", "self", ".", "maseNormalizer", "=", "maseDenom", "[", "batch", "]", "\n", "self", ".", "initialSeasonality", "=", "initialSeasonality", "\n", "\n"]], "home.repos.pwc.inspect_result.slaweks17_ES-dRNN.None.es_drnn.LSTM2Cell.__init__": [[351, 356], ["super().__init__", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.slaweks17_ES-dRNN.None.es_drnn.DilatedSparseRnnStack.__init__"], ["  ", "def", "__init__", "(", "self", ",", "input_size", ",", "h_size", ",", "state_size", ")", ":", "\n", "    ", "super", "(", "LSTM2Cell", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "lxh", "=", "torch", ".", "nn", ".", "Linear", "(", "input_size", "+", "2", "*", "h_size", ",", "4", "*", "state_size", ")", "#params of Linear are automatically added to the module params, magically :-)", "\n", "self", ".", "h_size", "=", "h_size", "\n", "self", ".", "out_size", "=", "state_size", "-", "h_size", "\n", "\n"]], "home.repos.pwc.inspect_result.slaweks17_ES-dRNN.None.es_drnn.LSTM2Cell.forward": [[358, 386], ["es_drnn.LSTM2Cell.lxh", "torch.chunk", "chunkedGates[].sigmoid", "chunkedGates[].sigmoid", "chunkedGates[].tanh", "torch.split", "torch.cat", "chunkedGates[].tanh.tanh", "torch.cat", "torch.zeros", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input_t", ":", "Tensor", ",", "hasDelayedState", ":", "bool", ",", "hasPrevState", ":", "bool", ",", "\n", "prevHState", ":", "Tensor", "=", "NoneT", ",", "\n", "delayedHstate", ":", "Tensor", "=", "NoneT", ",", "\n", "cstate", ":", "Tensor", "=", "NoneT", "\n", ")", "->", "Tuple", "[", "Tensor", ",", "Tuple", "[", "Tensor", ",", "Tensor", "]", "]", ":", "#outputs: (out, (hState, cState))", "\n", "    ", "if", "hasDelayedState", ":", "\n", "      ", "xh", "=", "torch", ".", "cat", "(", "[", "input_t", ",", "prevHState", ",", "delayedHstate", "]", ",", "dim", "=", "1", ")", "\n", "", "elif", "hasPrevState", ":", "\n", "      ", "xh", "=", "torch", ".", "cat", "(", "[", "input_t", ",", "prevHState", ",", "prevHState", "]", ",", "dim", "=", "1", ")", "\n", "", "else", ":", "\n", "      ", "emptyHState", "=", "torch", ".", "zeros", "(", "input_t", ".", "shape", "[", "0", "]", ",", "2", "*", "self", ".", "h_size", ",", "dtype", "=", "torch", ".", "float32", ")", "\n", "xh", "=", "torch", ".", "cat", "(", "[", "input_t", ",", "emptyHState", "]", ",", "dim", "=", "1", ")", "\n", "\n", "", "gates", "=", "self", ".", "lxh", "(", "xh", ")", "\n", "\n", "chunkedGates", "=", "torch", ".", "chunk", "(", "gates", ",", "4", ",", "dim", "=", "1", ")", "\n", "\n", "forgetGate", "=", "(", "chunkedGates", "[", "0", "]", "+", "1", ")", ".", "sigmoid", "(", ")", ";", "\n", "ingate", "=", "chunkedGates", "[", "1", "]", ".", "sigmoid", "(", ")", ";", "\n", "outGate", "=", "chunkedGates", "[", "2", "]", ".", "sigmoid", "(", ")", ";", "\n", "newState", "=", "chunkedGates", "[", "3", "]", ".", "tanh", "(", ")", ";", "\n", "\n", "if", "hasPrevState", ":", "\n", "      ", "newState", "=", "(", "forgetGate", "*", "cstate", ")", "+", "(", "ingate", "*", "newState", ")", "\n", "", "wholeOutput", "=", "outGate", "*", "newState", ".", "tanh", "(", ")", ";", "\n", "\n", "output_t", ",", "hState", "=", "torch", ".", "split", "(", "wholeOutput", ",", "[", "self", ".", "out_size", ",", "self", ".", "h_size", "]", ",", "dim", "=", "1", ")", "\n", "return", "output_t", ",", "(", "hState", ",", "newState", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slaweks17_ES-dRNN.None.es_drnn.S2Cell.__init__": [[390, 396], ["super().__init__", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.slaweks17_ES-dRNN.None.es_drnn.DilatedSparseRnnStack.__init__"], ["  ", "def", "__init__", "(", "self", ",", "input_size", ",", "h_size", ",", "state_size", ")", ":", "\n", "    ", "super", "(", "S2Cell", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "lxh", "=", "torch", ".", "nn", ".", "Linear", "(", "input_size", "+", "2", "*", "h_size", ",", "4", "*", "state_size", ")", "#params of Linear are automatically added to the module params, magically :-)", "\n", "self", ".", "h_size", "=", "h_size", "\n", "self", ".", "state_size", "=", "state_size", "\n", "self", ".", "out_size", "=", "state_size", "-", "h_size", "\n", "\n"]], "home.repos.pwc.inspect_result.slaweks17_ES-dRNN.None.es_drnn.S2Cell.forward": [[398, 432], ["es_drnn.S2Cell.lxh", "torch.chunk", "chunkedGates[].tanh", "chunkedGates[].sigmoid", "torch.split", "torch.cat", "torch.cat", "torch.zeros", "torch.cat", "chunkedGates[].sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input_t", ":", "Tensor", ",", "hasDelayedState", ":", "bool", ",", "hasPrevState", ":", "bool", ",", "\n", "prevHState", ":", "Tensor", "=", "NoneT", ",", "\n", "delayedHstate", ":", "Tensor", "=", "NoneT", ",", "\n", "prevCstate", ":", "Tensor", "=", "NoneT", ",", "\n", "delayedCstate", ":", "Tensor", "=", "NoneT", ")", "->", "Tuple", "[", "Tensor", ",", "Tuple", "[", "Tensor", ",", "Tensor", "]", "]", ":", "#outputs: (out, (hState, cState))", "\n", "    ", "if", "hasDelayedState", ":", "\n", "      ", "xh", "=", "torch", ".", "cat", "(", "[", "input_t", ",", "prevHState", ",", "delayedHstate", "]", ",", "dim", "=", "1", ")", "\n", "", "elif", "hasPrevState", ":", "\n", "      ", "xh", "=", "torch", ".", "cat", "(", "[", "input_t", ",", "prevHState", ",", "prevHState", "]", ",", "dim", "=", "1", ")", "\n", "", "else", ":", "\n", "      ", "emptyHState", "=", "torch", ".", "zeros", "(", "input_t", ".", "shape", "[", "0", "]", ",", "2", "*", "self", ".", "h_size", ",", "dtype", "=", "torch", ".", "float", ")", "\n", "xh", "=", "torch", ".", "cat", "(", "[", "input_t", ",", "emptyHState", "]", ",", "dim", "=", "1", ")", "\n", "\n", "", "gates", "=", "self", ".", "lxh", "(", "xh", ")", "\n", "chunkedGates", "=", "torch", ".", "chunk", "(", "gates", ",", "4", ",", "dim", "=", "1", ")", "#==torch.split(gates, [self.state_size, self.state_size, self.state_size, self.state_size], dim=1)", "\n", "\n", "forgetGate", "=", "(", "chunkedGates", "[", "0", "]", "+", "1", ")", ".", "sigmoid", "(", ")", ";", "\n", "newState", "=", "chunkedGates", "[", "1", "]", ".", "tanh", "(", ")", ";", "\n", "outGate", "=", "chunkedGates", "[", "3", "]", ".", "sigmoid", "(", ")", ";", "\n", "\n", "if", "hasPrevState", ":", "\n", "      ", "if", "hasDelayedState", ":", "\n", "        ", "alpha", "=", "chunkedGates", "[", "2", "]", ".", "sigmoid", "(", ")", ";", "\n", "weightedCState", "=", "alpha", "*", "prevCstate", "+", "(", "1", "-", "alpha", ")", "*", "delayedCstate", "\n", "", "else", ":", "\n", "        ", "weightedCState", "=", "prevCstate", "\n", "\n", "", "newState", "=", "forgetGate", "*", "weightedCState", "+", "(", "1", "-", "forgetGate", ")", "*", "newState", ";", "\n", "\n", "", "wholeOutput", "=", "outGate", "*", "newState", "\n", "\n", "output_t", ",", "hState", "=", "torch", ".", "split", "(", "wholeOutput", ",", "[", "self", ".", "out_size", ",", "self", ".", "h_size", "]", ",", "dim", "=", "1", ")", "\n", "return", "output_t", ",", "(", "hState", ",", "newState", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slaweks17_ES-dRNN.None.es_drnn.DilatedSparseRnnStack.resetState": [[435, 438], ["None"], "methods", ["None"], ["  ", "def", "resetState", "(", "self", ")", ":", "\n", "    ", "self", ".", "hStates", "=", "[", "]", "#first index time, second layers", "\n", "self", ".", "cStates", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.slaweks17_ES-dRNN.None.es_drnn.DilatedSparseRnnStack.__init__": [[443, 499], ["super().__init__", "len", "range", "torch.nn.Linear", "es_drnn.DilatedSparseRnnStack.resetState", "torch.nn.Linear", "range", "len", "es_drnn.DilatedSparseRnnStack.add_module", "es_drnn.DilatedSparseRnnStack.cells.append", "es_drnn.LSTM2Cell", "torch.jit.script", "torch.nn.LSTMCell", "es_drnn.LSTM2Cell", "es_drnn.S2Cell", "torch.jit.script", "es_drnn.S2Cell"], "methods", ["home.repos.pwc.inspect_result.slaweks17_ES-dRNN.None.es_drnn.DilatedSparseRnnStack.__init__", "home.repos.pwc.inspect_result.slaweks17_ES-dRNN.None.es_drnn.DilatedSparseRnnStack.resetState"], ["", "def", "__init__", "(", "self", ",", "dilations", ",", "cellName", ",", "input_size", ",", "state_size", ",", "output_size", ",", "h_size", "=", "None", ",", "inp_size", "=", "None", ")", ":", "\n", "    ", "super", "(", "DilatedSparseRnnStack", ",", "self", ")", ".", "__init__", "(", ")", "\n", "numOfBlocks", "=", "len", "(", "dilations", ")", "\n", "self", ".", "dilations", "=", "dilations", "\n", "self", ".", "cellName", "=", "cellName", "\n", "self", ".", "input_size", "=", "input_size", "\n", "self", ".", "h_size", "=", "h_size", "\n", "self", ".", "output_size", "=", "output_size", "\n", "\n", "\n", "if", "cellName", "==", "\"LSTM2Cell\"", "or", "cellName", "==", "\"S2Cell\"", ":", "\n", "      ", "out_size", "=", "state_size", "-", "h_size", "\n", "", "else", ":", "#standard LSTM", "\n", "      ", "out_size", "=", "state_size", "\n", "\n", "", "if", "not", "inp_size", "is", "None", ":", "\n", "      ", "self", ".", "inputAdaptor", "=", "torch", ".", "nn", ".", "Linear", "(", "input_size", ",", "inp_size", ")", "\n", "self", ".", "inp_size", "=", "inp_size", "\n", "", "else", ":", "\n", "      ", "self", ".", "inputAdaptor", "=", "None", "\n", "\n", "\n", "", "self", ".", "cells", "=", "[", "]", "\n", "layer", "=", "0", ";", "iblock", "=", "0", ";", "\n", "for", "iblock", "in", "range", "(", "numOfBlocks", ")", ":", "\n", "      ", "for", "lay", "in", "range", "(", "len", "(", "dilations", "[", "iblock", "]", ")", ")", ":", "\n", "        ", "if", "lay", "==", "0", "and", "iblock", "==", "0", ":", "\n", "          ", "if", "inp_size", "is", "None", ":", "\n", "            ", "inputSize", "=", "input_size", "\n", "", "else", ":", "\n", "            ", "inputSize", "=", "inp_size", "\n", "", "", "else", ":", "\n", "          ", "inputSize", "=", "out_size", "\n", "\n", "", "if", "cellName", "==", "\"LSTM2Cell\"", ":", "\n", "          ", "if", "interactive", ":", "\n", "            ", "cell", "=", "LSTM2Cell", "(", "inputSize", ",", "h_size", ",", "state_size", ")", "\n", "", "else", ":", "\n", "            ", "cell", "=", "torch", ".", "jit", ".", "script", "(", "LSTM2Cell", "(", "inputSize", ",", "h_size", ",", "state_size", ")", ")", "\n", "", "", "elif", "cellName", "==", "\"S2Cell\"", ":", "\n", "          ", "if", "interactive", ":", "\n", "            ", "cell", "=", "S2Cell", "(", "inputSize", ",", "h_size", ",", "state_size", ")", "\n", "", "else", ":", "\n", "            ", "cell", "=", "torch", ".", "jit", ".", "script", "(", "S2Cell", "(", "inputSize", ",", "h_size", ",", "state_size", ")", ")", "\n", "", "", "else", ":", "\n", "          ", "cell", "=", "torch", ".", "nn", ".", "LSTMCell", "(", "inputSize", ",", "state_size", ")", "\n", "#print(\"adding\",\"Cell_{}\".format(layer))", "\n", "", "self", ".", "add_module", "(", "\"Cell_{}\"", ".", "format", "(", "layer", ")", ",", "cell", ")", "\n", "self", ".", "cells", ".", "append", "(", "cell", ")", "\n", "layer", "+=", "1", "\n", "\n", "", "", "self", ".", "adaptor", "=", "torch", ".", "nn", ".", "Linear", "(", "out_size", ",", "output_size", ")", "\n", "\n", "self", ".", "numOfBlocks", "=", "numOfBlocks", "\n", "self", ".", "out_size", "=", "out_size", "\n", "self", ".", "resetState", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slaweks17_ES-dRNN.None.es_drnn.DilatedSparseRnnStack.forward": [[501, 562], ["torch.zeros", "es_drnn.DilatedSparseRnnStack.hStates.append", "es_drnn.DilatedSparseRnnStack.cStates.append", "range", "es_drnn.DilatedSparseRnnStack.adaptor", "len", "range", "len", "es_drnn.DilatedSparseRnnStack.hStates[].append", "es_drnn.DilatedSparseRnnStack.cStates[].append", "es_drnn.DilatedSparseRnnStack.inputAdaptor"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input_t", ")", ":", "\n", "    ", "prevBlockOut", "=", "torch", ".", "zeros", "(", "[", "input_t", ".", "shape", "[", "0", "]", ",", "self", ".", "out_size", "]", ")", "\n", "self", ".", "hStates", ".", "append", "(", "[", "]", ")", "#append for the new t", "\n", "self", ".", "cStates", ".", "append", "(", "[", "]", ")", "\n", "t", "=", "len", "(", "self", ".", "hStates", ")", "-", "1", "\n", "hasPrevState", "=", "t", ">", "0", "\n", "\n", "layer", "=", "0", "\n", "for", "iblock", "in", "range", "(", "self", ".", "numOfBlocks", ")", ":", "\n", "      ", "for", "lay", "in", "range", "(", "len", "(", "self", ".", "dilations", "[", "iblock", "]", ")", ")", ":", "\n", "        ", "if", "lay", "==", "0", ":", "\n", "          ", "if", "iblock", "==", "0", ":", "\n", "            ", "if", "not", "self", ".", "inputAdaptor", "is", "None", ":", "\n", "              ", "input", "=", "self", ".", "inputAdaptor", "(", "input_t", ")", "\n", "", "else", ":", "\n", "              ", "input", "=", "input_t", "\n", "", "", "else", ":", "\n", "            ", "input", "=", "prevBlockOut", "#shortcut", "\n", "", "", "else", ":", "\n", "          ", "input", "=", "output_t", "\n", "\n", "", "ti_1", "=", "t", "-", "self", ".", "dilations", "[", "iblock", "]", "[", "lay", "]", "\n", "hasDelayedState", "=", "ti_1", ">=", "0", "\n", "if", "self", ".", "cellName", "==", "\"S2Cell\"", ":", "\n", "          ", "if", "hasDelayedState", ":", "\n", "            ", "output_t", ",", "(", "hState", ",", "newState", ")", "=", "self", ".", "cells", "[", "layer", "]", "(", "input", ",", "hasDelayedState", ",", "hasPrevState", ",", "\n", "prevHState", "=", "self", ".", "hStates", "[", "t", "-", "1", "]", "[", "layer", "]", ",", "delayedHstate", "=", "self", ".", "hStates", "[", "ti_1", "]", "[", "layer", "]", ",", "\n", "prevCstate", "=", "self", ".", "cStates", "[", "t", "-", "1", "]", "[", "layer", "]", ",", "delayedCstate", "=", "self", ".", "cStates", "[", "ti_1", "]", "[", "layer", "]", ")", "\n", "", "elif", "hasPrevState", ":", "\n", "            ", "output_t", ",", "(", "hState", ",", "newState", ")", "=", "self", ".", "cells", "[", "layer", "]", "(", "input", ",", "hasDelayedState", ",", "hasPrevState", ",", "\n", "prevHState", "=", "self", ".", "hStates", "[", "t", "-", "1", "]", "[", "layer", "]", ",", "\n", "prevCstate", "=", "self", ".", "cStates", "[", "t", "-", "1", "]", "[", "layer", "]", ")", "\n", "", "else", ":", "\n", "            ", "output_t", ",", "(", "hState", ",", "newState", ")", "=", "self", ".", "cells", "[", "layer", "]", "(", "input", ",", "False", ",", "False", ")", "\n", "", "", "elif", "self", ".", "cellName", "==", "\"LSTM2Cell\"", ":", "\n", "          ", "if", "hasDelayedState", ":", "\n", "            ", "output_t", ",", "(", "hState", ",", "newState", ")", "=", "self", ".", "cells", "[", "layer", "]", "(", "input", ",", "hasDelayedState", ",", "hasPrevState", ",", "\n", "prevHState", "=", "self", ".", "hStates", "[", "t", "-", "1", "]", "[", "layer", "]", ",", "delayedHstate", "=", "self", ".", "hStates", "[", "ti_1", "]", "[", "layer", "]", ",", "\n", "cstate", "=", "self", ".", "cStates", "[", "ti_1", "]", "[", "layer", "]", ")", "\n", "", "elif", "hasPrevState", ":", "\n", "            ", "output_t", ",", "(", "hState", ",", "newState", ")", "=", "self", ".", "cells", "[", "layer", "]", "(", "input", ",", "hasDelayedState", ",", "hasPrevState", ",", "\n", "prevHState", "=", "self", ".", "hStates", "[", "t", "-", "1", "]", "[", "layer", "]", ",", "\n", "cstate", "=", "self", ".", "cStates", "[", "t", "-", "1", "]", "[", "layer", "]", ")", "\n", "", "else", ":", "\n", "            ", "output_t", ",", "(", "hState", ",", "newState", ")", "=", "self", ".", "cells", "[", "layer", "]", "(", "input", ",", "False", ",", "False", ")", "\n", "", "", "else", ":", "#LSTM ", "\n", "          ", "if", "hasDelayedState", ":", "\n", "            ", "hState", ",", "newState", "=", "self", ".", "cells", "[", "layer", "]", "(", "input", ",", "(", "self", ".", "hStates", "[", "ti_1", "]", "[", "layer", "]", ",", "self", ".", "cStates", "[", "ti_1", "]", "[", "layer", "]", ")", ")", "\n", "", "elif", "hasPrevState", ":", "\n", "            ", "hState", ",", "newState", "=", "self", ".", "cells", "[", "layer", "]", "(", "input", ",", "(", "self", ".", "hStates", "[", "t", "-", "1", "]", "[", "layer", "]", ",", "self", ".", "cStates", "[", "t", "-", "1", "]", "[", "layer", "]", ")", ")", "\n", "", "else", ":", "\n", "            ", "hState", ",", "newState", "=", "self", ".", "cells", "[", "layer", "]", "(", "input", ")", "\n", "", "output_t", "=", "hState", "\n", "\n", "", "self", ".", "hStates", "[", "t", "]", ".", "append", "(", "hState", ")", "\n", "self", ".", "cStates", "[", "t", "]", ".", "append", "(", "newState", ")", "\n", "layer", "+=", "1", "\n", "", "prevBlockOut", "=", "output_t", "+", "prevBlockOut", "\n", "\n", "", "output_t", "=", "self", ".", "adaptor", "(", "prevBlockOut", ")", "\n", "return", "output_t", "\n", "\n"]], "home.repos.pwc.inspect_result.slaweks17_ES-dRNN.None.es_drnn.trouble": [[152, 158], ["Exception", "print", "pdb.set_trace"], "function", ["None"], ["def", "trouble", "(", "msg", ")", ":", "\n", "  ", "if", "interactive", ":", "\n", "    ", "raise", "Exception", "(", "msg", ")", "\n", "", "else", ":", "\n", "    ", "print", "(", "msg", ")", "\n", "import", "pdb", ";", "pdb", ".", "set_trace", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.slaweks17_ES-dRNN.None.es_drnn.datesToMetadata": [[295, 307], ["torch.zeros", "dat.weekday", "min", "dat.timetuple"], "function", ["None"], ["", "", "def", "datesToMetadata", "(", "dat", ")", ":", "\n", "  ", "ret", "=", "torch", ".", "zeros", "(", "[", "DATES_ENCODE_SIZE", "]", ")", "\n", "dayOfWeek", "=", "dat", ".", "weekday", "(", ")", "#Monday is 0 and Sunday is 6", "\n", "ret", "[", "dayOfWeek", "]", "=", "1", "\n", "\n", "dayOfYear", "=", "dat", ".", "timetuple", "(", ")", ".", "tm_yday", "\n", "week", "=", "min", "(", "51", ",", "dayOfYear", "//", "7", ")", "\n", "ret", "[", "7", "+", "week", "]", "=", "1", "\n", "\n", "dayOfMonth", "=", "dat", ".", "day", "\n", "ret", "[", "7", "+", "52", "+", "dayOfMonth", "-", "1", "]", "=", "1", "#Between 1 and the number of days in the given month", "\n", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.slaweks17_ES-dRNN.None.es_drnn.trainingLossFunc": [[569, 613], ["notNans.sum", "torch.any", "range", "es_drnn.trouble", "es_drnn.trouble", "es_drnn.trouble", "torch.isnan().detach", "len", "torch.max", "torch.any", "range", "torch.max.sum", "ret.append", "ret.append", "torch.isnan", "len"], "function", ["home.repos.pwc.inspect_result.slaweks17_ES-dRNN.None.es_drnn.trouble", "home.repos.pwc.inspect_result.slaweks17_ES-dRNN.None.es_drnn.trouble", "home.repos.pwc.inspect_result.slaweks17_ES-dRNN.None.es_drnn.trouble"], ["", "", "def", "trainingLossFunc", "(", "forec_t", ",", "actuals_t", ",", "anchorLevel", ")", ":", "\n", "  ", "if", "forec_t", ".", "shape", "[", "0", "]", "!=", "actuals_t", ".", "shape", "[", "0", "]", ":", "\n", "    ", "trouble", "(", "\"forec_t.shape[0] != actuals_t.shape[0]\"", ")", "\n", "\n", "", "if", "forec_t", ".", "shape", "[", "1", "]", "!=", "TOTAL_OUTPUT_WINDOW", ":", "\n", "    ", "trouble", "(", "\"forec_t.shape[1] != TOTAL_OUTPUT_WINDOW\"", ")", "\n", "\n", "", "if", "actuals_t", ".", "shape", "[", "1", "]", "!=", "OUTPUT_WINDOW", ":", "\n", "    ", "trouble", "(", "\"actuals_t.shape[1] != OUTPUT_WINDOW\"", ")", "\n", "\n", "", "ret", "=", "[", "]", "\n", "\n", "nans", "=", "torch", ".", "isnan", "(", "actuals_t", ")", ".", "detach", "(", ")", "|", "(", "actuals_t", "<=", "0", ")", ".", "detach", "(", ")", "\n", "notNans", "=", "(", "~", "nans", ")", ".", "float", "(", ")", "\n", "numOfNotNans", "=", "notNans", ".", "sum", "(", "dim", "=", "1", ")", "\n", "\n", "if", "torch", ".", "any", "(", "nans", ")", ":", "\n", "    ", "actuals_t", "[", "nans", "]", "=", "1", "#actuals have been cloned outside of this function", "\n", "\n", "#we do it here, becasue Pytorch is alergic to any opearation including nans, even if removed from the graph later", "\n", "#so we first patch nans and execute normalization and squashing and then remove results involving nans", "\n", "", "actualsS_t", "=", "actuals_t", "/", "anchorLevel", "\n", "\n", "lower", "=", "0", ";", "iq", "=", "0", "\n", "for", "iq", "in", "range", "(", "len", "(", "TRAINING_QUANTS", ")", ")", ":", "\n", "    ", "quant", "=", "TRAINING_QUANTS", "[", "iq", "]", "\n", "upper", "=", "lower", "+", "OUTPUT_WINDOW", "\n", "diff", "=", "actualsS_t", "-", "forec_t", "[", ":", ",", "lower", ":", "upper", "]", "#normalized and squashed", "\n", "rs", "=", "torch", ".", "max", "(", "diff", "*", "quant", ",", "diff", "*", "(", "quant", "-", "1", ")", ")", "\n", "rs", "[", "nans", "]", "=", "0", "\n", "\n", "if", "torch", ".", "any", "(", "numOfNotNans", "==", "0", ")", ":", "\n", "      ", "for", "ib", "in", "range", "(", "len", "(", "numOfNotNans", ")", ")", ":", "\n", "        ", "if", "numOfNotNans", "[", "ib", "]", "==", "0", ":", "\n", "          ", "numOfNotNans", "[", "ib", "]", "+=", "1", "\n", "\n", "", "", "", "rc", "=", "rs", ".", "sum", "(", "dim", "=", "1", ")", "/", "numOfNotNans", "#numOfNotNans is vector", "\n", "\n", "if", "iq", "==", "0", ":", "\n", "      ", "ret", ".", "append", "(", "rc", ")", "\n", "", "else", ":", "\n", "      ", "ret", ".", "append", "(", "rc", "*", "PI_WEIGHT", ")", "\n", "", "lower", "=", "upper", "\n", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.slaweks17_ES-dRNN.None.es_drnn.validationLossFunc": [[619, 664], ["numpy.sqrt", "numpy.nanmean", "numpy.nanmean", "range", "numpy.isnan().sum", "es_drnn.trouble", "es_drnn.trouble", "es_drnn.trouble", "es_drnn.trouble", "numpy.zeros", "numpy.nanmean", "numpy.nanmean", "abs", "len", "numpy.nanmean", "abs", "numpy.isnan", "len"], "function", ["home.repos.pwc.inspect_result.slaweks17_ES-dRNN.None.es_drnn.trouble", "home.repos.pwc.inspect_result.slaweks17_ES-dRNN.None.es_drnn.trouble", "home.repos.pwc.inspect_result.slaweks17_ES-dRNN.None.es_drnn.trouble", "home.repos.pwc.inspect_result.slaweks17_ES-dRNN.None.es_drnn.trouble"], ["", "def", "validationLossFunc", "(", "forec", ",", "actuals", ",", "maseNormalizer", ")", ":", "\n", "  ", "if", "np", ".", "isnan", "(", "forec", ".", "data", ")", ".", "sum", "(", ")", ">", "0", ":", "\n", "    ", "trouble", "(", "\"NaNs in forecast\"", ")", "\n", "\n", "", "if", "forec", ".", "shape", "[", "0", "]", "!=", "actuals", ".", "shape", "[", "0", "]", ":", "\n", "    ", "trouble", "(", "\"forec.shape[0] != actuals.shape[0]\"", ")", "\n", "\n", "", "if", "forec", ".", "shape", "[", "1", "]", "!=", "TOTAL_OUTPUT_WINDOW", ":", "\n", "    ", "trouble", "(", "\"forec.shape[1] != TOTAL_OUTPUT_WINDOW\"", ")", "\n", "\n", "", "if", "actuals", ".", "shape", "[", "1", "]", "!=", "OUTPUT_WINDOW", ":", "#but they may be all NANs", "\n", "    ", "trouble", "(", "\"actuals.shape[1] != OUTPUT_WINDOW\"", ")", "\n", "\n", "", "ret", "=", "np", ".", "zeros", "(", "[", "actuals", ".", "shape", "[", "0", "]", ",", "4", "+", "len", "(", "QUANTS", ")", "]", ",", "dtype", "=", "np", ".", "float32", ")", "+", "np", ".", "nan", "\n", "\n", "#center", "\n", "diff", "=", "forec", "[", ":", ",", "0", ":", "OUTPUT_WINDOW", "]", "-", "actuals", "\n", "rmse", "=", "np", ".", "sqrt", "(", "np", ".", "nanmean", "(", "diff", "*", "diff", ",", "axis", "=", "1", ")", ")", "\n", "mase", "=", "np", ".", "nanmean", "(", "abs", "(", "diff", ")", ",", "axis", "=", "1", ")", "/", "maseNormalizer", "\n", "mape", "=", "np", ".", "nanmean", "(", "abs", "(", "diff", "/", "actuals", ")", ",", "axis", "=", "1", ")", "\n", "bias", "=", "np", ".", "nanmean", "(", "diff", "/", "actuals", ",", "axis", "=", "1", ")", "\n", "\n", "ret", "[", ":", ",", "0", "]", "=", "rmse", "\n", "ret", "[", ":", ",", "1", "]", "=", "bias", "\n", "ret", "[", ":", ",", "2", "]", "=", "mase", "\n", "ret", "[", ":", ",", "3", "]", "=", "mape", "\n", "\n", "#exceedance", "\n", "lower", "=", "0", ";", "iq", "=", "0", "\n", "for", "iq", "in", "range", "(", "len", "(", "QUANTS", ")", ")", ":", "\n", "    ", "quant", "=", "QUANTS", "[", "iq", "]", "\n", "#print(quant)", "\n", "upper", "=", "lower", "+", "OUTPUT_WINDOW", "\n", "diff", "=", "actuals", "-", "forec", "[", ":", ",", "lower", ":", "upper", "]", "\n", "\n", "if", "quant", ">=", "0.5", ":", "\n", "      ", "xceeded", "=", "diff", ">", "0", "\n", "", "else", ":", "\n", "      ", "xceeded", "=", "diff", "<", "0", "\n", "\n", "", "exceeded", "=", "np", ".", "nanmean", "(", "xceeded", ",", "axis", "=", "1", ")", "\n", "ret", "[", ":", ",", "iq", "+", "4", "]", "=", "exceeded", "\n", "lower", "=", "upper", "\n", "\n", "", "return", "ret", "\n", "\n"]]}