{"home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.None.train.train": [[16, 156], ["os.path.join", "data.data_loader.CreateDataLoader", "data.data_loader.CreateDataLoader.load_data", "len", "print", "models.models.create_model", "util.visualizer.Visualizer", "range", "print", "data_loader.load_data.dataset.set_sample_mode", "enumerate", "data_loader.load_data.dataset.set_sample_mode", "time.time", "enumerate", "time.time", "print", "time.time", "models.models.create_model.set_inputs", "models.models.create_model.update_D", "models.models.create_model.update_G", "dict", "print", "models.models.create_model.save", "models.models.create_model.save", "numpy.savetxt", "models.models.create_model.update_learning_rate", "numpy.loadtxt", "int", "data.items", "util.visualizer.Visualizer.print_current_errors", "collections.OrderedDict", "collections.OrderedDict", "collections.OrderedDict", "collections.OrderedDict", "collections.OrderedDict", "collections.OrderedDict.update", "collections.OrderedDict.update", "model.inference.update", "model.inference.update", "len", "util.visualizer.Visualizer.display_current_results", "print", "models.models.create_model.save", "numpy.savetxt", "models.models.create_model.eval", "models.models.create_model.inference", "util.visualizer.Visualizer.save_matrix_image", "models.models.create_model.train", "torch.is_tensor", "util.visualizer.Visualizer.plot_current_errors", "collections.OrderedDict.update", "collections.OrderedDict.update", "collections.OrderedDict.update", "collections.OrderedDict.update", "models.models.create_model.eval", "models.models.create_model.inference", "util.visualizer.Visualizer.save_matrix_image", "models.models.create_model.train", "torch.cat", "v.item", "dict.items", "time.time", "time.time", "float", "util.tensor2im", "util.tensor2im", "util.tensor2im", "util.tensor2im", "isinstance", "isinstance", "util.tensor2im", "util.tensor2im", "util.tensor2im", "util.tensor2im"], "function", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.data_loader.CreateDataLoader", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.data_loader.AgingDataLoader.load_data", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.models.create_model", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.multiclass_unaligned_dataset.MulticlassUnalignedDataset.set_sample_mode", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.multiclass_unaligned_dataset.MulticlassUnalignedDataset.set_sample_mode", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.LATS_model.LATS.set_inputs", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.LATS_model.LATS.update_D", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.LATS_model.LATS.update_G", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.base_model.BaseModel.save", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.base_model.BaseModel.save", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.base_model.BaseModel.update_learning_rate", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.visualizer.Visualizer.print_current_errors", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.visualizer.Visualizer.display_current_results", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.base_model.BaseModel.save", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.LATS_model.LATS.inference", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.visualizer.Visualizer.save_matrix_image", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.None.train.train", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.visualizer.Visualizer.plot_current_errors", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.LATS_model.LATS.inference", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.visualizer.Visualizer.save_matrix_image", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.None.train.train", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.util.tensor2im", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.util.tensor2im", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.util.tensor2im", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.util.tensor2im", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.util.tensor2im", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.util.tensor2im", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.util.tensor2im", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.util.tensor2im"], ["def", "train", "(", "opt", ")", ":", "\n", "    ", "iter_path", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "checkpoints_dir", ",", "opt", ".", "name", ",", "'iter.txt'", ")", "\n", "\n", "if", "opt", ".", "continue_train", ":", "\n", "        ", "if", "opt", ".", "which_epoch", "==", "'latest'", ":", "\n", "            ", "try", ":", "\n", "                ", "start_epoch", ",", "epoch_iter", "=", "np", ".", "loadtxt", "(", "iter_path", ",", "delimiter", "=", "','", ",", "dtype", "=", "int", ")", "\n", "", "except", ":", "\n", "                ", "start_epoch", ",", "epoch_iter", "=", "1", ",", "0", "\n", "", "", "else", ":", "\n", "            ", "start_epoch", ",", "epoch_iter", "=", "int", "(", "opt", ".", "which_epoch", ")", ",", "0", "\n", "\n", "", "print", "(", "'Resuming from epoch %d at iteration %d'", "%", "(", "start_epoch", ",", "epoch_iter", ")", ")", "\n", "for", "update_point", "in", "opt", ".", "decay_epochs", ":", "\n", "            ", "if", "start_epoch", "<", "update_point", ":", "\n", "                ", "break", "\n", "\n", "", "opt", ".", "lr", "*=", "opt", ".", "decay_gamma", "\n", "", "", "else", ":", "\n", "        ", "start_epoch", ",", "epoch_iter", "=", "0", ",", "0", "\n", "\n", "", "data_loader", "=", "CreateDataLoader", "(", "opt", ")", "\n", "dataset", "=", "data_loader", ".", "load_data", "(", ")", "\n", "dataset_size", "=", "len", "(", "data_loader", ")", "\n", "print", "(", "'#training images = %d'", "%", "dataset_size", ")", "\n", "\n", "model", "=", "create_model", "(", "opt", ")", "\n", "visualizer", "=", "Visualizer", "(", "opt", ")", "\n", "\n", "total_steps", "=", "(", "start_epoch", ")", "*", "dataset_size", "+", "epoch_iter", "\n", "\n", "display_delta", "=", "total_steps", "%", "opt", ".", "display_freq", "\n", "print_delta", "=", "total_steps", "%", "opt", ".", "print_freq", "\n", "save_delta", "=", "total_steps", "%", "opt", ".", "save_latest_freq", "\n", "bSize", "=", "opt", ".", "batchSize", "\n", "\n", "#in case there's no display sample one image from each class to test after every epoch", "\n", "if", "opt", ".", "display_id", "==", "0", ":", "\n", "        ", "dataset", ".", "dataset", ".", "set_sample_mode", "(", "True", ")", "\n", "dataset", ".", "num_workers", "=", "1", "\n", "for", "i", ",", "data", "in", "enumerate", "(", "dataset", ")", ":", "\n", "            ", "if", "i", "*", "opt", ".", "batchSize", ">=", "opt", ".", "numClasses", ":", "\n", "                ", "break", "\n", "", "if", "i", "==", "0", ":", "\n", "                ", "sample_data", "=", "data", "\n", "", "else", ":", "\n", "                ", "for", "key", ",", "value", "in", "data", ".", "items", "(", ")", ":", "\n", "                    ", "if", "torch", ".", "is_tensor", "(", "data", "[", "key", "]", ")", ":", "\n", "                        ", "sample_data", "[", "key", "]", "=", "torch", ".", "cat", "(", "(", "sample_data", "[", "key", "]", ",", "data", "[", "key", "]", ")", ",", "0", ")", "\n", "", "else", ":", "\n", "                        ", "sample_data", "[", "key", "]", "=", "sample_data", "[", "key", "]", "+", "data", "[", "key", "]", "\n", "", "", "", "", "dataset", ".", "num_workers", "=", "opt", ".", "nThreads", "\n", "dataset", ".", "dataset", ".", "set_sample_mode", "(", "False", ")", "\n", "\n", "", "for", "epoch", "in", "range", "(", "start_epoch", ",", "opt", ".", "epochs", ")", ":", "\n", "        ", "epoch_start_time", "=", "time", ".", "time", "(", ")", "\n", "if", "epoch", "!=", "start_epoch", ":", "\n", "            ", "epoch_iter", "=", "0", "\n", "", "for", "i", ",", "data", "in", "enumerate", "(", "dataset", ",", "start", "=", "epoch_iter", ")", ":", "\n", "            ", "iter_start_time", "=", "time", ".", "time", "(", ")", "\n", "total_steps", "+=", "opt", ".", "batchSize", "\n", "epoch_iter", "+=", "opt", ".", "batchSize", "\n", "\n", "# whether to collect output images", "\n", "save_fake", "=", "(", "total_steps", "%", "opt", ".", "display_freq", "==", "display_delta", ")", "and", "(", "opt", ".", "display_id", ">", "0", ")", "\n", "\n", "############## Network Pass ########################", "\n", "model", ".", "set_inputs", "(", "data", ")", "\n", "disc_losses", "=", "model", ".", "update_D", "(", ")", "\n", "gen_losses", ",", "gen_in", ",", "gen_out", ",", "rec_out", ",", "cyc_out", "=", "model", ".", "update_G", "(", "infer", "=", "save_fake", ")", "\n", "loss_dict", "=", "dict", "(", "gen_losses", ",", "**", "disc_losses", ")", "\n", "##################################################", "\n", "\n", "############## Display results and errors ##########", "\n", "### print out errors", "\n", "if", "total_steps", "%", "opt", ".", "print_freq", "==", "print_delta", ":", "\n", "                ", "errors", "=", "{", "k", ":", "v", ".", "item", "(", ")", "if", "not", "(", "isinstance", "(", "v", ",", "float", ")", "or", "isinstance", "(", "v", ",", "int", ")", ")", "else", "v", "for", "k", ",", "v", "in", "loss_dict", ".", "items", "(", ")", "}", "\n", "t", "=", "(", "time", ".", "time", "(", ")", "-", "iter_start_time", ")", "/", "opt", ".", "batchSize", "\n", "visualizer", ".", "print_current_errors", "(", "epoch", "+", "1", ",", "epoch_iter", ",", "errors", ",", "t", ")", "\n", "if", "opt", ".", "display_id", ">", "0", ":", "\n", "                    ", "visualizer", ".", "plot_current_errors", "(", "epoch", ",", "float", "(", "epoch_iter", ")", "/", "dataset_size", ",", "opt", ",", "errors", ")", "\n", "\n", "### display output images", "\n", "", "", "if", "save_fake", "and", "opt", ".", "display_id", ">", "0", ":", "\n", "                ", "class_a_suffix", "=", "' class {}'", ".", "format", "(", "data", "[", "'A_class'", "]", "[", "0", "]", ")", "\n", "class_b_suffix", "=", "' class {}'", ".", "format", "(", "data", "[", "'B_class'", "]", "[", "0", "]", ")", "\n", "classes", "=", "None", "\n", "\n", "visuals", "=", "OrderedDict", "(", ")", "\n", "visuals_A", "=", "OrderedDict", "(", "[", "(", "'real image'", "+", "class_a_suffix", ",", "util", ".", "tensor2im", "(", "gen_in", ".", "data", "[", "0", "]", ")", ")", "]", ")", "\n", "visuals_B", "=", "OrderedDict", "(", "[", "(", "'real image'", "+", "class_b_suffix", ",", "util", ".", "tensor2im", "(", "gen_in", ".", "data", "[", "bSize", "]", ")", ")", "]", ")", "\n", "\n", "A_out_vis", "=", "OrderedDict", "(", "[", "(", "'synthesized image'", "+", "class_b_suffix", ",", "util", ".", "tensor2im", "(", "gen_out", ".", "data", "[", "0", "]", ")", ")", "]", ")", "\n", "B_out_vis", "=", "OrderedDict", "(", "[", "(", "'synthesized image'", "+", "class_a_suffix", ",", "util", ".", "tensor2im", "(", "gen_out", ".", "data", "[", "bSize", "]", ")", ")", "]", ")", "\n", "if", "opt", ".", "lambda_rec", ">", "0", ":", "\n", "                    ", "A_out_vis", ".", "update", "(", "[", "(", "'reconstructed image'", "+", "class_a_suffix", ",", "util", ".", "tensor2im", "(", "rec_out", ".", "data", "[", "0", "]", ")", ")", "]", ")", "\n", "B_out_vis", ".", "update", "(", "[", "(", "'reconstructed image'", "+", "class_b_suffix", ",", "util", ".", "tensor2im", "(", "rec_out", ".", "data", "[", "bSize", "]", ")", ")", "]", ")", "\n", "", "if", "opt", ".", "lambda_cyc", ">", "0", ":", "\n", "                    ", "A_out_vis", ".", "update", "(", "[", "(", "'cycled image'", "+", "class_a_suffix", ",", "util", ".", "tensor2im", "(", "cyc_out", ".", "data", "[", "0", "]", ")", ")", "]", ")", "\n", "B_out_vis", ".", "update", "(", "[", "(", "'cycled image'", "+", "class_b_suffix", ",", "util", ".", "tensor2im", "(", "cyc_out", ".", "data", "[", "bSize", "]", ")", ")", "]", ")", "\n", "\n", "", "visuals_A", ".", "update", "(", "A_out_vis", ")", "\n", "visuals_B", ".", "update", "(", "B_out_vis", ")", "\n", "visuals", ".", "update", "(", "visuals_A", ")", "\n", "visuals", ".", "update", "(", "visuals_B", ")", "\n", "\n", "ncols", "=", "len", "(", "visuals_A", ")", "\n", "visualizer", ".", "display_current_results", "(", "visuals", ",", "epoch", ",", "classes", ",", "ncols", ")", "\n", "\n", "### save latest model", "\n", "", "if", "total_steps", "%", "opt", ".", "save_latest_freq", "==", "save_delta", ":", "\n", "                ", "print", "(", "'saving the latest model (epoch %d, total_steps %d)'", "%", "(", "epoch", "+", "1", ",", "total_steps", ")", ")", "\n", "model", ".", "save", "(", "'latest'", ")", "\n", "np", ".", "savetxt", "(", "iter_path", ",", "(", "epoch", ",", "epoch_iter", ")", ",", "delimiter", "=", "','", ",", "fmt", "=", "'%d'", ")", "\n", "if", "opt", ".", "display_id", "==", "0", ":", "\n", "                    ", "model", ".", "eval", "(", ")", "\n", "visuals", "=", "model", ".", "inference", "(", "sample_data", ")", "\n", "visualizer", ".", "save_matrix_image", "(", "visuals", ",", "'latest'", ")", "\n", "model", ".", "train", "(", ")", "\n", "\n", "# end of epoch", "\n", "", "", "", "iter_end_time", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "'End of epoch %d / %d \\t Time Taken: %d sec'", "%", "\n", "(", "epoch", "+", "1", ",", "opt", ".", "epochs", ",", "time", ".", "time", "(", ")", "-", "epoch_start_time", ")", ")", "\n", "\n", "### save model for this epoch", "\n", "if", "(", "epoch", "+", "1", ")", "%", "opt", ".", "save_epoch_freq", "==", "0", ":", "\n", "            ", "print", "(", "'saving the model at the end of epoch %d, iters %d'", "%", "(", "epoch", "+", "1", ",", "total_steps", ")", ")", "\n", "model", ".", "save", "(", "'latest'", ")", "\n", "model", ".", "save", "(", "epoch", "+", "1", ")", "\n", "np", ".", "savetxt", "(", "iter_path", ",", "(", "epoch", "+", "1", ",", "0", ")", ",", "delimiter", "=", "','", ",", "fmt", "=", "'%d'", ")", "\n", "if", "opt", ".", "display_id", "==", "0", ":", "\n", "                ", "model", ".", "eval", "(", ")", "\n", "visuals", "=", "model", ".", "inference", "(", "sample_data", ")", "\n", "visualizer", ".", "save_matrix_image", "(", "visuals", ",", "epoch", "+", "1", ")", "\n", "model", ".", "train", "(", ")", "\n", "\n", "### multiply learning rate by opt.decay_gamma after certain iterations", "\n", "", "", "if", "(", "epoch", "+", "1", ")", "in", "opt", ".", "decay_epochs", ":", "\n", "            ", "model", ".", "update_learning_rate", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.None.test.test": [[16, 85], ["data.data_loader.CreateDataLoader", "data.data_loader.CreateDataLoader.load_data", "len", "print", "util.visualizer.Visualizer", "models.models.create_model", "models.models.create_model.eval", "os.path.join", "os.path.join", "util.html.HTML", "enumerate", "int", "os.path.isdir", "os.makedirs", "print", "data_loader.load_data.dataset.get_item_from_path", "models.models.create_model.inference", "models.models.create_model.inference", "enumerate", "reversed", "util.visualizer.Visualizer.save_images", "html.HTML.save", "str", "os.path.join", "util.visualizer.Visualizer.make_video", "len", "util.visualizer.Visualizer.save_row_image", "os.path.join", "util.visualizer.Visualizer.save_images_deploy", "print", "os.path.join", "os.path.join", "os.path.basename", "os.path.splitext", "os.path.basename", "os.path.splitext", "os.path.splitext", "os.path.basename", "os.path.basename"], "function", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.data_loader.CreateDataLoader", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.data_loader.AgingDataLoader.load_data", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.models.create_model", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.multiclass_unaligned_dataset.MulticlassUnalignedDataset.get_item_from_path", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.LATS_model.LATS.inference", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.LATS_model.LATS.inference", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.visualizer.Visualizer.save_images", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.base_model.BaseModel.save", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.visualizer.Visualizer.make_video", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.visualizer.Visualizer.save_row_image", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.visualizer.Visualizer.save_images_deploy"], ["def", "test", "(", "opt", ")", ":", "\n", "    ", "opt", ".", "nThreads", "=", "1", "# test code only supports nThreads = 1", "\n", "opt", ".", "batchSize", "=", "1", "# test code only supports batchSize = 1", "\n", "opt", ".", "serial_batches", "=", "True", "# no shuffle", "\n", "opt", ".", "no_flip", "=", "True", "# no flip", "\n", "\n", "data_loader", "=", "CreateDataLoader", "(", "opt", ")", "\n", "dataset", "=", "data_loader", ".", "load_data", "(", ")", "\n", "dataset_size", "=", "len", "(", "data_loader", ")", "\n", "print", "(", "'#test batches = %d'", "%", "(", "int", "(", "dataset_size", "/", "len", "(", "opt", ".", "sort_order", ")", ")", ")", ")", "\n", "visualizer", "=", "Visualizer", "(", "opt", ")", "\n", "model", "=", "create_model", "(", "opt", ")", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "# create webpage", "\n", "if", "opt", ".", "random_seed", "!=", "-", "1", ":", "\n", "        ", "exp_dir", "=", "'%s_%s_seed%s'", "%", "(", "opt", ".", "phase", ",", "opt", ".", "which_epoch", ",", "str", "(", "opt", ".", "random_seed", ")", ")", "\n", "", "else", ":", "\n", "        ", "exp_dir", "=", "'%s_%s'", "%", "(", "opt", ".", "phase", ",", "opt", ".", "which_epoch", ")", "\n", "", "web_dir", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "results_dir", ",", "opt", ".", "name", ",", "exp_dir", ")", "\n", "\n", "if", "opt", ".", "traverse", "or", "opt", ".", "deploy", ":", "\n", "        ", "if", "opt", ".", "traverse", ":", "\n", "            ", "out_dirname", "=", "'traversal'", "\n", "", "else", ":", "\n", "            ", "out_dirname", "=", "'deploy'", "\n", "", "output_dir", "=", "os", ".", "path", ".", "join", "(", "web_dir", ",", "out_dirname", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "output_dir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "output_dir", ")", "\n", "\n", "", "for", "image_path", "in", "opt", ".", "image_path_list", ":", "\n", "            ", "print", "(", "image_path", ")", "\n", "data", "=", "dataset", ".", "dataset", ".", "get_item_from_path", "(", "image_path", ")", "\n", "visuals", "=", "model", ".", "inference", "(", "data", ")", "\n", "if", "opt", ".", "traverse", "and", "opt", ".", "make_video", ":", "\n", "                ", "out_path", "=", "os", ".", "path", ".", "join", "(", "output_dir", ",", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "image_path", ")", ")", "[", "0", "]", "+", "'.mp4'", ")", "\n", "visualizer", ".", "make_video", "(", "visuals", ",", "out_path", ")", "\n", "", "elif", "opt", ".", "traverse", "or", "(", "opt", ".", "deploy", "and", "opt", ".", "full_progression", ")", ":", "\n", "                ", "if", "opt", ".", "traverse", "and", "opt", ".", "compare_to_trained_outputs", ":", "\n", "                    ", "out_path", "=", "os", ".", "path", ".", "join", "(", "output_dir", ",", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "image_path", ")", ")", "[", "0", "]", "+", "'_compare_to_{}_jump_{}.png'", ".", "format", "(", "opt", ".", "compare_to_trained_class", ",", "opt", ".", "trained_class_jump", ")", ")", "\n", "", "else", ":", "\n", "                    ", "out_path", "=", "os", ".", "path", ".", "join", "(", "output_dir", ",", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "image_path", ")", ")", "[", "0", "]", "+", "'.png'", ")", "\n", "", "visualizer", ".", "save_row_image", "(", "visuals", ",", "out_path", ",", "traverse", "=", "opt", ".", "traverse", ")", "\n", "", "else", ":", "\n", "                ", "out_path", "=", "os", ".", "path", ".", "join", "(", "output_dir", ",", "os", ".", "path", ".", "basename", "(", "image_path", "[", ":", "-", "4", "]", ")", ")", "\n", "visualizer", ".", "save_images_deploy", "(", "visuals", ",", "out_path", ")", "\n", "", "", "", "else", ":", "\n", "        ", "webpage", "=", "html", ".", "HTML", "(", "web_dir", ",", "'Experiment = %s, Phase = %s, Epoch = %s'", "%", "(", "opt", ".", "name", ",", "opt", ".", "phase", ",", "opt", ".", "which_epoch", ")", ")", "\n", "\n", "# test", "\n", "for", "i", ",", "data", "in", "enumerate", "(", "dataset", ")", ":", "\n", "            ", "if", "i", ">=", "opt", ".", "how_many", ":", "\n", "                ", "break", "\n", "\n", "", "visuals", "=", "model", ".", "inference", "(", "data", ")", "\n", "img_path", "=", "data", "[", "'Paths'", "]", "\n", "rem_ind", "=", "[", "]", "\n", "for", "i", ",", "path", "in", "enumerate", "(", "img_path", ")", ":", "\n", "                ", "if", "path", "!=", "''", ":", "\n", "                    ", "print", "(", "'process image... %s'", "%", "path", ")", "\n", "", "else", ":", "\n", "                    ", "rem_ind", "+=", "[", "i", "]", "\n", "\n", "", "", "for", "ind", "in", "reversed", "(", "rem_ind", ")", ":", "\n", "                ", "del", "img_path", "[", "ind", "]", "\n", "\n", "", "visualizer", ".", "save_images", "(", "webpage", ",", "visuals", ",", "img_path", ")", "\n", "\n", "webpage", ".", "save", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.datasets.create_dataset.processIm": [[13, 47], ["os.path.basename", "os.path.join", "os.path.dirname", "float", "float", "float", "float", "float", "float", "float", "os.path.join", "os.path.join", "shutil.copy", "shutil.copy", "abs", "abs"], "function", ["None"], ["def", "processIm", "(", "img_filename", ",", "phase", ",", "csv_row", ",", "num", ")", ":", "\n", "    ", "img_basename", "=", "os", ".", "path", ".", "basename", "(", "img_filename", ")", "\n", "labels_filename", "=", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "dirname", "(", "img_filename", ")", ",", "'parsings'", ",", "img_basename", ")", "\n", "\n", "age", ",", "age_conf", "=", "csv_row", "[", "'age_group'", "]", ",", "float", "(", "csv_row", "[", "'age_group_confidence'", "]", ")", "\n", "gender", ",", "gender_conf", "=", "csv_row", "[", "'gender'", "]", ",", "float", "(", "csv_row", "[", "'gender_confidence'", "]", ")", "\n", "head_pitch", ",", "head_roll", ",", "head_yaw", "=", "float", "(", "csv_row", "[", "'head_pitch'", "]", ")", ",", "float", "(", "csv_row", "[", "'head_roll'", "]", ")", ",", "float", "(", "csv_row", "[", "'head_yaw'", "]", ")", "\n", "left_eye_occluded", ",", "right_eye_occluded", "=", "float", "(", "csv_row", "[", "'left_eye_occluded'", "]", ")", ",", "float", "(", "csv_row", "[", "'right_eye_occluded'", "]", ")", "\n", "glasses", "=", "csv_row", "[", "'glasses'", "]", "\n", "\n", "no_attributes_found", "=", "head_pitch", "==", "-", "1", "and", "head_roll", "==", "-", "1", "and", "head_yaw", "==", "-", "1", "and", "left_eye_occluded", "==", "-", "1", "and", "right_eye_occluded", "==", "-", "1", "and", "glasses", "==", "-", "1", "\n", "\n", "age_cond", "=", "age_conf", ">", "0.6", "\n", "gender_cond", "=", "gender_conf", ">", "0.66", "\n", "head_pose_cond", "=", "abs", "(", "head_pitch", ")", "<", "30.0", "and", "abs", "(", "head_yaw", ")", "<", "40.0", "\n", "eyes_cond", "=", "(", "left_eye_occluded", "<", "90.0", "and", "right_eye_occluded", "<", "50.0", ")", "or", "(", "left_eye_occluded", "<", "50.0", "and", "right_eye_occluded", "<", "90.0", ")", "\n", "glasses_cond", "=", "glasses", "!=", "'Dark'", "\n", "\n", "valid1", "=", "age_cond", "and", "gender_cond", "and", "no_attributes_found", "\n", "valid2", "=", "age_cond", "and", "gender_cond", "and", "head_pose_cond", "and", "eyes_cond", "and", "glasses_cond", "\n", "\n", "if", "gender", "==", "'male'", ":", "\n", "        ", "dst_gender", "=", "'males'", "\n", "", "else", ":", "\n", "        ", "dst_gender", "=", "'females'", "\n", "\n", "", "dst_cluster", "=", "phase", "+", "age", "\n", "\n", "if", "(", "valid1", "or", "valid2", ")", ":", "\n", "        ", "dst_path", "=", "os", ".", "path", ".", "join", "(", "dst_gender", ",", "dst_cluster", ",", "img_basename", ")", "\n", "parsing_dst_path", "=", "os", ".", "path", ".", "join", "(", "dst_gender", ",", "dst_cluster", ",", "'parsings'", ",", "img_basename", ")", "\n", "shutil", ".", "copy", "(", "img_filename", ",", "dst_path", ")", "\n", "shutil", ".", "copy", "(", "labels_filename", ",", "parsing_dst_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.datasets.create_dataset.create_dataset": [[49, 85], ["open", "csv.DictReader", "os.path.isdir", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "int", "str().zfill", "os.path.join", "os.path.isfile", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "print", "create_dataset.processIm", "print", "str", "str().zfill", "str().zfill", "str", "str"], "function", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.datasets.create_dataset.processIm"], ["", "", "def", "create_dataset", "(", "folder", ",", "labels_file", ",", "train_split", ")", ":", "\n", "# create all necessary subfolders", "\n", "    ", "for", "clust", "in", "clusters", ":", "\n", "        ", "trainMaleClusterPath", "=", "\"males/train\"", "+", "clust", "\n", "testMaleClusterPath", "=", "\"males/test\"", "+", "clust", "\n", "trainFemaleClusterPath", "=", "\"females/train\"", "+", "clust", "\n", "testFemleClusterPath", "=", "\"females/test\"", "+", "clust", "\n", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "trainMaleClusterPath", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "trainMaleClusterPath", ")", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "trainMaleClusterPath", ",", "'parsings'", ")", ")", "\n", "os", ".", "makedirs", "(", "testMaleClusterPath", ")", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "testMaleClusterPath", ",", "'parsings'", ")", ")", "\n", "os", ".", "makedirs", "(", "trainFemaleClusterPath", ")", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "trainFemaleClusterPath", ",", "'parsings'", ")", ")", "\n", "os", ".", "makedirs", "(", "testFemleClusterPath", ")", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "testFemleClusterPath", ",", "'parsings'", ")", ")", "\n", "\n", "# process images", "\n", "", "", "with", "open", "(", "labels_file", ",", "'r'", ",", "newline", "=", "''", ")", "as", "f", ":", "\n", "        ", "reader", "=", "csv", ".", "DictReader", "(", "f", ")", "\n", "for", "csv_row", "in", "reader", ":", "\n", "            ", "num", "=", "int", "(", "csv_row", "[", "'image_number'", "]", ")", "\n", "\n", "if", "num", "<", "train_split", ":", "\n", "                ", "phase", "=", "'train'", "\n", "", "else", ":", "\n", "                ", "phase", "=", "'test'", "\n", "\n", "", "subdir", "=", "str", "(", "num", "-", "(", "num", "%", "1000", ")", ")", ".", "zfill", "(", "5", ")", "\n", "img_filename", "=", "os", ".", "path", ".", "join", "(", "folder", ",", "subdir", ",", "str", "(", "num", ")", ".", "zfill", "(", "5", ")", "+", "'.png'", ")", "\n", "if", "os", ".", "path", ".", "isfile", "(", "img_filename", ")", ":", "\n", "                ", "print", "(", "'processing {}'", ".", "format", "(", "img_filename", ")", ")", "\n", "processIm", "(", "img_filename", ",", "phase", ",", "csv_row", ",", "num", ")", "\n", "", "else", ":", "\n", "                ", "print", "(", "'Image {}.png was not found'", ".", "format", "(", "str", "(", "num", ")", ".", "zfill", "(", "5", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.html.HTML.__init__": [[10, 23], ["os.path.join", "dominate.document", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "meta", "str"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "web_dir", ",", "title", ",", "refresh", "=", "0", ")", ":", "\n", "        ", "self", ".", "title", "=", "title", "\n", "self", ".", "web_dir", "=", "web_dir", "\n", "self", ".", "img_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "web_dir", ",", "'images'", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "web_dir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "self", ".", "web_dir", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "img_dir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "self", ".", "img_dir", ")", "\n", "\n", "", "self", ".", "doc", "=", "dominate", ".", "document", "(", "title", "=", "title", ")", "\n", "if", "refresh", ">", "0", ":", "\n", "            ", "with", "self", ".", "doc", ".", "head", ":", "\n", "                ", "meta", "(", "http_equiv", "=", "\"refresh\"", ",", "content", "=", "str", "(", "refresh", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.html.HTML.get_image_dir": [[24, 26], ["None"], "methods", ["None"], ["", "", "", "def", "get_image_dir", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "img_dir", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.html.HTML.add_header": [[27, 30], ["h3"], "methods", ["None"], ["", "def", "add_header", "(", "self", ",", "str", ")", ":", "\n", "        ", "with", "self", ".", "doc", ":", "\n", "            ", "h3", "(", "str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.html.HTML.add_table": [[31, 34], ["table", "html.HTML.doc.add"], "methods", ["None"], ["", "", "def", "add_table", "(", "self", ",", "border", "=", "1", ")", ":", "\n", "        ", "self", ".", "t", "=", "table", "(", "border", "=", "border", ",", "style", "=", "\"table-layout: fixed;\"", ")", "\n", "self", ".", "doc", ".", "add", "(", "self", ".", "t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.html.HTML.add_images": [[35, 62], ["len", "html.HTML.add_table", "int", "range", "tr", "zip", "math.ceil", "tr", "range", "td", "float", "float", "p", "br", "p", "td", "a", "img", "p", "br", "p", "a", "img", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.html.HTML.add_table"], ["", "def", "add_images", "(", "self", ",", "ims", ",", "txts", ",", "links", ",", "width", "=", "512", ",", "cols", "=", "0", ")", ":", "\n", "        ", "imNum", "=", "len", "(", "ims", ")", "\n", "self", ".", "add_table", "(", ")", "\n", "with", "self", ".", "t", ":", "\n", "            ", "if", "cols", "==", "0", ":", "\n", "                ", "with", "tr", "(", ")", ":", "\n", "                    ", "for", "im", ",", "txt", ",", "link", "in", "zip", "(", "ims", ",", "txts", ",", "links", ")", ":", "\n", "                        ", "with", "td", "(", "style", "=", "\"word-wrap: break-word;\"", ",", "halign", "=", "\"center\"", ",", "valign", "=", "\"top\"", ")", ":", "\n", "                            ", "with", "p", "(", ")", ":", "\n", "                                ", "with", "a", "(", "href", "=", "os", ".", "path", ".", "join", "(", "'images'", ",", "link", ")", ")", ":", "\n", "                                    ", "img", "(", "style", "=", "\"width:%dpx\"", "%", "width", ",", "src", "=", "os", ".", "path", ".", "join", "(", "'images'", ",", "im", ")", ")", "\n", "", "br", "(", ")", "\n", "p", "(", "txt", ")", "\n", "", "", "", "", "", "else", ":", "\n", "                ", "rows", "=", "int", "(", "math", ".", "ceil", "(", "float", "(", "imNum", ")", "/", "float", "(", "cols", ")", ")", ")", "\n", "for", "i", "in", "range", "(", "rows", ")", ":", "\n", "                    ", "with", "tr", "(", ")", ":", "\n", "                        ", "for", "j", "in", "range", "(", "cols", ")", ":", "\n", "                            ", "im", "=", "ims", "[", "i", "*", "cols", "+", "j", "]", "\n", "txt", "=", "txts", "[", "i", "*", "cols", "+", "j", "]", "\n", "link", "=", "links", "[", "i", "*", "cols", "+", "j", "]", "\n", "with", "td", "(", "style", "=", "\"word-wrap: break-word;\"", ",", "halign", "=", "\"center\"", ",", "valign", "=", "\"top\"", ")", ":", "\n", "                                ", "with", "p", "(", ")", ":", "\n", "                                    ", "with", "a", "(", "href", "=", "os", ".", "path", ".", "join", "(", "'images'", ",", "link", ")", ")", ":", "\n", "                                        ", "img", "(", "style", "=", "\"width:%dpx\"", "%", "width", ",", "src", "=", "os", ".", "path", ".", "join", "(", "'images'", ",", "im", ")", ")", "\n", "", "br", "(", ")", "\n", "p", "(", "txt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.html.HTML.save": [[63, 68], ["open", "open.write", "open.close", "html.HTML.doc.render"], "methods", ["None"], ["", "", "", "", "", "", "", "", "def", "save", "(", "self", ")", ":", "\n", "        ", "html_file", "=", "'%s/index.html'", "%", "self", ".", "web_dir", "\n", "f", "=", "open", "(", "html_file", ",", "'wt'", ")", "\n", "f", ".", "write", "(", "self", ".", "doc", ".", "render", "(", ")", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.deeplab.Conv2d.__init__": [[30, 34], ["torch.Conv2d.__init__"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.options.base_options.BaseOptions.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "Conv2d", ",", "self", ")", ".", "__init__", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "\n", "padding", ",", "dilation", ",", "groups", ",", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.deeplab.Conv2d.forward": [[35, 45], ["weight.mean().mean().mean", "torch.nn.functional.conv2d", "torch.nn.functional.conv2d", "torch.nn.functional.conv2d", "weight.view().std().view", "std.expand_as", "weight.mean().mean", "weight.view().std", "weight.mean", "weight.view", "weight.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# return super(Conv2d, self).forward(x)", "\n", "        ", "weight", "=", "self", ".", "weight", "\n", "weight_mean", "=", "weight", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ".", "mean", "(", "dim", "=", "2", ",", "\n", "keepdim", "=", "True", ")", ".", "mean", "(", "dim", "=", "3", ",", "keepdim", "=", "True", ")", "\n", "weight", "=", "weight", "-", "weight_mean", "\n", "std", "=", "weight", ".", "view", "(", "weight", ".", "size", "(", "0", ")", ",", "-", "1", ")", ".", "std", "(", "dim", "=", "1", ")", ".", "view", "(", "-", "1", ",", "1", ",", "1", ",", "1", ")", "+", "1e-5", "\n", "weight", "=", "weight", "/", "std", ".", "expand_as", "(", "weight", ")", "\n", "return", "F", ".", "conv2d", "(", "x", ",", "weight", ",", "self", ".", "bias", ",", "self", ".", "stride", ",", "\n", "self", ".", "padding", ",", "self", ".", "dilation", ",", "self", ".", "groups", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.deeplab.ASPP.__init__": [[49, 77], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "conv", "conv", "conv", "conv", "conv", "norm", "norm", "norm", "norm", "norm", "conv", "norm", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "int", "int", "int", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.options.base_options.BaseOptions.__init__"], ["    ", "def", "__init__", "(", "self", ",", "C", ",", "depth", ",", "num_classes", ",", "conv", "=", "nn", ".", "Conv2d", ",", "norm", "=", "nn", ".", "BatchNorm2d", ",", "momentum", "=", "0.0003", ",", "mult", "=", "1", ")", ":", "\n", "        ", "super", "(", "ASPP", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_C", "=", "C", "\n", "self", ".", "_depth", "=", "depth", "\n", "self", ".", "_num_classes", "=", "num_classes", "\n", "\n", "self", ".", "global_pooling", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "aspp1", "=", "conv", "(", "C", ",", "depth", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "aspp2", "=", "conv", "(", "C", ",", "depth", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "\n", "dilation", "=", "int", "(", "6", "*", "mult", ")", ",", "padding", "=", "int", "(", "6", "*", "mult", ")", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "aspp3", "=", "conv", "(", "C", ",", "depth", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "\n", "dilation", "=", "int", "(", "12", "*", "mult", ")", ",", "padding", "=", "int", "(", "12", "*", "mult", ")", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "aspp4", "=", "conv", "(", "C", ",", "depth", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "\n", "dilation", "=", "int", "(", "18", "*", "mult", ")", ",", "padding", "=", "int", "(", "18", "*", "mult", ")", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "aspp5", "=", "conv", "(", "C", ",", "depth", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "aspp1_bn", "=", "norm", "(", "depth", ",", "momentum", ")", "\n", "self", ".", "aspp2_bn", "=", "norm", "(", "depth", ",", "momentum", ")", "\n", "self", ".", "aspp3_bn", "=", "norm", "(", "depth", ",", "momentum", ")", "\n", "self", ".", "aspp4_bn", "=", "norm", "(", "depth", ",", "momentum", ")", "\n", "self", ".", "aspp5_bn", "=", "norm", "(", "depth", ",", "momentum", ")", "\n", "self", ".", "conv2", "=", "conv", "(", "depth", "*", "5", ",", "depth", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "norm", "(", "depth", ",", "momentum", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "depth", ",", "num_classes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.deeplab.ASPP.forward": [[78, 104], ["deeplab.ASPP.aspp1", "deeplab.ASPP.aspp1_bn", "deeplab.ASPP.relu", "deeplab.ASPP.aspp2", "deeplab.ASPP.aspp2_bn", "deeplab.ASPP.relu", "deeplab.ASPP.aspp3", "deeplab.ASPP.aspp3_bn", "deeplab.ASPP.relu", "deeplab.ASPP.aspp4", "deeplab.ASPP.aspp4_bn", "deeplab.ASPP.relu", "deeplab.ASPP.global_pooling", "deeplab.ASPP.aspp5", "deeplab.ASPP.aspp5_bn", "deeplab.ASPP.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "deeplab.ASPP.conv2", "deeplab.ASPP.bn2", "deeplab.ASPP.relu", "deeplab.ASPP.conv3", "torch.Upsample", "torch.Upsample", "torch.Upsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x1", "=", "self", ".", "aspp1", "(", "x", ")", "\n", "x1", "=", "self", ".", "aspp1_bn", "(", "x1", ")", "\n", "x1", "=", "self", ".", "relu", "(", "x1", ")", "\n", "x2", "=", "self", ".", "aspp2", "(", "x", ")", "\n", "x2", "=", "self", ".", "aspp2_bn", "(", "x2", ")", "\n", "x2", "=", "self", ".", "relu", "(", "x2", ")", "\n", "x3", "=", "self", ".", "aspp3", "(", "x", ")", "\n", "x3", "=", "self", ".", "aspp3_bn", "(", "x3", ")", "\n", "x3", "=", "self", ".", "relu", "(", "x3", ")", "\n", "x4", "=", "self", ".", "aspp4", "(", "x", ")", "\n", "x4", "=", "self", ".", "aspp4_bn", "(", "x4", ")", "\n", "x4", "=", "self", ".", "relu", "(", "x4", ")", "\n", "x5", "=", "self", ".", "global_pooling", "(", "x", ")", "\n", "x5", "=", "self", ".", "aspp5", "(", "x5", ")", "\n", "x5", "=", "self", ".", "aspp5_bn", "(", "x5", ")", "\n", "x5", "=", "self", ".", "relu", "(", "x5", ")", "\n", "x5", "=", "nn", ".", "Upsample", "(", "(", "x", ".", "shape", "[", "2", "]", ",", "x", ".", "shape", "[", "3", "]", ")", ",", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "True", ")", "(", "x5", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x1", ",", "x2", ",", "x3", ",", "x4", ",", "x5", ")", ",", "1", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "x", "=", "self", ".", "bn2", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "conv3", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.deeplab.Bottleneck.__init__": [[109, 121], ["torch.Module.__init__", "conv", "norm", "conv", "norm", "conv", "norm", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.options.base_options.BaseOptions.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "dilation", "=", "1", ",", "conv", "=", "None", ",", "norm", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "norm", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "conv", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "dilation", "=", "dilation", ",", "padding", "=", "dilation", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "norm", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "conv", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "norm", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.deeplab.Bottleneck.forward": [[122, 143], ["deeplab.Bottleneck.conv1", "deeplab.Bottleneck.bn1", "deeplab.Bottleneck.relu", "deeplab.Bottleneck.conv2", "deeplab.Bottleneck.bn2", "deeplab.Bottleneck.relu", "deeplab.Bottleneck.conv3", "deeplab.Bottleneck.bn3", "deeplab.Bottleneck.relu", "deeplab.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.deeplab.ResNet.__init__": [[147, 178], ["torch.Module.__init__", "deeplab.ResNet.norm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "deeplab.ResNet._make_layer", "deeplab.ResNet._make_layer", "deeplab.ResNet._make_layer", "deeplab.ResNet._make_layer", "deeplab.ASPP", "deeplab.ResNet.modules", "deeplab.ResNet.conv", "torch.Sequential", "torch.Sequential", "torch.Sequential", "isinstance", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "deeplab.ResNet.conv", "deeplab.ResNet.conv", "deeplab.ResNet.conv", "m.weight.data.normal_", "math.sqrt", "isinstance", "isinstance", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.options.base_options.BaseOptions.__init__", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.deeplab.ResNet._make_layer", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.deeplab.ResNet._make_layer", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.deeplab.ResNet._make_layer", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.deeplab.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "num_classes", ",", "num_groups", "=", "None", ",", "weight_std", "=", "False", ",", "beta", "=", "False", ")", ":", "\n", "        ", "self", ".", "inplanes", "=", "64", "\n", "self", ".", "norm", "=", "lambda", "planes", ",", "momentum", "=", "0.05", ":", "nn", ".", "BatchNorm2d", "(", "planes", ",", "momentum", "=", "momentum", ")", "if", "num_groups", "is", "None", "else", "nn", ".", "GroupNorm", "(", "num_groups", ",", "planes", ")", "\n", "self", ".", "conv", "=", "Conv2d", "if", "weight_std", "else", "nn", ".", "Conv2d", "\n", "\n", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "not", "beta", ":", "\n", "            ", "self", ".", "conv1", "=", "self", ".", "conv", "(", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "\n", "bias", "=", "False", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "\n", "self", ".", "conv", "(", "3", ",", "64", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "self", ".", "conv", "(", "64", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "self", ".", "conv", "(", "64", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ")", "\n", "", "self", ".", "bn1", "=", "self", ".", "norm", "(", "64", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "1", ",", "\n", "dilation", "=", "2", ")", "\n", "self", ".", "aspp", "=", "ASPP", "(", "512", "*", "block", ".", "expansion", ",", "256", ",", "num_classes", ",", "conv", "=", "self", ".", "conv", ",", "norm", "=", "self", ".", "norm", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "self", ".", "conv", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", "or", "isinstance", "(", "m", ",", "nn", ".", "GroupNorm", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.deeplab.ResNet._make_layer": [[179, 195], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "deeplab.ResNet.conv", "deeplab.ResNet.norm", "block", "max", "max"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "dilation", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "self", ".", "conv", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "dilation", "=", "max", "(", "1", ",", "dilation", "/", "2", ")", ",", "bias", "=", "False", ")", ",", "\n", "self", ".", "norm", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ",", "dilation", "=", "max", "(", "1", ",", "dilation", "/", "2", ")", ",", "conv", "=", "self", ".", "conv", ",", "norm", "=", "self", ".", "norm", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "dilation", "=", "dilation", ",", "conv", "=", "self", ".", "conv", ",", "norm", "=", "self", ".", "norm", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.deeplab.ResNet.forward": [[196, 211], ["deeplab.ResNet.conv1", "deeplab.ResNet.bn1", "deeplab.ResNet.relu", "deeplab.ResNet.maxpool", "deeplab.ResNet.layer1", "deeplab.ResNet.layer2", "deeplab.ResNet.layer3", "deeplab.ResNet.layer4", "deeplab.ResNet.aspp", "torch.Upsample", "torch.Upsample", "torch.Upsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "size", "=", "(", "x", ".", "shape", "[", "2", "]", ",", "x", ".", "shape", "[", "3", "]", ")", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "aspp", "(", "x", ")", "\n", "x", "=", "nn", ".", "Upsample", "(", "size", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.deeplab.resnet50": [[213, 223], ["deeplab.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "", "def", "resnet50", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-50 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet50'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.deeplab.resnet101": [[225, 246], ["deeplab.ResNet", "ResNet.state_dict", "model.state_dict.update", "ResNet.load_state_dict", "torch.load", "torch.load", "torch.load", "len", "torch.load_url", "ValueError", "model_zoo.load_url.items", "model_zoo.load_url.items"], "function", ["None"], ["", "def", "resnet101", "(", "pretrained", "=", "False", ",", "num_groups", "=", "None", ",", "weight_std", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-101 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "num_groups", "=", "num_groups", ",", "weight_std", "=", "weight_std", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "if", "num_groups", "and", "weight_std", ":", "\n", "            ", "pretrained_dict", "=", "torch", ".", "load", "(", "'deeplab_model/R-101-GN-WS.pth.tar'", ")", "\n", "overlap_dict", "=", "{", "k", "[", "7", ":", "]", ":", "v", "for", "k", ",", "v", "in", "pretrained_dict", ".", "items", "(", ")", "if", "k", "[", "7", ":", "]", "in", "model_dict", "}", "\n", "assert", "len", "(", "overlap_dict", ")", "==", "312", "\n", "", "elif", "not", "num_groups", "and", "not", "weight_std", ":", "\n", "            ", "pretrained_dict", "=", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet101'", "]", ")", "\n", "overlap_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "pretrained_dict", ".", "items", "(", ")", "if", "k", "in", "model_dict", "}", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'Currently only support BN or GN+WS'", ")", "\n", "", "model_dict", ".", "update", "(", "overlap_dict", ")", "\n", "model", ".", "load_state_dict", "(", "model_dict", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.deeplab.resnet152": [[248, 258], ["deeplab.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet152", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-152 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet152'", "]", ")", ")", "\n", "", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.visualizer.Visualizer.__init__": [[13, 40], ["os.path.join", "os.path.join", "visdom.Visdom", "os.path.join", "os.path.join", "print", "util.mkdirs", "open", "time.strftime", "log_file.write"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.util.mkdirs"], ["    ", "def", "__init__", "(", "self", ",", "opt", ")", ":", "\n", "# self.opt = opt", "\n", "        ", "self", ".", "display_id", "=", "opt", ".", "display_id", "\n", "self", ".", "use_html", "=", "opt", ".", "isTrain", "and", "not", "opt", ".", "no_html", "\n", "self", ".", "win_size", "=", "opt", ".", "display_winsize", "\n", "self", ".", "name", "=", "opt", ".", "name", "\n", "self", ".", "numClasses", "=", "opt", ".", "numClasses", "\n", "self", ".", "img_dir", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "checkpoints_dir", ",", "opt", ".", "name", ",", "'images'", ")", "\n", "self", ".", "isTrain", "=", "opt", ".", "isTrain", "\n", "if", "self", ".", "isTrain", ":", "\n", "            ", "self", ".", "save_freq", "=", "opt", ".", "save_display_freq", "\n", "\n", "", "if", "self", ".", "display_id", ">", "0", ":", "\n", "            ", "import", "visdom", "\n", "self", ".", "vis", "=", "visdom", ".", "Visdom", "(", "port", "=", "opt", ".", "display_port", ")", "\n", "self", ".", "display_single_pane_ncols", "=", "opt", ".", "display_single_pane_ncols", "\n", "\n", "", "if", "self", ".", "use_html", ":", "\n", "            ", "self", ".", "web_dir", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "checkpoints_dir", ",", "opt", ".", "name", ",", "'web'", ")", "\n", "self", ".", "img_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "web_dir", ",", "'images'", ")", "\n", "print", "(", "'create web directory %s...'", "%", "self", ".", "web_dir", ")", "\n", "util", ".", "mkdirs", "(", "[", "self", ".", "web_dir", ",", "self", ".", "img_dir", "]", ")", "\n", "", "self", ".", "log_name", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "checkpoints_dir", ",", "opt", ".", "name", ",", "'loss_log.txt'", ")", "\n", "if", "self", ".", "isTrain", ":", "\n", "            ", "with", "open", "(", "self", ".", "log_name", ",", "\"a\"", ")", "as", "log_file", ":", "\n", "                ", "now", "=", "time", ".", "strftime", "(", "\"%c\"", ")", "\n", "log_file", ".", "write", "(", "'================ Training Loss (%s) ================\\n'", "%", "now", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.visualizer.Visualizer.display_current_results": [[42, 86], ["int", "visuals.items", "visualizer.Visualizer.vis.images", "visualizer.Visualizer.vis.text", "visuals.items", "numpy.ceil", "images.append", "numpy.ones_like", "images.append", "visualizer.Visualizer.vis.image", "next", "numpy.expand_dims", "numpy.tile", "numpy.tile.transpose", "numpy.tile.transpose", "dict", "dict", "numpy.tile.transpose", "iter", "len", "dict", "visuals.values", "visuals.items"], "methods", ["None"], ["", "", "", "def", "display_current_results", "(", "self", ",", "visuals", ",", "it", ",", "classes", ",", "ncols", ")", ":", "\n", "        ", "if", "self", ".", "display_single_pane_ncols", ">", "0", ":", "\n", "            ", "h", ",", "w", "=", "next", "(", "iter", "(", "visuals", ".", "values", "(", ")", ")", ")", ".", "shape", "[", ":", "2", "]", "\n", "table_css", "=", "\"\"\"<style>\ntable {border-collapse: separate; border-spacing:4px; white-space:nowrap; text-align:center}\ntable td {width: %dpx; height: %dpx; padding: 4px; outline: 4px solid black}\n</style>\"\"\"", "%", "(", "w", ",", "h", ")", "\n", "# ncols = self.display_single_pane_ncols", "\n", "title", "=", "self", ".", "name", "\n", "label_html", "=", "''", "\n", "label_html_row", "=", "''", "\n", "nrows", "=", "int", "(", "np", ".", "ceil", "(", "len", "(", "visuals", ".", "items", "(", ")", ")", "/", "ncols", ")", ")", "\n", "images", "=", "[", "]", "\n", "idx", "=", "0", "\n", "for", "label", ",", "image_numpy", "in", "visuals", ".", "items", "(", ")", ":", "\n", "                ", "label_html_row", "+=", "'<td>%s</td>'", "%", "label", "\n", "if", "image_numpy", ".", "ndim", "<", "3", ":", "\n", "                    ", "image_numpy", "=", "np", ".", "expand_dims", "(", "image_numpy", ",", "2", ")", "\n", "image_numpy", "=", "np", ".", "tile", "(", "image_numpy", ",", "(", "1", ",", "1", ",", "3", ")", ")", "\n", "\n", "", "images", ".", "append", "(", "image_numpy", ".", "transpose", "(", "[", "2", ",", "0", ",", "1", "]", ")", ")", "\n", "idx", "+=", "1", "\n", "if", "idx", "%", "ncols", "==", "0", ":", "\n", "                    ", "label_html", "+=", "'<tr>%s</tr>'", "%", "label_html_row", "\n", "label_html_row", "=", "''", "\n", "", "", "white_image", "=", "np", ".", "ones_like", "(", "image_numpy", ".", "transpose", "(", "[", "2", ",", "0", ",", "1", "]", ")", ")", "*", "255", "\n", "while", "idx", "%", "ncols", "!=", "0", ":", "\n", "                ", "images", ".", "append", "(", "white_image", ")", "\n", "label_html_row", "+=", "'<td></td>'", "\n", "idx", "+=", "1", "\n", "", "if", "label_html_row", "!=", "''", ":", "\n", "                ", "label_html", "+=", "'<tr>%s</tr>'", "%", "label_html_row", "\n", "\n", "", "self", ".", "vis", ".", "images", "(", "images", ",", "nrow", "=", "ncols", ",", "win", "=", "self", ".", "display_id", "+", "1", ",", "\n", "padding", "=", "2", ",", "opts", "=", "dict", "(", "title", "=", "title", "+", "' images'", ")", ")", "\n", "label_html", "=", "'<table>%s</table>'", "%", "label_html", "\n", "self", ".", "vis", ".", "text", "(", "table_css", "+", "label_html", ",", "win", "=", "self", ".", "display_id", "+", "2", ",", "\n", "opts", "=", "dict", "(", "title", "=", "title", "+", "' labels'", ")", ")", "\n", "", "else", ":", "\n", "            ", "idx", "=", "1", "\n", "for", "label", ",", "image_numpy", "in", "visuals", ".", "items", "(", ")", ":", "\n", "                ", "self", ".", "vis", ".", "image", "(", "image_numpy", ".", "transpose", "(", "[", "2", ",", "0", ",", "1", "]", ")", ",", "opts", "=", "dict", "(", "title", "=", "label", ")", ",", "\n", "win", "=", "self", ".", "display_id", "+", "idx", ")", "\n", "idx", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.visualizer.Visualizer.plot_current_errors": [[89, 103], ["visualizer.Visualizer.plot_data[].append", "visualizer.Visualizer.plot_data[].append", "visualizer.Visualizer.vis.line", "hasattr", "list", "numpy.stack", "numpy.array", "errors.keys", "len", "numpy.array"], "methods", ["None"], ["", "", "", "def", "plot_current_errors", "(", "self", ",", "epoch", ",", "counter_ratio", ",", "opt", ",", "errors", ")", ":", "\n", "        ", "if", "not", "hasattr", "(", "self", ",", "'plot_data'", ")", ":", "\n", "            ", "self", ".", "plot_data", "=", "{", "'X'", ":", "[", "]", ",", "'Y'", ":", "[", "]", ",", "'legend'", ":", "list", "(", "errors", ".", "keys", "(", ")", ")", "}", "\n", "", "self", ".", "plot_data", "[", "'X'", "]", ".", "append", "(", "epoch", "+", "counter_ratio", ")", "\n", "self", ".", "plot_data", "[", "'Y'", "]", ".", "append", "(", "[", "errors", "[", "k", "]", "for", "k", "in", "self", ".", "plot_data", "[", "'legend'", "]", "]", ")", "\n", "self", ".", "vis", ".", "line", "(", "\n", "X", "=", "np", ".", "stack", "(", "[", "np", ".", "array", "(", "self", ".", "plot_data", "[", "'X'", "]", ")", "]", "*", "len", "(", "self", ".", "plot_data", "[", "'legend'", "]", ")", ",", "1", ")", ",", "\n", "Y", "=", "np", ".", "array", "(", "self", ".", "plot_data", "[", "'Y'", "]", ")", ",", "\n", "opts", "=", "{", "\n", "'title'", ":", "self", ".", "name", "+", "' loss over time'", ",", "\n", "'legend'", ":", "self", ".", "plot_data", "[", "'legend'", "]", ",", "\n", "'xlabel'", ":", "'epoch'", ",", "\n", "'ylabel'", ":", "'loss'", "}", ",", "\n", "win", "=", "self", ".", "display_id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.visualizer.Visualizer.print_current_errors": [[105, 113], ["errors.items", "print", "open", "log_file.write"], "methods", ["None"], ["", "def", "print_current_errors", "(", "self", ",", "epoch", ",", "i", ",", "errors", ",", "t", ")", ":", "\n", "        ", "message", "=", "'(epoch: %d, iters: %d, time: %.3f) '", "%", "(", "epoch", ",", "i", ",", "t", ")", "\n", "for", "k", ",", "v", "in", "errors", ".", "items", "(", ")", ":", "\n", "            ", "message", "+=", "'%s: %.3f '", "%", "(", "k", ",", "v", ")", "\n", "\n", "", "print", "(", "message", ")", "\n", "with", "open", "(", "self", ".", "log_name", ",", "\"a\"", ")", "as", "log_file", ":", "\n", "            ", "log_file", ".", "write", "(", "'%s\\n'", "%", "message", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.visualizer.Visualizer.save_matrix_image": [[114, 135], ["range", "os.path.join", "util.save_image", "len", "range", "numpy.concatenate", "numpy.concatenate", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.util.save_image"], ["", "", "def", "save_matrix_image", "(", "self", ",", "visuals", ",", "epoch", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "visuals", ")", ")", ":", "\n", "            ", "visual", "=", "visuals", "[", "i", "]", "\n", "orig_img", "=", "visual", "[", "'orig_img_cls_'", "+", "str", "(", "i", ")", "]", "\n", "curr_row_img", "=", "orig_img", "\n", "for", "cls", "in", "range", "(", "self", ".", "numClasses", ")", ":", "\n", "                ", "next_im", "=", "visual", "[", "'tex_trans_to_class_'", "+", "str", "(", "cls", ")", "]", "\n", "curr_row_img", "=", "np", ".", "concatenate", "(", "(", "curr_row_img", ",", "next_im", ")", ",", "1", ")", "\n", "\n", "", "if", "i", "==", "0", ":", "\n", "                ", "matrix_img", "=", "curr_row_img", "\n", "", "else", ":", "\n", "                ", "matrix_img", "=", "np", ".", "concatenate", "(", "(", "matrix_img", ",", "curr_row_img", ")", ",", "0", ")", "\n", "\n", "", "", "if", "epoch", "!=", "'latest'", ":", "\n", "            ", "epoch_txt", "=", "'epoch_'", "+", "str", "(", "epoch", ")", "\n", "", "else", ":", "\n", "            ", "epoch_txt", "=", "epochs", "\n", "\n", "", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "img_dir", ",", "'sample_batch_{}.png'", ".", "format", "(", "epoch_txt", ")", ")", "\n", "util", ".", "save_image", "(", "matrix_img", ",", "image_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.visualizer.Visualizer.save_row_image": [[136, 150], ["numpy.concatenate", "range", "util.save_image", "numpy.concatenate", "numpy.full", "len", "str"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.util.save_image"], ["", "def", "save_row_image", "(", "self", ",", "visuals", ",", "image_path", ",", "traverse", "=", "False", ")", ":", "\n", "        ", "visual", "=", "visuals", "[", "0", "]", "\n", "orig_img", "=", "visual", "[", "'orig_img'", "]", "\n", "h", ",", "w", ",", "c", "=", "orig_img", ".", "shape", "\n", "traversal_img", "=", "np", ".", "concatenate", "(", "(", "orig_img", ",", "np", ".", "full", "(", "(", "h", ",", "10", ",", "c", ")", ",", "255", ",", "dtype", "=", "np", ".", "uint8", ")", ")", ",", "1", ")", "\n", "if", "traverse", ":", "\n", "            ", "out_classes", "=", "len", "(", "visual", ")", "-", "1", "\n", "", "else", ":", "\n", "            ", "out_classes", "=", "self", ".", "numClasses", "\n", "", "for", "cls", "in", "range", "(", "out_classes", ")", ":", "\n", "            ", "next_im", "=", "visual", "[", "'tex_trans_to_class_'", "+", "str", "(", "cls", ")", "]", "\n", "traversal_img", "=", "np", ".", "concatenate", "(", "(", "traversal_img", ",", "next_im", ")", ",", "1", ")", "\n", "\n", "", "util", ".", "save_image", "(", "traversal_img", ",", "image_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.visualizer.Visualizer.make_video": [[151, 163], ["cv2.VideoWriter", "range", "cv2.VideoWriter.release", "cv2.VideoWriter_fourcc", "len", "cv2.VideoWriter.write", "str"], "methods", ["None"], ["", "def", "make_video", "(", "self", ",", "visuals", ",", "video_path", ")", ":", "\n", "        ", "fps", "=", "20", "#25", "\n", "visual", "=", "visuals", "[", "0", "]", "\n", "orig_img", "=", "visual", "[", "'orig_img'", "]", "\n", "h", ",", "w", "=", "orig_img", ".", "shape", "[", "0", "]", ",", "orig_img", ".", "shape", "[", "1", "]", "\n", "writer", "=", "cv2", ".", "VideoWriter", "(", "video_path", ",", "cv2", ".", "VideoWriter_fourcc", "(", "*", "'mp4v'", ")", ",", "fps", ",", "(", "w", ",", "h", ")", ")", "\n", "out_classes", "=", "len", "(", "visual", ")", "-", "1", "\n", "for", "cls", "in", "range", "(", "out_classes", ")", ":", "\n", "            ", "next_im", "=", "visual", "[", "'tex_trans_to_class_'", "+", "str", "(", "cls", ")", "]", "\n", "writer", ".", "write", "(", "next_im", "[", ":", ",", ":", ",", ":", ":", "-", "1", "]", ")", "\n", "\n", "", "writer", ".", "release", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.visualizer.Visualizer.save_images_deploy": [[165, 171], ["range", "len", "visual.items", "util.save_image"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.util.save_image"], ["", "def", "save_images_deploy", "(", "self", ",", "visuals", ",", "image_path", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "visuals", ")", ")", ":", "\n", "            ", "visual", "=", "visuals", "[", "i", "]", "\n", "for", "label", ",", "image_numpy", "in", "visual", ".", "items", "(", ")", ":", "\n", "                ", "save_path", "=", "'%s_%s.png'", "%", "(", "image_path", ",", "label", ")", "\n", "util", ".", "save_image", "(", "image_numpy", ",", "save_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.visualizer.Visualizer.save_images": [[174, 240], ["webpage.get_image_dir", "range", "len", "range", "len", "os.path.basename", "unidecode.unidecode", "webpage.add_header", "visual.items", "webpage.add_images", "os.path.basename", "gt_visuals.items", "os.path.basename", "visuals[].items", "print", "webpage.add_header", "webpage.add_images", "os.path.join", "util.save_image", "ims.append", "txts.append", "links.append", "os.path.splitext", "os.path.join", "util.save_image", "gt_ims.append", "gt_txts.append", "gt_links.append", "os.path.splitext", "os.path.join", "util.save_image", "ims.append", "txts.append", "links.append", "webpage.add_header", "webpage.add_images", "os.path.splitext"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.html.HTML.get_image_dir", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.html.HTML.add_header", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.html.HTML.add_images", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.html.HTML.add_header", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.html.HTML.add_images", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.util.save_image", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.util.save_image", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.util.save_image", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.html.HTML.add_header", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.html.HTML.add_images"], ["", "", "", "def", "save_images", "(", "self", ",", "webpage", ",", "visuals", ",", "image_path", ",", "gt_visuals", "=", "None", ",", "gt_path", "=", "None", ")", ":", "\n", "        ", "cols", "=", "self", ".", "numClasses", "+", "1", "\n", "image_dir", "=", "webpage", ".", "get_image_dir", "(", ")", "\n", "if", "gt_visuals", "==", "None", "or", "gt_path", "==", "None", ":", "\n", "            ", "for", "i", "in", "range", "(", "len", "(", "visuals", ")", ")", ":", "\n", "                ", "visual", "=", "visuals", "[", "i", "]", "\n", "short_path", "=", "os", ".", "path", ".", "basename", "(", "image_path", "[", "i", "]", ")", "\n", "name", "=", "unidecode", ".", "unidecode", "(", "os", ".", "path", ".", "splitext", "(", "short_path", ")", "[", "0", "]", ")", "#removes accents which cause html load error", "\n", "webpage", ".", "add_header", "(", "name", ")", "\n", "ims", "=", "[", "]", "\n", "txts", "=", "[", "]", "\n", "links", "=", "[", "]", "\n", "for", "label", ",", "image_numpy", "in", "visual", ".", "items", "(", ")", ":", "\n", "                    ", "image_name", "=", "'%s_%s.png'", "%", "(", "name", ",", "label", ")", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "image_dir", ",", "image_name", ")", "\n", "util", ".", "save_image", "(", "image_numpy", ",", "save_path", ")", "\n", "\n", "ims", ".", "append", "(", "image_name", ")", "\n", "txts", ".", "append", "(", "label", ")", "\n", "links", ".", "append", "(", "image_name", ")", "\n", "\n", "", "webpage", ".", "add_images", "(", "ims", ",", "txts", ",", "links", ",", "width", "=", "self", ".", "win_size", ",", "cols", "=", "cols", ")", "\n", "", "", "else", ":", "\n", "            ", "batchSize", "=", "len", "(", "image_path", ")", "\n", "\n", "# save ground truth images", "\n", "if", "gt_path", "is", "not", "None", ":", "\n", "                ", "gt_short_path", "=", "os", ".", "path", ".", "basename", "(", "gt_path", "[", "0", "]", ")", "\n", "gt_name", "=", "os", ".", "path", ".", "splitext", "(", "gt_path", ")", "[", "0", "]", "\n", "gt_ims", "=", "[", "]", "\n", "gt_txts", "=", "[", "]", "\n", "gt_links", "=", "[", "]", "\n", "for", "label", ",", "image_numpy", "in", "gt_visuals", ".", "items", "(", ")", ":", "\n", "                    ", "image_name", "=", "'%s_%s.png'", "%", "(", "gt_name", ",", "label", ")", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "image_dir", ",", "image_name", ")", "\n", "util", ".", "save_image", "(", "image_numpy", ",", "save_path", ")", "\n", "\n", "gt_ims", ".", "append", "(", "image_name", ")", "\n", "gt_txts", ".", "append", "(", "label", ")", "\n", "gt_links", ".", "append", "(", "image_name", ")", "\n", "\n", "", "", "for", "i", "in", "range", "(", "batchSize", ")", ":", "\n", "                ", "short_path", "=", "os", ".", "path", ".", "basename", "(", "image_path", "[", "i", "]", ")", "\n", "name", "=", "os", ".", "path", ".", "splitext", "(", "short_path", ")", "[", "0", "]", "\n", "\n", "# webpage.add_header(name)", "\n", "ims", "=", "[", "]", "\n", "txts", "=", "[", "]", "\n", "links", "=", "[", "]", "\n", "\n", "for", "label", ",", "image_numpy", "in", "visuals", "[", "i", "]", ".", "items", "(", ")", ":", "\n", "                    ", "image_name", "=", "'%s_%s.png'", "%", "(", "name", ",", "label", ")", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "image_dir", ",", "image_name", ")", "\n", "util", ".", "save_image", "(", "image_numpy", ",", "save_path", ")", "\n", "\n", "ims", ".", "append", "(", "image_name", ")", "\n", "txts", ".", "append", "(", "label", ")", "\n", "links", ".", "append", "(", "image_name", ")", "\n", "", "print", "(", "\"saving results for: \"", "+", "name", ")", "\n", "\n", "if", "gt_path", "is", "not", "None", ":", "\n", "                    ", "webpage", ".", "add_header", "(", "gt_name", ")", "\n", "webpage", ".", "add_images", "(", "gt_ims", ",", "gt_txts", ",", "gt_links", ",", "width", "=", "self", ".", "win_size", ",", "cols", "=", "batchSize", ")", "\n", "\n", "", "webpage", ".", "add_header", "(", "name", ")", "\n", "webpage", ".", "add_images", "(", "ims", ",", "txts", ",", "links", ",", "width", "=", "self", ".", "win_size", ",", "cols", "=", "self", ".", "numClasses", "+", "1", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.util.tensor2im": [[35, 55], ["image_tensor.size", "image_tensor.dim", "image_tensor.cpu().float().numpy.astype", "image_tensor.cpu().float().numpy", "image_tensor.cpu().float().numpy", "image_tensor.cpu().float", "image_tensor[].cpu().float().numpy", "image_tensor.cpu().float", "image_tensor.cpu().float().numpy", "image_tensor.cpu().float().numpy", "image_tensor.cpu", "numpy.transpose", "image_tensor[].cpu().float", "image_tensor.cpu", "numpy.transpose", "image_tensor.cpu().float", "image_tensor.cpu().float", "image_tensor[].cpu", "numpy.transpose", "numpy.transpose", "image_tensor.cpu", "image_tensor.cpu"], "function", ["None"], ["def", "tensor2im", "(", "image_tensor", ",", "imtype", "=", "np", ".", "uint8", ",", "normalize", "=", "True", ")", ":", "\n", "    ", "im_sz", "=", "image_tensor", ".", "size", "(", ")", "\n", "ndims", "=", "image_tensor", ".", "dim", "(", ")", "\n", "if", "ndims", "==", "2", ":", "\n", "        ", "image_numpy", "=", "image_tensor", ".", "cpu", "(", ")", ".", "float", "(", ")", ".", "numpy", "(", ")", "\n", "image_numpy", "=", "(", "image_numpy", "+", "1", ")", "/", "2.0", "*", "255.0", "\n", "", "elif", "ndims", "==", "3", ":", "\n", "        ", "image_numpy", "=", "image_tensor", ".", "cpu", "(", ")", ".", "float", "(", ")", ".", "numpy", "(", ")", "\n", "image_numpy", "=", "(", "np", ".", "transpose", "(", "image_numpy", ",", "(", "1", ",", "2", ",", "0", ")", ")", "+", "1", ")", "/", "2.0", "*", "255.0", "\n", "", "elif", "ndims", "==", "4", "and", "im_sz", "[", "0", "]", "==", "1", ":", "\n", "        ", "image_numpy", "=", "image_tensor", "[", "0", "]", ".", "cpu", "(", ")", ".", "float", "(", ")", ".", "numpy", "(", ")", "\n", "image_numpy", "=", "(", "np", ".", "transpose", "(", "image_numpy", ",", "(", "1", ",", "2", ",", "0", ")", ")", "+", "1", ")", "/", "2.0", "*", "255.0", "\n", "", "elif", "ndims", "==", "4", ":", "\n", "        ", "image_numpy", "=", "image_tensor", ".", "cpu", "(", ")", ".", "float", "(", ")", ".", "numpy", "(", ")", "\n", "image_numpy", "=", "(", "np", ".", "transpose", "(", "image_numpy", ",", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", "+", "1", ")", "/", "2.0", "*", "255.0", "\n", "", "else", ":", "# ndims == 5", "\n", "        ", "image_numpy", "=", "image_tensor", ".", "cpu", "(", ")", ".", "float", "(", ")", ".", "numpy", "(", ")", "\n", "image_numpy", "=", "(", "np", ".", "transpose", "(", "image_numpy", ",", "(", "0", ",", "1", ",", "3", ",", "4", ",", "2", ")", ")", "+", "1", ")", "/", "2.0", "*", "255.0", "\n", "\n", "", "return", "image_numpy", ".", "astype", "(", "imtype", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.util.save_image": [[56, 59], ["PIL.Image.fromarray", "Image.fromarray.save"], "function", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.base_model.BaseModel.save"], ["", "def", "save_image", "(", "image_numpy", ",", "image_path", ")", ":", "\n", "    ", "image_pil", "=", "Image", ".", "fromarray", "(", "image_numpy", ")", "\n", "image_pil", ".", "save", "(", "image_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.util.mkdirs": [[60, 66], ["isinstance", "util.mkdir", "isinstance", "util.mkdir"], "function", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.util.mkdir", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.util.mkdir"], ["", "def", "mkdirs", "(", "paths", ")", ":", "\n", "    ", "if", "isinstance", "(", "paths", ",", "list", ")", "and", "not", "isinstance", "(", "paths", ",", "str", ")", ":", "\n", "        ", "for", "path", "in", "paths", ":", "\n", "            ", "mkdir", "(", "path", ")", "\n", "", "", "else", ":", "\n", "        ", "mkdir", "(", "paths", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.util.mkdir": [[67, 70], ["os.path.exists", "os.makedirs"], "function", ["None"], ["", "", "def", "mkdir", "(", "path", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.util.download_pretrained_models": [[71, 136], ["print", "print", "print", "os.remove", "print", "print", "print", "os.remove", "print", "print", "print", "print", "print", "print", "requests.Session", "zipfile.ZipFile", "zip_fname.extractall", "requests.Session", "zipfile.ZipFile", "zip_fname.extractall", "requests.Session", "requests.Session", "requests.Session", "util.download_file", "util.download_file", "util.download_file", "util.download_file", "util.download_file", "print", "util.download_file", "print", "util.download_file", "print", "util.download_file", "print", "util.download_file", "print", "util.download_file"], "function", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.util.download_file", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.util.download_file", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.util.download_file", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.util.download_file", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.util.download_file", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.util.download_file", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.util.download_file", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.util.download_file", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.util.download_file", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.util.download_file"], ["", "", "def", "download_pretrained_models", "(", ")", ":", "\n", "    ", "print", "(", "'Downloading males model'", ")", "\n", "with", "requests", ".", "Session", "(", ")", "as", "session", ":", "\n", "        ", "try", ":", "\n", "            ", "download_file", "(", "session", ",", "males_model_spec", ")", "\n", "", "except", ":", "\n", "            ", "print", "(", "'Google Drive download failed.\\n'", "'Trying do download from alternate server'", ")", "\n", "download_file", "(", "session", ",", "males_model_spec", ",", "use_alt_url", "=", "True", ")", "\n", "\n", "", "", "print", "(", "'Extracting males model zip file'", ")", "\n", "with", "zipfile", ".", "ZipFile", "(", "'./checkpoints/males_model.zip'", ",", "'r'", ")", "as", "zip_fname", ":", "\n", "        ", "zip_fname", ".", "extractall", "(", "'./checkpoints'", ")", "\n", "\n", "", "print", "(", "'Done!'", ")", "\n", "os", ".", "remove", "(", "males_model_spec", "[", "'file_path'", "]", ")", "\n", "\n", "print", "(", "'Downloading females model'", ")", "\n", "with", "requests", ".", "Session", "(", ")", "as", "session", ":", "\n", "        ", "try", ":", "\n", "            ", "download_file", "(", "session", ",", "females_model_spec", ")", "\n", "", "except", ":", "\n", "            ", "print", "(", "'Google Drive download failed.\\n'", "'Trying do download from alternate server'", ")", "\n", "download_file", "(", "session", ",", "females_model_spec", ",", "use_alt_url", "=", "True", ")", "\n", "\n", "", "", "print", "(", "'Extracting females model zip file'", ")", "\n", "with", "zipfile", ".", "ZipFile", "(", "'./checkpoints/females_model.zip'", ",", "'r'", ")", "as", "zip_fname", ":", "\n", "        ", "zip_fname", ".", "extractall", "(", "'./checkpoints'", ")", "\n", "\n", "", "print", "(", "'Done!'", ")", "\n", "os", ".", "remove", "(", "females_model_spec", "[", "'file_path'", "]", ")", "\n", "\n", "print", "(", "'Downloading face landmarks shape predictor'", ")", "\n", "with", "requests", ".", "Session", "(", ")", "as", "session", ":", "\n", "        ", "try", ":", "\n", "            ", "download_file", "(", "session", ",", "predictor_file_spec", ")", "\n", "", "except", ":", "\n", "            ", "print", "(", "'Google Drive download failed.\\n'", "'Trying do download from alternate server'", ")", "\n", "download_file", "(", "session", ",", "predictor_file_spec", ",", "use_alt_url", "=", "True", ")", "\n", "\n", "", "", "print", "(", "'Done!'", ")", "\n", "\n", "print", "(", "'Downloading DeeplabV3 backbone Resnet Model parameters'", ")", "\n", "with", "requests", ".", "Session", "(", ")", "as", "session", ":", "\n", "        ", "try", ":", "\n", "            ", "download_file", "(", "session", ",", "resnet_file_spec", ")", "\n", "", "except", ":", "\n", "            ", "print", "(", "'Google Drive download failed.\\n'", "'Trying do download from alternate server'", ")", "\n", "download_file", "(", "session", ",", "resnet_file_spec", ",", "use_alt_url", "=", "True", ")", "\n", "\n", "", "", "print", "(", "'Done!'", ")", "\n", "\n", "print", "(", "'Downloading DeeplabV3 Model parameters'", ")", "\n", "with", "requests", ".", "Session", "(", ")", "as", "session", ":", "\n", "        ", "try", ":", "\n", "            ", "download_file", "(", "session", ",", "deeplab_file_spec", ")", "\n", "", "except", ":", "\n", "            ", "print", "(", "'Google Drive download failed.\\n'", "'Trying do download from alternate server'", ")", "\n", "download_file", "(", "session", ",", "deeplab_file_spec", ",", "use_alt_url", "=", "True", ")", "\n", "\n", "", "", "print", "(", "'Done!'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.util.download_file": [[137, 197], ["os.path.dirname", "tqdm.tqdm", "reversed", "tqdm.tqdm.close", "os.replace", "glob.glob", "os.makedirs", "range", "tqdm.tqdm.reset", "uuid.uuid4", "hashlib.md5", "os.remove", "session.get", "res.raise_for_status", "IOError", "IOError", "open", "res.iter_content", "hashlib.md5.hexdigest", "tqdm.tqdm.update", "f.write", "len", "hashlib.md5.update", "open", "f.read", "html.unescape", "len", "requests.compat.urljoin", "len", "f.read.decode().split", "f.read.decode"], "function", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.Generator.decode"], ["", "def", "download_file", "(", "session", ",", "file_spec", ",", "use_alt_url", "=", "False", ",", "chunk_size", "=", "128", ",", "num_attempts", "=", "10", ")", ":", "\n", "    ", "file_path", "=", "file_spec", "[", "'file_path'", "]", "\n", "if", "use_alt_url", ":", "\n", "        ", "file_url", "=", "file_spec", "[", "'alt_url'", "]", "\n", "", "else", ":", "\n", "        ", "file_url", "=", "file_spec", "[", "'file_url'", "]", "\n", "\n", "", "file_dir", "=", "os", ".", "path", ".", "dirname", "(", "file_path", ")", "\n", "tmp_path", "=", "file_path", "+", "'.tmp.'", "+", "uuid", ".", "uuid4", "(", ")", ".", "hex", "\n", "if", "file_dir", ":", "\n", "        ", "os", ".", "makedirs", "(", "file_dir", ",", "exist_ok", "=", "True", ")", "\n", "\n", "", "progress_bar", "=", "tqdm", "(", "total", "=", "file_spec", "[", "'file_size'", "]", ",", "unit", "=", "'B'", ",", "unit_scale", "=", "True", ")", "\n", "for", "attempts_left", "in", "reversed", "(", "range", "(", "num_attempts", ")", ")", ":", "\n", "        ", "data_size", "=", "0", "\n", "progress_bar", ".", "reset", "(", ")", "\n", "try", ":", "\n", "# Download.", "\n", "            ", "data_md5", "=", "hashlib", ".", "md5", "(", ")", "\n", "with", "session", ".", "get", "(", "file_url", ",", "stream", "=", "True", ")", "as", "res", ":", "\n", "                ", "res", ".", "raise_for_status", "(", ")", "\n", "with", "open", "(", "tmp_path", ",", "'wb'", ")", "as", "f", ":", "\n", "                    ", "for", "chunk", "in", "res", ".", "iter_content", "(", "chunk_size", "=", "chunk_size", "<<", "10", ")", ":", "\n", "                        ", "progress_bar", ".", "update", "(", "len", "(", "chunk", ")", ")", "\n", "f", ".", "write", "(", "chunk", ")", "\n", "data_size", "+=", "len", "(", "chunk", ")", "\n", "data_md5", ".", "update", "(", "chunk", ")", "\n", "\n", "# Validate.", "\n", "", "", "", "if", "'file_size'", "in", "file_spec", "and", "data_size", "!=", "file_spec", "[", "'file_size'", "]", ":", "\n", "                ", "raise", "IOError", "(", "'Incorrect file size'", ",", "file_path", ")", "\n", "", "if", "'file_md5'", "in", "file_spec", "and", "data_md5", ".", "hexdigest", "(", ")", "!=", "file_spec", "[", "'file_md5'", "]", ":", "\n", "                ", "raise", "IOError", "(", "'Incorrect file MD5'", ",", "file_path", ")", "\n", "", "break", "\n", "\n", "", "except", ":", "\n", "# Last attempt => raise error.", "\n", "            ", "if", "not", "attempts_left", ":", "\n", "                ", "raise", "\n", "\n", "# Handle Google Drive virus checker nag.", "\n", "", "if", "data_size", ">", "0", "and", "data_size", "<", "8192", ":", "\n", "                ", "with", "open", "(", "tmp_path", ",", "'rb'", ")", "as", "f", ":", "\n", "                    ", "data", "=", "f", ".", "read", "(", ")", "\n", "", "links", "=", "[", "html", ".", "unescape", "(", "link", ")", "for", "link", "in", "data", ".", "decode", "(", "'utf-8'", ")", ".", "split", "(", "'\"'", ")", "if", "'export=download'", "in", "link", "]", "\n", "if", "len", "(", "links", ")", "==", "1", ":", "\n", "                    ", "file_url", "=", "requests", ".", "compat", ".", "urljoin", "(", "file_url", ",", "links", "[", "0", "]", ")", "\n", "continue", "\n", "\n", "", "", "", "", "progress_bar", ".", "close", "(", ")", "\n", "\n", "# Rename temp file to the correct name.", "\n", "os", ".", "replace", "(", "tmp_path", ",", "file_path", ")", "# atomic", "\n", "\n", "# Attempt to clean up any leftover temps.", "\n", "for", "filename", "in", "glob", ".", "glob", "(", "file_path", "+", "'.tmp.*'", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "os", ".", "remove", "(", "filename", ")", "\n", "", "except", ":", "\n", "            ", "pass", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.preprocess_itw_im.preprocessInTheWildImage.__init__": [[22, 65], ["dlib.get_frontal_face_detector", "dlib.shape_predictor", "torchvision.Compose", "torch.cuda.is_available", "preprocess_itw_im.preprocessInTheWildImage.deeplab_model.eval", "torch.load", "preprocess_itw_im.preprocessInTheWildImage.deeplab_model.load_state_dict", "os.path.isfile", "print", "os.path.isfile", "print", "getattr", "os.path.isfile", "print", "torchvision.ToTensor", "torchvision.Normalize", "len", "checkpoint[].items"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "out_size", "=", "256", ")", ":", "\n", "        ", "self", ".", "out_size", "=", "out_size", "\n", "\n", "# load landmark detector models", "\n", "self", ".", "detector", "=", "dlib", ".", "get_frontal_face_detector", "(", ")", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "predictor_file_path", ")", ":", "\n", "            ", "print", "(", "'Cannot find landmarks shape predictor model.\\n'", "'Please run download_models.py to download the model'", ")", "\n", "raise", "OSError", "\n", "\n", "", "self", ".", "predictor", "=", "dlib", ".", "shape_predictor", "(", "predictor_file_path", ")", "\n", "\n", "# deeplab data properties", "\n", "self", ".", "deeplab_data_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "]", ")", "\n", "self", ".", "deeplab_input_size", "=", "513", "\n", "\n", "# load deeplab model", "\n", "assert", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "True", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "resnet_file_path", ")", ":", "\n", "            ", "print", "(", "'Cannot find DeeplabV3 backbone Resnet model.\\n'", "'Please run download_models.py to download the model'", ")", "\n", "raise", "OSError", "\n", "\n", "", "self", ".", "deeplab_model", "=", "getattr", "(", "deeplab", ",", "'resnet101'", ")", "(", "\n", "pretrained", "=", "True", ",", "\n", "num_classes", "=", "len", "(", "deeplab_classes", ")", ",", "\n", "num_groups", "=", "32", ",", "\n", "weight_std", "=", "True", ",", "\n", "beta", "=", "False", ")", "\n", "\n", "self", ".", "deeplab_model", ".", "eval", "(", ")", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "deeplab_file_path", ")", ":", "\n", "            ", "print", "(", "'Cannot find DeeplabV3 model.\\n'", "'Please run download_models.py to download the model'", ")", "\n", "raise", "OSError", "\n", "\n", "", "checkpoint", "=", "torch", ".", "load", "(", "model_fname", ")", "\n", "state_dict", "=", "{", "k", "[", "7", ":", "]", ":", "v", "for", "k", ",", "v", "in", "checkpoint", "[", "'state_dict'", "]", ".", "items", "(", ")", "if", "'tracked'", "not", "in", "k", "}", "\n", "self", ".", "deeplab_model", ".", "load_state_dict", "(", "state_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.preprocess_itw_im.preprocessInTheWildImage.dlib_shape_to_landmarks": [[66, 75], ["numpy.zeros", "range", "shape.part", "shape.part"], "methods", ["None"], ["", "def", "dlib_shape_to_landmarks", "(", "self", ",", "shape", ")", ":", "\n", "# initialize the list of (x, y)-coordinates", "\n", "    \t", "landmarks", "=", "np", ".", "zeros", "(", "(", "68", ",", "2", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "# loop over the 68 facial landmarks and convert them", "\n", "# to a 2-tuple of (x, y)-coordinates", "\n", "for", "i", "in", "range", "(", "0", ",", "68", ")", ":", "\n", "    \t\t", "landmarks", "[", "i", "]", "=", "(", "shape", ".", "part", "(", "i", ")", ".", "x", ",", "shape", ".", "part", "(", "i", ")", ".", "y", ")", "\n", "# return the list of (x, y)-coordinates", "\n", "", "return", "landmarks", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.preprocess_itw_im.preprocessInTheWildImage.extract_face_landmarks": [[76, 96], ["preprocess_itw_im.preprocessInTheWildImage.detector", "enumerate", "preprocess_itw_im.preprocessInTheWildImage.predictor", "preprocess_itw_im.preprocessInTheWildImage.dlib_shape_to_landmarks", "len", "print", "d.right", "d.left", "d.bottom", "d.top"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.preprocess_itw_im.preprocessInTheWildImage.dlib_shape_to_landmarks"], ["", "def", "extract_face_landmarks", "(", "self", ",", "img", ")", ":", "\n", "# detect all faces in the image and", "\n", "# keep the detection with the largest bounding box", "\n", "        ", "dets", "=", "self", ".", "detector", "(", "img", ",", "1", ")", "\n", "if", "len", "(", "dets", ")", "==", "0", ":", "\n", "            ", "print", "(", "'Could not detect any face in the image, please try again with a different image'", ")", "\n", "raise", "\n", "\n", "", "max_area", "=", "0", "\n", "max_idx", "=", "-", "1", "\n", "for", "k", ",", "d", "in", "enumerate", "(", "dets", ")", ":", "\n", "            ", "area", "=", "(", "d", ".", "right", "(", ")", "-", "d", ".", "left", "(", ")", ")", "*", "(", "d", ".", "bottom", "(", ")", "-", "d", ".", "top", "(", ")", ")", "\n", "if", "area", ">", "max_area", ":", "\n", "                ", "max_area", "=", "area", "\n", "max_idx", "=", "k", "\n", "\n", "# Get the landmarks/parts for the face in box d.", "\n", "", "", "dlib_shape", "=", "self", ".", "predictor", "(", "img", ",", "dets", "[", "max_idx", "]", ")", "\n", "landmarks", "=", "self", ".", "dlib_shape_to_landmarks", "(", "dlib_shape", ")", "\n", "return", "landmarks", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.preprocess_itw_im.preprocessInTheWildImage.align_in_the_wild_image": [[97, 168], ["numpy.mean", "numpy.mean", "numpy.hypot", "max", "numpy.stack", "PIL.Image.fromarray", "int", "max", "img.resize.resize.transform", "numpy.flipud", "numpy.hypot", "numpy.floor", "img.resize.resize.resize", "int", "int", "int", "int", "int", "max", "max", "min", "min", "img.resize.resize.crop", "int", "int", "int", "int", "max", "max", "max", "max", "numpy.maximum", "numpy.pad", "numpy.maximum", "PIL.Image.fromarray", "img.resize.resize.resize", "numpy.flipud", "numpy.hypot", "numpy.hypot", "int", "int", "numpy.rint", "numpy.floor", "numpy.floor", "numpy.ceil", "numpy.ceil", "numpy.floor", "numpy.floor", "numpy.ceil", "numpy.ceil", "max", "int", "numpy.float32", "numpy.clip", "numpy.clip", "numpy.uint8", "numpy.rint", "numpy.rint", "min", "min", "max", "max", "min", "min", "max", "max", "numpy.rint", "numpy.minimum", "numpy.minimum", "scipy.ndimage.gaussian_filter", "numpy.median", "numpy.clip", "numpy.rint", "float", "float", "numpy.float32", "numpy.float32", "numpy.float32", "numpy.float32"], "methods", ["None"], ["", "def", "align_in_the_wild_image", "(", "self", ",", "np_img", ",", "lm", ",", "transform_size", "=", "4096", ",", "enable_padding", "=", "True", ")", ":", "\n", "# Parse landmarks.", "\n", "        ", "lm_chin", "=", "lm", "[", "0", ":", "17", "]", "# left-right", "\n", "lm_eyebrow_left", "=", "lm", "[", "17", ":", "22", "]", "# left-right", "\n", "lm_eyebrow_right", "=", "lm", "[", "22", ":", "27", "]", "# left-right", "\n", "lm_nose", "=", "lm", "[", "27", ":", "31", "]", "# top-down", "\n", "lm_nostrils", "=", "lm", "[", "31", ":", "36", "]", "# top-down", "\n", "lm_eye_left", "=", "lm", "[", "36", ":", "42", "]", "# left-clockwise", "\n", "lm_eye_right", "=", "lm", "[", "42", ":", "48", "]", "# left-clockwise", "\n", "lm_mouth_outer", "=", "lm", "[", "48", ":", "60", "]", "# left-clockwise", "\n", "lm_mouth_inner", "=", "lm", "[", "60", ":", "68", "]", "# left-clockwise", "\n", "\n", "# Calculate auxiliary vectors.", "\n", "eye_left", "=", "np", ".", "mean", "(", "lm_eye_left", ",", "axis", "=", "0", ")", "\n", "eye_right", "=", "np", ".", "mean", "(", "lm_eye_right", ",", "axis", "=", "0", ")", "\n", "eye_avg", "=", "(", "eye_left", "+", "eye_right", ")", "*", "0.5", "\n", "eye_to_eye", "=", "eye_right", "-", "eye_left", "\n", "mouth_left", "=", "lm_mouth_outer", "[", "0", "]", "\n", "mouth_right", "=", "lm_mouth_outer", "[", "6", "]", "\n", "mouth_avg", "=", "(", "mouth_left", "+", "mouth_right", ")", "*", "0.5", "\n", "eye_to_mouth", "=", "mouth_avg", "-", "eye_avg", "\n", "\n", "# Choose oriented crop rectangle.", "\n", "x", "=", "eye_to_eye", "-", "np", ".", "flipud", "(", "eye_to_mouth", ")", "*", "[", "-", "1", ",", "1", "]", "\n", "x", "/=", "np", ".", "hypot", "(", "*", "x", ")", "\n", "x", "*=", "max", "(", "np", ".", "hypot", "(", "*", "eye_to_eye", ")", "*", "2.0", ",", "np", ".", "hypot", "(", "*", "eye_to_mouth", ")", "*", "2.2", ")", "# This results in larger crops then the original FFHQ. For the original crops, replace 2.2 with 1.8", "\n", "y", "=", "np", ".", "flipud", "(", "x", ")", "*", "[", "-", "1", ",", "1", "]", "\n", "c", "=", "eye_avg", "+", "eye_to_mouth", "*", "0.1", "\n", "quad", "=", "np", ".", "stack", "(", "[", "c", "-", "x", "-", "y", ",", "c", "-", "x", "+", "y", ",", "c", "+", "x", "+", "y", ",", "c", "+", "x", "-", "y", "]", ")", "\n", "qsize", "=", "np", ".", "hypot", "(", "*", "x", ")", "*", "2", "\n", "\n", "# Load in-the-wild image.", "\n", "img", "=", "Image", ".", "fromarray", "(", "np_img", ")", "\n", "\n", "# Shrink.", "\n", "shrink", "=", "int", "(", "np", ".", "floor", "(", "qsize", "/", "self", ".", "out_size", "*", "0.5", ")", ")", "\n", "if", "shrink", ">", "1", ":", "\n", "            ", "rsize", "=", "(", "int", "(", "np", ".", "rint", "(", "float", "(", "img", ".", "size", "[", "0", "]", ")", "/", "shrink", ")", ")", ",", "int", "(", "np", ".", "rint", "(", "float", "(", "img", ".", "size", "[", "1", "]", ")", "/", "shrink", ")", ")", ")", "\n", "img", "=", "img", ".", "resize", "(", "rsize", ",", "Image", ".", "ANTIALIAS", ")", "\n", "quad", "/=", "shrink", "\n", "qsize", "/=", "shrink", "\n", "\n", "# Crop.", "\n", "", "border", "=", "max", "(", "int", "(", "np", ".", "rint", "(", "qsize", "*", "0.1", ")", ")", ",", "3", ")", "\n", "crop", "=", "(", "int", "(", "np", ".", "floor", "(", "min", "(", "quad", "[", ":", ",", "0", "]", ")", ")", ")", ",", "int", "(", "np", ".", "floor", "(", "min", "(", "quad", "[", ":", ",", "1", "]", ")", ")", ")", ",", "int", "(", "np", ".", "ceil", "(", "max", "(", "quad", "[", ":", ",", "0", "]", ")", ")", ")", ",", "int", "(", "np", ".", "ceil", "(", "max", "(", "quad", "[", ":", ",", "1", "]", ")", ")", ")", ")", "\n", "crop", "=", "(", "max", "(", "crop", "[", "0", "]", "-", "border", ",", "0", ")", ",", "max", "(", "crop", "[", "1", "]", "-", "border", ",", "0", ")", ",", "min", "(", "crop", "[", "2", "]", "+", "border", ",", "img", ".", "size", "[", "0", "]", ")", ",", "min", "(", "crop", "[", "3", "]", "+", "border", ",", "img", ".", "size", "[", "1", "]", ")", ")", "\n", "if", "crop", "[", "2", "]", "-", "crop", "[", "0", "]", "<", "img", ".", "size", "[", "0", "]", "or", "crop", "[", "3", "]", "-", "crop", "[", "1", "]", "<", "img", ".", "size", "[", "1", "]", ":", "\n", "            ", "img", "=", "img", ".", "crop", "(", "crop", ")", "\n", "quad", "-=", "crop", "[", "0", ":", "2", "]", "\n", "\n", "# Pad.", "\n", "", "pad", "=", "(", "int", "(", "np", ".", "floor", "(", "min", "(", "quad", "[", ":", ",", "0", "]", ")", ")", ")", ",", "int", "(", "np", ".", "floor", "(", "min", "(", "quad", "[", ":", ",", "1", "]", ")", ")", ")", ",", "int", "(", "np", ".", "ceil", "(", "max", "(", "quad", "[", ":", ",", "0", "]", ")", ")", ")", ",", "int", "(", "np", ".", "ceil", "(", "max", "(", "quad", "[", ":", ",", "1", "]", ")", ")", ")", ")", "\n", "pad", "=", "(", "max", "(", "-", "pad", "[", "0", "]", "+", "border", ",", "0", ")", ",", "max", "(", "-", "pad", "[", "1", "]", "+", "border", ",", "0", ")", ",", "max", "(", "pad", "[", "2", "]", "-", "img", ".", "size", "[", "0", "]", "+", "border", ",", "0", ")", ",", "max", "(", "pad", "[", "3", "]", "-", "img", ".", "size", "[", "1", "]", "+", "border", ",", "0", ")", ")", "\n", "if", "enable_padding", "and", "max", "(", "pad", ")", ">", "border", "-", "4", ":", "\n", "            ", "pad", "=", "np", ".", "maximum", "(", "pad", ",", "int", "(", "np", ".", "rint", "(", "qsize", "*", "0.3", ")", ")", ")", "\n", "img", "=", "np", ".", "pad", "(", "np", ".", "float32", "(", "img", ")", ",", "(", "(", "pad", "[", "1", "]", ",", "pad", "[", "3", "]", ")", ",", "(", "pad", "[", "0", "]", ",", "pad", "[", "2", "]", ")", ",", "(", "0", ",", "0", ")", ")", ",", "'reflect'", ")", "\n", "h", ",", "w", ",", "_", "=", "img", ".", "shape", "\n", "y", ",", "x", ",", "_", "=", "np", ".", "ogrid", "[", ":", "h", ",", ":", "w", ",", ":", "1", "]", "\n", "mask", "=", "np", ".", "maximum", "(", "1.0", "-", "np", ".", "minimum", "(", "np", ".", "float32", "(", "x", ")", "/", "pad", "[", "0", "]", ",", "np", ".", "float32", "(", "w", "-", "1", "-", "x", ")", "/", "pad", "[", "2", "]", ")", ",", "1.0", "-", "np", ".", "minimum", "(", "np", ".", "float32", "(", "y", ")", "/", "pad", "[", "1", "]", ",", "np", ".", "float32", "(", "h", "-", "1", "-", "y", ")", "/", "pad", "[", "3", "]", ")", ")", "\n", "blur", "=", "qsize", "*", "0.02", "\n", "img", "+=", "(", "scipy", ".", "ndimage", ".", "gaussian_filter", "(", "img", ",", "[", "blur", ",", "blur", ",", "0", "]", ")", "-", "img", ")", "*", "np", ".", "clip", "(", "mask", "*", "3.0", "+", "1.0", ",", "0.0", ",", "1.0", ")", "\n", "img", "+=", "(", "np", ".", "median", "(", "img", ",", "axis", "=", "(", "0", ",", "1", ")", ")", "-", "img", ")", "*", "np", ".", "clip", "(", "mask", ",", "0.0", ",", "1.0", ")", "\n", "img", "=", "Image", ".", "fromarray", "(", "np", ".", "uint8", "(", "np", ".", "clip", "(", "np", ".", "rint", "(", "img", ")", ",", "0", ",", "255", ")", ")", ",", "'RGB'", ")", "\n", "quad", "+=", "pad", "[", ":", "2", "]", "\n", "\n", "# Transform.", "\n", "", "img", "=", "img", ".", "transform", "(", "(", "transform_size", ",", "transform_size", ")", ",", "Image", ".", "QUAD", ",", "(", "quad", "+", "0.5", ")", ".", "flatten", "(", ")", ",", "Image", ".", "BILINEAR", ")", "\n", "if", "self", ".", "out_size", "<", "transform_size", ":", "\n", "            ", "img", "=", "img", ".", "resize", "(", "(", "self", ".", "out_size", ",", "self", ".", "out_size", ")", ",", "Image", ".", "ANTIALIAS", ")", "\n", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.preprocess_itw_im.preprocessInTheWildImage.get_segmentation_maps": [[170, 182], ["img.cuda.cuda.resize", "preprocess_itw_im.preprocessInTheWildImage.deeplab_data_transform", "img.cuda.cuda.cuda", "preprocess_itw_im.preprocessInTheWildImage.deeplab_model.cuda", "preprocess_itw_im.preprocessInTheWildImage.deeplab_model", "preprocess_itw_im.preprocessInTheWildImage.deeplab_model.cpu", "torch.max", "pred.data.cpu().numpy().squeeze().astype.data.cpu().numpy().squeeze().astype.data.cpu().numpy().squeeze().astype", "PIL.Image.fromarray", "numpy.uint8", "img.cuda.cuda.unsqueeze", "numpy.uint8.resize", "pred.data.cpu().numpy().squeeze().astype.data.cpu().numpy().squeeze().astype.data.cpu().numpy().squeeze", "pred.data.cpu().numpy().squeeze().astype.data.cpu().numpy().squeeze().astype.data.cpu().numpy", "pred.data.cpu().numpy().squeeze().astype.data.cpu().numpy().squeeze().astype.data.cpu"], "methods", ["None"], ["", "def", "get_segmentation_maps", "(", "self", ",", "img", ")", ":", "\n", "        ", "img", "=", "img", ".", "resize", "(", "(", "self", ".", "deeplab_input_size", ",", "self", ".", "deeplab_input_size", ")", ",", "Image", ".", "BILINEAR", ")", "\n", "img", "=", "self", ".", "deeplab_data_transform", "(", "img", ")", "\n", "img", "=", "img", ".", "cuda", "(", ")", "\n", "self", ".", "deeplab_model", ".", "cuda", "(", ")", "\n", "outputs", "=", "self", ".", "deeplab_model", "(", "img", ".", "unsqueeze", "(", "0", ")", ")", "\n", "self", ".", "deeplab_model", ".", "cpu", "(", ")", "\n", "_", ",", "pred", "=", "torch", ".", "max", "(", "outputs", ",", "1", ")", "\n", "pred", "=", "pred", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "seg_map", "=", "Image", ".", "fromarray", "(", "pred", ")", "\n", "seg_map", "=", "np", ".", "uint8", "(", "seg_map", ".", "resize", "(", "(", "self", ".", "out_size", ",", "self", ".", "out_size", ")", ",", "Image", ".", "NEAREST", ")", ")", "\n", "return", "seg_map", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.preprocess_itw_im.preprocessInTheWildImage.forward": [[183, 189], ["preprocess_itw_im.preprocessInTheWildImage.extract_face_landmarks", "preprocess_itw_im.preprocessInTheWildImage.align_in_the_wild_image", "preprocess_itw_im.preprocessInTheWildImage.get_segmentation_maps", "numpy.array().reshape", "numpy.array", "numpy.array().reshape.getdata"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.preprocess_itw_im.preprocessInTheWildImage.extract_face_landmarks", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.preprocess_itw_im.preprocessInTheWildImage.align_in_the_wild_image", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.preprocess_itw_im.preprocessInTheWildImage.get_segmentation_maps"], ["", "def", "forward", "(", "self", ",", "img", ")", ":", "\n", "        ", "landmarks", "=", "self", ".", "extract_face_landmarks", "(", "img", ")", "\n", "aligned_img", "=", "self", ".", "align_in_the_wild_image", "(", "img", ",", "landmarks", ")", "\n", "seg_map", "=", "self", ".", "get_segmentation_maps", "(", "aligned_img", ")", "\n", "aligned_img", "=", "np", ".", "array", "(", "aligned_img", ".", "getdata", "(", ")", ",", "dtype", "=", "np", ".", "uint8", ")", ".", "reshape", "(", "self", ".", "out_size", ",", "self", ".", "out_size", ",", "3", ")", "\n", "return", "aligned_img", ",", "seg_map", "\n", "", "", ""]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.models.create_model": [[5, 17], ["InferenceModel.initialize", "LATS", "InferenceModel", "print", "InferenceModel.name"], "function", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.options.base_options.BaseOptions.initialize", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.base_dataset.BaseDataset.name"], ["def", "create_model", "(", "opt", ")", ":", "\n", "    ", "from", ".", "LATS_model", "import", "LATS", ",", "InferenceModel", "\n", "if", "opt", ".", "isTrain", ":", "\n", "        ", "model", "=", "LATS", "(", ")", "\n", "", "else", ":", "\n", "        ", "model", "=", "InferenceModel", "(", ")", "\n", "\n", "", "model", ".", "initialize", "(", "opt", ")", "\n", "if", "opt", ".", "verbose", ":", "\n", "        ", "print", "(", "\"model [%s] was created\"", "%", "(", "model", ".", "name", "(", ")", ")", ")", "\n", "\n", "", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks._CustomDataParallel.__init__": [[100, 102], ["torch.DataParallel.__init__"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.options.base_options.BaseOptions.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model", ")", ":", "\n", "        ", "super", "(", "_CustomDataParallel", ",", "self", ")", ".", "__init__", "(", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks._CustomDataParallel.__getattr__": [[103, 109], ["super().__getattr__", "print", "getattr"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks._CustomDataParallel.__getattr__"], ["", "def", "__getattr__", "(", "self", ",", "name", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "return", "super", "(", "_CustomDataParallel", ",", "self", ")", ".", "__getattr__", "(", "name", ")", "\n", "", "except", "AttributeError", ":", "\n", "            ", "print", "(", "name", ")", "\n", "return", "getattr", "(", "self", ".", "module", ",", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.FeatureConsistency.__init__": [[115, 117], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.options.base_options.BaseOptions.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "FeatureConsistency", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.FeatureConsistency.__call__": [[118, 120], ["torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "input", ",", "target", ")", ":", "\n", "        ", "return", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "input", "-", "target", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.R1_reg.__init__": [[123, 126], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.options.base_options.BaseOptions.__init__"], ["    ", "def", "__init__", "(", "self", ",", "lambda_r1", "=", "10.0", ")", ":", "\n", "        ", "super", "(", "R1_reg", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "lambda_r1", "=", "lambda_r1", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.R1_reg.__call__": [[127, 140], ["dydx.pow", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "dydx.pow.size", "d_in.size", "dydx.pow.sum", "d_out.mean"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "d_out", ",", "d_in", ")", ":", "\n", "        ", "\"\"\"Compute gradient penalty: (L2_norm(dy/dx))**2.\"\"\"", "\n", "b", "=", "d_in", ".", "shape", "[", "0", "]", "\n", "dydx", "=", "torch", ".", "autograd", ".", "grad", "(", "outputs", "=", "d_out", ".", "mean", "(", ")", ",", "\n", "inputs", "=", "d_in", ",", "\n", "retain_graph", "=", "True", ",", "\n", "create_graph", "=", "True", ",", "\n", "only_inputs", "=", "True", ")", "[", "0", "]", "\n", "dydx_sq", "=", "dydx", ".", "pow", "(", "2", ")", "\n", "assert", "(", "dydx_sq", ".", "size", "(", ")", "==", "d_in", ".", "size", "(", ")", ")", "\n", "r1_reg", "=", "dydx_sq", ".", "sum", "(", ")", "/", "b", "\n", "\n", "return", "r1_reg", "*", "self", ".", "lambda_r1", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.SelectiveClassesNonSatGANLoss.__init__": [[143, 146], ["torch.Module.__init__", "torch.Softplus", "torch.Softplus", "torch.Softplus", "torch.Softplus"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.options.base_options.BaseOptions.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "SelectiveClassesNonSatGANLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "sofplus", "=", "nn", ".", "Softplus", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.SelectiveClassesNonSatGANLoss.__call__": [[147, 157], ["torch.arange().long", "torch.arange().long", "torch.arange().long", "torch.arange().long", "torch.arange().long", "torch.arange().long", "torch.arange().long", "torch.arange().long", "torch.arange().long", "torch.arange().long", "torch.arange().long", "torch.arange().long", "torch.arange().long", "torch.arange().long", "torch.arange().long", "torch.arange().long", "networks.SelectiveClassesNonSatGANLoss.sofplus().mean", "networks.SelectiveClassesNonSatGANLoss.sofplus().mean", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "networks.SelectiveClassesNonSatGANLoss.sofplus", "networks.SelectiveClassesNonSatGANLoss.sofplus"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "input", ",", "target_classes", ",", "target_is_real", ",", "is_gen", "=", "False", ")", ":", "\n", "        ", "bSize", "=", "input", ".", "shape", "[", "0", "]", "\n", "b_ind", "=", "torch", ".", "arange", "(", "bSize", ")", ".", "long", "(", ")", "\n", "relevant_inputs", "=", "input", "[", "b_ind", ",", "target_classes", ",", ":", ",", ":", "]", "\n", "if", "target_is_real", ":", "\n", "            ", "loss", "=", "self", ".", "sofplus", "(", "-", "relevant_inputs", ")", ".", "mean", "(", ")", "\n", "", "else", ":", "\n", "            ", "loss", "=", "self", ".", "sofplus", "(", "relevant_inputs", ")", ".", "mean", "(", ")", "\n", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.EqualLR.__init__": [[162, 164], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "name", ")", ":", "\n", "        ", "self", ".", "name", "=", "name", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.EqualLR.compute_weight": [[165, 170], ["getattr", "getattr.data.size", "[].numel", "math.sqrt"], "methods", ["None"], ["", "def", "compute_weight", "(", "self", ",", "module", ")", ":", "\n", "        ", "weight", "=", "getattr", "(", "module", ",", "self", ".", "name", "+", "'_orig'", ")", "\n", "fan_in", "=", "weight", ".", "data", ".", "size", "(", "1", ")", "*", "weight", ".", "data", "[", "0", "]", "[", "0", "]", ".", "numel", "(", ")", "\n", "\n", "return", "weight", "*", "sqrt", "(", "2", "/", "fan_in", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.EqualLR.apply": [[171, 181], ["networks.EqualLR", "getattr", "module.register_parameter", "module.register_forward_pre_hook", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "apply", "(", "module", ",", "name", ")", ":", "\n", "        ", "fn", "=", "EqualLR", "(", "name", ")", "\n", "\n", "weight", "=", "getattr", "(", "module", ",", "name", ")", "\n", "del", "module", ".", "_parameters", "[", "name", "]", "\n", "module", ".", "register_parameter", "(", "name", "+", "'_orig'", ",", "nn", ".", "Parameter", "(", "weight", ".", "data", ")", ")", "\n", "module", ".", "register_forward_pre_hook", "(", "fn", ")", "\n", "\n", "return", "fn", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.EqualLR.__call__": [[182, 185], ["networks.EqualLR.compute_weight", "setattr"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.EqualLR.compute_weight"], ["", "def", "__call__", "(", "self", ",", "module", ",", "input", ")", ":", "\n", "        ", "weight", "=", "self", ".", "compute_weight", "(", "module", ")", "\n", "setattr", "(", "module", ",", "self", ".", "name", ",", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.PixelNorm.__init__": [[193, 195], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.options.base_options.BaseOptions.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_channels", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "# num_channels is only used to match function signature with other normalization layers", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.PixelNorm.forward": [[198, 200], ["torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "input", "/", "torch", ".", "sqrt", "(", "torch", ".", "mean", "(", "input", "**", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "+", "1e-5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.ModulatedConv2d.__init__": [[202, 239], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "networks.Blur", "networks.ModulatedConv2d.weight.data.normal_", "networks.ModulatedConv2d.bias.data.zero_", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "networks.EqualLinear", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ZeroPad2d", "torch.ZeroPad2d", "torch.ZeroPad2d", "torch.ZeroPad2d", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "networks.EqualLinear", "networks.PixelNorm"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.options.base_options.BaseOptions.__init__"], ["    ", "def", "__init__", "(", "self", ",", "fin", ",", "fout", ",", "kernel_size", ",", "padding_type", "=", "'reflect'", ",", "upsample", "=", "False", ",", "downsample", "=", "False", ",", "latent_dim", "=", "256", ",", "normalize_mlp", "=", "False", ")", ":", "\n", "        ", "super", "(", "ModulatedConv2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_channels", "=", "fin", "\n", "self", ".", "out_channels", "=", "fout", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "upsample", "=", "upsample", "\n", "self", ".", "downsample", "=", "downsample", "\n", "padding_size", "=", "kernel_size", "//", "2", "\n", "if", "kernel_size", "==", "1", ":", "\n", "            ", "self", ".", "demudulate", "=", "False", "\n", "", "else", ":", "\n", "            ", "self", ".", "demudulate", "=", "True", "\n", "\n", "", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "fout", ",", "fin", ",", "kernel_size", ",", "kernel_size", ")", ")", "\n", "self", ".", "bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "1", ",", "fout", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv", "=", "F", ".", "conv2d", "\n", "\n", "if", "normalize_mlp", ":", "\n", "            ", "self", ".", "mlp_class_std", "=", "nn", ".", "Sequential", "(", "EqualLinear", "(", "latent_dim", ",", "fin", ")", ",", "PixelNorm", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "mlp_class_std", "=", "EqualLinear", "(", "latent_dim", ",", "fin", ")", "\n", "\n", "", "self", ".", "blur", "=", "Blur", "(", "fout", ")", "\n", "\n", "if", "padding_type", "==", "'reflect'", ":", "\n", "            ", "self", ".", "padding", "=", "nn", ".", "ReflectionPad2d", "(", "padding_size", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "padding", "=", "nn", ".", "ZeroPad2d", "(", "padding_size", ")", "\n", "\n", "", "if", "self", ".", "upsample", ":", "\n", "            ", "self", ".", "upsampler", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", "\n", "\n", "", "if", "self", ".", "downsample", ":", "\n", "            ", "self", ".", "downsampler", "=", "nn", ".", "AvgPool2d", "(", "2", ")", "\n", "\n", "", "self", ".", "weight", ".", "data", ".", "normal_", "(", ")", "\n", "self", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.ModulatedConv2d.forward": [[240, 271], ["weight.view.view.view", "networks.ModulatedConv2d.view", "networks.ModulatedConv2d.padding", "networks.ModulatedConv2d.weight.data.size", "[].numel", "math.sqrt", "networks.ModulatedConv2d.mlp_class_std().view", "torch.rsqrt().view", "torch.rsqrt().view", "torch.rsqrt().view", "torch.rsqrt().view", "torch.rsqrt().view", "torch.rsqrt().view", "torch.rsqrt().view", "torch.rsqrt().view", "torch.rsqrt().view", "torch.rsqrt().view", "torch.rsqrt().view", "torch.rsqrt().view", "torch.rsqrt().view", "torch.rsqrt().view", "torch.rsqrt().view", "torch.rsqrt().view", "weight.view.view.view", "networks.ModulatedConv2d.upsampler", "networks.ModulatedConv2d.blur", "networks.ModulatedConv2d.conv().view", "networks.ModulatedConv2d.downsampler", "networks.ModulatedConv2d.blur", "networks.ModulatedConv2d.mlp_class_std", "torch.rsqrt", "torch.rsqrt", "torch.rsqrt", "torch.rsqrt", "torch.rsqrt", "torch.rsqrt", "torch.rsqrt", "torch.rsqrt", "torch.rsqrt", "torch.rsqrt", "torch.rsqrt", "torch.rsqrt", "torch.rsqrt", "torch.rsqrt", "torch.rsqrt", "torch.rsqrt", "networks.ModulatedConv2d.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ",", "latent", ")", ":", "\n", "        ", "fan_in", "=", "self", ".", "weight", ".", "data", ".", "size", "(", "1", ")", "*", "self", ".", "weight", ".", "data", "[", "0", "]", "[", "0", "]", ".", "numel", "(", ")", "\n", "weight", "=", "self", ".", "weight", "*", "sqrt", "(", "2", "/", "fan_in", ")", "\n", "weight", "=", "weight", ".", "view", "(", "1", ",", "self", ".", "out_channels", ",", "self", ".", "in_channels", ",", "self", ".", "kernel_size", ",", "self", ".", "kernel_size", ")", "\n", "\n", "s", "=", "1", "+", "self", ".", "mlp_class_std", "(", "latent", ")", ".", "view", "(", "-", "1", ",", "1", ",", "self", ".", "in_channels", ",", "1", ",", "1", ")", "\n", "weight", "=", "s", "*", "weight", "\n", "if", "self", ".", "demudulate", ":", "\n", "            ", "d", "=", "torch", ".", "rsqrt", "(", "(", "weight", "**", "2", ")", ".", "sum", "(", "4", ")", ".", "sum", "(", "3", ")", ".", "sum", "(", "2", ")", "+", "1e-5", ")", ".", "view", "(", "-", "1", ",", "self", ".", "out_channels", ",", "1", ",", "1", ",", "1", ")", "\n", "weight", "=", "(", "d", "*", "weight", ")", ".", "view", "(", "-", "1", ",", "self", ".", "in_channels", ",", "self", ".", "kernel_size", ",", "self", ".", "kernel_size", ")", "\n", "", "else", ":", "\n", "            ", "weight", "=", "weight", ".", "view", "(", "-", "1", ",", "self", ".", "in_channels", ",", "self", ".", "kernel_size", ",", "self", ".", "kernel_size", ")", "\n", "\n", "", "if", "self", ".", "upsample", ":", "\n", "            ", "input", "=", "self", ".", "upsampler", "(", "input", ")", "\n", "\n", "", "if", "self", ".", "downsample", ":", "\n", "            ", "input", "=", "self", ".", "blur", "(", "input", ")", "\n", "\n", "", "b", ",", "_", ",", "h", ",", "w", "=", "input", ".", "shape", "\n", "input", "=", "input", ".", "view", "(", "1", ",", "-", "1", ",", "h", ",", "w", ")", "\n", "input", "=", "self", ".", "padding", "(", "input", ")", "\n", "out", "=", "self", ".", "conv", "(", "input", ",", "weight", ",", "groups", "=", "b", ")", ".", "view", "(", "b", ",", "self", ".", "out_channels", ",", "h", ",", "w", ")", "+", "self", ".", "bias", "\n", "\n", "if", "self", ".", "downsample", ":", "\n", "            ", "out", "=", "self", ".", "downsampler", "(", "out", ")", "\n", "\n", "", "if", "self", ".", "upsample", ":", "\n", "            ", "out", "=", "self", ".", "blur", "(", "out", ")", "\n", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.EqualConv2d.__init__": [[273, 280], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d.weight.data.normal_", "torch.Conv2d.bias.data.zero_", "networks.equal_lr"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.options.base_options.BaseOptions.__init__", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.equal_lr"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "conv", "=", "nn", ".", "Conv2d", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "conv", ".", "weight", ".", "data", ".", "normal_", "(", ")", "\n", "conv", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "self", ".", "conv", "=", "equal_lr", "(", "conv", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.EqualConv2d.forward": [[281, 283], ["networks.EqualConv2d.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "self", ".", "conv", "(", "input", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.EqualLinear.__init__": [[286, 294], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear.weight.data.normal_", "torch.Linear.bias.data.zero_", "networks.equal_lr"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.options.base_options.BaseOptions.__init__", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.equal_lr"], ["    ", "def", "__init__", "(", "self", ",", "in_dim", ",", "out_dim", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "linear", "=", "nn", ".", "Linear", "(", "in_dim", ",", "out_dim", ")", "\n", "linear", ".", "weight", ".", "data", ".", "normal_", "(", ")", "\n", "linear", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n", "self", ".", "linear", "=", "equal_lr", "(", "linear", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.EqualLinear.forward": [[295, 297], ["networks.EqualLinear.linear"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "self", ".", "linear", "(", "input", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.BlurFunctionBackward.forward": [[299, 308], ["ctx.save_for_backward", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "grad_output", ",", "kernel", ",", "kernel_flip", ")", ":", "\n", "        ", "ctx", ".", "save_for_backward", "(", "kernel", ",", "kernel_flip", ")", "\n", "\n", "grad_input", "=", "F", ".", "conv2d", "(", "\n", "grad_output", ",", "kernel_flip", ",", "padding", "=", "1", ",", "groups", "=", "grad_output", ".", "shape", "[", "1", "]", "\n", ")", "\n", "\n", "return", "grad_input", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.BlurFunctionBackward.backward": [[309, 318], ["torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "gradgrad_output", ")", ":", "\n", "        ", "kernel", ",", "kernel_flip", "=", "ctx", ".", "saved_tensors", "\n", "\n", "grad_input", "=", "F", ".", "conv2d", "(", "\n", "gradgrad_output", ",", "kernel", ",", "padding", "=", "1", ",", "groups", "=", "gradgrad_output", ".", "shape", "[", "1", "]", "\n", ")", "\n", "\n", "return", "grad_input", ",", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.BlurFunction.forward": [[320, 327], ["ctx.save_for_backward", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "input", ",", "kernel", ",", "kernel_flip", ")", ":", "\n", "        ", "ctx", ".", "save_for_backward", "(", "kernel", ",", "kernel_flip", ")", "\n", "\n", "output", "=", "F", ".", "conv2d", "(", "input", ",", "kernel", ",", "padding", "=", "1", ",", "groups", "=", "input", ".", "shape", "[", "1", "]", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.BlurFunction.backward": [[328, 335], ["BlurFunctionBackward.apply"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.EqualLR.apply"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_output", ")", ":", "\n", "        ", "kernel", ",", "kernel_flip", "=", "ctx", ".", "saved_tensors", "\n", "\n", "grad_input", "=", "BlurFunctionBackward", ".", "apply", "(", "grad_output", ",", "kernel", ",", "kernel_flip", ")", "\n", "\n", "return", "grad_input", ",", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.Blur.__init__": [[339, 349], ["torch.Module.__init__", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "weight.view.view.view", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "networks.Blur.register_buffer", "networks.Blur.register_buffer", "weight.view.view.sum", "weight.view.view.repeat", "torch.flip.repeat", "torch.flip.repeat", "torch.flip.repeat", "torch.flip.repeat"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.options.base_options.BaseOptions.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "weight", "=", "torch", ".", "tensor", "(", "[", "[", "1", ",", "2", ",", "1", "]", ",", "[", "2", ",", "4", ",", "2", "]", ",", "[", "1", ",", "2", ",", "1", "]", "]", ",", "dtype", "=", "torch", ".", "float32", ")", "\n", "weight", "=", "weight", ".", "view", "(", "1", ",", "1", ",", "3", ",", "3", ")", "\n", "weight", "=", "weight", "/", "weight", ".", "sum", "(", ")", "\n", "weight_flip", "=", "torch", ".", "flip", "(", "weight", ",", "[", "2", ",", "3", "]", ")", "\n", "\n", "self", ".", "register_buffer", "(", "'weight'", ",", "weight", ".", "repeat", "(", "channel", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "register_buffer", "(", "'weight_flip'", ",", "weight_flip", ".", "repeat", "(", "channel", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.Blur.forward": [[350, 352], ["blur"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "blur", "(", "input", ",", "self", ".", "weight", ",", "self", ".", "weight_flip", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.MLP.__init__": [[354, 397], ["torch.Module.__init__", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "linear", "linear", "BidirectionalLeakyReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "networks.PixelNorm", "networks.PixelNorm", "linear", "networks.PixelNorm", "networks.PixelNorm"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.options.base_options.BaseOptions.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_dim", ",", "out_dim", ",", "fc_dim", ",", "n_fc", ",", "\n", "weight_norm", "=", "False", ",", "activation", "=", "'relu'", ",", "normalize_mlp", "=", "False", ")", ":", "#, pixel_norm=False):", "\n", "        ", "super", "(", "MLP", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "weight_norm", ":", "\n", "            ", "linear", "=", "EqualLinear", "\n", "", "else", ":", "\n", "            ", "linear", "=", "nn", ".", "Linear", "\n", "\n", "", "if", "activation", "==", "'lrelu'", ":", "\n", "            ", "actvn", "=", "nn", ".", "LeakyReLU", "(", "0.2", ",", "True", ")", "\n", "", "elif", "activation", "==", "'blrelu'", ":", "\n", "            ", "actvn", "=", "BidirectionalLeakyReLU", "(", ")", "\n", "", "else", ":", "\n", "            ", "actvn", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "\n", "", "self", ".", "input_dim", "=", "input_dim", "\n", "self", ".", "model", "=", "[", "]", "\n", "\n", "# normalize input", "\n", "if", "normalize_mlp", ":", "\n", "            ", "self", ".", "model", "+=", "[", "PixelNorm", "(", ")", "]", "\n", "\n", "# set the first layer", "\n", "", "self", ".", "model", "+=", "[", "linear", "(", "input_dim", ",", "fc_dim", ")", ",", "\n", "actvn", "]", "\n", "if", "normalize_mlp", ":", "\n", "            ", "self", ".", "model", "+=", "[", "PixelNorm", "(", ")", "]", "\n", "\n", "# set the inner layers", "\n", "", "for", "i", "in", "range", "(", "n_fc", "-", "2", ")", ":", "\n", "            ", "self", ".", "model", "+=", "[", "linear", "(", "fc_dim", ",", "fc_dim", ")", ",", "\n", "actvn", "]", "\n", "if", "normalize_mlp", ":", "\n", "                ", "self", ".", "model", "+=", "[", "PixelNorm", "(", ")", "]", "\n", "\n", "# set the last layer", "\n", "", "", "self", ".", "model", "+=", "[", "linear", "(", "fc_dim", ",", "out_dim", ")", "]", "# no output activations", "\n", "\n", "# normalize output", "\n", "if", "normalize_mlp", ":", "\n", "            ", "self", ".", "model", "+=", "[", "PixelNorm", "(", ")", "]", "\n", "\n", "", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.MLP.forward": [[398, 401], ["networks.MLP.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "out", "=", "self", ".", "model", "(", "input", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.StyledConvBlock.__init__": [[403, 466], ["torch.Module.__init__", "math.sqrt", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "conv2d", "conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "networks.PixelNorm", "conv2d", "conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "networks.PixelNorm", "padding_layer", "networks.Blur", "padding_layer", "networks.Blur", "padding_layer", "padding_layer"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.options.base_options.BaseOptions.__init__"], ["    ", "def", "__init__", "(", "self", ",", "fin", ",", "fout", ",", "latent_dim", "=", "256", ",", "padding", "=", "'reflect'", ",", "upsample", "=", "False", ",", "downsample", "=", "False", ",", "\n", "actvn", "=", "'lrelu'", ",", "use_pixel_norm", "=", "False", ",", "normalize_affine_output", "=", "False", ",", "modulated_conv", "=", "False", ")", ":", "\n", "        ", "super", "(", "StyledConvBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "not", "modulated_conv", ":", "\n", "            ", "if", "padding", "==", "'reflect'", ":", "\n", "                ", "padding_layer", "=", "nn", ".", "ReflectionPad2d", "\n", "", "else", ":", "\n", "                ", "padding_layer", "=", "nn", ".", "ZeroPad2d", "\n", "\n", "", "", "if", "modulated_conv", ":", "\n", "            ", "conv2d", "=", "ModulatedConv2d", "\n", "", "else", ":", "\n", "            ", "conv2d", "=", "EqualConv2d", "\n", "\n", "", "if", "modulated_conv", ":", "\n", "            ", "self", ".", "actvn_gain", "=", "sqrt", "(", "2", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "actvn_gain", "=", "1.0", "\n", "\n", "", "self", ".", "use_pixel_norm", "=", "use_pixel_norm", "\n", "self", ".", "upsample", "=", "upsample", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "modulated_conv", "=", "modulated_conv", "\n", "\n", "if", "actvn", "==", "'relu'", ":", "\n", "            ", "activation", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "", "else", ":", "\n", "            ", "activation", "=", "nn", ".", "LeakyReLU", "(", "0.2", ",", "True", ")", "\n", "\n", "", "if", "self", ".", "downsample", ":", "\n", "            ", "self", ".", "downsampler", "=", "nn", ".", "AvgPool2d", "(", "2", ")", "\n", "\n", "", "if", "self", ".", "modulated_conv", ":", "\n", "            ", "self", ".", "conv0", "=", "conv2d", "(", "fin", ",", "fout", ",", "kernel_size", "=", "3", ",", "padding_type", "=", "padding", ",", "upsample", "=", "upsample", ",", "\n", "latent_dim", "=", "latent_dim", ",", "normalize_mlp", "=", "normalize_affine_output", ")", "\n", "", "else", ":", "\n", "            ", "conv0", "=", "conv2d", "(", "fin", ",", "fout", ",", "kernel_size", "=", "3", ")", "\n", "if", "self", ".", "upsample", ":", "\n", "                ", "seq0", "=", "[", "self", ".", "upsampler", ",", "padding_layer", "(", "1", ")", ",", "conv0", ",", "Blur", "(", "fout", ")", "]", "\n", "", "else", ":", "\n", "                ", "seq0", "=", "[", "padding_layer", "(", "1", ")", ",", "conv0", "]", "\n", "", "self", ".", "conv0", "=", "nn", ".", "Sequential", "(", "*", "seq0", ")", "\n", "\n", "", "if", "use_pixel_norm", ":", "\n", "            ", "self", ".", "pxl_norm0", "=", "PixelNorm", "(", ")", "\n", "\n", "", "self", ".", "actvn0", "=", "activation", "\n", "\n", "if", "self", ".", "modulated_conv", ":", "\n", "            ", "self", ".", "conv1", "=", "conv2d", "(", "fout", ",", "fout", ",", "kernel_size", "=", "3", ",", "padding_type", "=", "padding", ",", "downsample", "=", "downsample", ",", "\n", "latent_dim", "=", "latent_dim", ",", "normalize_mlp", "=", "normalize_affine_output", ")", "\n", "", "else", ":", "\n", "            ", "conv1", "=", "conv2d", "(", "fout", ",", "fout", ",", "kernel_size", "=", "3", ")", "\n", "if", "self", ".", "downsample", ":", "\n", "                ", "seq1", "=", "[", "Blur", "(", "fout", ")", ",", "padding_layer", "(", "1", ")", ",", "conv1", ",", "self", ".", "downsampler", "]", "\n", "", "else", ":", "\n", "                ", "seq1", "=", "[", "padding_layer", "(", "1", ")", ",", "conv1", "]", "\n", "", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "*", "seq1", ")", "\n", "\n", "", "if", "use_pixel_norm", ":", "\n", "            ", "self", ".", "pxl_norm1", "=", "PixelNorm", "(", ")", "\n", "\n", "", "self", ".", "actvn1", "=", "activation", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.StyledConvBlock.forward": [[467, 487], ["networks.StyledConvBlock.conv0", "networks.StyledConvBlock.conv0", "networks.StyledConvBlock.actvn0", "networks.StyledConvBlock.pxl_norm0", "networks.StyledConvBlock.conv1", "networks.StyledConvBlock.conv1", "networks.StyledConvBlock.actvn1", "networks.StyledConvBlock.pxl_norm1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ",", "latent", "=", "None", ")", ":", "\n", "        ", "if", "self", ".", "modulated_conv", ":", "\n", "            ", "out", "=", "self", ".", "conv0", "(", "input", ",", "latent", ")", "\n", "", "else", ":", "\n", "            ", "out", "=", "self", ".", "conv0", "(", "input", ")", "\n", "\n", "", "out", "=", "self", ".", "actvn0", "(", "out", ")", "*", "self", ".", "actvn_gain", "\n", "if", "self", ".", "use_pixel_norm", ":", "\n", "            ", "out", "=", "self", ".", "pxl_norm0", "(", "out", ")", "\n", "\n", "", "if", "self", ".", "modulated_conv", ":", "\n", "            ", "out", "=", "self", ".", "conv1", "(", "out", ",", "latent", ")", "\n", "", "else", ":", "\n", "            ", "out", "=", "self", ".", "conv1", "(", "out", ")", "\n", "\n", "", "out", "=", "self", ".", "actvn1", "(", "out", ")", "*", "self", ".", "actvn_gain", "\n", "if", "self", ".", "use_pixel_norm", ":", "\n", "            ", "out", "=", "self", ".", "pxl_norm1", "(", "out", ")", "\n", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.IdentityEncoder.__init__": [[489, 525], ["torch.Module.__init__", "range", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "padding_layer", "conv2d", "norm_layer", "padding_layer", "conv2d", "norm_layer", "networks.ResnetBlock"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.options.base_options.BaseOptions.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_nc", ",", "ngf", "=", "64", ",", "n_downsampling", "=", "3", ",", "n_blocks", "=", "7", ",", "\n", "norm_layer", "=", "PixelNorm", ",", "padding_type", "=", "'reflect'", ",", "\n", "conv_weight_norm", "=", "False", ",", "actvn", "=", "'relu'", ")", ":", "\n", "        ", "assert", "(", "n_blocks", ">=", "0", ")", "\n", "super", "(", "IdentityEncoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "padding_type", "==", "'reflect'", ":", "\n", "            ", "padding_layer", "=", "nn", ".", "ReflectionPad2d", "\n", "", "else", ":", "\n", "            ", "padding_layer", "=", "nn", ".", "ZeroPad2d", "\n", "\n", "", "if", "conv_weight_norm", ":", "\n", "            ", "conv2d", "=", "EqualConv2d", "\n", "", "else", ":", "\n", "            ", "conv2d", "=", "nn", ".", "Conv2d", "\n", "\n", "", "if", "actvn", "==", "'lrelu'", ":", "\n", "            ", "activation", "=", "nn", ".", "LeakyReLU", "(", "0.2", ",", "True", ")", "\n", "", "else", ":", "\n", "            ", "activation", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "\n", "", "encoder", "=", "[", "padding_layer", "(", "3", ")", ",", "conv2d", "(", "input_nc", ",", "ngf", ",", "kernel_size", "=", "7", ",", "padding", "=", "0", ")", ",", "norm_layer", "(", "ngf", ")", ",", "activation", "]", "\n", "### downsample", "\n", "for", "i", "in", "range", "(", "n_downsampling", ")", ":", "\n", "            ", "mult", "=", "2", "**", "i", "\n", "encoder", "+=", "[", "padding_layer", "(", "1", ")", ",", "\n", "conv2d", "(", "ngf", "*", "mult", ",", "ngf", "*", "mult", "*", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "0", ")", ",", "\n", "norm_layer", "(", "ngf", "*", "mult", "*", "2", ")", ",", "activation", "]", "\n", "\n", "### resnet blocks", "\n", "", "mult", "=", "2", "**", "n_downsampling", "\n", "for", "i", "in", "range", "(", "n_blocks", ")", ":", "\n", "            ", "encoder", "+=", "[", "ResnetBlock", "(", "ngf", "*", "mult", ",", "padding_type", "=", "padding_type", ",", "activation", "=", "activation", ",", "\n", "norm_layer", "=", "norm_layer", ",", "conv_weight_norm", "=", "conv_weight_norm", ")", "]", "\n", "\n", "", "self", ".", "encoder", "=", "nn", ".", "Sequential", "(", "*", "encoder", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.IdentityEncoder.forward": [[526, 528], ["networks.IdentityEncoder.encoder"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "self", ".", "encoder", "(", "input", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.AgeEncoder.__init__": [[530, 560], ["torch.Module.__init__", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "padding_layer", "conv2d", "conv2d", "padding_layer", "conv2d"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.options.base_options.BaseOptions.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_nc", ",", "ngf", "=", "64", ",", "n_downsampling", "=", "4", ",", "style_dim", "=", "50", ",", "padding_type", "=", "'reflect'", ",", "\n", "conv_weight_norm", "=", "False", ",", "actvn", "=", "'lrelu'", ")", ":", "\n", "        ", "super", "(", "AgeEncoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "padding_type", "==", "'reflect'", ":", "\n", "            ", "padding_layer", "=", "nn", ".", "ReflectionPad2d", "\n", "", "else", ":", "\n", "            ", "padding_layer", "=", "nn", ".", "ZeroPad2d", "\n", "\n", "", "if", "conv_weight_norm", ":", "\n", "            ", "conv2d", "=", "EqualConv2d", "\n", "", "else", ":", "\n", "            ", "conv2d", "=", "nn", ".", "Conv2d", "\n", "\n", "", "if", "actvn", "==", "'lrelu'", ":", "\n", "            ", "activation", "=", "nn", ".", "LeakyReLU", "(", "0.2", ",", "True", ")", "\n", "", "else", ":", "\n", "            ", "activation", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "\n", "", "encoder", "=", "[", "padding_layer", "(", "3", ")", ",", "conv2d", "(", "input_nc", ",", "ngf", ",", "kernel_size", "=", "7", ",", "padding", "=", "0", ")", ",", "activation", "]", "\n", "### downsample", "\n", "for", "i", "in", "range", "(", "n_downsampling", ")", ":", "\n", "            ", "mult", "=", "2", "**", "i", "\n", "encoder", "+=", "[", "padding_layer", "(", "1", ")", ",", "\n", "conv2d", "(", "ngf", "*", "mult", ",", "ngf", "*", "mult", "*", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "0", ")", ",", "\n", "activation", "]", "\n", "\n", "", "encoder", "+=", "[", "conv2d", "(", "ngf", "*", "mult", "*", "2", ",", "style_dim", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "]", "\n", "\n", "self", ".", "encoder", "=", "nn", ".", "Sequential", "(", "*", "encoder", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.AgeEncoder.forward": [[561, 565], ["networks.AgeEncoder.encoder", "networks.AgeEncoder.mean().mean", "networks.AgeEncoder.mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "features", "=", "self", ".", "encoder", "(", "input", ")", "\n", "latent", "=", "features", ".", "mean", "(", "dim", "=", "3", ")", ".", "mean", "(", "dim", "=", "2", ")", "\n", "return", "latent", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.StyledDecoder.__init__": [[567, 616], ["torch.Module.__init__", "networks.StyledConvBlock", "networks.StyledConvBlock", "networks.StyledConvBlock", "networks.StyledConvBlock", "networks.StyledConvBlock", "networks.StyledConvBlock", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "networks.MLP", "networks.EqualConv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.options.base_options.BaseOptions.__init__"], ["    ", "def", "__init__", "(", "self", ",", "output_nc", ",", "ngf", "=", "64", ",", "style_dim", "=", "50", ",", "latent_dim", "=", "256", ",", "n_downsampling", "=", "2", ",", "\n", "padding_type", "=", "'reflect'", ",", "actvn", "=", "'lrelu'", ",", "use_tanh", "=", "True", ",", "use_pixel_norm", "=", "False", ",", "\n", "normalize_mlp", "=", "False", ",", "modulated_conv", "=", "False", ")", ":", "\n", "        ", "super", "(", "StyledDecoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "padding_type", "==", "'reflect'", ":", "\n", "            ", "padding_layer", "=", "nn", ".", "ReflectionPad2d", "\n", "", "else", ":", "\n", "            ", "padding_layer", "=", "nn", ".", "ZeroPad2d", "\n", "\n", "", "mult", "=", "2", "**", "n_downsampling", "\n", "last_upconv_out_layers", "=", "ngf", "*", "mult", "//", "4", "\n", "\n", "self", ".", "StyledConvBlock_0", "=", "StyledConvBlock", "(", "ngf", "*", "mult", ",", "ngf", "*", "mult", ",", "latent_dim", "=", "latent_dim", ",", "\n", "padding", "=", "padding_type", ",", "actvn", "=", "actvn", ",", "\n", "use_pixel_norm", "=", "use_pixel_norm", ",", "\n", "normalize_affine_output", "=", "normalize_mlp", ",", "\n", "modulated_conv", "=", "modulated_conv", ")", "\n", "\n", "self", ".", "StyledConvBlock_1", "=", "StyledConvBlock", "(", "ngf", "*", "mult", ",", "ngf", "*", "mult", ",", "latent_dim", "=", "latent_dim", ",", "\n", "padding", "=", "padding_type", ",", "actvn", "=", "actvn", ",", "\n", "use_pixel_norm", "=", "use_pixel_norm", ",", "\n", "normalize_affine_output", "=", "normalize_mlp", ",", "\n", "modulated_conv", "=", "modulated_conv", ")", "\n", "\n", "self", ".", "StyledConvBlock_2", "=", "StyledConvBlock", "(", "ngf", "*", "mult", ",", "ngf", "*", "mult", ",", "latent_dim", "=", "latent_dim", ",", "\n", "padding", "=", "padding_type", ",", "actvn", "=", "actvn", ",", "\n", "use_pixel_norm", "=", "use_pixel_norm", ",", "\n", "normalize_affine_output", "=", "normalize_mlp", ",", "\n", "modulated_conv", "=", "modulated_conv", ")", "\n", "\n", "self", ".", "StyledConvBlock_3", "=", "StyledConvBlock", "(", "ngf", "*", "mult", ",", "ngf", "*", "mult", ",", "latent_dim", "=", "latent_dim", ",", "\n", "padding", "=", "padding_type", ",", "actvn", "=", "actvn", ",", "\n", "use_pixel_norm", "=", "use_pixel_norm", ",", "\n", "normalize_affine_output", "=", "normalize_mlp", ",", "\n", "modulated_conv", "=", "modulated_conv", ")", "\n", "\n", "self", ".", "StyledConvBlock_up0", "=", "StyledConvBlock", "(", "ngf", "*", "mult", ",", "ngf", "*", "mult", "//", "2", ",", "latent_dim", "=", "latent_dim", ",", "\n", "padding", "=", "padding_type", ",", "upsample", "=", "True", ",", "actvn", "=", "actvn", ",", "\n", "use_pixel_norm", "=", "use_pixel_norm", ",", "\n", "normalize_affine_output", "=", "normalize_mlp", ",", "\n", "modulated_conv", "=", "modulated_conv", ")", "\n", "self", ".", "StyledConvBlock_up1", "=", "StyledConvBlock", "(", "ngf", "*", "mult", "//", "2", ",", "last_upconv_out_layers", ",", "latent_dim", "=", "latent_dim", ",", "\n", "padding", "=", "padding_type", ",", "upsample", "=", "True", ",", "actvn", "=", "actvn", ",", "\n", "use_pixel_norm", "=", "use_pixel_norm", ",", "\n", "normalize_affine_output", "=", "normalize_mlp", ",", "\n", "modulated_conv", "=", "modulated_conv", ")", "\n", "\n", "self", ".", "conv_img", "=", "nn", ".", "Sequential", "(", "EqualConv2d", "(", "last_upconv_out_layers", ",", "output_nc", ",", "1", ")", ",", "nn", ".", "Tanh", "(", ")", ")", "\n", "self", ".", "mlp", "=", "MLP", "(", "style_dim", ",", "latent_dim", ",", "256", ",", "8", ",", "weight_norm", "=", "True", ",", "activation", "=", "actvn", ",", "normalize_mlp", "=", "normalize_mlp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.StyledDecoder.forward": [[617, 649], ["networks.StyledDecoder.StyledConvBlock_0", "networks.StyledDecoder.StyledConvBlock_1", "networks.StyledDecoder.StyledConvBlock_2", "networks.StyledDecoder.StyledConvBlock_3", "networks.StyledDecoder.StyledConvBlock_up0", "networks.StyledDecoder.StyledConvBlock_up1", "networks.StyledDecoder.conv_img", "id_features.repeat.repeat.repeat", "range", "torch.arange().view().cuda", "torch.arange().view().cuda", "torch.arange().view().cuda", "torch.arange().view().cuda", "torch.arange().view().cuda", "torch.arange().view().cuda", "torch.arange().view().cuda", "torch.arange().view().cuda", "torch.arange().view().cuda", "torch.arange().view().cuda", "torch.arange().view().cuda", "torch.arange().view().cuda", "torch.arange().view().cuda", "torch.arange().view().cuda", "torch.arange().view().cuda", "torch.arange().view().cuda", "len", "networks.StyledDecoder.mlp", "networks.StyledDecoder.new_zeros", "networks.StyledDecoder.mlp", "id_features.repeat.repeat.repeat", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "id_features", ",", "target_age", "=", "None", ",", "traverse", "=", "False", ",", "deploy", "=", "False", ",", "interp_step", "=", "0.5", ")", ":", "\n", "        ", "if", "target_age", "is", "not", "None", ":", "\n", "            ", "if", "traverse", ":", "\n", "                ", "alphas", "=", "torch", ".", "arange", "(", "1", ",", "0", ",", "step", "=", "-", "interp_step", ")", ".", "view", "(", "-", "1", ",", "1", ")", ".", "cuda", "(", ")", "\n", "interps", "=", "len", "(", "alphas", ")", "\n", "orig_class_num", "=", "target_age", ".", "shape", "[", "0", "]", "\n", "output_classes", "=", "interps", "*", "(", "orig_class_num", "-", "1", ")", "+", "1", "\n", "temp_latent", "=", "self", ".", "mlp", "(", "target_age", ")", "\n", "latent", "=", "temp_latent", ".", "new_zeros", "(", "(", "output_classes", ",", "temp_latent", ".", "shape", "[", "1", "]", ")", ")", "\n", "", "else", ":", "\n", "                ", "latent", "=", "self", ".", "mlp", "(", "target_age", ")", "\n", "", "", "else", ":", "\n", "            ", "latent", "=", "None", "\n", "\n", "", "if", "traverse", ":", "\n", "            ", "id_features", "=", "id_features", ".", "repeat", "(", "output_classes", ",", "1", ",", "1", ",", "1", ")", "\n", "for", "i", "in", "range", "(", "orig_class_num", "-", "1", ")", ":", "\n", "                ", "latent", "[", "interps", "*", "i", ":", "interps", "*", "(", "i", "+", "1", ")", ",", ":", "]", "=", "alphas", "*", "temp_latent", "[", "i", ",", ":", "]", "+", "(", "1", "-", "alphas", ")", "*", "temp_latent", "[", "i", "+", "1", ",", ":", "]", "\n", "", "latent", "[", "-", "1", ",", ":", "]", "=", "temp_latent", "[", "-", "1", ",", ":", "]", "\n", "", "elif", "deploy", ":", "\n", "            ", "output_classes", "=", "target_age", ".", "shape", "[", "0", "]", "\n", "id_features", "=", "id_features", ".", "repeat", "(", "output_classes", ",", "1", ",", "1", ",", "1", ")", "\n", "\n", "", "out", "=", "self", ".", "StyledConvBlock_0", "(", "id_features", ",", "latent", ")", "\n", "out", "=", "self", ".", "StyledConvBlock_1", "(", "out", ",", "latent", ")", "\n", "out", "=", "self", ".", "StyledConvBlock_2", "(", "out", ",", "latent", ")", "\n", "out", "=", "self", ".", "StyledConvBlock_3", "(", "out", ",", "latent", ")", "\n", "out", "=", "self", ".", "StyledConvBlock_up0", "(", "out", ",", "latent", ")", "\n", "out", "=", "self", ".", "StyledConvBlock_up1", "(", "out", ",", "latent", ")", "\n", "out", "=", "self", ".", "conv_img", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.Generator.__init__": [[651, 670], ["torch.Module.__init__", "networks.IdentityEncoder", "networks.AgeEncoder", "networks.StyledDecoder"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.options.base_options.BaseOptions.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_nc", ",", "output_nc", ",", "ngf", "=", "64", ",", "style_dim", "=", "50", ",", "n_downsampling", "=", "2", ",", "\n", "n_blocks", "=", "4", ",", "adaptive_blocks", "=", "4", ",", "id_enc_norm", "=", "PixelNorm", ",", "\n", "padding_type", "=", "'reflect'", ",", "conv_weight_norm", "=", "False", ",", "\n", "decoder_norm", "=", "'pixel'", ",", "actvn", "=", "'lrelu'", ",", "normalize_mlp", "=", "False", ",", "\n", "modulated_conv", "=", "False", ")", ":", "\n", "        ", "super", "(", "Generator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "id_encoder", "=", "IdentityEncoder", "(", "input_nc", ",", "ngf", ",", "n_downsampling", ",", "n_blocks", ",", "id_enc_norm", ",", "\n", "padding_type", ",", "conv_weight_norm", "=", "conv_weight_norm", ",", "\n", "actvn", "=", "'relu'", ")", "# replacing relu with leaky relu here causes nans and the entire training to collapse immediately", "\n", "self", ".", "age_encoder", "=", "AgeEncoder", "(", "input_nc", ",", "ngf", "=", "ngf", ",", "n_downsampling", "=", "4", ",", "style_dim", "=", "style_dim", ",", "\n", "padding_type", "=", "padding_type", ",", "actvn", "=", "actvn", ",", "\n", "conv_weight_norm", "=", "conv_weight_norm", ")", "\n", "\n", "use_pixel_norm", "=", "decoder_norm", "==", "'pixel'", "\n", "self", ".", "decoder", "=", "StyledDecoder", "(", "output_nc", ",", "ngf", "=", "ngf", ",", "style_dim", "=", "style_dim", ",", "\n", "n_downsampling", "=", "n_downsampling", ",", "actvn", "=", "actvn", ",", "\n", "use_pixel_norm", "=", "use_pixel_norm", ",", "\n", "normalize_mlp", "=", "normalize_mlp", ",", "\n", "modulated_conv", "=", "modulated_conv", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.Generator.encode": [[671, 678], ["torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "networks.Generator.id_encoder", "networks.Generator.age_encoder"], "methods", ["None"], ["", "def", "encode", "(", "self", ",", "input", ")", ":", "\n", "        ", "if", "torch", ".", "is_tensor", "(", "input", ")", ":", "\n", "            ", "id_features", "=", "self", ".", "id_encoder", "(", "input", ")", "\n", "age_features", "=", "self", ".", "age_encoder", "(", "input", ")", "\n", "return", "id_features", ",", "age_features", "\n", "", "else", ":", "\n", "            ", "return", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.Generator.decode": [[679, 684], ["torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "networks.Generator.decoder"], "methods", ["None"], ["", "", "def", "decode", "(", "self", ",", "id_features", ",", "target_age_features", ",", "traverse", "=", "False", ",", "deploy", "=", "False", ",", "interp_step", "=", "0.5", ")", ":", "\n", "        ", "if", "torch", ".", "is_tensor", "(", "id_features", ")", ":", "\n", "            ", "return", "self", ".", "decoder", "(", "id_features", ",", "target_age_features", ",", "traverse", "=", "traverse", ",", "deploy", "=", "deploy", ",", "interp_step", "=", "interp_step", ")", "\n", "", "else", ":", "\n", "            ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.Generator.forward": [[686, 704], ["networks.Generator.id_encoder", "networks.Generator.age_encoder", "networks.Generator.decode", "networks.Generator.decode", "networks.Generator.id_encoder", "networks.Generator.age_encoder", "networks.Generator.decode"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.Generator.decode", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.Generator.decode", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.Generator.decode"], ["", "", "def", "forward", "(", "self", ",", "input", ",", "target_age_code", ",", "cyc_age_code", ",", "source_age_code", ",", "disc_pass", "=", "False", ")", ":", "\n", "        ", "orig_id_features", "=", "self", ".", "id_encoder", "(", "input", ")", "\n", "orig_age_features", "=", "self", ".", "age_encoder", "(", "input", ")", "\n", "if", "disc_pass", ":", "\n", "            ", "rec_out", "=", "None", "\n", "", "else", ":", "\n", "            ", "rec_out", "=", "self", ".", "decode", "(", "orig_id_features", ",", "source_age_code", ")", "\n", "\n", "", "gen_out", "=", "self", ".", "decode", "(", "orig_id_features", ",", "target_age_code", ")", "\n", "if", "disc_pass", ":", "\n", "            ", "fake_id_features", "=", "None", "\n", "fake_age_features", "=", "None", "\n", "cyc_out", "=", "None", "\n", "", "else", ":", "\n", "            ", "fake_id_features", "=", "self", ".", "id_encoder", "(", "gen_out", ")", "\n", "fake_age_features", "=", "self", ".", "age_encoder", "(", "gen_out", ")", "\n", "cyc_out", "=", "self", ".", "decode", "(", "fake_id_features", ",", "cyc_age_code", ")", "\n", "", "return", "rec_out", ",", "gen_out", ",", "cyc_out", ",", "orig_id_features", ",", "orig_age_features", ",", "fake_id_features", ",", "fake_age_features", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.Generator.infer": [[706, 710], ["networks.Generator.id_encoder", "networks.Generator.decode"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.Generator.decode"], ["", "def", "infer", "(", "self", ",", "input", ",", "target_age_features", ",", "traverse", "=", "False", ",", "deploy", "=", "False", ",", "interp_step", "=", "0.5", ")", ":", "\n", "        ", "id_features", "=", "self", ".", "id_encoder", "(", "input", ")", "\n", "out", "=", "self", ".", "decode", "(", "id_features", ",", "target_age_features", ",", "traverse", "=", "traverse", ",", "deploy", "=", "deploy", ",", "interp_step", "=", "interp_step", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.ResnetBlock.__init__": [[713, 718], ["torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Module.__init__", "networks.ResnetBlock.build_conv_block"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.options.base_options.BaseOptions.__init__", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.ResnetBlock.build_conv_block"], ["    ", "def", "__init__", "(", "self", ",", "dim", ",", "padding_type", ",", "norm_layer", ",", "activation", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "conv_weight_norm", "=", "False", ",", "use_pixel_norm", "=", "False", ")", ":", "\n", "        ", "super", "(", "ResnetBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv_block", "=", "self", ".", "build_conv_block", "(", "dim", ",", "padding_type", ",", "norm_layer", ",", "activation", ",", "\n", "conv_weight_norm", ",", "use_pixel_norm", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.ResnetBlock.build_conv_block": [[719, 757], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "networks.PixelNorm", "conv2d", "norm_layer", "conv2d", "norm_layer", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReplicationPad2d", "torch.ReplicationPad2d", "torch.ReplicationPad2d", "torch.ReplicationPad2d", "NotImplementedError", "torch.ReplicationPad2d", "torch.ReplicationPad2d", "torch.ReplicationPad2d", "torch.ReplicationPad2d", "NotImplementedError"], "methods", ["None"], ["", "def", "build_conv_block", "(", "self", ",", "dim", ",", "padding_type", ",", "norm_layer", ",", "activation", ",", "conv_weight_norm", ",", "use_pixel_norm", ")", ":", "\n", "        ", "conv_block", "=", "[", "]", "\n", "p", "=", "0", "\n", "if", "padding_type", "==", "'reflect'", ":", "\n", "            ", "conv_block", "+=", "[", "nn", ".", "ReflectionPad2d", "(", "1", ")", "]", "\n", "", "elif", "padding_type", "==", "'replicate'", ":", "\n", "            ", "conv_block", "+=", "[", "nn", ".", "ReplicationPad2d", "(", "1", ")", "]", "\n", "", "elif", "padding_type", "==", "'zero'", ":", "\n", "            ", "p", "=", "1", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", "'padding [%s] is not implemented'", "%", "padding_type", ")", "\n", "\n", "", "if", "conv_weight_norm", ":", "\n", "            ", "conv2d", "=", "EqualConv2d", "\n", "", "else", ":", "\n", "            ", "conv2d", "=", "nn", ".", "Conv2d", "\n", "\n", "", "self", ".", "use_pixel_norm", "=", "use_pixel_norm", "\n", "if", "self", ".", "use_pixel_norm", ":", "\n", "            ", "self", ".", "pixel_norm", "=", "PixelNorm", "(", ")", "\n", "\n", "", "conv_block", "+=", "[", "conv2d", "(", "dim", ",", "dim", ",", "kernel_size", "=", "3", ",", "padding", "=", "p", ")", ",", "\n", "norm_layer", "(", "dim", ")", ",", "\n", "activation", "]", "\n", "\n", "p", "=", "0", "\n", "if", "padding_type", "==", "'reflect'", ":", "\n", "            ", "conv_block", "+=", "[", "nn", ".", "ReflectionPad2d", "(", "1", ")", "]", "\n", "", "elif", "padding_type", "==", "'replicate'", ":", "\n", "            ", "conv_block", "+=", "[", "nn", ".", "ReplicationPad2d", "(", "1", ")", "]", "\n", "", "elif", "padding_type", "==", "'zero'", ":", "\n", "            ", "p", "=", "1", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", "'padding [%s] is not implemented'", "%", "padding_type", ")", "\n", "", "conv_block", "+=", "[", "conv2d", "(", "dim", ",", "dim", ",", "kernel_size", "=", "3", ",", "padding", "=", "p", ")", ",", "\n", "norm_layer", "(", "dim", ")", "]", "\n", "\n", "return", "nn", ".", "Sequential", "(", "*", "conv_block", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.ResnetBlock.forward": [[758, 761], ["networks.ResnetBlock.conv_block"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "x", "+", "self", ".", "conv_block", "(", "x", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.StyleGANDiscriminator.__init__": [[766, 789], ["torch.Module.__init__", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "padding_layer", "networks.EqualConv2d", "min", "padding_layer", "networks.EqualConv2d", "networks.EqualConv2d", "networks.StyledConvBlock"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.options.base_options.BaseOptions.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_nc", ",", "ndf", "=", "64", ",", "n_layers", "=", "6", ",", "numClasses", "=", "2", ",", "padding_type", "=", "'reflect'", ")", ":", "\n", "        ", "super", "(", "StyleGANDiscriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_layers", "=", "n_layers", "\n", "if", "padding_type", "==", "'reflect'", ":", "\n", "            ", "padding_layer", "=", "nn", ".", "ReflectionPad2d", "\n", "", "else", ":", "\n", "            ", "padding_layer", "=", "nn", ".", "ZeroPad2d", "\n", "\n", "", "activation", "=", "nn", ".", "LeakyReLU", "(", "0.2", ",", "True", ")", "\n", "\n", "sequence", "=", "[", "padding_layer", "(", "0", ")", ",", "EqualConv2d", "(", "input_nc", ",", "ndf", ",", "kernel_size", "=", "1", ")", ",", "activation", "]", "\n", "\n", "nf", "=", "ndf", "\n", "for", "n", "in", "range", "(", "n_layers", ")", ":", "\n", "            ", "nf_prev", "=", "nf", "\n", "nf", "=", "min", "(", "nf", "*", "2", ",", "512", ")", "\n", "sequence", "+=", "[", "StyledConvBlock", "(", "nf_prev", ",", "nf", ",", "downsample", "=", "True", ",", "actvn", "=", "activation", ")", "]", "\n", "\n", "", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "sequence", ")", "\n", "\n", "output_nc", "=", "numClasses", "\n", "self", ".", "gan_head", "=", "nn", ".", "Sequential", "(", "padding_layer", "(", "1", ")", ",", "EqualConv2d", "(", "nf", "+", "1", ",", "nf", ",", "kernel_size", "=", "3", ")", ",", "activation", ",", "\n", "EqualConv2d", "(", "nf", ",", "output_nc", ",", "kernel_size", "=", "4", ")", ",", "activation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.StyleGANDiscriminator.minibatch_stdev": [[790, 796], ["torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt.mean", "torch.sqrt.mean", "torch.sqrt.mean", "torch.sqrt.mean", "mean_std.expand.expand.expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "input.size", "input.size", "input.size", "input.var"], "methods", ["None"], ["", "def", "minibatch_stdev", "(", "self", ",", "input", ")", ":", "\n", "        ", "out_std", "=", "torch", ".", "sqrt", "(", "input", ".", "var", "(", "0", ",", "unbiased", "=", "False", ")", "+", "1e-8", ")", "\n", "mean_std", "=", "out_std", ".", "mean", "(", ")", "\n", "mean_std", "=", "mean_std", ".", "expand", "(", "input", ".", "size", "(", "0", ")", ",", "1", ",", "input", ".", "size", "(", "2", ")", ",", "input", ".", "size", "(", "3", ")", ")", "\n", "out", "=", "torch", ".", "cat", "(", "(", "input", ",", "mean_std", ")", ",", "1", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.StyleGANDiscriminator.forward": [[797, 801], ["networks.StyleGANDiscriminator.model", "networks.StyleGANDiscriminator.gan_head", "networks.StyleGANDiscriminator.minibatch_stdev"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.StyleGANDiscriminator.minibatch_stdev"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "features", "=", "self", ".", "model", "(", "input", ")", "\n", "gan_out", "=", "self", ".", "gan_head", "(", "self", ".", "minibatch_stdev", "(", "features", ")", ")", "\n", "return", "gan_out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.weights_init": [[17, 37], ["hasattr", "torch.normal_", "hasattr", "torch.constant_", "classname.find", "classname.find", "torch.xavier_normal_", "torch.kaiming_normal_", "math.sqrt", "torch.orthogonal_", "math.sqrt"], "function", ["None"], ["def", "weights_init", "(", "init_type", "=", "'gaussian'", ")", ":", "\n", "    ", "def", "init_fun", "(", "m", ")", ":", "\n", "        ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "(", "classname", ".", "find", "(", "'Conv'", ")", "==", "0", "or", "classname", ".", "find", "(", "'Linear'", ")", "==", "0", ")", "and", "hasattr", "(", "m", ",", "'weight'", ")", ":", "\n", "            ", "if", "init_type", "==", "'gaussian'", ":", "\n", "                ", "init", ".", "normal_", "(", "m", ".", "weight", ".", "data", ",", "0.0", ",", "0.02", ")", "\n", "", "elif", "init_type", "==", "'xavier'", ":", "\n", "                ", "init", ".", "xavier_normal_", "(", "m", ".", "weight", ".", "data", ",", "gain", "=", "math", ".", "sqrt", "(", "2", ")", ")", "\n", "", "elif", "init_type", "==", "'kaiming'", ":", "\n", "                ", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ".", "data", ",", "a", "=", "0", ",", "mode", "=", "'fan_in'", ")", "\n", "", "elif", "init_type", "==", "'orthogonal'", ":", "\n", "                ", "init", ".", "orthogonal_", "(", "m", ".", "weight", ".", "data", ",", "gain", "=", "math", ".", "sqrt", "(", "2", ")", ")", "\n", "", "elif", "init_type", "==", "'default'", ":", "\n", "                ", "pass", "\n", "", "else", ":", "\n", "                ", "assert", "0", ",", "\"Unsupported initialization: {}\"", ".", "format", "(", "init_type", ")", "\n", "", "if", "hasattr", "(", "m", ",", "'bias'", ")", "and", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "init", ".", "constant_", "(", "m", ".", "bias", ".", "data", ",", "0.0", ")", "\n", "\n", "", "", "", "return", "init_fun", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.get_norm_layer": [[39, 47], ["functools.partial", "NotImplementedError"], "function", ["None"], ["", "def", "get_norm_layer", "(", "norm_type", "=", "'instance'", ")", ":", "\n", "    ", "if", "norm_type", "==", "'instance'", ":", "\n", "        ", "norm_layer", "=", "functools", ".", "partial", "(", "nn", ".", "InstanceNorm2d", ",", "affine", "=", "False", ")", "\n", "", "elif", "norm_type", "==", "'pixel'", ":", "\n", "        ", "norm_layer", "=", "PixelNorm", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'normalization layer [%s] is not found'", "%", "norm_type", ")", "\n", "", "return", "norm_layer", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.define_G": [[48, 70], ["networks.get_norm_layer", "networks.Generator", "print", "Generator.apply", "len", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "Generator.cuda", "networks.weights_init"], "function", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.get_norm_layer", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.EqualLR.apply", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.weights_init"], ["", "def", "define_G", "(", "input_nc", ",", "output_nc", ",", "ngf", ",", "n_downsample_global", "=", "2", ",", "\n", "id_enc_norm", "=", "'pixel'", ",", "gpu_ids", "=", "[", "]", ",", "padding_type", "=", "'reflect'", ",", "\n", "style_dim", "=", "50", ",", "init_type", "=", "'gaussian'", ",", "\n", "conv_weight_norm", "=", "False", ",", "decoder_norm", "=", "'pixel'", ",", "activation", "=", "'lrelu'", ",", "\n", "adaptive_blocks", "=", "4", ",", "normalize_mlp", "=", "False", ",", "modulated_conv", "=", "False", ")", ":", "\n", "\n", "    ", "id_enc_norm", "=", "get_norm_layer", "(", "norm_type", "=", "id_enc_norm", ")", "\n", "\n", "netG", "=", "Generator", "(", "input_nc", ",", "output_nc", ",", "ngf", ",", "n_downsampling", "=", "n_downsample_global", ",", "\n", "id_enc_norm", "=", "id_enc_norm", ",", "padding_type", "=", "padding_type", ",", "style_dim", "=", "style_dim", ",", "\n", "conv_weight_norm", "=", "conv_weight_norm", ",", "decoder_norm", "=", "decoder_norm", ",", "\n", "actvn", "=", "activation", ",", "adaptive_blocks", "=", "adaptive_blocks", ",", "\n", "normalize_mlp", "=", "normalize_mlp", ",", "modulated_conv", "=", "modulated_conv", ")", "\n", "\n", "print", "(", "netG", ")", "\n", "if", "len", "(", "gpu_ids", ")", ">", "0", ":", "\n", "        ", "assert", "(", "torch", ".", "cuda", ".", "is_available", "(", ")", ")", "\n", "netG", ".", "cuda", "(", "gpu_ids", "[", "0", "]", ")", "\n", "\n", "", "netG", ".", "apply", "(", "weights_init", "(", "init_type", ")", ")", "\n", "\n", "return", "netG", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.define_D": [[71, 85], ["networks.StyleGANDiscriminator", "print", "StyleGANDiscriminator.apply", "len", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "StyleGANDiscriminator.cuda", "networks.weights_init"], "function", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.EqualLR.apply", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.weights_init"], ["", "def", "define_D", "(", "input_nc", ",", "ndf", ",", "n_layers", "=", "6", ",", "numClasses", "=", "2", ",", "gpu_ids", "=", "[", "]", ",", "\n", "init_type", "=", "'gaussian'", ")", ":", "\n", "\n", "    ", "netD", "=", "StyleGANDiscriminator", "(", "input_nc", ",", "ndf", "=", "ndf", ",", "n_layers", "=", "n_layers", ",", "\n", "numClasses", "=", "numClasses", ")", "\n", "\n", "print", "(", "netD", ")", "\n", "if", "len", "(", "gpu_ids", ")", ">", "0", ":", "\n", "        ", "assert", "(", "torch", ".", "cuda", ".", "is_available", "(", ")", ")", "\n", "netD", ".", "cuda", "(", "gpu_ids", "[", "0", "]", ")", "\n", "\n", "", "netD", ".", "apply", "(", "weights_init", "(", "'gaussian'", ")", ")", "\n", "\n", "return", "netD", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.print_network": [[86, 94], ["isinstance", "net.parameters", "print", "print", "param.numel"], "function", ["None"], ["", "def", "print_network", "(", "net", ")", ":", "\n", "    ", "if", "isinstance", "(", "net", ",", "list", ")", ":", "\n", "        ", "net", "=", "net", "[", "0", "]", "\n", "", "num_params", "=", "0", "\n", "for", "param", "in", "net", ".", "parameters", "(", ")", ":", "\n", "        ", "num_params", "+=", "param", ".", "numel", "(", ")", "\n", "", "print", "(", "net", ")", "\n", "print", "(", "'Total number of parameters: %d'", "%", "num_params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.equal_lr": [[187, 191], ["networks.EqualLR.apply"], "function", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.EqualLR.apply"], ["", "", "def", "equal_lr", "(", "module", ",", "name", "=", "'weight'", ")", ":", "\n", "    ", "EqualLR", ".", "apply", "(", "module", ",", "name", ")", "\n", "\n", "return", "module", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.LATS_model.LATS.name": [[15, 17], ["None"], "methods", ["None"], ["    ", "def", "name", "(", "self", ")", ":", "\n", "        ", "return", "'LATS'", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.LATS_model.LATS.initialize": [[18, 135], ["base_model.BaseModel.initialize", "LATS_model.LATS.parallelize", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "numpy.random.seed", "networks.define_G", "networks.define_G", "LATS_model.LATS.g_running.train", "LATS_model.LATS.requires_grad", "LATS_model.LATS.accumulate", "LATS_model.LATS.parallelize", "print", "LATS_model.LATS.parallelize", "networks.R1_reg", "LATS_model.LATS.parallelize", "LATS_model.LATS.parallelize", "LATS_model.LATS.parallelize", "LATS_model.LATS.parallelize", "dict", "dict.items", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "list", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "networks.define_D", "LATS_model.LATS.load_network", "LATS_model.LATS.load_network", "networks.SelectiveClassesNonSatGANLoss", "networks.FeatureConsistency", "networks.FeatureConsistency", "networks.FeatureConsistency", "networks.FeatureConsistency", "LATS_model.LATS.netG.named_parameters", "LATS_model.LATS.netD.parameters", "LATS_model.LATS.load_network", "LATS_model.LATS.load_network", "LATS_model.LATS.load_network"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.options.base_options.BaseOptions.initialize", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.LATS_model.LATS.parallelize", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.define_G", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.define_G", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.None.train.train", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.LATS_model.LATS.requires_grad", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.LATS_model.LATS.accumulate", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.LATS_model.LATS.parallelize", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.LATS_model.LATS.parallelize", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.LATS_model.LATS.parallelize", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.LATS_model.LATS.parallelize", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.LATS_model.LATS.parallelize", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.LATS_model.LATS.parallelize", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.define_D", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.base_model.BaseModel.load_network", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.base_model.BaseModel.load_network", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.base_model.BaseModel.load_network", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.base_model.BaseModel.load_network", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.base_model.BaseModel.load_network"], ["", "def", "initialize", "(", "self", ",", "opt", ")", ":", "\n", "        ", "BaseModel", ".", "initialize", "(", "self", ",", "opt", ")", "\n", "\n", "# if opt.resize_or_crop != 'none': # when training at full res this causes OOM", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "True", "\n", "\n", "# determine mode of operation [train, test, deploy, traverse (latent interpolation)]", "\n", "self", ".", "isTrain", "=", "opt", ".", "isTrain", "\n", "self", ".", "traverse", "=", "(", "not", "self", ".", "isTrain", ")", "and", "opt", ".", "traverse", "\n", "\n", "# mode to generate Fig. 15 in the paper", "\n", "self", ".", "compare_to_trained_outputs", "=", "(", "not", "self", ".", "isTrain", ")", "and", "opt", ".", "compare_to_trained_outputs", "\n", "if", "self", ".", "compare_to_trained_outputs", ":", "\n", "            ", "self", ".", "compare_to_trained_class", "=", "opt", ".", "compare_to_trained_class", "\n", "self", ".", "trained_class_jump", "=", "opt", ".", "trained_class_jump", "\n", "\n", "", "self", ".", "deploy", "=", "(", "not", "self", ".", "isTrain", ")", "and", "opt", ".", "deploy", "\n", "if", "not", "self", ".", "isTrain", "and", "opt", ".", "random_seed", "!=", "-", "1", ":", "\n", "            ", "torch", ".", "manual_seed", "(", "opt", ".", "random_seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "opt", ".", "random_seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "opt", ".", "random_seed", ")", "\n", "\n", "# network architecture parameters", "\n", "", "self", ".", "nb", "=", "opt", ".", "batchSize", "\n", "self", ".", "size", "=", "opt", ".", "fineSize", "\n", "self", ".", "ngf", "=", "opt", ".", "ngf", "\n", "self", ".", "ngf_global", "=", "self", ".", "ngf", "\n", "\n", "self", ".", "numClasses", "=", "opt", ".", "numClasses", "\n", "self", ".", "use_moving_avg", "=", "not", "opt", ".", "no_moving_avg", "\n", "\n", "self", ".", "no_cond_noise", "=", "opt", ".", "no_cond_noise", "\n", "style_dim", "=", "opt", ".", "gen_dim_per_style", "*", "self", ".", "numClasses", "\n", "self", ".", "duplicate", "=", "opt", ".", "gen_dim_per_style", "\n", "\n", "self", ".", "cond_length", "=", "style_dim", "\n", "\n", "# self.active_classes_mapping = opt.active_classes_mapping", "\n", "\n", "if", "not", "self", ".", "isTrain", ":", "\n", "            ", "self", ".", "debug_mode", "=", "opt", ".", "debug_mode", "\n", "", "else", ":", "\n", "            ", "self", ".", "debug_mode", "=", "False", "\n", "\n", "##### define networks", "\n", "# Generators", "\n", "", "self", ".", "netG", "=", "self", ".", "parallelize", "(", "networks", ".", "define_G", "(", "opt", ".", "input_nc", ",", "opt", ".", "output_nc", ",", "opt", ".", "ngf", ",", "opt", ".", "n_downsample", ",", "\n", "id_enc_norm", "=", "opt", ".", "id_enc_norm", ",", "gpu_ids", "=", "self", ".", "gpu_ids", ",", "padding_type", "=", "'reflect'", ",", "style_dim", "=", "style_dim", ",", "\n", "init_type", "=", "'kaiming'", ",", "conv_weight_norm", "=", "opt", ".", "conv_weight_norm", ",", "\n", "decoder_norm", "=", "opt", ".", "decoder_norm", ",", "activation", "=", "opt", ".", "activation", ",", "\n", "adaptive_blocks", "=", "opt", ".", "n_adaptive_blocks", ",", "normalize_mlp", "=", "opt", ".", "normalize_mlp", ",", "\n", "modulated_conv", "=", "opt", ".", "use_modulated_conv", ")", ")", "\n", "if", "self", ".", "isTrain", "and", "self", ".", "use_moving_avg", ":", "\n", "            ", "self", ".", "g_running", "=", "networks", ".", "define_G", "(", "opt", ".", "input_nc", ",", "opt", ".", "output_nc", ",", "opt", ".", "ngf", ",", "opt", ".", "n_downsample", ",", "\n", "id_enc_norm", "=", "opt", ".", "id_enc_norm", ",", "gpu_ids", "=", "self", ".", "gpu_ids", ",", "padding_type", "=", "'reflect'", ",", "style_dim", "=", "style_dim", ",", "\n", "init_type", "=", "'kaiming'", ",", "conv_weight_norm", "=", "opt", ".", "conv_weight_norm", ",", "\n", "decoder_norm", "=", "opt", ".", "decoder_norm", ",", "activation", "=", "opt", ".", "activation", ",", "\n", "adaptive_blocks", "=", "opt", ".", "n_adaptive_blocks", ",", "normalize_mlp", "=", "opt", ".", "normalize_mlp", ",", "\n", "modulated_conv", "=", "opt", ".", "use_modulated_conv", ")", "\n", "self", ".", "g_running", ".", "train", "(", "False", ")", "\n", "self", ".", "requires_grad", "(", "self", ".", "g_running", ",", "flag", "=", "False", ")", "\n", "self", ".", "accumulate", "(", "self", ".", "g_running", ",", "self", ".", "netG", ",", "decay", "=", "0", ")", "\n", "\n", "# Discriminator network", "\n", "", "if", "self", ".", "isTrain", ":", "\n", "            ", "self", ".", "netD", "=", "self", ".", "parallelize", "(", "networks", ".", "define_D", "(", "opt", ".", "output_nc", ",", "opt", ".", "ndf", ",", "n_layers", "=", "opt", ".", "n_layers_D", ",", "\n", "numClasses", "=", "self", ".", "numClasses", ",", "gpu_ids", "=", "self", ".", "gpu_ids", ",", "\n", "init_type", "=", "'kaiming'", ")", ")", "\n", "\n", "", "if", "self", ".", "opt", ".", "verbose", ":", "\n", "                ", "print", "(", "'---------- Networks initialized -------------'", ")", "\n", "\n", "# load networks", "\n", "", "if", "(", "not", "self", ".", "isTrain", ")", "or", "opt", ".", "continue_train", "or", "opt", ".", "load_pretrain", ":", "\n", "            ", "pretrained_path", "=", "''", "if", "(", "not", "self", ".", "isTrain", ")", "or", "(", "self", ".", "isTrain", "and", "opt", ".", "continue_train", ")", "else", "opt", ".", "load_pretrain", "\n", "if", "self", ".", "isTrain", ":", "\n", "                ", "self", ".", "load_network", "(", "self", ".", "netG", ",", "'G'", ",", "opt", ".", "which_epoch", ",", "pretrained_path", ")", "\n", "self", ".", "load_network", "(", "self", ".", "netD", ",", "'D'", ",", "opt", ".", "which_epoch", ",", "pretrained_path", ")", "\n", "if", "self", ".", "use_moving_avg", ":", "\n", "                    ", "self", ".", "load_network", "(", "self", ".", "g_running", ",", "'g_running'", ",", "opt", ".", "which_epoch", ",", "pretrained_path", ")", "\n", "", "", "elif", "self", ".", "use_moving_avg", ":", "\n", "                ", "self", ".", "load_network", "(", "self", ".", "netG", ",", "'g_running'", ",", "opt", ".", "which_epoch", ",", "pretrained_path", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "load_network", "(", "self", ".", "netG", ",", "'G'", ",", "opt", ".", "which_epoch", ",", "pretrained_path", ")", "\n", "\n", "\n", "# set loss functions and optimizers", "\n", "", "", "if", "self", ".", "isTrain", ":", "\n", "# define loss functions", "\n", "            ", "self", ".", "criterionGAN", "=", "self", ".", "parallelize", "(", "networks", ".", "SelectiveClassesNonSatGANLoss", "(", ")", ")", "\n", "self", ".", "R1_reg", "=", "networks", ".", "R1_reg", "(", ")", "\n", "self", ".", "age_reconst_criterion", "=", "self", ".", "parallelize", "(", "networks", ".", "FeatureConsistency", "(", ")", ")", "\n", "self", ".", "identity_reconst_criterion", "=", "self", ".", "parallelize", "(", "networks", ".", "FeatureConsistency", "(", ")", ")", "\n", "self", ".", "criterionCycle", "=", "self", ".", "parallelize", "(", "networks", ".", "FeatureConsistency", "(", ")", ")", "#torch.nn.L1Loss()", "\n", "self", ".", "criterionRec", "=", "self", ".", "parallelize", "(", "networks", ".", "FeatureConsistency", "(", ")", ")", "#torch.nn.L1Loss()", "\n", "\n", "# initialize optimizers", "\n", "self", ".", "old_lr", "=", "opt", ".", "lr", "\n", "\n", "# set optimizer G", "\n", "paramsG", "=", "[", "]", "\n", "params_dict_G", "=", "dict", "(", "self", ".", "netG", ".", "named_parameters", "(", ")", ")", "\n", "# set the MLP learning rate to 0.01 or the global learning rate", "\n", "for", "key", ",", "value", "in", "params_dict_G", ".", "items", "(", ")", ":", "\n", "                ", "decay_cond", "=", "(", "'decoder.mlp'", "in", "key", ")", "\n", "if", "opt", ".", "decay_adain_affine_layers", ":", "\n", "                    ", "decay_cond", "=", "decay_cond", "or", "(", "'class_std'", "in", "key", ")", "or", "(", "'class_mean'", "in", "key", ")", "\n", "", "if", "decay_cond", ":", "\n", "                    ", "paramsG", "+=", "[", "{", "'params'", ":", "[", "value", "]", ",", "'lr'", ":", "opt", ".", "lr", "*", "0.01", ",", "'mult'", ":", "0.01", "}", "]", "\n", "", "else", ":", "\n", "                    ", "paramsG", "+=", "[", "{", "'params'", ":", "[", "value", "]", ",", "'lr'", ":", "opt", ".", "lr", "}", "]", "\n", "\n", "", "", "self", ".", "optimizer_G", "=", "torch", ".", "optim", ".", "Adam", "(", "paramsG", ",", "lr", "=", "opt", ".", "lr", ",", "betas", "=", "(", "opt", ".", "beta1", ",", "opt", ".", "beta2", ")", ")", "\n", "\n", "# set optimizer D", "\n", "paramsD", "=", "list", "(", "self", ".", "netD", ".", "parameters", "(", ")", ")", "\n", "self", ".", "optimizer_D", "=", "torch", ".", "optim", ".", "Adam", "(", "paramsD", ",", "lr", "=", "opt", ".", "lr", ",", "betas", "=", "(", "opt", ".", "beta1", ",", "opt", ".", "beta2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.LATS_model.LATS.parallelize": [[137, 143], ["networks._CustomDataParallel", "len"], "methods", ["None"], ["", "", "def", "parallelize", "(", "self", ",", "model", ")", ":", "\n", "# parallelize a network", "\n", "        ", "if", "self", ".", "isTrain", "and", "len", "(", "self", ".", "gpu_ids", ")", ">", "0", ":", "\n", "            ", "return", "networks", ".", "_CustomDataParallel", "(", "model", ")", "\n", "", "else", ":", "\n", "            ", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.LATS_model.LATS.requires_grad": [[145, 149], ["model.parameters"], "methods", ["None"], ["", "", "def", "requires_grad", "(", "self", ",", "model", ",", "flag", "=", "True", ")", ":", "\n", "# freeze network weights", "\n", "        ", "for", "p", "in", "model", ".", "parameters", "(", ")", ":", "\n", "            ", "p", ".", "requires_grad", "=", "flag", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.LATS_model.LATS.accumulate": [[151, 166], ["dict", "dict", "isinstance", "isinstance", "dict.keys", "model1.named_parameters", "model2.named_parameters", "params1[].data.mul_().add_", "re.sub", "params1[].data.mul_"], "methods", ["None"], ["", "", "def", "accumulate", "(", "self", ",", "model1", ",", "model2", ",", "decay", "=", "0.999", ")", ":", "\n", "# implements exponential moving average", "\n", "        ", "params1", "=", "dict", "(", "model1", ".", "named_parameters", "(", ")", ")", "\n", "params2", "=", "dict", "(", "model2", ".", "named_parameters", "(", ")", ")", "\n", "model1_parallel", "=", "isinstance", "(", "model1", ",", "nn", ".", "DataParallel", ")", "\n", "model2_parallel", "=", "isinstance", "(", "model2", ",", "nn", ".", "DataParallel", ")", "\n", "\n", "for", "k", "in", "params1", ".", "keys", "(", ")", ":", "\n", "            ", "if", "model2_parallel", "and", "not", "model1_parallel", ":", "\n", "                ", "k2", "=", "'module.'", "+", "k", "\n", "", "elif", "model1_parallel", "and", "not", "model2_parallel", ":", "\n", "                ", "k2", "=", "re", ".", "sub", "(", "'module.'", ",", "''", ",", "k", ")", "\n", "", "else", ":", "\n", "                ", "k2", "=", "k", "\n", "", "params1", "[", "k", "]", ".", "data", ".", "mul_", "(", "decay", ")", ".", "add_", "(", "1", "-", "decay", ",", "params2", "[", "k2", "]", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.LATS_model.LATS.set_inputs": [[168, 217], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "isinstance", "len", "LATS_model.LATS.reals.cuda", "torch.index_select.dim", "torch.index_select.dim", "torch.index_select.squeeze", "torch.index_select.squeeze", "LATS_model.LATS.class_A.dim", "LATS_model.LATS.class_A.squeeze", "data[].bool", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "LATS_model.LATS.valid.dim", "LATS_model.LATS.valid.squeeze", "any", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.masked_select().long", "torch.masked_select().long", "torch.masked_select().long", "torch.masked_select().long", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "len", "LATS_model.LATS.reals.cuda", "len", "torch.masked_select", "torch.masked_select", "torch.masked_select", "torch.masked_select", "enumerate"], "methods", ["None"], ["", "", "def", "set_inputs", "(", "self", ",", "data", ",", "mode", "=", "'train'", ")", ":", "\n", "# set input data to feed to the network", "\n", "        ", "if", "mode", "==", "'train'", ":", "\n", "            ", "real_A", "=", "data", "[", "'A'", "]", "\n", "real_B", "=", "data", "[", "'B'", "]", "\n", "\n", "self", ".", "class_A", "=", "data", "[", "'A_class'", "]", "\n", "self", ".", "class_B", "=", "data", "[", "'B_class'", "]", "\n", "\n", "self", ".", "reals", "=", "torch", ".", "cat", "(", "(", "real_A", ",", "real_B", ")", ",", "0", ")", "\n", "\n", "if", "len", "(", "self", ".", "gpu_ids", ")", ">", "0", ":", "\n", "                ", "self", ".", "reals", "=", "self", ".", "reals", ".", "cuda", "(", ")", "\n", "\n", "", "", "else", ":", "\n", "            ", "inputs", "=", "data", "[", "'Imgs'", "]", "\n", "if", "inputs", ".", "dim", "(", ")", ">", "4", ":", "\n", "                ", "inputs", "=", "inputs", ".", "squeeze", "(", "0", ")", "\n", "\n", "", "self", ".", "class_A", "=", "data", "[", "'Classes'", "]", "\n", "if", "self", ".", "class_A", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "self", ".", "class_A", "=", "self", ".", "class_A", ".", "squeeze", "(", "0", ")", "\n", "\n", "", "if", "torch", ".", "is_tensor", "(", "data", "[", "'Valid'", "]", ")", ":", "\n", "                ", "self", ".", "valid", "=", "data", "[", "'Valid'", "]", ".", "bool", "(", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "valid", "=", "torch", ".", "ones", "(", "1", ",", "dtype", "=", "torch", ".", "bool", ")", "\n", "\n", "", "if", "self", ".", "valid", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "self", ".", "valid", "=", "self", ".", "valid", ".", "squeeze", "(", "0", ")", "\n", "\n", "", "if", "isinstance", "(", "data", "[", "'Paths'", "]", "[", "0", "]", ",", "tuple", ")", ":", "\n", "                ", "self", ".", "image_paths", "=", "[", "path", "[", "0", "]", "for", "path", "in", "data", "[", "'Paths'", "]", "]", "\n", "", "else", ":", "\n", "                ", "self", ".", "image_paths", "=", "data", "[", "'Paths'", "]", "\n", "\n", "", "self", ".", "isEmpty", "=", "False", "if", "any", "(", "self", ".", "valid", ")", "else", "True", "\n", "if", "not", "self", ".", "isEmpty", ":", "\n", "                ", "available_idx", "=", "torch", ".", "arange", "(", "len", "(", "self", ".", "class_A", ")", ")", "\n", "select_idx", "=", "torch", ".", "masked_select", "(", "available_idx", ",", "self", ".", "valid", ")", ".", "long", "(", ")", "\n", "inputs", "=", "torch", ".", "index_select", "(", "inputs", ",", "0", ",", "select_idx", ")", "\n", "\n", "self", ".", "class_A", "=", "torch", ".", "index_select", "(", "self", ".", "class_A", ",", "0", ",", "select_idx", ")", "\n", "self", ".", "image_paths", "=", "[", "val", "for", "i", ",", "val", "in", "enumerate", "(", "self", ".", "image_paths", ")", "if", "self", ".", "valid", "[", "i", "]", "==", "1", "]", "\n", "\n", "", "self", ".", "reals", "=", "inputs", "\n", "\n", "if", "len", "(", "self", ".", "gpu_ids", ")", ">", "0", ":", "\n", "                ", "self", ".", "reals", "=", "self", ".", "reals", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.LATS_model.LATS.get_conditions": [[219, 266], ["LATS_model.LATS.Tensor", "LATS_model.LATS.Tensor", "LATS_model.LATS.Tensor", "LATS_model.LATS.Tensor", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn"], "methods", ["None"], ["", "", "", "def", "get_conditions", "(", "self", ",", "mode", "=", "'train'", ")", ":", "\n", "# set conditional inputs to the network", "\n", "        ", "if", "mode", "==", "'train'", ":", "\n", "            ", "nb", "=", "self", ".", "reals", ".", "shape", "[", "0", "]", "//", "2", "\n", "", "elif", "self", ".", "traverse", "or", "self", ".", "deploy", ":", "\n", "            ", "if", "self", ".", "traverse", "and", "self", ".", "compare_to_trained_outputs", ":", "\n", "                ", "nb", "=", "2", "\n", "", "else", ":", "\n", "                ", "nb", "=", "self", ".", "numClasses", "\n", "", "", "else", ":", "\n", "            ", "nb", "=", "self", ".", "numValid", "\n", "\n", "#tex condition mapping", "\n", "", "condG_A_gen", "=", "self", ".", "Tensor", "(", "nb", ",", "self", ".", "cond_length", ")", "\n", "condG_B_gen", "=", "self", ".", "Tensor", "(", "nb", ",", "self", ".", "cond_length", ")", "\n", "condG_A_orig", "=", "self", ".", "Tensor", "(", "nb", ",", "self", ".", "cond_length", ")", "\n", "condG_B_orig", "=", "self", ".", "Tensor", "(", "nb", ",", "self", ".", "cond_length", ")", "\n", "\n", "if", "self", ".", "no_cond_noise", ":", "\n", "            ", "noise_sigma", "=", "0", "\n", "", "else", ":", "\n", "            ", "noise_sigma", "=", "0.2", "\n", "\n", "", "for", "i", "in", "range", "(", "nb", ")", ":", "\n", "            ", "condG_A_gen", "[", "i", ",", ":", "]", "=", "(", "noise_sigma", "*", "torch", ".", "randn", "(", "1", ",", "self", ".", "cond_length", ")", ")", ".", "cuda", "(", ")", "\n", "condG_A_gen", "[", "i", ",", "self", ".", "class_B", "[", "i", "]", "*", "self", ".", "duplicate", ":", "(", "self", ".", "class_B", "[", "i", "]", "+", "1", ")", "*", "self", ".", "duplicate", "]", "+=", "1", "\n", "if", "not", "(", "self", ".", "traverse", "or", "self", ".", "deploy", ")", ":", "\n", "                ", "condG_B_gen", "[", "i", ",", ":", "]", "=", "(", "noise_sigma", "*", "torch", ".", "randn", "(", "1", ",", "self", ".", "cond_length", ")", ")", ".", "cuda", "(", ")", "\n", "condG_B_gen", "[", "i", ",", "self", ".", "class_A", "[", "i", "]", "*", "self", ".", "duplicate", ":", "(", "self", ".", "class_A", "[", "i", "]", "+", "1", ")", "*", "self", ".", "duplicate", "]", "+=", "1", "\n", "\n", "condG_A_orig", "[", "i", ",", ":", "]", "=", "(", "noise_sigma", "*", "torch", ".", "randn", "(", "1", ",", "self", ".", "cond_length", ")", ")", ".", "cuda", "(", ")", "\n", "condG_A_orig", "[", "i", ",", "self", ".", "class_A", "[", "i", "]", "*", "self", ".", "duplicate", ":", "(", "self", ".", "class_A", "[", "i", "]", "+", "1", ")", "*", "self", ".", "duplicate", "]", "+=", "1", "\n", "\n", "condG_B_orig", "[", "i", ",", ":", "]", "=", "(", "noise_sigma", "*", "torch", ".", "randn", "(", "1", ",", "self", ".", "cond_length", ")", ")", ".", "cuda", "(", ")", "\n", "condG_B_orig", "[", "i", ",", "self", ".", "class_B", "[", "i", "]", "*", "self", ".", "duplicate", ":", "(", "self", ".", "class_B", "[", "i", "]", "+", "1", ")", "*", "self", ".", "duplicate", "]", "+=", "1", "\n", "\n", "", "", "if", "mode", "==", "'train'", ":", "\n", "            ", "self", ".", "gen_conditions", "=", "torch", ".", "cat", "(", "(", "condG_A_gen", ",", "condG_B_gen", ")", ",", "0", ")", "#torch.cat((self.class_B, self.class_A), 0)", "\n", "# if the results are not good this might be the issue!!!! uncomment and update code respectively", "\n", "self", ".", "cyc_conditions", "=", "torch", ".", "cat", "(", "(", "condG_B_gen", ",", "condG_A_gen", ")", ",", "0", ")", "\n", "self", ".", "orig_conditions", "=", "torch", ".", "cat", "(", "(", "condG_A_orig", ",", "condG_B_orig", ")", ",", "0", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "gen_conditions", "=", "condG_A_gen", "#self.class_B", "\n", "if", "not", "(", "self", ".", "traverse", "or", "self", ".", "deploy", ")", ":", "\n", "# if the results are not good this might be the issue!!!! uncomment and update code respectively", "\n", "                ", "self", ".", "cyc_conditions", "=", "condG_B_gen", "#self.class_A", "\n", "self", ".", "orig_conditions", "=", "condG_A_orig", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.LATS_model.LATS.update_G": [[268, 347], ["LATS_model.LATS.optimizer_G.zero_grad", "LATS_model.LATS.get_conditions", "LATS_model.LATS.netG", "LATS_model.LATS.netD", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "LATS_model.LATS.criterionGAN", "loss_G.backward", "LATS_model.LATS.optimizer_G.step", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "LATS_model.LATS.identity_reconst_criterion", "LATS_model.LATS.age_reconst_criterion", "LATS_model.LATS.age_reconst_criterion", "LATS_model.LATS.accumulate", "LATS_model.LATS.mean", "torch.zeros().cuda.mean", "torch.zeros().cuda.mean", "torch.zeros().cuda.mean", "torch.zeros().cuda.mean", "loss_G_identity_reconst.mean", "loss_G_age_reconst.mean", "LATS_model.LATS.criterionRec", "LATS_model.LATS.criterionCycle", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "LATS_model.LATS.g_running.encode", "LATS_model.LATS.g_running.decode", "LATS_model.LATS.g_running.encode", "LATS_model.LATS.g_running.decode", "LATS_model.LATS.g_running.decode"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.LATS_model.LATS.get_conditions", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.BlurFunction.backward", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.LATS_model.LATS.accumulate", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.Generator.encode", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.Generator.decode", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.Generator.encode", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.Generator.decode", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.Generator.decode"], ["", "", "", "def", "update_G", "(", "self", ",", "infer", "=", "False", ")", ":", "\n", "# Generator optimization setp", "\n", "        ", "self", ".", "optimizer_G", ".", "zero_grad", "(", ")", "\n", "self", ".", "get_conditions", "(", ")", "\n", "\n", "############### multi GPU ###############", "\n", "rec_images", ",", "gen_images", ",", "cyc_images", ",", "orig_id_features", ",", "orig_age_features", ",", "fake_id_features", ",", "fake_age_features", "=", "self", ".", "netG", "(", "self", ".", "reals", ",", "self", ".", "gen_conditions", ",", "self", ".", "cyc_conditions", ",", "self", ".", "orig_conditions", ")", "\n", "\n", "#discriminator pass", "\n", "disc_out", "=", "self", ".", "netD", "(", "gen_images", ")", "\n", "\n", "#self-reconstruction loss", "\n", "if", "self", ".", "opt", ".", "lambda_rec", ">", "0", ":", "\n", "            ", "loss_G_Rec", "=", "self", ".", "criterionRec", "(", "rec_images", ",", "self", ".", "reals", ")", "*", "self", ".", "opt", ".", "lambda_rec", "\n", "", "else", ":", "\n", "            ", "loss_G_Rec", "=", "torch", ".", "zeros", "(", "1", ")", ".", "cuda", "(", ")", "\n", "\n", "#cycle loss", "\n", "", "if", "self", ".", "opt", ".", "lambda_cyc", ">", "0", ":", "\n", "            ", "loss_G_Cycle", "=", "self", ".", "criterionCycle", "(", "cyc_images", ",", "self", ".", "reals", ")", "*", "self", ".", "opt", ".", "lambda_cyc", "\n", "", "else", ":", "\n", "            ", "loss_G_Cycle", "=", "torch", ".", "zeros", "(", "1", ")", ".", "cuda", "(", ")", "\n", "\n", "# identity feature loss", "\n", "", "loss_G_identity_reconst", "=", "self", ".", "identity_reconst_criterion", "(", "fake_id_features", ",", "orig_id_features", ")", "*", "self", ".", "opt", ".", "lambda_id", "\n", "# age feature loss", "\n", "loss_G_age_reconst", "=", "self", ".", "age_reconst_criterion", "(", "fake_age_features", ",", "self", ".", "gen_conditions", ")", "*", "self", ".", "opt", ".", "lambda_age", "\n", "# orig age feature loss", "\n", "loss_G_age_reconst", "+=", "self", ".", "age_reconst_criterion", "(", "orig_age_features", ",", "self", ".", "orig_conditions", ")", "*", "self", ".", "opt", ".", "lambda_age", "\n", "\n", "# adversarial loss", "\n", "target_classes", "=", "torch", ".", "cat", "(", "(", "self", ".", "class_B", ",", "self", ".", "class_A", ")", ",", "0", ")", "\n", "loss_G_GAN", "=", "self", ".", "criterionGAN", "(", "disc_out", ",", "target_classes", ",", "True", ",", "is_gen", "=", "True", ")", "\n", "\n", "# overall loss", "\n", "loss_G", "=", "(", "loss_G_GAN", "+", "loss_G_Rec", "+", "loss_G_Cycle", "+", "loss_G_identity_reconst", "+", "loss_G_age_reconst", ")", ".", "mean", "(", ")", "\n", "\n", "loss_G", ".", "backward", "(", ")", "\n", "self", ".", "optimizer_G", ".", "step", "(", ")", "\n", "\n", "# update exponential moving average", "\n", "if", "self", ".", "use_moving_avg", ":", "\n", "            ", "self", ".", "accumulate", "(", "self", ".", "g_running", ",", "self", ".", "netG", ")", "\n", "\n", "# generate images for visdom", "\n", "", "if", "infer", ":", "\n", "            ", "if", "self", ".", "use_moving_avg", ":", "\n", "                ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "orig_id_features_out", ",", "_", "=", "self", ".", "g_running", ".", "encode", "(", "self", ".", "reals", ")", "\n", "#within domain decode", "\n", "if", "self", ".", "opt", ".", "lambda_rec", ">", "0", ":", "\n", "                        ", "rec_images_out", "=", "self", ".", "g_running", ".", "decode", "(", "orig_id_features_out", ",", "self", ".", "orig_conditions", ")", "\n", "\n", "#cross domain decode", "\n", "", "gen_images_out", "=", "self", ".", "g_running", ".", "decode", "(", "orig_id_features_out", ",", "self", ".", "gen_conditions", ")", "\n", "#encode generated", "\n", "fake_id_features_out", ",", "_", "=", "self", ".", "g_running", ".", "encode", "(", "gen_images", ")", "\n", "#decode generated", "\n", "if", "self", ".", "opt", ".", "lambda_cyc", ">", "0", ":", "\n", "                        ", "cyc_images_out", "=", "self", ".", "g_running", ".", "decode", "(", "fake_id_features_out", ",", "self", ".", "cyc_conditions", ")", "\n", "", "", "", "else", ":", "\n", "                ", "gen_images_out", "=", "gen_images", "\n", "if", "self", ".", "opt", ".", "lambda_rec", ">", "0", ":", "\n", "                    ", "rec_images_out", "=", "rec_images", "\n", "", "if", "self", ".", "opt", ".", "lambda_cyc", ">", "0", ":", "\n", "                    ", "cyc_images_out", "=", "cyc_images", "\n", "\n", "", "", "", "loss_dict", "=", "{", "'loss_G_Adv'", ":", "loss_G_GAN", ".", "mean", "(", ")", ",", "'loss_G_Cycle'", ":", "loss_G_Cycle", ".", "mean", "(", ")", ",", "\n", "'loss_G_Rec'", ":", "loss_G_Rec", ".", "mean", "(", ")", ",", "'loss_G_identity_reconst'", ":", "loss_G_identity_reconst", ".", "mean", "(", ")", ",", "\n", "'loss_G_age_reconst'", ":", "loss_G_age_reconst", ".", "mean", "(", ")", "}", "\n", "\n", "return", "[", "loss_dict", ",", "\n", "None", "if", "not", "infer", "else", "self", ".", "reals", ",", "\n", "None", "if", "not", "infer", "else", "gen_images_out", ",", "\n", "None", "if", "not", "infer", "else", "rec_images_out", ",", "\n", "None", "if", "not", "infer", "else", "cyc_images_out", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.LATS_model.LATS.update_D": [[349, 385], ["LATS_model.LATS.optimizer_D.zero_grad", "LATS_model.LATS.get_conditions", "LATS_model.LATS.netG", "gen_images.detach", "LATS_model.LATS.netD", "real_disc_in.requires_grad_", "LATS_model.LATS.netD", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "LATS_model.LATS.criterionGAN", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "LATS_model.LATS.criterionGAN", "LATS_model.LATS.R1_reg", "loss_D.backward", "LATS_model.LATS.optimizer_D.step", "LATS_model.LATS.mean", "LATS_model.LATS.mean", "LATS_model.LATS.mean"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.LATS_model.LATS.get_conditions", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.BlurFunction.backward"], ["", "def", "update_D", "(", "self", ")", ":", "\n", "# Discriminator optimization setp", "\n", "        ", "self", ".", "optimizer_D", ".", "zero_grad", "(", ")", "\n", "self", ".", "get_conditions", "(", ")", "\n", "\n", "############### multi GPU ###############", "\n", "_", ",", "gen_images", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_", "=", "self", ".", "netG", "(", "self", ".", "reals", ",", "self", ".", "gen_conditions", ",", "None", ",", "None", ",", "disc_pass", "=", "True", ")", "\n", "\n", "#fake discriminator pass", "\n", "fake_disc_in", "=", "gen_images", ".", "detach", "(", ")", "\n", "fake_disc_out", "=", "self", ".", "netD", "(", "fake_disc_in", ")", "\n", "\n", "#real discriminator pass", "\n", "real_disc_in", "=", "self", ".", "reals", "\n", "\n", "# necessary for R1 regularization", "\n", "real_disc_in", ".", "requires_grad_", "(", ")", "\n", "\n", "real_disc_out", "=", "self", ".", "netD", "(", "real_disc_in", ")", "\n", "\n", "#Fake GAN loss", "\n", "fake_target_classes", "=", "torch", ".", "cat", "(", "(", "self", ".", "class_B", ",", "self", ".", "class_A", ")", ",", "0", ")", "\n", "loss_D_fake", "=", "self", ".", "criterionGAN", "(", "fake_disc_out", ",", "fake_target_classes", ",", "False", ",", "is_gen", "=", "False", ")", "\n", "\n", "#Real GAN loss", "\n", "real_target_classes", "=", "torch", ".", "cat", "(", "(", "self", ".", "class_A", ",", "self", ".", "class_B", ")", ",", "0", ")", "\n", "loss_D_real", "=", "self", ".", "criterionGAN", "(", "real_disc_out", ",", "real_target_classes", ",", "True", ",", "is_gen", "=", "False", ")", "\n", "\n", "# R1 regularization", "\n", "loss_D_reg", "=", "self", ".", "R1_reg", "(", "real_disc_out", ",", "real_disc_in", ")", "\n", "\n", "loss_D", "=", "(", "loss_D_fake", "+", "loss_D_real", "+", "loss_D_reg", ")", ".", "mean", "(", ")", "\n", "loss_D", ".", "backward", "(", ")", "\n", "self", ".", "optimizer_D", ".", "step", "(", ")", "\n", "\n", "return", "{", "'loss_D_real'", ":", "loss_D_real", ".", "mean", "(", ")", ",", "'loss_D_fake'", ":", "loss_D_fake", ".", "mean", "(", ")", ",", "'loss_D_reg'", ":", "loss_D_reg", ".", "mean", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.LATS_model.LATS.inference": [[387, 429], ["LATS_model.LATS.set_inputs", "LATS_model.LATS.valid.sum().item", "LATS_model.LATS.reals.size", "LATS_model.LATS.Tensor", "LATS_model.LATS.Tensor", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "LATS_model.LATS.get_visuals", "LATS_model.LATS.valid.sum", "LATS_model.LATS.get_conditions", "LATS_model.LATS.netG.infer", "range", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "LATS_model.LATS.Tensor().long().fill_", "LATS_model.LATS.get_conditions", "LATS_model.LATS.g_running.infer", "LATS_model.LATS.netG.infer", "LATS_model.LATS.g_running.infer", "LATS_model.LATS.netG.infer", "LATS_model.LATS.Tensor().long", "LATS_model.LATS.Tensor"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.LATS_model.LATS.set_inputs", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.LATS_model.LATS.get_visuals", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.LATS_model.LATS.get_conditions", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.Generator.infer", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.LATS_model.LATS.get_conditions", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.Generator.infer", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.Generator.infer", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.Generator.infer", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.networks.Generator.infer"], ["", "def", "inference", "(", "self", ",", "data", ")", ":", "\n", "        ", "self", ".", "set_inputs", "(", "data", ",", "mode", "=", "'test'", ")", "\n", "if", "self", ".", "isEmpty", ":", "\n", "            ", "return", "\n", "\n", "", "self", ".", "numValid", "=", "self", ".", "valid", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "sz", "=", "self", ".", "reals", ".", "size", "(", ")", "\n", "self", ".", "fake_B", "=", "self", ".", "Tensor", "(", "self", ".", "numClasses", ",", "sz", "[", "0", "]", ",", "sz", "[", "1", "]", ",", "sz", "[", "2", "]", ",", "sz", "[", "3", "]", ")", "\n", "self", ".", "cyc_A", "=", "self", ".", "Tensor", "(", "self", ".", "numClasses", ",", "sz", "[", "0", "]", ",", "sz", "[", "1", "]", ",", "sz", "[", "2", "]", ",", "sz", "[", "3", "]", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "if", "self", ".", "traverse", "or", "self", ".", "deploy", ":", "\n", "                ", "if", "self", ".", "traverse", "and", "self", ".", "compare_to_trained_outputs", ":", "\n", "                    ", "start", "=", "self", ".", "compare_to_trained_class", "-", "self", ".", "trained_class_jump", "\n", "end", "=", "start", "+", "(", "self", ".", "trained_class_jump", "*", "2", ")", "*", "2", "#arange is between [start, end), end is always omitted", "\n", "self", ".", "class_B", "=", "torch", ".", "arange", "(", "start", ",", "end", ",", "step", "=", "self", ".", "trained_class_jump", "*", "2", ",", "dtype", "=", "self", ".", "class_A", ".", "dtype", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "class_B", "=", "torch", ".", "arange", "(", "self", ".", "numClasses", ",", "dtype", "=", "self", ".", "class_A", ".", "dtype", ")", "\n", "\n", "", "self", ".", "get_conditions", "(", "mode", "=", "'test'", ")", "\n", "\n", "self", ".", "fake_B", "=", "self", ".", "netG", ".", "infer", "(", "self", ".", "reals", ",", "self", ".", "gen_conditions", ",", "traverse", "=", "self", ".", "traverse", ",", "deploy", "=", "self", ".", "deploy", ",", "interp_step", "=", "self", ".", "opt", ".", "interp_step", ")", "\n", "", "else", ":", "\n", "                ", "for", "i", "in", "range", "(", "self", ".", "numClasses", ")", ":", "\n", "                    ", "self", ".", "class_B", "=", "self", ".", "Tensor", "(", "self", ".", "numValid", ")", ".", "long", "(", ")", ".", "fill_", "(", "i", ")", "\n", "self", ".", "get_conditions", "(", "mode", "=", "'test'", ")", "\n", "\n", "if", "self", ".", "isTrain", ":", "\n", "                        ", "self", ".", "fake_B", "[", "i", ",", ":", ",", ":", ",", ":", ",", ":", "]", "=", "self", ".", "g_running", ".", "infer", "(", "self", ".", "reals", ",", "self", ".", "gen_conditions", ")", "\n", "", "else", ":", "\n", "                        ", "self", ".", "fake_B", "[", "i", ",", ":", ",", ":", ",", ":", ",", ":", "]", "=", "self", ".", "netG", ".", "infer", "(", "self", ".", "reals", ",", "self", ".", "gen_conditions", ")", "\n", "\n", "", "cyc_input", "=", "self", ".", "fake_B", "[", "i", ",", ":", ",", ":", ",", ":", ",", ":", "]", "\n", "\n", "if", "self", ".", "isTrain", ":", "\n", "                        ", "self", ".", "cyc_A", "[", "i", ",", ":", ",", ":", ",", ":", ",", ":", "]", "=", "self", ".", "g_running", ".", "infer", "(", "cyc_input", ",", "self", ".", "cyc_conditions", ")", "\n", "", "else", ":", "\n", "                        ", "self", ".", "cyc_A", "[", "i", ",", ":", ",", ":", ",", ":", ",", ":", "]", "=", "self", ".", "netG", ".", "infer", "(", "cyc_input", ",", "self", ".", "cyc_conditions", ")", "\n", "\n", "", "", "", "visuals", "=", "self", ".", "get_visuals", "(", ")", "\n", "\n", "", "return", "visuals", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.LATS_model.LATS.save": [[431, 436], ["LATS_model.LATS.save_network", "LATS_model.LATS.save_network", "LATS_model.LATS.save_network"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.base_model.BaseModel.save_network", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.base_model.BaseModel.save_network", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.base_model.BaseModel.save_network"], ["", "def", "save", "(", "self", ",", "which_epoch", ")", ":", "\n", "        ", "self", ".", "save_network", "(", "self", ".", "netG", ",", "'G'", ",", "which_epoch", ",", "self", ".", "gpu_ids", ")", "\n", "self", ".", "save_network", "(", "self", ".", "netD", ",", "'D'", ",", "which_epoch", ",", "self", ".", "gpu_ids", ")", "\n", "if", "self", ".", "use_moving_avg", ":", "\n", "            ", "self", ".", "save_network", "(", "self", ".", "g_running", ",", "'g_running'", ",", "which_epoch", ",", "self", ".", "gpu_ids", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.LATS_model.LATS.update_learning_rate": [[438, 448], ["param_group.get", "print"], "methods", ["None"], ["", "", "def", "update_learning_rate", "(", "self", ")", ":", "\n", "        ", "lr", "=", "self", ".", "old_lr", "*", "self", ".", "opt", ".", "decay_gamma", "\n", "for", "param_group", "in", "self", ".", "optimizer_D", ".", "param_groups", ":", "\n", "            ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "", "for", "param_group", "in", "self", ".", "optimizer_G", ".", "param_groups", ":", "\n", "            ", "mult", "=", "param_group", ".", "get", "(", "'mult'", ",", "1.0", ")", "\n", "param_group", "[", "'lr'", "]", "=", "lr", "*", "mult", "\n", "", "if", "self", ".", "opt", ".", "verbose", ":", "\n", "            ", "print", "(", "'update learning rate: %f -> %f'", "%", "(", "self", ".", "old_lr", ",", "lr", ")", ")", "\n", "", "self", ".", "old_lr", "=", "lr", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.LATS_model.LATS.get_visuals": [[450, 500], ["util.tensor2im", "util.tensor2im", "range", "collections.OrderedDict", "util.tensor2im", "numpy.expand_dims", "return_dicts[].update", "range", "range", "collections.OrderedDict", "collections.OrderedDict", "collections.OrderedDict", "return_dicts[].update", "collections.OrderedDict", "return_dicts[].update", "range", "collections.OrderedDict", "return_dicts[].update", "str", "str", "LATS_model.LATS.class_A[].item", "str"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.util.tensor2im", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.util.tensor2im", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.util.tensor2im"], ["", "def", "get_visuals", "(", "self", ")", ":", "\n", "        ", "return_dicts", "=", "[", "OrderedDict", "(", ")", "for", "i", "in", "range", "(", "self", ".", "numValid", ")", "]", "\n", "\n", "real_A", "=", "util", ".", "tensor2im", "(", "self", ".", "reals", ".", "data", ")", "\n", "fake_B_tex", "=", "util", ".", "tensor2im", "(", "self", ".", "fake_B", ".", "data", ")", "\n", "\n", "if", "self", ".", "debug_mode", ":", "\n", "            ", "rec_A_tex", "=", "util", ".", "tensor2im", "(", "self", ".", "cyc_A", ".", "data", "[", ":", ",", ":", ",", ":", ",", ":", ",", ":", "]", ")", "\n", "\n", "", "if", "self", ".", "numValid", "==", "1", ":", "\n", "            ", "real_A", "=", "np", ".", "expand_dims", "(", "real_A", ",", "axis", "=", "0", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "self", ".", "numValid", ")", ":", "\n", "# get the original image and the results for the current samples", "\n", "            ", "curr_real_A", "=", "real_A", "[", "i", ",", ":", ",", ":", ",", ":", "]", "\n", "real_A_img", "=", "curr_real_A", "[", ":", ",", ":", ",", ":", "3", "]", "\n", "\n", "# start with age progression/regression images", "\n", "if", "self", ".", "traverse", "or", "self", ".", "deploy", ":", "\n", "                ", "curr_fake_B_tex", "=", "fake_B_tex", "\n", "orig_dict", "=", "OrderedDict", "(", "[", "(", "'orig_img'", ",", "real_A_img", ")", "]", ")", "\n", "", "else", ":", "\n", "                ", "curr_fake_B_tex", "=", "fake_B_tex", "[", ":", ",", "i", ",", ":", ",", ":", ",", ":", "]", "\n", "orig_dict", "=", "OrderedDict", "(", "[", "(", "'orig_img_cls_'", "+", "str", "(", "self", ".", "class_A", "[", "i", "]", ".", "item", "(", ")", ")", ",", "real_A_img", ")", "]", ")", "\n", "\n", "", "return_dicts", "[", "i", "]", ".", "update", "(", "orig_dict", ")", "\n", "\n", "# set output classes numebr", "\n", "if", "self", ".", "traverse", ":", "\n", "                ", "out_classes", "=", "curr_fake_B_tex", ".", "shape", "[", "0", "]", "\n", "", "else", ":", "\n", "                ", "out_classes", "=", "self", ".", "numClasses", "\n", "\n", "", "for", "j", "in", "range", "(", "out_classes", ")", ":", "\n", "                ", "fake_res_tex", "=", "curr_fake_B_tex", "[", "j", ",", ":", ",", ":", ",", ":", "3", "]", "\n", "fake_dict_tex", "=", "OrderedDict", "(", "[", "(", "'tex_trans_to_class_'", "+", "str", "(", "j", ")", ",", "fake_res_tex", ")", "]", ")", "\n", "return_dicts", "[", "i", "]", ".", "update", "(", "fake_dict_tex", ")", "\n", "\n", "", "if", "not", "(", "self", ".", "traverse", "or", "self", ".", "deploy", ")", ":", "\n", "                ", "if", "self", ".", "debug_mode", ":", "\n", "# continue with tex reconstructions", "\n", "                    ", "curr_rec_A_tex", "=", "rec_A_tex", "[", ":", ",", "i", ",", ":", ",", ":", ",", ":", "]", "\n", "orig_dict", "=", "OrderedDict", "(", "[", "(", "'orig_img2'", ",", "real_A_img", ")", "]", ")", "\n", "return_dicts", "[", "i", "]", ".", "update", "(", "orig_dict", ")", "\n", "for", "j", "in", "range", "(", "self", ".", "numClasses", ")", ":", "\n", "                        ", "rec_res_tex", "=", "curr_rec_A_tex", "[", "j", ",", ":", ",", ":", ",", ":", "3", "]", "\n", "rec_dict_tex", "=", "OrderedDict", "(", "[", "(", "'tex_rec_from_class_'", "+", "str", "(", "j", ")", ",", "rec_res_tex", ")", "]", ")", "\n", "return_dicts", "[", "i", "]", ".", "update", "(", "rec_dict_tex", ")", "\n", "\n", "", "", "", "", "return", "return_dicts", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.LATS_model.InferenceModel.forward": [[503, 505], ["LATS_model.InferenceModel.inference"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.LATS_model.LATS.inference"], ["    ", "def", "forward", "(", "self", ",", "data", ")", ":", "\n", "        ", "return", "self", ".", "inference", "(", "data", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.base_model.BaseModel.name": [[9, 11], ["None"], "methods", ["None"], ["    ", "def", "name", "(", "self", ")", ":", "\n", "        ", "return", "'BaseModel'", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.base_model.BaseModel.initialize": [[12, 18], ["os.path.join", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available"], "methods", ["None"], ["", "def", "initialize", "(", "self", ",", "opt", ")", ":", "\n", "        ", "self", ".", "opt", "=", "opt", "\n", "self", ".", "gpu_ids", "=", "opt", ".", "gpu_ids", "\n", "self", ".", "isTrain", "=", "opt", ".", "isTrain", "\n", "self", ".", "Tensor", "=", "torch", ".", "cuda", ".", "FloatTensor", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "torch", ".", "Tensor", "\n", "self", ".", "save_dir", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "checkpoints_dir", ",", "opt", ".", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.base_model.BaseModel.set_input": [[19, 21], ["None"], "methods", ["None"], ["", "def", "set_input", "(", "self", ",", "input", ")", ":", "\n", "        ", "self", ".", "input", "=", "input", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.base_model.BaseModel.forward": [[22, 24], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.base_model.BaseModel.test": [[26, 28], ["None"], "methods", ["None"], ["", "def", "test", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.base_model.BaseModel.get_image_paths": [[29, 31], ["None"], "methods", ["None"], ["", "def", "get_image_paths", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.base_model.BaseModel.optimize_parameters": [[32, 34], ["None"], "methods", ["None"], ["", "def", "optimize_parameters", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.base_model.BaseModel.get_current_visuals": [[35, 37], ["None"], "methods", ["None"], ["", "def", "get_current_visuals", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "input", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.base_model.BaseModel.get_current_errors": [[38, 40], ["None"], "methods", ["None"], ["", "def", "get_current_errors", "(", "self", ")", ":", "\n", "        ", "return", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.base_model.BaseModel.save": [[41, 43], ["None"], "methods", ["None"], ["", "def", "save", "(", "self", ",", "label", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.base_model.BaseModel.save_network": [[45, 52], ["os.path.join", "isinstance", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "network.module.state_dict", "network.state_dict"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.base_model.BaseModel.save", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.base_model.BaseModel.save", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.base_model.BaseModel.save", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.base_model.BaseModel.save", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.base_model.BaseModel.save", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.base_model.BaseModel.save", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.base_model.BaseModel.save", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.base_model.BaseModel.save"], ["", "def", "save_network", "(", "self", ",", "network", ",", "network_label", ",", "epoch_label", ",", "gpu_ids", ")", ":", "\n", "        ", "save_filename", "=", "'%s_net_%s.pth'", "%", "(", "epoch_label", ",", "network_label", ")", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "save_dir", ",", "save_filename", ")", "\n", "if", "isinstance", "(", "network", ",", "nn", ".", "DataParallel", ")", ":", "\n", "            ", "torch", ".", "save", "(", "network", ".", "module", ".", "state_dict", "(", ")", ",", "save_path", ")", "\n", "", "else", ":", "\n", "            ", "torch", ".", "save", "(", "network", ".", "state_dict", "(", ")", ",", "save_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.base_model.BaseModel.load_network": [[54, 97], ["os.path.join", "os.path.isfile", "print", "isinstance", "network.module.load_state_dict", "network.load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "isinstance", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "network.module.state_dict", "network.state_dict", "network.load_state_dict", "print", "print", "torch.load.items", "torch.load.items", "network.state_dict.items", "network.load_state_dict", "torch.load.items", "torch.load.items", "set", "Set", "print", "v.size", "model_dict[].size", "Set.add", "sorted", "v.size", "pretrained_dict[].size", "k.split"], "methods", ["None"], ["", "", "def", "load_network", "(", "self", ",", "network", ",", "network_label", ",", "epoch_label", ",", "save_dir", "=", "''", ")", ":", "\n", "        ", "save_filename", "=", "'%s_net_%s.pth'", "%", "(", "epoch_label", ",", "network_label", ")", "\n", "if", "not", "save_dir", ":", "\n", "            ", "save_dir", "=", "self", ".", "save_dir", "\n", "", "save_path", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "save_filename", ")", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "save_path", ")", ":", "\n", "            ", "print", "(", "'%s not exists yet!'", "%", "save_path", ")", "\n", "if", "'G'", "in", "network_label", ":", "\n", "                ", "raise", "(", "'Generator must exist!'", ")", "\n", "", "", "else", ":", "\n", "            ", "try", ":", "\n", "                ", "if", "isinstance", "(", "network", ",", "nn", ".", "DataParallel", ")", ":", "\n", "                    ", "network", ".", "module", ".", "load_state_dict", "(", "torch", ".", "load", "(", "save_path", ")", ")", "\n", "", "else", ":", "\n", "                    ", "network", ".", "load_state_dict", "(", "torch", ".", "load", "(", "save_path", ")", ")", "\n", "", "", "except", ":", "\n", "                ", "pretrained_dict", "=", "torch", ".", "load", "(", "save_path", ")", "\n", "if", "isinstance", "(", "network", ",", "nn", ".", "DataParallel", ")", ":", "\n", "                    ", "model_dict", "=", "network", ".", "module", ".", "state_dict", "(", ")", "\n", "", "else", ":", "\n", "                    ", "model_dict", "=", "network", ".", "state_dict", "(", ")", "\n", "", "try", ":", "\n", "                    ", "pretrained_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "pretrained_dict", ".", "items", "(", ")", "if", "k", "in", "model_dict", "}", "\n", "network", ".", "load_state_dict", "(", "pretrained_dict", ")", "\n", "if", "self", ".", "opt", ".", "verbose", ":", "\n", "                        ", "print", "(", "'Pretrained network %s has excessive layers; Only loading layers that are used'", "%", "network_label", ")", "\n", "", "", "except", ":", "\n", "                    ", "print", "(", "'Pretrained network %s has fewer layers; The following are not initialized:'", "%", "network_label", ")", "\n", "if", "sys", ".", "version_info", ">=", "(", "3", ",", "0", ")", ":", "\n", "                        ", "not_initialized", "=", "set", "(", ")", "\n", "", "else", ":", "\n", "                        ", "from", "sets", "import", "Set", "\n", "not_initialized", "=", "Set", "(", ")", "\n", "", "for", "k", ",", "v", "in", "pretrained_dict", ".", "items", "(", ")", ":", "\n", "                        ", "if", "v", ".", "size", "(", ")", "==", "model_dict", "[", "k", "]", ".", "size", "(", ")", ":", "\n", "                            ", "model_dict", "[", "k", "]", "=", "v", "\n", "\n", "", "", "for", "k", ",", "v", "in", "model_dict", ".", "items", "(", ")", ":", "\n", "                        ", "if", "k", "not", "in", "pretrained_dict", "or", "v", ".", "size", "(", ")", "!=", "pretrained_dict", "[", "k", "]", ".", "size", "(", ")", ":", "\n", "                            ", "not_initialized", ".", "add", "(", "k", ".", "split", "(", "'.'", ")", "[", "0", "]", ")", "\n", "", "", "if", "self", ".", "opt", ".", "verbose", ":", "\n", "                        ", "print", "(", "sorted", "(", "not_initialized", ")", ")", "\n", "", "network", ".", "load_state_dict", "(", "model_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.base_model.BaseModel.update_learning_rate": [[98, 100], ["None"], "methods", ["None"], ["", "", "", "", "def", "update_learning_rate", "(", ")", ":", "\n", "        ", "pass", "\n", "", "", ""]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.dataset_utils.is_image_file": [[16, 18], ["any", "filename.endswith"], "function", ["None"], ["def", "is_image_file", "(", "filename", ")", ":", "\n", "    ", "return", "any", "(", "filename", ".", "endswith", "(", "extension", ")", "for", "extension", "in", "IMG_EXTENSIONS", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.dataset_utils.list_folder_images": [[20, 41], ["os.path.isdir", "os.listdir", "dataset_utils.is_image_file", "opt.dataroot.lower", "images.sort", "parsings.sort", "os.path.join", "os.path.isfile", "os.path.join", "os.path.join", "images.append", "parsings.append"], "function", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.dataset_utils.is_image_file"], ["", "def", "list_folder_images", "(", "dir", ",", "opt", ")", ":", "\n", "    ", "images", "=", "[", "]", "\n", "parsings", "=", "[", "]", "\n", "assert", "os", ".", "path", ".", "isdir", "(", "dir", ")", ",", "'%s is not a valid directory'", "%", "dir", "\n", "for", "fname", "in", "os", ".", "listdir", "(", "dir", ")", ":", "\n", "        ", "if", "is_image_file", "(", "fname", ")", ":", "\n", "            ", "path", "=", "os", ".", "path", ".", "join", "(", "dir", ",", "fname", ")", "\n", "# make sure there's a matching parsings for the image", "\n", "# parsing files must be png", "\n", "parsing_fname", "=", "fname", "[", ":", "-", "3", "]", "+", "'png'", "\n", "if", "os", ".", "path", ".", "isfile", "(", "os", ".", "path", ".", "join", "(", "dir", ",", "'parsings'", ",", "parsing_fname", ")", ")", ":", "\n", "                ", "parsing_path", "=", "os", ".", "path", ".", "join", "(", "dir", ",", "'parsings'", ",", "parsing_fname", ")", "\n", "images", ".", "append", "(", "path", ")", "\n", "parsings", ".", "append", "(", "parsing_path", ")", "\n", "\n", "# sort according to identity in case of FGNET test", "\n", "", "", "", "if", "'fgnet'", "in", "opt", ".", "dataroot", ".", "lower", "(", ")", ":", "\n", "        ", "images", ".", "sort", "(", "key", "=", "str", ".", "lower", ")", "\n", "parsings", ".", "sort", "(", "key", "=", "str", ".", "lower", ")", "\n", "\n", "", "return", "images", ",", "parsings", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.dataset_utils.get_transform": [[42, 63], ["torchvision.Compose", "transform_list.append", "transform_list.append", "transform_list.append", "torchvision.ToTensor", "torchvision.Resize", "torchvision.RandomCrop", "transform_list.append", "torchvision.RandomHorizontalFlip", "torchvision.Normalize", "torchvision.RandomCrop"], "function", ["None"], ["", "def", "get_transform", "(", "opt", ",", "normalize", "=", "True", ")", ":", "\n", "    ", "transform_list", "=", "[", "]", "\n", "\n", "if", "opt", ".", "resize_or_crop", "==", "'resize_and_crop'", ":", "\n", "        ", "osize", "=", "[", "opt", ".", "loadSize", ",", "opt", ".", "loadSize", "]", "\n", "transform_list", ".", "append", "(", "transforms", ".", "Resize", "(", "osize", ",", "interpolation", "=", "Image", ".", "NEAREST", ")", ")", "\n", "transform_list", ".", "append", "(", "transforms", ".", "RandomCrop", "(", "opt", ".", "fineSize", ")", ")", "\n", "", "elif", "opt", ".", "resize_or_crop", "==", "'crop'", ":", "\n", "        ", "transform_list", ".", "append", "(", "transforms", ".", "RandomCrop", "(", "opt", ".", "fineSize", ")", ")", "\n", "\n", "", "if", "opt", ".", "isTrain", "and", "not", "opt", ".", "no_flip", ":", "\n", "        ", "transform_list", ".", "append", "(", "transforms", ".", "RandomHorizontalFlip", "(", ")", ")", "\n", "\n", "", "transform_list", "+=", "[", "transforms", ".", "ToTensor", "(", ")", "]", "\n", "\n", "if", "normalize", ":", "\n", "        ", "mean", "=", "(", "0.5", ",", ")", "\n", "std", "=", "(", "0.5", ",", ")", "\n", "transform_list", "+=", "[", "transforms", ".", "Normalize", "(", "mean", ",", "std", ")", "]", "\n", "\n", "", "return", "transforms", ".", "Compose", "(", "transform_list", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.data_loader.AgingDataLoader.name": [[8, 10], ["None"], "methods", ["None"], ["    ", "def", "name", "(", "self", ")", ":", "\n", "        ", "return", "'AgingDataLoader'", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.data_loader.AgingDataLoader.initialize": [[11, 20], ["data_loader.CreateDataset", "torch.utils.data.DataLoader", "int"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.data_loader.CreateDataset"], ["", "def", "initialize", "(", "self", ",", "opt", ")", ":", "\n", "        ", "self", ".", "opt", "=", "opt", "\n", "self", ".", "dataset", "=", "CreateDataset", "(", "opt", ")", "\n", "self", ".", "dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "self", ".", "dataset", ",", "\n", "batch_size", "=", "opt", ".", "batchSize", ",", "\n", "shuffle", "=", "not", "opt", ".", "serial_batches", ",", "\n", "drop_last", "=", "True", ",", "\n", "num_workers", "=", "int", "(", "opt", ".", "nThreads", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.data_loader.AgingDataLoader.load_data": [[21, 23], ["None"], "methods", ["None"], ["", "def", "load_data", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "dataloader", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.data_loader.AgingDataLoader.__len__": [[24, 26], ["min", "len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "min", "(", "len", "(", "self", ".", "dataset", ")", ",", "self", ".", "opt", ".", "max_dataset_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.data_loader.CreateDataset": [[28, 33], ["data.multiclass_unaligned_dataset.MulticlassUnalignedDataset", "print", "data.multiclass_unaligned_dataset.MulticlassUnalignedDataset.initialize", "data.multiclass_unaligned_dataset.MulticlassUnalignedDataset.name"], "function", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.options.base_options.BaseOptions.initialize", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.base_dataset.BaseDataset.name"], ["", "", "def", "CreateDataset", "(", "opt", ")", ":", "\n", "    ", "dataset", "=", "MulticlassUnalignedDataset", "(", ")", "\n", "print", "(", "\"dataset [%s] was created\"", "%", "(", "dataset", ".", "name", "(", ")", ")", ")", "\n", "dataset", ".", "initialize", "(", "opt", ")", "\n", "return", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.data_loader.CreateDataLoader": [[35, 40], ["data_loader.AgingDataLoader", "print", "data_loader.AgingDataLoader.initialize", "data_loader.AgingDataLoader.name"], "function", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.options.base_options.BaseOptions.initialize", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.base_dataset.BaseDataset.name"], ["", "def", "CreateDataLoader", "(", "opt", ")", ":", "\n", "    ", "data_loader", "=", "AgingDataLoader", "(", ")", "\n", "print", "(", "data_loader", ".", "name", "(", ")", ")", "\n", "data_loader", ".", "initialize", "(", "opt", ")", "\n", "return", "data_loader", "\n", "", ""]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.multiclass_unaligned_dataset.MulticlassUnalignedDataset.initialize": [[17, 101], ["enumerate", "len", "multiclass_unaligned_dataset.MulticlassUnalignedDataset.__len__", "data.dataset_utils.get_transform", "enumerate", "util.preprocess_itw_im.preprocessInTheWildImage", "next", "len", "enumerate", "sorted", "enumerate", "multiclass_unaligned_dataset.MulticlassUnalignedDataset.assign_age_class", "data.dataset_utils.list_folder_images", "os.walk", "len", "multiclass_unaligned_dataset.MulticlassUnalignedDataset.assign_age_class", "os.path.join", "len", "multiclass_unaligned_dataset.MulticlassUnalignedDataset.assign_age_class"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.multiclass_unaligned_dataset.MulticlassUnalignedDataset.__len__", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.dataset_utils.get_transform", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.multiclass_unaligned_dataset.MulticlassUnalignedDataset.assign_age_class", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.dataset_utils.list_folder_images", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.multiclass_unaligned_dataset.MulticlassUnalignedDataset.assign_age_class", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.multiclass_unaligned_dataset.MulticlassUnalignedDataset.assign_age_class"], ["    ", "def", "initialize", "(", "self", ",", "opt", ")", ":", "\n", "        ", "self", ".", "opt", "=", "opt", "\n", "self", ".", "root", "=", "opt", ".", "dataroot", "\n", "self", ".", "name_mapping", "=", "{", "}", "\n", "self", ".", "prev_A", "=", "-", "1", "\n", "self", ".", "prev_B", "=", "-", "1", "\n", "self", ".", "class_A", "=", "-", "1", "\n", "self", ".", "class_B", "=", "-", "1", "\n", "self", ".", "get_samples", "=", "False", "\n", "if", "not", "self", ".", "opt", ".", "isTrain", ":", "\n", "            ", "self", ".", "in_the_wild", "=", "opt", ".", "in_the_wild", "\n", "", "else", ":", "\n", "            ", "self", ".", "in_the_wild", "=", "False", "\n", "\n", "# find all existing classes in root", "\n", "", "if", "not", "self", ".", "in_the_wild", ":", "\n", "            ", "self", ".", "tempClassNames", "=", "[", "]", "\n", "subDirs", "=", "next", "(", "os", ".", "walk", "(", "self", ".", "root", ")", ")", "[", "1", "]", "# a quick way to get all subdirectories", "\n", "for", "currDir", "in", "subDirs", ":", "\n", "                ", "if", "self", ".", "opt", ".", "isTrain", ":", "\n", "                    ", "prefix", "=", "'train'", "\n", "", "else", ":", "\n", "                    ", "prefix", "=", "'test'", "\n", "", "if", "prefix", "in", "currDir", ":", "# we assume that the class name starts with the prefix", "\n", "                    ", "len_prefix", "=", "len", "(", "prefix", ")", "\n", "className", "=", "currDir", "[", "len_prefix", ":", "]", "\n", "self", ".", "tempClassNames", "+=", "[", "className", "]", "\n", "\n", "# sort classes", "\n", "", "", "if", "len", "(", "self", ".", "opt", ".", "sort_order", ")", ">", "0", ":", "\n", "                ", "self", ".", "classNames", "=", "[", "]", "\n", "for", "i", ",", "nextClass", "in", "enumerate", "(", "self", ".", "opt", ".", "sort_order", ")", ":", "\n", "                    ", "for", "currClass", "in", "self", ".", "tempClassNames", ":", "\n", "                        ", "if", "nextClass", "==", "currClass", ":", "\n", "                            ", "self", ".", "classNames", "+=", "[", "currClass", "]", "\n", "curr_class_num", "=", "self", ".", "assign_age_class", "(", "currClass", ")", "\n", "self", ".", "name_mapping", "[", "currClass", "]", "=", "curr_class_num", "\n", "", "", "", "", "else", ":", "\n", "                ", "self", ".", "classNames", "=", "sorted", "(", "self", ".", "tempClassNames", ")", "\n", "for", "i", ",", "currClass", "in", "enumerate", "(", "self", ".", "classNames", ")", ":", "\n", "                    ", "curr_class_num", "=", "self", ".", "assign_age_class", "(", "currClass", ")", "\n", "self", ".", "name_mapping", "[", "currClass", "]", "=", "curr_class_num", "\n", "", "", "", "else", ":", "\n", "            ", "self", ".", "classNames", "=", "[", "]", "\n", "for", "i", ",", "nextClass", "in", "enumerate", "(", "self", ".", "opt", ".", "sort_order", ")", ":", "\n", "                ", "self", ".", "classNames", "+=", "[", "nextClass", "]", "\n", "curr_class_num", "=", "self", ".", "assign_age_class", "(", "nextClass", ")", "\n", "self", ".", "name_mapping", "[", "nextClass", "]", "=", "curr_class_num", "\n", "\n", "", "", "self", ".", "active_classes_mapping", "=", "{", "}", "\n", "\n", "for", "i", ",", "name", "in", "enumerate", "(", "self", ".", "classNames", ")", ":", "\n", "            ", "self", ".", "active_classes_mapping", "[", "i", "]", "=", "self", ".", "name_mapping", "[", "name", "]", "\n", "\n", "", "self", ".", "numClasses", "=", "len", "(", "self", ".", "classNames", ")", "\n", "opt", ".", "numClasses", "=", "self", ".", "numClasses", "\n", "opt", ".", "classNames", "=", "self", ".", "classNames", "\n", "\n", "# set class counter for test mode", "\n", "if", "self", ".", "opt", ".", "isTrain", "is", "False", ":", "\n", "            ", "opt", ".", "batchSize", "=", "self", ".", "numClasses", "\n", "self", ".", "class_counter", "=", "0", "\n", "self", ".", "img_counter", "=", "0", "\n", "\n", "# arrange directories", "\n", "", "if", "not", "self", ".", "in_the_wild", ":", "\n", "            ", "self", ".", "dirs", "=", "[", "]", "\n", "self", ".", "img_paths", "=", "[", "]", "\n", "self", ".", "parsing_paths", "=", "[", "]", "\n", "self", ".", "sizes", "=", "[", "]", "\n", "\n", "for", "currClass", "in", "self", ".", "classNames", ":", "\n", "                ", "self", ".", "dirs", "+=", "[", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "opt", ".", "phase", "+", "currClass", ")", "]", "\n", "imgs", ",", "parsings", "=", "list_folder_images", "(", "self", ".", "dirs", "[", "-", "1", "]", ",", "self", ".", "opt", ")", "\n", "self", ".", "img_paths", "+=", "[", "imgs", "]", "\n", "self", ".", "parsing_paths", "+=", "[", "parsings", "]", "\n", "self", ".", "sizes", "+=", "[", "len", "(", "self", ".", "img_paths", "[", "-", "1", "]", ")", "]", "\n", "\n", "", "", "opt", ".", "dataset_size", "=", "self", ".", "__len__", "(", ")", "\n", "\n", "self", ".", "transform", "=", "get_transform", "(", "opt", ")", "\n", "\n", "if", "(", "not", "self", ".", "opt", ".", "isTrain", ")", "and", "self", ".", "in_the_wild", ":", "\n", "            ", "self", ".", "preprocessor", "=", "preprocessInTheWildImage", "(", "out_size", "=", "opt", ".", "fineSize", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.multiclass_unaligned_dataset.MulticlassUnalignedDataset.set_sample_mode": [[102, 106], ["None"], "methods", ["None"], ["", "", "def", "set_sample_mode", "(", "self", ",", "mode", "=", "False", ")", ":", "\n", "        ", "self", ".", "get_samples", "=", "mode", "\n", "self", ".", "class_counter", "=", "0", "\n", "self", ".", "img_counter", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.multiclass_unaligned_dataset.MulticlassUnalignedDataset.assign_age_class": [[107, 115], ["range", "int", "len", "re.split", "s.isdigit"], "methods", ["None"], ["", "def", "assign_age_class", "(", "self", ",", "class_name", ")", ":", "\n", "        ", "ages", "=", "[", "int", "(", "s", ")", "for", "s", "in", "re", ".", "split", "(", "'-|_'", ",", "class_name", ")", "if", "s", ".", "isdigit", "(", ")", "]", "\n", "max_age", "=", "ages", "[", "-", "1", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "CLASSES_UPPER_BOUNDS", ")", ")", ":", "\n", "            ", "if", "max_age", "<=", "CLASSES_UPPER_BOUNDS", "[", "i", "]", ":", "\n", "                ", "break", "\n", "\n", "", "", "return", "i", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.multiclass_unaligned_dataset.MulticlassUnalignedDataset.mask_image": [[116, 122], ["None"], "methods", ["None"], ["", "def", "mask_image", "(", "self", ",", "img", ",", "parsings", ")", ":", "\n", "        ", "labels_to_mask", "=", "[", "0", ",", "14", ",", "15", ",", "16", ",", "18", "]", "\n", "for", "idx", "in", "labels_to_mask", ":", "\n", "            ", "img", "[", "parsings", "==", "idx", "]", "=", "128", "\n", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.multiclass_unaligned_dataset.MulticlassUnalignedDataset.get_item_from_path": [[123, 142], ["os.path.split", "PIL.Image.open().convert", "numpy.array().reshape", "PIL.Image.fromarray", "multiclass_unaligned_dataset.MulticlassUnalignedDataset.transform().unsqueeze", "multiclass_unaligned_dataset.MulticlassUnalignedDataset.preprocessor.forward", "os.path.join", "PIL.Image.open().convert", "numpy.array().reshape", "multiclass_unaligned_dataset.MulticlassUnalignedDataset.mask_image", "torch.zeros", "PIL.Image.open", "numpy.array", "multiclass_unaligned_dataset.MulticlassUnalignedDataset.transform", "multiclass_unaligned_dataset.MulticlassUnalignedDataset.getdata", "PIL.Image.open", "numpy.array", "numpy.array().reshape.getdata"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.models.base_model.BaseModel.forward", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.multiclass_unaligned_dataset.MulticlassUnalignedDataset.mask_image"], ["", "def", "get_item_from_path", "(", "self", ",", "path", ")", ":", "\n", "        ", "path_dir", ",", "im_name", "=", "os", ".", "path", ".", "split", "(", "path", ")", "\n", "img", "=", "Image", ".", "open", "(", "path", ")", ".", "convert", "(", "'RGB'", ")", "\n", "img", "=", "np", ".", "array", "(", "img", ".", "getdata", "(", ")", ",", "dtype", "=", "np", ".", "uint8", ")", ".", "reshape", "(", "img", ".", "size", "[", "1", "]", ",", "img", ".", "size", "[", "0", "]", ",", "3", ")", "\n", "\n", "if", "self", ".", "in_the_wild", ":", "\n", "            ", "img", ",", "parsing", "=", "self", ".", "preprocessor", ".", "forward", "(", "img", ")", "\n", "", "else", ":", "\n", "            ", "parsing_path", "=", "os", ".", "path", ".", "join", "(", "path_dir", ",", "'parsings'", ",", "im_name", "[", ":", "-", "4", "]", "+", "'.png'", ")", "\n", "parsing", "=", "Image", ".", "open", "(", "parsing_path", ")", ".", "convert", "(", "'RGB'", ")", "\n", "parsing", "=", "np", ".", "array", "(", "parsing", ".", "getdata", "(", ")", ",", "dtype", "=", "np", ".", "uint8", ")", ".", "reshape", "(", "parsing", ".", "size", "[", "1", "]", ",", "parsing", ".", "size", "[", "0", "]", ",", "3", ")", "\n", "\n", "", "img", "=", "Image", ".", "fromarray", "(", "self", ".", "mask_image", "(", "img", ",", "parsing", ")", ")", "\n", "img", "=", "self", ".", "transform", "(", "img", ")", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "return", "{", "'Imgs'", ":", "img", ",", "\n", "'Paths'", ":", "[", "path", "]", ",", "\n", "'Classes'", ":", "torch", ".", "zeros", "(", "1", ",", "dtype", "=", "torch", ".", "int", ")", ",", "\n", "'Valid'", ":", "True", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.multiclass_unaligned_dataset.MulticlassUnalignedDataset.__getitem__": [[143, 216], ["random.randint", "random.randint", "random.randint", "PIL.Image.open().convert", "numpy.array().reshape", "PIL.Image.open().convert", "numpy.array().reshape", "PIL.Image.open().convert", "numpy.array().reshape", "PIL.Image.fromarray", "PIL.Image.open().convert", "numpy.array().reshape", "PIL.Image.fromarray", "multiclass_unaligned_dataset.MulticlassUnalignedDataset.transform", "multiclass_unaligned_dataset.MulticlassUnalignedDataset.transform", "random.randint", "multiclass_unaligned_dataset.MulticlassUnalignedDataset.mask_image", "multiclass_unaligned_dataset.MulticlassUnalignedDataset.mask_image", "random.randint", "PIL.Image.open().convert", "numpy.array().reshape", "PIL.Image.open().convert", "numpy.array().reshape", "PIL.Image.fromarray", "multiclass_unaligned_dataset.MulticlassUnalignedDataset.transform", "torch.zeros", "PIL.Image.open", "numpy.array", "PIL.Image.open", "numpy.array", "PIL.Image.open", "numpy.array", "PIL.Image.open", "numpy.array", "multiclass_unaligned_dataset.MulticlassUnalignedDataset.mask_image", "multiclass_unaligned_dataset.MulticlassUnalignedDataset.getdata", "multiclass_unaligned_dataset.MulticlassUnalignedDataset.getdata", "numpy.array().reshape.getdata", "numpy.array().reshape.getdata", "PIL.Image.open", "numpy.array", "PIL.Image.open", "numpy.array", "torch.zeros.getdata", "numpy.array().reshape.getdata"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.multiclass_unaligned_dataset.MulticlassUnalignedDataset.mask_image", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.multiclass_unaligned_dataset.MulticlassUnalignedDataset.mask_image", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.multiclass_unaligned_dataset.MulticlassUnalignedDataset.mask_image"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "if", "self", ".", "opt", ".", "isTrain", "and", "not", "self", ".", "get_samples", ":", "\n", "            ", "condition", "=", "True", "\n", "self", ".", "class_A_idx", "=", "random", ".", "randint", "(", "0", ",", "self", ".", "numClasses", "-", "1", ")", "\n", "self", ".", "class_A", "=", "self", ".", "active_classes_mapping", "[", "self", ".", "class_A_idx", "]", "\n", "while", "condition", ":", "\n", "                ", "self", ".", "class_B_idx", "=", "random", ".", "randint", "(", "0", ",", "self", ".", "numClasses", "-", "1", ")", "\n", "self", ".", "class_B", "=", "self", ".", "active_classes_mapping", "[", "self", ".", "class_B_idx", "]", "\n", "condition", "=", "self", ".", "class_A", "==", "self", ".", "class_B", "\n", "\n", "", "index_A", "=", "random", ".", "randint", "(", "0", ",", "self", ".", "sizes", "[", "self", ".", "class_A_idx", "]", "-", "1", ")", "\n", "index_B", "=", "random", ".", "randint", "(", "0", ",", "self", ".", "sizes", "[", "self", ".", "class_B_idx", "]", "-", "1", ")", "\n", "\n", "A_img_path", "=", "self", ".", "img_paths", "[", "self", ".", "class_A_idx", "]", "[", "index_A", "]", "\n", "A_img", "=", "Image", ".", "open", "(", "A_img_path", ")", ".", "convert", "(", "'RGB'", ")", "\n", "A_img", "=", "np", ".", "array", "(", "A_img", ".", "getdata", "(", ")", ",", "dtype", "=", "np", ".", "uint8", ")", ".", "reshape", "(", "A_img", ".", "size", "[", "1", "]", ",", "A_img", ".", "size", "[", "0", "]", ",", "3", ")", "\n", "\n", "B_img_path", "=", "self", ".", "img_paths", "[", "self", ".", "class_B_idx", "]", "[", "index_B", "]", "\n", "B_img", "=", "Image", ".", "open", "(", "B_img_path", ")", ".", "convert", "(", "'RGB'", ")", "\n", "B_img", "=", "np", ".", "array", "(", "B_img", ".", "getdata", "(", ")", ",", "dtype", "=", "np", ".", "uint8", ")", ".", "reshape", "(", "B_img", ".", "size", "[", "1", "]", ",", "B_img", ".", "size", "[", "0", "]", ",", "3", ")", "\n", "\n", "A_parsing_path", "=", "self", ".", "parsing_paths", "[", "self", ".", "class_A_idx", "]", "[", "index_A", "]", "\n", "A_parsing", "=", "Image", ".", "open", "(", "A_parsing_path", ")", ".", "convert", "(", "'RGB'", ")", "\n", "A_parsing", "=", "np", ".", "array", "(", "A_parsing", ".", "getdata", "(", ")", ",", "dtype", "=", "np", ".", "uint8", ")", ".", "reshape", "(", "A_parsing", ".", "size", "[", "1", "]", ",", "A_parsing", ".", "size", "[", "0", "]", ",", "3", ")", "\n", "A_img", "=", "Image", ".", "fromarray", "(", "self", ".", "mask_image", "(", "A_img", ",", "A_parsing", ")", ")", "\n", "\n", "B_parsing_path", "=", "self", ".", "parsing_paths", "[", "self", ".", "class_B_idx", "]", "[", "index_B", "]", "\n", "B_parsing", "=", "Image", ".", "open", "(", "B_parsing_path", ")", ".", "convert", "(", "'RGB'", ")", "\n", "B_parsing", "=", "np", ".", "array", "(", "B_parsing", ".", "getdata", "(", ")", ",", "dtype", "=", "np", ".", "uint8", ")", ".", "reshape", "(", "B_parsing", ".", "size", "[", "1", "]", ",", "B_parsing", ".", "size", "[", "0", "]", ",", "3", ")", "\n", "B_img", "=", "Image", ".", "fromarray", "(", "self", ".", "mask_image", "(", "B_img", ",", "B_parsing", ")", ")", "\n", "\n", "# numpy conversions are an annoying hack to form a PIL image with more than 3 channels", "\n", "A_img", "=", "self", ".", "transform", "(", "A_img", ")", "\n", "B_img", "=", "self", ".", "transform", "(", "B_img", ")", "\n", "\n", "return", "{", "'A'", ":", "A_img", ",", "'B'", ":", "B_img", ",", "\n", "\"A_class\"", ":", "self", ".", "class_A_idx", ",", "\"B_class\"", ":", "self", ".", "class_B_idx", ",", "\n", "'A_paths'", ":", "A_img_path", ",", "'B_paths'", ":", "B_img_path", "}", "\n", "\n", "", "else", ":", "# in test mode, load one image from each class", "\n", "            ", "i", "=", "self", ".", "class_counter", "%", "self", ".", "numClasses", "\n", "self", ".", "class_counter", "+=", "1", "\n", "\n", "if", "self", ".", "get_samples", ":", "\n", "                ", "ind", "=", "random", ".", "randint", "(", "0", ",", "self", ".", "sizes", "[", "i", "]", "-", "1", ")", "\n", "", "else", ":", "\n", "                ", "ind", "=", "self", ".", "img_counter", "if", "self", ".", "img_counter", "<", "self", ".", "sizes", "[", "i", "]", "else", "-", "1", "\n", "\n", "", "if", "i", "==", "self", ".", "numClasses", "-", "1", ":", "\n", "                ", "self", ".", "img_counter", "+=", "1", "\n", "\n", "", "if", "ind", ">", "-", "1", ":", "\n", "                ", "valid", "=", "True", "\n", "paths", "=", "self", ".", "img_paths", "[", "i", "]", "[", "ind", "]", "\n", "img", "=", "Image", ".", "open", "(", "self", ".", "img_paths", "[", "i", "]", "[", "ind", "]", ")", ".", "convert", "(", "'RGB'", ")", "\n", "img", "=", "np", ".", "array", "(", "img", ".", "getdata", "(", ")", ",", "dtype", "=", "np", ".", "uint8", ")", ".", "reshape", "(", "img", ".", "size", "[", "1", "]", ",", "img", ".", "size", "[", "0", "]", ",", "3", ")", "\n", "\n", "parsing_path", "=", "self", ".", "parsing_paths", "[", "i", "]", "[", "ind", "]", "\n", "parsing", "=", "Image", ".", "open", "(", "parsing_path", ")", ".", "convert", "(", "'RGB'", ")", "\n", "parsing", "=", "np", ".", "array", "(", "parsing", ".", "getdata", "(", ")", ",", "dtype", "=", "np", ".", "uint8", ")", ".", "reshape", "(", "parsing", ".", "size", "[", "1", "]", ",", "parsing", ".", "size", "[", "0", "]", ",", "3", ")", "\n", "img", "=", "Image", ".", "fromarray", "(", "self", ".", "mask_image", "(", "img", ",", "parsing", ")", ")", "\n", "\n", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "", "else", ":", "\n", "                ", "img", "=", "torch", ".", "zeros", "(", "3", ",", "self", ".", "opt", ".", "fineSize", ",", "self", ".", "opt", ".", "fineSize", ")", "\n", "paths", "=", "''", "\n", "valid", "=", "False", "\n", "\n", "", "return", "{", "'Imgs'", ":", "img", ",", "\n", "'Paths'", ":", "paths", ",", "\n", "'Classes'", ":", "i", ",", "\n", "'Valid'", ":", "valid", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.multiclass_unaligned_dataset.MulticlassUnalignedDataset.__len__": [[217, 224], ["round", "sum", "max"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "opt", ".", "isTrain", ":", "\n", "            ", "return", "round", "(", "sum", "(", "self", ".", "sizes", ")", "/", "2", ")", "# this determines how many iterations we make per epoch", "\n", "", "elif", "self", ".", "in_the_wild", ":", "\n", "            ", "return", "0", "\n", "", "else", ":", "\n", "            ", "return", "max", "(", "self", ".", "sizes", ")", "*", "self", ".", "numClasses", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.multiclass_unaligned_dataset.MulticlassUnalignedDataset.name": [[225, 227], ["None"], "methods", ["None"], ["", "", "def", "name", "(", "self", ")", ":", "\n", "        ", "return", "'MulticlassUnalignedDataset'", "\n", "", "", ""]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.base_dataset.BaseDataset.__init__": [[6, 8], ["torch.Dataset.__init__"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.options.base_options.BaseOptions.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "BaseDataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.base_dataset.BaseDataset.name": [[9, 11], ["None"], "methods", ["None"], ["", "def", "name", "(", "self", ")", ":", "\n", "        ", "return", "'BaseDataset'", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.data.base_dataset.BaseDataset.initialize": [[12, 14], ["None"], "methods", ["None"], ["", "def", "initialize", "(", "self", ",", "opt", ")", ":", "\n", "        ", "pass", "\n", "", "", ""]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.options.test_options.TestOptions.initialize": [[6, 26], ["base_options.BaseOptions.initialize", "test_options.TestOptions.parser.add_argument", "test_options.TestOptions.parser.add_argument", "test_options.TestOptions.parser.add_argument", "test_options.TestOptions.parser.add_argument", "test_options.TestOptions.parser.add_argument", "test_options.TestOptions.parser.add_argument", "test_options.TestOptions.parser.add_argument", "test_options.TestOptions.parser.add_argument", "test_options.TestOptions.parser.add_argument", "test_options.TestOptions.parser.add_argument", "test_options.TestOptions.parser.add_argument", "test_options.TestOptions.parser.add_argument", "test_options.TestOptions.parser.add_argument", "test_options.TestOptions.parser.add_argument", "test_options.TestOptions.parser.add_argument", "test_options.TestOptions.parser.add_argument", "test_options.TestOptions.parser.add_argument", "float"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.options.base_options.BaseOptions.initialize"], ["    ", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "BaseOptions", ".", "initialize", "(", "self", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--random_seed'", ",", "type", "=", "int", ",", "default", "=", "-", "1", ",", "help", "=", "'random seed for generating different outputs from the same model.'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--ntest'", ",", "type", "=", "int", ",", "default", "=", "float", "(", "\"inf\"", ")", ",", "help", "=", "'# of test examples.'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--results_dir'", ",", "type", "=", "str", ",", "default", "=", "'./results/'", ",", "help", "=", "'saves results here.'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--phase'", ",", "type", "=", "str", ",", "default", "=", "'test'", ",", "help", "=", "'train, val, test, etc'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--which_epoch'", ",", "type", "=", "str", ",", "default", "=", "'latest'", ",", "help", "=", "'which epoch to load? set to latest to use latest cached model'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--how_many'", ",", "type", "=", "int", ",", "default", "=", "50", ",", "help", "=", "'how many test images to run'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--in_the_wild'", ",", "action", "=", "'store_true'", ",", "help", "=", "'for evaluating on in the wild images'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--traverse'", ",", "action", "=", "'store_true'", ",", "help", "=", "'when true, run latent space traversal on a list of images'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--full_progression'", ",", "action", "=", "'store_true'", ",", "help", "=", "'when true, deploy mode saves all outputs as a single image'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--make_video'", ",", "action", "=", "'store_true'", ",", "help", "=", "'when true, make a video from the traversal results'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--compare_to_trained_outputs'", ",", "action", "=", "'store_true'", ",", "help", "=", "'when true, interpolate a trained class in order to compare to trained outputs'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--compare_to_trained_class'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "help", "=", "'what class to compare to'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--trained_class_jump'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "choices", "=", "[", "1", ",", "2", "]", ",", "help", "=", "'how many classes to jump'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--interp_step'", ",", "type", "=", "float", ",", "default", "=", "0.5", ",", "help", "=", "'step size of interpolated w space vectors between each 2 true w space vectors'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--deploy'", ",", "action", "=", "'store_true'", ",", "help", "=", "'when true, run forward pass on a list of images'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--image_path_file'", ",", "type", "=", "str", ",", "help", "=", "'a file with a list of images to perform run through the network and/or latent space traversal on'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--debug_mode'", ",", "action", "=", "'store_true'", ",", "help", "=", "'when true, all intermediate outputs are saved to the html file'", ")", "\n", "self", ".", "isTrain", "=", "False", "\n", "", "", ""]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.options.train_options.TrainOptions.initialize": [[6, 42], ["base_options.BaseOptions.initialize", "train_options.TrainOptions.parser.add_argument", "train_options.TrainOptions.parser.add_argument", "train_options.TrainOptions.parser.add_argument", "train_options.TrainOptions.parser.add_argument", "train_options.TrainOptions.parser.add_argument", "train_options.TrainOptions.parser.add_argument", "train_options.TrainOptions.parser.add_argument", "train_options.TrainOptions.parser.add_argument", "train_options.TrainOptions.parser.add_argument", "train_options.TrainOptions.parser.add_argument", "train_options.TrainOptions.parser.add_argument", "train_options.TrainOptions.parser.add_argument", "train_options.TrainOptions.parser.add_argument", "train_options.TrainOptions.parser.add_argument", "train_options.TrainOptions.parser.add_argument", "train_options.TrainOptions.parser.add_argument", "train_options.TrainOptions.parser.add_argument", "train_options.TrainOptions.parser.add_argument", "train_options.TrainOptions.parser.add_argument", "train_options.TrainOptions.parser.add_argument", "train_options.TrainOptions.parser.add_argument", "train_options.TrainOptions.parser.add_argument", "train_options.TrainOptions.parser.add_argument", "train_options.TrainOptions.parser.add_argument"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.options.base_options.BaseOptions.initialize"], ["    ", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "BaseOptions", ".", "initialize", "(", "self", ")", "\n", "\n", "# for displays", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--display_freq'", ",", "type", "=", "int", ",", "default", "=", "40", ",", "help", "=", "'frequency of showing training results on screen'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--print_freq'", ",", "type", "=", "int", ",", "default", "=", "40", ",", "help", "=", "'frequency of showing training results on console'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--save_latest_freq'", ",", "type", "=", "int", ",", "default", "=", "5000", ",", "help", "=", "'frequency of saving the latest results'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--save_display_freq'", ",", "type", "=", "int", ",", "default", "=", "5000", ",", "help", "=", "'save the current display of results every save_display_freq_iterations'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--save_epoch_freq'", ",", "type", "=", "int", ",", "default", "=", "20", ",", "help", "=", "'frequency of saving checkpoints at the end of epochs'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--no_html'", ",", "action", "=", "'store_true'", ",", "help", "=", "'do not save intermediate training results to [opt.checkpoints_dir]/[opt.name]/web/'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--debug'", ",", "action", "=", "'store_true'", ",", "help", "=", "'only do one epoch and displays at each iteration'", ")", "\n", "\n", "# for training & optimizer", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--continue_train'", ",", "action", "=", "'store_true'", ",", "help", "=", "'continue training: load the latest model'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--load_pretrain'", ",", "type", "=", "str", ",", "default", "=", "''", ",", "help", "=", "'load the pretrained model from the specified location'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--which_epoch'", ",", "type", "=", "str", ",", "default", "=", "'latest'", ",", "help", "=", "'which epoch to load? set to latest to use latest cached model. This flag must be used when the continue_train flag is on'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--phase'", ",", "type", "=", "str", ",", "default", "=", "'train'", ",", "help", "=", "'train, val, test, etc'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--epochs'", ",", "type", "=", "int", ",", "default", "=", "400", ",", "help", "=", "'# of epochs to train'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--decay_gamma'", ",", "type", "=", "float", ",", "default", "=", "0.5", ",", "help", "=", "'decay the learning rate by this value'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--decay_epochs'", ",", "type", "=", "str", ",", "default", "=", "'50,100'", ",", "help", "=", "'epochs to perform step lr decay'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--beta1'", ",", "type", "=", "float", ",", "default", "=", "0.0", ",", "help", "=", "'momentum term of adam'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--beta2'", ",", "type", "=", "float", ",", "default", "=", "0.999", ",", "help", "=", "'momentum term of adam'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--lr'", ",", "type", "=", "float", ",", "default", "=", "0.001", ",", "help", "=", "'initial learning rate for adam'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--decay_adain_affine_layers'", ",", "type", "=", "bool", ",", "default", "=", "True", ",", "help", "=", "'when true adain affine layer learning rate is decayed by 0.01'", ")", "\n", "\n", "# for discriminators", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--n_layers_D'", ",", "type", "=", "int", ",", "default", "=", "6", ",", "help", "=", "'number of styled convolution layers in the discriminator'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--ndf'", ",", "type", "=", "int", ",", "default", "=", "64", ",", "help", "=", "'# of discrim filters in first conv layer'", ")", "\n", "\n", "# loss weights", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--lambda_cyc'", ",", "type", "=", "float", ",", "default", "=", "10.0", ",", "help", "=", "'weight for cycle loss'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--lambda_rec'", ",", "type", "=", "float", ",", "default", "=", "10.0", ",", "help", "=", "'weight for reconstruction loss'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--lambda_id'", ",", "type", "=", "float", ",", "default", "=", "1.0", ",", "help", "=", "'weight for identity encoding consistency loss'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--lambda_age'", ",", "type", "=", "float", ",", "default", "=", "1.0", ",", "help", "=", "'weight for age encoding consistency loss'", ")", "\n", "\n", "self", ".", "isTrain", "=", "True", "\n", "", "", ""]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.options.base_options.BaseOptions.__init__": [[9, 12], ["argparse.ArgumentParser"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "self", ".", "initialized", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.options.base_options.BaseOptions.initialize": [[13, 59], ["base_options.BaseOptions.parser.add_argument", "base_options.BaseOptions.parser.add_argument", "base_options.BaseOptions.parser.add_argument", "base_options.BaseOptions.parser.add_argument", "base_options.BaseOptions.parser.add_argument", "base_options.BaseOptions.parser.add_argument", "base_options.BaseOptions.parser.add_argument", "base_options.BaseOptions.parser.add_argument", "base_options.BaseOptions.parser.add_argument", "base_options.BaseOptions.parser.add_argument", "base_options.BaseOptions.parser.add_argument", "base_options.BaseOptions.parser.add_argument", "base_options.BaseOptions.parser.add_argument", "base_options.BaseOptions.parser.add_argument", "base_options.BaseOptions.parser.add_argument", "base_options.BaseOptions.parser.add_argument", "base_options.BaseOptions.parser.add_argument", "base_options.BaseOptions.parser.add_argument", "base_options.BaseOptions.parser.add_argument", "base_options.BaseOptions.parser.add_argument", "base_options.BaseOptions.parser.add_argument", "base_options.BaseOptions.parser.add_argument", "base_options.BaseOptions.parser.add_argument", "base_options.BaseOptions.parser.add_argument", "base_options.BaseOptions.parser.add_argument", "base_options.BaseOptions.parser.add_argument", "base_options.BaseOptions.parser.add_argument", "base_options.BaseOptions.parser.add_argument", "base_options.BaseOptions.parser.add_argument", "base_options.BaseOptions.parser.add_argument", "base_options.BaseOptions.parser.add_argument", "base_options.BaseOptions.parser.add_argument", "base_options.BaseOptions.parser.add_argument", "base_options.BaseOptions.parser.add_argument", "float"], "methods", ["None"], ["", "def", "initialize", "(", "self", ")", ":", "\n", "# experiment specifics", "\n", "        ", "self", ".", "parser", ".", "add_argument", "(", "'--name'", ",", "type", "=", "str", ",", "default", "=", "'debug'", ",", "help", "=", "'name of the experiment. It decides where to store samples and models'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--gpu_ids'", ",", "type", "=", "str", ",", "default", "=", "'0'", ",", "help", "=", "'gpu ids: e.g. 0  0,1,2, 0,2. use -1 for CPU'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--checkpoints_dir'", ",", "type", "=", "str", ",", "default", "=", "'./checkpoints'", ",", "help", "=", "'models are saved here'", ")", "\n", "\n", "# input/output sizes", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--batchSize'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "help", "=", "'input batch size'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--loadSize'", ",", "type", "=", "int", ",", "default", "=", "256", ",", "help", "=", "'scale images to this size'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--fineSize'", ",", "type", "=", "int", ",", "default", "=", "256", ",", "help", "=", "'then crop to this size'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--input_nc'", ",", "type", "=", "int", ",", "default", "=", "3", ",", "help", "=", "'# of input image channels'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--output_nc'", ",", "type", "=", "int", ",", "default", "=", "3", ",", "help", "=", "'# of output image channels'", ")", "\n", "\n", "# for setting inputs", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--dataroot'", ",", "type", "=", "str", ",", "default", "=", "'./datasets/males/'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--sort_classes'", ",", "type", "=", "bool", ",", "default", "=", "True", ",", "help", "=", "'a flag that indicates whether to sort the classes'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--sort_order'", ",", "type", "=", "str", ",", "default", "=", "'0-2,3-6,7-9,15-19,30-39,50-69'", ",", "help", "=", "'a specific order to sort the classes, must contain all classes, only works when sort_classes is true'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--resize_or_crop'", ",", "type", "=", "str", ",", "default", "=", "'resize_and_crop'", ",", "help", "=", "'scaling and cropping of images at load time [resize_and_crop|crop|scale_width|scale_width_and_crop]'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--serial_batches'", ",", "action", "=", "'store_true'", ",", "help", "=", "'if true, takes images in order to make batches, otherwise takes them randomly'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--no_flip'", ",", "action", "=", "'store_true'", ",", "help", "=", "'if specified, do not flip the images for data argumentation'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--nThreads'", ",", "default", "=", "4", ",", "type", "=", "int", ",", "help", "=", "'# threads for loading data'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--max_dataset_size'", ",", "type", "=", "int", ",", "default", "=", "float", "(", "\"inf\"", ")", ",", "help", "=", "'Maximum number of samples allowed per dataset. If the dataset directory contains more than max_dataset_size, only a subset is loaded.'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--display_single_pane_ncols'", ",", "type", "=", "int", ",", "default", "=", "6", ",", "help", "=", "'if positive, display all images in a single visdom web panel with certain number of images per row.'", ")", "\n", "\n", "# for displays", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--display_winsize'", ",", "type", "=", "int", ",", "default", "=", "256", ",", "help", "=", "'display window size'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--display_port'", ",", "type", "=", "int", ",", "default", "=", "8097", ",", "help", "=", "'visdom port of the web display'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--display_id'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "help", "=", "'window id of the web display'", ")", "\n", "\n", "# for generator", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--use_modulated_conv'", ",", "type", "=", "bool", ",", "default", "=", "True", ",", "help", "=", "'if specified, use modulated conv layers in the decoder like in StyleGAN2'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--conv_weight_norm'", ",", "type", "=", "bool", ",", "default", "=", "True", ",", "help", "=", "'if specified, use weight normalization in conv and linear layers like in progrssive growing of GANs'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--id_enc_norm'", ",", "type", "=", "str", ",", "default", "=", "'pixel'", ",", "help", "=", "'instance, pixel normalization'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--decoder_norm'", ",", "type", "=", "str", ",", "default", "=", "'pixel'", ",", "choices", "=", "[", "'pixel'", ",", "'none'", "]", ",", "help", "=", "'type of upsampling layers normalization'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--n_adaptive_blocks'", ",", "type", "=", "int", ",", "default", "=", "4", ",", "help", "=", "'# of adaptive normalization blocks'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--activation'", ",", "type", "=", "str", ",", "default", "=", "'lrelu'", ",", "choices", "=", "[", "'relu'", ",", "'lrelu'", "]", ",", "help", "=", "'type of generator activation layer'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--normalize_mlp'", ",", "type", "=", "bool", ",", "default", "=", "True", ",", "help", "=", "'if specified, normalize the generator MLP inputs and outputs'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--no_moving_avg'", ",", "action", "=", "'store_true'", ",", "help", "=", "'if specified, do not use moving average network'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--use_resblk_pixel_norm'", ",", "action", "=", "'store_true'", ",", "help", "=", "'if specified, apply pixel norm on the resnet block outputs'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--ngf'", ",", "type", "=", "int", ",", "default", "=", "64", ",", "help", "=", "'# of gen filters in first conv layer'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--no_cond_noise'", ",", "action", "=", "'store_true'", ",", "help", "=", "'remove gaussian noise from latent age code'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--gen_dim_per_style'", ",", "type", "=", "int", ",", "default", "=", "50", ",", "help", "=", "'per class dimension of adain generator style latent code'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--n_downsample'", ",", "type", "=", "int", ",", "default", "=", "2", ",", "help", "=", "'number of downsampling layers in generator'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--verbose'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "help", "=", "'toggles verbose'", ")", "\n", "\n", "self", ".", "initialized", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.options.base_options.BaseOptions.parse": [[60, 119], ["base_options.BaseOptions.opt.gpu_ids.split", "vars", "print", "sorted", "print", "os.path.join", "util.util.util.mkdirs", "base_options.BaseOptions.initialize", "base_options.BaseOptions.parser.parse_args", "int", "len", "torch.cuda.set_device", "base_options.BaseOptions.opt.sort_order.split", "base_options.BaseOptions.opt.decay_epochs.split", "vars.items", "print", "os.path.join", "base_options.BaseOptions.parser.parse_args", "base_options.BaseOptions.opt.gpu_ids.append", "open", "f.read().splitlines", "open", "opt_file.write", "sorted", "opt_file.write", "int", "vars.items", "opt_file.write", "f.read", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.util.util.mkdirs", "home.repos.pwc.inspect_result.royorel_Lifespan_Age_Transformation_Synthesis.options.base_options.BaseOptions.initialize"], ["", "def", "parse", "(", "self", ",", "save", "=", "True", ")", ":", "\n", "        ", "if", "not", "self", ".", "initialized", ":", "\n", "            ", "self", ".", "initialize", "(", ")", "\n", "", "try", ":", "\n", "            ", "self", ".", "opt", "=", "self", ".", "parser", ".", "parse_args", "(", ")", "\n", "", "except", ":", "# solves argparse error in google colab", "\n", "            ", "self", ".", "opt", "=", "self", ".", "parser", ".", "parse_args", "(", "args", "=", "[", "]", ")", "\n", "\n", "", "self", ".", "opt", ".", "isTrain", "=", "self", ".", "isTrain", "# train or test", "\n", "\n", "str_ids", "=", "self", ".", "opt", ".", "gpu_ids", ".", "split", "(", "','", ")", "\n", "self", ".", "opt", ".", "gpu_ids", "=", "[", "]", "\n", "for", "str_id", "in", "str_ids", ":", "\n", "            ", "id", "=", "int", "(", "str_id", ")", "\n", "if", "id", ">=", "0", ":", "\n", "                ", "self", ".", "opt", ".", "gpu_ids", ".", "append", "(", "id", ")", "\n", "\n", "# set gpu ids", "\n", "", "", "if", "len", "(", "self", ".", "opt", ".", "gpu_ids", ")", ">", "0", ":", "\n", "            ", "torch", ".", "cuda", ".", "set_device", "(", "self", ".", "opt", ".", "gpu_ids", "[", "0", "]", ")", "\n", "\n", "# set class specific sort order", "\n", "", "if", "self", ".", "opt", ".", "sort_order", "is", "not", "None", ":", "\n", "            ", "order", "=", "self", ".", "opt", ".", "sort_order", ".", "split", "(", "','", ")", "\n", "self", ".", "opt", ".", "sort_order", "=", "[", "]", "\n", "for", "currName", "in", "order", ":", "\n", "                ", "self", ".", "opt", ".", "sort_order", "+=", "[", "currName", "]", "\n", "\n", "# set decay schedule", "\n", "", "", "if", "self", ".", "isTrain", "and", "self", ".", "opt", ".", "decay_epochs", "is", "not", "None", ":", "\n", "            ", "decay_epochs", "=", "self", ".", "opt", ".", "decay_epochs", ".", "split", "(", "','", ")", "\n", "self", ".", "opt", ".", "decay_epochs", "=", "[", "]", "\n", "for", "curr_epoch", "in", "decay_epochs", ":", "\n", "                ", "self", ".", "opt", ".", "decay_epochs", "+=", "[", "int", "(", "curr_epoch", ")", "]", "\n", "\n", "# create full image paths in traverse/deploy mode", "\n", "", "", "if", "(", "not", "self", ".", "isTrain", ")", "and", "(", "self", ".", "opt", ".", "traverse", "or", "self", ".", "opt", ".", "deploy", ")", ":", "\n", "            ", "with", "open", "(", "self", ".", "opt", ".", "image_path_file", ",", "'r'", ")", "as", "f", ":", "\n", "# temp_paths = f.read().splitlines()", "\n", "                ", "self", ".", "opt", ".", "image_path_list", "=", "f", ".", "read", "(", ")", ".", "splitlines", "(", ")", "\n", "\n", "", "", "args", "=", "vars", "(", "self", ".", "opt", ")", "\n", "\n", "print", "(", "'------------ Options -------------'", ")", "\n", "for", "k", ",", "v", "in", "sorted", "(", "args", ".", "items", "(", ")", ")", ":", "\n", "            ", "print", "(", "'%s: %s'", "%", "(", "str", "(", "k", ")", ",", "str", "(", "v", ")", ")", ")", "\n", "", "print", "(", "'-------------- End ----------------'", ")", "\n", "\n", "# save to the disk", "\n", "expr_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opt", ".", "checkpoints_dir", ",", "self", ".", "opt", ".", "name", ")", "\n", "util", ".", "mkdirs", "(", "expr_dir", ")", "\n", "if", "save", ":", "# and not self.opt.continue_train:", "\n", "            ", "file_name", "=", "os", ".", "path", ".", "join", "(", "expr_dir", ",", "'opt.txt'", ")", "\n", "with", "open", "(", "file_name", ",", "'wt'", ")", "as", "opt_file", ":", "\n", "                ", "opt_file", ".", "write", "(", "'------------ Options -------------\\n'", ")", "\n", "for", "k", ",", "v", "in", "sorted", "(", "args", ".", "items", "(", ")", ")", ":", "\n", "                    ", "opt_file", ".", "write", "(", "'%s: %s\\n'", "%", "(", "str", "(", "k", ")", ",", "str", "(", "v", ")", ")", ")", "\n", "", "opt_file", ".", "write", "(", "'-------------- End ----------------\\n'", ")", "\n", "", "", "return", "self", ".", "opt", "\n", "", "", ""]]}