{"home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.shared_optim.SharedRMSprop.__init__": [[12, 32], ["collections.defaultdict", "torch.Optimizer.__init__", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "p.data.new().resize_as_().zero_", "p.data.new().resize_as_().zero_", "p.data.new().resize_as_().zero_", "p.data.new().resize_as_", "p.data.new().resize_as_", "p.data.new().resize_as_", "p.data.new", "p.data.new", "p.data.new"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__"], ["def", "__init__", "(", "self", ",", "\n", "params", ",", "\n", "lr", "=", "7e-4", ",", "\n", "alpha", "=", "0.99", ",", "\n", "eps", "=", "0.1", ",", "\n", "weight_decay", "=", "0", ",", "\n", "momentum", "=", "0", ",", "\n", "centered", "=", "False", ")", ":", "\n", "        ", "defaults", "=", "defaultdict", "(", "lr", "=", "lr", ",", "alpha", "=", "alpha", ",", "eps", "=", "eps", ",", "\n", "weight_decay", "=", "weight_decay", ",", "momentum", "=", "momentum", ",", "centered", "=", "centered", ")", "\n", "super", "(", "SharedRMSprop", ",", "self", ")", ".", "__init__", "(", "params", ",", "defaults", ")", "\n", "\n", "for", "group", "in", "self", ".", "param_groups", ":", "\n", "            ", "for", "p", "in", "group", "[", "'params'", "]", ":", "\n", "                ", "state", "=", "self", ".", "state", "[", "p", "]", "\n", "state", "[", "'step'", "]", "=", "torch", ".", "zeros", "(", "1", ")", "\n", "state", "[", "'grad_avg'", "]", "=", "p", ".", "data", ".", "new", "(", ")", ".", "resize_as_", "(", "p", ".", "data", ")", ".", "zero_", "(", ")", "\n", "state", "[", "'square_avg'", "]", "=", "p", ".", "data", ".", "new", "(", ")", ".", "resize_as_", "(", "p", ".", "data", ")", ".", "zero_", "(", ")", "\n", "state", "[", "'momentum_buffer'", "]", "=", "p", ".", "data", ".", "new", "(", "\n", ")", ".", "resize_as_", "(", "p", ".", "data", ")", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.shared_optim.SharedRMSprop.share_memory": [[33, 41], ["state[].share_memory_", "state[].share_memory_", "state[].share_memory_", "state[].share_memory_"], "methods", ["None"], ["", "", "", "def", "share_memory", "(", "self", ")", ":", "\n", "        ", "for", "group", "in", "self", ".", "param_groups", ":", "\n", "            ", "for", "p", "in", "group", "[", "'params'", "]", ":", "\n", "                ", "state", "=", "self", ".", "state", "[", "p", "]", "\n", "state", "[", "'square_avg'", "]", ".", "share_memory_", "(", ")", "\n", "state", "[", "'step'", "]", ".", "share_memory_", "(", ")", "\n", "state", "[", "'grad_avg'", "]", ".", "share_memory_", "(", ")", "\n", "state", "[", "'momentum_buffer'", "]", ".", "share_memory_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.shared_optim.SharedRMSprop.step": [[42, 88], ["closure", "square_avg.mul_().addcmul_", "RuntimeError", "grad.add.add.add", "grad_avg.mul_().add_", "square_avg.addcmul().sqrt().add_", "square_avg.sqrt().add_", "buf.mul_().addcdiv_", "p.data.add_", "p.data.addcdiv_", "square_avg.mul_", "grad_avg.mul_", "square_avg.addcmul().sqrt", "square_avg.sqrt", "buf.mul_", "square_avg.addcmul"], "methods", ["None"], ["", "", "", "def", "step", "(", "self", ",", "closure", "=", "None", ")", ":", "\n", "        ", "\"\"\"Performs a single optimization step.\n        Arguments:\n            closure (callable, optional): A closure that reevaluates the model\n                and returns the loss.\n        \"\"\"", "\n", "loss", "=", "None", "\n", "if", "closure", "is", "not", "None", ":", "\n", "            ", "loss", "=", "closure", "(", ")", "\n", "\n", "", "for", "group", "in", "self", ".", "param_groups", ":", "\n", "            ", "for", "p", "in", "group", "[", "'params'", "]", ":", "\n", "                ", "if", "p", ".", "grad", "is", "None", ":", "\n", "                    ", "continue", "\n", "", "grad", "=", "p", ".", "grad", ".", "data", "\n", "if", "grad", ".", "is_sparse", ":", "\n", "                    ", "raise", "RuntimeError", "(", "\n", "'RMSprop does not support sparse gradients'", ")", "\n", "", "state", "=", "self", ".", "state", "[", "p", "]", "\n", "\n", "square_avg", "=", "state", "[", "'square_avg'", "]", "\n", "alpha", "=", "group", "[", "'alpha'", "]", "\n", "\n", "state", "[", "'step'", "]", "+=", "1", "\n", "\n", "if", "group", "[", "'weight_decay'", "]", "!=", "0", ":", "\n", "                    ", "grad", "=", "grad", ".", "add", "(", "group", "[", "'weight_decay'", "]", ",", "p", ".", "data", ")", "\n", "\n", "", "square_avg", ".", "mul_", "(", "alpha", ")", ".", "addcmul_", "(", "1", "-", "alpha", ",", "grad", ",", "grad", ")", "\n", "\n", "if", "group", "[", "'centered'", "]", ":", "\n", "                    ", "grad_avg", "=", "state", "[", "'grad_avg'", "]", "\n", "grad_avg", ".", "mul_", "(", "alpha", ")", ".", "add_", "(", "1", "-", "alpha", ",", "grad", ")", "\n", "avg", "=", "square_avg", ".", "addcmul", "(", "\n", "-", "1", ",", "grad_avg", ",", "grad_avg", ")", ".", "sqrt", "(", ")", ".", "add_", "(", "group", "[", "'eps'", "]", ")", "\n", "", "else", ":", "\n", "                    ", "avg", "=", "square_avg", ".", "sqrt", "(", ")", ".", "add_", "(", "group", "[", "'eps'", "]", ")", "\n", "\n", "", "if", "group", "[", "'momentum'", "]", ">", "0", ":", "\n", "                    ", "buf", "=", "state", "[", "'momentum_buffer'", "]", "\n", "buf", ".", "mul_", "(", "group", "[", "'momentum'", "]", ")", ".", "addcdiv_", "(", "grad", ",", "avg", ")", "\n", "p", ".", "data", ".", "add_", "(", "-", "group", "[", "'lr'", "]", ",", "buf", ")", "\n", "", "else", ":", "\n", "                    ", "p", ".", "data", ".", "addcdiv_", "(", "-", "group", "[", "'lr'", "]", ",", "grad", ",", "avg", ")", "\n", "\n", "", "", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.shared_optim.SharedAdam.__init__": [[94, 113], ["collections.defaultdict", "torch.Optimizer.__init__", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "p.data.new().resize_as_().zero_", "p.data.new().resize_as_().zero_", "p.data.new().resize_as_().zero_", "p.data.new().resize_as_", "p.data.new().resize_as_", "p.data.new().resize_as_", "p.data.new", "p.data.new", "p.data.new"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__"], ["def", "__init__", "(", "self", ",", "\n", "params", ",", "\n", "lr", "=", "1e-3", ",", "\n", "betas", "=", "(", "0.9", ",", "0.999", ")", ",", "\n", "eps", "=", "1e-3", ",", "\n", "weight_decay", "=", "0", ",", "\n", "amsgrad", "=", "False", ")", ":", "\n", "        ", "defaults", "=", "defaultdict", "(", "lr", "=", "lr", ",", "betas", "=", "betas", ",", "eps", "=", "eps", ",", "\n", "weight_decay", "=", "weight_decay", ",", "amsgrad", "=", "amsgrad", ")", "\n", "super", "(", "SharedAdam", ",", "self", ")", ".", "__init__", "(", "params", ",", "defaults", ")", "\n", "\n", "for", "group", "in", "self", ".", "param_groups", ":", "\n", "            ", "for", "p", "in", "group", "[", "'params'", "]", ":", "\n", "                ", "state", "=", "self", ".", "state", "[", "p", "]", "\n", "state", "[", "'step'", "]", "=", "torch", ".", "zeros", "(", "1", ")", "\n", "state", "[", "'exp_avg'", "]", "=", "p", ".", "data", ".", "new", "(", ")", ".", "resize_as_", "(", "p", ".", "data", ")", ".", "zero_", "(", ")", "\n", "state", "[", "'exp_avg_sq'", "]", "=", "p", ".", "data", ".", "new", "(", ")", ".", "resize_as_", "(", "p", ".", "data", ")", ".", "zero_", "(", ")", "\n", "state", "[", "'max_exp_avg_sq'", "]", "=", "p", ".", "data", ".", "new", "(", "\n", ")", ".", "resize_as_", "(", "p", ".", "data", ")", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.shared_optim.SharedAdam.share_memory": [[114, 122], ["state[].share_memory_", "state[].share_memory_", "state[].share_memory_", "state[].share_memory_"], "methods", ["None"], ["", "", "", "def", "share_memory", "(", "self", ")", ":", "\n", "        ", "for", "group", "in", "self", ".", "param_groups", ":", "\n", "            ", "for", "p", "in", "group", "[", "'params'", "]", ":", "\n", "                ", "state", "=", "self", ".", "state", "[", "p", "]", "\n", "state", "[", "'step'", "]", ".", "share_memory_", "(", ")", "\n", "state", "[", "'exp_avg'", "]", ".", "share_memory_", "(", ")", "\n", "state", "[", "'exp_avg_sq'", "]", ".", "share_memory_", "(", ")", "\n", "state", "[", "'max_exp_avg_sq'", "]", ".", "share_memory_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.shared_optim.SharedAdam.step": [[123, 176], ["closure", "exp_avg.mul_().add_", "exp_avg_sq.mul_().addcmul_", "p.data.addcdiv_", "RuntimeError", "grad.add.add.add", "torch.max", "torch.max", "torch.max", "torch.max", "max_exp_avg_sq.sqrt().add_", "exp_avg_sq.sqrt().add_", "exp_avg.mul_", "exp_avg_sq.mul_", "math.sqrt", "max_exp_avg_sq.sqrt", "exp_avg_sq.sqrt"], "methods", ["None"], ["", "", "", "def", "step", "(", "self", ",", "closure", "=", "None", ")", ":", "\n", "        ", "\"\"\"Performs a single optimization step.\n        Arguments:\n            closure (callable, optional): A closure that reevaluates the model\n                and returns the loss.\n        \"\"\"", "\n", "loss", "=", "None", "\n", "if", "closure", "is", "not", "None", ":", "\n", "            ", "loss", "=", "closure", "(", ")", "\n", "\n", "", "for", "group", "in", "self", ".", "param_groups", ":", "\n", "            ", "for", "p", "in", "group", "[", "'params'", "]", ":", "\n", "                ", "if", "p", ".", "grad", "is", "None", ":", "\n", "                    ", "continue", "\n", "", "grad", "=", "p", ".", "grad", ".", "data", "\n", "if", "grad", ".", "is_sparse", ":", "\n", "                    ", "raise", "RuntimeError", "(", "\n", "'Adam does not support sparse gradients, please consider SparseAdam instead'", ")", "\n", "", "amsgrad", "=", "group", "[", "'amsgrad'", "]", "\n", "\n", "state", "=", "self", ".", "state", "[", "p", "]", "\n", "\n", "exp_avg", ",", "exp_avg_sq", "=", "state", "[", "'exp_avg'", "]", ",", "state", "[", "'exp_avg_sq'", "]", "\n", "if", "amsgrad", ":", "\n", "                    ", "max_exp_avg_sq", "=", "state", "[", "'max_exp_avg_sq'", "]", "\n", "", "beta1", ",", "beta2", "=", "group", "[", "'betas'", "]", "\n", "\n", "state", "[", "'step'", "]", "+=", "1", "\n", "\n", "if", "group", "[", "'weight_decay'", "]", "!=", "0", ":", "\n", "                    ", "grad", "=", "grad", ".", "add", "(", "group", "[", "'weight_decay'", "]", ",", "p", ".", "data", ")", "\n", "\n", "# Decay the first and second moment running average coefficient", "\n", "", "exp_avg", ".", "mul_", "(", "beta1", ")", ".", "add_", "(", "1", "-", "beta1", ",", "grad", ")", "\n", "exp_avg_sq", ".", "mul_", "(", "beta2", ")", ".", "addcmul_", "(", "1", "-", "beta2", ",", "grad", ",", "grad", ")", "\n", "\n", "if", "amsgrad", ":", "\n", "# Maintains the maximum of all 2nd moment running avg. till", "\n", "# now", "\n", "                    ", "torch", ".", "max", "(", "max_exp_avg_sq", ",", "exp_avg_sq", ",", "out", "=", "max_exp_avg_sq", ")", "\n", "# Use the max. for normalizing running avg. of gradient", "\n", "denom", "=", "max_exp_avg_sq", ".", "sqrt", "(", ")", ".", "add_", "(", "group", "[", "'eps'", "]", ")", "\n", "", "else", ":", "\n", "                    ", "denom", "=", "exp_avg_sq", ".", "sqrt", "(", ")", ".", "add_", "(", "group", "[", "'eps'", "]", ")", "\n", "\n", "", "bias_correction1", "=", "1", "-", "beta1", "**", "state", "[", "'step'", "]", "[", "0", "]", "\n", "bias_correction2", "=", "1", "-", "beta2", "**", "state", "[", "'step'", "]", "[", "0", "]", "\n", "step_size", "=", "group", "[", "'lr'", "]", "*", "math", ".", "sqrt", "(", "bias_correction2", ")", "/", "bias_correction1", "\n", "\n", "p", ".", "data", ".", "addcdiv_", "(", "-", "step_size", ",", "exp_avg", ",", "denom", ")", "\n", "\n", "", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.transfer_util.dist_exp": [[22, 27], ["numpy.exp", "new_im.astype"], "function", ["None"], ["def", "dist_exp", "(", "im", ")", ":", "\n", "    ", "e_im", "=", "np", ".", "exp", "(", "-", "im", "/", "6.", ")", "\n", "e_im", "=", "1.0", "-", "e_im", "\n", "new_im", "=", "e_im", "*", "255.0", "\n", "return", "new_im", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.transfer_util.frame2attention": [[28, 67], ["cv2.resize", "cv2.resize", "cv2.threshold", "cv2.threshold", "cv2.getStructuringElement", "cv2.getStructuringElement", "cv2.dilate", "cv2.dilate", "cv2.distanceTransform", "cv2.distanceTransform", "transfer_util.dist_exp", "transfer_util.dist_exp", "numpy.stack", "skimage.color.rgb2gray", "numpy.absolute().astype", "np.transpose.astype", "numpy.transpose", "numpy.absolute"], "function", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.transfer_util.dist_exp", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.transfer_util.dist_exp"], ["", "def", "frame2attention", "(", "frame", ",", "config", ",", "environment", ")", ":", "\n", "#print(frame.shape)", "\n", "#frame = np.transpose(frame,[1,2,0])", "\n", "    ", "frame", "=", "frame", "[", "config", "[", "\"crop1\"", "]", ":", "config", "[", "\"crop2\"", "]", "+", "160", ",", ":", "160", "]", "\n", "old_frame", "=", "frame", "\n", "orig_ata", "=", "frame", "\n", "dilation", "=", "frame", "\n", "\n", "#print(frame.shape)", "\n", "frame", "=", "cv2", ".", "resize", "(", "frame", ",", "(", "256", ",", "256", ")", ")", "\n", "#cv2.imwrite('frames/original.jpg', frame)", "\n", "frame", "=", "rgb2gray", "(", "frame", ")", "*", "255.", "\n", "orig_ata", "=", "frame", "\n", "\n", "if", "'Pong'", "in", "environment", ":", "\n", "        ", "median_im", "=", "87.", "\n", "frame", "=", "np", ".", "absolute", "(", "(", "frame", "-", "median_im", ")", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "", "else", ":", "\n", "        ", "frame", "=", "frame", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n", "", "_", ",", "filtered_bin_image", "=", "cv2", ".", "threshold", "(", "frame", ",", "20", ",", "255", ",", "cv2", ".", "THRESH_BINARY", ")", "\n", "kernel", "=", "cv2", ".", "getStructuringElement", "(", "cv2", ".", "MORPH_ELLIPSE", ",", "(", "5", ",", "5", ")", ")", "\n", "dilation", "=", "cv2", ".", "dilate", "(", "filtered_bin_image", ",", "kernel", ",", "iterations", "=", "1", ")", "\n", "\n", "inv_im", "=", "255", "-", "dilation", "\n", "inv_im_dist", "=", "cv2", ".", "distanceTransform", "(", "inv_im", ",", "cv2", ".", "DIST_L2", ",", "3", ")", "\n", "exp_inv_im_dist", "=", "dist_exp", "(", "inv_im_dist", ")", "\n", "exp_im_dist", "=", "255", "-", "exp_inv_im_dist", "\n", "\n", "exp_inv_im_dist", "=", "dist_exp", "(", "inv_im_dist", "/", "2", ")", "\n", "exp_im_dist_1", "=", "255", "-", "exp_inv_im_dist", "\n", "\n", "frame", "=", "np", ".", "stack", "(", "(", "dilation", ",", "exp_im_dist_1", ",", "exp_im_dist", ")", ",", "axis", "=", "-", "1", ")", "\n", "\n", "if", "'Pong'", "in", "environment", ":", "\n", "        ", "frame", "=", "np", ".", "transpose", "(", "frame", ",", "[", "1", ",", "0", ",", "2", "]", ")", "\n", "\n", "#cv2.imwrite('frames/blurred.jpg', frame)", "\n", "", "return", "frame", ",", "orig_ata", ",", "old_frame", ",", "dilation", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.transfer_util.create_xy_image": [[68, 75], ["list", "numpy.transpose", "torch.from_numpy().clone", "xy.unsqueeze().expand.unsqueeze().expand", "itertools.product", "float", "numpy.float32", "xy.unsqueeze().expand.size", "xy.unsqueeze().expand.size", "xy.unsqueeze().expand.size", "range", "range", "numpy.reshape", "torch.from_numpy", "xy.unsqueeze().expand.unsqueeze", "numpy.asarray"], "function", ["None"], ["", "def", "create_xy_image", "(", "width", "=", "256", ")", ":", "\n", "    ", "coordinates", "=", "list", "(", "itertools", ".", "product", "(", "range", "(", "width", ")", ",", "range", "(", "width", ")", ")", ")", "\n", "arr", "=", "(", "np", ".", "reshape", "(", "np", ".", "asarray", "(", "coordinates", ")", ",", "newshape", "=", "[", "width", ",", "width", ",", "2", "]", ")", "-", "width", "/", "2", ")", "/", "float", "(", "(", "width", "/", "2", ")", ")", "\n", "new_map", "=", "np", ".", "transpose", "(", "np", ".", "float32", "(", "arr", ")", ",", "[", "2", ",", "0", ",", "1", "]", ")", "\n", "xy", "=", "torch", ".", "from_numpy", "(", "new_map", ")", ".", "clone", "(", ")", "\n", "xy", "=", "xy", ".", "unsqueeze", "(", "0", ")", ".", "expand", "(", "1", ",", "xy", ".", "size", "(", "0", ")", ",", "xy", ".", "size", "(", "1", ")", ",", "xy", ".", "size", "(", "2", ")", ")", "\n", "return", "xy", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.transfer_util.attention_process_frame": [[76, 120], ["cv2.getRotationMatrix2D", "cv2.getRotationMatrix2D", "cv2.warpAffine", "cv2.warpAffine", "np.stack.transpose", "torch.from_numpy().float().clone", "torch.cat.contiguous", "torch.cat.resize_", "transfer_util.create_xy_image", "torch.cat", "torch.autograd.Variable", "final_data_in.contiguous.contiguous", "gan_trainer.gen.forward_b2a", "output_data[].data.cpu().numpy", "numpy.transpose", "numpy.uint8", "torch.cat.size", "torch.cat.size", "torch.cat.size", "numpy.stack", "torch.from_numpy().float", "output_data[].data.cpu", "torch.from_numpy"], "function", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.transfer_util.create_xy_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOResGen2.forward_b2a"], ["", "def", "attention_process_frame", "(", "frame", ",", "gan_trainer", ",", "gan_config", ")", ":", "\n", "    ", "blurr", "=", "True", "\n", "input", "=", "frame", "\n", "rotate_A", "=", "gan_config", ".", "datasets", "[", "'train_a'", "]", "[", "'rotation'", "]", "\n", "rotate_B", "=", "gan_config", ".", "datasets", "[", "'train_b'", "]", "[", "'rotation'", "]", "\n", "\n", "cols", "=", "frame", ".", "shape", "[", "1", "]", "\n", "rows", "=", "frame", ".", "shape", "[", "0", "]", "\n", "M", "=", "cv2", ".", "getRotationMatrix2D", "(", "(", "cols", "/", "2", ",", "rows", "/", "2", ")", ",", "rotate_A", ",", "1", ")", "\n", "frame", "=", "cv2", ".", "warpAffine", "(", "frame", ",", "M", ",", "(", "cols", ",", "rows", ")", ")", "\n", "frame", "=", "frame", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n", "if", "not", "blurr", ":", "\n", "        ", "frame", "=", "frame", "[", "-", "1", ":", ",", ":", ",", ":", "]", "\n", "", "final_data", "=", "torch", ".", "from_numpy", "(", "(", "frame", "/", "255.0", "-", "0.5", ")", "*", "2", ")", ".", "float", "(", ")", ".", "clone", "(", ")", "\n", "final_data", "=", "final_data", ".", "contiguous", "(", ")", "\n", "final_data", "=", "final_data", ".", "resize_", "(", "1", ",", "final_data", ".", "size", "(", "0", ")", ",", "final_data", ".", "size", "(", "1", ")", ",", "final_data", ".", "size", "(", "2", ")", ")", "\n", "\n", "#Use xy flag", "\n", "xy", "=", "create_xy_image", "(", ")", "\n", "final_data", "=", "torch", ".", "cat", "(", "[", "final_data", ",", "xy", "]", ",", "1", ")", "\n", "final_data_in", "=", "Variable", "(", "final_data", ")", "\n", "#final_data_in = final_data_in.cuda()", "\n", "final_data_in", "=", "final_data_in", ".", "contiguous", "(", ")", "\n", "'''\n    For conversion from Breakout to Pong, use forward_a2b and for conversion from Pong to Breakout\n    use forward_b2a to get the outputs\n    '''", "\n", "output_data", "=", "gan_trainer", ".", "gen", ".", "forward_b2a", "(", "final_data_in", ")", "\n", "output_img", "=", "output_data", "[", "0", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "new_output_img", "=", "np", ".", "transpose", "(", "output_img", ",", "[", "2", ",", "3", ",", "1", ",", "0", "]", ")", "\n", "new_output_img", "=", "new_output_img", "[", ":", ",", ":", ",", ":", ",", "0", "]", "\n", "out_img", "=", "np", ".", "uint8", "(", "255", "*", "(", "new_output_img", "/", "2", "+", "0.5", ")", ")", "\n", "frame", "=", "out_img", "\n", "cols", "=", "frame", ".", "shape", "[", "1", "]", "\n", "rows", "=", "frame", ".", "shape", "[", "0", "]", "\n", "#Removing the rotation for conversion from Pong to Breakout as the output is already rotated", "\n", "#M = cv2.getRotationMatrix2D((cols / 2, rows / 2), 360 - rotate_B, 1)", "\n", "#frame = cv2.warpAffine(frame, M, (cols, rows))", "\n", "\n", "if", "frame", ".", "shape", "[", "-", "1", "]", "!=", "3", ":", "\n", "        ", "frame", "=", "np", ".", "stack", "(", "(", "frame", ",", "frame", ",", "frame", ")", ",", "axis", "=", "-", "1", ")", "\n", "#cv2.imwrite('frame/convert.jpg', frame)", "\n", "", "return", "frame", "\n", "", ""]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.train.train": [[15, 160], ["setproctitle.setproctitle", "torch.manual_seed", "torch.manual_seed", "environment.atari_env.seed", "player_util.Agent", "model.A3Clstm", "player_util.Agent.env.reset", "torch.from_numpy().float", "torch.from_numpy().float", "player_util.Agent.model.train", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "print", "print", "COCOGANGAMESDUALTrainer", "COCOGANGAMESDUALTrainer.gen.load_state_dict", "COCOGANGAMESDUALTrainer.gen.eval", "environment.atari_env", "environment.atari_env", "utils.get_translator_from_source", "range", "torch.zeros", "torch.zeros", "player_util.Agent.values.append", "torch.zeros", "torch.zeros", "torch.autograd.Variable", "reversed", "player_util.Agent.model.zero_grad", "torch.nn.utils.clip_grad_norm", "torch.nn.utils.clip_grad_norm", "utils.ensure_shared_grads", "optim.Adam.step", "player_util.Agent.clear_actions", "torch.load", "torch.load", "environment.atari_env", "torch.RMSprop", "torch.Adam", "torch.from_numpy", "torch.from_numpy", "torch.cuda.device", "torch.cuda.device", "player_util.Agent.state.cuda", "player_util.Agent.model.cuda", "player_util.Agent.model.load_state_dict", "torch.autograd.Variable", "torch.autograd.Variable", "player_util.Agent.action_train", "player_util.Agent.env.reset", "torch.from_numpy().float", "torch.from_numpy().float", "player_util.Agent.model", "torch.autograd.Variable", "range", "player_util.Agent.model.parameters", "len", "shared_model.parameters", "shared_model.parameters", "torch.cuda.device", "torch.cuda.device", "player_util.Agent.model.load_state_dict", "shared_model.state_dict", "torch.autograd.Variable", "torch.autograd.Variable", "torch.cuda.device", "torch.cuda.device", "R.cuda.cuda", "torch.cuda.device", "torch.cuda.device", "gae.cuda.cuda", "len", "shared_model.state_dict", "torch.cuda.device", "torch.cuda.device", "torch.autograd.Variable", "torch.autograd.Variable", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.from_numpy", "torch.from_numpy", "torch.cuda.device", "torch.cuda.device", "player_util.Agent.state.cuda", "torch.autograd.Variable", "advantage.pow", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "player_util.Agent.state.unsqueeze", "torch.autograd.Variable", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "function", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.reset", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.train.train", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.atari_env", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.atari_env", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.utils.get_translator_from_source", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.utils.ensure_shared_grads", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.step", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.player_util.Agent.clear_actions", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.atari_env", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.player_util.Agent.action_train", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.reset", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda"], ["def", "train", "(", "rank", ",", "args", ",", "shared_model", ",", "optimizer", ",", "env_conf", ",", "model_env_conf", "=", "None", ",", "convertor", "=", "None", ",", "convertor_config", "=", "None", ",", "mapFrames", "=", "False", ")", ":", "\n", "    ", "ptitle", "(", "'Training Agent: {}'", ".", "format", "(", "rank", ")", ")", "\n", "gpu_id", "=", "args", ".", "gpu_ids", "[", "rank", "%", "len", "(", "args", ".", "gpu_ids", ")", "]", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", "+", "rank", ")", "\n", "if", "gpu_id", ">=", "0", ":", "\n", "        ", "torch", ".", "cuda", ".", "manual_seed", "(", "args", ".", "seed", "+", "rank", ")", "\n", "\n", "# TODO(Akshita): Change this to make the environments as required.", "\n", "", "num_of_actions", "=", "4", "\n", "\n", "if", "args", ".", "use_convertor", "and", "mapFrames", ":", "\n", "        ", "print", "(", "\"here\"", ")", "\n", "#convertor_config = NetConfig('conversion_models/attention_breakout2pong_dual.yaml')", "\n", "#hyperparameters = {}", "\n", "#for key in convertor_config.hyperparameters:", "\n", "#    exec ('hyperparameters[\\'%s\\'] = convertor_config.hyperparameters[\\'%s\\']' % (key, key))", "\n", "#print('Here')", "\n", "print", "(", "convertor_config", ".", "hyperparameters", ")", "\n", "trainer", "=", "[", "]", "\n", "trainer", "=", "COCOGANGAMESDUALTrainer", "(", "convertor_config", ".", "hyperparameters", ")", "\n", "#exec (\"trainer=%s(convertor_config.hyperparameters)\" % convertor_config.hyperparameters['trainer'])", "\n", "trainer", ".", "gen", ".", "load_state_dict", "(", "torch", ".", "load", "(", "'/home/amittel/Desktop/CMU/DRL/rl_a3c_pytorch/conversion_models/attentionbreakout2pong_v0_gen_00003500.pkl'", ")", ")", "\n", "trainer", ".", "gen", ".", "eval", "(", ")", "\n", "#trainer.cuda(args.gpu)", "\n", "distance_gan", "=", "trainer", "\n", "", "else", ":", "\n", "        ", "convertor_config", "=", "None", "\n", "distance_gan", "=", "None", "\n", "", "convertor", "=", "distance_gan", "\n", "\n", "if", "mapFrames", ":", "\n", "        ", "env", "=", "atari_env", "(", "\"{}\"", ".", "format", "(", "args", ".", "model_env", ")", ",", "model_env_conf", ",", "args", ",", "convertor", ",", "convertor_config", ",", "mapFrames", ")", "\n", "# env_id = args.model_env", "\n", "num_of_actions", "=", "atari_env", "(", "\"{}\"", ".", "format", "(", "args", ".", "env", ")", ",", "env_conf", ",", "args", ")", ".", "action_space", "\n", "", "else", ":", "\n", "        ", "env", "=", "atari_env", "(", "\"{}\"", ".", "format", "(", "args", ".", "env", ")", ",", "env_conf", ",", "args", ")", "\n", "# env_id = args.env", "\n", "num_of_actions", "=", "env", ".", "action_space", "\n", "\n", "# print(\"num_of_actions\", num_of_actions)", "\n", "\n", "", "if", "optimizer", "is", "None", ":", "\n", "        ", "if", "args", ".", "optimizer", "==", "'RMSprop'", ":", "\n", "            ", "optimizer", "=", "optim", ".", "RMSprop", "(", "shared_model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ")", "\n", "", "if", "args", ".", "optimizer", "==", "'Adam'", ":", "\n", "            ", "optimizer", "=", "optim", ".", "Adam", "(", "\n", "shared_model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ",", "amsgrad", "=", "args", ".", "amsgrad", ")", "\n", "", "", "env", ".", "seed", "(", "args", ".", "seed", "+", "rank", ")", "\n", "\n", "\n", "\n", "player", "=", "Agent", "(", "None", ",", "env", ",", "args", ",", "None", ")", "\n", "\n", "# (Akshita): Get the action translator.", "\n", "if", "mapFrames", ":", "\n", "        ", "player", ".", "translator", "=", "get_translator_from_source", "(", "args", ".", "env", ",", "args", ".", "model_env", ")", "\n", "player", ".", "translate_test", "=", "True", "\n", "\n", "", "player", ".", "gpu_id", "=", "gpu_id", "\n", "player", ".", "model", "=", "A3Clstm", "(", "\n", "player", ".", "env", ".", "observation_space", ".", "shape", "[", "0", "]", ",", "num_of_actions", ")", "\n", "\n", "player", ".", "state", "=", "player", ".", "env", ".", "reset", "(", ")", "\n", "player", ".", "state", "=", "torch", ".", "from_numpy", "(", "player", ".", "state", ")", ".", "float", "(", ")", "\n", "if", "gpu_id", ">=", "0", ":", "\n", "        ", "with", "torch", ".", "cuda", ".", "device", "(", "gpu_id", ")", ":", "\n", "            ", "player", ".", "state", "=", "player", ".", "state", ".", "cuda", "(", ")", "\n", "player", ".", "model", "=", "player", ".", "model", ".", "cuda", "(", ")", "\n", "", "", "player", ".", "model", ".", "train", "(", ")", "\n", "player", ".", "eps_len", "+=", "2", "\n", "while", "True", ":", "\n", "        ", "if", "gpu_id", ">=", "0", ":", "\n", "            ", "with", "torch", ".", "cuda", ".", "device", "(", "gpu_id", ")", ":", "\n", "                ", "player", ".", "model", ".", "load_state_dict", "(", "shared_model", ".", "state_dict", "(", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "player", ".", "model", ".", "load_state_dict", "(", "shared_model", ".", "state_dict", "(", ")", ")", "\n", "\n", "", "if", "player", ".", "done", ":", "\n", "            ", "if", "gpu_id", ">=", "0", ":", "\n", "                ", "with", "torch", ".", "cuda", ".", "device", "(", "gpu_id", ")", ":", "\n", "                    ", "player", ".", "cx", "=", "Variable", "(", "torch", ".", "zeros", "(", "1", ",", "512", ")", ".", "cuda", "(", ")", ")", "\n", "player", ".", "hx", "=", "Variable", "(", "torch", ".", "zeros", "(", "1", ",", "512", ")", ".", "cuda", "(", ")", ")", "\n", "", "", "else", ":", "\n", "                ", "player", ".", "cx", "=", "Variable", "(", "torch", ".", "zeros", "(", "1", ",", "512", ")", ")", "\n", "player", ".", "hx", "=", "Variable", "(", "torch", ".", "zeros", "(", "1", ",", "512", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "player", ".", "cx", "=", "Variable", "(", "player", ".", "cx", ".", "data", ")", "\n", "player", ".", "hx", "=", "Variable", "(", "player", ".", "hx", ".", "data", ")", "\n", "\n", "\n", "# print(\"num_steps\", args.num_steps)", "\n", "", "for", "step", "in", "range", "(", "args", ".", "num_steps", ")", ":", "\n", "            ", "player", ".", "action_train", "(", ")", "\n", "if", "player", ".", "done", ":", "\n", "                ", "break", "\n", "\n", "", "", "if", "player", ".", "done", ":", "\n", "            ", "if", "player", ".", "info", "[", "'ale.lives'", "]", "==", "0", "or", "player", ".", "max_length", ":", "\n", "                ", "player", ".", "eps_len", "=", "0", "\n", "", "state", "=", "player", ".", "env", ".", "reset", "(", ")", "\n", "player", ".", "eps_len", "+=", "2", "\n", "player", ".", "state", "=", "torch", ".", "from_numpy", "(", "state", ")", ".", "float", "(", ")", "\n", "if", "gpu_id", ">=", "0", ":", "\n", "                ", "with", "torch", ".", "cuda", ".", "device", "(", "gpu_id", ")", ":", "\n", "                    ", "player", ".", "state", "=", "player", ".", "state", ".", "cuda", "(", ")", "\n", "\n", "", "", "", "R", "=", "torch", ".", "zeros", "(", "1", ",", "1", ")", "\n", "if", "not", "player", ".", "done", ":", "\n", "            ", "value", ",", "_", ",", "_", "=", "player", ".", "model", "(", "\n", "(", "Variable", "(", "player", ".", "state", ".", "unsqueeze", "(", "0", ")", ")", ",", "(", "player", ".", "hx", ",", "player", ".", "cx", ")", ")", ")", "\n", "R", "=", "value", ".", "data", "\n", "\n", "", "if", "gpu_id", ">=", "0", ":", "\n", "            ", "with", "torch", ".", "cuda", ".", "device", "(", "gpu_id", ")", ":", "\n", "                ", "R", "=", "R", ".", "cuda", "(", ")", "\n", "\n", "", "", "player", ".", "values", ".", "append", "(", "Variable", "(", "R", ")", ")", "\n", "policy_loss", "=", "0", "\n", "value_loss", "=", "0", "\n", "gae", "=", "torch", ".", "zeros", "(", "1", ",", "1", ")", "\n", "if", "gpu_id", ">=", "0", ":", "\n", "            ", "with", "torch", ".", "cuda", ".", "device", "(", "gpu_id", ")", ":", "\n", "                ", "gae", "=", "gae", ".", "cuda", "(", ")", "\n", "", "", "R", "=", "Variable", "(", "R", ")", "\n", "for", "i", "in", "reversed", "(", "range", "(", "len", "(", "player", ".", "rewards", ")", ")", ")", ":", "\n", "            ", "R", "=", "args", ".", "gamma", "*", "R", "+", "player", ".", "rewards", "[", "i", "]", "\n", "advantage", "=", "R", "-", "player", ".", "values", "[", "i", "]", "\n", "value_loss", "=", "value_loss", "+", "0.5", "*", "advantage", ".", "pow", "(", "2", ")", "\n", "\n", "# Generalized Advantage Estimataion", "\n", "delta_t", "=", "player", ".", "rewards", "[", "i", "]", "+", "args", ".", "gamma", "*", "player", ".", "values", "[", "i", "+", "1", "]", ".", "data", "-", "player", ".", "values", "[", "i", "]", ".", "data", "\n", "\n", "gae", "=", "gae", "*", "args", ".", "gamma", "*", "args", ".", "tau", "+", "delta_t", "\n", "\n", "policy_loss", "=", "policy_loss", "-", "player", ".", "log_probs", "[", "i", "]", "*", "Variable", "(", "gae", ")", "-", "0.01", "*", "player", ".", "entropies", "[", "i", "]", "\n", "\n", "", "player", ".", "model", ".", "zero_grad", "(", ")", "\n", "(", "policy_loss", "+", "0.5", "*", "value_loss", ")", ".", "backward", "(", ")", "\n", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm", "(", "player", ".", "model", ".", "parameters", "(", ")", ",", "100.0", ")", "\n", "ensure_shared_grads", "(", "player", ".", "model", ",", "shared_model", ",", "gpu", "=", "gpu_id", ">=", "0", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "player", ".", "clear_actions", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.test.test": [[14, 100], ["setproctitle.setproctitle", "utils.setup_logger", "logging.getLogger", "vars", "vars.keys", "torch.manual_seed", "environment.atari_env", "time.time", "player_util.Agent", "model.A3Clstm", "player_util.Agent.env.reset", "torch.from_numpy().float", "log[].info", "torch.cuda.manual_seed", "player_util.Agent.action_test", "torch.from_numpy", "torch.cuda.device", "player_util.Agent.model.cuda", "player_util.Agent.state.cuda", "player_util.Agent.model.eval", "player_util.Agent.env.reset", "torch.from_numpy().float", "player_util.Agent.model.load_state_dict", "log[].info", "player_util.Agent.env.reset", "time.sleep", "torch.from_numpy().float", "torch.cuda.device", "player_util.Agent.model.load_state_dict", "shared_model.state_dict", "torch.from_numpy", "torch.cuda.device", "player_util.Agent.state.cuda", "shared_model.state_dict", "time.strftime", "player_util.Agent.model.state_dict", "torch.save", "torch.from_numpy", "torch.cuda.device", "player_util.Agent.state.cuda", "time.gmtime", "torch.cuda.device", "player_util.Agent.model.state_dict", "torch.save", "time.time"], "function", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.utils.setup_logger", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.atari_env", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.reset", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.player_util.Agent.action_test", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.reset", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.reset", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save"], ["def", "test", "(", "args", ",", "shared_model", ",", "env_conf", ",", "convertor", "=", "None", ",", "convertor_config", "=", "None", ",", "mapFrames", "=", "False", ")", ":", "\n", "    ", "ptitle", "(", "'Test Agent'", ")", "\n", "gpu_id", "=", "args", ".", "gpu_ids", "[", "-", "1", "]", "\n", "log", "=", "{", "}", "\n", "setup_logger", "(", "'{}_log'", ".", "format", "(", "args", ".", "env", ")", ",", "\n", "r'{0}{1}_log'", ".", "format", "(", "args", ".", "log_dir", ",", "args", ".", "env", ")", ")", "\n", "log", "[", "'{}_log'", ".", "format", "(", "args", ".", "env", ")", "]", "=", "logging", ".", "getLogger", "(", "\n", "'{}_log'", ".", "format", "(", "args", ".", "env", ")", ")", "\n", "d_args", "=", "vars", "(", "args", ")", "\n", "for", "k", "in", "d_args", ".", "keys", "(", ")", ":", "\n", "        ", "log", "[", "'{}_log'", ".", "format", "(", "args", ".", "env", ")", "]", ".", "info", "(", "'{0}: {1}'", ".", "format", "(", "k", ",", "d_args", "[", "k", "]", ")", ")", "\n", "\n", "", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "if", "gpu_id", ">=", "0", ":", "\n", "        ", "torch", ".", "cuda", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "", "env", "=", "atari_env", "(", "args", ".", "env", ",", "env_conf", ",", "args", ",", "convertor", ",", "convertor_config", ",", "mapFrames", ")", "\n", "reward_sum", "=", "0", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "num_tests", "=", "0", "\n", "reward_total_sum", "=", "0", "\n", "player", "=", "Agent", "(", "None", ",", "env", ",", "args", ",", "None", ")", "\n", "player", ".", "gpu_id", "=", "gpu_id", "\n", "player", ".", "model", "=", "A3Clstm", "(", "\n", "player", ".", "env", ".", "observation_space", ".", "shape", "[", "0", "]", ",", "player", ".", "env", ".", "action_space", ")", "\n", "\n", "player", ".", "state", "=", "player", ".", "env", ".", "reset", "(", ")", "\n", "#player.state, _, _, _ = frame2attention(player.state, blur_conf, str(env.spec))", "\n", "player", ".", "eps_len", "+=", "2", "\n", "player", ".", "state", "=", "torch", ".", "from_numpy", "(", "player", ".", "state", ")", ".", "float", "(", ")", "\n", "if", "gpu_id", ">=", "0", ":", "\n", "        ", "with", "torch", ".", "cuda", ".", "device", "(", "gpu_id", ")", ":", "\n", "            ", "player", ".", "model", "=", "player", ".", "model", ".", "cuda", "(", ")", "\n", "player", ".", "state", "=", "player", ".", "state", ".", "cuda", "(", ")", "\n", "", "", "flag", "=", "True", "\n", "max_score", "=", "0", "\n", "while", "True", ":", "\n", "        ", "if", "flag", ":", "\n", "            ", "if", "gpu_id", ">=", "0", ":", "\n", "                ", "with", "torch", ".", "cuda", ".", "device", "(", "gpu_id", ")", ":", "\n", "                    ", "player", ".", "model", ".", "load_state_dict", "(", "shared_model", ".", "state_dict", "(", ")", ")", "\n", "", "", "else", ":", "\n", "                ", "player", ".", "model", ".", "load_state_dict", "(", "shared_model", ".", "state_dict", "(", ")", ")", "\n", "", "player", ".", "model", ".", "eval", "(", ")", "\n", "flag", "=", "False", "\n", "\n", "", "player", ".", "action_test", "(", ")", "\n", "reward_sum", "+=", "player", ".", "reward", "\n", "\n", "if", "player", ".", "done", "and", "player", ".", "info", "[", "'ale.lives'", "]", ">", "0", "and", "not", "player", ".", "max_length", ":", "\n", "            ", "state", "=", "player", ".", "env", ".", "reset", "(", ")", "\n", "player", ".", "eps_len", "+=", "2", "\n", "player", ".", "state", "=", "torch", ".", "from_numpy", "(", "state", ")", ".", "float", "(", ")", "\n", "if", "gpu_id", ">=", "0", ":", "\n", "                ", "with", "torch", ".", "cuda", ".", "device", "(", "gpu_id", ")", ":", "\n", "                    ", "player", ".", "state", "=", "player", ".", "state", ".", "cuda", "(", ")", "\n", "", "", "", "elif", "player", ".", "done", "or", "player", ".", "max_length", ":", "\n", "            ", "flag", "=", "True", "\n", "num_tests", "+=", "1", "\n", "reward_total_sum", "+=", "reward_sum", "\n", "reward_mean", "=", "reward_total_sum", "/", "num_tests", "\n", "log", "[", "'{}_log'", ".", "format", "(", "args", ".", "env", ")", "]", ".", "info", "(", "\n", "\"Time {0}, episode reward {1}, episode length {2}, reward mean {3:.4f}\"", ".", "\n", "format", "(", "\n", "time", ".", "strftime", "(", "\"%Hh %Mm %Ss\"", ",", "\n", "time", ".", "gmtime", "(", "time", ".", "time", "(", ")", "-", "start_time", ")", ")", ",", "\n", "reward_sum", ",", "player", ".", "eps_len", ",", "reward_mean", ")", ")", "\n", "\n", "if", "args", ".", "save_max", "and", "reward_sum", ">=", "max_score", ":", "\n", "                ", "max_score", "=", "reward_sum", "\n", "if", "gpu_id", ">=", "0", ":", "\n", "                    ", "with", "torch", ".", "cuda", ".", "device", "(", "gpu_id", ")", ":", "\n", "                        ", "state_to_save", "=", "player", ".", "model", ".", "state_dict", "(", ")", "\n", "torch", ".", "save", "(", "state_to_save", ",", "'{0}{1}.dat'", ".", "format", "(", "args", ".", "save_model_dir", ",", "args", ".", "env", ")", ")", "\n", "", "", "else", ":", "\n", "                    ", "state_to_save", "=", "player", ".", "model", ".", "state_dict", "(", ")", "\n", "torch", ".", "save", "(", "state_to_save", ",", "'{0}{1}.dat'", ".", "format", "(", "args", ".", "save_model_dir", ",", "args", ".", "env", ")", ")", "\n", "\n", "", "", "reward_sum", "=", "0", "\n", "player", ".", "eps_len", "=", "0", "\n", "state", "=", "player", ".", "env", ".", "reset", "(", ")", "\n", "player", ".", "eps_len", "+=", "2", "\n", "time", ".", "sleep", "(", "10", ")", "\n", "player", ".", "state", "=", "torch", ".", "from_numpy", "(", "state", ")", ".", "float", "(", ")", "\n", "if", "gpu_id", ">=", "0", ":", "\n", "                ", "with", "torch", ".", "cuda", ".", "device", "(", "gpu_id", ")", ":", "\n", "                    ", "player", ".", "state", "=", "player", ".", "state", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.model.A3Clstm.__init__": [[9, 42], ["super().__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.LSTMCell", "torch.LSTMCell", "torch.LSTMCell", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "model.A3Clstm.apply", "torch.init.calculate_gain", "torch.init.calculate_gain", "torch.init.calculate_gain", "model.A3Clstm.conv1.weight.data.mul_", "model.A3Clstm.conv2.weight.data.mul_", "model.A3Clstm.conv3.weight.data.mul_", "model.A3Clstm.conv4.weight.data.mul_", "utils.norm_col_init", "model.A3Clstm.actor_linear.bias.data.fill_", "utils.norm_col_init", "model.A3Clstm.critic_linear.bias.data.fill_", "model.A3Clstm.lstm.bias_ih.data.fill_", "model.A3Clstm.lstm.bias_hh.data.fill_", "model.A3Clstm.train"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.utils.norm_col_init", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.utils.norm_col_init", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.train.train"], ["    ", "def", "__init__", "(", "self", ",", "num_inputs", ",", "action_space", ")", ":", "\n", "        ", "super", "(", "A3Clstm", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "num_inputs", ",", "32", ",", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", "\n", "self", ".", "maxp1", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "2", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "32", ",", "32", ",", "5", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "maxp2", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "2", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "32", ",", "64", ",", "4", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "maxp3", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "2", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "maxp4", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "2", ")", "\n", "\n", "self", ".", "lstm", "=", "nn", ".", "LSTMCell", "(", "1024", ",", "512", ")", "\n", "num_outputs", "=", "action_space", ".", "n", "\n", "self", ".", "critic_linear", "=", "nn", ".", "Linear", "(", "512", ",", "1", ")", "\n", "self", ".", "actor_linear", "=", "nn", ".", "Linear", "(", "512", ",", "num_outputs", ")", "\n", "\n", "self", ".", "apply", "(", "weights_init", ")", "\n", "relu_gain", "=", "nn", ".", "init", ".", "calculate_gain", "(", "'relu'", ")", "\n", "self", ".", "conv1", ".", "weight", ".", "data", ".", "mul_", "(", "relu_gain", ")", "\n", "self", ".", "conv2", ".", "weight", ".", "data", ".", "mul_", "(", "relu_gain", ")", "\n", "self", ".", "conv3", ".", "weight", ".", "data", ".", "mul_", "(", "relu_gain", ")", "\n", "self", ".", "conv4", ".", "weight", ".", "data", ".", "mul_", "(", "relu_gain", ")", "\n", "self", ".", "actor_linear", ".", "weight", ".", "data", "=", "norm_col_init", "(", "\n", "self", ".", "actor_linear", ".", "weight", ".", "data", ",", "0.01", ")", "\n", "self", ".", "actor_linear", ".", "bias", ".", "data", ".", "fill_", "(", "0", ")", "\n", "self", ".", "critic_linear", ".", "weight", ".", "data", "=", "norm_col_init", "(", "\n", "self", ".", "critic_linear", ".", "weight", ".", "data", ",", "1.0", ")", "\n", "self", ".", "critic_linear", ".", "bias", ".", "data", ".", "fill_", "(", "0", ")", "\n", "\n", "self", ".", "lstm", ".", "bias_ih", ".", "data", ".", "fill_", "(", "0", ")", "\n", "self", ".", "lstm", ".", "bias_hh", ".", "data", ".", "fill_", "(", "0", ")", "\n", "\n", "self", ".", "train", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.model.A3Clstm.forward": [[43, 57], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "x.view.view.view", "model.A3Clstm.lstm", "model.A3Clstm.maxp1", "model.A3Clstm.maxp2", "model.A3Clstm.maxp3", "model.A3Clstm.maxp4", "x.view.view.size", "model.A3Clstm.critic_linear", "model.A3Clstm.actor_linear", "model.A3Clstm.conv1", "model.A3Clstm.conv2", "model.A3Clstm.conv3", "model.A3Clstm.conv4"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "inputs", ",", "(", "hx", ",", "cx", ")", "=", "inputs", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "maxp1", "(", "self", ".", "conv1", "(", "inputs", ")", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "maxp2", "(", "self", ".", "conv2", "(", "x", ")", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "maxp3", "(", "self", ".", "conv3", "(", "x", ")", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "maxp4", "(", "self", ".", "conv4", "(", "x", ")", ")", ")", "\n", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "hx", ",", "cx", "=", "self", ".", "lstm", "(", "x", ",", "(", "hx", ",", "cx", ")", ")", "\n", "\n", "x", "=", "hx", "\n", "\n", "return", "self", ".", "critic_linear", "(", "x", ")", ",", "self", ".", "actor_linear", "(", "x", ")", ",", "(", "hx", ",", "cx", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.visualize.make_dot": [[6, 56], ["dict", "graphviz.Digraph", "set", "visualize.make_dot.add_nodes"], "function", ["None"], ["def", "make_dot", "(", "var", ",", "params", "=", "None", ")", ":", "\n", "    ", "\"\"\" Produces Graphviz representation of PyTorch autograd graph\n\n    Blue nodes are the Variables that require grad, orange are Tensors\n    saved for backward in torch.autograd.Function\n\n    Args:\n        var: output Variable\n        params: dict of (name, Variable) to add names to node that\n            require grad (TODO: make optional)\n    \"\"\"", "\n", "if", "params", "is", "not", "None", ":", "\n", "        ", "assert", "isinstance", "(", "params", ".", "values", "(", ")", "[", "0", "]", ",", "Variable", ")", "\n", "param_map", "=", "{", "id", "(", "v", ")", ":", "k", "for", "k", ",", "v", "in", "params", ".", "items", "(", ")", "}", "\n", "\n", "", "node_attr", "=", "dict", "(", "style", "=", "'filled'", ",", "\n", "shape", "=", "'box'", ",", "\n", "align", "=", "'left'", ",", "\n", "fontsize", "=", "'12'", ",", "\n", "ranksep", "=", "'0.1'", ",", "\n", "height", "=", "'0.2'", ")", "\n", "dot", "=", "Digraph", "(", "node_attr", "=", "node_attr", ",", "graph_attr", "=", "dict", "(", "size", "=", "\"12,12\"", ")", ")", "\n", "seen", "=", "set", "(", ")", "\n", "\n", "def", "size_to_str", "(", "size", ")", ":", "\n", "        ", "return", "'('", "+", "(", "', '", ")", ".", "join", "(", "[", "'%d'", "%", "v", "for", "v", "in", "size", "]", ")", "+", "')'", "\n", "\n", "", "def", "add_nodes", "(", "var", ")", ":", "\n", "        ", "if", "var", "not", "in", "seen", ":", "\n", "            ", "if", "torch", ".", "is_tensor", "(", "var", ")", ":", "\n", "                ", "dot", ".", "node", "(", "str", "(", "id", "(", "var", ")", ")", ",", "size_to_str", "(", "var", ".", "size", "(", ")", ")", ",", "fillcolor", "=", "'orange'", ")", "\n", "", "elif", "hasattr", "(", "var", ",", "'variable'", ")", ":", "\n", "                ", "u", "=", "var", ".", "variable", "\n", "name", "=", "param_map", "[", "id", "(", "u", ")", "]", "if", "params", "is", "not", "None", "else", "''", "\n", "node_name", "=", "'%s\\n %s'", "%", "(", "name", ",", "size_to_str", "(", "u", ".", "size", "(", ")", ")", ")", "\n", "dot", ".", "node", "(", "str", "(", "id", "(", "var", ")", ")", ",", "node_name", ",", "fillcolor", "=", "'lightblue'", ")", "\n", "", "else", ":", "\n", "                ", "dot", ".", "node", "(", "str", "(", "id", "(", "var", ")", ")", ",", "str", "(", "type", "(", "var", ")", ".", "__name__", ")", ")", "\n", "", "seen", ".", "add", "(", "var", ")", "\n", "if", "hasattr", "(", "var", ",", "'next_functions'", ")", ":", "\n", "                ", "for", "u", "in", "var", ".", "next_functions", ":", "\n", "                    ", "if", "u", "[", "0", "]", "is", "not", "None", ":", "\n", "                        ", "dot", ".", "edge", "(", "str", "(", "id", "(", "u", "[", "0", "]", ")", ")", ",", "str", "(", "id", "(", "var", ")", ")", ")", "\n", "add_nodes", "(", "u", "[", "0", "]", ")", "\n", "", "", "", "if", "hasattr", "(", "var", ",", "'saved_tensors'", ")", ":", "\n", "                ", "for", "t", "in", "var", ".", "saved_tensors", ":", "\n", "                    ", "dot", ".", "edge", "(", "str", "(", "id", "(", "t", ")", ")", ",", "str", "(", "id", "(", "var", ")", ")", ")", "\n", "add_nodes", "(", "t", ")", "\n", "", "", "", "", "add_nodes", "(", "var", ".", "grad_fn", ")", "\n", "return", "dot", "\n", "", ""]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.player_util.Agent.__init__": [[9, 29], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "model", ",", "env", ",", "args", ",", "state", ")", ":", "\n", "        ", "self", ".", "model", "=", "model", "\n", "self", ".", "env", "=", "env", "\n", "self", ".", "current_life", "=", "0", "\n", "self", ".", "state", "=", "state", "\n", "self", ".", "hx", "=", "None", "\n", "self", ".", "cx", "=", "None", "\n", "self", ".", "eps_len", "=", "0", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "values", "=", "[", "]", "\n", "self", ".", "log_probs", "=", "[", "]", "\n", "self", ".", "rewards", "=", "[", "]", "\n", "self", ".", "entropies", "=", "[", "]", "\n", "self", ".", "done", "=", "True", "\n", "self", ".", "info", "=", "None", "\n", "self", ".", "reward", "=", "0", "\n", "self", ".", "gpu_id", "=", "-", "1", "\n", "self", ".", "max_length", "=", "False", "\n", "self", ".", "translator", "=", "None", "\n", "self", ".", "translate_test", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.player_util.Agent.action_train": [[30, 67], ["player_util.Agent.model", "torch.softmax", "torch.softmax", "torch.log_softmax", "torch.log_softmax", "player_util.Agent.entropies.append", "log_prob.gather.gather.gather", "player_util.Agent.env.step", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "max", "player_util.Agent.values.append", "player_util.Agent.log_probs.append", "player_util.Agent.rewards.append", "torch.softmax.multinomial", "torch.autograd.Variable", "torch.autograd.Variable", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy.cpu().numpy", "torch.from_numpy.cpu().numpy", "min", "torch.autograd.Variable", "torch.autograd.Variable", "numpy.asarray", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.cuda.device", "torch.cuda.device", "torch.cuda.device", "torch.cuda.device", "player_util.Agent.state.cuda", "player_util.Agent.state.unsqueeze", "torch.from_numpy.cpu", "torch.from_numpy.cpu"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.step", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda"], ["", "def", "action_train", "(", "self", ")", ":", "\n", "        ", "value", ",", "logit", ",", "(", "self", ".", "hx", ",", "self", ".", "cx", ")", "=", "self", ".", "model", "(", "\n", "(", "Variable", "(", "self", ".", "state", ".", "unsqueeze", "(", "0", ")", ")", ",", "(", "self", ".", "hx", ",", "self", ".", "cx", ")", ")", ")", "\n", "prob", "=", "F", ".", "softmax", "(", "logit", ",", "dim", "=", "1", ")", "\n", "log_prob", "=", "F", ".", "log_softmax", "(", "logit", ",", "dim", "=", "1", ")", "\n", "entropy", "=", "-", "(", "log_prob", "*", "prob", ")", ".", "sum", "(", "1", ")", "\n", "self", ".", "entropies", ".", "append", "(", "entropy", ")", "\n", "action", "=", "prob", ".", "multinomial", "(", ")", ".", "data", "\n", "# print(\"action:\", action)", "\n", "log_prob", "=", "log_prob", ".", "gather", "(", "1", ",", "Variable", "(", "action", ")", ")", "\n", "if", "self", ".", "translate_test", ":", "\n", "# print(\"before\", action)", "\n", "# print(\"after\", self.translator[action[0][0]])", "\n", "            ", "action", "=", "torch", ".", "from_numpy", "(", "np", ".", "asarray", "(", "[", "[", "self", ".", "translator", "[", "action", "[", "0", "]", "[", "0", "]", "]", "]", "]", ")", ")", "\n", "# print(\"after1\", action)", "\n", "", "state", ",", "self", ".", "reward", ",", "self", ".", "done", ",", "self", ".", "info", "=", "self", ".", "env", ".", "step", "(", "\n", "action", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "self", ".", "state", "=", "torch", ".", "from_numpy", "(", "state", ")", ".", "float", "(", ")", "\n", "if", "self", ".", "gpu_id", ">=", "0", ":", "\n", "            ", "with", "torch", ".", "cuda", ".", "device", "(", "self", ".", "gpu_id", ")", ":", "\n", "                ", "self", ".", "state", "=", "self", ".", "state", ".", "cuda", "(", ")", "\n", "", "", "self", ".", "eps_len", "+=", "1", "\n", "if", "self", ".", "eps_len", ">=", "self", ".", "args", ".", "max_episode_length", ":", "\n", "            ", "if", "not", "self", ".", "done", ":", "\n", "                ", "self", ".", "max_length", "=", "True", "\n", "self", ".", "done", "=", "True", "\n", "", "else", ":", "\n", "                ", "self", ".", "max_length", "=", "False", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "max_length", "=", "False", "\n", "\n", "\n", "", "self", ".", "reward", "=", "max", "(", "min", "(", "self", ".", "reward", ",", "1", ")", ",", "-", "1", ")", "\n", "self", ".", "values", ".", "append", "(", "value", ")", "\n", "self", ".", "log_probs", ".", "append", "(", "log_prob", ")", "\n", "self", ".", "rewards", ".", "append", "(", "self", ".", "reward", ")", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.player_util.Agent.action_test": [[68, 101], ["player_util.Agent.model", "torch.softmax", "torch.softmax", "[].data.cpu().numpy", "player_util.Agent.env.step", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "[].data.cpu", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.cuda.device", "torch.cuda.device", "torch.cuda.device", "torch.cuda.device", "player_util.Agent.state.cuda", "torch.cuda.device", "torch.cuda.device", "torch.cuda.device", "torch.cuda.device", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "player_util.Agent.state.unsqueeze", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.softmax.max"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.step", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda"], ["", "def", "action_test", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "done", ":", "\n", "            ", "if", "self", ".", "gpu_id", ">=", "0", ":", "\n", "                ", "with", "torch", ".", "cuda", ".", "device", "(", "self", ".", "gpu_id", ")", ":", "\n", "                    ", "self", ".", "cx", "=", "Variable", "(", "torch", ".", "zeros", "(", "\n", "1", ",", "512", ")", ".", "cuda", "(", ")", ",", "volatile", "=", "True", ")", "\n", "self", ".", "hx", "=", "Variable", "(", "torch", ".", "zeros", "(", "\n", "1", ",", "512", ")", ".", "cuda", "(", ")", ",", "volatile", "=", "True", ")", "\n", "", "", "else", ":", "\n", "                ", "self", ".", "cx", "=", "Variable", "(", "torch", ".", "zeros", "(", "1", ",", "512", ")", ",", "volatile", "=", "True", ")", "\n", "self", ".", "hx", "=", "Variable", "(", "torch", ".", "zeros", "(", "1", ",", "512", ")", ",", "volatile", "=", "True", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "cx", "=", "Variable", "(", "self", ".", "cx", ".", "data", ",", "volatile", "=", "True", ")", "\n", "self", ".", "hx", "=", "Variable", "(", "self", ".", "hx", ".", "data", ",", "volatile", "=", "True", ")", "\n", "", "value", ",", "logit", ",", "(", "self", ".", "hx", ",", "self", ".", "cx", ")", "=", "self", ".", "model", "(", "\n", "(", "Variable", "(", "self", ".", "state", ".", "unsqueeze", "(", "0", ")", ",", "volatile", "=", "True", ")", ",", "(", "self", ".", "hx", ",", "self", ".", "cx", ")", ")", ")", "\n", "prob", "=", "F", ".", "softmax", "(", "logit", ",", "dim", "=", "1", ")", "\n", "action", "=", "prob", ".", "max", "(", "1", ")", "[", "1", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "state", ",", "self", ".", "reward", ",", "self", ".", "done", ",", "self", ".", "info", "=", "self", ".", "env", ".", "step", "(", "action", "[", "0", "]", ")", "\n", "self", ".", "state", "=", "torch", ".", "from_numpy", "(", "state", ")", ".", "float", "(", ")", "\n", "if", "self", ".", "gpu_id", ">=", "0", ":", "\n", "            ", "with", "torch", ".", "cuda", ".", "device", "(", "self", ".", "gpu_id", ")", ":", "\n", "                ", "self", ".", "state", "=", "self", ".", "state", ".", "cuda", "(", ")", "\n", "", "", "self", ".", "eps_len", "+=", "1", "\n", "if", "self", ".", "eps_len", ">=", "self", ".", "args", ".", "max_episode_length", ":", "\n", "            ", "if", "not", "self", ".", "done", ":", "\n", "                ", "self", ".", "max_length", "=", "True", "\n", "self", ".", "done", "=", "True", "\n", "", "else", ":", "\n", "                ", "self", ".", "max_length", "=", "False", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "max_length", "=", "False", "\n", "", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.player_util.Agent.clear_actions": [[102, 108], ["None"], "methods", ["None"], ["", "def", "clear_actions", "(", "self", ")", ":", "\n", "        ", "self", ".", "values", "=", "[", "]", "\n", "self", ".", "log_probs", "=", "[", "]", "\n", "self", ".", "rewards", "=", "[", "]", "\n", "self", ".", "entropies", "=", "[", "]", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.utils.get_translator": [[8, 10], ["utils.get_translator_from_source"], "function", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.utils.get_translator_from_source"], ["def", "get_translator", "(", "args", ")", ":", "\n", "    ", "return", "get_translator_from_source", "(", "args", ".", "model_env", ",", "args", ".", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.utils.get_translator_from_source": [[11, 31], ["Exception"], "function", ["None"], ["", "def", "get_translator_from_source", "(", "source", ",", "target", ")", ":", "\n", "    ", "if", "'DemonAttack'", "in", "target", ":", "\n", "        ", "translate", "=", "[", "0", ",", "1", ",", "1", ",", "2", ",", "3", ",", "0", ",", "0", "]", "\n", "", "elif", "'Tennis'", "in", "target", "and", "'Tennis'", "in", "source", ":", "\n", "        ", "translate", "=", "[", "0", ",", "1", ",", "0", ",", "3", ",", "4", ",", "0", ",", "3", ",", "4", ",", "3", ",", "4", ",", "1", ",", "11", ",", "12", ",", "1", ",", "11", ",", "12", ",", "11", ",", "12", "]", "\n", "", "elif", "'Assault'", "in", "target", ":", "\n", "        ", "translate", "=", "[", "0", ",", "2", ",", "3", ",", "4", ",", "3", ",", "4", "]", "\n", "", "elif", "'Breakout'", "in", "target", "and", "'Tennis'", "in", "source", ":", "\n", "        ", "translate", "=", "[", "0", ",", "1", ",", "0", ",", "2", ",", "3", ",", "0", ",", "2", ",", "3", ",", "2", ",", "3", ",", "1", ",", "2", ",", "3", ",", "1", ",", "2", ",", "3", ",", "2", ",", "3", "]", "\n", "", "elif", "'Pong'", "in", "target", "and", "'Tennis'", "in", "source", ":", "\n", "        ", "translate", "=", "[", "0", ",", "1", ",", "0", ",", "2", ",", "3", ",", "0", ",", "2", ",", "3", ",", "2", ",", "3", ",", "1", ",", "4", ",", "5", ",", "1", ",", "4", ",", "5", ",", "4", ",", "5", "]", "\n", "", "elif", "'Pong'", "in", "target", ":", "\n", "        ", "translate", "=", "[", "0", ",", "1", ",", "4", ",", "5", "]", "\n", "", "elif", "'Breakout'", "in", "target", ":", "\n", "        ", "translate", "=", "[", "0", ",", "1", ",", "2", ",", "3", ",", "2", ",", "3", "]", "\n", "", "elif", "'Tennis'", "in", "target", ":", "\n", "        ", "translate", "=", "[", "0", ",", "1", ",", "3", ",", "4", ",", "3", ",", "4", "]", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"Cant translate enviroment: {}\"", ".", "format", "(", "target", ")", ")", "\n", "", "return", "translate", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.utils.setup_logger": [[32, 43], ["logging.getLogger", "logging.Formatter", "logging.FileHandler", "logging.FileHandler.setFormatter", "logging.StreamHandler", "logging.StreamHandler.setFormatter", "logging.getLogger.setLevel", "logging.getLogger.addHandler", "logging.getLogger.addHandler"], "function", ["None"], ["", "def", "setup_logger", "(", "logger_name", ",", "log_file", ",", "level", "=", "logging", ".", "INFO", ")", ":", "\n", "    ", "l", "=", "logging", ".", "getLogger", "(", "logger_name", ")", "\n", "formatter", "=", "logging", ".", "Formatter", "(", "'%(asctime)s : %(message)s'", ")", "\n", "fileHandler", "=", "logging", ".", "FileHandler", "(", "log_file", ",", "mode", "=", "'w'", ")", "\n", "fileHandler", ".", "setFormatter", "(", "formatter", ")", "\n", "streamHandler", "=", "logging", ".", "StreamHandler", "(", ")", "\n", "streamHandler", ".", "setFormatter", "(", "formatter", ")", "\n", "\n", "l", ".", "setLevel", "(", "level", ")", "\n", "l", ".", "addHandler", "(", "fileHandler", ")", "\n", "l", ".", "addHandler", "(", "streamHandler", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.utils.read_config": [[45, 49], ["json.load", "open"], "function", ["None"], ["", "def", "read_config", "(", "file_path", ")", ":", "\n", "    ", "\"\"\"Read JSON config.\"\"\"", "\n", "json_object", "=", "json", ".", "load", "(", "open", "(", "file_path", ",", "'r'", ")", ")", "\n", "return", "json_object", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.utils.norm_col_init": [[51, 55], ["torch.randn", "weights.size", "torch.sqrt"], "function", ["None"], ["", "def", "norm_col_init", "(", "weights", ",", "std", "=", "1.0", ")", ":", "\n", "    ", "x", "=", "torch", ".", "randn", "(", "weights", ".", "size", "(", ")", ")", "\n", "x", "*=", "std", "/", "torch", ".", "sqrt", "(", "(", "x", "**", "2", ")", ".", "sum", "(", "1", ",", "keepdim", "=", "True", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.utils.ensure_shared_grads": [[57, 65], ["zip", "model.parameters", "shared_model.parameters", "param.grad.cpu"], "function", ["None"], ["", "def", "ensure_shared_grads", "(", "model", ",", "shared_model", ",", "gpu", "=", "False", ")", ":", "\n", "    ", "for", "param", ",", "shared_param", "in", "zip", "(", "model", ".", "parameters", "(", ")", ",", "shared_model", ".", "parameters", "(", ")", ")", ":", "\n", "        ", "if", "shared_param", ".", "grad", "is", "not", "None", "and", "not", "gpu", ":", "\n", "            ", "return", "\n", "", "if", "not", "gpu", ":", "\n", "            ", "shared_param", ".", "_grad", "=", "param", ".", "grad", "\n", "", "else", ":", "\n", "            ", "shared_param", ".", "_grad", "=", "param", ".", "grad", ".", "cpu", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.utils.weights_init": [[67, 83], ["classname.find", "list", "numpy.prod", "numpy.sqrt", "m.weight.data.uniform_", "m.bias.data.fill_", "m.weight.data.size", "numpy.prod", "classname.find", "list", "numpy.sqrt", "m.weight.data.uniform_", "m.bias.data.fill_", "m.weight.data.size"], "function", ["None"], ["", "", "", "def", "weights_init", "(", "m", ")", ":", "\n", "    ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "classname", ".", "find", "(", "'Conv'", ")", "!=", "-", "1", ":", "\n", "        ", "weight_shape", "=", "list", "(", "m", ".", "weight", ".", "data", ".", "size", "(", ")", ")", "\n", "fan_in", "=", "np", ".", "prod", "(", "weight_shape", "[", "1", ":", "4", "]", ")", "\n", "fan_out", "=", "np", ".", "prod", "(", "weight_shape", "[", "2", ":", "4", "]", ")", "*", "weight_shape", "[", "0", "]", "\n", "w_bound", "=", "np", ".", "sqrt", "(", "6.", "/", "(", "fan_in", "+", "fan_out", ")", ")", "\n", "m", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "w_bound", ",", "w_bound", ")", "\n", "m", ".", "bias", ".", "data", ".", "fill_", "(", "0", ")", "\n", "", "elif", "classname", ".", "find", "(", "'Linear'", ")", "!=", "-", "1", ":", "\n", "        ", "weight_shape", "=", "list", "(", "m", ".", "weight", ".", "data", ".", "size", "(", ")", ")", "\n", "fan_in", "=", "weight_shape", "[", "1", "]", "\n", "fan_out", "=", "weight_shape", "[", "0", "]", "\n", "w_bound", "=", "np", ".", "sqrt", "(", "6.", "/", "(", "fan_in", "+", "fan_out", ")", ")", "\n", "m", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "w_bound", ",", "w_bound", ")", "\n", "m", ".", "bias", ".", "data", ".", "fill_", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.AtariRescale.__init__": [[41, 48], ["gym.ObservationWrapper.__init__", "gym.spaces.box.Box"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ",", "env_conf", ",", "convertor", ",", "convertor_config", ",", "mapFrames", ")", ":", "\n", "        ", "gym", ".", "ObservationWrapper", ".", "__init__", "(", "self", ",", "env", ")", "\n", "self", ".", "observation_space", "=", "Box", "(", "0.0", ",", "1.0", ",", "[", "1", ",", "80", ",", "80", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "self", ".", "conf", "=", "env_conf", "\n", "self", ".", "map_frames", "=", "mapFrames", "\n", "self", ".", "gan_trainer", "=", "convertor", "\n", "self", ".", "gan_config", "=", "convertor_config", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.AtariRescale.observation": [[49, 56], ["transfer_util.frame2attention", "cv2.imwrite", "environment.process_frame", "str", "print", "transfer_util.attention_process_frame"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.transfer_util.frame2attention", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.process_frame", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.transfer_util.attention_process_frame"], ["", "def", "observation", "(", "self", ",", "observation", ")", ":", "\n", "        ", "frame", ",", "_", ",", "_", ",", "_", "=", "frame2attention", "(", "observation", ",", "self", ".", "conf", ",", "str", "(", "self", ".", "env", ".", "spec", ")", ")", "\n", "cv2", ".", "imwrite", "(", "'input.jpg'", ",", "frame", ")", "\n", "if", "self", ".", "map_frames", ":", "\n", "            ", "print", "(", "'Calling visual mapper'", ")", "\n", "frame", "=", "attention_process_frame", "(", "frame", ",", "self", ".", "gan_trainer", ",", "self", ".", "gan_config", ")", "\n", "", "return", "process_frame", "(", "frame", ",", "self", ".", "conf", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.NormalizedEnv.__init__": [[59, 65], ["gym.ObservationWrapper.__init__"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", "=", "None", ")", ":", "\n", "        ", "gym", ".", "ObservationWrapper", ".", "__init__", "(", "self", ",", "env", ")", "\n", "self", ".", "state_mean", "=", "0", "\n", "self", ".", "state_std", "=", "0", "\n", "self", ".", "alpha", "=", "0.9999", "\n", "self", ".", "num_steps", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.NormalizedEnv.observation": [[66, 77], ["observation.mean", "observation.std", "pow", "pow"], "methods", ["None"], ["", "def", "observation", "(", "self", ",", "observation", ")", ":", "\n", "        ", "self", ".", "num_steps", "+=", "1", "\n", "self", ".", "state_mean", "=", "self", ".", "state_mean", "*", "self", ".", "alpha", "+", "observation", ".", "mean", "(", ")", "*", "(", "1", "-", "self", ".", "alpha", ")", "\n", "self", ".", "state_std", "=", "self", ".", "state_std", "*", "self", ".", "alpha", "+", "observation", ".", "std", "(", ")", "*", "(", "1", "-", "self", ".", "alpha", ")", "\n", "\n", "unbiased_mean", "=", "self", ".", "state_mean", "/", "(", "1", "-", "pow", "(", "self", ".", "alpha", ",", "self", ".", "num_steps", ")", ")", "\n", "unbiased_std", "=", "self", ".", "state_std", "/", "(", "1", "-", "pow", "(", "self", ".", "alpha", ",", "self", ".", "num_steps", ")", ")", "\n", "\n", "return", "(", "observation", "-", "unbiased_mean", ")", "/", "(", "unbiased_std", "+", "1e-8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.NoopResetEnv.__init__": [[80, 88], ["gym.Wrapper.__init__", "env.unwrapped.get_action_meanings"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ",", "noop_max", "=", "30", ")", ":", "\n", "        ", "\"\"\"Sample initial states by taking random number of no-ops on reset.\n        No-op is assumed to be action 0.\n        \"\"\"", "\n", "gym", ".", "Wrapper", ".", "__init__", "(", "self", ",", "env", ")", "\n", "self", ".", "noop_max", "=", "noop_max", "\n", "self", ".", "noop_action", "=", "0", "\n", "assert", "env", ".", "unwrapped", ".", "get_action_meanings", "(", ")", "[", "0", "]", "==", "'NOOP'", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.NoopResetEnv.reset": [[89, 98], ["environment.NoopResetEnv.env.reset", "random.randrange", "range", "environment.NoopResetEnv.env.step"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.reset", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.step"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "\"\"\" Do no-op action for a number of steps in [1, noop_max].\"\"\"", "\n", "self", ".", "env", ".", "reset", "(", ")", "\n", "noops", "=", "random", ".", "randrange", "(", "1", ",", "self", ".", "noop_max", "+", "1", ")", "# pylint: disable=E1101", "\n", "assert", "noops", ">", "0", "\n", "obs", "=", "None", "\n", "for", "_", "in", "range", "(", "noops", ")", ":", "\n", "            ", "obs", ",", "_", ",", "done", ",", "_", "=", "self", ".", "env", ".", "step", "(", "self", ".", "noop_action", ")", "\n", "", "return", "obs", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.NoopResetEnv.step": [[99, 101], ["environment.NoopResetEnv.env.step"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.step"], ["", "def", "step", "(", "self", ",", "ac", ")", ":", "\n", "        ", "return", "self", ".", "env", ".", "step", "(", "ac", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.FireResetEnv.__init__": [[104, 109], ["gym.Wrapper.__init__", "len", "env.unwrapped.get_action_meanings", "env.unwrapped.get_action_meanings"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ")", ":", "\n", "        ", "\"\"\"Take action on reset for environments that are fixed until firing.\"\"\"", "\n", "gym", ".", "Wrapper", ".", "__init__", "(", "self", ",", "env", ")", "\n", "assert", "env", ".", "unwrapped", ".", "get_action_meanings", "(", ")", "[", "1", "]", "==", "'FIRE'", "\n", "assert", "len", "(", "env", ".", "unwrapped", ".", "get_action_meanings", "(", ")", ")", ">=", "3", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.FireResetEnv.reset": [[110, 119], ["environment.FireResetEnv.env.reset", "environment.FireResetEnv.env.step", "environment.FireResetEnv.env.step", "environment.FireResetEnv.env.reset", "environment.FireResetEnv.env.reset"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.reset", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.step", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.step", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.reset", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.reset"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "env", ".", "reset", "(", ")", "\n", "obs", ",", "_", ",", "done", ",", "_", "=", "self", ".", "env", ".", "step", "(", "1", ")", "\n", "if", "done", ":", "\n", "            ", "self", ".", "env", ".", "reset", "(", ")", "\n", "", "obs", ",", "_", ",", "done", ",", "_", "=", "self", ".", "env", ".", "step", "(", "2", ")", "\n", "if", "done", ":", "\n", "            ", "self", ".", "env", ".", "reset", "(", ")", "\n", "", "return", "obs", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.FireResetEnv.step": [[120, 122], ["environment.FireResetEnv.env.step"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.step"], ["", "def", "step", "(", "self", ",", "ac", ")", ":", "\n", "        ", "return", "self", ".", "env", ".", "step", "(", "ac", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.EpisodicLifeEnv.__init__": [[125, 132], ["gym.Wrapper.__init__"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ")", ":", "\n", "        ", "\"\"\"Make end-of-life == end-of-episode, but only reset on true game over.\n        Done by DeepMind for the DQN and co. since it helps value estimation.\n        \"\"\"", "\n", "gym", ".", "Wrapper", ".", "__init__", "(", "self", ",", "env", ")", "\n", "self", ".", "lives", "=", "0", "\n", "self", ".", "was_real_done", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.EpisodicLifeEnv.step": [[133, 147], ["environment.EpisodicLifeEnv.env.step"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.step"], ["", "def", "step", "(", "self", ",", "action", ")", ":", "\n", "        ", "obs", ",", "reward", ",", "done", ",", "info", "=", "self", ".", "env", ".", "step", "(", "action", ")", "\n", "self", ".", "was_real_done", "=", "True", "\n", "# check current lives, make loss of life terminal,", "\n", "# then update lives to handle bonus lives", "\n", "lives", "=", "info", "[", "'ale.lives'", "]", "\n", "if", "lives", "<", "self", ".", "lives", "and", "lives", ">", "0", ":", "\n", "# for Qbert sometimes we stay in lives == 0 condtion for a few frames", "\n", "# so its important to keep lives > 0, so that we only reset once", "\n", "# the environment advertises done.", "\n", "            ", "done", "=", "True", "\n", "self", ".", "was_real_done", "=", "False", "\n", "", "self", ".", "lives", "=", "lives", "\n", "return", "obs", ",", "reward", ",", "done", ",", "info", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.EpisodicLifeEnv.reset": [[148, 161], ["environment.EpisodicLifeEnv.env.reset", "environment.EpisodicLifeEnv.env.step"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.reset", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.step"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "\"\"\"Reset only when lives are exhausted.\n        This way all states are still reachable even though lives are episodic,\n        and the learner need not know about any of this behind-the-scenes.\n        \"\"\"", "\n", "if", "self", ".", "was_real_done", ":", "\n", "            ", "obs", "=", "self", ".", "env", ".", "reset", "(", ")", "\n", "self", ".", "lives", "=", "0", "\n", "", "else", ":", "\n", "# no-op step to advance from terminal/lost life state", "\n", "            ", "obs", ",", "_", ",", "_", ",", "info", "=", "self", ".", "env", ".", "step", "(", "0", ")", "\n", "self", ".", "lives", "=", "info", "[", "'ale.lives'", "]", "\n", "", "return", "obs", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.__init__": [[164, 170], ["gym.Wrapper.__init__", "collections.deque"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", "=", "None", ",", "skip", "=", "4", ")", ":", "\n", "        ", "\"\"\"Return only every `skip`-th frame\"\"\"", "\n", "gym", ".", "Wrapper", ".", "__init__", "(", "self", ",", "env", ")", "\n", "# most recent raw observations (for max pooling across time steps)", "\n", "self", ".", "_obs_buffer", "=", "deque", "(", "maxlen", "=", "2", ")", "\n", "self", ".", "_skip", "=", "skip", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.step": [[171, 183], ["range", "numpy.max", "environment.MaxAndSkipEnv.env.step", "environment.MaxAndSkipEnv._obs_buffer.append", "numpy.stack"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.step"], ["", "def", "step", "(", "self", ",", "action", ")", ":", "\n", "        ", "total_reward", "=", "0.0", "\n", "done", "=", "None", "\n", "for", "_", "in", "range", "(", "self", ".", "_skip", ")", ":", "\n", "            ", "obs", ",", "reward", ",", "done", ",", "info", "=", "self", ".", "env", ".", "step", "(", "action", ")", "\n", "self", ".", "_obs_buffer", ".", "append", "(", "obs", ")", "\n", "total_reward", "+=", "reward", "\n", "if", "done", ":", "\n", "                ", "break", "\n", "\n", "", "", "max_frame", "=", "np", ".", "max", "(", "np", ".", "stack", "(", "self", ".", "_obs_buffer", ")", ",", "axis", "=", "0", ")", "\n", "return", "max_frame", ",", "total_reward", ",", "done", ",", "info", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.reset": [[184, 190], ["environment.MaxAndSkipEnv._obs_buffer.clear", "environment.MaxAndSkipEnv.env.reset", "environment.MaxAndSkipEnv._obs_buffer.append"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.reset"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "\"\"\"Clear past frame buffer and init. to first obs. from inner env.\"\"\"", "\n", "self", ".", "_obs_buffer", ".", "clear", "(", ")", "\n", "obs", "=", "self", ".", "env", ".", "reset", "(", ")", "\n", "self", ".", "_obs_buffer", ".", "append", "(", "obs", ")", "\n", "return", "obs", "\n", "", "", ""]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.atari_env": [[15, 27], ["gym.make", "environment.EpisodicLifeEnv", "environment.AtariRescale", "environment.NormalizedEnv", "environment.NoopResetEnv", "environment.MaxAndSkipEnv", "FireResetEnv.unwrapped.get_action_meanings", "environment.FireResetEnv"], "function", ["None"], ["def", "atari_env", "(", "env_id", ",", "env_conf", ",", "args", ",", "convertor", "=", "None", ",", "convertor_config", "=", "None", ",", "mapFrames", "=", "False", ")", ":", "\n", "    ", "env", "=", "gym", ".", "make", "(", "env_id", ")", "\n", "if", "'NoFrameskip'", "in", "env_id", ":", "\n", "        ", "assert", "'NoFrameskip'", "in", "env", ".", "spec", ".", "id", "\n", "env", "=", "NoopResetEnv", "(", "env", ",", "noop_max", "=", "30", ")", "\n", "env", "=", "MaxAndSkipEnv", "(", "env", ",", "skip", "=", "args", ".", "skip_rate", ")", "\n", "", "env", "=", "EpisodicLifeEnv", "(", "env", ")", "\n", "if", "'FIRE'", "in", "env", ".", "unwrapped", ".", "get_action_meanings", "(", ")", ":", "\n", "        ", "env", "=", "FireResetEnv", "(", "env", ")", "\n", "", "env", "=", "AtariRescale", "(", "env", ",", "env_conf", ",", "convertor", ",", "convertor_config", ",", "mapFrames", ")", "\n", "env", "=", "NormalizedEnv", "(", "env", ")", "\n", "return", "env", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.process_frame": [[29, 38], ["np.reshape.mean", "np.reshape.astype", "cv2.resize", "cv2.resize", "numpy.reshape"], "function", ["None"], ["", "def", "process_frame", "(", "frame", ",", "conf", ")", ":", "\n", "#frame = frame[conf[\"crop1\"]:conf[\"crop2\"] + 160, :160", "\n", "    ", "frame", "=", "frame", ".", "mean", "(", "2", ")", "\n", "frame", "=", "frame", ".", "astype", "(", "np", ".", "float32", ")", "\n", "frame", "*=", "(", "1.0", "/", "255.0", ")", "\n", "frame", "=", "resize", "(", "frame", ",", "(", "80", ",", "conf", "[", "\"dimension2\"", "]", ")", ")", "\n", "frame", "=", "resize", "(", "frame", ",", "(", "80", ",", "80", ")", ")", "\n", "frame", "=", "np", ".", "reshape", "(", "frame", ",", "[", "1", ",", "80", ",", "80", "]", ")", "\n", "return", "frame", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.tools.net_config.NetConfig.__init__": [[10, 21], ["open", "yaml.load_all", "open.close", "doc.items", "v.items", "print", "exec", "repr"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "stream", "=", "open", "(", "config", ",", "'r'", ")", "\n", "docs", "=", "yaml", ".", "load_all", "(", "stream", ")", "\n", "for", "doc", "in", "docs", ":", "\n", "            ", "for", "k", ",", "v", "in", "doc", ".", "items", "(", ")", ":", "\n", "                ", "if", "k", "==", "\"train\"", ":", "\n", "                    ", "for", "k1", ",", "v1", "in", "v", ".", "items", "(", ")", ":", "\n", "                        ", "cmd", "=", "\"self.\"", "+", "k1", "+", "\"=\"", "+", "repr", "(", "v1", ")", "\n", "print", "(", "cmd", ")", "\n", "exec", "(", "cmd", ")", "\n", "", "", "", "", "stream", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.tools.net_config.SettingConfig.__init__": [[30, 41], ["open", "yaml.load_all", "open.close", "doc.items", "v.items", "print", "exec", "repr"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "stream", "=", "open", "(", "config", ",", "'r'", ")", "\n", "docs", "=", "yaml", ".", "load_all", "(", "stream", ")", "\n", "for", "doc", "in", "docs", ":", "\n", "            ", "for", "k", ",", "v", "in", "doc", ".", "items", "(", ")", ":", "\n", "                ", "if", "k", "==", "\"train\"", ":", "\n", "                    ", "for", "k1", ",", "v1", "in", "v", ".", "items", "(", ")", ":", "\n", "                        ", "cmd", "=", "\"self.\"", "+", "k1", "+", "\"=\"", "+", "repr", "(", "v1", ")", "\n", "print", "(", "cmd", ")", "\n", "exec", "(", "cmd", ")", "\n", "", "", "", "", "stream", ".", "close", "(", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.tools.net_config.dict_from_class": [[23, 27], ["dict", "cls.__dict__.items"], "function", ["None"], ["", "", "def", "dict_from_class", "(", "cls", ")", ":", "\n", "    ", "return", "dict", "(", "\n", "(", "key", ",", "value", ")", "\n", "for", "(", "key", ",", "value", ")", "in", "cls", ".", "__dict__", ".", "items", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.init.gaussian_weights_init": [[8, 13], ["m.weight.data.normal_", "classname.find", "classname.find"], "function", ["None"], ["def", "gaussian_weights_init", "(", "m", ")", ":", "\n", "    ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "classname", ".", "find", "(", "'Conv'", ")", "!=", "-", "1", "and", "classname", ".", "find", "(", "'Conv'", ")", "==", "0", ":", "\n", "# print m.__class__.__name__", "\n", "        ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0.0", ",", "0.02", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.init.xavier_weights_init": [[14, 19], ["classname.find", "torch.xavier_uniform", "torch.constant", "numpy.sqrt"], "function", ["None"], ["", "", "def", "xavier_weights_init", "(", "m", ")", ":", "\n", "    ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "classname", ".", "find", "(", "'Conv'", ")", "!=", "-", "1", ":", "\n", "        ", "init", ".", "xavier_uniform", "(", "m", ".", "weight", ",", "gain", "=", "np", ".", "sqrt", "(", "2", ")", ")", "\n", "init", ".", "constant", "(", "m", ".", "bias", ",", "0.1", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.common_net.GaussianSmoother.__init__": [[14, 24], ["torch.Module.__init__", "cv2.getGaussianKernel", "numpy.dot", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "range", "torch.autograd.Variable", "torch.autograd.Variable", "cv2.getGaussianKernel.reshape", "cv2.getGaussianKernel.reshape", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__"], ["  ", "def", "__init__", "(", "self", ",", "kernel_size", "=", "5", ")", ":", "\n", "    ", "super", "(", "GaussianSmoother", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "sigma", "=", "0.3", "*", "(", "(", "kernel_size", "-", "1", ")", "*", "0.5", "-", "1", ")", "+", "0.8", "\n", "kernel", "=", "cv2", ".", "getGaussianKernel", "(", "kernel_size", ",", "-", "1", ")", "\n", "kernel2d", "=", "np", ".", "dot", "(", "kernel", ".", "reshape", "(", "kernel_size", ",", "1", ")", ",", "kernel", ".", "reshape", "(", "1", ",", "kernel_size", ")", ")", "\n", "data", "=", "torch", ".", "Tensor", "(", "3", ",", "1", ",", "kernel_size", ",", "kernel_size", ")", "\n", "self", ".", "pad", "=", "(", "kernel_size", "-", "1", ")", "/", "2", "\n", "for", "i", "in", "range", "(", "0", ",", "3", ")", ":", "\n", "      ", "data", "[", "i", ",", "0", ",", ":", ",", ":", "]", "=", "torch", ".", "from_numpy", "(", "kernel2d", ")", "\n", "", "self", ".", "blur_kernel", "=", "Variable", "(", "data", ",", "requires_grad", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.common_net.GaussianSmoother.forward": [[25, 29], ["torch.functional.pad", "torch.functional.pad", "torch.functional.conv2d", "torch.functional.conv2d"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "out", "=", "nn", ".", "functional", ".", "pad", "(", "x", ",", "[", "self", ".", "pad", ",", "self", ".", "pad", ",", "self", ".", "pad", ",", "self", ".", "pad", "]", ",", "mode", "=", "'replicate'", ")", "\n", "out", "=", "nn", ".", "functional", ".", "conv2d", "(", "out", ",", "self", ".", "blur_kernel", ",", "groups", "=", "3", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.common_net.GaussianSmoother.cuda": [[30, 32], ["common_net.GaussianSmoother.blur_kernel.cuda"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda"], ["", "def", "cuda", "(", "self", ",", "gpu", ")", ":", "\n", "    ", "self", ".", "blur_kernel", "=", "self", ".", "blur_kernel", ".", "cuda", "(", "gpu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.common_net.INSResBlock.conv3x3": [[34, 36], ["torch.Conv2d", "torch.Conv2d"], "methods", ["None"], ["  ", "def", "conv3x3", "(", "self", ",", "inplanes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "inplanes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.common_net.INSResBlock.__init__": [[37, 49], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "common_net.INSResBlock.model.apply", "common_net.INSResBlock.conv3x3", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.ReLU", "torch.ReLU", "common_net.INSResBlock.conv3x3", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.common_net.INSResBlock.conv3x3", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.common_net.INSResBlock.conv3x3"], ["", "def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "dropout", "=", "0.0", ")", ":", "\n", "    ", "super", "(", "INSResBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "model", "=", "[", "]", "\n", "model", "+=", "[", "self", ".", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "]", "\n", "model", "+=", "[", "nn", ".", "InstanceNorm2d", "(", "planes", ")", "]", "\n", "model", "+=", "[", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "model", "+=", "[", "self", ".", "conv3x3", "(", "planes", ",", "planes", ")", "]", "\n", "model", "+=", "[", "nn", ".", "InstanceNorm2d", "(", "planes", ")", "]", "\n", "if", "dropout", ">", "0", ":", "\n", "      ", "model", "+=", "[", "nn", ".", "Dropout", "(", "p", "=", "dropout", ")", "]", "\n", "", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "self", ".", "model", ".", "apply", "(", "gaussian_weights_init", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.common_net.INSResBlock.forward": [[50, 55], ["common_net.INSResBlock.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "residual", "=", "x", "\n", "out", "=", "self", ".", "model", "(", "x", ")", "\n", "out", "+=", "residual", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.common_net.LeakyReLUConv2d.__init__": [[57, 64], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "common_net.LeakyReLUConv2d.model.apply", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__"], ["  ", "def", "__init__", "(", "self", ",", "n_in", ",", "n_out", ",", "kernel_size", ",", "stride", ",", "padding", "=", "0", ")", ":", "\n", "    ", "super", "(", "LeakyReLUConv2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "model", "=", "[", "]", "\n", "model", "+=", "[", "nn", ".", "Conv2d", "(", "n_in", ",", "n_out", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "bias", "=", "True", ")", "]", "\n", "model", "+=", "[", "nn", ".", "LeakyReLU", "(", "inplace", "=", "True", ")", "]", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "self", ".", "model", ".", "apply", "(", "gaussian_weights_init", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.common_net.LeakyReLUConv2d.forward": [[65, 67], ["common_net.LeakyReLUConv2d.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "model", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.common_net.LeakyReLUConvTranspose2d.__init__": [[69, 76], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "common_net.LeakyReLUConvTranspose2d.model.apply", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.LeakyReLU", "torch.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__"], ["  ", "def", "__init__", "(", "self", ",", "n_in", ",", "n_out", ",", "kernel_size", ",", "stride", ",", "padding", "=", "0", ",", "output_padding", "=", "0", ")", ":", "\n", "    ", "super", "(", "LeakyReLUConvTranspose2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "model", "=", "[", "]", "\n", "model", "+=", "[", "nn", ".", "ConvTranspose2d", "(", "n_in", ",", "n_out", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "output_padding", "=", "output_padding", ",", "bias", "=", "True", ")", "]", "\n", "model", "+=", "[", "nn", ".", "LeakyReLU", "(", "inplace", "=", "True", ")", "]", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "self", ".", "model", ".", "apply", "(", "gaussian_weights_init", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.common_net.LeakyReLUConvTranspose2d.forward": [[77, 79], ["common_net.LeakyReLUConvTranspose2d.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "model", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.common_net.LeakyReLUBNConv2d.__init__": [[81, 89], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "common_net.LeakyReLUBNConv2d.model.apply", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__"], ["  ", "def", "__init__", "(", "self", ",", "n_in", ",", "n_out", ",", "kernel_size", ",", "stride", ",", "padding", "=", "0", ")", ":", "\n", "    ", "super", "(", "LeakyReLUBNConv2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "model", "=", "[", "]", "\n", "model", "+=", "[", "nn", ".", "Conv2d", "(", "n_in", ",", "n_out", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "bias", "=", "False", ")", "]", "\n", "model", "+=", "[", "nn", ".", "BatchNorm2d", "(", "n_out", ")", "]", "\n", "model", "+=", "[", "nn", ".", "LeakyReLU", "(", "inplace", "=", "True", ")", "]", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "self", ".", "model", ".", "apply", "(", "gaussian_weights_init", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.common_net.LeakyReLUBNConv2d.forward": [[90, 92], ["common_net.LeakyReLUBNConv2d.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "model", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.common_net.LeakyReLUBNConvTranspose2d.__init__": [[94, 102], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "common_net.LeakyReLUBNConvTranspose2d.model.apply", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__"], ["  ", "def", "__init__", "(", "self", ",", "n_in", ",", "n_out", ",", "kernel_size", ",", "stride", ",", "padding", "=", "0", ",", "output_padding", "=", "0", ")", ":", "\n", "    ", "super", "(", "LeakyReLUBNConvTranspose2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "model", "=", "[", "]", "\n", "model", "+=", "[", "nn", ".", "ConvTranspose2d", "(", "n_in", ",", "n_out", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "output_padding", "=", "output_padding", ",", "bias", "=", "False", ")", "]", "\n", "model", "+=", "[", "nn", ".", "BatchNorm2d", "(", "n_out", ")", "]", "\n", "model", "+=", "[", "nn", ".", "LeakyReLU", "(", "inplace", "=", "True", ")", "]", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "self", ".", "model", ".", "apply", "(", "gaussian_weights_init", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.common_net.LeakyReLUBNConvTranspose2d.forward": [[103, 105], ["common_net.LeakyReLUBNConvTranspose2d.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "model", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.common_net.ReLUINSConv2d.__init__": [[107, 115], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "common_net.ReLUINSConv2d.model.apply", "torch.Conv2d", "torch.Conv2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__"], ["  ", "def", "__init__", "(", "self", ",", "n_in", ",", "n_out", ",", "kernel_size", ",", "stride", ",", "padding", "=", "0", ")", ":", "\n", "    ", "super", "(", "ReLUINSConv2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "model", "=", "[", "]", "\n", "model", "+=", "[", "nn", ".", "Conv2d", "(", "n_in", ",", "n_out", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "bias", "=", "True", ")", "]", "\n", "model", "+=", "[", "nn", ".", "InstanceNorm2d", "(", "n_out", ",", "affine", "=", "False", ")", "]", "\n", "model", "+=", "[", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "self", ".", "model", ".", "apply", "(", "gaussian_weights_init", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.common_net.ReLUINSConv2d.forward": [[116, 118], ["common_net.ReLUINSConv2d.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "model", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.common_net.ReLUINSConvTranspose2d.__init__": [[120, 129], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "common_net.ReLUINSConvTranspose2d.model.apply", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__"], ["  ", "def", "__init__", "(", "self", ",", "n_in", ",", "n_out", ",", "kernel_size", ",", "stride", ",", "padding", ",", "output_padding", ")", ":", "\n", "    ", "super", "(", "ReLUINSConvTranspose2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "model", "=", "[", "]", "\n", "model", "+=", "[", "nn", ".", "ConvTranspose2d", "(", "n_in", ",", "n_out", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "\n", "output_padding", "=", "output_padding", ",", "bias", "=", "True", ")", "]", "\n", "model", "+=", "[", "nn", ".", "InstanceNorm2d", "(", "n_out", ",", "affine", "=", "False", ")", "]", "\n", "model", "+=", "[", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "self", ".", "model", ".", "apply", "(", "gaussian_weights_init", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.common_net.ReLUINSConvTranspose2d.forward": [[130, 132], ["common_net.ReLUINSConvTranspose2d.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "model", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.common_net.GaussianNoiseLayer.__init__": [[134, 136], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__"], ["  ", "def", "__init__", "(", "self", ",", ")", ":", "\n", "    ", "super", "(", "GaussianNoiseLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.common_net.GaussianNoiseLayer.forward": [[137, 146], ["torch.randn", "torch.randn", "torch.randn", "torch.randn", "x.size", "hasattr", "hasattr", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable.cuda", "torch.autograd.Variable.cuda", "x.data.get_device"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "if", "self", ".", "training", "==", "False", ":", "\n", "      ", "return", "x", "\n", "", "noise", "=", "torch", ".", "randn", "(", "x", ".", "size", "(", ")", ")", "\n", "if", "hasattr", "(", "noise", ",", "'cuda'", ")", "and", "hasattr", "(", "x", ".", "data", ",", "'get_device'", ")", ":", "\n", "      ", "noise", "=", "Variable", "(", "noise", ".", "cuda", "(", "x", ".", "data", ".", "get_device", "(", ")", ")", ")", "\n", "", "else", ":", "\n", "      ", "noise", "=", "Variable", "(", "noise", ")", "\n", "", "return", "x", "+", "noise", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.common_net.GaussianVAE2D.__init__": [[148, 154], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Softplus", "torch.Softplus", "common_net.GaussianVAE2D.reset_parameters"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.common_net.Bias2d.reset_parameters"], ["  ", "def", "__init__", "(", "self", ",", "n_in", ",", "n_out", ",", "kernel_size", ",", "stride", ",", "padding", "=", "0", ")", ":", "\n", "    ", "super", "(", "GaussianVAE2D", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "en_mu", "=", "nn", ".", "Conv2d", "(", "n_in", ",", "n_out", ",", "kernel_size", ",", "stride", ",", "padding", ")", "\n", "self", ".", "en_sigma", "=", "nn", ".", "Conv2d", "(", "n_in", ",", "n_out", ",", "kernel_size", ",", "stride", ",", "padding", ")", "\n", "self", ".", "softplus", "=", "nn", ".", "Softplus", "(", ")", "\n", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.common_net.GaussianVAE2D.reset_parameters": [[155, 160], ["common_net.GaussianVAE2D.en_mu.weight.data.normal_", "common_net.GaussianVAE2D.en_mu.bias.data.normal_", "common_net.GaussianVAE2D.en_sigma.weight.data.normal_", "common_net.GaussianVAE2D.en_sigma.bias.data.normal_"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "    ", "self", ".", "en_mu", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.002", ")", "\n", "self", ".", "en_mu", ".", "bias", ".", "data", ".", "normal_", "(", "0", ",", "0.002", ")", "\n", "self", ".", "en_sigma", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.002", ")", "\n", "self", ".", "en_sigma", ".", "bias", ".", "data", ".", "normal_", "(", "0", ",", "0.002", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.common_net.GaussianVAE2D.forward": [[161, 165], ["common_net.GaussianVAE2D.en_mu", "common_net.GaussianVAE2D.softplus", "common_net.GaussianVAE2D.en_sigma"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "mu", "=", "self", ".", "en_mu", "(", "x", ")", "\n", "sd", "=", "self", ".", "softplus", "(", "self", ".", "en_sigma", "(", "x", ")", ")", "\n", "return", "mu", ",", "sd", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.common_net.GaussianVAE2D.sample": [[166, 171], ["common_net.GaussianVAE2D.en_mu", "common_net.GaussianVAE2D.softplus", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "common_net.GaussianVAE2D.en_sigma", "x.data.get_device", "torch.autograd.Variable", "torch.autograd.Variable", "common_net.GaussianVAE2D.mul", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "common_net.GaussianVAE2D.size", "common_net.GaussianVAE2D.size", "common_net.GaussianVAE2D.size", "common_net.GaussianVAE2D.size"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda"], ["", "def", "sample", "(", "self", ",", "x", ")", ":", "\n", "    ", "mu", "=", "self", ".", "en_mu", "(", "x", ")", "\n", "sd", "=", "self", ".", "softplus", "(", "self", ".", "en_sigma", "(", "x", ")", ")", "\n", "noise", "=", "Variable", "(", "torch", ".", "randn", "(", "mu", ".", "size", "(", "0", ")", ",", "mu", ".", "size", "(", "1", ")", ",", "mu", ".", "size", "(", "2", ")", ",", "mu", ".", "size", "(", "3", ")", ")", ")", ".", "cuda", "(", "x", ".", "data", ".", "get_device", "(", ")", ")", "\n", "return", "mu", "+", "sd", ".", "mul", "(", "noise", ")", ",", "mu", ",", "sd", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.common_net.Bias2d.__init__": [[173, 177], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "common_net.Bias2d.reset_parameters", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.common_net.Bias2d.reset_parameters"], ["  ", "def", "__init__", "(", "self", ",", "channels", ")", ":", "\n", "    ", "super", "(", "Bias2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "channels", ")", ")", "\n", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.common_net.Bias2d.reset_parameters": [[178, 180], ["common_net.Bias2d.bias.data.normal_"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "    ", "self", ".", "bias", ".", "data", ".", "normal_", "(", "0", ",", "0.002", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.common_net.Bias2d.forward": [[181, 184], ["x.size", "common_net.Bias2d.bias.unsqueeze().unsqueeze().unsqueeze().expand", "common_net.Bias2d.bias.unsqueeze().unsqueeze().unsqueeze", "common_net.Bias2d.bias.unsqueeze().unsqueeze", "common_net.Bias2d.bias.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "n", ",", "c", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "return", "x", "+", "self", ".", "bias", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", ".", "expand", "(", "n", ",", "c", ",", "h", ",", "w", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.common_net.LeakyReLUBNNSConv2d.__init__": [[186, 195], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "common_net.LeakyReLUBNNSConv2d.model.apply", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "common_net.Bias2d", "torch.LeakyReLU", "torch.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__"], ["  ", "def", "__init__", "(", "self", ",", "n_in", ",", "n_out", ",", "kernel_size", ",", "stride", ",", "padding", "=", "0", ")", ":", "\n", "    ", "super", "(", "LeakyReLUBNNSConv2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "model", "=", "[", "]", "\n", "model", "+=", "[", "nn", ".", "Conv2d", "(", "n_in", ",", "n_out", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "bias", "=", "True", ")", "]", "\n", "model", "+=", "[", "nn", ".", "BatchNorm2d", "(", "n_out", ",", "affine", "=", "False", ")", "]", "\n", "model", "+=", "[", "Bias2d", "(", "n_out", ")", "]", "\n", "model", "+=", "[", "nn", ".", "LeakyReLU", "(", "inplace", "=", "True", ")", "]", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "self", ".", "model", ".", "apply", "(", "gaussian_weights_init", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.common_net.LeakyReLUBNNSConv2d.forward": [[196, 198], ["common_net.LeakyReLUBNNSConv2d.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "model", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.common_net.LeakyReLUBNNSConvTranspose2d.__init__": [[200, 209], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "common_net.LeakyReLUBNNSConvTranspose2d.model.apply", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "common_net.Bias2d", "torch.LeakyReLU", "torch.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__"], ["  ", "def", "__init__", "(", "self", ",", "n_in", ",", "n_out", ",", "kernel_size", ",", "stride", ",", "padding", "=", "0", ")", ":", "\n", "    ", "super", "(", "LeakyReLUBNNSConvTranspose2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "model", "=", "[", "]", "\n", "model", "+=", "[", "nn", ".", "ConvTranspose2d", "(", "n_in", ",", "n_out", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "bias", "=", "True", ")", "]", "\n", "model", "+=", "[", "nn", ".", "BatchNorm2d", "(", "n_out", ",", "affine", "=", "False", ")", "]", "\n", "model", "+=", "[", "Bias2d", "(", "n_out", ")", "]", "\n", "model", "+=", "[", "nn", ".", "LeakyReLU", "(", "inplace", "=", "True", ")", "]", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "self", ".", "model", ".", "apply", "(", "gaussian_weights_init", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.common_net.LeakyReLUBNNSConvTranspose2d.forward": [[210, 212], ["common_net.LeakyReLUBNNSConvTranspose2d.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "model", "(", "x", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.__init__": [[17, 19], ["cocogan_trainer_games.COCOGANGAMESTrainer.__init__"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__"], ["  ", "def", "__init__", "(", "self", ",", "hyperparameters", ")", ":", "\n", "    ", "super", "(", "COCOGANGAMESDUALTrainer", ",", "self", ")", ".", "__init__", "(", "hyperparameters", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.gen_update": [[20, 90], ["cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.gen.zero_grad", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.gen", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.gen", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.gen.forward_a2b", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.gen.forward_b2a", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.gen.forward_a2b", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.gen.forward_b2a", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.dis", "enumerate", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer._compute_kl", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer._compute_kl", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer._compute_kl", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.ll_loss_criterion_a", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.ll_loss_criterion_b", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.ll_loss_criterion_a", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.ll_loss_criterion_b", "total_loss.backward", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.gen_opt.step", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "itertools.izip", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "Variable", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.data.cpu().numpy", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.data.cpu().numpy", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.data.cpu().numpy", "torch.functional.binary_cross_entropy.data.cpu().numpy", "torch.functional.binary_cross_entropy.data.cpu().numpy", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.data.cpu().numpy", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.data.cpu().numpy", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.data.cpu().numpy", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.data.cpu().numpy", "total_loss.data.cpu().numpy", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.data.cpu", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.data.cpu", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.data.cpu", "torch.functional.binary_cross_entropy.data.cpu", "torch.functional.binary_cross_entropy.data.cpu", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.data.cpu", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.data.cpu", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.data.cpu", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.data.cpu", "total_loss.data.cpu", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.functional.sigmoid.size"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOResGen2.forward_a2b", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOResGen2.forward_b2a", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOResGen2.forward_a2b", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOResGen2.forward_b2a", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer._compute_kl", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer._compute_kl", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer._compute_kl", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.step", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda"], ["", "def", "gen_update", "(", "self", ",", "images_a", ",", "images_b", ",", "hyperparameters", ")", ":", "\n", "    ", "self", ".", "gen", ".", "zero_grad", "(", ")", "\n", "if", "self", ".", "use_xy", ":", "\n", "        ", "images_a_xy_0", "=", "torch", ".", "cat", "(", "(", "images_a", "[", "0", "]", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "images_b_xy_0", "=", "torch", ".", "cat", "(", "(", "images_b", "[", "0", "]", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "images_a_xy_1", "=", "torch", ".", "cat", "(", "(", "images_a", "[", "1", "]", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "images_b_xy_1", "=", "torch", ".", "cat", "(", "(", "images_b", "[", "1", "]", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "", "else", ":", "\n", "        ", "images_a_xy_0", "=", "images_a", "[", "0", "]", "\n", "images_b_xy_0", "=", "images_b", "[", "0", "]", "\n", "images_a_xy_1", "=", "images_a", "[", "1", "]", "\n", "images_b_xy_1", "=", "images_b", "[", "1", "]", "\n", "", "x_aa_0", ",", "x_ba_0", ",", "x_ab_0", ",", "x_bb_0", ",", "shared_0", "=", "self", ".", "gen", "(", "images_a_xy_0", ",", "images_b_xy_0", ")", "\n", "x_aa_1", ",", "x_ba_1", ",", "x_ab_1", ",", "x_bb_1", ",", "shared_1", "=", "self", ".", "gen", "(", "images_a_xy_1", ",", "images_b_xy_1", ")", "\n", "\n", "if", "self", ".", "use_xy", ":", "\n", "        ", "x_ba_xy_0", "=", "torch", ".", "cat", "(", "(", "x_ba_0", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "x_ab_xy_0", "=", "torch", ".", "cat", "(", "(", "x_ab_0", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "x_ba_xy_1", "=", "torch", ".", "cat", "(", "(", "x_ba_1", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "x_ab_xy_1", "=", "torch", ".", "cat", "(", "(", "x_ab_1", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "", "else", ":", "\n", "        ", "x_ba_xy_0", "=", "x_ba_0", "\n", "x_ab_xy_0", "=", "x_ab_0", "\n", "x_ba_xy_1", "=", "x_ba_1", "\n", "x_ab_xy_1", "=", "x_ab_1", "\n", "", "x_bab_0", ",", "shared_bab_0", "=", "self", ".", "gen", ".", "forward_a2b", "(", "x_ba_xy_0", ")", "\n", "x_aba_0", ",", "shared_aba_0", "=", "self", ".", "gen", ".", "forward_b2a", "(", "x_ab_xy_0", ")", "\n", "x_bab_1", ",", "shared_bab_1", "=", "self", ".", "gen", ".", "forward_a2b", "(", "x_ba_xy_1", ")", "\n", "x_aba_1", ",", "shared_aba_1", "=", "self", ".", "gen", ".", "forward_b2a", "(", "x_ab_xy_1", ")", "\n", "\n", "x_ba", "=", "torch", ".", "cat", "(", "(", "x_ba_0", ",", "x_ba_1", ")", ",", "1", ")", "\n", "x_ab", "=", "torch", ".", "cat", "(", "(", "x_ab_0", ",", "x_ab_1", ")", ",", "1", ")", "\n", "\n", "outs_a", ",", "outs_b", "=", "self", ".", "dis", "(", "x_ba", ",", "x_ab", ")", "\n", "for", "it", ",", "(", "out_a", ",", "out_b", ")", "in", "enumerate", "(", "itertools", ".", "izip", "(", "outs_a", ",", "outs_b", ")", ")", ":", "\n", "      ", "outputs_a", "=", "nn", ".", "functional", ".", "sigmoid", "(", "out_a", ")", "\n", "outputs_b", "=", "nn", ".", "functional", ".", "sigmoid", "(", "out_b", ")", "\n", "all_ones", "=", "Variable", "(", "torch", ".", "ones", "(", "(", "outputs_a", ".", "size", "(", "0", ")", ")", ")", ".", "cuda", "(", "self", ".", "gpu", ")", ")", "\n", "if", "it", "==", "0", ":", "\n", "        ", "ad_loss_a", "=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "outputs_a", ",", "all_ones", ")", "\n", "ad_loss_b", "=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "outputs_b", ",", "all_ones", ")", "\n", "", "else", ":", "\n", "        ", "ad_loss_a", "+=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "outputs_a", ",", "all_ones", ")", "\n", "ad_loss_b", "+=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "outputs_b", ",", "all_ones", ")", "\n", "\n", "", "", "enc_loss", "=", "self", ".", "_compute_kl", "(", "shared_0", ")", "\n", "enc_bab_loss", "=", "self", ".", "_compute_kl", "(", "shared_bab_0", ")", "\n", "enc_aba_loss", "=", "self", ".", "_compute_kl", "(", "shared_aba_0", ")", "\n", "ll_loss_a", "=", "self", ".", "ll_loss_criterion_a", "(", "x_aa_0", ",", "images_a", "[", "0", "]", ")", "\n", "ll_loss_b", "=", "self", ".", "ll_loss_criterion_b", "(", "x_bb_0", ",", "images_b", "[", "0", "]", ")", "\n", "ll_loss_aba", "=", "self", ".", "ll_loss_criterion_a", "(", "x_aba_0", ",", "images_a", "[", "0", "]", ")", "\n", "ll_loss_bab", "=", "self", ".", "ll_loss_criterion_b", "(", "x_bab_0", ",", "images_b", "[", "0", "]", ")", "\n", "total_loss", "=", "hyperparameters", "[", "'gan_w'", "]", "*", "(", "ad_loss_a", "+", "ad_loss_b", ")", "+", "hyperparameters", "[", "'ll_direct_link_w'", "]", "*", "(", "ll_loss_a", "+", "ll_loss_b", ")", "+", "hyperparameters", "[", "'ll_cycle_link_w'", "]", "*", "(", "ll_loss_aba", "+", "ll_loss_bab", ")", "+", "hyperparameters", "[", "'kl_direct_link_w'", "]", "*", "(", "enc_loss", "+", "enc_loss", ")", "+", "hyperparameters", "[", "'kl_cycle_link_w'", "]", "*", "(", "enc_bab_loss", "+", "enc_aba_loss", ")", "\n", "total_loss", ".", "backward", "(", ")", "\n", "self", ".", "gen_opt", ".", "step", "(", ")", "\n", "self", ".", "gen_enc_loss", "=", "enc_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_enc_bab_loss", "=", "enc_bab_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_enc_aba_loss", "=", "enc_aba_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ad_loss_a", "=", "ad_loss_a", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ad_loss_b", "=", "ad_loss_b", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ll_loss_a", "=", "ll_loss_a", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ll_loss_b", "=", "ll_loss_b", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ll_loss_aba", "=", "ll_loss_aba", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ll_loss_bab", "=", "ll_loss_bab", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_total_loss", "=", "total_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "return", "(", "x_aa_0", ",", "x_ba_0", ",", "x_ab_0", ",", "x_bb_0", ",", "x_aba_0", ",", "x_bab_0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.dis_update": [[91, 147], ["cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.dis.zero_grad", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.gen", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.gen", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.dis", "enumerate", "loss.backward", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.dis_opt.step", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "itertools.izip", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "out_true_a.size", "out_fake_a.size", "Variable", "Variable", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "helpers._compute_true_acc", "helpers._compute_true_acc", "helpers._compute_fake_acc", "helpers._compute_fake_acc", "exec", "exec", "loss.data.cpu().numpy", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.functional.sigmoid.size", "torch.functional.sigmoid.size", "loss.data.cpu", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.step", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers._compute_true_acc", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers._compute_true_acc", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers._compute_fake_acc", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers._compute_fake_acc", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda"], ["", "def", "dis_update", "(", "self", ",", "images_a", ",", "images_b", ",", "hyperparameters", ")", ":", "\n", "    ", "self", ".", "dis", ".", "zero_grad", "(", ")", "\n", "if", "self", ".", "use_xy", ":", "\n", "        ", "images_a_xy_0", "=", "torch", ".", "cat", "(", "(", "images_a", "[", "0", "]", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "images_b_xy_0", "=", "torch", ".", "cat", "(", "(", "images_b", "[", "0", "]", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "images_a_xy_1", "=", "torch", ".", "cat", "(", "(", "images_a", "[", "1", "]", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "images_b_xy_1", "=", "torch", ".", "cat", "(", "(", "images_b", "[", "1", "]", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "images_a_xy", "=", "torch", ".", "cat", "(", "images_a", ",", "1", ")", "\n", "images_b_xy", "=", "torch", ".", "cat", "(", "images_b", ",", "1", ")", "\n", "", "else", ":", "\n", "        ", "images_a_xy_0", "=", "images_a", "[", "0", "]", "\n", "images_b_xy_0", "=", "images_b", "[", "0", "]", "\n", "images_a_xy_1", "=", "images_a", "[", "1", "]", "\n", "images_b_xy_1", "=", "images_b", "[", "1", "]", "\n", "", "x_aa_0", ",", "x_ba_0", ",", "x_ab_0", ",", "x_bb_0", ",", "shared_0", "=", "self", ".", "gen", "(", "images_a_xy_0", ",", "images_b_xy_0", ")", "\n", "x_aa_1", ",", "x_ba_1", ",", "x_ab_1", ",", "x_bb_1", ",", "shared_1", "=", "self", ".", "gen", "(", "images_a_xy_1", ",", "images_b_xy_1", ")", "\n", "\n", "\n", "x_ba", "=", "torch", ".", "cat", "(", "(", "x_ba_0", ",", "x_ba_1", ")", ",", "1", ")", "\n", "x_ab", "=", "torch", ".", "cat", "(", "(", "x_ab_0", ",", "x_ab_1", ")", ",", "1", ")", "\n", "\n", "data_a", "=", "torch", ".", "cat", "(", "(", "images_a_xy", ",", "x_ba", ")", ",", "0", ")", "\n", "data_b", "=", "torch", ".", "cat", "(", "(", "images_b_xy", ",", "x_ab", ")", ",", "0", ")", "\n", "res_a", ",", "res_b", "=", "self", ".", "dis", "(", "data_a", ",", "data_b", ")", "\n", "# res_true_a, res_true_b = self.dis(images_a,images_b)", "\n", "# res_fake_a, res_fake_b = self.dis(x_ba, x_ab)", "\n", "for", "it", ",", "(", "this_a", ",", "this_b", ")", "in", "enumerate", "(", "itertools", ".", "izip", "(", "res_a", ",", "res_b", ")", ")", ":", "\n", "      ", "out_a", "=", "nn", ".", "functional", ".", "sigmoid", "(", "this_a", ")", "\n", "out_b", "=", "nn", ".", "functional", ".", "sigmoid", "(", "this_b", ")", "\n", "out_true_a", ",", "out_fake_a", "=", "torch", ".", "split", "(", "out_a", ",", "out_a", ".", "size", "(", "0", ")", "//", "2", ",", "0", ")", "\n", "out_true_b", ",", "out_fake_b", "=", "torch", ".", "split", "(", "out_b", ",", "out_b", ".", "size", "(", "0", ")", "//", "2", ",", "0", ")", "\n", "out_true_n", "=", "out_true_a", ".", "size", "(", "0", ")", "\n", "out_fake_n", "=", "out_fake_a", ".", "size", "(", "0", ")", "\n", "all1", "=", "Variable", "(", "torch", ".", "ones", "(", "(", "out_true_n", ")", ")", ".", "cuda", "(", "self", ".", "gpu", ")", ")", "\n", "all0", "=", "Variable", "(", "torch", ".", "zeros", "(", "(", "out_fake_n", ")", ")", ".", "cuda", "(", "self", ".", "gpu", ")", ")", "\n", "ad_true_loss_a", "=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "out_true_a", ",", "all1", ")", "\n", "ad_true_loss_b", "=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "out_true_b", ",", "all1", ")", "\n", "ad_fake_loss_a", "=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "out_fake_a", ",", "all0", ")", "\n", "ad_fake_loss_b", "=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "out_fake_b", ",", "all0", ")", "\n", "if", "it", "==", "0", ":", "\n", "        ", "ad_loss_a", "=", "ad_true_loss_a", "+", "ad_fake_loss_a", "\n", "ad_loss_b", "=", "ad_true_loss_b", "+", "ad_fake_loss_b", "\n", "", "else", ":", "\n", "        ", "ad_loss_a", "+=", "ad_true_loss_a", "+", "ad_fake_loss_a", "\n", "ad_loss_b", "+=", "ad_true_loss_b", "+", "ad_fake_loss_b", "\n", "", "true_a_acc", "=", "_compute_true_acc", "(", "out_true_a", ")", "\n", "true_b_acc", "=", "_compute_true_acc", "(", "out_true_b", ")", "\n", "fake_a_acc", "=", "_compute_fake_acc", "(", "out_fake_a", ")", "\n", "fake_b_acc", "=", "_compute_fake_acc", "(", "out_fake_b", ")", "\n", "exec", "(", "'self.dis_true_acc_%d = 0.5 * (true_a_acc + true_b_acc)'", "%", "it", ")", "\n", "exec", "(", "'self.dis_fake_acc_%d = 0.5 * (fake_a_acc + fake_b_acc)'", "%", "it", ")", "\n", "", "loss", "=", "hyperparameters", "[", "'gan_w'", "]", "*", "(", "ad_loss_a", "+", "ad_loss_b", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "dis_opt", ".", "step", "(", ")", "\n", "self", ".", "dis_loss", "=", "loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.assemble_outputs": [[148, 159], ["cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.normalize_image", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.normalize_image", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.normalize_image", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.normalize_image", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.normalize_image", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.normalize_image", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.normalize_image", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.normalize_image", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image"], ["", "def", "assemble_outputs", "(", "self", ",", "images_a", ",", "images_b", ",", "network_outputs", ")", ":", "\n", "    ", "images_a", "=", "self", ".", "normalize_image", "(", "images_a", ")", "\n", "images_b", "=", "self", ".", "normalize_image", "(", "images_b", ")", "\n", "x_aa", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "0", "]", ")", "\n", "x_ba", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "1", "]", ")", "\n", "x_ab", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "2", "]", ")", "\n", "x_bb", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "3", "]", ")", "\n", "x_aba", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "4", "]", ")", "\n", "x_bab", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "5", "]", ")", "\n", "return", "torch", ".", "cat", "(", "(", "images_a", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_aa", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_ab", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_aba", "[", "0", ":", "1", ",", ":", ":", "]", ",", "\n", "images_b", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_bb", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_ba", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_bab", "[", "0", ":", "1", ",", ":", ":", "]", ")", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.resume": [[160, 171], ["os.path.dirname", "helpers.get_model_list", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.gen.load_state_dict", "int", "helpers.get_model_list", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.dis.load_state_dict", "print", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers.get_model_list", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers.get_model_list"], ["", "def", "resume", "(", "self", ",", "snapshot_prefix", ")", ":", "\n", "    ", "dirname", "=", "os", ".", "path", ".", "dirname", "(", "snapshot_prefix", ")", "\n", "last_model_name", "=", "get_model_list", "(", "dirname", ",", "\"gen\"", ")", "\n", "if", "last_model_name", "is", "None", ":", "\n", "      ", "return", "0", "\n", "", "self", ".", "gen", ".", "load_state_dict", "(", "torch", ".", "load", "(", "last_model_name", ")", ")", "\n", "iterations", "=", "int", "(", "last_model_name", "[", "-", "12", ":", "-", "4", "]", ")", "\n", "last_model_name", "=", "get_model_list", "(", "dirname", ",", "\"dis\"", ")", "\n", "self", ".", "dis", ".", "load_state_dict", "(", "torch", ".", "load", "(", "last_model_name", ")", ")", "\n", "print", "(", "'Resume from iteration %d'", "%", "iterations", ")", "\n", "return", "iterations", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.save": [[172, 177], ["torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.gen.state_dict", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.dis.state_dict"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save"], ["", "def", "save", "(", "self", ",", "snapshot_prefix", ",", "iterations", ")", ":", "\n", "    ", "gen_filename", "=", "'%s_gen_%08d.pkl'", "%", "(", "snapshot_prefix", ",", "iterations", "+", "1", ")", "\n", "dis_filename", "=", "'%s_dis_%08d.pkl'", "%", "(", "snapshot_prefix", ",", "iterations", "+", "1", ")", "\n", "torch", ".", "save", "(", "self", ".", "gen", ".", "state_dict", "(", ")", ",", "gen_filename", ")", "\n", "torch", ".", "save", "(", "self", ".", "dis", ".", "state_dict", "(", ")", ",", "dis_filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.cuda": [[178, 183], ["cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.dis.cuda", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.gen.cuda", "cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.xy.cuda"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda"], ["", "def", "cuda", "(", "self", ",", "gpu", ")", ":", "\n", "    ", "self", ".", "gpu", "=", "gpu", "\n", "self", ".", "dis", ".", "cuda", "(", "gpu", ")", "\n", "self", ".", "gen", ".", "cuda", "(", "gpu", ")", "\n", "self", ".", "xy", "=", "self", ".", "xy", ".", "cuda", "(", "gpu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_dual_frames_discriminator.COCOGANGAMESDUALTrainer.normalize_image": [[184, 186], ["None"], "methods", ["None"], ["", "def", "normalize_image", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "x", "[", ":", ",", "0", ":", "3", ",", ":", ",", ":", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_old.COCOGANGAMESTrainer.__init__": [[17, 36], ["torch.Module.__init__", "exec", "exec", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "cocogan_trainer_games_old.COCOGANGAMESTrainer.dis.apply", "cocogan_trainer_games_old.COCOGANGAMESTrainer.gen.apply", "torch.nn.L1Loss", "torch.nn.L1Loss", "torch.nn.L1Loss", "torch.nn.L1Loss", "torch.nn.L1Loss", "torch.nn.L1Loss", "torch.nn.L1Loss", "torch.nn.L1Loss", "cocogan_trainer_games_old.COCOGANGAMESTrainer._create_xy_image", "cocogan_trainer_games_old.COCOGANGAMESTrainer.unsqueeze().expand", "cocogan_trainer_games_old.COCOGANGAMESTrainer.dis.parameters", "cocogan_trainer_games_old.COCOGANGAMESTrainer.gen.parameters", "cocogan_trainer_games_old.COCOGANGAMESTrainer.size", "cocogan_trainer_games_old.COCOGANGAMESTrainer.size", "cocogan_trainer_games_old.COCOGANGAMESTrainer.size", "cocogan_trainer_games_old.COCOGANGAMESTrainer.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer._create_xy_image"], ["  ", "def", "__init__", "(", "self", ",", "hyperparameters", ")", ":", "\n", "    ", "super", "(", "COCOGANGAMESTrainer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "use_cuda", "=", "False", "\n", "lr", "=", "hyperparameters", "[", "'lr'", "]", "\n", "# Initiate the networks", "\n", "exec", "(", "'self.dis = %s(hyperparameters[\\'dis\\'])'", "%", "hyperparameters", "[", "'dis'", "]", "[", "'name'", "]", ")", "\n", "exec", "(", "'self.gen = %s(hyperparameters[\\'gen\\'])'", "%", "hyperparameters", "[", "'gen'", "]", "[", "'name'", "]", ")", "\n", "# Setup the optimizers", "\n", "self", ".", "dis_opt", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "dis", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "weight_decay", "=", "0.0001", ")", "\n", "self", ".", "gen_opt", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "gen", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "weight_decay", "=", "0.0001", ")", "\n", "# Network weight initialization", "\n", "self", ".", "dis", ".", "apply", "(", "gaussian_weights_init", ")", "\n", "self", ".", "gen", ".", "apply", "(", "gaussian_weights_init", ")", "\n", "# Setup the loss function for training", "\n", "self", ".", "ll_loss_criterion_a", "=", "torch", ".", "nn", ".", "L1Loss", "(", ")", "\n", "self", ".", "ll_loss_criterion_b", "=", "torch", ".", "nn", ".", "L1Loss", "(", ")", "\n", "xy", "=", "self", ".", "_create_xy_image", "(", ")", "\n", "self", ".", "xy", "=", "xy", ".", "unsqueeze", "(", "0", ")", ".", "expand", "(", "hyperparameters", "[", "'batch_size'", "]", ",", "xy", ".", "size", "(", "0", ")", ",", "xy", ".", "size", "(", "1", ")", ",", "xy", ".", "size", "(", "2", ")", ")", "\n", "self", ".", "use_xy", "=", "1", "==", "hyperparameters", "[", "'gen'", "]", "[", "'use_xy'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_old.COCOGANGAMESTrainer._create_xy_image": [[37, 43], ["list", "np.transpose", "Variable", "itertools.product", "float", "np.float32", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "range", "range", "np.reshape", "np.asarray"], "methods", ["None"], ["", "def", "_create_xy_image", "(", "self", ",", "width", "=", "256", ")", ":", "\n", "    ", "coordinates", "=", "list", "(", "itertools", ".", "product", "(", "range", "(", "width", ")", ",", "range", "(", "width", ")", ")", ")", "\n", "arr", "=", "(", "np", ".", "reshape", "(", "np", ".", "asarray", "(", "coordinates", ")", ",", "newshape", "=", "[", "width", ",", "width", ",", "2", "]", ")", "-", "width", "/", "2", ")", "/", "float", "(", "(", "width", "/", "2", ")", ")", "\n", "new_map", "=", "np", ".", "transpose", "(", "np", ".", "float32", "(", "arr", ")", ",", "[", "2", ",", "0", ",", "1", "]", ")", "\n", "xy", "=", "Variable", "(", "torch", ".", "from_numpy", "(", "new_map", ")", ",", "requires_grad", "=", "False", ")", "\n", "return", "xy", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_old.COCOGANGAMESTrainer._compute_kl": [[44, 53], ["torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.mean", "torch.mean", "torch.mean", "torch.mean"], "methods", ["None"], ["", "def", "_compute_kl", "(", "self", ",", "mu", ")", ":", "\n", "# def _compute_kl(self, mu, sd):", "\n", "# mu_2 = torch.pow(mu, 2)", "\n", "# sd_2 = torch.pow(sd, 2)", "\n", "# encoding_loss = (mu_2 + sd_2 - torch.log(sd_2)).sum() / mu_2.size(0)", "\n", "# return encoding_loss", "\n", "    ", "mu_2", "=", "torch", ".", "pow", "(", "mu", ",", "2", ")", "\n", "encoding_loss", "=", "torch", ".", "mean", "(", "mu_2", ")", "\n", "return", "encoding_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_old.COCOGANGAMESTrainer.gen_update": [[54, 110], ["cocogan_trainer_games_old.COCOGANGAMESTrainer.gen", "cocogan_trainer_games_old.COCOGANGAMESTrainer.gen.forward_a2b", "cocogan_trainer_games_old.COCOGANGAMESTrainer.gen.forward_b2a", "cocogan_trainer_games_old.COCOGANGAMESTrainer.dis", "enumerate", "cocogan_trainer_games_old.COCOGANGAMESTrainer._compute_kl", "cocogan_trainer_games_old.COCOGANGAMESTrainer._compute_kl", "cocogan_trainer_games_old.COCOGANGAMESTrainer._compute_kl", "cocogan_trainer_games_old.COCOGANGAMESTrainer.ll_loss_criterion_a", "cocogan_trainer_games_old.COCOGANGAMESTrainer.ll_loss_criterion_b", "cocogan_trainer_games_old.COCOGANGAMESTrainer.ll_loss_criterion_a", "cocogan_trainer_games_old.COCOGANGAMESTrainer.ll_loss_criterion_b", "cocogan_trainer_games_old.COCOGANGAMESTrainer.gen.zero_grad", "total_loss.backward", "cocogan_trainer_games_old.COCOGANGAMESTrainer.gen_opt.step", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "itertools.izip", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "Variable", "cocogan_trainer_games_old.COCOGANGAMESTrainer.data.cpu().numpy", "cocogan_trainer_games_old.COCOGANGAMESTrainer.data.cpu().numpy", "cocogan_trainer_games_old.COCOGANGAMESTrainer.data.cpu().numpy", "torch.functional.binary_cross_entropy.data.cpu().numpy", "torch.functional.binary_cross_entropy.data.cpu().numpy", "cocogan_trainer_games_old.COCOGANGAMESTrainer.data.cpu().numpy", "cocogan_trainer_games_old.COCOGANGAMESTrainer.data.cpu().numpy", "cocogan_trainer_games_old.COCOGANGAMESTrainer.data.cpu().numpy", "cocogan_trainer_games_old.COCOGANGAMESTrainer.data.cpu().numpy", "total_loss.data.cpu().numpy", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "cocogan_trainer_games_old.COCOGANGAMESTrainer.data.cpu", "cocogan_trainer_games_old.COCOGANGAMESTrainer.data.cpu", "cocogan_trainer_games_old.COCOGANGAMESTrainer.data.cpu", "torch.functional.binary_cross_entropy.data.cpu", "torch.functional.binary_cross_entropy.data.cpu", "cocogan_trainer_games_old.COCOGANGAMESTrainer.data.cpu", "cocogan_trainer_games_old.COCOGANGAMESTrainer.data.cpu", "cocogan_trainer_games_old.COCOGANGAMESTrainer.data.cpu", "cocogan_trainer_games_old.COCOGANGAMESTrainer.data.cpu", "total_loss.data.cpu", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.functional.sigmoid.size"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOResGen2.forward_a2b", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOResGen2.forward_b2a", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer._compute_kl", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer._compute_kl", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer._compute_kl", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.step", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda"], ["", "def", "gen_update", "(", "self", ",", "images_a", ",", "images_b", ",", "hyperparameters", ")", ":", "\n", "    ", "if", "self", ".", "use_xy", ":", "\n", "        ", "images_a_xy", "=", "torch", ".", "cat", "(", "(", "images_a", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "images_b_xy", "=", "torch", ".", "cat", "(", "(", "images_b", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "", "else", ":", "\n", "        ", "images_a_xy", "=", "images_a", "\n", "images_b_xy", "=", "images_b", "\n", "", "x_aa", ",", "x_ba", ",", "x_ab", ",", "x_bb", ",", "shared", "=", "self", ".", "gen", "(", "images_a_xy", ",", "images_b_xy", ")", "\n", "\n", "if", "self", ".", "use_xy", ":", "\n", "        ", "x_ba_xy", "=", "torch", ".", "cat", "(", "(", "x_ba", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "x_ab_xy", "=", "torch", ".", "cat", "(", "(", "x_ab", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "", "else", ":", "\n", "        ", "x_ba_xy", "=", "x_ba", "\n", "x_ab_xy", "=", "x_ab", "\n", "", "x_bab", ",", "shared_bab", "=", "self", ".", "gen", ".", "forward_a2b", "(", "x_ba_xy", ")", "\n", "x_aba", ",", "shared_aba", "=", "self", ".", "gen", ".", "forward_b2a", "(", "x_ab_xy", ")", "\n", "outs_a", ",", "outs_b", "=", "self", ".", "dis", "(", "x_ba", ",", "x_ab", ")", "\n", "for", "it", ",", "(", "out_a", ",", "out_b", ")", "in", "enumerate", "(", "itertools", ".", "izip", "(", "outs_a", ",", "outs_b", ")", ")", ":", "\n", "      ", "outputs_a", "=", "nn", ".", "functional", ".", "sigmoid", "(", "out_a", ")", "\n", "outputs_b", "=", "nn", ".", "functional", ".", "sigmoid", "(", "out_b", ")", "\n", "all_ones", "=", "Variable", "(", "torch", ".", "ones", "(", "(", "outputs_a", ".", "size", "(", "0", ")", ")", ")", ".", "cuda", "(", "self", ".", "gpu", ")", ")", "\n", "if", "it", "==", "0", ":", "\n", "        ", "ad_loss_a", "=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "outputs_a", ",", "all_ones", ")", "\n", "ad_loss_b", "=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "outputs_b", ",", "all_ones", ")", "\n", "", "else", ":", "\n", "        ", "ad_loss_a", "+=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "outputs_a", ",", "all_ones", ")", "\n", "ad_loss_b", "+=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "outputs_b", ",", "all_ones", ")", "\n", "\n", "", "", "enc_loss", "=", "self", ".", "_compute_kl", "(", "shared", ")", "\n", "enc_bab_loss", "=", "self", ".", "_compute_kl", "(", "shared_bab", ")", "\n", "enc_aba_loss", "=", "self", ".", "_compute_kl", "(", "shared_aba", ")", "\n", "ll_loss_a", "=", "self", ".", "ll_loss_criterion_a", "(", "x_aa", ",", "images_a", ")", "\n", "ll_loss_b", "=", "self", ".", "ll_loss_criterion_b", "(", "x_bb", ",", "images_b", ")", "\n", "ll_loss_aba", "=", "self", ".", "ll_loss_criterion_a", "(", "x_aba", ",", "images_a", ")", "\n", "ll_loss_bab", "=", "self", ".", "ll_loss_criterion_b", "(", "x_bab", ",", "images_b", ")", "\n", "total_loss", "=", "hyperparameters", "[", "'gan_w'", "]", "*", "(", "ad_loss_a", "+", "ad_loss_b", ")", "+", "hyperparameters", "[", "'ll_direct_link_w'", "]", "*", "(", "ll_loss_a", "+", "ll_loss_b", ")", "+", "hyperparameters", "[", "'ll_cycle_link_w'", "]", "*", "(", "ll_loss_aba", "+", "ll_loss_bab", ")", "+", "hyperparameters", "[", "'kl_direct_link_w'", "]", "*", "(", "enc_loss", "+", "enc_loss", ")", "+", "hyperparameters", "[", "'kl_cycle_link_w'", "]", "*", "(", "enc_bab_loss", "+", "enc_aba_loss", ")", "\n", "self", ".", "gen", ".", "zero_grad", "(", ")", "\n", "total_loss", ".", "backward", "(", ")", "\n", "self", ".", "gen_opt", ".", "step", "(", ")", "\n", "self", ".", "gen_enc_loss", "=", "enc_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_enc_bab_loss", "=", "enc_bab_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_enc_aba_loss", "=", "enc_aba_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ad_loss_a", "=", "ad_loss_a", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ad_loss_b", "=", "ad_loss_b", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ll_loss_a", "=", "ll_loss_a", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ll_loss_b", "=", "ll_loss_b", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ll_loss_aba", "=", "ll_loss_aba", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ll_loss_bab", "=", "ll_loss_bab", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_total_loss", "=", "total_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "#pdb.set_trace()", "\n", "return", "(", "x_aa", ",", "x_ba", ",", "x_ab", ",", "x_bb", ",", "x_aba", ",", "x_bab", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_old.COCOGANGAMESTrainer.dis_update": [[111, 169], ["cocogan_trainer_games_old.COCOGANGAMESTrainer.gen", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "cocogan_trainer_games_old.COCOGANGAMESTrainer.dis", "cocogan_trainer_games_old.COCOGANGAMESTrainer.dis", "enumerate", "cocogan_trainer_games_old.COCOGANGAMESTrainer.dis.zero_grad", "loss.backward", "cocogan_trainer_games_old.COCOGANGAMESTrainer.dis_opt.step", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "itertools.izip", "out_true_a.size", "out_fake_a.size", "Variable", "Variable", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "helpers._compute_true_acc", "helpers._compute_true_acc", "helpers._compute_fake_acc", "helpers._compute_fake_acc", "exec", "exec", "loss.data.cpu().numpy", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "cocogan_trainer_games_old.COCOGANGAMESTrainer.js_regularization", "cocogan_trainer_games_old.COCOGANGAMESTrainer.js_regularization", "loss.data.cpu", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.step", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers._compute_true_acc", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers._compute_true_acc", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers._compute_fake_acc", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers._compute_fake_acc", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer.js_regularization", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer.js_regularization"], ["", "def", "dis_update", "(", "self", ",", "images_a", ",", "images_b", ",", "hyperparameters", ")", ":", "\n", "    ", "if", "self", ".", "use_xy", ":", "\n", "        ", "images_a_xy", "=", "torch", ".", "cat", "(", "(", "images_a", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "images_b_xy", "=", "torch", ".", "cat", "(", "(", "images_b", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "", "else", ":", "\n", "        ", "images_a_xy", "=", "images_a", "\n", "images_b_xy", "=", "images_b", "\n", "", "x_aa", ",", "x_ba", ",", "x_ab", ",", "x_bb", ",", "shared", "=", "self", ".", "gen", "(", "images_a_xy", ",", "images_b_xy", ")", "\n", "\n", "data_a", "=", "torch", ".", "cat", "(", "(", "images_a", ",", "x_ba", ")", ",", "0", ")", "\n", "data_b", "=", "torch", ".", "cat", "(", "(", "images_b", ",", "x_ab", ")", ",", "0", ")", "\n", "#res_a, res_b = self.dis(data_a,data_b)", "\n", "res_true_a", ",", "res_true_b", "=", "self", ".", "dis", "(", "images_a", ",", "images_b", ")", "\n", "res_fake_a", ",", "res_fake_b", "=", "self", ".", "dis", "(", "x_ba", ",", "x_ab", ")", "\n", "\n", "# res_true_a, res_true_b = self.dis(images_a,images_b)", "\n", "# res_fake_a, res_fake_b = self.dis(x_ba, x_ab)", "\n", "if", "0", "!=", "hyperparameters", "[", "'gamma_js_regularization'", "]", ":", "\n", "      ", "js_reg_a", "=", "0", "\n", "js_reg_b", "=", "0", "\n", "", "for", "it", ",", "(", "this_true_a", ",", "this_true_b", ",", "this_fake_a", ",", "this_fake_b", ",", "in_a", ",", "in_b", ",", "fake_a", ",", "fake_b", ")", "in", "enumerate", "(", "itertools", ".", "izip", "(", "res_true_a", ",", "res_true_b", ",", "res_fake_a", ",", "res_fake_b", ",", "images_a", ",", "images_b", ",", "x_ba", ",", "x_ab", ")", ")", ":", "\n", "      ", "out_true_a", ",", "out_fake_a", "=", "nn", ".", "functional", ".", "sigmoid", "(", "this_true_a", ")", ",", "nn", ".", "functional", ".", "sigmoid", "(", "this_fake_a", ")", "\n", "out_true_b", ",", "out_fake_b", "=", "nn", ".", "functional", ".", "sigmoid", "(", "this_true_b", ")", ",", "nn", ".", "functional", ".", "sigmoid", "(", "this_fake_b", ")", "\n", "\n", "out_true_n", "=", "out_true_a", ".", "size", "(", "0", ")", "\n", "out_fake_n", "=", "out_fake_a", ".", "size", "(", "0", ")", "\n", "all1", "=", "Variable", "(", "torch", ".", "ones", "(", "(", "out_true_n", ")", ")", ".", "cuda", "(", "self", ".", "gpu", ")", ")", "\n", "all0", "=", "Variable", "(", "torch", ".", "zeros", "(", "(", "out_fake_n", ")", ")", ".", "cuda", "(", "self", ".", "gpu", ")", ")", "\n", "ad_true_loss_a", "=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "out_true_a", ",", "all1", ")", "\n", "ad_true_loss_b", "=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "out_true_b", ",", "all1", ")", "\n", "ad_fake_loss_a", "=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "out_fake_a", ",", "all0", ")", "\n", "ad_fake_loss_b", "=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "out_fake_b", ",", "all0", ")", "\n", "if", "it", "==", "0", ":", "\n", "        ", "ad_loss_a", "=", "ad_true_loss_a", "+", "ad_fake_loss_a", "\n", "ad_loss_b", "=", "ad_true_loss_b", "+", "ad_fake_loss_b", "\n", "", "else", ":", "\n", "        ", "ad_loss_a", "+=", "ad_true_loss_a", "+", "ad_fake_loss_a", "\n", "ad_loss_b", "+=", "ad_true_loss_b", "+", "ad_fake_loss_b", "\n", "", "true_a_acc", "=", "_compute_true_acc", "(", "out_true_a", ")", "\n", "true_b_acc", "=", "_compute_true_acc", "(", "out_true_b", ")", "\n", "fake_a_acc", "=", "_compute_fake_acc", "(", "out_fake_a", ")", "\n", "fake_b_acc", "=", "_compute_fake_acc", "(", "out_fake_b", ")", "\n", "exec", "(", "'self.dis_true_acc_%d = 0.5 * (true_a_acc + true_b_acc)'", "%", "it", ")", "\n", "exec", "(", "'self.dis_fake_acc_%d = 0.5 * (fake_a_acc + fake_b_acc)'", "%", "it", ")", "\n", "\n", "if", "0", "!=", "hyperparameters", "[", "'gamma_js_regularization'", "]", ":", "\n", "        ", "js_reg_a", "+=", "self", ".", "js_regularization", "(", "this_true_a", ",", "out_true_a", ",", "in_a", ",", "out_fake_a", ",", "this_fake_a", ",", "fake_a", ")", "\n", "js_reg_b", "+=", "self", ".", "js_regularization", "(", "this_true_b", ",", "out_true_b", ",", "in_b", ",", "out_fake_b", ",", "this_fake_b", ",", "fake_b", ")", "\n", "\n", "", "", "d_loss", "=", "(", "ad_loss_a", "+", "ad_loss_b", ")", "*", "hyperparameters", "[", "'gamma_js_regularization'", "]", "/", "2.", "\n", "if", "0", "!=", "hyperparameters", "[", "'gamma_js_regularization'", "]", ":", "\n", "      ", "d_loss", "+=", "(", "js_reg_a", "+", "js_reg_b", ")", "*", "(", "hyperparameters", "[", "'gamma_js_regularization'", "]", "/", "2.", ")", "\n", "", "loss", "=", "hyperparameters", "[", "'gan_w'", "]", "*", "d_loss", "\n", "self", ".", "dis", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "dis_opt", ".", "step", "(", ")", "\n", "self", ".", "dis_loss", "=", "loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_old.COCOGANGAMESTrainer.assemble_outputs": [[170, 182], ["cocogan_trainer_games_old.COCOGANGAMESTrainer.normalize_image", "cocogan_trainer_games_old.COCOGANGAMESTrainer.normalize_image", "cocogan_trainer_games_old.COCOGANGAMESTrainer.normalize_image", "cocogan_trainer_games_old.COCOGANGAMESTrainer.normalize_image", "cocogan_trainer_games_old.COCOGANGAMESTrainer.normalize_image", "cocogan_trainer_games_old.COCOGANGAMESTrainer.normalize_image", "cocogan_trainer_games_old.COCOGANGAMESTrainer.normalize_image", "cocogan_trainer_games_old.COCOGANGAMESTrainer.normalize_image", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image"], ["", "def", "assemble_outputs", "(", "self", ",", "images_a", ",", "images_b", ",", "network_outputs", ")", ":", "\n", "    ", "images_a", "=", "self", ".", "normalize_image", "(", "images_a", ")", "\n", "images_b", "=", "self", ".", "normalize_image", "(", "images_b", ")", "\n", "x_aa", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "0", "]", ")", "\n", "x_ba", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "1", "]", ")", "\n", "x_ab", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "2", "]", ")", "\n", "x_bb", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "3", "]", ")", "\n", "x_aba", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "4", "]", ")", "\n", "x_bab", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "5", "]", ")", "\n", "#pdb.set_trace()", "\n", "return", "torch", ".", "cat", "(", "(", "images_a", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_aa", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_ab", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_aba", "[", "0", ":", "1", ",", ":", ":", "]", ",", "\n", "images_b", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_bb", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_ba", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_bab", "[", "0", ":", "1", ",", ":", ":", "]", ")", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_old.COCOGANGAMESTrainer.resume": [[183, 194], ["os.path.dirname", "helpers.get_model_list", "cocogan_trainer_games_old.COCOGANGAMESTrainer.gen.load_state_dict", "int", "helpers.get_model_list", "cocogan_trainer_games_old.COCOGANGAMESTrainer.dis.load_state_dict", "print", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers.get_model_list", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers.get_model_list"], ["", "def", "resume", "(", "self", ",", "snapshot_prefix", ")", ":", "\n", "    ", "dirname", "=", "os", ".", "path", ".", "dirname", "(", "snapshot_prefix", ")", "\n", "last_model_name", "=", "get_model_list", "(", "dirname", ",", "\"gen\"", ")", "\n", "if", "last_model_name", "is", "None", ":", "\n", "      ", "return", "0", "\n", "", "self", ".", "gen", ".", "load_state_dict", "(", "torch", ".", "load", "(", "last_model_name", ")", ")", "\n", "iterations", "=", "int", "(", "last_model_name", "[", "-", "12", ":", "-", "4", "]", ")", "\n", "last_model_name", "=", "get_model_list", "(", "dirname", ",", "\"dis\"", ")", "\n", "self", ".", "dis", ".", "load_state_dict", "(", "torch", ".", "load", "(", "last_model_name", ")", ")", "\n", "print", "(", "'Resume from iteration %d'", "%", "iterations", ")", "\n", "return", "iterations", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_old.COCOGANGAMESTrainer.save": [[195, 200], ["torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "cocogan_trainer_games_old.COCOGANGAMESTrainer.gen.state_dict", "cocogan_trainer_games_old.COCOGANGAMESTrainer.dis.state_dict"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save"], ["", "def", "save", "(", "self", ",", "snapshot_prefix", ",", "iterations", ")", ":", "\n", "    ", "gen_filename", "=", "'%s_gen_%08d.pkl'", "%", "(", "snapshot_prefix", ",", "iterations", "+", "1", ")", "\n", "dis_filename", "=", "'%s_dis_%08d.pkl'", "%", "(", "snapshot_prefix", ",", "iterations", "+", "1", ")", "\n", "torch", ".", "save", "(", "self", ".", "gen", ".", "state_dict", "(", ")", ",", "gen_filename", ")", "\n", "torch", ".", "save", "(", "self", ".", "dis", ".", "state_dict", "(", ")", ",", "dis_filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_old.COCOGANGAMESTrainer.cuda": [[201, 207], ["cocogan_trainer_games_old.COCOGANGAMESTrainer.dis.cuda", "cocogan_trainer_games_old.COCOGANGAMESTrainer.gen.cuda", "cocogan_trainer_games_old.COCOGANGAMESTrainer.xy.cuda"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda"], ["", "def", "cuda", "(", "self", ",", "gpu", ")", ":", "\n", "    ", "self", ".", "gpu", "=", "gpu", "\n", "self", ".", "dis", ".", "cuda", "(", "gpu", ")", "\n", "self", ".", "gen", ".", "cuda", "(", "gpu", ")", "\n", "self", ".", "xy", "=", "self", ".", "xy", ".", "cuda", "(", "gpu", ")", "\n", "self", ".", "use_cuda", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_old.COCOGANGAMESTrainer.normalize_image": [[208, 210], ["None"], "methods", ["None"], ["", "def", "normalize_image", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "x", "[", ":", ",", "0", ":", "3", ",", ":", ",", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_old.COCOGANGAMESTrainer.js_regularization": [[211, 229], ["grad_D1_logits.view.view.view", "grad_D2_logits.view.view.view", "grad_D1_logits.view.view.norm", "grad_D2_logits.view.view.norm", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "D1.size", "D2.size", "grad_D1_logits_norm.size", "D1.size", "grad_D2_logits_norm.size", "D2.size", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "D1_logits.size", "D2_logits.size", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "D1_logits.size", "D2_logits.size"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda"], ["", "def", "js_regularization", "(", "self", ",", "D1_logits", ",", "D1", ",", "D1_arg", ",", "D2_logits", ",", "D2", ",", "D2_arg", ")", ":", "\n", "    ", "grad_D1_logits", "=", "autograd", ".", "grad", "(", "outputs", "=", "D1_logits", ",", "inputs", "=", "D1_arg", ",", "\n", "grad_outputs", "=", "torch", ".", "ones", "(", "D1_logits", ".", "size", "(", ")", ")", ".", "cuda", "(", "self", ".", "gpu", ")", "if", "self", ".", "use_cuda", "else", "torch", ".", "ones", "(", "D1_logits", ".", "size", "(", ")", ")", ",", "\n", "create_graph", "=", "True", ",", "retain_graph", "=", "True", ",", "only_inputs", "=", "True", ")", "[", "0", "]", "\n", "grad_D2_logits", "=", "autograd", ".", "grad", "(", "outputs", "=", "D2_logits", ",", "inputs", "=", "D2_arg", ",", "\n", "grad_outputs", "=", "torch", ".", "ones", "(", "D2_logits", ".", "size", "(", ")", ")", ".", "cuda", "(", "self", ".", "gpu", ")", "if", "self", ".", "use_cuda", "else", "torch", ".", "ones", "(", "D2_logits", ".", "size", "(", ")", ")", ",", "\n", "create_graph", "=", "True", ",", "retain_graph", "=", "True", ",", "only_inputs", "=", "True", ")", "[", "0", "]", "\n", "grad_D1_logits", "=", "grad_D1_logits", ".", "view", "(", "D1", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "grad_D2_logits", "=", "grad_D2_logits", ".", "view", "(", "D2", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "grad_D1_logits", ".", "norm", "(", "2", ",", "dim", "=", "1", ")", "\n", "grad_D2_logits", ".", "norm", "(", "2", ",", "dim", "=", "1", ")", "\n", "assert", "grad_D1_logits_norm", ".", "size", "(", ")", "==", "D1", ".", "size", "(", ")", "\n", "assert", "grad_D2_logits_norm", ".", "size", "(", ")", "==", "D2", ".", "size", "(", ")", "\n", "\n", "reg_D1", "=", "torch", ".", "mul", "(", "torch", ".", "pow", "(", "1.0", "-", "D1", ",", "2", ")", ",", "torch", ".", "pow", "(", "grad_D1_logits_norm", ",", "2", ")", ")", "\n", "reg_D2", "=", "torch", ".", "mul", "(", "torch", ".", "pow", "(", "D2", ",", "2", ")", ",", "torch", ".", "pow", "(", "grad_D2_logits_norm", ",", "2", ")", ")", "\n", "disc_regularizer", "=", "torch", ".", "mean", "(", "reg_D1", "+", "reg_D2", ")", "\n", "return", "disc_regularizer", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOSharedDis.__init__": [[9, 19], ["nn.Module.__init__", "cocogan_nets.COCOSharedDis._make_front_net", "cocogan_nets.COCOSharedDis._make_front_net", "cocogan_nets.COCOSharedDis._make_shared_net"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOSharedDis._make_front_net", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOSharedDis._make_front_net", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOSharedDis._make_shared_net"], ["  ", "def", "__init__", "(", "self", ",", "params", ")", ":", "\n", "    ", "super", "(", "COCOSharedDis", ",", "self", ")", ".", "__init__", "(", ")", "\n", "ch", "=", "params", "[", "'ch'", "]", "\n", "input_dim_a", "=", "params", "[", "'input_dim_a'", "]", "\n", "input_dim_b", "=", "params", "[", "'input_dim_b'", "]", "\n", "n_front_layer", "=", "params", "[", "'n_front_layer'", "]", "\n", "n_shared_layer", "=", "params", "[", "'n_shared_layer'", "]", "\n", "self", ".", "model_A", ",", "tch", "=", "self", ".", "_make_front_net", "(", "ch", ",", "input_dim_a", ",", "n_front_layer", ",", "n_shared_layer", "==", "0", ")", "\n", "self", ".", "model_B", ",", "tch", "=", "self", ".", "_make_front_net", "(", "ch", ",", "input_dim_b", ",", "n_front_layer", ",", "n_shared_layer", "==", "0", ")", "\n", "self", ".", "model_S", "=", "self", ".", "_make_shared_net", "(", "tch", ",", "n_shared_layer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOSharedDis._make_front_net": [[20, 30], ["range", "common_net.LeakyReLUConv2d", "nn.Sequential", "common_net.LeakyReLUConv2d", "nn.Conv2d"], "methods", ["None"], ["", "def", "_make_front_net", "(", "self", ",", "ch", ",", "input_dim", ",", "n_layer", ",", "add_classifier_layer", "=", "False", ")", ":", "\n", "    ", "model", "=", "[", "]", "\n", "model", "+=", "[", "LeakyReLUConv2d", "(", "input_dim", ",", "ch", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ")", "]", "#16", "\n", "tch", "=", "ch", "\n", "for", "i", "in", "range", "(", "1", ",", "n_layer", ")", ":", "\n", "      ", "model", "+=", "[", "LeakyReLUConv2d", "(", "tch", ",", "tch", "*", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "]", "# 8", "\n", "tch", "*=", "2", "\n", "", "if", "add_classifier_layer", ":", "\n", "      ", "model", "+=", "[", "nn", ".", "Conv2d", "(", "tch", ",", "1", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "]", "# 1", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "model", ")", ",", "tch", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOSharedDis._make_shared_net": [[31, 41], ["range", "nn.Sequential", "nn.Sequential", "nn.Conv2d", "common_net.LeakyReLUConv2d"], "methods", ["None"], ["", "def", "_make_shared_net", "(", "self", ",", "ch", ",", "n_layer", ")", ":", "\n", "    ", "model", "=", "[", "]", "\n", "if", "n_layer", "==", "0", ":", "\n", "      ", "return", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "", "tch", "=", "ch", "\n", "for", "i", "in", "range", "(", "0", ",", "n_layer", ")", ":", "\n", "      ", "model", "+=", "[", "LeakyReLUConv2d", "(", "tch", ",", "tch", "*", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "]", "# 8", "\n", "tch", "*=", "2", "\n", "", "model", "+=", "[", "nn", ".", "Conv2d", "(", "tch", ",", "1", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "]", "# 1", "\n", "return", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOSharedDis.cuda": [[42, 46], ["cocogan_nets.COCOSharedDis.model_A.cuda", "cocogan_nets.COCOSharedDis.model_B.cuda", "cocogan_nets.COCOSharedDis.model_S.cuda"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda"], ["", "def", "cuda", "(", "self", ",", "gpu", ")", ":", "\n", "    ", "self", ".", "model_A", ".", "cuda", "(", "gpu", ")", "\n", "self", ".", "model_B", ".", "cuda", "(", "gpu", ")", "\n", "self", ".", "model_S", ".", "cuda", "(", "gpu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOSharedDis.forward": [[47, 57], ["cocogan_nets.COCOSharedDis.model_S", "out_A.view.view.view", "outs_A.append", "cocogan_nets.COCOSharedDis.model_S", "out_B.view.view.view", "outs_B.append", "cocogan_nets.COCOSharedDis.model_A", "cocogan_nets.COCOSharedDis.model_B"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x_A", ",", "x_B", ")", ":", "\n", "    ", "out_A", "=", "self", ".", "model_S", "(", "self", ".", "model_A", "(", "x_A", ")", ")", "\n", "out_A", "=", "out_A", ".", "view", "(", "-", "1", ")", "\n", "outs_A", "=", "[", "]", "\n", "outs_A", ".", "append", "(", "out_A", ")", "\n", "out_B", "=", "self", ".", "model_S", "(", "self", ".", "model_B", "(", "x_B", ")", ")", "\n", "out_B", "=", "out_B", ".", "view", "(", "-", "1", ")", "\n", "outs_B", "=", "[", "]", "\n", "outs_B", ".", "append", "(", "out_B", ")", "\n", "return", "outs_A", ",", "outs_B", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOCatRegDis.__init__": [[59, 70], ["nn.Module.__init__", "cocogan_nets.COCOCatRegDis._make_net", "cocogan_nets.COCOCatRegDis._make_net"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCODis._make_net", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCODis._make_net"], ["  ", "def", "__init__", "(", "self", ",", "params", ")", ":", "\n", "    ", "super", "(", "COCOCatRegDis", ",", "self", ")", ".", "__init__", "(", ")", "\n", "ch", "=", "params", "[", "'ch'", "]", "\n", "input_dim_a", "=", "params", "[", "'input_dim_a'", "]", "\n", "input_dim_b", "=", "params", "[", "'input_dim_b'", "]", "\n", "self", ".", "number_of_categories_a", "=", "params", "[", "'categorise_a'", "]", "\n", "self", ".", "number_of_categories_b", "=", "params", "[", "'categorise_b'", "]", "\n", "n_layer", "=", "params", "[", "'n_layer'", "]", "\n", "last_kernel_size", "=", "params", "[", "'last_kernel_size'", "]", "\n", "self", ".", "model_A", ",", "self", ".", "cat_A", ",", "self", ".", "reg_A", "=", "self", ".", "_make_net", "(", "ch", ",", "input_dim_a", ",", "n_layer", ",", "self", ".", "number_of_categories_a", ",", "last_kernel_size", ")", "\n", "self", ".", "model_B", ",", "self", ".", "cat_B", ",", "self", ".", "reg_B", "=", "self", ".", "_make_net", "(", "ch", ",", "input_dim_b", ",", "n_layer", ",", "self", ".", "number_of_categories_b", ",", "last_kernel_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOCatRegDis._make_net": [[71, 81], ["range", "nn.Conv2d", "nn.Conv2d", "common_net.LeakyReLUConv2d", "nn.Sequential", "nn.Sequential", "nn.Sequential", "common_net.LeakyReLUConv2d"], "methods", ["None"], ["", "def", "_make_net", "(", "self", ",", "ch", ",", "input_dim", ",", "n_layer", ",", "number_of_categories", ",", "last_kernel_size", ")", ":", "\n", "    ", "model", "=", "[", "]", "\n", "model", "+=", "[", "LeakyReLUConv2d", "(", "input_dim", ",", "ch", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "]", "#16", "\n", "tch", "=", "ch", "\n", "for", "i", "in", "range", "(", "1", ",", "n_layer", ")", ":", "\n", "      ", "model", "+=", "[", "LeakyReLUConv2d", "(", "tch", ",", "tch", "*", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "]", "# 8", "\n", "tch", "*=", "2", "\n", "", "last_cat_layer", "=", "nn", ".", "Conv2d", "(", "tch", ",", "number_of_categories", ",", "kernel_size", "=", "last_kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "# 1", "\n", "last_reg_layer", "=", "nn", ".", "Conv2d", "(", "tch", ",", "1", ",", "kernel_size", "=", "last_kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "# 1", "\n", "return", "nn", ".", "Sequential", "(", "*", "model", ")", ",", "nn", ".", "Sequential", "(", "last_cat_layer", ")", ",", "nn", ".", "Sequential", "(", "last_reg_layer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOCatRegDis.cuda": [[82, 89], ["cocogan_nets.COCOCatRegDis.model_A.cuda", "cocogan_nets.COCOCatRegDis.model_B.cuda", "cocogan_nets.COCOCatRegDis.cat_A.cuda", "cocogan_nets.COCOCatRegDis.cat_B.cuda", "cocogan_nets.COCOCatRegDis.reg_A.cuda", "cocogan_nets.COCOCatRegDis.reg_B.cuda"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda"], ["", "def", "cuda", "(", "self", ",", "gpu", ")", ":", "\n", "    ", "self", ".", "model_A", ".", "cuda", "(", "gpu", ")", "\n", "self", ".", "model_B", ".", "cuda", "(", "gpu", ")", "\n", "self", ".", "cat_A", ".", "cuda", "(", "gpu", ")", "\n", "self", ".", "cat_B", ".", "cuda", "(", "gpu", ")", "\n", "self", ".", "reg_A", ".", "cuda", "(", "gpu", ")", "\n", "self", ".", "reg_B", ".", "cuda", "(", "gpu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOCatRegDis.forward": [[90, 120], ["cocogan_nets.COCOCatRegDis.model_A", "cocogan_nets.COCOCatRegDis.cat_A", "out_cat_A.view.view.transpose", "out_cat_A.view.view.transpose().contiguous", "out_cat_A.view.view.view", "outs_cat_A.append", "cocogan_nets.COCOCatRegDis.reg_A", "out_reg_A.view.view.transpose", "out_reg_A.view.view.transpose().contiguous", "out_reg_A.view.view.view", "outs_reg_A.append", "cocogan_nets.COCOCatRegDis.model_B", "cocogan_nets.COCOCatRegDis.cat_B", "out_cat_B.view.view.transpose", "out_cat_B.view.view.transpose().contiguous", "out_cat_B.view.view.view", "outs_cat_B.append", "cocogan_nets.COCOCatRegDis.reg_B", "out_reg_B.view.view.transpose", "out_reg_B.view.view.transpose().contiguous", "out_reg_B.view.view.view", "outs_reg_B.append", "out_cat_A.view.view.transpose", "out_reg_A.view.view.transpose", "out_cat_B.view.view.transpose", "out_reg_B.view.view.transpose"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x_A", ",", "x_B", ")", ":", "\n", "    ", "out_A", "=", "self", ".", "model_A", "(", "x_A", ")", "\n", "out_cat_A", "=", "self", ".", "cat_A", "(", "out_A", ")", "\n", "out_cat_A", "=", "out_cat_A", ".", "transpose", "(", "1", ",", "3", ")", "\n", "out_cat_A", "=", "out_cat_A", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "out_cat_A", "=", "out_cat_A", ".", "view", "(", "-", "1", ",", "self", ".", "number_of_categories_a", ")", "\n", "outs_cat_A", "=", "[", "]", "\n", "outs_cat_A", ".", "append", "(", "out_cat_A", ")", "\n", "out_reg_A", "=", "self", ".", "reg_A", "(", "out_A", ")", "\n", "out_reg_A", "=", "out_reg_A", ".", "transpose", "(", "1", ",", "3", ")", "\n", "out_reg_A", "=", "out_reg_A", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "out_reg_A", "=", "out_reg_A", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "outs_reg_A", "=", "[", "]", "\n", "outs_reg_A", ".", "append", "(", "out_reg_A", ")", "\n", "\n", "out_B", "=", "self", ".", "model_B", "(", "x_B", ")", "\n", "out_cat_B", "=", "self", ".", "cat_B", "(", "out_B", ")", "\n", "out_cat_B", "=", "out_cat_B", ".", "transpose", "(", "1", ",", "3", ")", "\n", "out_cat_B", "=", "out_cat_B", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "out_cat_B", "=", "out_cat_B", ".", "view", "(", "-", "1", ",", "self", ".", "number_of_categories_b", ")", "\n", "outs_cat_B", "=", "[", "]", "\n", "outs_cat_B", ".", "append", "(", "out_cat_B", ")", "\n", "out_reg_B", "=", "self", ".", "reg_B", "(", "out_B", ")", "\n", "out_reg_B", "=", "out_reg_B", ".", "transpose", "(", "1", ",", "3", ")", "\n", "out_reg_B", "=", "out_reg_B", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "out_reg_B", "=", "out_reg_B", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "outs_reg_B", "=", "[", "]", "\n", "outs_reg_B", ".", "append", "(", "out_reg_B", ")", "\n", "\n", "return", "outs_cat_A", ",", "outs_reg_A", ",", "outs_cat_B", ",", "outs_reg_B", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOCategorialDis.__init__": [[122, 133], ["nn.Module.__init__", "cocogan_nets.COCOCategorialDis._make_net", "cocogan_nets.COCOCategorialDis._make_net"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCODis._make_net", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCODis._make_net"], ["  ", "def", "__init__", "(", "self", ",", "params", ")", ":", "\n", "    ", "super", "(", "COCOCategorialDis", ",", "self", ")", ".", "__init__", "(", ")", "\n", "ch", "=", "params", "[", "'ch'", "]", "\n", "input_dim_a", "=", "params", "[", "'input_dim_a'", "]", "\n", "input_dim_b", "=", "params", "[", "'input_dim_b'", "]", "\n", "self", ".", "number_of_categories_a", "=", "params", "[", "'categorise_a'", "]", "\n", "self", ".", "number_of_categories_b", "=", "params", "[", "'categorise_b'", "]", "\n", "n_layer", "=", "params", "[", "'n_layer'", "]", "\n", "last_kernel_size", "=", "params", "[", "'last_kernel_size'", "]", "\n", "self", ".", "model_A", "=", "self", ".", "_make_net", "(", "ch", ",", "input_dim_a", ",", "n_layer", ",", "self", ".", "number_of_categories_a", ",", "last_kernel_size", ")", "\n", "self", ".", "model_B", "=", "self", ".", "_make_net", "(", "ch", ",", "input_dim_b", ",", "n_layer", ",", "self", ".", "number_of_categories_b", ",", "last_kernel_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOCategorialDis._make_net": [[134, 143], ["range", "nn.Sequential", "common_net.LeakyReLUConv2d", "nn.Conv2d", "common_net.LeakyReLUConv2d"], "methods", ["None"], ["", "def", "_make_net", "(", "self", ",", "ch", ",", "input_dim", ",", "n_layer", ",", "number_of_categories", ",", "last_kernel_size", ")", ":", "\n", "    ", "model", "=", "[", "]", "\n", "model", "+=", "[", "LeakyReLUConv2d", "(", "input_dim", ",", "ch", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "]", "#16", "\n", "tch", "=", "ch", "\n", "for", "i", "in", "range", "(", "1", ",", "n_layer", ")", ":", "\n", "      ", "model", "+=", "[", "LeakyReLUConv2d", "(", "tch", ",", "tch", "*", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "]", "# 8", "\n", "tch", "*=", "2", "\n", "", "model", "+=", "[", "nn", ".", "Conv2d", "(", "tch", ",", "number_of_categories", ",", "kernel_size", "=", "last_kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "]", "# 1", "\n", "return", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOCategorialDis.cuda": [[144, 147], ["cocogan_nets.COCOCategorialDis.model_A.cuda", "cocogan_nets.COCOCategorialDis.model_B.cuda"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda"], ["", "def", "cuda", "(", "self", ",", "gpu", ")", ":", "\n", "    ", "self", ".", "model_A", ".", "cuda", "(", "gpu", ")", "\n", "self", ".", "model_B", ".", "cuda", "(", "gpu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOCategorialDis.forward": [[148, 162], ["cocogan_nets.COCOCategorialDis.model_A", "out_A.view.view.transpose", "out_A.view.view.transpose().contiguous", "out_A.view.view.view", "outs_A.append", "cocogan_nets.COCOCategorialDis.model_B", "out_B.view.view.transpose", "out_B.view.view.transpose().contiguous", "out_B.view.view.view", "outs_B.append", "out_A.view.view.transpose", "out_B.view.view.transpose"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x_A", ",", "x_B", ")", ":", "\n", "    ", "out_A", "=", "self", ".", "model_A", "(", "x_A", ")", "\n", "out_A", "=", "out_A", ".", "transpose", "(", "1", ",", "3", ")", "\n", "out_A", "=", "out_A", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "out_A", "=", "out_A", ".", "view", "(", "-", "1", ",", "self", ".", "number_of_categories_a", ")", "\n", "outs_A", "=", "[", "]", "\n", "outs_A", ".", "append", "(", "out_A", ")", "\n", "out_B", "=", "self", ".", "model_B", "(", "x_B", ")", "\n", "out_B", "=", "out_B", ".", "transpose", "(", "1", ",", "3", ")", "\n", "out_B", "=", "out_B", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "out_B", "=", "out_B", ".", "view", "(", "-", "1", ",", "self", ".", "number_of_categories_b", ")", "\n", "outs_B", "=", "[", "]", "\n", "outs_B", ".", "append", "(", "out_B", ")", "\n", "return", "outs_A", ",", "outs_B", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCODis.__init__": [[164, 172], ["nn.Module.__init__", "cocogan_nets.COCODis._make_net", "cocogan_nets.COCODis._make_net"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCODis._make_net", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCODis._make_net"], ["  ", "def", "__init__", "(", "self", ",", "params", ")", ":", "\n", "    ", "super", "(", "COCODis", ",", "self", ")", ".", "__init__", "(", ")", "\n", "ch", "=", "params", "[", "'ch'", "]", "\n", "input_dim_a", "=", "params", "[", "'input_dim_a'", "]", "\n", "input_dim_b", "=", "params", "[", "'input_dim_b'", "]", "\n", "n_layer", "=", "params", "[", "'n_layer'", "]", "\n", "self", ".", "model_A", "=", "self", ".", "_make_net", "(", "ch", ",", "input_dim_a", ",", "n_layer", ")", "\n", "self", ".", "model_B", "=", "self", ".", "_make_net", "(", "ch", ",", "input_dim_b", ",", "n_layer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCODis._make_net": [[173, 182], ["range", "nn.Sequential", "common_net.LeakyReLUConv2d", "nn.Conv2d", "common_net.LeakyReLUConv2d"], "methods", ["None"], ["", "def", "_make_net", "(", "self", ",", "ch", ",", "input_dim", ",", "n_layer", ")", ":", "\n", "    ", "model", "=", "[", "]", "\n", "model", "+=", "[", "LeakyReLUConv2d", "(", "input_dim", ",", "ch", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "]", "#16", "\n", "tch", "=", "ch", "\n", "for", "i", "in", "range", "(", "1", ",", "n_layer", ")", ":", "\n", "      ", "model", "+=", "[", "LeakyReLUConv2d", "(", "tch", ",", "tch", "*", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "]", "# 8", "\n", "tch", "*=", "2", "\n", "", "model", "+=", "[", "nn", ".", "Conv2d", "(", "tch", ",", "1", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "]", "# 1", "\n", "return", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCODis.cuda": [[183, 186], ["cocogan_nets.COCODis.model_A.cuda", "cocogan_nets.COCODis.model_B.cuda"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda"], ["", "def", "cuda", "(", "self", ",", "gpu", ")", ":", "\n", "    ", "self", ".", "model_A", ".", "cuda", "(", "gpu", ")", "\n", "self", ".", "model_B", ".", "cuda", "(", "gpu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCODis.forward": [[187, 197], ["cocogan_nets.COCODis.model_A", "out_A.view.view.view", "outs_A.append", "cocogan_nets.COCODis.model_B", "out_B.view.view.view", "outs_B.append"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x_A", ",", "x_B", ")", ":", "\n", "    ", "out_A", "=", "self", ".", "model_A", "(", "x_A", ")", "\n", "out_A", "=", "out_A", ".", "view", "(", "-", "1", ")", "\n", "outs_A", "=", "[", "]", "\n", "outs_A", ".", "append", "(", "out_A", ")", "\n", "out_B", "=", "self", ".", "model_B", "(", "x_B", ")", "\n", "out_B", "=", "out_B", ".", "view", "(", "-", "1", ")", "\n", "outs_B", "=", "[", "]", "\n", "outs_B", ".", "append", "(", "out_B", ")", "\n", "return", "outs_A", ",", "outs_B", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOResGen.__init__": [[199, 258], ["nn.Module.__init__", "range", "range", "range", "range", "range", "range", "nn.Sequential", "nn.Sequential", "nn.Sequential", "nn.Sequential", "nn.Sequential", "nn.Sequential", "common_net.LeakyReLUConv2d", "common_net.LeakyReLUConv2d", "common_net.GaussianNoiseLayer", "nn.ConvTranspose2d", "nn.ConvTranspose2d", "nn.Tanh", "nn.Tanh", "common_net.ReLUINSConv2d", "common_net.ReLUINSConv2d", "common_net.INSResBlock", "common_net.INSResBlock", "common_net.INSResBlock", "common_net.INSResBlock", "common_net.INSResBlock", "common_net.INSResBlock", "common_net.ReLUINSConvTranspose2d", "common_net.ReLUINSConvTranspose2d"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__"], ["  ", "def", "__init__", "(", "self", ",", "params", ")", ":", "\n", "    ", "super", "(", "COCOResGen", ",", "self", ")", ".", "__init__", "(", ")", "\n", "output_dim_a", "=", "params", "[", "'input_dim_a'", "]", "\n", "output_dim_b", "=", "params", "[", "'input_dim_b'", "]", "\n", "if", "1", "==", "params", "[", "'use_xy'", "]", ":", "\n", "        ", "input_dim_a", "=", "2", "+", "output_dim_a", "\n", "input_dim_b", "=", "2", "+", "output_dim_b", "\n", "", "else", ":", "\n", "        ", "input_dim_a", "=", "output_dim_a", "\n", "input_dim_b", "=", "output_dim_b", "\n", "\n", "", "ch", "=", "params", "[", "'ch'", "]", "\n", "n_enc_front_blk", "=", "params", "[", "'n_enc_front_blk'", "]", "\n", "n_enc_res_blk", "=", "params", "[", "'n_enc_res_blk'", "]", "\n", "n_enc_shared_blk", "=", "params", "[", "'n_enc_shared_blk'", "]", "\n", "n_gen_shared_blk", "=", "params", "[", "'n_gen_shared_blk'", "]", "\n", "n_gen_res_blk", "=", "params", "[", "'n_gen_res_blk'", "]", "\n", "n_gen_front_blk", "=", "params", "[", "'n_gen_front_blk'", "]", "\n", "encA", "=", "[", "]", "\n", "encB", "=", "[", "]", "\n", "# Encoders", "\n", "encA", "+=", "[", "LeakyReLUConv2d", "(", "input_dim_a", ",", "ch", ",", "kernel_size", "=", "7", ",", "stride", "=", "1", ",", "padding", "=", "3", ")", "]", "\n", "encB", "+=", "[", "LeakyReLUConv2d", "(", "input_dim_b", ",", "ch", ",", "kernel_size", "=", "7", ",", "stride", "=", "1", ",", "padding", "=", "3", ")", "]", "\n", "tch", "=", "ch", "\n", "for", "i", "in", "range", "(", "1", ",", "n_enc_front_blk", ")", ":", "\n", "      ", "encA", "+=", "[", "ReLUINSConv2d", "(", "tch", ",", "tch", "*", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "]", "\n", "encB", "+=", "[", "ReLUINSConv2d", "(", "tch", ",", "tch", "*", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "]", "\n", "tch", "*=", "2", "\n", "", "for", "i", "in", "range", "(", "0", ",", "n_enc_res_blk", ")", ":", "\n", "      ", "encA", "+=", "[", "INSResBlock", "(", "tch", ",", "tch", ")", "]", "\n", "encB", "+=", "[", "INSResBlock", "(", "tch", ",", "tch", ")", "]", "\n", "# Shared", "\n", "", "enc_shared", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "n_enc_shared_blk", ")", ":", "\n", "      ", "enc_shared", "+=", "[", "INSResBlock", "(", "tch", ",", "tch", ")", "]", "\n", "", "enc_shared", "+=", "[", "GaussianNoiseLayer", "(", ")", "]", "\n", "dec_shared", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "n_gen_shared_blk", ")", ":", "\n", "      ", "dec_shared", "+=", "[", "INSResBlock", "(", "tch", ",", "tch", ")", "]", "\n", "# Decoders", "\n", "", "decA", "=", "[", "]", "\n", "decB", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "n_gen_res_blk", ")", ":", "\n", "      ", "decA", "+=", "[", "INSResBlock", "(", "tch", ",", "tch", ")", "]", "\n", "decB", "+=", "[", "INSResBlock", "(", "tch", ",", "tch", ")", "]", "\n", "", "for", "i", "in", "range", "(", "0", ",", "n_gen_front_blk", "-", "1", ")", ":", "\n", "      ", "decA", "+=", "[", "ReLUINSConvTranspose2d", "(", "tch", ",", "tch", "//", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "output_padding", "=", "1", ")", "]", "\n", "decB", "+=", "[", "ReLUINSConvTranspose2d", "(", "tch", ",", "tch", "//", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "output_padding", "=", "1", ")", "]", "\n", "tch", "=", "tch", "//", "2", "\n", "", "decA", "+=", "[", "nn", ".", "ConvTranspose2d", "(", "tch", ",", "output_dim_a", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "]", "\n", "decB", "+=", "[", "nn", ".", "ConvTranspose2d", "(", "tch", ",", "output_dim_b", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "]", "\n", "decA", "+=", "[", "nn", ".", "Tanh", "(", ")", "]", "\n", "decB", "+=", "[", "nn", ".", "Tanh", "(", ")", "]", "\n", "self", ".", "encode_A", "=", "nn", ".", "Sequential", "(", "*", "encA", ")", "\n", "self", ".", "encode_B", "=", "nn", ".", "Sequential", "(", "*", "encB", ")", "\n", "self", ".", "enc_shared", "=", "nn", ".", "Sequential", "(", "*", "enc_shared", ")", "\n", "self", ".", "dec_shared", "=", "nn", ".", "Sequential", "(", "*", "dec_shared", ")", "\n", "self", ".", "decode_A", "=", "nn", ".", "Sequential", "(", "*", "decA", ")", "\n", "self", ".", "decode_B", "=", "nn", ".", "Sequential", "(", "*", "decB", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOResGen.forward": [[259, 268], ["torch.cat", "cocogan_nets.COCOResGen.enc_shared", "cocogan_nets.COCOResGen.dec_shared", "cocogan_nets.COCOResGen.decode_A", "cocogan_nets.COCOResGen.decode_B", "torch.split", "torch.split", "x_A.size", "x_A.size", "cocogan_nets.COCOResGen.encode_A", "cocogan_nets.COCOResGen.encode_B"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x_A", ",", "x_B", ")", ":", "\n", "    ", "out", "=", "torch", ".", "cat", "(", "(", "self", ".", "encode_A", "(", "x_A", ")", ",", "self", ".", "encode_B", "(", "x_B", ")", ")", ",", "0", ")", "\n", "shared", "=", "self", ".", "enc_shared", "(", "out", ")", "\n", "out", "=", "self", ".", "dec_shared", "(", "shared", ")", "\n", "out_A", "=", "self", ".", "decode_A", "(", "out", ")", "\n", "out_B", "=", "self", ".", "decode_B", "(", "out", ")", "\n", "x_Aa", ",", "x_Ba", "=", "torch", ".", "split", "(", "out_A", ",", "x_A", ".", "size", "(", "0", ")", ",", "dim", "=", "0", ")", "\n", "x_Ab", ",", "x_Bb", "=", "torch", ".", "split", "(", "out_B", ",", "x_A", ".", "size", "(", "0", ")", ",", "dim", "=", "0", ")", "\n", "return", "x_Aa", ",", "x_Ba", ",", "x_Ab", ",", "x_Bb", ",", "shared", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOResGen.forward_a2b": [[269, 275], ["cocogan_nets.COCOResGen.encode_A", "cocogan_nets.COCOResGen.enc_shared", "cocogan_nets.COCOResGen.dec_shared", "cocogan_nets.COCOResGen.decode_B"], "methods", ["None"], ["", "def", "forward_a2b", "(", "self", ",", "x_A", ")", ":", "\n", "    ", "out", "=", "self", ".", "encode_A", "(", "x_A", ")", "\n", "shared", "=", "self", ".", "enc_shared", "(", "out", ")", "\n", "out", "=", "self", ".", "dec_shared", "(", "shared", ")", "\n", "out", "=", "self", ".", "decode_B", "(", "out", ")", "\n", "return", "out", ",", "shared", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOResGen.forward_b2a": [[276, 282], ["cocogan_nets.COCOResGen.encode_B", "cocogan_nets.COCOResGen.enc_shared", "cocogan_nets.COCOResGen.dec_shared", "cocogan_nets.COCOResGen.decode_A"], "methods", ["None"], ["", "def", "forward_b2a", "(", "self", ",", "x_B", ")", ":", "\n", "    ", "out", "=", "self", ".", "encode_B", "(", "x_B", ")", "\n", "shared", "=", "self", ".", "enc_shared", "(", "out", ")", "\n", "out", "=", "self", ".", "dec_shared", "(", "shared", ")", "\n", "out", "=", "self", ".", "decode_A", "(", "out", ")", "\n", "return", "out", ",", "shared", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOResGen.cuda": [[283, 290], ["cocogan_nets.COCOResGen.encode_A.cuda", "cocogan_nets.COCOResGen.encode_B.cuda", "cocogan_nets.COCOResGen.enc_shared.cuda", "cocogan_nets.COCOResGen.dec_shared.cuda", "cocogan_nets.COCOResGen.decode_A.cuda", "cocogan_nets.COCOResGen.decode_B.cuda"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda"], ["", "def", "cuda", "(", "self", ",", "gpu", ")", ":", "\n", "    ", "self", ".", "encode_A", ".", "cuda", "(", "gpu", ")", "\n", "self", ".", "encode_B", ".", "cuda", "(", "gpu", ")", "\n", "self", ".", "enc_shared", ".", "cuda", "(", "gpu", ")", "\n", "self", ".", "dec_shared", ".", "cuda", "(", "gpu", ")", "\n", "self", ".", "decode_A", ".", "cuda", "(", "gpu", ")", "\n", "self", ".", "decode_B", ".", "cuda", "(", "gpu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOResGen.share_memory": [[291, 298], ["cocogan_nets.COCOResGen.encode_A.share_memory", "cocogan_nets.COCOResGen.encode_B.share_memory", "cocogan_nets.COCOResGen.enc_shared.share_memory", "cocogan_nets.COCOResGen.dec_shared.share_memory", "cocogan_nets.COCOResGen.decode_A.share_memory", "cocogan_nets.COCOResGen.decode_B.share_memory"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer.share_memory", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer.share_memory", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer.share_memory", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer.share_memory", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer.share_memory", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer.share_memory"], ["", "def", "share_memory", "(", "self", ")", ":", "\n", "    ", "self", ".", "encode_A", ".", "share_memory", "(", ")", "\n", "self", ".", "encode_B", ".", "share_memory", "(", ")", "\n", "self", ".", "enc_shared", ".", "share_memory", "(", ")", "\n", "self", ".", "dec_shared", ".", "share_memory", "(", ")", "\n", "self", ".", "decode_A", ".", "share_memory", "(", ")", "\n", "self", ".", "decode_B", ".", "share_memory", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOResGen2.__init__": [[300, 352], ["nn.Module.__init__", "range", "range", "range", "range", "range", "range", "nn.Sequential", "nn.Sequential", "nn.Sequential", "nn.Sequential", "nn.Sequential", "nn.Sequential", "common_net.LeakyReLUConv2d", "common_net.LeakyReLUConv2d", "common_net.GaussianNoiseLayer", "nn.ConvTranspose2d", "nn.ConvTranspose2d", "nn.Tanh", "nn.Tanh", "common_net.LeakyReLUConv2d", "common_net.LeakyReLUConv2d", "common_net.INSResBlock", "common_net.INSResBlock", "common_net.INSResBlock", "common_net.INSResBlock", "common_net.INSResBlock", "common_net.INSResBlock", "common_net.LeakyReLUConvTranspose2d", "common_net.LeakyReLUConvTranspose2d"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__"], ["  ", "def", "__init__", "(", "self", ",", "params", ")", ":", "\n", "    ", "super", "(", "COCOResGen2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "input_dim_a", "=", "params", "[", "'input_dim_a'", "]", "\n", "input_dim_b", "=", "params", "[", "'input_dim_b'", "]", "\n", "ch", "=", "params", "[", "'ch'", "]", "\n", "n_enc_front_blk", "=", "params", "[", "'n_enc_front_blk'", "]", "\n", "n_enc_res_blk", "=", "params", "[", "'n_enc_res_blk'", "]", "\n", "n_enc_shared_blk", "=", "params", "[", "'n_enc_shared_blk'", "]", "\n", "n_gen_shared_blk", "=", "params", "[", "'n_gen_shared_blk'", "]", "\n", "n_gen_res_blk", "=", "params", "[", "'n_gen_res_blk'", "]", "\n", "n_gen_front_blk", "=", "params", "[", "'n_gen_front_blk'", "]", "\n", "encA", "=", "[", "]", "\n", "encB", "=", "[", "]", "\n", "# Encoders", "\n", "encA", "+=", "[", "LeakyReLUConv2d", "(", "input_dim_a", ",", "ch", ",", "kernel_size", "=", "7", ",", "stride", "=", "1", ",", "padding", "=", "3", ")", "]", "\n", "encB", "+=", "[", "LeakyReLUConv2d", "(", "input_dim_b", ",", "ch", ",", "kernel_size", "=", "7", ",", "stride", "=", "1", ",", "padding", "=", "3", ")", "]", "\n", "tch", "=", "ch", "\n", "for", "i", "in", "range", "(", "1", ",", "n_enc_front_blk", ")", ":", "\n", "      ", "encA", "+=", "[", "LeakyReLUConv2d", "(", "tch", ",", "tch", "*", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "]", "\n", "encB", "+=", "[", "LeakyReLUConv2d", "(", "tch", ",", "tch", "*", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "]", "\n", "tch", "*=", "2", "\n", "", "for", "i", "in", "range", "(", "0", ",", "n_enc_res_blk", ")", ":", "\n", "      ", "encA", "+=", "[", "INSResBlock", "(", "tch", ",", "tch", ")", "]", "\n", "encB", "+=", "[", "INSResBlock", "(", "tch", ",", "tch", ")", "]", "\n", "# Shared", "\n", "", "enc_shared", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "n_enc_shared_blk", ")", ":", "\n", "      ", "enc_shared", "+=", "[", "INSResBlock", "(", "tch", ",", "tch", ")", "]", "\n", "", "enc_shared", "+=", "[", "GaussianNoiseLayer", "(", ")", "]", "\n", "dec_shared", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "n_gen_shared_blk", ")", ":", "\n", "      ", "dec_shared", "+=", "[", "INSResBlock", "(", "tch", ",", "tch", ")", "]", "\n", "# Decoders", "\n", "", "decA", "=", "[", "]", "\n", "decB", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "n_gen_res_blk", ")", ":", "\n", "      ", "decA", "+=", "[", "INSResBlock", "(", "tch", ",", "tch", ")", "]", "\n", "decB", "+=", "[", "INSResBlock", "(", "tch", ",", "tch", ")", "]", "\n", "", "for", "i", "in", "range", "(", "0", ",", "n_gen_front_blk", "-", "1", ")", ":", "\n", "      ", "decA", "+=", "[", "LeakyReLUConvTranspose2d", "(", "tch", ",", "tch", "//", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "output_padding", "=", "1", ")", "]", "\n", "decB", "+=", "[", "LeakyReLUConvTranspose2d", "(", "tch", ",", "tch", "//", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "output_padding", "=", "1", ")", "]", "\n", "tch", "=", "tch", "//", "2", "\n", "", "decA", "+=", "[", "nn", ".", "ConvTranspose2d", "(", "tch", ",", "input_dim_a", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "]", "\n", "decB", "+=", "[", "nn", ".", "ConvTranspose2d", "(", "tch", ",", "input_dim_b", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "]", "\n", "decA", "+=", "[", "nn", ".", "Tanh", "(", ")", "]", "\n", "decB", "+=", "[", "nn", ".", "Tanh", "(", ")", "]", "\n", "self", ".", "encode_A", "=", "nn", ".", "Sequential", "(", "*", "encA", ")", "\n", "self", ".", "encode_B", "=", "nn", ".", "Sequential", "(", "*", "encB", ")", "\n", "self", ".", "enc_shared", "=", "nn", ".", "Sequential", "(", "*", "enc_shared", ")", "\n", "self", ".", "dec_shared", "=", "nn", ".", "Sequential", "(", "*", "dec_shared", ")", "\n", "self", ".", "decode_A", "=", "nn", ".", "Sequential", "(", "*", "decA", ")", "\n", "self", ".", "decode_B", "=", "nn", ".", "Sequential", "(", "*", "decB", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOResGen2.forward": [[353, 362], ["torch.cat", "cocogan_nets.COCOResGen2.enc_shared", "cocogan_nets.COCOResGen2.dec_shared", "cocogan_nets.COCOResGen2.decode_A", "cocogan_nets.COCOResGen2.decode_B", "torch.split", "torch.split", "x_A.size", "x_A.size", "cocogan_nets.COCOResGen2.encode_A", "cocogan_nets.COCOResGen2.encode_B"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x_A", ",", "x_B", ")", ":", "\n", "    ", "out", "=", "torch", ".", "cat", "(", "(", "self", ".", "encode_A", "(", "x_A", ")", ",", "self", ".", "encode_B", "(", "x_B", ")", ")", ",", "0", ")", "\n", "shared", "=", "self", ".", "enc_shared", "(", "out", ")", "\n", "out", "=", "self", ".", "dec_shared", "(", "shared", ")", "\n", "out_A", "=", "self", ".", "decode_A", "(", "out", ")", "\n", "out_B", "=", "self", ".", "decode_B", "(", "out", ")", "\n", "x_Aa", ",", "x_Ba", "=", "torch", ".", "split", "(", "out_A", ",", "x_A", ".", "size", "(", "0", ")", ",", "dim", "=", "0", ")", "\n", "x_Ab", ",", "x_Bb", "=", "torch", ".", "split", "(", "out_B", ",", "x_A", ".", "size", "(", "0", ")", ",", "dim", "=", "0", ")", "\n", "return", "x_Aa", ",", "x_Ba", ",", "x_Ab", ",", "x_Bb", ",", "shared", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOResGen2.forward_a2b": [[363, 369], ["cocogan_nets.COCOResGen2.encode_A", "cocogan_nets.COCOResGen2.enc_shared", "cocogan_nets.COCOResGen2.dec_shared", "cocogan_nets.COCOResGen2.decode_B"], "methods", ["None"], ["", "def", "forward_a2b", "(", "self", ",", "x_A", ")", ":", "\n", "    ", "out", "=", "self", ".", "encode_A", "(", "x_A", ")", "\n", "shared", "=", "self", ".", "enc_shared", "(", "out", ")", "\n", "out", "=", "self", ".", "dec_shared", "(", "shared", ")", "\n", "out", "=", "self", ".", "decode_B", "(", "out", ")", "\n", "return", "out", ",", "shared", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOResGen2.forward_b2a": [[370, 376], ["cocogan_nets.COCOResGen2.encode_B", "cocogan_nets.COCOResGen2.enc_shared", "cocogan_nets.COCOResGen2.dec_shared", "cocogan_nets.COCOResGen2.decode_A"], "methods", ["None"], ["", "def", "forward_b2a", "(", "self", ",", "x_B", ")", ":", "\n", "    ", "out", "=", "self", ".", "encode_B", "(", "x_B", ")", "\n", "shared", "=", "self", ".", "enc_shared", "(", "out", ")", "\n", "out", "=", "self", ".", "dec_shared", "(", "shared", ")", "\n", "out", "=", "self", ".", "decode_A", "(", "out", ")", "\n", "return", "out", ",", "shared", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOResGen2.cuda": [[377, 384], ["cocogan_nets.COCOResGen2.encode_A.cuda", "cocogan_nets.COCOResGen2.encode_B.cuda", "cocogan_nets.COCOResGen2.enc_shared.cuda", "cocogan_nets.COCOResGen2.dec_shared.cuda", "cocogan_nets.COCOResGen2.decode_A.cuda", "cocogan_nets.COCOResGen2.decode_B.cuda"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda"], ["", "def", "cuda", "(", "self", ",", "gpu", ")", ":", "\n", "    ", "self", ".", "encode_A", ".", "cuda", "(", "gpu", ")", "\n", "self", ".", "encode_B", ".", "cuda", "(", "gpu", ")", "\n", "self", ".", "enc_shared", ".", "cuda", "(", "gpu", ")", "\n", "self", ".", "dec_shared", ".", "cuda", "(", "gpu", ")", "\n", "self", ".", "decode_A", ".", "cuda", "(", "gpu", ")", "\n", "self", ".", "decode_B", ".", "cuda", "(", "gpu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOResGen2.share_memory": [[385, 392], ["cocogan_nets.COCOResGen2.encode_A.share_memory", "cocogan_nets.COCOResGen2.encode_B.share_memory", "cocogan_nets.COCOResGen2.enc_shared.share_memory", "cocogan_nets.COCOResGen2.dec_shared.share_memory", "cocogan_nets.COCOResGen2.decode_A.share_memory", "cocogan_nets.COCOResGen2.decode_B.share_memory"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer.share_memory", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer.share_memory", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer.share_memory", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer.share_memory", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer.share_memory", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer.share_memory"], ["", "def", "share_memory", "(", "self", ")", ":", "\n", "    ", "self", ".", "encode_A", ".", "share_memory", "(", ")", "\n", "self", ".", "encode_B", ".", "share_memory", "(", ")", "\n", "self", ".", "enc_shared", ".", "share_memory", "(", ")", "\n", "self", ".", "dec_shared", ".", "share_memory", "(", ")", "\n", "self", ".", "decode_A", ".", "share_memory", "(", ")", "\n", "self", ".", "decode_B", ".", "share_memory", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer.COCOGANTrainer.__init__": [[16, 31], ["torch.Module.__init__", "exec", "exec", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "cocogan_trainer.COCOGANTrainer.dis.apply", "cocogan_trainer.COCOGANTrainer.gen.apply", "torch.nn.L1Loss", "torch.nn.L1Loss", "torch.nn.L1Loss", "torch.nn.L1Loss", "torch.nn.L1Loss", "torch.nn.L1Loss", "torch.nn.L1Loss", "torch.nn.L1Loss", "cocogan_trainer.COCOGANTrainer.dis.parameters", "cocogan_trainer.COCOGANTrainer.gen.parameters"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__"], ["  ", "def", "__init__", "(", "self", ",", "hyperparameters", ")", ":", "\n", "    ", "super", "(", "COCOGANTrainer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "lr", "=", "hyperparameters", "[", "'lr'", "]", "\n", "# Initiate the networks", "\n", "exec", "(", "'self.dis = %s(hyperparameters[\\'dis\\'])'", "%", "hyperparameters", "[", "'dis'", "]", "[", "'name'", "]", ")", "\n", "exec", "(", "'self.gen = %s(hyperparameters[\\'gen\\'])'", "%", "hyperparameters", "[", "'gen'", "]", "[", "'name'", "]", ")", "\n", "# Setup the optimizers", "\n", "self", ".", "dis_opt", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "dis", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "weight_decay", "=", "0.0001", ")", "\n", "self", ".", "gen_opt", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "gen", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "weight_decay", "=", "0.0001", ")", "\n", "# Network weight initialization", "\n", "self", ".", "dis", ".", "apply", "(", "gaussian_weights_init", ")", "\n", "self", ".", "gen", ".", "apply", "(", "gaussian_weights_init", ")", "\n", "# Setup the loss function for training", "\n", "self", ".", "ll_loss_criterion_a", "=", "torch", ".", "nn", ".", "L1Loss", "(", ")", "\n", "self", ".", "ll_loss_criterion_b", "=", "torch", ".", "nn", ".", "L1Loss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer.COCOGANTrainer._compute_kl": [[33, 42], ["torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.mean", "torch.mean", "torch.mean", "torch.mean"], "methods", ["None"], ["", "def", "_compute_kl", "(", "self", ",", "mu", ")", ":", "\n", "# def _compute_kl(self, mu, sd):", "\n", "# mu_2 = torch.pow(mu, 2)", "\n", "# sd_2 = torch.pow(sd, 2)", "\n", "# encoding_loss = (mu_2 + sd_2 - torch.log(sd_2)).sum() / mu_2.size(0)", "\n", "# return encoding_loss", "\n", "    ", "mu_2", "=", "torch", ".", "pow", "(", "mu", ",", "2", ")", "\n", "encoding_loss", "=", "torch", ".", "mean", "(", "mu_2", ")", "\n", "return", "encoding_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer.COCOGANTrainer.gen_update": [[43, 85], ["cocogan_trainer.COCOGANTrainer.gen.zero_grad", "cocogan_trainer.COCOGANTrainer.gen", "cocogan_trainer.COCOGANTrainer.gen.forward_a2b", "cocogan_trainer.COCOGANTrainer.gen.forward_b2a", "cocogan_trainer.COCOGANTrainer.dis", "enumerate", "cocogan_trainer.COCOGANTrainer._compute_kl", "cocogan_trainer.COCOGANTrainer._compute_kl", "cocogan_trainer.COCOGANTrainer._compute_kl", "cocogan_trainer.COCOGANTrainer.ll_loss_criterion_a", "cocogan_trainer.COCOGANTrainer.ll_loss_criterion_b", "cocogan_trainer.COCOGANTrainer.ll_loss_criterion_a", "cocogan_trainer.COCOGANTrainer.ll_loss_criterion_b", "total_loss.backward", "cocogan_trainer.COCOGANTrainer.gen_opt.step", "itertools.izip", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "Variable", "cocogan_trainer.COCOGANTrainer.data.cpu().numpy", "cocogan_trainer.COCOGANTrainer.data.cpu().numpy", "cocogan_trainer.COCOGANTrainer.data.cpu().numpy", "torch.functional.binary_cross_entropy.data.cpu().numpy", "torch.functional.binary_cross_entropy.data.cpu().numpy", "cocogan_trainer.COCOGANTrainer.data.cpu().numpy", "cocogan_trainer.COCOGANTrainer.data.cpu().numpy", "cocogan_trainer.COCOGANTrainer.data.cpu().numpy", "cocogan_trainer.COCOGANTrainer.data.cpu().numpy", "total_loss.data.cpu().numpy", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "cocogan_trainer.COCOGANTrainer.data.cpu", "cocogan_trainer.COCOGANTrainer.data.cpu", "cocogan_trainer.COCOGANTrainer.data.cpu", "torch.functional.binary_cross_entropy.data.cpu", "torch.functional.binary_cross_entropy.data.cpu", "cocogan_trainer.COCOGANTrainer.data.cpu", "cocogan_trainer.COCOGANTrainer.data.cpu", "cocogan_trainer.COCOGANTrainer.data.cpu", "cocogan_trainer.COCOGANTrainer.data.cpu", "total_loss.data.cpu", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.functional.sigmoid.size"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOResGen2.forward_a2b", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOResGen2.forward_b2a", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer._compute_kl", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer._compute_kl", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer._compute_kl", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.step", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda"], ["", "def", "gen_update", "(", "self", ",", "images_a", ",", "images_b", ",", "hyperparameters", ")", ":", "\n", "    ", "self", ".", "gen", ".", "zero_grad", "(", ")", "\n", "x_aa", ",", "x_ba", ",", "x_ab", ",", "x_bb", ",", "shared", "=", "self", ".", "gen", "(", "images_a", ",", "images_b", ")", "\n", "x_bab", ",", "shared_bab", "=", "self", ".", "gen", ".", "forward_a2b", "(", "x_ba", ")", "\n", "x_aba", ",", "shared_aba", "=", "self", ".", "gen", ".", "forward_b2a", "(", "x_ab", ")", "\n", "outs_a", ",", "outs_b", "=", "self", ".", "dis", "(", "x_ba", ",", "x_ab", ")", "\n", "for", "it", ",", "(", "out_a", ",", "out_b", ")", "in", "enumerate", "(", "itertools", ".", "izip", "(", "outs_a", ",", "outs_b", ")", ")", ":", "\n", "      ", "outputs_a", "=", "nn", ".", "functional", ".", "sigmoid", "(", "out_a", ")", "\n", "outputs_b", "=", "nn", ".", "functional", ".", "sigmoid", "(", "out_b", ")", "\n", "all_ones", "=", "Variable", "(", "torch", ".", "ones", "(", "(", "outputs_a", ".", "size", "(", "0", ")", ")", ")", ".", "cuda", "(", "self", ".", "gpu", ")", ")", "\n", "if", "it", "==", "0", ":", "\n", "        ", "ad_loss_a", "=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "outputs_a", ",", "all_ones", ")", "\n", "ad_loss_b", "=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "outputs_b", ",", "all_ones", ")", "\n", "", "else", ":", "\n", "        ", "ad_loss_a", "+=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "outputs_a", ",", "all_ones", ")", "\n", "ad_loss_b", "+=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "outputs_b", ",", "all_ones", ")", "\n", "\n", "", "", "enc_loss", "=", "self", ".", "_compute_kl", "(", "shared", ")", "\n", "enc_bab_loss", "=", "self", ".", "_compute_kl", "(", "shared_bab", ")", "\n", "enc_aba_loss", "=", "self", ".", "_compute_kl", "(", "shared_aba", ")", "\n", "ll_loss_a", "=", "self", ".", "ll_loss_criterion_a", "(", "x_aa", ",", "images_a", ")", "\n", "ll_loss_b", "=", "self", ".", "ll_loss_criterion_b", "(", "x_bb", ",", "images_b", ")", "\n", "ll_loss_aba", "=", "self", ".", "ll_loss_criterion_a", "(", "x_aba", ",", "images_a", ")", "\n", "ll_loss_bab", "=", "self", ".", "ll_loss_criterion_b", "(", "x_bab", ",", "images_b", ")", "\n", "total_loss", "=", "hyperparameters", "[", "'gan_w'", "]", "*", "(", "ad_loss_a", "+", "ad_loss_b", ")", "+", "hyperparameters", "[", "'ll_direct_link_w'", "]", "*", "(", "ll_loss_a", "+", "ll_loss_b", ")", "+", "hyperparameters", "[", "'ll_cycle_link_w'", "]", "*", "(", "ll_loss_aba", "+", "ll_loss_bab", ")", "+", "hyperparameters", "[", "'kl_direct_link_w'", "]", "*", "(", "enc_loss", "+", "enc_loss", ")", "+", "hyperparameters", "[", "'kl_cycle_link_w'", "]", "*", "(", "enc_bab_loss", "+", "enc_aba_loss", ")", "\n", "total_loss", ".", "backward", "(", ")", "\n", "self", ".", "gen_opt", ".", "step", "(", ")", "\n", "self", ".", "gen_enc_loss", "=", "enc_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_enc_bab_loss", "=", "enc_bab_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_enc_aba_loss", "=", "enc_aba_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ad_loss_a", "=", "ad_loss_a", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ad_loss_b", "=", "ad_loss_b", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ll_loss_a", "=", "ll_loss_a", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ll_loss_b", "=", "ll_loss_b", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ll_loss_aba", "=", "ll_loss_aba", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ll_loss_bab", "=", "ll_loss_bab", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_total_loss", "=", "total_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "return", "(", "x_aa", ",", "x_ba", ",", "x_ab", ",", "x_bb", ",", "x_aba", ",", "x_bab", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer.COCOGANTrainer.dis_update": [[86, 124], ["cocogan_trainer.COCOGANTrainer.dis.zero_grad", "cocogan_trainer.COCOGANTrainer.gen", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "cocogan_trainer.COCOGANTrainer.dis", "enumerate", "loss.backward", "cocogan_trainer.COCOGANTrainer.dis_opt.step", "itertools.izip", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "out_true_a.size", "out_fake_a.size", "Variable", "Variable", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "helpers._compute_true_acc", "helpers._compute_true_acc", "helpers._compute_fake_acc", "helpers._compute_fake_acc", "exec", "exec", "loss.data.cpu().numpy", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.functional.sigmoid.size", "torch.functional.sigmoid.size", "loss.data.cpu", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.step", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers._compute_true_acc", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers._compute_true_acc", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers._compute_fake_acc", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers._compute_fake_acc", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda"], ["", "def", "dis_update", "(", "self", ",", "images_a", ",", "images_b", ",", "hyperparameters", ")", ":", "\n", "    ", "self", ".", "dis", ".", "zero_grad", "(", ")", "\n", "x_aa", ",", "x_ba", ",", "x_ab", ",", "x_bb", ",", "shared", "=", "self", ".", "gen", "(", "images_a", ",", "images_b", ")", "\n", "data_a", "=", "torch", ".", "cat", "(", "(", "images_a", ",", "x_ba", ")", ",", "0", ")", "\n", "data_b", "=", "torch", ".", "cat", "(", "(", "images_b", ",", "x_ab", ")", ",", "0", ")", "\n", "res_a", ",", "res_b", "=", "self", ".", "dis", "(", "data_a", ",", "data_b", ")", "\n", "# res_true_a, res_true_b = self.dis(images_a,images_b)", "\n", "# res_fake_a, res_fake_b = self.dis(x_ba, x_ab)", "\n", "for", "it", ",", "(", "this_a", ",", "this_b", ")", "in", "enumerate", "(", "itertools", ".", "izip", "(", "res_a", ",", "res_b", ")", ")", ":", "\n", "      ", "out_a", "=", "nn", ".", "functional", ".", "sigmoid", "(", "this_a", ")", "\n", "out_b", "=", "nn", ".", "functional", ".", "sigmoid", "(", "this_b", ")", "\n", "out_true_a", ",", "out_fake_a", "=", "torch", ".", "split", "(", "out_a", ",", "out_a", ".", "size", "(", "0", ")", "//", "2", ",", "0", ")", "\n", "out_true_b", ",", "out_fake_b", "=", "torch", ".", "split", "(", "out_b", ",", "out_b", ".", "size", "(", "0", ")", "//", "2", ",", "0", ")", "\n", "out_true_n", "=", "out_true_a", ".", "size", "(", "0", ")", "\n", "out_fake_n", "=", "out_fake_a", ".", "size", "(", "0", ")", "\n", "all1", "=", "Variable", "(", "torch", ".", "ones", "(", "(", "out_true_n", ")", ")", ".", "cuda", "(", "self", ".", "gpu", ")", ")", "\n", "all0", "=", "Variable", "(", "torch", ".", "zeros", "(", "(", "out_fake_n", ")", ")", ".", "cuda", "(", "self", ".", "gpu", ")", ")", "\n", "ad_true_loss_a", "=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "out_true_a", ",", "all1", ")", "\n", "ad_true_loss_b", "=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "out_true_b", ",", "all1", ")", "\n", "ad_fake_loss_a", "=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "out_fake_a", ",", "all0", ")", "\n", "ad_fake_loss_b", "=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "out_fake_b", ",", "all0", ")", "\n", "if", "it", "==", "0", ":", "\n", "        ", "ad_loss_a", "=", "ad_true_loss_a", "+", "ad_fake_loss_a", "\n", "ad_loss_b", "=", "ad_true_loss_b", "+", "ad_fake_loss_b", "\n", "", "else", ":", "\n", "        ", "ad_loss_a", "+=", "ad_true_loss_a", "+", "ad_fake_loss_a", "\n", "ad_loss_b", "+=", "ad_true_loss_b", "+", "ad_fake_loss_b", "\n", "", "true_a_acc", "=", "_compute_true_acc", "(", "out_true_a", ")", "\n", "true_b_acc", "=", "_compute_true_acc", "(", "out_true_b", ")", "\n", "fake_a_acc", "=", "_compute_fake_acc", "(", "out_fake_a", ")", "\n", "fake_b_acc", "=", "_compute_fake_acc", "(", "out_fake_b", ")", "\n", "exec", "(", "'self.dis_true_acc_%d = 0.5 * (true_a_acc + true_b_acc)'", "%", "it", ")", "\n", "exec", "(", "'self.dis_fake_acc_%d = 0.5 * (fake_a_acc + fake_b_acc)'", "%", "it", ")", "\n", "", "loss", "=", "hyperparameters", "[", "'gan_w'", "]", "*", "(", "ad_loss_a", "+", "ad_loss_b", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "dis_opt", ".", "step", "(", ")", "\n", "self", ".", "dis_loss", "=", "loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer.COCOGANTrainer.assemble_outputs": [[125, 136], ["cocogan_trainer.COCOGANTrainer.normalize_image", "cocogan_trainer.COCOGANTrainer.normalize_image", "cocogan_trainer.COCOGANTrainer.normalize_image", "cocogan_trainer.COCOGANTrainer.normalize_image", "cocogan_trainer.COCOGANTrainer.normalize_image", "cocogan_trainer.COCOGANTrainer.normalize_image", "cocogan_trainer.COCOGANTrainer.normalize_image", "cocogan_trainer.COCOGANTrainer.normalize_image", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image"], ["", "def", "assemble_outputs", "(", "self", ",", "images_a", ",", "images_b", ",", "network_outputs", ")", ":", "\n", "    ", "images_a", "=", "self", ".", "normalize_image", "(", "images_a", ")", "\n", "images_b", "=", "self", ".", "normalize_image", "(", "images_b", ")", "\n", "x_aa", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "0", "]", ")", "\n", "x_ba", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "1", "]", ")", "\n", "x_ab", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "2", "]", ")", "\n", "x_bb", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "3", "]", ")", "\n", "x_aba", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "4", "]", ")", "\n", "x_bab", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "5", "]", ")", "\n", "return", "torch", ".", "cat", "(", "(", "images_a", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_aa", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_ab", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_aba", "[", "0", ":", "1", ",", ":", ":", "]", ",", "\n", "images_b", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_bb", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_ba", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_bab", "[", "0", ":", "1", ",", ":", ":", "]", ")", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer.COCOGANTrainer.resume": [[137, 148], ["os.path.dirname", "helpers.get_model_list", "cocogan_trainer.COCOGANTrainer.gen.load_state_dict", "int", "helpers.get_model_list", "cocogan_trainer.COCOGANTrainer.dis.load_state_dict", "print", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers.get_model_list", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers.get_model_list"], ["", "def", "resume", "(", "self", ",", "snapshot_prefix", ")", ":", "\n", "    ", "dirname", "=", "os", ".", "path", ".", "dirname", "(", "snapshot_prefix", ")", "\n", "last_model_name", "=", "get_model_list", "(", "dirname", ",", "\"gen\"", ")", "\n", "if", "last_model_name", "is", "None", ":", "\n", "      ", "return", "0", "\n", "", "self", ".", "gen", ".", "load_state_dict", "(", "torch", ".", "load", "(", "last_model_name", ")", ")", "\n", "iterations", "=", "int", "(", "last_model_name", "[", "-", "12", ":", "-", "4", "]", ")", "\n", "last_model_name", "=", "get_model_list", "(", "dirname", ",", "\"dis\"", ")", "\n", "self", ".", "dis", ".", "load_state_dict", "(", "torch", ".", "load", "(", "last_model_name", ")", ")", "\n", "print", "(", "'Resume from iteration %d'", "%", "iterations", ")", "\n", "return", "iterations", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer.COCOGANTrainer.save": [[149, 154], ["torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "cocogan_trainer.COCOGANTrainer.gen.state_dict", "cocogan_trainer.COCOGANTrainer.dis.state_dict"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save"], ["", "def", "save", "(", "self", ",", "snapshot_prefix", ",", "iterations", ")", ":", "\n", "    ", "gen_filename", "=", "'%s_gen_%08d.pkl'", "%", "(", "snapshot_prefix", ",", "iterations", "+", "1", ")", "\n", "dis_filename", "=", "'%s_dis_%08d.pkl'", "%", "(", "snapshot_prefix", ",", "iterations", "+", "1", ")", "\n", "torch", ".", "save", "(", "self", ".", "gen", ".", "state_dict", "(", ")", ",", "gen_filename", ")", "\n", "torch", ".", "save", "(", "self", ".", "dis", ".", "state_dict", "(", ")", ",", "dis_filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer.COCOGANTrainer.cuda": [[155, 159], ["cocogan_trainer.COCOGANTrainer.dis.cuda", "cocogan_trainer.COCOGANTrainer.gen.cuda"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda"], ["", "def", "cuda", "(", "self", ",", "gpu", ")", ":", "\n", "    ", "self", ".", "gpu", "=", "gpu", "\n", "self", ".", "dis", ".", "cuda", "(", "gpu", ")", "\n", "self", ".", "gen", ".", "cuda", "(", "gpu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer.COCOGANTrainer.normalize_image": [[160, 162], ["None"], "methods", ["None"], ["", "def", "normalize_image", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "x", "[", ":", ",", "0", ":", "3", ",", ":", ",", ":", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers.get_model_list": [[9, 19], ["gen_models.sort", "os.path.exists", "os.path.join", "os.listdir", "os.path.isfile", "os.path.join"], "function", ["None"], ["def", "get_model_list", "(", "dirname", ",", "key", ")", ":", "\n", "  ", "if", "os", ".", "path", ".", "exists", "(", "dirname", ")", "is", "False", ":", "\n", "    ", "return", "None", "\n", "", "gen_models", "=", "[", "os", ".", "path", ".", "join", "(", "dirname", ",", "f", ")", "for", "f", "in", "os", ".", "listdir", "(", "dirname", ")", "if", "\n", "os", ".", "path", ".", "isfile", "(", "os", ".", "path", ".", "join", "(", "dirname", ",", "f", ")", ")", "and", "key", "in", "f", "and", "\"pkl\"", "in", "f", "]", "\n", "if", "gen_models", "is", "None", ":", "\n", "    ", "return", "None", "\n", "", "gen_models", ".", "sort", "(", ")", "\n", "last_model_name", "=", "gen_models", "[", "-", "1", "]", "\n", "return", "last_model_name", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers._compute_true_acc": [[20, 26], ["torch.ge", "len", "predictions.view.view", "predictions.view.size", "predictions.view.size", "predictions.view.size", "predictions.view.size", "predictions.view.size"], "function", ["None"], ["", "def", "_compute_true_acc", "(", "predictions", ")", ":", "\n", "  ", "predictions", "=", "torch", ".", "ge", "(", "predictions", ".", "data", ",", "0.5", ")", "\n", "if", "len", "(", "predictions", ".", "size", "(", ")", ")", "==", "3", ":", "\n", "    ", "predictions", "=", "predictions", ".", "view", "(", "predictions", ".", "size", "(", "0", ")", "*", "predictions", ".", "size", "(", "1", ")", "*", "predictions", ".", "size", "(", "2", ")", ")", "\n", "", "acc", "=", "(", "predictions", "==", "1", ")", ".", "sum", "(", ")", "/", "(", "1.0", "*", "predictions", ".", "size", "(", "0", ")", ")", "\n", "return", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers._compute_fake_acc": [[27, 33], ["torch.le", "len", "predictions.view.view", "predictions.view.size", "predictions.view.size", "predictions.view.size", "predictions.view.size", "predictions.view.size"], "function", ["None"], ["", "def", "_compute_fake_acc", "(", "predictions", ")", ":", "\n", "  ", "predictions", "=", "torch", ".", "le", "(", "predictions", ".", "data", ",", "0.5", ")", "\n", "if", "len", "(", "predictions", ".", "size", "(", ")", ")", "==", "3", ":", "\n", "    ", "predictions", "=", "predictions", ".", "view", "(", "predictions", ".", "size", "(", "0", ")", "*", "predictions", ".", "size", "(", "1", ")", "*", "predictions", ".", "size", "(", "2", ")", ")", "\n", "", "acc", "=", "(", "predictions", "==", "1", ")", ".", "sum", "(", ")", "/", "(", "1.0", "*", "predictions", ".", "size", "(", "0", ")", ")", "\n", "return", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers._compute_true_acc2": [[34, 38], ["torch.max", "true_predicts.size"], "function", ["None"], ["", "def", "_compute_true_acc2", "(", "predictions", ")", ":", "\n", "  ", "_", ",", "true_predicts", "=", "torch", ".", "max", "(", "predictions", ".", "data", ",", "1", ")", "\n", "acc", "=", "(", "true_predicts", "==", "1", ")", ".", "sum", "(", ")", "/", "(", "1.0", "*", "true_predicts", ".", "size", "(", "0", ")", ")", "\n", "return", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers._compute_fake_acc2": [[39, 43], ["torch.max", "true_predicts.size"], "function", ["None"], ["", "def", "_compute_fake_acc2", "(", "predictions", ")", ":", "\n", "  ", "_", ",", "true_predicts", "=", "torch", ".", "max", "(", "predictions", ".", "data", ",", "1", ")", "\n", "acc", "=", "(", "true_predicts", "==", "0", ")", ".", "sum", "(", ")", "/", "(", "1.0", "*", "true_predicts", ".", "size", "(", "0", ")", ")", "\n", "return", "acc", "\n", "", ""]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_da.COCOGANDAContextTrainer.__init__": [[14, 31], ["torch.Module.__init__", "exec", "exec", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "cocogan_trainer_da.COCOGANDAContextTrainer.dis.apply", "cocogan_trainer_da.COCOGANDAContextTrainer.gen.apply", "torch.nn.MSELoss", "torch.nn.MSELoss", "torch.nn.MSELoss", "torch.nn.MSELoss", "cocogan_trainer_da.COCOGANDAContextTrainer._create_xy_image", "cocogan_trainer_da.COCOGANDAContextTrainer.unsqueeze().expand", "cocogan_trainer_da.COCOGANDAContextTrainer.dis.parameters", "cocogan_trainer_da.COCOGANDAContextTrainer.gen.parameters", "cocogan_trainer_da.COCOGANDAContextTrainer.size", "cocogan_trainer_da.COCOGANDAContextTrainer.size", "cocogan_trainer_da.COCOGANDAContextTrainer.size", "cocogan_trainer_da.COCOGANDAContextTrainer.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer._create_xy_image"], ["  ", "def", "__init__", "(", "self", ",", "hyperparameters", ")", ":", "\n", "    ", "super", "(", "COCOGANDAContextTrainer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "gen_ch", "=", "hyperparameters", "[", "'gen_ch'", "]", "\n", "dis_ch", "=", "hyperparameters", "[", "'dis_ch'", "]", "\n", "output_dim_a", "=", "hyperparameters", "[", "'input_dim_a'", "]", "\n", "output_dim_b", "=", "hyperparameters", "[", "'input_dim_b'", "]", "\n", "input_dim_a", "=", "output_dim_a", "+", "2", "\n", "input_dim_b", "=", "output_dim_b", "+", "2", "\n", "exec", "(", "'self.dis = %s(dis_ch, output_dim_a, output_dim_b)'", "%", "hyperparameters", "[", "'dis'", "]", ")", "\n", "exec", "(", "'self.gen = %s(gen_ch, input_dim_a, output_dim_a, input_dim_b, output_dim_b)'", "%", "hyperparameters", "[", "'gen'", "]", ")", "\n", "self", ".", "dis_opt", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "dis", ".", "parameters", "(", ")", ",", "lr", "=", "0.0002", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "weight_decay", "=", "0.0005", ")", "\n", "self", ".", "gen_opt", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "gen", ".", "parameters", "(", ")", ",", "lr", "=", "0.0002", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "weight_decay", "=", "0.0005", ")", "\n", "self", ".", "dis", ".", "apply", "(", "xavier_weights_init", ")", "\n", "self", ".", "gen", ".", "apply", "(", "gaussian_weights_init", ")", "# Generator makes use of batch norm so we use gaussian", "\n", "self", ".", "ll_loss_criterion", "=", "torch", ".", "nn", ".", "MSELoss", "(", ")", "# We use MSELoss here", "\n", "xy", "=", "self", ".", "_create_xy_image", "(", ")", "\n", "self", ".", "xy", "=", "xy", ".", "unsqueeze", "(", "0", ")", ".", "expand", "(", "hyperparameters", "[", "'batch_size'", "]", ",", "xy", ".", "size", "(", "0", ")", ",", "xy", ".", "size", "(", "1", ")", ",", "xy", ".", "size", "(", "2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_da.COCOGANDAContextTrainer.cuda": [[32, 37], ["cocogan_trainer_da.COCOGANDAContextTrainer.dis.cuda", "cocogan_trainer_da.COCOGANDAContextTrainer.gen.cuda", "cocogan_trainer_da.COCOGANDAContextTrainer.xy.cuda"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda"], ["", "def", "cuda", "(", "self", ",", "gpu", "=", "0", ")", ":", "\n", "    ", "self", ".", "gpu", "=", "gpu", "\n", "self", ".", "dis", ".", "cuda", "(", "self", ".", "gpu", ")", "\n", "self", ".", "gen", ".", "cuda", "(", "self", ".", "gpu", ")", "\n", "self", ".", "xy", "=", "self", ".", "xy", ".", "cuda", "(", "self", ".", "gpu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_da.COCOGANDAContextTrainer._create_xy_image": [[38, 44], ["list", "np.transpose", "Variable", "itertools.product", "np.float32", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "range", "range", "np.reshape", "np.asarray"], "methods", ["None"], ["", "def", "_create_xy_image", "(", "self", ",", "width", "=", "32", ")", ":", "\n", "    ", "coordinates", "=", "list", "(", "itertools", ".", "product", "(", "range", "(", "width", ")", ",", "range", "(", "width", ")", ")", ")", "\n", "arr", "=", "(", "np", ".", "reshape", "(", "np", ".", "asarray", "(", "coordinates", ")", ",", "newshape", "=", "[", "width", ",", "width", ",", "2", "]", ")", "-", "width", "/", "2", ")", "/", "(", "width", "/", "2", ")", "\n", "new_map", "=", "np", ".", "transpose", "(", "np", ".", "float32", "(", "arr", ")", ",", "[", "2", ",", "0", ",", "1", "]", ")", "\n", "xy", "=", "Variable", "(", "torch", ".", "from_numpy", "(", "new_map", ")", ",", "requires_grad", "=", "False", ")", "\n", "return", "xy", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_da.COCOGANDAContextTrainer._compute_kl": [[45, 50], ["torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow.size", "torch.pow.size", "torch.log", "torch.log", "torch.log", "torch.log"], "methods", ["None"], ["", "def", "_compute_kl", "(", "self", ",", "mu", ",", "sd", ")", ":", "\n", "    ", "mu_2", "=", "torch", ".", "pow", "(", "mu", ",", "2", ")", "\n", "sd_2", "=", "torch", ".", "pow", "(", "sd", ",", "2", ")", "\n", "encoding_loss", "=", "(", "mu_2", "+", "sd_2", "-", "torch", ".", "log", "(", "sd_2", ")", ")", ".", "sum", "(", ")", "/", "mu_2", ".", "size", "(", "0", ")", "\n", "return", "encoding_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_da.COCOGANDAContextTrainer._compute_ll_loss": [[51, 53], ["b.size", "b.size", "cocogan_trainer_da.COCOGANDAContextTrainer.ll_loss_criterion", "b.size"], "methods", ["None"], ["", "def", "_compute_ll_loss", "(", "self", ",", "a", ",", "b", ")", ":", "\n", "    ", "return", "self", ".", "ll_loss_criterion", "(", "a", ",", "b", ")", "*", "b", ".", "size", "(", "1", ")", "*", "b", ".", "size", "(", "2", ")", "*", "b", ".", "size", "(", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_da.COCOGANDAContextTrainer.gen_update": [[54, 84], ["cocogan_trainer_da.COCOGANDAContextTrainer.gen.zero_grad", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "cocogan_trainer_da.COCOGANDAContextTrainer.gen", "cocogan_trainer_da.COCOGANDAContextTrainer.dis", "cocogan_trainer_da.COCOGANDAContextTrainer.dis", "Variable", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "cocogan_trainer_da.COCOGANDAContextTrainer._compute_ll_loss", "cocogan_trainer_da.COCOGANDAContextTrainer._compute_ll_loss", "enumerate", "total_loss.backward", "cocogan_trainer_da.COCOGANDAContextTrainer.gen_opt.step", "torch.LongTensor().cuda", "torch.LongTensor().cuda", "torch.LongTensor().cuda", "torch.LongTensor().cuda", "ad_loss.data.cpu().numpy", "cocogan_trainer_da.COCOGANDAContextTrainer.data.cpu().numpy", "cocogan_trainer_da.COCOGANDAContextTrainer.data.cpu().numpy", "encoding_loss.data.cpu().numpy", "total_loss.data.cpu().numpy", "cocogan_trainer_da.COCOGANDAContextTrainer._compute_kl", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "ad_loss.data.cpu", "cocogan_trainer_da.COCOGANDAContextTrainer.data.cpu", "cocogan_trainer_da.COCOGANDAContextTrainer.data.cpu", "encoding_loss.data.cpu", "total_loss.data.cpu", "np.ones", "fake_trans_res.size"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_da.COCOGANDATrainer._compute_ll_loss", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_da.COCOGANDATrainer._compute_ll_loss", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.step", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer._compute_kl"], ["", "def", "gen_update", "(", "self", ",", "x_a", ",", "x_b", ",", "hyperparameters", ")", ":", "\n", "    ", "self", ".", "gen", ".", "zero_grad", "(", ")", "\n", "x_a_xy", "=", "torch", ".", "cat", "(", "(", "x_a", ",", "self", ".", "xy", ")", ",", "1", ")", "# Create input image to the generator a", "\n", "x_b_xy", "=", "torch", ".", "cat", "(", "(", "x_b", ",", "self", ".", "xy", ")", ",", "1", ")", "# Create input image to the generator b", "\n", "x_aa", ",", "x_ba", ",", "x_ab", ",", "x_bb", ",", "lt_codes", "=", "self", ".", "gen", "(", "x_a_xy", ",", "x_b_xy", ",", "self", ".", "gpu", ")", "\n", "\n", "fake_recon_res", ",", "fake_feat_aa", ",", "fake_feat_bb", "=", "self", ".", "dis", "(", "x_aa", ",", "x_bb", ")", "\n", "fake_trans_res", ",", "fake_feat_ba", ",", "fake_feat_ab", "=", "self", ".", "dis", "(", "x_ba", ",", "x_ab", ")", "\n", "\n", "ones", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "np", ".", "ones", "(", "fake_trans_res", ".", "size", "(", "0", ")", ",", "dtype", "=", "np", ".", "int", ")", ")", ".", "cuda", "(", "self", ".", "gpu", ")", ")", "\n", "ad_fake_recon_loss", "=", "nn", ".", "functional", ".", "cross_entropy", "(", "fake_recon_res", ",", "ones", ")", "\n", "ad_fake_trans_loss", "=", "nn", ".", "functional", ".", "cross_entropy", "(", "fake_trans_res", ",", "ones", ")", "\n", "\n", "ad_loss", "=", "ad_fake_trans_loss", "+", "ad_fake_recon_loss", "\n", "ll_loss_a", "=", "self", ".", "_compute_ll_loss", "(", "x_aa", ",", "x_a", ")", "\n", "ll_loss_b", "=", "self", ".", "_compute_ll_loss", "(", "x_bb", ",", "x_b", ")", "\n", "encoding_loss", "=", "0", "\n", "for", "i", ",", "lt", "in", "enumerate", "(", "lt_codes", ")", ":", "\n", "      ", "encoding_loss", "+=", "2", "*", "self", ".", "_compute_kl", "(", "*", "lt", ")", "\n", "", "total_loss", "=", "hyperparameters", "[", "'gan_w'", "]", "*", "ad_loss", "+", "hyperparameters", "[", "'kl_normalized_direct_w'", "]", "*", "encoding_loss", "+", "hyperparameters", "[", "'ll_normalized_direct_w'", "]", "*", "(", "ll_loss_a", "+", "ll_loss_b", ")", "\n", "total_loss", ".", "backward", "(", ")", "\n", "self", ".", "gen_opt", ".", "step", "(", ")", "\n", "self", ".", "gen_ad_loss", "=", "ad_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ll_loss_a", "=", "ll_loss_a", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ll_loss_b", "=", "ll_loss_b", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_enc_loss", "=", "encoding_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_total_loss", "=", "total_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "return", "x_aa", ",", "x_ba", ",", "x_ab", ",", "x_bb", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_da.COCOGANDAContextTrainer.dis_update": [[85, 132], ["cocogan_trainer_da.COCOGANDAContextTrainer.dis.zero_grad", "cocogan_trainer_da.COCOGANDAContextTrainer.dis", "Variable", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "cocogan_trainer_da.COCOGANDAContextTrainer.gen", "cocogan_trainer_da.COCOGANDAContextTrainer.dis", "cocogan_trainer_da.COCOGANDAContextTrainer.dis", "Variable", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "Variable", "cocogan_trainer_da.COCOGANDAContextTrainer._compute_ll_loss", "cocogan_trainer_da.COCOGANDAContextTrainer._compute_ll_loss", "cocogan_trainer_da.COCOGANDAContextTrainer.dis.classify_a", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "torch.max", "torch.max", "torch.max", "torch.max", "helpers._compute_true_acc2", "helpers._compute_fake_acc2", "helpers._compute_fake_acc2", "total_loss.backward", "cocogan_trainer_da.COCOGANDAContextTrainer.dis_opt.step", "torch.LongTensor().cuda", "torch.LongTensor().cuda", "torch.LongTensor().cuda", "torch.LongTensor().cuda", "torch.LongTensor().cuda", "torch.LongTensor().cuda", "torch.LongTensor().cuda", "torch.LongTensor().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.functional.cross_entropy.data.cpu().numpy", "torch.functional.cross_entropy.data.cpu().numpy", "ad_fake_loss.data.cpu().numpy", "cocogan_trainer_da.COCOGANDAContextTrainer.data.cpu().numpy", "cocogan_trainer_da.COCOGANDAContextTrainer.data.cpu().numpy", "total_loss.data.cpu().numpy", "cls_predicts.size", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.functional.cross_entropy.data.cpu", "torch.functional.cross_entropy.data.cpu", "ad_fake_loss.data.cpu", "cocogan_trainer_da.COCOGANDAContextTrainer.data.cpu", "cocogan_trainer_da.COCOGANDAContextTrainer.data.cpu", "total_loss.data.cpu", "np.ones", "np.zeros", "fake_feat_aa.size", "true_res.size", "fake_recon_res.size"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_da.COCOGANDATrainer._compute_ll_loss", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_da.COCOGANDATrainer._compute_ll_loss", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets_da.CoDis32x32.classify_a", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers._compute_true_acc2", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers._compute_fake_acc2", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers._compute_fake_acc2", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.step", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda"], ["", "def", "dis_update", "(", "self", ",", "images_a", ",", "labels_a", ",", "images_b", ",", "hyperparameters", ")", ":", "\n", "    ", "self", ".", "dis", ".", "zero_grad", "(", ")", "\n", "true_res", ",", "true_feat_a", ",", "true_feat_b", "=", "self", ".", "dis", "(", "images_a", ",", "images_b", ")", "\n", "ones", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "np", ".", "ones", "(", "true_res", ".", "size", "(", "0", ")", ",", "dtype", "=", "np", ".", "int", ")", ")", ".", "cuda", "(", "self", ".", "gpu", ")", ")", "\n", "ad_true_loss", "=", "nn", ".", "functional", ".", "cross_entropy", "(", "true_res", ",", "ones", ")", "\n", "\n", "x_a_xy", "=", "torch", ".", "cat", "(", "(", "images_a", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "x_b_xy", "=", "torch", ".", "cat", "(", "(", "images_b", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "x_aa", ",", "x_ba", ",", "x_ab", ",", "x_bb", ",", "lt_codes", "=", "self", ".", "gen", "(", "x_a_xy", ",", "x_b_xy", ",", "self", ".", "gpu", ")", "\n", "fake_recon_res", ",", "fake_feat_aa", ",", "fake_feat_bb", "=", "self", ".", "dis", "(", "x_aa", ",", "x_bb", ")", "\n", "fake_trans_res", ",", "fake_feat_ba", ",", "fake_feat_ab", "=", "self", ".", "dis", "(", "x_ba", ",", "x_ab", ")", "\n", "zeros", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "np", ".", "zeros", "(", "fake_recon_res", ".", "size", "(", "0", ")", ",", "dtype", "=", "np", ".", "int", ")", ")", ".", "cuda", "(", "self", ".", "gpu", ")", ")", "\n", "ad_fake_recon_loss", "=", "nn", ".", "functional", ".", "cross_entropy", "(", "fake_recon_res", ",", "zeros", ")", "\n", "ad_fake_trans_loss", "=", "nn", ".", "functional", ".", "cross_entropy", "(", "fake_trans_res", ",", "zeros", ")", "\n", "ad_fake_loss", "=", "0.5", "*", "(", "ad_fake_trans_loss", "+", "ad_fake_recon_loss", ")", "\n", "\n", "dummy_variable", "=", "Variable", "(", "torch", ".", "zeros", "(", "fake_feat_aa", ".", "size", "(", ")", ")", ".", "cuda", "(", "self", ".", "gpu", ")", ")", "\n", "feature_loss_a", "=", "self", ".", "_compute_ll_loss", "(", "fake_feat_ab", "-", "fake_feat_aa", ",", "dummy_variable", ")", "\n", "feature_loss_b", "=", "self", ".", "_compute_ll_loss", "(", "fake_feat_ba", "-", "fake_feat_bb", ",", "dummy_variable", ")", "\n", "\n", "# Classification loss", "\n", "cls_outputs", "=", "self", ".", "dis", ".", "classify_a", "(", "images_a", ")", "\n", "cls_loss", "=", "nn", ".", "functional", ".", "cross_entropy", "(", "cls_outputs", ",", "labels_a", ")", "\n", "_", ",", "cls_predicts", "=", "torch", ".", "max", "(", "cls_outputs", ".", "data", ",", "1", ")", "\n", "cls_acc", "=", "(", "cls_predicts", "==", "labels_a", ".", "data", ")", ".", "sum", "(", ")", "/", "(", "1.0", "*", "cls_predicts", ".", "size", "(", "0", ")", ")", "\n", "\n", "true_acc", "=", "_compute_true_acc2", "(", "true_res", ")", "\n", "fake_trans_acc", "=", "_compute_fake_acc2", "(", "fake_trans_res", ")", "\n", "fake_recon_acc", "=", "_compute_fake_acc2", "(", "fake_recon_res", ")", "\n", "fake_acc", "=", "0.5", "*", "(", "fake_trans_acc", "+", "fake_recon_acc", ")", "\n", "\n", "total_loss", "=", "hyperparameters", "[", "'gan_w'", "]", "*", "(", "ad_true_loss", "+", "ad_fake_loss", ")", "+", "hyperparameters", "[", "'cls_w'", "]", "*", "cls_loss", "+", "hyperparameters", "[", "'feature_w'", "]", "*", "(", "feature_loss_a", "+", "feature_loss_b", ")", "\n", "total_loss", ".", "backward", "(", ")", "\n", "self", ".", "dis_opt", ".", "step", "(", ")", "\n", "self", ".", "dis_true_acc", "=", "true_acc", "\n", "self", ".", "dis_fake_acc", "=", "fake_acc", "\n", "self", ".", "dis_cls_acc", "=", "cls_acc", "\n", "\n", "self", ".", "dis_cls_loss", "=", "cls_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "dis_ad_true_loss", "=", "ad_true_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "dis_ad_fake_loss_a", "=", "ad_fake_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "dis_feature_loss_a", "=", "feature_loss_a", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "dis_feature_loss_b", "=", "feature_loss_b", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "dis_total_loss", "=", "total_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_da.COCOGANDAContextTrainer.resume": [[133, 144], ["os.path.dirname", "helpers.get_model_list", "cocogan_trainer_da.COCOGANDAContextTrainer.gen.load_state_dict", "int", "helpers.get_model_list", "cocogan_trainer_da.COCOGANDAContextTrainer.dis.load_state_dict", "print", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers.get_model_list", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers.get_model_list"], ["", "def", "resume", "(", "self", ",", "snapshot_prefix", ")", ":", "\n", "    ", "dirname", "=", "os", ".", "path", ".", "dirname", "(", "snapshot_prefix", ")", "\n", "last_model_name", "=", "get_model_list", "(", "dirname", ",", "\"gen\"", ")", "\n", "if", "last_model_name", "is", "None", ":", "\n", "      ", "return", "0", "\n", "", "self", ".", "gen", ".", "load_state_dict", "(", "torch", ".", "load", "(", "last_model_name", ")", ")", "\n", "iterations", "=", "int", "(", "last_model_name", "[", "-", "12", ":", "-", "4", "]", ")", "\n", "last_model_name", "=", "get_model_list", "(", "dirname", ",", "\"dis\"", ")", "\n", "self", ".", "dis", ".", "load_state_dict", "(", "torch", ".", "load", "(", "last_model_name", ")", ")", "\n", "print", "(", "'Resume from iteration %d'", "%", "iterations", ")", "\n", "return", "iterations", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_da.COCOGANDAContextTrainer.save": [[145, 150], ["torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "cocogan_trainer_da.COCOGANDAContextTrainer.gen.state_dict", "cocogan_trainer_da.COCOGANDAContextTrainer.dis.state_dict"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save"], ["", "def", "save", "(", "self", ",", "snapshot_prefix", ",", "iterations", ")", ":", "\n", "    ", "gen_filename", "=", "'%s_gen_%08d.pkl'", "%", "(", "snapshot_prefix", ",", "iterations", "+", "1", ")", "\n", "dis_filename", "=", "'%s_dis_%08d.pkl'", "%", "(", "snapshot_prefix", ",", "iterations", "+", "1", ")", "\n", "torch", ".", "save", "(", "self", ".", "gen", ".", "state_dict", "(", ")", ",", "gen_filename", ")", "\n", "torch", ".", "save", "(", "self", ".", "dis", ".", "state_dict", "(", ")", ",", "dis_filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_da.COCOGANDATrainer.__init__": [[153, 168], ["torch.Module.__init__", "exec", "exec", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "cocogan_trainer_da.COCOGANDATrainer.dis.apply", "cocogan_trainer_da.COCOGANDATrainer.gen.apply", "torch.nn.MSELoss", "torch.nn.MSELoss", "torch.nn.MSELoss", "torch.nn.MSELoss", "cocogan_trainer_da.COCOGANDATrainer.dis.parameters", "cocogan_trainer_da.COCOGANDATrainer.gen.parameters"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__"], ["  ", "def", "__init__", "(", "self", ",", "hyperparameters", ")", ":", "\n", "    ", "super", "(", "COCOGANDATrainer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "gen_ch", "=", "hyperparameters", "[", "'gen_ch'", "]", "\n", "dis_ch", "=", "hyperparameters", "[", "'dis_ch'", "]", "\n", "output_dim_a", "=", "hyperparameters", "[", "'input_dim_a'", "]", "\n", "output_dim_b", "=", "hyperparameters", "[", "'input_dim_b'", "]", "\n", "input_dim_a", "=", "output_dim_a", "\n", "input_dim_b", "=", "output_dim_b", "\n", "exec", "(", "'self.dis = %s(dis_ch, input_dim_a, input_dim_b)'", "%", "hyperparameters", "[", "'dis'", "]", ")", "\n", "exec", "(", "'self.gen = %s(gen_ch, input_dim_a, output_dim_a, input_dim_b, output_dim_b)'", "%", "hyperparameters", "[", "'gen'", "]", ")", "\n", "self", ".", "dis_opt", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "dis", ".", "parameters", "(", ")", ",", "lr", "=", "0.0002", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "weight_decay", "=", "0.0005", ")", "\n", "self", ".", "gen_opt", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "gen", ".", "parameters", "(", ")", ",", "lr", "=", "0.0002", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "weight_decay", "=", "0.0005", ")", "\n", "self", ".", "dis", ".", "apply", "(", "xavier_weights_init", ")", "\n", "self", ".", "gen", ".", "apply", "(", "gaussian_weights_init", ")", "\n", "self", ".", "ll_loss_criterion", "=", "torch", ".", "nn", ".", "MSELoss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_da.COCOGANDATrainer._compute_kl": [[169, 174], ["torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow.size", "torch.pow.size", "torch.log", "torch.log", "torch.log", "torch.log"], "methods", ["None"], ["", "def", "_compute_kl", "(", "self", ",", "mu", ",", "sd", ")", ":", "\n", "    ", "mu_2", "=", "torch", ".", "pow", "(", "mu", ",", "2", ")", "\n", "sd_2", "=", "torch", ".", "pow", "(", "sd", ",", "2", ")", "\n", "encoding_loss", "=", "(", "mu_2", "+", "sd_2", "-", "torch", ".", "log", "(", "sd_2", ")", ")", ".", "sum", "(", ")", "/", "mu_2", ".", "size", "(", "0", ")", "\n", "return", "encoding_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_da.COCOGANDATrainer.cuda": [[175, 179], ["cocogan_trainer_da.COCOGANDATrainer.dis.cuda", "cocogan_trainer_da.COCOGANDATrainer.gen.cuda"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda"], ["", "def", "cuda", "(", "self", ",", "gpu", "=", "0", ")", ":", "\n", "    ", "self", ".", "gpu", "=", "gpu", "\n", "self", ".", "dis", ".", "cuda", "(", "self", ".", "gpu", ")", "\n", "self", ".", "gen", ".", "cuda", "(", "self", ".", "gpu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_da.COCOGANDATrainer._compute_ll_loss": [[180, 182], ["b.size", "b.size", "cocogan_trainer_da.COCOGANDATrainer.ll_loss_criterion", "b.size"], "methods", ["None"], ["", "def", "_compute_ll_loss", "(", "self", ",", "a", ",", "b", ")", ":", "\n", "    ", "return", "self", ".", "ll_loss_criterion", "(", "a", ",", "b", ")", "*", "b", ".", "size", "(", "1", ")", "*", "b", ".", "size", "(", "2", ")", "*", "b", ".", "size", "(", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_da.COCOGANDATrainer.gen_update": [[183, 208], ["cocogan_trainer_da.COCOGANDATrainer.gen.zero_grad", "cocogan_trainer_da.COCOGANDATrainer.gen", "cocogan_trainer_da.COCOGANDATrainer.dis", "cocogan_trainer_da.COCOGANDATrainer.dis", "Variable", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "cocogan_trainer_da.COCOGANDATrainer._compute_ll_loss", "cocogan_trainer_da.COCOGANDATrainer._compute_ll_loss", "enumerate", "total_loss.backward", "cocogan_trainer_da.COCOGANDATrainer.gen_opt.step", "torch.LongTensor().cuda", "torch.LongTensor().cuda", "torch.LongTensor().cuda", "torch.LongTensor().cuda", "ad_loss.data.cpu().numpy", "cocogan_trainer_da.COCOGANDATrainer.data.cpu().numpy", "cocogan_trainer_da.COCOGANDATrainer.data.cpu().numpy", "encoding_loss.data.cpu().numpy", "total_loss.data.cpu().numpy", "cocogan_trainer_da.COCOGANDATrainer._compute_kl", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "ad_loss.data.cpu", "cocogan_trainer_da.COCOGANDATrainer.data.cpu", "cocogan_trainer_da.COCOGANDATrainer.data.cpu", "encoding_loss.data.cpu", "total_loss.data.cpu", "np.ones", "fake_trans_res.size"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_da.COCOGANDATrainer._compute_ll_loss", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_da.COCOGANDATrainer._compute_ll_loss", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.step", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer._compute_kl"], ["", "def", "gen_update", "(", "self", ",", "x_a", ",", "x_b", ",", "hyperparameters", ")", ":", "\n", "    ", "self", ".", "gen", ".", "zero_grad", "(", ")", "\n", "x_aa", ",", "x_ba", ",", "x_ab", ",", "x_bb", ",", "lt_codes", "=", "self", ".", "gen", "(", "x_a", ",", "x_b", ",", "self", ".", "gpu", ")", "\n", "fake_trans_res", ",", "fake_feat_ba", ",", "fake_feat_ab", "=", "self", ".", "dis", "(", "x_ba", ",", "x_ab", ")", "\n", "fake_recon_res", ",", "fake_feat_aa", ",", "fake_feat_bb", "=", "self", ".", "dis", "(", "x_aa", ",", "x_bb", ")", "\n", "ones", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "np", ".", "ones", "(", "fake_trans_res", ".", "size", "(", "0", ")", ",", "dtype", "=", "np", ".", "int", ")", ")", ".", "cuda", "(", "self", ".", "gpu", ")", ")", "\n", "ad_fake_trans_loss", "=", "nn", ".", "functional", ".", "cross_entropy", "(", "fake_trans_res", ",", "ones", ")", "\n", "ad_fake_recon_loss", "=", "nn", ".", "functional", ".", "cross_entropy", "(", "fake_recon_res", ",", "ones", ")", "\n", "ad_loss", "=", "ad_fake_trans_loss", "+", "ad_fake_recon_loss", "\n", "ll_loss_a", "=", "self", ".", "_compute_ll_loss", "(", "x_aa", ",", "x_a", ")", "\n", "ll_loss_b", "=", "self", ".", "_compute_ll_loss", "(", "x_bb", ",", "x_b", ")", "\n", "encoding_loss", "=", "0", "\n", "for", "i", ",", "lt", "in", "enumerate", "(", "lt_codes", ")", ":", "\n", "      ", "encoding_loss", "+=", "2", "*", "self", ".", "_compute_kl", "(", "*", "lt", ")", "\n", "", "total_loss", "=", "hyperparameters", "[", "'gan_w'", "]", "*", "ad_loss", "+", "hyperparameters", "[", "'kl_normalized_direct_w'", "]", "*", "encoding_loss", "+", "hyperparameters", "[", "'ll_normalized_direct_w'", "]", "*", "(", "ll_loss_a", "+", "ll_loss_b", ")", "\n", "total_loss", ".", "backward", "(", ")", "\n", "self", ".", "gen_opt", ".", "step", "(", ")", "\n", "self", ".", "gen_ad_loss", "=", "ad_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ll_loss_a", "=", "ll_loss_a", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ll_loss_b", "=", "ll_loss_b", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_enc_loss", "=", "encoding_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_total_loss", "=", "total_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "return", "x_aa", ",", "x_ba", ",", "x_ab", ",", "x_bb", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_da.COCOGANDATrainer.dis_update": [[209, 254], ["cocogan_trainer_da.COCOGANDATrainer.dis.zero_grad", "cocogan_trainer_da.COCOGANDATrainer.dis", "Variable", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "cocogan_trainer_da.COCOGANDATrainer.gen", "cocogan_trainer_da.COCOGANDATrainer.dis", "cocogan_trainer_da.COCOGANDATrainer.dis", "Variable", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "Variable", "cocogan_trainer_da.COCOGANDATrainer._compute_ll_loss", "cocogan_trainer_da.COCOGANDATrainer._compute_ll_loss", "cocogan_trainer_da.COCOGANDATrainer.dis.classify_a", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "torch.max", "torch.max", "torch.max", "torch.max", "helpers._compute_true_acc2", "helpers._compute_fake_acc2", "helpers._compute_fake_acc2", "total_loss.backward", "cocogan_trainer_da.COCOGANDATrainer.dis_opt.step", "torch.LongTensor().cuda", "torch.LongTensor().cuda", "torch.LongTensor().cuda", "torch.LongTensor().cuda", "torch.LongTensor().cuda", "torch.LongTensor().cuda", "torch.LongTensor().cuda", "torch.LongTensor().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.functional.cross_entropy.data.cpu().numpy", "torch.functional.cross_entropy.data.cpu().numpy", "ad_fake_loss.data.cpu().numpy", "cocogan_trainer_da.COCOGANDATrainer.data.cpu().numpy", "cocogan_trainer_da.COCOGANDATrainer.data.cpu().numpy", "total_loss.data.cpu().numpy", "cls_predicts.size", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.functional.cross_entropy.data.cpu", "torch.functional.cross_entropy.data.cpu", "ad_fake_loss.data.cpu", "cocogan_trainer_da.COCOGANDATrainer.data.cpu", "cocogan_trainer_da.COCOGANDATrainer.data.cpu", "total_loss.data.cpu", "np.ones", "np.zeros", "fake_feat_aa.size", "true_res.size", "fake_recon_res.size"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_da.COCOGANDATrainer._compute_ll_loss", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_da.COCOGANDATrainer._compute_ll_loss", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets_da.CoDis32x32.classify_a", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers._compute_true_acc2", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers._compute_fake_acc2", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers._compute_fake_acc2", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.step", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda"], ["", "def", "dis_update", "(", "self", ",", "images_a", ",", "labels_a", ",", "images_b", ",", "hyperparameters", ")", ":", "\n", "    ", "self", ".", "dis", ".", "zero_grad", "(", ")", "\n", "true_res", ",", "true_feat_a", ",", "true_feat_b", "=", "self", ".", "dis", "(", "images_a", ",", "images_b", ")", "\n", "ones", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "np", ".", "ones", "(", "true_res", ".", "size", "(", "0", ")", ",", "dtype", "=", "np", ".", "int", ")", ")", ".", "cuda", "(", "self", ".", "gpu", ")", ")", "\n", "ad_true_loss", "=", "nn", ".", "functional", ".", "cross_entropy", "(", "true_res", ",", "ones", ")", "\n", "\n", "x_aa", ",", "x_ba", ",", "x_ab", ",", "x_bb", ",", "lt_codes", "=", "self", ".", "gen", "(", "images_a", ",", "images_b", ",", "self", ".", "gpu", ")", "\n", "fake_trans_res", ",", "fake_feat_ba", ",", "fake_feat_ab", "=", "self", ".", "dis", "(", "x_ba", ",", "x_ab", ")", "\n", "fake_recon_res", ",", "fake_feat_aa", ",", "fake_feat_bb", "=", "self", ".", "dis", "(", "x_aa", ",", "x_bb", ")", "\n", "zeros", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "np", ".", "zeros", "(", "fake_recon_res", ".", "size", "(", "0", ")", ",", "dtype", "=", "np", ".", "int", ")", ")", ".", "cuda", "(", "self", ".", "gpu", ")", ")", "\n", "ad_fake_trans_loss", "=", "nn", ".", "functional", ".", "cross_entropy", "(", "fake_trans_res", ",", "zeros", ")", "\n", "ad_fake_recon_loss", "=", "nn", ".", "functional", ".", "cross_entropy", "(", "fake_recon_res", ",", "zeros", ")", "\n", "ad_fake_loss", "=", "0.5", "*", "(", "ad_fake_trans_loss", "+", "ad_fake_recon_loss", ")", "\n", "\n", "dummy_variable", "=", "Variable", "(", "torch", ".", "zeros", "(", "fake_feat_aa", ".", "size", "(", ")", ")", ".", "cuda", "(", "self", ".", "gpu", ")", ")", "\n", "feature_loss_a", "=", "self", ".", "_compute_ll_loss", "(", "fake_feat_ab", "-", "fake_feat_aa", ",", "dummy_variable", ")", "\n", "feature_loss_b", "=", "self", ".", "_compute_ll_loss", "(", "fake_feat_ba", "-", "fake_feat_bb", ",", "dummy_variable", ")", "\n", "\n", "# Classification loss", "\n", "cls_outputs", "=", "self", ".", "dis", ".", "classify_a", "(", "images_a", ")", "\n", "cls_loss", "=", "nn", ".", "functional", ".", "cross_entropy", "(", "cls_outputs", ",", "labels_a", ")", "\n", "_", ",", "cls_predicts", "=", "torch", ".", "max", "(", "cls_outputs", ".", "data", ",", "1", ")", "\n", "cls_acc", "=", "(", "cls_predicts", "==", "labels_a", ".", "data", ")", ".", "sum", "(", ")", "/", "(", "1.0", "*", "cls_predicts", ".", "size", "(", "0", ")", ")", "\n", "\n", "true_acc", "=", "_compute_true_acc2", "(", "true_res", ")", "\n", "fake_trans_acc", "=", "_compute_fake_acc2", "(", "fake_trans_res", ")", "\n", "fake_recon_acc", "=", "_compute_fake_acc2", "(", "fake_recon_res", ")", "\n", "fake_acc", "=", "0.5", "*", "(", "fake_trans_acc", "+", "fake_recon_acc", ")", "\n", "\n", "total_loss", "=", "hyperparameters", "[", "'gan_w'", "]", "*", "(", "ad_true_loss", "+", "ad_fake_loss", ")", "+", "hyperparameters", "[", "'cls_w'", "]", "*", "cls_loss", "+", "hyperparameters", "[", "'feature_w'", "]", "*", "(", "feature_loss_a", "+", "feature_loss_b", ")", "\n", "total_loss", ".", "backward", "(", ")", "\n", "self", ".", "dis_opt", ".", "step", "(", ")", "\n", "self", ".", "dis_true_acc", "=", "true_acc", "\n", "self", ".", "dis_fake_acc", "=", "fake_acc", "\n", "self", ".", "dis_cls_acc", "=", "cls_acc", "\n", "\n", "self", ".", "dis_cls_loss", "=", "cls_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "dis_ad_true_loss", "=", "ad_true_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "dis_ad_fake_loss_a", "=", "ad_fake_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "dis_feature_loss_a", "=", "feature_loss_a", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "dis_feature_loss_b", "=", "feature_loss_b", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "dis_total_loss", "=", "total_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_da.COCOGANDATrainer.resume": [[255, 266], ["os.path.dirname", "helpers.get_model_list", "cocogan_trainer_da.COCOGANDATrainer.gen.load_state_dict", "int", "helpers.get_model_list", "cocogan_trainer_da.COCOGANDATrainer.dis.load_state_dict", "print", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers.get_model_list", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers.get_model_list"], ["", "def", "resume", "(", "self", ",", "snapshot_prefix", ")", ":", "\n", "    ", "dirname", "=", "os", ".", "path", ".", "dirname", "(", "snapshot_prefix", ")", "\n", "last_model_name", "=", "get_model_list", "(", "dirname", ",", "\"gen\"", ")", "\n", "if", "last_model_name", "is", "None", ":", "\n", "      ", "return", "0", "\n", "", "self", ".", "gen", ".", "load_state_dict", "(", "torch", ".", "load", "(", "last_model_name", ")", ")", "\n", "iterations", "=", "int", "(", "last_model_name", "[", "-", "12", ":", "-", "4", "]", ")", "\n", "last_model_name", "=", "get_model_list", "(", "dirname", ",", "\"dis\"", ")", "\n", "self", ".", "dis", ".", "load_state_dict", "(", "torch", ".", "load", "(", "last_model_name", ")", ")", "\n", "print", "(", "'Resume from iteration %d'", "%", "iterations", ")", "\n", "return", "iterations", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_da.COCOGANDATrainer.save": [[267, 272], ["torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "cocogan_trainer_da.COCOGANDATrainer.gen.state_dict", "cocogan_trainer_da.COCOGANDATrainer.dis.state_dict"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save"], ["", "def", "save", "(", "self", ",", "snapshot_prefix", ",", "iterations", ")", ":", "\n", "    ", "gen_filename", "=", "'%s_gen_%08d.pkl'", "%", "(", "snapshot_prefix", ",", "iterations", "+", "1", ")", "\n", "dis_filename", "=", "'%s_dis_%08d.pkl'", "%", "(", "snapshot_prefix", ",", "iterations", "+", "1", ")", "\n", "torch", ".", "save", "(", "self", ".", "gen", ".", "state_dict", "(", ")", ",", "gen_filename", ")", "\n", "torch", ".", "save", "(", "self", ".", "dis", ".", "state_dict", "(", ")", ",", "dis_filename", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets_da.CoDis32x32._conv2d": [[10, 15], ["nn.Sequential", "nn.Conv2d", "nn.ReLU", "nn.MaxPool2d"], "methods", ["None"], ["  ", "def", "_conv2d", "(", "self", ",", "n_in", ",", "n_out", ",", "kernel_size", ",", "stride", ",", "padding", ")", ":", "\n", "      ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "n_in", ",", "n_out", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "padding", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "stride", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets_da.CoDis32x32.__init__": [[17, 30], ["nn.Module.__init__", "cocogan_nets_da.CoDis32x32._conv2d", "cocogan_nets_da.CoDis32x32._conv2d", "cocogan_nets_da.CoDis32x32._conv2d", "cocogan_nets_da.CoDis32x32._conv2d", "cocogan_nets_da.CoDis32x32._conv2d", "nn.Conv2d", "nn.Conv2d", "nn.Dropout", "nn.Dropout", "nn.Dropout", "nn.Dropout"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets_da.CoDis32x32._conv2d", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets_da.CoDis32x32._conv2d", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets_da.CoDis32x32._conv2d", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets_da.CoDis32x32._conv2d", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets_da.CoDis32x32._conv2d"], ["", "def", "__init__", "(", "self", ",", "ch", "=", "64", ",", "input_dim_a", "=", "3", ",", "input_dim_b", "=", "1", ")", ":", "\n", "    ", "super", "(", "CoDis32x32", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv0_a", "=", "self", ".", "_conv2d", "(", "input_dim_a", ",", "ch", ",", "kernel_size", "=", "5", ",", "stride", "=", "2", ",", "padding", "=", "2", ")", "\n", "self", ".", "conv0_b", "=", "self", ".", "_conv2d", "(", "input_dim_b", ",", "ch", ",", "kernel_size", "=", "5", ",", "stride", "=", "2", ",", "padding", "=", "2", ")", "\n", "self", ".", "conv1", "=", "self", ".", "_conv2d", "(", "ch", "*", "1", ",", "ch", "*", "2", ",", "kernel_size", "=", "5", ",", "stride", "=", "2", ",", "padding", "=", "2", ")", "\n", "self", ".", "conv2", "=", "self", ".", "_conv2d", "(", "ch", "*", "2", ",", "ch", "*", "4", ",", "kernel_size", "=", "5", ",", "stride", "=", "2", ",", "padding", "=", "2", ")", "\n", "self", ".", "conv3", "=", "self", ".", "_conv2d", "(", "ch", "*", "4", ",", "ch", "*", "8", ",", "kernel_size", "=", "5", ",", "stride", "=", "2", ",", "padding", "=", "2", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv2d", "(", "ch", "*", "8", ",", "2", ",", "kernel_size", "=", "2", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "conv_cl", "=", "nn", ".", "Conv2d", "(", "ch", "*", "8", ",", "10", ",", "kernel_size", "=", "2", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "dropout0", "=", "nn", ".", "Dropout", "(", "0.1", ")", "\n", "self", ".", "dropout1", "=", "nn", ".", "Dropout", "(", "0.3", ")", "\n", "self", ".", "dropout2", "=", "nn", ".", "Dropout", "(", "0.5", ")", "\n", "self", ".", "dropout3", "=", "nn", ".", "Dropout", "(", "0.5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets_da.CoDis32x32.forward": [[31, 39], ["cocogan_nets_da.CoDis32x32.conv0_a", "cocogan_nets_da.CoDis32x32.conv0_b", "cocogan_nets_da.CoDis32x32._forward_core", "cocogan_nets_da.CoDis32x32._forward_core", "torch.cat", "cocogan_nets_da.CoDis32x32.conv4", "cocogan_nets_da.CoDis32x32._forward_core_dropout", "cocogan_nets_da.CoDis32x32.squeeze"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets_da.CoDis32x32._forward_core", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets_da.CoDis32x32._forward_core", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets_da.CoDis32x32._forward_core_dropout"], ["", "def", "forward", "(", "self", ",", "x_a", ",", "x_b", ")", ":", "\n", "    ", "h0_a", "=", "self", ".", "conv0_a", "(", "x_a", ")", "\n", "h0_b", "=", "self", ".", "conv0_b", "(", "x_b", ")", "\n", "h3_a", "=", "self", ".", "_forward_core", "(", "h0_a", ")", "\n", "h3_b", "=", "self", ".", "_forward_core", "(", "h0_b", ")", "\n", "h0", "=", "torch", ".", "cat", "(", "(", "h0_a", ",", "h0_b", ")", ",", "0", ")", "\n", "h4_dropout", "=", "self", ".", "conv4", "(", "self", ".", "_forward_core_dropout", "(", "h0", ")", ")", "\n", "return", "h4_dropout", ".", "squeeze", "(", ")", ",", "h3_a", ",", "h3_b", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets_da.CoDis32x32.classify_a": [[40, 44], ["cocogan_nets_da.CoDis32x32._forward_core_dropout", "cocogan_nets_da.CoDis32x32.conv_cl", "cocogan_nets_da.CoDis32x32.squeeze", "cocogan_nets_da.CoDis32x32.conv0_a"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets_da.CoDis32x32._forward_core_dropout"], ["", "def", "classify_a", "(", "self", ",", "x_a", ")", ":", "\n", "    ", "h3_a", "=", "self", ".", "_forward_core_dropout", "(", "self", ".", "conv0_a", "(", "x_a", ")", ")", "\n", "h4_a", "=", "self", ".", "conv_cl", "(", "h3_a", ")", "\n", "return", "h4_a", ".", "squeeze", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets_da.CoDis32x32.classify_b": [[45, 49], ["cocogan_nets_da.CoDis32x32._forward_core_dropout", "cocogan_nets_da.CoDis32x32.conv_cl", "cocogan_nets_da.CoDis32x32.squeeze", "cocogan_nets_da.CoDis32x32.conv0_b"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets_da.CoDis32x32._forward_core_dropout"], ["", "def", "classify_b", "(", "self", ",", "x_b", ")", ":", "\n", "    ", "h3_b", "=", "self", ".", "_forward_core_dropout", "(", "self", ".", "conv0_b", "(", "x_b", ")", ")", "\n", "h4_b", "=", "self", ".", "conv_cl", "(", "h3_b", ")", "\n", "return", "h4_b", ".", "squeeze", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets_da.CoDis32x32._forward_core_dropout": [[50, 55], ["cocogan_nets_da.CoDis32x32.dropout0", "cocogan_nets_da.CoDis32x32.dropout1", "cocogan_nets_da.CoDis32x32.dropout2", "cocogan_nets_da.CoDis32x32.dropout3", "cocogan_nets_da.CoDis32x32.conv1", "cocogan_nets_da.CoDis32x32.conv2", "cocogan_nets_da.CoDis32x32.conv3"], "methods", ["None"], ["", "def", "_forward_core_dropout", "(", "self", ",", "h0", ")", ":", "\n", "    ", "h0", "=", "self", ".", "dropout0", "(", "h0", ")", "\n", "h1", "=", "self", ".", "dropout1", "(", "self", ".", "conv1", "(", "h0", ")", ")", "\n", "h2", "=", "self", ".", "dropout2", "(", "self", ".", "conv2", "(", "h1", ")", ")", "\n", "return", "self", ".", "dropout3", "(", "self", ".", "conv3", "(", "h2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets_da.CoDis32x32._forward_core": [[56, 60], ["cocogan_nets_da.CoDis32x32.conv1", "cocogan_nets_da.CoDis32x32.conv2", "cocogan_nets_da.CoDis32x32.conv3"], "methods", ["None"], ["", "def", "_forward_core", "(", "self", ",", "h0", ")", ":", "\n", "    ", "h1", "=", "self", ".", "conv1", "(", "h0", ")", "\n", "h2", "=", "self", ".", "conv2", "(", "h1", ")", "\n", "return", "self", ".", "conv3", "(", "h2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets_da.CoVAE32x32.__init__": [[63, 84], ["nn.Module.__init__", "common_net.LeakyReLUBNNSConv2d", "common_net.LeakyReLUBNNSConv2d", "common_net.LeakyReLUBNNSConv2d", "common_net.LeakyReLUBNNSConv2d", "common_net.LeakyReLUBNNSConv2d", "common_net.GaussianVAE2D", "common_net.LeakyReLUBNNSConvTranspose2d", "common_net.LeakyReLUBNNSConvTranspose2d", "common_net.LeakyReLUBNNSConvTranspose2d", "common_net.LeakyReLUBNNSConvTranspose2d", "common_net.LeakyReLUBNNSConvTranspose2d", "nn.ConvTranspose2d", "nn.ConvTranspose2d", "nn.Tanh", "nn.Tanh"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__"], ["  ", "def", "__init__", "(", "self", ",", "ch", "=", "32", ",", "input_dim_a", "=", "3", ",", "output_dim_a", "=", "3", ",", "input_dim_b", "=", "1", ",", "output_dim_b", "=", "1", ")", ":", "\n", "    ", "super", "(", "CoVAE32x32", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# Encoder layer #0", "\n", "self", ".", "g_en_conv0_a", "=", "LeakyReLUBNNSConv2d", "(", "input_dim_a", ",", "ch", ",", "kernel_size", "=", "5", ",", "stride", "=", "2", ",", "padding", "=", "2", ")", "\n", "self", ".", "g_en_conv0_b", "=", "LeakyReLUBNNSConv2d", "(", "input_dim_b", ",", "ch", ",", "kernel_size", "=", "5", ",", "stride", "=", "2", ",", "padding", "=", "2", ")", "\n", "self", ".", "g_en_conv1", "=", "LeakyReLUBNNSConv2d", "(", "ch", "*", "1", ",", "ch", "*", "2", ",", "kernel_size", "=", "5", ",", "stride", "=", "2", ",", "padding", "=", "2", ")", "\n", "self", ".", "g_en_conv2", "=", "LeakyReLUBNNSConv2d", "(", "ch", "*", "2", ",", "ch", "*", "4", ",", "kernel_size", "=", "8", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "g_en_conv3", "=", "LeakyReLUBNNSConv2d", "(", "ch", "*", "4", ",", "ch", "*", "8", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "# Latent layer", "\n", "self", ".", "g_vae", "=", "GaussianVAE2D", "(", "ch", "*", "8", ",", "ch", "*", "8", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "\n", "# Decoder layer #0", "\n", "self", ".", "g_de_conv0", "=", "LeakyReLUBNNSConvTranspose2d", "(", "ch", "*", "8", ",", "ch", "*", "8", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "0", ")", "\n", "self", ".", "g_de_conv1", "=", "LeakyReLUBNNSConvTranspose2d", "(", "ch", "*", "8", ",", "ch", "*", "4", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "g_de_conv2", "=", "LeakyReLUBNNSConvTranspose2d", "(", "ch", "*", "4", ",", "ch", "*", "2", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "g_de_conv3_a", "=", "LeakyReLUBNNSConvTranspose2d", "(", "ch", "*", "2", ",", "ch", "*", "1", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "g_de_conv3_b", "=", "LeakyReLUBNNSConvTranspose2d", "(", "ch", "*", "2", ",", "ch", "*", "1", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "# Decoder layer #4", "\n", "self", ".", "de_conv4_a", "=", "nn", ".", "ConvTranspose2d", "(", "ch", "*", "1", ",", "output_dim_a", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "de_conv4_b", "=", "nn", ".", "ConvTranspose2d", "(", "ch", "*", "1", ",", "output_dim_b", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "de_tanh4_a", "=", "nn", ".", "Tanh", "(", ")", "\n", "self", ".", "de_tanh4_b", "=", "nn", ".", "Tanh", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets_da.CoVAE32x32.forward": [[85, 104], ["cocogan_nets_da.CoVAE32x32.g_en_conv0_a", "cocogan_nets_da.CoVAE32x32.g_en_conv0_b", "torch.cat", "cocogan_nets_da.CoVAE32x32.g_en_conv1", "cocogan_nets_da.CoVAE32x32.g_en_conv2", "cocogan_nets_da.CoVAE32x32.g_en_conv3", "cocogan_nets_da.CoVAE32x32.g_vae.sample", "cocogan_nets_da.CoVAE32x32.g_de_conv0", "cocogan_nets_da.CoVAE32x32.g_de_conv1", "cocogan_nets_da.CoVAE32x32.g_de_conv2", "cocogan_nets_da.CoVAE32x32.g_de_conv3_a", "cocogan_nets_da.CoVAE32x32.g_de_conv3_b", "cocogan_nets_da.CoVAE32x32.de_tanh4_a", "cocogan_nets_da.CoVAE32x32.de_tanh4_b", "torch.split", "torch.split", "cocogan_nets_da.CoVAE32x32.de_conv4_a", "cocogan_nets_da.CoVAE32x32.de_conv4_b", "x_a.size", "x_a.size"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.common_net.GaussianVAE2D.sample"], ["", "def", "forward", "(", "self", ",", "x_a", ",", "x_b", ",", "gpu", ")", ":", "\n", "    ", "en_h0_a", "=", "self", ".", "g_en_conv0_a", "(", "x_a", ")", "\n", "en_h0_b", "=", "self", ".", "g_en_conv0_b", "(", "x_b", ")", "\n", "en_h0", "=", "torch", ".", "cat", "(", "(", "en_h0_a", ",", "en_h0_b", ")", ",", "0", ")", "\n", "en_h1", "=", "self", ".", "g_en_conv1", "(", "en_h0", ")", "\n", "en_h2", "=", "self", ".", "g_en_conv2", "(", "en_h1", ")", "\n", "en_h3", "=", "self", ".", "g_en_conv3", "(", "en_h2", ")", "\n", "z", ",", "mu", ",", "sd", "=", "self", ".", "g_vae", ".", "sample", "(", "en_h3", ")", "\n", "de_h0", "=", "self", ".", "g_de_conv0", "(", "z", ")", "\n", "de_h1", "=", "self", ".", "g_de_conv1", "(", "de_h0", ")", "\n", "de_h2", "=", "self", ".", "g_de_conv2", "(", "de_h1", ")", "\n", "de_h3_a", "=", "self", ".", "g_de_conv3_a", "(", "de_h2", ")", "\n", "de_h3_b", "=", "self", ".", "g_de_conv3_b", "(", "de_h2", ")", "\n", "de_h4_a", "=", "self", ".", "de_tanh4_a", "(", "self", ".", "de_conv4_a", "(", "de_h3_a", ")", ")", "\n", "de_h4_b", "=", "self", ".", "de_tanh4_b", "(", "self", ".", "de_conv4_b", "(", "de_h3_b", ")", ")", "\n", "x_aa", ",", "x_ba", "=", "torch", ".", "split", "(", "de_h4_a", ",", "x_a", ".", "size", "(", "0", ")", ",", "dim", "=", "0", ")", "\n", "x_ab", ",", "x_bb", "=", "torch", ".", "split", "(", "de_h4_b", ",", "x_a", ".", "size", "(", "0", ")", ",", "dim", "=", "0", ")", "\n", "codes", "=", "(", "mu", ",", "sd", ")", "\n", "return", "x_aa", ",", "x_ba", ",", "x_ab", ",", "x_bb", ",", "[", "codes", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_bak.COCOGANGAMESTrainer.__init__": [[18, 37], ["torch.Module.__init__", "exec", "exec", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.dis.apply", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.gen.apply", "torch.nn.L1Loss", "torch.nn.L1Loss", "torch.nn.L1Loss", "torch.nn.L1Loss", "torch.nn.L1Loss", "torch.nn.L1Loss", "torch.nn.L1Loss", "torch.nn.L1Loss", "cocogan_trainer_games_bak.COCOGANGAMESTrainer._create_xy_image", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.unsqueeze().expand", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.dis.parameters", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.gen.parameters", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.size", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.size", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.size", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer._create_xy_image"], ["  ", "def", "__init__", "(", "self", ",", "hyperparameters", ")", ":", "\n", "    ", "super", "(", "COCOGANGAMESTrainer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "use_cuda", "=", "False", "\n", "lr", "=", "hyperparameters", "[", "'lr'", "]", "\n", "# Initiate the networks", "\n", "exec", "(", "'self.dis = %s(hyperparameters[\\'dis\\'])'", "%", "hyperparameters", "[", "'dis'", "]", "[", "'name'", "]", ")", "\n", "exec", "(", "'self.gen = %s(hyperparameters[\\'gen\\'])'", "%", "hyperparameters", "[", "'gen'", "]", "[", "'name'", "]", ")", "\n", "# Setup the optimizers", "\n", "self", ".", "dis_opt", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "dis", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "weight_decay", "=", "0.0001", ")", "\n", "self", ".", "gen_opt", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "gen", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "weight_decay", "=", "0.0001", ")", "\n", "# Network weight initialization", "\n", "self", ".", "dis", ".", "apply", "(", "gaussian_weights_init", ")", "\n", "self", ".", "gen", ".", "apply", "(", "gaussian_weights_init", ")", "\n", "# Setup the loss function for training", "\n", "self", ".", "ll_loss_criterion_a", "=", "torch", ".", "nn", ".", "L1Loss", "(", ")", "\n", "self", ".", "ll_loss_criterion_b", "=", "torch", ".", "nn", ".", "L1Loss", "(", ")", "\n", "xy", "=", "self", ".", "_create_xy_image", "(", ")", "\n", "self", ".", "xy", "=", "xy", ".", "unsqueeze", "(", "0", ")", ".", "expand", "(", "hyperparameters", "[", "'batch_size'", "]", ",", "xy", ".", "size", "(", "0", ")", ",", "xy", ".", "size", "(", "1", ")", ",", "xy", ".", "size", "(", "2", ")", ")", "\n", "self", ".", "use_xy", "=", "1", "==", "hyperparameters", "[", "'gen'", "]", "[", "'use_xy'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_bak.COCOGANGAMESTrainer._create_xy_image": [[38, 44], ["list", "np.transpose", "Variable", "itertools.product", "float", "np.float32", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "range", "range", "np.reshape", "np.asarray"], "methods", ["None"], ["", "def", "_create_xy_image", "(", "self", ",", "width", "=", "256", ")", ":", "\n", "    ", "coordinates", "=", "list", "(", "itertools", ".", "product", "(", "range", "(", "width", ")", ",", "range", "(", "width", ")", ")", ")", "\n", "arr", "=", "(", "np", ".", "reshape", "(", "np", ".", "asarray", "(", "coordinates", ")", ",", "newshape", "=", "[", "width", ",", "width", ",", "2", "]", ")", "-", "width", "/", "2", ")", "/", "float", "(", "(", "width", "/", "2", ")", ")", "\n", "new_map", "=", "np", ".", "transpose", "(", "np", ".", "float32", "(", "arr", ")", ",", "[", "2", ",", "0", ",", "1", "]", ")", "\n", "xy", "=", "Variable", "(", "torch", ".", "from_numpy", "(", "new_map", ")", ",", "requires_grad", "=", "False", ")", "\n", "return", "xy", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_bak.COCOGANGAMESTrainer._compute_kl": [[45, 54], ["torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.mean", "torch.mean", "torch.mean", "torch.mean"], "methods", ["None"], ["", "def", "_compute_kl", "(", "self", ",", "mu", ")", ":", "\n", "# def _compute_kl(self, mu, sd):", "\n", "# mu_2 = torch.pow(mu, 2)", "\n", "# sd_2 = torch.pow(sd, 2)", "\n", "# encoding_loss = (mu_2 + sd_2 - torch.log(sd_2)).sum() / mu_2.size(0)", "\n", "# return encoding_loss", "\n", "    ", "mu_2", "=", "torch", ".", "pow", "(", "mu", ",", "2", ")", "\n", "encoding_loss", "=", "torch", ".", "mean", "(", "mu_2", ")", "\n", "return", "encoding_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_bak.COCOGANGAMESTrainer.gen_update": [[55, 112], ["cocogan_trainer_games_bak.COCOGANGAMESTrainer.gen", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.gen.forward_a2b", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.gen.forward_b2a", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.dis", "enumerate", "cocogan_trainer_games_bak.COCOGANGAMESTrainer._compute_kl", "cocogan_trainer_games_bak.COCOGANGAMESTrainer._compute_kl", "cocogan_trainer_games_bak.COCOGANGAMESTrainer._compute_kl", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.ll_loss_criterion_a", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.ll_loss_criterion_b", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.ll_loss_criterion_a", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.ll_loss_criterion_b", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.gen.zero_grad", "total_loss.backward", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.gen_opt.step", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "itertools.izip", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "Variable", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.data.cpu().numpy", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.data.cpu().numpy", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.data.cpu().numpy", "torch.functional.binary_cross_entropy.data.cpu().numpy", "torch.functional.binary_cross_entropy.data.cpu().numpy", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.data.cpu().numpy", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.data.cpu().numpy", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.data.cpu().numpy", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.data.cpu().numpy", "total_loss.data.cpu().numpy", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.data.cpu", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.data.cpu", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.data.cpu", "torch.functional.binary_cross_entropy.data.cpu", "torch.functional.binary_cross_entropy.data.cpu", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.data.cpu", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.data.cpu", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.data.cpu", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.data.cpu", "total_loss.data.cpu", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.functional.sigmoid.size"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOResGen2.forward_a2b", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOResGen2.forward_b2a", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer._compute_kl", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer._compute_kl", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer._compute_kl", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.step", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda"], ["", "def", "gen_update", "(", "self", ",", "images_a", ",", "images_b", ",", "hyperparameters", ")", ":", "\n", "    ", "if", "self", ".", "use_xy", ":", "\n", "        ", "images_a_xy", "=", "torch", ".", "cat", "(", "(", "images_a", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "images_b_xy", "=", "torch", ".", "cat", "(", "(", "images_b", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "", "else", ":", "\n", "        ", "images_a_xy", "=", "images_a", "\n", "images_b_xy", "=", "images_b", "\n", "", "x_aa", ",", "x_ba", ",", "x_ab", ",", "x_bb", ",", "shared", "=", "self", ".", "gen", "(", "images_a_xy", ",", "images_b_xy", ")", "\n", "\n", "if", "self", ".", "use_xy", ":", "\n", "        ", "x_ba_xy", "=", "torch", ".", "cat", "(", "(", "x_ba", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "x_ab_xy", "=", "torch", ".", "cat", "(", "(", "x_ab", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "", "else", ":", "\n", "        ", "x_ba_xy", "=", "x_ba", "\n", "x_ab_xy", "=", "x_ab", "\n", "", "x_bab", ",", "shared_bab", "=", "self", ".", "gen", ".", "forward_a2b", "(", "x_ba_xy", ")", "\n", "x_aba", ",", "shared_aba", "=", "self", ".", "gen", ".", "forward_b2a", "(", "x_ab_xy", ")", "\n", "outs_a", ",", "outs_b", "=", "self", ".", "dis", "(", "x_ba", ",", "x_ab", ")", "\n", "for", "it", ",", "(", "out_a", ",", "out_b", ")", "in", "enumerate", "(", "itertools", ".", "izip", "(", "outs_a", ",", "outs_b", ")", ")", ":", "\n", "      ", "outputs_a", "=", "nn", ".", "functional", ".", "sigmoid", "(", "out_a", ")", "\n", "outputs_b", "=", "nn", ".", "functional", ".", "sigmoid", "(", "out_b", ")", "\n", "all_ones", "=", "Variable", "(", "torch", ".", "ones", "(", "(", "outputs_a", ".", "size", "(", "0", ")", ")", ")", ".", "cuda", "(", "self", ".", "gpu", ")", ")", "\n", "if", "it", "==", "0", ":", "\n", "        ", "ad_loss_a", "=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "outputs_a", ",", "all_ones", ")", "\n", "ad_loss_b", "=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "outputs_b", ",", "all_ones", ")", "\n", "", "else", ":", "\n", "        ", "ad_loss_a", "+=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "outputs_a", ",", "all_ones", ")", "\n", "ad_loss_b", "+=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "outputs_b", ",", "all_ones", ")", "\n", "\n", "", "", "enc_loss", "=", "self", ".", "_compute_kl", "(", "shared", ")", "\n", "enc_bab_loss", "=", "self", ".", "_compute_kl", "(", "shared_bab", ")", "\n", "enc_aba_loss", "=", "self", ".", "_compute_kl", "(", "shared_aba", ")", "\n", "ll_loss_a", "=", "self", ".", "ll_loss_criterion_a", "(", "x_aa", ",", "images_a", ")", "\n", "ll_loss_b", "=", "self", ".", "ll_loss_criterion_b", "(", "x_bb", ",", "images_b", ")", "\n", "ll_loss_aba", "=", "self", ".", "ll_loss_criterion_a", "(", "x_aba", ",", "images_a", ")", "\n", "ll_loss_bab", "=", "self", ".", "ll_loss_criterion_b", "(", "x_bab", ",", "images_b", ")", "\n", "\n", "total_loss", "=", "hyperparameters", "[", "'gan_w'", "]", "*", "(", "ad_loss_a", "+", "ad_loss_b", ")", "+", "hyperparameters", "[", "'ll_direct_link_w'", "]", "*", "(", "ll_loss_a", "+", "ll_loss_b", ")", "+", "hyperparameters", "[", "'ll_cycle_link_w'", "]", "*", "(", "ll_loss_aba", "+", "ll_loss_bab", ")", "+", "hyperparameters", "[", "'kl_direct_link_w'", "]", "*", "(", "enc_loss", "+", "enc_loss", ")", "+", "hyperparameters", "[", "'kl_cycle_link_w'", "]", "*", "(", "enc_bab_loss", "+", "enc_aba_loss", ")", "\n", "self", ".", "gen", ".", "zero_grad", "(", ")", "\n", "total_loss", ".", "backward", "(", ")", "\n", "self", ".", "gen_opt", ".", "step", "(", ")", "\n", "self", ".", "gen_enc_loss", "=", "enc_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_enc_bab_loss", "=", "enc_bab_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_enc_aba_loss", "=", "enc_aba_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ad_loss_a", "=", "ad_loss_a", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ad_loss_b", "=", "ad_loss_b", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ll_loss_a", "=", "ll_loss_a", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ll_loss_b", "=", "ll_loss_b", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ll_loss_aba", "=", "ll_loss_aba", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ll_loss_bab", "=", "ll_loss_bab", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_total_loss", "=", "total_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "#pdb.set_trace()", "\n", "return", "(", "x_aa", ",", "x_ba", ",", "x_ab", ",", "x_bb", ",", "x_aba", ",", "x_bab", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_bak.COCOGANGAMESTrainer.dis_update": [[113, 170], ["cocogan_trainer_games_bak.COCOGANGAMESTrainer.gen", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.dis", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.dis", "enumerate", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.dis.zero_grad", "loss.backward", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.dis_opt.step", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.js_regularization", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.js_regularization", "itertools.izip", "out_true_a.size", "out_fake_a.size", "Variable", "Variable", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "helpers._compute_true_acc", "helpers._compute_true_acc", "helpers._compute_fake_acc", "helpers._compute_fake_acc", "exec", "exec", "loss.data.cpu().numpy", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "loss.data.cpu", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.step", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer.js_regularization", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer.js_regularization", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers._compute_true_acc", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers._compute_true_acc", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers._compute_fake_acc", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers._compute_fake_acc", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda"], ["", "def", "dis_update", "(", "self", ",", "images_a", ",", "images_b", ",", "hyperparameters", ")", ":", "\n", "    ", "if", "self", ".", "use_xy", ":", "\n", "        ", "images_a_xy", "=", "torch", ".", "cat", "(", "(", "images_a", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "images_b_xy", "=", "torch", ".", "cat", "(", "(", "images_b", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "", "else", ":", "\n", "        ", "images_a_xy", "=", "images_a", "\n", "images_b_xy", "=", "images_b", "\n", "", "x_aa", ",", "x_ba", ",", "x_ab", ",", "x_bb", ",", "shared", "=", "self", ".", "gen", "(", "images_a_xy", ",", "images_b_xy", ")", "\n", "\n", "data_a", "=", "torch", ".", "cat", "(", "(", "images_a", ",", "x_ba", ")", ",", "0", ")", "\n", "data_b", "=", "torch", ".", "cat", "(", "(", "images_b", ",", "x_ab", ")", ",", "0", ")", "\n", "#res_a, res_b = self.dis(data_a,data_b)", "\n", "#pdb.set_trace()", "\n", "res_true_a", ",", "res_true_b", "=", "self", ".", "dis", "(", "images_a", ",", "images_b", ")", "\n", "res_fake_a", ",", "res_fake_b", "=", "self", ".", "dis", "(", "x_ba", ",", "x_ab", ")", "\n", "\n", "# res_true_a, res_true_b = self.dis(images_a,images_b)", "\n", "# res_fake_a, res_fake_b = self.dis(x_ba, x_ab)", "\n", "if", "0", "!=", "hyperparameters", "[", "'gamma_js_regularization'", "]", ":", "\n", "      ", "js_reg_a", "=", "self", ".", "js_regularization", "(", "res_true_a", "[", "0", "]", ",", "images_a", ",", "res_fake_a", "[", "0", "]", ",", "x_ba", ")", "\n", "js_reg_b", "=", "self", ".", "js_regularization", "(", "res_true_b", "[", "0", "]", ",", "images_b", ",", "res_fake_b", "[", "0", "]", ",", "x_ab", ")", "\n", "\n", "", "for", "it", ",", "(", "this_true_a", ",", "this_true_b", ",", "this_fake_a", ",", "this_fake_b", ",", "in_a", ",", "in_b", ",", "fake_a", ",", "fake_b", ")", "in", "enumerate", "(", "itertools", ".", "izip", "(", "res_true_a", ",", "res_true_b", ",", "res_fake_a", ",", "res_fake_b", ",", "images_a", ",", "images_b", ",", "x_ba", ",", "x_ab", ")", ")", ":", "\n", "      ", "out_true_a", ",", "out_fake_a", "=", "nn", ".", "functional", ".", "sigmoid", "(", "this_true_a", ")", ",", "nn", ".", "functional", ".", "sigmoid", "(", "this_fake_a", ")", "\n", "out_true_b", ",", "out_fake_b", "=", "nn", ".", "functional", ".", "sigmoid", "(", "this_true_b", ")", ",", "nn", ".", "functional", ".", "sigmoid", "(", "this_fake_b", ")", "\n", "\n", "out_true_n", "=", "out_true_a", ".", "size", "(", "0", ")", "\n", "out_fake_n", "=", "out_fake_a", ".", "size", "(", "0", ")", "\n", "all1", "=", "Variable", "(", "torch", ".", "ones", "(", "(", "out_true_n", ")", ")", ".", "cuda", "(", "self", ".", "gpu", ")", ")", "\n", "all0", "=", "Variable", "(", "torch", ".", "zeros", "(", "(", "out_fake_n", ")", ")", ".", "cuda", "(", "self", ".", "gpu", ")", ")", "\n", "ad_true_loss_a", "=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "out_true_a", ",", "all1", ")", "\n", "ad_true_loss_b", "=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "out_true_b", ",", "all1", ")", "\n", "ad_fake_loss_a", "=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "out_fake_a", ",", "all0", ")", "\n", "ad_fake_loss_b", "=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "out_fake_b", ",", "all0", ")", "\n", "if", "it", "==", "0", ":", "\n", "        ", "ad_loss_a", "=", "ad_true_loss_a", "+", "ad_fake_loss_a", "\n", "ad_loss_b", "=", "ad_true_loss_b", "+", "ad_fake_loss_b", "\n", "", "else", ":", "\n", "        ", "ad_loss_a", "+=", "ad_true_loss_a", "+", "ad_fake_loss_a", "\n", "ad_loss_b", "+=", "ad_true_loss_b", "+", "ad_fake_loss_b", "\n", "", "true_a_acc", "=", "_compute_true_acc", "(", "out_true_a", ")", "\n", "true_b_acc", "=", "_compute_true_acc", "(", "out_true_b", ")", "\n", "fake_a_acc", "=", "_compute_fake_acc", "(", "out_fake_a", ")", "\n", "fake_b_acc", "=", "_compute_fake_acc", "(", "out_fake_b", ")", "\n", "exec", "(", "'self.dis_true_acc_%d = 0.5 * (true_a_acc + true_b_acc)'", "%", "it", ")", "\n", "exec", "(", "'self.dis_fake_acc_%d = 0.5 * (fake_a_acc + fake_b_acc)'", "%", "it", ")", "\n", "\n", "\n", "", "d_loss", "=", "(", "ad_loss_a", "+", "ad_loss_b", ")", "\n", "if", "0", "!=", "hyperparameters", "[", "'gamma_js_regularization'", "]", ":", "\n", "      ", "d_loss", "+=", "(", "js_reg_a", "+", "js_reg_b", ")", "*", "(", "hyperparameters", "[", "'gamma_js_regularization'", "]", "/", "2.", ")", "\n", "", "loss", "=", "hyperparameters", "[", "'gan_w'", "]", "*", "d_loss", "\n", "self", ".", "dis", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "dis_opt", ".", "step", "(", ")", "\n", "self", ".", "dis_loss", "=", "loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_bak.COCOGANGAMESTrainer.assemble_outputs": [[171, 183], ["cocogan_trainer_games_bak.COCOGANGAMESTrainer.normalize_image", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.normalize_image", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.normalize_image", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.normalize_image", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.normalize_image", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.normalize_image", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.normalize_image", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.normalize_image", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image"], ["", "def", "assemble_outputs", "(", "self", ",", "images_a", ",", "images_b", ",", "network_outputs", ")", ":", "\n", "    ", "images_a", "=", "self", ".", "normalize_image", "(", "images_a", ")", "\n", "images_b", "=", "self", ".", "normalize_image", "(", "images_b", ")", "\n", "x_aa", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "0", "]", ")", "\n", "x_ba", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "1", "]", ")", "\n", "x_ab", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "2", "]", ")", "\n", "x_bb", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "3", "]", ")", "\n", "x_aba", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "4", "]", ")", "\n", "x_bab", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "5", "]", ")", "\n", "#pdb.set_trace()", "\n", "return", "torch", ".", "cat", "(", "(", "images_a", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_aa", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_ab", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_aba", "[", "0", ":", "1", ",", ":", ":", "]", ",", "\n", "images_b", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_bb", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_ba", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_bab", "[", "0", ":", "1", ",", ":", ":", "]", ")", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_bak.COCOGANGAMESTrainer.resume": [[184, 195], ["os.path.dirname", "helpers.get_model_list", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.gen.load_state_dict", "int", "helpers.get_model_list", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.dis.load_state_dict", "print", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers.get_model_list", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers.get_model_list"], ["", "def", "resume", "(", "self", ",", "snapshot_prefix", ")", ":", "\n", "    ", "dirname", "=", "os", ".", "path", ".", "dirname", "(", "snapshot_prefix", ")", "\n", "last_model_name", "=", "get_model_list", "(", "dirname", ",", "\"gen\"", ")", "\n", "if", "last_model_name", "is", "None", ":", "\n", "      ", "return", "0", "\n", "", "self", ".", "gen", ".", "load_state_dict", "(", "torch", ".", "load", "(", "last_model_name", ")", ")", "\n", "iterations", "=", "int", "(", "last_model_name", "[", "-", "12", ":", "-", "4", "]", ")", "\n", "last_model_name", "=", "get_model_list", "(", "dirname", ",", "\"dis\"", ")", "\n", "self", ".", "dis", ".", "load_state_dict", "(", "torch", ".", "load", "(", "last_model_name", ")", ")", "\n", "print", "(", "'Resume from iteration %d'", "%", "iterations", ")", "\n", "return", "iterations", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_bak.COCOGANGAMESTrainer.save": [[196, 201], ["torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.gen.state_dict", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.dis.state_dict"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save"], ["", "def", "save", "(", "self", ",", "snapshot_prefix", ",", "iterations", ")", ":", "\n", "    ", "gen_filename", "=", "'%s_gen_%08d.pkl'", "%", "(", "snapshot_prefix", ",", "iterations", "+", "1", ")", "\n", "dis_filename", "=", "'%s_dis_%08d.pkl'", "%", "(", "snapshot_prefix", ",", "iterations", "+", "1", ")", "\n", "torch", ".", "save", "(", "self", ".", "gen", ".", "state_dict", "(", ")", ",", "gen_filename", ")", "\n", "torch", ".", "save", "(", "self", ".", "dis", ".", "state_dict", "(", ")", ",", "dis_filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_bak.COCOGANGAMESTrainer.cuda": [[202, 208], ["cocogan_trainer_games_bak.COCOGANGAMESTrainer.dis.cuda", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.gen.cuda", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.xy.cuda"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda"], ["", "def", "cuda", "(", "self", ",", "gpu", ")", ":", "\n", "    ", "self", ".", "gpu", "=", "gpu", "\n", "self", ".", "dis", ".", "cuda", "(", "gpu", ")", "\n", "self", ".", "gen", ".", "cuda", "(", "gpu", ")", "\n", "self", ".", "xy", "=", "self", ".", "xy", ".", "cuda", "(", "gpu", ")", "\n", "self", ".", "use_cuda", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_bak.COCOGANGAMESTrainer.normalize_image": [[209, 211], ["None"], "methods", ["None"], ["", "def", "normalize_image", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "x", "[", ":", ",", "0", ":", "3", ",", ":", ",", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_bak.COCOGANGAMESTrainer.calc_gradient_penalty": [[212, 243], ["torch.rand", "torch.rand", "torch.rand", "torch.rand", "alpha.expand().contiguous().view.expand().contiguous().view.expand().contiguous().view", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "cocogan_trainer_games_bak.COCOGANGAMESTrainer.dis", "gradients_a.view.view.view", "gradients_b.view.view.view", "alpha.expand().contiguous().view.expand().contiguous().view.cuda", "interpolates_a.cuda.cuda.cuda", "interpolates_b.cuda.cuda.cuda", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "gradients_a.view.view.size", "gradients_b.view.view.size", "alpha.expand().contiguous().view.expand().contiguous().view.expand().contiguous", "alpha.expand().contiguous().view.expand().contiguous().view.expand", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "disc_interpolates_a.size", "disc_interpolates_b.size", "gradients_a.view.view.norm", "gradients_b.view.view.norm", "real_data.nelement", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "disc_interpolates_a.size", "disc_interpolates_b.size"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda"], ["", "def", "calc_gradient_penalty", "(", "real_data_a", ",", "fake_data_a", ",", "real_data_b", ",", "fake_data_b", ")", ":", "\n", "# print \"real_data: \", real_data.size(), fake_data.size()", "\n", "    ", "alpha", "=", "torch", ".", "rand", "(", "BATCH_SIZE", ",", "1", ")", "\n", "alpha", "=", "alpha", ".", "expand", "(", "BATCH_SIZE", ",", "real_data", ".", "nelement", "(", ")", "/", "BATCH_SIZE", ")", ".", "contiguous", "(", ")", ".", "view", "(", "BATCH_SIZE", ",", "3", ",", "32", ",", "32", ")", "\n", "alpha", "=", "alpha", ".", "cuda", "(", "gpu", ")", "if", "use_cuda", "else", "alpha", "\n", "\n", "interpolates_a", "=", "alpha", "*", "real_data_a", "+", "(", "(", "1", "-", "alpha", ")", "*", "fake_data_a", ")", "\n", "interpolates_b", "=", "alpha", "*", "real_data_b", "+", "(", "(", "1", "-", "alpha", ")", "*", "fake_data_b", ")", "\n", "\n", "if", "self", ".", "use_cuda", ":", "\n", "      ", "interpolates_a", "=", "interpolates_a", ".", "cuda", "(", "gpu", ")", "\n", "interpolates_b", "=", "interpolates_b", ".", "cuda", "(", "gpu", ")", "\n", "", "interpolates_a", "=", "autograd", ".", "Variable", "(", "interpolates_a", ",", "requires_grad", "=", "True", ")", "\n", "interpolates_b", "=", "autograd", ".", "Variable", "(", "interpolates_b", ",", "requires_grad", "=", "True", ")", "\n", "\n", "disc_interpolates_a", ",", "disc_interpolates_b", "=", "self", ".", "dis", "(", "interpolates_a", ",", "interpolates_b", ")", "\n", "\n", "gradients_a", "=", "autograd", ".", "grad", "(", "outputs", "=", "disc_interpolates_a", ",", "inputs", "=", "interpolates_a", ",", "\n", "grad_outputs", "=", "torch", ".", "ones", "(", "disc_interpolates_a", ".", "size", "(", ")", ")", ".", "cuda", "(", "gpu", ")", "if", "use_cuda", "else", "torch", ".", "ones", "(", "\n", "disc_interpolates_a", ".", "size", "(", ")", ")", ",", "\n", "create_graph", "=", "True", ",", "retain_graph", "=", "True", ",", "only_inputs", "=", "True", ")", "[", "0", "]", "\n", "gradients_b", "=", "autograd", ".", "grad", "(", "outputs", "=", "disc_interpolates_b", ",", "inputs", "=", "interpolates_b", ",", "\n", "grad_outputs", "=", "torch", ".", "ones", "(", "disc_interpolates_b", ".", "size", "(", ")", ")", ".", "cuda", "(", "gpu", ")", "if", "use_cuda", "else", "torch", ".", "ones", "(", "\n", "disc_interpolates_b", ".", "size", "(", ")", ")", ",", "\n", "create_graph", "=", "True", ",", "retain_graph", "=", "True", ",", "only_inputs", "=", "True", ")", "[", "0", "]", "\n", "gradients_a", "=", "gradients_a", ".", "view", "(", "gradients_a", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "gradients_b", "=", "gradients_b", ".", "view", "(", "gradients_b", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "gradient_penalty_a", "=", "(", "(", "gradients_a", ".", "norm", "(", "2", ",", "dim", "=", "1", ")", "-", "1", ")", "**", "2", ")", ".", "mean", "(", ")", "*", "LAMBDA", "\n", "gradient_penalty_b", "=", "(", "(", "gradients_b", ".", "norm", "(", "2", ",", "dim", "=", "1", ")", "-", "1", ")", "**", "2", ")", ".", "mean", "(", ")", "*", "LAMBDA", "\n", "return", "gradient_penalty_a", "+", "gradient_penalty_b", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_bak.COCOGANGAMESTrainer.js_regularization": [[244, 264], ["torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "grad_D1_logits.view.view.view", "grad_D2_logits.view.view.view", "grad_D1_logits.view.view.norm", "grad_D2_logits.view.view.norm", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.functional.sigmoid.size", "torch.functional.sigmoid.size", "grad_D1_logits_norm.size", "torch.functional.sigmoid.size", "grad_D2_logits_norm.size", "torch.functional.sigmoid.size", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "D1_logits.size", "D2_logits.size", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "D1_logits.size", "D2_logits.size"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda"], ["", "def", "js_regularization", "(", "self", ",", "D1_logits", ",", "D1_arg", ",", "D2_logits", ",", "D2_arg", ")", ":", "\n", "    ", "D1", "=", "nn", ".", "functional", ".", "sigmoid", "(", "D1_logits", ")", "\n", "D2", "=", "nn", ".", "functional", ".", "sigmoid", "(", "D2_logits", ")", "\n", "grad_D1_logits", "=", "autograd", ".", "grad", "(", "outputs", "=", "D1_logits", ",", "inputs", "=", "D1_arg", ",", "\n", "grad_outputs", "=", "torch", ".", "ones", "(", "D1_logits", ".", "size", "(", ")", ")", ".", "cuda", "(", "self", ".", "gpu", ")", "if", "self", ".", "use_cuda", "else", "torch", ".", "ones", "(", "D1_logits", ".", "size", "(", ")", ")", ",", "\n", "create_graph", "=", "True", ",", "retain_graph", "=", "True", ",", "only_inputs", "=", "True", ")", "[", "0", "]", "\n", "grad_D2_logits", "=", "autograd", ".", "grad", "(", "outputs", "=", "D2_logits", ",", "inputs", "=", "D2_arg", ",", "\n", "grad_outputs", "=", "torch", ".", "ones", "(", "D2_logits", ".", "size", "(", ")", ")", ".", "cuda", "(", "self", ".", "gpu", ")", "if", "self", ".", "use_cuda", "else", "torch", ".", "ones", "(", "D2_logits", ".", "size", "(", ")", ")", ",", "\n", "create_graph", "=", "True", ",", "retain_graph", "=", "True", ",", "only_inputs", "=", "True", ")", "[", "0", "]", "\n", "grad_D1_logits", "=", "grad_D1_logits", ".", "view", "(", "D1", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "grad_D2_logits", "=", "grad_D2_logits", ".", "view", "(", "D2", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "grad_D1_logits", ".", "norm", "(", "2", ",", "dim", "=", "1", ")", "\n", "grad_D2_logits", ".", "norm", "(", "2", ",", "dim", "=", "1", ")", "\n", "assert", "grad_D1_logits_norm", ".", "size", "(", ")", "==", "D1", ".", "size", "(", ")", "\n", "assert", "grad_D2_logits_norm", ".", "size", "(", ")", "==", "D2", ".", "size", "(", ")", "\n", "\n", "reg_D1", "=", "torch", ".", "mul", "(", "torch", ".", "pow", "(", "1.0", "-", "D1", ",", "2", ")", ",", "torch", ".", "pow", "(", "grad_D1_logits_norm", ",", "2", ")", ")", "\n", "reg_D2", "=", "torch", ".", "mul", "(", "torch", ".", "pow", "(", "D2", ",", "2", ")", ",", "torch", ".", "pow", "(", "grad_D2_logits_norm", ",", "2", ")", ")", "\n", "disc_regularizer", "=", "torch", ".", "mean", "(", "reg_D1", "+", "reg_D2", ")", "\n", "return", "disc_regularizer", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer.__init__": [[18, 37], ["torch.Module.__init__", "exec", "exec", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "cocogan_trainer_games.COCOGANGAMESTrainer.dis.apply", "cocogan_trainer_games.COCOGANGAMESTrainer.gen.apply", "torch.nn.L1Loss", "torch.nn.L1Loss", "torch.nn.L1Loss", "torch.nn.L1Loss", "torch.nn.L1Loss", "torch.nn.L1Loss", "torch.nn.L1Loss", "torch.nn.L1Loss", "cocogan_trainer_games.COCOGANGAMESTrainer._create_xy_image", "cocogan_trainer_games.COCOGANGAMESTrainer.unsqueeze().expand", "cocogan_trainer_games.COCOGANGAMESTrainer.dis.parameters", "cocogan_trainer_games.COCOGANGAMESTrainer.gen.parameters", "cocogan_trainer_games.COCOGANGAMESTrainer.size", "cocogan_trainer_games.COCOGANGAMESTrainer.size", "cocogan_trainer_games.COCOGANGAMESTrainer.size", "cocogan_trainer_games.COCOGANGAMESTrainer.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer._create_xy_image"], ["  ", "def", "__init__", "(", "self", ",", "hyperparameters", ")", ":", "\n", "    ", "super", "(", "COCOGANGAMESTrainer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "use_cuda", "=", "False", "\n", "lr", "=", "hyperparameters", "[", "'lr'", "]", "\n", "# Initiate the networks", "\n", "exec", "(", "'self.dis = %s(hyperparameters[\\'dis\\'])'", "%", "hyperparameters", "[", "'dis'", "]", "[", "'name'", "]", ")", "\n", "exec", "(", "'self.gen = %s(hyperparameters[\\'gen\\'])'", "%", "hyperparameters", "[", "'gen'", "]", "[", "'name'", "]", ")", "\n", "# Setup the optimizers", "\n", "self", ".", "dis_opt", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "dis", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "weight_decay", "=", "0.0001", ")", "\n", "self", ".", "gen_opt", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "gen", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "weight_decay", "=", "0.0001", ")", "\n", "# Network weight initialization", "\n", "self", ".", "dis", ".", "apply", "(", "gaussian_weights_init", ")", "\n", "self", ".", "gen", ".", "apply", "(", "gaussian_weights_init", ")", "\n", "# Setup the loss function for training", "\n", "self", ".", "ll_loss_criterion_a", "=", "torch", ".", "nn", ".", "L1Loss", "(", ")", "\n", "self", ".", "ll_loss_criterion_b", "=", "torch", ".", "nn", ".", "L1Loss", "(", ")", "\n", "xy", "=", "self", ".", "_create_xy_image", "(", ")", "\n", "self", ".", "xy", "=", "xy", ".", "unsqueeze", "(", "0", ")", ".", "expand", "(", "hyperparameters", "[", "'batch_size'", "]", ",", "xy", ".", "size", "(", "0", ")", ",", "xy", ".", "size", "(", "1", ")", ",", "xy", ".", "size", "(", "2", ")", ")", "\n", "self", ".", "use_xy", "=", "1", "==", "hyperparameters", "[", "'gen'", "]", "[", "'use_xy'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer._create_xy_image": [[38, 44], ["list", "np.transpose", "Variable", "itertools.product", "float", "np.float32", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "range", "range", "np.reshape", "np.asarray"], "methods", ["None"], ["", "def", "_create_xy_image", "(", "self", ",", "width", "=", "256", ")", ":", "\n", "    ", "coordinates", "=", "list", "(", "itertools", ".", "product", "(", "range", "(", "width", ")", ",", "range", "(", "width", ")", ")", ")", "\n", "arr", "=", "(", "np", ".", "reshape", "(", "np", ".", "asarray", "(", "coordinates", ")", ",", "newshape", "=", "[", "width", ",", "width", ",", "2", "]", ")", "-", "width", "/", "2", ")", "/", "float", "(", "(", "width", "/", "2", ")", ")", "\n", "new_map", "=", "np", ".", "transpose", "(", "np", ".", "float32", "(", "arr", ")", ",", "[", "2", ",", "0", ",", "1", "]", ")", "\n", "xy", "=", "Variable", "(", "torch", ".", "from_numpy", "(", "new_map", ")", ",", "requires_grad", "=", "False", ")", "\n", "return", "xy", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer._compute_kl": [[45, 54], ["torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.mean", "torch.mean", "torch.mean", "torch.mean"], "methods", ["None"], ["", "def", "_compute_kl", "(", "self", ",", "mu", ")", ":", "\n", "# def _compute_kl(self, mu, sd):", "\n", "# mu_2 = torch.pow(mu, 2)", "\n", "# sd_2 = torch.pow(sd, 2)", "\n", "# encoding_loss = (mu_2 + sd_2 - torch.log(sd_2)).sum() / mu_2.size(0)", "\n", "# return encoding_loss", "\n", "    ", "mu_2", "=", "torch", ".", "pow", "(", "mu", ",", "2", ")", "\n", "encoding_loss", "=", "torch", ".", "mean", "(", "mu_2", ")", "\n", "return", "encoding_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer.gen_update": [[55, 112], ["cocogan_trainer_games.COCOGANGAMESTrainer.gen", "cocogan_trainer_games.COCOGANGAMESTrainer.gen.forward_a2b", "cocogan_trainer_games.COCOGANGAMESTrainer.gen.forward_b2a", "cocogan_trainer_games.COCOGANGAMESTrainer.dis", "enumerate", "cocogan_trainer_games.COCOGANGAMESTrainer._compute_kl", "cocogan_trainer_games.COCOGANGAMESTrainer._compute_kl", "cocogan_trainer_games.COCOGANGAMESTrainer._compute_kl", "cocogan_trainer_games.COCOGANGAMESTrainer.ll_loss_criterion_a", "cocogan_trainer_games.COCOGANGAMESTrainer.ll_loss_criterion_b", "cocogan_trainer_games.COCOGANGAMESTrainer.ll_loss_criterion_a", "cocogan_trainer_games.COCOGANGAMESTrainer.ll_loss_criterion_b", "cocogan_trainer_games.COCOGANGAMESTrainer.gen.zero_grad", "total_loss.backward", "cocogan_trainer_games.COCOGANGAMESTrainer.gen_opt.step", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "itertools.izip", "cocogan_trainer_games.COCOGANGAMESTrainer.data.cpu().numpy", "cocogan_trainer_games.COCOGANGAMESTrainer.data.cpu().numpy", "cocogan_trainer_games.COCOGANGAMESTrainer.data.cpu().numpy", "ad_loss_a.data.cpu().numpy", "ad_loss_b.data.cpu().numpy", "cocogan_trainer_games.COCOGANGAMESTrainer.data.cpu().numpy", "cocogan_trainer_games.COCOGANGAMESTrainer.data.cpu().numpy", "cocogan_trainer_games.COCOGANGAMESTrainer.data.cpu().numpy", "cocogan_trainer_games.COCOGANGAMESTrainer.data.cpu().numpy", "total_loss.data.cpu().numpy", "out_a.mean", "out_b.mean", "out_a.mean", "out_b.mean", "cocogan_trainer_games.COCOGANGAMESTrainer.data.cpu", "cocogan_trainer_games.COCOGANGAMESTrainer.data.cpu", "cocogan_trainer_games.COCOGANGAMESTrainer.data.cpu", "ad_loss_a.data.cpu", "ad_loss_b.data.cpu", "cocogan_trainer_games.COCOGANGAMESTrainer.data.cpu", "cocogan_trainer_games.COCOGANGAMESTrainer.data.cpu", "cocogan_trainer_games.COCOGANGAMESTrainer.data.cpu", "cocogan_trainer_games.COCOGANGAMESTrainer.data.cpu", "total_loss.data.cpu"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOResGen2.forward_a2b", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOResGen2.forward_b2a", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer._compute_kl", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer._compute_kl", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer._compute_kl", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.step"], ["", "def", "gen_update", "(", "self", ",", "images_a", ",", "images_b", ",", "hyperparameters", ")", ":", "\n", "    ", "if", "self", ".", "use_xy", ":", "\n", "        ", "images_a_xy", "=", "torch", ".", "cat", "(", "(", "images_a", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "images_b_xy", "=", "torch", ".", "cat", "(", "(", "images_b", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "", "else", ":", "\n", "        ", "images_a_xy", "=", "images_a", "\n", "images_b_xy", "=", "images_b", "\n", "", "x_aa", ",", "x_ba", ",", "x_ab", ",", "x_bb", ",", "shared", "=", "self", ".", "gen", "(", "images_a_xy", ",", "images_b_xy", ")", "\n", "\n", "if", "self", ".", "use_xy", ":", "\n", "        ", "x_ba_xy", "=", "torch", ".", "cat", "(", "(", "x_ba", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "x_ab_xy", "=", "torch", ".", "cat", "(", "(", "x_ab", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "", "else", ":", "\n", "        ", "x_ba_xy", "=", "x_ba", "\n", "x_ab_xy", "=", "x_ab", "\n", "", "x_bab", ",", "shared_bab", "=", "self", ".", "gen", ".", "forward_a2b", "(", "x_ba_xy", ")", "\n", "x_aba", ",", "shared_aba", "=", "self", ".", "gen", ".", "forward_b2a", "(", "x_ab_xy", ")", "\n", "outs_a", ",", "outs_b", "=", "self", ".", "dis", "(", "x_ba", ",", "x_ab", ")", "\n", "for", "it", ",", "(", "out_a", ",", "out_b", ")", "in", "enumerate", "(", "itertools", ".", "izip", "(", "outs_a", ",", "outs_b", ")", ")", ":", "\n", "#outputs_a = nn.functional.sigmoid(out_a)", "\n", "#outputs_b = nn.functional.sigmoid(out_b)", "\n", "#all_ones = Variable(torch.ones((outputs_a.size(0))).cuda(self.gpu))", "\n", "      ", "if", "it", "==", "0", ":", "\n", "        ", "ad_loss_a", "=", "-", "out_a", ".", "mean", "(", ")", "\n", "ad_loss_b", "=", "-", "out_b", ".", "mean", "(", ")", "\n", "", "else", ":", "\n", "        ", "ad_loss_a", "+=", "-", "out_a", ".", "mean", "(", ")", "\n", "ad_loss_b", "+=", "-", "out_b", ".", "mean", "(", ")", "\n", "\n", "", "", "enc_loss", "=", "self", ".", "_compute_kl", "(", "shared", ")", "\n", "enc_bab_loss", "=", "self", ".", "_compute_kl", "(", "shared_bab", ")", "\n", "enc_aba_loss", "=", "self", ".", "_compute_kl", "(", "shared_aba", ")", "\n", "ll_loss_a", "=", "self", ".", "ll_loss_criterion_a", "(", "x_aa", ",", "images_a", ")", "\n", "ll_loss_b", "=", "self", ".", "ll_loss_criterion_b", "(", "x_bb", ",", "images_b", ")", "\n", "ll_loss_aba", "=", "self", ".", "ll_loss_criterion_a", "(", "x_aba", ",", "images_a", ")", "\n", "ll_loss_bab", "=", "self", ".", "ll_loss_criterion_b", "(", "x_bab", ",", "images_b", ")", "\n", "\n", "total_loss", "=", "hyperparameters", "[", "'gan_w'", "]", "*", "(", "ad_loss_a", "+", "ad_loss_b", ")", "+", "hyperparameters", "[", "'ll_direct_link_w'", "]", "*", "(", "ll_loss_a", "+", "ll_loss_b", ")", "+", "hyperparameters", "[", "'ll_cycle_link_w'", "]", "*", "(", "ll_loss_aba", "+", "ll_loss_bab", ")", "+", "hyperparameters", "[", "'kl_direct_link_w'", "]", "*", "(", "enc_loss", "+", "enc_loss", ")", "+", "hyperparameters", "[", "'kl_cycle_link_w'", "]", "*", "(", "enc_bab_loss", "+", "enc_aba_loss", ")", "\n", "self", ".", "gen", ".", "zero_grad", "(", ")", "\n", "total_loss", ".", "backward", "(", ")", "\n", "self", ".", "gen_opt", ".", "step", "(", ")", "\n", "self", ".", "gen_enc_loss", "=", "enc_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_enc_bab_loss", "=", "enc_bab_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_enc_aba_loss", "=", "enc_aba_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ad_loss_a", "=", "ad_loss_a", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ad_loss_b", "=", "ad_loss_b", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ll_loss_a", "=", "ll_loss_a", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ll_loss_b", "=", "ll_loss_b", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ll_loss_aba", "=", "ll_loss_aba", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ll_loss_bab", "=", "ll_loss_bab", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_total_loss", "=", "total_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "#pdb.set_trace()", "\n", "return", "(", "x_aa", ",", "x_ba", ",", "x_ab", ",", "x_bb", ",", "x_aba", ",", "x_bab", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer.dis_update": [[113, 185], ["cocogan_trainer_games.COCOGANGAMESTrainer.gen", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "cocogan_trainer_games.COCOGANGAMESTrainer.dis", "cocogan_trainer_games.COCOGANGAMESTrainer.dis", "enumerate", "cocogan_trainer_games.COCOGANGAMESTrainer.dis.zero_grad", "loss.backward", "cocogan_trainer_games.COCOGANGAMESTrainer.dis_opt.step", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "cocogan_trainer_games.COCOGANGAMESTrainer.js_regularization", "cocogan_trainer_games.COCOGANGAMESTrainer.js_regularization", "itertools.izip", "out_true_a.size", "out_fake_a.size", "Variable", "Variable", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "helpers._compute_true_acc", "helpers._compute_true_acc", "helpers._compute_fake_acc", "helpers._compute_fake_acc", "exec", "exec", "loss.data.cpu().numpy", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "cocogan_trainer_games.COCOGANGAMESTrainer.calc_gradient_penalty", "cocogan_trainer_games.COCOGANGAMESTrainer.calc_gradient_penalty", "this_fake_a.mean", "this_true_a.mean", "this_fake_b.mean", "this_true_b.mean", "this_fake_a.mean", "this_true_a.mean", "this_fake_b.mean", "this_true_b.mean", "loss.data.cpu", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.step", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer.js_regularization", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer.js_regularization", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers._compute_true_acc", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers._compute_true_acc", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers._compute_fake_acc", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers._compute_fake_acc", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer.calc_gradient_penalty", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer.calc_gradient_penalty"], ["", "def", "dis_update", "(", "self", ",", "images_a", ",", "images_b", ",", "hyperparameters", ")", ":", "\n", "    ", "if", "self", ".", "use_xy", ":", "\n", "        ", "images_a_xy", "=", "torch", ".", "cat", "(", "(", "images_a", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "images_b_xy", "=", "torch", ".", "cat", "(", "(", "images_b", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "", "else", ":", "\n", "        ", "images_a_xy", "=", "images_a", "\n", "images_b_xy", "=", "images_b", "\n", "", "x_aa", ",", "x_ba", ",", "x_ab", ",", "x_bb", ",", "shared", "=", "self", ".", "gen", "(", "images_a_xy", ",", "images_b_xy", ")", "\n", "\n", "data_a", "=", "torch", ".", "cat", "(", "(", "images_a", ",", "x_ba", ")", ",", "0", ")", "\n", "data_b", "=", "torch", ".", "cat", "(", "(", "images_b", ",", "x_ab", ")", ",", "0", ")", "\n", "#res_a, res_b = self.dis(data_a,data_b)", "\n", "#pdb.set_trace()", "\n", "res_true_a", ",", "res_true_b", "=", "self", ".", "dis", "(", "images_a", ",", "images_b", ")", "\n", "res_fake_a", ",", "res_fake_b", "=", "self", ".", "dis", "(", "x_ba", ",", "x_ab", ")", "\n", "\n", "# res_true_a, res_true_b = self.dis(images_a,images_b)", "\n", "# res_fake_a, res_fake_b = self.dis(x_ba, x_ab)", "\n", "if", "0", "!=", "hyperparameters", "[", "'gamma_js_regularization'", "]", ":", "\n", "      ", "js_reg_a", "=", "self", ".", "js_regularization", "(", "res_true_a", "[", "0", "]", ",", "images_a", ",", "res_fake_a", "[", "0", "]", ",", "x_ba", ")", "\n", "js_reg_b", "=", "self", ".", "js_regularization", "(", "res_true_b", "[", "0", "]", ",", "images_b", ",", "res_fake_b", "[", "0", "]", ",", "x_ab", ")", "\n", "\n", "", "for", "it", ",", "(", "this_true_a", ",", "this_true_b", ",", "this_fake_a", ",", "this_fake_b", ",", "in_a", ",", "in_b", ",", "fake_a", ",", "fake_b", ")", "in", "enumerate", "(", "itertools", ".", "izip", "(", "res_true_a", ",", "res_true_b", ",", "res_fake_a", ",", "res_fake_b", ",", "images_a", ",", "images_b", ",", "x_ba", ",", "x_ab", ")", ")", ":", "\n", "#pdb.set_trace()", "\n", "      ", "out_true_a", ",", "out_fake_a", "=", "nn", ".", "functional", ".", "sigmoid", "(", "this_true_a", ")", ",", "nn", ".", "functional", ".", "sigmoid", "(", "this_fake_a", ")", "\n", "out_true_b", ",", "out_fake_b", "=", "nn", ".", "functional", ".", "sigmoid", "(", "this_true_b", ")", ",", "nn", ".", "functional", ".", "sigmoid", "(", "this_fake_b", ")", "\n", "\n", "out_true_n", "=", "out_true_a", ".", "size", "(", "0", ")", "\n", "out_fake_n", "=", "out_fake_a", ".", "size", "(", "0", ")", "\n", "all1", "=", "Variable", "(", "torch", ".", "ones", "(", "(", "out_true_n", ")", ")", ".", "cuda", "(", "self", ".", "gpu", ")", ")", "\n", "all0", "=", "Variable", "(", "torch", ".", "zeros", "(", "(", "out_fake_n", ")", ")", ".", "cuda", "(", "self", ".", "gpu", ")", ")", "\n", "ad_true_loss_a", "=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "out_true_a", ",", "all1", ")", "\n", "ad_true_loss_b", "=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "out_true_b", ",", "all1", ")", "\n", "ad_fake_loss_a", "=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "out_fake_a", ",", "all0", ")", "\n", "ad_fake_loss_b", "=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "out_fake_b", ",", "all0", ")", "\n", "if", "it", "==", "0", ":", "\n", "        ", "ad_loss_a", "=", "(", "this_fake_a", ".", "mean", "(", ")", "-", "this_true_a", ".", "mean", "(", ")", ")", "\n", "ad_loss_b", "=", "(", "this_fake_b", ".", "mean", "(", ")", "-", "this_true_b", ".", "mean", "(", ")", ")", "\n", "panalty_a", ",", "panalty_b", "=", "self", ".", "calc_gradient_penalty", "(", "in_a", ",", "fake_a", ",", "in_b", ",", "fake_b", ")", "\n", "ad_loss_a", "+=", "panalty_a", "\n", "ad_loss_b", "+=", "panalty_b", "\n", "", "else", ":", "\n", "        ", "ad_loss_a", "+=", "(", "this_fake_a", ".", "mean", "(", ")", "-", "this_true_a", ".", "mean", "(", ")", ")", "\n", "ad_loss_b", "+=", "(", "this_fake_b", ".", "mean", "(", ")", "-", "this_true_b", ".", "mean", "(", ")", ")", "\n", "panalty_a", ",", "panalty_b", "=", "self", ".", "calc_gradient_penalty", "(", "in_a", ",", "fake_a", ",", "in_b", ",", "fake_b", ")", "\n", "ad_loss_a", "+=", "panalty_a", "\n", "ad_loss_b", "+=", "panalty_b", "\n", "\n", "\n", "#if it==0:", "\n", "#  ad_loss_a = ad_true_loss_a + ad_fake_loss_a", "\n", "#  ad_loss_b = ad_true_loss_b + ad_fake_loss_b", "\n", "#else:", "\n", "#  ad_loss_a += ad_true_loss_a + ad_fake_loss_a", "\n", "#  ad_loss_b += ad_true_loss_b + ad_fake_loss_b", "\n", "", "true_a_acc", "=", "_compute_true_acc", "(", "out_true_a", ")", "\n", "true_b_acc", "=", "_compute_true_acc", "(", "out_true_b", ")", "\n", "fake_a_acc", "=", "_compute_fake_acc", "(", "out_fake_a", ")", "\n", "fake_b_acc", "=", "_compute_fake_acc", "(", "out_fake_b", ")", "\n", "exec", "(", "'self.dis_true_acc_%d = 0.5 * (true_a_acc + true_b_acc)'", "%", "it", ")", "\n", "exec", "(", "'self.dis_fake_acc_%d = 0.5 * (fake_a_acc + fake_b_acc)'", "%", "it", ")", "\n", "\n", "\n", "", "d_loss", "=", "(", "ad_loss_a", "+", "ad_loss_b", ")", "\n", "if", "0", "!=", "hyperparameters", "[", "'gamma_js_regularization'", "]", ":", "\n", "      ", "d_loss", "+=", "(", "js_reg_a", "+", "js_reg_b", ")", "*", "(", "hyperparameters", "[", "'gamma_js_regularization'", "]", "/", "2.", ")", "\n", "", "loss", "=", "hyperparameters", "[", "'gan_w'", "]", "*", "d_loss", "\n", "self", ".", "dis", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "dis_opt", ".", "step", "(", ")", "\n", "self", ".", "dis_loss", "=", "loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer.assemble_outputs": [[186, 198], ["cocogan_trainer_games.COCOGANGAMESTrainer.normalize_image", "cocogan_trainer_games.COCOGANGAMESTrainer.normalize_image", "cocogan_trainer_games.COCOGANGAMESTrainer.normalize_image", "cocogan_trainer_games.COCOGANGAMESTrainer.normalize_image", "cocogan_trainer_games.COCOGANGAMESTrainer.normalize_image", "cocogan_trainer_games.COCOGANGAMESTrainer.normalize_image", "cocogan_trainer_games.COCOGANGAMESTrainer.normalize_image", "cocogan_trainer_games.COCOGANGAMESTrainer.normalize_image", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image"], ["", "def", "assemble_outputs", "(", "self", ",", "images_a", ",", "images_b", ",", "network_outputs", ")", ":", "\n", "    ", "images_a", "=", "self", ".", "normalize_image", "(", "images_a", ")", "\n", "images_b", "=", "self", ".", "normalize_image", "(", "images_b", ")", "\n", "x_aa", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "0", "]", ")", "\n", "x_ba", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "1", "]", ")", "\n", "x_ab", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "2", "]", ")", "\n", "x_bb", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "3", "]", ")", "\n", "x_aba", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "4", "]", ")", "\n", "x_bab", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "5", "]", ")", "\n", "#pdb.set_trace()", "\n", "return", "torch", ".", "cat", "(", "(", "images_a", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_aa", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_ab", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_aba", "[", "0", ":", "1", ",", ":", ":", "]", ",", "\n", "images_b", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_bb", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_ba", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_bab", "[", "0", ":", "1", ",", ":", ":", "]", ")", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer.resume": [[199, 210], ["os.path.dirname", "helpers.get_model_list", "cocogan_trainer_games.COCOGANGAMESTrainer.gen.load_state_dict", "int", "helpers.get_model_list", "cocogan_trainer_games.COCOGANGAMESTrainer.dis.load_state_dict", "print", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers.get_model_list", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers.get_model_list"], ["", "def", "resume", "(", "self", ",", "snapshot_prefix", ")", ":", "\n", "    ", "dirname", "=", "os", ".", "path", ".", "dirname", "(", "snapshot_prefix", ")", "\n", "last_model_name", "=", "get_model_list", "(", "dirname", ",", "\"gen\"", ")", "\n", "if", "last_model_name", "is", "None", ":", "\n", "      ", "return", "0", "\n", "", "self", ".", "gen", ".", "load_state_dict", "(", "torch", ".", "load", "(", "last_model_name", ")", ")", "\n", "iterations", "=", "int", "(", "last_model_name", "[", "-", "12", ":", "-", "4", "]", ")", "\n", "last_model_name", "=", "get_model_list", "(", "dirname", ",", "\"dis\"", ")", "\n", "self", ".", "dis", ".", "load_state_dict", "(", "torch", ".", "load", "(", "last_model_name", ")", ")", "\n", "print", "(", "'Resume from iteration %d'", "%", "iterations", ")", "\n", "return", "iterations", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer.save": [[211, 216], ["torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "cocogan_trainer_games.COCOGANGAMESTrainer.gen.state_dict", "cocogan_trainer_games.COCOGANGAMESTrainer.dis.state_dict"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save"], ["", "def", "save", "(", "self", ",", "snapshot_prefix", ",", "iterations", ")", ":", "\n", "    ", "gen_filename", "=", "'%s_gen_%08d.pkl'", "%", "(", "snapshot_prefix", ",", "iterations", "+", "1", ")", "\n", "dis_filename", "=", "'%s_dis_%08d.pkl'", "%", "(", "snapshot_prefix", ",", "iterations", "+", "1", ")", "\n", "torch", ".", "save", "(", "self", ".", "gen", ".", "state_dict", "(", ")", ",", "gen_filename", ")", "\n", "torch", ".", "save", "(", "self", ".", "dis", ".", "state_dict", "(", ")", ",", "dis_filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer.cuda": [[217, 224], ["torch.cuda.device", "torch.cuda.device", "torch.cuda.device", "torch.cuda.device", "cocogan_trainer_games.COCOGANGAMESTrainer.dis.cuda", "cocogan_trainer_games.COCOGANGAMESTrainer.gen.cuda", "cocogan_trainer_games.COCOGANGAMESTrainer.xy.cuda"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda"], ["", "def", "cuda", "(", "self", ",", "gpu", ")", ":", "\n", "    ", "self", ".", "gpu", "=", "gpu", "\n", "with", "torch", ".", "cuda", ".", "device", "(", "gpu", ")", ":", "\n", "        ", "self", ".", "dis", ".", "cuda", "(", "gpu", ")", "\n", "self", ".", "gen", ".", "cuda", "(", "gpu", ")", "\n", "self", ".", "xy", "=", "self", ".", "xy", ".", "cuda", "(", "gpu", ")", "\n", "", "self", ".", "use_cuda", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer.share_memory": [[225, 228], ["cocogan_trainer_games.COCOGANGAMESTrainer.dis.share_memory", "cocogan_trainer_games.COCOGANGAMESTrainer.gen.share_memory"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer.share_memory", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer.share_memory"], ["", "def", "share_memory", "(", "self", ")", ":", "\n", "    ", "self", ".", "dis", ".", "share_memory", "(", ")", "\n", "self", ".", "gen", ".", "share_memory", "(", ")", "\n", "#self.xy = self.xy.share_memory()", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer.normalize_image": [[231, 233], ["None"], "methods", ["None"], ["", "def", "normalize_image", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "x", "[", ":", ",", "0", ":", "3", ",", ":", ",", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer.calc_gradient_penalty": [[234, 271], ["torch.rand", "torch.rand", "torch.rand", "torch.rand", "alpha.expand().contiguous().view.expand().contiguous().view.expand().contiguous().view", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "cocogan_trainer_games.COCOGANGAMESTrainer.dis", "gradients_a.view.view.view", "gradients_b.view.view.view", "fake_data_a.view", "fake_data_b.view", "real_data_a.view", "real_data_b.view", "alpha.expand().contiguous().view.expand().contiguous().view.cuda", "interpolates_a.cuda.cuda.cuda", "interpolates_b.cuda.cuda.cuda", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "gradients_a.view.view.size", "gradients_b.view.view.size", "alpha.expand().contiguous().view.expand().contiguous().view.expand().contiguous", "alpha.expand().contiguous().view.expand().contiguous().view.expand", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "disc_interpolates_a.size", "disc_interpolates_b.size", "gradients_a.view.view.norm", "gradients_b.view.view.norm", "real_data_a.nelement", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "disc_interpolates_a.size", "disc_interpolates_b.size"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda"], ["", "def", "calc_gradient_penalty", "(", "self", ",", "real_data_a", ",", "fake_data_a", ",", "real_data_b", ",", "fake_data_b", ")", ":", "\n", "# print \"real_data: \", real_data.size(), fake_data.size()", "\n", "    ", "LAMBDA", "=", "10", "\n", "alpha", "=", "torch", ".", "rand", "(", "1", ",", "1", ")", "\n", "fake_data_a", "=", "fake_data_a", ".", "view", "(", "1", ",", "3", ",", "256", ",", "256", ")", ".", "data", "\n", "fake_data_b", "=", "fake_data_b", ".", "view", "(", "1", ",", "3", ",", "256", ",", "256", ")", ".", "data", "\n", "real_data_a", "=", "real_data_a", ".", "view", "(", "1", ",", "3", ",", "256", ",", "256", ")", ".", "data", "\n", "real_data_b", "=", "real_data_b", ".", "view", "(", "1", ",", "3", ",", "256", ",", "256", ")", ".", "data", "\n", "alpha", "=", "alpha", ".", "expand", "(", "1", ",", "real_data_a", ".", "nelement", "(", ")", "/", "1", ")", ".", "contiguous", "(", ")", ".", "view", "(", "1", ",", "3", ",", "256", ",", "256", ")", "\n", "alpha", "=", "alpha", ".", "cuda", "(", "self", ".", "gpu", ")", "if", "self", ".", "use_cuda", "else", "alpha", "\n", "\n", "interpolates_a", "=", "alpha", "*", "real_data_a", "+", "(", "(", "1", "-", "alpha", ")", "*", "fake_data_a", ")", "\n", "interpolates_b", "=", "alpha", "*", "real_data_b", "+", "(", "(", "1", "-", "alpha", ")", "*", "fake_data_b", ")", "\n", "\n", "if", "self", ".", "use_cuda", ":", "\n", "      ", "interpolates_a", "=", "interpolates_a", ".", "cuda", "(", "self", ".", "gpu", ")", "\n", "interpolates_b", "=", "interpolates_b", ".", "cuda", "(", "self", ".", "gpu", ")", "\n", "", "interpolates_a", "=", "autograd", ".", "Variable", "(", "interpolates_a", ",", "requires_grad", "=", "True", ")", "\n", "interpolates_b", "=", "autograd", ".", "Variable", "(", "interpolates_b", ",", "requires_grad", "=", "True", ")", "\n", "\n", "disc_interpolates_a", ",", "disc_interpolates_b", "=", "self", ".", "dis", "(", "interpolates_a", ",", "interpolates_b", ")", "\n", "disc_interpolates_a", ",", "disc_interpolates_b", "=", "disc_interpolates_a", "[", "0", "]", ",", "disc_interpolates_b", "[", "0", "]", "\n", "\n", "gradients_a", "=", "autograd", ".", "grad", "(", "outputs", "=", "disc_interpolates_a", ",", "inputs", "=", "interpolates_a", ",", "\n", "grad_outputs", "=", "torch", ".", "ones", "(", "disc_interpolates_a", ".", "size", "(", ")", ")", ".", "cuda", "(", "self", ".", "gpu", ")", "if", "self", ".", "use_cuda", "else", "torch", ".", "ones", "(", "\n", "disc_interpolates_a", ".", "size", "(", ")", ")", ",", "\n", "create_graph", "=", "True", ",", "retain_graph", "=", "True", ",", "only_inputs", "=", "True", ")", "[", "0", "]", "\n", "gradients_b", "=", "autograd", ".", "grad", "(", "outputs", "=", "disc_interpolates_b", ",", "inputs", "=", "interpolates_b", ",", "\n", "grad_outputs", "=", "torch", ".", "ones", "(", "disc_interpolates_b", ".", "size", "(", ")", ")", ".", "cuda", "(", "self", ".", "gpu", ")", "if", "self", ".", "use_cuda", "else", "torch", ".", "ones", "(", "\n", "disc_interpolates_b", ".", "size", "(", ")", ")", ",", "\n", "create_graph", "=", "True", ",", "retain_graph", "=", "True", ",", "only_inputs", "=", "True", ")", "[", "0", "]", "\n", "gradients_a", "=", "gradients_a", ".", "view", "(", "gradients_a", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "gradients_b", "=", "gradients_b", ".", "view", "(", "gradients_b", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "gradient_penalty_a", "=", "(", "(", "gradients_a", ".", "norm", "(", "2", ",", "dim", "=", "1", ")", "-", "1", ")", "**", "2", ")", ".", "mean", "(", ")", "*", "LAMBDA", "\n", "gradient_penalty_b", "=", "(", "(", "gradients_b", ".", "norm", "(", "2", ",", "dim", "=", "1", ")", "-", "1", ")", "**", "2", ")", ".", "mean", "(", ")", "*", "LAMBDA", "\n", "return", "gradient_penalty_a", ",", "gradient_penalty_b", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer.js_regularization": [[272, 292], ["torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "grad_D1_logits.view.view.view", "grad_D2_logits.view.view.view", "grad_D1_logits.view.view.norm", "grad_D2_logits.view.view.norm", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.functional.sigmoid.size", "torch.functional.sigmoid.size", "grad_D1_logits_norm.size", "torch.functional.sigmoid.size", "grad_D2_logits_norm.size", "torch.functional.sigmoid.size", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "D1_logits.size", "D2_logits.size", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "D1_logits.size", "D2_logits.size"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda"], ["", "def", "js_regularization", "(", "self", ",", "D1_logits", ",", "D1_arg", ",", "D2_logits", ",", "D2_arg", ")", ":", "\n", "    ", "D1", "=", "nn", ".", "functional", ".", "sigmoid", "(", "D1_logits", ")", "\n", "D2", "=", "nn", ".", "functional", ".", "sigmoid", "(", "D2_logits", ")", "\n", "grad_D1_logits", "=", "autograd", ".", "grad", "(", "outputs", "=", "D1_logits", ",", "inputs", "=", "D1_arg", ",", "\n", "grad_outputs", "=", "torch", ".", "ones", "(", "D1_logits", ".", "size", "(", ")", ")", ".", "cuda", "(", "self", ".", "gpu", ")", "if", "self", ".", "use_cuda", "else", "torch", ".", "ones", "(", "D1_logits", ".", "size", "(", ")", ")", ",", "\n", "create_graph", "=", "True", ",", "retain_graph", "=", "True", ",", "only_inputs", "=", "True", ")", "[", "0", "]", "\n", "grad_D2_logits", "=", "autograd", ".", "grad", "(", "outputs", "=", "D2_logits", ",", "inputs", "=", "D2_arg", ",", "\n", "grad_outputs", "=", "torch", ".", "ones", "(", "D2_logits", ".", "size", "(", ")", ")", ".", "cuda", "(", "self", ".", "gpu", ")", "if", "self", ".", "use_cuda", "else", "torch", ".", "ones", "(", "D2_logits", ".", "size", "(", ")", ")", ",", "\n", "create_graph", "=", "True", ",", "retain_graph", "=", "True", ",", "only_inputs", "=", "True", ")", "[", "0", "]", "\n", "grad_D1_logits", "=", "grad_D1_logits", ".", "view", "(", "D1", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "grad_D2_logits", "=", "grad_D2_logits", ".", "view", "(", "D2", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "grad_D1_logits", ".", "norm", "(", "2", ",", "dim", "=", "1", ")", "\n", "grad_D2_logits", ".", "norm", "(", "2", ",", "dim", "=", "1", ")", "\n", "assert", "grad_D1_logits_norm", ".", "size", "(", ")", "==", "D1", ".", "size", "(", ")", "\n", "assert", "grad_D2_logits_norm", ".", "size", "(", ")", "==", "D2", ".", "size", "(", ")", "\n", "\n", "reg_D1", "=", "torch", ".", "mul", "(", "torch", ".", "pow", "(", "1.0", "-", "D1", ",", "2", ")", ",", "torch", ".", "pow", "(", "grad_D1_logits_norm", ",", "2", ")", ")", "\n", "reg_D2", "=", "torch", ".", "mul", "(", "torch", ".", "pow", "(", "D2", ",", "2", ")", ",", "torch", ".", "pow", "(", "grad_D2_logits_norm", ",", "2", ")", ")", "\n", "disc_regularizer", "=", "torch", ".", "mean", "(", "reg_D1", "+", "reg_D2", ")", "\n", "return", "disc_regularizer", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.__init__": [[17, 19], ["cocogan_trainer_games.COCOGANGAMESTrainer.__init__"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__"], ["  ", "def", "__init__", "(", "self", ",", "hyperparameters", ")", ":", "\n", "    ", "super", "(", "COCOGANGAMESACTIONTrainer", ",", "self", ")", ".", "__init__", "(", "hyperparameters", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.gen_update": [[20, 89], ["cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.gen.zero_grad", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.gen", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.gen", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.gen.forward_a2b", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.gen.forward_b2a", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.gen.forward_a2b", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.gen.forward_b2a", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.dis", "enumerate", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer._compute_kl", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer._compute_kl", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer._compute_kl", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.ll_loss_criterion_a", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.ll_loss_criterion_b", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.ll_loss_criterion_a", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.ll_loss_criterion_b", "total_loss.backward", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.gen_opt.step", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "itertools.izip", "labels_a.repeat().resize().transpose().resize", "labels_b.repeat().resize().transpose().resize", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.data.cpu().numpy", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.data.cpu().numpy", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.data.cpu().numpy", "torch.functional.cross_entropy.data.cpu().numpy", "torch.functional.cross_entropy.data.cpu().numpy", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.data.cpu().numpy", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.data.cpu().numpy", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.data.cpu().numpy", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.data.cpu().numpy", "total_loss.data.cpu().numpy", "out_a.size", "out_b.size", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "labels_a.repeat().resize().transpose", "labels_b.repeat().resize().transpose", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.data.cpu", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.data.cpu", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.data.cpu", "torch.functional.cross_entropy.data.cpu", "torch.functional.cross_entropy.data.cpu", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.data.cpu", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.data.cpu", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.data.cpu", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.data.cpu", "total_loss.data.cpu", "labels_a.repeat().resize", "labels_b.repeat().resize", "labels_a.size", "labels_b.size", "labels_a.repeat", "out_a.size", "labels_a.size", "labels_b.repeat", "out_b.size", "labels_b.size", "out_a.size", "labels_a.size", "out_b.size", "labels_b.size"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOResGen2.forward_a2b", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOResGen2.forward_b2a", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOResGen2.forward_a2b", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOResGen2.forward_b2a", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer._compute_kl", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer._compute_kl", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer._compute_kl", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.step"], ["", "def", "gen_update", "(", "self", ",", "images_a", ",", "images_b", ",", "labels_a", ",", "labels_b", ",", "hyperparameters", ")", ":", "\n", "    ", "self", ".", "gen", ".", "zero_grad", "(", ")", "\n", "if", "self", ".", "use_xy", ":", "\n", "        ", "images_a_xy_0", "=", "torch", ".", "cat", "(", "(", "images_a", "[", "0", "]", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "images_b_xy_0", "=", "torch", ".", "cat", "(", "(", "images_b", "[", "0", "]", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "images_a_xy_1", "=", "torch", ".", "cat", "(", "(", "images_a", "[", "1", "]", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "images_b_xy_1", "=", "torch", ".", "cat", "(", "(", "images_b", "[", "1", "]", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "", "else", ":", "\n", "        ", "images_a_xy_0", "=", "images_a", "[", "0", "]", "\n", "images_b_xy_0", "=", "images_b", "[", "0", "]", "\n", "images_a_xy_1", "=", "images_a", "[", "1", "]", "\n", "images_b_xy_1", "=", "images_b", "[", "1", "]", "\n", "", "x_aa_0", ",", "x_ba_0", ",", "x_ab_0", ",", "x_bb_0", ",", "shared_0", "=", "self", ".", "gen", "(", "images_a_xy_0", ",", "images_b_xy_0", ")", "\n", "x_aa_1", ",", "x_ba_1", ",", "x_ab_1", ",", "x_bb_1", ",", "shared_1", "=", "self", ".", "gen", "(", "images_a_xy_1", ",", "images_b_xy_1", ")", "\n", "\n", "if", "self", ".", "use_xy", ":", "\n", "        ", "x_ba_xy_0", "=", "torch", ".", "cat", "(", "(", "x_ba_0", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "x_ab_xy_0", "=", "torch", ".", "cat", "(", "(", "x_ab_0", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "x_ba_xy_1", "=", "torch", ".", "cat", "(", "(", "x_ba_1", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "x_ab_xy_1", "=", "torch", ".", "cat", "(", "(", "x_ab_1", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "", "else", ":", "\n", "        ", "x_ba_xy_0", "=", "x_ba_0", "\n", "x_ab_xy_0", "=", "x_ab_0", "\n", "x_ba_xy_1", "=", "x_ba_1", "\n", "x_ab_xy_1", "=", "x_ab_1", "\n", "", "x_bab_0", ",", "shared_bab_0", "=", "self", ".", "gen", ".", "forward_a2b", "(", "x_ba_xy_0", ")", "\n", "x_aba_0", ",", "shared_aba_0", "=", "self", ".", "gen", ".", "forward_b2a", "(", "x_ab_xy_0", ")", "\n", "x_bab_1", ",", "shared_bab_1", "=", "self", ".", "gen", ".", "forward_a2b", "(", "x_ba_xy_1", ")", "\n", "x_aba_1", ",", "shared_aba_1", "=", "self", ".", "gen", ".", "forward_b2a", "(", "x_ab_xy_1", ")", "\n", "\n", "x_ba", "=", "torch", ".", "cat", "(", "(", "x_ba_0", ",", "x_ba_1", ")", ",", "1", ")", "\n", "x_ab", "=", "torch", ".", "cat", "(", "(", "x_ab_0", ",", "x_ab_1", ")", ",", "1", ")", "\n", "\n", "outs_a", ",", "outs_b", "=", "self", ".", "dis", "(", "x_ba", ",", "x_ab", ")", "\n", "for", "it", ",", "(", "out_a", ",", "out_b", ")", "in", "enumerate", "(", "itertools", ".", "izip", "(", "outs_a", ",", "outs_b", ")", ")", ":", "\n", "      ", "all_labels_a", "=", "labels_a", ".", "repeat", "(", "out_a", ".", "size", "(", "0", ")", "//", "labels_a", ".", "size", "(", "0", ")", ")", ".", "resize", "(", "out_a", ".", "size", "(", "0", ")", "//", "labels_a", ".", "size", "(", "0", ")", ",", "labels_a", ".", "size", "(", "0", ")", ")", ".", "transpose", "(", "1", ",", "0", ")", ".", "resize", "(", "out_a", ".", "size", "(", "0", ")", ")", "\n", "all_labels_b", "=", "labels_b", ".", "repeat", "(", "out_b", ".", "size", "(", "0", ")", "//", "labels_b", ".", "size", "(", "0", ")", ")", ".", "resize", "(", "out_b", ".", "size", "(", "0", ")", "//", "labels_b", ".", "size", "(", "0", ")", ",", "labels_b", ".", "size", "(", "0", ")", ")", ".", "transpose", "(", "1", ",", "0", ")", ".", "resize", "(", "out_b", ".", "size", "(", "0", ")", ")", "\n", "if", "it", "==", "0", ":", "\n", "        ", "ad_loss_a", "=", "nn", ".", "functional", ".", "cross_entropy", "(", "out_a", ",", "all_labels_b", ")", "\n", "ad_loss_b", "=", "nn", ".", "functional", ".", "cross_entropy", "(", "out_b", ",", "all_labels_a", ")", "\n", "", "else", ":", "\n", "        ", "ad_loss_a", "+=", "nn", ".", "functional", ".", "cross_entropy", "(", "out_a", ",", "all_labels_b", ")", "\n", "ad_loss_b", "+=", "nn", ".", "functional", ".", "cross_entropy", "(", "out_b", ",", "all_labels_a", ")", "\n", "\n", "", "", "enc_loss", "=", "self", ".", "_compute_kl", "(", "shared_0", ")", "\n", "enc_bab_loss", "=", "self", ".", "_compute_kl", "(", "shared_bab_0", ")", "\n", "enc_aba_loss", "=", "self", ".", "_compute_kl", "(", "shared_aba_0", ")", "\n", "ll_loss_a", "=", "self", ".", "ll_loss_criterion_a", "(", "x_aa_0", ",", "images_a", "[", "0", "]", ")", "\n", "ll_loss_b", "=", "self", ".", "ll_loss_criterion_b", "(", "x_bb_0", ",", "images_b", "[", "0", "]", ")", "\n", "ll_loss_aba", "=", "self", ".", "ll_loss_criterion_a", "(", "x_aba_0", ",", "images_a", "[", "0", "]", ")", "\n", "ll_loss_bab", "=", "self", ".", "ll_loss_criterion_b", "(", "x_bab_0", ",", "images_b", "[", "0", "]", ")", "\n", "total_loss", "=", "hyperparameters", "[", "'gan_w'", "]", "*", "(", "ad_loss_a", "+", "ad_loss_b", ")", "+", "hyperparameters", "[", "'ll_direct_link_w'", "]", "*", "(", "ll_loss_a", "+", "ll_loss_b", ")", "+", "hyperparameters", "[", "'ll_cycle_link_w'", "]", "*", "(", "ll_loss_aba", "+", "ll_loss_bab", ")", "+", "hyperparameters", "[", "'kl_direct_link_w'", "]", "*", "(", "enc_loss", "+", "enc_loss", ")", "+", "hyperparameters", "[", "'kl_cycle_link_w'", "]", "*", "(", "enc_bab_loss", "+", "enc_aba_loss", ")", "\n", "total_loss", ".", "backward", "(", ")", "\n", "self", ".", "gen_opt", ".", "step", "(", ")", "\n", "self", ".", "gen_enc_loss", "=", "enc_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_enc_bab_loss", "=", "enc_bab_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_enc_aba_loss", "=", "enc_aba_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ad_loss_a", "=", "ad_loss_a", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ad_loss_b", "=", "ad_loss_b", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ll_loss_a", "=", "ll_loss_a", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ll_loss_b", "=", "ll_loss_b", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ll_loss_aba", "=", "ll_loss_aba", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ll_loss_bab", "=", "ll_loss_bab", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_total_loss", "=", "total_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "return", "(", "x_aa_0", ",", "x_ba_0", ",", "x_ab_0", ",", "x_bb_0", ",", "x_aba_0", ",", "x_bab_0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.dis_update": [[90, 147], ["cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.dis.zero_grad", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.gen", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.gen", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.dis", "enumerate", "loss.backward", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.dis_opt.step", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "itertools.izip", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "out_true_a.size", "out_fake_a.size", "Variable", "labels_a.repeat().resize().transpose().resize", "labels_b.repeat().resize().transpose().resize", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "helpers._compute_true_acc", "helpers._compute_true_acc", "helpers._compute_fake_acc", "helpers._compute_fake_acc", "exec", "exec", "loss.data.cpu().numpy", "torch.LongTensor().fill_().cuda", "torch.LongTensor().fill_().cuda", "torch.LongTensor().fill_().cuda", "torch.LongTensor().fill_().cuda", "out_true_a.size", "out_true_b.size", "out_a.size", "out_b.size", "labels_a.repeat().resize().transpose", "labels_b.repeat().resize().transpose", "loss.data.cpu", "torch.LongTensor().fill_", "torch.LongTensor().fill_", "torch.LongTensor().fill_", "torch.LongTensor().fill_", "labels_a.repeat().resize", "labels_b.repeat().resize", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "labels_a.size", "labels_b.size", "labels_a.repeat", "out_true_a.size", "labels_a.size", "labels_b.repeat", "out_true_b.size", "labels_b.size", "out_true_a.size", "labels_a.size", "out_true_b.size", "labels_b.size"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.step", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers._compute_true_acc", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers._compute_true_acc", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers._compute_fake_acc", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers._compute_fake_acc", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda"], ["", "def", "dis_update", "(", "self", ",", "images_a", ",", "images_b", ",", "labels_a", ",", "labels_b", ",", "hyperparameters", ")", ":", "\n", "    ", "self", ".", "dis", ".", "zero_grad", "(", ")", "\n", "if", "self", ".", "use_xy", ":", "\n", "        ", "images_a_xy_0", "=", "torch", ".", "cat", "(", "(", "images_a", "[", "0", "]", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "images_b_xy_0", "=", "torch", ".", "cat", "(", "(", "images_b", "[", "0", "]", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "images_a_xy_1", "=", "torch", ".", "cat", "(", "(", "images_a", "[", "1", "]", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "images_b_xy_1", "=", "torch", ".", "cat", "(", "(", "images_b", "[", "1", "]", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "images_a_xy", "=", "torch", ".", "cat", "(", "images_a", ",", "1", ")", "\n", "images_b_xy", "=", "torch", ".", "cat", "(", "images_b", ",", "1", ")", "\n", "", "else", ":", "\n", "        ", "images_a_xy_0", "=", "images_a", "[", "0", "]", "\n", "images_b_xy_0", "=", "images_b", "[", "0", "]", "\n", "images_a_xy_1", "=", "images_a", "[", "1", "]", "\n", "images_b_xy_1", "=", "images_b", "[", "1", "]", "\n", "", "x_aa_0", ",", "x_ba_0", ",", "x_ab_0", ",", "x_bb_0", ",", "shared_0", "=", "self", ".", "gen", "(", "images_a_xy_0", ",", "images_b_xy_0", ")", "\n", "x_aa_1", ",", "x_ba_1", ",", "x_ab_1", ",", "x_bb_1", ",", "shared_1", "=", "self", ".", "gen", "(", "images_a_xy_1", ",", "images_b_xy_1", ")", "\n", "\n", "\n", "x_ba", "=", "torch", ".", "cat", "(", "(", "x_ba_0", ",", "x_ba_1", ")", ",", "1", ")", "\n", "x_ab", "=", "torch", ".", "cat", "(", "(", "x_ab_0", ",", "x_ab_1", ")", ",", "1", ")", "\n", "\n", "data_a", "=", "torch", ".", "cat", "(", "(", "images_a_xy", ",", "x_ba", ")", ",", "0", ")", "\n", "data_b", "=", "torch", ".", "cat", "(", "(", "images_b_xy", ",", "x_ab", ")", ",", "0", ")", "\n", "res_a", ",", "res_b", "=", "self", ".", "dis", "(", "data_a", ",", "data_b", ")", "\n", "# res_true_a, res_true_b = self.dis(images_a,images_b)", "\n", "# res_fake_a, res_fake_b = self.dis(x_ba, x_ab)", "\n", "for", "it", ",", "(", "out_a", ",", "out_b", ")", "in", "enumerate", "(", "itertools", ".", "izip", "(", "res_a", ",", "res_b", ")", ")", ":", "\n", "      ", "out_true_a", ",", "out_fake_a", "=", "torch", ".", "split", "(", "out_a", ",", "out_a", ".", "size", "(", "0", ")", "//", "2", ",", "0", ")", "\n", "out_true_b", ",", "out_fake_b", "=", "torch", ".", "split", "(", "out_b", ",", "out_b", ".", "size", "(", "0", ")", "//", "2", ",", "0", ")", "\n", "out_true_n", "=", "out_true_a", ".", "size", "(", "0", ")", "\n", "out_fake_n", "=", "out_fake_a", ".", "size", "(", "0", ")", "\n", "all0", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "out_fake_n", ")", ".", "fill_", "(", "0", ")", ".", "cuda", "(", "self", ".", "gpu", ")", ")", "\n", "\n", "all_labels_a", "=", "labels_a", ".", "repeat", "(", "out_true_a", ".", "size", "(", "0", ")", "//", "labels_a", ".", "size", "(", "0", ")", ")", ".", "resize", "(", "out_true_a", ".", "size", "(", "0", ")", "//", "labels_a", ".", "size", "(", "0", ")", ",", "labels_a", ".", "size", "(", "0", ")", ")", ".", "transpose", "(", "1", ",", "0", ")", ".", "resize", "(", "out_true_a", ".", "size", "(", "0", ")", ")", "\n", "all_labels_b", "=", "labels_b", ".", "repeat", "(", "out_true_b", ".", "size", "(", "0", ")", "//", "labels_b", ".", "size", "(", "0", ")", ")", ".", "resize", "(", "out_true_b", ".", "size", "(", "0", ")", "//", "labels_b", ".", "size", "(", "0", ")", ",", "labels_b", ".", "size", "(", "0", ")", ")", ".", "transpose", "(", "1", ",", "0", ")", ".", "resize", "(", "out_true_b", ".", "size", "(", "0", ")", ")", "\n", "\n", "ad_true_loss_a", "=", "nn", ".", "functional", ".", "cross_entropy", "(", "out_true_a", ",", "all_labels_a", ")", "\n", "ad_true_loss_b", "=", "nn", ".", "functional", ".", "cross_entropy", "(", "out_true_b", ",", "all_labels_b", ")", "\n", "ad_fake_loss_a", "=", "nn", ".", "functional", ".", "cross_entropy", "(", "out_fake_a", ",", "all0", ")", "\n", "ad_fake_loss_b", "=", "nn", ".", "functional", ".", "cross_entropy", "(", "out_fake_b", ",", "all0", ")", "\n", "if", "it", "==", "0", ":", "\n", "        ", "ad_loss_a", "=", "ad_true_loss_a", "+", "ad_fake_loss_a", "\n", "ad_loss_b", "=", "ad_true_loss_b", "+", "ad_fake_loss_b", "\n", "", "else", ":", "\n", "        ", "ad_loss_a", "+=", "ad_true_loss_a", "+", "ad_fake_loss_a", "\n", "ad_loss_b", "+=", "ad_true_loss_b", "+", "ad_fake_loss_b", "\n", "", "true_a_acc", "=", "_compute_true_acc", "(", "out_true_a", ")", "\n", "true_b_acc", "=", "_compute_true_acc", "(", "out_true_b", ")", "\n", "fake_a_acc", "=", "_compute_fake_acc", "(", "out_fake_a", ")", "\n", "fake_b_acc", "=", "_compute_fake_acc", "(", "out_fake_b", ")", "\n", "exec", "(", "'self.dis_true_acc_%d = 0.5 * (true_a_acc + true_b_acc)'", "%", "it", ")", "\n", "exec", "(", "'self.dis_fake_acc_%d = 0.5 * (fake_a_acc + fake_b_acc)'", "%", "it", ")", "\n", "", "loss", "=", "hyperparameters", "[", "'gan_w'", "]", "*", "(", "ad_loss_a", "+", "ad_loss_b", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "dis_opt", ".", "step", "(", ")", "\n", "self", ".", "dis_loss", "=", "loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.assemble_outputs": [[148, 159], ["cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.normalize_image", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.normalize_image", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.normalize_image", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.normalize_image", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.normalize_image", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.normalize_image", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.normalize_image", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.normalize_image", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image"], ["", "def", "assemble_outputs", "(", "self", ",", "images_a", ",", "images_b", ",", "network_outputs", ")", ":", "\n", "    ", "images_a", "=", "self", ".", "normalize_image", "(", "images_a", ")", "\n", "images_b", "=", "self", ".", "normalize_image", "(", "images_b", ")", "\n", "x_aa", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "0", "]", ")", "\n", "x_ba", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "1", "]", ")", "\n", "x_ab", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "2", "]", ")", "\n", "x_bb", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "3", "]", ")", "\n", "x_aba", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "4", "]", ")", "\n", "x_bab", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "5", "]", ")", "\n", "return", "torch", ".", "cat", "(", "(", "images_a", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_aa", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_ab", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_aba", "[", "0", ":", "1", ",", ":", ":", "]", ",", "\n", "images_b", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_bb", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_ba", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_bab", "[", "0", ":", "1", ",", ":", ":", "]", ")", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.resume": [[160, 171], ["os.path.dirname", "helpers.get_model_list", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.gen.load_state_dict", "int", "helpers.get_model_list", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.dis.load_state_dict", "print", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers.get_model_list", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers.get_model_list"], ["", "def", "resume", "(", "self", ",", "snapshot_prefix", ")", ":", "\n", "    ", "dirname", "=", "os", ".", "path", ".", "dirname", "(", "snapshot_prefix", ")", "\n", "last_model_name", "=", "get_model_list", "(", "dirname", ",", "\"gen\"", ")", "\n", "if", "last_model_name", "is", "None", ":", "\n", "      ", "return", "0", "\n", "", "self", ".", "gen", ".", "load_state_dict", "(", "torch", ".", "load", "(", "last_model_name", ")", ")", "\n", "iterations", "=", "int", "(", "last_model_name", "[", "-", "12", ":", "-", "4", "]", ")", "\n", "last_model_name", "=", "get_model_list", "(", "dirname", ",", "\"dis\"", ")", "\n", "self", ".", "dis", ".", "load_state_dict", "(", "torch", ".", "load", "(", "last_model_name", ")", ")", "\n", "print", "(", "'Resume from iteration %d'", "%", "iterations", ")", "\n", "return", "iterations", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.save": [[172, 177], ["torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.gen.state_dict", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.dis.state_dict"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save"], ["", "def", "save", "(", "self", ",", "snapshot_prefix", ",", "iterations", ")", ":", "\n", "    ", "gen_filename", "=", "'%s_gen_%08d.pkl'", "%", "(", "snapshot_prefix", ",", "iterations", "+", "1", ")", "\n", "dis_filename", "=", "'%s_dis_%08d.pkl'", "%", "(", "snapshot_prefix", ",", "iterations", "+", "1", ")", "\n", "torch", ".", "save", "(", "self", ".", "gen", ".", "state_dict", "(", ")", ",", "gen_filename", ")", "\n", "torch", ".", "save", "(", "self", ".", "dis", ".", "state_dict", "(", ")", ",", "dis_filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.cuda": [[178, 183], ["cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.dis.cuda", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.gen.cuda", "cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.xy.cuda"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda"], ["", "def", "cuda", "(", "self", ",", "gpu", ")", ":", "\n", "    ", "self", ".", "gpu", "=", "gpu", "\n", "self", ".", "dis", ".", "cuda", "(", "gpu", ")", "\n", "self", ".", "gen", ".", "cuda", "(", "gpu", ")", "\n", "self", ".", "xy", "=", "self", ".", "xy", ".", "cuda", "(", "gpu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action.COCOGANGAMESACTIONTrainer.normalize_image": [[184, 186], ["None"], "methods", ["None"], ["", "def", "normalize_image", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "x", "[", ":", ",", "0", ":", "3", ",", ":", ",", ":", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__": [[17, 19], ["cocogan_trainer_games.COCOGANGAMESTrainer.__init__"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.__init__"], ["  ", "def", "__init__", "(", "self", ",", "hyperparameters", ")", ":", "\n", "    ", "super", "(", "COCOGANGAMESACTIONDISTTrainer", ",", "self", ")", ".", "__init__", "(", "hyperparameters", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.gen_update": [[20, 110], ["cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.gen.zero_grad", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.gen", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.gen", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.gen.forward_a2b", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.gen.forward_b2a", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.gen.forward_a2b", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.gen.forward_b2a", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.dis", "enumerate", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer._compute_kl", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer._compute_kl", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer._compute_kl", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.ll_loss_criterion_a", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.ll_loss_criterion_b", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.ll_loss_criterion_a", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.ll_loss_criterion_b", "total_loss.backward", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.gen_opt.step", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "itertools.izip", "labels_a.repeat().resize().transpose().resize", "labels_b.repeat().resize().transpose().resize", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "out_reg_a.size", "torch.squeeze.repeat().resize().transpose().resize", "torch.squeeze.repeat().resize().transpose().resize", "torch.squeeze.repeat().resize().transpose().resize", "torch.squeeze.repeat().resize().transpose().resize", "torch.functional.l1_loss", "torch.functional.l1_loss", "torch.functional.l1_loss", "torch.functional.l1_loss", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.data.cpu().numpy", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.data.cpu().numpy", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.data.cpu().numpy", "ad_loss_a.data.cpu().numpy", "ad_loss_b.data.cpu().numpy", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.data.cpu().numpy", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.data.cpu().numpy", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.data.cpu().numpy", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.data.cpu().numpy", "total_loss.data.cpu().numpy", "out_cat_a.size", "out_cat_b.size", "out_reg_a.size", "out_reg_b.size", "labels_a.repeat().resize().transpose", "labels_b.repeat().resize().transpose", "torch.squeeze.repeat().resize().transpose", "torch.squeeze.repeat().resize().transpose", "torch.squeeze.repeat().resize().transpose", "torch.squeeze.repeat().resize().transpose", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.data.cpu", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.data.cpu", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.data.cpu", "ad_loss_a.data.cpu", "ad_loss_b.data.cpu", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.data.cpu", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.data.cpu", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.data.cpu", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.data.cpu", "total_loss.data.cpu", "labels_a.repeat().resize", "labels_b.repeat().resize", "torch.squeeze.repeat().resize", "torch.squeeze.repeat().resize", "torch.squeeze.repeat().resize", "torch.squeeze.repeat().resize", "labels_a.size", "labels_b.size", "torch.squeeze.size", "torch.squeeze.size", "torch.squeeze.size", "torch.squeeze.size", "labels_a.repeat", "out_cat_a.size", "labels_a.size", "labels_b.repeat", "out_cat_b.size", "labels_b.size", "torch.squeeze.repeat", "torch.squeeze.repeat", "out_reg_a.size", "torch.squeeze.size", "torch.squeeze.size", "torch.squeeze.repeat", "torch.squeeze.repeat", "out_reg_b.size", "torch.squeeze.size", "torch.squeeze.size", "out_cat_a.size", "labels_a.size", "out_cat_b.size", "labels_b.size", "out_reg_a.size", "torch.squeeze.size", "torch.squeeze.size", "out_reg_b.size", "torch.squeeze.size", "torch.squeeze.size"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOResGen2.forward_a2b", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOResGen2.forward_b2a", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOResGen2.forward_a2b", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_nets.COCOResGen2.forward_b2a", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer._compute_kl", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer._compute_kl", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games.COCOGANGAMESTrainer._compute_kl", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.step"], ["", "def", "gen_update", "(", "self", ",", "images_a", ",", "images_b", ",", "labels_a", ",", "labels_b", ",", "hyperparameters", ")", ":", "\n", "    ", "self", ".", "gen", ".", "zero_grad", "(", ")", "\n", "if", "self", ".", "use_xy", ":", "\n", "        ", "images_a_xy_0", "=", "torch", ".", "cat", "(", "(", "images_a", "[", "0", "]", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "images_b_xy_0", "=", "torch", ".", "cat", "(", "(", "images_b", "[", "0", "]", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "images_a_xy_1", "=", "torch", ".", "cat", "(", "(", "images_a", "[", "1", "]", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "images_b_xy_1", "=", "torch", ".", "cat", "(", "(", "images_b", "[", "1", "]", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "", "else", ":", "\n", "        ", "images_a_xy_0", "=", "images_a", "[", "0", "]", "\n", "images_b_xy_0", "=", "images_b", "[", "0", "]", "\n", "images_a_xy_1", "=", "images_a", "[", "1", "]", "\n", "images_b_xy_1", "=", "images_b", "[", "1", "]", "\n", "", "x_aa_0", ",", "x_ba_0", ",", "x_ab_0", ",", "x_bb_0", ",", "shared_0", "=", "self", ".", "gen", "(", "images_a_xy_0", ",", "images_b_xy_0", ")", "\n", "x_aa_1", ",", "x_ba_1", ",", "x_ab_1", ",", "x_bb_1", ",", "shared_1", "=", "self", ".", "gen", "(", "images_a_xy_1", ",", "images_b_xy_1", ")", "\n", "\n", "\n", "labels_a", ",", "distances_a", "=", "labels_a", "\n", "labels_b", ",", "distances_b", "=", "labels_b", "\n", "distances_a", "=", "torch", ".", "squeeze", "(", "distances_a", ")", "\n", "distances_b", "=", "torch", ".", "squeeze", "(", "distances_b", ")", "\n", "\n", "if", "self", ".", "use_xy", ":", "\n", "        ", "x_ba_xy_0", "=", "torch", ".", "cat", "(", "(", "x_ba_0", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "x_ab_xy_0", "=", "torch", ".", "cat", "(", "(", "x_ab_0", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "x_ba_xy_1", "=", "torch", ".", "cat", "(", "(", "x_ba_1", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "x_ab_xy_1", "=", "torch", ".", "cat", "(", "(", "x_ab_1", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "", "else", ":", "\n", "        ", "x_ba_xy_0", "=", "x_ba_0", "\n", "x_ab_xy_0", "=", "x_ab_0", "\n", "x_ba_xy_1", "=", "x_ba_1", "\n", "x_ab_xy_1", "=", "x_ab_1", "\n", "", "x_bab_0", ",", "shared_bab_0", "=", "self", ".", "gen", ".", "forward_a2b", "(", "x_ba_xy_0", ")", "\n", "x_aba_0", ",", "shared_aba_0", "=", "self", ".", "gen", ".", "forward_b2a", "(", "x_ab_xy_0", ")", "\n", "x_bab_1", ",", "shared_bab_1", "=", "self", ".", "gen", ".", "forward_a2b", "(", "x_ba_xy_1", ")", "\n", "x_aba_1", ",", "shared_aba_1", "=", "self", ".", "gen", ".", "forward_b2a", "(", "x_ab_xy_1", ")", "\n", "\n", "x_ba", "=", "torch", ".", "cat", "(", "(", "x_ba_0", ",", "x_ba_1", ")", ",", "1", ")", "\n", "x_ab", "=", "torch", ".", "cat", "(", "(", "x_ab_0", ",", "x_ab_1", ")", ",", "1", ")", "\n", "\n", "res_cat_a", ",", "res_reg_a", ",", "res_cat_b", ",", "res_reg_b", "=", "self", ".", "dis", "(", "x_ba", ",", "x_ab", ")", "\n", "# res_true_a, res_true_b = self.dis(images_a,images_b)", "\n", "# res_fake_a, res_fake_b = self.dis(x_ba, x_ab)", "\n", "for", "it", ",", "(", "out_cat_a", ",", "out_reg_a", ",", "out_cat_b", ",", "out_reg_b", ")", "in", "enumerate", "(", "itertools", ".", "izip", "(", "res_cat_a", ",", "res_reg_a", ",", "res_cat_b", ",", "res_reg_b", ")", ")", ":", "\n", "      ", "all_labels_a", "=", "labels_a", ".", "repeat", "(", "out_cat_a", ".", "size", "(", "0", ")", "//", "labels_a", ".", "size", "(", "0", ")", ")", ".", "resize", "(", "out_cat_a", ".", "size", "(", "0", ")", "//", "labels_a", ".", "size", "(", "0", ")", ",", "labels_a", ".", "size", "(", "0", ")", ")", ".", "transpose", "(", "1", ",", "0", ")", ".", "resize", "(", "out_cat_a", ".", "size", "(", "0", ")", ")", "\n", "all_labels_b", "=", "labels_b", ".", "repeat", "(", "out_cat_b", ".", "size", "(", "0", ")", "//", "labels_b", ".", "size", "(", "0", ")", ")", ".", "resize", "(", "out_cat_b", ".", "size", "(", "0", ")", "//", "labels_b", ".", "size", "(", "0", ")", ",", "labels_b", ".", "size", "(", "0", ")", ")", ".", "transpose", "(", "1", ",", "0", ")", ".", "resize", "(", "out_cat_b", ".", "size", "(", "0", ")", ")", "\n", "\n", "\n", "ad_cat_a", "=", "nn", ".", "functional", ".", "cross_entropy", "(", "out_cat_a", ",", "all_labels_b", ")", "\n", "ad_cat_b", "=", "nn", ".", "functional", ".", "cross_entropy", "(", "out_cat_b", ",", "all_labels_a", ")", "\n", "\n", "out_reg_n", "=", "out_reg_a", ".", "size", "(", "0", ")", "\n", "\n", "all_distances_a", "=", "distances_a", ".", "repeat", "(", "out_reg_a", ".", "size", "(", "0", ")", "//", "distances_a", ".", "size", "(", "0", ")", ")", ".", "resize", "(", "out_reg_a", ".", "size", "(", "0", ")", "//", "distances_a", ".", "size", "(", "0", ")", ",", "distances_a", ".", "size", "(", "0", ")", ")", ".", "transpose", "(", "1", ",", "0", ")", ".", "resize", "(", "out_reg_a", ".", "size", "(", "0", ")", ")", "\n", "all_distances_b", "=", "distances_b", ".", "repeat", "(", "out_reg_b", ".", "size", "(", "0", ")", "//", "distances_b", ".", "size", "(", "0", ")", ")", ".", "resize", "(", "out_reg_b", ".", "size", "(", "0", ")", "//", "distances_b", ".", "size", "(", "0", ")", ",", "distances_b", ".", "size", "(", "0", ")", ")", ".", "transpose", "(", "1", ",", "0", ")", ".", "resize", "(", "out_reg_b", ".", "size", "(", "0", ")", ")", "\n", "\n", "ad_reg_a", "=", "nn", ".", "functional", ".", "l1_loss", "(", "out_reg_a", ",", "all_distances_a", ")", "\n", "ad_reg_b", "=", "nn", ".", "functional", ".", "l1_loss", "(", "out_reg_b", ",", "all_distances_b", ")", "\n", "\n", "if", "it", "==", "0", ":", "\n", "        ", "ad_loss_a", "=", "ad_cat_a", "+", "ad_reg_a", "\n", "ad_loss_b", "=", "ad_cat_b", "+", "ad_reg_b", "\n", "", "else", ":", "\n", "        ", "ad_loss_a", "+=", "ad_cat_a", "+", "ad_reg_a", "\n", "ad_loss_b", "+=", "ad_cat_b", "+", "ad_reg_b", "\n", "\n", "", "", "enc_loss", "=", "self", ".", "_compute_kl", "(", "shared_0", ")", "\n", "enc_bab_loss", "=", "self", ".", "_compute_kl", "(", "shared_bab_0", ")", "\n", "enc_aba_loss", "=", "self", ".", "_compute_kl", "(", "shared_aba_0", ")", "\n", "ll_loss_a", "=", "self", ".", "ll_loss_criterion_a", "(", "x_aa_0", ",", "images_a", "[", "0", "]", ")", "\n", "ll_loss_b", "=", "self", ".", "ll_loss_criterion_b", "(", "x_bb_0", ",", "images_b", "[", "0", "]", ")", "\n", "ll_loss_aba", "=", "self", ".", "ll_loss_criterion_a", "(", "x_aba_0", ",", "images_a", "[", "0", "]", ")", "\n", "ll_loss_bab", "=", "self", ".", "ll_loss_criterion_b", "(", "x_bab_0", ",", "images_b", "[", "0", "]", ")", "\n", "total_loss", "=", "hyperparameters", "[", "'gan_w'", "]", "*", "(", "ad_loss_a", "+", "ad_loss_b", ")", "+", "hyperparameters", "[", "'ll_direct_link_w'", "]", "*", "(", "ll_loss_a", "+", "ll_loss_b", ")", "+", "hyperparameters", "[", "'ll_cycle_link_w'", "]", "*", "(", "ll_loss_aba", "+", "ll_loss_bab", ")", "+", "hyperparameters", "[", "'kl_direct_link_w'", "]", "*", "(", "enc_loss", "+", "enc_loss", ")", "+", "hyperparameters", "[", "'kl_cycle_link_w'", "]", "*", "(", "enc_bab_loss", "+", "enc_aba_loss", ")", "\n", "total_loss", ".", "backward", "(", ")", "\n", "self", ".", "gen_opt", ".", "step", "(", ")", "\n", "self", ".", "gen_enc_loss", "=", "enc_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_enc_bab_loss", "=", "enc_bab_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_enc_aba_loss", "=", "enc_aba_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ad_loss_a", "=", "ad_loss_a", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ad_loss_b", "=", "ad_loss_b", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ll_loss_a", "=", "ll_loss_a", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ll_loss_b", "=", "ll_loss_b", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ll_loss_aba", "=", "ll_loss_aba", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_ll_loss_bab", "=", "ll_loss_bab", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "self", ".", "gen_total_loss", "=", "total_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "return", "(", "x_aa_0", ",", "x_ba_0", ",", "x_ab_0", ",", "x_bb_0", ",", "x_aba_0", ",", "x_bab_0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.dis_update": [[111, 186], ["cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.dis.zero_grad", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.gen", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.gen", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.dis", "enumerate", "loss.backward", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.dis_opt.step", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "itertools.izip", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "out_cat_true_a.size", "out_cat_fake_a.size", "Variable", "labels_a.repeat().resize().transpose().resize", "labels_b.repeat().resize().transpose().resize", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "out_reg_true_a.size", "out_reg_fake_a.size", "torch.squeeze.repeat().resize().transpose().resize", "torch.squeeze.repeat().resize().transpose().resize", "torch.squeeze.repeat().resize().transpose().resize", "torch.squeeze.repeat().resize().transpose().resize", "torch.functional.l1_loss", "torch.functional.l1_loss", "torch.functional.l1_loss", "torch.functional.l1_loss", "helpers._compute_true_acc", "helpers._compute_true_acc", "helpers._compute_fake_acc", "helpers._compute_fake_acc", "exec", "exec", "loss.data.cpu().numpy", "torch.LongTensor().fill_().cuda", "torch.LongTensor().fill_().cuda", "torch.LongTensor().fill_().cuda", "torch.LongTensor().fill_().cuda", "out_cat_true_a.size", "out_cat_true_b.size", "out_reg_true_a.size", "out_reg_true_b.size", "torch.functional.l1_loss", "torch.functional.l1_loss", "torch.functional.l1_loss", "torch.functional.l1_loss", "out_cat_a.size", "out_cat_b.size", "labels_a.repeat().resize().transpose", "labels_b.repeat().resize().transpose", "out_reg_a.size", "out_reg_b.size", "torch.squeeze.repeat().resize().transpose", "torch.squeeze.repeat().resize().transpose", "torch.squeeze.repeat().resize().transpose", "torch.squeeze.repeat().resize().transpose", "loss.data.cpu", "torch.LongTensor().fill_", "torch.LongTensor().fill_", "torch.LongTensor().fill_", "torch.LongTensor().fill_", "labels_a.repeat().resize", "labels_b.repeat().resize", "torch.squeeze.repeat().resize", "torch.squeeze.repeat().resize", "torch.squeeze.repeat().resize", "torch.squeeze.repeat().resize", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "labels_a.size", "labels_b.size", "torch.squeeze.size", "torch.squeeze.size", "torch.squeeze.size", "torch.squeeze.size", "labels_a.repeat", "out_cat_true_a.size", "labels_a.size", "labels_b.repeat", "out_cat_true_b.size", "labels_b.size", "torch.squeeze.repeat", "torch.squeeze.repeat", "out_reg_true_a.size", "torch.squeeze.size", "torch.squeeze.size", "torch.squeeze.repeat", "torch.squeeze.repeat", "out_reg_true_b.size", "torch.squeeze.size", "torch.squeeze.size", "out_cat_true_a.size", "labels_a.size", "out_cat_true_b.size", "labels_b.size", "out_reg_true_a.size", "torch.squeeze.size", "torch.squeeze.size", "out_reg_true_b.size", "torch.squeeze.size", "torch.squeeze.size"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.None.environment.MaxAndSkipEnv.step", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers._compute_true_acc", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers._compute_true_acc", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers._compute_fake_acc", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers._compute_fake_acc", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda"], ["", "def", "dis_update", "(", "self", ",", "images_a", ",", "images_b", ",", "labels_a", ",", "labels_b", ",", "hyperparameters", ")", ":", "\n", "    ", "self", ".", "dis", ".", "zero_grad", "(", ")", "\n", "if", "self", ".", "use_xy", ":", "\n", "        ", "images_a_xy_0", "=", "torch", ".", "cat", "(", "(", "images_a", "[", "0", "]", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "images_b_xy_0", "=", "torch", ".", "cat", "(", "(", "images_b", "[", "0", "]", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "images_a_xy_1", "=", "torch", ".", "cat", "(", "(", "images_a", "[", "1", "]", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "images_b_xy_1", "=", "torch", ".", "cat", "(", "(", "images_b", "[", "1", "]", ",", "self", ".", "xy", ")", ",", "1", ")", "\n", "images_a_xy", "=", "torch", ".", "cat", "(", "images_a", ",", "1", ")", "\n", "images_b_xy", "=", "torch", ".", "cat", "(", "images_b", ",", "1", ")", "\n", "", "else", ":", "\n", "        ", "images_a_xy_0", "=", "images_a", "[", "0", "]", "\n", "images_b_xy_0", "=", "images_b", "[", "0", "]", "\n", "images_a_xy_1", "=", "images_a", "[", "1", "]", "\n", "images_b_xy_1", "=", "images_b", "[", "1", "]", "\n", "", "x_aa_0", ",", "x_ba_0", ",", "x_ab_0", ",", "x_bb_0", ",", "shared_0", "=", "self", ".", "gen", "(", "images_a_xy_0", ",", "images_b_xy_0", ")", "\n", "x_aa_1", ",", "x_ba_1", ",", "x_ab_1", ",", "x_bb_1", ",", "shared_1", "=", "self", ".", "gen", "(", "images_a_xy_1", ",", "images_b_xy_1", ")", "\n", "\n", "labels_a", ",", "distances_a", "=", "labels_a", "\n", "labels_b", ",", "distances_b", "=", "labels_b", "\n", "distances_a", "=", "torch", ".", "squeeze", "(", "distances_a", ")", "\n", "distances_b", "=", "torch", ".", "squeeze", "(", "distances_b", ")", "\n", "\n", "x_ba", "=", "torch", ".", "cat", "(", "(", "x_ba_0", ",", "x_ba_1", ")", ",", "1", ")", "\n", "x_ab", "=", "torch", ".", "cat", "(", "(", "x_ab_0", ",", "x_ab_1", ")", ",", "1", ")", "\n", "\n", "data_a", "=", "torch", ".", "cat", "(", "(", "images_a_xy", ",", "x_ba", ")", ",", "0", ")", "\n", "data_b", "=", "torch", ".", "cat", "(", "(", "images_b_xy", ",", "x_ab", ")", ",", "0", ")", "\n", "res_cat_a", ",", "res_reg_a", ",", "res_cat_b", ",", "res_reg_b", "=", "self", ".", "dis", "(", "data_a", ",", "data_b", ")", "\n", "# res_true_a, res_true_b = self.dis(images_a,images_b)", "\n", "# res_fake_a, res_fake_b = self.dis(x_ba, x_ab)", "\n", "for", "it", ",", "(", "out_cat_a", ",", "out_reg_a", ",", "out_cat_b", ",", "out_reg_b", ")", "in", "enumerate", "(", "itertools", ".", "izip", "(", "res_cat_a", ",", "res_reg_a", ",", "res_cat_b", ",", "res_reg_b", ")", ")", ":", "\n", "      ", "out_cat_true_a", ",", "out_cat_fake_a", "=", "torch", ".", "split", "(", "out_cat_a", ",", "out_cat_a", ".", "size", "(", "0", ")", "//", "2", ",", "0", ")", "\n", "out_cat_true_b", ",", "out_cat_fake_b", "=", "torch", ".", "split", "(", "out_cat_b", ",", "out_cat_b", ".", "size", "(", "0", ")", "//", "2", ",", "0", ")", "\n", "out_cat_true_n", "=", "out_cat_true_a", ".", "size", "(", "0", ")", "\n", "out_cat_fake_n", "=", "out_cat_fake_a", ".", "size", "(", "0", ")", "\n", "all0", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "out_cat_fake_n", ")", ".", "fill_", "(", "0", ")", ".", "cuda", "(", "self", ".", "gpu", ")", ")", "\n", "\n", "all_labels_a", "=", "labels_a", ".", "repeat", "(", "out_cat_true_a", ".", "size", "(", "0", ")", "//", "labels_a", ".", "size", "(", "0", ")", ")", ".", "resize", "(", "out_cat_true_a", ".", "size", "(", "0", ")", "//", "labels_a", ".", "size", "(", "0", ")", ",", "labels_a", ".", "size", "(", "0", ")", ")", ".", "transpose", "(", "1", ",", "0", ")", ".", "resize", "(", "out_cat_true_a", ".", "size", "(", "0", ")", ")", "\n", "all_labels_b", "=", "labels_b", ".", "repeat", "(", "out_cat_true_b", ".", "size", "(", "0", ")", "//", "labels_b", ".", "size", "(", "0", ")", ")", ".", "resize", "(", "out_cat_true_b", ".", "size", "(", "0", ")", "//", "labels_b", ".", "size", "(", "0", ")", ",", "labels_b", ".", "size", "(", "0", ")", ")", ".", "transpose", "(", "1", ",", "0", ")", ".", "resize", "(", "out_cat_true_b", ".", "size", "(", "0", ")", ")", "\n", "\n", "ad_true_loss_a", "=", "nn", ".", "functional", ".", "cross_entropy", "(", "out_cat_true_a", ",", "all_labels_a", ")", "\n", "ad_true_loss_b", "=", "nn", ".", "functional", ".", "cross_entropy", "(", "out_cat_true_b", ",", "all_labels_b", ")", "\n", "ad_fake_loss_a", "=", "nn", ".", "functional", ".", "cross_entropy", "(", "out_cat_fake_a", ",", "all0", ")", "\n", "ad_fake_loss_b", "=", "nn", ".", "functional", ".", "cross_entropy", "(", "out_cat_fake_b", ",", "all0", ")", "\n", "\n", "out_reg_true_a", ",", "out_reg_fake_a", "=", "torch", ".", "split", "(", "out_reg_a", ",", "out_reg_a", ".", "size", "(", "0", ")", "//", "2", ",", "0", ")", "\n", "out_reg_true_b", ",", "out_reg_fake_b", "=", "torch", ".", "split", "(", "out_reg_b", ",", "out_reg_b", ".", "size", "(", "0", ")", "//", "2", ",", "0", ")", "\n", "out_reg_true_n", "=", "out_reg_true_a", ".", "size", "(", "0", ")", "\n", "out_reg_fake_n", "=", "out_reg_fake_a", ".", "size", "(", "0", ")", "\n", "\n", "all_distances_a", "=", "distances_a", ".", "repeat", "(", "out_reg_true_a", ".", "size", "(", "0", ")", "//", "distances_a", ".", "size", "(", "0", ")", ")", ".", "resize", "(", "out_reg_true_a", ".", "size", "(", "0", ")", "//", "distances_a", ".", "size", "(", "0", ")", ",", "distances_a", ".", "size", "(", "0", ")", ")", ".", "transpose", "(", "1", ",", "0", ")", ".", "resize", "(", "out_reg_true_a", ".", "size", "(", "0", ")", ")", "\n", "all_distances_b", "=", "distances_b", ".", "repeat", "(", "out_reg_true_b", ".", "size", "(", "0", ")", "//", "distances_b", ".", "size", "(", "0", ")", ")", ".", "resize", "(", "out_reg_true_b", ".", "size", "(", "0", ")", "//", "distances_b", ".", "size", "(", "0", ")", ",", "distances_b", ".", "size", "(", "0", ")", ")", ".", "transpose", "(", "1", ",", "0", ")", ".", "resize", "(", "out_reg_true_b", ".", "size", "(", "0", ")", ")", "\n", "\n", "ad_true_loss_a", "+=", "nn", ".", "functional", ".", "l1_loss", "(", "out_reg_true_a", ",", "all_distances_a", ")", "\n", "ad_true_loss_b", "+=", "nn", ".", "functional", ".", "l1_loss", "(", "out_reg_true_b", ",", "all_distances_b", ")", "\n", "ad_fake_loss_a", "+=", "-", "nn", ".", "functional", ".", "l1_loss", "(", "out_reg_fake_a", ",", "all_distances_b", ")", "\n", "ad_fake_loss_b", "+=", "-", "nn", ".", "functional", ".", "l1_loss", "(", "out_reg_fake_b", ",", "all_distances_a", ")", "\n", "\n", "if", "it", "==", "0", ":", "\n", "        ", "ad_loss_a", "=", "ad_true_loss_a", "+", "ad_fake_loss_a", "\n", "ad_loss_b", "=", "ad_true_loss_b", "+", "ad_fake_loss_b", "\n", "", "else", ":", "\n", "        ", "ad_loss_a", "+=", "ad_true_loss_a", "+", "ad_fake_loss_a", "\n", "ad_loss_b", "+=", "ad_true_loss_b", "+", "ad_fake_loss_b", "\n", "", "true_a_acc", "=", "_compute_true_acc", "(", "out_cat_true_a", ")", "\n", "true_b_acc", "=", "_compute_true_acc", "(", "out_cat_true_b", ")", "\n", "fake_a_acc", "=", "_compute_fake_acc", "(", "out_cat_fake_a", ")", "\n", "fake_b_acc", "=", "_compute_fake_acc", "(", "out_cat_fake_b", ")", "\n", "exec", "(", "'self.dis_true_acc_%d = 0.5 * (true_a_acc + true_b_acc)'", "%", "it", ")", "\n", "exec", "(", "'self.dis_fake_acc_%d = 0.5 * (fake_a_acc + fake_b_acc)'", "%", "it", ")", "\n", "", "loss", "=", "hyperparameters", "[", "'gan_w'", "]", "*", "(", "ad_loss_a", "+", "ad_loss_b", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "dis_opt", ".", "step", "(", ")", "\n", "self", ".", "dis_loss", "=", "loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.assemble_outputs": [[187, 198], ["cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image"], ["", "def", "assemble_outputs", "(", "self", ",", "images_a", ",", "images_b", ",", "network_outputs", ")", ":", "\n", "    ", "images_a", "=", "self", ".", "normalize_image", "(", "images_a", ")", "\n", "images_b", "=", "self", ".", "normalize_image", "(", "images_b", ")", "\n", "x_aa", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "0", "]", ")", "\n", "x_ba", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "1", "]", ")", "\n", "x_ab", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "2", "]", ")", "\n", "x_bb", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "3", "]", ")", "\n", "x_aba", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "4", "]", ")", "\n", "x_bab", "=", "self", ".", "normalize_image", "(", "network_outputs", "[", "5", "]", ")", "\n", "return", "torch", ".", "cat", "(", "(", "images_a", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_aa", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_ab", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_aba", "[", "0", ":", "1", ",", ":", ":", "]", ",", "\n", "images_b", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_bb", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_ba", "[", "0", ":", "1", ",", ":", ":", "]", ",", "x_bab", "[", "0", ":", "1", ",", ":", ":", "]", ")", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.resume": [[199, 210], ["os.path.dirname", "helpers.get_model_list", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.gen.load_state_dict", "int", "helpers.get_model_list", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.dis.load_state_dict", "print", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers.get_model_list", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.helpers.get_model_list"], ["", "def", "resume", "(", "self", ",", "snapshot_prefix", ")", ":", "\n", "    ", "dirname", "=", "os", ".", "path", ".", "dirname", "(", "snapshot_prefix", ")", "\n", "last_model_name", "=", "get_model_list", "(", "dirname", ",", "\"gen\"", ")", "\n", "if", "last_model_name", "is", "None", ":", "\n", "      ", "return", "0", "\n", "", "self", ".", "gen", ".", "load_state_dict", "(", "torch", ".", "load", "(", "last_model_name", ")", ")", "\n", "iterations", "=", "int", "(", "last_model_name", "[", "-", "12", ":", "-", "4", "]", ")", "\n", "last_model_name", "=", "get_model_list", "(", "dirname", ",", "\"dis\"", ")", "\n", "self", ".", "dis", ".", "load_state_dict", "(", "torch", ".", "load", "(", "last_model_name", ")", ")", "\n", "print", "(", "'Resume from iteration %d'", "%", "iterations", ")", "\n", "return", "iterations", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save": [[211, 216], ["torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.gen.state_dict", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.dis.state_dict"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.save"], ["", "def", "save", "(", "self", ",", "snapshot_prefix", ",", "iterations", ")", ":", "\n", "    ", "gen_filename", "=", "'%s_gen_%08d.pkl'", "%", "(", "snapshot_prefix", ",", "iterations", "+", "1", ")", "\n", "dis_filename", "=", "'%s_dis_%08d.pkl'", "%", "(", "snapshot_prefix", ",", "iterations", "+", "1", ")", "\n", "torch", ".", "save", "(", "self", ".", "gen", ".", "state_dict", "(", ")", ",", "gen_filename", ")", "\n", "torch", ".", "save", "(", "self", ".", "dis", ".", "state_dict", "(", ")", ",", "dis_filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda": [[217, 222], ["cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.dis.cuda", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.gen.cuda", "cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.xy.cuda"], "methods", ["home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda", "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.cuda"], ["", "def", "cuda", "(", "self", ",", "gpu", ")", ":", "\n", "    ", "self", ".", "gpu", "=", "gpu", "\n", "self", ".", "dis", ".", "cuda", "(", "gpu", ")", "\n", "self", ".", "gen", ".", "cuda", "(", "gpu", ")", "\n", "self", ".", "xy", "=", "self", ".", "xy", ".", "cuda", "(", "gpu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sowmya-mp_rl_a3c_pytorch.trainers.cocogan_trainer_games_action_distance.COCOGANGAMESACTIONDISTTrainer.normalize_image": [[223, 225], ["None"], "methods", ["None"], ["", "def", "normalize_image", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "x", "[", ":", ",", "0", ":", "3", ",", ":", ",", ":", "]", "\n", "", "", ""]]}