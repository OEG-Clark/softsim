{"home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_gpnd.compute_jacobian": [[18, 30], ["torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "range", "torch.transpose", "torch.transpose", "z.size", "torch.autograd.gradcheck.zero_gradients", "torch.zeros.zero_", "z.backward", "x.size", "z.size"], "function", ["None"], ["def", "compute_jacobian", "(", "x", ",", "z", ",", "device", ")", ":", "\n", "    ", "assert", "x", ".", "requires_grad", "\n", "num_classes", "=", "z", ".", "size", "(", ")", "[", "1", "]", "\n", "jacobian", "=", "torch", ".", "zeros", "(", "num_classes", ",", "*", "x", ".", "size", "(", ")", ",", "device", "=", "device", ")", "\n", "grad_output", "=", "torch", ".", "zeros", "(", "*", "z", ".", "size", "(", ")", ",", "device", "=", "device", ")", "\n", "for", "i", "in", "range", "(", "num_classes", ")", ":", "\n", "        ", "zero_gradients", "(", "x", ")", "\n", "grad_output", ".", "zero_", "(", ")", "\n", "grad_output", "[", ":", ",", "i", "]", "=", "1", "\n", "z", ".", "backward", "(", "grad_output", ",", "retain_graph", "=", "True", ")", "\n", "jacobian", "[", "i", "]", "=", "x", ".", "grad", ".", "data", "\n", "", "return", "torch", ".", "transpose", "(", "jacobian", ",", "dim0", "=", "0", ",", "dim1", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_gpnd.train": [[32, 117], ["encoder.train", "generator.train", "discriminator.train", "discriminator_z.train", "scheduler_G.step", "scheduler_D.step", "scheduler_E.step", "scheduler_GE.step", "scheduler_ZD.step", "enumerate", "print", "logger.write", "inputs.to.to", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "discriminator.zero_grad", "discriminator().squeeze", "torch.binary_cross_entropy", "torch.autograd.Variable", "generator().detach", "discriminator().squeeze", "torch.binary_cross_entropy", "D_train_loss.backward", "optimizer_D.step", "D_train_loss.item", "generator.zero_grad", "torch.randn().to", "torch.randn().to", "generator", "discriminator().squeeze", "torch.binary_cross_entropy", "F.binary_cross_entropy.backward", "optimizer_G.step", "F.binary_cross_entropy.item", "discriminator_z.zero_grad", "torch.autograd.Variable", "discriminator_z().squeeze", "torch.binary_cross_entropy", "encoder().squeeze().detach", "discriminator_z().squeeze", "torch.binary_cross_entropy", "train_loss_zd.backward", "optimizer_ZD.step", "train_loss_zd.item", "encoder.zero_grad", "generator.zero_grad", "encoder", "generator", "discriminator_z().squeeze", "torch.binary_cross_entropy", "optimizer_GE.step", "F.binary_cross_entropy.item", "E_loss.item", "print", "inputs.to.size", "inputs.to.size", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.binary_cross_entropy", "discriminator", "generator", "discriminator", "torch.randn", "torch.randn", "discriminator", "discriminator_z", "encoder().squeeze", "discriminator_z", "discriminator_z", "len", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "encoder.squeeze", "len", "inputs.to.size", "encoder", "inputs.to.size", "inputs.to.size"], "function", ["home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_vae.train", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_vae.train", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_vae.train", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_vae.train"], ["", "def", "train", "(", "epoch", ",", "encoder", ",", "generator", ",", "discriminator", ",", "discriminator_z", ",", "trainloader", ",", "optimizer_G", ",", "optimizer_D", ",", "optimizer_E", ",", "optimizer_GE", ",", "optimizer_ZD", ",", "schedulers", ",", "logger", ",", "device", ")", ":", "\n", "    ", "train_G_loss", "=", "0.", "\n", "train_D_loss", "=", "0.", "\n", "train_E_loss", "=", "0.", "\n", "train_GE_loss", "=", "0.", "\n", "train_ZD_loss", "=", "0.", "\n", "\n", "encoder", ".", "train", "(", ")", "# train mode", "\n", "generator", ".", "train", "(", ")", "# train mode", "\n", "discriminator", ".", "train", "(", ")", "# train mode", "\n", "discriminator_z", ".", "train", "(", ")", "# train mode", "\n", "\n", "scheduler_G", ",", "scheduler_D", ",", "scheduler_E", ",", "scheduler_GE", ",", "scheduler_ZD", "=", "schedulers", "\n", "scheduler_G", ".", "step", "(", ")", "\n", "scheduler_D", ".", "step", "(", ")", "\n", "scheduler_E", ".", "step", "(", ")", "\n", "scheduler_GE", ".", "step", "(", ")", "\n", "scheduler_ZD", ".", "step", "(", ")", "\n", "\n", "for", "batch_idx", ",", "(", "inputs", ",", "_", ")", "in", "enumerate", "(", "trainloader", ")", ":", "\n", "        ", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "valid", "=", "torch", ".", "ones", "(", "inputs", ".", "size", "(", "0", ")", ",", "device", "=", "device", ")", "\n", "fake", "=", "torch", ".", "zeros", "(", "inputs", ".", "size", "(", "0", ")", ",", "device", "=", "device", ")", "\n", "\n", "################################################", "\n", "\n", "discriminator", ".", "zero_grad", "(", ")", "\n", "D_result", "=", "discriminator", "(", "inputs", ")", ".", "squeeze", "(", ")", "\n", "D_real_loss", "=", "F", ".", "binary_cross_entropy", "(", "D_result", ",", "valid", ")", "\n", "\n", "z", "=", "Variable", "(", "torch", ".", "randn", "(", "(", "inputs", ".", "size", "(", "0", ")", ",", "encoder", ".", "rep_dim", ")", ")", ".", "to", "(", "device", ")", ")", "\n", "x_fake", "=", "generator", "(", "z", ")", ".", "detach", "(", ")", "\n", "D_result", "=", "discriminator", "(", "x_fake", ")", ".", "squeeze", "(", ")", "\n", "D_fake_loss", "=", "F", ".", "binary_cross_entropy", "(", "D_result", ",", "fake", ")", "\n", "D_train_loss", "=", "D_real_loss", "+", "D_fake_loss", "\n", "D_train_loss", ".", "backward", "(", ")", "\n", "optimizer_D", ".", "step", "(", ")", "\n", "train_D_loss", "+=", "D_train_loss", ".", "item", "(", ")", "\n", "\n", "################################################", "\n", "\n", "generator", ".", "zero_grad", "(", ")", "\n", "z", "=", "torch", ".", "randn", "(", "(", "inputs", ".", "size", "(", "0", ")", ",", "encoder", ".", "rep_dim", ")", ")", ".", "to", "(", "device", ")", "\n", "x_fake", "=", "generator", "(", "z", ")", "\n", "D_result", "=", "discriminator", "(", "x_fake", ")", ".", "squeeze", "(", ")", "\n", "G_train_loss", "=", "F", ".", "binary_cross_entropy", "(", "D_result", ",", "valid", ")", "\n", "G_train_loss", ".", "backward", "(", ")", "\n", "optimizer_G", ".", "step", "(", ")", "\n", "train_G_loss", "+=", "G_train_loss", ".", "item", "(", ")", "\n", "\n", "################################################", "\n", "discriminator_z", ".", "zero_grad", "(", ")", "\n", "z", "=", "Variable", "(", "torch", ".", "randn", "(", "(", "inputs", ".", "size", "(", "0", ")", ",", "encoder", ".", "rep_dim", ")", ")", ".", "to", "(", "device", ")", ")", "\n", "\n", "result_zd", "=", "discriminator_z", "(", "z", ")", ".", "squeeze", "(", ")", "\n", "real_loss_zd", "=", "F", ".", "binary_cross_entropy", "(", "result_zd", ",", "valid", ")", "\n", "z", "=", "encoder", "(", "inputs", ")", ".", "squeeze", "(", ")", ".", "detach", "(", ")", "\n", "result_zd", "=", "discriminator_z", "(", "z", ")", ".", "squeeze", "(", ")", "\n", "fake_loss_zd", "=", "F", ".", "binary_cross_entropy", "(", "result_zd", ",", "fake", ")", "\n", "train_loss_zd", "=", "real_loss_zd", "+", "fake_loss_zd", "\n", "train_loss_zd", ".", "backward", "(", ")", "\n", "optimizer_ZD", ".", "step", "(", ")", "\n", "train_ZD_loss", "+=", "train_loss_zd", ".", "item", "(", ")", "\n", "\n", "################################################", "\n", "\n", "encoder", ".", "zero_grad", "(", ")", "\n", "generator", ".", "zero_grad", "(", ")", "\n", "\n", "z", "=", "encoder", "(", "inputs", ")", "\n", "x_d", "=", "generator", "(", "z", ")", "\n", "\n", "result_zd", "=", "discriminator_z", "(", "z", ".", "squeeze", "(", ")", ")", ".", "squeeze", "(", ")", "\n", "\n", "E_loss", "=", "F", ".", "binary_cross_entropy", "(", "result_zd", ",", "valid", ")", "*", "2.0", "\n", "recon_loss", "=", "F", ".", "binary_cross_entropy", "(", "x_d", ",", "inputs", ")", "\n", "(", "recon_loss", "+", "E_loss", ")", ".", "backward", "(", ")", "\n", "optimizer_GE", ".", "step", "(", ")", "\n", "\n", "train_GE_loss", "+=", "recon_loss", ".", "item", "(", ")", "\n", "train_E_loss", "+=", "E_loss", ".", "item", "(", ")", "\n", "\n", "print", "(", "'  Training... Epoch: %4d | Iter: %4d/%4d | Gloss: %.3f | Dloss: %.3f | ZDloss: %.3f | GEloss: %.3f | Eloss: %.3f'", "%", "(", "epoch", ",", "batch_idx", "+", "1", ",", "len", "(", "trainloader", ")", ",", "train_G_loss", "/", "(", "batch_idx", "+", "1", ")", ",", "train_D_loss", "/", "(", "batch_idx", "+", "1", ")", ",", "train_ZD_loss", "/", "(", "batch_idx", "+", "1", ")", ",", "train_GE_loss", "/", "(", "batch_idx", "+", "1", ")", ",", "train_E_loss", "/", "(", "batch_idx", "+", "1", ")", ")", ",", "end", "=", "'\\r'", ")", "\n", "", "print", "(", "''", ")", "\n", "logger", ".", "write", "(", "'  Training... Epoch: %4d | Iter: %4d/%4d | Gloss: %.3f | Dloss: %.3f | ZDloss: %.3f | GEloss: %.3f | Eloss: %.3f \\n'", "%", "(", "epoch", ",", "batch_idx", "+", "1", ",", "len", "(", "trainloader", ")", ",", "train_G_loss", "/", "(", "batch_idx", "+", "1", ")", ",", "train_D_loss", "/", "(", "batch_idx", "+", "1", ")", ",", "train_ZD_loss", "/", "(", "batch_idx", "+", "1", ")", ",", "train_GE_loss", "/", "(", "batch_idx", "+", "1", ")", ",", "train_E_loss", "/", "(", "batch_idx", "+", "1", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_gpnd.test": [[119, 198], ["encoder.eval", "generator.eval", "print", "numpy.concatenate", "numpy.concatenate", "numpy.histogram", "numpy.zeros", "range", "enumerate", "numpy.asarray", "sklearn.metrics.roc_auc_score", "sklearn.metrics.precision_recall_curve", "sklearn.metrics.auc", "torch.no_grad", "torch.no_grad", "enumerate", "max", "scipy.stats.gennorm.fit", "inputs.to.to", "torch.autograd.Variable", "encoder", "generator", "compute_jacobian().cpu().numpy", "encoder.cpu().detach().numpy", "generator.squeeze().cpu().detach().numpy", "inputs.to.squeeze().cpu().detach().numpy", "range", "numpy.asarray", "inputs.to.to", "encoder", "generator", "torch.sum", "torch.sum", "np.concatenate.append", "np.concatenate.append", "targets_list.append", "print", "max", "max", "numpy.digitize", "numpy.linalg.svd", "numpy.sum", "scipy.stats.gennorm.pdf", "numpy.sum", "numpy.sum", "numpy.log", "scores_list.append", "targets_list.append", "np.sum.cpu().numpy", "encoder.cpu().detach().numpy", "targets.cpu().numpy", "compute_jacobian().cpu", "encoder.cpu().detach", "generator.squeeze().cpu().detach", "inputs.to.squeeze().cpu().detach", "numpy.log", "numpy.log", "numpy.isfinite", "numpy.power", "main_gpnd.test.r_pdf"], "function", ["None"], ["", "def", "test", "(", "encoder", ",", "generator", ",", "testloader", ",", "device", ")", ":", "\n", "    ", "test_loss", "=", "0.", "\n", "targets_list", "=", "[", "]", "\n", "\n", "encoder", ".", "eval", "(", ")", "\n", "generator", ".", "eval", "(", ")", "\n", "\n", "rlist", "=", "[", "]", "\n", "zlist", "=", "[", "]", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "batch_idx", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "testloader", ")", ":", "\n", "            ", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "\n", "encoded_img", "=", "encoder", "(", "inputs", ")", "\n", "decoded_img", "=", "generator", "(", "encoded_img", ")", "\n", "\n", "distance", "=", "torch", ".", "sum", "(", "(", "decoded_img", "-", "inputs", ")", "**", "2", ",", "dim", "=", "tuple", "(", "range", "(", "1", ",", "decoded_img", ".", "dim", "(", ")", ")", ")", ")", "\n", "rlist", ".", "append", "(", "distance", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "zlist", ".", "append", "(", "encoded_img", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "# scores_list.append(scores.cpu().numpy())", "\n", "targets_list", ".", "append", "(", "targets", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "print", "(", "'  Test... Iter: %4d/%4d '", "%", "(", "batch_idx", "+", "1", ",", "len", "(", "testloader", ")", ")", ",", "end", "=", "'\\r'", ")", "\n", "", "", "print", "(", "''", ")", "\n", "\n", "test_loss", "=", "test_loss", "/", "(", "batch_idx", "+", "1", ")", "\n", "rlist", "=", "np", ".", "concatenate", "(", "rlist", ")", "\n", "zlist", "=", "np", ".", "concatenate", "(", "zlist", ")", "\n", "counts", ",", "bin_edges", "=", "np", ".", "histogram", "(", "rlist", ",", "bins", "=", "30", ",", "normed", "=", "True", ")", "\n", "def", "r_pdf", "(", "x", ",", "bins", ",", "count", ")", ":", "\n", "        ", "if", "x", "<", "bins", "[", "0", "]", ":", "\n", "            ", "return", "max", "(", "count", "[", "0", "]", ",", "1e-308", ")", "\n", "", "if", "x", ">=", "bins", "[", "-", "1", "]", ":", "\n", "            ", "return", "max", "(", "count", "[", "-", "1", "]", ",", "1e-308", ")", "\n", "", "id", "=", "np", ".", "digitize", "(", "x", ",", "bins", ")", "-", "1", "\n", "return", "max", "(", "count", "[", "id", "]", ",", "1e-308", ")", "\n", "\n", "", "gennorm_param", "=", "np", ".", "zeros", "(", "[", "3", ",", "encoder", ".", "rep_dim", "]", ")", "\n", "for", "i", "in", "range", "(", "encoder", ".", "rep_dim", ")", ":", "\n", "        ", "betta", ",", "loc", ",", "scale", "=", "scipy", ".", "stats", ".", "gennorm", ".", "fit", "(", "zlist", "[", ":", ",", "i", "]", ")", "\n", "gennorm_param", "[", "0", ",", "i", "]", "=", "betta", "\n", "gennorm_param", "[", "1", ",", "i", "]", "=", "loc", "\n", "gennorm_param", "[", "2", ",", "i", "]", "=", "scale", "\n", "\n", "", "scores_list", "=", "[", "]", "\n", "targets_list", "=", "[", "]", "\n", "for", "batch_idx", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "testloader", ")", ":", "\n", "        ", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "inputs", "=", "Variable", "(", "inputs", ",", "requires_grad", "=", "True", ")", "\n", "encoded_img", "=", "encoder", "(", "inputs", ")", "\n", "decoded_img", "=", "generator", "(", "encoded_img", ")", "\n", "\n", "J", "=", "compute_jacobian", "(", "inputs", ",", "encoded_img", ",", "device", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "encoded_img", "=", "encoded_img", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "decoded_img", "=", "decoded_img", ".", "squeeze", "(", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "inputs", "=", "inputs", ".", "squeeze", "(", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "for", "i", "in", "range", "(", "inputs", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "u", ",", "s", ",", "vh", "=", "np", ".", "linalg", ".", "svd", "(", "J", "[", "i", ",", ":", ",", ":", "]", ",", "full_matrices", "=", "False", ")", "\n", "logD", "=", "np", ".", "sum", "(", "np", ".", "log", "(", "np", ".", "abs", "(", "s", ")", ")", ")", "# | \\mathrm{det} S^{-1} |", "\n", "p", "=", "scipy", ".", "stats", ".", "gennorm", ".", "pdf", "(", "encoded_img", "[", "i", "]", ",", "gennorm_param", "[", "0", ",", ":", "]", ",", "gennorm_param", "[", "1", ",", ":", "]", ",", "gennorm_param", "[", "2", ",", ":", "]", ")", "\n", "logPz", "=", "np", ".", "sum", "(", "np", ".", "log", "(", "p", ")", ")", "\n", "if", "not", "np", ".", "isfinite", "(", "logPz", ")", ":", "\n", "                ", "logPz", "=", "-", "1000", "\n", "", "distance", "=", "np", ".", "sum", "(", "np", ".", "power", "(", "inputs", "[", "i", "]", ".", "flatten", "(", ")", "-", "decoded_img", "[", "i", "]", ".", "flatten", "(", ")", ",", "2", ")", ")", "\n", "logPe", "=", "np", ".", "log", "(", "r_pdf", "(", "distance", ",", "bin_edges", ",", "counts", ")", ")", "# p_{\\|W^{\\perp}\\|} (\\|w^{\\perp}\\|)", "\n", "logPe", "-=", "np", ".", "log", "(", "distance", ")", "*", "(", "np", ".", "prod", "(", "inputs", ".", "shape", "[", "1", ":", "]", ")", "-", "encoder", ".", "rep_dim", ")", "# \\| w^{\\perp} \\|}^{m-n}", "\n", "P", "=", "logD", "+", "logPz", "+", "logPe", "\n", "scores_list", ".", "append", "(", "P", ")", "\n", "targets_list", ".", "append", "(", "targets", "[", "i", "]", ".", "item", "(", ")", ")", "\n", "\n", "", "", "scores", "=", "np", ".", "asarray", "(", "scores_list", ")", "\n", "targets", "=", "1.", "-", "np", ".", "asarray", "(", "targets_list", ")", "\n", "auroc", "=", "metrics", ".", "roc_auc_score", "(", "targets", ",", "scores", ")", "\n", "\n", "precision", ",", "recall", ",", "_", "=", "metrics", ".", "precision_recall_curve", "(", "targets", ",", "scores", ")", "\n", "aupr", "=", "metrics", ".", "auc", "(", "recall", ",", "precision", ")", "\n", "\n", "return", "auroc", ",", "aupr", ",", "test_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_gpnd.main": [[200, 256], ["utils.config_backup_get_log", "utils.get_device", "utils.set_seed", "dataset.get_trainloader", "dataset.get_testloader", "models.get_gpnd", "encoder.to", "generator.to", "discriminator.to", "discriminator_z.to", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.lr_scheduler.MultiStepLR", "torch.optim.lr_scheduler.MultiStepLR", "torch.optim.lr_scheduler.MultiStepLR", "torch.optim.lr_scheduler.MultiStepLR", "torch.optim.lr_scheduler.MultiStepLR", "os.path.join", "print", "time.time", "range", "main_gpnd.test", "print", "torch.save", "torch.save", "time.time", "divmod", "divmod", "print", "print", "logger.write", "logger.write", "generator.parameters", "discriminator.parameters", "encoder.parameters", "discriminator_z.parameters", "main_gpnd.train", "encoder.state_dict", "generator.state_dict", "discriminator.state_dict", "discriminator_z.state_dict", "list", "list", "str", "str", "main_gpnd.test", "print", "int", "int", "int", "int", "encoder.parameters", "generator.parameters"], "function", ["home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.utils.config_backup_get_log", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.utils.get_device", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.utils.set_seed", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.dataset.get_trainloader", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.dataset.get_testloader", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.get_gpnd", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_vae.test", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_vae.train", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_vae.test"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "logger", ",", "result_dir", ",", "dir_name", "=", "utils", ".", "config_backup_get_log", "(", "args", ",", "__file__", ")", "\n", "device", "=", "utils", ".", "get_device", "(", ")", "\n", "utils", ".", "set_seed", "(", "args", ".", "seed", ",", "device", ")", "\n", "\n", "trainloader", "=", "dataset", ".", "get_trainloader", "(", "args", ".", "data", ",", "args", ".", "dataroot", ",", "args", ".", "target", ",", "args", ".", "bstrain", ",", "args", ".", "nworkers", ")", "\n", "testloader", "=", "dataset", ".", "get_testloader", "(", "args", ".", "data", ",", "args", ".", "dataroot", ",", "args", ".", "target", ",", "args", ".", "bstest", ",", "args", ".", "nworkers", ")", "\n", "\n", "import", "models", "\n", "encoder", ",", "generator", ",", "discriminator", ",", "discriminator_z", "=", "models", ".", "get_gpnd", "(", "args", ".", "data", ")", "\n", "encoder", ".", "to", "(", "device", ")", "\n", "generator", ".", "to", "(", "device", ")", "\n", "discriminator", ".", "to", "(", "device", ")", "\n", "discriminator_z", ".", "to", "(", "device", ")", "\n", "\n", "optimizer_G", "=", "optim", ".", "Adam", "(", "generator", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ")", "\n", "optimizer_D", "=", "optim", ".", "Adam", "(", "discriminator", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ")", "\n", "optimizer_E", "=", "optim", ".", "Adam", "(", "encoder", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ")", "\n", "optimizer_GE", "=", "optim", ".", "Adam", "(", "list", "(", "encoder", ".", "parameters", "(", ")", ")", "+", "list", "(", "generator", ".", "parameters", "(", ")", ")", ",", "lr", "=", "args", ".", "lr", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ")", "\n", "optimizer_ZD", "=", "optim", ".", "Adam", "(", "discriminator_z", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ")", "\n", "\n", "scheduler_G", "=", "optim", ".", "lr_scheduler", ".", "MultiStepLR", "(", "optimizer_G", ",", "milestones", "=", "args", ".", "milestones", ",", "gamma", "=", "args", ".", "gamma", ")", "\n", "scheduler_D", "=", "optim", ".", "lr_scheduler", ".", "MultiStepLR", "(", "optimizer_D", ",", "milestones", "=", "args", ".", "milestones", ",", "gamma", "=", "args", ".", "gamma", ")", "\n", "scheduler_E", "=", "optim", ".", "lr_scheduler", ".", "MultiStepLR", "(", "optimizer_E", ",", "milestones", "=", "args", ".", "milestones", ",", "gamma", "=", "args", ".", "gamma", ")", "\n", "scheduler_GE", "=", "optim", ".", "lr_scheduler", ".", "MultiStepLR", "(", "optimizer_GE", ",", "milestones", "=", "args", ".", "milestones", ",", "gamma", "=", "args", ".", "gamma", ")", "\n", "scheduler_ZD", "=", "optim", ".", "lr_scheduler", ".", "MultiStepLR", "(", "optimizer_ZD", ",", "milestones", "=", "args", ".", "milestones", ",", "gamma", "=", "args", ".", "gamma", ")", "\n", "schedulers", "=", "(", "scheduler_G", ",", "scheduler_D", ",", "scheduler_E", ",", "scheduler_GE", ",", "scheduler_ZD", ")", "\n", "chpt_name", "=", "'GPND_%s_target%s_seed%s.pth'", "%", "(", "args", ".", "data", ",", "str", "(", "args", ".", "target", ")", ",", "str", "(", "args", ".", "seed", ")", ")", "\n", "chpt_name", "=", "os", ".", "path", ".", "join", "(", "\"./chpt\"", ",", "chpt_name", ")", "\n", "\n", "print", "(", "'==> Start training ..'", ")", "\n", "start", "=", "time", ".", "time", "(", ")", "\n", "for", "epoch", "in", "range", "(", "args", ".", "maxepoch", ")", ":", "\n", "        ", "train", "(", "epoch", ",", "encoder", ",", "generator", ",", "discriminator", ",", "discriminator_z", ",", "trainloader", ",", "optimizer_G", ",", "optimizer_D", ",", "optimizer_E", ",", "optimizer_GE", ",", "optimizer_ZD", ",", "schedulers", ",", "logger", ",", "device", ")", "\n", "if", "epoch", ">", "79", "and", "epoch", "%", "20", "==", "0", ":", "\n", "            ", "auroc", ",", "aupr", ",", "_", "=", "test", "(", "encoder", ",", "generator", ",", "testloader", ",", "device", ")", "\n", "print", "(", "auroc", ")", "\n", "\n", "", "", "auroc", ",", "aupr", ",", "_", "=", "test", "(", "encoder", ",", "generator", ",", "testloader", ",", "device", ")", "\n", "print", "(", "'Epoch: %4d AUROC: %.4f AUPR: %.4f'", "%", "(", "epoch", ",", "auroc", ",", "aupr", ")", ")", "\n", "state", "=", "{", "\n", "'encoder'", ":", "encoder", ".", "state_dict", "(", ")", ",", "\n", "'generator'", ":", "generator", ".", "state_dict", "(", ")", ",", "\n", "'discriminator'", ":", "discriminator", ".", "state_dict", "(", ")", ",", "\n", "'discriminator_z'", ":", "discriminator_z", ".", "state_dict", "(", ")", ",", "\n", "'auroc'", ":", "auroc", ",", "\n", "'epoch'", ":", "epoch", "}", "\n", "torch", ".", "save", "(", "state", ",", "chpt_name", ")", "\n", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "hours", ",", "rem", "=", "divmod", "(", "end", "-", "start", ",", "3600", ")", "\n", "minutes", ",", "seconds", "=", "divmod", "(", "rem", ",", "60", ")", "\n", "print", "(", "'AUROC... '", ",", "auroc", ")", "\n", "print", "(", "\"Elapsed Time: {:0>2}:{:0>2}:{:05.2f}\"", ".", "format", "(", "int", "(", "hours", ")", ",", "int", "(", "minutes", ")", ",", "seconds", ")", ")", "\n", "logger", ".", "write", "(", "\"AUROC: %.8f\\n\"", "%", "(", "auroc", ")", ")", "\n", "logger", ".", "write", "(", "\"Elapsed Time: {:0>2}:{:0>2}:{:05.2f}\\n\"", ".", "format", "(", "int", "(", "hours", ")", ",", "int", "(", "minutes", ")", ",", "seconds", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.Interpolate.__init__": [[8, 12], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.dataset.FMNIST.__init__"], ["    ", "def", "__init__", "(", "self", ",", "scale_factor", "=", "2", ")", ":", "\n", "        ", "super", "(", "Interpolate", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "interp", "=", "F", ".", "interpolate", "\n", "self", ".", "scale_factor", "=", "scale_factor", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.Interpolate.forward": [[13, 16], ["models.Interpolate.interp"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "interp", "(", "x", ",", "scale_factor", "=", "self", ".", "scale_factor", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.PGN.__init__": [[85, 94], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.dataset.FMNIST.__init__"], ["def", "__init__", "(", "self", ",", "rep_dim", ",", "encoding_dim", ",", "dropoutp", ",", "features", ",", "dtype", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dtype", "=", "dtype", "\n", "self", ".", "dropoutp", "=", "dropoutp", "\n", "self", ".", "features", "=", "features", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "encoding_dim", ",", "encoding_dim", ")", "\n", "self", ".", "dense_mu", "=", "nn", ".", "Linear", "(", "encoding_dim", ",", "rep_dim", ")", "\n", "self", ".", "dense_logvar", "=", "nn", ".", "Linear", "(", "encoding_dim", ",", "rep_dim", ")", "\n", "self", ".", "mcdropout", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.PGN.set_mcdropout": [[95, 97], ["None"], "methods", ["None"], ["", "def", "set_mcdropout", "(", "self", ",", "mcdropout", ")", ":", "\n", "        ", "self", ".", "mcdropout", "=", "mcdropout", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.PGN.forward": [[98, 105], ["models.PGN.features", "x.view.view.view", "models.PGN.fc", "models.PGN.dense_mu", "models.PGN.dense_logvar", "x.view.view.size", "torch.dropout", "torch.dropout", "torch.dropout"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "h", "=", "self", ".", "fc", "(", "x", ")", "\n", "mu", "=", "self", ".", "dense_mu", "(", "F", ".", "dropout", "(", "h", ",", "p", "=", "self", ".", "dropoutp", ",", "training", "=", "self", ".", "mcdropout", ")", ")", "\n", "logvar", "=", "self", ".", "dense_logvar", "(", "h", ")", "\n", "return", "mu", ",", "logvar", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.Autoencoder.__init__": [[108, 116], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.dataset.FMNIST.__init__"], ["    ", "def", "__init__", "(", "self", ",", "rep_dim", ",", "encoding_dim", ",", "encoder", ",", "decoder", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "rep_dim", "=", "rep_dim", "\n", "self", ".", "encoding_dim", "=", "encoding_dim", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "encoding_dim", ",", "self", ".", "rep_dim", ")", "\n", "self", ".", "decoder", "=", "decoder", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.Autoencoder.forward": [[117, 124], ["models.Autoencoder.encoder", "models.Autoencoder.view", "models.Autoencoder.fc1", "models.Autoencoder.view", "models.Autoencoder.decoder", "models.Autoencoder.size", "models.Autoencoder.size", "int"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "encoder", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "fc1", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "int", "(", "self", ".", "rep_dim", "/", "16", ")", ",", "4", ",", "4", ")", "\n", "x", "=", "self", ".", "decoder", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.VAE.__init__": [[126, 135], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.dataset.FMNIST.__init__"], ["    ", "def", "__init__", "(", "self", ",", "rep_dim", ",", "encoding_dim", ",", "encoder", ",", "decoder", ",", "L", "=", "10", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "L", "=", "L", "# the number of reparameterization", "\n", "self", ".", "rep_dim", "=", "rep_dim", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "decoder", "=", "decoder", "\n", "\n", "self", ".", "fc1_mu", "=", "nn", ".", "Linear", "(", "encoding_dim", ",", "self", ".", "rep_dim", ")", "\n", "self", ".", "fc1_logvar", "=", "nn", ".", "Linear", "(", "encoding_dim", ",", "self", ".", "rep_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.VAE.encode": [[136, 142], ["models.VAE.encoder", "x.view.view.view", "models.VAE.fc1_mu", "models.VAE.fc1_logvar", "x.view.view.size"], "methods", ["None"], ["", "def", "encode", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "encoder", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "mu", "=", "self", ".", "fc1_mu", "(", "x", ")", "\n", "logvar", "=", "self", ".", "fc1_logvar", "(", "x", ")", "\n", "return", "mu", ",", "logvar", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.VAE.reparameterize": [[143, 147], ["torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like"], "methods", ["None"], ["", "def", "reparameterize", "(", "self", ",", "mu", ",", "logvar", ")", ":", "\n", "        ", "std", "=", "torch", ".", "exp", "(", "0.5", "*", "logvar", ")", "\n", "eps", "=", "torch", ".", "randn_like", "(", "std", ")", "\n", "return", "mu", "+", "eps", "*", "std", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.VAE.decode": [[148, 151], ["z.view.view.view", "models.VAE.decoder", "z.view.view.size", "int"], "methods", ["None"], ["", "def", "decode", "(", "self", ",", "z", ")", ":", "\n", "        ", "z", "=", "z", ".", "view", "(", "z", ".", "size", "(", "0", ")", ",", "int", "(", "self", ".", "rep_dim", "/", "16", ")", ",", "4", ",", "4", ")", "\n", "return", "self", ".", "decoder", "(", "z", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.VAE.forward": [[152, 159], ["models.VAE.encode", "range", "models.VAE.reparameterize", "recon_list.append", "models.VAE.decode"], "methods", ["home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.VAE.encode", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.VAE.reparameterize", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.VAE.decode"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "mu", ",", "logvar", "=", "self", ".", "encode", "(", "x", ")", "\n", "recon_list", "=", "[", "]", "\n", "for", "l", "in", "range", "(", "self", ".", "L", ")", ":", "\n", "            ", "z", "=", "self", ".", "reparameterize", "(", "mu", ",", "logvar", ")", "\n", "recon_list", ".", "append", "(", "self", ".", "decode", "(", "z", ")", ")", "\n", "", "return", "recon_list", ",", "mu", ",", "logvar", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.AAE_Encoder.__init__": [[162, 167], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.dataset.FMNIST.__init__"], ["    ", "def", "__init__", "(", "self", ",", "rep_dim", ",", "encoding_dim", ",", "encoder", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "rep_dim", "=", "rep_dim", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "encoding_dim", ",", "rep_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.AAE_Encoder.forward": [[168, 172], ["models.AAE_Encoder.encoder", "x.view.view.view", "models.AAE_Encoder.fc1", "x.view.view.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "encoder", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "return", "self", ".", "fc1", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.AAE_Decoder.__init__": [[175, 179], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.dataset.FMNIST.__init__"], ["    ", "def", "__init__", "(", "self", ",", "rep_dim", ",", "decoder", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "rep_dim", "=", "rep_dim", "\n", "self", ".", "decoder", "=", "decoder", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.AAE_Decoder.forward": [[180, 183], ["x.view.view.view", "models.AAE_Decoder.decoder", "x.view.view.size", "int"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "int", "(", "self", ".", "rep_dim", "/", "16", ")", ",", "4", ",", "4", ")", "\n", "return", "self", ".", "decoder", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.AAE_Discriminator.__init__": [[186, 196], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.dataset.FMNIST.__init__"], ["    ", "def", "__init__", "(", "self", ",", "rep_dim", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "rep_dim", "=", "rep_dim", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "rep_dim", ",", "512", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.1", ")", ",", "\n", "nn", ".", "Linear", "(", "512", ",", "256", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.1", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "1", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.AAE_Discriminator.forward": [[198, 201], ["models.AAE_Discriminator.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z", ")", ":", "\n", "        ", "validity", "=", "self", ".", "model", "(", "z", ")", "\n", "return", "validity", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.GPND_Discriminator.__init__": [[203, 207], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.dataset.FMNIST.__init__"], ["    ", "def", "__init__", "(", "self", ",", "encoding_dim", ",", "encoder", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "encoding_dim", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.GPND_Discriminator.forward": [[208, 213], ["models.GPND_Discriminator.encoder", "models.GPND_Discriminator.view", "models.GPND_Discriminator.fc1", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "models.GPND_Discriminator.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "encoder", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "fc1", "(", "x", ")", "\n", "return", "torch", ".", "sigmoid", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.ANOGAN_Discriminator.__init__": [[216, 220], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.dataset.FMNIST.__init__"], ["    ", "def", "__init__", "(", "self", ",", "encoding_dim", ",", "encoder", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "encoding_dim", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.ANOGAN_Discriminator.forward": [[221, 226], ["models.ANOGAN_Discriminator.encoder", "models.ANOGAN_Discriminator.view", "models.ANOGAN_Discriminator.fc1", "models.ANOGAN_Discriminator.size", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "encoder", "(", "x", ")", "\n", "out", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out2", "=", "self", ".", "fc1", "(", "out", ")", "\n", "return", "torch", ".", "sigmoid", "(", "out2", ")", ",", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.DSVDD.__init__": [[292, 303], ["torch.Module.__init__", "datatype.lower", "datatype.lower", "torch.Linear", "torch.Linear", "torch.Linear", "datatype.lower", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.dataset.FMNIST.__init__"], ["    ", "def", "__init__", "(", "self", ",", "datatype", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "datatype", "=", "datatype", ".", "lower", "(", ")", "\n", "if", "datatype", ".", "lower", "(", ")", "in", "[", "'mnist'", ",", "'fmnist'", "]", ":", "\n", "            ", "self", ".", "features", "=", "mnist_lenet_encoder", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "4", "*", "7", "*", "7", ",", "32", ",", "bias", "=", "False", ")", "\n", "self", ".", "rep_dim", "=", "32", "\n", "", "elif", "datatype", ".", "lower", "(", ")", "in", "[", "'cifar10'", "]", ":", "\n", "            ", "self", ".", "features", "=", "cifar10_lenet_encoder", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "128", "*", "4", "*", "4", ",", "128", ",", "bias", "=", "False", ")", "\n", "self", ".", "rep_dim", "=", "128", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.DSVDD.forward": [[304, 311], ["models.DSVDD.features", "models.DSVDD.view", "models.DSVDD.fc", "models.DSVDD.size"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "out", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "h", "=", "self", ".", "fc", "(", "out", ")", "\n", "\n", "return", "h", "\n", "", "", ""]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.get_pgn_encoder": [[229, 234], ["datatype.lower", "models.PGN", "datatype.lower", "models.PGN"], "function", ["None"], ["", "", "def", "get_pgn_encoder", "(", "datatype", ",", "p", "=", "0.2", ")", ":", "\n", "    ", "if", "datatype", ".", "lower", "(", ")", "in", "[", "'mnist'", ",", "'fmnist'", "]", ":", "\n", "        ", "return", "PGN", "(", "rep_dim", "=", "32", ",", "encoding_dim", "=", "mnist_encoding_dim", ",", "dropoutp", "=", "p", ",", "features", "=", "mnist_lenet_encoder", ",", "dtype", "=", "datatype", ")", "\n", "", "elif", "datatype", ".", "lower", "(", ")", "in", "[", "'cifar10'", "]", ":", "\n", "        ", "return", "PGN", "(", "rep_dim", "=", "128", ",", "encoding_dim", "=", "cifar10_encoding_dim", ",", "dropoutp", "=", "p", ",", "features", "=", "cifar10_lenet_encoder", ",", "dtype", "=", "datatype", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.get_dsvdd": [[235, 240], ["datatype.lower", "models.DSVDD", "datatype.lower", "models.DSVDD"], "function", ["None"], ["", "", "def", "get_dsvdd", "(", "datatype", ")", ":", "\n", "    ", "if", "datatype", ".", "lower", "(", ")", "in", "[", "'mnist'", ",", "'fmnist'", "]", ":", "\n", "        ", "return", "DSVDD", "(", "rep_dim", "=", "32", ",", "encoding_dim", "=", "mnist_encoding_dim", ",", "features", "=", "mnist_lenet_encoder", ")", "\n", "", "elif", "datatype", ".", "lower", "(", ")", "in", "[", "'cifar10'", "]", ":", "\n", "        ", "return", "DSVDD", "(", "rep_dim", "=", "128", ",", "encoding_dim", "=", "cifar10_encoding_dim", ",", "features", "=", "cifar10_lenet_encoder", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.get_ae": [[242, 247], ["datatype.lower", "models.Autoencoder", "datatype.lower", "models.Autoencoder"], "function", ["None"], ["", "", "def", "get_ae", "(", "datatype", ")", ":", "\n", "    ", "if", "datatype", ".", "lower", "(", ")", "in", "[", "'mnist'", ",", "'fmnist'", "]", ":", "\n", "        ", "return", "Autoencoder", "(", "rep_dim", "=", "32", ",", "encoding_dim", "=", "mnist_encoding_dim", ",", "encoder", "=", "mnist_lenet_encoder", ",", "decoder", "=", "mnist_lenet_decoder", ")", "\n", "", "elif", "datatype", ".", "lower", "(", ")", "in", "[", "'cifar10'", "]", ":", "\n", "        ", "return", "Autoencoder", "(", "rep_dim", "=", "128", ",", "encoding_dim", "=", "cifar10_encoding_dim", ",", "encoder", "=", "cifar10_lenet_encoder", ",", "decoder", "=", "cifar10_lenet_decoder", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.get_vae": [[248, 253], ["datatype.lower", "models.VAE", "datatype.lower", "models.VAE"], "function", ["None"], ["", "", "def", "get_vae", "(", "datatype", ",", "L", "=", "10", ")", ":", "\n", "    ", "if", "datatype", ".", "lower", "(", ")", "in", "[", "'mnist'", ",", "'fmnist'", "]", ":", "\n", "        ", "return", "VAE", "(", "rep_dim", "=", "32", ",", "encoding_dim", "=", "mnist_encoding_dim", ",", "encoder", "=", "mnist_lenet_encoder", ",", "decoder", "=", "mnist_lenet_decoder", ",", "L", "=", "L", ")", "\n", "", "elif", "datatype", ".", "lower", "(", ")", "in", "[", "'cifar10'", "]", ":", "\n", "        ", "return", "VAE", "(", "rep_dim", "=", "128", ",", "encoding_dim", "=", "cifar10_encoding_dim", ",", "encoder", "=", "cifar10_lenet_encoder", ",", "decoder", "=", "cifar10_lenet_decoder", ",", "L", "=", "L", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.get_aae": [[255, 271], ["models.AAE_Encoder", "models.AAE_Decoder", "models.AAE_Discriminator", "datatype.lower", "datatype.lower"], "function", ["None"], ["", "", "def", "get_aae", "(", "datatype", ")", ":", "\n", "    ", "if", "datatype", ".", "lower", "(", ")", "in", "[", "'mnist'", ",", "'fmnist'", "]", ":", "\n", "        ", "rep_dim", "=", "32", "\n", "encoding_dim", "=", "mnist_encoding_dim", "\n", "encoder", "=", "mnist_lenet_encoder", "\n", "decoder", "=", "mnist_lenet_decoder", "\n", "", "elif", "datatype", ".", "lower", "(", ")", "in", "[", "'cifar10'", "]", ":", "\n", "        ", "rep_dim", "=", "128", "\n", "encoding_dim", "=", "cifar10_encoding_dim", "\n", "encoder", "=", "cifar10_lenet_encoder", "\n", "decoder", "=", "cifar10_lenet_decoder", "\n", "\n", "", "aae_encoder", "=", "AAE_Encoder", "(", "rep_dim", "=", "rep_dim", ",", "encoding_dim", "=", "encoding_dim", ",", "encoder", "=", "encoder", ")", "\n", "aae_decoder", "=", "AAE_Decoder", "(", "rep_dim", "=", "rep_dim", ",", "decoder", "=", "decoder", ")", "\n", "aae_discriminator", "=", "AAE_Discriminator", "(", "rep_dim", "=", "rep_dim", ")", "\n", "return", "aae_encoder", ",", "aae_decoder", ",", "aae_discriminator", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.get_gpnd": [[272, 289], ["models.AAE_Encoder", "models.AAE_Decoder", "models.GPND_Discriminator", "models.AAE_Discriminator", "datatype.lower", "datatype.lower"], "function", ["None"], ["", "def", "get_gpnd", "(", "datatype", ")", ":", "\n", "    ", "if", "datatype", ".", "lower", "(", ")", "in", "[", "'mnist'", ",", "'fmnist'", "]", ":", "\n", "        ", "rep_dim", "=", "32", "\n", "encoding_dim", "=", "mnist_encoding_dim", "\n", "encoder", "=", "mnist_lenet_encoder", "\n", "decoder", "=", "mnist_lenet_decoder", "\n", "", "elif", "datatype", ".", "lower", "(", ")", "in", "[", "'cifar10'", "]", ":", "\n", "        ", "rep_dim", "=", "128", "\n", "encoding_dim", "=", "cifar10_encoding_dim", "\n", "encoder", "=", "cifar10_lenet_encoder", "\n", "decoder", "=", "cifar10_lenet_decoder", "\n", "\n", "", "gpnd_encoder", "=", "AAE_Encoder", "(", "rep_dim", "=", "rep_dim", ",", "encoding_dim", "=", "encoding_dim", ",", "encoder", "=", "encoder", ")", "\n", "gpnd_decoder", "=", "AAE_Decoder", "(", "rep_dim", "=", "rep_dim", ",", "decoder", "=", "decoder", ")", "\n", "gpnd_discriminator", "=", "GPND_Discriminator", "(", "encoding_dim", "=", "encoding_dim", ",", "encoder", "=", "encoder", ")", "\n", "gpnd_z_discriminator", "=", "AAE_Discriminator", "(", "rep_dim", "=", "rep_dim", ")", "\n", "return", "gpnd_encoder", ",", "gpnd_decoder", ",", "gpnd_discriminator", ",", "gpnd_z_discriminator", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_aae.train": [[15, 55], ["encoder.train", "decoder.train", "discriminator.train", "scheduler_G.step", "scheduler_D.step", "enumerate", "print", "logger.write", "inputs.to.to", "torch.autograd.Variable", "torch.autograd.Variable", "optimizer_G.zero_grad", "encoder", "decoder", "g_loss.backward", "g_loss.item", "optimizer_G.step", "optimizer_D.zero_grad", "torch.randn_like", "adversarial_loss", "adversarial_loss", "d_loss.backward", "d_loss.item", "optimizer_D.step", "print", "torch.FloatTensor().fill_().to", "torch.FloatTensor().fill_().to", "discriminator", "discriminator", "adversarial_loss", "pixelwise_loss", "encoder.detach", "len", "torch.FloatTensor().fill_", "torch.FloatTensor().fill_", "discriminator", "len", "torch.FloatTensor", "torch.FloatTensor", "inputs.to.size", "inputs.to.size"], "function", ["home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_vae.train", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_vae.train", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_vae.train"], ["def", "train", "(", "epoch", ",", "adversarial_loss", ",", "pixelwise_loss", ",", "encoder", ",", "decoder", ",", "discriminator", ",", "trainloader", ",", "optimizer_G", ",", "optimizer_D", ",", "scheduler_G", ",", "scheduler_D", ",", "logger", ",", "device", ")", ":", "\n", "    ", "train_G_loss", "=", "0.", "\n", "train_D_loss", "=", "0.", "\n", "\n", "encoder", ".", "train", "(", ")", "# train mode", "\n", "decoder", ".", "train", "(", ")", "# train mode", "\n", "discriminator", ".", "train", "(", ")", "# train mode", "\n", "\n", "scheduler_G", ".", "step", "(", ")", "# update optimizer lr", "\n", "scheduler_D", ".", "step", "(", ")", "# update optimizer lr", "\n", "\n", "for", "batch_idx", ",", "(", "inputs", ",", "_", ")", "in", "enumerate", "(", "trainloader", ")", ":", "\n", "        ", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "valid", "=", "Variable", "(", "torch", ".", "FloatTensor", "(", "inputs", ".", "size", "(", "0", ")", ",", "1", ")", ".", "fill_", "(", "1.0", ")", ".", "to", "(", "device", ")", ",", "requires_grad", "=", "False", ")", "\n", "fake", "=", "Variable", "(", "torch", ".", "FloatTensor", "(", "inputs", ".", "size", "(", "0", ")", ",", "1", ")", ".", "fill_", "(", "0.0", ")", ".", "to", "(", "device", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "# Train generator", "\n", "optimizer_G", ".", "zero_grad", "(", ")", "\n", "encoded_img", "=", "encoder", "(", "inputs", ")", "\n", "decoded_img", "=", "decoder", "(", "encoded_img", ")", "\n", "\n", "g_loss", "=", "0.001", "*", "adversarial_loss", "(", "discriminator", "(", "encoded_img", ")", ",", "valid", ")", "+", "0.999", "*", "pixelwise_loss", "(", "decoded_img", ",", "inputs", ")", "\n", "g_loss", ".", "backward", "(", ")", "\n", "train_G_loss", "+=", "g_loss", ".", "item", "(", ")", "\n", "optimizer_G", ".", "step", "(", ")", "\n", "\n", "# Train discriminator", "\n", "optimizer_D", ".", "zero_grad", "(", ")", "\n", "z", "=", "torch", ".", "randn_like", "(", "encoded_img", ")", "\n", "\n", "real_loss", "=", "adversarial_loss", "(", "discriminator", "(", "z", ")", ",", "valid", ")", "\n", "fake_loss", "=", "adversarial_loss", "(", "discriminator", "(", "encoded_img", ".", "detach", "(", ")", ")", ",", "fake", ")", "\n", "d_loss", "=", "0.5", "*", "(", "real_loss", "+", "fake_loss", ")", "\n", "d_loss", ".", "backward", "(", ")", "\n", "train_D_loss", "+=", "d_loss", ".", "item", "(", ")", "\n", "optimizer_D", ".", "step", "(", ")", "\n", "\n", "print", "(", "'  Training... Epoch: %4d | Iter: %4d/%4d | Mean G Loss: %.4f | Mean D Loss: %.4f '", "%", "(", "epoch", ",", "batch_idx", "+", "1", ",", "len", "(", "trainloader", ")", ",", "train_G_loss", "/", "(", "batch_idx", "+", "1", ")", ",", "train_D_loss", "/", "(", "batch_idx", "+", "1", ")", ")", ",", "end", "=", "'\\r'", ")", "\n", "", "print", "(", "''", ")", "\n", "logger", ".", "write", "(", "'  Training... Epoch: %4d | Iter: %4d/%4d | Mean G Loss: %.4f | Mean D Loss: %.4f \\n'", "%", "(", "epoch", ",", "batch_idx", "+", "1", ",", "len", "(", "trainloader", ")", ",", "train_G_loss", "/", "(", "batch_idx", "+", "1", ")", ",", "train_D_loss", "/", "(", "batch_idx", "+", "1", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_aae.test": [[57, 84], ["encoder.eval", "decoder.eval", "print", "numpy.concatenate", "numpy.concatenate", "sklearn.metrics.roc_auc_score", "sklearn.metrics.precision_recall_curve", "sklearn.metrics.auc", "torch.no_grad", "enumerate", "inputs.to.to", "encoder", "decoder", "torch.sum", "scores_list.append", "targets_list.append", "print", "torch.sum.cpu().numpy", "np.concatenate.cpu().numpy", "tuple", "range", "torch.sum.cpu", "np.concatenate.cpu", "len", "decoder.dim"], "function", ["None"], ["", "def", "test", "(", "encoder", ",", "decoder", ",", "testloader", ",", "device", ")", ":", "\n", "    ", "test_loss", "=", "0.", "\n", "scores_list", "=", "[", "]", "\n", "targets_list", "=", "[", "]", "\n", "\n", "encoder", ".", "eval", "(", ")", "\n", "decoder", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "batch_idx", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "testloader", ")", ":", "\n", "            ", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "encoded_img", "=", "encoder", "(", "inputs", ")", "\n", "decoded_img", "=", "decoder", "(", "encoded_img", ")", "\n", "scores", "=", "torch", ".", "sum", "(", "(", "decoded_img", "-", "inputs", ")", "**", "2", ",", "dim", "=", "tuple", "(", "range", "(", "1", ",", "decoded_img", ".", "dim", "(", ")", ")", ")", ")", "\n", "scores_list", ".", "append", "(", "scores", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "targets_list", ".", "append", "(", "targets", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "print", "(", "'  Test... Iter: %4d/%4d '", "%", "(", "batch_idx", "+", "1", ",", "len", "(", "testloader", ")", ")", ",", "end", "=", "'\\r'", ")", "\n", "", "", "print", "(", "''", ")", "\n", "\n", "test_loss", "=", "test_loss", "/", "(", "batch_idx", "+", "1", ")", "\n", "scores", "=", "np", ".", "concatenate", "(", "scores_list", ")", "\n", "targets", "=", "np", ".", "concatenate", "(", "targets_list", ")", "\n", "auroc", "=", "metrics", ".", "roc_auc_score", "(", "targets", ",", "scores", ")", "\n", "\n", "precision", ",", "recall", ",", "_", "=", "metrics", ".", "precision_recall_curve", "(", "targets", ",", "scores", ")", "\n", "aupr", "=", "metrics", ".", "auc", "(", "recall", ",", "precision", ")", "\n", "\n", "return", "auroc", ",", "aupr", ",", "test_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_aae.main": [[86, 137], ["utils.config_backup_get_log", "utils.get_device", "utils.set_seed", "dataset.get_trainloader", "dataset.get_testloader", "models.get_aae", "encoder.to", "decoder.to", "discriminator.to", "torch.nn.BCELoss().to", "torch.nn.L1Loss().to", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.lr_scheduler.MultiStepLR", "torch.optim.lr_scheduler.MultiStepLR", "os.path.join", "print", "time.time", "range", "main_aae.test", "print", "logger.write", "torch.save", "time.time", "divmod", "divmod", "print", "print", "logger.write", "logger.write", "itertools.chain", "discriminator.parameters", "main_aae.train", "encoder.state_dict", "decoder.state_dict", "discriminator.state_dict", "torch.nn.BCELoss", "torch.nn.L1Loss", "encoder.parameters", "decoder.parameters", "str", "str", "int", "int", "int", "int"], "function", ["home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.utils.config_backup_get_log", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.utils.get_device", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.utils.set_seed", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.dataset.get_trainloader", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.dataset.get_testloader", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.get_aae", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_vae.test", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_vae.train"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "logger", ",", "result_dir", ",", "dir_name", "=", "utils", ".", "config_backup_get_log", "(", "args", ",", "__file__", ")", "\n", "device", "=", "utils", ".", "get_device", "(", ")", "\n", "utils", ".", "set_seed", "(", "args", ".", "seed", ",", "device", ")", "\n", "\n", "trainloader", "=", "dataset", ".", "get_trainloader", "(", "args", ".", "data", ",", "args", ".", "dataroot", ",", "args", ".", "target", ",", "args", ".", "bstrain", ",", "args", ".", "nworkers", ")", "\n", "testloader", "=", "dataset", ".", "get_testloader", "(", "args", ".", "data", ",", "args", ".", "dataroot", ",", "args", ".", "target", ",", "args", ".", "bstest", ",", "args", ".", "nworkers", ")", "\n", "\n", "import", "models", "\n", "encoder", ",", "decoder", ",", "discriminator", "=", "models", ".", "get_aae", "(", "args", ".", "data", ")", "\n", "encoder", ".", "to", "(", "device", ")", "\n", "decoder", ".", "to", "(", "device", ")", "\n", "discriminator", ".", "to", "(", "device", ")", "\n", "\n", "# Use binary cross-entropy loss", "\n", "adversarial_loss", "=", "torch", ".", "nn", ".", "BCELoss", "(", ")", ".", "to", "(", "device", ")", "\n", "pixelwise_loss", "=", "torch", ".", "nn", ".", "L1Loss", "(", ")", ".", "to", "(", "device", ")", "\n", "\n", "optimizer_G", "=", "torch", ".", "optim", ".", "Adam", "(", "itertools", ".", "chain", "(", "encoder", ".", "parameters", "(", ")", ",", "decoder", ".", "parameters", "(", ")", ")", ",", "lr", "=", "args", ".", "lr", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "weight_decay", "=", "1e-4", ")", "\n", "optimizer_D", "=", "torch", ".", "optim", ".", "Adam", "(", "discriminator", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "weight_decay", "=", "1e-4", ")", "\n", "\n", "scheduler_G", "=", "optim", ".", "lr_scheduler", ".", "MultiStepLR", "(", "optimizer_G", ",", "milestones", "=", "args", ".", "milestones", ",", "gamma", "=", "0.1", ")", "\n", "scheduler_D", "=", "optim", ".", "lr_scheduler", ".", "MultiStepLR", "(", "optimizer_D", ",", "milestones", "=", "args", ".", "milestones", ",", "gamma", "=", "0.1", ")", "\n", "\n", "chpt_name", "=", "'AAE_%s_target%s_seed%s.pth'", "%", "(", "args", ".", "data", ",", "str", "(", "args", ".", "target", ")", ",", "str", "(", "args", ".", "seed", ")", ")", "\n", "chpt_name", "=", "os", ".", "path", ".", "join", "(", "\"./chpt\"", ",", "chpt_name", ")", "\n", "\n", "print", "(", "'==> Start training ..'", ")", "\n", "best_auroc", "=", "0.", "\n", "start", "=", "time", ".", "time", "(", ")", "\n", "for", "epoch", "in", "range", "(", "args", ".", "maxepoch", ")", ":", "\n", "        ", "train", "(", "epoch", ",", "adversarial_loss", ",", "pixelwise_loss", ",", "encoder", ",", "decoder", ",", "discriminator", ",", "trainloader", ",", "optimizer_G", ",", "optimizer_D", ",", "scheduler_G", ",", "scheduler_D", ",", "logger", ",", "device", ")", "\n", "\n", "", "auroc", ",", "aupr", ",", "_", "=", "test", "(", "encoder", ",", "decoder", ",", "testloader", ",", "device", ")", "\n", "print", "(", "'Epoch: %4d AUROC: %.4f AUPR: %.4f'", "%", "(", "epoch", ",", "auroc", ",", "aupr", ")", ")", "\n", "logger", ".", "write", "(", "'Epoch: %4d AUROC: %.4f AUPR: %.4f \\n'", "%", "(", "epoch", ",", "auroc", ",", "aupr", ")", ")", "\n", "state", "=", "{", "\n", "'encoder'", ":", "encoder", ".", "state_dict", "(", ")", ",", "\n", "'decoder'", ":", "decoder", ".", "state_dict", "(", ")", ",", "\n", "'discriminator'", ":", "discriminator", ".", "state_dict", "(", ")", ",", "\n", "'auroc'", ":", "auroc", ",", "\n", "'epoch'", ":", "epoch", "}", "\n", "torch", ".", "save", "(", "state", ",", "chpt_name", ")", "\n", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "hours", ",", "rem", "=", "divmod", "(", "end", "-", "start", ",", "3600", ")", "\n", "minutes", ",", "seconds", "=", "divmod", "(", "rem", ",", "60", ")", "\n", "print", "(", "'AUROC... '", ",", "auroc", ")", "\n", "print", "(", "\"Elapsed Time: {:0>2}:{:0>2}:{:05.2f}\"", ".", "format", "(", "int", "(", "hours", ")", ",", "int", "(", "minutes", ")", ",", "seconds", ")", ")", "\n", "logger", ".", "write", "(", "\"AUROC: %.8f\\n\"", "%", "(", "auroc", ")", ")", "\n", "logger", ".", "write", "(", "\"Elapsed Time: {:0>2}:{:0>2}:{:05.2f}\\n\"", ".", "format", "(", "int", "(", "hours", ")", ",", "int", "(", "minutes", ")", ",", "seconds", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.beta_vae_test.Distribution.sample": [[17, 19], ["None"], "methods", ["None"], ["    ", "def", "sample", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.beta_vae_test.Distribution.log_prob": [[20, 22], ["None"], "methods", ["None"], ["", "def", "log_prob", "(", "self", ",", "values", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.beta_vae_test.Bernoulli.__init__": [[24, 26], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "probs", ")", ":", "\n", "        ", "self", ".", "probs", "=", "probs", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.beta_vae_test.Bernoulli.sample": [[27, 29], ["torch.bernoulli", "torch.bernoulli", "torch.bernoulli", "torch.bernoulli"], "methods", ["None"], ["", "def", "sample", "(", "self", ")", ":", "\n", "        ", "return", "torch", ".", "bernoulli", "(", "self", ".", "probs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.beta_vae_test.Bernoulli.log_prob": [[30, 35], ["beta_vae_test.Bernoulli.probs.clamp", "torch.stack().log", "torch.stack().log", "torch.stack().log", "torch.stack().log", "values.unsqueeze().long", "torch.stack().log.gather().squeeze", "torch.stack().log.gather().squeeze", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "values.unsqueeze", "torch.stack().log.gather", "torch.stack().log.gather"], "methods", ["None"], ["", "def", "log_prob", "(", "self", ",", "values", ")", ":", "\n", "        ", "probs", "=", "self", ".", "probs", ".", "clamp", "(", "0.00001", ",", "0.99999", ")", "\n", "log_pmf", "=", "(", "torch", ".", "stack", "(", "[", "1.", "-", "probs", ",", "probs", "]", ")", ")", ".", "log", "(", ")", "\n", "dum", "=", "values", ".", "unsqueeze", "(", "0", ")", ".", "long", "(", ")", "\n", "return", "log_pmf", ".", "gather", "(", "0", ",", "dum", ")", ".", "squeeze", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.beta_vae_test.loss_function": [[36, 45], ["len", "Bernoulli().log_prob().sum", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.sum", "torch.sum", "beta_vae_test.Bernoulli.log_prob", "x.view", "beta_vae_test.Bernoulli", "x.size", "recon_x.view", "mu.pow", "logvar.exp", "recon_x.size"], "function", ["home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.beta_vae_test.Bernoulli.log_prob"], ["", "", "def", "loss_function", "(", "recon_list", ",", "x", ",", "mu", ",", "logvar", ",", "beta", ")", ":", "\n", "    ", "recon_loss", "=", "0.", "\n", "D", "=", "0.", "\n", "for", "recon_x", "in", "recon_list", ":", "\n", "        ", "D_batch", "=", "Bernoulli", "(", "recon_x", ".", "view", "(", "(", "recon_x", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", ")", ".", "log_prob", "(", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", ".", "sum", "(", "dim", "=", "1", ")", "\n", "D", "-=", "torch", ".", "mean", "(", "D_batch", ")", "\n", "", "D", "/=", "len", "(", "recon_list", ")", "\n", "R", "=", "0.5", "*", "torch", ".", "mean", "(", "torch", ".", "sum", "(", "(", "mu", ".", "pow", "(", "2", ")", "+", "logvar", ".", "exp", "(", ")", "-", "logvar", "-", "1", ")", ",", "dim", "=", "1", ")", ")", "\n", "return", "D", "+", "beta", "*", "R", ",", "D", ",", "R", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.beta_vae_test.train": [[47, 71], ["model.train", "scheduler.step", "enumerate", "inputs.to.to", "optimizer.zero_grad", "model", "beta_vae_test.loss_function", "loss.backward", "loss.item", "d.item", "r.item", "optimizer.step"], "function", ["home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_vae.train", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_vae.loss_function"], ["", "def", "train", "(", "epoch", ",", "model", ",", "trainloader", ",", "optimizer", ",", "scheduler", ",", "logger", ",", "device", ",", "beta", ")", ":", "\n", "    ", "train_loss", "=", "0.", "\n", "model", ".", "train", "(", ")", "# train mode", "\n", "distortion", "=", "0.", "\n", "rate", "=", "0.", "\n", "\n", "scheduler", ".", "step", "(", ")", "# update optimizer lr", "\n", "\n", "for", "batch_idx", ",", "(", "inputs", ",", "_", ")", "in", "enumerate", "(", "trainloader", ")", ":", "\n", "        ", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "recon_list", ",", "mu", ",", "logvar", "=", "model", "(", "inputs", ")", "\n", "loss", ",", "d", ",", "r", "=", "loss_function", "(", "recon_list", ",", "inputs", ",", "mu", ",", "logvar", ",", "beta", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "train_loss", "+=", "loss", ".", "item", "(", ")", "\n", "distortion", "+=", "d", ".", "item", "(", ")", "\n", "rate", "+=", "r", ".", "item", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "", "distortion", "=", "distortion", "/", "(", "batch_idx", "+", "1", ")", "\n", "rate", "=", "rate", "/", "(", "batch_idx", "+", "1", ")", "\n", "train_loss", "=", "train_loss", "/", "(", "batch_idx", "+", "1", ")", "\n", "return", "train_loss", ",", "distortion", ",", "rate", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.beta_vae_test.test": [[72, 88], ["model.eval", "enumerate", "inputs.to.to", "model", "beta_vae_test.loss_function", "loss.item", "d.item", "r.item"], "function", ["home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_vae.loss_function"], ["", "def", "test", "(", "model", ",", "trainloader", ",", "logger", ",", "device", ",", "beta", ")", ":", "\n", "    ", "train_loss", "=", "0.", "\n", "model", ".", "eval", "(", ")", "\n", "distortion", "=", "0.", "\n", "rate", "=", "0.", "\n", "for", "batch_idx", ",", "(", "inputs", ",", "_", ")", "in", "enumerate", "(", "trainloader", ")", ":", "\n", "        ", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "recon_list", ",", "mu", ",", "logvar", "=", "model", "(", "inputs", ")", "\n", "loss", ",", "d", ",", "r", "=", "loss_function", "(", "recon_list", ",", "inputs", ",", "mu", ",", "logvar", ",", "beta", ")", "\n", "train_loss", "+=", "loss", ".", "item", "(", ")", "\n", "distortion", "+=", "d", ".", "item", "(", ")", "\n", "rate", "+=", "r", ".", "item", "(", ")", "\n", "", "distortion", "=", "distortion", "/", "(", "batch_idx", "+", "1", ")", "\n", "rate", "=", "rate", "/", "(", "batch_idx", "+", "1", ")", "\n", "train_loss", "=", "train_loss", "/", "(", "batch_idx", "+", "1", ")", "\n", "return", "train_loss", ",", "distortion", ",", "rate", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.beta_vae_test.main": [[89, 131], ["utils.config_backup_get_log", "os.path.join", "open", "csv.writer", "csv.writer.writerow", "utils.get_device", "utils.set_seed", "dataset.get_trainloader", "models.get_vae().to", "torch.optim.Adam", "torch.optim.lr_scheduler.MultiStepLR", "os.path.join", "print", "time.time", "beta_vae_test.test", "csv.writer.writerow", "print", "range", "open.close", "time.time", "divmod", "divmod", "print", "logger.write", "models.get_vae().to.parameters", "beta_vae_test.train", "csv.writer.writerow", "print", "open", "open.close", "models.get_vae", "str", "str", "int", "int", "int", "int"], "function", ["home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.utils.config_backup_get_log", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.utils.get_device", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.utils.set_seed", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.dataset.get_trainloader", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_vae.test", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_vae.train", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.get_vae"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "logger", ",", "result_dir", ",", "dir_name", "=", "utils", ".", "config_backup_get_log", "(", "args", ",", "__file__", ")", "\n", "csv_name", "=", "os", ".", "path", ".", "join", "(", "result_dir", ",", "'rate_distortion.csv'", ")", "\n", "file", "=", "open", "(", "csv_name", ",", "'w'", ",", "newline", "=", "''", ")", "\n", "csvwriter", "=", "csv", ".", "writer", "(", "file", ")", "\n", "csvwriter", ".", "writerow", "(", "[", "'beta'", ",", "args", ".", "beta", "]", ")", "\n", "\n", "device", "=", "utils", ".", "get_device", "(", ")", "\n", "utils", ".", "set_seed", "(", "args", ".", "seed", ",", "device", ")", "\n", "\n", "trainloader", "=", "dataset", ".", "get_trainloader", "(", "args", ".", "data", ",", "args", ".", "dataroot", ",", "args", ".", "type", ",", "args", ".", "target", ",", "args", ".", "bstrain", ",", "args", ".", "nworkers", ")", "\n", "\n", "import", "models", "\n", "model", "=", "models", ".", "get_vae", "(", "args", ".", "data", ",", "L", "=", "10", ")", ".", "to", "(", "device", ")", "\n", "\n", "optimizer", "=", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "weight_decay", "=", "1e-4", ")", "\n", "scheduler", "=", "optim", ".", "lr_scheduler", ".", "MultiStepLR", "(", "optimizer", ",", "milestones", "=", "args", ".", "milestones", ",", "gamma", "=", "0.1", ")", "\n", "\n", "chpt_name", "=", "'betaVAE_%s_target%s_seed%s.pth'", "%", "(", "args", ".", "data", ",", "str", "(", "args", ".", "target", ")", ",", "str", "(", "args", ".", "seed", ")", ")", "\n", "chpt_name", "=", "os", ".", "path", ".", "join", "(", "\"./chpt\"", ",", "chpt_name", ")", "\n", "\n", "print", "(", "'==> Start training ..'", ")", "\n", "start", "=", "time", ".", "time", "(", ")", "\n", "loss", ",", "distortion", ",", "rate", "=", "test", "(", "model", ",", "trainloader", ",", "logger", ",", "device", ",", "args", ".", "beta", ")", "\n", "csvwriter", ".", "writerow", "(", "[", "-", "1", ",", "distortion", ",", "rate", ",", "distortion", "+", "rate", "]", ")", "\n", "print", "(", "'EPOCH %3d LOSS: %.4F, DISTORTION: %.4f, RATE: %.4f, D+R: %.4f'", "%", "(", "-", "1", ",", "loss", ",", "distortion", ",", "rate", ",", "distortion", "+", "rate", ")", ")", "\n", "for", "epoch", "in", "range", "(", "args", ".", "maxepoch", ")", ":", "\n", "        ", "loss", ",", "distortion", ",", "rate", "=", "train", "(", "epoch", ",", "model", ",", "trainloader", ",", "optimizer", ",", "scheduler", ",", "logger", ",", "device", ",", "args", ".", "beta", ")", "\n", "csvwriter", ".", "writerow", "(", "[", "epoch", ",", "distortion", ",", "rate", ",", "distortion", "+", "rate", "]", ")", "\n", "print", "(", "'EPOCH %3d LOSS: %.4F, DISTORTION: %.4f, RATE: %.4f, D+R: %.4f'", "%", "(", "epoch", ",", "loss", ",", "distortion", ",", "rate", ",", "distortion", "+", "rate", ")", ")", "\n", "\n", "\n", "", "file", ".", "close", "(", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "hours", ",", "rem", "=", "divmod", "(", "end", "-", "start", ",", "3600", ")", "\n", "minutes", ",", "seconds", "=", "divmod", "(", "rem", ",", "60", ")", "\n", "print", "(", "\"Elapsed Time: {:0>2}:{:0>2}:{:05.2f}\"", ".", "format", "(", "int", "(", "hours", ")", ",", "int", "(", "minutes", ")", ",", "seconds", ")", ")", "\n", "logger", ".", "write", "(", "\"Elapsed Time: {:0>2}:{:0>2}:{:05.2f}\\n\"", ".", "format", "(", "int", "(", "hours", ")", ",", "int", "(", "minutes", ")", ",", "seconds", ")", ")", "\n", "\n", "if", "args", ".", "batchout", ":", "\n", "        ", "f", "=", "open", "(", "'temp_result.txt'", ",", "'w'", ",", "newline", "=", "''", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.dataset.CIFAR10.__init__": [[10, 29], ["torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "numpy.asarray", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "numpy.arange", "numpy.where", "torchvision.ToTensor", "torchvision.ToTensor", "torchvision.Resize", "torchvision.Resize", "torchvision.ToTensor", "torchvision.ToTensor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dataroot", ",", "target", ",", "imagesize", ",", "train", ")", ":", "\n", "        ", "self", ".", "target", "=", "target", "\n", "self", ".", "train", "=", "train", "\n", "\n", "if", "imagesize", "is", "None", ":", "\n", "            ", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "# first, convert image to PyTorch tensor [0.,1.]", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "imagesize", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "# first, convert image to PyTorch tensor [0.,1.]", "\n", "]", ")", "\n", "", "self", ".", "raw_dataset", "=", "torchvision", ".", "datasets", ".", "CIFAR10", "(", "root", "=", "dataroot", ",", "train", "=", "train", ",", "transform", "=", "transform", ",", "download", "=", "True", ")", "\n", "targets", "=", "np", ".", "asarray", "(", "self", ".", "raw_dataset", ".", "targets", ")", "\n", "if", "self", ".", "train", ":", "\n", "            ", "self", ".", "idxs", "=", "np", ".", "where", "(", "targets", "==", "target", ")", "[", "0", "]", "\n", "", "else", ":", "# test", "\n", "            ", "self", ".", "idxs", "=", "np", ".", "arange", "(", "targets", ".", "size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.dataset.CIFAR10.__len__": [[30, 32], ["None"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "idxs", ".", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.dataset.CIFAR10.__getitem__": [[33, 44], ["data.min", "data.max", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "i", ")", ":", "\n", "        ", "idx", "=", "self", ".", "idxs", "[", "i", "]", "\n", "data", "=", "self", ".", "raw_dataset", "[", "idx", "]", "[", "0", "]", "\n", "min", ",", "max", "=", "data", ".", "min", "(", ")", ",", "data", ".", "max", "(", ")", "\n", "data", "=", "(", "data", "-", "min", ")", "/", "(", "max", "-", "min", ")", "\n", "\n", "if", "self", ".", "train", ":", "# when training, label is not considered", "\n", "            ", "label", "=", "torch", ".", "LongTensor", "(", "[", "1", "]", ")", "\n", "", "else", ":", "# if label is one, it means it is anomalous", "\n", "            ", "label", "=", "torch", ".", "LongTensor", "(", "[", "self", ".", "raw_dataset", ".", "targets", "[", "idx", "]", "!=", "self", ".", "target", "]", ")", "\n", "", "return", "data", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.dataset.MNIST.__init__": [[47, 65], ["torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "dataset.MNIST.raw_dataset.targets.numpy", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "numpy.arange", "numpy.where", "torchvision.ToTensor", "torchvision.ToTensor", "torchvision.Resize", "torchvision.Resize", "torchvision.ToTensor", "torchvision.ToTensor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dataroot", ",", "target", ",", "imagesize", ",", "train", ")", ":", "\n", "        ", "self", ".", "target", "=", "target", "\n", "self", ".", "train", "=", "train", "\n", "if", "imagesize", "is", "None", ":", "\n", "            ", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "# first, convert image to PyTorch tensor [0.,1.]", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "imagesize", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "# first, convert image to PyTorch tensor [0.,1.]", "\n", "]", ")", "\n", "", "self", ".", "raw_dataset", "=", "torchvision", ".", "datasets", ".", "MNIST", "(", "root", "=", "dataroot", ",", "train", "=", "train", ",", "transform", "=", "transform", ",", "download", "=", "True", ")", "\n", "targets", "=", "self", ".", "raw_dataset", ".", "targets", ".", "numpy", "(", ")", "\n", "if", "self", ".", "train", ":", "\n", "            ", "self", ".", "idxs", "=", "np", ".", "where", "(", "targets", "==", "target", ")", "[", "0", "]", "\n", "", "else", ":", "# test", "\n", "            ", "self", ".", "idxs", "=", "np", ".", "arange", "(", "targets", ".", "size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.dataset.MNIST.__len__": [[67, 69], ["None"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "idxs", ".", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.dataset.MNIST.__getitem__": [[70, 79], ["torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "i", ")", ":", "\n", "        ", "idx", "=", "self", ".", "idxs", "[", "i", "]", "\n", "data", "=", "self", ".", "raw_dataset", "[", "idx", "]", "[", "0", "]", "\n", "\n", "if", "self", ".", "train", ":", "# when training, label is not considered", "\n", "            ", "label", "=", "torch", ".", "LongTensor", "(", "[", "1", "]", ")", "\n", "", "else", ":", "# if label is one, it means it is anomalous", "\n", "            ", "label", "=", "torch", ".", "LongTensor", "(", "[", "self", ".", "raw_dataset", ".", "targets", "[", "idx", "]", "!=", "self", ".", "target", "]", ")", "\n", "", "return", "data", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.dataset.FMNIST.__init__": [[82, 100], ["torchvision.datasets.FashionMNIST", "torchvision.datasets.FashionMNIST", "torchvision.datasets.FashionMNIST", "torchvision.datasets.FashionMNIST", "dataset.FMNIST.raw_dataset.targets.numpy", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "numpy.arange", "numpy.where", "torchvision.ToTensor", "torchvision.ToTensor", "torchvision.Resize", "torchvision.Resize", "torchvision.ToTensor", "torchvision.ToTensor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dataroot", ",", "target", ",", "imagesize", ",", "train", ")", ":", "\n", "        ", "self", ".", "target", "=", "target", "\n", "self", ".", "train", "=", "train", "\n", "if", "imagesize", "is", "None", ":", "\n", "            ", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "# first, convert image to PyTorch tensor [0.,1.]", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "imagesize", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "# first, convert image to PyTorch tensor [0.,1.]", "\n", "]", ")", "\n", "", "self", ".", "raw_dataset", "=", "torchvision", ".", "datasets", ".", "FashionMNIST", "(", "root", "=", "dataroot", ",", "train", "=", "train", ",", "transform", "=", "transform", ",", "download", "=", "True", ")", "\n", "targets", "=", "self", ".", "raw_dataset", ".", "targets", ".", "numpy", "(", ")", "\n", "if", "self", ".", "train", ":", "\n", "            ", "self", ".", "idxs", "=", "np", ".", "where", "(", "targets", "==", "target", ")", "[", "0", "]", "\n", "", "else", ":", "# test", "\n", "            ", "self", ".", "idxs", "=", "np", ".", "arange", "(", "targets", ".", "size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.dataset.FMNIST.__len__": [[102, 104], ["None"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "idxs", ".", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.dataset.FMNIST.__getitem__": [[105, 114], ["torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "i", ")", ":", "\n", "        ", "idx", "=", "self", ".", "idxs", "[", "i", "]", "\n", "data", "=", "self", ".", "raw_dataset", "[", "idx", "]", "[", "0", "]", "\n", "\n", "if", "self", ".", "train", ":", "# when training, label is not considered", "\n", "            ", "label", "=", "torch", ".", "LongTensor", "(", "[", "1", "]", ")", "\n", "", "else", ":", "# if label is one, it means it is anomalous", "\n", "            ", "label", "=", "torch", ".", "LongTensor", "(", "[", "self", ".", "raw_dataset", ".", "targets", "[", "idx", "]", "!=", "self", ".", "target", "]", ")", "\n", "", "return", "data", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.dataset.get_trainloader": [[116, 126], ["torch.DataLoader", "datatype.lower", "dataset.MNIST", "datatype.lower", "dataset.CIFAR10", "datatype.lower", "dataset.FMNIST"], "function", ["None"], ["", "", "def", "get_trainloader", "(", "datatype", ",", "dataroot", ",", "target", ",", "batchsize", ",", "nworkers", ",", "imagesize", "=", "None", ")", ":", "\n", "    ", "if", "datatype", ".", "lower", "(", ")", "in", "[", "'mnist'", "]", ":", "\n", "        ", "traindataset", "=", "MNIST", "(", "dataroot", ",", "target", ",", "imagesize", "=", "imagesize", ",", "train", "=", "True", ")", "\n", "", "elif", "datatype", ".", "lower", "(", ")", "in", "[", "'cifar10'", "]", ":", "\n", "        ", "traindataset", "=", "CIFAR10", "(", "dataroot", ",", "target", ",", "imagesize", "=", "imagesize", ",", "train", "=", "True", ")", "\n", "", "elif", "datatype", ".", "lower", "(", ")", "in", "[", "'fmnist'", "]", ":", "\n", "        ", "traindataset", "=", "FMNIST", "(", "dataroot", ",", "target", ",", "imagesize", "=", "imagesize", ",", "train", "=", "True", ")", "\n", "\n", "", "trainloader", "=", "torchdata", ".", "DataLoader", "(", "traindataset", ",", "batch_size", "=", "batchsize", ",", "shuffle", "=", "True", ",", "num_workers", "=", "nworkers", ")", "\n", "return", "trainloader", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.dataset.get_testloader": [[128, 138], ["torch.DataLoader", "datatype.lower", "dataset.MNIST", "datatype.lower", "dataset.CIFAR10", "datatype.lower", "dataset.FMNIST"], "function", ["None"], ["", "def", "get_testloader", "(", "datatype", ",", "dataroot", ",", "target", ",", "batchsize", ",", "nworkers", ",", "imagesize", "=", "None", ")", ":", "\n", "    ", "if", "datatype", ".", "lower", "(", ")", "in", "[", "'mnist'", "]", ":", "\n", "        ", "testdataset", "=", "MNIST", "(", "dataroot", ",", "target", ",", "imagesize", "=", "imagesize", ",", "train", "=", "False", ")", "\n", "", "elif", "datatype", ".", "lower", "(", ")", "in", "[", "'cifar10'", "]", ":", "\n", "        ", "testdataset", "=", "CIFAR10", "(", "dataroot", ",", "target", ",", "imagesize", "=", "imagesize", ",", "train", "=", "False", ")", "\n", "", "elif", "datatype", ".", "lower", "(", ")", "in", "[", "'fmnist'", "]", ":", "\n", "        ", "testdataset", "=", "FMNIST", "(", "dataroot", ",", "target", ",", "imagesize", "=", "imagesize", ",", "train", "=", "False", ")", "\n", "\n", "", "testloader", "=", "torchdata", ".", "DataLoader", "(", "testdataset", ",", "batch_size", "=", "batchsize", ",", "shuffle", "=", "False", ",", "num_workers", "=", "nworkers", ")", "\n", "return", "testloader", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_dsvdd.init_center_c": [[14, 30], ["torch.zeros", "model.eval", "torch.no_grad", "inputs.to.to", "model", "torch.sum", "abs", "abs"], "function", ["None"], ["def", "init_center_c", "(", "model", ",", "trainloader", ",", "device", ")", ":", "\n", "    ", "eps", "=", "0.1", "\n", "c", "=", "torch", ".", "zeros", "(", "model", ".", "rep_dim", ",", "device", "=", "device", ")", "\n", "model", ".", "eval", "(", ")", "\n", "n_samples", "=", "0", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "(", "inputs", ",", "_", ")", "in", "trainloader", ":", "\n", "            ", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "outputs", "=", "model", "(", "inputs", ")", "\n", "n_samples", "+=", "outputs", ".", "shape", "[", "0", "]", "\n", "c", "+=", "torch", ".", "sum", "(", "outputs", ",", "dim", "=", "0", ")", "\n", "\n", "", "", "c", "/=", "n_samples", "\n", "c", "[", "(", "abs", "(", "c", ")", "<", "eps", ")", "&", "(", "c", "<", "0", ")", "]", "=", "-", "eps", "\n", "c", "[", "(", "abs", "(", "c", ")", "<", "eps", ")", "&", "(", "c", ">", "0", ")", "]", "=", "eps", "\n", "return", "c", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_dsvdd.train": [[32, 51], ["model.train", "scheduler.step", "enumerate", "print", "logger.write", "inputs.to.to", "optimizer.zero_grad", "model", "torch.sum", "torch.mean", "torch.mean.backward", "torch.mean.item", "optimizer.step", "print", "len", "len"], "function", ["home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_vae.train"], ["", "def", "train", "(", "epoch", ",", "model", ",", "center", ",", "trainloader", ",", "optimizer", ",", "scheduler", ",", "logger", ",", "device", ")", ":", "\n", "    ", "train_loss", "=", "0.", "\n", "model", ".", "train", "(", ")", "# train mode", "\n", "\n", "scheduler", ".", "step", "(", ")", "# update optimizer lr", "\n", "\n", "for", "batch_idx", ",", "(", "inputs", ",", "_", ")", "in", "enumerate", "(", "trainloader", ")", ":", "\n", "        ", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "outputs", "=", "model", "(", "inputs", ")", "\n", "dist", "=", "torch", ".", "sum", "(", "(", "outputs", "-", "center", ")", "**", "2", ",", "dim", "=", "1", ")", "\n", "loss", "=", "torch", ".", "mean", "(", "dist", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "train_loss", "+=", "loss", ".", "item", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "print", "(", "'  Training... Epoch: %4d | Iter: %4d/%4d | Mean Loss: %.4f '", "%", "(", "epoch", ",", "batch_idx", "+", "1", ",", "len", "(", "trainloader", ")", ",", "train_loss", "/", "(", "batch_idx", "+", "1", ")", ")", ",", "end", "=", "'\\r'", ")", "\n", "", "print", "(", "''", ")", "\n", "logger", ".", "write", "(", "'  Training... Epoch: %4d | Iter: %4d/%4d | Mean Loss: %.4f \\n'", "%", "(", "epoch", ",", "batch_idx", "+", "1", ",", "len", "(", "trainloader", ")", ",", "train_loss", "/", "(", "batch_idx", "+", "1", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_dsvdd.test": [[53, 78], ["model.eval", "print", "numpy.concatenate", "numpy.concatenate", "sklearn.metrics.roc_auc_score", "sklearn.metrics.precision_recall_curve", "sklearn.metrics.auc", "torch.no_grad", "enumerate", "inputs.to.to", "model", "torch.sum", "scores_list.append", "targets_list.append", "print", "torch.sum.cpu().numpy", "np.concatenate.cpu().numpy", "torch.sum.cpu", "np.concatenate.cpu", "len"], "function", ["None"], ["", "def", "test", "(", "model", ",", "center", ",", "testloader", ",", "device", ")", ":", "\n", "    ", "test_loss", "=", "0.", "\n", "scores_list", "=", "[", "]", "\n", "targets_list", "=", "[", "]", "\n", "\n", "model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "batch_idx", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "testloader", ")", ":", "\n", "            ", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "outputs", "=", "model", "(", "inputs", ")", "\n", "dist", "=", "torch", ".", "sum", "(", "(", "outputs", "-", "center", ")", "**", "2", ",", "dim", "=", "1", ")", "\n", "scores_list", ".", "append", "(", "dist", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "targets_list", ".", "append", "(", "targets", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "print", "(", "'  Test... Iter: %4d/%4d '", "%", "(", "batch_idx", "+", "1", ",", "len", "(", "testloader", ")", ",", ")", ",", "end", "=", "'\\r'", ")", "\n", "", "", "print", "(", "''", ")", "\n", "\n", "test_loss", "=", "test_loss", "/", "(", "batch_idx", "+", "1", ")", "\n", "scores", "=", "np", ".", "concatenate", "(", "scores_list", ")", "\n", "targets", "=", "np", ".", "concatenate", "(", "targets_list", ")", "\n", "auroc", "=", "metrics", ".", "roc_auc_score", "(", "targets", ",", "scores", ")", "\n", "\n", "precision", ",", "recall", ",", "_", "=", "metrics", ".", "precision_recall_curve", "(", "targets", ",", "scores", ")", "\n", "aupr", "=", "metrics", ".", "auc", "(", "recall", ",", "precision", ")", "\n", "\n", "return", "auroc", ",", "aupr", ",", "test_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_dsvdd.main": [[80, 117], ["utils.config_backup_get_log", "utils.get_device", "utils.set_seed", "dataset.get_trainloader", "dataset.get_testloader", "models.DSVDD().to", "torch.optim.Adam", "torch.optim.lr_scheduler.MultiStepLR", "os.path.join", "main_dsvdd.init_center_c", "print", "time.time", "range", "main_dsvdd.test", "print", "logger.write", "torch.save", "time.time", "divmod", "divmod", "print", "print", "logger.write", "logger.write", "models.DSVDD().to.parameters", "main_dsvdd.train", "models.DSVDD().to.state_dict", "models.DSVDD", "str", "str", "int", "int", "int", "int"], "function", ["home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.utils.config_backup_get_log", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.utils.get_device", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.utils.set_seed", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.dataset.get_trainloader", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.dataset.get_testloader", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_dsvdd.init_center_c", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_vae.test", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_vae.train"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "logger", ",", "result_dir", ",", "dir_name", "=", "utils", ".", "config_backup_get_log", "(", "args", ",", "__file__", ")", "\n", "device", "=", "utils", ".", "get_device", "(", ")", "\n", "utils", ".", "set_seed", "(", "args", ".", "seed", ",", "device", ")", "\n", "\n", "trainloader", "=", "dataset", ".", "get_trainloader", "(", "args", ".", "data", ",", "args", ".", "dataroot", ",", "args", ".", "target", ",", "args", ".", "bstrain", ",", "args", ".", "nworkers", ")", "\n", "testloader", "=", "dataset", ".", "get_testloader", "(", "args", ".", "data", ",", "args", ".", "dataroot", ",", "args", ".", "target", ",", "args", ".", "bstest", ",", "args", ".", "nworkers", ")", "\n", "\n", "import", "models", "\n", "model", "=", "models", ".", "DSVDD", "(", "args", ".", "data", ")", ".", "to", "(", "device", ")", "\n", "\n", "optimizer", "=", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "weight_decay", "=", "1e-4", ")", "\n", "scheduler", "=", "optim", ".", "lr_scheduler", ".", "MultiStepLR", "(", "optimizer", ",", "milestones", "=", "args", ".", "milestones", ",", "gamma", "=", "0.1", ")", "\n", "\n", "chpt_name", "=", "'DSVDD_%s_target%s_seed%s.pth'", "%", "(", "args", ".", "data", ",", "str", "(", "args", ".", "target", ")", ",", "str", "(", "args", ".", "seed", ")", ")", "\n", "chpt_name", "=", "os", ".", "path", ".", "join", "(", "\"./chpt\"", ",", "chpt_name", ")", "\n", "\n", "center", "=", "init_center_c", "(", "model", ",", "trainloader", ",", "device", ")", "\n", "print", "(", "'==> Start training ..'", ")", "\n", "\n", "start", "=", "time", ".", "time", "(", ")", "\n", "for", "epoch", "in", "range", "(", "args", ".", "maxepoch", ")", ":", "\n", "        ", "train", "(", "epoch", ",", "model", ",", "center", ",", "trainloader", ",", "optimizer", ",", "scheduler", ",", "logger", ",", "device", ")", "\n", "\n", "", "auroc", ",", "aupr", ",", "_", "=", "test", "(", "model", ",", "center", ",", "testloader", ",", "device", ")", "\n", "print", "(", "'Epoch: %4d AUROC: %.6f AUPR: %.6f'", "%", "(", "epoch", ",", "auroc", ",", "aupr", ")", ")", "\n", "logger", ".", "write", "(", "'Epoch: %4d AUROC: %.6f AUPR: %.6f \\n'", "%", "(", "epoch", ",", "auroc", ",", "aupr", ")", ")", "\n", "state", "=", "{", "'model'", ":", "model", ".", "state_dict", "(", ")", ",", "'auroc'", ":", "auroc", ",", "'epoch'", ":", "epoch", "}", "\n", "torch", ".", "save", "(", "state", ",", "chpt_name", ")", "\n", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "hours", ",", "rem", "=", "divmod", "(", "end", "-", "start", ",", "3600", ")", "\n", "minutes", ",", "seconds", "=", "divmod", "(", "rem", ",", "60", ")", "\n", "print", "(", "'AUROC... '", ",", "auroc", ")", "\n", "print", "(", "\"Elapsed Time: {:0>2}:{:0>2}:{:05.2f}\"", ".", "format", "(", "int", "(", "hours", ")", ",", "int", "(", "minutes", ")", ",", "seconds", ")", ")", "\n", "logger", ".", "write", "(", "\"AUROC: %.8f\\n\"", "%", "(", "auroc", ")", ")", "\n", "logger", ".", "write", "(", "\"Elapsed Time: {:0>2}:{:0>2}:{:05.2f}\\n\"", ".", "format", "(", "int", "(", "hours", ")", ",", "int", "(", "minutes", ")", ",", "seconds", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_ae.train": [[13, 30], ["model.train", "scheduler.step", "enumerate", "print", "logger.write", "inputs.to.to", "optimizer.zero_grad", "model", "torch.sum", "torch.mean", "torch.mean.backward", "torch.mean.item", "optimizer.step", "print", "tuple", "len", "range", "len", "model.dim"], "function", ["home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_vae.train"], ["def", "train", "(", "epoch", ",", "model", ",", "trainloader", ",", "optimizer", ",", "scheduler", ",", "logger", ",", "device", ")", ":", "\n", "    ", "train_loss", "=", "0.", "\n", "model", ".", "train", "(", ")", "# train mode", "\n", "\n", "scheduler", ".", "step", "(", ")", "# update optimizer lr", "\n", "for", "batch_idx", ",", "(", "inputs", ",", "_", ")", "in", "enumerate", "(", "trainloader", ")", ":", "\n", "        ", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "outputs", "=", "model", "(", "inputs", ")", "\n", "scores", "=", "torch", ".", "sum", "(", "(", "outputs", "-", "inputs", ")", "**", "2", ",", "dim", "=", "tuple", "(", "range", "(", "1", ",", "outputs", ".", "dim", "(", ")", ")", ")", ")", "\n", "recon_loss", "=", "torch", ".", "mean", "(", "scores", ")", "# reconstruction loss", "\n", "recon_loss", ".", "backward", "(", ")", "\n", "train_loss", "+=", "recon_loss", ".", "item", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "print", "(", "'  Training... Epoch: %4d | Iter: %4d/%4d | Mean Loss: %.4f '", "%", "(", "epoch", ",", "batch_idx", "+", "1", ",", "len", "(", "trainloader", ")", ",", "train_loss", "/", "(", "batch_idx", "+", "1", ")", ")", ",", "end", "=", "'\\r'", ")", "\n", "", "print", "(", "''", ")", "\n", "logger", ".", "write", "(", "(", "'  Training... Epoch: %4d | Iter: %4d/%4d | Mean Loss: %.4f \\n'", "%", "(", "epoch", ",", "batch_idx", "+", "1", ",", "len", "(", "trainloader", ")", ",", "train_loss", "/", "(", "batch_idx", "+", "1", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_ae.test": [[32, 57], ["model.eval", "print", "numpy.concatenate", "numpy.concatenate", "sklearn.metrics.roc_auc_score", "sklearn.metrics.precision_recall_curve", "sklearn.metrics.auc", "torch.no_grad", "enumerate", "inputs.to.to", "model", "torch.sum", "scores_list.append", "targets_list.append", "print", "torch.sum.cpu().numpy", "np.concatenate.cpu().numpy", "tuple", "range", "torch.sum.cpu", "np.concatenate.cpu", "len", "model.dim"], "function", ["None"], ["", "def", "test", "(", "model", ",", "testloader", ",", "device", ")", ":", "\n", "    ", "test_loss", "=", "0.", "\n", "scores_list", "=", "[", "]", "\n", "targets_list", "=", "[", "]", "\n", "\n", "model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "batch_idx", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "testloader", ")", ":", "\n", "            ", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "outputs", "=", "model", "(", "inputs", ")", "\n", "scores", "=", "torch", ".", "sum", "(", "(", "outputs", "-", "inputs", ")", "**", "2", ",", "dim", "=", "tuple", "(", "range", "(", "1", ",", "outputs", ".", "dim", "(", ")", ")", ")", ")", "\n", "scores_list", ".", "append", "(", "scores", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "targets_list", ".", "append", "(", "targets", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "print", "(", "'  Test... Iter: %4d/%4d '", "%", "(", "batch_idx", "+", "1", ",", "len", "(", "testloader", ")", ",", ")", ",", "end", "=", "'\\r'", ")", "\n", "", "", "print", "(", "''", ")", "\n", "\n", "test_loss", "=", "test_loss", "/", "(", "batch_idx", "+", "1", ")", "\n", "scores", "=", "np", ".", "concatenate", "(", "scores_list", ")", "\n", "targets", "=", "np", ".", "concatenate", "(", "targets_list", ")", "\n", "auroc", "=", "metrics", ".", "roc_auc_score", "(", "targets", ",", "scores", ")", "\n", "\n", "precision", ",", "recall", ",", "_", "=", "metrics", ".", "precision_recall_curve", "(", "targets", ",", "scores", ")", "\n", "aupr", "=", "metrics", ".", "auc", "(", "recall", ",", "precision", ")", "\n", "\n", "return", "auroc", ",", "aupr", ",", "test_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_ae.main": [[59, 94], ["utils.config_backup_get_log", "utils.get_device", "utils.set_seed", "dataset.get_trainloader", "dataset.get_testloader", "models.get_ae().to", "torch.optim.Adam", "torch.optim.lr_scheduler.MultiStepLR", "os.path.join", "print", "time.time", "range", "main_ae.test", "print", "logger.write", "torch.save", "time.time", "divmod", "divmod", "print", "print", "logger.write", "logger.write", "models.get_ae().to.parameters", "main_ae.train", "models.get_ae().to.state_dict", "models.get_ae", "str", "str", "int", "int", "int", "int"], "function", ["home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.utils.config_backup_get_log", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.utils.get_device", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.utils.set_seed", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.dataset.get_trainloader", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.dataset.get_testloader", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_vae.test", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_vae.train", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.get_ae"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "logger", ",", "result_dir", ",", "dir_name", "=", "utils", ".", "config_backup_get_log", "(", "args", ",", "__file__", ")", "\n", "device", "=", "utils", ".", "get_device", "(", ")", "\n", "utils", ".", "set_seed", "(", "args", ".", "seed", ",", "device", ")", "\n", "\n", "trainloader", "=", "dataset", ".", "get_trainloader", "(", "args", ".", "data", ",", "args", ".", "dataroot", ",", "args", ".", "target", ",", "args", ".", "bstrain", ",", "args", ".", "nworkers", ")", "\n", "testloader", "=", "dataset", ".", "get_testloader", "(", "args", ".", "data", ",", "args", ".", "dataroot", ",", "args", ".", "target", ",", "args", ".", "bstest", ",", "args", ".", "nworkers", ")", "\n", "\n", "import", "models", "\n", "model", "=", "models", ".", "get_ae", "(", "args", ".", "data", ")", ".", "to", "(", "device", ")", "\n", "\n", "optimizer", "=", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "weight_decay", "=", "1e-4", ")", "\n", "scheduler", "=", "optim", ".", "lr_scheduler", ".", "MultiStepLR", "(", "optimizer", ",", "milestones", "=", "args", ".", "milestones", ",", "gamma", "=", "0.1", ")", "\n", "\n", "chpt_name", "=", "'AE_%s_target%s_seed%s.pth'", "%", "(", "args", ".", "data", ",", "str", "(", "args", ".", "target", ")", ",", "str", "(", "args", ".", "seed", ")", ")", "\n", "chpt_name", "=", "os", ".", "path", ".", "join", "(", "\"./chpt\"", ",", "chpt_name", ")", "\n", "\n", "print", "(", "'==> Start training ..'", ")", "\n", "start", "=", "time", ".", "time", "(", ")", "\n", "for", "epoch", "in", "range", "(", "args", ".", "maxepoch", ")", ":", "\n", "        ", "train", "(", "epoch", ",", "model", ",", "trainloader", ",", "optimizer", ",", "scheduler", ",", "logger", ",", "device", ")", "\n", "\n", "", "auroc", ",", "aupr", ",", "_", "=", "test", "(", "model", ",", "testloader", ",", "device", ")", "\n", "print", "(", "'Epoch: %4d AUROC: %.6f AUPR: %.6f'", "%", "(", "epoch", ",", "auroc", ",", "aupr", ")", ")", "\n", "logger", ".", "write", "(", "'Epoch: %4d AUROC: %.6f AUPR: %.6f \\n'", "%", "(", "epoch", ",", "auroc", ",", "aupr", ")", ")", "\n", "state", "=", "{", "'model'", ":", "model", ".", "state_dict", "(", ")", ",", "'auroc'", ":", "auroc", ",", "'epoch'", ":", "epoch", "}", "\n", "torch", ".", "save", "(", "state", ",", "chpt_name", ")", "\n", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "hours", ",", "rem", "=", "divmod", "(", "end", "-", "start", ",", "3600", ")", "\n", "minutes", ",", "seconds", "=", "divmod", "(", "rem", ",", "60", ")", "\n", "print", "(", "'AUROC... '", ",", "auroc", ")", "\n", "print", "(", "\"Elapsed Time: {:0>2}:{:0>2}:{:05.2f}\"", ".", "format", "(", "int", "(", "hours", ")", ",", "int", "(", "minutes", ")", ",", "seconds", ")", ")", "\n", "logger", ".", "write", "(", "\"AUROC: %.8f\\n\"", "%", "(", "auroc", ")", ")", "\n", "logger", ".", "write", "(", "\"Elapsed Time: {:0>2}:{:0>2}:{:05.2f}\\n\"", ".", "format", "(", "int", "(", "hours", ")", ",", "int", "(", "minutes", ")", ",", "seconds", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_pgn.calculate_scores": [[13, 17], ["scores.sum.sum", "logvar.exp", "mu.pow"], "function", ["None"], ["def", "calculate_scores", "(", "mu", ",", "logvar", ")", ":", "\n", "    ", "scores", "=", "-", "0.5", "*", "(", "1", "+", "logvar", "-", "mu", ".", "pow", "(", "2", ")", "-", "logvar", ".", "exp", "(", ")", ")", "\n", "scores", "=", "scores", ".", "sum", "(", "dim", "=", "1", ")", "\n", "return", "scores", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_pgn.loss_function": [[18, 21], ["torch.sum", "main_pgn.calculate_scores"], "function", ["home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_pgn.calculate_scores"], ["", "def", "loss_function", "(", "mu", ",", "logvar", ")", ":", "\n", "    ", "kl_div_loss", "=", "torch", ".", "sum", "(", "calculate_scores", "(", "mu", ",", "logvar", ")", ")", "\n", "return", "kl_div_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_pgn.train": [[22, 39], ["model.train", "scheduler.step", "enumerate", "print", "logger.write", "[].squeeze", "inputs.to.to", "optimizer.zero_grad", "model", "main_pgn.loss_function", "loss_function.backward", "loss_function.item", "optimizer.step", "print", "len", "inputs.to.detach().cpu().numpy", "len", "inputs.to.detach().cpu", "inputs.to.detach"], "function", ["home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_vae.train", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_vae.loss_function"], ["", "def", "train", "(", "epoch", ",", "model", ",", "trainloader", ",", "optimizer", ",", "scheduler", ",", "logger", ",", "device", ")", ":", "\n", "    ", "train_loss", "=", "0.", "\n", "model", ".", "train", "(", ")", "# train mode", "\n", "scheduler", ".", "step", "(", ")", "# update optimizer lr", "\n", "\n", "for", "batch_idx", ",", "(", "inputs", ",", "_", ")", "in", "enumerate", "(", "trainloader", ")", ":", "\n", "        ", "img_data", "=", "inputs", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", ".", "squeeze", "(", ")", "\n", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "mu", ",", "logvar", "=", "model", "(", "inputs", ")", "\n", "loss", "=", "loss_function", "(", "mu", ",", "logvar", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "train_loss", "+=", "loss", ".", "item", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "print", "(", "'  Training... Epoch: %4d | Iter: %4d/%4d | Mean Loss: %.4f '", "%", "(", "epoch", ",", "batch_idx", "+", "1", ",", "len", "(", "trainloader", ")", ",", "train_loss", "/", "(", "batch_idx", "+", "1", ")", ")", ",", "end", "=", "'\\r'", ")", "\n", "", "print", "(", "''", ")", "\n", "logger", ".", "write", "(", "'  Training... Epoch: %4d | Iter: %4d/%4d | Mean Loss: %.4f \\n'", "%", "(", "epoch", ",", "batch_idx", "+", "1", ",", "len", "(", "trainloader", ")", ",", "train_loss", "/", "(", "batch_idx", "+", "1", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_pgn.pretrain": [[41, 65], ["models.get_ae().to", "torch.optim.Adam", "torch.optim.lr_scheduler.MultiStepLR", "print", "models.get_ae().to.train", "range", "models.get_ae().to.parameters", "optim.lr_scheduler.MultiStepLR.step", "enumerate", "print", "models.get_ae", "inputs.to.to", "optim.Adam.zero_grad", "models.get_ae().to.", "torch.sum", "torch.mean", "torch.mean.item", "torch.mean.backward", "optim.Adam.step", "print", "tuple", "range", "len", "ae_net.dim"], "function", ["home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_vae.train", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.get_ae"], ["", "def", "pretrain", "(", "trainloader", ",", "datatype", ",", "device", ")", ":", "\n", "    ", "import", "models", "\n", "ae_net", "=", "models", ".", "get_ae", "(", "datatype", ")", ".", "to", "(", "device", ")", "\n", "optimizer", "=", "optim", ".", "Adam", "(", "ae_net", ".", "parameters", "(", ")", ",", "lr", "=", "0.0001", ",", "weight_decay", "=", "1e-4", ")", "\n", "scheduler", "=", "optim", ".", "lr_scheduler", ".", "MultiStepLR", "(", "optimizer", ",", "milestones", "=", "[", "75", "]", ",", "gamma", "=", "0.1", ")", "\n", "\n", "print", "(", "'==> Start pretraining ..'", ")", "\n", "ae_net", ".", "train", "(", ")", "\n", "for", "epoch", "in", "range", "(", "100", ")", ":", "\n", "        ", "scheduler", ".", "step", "(", ")", "# update optimizer lr", "\n", "train_loss", "=", "0.", "\n", "for", "batch_idx", ",", "(", "inputs", ",", "_", ")", "in", "enumerate", "(", "trainloader", ")", ":", "\n", "            ", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "outputs", "=", "ae_net", "(", "inputs", ")", "\n", "scores", "=", "torch", ".", "sum", "(", "(", "outputs", "-", "inputs", ")", "**", "2", ",", "dim", "=", "tuple", "(", "range", "(", "1", ",", "outputs", ".", "dim", "(", ")", ")", ")", ")", "\n", "recon_loss", "=", "torch", ".", "mean", "(", "scores", ")", "# reconstruction loss", "\n", "train_loss", "+=", "recon_loss", ".", "item", "(", ")", "\n", "recon_loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "print", "(", "'  Pretraining... Epoch: %4d | Iter: %4d/%4d | Mean Loss: %.4f '", "%", "(", "epoch", ",", "batch_idx", "+", "1", ",", "len", "(", "trainloader", ")", ",", "train_loss", "/", "(", "batch_idx", "+", "1", ")", ")", ",", "end", "=", "'\\r'", ")", "\n", "", "print", "(", "\"\"", ")", "\n", "", "return", "ae_net", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_pgn.test": [[67, 116], ["model.eval", "print", "numpy.concatenate", "numpy.concatenate", "sklearn.metrics.roc_auc_score", "numpy.concatenate", "sklearn.metrics.roc_auc_score", "print", "sklearn.metrics.precision_recall_curve", "sklearn.metrics.auc", "torch.no_grad", "enumerate", "inputs.to.to", "range", "torch.cat", "torch.cat", "torch.mean", "torch.mean", "main_pgn.calculate_scores", "scores_wo_variation_list.append", "torch.cat().mean", "scores_list.append", "targets_list.append", "print", "model", "main_pgn.calculate_scores", "kl_dropout.append", "torch.cat.append", "torch.cat.append", "calculate_scores.cpu().numpy", "torch.cat().mean.cpu().numpy", "np.concatenate.cpu().numpy", "calculate_scores.unsqueeze", "mu.unsqueeze", "logvar.unsqueeze", "torch.cat", "calculate_scores.cpu", "torch.cat().mean.cpu", "np.concatenate.cpu", "len"], "function", ["home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_pgn.calculate_scores", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_pgn.calculate_scores"], ["", "def", "test", "(", "model", ",", "testloader", ",", "T", ",", "device", ")", ":", "\n", "    ", "test_loss", "=", "0.", "\n", "scores_list", "=", "[", "]", "\n", "scores_wo_variation_list", "=", "[", "]", "\n", "targets_list", "=", "[", "]", "\n", "\n", "model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "batch_idx", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "testloader", ")", ":", "\n", "            ", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "kl_dropout", "=", "[", "]", "\n", "mu_dropout", "=", "[", "]", "\n", "logvar_dropout", "=", "[", "]", "\n", "for", "t", "in", "range", "(", "T", ")", ":", "\n", "                ", "mu", ",", "logvar", "=", "model", "(", "inputs", ")", "\n", "kl_value", "=", "calculate_scores", "(", "mu", ",", "logvar", ")", "\n", "kl_dropout", ".", "append", "(", "kl_value", ".", "unsqueeze", "(", "dim", "=", "1", ")", ")", "\n", "mu_dropout", ".", "append", "(", "mu", ".", "unsqueeze", "(", "dim", "=", "2", ")", ")", "\n", "logvar_dropout", ".", "append", "(", "logvar", ".", "unsqueeze", "(", "dim", "=", "2", ")", ")", "\n", "\n", "", "mu_dropout", "=", "torch", ".", "cat", "(", "mu_dropout", ",", "dim", "=", "2", ")", "\n", "logvar_dropout", "=", "torch", ".", "cat", "(", "logvar_dropout", ",", "dim", "=", "2", ")", "\n", "mu_mean", "=", "torch", ".", "mean", "(", "mu_dropout", ",", "dim", "=", "2", ")", "\n", "logvar_mean", "=", "torch", ".", "mean", "(", "logvar_dropout", ",", "dim", "=", "2", ")", "\n", "kl_value", "=", "calculate_scores", "(", "mu_mean", ",", "logvar_mean", ")", "# anomaly scores without taking into account variation", "\n", "scores_wo_variation_list", ".", "append", "(", "kl_value", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "scores", "=", "torch", ".", "cat", "(", "kl_dropout", ",", "dim", "=", "1", ")", ".", "mean", "(", "dim", "=", "1", ")", "# anomaly scores considering variation", "\n", "scores_list", ".", "append", "(", "scores", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "targets_list", ".", "append", "(", "targets", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "print", "(", "'  Test... Iter: %4d/%4d '", "%", "(", "batch_idx", "+", "1", ",", "len", "(", "testloader", ")", ",", ")", ",", "end", "=", "'\\r'", ")", "\n", "", "", "print", "(", "''", ")", "\n", "\n", "test_loss", "=", "test_loss", "/", "(", "batch_idx", "+", "1", ")", "\n", "targets", "=", "np", ".", "concatenate", "(", "targets_list", ")", "\n", "scores_total", "=", "np", ".", "concatenate", "(", "scores_list", ")", "\n", "auroc", "=", "metrics", ".", "roc_auc_score", "(", "targets", ",", "scores_total", ")", "\n", "\n", "scores_wo_variation_list_total", "=", "np", ".", "concatenate", "(", "scores_wo_variation_list", ")", "\n", "auroc_wo_variation", "=", "metrics", ".", "roc_auc_score", "(", "targets", ",", "scores_wo_variation_list_total", ")", "\n", "\n", "print", "(", "'AUROC (proposed): %.4f, AUROC (without variation): %.4f'", "%", "(", "auroc", ",", "auroc_wo_variation", ")", ")", "\n", "\n", "# calculate AUPR", "\n", "precision", ",", "recall", ",", "_", "=", "metrics", ".", "precision_recall_curve", "(", "targets", ",", "scores_total", ")", "\n", "aupr", "=", "metrics", ".", "auc", "(", "recall", ",", "precision", ")", "\n", "\n", "return", "auroc", ",", "aupr", ",", "test_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_pgn.main": [[117, 153], ["utils.config_backup_get_log", "utils.get_device", "utils.set_seed", "dataset.get_trainloader", "dataset.get_testloader", "models.get_pgn_encoder().to", "torch.optim.Adam", "torch.optim.lr_scheduler.MultiStepLR", "os.path.join", "print", "time.time", "range", "main_pgn.test", "print", "logger.write", "torch.save", "time.time", "divmod", "divmod", "print", "print", "logger.write", "logger.write", "models.get_pgn_encoder().to.parameters", "main_pgn.train", "models.get_pgn_encoder().to.state_dict", "models.get_pgn_encoder", "str", "str", "int", "int", "int", "int"], "function", ["home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.utils.config_backup_get_log", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.utils.get_device", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.utils.set_seed", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.dataset.get_trainloader", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.dataset.get_testloader", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_vae.test", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_vae.train", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.get_pgn_encoder"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "logger", ",", "result_dir", ",", "dir_name", "=", "utils", ".", "config_backup_get_log", "(", "args", ",", "__file__", ")", "\n", "device", "=", "utils", ".", "get_device", "(", ")", "\n", "utils", ".", "set_seed", "(", "args", ".", "seed", ",", "device", ")", "\n", "\n", "trainloader", "=", "dataset", ".", "get_trainloader", "(", "args", ".", "data", ",", "args", ".", "dataroot", ",", "args", ".", "target", ",", "args", ".", "bstrain", ",", "args", ".", "nworkers", ")", "\n", "testloader", "=", "dataset", ".", "get_testloader", "(", "args", ".", "data", ",", "args", ".", "dataroot", ",", "args", ".", "target", ",", "args", ".", "bstest", ",", "args", ".", "nworkers", ")", "\n", "\n", "import", "models", "\n", "model", "=", "models", ".", "get_pgn_encoder", "(", "args", ".", "data", ",", "args", ".", "dropoutp", ")", ".", "to", "(", "device", ")", "\n", "\n", "optimizer", "=", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "weight_decay", "=", "1e-4", ")", "\n", "scheduler", "=", "optim", ".", "lr_scheduler", ".", "MultiStepLR", "(", "optimizer", ",", "milestones", "=", "args", ".", "milestones", ",", "gamma", "=", "0.1", ")", "\n", "\n", "chpt_name", "=", "'GPN_%s_target%s_seed%s.pth'", "%", "(", "args", ".", "data", ",", "str", "(", "args", ".", "target", ")", ",", "str", "(", "args", ".", "seed", ")", ")", "\n", "chpt_name", "=", "os", ".", "path", ".", "join", "(", "\"./chpt\"", ",", "chpt_name", ")", "\n", "\n", "print", "(", "'==> Start training ..'", ")", "\n", "start", "=", "time", ".", "time", "(", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "args", ".", "maxepoch", ")", ":", "\n", "        ", "train", "(", "epoch", ",", "model", ",", "trainloader", ",", "optimizer", ",", "scheduler", ",", "logger", ",", "device", ")", "\n", "\n", "", "auroc", ",", "aupr", ",", "_", "=", "test", "(", "model", ",", "testloader", ",", "args", ".", "mcdropoutT", ",", "device", ")", "\n", "print", "(", "'Epoch: %4d AUROC: %.6f AUPR: %.6f'", "%", "(", "epoch", ",", "auroc", ",", "aupr", ")", ")", "\n", "logger", ".", "write", "(", "'Epoch: %4d AUROC: %.6f AUPR: %.6f \\n'", "%", "(", "epoch", ",", "auroc", ",", "aupr", ")", ")", "\n", "state", "=", "{", "'model'", ":", "model", ".", "state_dict", "(", ")", ",", "'auroc'", ":", "auroc", ",", "'epoch'", ":", "epoch", "}", "\n", "torch", ".", "save", "(", "state", ",", "chpt_name", ")", "\n", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "hours", ",", "rem", "=", "divmod", "(", "end", "-", "start", ",", "3600", ")", "\n", "minutes", ",", "seconds", "=", "divmod", "(", "rem", ",", "60", ")", "\n", "print", "(", "'AUROC... '", ",", "auroc", ")", "\n", "print", "(", "\"Elapsed Time: {:0>2}:{:0>2}:{:05.2f}\"", ".", "format", "(", "int", "(", "hours", ")", ",", "int", "(", "minutes", ")", ",", "seconds", ")", ")", "\n", "logger", ".", "write", "(", "\"AUROC: %.8f\\n\"", "%", "(", "auroc", ")", ")", "\n", "logger", ".", "write", "(", "\"Elapsed Time: {:0>2}:{:0>2}:{:05.2f}\\n\"", ".", "format", "(", "int", "(", "hours", ")", ",", "int", "(", "minutes", ")", ",", "seconds", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.utils.get_device": [[11, 15], ["print", "torch.cuda.is_available"], "function", ["None"], ["def", "get_device", "(", ")", ":", "\n", "    ", "device", "=", "'cuda'", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", "\n", "print", "(", "\"device:\"", ",", "device", ")", "\n", "return", "device", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.utils.set_seed": [[17, 23], ["torch.manual_seed", "torch.cuda.manual_seed_all"], "function", ["None"], ["", "def", "set_seed", "(", "seed", ",", "device", ")", ":", "\n", "    ", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "if", "device", "==", "'cuda'", ":", "\n", "        ", "torch", ".", "cuda", ".", "manual_seed_all", "(", "seed", ")", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.utils.config_backup_get_log": [[25, 63], ["str", "glob.iglob", "glob.iglob", "print", "print", "pprint.pprint", "open", "open.write", "open.write", "open.write", "open.write", "open.write", "os.path.isdir", "os.mkdir", "os.path.isdir", "os.mkdir", "datetime.datetime.now", "os.path.isdir", "os.mkdir", "os.mkdir", "shutil.copy2", "shutil.copy2", "vars", "json.dumps", "vars"], "function", ["None"], ["", "", "def", "config_backup_get_log", "(", "args", ",", "filename", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "isdir", "(", "'./results'", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "'./results'", ")", "\n", "", "if", "not", "os", ".", "path", ".", "isdir", "(", "'./chpt'", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "'./chpt'", ")", "\n", "\n", "# set result dir", "\n", "", "current_time", "=", "str", "(", "datetime", ".", "now", "(", ")", ")", "\n", "dir_name", "=", "'%s_%s'", "%", "(", "current_time", ",", "args", ".", "suffix", ")", "\n", "result_dir", "=", "'results/%s'", "%", "dir_name", "\n", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "result_dir", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "result_dir", ")", "\n", "os", ".", "mkdir", "(", "result_dir", "+", "'/codes'", ")", "\n", "\n", "# deploy codes", "\n", "", "files", "=", "glob", ".", "iglob", "(", "'*.py'", ")", "\n", "model_files", "=", "glob", ".", "iglob", "(", "'./models/*.py'", ")", "\n", "\n", "for", "file", "in", "files", ":", "\n", "        ", "shutil", ".", "copy2", "(", "file", ",", "result_dir", "+", "'/codes'", ")", "\n", "", "for", "model_file", "in", "model_files", ":", "\n", "        ", "shutil", ".", "copy2", "(", "model_file", ",", "result_dir", "+", "'/codes/models'", ")", "\n", "\n", "\n", "# printout information", "\n", "", "print", "(", "\"Export directory:\"", ",", "result_dir", ")", "\n", "print", "(", "\"Arguments:\"", ")", "\n", "pprint", "(", "vars", "(", "args", ")", ")", "\n", "\n", "logger", "=", "open", "(", "result_dir", "+", "'/%s.txt'", "%", "dir_name", ",", "'w'", ")", "\n", "logger", ".", "write", "(", "\"%s \\n\"", "%", "(", "filename", ")", ")", "\n", "logger", ".", "write", "(", "\"Export directory: %s\\n\"", "%", "result_dir", ")", "\n", "logger", ".", "write", "(", "\"Arguments:\\n\"", ")", "\n", "logger", ".", "write", "(", "json", ".", "dumps", "(", "vars", "(", "args", ")", ")", ")", "\n", "logger", ".", "write", "(", "\"\\n\"", ")", "\n", "\n", "return", "logger", ",", "result_dir", ",", "dir_name", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.utils.process_args": [[65, 88], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "parser.parse_args.data.lower", "parser.parse_args.data.lower"], "function", ["None"], ["", "def", "process_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--dataroot'", ",", "type", "=", "str", ",", "default", "=", "'./'", ",", "help", "=", "'data path'", ")", "\n", "parser", ".", "add_argument", "(", "'--seed'", ",", "type", "=", "int", ",", "default", "=", "1000", ",", "help", "=", "'random seed'", ")", "\n", "parser", ".", "add_argument", "(", "'--data'", ",", "type", "=", "str", ",", "default", "=", "'fmnist'", ",", "help", "=", "'data type, mnist|cifar10|fmnist'", ")", "\n", "parser", ".", "add_argument", "(", "'--target'", ",", "type", "=", "int", ",", "default", "=", "0", ",", "help", "=", "'target integer in mnist dataset'", ")", "\n", "parser", ".", "add_argument", "(", "'--bstrain'", ",", "type", "=", "int", ",", "default", "=", "200", ",", "help", "=", "'batch size for training'", ")", "\n", "parser", ".", "add_argument", "(", "'--bstest'", ",", "type", "=", "int", ",", "default", "=", "200", ",", "help", "=", "'batch size for testing'", ")", "\n", "parser", ".", "add_argument", "(", "'--nworkers'", ",", "type", "=", "int", ",", "default", "=", "8", ",", "help", "=", "'the number of workers used in DataLoader'", ")", "\n", "parser", ".", "add_argument", "(", "'--dropoutp'", ",", "type", "=", "float", ",", "default", "=", "0.5", ",", "help", "=", "'dropout probability'", ")", "\n", "parser", ".", "add_argument", "(", "'--mcdropoutT'", ",", "type", "=", "int", ",", "default", "=", "20", ",", "help", "=", "'the number of mc samplings'", ")", "\n", "parser", ".", "add_argument", "(", "'--suffix'", ",", "type", "=", "str", ",", "default", "=", "'test'", ",", "help", "=", "'suffix of result directory'", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "if", "args", ".", "data", ".", "lower", "(", ")", "in", "[", "'mnist'", ",", "'fmnist'", "]", ":", "\n", "        ", "args", ".", "lr", "=", "1e-4", "\n", "args", ".", "milestones", "=", "[", "75", "]", "\n", "args", ".", "maxepoch", "=", "100", "\n", "", "elif", "args", ".", "data", ".", "lower", "(", ")", "in", "[", "'cifar10'", "]", ":", "\n", "        ", "args", ".", "lr", "=", "1e-4", "\n", "args", ".", "milestones", "=", "[", "75", "]", "\n", "args", ".", "maxepoch", "=", "100", "\n", "", "return", "args", "\n", "", ""]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_vae.loss_function": [[14, 21], ["len", "torch.binary_cross_entropy", "torch.sum", "torch.sum", "recon_x.view", "x.view", "recon_x.size", "x.size", "logvar.exp", "mu.pow"], "function", ["None"], ["def", "loss_function", "(", "recon_list", ",", "x", ",", "mu", ",", "logvar", ")", ":", "\n", "    ", "BCE", "=", "0.", "\n", "for", "recon_x", "in", "recon_list", ":", "\n", "        ", "BCE", "+=", "F", ".", "binary_cross_entropy", "(", "recon_x", ".", "view", "(", "recon_x", ".", "size", "(", "0", ")", ",", "-", "1", ")", ",", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", ",", "reduction", "=", "'sum'", ")", "\n", "", "BCE", "/=", "len", "(", "recon_list", ")", "\n", "KLD", "=", "-", "0.5", "*", "torch", ".", "sum", "(", "1", "+", "logvar", "-", "mu", ".", "pow", "(", "2", ")", "-", "logvar", ".", "exp", "(", ")", ")", "\n", "return", "BCE", "+", "KLD", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_vae.train": [[23, 42], ["model.train", "scheduler.step", "enumerate", "print", "logger.write", "inputs.to.to", "optimizer.zero_grad", "model", "main_vae.loss_function", "loss_function.backward", "loss_function.item", "optimizer.step", "print", "len", "len"], "function", ["home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_vae.train", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_vae.loss_function"], ["", "def", "train", "(", "epoch", ",", "model", ",", "trainloader", ",", "optimizer", ",", "scheduler", ",", "logger", ",", "device", ")", ":", "\n", "    ", "train_loss", "=", "0.", "\n", "model", ".", "train", "(", ")", "# train mode", "\n", "\n", "scheduler", ".", "step", "(", ")", "# update optimizer lr", "\n", "\n", "for", "batch_idx", ",", "(", "inputs", ",", "_", ")", "in", "enumerate", "(", "trainloader", ")", ":", "\n", "        ", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "recon_list", ",", "mu", ",", "logvar", "=", "model", "(", "inputs", ")", "\n", "loss", "=", "loss_function", "(", "recon_list", ",", "inputs", ",", "mu", ",", "logvar", ")", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "train_loss", "+=", "loss", ".", "item", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "print", "(", "'  Training... Epoch: %4d | Iter: %4d/%4d | Mean Loss: %.4f '", "%", "(", "epoch", ",", "batch_idx", "+", "1", ",", "len", "(", "trainloader", ")", ",", "train_loss", "/", "(", "batch_idx", "+", "1", ")", ")", ",", "end", "=", "'\\r'", ")", "\n", "", "print", "(", "''", ")", "\n", "logger", ".", "write", "(", "'  Training... Epoch: %4d | Iter: %4d/%4d | Mean Loss: %.4f \\n'", "%", "(", "epoch", ",", "batch_idx", "+", "1", ",", "len", "(", "trainloader", ")", ",", "train_loss", "/", "(", "batch_idx", "+", "1", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_vae.test": [[44, 72], ["model.eval", "print", "numpy.concatenate", "numpy.concatenate", "sklearn.metrics.roc_auc_score", "sklearn.metrics.precision_recall_curve", "sklearn.metrics.auc", "torch.no_grad", "torch.no_grad", "enumerate", "inputs.to.to", "model", "torch.zeros", "torch.zeros", "len", "scores_list.append", "targets_list.append", "print", "inputs.to.size", "torch.sum", "torch.sum", "torch.zeros.cpu().numpy", "np.concatenate.cpu().numpy", "tuple", "torch.zeros.cpu", "np.concatenate.cpu", "len", "range", "outputs.dim"], "function", ["None"], ["", "def", "test", "(", "model", ",", "testloader", ",", "device", ")", ":", "\n", "    ", "test_loss", "=", "0.", "\n", "scores_list", "=", "[", "]", "\n", "targets_list", "=", "[", "]", "\n", "\n", "model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "batch_idx", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "testloader", ")", ":", "\n", "            ", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "outputs_list", ",", "_", ",", "_", "=", "model", "(", "inputs", ")", "\n", "scores", "=", "torch", ".", "zeros", "(", "inputs", ".", "size", "(", "0", ")", ",", "device", "=", "device", ")", "\n", "for", "outputs", "in", "outputs_list", ":", "\n", "                ", "scores", "+=", "torch", ".", "sum", "(", "(", "outputs", "-", "inputs", ")", "**", "2", ",", "dim", "=", "tuple", "(", "range", "(", "1", ",", "outputs", ".", "dim", "(", ")", ")", ")", ")", "\n", "", "scores", "/=", "len", "(", "outputs_list", ")", "\n", "\n", "scores_list", ".", "append", "(", "scores", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "targets_list", ".", "append", "(", "targets", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "print", "(", "'  Test... Iter: %4d/%4d '", "%", "(", "batch_idx", "+", "1", ",", "len", "(", "testloader", ")", ",", ")", ",", "end", "=", "'\\r'", ")", "\n", "", "", "print", "(", "''", ")", "\n", "\n", "test_loss", "=", "test_loss", "/", "(", "batch_idx", "+", "1", ")", "\n", "scores", "=", "np", ".", "concatenate", "(", "scores_list", ")", "\n", "targets", "=", "np", ".", "concatenate", "(", "targets_list", ")", "\n", "auroc", "=", "metrics", ".", "roc_auc_score", "(", "targets", ",", "scores", ")", "\n", "\n", "precision", ",", "recall", ",", "_", "=", "metrics", ".", "precision_recall_curve", "(", "targets", ",", "scores", ")", "\n", "aupr", "=", "metrics", ".", "auc", "(", "recall", ",", "precision", ")", "\n", "return", "auroc", ",", "aupr", ",", "test_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_vae.main": [[74, 109], ["utils.config_backup_get_log", "utils.get_device", "utils.set_seed", "dataset.get_trainloader", "dataset.get_testloader", "models.get_vae().to", "torch.optim.Adam", "torch.optim.lr_scheduler.MultiStepLR", "os.path.join", "print", "time.time", "range", "main_vae.test", "print", "logger.write", "torch.save", "torch.save", "time.time", "divmod", "divmod", "print", "print", "logger.write", "logger.write", "models.get_vae().to.parameters", "main_vae.train", "models.get_vae().to.state_dict", "models.get_vae", "str", "str", "int", "int", "int", "int"], "function", ["home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.utils.config_backup_get_log", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.utils.get_device", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.utils.set_seed", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.dataset.get_trainloader", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.dataset.get_testloader", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_vae.test", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.main_vae.train", "home.repos.pwc.inspect_result.seonho-park_PGN_anomaly_detection.None.models.get_vae"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "logger", ",", "result_dir", ",", "dir_name", "=", "utils", ".", "config_backup_get_log", "(", "args", ",", "__file__", ")", "\n", "device", "=", "utils", ".", "get_device", "(", ")", "\n", "utils", ".", "set_seed", "(", "args", ".", "seed", ",", "device", ")", "\n", "\n", "trainloader", "=", "dataset", ".", "get_trainloader", "(", "args", ".", "data", ",", "args", ".", "dataroot", ",", "args", ".", "target", ",", "args", ".", "bstrain", ",", "args", ".", "nworkers", ")", "\n", "testloader", "=", "dataset", ".", "get_testloader", "(", "args", ".", "data", ",", "args", ".", "dataroot", ",", "args", ".", "target", ",", "args", ".", "bstest", ",", "args", ".", "nworkers", ")", "\n", "\n", "import", "models", "\n", "model", "=", "models", ".", "get_vae", "(", "args", ".", "data", ",", "L", "=", "1", ")", ".", "to", "(", "device", ")", "\n", "\n", "optimizer", "=", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "weight_decay", "=", "1e-4", ")", "\n", "scheduler", "=", "optim", ".", "lr_scheduler", ".", "MultiStepLR", "(", "optimizer", ",", "milestones", "=", "args", ".", "milestones", ",", "gamma", "=", "0.1", ")", "\n", "\n", "chpt_name", "=", "'VAE_%s_target%s_seed%s.pth'", "%", "(", "args", ".", "data", ",", "str", "(", "args", ".", "target", ")", ",", "str", "(", "args", ".", "seed", ")", ")", "\n", "chpt_name", "=", "os", ".", "path", ".", "join", "(", "\"./chpt\"", ",", "chpt_name", ")", "\n", "\n", "print", "(", "'==> Start training ..'", ")", "\n", "start", "=", "time", ".", "time", "(", ")", "\n", "for", "epoch", "in", "range", "(", "args", ".", "maxepoch", ")", ":", "\n", "        ", "train", "(", "epoch", ",", "model", ",", "trainloader", ",", "optimizer", ",", "scheduler", ",", "logger", ",", "device", ")", "\n", "\n", "", "auroc", ",", "aupr", ",", "_", "=", "test", "(", "model", ",", "testloader", ",", "device", ")", "\n", "print", "(", "'Epoch: %4d AUROC: %.4f AUPR: %.4f'", "%", "(", "epoch", ",", "auroc", ",", "aupr", ")", ")", "\n", "logger", ".", "write", "(", "'Epoch: %4d AUROC: %.4f AUPR: %.4f \\n'", "%", "(", "epoch", ",", "auroc", ",", "aupr", ")", ")", "\n", "state", "=", "{", "'model'", ":", "model", ".", "state_dict", "(", ")", ",", "'auroc'", ":", "auroc", ",", "'epoch'", ":", "epoch", "}", "\n", "torch", ".", "save", "(", "state", ",", "chpt_name", ")", "\n", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "hours", ",", "rem", "=", "divmod", "(", "end", "-", "start", ",", "3600", ")", "\n", "minutes", ",", "seconds", "=", "divmod", "(", "rem", ",", "60", ")", "\n", "print", "(", "'AUROC... '", ",", "auroc", ")", "\n", "print", "(", "\"Elapsed Time: {:0>2}:{:0>2}:{:05.2f}\"", ".", "format", "(", "int", "(", "hours", ")", ",", "int", "(", "minutes", ")", ",", "seconds", ")", ")", "\n", "logger", ".", "write", "(", "\"AUROC: %.8f\\n\"", "%", "(", "auroc", ")", ")", "\n", "logger", ".", "write", "(", "\"Elapsed Time: {:0>2}:{:0>2}:{:05.2f}\\n\"", ".", "format", "(", "int", "(", "hours", ")", ",", "int", "(", "minutes", ")", ",", "seconds", ")", ")", "\n", "\n"]]}