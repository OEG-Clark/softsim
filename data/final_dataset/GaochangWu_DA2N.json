{"home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx3.weight_variable": [[5, 7], ["tensorflow.get_variable", "tensorflow.truncated_normal_initializer"], "function", ["None"], ["def", "weight_variable", "(", "shape", ",", "name", "=", "None", ")", ":", "\n", "    ", "return", "tf", ".", "get_variable", "(", "name", "=", "name", ",", "shape", "=", "shape", ",", "dtype", "=", "tf", ".", "float32", ",", "initializer", "=", "tf", ".", "truncated_normal_initializer", "(", "stddev", "=", "0.001", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx3.bias_variable": [[9, 11], ["tensorflow.get_variable", "tensorflow.constant_initializer"], "function", ["None"], ["", "def", "bias_variable", "(", "shape", ",", "name", "=", "None", ")", ":", "\n", "        ", "return", "tf", ".", "get_variable", "(", "name", "=", "name", ",", "shape", "=", "shape", ",", "dtype", "=", "tf", ".", "float32", ",", "initializer", "=", "tf", ".", "constant_initializer", "(", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx3.conv2d": [[13, 15], ["tensorflow.nn.conv2d"], "function", ["home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d"], ["", "def", "conv2d", "(", "x", ",", "w", ",", "strides", "=", "1", ",", "name", "=", "None", ")", ":", "\n", "    ", "return", "tf", ".", "nn", ".", "conv2d", "(", "x", ",", "w", ",", "strides", "=", "[", "1", ",", "1", ",", "strides", ",", "1", "]", ",", "padding", "=", "\"SAME\"", ",", "name", "=", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx3.lrelu": [[17, 19], ["tensorflow.maximum"], "function", ["None"], ["", "def", "lrelu", "(", "x", ",", "leak", "=", "0.2", ")", ":", "\n", "    ", "return", "tf", ".", "maximum", "(", "x", ",", "leak", "*", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx3.prelu": [[21, 27], ["tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.constant_initializer", "tensorflow.maximum", "tensorflow.minimum"], "function", ["None"], ["", "def", "prelu", "(", "x", ",", "scope", "=", "None", ")", ":", "\n", "    ", "\"\"\"parametric ReLU activation\"\"\"", "\n", "with", "tf", ".", "variable_scope", "(", "name_or_scope", "=", "scope", ",", "default_name", "=", "\"prelu\"", ")", ":", "\n", "        ", "_alpha", "=", "tf", ".", "get_variable", "(", "\"prelu\"", ",", "shape", "=", "1", ",", "\n", "dtype", "=", "x", ".", "dtype", ",", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.1", ")", ")", "\n", "return", "tf", ".", "maximum", "(", "0.0", ",", "x", ")", "+", "_alpha", "*", "tf", ".", "minimum", "(", "0.0", ",", "x", ")", ",", "_alpha", "\n", "\n"]], "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx3.deconv": [[29, 35], ["tensorflow.shape", "tensorflow.stack", "tensorflow.nn.conv2d_transpose"], "function", ["None"], ["", "", "def", "deconv", "(", "x", ",", "w", ",", "output_shape", ",", "strides", ",", "name", "=", "None", ")", ":", "\n", "    ", "dyn_input_shape", "=", "tf", ".", "shape", "(", "x", ")", "\n", "batch_size", "=", "dyn_input_shape", "[", "0", "]", "\n", "output_shape", "=", "tf", ".", "stack", "(", "[", "batch_size", ",", "output_shape", "[", "1", "]", ",", "output_shape", "[", "2", "]", ",", "output_shape", "[", "3", "]", "]", ")", "\n", "output", "=", "tf", ".", "nn", ".", "conv2d_transpose", "(", "x", ",", "w", ",", "output_shape", ",", "strides", ",", "padding", "=", "\"SAME\"", ",", "name", "=", "name", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx3.prefilter": [[37, 50], ["numpy.linspace", "numpy.zeros", "range", "numpy.tile", "numpy.transpose", "tensorflow.get_variable", "numpy.exp", "scipy.interpolate.interp1d", "value.", "numpy.concatenate", "numpy.sum", "tensorflow.constant_initializer", "int", "numpy.expand_dims", "numpy.square"], "function", ["None"], ["", "def", "prefilter", "(", "k_size", ",", "channel_in", ",", "channel_out", ",", "name", "=", "None", ")", ":", "\n", "    ", "x", "=", "np", ".", "linspace", "(", "0", ",", "80", ",", "num", "=", "k_size", ")", "\n", "filters", "=", "np", ".", "zeros", "(", "[", "k_size", ",", "1", "]", ")", "\n", "filters", "[", "int", "(", "(", "k_size", "-", "1", ")", "/", "2", ")", ",", "0", "]", "=", "1", "\n", "for", "chn", "in", "range", "(", "channel_out", "-", "1", ")", ":", "\n", "        ", "y", "=", "np", ".", "exp", "(", "-", "np", ".", "square", "(", "x", "-", "40", ")", "/", "(", "200", "/", "(", "(", "channel_out", "-", "1", ")", "*", "5", "+", "1", ")", "*", "(", "chn", "*", "5", "+", "1", ")", ")", ")", "\n", "value", "=", "interp1d", "(", "x", ",", "y", ",", "kind", "=", "'cubic'", ")", "\n", "value", "=", "value", "(", "x", ")", "\n", "value", "=", "value", "/", "np", ".", "sum", "(", "value", ")", "\n", "filters", "=", "np", ".", "concatenate", "(", "(", "filters", ",", "np", ".", "expand_dims", "(", "value", ",", "axis", "=", "1", ")", ")", ",", "axis", "=", "1", ")", "\n", "", "filters", "=", "np", ".", "tile", "(", "filters", ",", "[", "1", ",", "channel_in", ",", "1", ",", "1", "]", ")", "\n", "filters", "=", "np", ".", "transpose", "(", "filters", ",", "(", "0", ",", "2", ",", "1", ",", "3", ")", ")", "\n", "return", "tf", ".", "get_variable", "(", "name", "=", "name", ",", "shape", "=", "[", "1", ",", "k_size", ",", "channel_in", ",", "channel_out", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "initializer", "=", "tf", ".", "constant_initializer", "(", "filters", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx3.shear": [[52, 77], ["tf.pad.get_shape().as_list", "numpy.ceil", "tensorflow.pad", "range", "tf.pad.get_shape", "abs", "abs", "int", "int", "int", "tensorflow.slice", "tensorflow.add", "tensorflow.concat", "abs", "int", "tensorflow.slice", "tensorflow.slice", "numpy.floor", "numpy.ceil", "int", "int", "numpy.ceil", "numpy.floor"], "function", ["None"], ["", "def", "shear", "(", "x", ",", "scale", ")", ":", "\n", "    ", "global", "y", "\n", "input_shape", "=", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "\n", "hei", "=", "input_shape", "[", "1", "]", "\n", "wid", "=", "input_shape", "[", "2", "]", "\n", "shift_max", "=", "np", ".", "ceil", "(", "(", "hei", "-", "1", ")", "/", "2", "*", "abs", "(", "scale", ")", ")", "\n", "base_shift", "=", "shift_max", "-", "(", "hei", "-", "1", ")", "/", "2", "*", "abs", "(", "scale", ")", "\n", "\n", "paddings", "=", "[", "[", "0", ",", "0", "]", ",", "[", "0", ",", "0", "]", ",", "[", "int", "(", "shift_max", ")", ",", "int", "(", "shift_max", ")", "]", ",", "[", "0", ",", "0", "]", "]", "\n", "x", "=", "tf", ".", "pad", "(", "x", ",", "paddings", ")", "\n", "for", "i", "in", "range", "(", "hei", ")", ":", "\n", "        ", "if", "scale", ">", "0", ":", "\n", "            ", "shift", "=", "i", "*", "scale", "+", "base_shift", "\n", "", "else", ":", "\n", "            ", "shift", "=", "(", "hei", "-", "i", "-", "1", ")", "*", "abs", "(", "scale", ")", "+", "base_shift", "\n", "", "if", "shift", "==", "int", "(", "shift", ")", ":", "\n", "            ", "cur_y", "=", "tf", ".", "slice", "(", "x", ",", "[", "0", ",", "i", ",", "int", "(", "shift", ")", ",", "0", "]", ",", "[", "-", "1", ",", "1", ",", "wid", ",", "-", "1", "]", ")", "\n", "", "else", ":", "\n", "            ", "cur_y", "=", "tf", ".", "add", "(", "(", "shift", "-", "np", ".", "floor", "(", "shift", ")", ")", "*", "tf", ".", "slice", "(", "x", ",", "[", "0", ",", "i", ",", "int", "(", "np", ".", "ceil", "(", "shift", ")", ")", ",", "0", "]", ",", "[", "-", "1", ",", "1", ",", "wid", ",", "-", "1", "]", ")", ",", "\n", "(", "np", ".", "ceil", "(", "shift", ")", "-", "shift", ")", "*", "tf", ".", "slice", "(", "x", ",", "[", "0", ",", "i", ",", "int", "(", "np", ".", "floor", "(", "shift", ")", ")", ",", "0", "]", ",", "[", "-", "1", ",", "1", ",", "wid", ",", "-", "1", "]", ")", ")", "\n", "", "if", "i", "==", "0", ":", "\n", "            ", "y", "=", "cur_y", "\n", "", "else", ":", "\n", "            ", "y", "=", "tf", ".", "concat", "(", "[", "y", ",", "cur_y", "]", ",", "axis", "=", "1", ")", "\n", "", "", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx3.reconstructor": [[79, 159], ["tensorflow.variable_scope", "x.get_shape().as_list", "modelx3.shear", "modelx3.weight_variable", "modelx3.bias_variable", "modelx3.lrelu", "modelx3.weight_variable", "modelx3.bias_variable", "modelx3.lrelu", "modelx3.weight_variable", "modelx3.bias_variable", "modelx3.lrelu", "modelx3.weight_variable", "modelx3.bias_variable", "modelx3.lrelu", "tensorflow.subtract", "modelx3.weight_variable", "modelx3.bias_variable", "modelx3.lrelu", "tensorflow.subtract", "modelx3.prefilter", "modelx3.conv2d", "modelx3.prefilter", "modelx3.conv2d", "modelx3.prefilter", "modelx3.conv2d", "modelx3.weight_variable", "modelx3.bias_variable", "modelx3.lrelu", "modelx3.weight_variable", "modelx3.bias_variable", "modelx3.lrelu", "modelx3.weight_variable", "modelx3.bias_variable", "modelx3.lrelu", "modelx3.weight_variable", "modelx3.bias_variable", "modelx3.lrelu", "modelx3.weight_variable", "modelx3.bias_variable", "modelx3.lrelu", "tensorflow.concat", "modelx3.weight_variable", "modelx3.bias_variable", "modelx3.lrelu", "modelx3.weight_variable", "modelx3.bias_variable", "modelx3.shear", "int", "int", "tensorflow.layers.batch_normalization", "modelx3.deconv", "x.get_shape", "modelx3.conv2d", "modelx3.deconv", "modelx3.conv2d", "modelx3.deconv", "modelx3.conv2d", "modelx3.conv2d", "modelx3.conv2d", "modelx3.conv2d", "modelx3.deconv", "modelx3.deconv", "modelx3.conv2d"], "function", ["home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx4.shear", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx4.prefilter", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx4.prefilter", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx4.prefilter", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx4.shear", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.deconv", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.deconv", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.deconv", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.deconv", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.deconv", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d"], ["", "def", "reconstructor", "(", "up_scale", ",", "x", ",", "shear_value", "=", "0", ",", "chn", "=", "27", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "'SR'", ",", "reuse", "=", "tf", ".", "AUTO_REUSE", ")", ":", "\n", "        ", "input_shape", "=", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "\n", "size_wid", "=", "[", "int", "(", "input_shape", "[", "2", "]", "/", "4", ")", ",", "int", "(", "input_shape", "[", "2", "]", "/", "2", ")", ",", "input_shape", "[", "2", "]", "]", "\n", "ang_in", "=", "input_shape", "[", "1", "]", "\n", "chn_in", "=", "input_shape", "[", "3", "]", "\n", "ang_out", "=", "(", "ang_in", "-", "1", ")", "*", "up_scale", "+", "1", "\n", "chn_Laplacian", "=", "10", "\n", "num_prefilter", "=", "20", "\n", "\n", "# Shear feature maps", "\n", "s0", "=", "shear", "(", "x", ",", "shear_value", ")", "\n", "\n", "\"\"\"Decomposition\"\"\"", "\n", "# Layer 1", "\n", "w", "=", "weight_variable", "(", "[", "5", ",", "5", ",", "chn_in", ",", "chn_Laplacian", "]", ",", "'w1'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn_Laplacian", "]", ",", "'b1'", ")", "\n", "s1", "=", "lrelu", "(", "conv2d", "(", "s0", ",", "w", ",", "4", ")", "+", "b", ")", "\n", "w", "=", "weight_variable", "(", "[", "3", ",", "3", ",", "chn_Laplacian", ",", "chn_Laplacian", "]", ",", "'Dw1_1'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn_Laplacian", "]", ",", "'Db1_1'", ")", "\n", "s1_2", "=", "lrelu", "(", "deconv", "(", "s1", ",", "w", ",", "[", "-", "1", ",", "ang_in", ",", "size_wid", "[", "1", "]", ",", "chn_Laplacian", "]", ",", "[", "1", ",", "1", ",", "2", ",", "1", "]", ")", "+", "b", ")", "\n", "\n", "# Layer 2", "\n", "w", "=", "weight_variable", "(", "[", "5", ",", "5", ",", "chn_in", ",", "chn_Laplacian", "]", ",", "'w2'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn_Laplacian", "]", ",", "'b2'", ")", "\n", "s2", "=", "lrelu", "(", "conv2d", "(", "s0", ",", "w", ",", "2", ")", "+", "b", ")", "\n", "w", "=", "weight_variable", "(", "[", "5", ",", "5", ",", "chn_Laplacian", ",", "chn_Laplacian", "]", ",", "'Dw2_1'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn_Laplacian", "]", ",", "'Db2_1'", ")", "\n", "s2_2", "=", "lrelu", "(", "deconv", "(", "s2", ",", "w", ",", "[", "-", "1", ",", "ang_in", ",", "size_wid", "[", "2", "]", ",", "chn_Laplacian", "]", ",", "[", "1", ",", "1", ",", "2", ",", "1", "]", ")", "+", "b", ")", "\n", "s2", "=", "tf", ".", "subtract", "(", "s2", ",", "s1_2", ")", "\n", "\n", "# Layer 3", "\n", "w", "=", "weight_variable", "(", "[", "5", ",", "5", ",", "chn_in", ",", "chn_Laplacian", "]", ",", "'w3'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn_Laplacian", "]", ",", "'b3'", ")", "\n", "s3", "=", "lrelu", "(", "conv2d", "(", "s0", ",", "w", ",", "1", ")", "+", "b", ")", "\n", "s3", "=", "tf", ".", "subtract", "(", "s3", ",", "s2_2", ")", "\n", "\n", "\"\"\"Pre-filter\"\"\"", "\n", "w", "=", "prefilter", "(", "k_size", "=", "5", ",", "channel_in", "=", "chn_Laplacian", ",", "channel_out", "=", "num_prefilter", ",", "name", "=", "'Prefilter1'", ")", "\n", "s1", "=", "conv2d", "(", "s1", ",", "w", ",", "1", ")", "\n", "w", "=", "prefilter", "(", "k_size", "=", "11", ",", "channel_in", "=", "chn_Laplacian", ",", "channel_out", "=", "num_prefilter", ",", "name", "=", "'Prefilter2'", ")", "\n", "s2", "=", "conv2d", "(", "s2", ",", "w", ",", "1", ")", "\n", "w", "=", "prefilter", "(", "k_size", "=", "21", ",", "channel_in", "=", "chn_Laplacian", ",", "channel_out", "=", "num_prefilter", ",", "name", "=", "'Prefilter3'", ")", "\n", "s3", "=", "conv2d", "(", "s3", ",", "w", ",", "1", ")", "\n", "\n", "\"\"\"Feature extraction\"\"\"", "\n", "w", "=", "weight_variable", "(", "[", "3", ",", "3", ",", "num_prefilter", ",", "chn", "]", ",", "'w4'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn", "]", ",", "'b4'", ")", "\n", "s1", "=", "lrelu", "(", "conv2d", "(", "s1", ",", "w", ",", "1", ")", "+", "b", ")", "\n", "\n", "w", "=", "weight_variable", "(", "[", "3", ",", "3", ",", "num_prefilter", ",", "chn", "]", ",", "'w5'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn", "]", ",", "'b5'", ")", "\n", "s2", "=", "lrelu", "(", "conv2d", "(", "s2", ",", "w", ",", "1", ")", "+", "b", ")", "\n", "\n", "w", "=", "weight_variable", "(", "[", "3", ",", "3", ",", "num_prefilter", ",", "chn", "]", ",", "'w6'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn", "]", ",", "'b6'", ")", "\n", "s3", "=", "lrelu", "(", "conv2d", "(", "s3", ",", "w", ",", "1", ")", "+", "b", ")", "\n", "\n", "\"\"\"Concatenation\"\"\"", "\n", "w", "=", "weight_variable", "(", "[", "5", ",", "5", ",", "chn", ",", "chn", "]", ",", "'Dw3'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn", "]", ",", "'Db3'", ")", "\n", "s1", "=", "lrelu", "(", "deconv", "(", "s1", ",", "w", ",", "[", "-", "1", ",", "ang_in", ",", "size_wid", "[", "2", "]", ",", "chn", "]", ",", "[", "1", ",", "1", ",", "4", ",", "1", "]", ")", "+", "b", ")", "\n", "\n", "w", "=", "weight_variable", "(", "[", "5", ",", "5", ",", "chn", ",", "chn", "]", ",", "'Dw4'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn", "]", ",", "'Db4'", ")", "\n", "s2", "=", "lrelu", "(", "deconv", "(", "s2", ",", "w", ",", "[", "-", "1", ",", "ang_in", ",", "size_wid", "[", "2", "]", ",", "chn", "]", ",", "[", "1", ",", "1", ",", "2", ",", "1", "]", ")", "+", "b", ")", "\n", "\n", "s", "=", "tf", ".", "concat", "(", "[", "s1", ",", "s2", ",", "s3", "]", ",", "-", "1", ")", "\n", "\n", "\"\"\"Mapping\"\"\"", "\n", "w", "=", "weight_variable", "(", "[", "3", ",", "3", ",", "chn", "*", "3", ",", "chn", "*", "3", "]", ",", "'w7'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn", "*", "3", "]", ",", "'b7'", ")", "\n", "s", "=", "lrelu", "(", "tf", ".", "layers", ".", "batch_normalization", "(", "conv2d", "(", "s", ",", "w", ",", "1", ")", "+", "b", ")", ")", "\n", "\n", "\"\"\"Angular reconstruction & inverse shear\"\"\"", "\n", "w", "=", "weight_variable", "(", "[", "9", ",", "9", ",", "chn", ",", "chn", "*", "3", "]", ",", "'Dw5'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn", "]", ",", "'Db5'", ")", "\n", "s", "=", "deconv", "(", "s", ",", "w", ",", "[", "-", "1", ",", "ang_out", ",", "size_wid", "[", "2", "]", ",", "chn", "]", ",", "[", "1", ",", "up_scale", ",", "1", ",", "1", "]", ")", "+", "b", "\n", "h", "=", "shear", "(", "s", ",", "-", "shear_value", "/", "up_scale", ")", "\n", "", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx3.blender": [[161, 222], ["tensorflow.variable_scope", "x.get_shape().as_list", "modelx3.weight_variable", "modelx3.bias_variable", "modelx3.lrelu", "modelx3.weight_variable", "modelx3.bias_variable", "modelx3.lrelu", "modelx3.weight_variable", "modelx3.bias_variable", "modelx3.lrelu", "modelx3.weight_variable", "modelx3.bias_variable", "modelx3.lrelu", "modelx3.weight_variable", "modelx3.bias_variable", "modelx3.lrelu", "modelx3.weight_variable", "modelx3.bias_variable", "modelx3.lrelu", "modelx3.weight_variable", "modelx3.bias_variable", "tensorflow.concat", "modelx3.weight_variable", "modelx3.bias_variable", "modelx3.lrelu", "modelx3.weight_variable", "modelx3.bias_variable", "tensorflow.concat", "modelx3.weight_variable", "modelx3.bias_variable", "modelx3.lrelu", "modelx3.weight_variable", "modelx3.bias_variable", "int", "int", "tensorflow.layers.batch_normalization", "modelx3.deconv", "modelx3.deconv", "modelx3.conv2d", "x.get_shape", "modelx3.conv2d", "modelx3.conv2d", "modelx3.conv2d", "modelx3.conv2d", "modelx3.conv2d", "modelx3.lrelu", "modelx3.conv2d", "modelx3.lrelu", "modelx3.conv2d", "modelx3.conv2d"], "function", ["home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.deconv", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.deconv", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d"], ["", "def", "blender", "(", "x", ",", "chn", "=", "27", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "'Blender'", ")", ":", "\n", "        ", "input_shape", "=", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "\n", "size_wid", "=", "[", "int", "(", "input_shape", "[", "2", "]", "/", "4", ")", ",", "int", "(", "input_shape", "[", "2", "]", "/", "2", ")", ",", "input_shape", "[", "2", "]", "]", "\n", "chn_in", "=", "input_shape", "[", "3", "]", "\n", "ang_in", "=", "input_shape", "[", "1", "]", "\n", "\n", "# Blending", "\n", "w", "=", "weight_variable", "(", "[", "1", ",", "1", ",", "chn_in", ",", "chn", "]", ",", "'w0'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn", "]", ",", "'b0'", ")", "\n", "h0", "=", "lrelu", "(", "conv2d", "(", "x", ",", "w", ",", "1", ")", "+", "b", ")", "\n", "\n", "# Encoder: Stride 2", "\n", "w", "=", "weight_variable", "(", "[", "3", ",", "3", ",", "chn", ",", "chn", "*", "2", "]", ",", "'w1'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn", "*", "2", "]", ",", "'b1'", ")", "\n", "h1", "=", "lrelu", "(", "conv2d", "(", "h0", ",", "w", ",", "2", ")", "+", "b", ")", "\n", "\n", "w", "=", "weight_variable", "(", "[", "3", ",", "3", ",", "chn", "*", "2", ",", "chn", "*", "2", "]", ",", "'w2'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn", "*", "2", "]", ",", "'b2'", ")", "\n", "h1", "=", "lrelu", "(", "conv2d", "(", "h1", ",", "w", ",", "1", ")", "+", "b", ")", "\n", "\n", "# Encoder: Stride 2", "\n", "w", "=", "weight_variable", "(", "[", "3", ",", "3", ",", "chn", "*", "2", ",", "chn", "*", "2", "]", ",", "'w3'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn", "*", "2", "]", ",", "'b3'", ")", "\n", "h2", "=", "lrelu", "(", "conv2d", "(", "h1", ",", "w", ",", "2", ")", "+", "b", ")", "\n", "\n", "w", "=", "weight_variable", "(", "[", "3", ",", "3", ",", "chn", "*", "2", ",", "chn", "*", "2", "]", ",", "'w4'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn", "*", "2", "]", ",", "'b4'", ")", "\n", "h2", "=", "lrelu", "(", "conv2d", "(", "h2", ",", "w", ",", "1", ")", "+", "b", ")", "\n", "\n", "# Mapping", "\n", "w", "=", "weight_variable", "(", "[", "3", ",", "3", ",", "chn", "*", "2", ",", "chn", "*", "2", "]", ",", "'w5'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn", "*", "2", "]", ",", "'b5'", ")", "\n", "h2", "=", "lrelu", "(", "tf", ".", "layers", ".", "batch_normalization", "(", "conv2d", "(", "h2", ",", "w", ",", "1", ")", "+", "b", ")", ")", "\n", "\n", "# Decoder: Stride 2", "\n", "w", "=", "weight_variable", "(", "[", "5", ",", "5", ",", "chn", "*", "2", ",", "chn", "*", "2", "]", ",", "'Dw1'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn", "*", "2", "]", ",", "'Db1'", ")", "\n", "h2", "=", "deconv", "(", "h2", ",", "w", ",", "[", "-", "1", ",", "ang_in", ",", "size_wid", "[", "1", "]", ",", "chn", "*", "2", "]", ",", "[", "1", ",", "1", ",", "2", ",", "1", "]", ")", "+", "b", "\n", "\n", "h3", "=", "tf", ".", "concat", "(", "[", "lrelu", "(", "h2", ")", ",", "h1", "]", ",", "3", ")", "\n", "\n", "w", "=", "weight_variable", "(", "[", "1", ",", "1", ",", "chn", "*", "4", ",", "chn", "*", "2", "]", ",", "'Dw2'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn", "*", "2", "]", ",", "'Db2'", ")", "\n", "h3", "=", "lrelu", "(", "conv2d", "(", "h3", ",", "w", ",", "1", ")", "+", "b", ")", "\n", "\n", "# Decoder: Stride 2", "\n", "w", "=", "weight_variable", "(", "[", "5", ",", "5", ",", "chn", ",", "chn", "*", "2", "]", ",", "'Dw3'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn", "]", ",", "'Db3'", ")", "\n", "h4", "=", "deconv", "(", "h3", ",", "w", ",", "[", "-", "1", ",", "ang_in", ",", "size_wid", "[", "2", "]", ",", "chn", "]", ",", "[", "1", ",", "1", ",", "2", ",", "1", "]", ")", "+", "b", "\n", "\n", "h4", "=", "tf", ".", "concat", "(", "[", "lrelu", "(", "h4", ")", ",", "h0", "]", ",", "3", ")", "\n", "\n", "w", "=", "weight_variable", "(", "[", "1", ",", "1", ",", "chn", "*", "2", ",", "chn", "]", ",", "'Dw4'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn", "]", ",", "'Db4'", ")", "\n", "h4", "=", "lrelu", "(", "conv2d", "(", "h4", ",", "w", ",", "1", ")", "+", "b", ")", "\n", "\n", "w", "=", "weight_variable", "(", "[", "9", ",", "9", ",", "chn", ",", "1", "]", ",", "'w6'", ")", "# The difference with old model", "\n", "b", "=", "bias_variable", "(", "[", "1", "]", ",", "'b6'", ")", "\n", "h", "=", "conv2d", "(", "h4", ",", "w", ",", "1", ")", "+", "b", "\n", "", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx3.model": [[224, 245], ["x.get_shape().as_list", "modelx3.reconstructor", "modelx3.reconstructor", "modelx3.reconstructor", "modelx3.reconstructor", "modelx3.reconstructor", "modelx3.reconstructor", "modelx3.reconstructor", "tensorflow.concat", "modelx3.blender", "int", "int", "x.get_shape"], "function", ["home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx4.reconstructor", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx4.reconstructor", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx4.reconstructor", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx4.reconstructor", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx4.reconstructor", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx4.reconstructor", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx4.reconstructor", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx4.blender"], ["", "def", "model", "(", "up_scale", ",", "x", ")", ":", "\n", "    ", "input_shape", "=", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "\n", "size_wid", "=", "[", "int", "(", "input_shape", "[", "2", "]", "/", "4", ")", ",", "int", "(", "input_shape", "[", "2", "]", "/", "2", ")", ",", "input_shape", "[", "2", "]", "]", "\n", "ang_in", "=", "input_shape", "[", "1", "]", "\n", "ang_out", "=", "(", "ang_in", "-", "1", ")", "*", "up_scale", "+", "1", "\n", "chn_base", "=", "27", "\n", "\n", "# Shear reconstructor", "\n", "s1", "=", "reconstructor", "(", "up_scale", ",", "x", ",", "shear_value", "=", "-", "9", ",", "chn", "=", "chn_base", ")", "\n", "s2", "=", "reconstructor", "(", "up_scale", ",", "x", ",", "shear_value", "=", "-", "6", ",", "chn", "=", "chn_base", ")", "\n", "s3", "=", "reconstructor", "(", "up_scale", ",", "x", ",", "shear_value", "=", "-", "3", ",", "chn", "=", "chn_base", ")", "\n", "s4", "=", "reconstructor", "(", "up_scale", ",", "x", ",", "shear_value", "=", "0", ",", "chn", "=", "chn_base", ")", "\n", "s5", "=", "reconstructor", "(", "up_scale", ",", "x", ",", "shear_value", "=", "3", ",", "chn", "=", "chn_base", ")", "\n", "s6", "=", "reconstructor", "(", "up_scale", ",", "x", ",", "shear_value", "=", "6", ",", "chn", "=", "chn_base", ")", "\n", "s7", "=", "reconstructor", "(", "up_scale", ",", "x", ",", "shear_value", "=", "9", ",", "chn", "=", "chn_base", ")", "\n", "\n", "s", "=", "tf", ".", "concat", "(", "[", "s1", ",", "s2", ",", "s3", ",", "s4", ",", "s5", ",", "s6", ",", "s7", "]", ",", "axis", "=", "-", "1", ")", "\n", "\n", "# Shear blender", "\n", "y_out", "=", "blender", "(", "s", ",", "chn", "=", "chn_base", ")", "\n", "return", "y_out", "\n", "", ""]], "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.train.train": [[90, 117], ["range", "print", "my_session.run", "my_session.run", "print", "train.test", "open", "f.write", "saver.save"], "function", ["home.repos.pwc.inspect_result.GaochangWu_DA2N.None.train.test"], ["def", "train", "(", "my_session", ",", "train_data", ",", "train_label", ",", "model_save_path", ",", "iterations", ")", ":", "\n", "    ", "minLoss", "=", "100", "\n", "epoch", "=", "0", "\n", "for", "i", "in", "range", "(", "iterations", ")", ":", "\n", "        ", "batch_x", "=", "train_data", "[", "(", "i", "%", "batch_num", ")", "*", "opt", ".", "batch_size", ":", "(", "i", "%", "batch_num", "+", "1", ")", "*", "opt", ".", "batch_size", "]", "\n", "batch_y", "=", "train_label", "[", "(", "i", "%", "batch_num", ")", "*", "opt", ".", "batch_size", ":", "(", "i", "%", "batch_num", "+", "1", ")", "*", "opt", ".", "batch_size", "]", "\n", "\n", "if", "i", "%", "batch_num", "==", "0", ":", "\n", "            ", "epoch", "+=", "1", "\n", "", "if", "i", "%", "opt", ".", "display_interval", "==", "0", ":", "\n", "            ", "curLoss", ",", "curPSNR", "=", "my_session", ".", "run", "(", "[", "loss", ",", "psnr", "]", ",", "feed_dict", "=", "{", "x", ":", "batch_x", ",", "y_", ":", "batch_y", "}", ")", "\n", "info", "=", "\"Epoch {}, interation {}, Minibatch loss = {:.5f}, PSNR = {:.2f}.\"", ".", "format", "(", "epoch", ",", "i", ",", "curLoss", ",", "curPSNR", ")", "\n", "if", "i", "%", "opt", ".", "test_interval", "==", "0", ":", "\n", "                ", "test_loss", ",", "test_PSNR", "=", "test", "(", "my_session", ",", "test_data", ",", "test_label", ")", "\n", "info", "+=", "\" Test loss = {:.5f}, PSNR = {:.2f}\"", ".", "format", "(", "test_loss", ",", "test_PSNR", ")", "\n", "\n", "# Save model", "\n", "if", "test_loss", "<", "minLoss", ":", "\n", "                    ", "minLoss", "=", "test_loss", "\n", "saver", ".", "save", "(", "my_session", ",", "model_save_path", ")", "\n", "", "", "print", "(", "info", ")", "\n", "with", "open", "(", "log_path", ",", "'a'", ")", "as", "f", ":", "\n", "                ", "f", ".", "write", "(", "info", "+", "'\\n'", ")", "\n", "\n", "", "", "my_session", ".", "run", "(", "train_step", ",", "feed_dict", "=", "{", "x", ":", "batch_x", ",", "y_", ":", "batch_y", "}", ")", "\n", "", "print", "(", "\"Optimization Finished!\"", ")", "\n", "return", "my_session", "\n", "\n"]], "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.train.test": [[119, 133], ["range", "my_session.run"], "function", ["None"], ["", "def", "test", "(", "my_session", ",", "test_data", ",", "test_label", ")", ":", "\n", "    ", "test_loss", "=", "0", "\n", "test_PSNR", "=", "0", "\n", "for", "j", "in", "range", "(", "batch_num_test", ")", ":", "\n", "        ", "batch_x_test", "=", "test_data", "[", "(", "j", "%", "batch_num_test", ")", "*", "opt", ".", "batch_size_test", ":", "\n", "(", "j", "%", "batch_num_test", "+", "1", ")", "*", "opt", ".", "batch_size_test", "]", "\n", "batch_y_test", "=", "test_label", "[", "(", "j", "%", "batch_num_test", ")", "*", "opt", ".", "batch_size_test", ":", "\n", "(", "j", "%", "batch_num_test", "+", "1", ")", "*", "opt", ".", "batch_size_test", "]", "\n", "curTestLoss", ",", "curTestPSNR", "=", "my_session", ".", "run", "(", "[", "loss", ",", "psnr", "]", ",", "feed_dict", "=", "{", "x", ":", "batch_x_test", ",", "y_", ":", "batch_y_test", "}", ")", "\n", "test_loss", "+=", "curTestLoss", "\n", "test_PSNR", "+=", "curTestPSNR", "\n", "", "test_loss", "=", "test_loss", "/", "batch_num_test", "\n", "test_PSNR", "=", "test_PSNR", "/", "batch_num_test", "\n", "return", "test_loss", ",", "test_PSNR", "\n", "\n"]], "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx4.weight_variable": [[6, 8], ["tensorflow.get_variable", "tensorflow.truncated_normal_initializer"], "function", ["None"], ["def", "weight_variable", "(", "shape", ",", "name", "=", "None", ")", ":", "\n", "    ", "return", "tf", ".", "get_variable", "(", "name", "=", "name", ",", "shape", "=", "shape", ",", "dtype", "=", "tf", ".", "float32", ",", "initializer", "=", "tf", ".", "truncated_normal_initializer", "(", "stddev", "=", "0.001", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx4.bias_variable": [[10, 12], ["tensorflow.get_variable", "tensorflow.constant_initializer"], "function", ["None"], ["", "def", "bias_variable", "(", "shape", ",", "name", "=", "None", ")", ":", "\n", "        ", "return", "tf", ".", "get_variable", "(", "name", "=", "name", ",", "shape", "=", "shape", ",", "dtype", "=", "tf", ".", "float32", ",", "initializer", "=", "tf", ".", "constant_initializer", "(", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx4.conv2d": [[14, 16], ["tensorflow.nn.conv2d"], "function", ["home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d"], ["", "def", "conv2d", "(", "x", ",", "w", ",", "strides", "=", "1", ",", "name", "=", "None", ")", ":", "\n", "    ", "return", "tf", ".", "nn", ".", "conv2d", "(", "x", ",", "w", ",", "strides", "=", "[", "1", ",", "1", ",", "strides", ",", "1", "]", ",", "padding", "=", "\"SAME\"", ",", "name", "=", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx4.lrelu": [[18, 20], ["tensorflow.maximum"], "function", ["None"], ["", "def", "lrelu", "(", "x", ",", "leak", "=", "0.2", ")", ":", "\n", "    ", "return", "tf", ".", "maximum", "(", "x", ",", "leak", "*", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx4.prelu": [[22, 28], ["tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.constant_initializer", "tensorflow.maximum", "tensorflow.minimum"], "function", ["None"], ["", "def", "prelu", "(", "x", ",", "scope", "=", "None", ")", ":", "\n", "    ", "\"\"\"parametric ReLU activation\"\"\"", "\n", "with", "tf", ".", "variable_scope", "(", "name_or_scope", "=", "scope", ",", "default_name", "=", "\"prelu\"", ")", ":", "\n", "        ", "_alpha", "=", "tf", ".", "get_variable", "(", "\"prelu\"", ",", "shape", "=", "1", ",", "\n", "dtype", "=", "x", ".", "dtype", ",", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.1", ")", ")", "\n", "return", "tf", ".", "maximum", "(", "0.0", ",", "x", ")", "+", "_alpha", "*", "tf", ".", "minimum", "(", "0.0", ",", "x", ")", ",", "_alpha", "\n", "\n"]], "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx4.deconv": [[30, 36], ["tensorflow.shape", "tensorflow.stack", "tensorflow.nn.conv2d_transpose"], "function", ["None"], ["", "", "def", "deconv", "(", "x", ",", "w", ",", "output_shape", ",", "strides", ",", "name", "=", "None", ")", ":", "\n", "    ", "dyn_input_shape", "=", "tf", ".", "shape", "(", "x", ")", "\n", "batch_size", "=", "dyn_input_shape", "[", "0", "]", "\n", "output_shape", "=", "tf", ".", "stack", "(", "[", "batch_size", ",", "output_shape", "[", "1", "]", ",", "output_shape", "[", "2", "]", ",", "output_shape", "[", "3", "]", "]", ")", "\n", "output", "=", "tf", ".", "nn", ".", "conv2d_transpose", "(", "x", ",", "w", ",", "output_shape", ",", "strides", ",", "padding", "=", "\"SAME\"", ",", "name", "=", "name", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx4.prefilter": [[38, 51], ["numpy.linspace", "numpy.zeros", "range", "numpy.tile", "numpy.transpose", "tensorflow.get_variable", "numpy.exp", "scipy.interpolate.interp1d", "value.", "numpy.concatenate", "numpy.sum", "tensorflow.constant_initializer", "int", "numpy.expand_dims", "numpy.square"], "function", ["None"], ["", "def", "prefilter", "(", "k_size", ",", "channel_in", ",", "channel_out", ",", "name", "=", "None", ")", ":", "\n", "    ", "x", "=", "np", ".", "linspace", "(", "0", ",", "80", ",", "num", "=", "k_size", ")", "\n", "filters", "=", "np", ".", "zeros", "(", "[", "k_size", ",", "1", "]", ")", "\n", "filters", "[", "int", "(", "(", "k_size", "-", "1", ")", "/", "2", ")", ",", "0", "]", "=", "1", "\n", "for", "chn", "in", "range", "(", "channel_out", "-", "1", ")", ":", "\n", "        ", "y", "=", "np", ".", "exp", "(", "-", "np", ".", "square", "(", "x", "-", "40", ")", "/", "(", "200", "/", "(", "(", "channel_out", "-", "1", ")", "*", "5", "+", "1", ")", "*", "(", "chn", "*", "5", "+", "1", ")", ")", ")", "\n", "value", "=", "interp1d", "(", "x", ",", "y", ",", "kind", "=", "'cubic'", ")", "\n", "value", "=", "value", "(", "x", ")", "\n", "value", "=", "value", "/", "np", ".", "sum", "(", "value", ")", "\n", "filters", "=", "np", ".", "concatenate", "(", "(", "filters", ",", "np", ".", "expand_dims", "(", "value", ",", "axis", "=", "1", ")", ")", ",", "axis", "=", "1", ")", "\n", "", "filters", "=", "np", ".", "tile", "(", "filters", ",", "[", "1", ",", "channel_in", ",", "1", ",", "1", "]", ")", "\n", "filters", "=", "np", ".", "transpose", "(", "filters", ",", "(", "0", ",", "2", ",", "1", ",", "3", ")", ")", "\n", "return", "tf", ".", "get_variable", "(", "name", "=", "name", ",", "shape", "=", "[", "1", ",", "k_size", ",", "channel_in", ",", "channel_out", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "initializer", "=", "tf", ".", "constant_initializer", "(", "filters", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx4.shear": [[53, 78], ["tf.pad.get_shape().as_list", "numpy.ceil", "tensorflow.pad", "range", "tf.pad.get_shape", "abs", "abs", "int", "int", "int", "tensorflow.slice", "tensorflow.add", "tensorflow.concat", "abs", "int", "tensorflow.slice", "tensorflow.slice", "numpy.floor", "numpy.ceil", "int", "int", "numpy.ceil", "numpy.floor"], "function", ["None"], ["", "def", "shear", "(", "x", ",", "scale", ")", ":", "\n", "    ", "global", "y", "\n", "input_shape", "=", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "\n", "hei", "=", "input_shape", "[", "1", "]", "\n", "wid", "=", "input_shape", "[", "2", "]", "\n", "shift_max", "=", "np", ".", "ceil", "(", "(", "hei", "-", "1", ")", "/", "2", "*", "abs", "(", "scale", ")", ")", "\n", "base_shift", "=", "shift_max", "-", "(", "hei", "-", "1", ")", "/", "2", "*", "abs", "(", "scale", ")", "\n", "\n", "paddings", "=", "[", "[", "0", ",", "0", "]", ",", "[", "0", ",", "0", "]", ",", "[", "int", "(", "shift_max", ")", ",", "int", "(", "shift_max", ")", "]", ",", "[", "0", ",", "0", "]", "]", "\n", "x", "=", "tf", ".", "pad", "(", "x", ",", "paddings", ")", "\n", "for", "i", "in", "range", "(", "hei", ")", ":", "\n", "        ", "if", "scale", ">", "0", ":", "\n", "            ", "shift", "=", "i", "*", "scale", "+", "base_shift", "\n", "", "else", ":", "\n", "            ", "shift", "=", "(", "hei", "-", "i", "-", "1", ")", "*", "abs", "(", "scale", ")", "+", "base_shift", "\n", "", "if", "shift", "==", "int", "(", "shift", ")", ":", "\n", "            ", "cur_y", "=", "tf", ".", "slice", "(", "x", ",", "[", "0", ",", "i", ",", "int", "(", "shift", ")", ",", "0", "]", ",", "[", "-", "1", ",", "1", ",", "wid", ",", "-", "1", "]", ")", "\n", "", "else", ":", "\n", "            ", "cur_y", "=", "tf", ".", "add", "(", "(", "shift", "-", "np", ".", "floor", "(", "shift", ")", ")", "*", "tf", ".", "slice", "(", "x", ",", "[", "0", ",", "i", ",", "int", "(", "np", ".", "ceil", "(", "shift", ")", ")", ",", "0", "]", ",", "[", "-", "1", ",", "1", ",", "wid", ",", "-", "1", "]", ")", ",", "\n", "(", "np", ".", "ceil", "(", "shift", ")", "-", "shift", ")", "*", "tf", ".", "slice", "(", "x", ",", "[", "0", ",", "i", ",", "int", "(", "np", ".", "floor", "(", "shift", ")", ")", ",", "0", "]", ",", "[", "-", "1", ",", "1", ",", "wid", ",", "-", "1", "]", ")", ")", "\n", "", "if", "i", "==", "0", ":", "\n", "            ", "y", "=", "cur_y", "\n", "", "else", ":", "\n", "            ", "y", "=", "tf", ".", "concat", "(", "[", "y", ",", "cur_y", "]", ",", "axis", "=", "1", ")", "\n", "", "", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx4.reconstructor": [[80, 160], ["tensorflow.variable_scope", "x.get_shape().as_list", "modelx4.shear", "modelx4.weight_variable", "modelx4.bias_variable", "modelx4.lrelu", "modelx4.weight_variable", "modelx4.bias_variable", "modelx4.lrelu", "modelx4.weight_variable", "modelx4.bias_variable", "modelx4.lrelu", "modelx4.weight_variable", "modelx4.bias_variable", "modelx4.lrelu", "tensorflow.subtract", "modelx4.weight_variable", "modelx4.bias_variable", "modelx4.lrelu", "tensorflow.subtract", "modelx4.prefilter", "modelx4.conv2d", "modelx4.prefilter", "modelx4.conv2d", "modelx4.prefilter", "modelx4.conv2d", "modelx4.weight_variable", "modelx4.bias_variable", "modelx4.lrelu", "modelx4.weight_variable", "modelx4.bias_variable", "modelx4.lrelu", "modelx4.weight_variable", "modelx4.bias_variable", "modelx4.lrelu", "modelx4.weight_variable", "modelx4.bias_variable", "modelx4.lrelu", "modelx4.weight_variable", "modelx4.bias_variable", "modelx4.lrelu", "tensorflow.concat", "modelx4.weight_variable", "modelx4.bias_variable", "modelx4.lrelu", "modelx4.weight_variable", "modelx4.bias_variable", "modelx4.shear", "int", "int", "tensorflow.layers.batch_normalization", "modelx4.deconv", "x.get_shape", "modelx4.conv2d", "modelx4.deconv", "modelx4.conv2d", "modelx4.deconv", "modelx4.conv2d", "modelx4.conv2d", "modelx4.conv2d", "modelx4.conv2d", "modelx4.deconv", "modelx4.deconv", "modelx4.conv2d"], "function", ["home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx4.shear", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx4.prefilter", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx4.prefilter", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx4.prefilter", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx4.shear", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.deconv", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.deconv", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.deconv", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.deconv", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.deconv", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d"], ["", "def", "reconstructor", "(", "up_scale", ",", "x", ",", "shear_value", "=", "0", ",", "chn", "=", "27", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "'SR'", ",", "reuse", "=", "tf", ".", "AUTO_REUSE", ")", ":", "\n", "        ", "input_shape", "=", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "\n", "size_wid", "=", "[", "int", "(", "input_shape", "[", "2", "]", "/", "4", ")", ",", "int", "(", "input_shape", "[", "2", "]", "/", "2", ")", ",", "input_shape", "[", "2", "]", "]", "\n", "ang_in", "=", "input_shape", "[", "1", "]", "\n", "chn_in", "=", "input_shape", "[", "3", "]", "\n", "ang_out", "=", "(", "ang_in", "-", "1", ")", "*", "up_scale", "+", "1", "\n", "chn_Laplacian", "=", "10", "\n", "num_prefilter", "=", "20", "\n", "\n", "# Shear feature maps", "\n", "s0", "=", "shear", "(", "x", ",", "shear_value", ")", "\n", "\n", "\"\"\"Decomposition\"\"\"", "\n", "# Layer 1", "\n", "w", "=", "weight_variable", "(", "[", "5", ",", "5", ",", "chn_in", ",", "chn_Laplacian", "]", ",", "'w1'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn_Laplacian", "]", ",", "'b1'", ")", "\n", "s1", "=", "lrelu", "(", "conv2d", "(", "s0", ",", "w", ",", "4", ")", "+", "b", ")", "\n", "w", "=", "weight_variable", "(", "[", "3", ",", "3", ",", "chn_Laplacian", ",", "chn_Laplacian", "]", ",", "'Dw1_1'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn_Laplacian", "]", ",", "'Db1_1'", ")", "\n", "s1_2", "=", "lrelu", "(", "deconv", "(", "s1", ",", "w", ",", "[", "-", "1", ",", "ang_in", ",", "size_wid", "[", "1", "]", ",", "chn_Laplacian", "]", ",", "[", "1", ",", "1", ",", "2", ",", "1", "]", ")", "+", "b", ")", "\n", "\n", "# Layer 2", "\n", "w", "=", "weight_variable", "(", "[", "5", ",", "5", ",", "chn_in", ",", "chn_Laplacian", "]", ",", "'w2'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn_Laplacian", "]", ",", "'b2'", ")", "\n", "s2", "=", "lrelu", "(", "conv2d", "(", "s0", ",", "w", ",", "2", ")", "+", "b", ")", "\n", "w", "=", "weight_variable", "(", "[", "5", ",", "5", ",", "chn_Laplacian", ",", "chn_Laplacian", "]", ",", "'Dw2_1'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn_Laplacian", "]", ",", "'Db2_1'", ")", "\n", "s2_2", "=", "lrelu", "(", "deconv", "(", "s2", ",", "w", ",", "[", "-", "1", ",", "ang_in", ",", "size_wid", "[", "2", "]", ",", "chn_Laplacian", "]", ",", "[", "1", ",", "1", ",", "2", ",", "1", "]", ")", "+", "b", ")", "\n", "s2", "=", "tf", ".", "subtract", "(", "s2", ",", "s1_2", ")", "\n", "\n", "# Layer 3", "\n", "w", "=", "weight_variable", "(", "[", "5", ",", "5", ",", "chn_in", ",", "chn_Laplacian", "]", ",", "'w3'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn_Laplacian", "]", ",", "'b3'", ")", "\n", "s3", "=", "lrelu", "(", "conv2d", "(", "s0", ",", "w", ",", "1", ")", "+", "b", ")", "\n", "s3", "=", "tf", ".", "subtract", "(", "s3", ",", "s2_2", ")", "\n", "\n", "\"\"\"Pre-filter\"\"\"", "\n", "w", "=", "prefilter", "(", "k_size", "=", "5", ",", "channel_in", "=", "chn_Laplacian", ",", "channel_out", "=", "num_prefilter", ",", "name", "=", "'Prefilter1'", ")", "\n", "s1", "=", "conv2d", "(", "s1", ",", "w", ",", "1", ")", "\n", "w", "=", "prefilter", "(", "k_size", "=", "11", ",", "channel_in", "=", "chn_Laplacian", ",", "channel_out", "=", "num_prefilter", ",", "name", "=", "'Prefilter2'", ")", "\n", "s2", "=", "conv2d", "(", "s2", ",", "w", ",", "1", ")", "\n", "w", "=", "prefilter", "(", "k_size", "=", "21", ",", "channel_in", "=", "chn_Laplacian", ",", "channel_out", "=", "num_prefilter", ",", "name", "=", "'Prefilter3'", ")", "\n", "s3", "=", "conv2d", "(", "s3", ",", "w", ",", "1", ")", "\n", "\n", "\"\"\"Feature extraction\"\"\"", "\n", "w", "=", "weight_variable", "(", "[", "3", ",", "3", ",", "num_prefilter", ",", "chn", "]", ",", "'w4'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn", "]", ",", "'b4'", ")", "\n", "s1", "=", "lrelu", "(", "conv2d", "(", "s1", ",", "w", ",", "1", ")", "+", "b", ")", "\n", "\n", "w", "=", "weight_variable", "(", "[", "3", ",", "3", ",", "num_prefilter", ",", "chn", "]", ",", "'w5'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn", "]", ",", "'b5'", ")", "\n", "s2", "=", "lrelu", "(", "conv2d", "(", "s2", ",", "w", ",", "1", ")", "+", "b", ")", "\n", "\n", "w", "=", "weight_variable", "(", "[", "3", ",", "3", ",", "num_prefilter", ",", "chn", "]", ",", "'w6'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn", "]", ",", "'b6'", ")", "\n", "s3", "=", "lrelu", "(", "conv2d", "(", "s3", ",", "w", ",", "1", ")", "+", "b", ")", "\n", "\n", "\"\"\"Concatenation\"\"\"", "\n", "w", "=", "weight_variable", "(", "[", "5", ",", "5", ",", "chn", ",", "chn", "]", ",", "'Dw3'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn", "]", ",", "'Db3'", ")", "\n", "s1", "=", "lrelu", "(", "deconv", "(", "s1", ",", "w", ",", "[", "-", "1", ",", "ang_in", ",", "size_wid", "[", "2", "]", ",", "chn", "]", ",", "[", "1", ",", "1", ",", "4", ",", "1", "]", ")", "+", "b", ")", "\n", "\n", "w", "=", "weight_variable", "(", "[", "5", ",", "5", ",", "chn", ",", "chn", "]", ",", "'Dw4'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn", "]", ",", "'Db4'", ")", "\n", "s2", "=", "lrelu", "(", "deconv", "(", "s2", ",", "w", ",", "[", "-", "1", ",", "ang_in", ",", "size_wid", "[", "2", "]", ",", "chn", "]", ",", "[", "1", ",", "1", ",", "2", ",", "1", "]", ")", "+", "b", ")", "\n", "\n", "s", "=", "tf", ".", "concat", "(", "[", "s1", ",", "s2", ",", "s3", "]", ",", "-", "1", ")", "\n", "\n", "\"\"\"Mapping\"\"\"", "\n", "w", "=", "weight_variable", "(", "[", "3", ",", "3", ",", "chn", "*", "3", ",", "chn", "*", "3", "]", ",", "'w7'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn", "*", "3", "]", ",", "'b7'", ")", "\n", "s", "=", "lrelu", "(", "tf", ".", "layers", ".", "batch_normalization", "(", "conv2d", "(", "s", ",", "w", ",", "1", ")", "+", "b", ")", ")", "\n", "\n", "\"\"\"Angular reconstruction & inverse shear\"\"\"", "\n", "w", "=", "weight_variable", "(", "[", "9", ",", "9", ",", "chn", ",", "chn", "*", "3", "]", ",", "'Dw5'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn", "]", ",", "'Db5'", ")", "\n", "s", "=", "deconv", "(", "s", ",", "w", ",", "[", "-", "1", ",", "ang_out", ",", "size_wid", "[", "2", "]", ",", "chn", "]", ",", "[", "1", ",", "up_scale", ",", "1", ",", "1", "]", ")", "+", "b", "\n", "h", "=", "shear", "(", "s", ",", "-", "shear_value", "/", "up_scale", ")", "\n", "", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx4.blender": [[162, 223], ["tensorflow.variable_scope", "x.get_shape().as_list", "modelx4.weight_variable", "modelx4.bias_variable", "modelx4.lrelu", "modelx4.weight_variable", "modelx4.bias_variable", "modelx4.lrelu", "modelx4.weight_variable", "modelx4.bias_variable", "modelx4.lrelu", "modelx4.weight_variable", "modelx4.bias_variable", "modelx4.lrelu", "modelx4.weight_variable", "modelx4.bias_variable", "modelx4.lrelu", "modelx4.weight_variable", "modelx4.bias_variable", "modelx4.lrelu", "modelx4.weight_variable", "modelx4.bias_variable", "tensorflow.concat", "modelx4.weight_variable", "modelx4.bias_variable", "modelx4.lrelu", "modelx4.weight_variable", "modelx4.bias_variable", "tensorflow.concat", "modelx4.weight_variable", "modelx4.bias_variable", "modelx4.lrelu", "modelx4.weight_variable", "modelx4.bias_variable", "int", "int", "tensorflow.layers.batch_normalization", "modelx4.deconv", "modelx4.deconv", "modelx4.conv2d", "x.get_shape", "modelx4.conv2d", "modelx4.conv2d", "modelx4.conv2d", "modelx4.conv2d", "modelx4.conv2d", "modelx4.lrelu", "modelx4.conv2d", "modelx4.lrelu", "modelx4.conv2d", "modelx4.conv2d"], "function", ["home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.deconv", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.deconv", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d"], ["", "def", "blender", "(", "x", ",", "chn", "=", "27", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "'Blender'", ")", ":", "\n", "        ", "input_shape", "=", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "\n", "size_wid", "=", "[", "int", "(", "input_shape", "[", "2", "]", "/", "4", ")", ",", "int", "(", "input_shape", "[", "2", "]", "/", "2", ")", ",", "input_shape", "[", "2", "]", "]", "\n", "chn_in", "=", "input_shape", "[", "3", "]", "\n", "ang_in", "=", "input_shape", "[", "1", "]", "\n", "\n", "# Blending", "\n", "w", "=", "weight_variable", "(", "[", "1", ",", "1", ",", "chn_in", ",", "chn", "]", ",", "'w0'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn", "]", ",", "'b0'", ")", "\n", "h0", "=", "lrelu", "(", "conv2d", "(", "x", ",", "w", ",", "1", ")", "+", "b", ")", "\n", "\n", "# Encoder: Stride 2", "\n", "w", "=", "weight_variable", "(", "[", "3", ",", "3", ",", "chn", ",", "chn", "*", "2", "]", ",", "'w1'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn", "*", "2", "]", ",", "'b1'", ")", "\n", "h1", "=", "lrelu", "(", "conv2d", "(", "h0", ",", "w", ",", "2", ")", "+", "b", ")", "\n", "\n", "w", "=", "weight_variable", "(", "[", "3", ",", "3", ",", "chn", "*", "2", ",", "chn", "*", "2", "]", ",", "'w2'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn", "*", "2", "]", ",", "'b2'", ")", "\n", "h1", "=", "lrelu", "(", "conv2d", "(", "h1", ",", "w", ",", "1", ")", "+", "b", ")", "\n", "\n", "# Encoder: Stride 2", "\n", "w", "=", "weight_variable", "(", "[", "3", ",", "3", ",", "chn", "*", "2", ",", "chn", "*", "2", "]", ",", "'w3'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn", "*", "2", "]", ",", "'b3'", ")", "\n", "h2", "=", "lrelu", "(", "conv2d", "(", "h1", ",", "w", ",", "2", ")", "+", "b", ")", "\n", "\n", "w", "=", "weight_variable", "(", "[", "3", ",", "3", ",", "chn", "*", "2", ",", "chn", "*", "2", "]", ",", "'w4'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn", "*", "2", "]", ",", "'b4'", ")", "\n", "h2", "=", "lrelu", "(", "conv2d", "(", "h2", ",", "w", ",", "1", ")", "+", "b", ")", "\n", "\n", "# Mapping", "\n", "w", "=", "weight_variable", "(", "[", "3", ",", "3", ",", "chn", "*", "2", ",", "chn", "*", "2", "]", ",", "'w5'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn", "*", "2", "]", ",", "'b5'", ")", "\n", "h2", "=", "lrelu", "(", "tf", ".", "layers", ".", "batch_normalization", "(", "conv2d", "(", "h2", ",", "w", ",", "1", ")", "+", "b", ")", ")", "\n", "\n", "# Decoder: Stride 2", "\n", "w", "=", "weight_variable", "(", "[", "5", ",", "5", ",", "chn", "*", "2", ",", "chn", "*", "2", "]", ",", "'Dw1'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn", "*", "2", "]", ",", "'Db1'", ")", "\n", "h2", "=", "deconv", "(", "h2", ",", "w", ",", "[", "-", "1", ",", "ang_in", ",", "size_wid", "[", "1", "]", ",", "chn", "*", "2", "]", ",", "[", "1", ",", "1", ",", "2", ",", "1", "]", ")", "+", "b", "\n", "\n", "h3", "=", "tf", ".", "concat", "(", "[", "lrelu", "(", "h2", ")", ",", "h1", "]", ",", "3", ")", "\n", "\n", "w", "=", "weight_variable", "(", "[", "1", ",", "1", ",", "chn", "*", "4", ",", "chn", "*", "2", "]", ",", "'Dw2'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn", "*", "2", "]", ",", "'Db2'", ")", "\n", "h3", "=", "lrelu", "(", "conv2d", "(", "h3", ",", "w", ",", "1", ")", "+", "b", ")", "\n", "\n", "# Decoder: Stride 2", "\n", "w", "=", "weight_variable", "(", "[", "5", ",", "5", ",", "chn", ",", "chn", "*", "2", "]", ",", "'Dw3'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn", "]", ",", "'Db3'", ")", "\n", "h4", "=", "deconv", "(", "h3", ",", "w", ",", "[", "-", "1", ",", "ang_in", ",", "size_wid", "[", "2", "]", ",", "chn", "]", ",", "[", "1", ",", "1", ",", "2", ",", "1", "]", ")", "+", "b", "\n", "\n", "h4", "=", "tf", ".", "concat", "(", "[", "lrelu", "(", "h4", ")", ",", "h0", "]", ",", "3", ")", "\n", "\n", "w", "=", "weight_variable", "(", "[", "1", ",", "1", ",", "chn", "*", "2", ",", "chn", "]", ",", "'Dw4'", ")", "\n", "b", "=", "bias_variable", "(", "[", "chn", "]", ",", "'Db4'", ")", "\n", "h4", "=", "lrelu", "(", "conv2d", "(", "h4", ",", "w", ",", "1", ")", "+", "b", ")", "\n", "\n", "w", "=", "weight_variable", "(", "[", "9", ",", "9", ",", "chn", ",", "1", "]", ",", "'w6'", ")", "# The difference with old model", "\n", "b", "=", "bias_variable", "(", "[", "1", "]", ",", "'b6'", ")", "\n", "h", "=", "conv2d", "(", "h4", ",", "w", ",", "1", ")", "+", "b", "\n", "", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx4.model": [[225, 246], ["x.get_shape().as_list", "modelx4.reconstructor", "modelx4.reconstructor", "modelx4.reconstructor", "modelx4.reconstructor", "modelx4.reconstructor", "modelx4.reconstructor", "modelx4.reconstructor", "tensorflow.concat", "modelx4.blender", "int", "int", "x.get_shape"], "function", ["home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx4.reconstructor", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx4.reconstructor", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx4.reconstructor", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx4.reconstructor", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx4.reconstructor", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx4.reconstructor", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx4.reconstructor", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.modelx4.blender"], ["", "def", "model", "(", "up_scale", ",", "x", ")", ":", "\n", "    ", "input_shape", "=", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "\n", "size_wid", "=", "[", "int", "(", "input_shape", "[", "2", "]", "/", "4", ")", ",", "int", "(", "input_shape", "[", "2", "]", "/", "2", ")", ",", "input_shape", "[", "2", "]", "]", "\n", "ang_in", "=", "input_shape", "[", "1", "]", "\n", "ang_out", "=", "(", "ang_in", "-", "1", ")", "*", "up_scale", "+", "1", "\n", "chn_base", "=", "27", "\n", "\n", "# Shear reconstructor", "\n", "s1", "=", "reconstructor", "(", "up_scale", ",", "x", ",", "shear_value", "=", "-", "12", ",", "chn", "=", "chn_base", ")", "\n", "s2", "=", "reconstructor", "(", "up_scale", ",", "x", ",", "shear_value", "=", "-", "8", ",", "chn", "=", "chn_base", ")", "\n", "s3", "=", "reconstructor", "(", "up_scale", ",", "x", ",", "shear_value", "=", "-", "4", ",", "chn", "=", "chn_base", ")", "\n", "s4", "=", "reconstructor", "(", "up_scale", ",", "x", ",", "shear_value", "=", "0", ",", "chn", "=", "chn_base", ")", "\n", "s5", "=", "reconstructor", "(", "up_scale", ",", "x", ",", "shear_value", "=", "4", ",", "chn", "=", "chn_base", ")", "\n", "s6", "=", "reconstructor", "(", "up_scale", ",", "x", ",", "shear_value", "=", "8", ",", "chn", "=", "chn_base", ")", "\n", "s7", "=", "reconstructor", "(", "up_scale", ",", "x", ",", "shear_value", "=", "12", ",", "chn", "=", "chn_base", ")", "\n", "\n", "s", "=", "tf", ".", "concat", "(", "[", "s1", ",", "s2", ",", "s3", ",", "s4", ",", "s5", ",", "s6", ",", "s7", "]", ",", "axis", "=", "-", "1", ")", "\n", "\n", "# Shear blender", "\n", "y_out", "=", "blender", "(", "s", ",", "chn", "=", "chn_base", ")", "\n", "return", "y_out", "\n", "", ""]], "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.main3d.slice_reconstruction": [[71, 98], ["sess.as_default", "utils.rgb2ycbcr", "utils.ycbcr2rgb", "numpy.minimum", "numpy.reshape", "sess.run", "tensorflow.image.resize_bicubic", "sess.run", "numpy.transpose", "tensorflow.convert_to_tensor", "tensorflow.image.resize_bicubic", "sess.run", "sess.run", "tensorflow.convert_to_tensor", "tensorflow.image.resize_bicubic", "sess.run", "numpy.maximum", "numpy.transpose", "numpy.reshape"], "function", ["home.repos.pwc.inspect_result.GaochangWu_DA2N.None.utils.rgb2ycbcr", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.utils.ycbcr2rgb"], ["", "def", "slice_reconstruction", "(", "wid", ",", "slice", ",", "ang_in", ",", "ang_tar", ")", ":", "\n", "    ", "with", "sess", ".", "as_default", "(", ")", ":", "\n", "        ", "slice", "=", "utils", ".", "rgb2ycbcr", "(", "slice", ")", "\n", "if", "FLAG_RGB", ":", "\n", "            ", "slice", "=", "np", ".", "reshape", "(", "np", ".", "transpose", "(", "slice", ",", "[", "0", ",", "3", ",", "1", ",", "2", "]", ")", ",", "[", "-", "1", ",", "ang_in", ",", "wid", ",", "1", "]", ")", "\n", "\n", "slice", "=", "sess", ".", "run", "(", "y_out", ",", "feed_dict", "=", "{", "x", ":", "slice", "}", ")", "\n", "\n", "slice", "=", "tf", ".", "image", ".", "resize_bicubic", "(", "slice", ",", "[", "ang_tar", ",", "wid", "]", ")", "\n", "slice", "=", "sess", ".", "run", "(", "slice", ")", "\n", "slice", "=", "np", ".", "transpose", "(", "np", ".", "reshape", "(", "slice", ",", "[", "-", "1", ",", "3", ",", "ang_tar", ",", "wid", "]", ")", ",", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "\n", "", "else", ":", "\n", "            ", "slice_y", "=", "slice", "[", ":", ",", ":", ",", ":", ",", "0", ":", "1", "]", "\n", "\n", "slice", "=", "tf", ".", "convert_to_tensor", "(", "slice", ")", "\n", "slice", "=", "tf", ".", "image", ".", "resize_bicubic", "(", "slice", ",", "[", "ang_tar", ",", "wid", "]", ")", "\n", "slice", "=", "sess", ".", "run", "(", "slice", ")", "\n", "\n", "slice_y", "=", "sess", ".", "run", "(", "y_out", ",", "feed_dict", "=", "{", "x", ":", "slice_y", "}", ")", "\n", "\n", "slice_y", "=", "tf", ".", "convert_to_tensor", "(", "slice_y", ")", "\n", "slice_y", "=", "tf", ".", "image", ".", "resize_bicubic", "(", "slice_y", ",", "[", "ang_tar", ",", "wid", "]", ")", "\n", "slice", "[", ":", ",", ":", ",", ":", ",", "0", ":", "1", "]", "=", "sess", ".", "run", "(", "slice_y", ")", "\n", "\n", "", "slice", "=", "utils", ".", "ycbcr2rgb", "(", "slice", ")", "\n", "slice", "=", "np", ".", "minimum", "(", "np", ".", "maximum", "(", "slice", ",", "0", ")", ",", "1", ")", "\n", "", "return", "slice", "\n", "\n"]], "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.main4d.slice_reconstruction": [[41, 68], ["sess.as_default", "utils.rgb2ycbcr", "utils.ycbcr2rgb", "numpy.minimum", "numpy.reshape", "sess.run", "tensorflow.image.resize_bicubic", "sess.run", "numpy.transpose", "tensorflow.convert_to_tensor", "tensorflow.image.resize_bicubic", "sess.run", "sess.run", "tensorflow.convert_to_tensor", "tensorflow.image.resize_bicubic", "sess.run", "numpy.maximum", "numpy.transpose", "numpy.reshape"], "function", ["home.repos.pwc.inspect_result.GaochangWu_DA2N.None.utils.rgb2ycbcr", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.utils.ycbcr2rgb"], ["", "def", "slice_reconstruction", "(", "wid", ",", "slice", ",", "ang_in", ",", "ang_tar", ")", ":", "\n", "# ---------------- Model -------------------- #", "\n", "    ", "with", "sess", ".", "as_default", "(", ")", ":", "\n", "        ", "slice", "=", "utils", ".", "rgb2ycbcr", "(", "slice", ")", "\n", "if", "FLAG_RGB", ":", "\n", "            ", "slice", "=", "np", ".", "reshape", "(", "np", ".", "transpose", "(", "slice", ",", "[", "0", ",", "3", ",", "1", ",", "2", "]", ")", ",", "[", "-", "1", ",", "ang_in", ",", "wid", ",", "1", "]", ")", "\n", "\n", "slice", "=", "sess", ".", "run", "(", "y_out", ",", "feed_dict", "=", "{", "x", ":", "slice", "}", ")", "\n", "\n", "slice", "=", "tf", ".", "image", ".", "resize_bicubic", "(", "slice", ",", "[", "ang_tar", ",", "wid", "]", ")", "\n", "slice", "=", "sess", ".", "run", "(", "slice", ")", "\n", "slice", "=", "np", ".", "transpose", "(", "np", ".", "reshape", "(", "slice", ",", "[", "-", "1", ",", "3", ",", "ang_tar", ",", "wid", "]", ")", ",", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "\n", "", "else", ":", "\n", "            ", "slice_p", "=", "slice", "[", ":", ",", ":", ",", ":", ",", "0", ":", "1", "]", "\n", "\n", "slice", "=", "tf", ".", "convert_to_tensor", "(", "slice", ")", "\n", "slice", "=", "tf", ".", "image", ".", "resize_bicubic", "(", "slice", ",", "[", "ang_out", ",", "wid", "]", ")", "\n", "slice", "=", "sess", ".", "run", "(", "slice", ")", "\n", "\n", "slice_y", "=", "sess", ".", "run", "(", "y_out", ",", "feed_dict", "=", "{", "x", ":", "slice_p", "}", ")", "\n", "\n", "slice_y", "=", "tf", ".", "convert_to_tensor", "(", "slice_y", ")", "\n", "slice_y", "=", "tf", ".", "image", ".", "resize_bicubic", "(", "slice_y", ",", "[", "ang_out", ",", "wid", "]", ")", "\n", "slice", "[", ":", ",", ":", ",", ":", ",", "0", ":", "1", "]", "=", "sess", ".", "run", "(", "slice_y", ")", "\n", "", "slice", "=", "utils", ".", "ycbcr2rgb", "(", "slice", ")", "\n", "slice", "=", "np", ".", "minimum", "(", "np", ".", "maximum", "(", "slice", ",", "0", ")", ",", "1", ")", "\n", "", "return", "slice", "\n", "\n"]], "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable": [[4, 8], ["tensorflow.variable_scope", "tensorflow.truncated_normal", "tensorflow.Variable"], "function", ["None"], ["def", "weight_variable", "(", "shape", ",", "scope", "=", "None", ",", "name", "=", "None", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "name_or_scope", "=", "scope", ",", "default_name", "=", "name", ")", ":", "\n", "        ", "initial", "=", "tf", ".", "truncated_normal", "(", "shape", ",", "dtype", "=", "tf", ".", "float32", ",", "stddev", "=", "0.001", ")", "\n", "return", "tf", ".", "Variable", "(", "initial", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable": [[10, 14], ["tensorflow.variable_scope", "tensorflow.constant", "tensorflow.Variable"], "function", ["None"], ["", "", "def", "bias_variable", "(", "shape", ",", "scope", "=", "None", ",", "name", "=", "None", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "name_or_scope", "=", "scope", ",", "default_name", "=", "name", ")", ":", "\n", "        ", "initial", "=", "tf", ".", "constant", "(", "0.0", ",", "shape", "=", "shape", ",", "dtype", "=", "tf", ".", "float32", ",", "name", "=", "name", ")", "\n", "return", "tf", ".", "Variable", "(", "initial", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d": [[16, 18], ["tensorflow.nn.conv2d"], "function", ["home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d"], ["", "", "def", "conv2d", "(", "x", ",", "w", ",", "strides", ",", "name", "=", "None", ")", ":", "\n", "    ", "return", "tf", ".", "nn", ".", "conv2d", "(", "x", ",", "w", ",", "strides", "=", "[", "1", ",", "strides", "[", "0", "]", ",", "strides", "[", "1", "]", ",", "1", "]", ",", "padding", "=", "\"SAME\"", ",", "name", "=", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu": [[20, 22], ["tensorflow.maximum"], "function", ["None"], ["", "def", "lrelu", "(", "x", ",", "leak", "=", "0.2", ")", ":", "\n", "    ", "return", "tf", ".", "maximum", "(", "x", ",", "leak", "*", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.deconv": [[24, 30], ["tensorflow.shape", "tensorflow.stack", "tensorflow.nn.conv2d_transpose"], "function", ["None"], ["", "def", "deconv", "(", "x", ",", "w", ",", "output_shape", ",", "strides", ",", "name", "=", "None", ")", ":", "\n", "    ", "dyn_input_shape", "=", "tf", ".", "shape", "(", "x", ")", "\n", "batch_size", "=", "dyn_input_shape", "[", "0", "]", "\n", "output_shape", "=", "tf", ".", "stack", "(", "[", "batch_size", ",", "output_shape", "[", "1", "]", ",", "output_shape", "[", "2", "]", ",", "output_shape", "[", "3", "]", "]", ")", "\n", "output", "=", "tf", ".", "nn", ".", "conv2d_transpose", "(", "x", ",", "w", ",", "output_shape", ",", "strides", ",", "padding", "=", "\"SAME\"", ",", "name", "=", "name", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.encoder": [[32, 78], ["tensorflow.variable_scope", "model_ae.weight_variable", "model_ae.bias_variable", "model_ae.lrelu", "model_ae.lrelu", "model_ae.weight_variable", "model_ae.bias_variable", "model_ae.lrelu", "model_ae.lrelu", "model_ae.weight_variable", "model_ae.bias_variable", "model_ae.lrelu", "model_ae.lrelu", "model_ae.weight_variable", "model_ae.bias_variable", "model_ae.lrelu", "model_ae.lrelu", "model_ae.weight_variable", "model_ae.bias_variable", "model_ae.lrelu", "model_ae.lrelu", "model_ae.weight_variable", "model_ae.bias_variable", "model_ae.lrelu", "model_ae.lrelu", "model_ae.weight_variable", "model_ae.bias_variable", "model_ae.lrelu", "model_ae.lrelu", "tensorflow.abs", "tensorflow.abs", "tensorflow.abs", "tensorflow.abs", "model_ae.conv2d", "model_ae.conv2d", "model_ae.conv2d", "model_ae.conv2d", "model_ae.conv2d", "model_ae.conv2d", "model_ae.conv2d", "model_ae.conv2d", "model_ae.conv2d", "model_ae.conv2d", "model_ae.conv2d", "model_ae.conv2d", "model_ae.conv2d", "model_ae.conv2d"], "function", ["home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.weight_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.bias_variable", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.lrelu", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d", "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.model_ae.conv2d"], ["", "def", "encoder", "(", "x1", ",", "x2", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "'encoder'", ",", "reuse", "=", "tf", ".", "AUTO_REUSE", ")", ":", "\n", "        ", "chn_base", "=", "16", "\n", "# shape is [batch, 31, 72, 1]", "\n", "# Encoder 1", "\n", "w_conv", "=", "weight_variable", "(", "[", "3", ",", "3", ",", "1", ",", "chn_base", "]", ",", "'w1'", ")", "\n", "b_conv", "=", "bias_variable", "(", "[", "chn_base", "]", ",", "'b1'", ")", "\n", "conv1_1", "=", "lrelu", "(", "conv2d", "(", "x1", ",", "w_conv", ",", "[", "1", ",", "1", "]", ")", "+", "b_conv", ")", "\n", "conv1_1_", "=", "lrelu", "(", "conv2d", "(", "x2", ",", "w_conv", ",", "[", "1", ",", "1", "]", ")", "+", "b_conv", ")", "\n", "\n", "w_conv", "=", "weight_variable", "(", "[", "3", ",", "3", ",", "chn_base", ",", "chn_base", "]", ",", "'w2'", ")", "\n", "b_conv", "=", "bias_variable", "(", "[", "chn_base", "]", ",", "'b2'", ")", "\n", "conv1_2", "=", "lrelu", "(", "conv2d", "(", "conv1_1", ",", "w_conv", ",", "[", "2", ",", "2", "]", ")", "+", "b_conv", ")", "\n", "conv1_2_", "=", "lrelu", "(", "conv2d", "(", "conv1_1_", ",", "w_conv", ",", "[", "2", ",", "2", "]", ")", "+", "b_conv", ")", "\n", "# shape = [None, 16, 36, chn_base]", "\n", "\n", "# Encoder 2", "\n", "w_conv", "=", "weight_variable", "(", "[", "3", ",", "3", ",", "chn_base", ",", "chn_base", "*", "2", "]", ",", "'w3'", ")", "\n", "b_conv", "=", "bias_variable", "(", "[", "chn_base", "*", "2", "]", ",", "'b3'", ")", "\n", "conv2_1", "=", "lrelu", "(", "conv2d", "(", "conv1_2", ",", "w_conv", ",", "[", "1", ",", "1", "]", ")", "+", "b_conv", ")", "\n", "conv2_1_", "=", "lrelu", "(", "conv2d", "(", "conv1_2_", ",", "w_conv", ",", "[", "1", ",", "1", "]", ")", "+", "b_conv", ")", "\n", "\n", "w_conv", "=", "weight_variable", "(", "[", "3", ",", "3", ",", "chn_base", "*", "2", ",", "chn_base", "*", "2", "]", ",", "'w4'", ")", "\n", "b_conv", "=", "bias_variable", "(", "[", "chn_base", "*", "2", "]", ",", "'b4'", ")", "\n", "conv2_2", "=", "lrelu", "(", "conv2d", "(", "conv2_1", ",", "w_conv", ",", "[", "2", ",", "2", "]", ")", "+", "b_conv", ")", "\n", "conv2_2_", "=", "lrelu", "(", "conv2d", "(", "conv2_1_", ",", "w_conv", ",", "[", "2", ",", "2", "]", ")", "+", "b_conv", ")", "\n", "# shape = [None, 8, 18, chn_base * 2]", "\n", "\n", "# Encoder 3", "\n", "w_conv", "=", "weight_variable", "(", "[", "3", ",", "3", ",", "chn_base", "*", "2", ",", "chn_base", "*", "3", "]", ",", "'w5'", ")", "\n", "b_conv", "=", "bias_variable", "(", "[", "chn_base", "*", "3", "]", ",", "'b5'", ")", "\n", "conv3_1", "=", "lrelu", "(", "conv2d", "(", "conv2_2", ",", "w_conv", ",", "[", "1", ",", "1", "]", ")", "+", "b_conv", ")", "\n", "conv3_1_", "=", "lrelu", "(", "conv2d", "(", "conv2_2_", ",", "w_conv", ",", "[", "1", ",", "1", "]", ")", "+", "b_conv", ")", "\n", "\n", "w_conv", "=", "weight_variable", "(", "[", "3", ",", "3", ",", "chn_base", "*", "3", ",", "chn_base", "*", "3", "]", ",", "'w6'", ")", "\n", "b_conv", "=", "bias_variable", "(", "[", "chn_base", "*", "3", "]", ",", "'b6'", ")", "\n", "conv3_2", "=", "lrelu", "(", "conv2d", "(", "conv3_1", ",", "w_conv", ",", "[", "2", ",", "2", "]", ")", "+", "b_conv", ")", "\n", "conv3_2_", "=", "lrelu", "(", "conv2d", "(", "conv3_1_", ",", "w_conv", ",", "[", "2", ",", "2", "]", ")", "+", "b_conv", ")", "\n", "# shape = [None, 4, 9, chn_base * 3]", "\n", "\n", "# Mapping", "\n", "w_conv", "=", "weight_variable", "(", "[", "3", ",", "3", ",", "chn_base", "*", "3", ",", "chn_base", "*", "3", "]", ",", "'w7'", ")", "\n", "b_conv", "=", "bias_variable", "(", "[", "chn_base", "*", "3", "]", ",", "'b7'", ")", "\n", "conv4_1", "=", "lrelu", "(", "conv2d", "(", "conv3_2", ",", "w_conv", ",", "[", "1", ",", "1", "]", ")", "+", "b_conv", ")", "\n", "conv4_1_", "=", "lrelu", "(", "conv2d", "(", "conv3_2_", ",", "w_conv", ",", "[", "1", ",", "1", "]", ")", "+", "b_conv", ")", "\n", "", "return", "tf", ".", "abs", "(", "conv1_1", "-", "conv1_1_", ")", ",", "tf", ".", "abs", "(", "conv2_1", "-", "conv2_1_", ")", ",", "tf", ".", "abs", "(", "conv3_1", "-", "conv3_1_", ")", ",", "tf", ".", "abs", "(", "conv4_1", "-", "conv4_1_", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.utils.load_h5_data": [[13, 20], ["h5py.File", "numpy.array", "numpy.array", "numpy.transpose", "numpy.transpose", "hf.get", "hf.get"], "function", ["None"], ["def", "load_h5_data", "(", "file", ")", ":", "\n", "    ", "with", "h5py", ".", "File", "(", "file", ",", "'r'", ")", "as", "hf", ":", "\n", "        ", "data", "=", "np", ".", "array", "(", "hf", ".", "get", "(", "'data'", ")", ")", "\n", "label", "=", "np", ".", "array", "(", "hf", ".", "get", "(", "'label'", ")", ")", "\n", "data", "=", "np", ".", "transpose", "(", "data", ",", "(", "0", ",", "3", ",", "2", ",", "1", ")", ")", "\n", "label", "=", "np", ".", "transpose", "(", "label", ",", "(", "0", ",", "3", ",", "2", ",", "1", ")", ")", "\n", "", "return", "data", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.utils.get_num_params": [[22, 29], ["tensorflow.trainable_variables", "variable.name.startswith", "variable.get_shape", "functools.reduce"], "function", ["None"], ["", "def", "get_num_params", "(", "name", "=", "None", ")", ":", "\n", "    ", "num_params", "=", "0", "\n", "for", "variable", "in", "tf", ".", "trainable_variables", "(", ")", ":", "\n", "        ", "if", "variable", ".", "name", ".", "startswith", "(", "name", ")", ":", "\n", "            ", "shape", "=", "variable", ".", "get_shape", "(", ")", "\n", "num_params", "+=", "reduce", "(", "mul", ",", "[", "dim", ".", "value", "for", "dim", "in", "shape", "]", ",", "1", ")", "\n", "", "", "return", "num_params", "\n", "\n"]], "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.utils.mkdir": [[31, 35], ["os.path.exists", "os.makedirs"], "function", ["None"], ["", "def", "mkdir", "(", "path", ")", ":", "\n", "    ", "folder", "=", "os", ".", "path", ".", "exists", "(", "path", ")", "\n", "if", "not", "folder", ":", "\n", "        ", "os", ".", "makedirs", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.utils.load4DLF": [[37, 73], ["numpy.power", "skimage.color.rgb2hsv", "skimage.color.hsv2rgb", "numpy.minimum", "numpy.zeros", "range", "matplotlib.pyplot.imread", "matplotlib.pyplot.imread", "numpy.float32", "numpy.maximum", "range", "numpy.power", "numpy.power", "matplotlib.pyplot.imread", "numpy.float32", "numpy.power", "numpy.power", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange"], "function", ["None"], ["", "", "def", "load4DLF", "(", "file_name", ",", "s", ",", "t", ",", "ang_start", ",", "ang_ori", ",", "ang_in", ",", "tone_coef", ",", "pyramid", ")", ":", "\n", "    ", "scale", "=", "(", "ang_ori", "-", "1", ")", "//", "(", "ang_in", "-", "1", ")", "\n", "try", ":", "\n", "        ", "input_lf", "=", "plt", ".", "imread", "(", "file_name", "+", "\".png\"", ")", "\n", "", "except", ":", "\n", "        ", "input_lf", "=", "plt", ".", "imread", "(", "file_name", "+", "\".jpg\"", ")", "\n", "input_lf", "=", "np", ".", "float32", "(", "input_lf", "[", ":", ",", ":", ",", ":", "3", "]", ")", "\n", "", "else", ":", "\n", "        ", "input_lf", "=", "plt", ".", "imread", "(", "file_name", "+", "\".png\"", ")", "\n", "input_lf", "=", "np", ".", "float32", "(", "input_lf", "[", ":", ",", ":", ",", ":", "3", "]", ")", "\n", "\n", "# Adjust tone", "\n", "", "input_lf", "=", "np", ".", "power", "(", "input_lf", ",", "1", "/", "tone_coef", ")", "\n", "# input_lf = cv2.cvtColor(input_lf, cv2.COLOR_RGB2HSV)", "\n", "input_lf", "=", "color", ".", "rgb2hsv", "(", "input_lf", ")", "\n", "input_lf", "[", ":", ",", ":", ",", "1", ":", "2", "]", "=", "input_lf", "[", ":", ",", ":", ",", "1", ":", "2", "]", "*", "tone_coef", "\n", "# input_lf = cv2.cvtColor(input_lf, cv2.COLOR_HSV2RGB)", "\n", "input_lf", "=", "color", ".", "hsv2rgb", "(", "input_lf", ")", "\n", "input_lf", "=", "np", ".", "minimum", "(", "np", ".", "maximum", "(", "input_lf", ",", "0", ")", ",", "1", ")", "\n", "\n", "hei", "=", "input_lf", ".", "shape", "[", "0", "]", "//", "t", "\n", "wid", "=", "input_lf", ".", "shape", "[", "1", "]", "//", "s", "\n", "chn", "=", "input_lf", ".", "shape", "[", "2", "]", "\n", "full_lf", "=", "np", ".", "zeros", "(", "shape", "=", "(", "hei", ",", "wid", ",", "chn", ",", "t", ",", "s", ")", ")", "\n", "\n", "for", "ax", "in", "range", "(", "0", ",", "s", ")", ":", "\n", "        ", "temp", "=", "input_lf", "[", ":", ",", "np", ".", "arange", "(", "ax", ",", "input_lf", ".", "shape", "[", "1", "]", ",", "s", ")", "]", "\n", "for", "ay", "in", "range", "(", "0", ",", "t", ")", ":", "\n", "            ", "full_lf", "[", ":", ",", ":", ",", ":", ",", "ay", ",", "ax", "]", "=", "temp", "[", "np", ".", "arange", "(", "ay", ",", "input_lf", ".", "shape", "[", "0", "]", ",", "t", ")", "]", "\n", "\n", "", "", "hei", "=", "hei", "//", "(", "np", ".", "power", "(", "2", ",", "pyramid", "-", "1", ")", ")", "*", "(", "np", ".", "power", "(", "2", ",", "pyramid", "-", "1", ")", ")", "\n", "wid", "=", "wid", "//", "(", "np", ".", "power", "(", "2", ",", "pyramid", "-", "1", ")", ")", "*", "(", "np", ".", "power", "(", "2", ",", "pyramid", "-", "1", ")", ")", "\n", "full_lf", "=", "full_lf", "[", "0", ":", "hei", ",", "0", ":", "wid", ",", ":", ",", "ang_start", "-", "1", ":", "ang_start", "+", "ang_ori", "-", "1", ",", "ang_start", "-", "1", ":", "ang_start", "+", "ang_ori", "-", "1", "]", "\n", "input_lf", "=", "full_lf", "[", ":", ",", ":", ",", ":", ",", "np", ".", "arange", "(", "0", ",", "ang_ori", ",", "scale", ")", "]", "\n", "input_lf", "=", "input_lf", "[", ":", ",", ":", ",", ":", ",", ":", ",", "np", ".", "arange", "(", "0", ",", "ang_ori", ",", "scale", ")", "]", "\n", "return", "full_lf", ",", "input_lf", "\n", "\n"]], "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.utils.rgb2ycbcr": [[75, 81], ["numpy.stack"], "function", ["None"], ["", "def", "rgb2ycbcr", "(", "x", ")", ":", "\n", "    ", "y", "=", "(", "24.966", "*", "x", "[", ":", ",", ":", ",", ":", ",", "2", "]", "+", "128.553", "*", "x", "[", ":", ",", ":", ",", ":", ",", "1", "]", "+", "65.481", "*", "x", "[", ":", ",", ":", ",", ":", ",", "0", "]", "+", "16", ")", "/", "255", "\n", "cb", "=", "(", "112", "*", "x", "[", ":", ",", ":", ",", ":", ",", "2", "]", "-", "74.203", "*", "x", "[", ":", ",", ":", ",", ":", ",", "1", "]", "-", "37.797", "*", "x", "[", ":", ",", ":", ",", ":", ",", "0", "]", "+", "128", ")", "/", "255", "\n", "cr", "=", "(", "-", "18.214", "*", "x", "[", ":", ",", ":", ",", ":", ",", "2", "]", "-", "93.789", "*", "x", "[", ":", ",", ":", ",", ":", ",", "1", "]", "+", "112", "*", "x", "[", ":", ",", ":", ",", ":", ",", "0", "]", "+", "128", ")", "/", "255", "\n", "y", "=", "np", ".", "stack", "(", "[", "y", ",", "cb", ",", "cr", "]", ",", "axis", "=", "3", ")", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.utils.ycbcr2rgb": [[83, 90], ["numpy.stack"], "function", ["None"], ["", "def", "ycbcr2rgb", "(", "x", ")", ":", "\n", "    ", "r", "=", "1.16438356", "*", "(", "x", "[", ":", ",", ":", ",", ":", ",", "0", "]", "-", "16", "/", "255", ")", "+", "1.59602715", "*", "(", "x", "[", ":", ",", ":", ",", ":", ",", "2", "]", "-", "128", "/", "255", ")", "\n", "g", "=", "1.16438356", "*", "(", "x", "[", ":", ",", ":", ",", ":", ",", "0", "]", "-", "16", "/", "255", ")", "-", "0.3917616", "*", "(", "x", "[", ":", ",", ":", ",", ":", ",", "1", "]", "-", "128", "/", "255", ")", "-", "0.81296805", "*", "(", "\n", "x", "[", ":", ",", ":", ",", ":", ",", "2", "]", "-", "128", "/", "255", ")", "\n", "b", "=", "1.16438356", "*", "(", "x", "[", ":", ",", ":", ",", ":", ",", "0", "]", "-", "16", "/", "255", ")", "+", "2.01723105", "*", "(", "x", "[", ":", ",", ":", ",", ":", ",", "1", "]", "-", "128", "/", "255", ")", "\n", "y", "=", "np", ".", "stack", "(", "[", "r", ",", "g", ",", "b", "]", ",", "axis", "=", "3", ")", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.GaochangWu_DA2N.None.utils.metric": [[92, 104], ["numpy.mean", "skimage.measure.compare_ssim", "numpy.log10", "numpy.sqrt"], "function", ["None"], ["", "def", "metric", "(", "x", ",", "y", ",", "border_cut", ")", ":", "\n", "    ", "if", "border_cut", ">", "0", ":", "\n", "        ", "x", "=", "x", "[", "border_cut", ":", "-", "border_cut", ",", "border_cut", ":", "-", "border_cut", ",", ":", "]", "\n", "y", "=", "y", "[", "border_cut", ":", "-", "border_cut", ",", "border_cut", ":", "-", "border_cut", ",", ":", "]", "\n", "", "else", ":", "\n", "        ", "x", "=", "x", "\n", "y", "=", "y", "\n", "\n", "", "x", "=", "0.256788", "*", "x", "[", ":", ",", ":", ",", "0", "]", "+", "0.504129", "*", "x", "[", ":", ",", ":", ",", "1", "]", "+", "0.097906", "*", "x", "[", ":", ",", ":", ",", "2", "]", "+", "16", "/", "255", "\n", "y", "=", "0.256788", "*", "y", "[", ":", ",", ":", ",", "0", "]", "+", "0.504129", "*", "y", "[", ":", ",", ":", ",", "1", "]", "+", "0.097906", "*", "y", "[", ":", ",", ":", ",", "2", "]", "+", "16", "/", "255", "\n", "mse", "=", "np", ".", "mean", "(", "(", "x", "-", "y", ")", "**", "2", ")", "\n", "return", "20", "*", "np", ".", "log10", "(", "1", "/", "np", ".", "sqrt", "(", "mse", ")", ")", ",", "compare_ssim", "(", "x", ",", "y", ")", "\n", "", ""]]}