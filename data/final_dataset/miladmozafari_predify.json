{"home.repos.pwc.inspect_result.miladmozafari_predify.None.setup.get_requirements": [[11, 15], ["open", "f.read().splitlines", "f.read"], "function", ["None"], ["", "def", "get_requirements", "(", ")", ":", "\n", "    ", "with", "open", "(", "\"requirements.txt\"", ",", "\"r\"", ")", "as", "f", ":", "\n", "        ", "requirements", "=", "f", ".", "read", "(", ")", ".", "splitlines", "(", ")", "\n", "", "return", "requirements", "\n", "\n"]], "home.repos.pwc.inspect_result.miladmozafari_predify.PVGG16.pvgg16_shared.PVGG16SameHP.__init__": [[6, 48], ["predify.networks.PNetSameHP.__init__", "torch.nn.ConvTranspose2d", "predify.modules.PCoder", "pvgg16_shared.PVGG16SameHP.backbone.features[].register_forward_hook", "torch.nn.Sequential", "predify.modules.PCoder", "pvgg16_shared.PVGG16SameHP.backbone.features[].register_forward_hook", "torch.nn.Sequential", "predify.modules.PCoder", "pvgg16_shared.PVGG16SameHP.backbone.features[].register_forward_hook", "torch.nn.Sequential", "predify.modules.PCoder", "pvgg16_shared.PVGG16SameHP.backbone.features[].register_forward_hook", "torch.nn.Sequential", "predify.modules.PCoder", "pvgg16_shared.PVGG16SameHP.backbone.features[].register_forward_hook", "pvgg16_shared.PVGG16SameHP.pcoder1", "torch.nn.ConvTranspose2d", "torch.nn.ReLU", "pvgg16_shared.PVGG16SameHP.pcoder2", "torch.nn.ConvTranspose2d", "torch.nn.ReLU", "pvgg16_shared.PVGG16SameHP.pcoder3", "torch.nn.ConvTranspose2d", "torch.nn.ReLU", "pvgg16_shared.PVGG16SameHP.pcoder4", "torch.nn.ConvTranspose2d", "torch.nn.ReLU", "pvgg16_shared.PVGG16SameHP.pcoder5"], "methods", ["home.repos.pwc.inspect_result.miladmozafari_predify.networks.base.PNetSeparateHP.__init__"], ["    ", "def", "__init__", "(", "self", ",", "backbone", ",", "build_graph", "=", "False", ",", "random_init", "=", "False", ",", "ff_multiplier", "=", "0.2", ",", "fb_multiplier", "=", "0.05", ",", "er_multiplier", "=", "0.01", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "backbone", ",", "5", ",", "build_graph", ",", "random_init", ",", "ff_multiplier", ",", "fb_multiplier", ",", "er_multiplier", ")", "\n", "\n", "# PCoder number 1", "\n", "pmodule", "=", "ConvTranspose2d", "(", "64", ",", "3", ",", "kernel_size", "=", "(", "5", ",", "5", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "2", ",", "2", ")", ")", "\n", "self", ".", "pcoder1", "=", "PCoder", "(", "pmodule", ",", "True", ",", "self", ".", "random_init", ")", "\n", "def", "fw_hook1", "(", "m", ",", "m_in", ",", "m_out", ")", ":", "\n", "            ", "e", "=", "self", ".", "pcoder1", "(", "ff", "=", "m_out", ",", "fb", "=", "self", ".", "pcoder2", ".", "prd", ",", "target", "=", "self", ".", "input_mem", ",", "build_graph", "=", "self", ".", "build_graph", ",", "ffm", "=", "self", ".", "ffm", ",", "fbm", "=", "self", ".", "fbm", ",", "erm", "=", "self", ".", "erm", ")", "\n", "return", "e", "[", "0", "]", "\n", "", "self", ".", "backbone", ".", "features", "[", "3", "]", ".", "register_forward_hook", "(", "fw_hook1", ")", "\n", "\n", "# PCoder number 2", "\n", "pmodule", "=", "Sequential", "(", "ConvTranspose2d", "(", "128", ",", "64", ",", "kernel_size", "=", "(", "10", ",", "10", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "4", ",", "4", ")", ")", ",", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "pcoder2", "=", "PCoder", "(", "pmodule", ",", "True", ",", "self", ".", "random_init", ")", "\n", "def", "fw_hook2", "(", "m", ",", "m_in", ",", "m_out", ")", ":", "\n", "            ", "e", "=", "self", ".", "pcoder2", "(", "ff", "=", "m_out", ",", "fb", "=", "self", ".", "pcoder3", ".", "prd", ",", "target", "=", "self", ".", "pcoder1", ".", "rep", ",", "build_graph", "=", "self", ".", "build_graph", ",", "ffm", "=", "self", ".", "ffm", ",", "fbm", "=", "self", ".", "fbm", ",", "erm", "=", "self", ".", "erm", ")", "\n", "return", "e", "[", "0", "]", "\n", "", "self", ".", "backbone", ".", "features", "[", "8", "]", ".", "register_forward_hook", "(", "fw_hook2", ")", "\n", "\n", "# PCoder number 3", "\n", "pmodule", "=", "Sequential", "(", "ConvTranspose2d", "(", "256", ",", "128", ",", "kernel_size", "=", "(", "14", ",", "14", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "6", ",", "6", ")", ")", ",", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "pcoder3", "=", "PCoder", "(", "pmodule", ",", "True", ",", "self", ".", "random_init", ")", "\n", "def", "fw_hook3", "(", "m", ",", "m_in", ",", "m_out", ")", ":", "\n", "            ", "e", "=", "self", ".", "pcoder3", "(", "ff", "=", "m_out", ",", "fb", "=", "self", ".", "pcoder4", ".", "prd", ",", "target", "=", "self", ".", "pcoder2", ".", "rep", ",", "build_graph", "=", "self", ".", "build_graph", ",", "ffm", "=", "self", ".", "ffm", ",", "fbm", "=", "self", ".", "fbm", ",", "erm", "=", "self", ".", "erm", ")", "\n", "return", "e", "[", "0", "]", "\n", "", "self", ".", "backbone", ".", "features", "[", "15", "]", ".", "register_forward_hook", "(", "fw_hook3", ")", "\n", "\n", "# PCoder number 4", "\n", "pmodule", "=", "Sequential", "(", "ConvTranspose2d", "(", "512", ",", "256", ",", "kernel_size", "=", "(", "14", ",", "14", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "6", ",", "6", ")", ")", ",", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "pcoder4", "=", "PCoder", "(", "pmodule", ",", "True", ",", "self", ".", "random_init", ")", "\n", "def", "fw_hook4", "(", "m", ",", "m_in", ",", "m_out", ")", ":", "\n", "            ", "e", "=", "self", ".", "pcoder4", "(", "ff", "=", "m_out", ",", "fb", "=", "self", ".", "pcoder5", ".", "prd", ",", "target", "=", "self", ".", "pcoder3", ".", "rep", ",", "build_graph", "=", "self", ".", "build_graph", ",", "ffm", "=", "self", ".", "ffm", ",", "fbm", "=", "self", ".", "fbm", ",", "erm", "=", "self", ".", "erm", ")", "\n", "return", "e", "[", "0", "]", "\n", "", "self", ".", "backbone", ".", "features", "[", "22", "]", ".", "register_forward_hook", "(", "fw_hook4", ")", "\n", "\n", "# PCoder number 5", "\n", "pmodule", "=", "Sequential", "(", "ConvTranspose2d", "(", "512", ",", "512", ",", "kernel_size", "=", "(", "14", ",", "14", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "6", ",", "6", ")", ")", ",", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "pcoder5", "=", "PCoder", "(", "pmodule", ",", "False", ",", "self", ".", "random_init", ")", "\n", "def", "fw_hook5", "(", "m", ",", "m_in", ",", "m_out", ")", ":", "\n", "            ", "e", "=", "self", ".", "pcoder5", "(", "ff", "=", "m_out", ",", "fb", "=", "None", ",", "target", "=", "self", ".", "pcoder4", ".", "rep", ",", "build_graph", "=", "self", ".", "build_graph", ",", "ffm", "=", "self", ".", "ffm", ",", "fbm", "=", "self", ".", "fbm", ",", "erm", "=", "self", ".", "erm", ")", "\n", "return", "e", "[", "0", "]", "\n", "", "self", ".", "backbone", ".", "features", "[", "29", "]", ".", "register_forward_hook", "(", "fw_hook5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.miladmozafari_predify.PVGG16.pvgg16_separate.PVGG16SeparateHP.__init__": [[6, 48], ["predify.networks.PNetSeparateHP.__init__", "torch.nn.ConvTranspose2d", "predify.modules.PCoder", "pvgg16_separate.PVGG16SeparateHP.backbone.features[].register_forward_hook", "torch.nn.Sequential", "predify.modules.PCoder", "pvgg16_separate.PVGG16SeparateHP.backbone.features[].register_forward_hook", "torch.nn.Sequential", "predify.modules.PCoder", "pvgg16_separate.PVGG16SeparateHP.backbone.features[].register_forward_hook", "torch.nn.Sequential", "predify.modules.PCoder", "pvgg16_separate.PVGG16SeparateHP.backbone.features[].register_forward_hook", "torch.nn.Sequential", "predify.modules.PCoder", "pvgg16_separate.PVGG16SeparateHP.backbone.features[].register_forward_hook", "pvgg16_separate.PVGG16SeparateHP.pcoder1", "torch.nn.ConvTranspose2d", "torch.nn.ReLU", "pvgg16_separate.PVGG16SeparateHP.pcoder2", "torch.nn.ConvTranspose2d", "torch.nn.ReLU", "pvgg16_separate.PVGG16SeparateHP.pcoder3", "torch.nn.ConvTranspose2d", "torch.nn.ReLU", "pvgg16_separate.PVGG16SeparateHP.pcoder4", "torch.nn.ConvTranspose2d", "torch.nn.ReLU", "pvgg16_separate.PVGG16SeparateHP.pcoder5"], "methods", ["home.repos.pwc.inspect_result.miladmozafari_predify.networks.base.PNetSeparateHP.__init__"], ["    ", "def", "__init__", "(", "self", ",", "backbone", ",", "build_graph", "=", "False", ",", "random_init", "=", "False", ",", "ff_multiplier", "=", "(", "0.2", ",", "0.4", ",", "0.4", ",", "0.5", ",", "0.6", ")", ",", "fb_multiplier", "=", "(", "0.05", ",", "0.1", ",", "0.1", ",", "0.1", ",", "0.0", ")", ",", "er_multiplier", "=", "(", "0.01", ",", "0.01", ",", "0.01", ",", "0.01", ",", "0.01", ")", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "backbone", ",", "5", ",", "build_graph", ",", "random_init", ",", "ff_multiplier", ",", "fb_multiplier", ",", "er_multiplier", ")", "\n", "\n", "# PCoder number 1", "\n", "pmodule", "=", "ConvTranspose2d", "(", "64", ",", "3", ",", "kernel_size", "=", "(", "5", ",", "5", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "2", ",", "2", ")", ")", "\n", "self", ".", "pcoder1", "=", "PCoder", "(", "pmodule", ",", "True", ",", "self", ".", "random_init", ")", "\n", "def", "fw_hook1", "(", "m", ",", "m_in", ",", "m_out", ")", ":", "\n", "            ", "e", "=", "self", ".", "pcoder1", "(", "ff", "=", "m_out", ",", "fb", "=", "self", ".", "pcoder2", ".", "prd", ",", "target", "=", "self", ".", "input_mem", ",", "build_graph", "=", "self", ".", "build_graph", ",", "ffm", "=", "self", ".", "ffm1", ",", "fbm", "=", "self", ".", "fbm1", ",", "erm", "=", "self", ".", "erm1", ")", "\n", "return", "e", "[", "0", "]", "\n", "", "self", ".", "backbone", ".", "features", "[", "3", "]", ".", "register_forward_hook", "(", "fw_hook1", ")", "\n", "\n", "# PCoder number 2", "\n", "pmodule", "=", "Sequential", "(", "ConvTranspose2d", "(", "128", ",", "64", ",", "kernel_size", "=", "(", "10", ",", "10", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "4", ",", "4", ")", ")", ",", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "pcoder2", "=", "PCoder", "(", "pmodule", ",", "True", ",", "self", ".", "random_init", ")", "\n", "def", "fw_hook2", "(", "m", ",", "m_in", ",", "m_out", ")", ":", "\n", "            ", "e", "=", "self", ".", "pcoder2", "(", "ff", "=", "m_out", ",", "fb", "=", "self", ".", "pcoder3", ".", "prd", ",", "target", "=", "self", ".", "pcoder1", ".", "rep", ",", "build_graph", "=", "self", ".", "build_graph", ",", "ffm", "=", "self", ".", "ffm2", ",", "fbm", "=", "self", ".", "fbm2", ",", "erm", "=", "self", ".", "erm2", ")", "\n", "return", "e", "[", "0", "]", "\n", "", "self", ".", "backbone", ".", "features", "[", "8", "]", ".", "register_forward_hook", "(", "fw_hook2", ")", "\n", "\n", "# PCoder number 3", "\n", "pmodule", "=", "Sequential", "(", "ConvTranspose2d", "(", "256", ",", "128", ",", "kernel_size", "=", "(", "14", ",", "14", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "6", ",", "6", ")", ")", ",", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "pcoder3", "=", "PCoder", "(", "pmodule", ",", "True", ",", "self", ".", "random_init", ")", "\n", "def", "fw_hook3", "(", "m", ",", "m_in", ",", "m_out", ")", ":", "\n", "            ", "e", "=", "self", ".", "pcoder3", "(", "ff", "=", "m_out", ",", "fb", "=", "self", ".", "pcoder4", ".", "prd", ",", "target", "=", "self", ".", "pcoder2", ".", "rep", ",", "build_graph", "=", "self", ".", "build_graph", ",", "ffm", "=", "self", ".", "ffm3", ",", "fbm", "=", "self", ".", "fbm3", ",", "erm", "=", "self", ".", "erm3", ")", "\n", "return", "e", "[", "0", "]", "\n", "", "self", ".", "backbone", ".", "features", "[", "15", "]", ".", "register_forward_hook", "(", "fw_hook3", ")", "\n", "\n", "# PCoder number 4", "\n", "pmodule", "=", "Sequential", "(", "ConvTranspose2d", "(", "512", ",", "256", ",", "kernel_size", "=", "(", "14", ",", "14", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "6", ",", "6", ")", ")", ",", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "pcoder4", "=", "PCoder", "(", "pmodule", ",", "True", ",", "self", ".", "random_init", ")", "\n", "def", "fw_hook4", "(", "m", ",", "m_in", ",", "m_out", ")", ":", "\n", "            ", "e", "=", "self", ".", "pcoder4", "(", "ff", "=", "m_out", ",", "fb", "=", "self", ".", "pcoder5", ".", "prd", ",", "target", "=", "self", ".", "pcoder3", ".", "rep", ",", "build_graph", "=", "self", ".", "build_graph", ",", "ffm", "=", "self", ".", "ffm4", ",", "fbm", "=", "self", ".", "fbm4", ",", "erm", "=", "self", ".", "erm4", ")", "\n", "return", "e", "[", "0", "]", "\n", "", "self", ".", "backbone", ".", "features", "[", "22", "]", ".", "register_forward_hook", "(", "fw_hook4", ")", "\n", "\n", "# PCoder number 5", "\n", "pmodule", "=", "Sequential", "(", "ConvTranspose2d", "(", "512", ",", "512", ",", "kernel_size", "=", "(", "14", ",", "14", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "6", ",", "6", ")", ")", ",", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "pcoder5", "=", "PCoder", "(", "pmodule", ",", "False", ",", "self", ".", "random_init", ")", "\n", "def", "fw_hook5", "(", "m", ",", "m_in", ",", "m_out", ")", ":", "\n", "            ", "e", "=", "self", ".", "pcoder5", "(", "ff", "=", "m_out", ",", "fb", "=", "None", ",", "target", "=", "self", ".", "pcoder4", ".", "rep", ",", "build_graph", "=", "self", ".", "build_graph", ",", "ffm", "=", "self", ".", "ffm5", ",", "fbm", "=", "self", ".", "fbm5", ",", "erm", "=", "self", ".", "erm5", ")", "\n", "return", "e", "[", "0", "]", "\n", "", "self", ".", "backbone", ".", "features", "[", "29", "]", ".", "register_forward_hook", "(", "fw_hook5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.miladmozafari_predify.PVGG16.pvgg16n_separate.PVGG16SeparateHP.__init__": [[6, 48], ["predify.networks.PNetSeparateHP.__init__", "torch.nn.ConvTranspose2d", "predify.modules.PCoderN", "pvgg16n_separate.PVGG16SeparateHP.backbone.features[].register_forward_hook", "torch.nn.Sequential", "predify.modules.PCoderN", "pvgg16n_separate.PVGG16SeparateHP.backbone.features[].register_forward_hook", "torch.nn.Sequential", "predify.modules.PCoderN", "pvgg16n_separate.PVGG16SeparateHP.backbone.features[].register_forward_hook", "torch.nn.Sequential", "predify.modules.PCoderN", "pvgg16n_separate.PVGG16SeparateHP.backbone.features[].register_forward_hook", "torch.nn.Sequential", "predify.modules.PCoderN", "pvgg16n_separate.PVGG16SeparateHP.backbone.features[].register_forward_hook", "pvgg16n_separate.PVGG16SeparateHP.pcoder1", "torch.nn.ConvTranspose2d", "torch.nn.ReLU", "pvgg16n_separate.PVGG16SeparateHP.pcoder2", "torch.nn.ConvTranspose2d", "torch.nn.ReLU", "pvgg16n_separate.PVGG16SeparateHP.pcoder3", "torch.nn.ConvTranspose2d", "torch.nn.ReLU", "pvgg16n_separate.PVGG16SeparateHP.pcoder4", "torch.nn.ConvTranspose2d", "torch.nn.ReLU", "pvgg16n_separate.PVGG16SeparateHP.pcoder5"], "methods", ["home.repos.pwc.inspect_result.miladmozafari_predify.networks.base.PNetSeparateHP.__init__"], ["    ", "def", "__init__", "(", "self", ",", "backbone", ",", "build_graph", "=", "False", ",", "random_init", "=", "False", ",", "ff_multiplier", "=", "(", "0.2", ",", "0.4", ",", "0.4", ",", "0.5", ",", "0.6", ")", ",", "fb_multiplier", "=", "(", "0.05", ",", "0.1", ",", "0.1", ",", "0.1", ",", "0.0", ")", ",", "er_multiplier", "=", "(", "0.01", ",", "0.01", ",", "0.01", ",", "0.01", ",", "0.01", ")", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "backbone", ",", "5", ",", "build_graph", ",", "random_init", ",", "ff_multiplier", ",", "fb_multiplier", ",", "er_multiplier", ")", "\n", "\n", "# PCoder number 1", "\n", "pmodule", "=", "ConvTranspose2d", "(", "64", ",", "3", ",", "kernel_size", "=", "(", "5", ",", "5", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "2", ",", "2", ")", ")", "\n", "self", ".", "pcoder1", "=", "PCoderN", "(", "pmodule", ",", "True", ",", "self", ".", "random_init", ")", "\n", "def", "fw_hook1", "(", "m", ",", "m_in", ",", "m_out", ")", ":", "\n", "            ", "e", "=", "self", ".", "pcoder1", "(", "ff", "=", "m_out", ",", "fb", "=", "self", ".", "pcoder2", ".", "prd", ",", "target", "=", "self", ".", "input_mem", ",", "build_graph", "=", "self", ".", "build_graph", ",", "ffm", "=", "self", ".", "ffm1", ",", "fbm", "=", "self", ".", "fbm1", ",", "erm", "=", "self", ".", "erm1", ")", "\n", "return", "e", "[", "0", "]", "\n", "", "self", ".", "backbone", ".", "features", "[", "3", "]", ".", "register_forward_hook", "(", "fw_hook1", ")", "\n", "\n", "# PCoder number 2", "\n", "pmodule", "=", "Sequential", "(", "ConvTranspose2d", "(", "128", ",", "64", ",", "kernel_size", "=", "(", "10", ",", "10", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "4", ",", "4", ")", ")", ",", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "pcoder2", "=", "PCoderN", "(", "pmodule", ",", "True", ",", "self", ".", "random_init", ")", "\n", "def", "fw_hook2", "(", "m", ",", "m_in", ",", "m_out", ")", ":", "\n", "            ", "e", "=", "self", ".", "pcoder2", "(", "ff", "=", "m_out", ",", "fb", "=", "self", ".", "pcoder3", ".", "prd", ",", "target", "=", "self", ".", "pcoder1", ".", "rep", ",", "build_graph", "=", "self", ".", "build_graph", ",", "ffm", "=", "self", ".", "ffm2", ",", "fbm", "=", "self", ".", "fbm2", ",", "erm", "=", "self", ".", "erm2", ")", "\n", "return", "e", "[", "0", "]", "\n", "", "self", ".", "backbone", ".", "features", "[", "8", "]", ".", "register_forward_hook", "(", "fw_hook2", ")", "\n", "\n", "# PCoder number 3", "\n", "pmodule", "=", "Sequential", "(", "ConvTranspose2d", "(", "256", ",", "128", ",", "kernel_size", "=", "(", "14", ",", "14", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "6", ",", "6", ")", ")", ",", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "pcoder3", "=", "PCoderN", "(", "pmodule", ",", "True", ",", "self", ".", "random_init", ")", "\n", "def", "fw_hook3", "(", "m", ",", "m_in", ",", "m_out", ")", ":", "\n", "            ", "e", "=", "self", ".", "pcoder3", "(", "ff", "=", "m_out", ",", "fb", "=", "self", ".", "pcoder4", ".", "prd", ",", "target", "=", "self", ".", "pcoder2", ".", "rep", ",", "build_graph", "=", "self", ".", "build_graph", ",", "ffm", "=", "self", ".", "ffm3", ",", "fbm", "=", "self", ".", "fbm3", ",", "erm", "=", "self", ".", "erm3", ")", "\n", "return", "e", "[", "0", "]", "\n", "", "self", ".", "backbone", ".", "features", "[", "15", "]", ".", "register_forward_hook", "(", "fw_hook3", ")", "\n", "\n", "# PCoder number 4", "\n", "pmodule", "=", "Sequential", "(", "ConvTranspose2d", "(", "512", ",", "256", ",", "kernel_size", "=", "(", "14", ",", "14", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "6", ",", "6", ")", ")", ",", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "pcoder4", "=", "PCoderN", "(", "pmodule", ",", "True", ",", "self", ".", "random_init", ")", "\n", "def", "fw_hook4", "(", "m", ",", "m_in", ",", "m_out", ")", ":", "\n", "            ", "e", "=", "self", ".", "pcoder4", "(", "ff", "=", "m_out", ",", "fb", "=", "self", ".", "pcoder5", ".", "prd", ",", "target", "=", "self", ".", "pcoder3", ".", "rep", ",", "build_graph", "=", "self", ".", "build_graph", ",", "ffm", "=", "self", ".", "ffm4", ",", "fbm", "=", "self", ".", "fbm4", ",", "erm", "=", "self", ".", "erm4", ")", "\n", "return", "e", "[", "0", "]", "\n", "", "self", ".", "backbone", ".", "features", "[", "22", "]", ".", "register_forward_hook", "(", "fw_hook4", ")", "\n", "\n", "# PCoder number 5", "\n", "pmodule", "=", "Sequential", "(", "ConvTranspose2d", "(", "512", ",", "512", ",", "kernel_size", "=", "(", "14", ",", "14", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "6", ",", "6", ")", ")", ",", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "pcoder5", "=", "PCoderN", "(", "pmodule", ",", "False", ",", "self", ".", "random_init", ")", "\n", "def", "fw_hook5", "(", "m", ",", "m_in", ",", "m_out", ")", ":", "\n", "            ", "e", "=", "self", ".", "pcoder5", "(", "ff", "=", "m_out", ",", "fb", "=", "None", ",", "target", "=", "self", ".", "pcoder4", ".", "rep", ",", "build_graph", "=", "self", ".", "build_graph", ",", "ffm", "=", "self", ".", "ffm5", ",", "fbm", "=", "self", ".", "fbm5", ",", "erm", "=", "self", ".", "erm5", ")", "\n", "return", "e", "[", "0", "]", "\n", "", "self", ".", "backbone", ".", "features", "[", "29", "]", ".", "register_forward_hook", "(", "fw_hook5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.miladmozafari_predify.PVGG16.train_feedback_weights.Args.__init__": [[32, 37], ["toml.load", "toml.load.items", "setattr"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "config_file", ")", ":", "\n", "\n", "        ", "config", "=", "toml", ".", "load", "(", "config_file", ")", "\n", "for", "k", ",", "v", "in", "config", ".", "items", "(", ")", ":", "\n", "            ", "setattr", "(", "self", ",", "k", ",", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.miladmozafari_predify.PVGG16.train_feedback_weights.Args.print_params": [[38, 41], ["vars", "print", "getattr"], "methods", ["None"], ["", "", "def", "print_params", "(", "self", ")", ":", "\n", "        ", "for", "x", "in", "vars", "(", "self", ")", ":", "\n", "            ", "print", "(", "\"{:<20}: {}\"", ".", "format", "(", "x", ",", "getattr", "(", "args", ",", "x", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.miladmozafari_predify.PVGG16.train_feedback_weights.train_pcoders": [[118, 153], ["net.train", "time.time", "enumerate", "net.reset", "images.to.to", "optimizer.zero_grad", "net", "range", "loss.backward", "optimizer.step", "print", "print", "sumwriter.add_scalar", "sumwriter.add_scalar", "loss.item", "loss_function", "getattr", "getattr", "loss_function", "loss_function.item", "loss.item", "time.time", "len", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.miladmozafari_predify.networks.base.PNetSeparateHP.reset"], ["def", "train_pcoders", "(", "net", ",", "epoch", ",", "writer", ",", "train_loader", ",", "verbose", "=", "True", ")", ":", "\n", "\n", "    ", "''' A training epoch '''", "\n", "\n", "net", ".", "train", "(", ")", "\n", "\n", "tstart", "=", "time", ".", "time", "(", ")", "\n", "for", "batch_index", ",", "(", "images", ",", "_", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "        ", "net", ".", "reset", "(", ")", "\n", "images", "=", "images", ".", "to", "(", "device", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "outputs", "=", "net", "(", "images", ")", "\n", "for", "i", "in", "range", "(", "NUMBER_OF_PCODERS", ")", ":", "\n", "            ", "if", "i", "==", "0", ":", "\n", "                ", "a", "=", "loss_function", "(", "net", ".", "pcoder1", ".", "prd", ",", "images", ")", "\n", "loss", "=", "a", "\n", "", "else", ":", "\n", "                ", "pcoder_pre", "=", "getattr", "(", "net", ",", "f\"pcoder{i}\"", ")", "\n", "pcoder_curr", "=", "getattr", "(", "net", ",", "f\"pcoder{i+1}\"", ")", "\n", "a", "=", "loss_function", "(", "pcoder_curr", ".", "prd", ",", "pcoder_pre", ".", "rep", ")", "\n", "loss", "+=", "a", "\n", "", "sumwriter", ".", "add_scalar", "(", "f\"MSE Train/PCoder{i+1}\"", ",", "a", ".", "item", "(", ")", ",", "epoch", "*", "len", "(", "train_loader", ")", "+", "batch_index", ")", "\n", "\n", "", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "print", "(", "'Training Epoch: {epoch} [{trained_samples}/{total_samples}]\\tLoss: {:0.4f}\\tLR: {:0.6f}'", ".", "format", "(", "\n", "loss", ".", "item", "(", ")", ",", "\n", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", ",", "\n", "epoch", "=", "epoch", ",", "\n", "trained_samples", "=", "batch_index", "*", "args", ".", "BATCHSIZE", "+", "len", "(", "images", ")", ",", "\n", "total_samples", "=", "len", "(", "train_loader", ".", "dataset", ")", "\n", ")", ")", "\n", "print", "(", "'Time taken:'", ",", "time", ".", "time", "(", ")", "-", "tstart", ")", "\n", "sumwriter", ".", "add_scalar", "(", "f\"MSE Train/Sum\"", ",", "loss", ".", "item", "(", ")", ",", "epoch", "*", "len", "(", "train_loader", ")", "+", "batch_index", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.miladmozafari_predify.PVGG16.train_feedback_weights.test_pcoders": [[155, 191], ["net.eval", "time.time", "enumerate", "range", "sumwriter.add_scalar", "print", "print", "net.reset", "images.to.to", "range", "len", "sumwriter.add_scalar", "range", "torch.no_grad", "torch.no_grad", "torch.no_grad", "net", "len", "time.time", "loss_function().item", "getattr", "getattr", "loss_function().item", "len", "len", "len", "loss_function", "loss_function"], "function", ["home.repos.pwc.inspect_result.miladmozafari_predify.networks.base.PNetSeparateHP.reset"], ["", "", "def", "test_pcoders", "(", "net", ",", "epoch", ",", "writer", ",", "test_loader", ",", "verbose", "=", "True", ")", ":", "\n", "\n", "    ", "''' A testing epoch '''", "\n", "\n", "net", ".", "eval", "(", ")", "\n", "\n", "tstart", "=", "time", ".", "time", "(", ")", "\n", "final_loss", "=", "[", "0", "for", "i", "in", "range", "(", "NUMBER_OF_PCODERS", ")", "]", "\n", "for", "batch_index", ",", "(", "images", ",", "_", ")", "in", "enumerate", "(", "test_loader", ")", ":", "\n", "        ", "net", ".", "reset", "(", ")", "\n", "images", "=", "images", ".", "to", "(", "device", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "outputs", "=", "net", "(", "images", ")", "\n", "", "for", "i", "in", "range", "(", "NUMBER_OF_PCODERS", ")", ":", "\n", "            ", "if", "i", "==", "0", ":", "\n", "                ", "final_loss", "[", "i", "]", "+=", "loss_function", "(", "net", ".", "pcoder1", ".", "prd", ",", "images", ")", ".", "item", "(", ")", "\n", "", "else", ":", "\n", "                ", "pcoder_pre", "=", "getattr", "(", "net", ",", "f\"pcoder{i}\"", ")", "\n", "pcoder_curr", "=", "getattr", "(", "net", ",", "f\"pcoder{i+1}\"", ")", "\n", "final_loss", "[", "i", "]", "+=", "loss_function", "(", "pcoder_curr", ".", "prd", ",", "pcoder_pre", ".", "rep", ")", ".", "item", "(", ")", "\n", "\n", "", "", "", "loss_sum", "=", "0", "\n", "for", "i", "in", "range", "(", "NUMBER_OF_PCODERS", ")", ":", "\n", "        ", "final_loss", "[", "i", "]", "/=", "len", "(", "test_loader", ")", "\n", "loss_sum", "+=", "final_loss", "[", "i", "]", "\n", "sumwriter", ".", "add_scalar", "(", "f\"MSE Test/PCoder{i+1}\"", ",", "final_loss", "[", "i", "]", ",", "epoch", "*", "len", "(", "test_loader", ")", ")", "\n", "", "sumwriter", ".", "add_scalar", "(", "f\"MSE Test/Sum\"", ",", "loss_sum", ",", "epoch", "*", "len", "(", "test_loader", ")", ")", "\n", "\n", "print", "(", "'Training Epoch: {epoch} [{trained_samples}/{total_samples}]\\tLoss: {:0.4f}\\tLR: {:0.6f}'", ".", "format", "(", "\n", "loss_sum", ",", "\n", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", ",", "\n", "epoch", "=", "epoch", ",", "\n", "trained_samples", "=", "batch_index", "*", "args", ".", "BATCHSIZE", "+", "len", "(", "images", ")", ",", "\n", "total_samples", "=", "len", "(", "test_loader", ".", "dataset", ")", "\n", ")", ")", "\n", "print", "(", "'Time taken:'", ",", "time", ".", "time", "(", ")", "-", "tstart", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.miladmozafari_predify.PVGG16.pvgg16n_shared.PVGG16SameHP.__init__": [[6, 48], ["predify.networks.PNetSameHP.__init__", "torch.nn.ConvTranspose2d", "predify.modules.PCoderN", "pvgg16n_shared.PVGG16SameHP.backbone.features[].register_forward_hook", "torch.nn.Sequential", "predify.modules.PCoderN", "pvgg16n_shared.PVGG16SameHP.backbone.features[].register_forward_hook", "torch.nn.Sequential", "predify.modules.PCoderN", "pvgg16n_shared.PVGG16SameHP.backbone.features[].register_forward_hook", "torch.nn.Sequential", "predify.modules.PCoderN", "pvgg16n_shared.PVGG16SameHP.backbone.features[].register_forward_hook", "torch.nn.Sequential", "predify.modules.PCoderN", "pvgg16n_shared.PVGG16SameHP.backbone.features[].register_forward_hook", "pvgg16n_shared.PVGG16SameHP.pcoder1", "torch.nn.ConvTranspose2d", "torch.nn.ReLU", "pvgg16n_shared.PVGG16SameHP.pcoder2", "torch.nn.ConvTranspose2d", "torch.nn.ReLU", "pvgg16n_shared.PVGG16SameHP.pcoder3", "torch.nn.ConvTranspose2d", "torch.nn.ReLU", "pvgg16n_shared.PVGG16SameHP.pcoder4", "torch.nn.ConvTranspose2d", "torch.nn.ReLU", "pvgg16n_shared.PVGG16SameHP.pcoder5"], "methods", ["home.repos.pwc.inspect_result.miladmozafari_predify.networks.base.PNetSeparateHP.__init__"], ["    ", "def", "__init__", "(", "self", ",", "backbone", ",", "build_graph", "=", "False", ",", "random_init", "=", "False", ",", "ff_multiplier", "=", "0.2", ",", "fb_multiplier", "=", "0.05", ",", "er_multiplier", "=", "0.01", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "backbone", ",", "5", ",", "build_graph", ",", "random_init", ",", "ff_multiplier", ",", "fb_multiplier", ",", "er_multiplier", ")", "\n", "\n", "# PCoder number 1", "\n", "pmodule", "=", "ConvTranspose2d", "(", "64", ",", "3", ",", "kernel_size", "=", "(", "5", ",", "5", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "2", ",", "2", ")", ")", "\n", "self", ".", "pcoder1", "=", "PCoderN", "(", "pmodule", ",", "True", ",", "self", ".", "random_init", ")", "\n", "def", "fw_hook1", "(", "m", ",", "m_in", ",", "m_out", ")", ":", "\n", "            ", "e", "=", "self", ".", "pcoder1", "(", "ff", "=", "m_out", ",", "fb", "=", "self", ".", "pcoder2", ".", "prd", ",", "target", "=", "self", ".", "input_mem", ",", "build_graph", "=", "self", ".", "build_graph", ",", "ffm", "=", "self", ".", "ffm", ",", "fbm", "=", "self", ".", "fbm", ",", "erm", "=", "self", ".", "erm", ")", "\n", "return", "e", "[", "0", "]", "\n", "", "self", ".", "backbone", ".", "features", "[", "3", "]", ".", "register_forward_hook", "(", "fw_hook1", ")", "\n", "\n", "# PCoder number 2", "\n", "pmodule", "=", "Sequential", "(", "ConvTranspose2d", "(", "128", ",", "64", ",", "kernel_size", "=", "(", "10", ",", "10", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "4", ",", "4", ")", ")", ",", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "pcoder2", "=", "PCoderN", "(", "pmodule", ",", "True", ",", "self", ".", "random_init", ")", "\n", "def", "fw_hook2", "(", "m", ",", "m_in", ",", "m_out", ")", ":", "\n", "            ", "e", "=", "self", ".", "pcoder2", "(", "ff", "=", "m_out", ",", "fb", "=", "self", ".", "pcoder3", ".", "prd", ",", "target", "=", "self", ".", "pcoder1", ".", "rep", ",", "build_graph", "=", "self", ".", "build_graph", ",", "ffm", "=", "self", ".", "ffm", ",", "fbm", "=", "self", ".", "fbm", ",", "erm", "=", "self", ".", "erm", ")", "\n", "return", "e", "[", "0", "]", "\n", "", "self", ".", "backbone", ".", "features", "[", "8", "]", ".", "register_forward_hook", "(", "fw_hook2", ")", "\n", "\n", "# PCoder number 3", "\n", "pmodule", "=", "Sequential", "(", "ConvTranspose2d", "(", "256", ",", "128", ",", "kernel_size", "=", "(", "14", ",", "14", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "6", ",", "6", ")", ")", ",", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "pcoder3", "=", "PCoderN", "(", "pmodule", ",", "True", ",", "self", ".", "random_init", ")", "\n", "def", "fw_hook3", "(", "m", ",", "m_in", ",", "m_out", ")", ":", "\n", "            ", "e", "=", "self", ".", "pcoder3", "(", "ff", "=", "m_out", ",", "fb", "=", "self", ".", "pcoder4", ".", "prd", ",", "target", "=", "self", ".", "pcoder2", ".", "rep", ",", "build_graph", "=", "self", ".", "build_graph", ",", "ffm", "=", "self", ".", "ffm", ",", "fbm", "=", "self", ".", "fbm", ",", "erm", "=", "self", ".", "erm", ")", "\n", "return", "e", "[", "0", "]", "\n", "", "self", ".", "backbone", ".", "features", "[", "15", "]", ".", "register_forward_hook", "(", "fw_hook3", ")", "\n", "\n", "# PCoder number 4", "\n", "pmodule", "=", "Sequential", "(", "ConvTranspose2d", "(", "512", ",", "256", ",", "kernel_size", "=", "(", "14", ",", "14", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "6", ",", "6", ")", ")", ",", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "pcoder4", "=", "PCoderN", "(", "pmodule", ",", "True", ",", "self", ".", "random_init", ")", "\n", "def", "fw_hook4", "(", "m", ",", "m_in", ",", "m_out", ")", ":", "\n", "            ", "e", "=", "self", ".", "pcoder4", "(", "ff", "=", "m_out", ",", "fb", "=", "self", ".", "pcoder5", ".", "prd", ",", "target", "=", "self", ".", "pcoder3", ".", "rep", ",", "build_graph", "=", "self", ".", "build_graph", ",", "ffm", "=", "self", ".", "ffm", ",", "fbm", "=", "self", ".", "fbm", ",", "erm", "=", "self", ".", "erm", ")", "\n", "return", "e", "[", "0", "]", "\n", "", "self", ".", "backbone", ".", "features", "[", "22", "]", ".", "register_forward_hook", "(", "fw_hook4", ")", "\n", "\n", "# PCoder number 5", "\n", "pmodule", "=", "Sequential", "(", "ConvTranspose2d", "(", "512", ",", "512", ",", "kernel_size", "=", "(", "14", ",", "14", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "6", ",", "6", ")", ")", ",", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "pcoder5", "=", "PCoderN", "(", "pmodule", ",", "False", ",", "self", ".", "random_init", ")", "\n", "def", "fw_hook5", "(", "m", ",", "m_in", ",", "m_out", ")", ":", "\n", "            ", "e", "=", "self", ".", "pcoder5", "(", "ff", "=", "m_out", ",", "fb", "=", "None", ",", "target", "=", "self", ".", "pcoder4", ".", "rep", ",", "build_graph", "=", "self", ".", "build_graph", ",", "ffm", "=", "self", ".", "ffm", ",", "fbm", "=", "self", ".", "fbm", ",", "erm", "=", "self", ".", "erm", ")", "\n", "return", "e", "[", "0", "]", "\n", "", "self", ".", "backbone", ".", "features", "[", "29", "]", ".", "register_forward_hook", "(", "fw_hook5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.miladmozafari_predify.predify.base.imports_str": [[6, 24], ["None"], "function", ["None"], ["def", "imports_str", "(", "is_3d", "=", "False", ",", "p_imports", "=", "None", ",", "same_hp", "=", "False", ",", "gscale", "=", "False", ",", "indent", "=", "\"\"", ")", ":", "\n", "    ", "if", "gscale", ":", "\n", "        ", "imports", "=", "indent", "+", "\"from predify.modules import PCoderN\"", "+", "os", ".", "linesep", "\n", "", "else", ":", "\n", "        ", "imports", "=", "indent", "+", "\"from predify.modules import PCoder\"", "+", "os", ".", "linesep", "\n", "", "if", "same_hp", ":", "\n", "        ", "imports", "+=", "indent", "+", "\"from predify.networks import PNetSameHP\"", "+", "os", ".", "linesep", "\n", "", "else", ":", "\n", "        ", "imports", "+=", "indent", "+", "\"from predify.networks import PNetSeparateHP\"", "+", "os", ".", "linesep", "\n", "", "if", "p_imports", "is", "None", ":", "\n", "        ", "if", "is_3d", ":", "\n", "            ", "imports", "+=", "indent", "+", "\"from torch.nn import Sequential, ConvTranspose3d, Upsample\"", "+", "os", ".", "linesep", "\n", "", "else", ":", "\n", "            ", "imports", "+=", "indent", "+", "\"from torch.nn import Sequential, ConvTranspose2d, Upsample\"", "+", "os", ".", "linesep", "\n", "", "", "else", ":", "\n", "        ", "for", "p_imp", "in", "p_imports", ":", "\n", "            ", "imports", "+=", "indent", "+", "p_imp", "+", "os", ".", "linesep", "\n", "", "", "return", "imports", "\n", "\n"]], "home.repos.pwc.inspect_result.miladmozafari_predify.predify.base.pcoder_str": [[25, 63], ["len"], "function", ["None"], ["", "def", "pcoder_str", "(", "pcoder_idx", ",", "module_name", ",", "src_shape", ",", "target_shape", ",", "has_feedback", ",", "same_param", ",", "gscale", ",", "module", "=", "None", ",", "indent", "=", "\"\"", ")", ":", "\n", "    ", "s", "=", "indent", "+", "f\"# PCoder number {pcoder_idx}\"", "+", "os", ".", "linesep", "\n", "\n", "is_3d", "=", "len", "(", "src_shape", ")", "==", "5", "\n", "\n", "if", "module", "is", "None", ":", "\n", "        ", "upsample", "=", "\"\"", "\n", "if", "is_3d", ":", "\n", "            ", "if", "src_shape", "[", "-", "3", ":", "]", "!=", "target_shape", "[", "-", "3", ":", "]", ":", "\n", "                ", "scale_factor", "=", "(", "target_shape", "[", "-", "3", "]", "/", "src_shape", "[", "-", "3", "]", ",", "target_shape", "[", "-", "2", "]", "/", "src_shape", "[", "-", "2", "]", ",", "target_shape", "[", "-", "1", "]", "/", "src_shape", "[", "-", "1", "]", ")", "\n", "upsample", "=", "f\"Upsample(scale_factor={scale_factor}, mode='bilinear', align_corners=False),\"", "\n", "", "convt", "=", "f\"ConvTranspose3d({src_shape[-4]}, {target_shape[-4]}, kernel_size=3, stride=1, padding=1)\"", "\n", "", "else", ":", "\n", "            ", "if", "src_shape", "[", "-", "2", ":", "]", "!=", "target_shape", "[", "-", "2", ":", "]", ":", "\n", "                ", "scale_factor", "=", "(", "target_shape", "[", "-", "2", "]", "/", "src_shape", "[", "-", "2", "]", ",", "target_shape", "[", "-", "1", "]", "/", "src_shape", "[", "-", "1", "]", ")", "\n", "upsample", "=", "f\"Upsample(scale_factor={scale_factor}, mode='bilinear', align_corners=False),\"", "\n", "", "convt", "=", "f\"ConvTranspose2d({src_shape[-3]}, {target_shape[-3]}, kernel_size=3, stride=1, padding=1)\"", "\n", "", "pmodule", "=", "f\"pmodule = Sequential({upsample}{convt})\"", "\n", "", "else", ":", "\n", "        ", "pmodule", "=", "f\"pmodule = {module}\"", "\n", "\n", "", "s", "+=", "indent", "+", "pmodule", "+", "os", ".", "linesep", "\n", "if", "gscale", ":", "\n", "        ", "s", "+=", "indent", "+", "f\"self.pcoder{pcoder_idx} = PCoderN(pmodule, {has_feedback}, self.random_init)\"", "+", "os", ".", "linesep", "\n", "", "else", ":", "\n", "        ", "s", "+=", "indent", "+", "f\"self.pcoder{pcoder_idx} = PCoder(pmodule, {has_feedback}, self.random_init)\"", "+", "os", ".", "linesep", "\n", "\n", "", "fb", "=", "f\"self.pcoder{pcoder_idx+1}.prd\"", "if", "has_feedback", "else", "\"None\"", "\n", "target", "=", "f\"self.pcoder{pcoder_idx-1}.rep\"", "if", "pcoder_idx", ">", "1", "else", "\"self.input_mem\"", "\n", "ffm", "=", "\"self.ffm\"", "if", "same_param", "else", "f\"self.ffm{pcoder_idx}\"", "\n", "fbm", "=", "\"self.fbm\"", "if", "same_param", "else", "f\"self.fbm{pcoder_idx}\"", "\n", "erm", "=", "\"self.erm\"", "if", "same_param", "else", "f\"self.erm{pcoder_idx}\"", "\n", "\n", "s", "+=", "indent", "+", "f\"def fw_hook{pcoder_idx}(m, m_in, m_out):\"", "+", "os", ".", "linesep", "\n", "s", "+=", "indent", "+", "f\"    e = self.pcoder{pcoder_idx}(ff=m_out, fb={fb}, target={target}, build_graph=self.build_graph, ffm={ffm}, fbm={fbm}, erm={erm})\"", "+", "os", ".", "linesep", "\n", "s", "+=", "indent", "+", "f\"    return e[0]\"", "+", "os", ".", "linesep", "\n", "s", "+=", "indent", "+", "f\"self.backbone.{module_name}.register_forward_hook(fw_hook{pcoder_idx})\"", "+", "os", ".", "linesep", "\n", "return", "s", "\n", "\n"]], "home.repos.pwc.inspect_result.miladmozafari_predify.predify.base.header_str": [[64, 84], ["float", "float", "float", "float", "float", "float"], "function", ["None"], ["", "def", "header_str", "(", "number_of_pcoders", ",", "class_name", ",", "same_param", ",", "hyperparameters", ",", "indent", "=", "\"\"", ")", ":", "\n", "    ", "if", "same_param", ":", "\n", "        ", "inherit", "=", "\"SameHP(PNetSameHP)\"", "\n", "ff", "=", "f\"{float(hyperparameters['feedforward'])}\"", "\n", "fb", "=", "f\"{float(hyperparameters['feedback'])}\"", "\n", "er", "=", "f\"{float(hyperparameters['pc'])}\"", "\n", "", "else", ":", "\n", "        ", "inherit", "=", "\"SeparateHP(PNetSeparateHP)\"", "\n", "ff", ",", "fb", ",", "er", "=", "\"(\"", ",", "\"(\"", ",", "\"(\"", "\n", "for", "hp", "in", "hyperparameters", ":", "\n", "            ", "ff", "+=", "f\"{float(hp['feedforward'])},\"", "\n", "fb", "+=", "f\"{float(hp['feedback'])},\"", "\n", "er", "+=", "f\"{float(hp['pc'])},\"", "\n", "", "ff", "=", "ff", "[", ":", "-", "1", "]", "+", "\")\"", "\n", "fb", "=", "fb", "[", ":", "-", "1", "]", "+", "\")\"", "\n", "er", "=", "er", "[", ":", "-", "1", "]", "+", "\")\"", "\n", "", "s", "=", "indent", "+", "f\"class {class_name}{inherit}:\"", "+", "os", ".", "linesep", "\n", "s", "+=", "indent", "+", "f\"    def __init__(self, backbone, build_graph=False, random_init=False, ff_multiplier={ff}, fb_multiplier={fb}, er_multiplier={er}):\"", "+", "os", ".", "linesep", "\n", "s", "+=", "indent", "+", "f\"        super().__init__(backbone, {number_of_pcoders}, build_graph, random_init, ff_multiplier, fb_multiplier, er_multiplier)\"", "+", "os", ".", "linesep", "\n", "return", "s", "\n", "\n"]], "home.repos.pwc.inspect_result.miladmozafari_predify.predify.base.parse_toml": [[85, 148], ["toml.load", "toml.load.get", "toml.load.get", "tuple", "toml.load.get", "enumerate", "toml.load.get", "toml.load.get", "toml.load.get", "Exception", "config.get.isidentifier", "Exception", "Exception", "Exception", "len", "warnings.warn", "Exception", "Exception", "layers.append", "pc.get", "pmodules.append", "pc.get", "hyperparams.append", "warnings.warn", "warnings.warn", "warnings.warn", "isinstance", "len", "len", "isinstance", "len", "Exception", "warnings.warn", "warnings.warn", "Exception", "isinstance", "Exception"], "function", ["None"], ["", "def", "parse_toml", "(", "config_file", ")", ":", "\n", "    ", "config", "=", "toml", ".", "load", "(", "config_file", ")", "\n", "\n", "name", "=", "config", ".", "get", "(", "\"name\"", ",", "\"network\"", ")", "\n", "if", "name", "==", "\"Net\"", ":", "\n", "        ", "raise", "Exception", "(", "\"Config File Error! 'name' cannot have the value 'Net'. Please select other names.\"", ")", "\n", "", "if", "not", "name", ".", "isidentifier", "(", ")", ":", "\n", "        ", "raise", "Exception", "(", "\"Config File Error! 'name' should be a valid Python identifier.\"", ")", "\n", "\n", "", "input_size", "=", "config", ".", "get", "(", "\"input_size\"", ",", "None", ")", "\n", "if", "input_size", "is", "None", ":", "\n", "        ", "raise", "Exception", "(", "\"Config File Error! 'input_size' is not specified.\"", ")", "\n", "", "if", "not", "isinstance", "(", "input_size", ",", "list", ")", "or", "len", "(", "input_size", ")", "<=", "2", "or", "len", "(", "input_size", ")", ">=", "5", ":", "\n", "        ", "raise", "Exception", "(", "\"Config File Error! 'input_size' should be defined as a list of [channels, height, width] for 2D inputs or [channels, depth, height, width] for 3D inputs.\"", ")", "\n", "", "if", "len", "(", "input_size", ")", "==", "4", ":", "\n", "        ", "warnings", ".", "warn", "(", "\"Input dimension is set to 3D since the input size is defined as list of length 4: [channels, depth, height, width]. If you want to use 2D inputs, please specify it as [channels, height, width]\"", ",", "stacklevel", "=", "2", ")", "\n", "", "input_size", "=", "tuple", "(", "input_size", ")", "\n", "\n", "pcoders", "=", "config", ".", "get", "(", "\"pcoders\"", ",", "None", ")", "\n", "layers", "=", "[", "]", "\n", "pmodules", "=", "[", "]", "\n", "hyperparams", "=", "[", "]", "\n", "\n", "if", "pcoders", "is", "None", ":", "\n", "        ", "raise", "Exception", "(", "\"Config File Error! 'pcoders' is not specified.\"", ")", "\n", "", "if", "not", "isinstance", "(", "pcoders", ",", "list", ")", "or", "len", "(", "pcoders", ")", "==", "0", ":", "\n", "        ", "raise", "Exception", "(", "\"Config File Error! 'pcoders' should be defined as a non-empty list.\"", ")", "\n", "", "for", "pc_idx", ",", "pc", "in", "enumerate", "(", "pcoders", ")", ":", "\n", "        ", "if", "'module'", "not", "in", "pc", ":", "\n", "            ", "raise", "Exception", "(", "f\"Config File Error! 'module' is not specified for PCoder number {pc_idx + 1} (starting from 1).\"", ")", "\n", "", "layer", "=", "pc", "[", "'module'", "]", "\n", "layers", ".", "append", "(", "layer", ")", "\n", "\n", "predictor", "=", "pc", ".", "get", "(", "\"predictor\"", ",", "None", ")", "\n", "if", "predictor", "is", "None", ":", "\n", "            ", "warnings", ".", "warn", "(", "f\"'predictor' is not defined for PCoder number {pc_idx}. A default module will be inferred based on the other PCoders.\"", ",", "stacklevel", "=", "2", ")", "\n", "", "pmodules", ".", "append", "(", "predictor", ")", "\n", "\n", "if", "\"hyperparameters\"", "not", "in", "pc", ":", "\n", "            ", "warnings", ".", "warn", "(", "f\"'hyperparameters' is not defined for PCoder number {pc_idx}. Default values of feedforward=0.3, feedback=0.3, pc=0.01 will be set.\"", ",", "stacklevel", "=", "2", ")", "\n", "", "hps", "=", "pc", ".", "get", "(", "\"hyperparameters\"", ",", "{", "\"feedforward\"", ":", "0.3", ",", "\"feedback\"", ":", "0.3", ",", "\"pc\"", ":", "0.01", "}", ")", "\n", "if", "not", "(", "\"feedforward\"", "in", "hps", "and", "\"feedback\"", "in", "hps", "and", "\"pc\"", "in", "hps", ")", ":", "\n", "            ", "raise", "Exception", "(", "f\"Config File Error! 'hyperparameters' for PCoder number {pc_idx + 1} should be a disctionary that contains 'feedforward', 'feedback', 'pc' as the keys.\"", ")", "\n", "", "hyperparams", ".", "append", "(", "hps", ")", "\n", "\n", "", "p_imports", "=", "config", ".", "get", "(", "\"imports\"", ",", "None", ")", "\n", "if", "p_imports", "is", "not", "None", ":", "\n", "        ", "if", "not", "isinstance", "(", "p_imports", ",", "list", ")", ":", "\n", "            ", "raise", "Exception", "(", "f\"Config File Error! 'imports' should be defined as a list of strings.\"", ")", "\n", "\n", "", "", "gscale", "=", "config", ".", "get", "(", "\"gradient_scaling\"", ",", "None", ")", "\n", "if", "gscale", "is", "None", ":", "\n", "        ", "warnings", ".", "warn", "(", "f\"'gradient_scaling' is not defined. It will be set to False by default.\"", ",", "stacklevel", "=", "2", ")", "\n", "gscale", "=", "False", "\n", "\n", "", "same_hp", "=", "config", ".", "get", "(", "\"shared_hyperparameters\"", ",", "None", ")", "\n", "if", "same_hp", "is", "None", ":", "\n", "        ", "warnings", ".", "warn", "(", "f\"'shared_hyperparameters' is not defined. It will be set to False by default.\"", ",", "stacklevel", "=", "2", ")", "\n", "same_hp", "=", "False", "\n", "", "if", "same_hp", "is", "True", ":", "\n", "        ", "warnings", ".", "warn", "(", "f\"'shared_hyperparameters' is True. It will overwrite the values defined for each PCoder. It uses the default value or the values provided for the first PCoder.\"", ",", "stacklevel", "=", "2", ")", "\n", "\n", "", "return", "name", ",", "layers", ",", "pmodules", ",", "hyperparams", ",", "p_imports", ",", "input_size", ",", "gscale", ",", "same_hp", "\n", "\n"]], "home.repos.pwc.inspect_result.miladmozafari_predify.predify.base.predify": [[149, 160], ["base.parse_toml", "base.predify_core", "net.to"], "function", ["home.repos.pwc.inspect_result.miladmozafari_predify.predify.base.parse_toml", "home.repos.pwc.inspect_result.miladmozafari_predify.predify.base.predify_core"], ["", "def", "predify", "(", "net", ",", "config_file", ",", "output_address", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Generates a python script that defines the predified version of the given network.\n    \n    Args:\n        net: a PyTorch compatible network object.\n        config_file: address to the .toml file that contains predify-required info.\n        output_address: address of the output script file. If `None`, the name of the network will be used.\n    \"\"\"", "\n", "config", "=", "parse_toml", "(", "config_file", ")", "\n", "predify_core", "(", "net", ".", "to", "(", "'cpu'", ")", ",", "*", "config", ",", "output_address", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.miladmozafari_predify.predify.base.predify_core": [[161, 200], ["net.eval", "torch.ones", "modules.append", "modules[].register_forward_hook", "torch.no_grad", "net", "len", "open", "f.write", "f.write", "f.write", "f.write", "enumerate", "f.write", "eval", "base.imports_str", "base.header_str", "zip", "base.pcoder_str", "f.write", "f.write", "name.lower", "len", "len"], "function", ["home.repos.pwc.inspect_result.miladmozafari_predify.predify.base.imports_str", "home.repos.pwc.inspect_result.miladmozafari_predify.predify.base.header_str", "home.repos.pwc.inspect_result.miladmozafari_predify.predify.base.pcoder_str"], ["", "def", "predify_core", "(", "net", ",", "name", ",", "layers", ",", "pmodules", ",", "hps", ",", "p_imports", ",", "input_size", ",", "gscale", ",", "same_hp", ",", "output_address", ")", ":", "\n", "    ", "net", ".", "eval", "(", ")", "\n", "\n", "layer_sizes", "=", "{", "}", "\n", "def", "get_size", "(", "m", ",", "m_in", ",", "m_out", ")", ":", "\n", "        ", "layer_sizes", "[", "m", "]", "=", "m_out", ".", "shape", "\n", "\n", "", "modules", "=", "[", "]", "\n", "for", "layer", "in", "layers", ":", "\n", "        ", "modules", ".", "append", "(", "eval", "(", "f\"net.{layer}\"", ")", ")", "\n", "modules", "[", "-", "1", "]", ".", "register_forward_hook", "(", "get_size", ")", "\n", "\n", "", "x", "=", "torch", ".", "ones", "(", "1", ",", "*", "input_size", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "net", "(", "x", ")", "\n", "\n", "", "is_3d", "=", "len", "(", "input_size", ")", "==", "5", "\n", "\n", "if", "output_address", "is", "None", ":", "\n", "        ", "output_address", "=", "f\"{name.lower()}.py\"", "\n", "", "with", "open", "(", "output_address", ",", "\"w\"", ")", "as", "f", ":", "\n", "        ", "f", ".", "write", "(", "imports_str", "(", "is_3d", ",", "p_imports", "=", "p_imports", ",", "same_hp", "=", "same_hp", ",", "gscale", "=", "gscale", ")", ")", "\n", "f", ".", "write", "(", "os", ".", "linesep", ")", "\n", "\n", "if", "same_hp", ":", "\n", "            ", "hps", "=", "hps", "[", "0", "]", "\n", "", "f", ".", "write", "(", "header_str", "(", "len", "(", "layers", ")", ",", "f\"{name}\"", ",", "same_hp", ",", "hyperparameters", "=", "hps", ",", "indent", "=", "\"\"", ")", ")", "\n", "f", ".", "write", "(", "os", ".", "linesep", ")", "\n", "\n", "indent", "=", "\" \"", "*", "8", "\n", "\n", "target_shape", "=", "input_size", "\n", "for", "idx", ",", "(", "module_name", ",", "module", ")", "in", "enumerate", "(", "zip", "(", "layers", ",", "modules", ")", ",", "1", ")", ":", "\n", "            ", "src_shape", "=", "layer_sizes", "[", "module", "]", "\n", "s", "=", "pcoder_str", "(", "idx", ",", "module_name", ",", "src_shape", ",", "target_shape", ",", "idx", "<", "len", "(", "layers", ")", ",", "same_hp", ",", "gscale", ",", "module", "=", "pmodules", "[", "idx", "-", "1", "]", ",", "indent", "=", "indent", ")", "\n", "f", ".", "write", "(", "s", ")", "\n", "f", ".", "write", "(", "os", ".", "linesep", ")", "\n", "target_shape", "=", "src_shape", "\n", "", "f", ".", "write", "(", "os", ".", "linesep", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.miladmozafari_predify.utils.training.train_pcoders": [[4, 53], ["net.train", "net.backbone.eval", "enumerate", "net.reset", "images.to.to", "optimizer.zero_grad", "net", "range", "loss.backward", "optimizer.step", "print", "writer.add_scalar", "loss_function", "getattr", "getattr", "loss_function", "writer.add_scalar", "loss.item", "loss.item", "loss_function.item", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.miladmozafari_predify.networks.base.PNetSeparateHP.reset"], ["def", "train_pcoders", "(", "net", ":", "torch", ".", "nn", ".", "Module", ",", "optimizer", ":", "torch", ".", "optim", ".", "Optimizer", ",", "loss_function", ":", "Callable", ",", "epoch", ":", "int", ",", "train_loader", ":", "torch", ".", "utils", ".", "data", ".", "DataLoader", ",", "device", ":", "str", ",", "writer", ":", "torch", ".", "utils", ".", "tensorboard", ".", "SummaryWriter", "=", "None", ")", ":", "\n", "    ", "r\"\"\"\n    Trains the feedback modules of PCoders using a distance between the prediction of a PCoder and the\n    representation of the PCoder below.\n\n    Args:\n        net (torch.nn.Module): Predified network including all the PCoders\n        optimizer (torch.optim.Optimizer): PyTorch-compatible optimizer object\n        loss_function (Callable): A callable function that receives two tensors and returns the distance between them\n        epoch (int): Training epoch number\n        train_loader (torch.utils.data.DataLoader): DataLoader for training samples\n        writer (torch.utils.tensorboard.SummaryWrite, optional): Tensorboard summary writer to track training history. Default: None\n        device (str): Training device (e.g. 'cpu', 'cuda:0')\n    \"\"\"", "\n", "\n", "net", ".", "train", "(", ")", "\n", "net", ".", "backbone", ".", "eval", "(", ")", "\n", "\n", "nb_trained_samples", "=", "0", "\n", "for", "batch_index", ",", "(", "images", ",", "_", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "        ", "net", ".", "reset", "(", ")", "\n", "images", "=", "images", ".", "to", "(", "device", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "outputs", "=", "net", "(", "images", ")", "\n", "for", "i", "in", "range", "(", "net", ".", "number_of_pcoders", ")", ":", "\n", "            ", "if", "i", "==", "0", ":", "\n", "                ", "a", "=", "loss_function", "(", "net", ".", "pcoder1", ".", "prd", ",", "images", ")", "\n", "loss", "=", "a", "\n", "", "else", ":", "\n", "                ", "pcoder_pre", "=", "getattr", "(", "net", ",", "f\"pcoder{i}\"", ")", "\n", "pcoder_curr", "=", "getattr", "(", "net", ",", "f\"pcoder{i+1}\"", ")", "\n", "a", "=", "loss_function", "(", "pcoder_curr", ".", "prd", ",", "pcoder_pre", ".", "rep", ")", "\n", "loss", "+=", "a", "\n", "", "if", "writer", "is", "not", "None", ":", "\n", "                ", "writer", ".", "add_scalar", "(", "f\"MSE Train/PCoder{i+1}\"", ",", "a", ".", "item", "(", ")", ",", "(", "epoch", "-", "1", ")", "*", "len", "(", "train_loader", ")", "+", "batch_index", ")", "\n", "\n", "", "", "nb_trained_samples", "+=", "images", ".", "shape", "[", "0", "]", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "print", "(", "'Training Epoch: {epoch} [{trained_samples}/{total_samples}]\\tLoss: {:0.4f}'", ".", "format", "(", "\n", "loss", ".", "item", "(", ")", ",", "\n", "epoch", "=", "epoch", ",", "\n", "trained_samples", "=", "nb_trained_samples", ",", "\n", "total_samples", "=", "len", "(", "train_loader", ".", "dataset", ")", "\n", ")", ")", "\n", "if", "writer", "is", "not", "None", ":", "\n", "            ", "writer", ".", "add_scalar", "(", "f\"MSE Train/Sum\"", ",", "loss", ".", "item", "(", ")", ",", "(", "epoch", "-", "1", ")", "*", "len", "(", "train_loader", ")", "+", "batch_index", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.miladmozafari_predify.utils.training.eval_pcoders": [[55, 101], ["net.eval", "enumerate", "range", "print", "net.reset", "images.to.to", "range", "len", "writer.add_scalar", "range", "torch.no_grad", "net", "writer.add_scalar", "loss_function().item", "getattr", "getattr", "loss_function().item", "len", "len", "loss_function", "loss_function"], "function", ["home.repos.pwc.inspect_result.miladmozafari_predify.networks.base.PNetSeparateHP.reset"], ["", "", "", "def", "eval_pcoders", "(", "net", ":", "torch", ".", "nn", ".", "Module", ",", "loss_function", ":", "Callable", ",", "epoch", ":", "int", ",", "eval_loader", ":", "torch", ".", "utils", ".", "data", ".", "DataLoader", ",", "device", ":", "str", ",", "writer", ":", "torch", ".", "utils", ".", "tensorboard", ".", "SummaryWriter", "=", "None", ")", ":", "\n", "    ", "r\"\"\"\n    Evaluates the feedback modules of PCoders using a distance between the prediction of a PCoder and the\n    representation of the PCoder below.\n\n    Args:\n        net (torch.nn.Module): Predified network including all the PCoders\n        loss_function (Callable): A callable function that receives two tensors and returns the distance between them\n        epoch (int): Evaluation epoch number\n        test_loader (torch.utils.data.DataLoader): DataLoader for evaluation samples\n        writer (torch.utils.tensorboard.SummaryWrite, optional): Tensorboard summary writer to track evaluation history. Default: None\n        device (str): Training device (e.g. 'cpu', 'cuda:0')\n    \"\"\"", "\n", "\n", "net", ".", "eval", "(", ")", "\n", "\n", "final_loss", "=", "[", "0", "for", "i", "in", "range", "(", "net", ".", "number_of_pcoders", ")", "]", "\n", "for", "batch_index", ",", "(", "images", ",", "_", ")", "in", "enumerate", "(", "eval_loader", ")", ":", "\n", "        ", "net", ".", "reset", "(", ")", "\n", "images", "=", "images", ".", "to", "(", "device", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "outputs", "=", "net", "(", "images", ")", "\n", "", "for", "i", "in", "range", "(", "net", ".", "number_of_pcoders", ")", ":", "\n", "            ", "if", "i", "==", "0", ":", "\n", "                ", "final_loss", "[", "i", "]", "+=", "loss_function", "(", "net", ".", "pcoder1", ".", "prd", ",", "images", ")", ".", "item", "(", ")", "\n", "", "else", ":", "\n", "                ", "pcoder_pre", "=", "getattr", "(", "net", ",", "f\"pcoder{i}\"", ")", "\n", "pcoder_curr", "=", "getattr", "(", "net", ",", "f\"pcoder{i+1}\"", ")", "\n", "final_loss", "[", "i", "]", "+=", "loss_function", "(", "pcoder_curr", ".", "prd", ",", "pcoder_pre", ".", "rep", ")", ".", "item", "(", ")", "\n", "\n", "", "", "", "loss_sum", "=", "0", "\n", "for", "i", "in", "range", "(", "net", ".", "number_of_pcoders", ")", ":", "\n", "        ", "final_loss", "[", "i", "]", "/=", "len", "(", "eval_loader", ")", "\n", "loss_sum", "+=", "final_loss", "[", "i", "]", "\n", "if", "writer", "is", "not", "None", ":", "\n", "            ", "writer", ".", "add_scalar", "(", "f\"MSE Eval/PCoder{i+1}\"", ",", "final_loss", "[", "i", "]", ",", "epoch", "-", "1", ")", "\n", "\n", "\n", "", "", "print", "(", "'Training Epoch: {epoch} [{evaluated_samples}/{total_samples}]\\tLoss: {:0.4f}'", ".", "format", "(", "\n", "loss_sum", ",", "\n", "epoch", "=", "epoch", ",", "\n", "evaluated_samples", "=", "len", "(", "eval_loader", ".", "dataset", ")", ",", "\n", "total_samples", "=", "len", "(", "eval_loader", ".", "dataset", ")", "\n", ")", ")", "\n", "if", "writer", "is", "not", "None", ":", "\n", "        ", "writer", ".", "add_scalar", "(", "f\"MSE Eval/Sum\"", ",", "loss_sum", ",", "epoch", "-", "1", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.miladmozafari_predify.modules.base.Predictor.__init__": [[18, 28], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.miladmozafari_predify.networks.base.PNetSeparateHP.__init__"], ["", "else", ":", "\n", "            ", "imports", "+=", "indent", "+", "\"from torch.nn import Sequential, ConvTranspose2d, Upsample\"", "+", "os", ".", "linesep", "\n", "", "", "else", ":", "\n", "        ", "for", "p_imp", "in", "p_imports", ":", "\n", "            ", "imports", "+=", "indent", "+", "p_imp", "+", "os", ".", "linesep", "\n", "", "", "return", "imports", "\n", "\n", "", "def", "pcoder_str", "(", "pcoder_idx", ",", "module_name", ",", "src_shape", ",", "target_shape", ",", "has_feedback", ",", "same_param", ",", "gscale", ",", "module", "=", "None", ",", "indent", "=", "\"\"", ")", ":", "\n", "    ", "s", "=", "indent", "+", "f\"# PCoder number {pcoder_idx}\"", "+", "os", ".", "linesep", "\n", "\n", "is_3d", "=", "len", "(", "src_shape", ")", "==", "5", "\n"]], "home.repos.pwc.inspect_result.miladmozafari_predify.modules.base.Predictor.forward": [[29, 58], ["torch.enable_grad", "torch.enable_grad", "torch.enable_grad", "torch.enable_grad", "base.Predictor.pmodule", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "base.Predictor.prd.detach", "ff.size"], "methods", ["None"], ["\n", "if", "module", "is", "None", ":", "\n", "        ", "upsample", "=", "\"\"", "\n", "if", "is_3d", ":", "\n", "            ", "if", "src_shape", "[", "-", "3", ":", "]", "!=", "target_shape", "[", "-", "3", ":", "]", ":", "\n", "                ", "scale_factor", "=", "(", "target_shape", "[", "-", "3", "]", "/", "src_shape", "[", "-", "3", "]", ",", "target_shape", "[", "-", "2", "]", "/", "src_shape", "[", "-", "2", "]", ",", "target_shape", "[", "-", "1", "]", "/", "src_shape", "[", "-", "1", "]", ")", "\n", "upsample", "=", "f\"Upsample(scale_factor={scale_factor}, mode='bilinear', align_corners=False),\"", "\n", "", "convt", "=", "f\"ConvTranspose3d({src_shape[-4]}, {target_shape[-4]}, kernel_size=3, stride=1, padding=1)\"", "\n", "", "else", ":", "\n", "            ", "if", "src_shape", "[", "-", "2", ":", "]", "!=", "target_shape", "[", "-", "2", ":", "]", ":", "\n", "                ", "scale_factor", "=", "(", "target_shape", "[", "-", "2", "]", "/", "src_shape", "[", "-", "2", "]", ",", "target_shape", "[", "-", "1", "]", "/", "src_shape", "[", "-", "1", "]", ")", "\n", "upsample", "=", "f\"Upsample(scale_factor={scale_factor}, mode='bilinear', align_corners=False),\"", "\n", "", "convt", "=", "f\"ConvTranspose2d({src_shape[-3]}, {target_shape[-3]}, kernel_size=3, stride=1, padding=1)\"", "\n", "", "pmodule", "=", "f\"pmodule = Sequential({upsample}{convt})\"", "\n", "", "else", ":", "\n", "        ", "pmodule", "=", "f\"pmodule = {module}\"", "\n", "\n", "", "s", "+=", "indent", "+", "pmodule", "+", "os", ".", "linesep", "\n", "if", "gscale", ":", "\n", "        ", "s", "+=", "indent", "+", "f\"self.pcoder{pcoder_idx} = PCoderN(pmodule, {has_feedback}, self.random_init)\"", "+", "os", ".", "linesep", "\n", "", "else", ":", "\n", "        ", "s", "+=", "indent", "+", "f\"self.pcoder{pcoder_idx} = PCoder(pmodule, {has_feedback}, self.random_init)\"", "+", "os", ".", "linesep", "\n", "\n", "", "fb", "=", "f\"self.pcoder{pcoder_idx+1}.prd\"", "if", "has_feedback", "else", "\"None\"", "\n", "target", "=", "f\"self.pcoder{pcoder_idx-1}.rep\"", "if", "pcoder_idx", ">", "1", "else", "\"self.input_mem\"", "\n", "ffm", "=", "\"self.ffm\"", "if", "same_param", "else", "f\"self.ffm{pcoder_idx}\"", "\n", "fbm", "=", "\"self.fbm\"", "if", "same_param", "else", "f\"self.fbm{pcoder_idx}\"", "\n", "erm", "=", "\"self.erm\"", "if", "same_param", "else", "f\"self.erm{pcoder_idx}\"", "\n", "\n", "s", "+=", "indent", "+", "f\"def fw_hook{pcoder_idx}(m, m_in, m_out):\"", "+", "os", ".", "linesep", "\n"]], "home.repos.pwc.inspect_result.miladmozafari_predify.modules.base.Predictor.reset": [[59, 65], ["None"], "methods", ["None"], ["s", "+=", "indent", "+", "f\"    e = self.pcoder{pcoder_idx}(ff=m_out, fb={fb}, target={target}, build_graph=self.build_graph, ffm={ffm}, fbm={fbm}, erm={erm})\"", "+", "os", ".", "linesep", "\n", "s", "+=", "indent", "+", "f\"    return e[0]\"", "+", "os", ".", "linesep", "\n", "s", "+=", "indent", "+", "f\"self.backbone.{module_name}.register_forward_hook(fw_hook{pcoder_idx})\"", "+", "os", ".", "linesep", "\n", "return", "s", "\n", "\n", "", "def", "header_str", "(", "number_of_pcoders", ",", "class_name", ",", "same_param", ",", "hyperparameters", ",", "indent", "=", "\"\"", ")", ":", "\n", "    ", "if", "same_param", ":", "\n"]], "home.repos.pwc.inspect_result.miladmozafari_predify.modules.base.PCoder.__init__": [[88, 95], ["base.Predictor.__init__"], "methods", ["home.repos.pwc.inspect_result.miladmozafari_predify.networks.base.PNetSeparateHP.__init__"], ["name", "=", "config", ".", "get", "(", "\"name\"", ",", "\"network\"", ")", "\n", "if", "name", "==", "\"Net\"", ":", "\n", "        ", "raise", "Exception", "(", "\"Config File Error! 'name' cannot have the value 'Net'. Please select other names.\"", ")", "\n", "", "if", "not", "name", ".", "isidentifier", "(", ")", ":", "\n", "        ", "raise", "Exception", "(", "\"Config File Error! 'name' should be a valid Python identifier.\"", ")", "\n", "\n", "", "input_size", "=", "config", ".", "get", "(", "\"input_size\"", ",", "None", ")", "\n", "if", "input_size", "is", "None", ":", "\n"]], "home.repos.pwc.inspect_result.miladmozafari_predify.modules.base.PCoder.forward": [[96, 138], ["torch.enable_grad", "torch.enable_grad", "torch.enable_grad", "torch.enable_grad", "base.PCoder.pmodule", "torch.functional.mse_loss", "torch.functional.mse_loss", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "base.PCoder.prd.detach", "base.PCoder.grd.detach", "base.PCoder.rep.detach", "base.PCoder.prediction_error.detach", "ff.size"], "methods", ["None"], ["        ", "raise", "Exception", "(", "\"Config File Error! 'input_size' is not specified.\"", ")", "\n", "", "if", "not", "isinstance", "(", "input_size", ",", "list", ")", "or", "len", "(", "input_size", ")", "<=", "2", "or", "len", "(", "input_size", ")", ">=", "5", ":", "\n", "        ", "raise", "Exception", "(", "\"Config File Error! 'input_size' should be defined as a list of [channels, height, width] for 2D inputs or [channels, depth, height, width] for 3D inputs.\"", ")", "\n", "", "if", "len", "(", "input_size", ")", "==", "4", ":", "\n", "        ", "warnings", ".", "warn", "(", "\"Input dimension is set to 3D since the input size is defined as list of length 4: [channels, depth, height, width]. If you want to use 2D inputs, please specify it as [channels, height, width]\"", ",", "stacklevel", "=", "2", ")", "\n", "", "input_size", "=", "tuple", "(", "input_size", ")", "\n", "\n", "pcoders", "=", "config", ".", "get", "(", "\"pcoders\"", ",", "None", ")", "\n", "layers", "=", "[", "]", "\n", "pmodules", "=", "[", "]", "\n", "hyperparams", "=", "[", "]", "\n", "\n", "if", "pcoders", "is", "None", ":", "\n", "        ", "raise", "Exception", "(", "\"Config File Error! 'pcoders' is not specified.\"", ")", "\n", "", "if", "not", "isinstance", "(", "pcoders", ",", "list", ")", "or", "len", "(", "pcoders", ")", "==", "0", ":", "\n", "        ", "raise", "Exception", "(", "\"Config File Error! 'pcoders' should be defined as a non-empty list.\"", ")", "\n", "", "for", "pc_idx", ",", "pc", "in", "enumerate", "(", "pcoders", ")", ":", "\n", "        ", "if", "'module'", "not", "in", "pc", ":", "\n", "            ", "raise", "Exception", "(", "f\"Config File Error! 'module' is not specified for PCoder number {pc_idx + 1} (starting from 1).\"", ")", "\n", "", "layer", "=", "pc", "[", "'module'", "]", "\n", "layers", ".", "append", "(", "layer", ")", "\n", "\n", "predictor", "=", "pc", ".", "get", "(", "\"predictor\"", ",", "None", ")", "\n", "if", "predictor", "is", "None", ":", "\n", "            ", "warnings", ".", "warn", "(", "f\"'predictor' is not defined for PCoder number {pc_idx}. A default module will be inferred based on the other PCoders.\"", ",", "stacklevel", "=", "2", ")", "\n", "", "pmodules", ".", "append", "(", "predictor", ")", "\n", "\n", "if", "\"hyperparameters\"", "not", "in", "pc", ":", "\n", "            ", "warnings", ".", "warn", "(", "f\"'hyperparameters' is not defined for PCoder number {pc_idx}. Default values of feedforward=0.3, feedback=0.3, pc=0.01 will be set.\"", ",", "stacklevel", "=", "2", ")", "\n", "", "hps", "=", "pc", ".", "get", "(", "\"hyperparameters\"", ",", "{", "\"feedforward\"", ":", "0.3", ",", "\"feedback\"", ":", "0.3", ",", "\"pc\"", ":", "0.01", "}", ")", "\n", "if", "not", "(", "\"feedforward\"", "in", "hps", "and", "\"feedback\"", "in", "hps", "and", "\"pc\"", "in", "hps", ")", ":", "\n", "            ", "raise", "Exception", "(", "f\"Config File Error! 'hyperparameters' for PCoder number {pc_idx + 1} should be a disctionary that contains 'feedforward', 'feedback', 'pc' as the keys.\"", ")", "\n", "", "hyperparams", ".", "append", "(", "hps", ")", "\n", "\n", "", "p_imports", "=", "config", ".", "get", "(", "\"imports\"", ",", "None", ")", "\n", "if", "p_imports", "is", "not", "None", ":", "\n", "        ", "if", "not", "isinstance", "(", "p_imports", ",", "list", ")", ":", "\n", "            ", "raise", "Exception", "(", "f\"Config File Error! 'imports' should be defined as a list of strings.\"", ")", "\n", "\n", "", "", "gscale", "=", "config", ".", "get", "(", "\"gradient_scaling\"", ",", "None", ")", "\n", "if", "gscale", "is", "None", ":", "\n", "        ", "warnings", ".", "warn", "(", "f\"'gradient_scaling' is not defined. It will be set to False by default.\"", ",", "stacklevel", "=", "2", ")", "\n", "gscale", "=", "False", "\n"]], "home.repos.pwc.inspect_result.miladmozafari_predify.modules.base.PCoder.reset": [[139, 145], ["base.Predictor.reset"], "methods", ["home.repos.pwc.inspect_result.miladmozafari_predify.networks.base.PNetSeparateHP.reset"], ["\n", "", "same_hp", "=", "config", ".", "get", "(", "\"shared_hyperparameters\"", ",", "None", ")", "\n", "if", "same_hp", "is", "None", ":", "\n", "        ", "warnings", ".", "warn", "(", "f\"'shared_hyperparameters' is not defined. It will be set to False by default.\"", ",", "stacklevel", "=", "2", ")", "\n", "same_hp", "=", "False", "\n", "", "if", "same_hp", "is", "True", ":", "\n", "        ", "warnings", ".", "warn", "(", "f\"'shared_hyperparameters' is True. It will overwrite the values defined for each PCoder. It uses the default value or the values provided for the first PCoder.\"", ",", "stacklevel", "=", "2", ")", "\n"]], "home.repos.pwc.inspect_result.miladmozafari_predify.modules.base.PCoderN.__init__": [[180, 183], ["base.PCoder.__init__", "base.PCoderN.register_buffer", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.miladmozafari_predify.networks.base.PNetSeparateHP.__init__"], ["        ", "output_address", "=", "f\"{name.lower()}.py\"", "\n", "", "with", "open", "(", "output_address", ",", "\"w\"", ")", "as", "f", ":", "\n", "        ", "f", ".", "write", "(", "imports_str", "(", "is_3d", ",", "p_imports", "=", "p_imports", ",", "same_hp", "=", "same_hp", ",", "gscale", "=", "gscale", ")", ")", "\n", "f", ".", "write", "(", "os", ".", "linesep", ")", "\n"]], "home.repos.pwc.inspect_result.miladmozafari_predify.modules.base.PCoderN.compute_C_sqrt": [[185, 221], ["base.PCoderN.rep.detach().clone", "base.PCoderN.detach().clone", "range", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "Exception", "torch.enable_grad", "torch.enable_grad", "torch.enable_grad", "torch.enable_grad", "base.PCoderN.pmodule", "base.PCoderN.rep.detach().clone", "torch.randint().float", "torch.randint().float", "torch.randint().float", "torch.randint().float", "base.PCoderN.detach().clone", "base.PCoderN.rep.detach", "base.PCoderN.detach", "torch.enable_grad", "torch.enable_grad", "torch.enable_grad", "torch.enable_grad", "base.PCoderN.pmodule", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "base.PCoderN.rep.detach", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "base.PCoderN.detach"], "methods", ["None"], ["if", "same_hp", ":", "\n", "            ", "hps", "=", "hps", "[", "0", "]", "\n", "", "f", ".", "write", "(", "header_str", "(", "len", "(", "layers", ")", ",", "f\"{name}\"", ",", "same_hp", ",", "hyperparameters", "=", "hps", ",", "indent", "=", "\"\"", ")", ")", "\n", "f", ".", "write", "(", "os", ".", "linesep", ")", "\n", "\n", "indent", "=", "\" \"", "*", "8", "\n", "\n", "target_shape", "=", "input_size", "\n", "for", "idx", ",", "(", "module_name", ",", "module", ")", "in", "enumerate", "(", "zip", "(", "layers", ",", "modules", ")", ",", "1", ")", ":", "\n", "            ", "src_shape", "=", "layer_sizes", "[", "module", "]", "\n", "s", "=", "pcoder_str", "(", "idx", ",", "module_name", ",", "src_shape", ",", "target_shape", ",", "idx", "<", "len", "(", "layers", ")", ",", "same_hp", ",", "gscale", ",", "module", "=", "pmodules", "[", "idx", "-", "1", "]", ",", "indent", "=", "indent", ")", "\n", "f", ".", "write", "(", "s", ")", "\n", "f", ".", "write", "(", "os", ".", "linesep", ")", "\n", "target_shape", "=", "src_shape", "\n", "", "f", ".", "write", "(", "os", ".", "linesep", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.miladmozafari_predify.modules.base.PCoderN.forward": [[222, 270], ["base.PCoderN.compute_C_sqrt", "torch.enable_grad", "torch.enable_grad", "torch.enable_grad", "torch.enable_grad", "base.PCoderN.pmodule", "torch.functional.mse_loss", "torch.functional.mse_loss", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "base.PCoderN.prd.numel", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "base.PCoderN.prd.detach", "base.PCoderN.grd.detach", "base.PCoderN.rep.detach", "base.PCoderN.prediction_error.detach", "ff.size"], "methods", ["home.repos.pwc.inspect_result.miladmozafari_predify.modules.base.PCoderN.compute_C_sqrt"], []], "home.repos.pwc.inspect_result.miladmozafari_predify.networks.base.PNetSameHP.__init__": [[36, 78], ["torch.Module.__init__", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "base.PNetSameHP.register_buffer", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "base.PNetSameHP.register_buffer", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "base.PNetSameHP.register_buffer", "torch.Parameter", "torch.Parameter", "base.PNetSameHP.register_parameter", "torch.Parameter", "torch.Parameter", "base.PNetSameHP.register_parameter", "torch.Parameter", "torch.Parameter", "base.PNetSameHP.register_parameter", "torch.Parameter", "torch.Parameter", "base.PNetSameHP.register_parameter", "base.PNetSameHP.compute_hp_parameters_from_values", "copy.deepcopy", "base.PNetSameHP.backbone.eval", "base.PNetSameHP.backbone.modules", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "hasattr"], "methods", ["home.repos.pwc.inspect_result.miladmozafari_predify.networks.base.PNetSeparateHP.__init__", "home.repos.pwc.inspect_result.miladmozafari_predify.networks.base.PNetSeparateHP.compute_hp_parameters_from_values"], ["", "convt", "=", "f\"ConvTranspose3d({src_shape[-4]}, {target_shape[-4]}, kernel_size=3, stride=1, padding=1)\"", "\n", "", "else", ":", "\n", "            ", "if", "src_shape", "[", "-", "2", ":", "]", "!=", "target_shape", "[", "-", "2", ":", "]", ":", "\n", "                ", "scale_factor", "=", "(", "target_shape", "[", "-", "2", "]", "/", "src_shape", "[", "-", "2", "]", ",", "target_shape", "[", "-", "1", "]", "/", "src_shape", "[", "-", "1", "]", ")", "\n", "upsample", "=", "f\"Upsample(scale_factor={scale_factor}, mode='bilinear', align_corners=False),\"", "\n", "", "convt", "=", "f\"ConvTranspose2d({src_shape[-3]}, {target_shape[-3]}, kernel_size=3, stride=1, padding=1)\"", "\n", "", "pmodule", "=", "f\"pmodule = Sequential({upsample}{convt})\"", "\n", "", "else", ":", "\n", "        ", "pmodule", "=", "f\"pmodule = {module}\"", "\n", "\n", "", "s", "+=", "indent", "+", "pmodule", "+", "os", ".", "linesep", "\n", "if", "gscale", ":", "\n", "        ", "s", "+=", "indent", "+", "f\"self.pcoder{pcoder_idx} = PCoderN(pmodule, {has_feedback}, self.random_init)\"", "+", "os", ".", "linesep", "\n", "", "else", ":", "\n", "        ", "s", "+=", "indent", "+", "f\"self.pcoder{pcoder_idx} = PCoder(pmodule, {has_feedback}, self.random_init)\"", "+", "os", ".", "linesep", "\n", "\n", "", "fb", "=", "f\"self.pcoder{pcoder_idx+1}.prd\"", "if", "has_feedback", "else", "\"None\"", "\n", "target", "=", "f\"self.pcoder{pcoder_idx-1}.rep\"", "if", "pcoder_idx", ">", "1", "else", "\"self.input_mem\"", "\n", "ffm", "=", "\"self.ffm\"", "if", "same_param", "else", "f\"self.ffm{pcoder_idx}\"", "\n", "fbm", "=", "\"self.fbm\"", "if", "same_param", "else", "f\"self.fbm{pcoder_idx}\"", "\n", "erm", "=", "\"self.erm\"", "if", "same_param", "else", "f\"self.erm{pcoder_idx}\"", "\n", "\n", "s", "+=", "indent", "+", "f\"def fw_hook{pcoder_idx}(m, m_in, m_out):\"", "+", "os", ".", "linesep", "\n", "s", "+=", "indent", "+", "f\"    e = self.pcoder{pcoder_idx}(ff=m_out, fb={fb}, target={target}, build_graph=self.build_graph, ffm={ffm}, fbm={fbm}, erm={erm})\"", "+", "os", ".", "linesep", "\n", "s", "+=", "indent", "+", "f\"    return e[0]\"", "+", "os", ".", "linesep", "\n", "s", "+=", "indent", "+", "f\"self.backbone.{module_name}.register_forward_hook(fw_hook{pcoder_idx})\"", "+", "os", ".", "linesep", "\n", "return", "s", "\n", "\n", "", "def", "header_str", "(", "number_of_pcoders", ",", "class_name", ",", "same_param", ",", "hyperparameters", ",", "indent", "=", "\"\"", ")", ":", "\n", "    ", "if", "same_param", ":", "\n", "        ", "inherit", "=", "\"SameHP(PNetSameHP)\"", "\n", "ff", "=", "f\"{float(hyperparameters['feedforward'])}\"", "\n", "fb", "=", "f\"{float(hyperparameters['feedback'])}\"", "\n", "er", "=", "f\"{float(hyperparameters['pc'])}\"", "\n", "", "else", ":", "\n", "        ", "inherit", "=", "\"SeparateHP(PNetSeparateHP)\"", "\n", "ff", ",", "fb", ",", "er", "=", "\"(\"", ",", "\"(\"", ",", "\"(\"", "\n", "for", "hp", "in", "hyperparameters", ":", "\n", "            ", "ff", "+=", "f\"{float(hp['feedforward'])},\"", "\n", "fb", "+=", "f\"{float(hp['feedback'])},\"", "\n", "er", "+=", "f\"{float(hp['pc'])},\"", "\n", "", "ff", "=", "ff", "[", ":", "-", "1", "]", "+", "\")\"", "\n", "fb", "=", "fb", "[", ":", "-", "1", "]", "+", "\")\"", "\n"]], "home.repos.pwc.inspect_result.miladmozafari_predify.networks.base.PNetSameHP.forward": [[79, 94], ["base.PNetSameHP.reset", "base.PNetSameHP.backbone", "base.PNetSameHP.backbone", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "base.PNetSameHP.backbone"], "methods", ["home.repos.pwc.inspect_result.miladmozafari_predify.networks.base.PNetSeparateHP.reset"], ["er", "=", "er", "[", ":", "-", "1", "]", "+", "\")\"", "\n", "", "s", "=", "indent", "+", "f\"class {class_name}{inherit}:\"", "+", "os", ".", "linesep", "\n", "s", "+=", "indent", "+", "f\"    def __init__(self, backbone, build_graph=False, random_init=False, ff_multiplier={ff}, fb_multiplier={fb}, er_multiplier={er}):\"", "+", "os", ".", "linesep", "\n", "s", "+=", "indent", "+", "f\"        super().__init__(backbone, {number_of_pcoders}, build_graph, random_init, ff_multiplier, fb_multiplier, er_multiplier)\"", "+", "os", ".", "linesep", "\n", "return", "s", "\n", "\n", "", "def", "parse_toml", "(", "config_file", ")", ":", "\n", "    ", "config", "=", "toml", ".", "load", "(", "config_file", ")", "\n", "\n", "name", "=", "config", ".", "get", "(", "\"name\"", ",", "\"network\"", ")", "\n", "if", "name", "==", "\"Net\"", ":", "\n", "        ", "raise", "Exception", "(", "\"Config File Error! 'name' cannot have the value 'Net'. Please select other names.\"", ")", "\n", "", "if", "not", "name", ".", "isidentifier", "(", ")", ":", "\n", "        ", "raise", "Exception", "(", "\"Config File Error! 'name' should be a valid Python identifier.\"", ")", "\n", "\n", "", "input_size", "=", "config", ".", "get", "(", "\"input_size\"", ",", "None", ")", "\n"]], "home.repos.pwc.inspect_result.miladmozafari_predify.networks.base.PNetSameHP.reset": [[95, 108], ["base.PNetSameHP.modules", "pc.reset", "isinstance", "base.PNetSameHP.pcoders.append"], "methods", ["home.repos.pwc.inspect_result.miladmozafari_predify.networks.base.PNetSeparateHP.reset"], ["if", "input_size", "is", "None", ":", "\n", "        ", "raise", "Exception", "(", "\"Config File Error! 'input_size' is not specified.\"", ")", "\n", "", "if", "not", "isinstance", "(", "input_size", ",", "list", ")", "or", "len", "(", "input_size", ")", "<=", "2", "or", "len", "(", "input_size", ")", ">=", "5", ":", "\n", "        ", "raise", "Exception", "(", "\"Config File Error! 'input_size' should be defined as a list of [channels, height, width] for 2D inputs or [channels, depth, height, width] for 3D inputs.\"", ")", "\n", "", "if", "len", "(", "input_size", ")", "==", "4", ":", "\n", "        ", "warnings", ".", "warn", "(", "\"Input dimension is set to 3D since the input size is defined as list of length 4: [channels, depth, height, width]. If you want to use 2D inputs, please specify it as [channels, height, width]\"", ",", "stacklevel", "=", "2", ")", "\n", "", "input_size", "=", "tuple", "(", "input_size", ")", "\n", "\n", "pcoders", "=", "config", ".", "get", "(", "\"pcoders\"", ",", "None", ")", "\n", "layers", "=", "[", "]", "\n", "pmodules", "=", "[", "]", "\n", "hyperparams", "=", "[", "]", "\n", "\n", "if", "pcoders", "is", "None", ":", "\n"]], "home.repos.pwc.inspect_result.miladmozafari_predify.networks.base.PNetSameHP.get_hyperparameters_values": [[109, 114], ["base.PNetSameHP.ffm.item", "base.PNetSameHP.fbm.item", "base.PNetSameHP.erm.item", "base.PNetSameHP.fbm.item", "base.PNetSameHP.ffm.item"], "methods", ["None"], ["        ", "raise", "Exception", "(", "\"Config File Error! 'pcoders' is not specified.\"", ")", "\n", "", "if", "not", "isinstance", "(", "pcoders", ",", "list", ")", "or", "len", "(", "pcoders", ")", "==", "0", ":", "\n", "        ", "raise", "Exception", "(", "\"Config File Error! 'pcoders' should be defined as a non-empty list.\"", ")", "\n", "", "for", "pc_idx", ",", "pc", "in", "enumerate", "(", "pcoders", ")", ":", "\n", "        ", "if", "'module'", "not", "in", "pc", ":", "\n", "            ", "raise", "Exception", "(", "f\"Config File Error! 'module' is not specified for PCoder number {pc_idx + 1} (starting from 1).\"", ")", "\n"]], "home.repos.pwc.inspect_result.miladmozafari_predify.networks.base.PNetSameHP.get_hyperparameters": [[115, 120], ["None"], "methods", ["None"], ["", "layer", "=", "pc", "[", "'module'", "]", "\n", "layers", ".", "append", "(", "layer", ")", "\n", "\n", "predictor", "=", "pc", ".", "get", "(", "\"predictor\"", ",", "None", ")", "\n", "if", "predictor", "is", "None", ":", "\n", "            ", "warnings", ".", "warn", "(", "f\"'predictor' is not defined for PCoder number {pc_idx}. A default module will be inferred based on the other PCoders.\"", ",", "stacklevel", "=", "2", ")", "\n"]], "home.repos.pwc.inspect_result.miladmozafari_predify.networks.base.PNetSameHP.update_hyperparameters": [[121, 140], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.enable_grad", "torch.enable_grad", "torch.enable_grad", "torch.enable_grad", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "methods", ["None"], ["", "pmodules", ".", "append", "(", "predictor", ")", "\n", "\n", "if", "\"hyperparameters\"", "not", "in", "pc", ":", "\n", "            ", "warnings", ".", "warn", "(", "f\"'hyperparameters' is not defined for PCoder number {pc_idx}. Default values of feedforward=0.3, feedback=0.3, pc=0.01 will be set.\"", ",", "stacklevel", "=", "2", ")", "\n", "", "hps", "=", "pc", ".", "get", "(", "\"hyperparameters\"", ",", "{", "\"feedforward\"", ":", "0.3", ",", "\"feedback\"", ":", "0.3", ",", "\"pc\"", ":", "0.01", "}", ")", "\n", "if", "not", "(", "\"feedforward\"", "in", "hps", "and", "\"feedback\"", "in", "hps", "and", "\"pc\"", "in", "hps", ")", ":", "\n", "            ", "raise", "Exception", "(", "f\"Config File Error! 'hyperparameters' for PCoder number {pc_idx + 1} should be a disctionary that contains 'feedforward', 'feedback', 'pc' as the keys.\"", ")", "\n", "", "hyperparams", ".", "append", "(", "hps", ")", "\n", "\n", "", "p_imports", "=", "config", ".", "get", "(", "\"imports\"", ",", "None", ")", "\n", "if", "p_imports", "is", "not", "None", ":", "\n", "        ", "if", "not", "isinstance", "(", "p_imports", ",", "list", ")", ":", "\n", "            ", "raise", "Exception", "(", "f\"Config File Error! 'imports' should be defined as a list of strings.\"", ")", "\n", "\n", "", "", "gscale", "=", "config", ".", "get", "(", "\"gradient_scaling\"", ",", "None", ")", "\n", "if", "gscale", "is", "None", ":", "\n", "        ", "warnings", ".", "warn", "(", "f\"'gradient_scaling' is not defined. It will be set to False by default.\"", ",", "stacklevel", "=", "2", ")", "\n", "gscale", "=", "False", "\n", "\n", "", "same_hp", "=", "config", ".", "get", "(", "\"shared_hyperparameters\"", ",", "None", ")", "\n"]], "home.repos.pwc.inspect_result.miladmozafari_predify.networks.base.PNetSameHP.compute_hp_parameters_from_values": [[141, 152], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "base.PNetSameHP.errorm.copy_", "base.PNetSameHP.ff_part.copy_", "base.PNetSameHP.fb_part.copy_", "base.PNetSameHP.mem_part.copy_", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log"], "methods", ["None"], ["if", "same_hp", "is", "None", ":", "\n", "        ", "warnings", ".", "warn", "(", "f\"'shared_hyperparameters' is not defined. It will be set to False by default.\"", ",", "stacklevel", "=", "2", ")", "\n", "same_hp", "=", "False", "\n", "", "if", "same_hp", "is", "True", ":", "\n", "        ", "warnings", ".", "warn", "(", "f\"'shared_hyperparameters' is True. It will overwrite the values defined for each PCoder. It uses the default value or the values provided for the first PCoder.\"", ",", "stacklevel", "=", "2", ")", "\n", "\n", "", "return", "name", ",", "layers", ",", "pmodules", ",", "hyperparams", ",", "p_imports", ",", "input_size", ",", "gscale", ",", "same_hp", "\n", "\n", "", "def", "predify", "(", "net", ",", "config_file", ",", "output_address", "=", "None", ")", ":", "\n", "    "]], "home.repos.pwc.inspect_result.miladmozafari_predify.networks.base.PNetSameHP.set_hyperparameters": [[153, 164], ["torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "base.PNetSameHP.compute_hp_parameters_from_values"], "methods", ["home.repos.pwc.inspect_result.miladmozafari_predify.networks.base.PNetSeparateHP.compute_hp_parameters_from_values"], ["\n", "config", "=", "parse_toml", "(", "config_file", ")", "\n", "predify_core", "(", "net", ".", "to", "(", "'cpu'", ")", ",", "*", "config", ",", "output_address", ")", "\n", "\n", "", "def", "predify_core", "(", "net", ",", "name", ",", "layers", ",", "pmodules", ",", "hps", ",", "p_imports", ",", "input_size", ",", "gscale", ",", "same_hp", ",", "output_address", ")", ":", "\n", "    ", "net", ".", "eval", "(", ")", "\n", "\n", "layer_sizes", "=", "{", "}", "\n"]], "home.repos.pwc.inspect_result.miladmozafari_predify.networks.base.PNetSeparateHP.__init__": [[199, 262], ["isinstance", "isinstance", "isinstance", "torch.Module.__init__", "range", "range", "base.PNetSeparateHP.compute_hp_parameters_from_values", "copy.deepcopy", "base.PNetSeparateHP.backbone.eval", "base.PNetSeparateHP.backbone.modules", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "base.PNetSeparateHP.register_buffer", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "base.PNetSeparateHP.register_buffer", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "base.PNetSeparateHP.register_buffer", "torch.Parameter", "torch.Parameter", "base.PNetSeparateHP.register_parameter", "torch.Parameter", "torch.Parameter", "base.PNetSeparateHP.register_parameter", "torch.Parameter", "torch.Parameter", "base.PNetSeparateHP.register_parameter", "torch.Parameter", "torch.Parameter", "base.PNetSeparateHP.register_parameter", "hasattr", "range", "range", "range", "range", "range", "range", "range", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "range", "range", "range"], "methods", ["home.repos.pwc.inspect_result.miladmozafari_predify.networks.base.PNetSeparateHP.__init__", "home.repos.pwc.inspect_result.miladmozafari_predify.networks.base.PNetSeparateHP.compute_hp_parameters_from_values"], ["", "f", ".", "write", "(", "os", ".", "linesep", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.miladmozafari_predify.networks.base.PNetSeparateHP.forward": [[263, 278], ["base.PNetSeparateHP.reset", "base.PNetSeparateHP.backbone", "base.PNetSeparateHP.backbone", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "base.PNetSeparateHP.backbone"], "methods", ["home.repos.pwc.inspect_result.miladmozafari_predify.networks.base.PNetSeparateHP.reset"], []], "home.repos.pwc.inspect_result.miladmozafari_predify.networks.base.PNetSeparateHP.reset": [[279, 291], ["base.PNetSeparateHP.modules", "pc.reset", "isinstance", "base.PNetSeparateHP.pcoders.append"], "methods", ["home.repos.pwc.inspect_result.miladmozafari_predify.networks.base.PNetSeparateHP.reset"], []], "home.repos.pwc.inspect_result.miladmozafari_predify.networks.base.PNetSeparateHP.get_hyperparameters_values": [[292, 310], ["range", "vals.append", "vals.append", "vals.append", "vals.append", "vals.append", "vals.append", "vals.append", "vals.append", "getattr().item", "getattr().item", "getattr().item", "getattr().item", "getattr().item", "getattr", "getattr", "getattr", "getattr", "getattr"], "methods", ["None"], []], "home.repos.pwc.inspect_result.miladmozafari_predify.networks.base.PNetSeparateHP.get_hyperparameters": [[311, 322], ["range", "pars.append", "pars.append", "pars.append", "pars.append", "getattr", "getattr", "getattr", "getattr"], "methods", ["None"], []], "home.repos.pwc.inspect_result.miladmozafari_predify.networks.base.PNetSeparateHP.update_hyperparameters": [[323, 344], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.enable_grad", "torch.enable_grad", "torch.enable_grad", "torch.enable_grad", "range", "setattr", "setattr", "setattr", "getattr", "getattr", "getattr", "getattr", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "methods", ["None"], []], "home.repos.pwc.inspect_result.miladmozafari_predify.networks.base.PNetSeparateHP.compute_hp_parameters_from_values": [[345, 359], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "range", "errorm.copy_", "ff_part.copy_", "fb_part.copy_", "mem_part.copy_", "getattr", "getattr", "getattr", "getattr", "getattr", "getattr", "getattr", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log"], "methods", ["None"], []], "home.repos.pwc.inspect_result.miladmozafari_predify.networks.base.PNetSeparateHP.set_hyperparameters": [[360, 374], ["range", "base.PNetSeparateHP.compute_hp_parameters_from_values", "setattr", "setattr", "setattr", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.miladmozafari_predify.networks.base.PNetSeparateHP.compute_hp_parameters_from_values"], []]}