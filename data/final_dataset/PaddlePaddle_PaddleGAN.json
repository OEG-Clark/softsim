{"home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.None.setup.readme": [[25, 29], ["io.open", "f.read"], "function", ["None"], ["", "def", "readme", "(", ")", ":", "\n", "    ", "with", "open", "(", "'README.md'", ",", "encoding", "=", "\"utf-8-sig\"", ")", "as", "f", ":", "\n", "        ", "README", "=", "f", ".", "read", "(", ")", "\n", "", "return", "README", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.test_tipc.compare_results.init_args": [[9, 18], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument"], "function", ["None"], ["def", "init_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "# params for testing assert allclose", "\n", "parser", ".", "add_argument", "(", "\"--atol\"", ",", "type", "=", "float", ",", "default", "=", "1e-3", ")", "\n", "parser", ".", "add_argument", "(", "\"--rtol\"", ",", "type", "=", "float", ",", "default", "=", "1e-3", ")", "\n", "parser", ".", "add_argument", "(", "\"--gt_file\"", ",", "type", "=", "str", ",", "default", "=", "\"\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--log_file\"", ",", "type", "=", "str", ",", "default", "=", "\"\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--precision\"", ",", "type", "=", "str", ",", "default", "=", "\"fp32\"", ")", "\n", "return", "parser", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.test_tipc.compare_results.parse_args": [[19, 22], ["compare_results.init_args", "init_args.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.test_tipc.compare_results.init_args", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.parse_args"], ["", "def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "init_args", "(", ")", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.test_tipc.compare_results.load_from_file": [[23, 34], ["os.path.exists", "ValueError", "open", "f.readlines", "f.close", "line.strip().split", "float", "line.strip"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.close"], ["", "def", "load_from_file", "(", "gt_file", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "gt_file", ")", ":", "\n", "        ", "raise", "ValueError", "(", "\"The log file {} does not exists!\"", ".", "format", "(", "gt_file", ")", ")", "\n", "", "with", "open", "(", "gt_file", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "data", "=", "f", ".", "readlines", "(", ")", "\n", "f", ".", "close", "(", ")", "\n", "", "parser_gt", "=", "{", "}", "\n", "for", "line", "in", "data", ":", "\n", "        ", "metric_name", ",", "result", "=", "line", ".", "strip", "(", "\"\\n\"", ")", ".", "split", "(", "\":\"", ")", "\n", "parser_gt", "[", "metric_name", "]", "=", "float", "(", "result", ")", "\n", "", "return", "parser_gt", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.education.\u7b2c\u4e8c\u5929\u4f5c\u4e1a.Generator.__init__": [[53, 71], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.Tanh", "paddle.Tanh", "paddle.Tanh", "paddle.Tanh", "paddle.Tanh"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", ")", ":", "\n", "        ", "super", "(", "Generator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "gen", "=", "nn", ".", "Sequential", "(", "\n", "# input is Z, [B, 100, 1, 1] -> [B, 64 * 4, 4, 4]", "\n", "nn", ".", "Conv2DTranspose", "(", "100", ",", "64", "*", "4", ",", "4", ",", "1", ",", "0", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "64", "*", "4", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "# state size. [B, 64 * 4, 4, 4] -> [B, 64 * 2, 8, 8]", "\n", "nn", ".", "Conv2DTranspose", "(", "64", "*", "4", ",", "64", "*", "2", ",", "4", ",", "2", ",", "1", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "64", "*", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "# state size. [B, 64 * 2, 8, 8] -> [B, 64, 16, 16]", "\n", "nn", ".", "Conv2DTranspose", "(", "64", "*", "2", ",", "64", ",", "4", ",", "2", ",", "1", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "64", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "# state size. [B, 64, 16, 16] -> [B, 1, 32, 32]", "\n", "nn", ".", "Conv2DTranspose", "(", "64", ",", "1", ",", "4", ",", "2", ",", "1", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.education.\u7b2c\u4e8c\u5929\u4f5c\u4e1a.Generator.forward": [[73, 75], ["\u7b2c\u4e8c\u5929\u4f5c\u4e1a.Generator.gen"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "gen", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.education.\u7b2c\u4e8c\u5929\u4f5c\u4e1a.Discriminator.__init__": [[86, 109], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", ")", ":", "\n", "        ", "super", "(", "Discriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dis", "=", "nn", ".", "Sequential", "(", "\n", "\n", "# input [B, 1, 32, 32] -> [B, 64, 16, 16]", "\n", "nn", ".", "Conv2D", "(", "1", ",", "64", ",", "4", ",", "2", ",", "1", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "\n", "# state size. [B, 64, 16, 16] -> [B, 128, 8, 8]", "\n", "nn", ".", "Conv2D", "(", "64", ",", "64", "*", "2", ",", "4", ",", "2", ",", "1", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "64", "*", "2", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "\n", "# state size. [B, 128, 8, 8] -> [B, 256, 4, 4]", "\n", "nn", ".", "Conv2D", "(", "64", "*", "2", ",", "64", "*", "4", ",", "4", ",", "2", ",", "1", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "64", "*", "4", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "\n", "# state size. [B, 256, 4, 4] -> [B, 1, 1, 1]", "\n", "nn", ".", "Conv2D", "(", "64", "*", "4", ",", "1", ",", "4", ",", "1", ",", "0", ",", "bias_attr", "=", "False", ")", ",", "\n", "# \u8fd9\u91cc\u4e3a\u9700\u8981\u6539\u53d8\u7684\u5730\u65b9", "\n", "# nn.Sigmoid()", "\n", "nn", ".", "LeakyReLU", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.education.\u7b2c\u4e8c\u5929\u4f5c\u4e1a.Discriminator.forward": [[111, 113], ["\u7b2c\u4e8c\u5929\u4f5c\u4e1a.Discriminator.dis"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "dis", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.education.\u7b2c\u4e8c\u5929\u4f5c\u4e1a.normal_": [[25, 30], ["paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.normal", "paddle.normal", "paddle.normal", "paddle.normal", "paddle.normal", "x.set_value"], "function", ["None"], ["@", "paddle", ".", "no_grad", "(", ")", "\n", "def", "normal_", "(", "x", ",", "mean", "=", "0.", ",", "std", "=", "1.", ")", ":", "\n", "    ", "temp_value", "=", "paddle", ".", "normal", "(", "mean", ",", "std", ",", "shape", "=", "x", ".", "shape", ")", "\n", "x", ".", "set_value", "(", "temp_value", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.education.\u7b2c\u4e8c\u5929\u4f5c\u4e1a.uniform_": [[31, 36], ["paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.uniform", "paddle.uniform", "paddle.uniform", "paddle.uniform", "paddle.uniform", "x.set_value"], "function", ["None"], ["", "@", "paddle", ".", "no_grad", "(", ")", "\n", "def", "uniform_", "(", "x", ",", "a", "=", "-", "1.", ",", "b", "=", "1.", ")", ":", "\n", "    ", "temp_value", "=", "paddle", ".", "uniform", "(", "min", "=", "a", ",", "max", "=", "b", ",", "shape", "=", "x", ".", "shape", ")", "\n", "x", ".", "set_value", "(", "temp_value", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.education.\u7b2c\u4e8c\u5929\u4f5c\u4e1a.constant_": [[37, 42], ["paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "x.set_value"], "function", ["None"], ["", "@", "paddle", ".", "no_grad", "(", ")", "\n", "def", "constant_", "(", "x", ",", "value", ")", ":", "\n", "    ", "temp_value", "=", "paddle", ".", "full", "(", "x", ".", "shape", ",", "value", ",", "x", ".", "dtype", ")", "\n", "x", ".", "set_value", "(", "temp_value", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.education.\u7b2c\u4e8c\u5929\u4f5c\u4e1a.weights_init": [[43, 50], ["hasattr", "\u7b2c\u4e8c\u5929\u4f5c\u4e1a.normal_", "classname.find", "classname.find", "\u7b2c\u4e8c\u5929\u4f5c\u4e1a.normal_", "\u7b2c\u4e8c\u5929\u4f5c\u4e1a.constant_"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.normal_", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.normal_", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.constant_"], ["", "def", "weights_init", "(", "m", ")", ":", "\n", "    ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "hasattr", "(", "m", ",", "'weight'", ")", "and", "classname", ".", "find", "(", "'Conv'", ")", "!=", "-", "1", ":", "\n", "        ", "normal_", "(", "m", ".", "weight", ",", "0.0", ",", "0.02", ")", "\n", "", "elif", "classname", ".", "find", "(", "'BatchNorm'", ")", "!=", "-", "1", ":", "\n", "        ", "normal_", "(", "m", ".", "weight", ",", "1.0", ",", "0.02", ")", "\n", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.tools.export_model.parse_args": [[27, 70], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'-c'", ",", "\n", "'--config-file'", ",", "\n", "metavar", "=", "\"FILE\"", ",", "\n", "required", "=", "True", ",", "\n", "help", "=", "\"config file path\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--load\"", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ",", "\n", "required", "=", "True", ",", "\n", "help", "=", "\"put the path to resuming file if needed\"", ")", "\n", "# config options", "\n", "parser", ".", "add_argument", "(", "\"-o\"", ",", "\n", "\"--opt\"", ",", "\n", "nargs", "=", "\"+\"", ",", "\n", "help", "=", "\"set configuration options\"", ")", "\n", "parser", ".", "add_argument", "(", "\"-s\"", ",", "\n", "\"--inputs_size\"", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ",", "\n", "required", "=", "True", ",", "\n", "help", "=", "\"the inputs size\"", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--output_dir\"", ",", "\n", "default", "=", "None", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "\"The path prefix of inference model to be used.\"", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--export_serving_model\"", ",", "\n", "default", "=", "False", ",", "\n", "type", "=", "bool", ",", "\n", "help", "=", "\"export serving model.\"", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--model_name\"", ",", "\n", "default", "=", "None", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "\"model_name.\"", ",", "\n", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.tools.export_model.main": [[72, 83], ["ppgan.models.builder.build_model", "ppgan.models.builder.build_model.setup_train_mode", "ppgan.utils.filesystem.load", "ppgan.models.builder.build_model.nets.items", "ppgan.models.builder.build_model.export_model", "int", "args.inputs_size.split", "net.set_state_dict", "input_size.split"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.build_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.setup_train_mode", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.export_model"], ["", "def", "main", "(", "args", ",", "cfg", ")", ":", "\n", "    ", "inputs_size", "=", "[", "[", "int", "(", "size", ")", "for", "size", "in", "input_size", ".", "split", "(", "','", ")", "]", "\n", "for", "input_size", "in", "args", ".", "inputs_size", ".", "split", "(", "';'", ")", "]", "\n", "model", "=", "ppgan", ".", "models", ".", "builder", ".", "build_model", "(", "cfg", ".", "model", ")", "\n", "model", ".", "setup_train_mode", "(", "is_train", "=", "False", ")", "\n", "state_dicts", "=", "ppgan", ".", "utils", ".", "filesystem", ".", "load", "(", "args", ".", "load", ")", "\n", "for", "net_name", ",", "net", "in", "model", ".", "nets", ".", "items", "(", ")", ":", "\n", "        ", "if", "net_name", "in", "state_dicts", ":", "\n", "            ", "net", ".", "set_state_dict", "(", "state_dicts", "[", "net_name", "]", ")", "\n", "", "", "model", ".", "export_model", "(", "cfg", ".", "export_model", ",", "args", ".", "output_dir", ",", "inputs_size", ",", "\n", "args", ".", "export_serving_model", ",", "args", ".", "model_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.tools.extract_weight.parse_args": [[19, 29], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "\n", "description", "=", "'This script extracts weights from a checkpoint'", ")", "\n", "parser", ".", "add_argument", "(", "'checkpoint'", ",", "help", "=", "'checkpoint file'", ")", "\n", "parser", ".", "add_argument", "(", "'--net-name'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'net name in checkpoint dict'", ")", "\n", "parser", ".", "add_argument", "(", "'--output'", ",", "type", "=", "str", ",", "help", "=", "'destination file name'", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.tools.extract_weight.main": [[31, 37], ["extract_weight.parse_args", "parse_args.output.endswith", "paddle.load", "paddle.save"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.parse_args", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "assert", "args", ".", "output", ".", "endswith", "(", "\".pdparams\"", ")", "\n", "ckpt", "=", "paddle", ".", "load", "(", "args", ".", "checkpoint", ")", "\n", "state_dict", "=", "ckpt", "[", "args", ".", "net_name", "]", "\n", "paddle", ".", "save", "(", "state_dict", ",", "args", ".", "output", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.tools.main.main": [[28, 50], ["ppgan.utils.setup.setup", "ppgan.engine.trainer.Trainer", "ppgan.engine.trainer.Trainer.close", "ppgan.engine.trainer.Trainer.resume", "ppgan.engine.trainer.Trainer.test", "ppgan.engine.trainer.Trainer.train", "ppgan.engine.trainer.Trainer.load", "ppgan.engine.trainer.Trainer.save"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.setup.setup", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.close", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.resume", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.test", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save"], ["def", "main", "(", "args", ",", "cfg", ")", ":", "\n", "# init environment, include logger, dynamic graph, seed, device, train or test mode...", "\n", "    ", "setup", "(", "args", ",", "cfg", ")", "\n", "# build trainer", "\n", "trainer", "=", "Trainer", "(", "cfg", ")", "\n", "\n", "# continue train or evaluate, checkpoint need contain epoch and optimizer info", "\n", "if", "args", ".", "resume", ":", "\n", "        ", "trainer", ".", "resume", "(", "args", ".", "resume", ")", "\n", "# evaluate or finute, only load generator weights", "\n", "", "elif", "args", ".", "load", ":", "\n", "        ", "trainer", ".", "load", "(", "args", ".", "load", ")", "\n", "\n", "", "if", "args", ".", "evaluate_only", ":", "\n", "        ", "trainer", ".", "test", "(", ")", "\n", "return", "\n", "# training, when keyboard interrupt save weights", "\n", "", "try", ":", "\n", "        ", "trainer", ".", "train", "(", ")", "\n", "", "except", "KeyboardInterrupt", "as", "e", ":", "\n", "        ", "trainer", ".", "save", "(", "trainer", ".", "current_epoch", ")", "\n", "", "trainer", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.tools.inference.parse_args": [[25, 100], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--model_path\"", ",", "\n", "default", "=", "None", ",", "\n", "type", "=", "str", ",", "\n", "required", "=", "True", ",", "\n", "help", "=", "\"The path prefix of inference model to be used.\"", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\"--model_type\"", ",", "\n", "default", "=", "None", ",", "\n", "type", "=", "str", ",", "\n", "required", "=", "True", ",", "\n", "help", "=", "\"Model type selected in the list: \"", "+", "\n", "\", \"", ".", "join", "(", "MODEL_CLASSES", ")", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--device\"", ",", "\n", "default", "=", "\"gpu\"", ",", "\n", "type", "=", "str", ",", "\n", "choices", "=", "[", "\"cpu\"", ",", "\"gpu\"", ",", "\"xpu\"", "]", ",", "\n", "help", "=", "\"The device to select to train the model, is must be cpu/gpu/xpu.\"", ")", "\n", "parser", ".", "add_argument", "(", "'-c'", ",", "\n", "'--config-file'", ",", "\n", "metavar", "=", "\"FILE\"", ",", "\n", "help", "=", "'config file path'", ")", "\n", "parser", ".", "add_argument", "(", "\"--output_path\"", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "\"infer_output\"", ",", "\n", "help", "=", "\"output_path\"", ")", "\n", "# config options", "\n", "parser", ".", "add_argument", "(", "\"-o\"", ",", "\n", "\"--opt\"", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "\"set configuration options\"", ")", "\n", "# fix random numbers by setting seed", "\n", "parser", ".", "add_argument", "(", "'--seed'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ",", "\n", "help", "=", "'fix random numbers by setting seed\\\".'", ")", "\n", "# for tensorRT", "\n", "parser", ".", "add_argument", "(", "\"--run_mode\"", ",", "\n", "default", "=", "\"fluid\"", ",", "\n", "type", "=", "str", ",", "\n", "choices", "=", "[", "\"fluid\"", ",", "\"trt_fp32\"", ",", "\"trt_fp16\"", "]", ",", "\n", "help", "=", "\"mode of running(fluid/trt_fp32/trt_fp16)\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--trt_min_shape\"", ",", "\n", "default", "=", "1", ",", "\n", "type", "=", "int", ",", "\n", "help", "=", "\"trt_min_shape for tensorRT\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--trt_max_shape\"", ",", "\n", "default", "=", "1280", ",", "\n", "type", "=", "int", ",", "\n", "help", "=", "\"trt_max_shape for tensorRT\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--trt_opt_shape\"", ",", "\n", "default", "=", "640", ",", "\n", "type", "=", "int", ",", "\n", "help", "=", "\"trt_opt_shape for tensorRT\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--min_subgraph_size\"", ",", "\n", "default", "=", "3", ",", "\n", "type", "=", "int", ",", "\n", "help", "=", "\"trt_opt_shape for tensorRT\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--batch_size\"", ",", "\n", "default", "=", "1", ",", "\n", "type", "=", "int", ",", "\n", "help", "=", "\"batch_size for tensorRT\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--use_dynamic_shape\"", ",", "\n", "dest", "=", "\"use_dynamic_shape\"", ",", "\n", "action", "=", "\"store_true\"", ",", "\n", "help", "=", "\"use_dynamic_shape for tensorRT\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--trt_calib_mode\"", ",", "\n", "dest", "=", "\"trt_calib_mode\"", ",", "\n", "action", "=", "\"store_true\"", ",", "\n", "help", "=", "\"trt_calib_mode for tensorRT\"", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.tools.inference.create_predictor": [[102, 152], ["paddle.inference.Config", "paddle.inference.create_predictor", "paddle.inference.Config.enable_use_gpu", "precision_map.keys", "paddle.inference.Config.enable_tensorrt_engine", "paddle.inference.Config.disable_gpu", "paddle.inference.Config.set_trt_dynamic_shape_info", "print", "paddle.inference.Config.enable_xpu", "paddle.inference.Config.disable_gpu"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.tools.inference.create_predictor"], ["", "def", "create_predictor", "(", "model_path", ",", "\n", "device", "=", "\"gpu\"", ",", "\n", "run_mode", "=", "'fluid'", ",", "\n", "batch_size", "=", "1", ",", "\n", "min_subgraph_size", "=", "3", ",", "\n", "use_dynamic_shape", "=", "False", ",", "\n", "trt_min_shape", "=", "1", ",", "\n", "trt_max_shape", "=", "1280", ",", "\n", "trt_opt_shape", "=", "640", ",", "\n", "trt_calib_mode", "=", "False", ")", ":", "\n", "    ", "config", "=", "paddle", ".", "inference", ".", "Config", "(", "model_path", "+", "\".pdmodel\"", ",", "\n", "model_path", "+", "\".pdiparams\"", ")", "\n", "if", "device", "==", "\"gpu\"", ":", "\n", "        ", "config", ".", "enable_use_gpu", "(", "100", ",", "0", ")", "\n", "", "elif", "device", "==", "\"cpu\"", ":", "\n", "        ", "config", ".", "disable_gpu", "(", ")", "\n", "", "elif", "device", "==", "\"xpu\"", ":", "\n", "        ", "config", ".", "enable_xpu", "(", "100", ")", "\n", "", "else", ":", "\n", "        ", "config", ".", "disable_gpu", "(", ")", "\n", "\n", "", "precision_map", "=", "{", "\n", "'trt_int8'", ":", "paddle", ".", "inference", ".", "Config", ".", "Precision", ".", "Int8", ",", "\n", "'trt_fp32'", ":", "paddle", ".", "inference", ".", "Config", ".", "Precision", ".", "Float32", ",", "\n", "'trt_fp16'", ":", "paddle", ".", "inference", ".", "Config", ".", "Precision", ".", "Half", "\n", "}", "\n", "if", "run_mode", "in", "precision_map", ".", "keys", "(", ")", ":", "\n", "        ", "config", ".", "enable_tensorrt_engine", "(", "workspace_size", "=", "1", "<<", "25", ",", "\n", "max_batch_size", "=", "batch_size", ",", "\n", "min_subgraph_size", "=", "min_subgraph_size", ",", "\n", "precision_mode", "=", "precision_map", "[", "run_mode", "]", ",", "\n", "use_static", "=", "False", ",", "\n", "use_calib_mode", "=", "trt_calib_mode", ")", "\n", "\n", "if", "use_dynamic_shape", ":", "\n", "            ", "min_input_shape", "=", "{", "\n", "'image'", ":", "[", "batch_size", ",", "3", ",", "trt_min_shape", ",", "trt_min_shape", "]", "\n", "}", "\n", "max_input_shape", "=", "{", "\n", "'image'", ":", "[", "batch_size", ",", "3", ",", "trt_max_shape", ",", "trt_max_shape", "]", "\n", "}", "\n", "opt_input_shape", "=", "{", "\n", "'image'", ":", "[", "batch_size", ",", "3", ",", "trt_opt_shape", ",", "trt_opt_shape", "]", "\n", "}", "\n", "config", ".", "set_trt_dynamic_shape_info", "(", "min_input_shape", ",", "max_input_shape", ",", "\n", "opt_input_shape", ")", "\n", "print", "(", "'trt set dynamic shape done!'", ")", "\n", "\n", "", "", "predictor", "=", "paddle", ".", "inference", ".", "create_predictor", "(", "config", ")", "\n", "return", "predictor", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.tools.inference.setup_metrics": [[154, 164], ["collections.OrderedDict", "isinstance", "cfg.items", "ppgan.metrics.build_metric", "list", "ppgan.metrics.build_metric", "cfg.values"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.builder.build_metric", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.builder.build_metric"], ["", "def", "setup_metrics", "(", "cfg", ")", ":", "\n", "    ", "metrics", "=", "OrderedDict", "(", ")", "\n", "if", "isinstance", "(", "list", "(", "cfg", ".", "values", "(", ")", ")", "[", "0", "]", ",", "dict", ")", ":", "\n", "        ", "for", "metric_name", ",", "cfg_", "in", "cfg", ".", "items", "(", ")", ":", "\n", "            ", "metrics", "[", "metric_name", "]", "=", "build_metric", "(", "cfg_", ")", "\n", "", "", "else", ":", "\n", "        ", "metric", "=", "build_metric", "(", "cfg", ")", "\n", "metrics", "[", "metric", ".", "__class__", ".", "__name__", "]", "=", "metric", "\n", "\n", "", "return", "metrics", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.tools.inference.main": [[166, 328], ["inference.parse_args", "ppgan.utils.config.get_config", "inference.create_predictor", "create_predictor.get_output_handle", "ppgan.datasets.builder.build_dataloader", "len", "ppgan.engine.trainer.IterLoader", "ppgan.utils.config.get_config.get", "ppgan.utils.filesystem.makedirs", "ppgan.utils.config.get_config.get", "range", "paddle.seed", "random.seed", "numpy.random.seed", "create_predictor.get_input_handle", "os.path.join", "inference.setup_metrics", "setup_metrics.values", "next", "open", "setup_metrics.items", "open.close", "create_predictor.get_input_names", "create_predictor.get_output_names", "metric.reset", "data[].numpy", "input_handles[].copy_from_cpu", "create_predictor.run", "predictor.get_output_handle.copy_to_cpu", "paddle.to_tensor", "ppgan.utils.visual.tensor2img", "ppgan.utils.visual.save_image", "os.path.join", "paddle.to_tensor", "setup_metrics.values", "print", "os.path.join", "metric.update", "data[].numpy", "input_handles[].copy_from_cpu", "create_predictor.run", "predictor.get_output_handle.copy_to_cpu", "paddle.to_tensor", "ppgan.utils.visual.tensor2img", "ppgan.utils.visual.save_image", "os.path.join", "paddle.to_tensor", "setup_metrics.values", "metric.accumulate", "os.path.join", "metric.update", "x.transpose.transpose", "input_handles[].copy_from_cpu", "input_handles[].copy_from_cpu", "create_predictor.run", "predictor.get_output_handle.copy_to_cpu", "range", "paddle.to_tensor", "ppgan.utils.visual.tensor2img", "ppgan.utils.visual.save_image", "data[].numpy", "input_handles[].copy_from_cpu", "create_predictor.run", "predictor.get_output_handle.copy_to_cpu", "paddle.to_tensor", "ppgan.utils.visual.tensor2img", "ppgan.utils.visual.save_image", "data[].numpy", "data[].numpy", "data[].numpy", "input_handles[].copy_from_cpu", "create_predictor.run", "predictor.get_output_handle.copy_to_cpu", "paddle.to_tensor", "ppgan.utils.visual.tensor2img", "ppgan.utils.visual.save_image", "paddle.randn().cpu().numpy", "input_handles[].copy_from_cpu", "input_handles[].copy_from_cpu", "create_predictor.run", "predictor.get_output_handle.copy_to_cpu", "paddle.to_tensor", "ppgan.utils.visual.tensor2img", "ppgan.utils.visual.save_image", "os.path.join", "paddle.to_tensor", "setup_metrics.values", "numpy.array().astype", "os.path.join", "metric.update", "data[].numpy", "input_handles[].copy_from_cpu", "create_predictor.run", "predictor.get_output_handle.copy_to_cpu", "paddle.to_tensor", "range", "ppgan.utils.visual.tensor2img", "ppgan.utils.visual.save_image", "os.path.join", "setup_metrics.values", "paddle.randn().cpu", "len", "create_predictor.get_output_handle", "out_img.append", "gt_img.append", "os.path.join", "metric.update", "create_predictor.run", "predictor.get_output_handle.copy_to_cpu", "paddle.to_tensor", "ppgan.utils.visual.tensor2img", "ppgan.utils.visual.save_image", "os.path.join", "setup_metrics.values", "numpy.array", "create_predictor.get_output_names", "ppgan.utils.visual.tensor2img", "ppgan.utils.visual.tensor2img", "os.path.join", "metric.update", "paddle.randn", "create_predictor.get_output_names"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.parse_args", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.config.get_config", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.tools.inference.create_predictor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.builder.build_dataloader", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.setup_metrics", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.close", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid.FID.reset", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.midas_predictor.MiDaSPredictor.run", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.tensor2img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.save_image", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.midas_predictor.MiDaSPredictor.run", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.tensor2img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.save_image", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid.FID.accumulate", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.midas_predictor.MiDaSPredictor.run", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.tensor2img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.save_image", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.midas_predictor.MiDaSPredictor.run", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.tensor2img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.save_image", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.midas_predictor.MiDaSPredictor.run", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.tensor2img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.save_image", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.midas_predictor.MiDaSPredictor.run", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.tensor2img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.save_image", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.midas_predictor.MiDaSPredictor.run", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.tensor2img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.save_image", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.midas_predictor.MiDaSPredictor.run", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.tensor2img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.save_image", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.tensor2img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.tensor2img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "if", "args", ".", "seed", ":", "\n", "        ", "paddle", ".", "seed", "(", "args", ".", "seed", ")", "\n", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "", "cfg", "=", "get_config", "(", "args", ".", "config_file", ",", "args", ".", "opt", ")", "\n", "predictor", "=", "create_predictor", "(", "args", ".", "model_path", ",", "args", ".", "device", ",", "args", ".", "run_mode", ",", "\n", "args", ".", "batch_size", ",", "args", ".", "min_subgraph_size", ",", "\n", "args", ".", "use_dynamic_shape", ",", "args", ".", "trt_min_shape", ",", "\n", "args", ".", "trt_max_shape", ",", "args", ".", "trt_opt_shape", ",", "\n", "args", ".", "trt_calib_mode", ")", "\n", "input_handles", "=", "[", "\n", "predictor", ".", "get_input_handle", "(", "name", ")", "\n", "for", "name", "in", "predictor", ".", "get_input_names", "(", ")", "\n", "]", "\n", "\n", "output_handle", "=", "predictor", ".", "get_output_handle", "(", "predictor", ".", "get_output_names", "(", ")", "[", "0", "]", ")", "\n", "test_dataloader", "=", "build_dataloader", "(", "cfg", ".", "dataset", ".", "test", ",", "\n", "is_train", "=", "False", ",", "\n", "distributed", "=", "False", ")", "\n", "\n", "max_eval_steps", "=", "len", "(", "test_dataloader", ")", "\n", "iter_loader", "=", "IterLoader", "(", "test_dataloader", ")", "\n", "min_max", "=", "cfg", ".", "get", "(", "'min_max'", ",", "None", ")", "\n", "if", "min_max", "is", "None", ":", "\n", "        ", "min_max", "=", "(", "-", "1.", ",", "1.", ")", "\n", "\n", "", "model_type", "=", "args", ".", "model_type", "\n", "makedirs", "(", "os", ".", "path", ".", "join", "(", "args", ".", "output_path", ",", "model_type", ")", ")", "\n", "\n", "validate_cfg", "=", "cfg", ".", "get", "(", "'validate'", ",", "None", ")", "\n", "metrics", "=", "None", "\n", "if", "validate_cfg", "and", "'metrics'", "in", "validate_cfg", ":", "\n", "        ", "metrics", "=", "setup_metrics", "(", "validate_cfg", "[", "'metrics'", "]", ")", "\n", "for", "metric", "in", "metrics", ".", "values", "(", ")", ":", "\n", "            ", "metric", ".", "reset", "(", ")", "\n", "\n", "", "", "for", "i", "in", "range", "(", "max_eval_steps", ")", ":", "\n", "        ", "data", "=", "next", "(", "iter_loader", ")", "\n", "if", "model_type", "==", "\"pix2pix\"", ":", "\n", "            ", "real_A", "=", "data", "[", "'B'", "]", ".", "numpy", "(", ")", "\n", "input_handles", "[", "0", "]", ".", "copy_from_cpu", "(", "real_A", ")", "\n", "predictor", ".", "run", "(", ")", "\n", "prediction", "=", "output_handle", ".", "copy_to_cpu", "(", ")", "\n", "prediction", "=", "paddle", ".", "to_tensor", "(", "prediction", ")", "\n", "image_numpy", "=", "tensor2img", "(", "prediction", "[", "0", "]", ",", "min_max", ")", "\n", "save_image", "(", "\n", "image_numpy", ",", "\n", "os", ".", "path", ".", "join", "(", "args", ".", "output_path", ",", "\"pix2pix/{}.png\"", ".", "format", "(", "i", ")", ")", ")", "\n", "metric_file", "=", "os", ".", "path", ".", "join", "(", "args", ".", "output_path", ",", "\"pix2pix/metric.txt\"", ")", "\n", "real_B", "=", "paddle", ".", "to_tensor", "(", "data", "[", "'A'", "]", ")", "\n", "for", "metric", "in", "metrics", ".", "values", "(", ")", ":", "\n", "                ", "metric", ".", "update", "(", "prediction", ",", "real_B", ")", "\n", "\n", "", "", "elif", "model_type", "==", "\"cyclegan\"", ":", "\n", "            ", "real_A", "=", "data", "[", "'A'", "]", ".", "numpy", "(", ")", "\n", "input_handles", "[", "0", "]", ".", "copy_from_cpu", "(", "real_A", ")", "\n", "predictor", ".", "run", "(", ")", "\n", "prediction", "=", "output_handle", ".", "copy_to_cpu", "(", ")", "\n", "prediction", "=", "paddle", ".", "to_tensor", "(", "prediction", ")", "\n", "image_numpy", "=", "tensor2img", "(", "prediction", "[", "0", "]", ",", "min_max", ")", "\n", "save_image", "(", "\n", "image_numpy", ",", "\n", "os", ".", "path", ".", "join", "(", "args", ".", "output_path", ",", "\"cyclegan/{}.png\"", ".", "format", "(", "i", ")", ")", ")", "\n", "metric_file", "=", "os", ".", "path", ".", "join", "(", "args", ".", "output_path", ",", "\"cyclegan/metric.txt\"", ")", "\n", "real_B", "=", "paddle", ".", "to_tensor", "(", "data", "[", "'B'", "]", ")", "\n", "for", "metric", "in", "metrics", ".", "values", "(", ")", ":", "\n", "                ", "metric", ".", "update", "(", "prediction", ",", "real_B", ")", "\n", "\n", "", "", "elif", "model_type", "==", "\"wav2lip\"", ":", "\n", "            ", "indiv_mels", ",", "x", "=", "data", "[", "'indiv_mels'", "]", ".", "numpy", "(", ")", "[", "0", "]", ",", "data", "[", "'x'", "]", ".", "numpy", "(", ")", "[", "0", "]", "\n", "x", "=", "x", ".", "transpose", "(", "[", "1", ",", "0", ",", "2", ",", "3", "]", ")", "\n", "input_handles", "[", "0", "]", ".", "copy_from_cpu", "(", "indiv_mels", ")", "\n", "input_handles", "[", "1", "]", ".", "copy_from_cpu", "(", "x", ")", "\n", "predictor", ".", "run", "(", ")", "\n", "prediction", "=", "output_handle", ".", "copy_to_cpu", "(", ")", "\n", "for", "j", "in", "range", "(", "prediction", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "prediction", "[", "j", "]", "=", "prediction", "[", "j", "]", "[", ":", ":", "-", "1", ",", ":", ",", ":", "]", "\n", "image_numpy", "=", "paddle", ".", "to_tensor", "(", "prediction", "[", "j", "]", ")", "\n", "image_numpy", "=", "tensor2img", "(", "image_numpy", ",", "(", "0", ",", "1", ")", ")", "\n", "save_image", "(", "image_numpy", ",", "\n", "\"infer_output/wav2lip/{}_{}.png\"", ".", "format", "(", "i", ",", "j", ")", ")", "\n", "\n", "", "", "elif", "model_type", "==", "\"esrgan\"", ":", "\n", "            ", "lq", "=", "data", "[", "'lq'", "]", ".", "numpy", "(", ")", "\n", "input_handles", "[", "0", "]", ".", "copy_from_cpu", "(", "lq", ")", "\n", "predictor", ".", "run", "(", ")", "\n", "prediction", "=", "output_handle", ".", "copy_to_cpu", "(", ")", "\n", "prediction", "=", "paddle", ".", "to_tensor", "(", "prediction", "[", "0", "]", ")", "\n", "image_numpy", "=", "tensor2img", "(", "prediction", ",", "min_max", ")", "\n", "save_image", "(", "image_numpy", ",", "\"infer_output/esrgan/{}.png\"", ".", "format", "(", "i", ")", ")", "\n", "", "elif", "model_type", "==", "\"edvr\"", ":", "\n", "            ", "lq", "=", "data", "[", "'lq'", "]", ".", "numpy", "(", ")", "\n", "input_handles", "[", "0", "]", ".", "copy_from_cpu", "(", "lq", ")", "\n", "predictor", ".", "run", "(", ")", "\n", "prediction", "=", "output_handle", ".", "copy_to_cpu", "(", ")", "\n", "prediction", "=", "paddle", ".", "to_tensor", "(", "prediction", "[", "0", "]", ")", "\n", "image_numpy", "=", "tensor2img", "(", "prediction", ",", "min_max", ")", "\n", "save_image", "(", "image_numpy", ",", "\"infer_output/edvr/{}.png\"", ".", "format", "(", "i", ")", ")", "\n", "", "elif", "model_type", "==", "\"stylegan2\"", ":", "\n", "            ", "noise", "=", "paddle", ".", "randn", "(", "[", "1", ",", "1", ",", "512", "]", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "input_handles", "[", "0", "]", ".", "copy_from_cpu", "(", "noise", ")", "\n", "input_handles", "[", "1", "]", ".", "copy_from_cpu", "(", "np", ".", "array", "(", "[", "0.7", "]", ")", ".", "astype", "(", "'float32'", ")", ")", "\n", "predictor", ".", "run", "(", ")", "\n", "prediction", "=", "output_handle", ".", "copy_to_cpu", "(", ")", "\n", "prediction", "=", "paddle", ".", "to_tensor", "(", "prediction", ")", "\n", "image_numpy", "=", "tensor2img", "(", "prediction", "[", "0", "]", ",", "min_max", ")", "\n", "save_image", "(", "\n", "image_numpy", ",", "\n", "os", ".", "path", ".", "join", "(", "args", ".", "output_path", ",", "\"stylegan2/{}.png\"", ".", "format", "(", "i", ")", ")", ")", "\n", "metric_file", "=", "os", ".", "path", ".", "join", "(", "args", ".", "output_path", ",", "\"stylegan2/metric.txt\"", ")", "\n", "real_img", "=", "paddle", ".", "to_tensor", "(", "data", "[", "'A'", "]", ")", "\n", "for", "metric", "in", "metrics", ".", "values", "(", ")", ":", "\n", "                ", "metric", ".", "update", "(", "prediction", ",", "real_img", ")", "\n", "", "", "elif", "model_type", "in", "[", "\"basicvsr\"", ",", "\"msvsr\"", "]", ":", "\n", "            ", "lq", "=", "data", "[", "'lq'", "]", ".", "numpy", "(", ")", "\n", "input_handles", "[", "0", "]", ".", "copy_from_cpu", "(", "lq", ")", "\n", "predictor", ".", "run", "(", ")", "\n", "if", "len", "(", "predictor", ".", "get_output_names", "(", ")", ")", ">", "1", ":", "\n", "                ", "output_handle", "=", "predictor", ".", "get_output_handle", "(", "\n", "predictor", ".", "get_output_names", "(", ")", "[", "-", "1", "]", ")", "\n", "", "prediction", "=", "output_handle", ".", "copy_to_cpu", "(", ")", "\n", "prediction", "=", "paddle", ".", "to_tensor", "(", "prediction", ")", "\n", "_", ",", "t", ",", "_", ",", "_", ",", "_", "=", "prediction", ".", "shape", "\n", "\n", "out_img", "=", "[", "]", "\n", "gt_img", "=", "[", "]", "\n", "for", "ti", "in", "range", "(", "t", ")", ":", "\n", "                ", "out_tensor", "=", "prediction", "[", "0", ",", "ti", "]", "\n", "gt_tensor", "=", "data", "[", "'gt'", "]", "[", "0", ",", "ti", "]", "\n", "out_img", ".", "append", "(", "tensor2img", "(", "out_tensor", ",", "(", "0.", ",", "1.", ")", ")", ")", "\n", "gt_img", ".", "append", "(", "tensor2img", "(", "gt_tensor", ",", "(", "0.", ",", "1.", ")", ")", ")", "\n", "\n", "", "image_numpy", "=", "tensor2img", "(", "prediction", "[", "0", "]", ",", "min_max", ")", "\n", "save_image", "(", "\n", "image_numpy", ",", "\n", "os", ".", "path", ".", "join", "(", "args", ".", "output_path", ",", "model_type", ",", "\"{}.png\"", ".", "format", "(", "i", ")", ")", ")", "\n", "\n", "metric_file", "=", "os", ".", "path", ".", "join", "(", "args", ".", "output_path", ",", "model_type", ",", "\n", "\"metric.txt\"", ")", "\n", "for", "metric", "in", "metrics", ".", "values", "(", ")", ":", "\n", "                ", "metric", ".", "update", "(", "out_img", ",", "gt_img", ",", "is_seq", "=", "True", ")", "\n", "", "", "elif", "model_type", "==", "\"singan\"", ":", "\n", "            ", "predictor", ".", "run", "(", ")", "\n", "prediction", "=", "output_handle", ".", "copy_to_cpu", "(", ")", "\n", "prediction", "=", "paddle", ".", "to_tensor", "(", "prediction", ")", "\n", "image_numpy", "=", "tensor2img", "(", "prediction", ",", "min_max", ")", "\n", "save_image", "(", "\n", "image_numpy", ",", "\n", "os", ".", "path", ".", "join", "(", "args", ".", "output_path", ",", "\"singan/{}.png\"", ".", "format", "(", "i", ")", ")", ")", "\n", "metric_file", "=", "os", ".", "path", ".", "join", "(", "args", ".", "output_path", ",", "\"singan/metric.txt\"", ")", "\n", "for", "metric", "in", "metrics", ".", "values", "(", ")", ":", "\n", "                ", "metric", ".", "update", "(", "prediction", ",", "data", "[", "'A'", "]", ")", "\n", "\n", "", "", "", "if", "metrics", ":", "\n", "        ", "log_file", "=", "open", "(", "metric_file", ",", "'a'", ")", "\n", "for", "metric_name", ",", "metric", "in", "metrics", ".", "items", "(", ")", ":", "\n", "            ", "loss_string", "=", "\"Metric {}: {:.4f}\"", ".", "format", "(", "metric_name", ",", "\n", "metric", ".", "accumulate", "(", ")", ")", "\n", "print", "(", "loss_string", ",", "file", "=", "log_file", ")", "\n", "", "log_file", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.tools.fom_infer.read_img": [[15, 23], ["imageio.imread", "numpy.expand_dims"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.imread"], ["def", "read_img", "(", "path", ")", ":", "\n", "    ", "img", "=", "imageio", ".", "imread", "(", "path", ")", "\n", "if", "img", ".", "ndim", "==", "2", ":", "\n", "        ", "img", "=", "np", ".", "expand_dims", "(", "img", ",", "axis", "=", "2", ")", "\n", "# som images have 4 channels", "\n", "", "if", "img", ".", "shape", "[", "2", "]", ">", "3", ":", "\n", "        ", "img", "=", "img", "[", ":", ",", ":", ",", ":", "3", "]", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.tools.fom_infer.read_video": [[25, 37], ["imageio.get_reader", "imageio.get_reader.close", "imageio.get_reader.get_meta_data", "driving_video.append", "print"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.close", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "read_video", "(", "path", ")", ":", "\n", "    ", "reader", "=", "imageio", ".", "get_reader", "(", "path", ")", "\n", "fps", "=", "reader", ".", "get_meta_data", "(", ")", "[", "'fps'", "]", "\n", "driving_video", "=", "[", "]", "\n", "try", ":", "\n", "        ", "for", "im", "in", "reader", ":", "\n", "            ", "driving_video", ".", "append", "(", "im", ")", "\n", "", "", "except", "RuntimeError", ":", "\n", "        ", "print", "(", "\"Read driving video error!\"", ")", "\n", "pass", "\n", "", "reader", ".", "close", "(", ")", "\n", "return", "driving_video", ",", "fps", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.tools.fom_infer.face_detection": [[39, 87], ["paddle.Config", "paddle_infer.Config.disable_gpu", "paddle_infer.Config.disable_glog_info", "paddle_infer.Config.enable_memory_optim", "paddle_infer.Config.switch_use_feed_fetch_ops", "paddle.create_predictor", "img_ori.astype", "img[].transpose", "paddle_infer.create_predictor.get_input_names", "paddle_infer.create_predictor.get_input_handle", "predictor.get_input_handle.copy_from_cpu", "paddle_infer.create_predictor.run", "paddle_infer.create_predictor.get_output_names", "paddle_infer.create_predictor.get_output_handle", "predictor.get_output_handle.copy_to_cpu", "max", "max", "max", "min", "min", "os.path.join", "os.path.join", "numpy.array", "numpy.array", "functools.reduce", "print", "exit", "int", "int", "int", "int", "int", "int", "int", "int"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.tools.inference.create_predictor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.midas_predictor.MiDaSPredictor.run"], ["", "def", "face_detection", "(", "img_ori", ",", "weight_path", ")", ":", "\n", "    ", "config", "=", "paddle_infer", ".", "Config", "(", "os", ".", "path", ".", "join", "(", "weight_path", ",", "'__model__'", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "weight_path", ",", "'__params__'", ")", ")", "\n", "config", ".", "disable_gpu", "(", ")", "\n", "# disable print log when predict", "\n", "config", ".", "disable_glog_info", "(", ")", "\n", "# enable shared memory", "\n", "config", ".", "enable_memory_optim", "(", ")", "\n", "# disable feed, fetch OP, needed by zero_copy_run", "\n", "config", ".", "switch_use_feed_fetch_ops", "(", "False", ")", "\n", "predictor", "=", "paddle_infer", ".", "create_predictor", "(", "config", ")", "\n", "\n", "img", "=", "img_ori", ".", "astype", "(", "np", ".", "float32", ")", "\n", "mean", "=", "np", ".", "array", "(", "[", "123", ",", "117", ",", "104", "]", ")", "[", "np", ".", "newaxis", ",", "np", ".", "newaxis", ",", ":", "]", "\n", "std", "=", "np", ".", "array", "(", "[", "127.502231", ",", "127.502231", ",", "127.502231", "]", ")", "[", "np", ".", "newaxis", ",", "\n", "np", ".", "newaxis", ",", ":", "]", "\n", "img", "-=", "mean", "\n", "img", "/=", "std", "\n", "img", "=", "img", "[", ":", ",", ":", ",", "[", "2", ",", "1", ",", "0", "]", "]", "\n", "img", "=", "img", "[", "np", ".", "newaxis", "]", ".", "transpose", "(", "[", "0", ",", "3", ",", "1", ",", "2", "]", ")", "\n", "\n", "input_names", "=", "predictor", ".", "get_input_names", "(", ")", "\n", "input_tensor", "=", "predictor", ".", "get_input_handle", "(", "input_names", "[", "0", "]", ")", "\n", "input_tensor", ".", "copy_from_cpu", "(", "img", ")", "\n", "predictor", ".", "run", "(", ")", "\n", "output_names", "=", "predictor", ".", "get_output_names", "(", ")", "\n", "boxes_tensor", "=", "predictor", ".", "get_output_handle", "(", "output_names", "[", "0", "]", ")", "\n", "np_boxes", "=", "boxes_tensor", ".", "copy_to_cpu", "(", ")", "\n", "if", "reduce", "(", "lambda", "x", ",", "y", ":", "x", "*", "y", ",", "np_boxes", ".", "shape", ")", "<", "6", ":", "\n", "        ", "print", "(", "'[WARNNING] No object detected.'", ")", "\n", "exit", "(", ")", "\n", "", "w", ",", "h", "=", "img", ".", "shape", "[", "2", ":", "]", "\n", "np_boxes", "[", ":", ",", "2", "]", "*=", "h", "\n", "np_boxes", "[", ":", ",", "3", "]", "*=", "w", "\n", "np_boxes", "[", ":", ",", "4", "]", "*=", "h", "\n", "np_boxes", "[", ":", ",", "5", "]", "*=", "w", "\n", "expect_boxes", "=", "(", "np_boxes", "[", ":", ",", "1", "]", ">", "0.5", ")", "&", "(", "np_boxes", "[", ":", ",", "0", "]", ">", "-", "1", ")", "\n", "rect", "=", "np_boxes", "[", "expect_boxes", ",", ":", "]", "[", "0", "]", "[", "2", ":", "]", "\n", "bh", "=", "rect", "[", "3", "]", "-", "rect", "[", "1", "]", "\n", "bw", "=", "rect", "[", "2", "]", "-", "rect", "[", "0", "]", "\n", "cy", "=", "rect", "[", "1", "]", "+", "int", "(", "bh", "/", "2", ")", "\n", "cx", "=", "rect", "[", "0", "]", "+", "int", "(", "bw", "/", "2", ")", "\n", "margin", "=", "max", "(", "bh", ",", "bw", ")", "\n", "y1", "=", "max", "(", "0", ",", "cy", "-", "margin", ")", "\n", "x1", "=", "max", "(", "0", ",", "cx", "-", "int", "(", "0.8", "*", "margin", ")", ")", "\n", "y2", "=", "min", "(", "h", ",", "cy", "+", "margin", ")", "\n", "x2", "=", "min", "(", "w", ",", "cx", "+", "int", "(", "0.8", "*", "margin", ")", ")", "\n", "return", "int", "(", "y1", ")", ",", "int", "(", "y2", ")", ",", "int", "(", "x1", ")", ",", "int", "(", "x2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.tools.fom_infer.main": [[89, 215], ["fom_infer.parse_args", "pathlib.Path", "ppgan.utils.filesystem.makedirs", "pathlib.Path.is_dir", "paddle.Config", "paddle.Config", "paddle.create_predictor", "paddle.create_predictor", "range", "os.path.join", "open", "open.close", "list", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "paddle_infer.Config.enable_use_gpu", "paddle_infer.Config.enable_use_gpu", "paddle_infer.Config.set_mkldnn_cache_capacity", "paddle_infer.Config.enable_mkldnn", "paddle_infer.Config.set_mkldnn_cache_capacity", "paddle_infer.Config.enable_mkldnn", "paddle_infer.Config.disable_gpu", "paddle_infer.Config.set_cpu_math_library_num_threads", "paddle_infer.Config.disable_gpu", "paddle_infer.Config.set_cpu_math_library_num_threads", "len", "fom_infer.read_video", "len", "numpy.array().astype().transpose", "paddle_infer.create_predictor.get_input_names", "paddle_infer.create_predictor.get_input_handle", "kp_detector_predictor.get_input_handle.reshape", "kp_detector_predictor.get_input_handle.copy_from_cpu", "paddle_infer.create_predictor.run", "paddle_infer.create_predictor.get_output_names", "paddle_infer.create_predictor.get_output_handle", "kp_detector_predictor.get_output_handle.copy_to_cpu", "paddle_infer.create_predictor.get_output_handle", "kp_detector_predictor.get_output_handle.copy_to_cpu", "kp_detector_predictor.get_input_handle.reshape", "kp_detector_predictor.get_input_handle.copy_from_cpu", "paddle_infer.create_predictor.run", "paddle_infer.create_predictor.get_output_names", "paddle_infer.create_predictor.get_output_handle", "kp_detector_predictor.get_output_handle.copy_to_cpu", "paddle_infer.create_predictor.get_output_handle", "kp_detector_predictor.get_output_handle.copy_to_cpu", "time.time", "tqdm.tqdm", "print", "imageio.mimsave", "numpy.mean", "pathlib.Path.iterdir", "fom_infer.read_img", "source[].astype().transpose", "range", "kp_detector_predictor.get_input_handle.copy_from_cpu", "paddle_infer.create_predictor.run", "paddle_infer.create_predictor.get_output_names", "paddle_infer.create_predictor.get_output_handle", "kp_detector_predictor.get_output_handle.copy_to_cpu", "paddle_infer.create_predictor.get_output_handle", "kp_detector_predictor.get_output_handle.copy_to_cpu", "paddle_infer.create_predictor.get_input_names", "range", "paddle_infer.create_predictor.run", "paddle_infer.create_predictor.get_output_names", "paddle_infer.create_predictor.get_output_handle", "generator_predictor.get_output_handle.copy_to_cpu", "paddle.abs().mean().cpu().numpy", "paddle.abs().mean().cpu().numpy", "test_loss.append", "results.append", "os.path.join", "cv2.resize", "numpy.array().astype", "cv2.resize", "len", "paddle_infer.create_predictor.get_input_handle", "generator_predictor.get_input_handle.copy_from_cpu", "generator_output_handle.copy_to_cpu.astype", "time.time", "source[].astype", "paddle.abs().mean().cpu", "paddle.abs().mean().cpu", "numpy.transpose", "numpy.array", "str", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs", "paddle.abs", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.parse_args", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.tools.inference.create_predictor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.tools.inference.create_predictor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.close", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.firstorder_dataset.read_video", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.midas_predictor.MiDaSPredictor.run", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.midas_predictor.MiDaSPredictor.run", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.first_order_predictor.FirstOrderPredictor.read_img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.midas_predictor.MiDaSPredictor.run", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.midas_predictor.MiDaSPredictor.run", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "\n", "source_path", "=", "args", ".", "source_path", "\n", "driving_path", "=", "Path", "(", "args", ".", "driving_path", ")", "\n", "makedirs", "(", "args", ".", "output_path", ")", "\n", "if", "driving_path", ".", "is_dir", "(", ")", ":", "\n", "        ", "driving_paths", "=", "list", "(", "driving_path", ".", "iterdir", "(", ")", ")", "\n", "", "else", ":", "\n", "        ", "driving_paths", "=", "[", "driving_path", "]", "\n", "\n", "# \u521b\u5efa config", "\n", "", "kp_detector_config", "=", "paddle_infer", ".", "Config", "(", "\n", "os", ".", "path", ".", "join", "(", "args", ".", "model_path", ",", "\"kp_detector.pdmodel\"", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "args", ".", "model_path", ",", "\"kp_detector.pdiparams\"", ")", ")", "\n", "generator_config", "=", "paddle_infer", ".", "Config", "(", "\n", "os", ".", "path", ".", "join", "(", "args", ".", "model_path", ",", "\"generator.pdmodel\"", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "args", ".", "model_path", ",", "\"generator.pdiparams\"", ")", ")", "\n", "if", "args", ".", "device", "==", "\"gpu\"", ":", "\n", "        ", "kp_detector_config", ".", "enable_use_gpu", "(", "100", ",", "0", ")", "\n", "generator_config", ".", "enable_use_gpu", "(", "100", ",", "0", ")", "\n", "", "else", ":", "\n", "        ", "kp_detector_config", ".", "set_mkldnn_cache_capacity", "(", "10", ")", "\n", "kp_detector_config", ".", "enable_mkldnn", "(", ")", "\n", "generator_config", ".", "set_mkldnn_cache_capacity", "(", "10", ")", "\n", "generator_config", ".", "enable_mkldnn", "(", ")", "\n", "kp_detector_config", ".", "disable_gpu", "(", ")", "\n", "kp_detector_config", ".", "set_cpu_math_library_num_threads", "(", "6", ")", "\n", "generator_config", ".", "disable_gpu", "(", ")", "\n", "generator_config", ".", "set_cpu_math_library_num_threads", "(", "6", ")", "\n", "# \u6839\u636e config \u521b\u5efa predictor", "\n", "", "kp_detector_predictor", "=", "paddle_infer", ".", "create_predictor", "(", "kp_detector_config", ")", "\n", "generator_predictor", "=", "paddle_infer", ".", "create_predictor", "(", "generator_config", ")", "\n", "test_loss", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "len", "(", "driving_paths", ")", ")", ":", "\n", "        ", "driving_path", "=", "driving_paths", "[", "k", "]", "\n", "driving_video", ",", "fps", "=", "read_video", "(", "driving_path", ")", "\n", "driving_video", "=", "[", "\n", "cv2", ".", "resize", "(", "frame", ",", "(", "256", ",", "256", ")", ")", "/", "255.0", "for", "frame", "in", "driving_video", "\n", "]", "\n", "driving_len", "=", "len", "(", "driving_video", ")", "\n", "driving_video", "=", "np", ".", "array", "(", "driving_video", ")", ".", "astype", "(", "np", ".", "float32", ")", ".", "transpose", "(", "\n", "[", "0", ",", "3", ",", "1", ",", "2", "]", ")", "\n", "\n", "if", "source_path", "==", "None", ":", "\n", "            ", "source", "=", "driving_video", "[", "0", ":", "1", "]", "\n", "", "else", ":", "\n", "            ", "source_img", "=", "read_img", "(", "source_path", ")", "\n", "#Todo\uff1aadd blazeface static model", "\n", "#left, right, up, bottom = face_detection(source_img, \"/workspace/PaddleDetection/static/inference_model/blazeface/\")", "\n", "source", "=", "source_img", "#[left:right, up:bottom]", "\n", "source", "=", "cv2", ".", "resize", "(", "source", ",", "(", "256", ",", "256", ")", ")", "/", "255.0", "\n", "source", "=", "source", "[", "np", ".", "newaxis", "]", ".", "astype", "(", "np", ".", "float32", ")", ".", "transpose", "(", "\n", "[", "0", ",", "3", ",", "1", ",", "2", "]", ")", "\n", "\n", "# \u83b7\u53d6\u8f93\u5165\u7684\u540d\u79f0", "\n", "", "kp_detector_input_names", "=", "kp_detector_predictor", ".", "get_input_names", "(", ")", "\n", "kp_detector_input_handle", "=", "kp_detector_predictor", ".", "get_input_handle", "(", "\n", "kp_detector_input_names", "[", "0", "]", ")", "\n", "\n", "kp_detector_input_handle", ".", "reshape", "(", "[", "args", ".", "batch_size", ",", "3", ",", "256", ",", "256", "]", ")", "\n", "kp_detector_input_handle", ".", "copy_from_cpu", "(", "source", ")", "\n", "kp_detector_predictor", ".", "run", "(", ")", "\n", "kp_detector_output_names", "=", "kp_detector_predictor", ".", "get_output_names", "(", ")", "\n", "kp_detector_output_handle", "=", "kp_detector_predictor", ".", "get_output_handle", "(", "\n", "kp_detector_output_names", "[", "0", "]", ")", "\n", "source_j", "=", "kp_detector_output_handle", ".", "copy_to_cpu", "(", ")", "\n", "kp_detector_output_handle", "=", "kp_detector_predictor", ".", "get_output_handle", "(", "\n", "kp_detector_output_names", "[", "1", "]", ")", "\n", "source_v", "=", "kp_detector_output_handle", ".", "copy_to_cpu", "(", ")", "\n", "\n", "kp_detector_input_handle", ".", "reshape", "(", "[", "args", ".", "batch_size", ",", "3", ",", "256", ",", "256", "]", ")", "\n", "kp_detector_input_handle", ".", "copy_from_cpu", "(", "driving_video", "[", "0", ":", "1", "]", ")", "\n", "kp_detector_predictor", ".", "run", "(", ")", "\n", "kp_detector_output_names", "=", "kp_detector_predictor", ".", "get_output_names", "(", ")", "\n", "kp_detector_output_handle", "=", "kp_detector_predictor", ".", "get_output_handle", "(", "\n", "kp_detector_output_names", "[", "0", "]", ")", "\n", "driving_init_j", "=", "kp_detector_output_handle", ".", "copy_to_cpu", "(", ")", "\n", "kp_detector_output_handle", "=", "kp_detector_predictor", ".", "get_output_handle", "(", "\n", "kp_detector_output_names", "[", "1", "]", ")", "\n", "driving_init_v", "=", "kp_detector_output_handle", ".", "copy_to_cpu", "(", ")", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "results", "=", "[", "]", "\n", "for", "i", "in", "tqdm", "(", "range", "(", "0", ",", "driving_len", ")", ")", ":", "\n", "            ", "kp_detector_input_handle", ".", "copy_from_cpu", "(", "driving_video", "[", "i", ":", "i", "+", "1", "]", ")", "\n", "kp_detector_predictor", ".", "run", "(", ")", "\n", "kp_detector_output_names", "=", "kp_detector_predictor", ".", "get_output_names", "(", ")", "\n", "kp_detector_output_handle", "=", "kp_detector_predictor", ".", "get_output_handle", "(", "\n", "kp_detector_output_names", "[", "0", "]", ")", "\n", "driving_j", "=", "kp_detector_output_handle", ".", "copy_to_cpu", "(", ")", "\n", "kp_detector_output_handle", "=", "kp_detector_predictor", ".", "get_output_handle", "(", "\n", "kp_detector_output_names", "[", "1", "]", ")", "\n", "driving_v", "=", "kp_detector_output_handle", ".", "copy_to_cpu", "(", ")", "\n", "generator_inputs", "=", "[", "\n", "source", ",", "source_j", ",", "source_v", ",", "driving_j", ",", "driving_v", ",", "\n", "driving_init_j", ",", "driving_init_v", "\n", "]", "\n", "generator_input_names", "=", "generator_predictor", ".", "get_input_names", "(", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "generator_input_names", ")", ")", ":", "\n", "                ", "generator_input_handle", "=", "generator_predictor", ".", "get_input_handle", "(", "\n", "generator_input_names", "[", "i", "]", ")", "\n", "generator_input_handle", ".", "copy_from_cpu", "(", "generator_inputs", "[", "i", "]", ")", "\n", "", "generator_predictor", ".", "run", "(", ")", "\n", "generator_output_names", "=", "generator_predictor", ".", "get_output_names", "(", ")", "\n", "generator_output_handle", "=", "generator_predictor", ".", "get_output_handle", "(", "\n", "generator_output_names", "[", "0", "]", ")", "\n", "output_data", "=", "generator_output_handle", ".", "copy_to_cpu", "(", ")", "\n", "loss", "=", "paddle", ".", "abs", "(", "\n", "paddle", ".", "to_tensor", "(", "output_data", ")", "-", "\n", "paddle", ".", "to_tensor", "(", "driving_video", "[", "i", "]", ")", ")", ".", "mean", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "test_loss", ".", "append", "(", "loss", ")", "\n", "output_data", "=", "np", ".", "transpose", "(", "output_data", ",", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "[", "0", "]", "*", "255.0", "\n", "\n", "#Todo\uff1aadd blazeface static model", "\n", "#frame = source_img.copy()", "\n", "#frame[left:right, up:bottom] = cv2.resize(output_data.astype(np.uint8), (bottom - up, right - left), cv2.INTER_AREA)", "\n", "results", ".", "append", "(", "output_data", ".", "astype", "(", "np", ".", "uint8", ")", ")", "\n", "", "print", "(", "time", ".", "time", "(", ")", "-", "start_time", ")", "\n", "imageio", ".", "mimsave", "(", "os", ".", "path", ".", "join", "(", "args", ".", "output_path", ",", "\n", "\"result_\"", "+", "str", "(", "k", ")", "+", "\".mp4\"", ")", ",", "\n", "[", "frame", "for", "frame", "in", "results", "]", ",", "\n", "fps", "=", "fps", ")", "\n", "", "metric_file", "=", "os", ".", "path", ".", "join", "(", "args", ".", "output_path", ",", "\"metric.txt\"", ")", "\n", "log_file", "=", "open", "(", "metric_file", ",", "'a'", ")", "\n", "loss_string", "=", "\"Metric {}: {:.4f}\"", ".", "format", "(", "\"l1 loss\"", ",", "np", ".", "mean", "(", "test_loss", ")", ")", "\n", "log_file", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.tools.fom_infer.parse_args": [[217, 236], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.parse_args"], ["", "def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\"--model_path\"", ",", "type", "=", "str", ",", "help", "=", "\"model filename profix\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--batch_size\"", ",", "type", "=", "int", ",", "default", "=", "1", ",", "help", "=", "\"batch size\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--source_path\"", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ",", "\n", "help", "=", "\"source_path\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--driving_path\"", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ",", "\n", "help", "=", "\"driving_path\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--output_path\"", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "\"infer_output/fom/\"", ",", "\n", "help", "=", "\"output_path\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--device\"", ",", "type", "=", "str", ",", "default", "=", "\"gpu\"", ",", "help", "=", "\"device\"", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.tools.animegan_picmean.read_img": [[23, 30], ["cv2.imread", "img[].mean", "img[].mean", "img[].mean", "len"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.imread"], ["def", "read_img", "(", "image_path", ")", ":", "\n", "    ", "img", "=", "cv2", ".", "imread", "(", "image_path", ")", "\n", "assert", "len", "(", "img", ".", "shape", ")", "==", "3", "\n", "B", "=", "img", "[", "...", ",", "0", "]", ".", "mean", "(", ")", "\n", "G", "=", "img", "[", "...", ",", "1", "]", ".", "mean", "(", ")", "\n", "R", "=", "img", "[", "...", ",", "2", "]", ".", "mean", "(", ")", "\n", "return", "B", ",", "G", ",", "R", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.tools.animegan_picmean.main": [[32, 53], ["glob.glob", "len", "print", "tqdm.tqdm", "print", "print", "os.path.join", "animegan_picmean.read_img", "numpy.asfarray"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.first_order_predictor.FirstOrderPredictor.read_img"], ["", "def", "main", "(", "dataset", ")", ":", "\n", "    ", "file_list", "=", "glob", "(", "os", ".", "path", ".", "join", "(", "dataset", ",", "'*.jpg'", ")", ")", "\n", "image_num", "=", "len", "(", "file_list", ")", "\n", "print", "(", "'image_num:'", ",", "image_num", ")", "\n", "\n", "B_total", "=", "0", "\n", "G_total", "=", "0", "\n", "R_total", "=", "0", "\n", "for", "f", "in", "tqdm", "(", "file_list", ")", ":", "\n", "        ", "bgr", "=", "read_img", "(", "f", ")", "\n", "B_total", "+=", "bgr", "[", "0", "]", "\n", "G_total", "+=", "bgr", "[", "1", "]", "\n", "R_total", "+=", "bgr", "[", "2", "]", "\n", "\n", "", "B_mean", ",", "G_mean", ",", "R_mean", "=", "B_total", "/", "image_num", ",", "G_total", "/", "image_num", ",", "R_total", "/", "image_num", "\n", "mean", "=", "(", "B_mean", "+", "G_mean", "+", "R_mean", ")", "/", "3", "\n", "\n", "print", "(", "'RGB mean diff'", ")", "\n", "print", "(", "\n", "np", ".", "asfarray", "(", "(", "mean", "-", "R_mean", ",", "mean", "-", "G_mean", ",", "mean", "-", "B_mean", ")", ",", "\n", "dtype", "=", "'float32'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.options.parse_args": [[18, 79], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'PaddleGAN'", ")", "\n", "parser", ".", "add_argument", "(", "'-c'", ",", "\n", "'--config-file'", ",", "\n", "metavar", "=", "\"FILE\"", ",", "\n", "help", "=", "'config file path'", ")", "\n", "# cuda setting", "\n", "parser", ".", "add_argument", "(", "'--no-cuda'", ",", "\n", "action", "=", "'store_true'", ",", "\n", "default", "=", "False", ",", "\n", "help", "=", "'disables CUDA training'", ")", "\n", "# checkpoint and log", "\n", "parser", ".", "add_argument", "(", "'--resume'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ",", "\n", "help", "=", "'put the path to resuming file if needed'", ")", "\n", "parser", ".", "add_argument", "(", "'--load'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ",", "\n", "help", "=", "'put the path to resuming file if needed'", ")", "\n", "# for evaluation", "\n", "parser", ".", "add_argument", "(", "'--val-interval'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "1", ",", "\n", "help", "=", "'run validation every interval'", ")", "\n", "parser", ".", "add_argument", "(", "'--evaluate-only'", ",", "\n", "action", "=", "'store_true'", ",", "\n", "default", "=", "False", ",", "\n", "help", "=", "'skip validation during training'", ")", "\n", "# config options", "\n", "parser", ".", "add_argument", "(", "\"-o\"", ",", "\n", "\"--opt\"", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "\"set configuration options\"", ")", "\n", "\n", "#for inference", "\n", "parser", ".", "add_argument", "(", "\"--source_path\"", ",", "\n", "default", "=", "\"\"", ",", "\n", "metavar", "=", "\"FILE\"", ",", "\n", "help", "=", "\"path to source image\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--reference_dir\"", ",", "\n", "default", "=", "\"\"", ",", "\n", "help", "=", "\"path to reference images\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--model_path\"", ",", "default", "=", "None", ",", "help", "=", "\"model for loading\"", ")", "\n", "\n", "# for profiler                ", "\n", "parser", ".", "add_argument", "(", "'-p'", ",", "\n", "'--profiler_options'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ",", "\n", "help", "=", "'The option of profiler, which should be in format \\\"key1=value1;key2=value2;key3=value3\\\".'", "\n", ")", "\n", "# fix random numbers by setting seed", "\n", "parser", ".", "add_argument", "(", "'--seed'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ",", "\n", "help", "=", "'fix random numbers by setting seed\\\".'", "\n", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "return", "args", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs": [[21, 28], ["os.path.exists", "os.makedirs"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs"], ["def", "makedirs", "(", "dir", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "dir", ")", ":", "\n", "# avoid error when train with multiple gpus", "\n", "        ", "try", ":", "\n", "            ", "os", ".", "makedirs", "(", "dir", ")", "\n", "", "except", ":", "\n", "            ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.save": [[30, 58], ["state_dicts.items", "state_dict.items", "isinstance", "open", "pickle.dump", "isinstance", "filesystem.save.convert"], "function", ["None"], ["", "", "", "def", "save", "(", "state_dicts", ",", "file_name", ")", ":", "\n", "    ", "def", "convert", "(", "state_dict", ")", ":", "\n", "        ", "model_dict", "=", "{", "}", "\n", "\n", "for", "k", ",", "v", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "\n", "v", ",", "\n", "(", "paddle", ".", "static", ".", "Variable", ",", "paddle", ".", "Tensor", ")", ")", ":", "\n", "                ", "model_dict", "[", "k", "]", "=", "v", ".", "numpy", "(", ")", "\n", "", "else", ":", "\n", "                ", "model_dict", "[", "k", "]", "=", "v", "\n", "\n", "", "", "return", "model_dict", "\n", "\n", "", "final_dict", "=", "{", "}", "\n", "for", "k", ",", "v", "in", "state_dicts", ".", "items", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "\n", "v", ",", "\n", "(", "paddle", ".", "static", ".", "Variable", ",", "paddle", ".", "Tensor", ")", ")", ":", "\n", "            ", "final_dict", "=", "convert", "(", "state_dicts", ")", "\n", "break", "\n", "", "elif", "isinstance", "(", "v", ",", "dict", ")", ":", "\n", "            ", "final_dict", "[", "k", "]", "=", "convert", "(", "v", ")", "\n", "", "else", ":", "\n", "            ", "final_dict", "[", "k", "]", "=", "v", "\n", "\n", "", "", "with", "open", "(", "file_name", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "pickle", ".", "dump", "(", "final_dict", ",", "f", ",", "protocol", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.load": [[60, 65], ["open", "pickle.load", "pickle.load"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["", "", "def", "load", "(", "file_name", ")", ":", "\n", "    ", "with", "open", "(", "file_name", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "state_dicts", "=", "pickle", ".", "load", "(", "f", ")", "if", "six", ".", "PY2", "else", "pickle", ".", "load", "(", "\n", "f", ",", "encoding", "=", "'latin1'", ")", "\n", "", "return", "state_dicts", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.config.AttrDict.__getattr__": [[21, 26], ["AttributeError"], "methods", ["None"], ["    ", "def", "__getattr__", "(", "self", ",", "key", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "return", "self", "[", "key", "]", "\n", "", "except", "KeyError", ":", "\n", "            ", "raise", "AttributeError", "(", "key", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.config.AttrDict.__setattr__": [[27, 32], ["None"], "methods", ["None"], ["", "", "def", "__setattr__", "(", "self", ",", "key", ",", "value", ")", ":", "\n", "        ", "if", "key", "in", "self", ".", "__dict__", ":", "\n", "            ", "self", ".", "__dict__", "[", "key", "]", "=", "value", "\n", "", "else", ":", "\n", "            ", "self", "[", "key", "]", "=", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.config.create_attr_dict": [[34, 48], ["yaml_config.items", "isinstance", "isinstance", "type", "config.AttrDict", "config.create_attr_dict", "literal_eval"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.config.create_attr_dict"], ["", "", "", "def", "create_attr_dict", "(", "yaml_config", ")", ":", "\n", "    ", "from", "ast", "import", "literal_eval", "\n", "for", "key", ",", "value", "in", "yaml_config", ".", "items", "(", ")", ":", "\n", "        ", "if", "type", "(", "value", ")", "is", "dict", ":", "\n", "            ", "yaml_config", "[", "key", "]", "=", "value", "=", "AttrDict", "(", "value", ")", "\n", "", "if", "isinstance", "(", "value", ",", "str", ")", ":", "\n", "            ", "try", ":", "\n", "                ", "value", "=", "literal_eval", "(", "value", ")", "\n", "", "except", "BaseException", ":", "\n", "                ", "pass", "\n", "", "", "if", "isinstance", "(", "value", ",", "AttrDict", ")", ":", "\n", "            ", "create_attr_dict", "(", "yaml_config", "[", "key", "]", ")", "\n", "", "else", ":", "\n", "            ", "yaml_config", "[", "key", "]", "=", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.config.parse_config": [[50, 56], ["config.create_attr_dict", "open", "config.AttrDict", "yaml.load"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.config.create_attr_dict", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["", "", "", "def", "parse_config", "(", "cfg_file", ")", ":", "\n", "    ", "\"\"\"Load a config file into AttrDict\"\"\"", "\n", "with", "open", "(", "cfg_file", ",", "'r'", ")", "as", "fopen", ":", "\n", "        ", "yaml_config", "=", "AttrDict", "(", "yaml", ".", "load", "(", "fopen", ",", "Loader", "=", "yaml", ".", "SafeLoader", ")", ")", "\n", "", "create_attr_dict", "(", "yaml_config", ")", "\n", "return", "yaml_config", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.config.override": [[58, 87], ["isinstance", "isinstance", "len", "config.override.str2num"], "function", ["None"], ["", "def", "override", "(", "dl", ",", "ks", ",", "v", ")", ":", "\n", "    ", "\"\"\"\n    Recursively replace dict of list\n    Args:\n        dl(dict or list): dict or list to be replaced\n        ks(list): list of keys\n        v(str): value to be replaced\n    \"\"\"", "\n", "def", "str2num", "(", "v", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "return", "eval", "(", "v", ")", "\n", "", "except", "Exception", ":", "\n", "            ", "return", "v", "\n", "\n", "", "", "assert", "isinstance", "(", "dl", ",", "(", "list", ",", "dict", ")", ")", ",", "(", "\"{} should be a list or a dict\"", ")", "\n", "assert", "len", "(", "ks", ")", ">", "0", ",", "(", "'lenght of keys should larger than 0'", ")", "\n", "if", "isinstance", "(", "dl", ",", "list", ")", ":", "\n", "        ", "k", "=", "str2num", "(", "ks", "[", "0", "]", ")", "\n", "if", "len", "(", "ks", ")", "==", "1", ":", "\n", "            ", "assert", "k", "<", "len", "(", "dl", ")", ",", "(", "'index({}) out of range({})'", ".", "format", "(", "k", ",", "dl", ")", ")", "\n", "dl", "[", "k", "]", "=", "str2num", "(", "v", ")", "\n", "", "else", ":", "\n", "            ", "override", "(", "dl", "[", "k", "]", ",", "ks", "[", "1", ":", "]", ",", "v", ")", "\n", "", "", "else", ":", "\n", "        ", "if", "len", "(", "ks", ")", "==", "1", ":", "\n", "            ", "assert", "ks", "[", "0", "]", "in", "dl", ",", "(", "'{} is not exist in {}'", ".", "format", "(", "ks", "[", "0", "]", ",", "dl", ")", ")", "\n", "dl", "[", "ks", "[", "0", "]", "]", "=", "str2num", "(", "v", ")", "\n", "", "else", ":", "\n", "            ", "override", "(", "dl", "[", "ks", "[", "0", "]", "]", ",", "ks", "[", "1", ":", "]", ",", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.config.override_config": [[89, 116], ["isinstance", "opt.split", "key.split", "config.override", "len"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.config.override"], ["", "", "", "def", "override_config", "(", "config", ",", "options", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Recursively override the config\n    Args:\n        config(dict): dict to be replaced\n        options(list): list of pairs(key0.key1.idx.key2=value)\n            such as: [\n                'topk=2',\n                'VALID.transforms.1.ResizeImage.resize_short=300'\n            ]\n    Returns:\n        config(dict): replaced config\n    \"\"\"", "\n", "if", "options", "is", "not", "None", ":", "\n", "        ", "for", "opt", "in", "options", ":", "\n", "            ", "assert", "isinstance", "(", "opt", ",", "\n", "str", ")", ",", "(", "\"option({}) should be a str\"", ".", "format", "(", "opt", ")", ")", "\n", "assert", "\"=\"", "in", "opt", ",", "(", "\n", "\"option({}) should contain a =\"", "\n", "\"to distinguish between key and value\"", ".", "format", "(", "opt", ")", ")", "\n", "pair", "=", "opt", ".", "split", "(", "'='", ")", "\n", "assert", "len", "(", "pair", ")", "==", "2", ",", "(", "\"there can be only a = in the option\"", ")", "\n", "key", ",", "value", "=", "pair", "\n", "keys", "=", "key", ".", "split", "(", "'.'", ")", "\n", "override", "(", "config", ",", "keys", ",", "value", ")", "\n", "\n", "", "", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.config.get_config": [[118, 127], ["os.path.exists", "config.parse_config", "config.override_config"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.config.parse_config", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.config.override_config"], ["", "def", "get_config", "(", "fname", ",", "overrides", "=", "None", ",", "show", "=", "True", ")", ":", "\n", "    ", "\"\"\"\n    Read config from file\n    \"\"\"", "\n", "assert", "os", ".", "path", ".", "exists", "(", "fname", ")", ",", "(", "'config file({}) is not exist'", ".", "format", "(", "fname", ")", ")", "\n", "config", "=", "parse_config", "(", "fname", ")", "\n", "override_config", "(", "config", ",", "overrides", ")", "\n", "\n", "return", "config", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.image_pool.ImagePool.__init__": [[28, 35], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "pool_size", ",", "prob", "=", "0.5", ")", ":", "\n", "        ", "self", ".", "pool_size", "=", "pool_size", "\n", "self", ".", "prob", "=", "prob", "\n", "\n", "if", "self", ".", "pool_size", ">", "0", ":", "\n", "            ", "self", ".", "num_imgs", "=", "0", "\n", "self", ".", "images", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.image_pool.ImagePool.query": [[36, 69], ["paddle.concat", "paddle.unsqueeze", "image_pool.ImagePool.images.append", "paddle.concat.append", "random.uniform", "random.randint", "image_pool.ImagePool.images[].clone", "paddle.concat.append", "paddle.concat.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "", "def", "query", "(", "self", ",", "images", ")", ":", "\n", "        ", "\"\"\"Return an image from the pool.\n\n        Args:\n            images (paddle.Tensor): the latest generated images from the generator\n\n        Returns images from the buffer.\n        \"\"\"", "\n", "# if the buffer size is 0, do nothing", "\n", "if", "self", ".", "pool_size", "==", "0", ":", "\n", "            ", "return", "images", "\n", "", "return_images", "=", "[", "]", "\n", "for", "image", "in", "images", ":", "\n", "            ", "image", "=", "paddle", ".", "unsqueeze", "(", "image", ",", "0", ")", "\n", "# if the buffer is not full; keep inserting current images to the buffer", "\n", "if", "self", ".", "num_imgs", "<", "self", ".", "pool_size", ":", "\n", "                ", "self", ".", "num_imgs", "=", "self", ".", "num_imgs", "+", "1", "\n", "self", ".", "images", ".", "append", "(", "image", ")", "\n", "return_images", ".", "append", "(", "image", ")", "\n", "", "else", ":", "\n", "                ", "p", "=", "random", ".", "uniform", "(", "0", ",", "1", ")", "\n", "# by 50% chance, the buffer will return a previously stored image, and insert the current image into the buffer", "\n", "if", "p", ">", "self", ".", "prob", ":", "\n", "                    ", "random_id", "=", "random", ".", "randint", "(", "0", ",", "self", ".", "pool_size", "-", "1", ")", "\n", "tmp", "=", "self", ".", "images", "[", "random_id", "]", ".", "clone", "(", ")", "\n", "self", ".", "images", "[", "random_id", "]", "=", "image", "\n", "return_images", ".", "append", "(", "tmp", ")", "\n", "", "else", ":", "\n", "# by another 50% chance, the buffer will return the current image", "\n", "                    ", "return_images", ".", "append", "(", "image", ")", "\n", "# collect all the images and return", "\n", "", "", "", "return_images", "=", "paddle", ".", "concat", "(", "return_images", ",", "0", ")", "\n", "return", "return_images", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.animate.normalize_kp": [[23, 51], ["scipy.spatial.ConvexHull", "scipy.spatial.ConvexHull", "numpy.sqrt", "numpy.sqrt", "kp_driving.items", "paddle.matmul", "paddle.matmul", "[].numpy", "[].numpy", "paddle.inverse"], "function", ["None"], ["def", "normalize_kp", "(", "kp_source", ",", "\n", "kp_driving", ",", "\n", "kp_driving_initial", ",", "\n", "adapt_movement_scale", "=", "False", ",", "\n", "use_relative_movement", "=", "False", ",", "\n", "use_relative_jacobian", "=", "False", ")", ":", "\n", "    ", "if", "adapt_movement_scale", ":", "\n", "        ", "source_area", "=", "ConvexHull", "(", "kp_source", "[", "'value'", "]", "[", "0", "]", ".", "numpy", "(", ")", ")", ".", "volume", "\n", "driving_area", "=", "ConvexHull", "(", "kp_driving_initial", "[", "'value'", "]", "[", "0", "]", ".", "numpy", "(", ")", ")", ".", "volume", "\n", "adapt_movement_scale", "=", "np", ".", "sqrt", "(", "source_area", ")", "/", "np", ".", "sqrt", "(", "driving_area", ")", "\n", "", "else", ":", "\n", "        ", "adapt_movement_scale", "=", "1", "\n", "\n", "", "kp_new", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "kp_driving", ".", "items", "(", ")", "}", "\n", "\n", "if", "use_relative_movement", ":", "\n", "        ", "kp_value_diff", "=", "(", "kp_driving", "[", "'value'", "]", "-", "kp_driving_initial", "[", "'value'", "]", ")", "\n", "kp_value_diff", "*=", "adapt_movement_scale", "\n", "kp_new", "[", "'value'", "]", "=", "kp_value_diff", "+", "kp_source", "[", "'value'", "]", "\n", "\n", "if", "use_relative_jacobian", ":", "\n", "            ", "jacobian_diff", "=", "paddle", ".", "matmul", "(", "\n", "kp_driving", "[", "'jacobian'", "]", ",", "\n", "paddle", ".", "inverse", "(", "kp_driving_initial", "[", "'jacobian'", "]", ")", ")", "\n", "kp_new", "[", "'jacobian'", "]", "=", "paddle", ".", "matmul", "(", "jacobian_diff", ",", "\n", "kp_source", "[", "'jacobian'", "]", ")", "\n", "\n", "", "", "return", "kp_new", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.photopen.COCODateset.__init__": [[42, 48], ["paddle.io.Dataset.__init__", "next", "numpy.sort", "os.walk"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["parser", ".", "add_argument", "(", "\"--config-file\"", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ",", "\n", "help", "=", "\"path to yaml file\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--cpu\"", ",", "\n", "dest", "=", "\"cpu\"", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.photopen.COCODateset.__getitem__": [[49, 70], ["Image.open", "Image.open", "data_transform.convert", "random.randint", "random.randint", "photopen.data_transform", "photopen.data_transform", "photopen.COCODateset.inst_list[].replace", "int", "int"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.lapstyle_dataset.data_transform", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.lapstyle_dataset.data_transform"], ["action", "=", "\"store_true\"", ",", "\n", "help", "=", "\"cpu mode.\"", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "if", "args", ".", "cpu", ":", "\n", "        ", "paddle", ".", "set_device", "(", "'cpu'", ")", "\n", "\n", "", "cfg", "=", "get_config", "(", "args", ".", "config_file", ")", "\n", "predictor", "=", "PhotoPenPredictor", "(", "output_path", "=", "args", ".", "output_path", ",", "\n", "weight_path", "=", "args", ".", "weight_path", ",", "\n", "gen_cfg", "=", "cfg", ".", "predict", ")", "\n", "predictor", ".", "run", "(", "semantic_label_path", "=", "args", ".", "semantic_label_path", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.photopen.COCODateset.__len__": [[71, 73], ["len"], "methods", ["None"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.photopen.data_transform": [[24, 39], ["img.resize.crop", "numpy.array", "numpy.transpose().astype", "img.resize", "img.resize", "ImageOps.mirror", "numpy.expand_dims", "len", "numpy.transpose"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.utils.crop", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize"], ["if", "__name__", "==", "\"__main__\"", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--semantic_label_path\"", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ",", "\n", "help", "=", "\"path to input semantic label\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--output_path\"", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ",", "\n", "help", "=", "\"path to output image dir\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--weight_path\"", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.photopen.data_onehot_pro": [[75, 95], ["paddle.nn.functional.one_hot().transpose", "paddle.nn.functional.one_hot().transpose", "numpy.zeros", "instance.numpy", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.concat", "paddle.concat", "paddle.nn.functional.one_hot", "paddle.nn.functional.one_hot", "paddle.to_tensor", "paddle.to_tensor", "instance.astype().reshape", "instance.astype"], "function", ["None"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.photopen.build_norm_layer": [[97, 129], ["functools.partial", "functools.partial", "functools.partial", "functools.partial", "NotImplementedError", "Identity"], "function", ["None"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.photopen.simam": [[130, 136], ["paddle.functional.sigmoid", "x.mean", "x_minus_mu_square.sum"], "function", ["None"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.profiler.ProfilerOptions.__init__": [[46, 58], ["isinstance", "profiler.ProfilerOptions._parse_from_string"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.profiler.ProfilerOptions._parse_from_string"], ["def", "__init__", "(", "self", ",", "options_str", ")", ":", "\n", "        ", "assert", "isinstance", "(", "options_str", ",", "str", ")", "\n", "\n", "self", ".", "_options", "=", "{", "\n", "'batch_range'", ":", "[", "10", ",", "20", "]", ",", "\n", "'state'", ":", "'All'", ",", "\n", "'sorted_key'", ":", "'total'", ",", "\n", "'tracer_option'", ":", "'Default'", ",", "\n", "'profile_path'", ":", "'/tmp/profile'", ",", "\n", "'exit_on_finished'", ":", "True", "\n", "}", "\n", "self", ".", "_parse_from_string", "(", "options_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.profiler.ProfilerOptions._parse_from_string": [[59, 74], ["options_str.replace().split", "kv.split", "options_str.replace", "value.replace().replace().split", "list", "map", "value.replace().replace", "len", "value.lower", "value.replace"], "methods", ["None"], ["", "def", "_parse_from_string", "(", "self", ",", "options_str", ")", ":", "\n", "        ", "for", "kv", "in", "options_str", ".", "replace", "(", "' '", ",", "''", ")", ".", "split", "(", "';'", ")", ":", "\n", "            ", "key", ",", "value", "=", "kv", ".", "split", "(", "'='", ")", "\n", "if", "key", "==", "'batch_range'", ":", "\n", "                ", "value_list", "=", "value", ".", "replace", "(", "'['", ",", "''", ")", ".", "replace", "(", "']'", ",", "''", ")", ".", "split", "(", "','", ")", "\n", "value_list", "=", "list", "(", "map", "(", "int", ",", "value_list", ")", ")", "\n", "if", "len", "(", "value_list", ")", ">=", "2", "and", "value_list", "[", "0", "]", ">=", "0", "and", "value_list", "[", "\n", "1", "]", ">", "value_list", "[", "0", "]", ":", "\n", "                    ", "self", ".", "_options", "[", "key", "]", "=", "value_list", "\n", "", "", "elif", "key", "==", "'exit_on_finished'", ":", "\n", "                ", "self", ".", "_options", "[", "key", "]", "=", "value", ".", "lower", "(", ")", "in", "(", "\"yes\"", ",", "\"true\"", ",", "\"t\"", ",", "\"1\"", ")", "\n", "", "elif", "key", "in", "[", "\n", "'state'", ",", "'sorted_key'", ",", "'tracer_option'", ",", "'profile_path'", "\n", "]", ":", "\n", "                ", "self", ".", "_options", "[", "key", "]", "=", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.profiler.ProfilerOptions.__getitem__": [[75, 80], ["profiler.ProfilerOptions._options.get", "ValueError"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get"], ["", "", "", "def", "__getitem__", "(", "self", ",", "name", ")", ":", "\n", "        ", "if", "self", ".", "_options", ".", "get", "(", "name", ",", "None", ")", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"ProfilerOptions does not have an option named %s.\"", "%", "name", ")", "\n", "", "return", "self", ".", "_options", "[", "name", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.profiler.add_profiler_step": [[82, 111], ["profiler.ProfilerOptions", "paddle.utils.profiler.start_profiler", "paddle.utils.profiler.stop_profiler", "sys.exit"], "function", ["None"], ["", "", "def", "add_profiler_step", "(", "options_str", "=", "None", ")", ":", "\n", "    ", "'''\n    Enable the operator-level timing using PaddlePaddle's profiler.\n    The profiler uses a independent variable to count the profiler steps.\n    One call of this function is treated as a profiler step.\n    \n    Args:\n      options_str - a string to initialize the ProfilerOptions.\n                         Default is None, and the profiler is disabled.\n    '''", "\n", "if", "options_str", "is", "None", ":", "\n", "        ", "return", "\n", "\n", "", "global", "_profiler_step_id", "\n", "global", "_profiler_options", "\n", "\n", "if", "_profiler_options", "is", "None", ":", "\n", "        ", "_profiler_options", "=", "ProfilerOptions", "(", "options_str", ")", "\n", "\n", "", "if", "_profiler_step_id", "==", "_profiler_options", "[", "'batch_range'", "]", "[", "0", "]", ":", "\n", "        ", "paddle", ".", "utils", ".", "profiler", ".", "start_profiler", "(", "\n", "_profiler_options", "[", "'state'", "]", ",", "_profiler_options", "[", "'tracer_option'", "]", ")", "\n", "", "elif", "_profiler_step_id", "==", "_profiler_options", "[", "'batch_range'", "]", "[", "1", "]", ":", "\n", "        ", "paddle", ".", "utils", ".", "profiler", ".", "stop_profiler", "(", "_profiler_options", "[", "'sorted_key'", "]", ",", "\n", "_profiler_options", "[", "'profile_path'", "]", ")", "\n", "if", "_profiler_options", "[", "'exit_on_finished'", "]", ":", "\n", "            ", "sys", ".", "exit", "(", "0", ")", "\n", "\n", "", "", "_profiler_step_id", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.timer.TimeAverager.__init__": [[19, 21], ["timer.TimeAverager.reset"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid.FID.reset"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.timer.TimeAverager.reset": [[22, 26], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "_cnt", "=", "0", "\n", "self", ".", "_total_time", "=", "0", "\n", "self", ".", "_total_samples", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.timer.TimeAverager.record": [[27, 32], ["None"], "methods", ["None"], ["", "def", "record", "(", "self", ",", "usetime", ",", "num_samples", "=", "None", ")", ":", "\n", "        ", "self", ".", "_cnt", "+=", "1", "\n", "self", ".", "_total_time", "+=", "usetime", "\n", "if", "num_samples", ":", "\n", "            ", "self", ".", "_total_samples", "+=", "num_samples", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.timer.TimeAverager.get_average": [[33, 37], ["float"], "methods", ["None"], ["", "", "def", "get_average", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_cnt", "==", "0", ":", "\n", "            ", "return", "0", "\n", "", "return", "self", ".", "_total_time", "/", "float", "(", "self", ".", "_cnt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.timer.TimeAverager.get_ips_average": [[38, 42], ["float"], "methods", ["None"], ["", "def", "get_ips_average", "(", "self", ")", ":", "\n", "        ", "if", "not", "self", ".", "_total_samples", "or", "self", ".", "_cnt", "==", "0", ":", "\n", "            ", "return", "0", "\n", "", "return", "float", "(", "self", ".", "_total_samples", ")", "/", "self", ".", "_total_time", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.setup.setup": [[22, 53], ["time.strftime", "os.path.join", "logger.setup_logger", "logger.setup_logger.info", "paddle.is_compiled_with_cuda", "time.localtime", "paddle.set_device", "paddle.set_device", "paddle.seed", "random.seed", "numpy.random.seed", "paddle.framework.random._manual_program_seed", "os.path.splitext", "os.path.basename", "str"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.logger.setup_logger"], ["    ", "requirements", "=", "f", ".", "readlines", "(", ")", "\n", "\n", "\n", "", "def", "readme", "(", ")", ":", "\n", "    ", "with", "open", "(", "'README.md'", ",", "encoding", "=", "\"utf-8-sig\"", ")", "as", "f", ":", "\n", "        ", "README", "=", "f", ".", "read", "(", ")", "\n", "", "return", "README", "\n", "\n", "\n", "", "setup", "(", "\n", "name", "=", "'ppgan'", ",", "\n", "packages", "=", "find_packages", "(", ")", ",", "\n", "include_package_data", "=", "True", ",", "\n", "entry_points", "=", "{", "\"console_scripts\"", ":", "[", "\"paddlegan= paddlegan.paddlegan:main\"", "]", "}", ",", "\n", "author", "=", "'PaddlePaddle Author'", ",", "\n", "version", "=", "__version__", ",", "\n", "install_requires", "=", "requirements", ",", "\n", "license", "=", "'Apache License 2.0'", ",", "\n", "description", "=", "'Awesome GAN toolkits based on PaddlePaddle'", ",", "\n", "long_description", "=", "readme", "(", ")", ",", "\n", "long_description_content_type", "=", "'text/markdown'", ",", "\n", "url", "=", "'https://github.com/PaddlePaddle/PaddleGAN'", ",", "\n", "download_url", "=", "'https://github.com/PaddlePaddle/PaddleGAN.git'", ",", "\n", "keywords", "=", "[", "'gan paddlegan'", "]", ",", "\n", "classifiers", "=", "[", "\n", "'Intended Audience :: Developers'", ",", "'Operating System :: OS Independent'", ",", "\n", "'Natural Language :: Chinese (Simplified)'", ",", "\n", "'Programming Language :: Python :: 3'", ",", "\n", "'Programming Language :: Python :: 3.5'", ",", "\n", "'Programming Language :: Python :: 3.6'", ",", "\n", "'Programming Language :: Python :: 3.7'", ",", "'Topic :: Utilities'", "\n", "]", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.audio.load_wav": [[14, 17], ["paddle.utils.try_import", "paddle.utils.try_import.core.load"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["def", "load_wav", "(", "path", ",", "sr", ")", ":", "\n", "    ", "librosa", "=", "try_import", "(", "'librosa'", ")", "\n", "return", "librosa", ".", "core", ".", "load", "(", "path", ",", "sr", "=", "sr", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.audio.save_wav": [[19, 23], ["scipy.io.wavfile.write", "max", "wav.astype", "numpy.max", "numpy.abs"], "function", ["None"], ["", "def", "save_wav", "(", "wav", ",", "path", ",", "sr", ")", ":", "\n", "    ", "wav", "*=", "32767", "/", "max", "(", "0.01", ",", "np", ".", "max", "(", "np", ".", "abs", "(", "wav", ")", ")", ")", "\n", "#proposed by @dsmiller", "\n", "wavfile", ".", "write", "(", "path", ",", "sr", ",", "wav", ".", "astype", "(", "np", ".", "int16", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.audio.save_wavenet_wav": [[25, 28], ["paddle.utils.try_import", "paddle.utils.try_import.output.write_wav"], "function", ["None"], ["", "def", "save_wavenet_wav", "(", "wav", ",", "path", ",", "sr", ")", ":", "\n", "    ", "librosa", "=", "try_import", "(", "'librosa'", ")", "\n", "librosa", ".", "output", ".", "write_wav", "(", "path", ",", "wav", ",", "sr", "=", "sr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.audio.preemphasis": [[30, 34], ["scipy.signal.lfilter"], "function", ["None"], ["", "def", "preemphasis", "(", "wav", ",", "k", ",", "preemphasize", "=", "True", ")", ":", "\n", "    ", "if", "preemphasize", ":", "\n", "        ", "return", "signal", ".", "lfilter", "(", "[", "1", ",", "-", "k", "]", ",", "[", "1", "]", ",", "wav", ")", "\n", "", "return", "wav", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.audio.inv_preemphasis": [[36, 40], ["scipy.signal.lfilter"], "function", ["None"], ["", "def", "inv_preemphasis", "(", "wav", ",", "k", ",", "inv_preemphasize", "=", "True", ")", ":", "\n", "    ", "if", "inv_preemphasize", ":", "\n", "        ", "return", "signal", ".", "lfilter", "(", "[", "1", "]", ",", "[", "1", ",", "-", "k", "]", ",", "wav", ")", "\n", "", "return", "wav", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.audio.get_hop_size": [[42, 49], ["int"], "function", ["None"], ["", "def", "get_hop_size", "(", ")", ":", "\n", "    ", "hop_size", "=", "audio_config", ".", "hop_size", "\n", "if", "hop_size", "is", "None", ":", "\n", "        ", "assert", "audio_config", ".", "frame_shift_ms", "is", "not", "None", "\n", "hop_size", "=", "int", "(", "audio_config", ".", "frame_shift_ms", "/", "1000", "*", "\n", "audio_config", ".", "sample_rate", ")", "\n", "", "return", "hop_size", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.audio.linearspectrogram": [[51, 59], ["audio._stft", "audio.preemphasis", "audio._amp_to_db", "audio._normalize", "numpy.abs"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.audio._stft", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.audio.preemphasis", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.audio._amp_to_db", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.audio._normalize"], ["", "def", "linearspectrogram", "(", "wav", ")", ":", "\n", "    ", "D", "=", "_stft", "(", "\n", "preemphasis", "(", "wav", ",", "audio_config", ".", "preemphasis", ",", "audio_config", ".", "preemphasize", ")", ")", "\n", "S", "=", "_amp_to_db", "(", "np", ".", "abs", "(", "D", ")", ")", "-", "audio_config", ".", "ref_level_db", "\n", "\n", "if", "audio_config", ".", "signal_normalization", ":", "\n", "        ", "return", "_normalize", "(", "S", ")", "\n", "", "return", "S", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.audio.melspectrogram": [[61, 69], ["audio._stft", "audio.preemphasis", "audio._amp_to_db", "audio._normalize", "audio._linear_to_mel", "numpy.abs"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.audio._stft", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.audio.preemphasis", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.audio._amp_to_db", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.audio._normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.audio._linear_to_mel"], ["", "def", "melspectrogram", "(", "wav", ")", ":", "\n", "    ", "D", "=", "_stft", "(", "\n", "preemphasis", "(", "wav", ",", "audio_config", ".", "preemphasis", ",", "audio_config", ".", "preemphasize", ")", ")", "\n", "S", "=", "_amp_to_db", "(", "_linear_to_mel", "(", "np", ".", "abs", "(", "D", ")", ")", ")", "-", "audio_config", ".", "ref_level_db", "\n", "\n", "if", "audio_config", ".", "signal_normalization", ":", "\n", "        ", "return", "_normalize", "(", "S", ")", "\n", "", "return", "S", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.audio._lws_processor": [[71, 77], ["lws.lws", "audio.get_hop_size"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.audio.get_hop_size"], ["", "def", "_lws_processor", "(", ")", ":", "\n", "    ", "import", "lws", "\n", "return", "lws", ".", "lws", "(", "audio_config", ".", "n_fft", ",", "\n", "get_hop_size", "(", ")", ",", "\n", "fftsize", "=", "audio_config", ".", "win_size", ",", "\n", "mode", "=", "\"speech\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.audio._stft": [[79, 88], ["paddle.utils.try_import", "paddle.utils.try_import.stft", "_lws_processor().stft", "audio.get_hop_size", "audio._lws_processor"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.audio.get_hop_size", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.audio._lws_processor"], ["", "def", "_stft", "(", "y", ")", ":", "\n", "    ", "if", "audio_config", ".", "use_lws", ":", "\n", "        ", "return", "_lws_processor", "(", "audio_config", ")", ".", "stft", "(", "y", ")", ".", "T", "\n", "", "else", ":", "\n", "        ", "librosa", "=", "try_import", "(", "'librosa'", ")", "\n", "return", "librosa", ".", "stft", "(", "y", "=", "y", ",", "\n", "n_fft", "=", "audio_config", ".", "n_fft", ",", "\n", "hop_length", "=", "get_hop_size", "(", ")", ",", "\n", "win_length", "=", "audio_config", ".", "win_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.audio.num_frames": [[92, 101], ["None"], "function", ["None"], ["", "", "def", "num_frames", "(", "length", ",", "fsize", ",", "fshift", ")", ":", "\n", "    ", "\"\"\"Compute number of time frames of spectrogram\n    \"\"\"", "\n", "pad", "=", "(", "fsize", "-", "fshift", ")", "\n", "if", "length", "%", "fshift", "==", "0", ":", "\n", "        ", "M", "=", "(", "length", "+", "pad", "*", "2", "-", "fsize", ")", "//", "fshift", "+", "1", "\n", "", "else", ":", "\n", "        ", "M", "=", "(", "length", "+", "pad", "*", "2", "-", "fsize", ")", "//", "fshift", "+", "2", "\n", "", "return", "M", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.audio.pad_lr": [[103, 111], ["audio.num_frames", "len", "len"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.audio.num_frames"], ["", "def", "pad_lr", "(", "x", ",", "fsize", ",", "fshift", ")", ":", "\n", "    ", "\"\"\"Compute left and right padding\n    \"\"\"", "\n", "M", "=", "num_frames", "(", "len", "(", "x", ")", ",", "fsize", ",", "fshift", ")", "\n", "pad", "=", "(", "fsize", "-", "fshift", ")", "\n", "T", "=", "len", "(", "x", ")", "+", "2", "*", "pad", "\n", "r", "=", "(", "M", "-", "1", ")", "*", "fshift", "+", "fsize", "-", "T", "\n", "return", "pad", ",", "pad", "+", "r", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.audio.librosa_pad_lr": [[115, 117], ["None"], "function", ["None"], ["", "def", "librosa_pad_lr", "(", "x", ",", "fsize", ",", "fshift", ")", ":", "\n", "    ", "return", "0", ",", "(", "x", ".", "shape", "[", "0", "]", "//", "fshift", "+", "1", ")", "*", "fshift", "-", "x", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.audio._linear_to_mel": [[123, 128], ["numpy.dot", "audio._build_mel_basis"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.audio._build_mel_basis"], ["def", "_linear_to_mel", "(", "spectogram", ")", ":", "\n", "    ", "global", "_mel_basis", "\n", "if", "_mel_basis", "is", "None", ":", "\n", "        ", "_mel_basis", "=", "_build_mel_basis", "(", ")", "\n", "", "return", "np", ".", "dot", "(", "_mel_basis", ",", "spectogram", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.audio._build_mel_basis": [[130, 138], ["paddle.utils.try_import", "paddle.utils.try_import.filters.mel"], "function", ["None"], ["", "def", "_build_mel_basis", "(", ")", ":", "\n", "    ", "assert", "audio_config", ".", "fmax", "<=", "audio_config", ".", "sample_rate", "//", "2", "\n", "librosa", "=", "try_import", "(", "'librosa'", ")", "\n", "return", "librosa", ".", "filters", ".", "mel", "(", "audio_config", ".", "sample_rate", ",", "\n", "audio_config", ".", "n_fft", ",", "\n", "n_mels", "=", "audio_config", ".", "num_mels", ",", "\n", "fmin", "=", "audio_config", ".", "fmin", ",", "\n", "fmax", "=", "audio_config", ".", "fmax", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.audio._amp_to_db": [[140, 143], ["numpy.exp", "numpy.log10", "numpy.log", "numpy.maximum"], "function", ["None"], ["", "def", "_amp_to_db", "(", "x", ")", ":", "\n", "    ", "min_level", "=", "np", ".", "exp", "(", "audio_config", ".", "min_level_db", "/", "20", "*", "np", ".", "log", "(", "10", ")", ")", "\n", "return", "20", "*", "np", ".", "log10", "(", "np", ".", "maximum", "(", "min_level", ",", "x", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.audio._db_to_amp": [[145, 147], ["numpy.power"], "function", ["None"], ["", "def", "_db_to_amp", "(", "x", ")", ":", "\n", "    ", "return", "np", ".", "power", "(", "10.0", ",", "(", "x", ")", "*", "0.05", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.audio._normalize": [[149, 171], ["numpy.clip", "numpy.clip", "S.max", "S.min"], "function", ["None"], ["", "def", "_normalize", "(", "S", ")", ":", "\n", "    ", "if", "audio_config", ".", "allow_clipping_in_normalization", ":", "\n", "        ", "if", "audio_config", ".", "symmetric_mels", ":", "\n", "            ", "return", "np", ".", "clip", "(", "\n", "(", "2", "*", "audio_config", ".", "max_abs_value", ")", "*", "\n", "(", "(", "S", "-", "audio_config", ".", "min_level_db", ")", "/", "\n", "(", "-", "audio_config", ".", "min_level_db", ")", ")", "-", "audio_config", ".", "max_abs_value", ",", "\n", "-", "audio_config", ".", "max_abs_value", ",", "audio_config", ".", "max_abs_value", ")", "\n", "", "else", ":", "\n", "            ", "return", "np", ".", "clip", "(", "\n", "audio_config", ".", "max_abs_value", "*", "(", "(", "S", "-", "audio_config", ".", "min_level_db", ")", "/", "\n", "(", "-", "audio_config", ".", "min_level_db", ")", ")", ",", "0", ",", "\n", "audio_config", ".", "max_abs_value", ")", "\n", "\n", "", "", "assert", "S", ".", "max", "(", ")", "<=", "0", "and", "S", ".", "min", "(", ")", "-", "audio_config", ".", "min_level_db", ">=", "0", "\n", "if", "audio_config", ".", "symmetric_mels", ":", "\n", "        ", "return", "(", "2", "*", "audio_config", ".", "max_abs_value", ")", "*", "(", "\n", "(", "S", "-", "audio_config", ".", "min_level_db", ")", "/", "\n", "(", "-", "audio_config", ".", "min_level_db", ")", ")", "-", "audio_config", ".", "max_abs_value", "\n", "", "else", ":", "\n", "        ", "return", "audio_config", ".", "max_abs_value", "*", "(", "(", "S", "-", "audio_config", ".", "min_level_db", ")", "/", "\n", "(", "-", "audio_config", ".", "min_level_db", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.audio._denormalize": [[173, 192], ["numpy.clip", "numpy.clip"], "function", ["None"], ["", "", "def", "_denormalize", "(", "D", ")", ":", "\n", "    ", "if", "audio_config", ".", "allow_clipping_in_normalization", ":", "\n", "        ", "if", "audio_config", ".", "symmetric_mels", ":", "\n", "            ", "return", "(", "(", "(", "np", ".", "clip", "(", "D", ",", "-", "audio_config", ".", "max_abs_value", ",", "\n", "audio_config", ".", "max_abs_value", ")", "+", "\n", "audio_config", ".", "max_abs_value", ")", "*", "-", "audio_config", ".", "min_level_db", "/", "\n", "(", "2", "*", "audio_config", ".", "max_abs_value", ")", ")", "+", "\n", "audio_config", ".", "min_level_db", ")", "\n", "", "else", ":", "\n", "            ", "return", "(", "(", "np", ".", "clip", "(", "D", ",", "0", ",", "audio_config", ".", "max_abs_value", ")", "*", "\n", "-", "audio_config", ".", "min_level_db", "/", "audio_config", ".", "max_abs_value", ")", "+", "\n", "audio_config", ".", "min_level_db", ")", "\n", "\n", "", "", "if", "audio_config", ".", "symmetric_mels", ":", "\n", "        ", "return", "(", "(", "(", "D", "+", "audio_config", ".", "max_abs_value", ")", "*", "-", "audio_config", ".", "min_level_db", "/", "\n", "(", "2", "*", "audio_config", ".", "max_abs_value", ")", ")", "+", "audio_config", ".", "min_level_db", ")", "\n", "", "else", ":", "\n", "        ", "return", "(", "(", "D", "*", "-", "audio_config", ".", "min_level_db", "/", "audio_config", ".", "max_abs_value", ")", "+", "\n", "audio_config", ".", "min_level_db", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.logger.setup_logger": [[24, 73], ["logging.getLogger", "logging.getLogger.setLevel", "logging.Formatter", "logger_initialized.append", "paddle.distributed.ParallelEnv", "logging.StreamHandler", "logging.StreamHandler.setLevel", "logging.StreamHandler.setFormatter", "logging.getLogger.addHandler", "os.makedirs", "logging.FileHandler", "logging.FileHandler.setLevel", "logging.FileHandler.setFormatter", "logging.getLogger.addHandler", "output.endswith", "output.endswith", "os.path.join", "os.path.dirname"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs"], ["def", "setup_logger", "(", "output", "=", "None", ",", "name", "=", "\"ppgan\"", ")", ":", "\n", "    ", "\"\"\"\n    Initialize the ppgan logger and set its verbosity level to \"INFO\".\n\n    Args:\n        output (str): a file name or a directory to save log. If None, will not save log file.\n            If ends with \".txt\" or \".log\", assumed to be a file name.\n            Otherwise, logs will be saved to `output/log.txt`.\n        name (str): the root module name of this logger\n\n    Returns:\n        logging.Logger: a logger\n    \"\"\"", "\n", "logger", "=", "logging", ".", "getLogger", "(", "name", ")", "\n", "if", "name", "in", "logger_initialized", ":", "\n", "        ", "return", "logger", "\n", "", "logger", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "logger", ".", "propagate", "=", "False", "\n", "\n", "plain_formatter", "=", "logging", ".", "Formatter", "(", "\n", "\"[%(asctime)s] %(name)s %(levelname)s: %(message)s\"", ",", "\n", "datefmt", "=", "\"%m/%d %H:%M:%S\"", ")", "\n", "# stdout logging: master only", "\n", "local_rank", "=", "ParallelEnv", "(", ")", ".", "local_rank", "\n", "if", "local_rank", "==", "0", ":", "\n", "        ", "ch", "=", "logging", ".", "StreamHandler", "(", "stream", "=", "sys", ".", "stdout", ")", "\n", "ch", ".", "setLevel", "(", "logging", ".", "DEBUG", ")", "\n", "formatter", "=", "plain_formatter", "\n", "ch", ".", "setFormatter", "(", "formatter", ")", "\n", "logger", ".", "addHandler", "(", "ch", ")", "\n", "\n", "# file logging: all workers", "\n", "", "if", "output", "is", "not", "None", ":", "\n", "        ", "if", "output", ".", "endswith", "(", "\".txt\"", ")", "or", "output", ".", "endswith", "(", "\".log\"", ")", ":", "\n", "            ", "filename", "=", "output", "\n", "", "else", ":", "\n", "            ", "filename", "=", "os", ".", "path", ".", "join", "(", "output", ",", "\"log.txt\"", ")", "\n", "", "if", "local_rank", ">", "0", ":", "\n", "            ", "filename", "=", "filename", "+", "\".rank{}\"", ".", "format", "(", "local_rank", ")", "\n", "\n", "# make dir if path not exist", "\n", "", "os", ".", "makedirs", "(", "os", ".", "path", ".", "dirname", "(", "filename", ")", ",", "exist_ok", "=", "True", ")", "\n", "\n", "fh", "=", "logging", ".", "FileHandler", "(", "filename", ",", "mode", "=", "'a'", ")", "\n", "fh", ".", "setLevel", "(", "logging", ".", "DEBUG", ")", "\n", "fh", ".", "setFormatter", "(", "plain_formatter", ")", "\n", "logger", ".", "addHandler", "(", "fh", ")", "\n", "", "logger_initialized", ".", "append", "(", "name", ")", "\n", "return", "logger", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.logger.get_logger": [[75, 81], ["logging.getLogger", "logger.setup_logger"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.logger.setup_logger"], ["", "def", "get_logger", "(", "name", "=", "'ppgan'", ")", ":", "\n", "    ", "logger", "=", "logging", ".", "getLogger", "(", "name", ")", "\n", "if", "name", "in", "logger_initialized", ":", "\n", "        ", "return", "logger", "\n", "\n", "", "return", "setup_logger", "(", "name", "=", "name", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.video.video2frames": [[19, 46], ["os.path.join", "os.path.join", "sys.stdout.flush", "kargs.items", "os.path.basename().split", "os.path.exists", "os.makedirs", "video.video2frames._dict2str"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs"], ["def", "video2frames", "(", "video_path", ",", "outpath", ",", "**", "kargs", ")", ":", "\n", "    ", "def", "_dict2str", "(", "kargs", ")", ":", "\n", "        ", "cmd_str", "=", "''", "\n", "for", "k", ",", "v", "in", "kargs", ".", "items", "(", ")", ":", "\n", "            ", "cmd_str", "+=", "(", "' '", "+", "str", "(", "k", ")", "+", "' '", "+", "str", "(", "v", ")", ")", "\n", "", "return", "cmd_str", "\n", "\n", "", "ffmpeg", "=", "[", "'ffmpeg '", ",", "' -y -loglevel '", ",", "' error '", "]", "\n", "vid_name", "=", "os", ".", "path", ".", "basename", "(", "video_path", ")", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "out_full_path", "=", "os", ".", "path", ".", "join", "(", "outpath", ",", "vid_name", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "out_full_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "out_full_path", ")", "\n", "\n", "# video file name", "\n", "", "outformat", "=", "os", ".", "path", ".", "join", "(", "out_full_path", ",", "'%08d.png'", ")", "\n", "\n", "cmd", "=", "ffmpeg", "\n", "cmd", "=", "ffmpeg", "+", "[", "' -i '", ",", "video_path", ",", "' -start_number '", ",", "' 0 '", ",", "outformat", "]", "\n", "\n", "cmd", "=", "''", ".", "join", "(", "cmd", ")", "+", "_dict2str", "(", "kargs", ")", "\n", "\n", "if", "os", ".", "system", "(", "cmd", ")", "!=", "0", ":", "\n", "        ", "raise", "RuntimeError", "(", "'ffmpeg process video: {} error'", ".", "format", "(", "vid_name", ")", ")", "\n", "\n", "", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "return", "out_full_path", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.video.frames2video": [[48, 60], ["sys.stdout.flush", "os.system", "RuntimeError"], "function", ["None"], ["", "def", "frames2video", "(", "frame_path", ",", "video_path", ",", "r", ")", ":", "\n", "    ", "ffmpeg", "=", "[", "'ffmpeg '", ",", "' -y -loglevel '", ",", "' error '", "]", "\n", "cmd", "=", "ffmpeg", "+", "[", "\n", "' -r '", ",", "r", ",", "' -f '", ",", "' image2 '", ",", "' -i '", ",", "frame_path", ",", "' -vcodec '", ",", "\n", "' libx264 '", ",", "' -pix_fmt '", ",", "' yuv420p '", ",", "' -crf '", ",", "' 16 '", ",", "video_path", "\n", "]", "\n", "cmd", "=", "''", ".", "join", "(", "cmd", ")", "\n", "\n", "if", "os", ".", "system", "(", "cmd", ")", "!=", "0", ":", "\n", "        ", "raise", "RuntimeError", "(", "'ffmpeg process video: {} error'", ".", "format", "(", "video_path", ")", ")", "\n", "\n", "", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.__init__": [[34, 42], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "name", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            name (str): the name of this registry\n        \"\"\"", "\n", "self", ".", "_name", "=", "name", "\n", "\n", "self", ".", "_obj_map", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry._do_register": [[43, 49], ["None"], "methods", ["None"], ["", "def", "_do_register", "(", "self", ",", "name", ",", "obj", ")", ":", "\n", "        ", "assert", "(", "\n", "name", "not", "in", "self", ".", "_obj_map", "\n", ")", ",", "\"An object named '{}' was already registered in '{}' registry!\"", ".", "format", "(", "\n", "name", ",", "self", ".", "_name", ")", "\n", "self", ".", "_obj_map", "[", "name", "]", "=", "obj", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.register": [[50, 69], ["registry.Registry._do_register", "registry.Registry._do_register"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry._do_register", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry._do_register"], ["", "def", "register", "(", "self", ",", "obj", "=", "None", ",", "name", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Register the given object under the the name `obj.__name__`.\n        Can be used as either a decorator or not. See docstring of this class for usage.\n        \"\"\"", "\n", "if", "obj", "is", "None", ":", "\n", "# used as a decorator", "\n", "            ", "def", "deco", "(", "func_or_class", ",", "name", "=", "name", ")", ":", "\n", "                ", "if", "name", "is", "None", ":", "\n", "                    ", "name", "=", "func_or_class", ".", "__name__", "\n", "", "self", ".", "_do_register", "(", "name", ",", "func_or_class", ")", "\n", "return", "func_or_class", "\n", "\n", "", "return", "deco", "\n", "\n", "# used as a function call", "\n", "", "if", "name", "is", "None", ":", "\n", "            ", "name", "=", "obj", ".", "__name__", "\n", "", "self", ".", "_do_register", "(", "name", ",", "obj", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get": [[70, 78], ["registry.Registry._obj_map.get", "KeyError"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get"], ["", "def", "get", "(", "self", ",", "name", ")", ":", "\n", "        ", "ret", "=", "self", ".", "_obj_map", ".", "get", "(", "name", ")", "\n", "if", "ret", "is", "None", ":", "\n", "            ", "raise", "KeyError", "(", "\n", "\"No object named '{}' found in '{}' registry!\"", ".", "format", "(", "\n", "name", ",", "self", ".", "_name", ")", ")", "\n", "\n", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.build_from_config": [[82, 130], ["cfg.copy", "cfg.copy.pop", "isinstance", "isinstance", "TypeError", "isinstance", "TypeError", "TypeError", "default_args.items", "registry.get", "inspect.isclass", "registry.get.", "KeyError", "isinstance", "cfg.copy.setdefault", "TypeError", "traceback.format_exc", "print", "type", "type", "type", "str", "type"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get"], ["", "", "def", "build_from_config", "(", "cfg", ",", "registry", ",", "default_args", "=", "None", ")", ":", "\n", "    ", "\"\"\"Build a class from config dict.\n\n    Args:\n        cfg (dict): Config dict. It should at least contain the key \"name\".\n        registry (ppgan.utils.Registry): The registry to search the name from.\n        default_args (dict, optional): Default initialization arguments.\n\n    Returns:\n        class: The constructed class.\n    \"\"\"", "\n", "if", "not", "isinstance", "(", "cfg", ",", "dict", ")", ":", "\n", "        ", "raise", "TypeError", "(", "f'cfg must be a dict, but got {type(cfg)}'", ")", "\n", "", "if", "'name'", "not", "in", "cfg", ":", "\n", "        ", "if", "default_args", "is", "None", "or", "'name'", "not", "in", "default_args", ":", "\n", "            ", "raise", "KeyError", "(", "\n", "'`cfg` or `default_args` must contain the key \"name\", '", "\n", "f'but got {cfg}\\n{default_args}'", ")", "\n", "", "", "if", "not", "isinstance", "(", "registry", ",", "Registry", ")", ":", "\n", "        ", "raise", "TypeError", "(", "'registry must be an ppgan.utils.Registry object, '", "\n", "f'but got {type(registry)}'", ")", "\n", "", "if", "not", "(", "isinstance", "(", "default_args", ",", "dict", ")", "or", "default_args", "is", "None", ")", ":", "\n", "        ", "raise", "TypeError", "(", "'default_args must be a dict or None, '", "\n", "f'but got {type(default_args)}'", ")", "\n", "\n", "", "args", "=", "cfg", ".", "copy", "(", ")", "\n", "\n", "if", "default_args", "is", "not", "None", ":", "\n", "        ", "for", "name", ",", "value", "in", "default_args", ".", "items", "(", ")", ":", "\n", "            ", "args", ".", "setdefault", "(", "name", ",", "value", ")", "\n", "\n", "", "", "cls_name", "=", "args", ".", "pop", "(", "'name'", ")", "\n", "if", "isinstance", "(", "cls_name", ",", "str", ")", ":", "\n", "        ", "obj_cls", "=", "registry", ".", "get", "(", "cls_name", ")", "\n", "", "elif", "inspect", ".", "isclass", "(", "cls_name", ")", ":", "\n", "        ", "obj_cls", "=", "obj_cls", "\n", "", "else", ":", "\n", "        ", "raise", "TypeError", "(", "\n", "f'name must be a str or valid name, but got {type(cls_name)}'", ")", "\n", "\n", "", "try", ":", "\n", "        ", "instance", "=", "obj_cls", "(", "**", "args", ")", "\n", "", "except", "Exception", "as", "e", ":", "\n", "        ", "stack_info", "=", "traceback", ".", "format_exc", "(", ")", "\n", "print", "(", "\"Fail to initial class [{}] with error: \"", "\n", "\"{} and stack:\\n{}\"", ".", "format", "(", "cls_name", ",", "e", ",", "str", "(", "stack_info", ")", ")", ")", "\n", "raise", "e", "\n", "", "return", "instance", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.is_url": [[37, 44], ["path.startswith", "path.startswith"], "function", ["None"], ["def", "is_url", "(", "path", ")", ":", "\n", "    ", "\"\"\"\n    Whether path is URL.\n    Args:\n        path (string): URL string or not.\n    \"\"\"", "\n", "return", "path", ".", "startswith", "(", "'http://'", ")", "or", "path", ".", "startswith", "(", "'https://'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download._map_path": [[46, 51], ["os.join", "os.split"], "function", ["None"], ["", "def", "_map_path", "(", "url", ",", "root_dir", ")", ":", "\n", "# parse path after download under root_dir", "\n", "    ", "fname", "=", "osp", ".", "split", "(", "url", ")", "[", "-", "1", "]", "\n", "fpath", "=", "fname", "\n", "return", "osp", ".", "join", "(", "root_dir", ",", "fpath", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url": [[53, 89], ["download.is_url", "download._map_path", "os.exists", "download._md5check", "logger.get_logger", "logger.get_logger.info", "download._download", "ParallelEnv", "tarfile.is_tarfile", "zipfile.is_zipfile", "download._decompress", "ParallelEnv", "os.path.exists", "os.path.exists", "time.sleep"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.is_url", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download._map_path", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download._md5check", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.logger.get_logger", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download._download", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download._decompress"], ["", "def", "get_path_from_url", "(", "url", ",", "md5sum", "=", "None", ",", "check_exist", "=", "True", ")", ":", "\n", "    ", "\"\"\" Download from given url to root_dir.\n    if file or directory specified by url is exists under\n    root_dir, return the path directly, otherwise download\n    from url and decompress it, return the path.\n\n    Args:\n        url (str): download url\n        md5sum (str): md5 sum of download package\n\n    Returns:\n        str: a local path to save downloaded models & weights & datasets.\n    \"\"\"", "\n", "\n", "from", "paddle", ".", "distributed", "import", "ParallelEnv", "\n", "\n", "assert", "is_url", "(", "url", ")", ",", "\"downloading from {} not a url\"", ".", "format", "(", "url", ")", "\n", "root_dir", "=", "PPGAN_HOME", "\n", "# parse path after download to decompress under root_dir", "\n", "fullpath", "=", "_map_path", "(", "url", ",", "root_dir", ")", "\n", "\n", "if", "osp", ".", "exists", "(", "fullpath", ")", "and", "check_exist", "and", "_md5check", "(", "fullpath", ",", "md5sum", ")", ":", "\n", "        ", "logger", "=", "get_logger", "(", "'ppgan'", ")", "\n", "logger", ".", "info", "(", "\"Found {}\"", ".", "format", "(", "fullpath", ")", ")", "\n", "", "else", ":", "\n", "        ", "if", "ParallelEnv", "(", ")", ".", "local_rank", "==", "0", ":", "\n", "            ", "fullpath", "=", "_download", "(", "url", ",", "root_dir", ",", "md5sum", ")", "\n", "", "else", ":", "\n", "            ", "while", "not", "os", ".", "path", ".", "exists", "(", "fullpath", ")", ":", "\n", "                ", "time", ".", "sleep", "(", "1", ")", "\n", "\n", "", "", "", "if", "ParallelEnv", "(", ")", ".", "local_rank", "==", "0", ":", "\n", "        ", "if", "tarfile", ".", "is_tarfile", "(", "fullpath", ")", "or", "zipfile", ".", "is_zipfile", "(", "fullpath", ")", ":", "\n", "            ", "fullpath", "=", "_decompress", "(", "fullpath", ")", "\n", "\n", "", "", "return", "fullpath", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download._download": [[91, 137], ["os.join", "os.exists", "os.makedirs", "os.makedirs", "os.split", "logger.get_logger", "logger.get_logger.info", "requests.get", "requests.get.headers.get", "shutil.move", "os.exists", "download._md5check", "RuntimeError", "RuntimeError", "open", "requests.get.iter_content", "tqdm.tqdm", "requests.get.iter_content", "f.write", "pbar.update", "f.write", "int"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.logger.get_logger", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download._md5check", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update"], ["", "def", "_download", "(", "url", ",", "path", ",", "md5sum", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Download from url, save to path.\n\n    url (str): download url\n    path (str): download to given path\n    \"\"\"", "\n", "if", "not", "osp", ".", "exists", "(", "path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "path", ")", "\n", "\n", "", "fname", "=", "osp", ".", "split", "(", "url", ")", "[", "-", "1", "]", "\n", "fullname", "=", "osp", ".", "join", "(", "path", ",", "fname", ")", "\n", "retry_cnt", "=", "0", "\n", "\n", "while", "not", "(", "osp", ".", "exists", "(", "fullname", ")", "and", "_md5check", "(", "fullname", ",", "md5sum", ")", ")", ":", "\n", "        ", "if", "retry_cnt", "<", "DOWNLOAD_RETRY_LIMIT", ":", "\n", "            ", "retry_cnt", "+=", "1", "\n", "", "else", ":", "\n", "            ", "raise", "RuntimeError", "(", "\"Download from {} failed. \"", "\n", "\"Retry limit reached\"", ".", "format", "(", "url", ")", ")", "\n", "\n", "", "logger", "=", "get_logger", "(", "'ppgan'", ")", "\n", "logger", ".", "info", "(", "\"Downloading {} from {} to {}\"", ".", "format", "(", "fname", ",", "url", ",", "fullname", ")", ")", "\n", "\n", "req", "=", "requests", ".", "get", "(", "url", ",", "stream", "=", "True", ")", "\n", "if", "req", ".", "status_code", "!=", "200", ":", "\n", "            ", "raise", "RuntimeError", "(", "\"Downloading from {} failed with code \"", "\n", "\"{}!\"", ".", "format", "(", "url", ",", "req", ".", "status_code", ")", ")", "\n", "\n", "# For protecting download interupted, download to", "\n", "# tmp_fullname firstly, move tmp_fullname to fullname", "\n", "# after download finished", "\n", "", "tmp_fullname", "=", "fullname", "+", "\"_tmp\"", "\n", "total_size", "=", "req", ".", "headers", ".", "get", "(", "'content-length'", ")", "\n", "with", "open", "(", "tmp_fullname", ",", "'wb'", ")", "as", "f", ":", "\n", "            ", "if", "total_size", ":", "\n", "                ", "with", "tqdm", "(", "total", "=", "(", "int", "(", "total_size", ")", "+", "1023", ")", "//", "1024", ")", "as", "pbar", ":", "\n", "                    ", "for", "chunk", "in", "req", ".", "iter_content", "(", "chunk_size", "=", "1024", ")", ":", "\n", "                        ", "f", ".", "write", "(", "chunk", ")", "\n", "pbar", ".", "update", "(", "1", ")", "\n", "", "", "", "else", ":", "\n", "                ", "for", "chunk", "in", "req", ".", "iter_content", "(", "chunk_size", "=", "1024", ")", ":", "\n", "                    ", "if", "chunk", ":", "\n", "                        ", "f", ".", "write", "(", "chunk", ")", "\n", "", "", "", "", "shutil", ".", "move", "(", "tmp_fullname", ",", "fullname", ")", "\n", "", "return", "fullname", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download._md5check": [[139, 156], ["logger.get_logger", "logger.get_logger.info", "hashlib.md5", "hashlib.md5.hexdigest", "open", "iter", "logger.get_logger.info", "hashlib.md5.update", "f.read"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.logger.get_logger", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update"], ["", "def", "_md5check", "(", "fullname", ",", "md5sum", "=", "None", ")", ":", "\n", "    ", "if", "md5sum", "is", "None", ":", "\n", "        ", "return", "True", "\n", "\n", "", "logger", "=", "get_logger", "(", "'ppgan'", ")", "\n", "logger", ".", "info", "(", "\"File {} md5 checking...\"", ".", "format", "(", "fullname", ")", ")", "\n", "md5", "=", "hashlib", ".", "md5", "(", ")", "\n", "with", "open", "(", "fullname", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "for", "chunk", "in", "iter", "(", "lambda", ":", "f", ".", "read", "(", "4096", ")", ",", "b\"\"", ")", ":", "\n", "            ", "md5", ".", "update", "(", "chunk", ")", "\n", "", "", "calc_md5sum", "=", "md5", ".", "hexdigest", "(", ")", "\n", "\n", "if", "calc_md5sum", "!=", "md5sum", ":", "\n", "        ", "logger", ".", "info", "(", "\"File {} md5 check failed, {}(calc) != \"", "\n", "\"{}(base)\"", ".", "format", "(", "fullname", ",", "calc_md5sum", ",", "md5sum", ")", ")", "\n", "return", "False", "\n", "", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download._decompress": [[158, 179], ["logger.get_logger", "logger.get_logger.info", "tarfile.is_tarfile", "download._uncompress_file_tar", "zipfile.is_zipfile", "download._uncompress_file_zip", "TypeError"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.logger.get_logger", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download._uncompress_file_tar", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download._uncompress_file_zip"], ["", "def", "_decompress", "(", "fname", ")", ":", "\n", "    ", "\"\"\"\n    Decompress for zip and tar file\n    \"\"\"", "\n", "logger", "=", "get_logger", "(", "'ppgan'", ")", "\n", "\n", "logger", ".", "info", "(", "\"Decompressing {}...\"", ".", "format", "(", "fname", ")", ")", "\n", "\n", "# For protecting decompressing interupted,", "\n", "# decompress to fpath_tmp directory firstly, if decompress", "\n", "# successed, move decompress files to fpath and delete", "\n", "# fpath_tmp and remove download compress file.", "\n", "\n", "if", "tarfile", ".", "is_tarfile", "(", "fname", ")", ":", "\n", "        ", "uncompressed_path", "=", "_uncompress_file_tar", "(", "fname", ")", "\n", "", "elif", "zipfile", ".", "is_zipfile", "(", "fname", ")", ":", "\n", "        ", "uncompressed_path", "=", "_uncompress_file_zip", "(", "fname", ")", "\n", "", "else", ":", "\n", "        ", "raise", "TypeError", "(", "\"Unsupport compress file type {}\"", ".", "format", "(", "fname", ")", ")", "\n", "\n", "", "return", "uncompressed_path", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download._uncompress_file_zip": [[181, 213], ["zipfile.ZipFile", "zipfile.ZipFile.namelist", "os.path.dirname", "os.path.dirname", "download._is_a_single_file", "zipfile.ZipFile.close", "os.path.join", "os.path.join", "download._is_a_single_dir", "zipfile.ZipFile.extract", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "[].strip().split", "zipfile.ZipFile.extract", "[].split", "os.path.exists", "os.path.exists", "os.makedirs", "os.makedirs", "zipfile.ZipFile.extract", "os.path.join", "os.path.join", "[].strip", "os.path.splitext", "os.path.splitext", "os.path.splitext", "os.path.splitext"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download._is_a_single_file", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.close", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download._is_a_single_dir", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs"], ["", "def", "_uncompress_file_zip", "(", "filepath", ")", ":", "\n", "    ", "files", "=", "zipfile", ".", "ZipFile", "(", "filepath", ",", "'r'", ")", "\n", "file_list", "=", "files", ".", "namelist", "(", ")", "\n", "\n", "file_dir", "=", "os", ".", "path", ".", "dirname", "(", "filepath", ")", "\n", "\n", "if", "_is_a_single_file", "(", "file_list", ")", ":", "\n", "        ", "rootpath", "=", "file_list", "[", "0", "]", "\n", "uncompressed_path", "=", "os", ".", "path", ".", "join", "(", "file_dir", ",", "rootpath", ")", "\n", "\n", "for", "item", "in", "file_list", ":", "\n", "            ", "files", ".", "extract", "(", "item", ",", "file_dir", ")", "\n", "\n", "", "", "elif", "_is_a_single_dir", "(", "file_list", ")", ":", "\n", "        ", "rootpath", "=", "os", ".", "path", ".", "splitext", "(", "file_list", "[", "0", "]", ")", "[", "0", "]", ".", "strip", "(", "os", ".", "sep", ")", ".", "split", "(", "\n", "os", ".", "sep", ")", "[", "-", "1", "]", "\n", "uncompressed_path", "=", "os", ".", "path", ".", "join", "(", "file_dir", ",", "rootpath", ")", "\n", "\n", "for", "item", "in", "file_list", ":", "\n", "            ", "files", ".", "extract", "(", "item", ",", "file_dir", ")", "\n", "\n", "", "", "else", ":", "\n", "        ", "rootpath", "=", "os", ".", "path", ".", "splitext", "(", "filepath", ")", "[", "0", "]", ".", "split", "(", "os", ".", "sep", ")", "[", "-", "1", "]", "\n", "uncompressed_path", "=", "os", ".", "path", ".", "join", "(", "file_dir", ",", "rootpath", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "uncompressed_path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "uncompressed_path", ")", "\n", "", "for", "item", "in", "file_list", ":", "\n", "            ", "files", ".", "extract", "(", "item", ",", "os", ".", "path", ".", "join", "(", "file_dir", ",", "rootpath", ")", ")", "\n", "\n", "", "", "files", ".", "close", "(", ")", "\n", "\n", "return", "uncompressed_path", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download._uncompress_file_tar": [[215, 243], ["tarfile.open", "tarfile.open.getnames", "os.path.dirname", "os.path.dirname", "download._is_a_single_file", "tarfile.open.close", "os.path.join", "os.path.join", "download._is_a_single_dir", "tarfile.open.extract", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "[].split", "tarfile.open.extract", "[].split", "os.path.exists", "os.path.exists", "os.makedirs", "os.makedirs", "tarfile.open.extract", "os.path.join", "os.path.join", "os.path.splitext", "os.path.splitext", "os.path.splitext", "os.path.splitext"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download._is_a_single_file", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.close", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download._is_a_single_dir", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs"], ["", "def", "_uncompress_file_tar", "(", "filepath", ",", "mode", "=", "\"r:*\"", ")", ":", "\n", "    ", "files", "=", "tarfile", ".", "open", "(", "filepath", ",", "mode", ")", "\n", "file_list", "=", "files", ".", "getnames", "(", ")", "\n", "\n", "file_dir", "=", "os", ".", "path", ".", "dirname", "(", "filepath", ")", "\n", "\n", "if", "_is_a_single_file", "(", "file_list", ")", ":", "\n", "        ", "rootpath", "=", "file_list", "[", "0", "]", "\n", "uncompressed_path", "=", "os", ".", "path", ".", "join", "(", "file_dir", ",", "rootpath", ")", "\n", "for", "item", "in", "file_list", ":", "\n", "            ", "files", ".", "extract", "(", "item", ",", "file_dir", ")", "\n", "", "", "elif", "_is_a_single_dir", "(", "file_list", ")", ":", "\n", "        ", "rootpath", "=", "os", ".", "path", ".", "splitext", "(", "file_list", "[", "0", "]", ")", "[", "0", "]", ".", "split", "(", "os", ".", "sep", ")", "[", "-", "1", "]", "\n", "uncompressed_path", "=", "os", ".", "path", ".", "join", "(", "file_dir", ",", "rootpath", ")", "\n", "for", "item", "in", "file_list", ":", "\n", "            ", "files", ".", "extract", "(", "item", ",", "file_dir", ")", "\n", "", "", "else", ":", "\n", "        ", "rootpath", "=", "os", ".", "path", ".", "splitext", "(", "filepath", ")", "[", "0", "]", ".", "split", "(", "os", ".", "sep", ")", "[", "-", "1", "]", "\n", "uncompressed_path", "=", "os", ".", "path", ".", "join", "(", "file_dir", ",", "rootpath", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "uncompressed_path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "uncompressed_path", ")", "\n", "\n", "", "for", "item", "in", "file_list", ":", "\n", "            ", "files", ".", "extract", "(", "item", ",", "os", ".", "path", ".", "join", "(", "file_dir", ",", "rootpath", ")", ")", "\n", "\n", "", "", "files", ".", "close", "(", ")", "\n", "\n", "return", "uncompressed_path", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download._is_a_single_file": [[245, 249], ["len", "file_list[].find"], "function", ["None"], ["", "def", "_is_a_single_file", "(", "file_list", ")", ":", "\n", "    ", "if", "len", "(", "file_list", ")", "==", "1", "and", "file_list", "[", "0", "]", ".", "find", "(", "'/'", ")", "<", "-", "1", ":", "\n", "        ", "return", "True", "\n", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download._is_a_single_dir": [[251, 257], ["range", "file_list[].split", "len", "file_list[].split"], "function", ["None"], ["", "def", "_is_a_single_dir", "(", "file_list", ")", ":", "\n", "    ", "file_name", "=", "file_list", "[", "0", "]", ".", "split", "(", "'/'", ")", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "file_list", ")", ")", ":", "\n", "        ", "if", "file_name", "!=", "file_list", "[", "i", "]", ".", "split", "(", "'/'", ")", "[", "0", "]", ":", "\n", "            ", "return", "False", "\n", "", "", "return", "True", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.preprocess.generate_P_from_lmks": [[9, 26], ["numpy.meshgrid", "xs[].repeat", "ys[].repeat", "numpy.concatenate", "lmks.transpose().reshape.transpose().reshape", "diff.transpose.transpose", "cv2.resize", "diff.transpose.transpose", "numpy.linspace", "numpy.linspace", "lmks.transpose().reshape.transpose"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize"], ["def", "generate_P_from_lmks", "(", "lmks", ",", "resize", ",", "w", ",", "h", ")", ":", "\n", "    ", "\"\"\"generate P from lmks\"\"\"", "\n", "diff_size", "=", "(", "64", ",", "64", ")", "\n", "xs", ",", "ys", "=", "np", ".", "meshgrid", "(", "np", ".", "linspace", "(", "0", ",", "resize", "-", "1", ",", "resize", ")", ",", "\n", "np", ".", "linspace", "(", "0", ",", "resize", "-", "1", ",", "resize", ")", ")", "\n", "xs", "=", "xs", "[", "None", "]", ".", "repeat", "(", "68", ",", "axis", "=", "0", ")", "\n", "ys", "=", "ys", "[", "None", "]", ".", "repeat", "(", "68", ",", "axis", "=", "0", ")", "\n", "fix", "=", "np", ".", "concatenate", "(", "[", "ys", ",", "xs", "]", ",", "axis", "=", "0", ")", "\n", "\n", "lmks", "=", "lmks", ".", "transpose", "(", "1", ",", "0", ")", ".", "reshape", "(", "-", "1", ",", "1", ",", "1", ")", "\n", "\n", "diff", "=", "fix", "-", "lmks", "\n", "diff", "=", "diff", ".", "transpose", "(", "1", ",", "2", ",", "0", ")", "\n", "diff", "=", "cv2", ".", "resize", "(", "diff", ",", "diff_size", ",", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ")", "\n", "diff", "=", "diff", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n", "\n", "return", "diff", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.preprocess.copy_area": [[28, 38], ["int", "int", "min", "min", "int", "int", "max", "max"], "function", ["None"], ["", "def", "copy_area", "(", "tar", ",", "src", ",", "lms", ")", ":", "\n", "    ", "rect", "=", "[", "\n", "int", "(", "min", "(", "lms", "[", ":", ",", "1", "]", ")", ")", "-", "16", ",", "\n", "int", "(", "min", "(", "lms", "[", ":", ",", "0", "]", ")", ")", "-", "16", ",", "\n", "int", "(", "max", "(", "lms", "[", ":", ",", "1", "]", ")", ")", "+", "16", "+", "1", ",", "\n", "int", "(", "max", "(", "lms", "[", ":", ",", "0", "]", ")", ")", "+", "16", "+", "1", "\n", "]", "\n", "tar", "[", "rect", "[", "1", "]", ":", "rect", "[", "3", "]", ",", "rect", "[", "0", "]", ":", "rect", "[", "2", "]", "]", "=", "src", "[", "rect", "[", "1", "]", ":", "rect", "[", "3", "]", ",", "rect", "[", "0", "]", ":", "rect", "[", "2", "]", "]", "\n", "src", "[", "rect", "[", "1", "]", ":", "rect", "[", "3", "]", ",", "rect", "[", "0", "]", ":", "rect", "[", "2", "]", "]", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.preprocess.rebound_box": [[40, 63], ["mask.nonzero", "mask_B.nonzero", "numpy.copy", "numpy.copy", "min", "max", "min", "max", "min", "max", "min", "max", "min", "max", "min", "max", "min", "max", "min", "max"], "function", ["None"], ["", "def", "rebound_box", "(", "mask", ",", "mask_B", ",", "mask_face", ")", ":", "\n", "    ", "\"\"\"solver ps\"\"\"", "\n", "index_tmp", "=", "mask", ".", "nonzero", "(", ")", "\n", "x_index", "=", "index_tmp", "[", "0", "]", "\n", "y_index", "=", "index_tmp", "[", "1", "]", "\n", "index_tmp", "=", "mask_B", ".", "nonzero", "(", ")", "\n", "x_B_index", "=", "index_tmp", "[", "0", "]", "\n", "y_B_index", "=", "index_tmp", "[", "1", "]", "\n", "mask_temp", "=", "np", ".", "copy", "(", "mask", ")", "\n", "mask_B_temp", "=", "np", ".", "copy", "(", "mask_B", ")", "\n", "mask_temp", "[", "min", "(", "x_index", ")", "-", "16", ":", "max", "(", "x_index", ")", "+", "17", ",", "min", "(", "y_index", ")", "-", "16", ":", "max", "(", "y_index", ")", "+", "17", "]", "=", "mask_face", "[", "min", "(", "x_index", ")", "-", "\n", "16", ":", "max", "(", "x_index", ")", "+", "\n", "17", ",", "min", "(", "y_index", ")", "-", "\n", "16", ":", "max", "(", "y_index", ")", "+", "\n", "17", "]", "\n", "mask_B_temp", "[", "min", "(", "x_B_index", ")", "-", "16", ":", "max", "(", "x_B_index", ")", "+", "17", ",", "min", "(", "y_B_index", ")", "-", "16", ":", "max", "(", "y_B_index", ")", "+", "17", "]", "=", "mask_face", "[", "min", "(", "x_B_index", ")", "-", "\n", "16", ":", "max", "(", "x_B_index", ")", "+", "\n", "17", ",", "min", "(", "y_B_index", ")", "-", "\n", "16", ":", "max", "(", "y_B_index", ")", "+", "\n", "17", "]", "\n", "return", "mask_temp", ",", "mask_B_temp", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.preprocess.calculate_consis_mask": [[65, 104], ["numpy.transpose", "numpy.transpose", "cv2.resize", "numpy.transpose", "cv2.resize", "numpy.transpose", "numpy.zeros", "mask_skin.flatten", "mask_eye.flatten", "mask_lip.flatten", "numpy.zeros", "mask_B_skin.flatten", "mask_B_eye.flatten", "mask_B_lip.flatten", "numpy.matmul", "numpy.clip", "np.zeros.reshape", "numpy.transpose", "np.zeros.reshape"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize"], ["", "def", "calculate_consis_mask", "(", "mask", ",", "mask_B", ")", ":", "\n", "    ", "h_a", ",", "w_a", "=", "mask", ".", "shape", "[", "1", ":", "]", "\n", "h_b", ",", "w_b", "=", "mask_B", ".", "shape", "[", "1", ":", "]", "\n", "mask_transpose", "=", "np", ".", "transpose", "(", "mask", ",", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "mask_B_transpose", "=", "np", ".", "transpose", "(", "mask_B", ",", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "mask", "=", "cv2", ".", "resize", "(", "mask_transpose", ",", "\n", "dsize", "=", "(", "w_a", "//", "4", ",", "h_a", "//", "4", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ")", "\n", "mask", "=", "np", ".", "transpose", "(", "mask", ",", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "mask_B", "=", "cv2", ".", "resize", "(", "mask_B_transpose", ",", "\n", "dsize", "=", "(", "w_b", "//", "4", ",", "h_b", "//", "4", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ")", "\n", "mask_B", "=", "np", ".", "transpose", "(", "mask_B", ",", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "\"\"\"calculate consistency mask between images\"\"\"", "\n", "h_a", ",", "w_a", "=", "mask", ".", "shape", "[", "1", ":", "]", "\n", "h_b", ",", "w_b", "=", "mask_B", ".", "shape", "[", "1", ":", "]", "\n", "\n", "mask_lip", "=", "mask", "[", "0", "]", "\n", "mask_skin", "=", "mask", "[", "1", "]", "\n", "mask_eye", "=", "mask", "[", "2", "]", "\n", "\n", "mask_B_lip", "=", "mask_B", "[", "0", "]", "\n", "mask_B_skin", "=", "mask_B", "[", "1", "]", "\n", "mask_B_eye", "=", "mask_B", "[", "2", "]", "\n", "\n", "maskA_one_hot", "=", "np", ".", "zeros", "(", "(", "h_a", "*", "w_a", ",", "3", ")", ")", "\n", "maskA_one_hot", "[", ":", ",", "0", "]", "=", "mask_skin", ".", "flatten", "(", ")", "\n", "maskA_one_hot", "[", ":", ",", "1", "]", "=", "mask_eye", ".", "flatten", "(", ")", "\n", "maskA_one_hot", "[", ":", ",", "2", "]", "=", "mask_lip", ".", "flatten", "(", ")", "\n", "\n", "maskB_one_hot", "=", "np", ".", "zeros", "(", "(", "h_b", "*", "w_b", ",", "3", ")", ")", "\n", "maskB_one_hot", "[", ":", ",", "0", "]", "=", "mask_B_skin", ".", "flatten", "(", ")", "\n", "maskB_one_hot", "[", ":", ",", "1", "]", "=", "mask_B_eye", ".", "flatten", "(", ")", "\n", "maskB_one_hot", "[", ":", ",", "2", "]", "=", "mask_B_lip", ".", "flatten", "(", ")", "\n", "\n", "con_mask", "=", "np", ".", "matmul", "(", "maskA_one_hot", ".", "reshape", "(", "(", "h_a", "*", "w_a", ",", "3", ")", ")", ",", "\n", "np", ".", "transpose", "(", "maskB_one_hot", ".", "reshape", "(", "(", "h_b", "*", "w_b", ",", "3", ")", ")", ")", ")", "\n", "con_mask", "=", "np", ".", "clip", "(", "con_mask", ",", "0", ",", "1", ")", "\n", "return", "con_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.preprocess.cal_hist": [[106, 120], ["range", "numpy.histogram", "hist.sum", "range", "hists.append"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "cal_hist", "(", "image", ")", ":", "\n", "    ", "\"\"\"\n        cal cumulative hist for channel list\n    \"\"\"", "\n", "hists", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "3", ")", ":", "\n", "        ", "channel", "=", "image", "[", "i", "]", "\n", "hist", ",", "_", "=", "np", ".", "histogram", "(", "channel", ",", "bins", "=", "256", ",", "range", "=", "(", "0", ",", "255", ")", ")", "\n", "sum", "=", "hist", ".", "sum", "(", ")", "\n", "pdf", "=", "[", "v", "/", "sum", "for", "v", "in", "hist", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "256", ")", ":", "\n", "            ", "pdf", "[", "i", "]", "=", "pdf", "[", "i", "-", "1", "]", "+", "pdf", "[", "i", "]", "\n", "", "hists", ".", "append", "(", "pdf", ")", "\n", "", "return", "hists", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.preprocess.cal_trans": [[122, 135], ["list", "list", "range", "range", "list", "range"], "function", ["None"], ["", "def", "cal_trans", "(", "ref", ",", "adj", ")", ":", "\n", "    ", "\"\"\"\n        calculate transfer function\n        algorithm refering to wiki item: Histogram matching\n    \"\"\"", "\n", "table", "=", "list", "(", "range", "(", "0", ",", "256", ")", ")", "\n", "for", "i", "in", "list", "(", "range", "(", "1", ",", "256", ")", ")", ":", "\n", "        ", "for", "j", "in", "list", "(", "range", "(", "1", ",", "256", ")", ")", ":", "\n", "            ", "if", "ref", "[", "i", "]", ">=", "adj", "[", "j", "-", "1", "]", "and", "ref", "[", "i", "]", "<=", "adj", "[", "j", "]", ":", "\n", "                ", "table", "[", "i", "]", "=", "j", "\n", "break", "\n", "", "", "", "table", "[", "255", "]", "=", "255", "\n", "return", "table", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.preprocess.histogram_matching": [[137, 159], ["preprocess.cal_hist", "preprocess.cal_hist", "dst_align.copy", "range", "range", "preprocess.cal_trans", "range", "range", "range", "range", "len", "int"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.preprocess.cal_hist", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.preprocess.cal_hist", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.preprocess.cal_trans"], ["", "def", "histogram_matching", "(", "dstImg", ",", "refImg", ",", "index", ")", ":", "\n", "    ", "\"\"\"\n        perform histogram matching\n        dstImg is transformed to have the same the histogram with refImg's\n        index[0], index[1]: the index of pixels that need to be transformed in dstImg\n        index[2], index[3]: the index of pixels that to compute histogram in refImg\n    \"\"\"", "\n", "dst_align", "=", "[", "dstImg", "[", "i", ",", "index", "[", "0", "]", ",", "index", "[", "1", "]", "]", "for", "i", "in", "range", "(", "0", ",", "3", ")", "]", "\n", "ref_align", "=", "[", "refImg", "[", "i", ",", "index", "[", "2", "]", ",", "index", "[", "3", "]", "]", "for", "i", "in", "range", "(", "0", ",", "3", ")", "]", "\n", "hist_ref", "=", "cal_hist", "(", "ref_align", ")", "\n", "hist_dst", "=", "cal_hist", "(", "dst_align", ")", "\n", "tables", "=", "[", "cal_trans", "(", "hist_dst", "[", "i", "]", ",", "hist_ref", "[", "i", "]", ")", "for", "i", "in", "range", "(", "0", ",", "3", ")", "]", "\n", "\n", "mid", "=", "dst_align", ".", "copy", "(", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "3", ")", ":", "\n", "        ", "for", "k", "in", "range", "(", "0", ",", "len", "(", "index", "[", "0", "]", ")", ")", ":", "\n", "            ", "dst_align", "[", "i", "]", "[", "k", "]", "=", "tables", "[", "i", "]", "[", "int", "(", "mid", "[", "i", "]", "[", "k", "]", ")", "]", "\n", "\n", "", "", "for", "i", "in", "range", "(", "0", ",", "3", ")", ":", "\n", "        ", "dstImg", "[", "i", ",", "index", "[", "0", "]", ",", "index", "[", "1", "]", "]", "=", "dst_align", "[", "i", "]", "\n", "\n", "", "return", "dstImg", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.preprocess.hisMatch": [[161, 169], ["numpy.float32", "numpy.float32", "preprocess.histogram_matching", "numpy.clip", "numpy.clip", "numpy.float32", "numpy.float32"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.preprocess.histogram_matching"], ["", "def", "hisMatch", "(", "input_data", ",", "target_data", ",", "mask_src", ",", "mask_tar", ",", "index", ")", ":", "\n", "    ", "\"\"\"solver ps\"\"\"", "\n", "mask_src", "=", "np", ".", "float32", "(", "np", ".", "clip", "(", "mask_src", ",", "0", ",", "1", ")", ")", "\n", "mask_tar", "=", "np", ".", "float32", "(", "np", ".", "clip", "(", "mask_tar", ",", "0", ",", "1", ")", ")", "\n", "input_masked", "=", "np", ".", "float32", "(", "input_data", ")", "*", "mask_src", "\n", "target_masked", "=", "np", ".", "float32", "(", "target_data", ")", "*", "mask_tar", "\n", "input_match", "=", "histogram_matching", "(", "input_masked", ",", "target_masked", ",", "index", ")", "\n", "return", "input_match", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.preprocess.mask_preprocess": [[171, 182], ["mask.nonzero", "mask_B.nonzero"], "function", ["None"], ["", "def", "mask_preprocess", "(", "mask", ",", "mask_B", ")", ":", "\n", "    ", "\"\"\"solver ps\"\"\"", "\n", "index_tmp", "=", "mask", ".", "nonzero", "(", ")", "\n", "x_index", "=", "index_tmp", "[", "0", "]", "\n", "y_index", "=", "index_tmp", "[", "1", "]", "\n", "index_tmp", "=", "mask_B", ".", "nonzero", "(", ")", "\n", "x_B_index", "=", "index_tmp", "[", "0", "]", "\n", "y_B_index", "=", "index_tmp", "[", "1", "]", "\n", "index", "=", "[", "x_index", ",", "y_index", ",", "x_B_index", ",", "y_B_index", "]", "\n", "index_2", "=", "[", "x_B_index", ",", "y_B_index", ",", "x_index", ",", "y_index", "]", "\n", "return", "[", "mask", ",", "mask_B", ",", "index", ",", "index_2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.preprocess.generate_mask_aug": [[184, 207], ["numpy.zeros_like", "numpy.zeros_like", "preprocess.copy_area", "preprocess.copy_area", "numpy.concatenate", "numpy.float32", "numpy.float32", "numpy.float32", "numpy.float32", "numpy.expand_dims", "numpy.expand_dims", "numpy.expand_dims"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.preprocess.copy_area", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.preprocess.copy_area"], ["", "def", "generate_mask_aug", "(", "mask", ",", "lmks", ")", ":", "\n", "\n", "    ", "lms_eye_left", "=", "lmks", "[", "42", ":", "48", "]", "\n", "lms_eye_right", "=", "lmks", "[", "36", ":", "42", "]", "\n", "\n", "mask_eye_left", "=", "np", ".", "zeros_like", "(", "mask", ")", "\n", "mask_eye_right", "=", "np", ".", "zeros_like", "(", "mask", ")", "\n", "\n", "mask_face", "=", "np", ".", "float32", "(", "mask", "==", "1", ")", "+", "np", ".", "float32", "(", "mask", "==", "6", ")", "\n", "\n", "copy_area", "(", "mask_eye_left", ",", "mask_face", ",", "lms_eye_left", ")", "\n", "copy_area", "(", "mask_eye_right", ",", "mask_face", ",", "lms_eye_right", ")", "\n", "\n", "mask_skin", "=", "mask_face", "\n", "\n", "mask_lip", "=", "np", ".", "float32", "(", "mask", "==", "7", ")", "+", "np", ".", "float32", "(", "mask", "==", "9", ")", "\n", "\n", "mask_eye", "=", "mask_eye_left", "+", "mask_eye_right", "\n", "mask_aug", "=", "np", ".", "concatenate", "(", "\n", "(", "np", ".", "expand_dims", "(", "mask_lip", ",", "0", ")", ",", "np", ".", "expand_dims", "(", "\n", "mask_skin", ",", "0", ")", ",", "np", ".", "expand_dims", "(", "mask_eye", ",", "0", ")", ")", ",", "0", ")", "\n", "\n", "return", "mask_aug", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.make_grid": [[23, 106], ["isinstance", "min", "int", "paddle.zeros", "irange", "TypeError", "paddle.stack", "paddle.concat.dim", "paddle.concat.unsqueeze", "paddle.concat.dim", "paddle.concat.unsqueeze", "paddle.concat", "paddle.concat.astype", "paddle.concat.squeeze", "math.ceil", "int", "int", "irange", "isinstance", "paddle.concat", "paddle.concat.dim", "isinstance", "img.clip", "visual.make_grid.norm_range"], "function", ["None"], ["def", "make_grid", "(", "tensor", ",", "nrow", "=", "8", ",", "normalize", "=", "False", ",", "range", "=", "None", ",", "scale_each", "=", "False", ")", ":", "\n", "    ", "\"\"\"Make a grid of images.\n    Args:\n        tensor (Tensor or list): 4D mini-batch Tensor of shape (B x C x H x W)\n            or a list of images all of the same size.\n        nrow (int, optional): Number of images displayed in each row of the grid.\n            The final grid size is ``(B / nrow, nrow)``. Default: ``8``.\n        normalize (bool, optional): If True, shift the image to the range (0, 1),\n            by the min and max values specified by :attr:`range`. Default: ``False``.\n        range (tuple, optional): tuple (min, max) where min and max are numbers,\n            then these numbers are used to normalize the image. By default, min and max\n            are computed from the tensor.\n        scale_each (bool, optional): If ``True``, scale each image in the batch of\n            images separately rather than the (min, max) over all images. Default: ``False``.\n    \"\"\"", "\n", "if", "not", "(", "isinstance", "(", "tensor", ",", "paddle", ".", "Tensor", ")", "or", "\n", "(", "isinstance", "(", "tensor", ",", "list", ")", "\n", "and", "all", "(", "isinstance", "(", "t", ",", "paddle", ".", "Tensor", ")", "for", "t", "in", "tensor", ")", ")", ")", ":", "\n", "        ", "raise", "TypeError", "(", "'tensor or list of tensors expected, got {}'", ".", "format", "(", "\n", "type", "(", "tensor", ")", ")", ")", "\n", "\n", "# if list of tensors, convert to a 4D mini-batch Tensor", "\n", "", "if", "isinstance", "(", "tensor", ",", "list", ")", ":", "\n", "        ", "tensor", "=", "paddle", ".", "stack", "(", "tensor", ",", "0", ")", "\n", "\n", "# single image H x W", "\n", "", "if", "tensor", ".", "dim", "(", ")", "==", "2", ":", "\n", "        ", "tensor", "=", "tensor", ".", "unsqueeze", "(", "0", ")", "\n", "# single image", "\n", "", "if", "tensor", ".", "dim", "(", ")", "==", "3", ":", "\n", "# if single-channel, convert to 3-channel", "\n", "        ", "if", "tensor", ".", "shape", "[", "0", "]", "==", "1", ":", "\n", "            ", "tensor", "=", "paddle", ".", "concat", "(", "[", "tensor", ",", "tensor", ",", "tensor", "]", ",", "0", ")", "\n", "", "tensor", "=", "tensor", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "# single-channel images", "\n", "", "if", "tensor", ".", "dim", "(", ")", "==", "4", "and", "tensor", ".", "shape", "[", "1", "]", "==", "1", ":", "\n", "        ", "tensor", "=", "paddle", ".", "concat", "(", "[", "tensor", ",", "tensor", ",", "tensor", "]", ",", "1", ")", "\n", "\n", "", "if", "normalize", "is", "True", ":", "\n", "# avoid modifying tensor in-place", "\n", "        ", "tensor", "=", "tensor", ".", "astype", "(", "tensor", ".", "dtype", ")", "\n", "if", "range", "is", "not", "None", ":", "\n", "            ", "assert", "isinstance", "(", "range", ",", "tuple", ")", ",", "\"range has to be a tuple (min, max) if specified. min and max are numbers\"", "\n", "\n", "", "def", "norm_ip", "(", "img", ",", "min", ",", "max", ")", ":", "\n", "            ", "img", "[", ":", "]", "=", "img", ".", "clip", "(", "min", "=", "min", ",", "max", "=", "max", ")", "\n", "img", "[", ":", "]", "=", "(", "img", "-", "min", ")", "/", "(", "max", "-", "min", "+", "1e-5", ")", "\n", "\n", "", "def", "norm_range", "(", "t", ",", "range", ")", ":", "\n", "            ", "if", "range", "is", "not", "None", ":", "\n", "                ", "norm_ip", "(", "t", ",", "range", "[", "0", "]", ",", "range", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "                ", "norm_ip", "(", "t", ",", "float", "(", "t", ".", "min", "(", ")", ")", ",", "float", "(", "t", ".", "max", "(", ")", ")", ")", "\n", "\n", "", "", "if", "scale_each", "is", "True", ":", "\n", "# loop over mini-batch dimension", "\n", "            ", "for", "t", "in", "tensor", ":", "\n", "                ", "norm_range", "(", "t", ",", "range", ")", "\n", "", "", "else", ":", "\n", "            ", "norm_range", "(", "tensor", ",", "range", ")", "\n", "\n", "", "", "if", "tensor", ".", "shape", "[", "0", "]", "==", "1", ":", "\n", "        ", "return", "tensor", ".", "squeeze", "(", "0", ")", "\n", "\n", "# make the mini-batch of images into a grid", "\n", "", "nmaps", "=", "tensor", ".", "shape", "[", "0", "]", "\n", "xmaps", "=", "min", "(", "nrow", ",", "nmaps", ")", "\n", "ymaps", "=", "int", "(", "math", ".", "ceil", "(", "float", "(", "nmaps", ")", "/", "xmaps", ")", ")", "\n", "height", ",", "width", "=", "int", "(", "tensor", ".", "shape", "[", "2", "]", ")", ",", "int", "(", "tensor", ".", "shape", "[", "3", "]", ")", "\n", "num_channels", "=", "tensor", ".", "shape", "[", "1", "]", "\n", "canvas", "=", "paddle", ".", "zeros", "(", "(", "num_channels", ",", "height", "*", "ymaps", ",", "width", "*", "xmaps", ")", ",", "\n", "dtype", "=", "tensor", ".", "dtype", ")", "\n", "k", "=", "0", "\n", "for", "y", "in", "irange", "(", "ymaps", ")", ":", "\n", "        ", "for", "x", "in", "irange", "(", "xmaps", ")", ":", "\n", "            ", "if", "k", ">=", "nmaps", ":", "\n", "                ", "break", "\n", "", "canvas", "[", ":", ",", "y", "*", "height", ":", "(", "y", "+", "1", ")", "*", "height", ",", "\n", "x", "*", "width", ":", "(", "x", "+", "1", ")", "*", "width", "]", "=", "tensor", "[", "k", "]", "\n", "k", "=", "k", "+", "1", "\n", "", "", "return", "canvas", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.tensor2img": [[108, 162], ["np.expand_dims.round", "np.expand_dims.astype", "np.tile.clip", "isinstance", "input_image.numpy", "numpy.tile", "numpy.transpose", "visual.tensor2img.processing"], "function", ["None"], ["", "def", "tensor2img", "(", "input_image", ",", "min_max", "=", "(", "-", "1.", ",", "1.", ")", ",", "image_num", "=", "1", ",", "imtype", "=", "np", ".", "uint8", ")", ":", "\n", "    ", "\"\"\"\"Converts a Tensor array into a numpy image array.\n\n    Parameters:\n        input_image (tensor): the input image tensor array\n        image_num (int): the convert iamge numbers\n        imtype (type): the desired type of the converted numpy array\n    \"\"\"", "\n", "def", "processing", "(", "img", ",", "transpose", "=", "True", ")", ":", "\n", "        ", "\"\"\"\"processing one numpy image.\n\n        Parameters:\n            im (tensor): the input image numpy array\n        \"\"\"", "\n", "# grayscale to RGB", "\n", "if", "img", ".", "shape", "[", "0", "]", "==", "1", ":", "\n", "            ", "img", "=", "np", ".", "tile", "(", "img", ",", "(", "3", ",", "1", ",", "1", ")", ")", "\n", "", "img", "=", "img", ".", "clip", "(", "min_max", "[", "0", "]", ",", "min_max", "[", "1", "]", ")", "\n", "img", "=", "(", "img", "-", "min_max", "[", "0", "]", ")", "/", "(", "min_max", "[", "1", "]", "-", "min_max", "[", "0", "]", ")", "\n", "if", "imtype", "==", "np", ".", "uint8", ":", "\n", "# scaling", "\n", "            ", "img", "=", "img", "*", "255.0", "\n", "# tranpose", "\n", "", "img", "=", "np", ".", "transpose", "(", "img", ",", "(", "1", ",", "2", ",", "0", ")", ")", "if", "transpose", "else", "img", "\n", "return", "img", "\n", "\n", "", "if", "not", "isinstance", "(", "input_image", ",", "np", ".", "ndarray", ")", ":", "\n", "# convert it into a numpy array", "\n", "        ", "image_numpy", "=", "input_image", ".", "numpy", "(", ")", "\n", "ndim", "=", "image_numpy", ".", "ndim", "\n", "if", "ndim", "==", "4", ":", "\n", "            ", "image_numpy", "=", "image_numpy", "[", "0", ":", "image_num", "]", "\n", "", "elif", "ndim", "==", "3", ":", "\n", "# NOTE for eval mode, need add dim", "\n", "            ", "image_numpy", "=", "np", ".", "expand_dims", "(", "image_numpy", ",", "0", ")", "\n", "image_num", "=", "1", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"Image numpy ndim is {} not 3 or 4, Please check data\"", ".", "format", "(", "\n", "ndim", ")", ")", "\n", "\n", "", "if", "image_num", "==", "1", ":", "\n", "# for one image, log HWC image", "\n", "            ", "image_numpy", "=", "processing", "(", "image_numpy", "[", "0", "]", ")", "\n", "", "else", ":", "\n", "# for more image, log NCHW image", "\n", "            ", "image_numpy", "=", "np", ".", "stack", "(", "\n", "[", "processing", "(", "im", ",", "transpose", "=", "False", ")", "for", "im", "in", "image_numpy", "]", ")", "\n", "\n", "", "", "else", ":", "\n", "# if it is a numpy array, do nothing", "\n", "        ", "image_numpy", "=", "input_image", "\n", "", "image_numpy", "=", "image_numpy", ".", "round", "(", ")", "\n", "return", "image_numpy", ".", "astype", "(", "imtype", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.save_image": [[164, 180], ["PIL.Image.fromarray", "image_pil.resize.save", "image_pil.resize.resize", "image_pil.resize.resize", "int", "int"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize"], ["", "def", "save_image", "(", "image_numpy", ",", "image_path", ",", "aspect_ratio", "=", "1.0", ")", ":", "\n", "    ", "\"\"\"Save a numpy image to the disk\n\n    Parameters:\n        image_numpy (numpy array) -- input numpy array\n        image_path (str)          -- the path of the image\n    \"\"\"", "\n", "\n", "image_pil", "=", "Image", ".", "fromarray", "(", "image_numpy", ")", "\n", "h", ",", "w", ",", "_", "=", "image_numpy", ".", "shape", "\n", "\n", "if", "aspect_ratio", ">", "1.0", ":", "\n", "        ", "image_pil", "=", "image_pil", ".", "resize", "(", "(", "h", ",", "int", "(", "w", "*", "aspect_ratio", ")", ")", ",", "Image", ".", "BICUBIC", ")", "\n", "", "if", "aspect_ratio", "<", "1.0", ":", "\n", "        ", "image_pil", "=", "image_pil", ".", "resize", "(", "(", "int", "(", "h", "/", "aspect_ratio", ")", ",", "w", ")", ",", "Image", ".", "BICUBIC", ")", "\n", "", "image_pil", ".", "save", "(", "image_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.mask2image": [[182, 190], ["numpy.zeros", "range", "int", "mask.max", "numpy.random.rand", "color.astype"], "function", ["None"], ["", "def", "mask2image", "(", "mask", ":", "np", ".", "array", ",", "format", "=", "\"HWC\"", ")", ":", "\n", "    ", "H", ",", "W", "=", "mask", ".", "shape", "\n", "\n", "canvas", "=", "np", ".", "zeros", "(", "(", "H", ",", "W", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "for", "i", "in", "range", "(", "int", "(", "mask", ".", "max", "(", ")", ")", ")", ":", "\n", "        ", "color", "=", "np", ".", "random", ".", "rand", "(", "1", ",", "1", ",", "3", ")", "*", "255", "\n", "canvas", "+=", "(", "mask", "==", "i", ")", "[", ":", ",", ":", ",", "None", "]", "*", "color", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "", "return", "canvas", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.audio_config.get_audio_config": [[27, 29], ["None"], "function", ["None"], ["def", "get_audio_config", "(", ")", ":", "\n", "    ", "return", "_audio_cfg", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.makeup_dataset.MakeupDataset.__init__": [[31, 61], ["makeup_dataset.MakeupDataset.build_makeup_transform", "paddle.Normalize", "paddle.Normalize", "makeup_dataset.MakeupDataset.build_makeup_transform", "print", "makeup_dataset.MakeupDataset.preprocess", "print", "setattr", "setattr", "setattr", "os.path.join", "open().readlines", "len", "getattr", "open", "getattr"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.makeup_dataset.MakeupDataset.build_makeup_transform", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.makeup_dataset.MakeupDataset.build_makeup_transform", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.preprocess"], ["    ", "def", "__init__", "(", "self", ",", "dataroot", ",", "phase", ",", "trans_size", ",", "cls_list", ")", ":", "\n", "        ", "\"\"\"Initialize psgan dataset class.\n\n        Args:\n            dataroot (str): Directory of dataset.\n            phase (str): 'train' or 'test'.\n        \"\"\"", "\n", "self", ".", "image_path", "=", "dataroot", "\n", "self", ".", "mode", "=", "phase", "\n", "self", ".", "trans_size", "=", "trans_size", "\n", "self", ".", "cls_list", "=", "cls_list", "\n", "self", ".", "transform", "=", "self", ".", "build_makeup_transform", "(", ")", "\n", "\n", "self", ".", "norm", "=", "T", ".", "Normalize", "(", "[", "127.5", ",", "127.5", ",", "127.5", "]", ",", "[", "127.5", ",", "127.5", ",", "127.5", "]", ")", "\n", "self", ".", "transform_mask", "=", "self", ".", "build_makeup_transform", "(", "\"mask\"", ")", "\n", "self", ".", "trans_size", "=", "trans_size", "\n", "\n", "self", ".", "cls_A", "=", "self", ".", "cls_list", "[", "0", "]", "\n", "self", ".", "cls_B", "=", "self", ".", "cls_list", "[", "1", "]", "\n", "for", "cls", "in", "self", ".", "cls_list", ":", "\n", "            ", "setattr", "(", "\n", "self", ",", "cls", "+", "\"_list_path\"", ",", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "image_path", ",", "self", ".", "mode", "+", "'_'", "+", "cls", "+", "\".txt\"", ")", ")", "\n", "setattr", "(", "self", ",", "cls", "+", "\"_lines\"", ",", "\n", "open", "(", "getattr", "(", "self", ",", "cls", "+", "\"_list_path\"", ")", ",", "'r'", ")", ".", "readlines", "(", ")", ")", "\n", "setattr", "(", "self", ",", "\"num_of_\"", "+", "cls", "+", "\"_data\"", ",", "\n", "len", "(", "getattr", "(", "self", ",", "cls", "+", "\"_lines\"", ")", ")", ")", "\n", "", "print", "(", "'Start preprocessing dataset..!'", ")", "\n", "self", ".", "preprocess", "(", ")", "\n", "print", "(", "'Finished preprocessing dataset..!'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.makeup_dataset.MakeupDataset.preprocess": [[62, 77], ["setattr", "setattr", "setattr", "getattr", "random.shuffle", "enumerate", "line.split", "getattr().append", "getattr().append", "getattr().append", "getattr", "getattr", "getattr"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "preprocess", "(", "self", ")", ":", "\n", "        ", "\"\"\"preprocess image\"\"\"", "\n", "for", "cls", "in", "self", ".", "cls_list", ":", "\n", "            ", "setattr", "(", "self", ",", "cls", "+", "\"_filenames\"", ",", "[", "]", ")", "\n", "setattr", "(", "self", ",", "cls", "+", "\"_mask_filenames\"", ",", "[", "]", ")", "\n", "setattr", "(", "self", ",", "cls", "+", "\"_lmks_filenames\"", ",", "[", "]", ")", "\n", "\n", "lines", "=", "getattr", "(", "self", ",", "cls", "+", "\"_lines\"", ")", "\n", "random", ".", "shuffle", "(", "lines", ")", "\n", "\n", "for", "i", ",", "line", "in", "enumerate", "(", "lines", ")", ":", "\n", "                ", "splits", "=", "line", ".", "split", "(", ")", "\n", "getattr", "(", "self", ",", "cls", "+", "\"_filenames\"", ")", ".", "append", "(", "splits", "[", "0", "]", ")", "\n", "getattr", "(", "self", ",", "cls", "+", "\"_mask_filenames\"", ")", ".", "append", "(", "splits", "[", "1", "]", ")", "\n", "getattr", "(", "self", ",", "cls", "+", "\"_lmks_filenames\"", ")", ".", "append", "(", "splits", "[", "2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.makeup_dataset.MakeupDataset.build_makeup_transform": [[78, 89], ["paddle.Compose", "paddle.Compose", "paddle.Resize", "paddle.Resize", "paddle.Resize", "paddle.Resize", "paddle.Transpose", "paddle.Transpose"], "methods", ["None"], ["", "", "", "def", "build_makeup_transform", "(", "self", ",", "pic", "=", "\"image\"", ")", ":", "\n", "        ", "if", "pic", "==", "\"image\"", ":", "\n", "            ", "transform", "=", "T", ".", "Compose", "(", "[", "\n", "T", ".", "Resize", "(", "size", "=", "self", ".", "trans_size", ")", ",", "\n", "T", ".", "Transpose", "(", ")", ",", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "transform", "=", "T", ".", "Resize", "(", "size", "=", "self", ".", "trans_size", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ")", "\n", "\n", "", "return", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.makeup_dataset.MakeupDataset.__getitem__": [[90, 179], ["random.randint", "random.randint", "PIL.Image.open().convert", "PIL.Image.open().convert", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "makeup_dataset.MakeupDataset.transform", "makeup_dataset.MakeupDataset.transform", "cv2.resize", "cv2.resize", "numpy.loadtxt", "numpy.loadtxt", "generate_P_from_lmks", "generate_P_from_lmks", "generate_mask_aug", "generate_mask_aug", "calculate_consis_mask", "calculate_consis_mask", "calculate_consis_mask", "makeup_dataset.MakeupDataset.norm", "makeup_dataset.MakeupDataset.norm", "numpy.float32", "numpy.float32", "numpy.float32", "numpy.float32", "numpy.float32", "numpy.float32", "numpy.float32", "numpy.float32", "numpy.float32", "getattr", "getattr", "getattr", "int", "int", "PIL.Image.open", "PIL.Image.open().convert", "os.path.join", "os.path.join", "print", "makeup_dataset.MakeupDataset.__getitem__", "PIL.Image.open", "PIL.Image.open", "os.path.join", "os.path.join", "os.path.join", "PIL.Image.open", "getattr", "getattr", "getattr", "os.path.join", "getattr", "getattr", "getattr"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.utils.transform", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.utils.transform", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.preprocess.generate_P_from_lmks", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.preprocess.generate_P_from_lmks", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.preprocess.generate_mask_aug", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.preprocess.generate_mask_aug", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.preprocess.calculate_consis_mask", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.preprocess.calculate_consis_mask", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.preprocess.calculate_consis_mask", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.__getitem__"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "\"\"\"Return MANet and MDNet needed params.\n\n        Parameters:\n            index (int)      -- a random integer for data indexing\n\n        Returns a dictionary that contains needed params.\n        \"\"\"", "\n", "try", ":", "\n", "            ", "index_A", "=", "random", ".", "randint", "(", "\n", "0", ",", "getattr", "(", "self", ",", "\"num_of_\"", "+", "self", ".", "cls_A", "+", "\"_data\"", ")", ")", "\n", "index_B", "=", "random", ".", "randint", "(", "\n", "0", ",", "getattr", "(", "self", ",", "\"num_of_\"", "+", "self", ".", "cls_B", "+", "\"_data\"", ")", ")", "\n", "\n", "if", "self", ".", "mode", "==", "'test'", ":", "\n", "                ", "num_b", "=", "getattr", "(", "self", ",", "'num_of_'", "+", "self", ".", "cls_list", "[", "1", "]", "+", "'_data'", ")", "\n", "index_A", "=", "int", "(", "index", "/", "num_b", ")", "\n", "index_B", "=", "int", "(", "index", "%", "num_b", ")", "\n", "", "image_A", "=", "Image", ".", "open", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "image_path", ",", "\n", "getattr", "(", "self", ",", "self", ".", "cls_A", "+", "\n", "\"_filenames\"", ")", "[", "index_A", "]", ")", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "\n", "image_B", "=", "Image", ".", "open", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "image_path", ",", "\n", "getattr", "(", "self", ",", "self", ".", "cls_B", "+", "\n", "\"_filenames\"", ")", "[", "index_B", "]", ")", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "mask_A", "=", "np", ".", "array", "(", "\n", "Image", ".", "open", "(", "\n", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "image_path", ",", "\n", "getattr", "(", "self", ",", "\n", "self", ".", "cls_A", "+", "\"_mask_filenames\"", ")", "[", "index_A", "]", ")", ")", ")", "\n", "mask_B", "=", "np", ".", "array", "(", "\n", "Image", ".", "open", "(", "\n", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "image_path", ",", "\n", "getattr", "(", "self", ",", "self", ".", "cls_B", "+", "\n", "\"_mask_filenames\"", ")", "[", "index_B", "]", ")", ")", ".", "convert", "(", "'L'", ")", ")", "\n", "image_A", "=", "np", ".", "array", "(", "image_A", ")", "\n", "image_B", "=", "np", ".", "array", "(", "image_B", ")", "\n", "\n", "image_A", "=", "self", ".", "transform", "(", "image_A", ")", "\n", "image_B", "=", "self", ".", "transform", "(", "image_B", ")", "\n", "\n", "mask_A", "=", "cv2", ".", "resize", "(", "mask_A", ",", "(", "256", ",", "256", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ")", "\n", "mask_B", "=", "cv2", ".", "resize", "(", "mask_B", ",", "(", "256", ",", "256", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ")", "\n", "\n", "lmks_A", "=", "np", ".", "loadtxt", "(", "\n", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "image_path", ",", "\n", "getattr", "(", "self", ",", "self", ".", "cls_A", "+", "\"_lmks_filenames\"", ")", "[", "index_A", "]", ")", ")", "\n", "lmks_B", "=", "np", ".", "loadtxt", "(", "\n", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "image_path", ",", "\n", "getattr", "(", "self", ",", "self", ".", "cls_B", "+", "\"_lmks_filenames\"", ")", "[", "index_B", "]", ")", ")", "\n", "lmks_A", "=", "lmks_A", "/", "image_A", ".", "shape", "[", ":", "2", "]", "*", "self", ".", "trans_size", "\n", "lmks_B", "=", "lmks_B", "/", "image_B", ".", "shape", "[", ":", "2", "]", "*", "self", ".", "trans_size", "\n", "\n", "P_A", "=", "generate_P_from_lmks", "(", "lmks_A", ",", "self", ".", "trans_size", ",", "\n", "image_A", ".", "shape", "[", "0", "]", ",", "image_A", ".", "shape", "[", "1", "]", ")", "\n", "\n", "P_B", "=", "generate_P_from_lmks", "(", "lmks_B", ",", "self", ".", "trans_size", ",", "\n", "image_B", ".", "shape", "[", "0", "]", ",", "image_B", ".", "shape", "[", "1", "]", ")", "\n", "\n", "mask_A_aug", "=", "generate_mask_aug", "(", "mask_A", ",", "lmks_A", ")", "\n", "mask_B_aug", "=", "generate_mask_aug", "(", "mask_B", ",", "lmks_B", ")", "\n", "\n", "consis_mask", "=", "calculate_consis_mask", "(", "mask_A_aug", ",", "mask_B_aug", ")", "\n", "consis_mask_idt_A", "=", "calculate_consis_mask", "(", "mask_A_aug", ",", "mask_A_aug", ")", "\n", "consis_mask_idt_B", "=", "calculate_consis_mask", "(", "mask_A_aug", ",", "mask_B_aug", ")", "\n", "\n", "", "except", "Exception", "as", "e", ":", "\n", "            ", "print", "(", "e", ")", "\n", "return", "self", ".", "__getitem__", "(", "index", "+", "1", ")", "\n", "", "return", "{", "\n", "'image_A'", ":", "self", ".", "norm", "(", "image_A", ")", ",", "\n", "'image_B'", ":", "self", ".", "norm", "(", "image_B", ")", ",", "\n", "'mask_A'", ":", "np", ".", "float32", "(", "mask_A", ")", ",", "\n", "'mask_B'", ":", "np", ".", "float32", "(", "mask_B", ")", ",", "\n", "'consis_mask'", ":", "np", ".", "float32", "(", "consis_mask", ")", ",", "\n", "'P_A'", ":", "np", ".", "float32", "(", "P_A", ")", ",", "\n", "'P_B'", ":", "np", ".", "float32", "(", "P_B", ")", ",", "\n", "'consis_mask_idt_A'", ":", "np", ".", "float32", "(", "consis_mask_idt_A", ")", ",", "\n", "'consis_mask_idt_B'", ":", "np", ".", "float32", "(", "consis_mask_idt_B", ")", ",", "\n", "'mask_A_aug'", ":", "np", ".", "float32", "(", "mask_A_aug", ")", ",", "\n", "'mask_B_aug'", ":", "np", ".", "float32", "(", "mask_B_aug", ")", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.makeup_dataset.MakeupDataset.__len__": [[181, 196], ["max", "getattr", "getattr", "max", "getattr", "getattr"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "\"\"\"Return the total number of images in the dataset.\n\n        As we have two datasets with potentially different number of images,\n        we take a maximum of\n        \"\"\"", "\n", "if", "self", ".", "mode", "==", "'train'", ":", "\n", "            ", "num_A", "=", "getattr", "(", "self", ",", "'num_of_'", "+", "self", ".", "cls_list", "[", "0", "]", "+", "'_data'", ")", "\n", "num_B", "=", "getattr", "(", "self", ",", "'num_of_'", "+", "self", ".", "cls_list", "[", "1", "]", "+", "'_data'", ")", "\n", "return", "max", "(", "num_A", ",", "num_B", ")", "\n", "", "elif", "self", ".", "mode", "==", "\"test\"", ":", "\n", "            ", "num_A", "=", "getattr", "(", "self", ",", "'num_of_'", "+", "self", ".", "cls_list", "[", "0", "]", "+", "'_data'", ")", "\n", "num_B", "=", "getattr", "(", "self", ",", "'num_of_'", "+", "self", ".", "cls_list", "[", "1", "]", "+", "'_data'", ")", "\n", "return", "num_A", "*", "num_B", "\n", "", "return", "max", "(", "self", ".", "A_size", ",", "self", ".", "B_size", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.mpr_dataset.MPRTrain.__init__": [[27, 46], ["paddle.io.Dataset.__init__", "sorted", "sorted", "len", "os.listdir", "os.listdir", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "mpr_dataset.is_image_file", "mpr_dataset.is_image_file"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.starganv2_dataset.listdir", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.starganv2_dataset.listdir", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.utils.is_image_file", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.utils.is_image_file"], ["    ", "def", "__init__", "(", "self", ",", "rgb_dir", ",", "img_options", "=", "None", ")", ":", "\n", "        ", "super", "(", "MPRTrain", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "inp_files", "=", "sorted", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'input'", ")", ")", ")", "\n", "tar_files", "=", "sorted", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'target'", ")", ")", ")", "\n", "\n", "self", ".", "inp_filenames", "=", "[", "\n", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'input'", ",", "x", ")", "for", "x", "in", "inp_files", "\n", "if", "is_image_file", "(", "x", ")", "\n", "]", "\n", "self", ".", "tar_filenames", "=", "[", "\n", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'target'", ",", "x", ")", "for", "x", "in", "tar_files", "\n", "if", "is_image_file", "(", "x", ")", "\n", "]", "\n", "\n", "self", ".", "img_options", "=", "img_options", "\n", "self", ".", "sizex", "=", "len", "(", "self", ".", "tar_filenames", ")", "# get the size of target", "\n", "\n", "self", ".", "ps", "=", "self", ".", "img_options", "[", "'patch_size'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.mpr_dataset.MPRTrain.__len__": [[47, 49], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "sizex", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.mpr_dataset.MPRTrain.__getitem__": [[50, 121], ["PIL.Image.open", "PIL.Image.open", "random.randint", "random.randint", "random.randint", "random.randint", "random.randint", "random.randint", "random.randint", "random.randint", "paddle.vision.transforms.functional.to_tensor", "paddle.vision.transforms.functional.to_tensor", "random.randint", "random.randint", "random.randint", "random.randint", "random.randint", "random.randint", "random.randint", "random.randint", "random.randint", "random.randint", "random.randint", "random.randint", "numpy.pad", "numpy.pad", "numpy.pad", "numpy.pad", "paddle.vision.transforms.functional.adjust_brightness", "paddle.vision.transforms.functional.adjust_brightness", "paddle.vision.transforms.functional.adjust_saturation", "paddle.vision.transforms.functional.adjust_saturation", "paddle.vision.transforms.functional.vflip", "paddle.vision.transforms.functional.vflip", "os.path.splitext", "paddle.vision.transforms.functional.hflip", "paddle.vision.transforms.functional.hflip", "paddle.vision.transforms.functional.rotate", "paddle.vision.transforms.functional.rotate", "os.path.split", "numpy.random.rand", "numpy.random.rand", "paddle.vision.transforms.functional.rotate", "paddle.vision.transforms.functional.rotate", "paddle.vision.transforms.functional.rotate", "paddle.vision.transforms.functional.rotate", "paddle.vision.transforms.functional.rotate", "paddle.vision.transforms.functional.rotate", "paddle.vision.transforms.functional.vflip", "paddle.vision.transforms.functional.vflip", "paddle.vision.transforms.functional.rotate", "paddle.vision.transforms.functional.rotate", "paddle.vision.transforms.functional.hflip", "paddle.vision.transforms.functional.hflip"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.animegan_predictor.AnimeGANPredictor.adjust_brightness", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.animegan_predictor.AnimeGANPredictor.adjust_brightness"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "index_", "=", "index", "%", "self", ".", "sizex", "\n", "ps", "=", "self", ".", "ps", "\n", "\n", "inp_path", "=", "self", ".", "inp_filenames", "[", "index_", "]", "\n", "tar_path", "=", "self", ".", "tar_filenames", "[", "index_", "]", "\n", "\n", "inp_img", "=", "Image", ".", "open", "(", "inp_path", ")", "\n", "tar_img", "=", "Image", ".", "open", "(", "tar_path", ")", "\n", "\n", "w", ",", "h", "=", "tar_img", ".", "size", "\n", "padw", "=", "ps", "-", "w", "if", "w", "<", "ps", "else", "0", "\n", "padh", "=", "ps", "-", "h", "if", "h", "<", "ps", "else", "0", "\n", "\n", "# Reflect Pad in case image is smaller than patch_size", "\n", "if", "padw", "!=", "0", "or", "padh", "!=", "0", ":", "\n", "            ", "inp_img", "=", "np", ".", "pad", "(", "inp_img", ",", "(", "0", ",", "0", ",", "padw", ",", "padh", ")", ",", "\n", "padding_mode", "=", "'reflect'", ")", "\n", "tar_img", "=", "np", ".", "pad", "(", "tar_img", ",", "(", "0", ",", "0", ",", "padw", ",", "padh", ")", ",", "\n", "padding_mode", "=", "'reflect'", ")", "\n", "\n", "", "aug", "=", "random", ".", "randint", "(", "0", ",", "2", ")", "\n", "if", "aug", "==", "1", ":", "\n", "            ", "inp_img", "=", "adjust_brightness", "(", "inp_img", ",", "1", ")", "\n", "tar_img", "=", "adjust_brightness", "(", "tar_img", ",", "1", ")", "\n", "\n", "", "aug", "=", "random", ".", "randint", "(", "0", ",", "2", ")", "\n", "if", "aug", "==", "1", ":", "\n", "            ", "sat_factor", "=", "1", "+", "(", "0.2", "-", "0.4", "*", "np", ".", "random", ".", "rand", "(", ")", ")", "\n", "inp_img", "=", "adjust_saturation", "(", "inp_img", ",", "sat_factor", ")", "\n", "tar_img", "=", "adjust_saturation", "(", "tar_img", ",", "sat_factor", ")", "\n", "\n", "# Data Augmentations", "\n", "", "if", "aug", "==", "1", ":", "\n", "            ", "inp_img", "=", "vflip", "(", "inp_img", ")", "\n", "tar_img", "=", "vflip", "(", "tar_img", ")", "\n", "", "elif", "aug", "==", "2", ":", "\n", "            ", "inp_img", "=", "hflip", "(", "inp_img", ")", "\n", "tar_img", "=", "hflip", "(", "tar_img", ")", "\n", "", "elif", "aug", "==", "3", ":", "\n", "            ", "inp_img", "=", "rotate", "(", "inp_img", ",", "90", ")", "\n", "tar_img", "=", "rotate", "(", "tar_img", ",", "90", ")", "\n", "", "elif", "aug", "==", "4", ":", "\n", "            ", "inp_img", "=", "rotate", "(", "inp_img", ",", "90", "*", "2", ")", "\n", "tar_img", "=", "rotate", "(", "tar_img", ",", "90", "*", "2", ")", "\n", "", "elif", "aug", "==", "5", ":", "\n", "            ", "inp_img", "=", "rotate", "(", "inp_img", ",", "90", "*", "3", ")", "\n", "tar_img", "=", "rotate", "(", "tar_img", ",", "90", "*", "3", ")", "\n", "", "elif", "aug", "==", "6", ":", "\n", "            ", "inp_img", "=", "rotate", "(", "vflip", "(", "inp_img", ")", ",", "90", ")", "\n", "tar_img", "=", "rotate", "(", "vflip", "(", "tar_img", ")", ",", "90", ")", "\n", "", "elif", "aug", "==", "7", ":", "\n", "            ", "inp_img", "=", "rotate", "(", "hflip", "(", "inp_img", ")", ",", "90", ")", "\n", "tar_img", "=", "rotate", "(", "hflip", "(", "tar_img", ")", ",", "90", ")", "\n", "\n", "", "inp_img", "=", "to_tensor", "(", "inp_img", ")", "\n", "tar_img", "=", "to_tensor", "(", "tar_img", ")", "\n", "\n", "hh", ",", "ww", "=", "tar_img", ".", "shape", "[", "1", "]", ",", "tar_img", ".", "shape", "[", "2", "]", "\n", "\n", "rr", "=", "random", ".", "randint", "(", "0", ",", "hh", "-", "ps", ")", "\n", "cc", "=", "random", ".", "randint", "(", "0", ",", "ww", "-", "ps", ")", "\n", "aug", "=", "random", ".", "randint", "(", "0", ",", "8", ")", "\n", "\n", "# Crop patch", "\n", "inp_img", "=", "inp_img", "[", ":", ",", "rr", ":", "rr", "+", "ps", ",", "cc", ":", "cc", "+", "ps", "]", "\n", "tar_img", "=", "tar_img", "[", ":", ",", "rr", ":", "rr", "+", "ps", ",", "cc", ":", "cc", "+", "ps", "]", "\n", "\n", "filename", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "split", "(", "tar_path", ")", "[", "-", "1", "]", ")", "[", "0", "]", "\n", "\n", "return", "tar_img", ",", "inp_img", ",", "filename", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.mpr_dataset.MPRVal.__init__": [[125, 144], ["paddle.io.Dataset.__init__", "sorted", "sorted", "len", "os.listdir", "os.listdir", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "mpr_dataset.is_image_file", "mpr_dataset.is_image_file"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.starganv2_dataset.listdir", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.starganv2_dataset.listdir", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.utils.is_image_file", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.utils.is_image_file"], ["    ", "def", "__init__", "(", "self", ",", "rgb_dir", ",", "img_options", "=", "None", ",", "rgb_dir2", "=", "None", ")", ":", "\n", "        ", "super", "(", "MPRVal", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "inp_files", "=", "sorted", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'input'", ")", ")", ")", "\n", "tar_files", "=", "sorted", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'target'", ")", ")", ")", "\n", "\n", "self", ".", "inp_filenames", "=", "[", "\n", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'input'", ",", "x", ")", "for", "x", "in", "inp_files", "\n", "if", "is_image_file", "(", "x", ")", "\n", "]", "\n", "self", ".", "tar_filenames", "=", "[", "\n", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'target'", ",", "x", ")", "for", "x", "in", "tar_files", "\n", "if", "is_image_file", "(", "x", ")", "\n", "]", "\n", "\n", "self", ".", "img_options", "=", "img_options", "\n", "self", ".", "sizex", "=", "len", "(", "self", ".", "tar_filenames", ")", "# get the size of target", "\n", "\n", "self", ".", "ps", "=", "self", ".", "img_options", "[", "'patch_size'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.mpr_dataset.MPRVal.__len__": [[145, 147], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "sizex", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.mpr_dataset.MPRVal.__getitem__": [[148, 169], ["PIL.Image.open", "PIL.Image.open", "paddle.vision.transforms.functional.to_tensor", "paddle.vision.transforms.functional.to_tensor", "paddle.vision.transforms.functional.center_crop", "paddle.vision.transforms.functional.center_crop", "os.path.splitext", "os.path.split"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "index_", "=", "index", "%", "self", ".", "sizex", "\n", "ps", "=", "self", ".", "ps", "\n", "\n", "inp_path", "=", "self", ".", "inp_filenames", "[", "index_", "]", "\n", "tar_path", "=", "self", ".", "tar_filenames", "[", "index_", "]", "\n", "\n", "inp_img", "=", "Image", ".", "open", "(", "inp_path", ")", "\n", "tar_img", "=", "Image", ".", "open", "(", "tar_path", ")", "\n", "\n", "# Validate on center crop", "\n", "if", "self", ".", "ps", "is", "not", "None", ":", "\n", "            ", "inp_img", "=", "center_crop", "(", "inp_img", ",", "(", "ps", ",", "ps", ")", ")", "\n", "tar_img", "=", "center_crop", "(", "tar_img", ",", "(", "ps", ",", "ps", ")", ")", "\n", "\n", "", "inp_img", "=", "to_tensor", "(", "inp_img", ")", "\n", "tar_img", "=", "to_tensor", "(", "tar_img", ")", "\n", "\n", "filename", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "split", "(", "tar_path", ")", "[", "-", "1", "]", ")", "[", "0", "]", "\n", "\n", "return", "tar_img", ",", "inp_img", ",", "filename", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.mpr_dataset.MPRTest.__init__": [[173, 183], ["paddle.io.Dataset.__init__", "sorted", "len", "os.listdir", "os.path.join", "mpr_dataset.is_image_file"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.starganv2_dataset.listdir", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.utils.is_image_file"], ["    ", "def", "__init__", "(", "self", ",", "inp_dir", ",", "img_options", ")", ":", "\n", "        ", "super", "(", "MPRTest", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "inp_files", "=", "sorted", "(", "os", ".", "listdir", "(", "inp_dir", ")", ")", "\n", "self", ".", "inp_filenames", "=", "[", "\n", "os", ".", "path", ".", "join", "(", "inp_dir", ",", "x", ")", "for", "x", "in", "inp_files", "if", "is_image_file", "(", "x", ")", "\n", "]", "\n", "\n", "self", ".", "inp_size", "=", "len", "(", "self", ".", "inp_filenames", ")", "\n", "self", ".", "img_options", "=", "img_options", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.mpr_dataset.MPRTest.__len__": [[184, 186], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "inp_size", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.mpr_dataset.MPRTest.__getitem__": [[187, 195], ["PIL.Image.open", "paddle.vision.transforms.functional.to_tensor", "os.path.splitext", "os.path.split"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\n", "        ", "path_inp", "=", "self", ".", "inp_filenames", "[", "index", "]", "\n", "filename", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "split", "(", "path_inp", ")", "[", "-", "1", "]", ")", "[", "0", "]", "\n", "inp", "=", "Image", ".", "open", "(", "path_inp", ")", "\n", "\n", "inp", "=", "to_tensor", "(", "inp", ")", "\n", "return", "inp", ",", "filename", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.mpr_dataset.is_image_file": [[19, 23], ["any", "filename.endswith"], "function", ["None"], ["def", "is_image_file", "(", "filename", ")", ":", "\n", "    ", "return", "any", "(", "\n", "filename", ".", "endswith", "(", "extension", ")", "\n", "for", "extension", "in", "[", "'jpeg'", ",", "'JPEG'", ",", "'jpg'", ",", "'png'", ",", "'JPG'", ",", "'PNG'", ",", "'gif'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.vsr_reds_multiple_gt_dataset.VSRREDSMultipleGTDataset.__init__": [[42, 58], ["base_sr_dataset.BaseDataset.__init__", "str", "str", "str", "vsr_reds_multiple_gt_dataset.VSRREDSMultipleGTDataset.prepare_data_infos"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.empty_dataset.EmptyDataset.prepare_data_infos"], ["def", "__init__", "(", "self", ",", "\n", "lq_folder", ",", "\n", "gt_folder", ",", "\n", "ann_file", ",", "\n", "num_frames", ",", "\n", "preprocess", ",", "\n", "val_partition", "=", "'REDS4'", ",", "\n", "test_mode", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "preprocess", ")", "\n", "self", ".", "lq_folder", "=", "str", "(", "lq_folder", ")", "\n", "self", ".", "gt_folder", "=", "str", "(", "gt_folder", ")", "\n", "self", ".", "ann_file", "=", "str", "(", "ann_file", ")", "\n", "self", ".", "num_frames", "=", "num_frames", "\n", "self", ".", "val_partition", "=", "val_partition", "\n", "self", ".", "test_mode", "=", "test_mode", "\n", "self", ".", "data_infos", "=", "self", ".", "prepare_data_infos", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.vsr_reds_multiple_gt_dataset.VSRREDSMultipleGTDataset.prepare_data_infos": [[59, 93], ["list", "open", "set", "data_infos.append", "ValueError", "dict", "v.strip().split", "range", "v.strip"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "prepare_data_infos", "(", "self", ")", ":", "\n", "        ", "\"\"\"Load annoations for REDS dataset.\n\n        Returns:\n            dict: Returned dict for LQ and GT pairs.\n        \"\"\"", "\n", "# get keys", "\n", "with", "open", "(", "self", ".", "ann_file", ",", "'r'", ")", "as", "fin", ":", "\n", "            ", "keys", "=", "[", "v", ".", "strip", "(", ")", ".", "split", "(", "'/'", ")", "[", "0", "]", "for", "v", "in", "fin", "]", "\n", "", "keys", "=", "list", "(", "set", "(", "keys", ")", ")", "\n", "\n", "if", "self", ".", "val_partition", "==", "'REDS4'", ":", "\n", "            ", "val_partition", "=", "[", "'000'", ",", "'011'", ",", "'015'", ",", "'020'", "]", "\n", "", "elif", "self", ".", "val_partition", "==", "'official'", ":", "\n", "            ", "val_partition", "=", "[", "f'{v:03d}'", "for", "v", "in", "range", "(", "240", ",", "270", ")", "]", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "f'Wrong validation partition {self.val_partition}.'", "\n", "f'Supported ones are [\"official\", \"REDS4\"]'", ")", "\n", "\n", "", "if", "self", ".", "test_mode", ":", "\n", "            ", "keys", "=", "[", "v", "for", "v", "in", "keys", "if", "v", "in", "val_partition", "]", "\n", "", "else", ":", "\n", "            ", "keys", "=", "[", "v", "for", "v", "in", "keys", "if", "v", "not", "in", "val_partition", "]", "\n", "\n", "", "data_infos", "=", "[", "]", "\n", "for", "key", "in", "keys", ":", "\n", "            ", "data_infos", ".", "append", "(", "\n", "dict", "(", "lq_path", "=", "self", ".", "lq_folder", ",", "\n", "gt_path", "=", "self", ".", "gt_folder", ",", "\n", "key", "=", "key", ",", "\n", "sequence_length", "=", "100", ",", "\n", "num_frames", "=", "self", ".", "num_frames", ")", ")", "\n", "\n", "", "return", "data_infos", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.photopen_dataset.PhotoPenDataset.__init__": [[49, 57], ["paddle.io.Dataset.__init__", "os.path.join", "next", "numpy.sort", "os.walk"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "content_root", ",", "load_size", ",", "crop_size", ")", ":", "\n", "        ", "super", "(", "PhotoPenDataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "inst_dir", "=", "os", ".", "path", ".", "join", "(", "content_root", ",", "'train_inst'", ")", "\n", "_", ",", "_", ",", "inst_list", "=", "next", "(", "os", ".", "walk", "(", "inst_dir", ")", ")", "\n", "self", ".", "inst_list", "=", "np", ".", "sort", "(", "inst_list", ")", "\n", "self", ".", "content_root", "=", "content_root", "\n", "self", ".", "load_size", "=", "load_size", "\n", "self", ".", "crop_size", "=", "crop_size", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.photopen_dataset.PhotoPenDataset.__getitem__": [[58, 78], ["PIL.Image.open", "PIL.Image.open", "data_transform.convert", "random.randint", "random.randint", "photopen_dataset.data_transform", "photopen_dataset.data_transform", "os.path.join", "os.path.join", "photopen_dataset.PhotoPenDataset.inst_list[].replace", "int", "int"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.lapstyle_dataset.data_transform", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.lapstyle_dataset.data_transform"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "ins", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "content_root", ",", "'train_inst'", ",", "self", ".", "inst_list", "[", "idx", "]", ")", ")", "\n", "img", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "content_root", ",", "'train_img'", ",", "self", ".", "inst_list", "[", "idx", "]", ".", "replace", "(", "\".png\"", ",", "\".jpg\"", ")", ")", ")", "\n", "img", "=", "img", ".", "convert", "(", "'RGB'", ")", "\n", "\n", "w", ",", "h", "=", "img", ".", "size", "\n", "resize_w", ",", "resize_h", "=", "0", ",", "0", "\n", "if", "w", "<", "h", ":", "\n", "            ", "resize_w", ",", "resize_h", "=", "self", ".", "load_size", ",", "int", "(", "h", "*", "self", ".", "load_size", "/", "w", ")", "\n", "", "else", ":", "\n", "            ", "resize_w", ",", "resize_h", "=", "int", "(", "w", "*", "self", ".", "load_size", "/", "h", ")", ",", "self", ".", "load_size", "\n", "", "left", "=", "random", ".", "randint", "(", "0", ",", "resize_w", "-", "self", ".", "crop_size", ")", "\n", "top", "=", "random", ".", "randint", "(", "0", ",", "resize_h", "-", "self", ".", "crop_size", ")", "\n", "flip", "=", "False", "\n", "\n", "img", "=", "data_transform", "(", "img", ",", "resize_w", ",", "resize_h", ",", "load_size", "=", "self", ".", "load_size", ",", "\n", "pos", "=", "[", "left", ",", "top", ",", "left", "+", "self", ".", "crop_size", ",", "top", "+", "self", ".", "crop_size", "]", ",", "flip", "=", "flip", ",", "is_image", "=", "True", ")", "\n", "ins", "=", "data_transform", "(", "ins", ",", "resize_w", ",", "resize_h", ",", "load_size", "=", "self", ".", "load_size", ",", "\n", "pos", "=", "[", "left", ",", "top", ",", "left", "+", "self", ".", "crop_size", ",", "top", "+", "self", ".", "crop_size", "]", ",", "flip", "=", "flip", ",", "is_image", "=", "False", ")", "\n", "return", "{", "'img'", ":", "img", ",", "'ins'", ":", "ins", ",", "'img_path'", ":", "self", ".", "inst_list", "[", "idx", "]", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.photopen_dataset.PhotoPenDataset.__len__": [[79, 81], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "inst_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.photopen_dataset.PhotoPenDataset.name": [[82, 84], ["None"], "methods", ["None"], ["", "def", "name", "(", "self", ")", ":", "\n", "        ", "return", "'PhotoPenDataset'", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.photopen_dataset.PhotoPenDataset_test.__init__": [[87, 95], ["paddle.io.Dataset.__init__", "os.path.join", "next", "numpy.sort", "os.walk"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "content_root", ",", "load_size", ",", "crop_size", ")", ":", "\n", "        ", "super", "(", "PhotoPenDataset_test", ",", "self", ")", ".", "__init__", "(", ")", "\n", "inst_dir", "=", "os", ".", "path", ".", "join", "(", "content_root", ",", "'test_inst'", ")", "\n", "_", ",", "_", ",", "inst_list", "=", "next", "(", "os", ".", "walk", "(", "inst_dir", ")", ")", "\n", "self", ".", "inst_list", "=", "np", ".", "sort", "(", "inst_list", ")", "\n", "self", ".", "content_root", "=", "content_root", "\n", "self", ".", "load_size", "=", "load_size", "\n", "self", ".", "crop_size", "=", "crop_size", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.photopen_dataset.PhotoPenDataset_test.__getitem__": [[96, 112], ["PIL.Image.open", "random.randint", "random.randint", "photopen_dataset.data_transform", "os.path.join", "int", "int"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.lapstyle_dataset.data_transform"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "ins", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "content_root", ",", "'test_inst'", ",", "self", ".", "inst_list", "[", "idx", "]", ")", ")", "\n", "\n", "w", ",", "h", "=", "ins", ".", "size", "\n", "resize_w", ",", "resize_h", "=", "0", ",", "0", "\n", "if", "w", "<", "h", ":", "\n", "            ", "resize_w", ",", "resize_h", "=", "self", ".", "load_size", ",", "int", "(", "h", "*", "self", ".", "load_size", "/", "w", ")", "\n", "", "else", ":", "\n", "            ", "resize_w", ",", "resize_h", "=", "int", "(", "w", "*", "self", ".", "load_size", "/", "h", ")", ",", "self", ".", "load_size", "\n", "", "left", "=", "random", ".", "randint", "(", "0", ",", "resize_w", "-", "self", ".", "crop_size", ")", "\n", "top", "=", "random", ".", "randint", "(", "0", ",", "resize_h", "-", "self", ".", "crop_size", ")", "\n", "flip", "=", "False", "\n", "\n", "ins", "=", "data_transform", "(", "ins", ",", "resize_w", ",", "resize_h", ",", "load_size", "=", "self", ".", "load_size", ",", "\n", "pos", "=", "[", "left", ",", "top", ",", "left", "+", "self", ".", "crop_size", ",", "top", "+", "self", ".", "crop_size", "]", ",", "flip", "=", "flip", ",", "is_image", "=", "False", ")", "\n", "return", "{", "'ins'", ":", "ins", ",", "'img_path'", ":", "self", ".", "inst_list", "[", "idx", "]", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.photopen_dataset.PhotoPenDataset_test.__len__": [[113, 115], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "inst_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.photopen_dataset.PhotoPenDataset_test.name": [[116, 118], ["None"], "methods", ["None"], ["", "def", "name", "(", "self", ")", ":", "\n", "        ", "return", "'PhotoPenDataset'", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.photopen_dataset.data_transform": [[30, 45], ["img.resize.crop", "numpy.array", "numpy.transpose().astype", "img.resize", "img.resize", "ImageOps.mirror", "numpy.expand_dims", "len", "numpy.transpose"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.utils.crop", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize"], ["def", "data_transform", "(", "img", ",", "resize_w", ",", "resize_h", ",", "load_size", "=", "286", ",", "pos", "=", "[", "0", ",", "0", ",", "256", ",", "256", "]", ",", "flip", "=", "True", ",", "is_image", "=", "True", ")", ":", "\n", "    ", "if", "is_image", ":", "\n", "        ", "resized", "=", "img", ".", "resize", "(", "(", "resize_w", ",", "resize_h", ")", ",", "Image", ".", "BICUBIC", ")", "\n", "", "else", ":", "\n", "        ", "resized", "=", "img", ".", "resize", "(", "(", "resize_w", ",", "resize_h", ")", ",", "Image", ".", "NEAREST", ")", "\n", "", "croped", "=", "resized", ".", "crop", "(", "(", "pos", "[", "0", "]", ",", "pos", "[", "1", "]", ",", "pos", "[", "2", "]", ",", "pos", "[", "3", "]", ")", ")", "\n", "fliped", "=", "ImageOps", ".", "mirror", "(", "croped", ")", "if", "flip", "else", "croped", "\n", "fliped", "=", "np", ".", "array", "(", "fliped", ")", "# transform to numpy array", "\n", "expanded", "=", "np", ".", "expand_dims", "(", "fliped", ",", "2", ")", "if", "len", "(", "fliped", ".", "shape", ")", "<", "3", "else", "fliped", "\n", "transposed", "=", "np", ".", "transpose", "(", "expanded", ",", "(", "2", ",", "0", ",", "1", ")", ")", ".", "astype", "(", "'float32'", ")", "\n", "if", "is_image", ":", "\n", "        ", "normalized", "=", "transposed", "/", "255.", "*", "2.", "-", "1.", "\n", "", "else", ":", "\n", "        ", "normalized", "=", "transposed", "\n", "", "return", "normalized", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.vsr_reds_dataset.VSRREDSDataset.__init__": [[47, 65], ["base_sr_dataset.BaseDataset.__init__", "str", "str", "str", "vsr_reds_dataset.VSRREDSDataset.prepare_data_infos"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.empty_dataset.EmptyDataset.prepare_data_infos"], ["def", "__init__", "(", "self", ",", "\n", "lq_folder", ",", "\n", "gt_folder", ",", "\n", "ann_file", ",", "\n", "num_frames", ",", "\n", "preprocess", ",", "\n", "val_partition", "=", "'REDS4'", ",", "\n", "test_mode", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "preprocess", ")", "\n", "assert", "num_frames", "%", "2", "==", "1", ",", "(", "f'num_frames should be odd numbers, '", "\n", "f'but received {num_frames }.'", ")", "\n", "self", ".", "lq_folder", "=", "str", "(", "lq_folder", ")", "\n", "self", ".", "gt_folder", "=", "str", "(", "gt_folder", ")", "\n", "self", ".", "ann_file", "=", "str", "(", "ann_file", ")", "\n", "self", ".", "num_frames", "=", "num_frames", "\n", "self", ".", "val_partition", "=", "val_partition", "\n", "self", ".", "test_mode", "=", "test_mode", "\n", "self", ".", "data_infos", "=", "self", ".", "prepare_data_infos", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.vsr_reds_dataset.VSRREDSDataset.prepare_data_infos": [[66, 98], ["open", "data_infos.append", "ValueError", "dict", "v.strip().split", "range", "v.strip", "v.split", "v.split"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "prepare_data_infos", "(", "self", ")", ":", "\n", "        ", "\"\"\"Load annoations for REDS dataset.\n        Returns:\n            dict: Returned dict for LQ and GT pairs.\n        \"\"\"", "\n", "# get keys", "\n", "with", "open", "(", "self", ".", "ann_file", ",", "'r'", ")", "as", "fin", ":", "\n", "            ", "keys", "=", "[", "v", ".", "strip", "(", ")", ".", "split", "(", "'.'", ")", "[", "0", "]", "for", "v", "in", "fin", "]", "\n", "\n", "", "if", "self", ".", "val_partition", "==", "'REDS4'", ":", "\n", "            ", "val_partition", "=", "[", "'000'", ",", "'011'", ",", "'015'", ",", "'020'", "]", "\n", "", "elif", "self", ".", "val_partition", "==", "'official'", ":", "\n", "            ", "val_partition", "=", "[", "f'{v:03d}'", "for", "v", "in", "range", "(", "240", ",", "270", ")", "]", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "f'Wrong validation partition {self.val_partition}.'", "\n", "f'Supported ones are [\"official\", \"REDS4\"]'", ")", "\n", "\n", "", "if", "self", ".", "test_mode", ":", "\n", "            ", "keys", "=", "[", "v", "for", "v", "in", "keys", "if", "v", ".", "split", "(", "'/'", ")", "[", "0", "]", "in", "val_partition", "]", "\n", "", "else", ":", "\n", "            ", "keys", "=", "[", "v", "for", "v", "in", "keys", "if", "v", ".", "split", "(", "'/'", ")", "[", "0", "]", "not", "in", "val_partition", "]", "\n", "\n", "", "data_infos", "=", "[", "]", "\n", "for", "key", "in", "keys", ":", "\n", "            ", "data_infos", ".", "append", "(", "\n", "dict", "(", "lq_path", "=", "self", ".", "lq_folder", ",", "\n", "gt_path", "=", "self", ".", "gt_folder", ",", "\n", "key", "=", "key", ",", "\n", "max_frame_num", "=", "100", ",", "\n", "num_frames", "=", "self", ".", "num_frames", ")", ")", "\n", "\n", "", "return", "data_infos", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.firstorder_dataset.FirstOrderDataset.__init__": [[23, 77], ["paddle.io.Dataset.__init__", "firstorder_dataset.FramesDataset", "list", "firstorder_dataset.DatasetRepeater", "len", "enumerate", "tqdm.tqdm", "tqdm.tqdm", "tqdm.tqdm.close", "i.with_suffix", "firstorder_dataset.FirstOrderDataset.frameDataset.root_dir.joinpath().is_dir", "multiprocessing.Pool", "len", "pl.map", "tqdm.tqdm.update", "firstorder_dataset.FirstOrderDataset.frameDataset.root_dir.joinpath", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.close", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update"], ["    ", "def", "__init__", "(", "self", ",", "**", "cfg", ")", ":", "\n", "        ", "\"\"\"Initialize FirstOrder dataset class.\n\n        Args:\n            dataroot (str): Directory of dataset.\n            phase (str): train or test\n            num_repeats (int): Number for datasets to repeat\n            time_flip (bool): whether to exchange the driving image and source image randomly\n            batch_size (int): dataset batch size\n            id_sampling (bool): whether to sample person's id\n            frame_shape (list): image shape\n            create_frames_folder (bool): if the format of your input datasets is '.mp4', \\\n                                         you can choose whether to save it with images\n            num_workers (int): dataset\n        \"\"\"", "\n", "super", "(", "FirstOrderDataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cfg", "=", "cfg", "\n", "self", ".", "frameDataset", "=", "FramesDataset", "(", "self", ".", "cfg", ")", "\n", "\n", "# create frames folder before 'DatasetRepeater'", "\n", "if", "self", ".", "cfg", "[", "'create_frames_folder'", "]", ":", "\n", "            ", "file_idx_set", "=", "[", "\n", "idx", "for", "idx", ",", "path", "in", "enumerate", "(", "self", ".", "frameDataset", ".", "videos", ")", "\n", "if", "not", "self", ".", "frameDataset", ".", "root_dir", ".", "joinpath", "(", "path", ")", ".", "is_dir", "(", ")", "\n", "]", "\n", "file_idx_set", "=", "list", "(", "file_idx_set", ")", "\n", "if", "len", "(", "file_idx_set", ")", "!=", "0", ":", "\n", "                ", "if", "POOL_SIZE", "==", "0", ":", "\n", "                    ", "for", "idx", "in", "tqdm", ".", "tqdm", "(", "file_idx_set", ",", "\n", "desc", "=", "'Extracting frames'", ")", ":", "\n", "                        ", "_", "=", "self", ".", "frameDataset", "[", "idx", "]", "\n", "", "", "else", ":", "\n", "# multiprocessing", "\n", "                    ", "bar", "=", "tqdm", ".", "tqdm", "(", "total", "=", "len", "(", "file_idx_set", ")", ",", "\n", "desc", "=", "'Extracting frames'", ")", "\n", "with", "Pool", "(", "POOL_SIZE", ")", "as", "pl", ":", "\n", "                        ", "_p", "=", "0", "\n", "while", "_p", "<=", "len", "(", "file_idx_set", ")", "-", "1", ":", "\n", "                            ", "_", "=", "pl", ".", "map", "(", "self", ".", "frameDataset", ".", "__getitem__", ",", "\n", "file_idx_set", "[", "_p", ":", "_p", "+", "POOL_SIZE", "*", "2", "]", ")", "\n", "_p", "=", "_p", "+", "POOL_SIZE", "*", "2", "\n", "bar", ".", "update", "(", "POOL_SIZE", "*", "2", ")", "\n", "", "", "bar", ".", "close", "(", ")", "\n", "\n", "# rewrite video path", "\n", "", "self", ".", "frameDataset", ".", "videos", "=", "[", "\n", "i", ".", "with_suffix", "(", "''", ")", "for", "i", "in", "self", ".", "frameDataset", ".", "videos", "\n", "]", "\n", "\n", "", "", "if", "self", ".", "cfg", "[", "'phase'", "]", "==", "'train'", ":", "\n", "            ", "self", ".", "outDataset", "=", "DatasetRepeater", "(", "self", ".", "frameDataset", ",", "\n", "self", ".", "cfg", "[", "'num_repeats'", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "outDataset", "=", "self", ".", "frameDataset", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.firstorder_dataset.FirstOrderDataset.__len__": [[78, 80], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "outDataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.firstorder_dataset.FirstOrderDataset.__getitem__": [[81, 83], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "return", "self", ".", "outDataset", "[", "idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.firstorder_dataset.FramesDataset.__init__": [[141, 173], ["pathlib.Path", "tuple", "cfg.setdefault", "firstorder_dataset.FramesDataset.root_dir.joinpath().exists", "firstorder_dataset.FramesDataset.root_dir.joinpath().exists", "logging.info", "list", "firstorder_dataset.FramesDataset.root_dir.joinpath", "list", "list", "firstorder_dataset.FramesDataset.root_dir.joinpath().iterdir", "preprocess.builder.build_transforms", "firstorder_dataset.FramesDataset.root_dir.joinpath", "firstorder_dataset.FramesDataset.root_dir.joinpath", "firstorder_dataset.FramesDataset.root_dir.joinpath().iterdir", "video.name.split", "firstorder_dataset.FramesDataset.root_dir.joinpath().iterdir", "firstorder_dataset.FramesDataset.root_dir.joinpath", "firstorder_dataset.FramesDataset.root_dir.joinpath", "firstorder_dataset.FramesDataset.root_dir.joinpath"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.builder.build_transforms"], ["def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "self", ".", "root_dir", "=", "Path", "(", "cfg", "[", "'dataroot'", "]", ")", "\n", "self", ".", "videos", "=", "None", "\n", "self", ".", "frame_shape", "=", "tuple", "(", "cfg", "[", "'frame_shape'", "]", ")", "\n", "self", ".", "id_sampling", "=", "cfg", "[", "'id_sampling'", "]", "\n", "self", ".", "time_flip", "=", "cfg", "[", "'time_flip'", "]", "\n", "self", ".", "is_train", "=", "True", "if", "cfg", "[", "'phase'", "]", "==", "'train'", "else", "False", "\n", "self", ".", "pairs_list", "=", "cfg", ".", "setdefault", "(", "'pairs_list'", ",", "None", ")", "\n", "self", ".", "create_frames_folder", "=", "cfg", "[", "'create_frames_folder'", "]", "\n", "self", ".", "transform", "=", "None", "\n", "random_seed", "=", "0", "\n", "assert", "self", ".", "root_dir", ".", "joinpath", "(", "'train'", ")", ".", "exists", "(", ")", "\n", "assert", "self", ".", "root_dir", ".", "joinpath", "(", "'test'", ")", ".", "exists", "(", ")", "\n", "logging", ".", "info", "(", "\"Use predefined train-test split.\"", ")", "\n", "if", "self", ".", "id_sampling", ":", "\n", "            ", "train_videos", "=", "{", "\n", "video", ".", "name", ".", "split", "(", "'#'", ")", "[", "0", "]", "\n", "for", "video", "in", "self", ".", "root_dir", ".", "joinpath", "(", "'train'", ")", ".", "iterdir", "(", ")", "\n", "}", "\n", "train_videos", "=", "list", "(", "train_videos", ")", "\n", "", "else", ":", "\n", "            ", "train_videos", "=", "list", "(", "self", ".", "root_dir", ".", "joinpath", "(", "'train'", ")", ".", "iterdir", "(", ")", ")", "\n", "", "test_videos", "=", "list", "(", "self", ".", "root_dir", ".", "joinpath", "(", "'test'", ")", ".", "iterdir", "(", ")", ")", "\n", "self", ".", "root_dir", "=", "self", ".", "root_dir", ".", "joinpath", "(", "\n", "'train'", "if", "self", ".", "is_train", "else", "'test'", ")", "\n", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "self", ".", "videos", "=", "train_videos", "\n", "self", ".", "transform", "=", "build_transforms", "(", "cfg", "[", "'transforms'", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "videos", "=", "test_videos", "\n", "self", ".", "transform", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.firstorder_dataset.FramesDataset.__len__": [[174, 176], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "videos", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.firstorder_dataset.FramesDataset.__getitem__": [[177, 244], ["pathlib.Path", "pathlib.Path.is_dir", "sorted", "len", "numpy.sort", "len", "video.transpose", "numpy.random.choice", "pathlib.Path.iterdir", "numpy.random.choice", "imageio.imread", "firstorder_dataset.read_video", "pathlib.Path.with_suffix", "firstorder_dataset.read_video", "numpy.sort", "range", "firstorder_dataset.FramesDataset.transform", "driving.transpose", "source.transpose", "numpy.stack().astype", "glob.glob", "str", "numpy.random.choice", "numpy.tile", "len", "tuple", "t[].transpose().astype", "t[].transpose().astype", "numpy.array", "numpy.array", "numpy.random.rand", "os.path.join", "int", "numpy.tile", "numpy.stack", "t[].transpose", "t[].transpose", "x.with_suffix"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.imread", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.firstorder_dataset.read_video", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.firstorder_dataset.read_video", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.utils.transform"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "self", ".", "is_train", "and", "self", ".", "id_sampling", ":", "\n", "            ", "name", "=", "self", ".", "videos", "[", "idx", "]", "\n", "path", "=", "Path", "(", "\n", "np", ".", "random", ".", "choice", "(", "\n", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root_dir", ",", "name", "+", "'*.mp4'", ")", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "path", "=", "self", ".", "videos", "[", "idx", "]", "\n", "", "video_name", "=", "path", ".", "name", "\n", "if", "self", ".", "is_train", "and", "path", ".", "is_dir", "(", ")", ":", "\n", "            ", "frames", "=", "sorted", "(", "path", ".", "iterdir", "(", ")", ",", "\n", "key", "=", "lambda", "x", ":", "int", "(", "x", ".", "with_suffix", "(", "''", ")", ".", "name", ")", ")", "\n", "num_frames", "=", "len", "(", "frames", ")", "\n", "frame_idx", "=", "np", ".", "sort", "(", "\n", "np", ".", "random", ".", "choice", "(", "num_frames", ",", "replace", "=", "True", ",", "size", "=", "2", ")", ")", "\n", "video_array", "=", "[", "imread", "(", "str", "(", "frames", "[", "idx", "]", ")", ")", "for", "idx", "in", "frame_idx", "]", "\n", "", "else", ":", "\n", "            ", "if", "self", ".", "create_frames_folder", ":", "\n", "                ", "video_array", "=", "read_video", "(", "path", ",", "\n", "frame_shape", "=", "self", ".", "frame_shape", ",", "\n", "saveto", "=", "'folder'", ")", "\n", "self", ".", "videos", "[", "idx", "]", "=", "path", ".", "with_suffix", "(", "\n", "''", ")", "# rename /xx/xx/xx.gif -> /xx/xx/xx", "\n", "", "else", ":", "\n", "                ", "video_array", "=", "read_video", "(", "path", ",", "\n", "frame_shape", "=", "self", ".", "frame_shape", ",", "\n", "saveto", "=", "None", ")", "\n", "", "num_frames", "=", "len", "(", "video_array", ")", "\n", "frame_idx", "=", "np", ".", "sort", "(", "\n", "np", ".", "random", ".", "choice", "(", "\n", "num_frames", ",", "replace", "=", "True", ",", "\n", "size", "=", "2", ")", ")", "if", "self", ".", "is_train", "else", "range", "(", "num_frames", ")", "\n", "video_array", "=", "[", "video_array", "[", "i", "]", "for", "i", "in", "frame_idx", "]", "\n", "# convert to 3-channel image", "\n", "", "if", "video_array", "[", "0", "]", ".", "shape", "[", "-", "1", "]", "==", "4", ":", "\n", "            ", "video_array", "=", "[", "i", "[", "...", ",", ":", "3", "]", "for", "i", "in", "video_array", "]", "\n", "", "elif", "video_array", "[", "0", "]", ".", "shape", "[", "-", "1", "]", "==", "1", ":", "\n", "            ", "video_array", "=", "[", "np", ".", "tile", "(", "i", ",", "(", "1", ",", "1", ",", "3", ")", ")", "for", "i", "in", "video_array", "]", "\n", "", "elif", "len", "(", "video_array", "[", "0", "]", ".", "shape", ")", "==", "2", ":", "\n", "            ", "video_array", "=", "[", "\n", "np", ".", "tile", "(", "i", "[", "...", ",", "np", ".", "newaxis", "]", ",", "(", "1", ",", "1", ",", "3", ")", ")", "for", "i", "in", "video_array", "\n", "]", "\n", "", "out", "=", "{", "}", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "if", "self", ".", "transform", "is", "not", "None", ":", "#modify", "\n", "                ", "t", "=", "self", ".", "transform", "(", "tuple", "(", "video_array", ")", ")", "\n", "out", "[", "'driving'", "]", "=", "t", "[", "0", "]", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", ".", "astype", "(", "\n", "np", ".", "float32", ")", "/", "255.0", "\n", "out", "[", "'source'", "]", "=", "t", "[", "1", "]", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", ".", "astype", "(", "\n", "np", ".", "float32", ")", "/", "255.0", "\n", "", "else", ":", "\n", "                ", "source", "=", "np", ".", "array", "(", "video_array", "[", "0", "]", ",", "\n", "dtype", "=", "'float32'", ")", "/", "255.0", "# shape is [H, W, C]", "\n", "driving", "=", "np", ".", "array", "(", "\n", "video_array", "[", "1", "]", ",", "\n", "dtype", "=", "'float32'", ")", "/", "255.0", "# shape is [H, W, C]", "\n", "out", "[", "'driving'", "]", "=", "driving", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n", "out", "[", "'source'", "]", "=", "source", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n", "", "if", "self", ".", "time_flip", "and", "np", ".", "random", ".", "rand", "(", ")", "<", "0.5", ":", "#modify", "\n", "                ", "buf", "=", "out", "[", "'driving'", "]", "\n", "out", "[", "'driving'", "]", "=", "out", "[", "'source'", "]", "\n", "out", "[", "'source'", "]", "=", "buf", "\n", "", "", "else", ":", "\n", "            ", "video", "=", "np", ".", "stack", "(", "video_array", ",", "axis", "=", "0", ")", ".", "astype", "(", "np", ".", "float32", ")", "/", "255.0", "\n", "out", "[", "'video'", "]", "=", "video", ".", "transpose", "(", "3", ",", "0", ",", "1", ",", "2", ")", "\n", "", "out", "[", "'name'", "]", "=", "video_name", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.firstorder_dataset.FramesDataset.get_sample": [[245, 247], ["firstorder_dataset.FramesDataset.__getitem__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.__getitem__"], ["", "def", "get_sample", "(", "self", ",", "idx", ")", ":", "\n", "        ", "return", "self", ".", "__getitem__", "(", "idx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.firstorder_dataset.DatasetRepeater.__init__": [[253, 256], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "dataset", ",", "num_repeats", "=", "100", ")", ":", "\n", "        ", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "num_repeats", "=", "num_repeats", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.firstorder_dataset.DatasetRepeater.__len__": [[257, 259], ["firstorder_dataset.DatasetRepeater.dataset.__len__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.IterLoader.__len__"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "num_repeats", "*", "self", ".", "dataset", ".", "__len__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.firstorder_dataset.DatasetRepeater.__getitem__": [[260, 262], ["firstorder_dataset.DatasetRepeater.dataset.__len__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.IterLoader.__len__"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "return", "self", ".", "dataset", "[", "idx", "%", "self", ".", "dataset", ".", "__len__", "(", ")", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.firstorder_dataset.read_video": [[85, 131], ["tuple", "name.is_dir", "sorted", "numpy.array", "name.iterdir", "name.suffix.lower", "numpy.asarray", "enumerate", "numpy.asarray", "Exception", "imageio.imread", "imageio.mimread", "cv2.resize", "np.asarray.append", "name.with_suffix", "enumerate", "name.unlink", "int", "logging.error", "cv2.resize.astype", "name.with_suffix.mkdir", "cv2.imwrite", "numpy.tile", "len", "str", "x.with_suffix", "numpy.tile", "name.with_suffix.joinpath", "str", "str"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.imread", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "", "def", "read_video", "(", "name", ":", "Path", ",", "frame_shape", "=", "tuple", "(", "[", "256", ",", "256", ",", "3", "]", ")", ",", "saveto", "=", "'folder'", ")", ":", "\n", "    ", "\"\"\"\n    Read video which can be:\n      - an image of concatenated frames\n      - '.mp4' and'.gif'\n      - folder with videos\n    \"\"\"", "\n", "if", "name", ".", "is_dir", "(", ")", ":", "\n", "        ", "frames", "=", "sorted", "(", "name", ".", "iterdir", "(", ")", ",", "\n", "key", "=", "lambda", "x", ":", "int", "(", "x", ".", "with_suffix", "(", "''", ")", ".", "name", ")", ")", "\n", "video_array", "=", "np", ".", "array", "(", "[", "imread", "(", "path", ")", "for", "path", "in", "frames", "]", ",", "\n", "dtype", "=", "'float32'", ")", "\n", "return", "video_array", "\n", "", "elif", "name", ".", "suffix", ".", "lower", "(", ")", "in", "[", "'.gif'", ",", "'.mp4'", ",", "'.mov'", "]", ":", "\n", "        ", "try", ":", "\n", "            ", "video", "=", "mimread", "(", "name", ",", "memtest", "=", "False", ")", "\n", "", "except", "Exception", "as", "err", ":", "\n", "            ", "logging", ".", "error", "(", "'DataLoading File:%s Msg:%s'", "%", "(", "str", "(", "name", ")", ",", "str", "(", "err", ")", ")", ")", "\n", "return", "None", "\n", "\n", "# convert to 3-channel image", "\n", "", "if", "video", "[", "0", "]", ".", "shape", "[", "-", "1", "]", "==", "4", ":", "\n", "            ", "video", "=", "[", "i", "[", "...", ",", ":", "3", "]", "for", "i", "in", "video", "]", "\n", "", "elif", "video", "[", "0", "]", ".", "shape", "[", "-", "1", "]", "==", "1", ":", "\n", "            ", "video", "=", "[", "np", ".", "tile", "(", "i", ",", "(", "1", ",", "1", ",", "3", ")", ")", "for", "i", "in", "video", "]", "\n", "", "elif", "len", "(", "video", "[", "0", "]", ".", "shape", ")", "==", "2", ":", "\n", "            ", "video", "=", "[", "np", ".", "tile", "(", "i", "[", "...", ",", "np", ".", "newaxis", "]", ",", "(", "1", ",", "1", ",", "3", ")", ")", "for", "i", "in", "video", "]", "\n", "", "video_array", "=", "np", ".", "asarray", "(", "video", ")", "\n", "video_array_reshape", "=", "[", "]", "\n", "for", "idx", ",", "img", "in", "enumerate", "(", "video_array", ")", ":", "\n", "            ", "img", "=", "cv2", ".", "resize", "(", "img", ",", "(", "frame_shape", "[", "0", "]", ",", "frame_shape", "[", "1", "]", ")", ")", "\n", "video_array_reshape", ".", "append", "(", "img", ".", "astype", "(", "np", ".", "uint8", ")", ")", "\n", "", "video_array_reshape", "=", "np", ".", "asarray", "(", "video_array_reshape", ")", "\n", "\n", "if", "saveto", "==", "'folder'", ":", "\n", "            ", "sub_dir", "=", "name", ".", "with_suffix", "(", "''", ")", "\n", "try", ":", "\n", "                ", "sub_dir", ".", "mkdir", "(", ")", "\n", "", "except", "FileExistsError", ":", "\n", "                ", "pass", "\n", "", "for", "idx", ",", "img", "in", "enumerate", "(", "video_array_reshape", ")", ":", "\n", "                ", "cv2", ".", "imwrite", "(", "str", "(", "sub_dir", ".", "joinpath", "(", "'%i.png'", "%", "idx", ")", ")", ",", "img", "[", ":", ",", ":", ",", "[", "2", ",", "1", ",", "0", "]", "]", ")", "\n", "", "name", ".", "unlink", "(", ")", "\n", "", "return", "video_array_reshape", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"Unknown dataset file extensions  %s\"", "%", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.vsr_folder_dataset.VSRFolderDataset.__init__": [[41, 55], ["base_sr_dataset.BaseDataset.__init__", "str", "str", "vsr_folder_dataset.VSRFolderDataset.prepare_data_infos"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.empty_dataset.EmptyDataset.prepare_data_infos"], ["def", "__init__", "(", "self", ",", "\n", "lq_folder", ",", "\n", "gt_folder", ",", "\n", "preprocess", ",", "\n", "num_frames", "=", "None", ",", "\n", "times", "=", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "preprocess", ")", "\n", "\n", "self", ".", "lq_folder", "=", "str", "(", "lq_folder", ")", "\n", "self", ".", "gt_folder", "=", "str", "(", "gt_folder", ")", "\n", "self", ".", "num_frames", "=", "num_frames", "\n", "self", ".", "times", "=", "times", "\n", "\n", "self", ".", "data_infos", "=", "self", ".", "prepare_data_infos", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.vsr_folder_dataset.VSRFolderDataset.prepare_data_infos": [[56, 75], ["sorted", "glob.glob", "len", "data_infos.append", "os.path.join", "glob.glob", "dict", "os.path.join", "sequence.replace"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "prepare_data_infos", "(", "self", ")", ":", "\n", "\n", "        ", "sequences", "=", "sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "self", ".", "lq_folder", ",", "'*'", ")", ")", ")", "\n", "sep", "=", "os", ".", "path", ".", "sep", "\n", "\n", "data_infos", "=", "[", "]", "\n", "for", "sequence", "in", "sequences", ":", "\n", "            ", "sequence_length", "=", "len", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "sequence", ",", "'*.png'", ")", ")", ")", "\n", "if", "self", ".", "num_frames", "is", "None", ":", "\n", "                ", "num_frames", "=", "sequence_length", "\n", "", "else", ":", "\n", "                ", "num_frames", "=", "self", ".", "num_frames", "\n", "", "data_infos", ".", "append", "(", "\n", "dict", "(", "lq_path", "=", "self", ".", "lq_folder", ",", "\n", "gt_path", "=", "self", ".", "gt_folder", ",", "\n", "key", "=", "sequence", ".", "replace", "(", "f'{self.lq_folder}'", "+", "sep", ",", "''", ")", ",", "\n", "num_frames", "=", "num_frames", ",", "\n", "sequence_length", "=", "sequence_length", ")", ")", "\n", "", "return", "data_infos", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.animeganv2_dataset.AnimeGANV2Dataset.__init__": [[30, 70], ["preprocess.builder.build_transforms", "preprocess.builder.build_transforms", "preprocess.builder.build_transforms", "os.path.join", "os.path.join", "os.path.join", "image_folder.ImageFolder", "image_folder.ImageFolder", "image_folder.ImageFolder", "image_folder.ImageFolder", "max", "animeganv2_dataset.AnimeGANV2Dataset.reshuffle", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.builder.build_transforms", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.builder.build_transforms", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.builder.build_transforms", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.animeganv2_dataset.AnimeGANV2Dataset.reshuffle"], ["def", "__init__", "(", "self", ",", "\n", "dataroot", ",", "\n", "style", ",", "\n", "transform_real", "=", "None", ",", "\n", "transform_anime", "=", "None", ",", "\n", "transform_gray", "=", "None", ")", ":", "\n", "        ", "\"\"\"Initialize this dataset class.\n\n        Args:\n            dataroot (dict): Directory of dataset.\n\n        \"\"\"", "\n", "self", ".", "root", "=", "dataroot", "\n", "self", ".", "style", "=", "style", "\n", "\n", "self", ".", "transform_real", "=", "build_transforms", "(", "transform_real", ")", "\n", "self", ".", "transform_anime", "=", "build_transforms", "(", "transform_anime", ")", "\n", "self", ".", "transform_gray", "=", "build_transforms", "(", "transform_gray", ")", "\n", "\n", "self", ".", "real_root", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'train_photo'", ")", "\n", "self", ".", "anime_root", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "f'{self.style}'", ",", "'style'", ")", "\n", "self", ".", "smooth_root", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "f'{self.style}'", ",", "'smooth'", ")", "\n", "\n", "self", ".", "real", "=", "ImageFolder", "(", "self", ".", "real_root", ",", "\n", "transform", "=", "self", ".", "transform_real", ",", "\n", "loader", "=", "self", ".", "loader", ")", "\n", "self", ".", "anime", "=", "ImageFolder", "(", "self", ".", "anime_root", ",", "\n", "transform", "=", "self", ".", "transform_anime", ",", "\n", "loader", "=", "self", ".", "loader", ")", "\n", "self", ".", "anime_gray", "=", "ImageFolder", "(", "self", ".", "anime_root", ",", "\n", "transform", "=", "self", ".", "transform_gray", ",", "\n", "loader", "=", "self", ".", "loader", ")", "\n", "self", ".", "smooth_gray", "=", "ImageFolder", "(", "self", ".", "smooth_root", ",", "\n", "transform", "=", "self", ".", "transform_gray", ",", "\n", "loader", "=", "self", ".", "loader", ")", "\n", "self", ".", "sizes", "=", "[", "\n", "len", "(", "fold", ")", "for", "fold", "in", "[", "self", ".", "real", ",", "self", ".", "anime", ",", "self", ".", "smooth_gray", "]", "\n", "]", "\n", "self", ".", "size", "=", "max", "(", "self", ".", "sizes", ")", "\n", "self", ".", "reshuffle", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.animeganv2_dataset.AnimeGANV2Dataset.loader": [[71, 75], ["cv2.cvtColor", "cv2.imread"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.imread"], ["", "@", "staticmethod", "\n", "def", "loader", "(", "path", ")", ":", "\n", "        ", "return", "cv2", ".", "cvtColor", "(", "cv2", ".", "imread", "(", "path", ",", "flags", "=", "cv2", ".", "IMREAD_COLOR", ")", ",", "\n", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.animeganv2_dataset.AnimeGANV2Dataset.reshuffle": [[76, 88], ["list", "numpy.arange", "numpy.random.shuffle", "indexs.append", "zip", "numpy.random.choice", "numpy.concatenate", "numpy.random.shuffle", "numpy.concatenate.tolist"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "reshuffle", "(", "self", ")", ":", "\n", "        ", "indexs", "=", "[", "]", "\n", "for", "cur_size", "in", "self", ".", "sizes", ":", "\n", "            ", "x", "=", "np", ".", "arange", "(", "0", ",", "cur_size", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "x", ")", "\n", "if", "cur_size", "!=", "self", ".", "size", ":", "\n", "                ", "pad_num", "=", "self", ".", "size", "-", "cur_size", "\n", "pad", "=", "np", ".", "random", ".", "choice", "(", "cur_size", ",", "pad_num", ",", "replace", "=", "True", ")", "\n", "x", "=", "np", ".", "concatenate", "(", "(", "x", ",", "pad", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "x", ")", "\n", "", "indexs", ".", "append", "(", "x", ".", "tolist", "(", ")", ")", "\n", "", "self", ".", "indexs", "=", "list", "(", "zip", "(", "*", "indexs", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.animeganv2_dataset.AnimeGANV2Dataset.__getitem__": [[89, 103], ["animeganv2_dataset.AnimeGANV2Dataset.indexs.pop", "animeganv2_dataset.AnimeGANV2Dataset.reshuffle", "animeganv2_dataset.AnimeGANV2Dataset.indexs.pop"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.animeganv2_dataset.AnimeGANV2Dataset.reshuffle"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "index", "=", "self", ".", "indexs", ".", "pop", "(", ")", "\n", "", "except", "IndexError", "as", "e", ":", "\n", "            ", "self", ".", "reshuffle", "(", ")", "\n", "index", "=", "self", ".", "indexs", ".", "pop", "(", ")", "\n", "\n", "", "real_idx", ",", "anime_idx", ",", "smooth_idx", "=", "index", "\n", "\n", "return", "{", "\n", "'real'", ":", "self", ".", "real", "[", "real_idx", "]", ",", "\n", "'anime'", ":", "self", ".", "anime", "[", "anime_idx", "]", ",", "\n", "'anime_gray'", ":", "self", ".", "anime_gray", "[", "anime_idx", "]", ",", "\n", "'smooth_gray'", ":", "self", ".", "smooth_gray", "[", "smooth_idx", "]", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.animeganv2_dataset.AnimeGANV2Dataset.__len__": [[105, 107], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "size", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.gpen_dataset.GFPGAN_degradation.__init__": [[294, 306], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "kernel_list", "=", "[", "'iso'", ",", "'aniso'", "]", "\n", "self", ".", "kernel_prob", "=", "[", "0.5", ",", "0.5", "]", "\n", "self", ".", "blur_kernel_size", "=", "41", "\n", "self", ".", "blur_sigma", "=", "[", "0.1", ",", "10", "]", "\n", "self", ".", "downsample_range", "=", "[", "0.8", ",", "8", "]", "\n", "self", ".", "noise_range", "=", "[", "0", ",", "20", "]", "\n", "self", ".", "jpeg_range", "=", "[", "60", ",", "100", "]", "\n", "self", ".", "gray_prob", "=", "0.2", "\n", "self", ".", "color_jitter_prob", "=", "0.0", "\n", "self", ".", "color_jitter_pt_prob", "=", "0.0", "\n", "self", ".", "shift", "=", "20", "/", "255.", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.gpen_dataset.GFPGAN_degradation.degrade_process": [[307, 354], ["gpen_dataset.random_mixed_kernels", "cv2.filter2D", "numpy.random.uniform", "cv2.resize", "cv2.resize", "random.random", "cv2.flip", "numpy.random.uniform", "numpy.random.uniform().astype", "numpy.clip", "numpy.random.uniform", "cv2.cvtColor", "numpy.tile", "gpen_dataset.random_add_gaussian_noise", "gpen_dataset.random_add_jpg_compression", "numpy.clip", "int", "int", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.gpen_dataset.random_mixed_kernels", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.gpen_dataset.random_add_gaussian_noise", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.gpen_dataset.random_add_jpg_compression"], ["", "def", "degrade_process", "(", "self", ",", "img_gt", ")", ":", "\n", "        ", "if", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "            ", "img_gt", "=", "cv2", ".", "flip", "(", "img_gt", ",", "1", ")", "\n", "\n", "", "h", ",", "w", "=", "img_gt", ".", "shape", "[", ":", "2", "]", "\n", "\n", "# random color jitter", "\n", "if", "np", ".", "random", ".", "uniform", "(", ")", "<", "self", ".", "color_jitter_prob", ":", "\n", "            ", "jitter_val", "=", "np", ".", "random", ".", "uniform", "(", "-", "self", ".", "shift", ",", "self", ".", "shift", ",", "\n", "3", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "img_gt", "=", "img_gt", "+", "jitter_val", "\n", "img_gt", "=", "np", ".", "clip", "(", "img_gt", ",", "0", ",", "1", ")", "\n", "\n", "# random grayscale", "\n", "", "if", "np", ".", "random", ".", "uniform", "(", ")", "<", "self", ".", "gray_prob", ":", "\n", "            ", "img_gt", "=", "cv2", ".", "cvtColor", "(", "img_gt", ",", "cv2", ".", "COLOR_BGR2GRAY", ")", "\n", "img_gt", "=", "np", ".", "tile", "(", "img_gt", "[", ":", ",", ":", ",", "None", "]", ",", "[", "1", ",", "1", ",", "3", "]", ")", "\n", "\n", "# ------------------------ generate lq image ------------------------ #", "\n", "# blur", "\n", "", "kernel", "=", "random_mixed_kernels", "(", "self", ".", "kernel_list", ",", "\n", "self", ".", "kernel_prob", ",", "\n", "self", ".", "blur_kernel_size", ",", "\n", "self", ".", "blur_sigma", ",", "\n", "self", ".", "blur_sigma", ",", "[", "-", "math", ".", "pi", ",", "math", ".", "pi", "]", ",", "\n", "noise_range", "=", "None", ")", "\n", "img_lq", "=", "cv2", ".", "filter2D", "(", "img_gt", ",", "-", "1", ",", "kernel", ")", "\n", "# downsample", "\n", "scale", "=", "np", ".", "random", ".", "uniform", "(", "self", ".", "downsample_range", "[", "0", "]", ",", "\n", "self", ".", "downsample_range", "[", "1", "]", ")", "\n", "img_lq", "=", "cv2", ".", "resize", "(", "img_lq", ",", "(", "int", "(", "w", "//", "scale", ")", ",", "int", "(", "h", "//", "scale", ")", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "\n", "# noise", "\n", "if", "self", ".", "noise_range", "is", "not", "None", ":", "\n", "            ", "img_lq", "=", "random_add_gaussian_noise", "(", "img_lq", ",", "self", ".", "noise_range", ")", "\n", "# jpeg compression", "\n", "", "if", "self", ".", "jpeg_range", "is", "not", "None", ":", "\n", "            ", "img_lq", "=", "random_add_jpg_compression", "(", "img_lq", ",", "self", ".", "jpeg_range", ")", "\n", "\n", "# round and clip", "\n", "", "img_lq", "=", "np", ".", "clip", "(", "(", "img_lq", "*", "255.0", ")", ".", "round", "(", ")", ",", "0", ",", "255", ")", "/", "255.", "\n", "\n", "# resize to original size", "\n", "img_lq", "=", "cv2", ".", "resize", "(", "img_lq", ",", "(", "w", ",", "h", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "\n", "return", "img_gt", ",", "img_lq", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.gpen_dataset.GPENDataset.__init__": [[362, 374], ["paddle.io.Dataset.__init__", "len", "print", "gpen_dataset.GFPGAN_degradation", "sorted", "len", "glob.glob", "sorted", "os.path.join", "glob.glob", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "dataroot", ",", "size", "=", "256", ",", "amount", "=", "-", "1", ")", ":", "\n", "        ", "super", "(", "GPENDataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "size", "=", "size", "\n", "self", ".", "HQ_imgs", "=", "sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "dataroot", ",", "\n", "'*/*.*g'", ")", ")", ")", "[", ":", "amount", "]", "\n", "self", ".", "length", "=", "len", "(", "self", ".", "HQ_imgs", ")", "\n", "if", "self", ".", "length", "==", "0", ":", "\n", "            ", "self", ".", "HQ_imgs", "=", "sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "dataroot", ",", "\n", "'*.*g'", ")", ")", ")", "[", ":", "amount", "]", "\n", "self", ".", "length", "=", "len", "(", "self", ".", "HQ_imgs", ")", "\n", "", "print", "(", "self", ".", "length", ")", "\n", "self", ".", "degrader", "=", "GFPGAN_degradation", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.gpen_dataset.GPENDataset.__len__": [[375, 377], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "length", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.gpen_dataset.GPENDataset.__getitem__": [[378, 402], ["cv2.imread", "cv2.resize", "gpen_dataset.GPENDataset.degrader.degrade_process", "img_gt.transpose().flip.transpose().flip.transpose().flip", "img_lq.transpose().flip.transpose().flip.transpose().flip", "img_gt.transpose().flip.transpose().flip.astype", "numpy.array().astype", "numpy.array().astype", "paddle.to_tensor", "paddle.to_tensor", "img_gt.transpose().flip.transpose().flip.transpose", "img_lq.transpose().flip.transpose().flip.transpose", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.imread", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.gpen_dataset.GFPGAN_degradation.degrade_process"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "\"\"\"Get training sample\n\n        return:\n            ci: content image with shape [C,W,H],\n            si: style image with shape [C,W,H],\n            ci_path: str\n        \"\"\"", "\n", "img_gt", "=", "cv2", ".", "imread", "(", "self", ".", "HQ_imgs", "[", "index", "]", ",", "cv2", ".", "IMREAD_COLOR", ")", "\n", "img_gt", "=", "cv2", ".", "resize", "(", "img_gt", ",", "(", "self", ".", "size", ",", "self", ".", "size", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_AREA", ")", "\n", "\n", "# BFR degradation", "\n", "img_gt", "=", "img_gt", ".", "astype", "(", "np", ".", "float32", ")", "/", "255.", "\n", "img_gt", ",", "img_lq", "=", "self", ".", "degrader", ".", "degrade_process", "(", "img_gt", ")", "\n", "\n", "img_gt", "=", "(", "paddle", ".", "to_tensor", "(", "img_gt", ")", "-", "0.5", ")", "/", "0.5", "\n", "img_lq", "=", "(", "paddle", ".", "to_tensor", "(", "img_lq", ")", "-", "0.5", ")", "/", "0.5", "\n", "\n", "img_gt", "=", "img_gt", ".", "transpose", "(", "[", "2", ",", "0", ",", "1", "]", ")", ".", "flip", "(", "0", ")", "\n", "img_lq", "=", "img_lq", ".", "transpose", "(", "[", "2", ",", "0", ",", "1", "]", ")", ".", "flip", "(", "0", ")", "\n", "\n", "return", "np", ".", "array", "(", "img_lq", ")", ".", "astype", "(", "'float32'", ")", ",", "np", ".", "array", "(", "img_gt", ")", ".", "astype", "(", "\n", "'float32'", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.gpen_dataset.generate_gaussian_noise": [[31, 48], ["numpy.expand_dims().repeat", "numpy.float32", "numpy.expand_dims", "numpy.float32", "numpy.random.randn", "numpy.random.randn"], "function", ["None"], ["def", "generate_gaussian_noise", "(", "img", ",", "sigma", "=", "10", ",", "gray_noise", "=", "False", ")", ":", "\n", "    ", "\"\"\"Generate Gaussian noise.\n\n    Args:\n        img (Numpy array): Input image, shape (h, w, c), range [0, 1], float32.\n        sigma (float): Noise scale (measured in range 255). Default: 10.\n\n    Returns:\n        (Numpy array): Returned noisy image, shape (h, w, c), range[0, 1],\n            float32.\n    \"\"\"", "\n", "if", "gray_noise", ":", "\n", "        ", "noise", "=", "np", ".", "float32", "(", "np", ".", "random", ".", "randn", "(", "*", "(", "img", ".", "shape", "[", "0", ":", "2", "]", ")", ")", ")", "*", "sigma", "/", "255.", "\n", "noise", "=", "np", ".", "expand_dims", "(", "noise", ",", "axis", "=", "2", ")", ".", "repeat", "(", "3", ",", "axis", "=", "2", ")", "\n", "", "else", ":", "\n", "        ", "noise", "=", "np", ".", "float32", "(", "np", ".", "random", ".", "randn", "(", "*", "(", "img", ".", "shape", ")", ")", ")", "*", "sigma", "/", "255.", "\n", "", "return", "noise", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.gpen_dataset.random_generate_gaussian_noise": [[50, 57], ["numpy.random.uniform", "gpen_dataset.generate_gaussian_noise", "numpy.random.uniform"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.gpen_dataset.generate_gaussian_noise"], ["", "def", "random_generate_gaussian_noise", "(", "img", ",", "sigma_range", "=", "(", "0", ",", "10", ")", ",", "gray_prob", "=", "0", ")", ":", "\n", "    ", "sigma", "=", "np", ".", "random", ".", "uniform", "(", "sigma_range", "[", "0", "]", ",", "sigma_range", "[", "1", "]", ")", "\n", "if", "np", ".", "random", ".", "uniform", "(", ")", "<", "gray_prob", ":", "\n", "        ", "gray_noise", "=", "True", "\n", "", "else", ":", "\n", "        ", "gray_noise", "=", "False", "\n", "", "return", "generate_gaussian_noise", "(", "img", ",", "sigma", ",", "gray_noise", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.gpen_dataset.random_add_gaussian_noise": [[59, 73], ["gpen_dataset.random_generate_gaussian_noise", "numpy.clip", "numpy.clip"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.gpen_dataset.random_generate_gaussian_noise"], ["", "def", "random_add_gaussian_noise", "(", "img", ",", "\n", "sigma_range", "=", "(", "0", ",", "1.0", ")", ",", "\n", "gray_prob", "=", "0", ",", "\n", "clip", "=", "True", ",", "\n", "rounds", "=", "False", ")", ":", "\n", "    ", "noise", "=", "random_generate_gaussian_noise", "(", "img", ",", "sigma_range", ",", "gray_prob", ")", "\n", "out", "=", "img", "+", "noise", "\n", "if", "clip", "and", "rounds", ":", "\n", "        ", "out", "=", "np", ".", "clip", "(", "(", "out", "*", "255.0", ")", ".", "round", "(", ")", ",", "0", ",", "255", ")", "/", "255.", "\n", "", "elif", "clip", ":", "\n", "        ", "out", "=", "np", ".", "clip", "(", "out", ",", "0", ",", "1", ")", "\n", "", "elif", "rounds", ":", "\n", "        ", "out", "=", "(", "out", "*", "255.0", ")", ".", "round", "(", ")", "/", "255.", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.gpen_dataset.add_jpg_compression": [[75, 92], ["numpy.clip", "cv2.imencode", "int", "numpy.float32", "cv2.imdecode"], "function", ["None"], ["", "def", "add_jpg_compression", "(", "img", ",", "quality", "=", "90", ")", ":", "\n", "    ", "\"\"\"Add JPG compression artifacts.\n\n    Args:\n        img (Numpy array): Input image, shape (h, w, c), range [0, 1], float32.\n        quality (float): JPG compression quality. 0 for lowest quality, 100 for\n            best quality. Default: 90.\n\n    Returns:\n        (Numpy array): Returned image after JPG, shape (h, w, c), range[0, 1],\n            float32.\n    \"\"\"", "\n", "img", "=", "np", ".", "clip", "(", "img", ",", "0", ",", "1", ")", "\n", "encode_param", "=", "[", "int", "(", "cv2", ".", "IMWRITE_JPEG_QUALITY", ")", ",", "quality", "]", "\n", "_", ",", "encimg", "=", "cv2", ".", "imencode", "(", "'.jpg'", ",", "img", "*", "255.", ",", "encode_param", ")", "\n", "img", "=", "np", ".", "float32", "(", "cv2", ".", "imdecode", "(", "encimg", ",", "1", ")", ")", "/", "255.", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.gpen_dataset.random_add_jpg_compression": [[94, 109], ["int", "gpen_dataset.add_jpg_compression", "numpy.random.uniform"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.gpen_dataset.add_jpg_compression"], ["", "def", "random_add_jpg_compression", "(", "img", ",", "quality_range", "=", "(", "90", ",", "100", ")", ")", ":", "\n", "    ", "\"\"\"Randomly add JPG compression artifacts.\n\n    Args:\n        img (Numpy array): Input image, shape (h, w, c), range [0, 1], float32.\n        quality_range (tuple[float] | list[float]): JPG compression quality\n            range. 0 for lowest quality, 100 for best quality.\n            Default: (90, 100).\n\n    Returns:\n        (Numpy array): Returned image after JPG, shape (h, w, c), range[0, 1],\n            float32.\n    \"\"\"", "\n", "quality", "=", "int", "(", "np", ".", "random", ".", "uniform", "(", "quality_range", "[", "0", "]", ",", "quality_range", "[", "1", "]", ")", ")", "\n", "return", "add_jpg_compression", "(", "img", ",", "quality", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.gpen_dataset.random_mixed_kernels": [[111, 155], ["random.choices", "gpen_dataset.random_bivariate_Gaussian", "gpen_dataset.random_bivariate_Gaussian"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.gpen_dataset.random_bivariate_Gaussian", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.gpen_dataset.random_bivariate_Gaussian"], ["", "def", "random_mixed_kernels", "(", "kernel_list", ",", "\n", "kernel_prob", ",", "\n", "kernel_size", "=", "21", ",", "\n", "sigma_x_range", "=", "(", "0.6", ",", "5", ")", ",", "\n", "sigma_y_range", "=", "(", "0.6", ",", "5", ")", ",", "\n", "rotation_range", "=", "(", "-", "math", ".", "pi", ",", "math", ".", "pi", ")", ",", "\n", "betag_range", "=", "(", "0.5", ",", "8", ")", ",", "\n", "betap_range", "=", "(", "0.5", ",", "8", ")", ",", "\n", "noise_range", "=", "None", ")", ":", "\n", "    ", "\"\"\"Randomly generate mixed kernels.\n\n    Args:\n        kernel_list (tuple): a list name of kernel types,\n            support ['iso', 'aniso', 'skew', 'generalized', 'plateau_iso',\n            'plateau_aniso']\n        kernel_prob (tuple): corresponding kernel probability for each\n            kernel type\n        kernel_size (int):\n        sigma_x_range (tuple): [0.6, 5]\n        sigma_y_range (tuple): [0.6, 5]\n        rotation range (tuple): [-math.pi, math.pi]\n        beta_range (tuple): [0.5, 8]\n        noise_range(tuple, optional): multiplicative kernel noise,\n            [0.75, 1.25]. Default: None\n\n    Returns:\n        kernel (ndarray):\n    \"\"\"", "\n", "kernel_type", "=", "random", ".", "choices", "(", "kernel_list", ",", "kernel_prob", ")", "[", "0", "]", "\n", "if", "kernel_type", "==", "'iso'", ":", "\n", "        ", "kernel", "=", "random_bivariate_Gaussian", "(", "kernel_size", ",", "\n", "sigma_x_range", ",", "\n", "sigma_y_range", ",", "\n", "rotation_range", ",", "\n", "noise_range", "=", "noise_range", ",", "\n", "isotropic", "=", "True", ")", "\n", "", "elif", "kernel_type", "==", "'aniso'", ":", "\n", "        ", "kernel", "=", "random_bivariate_Gaussian", "(", "kernel_size", ",", "\n", "sigma_x_range", ",", "\n", "sigma_y_range", ",", "\n", "rotation_range", ",", "\n", "noise_range", "=", "noise_range", ",", "\n", "isotropic", "=", "False", ")", "\n", "", "return", "kernel", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.gpen_dataset.random_bivariate_Gaussian": [[157, 205], ["numpy.random.uniform", "gpen_dataset.bivariate_Gaussian", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.sum"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.gpen_dataset.bivariate_Gaussian"], ["", "def", "random_bivariate_Gaussian", "(", "kernel_size", ",", "\n", "sigma_x_range", ",", "\n", "sigma_y_range", ",", "\n", "rotation_range", ",", "\n", "noise_range", "=", "None", ",", "\n", "isotropic", "=", "True", ")", ":", "\n", "    ", "\"\"\"Randomly generate bivariate isotropic or anisotropic Gaussian kernels.\n\n    In the isotropic mode, only `sigma_x_range` is used. `sigma_y_range` and `rotation_range` is ignored.\n\n    Args:\n        kernel_size (int):\n        sigma_x_range (tuple): [0.6, 5]\n        sigma_y_range (tuple): [0.6, 5]\n        rotation range (tuple): [-math.pi, math.pi]\n        noise_range(tuple, optional): multiplicative kernel noise,\n            [0.75, 1.25]. Default: None\n\n    Returns:\n        kernel (ndarray):\n    \"\"\"", "\n", "assert", "kernel_size", "%", "2", "==", "1", ",", "'Kernel size must be an odd number.'", "\n", "assert", "sigma_x_range", "[", "0", "]", "<", "sigma_x_range", "[", "1", "]", ",", "'Wrong sigma_x_range.'", "\n", "sigma_x", "=", "np", ".", "random", ".", "uniform", "(", "sigma_x_range", "[", "0", "]", ",", "sigma_x_range", "[", "1", "]", ")", "\n", "if", "isotropic", "is", "False", ":", "\n", "        ", "assert", "sigma_y_range", "[", "0", "]", "<", "sigma_y_range", "[", "1", "]", ",", "'Wrong sigma_y_range.'", "\n", "assert", "rotation_range", "[", "0", "]", "<", "rotation_range", "[", "1", "]", ",", "'Wrong rotation_range.'", "\n", "sigma_y", "=", "np", ".", "random", ".", "uniform", "(", "sigma_y_range", "[", "0", "]", ",", "sigma_y_range", "[", "1", "]", ")", "\n", "rotation", "=", "np", ".", "random", ".", "uniform", "(", "rotation_range", "[", "0", "]", ",", "rotation_range", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "        ", "sigma_y", "=", "sigma_x", "\n", "rotation", "=", "0", "\n", "\n", "", "kernel", "=", "bivariate_Gaussian", "(", "kernel_size", ",", "\n", "sigma_x", ",", "\n", "sigma_y", ",", "\n", "rotation", ",", "\n", "isotropic", "=", "isotropic", ")", "\n", "\n", "# add multiplicative noise", "\n", "if", "noise_range", "is", "not", "None", ":", "\n", "        ", "assert", "noise_range", "[", "0", "]", "<", "noise_range", "[", "1", "]", ",", "'Wrong noise range.'", "\n", "noise", "=", "np", ".", "random", ".", "uniform", "(", "noise_range", "[", "0", "]", ",", "\n", "noise_range", "[", "1", "]", ",", "\n", "size", "=", "kernel", ".", "shape", ")", "\n", "kernel", "=", "kernel", "*", "noise", "\n", "", "kernel", "=", "kernel", "/", "np", ".", "sum", "(", "kernel", ")", "\n", "return", "kernel", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.gpen_dataset.bivariate_Gaussian": [[207, 238], ["gpen_dataset.pdf2", "gpen_dataset.mesh_grid", "numpy.array", "gpen_dataset.sigma_matrix2", "numpy.sum"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.gpen_dataset.pdf2", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.gpen_dataset.mesh_grid", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.gpen_dataset.sigma_matrix2"], ["", "def", "bivariate_Gaussian", "(", "kernel_size", ",", "\n", "sig_x", ",", "\n", "sig_y", ",", "\n", "theta", ",", "\n", "grid", "=", "None", ",", "\n", "isotropic", "=", "True", ")", ":", "\n", "    ", "\"\"\"Generate a bivariate isotropic or anisotropic Gaussian kernel.\n\n    In the isotropic mode, only `sig_x` is used. `sig_y` and `theta` is ignored.\n\n    Args:\n        kernel_size (int):\n        sig_x (float):\n        sig_y (float):\n        theta (float): Radian measurement.\n        grid (ndarray, optional): generated by :func:`mesh_grid`,\n            with the shape (K, K, 2), K is the kernel size. Default: None\n        isotropic (bool):\n\n    Returns:\n        kernel (ndarray): normalized kernel.\n    \"\"\"", "\n", "if", "grid", "is", "None", ":", "\n", "        ", "grid", ",", "_", ",", "_", "=", "mesh_grid", "(", "kernel_size", ")", "\n", "", "if", "isotropic", ":", "\n", "        ", "sigma_matrix", "=", "np", ".", "array", "(", "[", "[", "sig_x", "**", "2", ",", "0", "]", ",", "[", "0", ",", "sig_x", "**", "2", "]", "]", ")", "\n", "", "else", ":", "\n", "        ", "sigma_matrix", "=", "sigma_matrix2", "(", "sig_x", ",", "sig_y", ",", "theta", ")", "\n", "", "kernel", "=", "pdf2", "(", "sigma_matrix", ",", "grid", ")", "\n", "kernel", "=", "kernel", "/", "np", ".", "sum", "(", "kernel", ")", "\n", "return", "kernel", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.gpen_dataset.sigma_matrix2": [[240, 255], ["numpy.array", "numpy.array", "numpy.dot", "numpy.dot", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.sin"], "function", ["None"], ["", "def", "sigma_matrix2", "(", "sig_x", ",", "sig_y", ",", "theta", ")", ":", "\n", "    ", "\"\"\"Calculate the rotated sigma matrix (two dimensional matrix).\n\n    Args:\n        sig_x (float):\n        sig_y (float):\n        theta (float): Radian measurement.\n\n    Returns:\n        ndarray: Rotated sigma matrix.\n    \"\"\"", "\n", "d_matrix", "=", "np", ".", "array", "(", "[", "[", "sig_x", "**", "2", ",", "0", "]", ",", "[", "0", ",", "sig_y", "**", "2", "]", "]", ")", "\n", "u_matrix", "=", "np", ".", "array", "(", "[", "[", "np", ".", "cos", "(", "theta", ")", ",", "-", "np", ".", "sin", "(", "theta", ")", "]", ",", "\n", "[", "np", ".", "sin", "(", "theta", ")", ",", "np", ".", "cos", "(", "theta", ")", "]", "]", ")", "\n", "return", "np", ".", "dot", "(", "u_matrix", ",", "np", ".", "dot", "(", "d_matrix", ",", "u_matrix", ".", "T", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.gpen_dataset.mesh_grid": [[257, 274], ["numpy.arange", "numpy.meshgrid", "numpy.hstack().reshape", "numpy.hstack", "xx.reshape", "yy.reshape"], "function", ["None"], ["", "def", "mesh_grid", "(", "kernel_size", ")", ":", "\n", "    ", "\"\"\"Generate the mesh grid, centering at zero.\n\n    Args:\n        kernel_size (int):\n\n    Returns:\n        xy (ndarray): with the shape (kernel_size, kernel_size, 2)\n        xx (ndarray): with the shape (kernel_size, kernel_size)\n        yy (ndarray): with the shape (kernel_size, kernel_size)\n    \"\"\"", "\n", "ax", "=", "np", ".", "arange", "(", "-", "kernel_size", "//", "2", "+", "1.", ",", "kernel_size", "//", "2", "+", "1.", ")", "\n", "xx", ",", "yy", "=", "np", ".", "meshgrid", "(", "ax", ",", "ax", ")", "\n", "xy", "=", "np", ".", "hstack", "(", "(", "xx", ".", "reshape", "(", "(", "kernel_size", "*", "kernel_size", ",", "1", ")", ")", ",", "\n", "yy", ".", "reshape", "(", "kernel_size", "*", "kernel_size", ",", "\n", "1", ")", ")", ")", ".", "reshape", "(", "kernel_size", ",", "kernel_size", ",", "2", ")", "\n", "return", "xy", ",", "xx", ",", "yy", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.gpen_dataset.pdf2": [[276, 290], ["numpy.linalg.inv", "numpy.exp", "numpy.sum", "numpy.dot"], "function", ["None"], ["", "def", "pdf2", "(", "sigma_matrix", ",", "grid", ")", ":", "\n", "    ", "\"\"\"Calculate PDF of the bivariate Gaussian distribution.\n\n    Args:\n        sigma_matrix (ndarray): with the shape (2, 2)\n        grid (ndarray): generated by :func:`mesh_grid`,\n            with the shape (K, K, 2), K is the kernel size.\n\n    Returns:\n        kernel (ndarrray): un-normalized kernel.\n    \"\"\"", "\n", "inverse_sigma", "=", "np", ".", "linalg", ".", "inv", "(", "sigma_matrix", ")", "\n", "kernel", "=", "np", ".", "exp", "(", "-", "0.5", "*", "np", ".", "sum", "(", "np", ".", "dot", "(", "grid", ",", "inverse_sigma", ")", "*", "grid", ",", "2", ")", ")", "\n", "return", "kernel", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.base_sr_dataset.SRDataset.__init__": [[26, 39], ["base_dataset.BaseDataset.__init__", "base_sr_dataset.SRDataset.prepare_data_infos"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.empty_dataset.EmptyDataset.prepare_data_infos"], ["def", "__init__", "(", "self", ",", "\n", "lq_folder", ",", "\n", "gt_folder", ",", "\n", "preprocess", ",", "\n", "scale", ",", "\n", "filename_tmpl", "=", "'{}'", ")", ":", "\n", "        ", "super", "(", "SRDataset", ",", "self", ")", ".", "__init__", "(", "preprocess", ")", "\n", "self", ".", "lq_folder", "=", "lq_folder", "\n", "self", ".", "gt_folder", "=", "gt_folder", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "filename_tmpl", "=", "filename_tmpl", "\n", "\n", "self", ".", "prepare_data_infos", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.base_sr_dataset.SRDataset.prepare_data_infos": [[40, 62], ["base_sr_dataset.SRDataset.scan_folder", "base_sr_dataset.SRDataset.scan_folder", "len", "len", "os.path.splitext", "os.path.join", "base_sr_dataset.SRDataset.data_infos.append", "len", "len", "os.path.basename", "dict", "base_sr_dataset.SRDataset.filename_tmpl.format"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.base_dataset.BaseDataset.scan_folder", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.base_dataset.BaseDataset.scan_folder", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "prepare_data_infos", "(", "self", ")", ":", "\n", "        ", "\"\"\"Load annoations for SR dataset.\n\n        It loads the LQ and GT image path from folders.\n\n        Returns:\n            dict: Returned dict for LQ and GT pairs.\n        \"\"\"", "\n", "self", ".", "data_infos", "=", "[", "]", "\n", "lq_paths", "=", "self", ".", "scan_folder", "(", "self", ".", "lq_folder", ")", "\n", "gt_paths", "=", "self", ".", "scan_folder", "(", "self", ".", "gt_folder", ")", "\n", "assert", "len", "(", "lq_paths", ")", "==", "len", "(", "gt_paths", ")", ",", "(", "\n", "f'gt and lq datasets have different number of images: '", "\n", "f'{len(lq_paths)}, {len(gt_paths)}.'", ")", "\n", "for", "gt_path", "in", "gt_paths", ":", "\n", "            ", "basename", ",", "ext", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "gt_path", ")", ")", "\n", "lq_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "lq_folder", ",", "\n", "(", "f'{self.filename_tmpl.format(basename)}'", "\n", "f'{ext}'", ")", ")", "\n", "assert", "lq_path", "in", "lq_paths", ",", "f'{lq_path} is not in lq_paths.'", "\n", "self", ".", "data_infos", ".", "append", "(", "dict", "(", "lq_path", "=", "lq_path", ",", "gt_path", "=", "gt_path", ")", ")", "\n", "", "return", "self", ".", "data_infos", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.unpaired_dataset.UnpairedDataset.__init__": [[26, 45], ["base_dataset.BaseDataset.__init__", "os.path.join", "os.path.join", "unpaired_dataset.UnpairedDataset.prepare_data_infos", "unpaired_dataset.UnpairedDataset.prepare_data_infos", "len", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.empty_dataset.EmptyDataset.prepare_data_infos", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.empty_dataset.EmptyDataset.prepare_data_infos"], ["def", "__init__", "(", "self", ",", "dataroot_a", ",", "dataroot_b", ",", "max_size", ",", "is_train", ",", "preprocess", ")", ":", "\n", "        ", "\"\"\"Initialize unpaired dataset class.\n\n        Args:\n            dataroot_a (str): Directory of dataset a.\n            dataroot_b (str): Directory of dataset b.\n            max_size (int): max size of dataset size.\n            is_train (int): whether in train mode.\n            preprocess (list[dict]): A sequence of data preprocess config.\n\n        \"\"\"", "\n", "super", "(", "UnpairedDataset", ",", "self", ")", ".", "__init__", "(", "preprocess", ")", "\n", "self", ".", "dir_A", "=", "os", ".", "path", ".", "join", "(", "dataroot_a", ")", "\n", "self", ".", "dir_B", "=", "os", ".", "path", ".", "join", "(", "dataroot_b", ")", "\n", "self", ".", "is_train", "=", "is_train", "\n", "self", ".", "data_infos_a", "=", "self", ".", "prepare_data_infos", "(", "self", ".", "dir_A", ")", "\n", "self", ".", "data_infos_b", "=", "self", ".", "prepare_data_infos", "(", "self", ".", "dir_B", ")", "\n", "self", ".", "size_a", "=", "len", "(", "self", ".", "data_infos_a", ")", "\n", "self", ".", "size_b", "=", "len", "(", "self", ".", "data_infos_b", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.unpaired_dataset.UnpairedDataset.prepare_data_infos": [[46, 61], ["sorted", "unpaired_dataset.UnpairedDataset.scan_folder", "data_infos.append", "dict"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.base_dataset.BaseDataset.scan_folder", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "prepare_data_infos", "(", "self", ",", "dataroot", ")", ":", "\n", "        ", "\"\"\"Load unpaired image paths of one domain.\n\n        Args:\n            dataroot (str): Path to the folder root for unpaired images of\n                one domain.\n\n        Returns:\n            list[dict]: List that contains unpaired image paths of one domain.\n        \"\"\"", "\n", "data_infos", "=", "[", "]", "\n", "paths", "=", "sorted", "(", "self", ".", "scan_folder", "(", "dataroot", ")", ")", "\n", "for", "path", "in", "paths", ":", "\n", "            ", "data_infos", ".", "append", "(", "dict", "(", "path", "=", "path", ")", ")", "\n", "", "return", "data_infos", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.unpaired_dataset.UnpairedDataset.__getitem__": [[62, 77], ["random.randint", "dict", "dict", "unpaired_dataset.UnpairedDataset.preprocess"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.preprocess"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "self", ".", "is_train", ":", "\n", "            ", "img_a_path", "=", "self", ".", "data_infos_a", "[", "idx", "%", "self", ".", "size_a", "]", "[", "'path'", "]", "\n", "idx_b", "=", "random", ".", "randint", "(", "0", ",", "self", ".", "size_b", "-", "1", ")", "\n", "img_b_path", "=", "self", ".", "data_infos_b", "[", "idx_b", "]", "[", "'path'", "]", "\n", "datas", "=", "dict", "(", "A_path", "=", "img_a_path", ",", "B_path", "=", "img_b_path", ")", "\n", "", "else", ":", "\n", "            ", "img_a_path", "=", "self", ".", "data_infos_a", "[", "idx", "%", "self", ".", "size_a", "]", "[", "'path'", "]", "\n", "img_b_path", "=", "self", ".", "data_infos_b", "[", "idx", "%", "self", ".", "size_b", "]", "[", "'path'", "]", "\n", "datas", "=", "dict", "(", "A_path", "=", "img_a_path", ",", "B_path", "=", "img_b_path", ")", "\n", "\n", "", "if", "self", ".", "preprocess", ":", "\n", "            ", "datas", "=", "self", ".", "preprocess", "(", "datas", ")", "\n", "\n", "", "return", "datas", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.unpaired_dataset.UnpairedDataset.__len__": [[78, 85], ["max"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "\"\"\"Return the total number of images in the dataset.\n\n        As we have two datasets with potentially different number of images,\n        we take a maximum of\n        \"\"\"", "\n", "return", "max", "(", "self", ".", "size_a", ",", "self", ".", "size_b", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.paired_dataset.PairedDataset.__init__": [[23, 34], ["base_dataset.BaseDataset.__init__", "paired_dataset.PairedDataset.prepare_data_infos"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.empty_dataset.EmptyDataset.prepare_data_infos"], ["def", "__init__", "(", "self", ",", "dataroot", ",", "preprocess", ")", ":", "\n", "        ", "\"\"\"Initialize this dataset class.\n\n        Args:\n            dataroot (str): Directory of dataset.\n            preprocess (list[dict]): A sequence of data preprocess config.\n\n        \"\"\"", "\n", "super", "(", "PairedDataset", ",", "self", ")", ".", "__init__", "(", "preprocess", ")", "\n", "self", ".", "dataroot", "=", "dataroot", "\n", "self", ".", "data_infos", "=", "self", ".", "prepare_data_infos", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.paired_dataset.PairedDataset.prepare_data_infos": [[35, 47], ["sorted", "paired_dataset.PairedDataset.scan_folder", "data_infos.append", "dict"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.base_dataset.BaseDataset.scan_folder", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "prepare_data_infos", "(", "self", ")", ":", "\n", "        ", "\"\"\"Load paired image paths.\n\n        Returns:\n            list[dict]: List that contains paired image paths.\n        \"\"\"", "\n", "data_infos", "=", "[", "]", "\n", "pair_paths", "=", "sorted", "(", "self", ".", "scan_folder", "(", "self", ".", "dataroot", ")", ")", "\n", "for", "pair_path", "in", "pair_paths", ":", "\n", "            ", "data_infos", ".", "append", "(", "dict", "(", "pair_path", "=", "pair_path", ")", ")", "\n", "\n", "", "return", "data_infos", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.base_dataset.BaseDataset.__init__": [[82, 87], ["paddle.io.Dataset.__init__", "preprocess.build_preprocess"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.builder.build_preprocess"], ["def", "__init__", "(", "self", ",", "preprocess", "=", "None", ")", ":", "\n", "        ", "super", "(", "BaseDataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "preprocess", ":", "\n", "            ", "self", ".", "preprocess", "=", "build_preprocess", "(", "preprocess", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.base_dataset.BaseDataset.prepare_data_infos": [[88, 98], ["None"], "methods", ["None"], ["", "", "@", "abstractmethod", "\n", "def", "prepare_data_infos", "(", "self", ")", ":", "\n", "        ", "\"\"\"Abstract function for loading annotation.\n\n        All subclasses should overwrite this function\n        should set self.annotations in this fucntion\n        data_infos should be as list of dict:\n        [{key_path: file_path}, {key_path: file_path}, {key_path: file_path}]\n        \"\"\"", "\n", "self", ".", "data_infos", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.base_dataset.BaseDataset.scan_folder": [[99, 120], ["isinstance", "list", "str", "TypeError", "base_dataset.scandir", "os.path.join", "type"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.base_dataset.scandir"], ["", "@", "staticmethod", "\n", "def", "scan_folder", "(", "path", ")", ":", "\n", "        ", "\"\"\"Obtain sample path list (including sub-folders) from a given folder.\n\n        Args:\n            path (str|pathlib.Path): Folder path.\n\n        Returns:\n            list[str]: sample list obtained form given folder.\n        \"\"\"", "\n", "\n", "if", "isinstance", "(", "path", ",", "(", "str", ",", "Path", ")", ")", ":", "\n", "            ", "path", "=", "str", "(", "path", ")", "\n", "", "else", ":", "\n", "            ", "raise", "TypeError", "(", "\"'path' must be a str or a Path object, \"", "\n", "f'but received {type(path)}.'", ")", "\n", "\n", "", "samples", "=", "list", "(", "scandir", "(", "path", ",", "suffix", "=", "IMG_EXTENSIONS", ",", "recursive", "=", "True", ")", ")", "\n", "samples", "=", "[", "os", ".", "path", ".", "join", "(", "path", ",", "v", ")", "for", "v", "in", "samples", "]", "\n", "assert", "samples", ",", "'{} has no valid image file.'", ".", "format", "(", "path", ")", "\n", "return", "samples", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.base_dataset.BaseDataset.__getitem__": [[121, 128], ["copy.deepcopy", "hasattr", "base_dataset.BaseDataset.preprocess"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.preprocess"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "datas", "=", "copy", ".", "deepcopy", "(", "self", ".", "data_infos", "[", "idx", "]", ")", "\n", "\n", "if", "hasattr", "(", "self", ",", "'preprocess'", ")", "and", "self", ".", "preprocess", ":", "\n", "            ", "datas", "=", "self", ".", "preprocess", "(", "datas", ")", "\n", "\n", "", "return", "datas", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.base_dataset.BaseDataset.__len__": [[129, 136], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "\"\"\"Length of the dataset.\n\n        Returns:\n            int: Length of the dataset.\n        \"\"\"", "\n", "return", "len", "(", "self", ".", "data_infos", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.base_dataset.scandir": [[27, 67], ["isinstance", "base_dataset.scandir._scandir"], "function", ["None"], ["def", "scandir", "(", "dir_path", ",", "suffix", "=", "None", ",", "recursive", "=", "False", ")", ":", "\n", "    ", "\"\"\"Scan a directory to find the interested files.\n\n    Args:\n        dir_path (str | obj:`Path`): Path of the directory.\n        suffix (str | tuple(str), optional): File suffix that we are\n            interested in. Default: None.\n        recursive (bool, optional): If set to True, recursively scan the\n            directory. Default: False.\n\n    Returns:\n        A generator for all the interested files with relative pathes.\n    \"\"\"", "\n", "if", "isinstance", "(", "dir_path", ",", "(", "str", ",", "Path", ")", ")", ":", "\n", "        ", "dir_path", "=", "str", "(", "dir_path", ")", "\n", "", "else", ":", "\n", "        ", "raise", "TypeError", "(", "'\"dir_path\" must be a string or Path object'", ")", "\n", "\n", "", "if", "(", "suffix", "is", "not", "None", ")", "and", "not", "isinstance", "(", "suffix", ",", "(", "str", ",", "tuple", ")", ")", ":", "\n", "        ", "raise", "TypeError", "(", "'\"suffix\" must be a string or tuple of strings'", ")", "\n", "\n", "", "root", "=", "dir_path", "\n", "\n", "def", "_scandir", "(", "dir_path", ",", "suffix", ",", "recursive", ")", ":", "\n", "        ", "for", "entry", "in", "os", ".", "scandir", "(", "dir_path", ")", ":", "\n", "            ", "if", "not", "entry", ".", "name", ".", "startswith", "(", "'.'", ")", "and", "entry", ".", "is_file", "(", ")", ":", "\n", "                ", "rel_path", "=", "os", ".", "path", ".", "relpath", "(", "entry", ".", "path", ",", "root", ")", "\n", "if", "suffix", "is", "None", ":", "\n", "                    ", "yield", "rel_path", "\n", "", "elif", "rel_path", ".", "endswith", "(", "suffix", ")", ":", "\n", "                    ", "yield", "rel_path", "\n", "", "", "else", ":", "\n", "                ", "if", "recursive", ":", "\n", "                    ", "yield", "from", "_scandir", "(", "entry", ".", "path", ",", "\n", "suffix", "=", "suffix", ",", "\n", "recursive", "=", "recursive", ")", "\n", "", "else", ":", "\n", "                    ", "continue", "\n", "\n", "", "", "", "", "return", "_scandir", "(", "dir_path", ",", "suffix", "=", "suffix", ",", "recursive", "=", "recursive", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.wav2lip_dataset.Wav2LipDataset.__init__": [[42, 52], ["wav2lip_dataset.get_image_list"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.wav2lip_dataset.get_image_list"], ["    ", "def", "__init__", "(", "self", ",", "dataroot", ",", "img_size", ",", "filelists_path", ",", "split", ")", ":", "\n", "        ", "\"\"\"Initialize Wav2Lip dataset class.\n\n        Args:\n            dataroot (str): Directory of dataset.\n        \"\"\"", "\n", "self", ".", "image_path", "=", "dataroot", "\n", "self", ".", "img_size", "=", "img_size", "\n", "self", ".", "split", "=", "split", "\n", "self", ".", "all_videos", "=", "get_image_list", "(", "self", ".", "image_path", ",", "self", ".", "split", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.wav2lip_dataset.Wav2LipDataset.get_frame_id": [[53, 55], ["int", "os.path.basename().split", "os.path.basename"], "methods", ["None"], ["", "def", "get_frame_id", "(", "self", ",", "frame", ")", ":", "\n", "        ", "return", "int", "(", "basename", "(", "frame", ")", ".", "split", "(", "'.'", ")", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.wav2lip_dataset.Wav2LipDataset.get_window": [[56, 67], ["wav2lip_dataset.Wav2LipDataset.get_frame_id", "os.path.dirname", "range", "os.path.join", "window_fnames.append", "os.path.isfile"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.wav2lip_dataset.Wav2LipDataset.get_frame_id", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "get_window", "(", "self", ",", "start_frame", ")", ":", "\n", "        ", "start_id", "=", "self", ".", "get_frame_id", "(", "start_frame", ")", "\n", "vidname", "=", "dirname", "(", "start_frame", ")", "\n", "\n", "window_fnames", "=", "[", "]", "\n", "for", "frame_id", "in", "range", "(", "start_id", ",", "start_id", "+", "syncnet_T", ")", ":", "\n", "            ", "frame", "=", "join", "(", "vidname", ",", "'{}.jpg'", ".", "format", "(", "frame_id", ")", ")", "\n", "if", "not", "isfile", "(", "frame", ")", ":", "\n", "                ", "return", "None", "\n", "", "window_fnames", ".", "append", "(", "frame", ")", "\n", "", "return", "window_fnames", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.wav2lip_dataset.Wav2LipDataset.read_window": [[68, 83], ["cv2.imread", "window.append", "cv2.resize"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.imread", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize"], ["", "def", "read_window", "(", "self", ",", "window_fnames", ")", ":", "\n", "        ", "if", "window_fnames", "is", "None", ":", "return", "None", "\n", "window", "=", "[", "]", "\n", "for", "fname", "in", "window_fnames", ":", "\n", "            ", "img", "=", "cv2", ".", "imread", "(", "fname", ")", "\n", "if", "img", "is", "None", ":", "\n", "                ", "return", "None", "\n", "", "try", ":", "\n", "                ", "img", "=", "cv2", ".", "resize", "(", "img", ",", "(", "self", ".", "img_size", ",", "self", ".", "img_size", ")", ")", "\n", "", "except", "Exception", "as", "e", ":", "\n", "                ", "return", "None", "\n", "\n", "", "window", ".", "append", "(", "img", ")", "\n", "\n", "", "return", "window", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.wav2lip_dataset.Wav2LipDataset.crop_audio_window": [[84, 95], ["int", "type", "wav2lip_dataset.Wav2LipDataset.get_frame_id", "float"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.wav2lip_dataset.Wav2LipDataset.get_frame_id"], ["", "def", "crop_audio_window", "(", "self", ",", "spec", ",", "start_frame", ")", ":", "\n", "        ", "if", "type", "(", "start_frame", ")", "==", "int", ":", "\n", "            ", "start_frame_num", "=", "start_frame", "\n", "", "else", ":", "\n", "            ", "start_frame_num", "=", "self", ".", "get_frame_id", "(", "\n", "start_frame", ")", "# 0-indexing ---> 1-indexing", "\n", "", "start_idx", "=", "int", "(", "80.", "*", "(", "start_frame_num", "/", "float", "(", "audio_cfg", "[", "\"fps\"", "]", ")", ")", ")", "\n", "\n", "end_idx", "=", "start_idx", "+", "syncnet_mel_step_size", "\n", "\n", "return", "spec", "[", "start_idx", ":", "end_idx", ",", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.wav2lip_dataset.Wav2LipDataset.get_segmented_mels": [[96, 111], ["range", "numpy.asarray", "numpy.asarray", "wav2lip_dataset.Wav2LipDataset.get_frame_id", "wav2lip_dataset.Wav2LipDataset.crop_audio_window", "numpy.asarray.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.wav2lip_dataset.Wav2LipDataset.get_frame_id", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.wav2lip_dataset.Wav2LipDataset.crop_audio_window", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "get_segmented_mels", "(", "self", ",", "spec", ",", "start_frame", ")", ":", "\n", "        ", "mels", "=", "[", "]", "\n", "assert", "syncnet_T", "==", "5", "\n", "start_frame_num", "=", "self", ".", "get_frame_id", "(", "\n", "start_frame", ")", "+", "1", "# 0-indexing ---> 1-indexing", "\n", "if", "start_frame_num", "-", "2", "<", "0", ":", "return", "None", "\n", "for", "i", "in", "range", "(", "start_frame_num", ",", "start_frame_num", "+", "syncnet_T", ")", ":", "\n", "            ", "m", "=", "self", ".", "crop_audio_window", "(", "spec", ",", "i", "-", "2", ")", "\n", "if", "m", ".", "shape", "[", "0", "]", "!=", "syncnet_mel_step_size", ":", "\n", "                ", "return", "None", "\n", "", "mels", ".", "append", "(", "m", ".", "T", ")", "\n", "\n", "", "mels", "=", "np", ".", "asarray", "(", "mels", ")", "\n", "\n", "return", "mels", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.wav2lip_dataset.Wav2LipDataset.prepare_window": [[112, 118], ["numpy.transpose", "numpy.transpose", "numpy.asarray", "numpy.asarray"], "methods", ["None"], ["", "def", "prepare_window", "(", "self", ",", "window", ")", ":", "\n", "# 3 x T x H x W", "\n", "        ", "x", "=", "np", ".", "asarray", "(", "window", ")", "/", "255.", "\n", "x", "=", "np", ".", "transpose", "(", "x", ",", "(", "3", ",", "0", ",", "1", ",", "2", ")", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.wav2lip_dataset.Wav2LipDataset.__len__": [[183, 187], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "\"\"\"Return the total number of images in the dataset.\n        \"\"\"", "\n", "return", "len", "(", "self", ".", "all_videos", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.wav2lip_dataset.Wav2LipDataset.__getitem__": [[122, 181], ["random.randint", "list", "random.choice", "random.choice", "wav2lip_dataset.Wav2LipDataset.get_window", "wav2lip_dataset.Wav2LipDataset.get_window", "wav2lip_dataset.Wav2LipDataset.read_window", "wav2lip_dataset.Wav2LipDataset.read_window", "wav2lip_dataset.Wav2LipDataset.crop_audio_window", "wav2lip_dataset.Wav2LipDataset.get_segmented_mels", "wav2lip_dataset.Wav2LipDataset.prepare_window", "wav2lip_dataset.Wav2LipDataset.copy", "wav2lip_dataset.Wav2LipDataset.prepare_window", "numpy.concatenate", "numpy.concatenate", "numpy.float32", "numpy.float32", "numpy.transpose", "numpy.transpose", "numpy.expand_dims", "numpy.expand_dims", "numpy.expand_dims", "numpy.expand_dims", "glob.glob.glob", "len", "random.choice", "os.path.join", "ppgan.utils.audio.load_wav", "orig_mel.copy", "orig_mel.copy", "numpy.float32", "numpy.float32", "numpy.float32", "numpy.float32", "numpy.float32", "numpy.float32", "len", "os.path.join", "ppgan.utils.audio.melspectrogram"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.wav2lip_dataset.Wav2LipDataset.get_window", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.wav2lip_dataset.Wav2LipDataset.get_window", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.wav2lip_dataset.Wav2LipDataset.read_window", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.wav2lip_dataset.Wav2LipDataset.read_window", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.wav2lip_dataset.Wav2LipDataset.crop_audio_window", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.wav2lip_dataset.Wav2LipDataset.get_segmented_mels", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.wav2lip_dataset.Wav2LipDataset.prepare_window", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.wav2lip_dataset.Wav2LipDataset.prepare_window", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.audio.load_wav", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.audio.melspectrogram"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "while", "1", ":", "\n", "            ", "idx", "=", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "all_videos", ")", "-", "1", ")", "\n", "vidname", "=", "self", ".", "all_videos", "[", "idx", "]", "\n", "img_names", "=", "list", "(", "glob", "(", "join", "(", "vidname", ",", "'*.jpg'", ")", ")", ")", "\n", "if", "len", "(", "img_names", ")", "<=", "3", "*", "syncnet_T", ":", "\n", "                ", "continue", "\n", "\n", "", "img_name", "=", "random", ".", "choice", "(", "img_names", ")", "\n", "wrong_img_name", "=", "random", ".", "choice", "(", "img_names", ")", "\n", "while", "wrong_img_name", "==", "img_name", ":", "\n", "                ", "wrong_img_name", "=", "random", ".", "choice", "(", "img_names", ")", "\n", "\n", "", "window_fnames", "=", "self", ".", "get_window", "(", "img_name", ")", "\n", "wrong_window_fnames", "=", "self", ".", "get_window", "(", "wrong_img_name", ")", "\n", "if", "window_fnames", "is", "None", "or", "wrong_window_fnames", "is", "None", ":", "\n", "                ", "continue", "\n", "\n", "", "window", "=", "self", ".", "read_window", "(", "window_fnames", ")", "\n", "if", "window", "is", "None", ":", "\n", "                ", "continue", "\n", "\n", "", "wrong_window", "=", "self", ".", "read_window", "(", "wrong_window_fnames", ")", "\n", "if", "wrong_window", "is", "None", ":", "\n", "                ", "continue", "\n", "\n", "", "try", ":", "\n", "                ", "wavpath", "=", "join", "(", "vidname", ",", "\"audio.wav\"", ")", "\n", "wav", "=", "audio", ".", "load_wav", "(", "wavpath", ",", "audio_cfg", "[", "\"sample_rate\"", "]", ")", "\n", "\n", "orig_mel", "=", "audio", ".", "melspectrogram", "(", "wav", ")", ".", "T", "\n", "", "except", "Exception", "as", "e", ":", "\n", "                ", "continue", "\n", "\n", "", "mel", "=", "self", ".", "crop_audio_window", "(", "orig_mel", ".", "copy", "(", ")", ",", "img_name", ")", "\n", "\n", "if", "(", "mel", ".", "shape", "[", "0", "]", "!=", "syncnet_mel_step_size", ")", ":", "\n", "                ", "continue", "\n", "\n", "", "indiv_mels", "=", "self", ".", "get_segmented_mels", "(", "orig_mel", ".", "copy", "(", ")", ",", "img_name", ")", "\n", "if", "indiv_mels", "is", "None", ":", "continue", "\n", "\n", "window", "=", "self", ".", "prepare_window", "(", "window", ")", "\n", "y", "=", "window", ".", "copy", "(", ")", "\n", "window", "[", ":", ",", ":", ",", "window", ".", "shape", "[", "2", "]", "//", "2", ":", "]", "=", "0.", "\n", "\n", "wrong_window", "=", "self", ".", "prepare_window", "(", "wrong_window", ")", "\n", "x", "=", "np", ".", "concatenate", "(", "[", "window", ",", "wrong_window", "]", ",", "axis", "=", "0", ")", "\n", "\n", "x", "=", "np", ".", "float32", "(", "x", ")", "\n", "mel", "=", "np", ".", "transpose", "(", "mel", ")", "\n", "mel", "=", "np", ".", "expand_dims", "(", "mel", ",", "0", ")", "\n", "indiv_mels", "=", "np", ".", "expand_dims", "(", "indiv_mels", ",", "1", ")", "\n", "\n", "return", "{", "\n", "'x'", ":", "x", ",", "\n", "'indiv_mels'", ":", "np", ".", "float32", "(", "indiv_mels", ")", ",", "\n", "'mel'", ":", "np", ".", "float32", "(", "mel", ")", ",", "\n", "'y'", ":", "np", ".", "float32", "(", "y", ")", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.wav2lip_dataset.get_image_list": [[20, 33], ["open", "line.strip.strip", "os.path.join", "os.path.exists", "filelist.append", "line.strip.split"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["def", "get_image_list", "(", "data_root", ",", "split", ")", ":", "\n", "    ", "filelist", "=", "[", "]", "\n", "\n", "with", "open", "(", "'filelists/{}.txt'", ".", "format", "(", "split", ")", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ":", "\n", "            ", "line", "=", "line", ".", "strip", "(", ")", "\n", "if", "' '", "in", "line", ":", "line", "=", "line", ".", "split", "(", ")", "[", "0", "]", "\n", "video_path", "=", "os", ".", "path", ".", "join", "(", "data_root", ",", "line", ")", "\n", "assert", "os", ".", "path", ".", "exists", "(", "video_path", ")", ",", "'{} is not found'", ".", "format", "(", "\n", "video_path", ")", "\n", "filelist", ".", "append", "(", "video_path", ")", "\n", "\n", "", "", "return", "filelist", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.builder.build_dataset": [[29, 39], ["cfg.pop", "utils.registry.build_from_config", "repeat_dataset.RepeatDataset", "DATASETS.get"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.build_from_config", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get"], ["def", "build_dataset", "(", "cfg", ")", ":", "\n", "    ", "name", "=", "cfg", ".", "pop", "(", "'name'", ")", "\n", "\n", "if", "name", "==", "'RepeatDataset'", ":", "\n", "        ", "dataset_", "=", "build_from_config", "(", "cfg", "[", "'dataset'", "]", ",", "DATASETS", ")", "\n", "dataset", "=", "RepeatDataset", "(", "dataset_", ",", "cfg", "[", "'times'", "]", ")", "\n", "", "else", ":", "\n", "        ", "dataset", "=", "dataset", "=", "DATASETS", ".", "get", "(", "name", ")", "(", "**", "cfg", ")", "\n", "\n", "", "return", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.builder.build_dataloader": [[41, 69], ["cfg.copy", "cfg.copy.pop", "cfg.copy.pop", "cfg.copy.pop", "builder.build_dataset", "paddle.io.DistributedBatchSampler", "paddle.io.DataLoader", "paddle.io.DataLoader"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.builder.build_dataset"], ["", "def", "build_dataloader", "(", "cfg", ",", "is_train", "=", "True", ",", "distributed", "=", "True", ")", ":", "\n", "    ", "cfg_", "=", "cfg", ".", "copy", "(", ")", "\n", "\n", "batch_size", "=", "cfg_", ".", "pop", "(", "'batch_size'", ",", "1", ")", "\n", "num_workers", "=", "cfg_", ".", "pop", "(", "'num_workers'", ",", "0", ")", "\n", "use_shared_memory", "=", "cfg_", ".", "pop", "(", "'use_shared_memory'", ",", "True", ")", "\n", "\n", "dataset", "=", "build_dataset", "(", "cfg_", ")", "\n", "\n", "if", "distributed", ":", "\n", "        ", "sampler", "=", "DistributedBatchSampler", "(", "dataset", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "shuffle", "=", "True", "if", "is_train", "else", "False", ",", "\n", "drop_last", "=", "True", "if", "is_train", "else", "False", ")", "\n", "\n", "dataloader", "=", "paddle", ".", "io", ".", "DataLoader", "(", "dataset", ",", "\n", "batch_sampler", "=", "sampler", ",", "\n", "num_workers", "=", "num_workers", ",", "\n", "use_shared_memory", "=", "use_shared_memory", ")", "\n", "", "else", ":", "\n", "        ", "dataloader", "=", "paddle", ".", "io", ".", "DataLoader", "(", "dataset", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "shuffle", "=", "True", "if", "is_train", "else", "False", ",", "\n", "drop_last", "=", "True", "if", "is_train", "else", "False", ",", "\n", "use_shared_memory", "=", "use_shared_memory", ",", "\n", "num_workers", "=", "num_workers", ")", "\n", "\n", "", "return", "dataloader", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.single_dataset.SingleDataset.__init__": [[23, 33], ["base_dataset.BaseDataset.__init__", "single_dataset.SingleDataset.prepare_data_infos"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.empty_dataset.EmptyDataset.prepare_data_infos"], ["def", "__init__", "(", "self", ",", "dataroot", ",", "preprocess", ")", ":", "\n", "        ", "\"\"\"Initialize single dataset class.\n\n        Args:\n            dataroot (str): Directory of dataset.\n            preprocess (list[dict]): A sequence of data preprocess config.\n        \"\"\"", "\n", "super", "(", "SingleDataset", ",", "self", ")", ".", "__init__", "(", "preprocess", ")", "\n", "self", ".", "dataroot", "=", "dataroot", "\n", "self", ".", "data_infos", "=", "self", ".", "prepare_data_infos", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.single_dataset.SingleDataset.prepare_data_infos": [[34, 46], ["sorted", "single_dataset.SingleDataset.scan_folder", "data_infos.append", "dict"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.base_dataset.BaseDataset.scan_folder", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "prepare_data_infos", "(", "self", ")", ":", "\n", "        ", "\"\"\"prepare image paths from a folder.\n\n        Returns:\n            list[dict]: List that contains paired image paths.\n        \"\"\"", "\n", "data_infos", "=", "[", "]", "\n", "paths", "=", "sorted", "(", "self", ".", "scan_folder", "(", "self", ".", "dataroot", ")", ")", "\n", "for", "path", "in", "paths", ":", "\n", "            ", "data_infos", ".", "append", "(", "dict", "(", "A_path", "=", "path", ")", ")", "\n", "\n", "", "return", "data_infos", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.vsr_vimeo90k_dataset.VSRVimeo90KDataset.__init__": [[48, 56], ["base_sr_dataset.BaseDataset.__init__", "str", "str", "str", "vsr_vimeo90k_dataset.VSRVimeo90KDataset.prepare_data_infos"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.empty_dataset.EmptyDataset.prepare_data_infos"], ["def", "__init__", "(", "self", ",", "lq_folder", ",", "gt_folder", ",", "ann_file", ",", "preprocess", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "preprocess", ")", "\n", "\n", "self", ".", "lq_folder", "=", "str", "(", "lq_folder", ")", "\n", "self", ".", "gt_folder", "=", "str", "(", "gt_folder", ")", "\n", "self", ".", "ann_file", "=", "str", "(", "ann_file", ")", "\n", "\n", "self", ".", "data_infos", "=", "self", ".", "prepare_data_infos", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.vsr_vimeo90k_dataset.VSRVimeo90KDataset.prepare_data_infos": [[57, 72], ["open", "sorted", "sorted", "data_infos.append", "line.strip", "glob.glob", "glob.glob", "dict", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "prepare_data_infos", "(", "self", ")", ":", "\n", "\n", "        ", "with", "open", "(", "self", ".", "ann_file", ",", "'r'", ")", "as", "fin", ":", "\n", "            ", "keys", "=", "[", "line", ".", "strip", "(", ")", "for", "line", "in", "fin", "]", "\n", "\n", "", "data_infos", "=", "[", "]", "\n", "for", "key", "in", "keys", ":", "\n", "            ", "lq_paths", "=", "sorted", "(", "\n", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "self", ".", "lq_folder", ",", "key", ",", "'*.png'", ")", ")", ")", "\n", "gt_paths", "=", "sorted", "(", "\n", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "self", ".", "gt_folder", ",", "key", ",", "'*.png'", ")", ")", ")", "\n", "\n", "data_infos", ".", "append", "(", "dict", "(", "lq_path", "=", "lq_paths", ",", "gt_path", "=", "gt_paths", ",", "key", "=", "key", ")", ")", "\n", "\n", "", "return", "data_infos", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.common_vision_dataset.CommonVisionDataset.__init__": [[28, 58], ["super().__init__", "getattr", "preprocess.builder.build_transforms", "list", "getattr."], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.builder.build_transforms"], ["def", "__init__", "(", "self", ",", "\n", "dataset_name", ",", "\n", "transforms", "=", "None", ",", "\n", "return_label", "=", "True", ",", "\n", "params", "=", "None", ")", ":", "\n", "        ", "\"\"\"Initialize this dataset class.\n\n        Args:\n            dataset_name (str): return a dataset from paddle.vision.datasets by this option.\n            transforms (list[dict]): A sequence of data transforms config.\n            return_label (bool): whether to retuan a label of a sample.\n            params (dict): paramters of paddle.vision.datasets.\n        \"\"\"", "\n", "super", "(", "CommonVisionDataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "dataset_cls", "=", "getattr", "(", "paddle", ".", "vision", ".", "datasets", ",", "dataset_name", ")", "\n", "transform", "=", "build_transforms", "(", "transforms", ")", "\n", "self", ".", "return_label", "=", "return_label", "\n", "\n", "param_dict", "=", "{", "}", "\n", "param_names", "=", "list", "(", "dataset_cls", ".", "__init__", ".", "__code__", ".", "co_varnames", ")", "\n", "if", "'transform'", "in", "param_names", ":", "\n", "            ", "param_dict", "[", "'transform'", "]", "=", "transform", "\n", "\n", "", "if", "params", "is", "not", "None", ":", "\n", "            ", "for", "name", "in", "param_names", ":", "\n", "                ", "if", "name", "in", "params", ":", "\n", "                    ", "param_dict", "[", "name", "]", "=", "params", "[", "name", "]", "\n", "\n", "", "", "", "self", ".", "dataset", "=", "dataset_cls", "(", "**", "param_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.common_vision_dataset.CommonVisionDataset.__getitem__": [[59, 73], ["isinstance", "len", "numpy.asarray"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "return_dict", "=", "{", "}", "\n", "return_list", "=", "self", ".", "dataset", "[", "index", "]", "\n", "if", "isinstance", "(", "return_list", ",", "(", "tuple", ",", "list", ")", ")", ":", "\n", "            ", "if", "len", "(", "return_list", ")", "==", "2", ":", "\n", "                ", "return_dict", "[", "'img'", "]", "=", "return_list", "[", "0", "]", "\n", "if", "self", ".", "return_label", ":", "\n", "                    ", "return_dict", "[", "'class_id'", "]", "=", "np", ".", "asarray", "(", "return_list", "[", "1", "]", ")", "\n", "", "", "else", ":", "\n", "                ", "return_dict", "[", "'img'", "]", "=", "return_list", "[", "0", "]", "\n", "", "", "else", ":", "\n", "            ", "return_dict", "[", "'img'", "]", "=", "return_list", "\n", "\n", "", "return", "return_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.common_vision_dataset.CommonVisionDataset.__len__": [[74, 76], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "dataset", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.image_folder.ImageFolder.__init__": [[65, 81], ["image_folder.make_dataset", "len", "RuntimeError"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.image_folder.make_dataset"], ["    ", "def", "__init__", "(", "self", ",", "\n", "root", ",", "\n", "transform", "=", "None", ",", "\n", "return_paths", "=", "False", ",", "\n", "loader", "=", "default_loader", ")", ":", "\n", "        ", "imgs", "=", "make_dataset", "(", "root", ")", "\n", "if", "len", "(", "imgs", ")", "==", "0", ":", "\n", "            ", "raise", "(", "RuntimeError", "(", "\"Found 0 images in: \"", "+", "root", "+", "\"\\n\"", "\n", "\"Supported image extensions are: \"", "+", "\n", "\",\"", ".", "join", "(", "IMG_EXTENSIONS", ")", ")", ")", "\n", "\n", "", "self", ".", "root", "=", "root", "\n", "self", ".", "imgs", "=", "imgs", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "return_paths", "=", "return_paths", "\n", "self", ".", "loader", "=", "loader", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.image_folder.ImageFolder.__getitem__": [[82, 91], ["image_folder.ImageFolder.loader", "image_folder.ImageFolder.transform"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.animeganv2_dataset.AnimeGANV2Dataset.loader", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.utils.transform"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "path", "=", "self", ".", "imgs", "[", "index", "]", "\n", "img", "=", "self", ".", "loader", "(", "path", ")", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "", "if", "self", ".", "return_paths", ":", "\n", "            ", "return", "img", ",", "path", "\n", "", "else", ":", "\n", "            ", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.image_folder.ImageFolder.__len__": [[92, 94], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "imgs", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.image_folder.is_image_file": [[43, 45], ["any", "filename.endswith"], "function", ["None"], ["def", "is_image_file", "(", "filename", ")", ":", "\n", "    ", "return", "any", "(", "filename", ".", "endswith", "(", "extension", ")", "for", "extension", "in", "IMG_EXTENSIONS", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.image_folder.make_dataset": [[47, 58], ["float", "os.path.isdir", "os.path.isdir", "sorted", "os.walk", "os.walk", "image_folder.is_image_file", "min", "os.path.join", "os.path.join", "images.append", "float", "len"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.utils.is_image_file", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "make_dataset", "(", "dir", ",", "max_dataset_size", "=", "float", "(", "\"inf\"", ")", ")", ":", "\n", "    ", "images", "=", "[", "]", "\n", "assert", "os", ".", "path", ".", "isdir", "(", "dir", ")", ",", "'%s is not a valid directory'", "%", "dir", "\n", "\n", "for", "root", ",", "_", ",", "fnames", "in", "sorted", "(", "os", ".", "walk", "(", "dir", ")", ")", ":", "\n", "        ", "for", "fname", "in", "fnames", ":", "\n", "            ", "if", "is_image_file", "(", "fname", ")", ":", "\n", "                ", "path", "=", "os", ".", "path", ".", "join", "(", "root", ",", "fname", ")", "\n", "images", ".", "append", "(", "path", ")", "\n", "\n", "", "", "", "return", "images", "[", ":", "min", "(", "float", "(", "max_dataset_size", ")", ",", "len", "(", "images", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.image_folder.default_loader": [[60, 62], ["PIL.Image.open().convert", "PIL.Image.open"], "function", ["None"], ["", "def", "default_loader", "(", "path", ")", ":", "\n", "    ", "return", "Image", ".", "open", "(", "path", ")", ".", "convert", "(", "'RGB'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.starganv2_dataset.ImageFolder.__init__": [[36, 42], ["starganv2_dataset.ImageFolder._make_dataset", "starganv2_dataset._make_balanced_sampler", "iter"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.starganv2_dataset.ReferenceDataset._make_dataset", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.starganv2_dataset._make_balanced_sampler"], ["    ", "def", "__init__", "(", "self", ",", "root", ",", "use_sampler", "=", "False", ")", ":", "\n", "        ", "self", ".", "samples", ",", "self", ".", "targets", "=", "self", ".", "_make_dataset", "(", "root", ")", "\n", "self", ".", "use_sampler", "=", "use_sampler", "\n", "if", "self", ".", "use_sampler", ":", "\n", "            ", "self", ".", "sampler", "=", "_make_balanced_sampler", "(", "self", ".", "targets", ")", "\n", "self", ".", "iter_sampler", "=", "iter", "(", "self", ".", "sampler", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.starganv2_dataset.ImageFolder._make_dataset": [[43, 52], ["os.listdir", "enumerate", "sorted", "os.path.join", "starganv2_dataset.listdir", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.starganv2_dataset.listdir", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.starganv2_dataset.listdir"], ["", "", "def", "_make_dataset", "(", "self", ",", "root", ")", ":", "\n", "        ", "domains", "=", "os", ".", "listdir", "(", "root", ")", "\n", "fnames", ",", "labels", "=", "[", "]", ",", "[", "]", "\n", "for", "idx", ",", "domain", "in", "enumerate", "(", "sorted", "(", "domains", ")", ")", ":", "\n", "            ", "class_dir", "=", "os", ".", "path", ".", "join", "(", "root", ",", "domain", ")", "\n", "cls_fnames", "=", "listdir", "(", "class_dir", ")", "\n", "fnames", "+=", "cls_fnames", "\n", "labels", "+=", "[", "idx", "]", "*", "len", "(", "cls_fnames", ")", "\n", "", "return", "fnames", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.starganv2_dataset.ImageFolder.__getitem__": [[53, 65], ["next", "iter", "next"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "i", ")", ":", "\n", "        ", "if", "self", ".", "use_sampler", ":", "\n", "            ", "try", ":", "\n", "                ", "index", "=", "next", "(", "self", ".", "iter_sampler", ")", "\n", "", "except", "StopIteration", ":", "\n", "                ", "self", ".", "iter_sampler", "=", "iter", "(", "self", ".", "sampler", ")", "\n", "index", "=", "next", "(", "self", ".", "iter_sampler", ")", "\n", "", "", "else", ":", "\n", "            ", "index", "=", "i", "\n", "", "fname", "=", "self", ".", "samples", "[", "index", "]", "\n", "label", "=", "self", ".", "targets", "[", "index", "]", "\n", "return", "fname", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.starganv2_dataset.ImageFolder.__len__": [[66, 68], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "targets", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.starganv2_dataset.ReferenceDataset.__init__": [[71, 77], ["starganv2_dataset.ReferenceDataset._make_dataset", "starganv2_dataset._make_balanced_sampler", "iter"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.starganv2_dataset.ReferenceDataset._make_dataset", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.starganv2_dataset._make_balanced_sampler"], ["    ", "def", "__init__", "(", "self", ",", "root", ",", "use_sampler", "=", "None", ")", ":", "\n", "        ", "self", ".", "samples", ",", "self", ".", "targets", "=", "self", ".", "_make_dataset", "(", "root", ")", "\n", "self", ".", "use_sampler", "=", "use_sampler", "\n", "if", "self", ".", "use_sampler", ":", "\n", "            ", "self", ".", "sampler", "=", "_make_balanced_sampler", "(", "self", ".", "targets", ")", "\n", "self", ".", "iter_sampler", "=", "iter", "(", "self", ".", "sampler", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.starganv2_dataset.ReferenceDataset._make_dataset": [[78, 88], ["os.listdir", "enumerate", "sorted", "os.path.join", "starganv2_dataset.listdir", "random.sample", "list", "len", "len", "zip"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.starganv2_dataset.listdir", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.starganv2_dataset.listdir", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.styleganv2_predictor.sample"], ["", "", "def", "_make_dataset", "(", "self", ",", "root", ")", ":", "\n", "        ", "domains", "=", "os", ".", "listdir", "(", "root", ")", "\n", "fnames", ",", "fnames2", ",", "labels", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "idx", ",", "domain", "in", "enumerate", "(", "sorted", "(", "domains", ")", ")", ":", "\n", "            ", "class_dir", "=", "os", ".", "path", ".", "join", "(", "root", ",", "domain", ")", "\n", "cls_fnames", "=", "listdir", "(", "class_dir", ")", "\n", "fnames", "+=", "cls_fnames", "\n", "fnames2", "+=", "random", ".", "sample", "(", "cls_fnames", ",", "len", "(", "cls_fnames", ")", ")", "\n", "labels", "+=", "[", "idx", "]", "*", "len", "(", "cls_fnames", ")", "\n", "", "return", "list", "(", "zip", "(", "fnames", ",", "fnames2", ")", ")", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.starganv2_dataset.ReferenceDataset.__getitem__": [[89, 101], ["next", "iter", "next"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "i", ")", ":", "\n", "        ", "if", "self", ".", "use_sampler", ":", "\n", "            ", "try", ":", "\n", "                ", "index", "=", "next", "(", "self", ".", "iter_sampler", ")", "\n", "", "except", "StopIteration", ":", "\n", "                ", "self", ".", "iter_sampler", "=", "iter", "(", "self", ".", "sampler", ")", "\n", "index", "=", "next", "(", "self", ".", "iter_sampler", ")", "\n", "", "", "else", ":", "\n", "            ", "index", "=", "i", "\n", "", "fname", ",", "fname2", "=", "self", ".", "samples", "[", "index", "]", "\n", "label", "=", "self", ".", "targets", "[", "index", "]", "\n", "return", "fname", ",", "fname2", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.starganv2_dataset.ReferenceDataset.__len__": [[102, 104], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "targets", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.starganv2_dataset.StarGANv2Dataset.__init__": [[110, 137], ["base_dataset.BaseDataset.__init__", "starganv2_dataset.ImageFolder", "starganv2_dataset.ReferenceDataset", "len", "os.listdir", "min", "min", "starganv2_dataset.ImageFolder", "starganv2_dataset.ImageFolder", "starganv2_dataset.ImageFolder", "starganv2_dataset.ImageFolder", "len", "len", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.starganv2_dataset.listdir"], ["def", "__init__", "(", "self", ",", "dataroot", ",", "is_train", ",", "preprocess", ",", "test_count", "=", "0", ")", ":", "\n", "        ", "\"\"\"Initialize single dataset class.\n\n        Args:\n            dataroot (str): Directory of dataset.\n            preprocess (list[dict]): A sequence of data preprocess config.\n        \"\"\"", "\n", "super", "(", "StarGANv2Dataset", ",", "self", ")", ".", "__init__", "(", "preprocess", ")", "\n", "\n", "self", ".", "dataroot", "=", "dataroot", "\n", "self", ".", "is_train", "=", "is_train", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "self", ".", "src_loader", "=", "ImageFolder", "(", "self", ".", "dataroot", ",", "use_sampler", "=", "True", ")", "\n", "self", ".", "ref_loader", "=", "ReferenceDataset", "(", "self", ".", "dataroot", ",", "use_sampler", "=", "True", ")", "\n", "self", ".", "counts", "=", "len", "(", "self", ".", "src_loader", ")", "\n", "", "else", ":", "\n", "            ", "files", "=", "os", ".", "listdir", "(", "self", ".", "dataroot", ")", "\n", "if", "'src'", "in", "files", "and", "'ref'", "in", "files", ":", "\n", "                ", "self", ".", "src_loader", "=", "ImageFolder", "(", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "dataroot", ",", "'src'", ")", ")", "\n", "self", ".", "ref_loader", "=", "ImageFolder", "(", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "dataroot", ",", "'ref'", ")", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "src_loader", "=", "ImageFolder", "(", "self", ".", "dataroot", ")", "\n", "self", ".", "ref_loader", "=", "ImageFolder", "(", "self", ".", "dataroot", ")", "\n", "", "self", ".", "counts", "=", "min", "(", "test_count", ",", "len", "(", "self", ".", "src_loader", ")", ")", "\n", "self", ".", "counts", "=", "min", "(", "self", ".", "counts", ",", "len", "(", "self", ".", "ref_loader", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.starganv2_dataset.StarGANv2Dataset._fetch_inputs": [[138, 145], ["next", "iter", "next"], "methods", ["None"], ["", "", "def", "_fetch_inputs", "(", "self", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "x", ",", "y", "=", "next", "(", "self", ".", "iter_src", ")", "\n", "", "except", "(", "AttributeError", ",", "StopIteration", ")", ":", "\n", "            ", "self", ".", "iter_src", "=", "iter", "(", "self", ".", "src_loader", ")", "\n", "x", ",", "y", "=", "next", "(", "self", ".", "iter_src", ")", "\n", "", "return", "x", ",", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.starganv2_dataset.StarGANv2Dataset._fetch_refs": [[146, 153], ["next", "iter", "next"], "methods", ["None"], ["", "def", "_fetch_refs", "(", "self", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "x", ",", "x2", ",", "y", "=", "next", "(", "self", ".", "iter_ref", ")", "\n", "", "except", "(", "AttributeError", ",", "StopIteration", ")", ":", "\n", "            ", "self", ".", "iter_ref", "=", "iter", "(", "self", ".", "ref_loader", ")", "\n", "x", ",", "x2", ",", "y", "=", "next", "(", "self", ".", "iter_ref", ")", "\n", "", "return", "x", ",", "x2", ",", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.starganv2_dataset.StarGANv2Dataset.__getitem__": [[154, 179], ["starganv2_dataset.StarGANv2Dataset._fetch_inputs", "starganv2_dataset.StarGANv2Dataset._fetch_refs", "hasattr", "starganv2_dataset.StarGANv2Dataset.preprocess"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.starganv2_dataset.StarGANv2Dataset._fetch_inputs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.starganv2_dataset.StarGANv2Dataset._fetch_refs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.preprocess"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "self", ".", "is_train", ":", "\n", "            ", "x", ",", "y", "=", "self", ".", "_fetch_inputs", "(", ")", "\n", "x_ref", ",", "x_ref2", ",", "y_ref", "=", "self", ".", "_fetch_refs", "(", ")", "\n", "datas", "=", "{", "\n", "'src_path'", ":", "x", ",", "\n", "'src_cls'", ":", "y", ",", "\n", "'ref_path'", ":", "x_ref", ",", "\n", "'ref2_path'", ":", "x_ref2", ",", "\n", "'ref_cls'", ":", "y_ref", ",", "\n", "}", "\n", "", "else", ":", "\n", "            ", "x", ",", "y", "=", "self", ".", "src_loader", "[", "idx", "]", "\n", "x_ref", ",", "y_ref", "=", "self", ".", "ref_loader", "[", "idx", "]", "\n", "datas", "=", "{", "\n", "'src_path'", ":", "x", ",", "\n", "'src_cls'", ":", "y", ",", "\n", "'ref_path'", ":", "x_ref", ",", "\n", "'ref_cls'", ":", "y_ref", ",", "\n", "}", "\n", "\n", "", "if", "hasattr", "(", "self", ",", "'preprocess'", ")", "and", "self", ".", "preprocess", ":", "\n", "            ", "datas", "=", "self", ".", "preprocess", "(", "datas", ")", "\n", "\n", "", "return", "datas", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.starganv2_dataset.StarGANv2Dataset.__len__": [[180, 182], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "counts", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.starganv2_dataset.StarGANv2Dataset.prepare_data_infos": [[183, 185], ["None"], "methods", ["None"], ["", "def", "prepare_data_infos", "(", "self", ",", "dataroot", ")", ":", "\n", "        ", "pass", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.starganv2_dataset.listdir": [[19, 26], ["list", "itertools.chain", "list", "pathlib.Path().rglob", "pathlib.Path"], "function", ["None"], ["def", "listdir", "(", "dname", ")", ":", "\n", "    ", "fnames", "=", "list", "(", "\n", "chain", "(", "*", "[", "\n", "list", "(", "Path", "(", "dname", ")", ".", "rglob", "(", "'*.'", "+", "ext", ")", ")", "\n", "for", "ext", "in", "[", "'png'", ",", "'jpg'", ",", "'jpeg'", ",", "'JPG'", "]", "\n", "]", ")", ")", "\n", "return", "fnames", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.starganv2_dataset._make_balanced_sampler": [[28, 33], ["numpy.bincount", "paddle.io.WeightedRandomSampler", "len"], "function", ["None"], ["", "def", "_make_balanced_sampler", "(", "labels", ")", ":", "\n", "    ", "class_counts", "=", "np", ".", "bincount", "(", "labels", ")", "\n", "class_weights", "=", "1.", "/", "class_counts", "\n", "weights", "=", "class_weights", "[", "labels", "]", "\n", "return", "WeightedRandomSampler", "(", "weights", ",", "len", "(", "weights", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.repeat_dataset.RepeatDataset.__init__": [[31, 36], ["len"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "dataset", ",", "times", ")", ":", "\n", "        ", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "times", "=", "times", "\n", "\n", "self", ".", "_ori_len", "=", "len", "(", "self", ".", "dataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.repeat_dataset.RepeatDataset.__getitem__": [[37, 44], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "\"\"\"Get item at each call.\n\n        Args:\n            idx (int): Index for getting each item.\n        \"\"\"", "\n", "return", "self", ".", "dataset", "[", "idx", "%", "self", ".", "_ori_len", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.repeat_dataset.RepeatDataset.__len__": [[45, 52], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "\"\"\"Length of the dataset.\n\n        Returns:\n            int: Length of the dataset.\n        \"\"\"", "\n", "return", "self", ".", "times", "*", "self", ".", "_ori_len", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.lapstyle_dataset.LapStyleDataset.__init__": [[39, 47], ["paddle.io.Dataset.__init__", "os.listdir", "lapstyle_dataset.data_transform"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.starganv2_dataset.listdir", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.lapstyle_dataset.data_transform"], ["def", "__init__", "(", "self", ",", "content_root", ",", "style_root", ",", "load_size", ",", "crop_size", ")", ":", "\n", "        ", "super", "(", "LapStyleDataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "content_root", "=", "content_root", "\n", "self", ".", "paths", "=", "os", ".", "listdir", "(", "self", ".", "content_root", ")", "\n", "self", ".", "style_root", "=", "style_root", "\n", "self", ".", "load_size", "=", "load_size", "\n", "self", ".", "crop_size", "=", "crop_size", "\n", "self", ".", "transform", "=", "data_transform", "(", "self", ".", "crop_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.lapstyle_dataset.LapStyleDataset.__getitem__": [[48, 77], ["cv2.imread", "PIL.Image.fromarray", "cv2.cvtColor.resize", "numpy.array", "cv2.imread", "cv2.cvtColor", "PIL.Image.fromarray", "lapstyle_dataset.LapStyleDataset.resize", "numpy.array", "lapstyle_dataset.LapStyleDataset.transform", "lapstyle_dataset.LapStyleDataset.transform", "lapstyle_dataset.LapStyleDataset.img", "lapstyle_dataset.LapStyleDataset.img", "os.path.join", "cv2.cvtColor", "cv2.cvtColor"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.imread", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.imread", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.utils.transform", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.utils.transform", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.lapstyle_predictor.img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.lapstyle_predictor.img"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "\"\"\"Get training sample\n\n        return:\n            ci: content image with shape [C,W,H],\n            si: style image with shape [C,W,H],\n            ci_path: str\n        \"\"\"", "\n", "path", "=", "self", ".", "paths", "[", "index", "]", "\n", "content_img", "=", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "self", ".", "content_root", ",", "path", ")", ")", "\n", "if", "content_img", ".", "ndim", "==", "2", ":", "\n", "            ", "content_img", "=", "cv2", ".", "cvtColor", "(", "content_img", ",", "cv2", ".", "COLOR_GRAY2RGB", ")", "\n", "", "else", ":", "\n", "            ", "content_img", "=", "cv2", ".", "cvtColor", "(", "content_img", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "", "content_img", "=", "Image", ".", "fromarray", "(", "content_img", ")", "\n", "content_img", "=", "content_img", ".", "resize", "(", "(", "self", ".", "load_size", ",", "self", ".", "load_size", ")", ",", "\n", "Image", ".", "BILINEAR", ")", "\n", "content_img", "=", "np", ".", "array", "(", "content_img", ")", "\n", "style_img", "=", "cv2", ".", "imread", "(", "self", ".", "style_root", ")", "\n", "style_img", "=", "cv2", ".", "cvtColor", "(", "style_img", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "style_img", "=", "Image", ".", "fromarray", "(", "style_img", ")", "\n", "style_img", "=", "style_img", ".", "resize", "(", "(", "self", ".", "load_size", ",", "self", ".", "load_size", ")", ",", "\n", "Image", ".", "BILINEAR", ")", "\n", "style_img", "=", "np", ".", "array", "(", "style_img", ")", "\n", "content_img", "=", "self", ".", "transform", "(", "content_img", ")", "\n", "style_img", "=", "self", ".", "transform", "(", "style_img", ")", "\n", "content_img", "=", "self", ".", "img", "(", "content_img", ")", "\n", "style_img", "=", "self", ".", "img", "(", "style_img", ")", "\n", "return", "{", "'ci'", ":", "content_img", ",", "'si'", ":", "style_img", ",", "'ci_path'", ":", "path", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.lapstyle_dataset.LapStyleDataset.img": [[78, 92], ["numpy.transpose().astype", "numpy.transpose().astype.astype", "numpy.transpose"], "methods", ["None"], ["", "def", "img", "(", "self", ",", "img", ")", ":", "\n", "        ", "\"\"\"make image with [0,255] and HWC to [0,1] and CHW\n\n        return:\n            img: image with shape [3,W,H] and value [0, 1].\n        \"\"\"", "\n", "# [0,255] to [0,1]", "\n", "img", "=", "img", ".", "astype", "(", "np", ".", "float32", ")", "/", "255.", "\n", "# some images have 4 channels", "\n", "if", "img", ".", "shape", "[", "2", "]", ">", "3", ":", "\n", "            ", "img", "=", "img", "[", ":", ",", ":", ",", ":", "3", "]", "\n", "# HWC to CHW", "\n", "", "img", "=", "np", ".", "transpose", "(", "img", ",", "(", "2", ",", "0", ",", "1", ")", ")", ".", "astype", "(", "'float32'", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.lapstyle_dataset.LapStyleDataset.__len__": [[93, 95], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "paths", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.lapstyle_dataset.LapStyleDataset.name": [[96, 98], ["None"], "methods", ["None"], ["", "def", "name", "(", "self", ")", ":", "\n", "        ", "return", "'LapStyleDataset'", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.lapstyle_dataset.data_transform": [[29, 32], ["paddle.Compose", "paddle.RandomCrop"], "function", ["None"], ["def", "data_transform", "(", "crop_size", ")", ":", "\n", "    ", "transform_list", "=", "[", "T", ".", "RandomCrop", "(", "crop_size", ")", "]", "\n", "return", "T", ".", "Compose", "(", "transform_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.empty_dataset.EmptyDataset.__init__": [[24, 28], ["base_dataset.BaseDataset.__init__", "empty_dataset.EmptyDataset.prepare_data_infos"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.empty_dataset.EmptyDataset.prepare_data_infos"], ["def", "__init__", "(", "self", ",", "size", "=", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "size", "=", "size", "\n", "self", ".", "data_infos", "=", "self", ".", "prepare_data_infos", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.empty_dataset.EmptyDataset.prepare_data_infos": [[29, 31], ["range"], "methods", ["None"], ["", "def", "prepare_data_infos", "(", "self", ")", ":", "\n", "        ", "return", "[", "{", "i", ":", "0", "}", "for", "i", "in", "range", "(", "self", ".", "size", ")", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.Transforms.__init__": [[52, 58], ["transforms.Transforms.transforms.append", "builder.build_from_config"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.build_from_config"], ["    ", "def", "__init__", "(", "self", ",", "pipeline", ",", "input_keys", ",", "output_keys", "=", "None", ")", ":", "\n", "        ", "self", ".", "input_keys", "=", "input_keys", "\n", "self", ".", "output_keys", "=", "output_keys", "\n", "self", ".", "transforms", "=", "[", "]", "\n", "for", "transform_cfg", "in", "pipeline", ":", "\n", "            ", "self", ".", "transforms", ".", "append", "(", "build_from_config", "(", "transform_cfg", ",", "TRANSFORMS", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.Transforms.__call__": [[59, 83], ["tuple", "transform.append", "transform", "len", "enumerate", "enumerate", "hasattr", "isinstance", "datas.update"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.utils.transform", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update"], ["", "", "def", "__call__", "(", "self", ",", "datas", ")", ":", "\n", "        ", "data", "=", "[", "]", "\n", "\n", "for", "k", "in", "self", ".", "input_keys", ":", "\n", "            ", "data", ".", "append", "(", "datas", "[", "k", "]", ")", "\n", "", "data", "=", "tuple", "(", "data", ")", "\n", "for", "transform", "in", "self", ".", "transforms", ":", "\n", "            ", "data", "=", "transform", "(", "data", ")", "\n", "if", "hasattr", "(", "transform", ",", "'params'", ")", "and", "isinstance", "(", "\n", "transform", ".", "params", ",", "dict", ")", ":", "\n", "                ", "datas", ".", "update", "(", "transform", ".", "params", ")", "\n", "\n", "", "", "if", "len", "(", "self", ".", "input_keys", ")", ">", "1", ":", "\n", "            ", "for", "i", ",", "k", "in", "enumerate", "(", "self", ".", "input_keys", ")", ":", "\n", "                ", "datas", "[", "k", "]", "=", "data", "[", "i", "]", "\n", "", "", "else", ":", "\n", "            ", "datas", "[", "k", "]", "=", "data", "\n", "\n", "", "if", "self", ".", "output_keys", "is", "not", "None", ":", "\n", "            ", "for", "i", ",", "k", "in", "enumerate", "(", "self", ".", "output_keys", ")", ":", "\n", "                ", "datas", "[", "k", "]", "=", "data", "[", "i", "]", "\n", "", "return", "datas", "\n", "\n", "", "return", "datas", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.SplitPairedImage.__init__": [[88, 91], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "key", ",", "paired_keys", "=", "[", "'A'", ",", "'B'", "]", ")", ":", "\n", "        ", "self", ".", "key", "=", "key", "\n", "self", ".", "paired_keys", "=", "paired_keys", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.SplitPairedImage.__call__": [[92, 106], ["int"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "datas", ")", ":", "\n", "# split AB image into A and B", "\n", "        ", "h", ",", "w", "=", "datas", "[", "self", ".", "key", "]", ".", "shape", "[", ":", "2", "]", "\n", "# w, h = AB.size", "\n", "w2", "=", "int", "(", "w", "/", "2", ")", "\n", "\n", "a", ",", "b", "=", "self", ".", "paired_keys", "\n", "datas", "[", "a", "]", "=", "datas", "[", "self", ".", "key", "]", "[", ":", "h", ",", ":", "w2", ",", ":", "]", "\n", "datas", "[", "b", "]", "=", "datas", "[", "self", ".", "key", "]", "[", ":", "h", ",", "w2", ":", ",", ":", "]", "\n", "\n", "datas", "[", "a", "+", "'_path'", "]", "=", "datas", "[", "self", ".", "key", "+", "'_path'", "]", "\n", "datas", "[", "b", "+", "'_path'", "]", "=", "datas", "[", "self", ".", "key", "+", "'_path'", "]", "\n", "\n", "return", "datas", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.PairedRandomCrop.__init__": [[111, 118], ["paddle.RandomCrop.__init__", "isinstance"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "size", ",", "keys", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "size", ",", "keys", "=", "keys", ")", "\n", "\n", "if", "isinstance", "(", "size", ",", "int", ")", ":", "\n", "            ", "self", ".", "size", "=", "(", "size", ",", "size", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "size", "=", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.PairedRandomCrop._get_params": [[119, 124], ["transforms.PairedRandomCrop._get_param", "transforms.PairedRandomCrop.keys.index"], "methods", ["None"], ["", "", "def", "_get_params", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "image", "=", "inputs", "[", "self", ".", "keys", ".", "index", "(", "'image'", ")", "]", "\n", "params", "=", "{", "}", "\n", "params", "[", "'crop_prams'", "]", "=", "self", ".", "_get_param", "(", "image", ",", "self", ".", "size", ")", "\n", "return", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.PairedRandomCrop._apply_image": [[125, 128], ["paddle.crop", "paddle.crop", "paddle.crop"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.utils.crop", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.utils.crop", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.utils.crop"], ["", "def", "_apply_image", "(", "self", ",", "img", ")", ":", "\n", "        ", "i", ",", "j", ",", "h", ",", "w", "=", "self", ".", "params", "[", "'crop_prams'", "]", "\n", "return", "F", ".", "crop", "(", "img", ",", "i", ",", "j", ",", "h", ",", "w", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.PairedToTensor.__init__": [[133, 135], ["paddle.ToTensor.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "data_format", "=", "'CHW'", ",", "keys", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "data_format", ",", "keys", "=", "keys", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.PairedToTensor._apply_image": [[136, 138], ["paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor"], "methods", ["None"], ["", "def", "_apply_image", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "F", ".", "to_tensor", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.PairedRandomHorizontalFlip.__init__": [[143, 145], ["paddle.RandomHorizontalFlip.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "prob", "=", "0.5", ",", "keys", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "prob", ",", "keys", "=", "keys", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.PairedRandomHorizontalFlip._get_params": [[146, 150], ["random.random"], "methods", ["None"], ["", "def", "_get_params", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "params", "=", "{", "}", "\n", "params", "[", "'flip'", "]", "=", "random", ".", "random", "(", ")", "<", "self", ".", "prob", "\n", "return", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.PairedRandomHorizontalFlip._apply_image": [[151, 158], ["isinstance", "paddle.hflip", "paddle.hflip", "paddle.hflip", "paddle.hflip", "paddle.hflip", "paddle.hflip"], "methods", ["None"], ["", "def", "_apply_image", "(", "self", ",", "image", ")", ":", "\n", "        ", "if", "self", ".", "params", "[", "'flip'", "]", ":", "\n", "            ", "if", "isinstance", "(", "image", ",", "list", ")", ":", "\n", "                ", "image", "=", "[", "F", ".", "hflip", "(", "v", ")", "for", "v", "in", "image", "]", "\n", "", "else", ":", "\n", "                ", "return", "F", ".", "hflip", "(", "image", ")", "\n", "", "", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.PairedRandomVerticalFlip.__init__": [[163, 165], ["paddle.RandomHorizontalFlip.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "prob", "=", "0.5", ",", "keys", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "prob", ",", "keys", "=", "keys", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.PairedRandomVerticalFlip._get_params": [[166, 170], ["random.random"], "methods", ["None"], ["", "def", "_get_params", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "params", "=", "{", "}", "\n", "params", "[", "'flip'", "]", "=", "random", ".", "random", "(", ")", "<", "self", ".", "prob", "\n", "return", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.PairedRandomVerticalFlip._apply_image": [[171, 178], ["isinstance", "paddle.vflip", "paddle.vflip", "paddle.vflip", "paddle.vflip", "paddle.vflip", "paddle.vflip"], "methods", ["None"], ["", "def", "_apply_image", "(", "self", ",", "image", ")", ":", "\n", "        ", "if", "self", ".", "params", "[", "'flip'", "]", ":", "\n", "            ", "if", "isinstance", "(", "image", ",", "list", ")", ":", "\n", "                ", "image", "=", "[", "F", ".", "vflip", "(", "v", ")", "for", "v", "in", "image", "]", "\n", "", "else", ":", "\n", "                ", "return", "F", ".", "vflip", "(", "image", ")", "\n", "", "", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.PairedRandomTransposeHW.__init__": [[197, 200], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "prob", "=", "0.5", ",", "keys", "=", "None", ")", ":", "\n", "        ", "self", ".", "keys", "=", "keys", "\n", "self", ".", "prob", "=", "prob", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.PairedRandomTransposeHW._get_params": [[201, 205], ["random.random"], "methods", ["None"], ["", "def", "_get_params", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "params", "=", "{", "}", "\n", "params", "[", "'transpose'", "]", "=", "random", ".", "random", "(", ")", "<", "self", ".", "prob", "\n", "return", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.PairedRandomTransposeHW._apply_image": [[206, 213], ["isinstance", "image.transpose.transpose.transpose", "v.transpose"], "methods", ["None"], ["", "def", "_apply_image", "(", "self", ",", "image", ")", ":", "\n", "        ", "if", "self", ".", "params", "[", "'transpose'", "]", ":", "\n", "            ", "if", "isinstance", "(", "image", ",", "list", ")", ":", "\n", "                ", "image", "=", "[", "v", ".", "transpose", "(", "1", ",", "0", ",", "2", ")", "for", "v", "in", "image", "]", "\n", "", "else", ":", "\n", "                ", "image", "=", "image", ".", "transpose", "(", "1", ",", "0", ",", "2", ")", "\n", "", "", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.TransposeSequence._apply_image": [[242, 266], ["isinstance", "paddle._is_tensor_image", "paddle._is_tensor_image", "paddle._is_tensor_image", "paddle._is_pil_image", "paddle._is_pil_image", "paddle._is_pil_image", "numpy.asarray.transpose", "paddle._is_tensor_image", "paddle._is_tensor_image", "paddle._is_tensor_image", "paddle._is_pil_image", "paddle._is_pil_image", "paddle._is_pil_image", "imgs.append", "numpy.asarray.transpose", "numpy.asarray", "len", "numpy.asarray.transpose", "numpy.asarray", "len", "numpy.asarray.transpose"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["def", "_apply_image", "(", "self", ",", "img", ")", ":", "\n", "        ", "if", "isinstance", "(", "img", ",", "list", ")", ":", "\n", "            ", "imgs", "=", "[", "]", "\n", "for", "im", "in", "img", ":", "\n", "                ", "if", "F", ".", "_is_tensor_image", "(", "im", ")", ":", "\n", "                    ", "return", "im", ".", "transpose", "(", "self", ".", "order", ")", "\n", "\n", "", "if", "F", ".", "_is_pil_image", "(", "im", ")", ":", "\n", "                    ", "im", "=", "np", ".", "asarray", "(", "im", ")", "\n", "\n", "", "if", "len", "(", "im", ".", "shape", ")", "==", "2", ":", "\n", "                    ", "im", "=", "im", "[", "...", ",", "np", ".", "newaxis", "]", "\n", "", "imgs", ".", "append", "(", "im", ".", "transpose", "(", "self", ".", "order", ")", ")", "\n", "", "return", "imgs", "\n", "", "else", ":", "\n", "            ", "if", "F", ".", "_is_tensor_image", "(", "img", ")", ":", "\n", "                ", "return", "img", ".", "transpose", "(", "self", ".", "order", ")", "\n", "\n", "", "if", "F", ".", "_is_pil_image", "(", "img", ")", ":", "\n", "                ", "img", "=", "np", ".", "asarray", "(", "img", ")", "\n", "\n", "", "if", "len", "(", "img", ".", "shape", ")", "==", "2", ":", "\n", "                ", "img", "=", "img", "[", "...", ",", "np", ".", "newaxis", "]", "\n", "", "return", "img", ".", "transpose", "(", "self", ".", "order", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.NormalizeSequence._apply_image": [[300, 310], ["isinstance", "paddle.normalize", "paddle.normalize", "paddle.normalize", "numpy.stack().astype", "paddle.normalize", "paddle.normalize", "paddle.normalize", "numpy.stack"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.normalize"], ["def", "_apply_image", "(", "self", ",", "img", ")", ":", "\n", "        ", "if", "isinstance", "(", "img", ",", "list", ")", ":", "\n", "            ", "imgs", "=", "[", "\n", "F", ".", "normalize", "(", "v", ",", "self", ".", "mean", ",", "self", ".", "std", ",", "self", ".", "data_format", ",", "\n", "self", ".", "to_rgb", ")", "for", "v", "in", "img", "\n", "]", "\n", "return", "np", ".", "stack", "(", "imgs", ",", "axis", "=", "0", ")", ".", "astype", "(", "'float32'", ")", "\n", "\n", "", "return", "F", ".", "normalize", "(", "img", ",", "self", ".", "mean", ",", "self", ".", "std", ",", "self", ".", "data_format", ",", "\n", "self", ".", "to_rgb", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.SRPairedRandomCrop.__init__": [[326, 331], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "scale", ",", "gt_patch_size", ",", "scale_list", "=", "False", ",", "keys", "=", "None", ")", ":", "\n", "        ", "self", ".", "gt_patch_size", "=", "gt_patch_size", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "keys", "=", "keys", "\n", "self", ".", "scale_list", "=", "scale_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.SRPairedRandomCrop.__call__": [[332, 382], ["isinstance", "random.randint", "random.randint", "isinstance", "ValueError", "ValueError", "int", "int", "int", "int", "paddle.resize", "paddle.resize", "paddle.resize"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize"], ["", "def", "__call__", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "\"\"\"inputs must be (lq_img or list[lq_img], gt_img or list[gt_img])\"\"\"", "\n", "scale", "=", "self", ".", "scale", "\n", "lq_patch_size", "=", "self", ".", "gt_patch_size", "//", "scale", "\n", "\n", "lq", "=", "inputs", "[", "0", "]", "\n", "gt", "=", "inputs", "[", "1", "]", "\n", "\n", "if", "isinstance", "(", "lq", ",", "list", ")", ":", "\n", "            ", "h_lq", ",", "w_lq", ",", "_", "=", "lq", "[", "0", "]", ".", "shape", "\n", "h_gt", ",", "w_gt", ",", "_", "=", "gt", "[", "0", "]", ".", "shape", "\n", "", "else", ":", "\n", "            ", "h_lq", ",", "w_lq", ",", "_", "=", "lq", ".", "shape", "\n", "h_gt", ",", "w_gt", ",", "_", "=", "gt", ".", "shape", "\n", "\n", "", "if", "h_gt", "!=", "h_lq", "*", "scale", "or", "w_gt", "!=", "w_lq", "*", "scale", ":", "\n", "            ", "raise", "ValueError", "(", "'scale size not match'", ")", "\n", "", "if", "h_lq", "<", "lq_patch_size", "or", "w_lq", "<", "lq_patch_size", ":", "\n", "            ", "raise", "ValueError", "(", "'lq size error'", ")", "\n", "\n", "# randomly choose top and left coordinates for lq patch", "\n", "", "top", "=", "random", ".", "randint", "(", "0", ",", "h_lq", "-", "lq_patch_size", ")", "\n", "left", "=", "random", ".", "randint", "(", "0", ",", "w_lq", "-", "lq_patch_size", ")", "\n", "\n", "if", "isinstance", "(", "lq", ",", "list", ")", ":", "\n", "            ", "lq", "=", "[", "\n", "v", "[", "top", ":", "top", "+", "lq_patch_size", ",", "left", ":", "left", "+", "lq_patch_size", ",", "...", "]", "\n", "for", "v", "in", "lq", "\n", "]", "\n", "top_gt", ",", "left_gt", "=", "int", "(", "top", "*", "scale", ")", ",", "int", "(", "left", "*", "scale", ")", "\n", "gt", "=", "[", "\n", "v", "[", "top_gt", ":", "top_gt", "+", "self", ".", "gt_patch_size", ",", "\n", "left_gt", ":", "left_gt", "+", "self", ".", "gt_patch_size", ",", "...", "]", "for", "v", "in", "gt", "\n", "]", "\n", "", "else", ":", "\n", "# crop lq patch", "\n", "            ", "lq", "=", "lq", "[", "top", ":", "top", "+", "lq_patch_size", ",", "left", ":", "left", "+", "lq_patch_size", ",", "...", "]", "\n", "# crop corresponding gt patch", "\n", "top_gt", ",", "left_gt", "=", "int", "(", "top", "*", "scale", ")", ",", "int", "(", "left", "*", "scale", ")", "\n", "gt", "=", "gt", "[", "top_gt", ":", "top_gt", "+", "self", ".", "gt_patch_size", ",", "\n", "left_gt", ":", "left_gt", "+", "self", ".", "gt_patch_size", ",", "...", "]", "\n", "\n", "if", "self", ".", "scale_list", "and", "self", ".", "scale", "==", "4", ":", "\n", "                ", "lqx2", "=", "F", ".", "resize", "(", "gt", ",", "(", "lq_patch_size", "*", "2", ",", "lq_patch_size", "*", "2", ")", ",", "\n", "'bicubic'", ")", "\n", "outputs", "=", "(", "lq", ",", "lqx2", ",", "gt", ")", "\n", "return", "outputs", "\n", "\n", "", "", "outputs", "=", "(", "lq", ",", "gt", ")", "\n", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.SRNoise.__init__": [[393, 402], ["sorted", "paddle.Compose", "paddle.Compose", "paddle.Compose", "glob.glob", "paddle.RandomCrop", "paddle.RandomCrop", "paddle.RandomCrop", "paddle.Transpose", "paddle.Transpose", "paddle.Transpose", "paddle.Normalize", "paddle.Normalize", "paddle.Normalize"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "noise_path", ",", "size", ",", "keys", "=", "None", ")", ":", "\n", "        ", "self", ".", "noise_path", "=", "noise_path", "\n", "self", ".", "noise_imgs", "=", "sorted", "(", "glob", ".", "glob", "(", "noise_path", "+", "'*.png'", ")", ")", "\n", "self", ".", "size", "=", "size", "\n", "self", ".", "keys", "=", "keys", "\n", "self", ".", "transform", "=", "T", ".", "Compose", "(", "[", "\n", "T", ".", "RandomCrop", "(", "size", ")", ",", "\n", "T", ".", "Transpose", "(", ")", ",", "\n", "T", ".", "Normalize", "(", "[", "0.", ",", "0.", ",", "0.", "]", ",", "[", "255.", ",", "255.", ",", "255.", "]", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.SRNoise._apply_image": [[404, 411], ["numpy.random.randint", "transforms.SRNoise.transform", "numpy.clip", "len", "PIL.Image.open", "numpy.mean"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.utils.transform"], ["", "def", "_apply_image", "(", "self", ",", "image", ")", ":", "\n", "        ", "idx", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "noise_imgs", ")", ")", "\n", "noise", "=", "self", ".", "transform", "(", "Image", ".", "open", "(", "self", ".", "noise_imgs", "[", "idx", "]", ")", ")", "\n", "normed_noise", "=", "noise", "-", "np", ".", "mean", "(", "noise", ",", "axis", "=", "(", "1", ",", "2", ")", ",", "keepdims", "=", "True", ")", "\n", "image", "=", "image", "+", "normed_noise", "\n", "image", "=", "np", ".", "clip", "(", "image", ",", "0.", ",", "1.", ")", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.RandomResizedCropProb.__init__": [[422, 426], ["paddle.RandomResizedCrop.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "prob", ",", "size", ",", "scale", ",", "ratio", ",", "interpolation", ",", "keys", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "size", ",", "scale", ",", "ratio", ",", "interpolation", ")", "\n", "self", ".", "prob", "=", "prob", "\n", "self", ".", "keys", "=", "keys", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.RandomResizedCropProb._apply_image": [[427, 431], ["random.random", "super()._apply_image"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.PairedColorJitter._apply_image"], ["", "def", "_apply_image", "(", "self", ",", "image", ")", ":", "\n", "        ", "if", "random", ".", "random", "(", ")", "<", "self", ".", "prob", ":", "\n", "            ", "image", "=", "super", "(", ")", ".", "_apply_image", "(", "image", ")", "\n", "", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.Add.__init__": [[436, 444], ["paddle.BaseTransform.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "value", ",", "keys", "=", "None", ")", ":", "\n", "        ", "\"\"\"Initialize Add Transform\n\n        Parameters:\n            value (List[int]) -- the [r,g,b] value will add to image by pixel wise.\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "keys", "=", "keys", ")", "\n", "self", ".", "value", "=", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.Add._get_params": [[445, 449], ["None"], "methods", ["None"], ["", "def", "_get_params", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "params", "=", "{", "}", "\n", "params", "[", "'value'", "]", "=", "self", ".", "value", "\n", "return", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.Add._apply_image": [[450, 452], ["numpy.clip().astype", "numpy.clip"], "methods", ["None"], ["", "def", "_apply_image", "(", "self", ",", "image", ")", ":", "\n", "        ", "return", "np", ".", "clip", "(", "image", "+", "self", ".", "params", "[", "'value'", "]", ",", "0", ",", "255", ")", ".", "astype", "(", "'uint8'", ")", "\n", "# return custom_F.add(image, self.params['value'])", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.ResizeToScale.__init__": [[458, 477], ["paddle.BaseTransform.__init__", "isinstance"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "size", ":", "int", ",", "\n", "scale", ":", "int", ",", "\n", "interpolation", "=", "'bilinear'", ",", "\n", "keys", "=", "None", ")", ":", "\n", "        ", "\"\"\"Initialize ResizeToScale Transform\n\n        Parameters:\n            size (List[int]) -- the minimum target size\n            scale (List[int]) -- the stride scale\n            interpolation (Optional[str]) -- interpolation method\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "keys", "=", "keys", ")", "\n", "if", "isinstance", "(", "size", ",", "int", ")", ":", "\n", "            ", "self", ".", "size", "=", "(", "size", ",", "size", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "size", "=", "size", "\n", "", "self", ".", "scale", "=", "scale", "\n", "self", ".", "interpolation", "=", "interpolation", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.ResizeToScale._get_params": [[478, 485], ["transforms.ResizeToScale.reduce_to_scale", "transforms.ResizeToScale.keys.index"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.ResizeToScale.reduce_to_scale"], ["", "def", "_get_params", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "image", "=", "inputs", "[", "self", ".", "keys", ".", "index", "(", "'image'", ")", "]", "\n", "hw", "=", "image", ".", "shape", "[", ":", "2", "]", "\n", "params", "=", "{", "}", "\n", "params", "[", "'taget_size'", "]", "=", "self", ".", "reduce_to_scale", "(", "hw", ",", "self", ".", "size", "[", ":", ":", "-", "1", "]", ",", "\n", "self", ".", "scale", ")", "\n", "return", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.ResizeToScale.reduce_to_scale": [[486, 501], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "reduce_to_scale", "(", "img_hw", ",", "min_hw", ",", "scale", ")", ":", "\n", "        ", "im_h", ",", "im_w", "=", "img_hw", "\n", "if", "im_h", "<=", "min_hw", "[", "0", "]", ":", "\n", "            ", "im_h", "=", "min_hw", "[", "0", "]", "\n", "", "else", ":", "\n", "            ", "x", "=", "im_h", "%", "scale", "\n", "im_h", "=", "im_h", "-", "x", "\n", "\n", "", "if", "im_w", "<", "min_hw", "[", "1", "]", ":", "\n", "            ", "im_w", "=", "min_hw", "[", "1", "]", "\n", "", "else", ":", "\n", "            ", "y", "=", "im_w", "%", "scale", "\n", "im_w", "=", "im_w", "-", "y", "\n", "", "return", "(", "im_h", ",", "im_w", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.ResizeToScale._apply_image": [[502, 504], ["paddle.resize", "paddle.resize", "paddle.resize"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize"], ["", "def", "_apply_image", "(", "self", ",", "image", ")", ":", "\n", "        ", "return", "F", ".", "resize", "(", "image", ",", "self", ".", "params", "[", "'taget_size'", "]", ",", "self", ".", "interpolation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.PairedColorJitter.__init__": [[509, 524], ["paddle.BaseTransform.__init__", "paddle.transforms._check_input", "paddle.transforms._check_input", "paddle.transforms._check_input", "paddle.transforms._check_input", "paddle.transforms._check_input", "paddle.transforms._check_input", "paddle.transforms._check_input", "paddle.transforms._check_input", "paddle.transforms._check_input", "paddle.transforms._check_input", "paddle.transforms._check_input", "paddle.transforms._check_input"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "brightness", "=", "0", ",", "\n", "contrast", "=", "0", ",", "\n", "saturation", "=", "0", ",", "\n", "hue", "=", "0", ",", "\n", "keys", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "keys", "=", "keys", ")", "\n", "self", ".", "brightness", "=", "T", ".", "transforms", ".", "_check_input", "(", "brightness", ",", "'brightness'", ")", "\n", "self", ".", "contrast", "=", "T", ".", "transforms", ".", "_check_input", "(", "contrast", ",", "'contrast'", ")", "\n", "self", ".", "saturation", "=", "T", ".", "transforms", ".", "_check_input", "(", "saturation", ",", "'saturation'", ")", "\n", "self", ".", "hue", "=", "T", ".", "transforms", ".", "_check_input", "(", "hue", ",", "\n", "'hue'", ",", "\n", "center", "=", "0", ",", "\n", "bound", "=", "(", "-", "0.5", ",", "0.5", ")", ",", "\n", "clip_first_on_zero", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.PairedColorJitter._get_params": [[525, 556], ["random.shuffle", "random.uniform", "transforms.append", "random.uniform", "transforms.append", "random.uniform", "transforms.append", "random.uniform", "transforms.append", "paddle.adjust_brightness", "paddle.adjust_brightness", "paddle.adjust_brightness", "paddle.adjust_contrast", "paddle.adjust_contrast", "paddle.adjust_contrast", "paddle.adjust_saturation", "paddle.adjust_saturation", "paddle.adjust_saturation", "paddle.adjust_hue", "paddle.adjust_hue", "paddle.adjust_hue"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.animegan_predictor.AnimeGANPredictor.adjust_brightness", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.animegan_predictor.AnimeGANPredictor.adjust_brightness", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.animegan_predictor.AnimeGANPredictor.adjust_brightness"], ["", "def", "_get_params", "(", "self", ",", "input", ")", ":", "\n", "        ", "\"\"\"Get a randomized transform to be applied on image.\n        Arguments are same as that of __init__.\n        Returns:\n            Transform which randomly adjusts brightness, contrast and\n            saturation in a random order.\n        \"\"\"", "\n", "transforms", "=", "[", "]", "\n", "\n", "if", "self", ".", "brightness", "is", "not", "None", ":", "\n", "            ", "brightness", "=", "random", ".", "uniform", "(", "self", ".", "brightness", "[", "0", "]", ",", "self", ".", "brightness", "[", "1", "]", ")", "\n", "f", "=", "lambda", "img", ":", "F", ".", "adjust_brightness", "(", "img", ",", "brightness", ")", "\n", "transforms", ".", "append", "(", "f", ")", "\n", "\n", "", "if", "self", ".", "contrast", "is", "not", "None", ":", "\n", "            ", "contrast", "=", "random", ".", "uniform", "(", "self", ".", "contrast", "[", "0", "]", ",", "self", ".", "contrast", "[", "1", "]", ")", "\n", "f", "=", "lambda", "img", ":", "F", ".", "adjust_contrast", "(", "img", ",", "contrast", ")", "\n", "transforms", ".", "append", "(", "f", ")", "\n", "\n", "", "if", "self", ".", "saturation", "is", "not", "None", ":", "\n", "            ", "saturation", "=", "random", ".", "uniform", "(", "self", ".", "saturation", "[", "0", "]", ",", "self", ".", "saturation", "[", "1", "]", ")", "\n", "f", "=", "lambda", "img", ":", "F", ".", "adjust_saturation", "(", "img", ",", "saturation", ")", "\n", "transforms", ".", "append", "(", "f", ")", "\n", "\n", "", "if", "self", ".", "hue", "is", "not", "None", ":", "\n", "            ", "hue", "=", "random", ".", "uniform", "(", "self", ".", "hue", "[", "0", "]", ",", "self", ".", "hue", "[", "1", "]", ")", "\n", "f", "=", "lambda", "img", ":", "F", ".", "adjust_hue", "(", "img", ",", "hue", ")", "\n", "transforms", ".", "append", "(", "f", ")", "\n", "\n", "", "random", ".", "shuffle", "(", "transforms", ")", "\n", "return", "transforms", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.PairedColorJitter._apply_image": [[557, 561], ["f"], "methods", ["None"], ["", "def", "_apply_image", "(", "self", ",", "img", ")", ":", "\n", "        ", "for", "f", "in", "self", ".", "params", ":", "\n", "            ", "img", "=", "f", "(", "img", ")", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.MirrorVideoSequence.__init__": [[575, 577], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "keys", "=", "None", ")", ":", "\n", "        ", "self", ".", "keys", "=", "keys", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.transforms.MirrorVideoSequence.__call__": [[578, 595], ["isinstance", "isinstance"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "datas", ")", ":", "\n", "        ", "\"\"\"Call function.\n\n        Args:\n            datas (dict): A dict containing the necessary information and\n                data for augmentation.\n\n        Returns:\n            dict: A dict containing the processed data and information.\n        \"\"\"", "\n", "lrs", ",", "hrs", "=", "datas", "\n", "assert", "isinstance", "(", "lrs", ",", "list", ")", "and", "isinstance", "(", "hrs", ",", "list", ")", "\n", "\n", "lrs", "=", "lrs", "+", "lrs", "[", ":", ":", "-", "1", "]", "\n", "hrs", "=", "hrs", "+", "hrs", "[", ":", ":", "-", "1", "]", "\n", "\n", "return", "(", "lrs", ",", "hrs", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.io.LoadImageFromFile.__init__": [[21, 34], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "\n", "key", "=", "'image'", ",", "\n", "flag", "=", "-", "1", ",", "\n", "to_rgb", "=", "True", ",", "\n", "save_original_img", "=", "False", ",", "\n", "backend", "=", "None", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "key", "=", "key", "\n", "self", ".", "flag", "=", "flag", "\n", "self", ".", "to_rgb", "=", "to_rgb", "\n", "self", ".", "backend", "=", "backend", "\n", "self", ".", "save_original_img", "=", "save_original_img", "\n", "self", ".", "kwargs", "=", "kwargs", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.io.LoadImageFromFile.__call__": [[35, 60], ["str", "cv2.imread", "cv2.cvtColor", "cv2.cvtColor.copy"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.imread"], ["", "def", "__call__", "(", "self", ",", "datas", ")", ":", "\n", "        ", "\"\"\"Call function.\n\n        Args:\n            datas (dict): A dict containing the necessary information and\n                data for augmentation.\n\n        Returns:\n            dict: A dict containing the processed data and information.\n        \"\"\"", "\n", "\n", "filepath", "=", "str", "(", "datas", "[", "f'{self.key}_path'", "]", ")", "\n", "#TODO: use file client to manage io backend", "\n", "# such as opencv, pil, imdb", "\n", "img", "=", "cv2", ".", "imread", "(", "filepath", ",", "self", ".", "flag", ")", "\n", "if", "self", ".", "to_rgb", ":", "\n", "            ", "img", "=", "cv2", ".", "cvtColor", "(", "img", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "\n", "", "datas", "[", "self", ".", "key", "]", "=", "img", "\n", "datas", "[", "f'{self.key}_path'", "]", "=", "filepath", "\n", "datas", "[", "f'{self.key}_ori_shape'", "]", "=", "img", ".", "shape", "\n", "if", "self", ".", "save_original_img", ":", "\n", "            ", "datas", "[", "f'ori_{self.key}'", "]", "=", "img", ".", "copy", "(", ")", "\n", "\n", "", "return", "datas", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.io.ReadImageSequence.__call__": [[77, 118], ["isinstance", "TypeError", "str", "cv2.imread", "imgs.append", "shapes.append", "cv2.cvtColor", "numpy.expand_dims", "ori_imgs.append", "numpy.expand_dims.copy", "type"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.imread", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["def", "__call__", "(", "self", ",", "datas", ")", ":", "\n", "        ", "\"\"\"Call function.\n\n        Args:\n            datas (dict): A dict containing the necessary information and\n                data for augmentation.\n\n        Returns:\n            dict: A dict containing the processed data and information.\n        \"\"\"", "\n", "\n", "filepaths", "=", "datas", "[", "f'{self.key}_path'", "]", "\n", "if", "not", "isinstance", "(", "filepaths", ",", "list", ")", ":", "\n", "            ", "raise", "TypeError", "(", "\n", "f'filepath should be list, but got {type(filepaths)}'", ")", "\n", "\n", "", "filepaths", "=", "[", "str", "(", "v", ")", "for", "v", "in", "filepaths", "]", "\n", "\n", "imgs", "=", "[", "]", "\n", "shapes", "=", "[", "]", "\n", "if", "self", ".", "save_original_img", ":", "\n", "            ", "ori_imgs", "=", "[", "]", "\n", "", "for", "filepath", "in", "filepaths", ":", "\n", "            ", "img", "=", "cv2", ".", "imread", "(", "filepath", ",", "self", ".", "flag", ")", "\n", "\n", "if", "self", ".", "to_rgb", ":", "\n", "                ", "img", "=", "cv2", ".", "cvtColor", "(", "img", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "", "if", "img", ".", "ndim", "==", "2", ":", "\n", "                ", "img", "=", "np", ".", "expand_dims", "(", "img", ",", "axis", "=", "2", ")", "\n", "", "imgs", ".", "append", "(", "img", ")", "\n", "shapes", ".", "append", "(", "img", ".", "shape", ")", "\n", "if", "self", ".", "save_original_img", ":", "\n", "                ", "ori_imgs", ".", "append", "(", "img", ".", "copy", "(", ")", ")", "\n", "\n", "", "", "datas", "[", "self", ".", "key", "]", "=", "imgs", "\n", "datas", "[", "f'{self.key}_path'", "]", "=", "filepaths", "\n", "datas", "[", "f'{self.key}_ori_shape'", "]", "=", "shapes", "\n", "if", "self", ".", "save_original_img", ":", "\n", "            ", "datas", "[", "f'ori_{self.key}'", "]", "=", "ori_imgs", "\n", "\n", "", "return", "datas", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.io.GetNeighboringFramesIdx.__init__": [[133, 137], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "interval_list", ",", "start_idx", "=", "0", ",", "filename_tmpl", "=", "'{:08d}.png'", ")", ":", "\n", "        ", "self", ".", "interval_list", "=", "interval_list", "\n", "self", ".", "filename_tmpl", "=", "filename_tmpl", "\n", "self", ".", "start_idx", "=", "start_idx", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.io.GetNeighboringFramesIdx.__call__": [[138, 182], ["numpy.random.choice", "datas.get", "numpy.random.randint", "list", "ValueError", "range", "os.path.join", "os.path.join", "io.GetNeighboringFramesIdx.filename_tmpl.format", "io.GetNeighboringFramesIdx.filename_tmpl.format"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get"], ["", "def", "__call__", "(", "self", ",", "datas", ")", ":", "\n", "        ", "\"\"\"Call function.\n\n        Args:\n            datas (dict): A dict containing the necessary information and\n                data for augmentation.\n\n        Returns:\n            dict: A dict containing the processed data and information.\n        \"\"\"", "\n", "\n", "clip_name", "=", "datas", "[", "'key'", "]", "\n", "interval", "=", "np", ".", "random", ".", "choice", "(", "self", ".", "interval_list", ")", "\n", "\n", "self", ".", "sequence_length", "=", "datas", "[", "'sequence_length'", "]", "\n", "num_frames", "=", "datas", ".", "get", "(", "'num_frames'", ",", "self", ".", "sequence_length", ")", "\n", "\n", "if", "self", ".", "sequence_length", "-", "num_frames", "*", "interval", "<", "0", ":", "\n", "            ", "raise", "ValueError", "(", "'The input sequence is not long enough to '", "\n", "'support the current choice of [interval] or '", "\n", "'[num_frames].'", ")", "\n", "", "start_frame_idx", "=", "np", ".", "random", ".", "randint", "(", "\n", "0", ",", "self", ".", "sequence_length", "-", "num_frames", "*", "interval", "+", "1", ")", "\n", "end_frame_idx", "=", "start_frame_idx", "+", "num_frames", "*", "interval", "\n", "neighbor_list", "=", "list", "(", "range", "(", "start_frame_idx", ",", "end_frame_idx", ",", "interval", ")", ")", "\n", "neighbor_list", "=", "[", "v", "+", "self", ".", "start_idx", "for", "v", "in", "neighbor_list", "]", "\n", "\n", "lq_path_root", "=", "datas", "[", "'lq_path'", "]", "\n", "gt_path_root", "=", "datas", "[", "'gt_path'", "]", "\n", "\n", "lq_path", "=", "[", "\n", "os", ".", "path", ".", "join", "(", "lq_path_root", ",", "clip_name", ",", "self", ".", "filename_tmpl", ".", "format", "(", "v", ")", ")", "\n", "for", "v", "in", "neighbor_list", "\n", "]", "\n", "gt_path", "=", "[", "\n", "os", ".", "path", ".", "join", "(", "gt_path_root", ",", "clip_name", ",", "self", ".", "filename_tmpl", ".", "format", "(", "v", ")", ")", "\n", "for", "v", "in", "neighbor_list", "\n", "]", "\n", "\n", "datas", "[", "'lq_path'", "]", "=", "lq_path", "\n", "datas", "[", "'gt_path'", "]", "=", "gt_path", "\n", "datas", "[", "'interval'", "]", "=", "interval", "\n", "\n", "return", "datas", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.io.GetFrameIdx.__init__": [[195, 198], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "interval_list", ",", "frames_per_clip", "=", "99", ")", ":", "\n", "        ", "self", ".", "interval_list", "=", "interval_list", "\n", "self", ".", "frames_per_clip", "=", "frames_per_clip", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.io.GetFrameIdx.__call__": [[199, 238], ["results[].split", "int", "numpy.random.choice", "list", "numpy.random.randint", "range", "os.path.join", "os.path.join"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "results", ")", ":", "\n", "        ", "\"\"\"Call function.\n\n        Args:\n            results (dict): A dict containing the necessary information and\n                data for augmentation.\n\n        Returns:\n            dict: A dict containing the processed data and information.\n        \"\"\"", "\n", "clip_name", ",", "frame_name", "=", "results", "[", "'key'", "]", ".", "split", "(", "'/'", ")", "\n", "center_frame_idx", "=", "int", "(", "frame_name", ")", "\n", "num_half_frames", "=", "results", "[", "'num_frames'", "]", "//", "2", "\n", "\n", "interval", "=", "np", ".", "random", ".", "choice", "(", "self", ".", "interval_list", ")", "\n", "# ensure not exceeding the borders", "\n", "start_frame_idx", "=", "center_frame_idx", "-", "num_half_frames", "*", "interval", "\n", "end_frame_idx", "=", "center_frame_idx", "+", "num_half_frames", "*", "interval", "\n", "while", "(", "start_frame_idx", "<", "0", ")", "or", "(", "end_frame_idx", ">", "self", ".", "frames_per_clip", ")", ":", "\n", "            ", "center_frame_idx", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "self", ".", "frames_per_clip", "+", "1", ")", "\n", "start_frame_idx", "=", "center_frame_idx", "-", "num_half_frames", "*", "interval", "\n", "end_frame_idx", "=", "center_frame_idx", "+", "num_half_frames", "*", "interval", "\n", "", "frame_name", "=", "f'{center_frame_idx:08d}'", "\n", "neighbor_list", "=", "list", "(", "\n", "range", "(", "center_frame_idx", "-", "num_half_frames", "*", "interval", ",", "\n", "center_frame_idx", "+", "num_half_frames", "*", "interval", "+", "1", ",", "interval", ")", ")", "\n", "\n", "lq_path_root", "=", "results", "[", "'lq_path'", "]", "\n", "gt_path_root", "=", "results", "[", "'gt_path'", "]", "\n", "lq_path", "=", "[", "\n", "os", ".", "path", ".", "join", "(", "lq_path_root", ",", "clip_name", ",", "f'{v:08d}.png'", ")", "\n", "for", "v", "in", "neighbor_list", "\n", "]", "\n", "gt_path", "=", "[", "os", ".", "path", ".", "join", "(", "gt_path_root", ",", "clip_name", ",", "f'{frame_name}.png'", ")", "]", "\n", "results", "[", "'lq_path'", "]", "=", "lq_path", "\n", "results", "[", "'gt_path'", "]", "=", "gt_path", "\n", "results", "[", "'interval'", "]", "=", "interval", "\n", "\n", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.io.GetFrameIdx.__repr__": [[239, 244], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "repr_str", "=", "self", ".", "__class__", ".", "__name__", "\n", "repr_str", "+=", "(", "f'(interval_list={self.interval_list}, '", "\n", "f'frames_per_clip={self.frames_per_clip})'", ")", "\n", "return", "repr_str", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.io.GetFrameIdxwithPadding.__init__": [[265, 273], ["ValueError"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "padding", ",", "filename_tmpl", "=", "'{:08d}'", ")", ":", "\n", "        ", "if", "padding", "not", "in", "(", "'replicate'", ",", "'reflection'", ",", "'reflection_circle'", ",", "\n", "'circle'", ")", ":", "\n", "            ", "raise", "ValueError", "(", "f'Wrong padding mode {padding}.'", "\n", "'Should be \"replicate\", \"reflection\", '", "\n", "'\"reflection_circle\",  \"circle\"'", ")", "\n", "", "self", ".", "padding", "=", "padding", "\n", "self", ".", "filename_tmpl", "=", "filename_tmpl", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.io.GetFrameIdxwithPadding.__call__": [[274, 326], ["results[].split", "int", "range", "frame_list.append", "os.path.join", "os.path.join", "io.GetFrameIdxwithPadding.filename_tmpl.format"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "__call__", "(", "self", ",", "results", ")", ":", "\n", "        ", "\"\"\"Call function.\n\n        Args:\n            results (dict): A dict containing the necessary information and\n                data for augmentation.\n\n        Returns:\n            dict: A dict containing the processed data and information.\n        \"\"\"", "\n", "clip_name", ",", "frame_name", "=", "results", "[", "'key'", "]", ".", "split", "(", "'/'", ")", "\n", "current_idx", "=", "int", "(", "frame_name", ")", "\n", "max_frame_num", "=", "results", "[", "'max_frame_num'", "]", "-", "1", "# start from 0", "\n", "num_frames", "=", "results", "[", "'num_frames'", "]", "\n", "num_pad", "=", "num_frames", "//", "2", "\n", "\n", "frame_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "current_idx", "-", "num_pad", ",", "current_idx", "+", "num_pad", "+", "1", ")", ":", "\n", "            ", "if", "i", "<", "0", ":", "\n", "                ", "if", "self", ".", "padding", "==", "'replicate'", ":", "\n", "                    ", "pad_idx", "=", "0", "\n", "", "elif", "self", ".", "padding", "==", "'reflection'", ":", "\n", "                    ", "pad_idx", "=", "-", "i", "\n", "", "elif", "self", ".", "padding", "==", "'reflection_circle'", ":", "\n", "                    ", "pad_idx", "=", "current_idx", "+", "num_pad", "-", "i", "\n", "", "else", ":", "\n", "                    ", "pad_idx", "=", "num_frames", "+", "i", "\n", "", "", "elif", "i", ">", "max_frame_num", ":", "\n", "                ", "if", "self", ".", "padding", "==", "'replicate'", ":", "\n", "                    ", "pad_idx", "=", "max_frame_num", "\n", "", "elif", "self", ".", "padding", "==", "'reflection'", ":", "\n", "                    ", "pad_idx", "=", "max_frame_num", "*", "2", "-", "i", "\n", "", "elif", "self", ".", "padding", "==", "'reflection_circle'", ":", "\n", "                    ", "pad_idx", "=", "(", "current_idx", "-", "num_pad", ")", "-", "(", "i", "-", "max_frame_num", ")", "\n", "", "else", ":", "\n", "                    ", "pad_idx", "=", "i", "-", "num_frames", "\n", "", "", "else", ":", "\n", "                ", "pad_idx", "=", "i", "\n", "", "frame_list", ".", "append", "(", "pad_idx", ")", "\n", "\n", "", "lq_path_root", "=", "results", "[", "'lq_path'", "]", "\n", "gt_path_root", "=", "results", "[", "'gt_path'", "]", "\n", "lq_paths", "=", "[", "\n", "os", ".", "path", ".", "join", "(", "lq_path_root", ",", "clip_name", ",", "\n", "f'{self.filename_tmpl.format(idx)}.png'", ")", "\n", "for", "idx", "in", "frame_list", "\n", "]", "\n", "gt_paths", "=", "[", "os", ".", "path", ".", "join", "(", "gt_path_root", ",", "clip_name", ",", "f'{frame_name}.png'", ")", "]", "\n", "results", "[", "'lq_path'", "]", "=", "lq_paths", "\n", "results", "[", "'gt_path'", "]", "=", "gt_paths", "\n", "\n", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.io.GetFrameIdxwithPadding.__repr__": [[327, 330], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "repr_str", "=", "self", ".", "__class__", ".", "__name__", "+", "f\"(padding='{self.padding}')\"", "\n", "return", "repr_str", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.builder.Compose.__init__": [[38, 40], ["None"], "methods", ["None"], ["", "return", "dataset", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.builder.Compose.__call__": [[41, 52], ["func", "traceback.format_exc", "print", "str"], "methods", ["None"], ["", "def", "build_dataloader", "(", "cfg", ",", "is_train", "=", "True", ",", "distributed", "=", "True", ")", ":", "\n", "    ", "cfg_", "=", "cfg", ".", "copy", "(", ")", "\n", "\n", "batch_size", "=", "cfg_", ".", "pop", "(", "'batch_size'", ",", "1", ")", "\n", "num_workers", "=", "cfg_", ".", "pop", "(", "'num_workers'", ",", "0", ")", "\n", "use_shared_memory", "=", "cfg_", ".", "pop", "(", "'use_shared_memory'", ",", "True", ")", "\n", "\n", "dataset", "=", "build_dataset", "(", "cfg_", ")", "\n", "\n", "if", "distributed", ":", "\n", "        ", "sampler", "=", "DistributedBatchSampler", "(", "dataset", ",", "\n", "batch_size", "=", "batch_size", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.builder.build_preprocess": [[54, 65], ["builder.Compose", "isinstance", "utils.registry.build_from_config", "Compose.append"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.build_from_config", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["drop_last", "=", "True", "if", "is_train", "else", "False", ")", "\n", "\n", "dataloader", "=", "paddle", ".", "io", ".", "DataLoader", "(", "dataset", ",", "\n", "batch_sampler", "=", "sampler", ",", "\n", "num_workers", "=", "num_workers", ",", "\n", "use_shared_memory", "=", "use_shared_memory", ")", "\n", "", "else", ":", "\n", "        ", "dataloader", "=", "paddle", ".", "io", ".", "DataLoader", "(", "dataset", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "shuffle", "=", "True", "if", "is_train", "else", "False", ",", "\n", "drop_last", "=", "True", "if", "is_train", "else", "False", ",", "\n", "use_shared_memory", "=", "use_shared_memory", ",", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.preprocess.builder.build_transforms": [[67, 77], ["builder.Compose", "copy.deepcopy", "copy.deepcopy.pop", "Compose.append", "TRANSFORMS.get"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get"], ["\n", "", "return", "dataloader", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.styleganv2mixing_predictor.StyleGANv2MixingPredictor.run": [[28, 60], ["paddle.no_grad", "paddle.to_tensor().unsqueeze", "paddle.to_tensor().unsqueeze", "enumerate", "paddle.concat", "paddle.concat", "generator", "styleganv2mixing_predictor.make_image", "os.makedirs", "os.path.join", "cv2.imwrite", "os.path.join", "cv2.imwrite", "os.path.join", "cv2.imwrite", "len", "paddle.concat.append", "cv2.cvtColor", "cv2.cvtColor", "cv2.cvtColor", "paddle.to_tensor", "paddle.to_tensor", "numpy.load", "numpy.load"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.styleganv2editing_predictor.make_image", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["    ", "@", "paddle", ".", "no_grad", "(", ")", "\n", "def", "run", "(", "self", ",", "latent1", ",", "latent2", ",", "weights", "=", "[", "0.5", "]", "*", "18", ")", ":", "\n", "\n", "        ", "latent1", "=", "paddle", ".", "to_tensor", "(", "np", ".", "load", "(", "latent1", ")", ")", ".", "unsqueeze", "(", "0", ")", "\n", "latent2", "=", "paddle", ".", "to_tensor", "(", "np", ".", "load", "(", "latent2", ")", ")", ".", "unsqueeze", "(", "0", ")", "\n", "assert", "latent1", ".", "shape", "[", "1", "]", "==", "latent2", ".", "shape", "[", "1", "]", "==", "len", "(", "\n", "weights", "\n", ")", ",", "'latents and their weights should have the same level nums.'", "\n", "mix_latent", "=", "[", "]", "\n", "for", "i", ",", "weight", "in", "enumerate", "(", "weights", ")", ":", "\n", "            ", "mix_latent", ".", "append", "(", "latent1", "[", ":", ",", "i", ":", "i", "+", "1", "]", "*", "weight", "+", "\n", "latent2", "[", ":", ",", "i", ":", "i", "+", "1", "]", "*", "(", "1", "-", "weight", ")", ")", "\n", "", "mix_latent", "=", "paddle", ".", "concat", "(", "mix_latent", ",", "1", ")", "\n", "latent_n", "=", "paddle", ".", "concat", "(", "[", "latent1", ",", "latent2", ",", "mix_latent", "]", ",", "0", ")", "\n", "generator", "=", "self", ".", "generator", "\n", "img_gen", ",", "_", "=", "generator", "(", "[", "latent_n", "]", ",", "\n", "input_is_latent", "=", "True", ",", "\n", "randomize_noise", "=", "False", ")", "\n", "imgs", "=", "make_image", "(", "img_gen", ")", "\n", "src_img1", "=", "imgs", "[", "0", "]", "\n", "src_img2", "=", "imgs", "[", "1", "]", "\n", "dst_img", "=", "imgs", "[", "2", "]", "\n", "\n", "os", ".", "makedirs", "(", "self", ".", "output_path", ",", "exist_ok", "=", "True", ")", "\n", "save_src_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "output_path", ",", "'src1.mixing.png'", ")", "\n", "cv2", ".", "imwrite", "(", "save_src_path", ",", "cv2", ".", "cvtColor", "(", "src_img1", ",", "cv2", ".", "COLOR_RGB2BGR", ")", ")", "\n", "save_src_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "output_path", ",", "'src2.mixing.png'", ")", "\n", "cv2", ".", "imwrite", "(", "save_src_path", ",", "cv2", ".", "cvtColor", "(", "src_img2", ",", "cv2", ".", "COLOR_RGB2BGR", ")", ")", "\n", "save_dst_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "output_path", ",", "'dst.mixing.png'", ")", "\n", "cv2", ".", "imwrite", "(", "save_dst_path", ",", "cv2", ".", "cvtColor", "(", "dst_img", ",", "cv2", ".", "COLOR_RGB2BGR", ")", ")", "\n", "\n", "return", "src_img1", ",", "src_img2", ",", "dst_img", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.styleganv2mixing_predictor.make_image": [[22, 25], ["tensor.detach"], "function", ["None"], ["def", "make_image", "(", "tensor", ")", ":", "\n", "    ", "return", "(", "(", "(", "tensor", ".", "detach", "(", ")", "+", "1", ")", "/", "2", "*", "255", ")", ".", "clip", "(", "min", "=", "0", ",", "max", "=", "255", ")", ".", "transpose", "(", "\n", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", ".", "numpy", "(", ")", ".", "astype", "(", "'uint8'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.photopen_predictor.PhotoPenPredictor.__init__": [[29, 55], ["ppgan.models.generators.SPADEGenerator", "ppgan.models.generators.SPADEGenerator.eval", "utils.filesystem.load", "ppgan.models.generators.SPADEGenerator.set_state_dict", "ppgan.models.generators.SPADEGenerator.set_state_dict"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["    ", "def", "__init__", "(", "self", ",", "\n", "output_path", ",", "\n", "weight_path", ",", "\n", "gen_cfg", ")", ":", "\n", "\n", "# \u521d\u59cb\u5316\u6a21\u578b", "\n", "        ", "gen", "=", "SPADEGenerator", "(", "\n", "gen_cfg", ".", "ngf", ",", "\n", "gen_cfg", ".", "num_upsampling_layers", ",", "\n", "gen_cfg", ".", "crop_size", ",", "\n", "gen_cfg", ".", "aspect_ratio", ",", "\n", "gen_cfg", ".", "norm_G", ",", "\n", "gen_cfg", ".", "semantic_nc", ",", "\n", "gen_cfg", ".", "use_vae", ",", "\n", "gen_cfg", ".", "nef", ",", "\n", ")", "\n", "gen", ".", "eval", "(", ")", "\n", "para", "=", "load", "(", "weight_path", ")", "\n", "if", "'net_gen'", "in", "para", ":", "\n", "            ", "gen", ".", "set_state_dict", "(", "para", "[", "'net_gen'", "]", ")", "\n", "", "else", ":", "\n", "            ", "gen", ".", "set_state_dict", "(", "para", ")", "\n", "\n", "", "self", ".", "gen", "=", "gen", "\n", "self", ".", "output_path", "=", "output_path", "\n", "self", ".", "gen_cfg", "=", "gen_cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.photopen_predictor.PhotoPenPredictor.run": [[57, 74], ["PIL.Image.open", "sem.reshape.reshape.resize", "numpy.array().astype", "paddle.to_tensor", "sem.reshape.reshape.reshape", "ppgan.utils.photopen.data_onehot_pro", "photopen_predictor.PhotoPenPredictor.gen", "[].reshape().transpose", "cv2.cvtColor", "os.path.split", "cv2.imwrite", "os.path.exists", "os.mkdir", "numpy.array", "[].reshape", "photopen_predictor.PhotoPenPredictor.numpy"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.photopen.data_onehot_pro"], ["", "def", "run", "(", "self", ",", "semantic_label_path", ")", ":", "\n", "        ", "sem", "=", "Image", ".", "open", "(", "semantic_label_path", ")", "\n", "sem", "=", "sem", ".", "resize", "(", "(", "self", ".", "gen_cfg", ".", "crop_size", ",", "self", ".", "gen_cfg", ".", "crop_size", ")", ",", "Image", ".", "NEAREST", ")", "\n", "sem", "=", "np", ".", "array", "(", "sem", ")", ".", "astype", "(", "'float32'", ")", "\n", "sem", "=", "paddle", ".", "to_tensor", "(", "sem", ")", "\n", "sem", "=", "sem", ".", "reshape", "(", "[", "1", ",", "1", ",", "self", ".", "gen_cfg", ".", "crop_size", ",", "self", ".", "gen_cfg", ".", "crop_size", "]", ")", "\n", "\n", "one_hot", "=", "data_onehot_pro", "(", "sem", ",", "self", ".", "gen_cfg", ")", "\n", "predicted", "=", "self", ".", "gen", "(", "one_hot", ")", "\n", "pic", "=", "predicted", ".", "numpy", "(", ")", "[", "0", "]", ".", "reshape", "(", "(", "3", ",", "256", ",", "256", ")", ")", ".", "transpose", "(", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "pic", "=", "(", "(", "pic", "+", "1.", ")", "/", "2.", "*", "255", ")", ".", "astype", "(", "'uint8'", ")", "\n", "\n", "pic", "=", "cv2", ".", "cvtColor", "(", "pic", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "path", ",", "_", "=", "os", ".", "path", ".", "split", "(", "self", ".", "output_path", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "path", ")", "\n", "", "cv2", ".", "imwrite", "(", "self", ".", "output_path", ",", "pic", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.styleganv2fitting_predictor.StyleGANv2FittingPredictor.run": [[41, 166], ["generator.train", "metrics.lpips.LPIPS", "metrics.lpips.LPIPS.train", "paddle.vision.transforms.Compose", "paddle.to_tensor().unsqueeze", "list", "paddle.optimizer.Adam", "tqdm.tqdm.tqdm", "generator", "os.makedirs", "os.path.join", "cv2.imwrite", "os.path.join", "cv2.imwrite", "os.path.join", "numpy.save", "pixel2style2pixel_predictor.run_alignment", "PIL.Image.open().convert", "generator.style.mean.detach().clone().unsqueeze().tile", "latent_in.index_select().detach().clone.index_select().detach().clone.unsqueeze().tile().detach", "paddle.to_tensor().unsqueeze", "len", "len", "latent_in.index_select().detach().clone.index_select().detach().clone.index_select().detach().clone", "latent_in.index_select().detach().clone.index_select().detach().clone.index_select().detach().clone", "range", "styleganv2fitting_predictor.get_lr", "paddle.optimizer.Adam.set_lr", "generator", "metrics.lpips.LPIPS.sum", "paddle.nn.functional.mse_loss", "paddle.optimizer.Adam.clear_grad", "loss.backward", "paddle.optimizer.Adam.step", "tqdm.tqdm.tqdm.set_description", "styleganv2fitting_predictor.make_image", "paddle.concat.numpy", "cv2.cvtColor", "cv2.cvtColor", "numpy.asarray", "paddle.vision.transforms.Resize", "paddle.vision.transforms.CenterCrop", "paddle.vision.transforms.Transpose", "paddle.vision.transforms.Normalize", "paddle.to_tensor", "paddle.no_grad", "paddle.randn", "generator.style", "generator.style.mean", "range", "len", "enumerate", "enumerate", "range", "paddle.concat", "img_gen.mean.mean.reshape", "img_gen.mean.mean.mean", "numpy.asarray", "PIL.Image.open", "paddle.vision.transforms.Compose.", "generator.style.mean.detach().clone().unsqueeze", "latent_in.index_select().detach().clone.index_select().detach().clone.unsqueeze().tile", "paddle.to_tensor", "latent_in.index_select().detach().clone.index_select().detach().clone.index_select().detach", "latent_in.index_select().detach().clone.index_select().detach().clone.index_select().detach", "latent_fix[].detach", "latent_list.append", "metrics.lpips.LPIPS.", "numpy.load", "generator.style.mean.detach().clone", "latent_in.index_select().detach().clone.index_select().detach().clone.unsqueeze", "latent_in.index_select().detach().clone.index_select().detach().clone.index_select", "latent_in.index_select().detach().clone.index_select().detach().clone.index_select", "metrics.lpips.LPIPS.sum.numpy", "paddle.nn.functional.mse_loss.numpy", "paddle.to_tensor", "paddle.to_tensor", "generator.style.mean.detach"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.pixel2style2pixel_predictor.run_alignment", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.solver.lr_scheduler.CosineAnnealingRestartLR.get_lr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.styleganv2editing_predictor.make_image", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["    ", "def", "run", "(", "self", ",", "\n", "image", ",", "\n", "need_align", "=", "False", ",", "\n", "start_lr", "=", "0.1", ",", "\n", "final_lr", "=", "0.025", ",", "\n", "latent_level", "=", "[", "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", ",", "11", "]", ",", "\n", "step", "=", "100", ",", "\n", "mse_weight", "=", "1", ",", "\n", "pre_latent", "=", "None", ")", ":", "\n", "\n", "        ", "if", "need_align", ":", "\n", "            ", "src_img", "=", "run_alignment", "(", "image", ")", "\n", "", "else", ":", "\n", "            ", "src_img", "=", "Image", ".", "open", "(", "image", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "\n", "", "generator", "=", "self", ".", "generator", "\n", "generator", ".", "train", "(", ")", "\n", "\n", "percept", "=", "LPIPS", "(", "net", "=", "'vgg'", ")", "\n", "# on PaddlePaddle, lpips's default eval mode means no gradients.", "\n", "percept", ".", "train", "(", ")", "\n", "\n", "n_mean_latent", "=", "4096", "\n", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "256", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "256", ")", ",", "\n", "transforms", ".", "Transpose", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "[", "127.5", ",", "127.5", ",", "127.5", "]", ",", "[", "127.5", ",", "127.5", ",", "127.5", "]", ")", ",", "\n", "]", ")", "\n", "\n", "imgs", "=", "paddle", ".", "to_tensor", "(", "transform", "(", "src_img", ")", ")", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "if", "pre_latent", "is", "None", ":", "\n", "            ", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "                ", "noise_sample", "=", "paddle", ".", "randn", "(", "\n", "(", "n_mean_latent", ",", "generator", ".", "style_dim", ")", ")", "\n", "latent_out", "=", "generator", ".", "style", "(", "noise_sample", ")", "\n", "\n", "latent_mean", "=", "latent_out", ".", "mean", "(", "0", ")", "\n", "\n", "", "latent_in", "=", "latent_mean", ".", "detach", "(", ")", ".", "clone", "(", ")", ".", "unsqueeze", "(", "0", ")", ".", "tile", "(", "\n", "(", "imgs", ".", "shape", "[", "0", "]", ",", "1", ")", ")", "\n", "latent_in", "=", "latent_in", ".", "unsqueeze", "(", "1", ")", ".", "tile", "(", "\n", "(", "1", ",", "generator", ".", "n_latent", ",", "1", ")", ")", ".", "detach", "(", ")", "\n", "\n", "", "else", ":", "\n", "            ", "latent_in", "=", "paddle", ".", "to_tensor", "(", "np", ".", "load", "(", "pre_latent", ")", ")", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "", "var_levels", "=", "list", "(", "latent_level", ")", "\n", "const_levels", "=", "[", "\n", "i", "for", "i", "in", "range", "(", "generator", ".", "n_latent", ")", "if", "i", "not", "in", "var_levels", "\n", "]", "\n", "assert", "len", "(", "var_levels", ")", ">", "0", "\n", "if", "len", "(", "const_levels", ")", ">", "0", ":", "\n", "            ", "latent_fix", "=", "latent_in", ".", "index_select", "(", "paddle", ".", "to_tensor", "(", "const_levels", ")", ",", "\n", "1", ")", ".", "detach", "(", ")", ".", "clone", "(", ")", "\n", "latent_in", "=", "latent_in", ".", "index_select", "(", "paddle", ".", "to_tensor", "(", "var_levels", ")", ",", "\n", "1", ")", ".", "detach", "(", ")", ".", "clone", "(", ")", "\n", "\n", "", "latent_in", ".", "stop_gradient", "=", "False", "\n", "\n", "optimizer", "=", "optim", ".", "Adam", "(", "parameters", "=", "[", "latent_in", "]", ",", "learning_rate", "=", "start_lr", ")", "\n", "\n", "pbar", "=", "tqdm", "(", "range", "(", "step", ")", ")", "\n", "\n", "for", "i", "in", "pbar", ":", "\n", "            ", "t", "=", "i", "/", "step", "\n", "lr", "=", "get_lr", "(", "t", ",", "step", ",", "start_lr", ",", "final_lr", ")", "\n", "optimizer", ".", "set_lr", "(", "lr", ")", "\n", "\n", "if", "len", "(", "const_levels", ")", ">", "0", ":", "\n", "                ", "latent_dict", "=", "{", "}", "\n", "for", "idx", ",", "idx2", "in", "enumerate", "(", "var_levels", ")", ":", "\n", "                    ", "latent_dict", "[", "idx2", "]", "=", "latent_in", "[", ":", ",", "idx", ":", "idx", "+", "1", "]", "\n", "", "for", "idx", ",", "idx2", "in", "enumerate", "(", "const_levels", ")", ":", "\n", "                    ", "latent_dict", "[", "idx2", "]", "=", "(", "latent_fix", "[", ":", ",", "idx", ":", "idx", "+", "1", "]", ")", ".", "detach", "(", ")", "\n", "", "latent_list", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "generator", ".", "n_latent", ")", ":", "\n", "                    ", "latent_list", ".", "append", "(", "latent_dict", "[", "idx", "]", ")", "\n", "", "latent_n", "=", "paddle", ".", "concat", "(", "latent_list", ",", "1", ")", "\n", "", "else", ":", "\n", "                ", "latent_n", "=", "latent_in", "\n", "\n", "", "img_gen", ",", "_", "=", "generator", "(", "[", "latent_n", "]", ",", "\n", "input_is_latent", "=", "True", ",", "\n", "randomize_noise", "=", "False", ")", "\n", "\n", "batch", ",", "channel", ",", "height", ",", "width", "=", "img_gen", ".", "shape", "\n", "\n", "if", "height", ">", "256", ":", "\n", "                ", "factor", "=", "height", "//", "256", "\n", "\n", "img_gen", "=", "img_gen", ".", "reshape", "(", "(", "batch", ",", "channel", ",", "height", "//", "factor", ",", "\n", "factor", ",", "width", "//", "factor", ",", "factor", ")", ")", "\n", "img_gen", "=", "img_gen", ".", "mean", "(", "[", "3", ",", "5", "]", ")", "\n", "\n", "", "p_loss", "=", "percept", "(", "img_gen", ",", "imgs", ")", ".", "sum", "(", ")", "\n", "mse_loss", "=", "F", ".", "mse_loss", "(", "img_gen", ",", "imgs", ")", "\n", "loss", "=", "p_loss", "+", "mse_weight", "*", "mse_loss", "\n", "\n", "optimizer", ".", "clear_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "pbar", ".", "set_description", "(", "\n", "(", "f\"perceptual: {p_loss.numpy()[0]:.4f}; \"", "\n", "f\"mse: {mse_loss.numpy()[0]:.4f}; lr: {lr:.4f}\"", ")", ")", "\n", "\n", "", "img_gen", ",", "_", "=", "generator", "(", "[", "latent_n", "]", ",", "\n", "input_is_latent", "=", "True", ",", "\n", "randomize_noise", "=", "False", ")", "\n", "dst_img", "=", "make_image", "(", "img_gen", ")", "[", "0", "]", "\n", "dst_latent", "=", "latent_n", ".", "numpy", "(", ")", "[", "0", "]", "\n", "\n", "os", ".", "makedirs", "(", "self", ".", "output_path", ",", "exist_ok", "=", "True", ")", "\n", "save_src_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "output_path", ",", "'src.fitting.png'", ")", "\n", "cv2", ".", "imwrite", "(", "save_src_path", ",", "\n", "cv2", ".", "cvtColor", "(", "np", ".", "asarray", "(", "src_img", ")", ",", "cv2", ".", "COLOR_RGB2BGR", ")", ")", "\n", "save_dst_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "output_path", ",", "'dst.fitting.png'", ")", "\n", "cv2", ".", "imwrite", "(", "save_dst_path", ",", "cv2", ".", "cvtColor", "(", "dst_img", ",", "cv2", ".", "COLOR_RGB2BGR", ")", ")", "\n", "save_npy_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "output_path", ",", "'dst.fitting.npy'", ")", "\n", "np", ".", "save", "(", "save_npy_path", ",", "dst_latent", ")", "\n", "\n", "return", "np", ".", "asarray", "(", "src_img", ")", ",", "dst_img", ",", "dst_latent", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.styleganv2fitting_predictor.get_lr": [[29, 33], ["pow"], "function", ["None"], ["def", "get_lr", "(", "t", ",", "ts", ",", "initial_lr", ",", "final_lr", ")", ":", "\n", "    ", "alpha", "=", "pow", "(", "final_lr", "/", "initial_lr", ",", "1", "/", "ts", ")", "**", "(", "t", "*", "ts", ")", "\n", "\n", "return", "initial_lr", "*", "alpha", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.styleganv2fitting_predictor.make_image": [[35, 38], ["tensor.detach"], "function", ["None"], ["", "def", "make_image", "(", "tensor", ")", ":", "\n", "    ", "return", "(", "(", "(", "tensor", ".", "detach", "(", ")", "+", "1", ")", "/", "2", "*", "255", ")", ".", "clip", "(", "min", "=", "0", ",", "max", "=", "255", ")", ".", "transpose", "(", "\n", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", ".", "numpy", "(", ")", ".", "astype", "(", "'uint8'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.mpr_predictor.MPRPredictor.__init__": [[57, 88], ["ppgan.models.generators.MPRNet", "mpr_predictor.MPRPredictor.generator.set_state_dict", "mpr_predictor.MPRPredictor.generator.eval", "paddle.load", "paddle.seed", "random.seed", "numpy.random.seed", "model_cfgs.keys", "ppgan.utils.download.get_path_from_url", "paddle.load", "ValueError"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["    ", "def", "__init__", "(", "self", ",", "\n", "output_path", "=", "'output_dir'", ",", "\n", "weight_path", "=", "None", ",", "\n", "seed", "=", "None", ",", "\n", "task", "=", "None", ")", ":", "\n", "        ", "self", ".", "output_path", "=", "output_path", "\n", "self", ".", "task", "=", "task", "\n", "self", ".", "max_size", "=", "640", "\n", "self", ".", "img_multiple_of", "=", "8", "\n", "\n", "if", "weight_path", "is", "None", ":", "\n", "            ", "if", "task", "in", "model_cfgs", ".", "keys", "(", ")", ":", "\n", "                ", "weight_path", "=", "get_path_from_url", "(", "model_cfgs", "[", "task", "]", "[", "'model_urls'", "]", ")", "\n", "checkpoint", "=", "paddle", ".", "load", "(", "weight_path", ")", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "\n", "'Predictor need a weight path or a pretrained model type'", ")", "\n", "", "", "else", ":", "\n", "            ", "checkpoint", "=", "paddle", ".", "load", "(", "weight_path", ")", "\n", "\n", "", "self", ".", "generator", "=", "MPRNet", "(", "\n", "n_feat", "=", "model_cfgs", "[", "task", "]", "[", "'n_feat'", "]", ",", "\n", "scale_unetfeats", "=", "model_cfgs", "[", "task", "]", "[", "'scale_unetfeats'", "]", ",", "\n", "scale_orsnetfeats", "=", "model_cfgs", "[", "task", "]", "[", "'scale_orsnetfeats'", "]", ")", "\n", "self", ".", "generator", ".", "set_state_dict", "(", "checkpoint", ")", "\n", "self", ".", "generator", ".", "eval", "(", ")", "\n", "\n", "if", "seed", "is", "not", "None", ":", "\n", "            ", "paddle", ".", "seed", "(", "seed", ")", "\n", "random", ".", "seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.mpr_predictor.MPRPredictor.get_images": [[89, 99], ["os.path.isdir", "natsort.natsorted", "glob.glob.glob", "glob.glob.glob", "os.path.join", "glob.glob.glob", "os.path.join", "glob.glob.glob", "glob.glob.glob", "os.path.join", "os.path.join", "os.path.join"], "methods", ["None"], ["", "", "def", "get_images", "(", "self", ",", "images_path", ")", ":", "\n", "        ", "if", "os", ".", "path", ".", "isdir", "(", "images_path", ")", ":", "\n", "            ", "return", "natsorted", "(", "\n", "glob", "(", "os", ".", "path", ".", "join", "(", "images_path", ",", "'*.jpeg'", ")", ")", "+", "\n", "glob", "(", "os", ".", "path", ".", "join", "(", "images_path", ",", "'*.jpg'", ")", ")", "+", "\n", "glob", "(", "os", ".", "path", ".", "join", "(", "images_path", ",", "'*.JPG'", ")", ")", "+", "\n", "glob", "(", "os", ".", "path", ".", "join", "(", "images_path", ",", "'*.png'", ")", ")", "+", "\n", "glob", "(", "os", ".", "path", ".", "join", "(", "images_path", ",", "'*.PNG'", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "return", "[", "images_path", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.mpr_predictor.MPRPredictor.read_image": [[100, 109], ["PIL.Image.open().convert", "max", "int", "int", "img.resize.resize.resize", "PIL.Image.open"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize"], ["", "", "def", "read_image", "(", "self", ",", "image_file", ")", ":", "\n", "        ", "img", "=", "Image", ".", "open", "(", "image_file", ")", ".", "convert", "(", "'RGB'", ")", "\n", "max_length", "=", "max", "(", "img", ".", "width", ",", "img", ".", "height", ")", "\n", "if", "max_length", ">", "self", ".", "max_size", ":", "\n", "            ", "ratio", "=", "max_length", "/", "self", ".", "max_size", "\n", "dw", "=", "int", "(", "img", ".", "width", "/", "ratio", ")", "\n", "dh", "=", "int", "(", "img", ".", "height", "/", "ratio", ")", "\n", "img", "=", "img", ".", "resize", "(", "(", "dw", ",", "dh", ")", ")", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.mpr_predictor.MPRPredictor.run": [[110, 159], ["os.makedirs", "os.path.join", "os.makedirs", "mpr_predictor.MPRPredictor.get_images", "tqdm.tqdm.tqdm", "print", "mpr_predictor.MPRPredictor.read_image", "os.path.basename", "mpr_predictor.MPRPredictor.save", "os.path.basename.split", "os.path.join", "ppgan.datasets.mpr_dataset.to_tensor", "paddle.to_tensor", "paddle.vision.transforms.Pad", "paddle.vision.transforms.Pad.", "paddle.to_tensor", "paddle.clip", "mpr_predictor.MPRPredictor.numpy", "mpr_predictor.MPRPredictor.transpose", "mpr_predictor.MPRPredictor.astype", "cv2.imwrite", "os.path.join", "len", "numpy.expand_dims", "paddle.no_grad", "mpr_predictor.MPRPredictor.generator", "cv2.cvtColor", "paddle.to_tensor.numpy"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.mpr_predictor.MPRPredictor.get_images", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.utils.read_image", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save"], ["", "def", "run", "(", "self", ",", "images_path", "=", "None", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "self", ".", "output_path", ",", "exist_ok", "=", "True", ")", "\n", "task_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "output_path", ",", "self", ".", "task", ")", "\n", "os", ".", "makedirs", "(", "task_path", ",", "exist_ok", "=", "True", ")", "\n", "image_files", "=", "self", ".", "get_images", "(", "images_path", ")", "\n", "for", "image_file", "in", "tqdm", "(", "image_files", ")", ":", "\n", "            ", "img", "=", "self", ".", "read_image", "(", "image_file", ")", "\n", "image_name", "=", "os", ".", "path", ".", "basename", "(", "image_file", ")", "\n", "img", ".", "save", "(", "os", ".", "path", ".", "join", "(", "task_path", ",", "image_name", ")", ")", "\n", "tmps", "=", "image_name", ".", "split", "(", "'.'", ")", "\n", "assert", "len", "(", "\n", "tmps", ")", "==", "2", ",", "f'Invalid image name: {image_name}, too much \".\"'", "\n", "restoration_save_path", "=", "os", ".", "path", ".", "join", "(", "\n", "task_path", ",", "f'{tmps[0]}_restoration.{tmps[1]}'", ")", "\n", "input_", "=", "to_tensor", "(", "img", ")", "\n", "\n", "# Pad the input if not_multiple_of 8", "\n", "h", ",", "w", "=", "input_", ".", "shape", "[", "1", "]", ",", "input_", ".", "shape", "[", "2", "]", "\n", "\n", "H", ",", "W", "=", "(", "(", "h", "+", "self", ".", "img_multiple_of", ")", "//", "\n", "self", ".", "img_multiple_of", ")", "*", "self", ".", "img_multiple_of", ",", "(", "\n", "(", "w", "+", "self", ".", "img_multiple_of", ")", "//", "\n", "self", ".", "img_multiple_of", ")", "*", "self", ".", "img_multiple_of", "\n", "padh", "=", "H", "-", "h", "if", "h", "%", "self", ".", "img_multiple_of", "!=", "0", "else", "0", "\n", "padw", "=", "W", "-", "w", "if", "w", "%", "self", ".", "img_multiple_of", "!=", "0", "else", "0", "\n", "input_", "=", "paddle", ".", "to_tensor", "(", "input_", ")", "\n", "transform", "=", "Pad", "(", "(", "0", ",", "0", ",", "padw", ",", "padh", ")", ",", "padding_mode", "=", "'reflect'", ")", "\n", "input_", "=", "transform", "(", "input_", ")", "\n", "\n", "input_", "=", "paddle", ".", "to_tensor", "(", "np", ".", "expand_dims", "(", "input_", ".", "numpy", "(", ")", ",", "0", ")", ")", "\n", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "                ", "restored", "=", "self", ".", "generator", "(", "input_", ")", "\n", "", "restored", "=", "restored", "[", "0", "]", "\n", "restored", "=", "paddle", ".", "clip", "(", "restored", ",", "0", ",", "1", ")", "\n", "\n", "# Unpad the output", "\n", "restored", "=", "restored", "[", ":", ",", ":", ",", ":", "h", ",", ":", "w", "]", "\n", "\n", "restored", "=", "restored", ".", "numpy", "(", ")", "\n", "restored", "=", "restored", ".", "transpose", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "restored", "=", "restored", "[", "0", "]", "\n", "restored", "=", "restored", "*", "255", "\n", "restored", "=", "restored", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n", "cv2", ".", "imwrite", "(", "restoration_save_path", ",", "\n", "cv2", ".", "cvtColor", "(", "restored", ",", "cv2", ".", "COLOR_RGB2BGR", ")", ")", "\n", "\n", "", "print", "(", "'Done, output path is:'", ",", "task_path", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deepremaster_predictor.DeepRemasterPredictor.__init__": [[68, 93], ["os.path.join", "paddle.load", "ppgan.models.generators.remaster.NetworkR", "deepremaster_predictor.DeepRemasterPredictor.modelR.load_dict", "deepremaster_predictor.DeepRemasterPredictor.modelR.eval", "ppgan.utils.download.get_path_from_url", "ppgan.models.generators.remaster.NetworkC", "deepremaster_predictor.DeepRemasterPredictor.modelC.load_dict", "deepremaster_predictor.DeepRemasterPredictor.modelC.eval"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval"], ["    ", "def", "__init__", "(", "self", ",", "\n", "output", "=", "'output'", ",", "\n", "weight_path", "=", "None", ",", "\n", "colorization", "=", "False", ",", "\n", "reference_dir", "=", "None", ",", "\n", "mindim", "=", "360", ")", ":", "\n", "        ", "self", ".", "output", "=", "os", ".", "path", ".", "join", "(", "output", ",", "'DeepRemaster'", ")", "\n", "self", ".", "colorization", "=", "colorization", "\n", "self", ".", "reference_dir", "=", "reference_dir", "\n", "self", ".", "mindim", "=", "mindim", "\n", "\n", "if", "weight_path", "is", "None", ":", "\n", "            ", "weight_path", "=", "get_path_from_url", "(", "DEEPREMASTER_WEIGHT_URL", ")", "\n", "\n", "", "self", ".", "weight_path", "=", "weight_path", "\n", "\n", "state_dict", "=", "paddle", ".", "load", "(", "weight_path", ")", "\n", "\n", "self", ".", "modelR", "=", "NetworkR", "(", ")", "\n", "self", ".", "modelR", ".", "load_dict", "(", "state_dict", "[", "'modelR'", "]", ")", "\n", "self", ".", "modelR", ".", "eval", "(", ")", "\n", "if", "colorization", ":", "\n", "            ", "self", ".", "modelC", "=", "NetworkC", "(", ")", "\n", "self", ".", "modelC", ".", "load_dict", "(", "state_dict", "[", "'modelC'", "]", ")", "\n", "self", ".", "modelC", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deepremaster_predictor.DeepRemasterPredictor.run": [[94, 265], ["os.path.join", "os.makedirs", "os.path.join", "os.makedirs", "cv2.VideoCapture", "int", "cv2.VideoCapture.get", "cv2.VideoCapture.get", "min", "cv2.VideoCapture.get", "tqdm.tqdm.tqdm", "cv2.VideoCapture.release", "tqdm.tqdm.tqdm.close", "cv2.VideoCapture.get", "round", "round", "paddle.no_grad", "os.path.join", "subprocess.call", "subprocess.call", "subprocess.call", "len", "enumerate", "paddle.to_tensor", "paddle.unsqueeze", "cv2.VideoCapture.set", "range", "paddle.to_tensor", "deepremaster_predictor.DeepRemasterPredictor.modelR", "tqdm.tqdm.tqdm.update", "glob.glob", "PIL.Image.open().convert", "refs.append", "int", "int", "deepremaster_predictor.addMergin", "paddle.unsqueeze.append", "numpy.array().astype", "cv2.VideoCapture.read", "cv2.resize", "range", "output_l.detach.detach.detach", "deepremaster_predictor.DeepRemasterPredictor.detach", "range", "[].split", "numpy.array().astype().transpose", "cv2.cvtColor", "cv2.imwrite", "paddle.to_tensor", "paddle.reshape", "paddle.transpose", "paddle.reshape", "paddle.concat", "paddle.concat", "deepremaster_predictor.DeepRemasterPredictor.modelC", "deepremaster_predictor.DeepRemasterPredictor.modelC", "paddle.concat().numpy().transpose", "PIL.Image.fromarray", "PIL.Image.fromarray.save", "PIL.Image.open", "numpy.array", "frame_l.reshape.reshape.astype", "cv2.imwrite", "deepremaster_predictor.convertRGB2LABTensor", "frame_l.reshape.reshape.transpose", "frame_ab.reshape.reshape.transpose", "frame_l.reshape.reshape.reshape", "frame_ab.reshape.reshape.reshape", "paddle.concat", "paddle.concat().detach().numpy().transpose", "PIL.Image.fromarray", "PIL.Image.fromarray.save", "ValueError", "numpy.uint8", "numpy.array().astype", "output_l.detach.detach.detach", "numpy.uint8", "paddle.concat().numpy", "video_path.split", "paddle.concat().detach().numpy", "deepremaster_predictor.convertLAB2RGB", "numpy.array", "deepremaster_predictor.convertLAB2RGB", "paddle.concat", "paddle.concat().detach", "paddle.concat"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.close", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deepremaster_predictor.addMergin", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deepremaster_predictor.convertRGB2LABTensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deepremaster_predictor.convertLAB2RGB", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deepremaster_predictor.convertLAB2RGB"], ["", "", "def", "run", "(", "self", ",", "video_path", ")", ":", "\n", "        ", "outputdir", "=", "self", ".", "output", "\n", "outputdir_in", "=", "os", ".", "path", ".", "join", "(", "outputdir", ",", "'input/'", ")", "\n", "os", ".", "makedirs", "(", "outputdir_in", ",", "exist_ok", "=", "True", ")", "\n", "outputdir_out", "=", "os", ".", "path", ".", "join", "(", "outputdir", ",", "'output/'", ")", "\n", "os", ".", "makedirs", "(", "outputdir_out", ",", "exist_ok", "=", "True", ")", "\n", "\n", "# Prepare reference images", "\n", "if", "self", ".", "colorization", ":", "\n", "            ", "if", "self", ".", "reference_dir", "is", "not", "None", ":", "\n", "                ", "import", "glob", "\n", "ext_list", "=", "[", "'png'", ",", "'jpg'", ",", "'bmp'", "]", "\n", "reference_files", "=", "[", "]", "\n", "for", "ext", "in", "ext_list", ":", "\n", "                    ", "reference_files", "+=", "glob", ".", "glob", "(", "self", ".", "reference_dir", "+", "'/*.'", "+", "\n", "ext", ",", "\n", "recursive", "=", "True", ")", "\n", "", "aspect_mean", "=", "0", "\n", "minedge_dim", "=", "256", "\n", "refs", "=", "[", "]", "\n", "for", "v", "in", "reference_files", ":", "\n", "                    ", "refimg", "=", "Image", ".", "open", "(", "v", ")", ".", "convert", "(", "'RGB'", ")", "\n", "w", ",", "h", "=", "refimg", ".", "size", "\n", "aspect_mean", "+=", "w", "/", "h", "\n", "refs", ".", "append", "(", "refimg", ")", "\n", "", "aspect_mean", "/=", "len", "(", "reference_files", ")", "\n", "target_w", "=", "int", "(", "256", "*", "aspect_mean", ")", "if", "aspect_mean", ">", "1", "else", "256", "\n", "target_h", "=", "256", "if", "aspect_mean", ">=", "1", "else", "int", "(", "256", "/", "aspect_mean", ")", "\n", "\n", "refimgs", "=", "[", "]", "\n", "for", "i", ",", "v", "in", "enumerate", "(", "refs", ")", ":", "\n", "                    ", "refimg", "=", "addMergin", "(", "v", ",", "target_w", "=", "target_w", ",", "target_h", "=", "target_h", ")", "\n", "refimg", "=", "np", ".", "array", "(", "refimg", ")", ".", "astype", "(", "'float32'", ")", ".", "transpose", "(", "\n", "2", ",", "0", ",", "1", ")", "/", "255.0", "\n", "refimgs", ".", "append", "(", "refimg", ")", "\n", "", "refimgs", "=", "paddle", ".", "to_tensor", "(", "np", ".", "array", "(", "refimgs", ")", ".", "astype", "(", "'float32'", ")", ")", "\n", "\n", "refimgs", "=", "paddle", ".", "unsqueeze", "(", "refimgs", ",", "0", ")", "\n", "\n", "# Load video", "\n", "", "", "cap", "=", "cv2", ".", "VideoCapture", "(", "video_path", ")", "\n", "nframes", "=", "int", "(", "cap", ".", "get", "(", "cv2", ".", "CAP_PROP_FRAME_COUNT", ")", ")", "\n", "v_w", "=", "cap", ".", "get", "(", "cv2", ".", "CAP_PROP_FRAME_WIDTH", ")", "\n", "v_h", "=", "cap", ".", "get", "(", "cv2", ".", "CAP_PROP_FRAME_HEIGHT", ")", "\n", "minwh", "=", "min", "(", "v_w", ",", "v_h", ")", "\n", "scale", "=", "1", "\n", "if", "minwh", "!=", "self", ".", "mindim", ":", "\n", "            ", "scale", "=", "self", ".", "mindim", "/", "minwh", "\n", "\n", "", "t_w", "=", "round", "(", "v_w", "*", "scale", "/", "16.", ")", "*", "16", "\n", "t_h", "=", "round", "(", "v_h", "*", "scale", "/", "16.", ")", "*", "16", "\n", "fps", "=", "cap", ".", "get", "(", "cv2", ".", "CAP_PROP_FPS", ")", "\n", "pbar", "=", "tqdm", "(", "total", "=", "nframes", ")", "\n", "block", "=", "5", "\n", "\n", "# Process", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "            ", "it", "=", "0", "\n", "while", "True", ":", "\n", "                ", "frame_pos", "=", "it", "*", "block", "\n", "if", "frame_pos", ">=", "nframes", ":", "\n", "                    ", "break", "\n", "", "cap", ".", "set", "(", "cv2", ".", "CAP_PROP_POS_FRAMES", ",", "frame_pos", ")", "\n", "if", "block", ">=", "nframes", "-", "frame_pos", ":", "\n", "                    ", "proc_g", "=", "nframes", "-", "frame_pos", "\n", "", "else", ":", "\n", "                    ", "proc_g", "=", "block", "\n", "\n", "", "input", "=", "None", "\n", "gtC", "=", "None", "\n", "for", "i", "in", "range", "(", "proc_g", ")", ":", "\n", "                    ", "index", "=", "frame_pos", "+", "i", "\n", "_", ",", "frame", "=", "cap", ".", "read", "(", ")", "\n", "frame", "=", "cv2", ".", "resize", "(", "frame", ",", "(", "t_w", ",", "t_h", ")", ")", "\n", "nchannels", "=", "frame", ".", "shape", "[", "2", "]", "\n", "if", "nchannels", "==", "1", "or", "self", ".", "colorization", ":", "\n", "                        ", "frame_l", "=", "cv2", ".", "cvtColor", "(", "frame", ",", "cv2", ".", "COLOR_RGB2GRAY", ")", "\n", "cv2", ".", "imwrite", "(", "outputdir_in", "+", "'%07d.png'", "%", "index", ",", "frame_l", ")", "\n", "frame_l", "=", "paddle", ".", "to_tensor", "(", "frame_l", ".", "astype", "(", "'float32'", ")", ")", "\n", "frame_l", "=", "paddle", ".", "reshape", "(", "\n", "frame_l", ",", "[", "frame_l", ".", "shape", "[", "0", "]", ",", "frame_l", ".", "shape", "[", "1", "]", ",", "1", "]", ")", "\n", "frame_l", "=", "paddle", ".", "transpose", "(", "frame_l", ",", "[", "2", ",", "0", ",", "1", "]", ")", "\n", "frame_l", "/=", "255.", "\n", "\n", "frame_l", "=", "paddle", ".", "reshape", "(", "frame_l", ",", "[", "\n", "1", ",", "frame_l", ".", "shape", "[", "0", "]", ",", "1", ",", "frame_l", ".", "shape", "[", "1", "]", ",", "\n", "frame_l", ".", "shape", "[", "2", "]", "\n", "]", ")", "\n", "", "elif", "nchannels", "==", "3", ":", "\n", "                        ", "cv2", ".", "imwrite", "(", "outputdir_in", "+", "'%07d.png'", "%", "index", ",", "frame", ")", "\n", "frame", "=", "frame", "[", ":", ",", ":", ",", ":", ":", "-", "1", "]", "## BGR -> RGB", "\n", "frame_l", ",", "frame_ab", "=", "convertRGB2LABTensor", "(", "frame", ")", "\n", "frame_l", "=", "frame_l", ".", "transpose", "(", "[", "2", ",", "0", ",", "1", "]", ")", "\n", "frame_ab", "=", "frame_ab", ".", "transpose", "(", "[", "2", ",", "0", ",", "1", "]", ")", "\n", "frame_l", "=", "frame_l", ".", "reshape", "(", "[", "\n", "1", ",", "frame_l", ".", "shape", "[", "0", "]", ",", "1", ",", "frame_l", ".", "shape", "[", "1", "]", ",", "\n", "frame_l", ".", "shape", "[", "2", "]", "\n", "]", ")", "\n", "frame_ab", "=", "frame_ab", ".", "reshape", "(", "[", "\n", "1", ",", "frame_ab", ".", "shape", "[", "0", "]", ",", "1", ",", "frame_ab", ".", "shape", "[", "1", "]", ",", "\n", "frame_ab", ".", "shape", "[", "2", "]", "\n", "]", ")", "\n", "\n", "", "if", "input", "is", "not", "None", ":", "\n", "                        ", "paddle", ".", "concat", "(", "(", "input", ",", "frame_l", ")", ",", "2", ")", "\n", "\n", "", "input", "=", "frame_l", "if", "i", "==", "0", "else", "paddle", ".", "concat", "(", "\n", "(", "input", ",", "frame_l", ")", ",", "2", ")", "\n", "if", "nchannels", "==", "3", "and", "not", "self", ".", "colorization", ":", "\n", "                        ", "gtC", "=", "frame_ab", "if", "i", "==", "0", "else", "paddle", ".", "concat", "(", "\n", "(", "gtC", ",", "frame_ab", ")", ",", "2", ")", "\n", "\n", "", "", "input", "=", "paddle", ".", "to_tensor", "(", "input", ")", "\n", "\n", "output_l", "=", "self", ".", "modelR", "(", "input", ")", "# [B, C, T, H, W]", "\n", "\n", "# Save restoration output without colorization when using the option [--disable_colorization]", "\n", "if", "not", "self", ".", "colorization", ":", "\n", "                    ", "for", "i", "in", "range", "(", "proc_g", ")", ":", "\n", "                        ", "index", "=", "frame_pos", "+", "i", "\n", "if", "nchannels", "==", "3", ":", "\n", "                            ", "out_l", "=", "output_l", ".", "detach", "(", ")", "[", "0", ",", ":", ",", "i", "]", "\n", "out_ab", "=", "gtC", "[", "0", ",", ":", ",", "i", "]", "\n", "\n", "out", "=", "paddle", ".", "concat", "(", "\n", "(", "out_l", ",", "out_ab", ")", ",", "\n", "axis", "=", "0", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ".", "transpose", "(", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "out", "=", "Image", ".", "fromarray", "(", "\n", "np", ".", "uint8", "(", "convertLAB2RGB", "(", "out", ")", "*", "255", ")", ")", "\n", "out", ".", "save", "(", "outputdir_out", "+", "'%07d.png'", "%", "(", "index", ")", ")", "\n", "", "else", ":", "\n", "                            ", "raise", "ValueError", "(", "'channels of imag3 must be 3!'", ")", "\n", "\n", "# Perform colorization", "\n", "", "", "", "else", ":", "\n", "                    ", "if", "self", ".", "reference_dir", "is", "None", ":", "\n", "                        ", "output_ab", "=", "self", ".", "modelC", "(", "output_l", ")", "\n", "", "else", ":", "\n", "                        ", "output_ab", "=", "self", ".", "modelC", "(", "output_l", ",", "refimgs", ")", "\n", "", "output_l", "=", "output_l", ".", "detach", "(", ")", "\n", "output_ab", "=", "output_ab", ".", "detach", "(", ")", "\n", "\n", "for", "i", "in", "range", "(", "proc_g", ")", ":", "\n", "                        ", "index", "=", "frame_pos", "+", "i", "\n", "out_l", "=", "output_l", "[", "0", ",", ":", ",", "i", ",", ":", ",", ":", "]", "\n", "out_c", "=", "output_ab", "[", "0", ",", ":", ",", "i", ",", ":", ",", ":", "]", "\n", "output", "=", "paddle", ".", "concat", "(", "\n", "(", "out_l", ",", "out_c", ")", ",", "axis", "=", "0", ")", ".", "numpy", "(", ")", ".", "transpose", "(", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "output", "=", "Image", ".", "fromarray", "(", "\n", "np", ".", "uint8", "(", "convertLAB2RGB", "(", "output", ")", "*", "255", ")", ")", "\n", "output", ".", "save", "(", "outputdir_out", "+", "'%07d.png'", "%", "index", ")", "\n", "\n", "", "", "it", "=", "it", "+", "1", "\n", "pbar", ".", "update", "(", "proc_g", ")", "\n", "\n", "# Save result videos", "\n", "", "outfile", "=", "os", ".", "path", ".", "join", "(", "outputdir", ",", "\n", "video_path", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ".", "split", "(", "'.'", ")", "[", "0", "]", ")", "\n", "cmd", "=", "'ffmpeg -y -r %d -i %s%%07d.png -vcodec libx264 -pix_fmt yuv420p -r %d %s_in.mp4'", "%", "(", "\n", "fps", ",", "outputdir_in", ",", "fps", ",", "outfile", ")", "\n", "subprocess", ".", "call", "(", "cmd", ",", "shell", "=", "True", ")", "\n", "cmd", "=", "'ffmpeg -y -r %d -i %s%%07d.png -vcodec libx264 -pix_fmt yuv420p -r %d %s_out.mp4'", "%", "(", "\n", "fps", ",", "outputdir_out", ",", "fps", ",", "outfile", ")", "\n", "subprocess", ".", "call", "(", "cmd", ",", "shell", "=", "True", ")", "\n", "cmd", "=", "'ffmpeg -y -i %s_in.mp4 -vf \"[in] pad=2.01*iw:ih [left];movie=%s_out.mp4[right];[left][right] overlay=main_w/2:0,scale=2*iw/2:2*ih/2[out]\" %s_comp.mp4'", "%", "(", "\n", "outfile", ",", "outfile", ",", "outfile", ")", "\n", "subprocess", ".", "call", "(", "cmd", ",", "shell", "=", "True", ")", "\n", "\n", "", "cap", ".", "release", "(", ")", "\n", "pbar", ".", "close", "(", ")", "\n", "return", "outputdir_out", ",", "'%s_out.mp4'", "%", "outfile", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deepremaster_predictor.convertLAB2RGB": [[31, 37], ["numpy.clip", "skimage.color.lab2rgb", "lab.astype"], "function", ["None"], ["def", "convertLAB2RGB", "(", "lab", ")", ":", "\n", "    ", "lab", "[", ":", ",", ":", ",", "0", ":", "1", "]", "=", "lab", "[", ":", ",", ":", ",", "0", ":", "1", "]", "*", "100", "# [0, 1] -> [0, 100]", "\n", "lab", "[", ":", ",", ":", ",", "1", ":", "3", "]", "=", "np", ".", "clip", "(", "lab", "[", ":", ",", ":", ",", "1", ":", "3", "]", "*", "255", "-", "128", ",", "-", "100", ",", "\n", "100", ")", "# [0, 1] -> [-128, 128]", "\n", "rgb", "=", "color", ".", "lab2rgb", "(", "lab", ".", "astype", "(", "np", ".", "float64", ")", ")", "\n", "return", "rgb", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deepremaster_predictor.convertRGB2LABTensor": [[39, 49], ["skimage.color.rgb2lab", "numpy.clip", "PIL.Image.fromarray", "paddle.to_tensor", "numpy.asarray", "paddle.to_tensor", "numpy.uint8", "np.clip.astype", "numpy.array().astype", "numpy.array"], "function", ["None"], ["", "def", "convertRGB2LABTensor", "(", "rgb", ")", ":", "\n", "    ", "lab", "=", "color", ".", "rgb2lab", "(", "\n", "np", ".", "asarray", "(", "rgb", ")", ")", "# RGB -> LAB L[0, 100] a[-127, 128] b[-128, 127]", "\n", "ab", "=", "np", ".", "clip", "(", "lab", "[", ":", ",", ":", ",", "1", ":", "3", "]", "+", "128", ",", "0", ",", "255", ")", "# AB --> [0, 255]", "\n", "ab", "=", "paddle", ".", "to_tensor", "(", "ab", ".", "astype", "(", "'float32'", ")", ")", "/", "255.", "\n", "L", "=", "lab", "[", ":", ",", ":", ",", "0", "]", "*", "2.55", "# L --> [0, 255]", "\n", "L", "=", "Image", ".", "fromarray", "(", "np", ".", "uint8", "(", "L", ")", ")", "\n", "\n", "L", "=", "paddle", ".", "to_tensor", "(", "np", ".", "array", "(", "L", ")", ".", "astype", "(", "'float32'", ")", "[", "...", ",", "np", ".", "newaxis", "]", "/", "255.0", ")", "\n", "return", "L", ",", "ab", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deepremaster_predictor.addMergin": [[51, 65], ["img.resize.resize", "PIL.Image.new", "Image.new.paste", "max", "max", "int", "int"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize"], ["", "def", "addMergin", "(", "img", ",", "target_w", ",", "target_h", ",", "background_color", "=", "(", "0", ",", "0", ",", "0", ")", ")", ":", "\n", "    ", "width", ",", "height", "=", "img", ".", "size", "\n", "if", "width", "==", "target_w", "and", "height", "==", "target_h", ":", "\n", "        ", "return", "img", "\n", "", "scale", "=", "max", "(", "target_w", ",", "target_h", ")", "/", "max", "(", "width", ",", "height", ")", "\n", "width", "=", "int", "(", "width", "*", "scale", "/", "16.", ")", "*", "16", "\n", "height", "=", "int", "(", "height", "*", "scale", "/", "16.", ")", "*", "16", "\n", "\n", "img", "=", "img", ".", "resize", "(", "(", "width", ",", "height", ")", ",", "Image", ".", "BICUBIC", ")", "\n", "xp", "=", "(", "target_w", "-", "width", ")", "//", "2", "\n", "yp", "=", "(", "target_h", "-", "height", ")", "//", "2", "\n", "result", "=", "Image", ".", "new", "(", "img", ".", "mode", ",", "(", "target_w", ",", "target_h", ")", ",", "background_color", ")", "\n", "result", ".", "paste", "(", "img", ",", "(", "xp", ",", "yp", ")", ")", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.styleganv2_predictor.StyleGANv2Predictor.__init__": [[105, 141], ["ppgan.models.generators.StyleGANv2Generator", "styleganv2_predictor.StyleGANv2Predictor.generator.set_state_dict", "styleganv2_predictor.StyleGANv2Predictor.generator.eval", "paddle.load", "paddle.seed", "random.seed", "numpy.random.seed", "model_cfgs.keys", "ppgan.utils.download.get_path_from_url", "model_cfgs[].get", "model_cfgs[].get", "model_cfgs[].get", "model_cfgs[].get", "paddle.load", "ValueError"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["    ", "def", "__init__", "(", "self", ",", "\n", "output_path", "=", "'output_dir'", ",", "\n", "weight_path", "=", "None", ",", "\n", "model_type", "=", "None", ",", "\n", "seed", "=", "None", ",", "\n", "size", "=", "1024", ",", "\n", "style_dim", "=", "512", ",", "\n", "n_mlp", "=", "8", ",", "\n", "channel_multiplier", "=", "2", ")", ":", "\n", "        ", "self", ".", "output_path", "=", "output_path", "\n", "\n", "if", "weight_path", "is", "None", ":", "\n", "            ", "if", "model_type", "in", "model_cfgs", ".", "keys", "(", ")", ":", "\n", "                ", "weight_path", "=", "get_path_from_url", "(", "\n", "model_cfgs", "[", "model_type", "]", "[", "'model_urls'", "]", ")", "\n", "size", "=", "model_cfgs", "[", "model_type", "]", ".", "get", "(", "'size'", ",", "size", ")", "\n", "style_dim", "=", "model_cfgs", "[", "model_type", "]", ".", "get", "(", "'style_dim'", ",", "style_dim", ")", "\n", "n_mlp", "=", "model_cfgs", "[", "model_type", "]", ".", "get", "(", "'n_mlp'", ",", "n_mlp", ")", "\n", "channel_multiplier", "=", "model_cfgs", "[", "model_type", "]", ".", "get", "(", "\n", "'channel_multiplier'", ",", "channel_multiplier", ")", "\n", "checkpoint", "=", "paddle", ".", "load", "(", "weight_path", ")", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "\n", "'Predictor need a weight path or a pretrained model type'", ")", "\n", "", "", "else", ":", "\n", "            ", "checkpoint", "=", "paddle", ".", "load", "(", "weight_path", ")", "\n", "\n", "", "self", ".", "generator", "=", "StyleGANv2Generator", "(", "size", ",", "style_dim", ",", "n_mlp", ",", "\n", "channel_multiplier", ")", "\n", "self", ".", "generator", ".", "set_state_dict", "(", "checkpoint", ")", "\n", "self", ".", "generator", ".", "eval", "(", ")", "\n", "\n", "if", "seed", "is", "not", "None", ":", "\n", "            ", "paddle", ".", "seed", "(", "seed", ")", "\n", "random", ".", "seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.styleganv2_predictor.StyleGANv2Predictor.run": [[142, 154], ["os.makedirs", "styleganv2_predictor.get_mean_style", "styleganv2_predictor.sample", "ppgan.utils.visual.save_image", "range", "ppgan.utils.visual.tensor2img", "styleganv2_predictor.style_mixing", "ppgan.utils.visual.save_image", "ppgan.utils.visual.make_grid", "ppgan.utils.visual.tensor2img", "ppgan.utils.visual.make_grid"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_styleganv2.StyleGANv2Generator.get_mean_style", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.styleganv2_predictor.sample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.save_image", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.tensor2img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.styleganv2_predictor.style_mixing", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.save_image", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.make_grid", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.tensor2img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.make_grid"], ["", "", "def", "run", "(", "self", ",", "n_row", "=", "3", ",", "n_col", "=", "5", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "self", ".", "output_path", ",", "exist_ok", "=", "True", ")", "\n", "mean_style", "=", "get_mean_style", "(", "self", ".", "generator", ")", "\n", "\n", "img", "=", "sample", "(", "self", ".", "generator", ",", "mean_style", ",", "n_row", "*", "n_col", ")", "\n", "save_image", "(", "tensor2img", "(", "make_grid", "(", "img", ",", "nrow", "=", "n_col", ")", ")", ",", "\n", "f'{self.output_path}/sample.png'", ")", "\n", "\n", "for", "j", "in", "range", "(", "2", ")", ":", "\n", "            ", "img", "=", "style_mixing", "(", "self", ".", "generator", ",", "mean_style", ",", "n_col", ",", "n_row", ")", "\n", "save_image", "(", "tensor2img", "(", "make_grid", "(", "img", ",", "nrow", "=", "n_col", "+", "1", ")", ")", ",", "\n", "f'{self.output_path}/sample_mixing_{j}.png'", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.styleganv2_predictor.get_mean_style": [[44, 59], ["paddle.no_grad", "range", "generator.mean_latent"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_styleganv2.StyleGANv2Generator.mean_latent"], ["@", "paddle", ".", "no_grad", "(", ")", "\n", "def", "get_mean_style", "(", "generator", ")", ":", "\n", "    ", "mean_style", "=", "None", "\n", "\n", "for", "i", "in", "range", "(", "10", ")", ":", "\n", "        ", "style", "=", "generator", ".", "mean_latent", "(", "1024", ")", "\n", "\n", "if", "mean_style", "is", "None", ":", "\n", "            ", "mean_style", "=", "style", "\n", "\n", "", "else", ":", "\n", "            ", "mean_style", "+=", "style", "\n", "\n", "", "", "mean_style", "/=", "10", "\n", "return", "mean_style", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.styleganv2_predictor.sample": [[61, 70], ["paddle.no_grad", "generator", "paddle.randn"], "function", ["None"], ["", "@", "paddle", ".", "no_grad", "(", ")", "\n", "def", "sample", "(", "generator", ",", "mean_style", ",", "n_sample", ")", ":", "\n", "    ", "image", "=", "generator", "(", "\n", "[", "paddle", ".", "randn", "(", "[", "n_sample", ",", "generator", ".", "style_dim", "]", ")", "]", ",", "\n", "truncation", "=", "0.7", ",", "\n", "truncation_latent", "=", "mean_style", ",", "\n", ")", "[", "0", "]", "\n", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.styleganv2_predictor.style_mixing": [[72, 102], ["paddle.no_grad", "paddle.randn", "paddle.randn", "paddle.concat.append", "range", "paddle.concat", "generator", "generator", "paddle.concat.append", "paddle.concat.append", "paddle.ones", "generator", "target_image[].unsqueeze", "target_code[].unsqueeze().tile", "target_code[].unsqueeze"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "@", "paddle", ".", "no_grad", "(", ")", "\n", "def", "style_mixing", "(", "generator", ",", "mean_style", ",", "n_source", ",", "n_target", ")", ":", "\n", "    ", "source_code", "=", "paddle", ".", "randn", "(", "[", "n_source", ",", "generator", ".", "style_dim", "]", ")", "\n", "target_code", "=", "paddle", ".", "randn", "(", "[", "n_target", ",", "generator", ".", "style_dim", "]", ")", "\n", "\n", "resolution", "=", "2", "**", "(", "(", "generator", ".", "n_latent", "+", "2", ")", "//", "2", ")", "\n", "\n", "images", "=", "[", "paddle", ".", "ones", "(", "[", "1", ",", "3", ",", "resolution", ",", "resolution", "]", ")", "*", "-", "1", "]", "\n", "\n", "source_image", "=", "generator", "(", "[", "source_code", "]", ",", "\n", "truncation_latent", "=", "mean_style", ",", "\n", "truncation", "=", "0.7", ")", "[", "0", "]", "\n", "target_image", "=", "generator", "(", "[", "target_code", "]", ",", "\n", "truncation_latent", "=", "mean_style", ",", "\n", "truncation", "=", "0.7", ")", "[", "0", "]", "\n", "\n", "images", ".", "append", "(", "source_image", ")", "\n", "\n", "for", "i", "in", "range", "(", "n_target", ")", ":", "\n", "        ", "image", "=", "generator", "(", "\n", "[", "target_code", "[", "i", "]", ".", "unsqueeze", "(", "0", ")", ".", "tile", "(", "[", "n_source", ",", "1", "]", ")", ",", "source_code", "]", ",", "\n", "truncation_latent", "=", "mean_style", ",", "\n", "truncation", "=", "0.7", ",", "\n", ")", "[", "0", "]", "\n", "images", ".", "append", "(", "target_image", "[", "i", "]", ".", "unsqueeze", "(", "0", ")", ")", "\n", "images", ".", "append", "(", "image", ")", "\n", "\n", "", "images", "=", "paddle", ".", "concat", "(", "images", ",", "0", ")", "\n", "\n", "return", "images", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.realsr_predictor.RealSRPredictor.__init__": [[34, 44], ["os.path.join", "ppgan.models.generators.RRDBNet", "paddle.load", "realsr_predictor.RealSRPredictor.model.load_dict", "realsr_predictor.RealSRPredictor.model.eval", "ppgan.utils.download.get_path_from_url"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url"], ["    ", "def", "__init__", "(", "self", ",", "output", "=", "'output'", ",", "weight_path", "=", "None", ")", ":", "\n", "        ", "self", ".", "input", "=", "input", "\n", "self", ".", "output", "=", "os", ".", "path", ".", "join", "(", "output", ",", "'RealSR'", ")", "\n", "self", ".", "model", "=", "RRDBNet", "(", "3", ",", "3", ",", "64", ",", "23", ")", "\n", "if", "weight_path", "is", "None", ":", "\n", "            ", "weight_path", "=", "get_path_from_url", "(", "REALSR_WEIGHT_URL", ")", "\n", "\n", "", "state_dict", "=", "paddle", ".", "load", "(", "weight_path", ")", "\n", "self", ".", "model", ".", "load_dict", "(", "state_dict", ")", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.realsr_predictor.RealSRPredictor.norm": [[45, 48], ["img.astype", "numpy.array().transpose().astype", "numpy.array().transpose", "numpy.array"], "methods", ["None"], ["", "def", "norm", "(", "self", ",", "img", ")", ":", "\n", "        ", "img", "=", "np", ".", "array", "(", "img", ")", ".", "transpose", "(", "[", "2", ",", "0", ",", "1", "]", ")", ".", "astype", "(", "'float32'", ")", "/", "255.0", "\n", "return", "img", ".", "astype", "(", "'float32'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.realsr_predictor.RealSRPredictor.denorm": [[49, 52], ["img.transpose.transpose.transpose"], "methods", ["None"], ["", "def", "denorm", "(", "self", ",", "img", ")", ":", "\n", "        ", "img", "=", "img", ".", "transpose", "(", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "return", "(", "img", "*", "255", ")", ".", "clip", "(", "0", ",", "255", ")", ".", "astype", "(", "'uint8'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.realsr_predictor.RealSRPredictor.run_image": [[53, 69], ["isinstance", "realsr_predictor.RealSRPredictor.norm", "paddle.to_tensor", "realsr_predictor.RealSRPredictor.denorm", "PIL.Image.fromarray", "PIL.Image.open().convert", "isinstance", "paddle.no_grad", "realsr_predictor.RealSRPredictor.model", "PIL.Image.fromarray().convert", "isinstance", "realsr_predictor.RealSRPredictor.numpy", "PIL.Image.open", "PIL.Image.fromarray"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.denorm"], ["", "def", "run_image", "(", "self", ",", "img", ")", ":", "\n", "        ", "if", "isinstance", "(", "img", ",", "str", ")", ":", "\n", "            ", "ori_img", "=", "Image", ".", "open", "(", "img", ")", ".", "convert", "(", "'RGB'", ")", "\n", "", "elif", "isinstance", "(", "img", ",", "np", ".", "ndarray", ")", ":", "\n", "            ", "ori_img", "=", "Image", ".", "fromarray", "(", "img", ")", ".", "convert", "(", "'RGB'", ")", "\n", "", "elif", "isinstance", "(", "img", ",", "Image", ".", "Image", ")", ":", "\n", "            ", "ori_img", "=", "img", "\n", "\n", "", "img", "=", "self", ".", "norm", "(", "ori_img", ")", "\n", "x", "=", "paddle", ".", "to_tensor", "(", "img", "[", "np", ".", "newaxis", ",", "...", "]", ")", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "            ", "out", "=", "self", ".", "model", "(", "x", ")", "\n", "\n", "", "pred_img", "=", "self", ".", "denorm", "(", "out", ".", "numpy", "(", ")", "[", "0", "]", ")", "\n", "pred_img", "=", "Image", ".", "fromarray", "(", "pred_img", ")", "\n", "return", "pred_img", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.realsr_predictor.RealSRPredictor.run_video": [[70, 101], ["os.path.join", "os.path.join", "cv2.VideoCapture", "cv2.VideoCapture.get", "ppgan.utils.video.video2frames", "sorted", "tqdm.tqdm.tqdm", "os.path.join", "os.path.join", "ppgan.utils.video.frames2video", "os.path.basename().split", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "glob.glob", "realsr_predictor.RealSRPredictor.run_image", "os.path.basename", "realsr_predictor.RealSRPredictor.save", "str", "os.path.join", "os.path.join", "int", "os.path.basename"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.video.video2frames", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.video.frames2video", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.run_image", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save"], ["", "def", "run_video", "(", "self", ",", "video", ")", ":", "\n", "        ", "base_name", "=", "os", ".", "path", ".", "basename", "(", "video", ")", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "output_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "output", ",", "base_name", ")", "\n", "pred_frame_path", "=", "os", ".", "path", ".", "join", "(", "output_path", ",", "'frames_pred'", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "output_path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "output_path", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "pred_frame_path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "pred_frame_path", ")", "\n", "\n", "", "cap", "=", "cv2", ".", "VideoCapture", "(", "video", ")", "\n", "fps", "=", "cap", ".", "get", "(", "cv2", ".", "CAP_PROP_FPS", ")", "\n", "\n", "out_path", "=", "video2frames", "(", "video", ",", "output_path", ")", "\n", "\n", "frames", "=", "sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "out_path", ",", "'*.png'", ")", ")", ")", "\n", "\n", "for", "frame", "in", "tqdm", "(", "frames", ")", ":", "\n", "            ", "pred_img", "=", "self", ".", "run_image", "(", "frame", ")", "\n", "\n", "frame_name", "=", "os", ".", "path", ".", "basename", "(", "frame", ")", "\n", "pred_img", ".", "save", "(", "os", ".", "path", ".", "join", "(", "pred_frame_path", ",", "frame_name", ")", ")", "\n", "\n", "", "frame_pattern_combined", "=", "os", ".", "path", ".", "join", "(", "pred_frame_path", ",", "'%08d.png'", ")", "\n", "\n", "vid_out_path", "=", "os", ".", "path", ".", "join", "(", "output_path", ",", "\n", "'{}_realsr_out.mp4'", ".", "format", "(", "base_name", ")", ")", "\n", "frames2video", "(", "frame_pattern_combined", ",", "vid_out_path", ",", "str", "(", "int", "(", "fps", ")", ")", ")", "\n", "\n", "return", "frame_pattern_combined", ",", "vid_out_path", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.realsr_predictor.RealSRPredictor.run": [[102, 123], ["os.path.exists", "os.makedirs", "realsr_predictor.RealSRPredictor.is_image", "realsr_predictor.RealSRPredictor.run_video", "realsr_predictor.RealSRPredictor.run_image", "os.path.join", "realsr_predictor.RealSRPredictor.save", "ppgan.utils.logger.get_logger", "ppgan.utils.logger.get_logger.info", "os.path.splitext", "os.path.basename"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.base_predictor.BasePredictor.is_image", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.run_video", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.run_image", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.logger.get_logger"], ["", "def", "run", "(", "self", ",", "input", ")", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "output", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "self", ".", "output", ")", "\n", "\n", "", "if", "not", "self", ".", "is_image", "(", "input", ")", ":", "\n", "            ", "return", "self", ".", "run_video", "(", "input", ")", "\n", "", "else", ":", "\n", "            ", "pred_img", "=", "self", ".", "run_image", "(", "input", ")", "\n", "\n", "out_path", "=", "None", "\n", "if", "self", ".", "output", ":", "\n", "                ", "try", ":", "\n", "                    ", "base_name", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "input", ")", ")", "[", "0", "]", "\n", "", "except", ":", "\n", "                    ", "base_name", "=", "'result'", "\n", "", "out_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "output", ",", "base_name", "+", "'.png'", ")", "\n", "pred_img", ".", "save", "(", "out_path", ")", "\n", "logger", "=", "get_logger", "(", ")", "\n", "logger", ".", "info", "(", "'Image saved to {}'", ".", "format", "(", "out_path", ")", ")", "\n", "\n", "", "return", "pred_img", ",", "out_path", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.dain_predictor.DAINPredictor.__init__": [[33, 49], ["os.path.join", "dain_predictor.DAINPredictor.build_inference_model", "ppgan.utils.download.get_path_from_url"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.base_predictor.BasePredictor.build_inference_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url"], ["    ", "def", "__init__", "(", "self", ",", "\n", "output", "=", "'output'", ",", "\n", "weight_path", "=", "None", ",", "\n", "time_step", "=", "None", ",", "\n", "use_gpu", "=", "True", ",", "\n", "remove_duplicates", "=", "False", ")", ":", "\n", "        ", "self", ".", "output_path", "=", "os", ".", "path", ".", "join", "(", "output", ",", "'DAIN'", ")", "\n", "if", "weight_path", "is", "None", ":", "\n", "            ", "weight_path", "=", "get_path_from_url", "(", "DAIN_WEIGHT_URL", ")", "\n", "\n", "", "self", ".", "weight_path", "=", "weight_path", "\n", "self", ".", "time_step", "=", "time_step", "\n", "self", ".", "key_frame_thread", "=", "0", "\n", "self", ".", "remove_duplicates", "=", "remove_duplicates", "\n", "\n", "self", ".", "build_inference_model", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.dain_predictor.DAINPredictor.run": [[50, 218], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "cv2.VideoCapture", "cv2.VideoCapture.get", "print", "int", "str", "print", "ppgan.utils.video.video2frames", "sorted", "imageio.imread", "len", "tqdm.tqdm.tqdm", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.exists", "ppgan.utils.video.frames2video", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "int", "os.path.basename().split", "glob.glob", "dain_predictor.DAINPredictor.remove_duplicate_frames", "int", "int", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "range", "int", "int", "imageio.imread", "imageio.imread", "numpy.pad", "numpy.pad", "numpy.expand_dims", "numpy.expand_dims", "numpy.expand_dims", "numpy.expand_dims", "numpy.concatenate", "dain_predictor.DAINPredictor.base_forward", "dain_predictor.DAINPredictor.combine_frames_with_rm", "dain_predictor.DAINPredictor.combine_frames", "os.remove", "int", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "imageio.imread.astype().transpose", "imageio.imread.astype().transpose", "numpy.transpose", "zip", "zip", "int", "os.path.basename", "[].split", "[].split", "os.path.join", "imageio.imsave", "os.path.join", "imageio.imsave", "imageio.imread.astype", "imageio.imread.astype", "range", "numpy.round().astype", "range", "numpy.round().astype", "item.clip", "first.split", "second.split", "numpy.round", "numpy.round"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.video.video2frames", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.imread", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.video.frames2video", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.dain_predictor.DAINPredictor.remove_duplicate_frames", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.imread", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.imread", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.base_predictor.BasePredictor.base_forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.dain_predictor.DAINPredictor.combine_frames_with_rm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.dain_predictor.DAINPredictor.combine_frames", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.hook.Hooks.remove"], ["", "def", "run", "(", "self", ",", "video_path", ")", ":", "\n", "        ", "frame_path_input", "=", "os", ".", "path", ".", "join", "(", "self", ".", "output_path", ",", "'frames-input'", ")", "\n", "frame_path_interpolated", "=", "os", ".", "path", ".", "join", "(", "self", ".", "output_path", ",", "\n", "'frames-interpolated'", ")", "\n", "frame_path_combined", "=", "os", ".", "path", ".", "join", "(", "self", ".", "output_path", ",", "'frames-combined'", ")", "\n", "video_path_output", "=", "os", ".", "path", ".", "join", "(", "self", ".", "output_path", ",", "'videos-output'", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "output_path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "self", ".", "output_path", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "frame_path_input", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "frame_path_input", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "frame_path_interpolated", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "frame_path_interpolated", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "frame_path_combined", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "frame_path_combined", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "video_path_output", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "video_path_output", ")", "\n", "\n", "", "timestep", "=", "self", ".", "time_step", "\n", "num_frames", "=", "int", "(", "1.0", "/", "timestep", ")", "-", "1", "\n", "\n", "cap", "=", "cv2", ".", "VideoCapture", "(", "video_path", ")", "\n", "fps", "=", "cap", ".", "get", "(", "cv2", ".", "CAP_PROP_FPS", ")", "\n", "print", "(", "\"Old fps (frame rate): \"", ",", "fps", ")", "\n", "\n", "times_interp", "=", "int", "(", "1.0", "/", "timestep", ")", "\n", "r2", "=", "str", "(", "int", "(", "fps", ")", "*", "times_interp", ")", "\n", "print", "(", "\"New fps (frame rate): \"", ",", "r2", ")", "\n", "\n", "out_path", "=", "video2frames", "(", "video_path", ",", "frame_path_input", ")", "\n", "\n", "vidname", "=", "os", ".", "path", ".", "basename", "(", "video_path", ")", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "\n", "frames", "=", "sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "out_path", ",", "'*.png'", ")", ")", ")", "\n", "\n", "if", "self", ".", "remove_duplicates", ":", "\n", "            ", "frames", "=", "self", ".", "remove_duplicate_frames", "(", "out_path", ")", "\n", "\n", "", "img", "=", "imread", "(", "frames", "[", "0", "]", ")", "\n", "\n", "int_width", "=", "img", ".", "shape", "[", "1", "]", "\n", "int_height", "=", "img", ".", "shape", "[", "0", "]", "\n", "channel", "=", "img", ".", "shape", "[", "2", "]", "\n", "if", "not", "channel", "==", "3", ":", "\n", "            ", "return", "\n", "\n", "", "if", "int_width", "!=", "(", "(", "int_width", ">>", "7", ")", "<<", "7", ")", ":", "\n", "            ", "int_width_pad", "=", "(", "(", "(", "int_width", ">>", "7", ")", "+", "1", ")", "<<", "7", ")", "# more than necessary", "\n", "padding_left", "=", "int", "(", "(", "int_width_pad", "-", "int_width", ")", "/", "2", ")", "\n", "padding_right", "=", "int_width_pad", "-", "int_width", "-", "padding_left", "\n", "", "else", ":", "\n", "            ", "int_width_pad", "=", "int_width", "\n", "padding_left", "=", "32", "\n", "padding_right", "=", "32", "\n", "\n", "", "if", "int_height", "!=", "(", "(", "int_height", ">>", "7", ")", "<<", "7", ")", ":", "\n", "            ", "int_height_pad", "=", "(", "\n", "(", "(", "int_height", ">>", "7", ")", "+", "1", ")", "<<", "7", ")", "# more than necessary", "\n", "padding_top", "=", "int", "(", "(", "int_height_pad", "-", "int_height", ")", "/", "2", ")", "\n", "padding_bottom", "=", "int_height_pad", "-", "int_height", "-", "padding_top", "\n", "", "else", ":", "\n", "            ", "int_height_pad", "=", "int_height", "\n", "padding_top", "=", "32", "\n", "padding_bottom", "=", "32", "\n", "\n", "", "frame_num", "=", "len", "(", "frames", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "frame_path_interpolated", ",", "vidname", ")", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "frame_path_interpolated", ",", "vidname", ")", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "frame_path_combined", ",", "vidname", ")", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "frame_path_combined", ",", "vidname", ")", ")", "\n", "\n", "", "for", "i", "in", "tqdm", "(", "range", "(", "frame_num", "-", "1", ")", ")", ":", "\n", "            ", "first", "=", "frames", "[", "i", "]", "\n", "second", "=", "frames", "[", "i", "+", "1", "]", "\n", "first_index", "=", "int", "(", "first", ".", "split", "(", "os", ".", "sep", ")", "[", "-", "1", "]", ".", "split", "(", "'.'", ")", "[", "-", "2", "]", ")", "\n", "second_index", "=", "int", "(", "second", ".", "split", "(", "os", ".", "sep", ")", "[", "-", "1", "]", ".", "split", "(", "'.'", ")", "[", "-", "2", "]", ")", "\n", "\n", "img_first", "=", "imread", "(", "first", ")", "\n", "img_second", "=", "imread", "(", "second", ")", "\n", "'''--------------Frame change test------------------------'''", "\n", "#img_first_gray = np.dot(img_first[..., :3], [0.299, 0.587, 0.114])", "\n", "#img_second_gray = np.dot(img_second[..., :3], [0.299, 0.587, 0.114])", "\n", "\n", "#img_first_gray = img_first_gray.flatten(order='C')", "\n", "#img_second_gray = img_second_gray.flatten(order='C')", "\n", "#corr = np.corrcoef(img_first_gray, img_second_gray)[0, 1]", "\n", "#key_frame = False", "\n", "#if corr < self.key_frame_thread:", "\n", "#    key_frame = True", "\n", "'''-------------------------------------------------------'''", "\n", "\n", "X0", "=", "img_first", ".", "astype", "(", "'float32'", ")", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", "/", "255", "\n", "X1", "=", "img_second", ".", "astype", "(", "'float32'", ")", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", "/", "255", "\n", "\n", "assert", "(", "X0", ".", "shape", "[", "1", "]", "==", "X1", ".", "shape", "[", "1", "]", ")", "\n", "assert", "(", "X0", ".", "shape", "[", "2", "]", "==", "X1", ".", "shape", "[", "2", "]", ")", "\n", "\n", "X0", "=", "np", ".", "pad", "(", "X0", ",", "(", "(", "0", ",", "0", ")", ",", "(", "padding_top", ",", "padding_bottom", ")", ",", "(", "padding_left", ",", "padding_right", ")", ")", ",", "mode", "=", "'edge'", ")", "\n", "X1", "=", "np", ".", "pad", "(", "X1", ",", "(", "(", "0", ",", "0", ")", ",", "(", "padding_top", ",", "padding_bottom", ")", ",", "(", "padding_left", ",", "padding_right", ")", ")", ",", "mode", "=", "'edge'", ")", "\n", "\n", "X0", "=", "np", ".", "expand_dims", "(", "X0", ",", "axis", "=", "0", ")", "\n", "X1", "=", "np", ".", "expand_dims", "(", "X1", ",", "axis", "=", "0", ")", "\n", "\n", "X0", "=", "np", ".", "expand_dims", "(", "X0", ",", "axis", "=", "0", ")", "\n", "X1", "=", "np", ".", "expand_dims", "(", "X1", ",", "axis", "=", "0", ")", "\n", "\n", "X", "=", "np", ".", "concatenate", "(", "(", "X0", ",", "X1", ")", ",", "axis", "=", "0", ")", "\n", "\n", "o", "=", "self", ".", "base_forward", "(", "X", ")", "\n", "\n", "y_", "=", "o", "[", "0", "]", "\n", "\n", "y_", "=", "[", "\n", "np", ".", "transpose", "(", "\n", "255.0", "*", "item", ".", "clip", "(", "\n", "0", ",", "1.0", ")", "[", "0", ",", ":", ",", "padding_top", ":", "padding_top", "+", "int_height", ",", "\n", "padding_left", ":", "padding_left", "+", "int_width", "]", ",", "\n", "(", "1", ",", "2", ",", "0", ")", ")", "for", "item", "in", "y_", "\n", "]", "\n", "if", "self", ".", "remove_duplicates", ":", "\n", "                ", "num_frames", "=", "times_interp", "*", "(", "second_index", "-", "first_index", ")", "-", "1", "\n", "time_offsets", "=", "[", "\n", "kk", "*", "timestep", "for", "kk", "in", "range", "(", "1", ",", "1", "+", "num_frames", ",", "1", ")", "\n", "]", "\n", "start", "=", "times_interp", "*", "first_index", "+", "1", "\n", "for", "item", ",", "time_offset", "in", "zip", "(", "y_", ",", "time_offsets", ")", ":", "\n", "                    ", "out_dir", "=", "os", ".", "path", ".", "join", "(", "frame_path_interpolated", ",", "vidname", ",", "\n", "\"{:08d}.png\"", ".", "format", "(", "start", ")", ")", "\n", "imsave", "(", "out_dir", ",", "np", ".", "round", "(", "item", ")", ".", "astype", "(", "np", ".", "uint8", ")", ")", "\n", "start", "=", "start", "+", "1", "\n", "\n", "", "", "else", ":", "\n", "                ", "time_offsets", "=", "[", "\n", "kk", "*", "timestep", "for", "kk", "in", "range", "(", "1", ",", "1", "+", "num_frames", ",", "1", ")", "\n", "]", "\n", "\n", "count", "=", "1", "\n", "for", "item", ",", "time_offset", "in", "zip", "(", "y_", ",", "time_offsets", ")", ":", "\n", "                    ", "out_dir", "=", "os", ".", "path", ".", "join", "(", "\n", "frame_path_interpolated", ",", "vidname", ",", "\n", "\"{:0>6d}_{:0>4d}.png\"", ".", "format", "(", "i", ",", "count", ")", ")", "\n", "count", "=", "count", "+", "1", "\n", "imsave", "(", "out_dir", ",", "np", ".", "round", "(", "item", ")", ".", "astype", "(", "np", ".", "uint8", ")", ")", "\n", "\n", "", "", "", "input_dir", "=", "os", ".", "path", ".", "join", "(", "frame_path_input", ",", "vidname", ")", "\n", "interpolated_dir", "=", "os", ".", "path", ".", "join", "(", "frame_path_interpolated", ",", "vidname", ")", "\n", "combined_dir", "=", "os", ".", "path", ".", "join", "(", "frame_path_combined", ",", "vidname", ")", "\n", "\n", "if", "self", ".", "remove_duplicates", ":", "\n", "            ", "self", ".", "combine_frames_with_rm", "(", "input_dir", ",", "interpolated_dir", ",", "\n", "combined_dir", ",", "times_interp", ")", "\n", "\n", "", "else", ":", "\n", "            ", "num_frames", "=", "int", "(", "1.0", "/", "timestep", ")", "-", "1", "\n", "self", ".", "combine_frames", "(", "input_dir", ",", "interpolated_dir", ",", "combined_dir", ",", "\n", "num_frames", ")", "\n", "\n", "", "frame_pattern_combined", "=", "os", ".", "path", ".", "join", "(", "frame_path_combined", ",", "vidname", ",", "\n", "'%08d.png'", ")", "\n", "video_pattern_output", "=", "os", ".", "path", ".", "join", "(", "video_path_output", ",", "vidname", "+", "'.mp4'", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "video_pattern_output", ")", ":", "\n", "            ", "os", ".", "remove", "(", "video_pattern_output", ")", "\n", "", "frames2video", "(", "frame_pattern_combined", ",", "video_pattern_output", ",", "r2", ")", "\n", "\n", "return", "frame_pattern_combined", ",", "video_pattern_output", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.dain_predictor.DAINPredictor.combine_frames": [[219, 242], ["sorted", "sorted", "len", "len", "range", "glob.glob", "glob.glob", "int", "os.path.join", "shutil.copy2", "os.path.join", "os.path.join", "[].split", "range", "os.path.join", "shutil.copy2", "print", "src.split"], "methods", ["None"], ["", "def", "combine_frames", "(", "self", ",", "input", ",", "interpolated", ",", "combined", ",", "num_frames", ")", ":", "\n", "        ", "frames1", "=", "sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "input", ",", "'*.png'", ")", ")", ")", "\n", "frames2", "=", "sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "interpolated", ",", "'*.png'", ")", ")", ")", "\n", "num1", "=", "len", "(", "frames1", ")", "\n", "num2", "=", "len", "(", "frames2", ")", "\n", "\n", "for", "i", "in", "range", "(", "num1", ")", ":", "\n", "            ", "src", "=", "frames1", "[", "i", "]", "\n", "imgname", "=", "int", "(", "src", ".", "split", "(", "os", ".", "sep", ")", "[", "-", "1", "]", ".", "split", "(", "'.'", ")", "[", "-", "2", "]", ")", "\n", "assert", "i", "==", "imgname", "\n", "dst", "=", "os", ".", "path", ".", "join", "(", "combined", ",", "\n", "'{:08d}.png'", ".", "format", "(", "i", "*", "(", "num_frames", "+", "1", ")", ")", ")", "\n", "shutil", ".", "copy2", "(", "src", ",", "dst", ")", "\n", "if", "i", "<", "num1", "-", "1", ":", "\n", "                ", "try", ":", "\n", "                    ", "for", "k", "in", "range", "(", "num_frames", ")", ":", "\n", "                        ", "src", "=", "frames2", "[", "i", "*", "num_frames", "+", "k", "]", "\n", "dst", "=", "os", ".", "path", ".", "join", "(", "\n", "combined", ",", "\n", "'{:08d}.png'", ".", "format", "(", "i", "*", "(", "num_frames", "+", "1", ")", "+", "k", "+", "1", ")", ")", "\n", "shutil", ".", "copy2", "(", "src", ",", "dst", ")", "\n", "", "", "except", "Exception", "as", "e", ":", "\n", "                    ", "print", "(", "e", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.dain_predictor.DAINPredictor.combine_frames_with_rm": [[243, 262], ["sorted", "sorted", "len", "len", "range", "range", "glob.glob", "glob.glob", "int", "os.path.join", "shutil.copy2", "os.path.join", "shutil.copy2", "os.path.join", "os.path.join", "src.split", "[].split", "src.split"], "methods", ["None"], ["", "", "", "", "def", "combine_frames_with_rm", "(", "self", ",", "input", ",", "interpolated", ",", "combined", ",", "\n", "times_interp", ")", ":", "\n", "        ", "frames1", "=", "sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "input", ",", "'*.png'", ")", ")", ")", "\n", "frames2", "=", "sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "interpolated", ",", "'*.png'", ")", ")", ")", "\n", "num1", "=", "len", "(", "frames1", ")", "\n", "num2", "=", "len", "(", "frames2", ")", "\n", "\n", "for", "i", "in", "range", "(", "num1", ")", ":", "\n", "            ", "src", "=", "frames1", "[", "i", "]", "\n", "index", "=", "int", "(", "src", ".", "split", "(", "os", ".", "sep", ")", "[", "-", "1", "]", ".", "split", "(", "'.'", ")", "[", "-", "2", "]", ")", "\n", "dst", "=", "os", ".", "path", ".", "join", "(", "combined", ",", "\n", "'{:08d}.png'", ".", "format", "(", "times_interp", "*", "index", ")", ")", "\n", "shutil", ".", "copy2", "(", "src", ",", "dst", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "num2", ")", ":", "\n", "            ", "src", "=", "frames2", "[", "i", "]", "\n", "imgname", "=", "src", ".", "split", "(", "os", ".", "sep", ")", "[", "-", "1", "]", "\n", "dst", "=", "os", ".", "path", ".", "join", "(", "combined", ",", "imgname", ")", "\n", "shutil", ".", "copy2", "(", "src", ",", "dst", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.dain_predictor.DAINPredictor.remove_duplicate_frames": [[263, 308], ["sorted", "hashes.items", "sorted", "cv2.cvtColor", "cv2.resize", "sum", "glob.glob", "cv2.imread", "dain_predictor.DAINPredictor.remove_duplicate_frames.dhash"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.imread"], ["", "", "def", "remove_duplicate_frames", "(", "self", ",", "paths", ")", ":", "\n", "        ", "def", "dhash", "(", "image", ",", "hash_size", "=", "8", ")", ":", "\n", "            ", "gray", "=", "cv2", ".", "cvtColor", "(", "image", ",", "cv2", ".", "COLOR_BGR2GRAY", ")", "\n", "resized", "=", "cv2", ".", "resize", "(", "gray", ",", "(", "hash_size", "+", "1", ",", "hash_size", ")", ")", "\n", "diff", "=", "resized", "[", ":", ",", "1", ":", "]", ">", "resized", "[", ":", ",", ":", "-", "1", "]", "\n", "return", "sum", "(", "[", "2", "**", "i", "for", "(", "i", ",", "v", ")", "in", "enumerate", "(", "diff", ".", "flatten", "(", ")", ")", "if", "v", "]", ")", "\n", "\n", "", "hashes", "=", "{", "}", "\n", "max_interp", "=", "9", "\n", "image_paths", "=", "sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "paths", ",", "'*.png'", ")", ")", ")", "\n", "for", "image_path", "in", "image_paths", ":", "\n", "            ", "image", "=", "cv2", ".", "imread", "(", "image_path", ")", "\n", "h", "=", "dhash", "(", "image", ")", "\n", "p", "=", "hashes", ".", "get", "(", "h", ",", "[", "]", ")", "\n", "p", ".", "append", "(", "image_path", ")", "\n", "hashes", "[", "h", "]", "=", "p", "\n", "\n", "", "for", "(", "h", ",", "hashed_paths", ")", "in", "hashes", ".", "items", "(", ")", ":", "\n", "            ", "if", "len", "(", "hashed_paths", ")", ">", "1", ":", "\n", "                ", "first_index", "=", "int", "(", "hashed_paths", "[", "0", "]", ".", "split", "(", "\n", "os", ".", "sep", ")", "[", "-", "1", "]", ".", "split", "(", "'.'", ")", "[", "-", "2", "]", ")", "\n", "last_index", "=", "int", "(", "hashed_paths", "[", "-", "1", "]", ".", "split", "(", "\n", "os", ".", "sep", ")", "[", "-", "1", "]", ".", "split", "(", "'.'", ")", "[", "-", "2", "]", ")", "+", "1", "\n", "gap", "=", "2", "*", "(", "last_index", "-", "first_index", ")", "-", "1", "\n", "if", "gap", ">", "2", "*", "max_interp", ":", "\n", "                    ", "cut1", "=", "len", "(", "hashed_paths", ")", "//", "3", "\n", "cut2", "=", "cut1", "*", "2", "\n", "for", "p", "in", "hashed_paths", "[", "1", ":", "cut1", "-", "1", "]", ":", "\n", "                        ", "os", ".", "remove", "(", "p", ")", "\n", "", "for", "p", "in", "hashed_paths", "[", "cut1", "+", "1", ":", "cut2", "]", ":", "\n", "                        ", "os", ".", "remove", "(", "p", ")", "\n", "", "for", "p", "in", "hashed_paths", "[", "cut2", "+", "1", ":", "]", ":", "\n", "                        ", "os", ".", "remove", "(", "p", ")", "\n", "", "", "if", "gap", ">", "max_interp", ":", "\n", "                    ", "mid", "=", "len", "(", "hashed_paths", ")", "//", "2", "\n", "for", "p", "in", "hashed_paths", "[", "1", ":", "mid", "-", "1", "]", ":", "\n", "                        ", "os", ".", "remove", "(", "p", ")", "\n", "", "for", "p", "in", "hashed_paths", "[", "mid", "+", "1", ":", "]", ":", "\n", "                        ", "os", ".", "remove", "(", "p", ")", "\n", "", "", "else", ":", "\n", "                    ", "for", "p", "in", "hashed_paths", "[", "1", ":", "]", ":", "\n", "                        ", "os", ".", "remove", "(", "p", ")", "\n", "\n", "", "", "", "", "frames", "=", "sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "paths", ",", "'*.png'", ")", ")", ")", "\n", "return", "frames", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.animegan_predictor.AnimeGANPredictor.__init__": [[28, 44], ["animegan_predictor.AnimeGANPredictor.load_checkpoints", "paddle.Compose", "paddle.Compose", "ppgan.utils.download.get_path_from_url", "ppgan.datasets.preprocess.transforms.ResizeToScale", "paddle.Transpose", "paddle.Transpose", "paddle.Normalize", "paddle.Normalize"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.midas_predictor.MiDaSPredictor.load_checkpoints", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url"], ["    ", "def", "__init__", "(", "self", ",", "\n", "output_path", "=", "'output'", ",", "\n", "weight_path", "=", "None", ",", "\n", "use_adjust_brightness", "=", "True", ")", ":", "\n", "        ", "self", ".", "output_path", "=", "output_path", "\n", "self", ".", "input_size", "=", "(", "256", ",", "256", ")", "\n", "self", ".", "use_adjust_brightness", "=", "use_adjust_brightness", "\n", "if", "weight_path", "is", "None", ":", "\n", "            ", "vox_cpk_weight_url", "=", "'https://paddlegan.bj.bcebos.com/models/animeganv2_hayao.pdparams'", "\n", "weight_path", "=", "get_path_from_url", "(", "vox_cpk_weight_url", ")", "\n", "", "self", ".", "weight_path", "=", "weight_path", "\n", "self", ".", "generator", "=", "self", ".", "load_checkpoints", "(", ")", "\n", "self", ".", "transform", "=", "T", ".", "Compose", "(", "[", "\n", "ResizeToScale", "(", "(", "256", ",", "256", ")", ",", "32", ")", ",", "\n", "T", ".", "Transpose", "(", ")", ",", "\n", "T", ".", "Normalize", "(", "[", "127.5", ",", "127.5", ",", "127.5", "]", ",", "[", "127.5", ",", "127.5", ",", "127.5", "]", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.animegan_predictor.AnimeGANPredictor.load_checkpoints": [[46, 52], ["ppgan.models.generators.AnimeGenerator", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "ppgan.models.generators.AnimeGenerator.set_state_dict", "ppgan.models.generators.AnimeGenerator.eval"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval"], ["", "def", "load_checkpoints", "(", "self", ")", ":", "\n", "        ", "generator", "=", "AnimeGenerator", "(", ")", "\n", "checkpoint", "=", "paddle", ".", "load", "(", "self", ".", "weight_path", ")", "\n", "generator", ".", "set_state_dict", "(", "checkpoint", "[", "'netG'", "]", ")", "\n", "generator", ".", "eval", "(", ")", "\n", "return", "generator", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.animegan_predictor.AnimeGANPredictor.calc_avg_brightness": [[53, 61], ["img[].mean", "img[].mean", "img[].mean"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "calc_avg_brightness", "(", "img", ")", ":", "\n", "        ", "R", "=", "img", "[", "...", ",", "0", "]", ".", "mean", "(", ")", "\n", "G", "=", "img", "[", "...", ",", "1", "]", ".", "mean", "(", ")", "\n", "B", "=", "img", "[", "...", ",", "2", "]", ".", "mean", "(", ")", "\n", "\n", "brightness", "=", "0.299", "*", "R", "+", "0.587", "*", "G", "+", "0.114", "*", "B", "\n", "return", "brightness", ",", "B", ",", "G", ",", "R", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.animegan_predictor.AnimeGANPredictor.adjust_brightness": [[62, 71], ["animegan_predictor.AnimeGANPredictor.calc_avg_brightness", "animegan_predictor.AnimeGANPredictor.calc_avg_brightness", "numpy.clip", "numpy.uint8"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.animegan_predictor.AnimeGANPredictor.calc_avg_brightness", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.animegan_predictor.AnimeGANPredictor.calc_avg_brightness"], ["", "@", "staticmethod", "\n", "def", "adjust_brightness", "(", "dst", ",", "src", ")", ":", "\n", "        ", "brightness1", ",", "B1", ",", "G1", ",", "R1", "=", "AnimeGANPredictor", ".", "calc_avg_brightness", "(", "src", ")", "\n", "brightness2", ",", "B2", ",", "G2", ",", "R2", "=", "AnimeGANPredictor", ".", "calc_avg_brightness", "(", "dst", ")", "\n", "brightness_difference", "=", "brightness1", "/", "brightness2", "\n", "dstf", "=", "dst", "*", "brightness_difference", "\n", "dstf", "=", "np", ".", "clip", "(", "dstf", ",", "0", ",", "255", ")", "\n", "dstf", "=", "np", ".", "uint8", "(", "dstf", ")", "\n", "return", "dstf", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.animegan_predictor.AnimeGANPredictor.run": [[72, 91], ["cv2.cvtColor", "animegan_predictor.AnimeGANPredictor.transform", "anime.astype.astype.transpose", "os.path.join", "cv2.imwrite", "cv2.imread", "[].numpy", "paddle.resize", "paddle.resize", "animegan_predictor.AnimeGANPredictor.adjust_brightness", "anime.astype.astype.astype", "os.path.exists", "os.makedirs", "cv2.cvtColor", "animegan_predictor.AnimeGANPredictor.generator", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.utils.transform", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.imread", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.animegan_predictor.AnimeGANPredictor.adjust_brightness", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs"], ["", "def", "run", "(", "self", ",", "image", ")", ":", "\n", "        ", "image", "=", "cv2", ".", "cvtColor", "(", "cv2", ".", "imread", "(", "image", ",", "flags", "=", "cv2", ".", "IMREAD_COLOR", ")", ",", "\n", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "transformed_image", "=", "self", ".", "transform", "(", "image", ")", "\n", "anime", "=", "(", "self", ".", "generator", "(", "paddle", ".", "to_tensor", "(", "transformed_image", "[", "None", ",", "...", "]", ")", ")", "\n", "*", "0.5", "+", "0.5", ")", "[", "0", "]", ".", "numpy", "(", ")", "*", "255", "\n", "anime", "=", "anime", ".", "transpose", "(", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "if", "anime", ".", "shape", "[", ":", "2", "]", "!=", "image", ".", "shape", "[", ":", "2", "]", ":", "\n", "# to original size", "\n", "            ", "anime", "=", "T", ".", "resize", "(", "anime", ",", "image", ".", "shape", "[", ":", "2", "]", ")", "\n", "", "if", "self", ".", "use_adjust_brightness", ":", "\n", "            ", "anime", "=", "self", ".", "adjust_brightness", "(", "anime", ",", "image", ")", "\n", "", "else", ":", "\n", "            ", "anime", "=", "anime", ".", "astype", "(", "'uint8'", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "output_path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "self", ".", "output_path", ")", "\n", "", "save_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "output_path", ",", "'anime.png'", ")", "\n", "cv2", ".", "imwrite", "(", "save_path", ",", "cv2", ".", "cvtColor", "(", "anime", ",", "cv2", ".", "COLOR_RGB2BGR", ")", ")", "\n", "return", "image", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.wav2lip_predictor.Wav2LipPredictor.__init__": [[20, 51], ["os.makedirs", "FaceEnhancement"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs"], ["    ", "def", "__init__", "(", "self", ",", "checkpoint_path", "=", "None", ",", "\n", "static", "=", "False", ",", "\n", "fps", "=", "25", ",", "\n", "pads", "=", "[", "0", ",", "10", ",", "0", ",", "0", "]", ",", "\n", "face_det_batch_size", "=", "16", ",", "\n", "wav2lip_batch_size", "=", "128", ",", "\n", "resize_factor", "=", "1", ",", "\n", "crop", "=", "[", "0", ",", "-", "1", ",", "0", ",", "-", "1", "]", ",", "\n", "box", "=", "[", "-", "1", ",", "-", "1", ",", "-", "1", ",", "-", "1", "]", ",", "\n", "rotate", "=", "False", ",", "\n", "nosmooth", "=", "False", ",", "\n", "face_detector", "=", "'sfd'", ",", "\n", "face_enhancement", "=", "False", ")", ":", "\n", "        ", "self", ".", "img_size", "=", "96", "\n", "self", ".", "checkpoint_path", "=", "checkpoint_path", "\n", "self", ".", "static", "=", "static", "\n", "self", ".", "fps", "=", "fps", "\n", "self", ".", "pads", "=", "pads", "\n", "self", ".", "face_det_batch_size", "=", "face_det_batch_size", "\n", "self", ".", "wav2lip_batch_size", "=", "wav2lip_batch_size", "\n", "self", ".", "resize_factor", "=", "resize_factor", "\n", "self", ".", "crop", "=", "crop", "\n", "self", ".", "box", "=", "box", "\n", "self", ".", "rotate", "=", "rotate", "\n", "self", ".", "nosmooth", "=", "nosmooth", "\n", "self", ".", "face_detector", "=", "face_detector", "\n", "self", ".", "face_enhancement", "=", "face_enhancement", "\n", "if", "face_enhancement", ":", "\n", "            ", "from", "ppgan", ".", "faceutils", ".", "face_enhancement", "import", "FaceEnhancement", "\n", "self", ".", "faceenhancer", "=", "FaceEnhancement", "(", ")", "\n", "", "makedirs", "(", "'./temp'", ",", "exist_ok", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.wav2lip_predictor.Wav2LipPredictor.get_smoothened_boxes": [[52, 60], ["range", "len", "numpy.mean", "len", "len"], "methods", ["None"], ["", "def", "get_smoothened_boxes", "(", "self", ",", "boxes", ",", "T", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "boxes", ")", ")", ":", "\n", "            ", "if", "i", "+", "T", ">", "len", "(", "boxes", ")", ":", "\n", "                ", "window", "=", "boxes", "[", "len", "(", "boxes", ")", "-", "T", ":", "]", "\n", "", "else", ":", "\n", "                ", "window", "=", "boxes", "[", "i", ":", "i", "+", "T", "]", "\n", "", "boxes", "[", "i", "]", "=", "np", ".", "mean", "(", "window", ",", "axis", "=", "0", ")", "\n", "", "return", "boxes", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.wav2lip_predictor.Wav2LipPredictor.face_detect": [[61, 112], ["ppgan.faceutils.face_detection.FaceAlignment", "zip", "numpy.array", "max", "min", "max", "min", "results.append", "wav2lip_predictor.Wav2LipPredictor.get_smoothened_boxes", "tqdm.tqdm.tqdm", "cv2.imwrite", "ValueError", "zip", "range", "predictions.extend", "print", "len", "ppgan.faceutils.face_detection.FaceAlignment.get_detections_for_batch", "RuntimeError", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.wav2lip_predictor.Wav2LipPredictor.get_smoothened_boxes", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.extend", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.api.FaceAlignment.get_detections_for_batch"], ["", "def", "face_detect", "(", "self", ",", "images", ")", ":", "\n", "        ", "detector", "=", "face_detection", ".", "FaceAlignment", "(", "\n", "face_detection", ".", "LandmarksType", ".", "_2D", ",", "\n", "flip_input", "=", "False", ",", "\n", "face_detector", "=", "self", ".", "face_detector", ")", "\n", "\n", "batch_size", "=", "self", ".", "face_det_batch_size", "\n", "\n", "while", "1", ":", "\n", "            ", "predictions", "=", "[", "]", "\n", "try", ":", "\n", "                ", "for", "i", "in", "tqdm", "(", "range", "(", "0", ",", "len", "(", "images", ")", ",", "batch_size", ")", ")", ":", "\n", "                    ", "predictions", ".", "extend", "(", "\n", "detector", ".", "get_detections_for_batch", "(", "\n", "np", ".", "array", "(", "images", "[", "i", ":", "i", "+", "batch_size", "]", ")", ")", ")", "\n", "", "", "except", "RuntimeError", ":", "\n", "                ", "if", "batch_size", "==", "1", ":", "\n", "                    ", "raise", "RuntimeError", "(", "\n", "'Image too big to run face detection on GPU. Please use the --resize_factor argument'", "\n", ")", "\n", "", "batch_size", "//=", "2", "\n", "print", "(", "'Recovering from OOM error; New batch size: {}'", ".", "format", "(", "\n", "batch_size", ")", ")", "\n", "continue", "\n", "", "break", "\n", "\n", "", "results", "=", "[", "]", "\n", "pady1", ",", "pady2", ",", "padx1", ",", "padx2", "=", "self", ".", "pads", "\n", "for", "rect", ",", "image", "in", "zip", "(", "predictions", ",", "images", ")", ":", "\n", "            ", "if", "rect", "is", "None", ":", "\n", "                ", "cv2", ".", "imwrite", "(", "\n", "'temp/faulty_frame.jpg'", ",", "\n", "image", ")", "# check this frame where the face was not detected.", "\n", "raise", "ValueError", "(", "\n", "'Face not detected! Ensure the video contains a face in all the frames.'", "\n", ")", "\n", "\n", "", "y1", "=", "max", "(", "0", ",", "rect", "[", "1", "]", "-", "pady1", ")", "\n", "y2", "=", "min", "(", "image", ".", "shape", "[", "0", "]", ",", "rect", "[", "3", "]", "+", "pady2", ")", "\n", "x1", "=", "max", "(", "0", ",", "rect", "[", "0", "]", "-", "padx1", ")", "\n", "x2", "=", "min", "(", "image", ".", "shape", "[", "1", "]", ",", "rect", "[", "2", "]", "+", "padx2", ")", "\n", "\n", "results", ".", "append", "(", "[", "x1", ",", "y1", ",", "x2", ",", "y2", "]", ")", "\n", "\n", "", "boxes", "=", "np", ".", "array", "(", "results", ")", "\n", "if", "not", "self", ".", "nosmooth", ":", "boxes", "=", "self", ".", "get_smoothened_boxes", "(", "boxes", ",", "T", "=", "5", ")", "\n", "results", "=", "[", "[", "image", "[", "y1", ":", "y2", ",", "x1", ":", "x2", "]", ",", "(", "y1", ",", "y2", ",", "x1", ",", "x2", ")", "]", "\n", "for", "image", ",", "(", "x1", ",", "y1", ",", "x2", ",", "y2", ")", "in", "zip", "(", "images", ",", "boxes", ")", "]", "\n", "\n", "del", "detector", "\n", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.wav2lip_predictor.Wav2LipPredictor.datagen": [[113, 169], ["enumerate", "print", "frames[].copy", "face_det_results[].copy", "cv2.resize", "img_batch.append", "numpy.reshape.append", "frame_batch.append", "coords_batch.append", "len", "img_batch.copy", "numpy.reshape", "wav2lip_predictor.Wav2LipPredictor.face_detect", "wav2lip_predictor.Wav2LipPredictor.face_detect", "len", "img_batch.copy", "numpy.reshape", "numpy.asarray", "numpy.asarray", "numpy.concatenate", "len", "numpy.asarray", "numpy.asarray", "numpy.concatenate", "len", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.wav2lip_predictor.Wav2LipPredictor.face_detect", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.wav2lip_predictor.Wav2LipPredictor.face_detect"], ["", "def", "datagen", "(", "self", ",", "frames", ",", "mels", ")", ":", "\n", "        ", "img_batch", ",", "mel_batch", ",", "frame_batch", ",", "coords_batch", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "\n", "if", "self", ".", "box", "[", "0", "]", "==", "-", "1", ":", "\n", "            ", "if", "not", "self", ".", "static", ":", "\n", "                ", "face_det_results", "=", "self", ".", "face_detect", "(", "\n", "frames", ")", "# BGR2RGB for CNN face detection", "\n", "", "else", ":", "\n", "                ", "face_det_results", "=", "self", ".", "face_detect", "(", "[", "frames", "[", "0", "]", "]", ")", "\n", "", "", "else", ":", "\n", "            ", "print", "(", "\n", "'Using the specified bounding box instead of face detection...'", ")", "\n", "y1", ",", "y2", ",", "x1", ",", "x2", "=", "self", ".", "box", "\n", "face_det_results", "=", "[", "[", "f", "[", "y1", ":", "y2", ",", "x1", ":", "x2", "]", ",", "(", "y1", ",", "y2", ",", "x1", ",", "x2", ")", "]", "\n", "for", "f", "in", "frames", "]", "\n", "\n", "", "for", "i", ",", "m", "in", "enumerate", "(", "mels", ")", ":", "\n", "            ", "idx", "=", "0", "if", "self", ".", "static", "else", "i", "%", "len", "(", "frames", ")", "\n", "frame_to_save", "=", "frames", "[", "idx", "]", ".", "copy", "(", ")", "\n", "face", ",", "coords", "=", "face_det_results", "[", "idx", "]", ".", "copy", "(", ")", "\n", "\n", "face", "=", "cv2", ".", "resize", "(", "face", ",", "(", "self", ".", "img_size", ",", "self", ".", "img_size", ")", ")", "\n", "\n", "img_batch", ".", "append", "(", "face", ")", "\n", "mel_batch", ".", "append", "(", "m", ")", "\n", "frame_batch", ".", "append", "(", "frame_to_save", ")", "\n", "coords_batch", ".", "append", "(", "coords", ")", "\n", "\n", "if", "len", "(", "img_batch", ")", ">=", "self", ".", "wav2lip_batch_size", ":", "\n", "                ", "img_batch", ",", "mel_batch", "=", "np", ".", "asarray", "(", "img_batch", ")", ",", "np", ".", "asarray", "(", "\n", "mel_batch", ")", "\n", "\n", "img_masked", "=", "img_batch", ".", "copy", "(", ")", "\n", "img_masked", "[", ":", ",", "self", ".", "img_size", "//", "2", ":", "]", "=", "0", "\n", "\n", "img_batch", "=", "np", ".", "concatenate", "(", "\n", "(", "img_masked", ",", "img_batch", ")", ",", "axis", "=", "3", ")", "/", "255.", "\n", "mel_batch", "=", "np", ".", "reshape", "(", "\n", "mel_batch", ",", "\n", "[", "len", "(", "mel_batch", ")", ",", "mel_batch", ".", "shape", "[", "1", "]", ",", "mel_batch", ".", "shape", "[", "2", "]", ",", "1", "]", ")", "\n", "\n", "yield", "img_batch", ",", "mel_batch", ",", "frame_batch", ",", "coords_batch", "\n", "img_batch", ",", "mel_batch", ",", "frame_batch", ",", "coords_batch", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "\n", "", "", "if", "len", "(", "img_batch", ")", ">", "0", ":", "\n", "            ", "img_batch", ",", "mel_batch", "=", "np", ".", "asarray", "(", "img_batch", ")", ",", "np", ".", "asarray", "(", "mel_batch", ")", "\n", "\n", "img_masked", "=", "img_batch", ".", "copy", "(", ")", "\n", "img_masked", "[", ":", ",", "self", ".", "img_size", "//", "2", ":", "]", "=", "0", "\n", "\n", "img_batch", "=", "np", ".", "concatenate", "(", "(", "img_masked", ",", "img_batch", ")", ",", "axis", "=", "3", ")", "/", "255.", "\n", "mel_batch", "=", "np", ".", "reshape", "(", "\n", "mel_batch", ",", "\n", "[", "len", "(", "mel_batch", ")", ",", "mel_batch", ".", "shape", "[", "1", "]", ",", "mel_batch", ".", "shape", "[", "2", "]", ",", "1", "]", ")", "\n", "\n", "yield", "img_batch", ",", "mel_batch", ",", "frame_batch", ",", "coords_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.wav2lip_predictor.Wav2LipPredictor.run": [[170, 291], ["print", "ppgan.utils.audio.load_wav", "ppgan.utils.audio.melspectrogram", "print", "wav2lip_predictor.Wav2LipPredictor.datagen", "ppgan.models.generators.wav2lip.Wav2Lip", "ppgan.models.generators.wav2lip.Wav2Lip.load_dict", "ppgan.models.generators.wav2lip.Wav2Lip.eval", "print", "enumerate", "cv2.VideoWriter.release", "subprocess.call", "os.path.isfile", "os.path.isfile", "ValueError", "audio_seq.endswith", "print", "subprocess.call", "numpy.isnan().sum", "ValueError", "int", "mel_chunks.append", "full_frames.copy", "paddle.utils.download.get_weights_path_from_url", "paddle.load", "paddle.load", "tqdm.tqdm.tqdm", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "zip", "cv2.VideoCapture", "cv2.VideoCapture.get", "print", "str", "len", "mel_chunks.append", "len", "len", "cv2.VideoWriter", "paddle.no_grad", "ppgan.models.generators.wav2lip.Wav2Lip.", "ppgan.models.generators.wav2lip.Wav2Lip.numpy().transpose", "cv2.resize", "cv2.VideoWriter.write", "os.path.basename().split", "os.path.basename().split", "cv2.imread", "cv2.VideoCapture.read", "full_frames.append", "len", "numpy.isnan", "int", "cv2.VideoWriter_fourcc", "paddle.to_tensor", "paddle.to_tensor", "wav2lip_predictor.Wav2LipPredictor.faceenhancer.enhance_from_image", "wav2lip_predictor.Wav2LipPredictor.astype", "platform.system", "cv2.VideoCapture.release", "cv2.resize", "cv2.rotate", "ppgan.utils.audio.melspectrogram.reshape", "numpy.ceil", "numpy.transpose", "numpy.transpose", "ppgan.models.generators.wav2lip.Wav2Lip.numpy", "os.path.basename", "os.path.basename", "float", "len", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.audio.load_wav", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.audio.melspectrogram", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.wav2lip_predictor.Wav2LipPredictor.datagen", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.imread", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_enhancement.face_enhance.FaceEnhancement.enhance_from_image", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize"], ["", "", "def", "run", "(", "self", ",", "face", ",", "audio_seq", ",", "outfile", ")", ":", "\n", "        ", "if", "os", ".", "path", ".", "isfile", "(", "face", ")", "and", "path", ".", "basename", "(", "\n", "face", ")", ".", "split", "(", "'.'", ")", "[", "1", "]", "in", "[", "'jpg'", ",", "'png'", ",", "'jpeg'", "]", ":", "\n", "            ", "self", ".", "static", "=", "True", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "isfile", "(", "face", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'--face argument must be a valid path to video/image file'", ")", "\n", "\n", "", "elif", "path", ".", "basename", "(", "\n", "face", ")", ".", "split", "(", "'.'", ")", "[", "1", "]", "in", "[", "'jpg'", ",", "'png'", ",", "'jpeg'", "]", ":", "\n", "            ", "full_frames", "=", "[", "cv2", ".", "imread", "(", "face", ")", "]", "\n", "fps", "=", "self", ".", "fps", "\n", "\n", "", "else", ":", "\n", "            ", "video_stream", "=", "cv2", ".", "VideoCapture", "(", "face", ")", "\n", "fps", "=", "video_stream", ".", "get", "(", "cv2", ".", "CAP_PROP_FPS", ")", "\n", "\n", "print", "(", "'Reading video frames...'", ")", "\n", "\n", "full_frames", "=", "[", "]", "\n", "while", "1", ":", "\n", "                ", "still_reading", ",", "frame", "=", "video_stream", ".", "read", "(", ")", "\n", "if", "not", "still_reading", ":", "\n", "                    ", "video_stream", ".", "release", "(", ")", "\n", "break", "\n", "", "if", "self", ".", "resize_factor", ">", "1", ":", "\n", "                    ", "frame", "=", "cv2", ".", "resize", "(", "\n", "frame", ",", "(", "frame", ".", "shape", "[", "1", "]", "//", "self", ".", "resize_factor", ",", "\n", "frame", ".", "shape", "[", "0", "]", "//", "self", ".", "resize_factor", ")", ")", "\n", "\n", "", "if", "self", ".", "rotate", ":", "\n", "                    ", "frame", "=", "cv2", ".", "rotate", "(", "frame", ",", "cv2", ".", "cv2", ".", "ROTATE_90_CLOCKWISE", ")", "\n", "\n", "", "y1", ",", "y2", ",", "x1", ",", "x2", "=", "self", ".", "crop", "\n", "if", "x2", "==", "-", "1", ":", "x2", "=", "frame", ".", "shape", "[", "1", "]", "\n", "if", "y2", "==", "-", "1", ":", "y2", "=", "frame", ".", "shape", "[", "0", "]", "\n", "\n", "frame", "=", "frame", "[", "y1", ":", "y2", ",", "x1", ":", "x2", "]", "\n", "\n", "full_frames", ".", "append", "(", "frame", ")", "\n", "\n", "", "", "print", "(", "\"Number of frames available for inference: \"", "+", "\n", "str", "(", "len", "(", "full_frames", ")", ")", ")", "\n", "\n", "if", "not", "audio_seq", ".", "endswith", "(", "'.wav'", ")", ":", "\n", "            ", "print", "(", "'Extracting raw audio...'", ")", "\n", "command", "=", "'ffmpeg -y -i {} -strict -2 {}'", ".", "format", "(", "\n", "audio_seq", ",", "'temp/temp.wav'", ")", "\n", "\n", "subprocess", ".", "call", "(", "command", ",", "shell", "=", "True", ")", "\n", "audio_seq", "=", "'temp/temp.wav'", "\n", "\n", "", "wav", "=", "audio", ".", "load_wav", "(", "audio_seq", ",", "16000", ")", "\n", "mel", "=", "audio", ".", "melspectrogram", "(", "wav", ")", "\n", "if", "np", ".", "isnan", "(", "mel", ".", "reshape", "(", "-", "1", ")", ")", ".", "sum", "(", ")", ">", "0", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'Mel contains nan! Using a TTS voice? Add a small epsilon noise to the wav file and try again'", "\n", ")", "\n", "\n", "", "mel_chunks", "=", "[", "]", "\n", "mel_idx_multiplier", "=", "80.", "/", "fps", "\n", "i", "=", "0", "\n", "while", "1", ":", "\n", "            ", "start_idx", "=", "int", "(", "i", "*", "mel_idx_multiplier", ")", "\n", "if", "start_idx", "+", "mel_step_size", ">", "len", "(", "mel", "[", "0", "]", ")", ":", "\n", "                ", "mel_chunks", ".", "append", "(", "mel", "[", ":", ",", "len", "(", "mel", "[", "0", "]", ")", "-", "mel_step_size", ":", "]", ")", "\n", "break", "\n", "", "mel_chunks", ".", "append", "(", "mel", "[", ":", ",", "start_idx", ":", "start_idx", "+", "mel_step_size", "]", ")", "\n", "i", "+=", "1", "\n", "\n", "", "print", "(", "\"Length of mel chunks: {}\"", ".", "format", "(", "len", "(", "mel_chunks", ")", ")", ")", "\n", "\n", "full_frames", "=", "full_frames", "[", ":", "len", "(", "mel_chunks", ")", "]", "\n", "\n", "batch_size", "=", "self", ".", "wav2lip_batch_size", "\n", "gen", "=", "self", ".", "datagen", "(", "full_frames", ".", "copy", "(", ")", ",", "mel_chunks", ")", "\n", "\n", "model", "=", "Wav2Lip", "(", ")", "\n", "if", "self", ".", "checkpoint_path", "is", "None", ":", "\n", "            ", "model_weights_path", "=", "get_weights_path_from_url", "(", "WAV2LIP_WEIGHT_URL", ")", "\n", "weights", "=", "paddle", ".", "load", "(", "model_weights_path", ")", "\n", "", "else", ":", "\n", "            ", "weights", "=", "paddle", ".", "load", "(", "self", ".", "checkpoint_path", ")", "\n", "", "model", ".", "load_dict", "(", "weights", ")", "\n", "model", ".", "eval", "(", ")", "\n", "print", "(", "\"Model loaded\"", ")", "\n", "for", "i", ",", "(", "img_batch", ",", "mel_batch", ",", "frames", ",", "coords", ")", "in", "enumerate", "(", "\n", "tqdm", "(", "gen", ",", "\n", "total", "=", "int", "(", "np", ".", "ceil", "(", "float", "(", "len", "(", "mel_chunks", ")", ")", "/", "batch_size", ")", ")", ")", ")", ":", "\n", "            ", "if", "i", "==", "0", ":", "\n", "\n", "                ", "frame_h", ",", "frame_w", "=", "full_frames", "[", "0", "]", ".", "shape", "[", ":", "-", "1", "]", "\n", "out", "=", "cv2", ".", "VideoWriter", "(", "'temp/result.avi'", ",", "\n", "cv2", ".", "VideoWriter_fourcc", "(", "*", "'DIVX'", ")", ",", "fps", ",", "\n", "(", "frame_w", ",", "frame_h", ")", ")", "\n", "\n", "", "img_batch", "=", "paddle", ".", "to_tensor", "(", "np", ".", "transpose", "(", "\n", "img_batch", ",", "(", "0", ",", "3", ",", "1", ",", "2", ")", ")", ")", ".", "astype", "(", "'float32'", ")", "\n", "mel_batch", "=", "paddle", ".", "to_tensor", "(", "np", ".", "transpose", "(", "\n", "mel_batch", ",", "(", "0", ",", "3", ",", "1", ",", "2", ")", ")", ")", ".", "astype", "(", "'float32'", ")", "\n", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "                ", "pred", "=", "model", "(", "mel_batch", ",", "img_batch", ")", "\n", "\n", "", "pred", "=", "pred", ".", "numpy", "(", ")", ".", "transpose", "(", "0", ",", "2", ",", "3", ",", "1", ")", "*", "255.", "\n", "\n", "for", "p", ",", "f", ",", "c", "in", "zip", "(", "pred", ",", "frames", ",", "coords", ")", ":", "\n", "                ", "y1", ",", "y2", ",", "x1", ",", "x2", "=", "c", "\n", "if", "self", ".", "face_enhancement", ":", "\n", "                    ", "p", "=", "self", ".", "faceenhancer", ".", "enhance_from_image", "(", "p", ")", "\n", "", "p", "=", "cv2", ".", "resize", "(", "p", ".", "astype", "(", "np", ".", "uint8", ")", ",", "(", "x2", "-", "x1", ",", "y2", "-", "y1", ")", ")", "\n", "\n", "f", "[", "y1", ":", "y2", ",", "x1", ":", "x2", "]", "=", "p", "\n", "out", ".", "write", "(", "f", ")", "\n", "\n", "", "", "out", ".", "release", "(", ")", "\n", "\n", "command", "=", "'ffmpeg -y -i {} -i {} -strict -2 -q:v 1 {}'", ".", "format", "(", "\n", "audio_seq", ",", "'temp/result.avi'", ",", "outfile", ")", "\n", "subprocess", ".", "call", "(", "command", ",", "shell", "=", "platform", ".", "system", "(", ")", "!=", "'Windows'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.pixel2style2pixel_predictor.AttrDict.__init__": [[165, 168], ["dict.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "AttrDict", ",", "self", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "self", ".", "__dict__", "=", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.pixel2style2pixel_predictor.Pixel2Style2PixelPredictor.__init__": [[171, 215], ["paddle.load.pop", "paddle.load.pop", "pixel2style2pixel_predictor.AttrDict", "ppgan.models.generators.Pixel2Style2Pixel", "pixel2style2pixel_predictor.Pixel2Style2PixelPredictor.generator.set_state_dict", "pixel2style2pixel_predictor.Pixel2Style2PixelPredictor.generator.eval", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.seed", "paddle.seed", "paddle.seed", "paddle.seed", "random.seed", "numpy.random.seed", "model_cfgs.keys", "ppgan.utils.download.get_path_from_url", "model_cfgs[].get", "model_cfgs[].get", "model_cfgs[].get", "model_cfgs[].get", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "ValueError"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["    ", "def", "__init__", "(", "self", ",", "\n", "output_path", "=", "'output_dir'", ",", "\n", "weight_path", "=", "None", ",", "\n", "model_type", "=", "None", ",", "\n", "seed", "=", "None", ",", "\n", "size", "=", "1024", ",", "\n", "style_dim", "=", "512", ",", "\n", "n_mlp", "=", "8", ",", "\n", "channel_multiplier", "=", "2", ")", ":", "\n", "        ", "self", ".", "output_path", "=", "output_path", "\n", "\n", "if", "weight_path", "is", "None", "and", "model_type", "!=", "'default'", ":", "\n", "            ", "if", "model_type", "in", "model_cfgs", ".", "keys", "(", ")", ":", "\n", "                ", "weight_path", "=", "get_path_from_url", "(", "\n", "model_cfgs", "[", "model_type", "]", "[", "'model_urls'", "]", ")", "\n", "size", "=", "model_cfgs", "[", "model_type", "]", ".", "get", "(", "'size'", ",", "size", ")", "\n", "style_dim", "=", "model_cfgs", "[", "model_type", "]", ".", "get", "(", "'style_dim'", ",", "style_dim", ")", "\n", "n_mlp", "=", "model_cfgs", "[", "model_type", "]", ".", "get", "(", "'n_mlp'", ",", "n_mlp", ")", "\n", "channel_multiplier", "=", "model_cfgs", "[", "model_type", "]", ".", "get", "(", "\n", "'channel_multiplier'", ",", "channel_multiplier", ")", "\n", "checkpoint", "=", "paddle", ".", "load", "(", "weight_path", ")", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "\n", "'Predictor need a weight path or a pretrained model type'", ")", "\n", "", "", "else", ":", "\n", "            ", "checkpoint", "=", "paddle", ".", "load", "(", "weight_path", ")", "\n", "\n", "", "opts", "=", "checkpoint", ".", "pop", "(", "'opts'", ")", "\n", "opts", "=", "AttrDict", "(", "opts", ")", "\n", "opts", "[", "'size'", "]", "=", "size", "\n", "opts", "[", "'style_dim'", "]", "=", "style_dim", "\n", "opts", "[", "'n_mlp'", "]", "=", "n_mlp", "\n", "opts", "[", "'channel_multiplier'", "]", "=", "channel_multiplier", "\n", "\n", "self", ".", "generator", "=", "Pixel2Style2Pixel", "(", "opts", ")", "\n", "self", ".", "generator", ".", "set_state_dict", "(", "checkpoint", ")", "\n", "self", ".", "generator", ".", "eval", "(", ")", "\n", "\n", "if", "seed", "is", "not", "None", ":", "\n", "            ", "paddle", ".", "seed", "(", "seed", ")", "\n", "random", ".", "seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "\n", "", "self", ".", "model_type", "=", "'default'", "if", "model_type", "is", "None", "else", "model_type", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.pixel2style2pixel_predictor.Pixel2Style2PixelPredictor.run": [[216, 237], ["pixel2style2pixel_predictor.run_alignment", "numpy.asarray", "pixel2style2pixel_predictor.Pixel2Style2PixelPredictor.generator", "dst_img.transpose.transpose.transpose", "latents[].numpy", "os.makedirs", "os.path.join", "cv2.imwrite", "os.path.join", "cv2.imwrite", "os.path.join", "numpy.save", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "[].numpy", "cv2.cvtColor", "cv2.cvtColor"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.pixel2style2pixel_predictor.run_alignment", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save"], ["", "def", "run", "(", "self", ",", "image", ")", ":", "\n", "        ", "src_img", "=", "run_alignment", "(", "image", ")", "\n", "src_img", "=", "np", ".", "asarray", "(", "src_img", ")", "\n", "transformed_image", "=", "model_cfgs", "[", "self", ".", "model_type", "]", "[", "'transform'", "]", "(", "src_img", ")", "\n", "dst_img", ",", "latents", "=", "self", ".", "generator", "(", "paddle", ".", "to_tensor", "(", "\n", "transformed_image", "[", "None", ",", "...", "]", ")", ",", "\n", "resize", "=", "False", ",", "\n", "return_latents", "=", "True", ")", "\n", "dst_img", "=", "(", "dst_img", "*", "0.5", "+", "0.5", ")", "[", "0", "]", ".", "numpy", "(", ")", "*", "255", "\n", "dst_img", "=", "dst_img", ".", "transpose", "(", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "dst_npy", "=", "latents", "[", "0", "]", ".", "numpy", "(", ")", "\n", "\n", "os", ".", "makedirs", "(", "self", ".", "output_path", ",", "exist_ok", "=", "True", ")", "\n", "save_src_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "output_path", ",", "'src.png'", ")", "\n", "cv2", ".", "imwrite", "(", "save_src_path", ",", "cv2", ".", "cvtColor", "(", "src_img", ",", "cv2", ".", "COLOR_RGB2BGR", ")", ")", "\n", "save_dst_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "output_path", ",", "'dst.png'", ")", "\n", "cv2", ".", "imwrite", "(", "save_dst_path", ",", "cv2", ".", "cvtColor", "(", "dst_img", ",", "cv2", ".", "COLOR_RGB2BGR", ")", ")", "\n", "save_npy_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "output_path", ",", "'dst.npy'", ")", "\n", "np", ".", "save", "(", "save_npy_path", ",", "dst_npy", ")", "\n", "\n", "return", "src_img", ",", "dst_img", ",", "dst_npy", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.pixel2style2pixel_predictor.run_alignment": [[76, 162], ["PIL.Image.open().convert", "ppgan.dlib.detect", "ppgan.dlib.landmarks", "numpy.mean", "numpy.mean", "numpy.hypot", "max", "numpy.stack", "int", "max", "Image.fromarray.transform", "Exception", "numpy.array", "numpy.flipud", "numpy.hypot", "numpy.floor", "Image.fromarray.resize", "int", "int", "int", "int", "int", "max", "max", "min", "min", "Image.fromarray.crop", "int", "int", "int", "int", "max", "max", "max", "max", "numpy.maximum", "numpy.pad", "numpy.maximum", "PIL.Image.fromarray", "PIL.Image.open", "numpy.flipud", "numpy.hypot", "numpy.hypot", "int", "int", "numpy.rint", "numpy.floor", "numpy.floor", "numpy.ceil", "numpy.ceil", "numpy.floor", "numpy.floor", "numpy.ceil", "numpy.ceil", "max", "int", "numpy.float32", "numpy.clip", "numpy.clip", "numpy.uint8", "numpy.rint", "numpy.rint", "min", "min", "max", "max", "min", "min", "max", "max", "numpy.rint", "numpy.minimum", "numpy.minimum", "scipy.ndimage.gaussian_filter", "numpy.median", "numpy.clip", "numpy.rint", "float", "float", "numpy.float32", "numpy.float32", "numpy.float32", "numpy.float32"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.detect.detect", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.dlibutils.dlib_utils.landmarks", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.utils.transform", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.utils.crop"], ["def", "run_alignment", "(", "image_path", ")", ":", "\n", "    ", "img", "=", "Image", ".", "open", "(", "image_path", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "face", "=", "futils", ".", "dlib", ".", "detect", "(", "img", ")", "\n", "if", "not", "face", ":", "\n", "        ", "raise", "Exception", "(", "'Could not find a face in the given image.'", ")", "\n", "", "face_on_image", "=", "face", "[", "0", "]", "\n", "lm", "=", "futils", ".", "dlib", ".", "landmarks", "(", "img", ",", "face_on_image", ")", "\n", "lm", "=", "np", ".", "array", "(", "lm", ")", "[", ":", ",", ":", ":", "-", "1", "]", "\n", "lm_eye_left", "=", "lm", "[", "36", ":", "42", "]", "\n", "lm_eye_right", "=", "lm", "[", "42", ":", "48", "]", "\n", "lm_mouth_outer", "=", "lm", "[", "48", ":", "60", "]", "\n", "\n", "output_size", "=", "1024", "\n", "transform_size", "=", "4096", "\n", "enable_padding", "=", "True", "\n", "\n", "# Calculate auxiliary vectors.", "\n", "eye_left", "=", "np", ".", "mean", "(", "lm_eye_left", ",", "axis", "=", "0", ")", "\n", "eye_right", "=", "np", ".", "mean", "(", "lm_eye_right", ",", "axis", "=", "0", ")", "\n", "eye_avg", "=", "(", "eye_left", "+", "eye_right", ")", "*", "0.5", "\n", "eye_to_eye", "=", "eye_right", "-", "eye_left", "\n", "mouth_left", "=", "lm_mouth_outer", "[", "0", "]", "\n", "mouth_right", "=", "lm_mouth_outer", "[", "6", "]", "\n", "mouth_avg", "=", "(", "mouth_left", "+", "mouth_right", ")", "*", "0.5", "\n", "eye_to_mouth", "=", "mouth_avg", "-", "eye_avg", "\n", "\n", "# Choose oriented crop rectangle.", "\n", "x", "=", "eye_to_eye", "-", "np", ".", "flipud", "(", "eye_to_mouth", ")", "*", "[", "-", "1", ",", "1", "]", "\n", "x", "/=", "np", ".", "hypot", "(", "*", "x", ")", "\n", "x", "*=", "max", "(", "np", ".", "hypot", "(", "*", "eye_to_eye", ")", "*", "2.0", ",", "np", ".", "hypot", "(", "*", "eye_to_mouth", ")", "*", "1.8", ")", "\n", "y", "=", "np", ".", "flipud", "(", "x", ")", "*", "[", "-", "1", ",", "1", "]", "\n", "c", "=", "eye_avg", "+", "eye_to_mouth", "*", "0.1", "\n", "quad", "=", "np", ".", "stack", "(", "[", "c", "-", "x", "-", "y", ",", "c", "-", "x", "+", "y", ",", "c", "+", "x", "+", "y", ",", "c", "+", "x", "-", "y", "]", ")", "\n", "qsize", "=", "np", ".", "hypot", "(", "*", "x", ")", "*", "2", "\n", "\n", "# Shrink.", "\n", "shrink", "=", "int", "(", "np", ".", "floor", "(", "qsize", "/", "output_size", "*", "0.5", ")", ")", "\n", "if", "shrink", ">", "1", ":", "\n", "        ", "rsize", "=", "(", "int", "(", "np", ".", "rint", "(", "float", "(", "img", ".", "size", "[", "0", "]", ")", "/", "shrink", ")", ")", ",", "\n", "int", "(", "np", ".", "rint", "(", "float", "(", "img", ".", "size", "[", "1", "]", ")", "/", "shrink", ")", ")", ")", "\n", "img", "=", "img", ".", "resize", "(", "rsize", ",", "Image", ".", "ANTIALIAS", ")", "\n", "quad", "/=", "shrink", "\n", "qsize", "/=", "shrink", "\n", "\n", "# Crop.", "\n", "", "border", "=", "max", "(", "int", "(", "np", ".", "rint", "(", "qsize", "*", "0.1", ")", ")", ",", "3", ")", "\n", "crop", "=", "(", "int", "(", "np", ".", "floor", "(", "min", "(", "quad", "[", ":", ",", "0", "]", ")", ")", ")", ",", "int", "(", "np", ".", "floor", "(", "min", "(", "quad", "[", ":", ",", "1", "]", ")", ")", ")", ",", "\n", "int", "(", "np", ".", "ceil", "(", "max", "(", "quad", "[", ":", ",", "0", "]", ")", ")", ")", ",", "int", "(", "np", ".", "ceil", "(", "max", "(", "quad", "[", ":", ",", "1", "]", ")", ")", ")", ")", "\n", "crop", "=", "(", "max", "(", "crop", "[", "0", "]", "-", "border", ",", "0", ")", ",", "max", "(", "crop", "[", "1", "]", "-", "border", ",", "0", ")", ",", "\n", "min", "(", "crop", "[", "2", "]", "+", "border", ",", "\n", "img", ".", "size", "[", "0", "]", ")", ",", "min", "(", "crop", "[", "3", "]", "+", "border", ",", "img", ".", "size", "[", "1", "]", ")", ")", "\n", "if", "crop", "[", "2", "]", "-", "crop", "[", "0", "]", "<", "img", ".", "size", "[", "0", "]", "or", "crop", "[", "3", "]", "-", "crop", "[", "1", "]", "<", "img", ".", "size", "[", "1", "]", ":", "\n", "        ", "img", "=", "img", ".", "crop", "(", "crop", ")", "\n", "quad", "-=", "crop", "[", "0", ":", "2", "]", "\n", "\n", "# Pad.", "\n", "", "pad", "=", "(", "int", "(", "np", ".", "floor", "(", "min", "(", "quad", "[", ":", ",", "0", "]", ")", ")", ")", ",", "int", "(", "np", ".", "floor", "(", "min", "(", "quad", "[", ":", ",", "1", "]", ")", ")", ")", ",", "\n", "int", "(", "np", ".", "ceil", "(", "max", "(", "quad", "[", ":", ",", "0", "]", ")", ")", ")", ",", "int", "(", "np", ".", "ceil", "(", "max", "(", "quad", "[", ":", ",", "1", "]", ")", ")", ")", ")", "\n", "pad", "=", "(", "max", "(", "-", "pad", "[", "0", "]", "+", "border", ",", "\n", "0", ")", ",", "max", "(", "-", "pad", "[", "1", "]", "+", "border", ",", "\n", "0", ")", ",", "max", "(", "pad", "[", "2", "]", "-", "img", ".", "size", "[", "0", "]", "+", "border", ",", "\n", "0", ")", ",", "max", "(", "pad", "[", "3", "]", "-", "img", ".", "size", "[", "1", "]", "+", "border", ",", "0", ")", ")", "\n", "if", "enable_padding", "and", "max", "(", "pad", ")", ">", "border", "-", "4", ":", "\n", "        ", "pad", "=", "np", ".", "maximum", "(", "pad", ",", "int", "(", "np", ".", "rint", "(", "qsize", "*", "0.3", ")", ")", ")", "\n", "img", "=", "np", ".", "pad", "(", "np", ".", "float32", "(", "img", ")", ",", "\n", "(", "(", "pad", "[", "1", "]", ",", "pad", "[", "3", "]", ")", ",", "(", "pad", "[", "0", "]", ",", "pad", "[", "2", "]", ")", ",", "(", "0", ",", "0", ")", ")", ",", "'reflect'", ")", "\n", "h", ",", "w", ",", "_", "=", "img", ".", "shape", "\n", "y", ",", "x", ",", "_", "=", "np", ".", "ogrid", "[", ":", "h", ",", ":", "w", ",", ":", "1", "]", "\n", "mask", "=", "np", ".", "maximum", "(", "\n", "1.0", "-", "\n", "np", ".", "minimum", "(", "np", ".", "float32", "(", "x", ")", "/", "pad", "[", "0", "]", ",", "\n", "np", ".", "float32", "(", "w", "-", "1", "-", "x", ")", "/", "pad", "[", "2", "]", ")", ",", "1.0", "-", "\n", "np", ".", "minimum", "(", "np", ".", "float32", "(", "y", ")", "/", "pad", "[", "1", "]", ",", "\n", "np", ".", "float32", "(", "h", "-", "1", "-", "y", ")", "/", "pad", "[", "3", "]", ")", ")", "\n", "blur", "=", "qsize", "*", "0.02", "\n", "img", "+=", "(", "scipy", ".", "ndimage", ".", "gaussian_filter", "(", "img", ",", "[", "blur", ",", "blur", ",", "0", "]", ")", "-", "\n", "img", ")", "*", "np", ".", "clip", "(", "mask", "*", "3.0", "+", "1.0", ",", "0.0", ",", "1.0", ")", "\n", "img", "+=", "(", "np", ".", "median", "(", "img", ",", "axis", "=", "(", "0", ",", "1", ")", ")", "-", "img", ")", "*", "np", ".", "clip", "(", "mask", ",", "0.0", ",", "1.0", ")", "\n", "img", "=", "Image", ".", "fromarray", "(", "np", ".", "uint8", "(", "np", ".", "clip", "(", "np", ".", "rint", "(", "img", ")", ",", "0", ",", "255", ")", ")", ",", "'RGB'", ")", "\n", "quad", "+=", "pad", "[", ":", "2", "]", "\n", "\n", "# Transform.", "\n", "", "img", "=", "img", ".", "transform", "(", "(", "transform_size", ",", "transform_size", ")", ",", "Image", ".", "QUAD", ",", "\n", "(", "quad", "+", "0.5", ")", ".", "flatten", "(", ")", ",", "Image", ".", "BILINEAR", ")", "\n", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.psgan_predictor.PreProcess.__init__": [[49, 61], ["paddle.Compose", "paddle.Compose", "paddle.Normalize", "paddle.Normalize", "ppgan.mask.FaceParser", "paddle.Resize", "paddle.Resize", "paddle.ToTensor", "paddle.ToTensor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "config", ",", "need_parser", "=", "True", ")", ":", "\n", "        ", "self", ".", "img_size", "=", "256", "\n", "self", ".", "transform", "=", "transform", "=", "T", ".", "Compose", "(", "[", "\n", "T", ".", "Resize", "(", "size", "=", "256", ")", ",", "\n", "T", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", "\n", "self", ".", "norm", "=", "T", ".", "Normalize", "(", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "[", "0.5", ",", "0.5", ",", "0.5", "]", ")", "\n", "if", "need_parser", ":", "\n", "            ", "self", ".", "face_parser", "=", "futils", ".", "mask", ".", "FaceParser", "(", ")", "\n", "", "self", ".", "up_ratio", "=", "0.6", "/", "0.85", "\n", "self", ".", "down_ratio", "=", "0.2", "/", "0.85", "\n", "self", ".", "width_ratio", "=", "0.2", "/", "0.85", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.psgan_predictor.PreProcess.__call__": [[62, 96], ["ppgan.dlib.detect", "ppgan.dlib.crop", "numpy.array", "psgan_predictor.PreProcess.transform", "psgan_predictor.PreProcess.face_parser.parse", "cv2.resize", "mask.astype.astype.astype", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "lms.round.round.round", "generate_P_from_lmks", "generate_mask_aug", "numpy.float32", "mask.astype.astype.numpy", "cv2.resize", "ppgan.dlib.landmarks", "psgan_predictor.PreProcess.norm().unsqueeze", "numpy.float32", "numpy.float32", "numpy.float32", "psgan_predictor.PreProcess.norm"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.detect.detect", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.utils.crop", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.utils.transform", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.mask.face_parser.FaceParser.parse", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.preprocess.generate_P_from_lmks", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.preprocess.generate_mask_aug", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.dlibutils.dlib_utils.landmarks", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm"], ["", "def", "__call__", "(", "self", ",", "image", ")", ":", "\n", "        ", "face", "=", "futils", ".", "dlib", ".", "detect", "(", "image", ")", "\n", "\n", "if", "not", "face", ":", "\n", "            ", "return", "\n", "", "face_on_image", "=", "face", "[", "0", "]", "\n", "image", ",", "face", ",", "crop_face", "=", "futils", ".", "dlib", ".", "crop", "(", "image", ",", "face_on_image", ",", "\n", "self", ".", "up_ratio", ",", "\n", "self", ".", "down_ratio", ",", "\n", "self", ".", "width_ratio", ")", "\n", "np_image", "=", "np", ".", "array", "(", "image", ")", "\n", "image_trans", "=", "self", ".", "transform", "(", "np_image", ")", "\n", "mask", "=", "self", ".", "face_parser", ".", "parse", "(", "\n", "np", ".", "float32", "(", "cv2", ".", "resize", "(", "np_image", ",", "(", "512", ",", "512", ")", ")", ")", ")", "\n", "mask", "=", "cv2", ".", "resize", "(", "mask", ".", "numpy", "(", ")", ",", "(", "self", ".", "img_size", ",", "self", ".", "img_size", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ")", "\n", "mask", "=", "mask", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "mask_tensor", "=", "paddle", ".", "to_tensor", "(", "mask", ")", "\n", "\n", "lms", "=", "futils", ".", "dlib", ".", "landmarks", "(", "\n", "image", ",", "face", ")", "/", "image_trans", ".", "shape", "[", ":", "2", "]", "*", "self", ".", "img_size", "\n", "lms", "=", "lms", ".", "round", "(", ")", "\n", "\n", "P_np", "=", "generate_P_from_lmks", "(", "lms", ",", "self", ".", "img_size", ",", "self", ".", "img_size", ",", "\n", "self", ".", "img_size", ")", "\n", "\n", "mask_aug", "=", "generate_mask_aug", "(", "mask", ",", "lms", ")", "\n", "\n", "return", "[", "\n", "self", ".", "norm", "(", "image_trans", ")", ".", "unsqueeze", "(", "0", ")", ",", "\n", "np", ".", "float32", "(", "mask_aug", ")", ",", "\n", "np", ".", "float32", "(", "P_np", ")", ",", "\n", "np", ".", "float32", "(", "mask", ")", "\n", "]", ",", "face_on_image", ",", "crop_face", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.psgan_predictor.PostProcess.__init__": [[99, 102], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "self", ".", "denoise", "=", "True", "\n", "self", ".", "img_size", "=", "256", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.psgan_predictor.PostProcess.__call__": [[103, 119], ["numpy.array", "numpy.array", "cv2.resize", "PIL.Image.fromarray().convert", "numpy.array.astype", "cv2.resize().astype", "cv2.fastNlMeansDenoisingColored", "PIL.Image.fromarray", "cv2.resize", "cv2.resize"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize"], ["", "def", "__call__", "(", "self", ",", "source", ":", "Image", ",", "result", ":", "Image", ")", ":", "\n", "# TODO: Refract -> name, resize", "\n", "        ", "source", "=", "np", ".", "array", "(", "source", ")", "\n", "result", "=", "np", ".", "array", "(", "result", ")", "\n", "\n", "height", ",", "width", "=", "source", ".", "shape", "[", ":", "2", "]", "\n", "small_source", "=", "cv2", ".", "resize", "(", "source", ",", "(", "self", ".", "img_size", ",", "self", ".", "img_size", ")", ")", "\n", "laplacian_diff", "=", "source", ".", "astype", "(", "np", ".", "float", ")", "-", "cv2", ".", "resize", "(", "\n", "small_source", ",", "(", "width", ",", "height", ")", ")", ".", "astype", "(", "np", ".", "float", ")", "\n", "result", "=", "(", "cv2", ".", "resize", "(", "result", ",", "\n", "(", "width", ",", "height", ")", ")", "+", "laplacian_diff", ")", ".", "round", "(", ")", ".", "clip", "(", "\n", "0", ",", "255", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "if", "self", ".", "denoise", ":", "\n", "            ", "result", "=", "cv2", ".", "fastNlMeansDenoisingColored", "(", "result", ")", "\n", "", "result", "=", "Image", ".", "fromarray", "(", "result", ")", ".", "convert", "(", "'RGB'", ")", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.psgan_predictor.Inference.__init__": [[122, 126], ["ppgan.models.builder.build_model", "psgan_predictor.PreProcess"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.build_model"], ["    ", "def", "__init__", "(", "self", ",", "config", ",", "model_path", "=", "''", ")", ":", "\n", "        ", "self", ".", "model", "=", "build_model", "(", "config", ".", "model", ")", "\n", "self", ".", "preprocess", "=", "PreProcess", "(", "config", ")", "\n", "self", ".", "model_path", "=", "model_path", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.psgan_predictor.Inference.transfer": [[127, 171], ["psgan_predictor.Inference.preprocess", "psgan_predictor.Inference.preprocess", "numpy.float32", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "range", "range", "ppgan.utils.filesystem.load", "psgan_predictor.Inference.model.nets.items", "psgan_predictor.Inference.model.test", "paddle.divide", "paddle.divide", "paddle.divide", "paddle.divide", "psgan_predictor.toImage", "calculate_consis_mask", "numpy.expand_dims", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "net.set_state_dict", "paddle.divide.min", "paddle.divide.min", "paddle.divide.max", "paddle.divide.max", "len", "numpy.expand_dims", "len", "numpy.expand_dims"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.preprocess", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.preprocess", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.test", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.psgan_predictor.toImage", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.preprocess.calculate_consis_mask"], ["", "def", "transfer", "(", "self", ",", "source", ",", "reference", ",", "with_face", "=", "False", ")", ":", "\n", "        ", "source_input", ",", "face", ",", "crop_face", "=", "self", ".", "preprocess", "(", "source", ")", "\n", "reference_input", ",", "face", ",", "crop_face", "=", "self", ".", "preprocess", "(", "reference", ")", "\n", "\n", "consis_mask", "=", "np", ".", "float32", "(", "\n", "calculate_consis_mask", "(", "source_input", "[", "1", "]", ",", "reference_input", "[", "1", "]", ")", ")", "\n", "consis_mask", "=", "paddle", ".", "to_tensor", "(", "np", ".", "expand_dims", "(", "consis_mask", ",", "0", ")", ")", "\n", "\n", "if", "not", "(", "source_input", "and", "reference_input", ")", ":", "\n", "            ", "if", "with_face", ":", "\n", "                ", "return", "None", ",", "None", "\n", "", "return", "\n", "\n", "", "for", "i", "in", "range", "(", "1", ",", "len", "(", "source_input", ")", "-", "1", ")", ":", "\n", "            ", "source_input", "[", "i", "]", "=", "paddle", ".", "to_tensor", "(", "\n", "np", ".", "expand_dims", "(", "source_input", "[", "i", "]", ",", "0", ")", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "1", ",", "len", "(", "reference_input", ")", "-", "1", ")", ":", "\n", "            ", "reference_input", "[", "i", "]", "=", "paddle", ".", "to_tensor", "(", "\n", "np", ".", "expand_dims", "(", "reference_input", "[", "i", "]", ",", "0", ")", ")", "\n", "\n", "", "input_data", "=", "{", "\n", "'image_A'", ":", "source_input", "[", "0", "]", ",", "\n", "'image_B'", ":", "reference_input", "[", "0", "]", ",", "\n", "'mask_A_aug'", ":", "source_input", "[", "1", "]", ",", "\n", "'mask_B_aug'", ":", "reference_input", "[", "1", "]", ",", "\n", "'P_A'", ":", "source_input", "[", "2", "]", ",", "\n", "'P_B'", ":", "reference_input", "[", "2", "]", ",", "\n", "'consis_mask'", ":", "consis_mask", "\n", "}", "\n", "\n", "state_dicts", "=", "load", "(", "self", ".", "model_path", ")", "\n", "for", "net_name", ",", "net", "in", "self", ".", "model", ".", "nets", ".", "items", "(", ")", ":", "\n", "            ", "net", ".", "set_state_dict", "(", "state_dicts", "[", "net_name", "]", ")", "\n", "", "result", ",", "_", "=", "self", ".", "model", ".", "test", "(", "input_data", ")", "\n", "min_", ",", "max_", "=", "result", ".", "min", "(", ")", ",", "result", ".", "max", "(", ")", "\n", "result", "+=", "-", "min_", "\n", "result", "=", "paddle", ".", "divide", "(", "result", ",", "max_", "-", "min_", "+", "1e-5", ")", "\n", "img", "=", "toImage", "(", "result", ")", "\n", "\n", "if", "with_face", ":", "\n", "            ", "return", "img", ",", "crop_face", "\n", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.psgan_predictor.PSGANPredictor.__init__": [[174, 181], ["paddle.utils.download.get_weights_path_from_url", "paddle.utils.download.get_weights_path_from_url"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "cfg", ",", "output_path", "=", "'output'", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "cfg", "=", "cfg", "\n", "self", ".", "weight_path", "=", "self", ".", "args", ".", "model_path", "\n", "if", "self", ".", "weight_path", "is", "None", ":", "\n", "            ", "self", ".", "weight_path", "=", "get_weights_path_from_url", "(", "PS_WEIGHT_URL", ")", "\n", "", "self", ".", "output_path", "=", "output_path", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.psgan_predictor.PSGANPredictor.run": [[182, 220], ["ppgan.utils.setup.setup", "psgan_predictor.Inference", "psgan_predictor.PostProcess", "list", "numpy.random.shuffle", "print", "PIL.Image.open().convert", "pathlib.Path().glob", "len", "print", "sys.exit", "PIL.Image.open().convert", "psgan_predictor.Inference.transfer", "PIL.Image.open().convert.crop", "PostProcess.", "os.path.join", "PostProcess.save", "print", "print", "sys.exit", "reference_path.is_file", "print", "os.path.split", "os.path.exists", "os.makedirs", "PIL.Image.open", "pathlib.Path", "PIL.Image.open", "face.left", "face.top", "face.right", "face.bottom"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.setup.setup", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.psgan_predictor.Inference.transfer", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.utils.crop", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs"], ["", "def", "run", "(", "self", ")", ":", "\n", "        ", "setup", "(", "self", ".", "args", ",", "self", ".", "cfg", ")", "\n", "inference", "=", "Inference", "(", "self", ".", "cfg", ",", "self", ".", "weight_path", ")", "\n", "postprocess", "=", "PostProcess", "(", "self", ".", "cfg", ")", "\n", "\n", "try", ":", "\n", "            ", "source", "=", "Image", ".", "open", "(", "self", ".", "args", ".", "source_path", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "", "except", "IOError", ":", "\n", "            ", "print", "(", "\"Error: {} is not exist\"", ".", "format", "(", "self", ".", "args", ".", "source_path", ")", ")", "\n", "sys", ".", "exit", "(", ")", "\n", "\n", "", "reference_paths", "=", "list", "(", "Path", "(", "self", ".", "args", ".", "reference_dir", ")", ".", "glob", "(", "\"*\"", ")", ")", "\n", "if", "len", "(", "reference_paths", ")", "==", "0", ":", "\n", "            ", "print", "(", "\"Error: Can't find image file in {}.\"", ".", "format", "(", "\n", "self", ".", "args", ".", "reference_dir", ")", ")", "\n", "sys", ".", "exit", "(", ")", "\n", "", "np", ".", "random", ".", "shuffle", "(", "reference_paths", ")", "\n", "for", "reference_path", "in", "reference_paths", ":", "\n", "            ", "if", "not", "reference_path", ".", "is_file", "(", ")", ":", "\n", "                ", "print", "(", "reference_path", ",", "\"is not a valid file.\"", ")", "\n", "continue", "\n", "", "reference", "=", "Image", ".", "open", "(", "reference_path", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "\n", "# Transfer the psgan from reference to source.", "\n", "image", ",", "face", "=", "inference", ".", "transfer", "(", "source", ",", "reference", ",", "with_face", "=", "True", ")", "\n", "source_crop", "=", "source", ".", "crop", "(", "\n", "(", "face", ".", "left", "(", ")", ",", "face", ".", "top", "(", ")", ",", "face", ".", "right", "(", ")", ",", "face", ".", "bottom", "(", ")", ")", ")", "\n", "image", "=", "postprocess", "(", "source_crop", ",", "image", ")", "\n", "\n", "ref_img_name", "=", "os", ".", "path", ".", "split", "(", "reference_path", ")", "[", "1", "]", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "output_path", ")", ":", "\n", "                ", "os", ".", "makedirs", "(", "self", ".", "output_path", ")", "\n", "\n", "", "save_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "output_path", ",", "\n", "'transfered_ref_'", "+", "ref_img_name", ")", "\n", "image", ".", "save", "(", "save_path", ")", "\n", "print", "(", "'Transfered image {} has been saved!'", ".", "format", "(", "save_path", ")", ")", "\n", "", "print", "(", "'done!!!'", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.psgan_predictor.toImage": [[36, 43], ["net_output.squeeze().transpose().numpy", "numpy.uint8", "PIL.Image.fromarray", "net_output.squeeze().transpose", "net_output.squeeze"], "function", ["None"], ["def", "toImage", "(", "net_output", ")", ":", "\n", "    ", "img", "=", "net_output", ".", "squeeze", "(", "0", ")", ".", "transpose", "(", "\n", "(", "1", ",", "2", ",", "0", ")", ")", ".", "numpy", "(", ")", "# [1,c,h,w]->[h,w,c]", "\n", "img", "=", "(", "img", "*", "255.0", ")", ".", "clip", "(", "0", ",", "255", ")", "\n", "img", "=", "np", ".", "uint8", "(", "img", ")", "\n", "img", "=", "Image", ".", "fromarray", "(", "img", ",", "mode", "=", "'RGB'", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.edvr_predictor.EDVRDataset.__init__": [[117, 119], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "frame_paths", ")", ":", "\n", "        ", "self", ".", "frames", "=", "frame_paths", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.edvr_predictor.EDVRDataset.__getitem__": [[120, 133], ["edvr_predictor.get_test_neighbor_frames", "numpy.stack", "numpy.transpose().astype", "len", "edvr_predictor.read_img", "frame_list.append", "numpy.transpose"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.edvr_predictor.get_test_neighbor_frames", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.first_order_predictor.FirstOrderPredictor.read_img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "indexs", "=", "get_test_neighbor_frames", "(", "index", ",", "5", ",", "len", "(", "self", ".", "frames", ")", ")", "\n", "frame_list", "=", "[", "]", "\n", "for", "i", "in", "indexs", ":", "\n", "            ", "img", "=", "read_img", "(", "self", ".", "frames", "[", "i", "]", ")", "\n", "frame_list", ".", "append", "(", "img", ")", "\n", "\n", "", "img_LQs", "=", "np", ".", "stack", "(", "frame_list", ",", "axis", "=", "0", ")", "\n", "# BGR to RGB, HWC to CHW, numpy to tensor", "\n", "img_LQs", "=", "img_LQs", "[", ":", ",", ":", ",", ":", ",", "[", "2", ",", "1", ",", "0", "]", "]", "\n", "img_LQs", "=", "np", ".", "transpose", "(", "img_LQs", ",", "(", "0", ",", "3", ",", "1", ",", "2", ")", ")", ".", "astype", "(", "'float32'", ")", "\n", "\n", "return", "img_LQs", ",", "self", ".", "frames", "[", "index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.edvr_predictor.EDVRDataset.__len__": [[134, 136], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "frames", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.edvr_predictor.EDVRPredictor.__init__": [[139, 148], ["os.path.join", "ppgan.models.generators.EDVRNet", "edvr_predictor.EDVRPredictor.model.set_dict", "edvr_predictor.EDVRPredictor.model.eval", "ppgan.utils.download.get_path_from_url", "paddle.load"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["    ", "def", "__init__", "(", "self", ",", "output", "=", "'output'", ",", "weight_path", "=", "None", ",", "bs", "=", "1", ")", ":", "\n", "        ", "self", ".", "input", "=", "input", "\n", "self", ".", "output", "=", "os", ".", "path", ".", "join", "(", "output", ",", "'EDVR'", ")", "\n", "self", ".", "bs", "=", "bs", "\n", "self", ".", "model", "=", "EDVRNet", "(", "nf", "=", "128", ",", "back_RBs", "=", "40", ")", "\n", "if", "weight_path", "is", "None", ":", "\n", "            ", "weight_path", "=", "get_path_from_url", "(", "EDVR_WEIGHT_URL", ")", "\n", "", "self", ".", "model", ".", "set_dict", "(", "paddle", ".", "load", "(", "weight_path", ")", "[", "'generator'", "]", ")", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.edvr_predictor.EDVRPredictor.run": [[149, 197], ["os.path.join", "os.path.join", "cv2.VideoCapture", "cv2.VideoCapture.get", "ppgan.utils.video.video2frames", "sorted", "edvr_predictor.EDVRDataset", "paddle.io.DataLoader", "time.time", "enumerate", "os.path.join", "os.path.join", "ppgan.utils.video.frames2video", "os.path.basename().split", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "glob.glob", "tqdm.tqdm.tqdm", "paddle.to_tensor", "range", "time.time", "periods.append", "str", "os.path.join", "paddle.no_grad", "edvr_predictor.EDVRPredictor.model().numpy", "edvr_predictor.get_img", "edvr_predictor.save_img", "int", "os.path.basename", "range", "os.path.join", "edvr_predictor.EDVRPredictor.model", "os.path.basename"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.video.video2frames", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.video.frames2video", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.serving.test_client.get_img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.edvr_predictor.save_img"], ["", "def", "run", "(", "self", ",", "video_path", ")", ":", "\n", "        ", "vid", "=", "video_path", "\n", "base_name", "=", "os", ".", "path", ".", "basename", "(", "vid", ")", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "output_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "output", ",", "base_name", ")", "\n", "pred_frame_path", "=", "os", ".", "path", ".", "join", "(", "output_path", ",", "'frames_pred'", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "output_path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "output_path", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "pred_frame_path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "pred_frame_path", ")", "\n", "\n", "", "cap", "=", "cv2", ".", "VideoCapture", "(", "vid", ")", "\n", "fps", "=", "cap", ".", "get", "(", "cv2", ".", "CAP_PROP_FPS", ")", "\n", "\n", "out_path", "=", "video2frames", "(", "vid", ",", "output_path", ")", "\n", "\n", "frames", "=", "sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "out_path", ",", "'*.png'", ")", ")", ")", "\n", "\n", "test_dataset", "=", "EDVRDataset", "(", "frames", ")", "\n", "dataset", "=", "DataLoader", "(", "test_dataset", ",", "batch_size", "=", "self", ".", "bs", ",", "num_workers", "=", "2", ")", "\n", "\n", "periods", "=", "[", "]", "\n", "cur_time", "=", "time", ".", "time", "(", ")", "\n", "for", "infer_iter", ",", "data", "in", "enumerate", "(", "tqdm", "(", "dataset", ")", ")", ":", "\n", "            ", "data_feed_in", "=", "paddle", ".", "to_tensor", "(", "data", "[", "0", "]", ")", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "                ", "outs", "=", "self", ".", "model", "(", "data_feed_in", ")", ".", "numpy", "(", ")", "\n", "", "infer_result_list", "=", "[", "outs", "[", "i", ",", ":", ",", ":", ",", ":", "]", "for", "i", "in", "range", "(", "self", ".", "bs", ")", "]", "\n", "frame_path", "=", "data", "[", "1", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "bs", ")", ":", "\n", "                ", "img_i", "=", "get_img", "(", "infer_result_list", "[", "i", "]", ")", "\n", "save_img", "(", "\n", "img_i", ",", "\n", "os", ".", "path", ".", "join", "(", "pred_frame_path", ",", "\n", "os", ".", "path", ".", "basename", "(", "frame_path", "[", "i", "]", ")", ")", ")", "\n", "\n", "", "prev_time", "=", "cur_time", "\n", "cur_time", "=", "time", ".", "time", "(", ")", "\n", "period", "=", "cur_time", "-", "prev_time", "\n", "periods", ".", "append", "(", "period", ")", "\n", "\n", "", "frame_pattern_combined", "=", "os", ".", "path", ".", "join", "(", "pred_frame_path", ",", "'%08d.png'", ")", "\n", "vid_out_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "output", ",", "\n", "'{}_edvr_out.mp4'", ".", "format", "(", "base_name", ")", ")", "\n", "frames2video", "(", "frame_pattern_combined", ",", "vid_out_path", ",", "str", "(", "int", "(", "fps", ")", ")", ")", "\n", "\n", "return", "frame_pattern_combined", ",", "vid_out_path", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.edvr_predictor.get_img": [[33, 42], ["np.transpose.squeeze", "numpy.clip", "np.transpose.round", "np.transpose.astype", "numpy.transpose"], "function", ["None"], ["def", "get_img", "(", "pred", ")", ":", "\n", "    ", "pred", "=", "pred", ".", "squeeze", "(", ")", "\n", "pred", "=", "np", ".", "clip", "(", "pred", ",", "a_min", "=", "0.", ",", "a_max", "=", "1.0", ")", "\n", "pred", "=", "pred", "*", "255", "\n", "pred", "=", "pred", ".", "round", "(", ")", "\n", "pred", "=", "pred", ".", "astype", "(", "'uint8'", ")", "\n", "pred", "=", "np", ".", "transpose", "(", "pred", ",", "(", "1", ",", "2", ",", "0", ")", ")", "# chw -> hwc", "\n", "pred", "=", "pred", "[", ":", ",", ":", ",", ":", ":", "-", "1", "]", "# rgb -> bgr", "\n", "return", "pred", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.edvr_predictor.save_img": [[44, 50], ["os.path.dirname", "cv2.imwrite", "os.path.exists", "os.makedirs"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs"], ["", "def", "save_img", "(", "img", ",", "framename", ")", ":", "\n", "    ", "dirname", "=", "os", ".", "path", ".", "dirname", "(", "framename", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "dirname", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "dirname", ")", "\n", "\n", "", "cv2", ".", "imwrite", "(", "framename", ",", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.edvr_predictor.read_img": [[52, 64], ["cv2.imread", "np.expand_dims.astype", "numpy.expand_dims"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.imread"], ["", "def", "read_img", "(", "path", ",", "size", "=", "None", ",", "is_gt", "=", "False", ")", ":", "\n", "    ", "\"\"\"read image by cv2\n    return: Numpy float32, HWC, BGR, [0,1]\"\"\"", "\n", "img", "=", "cv2", ".", "imread", "(", "path", ",", "cv2", ".", "IMREAD_UNCHANGED", ")", "\n", "\n", "img", "=", "img", ".", "astype", "(", "np", ".", "float32", ")", "/", "255.", "\n", "if", "img", ".", "ndim", "==", "2", ":", "\n", "        ", "img", "=", "np", ".", "expand_dims", "(", "img", ",", "axis", "=", "2", ")", "\n", "\n", "", "if", "img", ".", "shape", "[", "2", "]", ">", "3", ":", "\n", "        ", "img", "=", "img", "[", ":", ",", ":", ",", ":", "3", "]", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.edvr_predictor.get_test_neighbor_frames": [[66, 114], ["range", "return_l.append", "ValueError", "ValueError"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "get_test_neighbor_frames", "(", "crt_i", ",", "N", ",", "max_n", ",", "padding", "=", "'new_info'", ")", ":", "\n", "    ", "\"\"\"Generate an index list for reading N frames from a sequence of images\n    Args:\n        crt_i (int): current center index\n        max_n (int): max number of the sequence of images (calculated from 1)\n        N (int): reading N frames\n        padding (str): padding mode, one of replicate | reflection | new_info | circle\n            Example: crt_i = 0, N = 5\n            replicate: [0, 0, 0, 1, 2]\n            reflection: [2, 1, 0, 1, 2]\n            new_info: [4, 3, 0, 1, 2]\n            circle: [3, 4, 0, 1, 2]\n\n    Returns:\n        return_l (list [int]): a list of indexes\n    \"\"\"", "\n", "max_n", "=", "max_n", "-", "1", "\n", "n_pad", "=", "N", "//", "2", "\n", "return_l", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "crt_i", "-", "n_pad", ",", "crt_i", "+", "n_pad", "+", "1", ")", ":", "\n", "        ", "if", "i", "<", "0", ":", "\n", "            ", "if", "padding", "==", "'replicate'", ":", "\n", "                ", "add_idx", "=", "0", "\n", "", "elif", "padding", "==", "'reflection'", ":", "\n", "                ", "add_idx", "=", "-", "i", "\n", "", "elif", "padding", "==", "'new_info'", ":", "\n", "                ", "add_idx", "=", "(", "crt_i", "+", "n_pad", ")", "+", "(", "-", "i", ")", "\n", "", "elif", "padding", "==", "'circle'", ":", "\n", "                ", "add_idx", "=", "N", "+", "i", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "'Wrong padding mode'", ")", "\n", "", "", "elif", "i", ">", "max_n", ":", "\n", "            ", "if", "padding", "==", "'replicate'", ":", "\n", "                ", "add_idx", "=", "max_n", "\n", "", "elif", "padding", "==", "'reflection'", ":", "\n", "                ", "add_idx", "=", "max_n", "*", "2", "-", "i", "\n", "", "elif", "padding", "==", "'new_info'", ":", "\n", "                ", "add_idx", "=", "(", "crt_i", "-", "n_pad", ")", "-", "(", "i", "-", "max_n", ")", "\n", "", "elif", "padding", "==", "'circle'", ":", "\n", "                ", "add_idx", "=", "i", "-", "N", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "'Wrong padding mode'", ")", "\n", "", "", "else", ":", "\n", "            ", "add_idx", "=", "i", "\n", "", "return_l", ".", "append", "(", "add_idx", ")", "\n", "\n", "", "return", "return_l", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.face_parse_predictor.FaceParsePredictor.__init__": [[30, 37], ["ppgan.mask.FaceParser"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "output_path", "=", "'output'", ")", ":", "\n", "        ", "self", ".", "output_path", "=", "output_path", "\n", "self", ".", "input_size", "=", "(", "512", ",", "512", ")", "\n", "self", ".", "up_ratio", "=", "0.6", "/", "0.85", "\n", "self", ".", "down_ratio", "=", "0.2", "/", "0.85", "\n", "self", ".", "width_ratio", "=", "0.2", "/", "0.85", "\n", "self", ".", "face_parser", "=", "futils", ".", "mask", ".", "FaceParser", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.face_parse_predictor.FaceParsePredictor.run": [[38, 60], ["PIL.Image.open().convert", "ppgan.dlib.detect", "ppgan.dlib.crop", "numpy.array", "face_parse_predictor.FaceParsePredictor.face_parser.parse", "cv2.resize", "ppgan.utils.visual.mask2image.astype", "ppgan.utils.visual.mask2image", "os.path.join", "cv2.imwrite", "numpy.float32", "ppgan.utils.visual.mask2image.numpy", "os.path.exists", "os.makedirs", "PIL.Image.open", "cv2.resize"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.detect.detect", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.utils.crop", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.mask.face_parser.FaceParser.parse", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.mask2image", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize"], ["", "def", "run", "(", "self", ",", "image", ")", ":", "\n", "        ", "image", "=", "Image", ".", "open", "(", "image", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "face", "=", "futils", ".", "dlib", ".", "detect", "(", "image", ")", "\n", "\n", "if", "not", "face", ":", "\n", "            ", "return", "\n", "", "face_on_image", "=", "face", "[", "0", "]", "\n", "image", ",", "face", ",", "crop_face", "=", "futils", ".", "dlib", ".", "crop", "(", "image", ",", "face_on_image", ",", "\n", "self", ".", "up_ratio", ",", "\n", "self", ".", "down_ratio", ",", "\n", "self", ".", "width_ratio", ")", "\n", "np_image", "=", "np", ".", "array", "(", "image", ")", "\n", "mask", "=", "self", ".", "face_parser", ".", "parse", "(", "\n", "np", ".", "float32", "(", "cv2", ".", "resize", "(", "np_image", ",", "self", ".", "input_size", ")", ")", ")", "\n", "mask", "=", "cv2", ".", "resize", "(", "mask", ".", "numpy", "(", ")", ",", "(", "256", ",", "256", ")", ")", "\n", "mask", "=", "mask", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "mask", "=", "mask2image", "(", "mask", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "output_path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "self", ".", "output_path", ")", "\n", "", "save_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "output_path", ",", "'face_parse.png'", ")", "\n", "cv2", ".", "imwrite", "(", "save_path", ",", "mask", ")", "\n", "return", "mask", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.styleganv2editing_predictor.StyleGANv2EditingPredictor.__init__": [[37, 45], ["styleganv2_predictor.StyleGANv2Predictor.__init__", "paddle.load", "ppgan.utils.download.get_path_from_url"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url"], ["    ", "def", "__init__", "(", "self", ",", "model_type", "=", "None", ",", "direction_path", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "model_type", "=", "model_type", ",", "**", "kwargs", ")", "\n", "\n", "if", "direction_path", "is", "None", "and", "model_type", "is", "not", "None", ":", "\n", "            ", "assert", "model_type", "in", "model_cfgs", ",", "f'There is not any pretrained direction file for {model_type} model.'", "\n", "direction_path", "=", "get_path_from_url", "(", "\n", "model_cfgs", "[", "model_type", "]", "[", "'direction_urls'", "]", ")", "\n", "", "self", ".", "directions", "=", "paddle", ".", "load", "(", "direction_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.styleganv2editing_predictor.StyleGANv2EditingPredictor.run": [[46, 73], ["paddle.no_grad", "paddle.to_tensor().unsqueeze().astype", "styleganv2editing_predictor.StyleGANv2EditingPredictor.directions[].unsqueeze().astype", "paddle.concat", "generator", "styleganv2editing_predictor.make_image", "[].numpy().astype", "os.makedirs", "os.path.join", "cv2.imwrite", "os.path.join", "cv2.imwrite", "os.path.join", "numpy.save", "cv2.cvtColor", "cv2.cvtColor", "paddle.to_tensor().unsqueeze", "styleganv2editing_predictor.StyleGANv2EditingPredictor.directions[].unsqueeze", "[].numpy", "paddle.to_tensor", "numpy.load"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.styleganv2editing_predictor.make_image", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["", "@", "paddle", ".", "no_grad", "(", ")", "\n", "def", "run", "(", "self", ",", "latent", ",", "direction", ",", "offset", ")", ":", "\n", "\n", "        ", "latent", "=", "paddle", ".", "to_tensor", "(", "\n", "np", ".", "load", "(", "latent", ")", ")", ".", "unsqueeze", "(", "0", ")", ".", "astype", "(", "'float32'", ")", "\n", "direction", "=", "self", ".", "directions", "[", "direction", "]", ".", "unsqueeze", "(", "0", ")", ".", "astype", "(", "'float32'", ")", "\n", "\n", "latent_n", "=", "paddle", ".", "concat", "(", "[", "latent", ",", "latent", "+", "offset", "*", "direction", "]", ",", "0", ")", "\n", "generator", "=", "self", ".", "generator", "\n", "img_gen", ",", "_", "=", "generator", "(", "[", "latent_n", "]", ",", "\n", "input_is_latent", "=", "True", ",", "\n", "randomize_noise", "=", "False", ")", "\n", "imgs", "=", "make_image", "(", "img_gen", ")", "\n", "src_img", "=", "imgs", "[", "0", "]", "\n", "dst_img", "=", "imgs", "[", "1", "]", "\n", "\n", "dst_latent", "=", "(", "latent", "+", "offset", "*", "direction", ")", "[", "0", "]", ".", "numpy", "(", ")", ".", "astype", "(", "'float32'", ")", "\n", "\n", "os", ".", "makedirs", "(", "self", ".", "output_path", ",", "exist_ok", "=", "True", ")", "\n", "save_src_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "output_path", ",", "'src.editing.png'", ")", "\n", "cv2", ".", "imwrite", "(", "save_src_path", ",", "cv2", ".", "cvtColor", "(", "src_img", ",", "cv2", ".", "COLOR_RGB2BGR", ")", ")", "\n", "save_dst_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "output_path", ",", "'dst.editing.png'", ")", "\n", "cv2", ".", "imwrite", "(", "save_dst_path", ",", "cv2", ".", "cvtColor", "(", "dst_img", ",", "cv2", ".", "COLOR_RGB2BGR", ")", ")", "\n", "save_npy_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "output_path", ",", "'dst.editing.npy'", ")", "\n", "np", ".", "save", "(", "save_npy_path", ",", "dst_latent", ")", "\n", "\n", "return", "src_img", ",", "dst_img", ",", "dst_latent", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.styleganv2editing_predictor.make_image": [[31, 34], ["tensor.detach"], "function", ["None"], ["def", "make_image", "(", "tensor", ")", ":", "\n", "    ", "return", "(", "(", "(", "tensor", ".", "detach", "(", ")", "+", "1", ")", "/", "2", "*", "255", ")", ".", "clip", "(", "min", "=", "0", ",", "max", "=", "255", ")", ".", "transpose", "(", "\n", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", ".", "numpy", "(", ")", ".", "astype", "(", "'uint8'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.lapstyle_predictor.LapStylePredictor.__init__": [[113, 145], ["os.path.join", "ppgan.models.generators.Encoder", "ppgan.models.generators.DecoderNet", "ppgan.models.generators.RevisionNet", "ppgan.models.generators.RevisionNet", "lapstyle_predictor.LapStylePredictor.net_enc.set_dict", "lapstyle_predictor.LapStylePredictor.net_enc.eval", "lapstyle_predictor.LapStylePredictor.net_dec.set_dict", "lapstyle_predictor.LapStylePredictor.net_dec.eval", "lapstyle_predictor.LapStylePredictor.net_rev.set_dict", "lapstyle_predictor.LapStylePredictor.net_rev.eval", "lapstyle_predictor.LapStylePredictor.net_rev_2.set_dict", "lapstyle_predictor.LapStylePredictor.net_rev_2.eval", "os.path.exists", "os.makedirs", "ppgan.utils.download.get_path_from_url", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "ppgan.utils.download.get_path_from_url", "ppgan.utils.download.get_path_from_url", "ppgan.utils.download.get_path_from_url", "Exception"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url"], ["    ", "def", "__init__", "(", "self", ",", "\n", "output", "=", "'output_dir'", ",", "\n", "style", "=", "'starrynew'", ",", "\n", "weight_path", "=", "None", ")", ":", "\n", "        ", "self", ".", "input", "=", "input", "\n", "self", ".", "output", "=", "os", ".", "path", ".", "join", "(", "output", ",", "'LapStyle'", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "output", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "self", ".", "output", ")", "\n", "", "self", ".", "net_enc", "=", "Encoder", "(", ")", "\n", "self", ".", "net_dec", "=", "DecoderNet", "(", ")", "\n", "self", ".", "net_rev", "=", "RevisionNet", "(", ")", "\n", "self", ".", "net_rev_2", "=", "RevisionNet", "(", ")", "\n", "\n", "if", "weight_path", "is", "None", ":", "\n", "            ", "if", "style", "==", "'starrynew'", ":", "\n", "                ", "weight_path", "=", "get_path_from_url", "(", "LapStyle_starrynew_WEIGHT_URL", ")", "\n", "", "elif", "style", "==", "'circuit'", ":", "\n", "                ", "weight_path", "=", "get_path_from_url", "(", "LapStyle_circuit_WEIGHT_URL", ")", "\n", "", "elif", "style", "==", "'ocean'", ":", "\n", "                ", "weight_path", "=", "get_path_from_url", "(", "LapStyle_ocean_WEIGHT_URL", ")", "\n", "", "elif", "style", "==", "'stars'", ":", "\n", "                ", "weight_path", "=", "get_path_from_url", "(", "LapStyle_stars_WEIGHT_URL", ")", "\n", "", "else", ":", "\n", "                ", "raise", "Exception", "(", "f'has not implemented {style}.'", ")", "\n", "", "", "self", ".", "net_enc", ".", "set_dict", "(", "paddle", ".", "load", "(", "weight_path", ")", "[", "'net_enc'", "]", ")", "\n", "self", ".", "net_enc", ".", "eval", "(", ")", "\n", "self", ".", "net_dec", ".", "set_dict", "(", "paddle", ".", "load", "(", "weight_path", ")", "[", "'net_dec'", "]", ")", "\n", "self", ".", "net_dec", ".", "eval", "(", ")", "\n", "self", ".", "net_rev", ".", "set_dict", "(", "paddle", ".", "load", "(", "weight_path", ")", "[", "'net_rev'", "]", ")", "\n", "self", ".", "net_rev", ".", "eval", "(", ")", "\n", "self", ".", "net_rev_2", ".", "set_dict", "(", "paddle", ".", "load", "(", "weight_path", ")", "[", "'net_rev_2'", "]", ")", "\n", "self", ".", "net_rev_2", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.lapstyle_predictor.LapStylePredictor.run": [[146, 190], ["lapstyle_predictor.img_read", "ppgan.utils.visual.tensor2img", "cv2.cvtColor", "cv2.resize", "cv2.imwrite", "ppgan.utils.visual.tensor2img", "cv2.cvtColor", "cv2.imwrite", "lapstyle_predictor.make_laplace_pyramid", "lapstyle_predictor.make_laplace_pyramid", "make_laplace_pyramid.append", "make_laplace_pyramid.append", "lapstyle_predictor.LapStylePredictor.net_enc", "lapstyle_predictor.LapStylePredictor.net_enc", "lapstyle_predictor.LapStylePredictor.net_dec", "paddle.interpolate", "paddle.interpolate", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "lapstyle_predictor.LapStylePredictor.net_rev", "lapstyle_predictor.fold_laplace_pyramid", "paddle.interpolate", "paddle.interpolate", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "lapstyle_predictor.LapStylePredictor.net_rev_2", "lapstyle_predictor.fold_laplace_pyramid", "ppgan.utils.visual.tensor2img", "cv2.cvtColor", "cv2.resize", "cv2.imwrite", "print", "lapstyle_predictor.LapStylePredictor.is_image", "ValueError", "lapstyle_predictor.LapStylePredictor.is_image", "ValueError", "os.path.join", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.lapstyle_predictor.img_read", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.tensor2img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.tensor2img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.make_laplace_pyramid", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.make_laplace_pyramid", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.fold_laplace_pyramid", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.fold_laplace_pyramid", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.tensor2img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.base_predictor.BasePredictor.is_image", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.base_predictor.BasePredictor.is_image"], ["", "def", "run", "(", "self", ",", "content_img_path", ",", "style_image_path", ")", ":", "\n", "        ", "if", "not", "self", ".", "is_image", "(", "content_img_path", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'The path of content_img does not exist or is not image'", ")", "\n", "", "if", "not", "self", ".", "is_image", "(", "style_image_path", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'The path of style_image does not exist or is not image'", ")", "\n", "", "content_img", ",", "style_img", ",", "h", ",", "w", "=", "img_read", "(", "content_img_path", ",", "\n", "style_image_path", ")", "\n", "content_img_visual", "=", "tensor2img", "(", "content_img", ",", "min_max", "=", "(", "0.", ",", "1.", ")", ")", "\n", "content_img_visual", "=", "cv", ".", "cvtColor", "(", "content_img_visual", ",", "cv", ".", "COLOR_RGB2BGR", ")", "\n", "content_img_visual", "=", "cv", ".", "resize", "(", "content_img_visual", ",", "(", "w", ",", "h", ")", ")", "\n", "cv", ".", "imwrite", "(", "os", ".", "path", ".", "join", "(", "self", ".", "output", ",", "'content.png'", ")", ",", "content_img_visual", ")", "\n", "style_img_visual", "=", "tensor2img", "(", "style_img", ",", "min_max", "=", "(", "0.", ",", "1.", ")", ")", "\n", "style_img_visual", "=", "cv", ".", "cvtColor", "(", "style_img_visual", ",", "cv", ".", "COLOR_RGB2BGR", ")", "\n", "cv", ".", "imwrite", "(", "os", ".", "path", ".", "join", "(", "self", ".", "output", ",", "'style.png'", ")", ",", "style_img_visual", ")", "\n", "pyr_ci", "=", "make_laplace_pyramid", "(", "content_img", ",", "2", ")", "\n", "pyr_si", "=", "make_laplace_pyramid", "(", "style_img", ",", "2", ")", "\n", "pyr_ci", ".", "append", "(", "content_img", ")", "\n", "pyr_si", ".", "append", "(", "style_img", ")", "\n", "cF", "=", "self", ".", "net_enc", "(", "pyr_ci", "[", "2", "]", ")", "\n", "sF", "=", "self", ".", "net_enc", "(", "pyr_si", "[", "2", "]", ")", "\n", "stylized_small", "=", "self", ".", "net_dec", "(", "cF", ",", "sF", ")", "\n", "stylized_up", "=", "F", ".", "interpolate", "(", "stylized_small", ",", "scale_factor", "=", "2", ")", "\n", "\n", "revnet_input", "=", "paddle", ".", "concat", "(", "x", "=", "[", "pyr_ci", "[", "1", "]", ",", "stylized_up", "]", ",", "axis", "=", "1", ")", "\n", "stylized_rev_lap", "=", "self", ".", "net_rev", "(", "revnet_input", ")", "\n", "stylized_rev", "=", "fold_laplace_pyramid", "(", "[", "stylized_rev_lap", ",", "stylized_small", "]", ")", "\n", "stylized_up", "=", "F", ".", "interpolate", "(", "stylized_rev", ",", "scale_factor", "=", "2", ")", "\n", "\n", "revnet_input", "=", "paddle", ".", "concat", "(", "x", "=", "[", "pyr_ci", "[", "0", "]", ",", "stylized_up", "]", ",", "axis", "=", "1", ")", "\n", "stylized_rev_lap_second", "=", "self", ".", "net_rev_2", "(", "revnet_input", ")", "\n", "stylized_rev_second", "=", "fold_laplace_pyramid", "(", "\n", "[", "stylized_rev_lap_second", ",", "stylized_rev_lap", ",", "stylized_small", "]", ")", "\n", "\n", "stylized", "=", "stylized_rev_second", "\n", "stylized_visual", "=", "tensor2img", "(", "stylized", ",", "min_max", "=", "(", "0.", ",", "1.", ")", ")", "\n", "stylized_visual", "=", "cv", ".", "cvtColor", "(", "stylized_visual", ",", "cv", ".", "COLOR_RGB2BGR", ")", "\n", "stylized_visual", "=", "cv", ".", "resize", "(", "stylized_visual", ",", "(", "w", ",", "h", ")", ")", "\n", "cv", ".", "imwrite", "(", "os", ".", "path", ".", "join", "(", "self", ".", "output", ",", "'stylized.png'", ")", ",", "stylized_visual", ")", "\n", "\n", "print", "(", "'Model LapStyle output images path:'", ",", "self", ".", "output", ")", "\n", "\n", "return", "stylized", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.lapstyle_predictor.img": [[36, 42], ["None"], "function", ["None"], ["def", "img", "(", "img", ")", ":", "\n", "# some images have 4 channels", "\n", "    ", "if", "img", ".", "shape", "[", "2", "]", ">", "3", ":", "\n", "        ", "img", "=", "img", "[", ":", ",", ":", ",", ":", "3", "]", "\n", "# HWC to CHW", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.lapstyle_predictor.img_read": [[44, 68], ["cv2.imread", "PIL.Image.fromarray", "cv.cvtColor.resize", "numpy.array", "lapstyle_predictor.img", "paddle.vision.transforms.functional.to_tensor", "cv2.imread", "cv2.cvtColor", "PIL.Image.fromarray", "paddle.unsqueeze.resize", "numpy.array", "lapstyle_predictor.img", "paddle.vision.transforms.functional.to_tensor", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "cv2.cvtColor", "cv2.cvtColor"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.imread", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.lapstyle_predictor.img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.imread", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.lapstyle_predictor.img"], ["", "def", "img_read", "(", "content_img_path", ",", "style_image_path", ")", ":", "\n", "    ", "content_img", "=", "cv", ".", "imread", "(", "content_img_path", ")", "\n", "if", "content_img", ".", "ndim", "==", "2", ":", "\n", "        ", "content_img", "=", "cv", ".", "cvtColor", "(", "content_img", ",", "cv", ".", "COLOR_GRAY2RGB", ")", "\n", "", "else", ":", "\n", "        ", "content_img", "=", "cv", ".", "cvtColor", "(", "content_img", ",", "cv", ".", "COLOR_BGR2RGB", ")", "\n", "", "h", ",", "w", ",", "c", "=", "content_img", ".", "shape", "\n", "content_img", "=", "Image", ".", "fromarray", "(", "content_img", ")", "\n", "content_img", "=", "content_img", ".", "resize", "(", "(", "512", ",", "512", ")", ",", "Image", ".", "BILINEAR", ")", "\n", "content_img", "=", "np", ".", "array", "(", "content_img", ")", "\n", "content_img", "=", "img", "(", "content_img", ")", "\n", "content_img", "=", "functional", ".", "to_tensor", "(", "content_img", ")", "\n", "\n", "style_img", "=", "cv", ".", "imread", "(", "style_image_path", ")", "\n", "style_img", "=", "cv", ".", "cvtColor", "(", "style_img", ",", "cv", ".", "COLOR_BGR2RGB", ")", "\n", "style_img", "=", "Image", ".", "fromarray", "(", "style_img", ")", "\n", "style_img", "=", "style_img", ".", "resize", "(", "(", "512", ",", "512", ")", ",", "Image", ".", "BILINEAR", ")", "\n", "style_img", "=", "np", ".", "array", "(", "style_img", ")", "\n", "style_img", "=", "img", "(", "style_img", ")", "\n", "style_img", "=", "functional", ".", "to_tensor", "(", "style_img", ")", "\n", "\n", "content_img", "=", "paddle", ".", "unsqueeze", "(", "content_img", ",", "axis", "=", "0", ")", "\n", "style_img", "=", "paddle", ".", "unsqueeze", "(", "style_img", ",", "axis", "=", "0", ")", "\n", "return", "content_img", ",", "style_img", ",", "h", ",", "w", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.lapstyle_predictor.tensor_resample": [[70, 72], ["paddle.interpolate"], "function", ["None"], ["", "def", "tensor_resample", "(", "tensor", ",", "dst_size", ",", "mode", "=", "'bilinear'", ")", ":", "\n", "    ", "return", "F", ".", "interpolate", "(", "tensor", ",", "dst_size", ",", "mode", "=", "mode", ",", "align_corners", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.lapstyle_predictor.laplacian": [[74, 84], ["lapstyle_predictor.tensor_resample", "lapstyle_predictor.tensor_resample"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.tensor_resample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.tensor_resample"], ["", "def", "laplacian", "(", "x", ")", ":", "\n", "    ", "\"\"\"\n    Laplacian\n\n    return:\n       x - upsample(downsample(x))\n    \"\"\"", "\n", "return", "x", "-", "tensor_resample", "(", "\n", "tensor_resample", "(", "x", ",", "[", "x", ".", "shape", "[", "2", "]", "//", "2", ",", "x", ".", "shape", "[", "3", "]", "//", "2", "]", ")", ",", "\n", "[", "x", ".", "shape", "[", "2", "]", ",", "x", ".", "shape", "[", "3", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.lapstyle_predictor.make_laplace_pyramid": [[86, 99], ["range", "pyramid.append", "pyramid.append", "lapstyle_predictor.tensor_resample", "lapstyle_predictor.laplacian", "max", "max"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.tensor_resample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.laplacian"], ["", "def", "make_laplace_pyramid", "(", "x", ",", "levels", ")", ":", "\n", "    ", "\"\"\"\n    Make Laplacian Pyramid\n    \"\"\"", "\n", "pyramid", "=", "[", "]", "\n", "current", "=", "x", "\n", "for", "i", "in", "range", "(", "levels", ")", ":", "\n", "        ", "pyramid", ".", "append", "(", "laplacian", "(", "current", ")", ")", "\n", "current", "=", "tensor_resample", "(", "\n", "current", ",", "\n", "(", "max", "(", "current", ".", "shape", "[", "2", "]", "//", "2", ",", "1", ")", ",", "max", "(", "current", ".", "shape", "[", "3", "]", "//", "2", ",", "1", ")", ")", ")", "\n", "", "pyramid", ".", "append", "(", "current", ")", "\n", "return", "pyramid", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.lapstyle_predictor.fold_laplace_pyramid": [[101, 110], ["range", "len", "lapstyle_predictor.tensor_resample"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.tensor_resample"], ["", "def", "fold_laplace_pyramid", "(", "pyramid", ")", ":", "\n", "    ", "\"\"\"\n    Fold Laplacian Pyramid\n    \"\"\"", "\n", "current", "=", "pyramid", "[", "-", "1", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "pyramid", ")", "-", "2", ",", "-", "1", ",", "-", "1", ")", ":", "# iterate from len-2 to 0", "\n", "        ", "up_h", ",", "up_w", "=", "pyramid", "[", "i", "]", ".", "shape", "[", "2", "]", ",", "pyramid", "[", "i", "]", ".", "shape", "[", "3", "]", "\n", "current", "=", "pyramid", "[", "i", "]", "+", "tensor_resample", "(", "current", ",", "(", "up_h", ",", "up_w", ")", ")", "\n", "", "return", "current", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.photo2cartoon_predictor.Photo2CartoonPredictor.__init__": [[34, 49], ["ppgan.models.generators.ResnetUGATITP2CGenerator", "paddle.load", "photo2cartoon_predictor.Photo2CartoonPredictor.genA2B.set_state_dict", "photo2cartoon_predictor.Photo2CartoonPredictor.genA2B.eval", "ppgan.faceutils.face_segmentation.FaceSeg", "os.path.exists", "os.makedirs", "os.path.abspath", "paddle.utils.download.get_path_from_url", "os.path.dirname"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url"], ["    ", "def", "__init__", "(", "self", ",", "output_path", "=", "'output'", ",", "weight_path", "=", "None", ")", ":", "\n", "        ", "self", ".", "output_path", "=", "output_path", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "output_path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "self", ".", "output_path", ")", "\n", "\n", "", "if", "weight_path", "is", "None", ":", "\n", "            ", "cur_path", "=", "os", ".", "path", ".", "abspath", "(", "os", ".", "path", ".", "dirname", "(", "__file__", ")", ")", "\n", "weight_path", "=", "get_path_from_url", "(", "P2C_WEIGHT_URL", ",", "cur_path", ")", "\n", "\n", "", "self", ".", "genA2B", "=", "ResnetUGATITP2CGenerator", "(", ")", "\n", "params", "=", "paddle", ".", "load", "(", "weight_path", ")", "\n", "self", ".", "genA2B", ".", "set_state_dict", "(", "params", ")", "\n", "self", ".", "genA2B", ".", "eval", "(", ")", "\n", "\n", "self", ".", "faceseg", "=", "FaceSeg", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.photo2cartoon_predictor.Photo2CartoonPredictor.run": [[50, 78], ["PIL.Image.open", "ppgan.faceutils.dlibutils.align_crop", "photo2cartoon_predictor.Photo2CartoonPredictor.faceseg", "cv2.resize", "numpy.transpose().astype", "paddle.to_tensor", "numpy.transpose", "os.path.join", "cv2.imwrite", "os.path.join", "cv2.imwrite", "print", "paddle.no_grad", "numpy.transpose.numpy", "cv2.cvtColor", "cv2.cvtColor", "cv2.resize", "numpy.transpose", "photo2cartoon_predictor.Photo2CartoonPredictor.genA2B"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.dlibutils.face_align.align_crop", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize"], ["", "def", "run", "(", "self", ",", "image_path", ")", ":", "\n", "        ", "image", "=", "Image", ".", "open", "(", "image_path", ")", "\n", "face_image", "=", "align_crop", "(", "image", ")", "\n", "face_mask", "=", "self", ".", "faceseg", "(", "face_image", ")", "\n", "\n", "face_image", "=", "cv2", ".", "resize", "(", "face_image", ",", "(", "256", ",", "256", ")", ",", "interpolation", "=", "cv2", ".", "INTER_AREA", ")", "\n", "face_mask", "=", "cv2", ".", "resize", "(", "face_mask", ",", "(", "256", ",", "256", ")", ")", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", "/", "255.", "\n", "face", "=", "(", "face_image", "*", "face_mask", "+", "(", "1", "-", "face_mask", ")", "*", "255", ")", "/", "127.5", "-", "1", "\n", "\n", "face", "=", "np", ".", "transpose", "(", "face", "[", "np", ".", "newaxis", ",", ":", ",", ":", ",", ":", "]", ",", "(", "0", ",", "3", ",", "1", ",", "2", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "face", "=", "paddle", ".", "to_tensor", "(", "face", ")", "\n", "\n", "# inference", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "            ", "cartoon", "=", "self", ".", "genA2B", "(", "face", ")", "[", "0", "]", "[", "0", "]", "\n", "\n", "# post-process", "\n", "", "cartoon", "=", "np", ".", "transpose", "(", "cartoon", ".", "numpy", "(", ")", ",", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "cartoon", "=", "(", "cartoon", "+", "1", ")", "*", "127.5", "\n", "cartoon", "=", "(", "cartoon", "*", "face_mask", "+", "(", "1", "-", "face_mask", ")", "*", "255", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n", "pnoto_save_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "output_path", ",", "'p2c_photo.png'", ")", "\n", "cv2", ".", "imwrite", "(", "pnoto_save_path", ",", "cv2", ".", "cvtColor", "(", "face_image", ",", "cv2", ".", "COLOR_RGB2BGR", ")", ")", "\n", "cartoon_save_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "output_path", ",", "'p2c_cartoon.png'", ")", "\n", "cv2", ".", "imwrite", "(", "cartoon_save_path", ",", "cv2", ".", "cvtColor", "(", "cartoon", ",", "cv2", ".", "COLOR_RGB2BGR", ")", ")", "\n", "\n", "print", "(", "\"Cartoon image has been saved at '{}'.\"", ".", "format", "(", "cartoon_save_path", ")", ")", "\n", "return", "cartoon", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.SinGANPredictor.__init__": [[63, 100], ["paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "checkpoint[].item", "checkpoint[].tolist", "checkpoint[].item", "checkpoint[].item", "checkpoint[].item", "checkpoint[].item", "checkpoint[].item", "ppgan.models.generators.SinGANGenerator", "singan_predictor.SinGANPredictor.generator.set_state_dict", "singan_predictor.SinGANPredictor.generator.eval", "singan_predictor.SinGANPredictor.generator.scale_factor.item", "paddle.seed", "paddle.seed", "paddle.seed", "paddle.seed", "paddle.seed", "paddle.seed", "paddle.seed", "paddle.seed", "paddle.seed", "pretrained_weights_url.keys", "ppgan.utils.download.get_path_from_url", "ValueError"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url"], ["    ", "def", "__init__", "(", "self", ",", "\n", "output_path", "=", "'output_dir'", ",", "\n", "weight_path", "=", "None", ",", "\n", "pretrained_model", "=", "None", ",", "\n", "seed", "=", "None", ")", ":", "\n", "        ", "self", ".", "output_path", "=", "output_path", "\n", "if", "weight_path", "is", "None", ":", "\n", "            ", "if", "pretrained_model", "in", "pretrained_weights_url", ".", "keys", "(", ")", ":", "\n", "                ", "weight_path", "=", "get_path_from_url", "(", "\n", "pretrained_weights_url", "[", "pretrained_model", "]", ")", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "\n", "'Predictor need a weight path or a pretrained model.'", ")", "\n", "", "", "checkpoint", "=", "paddle", ".", "load", "(", "weight_path", ")", "\n", "\n", "self", ".", "scale_num", "=", "checkpoint", "[", "'scale_num'", "]", ".", "item", "(", ")", "\n", "self", ".", "coarsest_shape", "=", "checkpoint", "[", "'coarsest_shape'", "]", ".", "tolist", "(", ")", "\n", "self", ".", "nfc_init", "=", "checkpoint", "[", "'nfc_init'", "]", ".", "item", "(", ")", "\n", "self", ".", "min_nfc_init", "=", "checkpoint", "[", "'min_nfc_init'", "]", ".", "item", "(", ")", "\n", "self", ".", "num_layers", "=", "checkpoint", "[", "'num_layers'", "]", ".", "item", "(", ")", "\n", "self", ".", "ker_size", "=", "checkpoint", "[", "'ker_size'", "]", ".", "item", "(", ")", "\n", "self", ".", "noise_zero_pad", "=", "checkpoint", "[", "'noise_zero_pad'", "]", ".", "item", "(", ")", "\n", "self", ".", "generator", "=", "SinGANGenerator", "(", "self", ".", "scale_num", ",", "\n", "self", ".", "coarsest_shape", ",", "\n", "self", ".", "nfc_init", ",", "\n", "self", ".", "min_nfc_init", ",", "\n", "3", ",", "\n", "self", ".", "num_layers", ",", "\n", "self", ".", "ker_size", ",", "\n", "self", ".", "noise_zero_pad", ")", "\n", "self", ".", "generator", ".", "set_state_dict", "(", "checkpoint", ")", "\n", "self", ".", "generator", ".", "eval", "(", ")", "\n", "self", ".", "scale_factor", "=", "self", ".", "generator", ".", "scale_factor", ".", "item", "(", ")", "\n", "self", ".", "niose_pad_size", "=", "0", "if", "self", ".", "noise_zero_pad", "else", "self", ".", "generator", ".", "_pad_size", "\n", "if", "seed", "is", "not", "None", ":", "\n", "            ", "paddle", ".", "seed", "(", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.SinGANPredictor.noise_like": [[101, 103], ["paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "models.singan_model.pad_shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.singan_model.pad_shape"], ["", "", "def", "noise_like", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "paddle", ".", "randn", "(", "pad_shape", "(", "x", ".", "shape", ",", "self", ".", "niose_pad_size", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.SinGANPredictor.run": [[104, 224], ["os.makedirs", "ValueError", "ValueError", "ValueError", "singan_predictor.imgpath2tensor", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "range", "singan_predictor.SinGANPredictor.generator", "imageio.mimsave", "ppgan.utils.visual.save_image", "singan_predictor.imgpath2tensor", "math.ceil", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "singan_predictor.SinGANPredictor.generator", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "singan_predictor.SinGANPredictor.noise_like", "range", "ppgan.utils.visual.tensor2img", "os.path.join", "cv2.imread", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "ppgan.utils.visual.tensor2img", "os.path.join", "math.log", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "range", "len", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "range", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "ppgan.utils.visual.make_grid.chunk", "singan_predictor.dilate_mask", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "int", "int", "singan_predictor.SinGANPredictor.noise_like", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "len", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "models.singan_model.pad_shape", "ppgan.utils.visual.make_grid"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.imgpath2tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.save_image", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.imgpath2tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.SinGANPredictor.noise_like", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.tensor2img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.imread", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.tensor2img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.dilate_mask", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.SinGANPredictor.noise_like", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.singan_model.pad_shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.make_grid"], ["", "def", "run", "(", "self", ",", "\n", "mode", "=", "'random_sample'", ",", "\n", "generate_start_scale", "=", "0", ",", "\n", "scale_h", "=", "1.0", ",", "\n", "scale_v", "=", "1.0", ",", "\n", "ref_image", "=", "None", ",", "\n", "mask_image", "=", "None", ",", "\n", "sr_factor", "=", "4", ",", "\n", "animation_alpha", "=", "0.9", ",", "\n", "animation_beta", "=", "0.9", ",", "\n", "animation_frames", "=", "20", ",", "\n", "animation_duration", "=", "0.1", ",", "\n", "n_row", "=", "5", ",", "\n", "n_col", "=", "3", ")", ":", "\n", "\n", "# check config", "\n", "        ", "if", "mode", "not", "in", "[", "'random_sample'", ",", "\n", "'sr'", ",", "'animation'", ",", "\n", "'harmonization'", ",", "\n", "'editing'", ",", "'paint2image'", "]", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'Only random_sample, sr, animation, harmonization, \\\n                 editing and paint2image is implemented.'", ")", "\n", "", "if", "mode", "in", "[", "'sr'", ",", "'harmonization'", ",", "'editing'", ",", "'paint2image'", "]", "and", "ref_image", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'When mode is sr, harmonization, editing, or \\\n                 paint2image, a reference image must be privided.'", ")", "\n", "", "if", "mode", "in", "[", "'harmonization'", ",", "'editing'", "]", "and", "mask_image", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'When mode is harmonization or editing, \\\n                 a mask image must be privided.'", ")", "\n", "\n", "", "if", "mode", "==", "'animation'", ":", "\n", "            ", "batch_size", "=", "animation_frames", "\n", "", "elif", "mode", "==", "'random_sample'", ":", "\n", "            ", "batch_size", "=", "n_row", "*", "n_col", "\n", "", "else", ":", "\n", "            ", "batch_size", "=", "1", "\n", "\n", "# prepare input", "\n", "", "if", "mode", "==", "'harmonization'", "or", "mode", "==", "'editing'", "or", "mode", "==", "'paint2image'", ":", "\n", "            ", "ref", "=", "imgpath2tensor", "(", "ref_image", ")", "\n", "x_init", "=", "F", ".", "interpolate", "(", "\n", "ref", ",", "None", ",", "\n", "self", ".", "scale_factor", "**", "(", "self", ".", "scale_num", "-", "generate_start_scale", ")", ",", "\n", "'bicubic'", ")", "\n", "x_init", "=", "F", ".", "interpolate", "(", "\n", "x_init", ",", "None", ",", "1", "/", "self", ".", "scale_factor", ",", "'bicubic'", ")", "\n", "", "elif", "mode", "==", "'sr'", ":", "\n", "            ", "ref", "=", "imgpath2tensor", "(", "ref_image", ")", "\n", "sr_iters", "=", "math", ".", "ceil", "(", "math", ".", "log", "(", "sr_factor", ",", "1", "/", "self", ".", "scale_factor", ")", ")", "\n", "sr_scale_factor", "=", "sr_factor", "**", "(", "1", "/", "sr_factor", ")", "\n", "x_init", "=", "F", ".", "interpolate", "(", "ref", ",", "None", ",", "sr_scale_factor", ",", "'bicubic'", ")", "\n", "", "else", ":", "\n", "            ", "x_init", "=", "paddle", ".", "zeros", "(", "[", "\n", "batch_size", ",", "\n", "self", ".", "coarsest_shape", "[", "1", "]", ",", "\n", "int", "(", "self", ".", "coarsest_shape", "[", "2", "]", "*", "scale_v", ")", ",", "\n", "int", "(", "self", ".", "coarsest_shape", "[", "3", "]", "*", "scale_h", ")", "]", ")", "\n", "\n", "# forward", "\n", "", "if", "mode", "==", "'sr'", ":", "\n", "            ", "for", "_", "in", "range", "(", "sr_iters", ")", ":", "\n", "                ", "out", "=", "self", ".", "generator", "(", "[", "self", ".", "noise_like", "(", "x_init", ")", "]", ",", "x_init", ",", "-", "1", ",", "-", "1", ")", "\n", "x_init", "=", "F", ".", "interpolate", "(", "out", ",", "None", ",", "sr_scale_factor", ",", "'bicubic'", ")", "\n", "", "", "else", ":", "\n", "            ", "z_pyramid", "=", "[", "\n", "self", ".", "noise_like", "(", "\n", "F", ".", "interpolate", "(", "\n", "x_init", ",", "None", ",", "1", "/", "self", ".", "scale_factor", "**", "i", ")", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "scale_num", "-", "generate_start_scale", ")", "]", "\n", "\n", "if", "mode", "==", "'animation'", ":", "\n", "                ", "a", "=", "animation_alpha", "\n", "b", "=", "animation_beta", "\n", "for", "i", "in", "range", "(", "len", "(", "z_pyramid", ")", ")", ":", "\n", "                    ", "z", "=", "paddle", ".", "chunk", "(", "z_pyramid", "[", "i", "]", ",", "batch_size", ")", "\n", "if", "i", "==", "0", "and", "generate_start_scale", "==", "0", ":", "\n", "                        ", "z_0", "=", "F", ".", "interpolate", "(", "\n", "self", ".", "generator", ".", "z_fixed", ",", "\n", "pad_shape", "(", "x_init", ".", "shape", "[", "-", "2", ":", "]", ",", "self", ".", "niose_pad_size", ")", ",", "\n", "None", ",", "'bicubic'", ")", "\n", "", "else", ":", "\n", "                        ", "z_0", "=", "0", "\n", "", "z_1", "=", "z_0", "\n", "z_2", "=", "0.95", "*", "z_1", "+", "0.05", "*", "z", "[", "0", "]", "\n", "for", "j", "in", "range", "(", "len", "(", "z", ")", ")", ":", "\n", "                        ", "z", "[", "j", "]", "=", "a", "*", "z_0", "+", "(", "1", "-", "a", ")", "*", "(", "z_2", "+", "b", "*", "(", "z_2", "-", "z_1", ")", "+", "(", "1", "-", "b", ")", "*", "z", "[", "j", "]", ")", "\n", "z_1", "=", "z_2", "\n", "z_2", "=", "z", "[", "j", "]", "\n", "", "z", "=", "paddle", ".", "concat", "(", "z", ")", "\n", "z_pyramid", "[", "i", "]", "=", "z", "\n", "\n", "", "", "out", "=", "self", ".", "generator", "(", "z_pyramid", ",", "x_init", ",", "self", ".", "scale_num", "-", "1", ",", "generate_start_scale", ")", "\n", "\n", "# postprocess and save    ", "\n", "", "os", ".", "makedirs", "(", "self", ".", "output_path", ",", "exist_ok", "=", "True", ")", "\n", "if", "mode", "==", "'animation'", ":", "\n", "            ", "frames", "=", "[", "tensor2img", "(", "x", ")", "for", "x", "in", "out", ".", "chunk", "(", "animation_frames", ")", "]", "\n", "imageio", ".", "mimsave", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "output_path", ",", "'animation.gif'", ")", ",", "\n", "frames", ",", "'GIF'", ",", "duration", "=", "animation_duration", ")", "\n", "", "else", ":", "\n", "            ", "if", "mode", "==", "'harmonization'", "or", "mode", "==", "'editing'", ":", "\n", "                ", "mask", "=", "cv2", ".", "imread", "(", "mask_image", ",", "cv2", ".", "IMREAD_GRAYSCALE", ")", "\n", "mask", "=", "paddle", ".", "to_tensor", "(", "dilate_mask", "(", "mask", ",", "mode", ")", ",", "'float32'", ")", "\n", "out", "=", "F", ".", "interpolate", "(", "out", ",", "mask", ".", "shape", ",", "None", ",", "'bicubic'", ")", "\n", "out", "=", "(", "1", "-", "mask", ")", "*", "ref", "+", "mask", "*", "out", "\n", "", "elif", "mode", "==", "'sr'", ":", "\n", "                ", "out", "=", "F", ".", "interpolate", "(", "\n", "out", ",", "\n", "[", "ref", ".", "shape", "[", "-", "2", "]", "*", "sr_factor", ",", "ref", ".", "shape", "[", "-", "1", "]", "*", "sr_factor", "]", ",", "\n", "None", ",", "'bicubic'", ")", "\n", "", "elif", "mode", "==", "'paint2image'", ":", "\n", "                ", "out", "=", "F", ".", "interpolate", "(", "out", ",", "ref", ".", "shape", "[", "-", "2", ":", "]", ",", "None", ",", "'bicubic'", ")", "\n", "", "elif", "mode", "==", "'random_sample'", ":", "\n", "                ", "out", "=", "make_grid", "(", "out", ",", "n_row", ")", "\n", "\n", "", "save_image", "(", "tensor2img", "(", "out", ")", ",", "os", ".", "path", ".", "join", "(", "self", ".", "output_path", ",", "mode", "+", "'.png'", ")", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.imread": [[40, 44], ["cv2.cvtColor", "cv2.imread"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.imread"], ["def", "imread", "(", "path", ")", ":", "\n", "    ", "return", "cv2", ".", "cvtColor", "(", "\n", "cv2", ".", "imread", "(", "\n", "path", ",", "cv2", ".", "IMREAD_COLOR", ")", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.imgpath2tensor": [[45, 50], ["paddle.to_tensor().unsqueeze", "paddle.to_tensor().unsqueeze", "paddle.to_tensor().unsqueeze", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.Compose", "singan_predictor.imread", "paddle.Transpose", "paddle.Normalize"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.imread"], ["", "def", "imgpath2tensor", "(", "path", ")", ":", "\n", "    ", "return", "paddle", ".", "to_tensor", "(", "T", ".", "Compose", "(", "[", "\n", "T", ".", "Transpose", "(", ")", ",", "\n", "T", ".", "Normalize", "(", "127.5", ",", "127.5", ")", "\n", "]", ")", "(", "imread", "(", "path", ")", ")", ")", ".", "unsqueeze", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.dilate_mask": [[51, 61], ["skimage.morphology.binary_dilation", "skimage.filters.gaussian", "skimage.morphology.disk", "skimage.morphology.disk", "NotImplementedError"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.ssim.gaussian"], ["", "def", "dilate_mask", "(", "mask", ",", "mode", ")", ":", "\n", "    ", "if", "mode", "==", "\"harmonization\"", ":", "\n", "        ", "element", "=", "skimage", ".", "morphology", ".", "disk", "(", "radius", "=", "7", ")", "\n", "", "elif", "mode", "==", "\"editing\"", ":", "\n", "        ", "element", "=", "skimage", ".", "morphology", ".", "disk", "(", "radius", "=", "20", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'mode %s is not implemented'", "%", "mode", ")", "\n", "", "mask", "=", "skimage", ".", "morphology", ".", "binary_dilation", "(", "mask", ",", "selem", "=", "element", ")", "\n", "mask", "=", "skimage", ".", "filters", ".", "gaussian", "(", "mask", ",", "sigma", "=", "5", ")", "\n", "return", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.gpen_predictor.GPENPredictor.__init__": [[76, 115], ["warnings.filterwarnings", "ppgan.models.generators.GPEN", "gpen_predictor.GPENPredictor.generator.set_state_dict", "gpen_predictor.GPENPredictor.generator.eval", "paddle.load", "paddle.seed", "random.seed", "numpy.random.seed", "model_cfgs.keys", "ppgan.utils.download.get_path_from_url", "model_cfgs[].get", "model_cfgs[].get", "model_cfgs[].get", "model_cfgs[].get", "model_cfgs[].get", "paddle.load", "ValueError"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["    ", "def", "__init__", "(", "self", ",", "\n", "output_path", "=", "'output_dir'", ",", "\n", "weight_path", "=", "None", ",", "\n", "model_type", "=", "None", ",", "\n", "seed", "=", "100", ",", "\n", "size", "=", "256", ",", "\n", "style_dim", "=", "512", ",", "\n", "n_mlp", "=", "8", ",", "\n", "channel_multiplier", "=", "1", ",", "\n", "narrow", "=", "0.5", ")", ":", "\n", "        ", "self", ".", "output_path", "=", "output_path", "\n", "self", ".", "size", "=", "size", "\n", "if", "weight_path", "is", "None", ":", "\n", "            ", "if", "model_type", "in", "model_cfgs", ".", "keys", "(", ")", ":", "\n", "                ", "weight_path", "=", "get_path_from_url", "(", "\n", "model_cfgs", "[", "model_type", "]", "[", "'model_urls'", "]", ")", "\n", "size", "=", "model_cfgs", "[", "model_type", "]", ".", "get", "(", "'size'", ",", "size", ")", "\n", "style_dim", "=", "model_cfgs", "[", "model_type", "]", ".", "get", "(", "'style_dim'", ",", "style_dim", ")", "\n", "n_mlp", "=", "model_cfgs", "[", "model_type", "]", ".", "get", "(", "'n_mlp'", ",", "n_mlp", ")", "\n", "channel_multiplier", "=", "model_cfgs", "[", "model_type", "]", ".", "get", "(", "\n", "'channel_multiplier'", ",", "channel_multiplier", ")", "\n", "narrow", "=", "model_cfgs", "[", "model_type", "]", ".", "get", "(", "'narrow'", ",", "narrow", ")", "\n", "checkpoint", "=", "paddle", ".", "load", "(", "weight_path", ")", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "\n", "'Predictor need a weight path or a pretrained model type'", ")", "\n", "", "", "else", ":", "\n", "            ", "checkpoint", "=", "paddle", ".", "load", "(", "weight_path", ")", "\n", "\n", "", "warnings", ".", "filterwarnings", "(", "\"always\"", ")", "\n", "self", ".", "generator", "=", "GPEN", "(", "size", ",", "style_dim", ",", "n_mlp", ",", "channel_multiplier", ",", "\n", "narrow", ")", "\n", "self", ".", "generator", ".", "set_state_dict", "(", "checkpoint", ")", "\n", "self", ".", "generator", ".", "eval", "(", ")", "\n", "\n", "if", "seed", "is", "not", "None", ":", "\n", "            ", "paddle", ".", "seed", "(", "seed", ")", "\n", "random", ".", "seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.gpen_predictor.GPENPredictor.run": [[116, 141], ["os.makedirs", "gpen_predictor.data_loader", "paddle.to_tensor", "paddle.to_tensor", "ppgan.metrics.fid.FID", "input_tensor.transpose.transpose.transpose", "target_tensor.transpose.transpose.transpose", "output.transpose.transpose.transpose", "paddle.concat", "cv2.cvtColor", "cv2.imwrite", "print", "print", "paddle.no_grad", "gpen_predictor.GPENPredictor.generator", "gpen_predictor.psnr", "ppgan.metrics.fid.FID.update", "ppgan.metrics.fid.FID.accumulate", "paddle.concat.numpy"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.gpen_predictor.data_loader", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.gpen_predictor.psnr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid.FID.accumulate"], ["", "", "def", "run", "(", "self", ",", "img_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "self", ".", "output_path", ",", "exist_ok", "=", "True", ")", "\n", "input_array", ",", "target_array", "=", "data_loader", "(", "img_path", ",", "self", ".", "size", ")", "\n", "input_tensor", "=", "paddle", ".", "to_tensor", "(", "input_array", ")", "\n", "target_tensor", "=", "paddle", ".", "to_tensor", "(", "target_array", ")", "\n", "\n", "FID_model", "=", "FID", "(", "use_GPU", "=", "True", ")", "\n", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "            ", "output", ",", "_", "=", "self", ".", "generator", "(", "input_tensor", ")", "\n", "psnr_score", "=", "psnr", "(", "target_tensor", ",", "output", ")", "\n", "FID_model", ".", "update", "(", "output", ",", "target_tensor", ")", "\n", "fid_score", "=", "FID_model", ".", "accumulate", "(", ")", "\n", "\n", "", "input_tensor", "=", "input_tensor", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "\n", "target_tensor", "=", "target_tensor", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "\n", "output", "=", "output", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "\n", "sample_result", "=", "paddle", ".", "concat", "(", "\n", "(", "input_tensor", "[", "0", "]", ",", "output", "[", "0", "]", ",", "target_tensor", "[", "0", "]", ")", ",", "1", ")", "\n", "sample", "=", "cv2", ".", "cvtColor", "(", "(", "sample_result", ".", "numpy", "(", ")", "+", "1", ")", "/", "2", "*", "255", ",", "\n", "cv2", ".", "COLOR_RGB2BGR", ")", "\n", "file_name", "=", "self", ".", "output_path", "+", "'/gpen_predict.png'", "\n", "cv2", ".", "imwrite", "(", "file_name", ",", "sample", ")", "\n", "print", "(", "f\"result saved in : {file_name}\"", ")", "\n", "print", "(", "f\"\\tFID: {fid_score}\\n\\tPSNR:{psnr_score}\"", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.gpen_predictor.psnr": [[44, 52], ["paddle.clip", "paddle.clip", "numpy.asarray", "math.sqrt", "numpy.mean", "math.log10"], "function", ["None"], ["def", "psnr", "(", "pred", ",", "gt", ")", ":", "\n", "    ", "pred", "=", "paddle", ".", "clip", "(", "pred", ",", "min", "=", "0", ",", "max", "=", "1", ")", "\n", "gt", "=", "paddle", ".", "clip", "(", "gt", ",", "min", "=", "0", ",", "max", "=", "1", ")", "\n", "imdff", "=", "np", ".", "asarray", "(", "pred", "-", "gt", ")", "\n", "rmse", "=", "math", ".", "sqrt", "(", "np", ".", "mean", "(", "imdff", "**", "2", ")", ")", "\n", "if", "rmse", "==", "0", ":", "\n", "        ", "return", "100", "\n", "", "return", "20", "*", "math", ".", "log10", "(", "1.0", "/", "rmse", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.gpen_predictor.data_loader": [[54, 72], ["ppgan.datasets.gpen_dataset.GFPGAN_degradation", "cv2.imread", "cv2.resize", "ppgan.datasets.gpen_dataset.GFPGAN_degradation.degrade_process", "img_gt.transpose().flip().unsqueeze.transpose().flip().unsqueeze", "img_lq.transpose().flip().unsqueeze.transpose().flip().unsqueeze", "img_gt.transpose().flip().unsqueeze.astype", "numpy.array().astype", "numpy.array().astype", "paddle.to_tensor", "paddle.to_tensor", "img_gt.transpose().flip().unsqueeze.transpose().flip", "img_lq.transpose().flip().unsqueeze.transpose().flip", "numpy.array", "numpy.array", "img_gt.transpose().flip().unsqueeze.transpose", "img_lq.transpose().flip().unsqueeze.transpose"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.imread", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.gpen_dataset.GFPGAN_degradation.degrade_process"], ["", "def", "data_loader", "(", "path", ",", "size", "=", "256", ")", ":", "\n", "    ", "degrader", "=", "GFPGAN_degradation", "(", ")", "\n", "\n", "img_gt", "=", "cv2", ".", "imread", "(", "path", ",", "cv2", ".", "IMREAD_COLOR", ")", "\n", "\n", "img_gt", "=", "cv2", ".", "resize", "(", "img_gt", ",", "(", "size", ",", "size", ")", ",", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ")", "\n", "\n", "img_gt", "=", "img_gt", ".", "astype", "(", "np", ".", "float32", ")", "/", "255.", "\n", "img_gt", ",", "img_lq", "=", "degrader", ".", "degrade_process", "(", "img_gt", ")", "\n", "\n", "img_gt", "=", "(", "paddle", ".", "to_tensor", "(", "img_gt", ")", "-", "0.5", ")", "/", "0.5", "\n", "img_lq", "=", "(", "paddle", ".", "to_tensor", "(", "img_lq", ")", "-", "0.5", ")", "/", "0.5", "\n", "\n", "img_gt", "=", "img_gt", ".", "transpose", "(", "[", "2", ",", "0", ",", "1", "]", ")", ".", "flip", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", "\n", "img_lq", "=", "img_lq", ".", "transpose", "(", "[", "2", ",", "0", ",", "1", "]", ")", ".", "flip", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "return", "np", ".", "array", "(", "img_lq", ")", ".", "astype", "(", "'float32'", ")", ",", "np", ".", "array", "(", "img_gt", ")", ".", "astype", "(", "\n", "'float32'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.base_predictor.BasePredictor.__init__": [[23, 25], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.base_predictor.BasePredictor.build_inference_model": [[26, 45], ["paddle.in_dynamic_mode", "paddle.get_device", "paddle.static.Executor", "os.listdir", "paddle.static.load_inference_model", "file_name.find", "file_name.find"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.starganv2_dataset.listdir"], ["", "def", "build_inference_model", "(", "self", ")", ":", "\n", "        ", "if", "paddle", ".", "in_dynamic_mode", "(", ")", ":", "\n", "# todo self.model = build_model(self.cfg)", "\n", "            ", "pass", "\n", "", "else", ":", "\n", "            ", "place", "=", "paddle", ".", "get_device", "(", ")", "\n", "self", ".", "exe", "=", "paddle", ".", "static", ".", "Executor", "(", "place", ")", "\n", "file_names", "=", "os", ".", "listdir", "(", "self", ".", "weight_path", ")", "\n", "for", "file_name", "in", "file_names", ":", "\n", "                ", "if", "file_name", ".", "find", "(", "'model'", ")", ">", "-", "1", ":", "\n", "                    ", "model_file", "=", "file_name", "\n", "", "elif", "file_name", ".", "find", "(", "'param'", ")", ">", "-", "1", ":", "\n", "                    ", "param_file", "=", "file_name", "\n", "\n", "", "", "self", ".", "program", ",", "self", ".", "feed_names", ",", "self", ".", "fetch_targets", "=", "paddle", ".", "static", ".", "load_inference_model", "(", "\n", "self", ".", "weight_path", ",", "\n", "executor", "=", "self", ".", "exe", ",", "\n", "model_filename", "=", "model_file", ",", "\n", "params_filename", "=", "param_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.base_predictor.BasePredictor.base_forward": [[46, 64], ["paddle.in_dynamic_mode", "base_predictor.BasePredictor.model", "isinstance", "base_predictor.BasePredictor.exe.run", "isinstance", "enumerate"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.midas_predictor.MiDaSPredictor.run"], ["", "", "def", "base_forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "if", "paddle", ".", "in_dynamic_mode", "(", ")", ":", "\n", "            ", "out", "=", "self", ".", "model", "(", "inputs", ")", "\n", "", "else", ":", "\n", "            ", "feed_dict", "=", "{", "}", "\n", "if", "isinstance", "(", "inputs", ",", "dict", ")", ":", "\n", "                ", "feed_dict", "=", "inputs", "\n", "", "elif", "isinstance", "(", "inputs", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "                ", "for", "i", ",", "feed_name", "in", "enumerate", "(", "self", ".", "feed_names", ")", ":", "\n", "                    ", "feed_dict", "[", "feed_name", "]", "=", "inputs", "[", "i", "]", "\n", "", "", "else", ":", "\n", "                ", "feed_dict", "[", "self", ".", "feed_names", "[", "0", "]", "]", "=", "inputs", "\n", "\n", "", "out", "=", "self", ".", "exe", ".", "run", "(", "self", ".", "program", ",", "\n", "fetch_list", "=", "self", ".", "fetch_targets", ",", "\n", "feed", "=", "feed_dict", ")", "\n", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.base_predictor.BasePredictor.is_image": [[65, 79], ["isinstance", "isinstance", "PIL.Image.open", "os.path.isfile", "ValueError"], "methods", ["None"], ["", "def", "is_image", "(", "self", ",", "input", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "if", "isinstance", "(", "input", ",", "(", "np", ".", "ndarray", ",", "Image", ".", "Image", ")", ")", ":", "\n", "                ", "return", "True", "\n", "", "elif", "isinstance", "(", "input", ",", "str", ")", ":", "\n", "                ", "if", "not", "os", ".", "path", ".", "isfile", "(", "input", ")", ":", "\n", "                    ", "raise", "ValueError", "(", "'input must be a file'", ")", "\n", "", "img", "=", "Image", ".", "open", "(", "input", ")", "\n", "_", "=", "img", ".", "size", "\n", "return", "True", "\n", "", "else", ":", "\n", "                ", "return", "False", "\n", "", "", "except", ":", "\n", "            ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.base_predictor.BasePredictor.run": [[80, 82], ["None"], "methods", ["None"], ["", "", "def", "run", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.first_order_predictor.FirstOrderPredictor.__init__": [[39, 125], ["first_order_predictor.FirstOrderPredictor.load_checkpoints", "isinstance", "isinstance", "ppgan.utils.download.get_path_from_url", "os.path.exists", "os.makedirs", "FaceEnhancement", "open", "yaml.load"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.midas_predictor.MiDaSPredictor.load_checkpoints", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["    ", "def", "__init__", "(", "self", ",", "\n", "output", "=", "'output'", ",", "\n", "weight_path", "=", "None", ",", "\n", "config", "=", "None", ",", "\n", "relative", "=", "False", ",", "\n", "adapt_scale", "=", "False", ",", "\n", "find_best_frame", "=", "False", ",", "\n", "best_frame", "=", "None", ",", "\n", "ratio", "=", "1.0", ",", "\n", "filename", "=", "'result.mp4'", ",", "\n", "face_detector", "=", "'sfd'", ",", "\n", "multi_person", "=", "False", ",", "\n", "image_size", "=", "256", ",", "\n", "face_enhancement", "=", "False", ",", "\n", "batch_size", "=", "1", ",", "\n", "mobile_net", "=", "False", ",", "\n", "slice_size", "=", "0", ")", ":", "\n", "        ", "if", "config", "is", "not", "None", "and", "isinstance", "(", "config", ",", "str", ")", ":", "\n", "            ", "with", "open", "(", "config", ")", "as", "f", ":", "\n", "                ", "self", ".", "cfg", "=", "yaml", ".", "load", "(", "f", ",", "Loader", "=", "yaml", ".", "SafeLoader", ")", "\n", "", "", "elif", "isinstance", "(", "config", ",", "dict", ")", ":", "\n", "            ", "self", ".", "cfg", "=", "config", "\n", "", "elif", "config", "is", "None", ":", "\n", "            ", "self", ".", "cfg", "=", "{", "\n", "'model'", ":", "{", "\n", "'common_params'", ":", "{", "\n", "'num_kp'", ":", "10", ",", "\n", "'num_channels'", ":", "3", ",", "\n", "'estimate_jacobian'", ":", "True", "\n", "}", ",", "\n", "'generator'", ":", "{", "\n", "'kp_detector_cfg'", ":", "{", "\n", "'temperature'", ":", "0.1", ",", "\n", "'block_expansion'", ":", "32", ",", "\n", "'max_features'", ":", "1024", ",", "\n", "'scale_factor'", ":", "0.25", ",", "\n", "'num_blocks'", ":", "5", "\n", "}", ",", "\n", "'generator_cfg'", ":", "{", "\n", "'block_expansion'", ":", "64", ",", "\n", "'max_features'", ":", "512", ",", "\n", "'num_down_blocks'", ":", "2", ",", "\n", "'num_bottleneck_blocks'", ":", "6", ",", "\n", "'estimate_occlusion_map'", ":", "True", ",", "\n", "'dense_motion_params'", ":", "{", "\n", "'block_expansion'", ":", "64", ",", "\n", "'max_features'", ":", "1024", ",", "\n", "'num_blocks'", ":", "5", ",", "\n", "'scale_factor'", ":", "0.25", "\n", "}", "\n", "}", "\n", "}", "\n", "}", "\n", "}", "\n", "", "self", ".", "image_size", "=", "image_size", "\n", "if", "weight_path", "is", "None", ":", "\n", "            ", "if", "mobile_net", ":", "\n", "                ", "vox_cpk_weight_url", "=", "'https://paddlegan.bj.bcebos.com/applications/first_order_model/vox-mobile.pdparams'", "\n", "\n", "", "else", ":", "\n", "                ", "if", "self", ".", "image_size", "==", "512", ":", "\n", "                    ", "vox_cpk_weight_url", "=", "'https://paddlegan.bj.bcebos.com/applications/first_order_model/vox-cpk-512.pdparams'", "\n", "", "else", ":", "\n", "                    ", "vox_cpk_weight_url", "=", "'https://paddlegan.bj.bcebos.com/applications/first_order_model/vox-cpk.pdparams'", "\n", "", "", "weight_path", "=", "get_path_from_url", "(", "vox_cpk_weight_url", ")", "\n", "\n", "", "self", ".", "weight_path", "=", "weight_path", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "output", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "output", ")", "\n", "", "self", ".", "output", "=", "output", "\n", "self", ".", "filename", "=", "filename", "\n", "self", ".", "relative", "=", "relative", "\n", "self", ".", "adapt_scale", "=", "adapt_scale", "\n", "self", ".", "find_best_frame", "=", "find_best_frame", "\n", "self", ".", "best_frame", "=", "best_frame", "\n", "self", ".", "ratio", "=", "ratio", "\n", "self", ".", "face_detector", "=", "face_detector", "\n", "self", ".", "generator", ",", "self", ".", "kp_detector", "=", "self", ".", "load_checkpoints", "(", "\n", "self", ".", "cfg", ",", "self", ".", "weight_path", ")", "\n", "self", ".", "multi_person", "=", "multi_person", "\n", "self", ".", "face_enhancement", "=", "face_enhancement", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "if", "face_enhancement", ":", "\n", "            ", "from", "ppgan", ".", "faceutils", ".", "face_enhancement", "import", "FaceEnhancement", "\n", "self", ".", "faceenhancer", "=", "FaceEnhancement", "(", "batch_size", "=", "batch_size", ")", "\n", "", "self", ".", "slice_size", "=", "slice_size", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.first_order_predictor.FirstOrderPredictor.read_img": [[126, 134], ["imageio.imread", "numpy.expand_dims"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.imread"], ["", "def", "read_img", "(", "self", ",", "path", ")", ":", "\n", "        ", "img", "=", "imageio", ".", "imread", "(", "path", ")", "\n", "if", "img", ".", "ndim", "==", "2", ":", "\n", "            ", "img", "=", "np", ".", "expand_dims", "(", "img", ",", "axis", "=", "2", ")", "\n", "# som images have 4 channels", "\n", "", "if", "img", ".", "shape", "[", "2", "]", ">", "3", ":", "\n", "            ", "img", "=", "img", "[", ":", ",", ":", ",", ":", "3", "]", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.first_order_predictor.FirstOrderPredictor.run": [[135, 233], ["first_order_predictor.FirstOrderPredictor.read_img", "imageio.get_reader", "imageio.get_reader.close", "first_order_predictor.FirstOrderPredictor.extract_bbox", "print", "range", "imageio.mimsave", "imageio.get_reader.get_meta_data", "first_order_predictor.FirstOrderPredictor.copy", "first_order_predictor.FirstOrderPredictor.run.get_prediction"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.first_order_predictor.FirstOrderPredictor.read_img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.close", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.first_order_predictor.FirstOrderPredictor.extract_bbox"], ["", "def", "run", "(", "self", ",", "source_image", ",", "driving_video", ")", ":", "\n", "\n", "        ", "def", "get_prediction", "(", "face_image", ")", ":", "\n", "            ", "if", "self", ".", "find_best_frame", "or", "self", ".", "best_frame", "is", "not", "None", ":", "\n", "                ", "i", "=", "self", ".", "best_frame", "if", "self", ".", "best_frame", "is", "not", "None", "else", "self", ".", "find_best_frame_func", "(", "\n", "source_image", ",", "driving_video", ")", "\n", "\n", "print", "(", "\"Best frame: \"", "+", "str", "(", "i", ")", ")", "\n", "driving_forward", "=", "driving_video", "[", "i", ":", "]", "\n", "driving_backward", "=", "driving_video", "[", ":", "(", "i", "+", "1", ")", "]", "[", ":", ":", "-", "1", "]", "\n", "predictions_forward", "=", "self", ".", "make_animation", "(", "\n", "face_image", ",", "\n", "driving_forward", ",", "\n", "self", ".", "generator", ",", "\n", "self", ".", "kp_detector", ",", "\n", "relative", "=", "self", ".", "relative", ",", "\n", "adapt_movement_scale", "=", "self", ".", "adapt_scale", ")", "\n", "predictions_backward", "=", "self", ".", "make_animation", "(", "\n", "face_image", ",", "\n", "driving_backward", ",", "\n", "self", ".", "generator", ",", "\n", "self", ".", "kp_detector", ",", "\n", "relative", "=", "self", ".", "relative", ",", "\n", "adapt_movement_scale", "=", "self", ".", "adapt_scale", ")", "\n", "predictions", "=", "predictions_backward", "[", ":", ":", "-", "1", "]", "+", "predictions_forward", "[", "\n", "1", ":", "]", "\n", "", "else", ":", "\n", "                ", "predictions", "=", "self", ".", "make_animation", "(", "\n", "face_image", ",", "\n", "driving_video", ",", "\n", "self", ".", "generator", ",", "\n", "self", ".", "kp_detector", ",", "\n", "relative", "=", "self", ".", "relative", ",", "\n", "adapt_movement_scale", "=", "self", ".", "adapt_scale", ")", "\n", "", "return", "predictions", "\n", "\n", "", "source_image", "=", "self", ".", "read_img", "(", "source_image", ")", "\n", "reader", "=", "imageio", ".", "get_reader", "(", "driving_video", ")", "\n", "fps", "=", "reader", ".", "get_meta_data", "(", ")", "[", "'fps'", "]", "\n", "driving_video", "=", "[", "]", "\n", "try", ":", "\n", "            ", "for", "im", "in", "reader", ":", "\n", "                ", "driving_video", ".", "append", "(", "im", ")", "\n", "", "", "except", "RuntimeError", ":", "\n", "            ", "print", "(", "\"Read driving video error!\"", ")", "\n", "pass", "\n", "", "reader", ".", "close", "(", ")", "\n", "\n", "driving_video", "=", "[", "\n", "cv2", ".", "resize", "(", "frame", ",", "(", "self", ".", "image_size", ",", "self", ".", "image_size", ")", ")", "/", "255.0", "\n", "for", "frame", "in", "driving_video", "\n", "]", "\n", "results", "=", "[", "]", "\n", "\n", "bboxes", "=", "self", ".", "extract_bbox", "(", "source_image", ".", "copy", "(", ")", ")", "\n", "print", "(", "str", "(", "len", "(", "bboxes", ")", ")", "+", "\" persons have been detected\"", ")", "\n", "\n", "# for multi person", "\n", "for", "rec", "in", "bboxes", ":", "\n", "            ", "face_image", "=", "source_image", ".", "copy", "(", ")", "[", "rec", "[", "1", "]", ":", "rec", "[", "3", "]", ",", "rec", "[", "0", "]", ":", "rec", "[", "2", "]", "]", "\n", "face_image", "=", "cv2", ".", "resize", "(", "face_image", ",", "\n", "(", "self", ".", "image_size", ",", "self", ".", "image_size", ")", ")", "/", "255.0", "\n", "predictions", "=", "get_prediction", "(", "face_image", ")", "\n", "results", ".", "append", "(", "{", "\n", "'rec'", ":", "\n", "rec", ",", "\n", "'predict'", ":", "\n", "[", "predictions", "[", "i", "]", "for", "i", "in", "range", "(", "predictions", ".", "shape", "[", "0", "]", ")", "]", "\n", "}", ")", "\n", "if", "len", "(", "bboxes", ")", "==", "1", "or", "not", "self", ".", "multi_person", ":", "\n", "                ", "break", "\n", "", "", "out_frame", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "driving_video", ")", ")", ":", "\n", "            ", "frame", "=", "source_image", ".", "copy", "(", ")", "\n", "for", "result", "in", "results", ":", "\n", "                ", "x1", ",", "y1", ",", "x2", ",", "y2", ",", "_", "=", "result", "[", "'rec'", "]", "\n", "h", "=", "y2", "-", "y1", "\n", "w", "=", "x2", "-", "x1", "\n", "out", "=", "result", "[", "'predict'", "]", "[", "i", "]", "\n", "out", "=", "cv2", ".", "resize", "(", "out", ".", "astype", "(", "np", ".", "uint8", ")", ",", "(", "x2", "-", "x1", ",", "y2", "-", "y1", ")", ")", "\n", "if", "len", "(", "results", ")", "==", "1", ":", "\n", "                    ", "frame", "[", "y1", ":", "y2", ",", "x1", ":", "x2", "]", "=", "out", "\n", "break", "\n", "", "else", ":", "\n", "                    ", "patch", "=", "np", ".", "zeros", "(", "frame", ".", "shape", ")", ".", "astype", "(", "'uint8'", ")", "\n", "patch", "[", "y1", ":", "y2", ",", "x1", ":", "x2", "]", "=", "out", "\n", "mask", "=", "np", ".", "zeros", "(", "frame", ".", "shape", "[", ":", "2", "]", ")", ".", "astype", "(", "'uint8'", ")", "\n", "cx", "=", "int", "(", "(", "x1", "+", "x2", ")", "/", "2", ")", "\n", "cy", "=", "int", "(", "(", "y1", "+", "y2", ")", "/", "2", ")", "\n", "cv2", ".", "circle", "(", "mask", ",", "(", "cx", ",", "cy", ")", ",", "math", ".", "ceil", "(", "h", "*", "self", ".", "ratio", ")", ",", "\n", "(", "255", ",", "255", ",", "255", ")", ",", "-", "1", ",", "8", ",", "0", ")", "\n", "frame", "=", "cv2", ".", "copyTo", "(", "patch", ",", "mask", ",", "frame", ")", "\n", "\n", "", "", "out_frame", ".", "append", "(", "frame", ")", "\n", "", "imageio", ".", "mimsave", "(", "os", ".", "path", ".", "join", "(", "self", ".", "output", ",", "self", ".", "filename", ")", ",", "\n", "[", "frame", "for", "frame", "in", "out_frame", "]", ",", "\n", "fps", "=", "fps", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.first_order_predictor.FirstOrderPredictor.load_checkpoints": [[234, 254], ["ppgan.models.generators.occlusion_aware.OcclusionAwareGenerator", "ppgan.modules.keypoint_detector.KPDetector", "paddle.load", "ppgan.models.generators.occlusion_aware.OcclusionAwareGenerator.set_state_dict", "ppgan.modules.keypoint_detector.KPDetector.set_state_dict", "ppgan.models.generators.occlusion_aware.OcclusionAwareGenerator.eval", "ppgan.modules.keypoint_detector.KPDetector.eval"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval"], ["", "def", "load_checkpoints", "(", "self", ",", "config", ",", "checkpoint_path", ")", ":", "\n", "\n", "        ", "generator", "=", "OcclusionAwareGenerator", "(", "**", "config", "[", "'model'", "]", "[", "'generator'", "]", "\n", "[", "'generator_cfg'", "]", ",", "\n", "**", "config", "[", "'model'", "]", "[", "'common_params'", "]", ",", "\n", "inference", "=", "True", ")", "\n", "\n", "kp_detector", "=", "KPDetector", "(", "\n", "**", "config", "[", "'model'", "]", "[", "'generator'", "]", "[", "'kp_detector_cfg'", "]", ",", "\n", "**", "config", "[", "'model'", "]", "[", "'common_params'", "]", ")", "\n", "\n", "checkpoint", "=", "paddle", ".", "load", "(", "self", ".", "weight_path", ")", "\n", "generator", ".", "set_state_dict", "(", "checkpoint", "[", "'generator'", "]", ")", "\n", "\n", "kp_detector", ".", "set_state_dict", "(", "checkpoint", "[", "'kp_detector'", "]", ")", "\n", "\n", "generator", ".", "eval", "(", ")", "\n", "kp_detector", ".", "eval", "(", ")", "\n", "\n", "return", "generator", ",", "kp_detector", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.first_order_predictor.FirstOrderPredictor.make_animation": [[255, 342], ["numpy.concatenate", "paddle.no_grad", "paddle.to_tensor().transpose", "numpy.array().astype", "kp_detector", "kp_detector", "paddle.tile", "paddle.tile", "paddle.tile", "tqdm.tqdm.tqdm", "int", "range", "paddle.to_tensor().transpose", "driving_slices.append", "range", "min", "int", "kp_detector", "ppgan.utils.animate.normalize_kp", "generator", "predictions.append", "paddle.to_tensor", "numpy.array", "numpy.floor", "paddle.to_tensor().transpose", "driving_slices.append", "int", "numpy.transpose", "first_order_predictor.FirstOrderPredictor.faceenhancer.enhance_from_batch", "source_image[].astype", "min", "paddle.to_tensor", "numpy.ceil", "out[].numpy", "float", "paddle.to_tensor", "numpy.array().astype", "float", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.animate.normalize_kp", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_enhancement.face_enhance.FaceEnhancement.enhance_from_batch"], ["", "def", "make_animation", "(", "self", ",", "\n", "source_image", ",", "\n", "driving_video", ",", "\n", "generator", ",", "\n", "kp_detector", ",", "\n", "relative", "=", "True", ",", "\n", "adapt_movement_scale", "=", "True", ")", ":", "\n", "        ", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "            ", "predictions", "=", "[", "]", "\n", "source", "=", "paddle", ".", "to_tensor", "(", "source_image", "[", "np", ".", "newaxis", "]", ".", "astype", "(", "\n", "np", ".", "float32", ")", ")", ".", "transpose", "(", "[", "0", ",", "3", ",", "1", ",", "2", "]", ")", "\n", "\n", "driving_video_np", "=", "np", ".", "array", "(", "driving_video", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "driving_n", ",", "driving_h", ",", "driving_w", ",", "driving_c", "=", "driving_video_np", ".", "shape", "\n", "\n", "driving_slices", "=", "[", "]", "\n", "\n", "if", "self", ".", "slice_size", "!=", "0", ":", "\n", "                ", "batch_count_in_slice", "=", "int", "(", "\n", "np", ".", "floor", "(", "\n", "float", "(", "self", ".", "slice_size", ")", "/", "\n", "(", "self", ".", "batch_size", "*", "driving_h", "*", "driving_w", "*", "driving_c", ")", ")", ")", "\n", "assert", "batch_count_in_slice", ">", "0", ",", "\"batch_count_in_slice is 0, use smaller batch_size or bigger slice_size\"", "\n", "frame_count_in_slice", "=", "batch_count_in_slice", "*", "self", ".", "batch_size", "\n", "for", "slice_start", "in", "range", "(", "0", ",", "driving_n", ",", "frame_count_in_slice", ")", ":", "\n", "                    ", "slice_end", "=", "slice_start", "+", "min", "(", "frame_count_in_slice", ",", "\n", "driving_n", "-", "slice_start", ")", "\n", "current_slice", "=", "paddle", ".", "to_tensor", "(", "\n", "driving_video_np", "[", "slice_start", ":", "slice_end", ",", "]", ")", ".", "transpose", "(", "\n", "[", "0", ",", "3", ",", "1", ",", "2", "]", ")", "\n", "driving_slices", ".", "append", "(", "current_slice", ")", "\n", "", "", "else", ":", "\n", "# whole driving as a single slice", "\n", "                ", "driving", "=", "paddle", ".", "to_tensor", "(", "\n", "np", ".", "array", "(", "driving_video", ")", ".", "astype", "(", "np", ".", "float32", ")", ")", ".", "transpose", "(", "\n", "[", "0", ",", "3", ",", "1", ",", "2", "]", ")", "\n", "frame_count_in_slice", "=", "driving_n", "\n", "driving_slices", ".", "append", "(", "driving", ")", "\n", "\n", "", "kp_source", "=", "kp_detector", "(", "source", ")", "\n", "kp_driving_initial", "=", "kp_detector", "(", "driving_slices", "[", "0", "]", "[", "0", ":", "1", "]", ")", "\n", "kp_source_batch", "=", "{", "}", "\n", "kp_source_batch", "[", "\"value\"", "]", "=", "paddle", ".", "tile", "(", "\n", "kp_source", "[", "\"value\"", "]", ",", "repeat_times", "=", "[", "self", ".", "batch_size", ",", "1", ",", "1", "]", ")", "\n", "kp_source_batch", "[", "\"jacobian\"", "]", "=", "paddle", ".", "tile", "(", "\n", "kp_source", "[", "\"jacobian\"", "]", ",", "repeat_times", "=", "[", "self", ".", "batch_size", ",", "1", ",", "1", ",", "1", "]", ")", "\n", "source", "=", "paddle", ".", "tile", "(", "source", ",", "\n", "repeat_times", "=", "[", "self", ".", "batch_size", ",", "1", ",", "1", ",", "1", "]", ")", "\n", "begin_idx", "=", "0", "\n", "for", "frame_idx", "in", "tqdm", "(", "\n", "range", "(", "int", "(", "np", ".", "ceil", "(", "float", "(", "driving_n", ")", "/", "self", ".", "batch_size", ")", ")", ")", ")", ":", "\n", "                ", "frame_num", "=", "min", "(", "self", ".", "batch_size", ",", "driving_n", "-", "begin_idx", ")", "\n", "slice_id", "=", "int", "(", "frame_idx", "*", "self", ".", "batch_size", "/", "\n", "frame_count_in_slice", ")", "\n", "\n", "internal_start", "=", "frame_idx", "-", "slice_id", "*", "frame_count_in_slice", "\n", "internal_end", "=", "frame_idx", "-", "slice_id", "*", "frame_count_in_slice", "+", "frame_num", "\n", "\n", "driving_frame", "=", "driving_slices", "[", "slice_id", "]", "[", "\n", "internal_start", ":", "internal_end", "]", "\n", "\n", "kp_driving", "=", "kp_detector", "(", "driving_frame", ")", "\n", "kp_source_img", "=", "{", "}", "\n", "kp_source_img", "[", "\"value\"", "]", "=", "kp_source_batch", "[", "\"value\"", "]", "[", "0", ":", "frame_num", "]", "\n", "kp_source_img", "[", "\"jacobian\"", "]", "=", "kp_source_batch", "[", "\"jacobian\"", "]", "[", "\n", "0", ":", "frame_num", "]", "\n", "\n", "kp_norm", "=", "normalize_kp", "(", "\n", "kp_source", "=", "kp_source", ",", "\n", "kp_driving", "=", "kp_driving", ",", "\n", "kp_driving_initial", "=", "kp_driving_initial", ",", "\n", "use_relative_movement", "=", "relative", ",", "\n", "use_relative_jacobian", "=", "relative", ",", "\n", "adapt_movement_scale", "=", "adapt_movement_scale", ")", "\n", "\n", "out", "=", "generator", "(", "source", "[", "0", ":", "frame_num", "]", ",", "\n", "kp_source", "=", "kp_source_img", ",", "\n", "kp_driving", "=", "kp_norm", ")", "\n", "img", "=", "np", ".", "transpose", "(", "out", "[", "'prediction'", "]", ".", "numpy", "(", ")", ",", "\n", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "*", "255.0", "\n", "\n", "if", "self", ".", "face_enhancement", ":", "\n", "                    ", "img", "=", "self", ".", "faceenhancer", ".", "enhance_from_batch", "(", "img", ")", "\n", "\n", "", "predictions", ".", "append", "(", "img", ")", "\n", "begin_idx", "+=", "frame_num", "\n", "", "", "return", "np", ".", "concatenate", "(", "predictions", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.first_order_predictor.FirstOrderPredictor.find_best_frame_func": [[343, 368], ["face_alignment.FaceAlignment", "ppgan.utils.animate.normalize_kp"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.animate.normalize_kp"], ["", "def", "find_best_frame_func", "(", "self", ",", "source", ",", "driving", ")", ":", "\n", "        ", "import", "face_alignment", "\n", "\n", "def", "normalize_kp", "(", "kp", ")", ":", "\n", "            ", "kp", "=", "kp", "-", "kp", ".", "mean", "(", "axis", "=", "0", ",", "keepdims", "=", "True", ")", "\n", "area", "=", "ConvexHull", "(", "kp", "[", ":", ",", ":", "2", "]", ")", ".", "volume", "\n", "area", "=", "np", ".", "sqrt", "(", "area", ")", "\n", "kp", "[", ":", ",", ":", "2", "]", "=", "kp", "[", ":", ",", ":", "2", "]", "/", "area", "\n", "return", "kp", "\n", "\n", "", "fa", "=", "face_alignment", ".", "FaceAlignment", "(", "face_alignment", ".", "LandmarksType", ".", "_2D", ",", "\n", "flip_input", "=", "True", ")", "\n", "\n", "kp_source", "=", "fa", ".", "get_landmarks", "(", "255", "*", "source", ")", "[", "0", "]", "\n", "kp_source", "=", "normalize_kp", "(", "kp_source", ")", "\n", "norm", "=", "float", "(", "'inf'", ")", "\n", "frame_num", "=", "0", "\n", "for", "i", ",", "image", "in", "tqdm", "(", "enumerate", "(", "driving", ")", ")", ":", "\n", "            ", "kp_driving", "=", "fa", ".", "get_landmarks", "(", "255", "*", "image", ")", "[", "0", "]", "\n", "kp_driving", "=", "normalize_kp", "(", "kp_driving", ")", "\n", "new_norm", "=", "(", "np", ".", "abs", "(", "kp_source", "-", "kp_driving", ")", "**", "2", ")", ".", "sum", "(", ")", "\n", "if", "new_norm", "<", "norm", ":", "\n", "                ", "norm", "=", "new_norm", "\n", "frame_num", "=", "i", "\n", "", "", "return", "frame_num", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.first_order_predictor.FirstOrderPredictor.extract_bbox": [[369, 415], ["ppgan.faceutils.face_detection.FaceAlignment", "ppgan.faceutils.face_detection.FaceAlignment.get_detections_for_image", "len", "sorted", "range", "numpy.array", "numpy.array", "numpy.array", "max", "max", "max", "min", "min", "results.append", "len", "range", "int", "int", "first_order_predictor.FirstOrderPredictor.IOU", "results_box.append", "int", "int"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.api.FaceAlignment.get_detections_for_image", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.first_order_predictor.FirstOrderPredictor.IOU", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "extract_bbox", "(", "self", ",", "image", ")", ":", "\n", "        ", "detector", "=", "face_detection", ".", "FaceAlignment", "(", "\n", "face_detection", ".", "LandmarksType", ".", "_2D", ",", "\n", "flip_input", "=", "False", ",", "\n", "face_detector", "=", "self", ".", "face_detector", ")", "\n", "\n", "frame", "=", "[", "image", "]", "\n", "predictions", "=", "detector", ".", "get_detections_for_image", "(", "np", ".", "array", "(", "frame", ")", ")", "\n", "person_num", "=", "len", "(", "predictions", ")", "\n", "if", "person_num", "==", "0", ":", "\n", "            ", "return", "np", ".", "array", "(", "[", "]", ")", "\n", "", "results", "=", "[", "]", "\n", "face_boxs", "=", "[", "]", "\n", "h", ",", "w", ",", "_", "=", "image", ".", "shape", "\n", "for", "rect", "in", "predictions", ":", "\n", "            ", "bh", "=", "rect", "[", "3", "]", "-", "rect", "[", "1", "]", "\n", "bw", "=", "rect", "[", "2", "]", "-", "rect", "[", "0", "]", "\n", "cy", "=", "rect", "[", "1", "]", "+", "int", "(", "bh", "/", "2", ")", "\n", "cx", "=", "rect", "[", "0", "]", "+", "int", "(", "bw", "/", "2", ")", "\n", "margin", "=", "max", "(", "bh", ",", "bw", ")", "\n", "y1", "=", "max", "(", "0", ",", "cy", "-", "margin", ")", "\n", "x1", "=", "max", "(", "0", ",", "cx", "-", "int", "(", "0.8", "*", "margin", ")", ")", "\n", "y2", "=", "min", "(", "h", ",", "cy", "+", "margin", ")", "\n", "x2", "=", "min", "(", "w", ",", "cx", "+", "int", "(", "0.8", "*", "margin", ")", ")", "\n", "area", "=", "(", "y2", "-", "y1", ")", "*", "(", "x2", "-", "x1", ")", "\n", "results", ".", "append", "(", "[", "x1", ",", "y1", ",", "x2", ",", "y2", ",", "area", "]", ")", "\n", "# if a person has more than one bbox, keep the largest one", "\n", "# maybe greedy will be better?", "\n", "", "sorted", "(", "results", ",", "key", "=", "lambda", "area", ":", "area", "[", "4", "]", ",", "reverse", "=", "True", ")", "\n", "results_box", "=", "[", "results", "[", "0", "]", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "person_num", ")", ":", "\n", "            ", "num", "=", "len", "(", "results_box", ")", "\n", "add_person", "=", "True", "\n", "for", "j", "in", "range", "(", "num", ")", ":", "\n", "                ", "pre_person", "=", "results_box", "[", "j", "]", "\n", "iou", "=", "self", ".", "IOU", "(", "pre_person", "[", "0", "]", ",", "pre_person", "[", "1", "]", ",", "pre_person", "[", "2", "]", ",", "\n", "pre_person", "[", "3", "]", ",", "pre_person", "[", "4", "]", ",", "results", "[", "i", "]", "[", "0", "]", ",", "\n", "results", "[", "i", "]", "[", "1", "]", ",", "results", "[", "i", "]", "[", "2", "]", ",", "results", "[", "i", "]", "[", "3", "]", ",", "\n", "results", "[", "i", "]", "[", "4", "]", ")", "\n", "if", "iou", ">", "0.5", ":", "\n", "                    ", "add_person", "=", "False", "\n", "break", "\n", "", "", "if", "add_person", ":", "\n", "                ", "results_box", ".", "append", "(", "results", "[", "i", "]", ")", "\n", "", "", "boxes", "=", "np", ".", "array", "(", "results_box", ")", "\n", "return", "boxes", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.first_order_predictor.FirstOrderPredictor.IOU": [[416, 427], ["max", "max", "min", "min"], "methods", ["None"], ["", "def", "IOU", "(", "self", ",", "ax1", ",", "ay1", ",", "ax2", ",", "ay2", ",", "sa", ",", "bx1", ",", "by1", ",", "bx2", ",", "by2", ",", "sb", ")", ":", "\n", "#sa = abs((ax2 - ax1) * (ay2 - ay1))", "\n", "#sb = abs((bx2 - bx1) * (by2 - by1))", "\n", "        ", "x1", ",", "y1", "=", "max", "(", "ax1", ",", "bx1", ")", ",", "max", "(", "ay1", ",", "by1", ")", "\n", "x2", ",", "y2", "=", "min", "(", "ax2", ",", "bx2", ")", ",", "min", "(", "ay2", ",", "by2", ")", "\n", "w", "=", "x2", "-", "x1", "\n", "h", "=", "y2", "-", "y1", "\n", "if", "w", "<", "0", "or", "h", "<", "0", ":", "\n", "            ", "return", "0.0", "\n", "", "else", ":", "\n", "            ", "return", "1.0", "*", "w", "*", "h", "/", "(", "sa", "+", "sb", "-", "w", "*", "h", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.__init__": [[35, 55], ["os.path.join", "ppgan.models.generators.deoldify.build_model", "paddle.load", "deoldify_predictor.DeOldifyPredictor.model.load_dict", "deoldify_predictor.DeOldifyPredictor.model.eval", "os.path.exists", "os.makedirs", "ppgan.utils.download.get_path_from_url", "ppgan.utils.download.get_path_from_url"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.build_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url"], ["    ", "def", "__init__", "(", "self", ",", "\n", "output", "=", "'output'", ",", "\n", "weight_path", "=", "None", ",", "\n", "artistic", "=", "False", ",", "\n", "render_factor", "=", "32", ")", ":", "\n", "        ", "self", ".", "output", "=", "os", ".", "path", ".", "join", "(", "output", ",", "'DeOldify'", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "output", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "self", ".", "output", ")", "\n", "", "self", ".", "render_factor", "=", "render_factor", "\n", "self", ".", "model", "=", "build_model", "(", "\n", "model_type", "=", "'artistic'", "if", "artistic", "else", "'stable'", ")", "\n", "if", "weight_path", "is", "None", ":", "\n", "            ", "if", "artistic", ":", "\n", "                ", "weight_path", "=", "get_path_from_url", "(", "DEOLDIFY_ART_WEIGHT_URL", ")", "\n", "", "else", ":", "\n", "                ", "weight_path", "=", "get_path_from_url", "(", "DEOLDIFY_STABLE_WEIGHT_URL", ")", "\n", "\n", "", "", "state_dict", "=", "paddle", ".", "load", "(", "weight_path", ")", "\n", "self", ".", "model", ".", "load_dict", "(", "state_dict", ")", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm": [[56, 68], ["img.resize.resize.resize", "numpy.array().reshape", "numpy.array().reshape", "img.resize.resize.astype", "numpy.array().transpose().astype", "numpy.array", "numpy.array", "numpy.array().transpose", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize"], ["", "def", "norm", "(", "self", ",", "img", ",", "render_factor", "=", "32", ",", "render_base", "=", "16", ")", ":", "\n", "        ", "target_size", "=", "render_factor", "*", "render_base", "\n", "img", "=", "img", ".", "resize", "(", "(", "target_size", ",", "target_size", ")", ",", "resample", "=", "Image", ".", "BILINEAR", ")", "\n", "\n", "img", "=", "np", ".", "array", "(", "img", ")", ".", "transpose", "(", "[", "2", ",", "0", ",", "1", "]", ")", ".", "astype", "(", "'float32'", ")", "/", "255.0", "\n", "\n", "img_mean", "=", "np", ".", "array", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ")", ".", "reshape", "(", "(", "3", ",", "1", ",", "1", ")", ")", "\n", "img_std", "=", "np", ".", "array", "(", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ".", "reshape", "(", "(", "3", ",", "1", ",", "1", ")", ")", "\n", "\n", "img", "-=", "img_mean", "\n", "img", "/=", "img_std", "\n", "return", "img", ".", "astype", "(", "'float32'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.denorm": [[69, 78], ["numpy.array().reshape", "numpy.array().reshape", "img.transpose.transpose.transpose", "numpy.array", "numpy.array"], "methods", ["None"], ["", "def", "denorm", "(", "self", ",", "img", ")", ":", "\n", "        ", "img_mean", "=", "np", ".", "array", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ")", ".", "reshape", "(", "(", "3", ",", "1", ",", "1", ")", ")", "\n", "img_std", "=", "np", ".", "array", "(", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ".", "reshape", "(", "(", "3", ",", "1", ",", "1", ")", ")", "\n", "\n", "img", "*=", "img_std", "\n", "img", "+=", "img_mean", "\n", "img", "=", "img", ".", "transpose", "(", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "\n", "return", "(", "img", "*", "255", ")", ".", "clip", "(", "0", ",", "255", ")", ".", "astype", "(", "'uint8'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.post_process": [[79, 89], ["numpy.asarray", "numpy.asarray", "cv2.cvtColor", "cv2.cvtColor", "numpy.copy", "cv2.cvtColor", "PIL.Image.fromarray"], "methods", ["None"], ["", "def", "post_process", "(", "self", ",", "raw_color", ",", "orig", ")", ":", "\n", "        ", "color_np", "=", "np", ".", "asarray", "(", "raw_color", ")", "\n", "orig_np", "=", "np", ".", "asarray", "(", "orig", ")", "\n", "color_yuv", "=", "cv2", ".", "cvtColor", "(", "color_np", ",", "cv2", ".", "COLOR_BGR2YUV", ")", "\n", "orig_yuv", "=", "cv2", ".", "cvtColor", "(", "orig_np", ",", "cv2", ".", "COLOR_BGR2YUV", ")", "\n", "hires", "=", "np", ".", "copy", "(", "orig_yuv", ")", "\n", "hires", "[", ":", ",", ":", ",", "1", ":", "3", "]", "=", "color_yuv", "[", ":", ",", ":", ",", "1", ":", "3", "]", "\n", "final", "=", "cv2", ".", "cvtColor", "(", "hires", ",", "cv2", ".", "COLOR_YUV2BGR", ")", "\n", "final", "=", "Image", ".", "fromarray", "(", "final", ")", "\n", "return", "final", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.run_image": [[90, 107], ["isinstance", "deoldify_predictor.DeOldifyPredictor.norm", "paddle.to_tensor", "deoldify_predictor.DeOldifyPredictor.model", "deoldify_predictor.DeOldifyPredictor.denorm", "PIL.Image.fromarray", "deoldify_predictor.DeOldifyPredictor.resize", "deoldify_predictor.DeOldifyPredictor.post_process", "PIL.Image.open().convert().convert", "isinstance", "PIL.Image.fromarray().convert().convert", "isinstance", "deoldify_predictor.DeOldifyPredictor.numpy", "PIL.Image.open().convert", "PIL.Image.fromarray().convert", "PIL.Image.open", "PIL.Image.fromarray"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.denorm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.post_process"], ["", "def", "run_image", "(", "self", ",", "img", ")", ":", "\n", "        ", "if", "isinstance", "(", "img", ",", "str", ")", ":", "\n", "            ", "ori_img", "=", "Image", ".", "open", "(", "img", ")", ".", "convert", "(", "'LA'", ")", ".", "convert", "(", "'RGB'", ")", "\n", "", "elif", "isinstance", "(", "img", ",", "np", ".", "ndarray", ")", ":", "\n", "            ", "ori_img", "=", "Image", ".", "fromarray", "(", "img", ")", ".", "convert", "(", "'LA'", ")", ".", "convert", "(", "'RGB'", ")", "\n", "", "elif", "isinstance", "(", "img", ",", "Image", ".", "Image", ")", ":", "\n", "            ", "ori_img", "=", "img", "\n", "\n", "", "img", "=", "self", ".", "norm", "(", "ori_img", ",", "self", ".", "render_factor", ")", "\n", "x", "=", "paddle", ".", "to_tensor", "(", "img", "[", "np", ".", "newaxis", ",", "...", "]", ")", "\n", "out", "=", "self", ".", "model", "(", "x", ")", "\n", "\n", "pred_img", "=", "self", ".", "denorm", "(", "out", ".", "numpy", "(", ")", "[", "0", "]", ")", "\n", "pred_img", "=", "Image", ".", "fromarray", "(", "pred_img", ")", "\n", "pred_img", "=", "pred_img", ".", "resize", "(", "ori_img", ".", "size", ",", "resample", "=", "Image", ".", "BILINEAR", ")", "\n", "pred_img", "=", "self", ".", "post_process", "(", "pred_img", ",", "ori_img", ")", "\n", "return", "pred_img", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.run_video": [[108, 139], ["os.path.join", "os.path.join", "cv2.VideoCapture", "cv2.VideoCapture.get", "ppgan.utils.video.video2frames", "sorted", "tqdm.tqdm.tqdm", "os.path.join", "os.path.join", "ppgan.utils.video.frames2video", "os.path.basename().split", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "glob.glob", "deoldify_predictor.DeOldifyPredictor.run_image", "os.path.basename", "deoldify_predictor.DeOldifyPredictor.save", "str", "os.path.join", "os.path.join", "int", "os.path.basename"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.video.video2frames", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.video.frames2video", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.run_image", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save"], ["", "def", "run_video", "(", "self", ",", "video", ")", ":", "\n", "        ", "base_name", "=", "os", ".", "path", ".", "basename", "(", "video", ")", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "output_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "output", ",", "base_name", ")", "\n", "pred_frame_path", "=", "os", ".", "path", ".", "join", "(", "output_path", ",", "'frames_pred'", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "output_path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "output_path", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "pred_frame_path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "pred_frame_path", ")", "\n", "\n", "", "cap", "=", "cv2", ".", "VideoCapture", "(", "video", ")", "\n", "fps", "=", "cap", ".", "get", "(", "cv2", ".", "CAP_PROP_FPS", ")", "\n", "\n", "out_path", "=", "video2frames", "(", "video", ",", "output_path", ")", "\n", "\n", "frames", "=", "sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "out_path", ",", "'*.png'", ")", ")", ")", "\n", "\n", "for", "frame", "in", "tqdm", "(", "frames", ")", ":", "\n", "            ", "pred_img", "=", "self", ".", "run_image", "(", "frame", ")", "\n", "\n", "frame_name", "=", "os", ".", "path", ".", "basename", "(", "frame", ")", "\n", "pred_img", ".", "save", "(", "os", ".", "path", ".", "join", "(", "pred_frame_path", ",", "frame_name", ")", ")", "\n", "\n", "", "frame_pattern_combined", "=", "os", ".", "path", ".", "join", "(", "pred_frame_path", ",", "'%08d.png'", ")", "\n", "\n", "vid_out_path", "=", "os", ".", "path", ".", "join", "(", "output_path", ",", "\n", "'{}_deoldify_out.mp4'", ".", "format", "(", "base_name", ")", ")", "\n", "frames2video", "(", "frame_pattern_combined", ",", "vid_out_path", ",", "str", "(", "int", "(", "fps", ")", ")", ")", "\n", "\n", "return", "frame_pattern_combined", ",", "vid_out_path", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.run": [[140, 158], ["deoldify_predictor.DeOldifyPredictor.is_image", "deoldify_predictor.DeOldifyPredictor.run_video", "deoldify_predictor.DeOldifyPredictor.run_image", "os.path.join", "deoldify_predictor.DeOldifyPredictor.save", "ppgan.utils.logger.get_logger", "ppgan.utils.logger.get_logger.info", "os.path.splitext", "os.path.basename"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.base_predictor.BasePredictor.is_image", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.run_video", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.run_image", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.logger.get_logger"], ["", "def", "run", "(", "self", ",", "input", ")", ":", "\n", "        ", "if", "not", "self", ".", "is_image", "(", "input", ")", ":", "\n", "            ", "return", "self", ".", "run_video", "(", "input", ")", "\n", "", "else", ":", "\n", "            ", "pred_img", "=", "self", ".", "run_image", "(", "input", ")", "\n", "\n", "out_path", "=", "None", "\n", "if", "self", ".", "output", ":", "\n", "                ", "try", ":", "\n", "                    ", "base_name", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "input", ")", ")", "[", "0", "]", "\n", "", "except", ":", "\n", "                    ", "base_name", "=", "'result'", "\n", "", "out_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "output", ",", "base_name", "+", "'.png'", ")", "\n", "pred_img", ".", "save", "(", "out_path", ")", "\n", "logger", "=", "get_logger", "(", ")", "\n", "logger", ".", "info", "(", "'Image saved to {}'", ".", "format", "(", "out_path", ")", ")", "\n", "\n", "", "return", "pred_img", ",", "out_path", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.recurrent_vsr_predictor.RecurrentDataset.__init__": [[40, 52], ["len", "len", "len", "len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "frames_path", ",", "num_frames", "=", "30", ")", ":", "\n", "        ", "self", ".", "frames_path", "=", "frames_path", "\n", "\n", "if", "num_frames", "is", "not", "None", ":", "\n", "            ", "self", ".", "num_frames", "=", "num_frames", "\n", "", "else", ":", "\n", "            ", "self", ".", "num_frames", "=", "len", "(", "self", ".", "frames_path", ")", "\n", "\n", "", "if", "len", "(", "frames_path", ")", "%", "self", ".", "num_frames", "==", "0", ":", "\n", "            ", "self", ".", "size", "=", "len", "(", "frames_path", ")", "//", "self", ".", "num_frames", "\n", "", "else", ":", "\n", "            ", "self", ".", "size", "=", "len", "(", "frames_path", ")", "//", "self", ".", "num_frames", "+", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.recurrent_vsr_predictor.RecurrentDataset.__getitem__": [[53, 72], ["list", "numpy.stack", "numpy.transpose().astype", "range", "frames_path.append", "edvr_predictor.read_img", "frame_list.append", "len", "numpy.transpose"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.first_order_predictor.FirstOrderPredictor.read_img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "indexs", "=", "list", "(", "\n", "range", "(", "index", "*", "self", ".", "num_frames", ",", "(", "index", "+", "1", ")", "*", "self", ".", "num_frames", ")", ")", "\n", "frame_list", "=", "[", "]", "\n", "frames_path", "=", "[", "]", "\n", "for", "i", "in", "indexs", ":", "\n", "            ", "if", "i", ">=", "len", "(", "self", ".", "frames_path", ")", ":", "\n", "                ", "break", "\n", "\n", "", "frames_path", ".", "append", "(", "self", ".", "frames_path", "[", "i", "]", ")", "\n", "img", "=", "read_img", "(", "self", ".", "frames_path", "[", "i", "]", ")", "\n", "frame_list", ".", "append", "(", "img", ")", "\n", "\n", "", "img_LQs", "=", "np", ".", "stack", "(", "frame_list", ",", "axis", "=", "0", ")", "\n", "# BGR to RGB, HWC to CHW, numpy to tensor", "\n", "img_LQs", "=", "img_LQs", "[", ":", ",", ":", ",", ":", ",", "[", "2", ",", "1", ",", "0", "]", "]", "\n", "img_LQs", "=", "np", ".", "transpose", "(", "img_LQs", ",", "(", "0", ",", "3", ",", "1", ",", "2", ")", ")", ".", "astype", "(", "'float32'", ")", "\n", "\n", "return", "img_LQs", ",", "frames_path", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.recurrent_vsr_predictor.RecurrentDataset.__len__": [[73, 75], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.recurrent_vsr_predictor.BasicVSRPredictor.__init__": [[78, 88], ["os.path.join", "ppgan.models.generators.BasicVSRNet", "recurrent_vsr_predictor.BasicVSRPredictor.model.set_dict", "recurrent_vsr_predictor.BasicVSRPredictor.model.eval", "ppgan.utils.download.get_path_from_url", "paddle.load"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["    ", "def", "__init__", "(", "self", ",", "output", "=", "'output'", ",", "weight_path", "=", "None", ",", "num_frames", "=", "10", ")", ":", "\n", "        ", "self", ".", "input", "=", "input", "\n", "self", ".", "name", "=", "'BasiVSR'", "\n", "self", ".", "num_frames", "=", "num_frames", "\n", "self", ".", "output", "=", "os", ".", "path", ".", "join", "(", "output", ",", "self", ".", "name", ")", "\n", "self", ".", "model", "=", "BasicVSRNet", "(", ")", "\n", "if", "weight_path", "is", "None", ":", "\n", "            ", "weight_path", "=", "get_path_from_url", "(", "BasicVSR_WEIGHT_URL", ")", "\n", "", "self", ".", "model", ".", "set_dict", "(", "paddle", ".", "load", "(", "weight_path", ")", "[", "'generator'", "]", ")", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.recurrent_vsr_predictor.BasicVSRPredictor.run": [[89, 145], ["os.path.join", "os.path.join", "cv2.VideoCapture", "cv2.VideoCapture.get", "ppgan.utils.video.video2frames", "sorted", "recurrent_vsr_predictor.RecurrentDataset", "paddle.io.DataLoader", "time.time", "enumerate", "os.path.join", "os.path.join", "ppgan.utils.video.frames2video", "os.path.basename().split", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "glob.glob", "tqdm.tqdm.tqdm", "paddle.to_tensor", "range", "time.time", "periods.append", "str", "os.path.join", "paddle.no_grad", "recurrent_vsr_predictor.BasicVSRPredictor.model", "isinstance", "outs[].numpy", "len", "edvr_predictor.get_img", "edvr_predictor.save_img", "int", "os.path.basename", "range", "os.path.join", "os.path.basename"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.video.video2frames", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.video.frames2video", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.serving.test_client.get_img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.edvr_predictor.save_img"], ["", "def", "run", "(", "self", ",", "video_path", ")", ":", "\n", "        ", "vid", "=", "video_path", "\n", "base_name", "=", "os", ".", "path", ".", "basename", "(", "vid", ")", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "output_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "output", ",", "base_name", ")", "\n", "pred_frame_path", "=", "os", ".", "path", ".", "join", "(", "output_path", ",", "'frames_pred'", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "output_path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "output_path", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "pred_frame_path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "pred_frame_path", ")", "\n", "\n", "", "cap", "=", "cv2", ".", "VideoCapture", "(", "vid", ")", "\n", "fps", "=", "cap", ".", "get", "(", "cv2", ".", "CAP_PROP_FPS", ")", "\n", "\n", "out_path", "=", "video2frames", "(", "vid", ",", "output_path", ")", "\n", "\n", "frames", "=", "sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "out_path", ",", "'*.png'", ")", ")", ")", "\n", "\n", "test_dataset", "=", "RecurrentDataset", "(", "frames", ",", "num_frames", "=", "self", ".", "num_frames", ")", "\n", "dataset", "=", "DataLoader", "(", "test_dataset", ",", "batch_size", "=", "1", ",", "num_workers", "=", "2", ")", "\n", "\n", "periods", "=", "[", "]", "\n", "cur_time", "=", "time", ".", "time", "(", ")", "\n", "for", "infer_iter", ",", "data", "in", "enumerate", "(", "tqdm", "(", "dataset", ")", ")", ":", "\n", "            ", "data_feed_in", "=", "paddle", ".", "to_tensor", "(", "data", "[", "0", "]", ")", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "                ", "outs", "=", "self", ".", "model", "(", "data_feed_in", ")", "\n", "\n", "if", "isinstance", "(", "outs", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "                    ", "outs", "=", "outs", "[", "-", "1", "]", "\n", "\n", "", "outs", "=", "outs", "[", "0", "]", ".", "numpy", "(", ")", "\n", "\n", "", "infer_result_list", "=", "[", "outs", "[", "i", ",", ":", ",", ":", ",", ":", "]", "for", "i", "in", "range", "(", "outs", ".", "shape", "[", "0", "]", ")", "]", "\n", "\n", "frames_path", "=", "data", "[", "1", "]", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "infer_result_list", ")", ")", ":", "\n", "                ", "img_i", "=", "get_img", "(", "infer_result_list", "[", "i", "]", ")", "\n", "save_img", "(", "\n", "img_i", ",", "\n", "os", ".", "path", ".", "join", "(", "pred_frame_path", ",", "\n", "os", ".", "path", ".", "basename", "(", "frames_path", "[", "i", "]", "[", "0", "]", ")", ")", ")", "\n", "\n", "", "prev_time", "=", "cur_time", "\n", "cur_time", "=", "time", ".", "time", "(", ")", "\n", "period", "=", "cur_time", "-", "prev_time", "\n", "periods", ".", "append", "(", "period", ")", "\n", "\n", "", "frame_pattern_combined", "=", "os", ".", "path", ".", "join", "(", "pred_frame_path", ",", "'%08d.png'", ")", "\n", "vid_out_path", "=", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "output", ",", "'{}_{}_out.mp4'", ".", "format", "(", "base_name", ",", "self", ".", "name", ")", ")", "\n", "frames2video", "(", "frame_pattern_combined", ",", "vid_out_path", ",", "str", "(", "int", "(", "fps", ")", ")", ")", "\n", "\n", "return", "frame_pattern_combined", ",", "vid_out_path", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.recurrent_vsr_predictor.IconVSRPredictor.__init__": [[148, 158], ["os.path.join", "ppgan.models.generators.IconVSR", "recurrent_vsr_predictor.IconVSRPredictor.model.set_dict", "recurrent_vsr_predictor.IconVSRPredictor.model.eval", "ppgan.utils.download.get_path_from_url", "paddle.load"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["    ", "def", "__init__", "(", "self", ",", "output", "=", "'output'", ",", "weight_path", "=", "None", ",", "num_frames", "=", "10", ")", ":", "\n", "        ", "self", ".", "input", "=", "input", "\n", "self", ".", "name", "=", "'IconVSR'", "\n", "self", ".", "output", "=", "os", ".", "path", ".", "join", "(", "output", ",", "self", ".", "name", ")", "\n", "self", ".", "num_frames", "=", "num_frames", "\n", "self", ".", "model", "=", "IconVSR", "(", ")", "\n", "if", "weight_path", "is", "None", ":", "\n", "            ", "weight_path", "=", "get_path_from_url", "(", "IconVSR_WEIGHT_URL", ")", "\n", "", "self", ".", "model", ".", "set_dict", "(", "paddle", ".", "load", "(", "weight_path", ")", "[", "'generator'", "]", ")", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.recurrent_vsr_predictor.BasiVSRPlusPlusPredictor.__init__": [[161, 171], ["os.path.join", "ppgan.models.generators.BasicVSRPlusPlus", "recurrent_vsr_predictor.BasiVSRPlusPlusPredictor.model.set_dict", "recurrent_vsr_predictor.BasiVSRPlusPlusPredictor.model.eval", "ppgan.utils.download.get_path_from_url", "paddle.load"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["    ", "def", "__init__", "(", "self", ",", "output", "=", "'output'", ",", "weight_path", "=", "None", ",", "num_frames", "=", "10", ")", ":", "\n", "        ", "self", ".", "input", "=", "input", "\n", "self", ".", "name", "=", "'BasiVSR_PP'", "\n", "self", ".", "output", "=", "os", ".", "path", ".", "join", "(", "output", ",", "self", ".", "name", ")", "\n", "self", ".", "num_frames", "=", "num_frames", "\n", "self", ".", "model", "=", "BasicVSRPlusPlus", "(", ")", "\n", "if", "weight_path", "is", "None", ":", "\n", "            ", "weight_path", "=", "get_path_from_url", "(", "BasicVSR_PP_WEIGHT_URL", ")", "\n", "", "self", ".", "model", ".", "set_dict", "(", "paddle", ".", "load", "(", "weight_path", ")", "[", "'generator'", "]", ")", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.recurrent_vsr_predictor.PPMSVSRPredictor.__init__": [[174, 184], ["os.path.join", "ppgan.models.generators.MSVSR", "recurrent_vsr_predictor.PPMSVSRPredictor.model.set_dict", "recurrent_vsr_predictor.PPMSVSRPredictor.model.eval", "ppgan.utils.download.get_path_from_url", "paddle.load"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["    ", "def", "__init__", "(", "self", ",", "output", "=", "'output'", ",", "weight_path", "=", "None", ",", "num_frames", "=", "10", ")", ":", "\n", "        ", "self", ".", "input", "=", "input", "\n", "self", ".", "name", "=", "'PPMSVSR'", "\n", "self", ".", "output", "=", "os", ".", "path", ".", "join", "(", "output", ",", "self", ".", "name", ")", "\n", "self", ".", "num_frames", "=", "num_frames", "\n", "self", ".", "model", "=", "MSVSR", "(", ")", "\n", "if", "weight_path", "is", "None", ":", "\n", "            ", "weight_path", "=", "get_path_from_url", "(", "PP_MSVSR_WEIGHT_URL", ")", "\n", "", "self", ".", "model", ".", "set_dict", "(", "paddle", ".", "load", "(", "weight_path", ")", "[", "'generator'", "]", ")", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.recurrent_vsr_predictor.PPMSVSRLargePredictor.__init__": [[187, 204], ["os.path.join", "ppgan.models.generators.MSVSR", "recurrent_vsr_predictor.PPMSVSRLargePredictor.model.set_dict", "recurrent_vsr_predictor.PPMSVSRLargePredictor.model.eval", "ppgan.utils.download.get_path_from_url", "paddle.load"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["    ", "def", "__init__", "(", "self", ",", "output", "=", "'output'", ",", "weight_path", "=", "None", ",", "num_frames", "=", "10", ")", ":", "\n", "        ", "self", ".", "input", "=", "input", "\n", "self", ".", "name", "=", "'PPMSVSR-L'", "\n", "self", ".", "output", "=", "os", ".", "path", ".", "join", "(", "output", ",", "self", ".", "name", ")", "\n", "self", ".", "num_frames", "=", "num_frames", "\n", "self", ".", "model", "=", "MSVSR", "(", "mid_channels", "=", "64", ",", "\n", "num_init_blocks", "=", "5", ",", "\n", "num_blocks", "=", "7", ",", "\n", "num_reconstruction_blocks", "=", "5", ",", "\n", "only_last", "=", "False", ",", "\n", "use_tiny_spynet", "=", "False", ",", "\n", "deform_groups", "=", "8", ",", "\n", "aux_reconstruction_blocks", "=", "2", ")", "\n", "if", "weight_path", "is", "None", ":", "\n", "            ", "weight_path", "=", "get_path_from_url", "(", "PP_MSVSR_L_WEIGHT_URL", ")", "\n", "", "self", ".", "model", ".", "set_dict", "(", "paddle", ".", "load", "(", "weight_path", ")", "[", "'generator'", "]", ")", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.midas_predictor.MiDaSPredictor.__init__": [[30, 60], ["midas_predictor.MiDaSPredictor.load_checkpoints", "paddle.vision.transforms.Compose", "os.path.join", "ppgan.utils.download.get_path_from_url", "midas.transforms.Resize", "midas.transforms.NormalizeImage", "midas.transforms.PrepareForNet"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.midas_predictor.MiDaSPredictor.load_checkpoints", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url"], ["    ", "def", "__init__", "(", "self", ",", "output", "=", "None", ",", "weight_path", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        output (str|None): output path, if None, do not write\n            depth map to pfm and png file.\n        weight_path (str|None): weight path, if None, load default\n            MiDaSv2.1 model.\n        \"\"\"", "\n", "self", ".", "output_path", "=", "os", ".", "path", ".", "join", "(", "output", ",", "'MiDaS'", ")", "if", "output", "else", "None", "\n", "\n", "self", ".", "net_h", ",", "self", ".", "net_w", "=", "384", ",", "384", "\n", "if", "weight_path", "is", "None", ":", "\n", "            ", "midasv2_weight_url", "=", "'https://paddlegan.bj.bcebos.com/applications/midas.pdparams'", "\n", "weight_path", "=", "get_path_from_url", "(", "midasv2_weight_url", ")", "\n", "", "self", ".", "weight_path", "=", "weight_path", "\n", "\n", "self", ".", "model", "=", "self", ".", "load_checkpoints", "(", ")", "\n", "\n", "self", ".", "transform", "=", "Compose", "(", "[", "\n", "Resize", "(", "\n", "self", ".", "net_w", ",", "\n", "self", ".", "net_h", ",", "\n", "resize_target", "=", "None", ",", "\n", "keep_aspect_ratio", "=", "True", ",", "\n", "ensure_multiple_of", "=", "32", ",", "\n", "resize_method", "=", "\"upper_bound\"", ",", "\n", "image_interpolation_method", "=", "cv2", ".", "INTER_CUBIC", ",", "\n", ")", ",", "\n", "NormalizeImage", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ",", "\n", "PrepareForNet", "(", ")", ",", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.midas_predictor.MiDaSPredictor.load_checkpoints": [[62, 66], ["midas.midas_net.MidasNet", "midas.midas_net.MidasNet.eval"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval"], ["", "def", "load_checkpoints", "(", "self", ")", ":", "\n", "        ", "model", "=", "MidasNet", "(", "self", ".", "weight_path", ",", "non_negative", "=", "True", ")", "\n", "model", ".", "eval", "(", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.midas_predictor.MiDaSPredictor.run": [[67, 99], ["isinstance", "cv2.imread", "cv2.cvtColor", "cv2.cvtColor", "midas_predictor.MiDaSPredictor.transform", "paddle.no_grad", "paddle.to_tensor().unsqueeze", "midas_predictor.MiDaSPredictor.model.forward", "paddle.nn.functional.interpolate().squeeze().numpy", "os.makedirs", "os.path.join", "midas.utils.write_depth", "isinstance", "paddle.to_tensor", "paddle.nn.functional.interpolate().squeeze", "os.path.splitext", "os.path.basename", "paddle.nn.functional.interpolate", "paddle.nn.functional.interpolate().squeeze().numpy.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.imread", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.utils.transform", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.vgg16.forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.utils.write_depth"], ["", "def", "run", "(", "self", ",", "img", ")", ":", "\n", "        ", "\"\"\"\n        img (str|np.ndarray|Image.Image): input image, it can be\n            images directory, Numpy.array or Image.Image.\n        \"\"\"", "\n", "if", "isinstance", "(", "img", ",", "str", ")", ":", "\n", "            ", "img", "=", "cv2", ".", "imread", "(", "img", ")", "\n", "", "if", "img", ".", "ndim", "==", "2", ":", "\n", "            ", "img", "=", "cv2", ".", "cvtColor", "(", "img", ",", "cv2", ".", "COLOR_GRAY2BGR", ")", "\n", "", "img", "=", "cv2", ".", "cvtColor", "(", "img", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "/", "255.0", "\n", "\n", "img_input", "=", "self", ".", "transform", "(", "{", "\"image\"", ":", "img", "}", ")", "[", "\"image\"", "]", "\n", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "            ", "sample", "=", "paddle", ".", "to_tensor", "(", "img_input", ")", ".", "unsqueeze", "(", "0", ")", "\n", "prediction", "=", "self", ".", "model", ".", "forward", "(", "sample", ")", "\n", "prediction", "=", "(", "paddle", ".", "nn", ".", "functional", ".", "interpolate", "(", "\n", "prediction", ".", "unsqueeze", "(", "1", ")", ",", "\n", "size", "=", "img", ".", "shape", "[", ":", "2", "]", ",", "\n", "mode", "=", "\"bicubic\"", ",", "\n", "align_corners", "=", "False", ",", "\n", ")", ".", "squeeze", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "", "if", "self", ".", "output_path", ":", "\n", "            ", "os", ".", "makedirs", "(", "self", ".", "output_path", ",", "exist_ok", "=", "True", ")", "\n", "img_name", "=", "img", "if", "isinstance", "(", "img", ",", "str", ")", "else", "'depth'", "\n", "filename", "=", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "output_path", ",", "\n", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "img_name", ")", ")", "[", "0", "]", ")", "\n", "pfm_f", ",", "png_f", "=", "write_depth", "(", "filename", ",", "prediction", ",", "bits", "=", "2", ")", "\n", "return", "prediction", ",", "pfm_f", ",", "png_f", "\n", "", "return", "prediction", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.transforms.Resize.__init__": [[11, 50], ["None"], "methods", ["None"], ["# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "\n", "# See the License for the specific language governing permissions and", "\n", "# limitations under the License.", "\n", "\n", "import", "sys", "\n", "import", "cv2", "\n", "import", "glob", "\n", "import", "random", "\n", "import", "numbers", "\n", "import", "collections", "\n", "import", "numpy", "as", "np", "\n", "\n", "from", "PIL", "import", "Image", "\n", "\n", "import", "paddle", "\n", "import", "paddle", ".", "vision", ".", "transforms", "as", "T", "\n", "import", "paddle", ".", "vision", ".", "transforms", ".", "functional", "as", "F", "\n", "\n", "from", ".", "builder", "import", "TRANSFORMS", ",", "build_from_config", "\n", "from", ".", "builder", "import", "PREPROCESS", "\n", "\n", "if", "sys", ".", "version_info", "<", "(", "3", ",", "3", ")", ":", "\n", "    ", "Sequence", "=", "collections", ".", "Sequence", "\n", "Iterable", "=", "collections", ".", "Iterable", "\n", "", "else", ":", "\n", "    ", "Sequence", "=", "collections", ".", "abc", ".", "Sequence", "\n", "Iterable", "=", "collections", ".", "abc", ".", "Iterable", "\n", "\n", "", "TRANSFORMS", ".", "register", "(", "T", ".", "Resize", ")", "\n", "TRANSFORMS", ".", "register", "(", "T", ".", "RandomCrop", ")", "\n", "TRANSFORMS", ".", "register", "(", "T", ".", "RandomHorizontalFlip", ")", "\n", "TRANSFORMS", ".", "register", "(", "T", ".", "RandomVerticalFlip", ")", "\n", "TRANSFORMS", ".", "register", "(", "T", ".", "Normalize", ")", "\n", "TRANSFORMS", ".", "register", "(", "T", ".", "Transpose", ")", "\n", "TRANSFORMS", ".", "register", "(", "T", ".", "Grayscale", ")", "\n", "TRANSFORMS", ".", "register", "(", "T", ".", "ToTensor", ")", "\n", "\n", "\n", "@", "PREPROCESS", ".", "register", "(", ")", "\n", "class", "Transforms", "(", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.transforms.Resize.constrain_to_multiple_of": [[51, 63], ["numpy.round", "numpy.floor", "numpy.ceil"], "methods", ["None"], ["\n", "    ", "def", "__init__", "(", "self", ",", "pipeline", ",", "input_keys", ",", "output_keys", "=", "None", ")", ":", "\n", "        ", "self", ".", "input_keys", "=", "input_keys", "\n", "self", ".", "output_keys", "=", "output_keys", "\n", "self", ".", "transforms", "=", "[", "]", "\n", "for", "transform_cfg", "in", "pipeline", ":", "\n", "            ", "self", ".", "transforms", ".", "append", "(", "build_from_config", "(", "transform_cfg", ",", "TRANSFORMS", ")", ")", "\n", "\n", "", "", "def", "__call__", "(", "self", ",", "datas", ")", ":", "\n", "        ", "data", "=", "[", "]", "\n", "\n", "for", "k", "in", "self", ".", "input_keys", ":", "\n", "            ", "data", ".", "append", "(", "datas", "[", "k", "]", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.transforms.Resize.get_size": [[64, 116], ["transforms.Resize.constrain_to_multiple_of", "transforms.Resize.constrain_to_multiple_of", "transforms.Resize.constrain_to_multiple_of", "transforms.Resize.constrain_to_multiple_of", "transforms.Resize.constrain_to_multiple_of", "transforms.Resize.constrain_to_multiple_of", "ValueError", "ValueError", "abs", "abs"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.transforms.Resize.constrain_to_multiple_of", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.transforms.Resize.constrain_to_multiple_of", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.transforms.Resize.constrain_to_multiple_of", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.transforms.Resize.constrain_to_multiple_of", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.transforms.Resize.constrain_to_multiple_of", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.transforms.Resize.constrain_to_multiple_of"], ["", "data", "=", "tuple", "(", "data", ")", "\n", "for", "transform", "in", "self", ".", "transforms", ":", "\n", "            ", "data", "=", "transform", "(", "data", ")", "\n", "if", "hasattr", "(", "transform", ",", "'params'", ")", "and", "isinstance", "(", "\n", "transform", ".", "params", ",", "dict", ")", ":", "\n", "                ", "datas", ".", "update", "(", "transform", ".", "params", ")", "\n", "\n", "", "", "if", "len", "(", "self", ".", "input_keys", ")", ">", "1", ":", "\n", "            ", "for", "i", ",", "k", "in", "enumerate", "(", "self", ".", "input_keys", ")", ":", "\n", "                ", "datas", "[", "k", "]", "=", "data", "[", "i", "]", "\n", "", "", "else", ":", "\n", "            ", "datas", "[", "k", "]", "=", "data", "\n", "\n", "", "if", "self", ".", "output_keys", "is", "not", "None", ":", "\n", "            ", "for", "i", ",", "k", "in", "enumerate", "(", "self", ".", "output_keys", ")", ":", "\n", "                ", "datas", "[", "k", "]", "=", "data", "[", "i", "]", "\n", "", "return", "datas", "\n", "\n", "", "return", "datas", "\n", "\n", "\n", "", "", "@", "PREPROCESS", ".", "register", "(", ")", "\n", "class", "SplitPairedImage", ":", "\n", "\n", "    ", "def", "__init__", "(", "self", ",", "key", ",", "paired_keys", "=", "[", "'A'", ",", "'B'", "]", ")", ":", "\n", "        ", "self", ".", "key", "=", "key", "\n", "self", ".", "paired_keys", "=", "paired_keys", "\n", "\n", "", "def", "__call__", "(", "self", ",", "datas", ")", ":", "\n", "# split AB image into A and B", "\n", "        ", "h", ",", "w", "=", "datas", "[", "self", ".", "key", "]", ".", "shape", "[", ":", "2", "]", "\n", "# w, h = AB.size", "\n", "w2", "=", "int", "(", "w", "/", "2", ")", "\n", "\n", "a", ",", "b", "=", "self", ".", "paired_keys", "\n", "datas", "[", "a", "]", "=", "datas", "[", "self", ".", "key", "]", "[", ":", "h", ",", ":", "w2", ",", ":", "]", "\n", "datas", "[", "b", "]", "=", "datas", "[", "self", ".", "key", "]", "[", ":", "h", ",", "w2", ":", ",", ":", "]", "\n", "\n", "datas", "[", "a", "+", "'_path'", "]", "=", "datas", "[", "self", ".", "key", "+", "'_path'", "]", "\n", "datas", "[", "b", "+", "'_path'", "]", "=", "datas", "[", "self", ".", "key", "+", "'_path'", "]", "\n", "\n", "return", "datas", "\n", "\n", "\n", "", "", "@", "TRANSFORMS", ".", "register", "(", ")", "\n", "class", "PairedRandomCrop", "(", "T", ".", "RandomCrop", ")", ":", "\n", "\n", "    ", "def", "__init__", "(", "self", ",", "size", ",", "keys", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "size", ",", "keys", "=", "keys", ")", "\n", "\n", "if", "isinstance", "(", "size", ",", "int", ")", ":", "\n", "            ", "self", ".", "size", "=", "(", "size", ",", "size", ")", "\n", "", "else", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.transforms.Resize.__call__": [[117, 148], ["transforms.Resize.get_size", "cv2.resize", "cv2.resize", "sample[].astype", "cv2.resize", "cv2.resize", "sample[].astype"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.transforms.Resize.get_size", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize"], ["            ", "self", ".", "size", "=", "size", "\n", "\n", "", "", "def", "_get_params", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "image", "=", "inputs", "[", "self", ".", "keys", ".", "index", "(", "'image'", ")", "]", "\n", "params", "=", "{", "}", "\n", "params", "[", "'crop_prams'", "]", "=", "self", ".", "_get_param", "(", "image", ",", "self", ".", "size", ")", "\n", "return", "params", "\n", "\n", "", "def", "_apply_image", "(", "self", ",", "img", ")", ":", "\n", "        ", "i", ",", "j", ",", "h", ",", "w", "=", "self", ".", "params", "[", "'crop_prams'", "]", "\n", "return", "F", ".", "crop", "(", "img", ",", "i", ",", "j", ",", "h", ",", "w", ")", "\n", "\n", "\n", "", "", "@", "TRANSFORMS", ".", "register", "(", ")", "\n", "class", "PairedToTensor", "(", "T", ".", "ToTensor", ")", ":", "\n", "\n", "    ", "def", "__init__", "(", "self", ",", "data_format", "=", "'CHW'", ",", "keys", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "data_format", ",", "keys", "=", "keys", ")", "\n", "\n", "", "def", "_apply_image", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "F", ".", "to_tensor", "(", "img", ")", "\n", "\n", "\n", "", "", "@", "TRANSFORMS", ".", "register", "(", ")", "\n", "class", "PairedRandomHorizontalFlip", "(", "T", ".", "RandomHorizontalFlip", ")", ":", "\n", "\n", "    ", "def", "__init__", "(", "self", ",", "prob", "=", "0.5", ",", "keys", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "prob", ",", "keys", "=", "keys", ")", "\n", "\n", "", "def", "_get_params", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "params", "=", "{", "}", "\n", "params", "[", "'flip'", "]", "=", "random", ".", "random", "(", ")", "<", "self", ".", "prob", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.transforms.NormalizeImage.__init__": [[153, 156], ["None"], "methods", ["None"], ["            ", "if", "isinstance", "(", "image", ",", "list", ")", ":", "\n", "                ", "image", "=", "[", "F", ".", "hflip", "(", "v", ")", "for", "v", "in", "image", "]", "\n", "", "else", ":", "\n", "                ", "return", "F", ".", "hflip", "(", "image", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.transforms.NormalizeImage.__call__": [[157, 161], ["None"], "methods", ["None"], ["", "", "return", "image", "\n", "\n", "\n", "", "", "@", "TRANSFORMS", ".", "register", "(", ")", "\n", "class", "PairedRandomVerticalFlip", "(", "T", ".", "RandomHorizontalFlip", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.transforms.PrepareForNet.__init__": [[166, 168], ["None"], "methods", ["None"], ["", "def", "_get_params", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "params", "=", "{", "}", "\n", "params", "[", "'flip'", "]", "=", "random", ".", "random", "(", ")", "<", "self", ".", "prob", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.transforms.PrepareForNet.__call__": [[169, 186], ["numpy.transpose", "numpy.ascontiguousarray().astype", "sample[].astype", "numpy.ascontiguousarray", "sample[].astype", "numpy.ascontiguousarray", "sample[].astype", "numpy.ascontiguousarray", "numpy.ascontiguousarray"], "methods", ["None"], ["return", "params", "\n", "\n", "", "def", "_apply_image", "(", "self", ",", "image", ")", ":", "\n", "        ", "if", "self", ".", "params", "[", "'flip'", "]", ":", "\n", "            ", "if", "isinstance", "(", "image", ",", "list", ")", ":", "\n", "                ", "image", "=", "[", "F", ".", "vflip", "(", "v", ")", "for", "v", "in", "image", "]", "\n", "", "else", ":", "\n", "                ", "return", "F", ".", "vflip", "(", "image", ")", "\n", "", "", "return", "image", "\n", "\n", "\n", "", "", "@", "TRANSFORMS", ".", "register", "(", ")", "\n", "class", "PairedRandomTransposeHW", "(", "T", ".", "BaseTransform", ")", ":", "\n", "    "]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.midas_net.BaseModel.load": [[12, 20], ["paddle.load", "paddle.load", "paddle.load", "paddle.load", "midas_net.BaseModel.set_dict"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["    ", "def", "load", "(", "self", ",", "path", ")", ":", "\n", "        ", "\"\"\"Load model from file.\n\n        Args:\n            path (str): file path\n        \"\"\"", "\n", "parameters", "=", "paddle", ".", "load", "(", "path", ")", "\n", "self", ".", "set_dict", "(", "parameters", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.midas_net.MidasNet.__init__": [[25, 64], ["print", "super().__init__", "blocks._make_encoder", "blocks.FeatureFusionBlock", "blocks.FeatureFusionBlock", "blocks.FeatureFusionBlock", "blocks.FeatureFusionBlock", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.Upsample", "paddle.Upsample", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "output_conv.append", "midas_net.MidasNet.load", "paddle.ReLU", "paddle.ReLU", "paddle.Identity", "paddle.Identity", "paddle.ReLU", "paddle.ReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.blocks._make_encoder", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["def", "__init__", "(", "self", ",", "path", "=", "None", ",", "features", "=", "256", ",", "non_negative", "=", "True", ")", ":", "\n", "        ", "\"\"\"Init.\n\n        Args:\n            path (str, optional): Path to saved model. Defaults to None.\n            features (int, optional): Number of features. Defaults to 256.\n            backbone (str, optional): Backbone network for encoder. Defaults to resnet50\n        \"\"\"", "\n", "print", "(", "\"Loading weights: \"", ",", "path", ")", "\n", "\n", "super", "(", "MidasNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "use_pretrained", "=", "False", "if", "path", "is", "None", "else", "True", "\n", "\n", "self", ".", "pretrained", ",", "self", ".", "scratch", "=", "_make_encoder", "(", "\n", "backbone", "=", "\"resnext101_wsl\"", ",", "\n", "features", "=", "features", ",", "\n", "use_pretrained", "=", "use_pretrained", ")", "\n", "\n", "self", ".", "scratch", ".", "refinenet4", "=", "FeatureFusionBlock", "(", "features", ")", "\n", "self", ".", "scratch", ".", "refinenet3", "=", "FeatureFusionBlock", "(", "features", ")", "\n", "self", ".", "scratch", ".", "refinenet2", "=", "FeatureFusionBlock", "(", "features", ")", "\n", "self", ".", "scratch", ".", "refinenet1", "=", "FeatureFusionBlock", "(", "features", ")", "\n", "\n", "output_conv", "=", "[", "\n", "nn", ".", "Conv2D", "(", "features", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "\"bilinear\"", ")", ",", "\n", "nn", ".", "Conv2D", "(", "128", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2D", "(", "32", ",", "1", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "if", "non_negative", "else", "nn", ".", "Identity", "(", ")", ",", "\n", "]", "\n", "if", "non_negative", ":", "\n", "            ", "output_conv", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "", "self", ".", "scratch", ".", "output_conv", "=", "nn", ".", "Sequential", "(", "*", "output_conv", ")", "\n", "\n", "if", "path", ":", "\n", "            ", "self", ".", "load", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.midas_net.MidasNet.forward": [[65, 93], ["midas_net.MidasNet.pretrained.layer1", "midas_net.MidasNet.pretrained.layer2", "midas_net.MidasNet.pretrained.layer3", "midas_net.MidasNet.pretrained.layer4", "midas_net.MidasNet.scratch.layer1_rn", "midas_net.MidasNet.scratch.layer2_rn", "midas_net.MidasNet.scratch.layer3_rn", "midas_net.MidasNet.scratch.layer4_rn", "midas_net.MidasNet.scratch.refinenet4", "midas_net.MidasNet.scratch.refinenet3", "midas_net.MidasNet.scratch.refinenet2", "midas_net.MidasNet.scratch.refinenet1", "midas_net.MidasNet.scratch.output_conv", "paddle.squeeze", "paddle.squeeze", "paddle.squeeze", "paddle.squeeze"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"Forward pass.\n\n        Args:\n            x (tensor): input data (image)\n\n        Returns:\n            tensor: depth\n        \"\"\"", "\n", "\n", "layer_1", "=", "self", ".", "pretrained", ".", "layer1", "(", "x", ")", "\n", "layer_2", "=", "self", ".", "pretrained", ".", "layer2", "(", "layer_1", ")", "\n", "layer_3", "=", "self", ".", "pretrained", ".", "layer3", "(", "layer_2", ")", "\n", "layer_4", "=", "self", ".", "pretrained", ".", "layer4", "(", "layer_3", ")", "\n", "\n", "layer_1_rn", "=", "self", ".", "scratch", ".", "layer1_rn", "(", "layer_1", ")", "\n", "layer_2_rn", "=", "self", ".", "scratch", ".", "layer2_rn", "(", "layer_2", ")", "\n", "layer_3_rn", "=", "self", ".", "scratch", ".", "layer3_rn", "(", "layer_3", ")", "\n", "layer_4_rn", "=", "self", ".", "scratch", ".", "layer4_rn", "(", "layer_4", ")", "\n", "\n", "path_4", "=", "self", ".", "scratch", ".", "refinenet4", "(", "layer_4_rn", ")", "\n", "path_3", "=", "self", ".", "scratch", ".", "refinenet3", "(", "path_4", ",", "layer_3_rn", ")", "\n", "path_2", "=", "self", ".", "scratch", ".", "refinenet2", "(", "path_3", ",", "layer_2_rn", ")", "\n", "path_1", "=", "self", ".", "scratch", ".", "refinenet1", "(", "path_2", ",", "layer_1_rn", ")", "\n", "\n", "out", "=", "self", ".", "scratch", ".", "output_conv", "(", "path_1", ")", "\n", "\n", "return", "paddle", ".", "squeeze", "(", "out", ",", "axis", "=", "1", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.blocks.ResidualConvUnit.__init__": [[92, 115], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "features", ")", ":", "\n", "        ", "\"\"\"Init.\n\n        Args:\n            features (int): number of features\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2D", "(", "features", ",", "\n", "features", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "True", ")", "\n", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2D", "(", "features", ",", "\n", "features", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "True", ")", "\n", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.blocks.ResidualConvUnit.forward": [[116, 131], ["blocks.ResidualConvUnit.relu", "blocks.ResidualConvUnit.conv1", "blocks.ResidualConvUnit.relu", "blocks.ResidualConvUnit.conv2"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"Forward pass.\n\n        Args:\n            x (tensor): input\n\n        Returns:\n            tensor: output\n        \"\"\"", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "\n", "return", "out", "+", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.blocks.FeatureFusionBlock.__init__": [[136, 146], ["paddle.Layer.__init__", "blocks.ResidualConvUnit", "blocks.ResidualConvUnit"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "features", ")", ":", "\n", "        ", "\"\"\"Init.\n\n        Args:\n            features (int): number of features\n        \"\"\"", "\n", "super", "(", "FeatureFusionBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "resConfUnit1", "=", "ResidualConvUnit", "(", "features", ")", "\n", "self", ".", "resConfUnit2", "=", "ResidualConvUnit", "(", "features", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.blocks.FeatureFusionBlock.forward": [[147, 165], ["blocks.FeatureFusionBlock.resConfUnit2", "paddle.functional.interpolate", "paddle.functional.interpolate", "len", "blocks.FeatureFusionBlock.resConfUnit1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "*", "xs", ")", ":", "\n", "        ", "\"\"\"Forward pass.\n\n        Returns:\n            tensor: output\n        \"\"\"", "\n", "output", "=", "xs", "[", "0", "]", "\n", "\n", "if", "len", "(", "xs", ")", "==", "2", ":", "\n", "            ", "output", "+=", "self", ".", "resConfUnit1", "(", "xs", "[", "1", "]", ")", "\n", "\n", "", "output", "=", "self", ".", "resConfUnit2", "(", "output", ")", "\n", "output", "=", "nn", ".", "functional", ".", "interpolate", "(", "output", ",", "\n", "scale_factor", "=", "2", ",", "\n", "mode", "=", "\"bilinear\"", ",", "\n", "align_corners", "=", "True", ")", "\n", "\n", "return", "output", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.blocks._make_encoder": [[7, 24], ["blocks._make_pretrained_resnext101_wsl", "blocks._make_scratch", "print"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.blocks._make_pretrained_resnext101_wsl", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.blocks._make_scratch"], ["def", "_make_encoder", "(", "backbone", ",", "\n", "features", ",", "\n", "use_pretrained", ",", "\n", "groups", "=", "1", ",", "\n", "expand", "=", "False", ",", "\n", "exportable", "=", "True", ")", ":", "\n", "    ", "if", "backbone", "==", "\"resnext101_wsl\"", ":", "\n", "# resnext101_wsl", "\n", "        ", "pretrained", "=", "_make_pretrained_resnext101_wsl", "(", "use_pretrained", ")", "\n", "scratch", "=", "_make_scratch", "(", "[", "256", ",", "512", ",", "1024", ",", "2048", "]", ",", "\n", "features", ",", "\n", "groups", "=", "groups", ",", "\n", "expand", "=", "expand", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "f\"Backbone '{backbone}' not implemented\"", ")", "\n", "assert", "False", "\n", "", "return", "pretrained", ",", "scratch", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.blocks._make_scratch": [[26, 69], ["paddle.Layer", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "function", ["None"], ["", "def", "_make_scratch", "(", "in_shape", ",", "out_shape", ",", "groups", "=", "1", ",", "expand", "=", "False", ")", ":", "\n", "    ", "scratch", "=", "nn", ".", "Layer", "(", ")", "\n", "\n", "out_shape1", "=", "out_shape", "\n", "out_shape2", "=", "out_shape", "\n", "out_shape3", "=", "out_shape", "\n", "out_shape4", "=", "out_shape", "\n", "if", "expand", "==", "True", ":", "\n", "        ", "out_shape1", "=", "out_shape", "\n", "out_shape2", "=", "out_shape", "*", "2", "\n", "out_shape3", "=", "out_shape", "*", "4", "\n", "out_shape4", "=", "out_shape", "*", "8", "\n", "\n", "", "scratch", ".", "layer1_rn", "=", "nn", ".", "Conv2D", "(", "in_shape", "[", "0", "]", ",", "\n", "out_shape1", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ",", "\n", "groups", "=", "groups", ")", "\n", "scratch", ".", "layer2_rn", "=", "nn", ".", "Conv2D", "(", "in_shape", "[", "1", "]", ",", "\n", "out_shape2", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ",", "\n", "groups", "=", "groups", ")", "\n", "scratch", ".", "layer3_rn", "=", "nn", ".", "Conv2D", "(", "in_shape", "[", "2", "]", ",", "\n", "out_shape3", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ",", "\n", "groups", "=", "groups", ")", "\n", "scratch", ".", "layer4_rn", "=", "nn", ".", "Conv2D", "(", "in_shape", "[", "3", "]", ",", "\n", "out_shape4", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ",", "\n", "groups", "=", "groups", ")", "\n", "\n", "return", "scratch", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.blocks._make_resnet_backbone": [[71, 81], ["paddle.Layer", "paddle.Sequential"], "function", ["None"], ["", "def", "_make_resnet_backbone", "(", "resnet", ")", ":", "\n", "    ", "pretrained", "=", "nn", ".", "Layer", "(", ")", "\n", "pretrained", ".", "layer1", "=", "nn", ".", "Sequential", "(", "resnet", ".", "conv1", ",", "resnet", ".", "bn1", ",", "resnet", ".", "relu", ",", "\n", "resnet", ".", "maxpool", ",", "resnet", ".", "layer1", ")", "\n", "\n", "pretrained", ".", "layer2", "=", "resnet", ".", "layer2", "\n", "pretrained", ".", "layer3", "=", "resnet", ".", "layer3", "\n", "pretrained", ".", "layer4", "=", "resnet", ".", "layer4", "\n", "\n", "return", "pretrained", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.blocks._make_pretrained_resnext101_wsl": [[83, 87], ["resnext101_32x8d_wsl", "blocks._make_resnet_backbone"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.resnext.resnext101_32x8d_wsl", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.blocks._make_resnet_backbone"], ["", "def", "_make_pretrained_resnext101_wsl", "(", "use_pretrained", ")", ":", "\n", "    ", "from", ".", "resnext", "import", "resnext101_32x8d_wsl", "\n", "resnet", "=", "resnext101_32x8d_wsl", "(", ")", "\n", "return", "_make_resnet_backbone", "(", "resnet", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.resnext.ResNetEx.__init__": [[31, 42], ["paddle.vision.models.resnet.ResNet.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "\n", "block", ",", "\n", "depth", ",", "\n", "num_classes", "=", "1000", ",", "\n", "with_pool", "=", "True", ",", "\n", "groups", "=", "1", ",", "\n", "width_per_group", "=", "64", ")", ":", "\n", "        ", "self", ".", "groups", "=", "groups", "\n", "self", ".", "base_width", "=", "width_per_group", "\n", "\n", "super", "(", "ResNetEx", ",", "self", ")", ".", "__init__", "(", "block", ",", "depth", ",", "num_classes", ",", "with_pool", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.resnext.ResNetEx._make_layer": [[43, 74], ["layers.append", "range", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "block", "layers.append", "paddle.Conv2D", "paddle.Conv2D", "norm_layer", "block"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ",", "dilate", "=", "False", ")", ":", "\n", "        ", "norm_layer", "=", "self", ".", "_norm_layer", "\n", "downsample", "=", "None", "\n", "previous_dilation", "=", "self", ".", "dilation", "\n", "if", "dilate", ":", "\n", "            ", "self", ".", "dilation", "*=", "stride", "\n", "stride", "=", "1", "\n", "", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "self", ".", "inplanes", ",", "\n", "planes", "*", "block", ".", "expansion", ",", "\n", "1", ",", "\n", "stride", "=", "stride", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "norm_layer", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "\n", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ",", "self", ".", "groups", ",", "\n", "self", ".", "base_width", ",", "previous_dilation", ",", "norm_layer", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "_", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "\n", "block", "(", "self", ".", "inplanes", ",", "\n", "planes", ",", "\n", "groups", "=", "self", ".", "groups", ",", "\n", "base_width", "=", "self", ".", "base_width", ",", "\n", "norm_layer", "=", "norm_layer", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.resnext._resnext": [[76, 79], ["resnext.ResNetEx", "paddle.vision.models.resnet.BottleneckBlock"], "function", ["None"], ["", "", "def", "_resnext", "(", "arch", ",", "Block", ",", "depth", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "ResNetEx", "(", "Block", ",", "depth", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.resnext.resnext101_32x8d_wsl": [[81, 87], ["resnext._resnext"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.resnext._resnext"], ["", "def", "resnext101_32x8d_wsl", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"ResNet101 32x8d wsl model\n    \"\"\"", "\n", "kwargs", "[", "'groups'", "]", "=", "32", "\n", "kwargs", "[", "'width_per_group'", "]", "=", "8", "\n", "return", "_resnext", "(", "'resnet101_32x8d'", ",", "BottleneckBlock", ",", "101", ",", "**", "kwargs", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.utils.write_pfm": [[10, 47], ["open", "numpy.flipud", "file.write", "file.write", "file.write", "np.flipud.tofile", "Exception", "len", "Exception", "len", "len"], "function", ["None"], ["def", "write_pfm", "(", "path", ",", "image", ",", "scale", "=", "1", ")", ":", "\n", "    ", "\"\"\"Write pfm file.\n\n    Args:\n        path (str): pathto file\n        image (array): data\n        scale (int, optional): Scale. Defaults to 1.\n    \"\"\"", "\n", "\n", "with", "open", "(", "path", ",", "\"wb\"", ")", "as", "file", ":", "\n", "        ", "color", "=", "None", "\n", "\n", "if", "image", ".", "dtype", ".", "name", "!=", "\"float32\"", ":", "\n", "            ", "raise", "Exception", "(", "\"Image dtype must be float32.\"", ")", "\n", "\n", "", "image", "=", "np", ".", "flipud", "(", "image", ")", "\n", "\n", "if", "len", "(", "image", ".", "shape", ")", "==", "3", "and", "image", ".", "shape", "[", "2", "]", "==", "3", ":", "# color image", "\n", "            ", "color", "=", "True", "\n", "", "elif", "(", "len", "(", "image", ".", "shape", ")", "==", "2", "\n", "or", "len", "(", "image", ".", "shape", ")", "==", "3", "and", "image", ".", "shape", "[", "2", "]", "==", "1", ")", ":", "# greyscale", "\n", "            ", "color", "=", "False", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "\n", "\"Image must have H x W x 3, H x W x 1 or H x W dimensions.\"", ")", "\n", "\n", "", "file", ".", "write", "(", "\"PF\\n\"", "if", "color", "else", "\"Pf\\n\"", ".", "encode", "(", ")", ")", "\n", "file", ".", "write", "(", "\"%d %d\\n\"", ".", "encode", "(", ")", "%", "(", "image", ".", "shape", "[", "1", "]", ",", "image", ".", "shape", "[", "0", "]", ")", ")", "\n", "\n", "endian", "=", "image", ".", "dtype", ".", "byteorder", "\n", "\n", "if", "endian", "==", "\"<\"", "or", "endian", "==", "\"=\"", "and", "sys", ".", "byteorder", "==", "\"little\"", ":", "\n", "            ", "scale", "=", "-", "scale", "\n", "\n", "", "file", ".", "write", "(", "\"%f\\n\"", ".", "encode", "(", ")", "%", "scale", ")", "\n", "\n", "image", ".", "tofile", "(", "file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.utils.read_image": [[49, 63], ["cv2.imread", "cv2.cvtColor", "cv2.cvtColor"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.imread"], ["", "", "def", "read_image", "(", "path", ")", ":", "\n", "    ", "\"\"\"Read image and output RGB image (0-1).\n\n    Args:\n        path (str): path to file\n\n    Returns:\n        array: RGB image (0-1)\n    \"\"\"", "\n", "img", "=", "cv2", ".", "imread", "(", "path", ")", "\n", "if", "img", ".", "ndim", "==", "2", ":", "\n", "        ", "img", "=", "cv2", ".", "cvtColor", "(", "img", ",", "cv2", ".", "COLOR_GRAY2BGR", ")", "\n", "", "img", "=", "cv2", ".", "cvtColor", "(", "img", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "/", "255.0", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.utils.write_depth": [[65, 89], ["utils.write_pfm", "depth.min", "depth.max", "depth.astype", "numpy.zeros", "cv2.imwrite", "numpy.finfo", "np.zeros.astype", "cv2.imwrite", "np.zeros.astype"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.midas.utils.write_pfm"], ["", "def", "write_depth", "(", "path", ",", "depth", ",", "bits", "=", "1", ")", ":", "\n", "    ", "\"\"\"Write depth map to pfm and png file.\n\n    Args:\n        path (str): filepath without extension\n        depth (array): depth\n    \"\"\"", "\n", "write_pfm", "(", "path", "+", "\".pfm\"", ",", "depth", ".", "astype", "(", "np", ".", "float32", ")", ")", "\n", "\n", "depth_min", "=", "depth", ".", "min", "(", ")", "\n", "depth_max", "=", "depth", ".", "max", "(", ")", "\n", "\n", "max_val", "=", "(", "2", "**", "(", "8", "*", "bits", ")", ")", "-", "1", "\n", "\n", "if", "depth_max", "-", "depth_min", ">", "np", ".", "finfo", "(", "\"float\"", ")", ".", "eps", ":", "\n", "        ", "out", "=", "max_val", "*", "(", "depth", "-", "depth_min", ")", "/", "(", "depth_max", "-", "depth_min", ")", "\n", "", "else", ":", "\n", "        ", "out", "=", "np", ".", "zeros", "(", "depth", ".", "shape", ",", "dtype", "=", "depth", ".", "type", ")", "\n", "\n", "", "if", "bits", "==", "1", ":", "\n", "        ", "cv2", ".", "imwrite", "(", "path", "+", "\".png\"", ",", "out", ".", "astype", "(", "\"uint8\"", ")", ")", "\n", "", "elif", "bits", "==", "2", ":", "\n", "        ", "cv2", ".", "imwrite", "(", "path", "+", "\".png\"", ",", "out", ".", "astype", "(", "\"uint16\"", ")", ")", "\n", "", "return", "path", "+", "'.pfm'", ",", "path", "+", "\".png\"", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.faceutils.image.resize_by_max": [[20, 29], ["int", "int", "cv2.resize", "max", "max"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize"], ["def", "resize_by_max", "(", "image", ",", "max_side", "=", "512", ",", "force", "=", "False", ")", ":", "\n", "    ", "h", ",", "w", "=", "image", ".", "shape", "[", ":", "2", "]", "\n", "if", "max", "(", "h", ",", "w", ")", "<", "max_side", "and", "not", "force", ":", "\n", "        ", "return", "image", "\n", "", "ratio", "=", "max", "(", "h", ",", "w", ")", "/", "max_side", "\n", "\n", "w", "=", "int", "(", "w", "/", "ratio", "+", "0.5", ")", "\n", "h", "=", "int", "(", "h", "/", "ratio", "+", "0.5", ")", "\n", "return", "cv2", ".", "resize", "(", "image", ",", "(", "w", ",", "h", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.dlibutils.face_align.align_crop": [[23, 36], ["dlib_utils.detect", "face_align.get_max_face", "dlib_utils.landmarks", "numpy.array", "face_align.align", "face_align.crop", "len"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.detect.detect", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.dlibutils.face_align.get_max_face", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.dlibutils.dlib_utils.landmarks", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.dlibutils.face_align.align", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.utils.crop"], ["def", "align_crop", "(", "image", ":", "Image", ")", ":", "\n", "    ", "faces", "=", "detect", "(", "image", ")", "\n", "\n", "assert", "len", "(", "faces", ")", ">", "0", ",", "'Cannot detect face!!!'", "\n", "\n", "face", "=", "get_max_face", "(", "faces", ")", "\n", "lms", "=", "landmarks", "(", "image", ",", "face", ")", "\n", "lms", "=", "lms", "[", ":", ",", ":", ":", "-", "1", "]", "\n", "\n", "image", "=", "np", ".", "array", "(", "image", ")", "\n", "image_align", ",", "landmarks_align", "=", "align", "(", "image", ",", "lms", ")", "\n", "image_crop", "=", "crop", "(", "image_align", ",", "landmarks_align", ")", "\n", "return", "image_crop", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.dlibutils.face_align.get_max_face": [[38, 53], ["len", "numpy.argmax", "face.left", "face.top", "face.right", "face.bottom", "areas.append"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "get_max_face", "(", "faces", ")", ":", "\n", "    ", "if", "len", "(", "faces", ")", "==", "1", ":", "\n", "        ", "return", "faces", "[", "0", "]", "\n", "\n", "", "else", ":", "\n", "# find max face", "\n", "        ", "areas", "=", "[", "]", "\n", "for", "face", "in", "faces", ":", "\n", "            ", "left", "=", "face", ".", "left", "(", ")", "\n", "top", "=", "face", ".", "top", "(", ")", "\n", "right", "=", "face", ".", "right", "(", ")", "\n", "bottom", "=", "face", ".", "bottom", "(", ")", "\n", "areas", ".", "append", "(", "(", "bottom", "-", "top", ")", "*", "(", "right", "-", "left", ")", ")", "\n", "", "max_face_index", "=", "np", ".", "argmax", "(", "areas", ")", "\n", "return", "faces", "[", "max_face_index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.dlibutils.face_align.align": [[55, 81], ["numpy.arctan", "math.cos", "math.sin", "int", "int", "numpy.array", "cv2.warpAffine", "numpy.concatenate", "numpy.dot", "numpy.ones", "abs", "abs", "abs", "abs"], "function", ["None"], ["", "", "def", "align", "(", "image", ",", "lms", ")", ":", "\n", "# rotation angle", "\n", "    ", "left_eye_corner", "=", "lms", "[", "36", "]", "\n", "right_eye_corner", "=", "lms", "[", "45", "]", "\n", "radian", "=", "np", ".", "arctan", "(", "(", "left_eye_corner", "[", "1", "]", "-", "right_eye_corner", "[", "1", "]", ")", "/", "(", "left_eye_corner", "[", "0", "]", "-", "right_eye_corner", "[", "0", "]", ")", ")", "\n", "\n", "# image size after rotating", "\n", "height", ",", "width", ",", "_", "=", "image", ".", "shape", "\n", "cos", "=", "math", ".", "cos", "(", "radian", ")", "\n", "sin", "=", "math", ".", "sin", "(", "radian", ")", "\n", "new_w", "=", "int", "(", "width", "*", "abs", "(", "cos", ")", "+", "height", "*", "abs", "(", "sin", ")", ")", "\n", "new_h", "=", "int", "(", "width", "*", "abs", "(", "sin", ")", "+", "height", "*", "abs", "(", "cos", ")", ")", "\n", "\n", "# translation", "\n", "Tx", "=", "new_w", "//", "2", "-", "width", "//", "2", "\n", "Ty", "=", "new_h", "//", "2", "-", "height", "//", "2", "\n", "\n", "# affine matrix", "\n", "M", "=", "np", ".", "array", "(", "[", "[", "cos", ",", "sin", ",", "(", "1", "-", "cos", ")", "*", "width", "/", "2.", "-", "sin", "*", "height", "/", "2.", "+", "Tx", "]", ",", "\n", "[", "-", "sin", ",", "cos", ",", "sin", "*", "width", "/", "2.", "+", "(", "1", "-", "cos", ")", "*", "height", "/", "2.", "+", "Ty", "]", "]", ")", "\n", "\n", "image_rotate", "=", "cv2", ".", "warpAffine", "(", "image", ",", "M", ",", "(", "new_w", ",", "new_h", ")", ",", "borderValue", "=", "(", "255", ",", "255", ",", "255", ")", ")", "\n", "\n", "landmarks", "=", "np", ".", "concatenate", "(", "[", "lms", ",", "np", ".", "ones", "(", "(", "lms", ".", "shape", "[", "0", "]", ",", "1", ")", ")", "]", ",", "axis", "=", "1", ")", "\n", "landmarks_rotate", "=", "np", ".", "dot", "(", "M", ",", "landmarks", ".", "T", ")", ".", "T", "\n", "return", "image_rotate", ",", "landmarks_rotate", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.dlibutils.face_align.crop": [[83, 116], ["numpy.min", "numpy.max", "numpy.min", "numpy.max", "int", "int", "int", "int", "max", "max", "min", "max", "max", "min", "image[].copy", "numpy.ones"], "function", ["None"], ["", "def", "crop", "(", "image", ",", "lms", ")", ":", "\n", "    ", "lms_top", "=", "np", ".", "min", "(", "lms", "[", ":", ",", "1", "]", ")", "\n", "lms_bottom", "=", "np", ".", "max", "(", "lms", "[", ":", ",", "1", "]", ")", "\n", "lms_left", "=", "np", ".", "min", "(", "lms", "[", ":", ",", "0", "]", ")", "\n", "lms_right", "=", "np", ".", "max", "(", "lms", "[", ":", ",", "0", "]", ")", "\n", "\n", "# expand bbox", "\n", "top", "=", "int", "(", "lms_top", "-", "0.8", "*", "(", "lms_bottom", "-", "lms_top", ")", ")", "\n", "bottom", "=", "int", "(", "lms_bottom", "+", "0.3", "*", "(", "lms_bottom", "-", "lms_top", ")", ")", "\n", "left", "=", "int", "(", "lms_left", "-", "0.3", "*", "(", "lms_right", "-", "lms_left", ")", ")", "\n", "right", "=", "int", "(", "lms_right", "+", "0.3", "*", "(", "lms_right", "-", "lms_left", ")", ")", "\n", "\n", "if", "bottom", "-", "top", ">", "right", "-", "left", ":", "\n", "        ", "left", "-=", "(", "(", "bottom", "-", "top", ")", "-", "(", "right", "-", "left", ")", ")", "//", "2", "\n", "right", "=", "left", "+", "(", "bottom", "-", "top", ")", "\n", "", "else", ":", "\n", "        ", "top", "-=", "(", "(", "right", "-", "left", ")", "-", "(", "bottom", "-", "top", ")", ")", "//", "2", "\n", "bottom", "=", "top", "+", "(", "right", "-", "left", ")", "\n", "\n", "", "image_crop", "=", "np", ".", "ones", "(", "(", "bottom", "-", "top", "+", "1", ",", "right", "-", "left", "+", "1", ",", "3", ")", ",", "np", ".", "uint8", ")", "*", "255", "\n", "\n", "h", ",", "w", "=", "image", ".", "shape", "[", ":", "2", "]", "\n", "left_white", "=", "max", "(", "0", ",", "-", "left", ")", "\n", "left", "=", "max", "(", "0", ",", "left", ")", "\n", "right", "=", "min", "(", "right", ",", "w", "-", "1", ")", "\n", "right_white", "=", "left_white", "+", "(", "right", "-", "left", ")", "\n", "top_white", "=", "max", "(", "0", ",", "-", "top", ")", "\n", "top", "=", "max", "(", "0", ",", "top", ")", "\n", "bottom", "=", "min", "(", "bottom", ",", "h", "-", "1", ")", "\n", "bottom_white", "=", "top_white", "+", "(", "bottom", "-", "top", ")", "\n", "\n", "image_crop", "[", "top_white", ":", "bottom_white", "+", "1", ",", "left_white", ":", "right_white", "+", "1", "]", "=", "image", "[", "top", ":", "bottom", "+", "1", ",", "left", ":", "right", "+", "1", "]", ".", "copy", "(", ")", "\n", "return", "image_crop", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.dlibutils.dlib_utils.detect": [[18, 34], ["paddle.utils.try_import", "numpy.asarray", "image.resize_by_max", "paddle.utils.try_import.get_frontal_face_detector", "dlib.get_frontal_face_detector.", "paddle.utils.try_import.rectangles", "dlib.rectangles.append", "paddle.utils.try_import.rectangle", "int", "int", "int", "int", "face.left", "face.top", "face.right", "face.bottom"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.faceutils.image.resize_by_max", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["def", "detect", "(", "image", ":", "Image", ")", ":", "\n", "    ", "dlib", "=", "try_import", "(", "'dlib'", ")", "\n", "image", "=", "np", ".", "asarray", "(", "image", ")", "\n", "h", ",", "w", "=", "image", ".", "shape", "[", ":", "2", "]", "\n", "image", "=", "resize_by_max", "(", "image", ",", "361", ")", "\n", "actual_h", ",", "actual_w", "=", "image", ".", "shape", "[", ":", "2", "]", "\n", "detector", "=", "dlib", ".", "get_frontal_face_detector", "(", ")", "\n", "faces_on_small", "=", "detector", "(", "image", ",", "1", ")", "\n", "faces", "=", "dlib", ".", "rectangles", "(", ")", "\n", "for", "face", "in", "faces_on_small", ":", "\n", "        ", "faces", ".", "append", "(", "\n", "dlib", ".", "rectangle", "(", "int", "(", "face", ".", "left", "(", ")", "/", "actual_w", "*", "w", "+", "0.5", ")", ",", "\n", "int", "(", "face", ".", "top", "(", ")", "/", "actual_h", "*", "h", "+", "0.5", ")", ",", "\n", "int", "(", "face", ".", "right", "(", ")", "/", "actual_w", "*", "w", "+", "0.5", ")", ",", "\n", "int", "(", "face", ".", "bottom", "(", ")", "/", "actual_h", "*", "h", "+", "0.5", ")", ")", ")", "\n", "", "return", "faces", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.dlibutils.dlib_utils.crop": [[36, 88], ["paddle.utils.try_import", "dlib.rectangle.height", "dlib.rectangle.width", "int", "int", "int", "int", "image.crop.crop", "paddle.utils.try_import.rectangle", "paddle.utils.try_import.rectangle", "dlib.rectangle.center", "paddle.utils.try_import.rectangle", "max", "max", "min", "min", "int", "int", "image.crop.crop", "paddle.utils.try_import.rectangle", "dlib.rectangle.left", "dlib.rectangle.top", "dlib.rectangle.right", "dlib.rectangle.bottom", "dlib.rectangle.top", "dlib.rectangle.bottom", "int", "int", "image.crop.crop", "paddle.utils.try_import.rectangle", "dlib.rectangle.left", "dlib.rectangle.top", "dlib.rectangle.right", "dlib.rectangle.bottom", "dlib.rectangle.left", "dlib.rectangle.right", "dlib.rectangle.left", "dlib.rectangle.right", "dlib.rectangle.top", "dlib.rectangle.bottom"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.utils.crop", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.utils.crop", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.utils.crop"], ["", "def", "crop", "(", "image", ":", "Image", ",", "face", ",", "up_ratio", ",", "down_ratio", ",", "width_ratio", ")", ":", "\n", "    ", "dlib", "=", "try_import", "(", "'dlib'", ")", "\n", "width", ",", "height", "=", "image", ".", "size", "\n", "face_height", "=", "face", ".", "height", "(", ")", "\n", "face_width", "=", "face", ".", "width", "(", ")", "\n", "delta_up", "=", "up_ratio", "*", "face_height", "\n", "delta_down", "=", "down_ratio", "*", "face_height", "\n", "delta_width", "=", "width_ratio", "*", "width", "\n", "\n", "img_left", "=", "int", "(", "max", "(", "0", ",", "face", ".", "left", "(", ")", "-", "delta_width", ")", ")", "\n", "img_top", "=", "int", "(", "max", "(", "0", ",", "face", ".", "top", "(", ")", "-", "delta_up", ")", ")", "\n", "img_right", "=", "int", "(", "min", "(", "width", ",", "face", ".", "right", "(", ")", "+", "delta_width", ")", ")", "\n", "img_bottom", "=", "int", "(", "min", "(", "height", ",", "face", ".", "bottom", "(", ")", "+", "delta_down", ")", ")", "\n", "image", "=", "image", ".", "crop", "(", "(", "img_left", ",", "img_top", ",", "img_right", ",", "img_bottom", ")", ")", "\n", "face", "=", "dlib", ".", "rectangle", "(", "face", ".", "left", "(", ")", "-", "img_left", ",", "\n", "face", ".", "top", "(", ")", "-", "img_top", ",", "\n", "face", ".", "right", "(", ")", "-", "img_left", ",", "\n", "face", ".", "bottom", "(", ")", "-", "img_top", ")", "\n", "face_expand", "=", "dlib", ".", "rectangle", "(", "img_left", ",", "img_top", ",", "img_right", ",", "img_bottom", ")", "\n", "center", "=", "face_expand", ".", "center", "(", ")", "\n", "width", ",", "height", "=", "image", ".", "size", "\n", "crop_left", "=", "img_left", "\n", "crop_top", "=", "img_top", "\n", "crop_right", "=", "img_right", "\n", "crop_bottom", "=", "img_bottom", "\n", "if", "width", ">", "height", ":", "\n", "        ", "left", "=", "int", "(", "center", ".", "x", "-", "height", "/", "2", ")", "\n", "right", "=", "int", "(", "center", ".", "x", "+", "height", "/", "2", ")", "\n", "if", "left", "<", "0", ":", "\n", "            ", "left", ",", "right", "=", "0", ",", "height", "\n", "", "elif", "right", ">", "width", ":", "\n", "            ", "left", ",", "right", "=", "width", "-", "height", ",", "width", "\n", "", "image", "=", "image", ".", "crop", "(", "(", "left", ",", "0", ",", "right", ",", "height", ")", ")", "\n", "face", "=", "dlib", ".", "rectangle", "(", "face", ".", "left", "(", ")", "-", "left", ",", "face", ".", "top", "(", ")", ",", "\n", "face", ".", "right", "(", ")", "-", "left", ",", "face", ".", "bottom", "(", ")", ")", "\n", "crop_left", "+=", "left", "\n", "crop_right", "=", "crop_left", "+", "height", "\n", "", "elif", "width", "<", "height", ":", "\n", "        ", "top", "=", "int", "(", "center", ".", "y", "-", "width", "/", "2", ")", "\n", "bottom", "=", "int", "(", "center", ".", "y", "+", "width", "/", "2", ")", "\n", "if", "top", "<", "0", ":", "\n", "            ", "top", ",", "bottom", "=", "0", ",", "width", "\n", "", "elif", "bottom", ">", "height", ":", "\n", "            ", "top", ",", "bottom", "=", "height", "-", "width", ",", "height", "\n", "", "image", "=", "image", ".", "crop", "(", "(", "0", ",", "top", ",", "width", ",", "bottom", ")", ")", "\n", "face", "=", "dlib", ".", "rectangle", "(", "face", ".", "left", "(", ")", ",", "\n", "face", ".", "top", "(", ")", "-", "top", ",", "face", ".", "right", "(", ")", ",", "\n", "face", ".", "bottom", "(", ")", "-", "top", ")", "\n", "crop_top", "+=", "top", "\n", "crop_bottom", "=", "crop_top", "+", "width", "\n", "", "crop_face", "=", "dlib", ".", "rectangle", "(", "crop_left", ",", "crop_top", ",", "crop_right", ",", "crop_bottom", ")", "\n", "return", "image", ",", "face", ",", "crop_face", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.dlibutils.dlib_utils.crop_by_image_size": [[90, 116], ["paddle.utils.try_import", "dlib.rectangle.center", "int", "int", "image.crop.crop", "paddle.utils.try_import.rectangle", "dlib.rectangle.top", "dlib.rectangle.bottom", "int", "int", "image.crop.crop", "paddle.utils.try_import.rectangle", "dlib.rectangle.left", "dlib.rectangle.right", "dlib.rectangle.left", "dlib.rectangle.right", "dlib.rectangle.top", "dlib.rectangle.bottom"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.utils.crop", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.utils.crop"], ["", "def", "crop_by_image_size", "(", "image", ":", "Image", ",", "face", ")", ":", "\n", "    ", "dlib", "=", "try_import", "(", "'dlib'", ")", "\n", "center", "=", "face", ".", "center", "(", ")", "\n", "width", ",", "height", "=", "image", ".", "size", "\n", "if", "width", ">", "height", ":", "\n", "        ", "left", "=", "int", "(", "center", ".", "x", "-", "height", "/", "2", ")", "\n", "right", "=", "int", "(", "center", ".", "x", "+", "height", "/", "2", ")", "\n", "if", "left", "<", "0", ":", "\n", "            ", "left", ",", "right", "=", "0", ",", "height", "\n", "", "elif", "right", ">", "width", ":", "\n", "            ", "left", ",", "right", "=", "width", "-", "height", ",", "width", "\n", "", "image", "=", "image", ".", "crop", "(", "(", "left", ",", "0", ",", "right", ",", "height", ")", ")", "\n", "face", "=", "dlib", ".", "rectangle", "(", "face", ".", "left", "(", ")", "-", "left", ",", "face", ".", "top", "(", ")", ",", "\n", "face", ".", "right", "(", ")", "-", "left", ",", "face", ".", "bottom", "(", ")", ")", "\n", "", "elif", "width", "<", "height", ":", "\n", "        ", "top", "=", "int", "(", "center", ".", "y", "-", "width", "/", "2", ")", "\n", "bottom", "=", "int", "(", "center", ".", "y", "+", "width", "/", "2", ")", "\n", "if", "top", "<", "0", ":", "\n", "            ", "top", ",", "bottom", "=", "0", ",", "width", "\n", "", "elif", "bottom", ">", "height", ":", "\n", "            ", "top", ",", "bottom", "=", "height", "-", "width", ",", "height", "\n", "", "image", "=", "image", ".", "crop", "(", "(", "0", ",", "top", ",", "width", ",", "bottom", ")", ")", "\n", "face", "=", "dlib", ".", "rectangle", "(", "face", ".", "left", "(", ")", ",", "\n", "face", ".", "top", "(", ")", "-", "top", ",", "face", ".", "right", "(", ")", ",", "\n", "face", ".", "bottom", "(", ")", "-", "top", ")", "\n", "", "return", "image", ",", "face", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.dlibutils.dlib_utils.landmarks": [[118, 124], ["paddle.utils.try_import", "paddle.utils.download.get_weights_path_from_url", "paddle.utils.try_import.shape_predictor", "dlib.shape_predictor.parts", "numpy.array", "dlib.shape_predictor.", "numpy.asarray"], "function", ["None"], ["", "def", "landmarks", "(", "image", ":", "Image", ",", "face", ")", ":", "\n", "    ", "dlib", "=", "try_import", "(", "'dlib'", ")", "\n", "weight_path", "=", "get_weights_path_from_url", "(", "LANDMARKS_WEIGHT_URL", ")", "\n", "predictor", "=", "dlib", ".", "shape_predictor", "(", "weight_path", ")", "\n", "shape", "=", "predictor", "(", "np", ".", "asarray", "(", "image", ")", ",", "face", ")", ".", "parts", "(", ")", "\n", "return", "np", ".", "array", "(", "[", "[", "p", ".", "y", ",", "p", ".", "x", "]", "for", "p", "in", "shape", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.dlibutils.dlib_utils.crop_from_array": [[126, 168], ["paddle.utils.try_import", "dlib.rectangle.height", "dlib.rectangle.width", "int", "int", "int", "int", "paddle.utils.try_import.rectangle", "dlib.rectangle.center", "max", "max", "min", "min", "int", "int", "paddle.utils.try_import.rectangle", "dlib.rectangle.left", "dlib.rectangle.top", "dlib.rectangle.right", "dlib.rectangle.bottom", "dlib.rectangle.top", "dlib.rectangle.bottom", "int", "int", "paddle.utils.try_import.rectangle", "dlib.rectangle.left", "dlib.rectangle.top", "dlib.rectangle.right", "dlib.rectangle.bottom", "dlib.rectangle.left", "dlib.rectangle.right", "dlib.rectangle.left", "dlib.rectangle.right", "dlib.rectangle.top", "dlib.rectangle.bottom"], "function", ["None"], ["", "def", "crop_from_array", "(", "image", ":", "np", ".", "array", ",", "face", ")", ":", "\n", "    ", "dlib", "=", "try_import", "(", "'dlib'", ")", "\n", "ratio", "=", "0.20", "/", "0.85", "# delta_size / face_size", "\n", "height", ",", "width", "=", "image", ".", "shape", "[", ":", "2", "]", "\n", "face_height", "=", "face", ".", "height", "(", ")", "\n", "face_width", "=", "face", ".", "width", "(", ")", "\n", "delta_height", "=", "ratio", "*", "face_height", "\n", "delta_width", "=", "ratio", "*", "width", "\n", "\n", "img_left", "=", "int", "(", "max", "(", "0", ",", "face", ".", "left", "(", ")", "-", "delta_width", ")", ")", "\n", "img_top", "=", "int", "(", "max", "(", "0", ",", "face", ".", "top", "(", ")", "-", "delta_height", ")", ")", "\n", "img_right", "=", "int", "(", "min", "(", "width", ",", "face", ".", "right", "(", ")", "+", "delta_width", ")", ")", "\n", "img_bottom", "=", "int", "(", "min", "(", "height", ",", "face", ".", "bottom", "(", ")", "+", "delta_height", ")", ")", "\n", "image", "=", "image", "[", "img_top", ":", "img_bottom", ",", "img_left", ":", "img_right", "]", "\n", "face", "=", "dlib", ".", "rectangle", "(", "face", ".", "left", "(", ")", "-", "img_left", ",", "\n", "face", ".", "top", "(", ")", "-", "img_top", ",", "\n", "face", ".", "right", "(", ")", "-", "img_left", ",", "\n", "face", ".", "bottom", "(", ")", "-", "img_top", ")", "\n", "center", "=", "face", ".", "center", "(", ")", "\n", "height", ",", "width", "=", "image", ".", "shape", "[", ":", "2", "]", "\n", "if", "width", ">", "height", ":", "\n", "        ", "left", "=", "int", "(", "center", ".", "x", "-", "height", "/", "2", ")", "\n", "right", "=", "int", "(", "center", ".", "x", "+", "height", "/", "2", ")", "\n", "if", "left", "<", "0", ":", "\n", "            ", "left", ",", "right", "=", "0", ",", "height", "\n", "", "elif", "right", ">", "width", ":", "\n", "            ", "left", ",", "right", "=", "width", "-", "height", ",", "width", "\n", "", "image", "=", "image", "[", "0", ":", "height", ",", "left", ":", "right", "]", "\n", "face", "=", "dlib", ".", "rectangle", "(", "face", ".", "left", "(", ")", "-", "left", ",", "face", ".", "top", "(", ")", ",", "\n", "face", ".", "right", "(", ")", "-", "left", ",", "face", ".", "bottom", "(", ")", ")", "\n", "", "elif", "width", "<", "height", ":", "\n", "        ", "top", "=", "int", "(", "center", ".", "y", "-", "width", "/", "2", ")", "\n", "bottom", "=", "int", "(", "center", ".", "y", "+", "width", "/", "2", ")", "\n", "if", "top", "<", "0", ":", "\n", "            ", "top", ",", "bottom", "=", "0", ",", "width", "\n", "", "elif", "bottom", ">", "height", ":", "\n", "            ", "top", ",", "bottom", "=", "height", "-", "width", ",", "height", "\n", "", "image", "=", "image", "[", "top", ":", "bottom", ",", "0", ":", "width", "]", "\n", "face", "=", "dlib", ".", "rectangle", "(", "face", ".", "left", "(", ")", ",", "\n", "face", ".", "top", "(", ")", "-", "top", ",", "face", ".", "right", "(", ")", ",", "\n", "face", ".", "bottom", "(", ")", "-", "top", ")", "\n", "", "return", "image", ",", "face", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_enhancement.face_enhance.FaceEnhancement.__init__": [[28, 51], ["object.__init__", "ppgan.models.generators.GPEN", "face_enhance.FaceEnhancement.face_enhance.load_dict", "face_enhance.FaceEnhancement.face_enhance.eval", "numpy.zeros", "cv2.rectangle", "cv2.GaussianBlur", "cv2.GaussianBlur", "paddle.tile().numpy", "paddle.tile().numpy", "paddle.tile().numpy", "paddle.tile().numpy", "ppgan.utils.download.get_path_from_url", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.to_tensor().unsqueeze().unsqueeze", "paddle.to_tensor().unsqueeze().unsqueeze", "paddle.to_tensor().unsqueeze().unsqueeze", "paddle.to_tensor().unsqueeze().unsqueeze", "paddle.to_tensor().unsqueeze", "paddle.to_tensor().unsqueeze", "paddle.to_tensor().unsqueeze", "paddle.to_tensor().unsqueeze", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["    ", "def", "__init__", "(", "self", ",", "\n", "path_to_enhance", "=", "None", ",", "\n", "size", "=", "512", ",", "\n", "batch_size", "=", "1", "\n", ")", ":", "\n", "        ", "super", "(", "FaceEnhancement", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# Initialise the face detector", "\n", "if", "path_to_enhance", "is", "None", ":", "\n", "            ", "model_weights_path", "=", "get_path_from_url", "(", "GPEN_weights", ")", "\n", "model_weights", "=", "paddle", ".", "load", "(", "model_weights_path", ")", "\n", "", "else", ":", "\n", "            ", "model_weights", "=", "paddle", ".", "load", "(", "path_to_enhance", ")", "\n", "\n", "", "self", ".", "face_enhance", "=", "GPEN", "(", "size", "=", "512", ",", "style_dim", "=", "512", ",", "n_mlp", "=", "8", ")", "\n", "self", ".", "face_enhance", ".", "load_dict", "(", "model_weights", ")", "\n", "self", ".", "face_enhance", ".", "eval", "(", ")", "\n", "self", ".", "size", "=", "size", "\n", "self", ".", "mask", "=", "np", ".", "zeros", "(", "(", "512", ",", "512", ")", ",", "np", ".", "float32", ")", "\n", "cv2", ".", "rectangle", "(", "self", ".", "mask", ",", "(", "26", ",", "26", ")", ",", "(", "486", ",", "486", ")", ",", "(", "1", ",", "1", ",", "1", ")", ",", "-", "1", ",", "cv2", ".", "LINE_AA", ")", "\n", "self", ".", "mask", "=", "cv2", ".", "GaussianBlur", "(", "self", ".", "mask", ",", "(", "101", ",", "101", ")", ",", "11", ")", "\n", "self", ".", "mask", "=", "cv2", ".", "GaussianBlur", "(", "self", ".", "mask", ",", "(", "101", ",", "101", ")", ",", "11", ")", "\n", "self", ".", "mask", "=", "paddle", ".", "tile", "(", "paddle", ".", "to_tensor", "(", "self", ".", "mask", ")", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "repeat_times", "=", "[", "batch_size", ",", "1", ",", "1", ",", "3", "]", ")", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_enhancement.face_enhance.FaceEnhancement.enhance_from_image": [[53, 60], ["isinstance", "resize_and_crop_image", "paddle.to_tensor().transpose", "paddle.to_tensor().transpose", "paddle.to_tensor().transpose", "paddle.to_tensor().transpose", "face_enhance.FaceEnhancement.enhance_from_batch", "paddle.to_tensor().transpose.unsqueeze", "paddle.to_tensor().transpose.unsqueeze", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.utils.resize_and_crop_image", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_enhancement.face_enhance.FaceEnhancement.enhance_from_batch"], ["", "def", "enhance_from_image", "(", "self", ",", "img", ")", ":", "\n", "        ", "if", "isinstance", "(", "img", ",", "np", ".", "ndarray", ")", ":", "\n", "            ", "img", ",", "_", "=", "resize_and_crop_image", "(", "img", ",", "512", ")", "\n", "img", "=", "paddle", ".", "to_tensor", "(", "img", ")", ".", "transpose", "(", "[", "2", ",", "0", ",", "1", "]", ")", "\n", "", "else", ":", "\n", "            ", "assert", "img", ".", "shape", "==", "[", "3", ",", "512", ",", "512", "]", "\n", "", "return", "self", ".", "enhance_from_batch", "(", "img", ".", "unsqueeze", "(", "0", ")", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_enhancement.face_enhance.FaceEnhancement.enhance_from_batch": [[61, 79], ["isinstance", "image_tensor.transpose.transpose.transpose", "image_numpy.astype().cpu().numpy", "resize_and_crop_batch", "paddle.to_tensor().transpose", "paddle.to_tensor().transpose", "paddle.to_tensor().transpose", "paddle.to_tensor().transpose", "paddle.to_tensor().transpose.transpose().numpy", "paddle.to_tensor().transpose.transpose().numpy", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "face_enhance.FaceEnhancement.face_enhance", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "image_numpy.astype().cpu", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor().transpose.transpose", "paddle.to_tensor().transpose.transpose", "image_numpy.astype"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.utils.resize_and_crop_batch"], ["", "def", "enhance_from_batch", "(", "self", ",", "img", ")", ":", "\n", "        ", "if", "isinstance", "(", "img", ",", "np", ".", "ndarray", ")", ":", "\n", "            ", "img_ori", ",", "_", "=", "resize_and_crop_batch", "(", "img", ",", "512", ")", "\n", "img", "=", "paddle", ".", "to_tensor", "(", "img_ori", ")", ".", "transpose", "(", "[", "0", ",", "3", ",", "1", ",", "2", "]", ")", "\n", "", "else", ":", "\n", "            ", "assert", "img", ".", "shape", "[", "1", ":", "]", "==", "[", "3", ",", "512", ",", "512", "]", "\n", "img_ori", "=", "img", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", ".", "numpy", "(", ")", "\n", "", "img_t", "=", "(", "img", "/", "255.", "-", "0.5", ")", "/", "0.5", "\n", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "            ", "out", ",", "__", "=", "self", ".", "face_enhance", "(", "img_t", ")", "\n", "\n", "", "image_tensor", "=", "out", "*", "0.5", "+", "0.5", "\n", "image_tensor", "=", "image_tensor", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "# RGB", "\n", "image_numpy", "=", "paddle", ".", "clip", "(", "image_tensor", ",", "0", ",", "1", ")", "*", "255.0", "\n", "\n", "out", "=", "image_numpy", ".", "astype", "(", "np", ".", "uint8", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "out", "*", "self", ".", "mask", "+", "(", "1", "-", "self", ".", "mask", ")", "*", "img_ori", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.mask.face_parser.FaceParser.__init__": [[21, 51], ["paddle.utils.download.get_path_from_url", "paddle.utils.download.get_path_from_url", "model.BiSeNet", "paddle.Compose", "paddle.Compose", "os.split", "paddle.Normalize", "paddle.Normalize", "os.realpath"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url"], ["    ", "def", "__init__", "(", "self", ",", "device", "=", "\"cpu\"", ")", ":", "\n", "        ", "self", ".", "mapper", "=", "{", "\n", "0", ":", "0", ",", "\n", "1", ":", "1", ",", "\n", "2", ":", "2", ",", "\n", "3", ":", "3", ",", "\n", "4", ":", "4", ",", "\n", "5", ":", "5", ",", "\n", "6", ":", "0", ",", "\n", "7", ":", "11", ",", "\n", "8", ":", "12", ",", "\n", "9", ":", "0", ",", "\n", "10", ":", "6", ",", "\n", "11", ":", "8", ",", "\n", "12", ":", "7", ",", "\n", "13", ":", "9", ",", "\n", "14", ":", "13", ",", "\n", "15", ":", "0", ",", "\n", "16", ":", "0", ",", "\n", "17", ":", "10", ",", "\n", "18", ":", "0", "\n", "}", "\n", "#self.dict = paddle.to_tensor(mapper)", "\n", "self", ".", "save_pth", "=", "get_path_from_url", "(", "BISENET_WEIGHT_URL", ",", "\n", "osp", ".", "split", "(", "osp", ".", "realpath", "(", "__file__", ")", ")", "[", "0", "]", ")", "\n", "\n", "self", ".", "net", "=", "BiSeNet", "(", "n_classes", "=", "19", ")", "\n", "\n", "self", ".", "transforms", "=", "T", ".", "Compose", "(", "[", "\n", "T", ".", "Normalize", "(", "(", "0.485", ",", "0.456", ",", "0.406", ")", ",", "(", "0.229", ",", "0.224", ",", "0.225", ")", ")", ",", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.mask.face_parser.FaceParser.parse": [[53, 78], ["image.unsqueeze.unsqueeze.transpose", "face_parser.FaceParser.transforms", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "face_parser.FaceParser.net.set_dict", "face_parser.FaceParser.net.eval", "out.squeeze().argmax.numpy", "numpy.zeros", "range", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "image.unsqueeze.unsqueeze.unsqueeze", "out.squeeze().argmax", "range", "face_parser.FaceParser.net", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "out.squeeze"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval"], ["", "def", "parse", "(", "self", ",", "image", ")", ":", "\n", "        ", "assert", "image", ".", "shape", "[", ":", "2", "]", "==", "(", "512", ",", "512", ")", "\n", "image", "=", "image", "/", "255.0", "\n", "image", "=", "image", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "image", "=", "self", ".", "transforms", "(", "image", ")", "\n", "\n", "state_dict", "=", "paddle", ".", "load", "(", "self", ".", "save_pth", ")", "\n", "self", ".", "net", ".", "set_dict", "(", "state_dict", ")", "\n", "self", ".", "net", ".", "eval", "(", ")", "\n", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "            ", "image", "=", "paddle", ".", "to_tensor", "(", "image", ")", "\n", "image", "=", "image", ".", "unsqueeze", "(", "0", ")", "\n", "out", "=", "self", ".", "net", "(", "image", ")", "[", "0", "]", "\n", "parsing", "=", "out", ".", "squeeze", "(", "0", ")", ".", "argmax", "(", "0", ")", "#argmax(0).astype('float32')", "\n", "\n", "", "parse_np", "=", "parsing", ".", "numpy", "(", ")", "\n", "h", ",", "w", "=", "parse_np", ".", "shape", "\n", "result", "=", "np", ".", "zeros", "(", "(", "h", ",", "w", ")", ")", "\n", "for", "i", "in", "range", "(", "h", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "w", ")", ":", "\n", "                ", "result", "[", "i", "]", "[", "j", "]", "=", "self", ".", "mapper", "[", "parse_np", "[", "i", "]", "[", "j", "]", "]", "\n", "\n", "", "", "result", "=", "paddle", ".", "to_tensor", "(", "result", ")", ".", "astype", "(", "'float32'", ")", "\n", "return", "result", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.mask.model.ConvBNReLU.__init__": [[14, 31], ["super().__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_chan", ",", "\n", "out_chan", ",", "\n", "ks", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "*", "args", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "ConvBNReLU", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2D", "(", "in_chan", ",", "\n", "out_chan", ",", "\n", "kernel_size", "=", "ks", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2D", "(", "out_chan", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.mask.model.ConvBNReLU.forward": [[32, 37], ["model.ConvBNReLU.conv", "model.ConvBNReLU.bn", "model.ConvBNReLU.relu"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.mask.model.BiSeNetOutput.__init__": [[40, 47], ["super().__init__", "model.ConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_chan", ",", "mid_chan", ",", "n_classes", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "BiSeNetOutput", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "ConvBNReLU", "(", "in_chan", ",", "mid_chan", ",", "ks", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv_out", "=", "nn", ".", "Conv2D", "(", "mid_chan", ",", "\n", "n_classes", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.mask.model.BiSeNetOutput.forward": [[48, 52], ["model.BiSeNetOutput.conv", "model.BiSeNetOutput.conv_out"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "conv_out", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.mask.model.AttentionRefinementModule.__init__": [[55, 64], ["super().__init__", "model.ConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm", "paddle.BatchNorm", "paddle.BatchNorm", "paddle.Sigmoid", "paddle.Sigmoid", "paddle.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_chan", ",", "out_chan", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "AttentionRefinementModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "ConvBNReLU", "(", "in_chan", ",", "out_chan", ",", "ks", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv_atten", "=", "nn", ".", "Conv2D", "(", "out_chan", ",", "\n", "out_chan", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "bn_atten", "=", "nn", ".", "BatchNorm", "(", "out_chan", ")", "\n", "self", ".", "sigmoid_atten", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.mask.model.AttentionRefinementModule.forward": [[65, 73], ["model.AttentionRefinementModule.conv", "paddle.avg_pool2d", "paddle.avg_pool2d", "paddle.avg_pool2d", "model.AttentionRefinementModule.conv_atten", "model.AttentionRefinementModule.bn_atten", "model.AttentionRefinementModule.sigmoid_atten"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feat", "=", "self", ".", "conv", "(", "x", ")", "\n", "atten", "=", "F", ".", "avg_pool2d", "(", "feat", ",", "feat", ".", "shape", "[", "2", ":", "]", ")", "\n", "atten", "=", "self", ".", "conv_atten", "(", "atten", ")", "\n", "atten", "=", "self", ".", "bn_atten", "(", "atten", ")", "\n", "atten", "=", "self", ".", "sigmoid_atten", "(", "atten", ")", "\n", "out", "=", "feat", "*", "atten", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.mask.model.ContextPath.__init__": [[76, 84], ["super().__init__", "paddle.vision.models.resnet18", "paddle.vision.models.resnet18", "paddle.vision.models.resnet18", "model.AttentionRefinementModule", "model.AttentionRefinementModule", "model.ConvBNReLU", "model.ConvBNReLU", "model.ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "ContextPath", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "backbone", "=", "resnet18", "(", "pretrained", "=", "True", ")", "\n", "self", ".", "arm16", "=", "AttentionRefinementModule", "(", "256", ",", "128", ")", "\n", "self", ".", "arm32", "=", "AttentionRefinementModule", "(", "512", ",", "128", ")", "\n", "self", ".", "conv_head32", "=", "ConvBNReLU", "(", "128", ",", "128", ",", "ks", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv_head16", "=", "ConvBNReLU", "(", "128", ",", "128", ",", "ks", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv_avg", "=", "ConvBNReLU", "(", "512", ",", "128", ",", "ks", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.mask.model.ContextPath.backbone_forward": [[85, 95], ["model.ContextPath.backbone.conv1", "model.ContextPath.backbone.bn1", "model.ContextPath.backbone.relu", "model.ContextPath.backbone.maxpool", "model.ContextPath.backbone.layer1", "model.ContextPath.backbone.layer2", "model.ContextPath.backbone.layer3", "model.ContextPath.backbone.layer4"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu"], ["", "def", "backbone_forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "backbone", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "backbone", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "backbone", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "backbone", ".", "maxpool", "(", "x", ")", "\n", "x", "=", "self", ".", "backbone", ".", "layer1", "(", "x", ")", "\n", "c2", "=", "self", ".", "backbone", ".", "layer2", "(", "x", ")", "\n", "c3", "=", "self", ".", "backbone", ".", "layer3", "(", "c2", ")", "\n", "c4", "=", "self", ".", "backbone", ".", "layer4", "(", "c3", ")", "\n", "return", "c2", ",", "c3", ",", "c4", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.mask.model.ContextPath.forward": [[96, 118], ["model.ContextPath.backbone_forward", "paddle.avg_pool2d", "paddle.avg_pool2d", "paddle.avg_pool2d", "model.ContextPath.conv_avg", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "model.ContextPath.arm32", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "model.ContextPath.conv_head32", "model.ContextPath.arm16", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "model.ContextPath.conv_head16"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.mask.model.ContextPath.backbone_forward"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "H0", ",", "W0", "=", "x", ".", "shape", "[", "2", ":", "]", "\n", "feat8", ",", "feat16", ",", "feat32", "=", "self", ".", "backbone_forward", "(", "x", ")", "\n", "H8", ",", "W8", "=", "feat8", ".", "shape", "[", "2", ":", "]", "\n", "H16", ",", "W16", "=", "feat16", ".", "shape", "[", "2", ":", "]", "\n", "H32", ",", "W32", "=", "feat32", ".", "shape", "[", "2", ":", "]", "\n", "\n", "avg", "=", "F", ".", "avg_pool2d", "(", "feat32", ",", "feat32", ".", "shape", "[", "2", ":", "]", ")", "\n", "avg", "=", "self", ".", "conv_avg", "(", "avg", ")", "\n", "avg_up", "=", "F", ".", "interpolate", "(", "avg", ",", "size", "=", "(", "H32", ",", "W32", ")", ",", "mode", "=", "'nearest'", ")", "\n", "\n", "feat32_arm", "=", "self", ".", "arm32", "(", "feat32", ")", "\n", "feat32_sum", "=", "feat32_arm", "+", "avg_up", "\n", "feat32_up", "=", "F", ".", "interpolate", "(", "feat32_sum", ",", "size", "=", "(", "H16", ",", "W16", ")", ",", "mode", "=", "'nearest'", ")", "\n", "feat32_up", "=", "self", ".", "conv_head32", "(", "feat32_up", ")", "\n", "\n", "feat16_arm", "=", "self", ".", "arm16", "(", "feat16", ")", "\n", "feat16_sum", "=", "feat16_arm", "+", "feat32_up", "\n", "feat16_up", "=", "F", ".", "interpolate", "(", "feat16_sum", ",", "size", "=", "(", "H8", ",", "W8", ")", ",", "mode", "=", "'nearest'", ")", "\n", "feat16_up", "=", "self", ".", "conv_head16", "(", "feat16_up", ")", "\n", "\n", "return", "feat8", ",", "feat16_up", ",", "feat32_up", "# x8, x8, x16", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.mask.model.SpatialPath.__init__": [[121, 127], ["super().__init__", "model.ConvBNReLU", "model.ConvBNReLU", "model.ConvBNReLU", "model.ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "SpatialPath", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "ConvBNReLU", "(", "3", ",", "64", ",", "ks", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ")", "\n", "self", ".", "conv2", "=", "ConvBNReLU", "(", "64", ",", "64", ",", "ks", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv3", "=", "ConvBNReLU", "(", "64", ",", "64", ",", "ks", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv_out", "=", "ConvBNReLU", "(", "64", ",", "128", ",", "ks", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.mask.model.SpatialPath.forward": [[128, 134], ["model.SpatialPath.conv1", "model.SpatialPath.conv2", "model.SpatialPath.conv3", "model.SpatialPath.conv_out"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feat", "=", "self", ".", "conv1", "(", "x", ")", "\n", "feat", "=", "self", ".", "conv2", "(", "feat", ")", "\n", "feat", "=", "self", ".", "conv3", "(", "feat", ")", "\n", "feat", "=", "self", ".", "conv_out", "(", "feat", ")", "\n", "return", "feat", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.mask.model.FeatureFusionModule.__init__": [[137, 154], ["super().__init__", "model.ConvBNReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Sigmoid", "paddle.Sigmoid", "paddle.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_chan", ",", "out_chan", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "FeatureFusionModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "convblk", "=", "ConvBNReLU", "(", "in_chan", ",", "out_chan", ",", "ks", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2D", "(", "out_chan", ",", "\n", "out_chan", "//", "4", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2D", "(", "out_chan", "//", "4", ",", "\n", "out_chan", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.mask.model.FeatureFusionModule.forward": [[155, 166], ["paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "model.FeatureFusionModule.convblk", "paddle.avg_pool2d", "paddle.avg_pool2d", "paddle.avg_pool2d", "model.FeatureFusionModule.conv1", "model.FeatureFusionModule.relu", "model.FeatureFusionModule.conv2", "model.FeatureFusionModule.sigmoid"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu"], ["", "def", "forward", "(", "self", ",", "fsp", ",", "fcp", ")", ":", "\n", "        ", "fcat", "=", "paddle", ".", "concat", "(", "[", "fsp", ",", "fcp", "]", ",", "axis", "=", "1", ")", "\n", "feat", "=", "self", ".", "convblk", "(", "fcat", ")", "\n", "atten", "=", "F", ".", "avg_pool2d", "(", "feat", ",", "feat", ".", "shape", "[", "2", ":", "]", ")", "\n", "atten", "=", "self", ".", "conv1", "(", "atten", ")", "\n", "atten", "=", "self", ".", "relu", "(", "atten", ")", "\n", "atten", "=", "self", ".", "conv2", "(", "atten", ")", "\n", "atten", "=", "self", ".", "sigmoid", "(", "atten", ")", "\n", "feat_atten", "=", "feat", "*", "atten", "\n", "feat_out", "=", "feat_atten", "+", "feat", "\n", "return", "feat_out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.mask.model.BiSeNet.__init__": [[169, 176], ["super().__init__", "model.ContextPath", "model.FeatureFusionModule", "model.BiSeNetOutput", "model.BiSeNetOutput", "model.BiSeNetOutput"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_classes", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "BiSeNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cp", "=", "ContextPath", "(", ")", "\n", "self", ".", "ffm", "=", "FeatureFusionModule", "(", "256", ",", "256", ")", "\n", "self", ".", "conv_out", "=", "BiSeNetOutput", "(", "256", ",", "256", ",", "n_classes", ")", "\n", "self", ".", "conv_out16", "=", "BiSeNetOutput", "(", "128", ",", "64", ",", "n_classes", ")", "\n", "self", ".", "conv_out32", "=", "BiSeNetOutput", "(", "128", ",", "64", ",", "n_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.mask.model.BiSeNet.forward": [[177, 192], ["model.BiSeNet.cp", "model.BiSeNet.ffm", "model.BiSeNet.conv_out", "model.BiSeNet.conv_out16", "model.BiSeNet.conv_out32", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "H", ",", "W", "=", "x", ".", "shape", "[", "2", ":", "]", "\n", "feat_res8", ",", "feat_cp8", ",", "feat_cp16", "=", "self", ".", "cp", "(", "\n", "x", ")", "# here return res3b1 feature", "\n", "feat_sp", "=", "feat_res8", "# use res3b1 feature to replace spatial path feature", "\n", "feat_fuse", "=", "self", ".", "ffm", "(", "feat_sp", ",", "feat_cp8", ")", "\n", "\n", "feat_out", "=", "self", ".", "conv_out", "(", "feat_fuse", ")", "\n", "feat_out16", "=", "self", ".", "conv_out16", "(", "feat_cp8", ")", "\n", "feat_out32", "=", "self", ".", "conv_out32", "(", "feat_cp16", ")", "\n", "\n", "feat_out", "=", "F", ".", "interpolate", "(", "feat_out", ",", "size", "=", "(", "H", ",", "W", ")", ")", "\n", "feat_out16", "=", "F", ".", "interpolate", "(", "feat_out16", ",", "size", "=", "(", "H", ",", "W", ")", ")", "\n", "feat_out32", "=", "F", ".", "interpolate", "(", "feat_out32", ",", "size", "=", "(", "H", ",", "W", ")", ")", "\n", "return", "feat_out", ",", "feat_out16", ",", "feat_out32", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.api.NetworkSize.__new__": [[43, 47], ["object.__new__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.api.NetworkSize.__new__"], ["def", "__new__", "(", "cls", ",", "value", ")", ":", "\n", "        ", "member", "=", "object", ".", "__new__", "(", "cls", ")", "\n", "member", ".", "_value_", "=", "value", "\n", "return", "member", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.api.NetworkSize.__int__": [[48, 50], ["None"], "methods", ["None"], ["", "def", "__int__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.api.FaceAlignment.__init__": [[53, 70], ["int", "__import__", "__import__.FaceDetector", "globals", "locals"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "\n", "landmarks_type", ",", "\n", "network_size", "=", "NetworkSize", ".", "LARGE", ",", "\n", "flip_input", "=", "False", ",", "\n", "face_detector", "=", "'sfd'", ",", "\n", "verbose", "=", "False", ")", ":", "\n", "        ", "self", ".", "flip_input", "=", "flip_input", "\n", "self", ".", "landmarks_type", "=", "landmarks_type", "\n", "self", ".", "verbose", "=", "verbose", "\n", "\n", "network_size", "=", "int", "(", "network_size", ")", "\n", "\n", "# Get the face detector", "\n", "face_detector_module", "=", "__import__", "(", "\n", "'ppgan.faceutils.face_detection.detection.'", "+", "face_detector", ",", "\n", "globals", "(", ")", ",", "locals", "(", ")", ",", "[", "face_detector", "]", ",", "0", ")", "\n", "self", ".", "face_detector", "=", "face_detector_module", ".", "FaceDetector", "(", "verbose", "=", "verbose", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.api.FaceAlignment.get_detections_for_batch": [[71, 87], ["api.FaceAlignment.face_detector.detect_from_batch", "enumerate", "images.copy", "numpy.clip", "map", "results.append", "len", "results.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.blazeface_detector.BlazeFaceDetector.detect_from_batch", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "get_detections_for_batch", "(", "self", ",", "images", ")", ":", "\n", "        ", "images", "=", "images", "[", "...", ",", ":", ":", "-", "1", "]", "\n", "detected_faces", "=", "self", ".", "face_detector", ".", "detect_from_batch", "(", "images", ".", "copy", "(", ")", ")", "\n", "results", "=", "[", "]", "\n", "\n", "for", "i", ",", "d", "in", "enumerate", "(", "detected_faces", ")", ":", "\n", "            ", "if", "len", "(", "d", ")", "==", "0", ":", "\n", "                ", "results", ".", "append", "(", "None", ")", "\n", "continue", "\n", "", "d", "=", "d", "[", "0", "]", "\n", "d", "=", "np", ".", "clip", "(", "d", ",", "0", ",", "None", ")", "\n", "\n", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "map", "(", "int", ",", "d", "[", ":", "4", "]", ")", "\n", "results", ".", "append", "(", "(", "x1", ",", "y1", ",", "x2", ",", "y2", ")", ")", "\n", "\n", "", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.api.FaceAlignment.get_detections_for_image": [[88, 103], ["api.FaceAlignment.face_detector.detect_from_batch", "enumerate", "images.copy", "numpy.clip", "map", "results.append", "len", "results.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.blazeface_detector.BlazeFaceDetector.detect_from_batch", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "get_detections_for_image", "(", "self", ",", "images", ")", ":", "\n", "        ", "images", "=", "images", "[", "...", ",", ":", ":", "-", "1", "]", "\n", "detected_faces", "=", "self", ".", "face_detector", ".", "detect_from_batch", "(", "images", ".", "copy", "(", ")", ")", "\n", "results", "=", "[", "]", "\n", "\n", "for", "i", ",", "d", "in", "enumerate", "(", "detected_faces", "[", "0", "]", ")", ":", "\n", "            ", "if", "len", "(", "d", ")", "==", "0", ":", "\n", "                ", "results", ".", "append", "(", "None", ")", "\n", "continue", "\n", "", "d", "=", "np", ".", "clip", "(", "d", ",", "0", ",", "None", ")", "\n", "\n", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "map", "(", "int", ",", "d", "[", ":", "-", "1", "]", ")", "\n", "results", ".", "append", "(", "(", "x1", ",", "y1", ",", "x2", ",", "y2", ")", ")", "\n", "\n", "", "return", "results", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.utils.transform": [[8, 40], ["paddle.ones", "paddle.eye", "new_point.astype", "paddle.inverse", "paddle.matmul"], "function", ["None"], ["\n", "\n", "def", "write_pfm", "(", "path", ",", "image", ",", "scale", "=", "1", ")", ":", "\n", "    ", "\"\"\"Write pfm file.\n\n    Args:\n        path (str): pathto file\n        image (array): data\n        scale (int, optional): Scale. Defaults to 1.\n    \"\"\"", "\n", "\n", "with", "open", "(", "path", ",", "\"wb\"", ")", "as", "file", ":", "\n", "        ", "color", "=", "None", "\n", "\n", "if", "image", ".", "dtype", ".", "name", "!=", "\"float32\"", ":", "\n", "            ", "raise", "Exception", "(", "\"Image dtype must be float32.\"", ")", "\n", "\n", "", "image", "=", "np", ".", "flipud", "(", "image", ")", "\n", "\n", "if", "len", "(", "image", ".", "shape", ")", "==", "3", "and", "image", ".", "shape", "[", "2", "]", "==", "3", ":", "# color image", "\n", "            ", "color", "=", "True", "\n", "", "elif", "(", "len", "(", "image", ".", "shape", ")", "==", "2", "\n", "or", "len", "(", "image", ".", "shape", ")", "==", "3", "and", "image", ".", "shape", "[", "2", "]", "==", "1", ")", ":", "# greyscale", "\n", "            ", "color", "=", "False", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "\n", "\"Image must have H x W x 3, H x W x 1 or H x W dimensions.\"", ")", "\n", "\n", "", "file", ".", "write", "(", "\"PF\\n\"", "if", "color", "else", "\"Pf\\n\"", ".", "encode", "(", ")", ")", "\n", "file", ".", "write", "(", "\"%d %d\\n\"", ".", "encode", "(", ")", "%", "(", "image", ".", "shape", "[", "1", "]", ",", "image", ".", "shape", "[", "0", "]", ")", ")", "\n", "\n", "endian", "=", "image", ".", "dtype", ".", "byteorder", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.utils.crop": [[42, 79], ["utils.transform", "ul.numpy.numpy", "utils.transform", "br.numpy.numpy", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "cv2.resize", "numpy.array", "numpy.zeros", "numpy.array", "numpy.zeros", "max", "max", "max", "min", "max", "min", "min", "min", "int", "int"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.utils.transform", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.utils.transform", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize"], ["            ", "scale", "=", "-", "scale", "\n", "\n", "", "file", ".", "write", "(", "\"%f\\n\"", ".", "encode", "(", ")", "%", "scale", ")", "\n", "\n", "image", ".", "tofile", "(", "file", ")", "\n", "\n", "\n", "", "", "def", "read_image", "(", "path", ")", ":", "\n", "    ", "\"\"\"Read image and output RGB image (0-1).\n\n    Args:\n        path (str): path to file\n\n    Returns:\n        array: RGB image (0-1)\n    \"\"\"", "\n", "img", "=", "cv2", ".", "imread", "(", "path", ")", "\n", "if", "img", ".", "ndim", "==", "2", ":", "\n", "        ", "img", "=", "cv2", ".", "cvtColor", "(", "img", ",", "cv2", ".", "COLOR_GRAY2BGR", ")", "\n", "", "img", "=", "cv2", ".", "cvtColor", "(", "img", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "/", "255.0", "\n", "return", "img", "\n", "\n", "\n", "", "def", "write_depth", "(", "path", ",", "depth", ",", "bits", "=", "1", ")", ":", "\n", "    ", "\"\"\"Write depth map to pfm and png file.\n\n    Args:\n        path (str): filepath without extension\n        depth (array): depth\n    \"\"\"", "\n", "write_pfm", "(", "path", "+", "\".pfm\"", ",", "depth", ".", "astype", "(", "np", ".", "float32", ")", ")", "\n", "\n", "depth_min", "=", "depth", ".", "min", "(", ")", "\n", "depth_max", "=", "depth", ".", "max", "(", ")", "\n", "\n", "max_val", "=", "(", "2", "**", "(", "8", "*", "bits", ")", ")", "-", "1", "\n", "\n", "if", "depth_max", "-", "depth_min", ">", "np", ".", "finfo", "(", "\"float\"", ")", ".", "eps", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.detection.core.FaceDetector.__init__": [[31, 33], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "verbose", ")", ":", "\n", "        ", "self", ".", "verbose", "=", "verbose", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.detection.core.FaceDetector.detect_from_image": [[34, 55], ["None"], "methods", ["None"], ["", "def", "detect_from_image", "(", "self", ",", "tensor_or_path", ")", ":", "\n", "        ", "\"\"\"Detects faces in a given image.\n\n        This function detects the faces present in a provided BGR(usually)\n        image. The input can be either the image itself or the path to it.\n\n        Args:\n            tensor_or_path {numpy.ndarray, paddle.tensor or string} -- the path\n            to an image or the image itself.\n\n        Example::\n\n            >>> path_to_image = 'data/image_01.jpg'\n            ...   detected_faces = detect_from_image(path_to_image)\n            [A list of bounding boxes (x1, y1, x2, y2)]\n            >>> image = cv2.imread(path_to_image)\n            ...   detected_faces = detect_from_image(image)\n            [A list of bounding boxes (x1, y1, x2, y2)]\n\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.detection.core.FaceDetector.detect_from_directory": [[56, 112], ["tqdm.tqdm.tqdm", "logging.getLogger", "len", "logging.getLogger.info", "files.extend", "logging.getLogger.info", "logging.getLogger.info", "core.FaceDetector.detect_from_image", "logging.getLogger.info", "logging.getLogger.error", "glob.glob", "len", "logging.getLogger.info", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.extend", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.blazeface_detector.BlazeFaceDetector.detect_from_image"], ["", "def", "detect_from_directory", "(", "self", ",", "\n", "path", ",", "\n", "extensions", "=", "[", "'.jpg'", ",", "'.png'", "]", ",", "\n", "recursive", "=", "False", ",", "\n", "show_progress_bar", "=", "True", ")", ":", "\n", "        ", "\"\"\"Detects faces from all the images present in a given directory.\n\n        Ars:\n            path {string} -- a string containing a path that points to the folder containing the images\n            extensions {list} -- list of string containing the extensions to be\n            consider in the following format: ``.extension_name`` (default:\n            {['.jpg', '.png']}) recursive {bool} -- option wherever to scan the\n            folder recursively (default: {False}) show_progress_bar {bool} --\n            display a progressbar (default: {True})\n\n        Example:\n        >>> directory = 'data'\n        ...   detected_faces = detect_from_directory(directory)\n        {A dictionary of [lists containing bounding boxes(x1, y1, x2, y2)]}\n\n        \"\"\"", "\n", "if", "self", ".", "verbose", ":", "\n", "            ", "logger", "=", "logging", ".", "getLogger", "(", "__name__", ")", "\n", "\n", "", "if", "len", "(", "extensions", ")", "==", "0", ":", "\n", "            ", "if", "self", ".", "verbose", ":", "\n", "                ", "logger", ".", "error", "(", "\n", "\"Expected at list one extension, but none was received.\"", ")", "\n", "", "raise", "ValueError", "\n", "\n", "", "if", "self", ".", "verbose", ":", "\n", "            ", "logger", ".", "info", "(", "\"Constructing the list of images.\"", ")", "\n", "", "additional_pattern", "=", "'/**/*'", "if", "recursive", "else", "'/*'", "\n", "files", "=", "[", "]", "\n", "for", "extension", "in", "extensions", ":", "\n", "            ", "files", ".", "extend", "(", "\n", "glob", ".", "glob", "(", "path", "+", "additional_pattern", "+", "extension", ",", "\n", "recursive", "=", "recursive", ")", ")", "\n", "\n", "", "if", "self", ".", "verbose", ":", "\n", "            ", "logger", ".", "info", "(", "\"Finished searching for images. %s images found\"", ",", "\n", "len", "(", "files", ")", ")", "\n", "logger", ".", "info", "(", "\"Preparing to run the detection.\"", ")", "\n", "\n", "", "predictions", "=", "{", "}", "\n", "for", "image_path", "in", "tqdm", "(", "files", ",", "disable", "=", "not", "show_progress_bar", ")", ":", "\n", "            ", "if", "self", ".", "verbose", ":", "\n", "                ", "logger", ".", "info", "(", "\"Running the face detector on image: %s\"", ",", "\n", "image_path", ")", "\n", "", "predictions", "[", "image_path", "]", "=", "self", ".", "detect_from_image", "(", "image_path", ")", "\n", "\n", "", "if", "self", ".", "verbose", ":", "\n", "            ", "logger", ".", "info", "(", "\"The detector was successfully run on all %s images\"", ",", "\n", "len", "(", "files", ")", ")", "\n", "\n", "", "return", "predictions", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.detection.core.FaceDetector.reference_scale": [[113, 116], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "reference_scale", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.detection.core.FaceDetector.reference_x_shift": [[117, 120], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "reference_x_shift", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.detection.core.FaceDetector.reference_y_shift": [[121, 124], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "reference_y_shift", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.detection.core.FaceDetector.tensor_or_path_to_ndarray": [[125, 146], ["isinstance", "isinstance", "cv2.imread", "isinstance", "cv2.imread", "[].copy", "tensor_or_path.numpy", "tensor_or_path[].copy", "tensor_or_path.numpy"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.imread", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.imread"], ["", "@", "staticmethod", "\n", "def", "tensor_or_path_to_ndarray", "(", "tensor_or_path", ",", "rgb", "=", "True", ")", ":", "\n", "        ", "\"\"\"Convert path (represented as a string) or paddle.tensor to a numpy.ndarray\n\n        Args:\n            tensor_or_path {numpy.ndarray, paddle.tensor or string} -- path to the image, or the image itself\n        \"\"\"", "\n", "if", "isinstance", "(", "tensor_or_path", ",", "str", ")", ":", "\n", "            ", "return", "cv2", ".", "imread", "(", "tensor_or_path", ")", "if", "not", "rgb", "else", "cv2", ".", "imread", "(", "\n", "tensor_or_path", ")", "[", "...", ",", ":", ":", "-", "1", "]", "\n", "", "elif", "isinstance", "(", "\n", "tensor_or_path", ",", "\n", "(", "paddle", ".", "static", ".", "Variable", ",", "paddle", ".", "Tensor", ")", ")", ":", "\n", "# Call cpu in case its coming from cuda", "\n", "            ", "return", "tensor_or_path", ".", "numpy", "(", ")", "[", "\n", "...", ",", ":", ":", "-", "1", "]", ".", "copy", "(", ")", "if", "not", "rgb", "else", "tensor_or_path", ".", "numpy", "(", ")", "\n", "", "elif", "isinstance", "(", "tensor_or_path", ",", "np", ".", "ndarray", ")", ":", "\n", "            ", "return", "tensor_or_path", "[", "\n", "...", ",", ":", ":", "-", "1", "]", ".", "copy", "(", ")", "if", "not", "rgb", "else", "tensor_or_path", "\n", "", "else", ":", "\n", "            ", "raise", "TypeError", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.sfd.sfd_detector.SFDDetector.__init__": [[31, 44], ["core.FaceDetector.__init__", "net_s3fd.s3fd", "sfd_detector.SFDDetector.face_detector.load_dict", "sfd_detector.SFDDetector.face_detector.eval", "paddle.utils.download.get_weights_path_from_url", "paddle.load", "paddle.load"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["    ", "def", "__init__", "(", "self", ",", "path_to_detector", "=", "None", ",", "verbose", "=", "False", ")", ":", "\n", "        ", "super", "(", "SFDDetector", ",", "self", ")", ".", "__init__", "(", "verbose", ")", "\n", "\n", "# Initialise the face detector", "\n", "if", "path_to_detector", "is", "None", ":", "\n", "            ", "model_weights_path", "=", "get_weights_path_from_url", "(", "models_urls", "[", "'s3fd'", "]", ")", "\n", "model_weights", "=", "paddle", ".", "load", "(", "model_weights_path", ")", "\n", "", "else", ":", "\n", "            ", "model_weights", "=", "paddle", ".", "load", "(", "path_to_detector", ")", "\n", "\n", "", "self", ".", "face_detector", "=", "s3fd", "(", ")", "\n", "self", ".", "face_detector", ".", "load_dict", "(", "model_weights", ")", "\n", "self", ".", "face_detector", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.sfd.sfd_detector.SFDDetector.detect_from_image": [[45, 54], ["sfd_detector.SFDDetector.tensor_or_path_to_ndarray", "detect.detect.detect", "bbox.nms"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.detection.core.FaceDetector.tensor_or_path_to_ndarray", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.detect.detect", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.sfd.bbox.nms"], ["", "def", "detect_from_image", "(", "self", ",", "tensor_or_path", ")", ":", "\n", "        ", "image", "=", "self", ".", "tensor_or_path_to_ndarray", "(", "tensor_or_path", ")", "\n", "\n", "bboxlist", "=", "detect", "(", "self", ".", "face_detector", ",", "image", ")", "\n", "keep", "=", "nms", "(", "bboxlist", ",", "0.3", ")", "\n", "bboxlist", "=", "bboxlist", "[", "keep", ",", ":", "]", "\n", "bboxlist", "=", "[", "x", "for", "x", "in", "bboxlist", "if", "x", "[", "-", "1", "]", ">", "0.5", "]", "\n", "\n", "return", "bboxlist", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.sfd.sfd_detector.SFDDetector.detect_from_batch": [[55, 65], ["detect.detect.batch_detect", "bbox.nms", "range", "enumerate"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.detect.batch_detect", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.sfd.bbox.nms"], ["", "def", "detect_from_batch", "(", "self", ",", "images", ")", ":", "\n", "        ", "bboxlists", "=", "batch_detect", "(", "self", ".", "face_detector", ",", "images", ")", "\n", "keeps", "=", "[", "\n", "nms", "(", "bboxlists", "[", ":", ",", "i", ",", ":", "]", ",", "0.3", ")", "for", "i", "in", "range", "(", "bboxlists", ".", "shape", "[", "1", "]", ")", "\n", "]", "\n", "bboxlists", "=", "[", "bboxlists", "[", "keep", ",", "i", ",", ":", "]", "for", "i", ",", "keep", "in", "enumerate", "(", "keeps", ")", "]", "\n", "bboxlists", "=", "[", "[", "x", "for", "x", "in", "bboxlist", "if", "x", "[", "-", "1", "]", ">", "0.5", "]", "\n", "for", "bboxlist", "in", "bboxlists", "]", "\n", "\n", "return", "bboxlists", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.sfd.sfd_detector.SFDDetector.reference_scale": [[66, 69], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "reference_scale", "(", "self", ")", ":", "\n", "        ", "return", "195", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.sfd.sfd_detector.SFDDetector.reference_x_shift": [[70, 73], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "reference_x_shift", "(", "self", ")", ":", "\n", "        ", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.sfd.sfd_detector.SFDDetector.reference_y_shift": [[74, 77], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "reference_y_shift", "(", "self", ")", ":", "\n", "        ", "return", "0", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.sfd.bbox.bboxlog": [[33, 38], ["math.log", "math.log"], "function", ["None"], ["", "", "", "def", "bboxlog", "(", "x1", ",", "y1", ",", "x2", ",", "y2", ",", "axc", ",", "ayc", ",", "aww", ",", "ahh", ")", ":", "\n", "    ", "xc", ",", "yc", ",", "ww", ",", "hh", "=", "(", "x2", "+", "x1", ")", "/", "2", ",", "(", "y2", "+", "y1", ")", "/", "2", ",", "x2", "-", "x1", ",", "y2", "-", "y1", "\n", "dx", ",", "dy", "=", "(", "xc", "-", "axc", ")", "/", "aww", ",", "(", "yc", "-", "ayc", ")", "/", "ahh", "\n", "dw", ",", "dh", "=", "math", ".", "log", "(", "ww", "/", "aww", ")", ",", "math", ".", "log", "(", "hh", "/", "ahh", ")", "\n", "return", "dx", ",", "dy", ",", "dw", ",", "dh", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.sfd.bbox.bboxloginv": [[40, 45], ["math.exp", "math.exp"], "function", ["None"], ["", "def", "bboxloginv", "(", "dx", ",", "dy", ",", "dw", ",", "dh", ",", "axc", ",", "ayc", ",", "aww", ",", "ahh", ")", ":", "\n", "    ", "xc", ",", "yc", "=", "dx", "*", "aww", "+", "axc", ",", "dy", "*", "ahh", "+", "ayc", "\n", "ww", ",", "hh", "=", "math", ".", "exp", "(", "dw", ")", "*", "aww", ",", "math", ".", "exp", "(", "dh", ")", "*", "ahh", "\n", "x1", ",", "x2", ",", "y1", ",", "y2", "=", "xc", "-", "ww", "/", "2", ",", "xc", "+", "ww", "/", "2", ",", "yc", "-", "hh", "/", "2", ",", "yc", "+", "hh", "/", "2", "\n", "return", "x1", ",", "y1", ",", "x2", ",", "y2", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.sfd.bbox.nms": [[47, 71], ["len", "scores.argsort", "keep.append", "numpy.maximum", "numpy.maximum", "numpy.minimum", "numpy.minimum", "numpy.maximum", "numpy.maximum", "numpy.where"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "nms", "(", "dets", ",", "thresh", ")", ":", "\n", "    ", "if", "0", "==", "len", "(", "dets", ")", ":", "\n", "        ", "return", "[", "]", "\n", "", "x1", ",", "y1", ",", "x2", ",", "y2", ",", "scores", "=", "dets", "[", ":", ",", "0", "]", ",", "dets", "[", ":", ",", "1", "]", ",", "dets", "[", ":", ",", "2", "]", ",", "dets", "[", ":", ",", "3", "]", ",", "dets", "[", ":", ",", "4", "]", "\n", "areas", "=", "(", "x2", "-", "x1", "+", "1", ")", "*", "(", "y2", "-", "y1", "+", "1", ")", "\n", "order", "=", "scores", ".", "argsort", "(", ")", "[", ":", ":", "-", "1", "]", "\n", "\n", "keep", "=", "[", "]", "\n", "while", "order", ".", "size", ">", "0", ":", "\n", "        ", "i", "=", "order", "[", "0", "]", "\n", "keep", ".", "append", "(", "i", ")", "\n", "xx1", ",", "yy1", "=", "np", ".", "maximum", "(", "x1", "[", "i", "]", ",", "\n", "x1", "[", "order", "[", "1", ":", "]", "]", ")", ",", "np", ".", "maximum", "(", "y1", "[", "i", "]", ",", "y1", "[", "order", "[", "1", ":", "]", "]", ")", "\n", "xx2", ",", "yy2", "=", "np", ".", "minimum", "(", "x2", "[", "i", "]", ",", "\n", "x2", "[", "order", "[", "1", ":", "]", "]", ")", ",", "np", ".", "minimum", "(", "y2", "[", "i", "]", ",", "y2", "[", "order", "[", "1", ":", "]", "]", ")", "\n", "\n", "w", ",", "h", "=", "np", ".", "maximum", "(", "0.0", ",", "xx2", "-", "xx1", "+", "1", ")", ",", "np", ".", "maximum", "(", "0.0", ",", "yy2", "-", "yy1", "+", "1", ")", "\n", "ovr", "=", "w", "*", "h", "/", "(", "areas", "[", "i", "]", "+", "areas", "[", "order", "[", "1", ":", "]", "]", "-", "w", "*", "h", ")", "\n", "\n", "inds", "=", "np", ".", "where", "(", "ovr", "<=", "thresh", ")", "[", "0", "]", "\n", "order", "=", "order", "[", "inds", "+", "1", "]", "\n", "\n", "", "return", "keep", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.sfd.bbox.encode": [[73, 95], ["paddle.concat", "paddle.log"], "function", ["None"], ["", "def", "encode", "(", "matched", ",", "priors", ",", "variances", ")", ":", "\n", "    ", "\"\"\"Encode the variances from the priorbox layers into the ground truth boxes\n    we have matched (based on jaccard overlap) with the prior boxes.\n    Args:\n        matched: (tensor) Coords of ground truth for each prior in point-form\n            Shape: [num_priors, 4].\n        priors: (tensor) Prior boxes in center-offset form\n            Shape: [num_priors,4].\n        variances: (list[float]) Variances of priorboxes\n    Return:\n        encoded boxes (tensor), Shape: [num_priors, 4]\n    \"\"\"", "\n", "\n", "# dist b/t match center and prior's center", "\n", "g_cxcy", "=", "(", "matched", "[", ":", ",", ":", "2", "]", "+", "matched", "[", ":", ",", "2", ":", "]", ")", "/", "2", "-", "priors", "[", ":", ",", ":", "2", "]", "\n", "# encode variance", "\n", "g_cxcy", "/=", "(", "variances", "[", "0", "]", "*", "priors", "[", ":", ",", "2", ":", "]", ")", "\n", "# match wh / prior wh", "\n", "g_wh", "=", "(", "matched", "[", ":", ",", "2", ":", "]", "-", "matched", "[", ":", ",", ":", "2", "]", ")", "/", "priors", "[", ":", ",", "2", ":", "]", "\n", "g_wh", "=", "paddle", ".", "log", "(", "g_wh", ")", "/", "variances", "[", "1", "]", "\n", "# return target for smooth_l1_loss", "\n", "return", "paddle", ".", "concat", "(", "[", "g_cxcy", ",", "g_wh", "]", ",", "1", ")", "# [num_priors,4]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.sfd.bbox.decode": [[97, 116], ["paddle.concat", "paddle.exp"], "function", ["None"], ["", "def", "decode", "(", "loc", ",", "priors", ",", "variances", ")", ":", "\n", "    ", "\"\"\"Decode locations from predictions using priors to undo\n    the encoding we did for offset regression at train time.\n    Args:\n        loc (tensor): location predictions for loc layers,\n            Shape: [num_priors,4]\n        priors (tensor): Prior boxes in center-offset form.\n            Shape: [num_priors,4].\n        variances: (list[float]) Variances of priorboxes\n    Return:\n        decoded bounding box predictions\n    \"\"\"", "\n", "\n", "boxes", "=", "paddle", ".", "concat", "(", "\n", "(", "priors", "[", ":", ",", ":", "2", "]", "+", "loc", "[", ":", ",", ":", "2", "]", "*", "variances", "[", "0", "]", "*", "priors", "[", ":", ",", "2", ":", "]", ",", "\n", "priors", "[", ":", ",", "2", ":", "]", "*", "paddle", ".", "exp", "(", "loc", "[", ":", ",", "2", ":", "]", "*", "variances", "[", "1", "]", ")", ")", ",", "1", ")", "\n", "boxes", "[", ":", ",", ":", "2", "]", "-=", "boxes", "[", ":", ",", "2", ":", "]", "/", "2", "\n", "boxes", "[", ":", ",", "2", ":", "]", "+=", "boxes", "[", ":", ",", ":", "2", "]", "\n", "return", "boxes", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.sfd.bbox.batch_decode": [[118, 137], ["paddle.concat", "paddle.exp"], "function", ["None"], ["", "def", "batch_decode", "(", "loc", ",", "priors", ",", "variances", ")", ":", "\n", "    ", "\"\"\"Decode locations from predictions using priors to undo\n    the encoding we did for offset regression at train time.\n    Args:\n        loc (tensor): location predictions for loc layers,\n            Shape: [num_priors,4]\n        priors (tensor): Prior boxes in center-offset form.\n            Shape: [num_priors,4].\n        variances: (list[float]) Variances of priorboxes\n    Return:\n        decoded bounding box predictions\n    \"\"\"", "\n", "\n", "boxes", "=", "paddle", ".", "concat", "(", "\n", "(", "priors", "[", ":", ",", ":", ",", ":", "2", "]", "+", "loc", "[", ":", ",", ":", ",", ":", "2", "]", "*", "variances", "[", "0", "]", "*", "priors", "[", ":", ",", ":", ",", "2", ":", "]", ",", "\n", "priors", "[", ":", ",", ":", ",", "2", ":", "]", "*", "paddle", ".", "exp", "(", "loc", "[", ":", ",", ":", ",", "2", ":", "]", "*", "variances", "[", "1", "]", ")", ")", ",", "2", ")", "\n", "boxes", "[", ":", ",", ":", ",", ":", "2", "]", "-=", "boxes", "[", ":", ",", ":", ",", "2", ":", "]", "/", "2", "\n", "boxes", "[", ":", ",", ":", ",", "2", ":", "]", "+=", "boxes", "[", ":", ",", ":", ",", ":", "2", "]", "\n", "return", "boxes", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.sfd.net_s3fd.L2Norm.__init__": [[21, 29], ["paddle.Layer.__init__", "paddle.create_parameter", "paddle.create_parameter", "paddle.create_parameter", "paddle.create_parameter", "paddle.create_parameter", "paddle.create_parameter", "paddle.create_parameter", "paddle.create_parameter", "paddle.create_parameter", "net_s3fd.L2Norm.weight.set_value", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_channels", ",", "scale", "=", "1.0", ")", ":", "\n", "        ", "super", "(", "L2Norm", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_channels", "=", "n_channels", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "eps", "=", "1e-10", "\n", "self", ".", "weight", "=", "paddle", ".", "create_parameter", "(", "shape", "=", "[", "self", ".", "n_channels", "]", ",", "\n", "dtype", "=", "'float32'", ")", "\n", "self", ".", "weight", ".", "set_value", "(", "paddle", ".", "zeros", "(", "[", "self", ".", "n_channels", "]", ")", "+", "self", ".", "scale", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.sfd.net_s3fd.L2Norm.forward": [[30, 34], ["x.pow().sum().sqrt", "net_s3fd.L2Norm.weight.reshape", "x.pow().sum", "x.pow"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "norm", "=", "x", ".", "pow", "(", "2", ")", ".", "sum", "(", "axis", "=", "1", ",", "keepdim", "=", "True", ")", ".", "sqrt", "(", ")", "+", "self", ".", "eps", "\n", "x", "=", "x", "/", "norm", "*", "self", ".", "weight", ".", "reshape", "(", "[", "1", ",", "-", "1", ",", "1", ",", "1", "]", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.sfd.net_s3fd.s3fd.__init__": [[37, 131], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "net_s3fd.L2Norm", "net_s3fd.L2Norm", "net_s3fd.L2Norm", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "s3fd", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1_1", "=", "nn", ".", "Conv2D", "(", "3", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv1_2", "=", "nn", ".", "Conv2D", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "conv2_1", "=", "nn", ".", "Conv2D", "(", "64", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv2_2", "=", "nn", ".", "Conv2D", "(", "128", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "conv3_1", "=", "nn", ".", "Conv2D", "(", "128", ",", "256", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv3_2", "=", "nn", ".", "Conv2D", "(", "256", ",", "256", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv3_3", "=", "nn", ".", "Conv2D", "(", "256", ",", "256", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "conv4_1", "=", "nn", ".", "Conv2D", "(", "256", ",", "512", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv4_2", "=", "nn", ".", "Conv2D", "(", "512", ",", "512", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv4_3", "=", "nn", ".", "Conv2D", "(", "512", ",", "512", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "conv5_1", "=", "nn", ".", "Conv2D", "(", "512", ",", "512", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv5_2", "=", "nn", ".", "Conv2D", "(", "512", ",", "512", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv5_3", "=", "nn", ".", "Conv2D", "(", "512", ",", "512", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "fc6", "=", "nn", ".", "Conv2D", "(", "512", ",", "1024", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "3", ")", "\n", "self", ".", "fc7", "=", "nn", ".", "Conv2D", "(", "1024", ",", "1024", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "\n", "self", ".", "conv6_1", "=", "nn", ".", "Conv2D", "(", "1024", ",", "256", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "conv6_2", "=", "nn", ".", "Conv2D", "(", "256", ",", "512", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "conv7_1", "=", "nn", ".", "Conv2D", "(", "512", ",", "128", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "conv7_2", "=", "nn", ".", "Conv2D", "(", "128", ",", "256", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "conv3_3_norm", "=", "L2Norm", "(", "256", ",", "scale", "=", "10", ")", "\n", "self", ".", "conv4_3_norm", "=", "L2Norm", "(", "512", ",", "scale", "=", "8", ")", "\n", "self", ".", "conv5_3_norm", "=", "L2Norm", "(", "512", ",", "scale", "=", "5", ")", "\n", "\n", "self", ".", "conv3_3_norm_mbox_conf", "=", "nn", ".", "Conv2D", "(", "256", ",", "\n", "4", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "self", ".", "conv3_3_norm_mbox_loc", "=", "nn", ".", "Conv2D", "(", "256", ",", "\n", "4", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "self", ".", "conv4_3_norm_mbox_conf", "=", "nn", ".", "Conv2D", "(", "512", ",", "\n", "2", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "self", ".", "conv4_3_norm_mbox_loc", "=", "nn", ".", "Conv2D", "(", "512", ",", "\n", "4", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "self", ".", "conv5_3_norm_mbox_conf", "=", "nn", ".", "Conv2D", "(", "512", ",", "\n", "2", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "self", ".", "conv5_3_norm_mbox_loc", "=", "nn", ".", "Conv2D", "(", "512", ",", "\n", "4", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "\n", "self", ".", "fc7_mbox_conf", "=", "nn", ".", "Conv2D", "(", "1024", ",", "\n", "2", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "self", ".", "fc7_mbox_loc", "=", "nn", ".", "Conv2D", "(", "1024", ",", "\n", "4", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "self", ".", "conv6_2_mbox_conf", "=", "nn", ".", "Conv2D", "(", "512", ",", "\n", "2", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "self", ".", "conv6_2_mbox_loc", "=", "nn", ".", "Conv2D", "(", "512", ",", "\n", "4", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "self", ".", "conv7_2_mbox_conf", "=", "nn", ".", "Conv2D", "(", "256", ",", "\n", "2", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "self", ".", "conv7_2_mbox_loc", "=", "nn", ".", "Conv2D", "(", "256", ",", "\n", "4", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.sfd.net_s3fd.s3fd.forward": [[132, 195], ["paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.max_pool2d", "paddle.max_pool2d", "paddle.max_pool2d", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.max_pool2d", "paddle.max_pool2d", "paddle.max_pool2d", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.max_pool2d", "paddle.max_pool2d", "paddle.max_pool2d", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.max_pool2d", "paddle.max_pool2d", "paddle.max_pool2d", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.max_pool2d", "paddle.max_pool2d", "paddle.max_pool2d", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "net_s3fd.s3fd.conv3_3_norm", "net_s3fd.s3fd.conv4_3_norm", "net_s3fd.s3fd.conv5_3_norm", "net_s3fd.s3fd.conv3_3_norm_mbox_conf", "net_s3fd.s3fd.conv3_3_norm_mbox_loc", "net_s3fd.s3fd.conv4_3_norm_mbox_conf", "net_s3fd.s3fd.conv4_3_norm_mbox_loc", "net_s3fd.s3fd.conv5_3_norm_mbox_conf", "net_s3fd.s3fd.conv5_3_norm_mbox_loc", "net_s3fd.s3fd.fc7_mbox_conf", "net_s3fd.s3fd.fc7_mbox_loc", "net_s3fd.s3fd.conv6_2_mbox_conf", "net_s3fd.s3fd.conv6_2_mbox_loc", "net_s3fd.s3fd.conv7_2_mbox_conf", "net_s3fd.s3fd.conv7_2_mbox_loc", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "net_s3fd.s3fd.conv1_1", "net_s3fd.s3fd.conv1_2", "net_s3fd.s3fd.conv2_1", "net_s3fd.s3fd.conv2_2", "net_s3fd.s3fd.conv3_1", "net_s3fd.s3fd.conv3_2", "net_s3fd.s3fd.conv3_3", "net_s3fd.s3fd.conv4_1", "net_s3fd.s3fd.conv4_2", "net_s3fd.s3fd.conv4_3", "net_s3fd.s3fd.conv5_1", "net_s3fd.s3fd.conv5_2", "net_s3fd.s3fd.conv5_3", "net_s3fd.s3fd.fc6", "net_s3fd.s3fd.fc7", "net_s3fd.s3fd.conv6_1", "net_s3fd.s3fd.conv6_2", "net_s3fd.s3fd.conv7_1", "net_s3fd.s3fd.conv7_2"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "h", "=", "F", ".", "relu", "(", "self", ".", "conv1_1", "(", "x", ")", ")", "\n", "h", "=", "F", ".", "relu", "(", "self", ".", "conv1_2", "(", "h", ")", ")", "\n", "h", "=", "F", ".", "max_pool2d", "(", "h", ",", "2", ",", "2", ")", "\n", "\n", "h", "=", "F", ".", "relu", "(", "self", ".", "conv2_1", "(", "h", ")", ")", "\n", "h", "=", "F", ".", "relu", "(", "self", ".", "conv2_2", "(", "h", ")", ")", "\n", "h", "=", "F", ".", "max_pool2d", "(", "h", ",", "2", ",", "2", ")", "\n", "\n", "h", "=", "F", ".", "relu", "(", "self", ".", "conv3_1", "(", "h", ")", ")", "\n", "h", "=", "F", ".", "relu", "(", "self", ".", "conv3_2", "(", "h", ")", ")", "\n", "h", "=", "F", ".", "relu", "(", "self", ".", "conv3_3", "(", "h", ")", ")", "\n", "f3_3", "=", "h", "\n", "h", "=", "F", ".", "max_pool2d", "(", "h", ",", "2", ",", "2", ")", "\n", "\n", "h", "=", "F", ".", "relu", "(", "self", ".", "conv4_1", "(", "h", ")", ")", "\n", "h", "=", "F", ".", "relu", "(", "self", ".", "conv4_2", "(", "h", ")", ")", "\n", "h", "=", "F", ".", "relu", "(", "self", ".", "conv4_3", "(", "h", ")", ")", "\n", "f4_3", "=", "h", "\n", "h", "=", "F", ".", "max_pool2d", "(", "h", ",", "2", ",", "2", ")", "\n", "\n", "h", "=", "F", ".", "relu", "(", "self", ".", "conv5_1", "(", "h", ")", ")", "\n", "h", "=", "F", ".", "relu", "(", "self", ".", "conv5_2", "(", "h", ")", ")", "\n", "h", "=", "F", ".", "relu", "(", "self", ".", "conv5_3", "(", "h", ")", ")", "\n", "f5_3", "=", "h", "\n", "h", "=", "F", ".", "max_pool2d", "(", "h", ",", "2", ",", "2", ")", "\n", "\n", "h", "=", "F", ".", "relu", "(", "self", ".", "fc6", "(", "h", ")", ")", "\n", "h", "=", "F", ".", "relu", "(", "self", ".", "fc7", "(", "h", ")", ")", "\n", "ffc7", "=", "h", "\n", "h", "=", "F", ".", "relu", "(", "self", ".", "conv6_1", "(", "h", ")", ")", "\n", "h", "=", "F", ".", "relu", "(", "self", ".", "conv6_2", "(", "h", ")", ")", "\n", "f6_2", "=", "h", "\n", "h", "=", "F", ".", "relu", "(", "self", ".", "conv7_1", "(", "h", ")", ")", "\n", "h", "=", "F", ".", "relu", "(", "self", ".", "conv7_2", "(", "h", ")", ")", "\n", "f7_2", "=", "h", "\n", "\n", "f3_3", "=", "self", ".", "conv3_3_norm", "(", "f3_3", ")", "\n", "f4_3", "=", "self", ".", "conv4_3_norm", "(", "f4_3", ")", "\n", "f5_3", "=", "self", ".", "conv5_3_norm", "(", "f5_3", ")", "\n", "\n", "cls1", "=", "self", ".", "conv3_3_norm_mbox_conf", "(", "f3_3", ")", "\n", "reg1", "=", "self", ".", "conv3_3_norm_mbox_loc", "(", "f3_3", ")", "\n", "cls2", "=", "self", ".", "conv4_3_norm_mbox_conf", "(", "f4_3", ")", "\n", "reg2", "=", "self", ".", "conv4_3_norm_mbox_loc", "(", "f4_3", ")", "\n", "cls3", "=", "self", ".", "conv5_3_norm_mbox_conf", "(", "f5_3", ")", "\n", "reg3", "=", "self", ".", "conv5_3_norm_mbox_loc", "(", "f5_3", ")", "\n", "cls4", "=", "self", ".", "fc7_mbox_conf", "(", "ffc7", ")", "\n", "reg4", "=", "self", ".", "fc7_mbox_loc", "(", "ffc7", ")", "\n", "cls5", "=", "self", ".", "conv6_2_mbox_conf", "(", "f6_2", ")", "\n", "reg5", "=", "self", ".", "conv6_2_mbox_loc", "(", "f6_2", ")", "\n", "cls6", "=", "self", ".", "conv7_2_mbox_conf", "(", "f7_2", ")", "\n", "reg6", "=", "self", ".", "conv7_2_mbox_loc", "(", "f7_2", ")", "\n", "\n", "# max-out background label", "\n", "chunk", "=", "paddle", ".", "chunk", "(", "cls1", ",", "4", ",", "1", ")", "\n", "tmp_max", "=", "paddle", ".", "where", "(", "chunk", "[", "0", "]", ">", "chunk", "[", "1", "]", ",", "chunk", "[", "0", "]", ",", "chunk", "[", "1", "]", ")", "\n", "bmax", "=", "paddle", ".", "where", "(", "tmp_max", ">", "chunk", "[", "2", "]", ",", "tmp_max", ",", "chunk", "[", "2", "]", ")", "\n", "cls1", "=", "paddle", ".", "concat", "(", "[", "bmax", ",", "chunk", "[", "3", "]", "]", ",", "axis", "=", "1", ")", "\n", "\n", "return", "[", "\n", "cls1", ",", "reg1", ",", "cls2", ",", "reg2", ",", "cls3", ",", "reg3", ",", "cls4", ",", "reg4", ",", "cls5", ",", "reg5", ",", "cls6", ",", "\n", "reg6", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.sfd.detect.detect": [[33, 67], ["paddle.to_tensor().astype.transpose", "paddle.to_tensor().astype.reshape", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "range", "range", "numpy.array", "numpy.array", "paddle.no_grad", "paddle.no_grad", "net", "paddle.softmax", "zip", "len", "numpy.zeros", "paddle.to_tensor", "paddle.to_tensor", "len", "len", "[].reshape", "paddle.to_tensor", "paddle.to_tensor", "bbox.decode", "np.zeros.append", "numpy.where", "ocls.numpy", "paddle.to_tensor", "paddle.to_tensor", "oreg.numpy", "ocls.numpy"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.sfd.bbox.decode", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["def", "detect", "(", "net", ",", "img", ")", ":", "\n", "    ", "img", "=", "img", "-", "np", ".", "array", "(", "[", "104", ",", "117", ",", "123", "]", ")", "\n", "img", "=", "img", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n", "img", "=", "img", ".", "reshape", "(", "(", "1", ",", ")", "+", "img", ".", "shape", ")", "\n", "\n", "img", "=", "paddle", ".", "to_tensor", "(", "img", ")", ".", "astype", "(", "'float32'", ")", "\n", "BB", ",", "CC", ",", "HH", ",", "WW", "=", "img", ".", "shape", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "        ", "olist", "=", "net", "(", "img", ")", "\n", "\n", "", "bboxlist", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "olist", ")", "//", "2", ")", ":", "\n", "        ", "olist", "[", "i", "*", "2", "]", "=", "F", ".", "softmax", "(", "olist", "[", "i", "*", "2", "]", ",", "axis", "=", "1", ")", "\n", "", "for", "i", "in", "range", "(", "len", "(", "olist", ")", "//", "2", ")", ":", "\n", "        ", "ocls", ",", "oreg", "=", "olist", "[", "i", "*", "2", "]", ",", "olist", "[", "i", "*", "2", "+", "1", "]", "\n", "FB", ",", "FC", ",", "FH", ",", "FW", "=", "ocls", ".", "shape", "# feature map size", "\n", "stride", "=", "2", "**", "(", "i", "+", "2", ")", "# 4,8,16,32,64,128", "\n", "anchor", "=", "stride", "*", "4", "\n", "poss", "=", "zip", "(", "*", "np", ".", "where", "(", "ocls", ".", "numpy", "(", ")", "[", ":", ",", "1", ",", ":", ",", ":", "]", ">", "0.05", ")", ")", "\n", "for", "Iindex", ",", "hindex", ",", "windex", "in", "poss", ":", "\n", "            ", "axc", ",", "ayc", "=", "stride", "/", "2", "+", "windex", "*", "stride", ",", "stride", "/", "2", "+", "hindex", "*", "stride", "\n", "score", "=", "ocls", ".", "numpy", "(", ")", "[", "0", ",", "1", ",", "hindex", ",", "windex", "]", "\n", "loc", "=", "oreg", ".", "numpy", "(", ")", "[", "0", ",", ":", ",", "hindex", ",", "windex", "]", ".", "reshape", "(", "1", ",", "4", ")", "\n", "priors", "=", "paddle", ".", "to_tensor", "(", "\n", "[", "[", "axc", "/", "1.0", ",", "ayc", "/", "1.0", ",", "stride", "*", "4", "/", "1.0", ",", "stride", "*", "4", "/", "1.0", "]", "]", ")", "\n", "variances", "=", "[", "0.1", ",", "0.2", "]", "\n", "box", "=", "decode", "(", "paddle", ".", "to_tensor", "(", "loc", ")", ",", "priors", ",", "variances", ")", "\n", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "box", "[", "0", "]", "*", "1.0", "\n", "bboxlist", ".", "append", "(", "[", "x1", ",", "y1", ",", "x2", ",", "y2", ",", "score", "]", ")", "\n", "", "", "bboxlist", "=", "np", ".", "array", "(", "bboxlist", ")", "\n", "if", "0", "==", "len", "(", "bboxlist", ")", ":", "\n", "        ", "bboxlist", "=", "np", ".", "zeros", "(", "(", "1", ",", "5", ")", ")", "\n", "\n", "", "return", "bboxlist", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.sfd.detect.batch_detect": [[69, 105], ["paddle.to_tensor().astype.transpose", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "range", "range", "numpy.array", "numpy.array", "paddle.no_grad", "paddle.no_grad", "net", "paddle.softmax", "zip", "len", "numpy.zeros", "paddle.to_tensor", "paddle.to_tensor", "len", "len", "[].reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "bbox.batch_decode", "np.zeros.append", "numpy.where", "ocls.numpy", "paddle.to_tensor", "paddle.to_tensor", "paddle.concat().numpy", "paddle.concat().numpy", "paddle.to_tensor", "paddle.to_tensor", "oreg.numpy", "paddle.concat", "paddle.concat", "ocls.numpy", "paddle.to_tensor().unsqueeze", "paddle.to_tensor().unsqueeze", "paddle.to_tensor", "paddle.to_tensor"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.sfd.bbox.batch_decode", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "batch_detect", "(", "net", ",", "imgs", ")", ":", "\n", "    ", "imgs", "=", "imgs", "-", "np", ".", "array", "(", "[", "104", ",", "117", ",", "123", "]", ")", "\n", "imgs", "=", "imgs", ".", "transpose", "(", "0", ",", "3", ",", "1", ",", "2", ")", "\n", "\n", "imgs", "=", "paddle", ".", "to_tensor", "(", "imgs", ")", ".", "astype", "(", "'float32'", ")", "\n", "BB", ",", "CC", ",", "HH", ",", "WW", "=", "imgs", ".", "shape", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "        ", "olist", "=", "net", "(", "imgs", ")", "\n", "\n", "", "bboxlist", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "olist", ")", "//", "2", ")", ":", "\n", "        ", "olist", "[", "i", "*", "2", "]", "=", "F", ".", "softmax", "(", "olist", "[", "i", "*", "2", "]", ",", "axis", "=", "1", ")", "\n", "", "for", "i", "in", "range", "(", "len", "(", "olist", ")", "//", "2", ")", ":", "\n", "        ", "ocls", ",", "oreg", "=", "olist", "[", "i", "*", "2", "]", ",", "olist", "[", "i", "*", "2", "+", "1", "]", "\n", "FB", ",", "FC", ",", "FH", ",", "FW", "=", "ocls", ".", "shape", "# feature map size", "\n", "stride", "=", "2", "**", "(", "i", "+", "2", ")", "# 4,8,16,32,64,128", "\n", "anchor", "=", "stride", "*", "4", "\n", "poss", "=", "zip", "(", "*", "np", ".", "where", "(", "ocls", ".", "numpy", "(", ")", "[", ":", ",", "1", ",", ":", ",", ":", "]", ">", "0.05", ")", ")", "\n", "for", "Iindex", ",", "hindex", ",", "windex", "in", "poss", ":", "\n", "            ", "axc", ",", "ayc", "=", "stride", "/", "2", "+", "windex", "*", "stride", ",", "stride", "/", "2", "+", "hindex", "*", "stride", "\n", "score", "=", "ocls", ".", "numpy", "(", ")", "[", ":", ",", "1", ",", "hindex", ",", "windex", "]", "\n", "loc", "=", "oreg", ".", "numpy", "(", ")", "[", ":", ",", ":", ",", "hindex", ",", "windex", "]", ".", "reshape", "(", "BB", ",", "1", ",", "4", ")", "\n", "priors", "=", "paddle", ".", "to_tensor", "(", "\n", "[", "[", "axc", "/", "1.0", ",", "ayc", "/", "1.0", ",", "stride", "*", "4", "/", "1.0", ",", "\n", "stride", "*", "4", "/", "1.0", "]", "]", ")", ".", "reshape", "(", "[", "1", ",", "1", ",", "4", "]", ")", "\n", "variances", "=", "[", "0.1", ",", "0.2", "]", "\n", "box", "=", "batch_decode", "(", "paddle", ".", "to_tensor", "(", "loc", ")", ",", "priors", ",", "variances", ")", "\n", "box", "=", "box", "[", ":", ",", "0", "]", "*", "1.0", "\n", "bboxlist", ".", "append", "(", "\n", "paddle", ".", "concat", "(", "[", "box", ",", "paddle", ".", "to_tensor", "(", "score", ")", ".", "unsqueeze", "(", "1", ")", "]", ",", "\n", "1", ")", ".", "numpy", "(", ")", ")", "\n", "", "", "bboxlist", "=", "np", ".", "array", "(", "bboxlist", ")", "\n", "if", "0", "==", "len", "(", "bboxlist", ")", ":", "\n", "        ", "bboxlist", "=", "np", ".", "zeros", "(", "(", "1", ",", "BB", ",", "5", ")", ")", "\n", "\n", "", "return", "bboxlist", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.blazeface_detector.BlazeFaceDetector.__init__": [[29, 55], ["core.FaceDetector.__init__", "net_blazeface.BlazeFace", "blazeface_detector.BlazeFaceDetector.face_detector.load_dict", "blazeface_detector.BlazeFaceDetector.face_detector.load_anchors_from_npy", "blazeface_detector.BlazeFaceDetector.face_detector.eval", "paddle.utils.download.get_weights_path_from_url", "paddle.load", "np.load", "paddle.load", "np.load", "paddle.utils.download.get_weights_path_from_url"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.net_blazeface.BlazeFace.load_anchors_from_npy", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["    ", "def", "__init__", "(", "self", ",", "\n", "path_to_detector", "=", "None", ",", "\n", "path_to_anchor", "=", "None", ",", "\n", "verbose", "=", "False", ",", "\n", "min_score_thresh", "=", "0.5", ",", "\n", "min_suppression_threshold", "=", "0.3", ")", ":", "\n", "        ", "super", "(", "BlazeFaceDetector", ",", "self", ")", ".", "__init__", "(", "verbose", ")", "\n", "\n", "# Initialise the face detector", "\n", "if", "path_to_detector", "is", "None", ":", "\n", "            ", "model_weights_path", "=", "get_weights_path_from_url", "(", "blazeface_weights", ")", "\n", "model_weights", "=", "paddle", ".", "load", "(", "model_weights_path", ")", "\n", "model_anchors", "=", "np", ".", "load", "(", "\n", "get_weights_path_from_url", "(", "blazeface_anchors", ")", ")", "\n", "", "else", ":", "\n", "            ", "model_weights", "=", "paddle", ".", "load", "(", "path_to_detector", ")", "\n", "model_anchors", "=", "np", ".", "load", "(", "path_to_anchor", ")", "\n", "\n", "", "self", ".", "face_detector", "=", "BlazeFace", "(", ")", "\n", "self", ".", "face_detector", ".", "load_dict", "(", "model_weights", ")", "\n", "self", ".", "face_detector", ".", "load_anchors_from_npy", "(", "model_anchors", ")", "\n", "\n", "self", ".", "face_detector", ".", "min_score_thresh", "=", "min_score_thresh", "\n", "self", ".", "face_detector", ".", "min_suppression_threshold", "=", "min_suppression_threshold", "\n", "\n", "self", ".", "face_detector", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.blazeface_detector.BlazeFaceDetector.detect_from_image": [[56, 62], ["blazeface_detector.BlazeFaceDetector.tensor_or_path_to_ndarray", "detect.detect.detect"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.detection.core.FaceDetector.tensor_or_path_to_ndarray", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.detect.detect"], ["", "def", "detect_from_image", "(", "self", ",", "tensor_or_path", ")", ":", "\n", "        ", "image", "=", "self", ".", "tensor_or_path_to_ndarray", "(", "tensor_or_path", ")", "\n", "\n", "bboxlist", "=", "detect", "(", "self", ".", "face_detector", ",", "image", ")", "[", "0", "]", "\n", "\n", "return", "bboxlist", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.blazeface_detector.BlazeFaceDetector.detect_from_batch": [[63, 66], ["detect.detect.batch_detect"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.detect.batch_detect"], ["", "def", "detect_from_batch", "(", "self", ",", "tensor", ")", ":", "\n", "        ", "bboxlists", "=", "batch_detect", "(", "self", ".", "face_detector", ",", "tensor", ")", "\n", "return", "bboxlists", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.blazeface_detector.BlazeFaceDetector.reference_scale": [[67, 70], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "reference_scale", "(", "self", ")", ":", "\n", "        ", "return", "195", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.blazeface_detector.BlazeFaceDetector.reference_x_shift": [[71, 74], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "reference_x_shift", "(", "self", ")", ":", "\n", "        ", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.blazeface_detector.BlazeFaceDetector.reference_y_shift": [[75, 78], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "reference_y_shift", "(", "self", ")", ":", "\n", "        ", "return", "0", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.net_blazeface.BlazeBlock.__init__": [[12, 39], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "BlazeBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "channel_pad", "=", "out_channels", "-", "in_channels", "\n", "\n", "if", "stride", "==", "2", ":", "\n", "            ", "self", ".", "max_pool", "=", "nn", ".", "MaxPool2D", "(", "kernel_size", "=", "stride", ",", "stride", "=", "stride", ")", "\n", "padding", "=", "0", "\n", "", "else", ":", "\n", "            ", "padding", "=", "(", "kernel_size", "-", "1", ")", "//", "2", "\n", "\n", "", "self", ".", "convs", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "in_channels", "=", "in_channels", ",", "\n", "out_channels", "=", "in_channels", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "\n", "groups", "=", "in_channels", ")", ",", "\n", "nn", ".", "Conv2D", "(", "in_channels", "=", "in_channels", ",", "\n", "out_channels", "=", "out_channels", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ")", ",", "\n", ")", "\n", "\n", "self", ".", "act", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.net_blazeface.BlazeBlock.forward": [[40, 50], ["net_blazeface.BlazeBlock.act", "paddle.pad", "paddle.pad", "paddle.pad", "net_blazeface.BlazeBlock.max_pool", "paddle.pad", "paddle.pad", "paddle.pad", "net_blazeface.BlazeBlock.convs"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "stride", "==", "2", ":", "\n", "            ", "h", "=", "F", ".", "pad", "(", "x", ",", "[", "0", ",", "2", ",", "0", ",", "2", "]", ",", "\"constant\"", ",", "0", ")", "\n", "x", "=", "self", ".", "max_pool", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "h", "=", "x", "\n", "", "if", "self", ".", "channel_pad", ">", "0", ":", "\n", "            ", "x", "=", "F", ".", "pad", "(", "x", ",", "[", "0", ",", "0", ",", "0", ",", "self", ".", "channel_pad", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\"constant\"", ",", "0", ")", "\n", "\n", "", "return", "self", ".", "act", "(", "self", ".", "convs", "(", "h", ")", "+", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.net_blazeface.BlazeFace.__init__": [[55, 70], ["paddle.Layer.__init__", "net_blazeface.BlazeFace._define_layers"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.net_blazeface.BlazeFace._define_layers"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "BlazeFace", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "num_classes", "=", "1", "\n", "self", ".", "num_anchors", "=", "896", "\n", "self", ".", "num_coords", "=", "16", "\n", "self", ".", "score_clipping_thresh", "=", "100.0", "\n", "self", ".", "x_scale", "=", "128.0", "\n", "self", ".", "y_scale", "=", "128.0", "\n", "self", ".", "h_scale", "=", "128.0", "\n", "self", ".", "w_scale", "=", "128.0", "\n", "self", ".", "min_score_thresh", "=", "0.75", "\n", "self", ".", "min_suppression_threshold", "=", "0.3", "\n", "\n", "self", ".", "_define_layers", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.net_blazeface.BlazeFace._define_layers": [[71, 105], ["paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "net_blazeface.BlazeBlock", "net_blazeface.BlazeBlock", "net_blazeface.BlazeBlock", "net_blazeface.BlazeBlock", "net_blazeface.BlazeBlock", "net_blazeface.BlazeBlock", "net_blazeface.BlazeBlock", "net_blazeface.BlazeBlock", "net_blazeface.BlazeBlock", "net_blazeface.BlazeBlock", "net_blazeface.BlazeBlock", "net_blazeface.BlazeBlock", "net_blazeface.BlazeBlock", "net_blazeface.BlazeBlock", "net_blazeface.BlazeBlock", "net_blazeface.BlazeBlock"], "methods", ["None"], ["", "def", "_define_layers", "(", "self", ")", ":", "\n", "        ", "self", ".", "backbone1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "in_channels", "=", "3", ",", "\n", "out_channels", "=", "24", ",", "\n", "kernel_size", "=", "5", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "0", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "BlazeBlock", "(", "24", ",", "24", ")", ",", "\n", "BlazeBlock", "(", "24", ",", "28", ")", ",", "\n", "BlazeBlock", "(", "28", ",", "32", ",", "stride", "=", "2", ")", ",", "\n", "BlazeBlock", "(", "32", ",", "36", ")", ",", "\n", "BlazeBlock", "(", "36", ",", "42", ")", ",", "\n", "BlazeBlock", "(", "42", ",", "48", ",", "stride", "=", "2", ")", ",", "\n", "BlazeBlock", "(", "48", ",", "56", ")", ",", "\n", "BlazeBlock", "(", "56", ",", "64", ")", ",", "\n", "BlazeBlock", "(", "64", ",", "72", ")", ",", "\n", "BlazeBlock", "(", "72", ",", "80", ")", ",", "\n", "BlazeBlock", "(", "80", ",", "88", ")", ",", "\n", ")", "\n", "\n", "self", ".", "backbone2", "=", "nn", ".", "Sequential", "(", "\n", "BlazeBlock", "(", "88", ",", "96", ",", "stride", "=", "2", ")", ",", "\n", "BlazeBlock", "(", "96", ",", "96", ")", ",", "\n", "BlazeBlock", "(", "96", ",", "96", ")", ",", "\n", "BlazeBlock", "(", "96", ",", "96", ")", ",", "\n", "BlazeBlock", "(", "96", ",", "96", ")", ",", "\n", ")", "\n", "\n", "self", ".", "classifier_8", "=", "nn", ".", "Conv2D", "(", "88", ",", "2", ",", "1", ")", "\n", "self", ".", "classifier_16", "=", "nn", ".", "Conv2D", "(", "96", ",", "6", ",", "1", ")", "\n", "\n", "self", ".", "regressor_8", "=", "nn", ".", "Conv2D", "(", "88", ",", "32", ",", "1", ")", "\n", "self", ".", "regressor_16", "=", "nn", ".", "Conv2D", "(", "96", ",", "96", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.net_blazeface.BlazeFace.forward": [[106, 134], ["paddle.pad", "paddle.pad", "paddle.pad", "net_blazeface.BlazeFace.backbone1", "net_blazeface.BlazeFace.backbone2", "net_blazeface.BlazeFace.classifier_8", "c1.reshape.reshape.transpose", "c1.reshape.reshape.reshape", "net_blazeface.BlazeFace.classifier_16", "c2.reshape.reshape.transpose", "c2.reshape.reshape.reshape", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "net_blazeface.BlazeFace.regressor_8", "r1.reshape.reshape.transpose", "r1.reshape.reshape.reshape", "net_blazeface.BlazeFace.regressor_16", "r2.reshape.reshape.transpose", "r2.reshape.reshape.reshape", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "F", ".", "pad", "(", "x", ",", "[", "1", ",", "2", ",", "1", ",", "2", "]", ",", "\"constant\"", ",", "0", ")", "\n", "\n", "b", "=", "x", ".", "shape", "[", "0", "]", "\n", "\n", "x", "=", "self", ".", "backbone1", "(", "x", ")", "# (b, 88, 16, 16)", "\n", "h", "=", "self", ".", "backbone2", "(", "x", ")", "# (b, 96, 8, 8)", "\n", "\n", "c1", "=", "self", ".", "classifier_8", "(", "x", ")", "# (b, 2, 16, 16)", "\n", "c1", "=", "c1", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "# (b, 16, 16, 2)", "\n", "c1", "=", "c1", ".", "reshape", "(", "[", "b", ",", "-", "1", ",", "1", "]", ")", "# (b, 512, 1)", "\n", "\n", "c2", "=", "self", ".", "classifier_16", "(", "h", ")", "# (b, 6, 8, 8)", "\n", "c2", "=", "c2", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "# (b, 8, 8, 6)", "\n", "c2", "=", "c2", ".", "reshape", "(", "[", "b", ",", "-", "1", ",", "1", "]", ")", "# (b, 384, 1)", "\n", "\n", "c", "=", "paddle", ".", "concat", "(", "(", "c1", ",", "c2", ")", ",", "axis", "=", "1", ")", "# (b, 896, 1)", "\n", "\n", "r1", "=", "self", ".", "regressor_8", "(", "x", ")", "# (b, 32, 16, 16)", "\n", "r1", "=", "r1", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "# (b, 16, 16, 32)", "\n", "r1", "=", "r1", ".", "reshape", "(", "[", "b", ",", "-", "1", ",", "16", "]", ")", "# (b, 512, 16)", "\n", "\n", "r2", "=", "self", ".", "regressor_16", "(", "h", ")", "# (b, 96, 8, 8)", "\n", "r2", "=", "r2", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "# (b, 8, 8, 96)", "\n", "r2", "=", "r2", ".", "reshape", "(", "[", "b", ",", "-", "1", ",", "16", "]", ")", "# (b, 384, 16)", "\n", "\n", "r", "=", "paddle", ".", "concat", "(", "(", "r1", ",", "r2", ")", ",", "axis", "=", "1", ")", "# (b, 896, 16)", "\n", "return", "[", "r", ",", "c", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.net_blazeface.BlazeFace.load_weights": [[135, 138], ["paddle.load_dict", "paddle.load_dict", "paddle.load_dict", "paddle.load_dict", "paddle.load_dict", "paddle.load_dict", "paddle.load_dict", "paddle.load_dict", "paddle.load_dict", "net_blazeface.BlazeFace.eval", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["", "def", "load_weights", "(", "self", ",", "path", ")", ":", "\n", "        ", "paddle", ".", "load_dict", "(", "paddle", ".", "load", "(", "path", ")", ")", "\n", "self", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.net_blazeface.BlazeFace.load_anchors": [[139, 144], ["paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "numpy.load"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["", "def", "load_anchors", "(", "self", ",", "path", ")", ":", "\n", "        ", "self", ".", "anchors", "=", "paddle", ".", "to_tensor", "(", "np", ".", "load", "(", "path", ")", ",", "dtype", "=", "'float32'", ")", "\n", "assert", "(", "self", ".", "anchors", ".", "shape", "==", "2", ")", "\n", "assert", "(", "self", ".", "anchors", ".", "shape", "[", "0", "]", "==", "self", ".", "num_anchors", ")", "\n", "assert", "(", "self", ".", "anchors", ".", "shape", "[", "1", "]", "==", "4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.net_blazeface.BlazeFace.load_anchors_from_npy": [[145, 150], ["paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "len"], "methods", ["None"], ["", "def", "load_anchors_from_npy", "(", "self", ",", "arr", ")", ":", "\n", "        ", "self", ".", "anchors", "=", "paddle", ".", "to_tensor", "(", "arr", ",", "dtype", "=", "'float32'", ")", "\n", "assert", "(", "len", "(", "self", ".", "anchors", ".", "shape", ")", "==", "2", ")", "\n", "assert", "(", "self", ".", "anchors", ".", "shape", "[", "0", "]", "==", "self", ".", "num_anchors", ")", "\n", "assert", "(", "self", ".", "anchors", ".", "shape", "[", "1", "]", "==", "4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.net_blazeface.BlazeFace._preprocess": [[151, 154], ["x.astype"], "methods", ["None"], ["", "def", "_preprocess", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"Converts the image pixels to the range [-1, 1].\"\"\"", "\n", "return", "x", ".", "astype", "(", "'float32'", ")", "/", "127.5", "-", "1.0", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.net_blazeface.BlazeFace.predict_on_image": [[155, 170], ["isinstance", "paddle.to_tensor().transpose", "paddle.to_tensor().transpose", "paddle.to_tensor().transpose", "paddle.to_tensor().transpose", "paddle.to_tensor().transpose", "paddle.to_tensor().transpose", "paddle.to_tensor().transpose", "paddle.to_tensor().transpose", "paddle.to_tensor().transpose", "net_blazeface.BlazeFace.predict_on_batch", "paddle.to_tensor().transpose.unsqueeze", "paddle.to_tensor().transpose.unsqueeze", "paddle.to_tensor().transpose.unsqueeze", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.net_blazeface.BlazeFace.predict_on_batch"], ["", "def", "predict_on_image", "(", "self", ",", "img", ")", ":", "\n", "        ", "\"\"\"Makes a prediction on a single image.\n\n        Arguments:\n            img: a NumPy array of shape (H, W, 3) or a Paddle tensor of\n                 shape (3, H, W). The image's height and width should be\n                 128 pixels.\n\n        Returns:\n            A tensor with face detections.\n        \"\"\"", "\n", "if", "isinstance", "(", "img", ",", "np", ".", "ndarray", ")", ":", "\n", "            ", "img", "=", "paddle", ".", "to_tensor", "(", "img", ")", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "\n", "", "return", "self", ".", "predict_on_batch", "(", "img", ".", "unsqueeze", "(", "0", ")", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.net_blazeface.BlazeFace.predict_on_batch": [[171, 210], ["isinstance", "net_blazeface.BlazeFace._preprocess", "net_blazeface.BlazeFace._tensors_to_detections", "range", "paddle.to_tensor().transpose", "paddle.to_tensor().transpose", "paddle.to_tensor().transpose", "paddle.to_tensor().transpose", "paddle.to_tensor().transpose", "paddle.to_tensor().transpose", "paddle.to_tensor().transpose", "paddle.to_tensor().transpose", "paddle.to_tensor().transpose", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "net_blazeface.BlazeFace.__call__", "len", "net_blazeface.BlazeFace._weighted_non_max_suppression", "filtered_detections.append", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.net_blazeface.BlazeFace._preprocess", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.net_blazeface.BlazeFace._tensors_to_detections", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.gradient_penalty.GradientPenalty.__call__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.net_blazeface.BlazeFace._weighted_non_max_suppression", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "predict_on_batch", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"Makes a prediction on a batch of images.\n\n        Arguments:\n            x: a NumPy array of shape (b, H, W, 3) or a Paddle tensor of\n               shape (b, 3, H, W). The height and width should be 128 pixels.\n\n        Returns:\n            A list containing a tensor of face detections for each image in\n            the batch. If no faces are found for an image, returns a tensor\n            of shape (0, 17).\n\n        Each face detection is a Paddle tensor consisting of 17 numbers:\n            - ymin, xmin, ymax, xmax\n            - x,y-coordinates for the 6 keypoints\n            - confidence score\n        \"\"\"", "\n", "if", "isinstance", "(", "x", ",", "np", ".", "ndarray", ")", ":", "\n", "            ", "x", "=", "paddle", ".", "to_tensor", "(", "x", ")", ".", "transpose", "(", "(", "0", ",", "3", ",", "1", ",", "2", ")", ")", "\n", "\n", "", "assert", "x", ".", "shape", "[", "1", "]", "==", "3", "\n", "assert", "x", ".", "shape", "[", "2", "]", "==", "128", "\n", "assert", "x", ".", "shape", "[", "3", "]", "==", "128", "\n", "\n", "x", "=", "self", ".", "_preprocess", "(", "x", ")", "\n", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "            ", "out", "=", "self", ".", "__call__", "(", "x", ")", "\n", "\n", "", "detections", "=", "self", ".", "_tensors_to_detections", "(", "out", "[", "0", "]", ",", "out", "[", "1", "]", ",", "self", ".", "anchors", ")", "\n", "\n", "filtered_detections", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "detections", ")", ")", ":", "\n", "            ", "faces", "=", "self", ".", "_weighted_non_max_suppression", "(", "detections", "[", "i", "]", ")", "\n", "faces", "=", "paddle", ".", "stack", "(", "faces", ")", "if", "len", "(", "faces", ")", ">", "0", "else", "paddle", ".", "zeros", "(", "\n", "(", "0", ",", "17", ")", ")", "\n", "filtered_detections", ".", "append", "(", "faces", ")", "\n", "\n", "", "return", "filtered_detections", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.net_blazeface.BlazeFace._tensors_to_detections": [[211, 248], ["net_blazeface.BlazeFace._decode_boxes", "raw_score_tensor.clip.clip.clip", "paddle.sigmoid().squeeze", "paddle.sigmoid().squeeze", "paddle.sigmoid().squeeze", "mask.numpy.numpy.numpy", "detection_boxes.numpy.numpy.numpy", "detection_scores.numpy.numpy.numpy", "range", "len", "len", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor().unsqueeze", "paddle.to_tensor().unsqueeze", "paddle.to_tensor().unsqueeze", "paddle.to_tensor().unsqueeze", "paddle.to_tensor().unsqueeze", "paddle.to_tensor().unsqueeze", "paddle.to_tensor().unsqueeze", "paddle.to_tensor().unsqueeze", "paddle.to_tensor().unsqueeze", "output_detections.append", "paddle.sigmoid", "paddle.sigmoid", "paddle.sigmoid", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.net_blazeface.BlazeFace._decode_boxes", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "_tensors_to_detections", "(", "self", ",", "raw_box_tensor", ",", "raw_score_tensor", ",", "anchors", ")", ":", "\n", "        ", "\"\"\"The output of the neural network is a tensor of shape (b, 896, 16)\n        containing the bounding box regressor predictions, as well as a tensor\n        of shape (b, 896, 1) with the classification confidences.\n\n        Returns a list of (num_detections, 17) tensors, one for each image in\n        the batch.\n        \"\"\"", "\n", "assert", "len", "(", "raw_box_tensor", ".", "shape", ")", "==", "3", "\n", "assert", "raw_box_tensor", ".", "shape", "[", "1", "]", "==", "self", ".", "num_anchors", "\n", "assert", "raw_box_tensor", ".", "shape", "[", "2", "]", "==", "self", ".", "num_coords", "\n", "\n", "assert", "len", "(", "raw_score_tensor", ".", "shape", ")", "==", "3", "\n", "assert", "raw_score_tensor", ".", "shape", "[", "1", "]", "==", "self", ".", "num_anchors", "\n", "assert", "raw_score_tensor", ".", "shape", "[", "2", "]", "==", "self", ".", "num_classes", "\n", "\n", "assert", "raw_box_tensor", ".", "shape", "[", "0", "]", "==", "raw_score_tensor", ".", "shape", "[", "0", "]", "\n", "\n", "detection_boxes", "=", "self", ".", "_decode_boxes", "(", "raw_box_tensor", ",", "anchors", ")", "\n", "\n", "thresh", "=", "self", ".", "score_clipping_thresh", "\n", "raw_score_tensor", "=", "raw_score_tensor", ".", "clip", "(", "-", "thresh", ",", "thresh", ")", "\n", "detection_scores", "=", "F", ".", "sigmoid", "(", "raw_score_tensor", ")", ".", "squeeze", "(", "axis", "=", "-", "1", ")", "\n", "\n", "mask", "=", "detection_scores", ">=", "self", ".", "min_score_thresh", "\n", "mask", "=", "mask", ".", "numpy", "(", ")", "\n", "detection_boxes", "=", "detection_boxes", ".", "numpy", "(", ")", "\n", "detection_scores", "=", "detection_scores", ".", "numpy", "(", ")", "\n", "\n", "output_detections", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "raw_box_tensor", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "boxes", "=", "paddle", ".", "to_tensor", "(", "detection_boxes", "[", "i", ",", "mask", "[", "i", "]", "]", ")", "\n", "scores", "=", "paddle", ".", "to_tensor", "(", "\n", "detection_scores", "[", "i", ",", "mask", "[", "i", "]", "]", ")", ".", "unsqueeze", "(", "axis", "=", "-", "1", ")", "\n", "output_detections", ".", "append", "(", "paddle", ".", "concat", "(", "(", "boxes", ",", "scores", ")", ",", "axis", "=", "-", "1", ")", ")", "\n", "\n", "", "return", "output_detections", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.net_blazeface.BlazeFace._decode_boxes": [[249, 278], ["paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "range"], "methods", ["None"], ["", "def", "_decode_boxes", "(", "self", ",", "raw_boxes", ",", "anchors", ")", ":", "\n", "        ", "\"\"\"Converts the predictions into actual coordinates using\n        the anchor boxes. Processes the entire batch at once.\n        \"\"\"", "\n", "boxes", "=", "paddle", ".", "zeros_like", "(", "raw_boxes", ")", "\n", "\n", "x_center", "=", "raw_boxes", "[", ":", ",", ":", ",", "0", "]", "/", "self", ".", "x_scale", "*", "anchors", "[", ":", ",", "2", "]", "+", "anchors", "[", ":", ",", "0", "]", "\n", "y_center", "=", "raw_boxes", "[", ":", ",", ":", ",", "1", "]", "/", "self", ".", "y_scale", "*", "anchors", "[", ":", ",", "3", "]", "+", "anchors", "[", ":", ",", "1", "]", "\n", "\n", "w", "=", "raw_boxes", "[", ":", ",", ":", ",", "2", "]", "/", "self", ".", "w_scale", "*", "anchors", "[", ":", ",", "2", "]", "\n", "h", "=", "raw_boxes", "[", ":", ",", ":", ",", "3", "]", "/", "self", ".", "h_scale", "*", "anchors", "[", ":", ",", "3", "]", "\n", "\n", "boxes", "[", ":", ",", ":", ",", "0", "]", "=", "y_center", "-", "h", "/", "2.", "# ymin", "\n", "boxes", "[", ":", ",", ":", ",", "1", "]", "=", "x_center", "-", "w", "/", "2.", "# xmin", "\n", "boxes", "[", ":", ",", ":", ",", "2", "]", "=", "y_center", "+", "h", "/", "2.", "# ymax", "\n", "boxes", "[", ":", ",", ":", ",", "3", "]", "=", "x_center", "+", "w", "/", "2.", "# xmax", "\n", "\n", "for", "k", "in", "range", "(", "6", ")", ":", "\n", "            ", "offset", "=", "4", "+", "k", "*", "2", "\n", "keypoint_x", "=", "raw_boxes", "[", ":", ",", ":", ",", "offset", "]", "/", "self", ".", "x_scale", "*", "anchors", "[", ":", ",", "2", "]", "+", "anchors", "[", ":", ",", "0", "]", "\n", "keypoint_y", "=", "raw_boxes", "[", ":", ",", ":", ",", "offset", "+", "1", "]", "/", "self", ".", "y_scale", "*", "anchors", "[", ":", ",", "3", "]", "+", "anchors", "[", ":", ",", "1", "]", "\n", "boxes", "[", ":", ",", ":", ",", "offset", "]", "=", "keypoint_x", "\n", "boxes", "[", ":", ",", ":", ",", "offset", "+", "1", "]", "=", "keypoint_y", "\n", "\n", "", "return", "boxes", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.net_blazeface.BlazeFace._weighted_non_max_suppression": [[279, 320], ["paddle.argsort().numpy", "paddle.argsort().numpy", "paddle.argsort().numpy", "paddle.argsort().numpy", "paddle.argsort().numpy", "paddle.argsort().numpy", "paddle.argsort().numpy", "paddle.argsort().numpy", "paddle.argsort().numpy", "detections.numpy.numpy.numpy", "len", "len", "net_blazeface.overlap_similarity", "mask.numpy.numpy.numpy", "detection.copy", "output_detections.append", "paddle.argsort", "paddle.argsort", "paddle.argsort", "paddle.argsort", "paddle.argsort", "paddle.argsort", "paddle.argsort", "paddle.argsort", "paddle.argsort", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "len", "scores.sum", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.net_blazeface.overlap_similarity", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "_weighted_non_max_suppression", "(", "self", ",", "detections", ")", ":", "\n", "        ", "\"\"\"The alternative NMS method as mentioned in the BlazeFace paper:\n        The input detections should be a Tensor of shape (count, 17).\n        Returns a list of Paddle tensors, one for each detected face.\n\n        \"\"\"", "\n", "if", "len", "(", "detections", ")", "==", "0", ":", "\n", "            ", "return", "[", "]", "\n", "\n", "", "output_detections", "=", "[", "]", "\n", "\n", "# Sort the detections from highest to lowest score.", "\n", "remaining", "=", "paddle", ".", "argsort", "(", "detections", "[", ":", ",", "16", "]", ",", "descending", "=", "True", ")", ".", "numpy", "(", ")", "\n", "detections", "=", "detections", ".", "numpy", "(", ")", "\n", "\n", "while", "len", "(", "remaining", ")", ">", "0", ":", "\n", "            ", "detection", "=", "detections", "[", "remaining", "[", "0", "]", "]", "\n", "\n", "first_box", "=", "detection", "[", ":", "4", "]", "\n", "other_boxes", "=", "detections", "[", "remaining", ",", ":", "4", "]", "\n", "ious", "=", "overlap_similarity", "(", "paddle", ".", "to_tensor", "(", "first_box", ")", ",", "\n", "paddle", ".", "to_tensor", "(", "other_boxes", ")", ")", "\n", "\n", "mask", "=", "ious", ">", "self", ".", "min_suppression_threshold", "\n", "mask", "=", "mask", ".", "numpy", "(", ")", "\n", "\n", "overlapping", "=", "remaining", "[", "mask", "]", "\n", "remaining", "=", "remaining", "[", "~", "mask", "]", "\n", "\n", "weighted_detection", "=", "detection", ".", "copy", "(", ")", "\n", "if", "len", "(", "overlapping", ")", ">", "1", ":", "\n", "                ", "coordinates", "=", "detections", "[", "overlapping", ",", ":", "16", "]", "\n", "scores", "=", "detections", "[", "overlapping", ",", "16", ":", "17", "]", "\n", "total_score", "=", "scores", ".", "sum", "(", ")", "\n", "weighted", "=", "(", "coordinates", "*", "scores", ")", ".", "sum", "(", "axis", "=", "0", ")", "/", "total_score", "\n", "weighted_detection", "[", ":", "16", "]", "=", "weighted", "\n", "weighted_detection", "[", "16", "]", "=", "total_score", "/", "len", "(", "overlapping", ")", "\n", "\n", "", "output_detections", ".", "append", "(", "paddle", ".", "to_tensor", "(", "weighted_detection", ")", ")", "\n", "\n", "", "return", "output_detections", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.net_blazeface.intersect": [[322, 338], ["paddle.minimum", "paddle.minimum", "paddle.minimum", "paddle.maximum", "paddle.maximum", "paddle.maximum", "paddle.clip", "paddle.clip", "paddle.clip", "box_a[].unsqueeze().expand", "box_b[].unsqueeze().expand", "box_a[].unsqueeze().expand", "box_b[].unsqueeze().expand", "box_a[].unsqueeze", "box_b[].unsqueeze", "box_a[].unsqueeze", "box_b[].unsqueeze"], "function", ["None"], ["", "", "def", "intersect", "(", "box_a", ",", "box_b", ")", ":", "\n", "    ", "\"\"\"Compute the area of intersect between box_a and box_b.\n    Args:\n      box_a: (tensor) bounding boxes, Shape: [A,4].\n      box_b: (tensor) bounding boxes, Shape: [B,4].\n    Return:\n      (tensor) intersection area, Shape: [A,B].\n    \"\"\"", "\n", "A", "=", "box_a", ".", "shape", "[", "0", "]", "\n", "B", "=", "box_b", ".", "shape", "[", "0", "]", "\n", "max_xy", "=", "paddle", ".", "minimum", "(", "box_a", "[", ":", ",", "2", ":", "]", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "(", "A", ",", "B", ",", "2", ")", ")", ",", "\n", "box_b", "[", ":", ",", "2", ":", "]", ".", "unsqueeze", "(", "0", ")", ".", "expand", "(", "(", "A", ",", "B", ",", "2", ")", ")", ")", "\n", "min_xy", "=", "paddle", ".", "maximum", "(", "box_a", "[", ":", ",", ":", "2", "]", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "(", "A", ",", "B", ",", "2", ")", ")", ",", "\n", "box_b", "[", ":", ",", ":", "2", "]", ".", "unsqueeze", "(", "0", ")", ".", "expand", "(", "(", "A", ",", "B", ",", "2", ")", ")", ")", "\n", "inter", "=", "paddle", ".", "clip", "(", "(", "max_xy", "-", "min_xy", ")", ",", "min", "=", "0", ")", "\n", "return", "inter", "[", ":", ",", ":", ",", "0", "]", "*", "inter", "[", ":", ",", ":", ",", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.net_blazeface.jaccard": [[340, 355], ["net_blazeface.intersect"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.net_blazeface.intersect"], ["", "def", "jaccard", "(", "box_a", ",", "box_b", ")", ":", "\n", "    ", "\"\"\"Compute the jaccard overlap of two sets of boxes.\n    Args:\n        box_a: (tensor) Ground truth bounding boxes, Shape: [num_objects,4]\n        box_b: (tensor) Prior boxes from priorbox layers, Shape: [num_priors,4]\n    Return:\n        jaccard overlap: (tensor) Shape: [box_a.size(0), box_b.size(0)]\n    \"\"\"", "\n", "inter", "=", "intersect", "(", "box_a", ",", "box_b", ")", "\n", "area_a", "=", "(", "(", "box_a", "[", ":", ",", "2", "]", "-", "box_a", "[", ":", ",", "0", "]", ")", "*", "\n", "(", "box_a", "[", ":", ",", "3", "]", "-", "box_a", "[", ":", ",", "1", "]", ")", ")", ".", "unsqueeze", "(", "1", ")", ".", "expand_as", "(", "inter", ")", "\n", "area_b", "=", "(", "(", "box_b", "[", ":", ",", "2", "]", "-", "box_b", "[", ":", ",", "0", "]", ")", "*", "\n", "(", "box_b", "[", ":", ",", "3", "]", "-", "box_b", "[", ":", ",", "1", "]", ")", ")", ".", "unsqueeze", "(", "0", ")", ".", "expand_as", "(", "inter", ")", "\n", "union", "=", "area_a", "+", "area_b", "-", "inter", "\n", "return", "inter", "/", "union", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.net_blazeface.overlap_similarity": [[357, 360], ["jaccard().squeeze", "net_blazeface.jaccard", "box.unsqueeze"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.net_blazeface.jaccard"], ["", "def", "overlap_similarity", "(", "box", ",", "other_boxes", ")", ":", "\n", "    ", "\"\"\"Computes the IOU between a bounding box and set of other boxes.\"\"\"", "\n", "return", "jaccard", "(", "box", ".", "unsqueeze", "(", "0", ")", ",", "other_boxes", ")", ".", "squeeze", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.net_blazeface.init_model": [[362, 371], ["net_blazeface.BlazeFace", "net_blazeface.BlazeFace.load_weights", "net_blazeface.BlazeFace.load_anchors"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.net_blazeface.BlazeFace.load_weights", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.net_blazeface.BlazeFace.load_anchors"], ["", "def", "init_model", "(", ")", ":", "\n", "    ", "net", "=", "BlazeFace", "(", ")", "\n", "net", ".", "load_weights", "(", "\"blazeface.pdparams\"", ")", "\n", "net", ".", "load_anchors", "(", "\"anchors.npy\"", ")", "\n", "\n", "net", ".", "min_score_thresh", "=", "0.75", "\n", "net", ".", "min_suppression_threshold", "=", "0.3", "\n", "\n", "return", "net", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.detect.detect": [[24, 39], ["min", "utils.resize_and_crop_image", "net.predict_on_image().numpy", "numpy.array", "numpy.concatenate", "len", "numpy.concatenate", "net.predict_on_image", "img.astype"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.utils.resize_and_crop_image", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.net_blazeface.BlazeFace.predict_on_image"], ["import", "argparse", "\n", "import", "numpy", "as", "np", "\n", "\n", "import", "scipy", ".", "io", "as", "sio", "\n", "import", "zipfile", "\n", "from", ".", "net_s3fd", "import", "s3fd", "\n", "from", ".", "bbox", "import", "*", "\n", "\n", "\n", "def", "detect", "(", "net", ",", "img", ")", ":", "\n", "    ", "img", "=", "img", "-", "np", ".", "array", "(", "[", "104", ",", "117", ",", "123", "]", ")", "\n", "img", "=", "img", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n", "img", "=", "img", ".", "reshape", "(", "(", "1", ",", ")", "+", "img", ".", "shape", ")", "\n", "\n", "img", "=", "paddle", ".", "to_tensor", "(", "img", ")", ".", "astype", "(", "'float32'", ")", "\n", "BB", ",", "CC", ",", "HH", ",", "WW", "=", "img", ".", "shape", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.detect.batch_detect": [[41, 71], ["min", "isinstance", "utils.resize_and_crop_batch", "net.predict_on_batch", "img_batch.numpy.numpy", "imgs.astype", "pred.numpy.numpy", "numpy.array", "numpy.concatenate", "bboxlists.append", "numpy.concatenate"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.utils.resize_and_crop_batch", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.net_blazeface.BlazeFace.predict_on_batch", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["        ", "olist", "=", "net", "(", "img", ")", "\n", "\n", "", "bboxlist", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "olist", ")", "//", "2", ")", ":", "\n", "        ", "olist", "[", "i", "*", "2", "]", "=", "F", ".", "softmax", "(", "olist", "[", "i", "*", "2", "]", ",", "axis", "=", "1", ")", "\n", "", "for", "i", "in", "range", "(", "len", "(", "olist", ")", "//", "2", ")", ":", "\n", "        ", "ocls", ",", "oreg", "=", "olist", "[", "i", "*", "2", "]", ",", "olist", "[", "i", "*", "2", "+", "1", "]", "\n", "FB", ",", "FC", ",", "FH", ",", "FW", "=", "ocls", ".", "shape", "# feature map size", "\n", "stride", "=", "2", "**", "(", "i", "+", "2", ")", "# 4,8,16,32,64,128", "\n", "anchor", "=", "stride", "*", "4", "\n", "poss", "=", "zip", "(", "*", "np", ".", "where", "(", "ocls", ".", "numpy", "(", ")", "[", ":", ",", "1", ",", ":", ",", ":", "]", ">", "0.05", ")", ")", "\n", "for", "Iindex", ",", "hindex", ",", "windex", "in", "poss", ":", "\n", "            ", "axc", ",", "ayc", "=", "stride", "/", "2", "+", "windex", "*", "stride", ",", "stride", "/", "2", "+", "hindex", "*", "stride", "\n", "score", "=", "ocls", ".", "numpy", "(", ")", "[", "0", ",", "1", ",", "hindex", ",", "windex", "]", "\n", "loc", "=", "oreg", ".", "numpy", "(", ")", "[", "0", ",", ":", ",", "hindex", ",", "windex", "]", ".", "reshape", "(", "1", ",", "4", ")", "\n", "priors", "=", "paddle", ".", "to_tensor", "(", "\n", "[", "[", "axc", "/", "1.0", ",", "ayc", "/", "1.0", ",", "stride", "*", "4", "/", "1.0", ",", "stride", "*", "4", "/", "1.0", "]", "]", ")", "\n", "variances", "=", "[", "0.1", ",", "0.2", "]", "\n", "box", "=", "decode", "(", "paddle", ".", "to_tensor", "(", "loc", ")", ",", "priors", ",", "variances", ")", "\n", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "box", "[", "0", "]", "*", "1.0", "\n", "bboxlist", ".", "append", "(", "[", "x1", ",", "y1", ",", "x2", ",", "y2", ",", "score", "]", ")", "\n", "", "", "bboxlist", "=", "np", ".", "array", "(", "bboxlist", ")", "\n", "if", "0", "==", "len", "(", "bboxlist", ")", ":", "\n", "        ", "bboxlist", "=", "np", ".", "zeros", "(", "(", "1", ",", "5", ")", ")", "\n", "\n", "", "return", "bboxlist", "\n", "\n", "\n", "", "def", "batch_detect", "(", "net", ",", "imgs", ")", ":", "\n", "    ", "imgs", "=", "imgs", "-", "np", ".", "array", "(", "[", "104", ",", "117", ",", "123", "]", ")", "\n", "imgs", "=", "imgs", ".", "transpose", "(", "0", ",", "3", ",", "1", ",", "2", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.detect.flip_detect": [[73, 84], ["cv2.flip", "detect.detect", "numpy.zeros"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.detect.detect"], ["imgs", "=", "paddle", ".", "to_tensor", "(", "imgs", ")", ".", "astype", "(", "'float32'", ")", "\n", "BB", ",", "CC", ",", "HH", ",", "WW", "=", "imgs", ".", "shape", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "        ", "olist", "=", "net", "(", "imgs", ")", "\n", "\n", "", "bboxlist", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "olist", ")", "//", "2", ")", ":", "\n", "        ", "olist", "[", "i", "*", "2", "]", "=", "F", ".", "softmax", "(", "olist", "[", "i", "*", "2", "]", ",", "axis", "=", "1", ")", "\n", "", "for", "i", "in", "range", "(", "len", "(", "olist", ")", "//", "2", ")", ":", "\n", "        ", "ocls", ",", "oreg", "=", "olist", "[", "i", "*", "2", "]", ",", "olist", "[", "i", "*", "2", "+", "1", "]", "\n", "FB", ",", "FC", ",", "FH", ",", "FW", "=", "ocls", ".", "shape", "# feature map size", "\n", "stride", "=", "2", "**", "(", "i", "+", "2", ")", "# 4,8,16,32,64,128", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.detect.pts_to_bb": [[86, 90], ["numpy.min", "numpy.max", "numpy.array"], "function", ["None"], ["poss", "=", "zip", "(", "*", "np", ".", "where", "(", "ocls", ".", "numpy", "(", ")", "[", ":", ",", "1", ",", ":", ",", ":", "]", ">", "0.05", ")", ")", "\n", "for", "Iindex", ",", "hindex", ",", "windex", "in", "poss", ":", "\n", "            ", "axc", ",", "ayc", "=", "stride", "/", "2", "+", "windex", "*", "stride", ",", "stride", "/", "2", "+", "hindex", "*", "stride", "\n", "score", "=", "ocls", ".", "numpy", "(", ")", "[", ":", ",", "1", ",", "hindex", ",", "windex", "]", "\n", "loc", "=", "oreg", ".", "numpy", "(", ")", "[", ":", ",", ":", ",", "hindex", ",", "windex", "]", ".", "reshape", "(", "BB", ",", "1", ",", "4", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.utils.image_resize": [[19, 36], ["cv2.resize", "float", "int", "float", "int"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize"], ["with", "open", "(", "path", ",", "\"wb\"", ")", "as", "file", ":", "\n", "        ", "color", "=", "None", "\n", "\n", "if", "image", ".", "dtype", ".", "name", "!=", "\"float32\"", ":", "\n", "            ", "raise", "Exception", "(", "\"Image dtype must be float32.\"", ")", "\n", "\n", "", "image", "=", "np", ".", "flipud", "(", "image", ")", "\n", "\n", "if", "len", "(", "image", ".", "shape", ")", "==", "3", "and", "image", ".", "shape", "[", "2", "]", "==", "3", ":", "# color image", "\n", "            ", "color", "=", "True", "\n", "", "elif", "(", "len", "(", "image", ".", "shape", ")", "==", "2", "\n", "or", "len", "(", "image", ".", "shape", ")", "==", "3", "and", "image", ".", "shape", "[", "2", "]", "==", "1", ")", ":", "# greyscale", "\n", "            ", "color", "=", "False", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "\n", "\"Image must have H x W x 3, H x W x 1 or H x W dimensions.\"", ")", "\n", "\n", "", "file", ".", "write", "(", "\"PF\\n\"", "if", "color", "else", "\"Pf\\n\"", ".", "encode", "(", ")", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.utils.resize_and_crop_image": [[38, 51], ["utils.image_resize", "utils.image_resize"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.utils.image_resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.utils.image_resize"], ["\n", "endian", "=", "image", ".", "dtype", ".", "byteorder", "\n", "\n", "if", "endian", "==", "\"<\"", "or", "endian", "==", "\"=\"", "and", "sys", ".", "byteorder", "==", "\"little\"", ":", "\n", "            ", "scale", "=", "-", "scale", "\n", "\n", "", "file", ".", "write", "(", "\"%f\\n\"", ".", "encode", "(", ")", "%", "scale", ")", "\n", "\n", "image", ".", "tofile", "(", "file", ")", "\n", "\n", "\n", "", "", "def", "read_image", "(", "path", ")", ":", "\n", "    "]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.utils.resize_and_crop_batch": [[53, 61], ["range", "numpy.stack", "len", "utils.resize_and_crop_image", "np.stack.append"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.blazeface.utils.resize_and_crop_image", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["\n", "img", "=", "cv2", ".", "imread", "(", "path", ")", "\n", "if", "img", ".", "ndim", "==", "2", ":", "\n", "        ", "img", "=", "cv2", ".", "cvtColor", "(", "img", ",", "cv2", ".", "COLOR_GRAY2BGR", ")", "\n", "", "img", "=", "cv2", ".", "cvtColor", "(", "img", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "/", "255.0", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.face_seg.FaceSeg.__init__": [[29, 36], ["paddle.utils.download.get_path_from_url", "fcn.FCN", "paddle.load", "face_seg.FaceSeg.net.set_state_dict", "face_seg.FaceSeg.net.eval", "os.split", "hrnet.HRNet_W18", "os.realpath"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.hrnet.HRNet_W18"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "save_pth", "=", "get_path_from_url", "(", "BISENET_WEIGHT_URL", ",", "osp", ".", "split", "(", "osp", ".", "realpath", "(", "__file__", ")", ")", "[", "0", "]", ")", "\n", "\n", "self", ".", "net", "=", "FCN", "(", "num_classes", "=", "2", ",", "backbone", "=", "HRNet_W18", "(", ")", ")", "\n", "state_dict", "=", "paddle", ".", "load", "(", "save_pth", ")", "\n", "self", ".", "net", ".", "set_state_dict", "(", "state_dict", ")", "\n", "self", ".", "net", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.face_seg.FaceSeg.__call__": [[37, 48], ["face_seg.FaceSeg.input_transform", "paddle.argmax.numpy", "numpy.squeeze().astype", "face_seg.FaceSeg.output_transform", "paddle.no_grad", "face_seg.FaceSeg.net", "paddle.argmax", "numpy.squeeze"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.face_seg.FaceSeg.input_transform", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.face_seg.FaceSeg.output_transform"], ["", "def", "__call__", "(", "self", ",", "image", ")", ":", "\n", "        ", "image_input", "=", "self", ".", "input_transform", "(", "image", ")", "# RGB image", "\n", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "            ", "logits", "=", "self", ".", "net", "(", "image_input", ")", "\n", "pred", "=", "paddle", ".", "argmax", "(", "logits", "[", "0", "]", ",", "axis", "=", "1", ")", "\n", "", "pred", "=", "pred", ".", "numpy", "(", ")", "\n", "mask", "=", "np", ".", "squeeze", "(", "pred", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n", "mask", "=", "self", ".", "output_transform", "(", "mask", ",", "shape", "=", "image", ".", "shape", "[", ":", "2", "]", ")", "\n", "return", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.face_seg.FaceSeg.input_transform": [[49, 55], ["cv2.resize", "numpy.transpose().astype", "paddle.to_tensor", "numpy.transpose"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize"], ["", "def", "input_transform", "(", "self", ",", "image", ")", ":", "\n", "        ", "image_input", "=", "cv2", ".", "resize", "(", "image", ",", "(", "384", ",", "384", ")", ",", "interpolation", "=", "cv2", ".", "INTER_AREA", ")", "\n", "image_input", "=", "(", "image_input", "/", "255.", ")", "[", "np", ".", "newaxis", ",", ":", ",", ":", ",", ":", "]", "\n", "image_input", "=", "np", ".", "transpose", "(", "image_input", ",", "(", "0", ",", "3", ",", "1", ",", "2", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "image_input", "=", "paddle", ".", "to_tensor", "(", "image_input", ")", "\n", "return", "image_input", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.face_seg.FaceSeg.output_transform": [[56, 61], ["cv2.resize", "numpy.clip().astype", "numpy.clip"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize"], ["", "@", "staticmethod", "\n", "def", "output_transform", "(", "output", ",", "shape", ")", ":", "\n", "        ", "output", "=", "cv2", ".", "resize", "(", "output", ",", "(", "shape", "[", "1", "]", ",", "shape", "[", "0", "]", ")", ")", "\n", "image_output", "=", "np", ".", "clip", "(", "(", "output", "*", "255", ")", ",", "0", ",", "255", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "return", "image_output", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.hrnet.HRNet.__init__": [[56, 152], ["paddle.Layer.__init__", "layers.ConvBNReLU", "layers.ConvBNReLU", "hrnet.Layer1", "hrnet.TransitionLayer", "hrnet.Stage", "hrnet.TransitionLayer", "hrnet.Stage", "hrnet.TransitionLayer", "hrnet.Stage", "sum"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "\n", "pretrained", "=", "None", ",", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "4", "]", ",", "\n", "stage1_num_channels", "=", "[", "64", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "4", ",", "4", "]", ",", "\n", "stage2_num_channels", "=", "[", "18", ",", "36", "]", ",", "\n", "stage3_num_modules", "=", "4", ",", "\n", "stage3_num_blocks", "=", "[", "4", ",", "4", ",", "4", "]", ",", "\n", "stage3_num_channels", "=", "[", "18", ",", "36", ",", "72", "]", ",", "\n", "stage4_num_modules", "=", "3", ",", "\n", "stage4_num_blocks", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "stage4_num_channels", "=", "[", "18", ",", "36", ",", "72", ",", "144", "]", ",", "\n", "has_se", "=", "False", ",", "\n", "align_corners", "=", "False", ")", ":", "\n", "        ", "super", "(", "HRNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "stage1_num_modules", "=", "stage1_num_modules", "\n", "self", ".", "stage1_num_blocks", "=", "stage1_num_blocks", "\n", "self", ".", "stage1_num_channels", "=", "stage1_num_channels", "\n", "self", ".", "stage2_num_modules", "=", "stage2_num_modules", "\n", "self", ".", "stage2_num_blocks", "=", "stage2_num_blocks", "\n", "self", ".", "stage2_num_channels", "=", "stage2_num_channels", "\n", "self", ".", "stage3_num_modules", "=", "stage3_num_modules", "\n", "self", ".", "stage3_num_blocks", "=", "stage3_num_blocks", "\n", "self", ".", "stage3_num_channels", "=", "stage3_num_channels", "\n", "self", ".", "stage4_num_modules", "=", "stage4_num_modules", "\n", "self", ".", "stage4_num_blocks", "=", "stage4_num_blocks", "\n", "self", ".", "stage4_num_channels", "=", "stage4_num_channels", "\n", "self", ".", "has_se", "=", "has_se", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "self", ".", "feat_channels", "=", "[", "sum", "(", "stage4_num_channels", ")", "]", "\n", "\n", "self", ".", "conv_layer1_1", "=", "ConvBNReLU", "(", "\n", "in_channels", "=", "3", ",", "\n", "out_channels", "=", "64", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "'same'", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "conv_layer1_2", "=", "ConvBNReLU", "(", "\n", "in_channels", "=", "64", ",", "\n", "out_channels", "=", "64", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "'same'", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "la1", "=", "Layer1", "(", "\n", "num_channels", "=", "64", ",", "\n", "num_blocks", "=", "self", ".", "stage1_num_blocks", "[", "0", "]", ",", "\n", "num_filters", "=", "self", ".", "stage1_num_channels", "[", "0", "]", ",", "\n", "has_se", "=", "has_se", ",", "\n", "name", "=", "\"layer2\"", ")", "\n", "\n", "self", ".", "tr1", "=", "TransitionLayer", "(", "\n", "in_channels", "=", "[", "self", ".", "stage1_num_channels", "[", "0", "]", "*", "4", "]", ",", "\n", "out_channels", "=", "self", ".", "stage2_num_channels", ",", "\n", "name", "=", "\"tr1\"", ")", "\n", "\n", "self", ".", "st2", "=", "Stage", "(", "\n", "num_channels", "=", "self", ".", "stage2_num_channels", ",", "\n", "num_modules", "=", "self", ".", "stage2_num_modules", ",", "\n", "num_blocks", "=", "self", ".", "stage2_num_blocks", ",", "\n", "num_filters", "=", "self", ".", "stage2_num_channels", ",", "\n", "has_se", "=", "self", ".", "has_se", ",", "\n", "name", "=", "\"st2\"", ",", "\n", "align_corners", "=", "align_corners", ")", "\n", "\n", "self", ".", "tr2", "=", "TransitionLayer", "(", "\n", "in_channels", "=", "self", ".", "stage2_num_channels", ",", "\n", "out_channels", "=", "self", ".", "stage3_num_channels", ",", "\n", "name", "=", "\"tr2\"", ")", "\n", "self", ".", "st3", "=", "Stage", "(", "\n", "num_channels", "=", "self", ".", "stage3_num_channels", ",", "\n", "num_modules", "=", "self", ".", "stage3_num_modules", ",", "\n", "num_blocks", "=", "self", ".", "stage3_num_blocks", ",", "\n", "num_filters", "=", "self", ".", "stage3_num_channels", ",", "\n", "has_se", "=", "self", ".", "has_se", ",", "\n", "name", "=", "\"st3\"", ",", "\n", "align_corners", "=", "align_corners", ")", "\n", "\n", "self", ".", "tr3", "=", "TransitionLayer", "(", "\n", "in_channels", "=", "self", ".", "stage3_num_channels", ",", "\n", "out_channels", "=", "self", ".", "stage4_num_channels", ",", "\n", "name", "=", "\"tr3\"", ")", "\n", "self", ".", "st4", "=", "Stage", "(", "\n", "num_channels", "=", "self", ".", "stage4_num_channels", ",", "\n", "num_modules", "=", "self", ".", "stage4_num_modules", ",", "\n", "num_blocks", "=", "self", ".", "stage4_num_blocks", ",", "\n", "num_filters", "=", "self", ".", "stage4_num_channels", ",", "\n", "has_se", "=", "self", ".", "has_se", ",", "\n", "name", "=", "\"st4\"", ",", "\n", "align_corners", "=", "align_corners", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.hrnet.HRNet.forward": [[153, 184], ["hrnet.HRNet.conv_layer1_1", "hrnet.HRNet.conv_layer1_2", "hrnet.HRNet.la1", "hrnet.HRNet.tr1", "hrnet.HRNet.st2", "hrnet.HRNet.tr2", "hrnet.HRNet.st3", "hrnet.HRNet.tr3", "hrnet.HRNet.st4", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "conv1", "=", "self", ".", "conv_layer1_1", "(", "x", ")", "\n", "conv2", "=", "self", ".", "conv_layer1_2", "(", "conv1", ")", "\n", "\n", "la1", "=", "self", ".", "la1", "(", "conv2", ")", "\n", "\n", "tr1", "=", "self", ".", "tr1", "(", "[", "la1", "]", ")", "\n", "st2", "=", "self", ".", "st2", "(", "tr1", ")", "\n", "\n", "tr2", "=", "self", ".", "tr2", "(", "st2", ")", "\n", "st3", "=", "self", ".", "st3", "(", "tr2", ")", "\n", "\n", "tr3", "=", "self", ".", "tr3", "(", "st3", ")", "\n", "st4", "=", "self", ".", "st4", "(", "tr3", ")", "\n", "\n", "x0_h", ",", "x0_w", "=", "st4", "[", "0", "]", ".", "shape", "[", "2", ":", "]", "\n", "x1", "=", "F", ".", "interpolate", "(", "\n", "st4", "[", "1", "]", ",", "(", "x0_h", ",", "x0_w", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "x2", "=", "F", ".", "interpolate", "(", "\n", "st4", "[", "2", "]", ",", "(", "x0_h", ",", "x0_w", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "x3", "=", "F", ".", "interpolate", "(", "\n", "st4", "[", "3", "]", ",", "(", "x0_h", ",", "x0_w", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "x", "=", "paddle", ".", "concat", "(", "[", "st4", "[", "0", "]", ",", "x1", ",", "x2", ",", "x3", "]", ",", "axis", "=", "1", ")", "\n", "\n", "return", "[", "x", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.hrnet.Layer1.__init__": [[187, 208], ["paddle.Layer.__init__", "range", "hrnet.Layer1.add_sublayer", "hrnet.Layer1.bottleneck_block_list.append", "hrnet.BottleneckBlock", "str"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["    ", "def", "__init__", "(", "self", ",", "\n", "num_channels", ",", "\n", "num_filters", ",", "\n", "num_blocks", ",", "\n", "has_se", "=", "False", ",", "\n", "name", "=", "None", ")", ":", "\n", "        ", "super", "(", "Layer1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "bottleneck_block_list", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "num_blocks", ")", ":", "\n", "            ", "bottleneck_block", "=", "self", ".", "add_sublayer", "(", "\n", "\"bb_{}_{}\"", ".", "format", "(", "name", ",", "i", "+", "1", ")", ",", "\n", "BottleneckBlock", "(", "\n", "num_channels", "=", "num_channels", "if", "i", "==", "0", "else", "num_filters", "*", "4", ",", "\n", "num_filters", "=", "num_filters", ",", "\n", "has_se", "=", "has_se", ",", "\n", "stride", "=", "1", ",", "\n", "downsample", "=", "True", "if", "i", "==", "0", "else", "False", ",", "\n", "name", "=", "name", "+", "'_'", "+", "str", "(", "i", "+", "1", ")", ")", ")", "\n", "self", ".", "bottleneck_block_list", ".", "append", "(", "bottleneck_block", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.hrnet.Layer1.forward": [[209, 214], ["block_func"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "conv", "=", "x", "\n", "for", "block_func", "in", "self", ".", "bottleneck_block_list", ":", "\n", "            ", "conv", "=", "block_func", "(", "conv", ")", "\n", "", "return", "conv", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.hrnet.TransitionLayer.__init__": [[217, 246], ["paddle.Layer.__init__", "len", "len", "range", "hrnet.TransitionLayer.conv_bn_func_list.append", "hrnet.TransitionLayer.add_sublayer", "hrnet.TransitionLayer.add_sublayer", "layers.ConvBNReLU", "layers.ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "name", "=", "None", ")", ":", "\n", "        ", "super", "(", "TransitionLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "num_in", "=", "len", "(", "in_channels", ")", "\n", "num_out", "=", "len", "(", "out_channels", ")", "\n", "self", ".", "conv_bn_func_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_out", ")", ":", "\n", "            ", "residual", "=", "None", "\n", "if", "i", "<", "num_in", ":", "\n", "                ", "if", "in_channels", "[", "i", "]", "!=", "out_channels", "[", "i", "]", ":", "\n", "                    ", "residual", "=", "self", ".", "add_sublayer", "(", "\n", "\"transition_{}_layer_{}\"", ".", "format", "(", "name", ",", "i", "+", "1", ")", ",", "\n", "ConvBNReLU", "(", "\n", "in_channels", "=", "in_channels", "[", "i", "]", ",", "\n", "out_channels", "=", "out_channels", "[", "i", "]", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "'same'", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "", "", "else", ":", "\n", "                ", "residual", "=", "self", ".", "add_sublayer", "(", "\n", "\"transition_{}_layer_{}\"", ".", "format", "(", "name", ",", "i", "+", "1", ")", ",", "\n", "ConvBNReLU", "(", "\n", "in_channels", "=", "in_channels", "[", "-", "1", "]", ",", "\n", "out_channels", "=", "out_channels", "[", "i", "]", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "'same'", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "", "self", ".", "conv_bn_func_list", ".", "append", "(", "residual", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.hrnet.TransitionLayer.forward": [[247, 258], ["enumerate", "outs.append", "len", "outs.append", "outs.append", "conv_bn_func", "conv_bn_func"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "outs", "=", "[", "]", "\n", "for", "idx", ",", "conv_bn_func", "in", "enumerate", "(", "self", ".", "conv_bn_func_list", ")", ":", "\n", "            ", "if", "conv_bn_func", "is", "None", ":", "\n", "                ", "outs", ".", "append", "(", "x", "[", "idx", "]", ")", "\n", "", "else", ":", "\n", "                ", "if", "idx", "<", "len", "(", "x", ")", ":", "\n", "                    ", "outs", ".", "append", "(", "conv_bn_func", "(", "x", "[", "idx", "]", ")", ")", "\n", "", "else", ":", "\n", "                    ", "outs", ".", "append", "(", "conv_bn_func", "(", "x", "[", "-", "1", "]", ")", ")", "\n", "", "", "", "return", "outs", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.hrnet.Branches.__init__": [[261, 284], ["paddle.Layer.__init__", "range", "len", "hrnet.Branches.basic_block_list.append", "range", "hrnet.Branches.add_sublayer", "hrnet.Branches.basic_block_list[].append", "hrnet.BasicBlock", "str", "str"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["    ", "def", "__init__", "(", "self", ",", "\n", "num_blocks", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "has_se", "=", "False", ",", "\n", "name", "=", "None", ")", ":", "\n", "        ", "super", "(", "Branches", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "basic_block_list", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "out_channels", ")", ")", ":", "\n", "            ", "self", ".", "basic_block_list", ".", "append", "(", "[", "]", ")", "\n", "for", "j", "in", "range", "(", "num_blocks", "[", "i", "]", ")", ":", "\n", "                ", "in_ch", "=", "in_channels", "[", "i", "]", "if", "j", "==", "0", "else", "out_channels", "[", "i", "]", "\n", "basic_block_func", "=", "self", ".", "add_sublayer", "(", "\n", "\"bb_{}_branch_layer_{}_{}\"", ".", "format", "(", "name", ",", "i", "+", "1", ",", "j", "+", "1", ")", ",", "\n", "BasicBlock", "(", "\n", "num_channels", "=", "in_ch", ",", "\n", "num_filters", "=", "out_channels", "[", "i", "]", ",", "\n", "has_se", "=", "has_se", ",", "\n", "name", "=", "name", "+", "'_branch_layer_'", "+", "str", "(", "i", "+", "1", ")", "+", "'_'", "+", "\n", "str", "(", "j", "+", "1", ")", ")", ")", "\n", "self", ".", "basic_block_list", "[", "i", "]", ".", "append", "(", "basic_block_func", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.hrnet.Branches.forward": [[285, 293], ["enumerate", "outs.append", "basic_block_func"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "outs", "=", "[", "]", "\n", "for", "idx", ",", "input", "in", "enumerate", "(", "x", ")", ":", "\n", "            ", "conv", "=", "input", "\n", "for", "basic_block_func", "in", "self", ".", "basic_block_list", "[", "idx", "]", ":", "\n", "                ", "conv", "=", "basic_block_func", "(", "conv", ")", "\n", "", "outs", ".", "append", "(", "conv", ")", "\n", "", "return", "outs", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.hrnet.BottleneckBlock.__init__": [[296, 344], ["paddle.Layer.__init__", "layers.ConvBNReLU", "layers.ConvBNReLU", "layers.ConvBN", "layers.ConvBN", "hrnet.SELayer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "num_channels", ",", "\n", "num_filters", ",", "\n", "has_se", ",", "\n", "stride", "=", "1", ",", "\n", "downsample", "=", "False", ",", "\n", "name", "=", "None", ")", ":", "\n", "        ", "super", "(", "BottleneckBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "has_se", "=", "has_se", "\n", "self", ".", "downsample", "=", "downsample", "\n", "\n", "self", ".", "conv1", "=", "ConvBNReLU", "(", "\n", "in_channels", "=", "num_channels", ",", "\n", "out_channels", "=", "num_filters", ",", "\n", "kernel_size", "=", "1", ",", "\n", "padding", "=", "'same'", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "conv2", "=", "ConvBNReLU", "(", "\n", "in_channels", "=", "num_filters", ",", "\n", "out_channels", "=", "num_filters", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "'same'", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "conv3", "=", "ConvBN", "(", "\n", "in_channels", "=", "num_filters", ",", "\n", "out_channels", "=", "num_filters", "*", "4", ",", "\n", "kernel_size", "=", "1", ",", "\n", "padding", "=", "'same'", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "if", "self", ".", "downsample", ":", "\n", "            ", "self", ".", "conv_down", "=", "ConvBN", "(", "\n", "in_channels", "=", "num_channels", ",", "\n", "out_channels", "=", "num_filters", "*", "4", ",", "\n", "kernel_size", "=", "1", ",", "\n", "padding", "=", "'same'", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "", "if", "self", ".", "has_se", ":", "\n", "            ", "self", ".", "se", "=", "SELayer", "(", "\n", "num_channels", "=", "num_filters", "*", "4", ",", "\n", "num_filters", "=", "num_filters", "*", "4", ",", "\n", "reduction_ratio", "=", "16", ",", "\n", "name", "=", "name", "+", "'_fc'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.hrnet.BottleneckBlock.forward": [[345, 360], ["hrnet.BottleneckBlock.conv1", "hrnet.BottleneckBlock.conv2", "hrnet.BottleneckBlock.conv3", "paddle.relu", "paddle.relu", "paddle.relu", "hrnet.BottleneckBlock.conv_down", "hrnet.BottleneckBlock.se"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "conv1", "=", "self", ".", "conv1", "(", "x", ")", "\n", "conv2", "=", "self", ".", "conv2", "(", "conv1", ")", "\n", "conv3", "=", "self", ".", "conv3", "(", "conv2", ")", "\n", "\n", "if", "self", ".", "downsample", ":", "\n", "            ", "residual", "=", "self", ".", "conv_down", "(", "x", ")", "\n", "\n", "", "if", "self", ".", "has_se", ":", "\n", "            ", "conv3", "=", "self", ".", "se", "(", "conv3", ")", "\n", "\n", "", "y", "=", "conv3", "+", "residual", "\n", "y", "=", "F", ".", "relu", "(", "y", ")", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.hrnet.BasicBlock.__init__": [[363, 403], ["paddle.Layer.__init__", "layers.ConvBNReLU", "layers.ConvBN", "layers.ConvBNReLU", "hrnet.SELayer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "num_channels", ",", "\n", "num_filters", ",", "\n", "stride", "=", "1", ",", "\n", "has_se", "=", "False", ",", "\n", "downsample", "=", "False", ",", "\n", "name", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "has_se", "=", "has_se", "\n", "self", ".", "downsample", "=", "downsample", "\n", "\n", "self", ".", "conv1", "=", "ConvBNReLU", "(", "\n", "in_channels", "=", "num_channels", ",", "\n", "out_channels", "=", "num_filters", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "'same'", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "conv2", "=", "ConvBN", "(", "\n", "in_channels", "=", "num_filters", ",", "\n", "out_channels", "=", "num_filters", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "'same'", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "if", "self", ".", "downsample", ":", "\n", "            ", "self", ".", "conv_down", "=", "ConvBNReLU", "(", "\n", "in_channels", "=", "num_channels", ",", "\n", "out_channels", "=", "num_filters", ",", "\n", "kernel_size", "=", "1", ",", "\n", "padding", "=", "'same'", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "", "if", "self", ".", "has_se", ":", "\n", "            ", "self", ".", "se", "=", "SELayer", "(", "\n", "num_channels", "=", "num_filters", ",", "\n", "num_filters", "=", "num_filters", ",", "\n", "reduction_ratio", "=", "16", ",", "\n", "name", "=", "name", "+", "'_fc'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.hrnet.BasicBlock.forward": [[404, 418], ["hrnet.BasicBlock.conv1", "hrnet.BasicBlock.conv2", "paddle.relu", "paddle.relu", "paddle.relu", "hrnet.BasicBlock.conv_down", "hrnet.BasicBlock.se"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "conv1", "=", "self", ".", "conv1", "(", "x", ")", "\n", "conv2", "=", "self", ".", "conv2", "(", "conv1", ")", "\n", "\n", "if", "self", ".", "downsample", ":", "\n", "            ", "residual", "=", "self", ".", "conv_down", "(", "x", ")", "\n", "\n", "", "if", "self", ".", "has_se", ":", "\n", "            ", "conv2", "=", "self", ".", "se", "(", "conv2", ")", "\n", "\n", "", "y", "=", "conv2", "+", "residual", "\n", "y", "=", "F", ".", "relu", "(", "y", ")", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.hrnet.SELayer.__init__": [[421, 442], ["paddle.Layer.__init__", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "int", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "math.sqrt", "math.sqrt", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.initializer.Uniform", "paddle.initializer.Uniform", "paddle.initializer.Uniform", "paddle.initializer.Uniform", "paddle.initializer.Uniform", "paddle.initializer.Uniform"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_channels", ",", "num_filters", ",", "reduction_ratio", ",", "name", "=", "None", ")", ":", "\n", "        ", "super", "(", "SELayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "pool2d_gap", "=", "nn", ".", "AdaptiveAvgPool2D", "(", "1", ")", "\n", "\n", "self", ".", "_num_channels", "=", "num_channels", "\n", "\n", "med_ch", "=", "int", "(", "num_channels", "/", "reduction_ratio", ")", "\n", "stdv", "=", "1.0", "/", "math", ".", "sqrt", "(", "num_channels", "*", "1.0", ")", "\n", "self", ".", "squeeze", "=", "nn", ".", "Linear", "(", "\n", "num_channels", ",", "\n", "med_ch", ",", "\n", "weight_attr", "=", "paddle", ".", "ParamAttr", "(", "\n", "initializer", "=", "nn", ".", "initializer", ".", "Uniform", "(", "-", "stdv", ",", "stdv", ")", ")", ")", "\n", "\n", "stdv", "=", "1.0", "/", "math", ".", "sqrt", "(", "med_ch", "*", "1.0", ")", "\n", "self", ".", "excitation", "=", "nn", ".", "Linear", "(", "\n", "med_ch", ",", "\n", "num_filters", ",", "\n", "weight_attr", "=", "paddle", ".", "ParamAttr", "(", "\n", "initializer", "=", "nn", ".", "initializer", ".", "Uniform", "(", "-", "stdv", ",", "stdv", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.hrnet.SELayer.forward": [[443, 454], ["hrnet.SELayer.pool2d_gap", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "hrnet.SELayer.squeeze", "paddle.relu", "paddle.relu", "paddle.relu", "hrnet.SELayer.excitation", "paddle.sigmoid", "paddle.sigmoid", "paddle.sigmoid", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "pool", "=", "self", ".", "pool2d_gap", "(", "x", ")", "\n", "pool", "=", "paddle", ".", "reshape", "(", "pool", ",", "shape", "=", "[", "-", "1", ",", "self", ".", "_num_channels", "]", ")", "\n", "squeeze", "=", "self", ".", "squeeze", "(", "pool", ")", "\n", "squeeze", "=", "F", ".", "relu", "(", "squeeze", ")", "\n", "excitation", "=", "self", ".", "excitation", "(", "squeeze", ")", "\n", "excitation", "=", "F", ".", "sigmoid", "(", "excitation", ")", "\n", "excitation", "=", "paddle", ".", "reshape", "(", "\n", "excitation", ",", "shape", "=", "[", "-", "1", ",", "self", ".", "_num_channels", ",", "1", ",", "1", "]", ")", "\n", "out", "=", "x", "*", "excitation", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.hrnet.Stage.__init__": [[457, 495], ["paddle.Layer.__init__", "range", "hrnet.Stage.stage_func_list.append", "hrnet.Stage.add_sublayer", "hrnet.Stage.add_sublayer", "hrnet.HighResolutionModule", "hrnet.HighResolutionModule", "str", "str"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["    ", "def", "__init__", "(", "self", ",", "\n", "num_channels", ",", "\n", "num_modules", ",", "\n", "num_blocks", ",", "\n", "num_filters", ",", "\n", "has_se", "=", "False", ",", "\n", "multi_scale_output", "=", "True", ",", "\n", "name", "=", "None", ",", "\n", "align_corners", "=", "False", ")", ":", "\n", "        ", "super", "(", "Stage", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_num_modules", "=", "num_modules", "\n", "\n", "self", ".", "stage_func_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_modules", ")", ":", "\n", "            ", "if", "i", "==", "num_modules", "-", "1", "and", "not", "multi_scale_output", ":", "\n", "                ", "stage_func", "=", "self", ".", "add_sublayer", "(", "\n", "\"stage_{}_{}\"", ".", "format", "(", "name", ",", "i", "+", "1", ")", ",", "\n", "HighResolutionModule", "(", "\n", "num_channels", "=", "num_channels", ",", "\n", "num_blocks", "=", "num_blocks", ",", "\n", "num_filters", "=", "num_filters", ",", "\n", "has_se", "=", "has_se", ",", "\n", "multi_scale_output", "=", "False", ",", "\n", "name", "=", "name", "+", "'_'", "+", "str", "(", "i", "+", "1", ")", ",", "\n", "align_corners", "=", "align_corners", ")", ")", "\n", "", "else", ":", "\n", "                ", "stage_func", "=", "self", ".", "add_sublayer", "(", "\n", "\"stage_{}_{}\"", ".", "format", "(", "name", ",", "i", "+", "1", ")", ",", "\n", "HighResolutionModule", "(", "\n", "num_channels", "=", "num_channels", ",", "\n", "num_blocks", "=", "num_blocks", ",", "\n", "num_filters", "=", "num_filters", ",", "\n", "has_se", "=", "has_se", ",", "\n", "name", "=", "name", "+", "'_'", "+", "str", "(", "i", "+", "1", ")", ",", "\n", "align_corners", "=", "align_corners", ")", ")", "\n", "\n", "", "self", ".", "stage_func_list", ".", "append", "(", "stage_func", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.hrnet.Stage.forward": [[496, 501], ["range"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "x", "\n", "for", "idx", "in", "range", "(", "self", ".", "_num_modules", ")", ":", "\n", "            ", "out", "=", "self", ".", "stage_func_list", "[", "idx", "]", "(", "out", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.hrnet.HighResolutionModule.__init__": [[504, 527], ["paddle.Layer.__init__", "hrnet.Branches", "hrnet.FuseLayers"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "num_channels", ",", "\n", "num_blocks", ",", "\n", "num_filters", ",", "\n", "has_se", "=", "False", ",", "\n", "multi_scale_output", "=", "True", ",", "\n", "name", "=", "None", ",", "\n", "align_corners", "=", "False", ")", ":", "\n", "        ", "super", "(", "HighResolutionModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "branches_func", "=", "Branches", "(", "\n", "num_blocks", "=", "num_blocks", ",", "\n", "in_channels", "=", "num_channels", ",", "\n", "out_channels", "=", "num_filters", ",", "\n", "has_se", "=", "has_se", ",", "\n", "name", "=", "name", ")", "\n", "\n", "self", ".", "fuse_func", "=", "FuseLayers", "(", "\n", "in_channels", "=", "num_filters", ",", "\n", "out_channels", "=", "num_filters", ",", "\n", "multi_scale_output", "=", "multi_scale_output", ",", "\n", "name", "=", "name", ",", "\n", "align_corners", "=", "align_corners", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.hrnet.HighResolutionModule.forward": [[528, 532], ["hrnet.HighResolutionModule.branches_func", "hrnet.HighResolutionModule.fuse_func"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "branches_func", "(", "x", ")", "\n", "out", "=", "self", ".", "fuse_func", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.hrnet.FuseLayers.__init__": [[535, 588], ["paddle.Layer.__init__", "range", "len", "range", "len", "hrnet.FuseLayers.add_sublayer", "hrnet.FuseLayers.residual_func_list.append", "layers.ConvBN", "range", "hrnet.FuseLayers.residual_func_list.append", "hrnet.FuseLayers.add_sublayer", "hrnet.FuseLayers.add_sublayer", "layers.ConvBN", "layers.ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "multi_scale_output", "=", "True", ",", "\n", "name", "=", "None", ",", "\n", "align_corners", "=", "False", ")", ":", "\n", "        ", "super", "(", "FuseLayers", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_actual_ch", "=", "len", "(", "in_channels", ")", "if", "multi_scale_output", "else", "1", "\n", "self", ".", "_in_channels", "=", "in_channels", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "\n", "self", ".", "residual_func_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "_actual_ch", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "len", "(", "in_channels", ")", ")", ":", "\n", "                ", "if", "j", ">", "i", ":", "\n", "                    ", "residual_func", "=", "self", ".", "add_sublayer", "(", "\n", "\"residual_{}_layer_{}_{}\"", ".", "format", "(", "name", ",", "i", "+", "1", ",", "j", "+", "1", ")", ",", "\n", "ConvBN", "(", "\n", "in_channels", "=", "in_channels", "[", "j", "]", ",", "\n", "out_channels", "=", "out_channels", "[", "i", "]", ",", "\n", "kernel_size", "=", "1", ",", "\n", "padding", "=", "'same'", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "self", ".", "residual_func_list", ".", "append", "(", "residual_func", ")", "\n", "", "elif", "j", "<", "i", ":", "\n", "                    ", "pre_num_filters", "=", "in_channels", "[", "j", "]", "\n", "for", "k", "in", "range", "(", "i", "-", "j", ")", ":", "\n", "                        ", "if", "k", "==", "i", "-", "j", "-", "1", ":", "\n", "                            ", "residual_func", "=", "self", ".", "add_sublayer", "(", "\n", "\"residual_{}_layer_{}_{}_{}\"", ".", "format", "(", "\n", "name", ",", "i", "+", "1", ",", "j", "+", "1", ",", "k", "+", "1", ")", ",", "\n", "ConvBN", "(", "\n", "in_channels", "=", "pre_num_filters", ",", "\n", "out_channels", "=", "out_channels", "[", "i", "]", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "'same'", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "pre_num_filters", "=", "out_channels", "[", "i", "]", "\n", "", "else", ":", "\n", "                            ", "residual_func", "=", "self", ".", "add_sublayer", "(", "\n", "\"residual_{}_layer_{}_{}_{}\"", ".", "format", "(", "\n", "name", ",", "i", "+", "1", ",", "j", "+", "1", ",", "k", "+", "1", ")", ",", "\n", "ConvBNReLU", "(", "\n", "in_channels", "=", "pre_num_filters", ",", "\n", "out_channels", "=", "out_channels", "[", "j", "]", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "'same'", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "pre_num_filters", "=", "out_channels", "[", "j", "]", "\n", "", "self", ".", "residual_func_list", ".", "append", "(", "residual_func", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.hrnet.FuseLayers.forward": [[589, 618], ["range", "range", "paddle.relu", "paddle.relu", "paddle.relu", "outs.append", "len", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "range"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "", "", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "outs", "=", "[", "]", "\n", "residual_func_idx", "=", "0", "\n", "for", "i", "in", "range", "(", "self", ".", "_actual_ch", ")", ":", "\n", "            ", "residual", "=", "x", "[", "i", "]", "\n", "residual_shape", "=", "residual", ".", "shape", "[", "-", "2", ":", "]", "\n", "for", "j", "in", "range", "(", "len", "(", "self", ".", "_in_channels", ")", ")", ":", "\n", "                ", "if", "j", ">", "i", ":", "\n", "                    ", "y", "=", "self", ".", "residual_func_list", "[", "residual_func_idx", "]", "(", "x", "[", "j", "]", ")", "\n", "residual_func_idx", "+=", "1", "\n", "\n", "y", "=", "F", ".", "interpolate", "(", "\n", "y", ",", "\n", "residual_shape", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "\n", "residual", "=", "residual", "+", "y", "\n", "", "elif", "j", "<", "i", ":", "\n", "                    ", "y", "=", "x", "[", "j", "]", "\n", "for", "k", "in", "range", "(", "i", "-", "j", ")", ":", "\n", "                        ", "y", "=", "self", ".", "residual_func_list", "[", "residual_func_idx", "]", "(", "y", ")", "\n", "residual_func_idx", "+=", "1", "\n", "\n", "", "residual", "=", "residual", "+", "y", "\n", "\n", "", "", "residual", "=", "F", ".", "relu", "(", "residual", ")", "\n", "outs", ".", "append", "(", "residual", ")", "\n", "\n", "", "return", "outs", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.hrnet.HRNet_W18_Small_V1": [[620, 636], ["hrnet.HRNet"], "function", ["None"], ["", "", "def", "HRNet_W18_Small_V1", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "HRNet", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "1", "]", ",", "\n", "stage1_num_channels", "=", "[", "32", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "2", ",", "2", "]", ",", "\n", "stage2_num_channels", "=", "[", "16", ",", "32", "]", ",", "\n", "stage3_num_modules", "=", "1", ",", "\n", "stage3_num_blocks", "=", "[", "2", ",", "2", ",", "2", "]", ",", "\n", "stage3_num_channels", "=", "[", "16", ",", "32", ",", "64", "]", ",", "\n", "stage4_num_modules", "=", "1", ",", "\n", "stage4_num_blocks", "=", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "\n", "stage4_num_channels", "=", "[", "16", ",", "32", ",", "64", ",", "128", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.hrnet.HRNet_W18_Small_V2": [[638, 654], ["hrnet.HRNet"], "function", ["None"], ["", "def", "HRNet_W18_Small_V2", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "HRNet", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "2", "]", ",", "\n", "stage1_num_channels", "=", "[", "64", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "2", ",", "2", "]", ",", "\n", "stage2_num_channels", "=", "[", "18", ",", "36", "]", ",", "\n", "stage3_num_modules", "=", "1", ",", "\n", "stage3_num_blocks", "=", "[", "2", ",", "2", ",", "2", "]", ",", "\n", "stage3_num_channels", "=", "[", "18", ",", "36", ",", "72", "]", ",", "\n", "stage4_num_modules", "=", "1", ",", "\n", "stage4_num_blocks", "=", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "\n", "stage4_num_channels", "=", "[", "18", ",", "36", ",", "72", ",", "144", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.hrnet.HRNet_W18": [[656, 672], ["hrnet.HRNet"], "function", ["None"], ["", "def", "HRNet_W18", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "HRNet", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "4", "]", ",", "\n", "stage1_num_channels", "=", "[", "64", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "4", ",", "4", "]", ",", "\n", "stage2_num_channels", "=", "[", "18", ",", "36", "]", ",", "\n", "stage3_num_modules", "=", "4", ",", "\n", "stage3_num_blocks", "=", "[", "4", ",", "4", ",", "4", "]", ",", "\n", "stage3_num_channels", "=", "[", "18", ",", "36", ",", "72", "]", ",", "\n", "stage4_num_modules", "=", "3", ",", "\n", "stage4_num_blocks", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "stage4_num_channels", "=", "[", "18", ",", "36", ",", "72", ",", "144", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.hrnet.HRNet_W30": [[674, 690], ["hrnet.HRNet"], "function", ["None"], ["", "def", "HRNet_W30", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "HRNet", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "4", "]", ",", "\n", "stage1_num_channels", "=", "[", "64", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "4", ",", "4", "]", ",", "\n", "stage2_num_channels", "=", "[", "30", ",", "60", "]", ",", "\n", "stage3_num_modules", "=", "4", ",", "\n", "stage3_num_blocks", "=", "[", "4", ",", "4", ",", "4", "]", ",", "\n", "stage3_num_channels", "=", "[", "30", ",", "60", ",", "120", "]", ",", "\n", "stage4_num_modules", "=", "3", ",", "\n", "stage4_num_blocks", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "stage4_num_channels", "=", "[", "30", ",", "60", ",", "120", ",", "240", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.hrnet.HRNet_W32": [[692, 708], ["hrnet.HRNet"], "function", ["None"], ["", "def", "HRNet_W32", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "HRNet", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "4", "]", ",", "\n", "stage1_num_channels", "=", "[", "64", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "4", ",", "4", "]", ",", "\n", "stage2_num_channels", "=", "[", "32", ",", "64", "]", ",", "\n", "stage3_num_modules", "=", "4", ",", "\n", "stage3_num_blocks", "=", "[", "4", ",", "4", ",", "4", "]", ",", "\n", "stage3_num_channels", "=", "[", "32", ",", "64", ",", "128", "]", ",", "\n", "stage4_num_modules", "=", "3", ",", "\n", "stage4_num_blocks", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "stage4_num_channels", "=", "[", "32", ",", "64", ",", "128", ",", "256", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.hrnet.HRNet_W40": [[710, 726], ["hrnet.HRNet"], "function", ["None"], ["", "def", "HRNet_W40", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "HRNet", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "4", "]", ",", "\n", "stage1_num_channels", "=", "[", "64", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "4", ",", "4", "]", ",", "\n", "stage2_num_channels", "=", "[", "40", ",", "80", "]", ",", "\n", "stage3_num_modules", "=", "4", ",", "\n", "stage3_num_blocks", "=", "[", "4", ",", "4", ",", "4", "]", ",", "\n", "stage3_num_channels", "=", "[", "40", ",", "80", ",", "160", "]", ",", "\n", "stage4_num_modules", "=", "3", ",", "\n", "stage4_num_blocks", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "stage4_num_channels", "=", "[", "40", ",", "80", ",", "160", ",", "320", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.hrnet.HRNet_W44": [[728, 744], ["hrnet.HRNet"], "function", ["None"], ["", "def", "HRNet_W44", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "HRNet", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "4", "]", ",", "\n", "stage1_num_channels", "=", "[", "64", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "4", ",", "4", "]", ",", "\n", "stage2_num_channels", "=", "[", "44", ",", "88", "]", ",", "\n", "stage3_num_modules", "=", "4", ",", "\n", "stage3_num_blocks", "=", "[", "4", ",", "4", ",", "4", "]", ",", "\n", "stage3_num_channels", "=", "[", "44", ",", "88", ",", "176", "]", ",", "\n", "stage4_num_modules", "=", "3", ",", "\n", "stage4_num_blocks", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "stage4_num_channels", "=", "[", "44", ",", "88", ",", "176", ",", "352", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.hrnet.HRNet_W48": [[746, 762], ["hrnet.HRNet"], "function", ["None"], ["", "def", "HRNet_W48", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "HRNet", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "4", "]", ",", "\n", "stage1_num_channels", "=", "[", "64", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "4", ",", "4", "]", ",", "\n", "stage2_num_channels", "=", "[", "48", ",", "96", "]", ",", "\n", "stage3_num_modules", "=", "4", ",", "\n", "stage3_num_blocks", "=", "[", "4", ",", "4", ",", "4", "]", ",", "\n", "stage3_num_channels", "=", "[", "48", ",", "96", ",", "192", "]", ",", "\n", "stage4_num_modules", "=", "3", ",", "\n", "stage4_num_blocks", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "stage4_num_channels", "=", "[", "48", ",", "96", ",", "192", ",", "384", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.hrnet.HRNet_W60": [[764, 780], ["hrnet.HRNet"], "function", ["None"], ["", "def", "HRNet_W60", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "HRNet", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "4", "]", ",", "\n", "stage1_num_channels", "=", "[", "64", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "4", ",", "4", "]", ",", "\n", "stage2_num_channels", "=", "[", "60", ",", "120", "]", ",", "\n", "stage3_num_modules", "=", "4", ",", "\n", "stage3_num_blocks", "=", "[", "4", ",", "4", ",", "4", "]", ",", "\n", "stage3_num_channels", "=", "[", "60", ",", "120", ",", "240", "]", ",", "\n", "stage4_num_modules", "=", "3", ",", "\n", "stage4_num_blocks", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "stage4_num_channels", "=", "[", "60", ",", "120", ",", "240", ",", "480", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.hrnet.HRNet_W64": [[782, 798], ["hrnet.HRNet"], "function", ["None"], ["", "def", "HRNet_W64", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "HRNet", "(", "\n", "stage1_num_modules", "=", "1", ",", "\n", "stage1_num_blocks", "=", "[", "4", "]", ",", "\n", "stage1_num_channels", "=", "[", "64", "]", ",", "\n", "stage2_num_modules", "=", "1", ",", "\n", "stage2_num_blocks", "=", "[", "4", ",", "4", "]", ",", "\n", "stage2_num_channels", "=", "[", "64", ",", "128", "]", ",", "\n", "stage3_num_modules", "=", "4", ",", "\n", "stage3_num_blocks", "=", "[", "4", ",", "4", ",", "4", "]", ",", "\n", "stage3_num_channels", "=", "[", "64", ",", "128", ",", "256", "]", ",", "\n", "stage4_num_modules", "=", "3", ",", "\n", "stage4_num_blocks", "=", "[", "4", ",", "4", ",", "4", ",", "4", "]", ",", "\n", "stage4_num_channels", "=", "[", "64", ",", "128", ",", "256", ",", "512", "]", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.fcn.FCN.__init__": [[41, 60], ["paddle.Layer.__init__", "fcn.FCNHead"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone", ",", "\n", "backbone_indices", "=", "(", "-", "1", ",", ")", ",", "\n", "channels", "=", "None", ",", "\n", "align_corners", "=", "False", ",", "\n", "pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", "FCN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "backbone", "=", "backbone", "\n", "backbone_channels", "=", "[", "\n", "backbone", ".", "feat_channels", "[", "i", "]", "for", "i", "in", "backbone_indices", "\n", "]", "\n", "\n", "self", ".", "head", "=", "FCNHead", "(", "num_classes", ",", "backbone_indices", ",", "backbone_channels", ",", "\n", "channels", ")", "\n", "\n", "self", ".", "align_corners", "=", "align_corners", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.fcn.FCN.forward": [[61, 70], ["fcn.FCN.backbone", "fcn.FCN.head", "paddle.interpolate", "paddle.interpolate"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feat_list", "=", "self", ".", "backbone", "(", "x", ")", "\n", "logit_list", "=", "self", ".", "head", "(", "feat_list", ")", "\n", "return", "[", "\n", "F", ".", "interpolate", "(", "\n", "logit", ",", "\n", "x", ".", "shape", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ")", "for", "logit", "in", "logit_list", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.fcn.FCNHead.__init__": [[86, 110], ["paddle.Layer.__init__", "layers.ConvBNReLU", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "backbone_indices", "=", "(", "-", "1", ",", ")", ",", "\n", "backbone_channels", "=", "(", "270", ",", ")", ",", "\n", "channels", "=", "None", ")", ":", "\n", "        ", "super", "(", "FCNHead", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "backbone_indices", "=", "backbone_indices", "\n", "if", "channels", "is", "None", ":", "\n", "            ", "channels", "=", "backbone_channels", "[", "0", "]", "\n", "\n", "", "self", ".", "conv_1", "=", "ConvBNReLU", "(", "\n", "in_channels", "=", "backbone_channels", "[", "0", "]", ",", "\n", "out_channels", "=", "channels", ",", "\n", "kernel_size", "=", "1", ",", "\n", "padding", "=", "'same'", ",", "\n", "stride", "=", "1", ")", "\n", "self", ".", "cls", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "channels", ",", "\n", "out_channels", "=", "self", ".", "num_classes", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.fcn.FCNHead.forward": [[111, 118], ["fcn.FCNHead.conv_1", "fcn.FCNHead.cls", "logit_list.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "forward", "(", "self", ",", "feat_list", ")", ":", "\n", "        ", "logit_list", "=", "[", "]", "\n", "x", "=", "feat_list", "[", "self", ".", "backbone_indices", "[", "0", "]", "]", "\n", "x", "=", "self", ".", "conv_1", "(", "x", ")", "\n", "logit", "=", "self", ".", "cls", "(", "x", ")", "\n", "logit_list", ".", "append", "(", "logit", ")", "\n", "return", "logit_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.layers.ConvBNReLU.__init__": [[29, 41], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "layers.SyncBatchNorm"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.SyncBatchNorm"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "padding", "=", "'same'", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_conv", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "padding", "=", "padding", ",", "**", "kwargs", ")", "\n", "\n", "self", ".", "_batch_norm", "=", "SyncBatchNorm", "(", "out_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.layers.ConvBNReLU.forward": [[42, 47], ["layers.ConvBNReLU._conv", "layers.ConvBNReLU._batch_norm", "paddle.relu", "paddle.relu", "paddle.relu"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "_conv", "(", "x", ")", "\n", "x", "=", "self", ".", "_batch_norm", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.layers.ConvBN.__init__": [[50, 60], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "layers.SyncBatchNorm"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.SyncBatchNorm"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "padding", "=", "'same'", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_conv", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "padding", "=", "padding", ",", "**", "kwargs", ")", "\n", "self", ".", "_batch_norm", "=", "SyncBatchNorm", "(", "out_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.layers.ConvBN.forward": [[61, 65], ["layers.ConvBN._conv", "layers.ConvBN._batch_norm"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "_conv", "(", "x", ")", "\n", "x", "=", "self", ".", "_batch_norm", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_segmentation.layers.SyncBatchNorm": [[20, 26], ["paddle.get_device", "paddle.get_device", "paddle.get_device", "paddle.BatchNorm", "paddle.SyncBatchNorm"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.SyncBatchNorm"], ["def", "SyncBatchNorm", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"In cpu environment nn.SyncBatchNorm does not have kernel so use nn.BatchNorm instead\"\"\"", "\n", "if", "paddle", ".", "get_device", "(", ")", "==", "'cpu'", ":", "\n", "        ", "return", "nn", ".", "BatchNorm", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "", "else", ":", "\n", "        ", "return", "nn", ".", "SyncBatchNorm", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init._calculate_fan_in_and_fan_out": [[11, 27], ["len", "ValueError", "len", "paddle.numel"], "function", ["None"], ["def", "_calculate_fan_in_and_fan_out", "(", "tensor", ")", ":", "\n", "    ", "dimensions", "=", "len", "(", "tensor", ".", "shape", ")", "\n", "if", "dimensions", "<", "2", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "\"Fan in and fan out can not be computed for tensor with fewer than 2 dimensions\"", "\n", ")", "\n", "\n", "", "num_input_fmaps", "=", "tensor", ".", "shape", "[", "1", "]", "\n", "num_output_fmaps", "=", "tensor", ".", "shape", "[", "0", "]", "\n", "receptive_field_size", "=", "1", "\n", "if", "len", "(", "tensor", ".", "shape", ")", ">", "2", ":", "\n", "        ", "receptive_field_size", "=", "paddle", ".", "numel", "(", "tensor", "[", "0", "]", "[", "0", "]", ")", "\n", "", "fan_in", "=", "num_input_fmaps", "*", "receptive_field_size", "\n", "fan_out", "=", "num_output_fmaps", "*", "receptive_field_size", "\n", "\n", "return", "fan_in", ",", "fan_out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init._calculate_correct_fan": [[29, 38], ["mode.lower.lower", "init._calculate_fan_in_and_fan_out", "ValueError"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init._calculate_fan_in_and_fan_out"], ["", "def", "_calculate_correct_fan", "(", "tensor", ",", "mode", ")", ":", "\n", "    ", "mode", "=", "mode", ".", "lower", "(", ")", "\n", "valid_modes", "=", "[", "'fan_in'", ",", "'fan_out'", "]", "\n", "if", "mode", "not", "in", "valid_modes", ":", "\n", "        ", "raise", "ValueError", "(", "\"Mode {} not supported, please use one of {}\"", ".", "format", "(", "\n", "mode", ",", "valid_modes", ")", ")", "\n", "\n", "", "fan_in", ",", "fan_out", "=", "_calculate_fan_in_and_fan_out", "(", "tensor", ")", "\n", "return", "fan_in", "if", "mode", "==", "'fan_in'", "else", "fan_out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.calculate_gain": [[40, 82], ["math.sqrt", "math.sqrt", "ValueError", "isinstance", "ValueError", "isinstance", "isinstance"], "function", ["None"], ["", "def", "calculate_gain", "(", "nonlinearity", ",", "param", "=", "None", ")", ":", "\n", "    ", "\"\"\"Return the recommended gain value for the given nonlinearity function.\n    The values are as follows:\n\n    ================= ====================================================\n    nonlinearity      gain\n    ================= ====================================================\n    Linear / Identity :math:`1`\n    Conv{1,2,3}D      :math:`1`\n    Sigmoid           :math:`1`\n    Tanh              :math:`\\frac{5}{3}`\n    ReLU              :math:`\\sqrt{2}`\n    Leaky Relu        :math:`\\sqrt{\\frac{2}{1 + \\text{negative\\_slope}^2}}`\n    ================= ====================================================\n\n    Args:\n        nonlinearity: the non-linear function (`nn.functional` name)\n        param: optional parameter for the non-linear function\n    \"\"\"", "\n", "linear_fns", "=", "[", "\n", "'linear'", ",", "'conv1d'", ",", "'conv2d'", ",", "'conv3d'", ",", "'conv_transpose1d'", ",", "\n", "'conv_transpose2d'", ",", "'conv_transpose3d'", "\n", "]", "\n", "if", "nonlinearity", "in", "linear_fns", "or", "nonlinearity", "==", "'sigmoid'", ":", "\n", "        ", "return", "1", "\n", "", "elif", "nonlinearity", "==", "'tanh'", ":", "\n", "        ", "return", "5.0", "/", "3", "\n", "", "elif", "nonlinearity", "==", "'relu'", ":", "\n", "        ", "return", "math", ".", "sqrt", "(", "2.0", ")", "\n", "", "elif", "nonlinearity", "==", "'leaky_relu'", ":", "\n", "        ", "if", "param", "is", "None", ":", "\n", "            ", "negative_slope", "=", "0.01", "\n", "", "elif", "not", "isinstance", "(", "param", ",", "bool", ")", "and", "isinstance", "(", "\n", "param", ",", "int", ")", "or", "isinstance", "(", "param", ",", "float", ")", ":", "\n", "# True/False are instances of int, hence check above", "\n", "            ", "negative_slope", "=", "param", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"negative_slope {} not a valid number\"", ".", "format", "(", "param", ")", ")", "\n", "", "return", "math", ".", "sqrt", "(", "2.0", "/", "(", "1", "+", "negative_slope", "**", "2", ")", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "\"Unsupported nonlinearity {}\"", ".", "format", "(", "nonlinearity", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.constant_": [[84, 89], ["paddle.no_grad", "paddle.full", "x.set_value"], "function", ["None"], ["", "", "@", "paddle", ".", "no_grad", "(", ")", "\n", "def", "constant_", "(", "x", ",", "value", ")", ":", "\n", "    ", "temp_value", "=", "paddle", ".", "full", "(", "x", ".", "shape", ",", "value", ",", "x", ".", "dtype", ")", "\n", "x", ".", "set_value", "(", "temp_value", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.normal_": [[91, 96], ["paddle.no_grad", "paddle.normal", "x.set_value"], "function", ["None"], ["", "@", "paddle", ".", "no_grad", "(", ")", "\n", "def", "normal_", "(", "x", ",", "mean", "=", "0.", ",", "std", "=", "1.", ")", ":", "\n", "    ", "temp_value", "=", "paddle", ".", "normal", "(", "mean", ",", "std", ",", "shape", "=", "x", ".", "shape", ")", "\n", "x", ".", "set_value", "(", "temp_value", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.uniform_": [[98, 103], ["paddle.no_grad", "paddle.uniform", "x.set_value"], "function", ["None"], ["", "@", "paddle", ".", "no_grad", "(", ")", "\n", "def", "uniform_", "(", "x", ",", "a", "=", "-", "1.", ",", "b", "=", "1.", ")", ":", "\n", "    ", "temp_value", "=", "paddle", ".", "uniform", "(", "min", "=", "a", ",", "max", "=", "b", ",", "shape", "=", "x", ".", "shape", ")", "\n", "x", ".", "set_value", "(", "temp_value", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.xavier_uniform_": [[105, 128], ["paddle.no_grad", "init._calculate_fan_in_and_fan_out", "init.uniform_", "math.sqrt", "math.sqrt", "float"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init._calculate_fan_in_and_fan_out", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.uniform_"], ["", "@", "paddle", ".", "no_grad", "(", ")", "\n", "def", "xavier_uniform_", "(", "x", ",", "gain", "=", "1.", ")", ":", "\n", "    ", "\"\"\"Fills the input `Tensor` with values according to the method\n    described in `Understanding the difficulty of training deep feedforward\n    neural networks` - Glorot, X. & Bengio, Y. (2010), using a uniform\n    distribution. The resulting tensor will have values sampled from\n    :math:`\\mathcal{U}(-a, a)` where\n\n    .. math::\n        a = \\text{gain} \\times \\sqrt{\\frac{6}{\\text{fan\\_in} + \\text{fan\\_out}}}\n\n    Also known as Glorot initialization.\n\n    Args:\n        x: an n-dimensional `paddle.Tensor`\n        gain: an optional scaling factor\n\n    \"\"\"", "\n", "fan_in", ",", "fan_out", "=", "_calculate_fan_in_and_fan_out", "(", "x", ")", "\n", "std", "=", "gain", "*", "math", ".", "sqrt", "(", "2.0", "/", "float", "(", "fan_in", "+", "fan_out", ")", ")", "\n", "a", "=", "math", ".", "sqrt", "(", "3.0", ")", "*", "std", "# Calculate uniform bounds from standard deviation", "\n", "\n", "return", "uniform_", "(", "x", ",", "-", "a", ",", "a", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.xavier_normal_": [[130, 152], ["paddle.no_grad", "init._calculate_fan_in_and_fan_out", "init.normal_", "math.sqrt", "float"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init._calculate_fan_in_and_fan_out", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.normal_"], ["", "@", "paddle", ".", "no_grad", "(", ")", "\n", "def", "xavier_normal_", "(", "x", ",", "gain", "=", "1.", ")", ":", "\n", "    ", "\"\"\"Fills the input `Tensor` with values according to the method\n    described in `Understanding the difficulty of training deep feedforward\n    neural networks` - Glorot, X. & Bengio, Y. (2010), using a normal\n    distribution. The resulting tensor will have values sampled from\n    :math:`\\mathcal{N}(0, \\text{std}^2)` where\n\n    .. math::\n        \\text{std} = \\text{gain} \\times \\sqrt{\\frac{2}{\\text{fan\\_in} + \\text{fan\\_out}}}\n\n    Also known as Glorot initialization.\n\n    Args:\n        tensor: an n-dimensional `paddle.Tensor`\n        gain: an optional scaling factor\n\n    \"\"\"", "\n", "fan_in", ",", "fan_out", "=", "_calculate_fan_in_and_fan_out", "(", "x", ")", "\n", "std", "=", "gain", "*", "math", ".", "sqrt", "(", "2.0", "/", "float", "(", "fan_in", "+", "fan_out", ")", ")", "\n", "\n", "return", "normal_", "(", "x", ",", "0.", ",", "std", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.kaiming_uniform_": [[154, 189], ["paddle.no_grad", "init._calculate_correct_fan", "init.calculate_gain", "paddle.uniform", "x.set_value", "math.sqrt", "math.sqrt"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init._calculate_correct_fan", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.calculate_gain"], ["", "@", "paddle", ".", "no_grad", "(", ")", "\n", "def", "kaiming_uniform_", "(", "x", ",", "a", "=", "0", ",", "mode", "=", "'fan_in'", ",", "nonlinearity", "=", "'leaky_relu'", ")", ":", "\n", "    ", "\"\"\"Fills the input `Tensor` with values according to the method\n    described in `Delving deep into rectifiers: Surpassing human-level\n    performance on ImageNet classification` - He, K. et al. (2015), using a\n    uniform distribution. The resulting tensor will have values sampled from\n    :math:`\\mathcal{U}(-\\text{bound}, \\text{bound})` where\n\n    .. math::\n        \\text{bound} = \\text{gain} \\times \\sqrt{\\frac{3}{\\text{fan\\_mode}}}\n\n    Also known as He initialization.\n\n    Args:\n        x: an n-dimensional `paddle.Tensor`\n        a: the negative slope of the rectifier used after this layer (only\n            used with ``'leaky_relu'``)\n        mode: either ``'fan_in'`` (default) or ``'fan_out'``. Choosing ``'fan_in'``\n            preserves the magnitude of the variance of the weights in the\n            forward pass. Choosing ``'fan_out'`` preserves the magnitudes in the\n            backwards pass.\n        nonlinearity: the non-linear function (`nn.functional` name),\n            recommended to use only with ``'relu'`` or ``'leaky_relu'`` (default).\n\n    \"\"\"", "\n", "fan", "=", "_calculate_correct_fan", "(", "x", ",", "mode", ")", "\n", "gain", "=", "calculate_gain", "(", "nonlinearity", ",", "a", ")", "\n", "std", "=", "gain", "/", "math", ".", "sqrt", "(", "fan", ")", "\n", "bound", "=", "math", ".", "sqrt", "(", "\n", "3.0", ")", "*", "std", "# Calculate uniform bounds from standard deviation", "\n", "\n", "temp_value", "=", "paddle", ".", "uniform", "(", "x", ".", "shape", ",", "min", "=", "-", "bound", ",", "max", "=", "bound", ")", "\n", "x", ".", "set_value", "(", "temp_value", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.kaiming_normal_": [[191, 223], ["paddle.no_grad", "init._calculate_correct_fan", "init.calculate_gain", "paddle.normal", "x.set_value", "math.sqrt"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init._calculate_correct_fan", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.calculate_gain"], ["", "@", "paddle", ".", "no_grad", "(", ")", "\n", "def", "kaiming_normal_", "(", "x", ",", "a", "=", "0", ",", "mode", "=", "'fan_in'", ",", "nonlinearity", "=", "'leaky_relu'", ")", ":", "\n", "    ", "\"\"\"Fills the input `Tensor` with values according to the method\n    described in `Delving deep into rectifiers: Surpassing human-level\n    performance on ImageNet classification` - He, K. et al. (2015), using a\n    normal distribution. The resulting tensor will have values sampled from\n    :math:`\\mathcal{N}(0, \\text{std}^2)` where\n\n    .. math::\n        \\text{std} = \\frac{\\text{gain}}{\\sqrt{\\text{fan\\_mode}}}\n\n    Also known as He initialization.\n\n    Args:\n        x: an n-dimensional `paddle.Tensor`\n        a: the negative slope of the rectifier used after this layer (only\n            used with ``'leaky_relu'``)\n        mode: either ``'fan_in'`` (default) or ``'fan_out'``. Choosing ``'fan_in'``\n            preserves the magnitude of the variance of the weights in the\n            forward pass. Choosing ``'fan_out'`` preserves the magnitudes in the\n            backwards pass.\n        nonlinearity: the non-linear function (`nn.functional` name),\n            recommended to use only with ``'relu'`` or ``'leaky_relu'`` (default).\n\n    \"\"\"", "\n", "fan", "=", "_calculate_correct_fan", "(", "x", ",", "mode", ")", "\n", "gain", "=", "calculate_gain", "(", "nonlinearity", ",", "a", ")", "\n", "std", "=", "gain", "/", "math", ".", "sqrt", "(", "fan", ")", "\n", "\n", "temp_value", "=", "paddle", ".", "normal", "(", "0", ",", "std", ",", "shape", "=", "x", ".", "shape", ")", "\n", "x", ".", "set_value", "(", "temp_value", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.constant_init": [[225, 230], ["hasattr", "init.constant_", "hasattr", "init.constant_"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.constant_", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.constant_"], ["", "def", "constant_init", "(", "layer", ",", "val", ",", "bias", "=", "0", ")", ":", "\n", "    ", "if", "hasattr", "(", "layer", ",", "'weight'", ")", "and", "layer", ".", "weight", "is", "not", "None", ":", "\n", "        ", "constant_", "(", "layer", ".", "weight", ",", "val", ")", "\n", "", "if", "hasattr", "(", "layer", ",", "'bias'", ")", "and", "layer", ".", "bias", "is", "not", "None", ":", "\n", "        ", "constant_", "(", "layer", ".", "bias", ",", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.xavier_init": [[232, 240], ["init.xavier_uniform_", "init.xavier_normal_", "hasattr", "init.constant_"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.xavier_uniform_", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.xavier_normal_", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.constant_"], ["", "", "def", "xavier_init", "(", "layer", ",", "gain", "=", "1", ",", "bias", "=", "0", ",", "distribution", "=", "'normal'", ")", ":", "\n", "    ", "assert", "distribution", "in", "[", "'uniform'", ",", "'normal'", "]", "\n", "if", "distribution", "==", "'uniform'", ":", "\n", "        ", "xavier_uniform_", "(", "layer", ".", "weight", ",", "gain", "=", "gain", ")", "\n", "", "else", ":", "\n", "        ", "xavier_normal_", "(", "layer", ".", "weight", ",", "gain", "=", "gain", ")", "\n", "", "if", "hasattr", "(", "layer", ",", "'bias'", ")", "and", "layer", ".", "bias", "is", "not", "None", ":", "\n", "        ", "constant_", "(", "layer", ".", "bias", ",", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.normal_init": [[242, 246], ["init.normal_", "hasattr", "init.constant_"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.normal_", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.constant_"], ["", "", "def", "normal_init", "(", "layer", ",", "mean", "=", "0", ",", "std", "=", "1", ",", "bias", "=", "0", ")", ":", "\n", "    ", "normal_", "(", "layer", ".", "weight", ",", "mean", ",", "std", ")", "\n", "if", "hasattr", "(", "layer", ",", "'bias'", ")", "and", "layer", ".", "bias", "is", "not", "None", ":", "\n", "        ", "constant_", "(", "layer", ".", "bias", ",", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.uniform_init": [[248, 252], ["init.uniform_", "hasattr", "init.constant_"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.uniform_", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.constant_"], ["", "", "def", "uniform_init", "(", "layer", ",", "a", "=", "0", ",", "b", "=", "1", ",", "bias", "=", "0", ")", ":", "\n", "    ", "uniform_", "(", "layer", ".", "weight", ",", "a", ",", "b", ")", "\n", "if", "hasattr", "(", "layer", ",", "'bias'", ")", "and", "layer", ".", "bias", "is", "not", "None", ":", "\n", "        ", "constant_", "(", "layer", ".", "bias", ",", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.kaiming_init": [[254, 270], ["init.kaiming_uniform_", "init.kaiming_normal_", "hasattr", "init.constant_"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.kaiming_uniform_", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.kaiming_normal_", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.constant_"], ["", "", "def", "kaiming_init", "(", "layer", ",", "\n", "a", "=", "0", ",", "\n", "mode", "=", "'fan_out'", ",", "\n", "nonlinearity", "=", "'relu'", ",", "\n", "bias", "=", "0", ",", "\n", "distribution", "=", "'normal'", ")", ":", "\n", "    ", "assert", "distribution", "in", "[", "'uniform'", ",", "'normal'", "]", "\n", "if", "distribution", "==", "'uniform'", ":", "\n", "        ", "kaiming_uniform_", "(", "layer", ".", "weight", ",", "\n", "a", "=", "a", ",", "\n", "mode", "=", "mode", ",", "\n", "nonlinearity", "=", "nonlinearity", ")", "\n", "", "else", ":", "\n", "        ", "kaiming_normal_", "(", "layer", ".", "weight", ",", "a", "=", "a", ",", "mode", "=", "mode", ",", "nonlinearity", "=", "nonlinearity", ")", "\n", "", "if", "hasattr", "(", "layer", ",", "'bias'", ")", "and", "layer", ".", "bias", "is", "not", "None", ":", "\n", "        ", "constant_", "(", "layer", ".", "bias", ",", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.init_weights": [[272, 315], ["utils.logger.get_logger", "utils.logger.get_logger.debug", "net.apply", "hasattr", "init.normal_", "hasattr", "init.constant_", "classname.find", "init.normal_", "init.constant_", "classname.find", "classname.find", "init.xavier_normal_", "init.xavier_uniform_", "NotImplementedError", "init.kaiming_normal_", "init.kaiming_uniform_"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.logger.get_logger", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.SpectralNorm.apply", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.normal_", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.constant_", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.normal_", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.constant_", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.xavier_normal_", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.xavier_uniform_", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.kaiming_normal_", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.kaiming_uniform_"], ["", "", "def", "init_weights", "(", "net", ",", "\n", "init_type", "=", "'normal'", ",", "\n", "init_gain", "=", "0.02", ",", "\n", "distribution", "=", "'normal'", ")", ":", "\n", "    ", "\"\"\"Initialize network weights.\n    Args:\n        net (nn.Layer): network to be initialized\n        init_type (str): the name of an initialization method: normal | xavier | kaiming | orthogonal\n        init_gain (float): scaling factor for normal, xavier and orthogonal.\n    We use 'normal' in the original pix2pix and CycleGAN paper. But xavier and kaiming might\n    work better for some applications. Feel free to try yourself.\n    \"\"\"", "\n", "def", "init_func", "(", "m", ")", ":", "# define the initialization function", "\n", "        ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "hasattr", "(", "m", ",", "'weight'", ")", "and", "(", "classname", ".", "find", "(", "'Conv'", ")", "!=", "-", "1", "\n", "or", "classname", ".", "find", "(", "'Linear'", ")", "!=", "-", "1", ")", ":", "\n", "            ", "if", "init_type", "==", "'normal'", ":", "\n", "                ", "normal_", "(", "m", ".", "weight", ",", "0.0", ",", "init_gain", ")", "\n", "", "elif", "init_type", "==", "'xavier'", ":", "\n", "                ", "if", "distribution", "==", "'normal'", ":", "\n", "                    ", "xavier_normal_", "(", "m", ".", "weight", ",", "gain", "=", "init_gain", ")", "\n", "", "else", ":", "\n", "                    ", "xavier_uniform_", "(", "m", ".", "weight", ",", "gain", "=", "init_gain", ")", "\n", "\n", "", "", "elif", "init_type", "==", "'kaiming'", ":", "\n", "                ", "if", "distribution", "==", "'normal'", ":", "\n", "                    ", "kaiming_normal_", "(", "m", ".", "weight", ",", "a", "=", "0", ",", "mode", "=", "'fan_in'", ")", "\n", "", "else", ":", "\n", "                    ", "kaiming_uniform_", "(", "m", ".", "weight", ",", "a", "=", "0", ",", "mode", "=", "'fan_in'", ")", "\n", "", "", "else", ":", "\n", "                ", "raise", "NotImplementedError", "(", "\n", "'initialization method [%s] is not implemented'", "%", "init_type", ")", "\n", "", "if", "hasattr", "(", "m", ",", "'bias'", ")", "and", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "constant_", "(", "m", ".", "bias", ",", "0.0", ")", "\n", "", "", "elif", "classname", ".", "find", "(", "\n", "'BatchNorm'", "\n", ")", "!=", "-", "1", ":", "# BatchNorm Layer's weight is not a matrix; only normal distribution applies.", "\n", "            ", "normal_", "(", "m", ".", "weight", ",", "1.0", ",", "init_gain", ")", "\n", "constant_", "(", "m", ".", "bias", ",", "0.0", ")", "\n", "\n", "", "", "logger", "=", "get_logger", "(", ")", "\n", "logger", ".", "debug", "(", "'initialize network with %s'", "%", "init_type", ")", "\n", "net", ".", "apply", "(", "init_func", ")", "# apply the initialization function <init_func>", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.reset_parameters": [[317, 323], ["init.kaiming_uniform_", "init._calculate_fan_in_and_fan_out", "init.uniform_", "math.sqrt", "math.sqrt"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.kaiming_uniform_", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init._calculate_fan_in_and_fan_out", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.uniform_"], ["", "def", "reset_parameters", "(", "m", ")", ":", "\n", "    ", "kaiming_uniform_", "(", "m", ".", "weight", ",", "a", "=", "math", ".", "sqrt", "(", "5", ")", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "        ", "fan_in", ",", "_", "=", "_calculate_fan_in_and_fan_out", "(", "m", ".", "weight", ")", "\n", "bound", "=", "1", "/", "math", ".", "sqrt", "(", "fan_in", ")", "\n", "uniform_", "(", "m", ".", "bias", ",", "-", "bound", ",", "bound", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.keypoint_detector.KPDetector.__init__": [[15, 102], ["paddle.Layer.__init__", "first_order.Hourglass", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "first_order.AntiAliasInterpolation2d", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "keypoint_detector.KPDetector.jacobian[].weight.set_value", "keypoint_detector.KPDetector.jacobian[].weight.set_value", "keypoint_detector.KPDetector.jacobian[].weight.set_value", "keypoint_detector.KPDetector.jacobian[].bias.set_value", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "keypoint_detector.KPDetector.jacobian.weight.set_value", "keypoint_detector.KPDetector.jacobian.bias.set_value", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.initializer.KaimingUniform", "paddle.initializer.KaimingUniform", "paddle.initializer.KaimingUniform", "paddle.initializer.KaimingUniform", "paddle.initializer.KaimingUniform", "paddle.initializer.KaimingUniform", "paddle.initializer.KaimingUniform", "paddle.initializer.KaimingUniform", "paddle.initializer.KaimingUniform", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "\n", "block_expansion", ",", "\n", "num_kp", ",", "\n", "num_channels", ",", "\n", "max_features", ",", "\n", "num_blocks", ",", "\n", "temperature", ",", "\n", "estimate_jacobian", "=", "False", ",", "\n", "scale_factor", "=", "1", ",", "\n", "single_jacobian_map", "=", "False", ",", "\n", "pad", "=", "0", ",", "\n", "mobile_net", "=", "False", ")", ":", "\n", "        ", "super", "(", "KPDetector", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "predictor", "=", "Hourglass", "(", "block_expansion", ",", "\n", "in_features", "=", "num_channels", ",", "\n", "max_features", "=", "max_features", ",", "\n", "num_blocks", "=", "num_blocks", ",", "\n", "mobile_net", "=", "mobile_net", ")", "\n", "if", "mobile_net", ":", "\n", "            ", "self", ".", "kp", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "in_channels", "=", "self", ".", "predictor", ".", "out_filters", ",", "\n", "out_channels", "=", "self", ".", "predictor", ".", "out_filters", ",", "\n", "kernel_size", "=", "3", ",", "\n", "weight_attr", "=", "nn", ".", "initializer", ".", "KaimingUniform", "(", ")", ",", "\n", "padding", "=", "pad", ")", ",", "\n", "nn", ".", "Conv2D", "(", "in_channels", "=", "self", ".", "predictor", ".", "out_filters", ",", "\n", "out_channels", "=", "self", ".", "predictor", ".", "out_filters", ",", "\n", "kernel_size", "=", "3", ",", "\n", "weight_attr", "=", "nn", ".", "initializer", ".", "KaimingUniform", "(", ")", ",", "\n", "padding", "=", "pad", ")", ",", "\n", "nn", ".", "Conv2D", "(", "in_channels", "=", "self", ".", "predictor", ".", "out_filters", ",", "\n", "out_channels", "=", "num_kp", ",", "\n", "kernel_size", "=", "3", ",", "\n", "weight_attr", "=", "nn", ".", "initializer", ".", "KaimingUniform", "(", ")", ",", "\n", "padding", "=", "pad", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "kp", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "self", ".", "predictor", ".", "out_filters", ",", "\n", "out_channels", "=", "num_kp", ",", "\n", "kernel_size", "=", "(", "7", ",", "7", ")", ",", "\n", "padding", "=", "pad", ")", "\n", "\n", "", "if", "estimate_jacobian", ":", "\n", "            ", "self", ".", "num_jacobian_maps", "=", "1", "if", "single_jacobian_map", "else", "num_kp", "\n", "if", "mobile_net", ":", "\n", "                ", "self", ".", "jacobian", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "in_channels", "=", "self", ".", "predictor", ".", "out_filters", ",", "\n", "out_channels", "=", "self", ".", "predictor", ".", "out_filters", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "pad", ")", ",", "\n", "nn", ".", "Conv2D", "(", "in_channels", "=", "self", ".", "predictor", ".", "out_filters", ",", "\n", "out_channels", "=", "self", ".", "predictor", ".", "out_filters", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "pad", ")", ",", "\n", "nn", ".", "Conv2D", "(", "in_channels", "=", "self", ".", "predictor", ".", "out_filters", ",", "\n", "out_channels", "=", "4", "*", "self", ".", "num_jacobian_maps", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "pad", ")", ",", "\n", ")", "\n", "self", ".", "jacobian", "[", "0", "]", ".", "weight", ".", "set_value", "(", "\n", "paddle", ".", "zeros", "(", "self", ".", "jacobian", "[", "0", "]", ".", "weight", ".", "shape", ",", "dtype", "=", "'float32'", ")", ")", "\n", "self", ".", "jacobian", "[", "1", "]", ".", "weight", ".", "set_value", "(", "\n", "paddle", ".", "zeros", "(", "self", ".", "jacobian", "[", "1", "]", ".", "weight", ".", "shape", ",", "dtype", "=", "'float32'", ")", ")", "\n", "self", ".", "jacobian", "[", "2", "]", ".", "weight", ".", "set_value", "(", "\n", "paddle", ".", "zeros", "(", "self", ".", "jacobian", "[", "2", "]", ".", "weight", ".", "shape", ",", "dtype", "=", "'float32'", ")", ")", "\n", "self", ".", "jacobian", "[", "2", "]", ".", "bias", ".", "set_value", "(", "\n", "paddle", ".", "to_tensor", "(", "[", "1", ",", "0", ",", "0", ",", "1", "]", "*", "\n", "self", ".", "num_jacobian_maps", ")", ".", "astype", "(", "'float32'", ")", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "jacobian", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "self", ".", "predictor", ".", "out_filters", ",", "\n", "out_channels", "=", "4", "*", "self", ".", "num_jacobian_maps", ",", "\n", "kernel_size", "=", "(", "7", ",", "7", ")", ",", "\n", "padding", "=", "pad", ")", "\n", "self", ".", "jacobian", ".", "weight", ".", "set_value", "(", "\n", "paddle", ".", "zeros", "(", "self", ".", "jacobian", ".", "weight", ".", "shape", ",", "dtype", "=", "'float32'", ")", ")", "\n", "self", ".", "jacobian", ".", "bias", ".", "set_value", "(", "\n", "paddle", ".", "to_tensor", "(", "[", "1", ",", "0", ",", "0", ",", "1", "]", "*", "\n", "self", ".", "num_jacobian_maps", ")", ".", "astype", "(", "'float32'", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "jacobian", "=", "None", "\n", "\n", "", "self", ".", "temperature", "=", "temperature", "\n", "self", ".", "scale_factor", "=", "scale_factor", "\n", "if", "self", ".", "scale_factor", "!=", "1", ":", "\n", "            ", "self", ".", "down", "=", "AntiAliasInterpolation2d", "(", "num_channels", ",", "\n", "self", ".", "scale_factor", ",", "\n", "mobile_net", "=", "mobile_net", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.keypoint_detector.KPDetector.gaussian2kp": [[103, 113], ["heatmap.unsqueeze.unsqueeze.unsqueeze", "first_order.make_coordinate_grid().unsqueeze", "first_order.make_coordinate_grid"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.make_coordinate_grid"], ["", "", "def", "gaussian2kp", "(", "self", ",", "heatmap", ")", ":", "\n", "        ", "\"\"\"\n        Extract the mean and from a heatmap\n        \"\"\"", "\n", "shape", "=", "heatmap", ".", "shape", "\n", "heatmap", "=", "heatmap", ".", "unsqueeze", "(", "-", "1", ")", "\n", "grid", "=", "make_coordinate_grid", "(", "shape", "[", "2", ":", "]", ")", ".", "unsqueeze", "(", "[", "0", ",", "1", "]", ")", "\n", "value", "=", "(", "heatmap", "*", "grid", ")", ".", "sum", "(", "axis", "=", "(", "2", ",", "3", ")", ")", "\n", "kp", "=", "{", "'value'", ":", "value", "}", "\n", "return", "kp", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.keypoint_detector.KPDetector.forward": [[114, 142], ["keypoint_detector.KPDetector.predictor", "keypoint_detector.KPDetector.kp", "keypoint_detector.KPDetector.reshape", "paddle.softmax", "paddle.softmax", "paddle.softmax", "paddle.tile.reshape", "paddle.tile.reshape", "paddle.tile.reshape", "keypoint_detector.KPDetector.gaussian2kp", "keypoint_detector.KPDetector.down", "keypoint_detector.KPDetector.jacobian", "jacobian_map.reshape.reshape.reshape", "paddle.tile.unsqueeze", "paddle.tile.unsqueeze", "paddle.tile.unsqueeze", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "jacobian.reshape.reshape.reshape", "jacobian.reshape.reshape.sum", "jacobian.reshape.reshape.reshape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.keypoint_detector.KPDetector.gaussian2kp", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_firstorder.Transform.jacobian"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "scale_factor", "!=", "1", ":", "\n", "            ", "x", "=", "self", ".", "down", "(", "x", ")", "\n", "", "feature_map", "=", "self", ".", "predictor", "(", "x", ")", "\n", "prediction", "=", "self", ".", "kp", "(", "feature_map", ")", "\n", "\n", "final_shape", "=", "prediction", ".", "shape", "\n", "heatmap", "=", "prediction", ".", "reshape", "(", "[", "final_shape", "[", "0", "]", ",", "final_shape", "[", "1", "]", ",", "-", "1", "]", ")", "\n", "heatmap", "=", "F", ".", "softmax", "(", "heatmap", "/", "self", ".", "temperature", ",", "axis", "=", "2", ")", "\n", "heatmap", "=", "heatmap", ".", "reshape", "(", "final_shape", ")", "\n", "out", "=", "self", ".", "gaussian2kp", "(", "heatmap", ")", "\n", "\n", "if", "self", ".", "jacobian", "is", "not", "None", ":", "\n", "            ", "jacobian_map", "=", "self", ".", "jacobian", "(", "feature_map", ")", "\n", "jacobian_map", "=", "jacobian_map", ".", "reshape", "(", "[", "\n", "final_shape", "[", "0", "]", ",", "self", ".", "num_jacobian_maps", ",", "4", ",", "final_shape", "[", "2", "]", ",", "\n", "final_shape", "[", "3", "]", "\n", "]", ")", "\n", "heatmap", "=", "heatmap", ".", "unsqueeze", "(", "2", ")", "\n", "heatmap", "=", "paddle", ".", "tile", "(", "heatmap", ",", "[", "1", ",", "1", ",", "4", ",", "1", ",", "1", "]", ")", "\n", "jacobian", "=", "heatmap", "*", "jacobian_map", "\n", "jacobian", "=", "jacobian", ".", "reshape", "(", "[", "final_shape", "[", "0", "]", ",", "final_shape", "[", "1", "]", ",", "4", ",", "-", "1", "]", ")", "\n", "jacobian", "=", "jacobian", ".", "sum", "(", "axis", "=", "-", "1", ")", "\n", "jacobian", "=", "jacobian", ".", "reshape", "(", "\n", "[", "jacobian", ".", "shape", "[", "0", "]", ",", "jacobian", ".", "shape", "[", "1", "]", ",", "2", ",", "2", "]", ")", "\n", "out", "[", "'jacobian'", "]", "=", "jacobian", "\n", "\n", "", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.caffevgg.CaffeVGG19.__init__": [[18, 31], ["paddle.Layer.__init__", "ppgan.utils.download.get_path_from_url", "numpy.load().item", "caffevgg.CaffeVGG19.make_layers", "paddle.Sequential", "paddle.Sequential", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor.unsqueeze().unsqueeze().unsqueeze", "paddle.to_tensor.unsqueeze().unsqueeze().unsqueeze", "numpy.load", "paddle.to_tensor.unsqueeze().unsqueeze", "paddle.to_tensor.unsqueeze().unsqueeze", "caffevgg.CaffeVGG19.features.sublayers", "paddle.to_tensor.unsqueeze", "paddle.to_tensor.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.caffevgg.CaffeVGG19.make_layers", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["def", "__init__", "(", "self", ",", "output_index", ":", "int", "=", "26", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "arch", "=", "'caffevgg19'", "\n", "weights_path", "=", "get_path_from_url", "(", "model_urls", "[", "arch", "]", "[", "0", "]", ",", "\n", "model_urls", "[", "arch", "]", "[", "1", "]", ")", "\n", "data_dict", ":", "dict", "=", "np", ".", "load", "(", "weights_path", ",", "\n", "encoding", "=", "'latin1'", ",", "\n", "allow_pickle", "=", "True", ")", ".", "item", "(", ")", "\n", "self", ".", "features", "=", "self", ".", "make_layers", "(", "self", ".", "cfg", ",", "data_dict", ")", "\n", "del", "data_dict", "\n", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "features", ".", "sublayers", "(", ")", "[", ":", "output_index", "]", ")", "\n", "mean", "=", "paddle", ".", "to_tensor", "(", "[", "103.939", ",", "116.779", ",", "123.68", "]", ")", "\n", "self", ".", "mean", "=", "mean", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.caffevgg.CaffeVGG19._process": [[32, 40], ["paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack"], "methods", ["None"], ["", "def", "_process", "(", "self", ",", "x", ")", ":", "\n", "# value to 255", "\n", "        ", "rgb", "=", "(", "x", "*", "0.5", "+", "0.5", ")", "*", "255", "\n", "# rgb to bgr", "\n", "bgr", "=", "paddle", ".", "stack", "(", "(", "rgb", "[", ":", ",", "2", ",", ":", ",", ":", "]", ",", "rgb", "[", ":", ",", "1", ",", ":", ",", ":", "]", ",", "rgb", "[", ":", ",", "0", ",", ":", ",", ":", "]", ")", ",", "\n", "1", ")", "\n", "# vgg norm", "\n", "return", "bgr", "-", "self", ".", "mean", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.caffevgg.CaffeVGG19._forward_impl": [[41, 46], ["caffevgg.CaffeVGG19._process", "caffevgg.CaffeVGG19.features"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.caffevgg.CaffeVGG19._process"], ["", "def", "_forward_impl", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "_process", "(", "x", ")", "\n", "# NOTE get output with out relu activation", "\n", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.caffevgg.CaffeVGG19.forward": [[47, 49], ["caffevgg.CaffeVGG19._forward_impl"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.caffevgg.CaffeVGG19._forward_impl"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "_forward_impl", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.caffevgg.CaffeVGG19.get_conv_filter": [[50, 53], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_conv_filter", "(", "data_dict", ",", "name", ")", ":", "\n", "        ", "return", "data_dict", "[", "name", "]", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.caffevgg.CaffeVGG19.get_bias": [[54, 57], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_bias", "(", "data_dict", ",", "name", ")", ":", "\n", "        ", "return", "data_dict", "[", "name", "]", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.caffevgg.CaffeVGG19.get_fc_weight": [[58, 61], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_fc_weight", "(", "data_dict", ",", "name", ")", ":", "\n", "        ", "return", "data_dict", "[", "name", "]", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.caffevgg.CaffeVGG19.make_layers": [[62, 90], ["paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "weight.transpose.transpose.transpose", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.Conv2D.weight.set_value", "paddle.Conv2D.bias.set_value", "paddle.MaxPool2D", "paddle.MaxPool2D", "caffevgg.CaffeVGG19.get_conv_filter", "caffevgg.CaffeVGG19.get_bias", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.caffevgg.CaffeVGG19.get_conv_filter", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.caffevgg.CaffeVGG19.get_bias"], ["", "def", "make_layers", "(", "self", ",", "cfg", ",", "data_dict", ",", "batch_norm", "=", "False", ")", "->", "nn", ".", "Sequential", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "in_channels", "=", "3", "\n", "block", "=", "1", "\n", "number", "=", "1", "\n", "for", "v", "in", "cfg", ":", "\n", "            ", "if", "v", "==", "'M'", ":", "\n", "                ", "layers", "+=", "[", "nn", ".", "MaxPool2D", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "]", "\n", "block", "+=", "1", "\n", "number", "=", "1", "\n", "", "else", ":", "\n", "                ", "conv2d", "=", "nn", ".", "Conv2D", "(", "in_channels", ",", "v", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "\"\"\" set value \"\"\"", "\n", "weight", "=", "paddle", ".", "to_tensor", "(", "\n", "self", ".", "get_conv_filter", "(", "data_dict", ",", "f'conv{block}_{number}'", ")", ")", "\n", "weight", "=", "weight", ".", "transpose", "(", "(", "3", ",", "2", ",", "0", ",", "1", ")", ")", "\n", "bias", "=", "paddle", ".", "to_tensor", "(", "\n", "self", ".", "get_bias", "(", "data_dict", ",", "f'conv{block}_{number}'", ")", ")", "\n", "conv2d", ".", "weight", ".", "set_value", "(", "weight", ")", "\n", "conv2d", ".", "bias", ".", "set_value", "(", "bias", ")", "\n", "number", "+=", "1", "\n", "if", "batch_norm", ":", "\n", "                    ", "layers", "+=", "[", "conv2d", ",", "nn", ".", "BatchNorm2D", "(", "v", ")", ",", "nn", ".", "ReLU", "(", ")", "]", "\n", "", "else", ":", "\n", "                    ", "layers", "+=", "[", "conv2d", ",", "nn", ".", "ReLU", "(", ")", "]", "\n", "", "in_channels", "=", "v", "\n", "\n", "", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.dense_motion.DenseMotionNetwork.__init__": [[16, 96], ["paddle.Layer.__init__", "first_order.Hourglass", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "first_order.AntiAliasInterpolation2d", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.initializer.KaimingUniform", "paddle.initializer.KaimingUniform", "paddle.initializer.KaimingUniform", "paddle.initializer.KaimingUniform", "paddle.initializer.KaimingUniform", "paddle.initializer.KaimingUniform", "paddle.initializer.KaimingUniform", "paddle.initializer.KaimingUniform", "paddle.initializer.KaimingUniform", "paddle.initializer.KaimingUniform", "paddle.initializer.KaimingUniform", "paddle.initializer.KaimingUniform", "paddle.initializer.KaimingUniform", "paddle.initializer.KaimingUniform", "paddle.initializer.KaimingUniform", "paddle.initializer.KaimingUniform", "paddle.initializer.KaimingUniform", "paddle.initializer.KaimingUniform"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "\n", "block_expansion", ",", "\n", "num_blocks", ",", "\n", "max_features", ",", "\n", "num_kp", ",", "\n", "num_channels", ",", "\n", "estimate_occlusion_map", "=", "False", ",", "\n", "scale_factor", "=", "1", ",", "\n", "kp_variance", "=", "0.01", ",", "\n", "mobile_net", "=", "False", ")", ":", "\n", "        ", "super", "(", "DenseMotionNetwork", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "hourglass", "=", "Hourglass", "(", "block_expansion", "=", "block_expansion", ",", "\n", "in_features", "=", "(", "num_kp", "+", "1", ")", "*", "\n", "(", "num_channels", "+", "1", ")", ",", "\n", "max_features", "=", "max_features", ",", "\n", "num_blocks", "=", "num_blocks", ",", "\n", "mobile_net", "=", "mobile_net", ")", "\n", "\n", "if", "mobile_net", ":", "\n", "            ", "self", ".", "mask", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "self", ".", "hourglass", ".", "out_filters", ",", "\n", "self", ".", "hourglass", ".", "out_filters", ",", "\n", "kernel_size", "=", "3", ",", "\n", "weight_attr", "=", "nn", ".", "initializer", ".", "KaimingUniform", "(", ")", ",", "\n", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2D", "(", "self", ".", "hourglass", ".", "out_filters", ",", "\n", "self", ".", "hourglass", ".", "out_filters", ",", "\n", "kernel_size", "=", "3", ",", "\n", "weight_attr", "=", "nn", ".", "initializer", ".", "KaimingUniform", "(", ")", ",", "\n", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2D", "(", "self", ".", "hourglass", ".", "out_filters", ",", "\n", "num_kp", "+", "1", ",", "\n", "kernel_size", "=", "3", ",", "\n", "weight_attr", "=", "nn", ".", "initializer", ".", "KaimingUniform", "(", ")", ",", "\n", "padding", "=", "1", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "mask", "=", "nn", ".", "Conv2D", "(", "self", ".", "hourglass", ".", "out_filters", ",", "\n", "num_kp", "+", "1", ",", "\n", "kernel_size", "=", "(", "7", ",", "7", ")", ",", "\n", "padding", "=", "(", "3", ",", "3", ")", ")", "\n", "\n", "", "if", "estimate_occlusion_map", ":", "\n", "            ", "if", "mobile_net", ":", "\n", "                ", "self", ".", "occlusion", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "self", ".", "hourglass", ".", "out_filters", ",", "\n", "self", ".", "hourglass", ".", "out_filters", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "\n", "weight_attr", "=", "nn", ".", "initializer", ".", "KaimingUniform", "(", ")", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2D", "(", "self", ".", "hourglass", ".", "out_filters", ",", "\n", "self", ".", "hourglass", ".", "out_filters", ",", "\n", "kernel_size", "=", "3", ",", "\n", "weight_attr", "=", "nn", ".", "initializer", ".", "KaimingUniform", "(", ")", ",", "\n", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2D", "(", "self", ".", "hourglass", ".", "out_filters", ",", "\n", "1", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "\n", "weight_attr", "=", "nn", ".", "initializer", ".", "KaimingUniform", "(", ")", ")", "\n", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "occlusion", "=", "nn", ".", "Conv2D", "(", "self", ".", "hourglass", ".", "out_filters", ",", "\n", "1", ",", "\n", "kernel_size", "=", "(", "7", ",", "7", ")", ",", "\n", "padding", "=", "(", "3", ",", "3", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "occlusion", "=", "None", "\n", "\n", "", "self", ".", "num_kp", "=", "num_kp", "\n", "self", ".", "scale_factor", "=", "scale_factor", "\n", "self", ".", "kp_variance", "=", "kp_variance", "\n", "\n", "if", "self", ".", "scale_factor", "!=", "1", ":", "\n", "            ", "self", ".", "down", "=", "AntiAliasInterpolation2d", "(", "num_channels", ",", "\n", "self", ".", "scale_factor", ",", "\n", "mobile_net", "=", "mobile_net", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.dense_motion.DenseMotionNetwork.create_heatmap_representations": [[97, 118], ["first_order.kp2gaussian", "first_order.kp2gaussian", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "heatmap.unsqueeze.unsqueeze.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.kp2gaussian", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.kp2gaussian"], ["", "", "def", "create_heatmap_representations", "(", "self", ",", "source_image", ",", "kp_driving", ",", "\n", "kp_source", ")", ":", "\n", "        ", "\"\"\"\n        Eq 6. in the paper H_k(z)\n        \"\"\"", "\n", "spatial_size", "=", "source_image", ".", "shape", "[", "2", ":", "]", "\n", "gaussian_driving", "=", "kp2gaussian", "(", "kp_driving", ",", "\n", "spatial_size", "=", "spatial_size", ",", "\n", "kp_variance", "=", "self", ".", "kp_variance", ")", "\n", "gaussian_source", "=", "kp2gaussian", "(", "kp_source", ",", "\n", "spatial_size", "=", "spatial_size", ",", "\n", "kp_variance", "=", "self", ".", "kp_variance", ")", "\n", "heatmap", "=", "gaussian_driving", "-", "gaussian_source", "\n", "\n", "#adding background feature", "\n", "zeros", "=", "paddle", ".", "zeros", "(", "\n", "[", "heatmap", ".", "shape", "[", "0", "]", ",", "1", ",", "spatial_size", "[", "0", "]", ",", "spatial_size", "[", "1", "]", "]", ",", "\n", "heatmap", ".", "dtype", ")", "#.type(heatmap.type())", "\n", "heatmap", "=", "paddle", ".", "concat", "(", "[", "zeros", ",", "heatmap", "]", ",", "axis", "=", "1", ")", "\n", "heatmap", "=", "heatmap", ".", "unsqueeze", "(", "2", ")", "\n", "return", "heatmap", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.dense_motion.DenseMotionNetwork.create_sparse_motions": [[119, 152], ["first_order.make_coordinate_grid", "paddle.tile.reshape", "paddle.tile.reshape", "paddle.tile.reshape", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "kp_driving[].reshape", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "jacobian.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "jacobian.unsqueeze().unsqueeze.unsqueeze().unsqueeze.reshape", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle_jacobian.reshape.reshape.reshape", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "coordinate_grid.squeeze.squeeze.squeeze", "kp_source[].reshape", "paddle.inverse", "paddle.inverse", "paddle.inverse", "paddle.inverse", "paddle.inverse", "paddle.inverse", "paddle.inverse", "paddle.inverse", "paddle.inverse", "coordinate_grid.squeeze.squeeze.unsqueeze", "jacobian.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.make_coordinate_grid"], ["", "def", "create_sparse_motions", "(", "self", ",", "source_image", ",", "kp_driving", ",", "kp_source", ")", ":", "\n", "        ", "\"\"\"\n        Eq 4. in the paper T_{s<-d}(z)\n        \"\"\"", "\n", "bs", ",", "_", ",", "h", ",", "w", "=", "source_image", ".", "shape", "\n", "identity_grid", "=", "make_coordinate_grid", "(", "(", "h", ",", "w", ")", ",", "\n", "type", "=", "kp_source", "[", "'value'", "]", ".", "dtype", ")", "\n", "identity_grid", "=", "identity_grid", ".", "reshape", "(", "[", "1", ",", "1", ",", "h", ",", "w", ",", "2", "]", ")", "\n", "coordinate_grid", "=", "identity_grid", "-", "kp_driving", "[", "'value'", "]", ".", "reshape", "(", "\n", "[", "bs", ",", "self", ".", "num_kp", ",", "1", ",", "1", ",", "2", "]", ")", "\n", "if", "'jacobian'", "in", "kp_driving", ":", "\n", "            ", "jacobian", "=", "paddle", ".", "matmul", "(", "kp_source", "[", "'jacobian'", "]", ",", "\n", "paddle", ".", "inverse", "(", "kp_driving", "[", "'jacobian'", "]", ")", ")", "\n", "jacobian", "=", "jacobian", ".", "unsqueeze", "(", "-", "3", ")", ".", "unsqueeze", "(", "-", "3", ")", "\n", "# Todo: fix bug of paddle.tile", "\n", "p_jacobian", "=", "jacobian", ".", "reshape", "(", "[", "bs", ",", "self", ".", "num_kp", ",", "1", ",", "1", ",", "4", "]", ")", "\n", "paddle_jacobian", "=", "paddle", ".", "tile", "(", "p_jacobian", ",", "[", "1", ",", "1", ",", "h", ",", "w", ",", "1", "]", ")", "\n", "paddle_jacobian", "=", "paddle_jacobian", ".", "reshape", "(", "\n", "[", "bs", ",", "self", ".", "num_kp", ",", "h", ",", "w", ",", "2", ",", "2", "]", ")", "\n", "\n", "coordinate_grid", "=", "paddle", ".", "matmul", "(", "paddle_jacobian", ",", "\n", "coordinate_grid", ".", "unsqueeze", "(", "-", "1", ")", ")", "\n", "\n", "coordinate_grid", "=", "coordinate_grid", ".", "squeeze", "(", "-", "1", ")", "\n", "\n", "", "driving_to_source", "=", "coordinate_grid", "+", "kp_source", "[", "'value'", "]", ".", "reshape", "(", "\n", "[", "bs", ",", "self", ".", "num_kp", ",", "1", ",", "1", ",", "2", "]", ")", "\n", "\n", "#adding background feature", "\n", "identity_grid", "=", "paddle", ".", "tile", "(", "identity_grid", ",", "(", "bs", ",", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "sparse_motions", "=", "paddle", ".", "concat", "(", "[", "identity_grid", ",", "driving_to_source", "]", ",", "\n", "axis", "=", "1", ")", "\n", "return", "sparse_motions", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.dense_motion.DenseMotionNetwork.create_deformed_source_image": [[153, 174], ["paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "source_repeat.reshape.reshape.reshape", "sparse_motions.reshape.reshape.reshape", "paddle.grid_sample", "paddle.grid_sample", "paddle.grid_sample", "sparse_deformed.reshape.reshape.reshape", "source_image.unsqueeze().unsqueeze", "source_image.unsqueeze"], "methods", ["None"], ["", "def", "create_deformed_source_image", "(", "self", ",", "source_image", ",", "sparse_motions", ")", ":", "\n", "        ", "\"\"\"\n        Eq 7. in the paper \\hat{T}_{s<-d}(z)\n        \"\"\"", "\n", "bs", ",", "_", ",", "h", ",", "w", "=", "source_image", ".", "shape", "\n", "source_repeat", "=", "paddle", ".", "tile", "(", "\n", "source_image", ".", "unsqueeze", "(", "1", ")", ".", "unsqueeze", "(", "1", ")", ",", "\n", "[", "1", ",", "self", ".", "num_kp", "+", "1", ",", "1", ",", "1", ",", "1", ",", "1", "\n", "]", ")", "#.repeat(1, self.num_kp + 1, 1, 1, 1, 1)", "\n", "source_repeat", "=", "source_repeat", ".", "reshape", "(", "\n", "[", "bs", "*", "(", "self", ".", "num_kp", "+", "1", ")", ",", "-", "1", ",", "h", ",", "w", "]", ")", "\n", "sparse_motions", "=", "sparse_motions", ".", "reshape", "(", "\n", "(", "bs", "*", "(", "self", ".", "num_kp", "+", "1", ")", ",", "h", ",", "w", ",", "-", "1", ")", ")", "\n", "sparse_deformed", "=", "F", ".", "grid_sample", "(", "source_repeat", ",", "\n", "sparse_motions", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "padding_mode", "=", "'zeros'", ",", "\n", "align_corners", "=", "True", ")", "\n", "sparse_deformed", "=", "sparse_deformed", ".", "reshape", "(", "\n", "(", "bs", ",", "self", ".", "num_kp", "+", "1", ",", "-", "1", ",", "h", ",", "w", ")", ")", "\n", "return", "sparse_deformed", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.dense_motion.DenseMotionNetwork.forward": [[175, 211], ["dict", "dense_motion.DenseMotionNetwork.create_heatmap_representations", "dense_motion.DenseMotionNetwork.create_sparse_motions", "dense_motion.DenseMotionNetwork.create_deformed_source_image", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "temp.reshape.reshape.reshape", "dense_motion.DenseMotionNetwork.hourglass", "dense_motion.DenseMotionNetwork.mask", "paddle.softmax", "paddle.softmax", "paddle.softmax", "mask.unsqueeze.unsqueeze.unsqueeze", "sparse_motion.transpose.transpose.transpose", "deformation.transpose.transpose.transpose", "dense_motion.DenseMotionNetwork.down", "paddle.sigmoid", "paddle.sigmoid", "paddle.sigmoid", "dense_motion.DenseMotionNetwork.occlusion"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.dense_motion.DenseMotionNetwork.create_heatmap_representations", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.dense_motion.DenseMotionNetwork.create_sparse_motions", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.dense_motion.DenseMotionNetwork.create_deformed_source_image"], ["", "def", "forward", "(", "self", ",", "source_image", ",", "kp_driving", ",", "kp_source", ")", ":", "\n", "        ", "if", "self", ".", "scale_factor", "!=", "1", ":", "\n", "            ", "source_image", "=", "self", ".", "down", "(", "source_image", ")", "\n", "\n", "", "bs", ",", "_", ",", "h", ",", "w", "=", "source_image", ".", "shape", "\n", "\n", "out_dict", "=", "dict", "(", ")", "\n", "heatmap_representation", "=", "self", ".", "create_heatmap_representations", "(", "\n", "source_image", ",", "kp_driving", ",", "kp_source", ")", "\n", "sparse_motion", "=", "self", ".", "create_sparse_motions", "(", "source_image", ",", "kp_driving", ",", "\n", "kp_source", ")", "\n", "deformed_source", "=", "self", ".", "create_deformed_source_image", "(", "\n", "source_image", ",", "sparse_motion", ")", "\n", "out_dict", "[", "'sparse_deformed'", "]", "=", "deformed_source", "\n", "\n", "temp", "=", "paddle", ".", "concat", "(", "[", "heatmap_representation", ",", "deformed_source", "]", ",", "axis", "=", "2", ")", "\n", "temp", "=", "temp", ".", "reshape", "(", "[", "bs", ",", "-", "1", ",", "h", ",", "w", "]", ")", "\n", "\n", "prediction", "=", "self", ".", "hourglass", "(", "temp", ")", "\n", "\n", "mask", "=", "self", ".", "mask", "(", "prediction", ")", "\n", "mask", "=", "F", ".", "softmax", "(", "mask", ",", "axis", "=", "1", ")", "\n", "out_dict", "[", "'mask'", "]", "=", "mask", "\n", "mask", "=", "mask", ".", "unsqueeze", "(", "2", ")", "\n", "sparse_motion", "=", "sparse_motion", ".", "transpose", "(", "[", "0", ",", "1", ",", "4", ",", "2", ",", "3", "]", ")", "\n", "deformation", "=", "(", "sparse_motion", "*", "mask", ")", ".", "sum", "(", "axis", "=", "1", ")", "\n", "deformation", "=", "deformation", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "\n", "\n", "out_dict", "[", "'deformation'", "]", "=", "deformation", "\n", "\n", "# Sec. 3.2 in the paper", "\n", "if", "self", ".", "occlusion", ":", "\n", "            ", "occlusion_map", "=", "F", ".", "sigmoid", "(", "self", ".", "occlusion", "(", "prediction", ")", ")", "\n", "out_dict", "[", "'occlusion_map'", "]", "=", "occlusion_map", "\n", "\n", "", "return", "out_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.norm.Identity.forward": [[22, 24], ["None"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.norm.build_norm_layer": [[26, 63], ["functools.partial", "functools.partial", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "functools.partial", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "NotImplementedError", "paddle.initializer.Normal", "paddle.initializer.Constant", "norm.Identity", "paddle.initializer.Constant", "paddle.initializer.Constant"], "function", ["None"], ["", "", "def", "build_norm_layer", "(", "norm_type", "=", "'instance'", ")", ":", "\n", "    ", "\"\"\"Return a normalization layer\n\n    Args:\n        norm_type (str) -- the name of the normalization layer: batch | instance | none\n\n    For BatchNorm, we use learnable affine parameters and track running statistics (mean/stddev).\n    For InstanceNorm, we do not use learnable affine parameters. We do not track running statistics.\n    \"\"\"", "\n", "if", "norm_type", "==", "'batch'", ":", "\n", "        ", "norm_layer", "=", "functools", ".", "partial", "(", "\n", "nn", ".", "BatchNorm", ",", "\n", "param_attr", "=", "paddle", ".", "ParamAttr", "(", "\n", "initializer", "=", "nn", ".", "initializer", ".", "Normal", "(", "1.0", ",", "0.02", ")", ")", ",", "\n", "bias_attr", "=", "paddle", ".", "ParamAttr", "(", "\n", "initializer", "=", "nn", ".", "initializer", ".", "Constant", "(", "0.0", ")", ")", ",", "\n", "trainable_statistics", "=", "True", ")", "\n", "", "elif", "norm_type", "==", "'instance'", ":", "\n", "        ", "norm_layer", "=", "functools", ".", "partial", "(", "\n", "nn", ".", "InstanceNorm2D", ",", "\n", "weight_attr", "=", "paddle", ".", "ParamAttr", "(", "\n", "initializer", "=", "nn", ".", "initializer", ".", "Constant", "(", "1.0", ")", ",", "\n", "learning_rate", "=", "0.0", ",", "\n", "trainable", "=", "False", ")", ",", "\n", "bias_attr", "=", "paddle", ".", "ParamAttr", "(", "initializer", "=", "nn", ".", "initializer", ".", "Constant", "(", "0.0", ")", ",", "\n", "learning_rate", "=", "0.0", ",", "\n", "trainable", "=", "False", ")", ")", "\n", "", "elif", "norm_type", "==", "'spectral'", ":", "\n", "        ", "norm_layer", "=", "functools", ".", "partial", "(", "Spectralnorm", ")", "\n", "", "elif", "norm_type", "==", "'none'", ":", "\n", "\n", "        ", "def", "norm_layer", "(", "x", ")", ":", "\n", "            ", "return", "Identity", "(", ")", "\n", "", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'normalization layer [%s] is not found'", "%", "\n", "norm_type", ")", "\n", "", "return", "norm_layer", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.equalized.EqualConv2D.__init__": [[32, 55], ["paddle.Layer.__init__", "equalized.EqualConv2D.create_parameter", "math.sqrt", "equalized.EqualConv2D.create_parameter", "paddle.initializer.Normal", "paddle.initializer.Normal", "paddle.initializer.Normal", "paddle.initializer.Constant", "paddle.initializer.Constant", "paddle.initializer.Constant"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "\n", "in_channel", ",", "\n", "out_channel", ",", "\n", "kernel_size", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "weight", "=", "self", ".", "create_parameter", "(", "\n", "(", "out_channel", ",", "in_channel", ",", "kernel_size", ",", "kernel_size", ")", ",", "\n", "default_initializer", "=", "nn", ".", "initializer", ".", "Normal", "(", ")", ")", "\n", "self", ".", "scale", "=", "1", "/", "math", ".", "sqrt", "(", "in_channel", "*", "(", "kernel_size", "*", "kernel_size", ")", ")", "\n", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "padding", "=", "padding", "\n", "\n", "if", "bias", ":", "\n", "            ", "self", ".", "bias", "=", "self", ".", "create_parameter", "(", "(", "out_channel", ",", ")", ",", "\n", "nn", ".", "initializer", ".", "Constant", "(", "0.0", ")", ")", "\n", "\n", "", "else", ":", "\n", "            ", "self", ".", "bias", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.equalized.EqualConv2D.forward": [[56, 66], ["paddle.conv2d", "paddle.conv2d", "paddle.conv2d"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "out", "=", "F", ".", "conv2d", "(", "\n", "input", ",", "\n", "self", ".", "weight", "*", "self", ".", "scale", ",", "\n", "bias", "=", "self", ".", "bias", ",", "\n", "stride", "=", "self", ".", "stride", ",", "\n", "padding", "=", "self", ".", "padding", ",", "\n", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.equalized.EqualConv2D.__repr__": [[67, 70], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "(", "\n", "f\"{self.__class__.__name__}({self.weight.shape[1]}, {self.weight.shape[0]},\"", "\n", "f\" {self.weight.shape[2]}, stride={self.stride}, padding={self.padding})\"", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.equalized.EqualLinear.__init__": [[79, 103], ["paddle.Layer.__init__", "equalized.EqualLinear.create_parameter", "equalized.EqualLinear.weight.set_value", "equalized.EqualLinear.create_parameter", "paddle.initializer.Normal", "paddle.initializer.Normal", "paddle.initializer.Normal", "paddle.initializer.Constant", "paddle.initializer.Constant", "paddle.initializer.Constant", "math.sqrt"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "\n", "in_dim", ",", "\n", "out_dim", ",", "\n", "bias", "=", "True", ",", "\n", "bias_init", "=", "0", ",", "\n", "lr_mul", "=", "1", ",", "\n", "activation", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "weight", "=", "self", ".", "create_parameter", "(", "\n", "(", "in_dim", ",", "out_dim", ")", ",", "default_initializer", "=", "nn", ".", "initializer", ".", "Normal", "(", ")", ")", "\n", "self", ".", "weight", ".", "set_value", "(", "(", "self", ".", "weight", "/", "lr_mul", ")", ")", "\n", "\n", "if", "bias", ":", "\n", "            ", "self", ".", "bias", "=", "self", ".", "create_parameter", "(", "\n", "(", "out_dim", ",", ")", ",", "nn", ".", "initializer", ".", "Constant", "(", "bias_init", ")", ")", "\n", "\n", "", "else", ":", "\n", "            ", "self", ".", "bias", "=", "None", "\n", "\n", "", "self", ".", "activation", "=", "activation", "\n", "\n", "self", ".", "scale", "=", "(", "1", "/", "math", ".", "sqrt", "(", "in_dim", ")", ")", "*", "lr_mul", "\n", "self", ".", "lr_mul", "=", "lr_mul", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.equalized.EqualLinear.forward": [[104, 115], ["paddle.linear", "paddle.linear", "paddle.linear", "fused_act.fused_leaky_relu", "paddle.linear", "paddle.linear", "paddle.linear"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.imresize.linear", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.imresize.linear", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.imresize.linear", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.fused_act.fused_leaky_relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.imresize.linear", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.imresize.linear", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.imresize.linear"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "if", "self", ".", "activation", ":", "\n", "            ", "out", "=", "F", ".", "linear", "(", "input", ",", "self", ".", "weight", "*", "self", ".", "scale", ")", "\n", "out", "=", "fused_leaky_relu", "(", "out", ",", "self", ".", "bias", "*", "self", ".", "lr_mul", ")", "\n", "\n", "", "else", ":", "\n", "            ", "out", "=", "F", ".", "linear", "(", "input", ",", "\n", "self", ".", "weight", "*", "self", ".", "scale", ",", "\n", "bias", "=", "self", ".", "bias", "*", "self", ".", "lr_mul", ")", "\n", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.equalized.EqualLinear.__repr__": [[116, 119], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "(", "\n", "f\"{self.__class__.__name__}({self.weight.shape[0]}, {self.weight.shape[1]})\"", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.equalized.EqualLinear_gpen.__init__": [[127, 151], ["paddle.Layer.__init__", "equalized.EqualLinear_gpen.create_parameter", "equalized.EqualLinear_gpen.weight.set_value", "equalized.EqualLinear_gpen.create_parameter", "paddle.initializer.Normal", "paddle.initializer.Normal", "paddle.initializer.Normal", "paddle.initializer.Constant", "paddle.initializer.Constant", "paddle.initializer.Constant", "math.sqrt"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "\n", "in_dim", ",", "\n", "out_dim", ",", "\n", "bias", "=", "True", ",", "\n", "bias_init", "=", "0", ",", "\n", "lr_mul", "=", "1", ",", "\n", "activation", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "weight", "=", "self", ".", "create_parameter", "(", "\n", "(", "out_dim", ",", "in_dim", ")", ",", "default_initializer", "=", "nn", ".", "initializer", ".", "Normal", "(", ")", ")", "\n", "self", ".", "weight", ".", "set_value", "(", "(", "self", ".", "weight", "/", "lr_mul", ")", ")", "\n", "\n", "if", "bias", ":", "\n", "            ", "self", ".", "bias", "=", "self", ".", "create_parameter", "(", "\n", "(", "out_dim", ",", ")", ",", "nn", ".", "initializer", ".", "Constant", "(", "bias_init", ")", ")", "\n", "\n", "", "else", ":", "\n", "            ", "self", ".", "bias", "=", "None", "\n", "\n", "", "self", ".", "activation", "=", "activation", "\n", "\n", "self", ".", "scale", "=", "(", "1", "/", "math", ".", "sqrt", "(", "in_dim", ")", ")", "*", "lr_mul", "\n", "self", ".", "lr_mul", "=", "lr_mul", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.equalized.EqualLinear_gpen.forward": [[152, 162], ["paddle.linear", "paddle.linear", "paddle.linear", "fused_act.fused_leaky_relu", "paddle.linear", "paddle.linear", "paddle.linear"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.imresize.linear", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.imresize.linear", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.imresize.linear", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.fused_act.fused_leaky_relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.imresize.linear", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.imresize.linear", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.imresize.linear"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "if", "self", ".", "activation", ":", "\n", "            ", "out", "=", "F", ".", "linear", "(", "input", ",", "(", "self", ".", "weight", "*", "self", ".", "scale", ")", ".", "t", "(", ")", ")", "\n", "out", "=", "fused_leaky_relu", "(", "out", ",", "self", ".", "bias", "*", "self", ".", "lr_mul", ")", "\n", "\n", "", "else", ":", "\n", "            ", "out", "=", "F", ".", "linear", "(", "input", ",", "(", "self", ".", "weight", "*", "self", ".", "scale", ")", ".", "t", "(", ")", ",", "\n", "bias", "=", "self", ".", "bias", "*", "self", ".", "lr_mul", ")", "\n", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.equalized.EqualLinear_gpen.__repr__": [[163, 166], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "(", "\n", "f'{self.__class__.__name__}({self.weight.shape[1]}, {self.weight.shape[0]})'", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.conv.ConvBNRelu.__init__": [[7, 22], ["paddle.nn.Layer.__init__", "paddle.nn.Sequential", "paddle.nn.ReLU", "paddle.nn.Conv2D", "paddle.nn.BatchNorm2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "cin", ",", "\n", "cout", ",", "\n", "kernel_size", ",", "\n", "stride", ",", "\n", "padding", ",", "\n", "residual", "=", "False", ",", "\n", "*", "args", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "self", ".", "conv_block", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "cin", ",", "cout", ",", "kernel_size", ",", "stride", ",", "padding", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "cout", ")", ")", "\n", "self", ".", "act", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "residual", "=", "residual", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.conv.ConvBNRelu.forward": [[23, 28], ["conv.ConvBNRelu.conv_block", "conv.ConvBNRelu.act"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv_block", "(", "x", ")", "\n", "if", "self", ".", "residual", ":", "\n", "            ", "out", "+=", "x", "\n", "", "return", "self", ".", "act", "(", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.conv.NonNormConv2d.__init__": [[31, 44], ["paddle.nn.Layer.__init__", "paddle.nn.Sequential", "paddle.nn.LeakyReLU", "paddle.nn.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "cin", ",", "\n", "cout", ",", "\n", "kernel_size", ",", "\n", "stride", ",", "\n", "padding", ",", "\n", "residual", "=", "False", ",", "\n", "*", "args", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "self", ".", "conv_block", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "cin", ",", "cout", ",", "kernel_size", ",", "stride", ",", "padding", ")", ",", ")", "\n", "self", ".", "act", "=", "nn", ".", "LeakyReLU", "(", "0.01", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.conv.NonNormConv2d.forward": [[45, 48], ["conv.NonNormConv2d.conv_block", "conv.NonNormConv2d.act"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv_block", "(", "x", ")", "\n", "return", "self", ".", "act", "(", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.conv.Conv2dTransposeRelu.__init__": [[51, 65], ["paddle.nn.Layer.__init__", "paddle.nn.Sequential", "paddle.nn.ReLU", "paddle.nn.Conv2DTranspose", "paddle.nn.BatchNorm2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "cin", ",", "\n", "cout", ",", "\n", "kernel_size", ",", "\n", "stride", ",", "\n", "padding", ",", "\n", "output_padding", "=", "0", ",", "\n", "*", "args", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "self", ".", "conv_block", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2DTranspose", "(", "cin", ",", "cout", ",", "kernel_size", ",", "stride", ",", "padding", ",", "\n", "output_padding", ")", ",", "nn", ".", "BatchNorm2D", "(", "cout", ")", ")", "\n", "self", ".", "act", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.conv.Conv2dTransposeRelu.forward": [[66, 69], ["conv.Conv2dTransposeRelu.conv_block", "conv.Conv2dTransposeRelu.act"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv_block", "(", "x", ")", "\n", "return", "self", ".", "act", "(", "out", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.fused_act.FusedLeakyReLU.__init__": [[25, 37], ["paddle.Layer.__init__", "fused_act.FusedLeakyReLU.create_parameter", "paddle.initializer.Constant", "paddle.initializer.Constant", "paddle.initializer.Constant"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "bias", "=", "True", ",", "negative_slope", "=", "0.2", ",", "scale", "=", "2", "**", "0.5", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "bias", ":", "\n", "            ", "self", ".", "bias", "=", "self", ".", "create_parameter", "(", "\n", "(", "channel", ",", ")", ",", "default_initializer", "=", "nn", ".", "initializer", ".", "Constant", "(", "0.0", ")", ")", "\n", "\n", "", "else", ":", "\n", "            ", "self", ".", "bias", "=", "None", "\n", "\n", "", "self", ".", "negative_slope", "=", "negative_slope", "\n", "self", ".", "scale", "=", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.fused_act.FusedLeakyReLU.forward": [[38, 41], ["fused_act.fused_leaky_relu"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.fused_act.fused_leaky_relu"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "fused_leaky_relu", "(", "input", ",", "self", ".", "bias", ",", "self", ".", "negative_slope", ",", "\n", "self", ".", "scale", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.fused_act.fused_leaky_relu": [[43, 52], ["paddle.leaky_relu", "paddle.leaky_relu", "len", "len", "bias.reshape"], "function", ["None"], ["", "", "def", "fused_leaky_relu", "(", "input", ",", "bias", "=", "None", ",", "negative_slope", "=", "0.2", ",", "scale", "=", "2", "**", "0.5", ")", ":", "\n", "    ", "if", "bias", "is", "not", "None", ":", "\n", "        ", "rest_dim", "=", "[", "1", "]", "*", "(", "len", "(", "input", ".", "shape", ")", "-", "len", "(", "bias", ".", "shape", ")", "-", "1", ")", "\n", "return", "(", "F", ".", "leaky_relu", "(", "input", "+", "bias", ".", "reshape", "(", "\n", "(", "1", ",", "bias", ".", "shape", "[", "0", "]", ",", "*", "rest_dim", ")", ")", ",", "\n", "negative_slope", "=", "0.2", ")", "*", "scale", ")", "\n", "\n", "", "else", ":", "\n", "        ", "return", "F", ".", "leaky_relu", "(", "input", ",", "negative_slope", "=", "0.2", ")", "*", "scale", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.nn._SpectralNorm.__init__": [[21, 29], ["paddle.SpectralNorm.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "weight_shape", ",", "\n", "dim", "=", "0", ",", "\n", "power_iters", "=", "1", ",", "\n", "eps", "=", "1e-12", ",", "\n", "dtype", "=", "'float32'", ")", ":", "\n", "        ", "super", "(", "_SpectralNorm", ",", "self", ")", ".", "__init__", "(", "weight_shape", ",", "dim", ",", "power_iters", ",", "eps", ",", "\n", "dtype", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.nn._SpectralNorm.forward": [[30, 46], ["paddle._SpectralNorm._helper.create_variable_for_type_inference", "paddle._SpectralNorm._helper.append_op"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "weight", ")", ":", "\n", "        ", "inputs", "=", "{", "'Weight'", ":", "weight", ",", "'U'", ":", "self", ".", "weight_u", ",", "'V'", ":", "self", ".", "weight_v", "}", "\n", "out", "=", "self", ".", "_helper", ".", "create_variable_for_type_inference", "(", "self", ".", "_dtype", ")", "\n", "_power_iters", "=", "self", ".", "_power_iters", "if", "self", ".", "training", "else", "0", "\n", "self", ".", "_helper", ".", "append_op", "(", "type", "=", "\"spectral_norm\"", ",", "\n", "inputs", "=", "inputs", ",", "\n", "outputs", "=", "{", "\n", "\"Out\"", ":", "out", ",", "\n", "}", ",", "\n", "attrs", "=", "{", "\n", "\"dim\"", ":", "self", ".", "_dim", ",", "\n", "\"power_iters\"", ":", "_power_iters", ",", "\n", "\"eps\"", ":", "self", ".", "_eps", ",", "\n", "}", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.nn.Spectralnorm.__init__": [[49, 62], ["super().__init__", "paddle._SpectralNorm", "paddle.Spectralnorm.create_parameter", "paddle.Spectralnorm.weight_orig.set_value"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "layer", ",", "dim", "=", "0", ",", "power_iters", "=", "1", ",", "eps", "=", "1e-12", ",", "dtype", "=", "'float32'", ")", ":", "\n", "        ", "super", "(", "Spectralnorm", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "spectral_norm", "=", "_SpectralNorm", "(", "layer", ".", "weight", ".", "shape", ",", "dim", ",", "power_iters", ",", "\n", "eps", ",", "dtype", ")", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "power_iters", "=", "power_iters", "\n", "self", ".", "eps", "=", "eps", "\n", "self", ".", "layer", "=", "layer", "\n", "weight", "=", "layer", ".", "_parameters", "[", "'weight'", "]", "\n", "del", "layer", ".", "_parameters", "[", "'weight'", "]", "\n", "self", ".", "weight_orig", "=", "self", ".", "create_parameter", "(", "weight", ".", "shape", ",", "\n", "dtype", "=", "weight", ".", "dtype", ")", "\n", "self", ".", "weight_orig", ".", "set_value", "(", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.nn.Spectralnorm.forward": [[63, 68], ["paddle.Spectralnorm.spectral_norm", "paddle.Spectralnorm.layer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.spectral_norm"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "weight", "=", "self", ".", "spectral_norm", "(", "self", ".", "weight_orig", ")", "\n", "self", ".", "layer", ".", "weight", "=", "weight", "\n", "out", "=", "self", ".", "layer", "(", "x", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.nn.RhoClipper.__init__": [[71, 75], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "min", ",", "max", ")", ":", "\n", "        ", "self", ".", "clip_min", "=", "min", "\n", "self", ".", "clip_max", "=", "max", "\n", "assert", "min", "<", "max", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.nn.RhoClipper.__call__": [[76, 93], ["hasattr", "hasattr", "hasattr", "w.clip.clip.clip", "module.rho.set_value", "w.clip.clip.clip", "module.w_gamma.set_value", "w.clip.clip.clip", "module.w_beta.set_value"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "module", ")", ":", "\n", "\n", "        ", "if", "hasattr", "(", "module", ",", "'rho'", ")", ":", "\n", "            ", "w", "=", "module", ".", "rho", "\n", "w", "=", "w", ".", "clip", "(", "self", ".", "clip_min", ",", "self", ".", "clip_max", ")", "\n", "module", ".", "rho", ".", "set_value", "(", "w", ")", "\n", "\n", "# used for photo2cartoon training", "\n", "", "if", "hasattr", "(", "module", ",", "'w_gamma'", ")", ":", "\n", "            ", "w", "=", "module", ".", "w_gamma", "\n", "w", "=", "w", ".", "clip", "(", "self", ".", "clip_min", ",", "self", ".", "clip_max", ")", "\n", "module", ".", "w_gamma", ".", "set_value", "(", "w", ")", "\n", "\n", "", "if", "hasattr", "(", "module", ",", "'w_beta'", ")", ":", "\n", "            ", "w", "=", "module", ".", "w_beta", "\n", "w", "=", "w", ".", "clip", "(", "self", ".", "clip_min", ",", "self", ".", "clip_max", ")", "\n", "module", ".", "w_beta", ".", "set_value", "(", "w", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.HourGlass.__init__": [[21, 37], ["paddle.Layer.__init__", "wing.CoordConvTh", "wing.HourGlass._generate_network"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.HourGlass._generate_network"], ["    ", "def", "__init__", "(", "self", ",", "num_modules", ",", "depth", ",", "num_features", ",", "first_one", "=", "False", ")", ":", "\n", "        ", "super", "(", "HourGlass", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_modules", "=", "num_modules", "\n", "self", ".", "depth", "=", "depth", "\n", "self", ".", "features", "=", "num_features", "\n", "self", ".", "coordconv", "=", "CoordConvTh", "(", "64", ",", "\n", "64", ",", "\n", "True", ",", "\n", "True", ",", "\n", "256", ",", "\n", "first_one", ",", "\n", "out_channels", "=", "256", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ")", "\n", "self", ".", "_generate_network", "(", "self", ".", "depth", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.HourGlass._generate_network": [[38, 46], ["wing.HourGlass.add_sublayer", "wing.HourGlass.add_sublayer", "wing.HourGlass.add_sublayer", "wing.ConvBlock", "wing.ConvBlock", "wing.HourGlass._generate_network", "wing.HourGlass.add_sublayer", "wing.ConvBlock", "str", "str", "wing.ConvBlock", "str", "str"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.HourGlass._generate_network"], ["", "def", "_generate_network", "(", "self", ",", "level", ")", ":", "\n", "        ", "self", ".", "add_sublayer", "(", "'b1_'", "+", "str", "(", "level", ")", ",", "ConvBlock", "(", "256", ",", "256", ")", ")", "\n", "self", ".", "add_sublayer", "(", "'b2_'", "+", "str", "(", "level", ")", ",", "ConvBlock", "(", "256", ",", "256", ")", ")", "\n", "if", "level", ">", "1", ":", "\n", "            ", "self", ".", "_generate_network", "(", "level", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "add_sublayer", "(", "'b2_plus_'", "+", "str", "(", "level", ")", ",", "ConvBlock", "(", "256", ",", "256", ")", ")", "\n", "", "self", ".", "add_sublayer", "(", "'b3_'", "+", "str", "(", "level", ")", ",", "ConvBlock", "(", "256", ",", "256", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.HourGlass._forward": [[47, 63], ["paddle.avg_pool2d", "paddle.avg_pool2d", "paddle.avg_pool2d", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "wing.HourGlass._forward", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.HourGlass._forward"], ["", "def", "_forward", "(", "self", ",", "level", ",", "inp", ")", ":", "\n", "        ", "up1", "=", "inp", "\n", "up1", "=", "self", ".", "_sub_layers", "[", "'b1_'", "+", "str", "(", "level", ")", "]", "(", "up1", ")", "\n", "low1", "=", "F", ".", "avg_pool2d", "(", "inp", ",", "2", ",", "stride", "=", "2", ")", "\n", "low1", "=", "self", ".", "_sub_layers", "[", "'b2_'", "+", "str", "(", "level", ")", "]", "(", "low1", ")", "\n", "\n", "if", "level", ">", "1", ":", "\n", "            ", "low2", "=", "self", ".", "_forward", "(", "level", "-", "1", ",", "low1", ")", "\n", "", "else", ":", "\n", "            ", "low2", "=", "low1", "\n", "low2", "=", "self", ".", "_sub_layers", "[", "'b2_plus_'", "+", "str", "(", "level", ")", "]", "(", "low2", ")", "\n", "", "low3", "=", "low2", "\n", "low3", "=", "self", ".", "_sub_layers", "[", "'b3_'", "+", "str", "(", "level", ")", "]", "(", "low3", ")", "\n", "up2", "=", "F", ".", "interpolate", "(", "low3", ",", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", "\n", "\n", "return", "up1", "+", "up2", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.HourGlass.forward": [[64, 67], ["wing.HourGlass.coordconv", "wing.HourGlass._forward"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.HourGlass._forward"], ["", "def", "forward", "(", "self", ",", "x", ",", "heatmap", ")", ":", "\n", "        ", "x", ",", "last_channel", "=", "self", ".", "coordconv", "(", "x", ",", "heatmap", ")", "\n", "return", "self", ".", "_forward", "(", "self", ".", "depth", ",", "x", ")", ",", "last_channel", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.AddCoordsTh.__init__": [[70, 95], ["paddle.Layer.__init__", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.arange().unsqueeze().expand().astype", "paddle.arange().unsqueeze().expand().astype", "paddle.arange().unsqueeze().expand().astype", "paddle.arange().unsqueeze().expand().astype", "paddle.arange().unsqueeze().expand().astype", "paddle.arange().unsqueeze().expand().astype", "paddle.arange().unsqueeze().expand().astype", "paddle.arange().unsqueeze().expand().astype", "paddle.arange().unsqueeze().expand().astype", "paddle.arange().unsqueeze().expand().astype", "paddle.arange().unsqueeze().expand().astype", "paddle.arange().unsqueeze().expand().astype", "paddle.arange().unsqueeze().expand().astype", "paddle.arange().unsqueeze().expand().astype", "paddle.arange().unsqueeze().expand().astype", "paddle.arange().unsqueeze().expand().astype", "paddle.arange().unsqueeze().expand().astype", "paddle.arange().unsqueeze().expand().astype", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.concat.unsqueeze", "paddle.concat.unsqueeze", "paddle.concat.unsqueeze", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.arange().unsqueeze().expand", "paddle.arange().unsqueeze().expand", "paddle.arange().unsqueeze().expand", "paddle.arange().unsqueeze().expand", "paddle.arange().unsqueeze().expand", "paddle.arange().unsqueeze().expand", "paddle.arange().unsqueeze().expand", "paddle.arange().unsqueeze().expand", "paddle.arange().unsqueeze().expand", "paddle.arange().unsqueeze().expand", "paddle.arange().unsqueeze().expand", "paddle.arange().unsqueeze().expand", "paddle.arange().unsqueeze().expand", "paddle.arange().unsqueeze().expand", "paddle.arange().unsqueeze().expand", "paddle.arange().unsqueeze().expand", "paddle.arange().unsqueeze().expand", "paddle.arange().unsqueeze().expand", "paddle.pow", "paddle.pow", "paddle.pow", "paddle.pow", "paddle.pow", "paddle.pow", "paddle.pow", "paddle.pow", "paddle.pow", "paddle.pow", "paddle.pow", "paddle.pow", "paddle.pow", "paddle.pow", "paddle.pow", "paddle.pow", "paddle.pow", "paddle.pow", "paddle.arange().unsqueeze", "paddle.arange().unsqueeze", "paddle.arange().unsqueeze", "paddle.arange().unsqueeze", "paddle.arange().unsqueeze", "paddle.arange().unsqueeze", "paddle.arange().unsqueeze", "paddle.arange().unsqueeze", "paddle.arange().unsqueeze", "paddle.arange().unsqueeze", "paddle.arange().unsqueeze", "paddle.arange().unsqueeze", "paddle.arange().unsqueeze", "paddle.arange().unsqueeze", "paddle.arange().unsqueeze", "paddle.arange().unsqueeze", "paddle.arange().unsqueeze", "paddle.arange().unsqueeze", "paddle.max", "paddle.max", "paddle.max", "paddle.max", "paddle.max", "paddle.max", "paddle.max", "paddle.max", "paddle.max", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "height", "=", "64", ",", "width", "=", "64", ",", "with_r", "=", "False", ",", "with_boundary", "=", "False", ")", ":", "\n", "        ", "super", "(", "AddCoordsTh", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "with_r", "=", "with_r", "\n", "self", ".", "with_boundary", "=", "with_boundary", "\n", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "            ", "x_coords", "=", "paddle", ".", "arange", "(", "height", ")", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "\n", "(", "height", ",", "width", ")", ")", ".", "astype", "(", "'float32'", ")", "\n", "y_coords", "=", "paddle", ".", "arange", "(", "width", ")", ".", "unsqueeze", "(", "0", ")", ".", "expand", "(", "\n", "(", "height", ",", "width", ")", ")", ".", "astype", "(", "'float32'", ")", "\n", "x_coords", "=", "(", "x_coords", "/", "(", "height", "-", "1", ")", ")", "*", "2", "-", "1", "\n", "y_coords", "=", "(", "y_coords", "/", "(", "width", "-", "1", ")", ")", "*", "2", "-", "1", "\n", "coords", "=", "paddle", ".", "stack", "(", "[", "x_coords", ",", "y_coords", "]", ",", "\n", "axis", "=", "0", ")", "# (2, height, width)", "\n", "\n", "if", "self", ".", "with_r", ":", "\n", "                ", "rr", "=", "paddle", ".", "sqrt", "(", "\n", "paddle", ".", "pow", "(", "x_coords", ",", "2", ")", "+", "\n", "paddle", ".", "pow", "(", "y_coords", ",", "2", ")", ")", "# (height, width)", "\n", "rr", "=", "(", "rr", "/", "paddle", ".", "max", "(", "rr", ")", ")", ".", "unsqueeze", "(", "0", ")", "\n", "coords", "=", "paddle", ".", "concat", "(", "[", "coords", ",", "rr", "]", ",", "axis", "=", "0", ")", "\n", "\n", "", "self", ".", "coords", "=", "coords", ".", "unsqueeze", "(", "0", ")", "# (1, 2 or 3, height, width)", "\n", "self", ".", "x_coords", "=", "x_coords", "\n", "self", ".", "y_coords", "=", "y_coords", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.AddCoordsTh.forward": [[96, 114], ["wing.AddCoordsTh.coords.tile", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "heatmap", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        x: (batch, c, x_dim, y_dim)\n        \"\"\"", "\n", "coords", "=", "self", ".", "coords", ".", "tile", "(", "(", "x", ".", "shape", "[", "0", "]", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "\n", "if", "self", ".", "with_boundary", "and", "heatmap", "is", "not", "None", ":", "\n", "            ", "boundary_channel", "=", "paddle", ".", "clip", "(", "heatmap", "[", ":", ",", "-", "1", ":", ",", ":", ",", ":", "]", ",", "0.0", ",", "1.0", ")", "\n", "zero_tensor", "=", "paddle", ".", "zeros_like", "(", "self", ".", "x_coords", ")", "\n", "xx_boundary_channel", "=", "paddle", ".", "where", "(", "boundary_channel", ">", "0.05", ",", "\n", "self", ".", "x_coords", ",", "zero_tensor", ")", "\n", "yy_boundary_channel", "=", "paddle", ".", "where", "(", "boundary_channel", ">", "0.05", ",", "\n", "self", ".", "y_coords", ",", "zero_tensor", ")", "\n", "coords", "=", "paddle", ".", "concat", "(", "\n", "[", "coords", ",", "xx_boundary_channel", ",", "yy_boundary_channel", "]", ",", "axis", "=", "1", ")", "\n", "\n", "", "x_and_coords", "=", "paddle", ".", "concat", "(", "[", "x", ",", "coords", "]", ",", "axis", "=", "1", ")", "\n", "return", "x_and_coords", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.CoordConvTh.__init__": [[118, 135], ["paddle.Layer.__init__", "wing.AddCoordsTh", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "\n", "height", ",", "\n", "width", ",", "\n", "with_r", ",", "\n", "with_boundary", ",", "\n", "in_channels", ",", "\n", "first_one", "=", "False", ",", "\n", "*", "args", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "CoordConvTh", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "addcoords", "=", "AddCoordsTh", "(", "height", ",", "width", ",", "with_r", ",", "with_boundary", ")", "\n", "in_channels", "+=", "2", "\n", "if", "with_r", ":", "\n", "            ", "in_channels", "+=", "1", "\n", "", "if", "with_boundary", "and", "not", "first_one", ":", "\n", "            ", "in_channels", "+=", "2", "\n", "", "self", ".", "conv", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "in_channels", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.CoordConvTh.forward": [[136, 141], ["wing.CoordConvTh.addcoords", "wing.CoordConvTh.conv"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv"], ["", "def", "forward", "(", "self", ",", "input_tensor", ",", "heatmap", "=", "None", ")", ":", "\n", "        ", "ret", "=", "self", ".", "addcoords", "(", "input_tensor", ",", "heatmap", ")", "\n", "last_channel", "=", "ret", "[", ":", ",", "-", "2", ":", ",", ":", ",", ":", "]", "\n", "ret", "=", "self", ".", "conv", "(", "ret", ")", "\n", "return", "ret", ",", "last_channel", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.ConvBlock.__init__": [[144, 164], ["paddle.Layer.__init__", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "functools.partial", "functools.partial.", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "functools.partial.", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "functools.partial.", "int", "int", "int", "int", "int", "int", "int", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ")", ":", "\n", "        ", "super", "(", "ConvBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2D", "(", "in_planes", ")", "\n", "conv3x3", "=", "partial", "(", "nn", ".", "Conv2D", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ",", "\n", "dilation", "=", "1", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "in_planes", ",", "int", "(", "out_planes", "/", "2", ")", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2D", "(", "int", "(", "out_planes", "/", "2", ")", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "int", "(", "out_planes", "/", "2", ")", ",", "int", "(", "out_planes", "/", "4", ")", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2D", "(", "int", "(", "out_planes", "/", "4", ")", ")", "\n", "self", ".", "conv3", "=", "conv3x3", "(", "int", "(", "out_planes", "/", "4", ")", ",", "int", "(", "out_planes", "/", "4", ")", ")", "\n", "\n", "self", ".", "downsample", "=", "None", "\n", "if", "in_planes", "!=", "out_planes", ":", "\n", "            ", "self", ".", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "BatchNorm2D", "(", "in_planes", ")", ",", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2D", "(", "in_planes", ",", "out_planes", ",", "1", ",", "1", ",", "bias_attr", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.ConvBlock.forward": [[165, 185], ["wing.ConvBlock.bn1", "paddle.relu", "paddle.relu", "paddle.relu", "wing.ConvBlock.conv1", "wing.ConvBlock.bn2", "paddle.relu", "paddle.relu", "paddle.relu", "wing.ConvBlock.conv2", "wing.ConvBlock.bn3", "paddle.relu", "paddle.relu", "paddle.relu", "wing.ConvBlock.conv3", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "wing.ConvBlock.downsample"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out1", "=", "self", ".", "bn1", "(", "x", ")", "\n", "out1", "=", "F", ".", "relu", "(", "out1", ",", "True", ")", "\n", "out1", "=", "self", ".", "conv1", "(", "out1", ")", "\n", "\n", "out2", "=", "self", ".", "bn2", "(", "out1", ")", "\n", "out2", "=", "F", ".", "relu", "(", "out2", ",", "True", ")", "\n", "out2", "=", "self", ".", "conv2", "(", "out2", ")", "\n", "\n", "out3", "=", "self", ".", "bn3", "(", "out2", ")", "\n", "out3", "=", "F", ".", "relu", "(", "out3", ",", "True", ")", "\n", "out3", "=", "self", ".", "conv3", "(", "out3", ")", "\n", "\n", "out3", "=", "paddle", ".", "concat", "(", "(", "out1", ",", "out2", ",", "out3", ")", ",", "1", ")", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "residual", ")", "\n", "", "out3", "+=", "residual", "\n", "return", "out3", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.normalize": [[192, 202], ["paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.max", "paddle.max", "paddle.max", "paddle.min", "paddle.min", "paddle.min"], "function", ["None"], ["", "", "def", "normalize", "(", "x", ",", "eps", "=", "1e-6", ")", ":", "\n", "    ", "\"\"\"Apply min-max normalization.\"\"\"", "\n", "# x = x.contiguous()", "\n", "N", ",", "C", ",", "H", ",", "W", "=", "x", ".", "shape", "\n", "x_", "=", "paddle", ".", "reshape", "(", "x", ",", "(", "N", "*", "C", ",", "-", "1", ")", ")", "\n", "max_val", "=", "paddle", ".", "max", "(", "x_", ",", "axis", "=", "1", ",", "keepdim", "=", "True", ")", "[", "0", "]", "\n", "min_val", "=", "paddle", ".", "min", "(", "x_", ",", "axis", "=", "1", ",", "keepdim", "=", "True", ")", "[", "0", "]", "\n", "x_", "=", "(", "x_", "-", "min_val", ")", "/", "(", "max_val", "-", "min_val", "+", "eps", ")", "\n", "out", "=", "paddle", ".", "reshape", "(", "x_", ",", "(", "N", ",", "C", ",", "H", ",", "W", ")", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.truncate": [[204, 207], ["paddle.where", "paddle.where", "paddle.where", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like"], "function", ["None"], ["", "def", "truncate", "(", "x", ",", "thres", "=", "0.1", ")", ":", "\n", "    ", "\"\"\"Remove small values in heatmaps.\"\"\"", "\n", "return", "paddle", ".", "where", "(", "x", "<", "thres", ",", "paddle", ".", "zeros_like", "(", "x", ")", ",", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize": [[209, 212], ["None"], "function", ["None"], ["", "def", "resize", "(", "x", ",", "p", "=", "2", ")", ":", "\n", "    ", "\"\"\"Resize heatmaps.\"\"\"", "\n", "return", "x", "**", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.shift": [[214, 235], ["x.numpy.numpy", "abs", "numpy.arange", "numpy.arange", "numpy.concatenate", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange"], "function", ["None"], ["", "def", "shift", "(", "x", ",", "N", ")", ":", "\n", "    ", "\"\"\"Shift N pixels up or down.\"\"\"", "\n", "x", "=", "x", ".", "numpy", "(", ")", "\n", "up", "=", "N", ">=", "0", "\n", "N", "=", "abs", "(", "N", ")", "\n", "_", ",", "_", ",", "H", ",", "W", "=", "x", ".", "shape", "\n", "head", "=", "np", ".", "arange", "(", "N", ")", "\n", "tail", "=", "np", ".", "arange", "(", "H", "-", "N", ")", "\n", "\n", "if", "up", ":", "\n", "        ", "head", "=", "np", ".", "arange", "(", "H", "-", "N", ")", "+", "N", "\n", "tail", "=", "np", ".", "arange", "(", "N", ")", "\n", "", "else", ":", "\n", "        ", "head", "=", "np", ".", "arange", "(", "N", ")", "+", "(", "H", "-", "N", ")", "\n", "tail", "=", "np", ".", "arange", "(", "H", "-", "N", ")", "\n", "\n", "# permutation indices", "\n", "", "perm", "=", "np", ".", "concatenate", "(", "[", "head", ",", "tail", "]", ")", "\n", "out", "=", "x", "[", ":", ",", ":", ",", "perm", ",", ":", "]", "\n", "out", "=", "paddle", ".", "to_tensor", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.preprocess": [[251, 309], ["wing.truncate", "wing.normalize", "munch.Munch", "munch.Munch.items", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.to_tensor.numpy", "zero_out.numpy.numpy", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "wing.shift", "wing.resize", "wing.resize", "copy.deepcopy", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.to_tensor.numpy", "paddle.to_tensor.numpy", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "wing.resize", "wing.resize", "wing.shift", "paddle.to_tensor.clip", "paddle.to_tensor.clip", "OPPAIR", "OPPAIR", "OPPAIR", "OPPAIR", "OPPAIR", "OPPAIR", "wing.shift", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "wing.shift"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.truncate", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.shift", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.shift", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.shift", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.shift"], ["def", "preprocess", "(", "x", ")", ":", "\n", "    ", "\"\"\"Preprocess 98-dimensional heatmaps.\"\"\"", "\n", "N", ",", "C", ",", "H", ",", "W", "=", "x", ".", "shape", "\n", "x", "=", "truncate", "(", "x", ")", "\n", "x", "=", "normalize", "(", "x", ")", "\n", "\n", "sw", "=", "H", "//", "256", "\n", "operations", "=", "Munch", "(", "chin", "=", "OPPAIR", "(", "0", ",", "3", ")", ",", "\n", "eyebrows", "=", "OPPAIR", "(", "-", "7", "*", "sw", ",", "2", ")", ",", "\n", "nostrils", "=", "OPPAIR", "(", "8", "*", "sw", ",", "4", ")", ",", "\n", "lipupper", "=", "OPPAIR", "(", "-", "8", "*", "sw", ",", "4", ")", ",", "\n", "liplower", "=", "OPPAIR", "(", "8", "*", "sw", ",", "4", ")", ",", "\n", "lipinner", "=", "OPPAIR", "(", "-", "2", "*", "sw", ",", "3", ")", ")", "\n", "\n", "for", "part", ",", "ops", "in", "operations", ".", "items", "(", ")", ":", "\n", "        ", "start", ",", "end", "=", "index_map", "[", "part", "]", "\n", "x", "[", ":", ",", "start", ":", "end", "]", "=", "resize", "(", "shift", "(", "x", "[", ":", ",", "start", ":", "end", "]", ",", "ops", ".", "shift", ")", ",", "ops", ".", "resize", ")", "\n", "\n", "", "zero_out", "=", "paddle", ".", "concat", "(", "[", "\n", "paddle", ".", "arange", "(", "0", ",", "index_map", ".", "chin", ".", "start", ")", ",", "\n", "paddle", ".", "arange", "(", "index_map", ".", "chin", ".", "end", ",", "33", ")", ",", "\n", "paddle", ".", "to_tensor", "(", "[", "\n", "index_map", ".", "eyebrowsedges", ".", "start", ",", "index_map", ".", "eyebrowsedges", ".", "end", ",", "\n", "index_map", ".", "lipedges", ".", "start", ",", "index_map", ".", "lipedges", ".", "end", "\n", "]", ")", "\n", "]", ")", "\n", "x", "=", "x", ".", "numpy", "(", ")", "\n", "zero_out", "=", "zero_out", ".", "numpy", "(", ")", "\n", "x", "[", ":", ",", "zero_out", "]", "=", "0", "\n", "x", "=", "paddle", ".", "to_tensor", "(", "x", ")", "\n", "\n", "start", ",", "end", "=", "index_map", ".", "nose", "\n", "x", "[", ":", ",", "start", "+", "1", ":", "end", "]", "=", "shift", "(", "x", "[", ":", ",", "start", "+", "1", ":", "end", "]", ",", "4", "*", "sw", ")", "\n", "x", "[", ":", ",", "start", ":", "end", "]", "=", "resize", "(", "x", "[", ":", ",", "start", ":", "end", "]", ",", "1", ")", "\n", "\n", "start", ",", "end", "=", "index_map", ".", "eyes", "\n", "x", "[", ":", ",", "start", ":", "end", "]", "=", "resize", "(", "x", "[", ":", ",", "start", ":", "end", "]", ",", "1", ")", "\n", "x", "[", ":", ",", "start", ":", "end", "]", "=", "resize", "(", "shift", "(", "x", "[", ":", ",", "start", ":", "end", "]", ",", "-", "8", ")", ",", "3", ")", "+", "shift", "(", "x", "[", ":", ",", "start", ":", "end", "]", ",", "-", "24", ")", "\n", "\n", "# Second-level mask", "\n", "x2", "=", "deepcopy", "(", "x", ")", "\n", "x2", "[", ":", ",", "index_map", ".", "chin", ".", "start", ":", "index_map", ".", "chin", ".", "end", "]", "=", "0", "# start:end was 0:33", "\n", "x2", "[", ":", ",", "index_map", ".", "lipedges", ".", "start", ":", "index_map", ".", "lipinner", ".", "\n", "end", "]", "=", "0", "# start:end was 76:96", "\n", "x2", "[", ":", ",", "index_map", ".", "eyebrows", ".", "start", ":", "index_map", ".", "eyebrows", ".", "\n", "end", "]", "=", "0", "# start:end was 33:51", "\n", "\n", "x", "=", "paddle", ".", "sum", "(", "x", ",", "axis", "=", "1", ",", "keepdim", "=", "True", ")", "# (N, 1, H, W)", "\n", "x2", "=", "paddle", ".", "sum", "(", "x2", ",", "axis", "=", "1", ",", "keepdim", "=", "True", ")", "# mask without faceline and mouth", "\n", "\n", "x", "=", "x", ".", "numpy", "(", ")", "\n", "x2", "=", "x2", ".", "numpy", "(", ")", "\n", "x", "[", "x", "!=", "x", "]", "=", "0", "# set nan to zero", "\n", "x2", "[", "x", "!=", "x", "]", "=", "0", "# set nan to zero", "\n", "x", "=", "paddle", ".", "to_tensor", "(", "x", ")", "\n", "x2", "=", "paddle", ".", "to_tensor", "(", "x2", ")", "\n", "return", "x", ".", "clip", "(", "0", ",", "1", ")", ",", "x2", ".", "clip", "(", "0", ",", "1", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.upfirdn2d.Upfirdn2dUpsample.__init__": [[87, 100], ["paddle.Layer.__init__", "upfirdn2d.Upfirdn2dUpsample.register_buffer", "upfirdn2d.make_kernel"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.upfirdn2d.make_kernel"], ["    ", "def", "__init__", "(", "self", ",", "kernel", ",", "factor", "=", "2", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "factor", "=", "factor", "\n", "kernel", "=", "make_kernel", "(", "kernel", ")", "*", "(", "factor", "*", "factor", ")", "\n", "self", ".", "register_buffer", "(", "\"kernel\"", ",", "kernel", ")", "\n", "\n", "p", "=", "kernel", ".", "shape", "[", "0", "]", "-", "factor", "\n", "\n", "pad0", "=", "(", "p", "+", "1", ")", "//", "2", "+", "factor", "-", "1", "\n", "pad1", "=", "p", "//", "2", "\n", "\n", "self", ".", "pad", "=", "(", "pad0", ",", "pad1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.upfirdn2d.Upfirdn2dUpsample.forward": [[101, 109], ["upfirdn2d.upfirdn2d"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.upfirdn2d.upfirdn2d"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "out", "=", "upfirdn2d", "(", "input", ",", "\n", "self", ".", "kernel", ",", "\n", "up", "=", "self", ".", "factor", ",", "\n", "down", "=", "1", ",", "\n", "pad", "=", "self", ".", "pad", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.upfirdn2d.Upfirdn2dDownsample.__init__": [[112, 125], ["paddle.Layer.__init__", "upfirdn2d.make_kernel", "upfirdn2d.Upfirdn2dDownsample.register_buffer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.upfirdn2d.make_kernel"], ["    ", "def", "__init__", "(", "self", ",", "kernel", ",", "factor", "=", "2", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "factor", "=", "factor", "\n", "kernel", "=", "make_kernel", "(", "kernel", ")", "\n", "self", ".", "register_buffer", "(", "\"kernel\"", ",", "kernel", ")", "\n", "\n", "p", "=", "kernel", ".", "shape", "[", "0", "]", "-", "factor", "\n", "\n", "pad0", "=", "(", "p", "+", "1", ")", "//", "2", "\n", "pad1", "=", "p", "//", "2", "\n", "\n", "self", ".", "pad", "=", "(", "pad0", ",", "pad1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.upfirdn2d.Upfirdn2dDownsample.forward": [[126, 134], ["upfirdn2d.upfirdn2d"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.upfirdn2d.upfirdn2d"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "out", "=", "upfirdn2d", "(", "input", ",", "\n", "self", ".", "kernel", ",", "\n", "up", "=", "1", ",", "\n", "down", "=", "self", ".", "factor", ",", "\n", "pad", "=", "self", ".", "pad", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.upfirdn2d.Upfirdn2dBlur.__init__": [[137, 148], ["paddle.Layer.__init__", "upfirdn2d.make_kernel", "upfirdn2d.Upfirdn2dBlur.register_buffer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.upfirdn2d.make_kernel"], ["    ", "def", "__init__", "(", "self", ",", "kernel", ",", "pad", ",", "upsample_factor", "=", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "kernel", "=", "make_kernel", "(", "kernel", ")", "\n", "\n", "if", "upsample_factor", ">", "1", ":", "\n", "            ", "kernel", "=", "kernel", "*", "(", "upsample_factor", "*", "upsample_factor", ")", "\n", "\n", "", "self", ".", "register_buffer", "(", "\"kernel\"", ",", "kernel", ",", "persistable", "=", "False", ")", "\n", "\n", "self", ".", "pad", "=", "pad", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.upfirdn2d.Upfirdn2dBlur.forward": [[149, 153], ["upfirdn2d.upfirdn2d"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.upfirdn2d.upfirdn2d"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "out", "=", "upfirdn2d", "(", "input", ",", "self", ".", "kernel", ",", "pad", "=", "self", ".", "pad", ")", "\n", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.upfirdn2d.upfirdn2d_native": [[24, 66], ["input.reshape.reshape", "input.reshape.reshape", "out.transpose.transpose", "out.transpose.reshape", "paddle.pad", "out.transpose.reshape", "out.transpose.transpose", "out.transpose.reshape", "paddle.pad", "out.transpose.reshape", "paddle.flip().reshape", "paddle.flip().reshape", "paddle.flip().reshape", "paddle.conv2d", "out.transpose.reshape", "out.transpose.transpose", "out.transpose.reshape", "max", "max", "max", "max", "paddle.flip", "paddle.flip", "paddle.flip", "max", "max", "max", "max"], "function", ["None"], ["def", "upfirdn2d_native", "(", "input", ",", "kernel", ",", "up_x", ",", "up_y", ",", "down_x", ",", "down_y", ",", "pad_x0", ",", "pad_x1", ",", "\n", "pad_y0", ",", "pad_y1", ")", ":", "\n", "    ", "_", ",", "channel", ",", "in_h", ",", "in_w", "=", "input", ".", "shape", "\n", "input", "=", "input", ".", "reshape", "(", "(", "-", "1", ",", "in_h", ",", "in_w", ",", "1", ")", ")", "\n", "\n", "_", ",", "in_h", ",", "in_w", ",", "minor", "=", "input", ".", "shape", "\n", "kernel_h", ",", "kernel_w", "=", "kernel", ".", "shape", "\n", "\n", "out", "=", "input", ".", "reshape", "(", "(", "-", "1", ",", "in_h", ",", "1", ",", "in_w", ",", "1", ",", "minor", ")", ")", "\n", "out", "=", "out", ".", "transpose", "(", "(", "0", ",", "1", ",", "3", ",", "5", ",", "2", ",", "4", ")", ")", "\n", "out", "=", "out", ".", "reshape", "(", "(", "-", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "out", "=", "F", ".", "pad", "(", "out", ",", "[", "0", ",", "up_x", "-", "1", ",", "0", ",", "up_y", "-", "1", "]", ")", "\n", "out", "=", "out", ".", "reshape", "(", "(", "-", "1", ",", "in_h", ",", "in_w", ",", "minor", ",", "up_y", ",", "up_x", ")", ")", "\n", "out", "=", "out", ".", "transpose", "(", "(", "0", ",", "3", ",", "1", ",", "4", ",", "2", ",", "5", ")", ")", "\n", "out", "=", "out", ".", "reshape", "(", "(", "-", "1", ",", "minor", ",", "in_h", "*", "up_y", ",", "in_w", "*", "up_x", ")", ")", "\n", "\n", "out", "=", "F", ".", "pad", "(", "\n", "out", ",", "[", "max", "(", "pad_x0", ",", "0", ")", ",", "\n", "max", "(", "pad_x1", ",", "0", ")", ",", "\n", "max", "(", "pad_y0", ",", "0", ")", ",", "\n", "max", "(", "pad_y1", ",", "0", ")", "]", ")", "\n", "out", "=", "out", "[", ":", ",", ":", ",", "\n", "max", "(", "-", "pad_y0", ",", "0", ")", ":", "out", ".", "shape", "[", "2", "]", "-", "max", "(", "-", "pad_y1", ",", "0", ")", ",", "\n", "max", "(", "-", "pad_x0", ",", "0", ")", ":", "out", ".", "shape", "[", "3", "]", "-", "max", "(", "-", "pad_x1", ",", "0", ")", ",", "]", "\n", "\n", "out", "=", "out", ".", "reshape", "(", "\n", "(", "[", "-", "1", ",", "1", ",", "in_h", "*", "up_y", "+", "pad_y0", "+", "pad_y1", ",", "in_w", "*", "up_x", "+", "pad_x0", "+", "pad_x1", "]", ")", ")", "\n", "w", "=", "paddle", ".", "flip", "(", "kernel", ",", "[", "0", ",", "1", "]", ")", ".", "reshape", "(", "(", "1", ",", "1", ",", "kernel_h", ",", "kernel_w", ")", ")", "\n", "out", "=", "F", ".", "conv2d", "(", "out", ",", "w", ")", "\n", "out", "=", "out", ".", "reshape", "(", "(", "\n", "-", "1", ",", "\n", "minor", ",", "\n", "in_h", "*", "up_y", "+", "pad_y0", "+", "pad_y1", "-", "kernel_h", "+", "1", ",", "\n", "in_w", "*", "up_x", "+", "pad_x0", "+", "pad_x1", "-", "kernel_w", "+", "1", ",", "\n", ")", ")", "\n", "out", "=", "out", ".", "transpose", "(", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", "\n", "out", "=", "out", "[", ":", ",", ":", ":", "down_y", ",", ":", ":", "down_x", ",", ":", "]", "\n", "\n", "out_h", "=", "(", "in_h", "*", "up_y", "+", "pad_y0", "+", "pad_y1", "-", "kernel_h", ")", "//", "down_y", "+", "1", "\n", "out_w", "=", "(", "in_w", "*", "up_x", "+", "pad_x0", "+", "pad_x1", "-", "kernel_w", ")", "//", "down_x", "+", "1", "\n", "\n", "return", "out", ".", "reshape", "(", "(", "-", "1", ",", "channel", ",", "out_h", ",", "out_w", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.upfirdn2d.upfirdn2d": [[68, 73], ["upfirdn2d.upfirdn2d_native"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.upfirdn2d.upfirdn2d_native"], ["", "def", "upfirdn2d", "(", "input", ",", "kernel", ",", "up", "=", "1", ",", "down", "=", "1", ",", "pad", "=", "(", "0", ",", "0", ")", ")", ":", "\n", "    ", "out", "=", "upfirdn2d_native", "(", "input", ",", "kernel", ",", "up", ",", "up", ",", "down", ",", "down", ",", "pad", "[", "0", "]", ",", "pad", "[", "1", "]", ",", "\n", "pad", "[", "0", "]", ",", "pad", "[", "1", "]", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.upfirdn2d.make_kernel": [[75, 84], ["paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor.sum", "paddle.to_tensor.unsqueeze", "paddle.to_tensor.unsqueeze"], "function", ["None"], ["", "def", "make_kernel", "(", "k", ")", ":", "\n", "    ", "k", "=", "paddle", ".", "to_tensor", "(", "k", ",", "dtype", "=", "'float32'", ")", "\n", "\n", "if", "k", ".", "ndim", "==", "1", ":", "\n", "        ", "k", "=", "k", ".", "unsqueeze", "(", "0", ")", "*", "k", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "", "k", "/=", "k", ".", "sum", "(", ")", "\n", "\n", "return", "k", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.ImagePyramide.__init__": [[21, 30], ["paddle.Layer.__init__", "paddle.nn.LayerList", "paddle.nn.LayerList", "paddle.nn.LayerList", "paddle.nn.LayerList", "paddle.nn.LayerList", "paddle.nn.LayerList", "paddle.nn.LayerList", "paddle.nn.LayerList", "paddle.nn.LayerList", "first_order.ImagePyramide.downs.add_sublayer", "first_order.ImagePyramide.name_list.append", "str().replace", "first_order.AntiAliasInterpolation2d", "str().replace", "str", "str"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["def", "__init__", "(", "self", ",", "scales", ",", "num_channels", ")", ":", "\n", "        ", "super", "(", "ImagePyramide", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "downs", "=", "paddle", ".", "nn", ".", "LayerList", "(", ")", "\n", "self", ".", "name_list", "=", "[", "]", "\n", "for", "scale", "in", "scales", ":", "\n", "            ", "self", ".", "downs", ".", "add_sublayer", "(", "\n", "str", "(", "scale", ")", ".", "replace", "(", "'.'", ",", "'-'", ")", ",", "\n", "AntiAliasInterpolation2d", "(", "num_channels", ",", "scale", ")", ")", "\n", "self", ".", "name_list", ".", "append", "(", "str", "(", "scale", ")", ".", "replace", "(", "'.'", ",", "'-'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.ImagePyramide.forward": [[31, 37], ["zip", "down_module", "str().replace", "str"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out_dict", "=", "{", "}", "\n", "for", "scale", ",", "down_module", "in", "zip", "(", "self", ".", "name_list", ",", "self", ".", "downs", ")", ":", "\n", "            ", "out_dict", "[", "'prediction_'", "+", "\n", "str", "(", "scale", ")", ".", "replace", "(", "'-'", ",", "'.'", ")", "]", "=", "down_module", "(", "x", ")", "\n", "", "return", "out_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.ResBlock2d.__init__": [[90, 102], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "first_order.SyncBatchNorm", "first_order.SyncBatchNorm"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.SyncBatchNorm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.SyncBatchNorm"], ["def", "__init__", "(", "self", ",", "in_features", ",", "kernel_size", ",", "padding", ")", ":", "\n", "        ", "super", "(", "ResBlock2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "in_features", ",", "\n", "out_channels", "=", "in_features", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "padding", "=", "padding", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "in_features", ",", "\n", "out_channels", "=", "in_features", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "padding", "=", "padding", ")", "\n", "self", ".", "norm1", "=", "SyncBatchNorm", "(", "in_features", ")", "\n", "self", ".", "norm2", "=", "SyncBatchNorm", "(", "in_features", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.ResBlock2d.forward": [[103, 112], ["first_order.ResBlock2d.norm1", "paddle.relu", "paddle.relu", "paddle.relu", "first_order.ResBlock2d.conv1", "first_order.ResBlock2d.norm2", "paddle.relu", "paddle.relu", "paddle.relu", "first_order.ResBlock2d.conv2"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "norm1", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "conv1", "(", "out", ")", "\n", "out", "=", "self", ".", "norm2", "(", "out", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "+=", "x", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.MobileResBlock2d.__init__": [[118, 141], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "first_order.SyncBatchNorm", "first_order.SyncBatchNorm", "first_order.SyncBatchNorm", "first_order.SyncBatchNorm"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.SyncBatchNorm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.SyncBatchNorm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.SyncBatchNorm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.SyncBatchNorm"], ["def", "__init__", "(", "self", ",", "in_features", ",", "kernel_size", ",", "padding", ")", ":", "\n", "        ", "super", "(", "MobileResBlock2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "out_features", "=", "in_features", "*", "2", "\n", "self", ".", "conv_pw", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "in_features", ",", "\n", "out_channels", "=", "out_features", ",", "\n", "kernel_size", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "conv_dw", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "out_features", ",", "\n", "out_channels", "=", "out_features", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "padding", "=", "padding", ",", "\n", "groups", "=", "out_features", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "conv_pw_linear", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "out_features", ",", "\n", "out_channels", "=", "in_features", ",", "\n", "kernel_size", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "norm1", "=", "SyncBatchNorm", "(", "in_features", ")", "\n", "self", ".", "norm_pw", "=", "SyncBatchNorm", "(", "out_features", ")", "\n", "self", ".", "norm_dw", "=", "SyncBatchNorm", "(", "out_features", ")", "\n", "self", ".", "norm_pw_linear", "=", "SyncBatchNorm", "(", "in_features", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.MobileResBlock2d.forward": [[142, 156], ["first_order.MobileResBlock2d.norm1", "paddle.relu", "paddle.relu", "paddle.relu", "first_order.MobileResBlock2d.conv_pw", "first_order.MobileResBlock2d.norm_pw", "first_order.MobileResBlock2d.conv_dw", "first_order.MobileResBlock2d.norm_dw", "paddle.relu", "paddle.relu", "paddle.relu", "first_order.MobileResBlock2d.conv_pw_linear", "first_order.MobileResBlock2d.norm_pw_linear"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "norm1", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "conv_pw", "(", "out", ")", "\n", "out", "=", "self", ".", "norm_pw", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv_dw", "(", "out", ")", "\n", "out", "=", "self", ".", "norm_dw", "(", "out", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv_pw_linear", "(", "out", ")", "\n", "out", "=", "self", ".", "norm_pw_linear", "(", "out", ")", "\n", "out", "+=", "x", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.UpBlock2d.__init__": [[162, 176], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "first_order.SyncBatchNorm"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.SyncBatchNorm"], ["def", "__init__", "(", "self", ",", "\n", "in_features", ",", "\n", "out_features", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "\n", "groups", "=", "1", ")", ":", "\n", "        ", "super", "(", "UpBlock2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "in_features", ",", "\n", "out_channels", "=", "out_features", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "padding", "=", "padding", ",", "\n", "groups", "=", "groups", ")", "\n", "self", ".", "norm", "=", "SyncBatchNorm", "(", "out_features", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.UpBlock2d.forward": [[177, 183], ["paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "first_order.UpBlock2d.conv", "first_order.UpBlock2d.norm", "paddle.relu", "paddle.relu", "paddle.relu"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "2", ")", "\n", "out", "=", "self", ".", "conv", "(", "out", ")", "\n", "out", "=", "self", ".", "norm", "(", "out", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.MobileUpBlock2d.__init__": [[189, 210], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "first_order.SyncBatchNorm", "first_order.SyncBatchNorm"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.SyncBatchNorm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.SyncBatchNorm"], ["def", "__init__", "(", "self", ",", "\n", "in_features", ",", "\n", "out_features", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "\n", "groups", "=", "1", ")", ":", "\n", "        ", "super", "(", "MobileUpBlock2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "in_features", ",", "\n", "out_channels", "=", "in_features", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "padding", "=", "padding", ",", "\n", "groups", "=", "in_features", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "in_features", ",", "\n", "out_channels", "=", "out_features", ",", "\n", "kernel_size", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "norm", "=", "SyncBatchNorm", "(", "in_features", ")", "\n", "self", ".", "norm1", "=", "SyncBatchNorm", "(", "out_features", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.MobileUpBlock2d.forward": [[211, 220], ["paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "first_order.MobileUpBlock2d.conv", "first_order.MobileUpBlock2d.norm", "paddle.relu", "paddle.relu", "paddle.relu", "first_order.MobileUpBlock2d.conv1", "first_order.MobileUpBlock2d.norm1", "paddle.relu", "paddle.relu", "paddle.relu"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "2", ")", "\n", "out", "=", "self", ".", "conv", "(", "out", ")", "\n", "out", "=", "self", ".", "norm", "(", "out", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "conv1", "(", "out", ")", "\n", "out", "=", "self", ".", "norm1", "(", "out", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.DownBlock2d.__init__": [[226, 240], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "first_order.SyncBatchNorm", "paddle.AvgPool2D", "paddle.AvgPool2D", "paddle.AvgPool2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.SyncBatchNorm"], ["def", "__init__", "(", "self", ",", "\n", "in_features", ",", "\n", "out_features", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "\n", "groups", "=", "1", ")", ":", "\n", "        ", "super", "(", "DownBlock2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "in_features", ",", "\n", "out_channels", "=", "out_features", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "padding", "=", "padding", ",", "\n", "groups", "=", "groups", ")", "\n", "self", ".", "norm", "=", "SyncBatchNorm", "(", "out_features", ")", "\n", "self", ".", "pool", "=", "nn", ".", "AvgPool2D", "(", "kernel_size", "=", "(", "2", ",", "2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.DownBlock2d.forward": [[241, 247], ["first_order.DownBlock2d.conv", "first_order.DownBlock2d.norm", "paddle.relu", "paddle.relu", "paddle.relu", "first_order.DownBlock2d.pool"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv", "(", "x", ")", "\n", "out", "=", "self", ".", "norm", "(", "out", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "pool", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.MobileDownBlock2d.__init__": [[253, 276], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "first_order.SyncBatchNorm", "paddle.AvgPool2D", "paddle.AvgPool2D", "paddle.AvgPool2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "first_order.SyncBatchNorm"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.SyncBatchNorm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.SyncBatchNorm"], ["def", "__init__", "(", "self", ",", "\n", "in_features", ",", "\n", "out_features", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "\n", "groups", "=", "1", ")", ":", "\n", "        ", "super", "(", "MobileDownBlock2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "in_features", ",", "\n", "out_channels", "=", "in_features", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "padding", "=", "padding", ",", "\n", "groups", "=", "in_features", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "norm", "=", "SyncBatchNorm", "(", "in_features", ")", "\n", "self", ".", "pool", "=", "nn", ".", "AvgPool2D", "(", "kernel_size", "=", "(", "2", ",", "2", ")", ")", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2D", "(", "in_features", ",", "\n", "out_features", ",", "\n", "kernel_size", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "stride", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "norm1", "=", "SyncBatchNorm", "(", "out_features", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.MobileDownBlock2d.forward": [[277, 286], ["first_order.MobileDownBlock2d.conv", "first_order.MobileDownBlock2d.norm", "paddle.relu", "paddle.relu", "paddle.relu", "first_order.MobileDownBlock2d.conv1", "first_order.MobileDownBlock2d.norm1", "paddle.relu", "paddle.relu", "paddle.relu", "first_order.MobileDownBlock2d.pool"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv", "(", "x", ")", "\n", "out", "=", "self", ".", "norm", "(", "out", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "conv1", "(", "out", ")", "\n", "out", "=", "self", ".", "norm1", "(", "out", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "pool", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.SameBlock2d.__init__": [[292, 308], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "first_order.SyncBatchNorm", "paddle.initializer.KaimingUniform", "paddle.initializer.KaimingUniform", "paddle.initializer.KaimingUniform"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.SyncBatchNorm"], ["def", "__init__", "(", "self", ",", "\n", "in_features", ",", "\n", "out_features", ",", "\n", "groups", "=", "1", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "\n", "mobile_net", "=", "False", ")", ":", "\n", "        ", "super", "(", "SameBlock2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "in_features", ",", "\n", "out_channels", "=", "out_features", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "padding", "=", "padding", ",", "\n", "groups", "=", "groups", ",", "\n", "bias_attr", "=", "(", "mobile_net", "==", "False", ")", ",", "\n", "weight_attr", "=", "nn", ".", "initializer", ".", "KaimingUniform", "(", ")", ")", "\n", "self", ".", "norm", "=", "SyncBatchNorm", "(", "out_features", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.SameBlock2d.forward": [[309, 314], ["first_order.SameBlock2d.conv", "first_order.SameBlock2d.norm", "paddle.relu", "paddle.relu", "paddle.relu"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv", "(", "x", ")", "\n", "out", "=", "self", ".", "norm", "(", "out", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.Encoder.__init__": [[320, 347], ["paddle.Layer.__init__", "range", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "down_blocks.append", "down_blocks.append", "first_order.MobileDownBlock2d", "first_order.DownBlock2d", "min", "min", "min", "min"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["def", "__init__", "(", "self", ",", "\n", "block_expansion", ",", "\n", "in_features", ",", "\n", "num_blocks", "=", "3", ",", "\n", "max_features", "=", "256", ",", "\n", "mobile_net", "=", "False", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "down_blocks", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_blocks", ")", ":", "\n", "            ", "if", "mobile_net", ":", "\n", "                ", "down_blocks", ".", "append", "(", "\n", "MobileDownBlock2d", "(", "in_features", "if", "i", "==", "0", "else", "min", "(", "\n", "max_features", ",", "block_expansion", "*", "(", "2", "**", "i", ")", ")", ",", "\n", "min", "(", "max_features", ",", "\n", "block_expansion", "*", "(", "2", "**", "(", "i", "+", "1", ")", ")", ")", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ")", ")", "\n", "", "else", ":", "\n", "                ", "down_blocks", ".", "append", "(", "\n", "DownBlock2d", "(", "in_features", "if", "i", "==", "0", "else", "min", "(", "\n", "max_features", ",", "block_expansion", "*", "(", "2", "**", "i", ")", ")", ",", "\n", "min", "(", "max_features", ",", "\n", "block_expansion", "*", "(", "2", "**", "(", "i", "+", "1", ")", ")", ")", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ")", ")", "\n", "", "", "self", ".", "down_blocks", "=", "nn", ".", "LayerList", "(", "down_blocks", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.Encoder.forward": [[348, 353], ["outs.append", "down_block"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "outs", "=", "[", "x", "]", "\n", "for", "down_block", "in", "self", ".", "down_blocks", ":", "\n", "            ", "outs", ".", "append", "(", "down_block", "(", "outs", "[", "-", "1", "]", ")", ")", "\n", "", "return", "outs", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.Decoder.__init__": [[359, 388], ["paddle.Layer.__init__", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "range", "min", "up_blocks.append", "up_blocks.append", "min", "first_order.MobileUpBlock2d", "min", "first_order.UpBlock2d"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["def", "__init__", "(", "self", ",", "\n", "block_expansion", ",", "\n", "in_features", ",", "\n", "num_blocks", "=", "3", ",", "\n", "max_features", "=", "256", ",", "\n", "mobile_net", "=", "False", ")", ":", "\n", "        ", "super", "(", "Decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "up_blocks", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "num_blocks", ")", "[", ":", ":", "-", "1", "]", ":", "\n", "            ", "out_filters", "=", "min", "(", "max_features", ",", "block_expansion", "*", "(", "2", "**", "i", ")", ")", "\n", "if", "mobile_net", ":", "\n", "                ", "in_filters", "=", "(", "1", "if", "i", "==", "num_blocks", "-", "1", "else", "2", ")", "*", "min", "(", "\n", "max_features", ",", "block_expansion", "*", "(", "2", "**", "(", "i", "+", "1", ")", ")", ")", "\n", "up_blocks", ".", "append", "(", "\n", "MobileUpBlock2d", "(", "in_filters", ",", "\n", "out_filters", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ")", ")", "\n", "", "else", ":", "\n", "                ", "in_filters", "=", "(", "1", "if", "i", "==", "num_blocks", "-", "1", "else", "2", ")", "*", "min", "(", "\n", "max_features", ",", "block_expansion", "*", "(", "2", "**", "(", "i", "+", "1", ")", ")", ")", "\n", "up_blocks", ".", "append", "(", "\n", "UpBlock2d", "(", "in_filters", ",", "out_filters", ",", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ")", ")", "\n", "\n", "", "", "self", ".", "up_blocks", "=", "nn", ".", "LayerList", "(", "up_blocks", ")", "\n", "self", ".", "out_filters", "=", "block_expansion", "+", "in_features", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.Decoder.forward": [[389, 396], ["x.pop", "up_block", "x.pop", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "x", ".", "pop", "(", ")", "\n", "for", "up_block", "in", "self", ".", "up_blocks", ":", "\n", "            ", "out", "=", "up_block", "(", "out", ")", "\n", "skip", "=", "x", ".", "pop", "(", ")", "\n", "out", "=", "paddle", ".", "concat", "(", "[", "out", ",", "skip", "]", ",", "axis", "=", "1", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.Hourglass.__init__": [[402, 420], ["paddle.Layer.__init__", "first_order.Encoder", "first_order.Decoder"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "\n", "block_expansion", ",", "\n", "in_features", ",", "\n", "num_blocks", "=", "3", ",", "\n", "max_features", "=", "256", ",", "\n", "mobile_net", "=", "False", ")", ":", "\n", "        ", "super", "(", "Hourglass", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "encoder", "=", "Encoder", "(", "block_expansion", ",", "\n", "in_features", ",", "\n", "num_blocks", ",", "\n", "max_features", ",", "\n", "mobile_net", "=", "mobile_net", ")", "\n", "self", ".", "decoder", "=", "Decoder", "(", "block_expansion", ",", "\n", "in_features", ",", "\n", "num_blocks", ",", "\n", "max_features", ",", "\n", "mobile_net", "=", "mobile_net", ")", "\n", "self", ".", "out_filters", "=", "self", ".", "decoder", ".", "out_filters", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.Hourglass.forward": [[421, 423], ["first_order.Hourglass.decoder", "first_order.Hourglass.encoder"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "decoder", "(", "self", ".", "encoder", "(", "x", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.AntiAliasInterpolation2d.__init__": [[429, 460], ["paddle.Layer.__init__", "paddle.meshgrid", "paddle.meshgrid", "paddle.meshgrid", "paddle.meshgrid", "paddle.meshgrid", "paddle.meshgrid", "paddle.meshgrid", "paddle.meshgrid", "paddle.meshgrid", "zip", "paddle.tile.reshape", "paddle.tile.reshape", "paddle.tile.reshape", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "first_order.AntiAliasInterpolation2d.register_buffer", "paddle.exp", "paddle.exp", "paddle.exp", "paddle.exp", "paddle.exp", "paddle.exp", "paddle.exp", "paddle.exp", "paddle.exp", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "round", "paddle.tile.dim", "paddle.tile.dim", "paddle.tile.dim"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "channels", ",", "scale", ",", "mobile_net", "=", "False", ")", ":", "\n", "        ", "super", "(", "AntiAliasInterpolation2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "mobile_net", ":", "\n", "            ", "sigma", "=", "0.25", "\n", "kernel_size", "=", "3", "\n", "", "else", ":", "\n", "            ", "sigma", "=", "(", "1", "/", "scale", "-", "1", ")", "/", "2", "\n", "kernel_size", "=", "2", "*", "round", "(", "sigma", "*", "4", ")", "+", "1", "\n", "", "self", ".", "ka", "=", "kernel_size", "//", "2", "\n", "self", ".", "kb", "=", "self", ".", "ka", "-", "1", "if", "kernel_size", "%", "2", "==", "0", "else", "self", ".", "ka", "\n", "\n", "kernel_size", "=", "[", "kernel_size", ",", "kernel_size", "]", "\n", "sigma", "=", "[", "sigma", ",", "sigma", "]", "\n", "# The gaussian kernel is the product of the", "\n", "# gaussian function of each dimension.", "\n", "kernel", "=", "1", "\n", "meshgrids", "=", "paddle", ".", "meshgrid", "(", "\n", "[", "paddle", ".", "arange", "(", "size", ",", "dtype", "=", "'float32'", ")", "for", "size", "in", "kernel_size", "]", ")", "\n", "for", "size", ",", "std", ",", "mgrid", "in", "zip", "(", "kernel_size", ",", "sigma", ",", "meshgrids", ")", ":", "\n", "            ", "mean", "=", "(", "size", "-", "1", ")", "/", "2", "\n", "kernel", "*=", "paddle", ".", "exp", "(", "-", "(", "mgrid", "-", "mean", ")", "**", "2", "/", "(", "2", "*", "std", "**", "2", "+", "1e-9", ")", ")", "\n", "\n", "# Make sure sum of values in gaussian kernel equals 1.", "\n", "", "kernel", "=", "kernel", "/", "paddle", ".", "sum", "(", "kernel", ")", "\n", "# Reshape to depthwise convolutional weight", "\n", "kernel", "=", "kernel", ".", "reshape", "(", "[", "1", ",", "1", ",", "*", "kernel", ".", "shape", "]", ")", "\n", "kernel", "=", "paddle", ".", "tile", "(", "kernel", ",", "[", "channels", ",", "*", "[", "1", "]", "*", "(", "kernel", ".", "dim", "(", ")", "-", "1", ")", "]", ")", "\n", "\n", "self", ".", "register_buffer", "(", "'weight'", ",", "kernel", ")", "\n", "self", ".", "groups", "=", "channels", "\n", "self", ".", "scale", "=", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.AntiAliasInterpolation2d.forward": [[461, 476], ["paddle.pad", "paddle.pad", "paddle.pad", "paddle.conv2d", "paddle.conv2d", "paddle.conv2d", "int"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "if", "self", ".", "scale", "==", "1.0", ":", "\n", "            ", "return", "input", "\n", "\n", "", "out", "=", "F", ".", "pad", "(", "input", ",", "[", "self", ".", "ka", ",", "self", ".", "kb", ",", "self", ".", "ka", ",", "self", ".", "kb", "]", ")", "\n", "out", "=", "F", ".", "conv2d", "(", "out", ",", "weight", "=", "self", ".", "weight", ",", "groups", "=", "self", ".", "groups", ")", "\n", "out", ".", "stop_gradient", "=", "False", "\n", "inv_scale", "=", "1", "/", "self", ".", "scale", "\n", "int_inv_scale", "=", "int", "(", "inv_scale", ")", "\n", "assert", "(", "inv_scale", "==", "int_inv_scale", ")", "\n", "# lite: fluid resize_nearest", "\n", "# out = paddle.fluid.layers.resize_nearest(out, scale=self.scale)", "\n", "out", "=", "out", "[", ":", ",", ":", ",", ":", ":", "int_inv_scale", ",", ":", ":", "int_inv_scale", "]", "\n", "# patch end", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.SyncBatchNorm": [[10, 15], ["paddle.distributed.get_world_size", "paddle.distributed.get_world_size", "paddle.distributed.get_world_size", "paddle.SyncBatchNorm", "paddle.BatchNorm"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.SyncBatchNorm"], ["def", "SyncBatchNorm", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "if", "paddle", ".", "distributed", ".", "get_world_size", "(", ")", ">", "1", ":", "\n", "        ", "return", "nn", ".", "SyncBatchNorm", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "", "else", ":", "\n", "        ", "return", "nn", ".", "BatchNorm", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.detach_kp": [[39, 41], ["value.detach", "kp.items"], "function", ["None"], ["", "", "def", "detach_kp", "(", "kp", ")", ":", "\n", "    ", "return", "{", "key", ":", "value", ".", "detach", "(", ")", "for", "key", ",", "value", "in", "kp", ".", "items", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.kp2gaussian": [[43, 65], ["first_order.make_coordinate_grid", "coordinate_grid.tile.reshape", "coordinate_grid.tile.tile", "mean.reshape.reshape", "paddle.exp", "paddle.exp", "paddle.exp", "len", "tuple", "tuple", "tuple"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.make_coordinate_grid"], ["", "def", "kp2gaussian", "(", "kp", ",", "spatial_size", ",", "kp_variance", ")", ":", "\n", "    ", "\"\"\"\n    Transform a keypoint into gaussian like representation\n    \"\"\"", "\n", "mean", "=", "kp", "[", "'value'", "]", "\n", "\n", "coordinate_grid", "=", "make_coordinate_grid", "(", "spatial_size", ",", "mean", ".", "dtype", ")", "\n", "number_of_leading_dimensions", "=", "len", "(", "mean", ".", "shape", ")", "-", "1", "\n", "shape", "=", "(", "1", ",", ")", "*", "number_of_leading_dimensions", "+", "tuple", "(", "coordinate_grid", ".", "shape", ")", "\n", "repeats", "=", "tuple", "(", "mean", ".", "shape", "[", ":", "number_of_leading_dimensions", "]", ")", "+", "(", "1", ",", "1", ",", "1", ")", "\n", "coordinate_grid", "=", "coordinate_grid", ".", "reshape", "(", "shape", ")", "\n", "coordinate_grid", "=", "coordinate_grid", ".", "tile", "(", "repeats", ")", "\n", "\n", "# Preprocess kp shape", "\n", "shape", "=", "tuple", "(", "mean", ".", "shape", "[", ":", "number_of_leading_dimensions", "]", ")", "+", "(", "1", ",", "1", ",", "2", ")", "\n", "mean", "=", "mean", ".", "reshape", "(", "shape", ")", "\n", "\n", "mean_sub", "=", "(", "coordinate_grid", "-", "mean", ")", "\n", "\n", "out", "=", "paddle", ".", "exp", "(", "-", "0.5", "*", "(", "mean_sub", "**", "2", ")", ".", "sum", "(", "-", "1", ")", "/", "kp_variance", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.make_coordinate_grid": [[67, 84], ["paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.arange.reshape", "paddle.arange.reshape", "paddle.tile.unsqueeze", "paddle.tile.unsqueeze"], "function", ["None"], ["", "def", "make_coordinate_grid", "(", "spatial_size", ",", "type", "=", "'float32'", ")", ":", "\n", "    ", "\"\"\"\n    Create a meshgrid [-1,1] x [-1,1] of given spatial_size.\n    \"\"\"", "\n", "h", ",", "w", "=", "spatial_size", "\n", "x", "=", "paddle", ".", "arange", "(", "w", ",", "dtype", "=", "type", ")", "#.type(type)", "\n", "y", "=", "paddle", ".", "arange", "(", "h", ",", "dtype", "=", "type", ")", "#.type(type)", "\n", "\n", "x", "=", "(", "2", "*", "(", "x", "/", "(", "w", "-", "1", ")", ")", "-", "1", ")", "\n", "y", "=", "(", "2", "*", "(", "y", "/", "(", "h", "-", "1", ")", ")", "-", "1", ")", "\n", "\n", "yy", "=", "paddle", ".", "tile", "(", "y", ".", "reshape", "(", "[", "-", "1", ",", "1", "]", ")", ",", "[", "1", ",", "w", "]", ")", "\n", "xx", "=", "paddle", ".", "tile", "(", "x", ".", "reshape", "(", "[", "1", ",", "-", "1", "]", ")", ",", "[", "h", ",", "1", "]", ")", "\n", "\n", "meshed", "=", "paddle", ".", "concat", "(", "[", "xx", ".", "unsqueeze", "(", "2", ")", ",", "yy", ".", "unsqueeze", "(", "2", ")", "]", ",", "2", ")", "\n", "\n", "return", "meshed", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.SpectralNorm.__init__": [[26, 35], ["ValueError"], "methods", ["None"], ["\n", "if", "len", "(", "image", ".", "shape", ")", "==", "3", "and", "image", ".", "shape", "[", "2", "]", "==", "3", ":", "# color image", "\n", "            ", "color", "=", "True", "\n", "", "elif", "(", "len", "(", "image", ".", "shape", ")", "==", "2", "\n", "or", "len", "(", "image", ".", "shape", ")", "==", "3", "and", "image", ".", "shape", "[", "2", "]", "==", "1", ")", ":", "# greyscale", "\n", "            ", "color", "=", "False", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "\n", "\"Image must have H x W x 3, H x W x 1 or H x W dimensions.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.SpectralNorm.reshape_weight_to_matrix": [[36, 48], ["weight_mat.transpose.transpose.reshape", "weight_mat.transpose.transpose.transpose", "range", "weight_mat.transpose.transpose.dim"], "methods", ["None"], ["", "file", ".", "write", "(", "\"PF\\n\"", "if", "color", "else", "\"Pf\\n\"", ".", "encode", "(", ")", ")", "\n", "file", ".", "write", "(", "\"%d %d\\n\"", ".", "encode", "(", ")", "%", "(", "image", ".", "shape", "[", "1", "]", ",", "image", ".", "shape", "[", "0", "]", ")", ")", "\n", "\n", "endian", "=", "image", ".", "dtype", ".", "byteorder", "\n", "\n", "if", "endian", "==", "\"<\"", "or", "endian", "==", "\"=\"", "and", "sys", ".", "byteorder", "==", "\"little\"", ":", "\n", "            ", "scale", "=", "-", "scale", "\n", "\n", "", "file", ".", "write", "(", "\"%f\\n\"", ".", "encode", "(", ")", "%", "scale", ")", "\n", "\n", "image", ".", "tofile", "(", "file", ")", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.SpectralNorm.compute_weight": [[49, 81], ["getattr", "getattr", "getattr", "utils.SpectralNorm.reshape_weight_to_matrix", "paddle.dot", "paddle.dot", "paddle.dot", "paddle.dot", "paddle.dot", "paddle.dot", "paddle.dot", "paddle.dot", "paddle.dot", "paddle.mv", "paddle.mv", "paddle.mv", "paddle.mv", "paddle.mv", "paddle.mv", "paddle.mv", "paddle.mv", "paddle.mv", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "range", "v.clone.clone.set_value", "u.clone.clone.set_value", "u.clone.clone.clone", "v.clone.clone.clone", "paddle.normalize", "paddle.normalize", "paddle.normalize", "paddle.normalize", "paddle.normalize", "paddle.normalize", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.SpectralNorm.reshape_weight_to_matrix", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.normalize"], ["", "", "def", "read_image", "(", "path", ")", ":", "\n", "    ", "\"\"\"Read image and output RGB image (0-1).\n\n    Args:\n        path (str): path to file\n\n    Returns:\n        array: RGB image (0-1)\n    \"\"\"", "\n", "img", "=", "cv2", ".", "imread", "(", "path", ")", "\n", "if", "img", ".", "ndim", "==", "2", ":", "\n", "        ", "img", "=", "cv2", ".", "cvtColor", "(", "img", ",", "cv2", ".", "COLOR_GRAY2BGR", ")", "\n", "", "img", "=", "cv2", ".", "cvtColor", "(", "img", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "/", "255.0", "\n", "return", "img", "\n", "\n", "\n", "", "def", "write_depth", "(", "path", ",", "depth", ",", "bits", "=", "1", ")", ":", "\n", "    ", "\"\"\"Write depth map to pfm and png file.\n\n    Args:\n        path (str): filepath without extension\n        depth (array): depth\n    \"\"\"", "\n", "write_pfm", "(", "path", "+", "\".pfm\"", ",", "depth", ".", "astype", "(", "np", ".", "float32", ")", ")", "\n", "\n", "depth_min", "=", "depth", ".", "min", "(", ")", "\n", "depth_max", "=", "depth", ".", "max", "(", ")", "\n", "\n", "max_val", "=", "(", "2", "**", "(", "8", "*", "bits", ")", ")", "-", "1", "\n", "\n", "if", "depth_max", "-", "depth_min", ">", "np", ".", "finfo", "(", "\"float\"", ")", ".", "eps", ":", "\n", "        ", "out", "=", "max_val", "*", "(", "depth", "-", "depth_min", ")", "/", "(", "depth_max", "-", "depth_min", ")", "\n", "", "else", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.SpectralNorm.remove": [[82, 91], ["delattr", "delattr", "delattr", "delattr", "layer.add_parameter", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "utils.SpectralNorm.compute_weight", "utils.SpectralNorm.detach"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.SpectralNorm.compute_weight"], ["        ", "out", "=", "np", ".", "zeros", "(", "depth", ".", "shape", ",", "dtype", "=", "depth", ".", "type", ")", "\n", "\n", "", "if", "bits", "==", "1", ":", "\n", "        ", "cv2", ".", "imwrite", "(", "path", "+", "\".png\"", ",", "out", ".", "astype", "(", "\"uint8\"", ")", ")", "\n", "", "elif", "bits", "==", "2", ":", "\n", "        ", "cv2", ".", "imwrite", "(", "path", "+", "\".png\"", ",", "out", ".", "astype", "(", "\"uint16\"", ")", ")", "\n", "", "return", "path", "+", "'.pfm'", ",", "path", "+", "\".png\"", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.SpectralNorm.__call__": [[92, 95], ["setattr", "utils.SpectralNorm.compute_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.SpectralNorm.compute_weight"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.SpectralNorm.apply": [[96, 132], ["layer._forward_pre_hooks.items", "utils.SpectralNorm", "layer.add_parameter", "setattr", "layer.register_buffer", "layer.register_buffer", "layer.register_forward_pre_hook", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "utils.SpectralNorm.reshape_weight_to_matrix", "layer.create_parameter", "init.normal_", "layer.create_parameter", "init.normal_", "paddle.normalize", "paddle.normalize", "paddle.normalize", "paddle.normalize", "paddle.normalize", "paddle.normalize", "isinstance", "RuntimeError"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.SpectralNorm.reshape_weight_to_matrix", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.normal_", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.normal_", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.normalize"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.spectral_norm": [[134, 148], ["utils.SpectralNorm.apply", "isinstance"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.SpectralNorm.apply"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.gpen_model.GPENModel.__init__": [[84, 104], ["base_model.BaseModel.__init__", "generators.builder.build_generator", "generators.builder.build_generator", "gpen_model.GPENModel.nets[].eval", "gpen_model.GPENModel.gan_criterions.append", "gpen_model.GPENModel.gan_criterions.append", "discriminators.builder.build_discriminator", "paddle.nn.SmoothL1Loss", "criterions.IDLoss.id_loss.IDLoss"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.builder.build_discriminator"], ["def", "__init__", "(", "self", ",", "generator", ",", "discriminator", "=", "None", ",", "direction", "=", "'a2b'", ")", ":", "\n", "\n", "        ", "super", "(", "GPENModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "direction", "=", "direction", "\n", "# define networks (both generator and discriminator)", "\n", "self", ".", "nets", "[", "'netG'", "]", "=", "build_generator", "(", "generator", ")", "\n", "self", ".", "nets", "[", "'g_ema'", "]", "=", "build_generator", "(", "generator", ")", "\n", "self", ".", "nets", "[", "'g_ema'", "]", ".", "eval", "(", ")", "\n", "\n", "if", "discriminator", ":", "\n", "            ", "self", ".", "nets", "[", "'netD'", "]", "=", "build_discriminator", "(", "discriminator", ")", "\n", "\n", "", "self", ".", "accum", "=", "0.5", "**", "(", "32", "/", "(", "10", "*", "1000", ")", ")", "\n", "self", ".", "mean_path_length", "=", "0", "\n", "\n", "self", ".", "gan_criterions", "=", "[", "]", "\n", "self", ".", "gan_criterions", ".", "append", "(", "paddle", ".", "nn", ".", "SmoothL1Loss", "(", ")", ")", "\n", "self", ".", "gan_criterions", ".", "append", "(", "IDLoss", "(", ")", ")", "\n", "self", ".", "current_iter", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.gpen_model.GPENModel.setup_input": [[105, 109], ["paddle.to_tensor", "paddle.to_tensor"], "methods", ["None"], ["", "def", "setup_input", "(", "self", ",", "input", ")", ":", "\n", "\n", "        ", "self", ".", "degraded_img", "=", "paddle", ".", "to_tensor", "(", "input", "[", "0", "]", ")", "\n", "self", ".", "real_img", "=", "paddle", ".", "to_tensor", "(", "input", "[", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.gpen_model.GPENModel.forward": [[110, 119], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "test_mode", "=", "False", ",", "regularize", "=", "False", ")", ":", "\n", "        ", "if", "test_mode", ":", "\n", "            ", "self", ".", "fake_img", ",", "_", "=", "self", ".", "nets", "[", "'g_ema'", "]", "(", "self", ".", "degraded_img", ")", "# G(A)", "\n", "", "else", ":", "\n", "            ", "if", "regularize", ":", "\n", "                ", "self", ".", "fake_img", ",", "self", ".", "latents", "=", "self", ".", "nets", "[", "'netG'", "]", "(", "\n", "self", ".", "degraded_img", ",", "return_latents", "=", "True", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "fake_img", ",", "_", "=", "self", ".", "nets", "[", "'netG'", "]", "(", "self", ".", "degraded_img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.gpen_model.GPENModel.backward_D": [[120, 133], ["gpen_model.d_r1_loss", "gpen_model.d_logistic_loss", "gpen_model.GPENModel.loss_D.backward"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.gpen_model.d_r1_loss", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.gpen_model.d_logistic_loss"], ["", "", "", "def", "backward_D", "(", "self", ",", "regularize", "=", "False", ")", ":", "\n", "        ", "\"\"\"Calculate GAN loss for the discriminator\"\"\"", "\n", "if", "regularize", ":", "\n", "            ", "self", ".", "real_img", ".", "stop_gradient", "=", "False", "\n", "real_pred", "=", "self", ".", "nets", "[", "'netD'", "]", "(", "self", ".", "real_img", ")", "\n", "r1_loss", "=", "d_r1_loss", "(", "real_pred", ",", "self", ".", "real_img", ")", "\n", "(", "10", "/", "2", "*", "r1_loss", "*", "16", ")", ".", "backward", "(", ")", "\n", "", "else", ":", "\n", "            ", "fake_pred", "=", "self", ".", "nets", "[", "'netD'", "]", "(", "self", ".", "fake_img", ")", "\n", "real_pred", "=", "self", ".", "nets", "[", "'netD'", "]", "(", "self", ".", "real_img", ")", "\n", "self", ".", "loss_D", "=", "d_logistic_loss", "(", "real_pred", ",", "fake_pred", ")", "\n", "self", ".", "loss_D", ".", "backward", "(", ")", "\n", "self", ".", "losses", "[", "'D_loss'", "]", "=", "self", ".", "loss_D", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.gpen_model.GPENModel.backward_G": [[134, 149], ["gpen_model.g_path_regularize", "weighted_path_loss.backward", "gpen_model.g_nonsaturating_loss", "gpen_model.GPENModel.loss_G.backward"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.styleganv2_model.g_path_regularize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.gpen_model.g_nonsaturating_loss"], ["", "", "def", "backward_G", "(", "self", ",", "regularize", ")", ":", "\n", "        ", "\"\"\"Calculate GAN and L1 loss for the generator\"\"\"", "\n", "\n", "if", "regularize", ":", "\n", "            ", "path_loss", ",", "self", ".", "mean_path_length", ",", "path_lengths", "=", "g_path_regularize", "(", "\n", "self", ".", "fake_img", ",", "self", ".", "latents", ",", "self", ".", "mean_path_length", ")", "\n", "weighted_path_loss", "=", "2", "*", "4", "*", "path_loss", "\n", "weighted_path_loss", ".", "backward", "(", ")", "\n", "", "else", ":", "\n", "            ", "fake_pred", "=", "self", ".", "nets", "[", "'netD'", "]", "(", "self", ".", "fake_img", ")", "\n", "self", ".", "loss_G", "=", "g_nonsaturating_loss", "(", "fake_pred", ",", "self", ".", "gan_criterions", ",", "\n", "self", ".", "fake_img", ",", "self", ".", "real_img", ",", "\n", "self", ".", "degraded_img", ")", "\n", "self", ".", "loss_G", ".", "backward", "(", ")", "\n", "self", ".", "losses", "[", "'G_loss'", "]", "=", "self", ".", "loss_G", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.gpen_model.GPENModel.train_iter": [[150, 182], ["gpen_model.GPENModel.set_requires_grad", "gpen_model.GPENModel.set_requires_grad", "gpen_model.GPENModel.forward", "optimizers[].clear_grad", "gpen_model.GPENModel.backward_D", "optimizers[].step", "gpen_model.GPENModel.set_requires_grad", "gpen_model.GPENModel.set_requires_grad", "gpen_model.GPENModel.forward", "optimizers[].clear_grad", "gpen_model.GPENModel.backward_G", "optimizers[].step", "gpen_model.GPENModel.accumulate", "optimizers[].clear_grad", "gpen_model.GPENModel.backward_D", "optimizers[].step", "gpen_model.GPENModel.forward", "optimizers[].clear_grad", "gpen_model.GPENModel.backward_G", "optimizers[].step"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.vgg16.forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.backward_D", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.vgg16.forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.backward_G", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid.FID.accumulate", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.backward_D", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.vgg16.forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.backward_G"], ["", "", "def", "train_iter", "(", "self", ",", "optimizers", "=", "None", ")", ":", "\n", "\n", "        ", "self", ".", "current_iter", "+=", "1", "\n", "# update D", "\n", "self", ".", "set_requires_grad", "(", "self", ".", "nets", "[", "'netD'", "]", ",", "True", ")", "\n", "self", ".", "set_requires_grad", "(", "self", ".", "nets", "[", "'netG'", "]", ",", "False", ")", "\n", "self", ".", "forward", "(", "test_mode", "=", "False", ")", "\n", "optimizers", "[", "'optimD'", "]", ".", "clear_grad", "(", ")", "\n", "self", ".", "backward_D", "(", "regularize", "=", "False", ")", "\n", "optimizers", "[", "'optimD'", "]", ".", "step", "(", ")", "\n", "\n", "d_regularize", "=", "self", ".", "current_iter", "%", "24", "==", "0", "\n", "if", "d_regularize", ":", "\n", "            ", "optimizers", "[", "'optimD'", "]", ".", "clear_grad", "(", ")", "\n", "self", ".", "backward_D", "(", "regularize", "=", "True", ")", "\n", "optimizers", "[", "'optimD'", "]", ".", "step", "(", ")", "\n", "# update G", "\n", "", "self", ".", "set_requires_grad", "(", "self", ".", "nets", "[", "'netD'", "]", ",", "False", ")", "\n", "self", ".", "set_requires_grad", "(", "self", ".", "nets", "[", "'netG'", "]", ",", "True", ")", "\n", "self", ".", "forward", "(", "test_mode", "=", "False", ")", "\n", "optimizers", "[", "'optimG'", "]", ".", "clear_grad", "(", ")", "\n", "self", ".", "backward_G", "(", "regularize", "=", "False", ")", "\n", "optimizers", "[", "'optimG'", "]", ".", "step", "(", ")", "\n", "\n", "g_regularize", "=", "self", ".", "current_iter", "%", "4", "==", "0", "\n", "if", "g_regularize", ":", "\n", "            ", "self", ".", "forward", "(", "test_mode", "=", "False", ",", "regularize", "=", "True", ")", "\n", "optimizers", "[", "'optimG'", "]", ".", "clear_grad", "(", ")", "\n", "self", ".", "backward_G", "(", "regularize", "=", "True", ")", "\n", "optimizers", "[", "'optimG'", "]", ".", "step", "(", ")", "\n", "\n", "", "self", ".", "accumulate", "(", "self", ".", "nets", "[", "'g_ema'", "]", ",", "self", ".", "nets", "[", "'netG'", "]", ",", "self", ".", "accum", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.gpen_model.GPENModel.test_iter": [[183, 191], ["gpen_model.GPENModel.nets[].eval", "gpen_model.GPENModel.forward", "paddle.no_grad", "metrics.values", "metric.update"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.vgg16.forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update"], ["", "def", "test_iter", "(", "self", ",", "metrics", "=", "None", ")", ":", "\n", "        ", "self", ".", "nets", "[", "'g_ema'", "]", ".", "eval", "(", ")", "\n", "self", ".", "forward", "(", "test_mode", "=", "True", ")", "\n", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "            ", "if", "metrics", "is", "not", "None", ":", "\n", "                ", "for", "metric", "in", "metrics", ".", "values", "(", ")", ":", "\n", "                    ", "metric", ".", "update", "(", "self", ".", "fake_img", ",", "self", ".", "real_img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.gpen_model.GPENModel.accumulate": [[192, 200], ["dict", "dict", "dict.keys", "model1.load_dict", "model1.state_dict", "model2.state_dict"], "methods", ["None"], ["", "", "", "", "def", "accumulate", "(", "self", ",", "model1", ",", "model2", ",", "decay", "=", "0.999", ")", ":", "\n", "        ", "par1", "=", "dict", "(", "model1", ".", "state_dict", "(", ")", ")", "\n", "par2", "=", "dict", "(", "model2", ".", "state_dict", "(", ")", ")", "\n", "\n", "for", "k", "in", "par1", ".", "keys", "(", ")", ":", "\n", "            ", "par1", "[", "k", "]", "=", "par1", "[", "k", "]", "*", "decay", "+", "par2", "[", "k", "]", "*", "(", "1", "-", "decay", ")", "\n", "\n", "", "model1", ".", "load_dict", "(", "par1", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.gpen_model.d_logistic_loss": [[30, 35], ["paddle.nn.functional.softplus", "paddle.nn.functional.softplus", "F.softplus.mean", "F.softplus.mean"], "function", ["None"], ["def", "d_logistic_loss", "(", "real_pred", ",", "fake_pred", ")", ":", "\n", "    ", "real_loss", "=", "F", ".", "softplus", "(", "-", "real_pred", ")", "\n", "fake_loss", "=", "F", ".", "softplus", "(", "fake_pred", ")", "\n", "\n", "return", "real_loss", ".", "mean", "(", ")", "+", "fake_loss", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.gpen_model.d_r1_loss": [[37, 45], ["paddle.autograd.grad", "grad_real.pow().reshape().sum().mean", "real_pred.sum", "grad_real.pow().reshape().sum", "grad_real.pow().reshape", "grad_real.pow"], "function", ["None"], ["", "def", "d_r1_loss", "(", "real_pred", ",", "real_img", ")", ":", "\n", "    ", "grad_real", ",", "=", "autograd", ".", "grad", "(", "outputs", "=", "real_pred", ".", "sum", "(", ")", ",", "\n", "inputs", "=", "real_img", ",", "\n", "create_graph", "=", "True", ")", "\n", "grad_penalty", "=", "grad_real", ".", "pow", "(", "2", ")", ".", "reshape", "(", "[", "grad_real", ".", "shape", "[", "0", "]", ",", "\n", "-", "1", "]", ")", ".", "sum", "(", "1", ")", ".", "mean", "(", ")", "\n", "\n", "return", "grad_penalty", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.gpen_model.g_nonsaturating_loss": [[47, 60], ["paddle.nn.functional.softplus().mean", "smooth_l1_loss", "id_loss", "paddle.nn.functional.softplus"], "function", ["None"], ["", "def", "g_nonsaturating_loss", "(", "fake_pred", ",", "\n", "loss_funcs", "=", "None", ",", "\n", "fake_img", "=", "None", ",", "\n", "real_img", "=", "None", ",", "\n", "input_img", "=", "None", ")", ":", "\n", "    ", "smooth_l1_loss", ",", "id_loss", "=", "loss_funcs", "\n", "\n", "loss", "=", "F", ".", "softplus", "(", "-", "fake_pred", ")", ".", "mean", "(", ")", "\n", "loss_l1", "=", "smooth_l1_loss", "(", "fake_img", ",", "real_img", ")", "\n", "loss_id", "=", "id_loss", "(", "fake_img", ",", "real_img", ",", "input_img", ")", "\n", "loss", "+=", "1.0", "*", "loss_l1", "+", "1.0", "*", "loss_id", "\n", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.gpen_model.g_path_regularize": [[62, 76], ["paddle.autograd.grad", "paddle.sqrt", "paddle.randn", "math.sqrt", "grad.pow().sum().mean", "path_mean.detach", "grad.pow().sum", "paddle.sqrt.mean", "grad.pow"], "function", ["None"], ["", "def", "g_path_regularize", "(", "fake_img", ",", "latents", ",", "mean_path_length", ",", "decay", "=", "0.01", ")", ":", "\n", "    ", "noise", "=", "paddle", ".", "randn", "(", "fake_img", ".", "shape", ")", "/", "math", ".", "sqrt", "(", "\n", "fake_img", ".", "shape", "[", "2", "]", "*", "fake_img", ".", "shape", "[", "3", "]", ")", "\n", "grad", ",", "=", "autograd", ".", "grad", "(", "outputs", "=", "(", "fake_img", "*", "noise", ")", ".", "sum", "(", ")", ",", "\n", "inputs", "=", "latents", ",", "\n", "create_graph", "=", "True", ")", "\n", "path_lengths", "=", "paddle", ".", "sqrt", "(", "grad", ".", "pow", "(", "2", ")", ".", "sum", "(", "2", ")", ".", "mean", "(", "1", ")", ")", "\n", "\n", "path_mean", "=", "mean_path_length", "+", "decay", "*", "(", "path_lengths", ".", "mean", "(", ")", "-", "\n", "mean_path_length", ")", "\n", "\n", "path_penalty", "=", "(", "path_lengths", "-", "path_mean", ")", ".", "pow", "(", "2", ")", ".", "mean", "(", ")", "\n", "\n", "return", "path_penalty", ",", "path_mean", ".", "detach", "(", ")", ",", "path_lengths", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.animeganv2_model.AnimeGANV2Model.__init__": [[32, 78], ["base_model.BaseModel.__init__", "generators.builder.build_generator", "modules.init.init_weights", "discriminators.builder.build_discriminator", "modules.init.init_weights", "modules.caffevgg.CaffeVGG19", "criterions.build_criterion", "paddle.L1Loss", "paddle.L1Loss", "paddle.SmoothL1Loss", "paddle.SmoothL1Loss", "utils.filesystem.load", "animeganv2_model.AnimeGANV2Model.nets[].set_state_dict", "print"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.PixelShufflePack.init_weights", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.builder.build_discriminator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.PixelShufflePack.init_weights", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["def", "__init__", "(", "self", ",", "\n", "generator", ",", "\n", "discriminator", "=", "None", ",", "\n", "gan_criterion", "=", "None", ",", "\n", "pretrain_ckpt", "=", "None", ",", "\n", "g_adv_weight", "=", "300.", ",", "\n", "d_adv_weight", "=", "300.", ",", "\n", "con_weight", "=", "1.5", ",", "\n", "sty_weight", "=", "2.5", ",", "\n", "color_weight", "=", "10.", ",", "\n", "tv_weight", "=", "1.", ")", ":", "\n", "        ", "\"\"\"Initialize the AnimeGANV2 class.\n\n        Args:\n            generator (dict): config of generator.\n            discriminator (dict): config of discriminator.\n            gan_criterion (dict): config of gan criterion.\n        \"\"\"", "\n", "super", "(", "AnimeGANV2Model", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "g_adv_weight", "=", "g_adv_weight", "\n", "self", ".", "d_adv_weight", "=", "d_adv_weight", "\n", "self", ".", "con_weight", "=", "con_weight", "\n", "self", ".", "sty_weight", "=", "sty_weight", "\n", "self", ".", "color_weight", "=", "color_weight", "\n", "self", ".", "tv_weight", "=", "tv_weight", "\n", "# define networks (both generator and discriminator)", "\n", "self", ".", "nets", "[", "'netG'", "]", "=", "build_generator", "(", "generator", ")", "\n", "init_weights", "(", "self", ".", "nets", "[", "'netG'", "]", ")", "\n", "\n", "# define a discriminator", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "self", ".", "nets", "[", "'netD'", "]", "=", "build_discriminator", "(", "discriminator", ")", "\n", "init_weights", "(", "self", ".", "nets", "[", "'netD'", "]", ")", "\n", "\n", "self", ".", "pretrained", "=", "CaffeVGG19", "(", ")", "\n", "\n", "self", ".", "losses", "=", "{", "}", "\n", "# define loss functions", "\n", "self", ".", "criterionGAN", "=", "build_criterion", "(", "gan_criterion", ")", "\n", "self", ".", "criterionL1", "=", "nn", ".", "L1Loss", "(", ")", "\n", "self", ".", "criterionHub", "=", "nn", ".", "SmoothL1Loss", "(", ")", "\n", "\n", "if", "pretrain_ckpt", ":", "\n", "                ", "state_dicts", "=", "load", "(", "pretrain_ckpt", ")", "\n", "self", ".", "nets", "[", "'netG'", "]", ".", "set_state_dict", "(", "state_dicts", "[", "'netG'", "]", ")", "\n", "print", "(", "'Load pretrained generator from'", ",", "pretrain_ckpt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.animeganv2_model.AnimeGANV2Model.setup_input": [[79, 91], ["paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor"], "methods", ["None"], ["", "", "", "def", "setup_input", "(", "self", ",", "input", ")", ":", "\n", "        ", "\"\"\"Unpack input data from the dataloader and perform necessary pre-processing steps.\n\n        \"\"\"", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "self", ".", "real", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'real'", "]", ")", "\n", "self", ".", "anime", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'anime'", "]", ")", "\n", "self", ".", "anime_gray", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'anime_gray'", "]", ")", "\n", "self", ".", "smooth_gray", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'smooth_gray'", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "real", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'A'", "]", ")", "\n", "self", ".", "image_paths", "=", "input", "[", "'A_path'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.animeganv2_model.AnimeGANV2Model.forward": [[92, 99], ["None"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ")", ":", "\n", "        ", "\"\"\"Run forward pass; called by both functions <optimize_parameters> and <test>.\"\"\"", "\n", "self", ".", "fake", "=", "self", ".", "nets", "[", "'netG'", "]", "(", "self", ".", "real", ")", "\n", "\n", "# put items to visual dict", "\n", "self", ".", "visual_items", "[", "'real'", "]", "=", "self", ".", "real", "\n", "self", ".", "visual_items", "[", "'fake'", "]", "=", "self", ".", "fake", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.animeganv2_model.AnimeGANV2Model.test": [[100, 106], ["None"], "methods", ["None"], ["", "def", "test", "(", "self", ")", ":", "\n", "        ", "self", ".", "fake", "=", "self", ".", "nets", "[", "'netG'", "]", "(", "self", ".", "real", ")", "\n", "\n", "# put items to visual dict", "\n", "self", ".", "visual_items", "[", "'real'", "]", "=", "self", ".", "real", "\n", "self", ".", "visual_items", "[", "'fake'", "]", "=", "self", ".", "fake", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.animeganv2_model.AnimeGANV2Model.gram": [[107, 113], ["x.reshape", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "gram", "(", "x", ")", ":", "\n", "        ", "b", ",", "c", ",", "h", ",", "w", "=", "x", ".", "shape", "\n", "x_tmp", "=", "x", ".", "reshape", "(", "(", "b", ",", "c", ",", "(", "h", "*", "w", ")", ")", ")", "\n", "gram", "=", "paddle", ".", "matmul", "(", "x_tmp", ",", "x_tmp", ",", "transpose_y", "=", "True", ")", "\n", "return", "gram", "/", "(", "c", "*", "h", "*", "w", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.animeganv2_model.AnimeGANV2Model.style_loss": [[114, 116], ["animeganv2_model.AnimeGANV2Model.criterionL1", "animeganv2_model.AnimeGANV2Model.gram", "animeganv2_model.AnimeGANV2Model.gram"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.animeganv2_model.AnimeGANV2Model.gram", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.animeganv2_model.AnimeGANV2Model.gram"], ["", "def", "style_loss", "(", "self", ",", "style", ",", "fake", ")", ":", "\n", "        ", "return", "self", ".", "criterionL1", "(", "self", ".", "gram", "(", "style", ")", ",", "self", ".", "gram", "(", "fake", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.animeganv2_model.AnimeGANV2Model.con_sty_loss": [[117, 126], ["animeganv2_model.AnimeGANV2Model.pretrained", "animeganv2_model.AnimeGANV2Model.pretrained", "animeganv2_model.AnimeGANV2Model.pretrained", "animeganv2_model.AnimeGANV2Model.criterionL1", "animeganv2_model.AnimeGANV2Model.style_loss"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.animeganv2_model.AnimeGANV2Model.style_loss"], ["", "def", "con_sty_loss", "(", "self", ",", "real", ",", "anime", ",", "fake", ")", ":", "\n", "        ", "real_feature_map", "=", "self", ".", "pretrained", "(", "real", ")", "\n", "fake_feature_map", "=", "self", ".", "pretrained", "(", "fake", ")", "\n", "anime_feature_map", "=", "self", ".", "pretrained", "(", "anime", ")", "\n", "\n", "c_loss", "=", "self", ".", "criterionL1", "(", "real_feature_map", ",", "fake_feature_map", ")", "\n", "s_loss", "=", "self", ".", "style_loss", "(", "anime_feature_map", ",", "fake_feature_map", ")", "\n", "\n", "return", "c_loss", ",", "s_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.animeganv2_model.AnimeGANV2Model.rgb2yuv": [[127, 136], ["paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "rgb2yuv", "(", "rgb", ")", ":", "\n", "        ", "kernel", "=", "paddle", ".", "to_tensor", "(", "[", "[", "0.299", ",", "-", "0.14714119", ",", "0.61497538", "]", ",", "\n", "[", "0.587", ",", "-", "0.28886916", ",", "-", "0.51496512", "]", ",", "\n", "[", "0.114", ",", "0.43601035", ",", "-", "0.10001026", "]", "]", ",", "\n", "dtype", "=", "'float32'", ")", "\n", "rgb", "=", "paddle", ".", "transpose", "(", "rgb", ",", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", "\n", "yuv", "=", "paddle", ".", "matmul", "(", "rgb", ",", "kernel", ")", "\n", "return", "yuv", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.animeganv2_model.AnimeGANV2Model.denormalize": [[137, 140], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "denormalize", "(", "image", ")", ":", "\n", "        ", "return", "image", "*", "0.5", "+", "0.5", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.animeganv2_model.AnimeGANV2Model.color_loss": [[141, 147], ["animeganv2_model.AnimeGANV2Model.rgb2yuv", "animeganv2_model.AnimeGANV2Model.rgb2yuv", "animeganv2_model.AnimeGANV2Model.denormalize", "animeganv2_model.AnimeGANV2Model.denormalize", "animeganv2_model.AnimeGANV2Model.criterionHub", "animeganv2_model.AnimeGANV2Model.criterionL1", "animeganv2_model.AnimeGANV2Model.criterionHub"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.animeganv2_model.AnimeGANV2Model.rgb2yuv", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.animeganv2_model.AnimeGANV2Model.rgb2yuv", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.animeganv2_model.AnimeGANV2Model.denormalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.animeganv2_model.AnimeGANV2Model.denormalize"], ["", "def", "color_loss", "(", "self", ",", "con", ",", "fake", ")", ":", "\n", "        ", "con", "=", "self", ".", "rgb2yuv", "(", "self", ".", "denormalize", "(", "con", ")", ")", "\n", "fake", "=", "self", ".", "rgb2yuv", "(", "self", ".", "denormalize", "(", "fake", ")", ")", "\n", "return", "(", "self", ".", "criterionL1", "(", "con", "[", ":", ",", ":", ",", ":", ",", "0", "]", ",", "fake", "[", ":", ",", ":", ",", ":", ",", "0", "]", ")", "+", "\n", "self", ".", "criterionHub", "(", "con", "[", ":", ",", ":", ",", ":", ",", "1", "]", ",", "fake", "[", ":", ",", ":", ",", ":", ",", "1", "]", ")", "+", "\n", "self", ".", "criterionHub", "(", "con", "[", ":", ",", ":", ",", ":", ",", "2", "]", ",", "fake", "[", ":", ",", ":", ",", ":", ",", "2", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.animeganv2_model.AnimeGANV2Model.variation_loss": [[148, 153], ["paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "variation_loss", "(", "image", ",", "ksize", "=", "1", ")", ":", "\n", "        ", "dh", "=", "image", "[", ":", ",", ":", ",", ":", "-", "ksize", ",", ":", "]", "-", "image", "[", ":", ",", ":", ",", "ksize", ":", ",", ":", "]", "\n", "dw", "=", "image", "[", ":", ",", ":", ",", ":", ",", ":", "-", "ksize", "]", "-", "image", "[", ":", ",", ":", ",", ":", ",", "ksize", ":", "]", "\n", "return", "(", "paddle", ".", "mean", "(", "paddle", ".", "abs", "(", "dh", ")", ")", "+", "paddle", ".", "mean", "(", "paddle", ".", "abs", "(", "dw", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.animeganv2_model.AnimeGANV2Model.backward_D": [[154, 181], ["animeganv2_model.AnimeGANV2Model.loss_D.backward", "animeganv2_model.AnimeGANV2Model.fake.detach", "animeganv2_model.AnimeGANV2Model.criterionGAN", "animeganv2_model.AnimeGANV2Model.criterionGAN", "animeganv2_model.AnimeGANV2Model.criterionGAN", "animeganv2_model.AnimeGANV2Model.criterionGAN"], "methods", ["None"], ["", "def", "backward_D", "(", "self", ")", ":", "\n", "        ", "\"\"\"Calculate GAN loss for the discriminator\"\"\"", "\n", "# Fake; stop backprop to the generator by detaching fake_B", "\n", "# use conditional GANs; we need to feed both input and output to the discriminator", "\n", "real_logit", "=", "self", ".", "nets", "[", "'netD'", "]", "(", "self", ".", "anime", ")", "\n", "gray_logit", "=", "self", ".", "nets", "[", "'netD'", "]", "(", "self", ".", "anime_gray", ")", "\n", "fake_logit", "=", "self", ".", "nets", "[", "'netD'", "]", "(", "self", ".", "fake", ".", "detach", "(", ")", ")", "\n", "smooth_logit", "=", "self", ".", "nets", "[", "'netD'", "]", "(", "self", ".", "smooth_gray", ")", "\n", "\n", "d_real_loss", "=", "(", "self", ".", "d_adv_weight", "*", "1.2", "*", "\n", "self", ".", "criterionGAN", "(", "real_logit", ",", "True", ")", ")", "\n", "d_gray_loss", "=", "(", "self", ".", "d_adv_weight", "*", "1.2", "*", "\n", "self", ".", "criterionGAN", "(", "gray_logit", ",", "False", ")", ")", "\n", "d_fake_loss", "=", "(", "self", ".", "d_adv_weight", "*", "1.2", "*", "\n", "self", ".", "criterionGAN", "(", "fake_logit", ",", "False", ")", ")", "\n", "d_blur_loss", "=", "(", "self", ".", "d_adv_weight", "*", "0.8", "*", "\n", "self", ".", "criterionGAN", "(", "smooth_logit", ",", "False", ")", ")", "\n", "\n", "self", ".", "loss_D", "=", "d_real_loss", "+", "d_gray_loss", "+", "d_fake_loss", "+", "d_blur_loss", "\n", "\n", "self", ".", "loss_D", ".", "backward", "(", ")", "\n", "\n", "self", ".", "losses", "[", "'d_loss'", "]", "=", "self", ".", "loss_D", "\n", "self", ".", "losses", "[", "'d_real_loss'", "]", "=", "d_real_loss", "\n", "self", ".", "losses", "[", "'d_fake_loss'", "]", "=", "d_fake_loss", "\n", "self", ".", "losses", "[", "'d_gray_loss'", "]", "=", "d_gray_loss", "\n", "self", ".", "losses", "[", "'d_blur_loss'", "]", "=", "d_blur_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.animeganv2_model.AnimeGANV2Model.backward_G": [[182, 201], ["animeganv2_model.AnimeGANV2Model.con_sty_loss", "animeganv2_model.AnimeGANV2Model.loss_G.backward", "animeganv2_model.AnimeGANV2Model.variation_loss", "animeganv2_model.AnimeGANV2Model.color_loss", "animeganv2_model.AnimeGANV2Model.criterionGAN"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.animeganv2_model.AnimeGANV2Model.con_sty_loss", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.animeganv2_model.AnimeGANV2Model.variation_loss", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.animeganv2_model.AnimeGANV2Model.color_loss"], ["", "def", "backward_G", "(", "self", ")", ":", "\n", "        ", "fake_logit", "=", "self", ".", "nets", "[", "'netD'", "]", "(", "self", ".", "fake", ")", "\n", "c_loss", ",", "s_loss", "=", "self", ".", "con_sty_loss", "(", "self", ".", "real", ",", "self", ".", "anime_gray", ",", "\n", "self", ".", "fake", ")", "\n", "c_loss", "=", "self", ".", "con_weight", "*", "c_loss", "\n", "s_loss", "=", "self", ".", "sty_weight", "*", "s_loss", "\n", "tv_loss", "=", "self", ".", "tv_weight", "*", "self", ".", "variation_loss", "(", "self", ".", "fake", ")", "\n", "col_loss", "=", "self", ".", "color_weight", "*", "self", ".", "color_loss", "(", "self", ".", "real", ",", "self", ".", "fake", ")", "\n", "g_loss", "=", "(", "self", ".", "g_adv_weight", "*", "self", ".", "criterionGAN", "(", "fake_logit", ",", "True", ")", ")", "\n", "\n", "self", ".", "loss_G", "=", "c_loss", "+", "s_loss", "+", "col_loss", "+", "g_loss", "+", "tv_loss", "\n", "\n", "self", ".", "loss_G", ".", "backward", "(", ")", "\n", "\n", "self", ".", "losses", "[", "'g_loss'", "]", "=", "self", ".", "loss_G", "\n", "self", ".", "losses", "[", "'c_loss'", "]", "=", "c_loss", "\n", "self", ".", "losses", "[", "'s_loss'", "]", "=", "s_loss", "\n", "self", ".", "losses", "[", "'col_loss'", "]", "=", "col_loss", "\n", "self", ".", "losses", "[", "'tv_loss'", "]", "=", "tv_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.animeganv2_model.AnimeGANV2Model.train_iter": [[202, 215], ["animeganv2_model.AnimeGANV2Model.forward", "animeganv2_model.AnimeGANV2Model.optimizers[].clear_grad", "animeganv2_model.AnimeGANV2Model.backward_D", "animeganv2_model.AnimeGANV2Model.optimizers[].step", "animeganv2_model.AnimeGANV2Model.optimizers[].clear_grad", "animeganv2_model.AnimeGANV2Model.backward_G", "animeganv2_model.AnimeGANV2Model.optimizers[].step"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.vgg16.forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.backward_D", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.backward_G"], ["", "def", "train_iter", "(", "self", ",", "optimizers", "=", "None", ")", ":", "\n", "# compute fake images: G(A)", "\n", "        ", "self", ".", "forward", "(", ")", "\n", "\n", "# update D", "\n", "self", ".", "optimizers", "[", "'optimizer_D'", "]", ".", "clear_grad", "(", ")", "\n", "self", ".", "backward_D", "(", ")", "\n", "self", ".", "optimizers", "[", "'optimizer_D'", "]", ".", "step", "(", ")", "\n", "\n", "# update G", "\n", "self", ".", "optimizers", "[", "'optimizer_G'", "]", ".", "clear_grad", "(", ")", "\n", "self", ".", "backward_G", "(", ")", "\n", "self", ".", "optimizers", "[", "'optimizer_G'", "]", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.animeganv2_model.AnimeGANV2PreTrainModel.backward_G": [[219, 226], ["animeganv2_model.AnimeGANV2PreTrainModel.pretrained", "animeganv2_model.AnimeGANV2PreTrainModel.pretrained", "animeganv2_model.AnimeGANV2PreTrainModel.criterionL1", "loss.backward"], "methods", ["None"], ["    ", "def", "backward_G", "(", "self", ")", ":", "\n", "        ", "real_feature_map", "=", "self", ".", "pretrained", "(", "self", ".", "real", ")", "\n", "fake_feature_map", "=", "self", ".", "pretrained", "(", "self", ".", "fake", ")", "\n", "init_c_loss", "=", "self", ".", "criterionL1", "(", "real_feature_map", ",", "fake_feature_map", ")", "\n", "loss", "=", "self", ".", "con_weight", "*", "init_c_loss", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "losses", "[", "'init_c_loss'", "]", "=", "init_c_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.animeganv2_model.AnimeGANV2PreTrainModel.train_iter": [[227, 233], ["animeganv2_model.AnimeGANV2PreTrainModel.forward", "animeganv2_model.AnimeGANV2PreTrainModel.optimizers[].clear_grad", "animeganv2_model.AnimeGANV2PreTrainModel.backward_G", "animeganv2_model.AnimeGANV2PreTrainModel.optimizers[].step"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.vgg16.forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.backward_G"], ["", "def", "train_iter", "(", "self", ",", "optimizers", "=", "None", ")", ":", "\n", "        ", "self", ".", "forward", "(", ")", "\n", "# update G", "\n", "self", ".", "optimizers", "[", "'optimizer_G'", "]", ".", "clear_grad", "(", ")", "\n", "self", ".", "backward_G", "(", ")", "\n", "self", ".", "optimizers", "[", "'optimizer_G'", "]", ".", "step", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.rcan_model.RCANModel.__init__": [[31, 46], ["base_model.BaseModel.__init__", "generators.builder.build_generator", "criterions.builder.build_criterion", "rcan_model.init_sr_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.sr_model.init_sr_weight"], ["def", "__init__", "(", "self", ",", "generator", ",", "pixel_criterion", "=", "None", ",", "use_init_weight", "=", "False", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            generator (dict): config of generator.\n            pixel_criterion (dict): config of pixel criterion.\n        \"\"\"", "\n", "super", "(", "RCANModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "nets", "[", "'generator'", "]", "=", "build_generator", "(", "generator", ")", "\n", "self", ".", "error_last", "=", "1e8", "\n", "self", ".", "batch", "=", "0", "\n", "if", "pixel_criterion", ":", "\n", "            ", "self", ".", "pixel_criterion", "=", "build_criterion", "(", "pixel_criterion", ")", "\n", "", "if", "use_init_weight", ":", "\n", "            ", "init_sr_weight", "(", "self", ".", "nets", "[", "'generator'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.rcan_model.RCANModel.setup_input": [[47, 54], ["paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor"], "methods", ["None"], ["", "", "def", "setup_input", "(", "self", ",", "input", ")", ":", "\n", "        ", "self", ".", "lq", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'lq'", "]", ")", "\n", "self", ".", "visual_items", "[", "'lq'", "]", "=", "self", ".", "lq", "\n", "if", "'gt'", "in", "input", ":", "\n", "            ", "self", ".", "gt", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'gt'", "]", ")", "\n", "self", ".", "visual_items", "[", "'gt'", "]", "=", "self", ".", "gt", "\n", "", "self", ".", "image_paths", "=", "input", "[", "'lq_path'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.rcan_model.RCANModel.forward": [[55, 57], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.rcan_model.RCANModel.train_iter": [[58, 80], ["optims[].clear_grad", "rcan_model.RCANModel.pixel_criterion", "rcan_model.RCANModel.item", "rcan_model.RCANModel.backward", "optims[].step", "print", "print", "rcan_model.RCANModel.item", "rcan_model.RCANModel.item"], "methods", ["None"], ["", "def", "train_iter", "(", "self", ",", "optims", "=", "None", ")", ":", "\n", "        ", "optims", "[", "'optim'", "]", ".", "clear_grad", "(", ")", "\n", "\n", "self", ".", "output", "=", "self", ".", "nets", "[", "'generator'", "]", "(", "self", ".", "lq", ")", "\n", "self", ".", "visual_items", "[", "'output'", "]", "=", "self", ".", "output", "\n", "# pixel loss", "\n", "loss_pixel", "=", "self", ".", "pixel_criterion", "(", "self", ".", "output", ",", "self", ".", "gt", ")", "\n", "self", ".", "losses", "[", "'loss_pixel'", "]", "=", "loss_pixel", "\n", "\n", "skip_threshold", "=", "1e6", "\n", "\n", "if", "loss_pixel", ".", "item", "(", ")", "<", "skip_threshold", "*", "self", ".", "error_last", ":", "\n", "            ", "loss_pixel", ".", "backward", "(", ")", "\n", "optims", "[", "'optim'", "]", ".", "step", "(", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'Skip this batch {}! (Loss: {})'", ".", "format", "(", "\n", "self", ".", "batch", "+", "1", ",", "loss_pixel", ".", "item", "(", ")", ")", ")", "\n", "", "self", ".", "batch", "+=", "1", "\n", "\n", "if", "self", ".", "batch", "%", "1000", "==", "0", ":", "\n", "            ", "self", ".", "error_last", "=", "loss_pixel", ".", "item", "(", ")", "/", "1000", "\n", "print", "(", "\"update error_last\uff1a{}\"", ".", "format", "(", "self", ".", "error_last", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.rcan_model.RCANModel.test_iter": [[81, 97], ["rcan_model.RCANModel.nets[].eval", "rcan_model.RCANModel.nets[].train", "zip", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "out_img.append", "gt_img.append", "metrics.values", "utils.visual.tensor2img", "utils.visual.tensor2img", "metric.update"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.tensor2img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.tensor2img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update"], ["", "", "def", "test_iter", "(", "self", ",", "metrics", "=", "None", ")", ":", "\n", "        ", "self", ".", "nets", "[", "'generator'", "]", ".", "eval", "(", ")", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "            ", "self", ".", "output", "=", "self", ".", "nets", "[", "'generator'", "]", "(", "self", ".", "lq", ")", "\n", "self", ".", "visual_items", "[", "'output'", "]", "=", "self", ".", "output", "\n", "", "self", ".", "nets", "[", "'generator'", "]", ".", "train", "(", ")", "\n", "\n", "out_img", "=", "[", "]", "\n", "gt_img", "=", "[", "]", "\n", "for", "out_tensor", ",", "gt_tensor", "in", "zip", "(", "self", ".", "output", ",", "self", ".", "gt", ")", ":", "\n", "            ", "out_img", ".", "append", "(", "tensor2img", "(", "out_tensor", ",", "(", "0.", ",", "255.", ")", ")", ")", "\n", "gt_img", ".", "append", "(", "tensor2img", "(", "gt_tensor", ",", "(", "0.", ",", "255.", ")", ")", ")", "\n", "\n", "", "if", "metrics", "is", "not", "None", ":", "\n", "            ", "for", "metric", "in", "metrics", ".", "values", "(", ")", ":", "\n", "                ", "metric", ".", "update", "(", "out_img", ",", "gt_img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.rcan_model.init_sr_weight": [[99, 107], ["net.apply", "hasattr", "modules.init.reset_parameters", "isinstance"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.SpectralNorm.apply", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.reset_parameters"], ["", "", "", "", "def", "init_sr_weight", "(", "net", ")", ":", "\n", "\n", "    ", "def", "reset_func", "(", "m", ")", ":", "\n", "        ", "if", "hasattr", "(", "m", ",", "'weight'", ")", "and", "(", "not", "isinstance", "(", "\n", "m", ",", "(", "nn", ".", "BatchNorm", ",", "nn", ".", "BatchNorm2D", ")", ")", ")", ":", "\n", "            ", "reset_parameters", "(", "m", ")", "\n", "\n", "", "", "net", ".", "apply", "(", "reset_func", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.styleganv2_model.StyleGAN2Model.__init__": [[75, 130], ["base_model.BaseModel.__init__", "generators.builder.build_generator", "styleganv2_model.StyleGAN2Model.params.get", "styleganv2_model.StyleGAN2Model.params.get", "styleganv2_model.StyleGAN2Model.params.get", "styleganv2_model.StyleGAN2Model.params.get", "discriminators.builder.build_discriminator", "generators.builder.build_generator", "styleganv2_model.StyleGAN2Model.model_ema", "styleganv2_model.StyleGAN2Model.nets[].train", "styleganv2_model.StyleGAN2Model.nets[].eval", "styleganv2_model.StyleGAN2Model.nets[].train", "criterions.build_criterion"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.builder.build_discriminator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.styleganv2_model.StyleGAN2Model.model_ema", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion"], ["def", "__init__", "(", "self", ",", "\n", "generator", ",", "\n", "discriminator", "=", "None", ",", "\n", "gan_criterion", "=", "None", ",", "\n", "num_style_feat", "=", "512", ",", "\n", "mixing_prob", "=", "0.9", ",", "\n", "r1_reg_weight", "=", "10.", ",", "\n", "path_reg_weight", "=", "2.", ",", "\n", "path_batch_shrink", "=", "2.", ",", "\n", "params", "=", "None", ",", "\n", "max_eval_steps", "=", "50000", ")", ":", "\n", "        ", "\"\"\"Initialize the CycleGAN class.\n\n        Args:\n            generator (dict): config of generator.\n            discriminator (dict): config of discriminator.\n            gan_criterion (dict): config of gan criterion.\n        \"\"\"", "\n", "super", "(", "StyleGAN2Model", ",", "self", ")", ".", "__init__", "(", "params", ")", "\n", "self", ".", "gen_iters", "=", "4", "if", "self", ".", "params", "is", "None", "else", "self", ".", "params", ".", "get", "(", "\n", "'gen_iters'", ",", "4", ")", "\n", "self", ".", "disc_iters", "=", "16", "if", "self", ".", "params", "is", "None", "else", "self", ".", "params", ".", "get", "(", "\n", "'disc_iters'", ",", "16", ")", "\n", "self", ".", "disc_start_iters", "=", "(", "0", "if", "self", ".", "params", "is", "None", "else", "self", ".", "params", ".", "get", "(", "\n", "'disc_start_iters'", ",", "0", ")", ")", "\n", "\n", "self", ".", "visual_iters", "=", "(", "500", "if", "self", ".", "params", "is", "None", "else", "self", ".", "params", ".", "get", "(", "\n", "'visual_iters'", ",", "500", ")", ")", "\n", "\n", "self", ".", "mixing_prob", "=", "mixing_prob", "\n", "self", ".", "num_style_feat", "=", "num_style_feat", "\n", "self", ".", "r1_reg_weight", "=", "r1_reg_weight", "\n", "\n", "self", ".", "path_reg_weight", "=", "path_reg_weight", "\n", "self", ".", "path_batch_shrink", "=", "path_batch_shrink", "\n", "self", ".", "mean_path_length", "=", "0", "\n", "\n", "self", ".", "nets", "[", "'gen'", "]", "=", "build_generator", "(", "generator", ")", "\n", "self", ".", "max_eval_steps", "=", "max_eval_steps", "\n", "\n", "# define discriminators", "\n", "if", "discriminator", ":", "\n", "            ", "self", ".", "nets", "[", "'disc'", "]", "=", "build_discriminator", "(", "discriminator", ")", "\n", "\n", "self", ".", "nets", "[", "'gen_ema'", "]", "=", "build_generator", "(", "generator", ")", "\n", "self", ".", "model_ema", "(", "0", ")", "\n", "\n", "self", ".", "nets", "[", "'gen'", "]", ".", "train", "(", ")", "\n", "self", ".", "nets", "[", "'gen_ema'", "]", ".", "eval", "(", ")", "\n", "self", ".", "nets", "[", "'disc'", "]", ".", "train", "(", ")", "\n", "self", ".", "current_iter", "=", "1", "\n", "\n", "# define loss functions", "\n", "", "if", "gan_criterion", ":", "\n", "            ", "self", ".", "gan_criterion", "=", "build_criterion", "(", "gan_criterion", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.styleganv2_model.StyleGAN2Model.setup_lr_schedulers": [[131, 143], ["dict", "cfg.copy", "solver.build_lr_scheduler", "cfg.copy", "solver.build_lr_scheduler"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.solver.builder.build_lr_scheduler", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.solver.builder.build_lr_scheduler"], ["", "", "def", "setup_lr_schedulers", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "self", ".", "lr_scheduler", "=", "dict", "(", ")", "\n", "gen_cfg", "=", "cfg", ".", "copy", "(", ")", "\n", "net_g_reg_ratio", "=", "self", ".", "gen_iters", "/", "(", "self", ".", "gen_iters", "+", "1", ")", "\n", "gen_cfg", "[", "'learning_rate'", "]", "=", "cfg", "[", "'learning_rate'", "]", "*", "net_g_reg_ratio", "\n", "self", ".", "lr_scheduler", "[", "'gen'", "]", "=", "build_lr_scheduler", "(", "gen_cfg", ")", "\n", "\n", "disc_cfg", "=", "cfg", ".", "copy", "(", ")", "\n", "net_d_reg_ratio", "=", "self", ".", "disc_iters", "/", "(", "self", ".", "disc_iters", "+", "1", ")", "\n", "disc_cfg", "[", "'learning_rate'", "]", "=", "cfg", "[", "'learning_rate'", "]", "*", "net_d_reg_ratio", "\n", "self", ".", "lr_scheduler", "[", "'disc'", "]", "=", "build_lr_scheduler", "(", "disc_cfg", ")", "\n", "return", "self", ".", "lr_scheduler", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.styleganv2_model.StyleGAN2Model.setup_optimizers": [[144, 161], ["cfg.items", "opt_cfg.copy", "opt_cfg.copy.pop", "solver.build_optimizer", "styleganv2_model.StyleGAN2Model.nets[].parameters", "ValueError"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.solver.builder.build_optimizer"], ["", "def", "setup_optimizers", "(", "self", ",", "lr", ",", "cfg", ")", ":", "\n", "        ", "for", "opt_name", ",", "opt_cfg", "in", "cfg", ".", "items", "(", ")", ":", "\n", "            ", "if", "opt_name", "==", "'optimG'", ":", "\n", "                ", "_lr", "=", "lr", "[", "'gen'", "]", "\n", "", "elif", "opt_name", "==", "'optimD'", ":", "\n", "                ", "_lr", "=", "lr", "[", "'disc'", "]", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "\"opt name must be in ['optimG', optimD]\"", ")", "\n", "\n", "", "cfg_", "=", "opt_cfg", ".", "copy", "(", ")", "\n", "net_names", "=", "cfg_", ".", "pop", "(", "'net_names'", ")", "\n", "parameters", "=", "[", "]", "\n", "for", "net_name", "in", "net_names", ":", "\n", "                ", "parameters", "+=", "self", ".", "nets", "[", "net_name", "]", ".", "parameters", "(", ")", "\n", "", "self", ".", "optimizers", "[", "opt_name", "]", "=", "build_optimizer", "(", "cfg_", ",", "_lr", ",", "parameters", ")", "\n", "\n", "", "return", "self", ".", "optimizers", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.styleganv2_model.StyleGAN2Model.get_bare_model": [[162, 168], ["isinstance"], "methods", ["None"], ["", "def", "get_bare_model", "(", "self", ",", "net", ")", ":", "\n", "        ", "\"\"\"Get bare model, especially under wrapping with DataParallel.\n        \"\"\"", "\n", "if", "isinstance", "(", "net", ",", "(", "paddle", ".", "DataParallel", ")", ")", ":", "\n", "            ", "net", "=", "net", ".", "_layers", "\n", "", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.styleganv2_model.StyleGAN2Model.model_ema": [[169, 179], ["styleganv2_model.StyleGAN2Model.get_bare_model", "dict", "styleganv2_model.StyleGAN2Model.get_bare_model", "dict", "dict.keys", "styleganv2_model.StyleGAN2Model.named_parameters", "styleganv2_model.StyleGAN2Model.named_parameters", "net_g_ema_params[].set_value"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.styleganv2_model.StyleGAN2Model.get_bare_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.styleganv2_model.StyleGAN2Model.get_bare_model"], ["", "def", "model_ema", "(", "self", ",", "decay", "=", "0.999", ")", ":", "\n", "        ", "net_g", "=", "self", ".", "get_bare_model", "(", "self", ".", "nets", "[", "'gen'", "]", ")", "\n", "net_g_params", "=", "dict", "(", "net_g", ".", "named_parameters", "(", ")", ")", "\n", "\n", "neg_g_ema", "=", "self", ".", "get_bare_model", "(", "self", ".", "nets", "[", "'gen_ema'", "]", ")", "\n", "net_g_ema_params", "=", "dict", "(", "neg_g_ema", ".", "named_parameters", "(", ")", ")", "\n", "\n", "for", "k", "in", "net_g_ema_params", ".", "keys", "(", ")", ":", "\n", "            ", "net_g_ema_params", "[", "k", "]", ".", "set_value", "(", "net_g_ema_params", "[", "k", "]", "*", "(", "decay", ")", "+", "\n", "(", "net_g_params", "[", "k", "]", "*", "(", "1", "-", "decay", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.styleganv2_model.StyleGAN2Model.setup_input": [[180, 188], ["paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor"], "methods", ["None"], ["", "", "def", "setup_input", "(", "self", ",", "input", ")", ":", "\n", "        ", "\"\"\"Unpack input data from the dataloader and perform necessary pre-processing steps.\n\n        Args:\n            input (dict): include the data itself and its metadata information.\n\n        \"\"\"", "\n", "self", ".", "real_img", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'A'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.styleganv2_model.StyleGAN2Model.forward": [[189, 192], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ")", ":", "\n", "        ", "\"\"\"Run forward pass; called by both functions <optimize_parameters> and <test>.\"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.styleganv2_model.StyleGAN2Model.make_noise": [[193, 201], ["paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "range", "paddle.randn.append", "paddle.randn.append", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "make_noise", "(", "self", ",", "batch", ",", "num_noise", ")", ":", "\n", "        ", "if", "num_noise", "==", "1", ":", "\n", "            ", "noises", "=", "paddle", ".", "randn", "(", "[", "batch", ",", "self", ".", "num_style_feat", "]", ")", "\n", "", "else", ":", "\n", "            ", "noises", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "num_noise", ")", ":", "\n", "                ", "noises", ".", "append", "(", "paddle", ".", "randn", "(", "[", "batch", ",", "self", ".", "num_style_feat", "]", ")", ")", "\n", "", "", "return", "noises", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.styleganv2_model.StyleGAN2Model.mixing_noise": [[202, 207], ["random.random", "styleganv2_model.StyleGAN2Model.make_noise", "styleganv2_model.StyleGAN2Model.make_noise"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_styleganv2.StyleGANv2Generator.make_noise", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_styleganv2.StyleGANv2Generator.make_noise"], ["", "def", "mixing_noise", "(", "self", ",", "batch", ",", "prob", ")", ":", "\n", "        ", "if", "random", ".", "random", "(", ")", "<", "prob", ":", "\n", "            ", "return", "self", ".", "make_noise", "(", "batch", ",", "2", ")", "\n", "", "else", ":", "\n", "            ", "return", "[", "self", ".", "make_noise", "(", "batch", ",", "1", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.styleganv2_model.StyleGAN2Model.train_iter": [[208, 286], ["styleganv2_model.StyleGAN2Model.set_requires_grad", "optimizers[].clear_grad", "styleganv2_model.StyleGAN2Model.mixing_noise", "real_pred.detach().mean", "fake_pred.detach().mean", "l_d_total.backward", "optimizers[].step", "styleganv2_model.StyleGAN2Model.set_requires_grad", "optimizers[].clear_grad", "styleganv2_model.StyleGAN2Model.mixing_noise", "styleganv2_model.StyleGAN2Model.gan_criterion", "l_g_total.backward", "optimizers[].step", "styleganv2_model.StyleGAN2Model.model_ema", "fake_img.detach", "styleganv2_model.StyleGAN2Model.gan_criterion", "styleganv2_model.StyleGAN2Model.gan_criterion", "styleganv2_model.r1_penalty", "r1_penalty.detach().mean", "max", "styleganv2_model.StyleGAN2Model.mixing_noise", "styleganv2_model.g_path_regularize", "l_g_path.detach().mean", "real_pred.detach", "fake_pred.detach", "int", "styleganv2_model.StyleGAN2Model.make_noise", "r1_penalty.detach", "l_g_path.detach"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.styleganv2_model.StyleGAN2Model.mixing_noise", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.styleganv2_model.StyleGAN2Model.mixing_noise", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.styleganv2_model.StyleGAN2Model.model_ema", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.styleganv2_model.r1_penalty", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.styleganv2_model.StyleGAN2Model.mixing_noise", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.styleganv2_model.g_path_regularize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_styleganv2.StyleGANv2Generator.make_noise"], ["", "", "def", "train_iter", "(", "self", ",", "optimizers", "=", "None", ")", ":", "\n", "        ", "current_iter", "=", "self", ".", "current_iter", "\n", "self", ".", "set_requires_grad", "(", "self", ".", "nets", "[", "'disc'", "]", ",", "True", ")", "\n", "optimizers", "[", "'optimD'", "]", ".", "clear_grad", "(", ")", "\n", "batch", "=", "self", ".", "real_img", ".", "shape", "[", "0", "]", "\n", "noise", "=", "self", ".", "mixing_noise", "(", "batch", ",", "self", ".", "mixing_prob", ")", "\n", "\n", "fake_img", ",", "_", "=", "self", ".", "nets", "[", "'gen'", "]", "(", "noise", ")", "\n", "self", ".", "visual_items", "[", "'real_img'", "]", "=", "self", ".", "real_img", "\n", "self", ".", "visual_items", "[", "'fake_img'", "]", "=", "fake_img", "\n", "fake_pred", "=", "self", ".", "nets", "[", "'disc'", "]", "(", "fake_img", ".", "detach", "(", ")", ")", "\n", "\n", "real_pred", "=", "self", ".", "nets", "[", "'disc'", "]", "(", "self", ".", "real_img", ")", "\n", "# wgan loss with softplus (logistic loss) for discriminator", "\n", "l_d_total", "=", "0.", "\n", "l_d", "=", "self", ".", "gan_criterion", "(", "real_pred", ",", "True", ",", "\n", "is_disc", "=", "True", ")", "+", "self", ".", "gan_criterion", "(", "\n", "fake_pred", ",", "False", ",", "is_disc", "=", "True", ")", "\n", "self", ".", "losses", "[", "'l_d'", "]", "=", "l_d", "\n", "# In wgan, real_score should be positive and fake_score should be", "\n", "# negative", "\n", "self", ".", "losses", "[", "'real_score'", "]", "=", "real_pred", ".", "detach", "(", ")", ".", "mean", "(", ")", "\n", "self", ".", "losses", "[", "'fake_score'", "]", "=", "fake_pred", ".", "detach", "(", ")", ".", "mean", "(", ")", "\n", "\n", "l_d_total", "+=", "l_d", "\n", "\n", "if", "current_iter", "%", "self", ".", "disc_iters", "==", "0", ":", "\n", "            ", "self", ".", "real_img", ".", "stop_gradient", "=", "False", "\n", "real_pred", "=", "self", ".", "nets", "[", "'disc'", "]", "(", "self", ".", "real_img", ")", "\n", "l_d_r1", "=", "r1_penalty", "(", "real_pred", ",", "self", ".", "real_img", ")", "\n", "l_d_r1", "=", "(", "self", ".", "r1_reg_weight", "/", "2", "*", "l_d_r1", "*", "self", ".", "disc_iters", "+", "\n", "0", "*", "real_pred", "[", "0", "]", ")", "\n", "\n", "self", ".", "losses", "[", "'l_d_r1'", "]", "=", "l_d_r1", ".", "detach", "(", ")", ".", "mean", "(", ")", "\n", "\n", "l_d_total", "+=", "l_d_r1", "\n", "", "l_d_total", ".", "backward", "(", ")", "\n", "\n", "optimizers", "[", "'optimD'", "]", ".", "step", "(", ")", "\n", "\n", "self", ".", "set_requires_grad", "(", "self", ".", "nets", "[", "'disc'", "]", ",", "False", ")", "\n", "optimizers", "[", "'optimG'", "]", ".", "clear_grad", "(", ")", "\n", "\n", "noise", "=", "self", ".", "mixing_noise", "(", "batch", ",", "self", ".", "mixing_prob", ")", "\n", "fake_img", ",", "_", "=", "self", ".", "nets", "[", "'gen'", "]", "(", "noise", ")", "\n", "fake_pred", "=", "self", ".", "nets", "[", "'disc'", "]", "(", "fake_img", ")", "\n", "\n", "# wgan loss with softplus (non-saturating loss) for generator", "\n", "l_g_total", "=", "0.", "\n", "l_g", "=", "self", ".", "gan_criterion", "(", "fake_pred", ",", "True", ",", "is_disc", "=", "False", ")", "\n", "self", ".", "losses", "[", "'l_g'", "]", "=", "l_g", "\n", "\n", "l_g_total", "+=", "l_g", "\n", "if", "current_iter", "%", "self", ".", "gen_iters", "==", "0", ":", "\n", "            ", "path_batch_size", "=", "max", "(", "1", ",", "int", "(", "batch", "//", "self", ".", "path_batch_shrink", ")", ")", "\n", "noise", "=", "self", ".", "mixing_noise", "(", "path_batch_size", ",", "self", ".", "mixing_prob", ")", "\n", "fake_img", ",", "latents", "=", "self", ".", "nets", "[", "'gen'", "]", "(", "noise", ",", "return_latents", "=", "True", ")", "\n", "l_g_path", ",", "path_lengths", ",", "self", ".", "mean_path_length", "=", "g_path_regularize", "(", "\n", "fake_img", ",", "latents", ",", "self", ".", "mean_path_length", ")", "\n", "\n", "l_g_path", "=", "(", "self", ".", "path_reg_weight", "*", "self", ".", "gen_iters", "*", "l_g_path", "+", "\n", "0", "*", "fake_img", "[", "0", ",", "0", ",", "0", ",", "0", "]", ")", "\n", "\n", "l_g_total", "+=", "l_g_path", "\n", "self", ".", "losses", "[", "'l_g_path'", "]", "=", "l_g_path", ".", "detach", "(", ")", ".", "mean", "(", ")", "\n", "self", ".", "losses", "[", "'path_length'", "]", "=", "path_lengths", "\n", "", "l_g_total", ".", "backward", "(", ")", "\n", "optimizers", "[", "'optimG'", "]", ".", "step", "(", ")", "\n", "\n", "# EMA", "\n", "self", ".", "model_ema", "(", "decay", "=", "0.5", "**", "(", "32", "/", "(", "10", "*", "1000", ")", ")", ")", "\n", "\n", "if", "self", ".", "current_iter", "%", "self", ".", "visual_iters", ":", "\n", "            ", "sample_z", "=", "[", "self", ".", "make_noise", "(", "1", ",", "1", ")", "]", "\n", "sample", ",", "_", "=", "self", ".", "nets", "[", "'gen_ema'", "]", "(", "sample_z", ")", "\n", "self", ".", "visual_items", "[", "'fake_img_ema'", "]", "=", "sample", "\n", "\n", "", "self", ".", "current_iter", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.styleganv2_model.StyleGAN2Model.test_iter": [[287, 297], ["styleganv2_model.StyleGAN2Model.nets[].eval", "styleganv2_model.StyleGAN2Model.nets[].train", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "metrics.values", "metric.update"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update"], ["", "def", "test_iter", "(", "self", ",", "metrics", "=", "None", ")", ":", "\n", "        ", "self", ".", "nets", "[", "'gen_ema'", "]", ".", "eval", "(", ")", "\n", "batch", "=", "self", ".", "real_img", ".", "shape", "[", "0", "]", "\n", "noises", "=", "[", "paddle", ".", "randn", "(", "[", "batch", ",", "self", ".", "num_style_feat", "]", ")", "]", "\n", "fake_img", ",", "_", "=", "self", ".", "nets", "[", "'gen_ema'", "]", "(", "noises", ")", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "            ", "if", "metrics", "is", "not", "None", ":", "\n", "                ", "for", "metric", "in", "metrics", ".", "values", "(", ")", ":", "\n", "                    ", "metric", ".", "update", "(", "fake_img", ",", "self", ".", "real_img", ")", "\n", "", "", "", "self", ".", "nets", "[", "'gen_ema'", "]", ".", "train", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.styleganv2_model.StyleGAN2Model.export_model": [[309, 326], ["styleganv2_model.StyleGAN2Model.InferGenerator", "styleganv2_model.StyleGAN2Model.set_generator", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.jit.save", "paddle.jit.save", "paddle.jit.save", "paddle.jit.save", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save"], ["", "", "def", "export_model", "(", "self", ",", "\n", "export_model", "=", "None", ",", "\n", "output_dir", "=", "None", ",", "\n", "inputs_size", "=", "[", "[", "1", ",", "1", ",", "512", "]", ",", "[", "1", ",", "1", "]", "]", ",", "\n", "export_serving_model", "=", "False", ",", "\n", "model_name", "=", "None", ")", ":", "\n", "        ", "infer_generator", "=", "self", ".", "InferGenerator", "(", ")", "\n", "infer_generator", ".", "set_generator", "(", "self", ".", "nets", "[", "'gen'", "]", ")", "\n", "style", "=", "paddle", ".", "rand", "(", "shape", "=", "inputs_size", "[", "0", "]", ",", "dtype", "=", "'float32'", ")", "\n", "truncation", "=", "paddle", ".", "rand", "(", "shape", "=", "inputs_size", "[", "1", "]", ",", "dtype", "=", "'float32'", ")", "\n", "if", "output_dir", "is", "None", ":", "\n", "            ", "output_dir", "=", "'inference_model'", "\n", "", "if", "model_name", "is", "None", ":", "\n", "            ", "model_name", "=", "\"stylegan2model_gen\"", "\n", "", "paddle", ".", "jit", ".", "save", "(", "infer_generator", ",", "\n", "os", ".", "path", ".", "join", "(", "output_dir", ",", "model_name", ")", ",", "\n", "input_spec", "=", "[", "style", ",", "truncation", "]", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.styleganv2_model.r1_penalty": [[29, 49], ["paddle.grad", "paddle.grad", "real_pred.sum"], "function", ["None"], ["def", "r1_penalty", "(", "real_pred", ",", "real_img", ")", ":", "\n", "    ", "\"\"\"\n    R1 regularization for discriminator. The core idea is to\n    penalize the gradient on real data alone: when the\n    generator distribution produces the true data distribution\n    and the discriminator is equal to 0 on the data manifold, the\n    gradient penalty ensures that the discriminator cannot create\n    a non-zero gradient orthogonal to the data manifold without\n    suffering a loss in the GAN game.\n\n    Ref:\n    Eq. 9 in Which training methods for GANs do actually converge.\n    \"\"\"", "\n", "\n", "grad_real", "=", "paddle", ".", "grad", "(", "outputs", "=", "real_pred", ".", "sum", "(", ")", ",", "\n", "inputs", "=", "real_img", ",", "\n", "create_graph", "=", "True", ")", "[", "0", "]", "\n", "grad_penalty", "=", "(", "grad_real", "*", "grad_real", ")", ".", "reshape", "(", "[", "grad_real", ".", "shape", "[", "0", "]", ",", "\n", "-", "1", "]", ")", ".", "sum", "(", "1", ")", ".", "mean", "(", ")", "\n", "return", "grad_penalty", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.styleganv2_model.g_path_regularize": [[51, 66], ["paddle.sqrt", "paddle.sqrt", "paddle.randn", "paddle.randn", "math.sqrt", "paddle.grad", "paddle.grad", "paddle.sqrt.detach().mean", "path_mean.detach", "paddle.sqrt.mean", "paddle.sqrt.detach"], "function", ["None"], ["", "def", "g_path_regularize", "(", "fake_img", ",", "latents", ",", "mean_path_length", ",", "decay", "=", "0.01", ")", ":", "\n", "    ", "noise", "=", "paddle", ".", "randn", "(", "fake_img", ".", "shape", ")", "/", "math", ".", "sqrt", "(", "\n", "fake_img", ".", "shape", "[", "2", "]", "*", "fake_img", ".", "shape", "[", "3", "]", ")", "\n", "grad", "=", "paddle", ".", "grad", "(", "outputs", "=", "(", "fake_img", "*", "noise", ")", ".", "sum", "(", ")", ",", "\n", "inputs", "=", "latents", ",", "\n", "create_graph", "=", "True", ")", "[", "0", "]", "\n", "path_lengths", "=", "paddle", ".", "sqrt", "(", "(", "grad", "*", "grad", ")", ".", "sum", "(", "2", ")", ".", "mean", "(", "1", ")", ")", "\n", "\n", "path_mean", "=", "mean_path_length", "+", "decay", "*", "(", "path_lengths", ".", "mean", "(", ")", "-", "\n", "mean_path_length", ")", "\n", "\n", "path_penalty", "=", "(", "(", "path_lengths", "-", "path_mean", ")", "*", "\n", "(", "path_lengths", "-", "path_mean", ")", ")", ".", "mean", "(", ")", "\n", "\n", "return", "path_penalty", ",", "path_lengths", ".", "detach", "(", ")", ".", "mean", "(", ")", ",", "path_mean", ".", "detach", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.wav2lip_hq_model.Wav2LipModelHq.__init__": [[40, 80], ["base_model.BaseModel.__init__", "generators.builder.build_generator", "modules.init.init_weights", "discriminators.builder.build_discriminator", "paddle.utils.download.get_weights_path_from_url", "paddle.utils.download.get_weights_path_from_url", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "wav2lip_hq_model.Wav2LipModelHq.nets[].load_dict", "discriminators.builder.build_discriminator", "modules.init.init_weights", "paddle.nn.L1Loss", "paddle.nn.L1Loss", "paddle.nn.L1Loss", "paddle.nn.L1Loss"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.PixelShufflePack.init_weights", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.builder.build_discriminator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.builder.build_discriminator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.PixelShufflePack.init_weights"], ["def", "__init__", "(", "self", ",", "\n", "generator", ",", "\n", "discriminator_sync", "=", "None", ",", "\n", "discriminator_hq", "=", "None", ",", "\n", "syncnet_wt", "=", "1.0", ",", "\n", "disc_wt", "=", "0.07", ",", "\n", "max_eval_steps", "=", "700", ",", "\n", "is_train", "=", "True", ")", ":", "\n", "        ", "\"\"\"Initialize the Wav2lip class.\n\n        Parameters:\n            opt (config dict)-- stores all the experiment flags; needs to be a subclass of Dict\n        \"\"\"", "\n", "super", "(", "Wav2LipModelHq", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "syncnet_wt", "=", "syncnet_wt", "\n", "self", ".", "disc_wt", "=", "disc_wt", "\n", "self", ".", "is_train", "=", "is_train", "\n", "self", ".", "eval_step", "=", "0", "\n", "self", ".", "max_eval_steps", "=", "max_eval_steps", "\n", "self", ".", "eval_sync_losses", ",", "self", ".", "eval_recon_losses", "=", "[", "]", ",", "[", "]", "\n", "self", ".", "eval_disc_real_losses", ",", "self", ".", "eval_disc_fake_losses", "=", "[", "]", ",", "[", "]", "\n", "self", ".", "eval_perceptual_losses", "=", "[", "]", "\n", "# define networks (both generator and discriminator)", "\n", "self", ".", "nets", "[", "'netG'", "]", "=", "build_generator", "(", "generator", ")", "\n", "init_weights", "(", "self", ".", "nets", "[", "'netG'", "]", ",", "\n", "init_type", "=", "'kaiming'", ",", "\n", "distribution", "=", "'uniform'", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "self", ".", "nets", "[", "'netDS'", "]", "=", "build_discriminator", "(", "discriminator_sync", ")", "\n", "weights_path", "=", "get_weights_path_from_url", "(", "SYNCNET_WEIGHT_URL", ")", "\n", "params", "=", "paddle", ".", "load", "(", "weights_path", ")", "\n", "self", ".", "nets", "[", "'netDS'", "]", ".", "load_dict", "(", "params", ")", "\n", "\n", "self", ".", "nets", "[", "'netDH'", "]", "=", "build_discriminator", "(", "discriminator_hq", ")", "\n", "init_weights", "(", "self", ".", "nets", "[", "'netDH'", "]", ",", "\n", "init_type", "=", "'kaiming'", ",", "\n", "distribution", "=", "'uniform'", ")", "\n", "\n", "", "if", "self", ".", "is_train", ":", "\n", "            ", "self", ".", "recon_loss", "=", "paddle", ".", "nn", ".", "L1Loss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.wav2lip_hq_model.Wav2LipModelHq.setup_input": [[81, 91], ["paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor"], "methods", ["None"], ["", "", "def", "setup_input", "(", "self", ",", "input", ")", ":", "\n", "        ", "\"\"\"Unpack input data from the dataloader and perform necessary pre-processing steps.\n\n        Parameters:\n            input (dict): include the data itself and its metadata information.\n        \"\"\"", "\n", "self", ".", "x", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'x'", "]", ")", "\n", "self", ".", "indiv_mels", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'indiv_mels'", "]", ")", "\n", "self", ".", "mel", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'mel'", "]", ")", "\n", "self", ".", "y", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'y'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.wav2lip_hq_model.Wav2LipModelHq.forward": [[92, 96], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ")", ":", "\n", "        ", "\"\"\"Run forward pass; called by both functions <optimize_parameters> and <test>.\"\"\"", "\n", "\n", "self", ".", "g", "=", "self", ".", "nets", "[", "'netG'", "]", "(", "self", ".", "indiv_mels", ",", "self", ".", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.wav2lip_hq_model.Wav2LipModelHq.backward_G": [[97, 122], ["wav2lip_hq_model.Wav2LipModelHq.recon_loss", "wav2lip_hq_model.Wav2LipModelHq.loss_G.backward", "wav2lip_model.get_sync_loss", "isinstance", "wav2lip_hq_model.Wav2LipModelHq.nets[]._layers.perceptual_forward", "wav2lip_hq_model.Wav2LipModelHq.nets[].perceptual_forward"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.wav2lip_model.get_sync_loss", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.wav2lip_disc_qual.Wav2LipDiscQual.perceptual_forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.wav2lip_disc_qual.Wav2LipDiscQual.perceptual_forward"], ["", "def", "backward_G", "(", "self", ")", ":", "\n", "        ", "\"\"\"Calculate GAN loss for the generator\"\"\"", "\n", "if", "self", ".", "syncnet_wt", ">", "0.", ":", "\n", "            ", "self", ".", "sync_loss", "=", "get_sync_loss", "(", "self", ".", "mel", ",", "self", ".", "g", ",", "self", ".", "nets", "[", "'netDS'", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "sync_loss", "=", "0.", "\n", "", "self", ".", "l1_loss", "=", "self", ".", "recon_loss", "(", "self", ".", "g", ",", "self", ".", "y", ")", "\n", "\n", "if", "self", ".", "disc_wt", ">", "0.", ":", "\n", "            ", "if", "isinstance", "(", "self", ".", "nets", "[", "'netDH'", "]", ",", "paddle", ".", "DataParallel", ")", ":", "\n", "                ", "self", ".", "perceptual_loss", "=", "self", ".", "nets", "[", "\n", "'netDH'", "]", ".", "_layers", ".", "perceptual_forward", "(", "self", ".", "g", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "perceptual_loss", "=", "self", ".", "nets", "[", "'netDH'", "]", ".", "perceptual_forward", "(", "\n", "self", ".", "g", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "perceptual_loss", "=", "0.", "\n", "\n", "", "self", ".", "losses", "[", "'sync_loss'", "]", "=", "self", ".", "sync_loss", "\n", "self", ".", "losses", "[", "'l1_loss'", "]", "=", "self", ".", "l1_loss", "\n", "self", ".", "losses", "[", "'perceptual_loss'", "]", "=", "self", ".", "perceptual_loss", "\n", "\n", "self", ".", "loss_G", "=", "self", ".", "syncnet_wt", "*", "self", ".", "sync_loss", "+", "self", ".", "disc_wt", "*", "self", ".", "perceptual_loss", "+", "(", "\n", "1", "-", "self", ".", "syncnet_wt", "-", "self", ".", "disc_wt", ")", "*", "self", ".", "l1_loss", "\n", "self", ".", "loss_G", ".", "backward", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.wav2lip_hq_model.Wav2LipModelHq.backward_D": [[123, 135], ["paddle.binary_cross_entropy", "paddle.binary_cross_entropy", "wav2lip_hq_model.Wav2LipModelHq.disc_real_loss.backward", "paddle.binary_cross_entropy", "paddle.binary_cross_entropy", "wav2lip_hq_model.Wav2LipModelHq.disc_fake_loss.backward", "paddle.ones", "paddle.ones", "paddle.ones", "paddle.ones", "wav2lip_hq_model.Wav2LipModelHq.g.detach", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "len", "len"], "methods", ["None"], ["", "def", "backward_D", "(", "self", ")", ":", "\n", "        ", "self", ".", "pred_real", "=", "self", ".", "nets", "[", "'netDH'", "]", "(", "self", ".", "y", ")", "\n", "self", ".", "disc_real_loss", "=", "F", ".", "binary_cross_entropy", "(", "\n", "self", ".", "pred_real", ",", "paddle", ".", "ones", "(", "(", "len", "(", "self", ".", "pred_real", ")", ",", "1", ")", ")", ")", "\n", "self", ".", "losses", "[", "'disc_real_loss'", "]", "=", "self", ".", "disc_real_loss", "\n", "self", ".", "disc_real_loss", ".", "backward", "(", ")", "\n", "\n", "self", ".", "pred_fake", "=", "self", ".", "nets", "[", "'netDH'", "]", "(", "self", ".", "g", ".", "detach", "(", ")", ")", "\n", "self", ".", "disc_fake_loss", "=", "F", ".", "binary_cross_entropy", "(", "\n", "self", ".", "pred_fake", ",", "paddle", ".", "zeros", "(", "(", "len", "(", "self", ".", "pred_fake", ")", ",", "1", ")", ")", ")", "\n", "self", ".", "losses", "[", "'disc_fake_loss'", "]", "=", "self", ".", "disc_fake_loss", "\n", "self", ".", "disc_fake_loss", ".", "backward", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.wav2lip_hq_model.Wav2LipModelHq.train_iter": [[136, 153], ["wav2lip_hq_model.Wav2LipModelHq.forward", "wav2lip_hq_model.Wav2LipModelHq.set_requires_grad", "wav2lip_hq_model.Wav2LipModelHq.set_requires_grad", "wav2lip_hq_model.Wav2LipModelHq.set_requires_grad", "wav2lip_hq_model.Wav2LipModelHq.optimizers[].clear_grad", "wav2lip_hq_model.Wav2LipModelHq.optimizers[].clear_grad", "wav2lip_hq_model.Wav2LipModelHq.backward_G", "wav2lip_hq_model.Wav2LipModelHq.optimizers[].step", "wav2lip_hq_model.Wav2LipModelHq.optimizers[].clear_grad", "wav2lip_hq_model.Wav2LipModelHq.backward_D", "wav2lip_hq_model.Wav2LipModelHq.optimizers[].step"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.vgg16.forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.backward_G", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.backward_D"], ["", "def", "train_iter", "(", "self", ",", "optimizers", "=", "None", ")", ":", "\n", "# forward", "\n", "        ", "self", ".", "forward", "(", ")", "\n", "\n", "# update G", "\n", "self", ".", "set_requires_grad", "(", "self", ".", "nets", "[", "'netDS'", "]", ",", "False", ")", "\n", "self", ".", "set_requires_grad", "(", "self", ".", "nets", "[", "'netG'", "]", ",", "True", ")", "\n", "self", ".", "set_requires_grad", "(", "self", ".", "nets", "[", "'netDH'", "]", ",", "True", ")", "\n", "\n", "self", ".", "optimizers", "[", "'optimizer_G'", "]", ".", "clear_grad", "(", ")", "\n", "self", ".", "optimizers", "[", "'optimizer_DH'", "]", ".", "clear_grad", "(", ")", "\n", "self", ".", "backward_G", "(", ")", "\n", "self", ".", "optimizers", "[", "'optimizer_G'", "]", ".", "step", "(", ")", "\n", "\n", "self", ".", "optimizers", "[", "'optimizer_DH'", "]", ".", "clear_grad", "(", ")", "\n", "self", ".", "backward_D", "(", ")", "\n", "self", ".", "optimizers", "[", "'optimizer_DH'", "]", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.wav2lip_hq_model.Wav2LipModelHq.test_iter": [[154, 213], ["wav2lip_hq_model.Wav2LipModelHq.nets[].eval", "wav2lip_hq_model.Wav2LipModelHq.nets[].eval", "wav2lip_hq_model.Wav2LipModelHq.nets[].train", "wav2lip_hq_model.Wav2LipModelHq.nets[].train", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "wav2lip_hq_model.Wav2LipModelHq.forward", "wav2lip_model.get_sync_loss", "wav2lip_hq_model.Wav2LipModelHq.recon_loss", "paddle.binary_cross_entropy", "paddle.binary_cross_entropy", "paddle.binary_cross_entropy", "paddle.binary_cross_entropy", "wav2lip_hq_model.Wav2LipModelHq.eval_disc_fake_losses.append", "wav2lip_hq_model.Wav2LipModelHq.eval_disc_real_losses.append", "wav2lip_hq_model.Wav2LipModelHq.eval_sync_losses.append", "wav2lip_hq_model.Wav2LipModelHq.eval_recon_losses.append", "wav2lip_hq_model.Wav2LipModelHq.eval_perceptual_losses.append", "print", "paddle.ones", "paddle.ones", "paddle.ones", "paddle.ones", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.binary_cross_entropy.numpy().item", "paddle.binary_cross_entropy.numpy().item", "wav2lip_model.get_sync_loss.numpy().item", "wav2lip_hq_model.Wav2LipModelHq.numpy().item", "isinstance", "sum", "len", "sum", "len", "sum", "len", "sum", "len", "sum", "len", "wav2lip_hq_model.Wav2LipModelHq.nets[]._layers.perceptual_forward().numpy().item", "wav2lip_hq_model.Wav2LipModelHq.nets[].perceptual_forward().numpy().item", "len", "len", "paddle.binary_cross_entropy.numpy", "paddle.binary_cross_entropy.numpy", "wav2lip_model.get_sync_loss.numpy", "wav2lip_hq_model.Wav2LipModelHq.numpy", "wav2lip_hq_model.Wav2LipModelHq.nets[]._layers.perceptual_forward().numpy", "wav2lip_hq_model.Wav2LipModelHq.nets[].perceptual_forward().numpy", "wav2lip_hq_model.Wav2LipModelHq.nets[]._layers.perceptual_forward", "wav2lip_hq_model.Wav2LipModelHq.nets[].perceptual_forward"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.vgg16.forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.wav2lip_model.get_sync_loss", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.wav2lip_disc_qual.Wav2LipDiscQual.perceptual_forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.wav2lip_disc_qual.Wav2LipDiscQual.perceptual_forward"], ["", "def", "test_iter", "(", "self", ",", "metrics", "=", "None", ")", ":", "\n", "        ", "self", ".", "eval_step", "+=", "1", "\n", "self", ".", "nets", "[", "'netG'", "]", ".", "eval", "(", ")", "\n", "self", ".", "nets", "[", "'netDH'", "]", ".", "eval", "(", ")", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "            ", "self", ".", "forward", "(", ")", "\n", "sync_loss", "=", "get_sync_loss", "(", "self", ".", "mel", ",", "self", ".", "g", ",", "self", ".", "nets", "[", "'netDS'", "]", ")", "\n", "l1loss", "=", "self", ".", "recon_loss", "(", "self", ".", "g", ",", "self", ".", "y", ")", "\n", "\n", "pred_real", "=", "self", ".", "nets", "[", "'netDH'", "]", "(", "self", ".", "y", ")", "\n", "pred_fake", "=", "self", ".", "nets", "[", "'netDH'", "]", "(", "self", ".", "g", ")", "\n", "disc_real_loss", "=", "F", ".", "binary_cross_entropy", "(", "\n", "pred_real", ",", "paddle", ".", "ones", "(", "(", "len", "(", "pred_real", ")", ",", "1", ")", ")", ")", "\n", "disc_fake_loss", "=", "F", ".", "binary_cross_entropy", "(", "\n", "pred_fake", ",", "paddle", ".", "zeros", "(", "(", "len", "(", "pred_fake", ")", ",", "1", ")", ")", ")", "\n", "\n", "self", ".", "eval_disc_fake_losses", ".", "append", "(", "disc_fake_loss", ".", "numpy", "(", ")", ".", "item", "(", ")", ")", "\n", "self", ".", "eval_disc_real_losses", ".", "append", "(", "disc_real_loss", ".", "numpy", "(", ")", ".", "item", "(", ")", ")", "\n", "\n", "self", ".", "eval_sync_losses", ".", "append", "(", "sync_loss", ".", "numpy", "(", ")", ".", "item", "(", ")", ")", "\n", "self", ".", "eval_recon_losses", ".", "append", "(", "l1loss", ".", "numpy", "(", ")", ".", "item", "(", ")", ")", "\n", "\n", "if", "self", ".", "disc_wt", ">", "0.", ":", "\n", "                ", "if", "isinstance", "(", "self", ".", "nets", "[", "'netDH'", "]", ",", "paddle", ".", "DataParallel", ")", ":", "\n", "                    ", "perceptual_loss", "=", "self", ".", "nets", "[", "\n", "'netDH'", "]", ".", "_layers", ".", "perceptual_forward", "(", "\n", "self", ".", "g", ")", ".", "numpy", "(", ")", ".", "item", "(", ")", "\n", "", "else", ":", "\n", "                    ", "perceptual_loss", "=", "self", ".", "nets", "[", "'netDH'", "]", ".", "perceptual_forward", "(", "\n", "self", ".", "g", ")", ".", "numpy", "(", ")", ".", "item", "(", ")", "\n", "", "", "else", ":", "\n", "                ", "perceptual_loss", "=", "0.", "\n", "", "self", ".", "eval_perceptual_losses", ".", "append", "(", "perceptual_loss", ")", "\n", "\n", "", "if", "self", ".", "eval_step", "==", "self", ".", "max_eval_steps", ":", "\n", "            ", "averaged_sync_loss", "=", "sum", "(", "self", ".", "eval_sync_losses", ")", "/", "len", "(", "\n", "self", ".", "eval_sync_losses", ")", "\n", "averaged_recon_loss", "=", "sum", "(", "self", ".", "eval_recon_losses", ")", "/", "len", "(", "\n", "self", ".", "eval_recon_losses", ")", "\n", "averaged_perceptual_loss", "=", "sum", "(", "self", ".", "eval_perceptual_losses", ")", "/", "len", "(", "\n", "self", ".", "eval_perceptual_losses", ")", "\n", "averaged_disc_fake_loss", "=", "sum", "(", "self", ".", "eval_disc_fake_losses", ")", "/", "len", "(", "\n", "self", ".", "eval_disc_fake_losses", ")", "\n", "averaged_disc_real_loss", "=", "sum", "(", "self", ".", "eval_disc_real_losses", ")", "/", "len", "(", "\n", "self", ".", "eval_disc_real_losses", ")", "\n", "if", "averaged_sync_loss", "<", ".75", ":", "\n", "                ", "self", ".", "syncnet_wt", "=", "0.01", "\n", "\n", "", "print", "(", "\n", "'L1: {}, Sync loss: {}, Percep: {}, Fake: {}, Real: {}'", ".", "format", "(", "\n", "averaged_recon_loss", ",", "averaged_sync_loss", ",", "\n", "averaged_perceptual_loss", ",", "averaged_disc_fake_loss", ",", "\n", "averaged_disc_real_loss", ")", ")", "\n", "self", ".", "eval_sync_losses", ",", "self", ".", "eval_recon_losses", "=", "[", "]", ",", "[", "]", "\n", "self", ".", "eval_disc_real_losses", ",", "self", ".", "eval_disc_fake_losses", "=", "[", "]", ",", "[", "]", "\n", "self", ".", "eval_perceptual_losses", "=", "[", "]", "\n", "self", ".", "eval_step", "=", "0", "\n", "", "self", ".", "nets", "[", "'netG'", "]", ".", "train", "(", ")", "\n", "self", ".", "nets", "[", "'netDH'", "]", ".", "train", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.mpr_model.MPRModel.__init__": [[33, 51], ["base_model.BaseModel.__init__", "generators.builder.build_generator", "modules.init.init_weights", "criterions.builder.build_criterion", "criterions.builder.build_criterion"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.PixelShufflePack.init_weights", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion"], ["def", "__init__", "(", "self", ",", "generator", ",", "char_criterion", "=", "None", ",", "edge_criterion", "=", "None", ")", ":", "\n", "        ", "\"\"\"Initialize the MPR class.\n\n        Args:\n            generator (dict): config of generator.\n            char_criterion (dict): config of char criterion.\n            edge_criterion (dict): config of edge criterion.\n        \"\"\"", "\n", "super", "(", "MPRModel", ",", "self", ")", ".", "__init__", "(", "generator", ")", "\n", "self", ".", "current_iter", "=", "1", "\n", "\n", "self", ".", "nets", "[", "'generator'", "]", "=", "build_generator", "(", "generator", ")", "\n", "init_weights", "(", "self", ".", "nets", "[", "'generator'", "]", ")", "\n", "\n", "if", "char_criterion", ":", "\n", "            ", "self", ".", "char_criterion", "=", "build_criterion", "(", "char_criterion", ")", "\n", "", "if", "edge_criterion", ":", "\n", "            ", "self", ".", "edge_criterion", "=", "build_criterion", "(", "edge_criterion", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.mpr_model.MPRModel.setup_input": [[52, 55], ["None"], "methods", ["None"], ["", "", "def", "setup_input", "(", "self", ",", "input", ")", ":", "\n", "        ", "self", ".", "target", "=", "input", "[", "0", "]", "\n", "self", ".", "lq", "=", "input", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.mpr_model.MPRModel.train_iter": [[56, 77], ["optims[].clear_gradients", "range", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "loss.backward", "optims[].step", "loss.numpy", "len", "paddle.sum.append", "paddle.sum.append", "paddle.sum.append", "paddle.sum.append", "mpr_model.MPRModel.char_criterion", "mpr_model.MPRModel.edge_criterion"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "train_iter", "(", "self", ",", "optims", "=", "None", ")", ":", "\n", "        ", "optims", "[", "'optim'", "]", ".", "clear_gradients", "(", ")", "\n", "\n", "restored", "=", "self", ".", "nets", "[", "'generator'", "]", "(", "self", ".", "lq", ")", "\n", "\n", "loss_char", "=", "[", "]", "\n", "loss_edge", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "restored", ")", ")", ":", "\n", "            ", "loss_char", ".", "append", "(", "self", ".", "char_criterion", "(", "restored", "[", "i", "]", ",", "self", ".", "target", ")", ")", "\n", "loss_edge", ".", "append", "(", "self", ".", "edge_criterion", "(", "restored", "[", "i", "]", ",", "self", ".", "target", ")", ")", "\n", "", "loss_char", "=", "paddle", ".", "stack", "(", "loss_char", ")", "\n", "loss_edge", "=", "paddle", ".", "stack", "(", "loss_edge", ")", "\n", "loss_char", "=", "paddle", ".", "sum", "(", "loss_char", ")", "\n", "loss_edge", "=", "paddle", ".", "sum", "(", "loss_edge", ")", "\n", "\n", "loss", "=", "(", "loss_char", ")", "+", "(", "0.05", "*", "loss_edge", ")", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "optims", "[", "'optim'", "]", ".", "step", "(", ")", "\n", "self", ".", "losses", "[", "'loss'", "]", "=", "loss", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.mpr_model.MPRModel.forward": [[78, 80], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.mpr_model.MPRModel.test_iter": [[81, 97], ["mpr_model.MPRModel.nets[].eval", "mpr_model.MPRModel.nets[].train", "zip", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "out_img.append", "gt_img.append", "metrics.values", "utils.visual.tensor2img", "utils.visual.tensor2img", "metric.update"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.tensor2img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.tensor2img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update"], ["", "def", "test_iter", "(", "self", ",", "metrics", "=", "None", ")", ":", "\n", "        ", "self", ".", "nets", "[", "'generator'", "]", ".", "eval", "(", ")", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "            ", "self", ".", "output", "=", "self", ".", "nets", "[", "'generator'", "]", "(", "self", ".", "lq", ")", "[", "0", "]", "\n", "self", ".", "visual_items", "[", "'output'", "]", "=", "self", ".", "output", "\n", "", "self", ".", "nets", "[", "'generator'", "]", ".", "train", "(", ")", "\n", "\n", "out_img", "=", "[", "]", "\n", "gt_img", "=", "[", "]", "\n", "for", "out_tensor", ",", "gt_tensor", "in", "zip", "(", "self", ".", "output", ",", "self", ".", "target", ")", ":", "\n", "            ", "out_img", ".", "append", "(", "tensor2img", "(", "out_tensor", ",", "(", "0.", ",", "1.", ")", ")", ")", "\n", "gt_img", ".", "append", "(", "tensor2img", "(", "gt_tensor", ",", "(", "0.", ",", "1.", ")", ")", ")", "\n", "\n", "", "if", "metrics", "is", "not", "None", ":", "\n", "            ", "for", "metric", "in", "metrics", ".", "values", "(", ")", ":", "\n", "                ", "metric", ".", "update", "(", "out_img", ",", "gt_img", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.makeup_model.MakeupModel.__init__": [[44, 100], ["base_model.BaseModel.__init__", "generators.builder.build_generator", "modules.init.init_weights", "paddle.vision.models.vgg16", "os.path.abspath", "paddle.utils.download.get_path_from_url", "paddle.load", "paddle.vision.models.vgg16.load_dict", "discriminators.builder.build_discriminator", "discriminators.builder.build_discriminator", "modules.init.init_weights", "modules.init.init_weights", "utils.image_pool.ImagePool", "utils.image_pool.ImagePool", "os.path.dirname", "criterions.build_criterion", "criterions.build_criterion", "criterions.build_criterion", "criterions.build_criterion", "criterions.build_criterion"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.PixelShufflePack.init_weights", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.builder.build_discriminator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.builder.build_discriminator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.PixelShufflePack.init_weights", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.PixelShufflePack.init_weights", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion"], ["def", "__init__", "(", "self", ",", "\n", "generator", ",", "\n", "discriminator", "=", "None", ",", "\n", "cycle_criterion", "=", "None", ",", "\n", "idt_criterion", "=", "None", ",", "\n", "gan_criterion", "=", "None", ",", "\n", "l1_criterion", "=", "None", ",", "\n", "l2_criterion", "=", "None", ",", "\n", "pool_size", "=", "50", ",", "\n", "direction", "=", "'a2b'", ",", "\n", "lambda_a", "=", "10.", ",", "\n", "lambda_b", "=", "10.", ",", "\n", "is_train", "=", "True", ")", ":", "\n", "        ", "\"\"\"Initialize the PSGAN class.\n\n        Parameters:\n            cfg (dict)-- config of model.\n        \"\"\"", "\n", "super", "(", "MakeupModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "lambda_a", "=", "lambda_a", "\n", "self", ".", "lambda_b", "=", "lambda_b", "\n", "self", ".", "is_train", "=", "is_train", "\n", "# define networks (both Generators and discriminators)", "\n", "# The naming is different from those used in the paper.", "\n", "# Code (vs. paper): G_A (G), G_B (F), D_A (D_Y), D_B (D_X)", "\n", "self", ".", "nets", "[", "'netG'", "]", "=", "build_generator", "(", "generator", ")", "\n", "init_weights", "(", "self", ".", "nets", "[", "'netG'", "]", ",", "init_type", "=", "'xavier'", ",", "init_gain", "=", "1.0", ")", "\n", "\n", "if", "self", ".", "is_train", ":", "# define discriminators", "\n", "            ", "vgg", "=", "vgg16", "(", "pretrained", "=", "False", ")", "\n", "self", ".", "vgg", "=", "vgg", ".", "features", "\n", "cur_path", "=", "os", ".", "path", ".", "abspath", "(", "os", ".", "path", ".", "dirname", "(", "__file__", ")", ")", "\n", "vgg_weight_path", "=", "get_path_from_url", "(", "VGGFACE_WEIGHT_URL", ",", "cur_path", ")", "\n", "param", "=", "paddle", ".", "load", "(", "vgg_weight_path", ")", "\n", "vgg", ".", "load_dict", "(", "param", ")", "\n", "\n", "self", ".", "nets", "[", "'netD_A'", "]", "=", "build_discriminator", "(", "discriminator", ")", "\n", "self", ".", "nets", "[", "'netD_B'", "]", "=", "build_discriminator", "(", "discriminator", ")", "\n", "init_weights", "(", "self", ".", "nets", "[", "'netD_A'", "]", ",", "init_type", "=", "'xavier'", ",", "init_gain", "=", "1.0", ")", "\n", "init_weights", "(", "self", ".", "nets", "[", "'netD_B'", "]", ",", "init_type", "=", "'xavier'", ",", "init_gain", "=", "1.0", ")", "\n", "\n", "# create image buffer to store previously generated images", "\n", "self", ".", "fake_A_pool", "=", "ImagePool", "(", "pool_size", ")", "\n", "self", ".", "fake_B_pool", "=", "ImagePool", "(", "pool_size", ")", "\n", "\n", "# define loss functions", "\n", "if", "gan_criterion", ":", "\n", "                ", "self", ".", "gan_criterion", "=", "build_criterion", "(", "gan_criterion", ")", "\n", "", "if", "cycle_criterion", ":", "\n", "                ", "self", ".", "cycle_criterion", "=", "build_criterion", "(", "cycle_criterion", ")", "\n", "", "if", "idt_criterion", ":", "\n", "                ", "self", ".", "idt_criterion", "=", "build_criterion", "(", "idt_criterion", ")", "\n", "", "if", "l1_criterion", ":", "\n", "                ", "self", ".", "l1_criterion", "=", "build_criterion", "(", "l1_criterion", ")", "\n", "", "if", "l2_criterion", ":", "\n", "                ", "self", ".", "l2_criterion", "=", "build_criterion", "(", "l2_criterion", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.makeup_model.MakeupModel.setup_input": [[101, 121], ["paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.transpose", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor"], "methods", ["None"], ["", "", "", "def", "setup_input", "(", "self", ",", "input", ")", ":", "\n", "        ", "\"\"\"Unpack input data from the dataloader and perform necessary pre-processing steps.\n\n        Args:\n            input (dict): include the data itself and its metadata information.\n\n        \"\"\"", "\n", "self", ".", "real_A", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'image_A'", "]", ")", "\n", "self", ".", "real_B", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'image_B'", "]", ")", "\n", "self", ".", "c_m", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'consis_mask'", "]", ")", "\n", "self", ".", "P_A", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'P_A'", "]", ")", "\n", "self", ".", "P_B", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'P_B'", "]", ")", "\n", "self", ".", "mask_A_aug", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'mask_A_aug'", "]", ")", "\n", "self", ".", "mask_B_aug", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'mask_B_aug'", "]", ")", "\n", "self", ".", "c_m_t", "=", "paddle", ".", "transpose", "(", "self", ".", "c_m", ",", "perm", "=", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "self", ".", "mask_A", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'mask_A'", "]", ")", "\n", "self", ".", "mask_B", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'mask_B'", "]", ")", "\n", "self", ".", "c_m_idt_a", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'consis_mask_idt_A'", "]", ")", "\n", "self", ".", "c_m_idt_b", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'consis_mask_idt_B'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.makeup_model.MakeupModel.forward": [[122, 148], ["None"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ")", ":", "\n", "        ", "\"\"\"Run forward pass; called by both functions <optimize_parameters> and <test>.\"\"\"", "\n", "self", ".", "fake_A", ",", "amm", "=", "self", ".", "nets", "[", "'netG'", "]", "(", "self", ".", "real_A", ",", "self", ".", "real_B", ",", "self", ".", "P_A", ",", "\n", "self", ".", "P_B", ",", "self", ".", "c_m", ",", "\n", "self", ".", "mask_A_aug", ",", "\n", "self", ".", "mask_B_aug", ")", "# G_A(A)", "\n", "self", ".", "fake_B", ",", "_", "=", "self", ".", "nets", "[", "'netG'", "]", "(", "self", ".", "real_B", ",", "self", ".", "real_A", ",", "self", ".", "P_B", ",", "\n", "self", ".", "P_A", ",", "self", ".", "c_m_t", ",", "\n", "self", ".", "mask_A_aug", ",", "\n", "self", ".", "mask_B_aug", ")", "# G_A(A)", "\n", "self", ".", "rec_A", ",", "_", "=", "self", ".", "nets", "[", "'netG'", "]", "(", "self", ".", "fake_A", ",", "self", ".", "real_A", ",", "self", ".", "P_A", ",", "\n", "self", ".", "P_A", ",", "self", ".", "c_m_idt_a", ",", "\n", "self", ".", "mask_A_aug", ",", "\n", "self", ".", "mask_B_aug", ")", "# G_A(A)", "\n", "self", ".", "rec_B", ",", "_", "=", "self", ".", "nets", "[", "'netG'", "]", "(", "self", ".", "fake_B", ",", "self", ".", "real_B", ",", "self", ".", "P_B", ",", "\n", "self", ".", "P_B", ",", "self", ".", "c_m_idt_b", ",", "\n", "self", ".", "mask_A_aug", ",", "\n", "self", ".", "mask_B_aug", ")", "# G_A(A)", "\n", "\n", "# visual", "\n", "self", ".", "visual_items", "[", "'real_A'", "]", "=", "self", ".", "real_A", "\n", "self", ".", "visual_items", "[", "'fake_B'", "]", "=", "self", ".", "fake_B", "\n", "self", ".", "visual_items", "[", "'rec_A'", "]", "=", "self", ".", "rec_A", "\n", "self", ".", "visual_items", "[", "'real_B'", "]", "=", "self", ".", "real_B", "\n", "self", ".", "visual_items", "[", "'fake_A'", "]", "=", "self", ".", "fake_A", "\n", "self", ".", "visual_items", "[", "'rec_B'", "]", "=", "self", ".", "rec_B", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.makeup_model.MakeupModel.test": [[149, 155], ["paddle.no_grad"], "methods", ["None"], ["", "def", "test", "(", "self", ",", "input", ")", ":", "\n", "        ", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "            ", "return", "self", ".", "nets", "[", "'netG'", "]", "(", "input", "[", "'image_A'", "]", ",", "input", "[", "'image_B'", "]", ",", "\n", "input", "[", "'P_A'", "]", ",", "input", "[", "'P_B'", "]", ",", "\n", "input", "[", "'consis_mask'", "]", ",", "input", "[", "'mask_A_aug'", "]", ",", "\n", "input", "[", "'mask_B_aug'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.makeup_model.MakeupModel.backward_D_basic": [[156, 177], ["netD", "makeup_model.MakeupModel.gan_criterion", "netD", "makeup_model.MakeupModel.gan_criterion", "loss_D.backward", "fake.detach"], "methods", ["None"], ["", "", "def", "backward_D_basic", "(", "self", ",", "netD", ",", "real", ",", "fake", ")", ":", "\n", "        ", "\"\"\"Calculate GAN loss for the discriminator\n\n        Parameters:\n            netD (network)      -- the discriminator D\n            real (tensor array) -- real images\n            fake (tensor array) -- images generated by a generator\n\n        Return the discriminator loss.\n        We also call loss_D.backward() to calculate the gradients.\n        \"\"\"", "\n", "# Real", "\n", "pred_real", "=", "netD", "(", "real", ")", "\n", "loss_D_real", "=", "self", ".", "gan_criterion", "(", "pred_real", ",", "True", ")", "\n", "# Fake", "\n", "pred_fake", "=", "netD", "(", "fake", ".", "detach", "(", ")", ")", "\n", "loss_D_fake", "=", "self", ".", "gan_criterion", "(", "pred_fake", ",", "False", ")", "\n", "# Combined loss and calculate gradients", "\n", "loss_D", "=", "(", "loss_D_real", "+", "loss_D_fake", ")", "*", "0.5", "\n", "loss_D", ".", "backward", "(", ")", "\n", "return", "loss_D", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.makeup_model.MakeupModel.backward_D_A": [[178, 184], ["makeup_model.MakeupModel.fake_B_pool.query", "makeup_model.MakeupModel.backward_D_basic"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.image_pool.ImagePool.query", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.cycle_gan_model.CycleGANModel.backward_D_basic"], ["", "def", "backward_D_A", "(", "self", ")", ":", "\n", "        ", "\"\"\"Calculate GAN loss for discriminator D_A\"\"\"", "\n", "fake_B", "=", "self", ".", "fake_B_pool", ".", "query", "(", "self", ".", "fake_B", ")", "\n", "self", ".", "loss_D_A", "=", "self", ".", "backward_D_basic", "(", "self", ".", "nets", "[", "'netD_A'", "]", ",", "self", ".", "real_B", ",", "\n", "fake_B", ")", "\n", "self", ".", "losses", "[", "'D_A_loss'", "]", "=", "self", ".", "loss_D_A", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.makeup_model.MakeupModel.backward_D_B": [[185, 191], ["makeup_model.MakeupModel.fake_A_pool.query", "makeup_model.MakeupModel.backward_D_basic"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.image_pool.ImagePool.query", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.cycle_gan_model.CycleGANModel.backward_D_basic"], ["", "def", "backward_D_B", "(", "self", ")", ":", "\n", "        ", "\"\"\"Calculate GAN loss for discriminator D_B\"\"\"", "\n", "fake_A", "=", "self", ".", "fake_A_pool", ".", "query", "(", "self", ".", "fake_A", ")", "\n", "self", ".", "loss_D_B", "=", "self", ".", "backward_D_basic", "(", "self", ".", "nets", "[", "'netD_B'", "]", ",", "self", ".", "real_A", ",", "\n", "fake_A", ")", "\n", "self", ".", "losses", "[", "'D_B_loss'", "]", "=", "self", ".", "loss_D_B", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.makeup_model.MakeupModel.backward_G": [[192, 364], ["makeup_model.MakeupModel.gan_criterion", "makeup_model.MakeupModel.gan_criterion", "makeup_model.MakeupModel.mask_A_aug[].unsqueeze", "makeup_model.MakeupModel.mask_B_aug[].unsqueeze", "makeup_model.MakeupModel.numpy().squeeze", "makeup_model.MakeupModel.numpy().squeeze", "mask_preprocess", "real_A.numpy().squeeze", "real_B.numpy().squeeze", "fake_A.numpy().squeeze", "fake_B.numpy().squeeze", "hisMatch", "hisMatch", "paddle.to_tensor", "fake_match_lip_A.unsqueeze.unsqueeze.unsqueeze", "paddle.to_tensor", "fake_match_lip_B.unsqueeze.unsqueeze.unsqueeze", "makeup_model.MakeupModel.l1_criterion", "makeup_model.MakeupModel.l1_criterion", "makeup_model.MakeupModel.mask_A_aug[].unsqueeze", "makeup_model.MakeupModel.mask_B_aug[].unsqueeze", "makeup_model.MakeupModel.numpy().squeeze", "makeup_model.MakeupModel.numpy().squeeze", "mask_preprocess", "hisMatch", "hisMatch", "paddle.to_tensor", "fake_match_skin_A.unsqueeze.unsqueeze.unsqueeze", "paddle.to_tensor", "fake_match_skin_B.unsqueeze.unsqueeze.unsqueeze", "makeup_model.MakeupModel.l1_criterion", "makeup_model.MakeupModel.l1_criterion", "makeup_model.MakeupModel.mask_A_aug[].unsqueeze", "makeup_model.MakeupModel.mask_B_aug[].unsqueeze", "makeup_model.MakeupModel.numpy().squeeze", "makeup_model.MakeupModel.numpy().squeeze", "mask_preprocess", "hisMatch", "hisMatch", "paddle.to_tensor", "fake_match_eye_A.unsqueeze.unsqueeze.unsqueeze", "paddle.to_tensor", "fake_match_eye_B.unsqueeze.unsqueeze.unsqueeze", "makeup_model.MakeupModel.l1_criterion", "makeup_model.MakeupModel.l1_criterion", "makeup_model.MakeupModel.vgg", "makeup_model.MakeupModel.vgg", "makeup_model.MakeupModel.vgg", "makeup_model.MakeupModel.vgg", "paddle.unsqueeze", "makeup_model.MakeupModel.loss_G.backward", "makeup_model.MakeupModel.cycle_criterion", "makeup_model.MakeupModel.cycle_criterion", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.cast", "paddle.clip", "makeup_model.MakeupModel.l1_criterion", "makeup_model.MakeupModel.idt_criterion", "makeup_model.MakeupModel.idt_criterion", "makeup_model.MakeupModel.numpy", "makeup_model.MakeupModel.numpy", "real_A.numpy", "real_B.numpy", "fake_A.numpy", "fake_B.numpy", "makeup_model.MakeupModel.numpy", "makeup_model.MakeupModel.numpy", "makeup_model.MakeupModel.numpy", "makeup_model.MakeupModel.numpy", "makeup_model.MakeupModel.l2_criterion", "makeup_model.MakeupModel.l2_criterion", "paddle.cast", "paddle.cast"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.preprocess.mask_preprocess", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.preprocess.hisMatch", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.preprocess.hisMatch", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.preprocess.mask_preprocess", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.preprocess.hisMatch", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.preprocess.hisMatch", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.preprocess.mask_preprocess", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.preprocess.hisMatch", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.preprocess.hisMatch"], ["", "def", "backward_G", "(", "self", ")", ":", "\n", "        ", "\"\"\"Calculate the loss for generators G_A and G_B\"\"\"", "\n", "\n", "lambda_A", "=", "self", ".", "lambda_a", "\n", "lambda_B", "=", "self", ".", "lambda_b", "\n", "lambda_vgg", "=", "5e-3", "\n", "\n", "# Identity loss", "\n", "if", "self", ".", "idt_criterion", ":", "\n", "            ", "self", ".", "idt_A", ",", "_", "=", "self", ".", "nets", "[", "'netG'", "]", "(", "self", ".", "real_A", ",", "self", ".", "real_A", ",", "\n", "self", ".", "P_A", ",", "self", ".", "P_A", ",", "\n", "self", ".", "c_m_idt_a", ",", "self", ".", "mask_A_aug", ",", "\n", "self", ".", "mask_B_aug", ")", "# G_A(A)", "\n", "self", ".", "loss_idt_A", "=", "self", ".", "idt_criterion", "(", "self", ".", "idt_A", ",", "\n", "self", ".", "real_A", ")", "*", "lambda_A", "\n", "self", ".", "idt_B", ",", "_", "=", "self", ".", "nets", "[", "'netG'", "]", "(", "self", ".", "real_B", ",", "self", ".", "real_B", ",", "\n", "self", ".", "P_B", ",", "self", ".", "P_B", ",", "\n", "self", ".", "c_m_idt_b", ",", "self", ".", "mask_A_aug", ",", "\n", "self", ".", "mask_B_aug", ")", "# G_A(A)", "\n", "self", ".", "loss_idt_B", "=", "self", ".", "idt_criterion", "(", "self", ".", "idt_B", ",", "\n", "self", ".", "real_B", ")", "*", "lambda_B", "\n", "\n", "# visual", "\n", "self", ".", "visual_items", "[", "'idt_A'", "]", "=", "self", ".", "idt_A", "\n", "self", ".", "visual_items", "[", "'idt_B'", "]", "=", "self", ".", "idt_B", "\n", "", "else", ":", "\n", "            ", "self", ".", "loss_idt_A", "=", "0", "\n", "self", ".", "loss_idt_B", "=", "0", "\n", "\n", "# GAN loss D_A(G_A(A))", "\n", "", "self", ".", "loss_G_A", "=", "self", ".", "gan_criterion", "(", "self", ".", "nets", "[", "'netD_A'", "]", "(", "self", ".", "fake_A", ")", ",", "\n", "True", ")", "\n", "# GAN loss D_B(G_B(B))", "\n", "self", ".", "loss_G_B", "=", "self", ".", "gan_criterion", "(", "self", ".", "nets", "[", "'netD_B'", "]", "(", "self", ".", "fake_B", ")", ",", "\n", "True", ")", "\n", "# Forward cycle loss || G_B(G_A(A)) - A||", "\n", "self", ".", "loss_cycle_A", "=", "self", ".", "cycle_criterion", "(", "self", ".", "rec_A", ",", "\n", "self", ".", "real_A", ")", "*", "lambda_A", "\n", "# Backward cycle loss || G_A(G_B(B)) - B||", "\n", "self", ".", "loss_cycle_B", "=", "self", ".", "cycle_criterion", "(", "self", ".", "rec_B", ",", "\n", "self", ".", "real_B", ")", "*", "lambda_B", "\n", "\n", "self", ".", "losses", "[", "'G_A_adv_loss'", "]", "=", "self", ".", "loss_G_A", "\n", "self", ".", "losses", "[", "'G_B_adv_loss'", "]", "=", "self", ".", "loss_G_B", "\n", "\n", "mask_A_lip", "=", "self", ".", "mask_A_aug", "[", ":", ",", "0", "]", ".", "unsqueeze", "(", "1", ")", "\n", "mask_B_lip", "=", "self", ".", "mask_B_aug", "[", ":", ",", "0", "]", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "mask_A_lip_np", "=", "mask_A_lip", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", "\n", "mask_B_lip_np", "=", "mask_B_lip", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", "\n", "mask_A_lip_np", ",", "mask_B_lip_np", ",", "index_A_lip", ",", "index_B_lip", "=", "mask_preprocess", "(", "\n", "mask_A_lip_np", ",", "mask_B_lip_np", ")", "\n", "real_A", "=", "paddle", ".", "clip", "(", "(", "self", ".", "real_A", "+", "1.0", ")", "/", "2.0", ",", "0.0", ",", "1.0", ")", "*", "255.0", "\n", "real_A_np", "=", "real_A", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", "\n", "real_B", "=", "paddle", ".", "clip", "(", "(", "self", ".", "real_B", "+", "1.0", ")", "/", "2.0", ",", "0.0", ",", "1.0", ")", "*", "255.0", "\n", "real_B_np", "=", "real_B", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", "\n", "fake_A", "=", "paddle", ".", "clip", "(", "(", "self", ".", "fake_A", "+", "1.0", ")", "/", "2.0", ",", "0.0", ",", "1.0", ")", "*", "255.0", "\n", "fake_A_np", "=", "fake_A", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", "\n", "fake_B", "=", "paddle", ".", "clip", "(", "(", "self", ".", "fake_B", "+", "1.0", ")", "/", "2.0", ",", "0.0", ",", "1.0", ")", "*", "255.0", "\n", "fake_B_np", "=", "fake_B", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", "\n", "\n", "fake_match_lip_A", "=", "hisMatch", "(", "fake_A_np", ",", "real_B_np", ",", "mask_A_lip_np", ",", "\n", "mask_B_lip_np", ",", "index_A_lip", ")", "\n", "fake_match_lip_B", "=", "hisMatch", "(", "fake_B_np", ",", "real_A_np", ",", "mask_B_lip_np", ",", "\n", "mask_A_lip_np", ",", "index_B_lip", ")", "\n", "fake_match_lip_A", "=", "paddle", ".", "to_tensor", "(", "fake_match_lip_A", ")", "\n", "fake_match_lip_A", ".", "stop_gradient", "=", "True", "\n", "fake_match_lip_A", "=", "fake_match_lip_A", ".", "unsqueeze", "(", "0", ")", "\n", "fake_match_lip_B", "=", "paddle", ".", "to_tensor", "(", "fake_match_lip_B", ")", "\n", "fake_match_lip_B", ".", "stop_gradient", "=", "True", "\n", "fake_match_lip_B", "=", "fake_match_lip_B", ".", "unsqueeze", "(", "0", ")", "\n", "fake_A_lip_masked", "=", "fake_A", "*", "mask_A_lip", "\n", "fake_B_lip_masked", "=", "fake_B", "*", "mask_B_lip", "\n", "g_A_lip_loss_his", "=", "self", ".", "l1_criterion", "(", "fake_A_lip_masked", ",", "\n", "fake_match_lip_A", ")", "\n", "g_B_lip_loss_his", "=", "self", ".", "l1_criterion", "(", "fake_B_lip_masked", ",", "\n", "fake_match_lip_B", ")", "\n", "\n", "#skin", "\n", "mask_A_skin", "=", "self", ".", "mask_A_aug", "[", ":", ",", "1", "]", ".", "unsqueeze", "(", "1", ")", "\n", "mask_B_skin", "=", "self", ".", "mask_B_aug", "[", ":", ",", "1", "]", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "mask_A_skin_np", "=", "mask_A_skin", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", "\n", "mask_B_skin_np", "=", "mask_B_skin", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", "\n", "mask_A_skin_np", ",", "mask_B_skin_np", ",", "index_A_skin", ",", "index_B_skin", "=", "mask_preprocess", "(", "\n", "mask_A_skin_np", ",", "mask_B_skin_np", ")", "\n", "\n", "fake_match_skin_A", "=", "hisMatch", "(", "fake_A_np", ",", "real_B_np", ",", "mask_A_skin_np", ",", "\n", "mask_B_skin_np", ",", "index_A_skin", ")", "\n", "fake_match_skin_B", "=", "hisMatch", "(", "fake_B_np", ",", "real_A_np", ",", "mask_B_skin_np", ",", "\n", "mask_A_skin_np", ",", "index_B_skin", ")", "\n", "fake_match_skin_A", "=", "paddle", ".", "to_tensor", "(", "fake_match_skin_A", ")", "\n", "fake_match_skin_A", ".", "stop_gradient", "=", "True", "\n", "fake_match_skin_A", "=", "fake_match_skin_A", ".", "unsqueeze", "(", "0", ")", "\n", "fake_match_skin_B", "=", "paddle", ".", "to_tensor", "(", "fake_match_skin_B", ")", "\n", "fake_match_skin_B", ".", "stop_gradient", "=", "True", "\n", "fake_match_skin_B", "=", "fake_match_skin_B", ".", "unsqueeze", "(", "0", ")", "\n", "fake_A_skin_masked", "=", "fake_A", "*", "mask_A_skin", "\n", "fake_B_skin_masked", "=", "fake_B", "*", "mask_B_skin", "\n", "g_A_skin_loss_his", "=", "self", ".", "l1_criterion", "(", "fake_A_skin_masked", ",", "\n", "fake_match_skin_A", ")", "\n", "g_B_skin_loss_his", "=", "self", ".", "l1_criterion", "(", "fake_B_skin_masked", ",", "\n", "fake_match_skin_B", ")", "\n", "\n", "#eye", "\n", "mask_A_eye", "=", "self", ".", "mask_A_aug", "[", ":", ",", "2", "]", ".", "unsqueeze", "(", "1", ")", "\n", "mask_B_eye", "=", "self", ".", "mask_B_aug", "[", ":", ",", "2", "]", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "mask_A_eye_np", "=", "mask_A_eye", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", "\n", "mask_B_eye_np", "=", "mask_B_eye", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", "\n", "mask_A_eye_np", ",", "mask_B_eye_np", ",", "index_A_eye", ",", "index_B_eye", "=", "mask_preprocess", "(", "\n", "mask_A_eye_np", ",", "mask_B_eye_np", ")", "\n", "\n", "fake_match_eye_A", "=", "hisMatch", "(", "fake_A_np", ",", "real_B_np", ",", "mask_A_eye_np", ",", "\n", "mask_B_eye_np", ",", "index_A_eye", ")", "\n", "fake_match_eye_B", "=", "hisMatch", "(", "fake_B_np", ",", "real_A_np", ",", "mask_B_eye_np", ",", "\n", "mask_A_eye_np", ",", "index_B_eye", ")", "\n", "fake_match_eye_A", "=", "paddle", ".", "to_tensor", "(", "fake_match_eye_A", ")", "\n", "fake_match_eye_A", ".", "stop_gradient", "=", "True", "\n", "fake_match_eye_A", "=", "fake_match_eye_A", ".", "unsqueeze", "(", "0", ")", "\n", "fake_match_eye_B", "=", "paddle", ".", "to_tensor", "(", "fake_match_eye_B", ")", "\n", "fake_match_eye_B", ".", "stop_gradient", "=", "True", "\n", "fake_match_eye_B", "=", "fake_match_eye_B", ".", "unsqueeze", "(", "0", ")", "\n", "fake_A_eye_masked", "=", "fake_A", "*", "mask_A_eye", "\n", "fake_B_eye_masked", "=", "fake_B", "*", "mask_B_eye", "\n", "g_A_eye_loss_his", "=", "self", ".", "l1_criterion", "(", "fake_A_eye_masked", ",", "\n", "fake_match_eye_A", ")", "\n", "g_B_eye_loss_his", "=", "self", ".", "l1_criterion", "(", "fake_B_eye_masked", ",", "\n", "fake_match_eye_B", ")", "\n", "\n", "self", ".", "loss_G_A_his", "=", "(", "g_A_eye_loss_his", "+", "g_A_lip_loss_his", "+", "\n", "g_A_skin_loss_his", "*", "0.1", ")", "*", "0.1", "\n", "self", ".", "loss_G_B_his", "=", "(", "g_B_eye_loss_his", "+", "g_B_lip_loss_his", "+", "\n", "g_B_skin_loss_his", "*", "0.1", ")", "*", "0.1", "\n", "\n", "self", ".", "losses", "[", "'G_A_his_loss'", "]", "=", "self", ".", "loss_G_A_his", "\n", "self", ".", "losses", "[", "'G_B_his_loss'", "]", "=", "self", ".", "loss_G_B_his", "\n", "\n", "#vgg loss", "\n", "vgg_s", "=", "self", ".", "vgg", "(", "self", ".", "real_A", ")", "\n", "vgg_s", ".", "stop_gradient", "=", "True", "\n", "vgg_fake_A", "=", "self", ".", "vgg", "(", "self", ".", "fake_A", ")", "\n", "self", ".", "loss_A_vgg", "=", "self", ".", "l2_criterion", "(", "vgg_fake_A", ",", "\n", "vgg_s", ")", "*", "lambda_A", "*", "lambda_vgg", "\n", "\n", "vgg_r", "=", "self", ".", "vgg", "(", "self", ".", "real_B", ")", "\n", "vgg_r", ".", "stop_gradient", "=", "True", "\n", "vgg_fake_B", "=", "self", ".", "vgg", "(", "self", ".", "fake_B", ")", "\n", "self", ".", "loss_B_vgg", "=", "self", ".", "l2_criterion", "(", "vgg_fake_B", ",", "\n", "vgg_r", ")", "*", "lambda_B", "*", "lambda_vgg", "\n", "\n", "self", ".", "loss_rec", "=", "(", "self", ".", "loss_cycle_A", "*", "0.2", "+", "self", ".", "loss_cycle_B", "*", "0.2", "+", "\n", "self", ".", "loss_A_vgg", "+", "self", ".", "loss_B_vgg", ")", "*", "0.5", "\n", "self", ".", "loss_idt", "=", "(", "self", ".", "loss_idt_A", "+", "self", ".", "loss_idt_B", ")", "*", "0.1", "\n", "\n", "self", ".", "losses", "[", "'G_A_vgg_loss'", "]", "=", "self", ".", "loss_A_vgg", "\n", "self", ".", "losses", "[", "'G_B_vgg_loss'", "]", "=", "self", ".", "loss_B_vgg", "\n", "self", ".", "losses", "[", "'G_rec_loss'", "]", "=", "self", ".", "loss_rec", "\n", "self", ".", "losses", "[", "'G_idt_loss'", "]", "=", "self", ".", "loss_idt", "\n", "\n", "# bg consistency loss", "\n", "mask_A_consis", "=", "paddle", ".", "cast", "(", "\n", "(", "self", ".", "mask_A", "==", "0", ")", ",", "dtype", "=", "'float32'", ")", "+", "paddle", ".", "cast", "(", "\n", "(", "self", ".", "mask_A", "==", "10", ")", ",", "dtype", "=", "'float32'", ")", "+", "paddle", ".", "cast", "(", "\n", "(", "self", ".", "mask_A", "==", "8", ")", ",", "dtype", "=", "'float32'", ")", "\n", "mask_A_consis", "=", "paddle", ".", "unsqueeze", "(", "paddle", ".", "clip", "(", "mask_A_consis", ",", "0", ",", "1", ")", ",", "1", ")", "\n", "self", ".", "loss_G_bg_consis", "=", "self", ".", "l1_criterion", "(", "\n", "self", ".", "real_A", "*", "mask_A_consis", ",", "self", ".", "fake_A", "*", "mask_A_consis", ")", "*", "0.1", "\n", "\n", "# combined loss and calculate gradients", "\n", "self", ".", "loss_G", "=", "self", ".", "loss_G_A", "+", "self", ".", "loss_G_B", "+", "self", ".", "loss_rec", "+", "self", ".", "loss_idt", "+", "self", ".", "loss_G_A_his", "+", "self", ".", "loss_G_B_his", "+", "self", ".", "loss_G_bg_consis", "\n", "self", ".", "loss_G", ".", "backward", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.makeup_model.MakeupModel.train_iter": [[365, 391], ["makeup_model.MakeupModel.forward", "makeup_model.MakeupModel.set_requires_grad", "makeup_model.MakeupModel.backward_G", "makeup_model.MakeupModel.optimizers[].minimize", "makeup_model.MakeupModel.optimizers[].clear_gradients", "makeup_model.MakeupModel.set_requires_grad", "makeup_model.MakeupModel.backward_D_A", "makeup_model.MakeupModel.optimizers[].minimize", "makeup_model.MakeupModel.optimizers[].clear_gradients", "makeup_model.MakeupModel.set_requires_grad", "makeup_model.MakeupModel.backward_D_B", "makeup_model.MakeupModel.optimizers[].minimize", "makeup_model.MakeupModel.optimizers[].clear_gradients"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.vgg16.forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.backward_G", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.cycle_gan_model.CycleGANModel.backward_D_A", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.cycle_gan_model.CycleGANModel.backward_D_B"], ["", "def", "train_iter", "(", "self", ",", "optimizers", "=", "None", ")", ":", "\n", "        ", "\"\"\"Calculate losses, gradients, and update network weights; called in every training iteration\"\"\"", "\n", "# forward", "\n", "self", ".", "forward", "(", ")", "# compute fake images and reconstruction images.", "\n", "# G_A and G_B", "\n", "self", ".", "set_requires_grad", "(", "\n", "[", "self", ".", "nets", "[", "'netD_A'", "]", ",", "self", ".", "nets", "[", "'netD_B'", "]", "]", ",", "\n", "False", ")", "# Ds require no gradients when optimizing Gs", "\n", "# self.optimizer_G.clear_gradients() #zero_grad()  # set G_A and G_B's gradients to zero", "\n", "self", ".", "backward_G", "(", ")", "# calculate gradients for G_A and G_B", "\n", "self", ".", "optimizers", "[", "'optimizer_G'", "]", ".", "minimize", "(", "\n", "self", ".", "loss_G", ")", "#step()       # update G_A and G_B's weights", "\n", "self", ".", "optimizers", "[", "'optimizer_G'", "]", ".", "clear_gradients", "(", ")", "\n", "# D_A and D_B", "\n", "self", ".", "set_requires_grad", "(", "self", ".", "nets", "[", "'netD_A'", "]", ",", "True", ")", "\n", "# self.optimizer_D.clear_gradients() #zero_grad()   # set D_A and D_B's gradients to zero", "\n", "self", ".", "backward_D_A", "(", ")", "# calculate gradients for D_A", "\n", "self", ".", "optimizers", "[", "'optimizer_DA'", "]", ".", "minimize", "(", "\n", "self", ".", "loss_D_A", ")", "#step()  # update D_A and D_B's weights", "\n", "self", ".", "optimizers", "[", "'optimizer_DA'", "]", ".", "clear_gradients", "(", ")", "#zero_g", "\n", "self", ".", "set_requires_grad", "(", "self", ".", "nets", "[", "'netD_B'", "]", ",", "True", ")", "\n", "\n", "self", ".", "backward_D_B", "(", ")", "# calculate graidents for D_B", "\n", "self", ".", "optimizers", "[", "'optimizer_DB'", "]", ".", "minimize", "(", "\n", "self", ".", "loss_D_B", ")", "#step()  # update D_A and D_B's weights", "\n", "self", ".", "optimizers", "[", "'optimizer_DB'", "]", ".", "clear_gradients", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.ugatit_model.UGATITModel.__init__": [[37, 97], ["base_model.BaseModel.__init__", "generators.builder.build_generator", "generators.builder.build_generator", "modules.init.init_weights", "modules.init.init_weights", "modules.nn.RhoClipper", "discriminators.builder.build_discriminator", "discriminators.builder.build_discriminator", "discriminators.builder.build_discriminator", "discriminators.builder.build_discriminator", "modules.init.init_weights", "modules.init.init_weights", "modules.init.init_weights", "modules.init.init_weights", "criterions.build_criterion", "criterions.build_criterion", "criterions.build_criterion"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.PixelShufflePack.init_weights", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.PixelShufflePack.init_weights", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.builder.build_discriminator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.builder.build_discriminator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.builder.build_discriminator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.builder.build_discriminator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.PixelShufflePack.init_weights", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.PixelShufflePack.init_weights", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.PixelShufflePack.init_weights", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.PixelShufflePack.init_weights", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion"], ["def", "__init__", "(", "self", ",", "\n", "generator", ",", "\n", "discriminator_g", "=", "None", ",", "\n", "discriminator_l", "=", "None", ",", "\n", "l1_criterion", "=", "None", ",", "\n", "mse_criterion", "=", "None", ",", "\n", "bce_criterion", "=", "None", ",", "\n", "direction", "=", "'a2b'", ",", "\n", "adv_weight", "=", "1.0", ",", "\n", "cycle_weight", "=", "10.0", ",", "\n", "identity_weight", "=", "10.0", ",", "\n", "cam_weight", "=", "1000.0", ")", ":", "\n", "        ", "\"\"\"Initialize the CycleGAN class.\n\n        Args:\n            generator (dict): config of generator.\n            discriminator_g (dict): config of discriminator_g.\n            discriminator_l (dict): config of discriminator_l.\n            l1_criterion (dict): config of l1_criterion.\n            mse_criterion (dict): config of mse_criterion.\n            bce_criterion (dict): config of bce_criterion.\n            direction (str): direction of dataset, default: 'a2b'.\n            adv_weight (float): adversial loss weight, default: 1.0.\n            cycle_weight (float): cycle loss weight, default: 10.0.\n            identity_weight (float): identity loss weight, default: 10.0.\n            cam_weight (float): cam loss weight, default: 1000.0.\n        \"\"\"", "\n", "super", "(", "UGATITModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "adv_weight", "=", "adv_weight", "\n", "self", ".", "cycle_weight", "=", "cycle_weight", "\n", "self", ".", "identity_weight", "=", "identity_weight", "\n", "self", ".", "cam_weight", "=", "cam_weight", "\n", "self", ".", "direction", "=", "direction", "\n", "# define networks (both Generators and discriminators)", "\n", "# The naming is different from those used in the paper.", "\n", "self", ".", "nets", "[", "'genA2B'", "]", "=", "build_generator", "(", "generator", ")", "\n", "self", ".", "nets", "[", "'genB2A'", "]", "=", "build_generator", "(", "generator", ")", "\n", "init_weights", "(", "self", ".", "nets", "[", "'genA2B'", "]", ")", "\n", "init_weights", "(", "self", ".", "nets", "[", "'genB2A'", "]", ")", "\n", "\n", "if", "discriminator_g", "and", "discriminator_l", ":", "\n", "# define discriminators", "\n", "            ", "self", ".", "nets", "[", "'disGA'", "]", "=", "build_discriminator", "(", "discriminator_g", ")", "\n", "self", ".", "nets", "[", "'disGB'", "]", "=", "build_discriminator", "(", "discriminator_g", ")", "\n", "self", ".", "nets", "[", "'disLA'", "]", "=", "build_discriminator", "(", "discriminator_l", ")", "\n", "self", ".", "nets", "[", "'disLB'", "]", "=", "build_discriminator", "(", "discriminator_l", ")", "\n", "init_weights", "(", "self", ".", "nets", "[", "'disGA'", "]", ")", "\n", "init_weights", "(", "self", ".", "nets", "[", "'disGB'", "]", ")", "\n", "init_weights", "(", "self", ".", "nets", "[", "'disLA'", "]", ")", "\n", "init_weights", "(", "self", ".", "nets", "[", "'disLB'", "]", ")", "\n", "\n", "# define loss functions", "\n", "", "if", "l1_criterion", ":", "\n", "            ", "self", ".", "L1_loss", "=", "build_criterion", "(", "l1_criterion", ")", "\n", "", "if", "bce_criterion", ":", "\n", "            ", "self", ".", "BCE_loss", "=", "build_criterion", "(", "bce_criterion", ")", "\n", "", "if", "mse_criterion", ":", "\n", "            ", "self", ".", "MSE_loss", "=", "build_criterion", "(", "mse_criterion", ")", "\n", "\n", "", "self", ".", "Rho_clipper", "=", "RhoClipper", "(", "0", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.ugatit_model.UGATITModel.setup_input": [[98, 123], ["paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor"], "methods", ["None"], ["", "def", "setup_input", "(", "self", ",", "input", ")", ":", "\n", "        ", "\"\"\"Unpack input data from the dataloader and perform necessary pre-processing steps.\n\n        Args:\n            input (dict): include the data itself and its metadata information.\n\n        The option 'direction' can be used to swap domain A and domain B.\n        \"\"\"", "\n", "AtoB", "=", "self", ".", "direction", "==", "'a2b'", "\n", "\n", "if", "AtoB", ":", "\n", "            ", "if", "'A'", "in", "input", ":", "\n", "                ", "self", ".", "real_A", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'A'", "]", ")", "\n", "", "if", "'B'", "in", "input", ":", "\n", "                ", "self", ".", "real_B", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'B'", "]", ")", "\n", "", "", "else", ":", "\n", "            ", "if", "'B'", "in", "input", ":", "\n", "                ", "self", ".", "real_A", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'B'", "]", ")", "\n", "", "if", "'A'", "in", "input", ":", "\n", "                ", "self", ".", "real_B", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'A'", "]", ")", "\n", "\n", "", "", "if", "'A_paths'", "in", "input", ":", "\n", "            ", "self", ".", "image_paths", "=", "input", "[", "'A_paths'", "]", "\n", "", "elif", "'B_paths'", "in", "input", ":", "\n", "            ", "self", ".", "image_paths", "=", "input", "[", "'B_paths'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.ugatit_model.UGATITModel.forward": [[124, 139], ["hasattr", "hasattr"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ")", ":", "\n", "        ", "\"\"\"Run forward pass; called by both functions <train_iter> and <test_iter>.\"\"\"", "\n", "if", "hasattr", "(", "self", ",", "'real_A'", ")", ":", "\n", "            ", "self", ".", "fake_A2B", ",", "_", ",", "_", "=", "self", ".", "nets", "[", "'genA2B'", "]", "(", "self", ".", "real_A", ")", "\n", "\n", "# visual", "\n", "self", ".", "visual_items", "[", "'real_A'", "]", "=", "self", ".", "real_A", "\n", "self", ".", "visual_items", "[", "'fake_A2B'", "]", "=", "self", ".", "fake_A2B", "\n", "\n", "", "if", "hasattr", "(", "self", ",", "'real_B'", ")", ":", "\n", "            ", "self", ".", "fake_B2A", ",", "_", ",", "_", "=", "self", ".", "nets", "[", "'genB2A'", "]", "(", "self", ".", "real_B", ")", "\n", "\n", "# visual", "\n", "self", ".", "visual_items", "[", "'real_B'", "]", "=", "self", ".", "real_B", "\n", "self", ".", "visual_items", "[", "'fake_B2A'", "]", "=", "self", ".", "fake_B2A", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.ugatit_model.UGATITModel.test_iter": [[140, 154], ["ugatit_model.UGATITModel.nets[].eval", "ugatit_model.UGATITModel.nets[].eval", "ugatit_model.UGATITModel.nets[].train", "ugatit_model.UGATITModel.nets[].train", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "ugatit_model.UGATITModel.forward", "ugatit_model.UGATITModel.compute_visuals"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.vgg16.forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.compute_visuals"], ["", "", "def", "test_iter", "(", "self", ",", "metrics", "=", "None", ")", ":", "\n", "        ", "\"\"\"Forward function used in test time.\n\n        This function wraps <forward> function in no_grad() so we don't save intermediate steps for backprop\n        It also calls <compute_visuals> to produce additional visualization results\n        \"\"\"", "\n", "self", ".", "nets", "[", "'genA2B'", "]", ".", "eval", "(", ")", "\n", "self", ".", "nets", "[", "'genB2A'", "]", ".", "eval", "(", ")", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "            ", "self", ".", "forward", "(", ")", "\n", "self", ".", "compute_visuals", "(", ")", "\n", "\n", "", "self", ".", "nets", "[", "'genA2B'", "]", ".", "train", "(", ")", "\n", "self", ".", "nets", "[", "'genB2A'", "]", ".", "train", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.ugatit_model.UGATITModel.train_iter": [[155, 278], ["ugatit_model.UGATITModel.forward", "optimizers[].clear_grad", "Discriminator_loss.backward", "optimizers[].step", "optimizers[].clear_grad", "ugatit_model.UGATITModel.train_iter._criterion"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.vgg16.forward"], ["", "def", "train_iter", "(", "self", ",", "optimizers", "=", "None", ")", ":", "\n", "        ", "\"\"\"Calculate losses, gradients, and update network weights; called in every training iteration\"\"\"", "\n", "def", "_criterion", "(", "loss_func", ",", "logit", ",", "is_real", ")", ":", "\n", "            ", "if", "is_real", ":", "\n", "                ", "target", "=", "paddle", ".", "ones_like", "(", "logit", ")", "\n", "", "else", ":", "\n", "                ", "target", "=", "paddle", ".", "zeros_like", "(", "logit", ")", "\n", "", "return", "loss_func", "(", "logit", ",", "target", ")", "\n", "\n", "# forward", "\n", "# compute fake images and reconstruction images.", "\n", "", "self", ".", "forward", "(", ")", "\n", "\n", "# update D", "\n", "optimizers", "[", "'optimD'", "]", ".", "clear_grad", "(", ")", "\n", "real_GA_logit", ",", "real_GA_cam_logit", ",", "_", "=", "self", ".", "nets", "[", "'disGA'", "]", "(", "self", ".", "real_A", ")", "\n", "real_LA_logit", ",", "real_LA_cam_logit", ",", "_", "=", "self", ".", "nets", "[", "'disLA'", "]", "(", "self", ".", "real_A", ")", "\n", "real_GB_logit", ",", "real_GB_cam_logit", ",", "_", "=", "self", ".", "nets", "[", "'disGB'", "]", "(", "self", ".", "real_B", ")", "\n", "real_LB_logit", ",", "real_LB_cam_logit", ",", "_", "=", "self", ".", "nets", "[", "'disLB'", "]", "(", "self", ".", "real_B", ")", "\n", "\n", "fake_GA_logit", ",", "fake_GA_cam_logit", ",", "_", "=", "self", ".", "nets", "[", "'disGA'", "]", "(", "self", ".", "fake_B2A", ")", "\n", "fake_LA_logit", ",", "fake_LA_cam_logit", ",", "_", "=", "self", ".", "nets", "[", "'disLA'", "]", "(", "self", ".", "fake_B2A", ")", "\n", "fake_GB_logit", ",", "fake_GB_cam_logit", ",", "_", "=", "self", ".", "nets", "[", "'disGB'", "]", "(", "self", ".", "fake_A2B", ")", "\n", "fake_LB_logit", ",", "fake_LB_cam_logit", ",", "_", "=", "self", ".", "nets", "[", "'disLB'", "]", "(", "self", ".", "fake_A2B", ")", "\n", "\n", "D_ad_loss_GA", "=", "_criterion", "(", "self", ".", "MSE_loss", ",", "\n", "real_GA_logit", ",", "True", ")", "+", "_criterion", "(", "\n", "self", ".", "MSE_loss", ",", "fake_GA_logit", ",", "False", ")", "\n", "\n", "D_ad_cam_loss_GA", "=", "_criterion", "(", "\n", "self", ".", "MSE_loss", ",", "real_GA_cam_logit", ",", "True", ")", "+", "_criterion", "(", "\n", "self", ".", "MSE_loss", ",", "fake_GA_cam_logit", ",", "False", ")", "\n", "\n", "D_ad_loss_LA", "=", "_criterion", "(", "self", ".", "MSE_loss", ",", "\n", "real_LA_logit", ",", "True", ")", "+", "_criterion", "(", "\n", "self", ".", "MSE_loss", ",", "fake_LA_logit", ",", "False", ")", "\n", "\n", "D_ad_cam_loss_LA", "=", "_criterion", "(", "\n", "self", ".", "MSE_loss", ",", "real_LA_cam_logit", ",", "True", ")", "+", "_criterion", "(", "\n", "self", ".", "MSE_loss", ",", "fake_LA_cam_logit", ",", "False", ")", "\n", "\n", "D_ad_loss_GB", "=", "_criterion", "(", "self", ".", "MSE_loss", ",", "\n", "real_GB_logit", ",", "True", ")", "+", "_criterion", "(", "\n", "self", ".", "MSE_loss", ",", "fake_GB_logit", ",", "False", ")", "\n", "\n", "D_ad_cam_loss_GB", "=", "_criterion", "(", "\n", "self", ".", "MSE_loss", ",", "real_GB_cam_logit", ",", "True", ")", "+", "_criterion", "(", "\n", "self", ".", "MSE_loss", ",", "fake_GB_cam_logit", ",", "False", ")", "\n", "\n", "D_ad_loss_LB", "=", "_criterion", "(", "self", ".", "MSE_loss", ",", "\n", "real_LB_logit", ",", "True", ")", "+", "_criterion", "(", "\n", "self", ".", "MSE_loss", ",", "fake_LB_logit", ",", "False", ")", "\n", "\n", "D_ad_cam_loss_LB", "=", "_criterion", "(", "\n", "self", ".", "MSE_loss", ",", "real_LB_cam_logit", ",", "True", ")", "+", "_criterion", "(", "\n", "self", ".", "MSE_loss", ",", "fake_LB_cam_logit", ",", "False", ")", "\n", "\n", "D_loss_A", "=", "self", ".", "adv_weight", "*", "(", "D_ad_loss_GA", "+", "D_ad_cam_loss_GA", "+", "\n", "D_ad_loss_LA", "+", "D_ad_cam_loss_LA", ")", "\n", "D_loss_B", "=", "self", ".", "adv_weight", "*", "(", "D_ad_loss_GB", "+", "D_ad_cam_loss_GB", "+", "\n", "D_ad_loss_LB", "+", "D_ad_cam_loss_LB", ")", "\n", "\n", "Discriminator_loss", "=", "D_loss_A", "+", "D_loss_B", "\n", "Discriminator_loss", ".", "backward", "(", ")", "\n", "optimizers", "[", "'optimD'", "]", ".", "step", "(", ")", "\n", "\n", "# update G", "\n", "optimizers", "[", "'optimG'", "]", ".", "clear_grad", "(", ")", "\n", "\n", "fake_A2B", ",", "fake_A2B_cam_logit", ",", "_", "=", "self", ".", "nets", "[", "'genA2B'", "]", "(", "self", ".", "real_A", ")", "\n", "fake_B2A", ",", "fake_B2A_cam_logit", ",", "_", "=", "self", ".", "nets", "[", "'genB2A'", "]", "(", "self", ".", "real_B", ")", "\n", "\n", "fake_A2B2A", ",", "_", ",", "_", "=", "self", ".", "nets", "[", "'genB2A'", "]", "(", "fake_A2B", ")", "\n", "fake_B2A2B", ",", "_", ",", "_", "=", "self", ".", "nets", "[", "'genA2B'", "]", "(", "fake_B2A", ")", "\n", "\n", "fake_A2A", ",", "fake_A2A_cam_logit", ",", "_", "=", "self", ".", "nets", "[", "'genB2A'", "]", "(", "self", ".", "real_A", ")", "\n", "fake_B2B", ",", "fake_B2B_cam_logit", ",", "_", "=", "self", ".", "nets", "[", "'genA2B'", "]", "(", "self", ".", "real_B", ")", "\n", "\n", "fake_GA_logit", ",", "fake_GA_cam_logit", ",", "_", "=", "self", ".", "nets", "[", "'disGA'", "]", "(", "fake_B2A", ")", "\n", "fake_LA_logit", ",", "fake_LA_cam_logit", ",", "_", "=", "self", ".", "nets", "[", "'disLA'", "]", "(", "fake_B2A", ")", "\n", "fake_GB_logit", ",", "fake_GB_cam_logit", ",", "_", "=", "self", ".", "nets", "[", "'disGB'", "]", "(", "fake_A2B", ")", "\n", "fake_LB_logit", ",", "fake_LB_cam_logit", ",", "_", "=", "self", ".", "nets", "[", "'disLB'", "]", "(", "fake_A2B", ")", "\n", "\n", "G_ad_loss_GA", "=", "_criterion", "(", "self", ".", "MSE_loss", ",", "fake_GA_logit", ",", "True", ")", "\n", "G_ad_cam_loss_GA", "=", "_criterion", "(", "self", ".", "MSE_loss", ",", "fake_GA_cam_logit", ",", "True", ")", "\n", "G_ad_loss_LA", "=", "_criterion", "(", "self", ".", "MSE_loss", ",", "fake_LA_logit", ",", "True", ")", "\n", "G_ad_cam_loss_LA", "=", "_criterion", "(", "self", ".", "MSE_loss", ",", "fake_LA_cam_logit", ",", "True", ")", "\n", "G_ad_loss_GB", "=", "_criterion", "(", "self", ".", "MSE_loss", ",", "fake_GB_logit", ",", "True", ")", "\n", "G_ad_cam_loss_GB", "=", "_criterion", "(", "self", ".", "MSE_loss", ",", "fake_GB_cam_logit", ",", "True", ")", "\n", "G_ad_loss_LB", "=", "_criterion", "(", "self", ".", "MSE_loss", ",", "fake_LB_logit", ",", "True", ")", "\n", "G_ad_cam_loss_LB", "=", "_criterion", "(", "self", ".", "MSE_loss", ",", "fake_LB_cam_logit", ",", "True", ")", "\n", "\n", "G_recon_loss_A", "=", "self", ".", "L1_loss", "(", "fake_A2B2A", ",", "self", ".", "real_A", ")", "\n", "G_recon_loss_B", "=", "self", ".", "L1_loss", "(", "fake_B2A2B", ",", "self", ".", "real_B", ")", "\n", "\n", "G_identity_loss_A", "=", "self", ".", "L1_loss", "(", "fake_A2A", ",", "self", ".", "real_A", ")", "\n", "G_identity_loss_B", "=", "self", ".", "L1_loss", "(", "fake_B2B", ",", "self", ".", "real_B", ")", "\n", "\n", "G_cam_loss_A", "=", "_criterion", "(", "self", ".", "BCE_loss", ",", "\n", "fake_B2A_cam_logit", ",", "True", ")", "+", "_criterion", "(", "\n", "self", ".", "BCE_loss", ",", "fake_A2A_cam_logit", ",", "False", ")", "\n", "\n", "G_cam_loss_B", "=", "_criterion", "(", "self", ".", "BCE_loss", ",", "\n", "fake_A2B_cam_logit", ",", "True", ")", "+", "_criterion", "(", "\n", "self", ".", "BCE_loss", ",", "fake_B2B_cam_logit", ",", "False", ")", "\n", "\n", "G_loss_A", "=", "self", ".", "adv_weight", "*", "(", "\n", "G_ad_loss_GA", "+", "G_ad_cam_loss_GA", "+", "G_ad_loss_LA", "+", "G_ad_cam_loss_LA", "\n", ")", "+", "self", ".", "cycle_weight", "*", "G_recon_loss_A", "+", "self", ".", "identity_weight", "*", "G_identity_loss_A", "+", "self", ".", "cam_weight", "*", "G_cam_loss_A", "\n", "G_loss_B", "=", "self", ".", "adv_weight", "*", "(", "\n", "G_ad_loss_GB", "+", "G_ad_cam_loss_GB", "+", "G_ad_loss_LB", "+", "G_ad_cam_loss_LB", "\n", ")", "+", "self", ".", "cycle_weight", "*", "G_recon_loss_B", "+", "self", ".", "identity_weight", "*", "G_identity_loss_B", "+", "self", ".", "cam_weight", "*", "G_cam_loss_B", "\n", "\n", "Generator_loss", "=", "G_loss_A", "+", "G_loss_B", "\n", "Generator_loss", ".", "backward", "(", ")", "\n", "optimizers", "[", "'optimG'", "]", ".", "step", "(", ")", "\n", "\n", "# clip parameter of AdaILN and ILN, applied after optimizer step", "\n", "self", ".", "nets", "[", "'genA2B'", "]", ".", "apply", "(", "self", ".", "Rho_clipper", ")", "\n", "self", ".", "nets", "[", "'genB2A'", "]", ".", "apply", "(", "self", ".", "Rho_clipper", ")", "\n", "\n", "self", ".", "losses", "[", "'discriminator_loss'", "]", "=", "Discriminator_loss", "\n", "self", ".", "losses", "[", "'generator_loss'", "]", "=", "Generator_loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.wav2lip_model.Wav2LipModel.__init__": [[57, 85], ["base_model.BaseModel.__init__", "generators.builder.build_generator", "modules.init.init_weights", "discriminators.builder.build_discriminator", "paddle.utils.download.get_weights_path_from_url", "paddle.load", "wav2lip_model.Wav2LipModel.nets[].load_dict", "paddle.nn.L1Loss"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.PixelShufflePack.init_weights", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.builder.build_discriminator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["def", "__init__", "(", "self", ",", "\n", "generator", ",", "\n", "discriminator", "=", "None", ",", "\n", "syncnet_wt", "=", "1.0", ",", "\n", "max_eval_steps", "=", "700", ",", "\n", "is_train", "=", "True", ")", ":", "\n", "        ", "\"\"\"Initialize the Wav2lip class.\n\n        Parameters:\n            opt (config dict)-- stores all the experiment flags; needs to be a subclass of Dict\n        \"\"\"", "\n", "super", "(", "Wav2LipModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "syncnet_wt", "=", "syncnet_wt", "\n", "self", ".", "is_train", "=", "is_train", "\n", "self", ".", "eval_step", "=", "0", "\n", "self", ".", "max_eval_steps", "=", "max_eval_steps", "\n", "self", ".", "eval_sync_losses", ",", "self", ".", "eval_recon_losses", "=", "[", "]", ",", "[", "]", "\n", "# define networks (both generator and discriminator)", "\n", "self", ".", "nets", "[", "'netG'", "]", "=", "build_generator", "(", "generator", ")", "\n", "init_weights", "(", "self", ".", "nets", "[", "'netG'", "]", ",", "distribution", "=", "'uniform'", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "self", ".", "nets", "[", "'netD'", "]", "=", "build_discriminator", "(", "discriminator", ")", "\n", "weights_path", "=", "get_weights_path_from_url", "(", "SYNCNET_WEIGHT_URL", ")", "\n", "params", "=", "paddle", ".", "load", "(", "weights_path", ")", "\n", "self", ".", "nets", "[", "'netD'", "]", ".", "load_dict", "(", "params", ")", "\n", "\n", "", "if", "self", ".", "is_train", ":", "\n", "            ", "self", ".", "recon_loss", "=", "paddle", ".", "nn", ".", "L1Loss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.wav2lip_model.Wav2LipModel.setup_input": [[86, 96], ["paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor"], "methods", ["None"], ["", "", "def", "setup_input", "(", "self", ",", "input", ")", ":", "\n", "        ", "\"\"\"Unpack input data from the dataloader and perform necessary pre-processing steps.\n\n        Parameters:\n            input (dict): include the data itself and its metadata information.\n        \"\"\"", "\n", "self", ".", "x", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'x'", "]", ")", "\n", "self", ".", "indiv_mels", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'indiv_mels'", "]", ")", "\n", "self", ".", "mel", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'mel'", "]", ")", "\n", "self", ".", "y", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'y'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.wav2lip_model.Wav2LipModel.forward": [[97, 101], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ")", ":", "\n", "        ", "\"\"\"Run forward pass; called by both functions <optimize_parameters> and <test>.\"\"\"", "\n", "\n", "self", ".", "g", "=", "self", ".", "nets", "[", "'netG'", "]", "(", "self", ".", "indiv_mels", ",", "self", ".", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.wav2lip_model.Wav2LipModel.backward_G": [[102, 116], ["wav2lip_model.Wav2LipModel.recon_loss", "wav2lip_model.Wav2LipModel.loss_G.backward", "wav2lip_model.get_sync_loss"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.wav2lip_model.get_sync_loss"], ["", "def", "backward_G", "(", "self", ")", ":", "\n", "        ", "\"\"\"Calculate GAN loss for the generator\"\"\"", "\n", "if", "self", ".", "syncnet_wt", ">", "0.", ":", "\n", "            ", "self", ".", "sync_loss", "=", "get_sync_loss", "(", "self", ".", "mel", ",", "self", ".", "g", ",", "self", ".", "nets", "[", "'netD'", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "sync_loss", "=", "0.", "\n", "", "self", ".", "l1_loss", "=", "self", ".", "recon_loss", "(", "self", ".", "g", ",", "self", ".", "y", ")", "\n", "\n", "self", ".", "losses", "[", "'sync_loss'", "]", "=", "self", ".", "sync_loss", "\n", "self", ".", "losses", "[", "'l1_loss'", "]", "=", "self", ".", "l1_loss", "\n", "\n", "self", ".", "loss_G", "=", "self", ".", "syncnet_wt", "*", "self", ".", "sync_loss", "+", "(", "\n", "1", "-", "self", ".", "syncnet_wt", ")", "*", "self", ".", "l1_loss", "\n", "self", ".", "loss_G", ".", "backward", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.wav2lip_model.Wav2LipModel.train_iter": [[117, 127], ["wav2lip_model.Wav2LipModel.forward", "wav2lip_model.Wav2LipModel.set_requires_grad", "wav2lip_model.Wav2LipModel.set_requires_grad", "wav2lip_model.Wav2LipModel.optimizers[].clear_grad", "wav2lip_model.Wav2LipModel.backward_G", "wav2lip_model.Wav2LipModel.optimizers[].step"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.vgg16.forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.backward_G"], ["", "def", "train_iter", "(", "self", ",", "optimizers", "=", "None", ")", ":", "\n", "# forward", "\n", "        ", "self", ".", "forward", "(", ")", "\n", "\n", "# update G", "\n", "self", ".", "set_requires_grad", "(", "self", ".", "nets", "[", "'netD'", "]", ",", "False", ")", "\n", "self", ".", "set_requires_grad", "(", "self", ".", "nets", "[", "'netG'", "]", ",", "True", ")", "\n", "self", ".", "optimizers", "[", "'optimizer_G'", "]", ".", "clear_grad", "(", ")", "\n", "self", ".", "backward_G", "(", ")", "\n", "self", ".", "optimizers", "[", "'optimizer_G'", "]", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.wav2lip_model.Wav2LipModel.test_iter": [[128, 152], ["wav2lip_model.Wav2LipModel.nets[].eval", "wav2lip_model.Wav2LipModel.eval_recon_losses.append", "wav2lip_model.Wav2LipModel.nets[].train", "paddle.no_grad", "wav2lip_model.Wav2LipModel.forward", "wav2lip_model.get_sync_loss", "wav2lip_model.Wav2LipModel.recon_loss", "wav2lip_model.Wav2LipModel.eval_sync_losses.append", "wav2lip_model.Wav2LipModel.numpy().item", "print", "get_sync_loss.numpy().item", "sum", "len", "sum", "len", "wav2lip_model.Wav2LipModel.numpy", "get_sync_loss.numpy"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.vgg16.forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.wav2lip_model.get_sync_loss", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "test_iter", "(", "self", ",", "metrics", "=", "None", ")", ":", "\n", "        ", "self", ".", "eval_step", "+=", "1", "\n", "self", ".", "nets", "[", "'netG'", "]", ".", "eval", "(", ")", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "            ", "self", ".", "forward", "(", ")", "\n", "\n", "sync_loss", "=", "get_sync_loss", "(", "self", ".", "mel", ",", "self", ".", "g", ",", "self", ".", "nets", "[", "'netD'", "]", ")", "\n", "l1loss", "=", "self", ".", "recon_loss", "(", "self", ".", "g", ",", "self", ".", "y", ")", "\n", "\n", "self", ".", "eval_sync_losses", ".", "append", "(", "sync_loss", ".", "numpy", "(", ")", ".", "item", "(", ")", ")", "\n", "", "self", ".", "eval_recon_losses", ".", "append", "(", "l1loss", ".", "numpy", "(", ")", ".", "item", "(", ")", ")", "\n", "if", "self", ".", "eval_step", "==", "self", ".", "max_eval_steps", ":", "\n", "            ", "averaged_sync_loss", "=", "sum", "(", "self", ".", "eval_sync_losses", ")", "/", "len", "(", "\n", "self", ".", "eval_sync_losses", ")", "\n", "averaged_recon_loss", "=", "sum", "(", "self", ".", "eval_recon_losses", ")", "/", "len", "(", "\n", "self", ".", "eval_recon_losses", ")", "\n", "if", "averaged_sync_loss", "<", ".75", ":", "\n", "                ", "self", ".", "syncnet_wt", "=", "0.01", "\n", "\n", "", "print", "(", "'L1: {}, Sync loss: {}'", ".", "format", "(", "averaged_recon_loss", ",", "\n", "averaged_sync_loss", ")", ")", "\n", "self", ".", "eval_step", "=", "0", "\n", "self", ".", "eval_sync_losses", ",", "self", ".", "eval_recon_losses", "=", "[", "]", ",", "[", "]", "\n", "", "self", ".", "nets", "[", "'netG'", "]", ".", "train", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.wav2lip_model.cosine_loss": [[31, 36], ["paddle.nn.BCELoss", "paddle.nn.functional.cosine_similarity", "paddle.nn.BCELoss.", "paddle.nn.functional.cosine_similarity.unsqueeze"], "function", ["None"], ["def", "cosine_loss", "(", "a", ",", "v", ",", "y", ")", ":", "\n", "    ", "logloss", "=", "paddle", ".", "nn", ".", "BCELoss", "(", ")", "\n", "d", "=", "paddle", ".", "nn", ".", "functional", ".", "cosine_similarity", "(", "a", ",", "v", ")", "\n", "loss", "=", "logloss", "(", "d", ".", "unsqueeze", "(", "1", ")", ",", "y", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.wav2lip_model.get_sync_loss": [[38, 44], ["paddle.concat", "netD", "paddle.ones().astype", "wav2lip_model.cosine_loss", "paddle.ones", "range"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.wav2lip_model.cosine_loss"], ["", "def", "get_sync_loss", "(", "mel", ",", "g", ",", "netD", ")", ":", "\n", "    ", "g", "=", "g", "[", ":", ",", ":", ",", ":", ",", "g", ".", "shape", "[", "3", "]", "//", "2", ":", "]", "\n", "g", "=", "paddle", ".", "concat", "(", "[", "g", "[", ":", ",", ":", ",", "i", "]", "for", "i", "in", "range", "(", "syncnet_T", ")", "]", ",", "axis", "=", "1", ")", "\n", "a", ",", "v", "=", "netD", "(", "mel", ",", "g", ")", "\n", "y", "=", "paddle", ".", "ones", "(", "(", "g", ".", "shape", "[", "0", "]", ",", "1", ")", ")", ".", "astype", "(", "'float32'", ")", "\n", "return", "cosine_loss", "(", "a", ",", "v", ",", "y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.drn_model.DRN.__init__": [[35, 80], ["sr_model.BaseSRModel.__init__", "generators.builder.build_generator", "modules.init.init_weights", "range", "len", "generators.drn.DownBlock", "modules.init.init_weights", "discriminators.builder.build_discriminator", "criterions.build_criterion", "criterions.build_criterion", "criterions.build_criterion", "str", "str"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.PixelShufflePack.init_weights", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.PixelShufflePack.init_weights", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.builder.build_discriminator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion"], ["def", "__init__", "(", "self", ",", "\n", "generator", ",", "\n", "lq_loss_weight", "=", "0.1", ",", "\n", "dual_loss_weight", "=", "0.1", ",", "\n", "discriminator", "=", "None", ",", "\n", "pixel_criterion", "=", "None", ",", "\n", "perceptual_criterion", "=", "None", ",", "\n", "gan_criterion", "=", "None", ",", "\n", "params", "=", "None", ")", ":", "\n", "        ", "\"\"\"Initialize the DRN class.\n\n        Args:\n            generator (dict): config of generator.\n            discriminator (dict): config of discriminator.\n            pixel_criterion (dict): config of pixel criterion.\n            perceptual_criterion (dict): config of perceptual criterion.\n            gan_criterion (dict): config of gan criterion.\n        \"\"\"", "\n", "super", "(", "DRN", ",", "self", ")", ".", "__init__", "(", "generator", ")", "\n", "self", ".", "lq_loss_weight", "=", "lq_loss_weight", "\n", "self", ".", "dual_loss_weight", "=", "dual_loss_weight", "\n", "self", ".", "params", "=", "params", "\n", "self", ".", "nets", "[", "'generator'", "]", "=", "build_generator", "(", "generator", ")", "\n", "init_weights", "(", "self", ".", "nets", "[", "'generator'", "]", ")", "\n", "negval", "=", "generator", ".", "negval", "\n", "n_feats", "=", "generator", ".", "n_feats", "\n", "n_colors", "=", "generator", ".", "n_colors", "\n", "self", ".", "scale", "=", "generator", ".", "scale", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "scale", ")", ")", ":", "\n", "            ", "dual_model", "=", "DownBlock", "(", "negval", ",", "n_feats", ",", "n_colors", ",", "2", ")", "\n", "self", ".", "nets", "[", "'dual_model_'", "+", "str", "(", "i", ")", "]", "=", "dual_model", "\n", "init_weights", "(", "self", ".", "nets", "[", "'dual_model_'", "+", "str", "(", "i", ")", "]", ")", "\n", "\n", "", "if", "discriminator", ":", "\n", "            ", "self", ".", "nets", "[", "'discriminator'", "]", "=", "build_discriminator", "(", "discriminator", ")", "\n", "\n", "", "if", "pixel_criterion", ":", "\n", "            ", "self", ".", "pixel_criterion", "=", "build_criterion", "(", "pixel_criterion", ")", "\n", "\n", "", "if", "perceptual_criterion", ":", "\n", "            ", "self", ".", "perceptual_criterion", "=", "build_criterion", "(", "perceptual_criterion", ")", "\n", "\n", "", "if", "gan_criterion", ":", "\n", "            ", "self", ".", "gan_criterion", "=", "build_criterion", "(", "gan_criterion", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.drn_model.DRN.setup_input": [[81, 93], ["paddle.to_tensor", "isinstance", "paddle.to_tensor", "len"], "methods", ["None"], ["", "", "def", "setup_input", "(", "self", ",", "input", ")", ":", "\n", "        ", "self", ".", "lq", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'lq'", "]", ")", "\n", "self", ".", "visual_items", "[", "'lq'", "]", "=", "self", ".", "lq", "\n", "\n", "if", "isinstance", "(", "self", ".", "scale", ",", "(", "list", ",", "tuple", ")", ")", "and", "len", "(", "\n", "self", ".", "scale", ")", "==", "2", "and", "'lqx2'", "in", "input", ":", "\n", "            ", "self", ".", "lqx2", "=", "input", "[", "'lqx2'", "]", "\n", "\n", "", "if", "'gt'", "in", "input", ":", "\n", "            ", "self", ".", "gt", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'gt'", "]", ")", "\n", "self", ".", "visual_items", "[", "'gt'", "]", "=", "self", ".", "gt", "\n", "", "self", ".", "image_paths", "=", "input", "[", "'lq_path'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.drn_model.DRN.train_iter": [[94, 135], ["hasattr", "range", "drn_model.DRN.pixel_criterion", "range", "drn_model.DRN.pixel_criterion", "range", "optimizers[].clear_grad", "optimizers[].clear_grad", "loss_total.backward", "optimizers[].step", "optimizers[].step", "lr.append", "len", "sr2lr.append", "len", "len", "drn_model.DRN.pixel_criterion", "drn_model.DRN.pixel_criterion", "str", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "train_iter", "(", "self", ",", "optimizers", "=", "None", ")", ":", "\n", "        ", "lr", "=", "[", "self", ".", "lq", "]", "\n", "\n", "if", "hasattr", "(", "self", ",", "'lqx2'", ")", ":", "\n", "            ", "lr", ".", "append", "(", "self", ".", "lqx2", ")", "\n", "\n", "", "hr", "=", "self", ".", "gt", "\n", "\n", "sr", "=", "self", ".", "nets", "[", "'generator'", "]", "(", "self", ".", "lq", ")", "\n", "\n", "sr2lr", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "scale", ")", ")", ":", "\n", "            ", "sr2lr_i", "=", "self", ".", "nets", "[", "'dual_model_'", "+", "str", "(", "i", ")", "]", "(", "sr", "[", "i", "-", "len", "(", "self", ".", "scale", ")", "]", ")", "\n", "sr2lr", ".", "append", "(", "sr2lr_i", ")", "\n", "\n", "# compute primary loss", "\n", "", "loss_primary", "=", "self", ".", "pixel_criterion", "(", "sr", "[", "-", "1", "]", ",", "hr", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "sr", ")", ")", ":", "\n", "            ", "if", "self", ".", "lq_loss_weight", ">", "0.0", ":", "\n", "                ", "loss_primary", "+=", "self", ".", "pixel_criterion", "(", "\n", "sr", "[", "i", "-", "1", "-", "len", "(", "sr", ")", "]", ",", "lr", "[", "i", "-", "len", "(", "sr", ")", "]", ")", "*", "self", ".", "lq_loss_weight", "\n", "\n", "# compute dual loss", "\n", "", "", "loss_dual", "=", "self", ".", "pixel_criterion", "(", "sr2lr", "[", "0", "]", ",", "lr", "[", "0", "]", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "self", ".", "scale", ")", ")", ":", "\n", "            ", "if", "self", ".", "dual_loss_weight", ">", "0.0", ":", "\n", "                ", "loss_dual", "+=", "self", ".", "pixel_criterion", "(", "sr2lr", "[", "i", "]", ",", "\n", "lr", "[", "i", "]", ")", "*", "self", ".", "dual_loss_weight", "\n", "\n", "", "", "loss_total", "=", "loss_primary", "+", "loss_dual", "\n", "\n", "optimizers", "[", "'optimG'", "]", ".", "clear_grad", "(", ")", "\n", "optimizers", "[", "'optimD'", "]", ".", "clear_grad", "(", ")", "\n", "loss_total", ".", "backward", "(", ")", "\n", "optimizers", "[", "'optimG'", "]", ".", "step", "(", ")", "\n", "optimizers", "[", "'optimD'", "]", ".", "step", "(", ")", "\n", "\n", "self", ".", "losses", "[", "'loss_promary'", "]", "=", "loss_primary", "\n", "self", ".", "losses", "[", "'loss_dual'", "]", "=", "loss_dual", "\n", "self", ".", "losses", "[", "'loss_total'", "]", "=", "loss_total", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.drn_model.DRN.test_iter": [[136, 152], ["drn_model.DRN.nets[].eval", "drn_model.DRN.nets[].train", "zip", "paddle.no_grad", "out_img.append", "gt_img.append", "metrics.values", "utils.visual.tensor2img", "utils.visual.tensor2img", "metric.update"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.tensor2img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.tensor2img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update"], ["", "def", "test_iter", "(", "self", ",", "metrics", "=", "None", ")", ":", "\n", "        ", "self", ".", "nets", "[", "'generator'", "]", ".", "eval", "(", ")", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "            ", "self", ".", "output", "=", "self", ".", "nets", "[", "'generator'", "]", "(", "self", ".", "lq", ")", "[", "-", "1", "]", "\n", "self", ".", "visual_items", "[", "'output'", "]", "=", "self", ".", "output", "\n", "", "self", ".", "nets", "[", "'generator'", "]", ".", "train", "(", ")", "\n", "\n", "out_img", "=", "[", "]", "\n", "gt_img", "=", "[", "]", "\n", "for", "out_tensor", ",", "gt_tensor", "in", "zip", "(", "self", ".", "output", ",", "self", ".", "gt", ")", ":", "\n", "            ", "out_img", ".", "append", "(", "tensor2img", "(", "out_tensor", ",", "(", "0.", ",", "255.", ")", ")", ")", "\n", "gt_img", ".", "append", "(", "tensor2img", "(", "gt_tensor", ",", "(", "0.", ",", "255.", ")", ")", ")", "\n", "\n", "", "if", "metrics", "is", "not", "None", ":", "\n", "            ", "for", "metric", "in", "metrics", ".", "values", "(", ")", ":", "\n", "                ", "metric", ".", "update", "(", "out_img", ",", "gt_img", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.firstorder_model.FirstOrderModel.__init__": [[52, 78], ["base_model.BaseModel.__init__", "generator_cfg.update", "generator_cfg.update", "generator_cfg.update", "generators.builder.build_generator", "discriminator_cfg.update", "discriminator_cfg.update", "discriminators.builder.build_discriminator", "firstorder_model.Visualizer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.builder.build_discriminator"], ["def", "__init__", "(", "self", ",", "\n", "common_params", ",", "\n", "train_params", ",", "\n", "generator", ",", "\n", "discriminator", "=", "None", ")", ":", "\n", "        ", "super", "(", "FirstOrderModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# def local var", "\n", "self", ".", "input_data", "=", "None", "\n", "self", ".", "generated", "=", "None", "\n", "self", ".", "losses_generator", "=", "None", "\n", "self", ".", "train_params", "=", "train_params", "\n", "# define networks", "\n", "generator_cfg", "=", "generator", "\n", "generator_cfg", ".", "update", "(", "{", "'common_params'", ":", "common_params", "}", ")", "\n", "generator_cfg", ".", "update", "(", "{", "'train_params'", ":", "train_params", "}", ")", "\n", "generator_cfg", ".", "update", "(", "\n", "{", "'dis_scales'", ":", "discriminator", ".", "discriminator_cfg", ".", "scales", "}", ")", "\n", "self", ".", "nets", "[", "'Gen_Full'", "]", "=", "build_generator", "(", "generator_cfg", ")", "\n", "discriminator_cfg", "=", "discriminator", "\n", "discriminator_cfg", ".", "update", "(", "{", "'common_params'", ":", "common_params", "}", ")", "\n", "discriminator_cfg", ".", "update", "(", "{", "'train_params'", ":", "train_params", "}", ")", "\n", "self", ".", "nets", "[", "'Dis'", "]", "=", "build_discriminator", "(", "discriminator_cfg", ")", "\n", "self", ".", "visualizer", "=", "Visualizer", "(", ")", "\n", "self", ".", "test_loss", "=", "[", "]", "\n", "self", ".", "is_train", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.firstorder_model.FirstOrderModel.setup_lr_schedulers": [[79, 93], ["paddle.optimizer.lr.MultiStepDecay", "paddle.optimizer.lr.MultiStepDecay", "paddle.optimizer.lr.MultiStepDecay", "paddle.optimizer.lr.MultiStepDecay", "paddle.optimizer.lr.MultiStepDecay", "paddle.optimizer.lr.MultiStepDecay", "paddle.optimizer.lr.MultiStepDecay", "paddle.optimizer.lr.MultiStepDecay", "paddle.optimizer.lr.MultiStepDecay"], "methods", ["None"], ["", "def", "setup_lr_schedulers", "(", "self", ",", "lr_cfg", ")", ":", "\n", "        ", "self", ".", "kp_lr", "=", "MultiStepDecay", "(", "learning_rate", "=", "lr_cfg", "[", "'lr_kp_detector'", "]", ",", "\n", "milestones", "=", "lr_cfg", "[", "'epoch_milestones'", "]", ",", "\n", "gamma", "=", "0.1", ")", "\n", "self", ".", "gen_lr", "=", "MultiStepDecay", "(", "learning_rate", "=", "lr_cfg", "[", "'lr_generator'", "]", ",", "\n", "milestones", "=", "lr_cfg", "[", "'epoch_milestones'", "]", ",", "\n", "gamma", "=", "0.1", ")", "\n", "self", ".", "dis_lr", "=", "MultiStepDecay", "(", "learning_rate", "=", "lr_cfg", "[", "'lr_discriminator'", "]", ",", "\n", "milestones", "=", "lr_cfg", "[", "'epoch_milestones'", "]", ",", "\n", "gamma", "=", "0.1", ")", "\n", "self", ".", "lr_scheduler", "=", "{", "\n", "\"kp_lr\"", ":", "self", ".", "kp_lr", ",", "\n", "\"gen_lr\"", ":", "self", ".", "gen_lr", ",", "\n", "\"dis_lr\"", ":", "self", ".", "dis_lr", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.firstorder_model.FirstOrderModel.setup_net_parallel": [[95, 105], ["isinstance"], "methods", ["None"], ["", "def", "setup_net_parallel", "(", "self", ")", ":", "\n", "        ", "if", "isinstance", "(", "self", ".", "nets", "[", "'Gen_Full'", "]", ",", "paddle", ".", "DataParallel", ")", ":", "\n", "            ", "self", ".", "nets", "[", "'kp_detector'", "]", "=", "self", ".", "nets", "[", "\n", "'Gen_Full'", "]", ".", "_layers", ".", "kp_extractor", "\n", "self", ".", "nets", "[", "'generator'", "]", "=", "self", ".", "nets", "[", "'Gen_Full'", "]", ".", "_layers", ".", "generator", "\n", "self", ".", "nets", "[", "'discriminator'", "]", "=", "self", ".", "nets", "[", "'Dis'", "]", ".", "_layers", ".", "discriminator", "\n", "", "else", ":", "\n", "            ", "self", ".", "nets", "[", "'kp_detector'", "]", "=", "self", ".", "nets", "[", "'Gen_Full'", "]", ".", "kp_extractor", "\n", "self", ".", "nets", "[", "'generator'", "]", "=", "self", ".", "nets", "[", "'Gen_Full'", "]", ".", "generator", "\n", "self", ".", "nets", "[", "'discriminator'", "]", "=", "self", ".", "nets", "[", "'Dis'", "]", ".", "discriminator", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.firstorder_model.FirstOrderModel.setup_optimizers": [[106, 128], ["firstorder_model.FirstOrderModel.setup_net_parallel", "firstorder_model.init_weight", "firstorder_model.init_weight", "firstorder_model.init_weight", "solver.build_optimizer", "solver.build_optimizer", "solver.build_optimizer", "firstorder_model.FirstOrderModel.nets[].parameters", "firstorder_model.FirstOrderModel.nets[].parameters", "firstorder_model.FirstOrderModel.nets[].parameters"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.firstorder_model.FirstOrderModelMobile.setup_net_parallel", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.firstorder_model.init_weight", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.firstorder_model.init_weight", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.firstorder_model.init_weight", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.solver.builder.build_optimizer", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.solver.builder.build_optimizer", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.solver.builder.build_optimizer"], ["", "", "def", "setup_optimizers", "(", "self", ",", "lr_cfg", ",", "optimizer", ")", ":", "\n", "        ", "self", ".", "setup_net_parallel", "(", ")", "\n", "# init params", "\n", "init_weight", "(", "self", ".", "nets", "[", "'kp_detector'", "]", ")", "\n", "init_weight", "(", "self", ".", "nets", "[", "'generator'", "]", ")", "\n", "init_weight", "(", "self", ".", "nets", "[", "'discriminator'", "]", ")", "\n", "\n", "# define loss functions", "\n", "self", ".", "losses", "=", "{", "}", "\n", "\n", "self", ".", "optimizers", "[", "'optimizer_KP'", "]", "=", "build_optimizer", "(", "\n", "optimizer", ",", "\n", "self", ".", "kp_lr", ",", "\n", "parameters", "=", "self", ".", "nets", "[", "'kp_detector'", "]", ".", "parameters", "(", ")", ")", "\n", "self", ".", "optimizers", "[", "'optimizer_Gen'", "]", "=", "build_optimizer", "(", "\n", "optimizer", ",", "\n", "self", ".", "gen_lr", ",", "\n", "parameters", "=", "self", ".", "nets", "[", "'generator'", "]", ".", "parameters", "(", ")", ")", "\n", "self", ".", "optimizers", "[", "'optimizer_Dis'", "]", "=", "build_optimizer", "(", "\n", "optimizer", ",", "\n", "self", ".", "dis_lr", ",", "\n", "parameters", "=", "self", ".", "nets", "[", "'discriminator'", "]", ".", "parameters", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.firstorder_model.FirstOrderModel.setup_input": [[129, 131], ["None"], "methods", ["None"], ["", "def", "setup_input", "(", "self", ",", "input", ")", ":", "\n", "        ", "self", ".", "input_data", "=", "input", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.firstorder_model.FirstOrderModel.forward": [[132, 136], ["firstorder_model.FirstOrderModel.input_data.copy"], "methods", ["None"], ["", "def", "forward", "(", "self", ")", ":", "\n", "        ", "\"\"\"Run forward pass; called by both functions <optimize_parameters> and <test>.\"\"\"", "\n", "self", ".", "losses_generator", ",", "self", ".", "generated", "=", "self", ".", "nets", "[", "'Gen_Full'", "]", "(", "self", ".", "input_data", ".", "copy", "(", ")", ",", "self", ".", "nets", "[", "'discriminator'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.firstorder_model.FirstOrderModel.backward_G": [[138, 143], ["paddle.add_n", "paddle.add_n", "paddle.add_n", "paddle.add_n", "paddle.add_n", "paddle.add_n", "paddle.add_n", "paddle.add_n", "paddle.add_n", "dict", "paddle.add_n.backward", "paddle.add_n.backward", "paddle.add_n.backward", "val.mean", "zip", "firstorder_model.FirstOrderModel.losses_generator.values", "firstorder_model.FirstOrderModel.losses_generator.keys"], "methods", ["None"], ["", "def", "backward_G", "(", "self", ")", ":", "\n", "        ", "loss_values", "=", "[", "val", ".", "mean", "(", ")", "for", "val", "in", "self", ".", "losses_generator", ".", "values", "(", ")", "]", "\n", "loss", "=", "paddle", ".", "add_n", "(", "loss_values", ")", "\n", "self", ".", "losses", "=", "dict", "(", "zip", "(", "self", ".", "losses_generator", ".", "keys", "(", ")", ",", "loss_values", ")", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.firstorder_model.FirstOrderModel.backward_D": [[144, 151], ["paddle.add_n", "paddle.add_n", "paddle.add_n", "paddle.add_n", "paddle.add_n", "paddle.add_n", "paddle.add_n", "paddle.add_n", "paddle.add_n", "paddle.add_n.backward", "paddle.add_n.backward", "paddle.add_n.backward", "firstorder_model.FirstOrderModel.losses.update", "firstorder_model.FirstOrderModel.input_data.copy", "val.mean", "dict", "losses_discriminator.values", "zip", "losses_discriminator.keys"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update"], ["", "def", "backward_D", "(", "self", ")", ":", "\n", "        ", "losses_discriminator", "=", "self", ".", "nets", "[", "'Dis'", "]", "(", "self", ".", "input_data", ".", "copy", "(", ")", ",", "\n", "self", ".", "generated", ")", "\n", "loss_values", "=", "[", "val", ".", "mean", "(", ")", "for", "val", "in", "losses_discriminator", ".", "values", "(", ")", "]", "\n", "loss", "=", "paddle", ".", "add_n", "(", "loss_values", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "losses", ".", "update", "(", "dict", "(", "zip", "(", "losses_discriminator", ".", "keys", "(", ")", ",", "loss_values", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.firstorder_model.FirstOrderModel.train_iter": [[152, 169], ["firstorder_model.FirstOrderModel.forward", "firstorder_model.FirstOrderModel.set_requires_grad", "firstorder_model.FirstOrderModel.optimizers[].clear_grad", "firstorder_model.FirstOrderModel.optimizers[].clear_grad", "firstorder_model.FirstOrderModel.backward_G", "firstorder_model.FirstOrderModel.optimizers[].step", "firstorder_model.FirstOrderModel.optimizers[].step", "firstorder_model.FirstOrderModel.set_requires_grad", "firstorder_model.FirstOrderModel.optimizers[].clear_grad", "firstorder_model.FirstOrderModel.backward_D", "firstorder_model.FirstOrderModel.optimizers[].step"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.vgg16.forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.backward_G", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.backward_D"], ["", "def", "train_iter", "(", "self", ",", "optimizers", "=", "None", ")", ":", "\n", "        ", "self", ".", "train", "=", "True", "\n", "self", ".", "forward", "(", ")", "\n", "# update G", "\n", "self", ".", "set_requires_grad", "(", "self", ".", "nets", "[", "'discriminator'", "]", ",", "False", ")", "\n", "self", ".", "optimizers", "[", "'optimizer_KP'", "]", ".", "clear_grad", "(", ")", "\n", "self", ".", "optimizers", "[", "'optimizer_Gen'", "]", ".", "clear_grad", "(", ")", "\n", "self", ".", "backward_G", "(", ")", "\n", "self", ".", "optimizers", "[", "'optimizer_KP'", "]", ".", "step", "(", ")", "\n", "self", ".", "optimizers", "[", "'optimizer_Gen'", "]", ".", "step", "(", ")", "\n", "\n", "# update D", "\n", "if", "self", ".", "train_params", "[", "'loss_weights'", "]", "[", "'generator_gan'", "]", "!=", "0", ":", "\n", "            ", "self", ".", "set_requires_grad", "(", "self", ".", "nets", "[", "'discriminator'", "]", ",", "True", ")", "\n", "self", ".", "optimizers", "[", "'optimizer_Dis'", "]", ".", "clear_grad", "(", ")", "\n", "self", ".", "backward_D", "(", ")", "\n", "self", ".", "optimizers", "[", "'optimizer_Dis'", "]", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.firstorder_model.FirstOrderModel.test_iter": [[170, 196], ["firstorder_model.FirstOrderModel.nets[].eval", "firstorder_model.FirstOrderModel.nets[].eval", "print", "firstorder_model.FirstOrderModel.nets[].train", "firstorder_model.FirstOrderModel.nets[].train", "firstorder_model.FirstOrderModel.setup_net_parallel", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "range", "firstorder_model.FirstOrderModel.visualizer.visualize", "out.update", "paddle.abs().mean().cpu().numpy", "paddle.abs().mean().cpu().numpy", "paddle.abs().mean().cpu().numpy", "paddle.abs().mean().cpu().numpy", "paddle.abs().mean().cpu().numpy", "paddle.abs().mean().cpu().numpy", "paddle.abs().mean().cpu().numpy", "paddle.abs().mean().cpu().numpy", "paddle.abs().mean().cpu().numpy", "firstorder_model.FirstOrderModel.test_loss.append", "numpy.mean", "paddle.abs().mean().cpu", "paddle.abs().mean().cpu", "paddle.abs().mean().cpu", "paddle.abs().mean().cpu", "paddle.abs().mean().cpu", "paddle.abs().mean().cpu", "paddle.abs().mean().cpu", "paddle.abs().mean().cpu", "paddle.abs().mean().cpu", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.firstorder_model.FirstOrderModelMobile.setup_net_parallel", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.firstorder_model.Visualizer.visualize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "", "def", "test_iter", "(", "self", ",", "metrics", "=", "None", ")", ":", "\n", "        ", "if", "not", "self", ".", "is_train", ":", "\n", "            ", "self", ".", "is_train", "=", "True", "\n", "self", ".", "setup_net_parallel", "(", ")", "\n", "\n", "", "self", ".", "nets", "[", "'kp_detector'", "]", ".", "eval", "(", ")", "\n", "self", ".", "nets", "[", "'generator'", "]", ".", "eval", "(", ")", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "            ", "kp_source", "=", "self", ".", "nets", "[", "'kp_detector'", "]", "(", "self", ".", "input_data", "[", "'video'", "]", "[", ":", ",", ":", ",", "\n", "0", "]", ")", "\n", "for", "frame_idx", "in", "range", "(", "self", ".", "input_data", "[", "'video'", "]", ".", "shape", "[", "2", "]", ")", ":", "\n", "                ", "source", "=", "self", ".", "input_data", "[", "'video'", "]", "[", ":", ",", ":", ",", "0", "]", "\n", "driving", "=", "self", ".", "input_data", "[", "'video'", "]", "[", ":", ",", ":", ",", "frame_idx", "]", "\n", "kp_driving", "=", "self", ".", "nets", "[", "'kp_detector'", "]", "(", "driving", ")", "\n", "out", "=", "self", ".", "nets", "[", "'generator'", "]", "(", "source", ",", "\n", "kp_source", "=", "kp_source", ",", "\n", "kp_driving", "=", "kp_driving", ")", "\n", "out", ".", "update", "(", "{", "'kp_source'", ":", "kp_source", ",", "'kp_driving'", ":", "kp_driving", "}", ")", "\n", "loss", "=", "paddle", ".", "abs", "(", "out", "[", "'prediction'", "]", "-", "\n", "driving", ")", ".", "mean", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "self", ".", "test_loss", ".", "append", "(", "loss", ")", "\n", "", "self", ".", "visual_items", "[", "'driving_source_gen'", "]", "=", "self", ".", "visualizer", ".", "visualize", "(", "\n", "driving", ",", "source", ",", "out", ")", "\n", "", "print", "(", "\"Reconstruction loss: %s\"", "%", "np", ".", "mean", "(", "self", ".", "test_loss", ")", ")", "\n", "self", ".", "nets", "[", "'kp_detector'", "]", ".", "train", "(", ")", "\n", "self", ".", "nets", "[", "'generator'", "]", ".", "train", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.firstorder_model.FirstOrderModel.export_model": [[217, 242], ["paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "paddle.rand", "os.path.join", "paddle.jit.save", "paddle.jit.save", "paddle.jit.save", "paddle.jit.save", "paddle.jit.save", "paddle.jit.save", "paddle.jit.save", "paddle.jit.save", "paddle.jit.save", "firstorder_model.FirstOrderModel.InferGenerator", "firstorder_model.FirstOrderModel.set_generator", "paddle.jit.save", "paddle.jit.save", "paddle.jit.save", "paddle.jit.save", "paddle.jit.save", "paddle.jit.save", "paddle.jit.save", "paddle.jit.save", "paddle.jit.save", "os.path.exists", "os.makedirs", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs"], ["", "", "def", "export_model", "(", "self", ",", "export_model", "=", "None", ",", "output_dir", "=", "None", ",", "inputs_size", "=", "[", "]", ",", "export_serving_model", "=", "False", ",", "model_name", "=", "None", ")", ":", "\n", "\n", "        ", "source", "=", "paddle", ".", "rand", "(", "shape", "=", "inputs_size", "[", "0", "]", ",", "dtype", "=", "'float32'", ")", "\n", "driving", "=", "paddle", ".", "rand", "(", "shape", "=", "inputs_size", "[", "1", "]", ",", "dtype", "=", "'float32'", ")", "\n", "value", "=", "paddle", ".", "rand", "(", "shape", "=", "inputs_size", "[", "2", "]", ",", "dtype", "=", "'float32'", ")", "\n", "j", "=", "paddle", ".", "rand", "(", "shape", "=", "inputs_size", "[", "3", "]", ",", "dtype", "=", "'float32'", ")", "\n", "value2", "=", "paddle", ".", "rand", "(", "shape", "=", "inputs_size", "[", "2", "]", ",", "dtype", "=", "'float32'", ")", "\n", "j2", "=", "paddle", ".", "rand", "(", "shape", "=", "inputs_size", "[", "3", "]", ",", "dtype", "=", "'float32'", ")", "\n", "driving1", "=", "{", "'value'", ":", "value", ",", "'jacobian'", ":", "j", "}", "\n", "driving2", "=", "{", "'value'", ":", "value2", ",", "'jacobian'", ":", "j2", "}", "\n", "driving3", "=", "{", "'value'", ":", "value", ",", "'jacobian'", ":", "j", "}", "\n", "\n", "if", "output_dir", "is", "None", ":", "\n", "            ", "output_dir", "=", "'inference_model'", "\n", "", "outpath", "=", "os", ".", "path", ".", "join", "(", "output_dir", ",", "\"fom_dy2st\"", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "outpath", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "outpath", ")", "\n", "", "paddle", ".", "jit", ".", "save", "(", "self", ".", "nets", "[", "'Gen_Full'", "]", ".", "kp_extractor", ",", "\n", "os", ".", "path", ".", "join", "(", "outpath", ",", "\"kp_detector\"", ")", ",", "\n", "input_spec", "=", "[", "source", "]", ")", "\n", "infer_generator", "=", "self", ".", "InferGenerator", "(", ")", "\n", "infer_generator", ".", "set_generator", "(", "self", ".", "nets", "[", "'Gen_Full'", "]", ".", "generator", ")", "\n", "paddle", ".", "jit", ".", "save", "(", "infer_generator", ",", "\n", "os", ".", "path", ".", "join", "(", "outpath", ",", "\"generator\"", ")", ",", "\n", "input_spec", "=", "[", "source", ",", "driving1", ",", "driving2", ",", "driving3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.firstorder_model.FirstOrderModelMobile.__init__": [[249, 302], ["firstorder_model.FirstOrderModel.__init__", "generator_ori_cfg.update", "generator_ori_cfg.update", "generator_ori_cfg.update", "generators.builder.build_generator", "discriminator_cfg.update", "discriminator_cfg.update", "discriminators.builder.build_discriminator", "generator_cfg.update", "generator_cfg.update", "generator_cfg.update", "generators.builder.build_generator", "firstorder_model.Visualizer", "print", "generator_cfg.update", "print", "generator_cfg.update", "print"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.builder.build_discriminator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update"], ["def", "__init__", "(", "self", ",", "\n", "common_params", ",", "\n", "train_params", ",", "\n", "generator_ori", ",", "\n", "generator", ",", "\n", "mode", ",", "\n", "kp_weight_path", "=", "None", ",", "\n", "gen_weight_path", "=", "None", ",", "\n", "discriminator", "=", "None", ")", ":", "\n", "        ", "super", "(", "FirstOrderModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "modes", "=", "[", "\"kp_detector\"", ",", "\"generator\"", ",", "\"both\"", "]", "\n", "assert", "mode", "in", "modes", "\n", "# def local var", "\n", "self", ".", "input_data", "=", "None", "\n", "self", ".", "generated", "=", "None", "\n", "self", ".", "losses_generator", "=", "None", "\n", "self", ".", "train_params", "=", "train_params", "\n", "\n", "# fix origin fom model for distill", "\n", "generator_ori_cfg", "=", "generator_ori", "\n", "generator_ori_cfg", ".", "update", "(", "{", "'common_params'", ":", "common_params", "}", ")", "\n", "generator_ori_cfg", ".", "update", "(", "{", "'train_params'", ":", "train_params", "}", ")", "\n", "generator_ori_cfg", ".", "update", "(", "\n", "{", "'dis_scales'", ":", "discriminator", ".", "discriminator_cfg", ".", "scales", "}", ")", "\n", "self", ".", "Gen_Full_ori", "=", "build_generator", "(", "generator_ori_cfg", ")", "\n", "discriminator_cfg", "=", "discriminator", "\n", "discriminator_cfg", ".", "update", "(", "{", "'common_params'", ":", "common_params", "}", ")", "\n", "discriminator_cfg", ".", "update", "(", "{", "'train_params'", ":", "train_params", "}", ")", "\n", "self", ".", "nets", "[", "'Dis'", "]", "=", "build_discriminator", "(", "discriminator_cfg", ")", "\n", "\n", "# define networks", "\n", "generator_cfg", "=", "generator", "\n", "generator_cfg", ".", "update", "(", "{", "'common_params'", ":", "common_params", "}", ")", "\n", "generator_cfg", ".", "update", "(", "{", "'train_params'", ":", "train_params", "}", ")", "\n", "generator_cfg", ".", "update", "(", "\n", "{", "'dis_scales'", ":", "discriminator", ".", "discriminator_cfg", ".", "scales", "}", ")", "\n", "if", "(", "mode", "==", "\"kp_detector\"", ")", ":", "\n", "            ", "print", "(", "\"just train kp_detector, fix generator\"", ")", "\n", "generator_cfg", ".", "update", "(", "\n", "{", "'generator_cfg'", ":", "generator_ori_cfg", "[", "'generator_cfg'", "]", "}", ")", "\n", "", "elif", "mode", "==", "\"generator\"", ":", "\n", "            ", "print", "(", "\"just train generator, fix kp_detector\"", ")", "\n", "generator_cfg", ".", "update", "(", "\n", "{", "'kp_detector_cfg'", ":", "generator_ori_cfg", "[", "'kp_detector_cfg'", "]", "}", ")", "\n", "", "elif", "mode", "==", "\"both\"", ":", "\n", "            ", "print", "(", "\"train both kp_detector and generator\"", ")", "\n", "", "self", ".", "mode", "=", "mode", "\n", "self", ".", "nets", "[", "'Gen_Full'", "]", "=", "build_generator", "(", "generator_cfg", ")", "\n", "self", ".", "kp_weight_path", "=", "kp_weight_path", "\n", "self", ".", "gen_weight_path", "=", "gen_weight_path", "\n", "self", ".", "visualizer", "=", "Visualizer", "(", ")", "\n", "self", ".", "test_loss", "=", "[", "]", "\n", "self", ".", "is_train", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.firstorder_model.FirstOrderModelMobile.setup_net_parallel": [[304, 333], ["isinstance", "get_path_from_url", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "print", "firstorder_model.FirstOrderModelMobile.nets[].set_state_dict", "firstorder_model.FirstOrderModelMobile.nets[].parameters", "print", "firstorder_model.FirstOrderModelMobile.nets[].set_state_dict", "firstorder_model.FirstOrderModelMobile.nets[].parameters"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["", "def", "setup_net_parallel", "(", "self", ")", ":", "\n", "        ", "if", "isinstance", "(", "self", ".", "nets", "[", "'Gen_Full'", "]", ",", "paddle", ".", "DataParallel", ")", ":", "\n", "            ", "self", ".", "nets", "[", "'kp_detector'", "]", "=", "self", ".", "nets", "[", "\n", "'Gen_Full'", "]", ".", "_layers", ".", "kp_extractor", "\n", "self", ".", "nets", "[", "'generator'", "]", "=", "self", ".", "nets", "[", "'Gen_Full'", "]", ".", "_layers", ".", "generator", "\n", "self", ".", "nets", "[", "'generator'", "]", "=", "self", ".", "nets", "[", "'Gen_Full'", "]", ".", "_layers", ".", "generator", "\n", "self", ".", "nets", "[", "'discriminator'", "]", "=", "self", ".", "nets", "[", "'Dis'", "]", ".", "_layers", ".", "discriminator", "\n", "", "else", ":", "\n", "            ", "self", ".", "nets", "[", "'kp_detector'", "]", "=", "self", ".", "nets", "[", "'Gen_Full'", "]", ".", "kp_extractor", "\n", "self", ".", "nets", "[", "'generator'", "]", "=", "self", ".", "nets", "[", "'Gen_Full'", "]", ".", "generator", "\n", "self", ".", "nets", "[", "'discriminator'", "]", "=", "self", ".", "nets", "[", "'Dis'", "]", ".", "discriminator", "\n", "", "self", ".", "kp_detector_ori", "=", "self", ".", "Gen_Full_ori", ".", "kp_extractor", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "return", "\n", "\n", "", "from", "ppgan", ".", "utils", ".", "download", "import", "get_path_from_url", "\n", "vox_cpk_weight_url", "=", "'https://paddlegan.bj.bcebos.com/applications/first_order_model/vox-cpk.pdparams'", "\n", "weight_path", "=", "get_path_from_url", "(", "vox_cpk_weight_url", ")", "\n", "checkpoint", "=", "paddle", ".", "load", "(", "weight_path", ")", "\n", "if", "(", "self", ".", "mode", "==", "\"kp_detector\"", ")", ":", "\n", "            ", "print", "(", "\"load pretrained generator... \"", ")", "\n", "self", ".", "nets", "[", "'generator'", "]", ".", "set_state_dict", "(", "checkpoint", "[", "'generator'", "]", ")", "\n", "for", "param", "in", "self", ".", "nets", "[", "'generator'", "]", ".", "parameters", "(", ")", ":", "\n", "                ", "param", ".", "stop_gradient", "=", "True", "\n", "", "", "elif", "self", ".", "mode", "==", "\"generator\"", ":", "\n", "            ", "print", "(", "\"load pretrained kp_detector... \"", ")", "\n", "self", ".", "nets", "[", "'kp_detector'", "]", ".", "set_state_dict", "(", "checkpoint", "[", "'kp_detector'", "]", ")", "\n", "for", "param", "in", "self", ".", "nets", "[", "'kp_detector'", "]", ".", "parameters", "(", ")", ":", "\n", "                ", "param", ".", "stop_gradient", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.firstorder_model.FirstOrderModelMobile.setup_optimizers": [[334, 366], ["firstorder_model.FirstOrderModelMobile.setup_net_parallel", "firstorder_model.init_weight", "solver.build_optimizer", "firstorder_model.init_weight", "solver.build_optimizer", "firstorder_model.FirstOrderModelMobile.nets[].parameters", "firstorder_model.init_weight", "solver.build_optimizer", "firstorder_model.FirstOrderModelMobile.nets[].parameters", "firstorder_model.FirstOrderModel.setup_optimizers", "print", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "firstorder_model.FirstOrderModelMobile.nets[].set_state_dict", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "firstorder_model.FirstOrderModelMobile.nets[].set_state_dict", "firstorder_model.FirstOrderModelMobile.nets[].parameters"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.firstorder_model.FirstOrderModelMobile.setup_net_parallel", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.firstorder_model.init_weight", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.solver.builder.build_optimizer", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.firstorder_model.init_weight", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.solver.builder.build_optimizer", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.firstorder_model.init_weight", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.solver.builder.build_optimizer", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.photopen_model.PhotoPenModel.setup_optimizers", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["", "", "", "def", "setup_optimizers", "(", "self", ",", "lr_cfg", ",", "optimizer", ")", ":", "\n", "        ", "self", ".", "setup_net_parallel", "(", ")", "\n", "# init params", "\n", "init_weight", "(", "self", ".", "nets", "[", "'discriminator'", "]", ")", "\n", "self", ".", "optimizers", "[", "'optimizer_Dis'", "]", "=", "build_optimizer", "(", "\n", "optimizer", ",", "\n", "self", ".", "dis_lr", ",", "\n", "parameters", "=", "self", ".", "nets", "[", "'discriminator'", "]", ".", "parameters", "(", ")", ")", "\n", "\n", "if", "(", "self", ".", "mode", "==", "\"kp_detector\"", ")", ":", "\n", "            ", "init_weight", "(", "self", ".", "nets", "[", "'kp_detector'", "]", ")", "\n", "self", ".", "optimizers", "[", "'optimizer_KP'", "]", "=", "build_optimizer", "(", "\n", "optimizer", ",", "\n", "self", ".", "kp_lr", ",", "\n", "parameters", "=", "self", ".", "nets", "[", "'kp_detector'", "]", ".", "parameters", "(", ")", ")", "\n", "", "elif", "self", ".", "mode", "==", "\"generator\"", ":", "\n", "            ", "init_weight", "(", "self", ".", "nets", "[", "'generator'", "]", ")", "\n", "self", ".", "optimizers", "[", "'optimizer_Gen'", "]", "=", "build_optimizer", "(", "\n", "optimizer", ",", "\n", "self", ".", "gen_lr", ",", "\n", "parameters", "=", "self", ".", "nets", "[", "'generator'", "]", ".", "parameters", "(", ")", ")", "\n", "", "elif", "self", ".", "mode", "==", "\"both\"", ":", "\n", "            ", "super", "(", "FirstOrderModelMobile", ",", "\n", "self", ")", ".", "setup_optimizers", "(", "lr_cfg", ",", "optimizer", ")", "\n", "print", "(", "\"load both pretrained kp_detector and generator\"", ")", "\n", "checkpoint", "=", "paddle", ".", "load", "(", "self", ".", "kp_weight_path", ")", "\n", "self", ".", "nets", "[", "'kp_detector'", "]", ".", "set_state_dict", "(", "checkpoint", "[", "'kp_detector'", "]", ")", "\n", "checkpoint", "=", "paddle", ".", "load", "(", "self", ".", "gen_weight_path", ")", "\n", "self", ".", "nets", "[", "'generator'", "]", ".", "set_state_dict", "(", "checkpoint", "[", "'generator'", "]", ")", "\n", "\n", "# define loss functions", "\n", "", "self", ".", "losses", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.firstorder_model.FirstOrderModelMobile.forward": [[367, 375], ["firstorder_model.FirstOrderModelMobile.input_data.copy", "firstorder_model.FirstOrderModelMobile.input_data.copy"], "methods", ["None"], ["", "def", "forward", "(", "self", ")", ":", "\n", "        ", "\"\"\"Run forward pass; called by both functions <optimize_parameters> and <test>.\"\"\"", "\n", "if", "(", "self", ".", "mode", "==", "\"kp_detector_distill\"", ")", ":", "\n", "            ", "self", ".", "losses_generator", ",", "self", ".", "generated", "=", "self", ".", "nets", "[", "'Gen_Full'", "]", "(", "self", ".", "input_data", ".", "copy", "(", ")", ",", "self", ".", "nets", "[", "'discriminator'", "]", ",", "self", ".", "kp_detector_ori", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "losses_generator", ",", "self", ".", "generated", "=", "self", ".", "nets", "[", "'Gen_Full'", "]", "(", "self", ".", "input_data", ".", "copy", "(", ")", ",", "self", ".", "nets", "[", "'discriminator'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.firstorder_model.FirstOrderModelMobile.train_iter": [[376, 399], ["firstorder_model.FirstOrderModelMobile.forward", "firstorder_model.FirstOrderModelMobile.set_requires_grad", "firstorder_model.FirstOrderModel.train_iter", "firstorder_model.FirstOrderModelMobile.optimizers[].clear_grad", "firstorder_model.FirstOrderModelMobile.backward_G", "firstorder_model.FirstOrderModelMobile.optimizers[].step", "firstorder_model.FirstOrderModelMobile.optimizers[].clear_grad", "firstorder_model.FirstOrderModelMobile.backward_G", "firstorder_model.FirstOrderModelMobile.optimizers[].step", "firstorder_model.FirstOrderModelMobile.set_requires_grad", "firstorder_model.FirstOrderModelMobile.optimizers[].clear_grad", "firstorder_model.FirstOrderModelMobile.backward_D", "firstorder_model.FirstOrderModelMobile.optimizers[].step"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.vgg16.forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.train_iter", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.backward_G", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.backward_G", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.backward_D"], ["", "", "def", "train_iter", "(", "self", ",", "optimizers", "=", "None", ")", ":", "\n", "        ", "self", ".", "is_train", "=", "True", "\n", "if", "(", "self", ".", "mode", "==", "\"both\"", ")", ":", "\n", "            ", "super", "(", "FirstOrderModelMobile", ",", "self", ")", ".", "train_iter", "(", "optimizers", "=", "optimizers", ")", "\n", "return", "\n", "", "self", ".", "forward", "(", ")", "\n", "# update G", "\n", "self", ".", "set_requires_grad", "(", "self", ".", "nets", "[", "'discriminator'", "]", ",", "False", ")", "\n", "if", "(", "self", ".", "mode", "==", "\"kp_detector\"", ")", ":", "\n", "            ", "self", ".", "optimizers", "[", "'optimizer_KP'", "]", ".", "clear_grad", "(", ")", "\n", "self", ".", "backward_G", "(", ")", "\n", "self", ".", "optimizers", "[", "'optimizer_KP'", "]", ".", "step", "(", ")", "\n", "", "if", "(", "self", ".", "mode", "==", "\"generator\"", ")", ":", "\n", "            ", "self", ".", "optimizers", "[", "'optimizer_Gen'", "]", ".", "clear_grad", "(", ")", "\n", "self", ".", "backward_G", "(", ")", "\n", "self", ".", "optimizers", "[", "'optimizer_Gen'", "]", ".", "step", "(", ")", "\n", "\n", "# update D", "\n", "", "if", "self", ".", "train_params", "[", "'loss_weights'", "]", "[", "'generator_gan'", "]", "!=", "0", ":", "\n", "            ", "self", ".", "set_requires_grad", "(", "self", ".", "nets", "[", "'discriminator'", "]", ",", "True", ")", "\n", "self", ".", "optimizers", "[", "'optimizer_Dis'", "]", ".", "clear_grad", "(", ")", "\n", "self", ".", "backward_D", "(", ")", "\n", "self", ".", "optimizers", "[", "'optimizer_Dis'", "]", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.firstorder_model.Visualizer.__init__": [[402, 407], ["paddle.utils.try_import", "paddle.utils.try_import", "paddle.utils.try_import", "paddle.utils.try_import.get_cmap", "paddle.utils.try_import.get_cmap", "paddle.utils.try_import.get_cmap"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "kp_size", "=", "3", ",", "draw_border", "=", "False", ",", "colormap", "=", "'gist_rainbow'", ")", ":", "\n", "        ", "plt", "=", "try_import", "(", "'matplotlib.pyplot'", ")", "\n", "self", ".", "kp_size", "=", "kp_size", "\n", "self", ".", "draw_border", "=", "draw_border", "\n", "self", ".", "colormap", "=", "plt", ".", "get_cmap", "(", "colormap", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.firstorder_model.Visualizer.draw_image_with_kp": [[408, 424], ["numpy.copy", "cv2.cvtColor", "enumerate", "numpy.array", "cv2.circle", "cv2.cvtColor().astype", "int", "int", "int", "cv2.applyColorMap", "int", "int", "cv2.cvtColor", "numpy.array().astype", "numpy.array"], "methods", ["None"], ["", "def", "draw_image_with_kp", "(", "self", ",", "image", ",", "kp_array", ")", ":", "\n", "        ", "image", "=", "np", ".", "copy", "(", "image", ")", "\n", "spatial_size", "=", "np", ".", "array", "(", "image", ".", "shape", "[", ":", "2", "]", "[", ":", ":", "-", "1", "]", ")", "[", "np", ".", "newaxis", "]", "\n", "kp_array", "=", "spatial_size", "*", "(", "kp_array", "+", "1", ")", "/", "2", "\n", "num_kp", "=", "kp_array", ".", "shape", "[", "0", "]", "\n", "image", "=", "cv2", ".", "cvtColor", "(", "image", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "image", "=", "(", "image", "*", "255", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "for", "kp_ind", ",", "kp", "in", "enumerate", "(", "kp_array", ")", ":", "\n", "            ", "color", "=", "cv2", ".", "applyColorMap", "(", "\n", "np", ".", "array", "(", "kp_ind", "/", "num_kp", "*", "255", ")", ".", "astype", "(", "np", ".", "uint8", ")", ",", "\n", "cv2", ".", "COLORMAP_JET", ")", "[", "0", "]", "[", "0", "]", "\n", "color", "=", "(", "int", "(", "color", "[", "0", "]", ")", ",", "int", "(", "color", "[", "1", "]", ")", ",", "int", "(", "color", "[", "2", "]", ")", ")", "\n", "image", "=", "cv2", ".", "circle", "(", "image", ",", "(", "int", "(", "kp", "[", "1", "]", ")", ",", "int", "(", "kp", "[", "0", "]", ")", ")", ",", "self", ".", "kp_size", ",", "\n", "color", ",", "3", ")", "\n", "", "image", "=", "cv2", ".", "cvtColor", "(", "image", ",", "cv2", ".", "COLOR_RGB2BGR", ")", ".", "astype", "(", "'float32'", ")", "/", "255.0", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.firstorder_model.Visualizer.create_image_column_with_kp": [[425, 429], ["numpy.array", "firstorder_model.Visualizer.create_image_column", "firstorder_model.Visualizer.draw_image_with_kp", "zip"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.firstorder_model.Visualizer.create_image_column", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.firstorder_model.Visualizer.draw_image_with_kp"], ["", "def", "create_image_column_with_kp", "(", "self", ",", "images", ",", "kp", ")", ":", "\n", "        ", "image_array", "=", "np", ".", "array", "(", "\n", "[", "self", ".", "draw_image_with_kp", "(", "v", ",", "k", ")", "for", "v", ",", "k", "in", "zip", "(", "images", ",", "kp", ")", "]", ")", "\n", "return", "self", ".", "create_image_column", "(", "image_array", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.firstorder_model.Visualizer.create_image_column": [[430, 436], ["numpy.concatenate", "numpy.copy", "list"], "methods", ["None"], ["", "def", "create_image_column", "(", "self", ",", "images", ",", "draw_border", "=", "False", ")", ":", "\n", "        ", "if", "draw_border", ":", "\n", "            ", "images", "=", "np", ".", "copy", "(", "images", ")", "\n", "images", "[", ":", ",", ":", ",", "[", "0", ",", "-", "1", "]", "]", "=", "(", "1", ",", "1", ",", "1", ")", "\n", "images", "[", ":", ",", ":", ",", "[", "0", ",", "-", "1", "]", "]", "=", "(", "1", ",", "1", ",", "1", ")", "\n", "", "return", "np", ".", "concatenate", "(", "list", "(", "images", ")", ",", "axis", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.firstorder_model.Visualizer.create_image_grid": [[437, 445], ["numpy.concatenate", "type", "out.append", "out.append", "firstorder_model.Visualizer.create_image_column_with_kp", "firstorder_model.Visualizer.create_image_column"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.firstorder_model.Visualizer.create_image_column_with_kp", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.firstorder_model.Visualizer.create_image_column"], ["", "def", "create_image_grid", "(", "self", ",", "*", "args", ")", ":", "\n", "        ", "out", "=", "[", "]", "\n", "for", "arg", "in", "args", ":", "\n", "            ", "if", "type", "(", "arg", ")", "==", "tuple", ":", "\n", "                ", "out", ".", "append", "(", "self", ".", "create_image_column_with_kp", "(", "arg", "[", "0", "]", ",", "arg", "[", "1", "]", ")", ")", "\n", "", "else", ":", "\n", "                ", "out", ".", "append", "(", "self", ".", "create_image_column", "(", "arg", ")", ")", "\n", "", "", "return", "np", ".", "concatenate", "(", "out", ",", "axis", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.firstorder_model.Visualizer.visualize": [[446, 523], ["numpy.transpose.cpu().numpy", "[].cpu().numpy", "numpy.transpose", "images.append", "[].cpu().numpy", "numpy.transpose.cpu().numpy", "numpy.transpose", "images.append", "out[].cpu().numpy", "numpy.transpose", "images.append", "firstorder_model.Visualizer.create_image_grid", "out[].cpu().numpy", "numpy.transpose", "[].cpu().numpy", "images.append", "out[].cpu().numpy", "numpy.transpose", "images.append", "[].cpu().numpy", "images.append", "out[].cpu().tile", "paddle.interpolate().numpy", "paddle.interpolate().numpy", "paddle.interpolate().numpy", "numpy.transpose", "images.append", "range", "images.append", "numpy.transpose.cpu", "[].cpu", "[].cpu", "numpy.transpose.cpu", "out[].cpu", "[].cpu", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "[].cpu().tile", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "numpy.transpose", "numpy.transpose", "numpy.array.reshape", "images.append", "full_mask.append", "sum", "out[].cpu", "[].cpu", "out[].cpu", "[].cpu", "out[].cpu", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "numpy.transpose.numpy", "numpy.transpose.numpy", "numpy.array", "images.append", "images.append", "[].cpu", "numpy.array", "firstorder_model.Visualizer.colormap"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.firstorder_model.Visualizer.create_image_grid", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "visualize", "(", "self", ",", "driving", ",", "source", ",", "out", ")", ":", "\n", "        ", "images", "=", "[", "]", "\n", "# Source image with keypoints", "\n", "source", "=", "source", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "kp_source", "=", "out", "[", "'kp_source'", "]", "[", "'value'", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "source", "=", "np", ".", "transpose", "(", "source", ",", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "\n", "images", ".", "append", "(", "(", "source", ",", "kp_source", ")", ")", "\n", "\n", "# Equivariance visualization", "\n", "if", "'transformed_frame'", "in", "out", ":", "\n", "            ", "transformed", "=", "out", "[", "'transformed_frame'", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "transformed", "=", "np", ".", "transpose", "(", "transformed", ",", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "\n", "transformed_kp", "=", "out", "[", "'transformed_kp'", "]", "[", "'value'", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "images", ".", "append", "(", "(", "transformed", ",", "transformed_kp", ")", ")", "\n", "\n", "# Driving image with keypoints", "\n", "", "kp_driving", "=", "out", "[", "'kp_driving'", "]", "[", "'value'", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "driving", "=", "driving", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "driving", "=", "np", ".", "transpose", "(", "driving", ",", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "\n", "images", ".", "append", "(", "(", "driving", ",", "kp_driving", ")", ")", "\n", "\n", "# Deformed image", "\n", "if", "'deformed'", "in", "out", ":", "\n", "            ", "deformed", "=", "out", "[", "'deformed'", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "deformed", "=", "np", ".", "transpose", "(", "deformed", ",", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "\n", "images", ".", "append", "(", "deformed", ")", "\n", "\n", "# Result with and without keypoints", "\n", "", "prediction", "=", "out", "[", "'prediction'", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "prediction", "=", "np", ".", "transpose", "(", "prediction", ",", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "\n", "if", "'kp_norm'", "in", "out", ":", "\n", "            ", "kp_norm", "=", "out", "[", "'kp_norm'", "]", "[", "'value'", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "images", ".", "append", "(", "(", "prediction", ",", "kp_norm", ")", ")", "\n", "", "images", ".", "append", "(", "prediction", ")", "\n", "\n", "## Occlusion map", "\n", "if", "'occlusion_map'", "in", "out", ":", "\n", "            ", "occlusion_map", "=", "out", "[", "'occlusion_map'", "]", ".", "cpu", "(", ")", ".", "tile", "(", "[", "1", ",", "3", ",", "1", ",", "1", "]", ")", "\n", "occlusion_map", "=", "F", ".", "interpolate", "(", "occlusion_map", ",", "\n", "size", "=", "source", ".", "shape", "[", "1", ":", "3", "]", ")", ".", "numpy", "(", ")", "\n", "occlusion_map", "=", "np", ".", "transpose", "(", "occlusion_map", ",", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "\n", "images", ".", "append", "(", "occlusion_map", ")", "\n", "\n", "# Deformed images according to each individual transform", "\n", "", "if", "'sparse_deformed'", "in", "out", ":", "\n", "            ", "full_mask", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "out", "[", "'sparse_deformed'", "]", ".", "shape", "[", "1", "]", ")", ":", "\n", "                ", "image", "=", "out", "[", "'sparse_deformed'", "]", "[", ":", ",", "i", "]", ".", "cpu", "(", ")", "\n", "image", "=", "F", ".", "interpolate", "(", "image", ",", "size", "=", "source", ".", "shape", "[", "1", ":", "3", "]", ")", "\n", "mask", "=", "out", "[", "'mask'", "]", "[", ":", ",", "i", ":", "(", "i", "+", "1", ")", "]", ".", "cpu", "(", ")", ".", "tile", "(", "[", "1", ",", "3", ",", "1", ",", "1", "]", ")", "\n", "mask", "=", "F", ".", "interpolate", "(", "mask", ",", "size", "=", "source", ".", "shape", "[", "1", ":", "3", "]", ")", "\n", "image", "=", "np", ".", "transpose", "(", "image", ".", "numpy", "(", ")", ",", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", "\n", "mask", "=", "np", ".", "transpose", "(", "mask", ".", "numpy", "(", ")", ",", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", "\n", "\n", "if", "i", "!=", "0", ":", "\n", "                    ", "color", "=", "np", ".", "array", "(", "\n", "self", ".", "colormap", "(", "\n", "(", "i", "-", "1", ")", "/", "\n", "(", "out", "[", "'sparse_deformed'", "]", ".", "shape", "[", "1", "]", "-", "1", ")", ")", ")", "[", ":", "3", "]", "\n", "", "else", ":", "\n", "                    ", "color", "=", "np", ".", "array", "(", "(", "0", ",", "0", ",", "0", ")", ")", "\n", "\n", "", "color", "=", "color", ".", "reshape", "(", "(", "1", ",", "1", ",", "1", ",", "3", ")", ")", "\n", "\n", "images", ".", "append", "(", "image", ")", "\n", "if", "i", "!=", "0", ":", "\n", "                    ", "images", ".", "append", "(", "mask", "*", "color", ")", "\n", "", "else", ":", "\n", "                    ", "images", ".", "append", "(", "mask", ")", "\n", "\n", "", "full_mask", ".", "append", "(", "mask", "*", "color", ")", "\n", "\n", "", "images", ".", "append", "(", "sum", "(", "full_mask", ")", ")", "\n", "\n", "", "image", "=", "self", ".", "create_image_grid", "(", "*", "images", ")", "\n", "image", "=", "(", "255", "*", "image", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "return", "image", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.firstorder_model.init_weight": [[37, 45], ["net.apply", "isinstance", "modules.init.uniform_", "hasattr", "hasattr", "modules.init.reset_parameters"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.SpectralNorm.apply", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.uniform_", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.reset_parameters"], ["def", "init_weight", "(", "net", ")", ":", "\n", "    ", "def", "reset_func", "(", "m", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "(", "nn", ".", "BatchNorm", ",", "nn", ".", "BatchNorm2D", ",", "nn", ".", "SyncBatchNorm", ")", ")", ":", "\n", "            ", "m", ".", "weight", "=", "uniform_", "(", "m", ".", "weight", ",", "0", ",", "1", ")", "\n", "", "elif", "hasattr", "(", "m", ",", "'weight'", ")", "and", "hasattr", "(", "m", ",", "'bias'", ")", ":", "\n", "            ", "reset_parameters", "(", "m", ")", "\n", "\n", "", "", "net", ".", "apply", "(", "reset_func", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.prenet_model.PReNetModel.__init__": [[33, 44], ["sr_model.BaseSRModel.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "generator", ",", "pixel_criterion", "=", "None", ")", ":", "\n", "        ", "\"\"\"Initialize the BasicVSR class.\n\n        Args:\n            generator (dict): config of generator.\n            fix_iter (dict): config of fix_iter.\n            pixel_criterion (dict): config of pixel criterion.\n        \"\"\"", "\n", "super", "(", "PReNetModel", ",", "self", ")", ".", "__init__", "(", "generator", ",", "pixel_criterion", ")", "\n", "self", ".", "current_iter", "=", "1", "\n", "self", ".", "flag", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.prenet_model.PReNetModel.setup_input": [[45, 52], ["None"], "methods", ["None"], ["", "def", "setup_input", "(", "self", ",", "input", ")", ":", "\n", "        ", "self", ".", "lq", "=", "input", "[", "'lq'", "]", "\n", "self", ".", "visual_items", "[", "'lq'", "]", "=", "self", ".", "lq", "[", "0", ",", ":", ",", ":", ",", ":", "]", "\n", "if", "'gt'", "in", "input", ":", "\n", "            ", "self", ".", "gt", "=", "input", "[", "'gt'", "]", "\n", "self", ".", "visual_items", "[", "'gt'", "]", "=", "self", ".", "gt", "[", "0", ",", ":", ",", ":", ",", ":", "]", "\n", "", "self", ".", "image_paths", "=", "input", "[", "'lq_path'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.prenet_model.PReNetModel.train_iter": [[53, 64], ["optims[].clear_grad", "loss_pixel.backward", "optims[].step", "prenet_model.PReNetModel.pixel_criterion"], "methods", ["None"], ["", "def", "train_iter", "(", "self", ",", "optims", "=", "None", ")", ":", "\n", "        ", "optims", "[", "'optim'", "]", ".", "clear_grad", "(", ")", "\n", "self", ".", "output", "=", "self", ".", "nets", "[", "'generator'", "]", "(", "self", ".", "lq", ")", "\n", "self", ".", "visual_items", "[", "'output'", "]", "=", "self", ".", "output", "[", "0", ",", ":", ",", ":", ",", ":", "]", "\n", "# pixel loss", "\n", "loss_pixel", "=", "-", "self", ".", "pixel_criterion", "(", "self", ".", "output", ",", "self", ".", "gt", ")", "\n", "loss_pixel", ".", "backward", "(", ")", "\n", "optims", "[", "'optim'", "]", ".", "step", "(", ")", "\n", "\n", "self", ".", "losses", "[", "'loss_pixel'", "]", "=", "loss_pixel", "\n", "self", ".", "current_iter", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.prenet_model.PReNetModel.test_iter": [[65, 84], ["prenet_model.PReNetModel.gt.cpu", "prenet_model.PReNetModel.nets[].eval", "prenet_model.PReNetModel.nets[].train", "utils.visual.tensor2img", "utils.visual.tensor2img", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "output[].cpu", "metrics.values", "metric.update"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.tensor2img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.tensor2img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update"], ["", "def", "test_iter", "(", "self", ",", "metrics", "=", "None", ")", ":", "\n", "        ", "self", ".", "gt", "=", "self", ".", "gt", ".", "cpu", "(", ")", "\n", "self", ".", "nets", "[", "'generator'", "]", ".", "eval", "(", ")", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "            ", "output", "=", "self", ".", "nets", "[", "'generator'", "]", "(", "self", ".", "lq", ")", "\n", "self", ".", "visual_items", "[", "'output'", "]", "=", "output", "[", "0", ",", ":", ",", ":", ",", ":", "]", ".", "cpu", "(", ")", "\n", "", "self", ".", "nets", "[", "'generator'", "]", ".", "train", "(", ")", "\n", "\n", "out_img", "=", "[", "]", "\n", "gt_img", "=", "[", "]", "\n", "\n", "out_tensor", "=", "output", "[", "0", "]", "\n", "gt_tensor", "=", "self", ".", "gt", "[", "0", "]", "\n", "out_img", "=", "tensor2img", "(", "out_tensor", ",", "(", "0.", ",", "1.", ")", ")", "\n", "gt_img", "=", "tensor2img", "(", "gt_tensor", ",", "(", "0.", ",", "1.", ")", ")", "\n", "\n", "if", "metrics", "is", "not", "None", ":", "\n", "            ", "for", "metric", "in", "metrics", ".", "values", "(", ")", ":", "\n", "                ", "metric", ".", "update", "(", "out_img", ",", "gt_img", ",", "is_seq", "=", "True", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.LapStyleDraModel.__init__": [[29, 59], ["base_model.BaseModel.__init__", "generators.builder.build_generator", "generators.builder.build_generator", "modules.init.init_weights", "lapstyle_model.LapStyleDraModel.set_requires_grad", "criterions.build_criterion", "criterions.build_criterion", "criterions.build_criterion", "criterions.build_criterion"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.PixelShufflePack.init_weights", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion"], ["    ", "def", "__init__", "(", "self", ",", "\n", "generator_encode", ",", "\n", "generator_decode", ",", "\n", "calc_style_emd_loss", "=", "None", ",", "\n", "calc_content_relt_loss", "=", "None", ",", "\n", "calc_content_loss", "=", "None", ",", "\n", "calc_style_loss", "=", "None", ",", "\n", "content_layers", "=", "[", "'r11'", ",", "'r21'", ",", "'r31'", ",", "'r41'", ",", "'r51'", "]", ",", "\n", "style_layers", "=", "[", "'r11'", ",", "'r21'", ",", "'r31'", ",", "'r41'", ",", "'r51'", "]", ",", "\n", "content_weight", "=", "1.0", ",", "\n", "style_weight", "=", "3.0", ")", ":", "\n", "\n", "        ", "super", "(", "LapStyleDraModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# define generators", "\n", "self", ".", "nets", "[", "'net_enc'", "]", "=", "build_generator", "(", "generator_encode", ")", "\n", "self", ".", "nets", "[", "'net_dec'", "]", "=", "build_generator", "(", "generator_decode", ")", "\n", "init_weights", "(", "self", ".", "nets", "[", "'net_dec'", "]", ")", "\n", "self", ".", "set_requires_grad", "(", "[", "self", ".", "nets", "[", "'net_enc'", "]", "]", ",", "False", ")", "\n", "\n", "# define loss functions", "\n", "self", ".", "calc_style_emd_loss", "=", "build_criterion", "(", "calc_style_emd_loss", ")", "\n", "self", ".", "calc_content_relt_loss", "=", "build_criterion", "(", "calc_content_relt_loss", ")", "\n", "self", ".", "calc_content_loss", "=", "build_criterion", "(", "calc_content_loss", ")", "\n", "self", ".", "calc_style_loss", "=", "build_criterion", "(", "calc_style_loss", ")", "\n", "\n", "self", ".", "content_layers", "=", "content_layers", "\n", "self", ".", "style_layers", "=", "style_layers", "\n", "self", ".", "content_weight", "=", "content_weight", "\n", "self", ".", "style_weight", "=", "style_weight", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.LapStyleDraModel.setup_input": [[60, 66], ["paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor"], "methods", ["None"], ["", "def", "setup_input", "(", "self", ",", "input", ")", ":", "\n", "        ", "self", ".", "ci", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'ci'", "]", ")", "\n", "self", ".", "visual_items", "[", "'ci'", "]", "=", "self", ".", "ci", "\n", "self", ".", "si", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'si'", "]", ")", "\n", "self", ".", "visual_items", "[", "'si'", "]", "=", "self", ".", "si", "\n", "self", ".", "image_paths", "=", "input", "[", "'ci_path'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.LapStyleDraModel.forward": [[67, 73], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ")", ":", "\n", "        ", "\"\"\"Run forward pass; called by both functions <optimize_parameters> and <test>.\"\"\"", "\n", "self", ".", "cF", "=", "self", ".", "nets", "[", "'net_enc'", "]", "(", "self", ".", "ci", ")", "\n", "self", ".", "sF", "=", "self", ".", "nets", "[", "'net_enc'", "]", "(", "self", ".", "si", ")", "\n", "self", ".", "stylized", "=", "self", ".", "nets", "[", "'net_dec'", "]", "(", "self", ".", "cF", ",", "self", ".", "sF", ")", "\n", "self", ".", "visual_items", "[", "'stylized'", "]", "=", "self", ".", "stylized", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.LapStyleDraModel.backward_Dec": [[74, 114], ["lapstyle_model.LapStyleDraModel.calc_content_loss", "lapstyle_model.LapStyleDraModel.loss.backward", "lapstyle_model.LapStyleDraModel.calc_content_loss", "lapstyle_model.LapStyleDraModel.calc_style_loss", "lapstyle_model.LapStyleDraModel.calc_content_loss", "lapstyle_model.LapStyleDraModel.calc_style_emd_loss", "lapstyle_model.LapStyleDraModel.calc_style_emd_loss", "lapstyle_model.LapStyleDraModel.calc_content_relt_loss", "lapstyle_model.LapStyleDraModel.calc_content_relt_loss"], "methods", ["None"], ["", "def", "backward_Dec", "(", "self", ")", ":", "\n", "        ", "self", ".", "tF", "=", "self", ".", "nets", "[", "'net_enc'", "]", "(", "self", ".", "stylized", ")", "\n", "\"\"\"content loss\"\"\"", "\n", "self", ".", "loss_c", "=", "0", "\n", "for", "layer", "in", "self", ".", "content_layers", ":", "\n", "            ", "self", ".", "loss_c", "+=", "self", ".", "calc_content_loss", "(", "self", ".", "tF", "[", "layer", "]", ",", "\n", "self", ".", "cF", "[", "layer", "]", ",", "\n", "norm", "=", "True", ")", "\n", "", "self", ".", "losses", "[", "'loss_c'", "]", "=", "self", ".", "loss_c", "\n", "\"\"\"style loss\"\"\"", "\n", "self", ".", "loss_s", "=", "0", "\n", "for", "layer", "in", "self", ".", "style_layers", ":", "\n", "            ", "self", ".", "loss_s", "+=", "self", ".", "calc_style_loss", "(", "self", ".", "tF", "[", "layer", "]", ",", "self", ".", "sF", "[", "layer", "]", ")", "\n", "", "self", ".", "losses", "[", "'loss_s'", "]", "=", "self", ".", "loss_s", "\n", "\"\"\"IDENTITY LOSSES\"\"\"", "\n", "self", ".", "Icc", "=", "self", ".", "nets", "[", "'net_dec'", "]", "(", "self", ".", "cF", ",", "self", ".", "cF", ")", "\n", "self", ".", "l_identity1", "=", "self", ".", "calc_content_loss", "(", "self", ".", "Icc", ",", "self", ".", "ci", ")", "\n", "self", ".", "Fcc", "=", "self", ".", "nets", "[", "'net_enc'", "]", "(", "self", ".", "Icc", ")", "\n", "self", ".", "l_identity2", "=", "0", "\n", "for", "layer", "in", "self", ".", "content_layers", ":", "\n", "            ", "self", ".", "l_identity2", "+=", "self", ".", "calc_content_loss", "(", "self", ".", "Fcc", "[", "layer", "]", ",", "\n", "self", ".", "cF", "[", "layer", "]", ")", "\n", "", "self", ".", "losses", "[", "'l_identity1'", "]", "=", "self", ".", "l_identity1", "\n", "self", ".", "losses", "[", "'l_identity2'", "]", "=", "self", ".", "l_identity2", "\n", "\"\"\"relative loss\"\"\"", "\n", "self", ".", "loss_style_remd", "=", "self", ".", "calc_style_emd_loss", "(", "\n", "self", ".", "tF", "[", "'r31'", "]", ",", "self", ".", "sF", "[", "'r31'", "]", ")", "+", "self", ".", "calc_style_emd_loss", "(", "\n", "self", ".", "tF", "[", "'r41'", "]", ",", "self", ".", "sF", "[", "'r41'", "]", ")", "\n", "self", ".", "loss_content_relt", "=", "self", ".", "calc_content_relt_loss", "(", "\n", "self", ".", "tF", "[", "'r31'", "]", ",", "self", ".", "cF", "[", "'r31'", "]", ")", "+", "self", ".", "calc_content_relt_loss", "(", "\n", "self", ".", "tF", "[", "'r41'", "]", ",", "self", ".", "cF", "[", "'r41'", "]", ")", "\n", "self", ".", "losses", "[", "'loss_style_remd'", "]", "=", "self", ".", "loss_style_remd", "\n", "self", ".", "losses", "[", "'loss_content_relt'", "]", "=", "self", ".", "loss_content_relt", "\n", "\n", "self", ".", "loss", "=", "self", ".", "loss_c", "*", "self", ".", "content_weight", "+", "self", ".", "loss_s", "*", "self", ".", "style_weight", "+", "self", ".", "l_identity1", "*", "50", "+", "self", ".", "l_identity2", "*", "1", "+", "self", ".", "loss_style_remd", "*", "10", "+", "self", ".", "loss_content_relt", "*", "16", "\n", "self", ".", "loss", ".", "backward", "(", ")", "\n", "\n", "return", "self", ".", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.LapStyleDraModel.train_iter": [[115, 121], ["lapstyle_model.LapStyleDraModel.forward", "optimizers[].clear_grad", "lapstyle_model.LapStyleDraModel.backward_Dec", "lapstyle_model.LapStyleDraModel.optimizers[].step"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.vgg16.forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.LapStyleDraModel.backward_Dec"], ["", "def", "train_iter", "(", "self", ",", "optimizers", "=", "None", ")", ":", "\n", "        ", "\"\"\"Calculate losses, gradients, and update network weights\"\"\"", "\n", "self", ".", "forward", "(", ")", "\n", "optimizers", "[", "'optimG'", "]", ".", "clear_grad", "(", ")", "\n", "self", ".", "backward_Dec", "(", ")", "\n", "self", ".", "optimizers", "[", "'optimG'", "]", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.LapStyleRevFirstModel.__init__": [[167, 208], ["base_model.BaseModel.__init__", "generators.builder.build_generator", "generators.builder.build_generator", "lapstyle_model.LapStyleRevFirstModel.set_requires_grad", "lapstyle_model.LapStyleRevFirstModel.set_requires_grad", "generators.builder.build_generator", "modules.init.init_weights", "discriminators.builder.build_discriminator", "modules.init.init_weights", "criterions.build_criterion", "criterions.build_criterion", "criterions.build_criterion", "criterions.build_criterion", "criterions.build_criterion"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.PixelShufflePack.init_weights", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.builder.build_discriminator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.PixelShufflePack.init_weights", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion"], ["    ", "def", "__init__", "(", "self", ",", "\n", "revnet_generator", ",", "\n", "revnet_discriminator", ",", "\n", "draftnet_encode", ",", "\n", "draftnet_decode", ",", "\n", "calc_style_emd_loss", "=", "None", ",", "\n", "calc_content_relt_loss", "=", "None", ",", "\n", "calc_content_loss", "=", "None", ",", "\n", "calc_style_loss", "=", "None", ",", "\n", "gan_criterion", "=", "None", ",", "\n", "content_layers", "=", "[", "'r11'", ",", "'r21'", ",", "'r31'", ",", "'r41'", ",", "'r51'", "]", ",", "\n", "style_layers", "=", "[", "'r11'", ",", "'r21'", ",", "'r31'", ",", "'r41'", ",", "'r51'", "]", ",", "\n", "content_weight", "=", "1.0", ",", "\n", "style_weight", "=", "3.0", ")", ":", "\n", "\n", "        ", "super", "(", "LapStyleRevFirstModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# define draftnet params", "\n", "self", ".", "nets", "[", "'net_enc'", "]", "=", "build_generator", "(", "draftnet_encode", ")", "\n", "self", ".", "nets", "[", "'net_dec'", "]", "=", "build_generator", "(", "draftnet_decode", ")", "\n", "\n", "self", ".", "set_requires_grad", "(", "[", "self", ".", "nets", "[", "'net_enc'", "]", "]", ",", "False", ")", "\n", "self", ".", "set_requires_grad", "(", "[", "self", ".", "nets", "[", "'net_dec'", "]", "]", ",", "False", ")", "\n", "\n", "# define revision-net params", "\n", "self", ".", "nets", "[", "'net_rev'", "]", "=", "build_generator", "(", "revnet_generator", ")", "\n", "init_weights", "(", "self", ".", "nets", "[", "'net_rev'", "]", ")", "\n", "self", ".", "nets", "[", "'netD'", "]", "=", "build_discriminator", "(", "revnet_discriminator", ")", "\n", "init_weights", "(", "self", ".", "nets", "[", "'netD'", "]", ")", "\n", "\n", "# define loss functions", "\n", "self", ".", "calc_style_emd_loss", "=", "build_criterion", "(", "calc_style_emd_loss", ")", "\n", "self", ".", "calc_content_relt_loss", "=", "build_criterion", "(", "calc_content_relt_loss", ")", "\n", "self", ".", "calc_content_loss", "=", "build_criterion", "(", "calc_content_loss", ")", "\n", "self", ".", "calc_style_loss", "=", "build_criterion", "(", "calc_style_loss", ")", "\n", "self", ".", "gan_criterion", "=", "build_criterion", "(", "gan_criterion", ")", "\n", "\n", "self", ".", "content_layers", "=", "content_layers", "\n", "self", ".", "style_layers", "=", "style_layers", "\n", "self", ".", "content_weight", "=", "content_weight", "\n", "self", ".", "style_weight", "=", "style_weight", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.LapStyleRevFirstModel.setup_input": [[209, 220], ["paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "lapstyle_model.make_laplace_pyramid", "lapstyle_model.make_laplace_pyramid", "lapstyle_model.LapStyleRevFirstModel.pyr_ci.append", "lapstyle_model.LapStyleRevFirstModel.pyr_si.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.make_laplace_pyramid", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.make_laplace_pyramid", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "setup_input", "(", "self", ",", "input", ")", ":", "\n", "        ", "self", ".", "ci", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'ci'", "]", ")", "\n", "self", ".", "visual_items", "[", "'ci'", "]", "=", "self", ".", "ci", "\n", "self", ".", "si", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'si'", "]", ")", "\n", "self", ".", "visual_items", "[", "'si'", "]", "=", "self", ".", "si", "\n", "self", ".", "image_paths", "=", "input", "[", "'ci_path'", "]", "\n", "\n", "self", ".", "pyr_ci", "=", "make_laplace_pyramid", "(", "self", ".", "ci", ",", "1", ")", "\n", "self", ".", "pyr_si", "=", "make_laplace_pyramid", "(", "self", ".", "si", ",", "1", ")", "\n", "self", ".", "pyr_ci", ".", "append", "(", "self", ".", "ci", ")", "\n", "self", ".", "pyr_si", ".", "append", "(", "self", ".", "si", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.LapStyleRevFirstModel.forward": [[221, 237], ["paddle.interpolate", "paddle.interpolate", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "lapstyle_model.fold_laplace_pyramid"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.fold_laplace_pyramid"], ["", "def", "forward", "(", "self", ")", ":", "\n", "        ", "\"\"\"Run forward pass; called by both functions <optimize_parameters> and <test>.\"\"\"", "\n", "\n", "cF", "=", "self", ".", "nets", "[", "'net_enc'", "]", "(", "self", ".", "pyr_ci", "[", "1", "]", ")", "\n", "sF", "=", "self", ".", "nets", "[", "'net_enc'", "]", "(", "self", ".", "pyr_si", "[", "1", "]", ")", "\n", "\n", "stylized_small", "=", "self", ".", "nets", "[", "'net_dec'", "]", "(", "cF", ",", "sF", ")", "\n", "self", ".", "visual_items", "[", "'stylized_small'", "]", "=", "stylized_small", "\n", "stylized_up", "=", "F", ".", "interpolate", "(", "stylized_small", ",", "scale_factor", "=", "2", ")", "\n", "\n", "revnet_input", "=", "paddle", ".", "concat", "(", "x", "=", "[", "self", ".", "pyr_ci", "[", "0", "]", ",", "stylized_up", "]", ",", "axis", "=", "1", ")", "\n", "stylized_rev_lap", "=", "self", ".", "nets", "[", "'net_rev'", "]", "(", "revnet_input", ")", "\n", "stylized_rev", "=", "fold_laplace_pyramid", "(", "[", "stylized_rev_lap", ",", "stylized_small", "]", ")", "\n", "\n", "self", ".", "stylized", "=", "stylized_rev", "\n", "self", ".", "visual_items", "[", "'stylized'", "]", "=", "self", ".", "stylized", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.LapStyleRevFirstModel.backward_G": [[238, 272], ["lapstyle_model.LapStyleRevFirstModel.gan_criterion", "lapstyle_model.LapStyleRevFirstModel.loss.backward", "lapstyle_model.LapStyleRevFirstModel.calc_content_loss", "lapstyle_model.LapStyleRevFirstModel.calc_style_loss", "lapstyle_model.LapStyleRevFirstModel.calc_style_emd_loss", "lapstyle_model.LapStyleRevFirstModel.calc_style_emd_loss", "lapstyle_model.LapStyleRevFirstModel.calc_content_relt_loss", "lapstyle_model.LapStyleRevFirstModel.calc_content_relt_loss"], "methods", ["None"], ["", "def", "backward_G", "(", "self", ")", ":", "\n", "        ", "self", ".", "tF", "=", "self", ".", "nets", "[", "'net_enc'", "]", "(", "self", ".", "stylized", ")", "\n", "self", ".", "cF", "=", "self", ".", "nets", "[", "'net_enc'", "]", "(", "self", ".", "pyr_ci", "[", "2", "]", ")", "\n", "self", ".", "sF", "=", "self", ".", "nets", "[", "'net_enc'", "]", "(", "self", ".", "pyr_si", "[", "2", "]", ")", "\n", "\"\"\"content loss\"\"\"", "\n", "self", ".", "loss_c", "=", "0", "\n", "for", "layer", "in", "self", ".", "content_layers", ":", "\n", "            ", "self", ".", "loss_c", "+=", "self", ".", "calc_content_loss", "(", "self", ".", "tF", "[", "layer", "]", ",", "\n", "self", ".", "cF", "[", "layer", "]", ",", "\n", "norm", "=", "True", ")", "\n", "", "self", ".", "losses", "[", "'loss_c'", "]", "=", "self", ".", "loss_c", "\n", "\"\"\"style loss\"\"\"", "\n", "self", ".", "loss_s", "=", "0", "\n", "for", "layer", "in", "self", ".", "style_layers", ":", "\n", "            ", "self", ".", "loss_s", "+=", "self", ".", "calc_style_loss", "(", "self", ".", "tF", "[", "layer", "]", ",", "self", ".", "sF", "[", "layer", "]", ")", "\n", "", "self", ".", "losses", "[", "'loss_s'", "]", "=", "self", ".", "loss_s", "\n", "\"\"\"relative loss\"\"\"", "\n", "self", ".", "loss_style_remd", "=", "self", ".", "calc_style_emd_loss", "(", "\n", "self", ".", "tF", "[", "'r31'", "]", ",", "self", ".", "sF", "[", "'r31'", "]", ")", "+", "self", ".", "calc_style_emd_loss", "(", "\n", "self", ".", "tF", "[", "'r41'", "]", ",", "self", ".", "sF", "[", "'r41'", "]", ")", "\n", "self", ".", "loss_content_relt", "=", "self", ".", "calc_content_relt_loss", "(", "\n", "self", ".", "tF", "[", "'r31'", "]", ",", "self", ".", "cF", "[", "'r31'", "]", ")", "+", "self", ".", "calc_content_relt_loss", "(", "\n", "self", ".", "tF", "[", "'r41'", "]", ",", "self", ".", "cF", "[", "'r41'", "]", ")", "\n", "self", ".", "losses", "[", "'loss_style_remd'", "]", "=", "self", ".", "loss_style_remd", "\n", "self", ".", "losses", "[", "'loss_content_relt'", "]", "=", "self", ".", "loss_content_relt", "\n", "\"\"\"gan loss\"\"\"", "\n", "pred_fake", "=", "self", ".", "nets", "[", "'netD'", "]", "(", "self", ".", "stylized", ")", "\n", "self", ".", "loss_G_GAN", "=", "self", ".", "gan_criterion", "(", "pred_fake", ",", "True", ")", "\n", "self", ".", "losses", "[", "'loss_gan_G'", "]", "=", "self", ".", "loss_G_GAN", "\n", "\n", "self", ".", "loss", "=", "self", ".", "loss_G_GAN", "+", "self", ".", "loss_c", "*", "self", ".", "content_weight", "+", "self", ".", "loss_s", "*", "self", ".", "style_weight", "+", "self", ".", "loss_style_remd", "*", "10", "+", "self", ".", "loss_content_relt", "*", "16", "\n", "self", ".", "loss", ".", "backward", "(", ")", "\n", "return", "self", ".", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.LapStyleRevFirstModel.backward_D": [[273, 285], ["lapstyle_model.LapStyleRevFirstModel.gan_criterion", "lapstyle_model.LapStyleRevFirstModel.gan_criterion", "lapstyle_model.LapStyleRevFirstModel.loss_D.backward", "lapstyle_model.LapStyleRevFirstModel.stylized.detach"], "methods", ["None"], ["", "def", "backward_D", "(", "self", ")", ":", "\n", "        ", "\"\"\"Calculate GAN loss for the discriminator\"\"\"", "\n", "pred_fake", "=", "self", ".", "nets", "[", "'netD'", "]", "(", "self", ".", "stylized", ".", "detach", "(", ")", ")", "\n", "self", ".", "loss_D_fake", "=", "self", ".", "gan_criterion", "(", "pred_fake", ",", "False", ")", "\n", "pred_real", "=", "self", ".", "nets", "[", "'netD'", "]", "(", "self", ".", "pyr_si", "[", "2", "]", ")", "\n", "self", ".", "loss_D_real", "=", "self", ".", "gan_criterion", "(", "pred_real", ",", "True", ")", "\n", "self", ".", "loss_D", "=", "(", "self", ".", "loss_D_fake", "+", "self", ".", "loss_D_real", ")", "*", "0.5", "\n", "\n", "self", ".", "loss_D", ".", "backward", "(", ")", "\n", "\n", "self", ".", "losses", "[", "'D_fake_loss'", "]", "=", "self", ".", "loss_D_fake", "\n", "self", ".", "losses", "[", "'D_real_loss'", "]", "=", "self", ".", "loss_D_real", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.LapStyleRevFirstModel.train_iter": [[286, 300], ["lapstyle_model.LapStyleRevFirstModel.forward", "lapstyle_model.LapStyleRevFirstModel.set_requires_grad", "optimizers[].clear_grad", "lapstyle_model.LapStyleRevFirstModel.backward_D", "optimizers[].step", "lapstyle_model.LapStyleRevFirstModel.set_requires_grad", "optimizers[].clear_grad", "lapstyle_model.LapStyleRevFirstModel.backward_G", "optimizers[].step"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.vgg16.forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.backward_D", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.backward_G"], ["", "def", "train_iter", "(", "self", ",", "optimizers", "=", "None", ")", ":", "\n", "# compute fake images: G(A)", "\n", "        ", "self", ".", "forward", "(", ")", "\n", "# update D", "\n", "self", ".", "set_requires_grad", "(", "self", ".", "nets", "[", "'netD'", "]", ",", "True", ")", "\n", "optimizers", "[", "'optimD'", "]", ".", "clear_grad", "(", ")", "\n", "self", ".", "backward_D", "(", ")", "\n", "optimizers", "[", "'optimD'", "]", ".", "step", "(", ")", "\n", "\n", "# update G", "\n", "self", ".", "set_requires_grad", "(", "self", ".", "nets", "[", "'netD'", "]", ",", "False", ")", "\n", "optimizers", "[", "'optimG'", "]", ".", "clear_grad", "(", ")", "\n", "self", ".", "backward_G", "(", ")", "\n", "optimizers", "[", "'optimG'", "]", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.LapStyleRevSecondModel.__init__": [[304, 348], ["base_model.BaseModel.__init__", "generators.builder.build_generator", "generators.builder.build_generator", "lapstyle_model.LapStyleRevSecondModel.set_requires_grad", "lapstyle_model.LapStyleRevSecondModel.set_requires_grad", "generators.builder.build_generator", "lapstyle_model.LapStyleRevSecondModel.set_requires_grad", "generators.builder.build_generator", "modules.init.init_weights", "discriminators.builder.build_discriminator", "modules.init.init_weights", "criterions.build_criterion", "criterions.build_criterion", "criterions.build_criterion", "criterions.build_criterion", "criterions.build_criterion"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.PixelShufflePack.init_weights", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.builder.build_discriminator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.PixelShufflePack.init_weights", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion"], ["    ", "def", "__init__", "(", "self", ",", "\n", "revnet_generator", ",", "\n", "revnet_discriminator", ",", "\n", "draftnet_encode", ",", "\n", "draftnet_decode", ",", "\n", "calc_style_emd_loss", "=", "None", ",", "\n", "calc_content_relt_loss", "=", "None", ",", "\n", "calc_content_loss", "=", "None", ",", "\n", "calc_style_loss", "=", "None", ",", "\n", "gan_criterion", "=", "None", ",", "\n", "content_layers", "=", "[", "'r11'", ",", "'r21'", ",", "'r31'", ",", "'r41'", ",", "'r51'", "]", ",", "\n", "style_layers", "=", "[", "'r11'", ",", "'r21'", ",", "'r31'", ",", "'r41'", ",", "'r51'", "]", ",", "\n", "content_weight", "=", "1.0", ",", "\n", "style_weight", "=", "3.0", ")", ":", "\n", "\n", "        ", "super", "(", "LapStyleRevSecondModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# define draftnet params", "\n", "self", ".", "nets", "[", "'net_enc'", "]", "=", "build_generator", "(", "draftnet_encode", ")", "\n", "self", ".", "nets", "[", "'net_dec'", "]", "=", "build_generator", "(", "draftnet_decode", ")", "\n", "self", ".", "set_requires_grad", "(", "[", "self", ".", "nets", "[", "'net_enc'", "]", "]", ",", "False", ")", "\n", "self", ".", "set_requires_grad", "(", "[", "self", ".", "nets", "[", "'net_dec'", "]", "]", ",", "False", ")", "\n", "\n", "# define the first revnet params", "\n", "self", ".", "nets", "[", "'net_rev'", "]", "=", "build_generator", "(", "revnet_generator", ")", "\n", "self", ".", "set_requires_grad", "(", "[", "self", ".", "nets", "[", "'net_rev'", "]", "]", ",", "False", ")", "\n", "\n", "# define the second revnet params", "\n", "self", ".", "nets", "[", "'net_rev_2'", "]", "=", "build_generator", "(", "revnet_generator", ")", "\n", "init_weights", "(", "self", ".", "nets", "[", "'net_rev_2'", "]", ")", "\n", "self", ".", "nets", "[", "'netD'", "]", "=", "build_discriminator", "(", "revnet_discriminator", ")", "\n", "init_weights", "(", "self", ".", "nets", "[", "'netD'", "]", ")", "\n", "\n", "# define loss functions", "\n", "self", ".", "calc_style_emd_loss", "=", "build_criterion", "(", "calc_style_emd_loss", ")", "\n", "self", ".", "calc_content_relt_loss", "=", "build_criterion", "(", "calc_content_relt_loss", ")", "\n", "self", ".", "calc_content_loss", "=", "build_criterion", "(", "calc_content_loss", ")", "\n", "self", ".", "calc_style_loss", "=", "build_criterion", "(", "calc_style_loss", ")", "\n", "self", ".", "gan_criterion", "=", "build_criterion", "(", "gan_criterion", ")", "\n", "\n", "self", ".", "content_layers", "=", "content_layers", "\n", "self", ".", "style_layers", "=", "style_layers", "\n", "self", ".", "content_weight", "=", "content_weight", "\n", "self", ".", "style_weight", "=", "style_weight", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.LapStyleRevSecondModel.setup_input": [[349, 360], ["paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "lapstyle_model.make_laplace_pyramid", "lapstyle_model.make_laplace_pyramid", "lapstyle_model.LapStyleRevSecondModel.pyr_ci.append", "lapstyle_model.LapStyleRevSecondModel.pyr_si.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.make_laplace_pyramid", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.make_laplace_pyramid", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "setup_input", "(", "self", ",", "input", ")", ":", "\n", "        ", "self", ".", "ci", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'ci'", "]", ")", "\n", "self", ".", "visual_items", "[", "'ci'", "]", "=", "self", ".", "ci", "\n", "self", ".", "si", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'si'", "]", ")", "\n", "self", ".", "visual_items", "[", "'si'", "]", "=", "self", ".", "si", "\n", "self", ".", "image_paths", "=", "input", "[", "'ci_path'", "]", "\n", "\n", "self", ".", "pyr_ci", "=", "make_laplace_pyramid", "(", "self", ".", "ci", ",", "2", ")", "\n", "self", ".", "pyr_si", "=", "make_laplace_pyramid", "(", "self", ".", "si", ",", "2", ")", "\n", "self", ".", "pyr_ci", ".", "append", "(", "self", ".", "ci", ")", "\n", "self", ".", "pyr_si", ".", "append", "(", "self", ".", "si", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.LapStyleRevSecondModel.forward": [[361, 384], ["paddle.interpolate", "paddle.interpolate", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "lapstyle_model.fold_laplace_pyramid", "paddle.interpolate", "paddle.interpolate", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "lapstyle_model.fold_laplace_pyramid"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.fold_laplace_pyramid", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.fold_laplace_pyramid"], ["", "def", "forward", "(", "self", ")", ":", "\n", "        ", "\"\"\"Run forward pass; called by both functions <optimize_parameters> and <test>.\"\"\"", "\n", "\n", "cF", "=", "self", ".", "nets", "[", "'net_enc'", "]", "(", "self", ".", "pyr_ci", "[", "2", "]", ")", "\n", "sF", "=", "self", ".", "nets", "[", "'net_enc'", "]", "(", "self", ".", "pyr_si", "[", "2", "]", ")", "\n", "\n", "stylized_small", "=", "self", ".", "nets", "[", "'net_dec'", "]", "(", "cF", ",", "sF", ")", "\n", "self", ".", "visual_items", "[", "'stylized_small'", "]", "=", "stylized_small", "\n", "stylized_up", "=", "F", ".", "interpolate", "(", "stylized_small", ",", "scale_factor", "=", "2", ")", "\n", "\n", "revnet_input", "=", "paddle", ".", "concat", "(", "x", "=", "[", "self", ".", "pyr_ci", "[", "1", "]", ",", "stylized_up", "]", ",", "axis", "=", "1", ")", "\n", "stylized_rev_lap", "=", "self", ".", "nets", "[", "'net_rev'", "]", "(", "revnet_input", ")", "\n", "stylized_rev", "=", "fold_laplace_pyramid", "(", "[", "stylized_rev_lap", ",", "stylized_small", "]", ")", "\n", "self", ".", "visual_items", "[", "'stylized_rev_first'", "]", "=", "stylized_rev", "\n", "stylized_up", "=", "F", ".", "interpolate", "(", "stylized_rev", ",", "scale_factor", "=", "2", ")", "\n", "\n", "revnet_input", "=", "paddle", ".", "concat", "(", "x", "=", "[", "self", ".", "pyr_ci", "[", "0", "]", ",", "stylized_up", "]", ",", "axis", "=", "1", ")", "\n", "stylized_rev_lap_second", "=", "self", ".", "nets", "[", "'net_rev_2'", "]", "(", "revnet_input", ")", "\n", "stylized_rev_second", "=", "fold_laplace_pyramid", "(", "\n", "[", "stylized_rev_lap_second", ",", "stylized_rev_lap", ",", "stylized_small", "]", ")", "\n", "\n", "self", ".", "stylized", "=", "stylized_rev_second", "\n", "self", ".", "visual_items", "[", "'stylized'", "]", "=", "self", ".", "stylized", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.LapStyleRevSecondModel.backward_G": [[385, 417], ["lapstyle_model.LapStyleRevSecondModel.calc_style_emd_loss", "lapstyle_model.LapStyleRevSecondModel.calc_content_relt_loss", "lapstyle_model.LapStyleRevSecondModel.gan_criterion", "lapstyle_model.LapStyleRevSecondModel.loss.backward", "lapstyle_model.LapStyleRevSecondModel.calc_content_loss", "lapstyle_model.LapStyleRevSecondModel.calc_style_loss"], "methods", ["None"], ["", "def", "backward_G", "(", "self", ")", ":", "\n", "        ", "self", ".", "tF", "=", "self", ".", "nets", "[", "'net_enc'", "]", "(", "self", ".", "stylized", ")", "\n", "self", ".", "cF", "=", "self", ".", "nets", "[", "'net_enc'", "]", "(", "self", ".", "pyr_ci", "[", "3", "]", ")", "\n", "self", ".", "sF", "=", "self", ".", "nets", "[", "'net_enc'", "]", "(", "self", ".", "pyr_si", "[", "3", "]", ")", "\n", "\"\"\"content loss\"\"\"", "\n", "self", ".", "loss_c", "=", "0", "\n", "for", "layer", "in", "self", ".", "content_layers", ":", "\n", "            ", "self", ".", "loss_c", "+=", "self", ".", "calc_content_loss", "(", "self", ".", "tF", "[", "layer", "]", ",", "\n", "self", ".", "cF", "[", "layer", "]", ",", "\n", "norm", "=", "True", ")", "\n", "", "self", ".", "losses", "[", "'loss_c'", "]", "=", "self", ".", "loss_c", "\n", "\"\"\"style loss\"\"\"", "\n", "self", ".", "loss_s", "=", "0", "\n", "for", "layer", "in", "self", ".", "style_layers", ":", "\n", "            ", "self", ".", "loss_s", "+=", "self", ".", "calc_style_loss", "(", "self", ".", "tF", "[", "layer", "]", ",", "self", ".", "sF", "[", "layer", "]", ")", "\n", "", "self", ".", "losses", "[", "'loss_s'", "]", "=", "self", ".", "loss_s", "\n", "\"\"\"relative loss\"\"\"", "\n", "self", ".", "loss_style_remd", "=", "self", ".", "calc_style_emd_loss", "(", "self", ".", "tF", "[", "'r41'", "]", ",", "\n", "self", ".", "sF", "[", "'r41'", "]", ")", "\n", "self", ".", "loss_content_relt", "=", "self", ".", "calc_content_relt_loss", "(", "\n", "self", ".", "tF", "[", "'r41'", "]", ",", "self", ".", "cF", "[", "'r41'", "]", ")", "\n", "self", ".", "losses", "[", "'loss_style_remd'", "]", "=", "self", ".", "loss_style_remd", "\n", "self", ".", "losses", "[", "'loss_content_relt'", "]", "=", "self", ".", "loss_content_relt", "\n", "\"\"\"gan loss\"\"\"", "\n", "pred_fake", "=", "self", ".", "nets", "[", "'netD'", "]", "(", "self", ".", "stylized", ")", "\n", "self", ".", "loss_G_GAN", "=", "self", ".", "gan_criterion", "(", "pred_fake", ",", "True", ")", "\n", "self", ".", "losses", "[", "'loss_gan_G'", "]", "=", "self", ".", "loss_G_GAN", "\n", "\n", "self", ".", "loss", "=", "self", ".", "loss_G_GAN", "+", "self", ".", "loss_c", "*", "self", ".", "content_weight", "+", "self", ".", "loss_s", "*", "self", ".", "style_weight", "+", "self", ".", "loss_style_remd", "*", "10", "+", "self", ".", "loss_content_relt", "*", "16", "\n", "self", ".", "loss", ".", "backward", "(", ")", "\n", "return", "self", ".", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.LapStyleRevSecondModel.backward_D": [[418, 430], ["lapstyle_model.LapStyleRevSecondModel.gan_criterion", "lapstyle_model.LapStyleRevSecondModel.gan_criterion", "lapstyle_model.LapStyleRevSecondModel.loss_D.backward", "lapstyle_model.LapStyleRevSecondModel.stylized.detach"], "methods", ["None"], ["", "def", "backward_D", "(", "self", ")", ":", "\n", "        ", "\"\"\"Calculate GAN loss for the discriminator\"\"\"", "\n", "pred_fake", "=", "self", ".", "nets", "[", "'netD'", "]", "(", "self", ".", "stylized", ".", "detach", "(", ")", ")", "\n", "self", ".", "loss_D_fake", "=", "self", ".", "gan_criterion", "(", "pred_fake", ",", "False", ")", "\n", "pred_real", "=", "self", ".", "nets", "[", "'netD'", "]", "(", "self", ".", "pyr_si", "[", "3", "]", ")", "\n", "self", ".", "loss_D_real", "=", "self", ".", "gan_criterion", "(", "pred_real", ",", "True", ")", "\n", "self", ".", "loss_D", "=", "(", "self", ".", "loss_D_fake", "+", "self", ".", "loss_D_real", ")", "*", "0.5", "\n", "\n", "self", ".", "loss_D", ".", "backward", "(", ")", "\n", "\n", "self", ".", "losses", "[", "'D_fake_loss'", "]", "=", "self", ".", "loss_D_fake", "\n", "self", ".", "losses", "[", "'D_real_loss'", "]", "=", "self", ".", "loss_D_real", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.LapStyleRevSecondModel.train_iter": [[431, 446], ["lapstyle_model.LapStyleRevSecondModel.forward", "lapstyle_model.LapStyleRevSecondModel.set_requires_grad", "optimizers[].clear_grad", "lapstyle_model.LapStyleRevSecondModel.backward_D", "optimizers[].step", "lapstyle_model.LapStyleRevSecondModel.set_requires_grad", "optimizers[].clear_grad", "lapstyle_model.LapStyleRevSecondModel.backward_G", "optimizers[].step"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.vgg16.forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.backward_D", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.backward_G"], ["", "def", "train_iter", "(", "self", ",", "optimizers", "=", "None", ")", ":", "\n", "# compute fake images: G(A)", "\n", "        ", "self", ".", "forward", "(", ")", "\n", "# update D", "\n", "\n", "self", ".", "set_requires_grad", "(", "self", ".", "nets", "[", "'netD'", "]", ",", "True", ")", "\n", "optimizers", "[", "'optimD'", "]", ".", "clear_grad", "(", ")", "\n", "self", ".", "backward_D", "(", ")", "\n", "optimizers", "[", "'optimD'", "]", ".", "step", "(", ")", "\n", "\n", "# update G", "\n", "self", ".", "set_requires_grad", "(", "self", ".", "nets", "[", "'netD'", "]", ",", "False", ")", "\n", "optimizers", "[", "'optimG'", "]", ".", "clear_grad", "(", ")", "\n", "self", ".", "backward_G", "(", ")", "\n", "optimizers", "[", "'optimG'", "]", ".", "step", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.tensor_resample": [[123, 125], ["paddle.interpolate"], "function", ["None"], ["", "", "def", "tensor_resample", "(", "tensor", ",", "dst_size", ",", "mode", "=", "'bilinear'", ")", ":", "\n", "    ", "return", "F", ".", "interpolate", "(", "tensor", ",", "dst_size", ",", "mode", "=", "mode", ",", "align_corners", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.laplacian": [[127, 137], ["lapstyle_model.tensor_resample", "lapstyle_model.tensor_resample"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.tensor_resample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.tensor_resample"], ["", "def", "laplacian", "(", "x", ")", ":", "\n", "    ", "\"\"\"\n    Laplacian\n\n    return:\n       x - upsample(downsample(x))\n    \"\"\"", "\n", "return", "x", "-", "tensor_resample", "(", "\n", "tensor_resample", "(", "x", ",", "[", "x", ".", "shape", "[", "2", "]", "//", "2", ",", "x", ".", "shape", "[", "3", "]", "//", "2", "]", ")", ",", "\n", "[", "x", ".", "shape", "[", "2", "]", ",", "x", ".", "shape", "[", "3", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.make_laplace_pyramid": [[139, 152], ["range", "pyramid.append", "pyramid.append", "lapstyle_model.tensor_resample", "lapstyle_model.laplacian", "max", "max"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.tensor_resample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.laplacian"], ["", "def", "make_laplace_pyramid", "(", "x", ",", "levels", ")", ":", "\n", "    ", "\"\"\"\n    Make Laplacian Pyramid\n    \"\"\"", "\n", "pyramid", "=", "[", "]", "\n", "current", "=", "x", "\n", "for", "i", "in", "range", "(", "levels", ")", ":", "\n", "        ", "pyramid", ".", "append", "(", "laplacian", "(", "current", ")", ")", "\n", "current", "=", "tensor_resample", "(", "\n", "current", ",", "\n", "(", "max", "(", "current", ".", "shape", "[", "2", "]", "//", "2", ",", "1", ")", ",", "max", "(", "current", ".", "shape", "[", "3", "]", "//", "2", ",", "1", ")", ")", ")", "\n", "", "pyramid", ".", "append", "(", "current", ")", "\n", "return", "pyramid", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.fold_laplace_pyramid": [[154, 163], ["range", "len", "lapstyle_model.tensor_resample"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.lapstyle_model.tensor_resample"], ["", "def", "fold_laplace_pyramid", "(", "pyramid", ")", ":", "\n", "    ", "\"\"\"\n    Fold Laplacian Pyramid\n    \"\"\"", "\n", "current", "=", "pyramid", "[", "-", "1", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "pyramid", ")", "-", "2", ",", "-", "1", ",", "-", "1", ")", ":", "# iterate from len-2 to 0", "\n", "        ", "up_h", ",", "up_w", "=", "pyramid", "[", "i", "]", ".", "shape", "[", "2", "]", ",", "pyramid", "[", "i", "]", ".", "shape", "[", "3", "]", "\n", "current", "=", "pyramid", "[", "i", "]", "+", "tensor_resample", "(", "current", ",", "(", "up_h", ",", "up_w", ")", ")", "\n", "", "return", "current", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.msvsr_model.MultiStageVSRModel.__init__": [[33, 52], ["sr_model.BaseSRModel.__init__", "msvsr_model.init_basicvsr_weight", "print", "msvsr_model.MultiStageVSRModel.nets[].named_parameters"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.basicvsr_model.init_basicvsr_weight"], ["def", "__init__", "(", "self", ",", "generator", ",", "fix_iter", ",", "pixel_criterion", "=", "None", ")", ":", "\n", "        ", "\"\"\"Initialize the PP-MSVSR class.\n\n        Args:\n            generator (dict): config of generator.\n            fix_iter (dict): config of fix_iter.\n            pixel_criterion (dict): config of pixel criterion.\n        \"\"\"", "\n", "super", "(", "MultiStageVSRModel", ",", "self", ")", ".", "__init__", "(", "generator", ",", "pixel_criterion", ")", "\n", "self", ".", "fix_iter", "=", "fix_iter", "\n", "self", ".", "current_iter", "=", "1", "\n", "self", ".", "flag", "=", "True", "\n", "init_basicvsr_weight", "(", "self", ".", "nets", "[", "'generator'", "]", ")", "\n", "if", "not", "self", ".", "fix_iter", ":", "\n", "            ", "print", "(", "'init train all parameters!!!'", ")", "\n", "for", "name", ",", "param", "in", "self", ".", "nets", "[", "'generator'", "]", ".", "named_parameters", "(", ")", ":", "\n", "                ", "param", ".", "trainable", "=", "True", "\n", "if", "'spynet'", "in", "name", ":", "\n", "                    ", "param", ".", "optimize_attr", "[", "'learning_rate'", "]", "=", "0.25", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.msvsr_model.MultiStageVSRModel.setup_input": [[53, 60], ["paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor"], "methods", ["None"], ["", "", "", "", "def", "setup_input", "(", "self", ",", "input", ")", ":", "\n", "        ", "self", ".", "lq", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'lq'", "]", ")", "\n", "self", ".", "visual_items", "[", "'lq'", "]", "=", "self", ".", "lq", "[", ":", ",", "0", ",", ":", ",", ":", ",", ":", "]", "\n", "if", "'gt'", "in", "input", ":", "\n", "            ", "self", ".", "gt", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'gt'", "]", ")", "\n", "self", ".", "visual_items", "[", "'gt'", "]", "=", "self", ".", "gt", "[", ":", ",", "0", ",", ":", ",", ":", ",", ":", "]", "\n", "", "self", ".", "image_paths", "=", "input", "[", "'lq_path'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.msvsr_model.MultiStageVSRModel.train_iter": [[61, 98], ["optims[].clear_grad", "isinstance", "msvsr_model.MultiStageVSRModel.pixel_criterion", "sum", "msvsr_model.MultiStageVSRModel.loss.backward", "optims[].step", "msvsr_model.MultiStageVSRModel.pixel_criterion", "print", "msvsr_model.MultiStageVSRModel.nets[].named_parameters", "print", "msvsr_model.MultiStageVSRModel.nets[].named_parameters", "msvsr_model.MultiStageVSRModel.nets.values", "msvsr_model.MultiStageVSRModel.losses.items"], "methods", ["None"], ["", "def", "train_iter", "(", "self", ",", "optims", "=", "None", ")", ":", "\n", "        ", "optims", "[", "'optim'", "]", ".", "clear_grad", "(", ")", "\n", "if", "self", ".", "fix_iter", ":", "\n", "            ", "if", "self", ".", "current_iter", "==", "1", ":", "\n", "                ", "print", "(", "'Train MSVSR with fixed spynet for'", ",", "self", ".", "fix_iter", ",", "\n", "'iters.'", ")", "\n", "for", "name", ",", "param", "in", "self", ".", "nets", "[", "'generator'", "]", ".", "named_parameters", "(", ")", ":", "\n", "                    ", "if", "'spynet'", "in", "name", ":", "\n", "                        ", "param", ".", "trainable", "=", "False", "\n", "", "", "", "elif", "self", ".", "current_iter", ">=", "self", ".", "fix_iter", "+", "1", "and", "self", ".", "flag", ":", "\n", "                ", "print", "(", "'Train all the parameters.'", ")", "\n", "for", "name", ",", "param", "in", "self", ".", "nets", "[", "'generator'", "]", ".", "named_parameters", "(", ")", ":", "\n", "                    ", "param", ".", "trainable", "=", "True", "\n", "if", "'spynet'", "in", "name", ":", "\n", "                        ", "param", ".", "optimize_attr", "[", "'learning_rate'", "]", "=", "0.25", "\n", "", "", "self", ".", "flag", "=", "False", "\n", "for", "net", "in", "self", ".", "nets", ".", "values", "(", ")", ":", "\n", "                    ", "net", ".", "find_unused_parameters", "=", "False", "\n", "\n", "", "", "", "output", "=", "self", ".", "nets", "[", "'generator'", "]", "(", "self", ".", "lq", ")", "\n", "if", "isinstance", "(", "output", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "            ", "out_stage2", ",", "output", "=", "output", "\n", "loss_pix_stage2", "=", "self", ".", "pixel_criterion", "(", "out_stage2", ",", "self", ".", "gt", ")", "\n", "self", ".", "losses", "[", "'loss_pix_stage2'", "]", "=", "loss_pix_stage2", "\n", "", "self", ".", "visual_items", "[", "'output'", "]", "=", "output", "[", ":", ",", "0", ",", ":", ",", ":", ",", ":", "]", "\n", "# pixel loss", "\n", "loss_pix", "=", "self", ".", "pixel_criterion", "(", "output", ",", "self", ".", "gt", ")", "\n", "self", ".", "losses", "[", "'loss_pix'", "]", "=", "loss_pix", "\n", "\n", "self", ".", "loss", "=", "sum", "(", "_value", "for", "_key", ",", "_value", "in", "self", ".", "losses", ".", "items", "(", ")", "\n", "if", "'loss_pix'", "in", "_key", ")", "\n", "self", ".", "losses", "[", "'loss'", "]", "=", "self", ".", "loss", "\n", "\n", "self", ".", "loss", ".", "backward", "(", ")", "\n", "optims", "[", "'optim'", "]", ".", "step", "(", ")", "\n", "\n", "self", ".", "current_iter", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.msvsr_model.MultiStageVSRModel.test_iter": [[99, 121], ["msvsr_model.MultiStageVSRModel.gt.cpu", "msvsr_model.MultiStageVSRModel.nets[].eval", "msvsr_model.MultiStageVSRModel.nets[].train", "range", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "isinstance", "out_img.append", "gt_img.append", "metrics.values", "utils.visual.tensor2img", "utils.visual.tensor2img", "metric.update"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.tensor2img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.tensor2img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update"], ["", "def", "test_iter", "(", "self", ",", "metrics", "=", "None", ")", ":", "\n", "        ", "self", ".", "gt", "=", "self", ".", "gt", ".", "cpu", "(", ")", "\n", "self", ".", "nets", "[", "'generator'", "]", ".", "eval", "(", ")", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "            ", "output", "=", "self", ".", "nets", "[", "'generator'", "]", "(", "self", ".", "lq", ")", "\n", "if", "isinstance", "(", "output", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "                ", "out_stage1", ",", "output", "=", "output", "\n", "", "", "self", ".", "nets", "[", "'generator'", "]", ".", "train", "(", ")", "\n", "\n", "out_img", "=", "[", "]", "\n", "gt_img", "=", "[", "]", "\n", "\n", "_", ",", "t", ",", "_", ",", "_", ",", "_", "=", "self", ".", "gt", ".", "shape", "\n", "for", "i", "in", "range", "(", "t", ")", ":", "\n", "            ", "out_tensor", "=", "output", "[", "0", ",", "i", "]", "\n", "gt_tensor", "=", "self", ".", "gt", "[", "0", ",", "i", "]", "\n", "out_img", ".", "append", "(", "tensor2img", "(", "out_tensor", ",", "(", "0.", ",", "1.", ")", ")", ")", "\n", "gt_img", ".", "append", "(", "tensor2img", "(", "gt_tensor", ",", "(", "0.", ",", "1.", ")", ")", ")", "\n", "\n", "", "if", "metrics", "is", "not", "None", ":", "\n", "            ", "for", "metric", "in", "metrics", ".", "values", "(", ")", ":", "\n", "                ", "metric", ".", "update", "(", "out_img", ",", "gt_img", ",", "is_seq", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.msvsr_model.init_basicvsr_weight": [[123, 135], ["net.children", "hasattr", "modules.init.reset_parameters", "isinstance", "msvsr_model.init_basicvsr_weight", "isinstance"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.reset_parameters", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.basicvsr_model.init_basicvsr_weight"], ["", "", "", "", "def", "init_basicvsr_weight", "(", "net", ")", ":", "\n", "    ", "for", "m", "in", "net", ".", "children", "(", ")", ":", "\n", "        ", "if", "hasattr", "(", "m", ",", "\n", "'weight'", ")", "and", "not", "isinstance", "(", "m", ",", "\n", "(", "nn", ".", "BatchNorm", ",", "nn", ".", "BatchNorm2D", ")", ")", ":", "\n", "            ", "reset_parameters", "(", "m", ")", "\n", "continue", "\n", "\n", "", "if", "(", "not", "isinstance", "(", "\n", "m", ",", "\n", "(", "ResidualBlockNoBN", ",", "PixelShufflePack", ",", "SPyNet", ",", "ModifiedSPyNet", ")", ")", ")", ":", "\n", "            ", "init_basicvsr_weight", "(", "m", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.builder.build_model": [[23, 28], ["cfg.copy", "cfg.copy.pop", "MODELS.get"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get"], ["from", ".", "repeat_dataset", "import", "RepeatDataset", "\n", "from", ".", ".", "utils", ".", "registry", "import", "Registry", ",", "build_from_config", "\n", "\n", "DATASETS", "=", "Registry", "(", "\"DATASETS\"", ")", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.singan_model.SinGANModel.__init__": [[57, 125], ["base_model.BaseModel.__init__", "paddle.to_tensor().unsqueeze", "paddle.to_tensor().unsqueeze", "paddle.to_tensor().unsqueeze", "paddle.to_tensor().unsqueeze", "paddle.to_tensor().unsqueeze", "paddle.to_tensor().unsqueeze", "paddle.to_tensor().unsqueeze", "paddle.to_tensor().unsqueeze", "paddle.to_tensor().unsqueeze", "math.pow", "generators.builder.build_generator", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "discriminator.pop", "discriminator.pop", "range", "criterions.builder.build_criterion", "criterions.builder.build_criterion", "criterions.builder.build_criterion", "collections.OrderedDict", "paddle.Compose", "paddle.Compose", "paddle.Compose", "cv2.cvtColor", "math.ceil", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "generator.get", "min", "min", "discriminators.builder.build_discriminator", "singan_model.quant", "cv2.imread", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "math.log", "min", "range", "paddle.Transpose", "paddle.Transpose", "paddle.Transpose", "paddle.Normalize", "paddle.Normalize", "paddle.Normalize", "pow", "pow", "min", "math.floor", "math.floor"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.builder.build_discriminator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.singan_model.quant", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.imread"], ["    ", "def", "__init__", "(", "self", ",", "\n", "generator", ",", "\n", "discriminator", ",", "\n", "gan_criterion", "=", "None", ",", "\n", "recon_criterion", "=", "None", ",", "\n", "gp_criterion", "=", "None", ",", "\n", "train_image", "=", "None", ",", "\n", "scale_factor", "=", "0.75", ",", "\n", "min_size", "=", "25", ",", "\n", "is_finetune", "=", "False", ",", "\n", "finetune_scale", "=", "1", ",", "\n", "color_num", "=", "5", ",", "\n", "gen_iters", "=", "3", ",", "\n", "disc_iters", "=", "3", ",", "\n", "noise_amp_init", "=", "0.1", ")", ":", "\n", "        ", "super", "(", "SinGANModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# setup config", "\n", "self", ".", "gen_iters", "=", "gen_iters", "\n", "self", ".", "disc_iters", "=", "disc_iters", "\n", "self", ".", "min_size", "=", "min_size", "\n", "self", ".", "is_finetune", "=", "is_finetune", "\n", "self", ".", "noise_amp_init", "=", "noise_amp_init", "\n", "self", ".", "train_image", "=", "T", ".", "Compose", "(", "[", "\n", "T", ".", "Transpose", "(", ")", ",", "\n", "T", ".", "Normalize", "(", "127.5", ",", "127.5", ")", "\n", "]", ")", "(", "cv2", ".", "cvtColor", "(", "cv2", ".", "imread", "(", "train_image", ",", "cv2", ".", "IMREAD_COLOR", ")", ",", "cv2", ".", "COLOR_BGR2RGB", ")", ")", "\n", "self", ".", "train_image", "=", "paddle", ".", "to_tensor", "(", "self", ".", "train_image", ")", ".", "unsqueeze", "(", "0", ")", "\n", "self", ".", "scale_num", "=", "math", ".", "ceil", "(", "math", ".", "log", "(", "\n", "self", ".", "min_size", "/", "min", "(", "self", ".", "train_image", ".", "shape", "[", "-", "2", ":", "]", ")", ",", "\n", "scale_factor", ")", ")", "+", "1", "\n", "self", ".", "scale_factor", "=", "math", ".", "pow", "(", "\n", "self", ".", "min_size", "/", "min", "(", "self", ".", "train_image", ".", "shape", "[", "-", "2", ":", "]", ")", ",", "\n", "1", "/", "(", "self", ".", "scale_num", "-", "1", ")", ")", "\n", "self", ".", "reals", "=", "[", "\n", "F", ".", "interpolate", "(", "self", ".", "train_image", ",", "None", ",", "self", ".", "scale_factor", "**", "i", ",", "'bicubic'", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "scale_num", "-", "1", ",", "-", "1", ",", "-", "1", ")", "]", "\n", "\n", "# build generator", "\n", "generator", "[", "'scale_num'", "]", "=", "self", ".", "scale_num", "\n", "generator", "[", "'coarsest_shape'", "]", "=", "self", ".", "reals", "[", "0", "]", ".", "shape", "\n", "self", ".", "nets", "[", "'netG'", "]", "=", "build_generator", "(", "generator", ")", "\n", "self", ".", "niose_pad_size", "=", "0", "if", "generator", ".", "get", "(", "'noise_zero_pad'", ",", "True", ")", "else", "self", ".", "nets", "[", "'netG'", "]", ".", "_pad_size", "\n", "self", ".", "nets", "[", "'netG'", "]", ".", "scale_factor", "=", "paddle", ".", "to_tensor", "(", "self", ".", "scale_factor", ",", "'float32'", ")", "\n", "\n", "# build discriminator", "\n", "nfc_init", "=", "discriminator", ".", "pop", "(", "'nfc_init'", ",", "32", ")", "\n", "min_nfc_init", "=", "discriminator", ".", "pop", "(", "'min_nfc_init'", ",", "32", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "scale_num", ")", ":", "\n", "            ", "discriminator", "[", "'nfc'", "]", "=", "min", "(", "nfc_init", "*", "pow", "(", "2", ",", "math", ".", "floor", "(", "i", "/", "4", ")", ")", ",", "128", ")", "\n", "discriminator", "[", "'min_nfc'", "]", "=", "min", "(", "min_nfc_init", "*", "pow", "(", "2", ",", "math", ".", "floor", "(", "i", "/", "4", ")", ")", ",", "128", ")", "\n", "self", ".", "nets", "[", "f'netD{i}'", "]", "=", "build_discriminator", "(", "discriminator", ")", "\n", "\n", "# build criterion", "\n", "", "self", ".", "gan_criterion", "=", "build_criterion", "(", "gan_criterion", ")", "\n", "self", ".", "recon_criterion", "=", "build_criterion", "(", "recon_criterion", ")", "\n", "self", ".", "gp_criterion", "=", "build_criterion", "(", "gp_criterion", ")", "\n", "\n", "if", "self", ".", "is_finetune", ":", "\n", "            ", "self", ".", "finetune_scale", "=", "finetune_scale", "\n", "self", ".", "quant_real", ",", "self", ".", "quant_centers", "=", "quant", "(", "self", ".", "reals", "[", "finetune_scale", "]", ",", "color_num", ")", "\n", "\n", "\n", "# setup training config", "\n", "", "self", ".", "lr_schedulers", "=", "OrderedDict", "(", ")", "\n", "self", ".", "current_scale", "=", "(", "finetune_scale", "if", "self", ".", "is_finetune", "else", "0", ")", "-", "1", "\n", "self", ".", "current_iter", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.singan_model.SinGANModel.set_total_iter": [[126, 132], ["super().set_total_iter", "math.ceil"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_total_iter"], ["", "def", "set_total_iter", "(", "self", ",", "total_iter", ")", ":", "\n", "        ", "super", "(", ")", ".", "set_total_iter", "(", "total_iter", ")", "\n", "if", "self", ".", "is_finetune", ":", "\n", "            ", "self", ".", "scale_iters", "=", "total_iter", "\n", "", "else", ":", "\n", "            ", "self", ".", "scale_iters", "=", "math", ".", "ceil", "(", "total_iter", "/", "self", ".", "scale_num", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.singan_model.SinGANModel.setup_lr_schedulers": [[133, 137], ["range", "solver.build_lr_scheduler"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.solver.builder.build_lr_scheduler"], ["", "", "def", "setup_lr_schedulers", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "self", ".", "scale_num", ")", ":", "\n", "            ", "self", ".", "lr_schedulers", "[", "f\"lr{i}\"", "]", "=", "build_lr_scheduler", "(", "cfg", ")", "\n", "", "return", "self", ".", "lr_schedulers", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.singan_model.SinGANModel.setup_optimizers": [[138, 145], ["range", "solver.build_optimizer", "solver.build_optimizer", "singan_model.SinGANModel.nets[].generators[].parameters", "singan_model.SinGANModel.nets[].parameters"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.solver.builder.build_optimizer", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.solver.builder.build_optimizer"], ["", "def", "setup_optimizers", "(", "self", ",", "lr_schedulers", ",", "cfg", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "self", ".", "scale_num", ")", ":", "\n", "            ", "self", ".", "optimizers", "[", "f'optim_netG{i}'", "]", "=", "build_optimizer", "(", "\n", "cfg", "[", "'optimizer_G'", "]", ",", "lr_schedulers", "[", "f\"lr{i}\"", "]", ",", "self", ".", "nets", "[", "f'netG'", "]", ".", "generators", "[", "i", "]", ".", "parameters", "(", ")", ")", "\n", "self", ".", "optimizers", "[", "f'optim_netD{i}'", "]", "=", "build_optimizer", "(", "\n", "cfg", "[", "'optimizer_D'", "]", ",", "lr_schedulers", "[", "f\"lr{i}\"", "]", ",", "self", ".", "nets", "[", "f'netD{i}'", "]", ".", "parameters", "(", ")", ")", "\n", "", "return", "self", ".", "optimizers", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.singan_model.SinGANModel.setup_input": [[146, 148], ["None"], "methods", ["None"], ["", "def", "setup_input", "(", "self", ",", "input", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.singan_model.SinGANModel.backward_D": [[149, 162], ["singan_model.SinGANModel.gan_criterion", "singan_model.SinGANModel.gan_criterion", "singan_model.SinGANModel.gp_criterion", "singan_model.SinGANModel.loss_D.backward"], "methods", ["None"], ["", "def", "backward_D", "(", "self", ")", ":", "\n", "        ", "self", ".", "loss_D_real", "=", "self", ".", "gan_criterion", "(", "self", ".", "pred_real", ",", "True", ",", "True", ")", "\n", "self", ".", "loss_D_fake", "=", "self", ".", "gan_criterion", "(", "self", ".", "pred_fake", ",", "False", ",", "True", ")", "\n", "self", ".", "loss_D_gp", "=", "self", ".", "gp_criterion", "(", "self", ".", "nets", "[", "f'netD{self.current_scale}'", "]", ",", "\n", "self", ".", "real_img", ",", "\n", "self", ".", "fake_img", ")", "\n", "self", ".", "loss_D", "=", "self", ".", "loss_D_real", "+", "self", ".", "loss_D_fake", "+", "self", ".", "loss_D_gp", "\n", "self", ".", "loss_D", ".", "backward", "(", ")", "\n", "\n", "self", ".", "losses", "[", "f'scale{self.current_scale}/D_total_loss'", "]", "=", "self", ".", "loss_D", "\n", "self", ".", "losses", "[", "f'scale{self.current_scale}/D_real_loss'", "]", "=", "self", ".", "loss_D_real", "\n", "self", ".", "losses", "[", "f'scale{self.current_scale}/D_fake_loss'", "]", "=", "self", ".", "loss_D_fake", "\n", "self", ".", "losses", "[", "f'scale{self.current_scale}/D_gradient_penalty'", "]", "=", "self", ".", "loss_D_gp", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.singan_model.SinGANModel.backward_G": [[163, 171], ["singan_model.SinGANModel.gan_criterion", "singan_model.SinGANModel.recon_criterion", "singan_model.SinGANModel.loss_G.backward"], "methods", ["None"], ["", "def", "backward_G", "(", "self", ")", ":", "\n", "        ", "self", ".", "loss_G_gan", "=", "self", ".", "gan_criterion", "(", "self", ".", "pred_fake", ",", "True", ",", "False", ")", "\n", "self", ".", "loss_G_recon", "=", "self", ".", "recon_criterion", "(", "self", ".", "recon_img", ",", "self", ".", "real_img", ")", "\n", "self", ".", "loss_G", "=", "self", ".", "loss_G_gan", "+", "self", ".", "loss_G_recon", "\n", "self", ".", "loss_G", ".", "backward", "(", ")", "\n", "\n", "self", ".", "losses", "[", "f'scale{self.current_scale}/G_adv_loss'", "]", "=", "self", ".", "loss_G_gan", "\n", "self", ".", "losses", "[", "f'scale{self.current_scale}/G_recon_loss'", "]", "=", "self", ".", "loss_G_recon", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.singan_model.SinGANModel.scale_prepare": [[172, 208], ["range", "singan_model.SinGANModel.losses.clear", "singan_model.SinGANModel.visual_items.clear", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "range", "singan_model.SinGANModel.optimizers.pop", "singan_model.SinGANModel.optimizers.pop", "range", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "singan_model.SinGANModel.set_requires_grad", "z_pyramid.append", "singan_model.quant_to_centers", "paddle.mse_loss().sqrt", "paddle.mse_loss().sqrt", "paddle.mse_loss().sqrt", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "singan_model.pad_shape", "paddle.mse_loss", "paddle.mse_loss", "paddle.mse_loss"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.singan_model.quant_to_centers", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.singan_model.pad_shape"], ["", "def", "scale_prepare", "(", "self", ")", ":", "\n", "        ", "self", ".", "real_img", "=", "self", ".", "reals", "[", "self", ".", "current_scale", "]", "\n", "self", ".", "lr_scheduler", "=", "self", ".", "lr_schedulers", "[", "f\"lr{self.current_scale}\"", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "current_scale", ")", ":", "\n", "            ", "self", ".", "optimizers", ".", "pop", "(", "f'optim_netG{i}'", ",", "None", ")", "\n", "self", ".", "optimizers", ".", "pop", "(", "f'optim_netD{i}'", ",", "None", ")", "\n", "", "self", ".", "losses", ".", "clear", "(", ")", "\n", "self", ".", "visual_items", ".", "clear", "(", ")", "\n", "self", ".", "visual_items", "[", "f'real_img_scale{self.current_scale}'", "]", "=", "self", ".", "real_img", "\n", "if", "self", ".", "is_finetune", ":", "\n", "            ", "self", ".", "visual_items", "[", "'quant_real'", "]", "=", "self", ".", "quant_real", "\n", "\n", "", "self", ".", "recon_prev", "=", "paddle", ".", "zeros_like", "(", "self", ".", "reals", "[", "0", "]", ")", "\n", "if", "self", ".", "current_scale", ">", "0", ":", "\n", "            ", "z_pyramid", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "current_scale", ")", ":", "\n", "                ", "if", "i", "==", "0", ":", "\n", "                    ", "z", "=", "self", ".", "nets", "[", "'netG'", "]", ".", "z_fixed", "\n", "", "else", ":", "\n", "                    ", "z", "=", "paddle", ".", "zeros", "(", "\n", "pad_shape", "(", "\n", "self", ".", "reals", "[", "i", "]", ".", "shape", ",", "self", ".", "niose_pad_size", ")", ")", "\n", "", "z_pyramid", ".", "append", "(", "z", ")", "\n", "", "self", ".", "recon_prev", "=", "self", ".", "nets", "[", "'netG'", "]", "(", "\n", "z_pyramid", ",", "self", ".", "recon_prev", ",", "\n", "self", ".", "current_scale", "-", "1", ",", "0", ")", ".", "detach", "(", ")", "\n", "self", ".", "recon_prev", "=", "F", ".", "interpolate", "(", "\n", "self", ".", "recon_prev", ",", "self", ".", "real_img", ".", "shape", "[", "-", "2", ":", "]", ",", "None", ",", "'bicubic'", ")", "\n", "if", "self", ".", "is_finetune", ":", "\n", "                ", "self", ".", "recon_prev", "=", "quant_to_centers", "(", "self", ".", "recon_prev", ",", "self", ".", "quant_centers", ")", "\n", "", "self", ".", "nets", "[", "'netG'", "]", ".", "sigma", "[", "self", ".", "current_scale", "]", "=", "F", ".", "mse_loss", "(", "\n", "self", ".", "real_img", ",", "self", ".", "recon_prev", "\n", ")", ".", "sqrt", "(", ")", "*", "self", ".", "noise_amp_init", "\n", "\n", "", "for", "i", "in", "range", "(", "self", ".", "scale_num", ")", ":", "\n", "            ", "self", ".", "set_requires_grad", "(", "self", ".", "nets", "[", "'netG'", "]", ".", "generators", "[", "i", "]", ",", "i", "==", "self", ".", "current_scale", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.singan_model.SinGANModel.forward": [[209, 245], ["paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "singan_model.quant_to_centers", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "singan_model.SinGANModel.fake_img.detach", "singan_model.pad_shape", "singan_model.pad_shape", "singan_model.pad_shape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.singan_model.quant_to_centers", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.singan_model.pad_shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.singan_model.pad_shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.singan_model.pad_shape"], ["", "", "def", "forward", "(", "self", ")", ":", "\n", "        ", "if", "not", "self", ".", "is_finetune", ":", "\n", "            ", "self", ".", "fake_img", "=", "self", ".", "nets", "[", "'netG'", "]", "(", "\n", "self", ".", "z_pyramid", ",", "\n", "paddle", ".", "zeros", "(", "\n", "pad_shape", "(", "self", ".", "z_pyramid", "[", "0", "]", ".", "shape", ",", "-", "self", ".", "niose_pad_size", ")", ")", ",", "\n", "self", ".", "current_scale", ",", "0", ")", "\n", "", "else", ":", "\n", "            ", "x_prev", "=", "self", ".", "nets", "[", "'netG'", "]", "(", "\n", "self", ".", "z_pyramid", "[", ":", "self", ".", "finetune_scale", "]", ",", "\n", "paddle", ".", "zeros", "(", "\n", "pad_shape", "(", "self", ".", "z_pyramid", "[", "0", "]", ".", "shape", ",", "-", "self", ".", "niose_pad_size", ")", ")", ",", "\n", "self", ".", "finetune_scale", "-", "1", ",", "0", ")", "\n", "x_prev", "=", "F", ".", "interpolate", "(", "x_prev", ",", "self", ".", "z_pyramid", "[", "self", ".", "finetune_scale", "]", ".", "shape", "[", "-", "2", ":", "]", ",", "None", ",", "'bicubic'", ")", "\n", "x_prev_quant", "=", "quant_to_centers", "(", "x_prev", ",", "self", ".", "quant_centers", ")", "\n", "self", ".", "fake_img", "=", "self", ".", "nets", "[", "'netG'", "]", "(", "\n", "self", ".", "z_pyramid", "[", "self", ".", "finetune_scale", ":", "]", ",", "\n", "x_prev_quant", ",", "\n", "self", ".", "current_scale", ",", "self", ".", "finetune_scale", ")", "\n", "\n", "", "self", ".", "recon_img", "=", "self", ".", "nets", "[", "'netG'", "]", "(", "\n", "[", "(", "paddle", ".", "randn", "if", "self", ".", "current_scale", "==", "0", "else", "paddle", ".", "zeros", ")", "(", "\n", "pad_shape", "(", "self", ".", "real_img", ".", "shape", ",", "self", ".", "niose_pad_size", ")", ")", "]", ",", "\n", "self", ".", "recon_prev", ",", "\n", "self", ".", "current_scale", ",", "\n", "self", ".", "current_scale", ")", "\n", "\n", "self", ".", "pred_real", "=", "self", ".", "nets", "[", "f'netD{self.current_scale}'", "]", "(", "self", ".", "real_img", ")", "\n", "self", ".", "pred_fake", "=", "self", ".", "nets", "[", "f'netD{self.current_scale}'", "]", "(", "\n", "self", ".", "fake_img", ".", "detach", "(", ")", "if", "self", ".", "update_D", "else", "self", ".", "fake_img", ")", "\n", "\n", "self", ".", "visual_items", "[", "f'fake_img_scale{self.current_scale}'", "]", "=", "self", ".", "fake_img", "\n", "self", ".", "visual_items", "[", "f'recon_img_scale{self.current_scale}'", "]", "=", "self", ".", "recon_img", "\n", "if", "self", ".", "is_finetune", ":", "\n", "            ", "self", ".", "visual_items", "[", "f'prev_img_scale{self.current_scale}'", "]", "=", "x_prev", "\n", "self", ".", "visual_items", "[", "f'quant_prev_img_scale{self.current_scale}'", "]", "=", "x_prev_quant", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.singan_model.SinGANModel.train_iter": [[246, 268], ["singan_model.SinGANModel.set_requires_grad", "singan_model.SinGANModel.forward", "singan_model.SinGANModel.scale_prepare", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "optimizers[].clear_grad", "singan_model.SinGANModel.backward_D", "optimizers[].step", "optimizers[].clear_grad", "singan_model.SinGANModel.backward_G", "optimizers[].step", "singan_model.pad_shape", "range"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.vgg16.forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.singan_model.SinGANModel.scale_prepare", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.backward_D", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.backward_G", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.singan_model.pad_shape"], ["", "", "def", "train_iter", "(", "self", ",", "optimizers", "=", "None", ")", ":", "\n", "        ", "if", "self", ".", "current_iter", "%", "self", ".", "scale_iters", "==", "0", ":", "\n", "            ", "self", ".", "current_scale", "+=", "1", "\n", "self", ".", "scale_prepare", "(", ")", "\n", "\n", "", "self", ".", "z_pyramid", "=", "[", "paddle", ".", "randn", "(", "\n", "pad_shape", "(", "self", ".", "reals", "[", "i", "]", ".", "shape", ",", "self", ".", "niose_pad_size", ")", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "current_scale", "+", "1", ")", "]", "\n", "\n", "self", ".", "update_D", "=", "(", "self", ".", "current_iter", "%", "(", "self", ".", "disc_iters", "+", "self", ".", "gen_iters", ")", "<", "self", ".", "disc_iters", ")", "\n", "self", ".", "set_requires_grad", "(", "self", ".", "nets", "[", "f'netD{self.current_scale}'", "]", ",", "self", ".", "update_D", ")", "\n", "self", ".", "forward", "(", ")", "\n", "if", "self", ".", "update_D", ":", "\n", "            ", "optimizers", "[", "f'optim_netD{self.current_scale}'", "]", ".", "clear_grad", "(", ")", "\n", "self", ".", "backward_D", "(", ")", "\n", "optimizers", "[", "f'optim_netD{self.current_scale}'", "]", ".", "step", "(", ")", "\n", "", "else", ":", "\n", "            ", "optimizers", "[", "f'optim_netG{self.current_scale}'", "]", ".", "clear_grad", "(", ")", "\n", "self", ".", "backward_G", "(", ")", "\n", "optimizers", "[", "f'optim_netG{self.current_scale}'", "]", ".", "step", "(", ")", "\n", "\n", "", "self", ".", "current_iter", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.singan_model.SinGANModel.test_iter": [[269, 284], ["singan_model.SinGANModel.nets[].eval", "singan_model.SinGANModel.nets[].train", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "singan_model.pad_shape", "range", "singan_model.pad_shape", "metrics.values", "metric.update"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.singan_model.pad_shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.singan_model.pad_shape", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update"], ["", "def", "test_iter", "(", "self", ",", "metrics", "=", "None", ")", ":", "\n", "        ", "z_pyramid", "=", "[", "paddle", ".", "randn", "(", "\n", "pad_shape", "(", "self", ".", "reals", "[", "i", "]", ".", "shape", ",", "self", ".", "niose_pad_size", ")", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "scale_num", ")", "]", "\n", "self", ".", "nets", "[", "'netG'", "]", ".", "eval", "(", ")", "\n", "fake_img", "=", "self", ".", "nets", "[", "'netG'", "]", "(", "\n", "z_pyramid", ",", "\n", "paddle", ".", "zeros", "(", "pad_shape", "(", "z_pyramid", "[", "0", "]", ".", "shape", ",", "-", "self", ".", "niose_pad_size", ")", ")", ",", "\n", "self", ".", "scale_num", "-", "1", ",", "0", ")", "\n", "self", ".", "visual_items", "[", "'fake_img_test'", "]", "=", "fake_img", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "            ", "if", "metrics", "is", "not", "None", ":", "\n", "                ", "for", "metric", "in", "metrics", ".", "values", "(", ")", ":", "\n", "                    ", "metric", ".", "update", "(", "fake_img", ",", "self", ".", "train_image", ")", "\n", "", "", "", "self", ".", "nets", "[", "'netG'", "]", ".", "train", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.singan_model.SinGANModel.export_model": [[298, 309], ["singan_model.SinGANModel.InferGenerator", "singan_model.SinGANModel.set_config", "paddle.jit.save", "paddle.jit.save", "paddle.jit.save", "paddle.jit.save", "paddle.jit.save", "paddle.jit.save", "paddle.jit.save", "paddle.jit.save", "paddle.jit.save", "singan_model.pad_shape", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.singan_model.pad_shape"], ["", "", "def", "export_model", "(", "self", ",", "\n", "export_model", "=", "None", ",", "\n", "output_dir", "=", "None", ",", "\n", "inputs_size", "=", "None", ",", "\n", "export_serving_model", "=", "False", ")", ":", "\n", "        ", "noise_shapes", "=", "[", "pad_shape", "(", "x", ".", "shape", ",", "self", ".", "niose_pad_size", ")", "for", "x", "in", "self", ".", "reals", "]", "\n", "infer_generator", "=", "self", ".", "InferGenerator", "(", ")", "\n", "infer_generator", ".", "set_config", "(", "self", ".", "nets", "[", "'netG'", "]", ",", "noise_shapes", ",", "self", ".", "scale_num", ")", "\n", "paddle", ".", "jit", ".", "save", "(", "infer_generator", ",", "\n", "os", ".", "path", ".", "join", "(", "output_dir", ",", "\"singan_random_sample\"", ")", ",", "\n", "input_spec", "=", "[", "1", "]", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.singan_model.pad_shape": [[36, 40], ["None"], "function", ["None"], ["def", "pad_shape", "(", "shape", ",", "pad_size", ")", ":", "\n", "    ", "shape", "[", "-", "2", "]", "+=", "2", "*", "pad_size", "\n", "shape", "[", "-", "1", "]", "+=", "2", "*", "pad_size", "\n", "return", "shape", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.singan_model.quant": [[41, 47], ["sklearn.cluster.KMeans().fit", "centers[].reshape().transpose", "centers[].reshape().transpose.transpose().reshape", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "sklearn.cluster.KMeans", "centers[].reshape", "centers[].reshape().transpose.transpose"], "function", ["None"], ["", "def", "quant", "(", "x", ",", "num", ")", ":", "\n", "    ", "n", ",", "c", ",", "h", ",", "w", "=", "x", ".", "shape", "\n", "kmeans", "=", "KMeans", "(", "num", ",", "random_state", "=", "0", ")", ".", "fit", "(", "x", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", ".", "reshape", "(", "[", "-", "1", ",", "c", "]", ")", ")", "\n", "centers", "=", "kmeans", ".", "cluster_centers_", "\n", "x", "=", "centers", "[", "kmeans", ".", "labels_", "]", ".", "reshape", "(", "[", "n", ",", "h", ",", "w", ",", "c", "]", ")", ".", "transpose", "(", "[", "0", ",", "3", ",", "1", ",", "2", "]", ")", "\n", "return", "paddle", ".", "to_tensor", "(", "x", ",", "'float32'", ")", ",", "centers", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.singan_model.quant_to_centers": [[48, 54], ["sklearn.cluster.KMeans().fit", "centers[].reshape().transpose", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "centers[].reshape().transpose.transpose().reshape", "sklearn.cluster.KMeans", "centers[].reshape", "centers[].reshape().transpose.transpose"], "function", ["None"], ["", "def", "quant_to_centers", "(", "x", ",", "centers", ")", ":", "\n", "    ", "n", ",", "c", ",", "h", ",", "w", "=", "x", ".", "shape", "\n", "num", "=", "centers", ".", "shape", "[", "0", "]", "\n", "kmeans", "=", "KMeans", "(", "num", ",", "init", "=", "centers", ",", "n_init", "=", "1", ")", ".", "fit", "(", "x", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", ".", "reshape", "(", "[", "-", "1", ",", "c", "]", ")", ")", "\n", "x", "=", "centers", "[", "kmeans", ".", "labels_", "]", ".", "reshape", "(", "[", "n", ",", "h", ",", "w", ",", "c", "]", ")", ".", "transpose", "(", "[", "0", ",", "3", ",", "1", ",", "2", "]", ")", "\n", "return", "paddle", ".", "to_tensor", "(", "x", ",", "'float32'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.cycle_gan_model.CycleGANModel.__init__": [[34, 86], ["base_model.BaseModel.__init__", "generators.builder.build_generator", "generators.builder.build_generator", "modules.init.init_weights", "modules.init.init_weights", "utils.image_pool.ImagePool", "utils.image_pool.ImagePool", "discriminators.builder.build_discriminator", "discriminators.builder.build_discriminator", "modules.init.init_weights", "modules.init.init_weights", "criterions.build_criterion", "criterions.build_criterion", "criterions.build_criterion"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.PixelShufflePack.init_weights", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.PixelShufflePack.init_weights", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.builder.build_discriminator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.builder.build_discriminator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.PixelShufflePack.init_weights", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.PixelShufflePack.init_weights", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion"], ["def", "__init__", "(", "self", ",", "\n", "generator", ",", "\n", "discriminator", "=", "None", ",", "\n", "cycle_criterion", "=", "None", ",", "\n", "idt_criterion", "=", "None", ",", "\n", "gan_criterion", "=", "None", ",", "\n", "pool_size", "=", "50", ",", "\n", "direction", "=", "'a2b'", ",", "\n", "lambda_a", "=", "10.", ",", "\n", "lambda_b", "=", "10.", ")", ":", "\n", "        ", "\"\"\"Initialize the CycleGAN class.\n\n        Args:\n            generator (dict): config of generator.\n            discriminator (dict): config of discriminator.\n            cycle_criterion (dict): config of cycle criterion.\n        \"\"\"", "\n", "super", "(", "CycleGANModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "direction", "=", "direction", "\n", "\n", "self", ".", "lambda_a", "=", "lambda_a", "\n", "self", ".", "lambda_b", "=", "lambda_b", "\n", "# define generators", "\n", "# The naming is different from those used in the paper.", "\n", "# Code (vs. paper): G_A (G), G_B (F), D_A (D_Y), D_B (D_X)", "\n", "self", ".", "nets", "[", "'netG_A'", "]", "=", "build_generator", "(", "generator", ")", "\n", "self", ".", "nets", "[", "'netG_B'", "]", "=", "build_generator", "(", "generator", ")", "\n", "init_weights", "(", "self", ".", "nets", "[", "'netG_A'", "]", ")", "\n", "init_weights", "(", "self", ".", "nets", "[", "'netG_B'", "]", ")", "\n", "\n", "# define discriminators", "\n", "if", "discriminator", ":", "\n", "            ", "self", ".", "nets", "[", "'netD_A'", "]", "=", "build_discriminator", "(", "discriminator", ")", "\n", "self", ".", "nets", "[", "'netD_B'", "]", "=", "build_discriminator", "(", "discriminator", ")", "\n", "init_weights", "(", "self", ".", "nets", "[", "'netD_A'", "]", ")", "\n", "init_weights", "(", "self", ".", "nets", "[", "'netD_B'", "]", ")", "\n", "\n", "# create image buffer to store previously generated images", "\n", "", "self", ".", "fake_A_pool", "=", "ImagePool", "(", "pool_size", ")", "\n", "# create image buffer to store previously generated images", "\n", "self", ".", "fake_B_pool", "=", "ImagePool", "(", "pool_size", ")", "\n", "\n", "# define loss functions", "\n", "if", "gan_criterion", ":", "\n", "            ", "self", ".", "gan_criterion", "=", "build_criterion", "(", "gan_criterion", ")", "\n", "\n", "", "if", "cycle_criterion", ":", "\n", "            ", "self", ".", "cycle_criterion", "=", "build_criterion", "(", "cycle_criterion", ")", "\n", "\n", "", "if", "idt_criterion", ":", "\n", "            ", "self", ".", "idt_criterion", "=", "build_criterion", "(", "idt_criterion", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.cycle_gan_model.CycleGANModel.setup_input": [[87, 113], ["paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor"], "methods", ["None"], ["", "", "def", "setup_input", "(", "self", ",", "input", ")", ":", "\n", "        ", "\"\"\"Unpack input data from the dataloader and perform necessary pre-processing steps.\n\n        Args:\n            input (dict): include the data itself and its metadata information.\n\n        The option 'direction' can be used to swap domain A and domain B.\n        \"\"\"", "\n", "\n", "AtoB", "=", "self", ".", "direction", "==", "'a2b'", "\n", "\n", "if", "AtoB", ":", "\n", "            ", "if", "'A'", "in", "input", ":", "\n", "                ", "self", ".", "real_A", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'A'", "]", ")", "\n", "", "if", "'B'", "in", "input", ":", "\n", "                ", "self", ".", "real_B", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'B'", "]", ")", "\n", "", "", "else", ":", "\n", "            ", "if", "'B'", "in", "input", ":", "\n", "                ", "self", ".", "real_A", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'B'", "]", ")", "\n", "", "if", "'A'", "in", "input", ":", "\n", "                ", "self", ".", "real_B", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'A'", "]", ")", "\n", "\n", "", "", "if", "'A_paths'", "in", "input", ":", "\n", "            ", "self", ".", "image_paths", "=", "input", "[", "'A_paths'", "]", "\n", "", "elif", "'B_paths'", "in", "input", ":", "\n", "            ", "self", ".", "image_paths", "=", "input", "[", "'B_paths'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.cycle_gan_model.CycleGANModel.forward": [[114, 133], ["hasattr", "hasattr"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ")", ":", "\n", "        ", "\"\"\"Run forward pass; called by both functions <optimize_parameters> and <test>.\"\"\"", "\n", "if", "hasattr", "(", "self", ",", "'real_A'", ")", ":", "\n", "            ", "self", ".", "fake_B", "=", "self", ".", "nets", "[", "'netG_A'", "]", "(", "self", ".", "real_A", ")", "# G_A(A)", "\n", "self", ".", "rec_A", "=", "self", ".", "nets", "[", "'netG_B'", "]", "(", "self", ".", "fake_B", ")", "# G_B(G_A(A))", "\n", "\n", "# visual", "\n", "self", ".", "visual_items", "[", "'real_A'", "]", "=", "self", ".", "real_A", "\n", "self", ".", "visual_items", "[", "'fake_B'", "]", "=", "self", ".", "fake_B", "\n", "self", ".", "visual_items", "[", "'rec_A'", "]", "=", "self", ".", "rec_A", "\n", "\n", "", "if", "hasattr", "(", "self", ",", "'real_B'", ")", ":", "\n", "            ", "self", ".", "fake_A", "=", "self", ".", "nets", "[", "'netG_B'", "]", "(", "self", ".", "real_B", ")", "# G_B(B)", "\n", "self", ".", "rec_B", "=", "self", ".", "nets", "[", "'netG_A'", "]", "(", "self", ".", "fake_A", ")", "# G_A(G_B(B))", "\n", "\n", "# visual", "\n", "self", ".", "visual_items", "[", "'real_B'", "]", "=", "self", ".", "real_B", "\n", "self", ".", "visual_items", "[", "'fake_A'", "]", "=", "self", ".", "fake_A", "\n", "self", ".", "visual_items", "[", "'rec_B'", "]", "=", "self", ".", "rec_B", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.cycle_gan_model.CycleGANModel.backward_D_basic": [[134, 158], ["netD", "cycle_gan_model.CycleGANModel.gan_criterion", "netD", "cycle_gan_model.CycleGANModel.gan_criterion", "loss_D.backward", "fake.detach"], "methods", ["None"], ["", "", "def", "backward_D_basic", "(", "self", ",", "netD", ",", "real", ",", "fake", ")", ":", "\n", "        ", "\"\"\"Calculate GAN loss for the discriminator\n\n        Args:\n            netD (Layer): the discriminator D\n            real (paddle.Tensor): real images\n            fake (paddle.Tensor): images generated by a generator\n\n        Return:\n            the discriminator loss.\n\n        We also call loss_D.backward() to calculate the gradients.\n        \"\"\"", "\n", "# Real", "\n", "pred_real", "=", "netD", "(", "real", ")", "\n", "loss_D_real", "=", "self", ".", "gan_criterion", "(", "pred_real", ",", "True", ")", "\n", "# Fake", "\n", "pred_fake", "=", "netD", "(", "fake", ".", "detach", "(", ")", ")", "\n", "loss_D_fake", "=", "self", ".", "gan_criterion", "(", "pred_fake", ",", "False", ")", "\n", "# Combined loss and calculate gradients", "\n", "loss_D", "=", "(", "loss_D_real", "+", "loss_D_fake", ")", "*", "0.5", "\n", "\n", "loss_D", ".", "backward", "(", ")", "\n", "return", "loss_D", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.cycle_gan_model.CycleGANModel.backward_D_A": [[159, 165], ["cycle_gan_model.CycleGANModel.fake_B_pool.query", "cycle_gan_model.CycleGANModel.backward_D_basic"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.image_pool.ImagePool.query", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.cycle_gan_model.CycleGANModel.backward_D_basic"], ["", "def", "backward_D_A", "(", "self", ")", ":", "\n", "        ", "\"\"\"Calculate GAN loss for discriminator D_A\"\"\"", "\n", "fake_B", "=", "self", ".", "fake_B_pool", ".", "query", "(", "self", ".", "fake_B", ")", "\n", "self", ".", "loss_D_A", "=", "self", ".", "backward_D_basic", "(", "self", ".", "nets", "[", "'netD_A'", "]", ",", "self", ".", "real_B", ",", "\n", "fake_B", ")", "\n", "self", ".", "losses", "[", "'D_A_loss'", "]", "=", "self", ".", "loss_D_A", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.cycle_gan_model.CycleGANModel.backward_D_B": [[166, 172], ["cycle_gan_model.CycleGANModel.fake_A_pool.query", "cycle_gan_model.CycleGANModel.backward_D_basic"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.image_pool.ImagePool.query", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.cycle_gan_model.CycleGANModel.backward_D_basic"], ["", "def", "backward_D_B", "(", "self", ")", ":", "\n", "        ", "\"\"\"Calculate GAN loss for discriminator D_B\"\"\"", "\n", "fake_A", "=", "self", ".", "fake_A_pool", ".", "query", "(", "self", ".", "fake_A", ")", "\n", "self", ".", "loss_D_B", "=", "self", ".", "backward_D_basic", "(", "self", ".", "nets", "[", "'netD_B'", "]", ",", "self", ".", "real_A", ",", "\n", "fake_A", ")", "\n", "self", ".", "losses", "[", "'D_B_loss'", "]", "=", "self", ".", "loss_D_B", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.cycle_gan_model.CycleGANModel.backward_G": [[173, 218], ["cycle_gan_model.CycleGANModel.gan_criterion", "cycle_gan_model.CycleGANModel.gan_criterion", "cycle_gan_model.CycleGANModel.loss_G.backward", "cycle_gan_model.CycleGANModel.cycle_criterion", "cycle_gan_model.CycleGANModel.cycle_criterion", "cycle_gan_model.CycleGANModel.idt_criterion", "cycle_gan_model.CycleGANModel.idt_criterion"], "methods", ["None"], ["", "def", "backward_G", "(", "self", ")", ":", "\n", "        ", "\"\"\"Calculate the loss for generators G_A and G_B\"\"\"", "\n", "# Identity loss", "\n", "if", "self", ".", "idt_criterion", ":", "\n", "# G_A should be identity if real_B is fed: ||G_A(B) - B||", "\n", "            ", "self", ".", "idt_A", "=", "self", ".", "nets", "[", "'netG_A'", "]", "(", "self", ".", "real_B", ")", "\n", "\n", "self", ".", "loss_idt_A", "=", "self", ".", "idt_criterion", "(", "self", ".", "idt_A", ",", "\n", "self", ".", "real_B", ")", "*", "self", ".", "lambda_b", "\n", "# G_B should be identity if real_A is fed: ||G_B(A) - A||", "\n", "self", ".", "idt_B", "=", "self", ".", "nets", "[", "'netG_B'", "]", "(", "self", ".", "real_A", ")", "\n", "\n", "# visual", "\n", "self", ".", "visual_items", "[", "'idt_A'", "]", "=", "self", ".", "idt_A", "\n", "self", ".", "visual_items", "[", "'idt_B'", "]", "=", "self", ".", "idt_B", "\n", "\n", "self", ".", "loss_idt_B", "=", "self", ".", "idt_criterion", "(", "self", ".", "idt_B", ",", "\n", "self", ".", "real_A", ")", "*", "self", ".", "lambda_a", "\n", "", "else", ":", "\n", "            ", "self", ".", "loss_idt_A", "=", "0", "\n", "self", ".", "loss_idt_B", "=", "0", "\n", "\n", "# GAN loss D_A(G_A(A))", "\n", "", "self", ".", "loss_G_A", "=", "self", ".", "gan_criterion", "(", "self", ".", "nets", "[", "'netD_A'", "]", "(", "self", ".", "fake_B", ")", ",", "\n", "True", ")", "\n", "# GAN loss D_B(G_B(B))", "\n", "self", ".", "loss_G_B", "=", "self", ".", "gan_criterion", "(", "self", ".", "nets", "[", "'netD_B'", "]", "(", "self", ".", "fake_A", ")", ",", "\n", "True", ")", "\n", "# Forward cycle loss || G_B(G_A(A)) - A||", "\n", "self", ".", "loss_cycle_A", "=", "self", ".", "cycle_criterion", "(", "self", ".", "rec_A", ",", "\n", "self", ".", "real_A", ")", "*", "self", ".", "lambda_a", "\n", "# Backward cycle loss || G_A(G_B(B)) - B||", "\n", "self", ".", "loss_cycle_B", "=", "self", ".", "cycle_criterion", "(", "self", ".", "rec_B", ",", "\n", "self", ".", "real_B", ")", "*", "self", ".", "lambda_b", "\n", "\n", "self", ".", "losses", "[", "'G_idt_A_loss'", "]", "=", "self", ".", "loss_idt_A", "\n", "self", ".", "losses", "[", "'G_idt_B_loss'", "]", "=", "self", ".", "loss_idt_B", "\n", "self", ".", "losses", "[", "'G_A_adv_loss'", "]", "=", "self", ".", "loss_G_A", "\n", "self", ".", "losses", "[", "'G_B_adv_loss'", "]", "=", "self", ".", "loss_G_B", "\n", "self", ".", "losses", "[", "'G_A_cycle_loss'", "]", "=", "self", ".", "loss_cycle_A", "\n", "self", ".", "losses", "[", "'G_B_cycle_loss'", "]", "=", "self", ".", "loss_cycle_B", "\n", "# combined loss and calculate gradients", "\n", "self", ".", "loss_G", "=", "self", ".", "loss_G_A", "+", "self", ".", "loss_G_B", "+", "self", ".", "loss_cycle_A", "+", "self", ".", "loss_cycle_B", "+", "self", ".", "loss_idt_A", "+", "self", ".", "loss_idt_B", "\n", "\n", "self", ".", "loss_G", ".", "backward", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.cycle_gan_model.CycleGANModel.train_iter": [[219, 245], ["cycle_gan_model.CycleGANModel.forward", "cycle_gan_model.CycleGANModel.set_requires_grad", "optimizers[].clear_grad", "cycle_gan_model.CycleGANModel.backward_G", "cycle_gan_model.CycleGANModel.optimizers[].step", "cycle_gan_model.CycleGANModel.set_requires_grad", "optimizers[].clear_grad", "cycle_gan_model.CycleGANModel.backward_D_A", "cycle_gan_model.CycleGANModel.backward_D_B", "optimizers[].step"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.vgg16.forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.backward_G", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.cycle_gan_model.CycleGANModel.backward_D_A", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.cycle_gan_model.CycleGANModel.backward_D_B"], ["", "def", "train_iter", "(", "self", ",", "optimizers", "=", "None", ")", ":", "\n", "        ", "\"\"\"Calculate losses, gradients, and update network weights; called in every training iteration\"\"\"", "\n", "# forward", "\n", "# compute fake images and reconstruction images.", "\n", "self", ".", "forward", "(", ")", "\n", "# G_A and G_B", "\n", "# Ds require no gradients when optimizing Gs", "\n", "self", ".", "set_requires_grad", "(", "[", "self", ".", "nets", "[", "'netD_A'", "]", ",", "self", ".", "nets", "[", "'netD_B'", "]", "]", ",", "\n", "False", ")", "\n", "# set G_A and G_B's gradients to zero", "\n", "optimizers", "[", "'optimG'", "]", ".", "clear_grad", "(", ")", "\n", "# calculate gradients for G_A and G_B", "\n", "self", ".", "backward_G", "(", ")", "\n", "# update G_A and G_B's weights", "\n", "self", ".", "optimizers", "[", "'optimG'", "]", ".", "step", "(", ")", "\n", "# D_A and D_B", "\n", "self", ".", "set_requires_grad", "(", "[", "self", ".", "nets", "[", "'netD_A'", "]", ",", "self", ".", "nets", "[", "'netD_B'", "]", "]", ",", "True", ")", "\n", "\n", "# set D_A and D_B's gradients to zero", "\n", "optimizers", "[", "'optimD'", "]", ".", "clear_grad", "(", ")", "\n", "# calculate gradients for D_A", "\n", "self", ".", "backward_D_A", "(", ")", "\n", "# calculate graidents for D_B", "\n", "self", ".", "backward_D_B", "(", ")", "\n", "# update D_A and D_B's weights", "\n", "optimizers", "[", "'optimD'", "]", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.cycle_gan_model.CycleGANModel.test_iter": [[247, 255], ["cycle_gan_model.CycleGANModel.nets[].eval", "cycle_gan_model.CycleGANModel.forward", "cycle_gan_model.CycleGANModel.nets[].train", "paddle.no_grad", "metrics.values", "metric.update"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.vgg16.forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update"], ["", "def", "test_iter", "(", "self", ",", "metrics", "=", "None", ")", ":", "\n", "        ", "self", ".", "nets", "[", "'netG_A'", "]", ".", "eval", "(", ")", "\n", "self", ".", "forward", "(", ")", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "            ", "if", "metrics", "is", "not", "None", ":", "\n", "                ", "for", "metric", "in", "metrics", ".", "values", "(", ")", ":", "\n", "                    ", "metric", ".", "update", "(", "self", ".", "fake_B", ",", "self", ".", "real_B", ")", "\n", "", "", "", "self", ".", "nets", "[", "'netG_A'", "]", ".", "train", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.starganv2_model.StarGANv2Model.__init__": [[197, 239], ["base_model.BaseModel.__init__", "generators.builder.build_generator", "generators.builder.build_generator", "generators.builder.build_generator", "generators.builder.build_generator", "generators.builder.build_generator", "generators.builder.build_generator", "starganv2_model.StarGANv2Model.nets[].apply", "starganv2_model.StarGANv2Model.nets[].apply", "starganv2_model.StarGANv2Model.nets[].apply", "starganv2_model.StarGANv2Model.nets[].apply", "discriminators.builder.build_discriminator", "generators.builder.build_generator", "generators.builder.build_generator.eval"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.SpectralNorm.apply", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.SpectralNorm.apply", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.SpectralNorm.apply", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.SpectralNorm.apply", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.builder.build_discriminator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "generator", ",", "\n", "style", "=", "None", ",", "\n", "mapping", "=", "None", ",", "\n", "discriminator", "=", "None", ",", "\n", "fan", "=", "None", ",", "\n", "latent_dim", "=", "16", ",", "\n", "lambda_reg", "=", "1", ",", "\n", "lambda_sty", "=", "1", ",", "\n", "lambda_ds", "=", "1", ",", "\n", "lambda_cyc", "=", "1", ",", "\n", ")", ":", "\n", "        ", "super", "(", "StarGANv2Model", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "w_hpf", "=", "generator", "[", "'w_hpf'", "]", "\n", "self", ".", "nets_ema", "=", "{", "}", "\n", "self", ".", "nets", "[", "'generator'", "]", "=", "build_generator", "(", "generator", ")", "\n", "self", ".", "nets_ema", "[", "'generator'", "]", "=", "build_generator", "(", "generator", ")", "\n", "self", ".", "nets", "[", "'style_encoder'", "]", "=", "build_generator", "(", "style", ")", "\n", "self", ".", "nets_ema", "[", "'style_encoder'", "]", "=", "build_generator", "(", "style", ")", "\n", "self", ".", "nets", "[", "'mapping_network'", "]", "=", "build_generator", "(", "mapping", ")", "\n", "self", ".", "nets_ema", "[", "'mapping_network'", "]", "=", "build_generator", "(", "mapping", ")", "\n", "if", "discriminator", ":", "\n", "            ", "self", ".", "nets", "[", "'discriminator'", "]", "=", "build_discriminator", "(", "discriminator", ")", "\n", "", "if", "self", ".", "w_hpf", ">", "0", ":", "\n", "            ", "fan_model", "=", "build_generator", "(", "fan", ")", "\n", "fan_model", ".", "eval", "(", ")", "\n", "self", ".", "nets", "[", "'fan'", "]", "=", "fan_model", "\n", "self", ".", "nets_ema", "[", "'fan'", "]", "=", "fan_model", "\n", "", "self", ".", "latent_dim", "=", "latent_dim", "\n", "self", ".", "lambda_reg", "=", "lambda_reg", "\n", "self", ".", "lambda_sty", "=", "lambda_sty", "\n", "self", ".", "lambda_ds", "=", "lambda_ds", "\n", "self", ".", "lambda_cyc", "=", "lambda_cyc", "\n", "\n", "self", ".", "nets", "[", "'generator'", "]", ".", "apply", "(", "he_init", ")", "\n", "self", ".", "nets", "[", "'style_encoder'", "]", ".", "apply", "(", "he_init", ")", "\n", "self", ".", "nets", "[", "'mapping_network'", "]", ".", "apply", "(", "he_init", ")", "\n", "self", ".", "nets", "[", "'discriminator'", "]", ".", "apply", "(", "he_init", ")", "\n", "\n", "# remember the initial value of ds weight", "\n", "self", ".", "initial_lambda_ds", "=", "self", ".", "lambda_ds", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.starganv2_model.StarGANv2Model.setup_input": [[240, 254], ["paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn"], "methods", ["None"], ["", "def", "setup_input", "(", "self", ",", "input", ")", ":", "\n", "        ", "\"\"\"Unpack input data from the dataloader and perform necessary pre-processing steps.\n\n        Args:\n            input (dict): include the data itself and its metadata information.\n\n        The option 'direction' can be used to swap images in domain A and domain B.\n        \"\"\"", "\n", "pass", "\n", "self", ".", "input", "=", "input", "\n", "self", ".", "input", "[", "'z_trg'", "]", "=", "paddle", ".", "randn", "(", "\n", "(", "input", "[", "'src'", "]", ".", "shape", "[", "0", "]", ",", "self", ".", "latent_dim", ")", ")", "\n", "self", ".", "input", "[", "'z_trg2'", "]", "=", "paddle", ".", "randn", "(", "\n", "(", "input", "[", "'src'", "]", ".", "shape", "[", "0", "]", ",", "self", ".", "latent_dim", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.starganv2_model.StarGANv2Model.forward": [[255, 258], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ")", ":", "\n", "        ", "\"\"\"Run forward pass; called by both functions <optimize_parameters> and <test>.\"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.starganv2_model.StarGANv2Model._reset_grad": [[259, 262], ["optims.values", "optim.clear_gradients"], "methods", ["None"], ["", "def", "_reset_grad", "(", "self", ",", "optims", ")", ":", "\n", "        ", "for", "optim", "in", "optims", ".", "values", "(", ")", ":", "\n", "            ", "optim", ".", "clear_gradients", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.starganv2_model.StarGANv2Model.train_iter": [[263, 354], ["starganv2_model.compute_d_loss", "starganv2_model.StarGANv2Model._reset_grad", "d_loss.backward", "optimizers[].minimize", "starganv2_model.compute_d_loss", "starganv2_model.StarGANv2Model._reset_grad", "d_loss.backward", "optimizers[].step", "starganv2_model.compute_g_loss", "starganv2_model.StarGANv2Model._reset_grad", "g_loss.backward", "optimizers[].step", "optimizers[].step", "optimizers[].step", "starganv2_model.compute_g_loss", "starganv2_model.StarGANv2Model._reset_grad", "g_loss.backward", "optimizers[].step", "starganv2_model.soft_update", "starganv2_model.soft_update", "starganv2_model.soft_update", "zip", "int", "isinstance", "loss.items", "starganv2_model.StarGANv2Model.nets[]._layers.get_heatmap", "starganv2_model.StarGANv2Model.nets[].get_heatmap"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.starganv2_model.compute_d_loss", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.starganv2_model.StarGANv2Model._reset_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.starganv2_model.compute_d_loss", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.starganv2_model.StarGANv2Model._reset_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.starganv2_model.compute_g_loss", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.starganv2_model.StarGANv2Model._reset_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.starganv2_model.compute_g_loss", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.starganv2_model.StarGANv2Model._reset_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.starganv2_model.soft_update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.starganv2_model.soft_update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.starganv2_model.soft_update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_starganv2.FAN.get_heatmap", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_starganv2.FAN.get_heatmap"], ["", "", "def", "train_iter", "(", "self", ",", "optimizers", "=", "None", ")", ":", "\n", "#TODO", "\n", "        ", "x_real", ",", "y_org", "=", "self", ".", "input", "[", "'src'", "]", ",", "self", ".", "input", "[", "'src_cls'", "]", "\n", "x_ref", ",", "x_ref2", ",", "y_trg", "=", "self", ".", "input", "[", "'ref'", "]", ",", "self", ".", "input", "[", "\n", "'ref2'", "]", ",", "self", ".", "input", "[", "'ref_cls'", "]", "\n", "z_trg", ",", "z_trg2", "=", "self", ".", "input", "[", "'z_trg'", "]", ",", "self", ".", "input", "[", "'z_trg2'", "]", "\n", "\n", "if", "self", ".", "w_hpf", ">", "0", ":", "\n", "            ", "if", "isinstance", "(", "self", ".", "nets", "[", "'fan'", "]", ",", "paddle", ".", "DataParallel", ")", ":", "\n", "                ", "masks", "=", "self", ".", "nets", "[", "'fan'", "]", ".", "_layers", ".", "get_heatmap", "(", "x_real", ")", "\n", "", "else", ":", "\n", "                ", "masks", "=", "self", ".", "nets", "[", "'fan'", "]", ".", "get_heatmap", "(", "x_real", ")", "\n", "", "", "else", ":", "\n", "            ", "masks", "=", "None", "\n", "\n", "# train the discriminator", "\n", "", "d_loss", ",", "d_losses_latent", "=", "compute_d_loss", "(", "self", ".", "nets", ",", "\n", "self", ".", "lambda_reg", ",", "\n", "x_real", ",", "\n", "y_org", ",", "\n", "y_trg", ",", "\n", "z_trg", "=", "z_trg", ",", "\n", "masks", "=", "masks", ")", "\n", "self", ".", "_reset_grad", "(", "optimizers", ")", "\n", "d_loss", ".", "backward", "(", ")", "\n", "optimizers", "[", "'discriminator'", "]", ".", "minimize", "(", "d_loss", ")", "\n", "\n", "d_loss", ",", "d_losses_ref", "=", "compute_d_loss", "(", "self", ".", "nets", ",", "\n", "self", ".", "lambda_reg", ",", "\n", "x_real", ",", "\n", "y_org", ",", "\n", "y_trg", ",", "\n", "x_ref", "=", "x_ref", ",", "\n", "masks", "=", "masks", ")", "\n", "self", ".", "_reset_grad", "(", "optimizers", ")", "\n", "d_loss", ".", "backward", "(", ")", "\n", "optimizers", "[", "'discriminator'", "]", ".", "step", "(", ")", "\n", "\n", "# train the generator", "\n", "g_loss", ",", "g_losses_latent", "=", "compute_g_loss", "(", "self", ".", "nets", ",", "\n", "self", ".", "w_hpf", ",", "\n", "self", ".", "lambda_sty", ",", "\n", "self", ".", "lambda_ds", ",", "\n", "self", ".", "lambda_cyc", ",", "\n", "x_real", ",", "\n", "y_org", ",", "\n", "y_trg", ",", "\n", "z_trgs", "=", "[", "z_trg", ",", "z_trg2", "]", ",", "\n", "masks", "=", "masks", ")", "\n", "self", ".", "_reset_grad", "(", "optimizers", ")", "\n", "g_loss", ".", "backward", "(", ")", "\n", "optimizers", "[", "'generator'", "]", ".", "step", "(", ")", "\n", "optimizers", "[", "'mapping_network'", "]", ".", "step", "(", ")", "\n", "optimizers", "[", "'style_encoder'", "]", ".", "step", "(", ")", "\n", "\n", "g_loss", ",", "g_losses_ref", "=", "compute_g_loss", "(", "self", ".", "nets", ",", "\n", "self", ".", "w_hpf", ",", "\n", "self", ".", "lambda_sty", ",", "\n", "self", ".", "lambda_ds", ",", "\n", "self", ".", "lambda_cyc", ",", "\n", "x_real", ",", "\n", "y_org", ",", "\n", "y_trg", ",", "\n", "x_refs", "=", "[", "x_ref", ",", "x_ref2", "]", ",", "\n", "masks", "=", "masks", ")", "\n", "self", ".", "_reset_grad", "(", "optimizers", ")", "\n", "g_loss", ".", "backward", "(", ")", "\n", "optimizers", "[", "'generator'", "]", ".", "step", "(", ")", "\n", "\n", "# compute moving average of network parameters", "\n", "soft_update", "(", "self", ".", "nets", "[", "'generator'", "]", ",", "\n", "self", ".", "nets_ema", "[", "'generator'", "]", ",", "\n", "beta", "=", "0.999", ")", "\n", "soft_update", "(", "self", ".", "nets", "[", "'mapping_network'", "]", ",", "\n", "self", ".", "nets_ema", "[", "'mapping_network'", "]", ",", "\n", "beta", "=", "0.999", ")", "\n", "soft_update", "(", "self", ".", "nets", "[", "'style_encoder'", "]", ",", "\n", "self", ".", "nets_ema", "[", "'style_encoder'", "]", ",", "\n", "beta", "=", "0.999", ")", "\n", "\n", "# decay weight for diversity sensitive loss", "\n", "if", "self", ".", "lambda_ds", ">", "0", ":", "\n", "            ", "self", ".", "lambda_ds", "-=", "(", "self", ".", "initial_lambda_ds", "/", "self", ".", "total_iter", ")", "\n", "\n", "", "for", "loss", ",", "prefix", "in", "zip", "(", "\n", "[", "d_losses_latent", ",", "d_losses_ref", ",", "g_losses_latent", ",", "g_losses_ref", "]", ",", "\n", "[", "'D/latent_'", ",", "'D/ref_'", ",", "'G/latent_'", ",", "'G/ref_'", "]", ")", ":", "\n", "            ", "for", "key", ",", "value", "in", "loss", ".", "items", "(", ")", ":", "\n", "                ", "self", ".", "losses", "[", "prefix", "+", "key", "]", "=", "value", "\n", "", "", "self", ".", "losses", "[", "'G/lambda_ds'", "]", "=", "self", ".", "lambda_ds", "\n", "self", ".", "losses", "[", "'Total iter'", "]", "=", "int", "(", "self", ".", "total_iter", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.starganv2_model.StarGANv2Model.test_iter": [[355, 380], ["starganv2_model.StarGANv2Model.nets_ema[].eval", "starganv2_model.StarGANv2Model.nets_ema[].eval", "starganv2_model.soft_update", "starganv2_model.soft_update", "starganv2_model.soft_update", "starganv2_model.StarGANv2Model.nets_ema[].train", "starganv2_model.StarGANv2Model.nets_ema[].train", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "starganv2_model.translate_using_reference", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.starganv2_model.soft_update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.starganv2_model.soft_update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.starganv2_model.soft_update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.starganv2_model.translate_using_reference"], ["", "def", "test_iter", "(", "self", ",", "metrics", "=", "None", ")", ":", "\n", "#TODO", "\n", "        ", "self", ".", "nets_ema", "[", "'generator'", "]", ".", "eval", "(", ")", "\n", "self", ".", "nets_ema", "[", "'style_encoder'", "]", ".", "eval", "(", ")", "\n", "soft_update", "(", "self", ".", "nets", "[", "'generator'", "]", ",", "\n", "self", ".", "nets_ema", "[", "'generator'", "]", ",", "\n", "beta", "=", "0.999", ")", "\n", "soft_update", "(", "self", ".", "nets", "[", "'mapping_network'", "]", ",", "\n", "self", ".", "nets_ema", "[", "'mapping_network'", "]", ",", "\n", "beta", "=", "0.999", ")", "\n", "soft_update", "(", "self", ".", "nets", "[", "'style_encoder'", "]", ",", "\n", "self", ".", "nets_ema", "[", "'style_encoder'", "]", ",", "\n", "beta", "=", "0.999", ")", "\n", "src_img", "=", "self", ".", "input", "[", "'src'", "]", "\n", "ref_img", "=", "self", ".", "input", "[", "'ref'", "]", "\n", "ref_label", "=", "self", ".", "input", "[", "'ref_cls'", "]", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "            ", "img", "=", "translate_using_reference", "(", "\n", "self", ".", "nets_ema", ",", "self", ".", "w_hpf", ",", "\n", "paddle", ".", "to_tensor", "(", "src_img", ")", ".", "astype", "(", "'float32'", ")", ",", "\n", "paddle", ".", "to_tensor", "(", "ref_img", ")", ".", "astype", "(", "'float32'", ")", ",", "\n", "paddle", ".", "to_tensor", "(", "ref_label", ")", ".", "astype", "(", "'float32'", ")", ")", "\n", "", "self", ".", "visual_items", "[", "'reference'", "]", "=", "img", "\n", "self", ".", "nets_ema", "[", "'generator'", "]", ".", "train", "(", ")", "\n", "self", ".", "nets_ema", "[", "'style_encoder'", "]", ".", "train", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.starganv2_model.translate_using_reference": [[19, 44], ["paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.concat", "paddle.concat", "paddle.unsqueeze", "paddle.unsqueeze", "range", "paddle.stack", "paddle.stack", "paddle.reshape", "paddle.reshape", "enumerate", "paddle.concat", "paddle.concat", "ppgan.utils.visual.tensor2img", "nets[].get_heatmap", "s_ref_lists.append", "paddle.concat", "paddle.concat", "ppgan.utils.visual.make_grid", "paddle.to_tensor", "paddle.to_tensor", "numpy.ones"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.tensor2img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_starganv2.FAN.get_heatmap", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.make_grid"], ["def", "translate_using_reference", "(", "nets", ",", "w_hpf", ",", "x_src", ",", "x_ref", ",", "y_ref", ")", ":", "\n", "    ", "N", ",", "C", ",", "H", ",", "W", "=", "x_src", ".", "shape", "\n", "wb", "=", "paddle", ".", "to_tensor", "(", "np", ".", "ones", "(", "(", "1", ",", "C", ",", "H", ",", "W", ")", ")", ")", ".", "astype", "(", "'float32'", ")", "\n", "x_src_with_wb", "=", "paddle", ".", "concat", "(", "[", "wb", ",", "x_src", "]", ",", "axis", "=", "0", ")", "\n", "\n", "masks", "=", "nets", "[", "'fan'", "]", ".", "get_heatmap", "(", "x_src", ")", "if", "w_hpf", ">", "0", "else", "None", "\n", "s_ref", "=", "nets", "[", "'style_encoder'", "]", "(", "x_ref", ",", "y_ref", ")", "\n", "s_ref_list", "=", "paddle", ".", "unsqueeze", "(", "s_ref", ",", "axis", "=", "[", "1", "]", ")", "\n", "s_ref_lists", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "N", ")", ":", "\n", "        ", "s_ref_lists", ".", "append", "(", "s_ref_list", ")", "\n", "", "s_ref_list", "=", "paddle", ".", "stack", "(", "s_ref_lists", ",", "axis", "=", "1", ")", "\n", "s_ref_list", "=", "paddle", ".", "reshape", "(", "\n", "s_ref_list", ",", "\n", "(", "s_ref_list", ".", "shape", "[", "0", "]", ",", "s_ref_list", ".", "shape", "[", "1", "]", ",", "s_ref_list", ".", "shape", "[", "3", "]", ")", ")", "\n", "x_concat", "=", "[", "x_src_with_wb", "]", "\n", "for", "i", ",", "s_ref", "in", "enumerate", "(", "s_ref_list", ")", ":", "\n", "        ", "x_fake", "=", "nets", "[", "'generator'", "]", "(", "x_src", ",", "s_ref", ",", "masks", "=", "masks", ")", "\n", "x_fake_with_ref", "=", "paddle", ".", "concat", "(", "[", "x_ref", "[", "i", ":", "i", "+", "1", "]", ",", "x_fake", "]", ",", "axis", "=", "0", ")", "\n", "x_concat", "+=", "[", "x_fake_with_ref", "]", "\n", "\n", "", "x_concat", "=", "paddle", ".", "concat", "(", "x_concat", ",", "axis", "=", "0", ")", "\n", "img", "=", "tensor2img", "(", "make_grid", "(", "x_concat", ",", "nrow", "=", "N", "+", "1", ",", "range", "=", "(", "0", ",", "1", ")", ")", ")", "\n", "del", "x_concat", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.starganv2_model.compute_d_loss": [[46, 77], ["starganv2_model.adv_loss", "starganv2_model.r1_reg", "starganv2_model.adv_loss", "paddle.no_grad", "paddle.no_grad", "adv_loss.numpy", "adv_loss.numpy", "r1_reg.numpy"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.starganv2_model.adv_loss", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.starganv2_model.r1_reg", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.starganv2_model.adv_loss"], ["", "def", "compute_d_loss", "(", "nets", ",", "\n", "lambda_reg", ",", "\n", "x_real", ",", "\n", "y_org", ",", "\n", "y_trg", ",", "\n", "z_trg", "=", "None", ",", "\n", "x_ref", "=", "None", ",", "\n", "masks", "=", "None", ")", ":", "\n", "    ", "assert", "(", "z_trg", "is", "None", ")", "!=", "(", "x_ref", "is", "None", ")", "\n", "# with real images", "\n", "x_real", ".", "stop_gradient", "=", "False", "\n", "out", "=", "nets", "[", "'discriminator'", "]", "(", "x_real", ",", "y_org", ")", "\n", "loss_real", "=", "adv_loss", "(", "out", ",", "1", ")", "\n", "loss_reg", "=", "r1_reg", "(", "out", ",", "x_real", ")", "\n", "\n", "# with fake images", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "        ", "if", "z_trg", "is", "not", "None", ":", "\n", "            ", "s_trg", "=", "nets", "[", "'mapping_network'", "]", "(", "z_trg", ",", "y_trg", ")", "\n", "", "else", ":", "# x_ref is not None", "\n", "            ", "s_trg", "=", "nets", "[", "'style_encoder'", "]", "(", "x_ref", ",", "y_trg", ")", "\n", "\n", "", "x_fake", "=", "nets", "[", "'generator'", "]", "(", "x_real", ",", "s_trg", ",", "masks", "=", "masks", ")", "\n", "", "out", "=", "nets", "[", "'discriminator'", "]", "(", "x_fake", ",", "y_trg", ")", "\n", "loss_fake", "=", "adv_loss", "(", "out", ",", "0", ")", "\n", "\n", "loss", "=", "loss_real", "+", "loss_fake", "+", "lambda_reg", "*", "loss_reg", "\n", "return", "loss", ",", "{", "\n", "'real'", ":", "loss_real", ".", "numpy", "(", ")", ",", "\n", "'fake'", ":", "loss_fake", ".", "numpy", "(", ")", ",", "\n", "'reg'", ":", "loss_reg", ".", "numpy", "(", ")", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.starganv2_model.adv_loss": [[80, 85], ["paddle.full_like", "paddle.full_like", "paddle.binary_cross_entropy_with_logits"], "function", ["None"], ["", "def", "adv_loss", "(", "logits", ",", "target", ")", ":", "\n", "    ", "assert", "target", "in", "[", "1", ",", "0", "]", "\n", "targets", "=", "paddle", ".", "full_like", "(", "logits", ",", "fill_value", "=", "target", ")", "\n", "loss", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "logits", ",", "targets", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.starganv2_model.r1_reg": [[87, 99], ["grad_dout.pow", "paddle.grad", "paddle.grad", "paddle.reshape().sum().mean", "paddle.reshape().sum().mean", "d_out.sum", "paddle.reshape().sum", "paddle.reshape().sum", "paddle.reshape", "paddle.reshape"], "function", ["None"], ["", "def", "r1_reg", "(", "d_out", ",", "x_in", ")", ":", "\n", "# zero-centered gradient penalty for real images", "\n", "    ", "batch_size", "=", "x_in", ".", "shape", "[", "0", "]", "\n", "grad_dout", "=", "paddle", ".", "grad", "(", "outputs", "=", "d_out", ".", "sum", "(", ")", ",", "\n", "inputs", "=", "x_in", ",", "\n", "create_graph", "=", "True", ",", "\n", "retain_graph", "=", "True", ",", "\n", "only_inputs", "=", "True", ")", "[", "0", "]", "\n", "grad_dout2", "=", "grad_dout", ".", "pow", "(", "2", ")", "\n", "assert", "(", "grad_dout2", ".", "shape", "==", "x_in", ".", "shape", ")", "\n", "reg", "=", "0.5", "*", "paddle", ".", "reshape", "(", "grad_dout2", ",", "(", "batch_size", ",", "-", "1", ")", ")", ".", "sum", "(", "1", ")", ".", "mean", "(", "0", ")", "\n", "return", "reg", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.starganv2_model.soft_update": [[101, 112], ["isinstance", "dict", "source.named_parameters", "target.named_parameters", "target_param.set_value"], "function", ["None"], ["", "def", "soft_update", "(", "source", ",", "target", ",", "beta", "=", "1.0", ")", ":", "\n", "    ", "assert", "0.0", "<=", "beta", "<=", "1.0", "\n", "\n", "if", "isinstance", "(", "source", ",", "paddle", ".", "DataParallel", ")", ":", "\n", "        ", "source", "=", "source", ".", "_layers", "\n", "\n", "", "target_model_map", "=", "dict", "(", "target", ".", "named_parameters", "(", ")", ")", "\n", "for", "param_name", ",", "source_param", "in", "source", ".", "named_parameters", "(", ")", ":", "\n", "        ", "target_param", "=", "target_model_map", "[", "param_name", "]", "\n", "target_param", ".", "set_value", "(", "beta", "*", "source_param", "+", "\n", "(", "1.0", "-", "beta", ")", "*", "target_param", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.starganv2_model.dump_model": [[114, 120], ["model.state_dict().keys", "k.endswith", "model.state_dict", "model.state_dict"], "function", ["None"], ["", "", "def", "dump_model", "(", "model", ")", ":", "\n", "    ", "params", "=", "{", "}", "\n", "for", "k", "in", "model", ".", "state_dict", "(", ")", ".", "keys", "(", ")", ":", "\n", "        ", "if", "k", ".", "endswith", "(", "'.scale'", ")", ":", "\n", "            ", "params", "[", "k", "]", "=", "model", ".", "state_dict", "(", ")", "[", "k", "]", ".", "shape", "\n", "", "", "return", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.starganv2_model.compute_g_loss": [[122, 181], ["starganv2_model.adv_loss", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "isinstance", "paddle.abs", "paddle.abs", "nets[]._layers.get_heatmap", "nets[].get_heatmap", "adv_loss.numpy", "paddle.mean.numpy", "paddle.mean.numpy", "paddle.mean.numpy"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.starganv2_model.adv_loss", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_starganv2.FAN.get_heatmap", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_starganv2.FAN.get_heatmap"], ["", "def", "compute_g_loss", "(", "nets", ",", "\n", "w_hpf", ",", "\n", "lambda_sty", ",", "\n", "lambda_ds", ",", "\n", "lambda_cyc", ",", "\n", "x_real", ",", "\n", "y_org", ",", "\n", "y_trg", ",", "\n", "z_trgs", "=", "None", ",", "\n", "x_refs", "=", "None", ",", "\n", "masks", "=", "None", ")", ":", "\n", "    ", "assert", "(", "z_trgs", "is", "None", ")", "!=", "(", "x_refs", "is", "None", ")", "\n", "if", "z_trgs", "is", "not", "None", ":", "\n", "        ", "z_trg", ",", "z_trg2", "=", "z_trgs", "\n", "", "if", "x_refs", "is", "not", "None", ":", "\n", "        ", "x_ref", ",", "x_ref2", "=", "x_refs", "\n", "\n", "# adversarial loss", "\n", "", "if", "z_trgs", "is", "not", "None", ":", "\n", "        ", "s_trg", "=", "nets", "[", "'mapping_network'", "]", "(", "z_trg", ",", "y_trg", ")", "\n", "", "else", ":", "\n", "        ", "s_trg", "=", "nets", "[", "'style_encoder'", "]", "(", "x_ref", ",", "y_trg", ")", "\n", "\n", "", "x_fake", "=", "nets", "[", "'generator'", "]", "(", "x_real", ",", "s_trg", ",", "masks", "=", "masks", ")", "\n", "out", "=", "nets", "[", "'discriminator'", "]", "(", "x_fake", ",", "y_trg", ")", "\n", "loss_adv", "=", "adv_loss", "(", "out", ",", "1", ")", "\n", "\n", "# style reconstruction loss", "\n", "s_pred", "=", "nets", "[", "'style_encoder'", "]", "(", "x_fake", ",", "y_trg", ")", "\n", "loss_sty", "=", "paddle", ".", "mean", "(", "paddle", ".", "abs", "(", "s_pred", "-", "s_trg", ")", ")", "\n", "\n", "# diversity sensitive loss", "\n", "if", "z_trgs", "is", "not", "None", ":", "\n", "        ", "s_trg2", "=", "nets", "[", "'mapping_network'", "]", "(", "z_trg2", ",", "y_trg", ")", "\n", "", "else", ":", "\n", "        ", "s_trg2", "=", "nets", "[", "'style_encoder'", "]", "(", "x_ref2", ",", "y_trg", ")", "\n", "", "x_fake2", "=", "nets", "[", "'generator'", "]", "(", "x_real", ",", "s_trg2", ",", "masks", "=", "masks", ")", "\n", "loss_ds", "=", "paddle", ".", "mean", "(", "paddle", ".", "abs", "(", "x_fake", "-", "x_fake2", ")", ")", "\n", "\n", "# cycle-consistency loss", "\n", "if", "w_hpf", ">", "0", ":", "\n", "        ", "if", "isinstance", "(", "nets", "[", "'fan'", "]", ",", "paddle", ".", "DataParallel", ")", ":", "\n", "            ", "masks", "=", "nets", "[", "'fan'", "]", ".", "_layers", ".", "get_heatmap", "(", "x_fake", ")", "\n", "", "else", ":", "\n", "            ", "masks", "=", "nets", "[", "'fan'", "]", ".", "get_heatmap", "(", "x_fake", ")", "\n", "", "", "else", ":", "\n", "        ", "masks", "=", "None", "\n", "\n", "", "s_org", "=", "nets", "[", "'style_encoder'", "]", "(", "x_real", ",", "y_org", ")", "\n", "x_rec", "=", "nets", "[", "'generator'", "]", "(", "x_fake", ",", "s_org", ",", "masks", "=", "masks", ")", "\n", "loss_cyc", "=", "paddle", ".", "mean", "(", "paddle", ".", "abs", "(", "x_rec", "-", "x_real", ")", ")", "\n", "\n", "loss", "=", "loss_adv", "+", "lambda_sty", "*", "loss_sty", "-", "lambda_ds", "*", "loss_ds", "+", "lambda_cyc", "*", "loss_cyc", "\n", "return", "loss", ",", "{", "\n", "'adv'", ":", "loss_adv", ".", "numpy", "(", ")", ",", "\n", "'sty'", ":", "loss_sty", ".", "numpy", "(", ")", ",", "\n", "'ds:'", ":", "loss_ds", ".", "numpy", "(", ")", ",", "\n", "'cyc'", ":", "loss_cyc", ".", "numpy", "(", ")", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.starganv2_model.he_init": [[184, 193], ["isinstance", "isinstance", "modules.init.kaiming_normal_", "modules.init.kaiming_normal_", "modules.init.constant_", "modules.init.constant_"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.kaiming_normal_", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.kaiming_normal_", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.constant_", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.constant_"], ["", "def", "he_init", "(", "module", ")", ":", "\n", "    ", "if", "isinstance", "(", "module", ",", "nn", ".", "Conv2D", ")", ":", "\n", "        ", "kaiming_normal_", "(", "module", ".", "weight", ",", "mode", "=", "'fan_in'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "if", "module", ".", "bias", "is", "not", "None", ":", "\n", "            ", "constant_", "(", "module", ".", "bias", ",", "0", ")", "\n", "", "", "if", "isinstance", "(", "module", ",", "nn", ".", "Linear", ")", ":", "\n", "        ", "kaiming_normal_", "(", "module", ".", "weight", ",", "mode", "=", "'fan_in'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "if", "module", ".", "bias", "is", "not", "None", ":", "\n", "            ", "constant_", "(", "module", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.sr_model.BaseSRModel.__init__": [[30, 44], ["base_model.BaseModel.__init__", "generators.builder.build_generator", "criterions.builder.build_criterion", "sr_model.init_sr_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.sr_model.init_sr_weight"], ["def", "__init__", "(", "self", ",", "generator", ",", "pixel_criterion", "=", "None", ",", "use_init_weight", "=", "False", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            generator (dict): config of generator.\n            pixel_criterion (dict): config of pixel criterion.\n        \"\"\"", "\n", "super", "(", "BaseSRModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "nets", "[", "'generator'", "]", "=", "build_generator", "(", "generator", ")", "\n", "\n", "if", "pixel_criterion", ":", "\n", "            ", "self", ".", "pixel_criterion", "=", "build_criterion", "(", "pixel_criterion", ")", "\n", "", "if", "use_init_weight", ":", "\n", "            ", "init_sr_weight", "(", "self", ".", "nets", "[", "'generator'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.sr_model.BaseSRModel.setup_input": [[45, 52], ["paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor"], "methods", ["None"], ["", "", "def", "setup_input", "(", "self", ",", "input", ")", ":", "\n", "        ", "self", ".", "lq", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'lq'", "]", ")", "\n", "self", ".", "visual_items", "[", "'lq'", "]", "=", "self", ".", "lq", "\n", "if", "'gt'", "in", "input", ":", "\n", "            ", "self", ".", "gt", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'gt'", "]", ")", "\n", "self", ".", "visual_items", "[", "'gt'", "]", "=", "self", ".", "gt", "\n", "", "self", ".", "image_paths", "=", "input", "[", "'lq_path'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.sr_model.BaseSRModel.forward": [[53, 55], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.sr_model.BaseSRModel.train_iter": [[56, 67], ["optims[].clear_grad", "sr_model.BaseSRModel.pixel_criterion", "sr_model.BaseSRModel.backward", "optims[].step"], "methods", ["None"], ["", "def", "train_iter", "(", "self", ",", "optims", "=", "None", ")", ":", "\n", "        ", "optims", "[", "'optim'", "]", ".", "clear_grad", "(", ")", "\n", "\n", "self", ".", "output", "=", "self", ".", "nets", "[", "'generator'", "]", "(", "self", ".", "lq", ")", "\n", "self", ".", "visual_items", "[", "'output'", "]", "=", "self", ".", "output", "\n", "# pixel loss", "\n", "loss_pixel", "=", "self", ".", "pixel_criterion", "(", "self", ".", "output", ",", "self", ".", "gt", ")", "\n", "self", ".", "losses", "[", "'loss_pixel'", "]", "=", "loss_pixel", "\n", "\n", "loss_pixel", ".", "backward", "(", ")", "\n", "optims", "[", "'optim'", "]", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.sr_model.BaseSRModel.test_iter": [[68, 84], ["sr_model.BaseSRModel.nets[].eval", "sr_model.BaseSRModel.nets[].train", "zip", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "out_img.append", "gt_img.append", "metrics.values", "utils.visual.tensor2img", "utils.visual.tensor2img", "metric.update"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.tensor2img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.tensor2img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update"], ["", "def", "test_iter", "(", "self", ",", "metrics", "=", "None", ")", ":", "\n", "        ", "self", ".", "nets", "[", "'generator'", "]", ".", "eval", "(", ")", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "            ", "self", ".", "output", "=", "self", ".", "nets", "[", "'generator'", "]", "(", "self", ".", "lq", ")", "\n", "self", ".", "visual_items", "[", "'output'", "]", "=", "self", ".", "output", "\n", "", "self", ".", "nets", "[", "'generator'", "]", ".", "train", "(", ")", "\n", "\n", "out_img", "=", "[", "]", "\n", "gt_img", "=", "[", "]", "\n", "for", "out_tensor", ",", "gt_tensor", "in", "zip", "(", "self", ".", "output", ",", "self", ".", "gt", ")", ":", "\n", "            ", "out_img", ".", "append", "(", "tensor2img", "(", "out_tensor", ",", "(", "0.", ",", "1.", ")", ")", ")", "\n", "gt_img", ".", "append", "(", "tensor2img", "(", "gt_tensor", ",", "(", "0.", ",", "1.", ")", ")", ")", "\n", "\n", "", "if", "metrics", "is", "not", "None", ":", "\n", "            ", "for", "metric", "in", "metrics", ".", "values", "(", ")", ":", "\n", "                ", "metric", ".", "update", "(", "out_img", ",", "gt_img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.sr_model.init_sr_weight": [[86, 93], ["net.apply", "hasattr", "modules.init.reset_parameters", "isinstance"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.SpectralNorm.apply", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.reset_parameters"], ["", "", "", "", "def", "init_sr_weight", "(", "net", ")", ":", "\n", "    ", "def", "reset_func", "(", "m", ")", ":", "\n", "        ", "if", "hasattr", "(", "m", ",", "'weight'", ")", "and", "(", "not", "isinstance", "(", "\n", "m", ",", "(", "nn", ".", "BatchNorm", ",", "nn", ".", "BatchNorm2D", ")", ")", ")", ":", "\n", "            ", "reset_parameters", "(", "m", ")", "\n", "\n", "", "", "net", ".", "apply", "(", "reset_func", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.edvr_model.EDVRModel.__init__": [[30, 42], ["sr_model.BaseSRModel.__init__", "edvr_model.init_edvr_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.edvr_model.init_edvr_weight"], ["def", "__init__", "(", "self", ",", "generator", ",", "tsa_iter", ",", "pixel_criterion", "=", "None", ")", ":", "\n", "        ", "\"\"\"Initialize the EDVR class.\n\n        Args:\n            generator (dict): config of generator.\n            tsa_iter (dict): config of tsa_iter.\n            pixel_criterion (dict): config of pixel criterion.\n        \"\"\"", "\n", "super", "(", "EDVRModel", ",", "self", ")", ".", "__init__", "(", "generator", ",", "pixel_criterion", ")", "\n", "self", ".", "tsa_iter", "=", "tsa_iter", "\n", "self", ".", "current_iter", "=", "1", "\n", "init_edvr_weight", "(", "self", ".", "nets", "[", "'generator'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.edvr_model.EDVRModel.setup_input": [[43, 54], ["None"], "methods", ["None"], ["", "def", "setup_input", "(", "self", ",", "input", ")", ":", "\n", "        ", "self", ".", "lq", "=", "input", "[", "'lq'", "]", "\n", "self", ".", "visual_items", "[", "'lq'", "]", "=", "self", ".", "lq", "[", ":", ",", "2", ",", ":", ",", ":", ",", ":", "]", "\n", "self", ".", "visual_items", "[", "'lq-2'", "]", "=", "self", ".", "lq", "[", ":", ",", "0", ",", ":", ",", ":", ",", ":", "]", "\n", "self", ".", "visual_items", "[", "'lq-1'", "]", "=", "self", ".", "lq", "[", ":", ",", "1", ",", ":", ",", ":", ",", ":", "]", "\n", "self", ".", "visual_items", "[", "'lq+1'", "]", "=", "self", ".", "lq", "[", ":", ",", "3", ",", ":", ",", ":", ",", ":", "]", "\n", "self", ".", "visual_items", "[", "'lq+2'", "]", "=", "self", ".", "lq", "[", ":", ",", "4", ",", ":", ",", ":", ",", ":", "]", "\n", "if", "'gt'", "in", "input", ":", "\n", "            ", "self", ".", "gt", "=", "input", "[", "'gt'", "]", "[", ":", ",", "0", ",", ":", ",", ":", ",", ":", "]", "\n", "self", ".", "visual_items", "[", "'gt'", "]", "=", "self", ".", "gt", "\n", "", "self", ".", "image_paths", "=", "input", "[", "'lq_path'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.edvr_model.EDVRModel.train_iter": [[55, 76], ["optims[].clear_grad", "edvr_model.EDVRModel.pixel_criterion", "edvr_model.EDVRModel.backward", "optims[].step", "print", "edvr_model.EDVRModel.nets[].named_parameters", "print", "edvr_model.EDVRModel.nets[].parameters"], "methods", ["None"], ["", "def", "train_iter", "(", "self", ",", "optims", "=", "None", ")", ":", "\n", "        ", "optims", "[", "'optim'", "]", ".", "clear_grad", "(", ")", "\n", "if", "self", ".", "tsa_iter", ":", "\n", "            ", "if", "self", ".", "current_iter", "==", "1", ":", "\n", "                ", "print", "(", "'Only train TSA module for'", ",", "self", ".", "tsa_iter", ",", "'iters.'", ")", "\n", "for", "name", ",", "param", "in", "self", ".", "nets", "[", "'generator'", "]", ".", "named_parameters", "(", ")", ":", "\n", "                    ", "if", "'TSAModule'", "not", "in", "name", ":", "\n", "                        ", "param", ".", "trainable", "=", "False", "\n", "", "", "", "elif", "self", ".", "current_iter", "==", "self", ".", "tsa_iter", "+", "1", ":", "\n", "                ", "print", "(", "'Train all the parameters.'", ")", "\n", "for", "param", "in", "self", ".", "nets", "[", "'generator'", "]", ".", "parameters", "(", ")", ":", "\n", "                    ", "param", ".", "trainable", "=", "True", "\n", "", "", "", "self", ".", "output", "=", "self", ".", "nets", "[", "'generator'", "]", "(", "self", ".", "lq", ")", "\n", "self", ".", "visual_items", "[", "'output'", "]", "=", "self", ".", "output", "\n", "# pixel loss", "\n", "loss_pixel", "=", "self", ".", "pixel_criterion", "(", "self", ".", "output", ",", "self", ".", "gt", ")", "\n", "self", ".", "losses", "[", "'loss_pixel'", "]", "=", "loss_pixel", "\n", "\n", "loss_pixel", ".", "backward", "(", ")", "\n", "optims", "[", "'optim'", "]", ".", "step", "(", ")", "\n", "self", ".", "current_iter", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.edvr_model.init_edvr_weight": [[78, 87], ["net.apply", "hasattr", "modules.init.reset_parameters", "isinstance", "isinstance", "isinstance"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.SpectralNorm.apply", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.reset_parameters"], ["", "", "def", "init_edvr_weight", "(", "net", ")", ":", "\n", "    ", "def", "reset_func", "(", "m", ")", ":", "\n", "        ", "if", "hasattr", "(", "m", ",", "'weight'", ")", "and", "(", "not", "isinstance", "(", "\n", "m", ",", "(", "nn", ".", "BatchNorm", ",", "nn", ".", "BatchNorm2D", ")", ")", ")", "and", "(", "\n", "not", "isinstance", "(", "m", ",", "ResidualBlockNoBN", ")", "and", "\n", "(", "not", "isinstance", "(", "m", ",", "DCNPack", ")", ")", ")", ":", "\n", "            ", "reset_parameters", "(", "m", ")", "\n", "\n", "", "", "net", ".", "apply", "(", "reset_func", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.gan_model.GANModel.__init__": [[35, 73], ["base_model.BaseModel.__init__", "generators.builder.build_generator", "modules.init.init_weights", "gan_model.GANModel.params.get", "gan_model.GANModel.params.get", "gan_model.GANModel.params.get", "gan_model.GANModel.params.get", "discriminators.builder.build_discriminator", "modules.init.init_weights", "criterions.builder.build_criterion"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.PixelShufflePack.init_weights", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.builder.build_discriminator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.PixelShufflePack.init_weights", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion"], ["def", "__init__", "(", "self", ",", "\n", "generator", ",", "\n", "discriminator", "=", "None", ",", "\n", "gan_criterion", "=", "None", ",", "\n", "params", "=", "None", ")", ":", "\n", "        ", "\"\"\"Initialize the GAN Model class.\n\n        Args:\n            generator (dict): config of generator.\n            discriminator (dict): config of discriminator.\n            gan_criterion (dict): config of gan criterion.\n            params (dict): hyper params for train or test. Default: None.\n        \"\"\"", "\n", "super", "(", "GANModel", ",", "self", ")", ".", "__init__", "(", "params", ")", "\n", "self", ".", "iter", "=", "0", "\n", "\n", "self", ".", "disc_iters", "=", "1", "if", "self", ".", "params", "is", "None", "else", "self", ".", "params", ".", "get", "(", "\n", "'disc_iters'", ",", "1", ")", "\n", "self", ".", "disc_start_iters", "=", "(", "0", "if", "self", ".", "params", "is", "None", "else", "self", ".", "params", ".", "get", "(", "\n", "'disc_start_iters'", ",", "0", ")", ")", "\n", "self", ".", "samples_every_row", "=", "(", "8", "if", "self", ".", "params", "is", "None", "else", "self", ".", "params", ".", "get", "(", "\n", "'samples_every_row'", ",", "8", ")", ")", "\n", "self", ".", "visual_interval", "=", "(", "500", "if", "self", ".", "params", "is", "None", "else", "self", ".", "params", ".", "get", "(", "\n", "'visual_interval'", ",", "500", ")", ")", "\n", "\n", "# define generator", "\n", "self", ".", "nets", "[", "'netG'", "]", "=", "build_generator", "(", "generator", ")", "\n", "init_weights", "(", "self", ".", "nets", "[", "'netG'", "]", ")", "\n", "\n", "# define a discriminator", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "if", "discriminator", "is", "not", "None", ":", "\n", "                ", "self", ".", "nets", "[", "'netD'", "]", "=", "build_discriminator", "(", "discriminator", ")", "\n", "init_weights", "(", "self", ".", "nets", "[", "'netD'", "]", ")", "\n", "\n", "# define loss functions", "\n", "", "if", "gan_criterion", ":", "\n", "                ", "self", ".", "criterionGAN", "=", "build_criterion", "(", "gan_criterion", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.gan_model.GANModel.setup_input": [[74, 117], ["isinstance", "isinstance", "isinstance", "paddle.to_tensor", "isinstance", "gan_model.GANModel.nets[]._layers.random_inputs", "gan_model.GANModel.nets[].random_inputs", "isinstance", "hasattr", "paddle.to_tensor", "paddle.randint", "[].detach.tile", "[].detach", "[].detach.detach", "[].detach.reshape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deep_conv.ConditionalDeepConvGenerator.random_inputs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deep_conv.ConditionalDeepConvGenerator.random_inputs"], ["", "", "", "def", "setup_input", "(", "self", ",", "input", ")", ":", "\n", "        ", "\"\"\"Unpack input data from the dataloader and perform necessary pre-processing steps.\n\n        Parameters:\n            input (list): include the data itself and its metadata information.\n        \"\"\"", "\n", "if", "isinstance", "(", "input", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "            ", "input", "=", "input", "[", "0", "]", "\n", "", "if", "not", "isinstance", "(", "input", ",", "dict", ")", ":", "\n", "            ", "input", "=", "{", "'img'", ":", "input", "}", "\n", "", "self", ".", "D_real_inputs", "=", "[", "paddle", ".", "to_tensor", "(", "input", "[", "'img'", "]", ")", "]", "\n", "if", "'class_id'", "in", "input", ":", "# n class input", "\n", "            ", "if", "isinstance", "(", "self", ".", "nets", "[", "'netG'", "]", ",", "paddle", ".", "DataParallel", ")", ":", "\n", "                ", "self", ".", "n_class", "=", "self", ".", "nets", "[", "'netG'", "]", ".", "_layers", ".", "n_class", "\n", "", "else", ":", "\n", "                ", "self", ".", "n_class", "=", "self", ".", "nets", "[", "'netG'", "]", ".", "n_class", "\n", "\n", "", "self", ".", "D_real_inputs", "+=", "[", "\n", "paddle", ".", "to_tensor", "(", "input", "[", "'class_id'", "]", ",", "dtype", "=", "'int64'", ")", "\n", "]", "\n", "", "else", ":", "\n", "            ", "self", ".", "n_class", "=", "0", "\n", "\n", "", "batch_size", "=", "self", ".", "D_real_inputs", "[", "0", "]", ".", "shape", "[", "0", "]", "\n", "\n", "if", "isinstance", "(", "self", ".", "nets", "[", "'netG'", "]", ",", "paddle", ".", "DataParallel", ")", ":", "\n", "            ", "self", ".", "G_inputs", "=", "self", ".", "nets", "[", "'netG'", "]", ".", "_layers", ".", "random_inputs", "(", "batch_size", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "G_inputs", "=", "self", ".", "nets", "[", "'netG'", "]", ".", "random_inputs", "(", "batch_size", ")", "\n", "\n", "", "if", "not", "isinstance", "(", "self", ".", "G_inputs", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "            ", "self", ".", "G_inputs", "=", "[", "self", ".", "G_inputs", "]", "\n", "\n", "", "if", "not", "hasattr", "(", "self", ",", "'G_fixed_inputs'", ")", ":", "\n", "            ", "self", ".", "G_fixed_inputs", "=", "[", "t", "for", "t", "in", "self", ".", "G_inputs", "]", "\n", "if", "self", ".", "n_class", ">", "0", ":", "\n", "                ", "rows_num", "=", "(", "batch_size", "-", "1", ")", "//", "self", ".", "samples_every_row", "+", "1", "\n", "class_ids", "=", "paddle", ".", "randint", "(", "0", ",", "self", ".", "n_class", ",", "[", "rows_num", ",", "1", "]", ")", "\n", "class_ids", "=", "class_ids", ".", "tile", "(", "[", "1", ",", "self", ".", "samples_every_row", "]", ")", "\n", "class_ids", "=", "class_ids", ".", "reshape", "(", "[", "\n", "-", "1", ",", "\n", "]", ")", "[", ":", "batch_size", "]", ".", "detach", "(", ")", "\n", "self", ".", "G_fixed_inputs", "[", "1", "]", "=", "class_ids", ".", "detach", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.gan_model.GANModel.forward": [[118, 125], ["utils.visual.make_grid().detach", "utils.visual.make_grid"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.make_grid"], ["", "", "", "def", "forward", "(", "self", ")", ":", "\n", "        ", "\"\"\"Run forward pass; called by both functions <optimize_parameters> and <test>.\"\"\"", "\n", "self", ".", "fake_imgs", "=", "self", ".", "nets", "[", "'netG'", "]", "(", "*", "self", ".", "G_inputs", ")", "# G(img, class_id)", "\n", "\n", "# put items to visual dict", "\n", "self", ".", "visual_items", "[", "'fake_imgs'", "]", "=", "make_grid", "(", "\n", "self", ".", "fake_imgs", ",", "self", ".", "samples_every_row", ")", ".", "detach", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.gan_model.GANModel.backward_D": [[126, 155], ["utils.visual.make_grid().detach", "gan_model.GANModel.criterionGAN", "gan_model.GANModel.criterionGAN", "gan_model.GANModel.loss_D.backward", "gan_model.GANModel.fake_imgs.detach", "len", "utils.visual.make_grid"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.make_grid"], ["", "def", "backward_D", "(", "self", ")", ":", "\n", "        ", "\"\"\"Calculate GAN loss for the discriminator\"\"\"", "\n", "# Fake; stop backprop to the generator by detaching fake_imgs", "\n", "# use conditional GANs; we need to feed both input and output to the discriminator", "\n", "self", ".", "loss_D", "=", "0", "\n", "self", ".", "D_fake_inputs", "=", "[", "self", ".", "fake_imgs", ".", "detach", "(", ")", "]", "\n", "if", "len", "(", "self", ".", "G_inputs", ")", ">", "1", "and", "self", ".", "G_inputs", "[", "1", "]", "is", "not", "None", ":", "\n", "            ", "self", ".", "D_fake_inputs", "+=", "[", "self", ".", "G_inputs", "[", "1", "]", "]", "\n", "", "pred_fake", "=", "self", ".", "nets", "[", "'netD'", "]", "(", "*", "self", ".", "D_fake_inputs", ")", "\n", "# Real", "\n", "real_imgs", "=", "self", ".", "D_real_inputs", "[", "0", "]", "\n", "self", ".", "visual_items", "[", "'real_imgs'", "]", "=", "make_grid", "(", "\n", "real_imgs", ",", "self", ".", "samples_every_row", ")", ".", "detach", "(", ")", "\n", "pred_real", "=", "self", ".", "nets", "[", "'netD'", "]", "(", "*", "self", ".", "D_real_inputs", ")", "\n", "\n", "self", ".", "loss_D_fake", "=", "self", ".", "criterionGAN", "(", "pred_fake", ",", "False", ",", "True", ")", "\n", "self", ".", "loss_D_real", "=", "self", ".", "criterionGAN", "(", "pred_real", ",", "True", ",", "True", ")", "\n", "\n", "# combine loss and calculate gradients", "\n", "if", "self", ".", "criterionGAN", ".", "gan_mode", "in", "[", "'vanilla'", ",", "'lsgan'", "]", ":", "\n", "            ", "self", ".", "loss_D", "=", "self", ".", "loss_D", "+", "(", "self", ".", "loss_D_fake", "+", "\n", "self", ".", "loss_D_real", ")", "*", "0.5", "\n", "", "else", ":", "\n", "            ", "self", ".", "loss_D", "=", "self", ".", "loss_D", "+", "self", ".", "loss_D_fake", "+", "self", ".", "loss_D_real", "\n", "\n", "", "self", ".", "loss_D", ".", "backward", "(", ")", "\n", "\n", "self", ".", "losses", "[", "'D_fake_loss'", "]", "=", "self", ".", "loss_D_fake", "\n", "self", ".", "losses", "[", "'D_real_loss'", "]", "=", "self", ".", "loss_D_real", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.gan_model.GANModel.backward_G": [[156, 172], ["gan_model.GANModel.criterionGAN", "gan_model.GANModel.loss_G.backward", "len"], "methods", ["None"], ["", "def", "backward_G", "(", "self", ")", ":", "\n", "        ", "\"\"\"Calculate GAN loss for the generator\"\"\"", "\n", "# First, G(imgs) should fake the discriminator", "\n", "self", ".", "D_fake_inputs", "=", "[", "self", ".", "fake_imgs", "]", "\n", "if", "len", "(", "self", ".", "G_inputs", ")", ">", "1", "and", "self", ".", "G_inputs", "[", "1", "]", "is", "not", "None", ":", "\n", "            ", "self", ".", "D_fake_inputs", "+=", "[", "self", ".", "G_inputs", "[", "1", "]", "]", "\n", "", "pred_fake", "=", "self", ".", "nets", "[", "'netD'", "]", "(", "*", "self", ".", "D_fake_inputs", ")", "\n", "\n", "self", ".", "loss_G_GAN", "=", "self", ".", "criterionGAN", "(", "pred_fake", ",", "True", ",", "False", ")", "\n", "\n", "# combine loss and calculate gradients", "\n", "self", ".", "loss_G", "=", "self", ".", "loss_G_GAN", "\n", "\n", "self", ".", "loss_G", ".", "backward", "(", ")", "\n", "\n", "self", ".", "losses", "[", "'G_adv_loss'", "]", "=", "self", ".", "loss_G_GAN", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.gan_model.GANModel.train_iter": [[173, 204], ["gan_model.GANModel.forward", "gan_model.GANModel.set_requires_grad", "optimizers[].clear_grad", "gan_model.GANModel.backward_D", "optimizers[].step", "gan_model.GANModel.set_requires_grad", "optimizers[].clear_grad", "gan_model.GANModel.backward_G", "optimizers[].step", "paddle.no_grad", "gan_model.GANModel.nets[].parameters", "paddle.no_grad", "utils.visual.make_grid", "p.clip"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.vgg16.forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.backward_D", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.backward_G", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.make_grid"], ["", "def", "train_iter", "(", "self", ",", "optimizers", "=", "None", ")", ":", "\n", "\n", "# compute fake images: G(imgs)", "\n", "        ", "self", ".", "forward", "(", ")", "\n", "\n", "# update D", "\n", "self", ".", "set_requires_grad", "(", "self", ".", "nets", "[", "'netD'", "]", ",", "True", ")", "\n", "optimizers", "[", "'optimizer_D'", "]", ".", "clear_grad", "(", ")", "\n", "self", ".", "backward_D", "(", ")", "\n", "optimizers", "[", "'optimizer_D'", "]", ".", "step", "(", ")", "\n", "self", ".", "set_requires_grad", "(", "self", ".", "nets", "[", "'netD'", "]", ",", "False", ")", "\n", "\n", "# weight clip", "\n", "if", "self", ".", "criterionGAN", ".", "gan_mode", "==", "'wgan'", ":", "\n", "            ", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "                ", "for", "p", "in", "self", ".", "nets", "[", "'netD'", "]", ".", "parameters", "(", ")", ":", "\n", "                    ", "p", "[", ":", "]", "=", "p", ".", "clip", "(", "-", "0.01", ",", "0.01", ")", "\n", "\n", "", "", "", "if", "self", ".", "iter", ">", "self", ".", "disc_start_iters", "and", "self", ".", "iter", "%", "self", ".", "disc_iters", "==", "0", ":", "\n", "# update G", "\n", "            ", "optimizers", "[", "'optimizer_G'", "]", ".", "clear_grad", "(", ")", "\n", "self", ".", "backward_G", "(", ")", "\n", "optimizers", "[", "'optimizer_G'", "]", ".", "step", "(", ")", "\n", "\n", "", "if", "self", ".", "iter", "%", "self", ".", "visual_interval", "==", "0", ":", "\n", "            ", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "                ", "self", ".", "visual_items", "[", "'fixed_generated_imgs'", "]", "=", "make_grid", "(", "\n", "self", ".", "nets", "[", "'netG'", "]", "(", "*", "self", ".", "G_fixed_inputs", ")", ",", "\n", "self", ".", "samples_every_row", ")", "\n", "\n", "", "", "self", ".", "iter", "+=", "1", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.esrgan_model.ESRGAN.__init__": [[32, 62], ["sr_model.BaseSRModel.__init__", "generators.builder.build_generator", "discriminators.builder.build_discriminator", "criterions.build_criterion", "criterions.build_criterion", "criterions.build_criterion"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.builder.build_discriminator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion"], ["def", "__init__", "(", "self", ",", "\n", "generator", ",", "\n", "discriminator", "=", "None", ",", "\n", "pixel_criterion", "=", "None", ",", "\n", "perceptual_criterion", "=", "None", ",", "\n", "gan_criterion", "=", "None", ")", ":", "\n", "        ", "\"\"\"Initialize the ESRGAN class.\n\n        Args:\n            generator (dict): config of generator.\n            discriminator (dict): config of discriminator.\n            pixel_criterion (dict): config of pixel criterion.\n            perceptual_criterion (dict): config of perceptual criterion.\n            gan_criterion (dict): config of gan criterion.\n        \"\"\"", "\n", "super", "(", "ESRGAN", ",", "self", ")", ".", "__init__", "(", "generator", ")", "\n", "\n", "self", ".", "nets", "[", "'generator'", "]", "=", "build_generator", "(", "generator", ")", "\n", "\n", "if", "discriminator", ":", "\n", "            ", "self", ".", "nets", "[", "'discriminator'", "]", "=", "build_discriminator", "(", "discriminator", ")", "\n", "\n", "", "if", "pixel_criterion", ":", "\n", "            ", "self", ".", "pixel_criterion", "=", "build_criterion", "(", "pixel_criterion", ")", "\n", "\n", "", "if", "perceptual_criterion", ":", "\n", "            ", "self", ".", "perceptual_criterion", "=", "build_criterion", "(", "perceptual_criterion", ")", "\n", "\n", "", "if", "gan_criterion", ":", "\n", "            ", "self", ".", "gan_criterion", "=", "build_criterion", "(", "gan_criterion", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.esrgan_model.ESRGAN.train_iter": [[63, 130], ["optimizers[].clear_grad", "hasattr", "esrgan_model.ESRGAN.pixel_criterion", "esrgan_model.ESRGAN.perceptual_criterion", "esrgan_model.ESRGAN.set_requires_grad", "esrgan_model.ESRGAN.gan_criterion", "esrgan_model.ESRGAN.gan_criterion", "l_total.backward", "optimizers[].step", "esrgan_model.ESRGAN.set_requires_grad", "optimizers[].clear_grad", "optimizers[].step", "paddle.mean", "paddle.mean", "l_total.backward", "optimizers[].step", "esrgan_model.ESRGAN.gan_criterion", "esrgan_model.ESRGAN.output.detach", "esrgan_model.ESRGAN.gan_criterion", "real_d_pred.detach", "fake_d_pred.detach", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "real_d_pred.detach"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad"], ["", "", "def", "train_iter", "(", "self", ",", "optimizers", "=", "None", ")", ":", "\n", "        ", "optimizers", "[", "'optimG'", "]", ".", "clear_grad", "(", ")", "\n", "l_total", "=", "0", "\n", "self", ".", "output", "=", "self", ".", "nets", "[", "'generator'", "]", "(", "self", ".", "lq", ")", "\n", "self", ".", "visual_items", "[", "'output'", "]", "=", "self", ".", "output", "\n", "# pixel loss", "\n", "if", "self", ".", "pixel_criterion", ":", "\n", "            ", "l_pix", "=", "self", ".", "pixel_criterion", "(", "self", ".", "output", ",", "self", ".", "gt", ")", "\n", "l_total", "+=", "l_pix", "\n", "self", ".", "losses", "[", "'loss_pix'", "]", "=", "l_pix", "\n", "", "if", "self", ".", "perceptual_criterion", ":", "\n", "            ", "l_g_percep", ",", "l_g_style", "=", "self", ".", "perceptual_criterion", "(", "\n", "self", ".", "output", ",", "self", ".", "gt", ")", "\n", "# l_total += l_pix", "\n", "if", "l_g_percep", "is", "not", "None", ":", "\n", "                ", "l_total", "+=", "l_g_percep", "\n", "self", ".", "losses", "[", "'loss_percep'", "]", "=", "l_g_percep", "\n", "", "if", "l_g_style", "is", "not", "None", ":", "\n", "                ", "l_total", "+=", "l_g_style", "\n", "self", ".", "losses", "[", "'loss_style'", "]", "=", "l_g_style", "\n", "\n", "# gan loss (relativistic gan)", "\n", "", "", "if", "hasattr", "(", "self", ",", "'gan_criterion'", ")", ":", "\n", "            ", "self", ".", "set_requires_grad", "(", "self", ".", "nets", "[", "'discriminator'", "]", ",", "False", ")", "\n", "real_d_pred", "=", "self", ".", "nets", "[", "'discriminator'", "]", "(", "self", ".", "gt", ")", ".", "detach", "(", ")", "\n", "fake_g_pred", "=", "self", ".", "nets", "[", "'discriminator'", "]", "(", "self", ".", "output", ")", "\n", "l_g_real", "=", "self", ".", "gan_criterion", "(", "real_d_pred", "-", "\n", "paddle", ".", "mean", "(", "fake_g_pred", ")", ",", "\n", "False", ",", "\n", "is_disc", "=", "False", ")", "\n", "l_g_fake", "=", "self", ".", "gan_criterion", "(", "fake_g_pred", "-", "\n", "paddle", ".", "mean", "(", "real_d_pred", ")", ",", "\n", "True", ",", "\n", "is_disc", "=", "False", ")", "\n", "l_g_gan", "=", "(", "l_g_real", "+", "l_g_fake", ")", "/", "2", "\n", "\n", "l_total", "+=", "l_g_gan", "\n", "self", ".", "losses", "[", "'l_g_gan'", "]", "=", "l_g_gan", "\n", "l_total", ".", "backward", "(", ")", "\n", "optimizers", "[", "'optimG'", "]", ".", "step", "(", ")", "\n", "\n", "self", ".", "set_requires_grad", "(", "self", ".", "nets", "[", "'discriminator'", "]", ",", "True", ")", "\n", "optimizers", "[", "'optimD'", "]", ".", "clear_grad", "(", ")", "\n", "# real", "\n", "fake_d_pred", "=", "self", ".", "nets", "[", "'discriminator'", "]", "(", "self", ".", "output", ")", ".", "detach", "(", ")", "\n", "real_d_pred", "=", "self", ".", "nets", "[", "'discriminator'", "]", "(", "self", ".", "gt", ")", "\n", "l_d_real", "=", "self", ".", "gan_criterion", "(", "\n", "real_d_pred", "-", "paddle", ".", "mean", "(", "fake_d_pred", ")", ",", "True", ",", "\n", "is_disc", "=", "True", ")", "*", "0.5", "\n", "\n", "# fake", "\n", "fake_d_pred", "=", "self", ".", "nets", "[", "'discriminator'", "]", "(", "self", ".", "output", ".", "detach", "(", ")", ")", "\n", "l_d_fake", "=", "self", ".", "gan_criterion", "(", "\n", "fake_d_pred", "-", "paddle", ".", "mean", "(", "real_d_pred", ".", "detach", "(", ")", ")", ",", "\n", "False", ",", "\n", "is_disc", "=", "True", ")", "*", "0.5", "\n", "\n", "(", "l_d_real", "+", "l_d_fake", ")", ".", "backward", "(", ")", "\n", "optimizers", "[", "'optimD'", "]", ".", "step", "(", ")", "\n", "\n", "self", ".", "losses", "[", "'l_d_real'", "]", "=", "l_d_real", "\n", "self", ".", "losses", "[", "'l_d_fake'", "]", "=", "l_d_fake", "\n", "self", ".", "losses", "[", "'out_d_real'", "]", "=", "paddle", ".", "mean", "(", "real_d_pred", ".", "detach", "(", ")", ")", "\n", "self", ".", "losses", "[", "'out_d_fake'", "]", "=", "paddle", ".", "mean", "(", "fake_d_pred", ".", "detach", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "l_total", ".", "backward", "(", ")", "\n", "optimizers", "[", "'optimG'", "]", ".", "step", "(", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.__init__": [[52, 77], ["collections.OrderedDict", "collections.OrderedDict", "collections.OrderedDict", "collections.OrderedDict", "collections.OrderedDict", "base_model.BaseModel.params.get"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get"], ["def", "__init__", "(", "self", ",", "params", "=", "None", ")", ":", "\n", "        ", "\"\"\"Initialize the BaseModel class.\n\n        When creating your custom class, you need to implement your own initialization.\n        In this function, you should first call <super(YourClass, self).__init__(self, cfg)>\n        Then, you need to define four lists:\n            -- self.losses (dict):          specify the training losses that you want to plot and save.\n            -- self.nets (dict):         define networks used in our training.\n            -- self.visual_names (str list):        specify the images that you want to display and save.\n            -- self.optimizers (dict):    define and initialize optimizers. You can define one optimizer for each network.\n                                          If two networks are updated at the same time, you can use itertools.chain to group them.\n                                          See cycle_gan_model.py for an example.\n\n        Args:\n            params (dict): Hyper params for train or test. Default: None.\n        \"\"\"", "\n", "self", ".", "params", "=", "params", "\n", "self", ".", "is_train", "=", "True", "if", "self", ".", "params", "is", "None", "else", "self", ".", "params", ".", "get", "(", "\n", "'is_train'", ",", "True", ")", "\n", "\n", "self", ".", "nets", "=", "OrderedDict", "(", ")", "\n", "self", ".", "optimizers", "=", "OrderedDict", "(", ")", "\n", "self", ".", "metrics", "=", "OrderedDict", "(", ")", "\n", "self", ".", "losses", "=", "OrderedDict", "(", ")", "\n", "self", ".", "visual_items", "=", "OrderedDict", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.setup_input": [[78, 86], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "setup_input", "(", "self", ",", "input", ")", ":", "\n", "        ", "\"\"\"Unpack input data from the dataloader and perform necessary pre-processing steps.\n\n        Args:\n            input (dict): includes the data itself and its metadata information.\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.forward": [[87, 91], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "forward", "(", "self", ")", ":", "\n", "        ", "\"\"\"Run forward pass; called by both functions <train_iter> and <test_iter>.\"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.train_iter": [[92, 96], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "train_iter", "(", "self", ",", "optims", "=", "None", ")", ":", "\n", "        ", "\"\"\"Calculate losses, gradients, and update network weights; called in every training iteration\"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_total_iter": [[97, 99], ["None"], "methods", ["None"], ["", "def", "set_total_iter", "(", "self", ",", "total_iter", ")", ":", "\n", "        ", "self", ".", "total_iter", "=", "total_iter", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.test_iter": [[100, 106], ["base_model.BaseModel.eval", "base_model.BaseModel.train", "paddle.no_grad", "base_model.BaseModel.forward"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.vgg16.forward"], ["", "def", "test_iter", "(", "self", ",", "metrics", "=", "None", ")", ":", "\n", "        ", "\"\"\"Calculate metrics; called in every test iteration\"\"\"", "\n", "self", ".", "eval", "(", ")", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "            ", "self", ".", "forward", "(", ")", "\n", "", "self", ".", "train", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.setup_train_mode": [[107, 109], ["None"], "methods", ["None"], ["", "def", "setup_train_mode", "(", "self", ",", "is_train", ")", ":", "\n", "        ", "self", ".", "is_train", "=", "is_train", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.setup_lr_schedulers": [[110, 113], ["solver.build_lr_scheduler"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.solver.builder.build_lr_scheduler"], ["", "def", "setup_lr_schedulers", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "self", ".", "lr_scheduler", "=", "build_lr_scheduler", "(", "cfg", ")", "\n", "return", "self", ".", "lr_scheduler", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.setup_optimizers": [[114, 133], ["cfg.get", "cfg.copy", "opt_cfg.copy.pop", "solver.build_optimizer", "cfg.items", "base_model.BaseModel.nets[].parameters", "opt_cfg.copy", "opt_cfg.copy.pop", "solver.build_optimizer", "base_model.BaseModel.nets[].parameters"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.solver.builder.build_optimizer", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.solver.builder.build_optimizer"], ["", "def", "setup_optimizers", "(", "self", ",", "lr", ",", "cfg", ")", ":", "\n", "        ", "if", "cfg", ".", "get", "(", "'name'", ",", "None", ")", ":", "\n", "            ", "cfg_", "=", "cfg", ".", "copy", "(", ")", "\n", "net_names", "=", "cfg_", ".", "pop", "(", "'net_names'", ")", "\n", "parameters", "=", "[", "]", "\n", "for", "net_name", "in", "net_names", ":", "\n", "                ", "parameters", "+=", "self", ".", "nets", "[", "net_name", "]", ".", "parameters", "(", ")", "\n", "", "self", ".", "optimizers", "[", "'optim'", "]", "=", "build_optimizer", "(", "cfg_", ",", "lr", ",", "parameters", ")", "\n", "", "else", ":", "\n", "            ", "for", "opt_name", ",", "opt_cfg", "in", "cfg", ".", "items", "(", ")", ":", "\n", "                ", "cfg_", "=", "opt_cfg", ".", "copy", "(", ")", "\n", "net_names", "=", "cfg_", ".", "pop", "(", "'net_names'", ")", "\n", "parameters", "=", "[", "]", "\n", "for", "net_name", "in", "net_names", ":", "\n", "                    ", "parameters", "+=", "self", ".", "nets", "[", "net_name", "]", ".", "parameters", "(", ")", "\n", "", "self", ".", "optimizers", "[", "opt_name", "]", "=", "build_optimizer", "(", "\n", "cfg_", ",", "lr", ",", "parameters", ")", "\n", "\n", "", "", "return", "self", ".", "optimizers", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.setup_metrics": [[134, 144], ["isinstance", "cfg.items", "build_metric", "list", "build_metric", "cfg.values"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.builder.build_metric", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.builder.build_metric"], ["", "def", "setup_metrics", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "from", ".", ".", "metrics", "import", "build_metric", "\n", "if", "isinstance", "(", "list", "(", "cfg", ".", "values", "(", ")", ")", "[", "0", "]", ",", "dict", ")", ":", "\n", "            ", "for", "metric_name", ",", "cfg_", "in", "cfg", ".", "items", "(", ")", ":", "\n", "                ", "self", ".", "metrics", "[", "metric_name", "]", "=", "build_metric", "(", "cfg_", ")", "\n", "", "", "else", ":", "\n", "            ", "metric", "=", "build_metric", "(", "cfg", ")", "\n", "self", ".", "metrics", "[", "metric", ".", "__class__", ".", "__name__", "]", "=", "metric", "\n", "\n", "", "return", "self", ".", "metrics", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval": [[145, 149], ["base_model.BaseModel.nets.values", "net.eval"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval"], ["", "def", "eval", "(", "self", ")", ":", "\n", "        ", "\"\"\"Make nets eval mode during test time\"\"\"", "\n", "for", "net", "in", "self", ".", "nets", ".", "values", "(", ")", ":", "\n", "            ", "net", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.train": [[150, 154], ["base_model.BaseModel.nets.values", "net.train"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.train"], ["", "", "def", "train", "(", "self", ")", ":", "\n", "        ", "\"\"\"Make nets train mode during train time\"\"\"", "\n", "for", "net", "in", "self", ".", "nets", ".", "values", "(", ")", ":", "\n", "            ", "net", ".", "train", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.compute_visuals": [[155, 158], ["None"], "methods", ["None"], ["", "", "def", "compute_visuals", "(", "self", ")", ":", "\n", "        ", "\"\"\"Calculate additional output images for visdom and HTML visualization\"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.get_image_paths": [[159, 164], ["hasattr"], "methods", ["None"], ["", "def", "get_image_paths", "(", "self", ")", ":", "\n", "        ", "\"\"\" Return image paths that are used to load current data\"\"\"", "\n", "if", "hasattr", "(", "self", ",", "'image_paths'", ")", ":", "\n", "            ", "return", "self", ".", "image_paths", "\n", "", "return", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.get_current_visuals": [[165, 168], ["None"], "methods", ["None"], ["", "def", "get_current_visuals", "(", "self", ")", ":", "\n", "        ", "\"\"\"Return visualization images.\"\"\"", "\n", "return", "self", ".", "visual_items", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.get_current_losses": [[169, 172], ["None"], "methods", ["None"], ["", "def", "get_current_losses", "(", "self", ")", ":", "\n", "        ", "\"\"\"Return traning losses / errors. train.py will print out these errors on console, and save them to a file\"\"\"", "\n", "return", "self", ".", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad": [[173, 185], ["isinstance", "net.parameters"], "methods", ["None"], ["", "def", "set_requires_grad", "(", "self", ",", "nets", ",", "requires_grad", "=", "False", ")", ":", "\n", "        ", "\"\"\"Set requies_grad=Fasle for all the networks to avoid unnecessary computations\n        Args:\n            nets (network list): a list of networks\n            requires_grad (bool): whether the networks require gradients or not\n        \"\"\"", "\n", "if", "not", "isinstance", "(", "nets", ",", "list", ")", ":", "\n", "            ", "nets", "=", "[", "nets", "]", "\n", "", "for", "net", "in", "nets", ":", "\n", "            ", "if", "net", "is", "not", "None", ":", "\n", "                ", "for", "param", "in", "net", ".", "parameters", "(", ")", ":", "\n", "                    ", "param", ".", "trainable", "=", "requires_grad", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.export_model": [[186, 219], ["paddle.jit.to_static", "paddle.jit.save", "paddle.static.InputSpec", "os.path.join", "inference_model_to_serving", "range", "base_model.BaseModel.__class__.__name__.lower", "base_model.BaseModel.__class__.__name__.lower"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save"], ["", "", "", "", "def", "export_model", "(", "self", ",", "export_model", ",", "output_dir", "=", "None", ",", "inputs_size", "=", "[", "]", ",", "export_serving_model", "=", "False", ",", "model_name", "=", "None", ")", ":", "\n", "        ", "inputs_num", "=", "0", "\n", "for", "net", "in", "export_model", ":", "\n", "            ", "input_spec", "=", "[", "\n", "paddle", ".", "static", ".", "InputSpec", "(", "shape", "=", "inputs_size", "[", "inputs_num", "+", "i", "]", ",", "\n", "dtype", "=", "\"float32\"", ")", "\n", "for", "i", "in", "range", "(", "net", "[", "\"inputs_num\"", "]", ")", "\n", "]", "\n", "inputs_num", "=", "inputs_num", "+", "net", "[", "\"inputs_num\"", "]", "\n", "static_model", "=", "paddle", ".", "jit", ".", "to_static", "(", "self", ".", "nets", "[", "net", "[", "\"name\"", "]", "]", ",", "\n", "input_spec", "=", "input_spec", ")", "\n", "if", "output_dir", "is", "None", ":", "\n", "                ", "output_dir", "=", "'inference_model'", "\n", "", "if", "model_name", "is", "None", ":", "\n", "                ", "model_name", "=", "'{}_{}'", ".", "format", "(", "self", ".", "__class__", ".", "__name__", ".", "lower", "(", ")", ",", "\n", "net", "[", "\"name\"", "]", ")", "\n", "", "paddle", ".", "jit", ".", "save", "(", "\n", "static_model", ",", "\n", "os", ".", "path", ".", "join", "(", "\n", "output_dir", ",", "model_name", ")", ")", "\n", "if", "export_serving_model", ":", "\n", "                ", "from", "paddle_serving_client", ".", "io", "import", "inference_model_to_serving", "\n", "model_name", "=", "'{}_{}'", ".", "format", "(", "self", ".", "__class__", ".", "__name__", ".", "lower", "(", ")", ",", "\n", "net", "[", "\"name\"", "]", ")", "\n", "\n", "inference_model_to_serving", "(", "\n", "dirname", "=", "output_dir", ",", "\n", "serving_server", "=", "\"{}/{}/serving_server\"", ".", "format", "(", "output_dir", ",", "\n", "model_name", ")", ",", "\n", "serving_client", "=", "\"{}/{}/serving_client\"", ".", "format", "(", "output_dir", ",", "\n", "model_name", ")", ",", "\n", "model_filename", "=", "\"{}.pdmodel\"", ".", "format", "(", "model_name", ")", ",", "\n", "params_filename", "=", "\"{}.pdiparams\"", ".", "format", "(", "model_name", ")", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.photopen_model.PhotoPenModel.__init__": [[31, 63], ["base_model.BaseModel.__init__", "ppgan.utils.photopen.Dict", "generators.builder.build_generator", "discriminators.builder.build_discriminator", "criterions.build_criterion"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.builder.build_discriminator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion"], ["    ", "def", "__init__", "(", "self", ",", "\n", "generator", ",", "\n", "discriminator", ",", "\n", "criterion", ",", "\n", "label_nc", ",", "\n", "contain_dontcare_label", ",", "\n", "batchSize", ",", "\n", "crop_size", ",", "\n", "lambda_feat", ",", "\n", ")", ":", "\n", "\n", "        ", "super", "(", "PhotoPenModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "opt", "=", "{", "\n", "'label_nc'", ":", "label_nc", ",", "\n", "'contain_dontcare_label'", ":", "contain_dontcare_label", ",", "\n", "'batchSize'", ":", "batchSize", ",", "\n", "'crop_size'", ":", "crop_size", ",", "\n", "'lambda_feat'", ":", "lambda_feat", ",", "\n", "#              'semantic_nc': semantic_nc,", "\n", "#              'use_vae': use_vae,", "\n", "#              'nef': nef,", "\n", "}", "\n", "self", ".", "opt", "=", "Dict", "(", "opt", ")", "\n", "\n", "\n", "# define nets", "\n", "self", ".", "nets", "[", "'net_gen'", "]", "=", "build_generator", "(", "generator", ")", "\n", "#         init_weights(self.nets['net_gen'])", "\n", "self", ".", "nets", "[", "'net_des'", "]", "=", "build_discriminator", "(", "discriminator", ")", "\n", "#         init_weights(self.nets['net_des'])", "\n", "self", ".", "net_vgg", "=", "build_criterion", "(", "criterion", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.photopen_model.PhotoPenModel.setup_input": [[64, 69], ["paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "input.keys", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor"], "methods", ["None"], ["", "def", "setup_input", "(", "self", ",", "input", ")", ":", "\n", "        ", "if", "'img'", "in", "input", ".", "keys", "(", ")", ":", "\n", "            ", "self", ".", "img", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'img'", "]", ")", "\n", "", "self", ".", "ins", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'ins'", "]", ")", "\n", "self", ".", "img_paths", "=", "input", "[", "'img_path'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.photopen_model.PhotoPenModel.forward": [[70, 74], ["ppgan.utils.photopen.data_onehot_pro"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.photopen.data_onehot_pro"], ["", "def", "forward", "(", "self", ")", ":", "\n", "        ", "self", ".", "one_hot", "=", "data_onehot_pro", "(", "self", ".", "ins", ",", "self", ".", "opt", ")", "\n", "self", ".", "img_f", "=", "self", ".", "nets", "[", "'net_gen'", "]", "(", "self", ".", "one_hot", ")", "\n", "self", ".", "visual_items", "[", "'img_f'", "]", "=", "self", ".", "img_f", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.photopen_model.PhotoPenModel.backward_G": [[75, 102], ["paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "range", "len", "range", "photopen_model.PhotoPenModel.net_vgg", "photopen_model.PhotoPenModel.g_loss.backward", "len", "len", "range", "pred_i.mean", "len", "len"], "methods", ["None"], ["", "def", "backward_G", "(", "self", ")", ":", "\n", "        ", "fake_data", "=", "paddle", ".", "concat", "(", "(", "self", ".", "one_hot", ",", "self", ".", "img_f", ")", ",", "1", ")", "\n", "real_data", "=", "paddle", ".", "concat", "(", "(", "self", ".", "one_hot", ",", "self", ".", "img", ")", ",", "1", ")", "\n", "fake_and_real_data", "=", "paddle", ".", "concat", "(", "(", "fake_data", ",", "real_data", ")", ",", "0", ")", "\n", "pred", "=", "self", ".", "nets", "[", "'net_des'", "]", "(", "fake_and_real_data", ")", "\n", "\n", "\"\"\"content loss\"\"\"", "\n", "g_ganloss", "=", "0.", "\n", "for", "i", "in", "range", "(", "len", "(", "pred", ")", ")", ":", "\n", "            ", "pred_i", "=", "pred", "[", "i", "]", "[", "-", "1", "]", "[", ":", "self", ".", "opt", ".", "batchSize", "]", "\n", "new_loss", "=", "-", "pred_i", ".", "mean", "(", ")", "# hinge loss", "\n", "g_ganloss", "+=", "new_loss", "\n", "", "g_ganloss", "/=", "len", "(", "pred", ")", "\n", "\n", "g_featloss", "=", "0.", "\n", "for", "i", "in", "range", "(", "len", "(", "pred", ")", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "len", "(", "pred", "[", "i", "]", ")", "-", "1", ")", ":", "# \u9664\u53bb\u6700\u540e\u4e00\u5c42\u7684\u4e2d\u95f4\u5c42featuremap", "\n", "                ", "unweighted_loss", "=", "(", "pred", "[", "i", "]", "[", "j", "]", "[", ":", "self", ".", "opt", ".", "batchSize", "]", "-", "pred", "[", "i", "]", "[", "j", "]", "[", "self", ".", "opt", ".", "batchSize", ":", "]", ")", ".", "abs", "(", ")", ".", "mean", "(", ")", "# L1 loss", "\n", "g_featloss", "+=", "unweighted_loss", "*", "self", ".", "opt", ".", "lambda_feat", "/", "len", "(", "pred", ")", "\n", "\n", "", "", "g_vggloss", "=", "self", ".", "net_vgg", "(", "self", ".", "img", ",", "self", ".", "img_f", ")", "\n", "self", ".", "g_loss", "=", "g_ganloss", "+", "g_featloss", "+", "g_vggloss", "\n", "\n", "self", ".", "g_loss", ".", "backward", "(", ")", "\n", "self", ".", "losses", "[", "'g_ganloss'", "]", "=", "g_ganloss", "\n", "self", ".", "losses", "[", "'g_featloss'", "]", "=", "g_featloss", "\n", "self", ".", "losses", "[", "'g_vggloss'", "]", "=", "g_vggloss", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.photopen_model.PhotoPenModel.backward_D": [[104, 129], ["paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "range", "len", "range", "len", "photopen_model.PhotoPenModel.d_loss.backward", "len", "len", "paddle.minimum().mean", "paddle.minimum().mean", "paddle.minimum().mean", "paddle.minimum().mean", "paddle.minimum().mean", "paddle.minimum().mean", "paddle.minimum().mean", "paddle.minimum().mean", "paddle.minimum", "paddle.minimum", "paddle.minimum", "paddle.minimum", "paddle.minimum", "paddle.minimum", "paddle.minimum", "paddle.minimum", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like"], "methods", ["None"], ["", "def", "backward_D", "(", "self", ")", ":", "\n", "        ", "fake_data", "=", "paddle", ".", "concat", "(", "(", "self", ".", "one_hot", ",", "self", ".", "img_f", ")", ",", "1", ")", "\n", "real_data", "=", "paddle", ".", "concat", "(", "(", "self", ".", "one_hot", ",", "self", ".", "img", ")", ",", "1", ")", "\n", "fake_and_real_data", "=", "paddle", ".", "concat", "(", "(", "fake_data", ",", "real_data", ")", ",", "0", ")", "\n", "pred", "=", "self", ".", "nets", "[", "'net_des'", "]", "(", "fake_and_real_data", ")", "\n", "\n", "\"\"\"content loss\"\"\"", "\n", "df_ganloss", "=", "0.", "\n", "for", "i", "in", "range", "(", "len", "(", "pred", ")", ")", ":", "\n", "            ", "pred_i", "=", "pred", "[", "i", "]", "[", "-", "1", "]", "[", ":", "self", ".", "opt", ".", "batchSize", "]", "\n", "new_loss", "=", "-", "paddle", ".", "minimum", "(", "-", "pred_i", "-", "1", ",", "paddle", ".", "zeros_like", "(", "pred_i", ")", ")", ".", "mean", "(", ")", "# hingle loss", "\n", "df_ganloss", "+=", "new_loss", "\n", "", "df_ganloss", "/=", "len", "(", "pred", ")", "\n", "\n", "dr_ganloss", "=", "0.", "\n", "for", "i", "in", "range", "(", "len", "(", "pred", ")", ")", ":", "\n", "            ", "pred_i", "=", "pred", "[", "i", "]", "[", "-", "1", "]", "[", "self", ".", "opt", ".", "batchSize", ":", "]", "\n", "new_loss", "=", "-", "paddle", ".", "minimum", "(", "pred_i", "-", "1", ",", "paddle", ".", "zeros_like", "(", "pred_i", ")", ")", ".", "mean", "(", ")", "# hingle loss", "\n", "dr_ganloss", "+=", "new_loss", "\n", "", "dr_ganloss", "/=", "len", "(", "pred", ")", "\n", "\n", "self", ".", "d_loss", "=", "df_ganloss", "+", "dr_ganloss", "\n", "self", ".", "d_loss", ".", "backward", "(", ")", "\n", "self", ".", "losses", "[", "'df_ganloss'", "]", "=", "df_ganloss", "\n", "self", ".", "losses", "[", "'dr_ganloss'", "]", "=", "dr_ganloss", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.photopen_model.PhotoPenModel.train_iter": [[131, 141], ["photopen_model.PhotoPenModel.forward", "photopen_model.PhotoPenModel.optimizers[].clear_grad", "photopen_model.PhotoPenModel.backward_G", "photopen_model.PhotoPenModel.optimizers[].step", "photopen_model.PhotoPenModel.forward", "photopen_model.PhotoPenModel.optimizers[].clear_grad", "photopen_model.PhotoPenModel.backward_D", "photopen_model.PhotoPenModel.optimizers[].step"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.vgg16.forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.backward_G", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.vgg16.forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.backward_D"], ["", "def", "train_iter", "(", "self", ",", "optimizers", "=", "None", ")", ":", "\n", "        ", "self", ".", "forward", "(", ")", "\n", "self", ".", "optimizers", "[", "'optimG'", "]", ".", "clear_grad", "(", ")", "\n", "self", ".", "backward_G", "(", ")", "\n", "self", ".", "optimizers", "[", "'optimG'", "]", ".", "step", "(", ")", "\n", "\n", "self", ".", "forward", "(", ")", "\n", "self", ".", "optimizers", "[", "'optimD'", "]", ".", "clear_grad", "(", ")", "\n", "self", ".", "backward_D", "(", ")", "\n", "self", ".", "optimizers", "[", "'optimD'", "]", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.photopen_model.PhotoPenModel.test_iter": [[142, 147], ["photopen_model.PhotoPenModel.eval", "photopen_model.PhotoPenModel.train", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "photopen_model.PhotoPenModel.forward"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.vgg16.forward"], ["", "def", "test_iter", "(", "self", ",", "metrics", "=", "None", ")", ":", "\n", "        ", "self", ".", "eval", "(", ")", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "            ", "self", ".", "forward", "(", ")", "\n", "", "self", ".", "train", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.photopen_model.PhotoPenModel.setup_optimizers": [[148, 166], ["cfg.items", "opt_cfg.copy", "opt_cfg.copy.pop", "solver.build_optimizer", "photopen_model.PhotoPenModel.nets[].parameters"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.solver.builder.build_optimizer"], ["", "def", "setup_optimizers", "(", "self", ",", "lr", ",", "cfg", ")", ":", "\n", "        ", "for", "opt_name", ",", "opt_cfg", "in", "cfg", ".", "items", "(", ")", ":", "\n", "            ", "if", "opt_name", "==", "'lr'", ":", "\n", "                ", "learning_rate", "=", "opt_cfg", "\n", "continue", "\n", "", "cfg_", "=", "opt_cfg", ".", "copy", "(", ")", "\n", "net_names", "=", "cfg_", ".", "pop", "(", "'net_names'", ")", "\n", "parameters", "=", "[", "]", "\n", "for", "net_name", "in", "net_names", ":", "\n", "                ", "parameters", "+=", "self", ".", "nets", "[", "net_name", "]", ".", "parameters", "(", ")", "\n", "", "if", "opt_name", "==", "'optimG'", ":", "\n", "                ", "lr", "=", "learning_rate", "*", "4", "\n", "", "else", ":", "\n", "                ", "lr", "=", "learning_rate", "\n", "", "self", ".", "optimizers", "[", "opt_name", "]", "=", "build_optimizer", "(", "\n", "cfg_", ",", "lr", ",", "parameters", ")", "\n", "\n", "", "return", "self", ".", "optimizers", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.dc_gan_model.DCGANModel.__init__": [[31, 51], ["base_model.BaseModel.__init__", "generators.builder.build_generator", "modules.init.init_weights", "discriminators.builder.build_discriminator", "modules.init.init_weights", "criterions.build_criterion"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.PixelShufflePack.init_weights", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.builder.build_discriminator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.PixelShufflePack.init_weights", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion"], ["def", "__init__", "(", "self", ",", "generator", ",", "discriminator", "=", "None", ",", "gan_criterion", "=", "None", ")", ":", "\n", "        ", "\"\"\"Initialize the DCGAN class.\n        Args:\n            generator (dict): config of generator.\n            discriminator (dict): config of discriminator.\n            pixel_criterion (dict): config of pixel criterion.\n            gan_criterion (dict): config of gan criterion.\n        \"\"\"", "\n", "super", "(", "DCGANModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "gen_cfg", "=", "generator", "\n", "# define networks (both generator and discriminator)", "\n", "self", ".", "nets", "[", "'netG'", "]", "=", "build_generator", "(", "generator", ")", "\n", "init_weights", "(", "self", ".", "nets", "[", "'netG'", "]", ")", "\n", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "self", ".", "nets", "[", "'netD'", "]", "=", "build_discriminator", "(", "discriminator", ")", "\n", "init_weights", "(", "self", ".", "nets", "[", "'netD'", "]", ")", "\n", "\n", "", "if", "gan_criterion", ":", "\n", "            ", "self", ".", "gan_criterion", "=", "build_criterion", "(", "gan_criterion", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.dc_gan_model.DCGANModel.setup_input": [[52, 62], ["paddle.to_tensor"], "methods", ["None"], ["", "", "def", "setup_input", "(", "self", ",", "input", ")", ":", "\n", "        ", "\"\"\"Unpack input data from the dataloader and perform necessary pre-processing steps.\n\n        Args:\n            input (dict): include the data itself and its metadata information.\n        \"\"\"", "\n", "# get 1-channel gray image, or 3-channel color image", "\n", "self", ".", "real", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'img'", "]", ")", "\n", "if", "'img_path'", "in", "input", ":", "\n", "            ", "self", ".", "image_paths", "=", "input", "[", "'A_path'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.dc_gan_model.DCGANModel.forward": [[63, 74], ["paddle.rand"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ")", ":", "\n", "        ", "\"\"\"Run forward pass; called by both functions <train_iter> and <test_iter>.\"\"\"", "\n", "\n", "# generate random noise and fake image", "\n", "self", ".", "z", "=", "paddle", ".", "rand", "(", "shape", "=", "(", "self", ".", "real", ".", "shape", "[", "0", "]", ",", "self", ".", "gen_cfg", ".", "input_nz", ",", "\n", "1", ",", "1", ")", ")", "\n", "self", ".", "fake", "=", "self", ".", "nets", "[", "'netG'", "]", "(", "self", ".", "z", ")", "\n", "\n", "# put items to visual dict", "\n", "self", ".", "visual_items", "[", "'real'", "]", "=", "self", ".", "real", "\n", "self", ".", "visual_items", "[", "'fake'", "]", "=", "self", ".", "fake", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.dc_gan_model.DCGANModel.backward_D": [[75, 91], ["dc_gan_model.DCGANModel.gan_criterion", "dc_gan_model.DCGANModel.gan_criterion", "dc_gan_model.DCGANModel.loss_D.backward", "dc_gan_model.DCGANModel.fake.detach"], "methods", ["None"], ["", "def", "backward_D", "(", "self", ")", ":", "\n", "        ", "\"\"\"Calculate GAN loss for the discriminator\"\"\"", "\n", "# Fake; stop backprop to the generator by detaching fake", "\n", "pred_fake", "=", "self", ".", "nets", "[", "'netD'", "]", "(", "self", ".", "fake", ".", "detach", "(", ")", ")", "\n", "self", ".", "loss_D_fake", "=", "self", ".", "gan_criterion", "(", "pred_fake", ",", "False", ")", "\n", "\n", "pred_real", "=", "self", ".", "nets", "[", "'netD'", "]", "(", "self", ".", "real", ")", "\n", "self", ".", "loss_D_real", "=", "self", ".", "gan_criterion", "(", "pred_real", ",", "True", ")", "\n", "\n", "# combine loss and calculate gradients", "\n", "self", ".", "loss_D", "=", "(", "self", ".", "loss_D_fake", "+", "self", ".", "loss_D_real", ")", "*", "0.5", "\n", "\n", "self", ".", "loss_D", ".", "backward", "(", ")", "\n", "\n", "self", ".", "losses", "[", "'D_fake_loss'", "]", "=", "self", ".", "loss_D_fake", "\n", "self", ".", "losses", "[", "'D_real_loss'", "]", "=", "self", ".", "loss_D_real", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.dc_gan_model.DCGANModel.backward_G": [[92, 104], ["dc_gan_model.DCGANModel.gan_criterion", "dc_gan_model.DCGANModel.loss_G.backward"], "methods", ["None"], ["", "def", "backward_G", "(", "self", ")", ":", "\n", "        ", "\"\"\"Calculate GAN loss for the generator\"\"\"", "\n", "# G(A) should fake the discriminator", "\n", "pred_fake", "=", "self", ".", "nets", "[", "'netD'", "]", "(", "self", ".", "fake", ")", "\n", "self", ".", "loss_G_GAN", "=", "self", ".", "gan_criterion", "(", "pred_fake", ",", "True", ")", "\n", "\n", "# combine loss and calculate gradients", "\n", "self", ".", "loss_G", "=", "self", ".", "loss_G_GAN", "\n", "\n", "self", ".", "loss_G", ".", "backward", "(", ")", "\n", "\n", "self", ".", "losses", "[", "'G_adv_loss'", "]", "=", "self", ".", "loss_G_GAN", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.dc_gan_model.DCGANModel.train_iter": [[105, 122], ["dc_gan_model.DCGANModel.forward", "dc_gan_model.DCGANModel.set_requires_grad", "dc_gan_model.DCGANModel.set_requires_grad", "dc_gan_model.DCGANModel.optimizers[].clear_grad", "dc_gan_model.DCGANModel.backward_D", "dc_gan_model.DCGANModel.optimizers[].step", "dc_gan_model.DCGANModel.set_requires_grad", "dc_gan_model.DCGANModel.set_requires_grad", "dc_gan_model.DCGANModel.optimizers[].clear_grad", "dc_gan_model.DCGANModel.backward_G", "dc_gan_model.DCGANModel.optimizers[].step"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.vgg16.forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.backward_D", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.backward_G"], ["", "def", "train_iter", "(", "self", ",", "optimizers", "=", "None", ")", ":", "\n", "# compute fake images: G(A)", "\n", "        ", "self", ".", "forward", "(", ")", "\n", "\n", "#update D", "\n", "self", ".", "set_requires_grad", "(", "self", ".", "nets", "[", "'netD'", "]", ",", "True", ")", "\n", "self", ".", "set_requires_grad", "(", "self", ".", "nets", "[", "'netG'", "]", ",", "False", ")", "\n", "self", ".", "optimizers", "[", "'optimizer_D'", "]", ".", "clear_grad", "(", ")", "\n", "self", ".", "backward_D", "(", ")", "\n", "self", ".", "optimizers", "[", "'optimizer_D'", "]", ".", "step", "(", ")", "\n", "\n", "# update G", "\n", "self", ".", "set_requires_grad", "(", "self", ".", "nets", "[", "'netD'", "]", ",", "False", ")", "\n", "self", ".", "set_requires_grad", "(", "self", ".", "nets", "[", "'netG'", "]", ",", "True", ")", "\n", "self", ".", "optimizers", "[", "'optimizer_G'", "]", ".", "clear_grad", "(", ")", "\n", "self", ".", "backward_G", "(", ")", "\n", "self", ".", "optimizers", "[", "'optimizer_G'", "]", ".", "step", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.basicvsr_model.BasicVSRModel.__init__": [[32, 46], ["sr_model.BaseSRModel.__init__", "basicvsr_model.init_basicvsr_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.basicvsr_model.init_basicvsr_weight"], ["def", "__init__", "(", "self", ",", "generator", ",", "fix_iter", ",", "lr_mult", ",", "pixel_criterion", "=", "None", ")", ":", "\n", "        ", "\"\"\"Initialize the BasicVSR class.\n\n        Args:\n            generator (dict): config of generator.\n            fix_iter (dict): config of fix_iter.\n            pixel_criterion (dict): config of pixel criterion.\n        \"\"\"", "\n", "super", "(", "BasicVSRModel", ",", "self", ")", ".", "__init__", "(", "generator", ",", "pixel_criterion", ")", "\n", "self", ".", "fix_iter", "=", "fix_iter", "\n", "self", ".", "current_iter", "=", "1", "\n", "self", ".", "flag", "=", "True", "\n", "self", ".", "lr_mult", "=", "lr_mult", "\n", "init_basicvsr_weight", "(", "self", ".", "nets", "[", "'generator'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.basicvsr_model.BasicVSRModel.setup_input": [[47, 54], ["paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor"], "methods", ["None"], ["", "def", "setup_input", "(", "self", ",", "input", ")", ":", "\n", "        ", "self", ".", "lq", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'lq'", "]", ")", "\n", "self", ".", "visual_items", "[", "'lq'", "]", "=", "self", ".", "lq", "[", ":", ",", "0", ",", ":", ",", ":", ",", ":", "]", "\n", "if", "'gt'", "in", "input", ":", "\n", "            ", "self", ".", "gt", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'gt'", "]", ")", "\n", "self", ".", "visual_items", "[", "'gt'", "]", "=", "self", ".", "gt", "[", ":", ",", "0", ",", ":", ",", ":", ",", ":", "]", "\n", "", "self", ".", "image_paths", "=", "input", "[", "'lq_path'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.basicvsr_model.BasicVSRModel.train_iter": [[55, 85], ["optims[].clear_grad", "basicvsr_model.BasicVSRModel.pixel_criterion", "basicvsr_model.BasicVSRModel.backward", "optims[].step", "print", "basicvsr_model.BasicVSRModel.nets[].named_parameters", "print", "basicvsr_model.BasicVSRModel.nets[].named_parameters", "basicvsr_model.BasicVSRModel.nets.values"], "methods", ["None"], ["", "def", "train_iter", "(", "self", ",", "optims", "=", "None", ")", ":", "\n", "        ", "optims", "[", "'optim'", "]", ".", "clear_grad", "(", ")", "\n", "if", "self", ".", "fix_iter", ":", "\n", "            ", "if", "self", ".", "current_iter", "==", "1", ":", "\n", "                ", "print", "(", "'Train BasicVSR with fixed spynet for'", ",", "self", ".", "fix_iter", ",", "\n", "'iters.'", ")", "\n", "for", "name", ",", "param", "in", "self", ".", "nets", "[", "'generator'", "]", ".", "named_parameters", "(", ")", ":", "\n", "                    ", "if", "'spynet'", "in", "name", "or", "'edvr'", "in", "name", ":", "\n", "                        ", "param", ".", "trainable", "=", "False", "\n", "", "", "", "elif", "self", ".", "current_iter", ">=", "self", ".", "fix_iter", "+", "1", "and", "self", ".", "flag", ":", "\n", "                ", "print", "(", "'Train all the parameters.'", ")", "\n", "for", "name", ",", "param", "in", "self", ".", "nets", "[", "'generator'", "]", ".", "named_parameters", "(", ")", ":", "\n", "                    ", "param", ".", "trainable", "=", "True", "\n", "if", "'spynet'", "in", "name", ":", "\n", "                        ", "param", ".", "optimize_attr", "[", "'learning_rate'", "]", "=", "self", ".", "lr_mult", "\n", "", "", "self", ".", "flag", "=", "False", "\n", "for", "net", "in", "self", ".", "nets", ".", "values", "(", ")", ":", "\n", "                    ", "net", ".", "find_unused_parameters", "=", "False", "\n", "\n", "", "", "", "self", ".", "output", "=", "self", ".", "nets", "[", "'generator'", "]", "(", "self", ".", "lq", ")", "\n", "self", ".", "visual_items", "[", "'output'", "]", "=", "self", ".", "output", "[", ":", ",", "0", ",", ":", ",", ":", ",", ":", "]", "\n", "# pixel loss", "\n", "loss_pixel", "=", "self", ".", "pixel_criterion", "(", "self", ".", "output", ",", "self", ".", "gt", ")", "\n", "\n", "loss_pixel", ".", "backward", "(", ")", "\n", "optims", "[", "'optim'", "]", ".", "step", "(", ")", "\n", "\n", "self", ".", "losses", "[", "'loss_pixel'", "]", "=", "loss_pixel", "\n", "\n", "self", ".", "current_iter", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.basicvsr_model.BasicVSRModel.test_iter": [[86, 107], ["basicvsr_model.BasicVSRModel.gt.cpu", "basicvsr_model.BasicVSRModel.nets[].eval", "basicvsr_model.BasicVSRModel.nets[].train", "range", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "output[].cpu", "out_img.append", "gt_img.append", "metrics.values", "utils.visual.tensor2img", "utils.visual.tensor2img", "metric.update"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.tensor2img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.tensor2img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update"], ["", "def", "test_iter", "(", "self", ",", "metrics", "=", "None", ")", ":", "\n", "        ", "self", ".", "gt", "=", "self", ".", "gt", ".", "cpu", "(", ")", "\n", "self", ".", "nets", "[", "'generator'", "]", ".", "eval", "(", ")", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "            ", "output", "=", "self", ".", "nets", "[", "'generator'", "]", "(", "self", ".", "lq", ")", "\n", "self", ".", "visual_items", "[", "'output'", "]", "=", "output", "[", ":", ",", "0", ",", ":", ",", ":", ",", ":", "]", ".", "cpu", "(", ")", "\n", "", "self", ".", "nets", "[", "'generator'", "]", ".", "train", "(", ")", "\n", "\n", "out_img", "=", "[", "]", "\n", "gt_img", "=", "[", "]", "\n", "\n", "_", ",", "t", ",", "_", ",", "_", ",", "_", "=", "self", ".", "gt", ".", "shape", "\n", "for", "i", "in", "range", "(", "t", ")", ":", "\n", "            ", "out_tensor", "=", "output", "[", "0", ",", "i", "]", "\n", "gt_tensor", "=", "self", ".", "gt", "[", "0", ",", "i", "]", "\n", "out_img", ".", "append", "(", "tensor2img", "(", "out_tensor", ",", "(", "0.", ",", "1.", ")", ")", ")", "\n", "gt_img", ".", "append", "(", "tensor2img", "(", "gt_tensor", ",", "(", "0.", ",", "1.", ")", ")", ")", "\n", "\n", "", "if", "metrics", "is", "not", "None", ":", "\n", "            ", "for", "metric", "in", "metrics", ".", "values", "(", ")", ":", "\n", "                ", "metric", ".", "update", "(", "out_img", ",", "gt_img", ",", "is_seq", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.basicvsr_model.init_basicvsr_weight": [[109, 120], ["net.children", "hasattr", "modules.init.reset_parameters", "isinstance", "basicvsr_model.init_basicvsr_weight", "isinstance"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.reset_parameters", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.basicvsr_model.init_basicvsr_weight"], ["", "", "", "", "def", "init_basicvsr_weight", "(", "net", ")", ":", "\n", "    ", "for", "m", "in", "net", ".", "children", "(", ")", ":", "\n", "        ", "if", "hasattr", "(", "m", ",", "\n", "'weight'", ")", "and", "not", "isinstance", "(", "m", ",", "\n", "(", "nn", ".", "BatchNorm", ",", "nn", ".", "BatchNorm2D", ")", ")", ":", "\n", "            ", "reset_parameters", "(", "m", ")", "\n", "continue", "\n", "\n", "", "if", "(", "not", "isinstance", "(", "m", ",", "(", "ResidualBlockNoBN", ",", "PixelShufflePack", ",", "SPyNet", ",", "\n", "EDVRFeatureExtractor", ")", ")", ")", ":", "\n", "            ", "init_basicvsr_weight", "(", "m", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.__init__": [[34, 65], ["base_model.BaseModel.__init__", "generators.builder.build_generator", "modules.init.init_weights", "discriminators.builder.build_discriminator", "modules.init.init_weights", "criterions.build_criterion", "criterions.build_criterion"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.PixelShufflePack.init_weights", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.builder.build_discriminator", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.PixelShufflePack.init_weights", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion"], ["def", "__init__", "(", "self", ",", "\n", "generator", ",", "\n", "discriminator", "=", "None", ",", "\n", "pixel_criterion", "=", "None", ",", "\n", "gan_criterion", "=", "None", ",", "\n", "direction", "=", "'a2b'", ")", ":", "\n", "        ", "\"\"\"Initialize the pix2pix class.\n\n        Args:\n            generator (dict): config of generator.\n            discriminator (dict): config of discriminator.\n            pixel_criterion (dict): config of pixel criterion.\n            gan_criterion (dict): config of gan criterion.\n        \"\"\"", "\n", "super", "(", "Pix2PixModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "direction", "=", "direction", "\n", "# define networks (both generator and discriminator)", "\n", "self", ".", "nets", "[", "'netG'", "]", "=", "build_generator", "(", "generator", ")", "\n", "init_weights", "(", "self", ".", "nets", "[", "'netG'", "]", ")", "\n", "\n", "# define a discriminator; conditional GANs need to take both input and output images; Therefore, #channels for D is input_nc + output_nc", "\n", "if", "discriminator", ":", "\n", "            ", "self", ".", "nets", "[", "'netD'", "]", "=", "build_discriminator", "(", "discriminator", ")", "\n", "init_weights", "(", "self", ".", "nets", "[", "'netD'", "]", ")", "\n", "\n", "", "if", "pixel_criterion", ":", "\n", "            ", "self", ".", "pixel_criterion", "=", "build_criterion", "(", "pixel_criterion", ")", "\n", "\n", "", "if", "gan_criterion", ":", "\n", "            ", "self", ".", "gan_criterion", "=", "build_criterion", "(", "gan_criterion", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.setup_input": [[66, 81], ["paddle.to_tensor", "paddle.to_tensor"], "methods", ["None"], ["", "", "def", "setup_input", "(", "self", ",", "input", ")", ":", "\n", "        ", "\"\"\"Unpack input data from the dataloader and perform necessary pre-processing steps.\n\n        Args:\n            input (dict): include the data itself and its metadata information.\n\n        The option 'direction' can be used to swap images in domain A and domain B.\n        \"\"\"", "\n", "\n", "AtoB", "=", "self", ".", "direction", "==", "'AtoB'", "\n", "\n", "self", ".", "real_A", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'A'", "if", "AtoB", "else", "'B'", "]", ")", "\n", "self", ".", "real_B", "=", "paddle", ".", "to_tensor", "(", "input", "[", "'B'", "if", "AtoB", "else", "'A'", "]", ")", "\n", "\n", "self", ".", "image_paths", "=", "input", "[", "'A_path'", "if", "AtoB", "else", "'B_path'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.forward": [[82, 90], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ")", ":", "\n", "        ", "\"\"\"Run forward pass; called by both functions <optimize_parameters> and <test>.\"\"\"", "\n", "self", ".", "fake_B", "=", "self", ".", "nets", "[", "'netG'", "]", "(", "self", ".", "real_A", ")", "# G(A)", "\n", "\n", "# put items to visual dict", "\n", "self", ".", "visual_items", "[", "'fake_B'", "]", "=", "self", ".", "fake_B", "\n", "self", ".", "visual_items", "[", "'real_A'", "]", "=", "self", ".", "real_A", "\n", "self", ".", "visual_items", "[", "'real_B'", "]", "=", "self", ".", "real_B", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.backward_D": [[91, 109], ["paddle.concat", "pix2pix_model.Pix2PixModel.gan_criterion", "paddle.concat", "pix2pix_model.Pix2PixModel.gan_criterion", "pix2pix_model.Pix2PixModel.loss_D.backward", "paddle.concat.detach"], "methods", ["None"], ["", "def", "backward_D", "(", "self", ")", ":", "\n", "        ", "\"\"\"Calculate GAN loss for the discriminator\"\"\"", "\n", "# Fake; stop backprop to the generator by detaching fake_B", "\n", "# use conditional GANs; we need to feed both input and output to the discriminator", "\n", "fake_AB", "=", "paddle", ".", "concat", "(", "(", "self", ".", "real_A", ",", "self", ".", "fake_B", ")", ",", "1", ")", "\n", "pred_fake", "=", "self", ".", "nets", "[", "'netD'", "]", "(", "fake_AB", ".", "detach", "(", ")", ")", "\n", "self", ".", "loss_D_fake", "=", "self", ".", "gan_criterion", "(", "pred_fake", ",", "False", ")", "\n", "# Real", "\n", "real_AB", "=", "paddle", ".", "concat", "(", "(", "self", ".", "real_A", ",", "self", ".", "real_B", ")", ",", "1", ")", "\n", "pred_real", "=", "self", ".", "nets", "[", "'netD'", "]", "(", "real_AB", ")", "\n", "self", ".", "loss_D_real", "=", "self", ".", "gan_criterion", "(", "pred_real", ",", "True", ")", "\n", "# combine loss and calculate gradients", "\n", "self", ".", "loss_D", "=", "(", "self", ".", "loss_D_fake", "+", "self", ".", "loss_D_real", ")", "*", "0.5", "\n", "\n", "self", ".", "loss_D", ".", "backward", "(", ")", "\n", "\n", "self", ".", "losses", "[", "'D_fake_loss'", "]", "=", "self", ".", "loss_D_fake", "\n", "self", ".", "losses", "[", "'D_real_loss'", "]", "=", "self", ".", "loss_D_real", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.backward_G": [[110, 126], ["paddle.concat", "pix2pix_model.Pix2PixModel.gan_criterion", "pix2pix_model.Pix2PixModel.pixel_criterion", "pix2pix_model.Pix2PixModel.loss_G.backward"], "methods", ["None"], ["", "def", "backward_G", "(", "self", ")", ":", "\n", "        ", "\"\"\"Calculate GAN and L1 loss for the generator\"\"\"", "\n", "# First, G(A) should fake the discriminator", "\n", "fake_AB", "=", "paddle", ".", "concat", "(", "(", "self", ".", "real_A", ",", "self", ".", "fake_B", ")", ",", "1", ")", "\n", "pred_fake", "=", "self", ".", "nets", "[", "'netD'", "]", "(", "fake_AB", ")", "\n", "self", ".", "loss_G_GAN", "=", "self", ".", "gan_criterion", "(", "pred_fake", ",", "True", ")", "\n", "# Second, G(A) = B", "\n", "self", ".", "loss_G_L1", "=", "self", ".", "pixel_criterion", "(", "self", ".", "fake_B", ",", "self", ".", "real_B", ")", "\n", "\n", "# combine loss and calculate gradients", "\n", "self", ".", "loss_G", "=", "self", ".", "loss_G_GAN", "+", "self", ".", "loss_G_L1", "\n", "\n", "self", ".", "loss_G", ".", "backward", "(", ")", "\n", "\n", "self", ".", "losses", "[", "'G_adv_loss'", "]", "=", "self", ".", "loss_G_GAN", "\n", "self", ".", "losses", "[", "'G_L1_loss'", "]", "=", "self", ".", "loss_G_L1", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.train_iter": [[127, 142], ["pix2pix_model.Pix2PixModel.forward", "pix2pix_model.Pix2PixModel.set_requires_grad", "optimizers[].clear_grad", "pix2pix_model.Pix2PixModel.backward_D", "optimizers[].step", "pix2pix_model.Pix2PixModel.set_requires_grad", "optimizers[].clear_grad", "pix2pix_model.Pix2PixModel.backward_G", "optimizers[].step"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.vgg16.forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.backward_D", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_requires_grad", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.backward_G"], ["", "def", "train_iter", "(", "self", ",", "optimizers", "=", "None", ")", ":", "\n", "# compute fake images: G(A)", "\n", "        ", "self", ".", "forward", "(", ")", "\n", "\n", "# update D", "\n", "self", ".", "set_requires_grad", "(", "self", ".", "nets", "[", "'netD'", "]", ",", "True", ")", "\n", "optimizers", "[", "'optimD'", "]", ".", "clear_grad", "(", ")", "\n", "self", ".", "backward_D", "(", ")", "\n", "optimizers", "[", "'optimD'", "]", ".", "step", "(", ")", "\n", "\n", "# update G", "\n", "self", ".", "set_requires_grad", "(", "self", ".", "nets", "[", "'netD'", "]", ",", "False", ")", "\n", "optimizers", "[", "'optimG'", "]", ".", "clear_grad", "(", ")", "\n", "self", ".", "backward_G", "(", ")", "\n", "optimizers", "[", "'optimG'", "]", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.test_iter": [[143, 151], ["pix2pix_model.Pix2PixModel.nets[].eval", "pix2pix_model.Pix2PixModel.forward", "pix2pix_model.Pix2PixModel.nets[].train", "paddle.no_grad", "metrics.values", "metric.update"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.vgg16.forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.train", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update"], ["", "def", "test_iter", "(", "self", ",", "metrics", "=", "None", ")", ":", "\n", "        ", "self", ".", "nets", "[", "'netG'", "]", ".", "eval", "(", ")", "\n", "self", ".", "forward", "(", ")", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "            ", "if", "metrics", "is", "not", "None", ":", "\n", "                ", "for", "metric", "in", "metrics", ".", "values", "(", ")", ":", "\n", "                    ", "metric", ".", "update", "(", "self", ".", "fake_B", ",", "self", ".", "real_B", ")", "\n", "", "", "", "self", ".", "nets", "[", "'netG'", "]", ".", "train", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_photopen.NLayersDiscriminator.__init__": [[30, 67], ["paddle.Layer.__init__", "int", "discriminator_photopen.NLayersDiscriminator.compute_D_input_nc", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "discriminator_photopen.NLayersDiscriminator.add_sublayer", "numpy.floor().astype", "ppgan.utils.photopen.build_norm_layer", "range", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "discriminator_photopen.NLayersDiscriminator.add_sublayer", "numpy.ceil", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.GELU", "paddle.GELU", "paddle.GELU", "min", "numpy.floor().astype", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "discriminator_photopen.NLayersDiscriminator.add_sublayer", "str", "numpy.floor", "paddle.nn.utils.spectral_norm", "paddle.nn.utils.spectral_norm", "paddle.nn.utils.spectral_norm", "ppgan.utils.photopen.build_norm_layer.", "paddle.GELU", "paddle.GELU", "paddle.GELU", "str", "numpy.floor", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "str"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_photopen.NLayersDiscriminator.compute_D_input_nc", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.norm.build_norm_layer", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.spectral_norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.spectral_norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.spectral_norm"], ["    ", "def", "__init__", "(", "self", ",", "opt", ")", ":", "\n", "        ", "super", "(", "NLayersDiscriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "kw", "=", "4", "\n", "padw", "=", "int", "(", "np", ".", "ceil", "(", "(", "kw", "-", "1.0", ")", "/", "2", ")", ")", "\n", "nf", "=", "opt", ".", "ndf", "\n", "input_nc", "=", "self", ".", "compute_D_input_nc", "(", "opt", ")", "\n", "layer_count", "=", "0", "\n", "\n", "layer", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "input_nc", ",", "nf", ",", "kw", ",", "2", ",", "padw", ")", ",", "\n", "nn", ".", "GELU", "(", ")", "\n", ")", "\n", "self", ".", "add_sublayer", "(", "'block_'", "+", "str", "(", "layer_count", ")", ",", "layer", ")", "\n", "layer_count", "+=", "1", "\n", "\n", "feat_size_prev", "=", "np", ".", "floor", "(", "(", "opt", ".", "crop_size", "+", "padw", "*", "2", "-", "(", "kw", "-", "2", ")", ")", "/", "2", ")", ".", "astype", "(", "'int64'", ")", "\n", "InstanceNorm", "=", "build_norm_layer", "(", "'instance'", ")", "\n", "for", "n", "in", "range", "(", "1", ",", "opt", ".", "n_layers_D", ")", ":", "\n", "            ", "nf_prev", "=", "nf", "\n", "nf", "=", "min", "(", "nf", "*", "2", ",", "512", ")", "\n", "stride", "=", "1", "if", "n", "==", "opt", ".", "n_layers_D", "-", "1", "else", "2", "\n", "feat_size", "=", "np", ".", "floor", "(", "(", "feat_size_prev", "+", "padw", "*", "2", "-", "(", "kw", "-", "stride", ")", ")", "/", "stride", ")", ".", "astype", "(", "'int64'", ")", "\n", "feat_size_prev", "=", "feat_size", "\n", "layer", "=", "nn", ".", "Sequential", "(", "\n", "spectral_norm", "(", "nn", ".", "Conv2D", "(", "nf_prev", ",", "nf", ",", "kw", ",", "stride", ",", "padw", ",", "\n", "weight_attr", "=", "None", ",", "\n", "bias_attr", "=", "None", ")", ")", ",", "\n", "InstanceNorm", "(", "nf", ")", ",", "\n", "nn", ".", "GELU", "(", ")", "\n", ")", "\n", "self", ".", "add_sublayer", "(", "'block_'", "+", "str", "(", "layer_count", ")", ",", "layer", ")", "\n", "layer_count", "+=", "1", "\n", "\n", "", "layer", "=", "nn", ".", "Conv2D", "(", "nf", ",", "1", ",", "kw", ",", "1", ",", "padw", ")", "\n", "self", ".", "add_sublayer", "(", "'block_'", "+", "str", "(", "layer_count", ")", ",", "layer", ")", "\n", "layer_count", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_photopen.NLayersDiscriminator.forward": [[68, 75], ["discriminator_photopen.NLayersDiscriminator._sub_layers.values", "output.append", "ppgan.utils.photopen.simam", "layer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.photopen.simam"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "output", "=", "[", "]", "\n", "for", "layer", "in", "self", ".", "_sub_layers", ".", "values", "(", ")", ":", "\n", "            ", "output", ".", "append", "(", "simam", "(", "layer", "(", "input", ")", ")", ")", "\n", "input", "=", "output", "[", "-", "1", "]", "\n", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_photopen.NLayersDiscriminator.compute_D_input_nc": [[76, 83], ["None"], "methods", ["None"], ["", "def", "compute_D_input_nc", "(", "self", ",", "opt", ")", ":", "\n", "        ", "input_nc", "=", "opt", ".", "label_nc", "+", "opt", ".", "output_nc", "\n", "if", "opt", ".", "contain_dontcare_label", ":", "\n", "            ", "input_nc", "+=", "1", "\n", "", "if", "not", "opt", ".", "no_instance", ":", "\n", "            ", "input_nc", "+=", "1", "\n", "", "return", "input_nc", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_photopen.MultiscaleDiscriminator.__init__": [[86, 124], ["paddle.Layer.__init__", "ppgan.utils.photopen.Dict", "range", "range", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "discriminator_photopen.MultiscaleDiscriminator.add_sublayer", "numpy.floor().astype", "discriminator_photopen.NLayersDiscriminator", "paddle.AvgPool2D", "paddle.AvgPool2D", "paddle.AvgPool2D", "str", "numpy.floor"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "ndf", ",", "\n", "num_D", ",", "\n", "crop_size", ",", "\n", "label_nc", ",", "\n", "output_nc", ",", "\n", "contain_dontcare_label", ",", "\n", "no_instance", ",", "\n", "n_layers_D", ",", "\n", "\n", ")", ":", "\n", "        ", "super", "(", "MultiscaleDiscriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "opt", "=", "{", "\n", "'ndf'", ":", "ndf", ",", "\n", "'num_D'", ":", "num_D", ",", "\n", "'crop_size'", ":", "crop_size", ",", "\n", "'label_nc'", ":", "label_nc", ",", "\n", "'output_nc'", ":", "output_nc", ",", "\n", "'contain_dontcare_label'", ":", "contain_dontcare_label", ",", "\n", "'no_instance'", ":", "no_instance", ",", "\n", "'n_layers_D'", ":", "n_layers_D", ",", "\n", "\n", "}", "\n", "opt", "=", "Dict", "(", "opt", ")", "\n", "\n", "for", "i", "in", "range", "(", "opt", ".", "num_D", ")", ":", "\n", "            ", "sequence", "=", "[", "]", "\n", "crop_size_bkp", "=", "opt", ".", "crop_size", "\n", "feat_size", "=", "opt", ".", "crop_size", "\n", "for", "j", "in", "range", "(", "i", ")", ":", "\n", "                ", "sequence", "+=", "[", "nn", ".", "AvgPool2D", "(", "3", ",", "2", ",", "1", ")", "]", "\n", "feat_size", "=", "np", ".", "floor", "(", "(", "feat_size", "+", "1", "*", "2", "-", "(", "3", "-", "2", ")", ")", "/", "2", ")", ".", "astype", "(", "'int64'", ")", "\n", "", "opt", ".", "crop_size", "=", "feat_size", "\n", "sequence", "+=", "[", "NLayersDiscriminator", "(", "opt", ")", "]", "\n", "opt", ".", "crop_size", "=", "crop_size_bkp", "\n", "sequence", "=", "nn", ".", "Sequential", "(", "*", "sequence", ")", "\n", "self", ".", "add_sublayer", "(", "'nld_'", "+", "str", "(", "i", ")", ",", "sequence", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_photopen.MultiscaleDiscriminator.forward": [[125, 130], ["discriminator_photopen.MultiscaleDiscriminator._sub_layers.values", "output.append", "layer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "output", "=", "[", "]", "\n", "for", "layer", "in", "self", ".", "_sub_layers", ".", "values", "(", ")", ":", "\n", "            ", "output", ".", "append", "(", "layer", "(", "input", ")", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_ugatit.UGATITDiscriminator.__init__": [[13, 75], ["paddle.Layer.__init__", "range", "modules.utils.spectral_norm", "modules.utils.spectral_norm", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.Pad2D", "paddle.Pad2D", "paddle.Pad2D", "modules.utils.spectral_norm", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Pad2D", "paddle.Pad2D", "paddle.Pad2D", "modules.utils.spectral_norm", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.Pad2D", "paddle.Pad2D", "paddle.Pad2D", "modules.utils.spectral_norm", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Pad2D", "paddle.Pad2D", "paddle.Pad2D", "modules.utils.spectral_norm", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.spectral_norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.spectral_norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.spectral_norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.spectral_norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.spectral_norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.spectral_norm"], ["    ", "def", "__init__", "(", "self", ",", "input_nc", ",", "ndf", "=", "64", ",", "n_layers", "=", "5", ")", ":", "\n", "        ", "super", "(", "UGATITDiscriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "model", "=", "[", "\n", "nn", ".", "Pad2D", "(", "padding", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "\"reflect\"", ")", ",", "\n", "spectral_norm", "(", "\n", "nn", ".", "Conv2D", "(", "input_nc", ",", "\n", "ndf", ",", "\n", "kernel_size", "=", "4", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "True", ")", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", "\n", "]", "\n", "\n", "for", "i", "in", "range", "(", "1", ",", "n_layers", "-", "2", ")", ":", "\n", "            ", "mult", "=", "2", "**", "(", "i", "-", "1", ")", "\n", "model", "+=", "[", "\n", "nn", ".", "Pad2D", "(", "padding", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "\"reflect\"", ")", ",", "\n", "spectral_norm", "(", "\n", "nn", ".", "Conv2D", "(", "ndf", "*", "mult", ",", "\n", "ndf", "*", "mult", "*", "2", ",", "\n", "kernel_size", "=", "4", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "True", ")", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", "\n", "]", "\n", "\n", "", "mult", "=", "2", "**", "(", "n_layers", "-", "2", "-", "1", ")", "\n", "model", "+=", "[", "\n", "nn", ".", "Pad2D", "(", "padding", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "\"reflect\"", ")", ",", "\n", "spectral_norm", "(", "\n", "nn", ".", "Conv2D", "(", "ndf", "*", "mult", ",", "\n", "ndf", "*", "mult", "*", "2", ",", "\n", "kernel_size", "=", "4", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "True", ")", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", "\n", "]", "\n", "\n", "# Class Activation Map", "\n", "mult", "=", "2", "**", "(", "n_layers", "-", "2", ")", "\n", "self", ".", "gap_fc", "=", "spectral_norm", "(", "nn", ".", "Linear", "(", "ndf", "*", "mult", ",", "1", ",", "bias_attr", "=", "False", ")", ")", "\n", "self", ".", "gmp_fc", "=", "spectral_norm", "(", "nn", ".", "Linear", "(", "ndf", "*", "mult", ",", "1", ",", "bias_attr", "=", "False", ")", ")", "\n", "self", ".", "conv1x1", "=", "nn", ".", "Conv2D", "(", "ndf", "*", "mult", "*", "2", ",", "\n", "ndf", "*", "mult", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "bias_attr", "=", "True", ")", "\n", "self", ".", "leaky_relu", "=", "nn", ".", "LeakyReLU", "(", "0.2", ")", "\n", "\n", "self", ".", "pad", "=", "nn", ".", "Pad2D", "(", "padding", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "\"reflect\"", ")", "\n", "self", ".", "conv", "=", "spectral_norm", "(", "\n", "nn", ".", "Conv2D", "(", "ndf", "*", "mult", ",", "\n", "1", ",", "\n", "kernel_size", "=", "4", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_ugatit.UGATITDiscriminator.forward": [[76, 99], ["discriminator_ugatit.UGATITDiscriminator.model", "paddle.adaptive_avg_pool2d", "paddle.adaptive_avg_pool2d", "paddle.adaptive_avg_pool2d", "discriminator_ugatit.UGATITDiscriminator.gap_fc", "[].transpose", "paddle.adaptive_max_pool2d", "paddle.adaptive_max_pool2d", "paddle.adaptive_max_pool2d", "discriminator_ugatit.UGATITDiscriminator.gmp_fc", "[].transpose", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "discriminator_ugatit.UGATITDiscriminator.leaky_relu", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "discriminator_ugatit.UGATITDiscriminator.pad", "discriminator_ugatit.UGATITDiscriminator.conv", "paddle.adaptive_avg_pool2d.reshape", "[].transpose.unsqueeze().unsqueeze", "paddle.adaptive_max_pool2d.reshape", "[].transpose.unsqueeze().unsqueeze", "discriminator_ugatit.UGATITDiscriminator.conv1x1", "list", "[].transpose.unsqueeze", "list", "[].transpose.unsqueeze", "discriminator_ugatit.UGATITDiscriminator.gap_fc.parameters", "discriminator_ugatit.UGATITDiscriminator.gmp_fc.parameters"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "x", "=", "self", ".", "model", "(", "input", ")", "\n", "\n", "gap", "=", "F", ".", "adaptive_avg_pool2d", "(", "x", ",", "1", ")", "\n", "gap_logit", "=", "self", ".", "gap_fc", "(", "gap", ".", "reshape", "(", "[", "x", ".", "shape", "[", "0", "]", ",", "-", "1", "]", ")", ")", "\n", "gap_weight", "=", "list", "(", "self", ".", "gap_fc", ".", "parameters", "(", ")", ")", "[", "0", "]", ".", "transpose", "(", "[", "1", ",", "0", "]", ")", "\n", "gap", "=", "x", "*", "gap_weight", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "\n", "gmp", "=", "F", ".", "adaptive_max_pool2d", "(", "x", ",", "1", ")", "\n", "gmp_logit", "=", "self", ".", "gmp_fc", "(", "gmp", ".", "reshape", "(", "[", "x", ".", "shape", "[", "0", "]", ",", "-", "1", "]", ")", ")", "\n", "gmp_weight", "=", "list", "(", "self", ".", "gmp_fc", ".", "parameters", "(", ")", ")", "[", "0", "]", ".", "transpose", "(", "[", "1", ",", "0", "]", ")", "\n", "gmp", "=", "x", "*", "gmp_weight", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "\n", "cam_logit", "=", "paddle", ".", "concat", "(", "[", "gap_logit", ",", "gmp_logit", "]", ",", "1", ")", "\n", "x", "=", "paddle", ".", "concat", "(", "[", "gap", ",", "gmp", "]", ",", "1", ")", "\n", "x", "=", "self", ".", "leaky_relu", "(", "self", ".", "conv1x1", "(", "x", ")", ")", "\n", "\n", "heatmap", "=", "paddle", ".", "sum", "(", "x", ",", "1", ",", "keepdim", "=", "True", ")", "\n", "\n", "x", "=", "self", ".", "pad", "(", "x", ")", "\n", "out", "=", "self", ".", "conv", "(", "x", ")", "\n", "\n", "return", "out", ",", "cam_logit", ",", "heatmap", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.wav2lip_disc_qual.Wav2LipDiscQual.__init__": [[15, 52], ["paddle.nn.Layer.__init__", "paddle.nn.LayerList", "paddle.nn.Sequential", "paddle.nn.Conv2D", "paddle.nn.Sigmoid", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "modules.conv.NonNormConv2d", "modules.conv.NonNormConv2d", "modules.conv.NonNormConv2d", "modules.conv.NonNormConv2d", "modules.conv.NonNormConv2d", "modules.conv.NonNormConv2d", "modules.conv.NonNormConv2d", "modules.conv.NonNormConv2d", "modules.conv.NonNormConv2d", "modules.conv.NonNormConv2d", "modules.conv.NonNormConv2d", "modules.conv.NonNormConv2d", "modules.conv.NonNormConv2d"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Wav2LipDiscQual", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "face_encoder_blocks", "=", "nn", ".", "LayerList", "(", "[", "\n", "nn", ".", "Sequential", "(", "\n", "NonNormConv2d", "(", "3", ",", "32", ",", "kernel_size", "=", "7", ",", "stride", "=", "1", ",", "\n", "padding", "=", "3", ")", ")", ",", "# 48,96", "\n", "nn", ".", "Sequential", "(", "\n", "NonNormConv2d", "(", "32", ",", "64", ",", "kernel_size", "=", "5", ",", "stride", "=", "(", "1", ",", "2", ")", ",", "\n", "padding", "=", "2", ")", ",", "# 48,48", "\n", "NonNormConv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", ")", ",", "\n", "nn", ".", "Sequential", "(", "\n", "NonNormConv2d", "(", "64", ",", "128", ",", "kernel_size", "=", "5", ",", "stride", "=", "2", ",", "\n", "padding", "=", "2", ")", ",", "# 24,24", "\n", "NonNormConv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", ")", ",", "\n", "nn", ".", "Sequential", "(", "\n", "NonNormConv2d", "(", "128", ",", "256", ",", "kernel_size", "=", "5", ",", "stride", "=", "2", ",", "\n", "padding", "=", "2", ")", ",", "# 12,12", "\n", "NonNormConv2d", "(", "256", ",", "256", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", ")", ",", "\n", "nn", ".", "Sequential", "(", "\n", "NonNormConv2d", "(", "256", ",", "512", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "\n", "padding", "=", "1", ")", ",", "# 6,6", "\n", "NonNormConv2d", "(", "512", ",", "512", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ")", ",", "\n", "nn", ".", "Sequential", "(", "\n", "NonNormConv2d", "(", "512", ",", "512", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "\n", "padding", "=", "1", ")", ",", "# 3,3", "\n", "NonNormConv2d", "(", "512", ",", "512", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", ")", ",", "\n", "nn", ".", "Sequential", "(", "\n", "NonNormConv2d", "(", "512", ",", "512", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "\n", "padding", "=", "0", ")", ",", "# 1, 1", "\n", "NonNormConv2d", "(", "512", ",", "512", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ")", ",", "\n", "]", ")", "\n", "\n", "self", ".", "binary_pred", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "512", ",", "1", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "self", ".", "label_noise", "=", ".0", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.wav2lip_disc_qual.Wav2LipDiscQual.get_lower_half": [[53, 55], ["None"], "methods", ["None"], ["", "def", "get_lower_half", "(", "self", ",", "face_sequences", ")", ":", "\n", "        ", "return", "face_sequences", "[", ":", ",", ":", ",", "face_sequences", ".", "shape", "[", "2", "]", "//", "2", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.wav2lip_disc_qual.Wav2LipDiscQual.to_2d": [[56, 62], ["paddle.concat", "range"], "methods", ["None"], ["", "def", "to_2d", "(", "self", ",", "face_sequences", ")", ":", "\n", "        ", "B", "=", "face_sequences", ".", "shape", "[", "0", "]", "\n", "face_sequences", "=", "paddle", ".", "concat", "(", "\n", "[", "face_sequences", "[", ":", ",", ":", ",", "i", "]", "for", "i", "in", "range", "(", "face_sequences", ".", "shape", "[", "2", "]", ")", "]", ",", "\n", "axis", "=", "0", ")", "\n", "return", "face_sequences", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.wav2lip_disc_qual.Wav2LipDiscQual.perceptual_forward": [[63, 78], ["wav2lip_disc_qual.Wav2LipDiscQual.to_2d", "wav2lip_disc_qual.Wav2LipDiscQual.get_lower_half", "wav2lip_disc_qual.Wav2LipDiscQual.binary_pred().reshape", "paddle.nn.functional.binary_cross_entropy", "f", "paddle.ones", "wav2lip_disc_qual.Wav2LipDiscQual.binary_pred", "len", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.wav2lip_disc_qual.Wav2LipDiscQual.to_2d", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.wav2lip_disc_qual.Wav2LipDiscQual.get_lower_half"], ["", "def", "perceptual_forward", "(", "self", ",", "false_face_sequences", ")", ":", "\n", "        ", "false_face_sequences", "=", "self", ".", "to_2d", "(", "false_face_sequences", ")", "\n", "false_face_sequences", "=", "self", ".", "get_lower_half", "(", "false_face_sequences", ")", "\n", "\n", "false_feats", "=", "false_face_sequences", "\n", "for", "f", "in", "self", ".", "face_encoder_blocks", ":", "\n", "            ", "false_feats", "=", "f", "(", "false_feats", ")", "\n", "\n", "", "binary_pred", "=", "self", ".", "binary_pred", "(", "false_feats", ")", ".", "reshape", "(", "\n", "(", "len", "(", "false_feats", ")", ",", "-", "1", ")", ")", "\n", "\n", "false_pred_loss", "=", "F", ".", "binary_cross_entropy", "(", "\n", "binary_pred", ",", "paddle", ".", "ones", "(", "(", "len", "(", "false_feats", ")", ",", "1", ")", ")", ")", "\n", "\n", "return", "false_pred_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.wav2lip_disc_qual.Wav2LipDiscQual.forward": [[79, 88], ["wav2lip_disc_qual.Wav2LipDiscQual.to_2d", "wav2lip_disc_qual.Wav2LipDiscQual.get_lower_half", "paddle.reshape", "f", "wav2lip_disc_qual.Wav2LipDiscQual.binary_pred", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.wav2lip_disc_qual.Wav2LipDiscQual.to_2d", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.wav2lip_disc_qual.Wav2LipDiscQual.get_lower_half"], ["", "def", "forward", "(", "self", ",", "face_sequences", ")", ":", "\n", "        ", "face_sequences", "=", "self", ".", "to_2d", "(", "face_sequences", ")", "\n", "face_sequences", "=", "self", ".", "get_lower_half", "(", "face_sequences", ")", "\n", "\n", "x", "=", "face_sequences", "\n", "for", "f", "in", "self", ".", "face_encoder_blocks", ":", "\n", "            ", "x", "=", "f", "(", "x", ")", "\n", "\n", "", "return", "paddle", ".", "reshape", "(", "self", ".", "binary_pred", "(", "x", ")", ",", "(", "len", "(", "x", ")", ",", "-", "1", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_singan.SinGANDiscriminator.__init__": [[11, 26], ["paddle.Layer.__init__", "generators.generator_singan.ConvBlock", "paddle.Sequential", "range", "paddle.Conv2D", "int", "generators.generator_singan.ConvBlock", "discriminator_singan.SinGANDiscriminator.body.add_sublayer", "max", "max", "max", "pow"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "nfc", "=", "32", ",", "\n", "min_nfc", "=", "32", ",", "\n", "input_nc", "=", "3", ",", "\n", "num_layers", "=", "5", ",", "\n", "ker_size", "=", "3", ",", "\n", "padd_size", "=", "0", ")", ":", "\n", "        ", "super", "(", "SinGANDiscriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "head", "=", "ConvBlock", "(", "input_nc", ",", "nfc", ",", "ker_size", ",", "padd_size", ",", "1", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", ")", "\n", "for", "i", "in", "range", "(", "num_layers", "-", "2", ")", ":", "\n", "            ", "N", "=", "int", "(", "nfc", "/", "pow", "(", "2", ",", "(", "i", "+", "1", ")", ")", ")", "\n", "block", "=", "ConvBlock", "(", "max", "(", "2", "*", "N", ",", "min_nfc", ")", ",", "max", "(", "N", ",", "min_nfc", ")", ",", "ker_size", ",", "padd_size", ",", "1", ")", "\n", "self", ".", "body", ".", "add_sublayer", "(", "'block%d'", "%", "(", "i", "+", "1", ")", ",", "block", ")", "\n", "", "self", ".", "tail", "=", "nn", ".", "Conv2D", "(", "max", "(", "N", ",", "min_nfc", ")", ",", "1", ",", "ker_size", ",", "1", ",", "padd_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_singan.SinGANDiscriminator.forward": [[27, 32], ["discriminator_singan.SinGANDiscriminator.head", "discriminator_singan.SinGANDiscriminator.body", "discriminator_singan.SinGANDiscriminator.tail"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "x", "=", "self", ".", "body", "(", "x", ")", "\n", "x", "=", "self", ".", "tail", "(", "x", ")", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_animegan.AnimeDiscriminator.__init__": [[14, 63], ["paddle.Layer.__init__", "range", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "modules.utils.spectral_norm", "paddle.LeakyReLU", "paddle.LeakyReLU", "f.extend", "paddle.Conv2D", "paddle.Conv2D", "modules.utils.spectral_norm", "paddle.LeakyReLU", "paddle.LeakyReLU", "modules.utils.spectral_norm", "paddle.GroupNorm", "paddle.GroupNorm", "paddle.LeakyReLU", "paddle.LeakyReLU", "modules.utils.spectral_norm", "paddle.GroupNorm", "paddle.GroupNorm", "paddle.LeakyReLU", "paddle.LeakyReLU", "modules.utils.spectral_norm", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.spectral_norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.extend", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.spectral_norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.spectral_norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.spectral_norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.spectral_norm"], ["    ", "def", "__init__", "(", "self", ",", "channel", ":", "int", "=", "64", ",", "nblocks", ":", "int", "=", "3", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "channel", "=", "channel", "//", "2", "\n", "last_channel", "=", "channel", "\n", "f", "=", "[", "\n", "spectral_norm", "(", "\n", "nn", ".", "Conv2D", "(", "3", ",", "channel", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias_attr", "=", "False", ")", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", "\n", "]", "\n", "in_h", "=", "256", "\n", "for", "i", "in", "range", "(", "1", ",", "nblocks", ")", ":", "\n", "            ", "f", ".", "extend", "(", "[", "\n", "spectral_norm", "(", "\n", "nn", ".", "Conv2D", "(", "last_channel", ",", "\n", "channel", "*", "2", ",", "\n", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "spectral_norm", "(", "\n", "nn", ".", "Conv2D", "(", "channel", "*", "2", ",", "\n", "channel", "*", "4", ",", "\n", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ")", ",", "\n", "nn", ".", "GroupNorm", "(", "1", ",", "channel", "*", "4", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", "\n", "]", ")", "\n", "last_channel", "=", "channel", "*", "4", "\n", "channel", "=", "channel", "*", "2", "\n", "in_h", "=", "in_h", "//", "2", "\n", "\n", "", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "f", ")", "\n", "\n", "self", ".", "head", "=", "nn", ".", "Sequential", "(", "*", "[", "\n", "spectral_norm", "(", "\n", "nn", ".", "Conv2D", "(", "last_channel", ",", "\n", "channel", "*", "2", ",", "\n", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ")", ",", "\n", "nn", ".", "GroupNorm", "(", "1", ",", "channel", "*", "2", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "spectral_norm", "(", "\n", "nn", ".", "Conv2D", "(", "\n", "channel", "*", "2", ",", "1", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias_attr", "=", "False", ")", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_animegan.AnimeDiscriminator.forward": [[65, 69], ["discriminator_animegan.AnimeDiscriminator.body", "discriminator_animegan.AnimeDiscriminator.head"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "body", "(", "x", ")", "\n", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.nlayers.NLayerDiscriminator.__init__": [[34, 148], ["paddle.Layer.__init__", "modules.norm.build_norm_layer", "range", "min", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "type", "min", "modules.nn.Spectralnorm", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "modules.nn.Spectralnorm", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "modules.norm.build_norm_layer.", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "modules.nn.Spectralnorm", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "modules.nn.Spectralnorm", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "modules.norm.build_norm_layer.", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.norm.build_norm_layer"], ["def", "__init__", "(", "self", ",", "input_nc", ",", "ndf", "=", "64", ",", "n_layers", "=", "3", ",", "norm_type", "=", "'instance'", ",", "use_sigmoid", "=", "False", ")", ":", "\n", "        ", "\"\"\"Construct a PatchGAN discriminator\n\n        Parameters:\n            input_nc (int)  -- the number of channels in input images\n            ndf (int)       -- the number of filters in the last conv layer\n            n_layers (int)  -- the number of conv layers in the discriminator\n            norm_type (str)      -- normalization layer type\n            use_sigmoid (bool)   -- whether use sigmoid at last\n        \"\"\"", "\n", "super", "(", "NLayerDiscriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "norm_layer", "=", "build_norm_layer", "(", "norm_type", ")", "\n", "if", "type", "(", "\n", "norm_layer", "\n", ")", "==", "functools", ".", "partial", ":", "# no need to use bias as BatchNorm2d has affine parameters", "\n", "            ", "use_bias", "=", "norm_layer", ".", "func", "==", "nn", ".", "InstanceNorm2D", "\n", "", "else", ":", "\n", "            ", "use_bias", "=", "norm_layer", "==", "nn", ".", "InstanceNorm2D", "\n", "\n", "", "kw", "=", "4", "\n", "padw", "=", "1", "\n", "\n", "if", "norm_type", "==", "'spectral'", ":", "\n", "            ", "sequence", "=", "[", "\n", "Spectralnorm", "(", "\n", "nn", ".", "Conv2D", "(", "input_nc", ",", "\n", "ndf", ",", "\n", "kernel_size", "=", "kw", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "padw", ")", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.01", ")", "\n", "]", "\n", "", "else", ":", "\n", "            ", "sequence", "=", "[", "\n", "nn", ".", "Conv2D", "(", "input_nc", ",", "\n", "ndf", ",", "\n", "kernel_size", "=", "kw", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "padw", ",", "\n", "bias_attr", "=", "use_bias", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", "\n", "]", "\n", "", "nf_mult", "=", "1", "\n", "nf_mult_prev", "=", "1", "\n", "for", "n", "in", "range", "(", "1", ",", "n_layers", ")", ":", "# gradually increase the number of filters", "\n", "            ", "nf_mult_prev", "=", "nf_mult", "\n", "nf_mult", "=", "min", "(", "2", "**", "n", ",", "8", ")", "\n", "if", "norm_type", "==", "'spectral'", ":", "\n", "                ", "sequence", "+=", "[", "\n", "Spectralnorm", "(", "\n", "nn", ".", "Conv2D", "(", "ndf", "*", "nf_mult_prev", ",", "\n", "ndf", "*", "nf_mult", ",", "\n", "kernel_size", "=", "kw", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "padw", ")", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.01", ")", "\n", "]", "\n", "", "else", ":", "\n", "                ", "sequence", "+=", "[", "\n", "nn", ".", "Conv2D", "(", "ndf", "*", "nf_mult_prev", ",", "\n", "ndf", "*", "nf_mult", ",", "\n", "kernel_size", "=", "kw", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "padw", ",", "\n", "bias_attr", "=", "use_bias", ")", ",", "\n", "norm_layer", "(", "ndf", "*", "nf_mult", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", "\n", "]", "\n", "\n", "", "", "nf_mult_prev", "=", "nf_mult", "\n", "nf_mult", "=", "min", "(", "2", "**", "n_layers", ",", "8", ")", "\n", "if", "norm_type", "==", "'spectral'", ":", "\n", "            ", "sequence", "+=", "[", "\n", "Spectralnorm", "(", "\n", "nn", ".", "Conv2D", "(", "ndf", "*", "nf_mult_prev", ",", "\n", "ndf", "*", "nf_mult", ",", "\n", "kernel_size", "=", "kw", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "padw", ")", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.01", ")", "\n", "]", "\n", "", "else", ":", "\n", "            ", "sequence", "+=", "[", "\n", "nn", ".", "Conv2D", "(", "ndf", "*", "nf_mult_prev", ",", "\n", "ndf", "*", "nf_mult", ",", "\n", "kernel_size", "=", "kw", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "padw", ",", "\n", "bias_attr", "=", "use_bias", ")", ",", "\n", "norm_layer", "(", "ndf", "*", "nf_mult", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", "\n", "]", "\n", "\n", "", "if", "norm_type", "==", "'spectral'", ":", "\n", "            ", "sequence", "+=", "[", "\n", "Spectralnorm", "(", "\n", "nn", ".", "Conv2D", "(", "ndf", "*", "nf_mult", ",", "\n", "1", ",", "\n", "kernel_size", "=", "kw", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "padw", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "]", "# output 1 channel prediction map", "\n", "", "else", ":", "\n", "            ", "sequence", "+=", "[", "\n", "nn", ".", "Conv2D", "(", "ndf", "*", "nf_mult", ",", "\n", "1", ",", "\n", "kernel_size", "=", "kw", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "padw", ")", "\n", "]", "# output 1 channel prediction map", "\n", "\n", "", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "sequence", ")", "\n", "self", ".", "final_act", "=", "F", ".", "sigmoid", "if", "use_sigmoid", "else", "(", "lambda", "x", ":", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.nlayers.NLayerDiscriminator.forward": [[149, 152], ["nlayers.NLayerDiscriminator.final_act", "nlayers.NLayerDiscriminator.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "\"\"\"Standard forward.\"\"\"", "\n", "return", "self", ".", "final_act", "(", "self", ".", "model", "(", "input", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.nlayers.NLayerDiscriminatorWithClassification.__init__": [[156, 161], ["nlayers.NLayerDiscriminator.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_nc", ",", "n_class", "=", "10", ",", "**", "kwargs", ")", ":", "\n", "        ", "input_nc", "=", "input_nc", "+", "n_class", "\n", "super", "(", "NLayerDiscriminatorWithClassification", ",", "self", ")", ".", "__init__", "(", "input_nc", ",", "**", "kwargs", ")", "\n", "\n", "self", ".", "n_class", "=", "n_class", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.nlayers.NLayerDiscriminatorWithClassification.forward": [[162, 171], ["nlayers.NLayerDiscriminator.forward", "paddle.one_hot().astype", "paddle.one_hot().astype", "paddle.one_hot().astype", "class_id.tile.tile.reshape", "class_id.tile.tile.tile", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.one_hot", "paddle.one_hot", "paddle.one_hot"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.vgg16.forward"], ["", "def", "forward", "(", "self", ",", "x", ",", "class_id", ")", ":", "\n", "        ", "if", "self", ".", "n_class", ">", "0", ":", "\n", "            ", "class_id", "=", "(", "class_id", "%", "self", ".", "n_class", ")", ".", "detach", "(", ")", "\n", "class_id", "=", "F", ".", "one_hot", "(", "class_id", ",", "self", ".", "n_class", ")", ".", "astype", "(", "'float32'", ")", "\n", "class_id", "=", "class_id", ".", "reshape", "(", "[", "x", ".", "shape", "[", "0", "]", ",", "-", "1", ",", "1", ",", "1", "]", ")", "\n", "class_id", "=", "class_id", ".", "tile", "(", "[", "1", ",", "1", ",", "*", "x", ".", "shape", "[", "2", ":", "]", "]", ")", "\n", "x", "=", "paddle", ".", "concat", "(", "[", "x", ",", "class_id", "]", ",", "1", ")", "\n", "\n", "", "return", "super", "(", "NLayerDiscriminatorWithClassification", ",", "self", ")", ".", "forward", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.builder.build_discriminator": [[21, 26], ["copy.deepcopy", "copy.deepcopy.pop", "DISCRIMINATORS.get"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get"], ["from", "paddle", ".", "io", "import", "DistributedBatchSampler", "\n", "\n", "from", ".", "repeat_dataset", "import", "RepeatDataset", "\n", "from", ".", ".", "utils", ".", "registry", "import", "Registry", ",", "build_from_config", "\n", "\n", "DATASETS", "=", "Registry", "(", "\"DATASETS\"", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.ConvLayer.__init__": [[32, 73], ["layers.append", "paddle.Sequential.__init__", "layers.append", "modules.equalized.EqualConv2D", "layers.append", "modules.upfirdn2d.Upfirdn2dBlur", "modules.fused_act.FusedLeakyReLU", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "in_channel", ",", "\n", "out_channel", ",", "\n", "kernel_size", ",", "\n", "downsample", "=", "False", ",", "\n", "blur_kernel", "=", "[", "1", ",", "3", ",", "3", ",", "1", "]", ",", "\n", "bias", "=", "True", ",", "\n", "activate", "=", "True", ",", "\n", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "\n", "if", "downsample", ":", "\n", "            ", "factor", "=", "2", "\n", "p", "=", "(", "len", "(", "blur_kernel", ")", "-", "factor", ")", "+", "(", "kernel_size", "-", "1", ")", "\n", "pad0", "=", "(", "p", "+", "1", ")", "//", "2", "\n", "pad1", "=", "p", "//", "2", "\n", "\n", "layers", ".", "append", "(", "Upfirdn2dBlur", "(", "blur_kernel", ",", "pad", "=", "(", "pad0", ",", "pad1", ")", ")", ")", "\n", "\n", "stride", "=", "2", "\n", "self", ".", "padding", "=", "0", "\n", "\n", "", "else", ":", "\n", "            ", "stride", "=", "1", "\n", "self", ".", "padding", "=", "kernel_size", "//", "2", "\n", "\n", "", "layers", ".", "append", "(", "\n", "EqualConv2D", "(", "\n", "in_channel", ",", "\n", "out_channel", ",", "\n", "kernel_size", ",", "\n", "padding", "=", "self", ".", "padding", ",", "\n", "stride", "=", "stride", ",", "\n", "bias", "=", "bias", "and", "not", "activate", ",", "\n", ")", ")", "\n", "\n", "if", "activate", ":", "\n", "            ", "layers", ".", "append", "(", "FusedLeakyReLU", "(", "out_channel", ",", "bias", "=", "bias", ")", ")", "\n", "\n", "", "super", "(", ")", ".", "__init__", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.ResBlock.__init__": [[77, 89], ["paddle.Layer.__init__", "discriminator_styleganv2.ConvLayer", "discriminator_styleganv2.ConvLayer", "discriminator_styleganv2.ConvLayer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "out_channel", ",", "blur_kernel", "=", "[", "1", ",", "3", ",", "3", ",", "1", "]", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "ConvLayer", "(", "in_channel", ",", "in_channel", ",", "3", ")", "\n", "self", ".", "conv2", "=", "ConvLayer", "(", "in_channel", ",", "out_channel", ",", "3", ",", "downsample", "=", "True", ")", "\n", "\n", "self", ".", "skip", "=", "ConvLayer", "(", "in_channel", ",", "\n", "out_channel", ",", "\n", "1", ",", "\n", "downsample", "=", "True", ",", "\n", "activate", "=", "False", ",", "\n", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.ResBlock.forward": [[90, 98], ["discriminator_styleganv2.ResBlock.conv1", "discriminator_styleganv2.ResBlock.conv2", "discriminator_styleganv2.ResBlock.skip", "math.sqrt"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "input", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "\n", "skip", "=", "self", ".", "skip", "(", "input", ")", "\n", "out", "=", "(", "out", "+", "skip", ")", "/", "math", ".", "sqrt", "(", "2", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.StyleGANv2Discriminator.__init__": [[118, 157], ["paddle.Layer.__init__", "int", "range", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "discriminator_styleganv2.ConvLayer", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "discriminator_styleganv2.ConvLayer", "math.log", "convs.append", "modules.equalized.EqualLinear", "modules.equalized.EqualLinear", "discriminator_styleganv2.ResBlock"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["    ", "def", "__init__", "(", "self", ",", "size", ",", "channel_multiplier", "=", "2", ",", "blur_kernel", "=", "[", "1", ",", "3", ",", "3", ",", "1", "]", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "channels", "=", "{", "\n", "4", ":", "512", ",", "\n", "8", ":", "512", ",", "\n", "16", ":", "512", ",", "\n", "32", ":", "512", ",", "\n", "64", ":", "256", "*", "channel_multiplier", ",", "\n", "128", ":", "128", "*", "channel_multiplier", ",", "\n", "256", ":", "64", "*", "channel_multiplier", ",", "\n", "512", ":", "32", "*", "channel_multiplier", ",", "\n", "1024", ":", "16", "*", "channel_multiplier", ",", "\n", "}", "\n", "\n", "convs", "=", "[", "ConvLayer", "(", "3", ",", "channels", "[", "size", "]", ",", "1", ")", "]", "\n", "\n", "log_size", "=", "int", "(", "math", ".", "log", "(", "size", ",", "2", ")", ")", "\n", "\n", "in_channel", "=", "channels", "[", "size", "]", "\n", "\n", "for", "i", "in", "range", "(", "log_size", ",", "2", ",", "-", "1", ")", ":", "\n", "            ", "out_channel", "=", "channels", "[", "2", "**", "(", "i", "-", "1", ")", "]", "\n", "\n", "convs", ".", "append", "(", "ResBlock", "(", "in_channel", ",", "out_channel", ",", "blur_kernel", ")", ")", "\n", "\n", "in_channel", "=", "out_channel", "\n", "\n", "", "self", ".", "convs", "=", "nn", ".", "Sequential", "(", "*", "convs", ")", "\n", "\n", "self", ".", "stddev_group", "=", "4", "\n", "self", ".", "stddev_feat", "=", "1", "\n", "\n", "self", ".", "final_conv", "=", "ConvLayer", "(", "in_channel", "+", "1", ",", "channels", "[", "4", "]", ",", "3", ")", "\n", "self", ".", "final_linear", "=", "nn", ".", "Sequential", "(", "\n", "EqualLinear", "(", "channels", "[", "4", "]", "*", "4", "*", "4", ",", "\n", "channels", "[", "4", "]", ",", "\n", "activation", "=", "\"fused_lrelu\"", ")", ",", "\n", "EqualLinear", "(", "channels", "[", "4", "]", ",", "1", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.StyleGANv2Discriminator.forward": [[159, 177], ["discriminator_styleganv2.StyleGANv2Discriminator.convs", "min", "discriminator_styleganv2.StyleGANv2Discriminator.reshape", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "stddev.tile.tile.mean().squeeze", "stddev.tile.tile.tile", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "discriminator_styleganv2.StyleGANv2Discriminator.final_conv", "discriminator_styleganv2.StyleGANv2Discriminator.reshape", "discriminator_styleganv2.StyleGANv2Discriminator.final_linear", "discriminator_styleganv2.var", "stddev.tile.tile.mean"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "out", "=", "self", ".", "convs", "(", "input", ")", "\n", "\n", "batch", ",", "channel", ",", "height", ",", "width", "=", "out", ".", "shape", "\n", "group", "=", "min", "(", "batch", ",", "self", ".", "stddev_group", ")", "\n", "stddev", "=", "out", ".", "reshape", "(", "(", "group", ",", "-", "1", ",", "self", ".", "stddev_feat", ",", "\n", "channel", "//", "self", ".", "stddev_feat", ",", "height", ",", "width", ")", ")", "\n", "stddev", "=", "paddle", ".", "sqrt", "(", "var", "(", "stddev", ",", "0", ",", "unbiased", "=", "False", ")", "+", "1e-8", ")", "\n", "stddev", "=", "stddev", ".", "mean", "(", "[", "2", ",", "3", ",", "4", "]", ",", "keepdim", "=", "True", ")", ".", "squeeze", "(", "2", ")", "\n", "stddev", "=", "stddev", ".", "tile", "(", "(", "group", ",", "1", ",", "height", ",", "width", ")", ")", "\n", "out", "=", "paddle", ".", "concat", "(", "[", "out", ",", "stddev", "]", ",", "1", ")", "\n", "\n", "out", "=", "self", ".", "final_conv", "(", "out", ")", "\n", "\n", "out", "=", "out", ".", "reshape", "(", "(", "batch", ",", "-", "1", ")", ")", "\n", "out", "=", "self", ".", "final_linear", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.GPENDiscriminator.__init__": [[182, 225], ["paddle.Layer.__init__", "int", "range", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "discriminator_styleganv2.ConvLayer", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "int", "int", "int", "int", "int", "int", "int", "int", "int", "discriminator_styleganv2.ConvLayer", "math.log", "convs.append", "modules.equalized.EqualLinear", "modules.equalized.EqualLinear", "discriminator_styleganv2.ResBlock"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["    ", "def", "__init__", "(", "self", ",", "\n", "size", ",", "\n", "channel_multiplier", "=", "1", ",", "\n", "narrow", "=", "0.5", ",", "\n", "blur_kernel", "=", "[", "1", ",", "3", ",", "3", ",", "1", "]", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "channels", "=", "{", "\n", "4", ":", "int", "(", "512", "*", "narrow", ")", ",", "\n", "8", ":", "int", "(", "512", "*", "narrow", ")", ",", "\n", "16", ":", "int", "(", "512", "*", "narrow", ")", ",", "\n", "32", ":", "int", "(", "512", "*", "narrow", ")", ",", "\n", "64", ":", "int", "(", "256", "*", "channel_multiplier", "*", "narrow", ")", ",", "\n", "128", ":", "int", "(", "128", "*", "channel_multiplier", "*", "narrow", ")", ",", "\n", "256", ":", "int", "(", "64", "*", "channel_multiplier", "*", "narrow", ")", ",", "\n", "512", ":", "int", "(", "32", "*", "channel_multiplier", "*", "narrow", ")", ",", "\n", "1024", ":", "int", "(", "16", "*", "channel_multiplier", "*", "narrow", ")", ",", "\n", "}", "\n", "\n", "convs", "=", "[", "ConvLayer", "(", "3", ",", "channels", "[", "size", "]", ",", "1", ")", "]", "\n", "\n", "log_size", "=", "int", "(", "math", ".", "log", "(", "size", ",", "2", ")", ")", "\n", "\n", "in_channel", "=", "channels", "[", "size", "]", "\n", "\n", "for", "i", "in", "range", "(", "log_size", ",", "2", ",", "-", "1", ")", ":", "\n", "            ", "out_channel", "=", "channels", "[", "2", "**", "(", "i", "-", "1", ")", "]", "\n", "\n", "convs", ".", "append", "(", "ResBlock", "(", "in_channel", ",", "out_channel", ",", "blur_kernel", ")", ")", "\n", "\n", "in_channel", "=", "out_channel", "\n", "\n", "", "self", ".", "convs", "=", "nn", ".", "Sequential", "(", "*", "convs", ")", "\n", "\n", "self", ".", "stddev_group", "=", "4", "\n", "self", ".", "stddev_feat", "=", "1", "\n", "\n", "self", ".", "final_conv", "=", "ConvLayer", "(", "in_channel", "+", "1", ",", "channels", "[", "4", "]", ",", "3", ")", "\n", "self", ".", "final_linear", "=", "nn", ".", "Sequential", "(", "\n", "EqualLinear", "(", "channels", "[", "4", "]", "*", "4", "*", "4", ",", "\n", "channels", "[", "4", "]", ",", "\n", "activation", "=", "\"fused_lrelu\"", ")", ",", "\n", "EqualLinear", "(", "channels", "[", "4", "]", ",", "1", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.GPENDiscriminator.forward": [[227, 245], ["discriminator_styleganv2.GPENDiscriminator.convs", "min", "discriminator_styleganv2.GPENDiscriminator.reshape", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "stddev.tile.tile.mean().squeeze", "stddev.tile.tile.tile", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "discriminator_styleganv2.GPENDiscriminator.final_conv", "discriminator_styleganv2.GPENDiscriminator.reshape", "discriminator_styleganv2.GPENDiscriminator.final_linear", "discriminator_styleganv2.var", "stddev.tile.tile.mean"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "out", "=", "self", ".", "convs", "(", "input", ")", "\n", "\n", "batch", ",", "channel", ",", "height", ",", "width", "=", "out", ".", "shape", "\n", "group", "=", "min", "(", "batch", ",", "self", ".", "stddev_group", ")", "\n", "stddev", "=", "out", ".", "reshape", "(", "(", "group", ",", "-", "1", ",", "self", ".", "stddev_feat", ",", "\n", "channel", "//", "self", ".", "stddev_feat", ",", "height", ",", "width", ")", ")", "\n", "stddev", "=", "paddle", ".", "sqrt", "(", "var", "(", "stddev", ",", "0", ",", "unbiased", "=", "False", ")", "+", "1e-8", ")", "\n", "stddev", "=", "stddev", ".", "mean", "(", "[", "2", ",", "3", ",", "4", "]", ",", "keepdim", "=", "True", ")", ".", "squeeze", "(", "2", ")", "\n", "stddev", "=", "stddev", ".", "tile", "(", "(", "group", ",", "1", ",", "height", ",", "width", ")", ")", "\n", "out", "=", "paddle", ".", "concat", "(", "[", "out", ",", "stddev", "]", ",", "1", ")", "\n", "\n", "out", "=", "self", ".", "final_conv", "(", "out", ")", "\n", "\n", "out", "=", "out", ".", "reshape", "(", "(", "batch", ",", "-", "1", ")", ")", "\n", "out", "=", "self", ".", "final_linear", "(", "out", ")", "\n", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var": [[101, 113], ["paddle.mean", "paddle.mean", "paddle.mean", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.ones", "paddle.ones", "paddle.ones", "paddle.where", "paddle.where", "paddle.where", "paddle.numel", "paddle.numel", "paddle.numel", "paddle.numel", "paddle.numel", "paddle.numel"], "function", ["None"], ["", "", "def", "var", "(", "x", ",", "axis", "=", "None", ",", "unbiased", "=", "True", ",", "keepdim", "=", "False", ",", "name", "=", "None", ")", ":", "\n", "\n", "    ", "u", "=", "paddle", ".", "mean", "(", "x", ",", "axis", ",", "True", ",", "name", ")", "\n", "out", "=", "paddle", ".", "sum", "(", "(", "x", "-", "u", ")", "*", "(", "x", "-", "u", ")", ",", "axis", ",", "keepdim", "=", "keepdim", ",", "name", "=", "name", ")", "\n", "\n", "n", "=", "paddle", ".", "cast", "(", "paddle", ".", "numel", "(", "x", ")", ",", "x", ".", "dtype", ")", "/", "paddle", ".", "cast", "(", "paddle", ".", "numel", "(", "out", ")", ",", "x", ".", "dtype", ")", "\n", "if", "unbiased", ":", "\n", "        ", "one_const", "=", "paddle", ".", "ones", "(", "[", "1", "]", ",", "x", ".", "dtype", ")", "\n", "n", "=", "paddle", ".", "where", "(", "n", ">", "one_const", ",", "n", "-", "1.", ",", "one_const", ")", "\n", "", "out", "/=", "n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_starganv2.StarGANv2Discriminator.__init__": [[16, 33], ["paddle.Layer.__init__", "range", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "int", "min", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.Conv2D", "paddle.Conv2D", "numpy.log2", "generators.generator_starganv2.ResBlk"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "img_size", "=", "256", ",", "num_domains", "=", "2", ",", "max_conv_dim", "=", "512", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "dim_in", "=", "2", "**", "14", "//", "img_size", "\n", "blocks", "=", "[", "]", "\n", "blocks", "+=", "[", "nn", ".", "Conv2D", "(", "3", ",", "dim_in", ",", "3", ",", "1", ",", "1", ")", "]", "\n", "\n", "repeat_num", "=", "int", "(", "np", ".", "log2", "(", "img_size", ")", ")", "-", "2", "\n", "for", "_", "in", "range", "(", "repeat_num", ")", ":", "\n", "            ", "dim_out", "=", "min", "(", "dim_in", "*", "2", ",", "max_conv_dim", ")", "\n", "blocks", "+=", "[", "ResBlk", "(", "dim_in", ",", "dim_out", ",", "downsample", "=", "True", ")", "]", "\n", "dim_in", "=", "dim_out", "\n", "\n", "", "blocks", "+=", "[", "nn", ".", "LeakyReLU", "(", "0.2", ")", "]", "\n", "blocks", "+=", "[", "nn", ".", "Conv2D", "(", "dim_out", ",", "dim_out", ",", "4", ",", "1", ",", "0", ")", "]", "\n", "blocks", "+=", "[", "nn", ".", "LeakyReLU", "(", "0.2", ")", "]", "\n", "blocks", "+=", "[", "nn", ".", "Conv2D", "(", "dim_out", ",", "num_domains", ",", "1", ",", "1", ",", "0", ")", "]", "\n", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "*", "blocks", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_starganv2.StarGANv2Discriminator.forward": [[34, 43], ["discriminator_starganv2.StarGANv2Discriminator.main", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "range", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.lsr2_preprocess.main"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "out", "=", "self", ".", "main", "(", "x", ")", "\n", "out", "=", "paddle", ".", "reshape", "(", "out", ",", "(", "out", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ")", "# (batch, num_domains)", "\n", "idx", "=", "paddle", ".", "zeros_like", "(", "out", ")", "\n", "for", "i", "in", "range", "(", "idx", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "idx", "[", "i", ",", "y", "[", "i", "]", "]", "=", "1", "\n", "", "s", "=", "idx", "*", "out", "\n", "s", "=", "paddle", ".", "sum", "(", "s", ",", "axis", "=", "1", ")", "\n", "return", "s", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.syncnet.SyncNetColor.__init__": [[16, 139], ["paddle.nn.Layer.__init__", "paddle.nn.Sequential", "paddle.nn.Sequential", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "SyncNetColor", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "face_encoder", "=", "nn", ".", "Sequential", "(", "\n", "ConvBNRelu", "(", "15", ",", "32", ",", "kernel_size", "=", "(", "7", ",", "7", ")", ",", "stride", "=", "1", ",", "padding", "=", "3", ")", ",", "\n", "ConvBNRelu", "(", "32", ",", "64", ",", "kernel_size", "=", "5", ",", "stride", "=", "(", "1", ",", "2", ")", ",", "padding", "=", "1", ")", ",", "\n", "ConvBNRelu", "(", "64", ",", "\n", "64", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "residual", "=", "True", ")", ",", "\n", "ConvBNRelu", "(", "64", ",", "\n", "64", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "residual", "=", "True", ")", ",", "\n", "ConvBNRelu", "(", "64", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "ConvBNRelu", "(", "128", ",", "\n", "128", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "residual", "=", "True", ")", ",", "\n", "ConvBNRelu", "(", "128", ",", "\n", "128", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "residual", "=", "True", ")", ",", "\n", "ConvBNRelu", "(", "128", ",", "\n", "128", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "residual", "=", "True", ")", ",", "\n", "ConvBNRelu", "(", "128", ",", "256", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "ConvBNRelu", "(", "256", ",", "\n", "256", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "residual", "=", "True", ")", ",", "\n", "ConvBNRelu", "(", "256", ",", "\n", "256", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "residual", "=", "True", ")", ",", "\n", "ConvBNRelu", "(", "256", ",", "512", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "ConvBNRelu", "(", "512", ",", "\n", "512", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "residual", "=", "True", ")", ",", "\n", "ConvBNRelu", "(", "512", ",", "\n", "512", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "residual", "=", "True", ")", ",", "\n", "ConvBNRelu", "(", "512", ",", "512", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "ConvBNRelu", "(", "512", ",", "512", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "ConvBNRelu", "(", "512", ",", "512", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", ")", "\n", "\n", "self", ".", "audio_encoder", "=", "nn", ".", "Sequential", "(", "\n", "ConvBNRelu", "(", "1", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "ConvBNRelu", "(", "32", ",", "\n", "32", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "residual", "=", "True", ")", ",", "\n", "ConvBNRelu", "(", "32", ",", "\n", "32", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "residual", "=", "True", ")", ",", "\n", "ConvBNRelu", "(", "32", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "(", "3", ",", "1", ")", ",", "padding", "=", "1", ")", ",", "\n", "ConvBNRelu", "(", "64", ",", "\n", "64", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "residual", "=", "True", ")", ",", "\n", "ConvBNRelu", "(", "64", ",", "\n", "64", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "residual", "=", "True", ")", ",", "\n", "ConvBNRelu", "(", "64", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "ConvBNRelu", "(", "128", ",", "\n", "128", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "residual", "=", "True", ")", ",", "\n", "ConvBNRelu", "(", "128", ",", "\n", "128", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "residual", "=", "True", ")", ",", "\n", "ConvBNRelu", "(", "128", ",", "256", ",", "kernel_size", "=", "3", ",", "stride", "=", "(", "3", ",", "2", ")", ",", "padding", "=", "1", ")", ",", "\n", "ConvBNRelu", "(", "256", ",", "\n", "256", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "residual", "=", "True", ")", ",", "\n", "ConvBNRelu", "(", "256", ",", "\n", "256", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "residual", "=", "True", ")", ",", "\n", "ConvBNRelu", "(", "256", ",", "512", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "ConvBNRelu", "(", "512", ",", "512", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.syncnet.SyncNetColor.forward": [[141, 154], ["syncnet.SyncNetColor.face_encoder", "syncnet.SyncNetColor.audio_encoder", "paddle.nn.functional.normalize.reshape", "paddle.nn.functional.normalize.reshape", "paddle.nn.functional.normalize", "paddle.nn.functional.normalize"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.normalize"], ["", "def", "forward", "(", "self", ",", "audio_sequences", ",", "\n", "face_sequences", ")", ":", "# audio_sequences := (B, dim, T)", "\n", "        ", "face_embedding", "=", "self", ".", "face_encoder", "(", "face_sequences", ")", "\n", "audio_embedding", "=", "self", ".", "audio_encoder", "(", "audio_sequences", ")", "\n", "\n", "audio_embedding", "=", "audio_embedding", ".", "reshape", "(", "\n", "[", "audio_embedding", ".", "shape", "[", "0", "]", ",", "-", "1", "]", ")", "\n", "face_embedding", "=", "face_embedding", ".", "reshape", "(", "[", "face_embedding", ".", "shape", "[", "0", "]", ",", "-", "1", "]", ")", "\n", "\n", "audio_embedding", "=", "F", ".", "normalize", "(", "audio_embedding", ",", "p", "=", "2", ",", "axis", "=", "1", ")", "\n", "face_embedding", "=", "F", ".", "normalize", "(", "face_embedding", ",", "p", "=", "2", ",", "axis", "=", "1", ")", "\n", "\n", "return", "audio_embedding", ",", "face_embedding", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_lapstyle.LapStyleDiscriminator.__init__": [[23, 49], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "range", "paddle.Conv2D", "paddle.Conv2D", "discriminator_lapstyle.LapStyleDiscriminator.body.add_sublayer", "discriminator_lapstyle.LapStyleDiscriminator.body.add_sublayer", "discriminator_lapstyle.LapStyleDiscriminator.body.add_sublayer", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.LeakyReLU", "paddle.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "LapStyleDiscriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "num_layer", "=", "3", "\n", "num_channel", "=", "32", "\n", "self", ".", "head", "=", "nn", ".", "Sequential", "(", "\n", "(", "'conv'", ",", "\n", "nn", ".", "Conv2D", "(", "3", ",", "num_channel", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ")", ",", "\n", "(", "'norm'", ",", "nn", ".", "BatchNorm2D", "(", "num_channel", ")", ")", ",", "\n", "(", "'LeakyRelu'", ",", "nn", ".", "LeakyReLU", "(", "0.2", ")", ")", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", ")", "\n", "for", "i", "in", "range", "(", "num_layer", "-", "2", ")", ":", "\n", "            ", "self", ".", "body", ".", "add_sublayer", "(", "\n", "'conv%d'", "%", "(", "i", "+", "1", ")", ",", "\n", "nn", ".", "Conv2D", "(", "num_channel", ",", "\n", "num_channel", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", ")", "\n", "self", ".", "body", ".", "add_sublayer", "(", "'norm%d'", "%", "(", "i", "+", "1", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "num_channel", ")", ")", "\n", "self", ".", "body", ".", "add_sublayer", "(", "'LeakyRelu%d'", "%", "(", "i", "+", "1", ")", ",", "nn", ".", "LeakyReLU", "(", "0.2", ")", ")", "\n", "", "self", ".", "tail", "=", "nn", ".", "Conv2D", "(", "num_channel", ",", "\n", "1", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_lapstyle.LapStyleDiscriminator.forward": [[50, 55], ["discriminator_lapstyle.LapStyleDiscriminator.head", "discriminator_lapstyle.LapStyleDiscriminator.body", "discriminator_lapstyle.LapStyleDiscriminator.tail"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "x", "=", "self", ".", "body", "(", "x", ")", "\n", "x", "=", "self", ".", "tail", "(", "x", ")", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_firstorder.FirstOrderDiscriminator.__init__": [[34, 42], ["paddle.Layer.__init__", "discriminator_firstorder.MultiScaleDiscriminator", "modules.first_order.ImagePyramide"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "discriminator_cfg", ",", "common_params", ",", "train_params", ")", ":", "\n", "        ", "super", "(", "FirstOrderDiscriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "discriminator", "=", "MultiScaleDiscriminator", "(", "**", "discriminator_cfg", ",", "\n", "**", "common_params", ")", "\n", "self", ".", "train_params", "=", "train_params", "\n", "self", ".", "scales", "=", "self", ".", "discriminator", ".", "scales", "\n", "self", ".", "pyramid", "=", "ImagePyramide", "(", "self", ".", "scales", ",", "common_params", "[", "'num_channels'", "]", ")", "\n", "self", ".", "loss_weights", "=", "train_params", "[", "'loss_weights'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_firstorder.FirstOrderDiscriminator.forward": [[43, 63], ["discriminator_firstorder.FirstOrderDiscriminator.pyramid", "discriminator_firstorder.FirstOrderDiscriminator.pyramid", "discriminator_firstorder.FirstOrderDiscriminator.discriminator", "discriminator_firstorder.FirstOrderDiscriminator.discriminator", "generated[].detach", "modules.first_order.detach_kp", "modules.first_order.detach_kp", "value.mean"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.detach_kp", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.detach_kp"], ["", "def", "forward", "(", "self", ",", "x", ",", "generated", ")", ":", "\n", "        ", "pyramide_real", "=", "self", ".", "pyramid", "(", "x", "[", "'driving'", "]", ")", "\n", "pyramide_generated", "=", "self", ".", "pyramid", "(", "generated", "[", "'prediction'", "]", ".", "detach", "(", ")", ")", "\n", "\n", "kp_driving", "=", "generated", "[", "'kp_driving'", "]", "\n", "discriminator_maps_generated", "=", "self", ".", "discriminator", "(", "\n", "pyramide_generated", ",", "kp", "=", "detach_kp", "(", "kp_driving", ")", ")", "\n", "discriminator_maps_real", "=", "self", ".", "discriminator", "(", "pyramide_real", ",", "\n", "kp", "=", "detach_kp", "(", "kp_driving", ")", ")", "\n", "\n", "loss_values", "=", "{", "}", "\n", "value_total", "=", "0", "\n", "for", "scale", "in", "self", ".", "scales", ":", "\n", "            ", "key", "=", "'prediction_map_%s'", "%", "scale", "\n", "value", "=", "(", "1", "-", "discriminator_maps_real", "[", "key", "]", "\n", ")", "**", "2", "+", "discriminator_maps_generated", "[", "key", "]", "**", "2", "\n", "value_total", "+=", "self", ".", "loss_weights", "[", "'discriminator_gan'", "]", "*", "value", ".", "mean", "(", ")", "\n", "", "loss_values", "[", "'disc_gan'", "]", "=", "value_total", "\n", "\n", "return", "loss_values", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_firstorder.DownBlock2d.__init__": [[69, 91], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "modules.utils.spectral_norm", "paddle.InstanceNorm2D", "paddle.InstanceNorm2D", "paddle.InstanceNorm2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.spectral_norm"], ["def", "__init__", "(", "self", ",", "\n", "in_features", ",", "\n", "out_features", ",", "\n", "norm", "=", "False", ",", "\n", "kernel_size", "=", "4", ",", "\n", "pool", "=", "False", ",", "\n", "sn", "=", "False", ")", ":", "\n", "        ", "super", "(", "DownBlock2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2D", "(", "in_features", ",", "\n", "out_features", ",", "\n", "kernel_size", "=", "kernel_size", ")", "\n", "if", "sn", ":", "\n", "            ", "self", ".", "conv", "=", "spectral_norm", "(", "self", ".", "conv", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "sn", "=", "None", "\n", "", "if", "norm", ":", "\n", "            ", "self", ".", "norm", "=", "nn", ".", "InstanceNorm2D", "(", "num_features", "=", "out_features", ",", "\n", "epsilon", "=", "1e-05", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "norm", "=", "None", "\n", "\n", "", "self", ".", "pool", "=", "pool", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_firstorder.DownBlock2d.forward": [[92, 102], ["discriminator_firstorder.DownBlock2d.conv", "paddle.leaky_relu", "paddle.leaky_relu", "paddle.leaky_relu", "discriminator_firstorder.DownBlock2d.norm", "paddle.avg_pool2d", "paddle.avg_pool2d", "paddle.avg_pool2d"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "out", "=", "x", "\n", "out", "=", "self", ".", "conv", "(", "out", ")", "\n", "if", "self", ".", "norm", "is", "not", "None", ":", "\n", "            ", "out", "=", "self", ".", "norm", "(", "out", ")", "\n", "", "out", "=", "F", ".", "leaky_relu", "(", "out", ",", "0.2", ")", "\n", "if", "self", ".", "pool", ":", "\n", "            ", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "False", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_firstorder.Discriminator.__init__": [[105, 139], ["paddle.Layer.__init__", "range", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "down_blocks.append", "modules.utils.spectral_norm", "discriminator_firstorder.DownBlock2d", "min", "min", "discriminator_firstorder.Discriminator.down_blocks[].conv.parameters", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.spectral_norm"], ["    ", "def", "__init__", "(", "self", ",", "\n", "num_channels", "=", "3", ",", "\n", "block_expansion", "=", "64", ",", "\n", "num_blocks", "=", "4", ",", "\n", "max_features", "=", "512", ",", "\n", "sn", "=", "False", ",", "\n", "use_kp", "=", "False", ",", "\n", "num_kp", "=", "10", ",", "\n", "kp_variance", "=", "0.01", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "Discriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "down_blocks", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_blocks", ")", ":", "\n", "            ", "down_blocks", ".", "append", "(", "\n", "DownBlock2d", "(", "num_channels", "+", "num_kp", "*", "use_kp", "if", "i", "==", "0", "else", "min", "(", "\n", "max_features", ",", "block_expansion", "*", "(", "2", "**", "i", ")", ")", ",", "\n", "min", "(", "max_features", ",", "block_expansion", "*", "(", "2", "**", "(", "i", "+", "1", ")", ")", ")", ",", "\n", "norm", "=", "(", "i", "!=", "0", ")", ",", "\n", "kernel_size", "=", "4", ",", "\n", "pool", "=", "(", "i", "!=", "num_blocks", "-", "1", ")", ",", "\n", "sn", "=", "sn", ")", ")", "\n", "\n", "", "self", ".", "down_blocks", "=", "nn", ".", "LayerList", "(", "down_blocks", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2D", "(", "self", ".", "down_blocks", "[", "len", "(", "self", ".", "down_blocks", ")", "-", "\n", "1", "]", ".", "conv", ".", "parameters", "(", ")", "[", "0", "]", ".", "shape", "[", "0", "]", ",", "\n", "1", ",", "\n", "kernel_size", "=", "1", ")", "\n", "if", "sn", ":", "\n", "            ", "self", ".", "conv", "=", "spectral_norm", "(", "self", ".", "conv", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "sn", "=", "None", "\n", "", "self", ".", "use_kp", "=", "use_kp", "\n", "self", ".", "kp_variance", "=", "kp_variance", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_firstorder.Discriminator.forward": [[140, 153], ["discriminator_firstorder.Discriminator.conv", "modules.first_order.kp2gaussian", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "down_block", "feature_maps.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.kp2gaussian", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "forward", "(", "self", ",", "x", ",", "kp", "=", "None", ")", ":", "\n", "        ", "feature_maps", "=", "[", "]", "\n", "out", "=", "x", "\n", "\n", "if", "self", ".", "use_kp", ":", "\n", "            ", "heatmap", "=", "kp2gaussian", "(", "kp", ",", "x", ".", "shape", "[", "2", ":", "]", ",", "self", ".", "kp_variance", ")", "\n", "out", "=", "paddle", ".", "concat", "(", "[", "out", ",", "heatmap", "]", ",", "axis", "=", "1", ")", "\n", "", "for", "down_block", "in", "self", ".", "down_blocks", ":", "\n", "            ", "out", "=", "down_block", "(", "out", ")", "\n", "feature_maps", ".", "append", "(", "out", ")", "\n", "out", "=", "feature_maps", "[", "-", "1", "]", "\n", "", "prediction_map", "=", "self", ".", "conv", "(", "out", ")", "\n", "return", "feature_maps", ",", "prediction_map", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_firstorder.MultiScaleDiscriminator.__init__": [[159, 168], ["paddle.Layer.__init__", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "discriminator_firstorder.MultiScaleDiscriminator.discs.add_sublayer", "discriminator_firstorder.MultiScaleDiscriminator.nameList.append", "str().replace", "discriminator_firstorder.Discriminator", "str().replace", "str", "str"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["def", "__init__", "(", "self", ",", "scales", "=", "(", ")", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "MultiScaleDiscriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "scales", "=", "scales", "\n", "self", ".", "discs", "=", "nn", ".", "LayerList", "(", ")", "\n", "self", ".", "nameList", "=", "[", "]", "\n", "for", "scale", "in", "scales", ":", "\n", "            ", "self", ".", "discs", ".", "add_sublayer", "(", "\n", "str", "(", "scale", ")", ".", "replace", "(", "'.'", ",", "'-'", ")", ",", "Discriminator", "(", "**", "kwargs", ")", ")", "\n", "self", ".", "nameList", ".", "append", "(", "str", "(", "scale", ")", ".", "replace", "(", "'.'", ",", "'-'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_firstorder.MultiScaleDiscriminator.forward": [[169, 178], ["zip", "str().replace", "disc", "str"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "kp", "=", "None", ")", ":", "\n", "        ", "out_dict", "=", "{", "}", "\n", "for", "scale", ",", "disc", "in", "zip", "(", "self", ".", "nameList", ",", "self", ".", "discs", ")", ":", "\n", "            ", "scale", "=", "str", "(", "scale", ")", ".", "replace", "(", "'-'", ",", "'.'", ")", "\n", "key", "=", "'prediction_'", "+", "scale", "\n", "feature_maps", ",", "prediction_map", "=", "disc", "(", "x", "[", "key", "]", ",", "kp", ")", "\n", "out_dict", "[", "'feature_maps_'", "+", "scale", "]", "=", "feature_maps", "\n", "out_dict", "[", "'prediction_map_'", "+", "scale", "]", "=", "prediction_map", "\n", "", "return", "out_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.vgg_discriminator.VGGDiscriminator128.__init__": [[19, 91], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.Linear", "paddle.Linear", "paddle.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "num_feat", ",", "norm_layer", "=", "'batch'", ")", ":", "\n", "        ", "super", "(", "VGGDiscriminator128", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv0_0", "=", "nn", ".", "Conv2D", "(", "in_channels", ",", "num_feat", ",", "3", ",", "1", ",", "1", ",", "bias_attr", "=", "True", ")", "\n", "self", ".", "conv0_1", "=", "nn", ".", "Conv2D", "(", "num_feat", ",", "num_feat", ",", "4", ",", "2", ",", "1", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "bn0_1", "=", "nn", ".", "BatchNorm2D", "(", "num_feat", ")", "\n", "\n", "self", ".", "conv1_0", "=", "nn", ".", "Conv2D", "(", "num_feat", ",", "\n", "num_feat", "*", "2", ",", "\n", "3", ",", "\n", "1", ",", "\n", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "bn1_0", "=", "nn", ".", "BatchNorm2D", "(", "num_feat", "*", "2", ")", "\n", "self", ".", "conv1_1", "=", "nn", ".", "Conv2D", "(", "num_feat", "*", "2", ",", "\n", "num_feat", "*", "2", ",", "\n", "4", ",", "\n", "2", ",", "\n", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "bn1_1", "=", "nn", ".", "BatchNorm2D", "(", "num_feat", "*", "2", ")", "\n", "\n", "self", ".", "conv2_0", "=", "nn", ".", "Conv2D", "(", "num_feat", "*", "2", ",", "\n", "num_feat", "*", "4", ",", "\n", "3", ",", "\n", "1", ",", "\n", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "bn2_0", "=", "nn", ".", "BatchNorm2D", "(", "num_feat", "*", "4", ")", "\n", "self", ".", "conv2_1", "=", "nn", ".", "Conv2D", "(", "num_feat", "*", "4", ",", "\n", "num_feat", "*", "4", ",", "\n", "4", ",", "\n", "2", ",", "\n", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "bn2_1", "=", "nn", ".", "BatchNorm2D", "(", "num_feat", "*", "4", ")", "\n", "\n", "self", ".", "conv3_0", "=", "nn", ".", "Conv2D", "(", "num_feat", "*", "4", ",", "\n", "num_feat", "*", "8", ",", "\n", "3", ",", "\n", "1", ",", "\n", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "bn3_0", "=", "nn", ".", "BatchNorm2D", "(", "num_feat", "*", "8", ")", "\n", "self", ".", "conv3_1", "=", "nn", ".", "Conv2D", "(", "num_feat", "*", "8", ",", "\n", "num_feat", "*", "8", ",", "\n", "4", ",", "\n", "2", ",", "\n", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "bn3_1", "=", "nn", ".", "BatchNorm2D", "(", "num_feat", "*", "8", ")", "\n", "\n", "self", ".", "conv4_0", "=", "nn", ".", "Conv2D", "(", "num_feat", "*", "8", ",", "\n", "num_feat", "*", "8", ",", "\n", "3", ",", "\n", "1", ",", "\n", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "bn4_0", "=", "nn", ".", "BatchNorm2D", "(", "num_feat", "*", "8", ")", "\n", "self", ".", "conv4_1", "=", "nn", ".", "Conv2D", "(", "num_feat", "*", "8", ",", "\n", "num_feat", "*", "8", ",", "\n", "4", ",", "\n", "2", ",", "\n", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "bn4_1", "=", "nn", ".", "BatchNorm2D", "(", "num_feat", "*", "8", ")", "\n", "\n", "self", ".", "linear1", "=", "nn", ".", "Linear", "(", "num_feat", "*", "8", "*", "4", "*", "4", ",", "100", ")", "\n", "self", ".", "linear2", "=", "nn", ".", "Linear", "(", "100", ",", "1", ")", "\n", "\n", "# activation function", "\n", "self", ".", "lrelu", "=", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.vgg_discriminator.VGGDiscriminator128.forward": [[92, 121], ["vgg_discriminator.VGGDiscriminator128.lrelu", "vgg_discriminator.VGGDiscriminator128.lrelu", "vgg_discriminator.VGGDiscriminator128.lrelu", "vgg_discriminator.VGGDiscriminator128.lrelu", "vgg_discriminator.VGGDiscriminator128.lrelu", "vgg_discriminator.VGGDiscriminator128.lrelu", "vgg_discriminator.VGGDiscriminator128.lrelu", "vgg_discriminator.VGGDiscriminator128.lrelu", "vgg_discriminator.VGGDiscriminator128.lrelu", "vgg_discriminator.VGGDiscriminator128.lrelu", "vgg_discriminator.VGGDiscriminator128.reshape", "vgg_discriminator.VGGDiscriminator128.lrelu", "vgg_discriminator.VGGDiscriminator128.linear2", "vgg_discriminator.VGGDiscriminator128.conv0_0", "vgg_discriminator.VGGDiscriminator128.bn0_1", "vgg_discriminator.VGGDiscriminator128.bn1_0", "vgg_discriminator.VGGDiscriminator128.bn1_1", "vgg_discriminator.VGGDiscriminator128.bn2_0", "vgg_discriminator.VGGDiscriminator128.bn2_1", "vgg_discriminator.VGGDiscriminator128.bn3_0", "vgg_discriminator.VGGDiscriminator128.bn3_1", "vgg_discriminator.VGGDiscriminator128.bn4_0", "vgg_discriminator.VGGDiscriminator128.bn4_1", "vgg_discriminator.VGGDiscriminator128.linear1", "vgg_discriminator.VGGDiscriminator128.conv0_1", "vgg_discriminator.VGGDiscriminator128.conv1_0", "vgg_discriminator.VGGDiscriminator128.conv1_1", "vgg_discriminator.VGGDiscriminator128.conv2_0", "vgg_discriminator.VGGDiscriminator128.conv2_1", "vgg_discriminator.VGGDiscriminator128.conv3_0", "vgg_discriminator.VGGDiscriminator128.conv3_1", "vgg_discriminator.VGGDiscriminator128.conv4_0", "vgg_discriminator.VGGDiscriminator128.conv4_1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "assert", "x", ".", "shape", "[", "2", "]", "==", "128", "and", "x", ".", "shape", "[", "3", "]", "==", "128", ",", "(", "\n", "f'Input spatial size must be 128x128, '", "\n", "f'but received {x.shape}.'", ")", "\n", "\n", "feat", "=", "self", ".", "lrelu", "(", "self", ".", "conv0_0", "(", "x", ")", ")", "\n", "feat", "=", "self", ".", "lrelu", "(", "self", ".", "bn0_1", "(", "\n", "self", ".", "conv0_1", "(", "feat", ")", ")", ")", "# output spatial size: (64, 64)", "\n", "\n", "feat", "=", "self", ".", "lrelu", "(", "self", ".", "bn1_0", "(", "self", ".", "conv1_0", "(", "feat", ")", ")", ")", "\n", "feat", "=", "self", ".", "lrelu", "(", "self", ".", "bn1_1", "(", "\n", "self", ".", "conv1_1", "(", "feat", ")", ")", ")", "# output spatial size: (32, 32)", "\n", "\n", "feat", "=", "self", ".", "lrelu", "(", "self", ".", "bn2_0", "(", "self", ".", "conv2_0", "(", "feat", ")", ")", ")", "\n", "feat", "=", "self", ".", "lrelu", "(", "self", ".", "bn2_1", "(", "\n", "self", ".", "conv2_1", "(", "feat", ")", ")", ")", "# output spatial size: (16, 16)", "\n", "\n", "feat", "=", "self", ".", "lrelu", "(", "self", ".", "bn3_0", "(", "self", ".", "conv3_0", "(", "feat", ")", ")", ")", "\n", "feat", "=", "self", ".", "lrelu", "(", "self", ".", "bn3_1", "(", "\n", "self", ".", "conv3_1", "(", "feat", ")", ")", ")", "# output spatial size: (8, 8)", "\n", "\n", "feat", "=", "self", ".", "lrelu", "(", "self", ".", "bn4_0", "(", "self", ".", "conv4_0", "(", "feat", ")", ")", ")", "\n", "feat", "=", "self", ".", "lrelu", "(", "self", ".", "bn4_1", "(", "\n", "self", ".", "conv4_1", "(", "feat", ")", ")", ")", "# output spatial size: (4, 4)", "\n", "\n", "feat", "=", "feat", ".", "reshape", "(", "[", "feat", ".", "shape", "[", "0", "]", ",", "-", "1", "]", ")", "\n", "feat", "=", "self", ".", "lrelu", "(", "self", ".", "linear1", "(", "feat", ")", ")", "\n", "out", "=", "self", ".", "linear2", "(", "feat", ")", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.dcdiscriminator.DCDiscriminator.__init__": [[34, 105], ["paddle.Layer.__init__", "modules.norm.build_norm_layer", "range", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "type", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "min", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.nn.BatchNorm2D", "paddle.nn.BatchNorm2D", "paddle.nn.BatchNorm2D", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "modules.norm.build_norm_layer.", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.norm.build_norm_layer"], ["def", "__init__", "(", "self", ",", "input_nc", ",", "ndf", "=", "64", ",", "norm_type", "=", "'instance'", ")", ":", "\n", "        ", "\"\"\"Construct a DCGAN discriminator\n\n        Parameters:\n            input_nc (int): the number of channels in input images\n            ndf (int): the number of filters in the last conv layer\n            norm_type (str): normalization layer type\n        \"\"\"", "\n", "super", "(", "DCDiscriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "norm_layer", "=", "build_norm_layer", "(", "norm_type", ")", "\n", "if", "type", "(", "norm_layer", ")", "==", "functools", ".", "partial", ":", "\n", "# no need to use bias as BatchNorm2d has affine parameters", "\n", "            ", "use_bias", "=", "norm_layer", ".", "func", "==", "nn", ".", "BatchNorm2D", "\n", "", "else", ":", "\n", "            ", "use_bias", "=", "norm_layer", "==", "nn", ".", "BatchNorm2D", "\n", "\n", "", "kw", "=", "4", "\n", "padw", "=", "1", "\n", "\n", "sequence", "=", "[", "\n", "nn", ".", "Conv2D", "(", "input_nc", ",", "\n", "ndf", ",", "\n", "kernel_size", "=", "kw", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "padw", ",", "\n", "bias_attr", "=", "use_bias", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", "\n", "]", "\n", "\n", "nf_mult", "=", "1", "\n", "nf_mult_prev", "=", "1", "\n", "n_downsampling", "=", "4", "\n", "\n", "# gradually increase the number of filters", "\n", "for", "n", "in", "range", "(", "1", ",", "n_downsampling", ")", ":", "\n", "            ", "nf_mult_prev", "=", "nf_mult", "\n", "nf_mult", "=", "min", "(", "2", "**", "n", ",", "8", ")", "\n", "if", "norm_type", "==", "'batch'", ":", "\n", "                ", "sequence", "+=", "[", "\n", "nn", ".", "Conv2D", "(", "ndf", "*", "nf_mult_prev", ",", "\n", "ndf", "*", "nf_mult", ",", "\n", "kernel_size", "=", "kw", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "padw", ")", ",", "\n", "BatchNorm2D", "(", "ndf", "*", "nf_mult", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", "\n", "]", "\n", "", "else", ":", "\n", "                ", "sequence", "+=", "[", "\n", "nn", ".", "Conv2D", "(", "ndf", "*", "nf_mult_prev", ",", "\n", "ndf", "*", "nf_mult", ",", "\n", "kernel_size", "=", "kw", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "padw", ",", "\n", "bias_attr", "=", "use_bias", ")", ",", "\n", "norm_layer", "(", "ndf", "*", "nf_mult", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", "\n", "]", "\n", "\n", "", "", "nf_mult_prev", "=", "nf_mult", "\n", "\n", "# output 1 channel prediction map", "\n", "sequence", "+=", "[", "\n", "nn", ".", "Conv2D", "(", "ndf", "*", "nf_mult_prev", ",", "\n", "1", ",", "\n", "kernel_size", "=", "kw", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ")", "\n", "]", "\n", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "sequence", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.dcdiscriminator.DCDiscriminator.forward": [[106, 109], ["dcdiscriminator.DCDiscriminator.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "\"\"\"Standard forward.\"\"\"", "\n", "return", "self", ".", "model", "(", "input", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_gpen.PixelNorm.__init__": [[32, 34], ["paddle.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_gpen.PixelNorm.forward": [[35, 38], ["paddle.rsqrt", "paddle.rsqrt", "paddle.rsqrt", "paddle.rsqrt", "paddle.rsqrt", "paddle.rsqrt", "paddle.rsqrt", "paddle.rsqrt", "paddle.rsqrt", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "return", "inputs", "*", "paddle", ".", "rsqrt", "(", "\n", "paddle", ".", "mean", "(", "inputs", "*", "inputs", ",", "1", ",", "keepdim", "=", "True", ")", "+", "1e-8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_gpen.ModulatedConv2D.__init__": [[42, 91], ["paddle.Layer.__init__", "generator_gpen.ModulatedConv2D.create_parameter", "ppgan.modules.equalized.EqualLinear_gpen", "ppgan.modules.upfirdn2d.Upfirdn2dBlur", "ppgan.modules.upfirdn2d.Upfirdn2dBlur", "math.sqrt", "paddle.initializer.Normal", "paddle.initializer.Normal", "paddle.initializer.Normal", "len", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "in_channel", ",", "\n", "out_channel", ",", "\n", "kernel_size", ",", "\n", "style_dim", ",", "\n", "demodulate", "=", "True", ",", "\n", "upsample", "=", "False", ",", "\n", "downsample", "=", "False", ",", "\n", "blur_kernel", "=", "[", "1", ",", "3", ",", "3", ",", "1", "]", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "eps", "=", "1e-8", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "in_channel", "=", "in_channel", "\n", "self", ".", "out_channel", "=", "out_channel", "\n", "self", ".", "upsample", "=", "upsample", "\n", "self", ".", "downsample", "=", "downsample", "\n", "\n", "if", "upsample", ":", "\n", "            ", "factor", "=", "2", "\n", "p", "=", "(", "len", "(", "blur_kernel", ")", "-", "factor", ")", "-", "(", "kernel_size", "-", "1", ")", "\n", "pad0", "=", "(", "p", "+", "1", ")", "//", "2", "+", "factor", "-", "1", "\n", "pad1", "=", "p", "//", "2", "+", "1", "\n", "\n", "self", ".", "blur", "=", "Upfirdn2dBlur", "(", "blur_kernel", ",", "\n", "pad", "=", "(", "pad0", ",", "pad1", ")", ",", "\n", "upsample_factor", "=", "factor", ")", "\n", "\n", "", "if", "downsample", ":", "\n", "            ", "factor", "=", "2", "\n", "p", "=", "(", "len", "(", "blur_kernel", ")", "-", "factor", ")", "+", "(", "kernel_size", "-", "1", ")", "\n", "pad0", "=", "(", "p", "+", "1", ")", "//", "2", "\n", "pad1", "=", "p", "//", "2", "\n", "\n", "self", ".", "blur", "=", "Upfirdn2dBlur", "(", "blur_kernel", ",", "pad", "=", "(", "pad0", ",", "pad1", ")", ")", "\n", "\n", "", "fan_in", "=", "in_channel", "*", "(", "kernel_size", "*", "kernel_size", ")", "\n", "self", ".", "scale", "=", "1", "/", "math", ".", "sqrt", "(", "fan_in", ")", "\n", "self", ".", "padding", "=", "kernel_size", "//", "2", "\n", "\n", "self", ".", "weight", "=", "self", ".", "create_parameter", "(", "\n", "(", "1", ",", "out_channel", ",", "in_channel", ",", "kernel_size", ",", "kernel_size", ")", ",", "\n", "default_initializer", "=", "nn", ".", "initializer", ".", "Normal", "(", ")", ")", "\n", "\n", "self", ".", "modulation", "=", "EqualLinear", "(", "style_dim", ",", "in_channel", ",", "bias_init", "=", "1", ")", "\n", "\n", "self", ".", "demodulate", "=", "demodulate", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_gpen.ModulatedConv2D.__repr__": [[92, 95], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "(", "\n", "f\"{self.__class__.__name__}({self.in_channel}, {self.out_channel}, {self.kernel_size}, \"", "\n", "f\"upsample={self.upsample}, downsample={self.downsample})\"", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_gpen.ModulatedConv2D.forward": [[97, 141], ["generator_gpen.ModulatedConv2D.modulation().reshape", "weight.transpose().reshape.transpose().reshape.reshape", "paddle.rsqrt", "paddle.rsqrt", "paddle.rsqrt", "paddle.rsqrt", "paddle.rsqrt", "paddle.rsqrt", "paddle.rsqrt", "paddle.rsqrt", "paddle.rsqrt", "inputs.reshape.reshape.reshape", "weight.transpose().reshape.transpose().reshape.reshape", "weight.transpose().reshape.transpose().reshape.transpose().reshape", "paddle.conv2d_transpose", "paddle.conv2d_transpose", "paddle.conv2d_transpose", "out.reshape.reshape.reshape", "generator_gpen.ModulatedConv2D.blur", "generator_gpen.ModulatedConv2D.modulation", "paddle.rsqrt.reshape", "paddle.rsqrt.reshape", "paddle.rsqrt.reshape", "generator_gpen.ModulatedConv2D.blur", "inputs.reshape.reshape.reshape", "paddle.conv2d", "paddle.conv2d", "paddle.conv2d", "out.reshape.reshape.reshape", "inputs.reshape.reshape.reshape", "paddle.conv2d", "paddle.conv2d", "paddle.conv2d", "out.reshape.reshape.reshape", "weight.transpose().reshape.transpose().reshape.transpose"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "style", ")", ":", "\n", "        ", "batch", ",", "in_channel", ",", "height", ",", "width", "=", "inputs", ".", "shape", "\n", "\n", "style", "=", "self", ".", "modulation", "(", "style", ")", ".", "reshape", "(", "(", "batch", ",", "1", ",", "in_channel", ",", "1", ",", "1", ")", ")", "\n", "weight", "=", "self", ".", "scale", "*", "self", ".", "weight", "*", "style", "\n", "\n", "if", "self", ".", "demodulate", ":", "\n", "            ", "demod", "=", "paddle", ".", "rsqrt", "(", "(", "weight", "*", "weight", ")", ".", "sum", "(", "[", "2", ",", "3", ",", "4", "]", ")", "+", "1e-8", ")", "\n", "weight", "=", "weight", "*", "demod", ".", "reshape", "(", "(", "batch", ",", "self", ".", "out_channel", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "\n", "", "weight", "=", "weight", ".", "reshape", "(", "(", "batch", "*", "self", ".", "out_channel", ",", "in_channel", ",", "\n", "self", ".", "kernel_size", ",", "self", ".", "kernel_size", ")", ")", "\n", "\n", "if", "self", ".", "upsample", ":", "\n", "            ", "inputs", "=", "inputs", ".", "reshape", "(", "(", "1", ",", "batch", "*", "in_channel", ",", "height", ",", "width", ")", ")", "\n", "weight", "=", "weight", ".", "reshape", "(", "(", "batch", ",", "self", ".", "out_channel", ",", "in_channel", ",", "\n", "self", ".", "kernel_size", ",", "self", ".", "kernel_size", ")", ")", "\n", "weight", "=", "weight", ".", "transpose", "(", "(", "0", ",", "2", ",", "1", ",", "3", ",", "4", ")", ")", ".", "reshape", "(", "\n", "(", "batch", "*", "in_channel", ",", "self", ".", "out_channel", ",", "self", ".", "kernel_size", ",", "\n", "self", ".", "kernel_size", ")", ")", "\n", "out", "=", "F", ".", "conv2d_transpose", "(", "inputs", ",", "\n", "weight", ",", "\n", "padding", "=", "0", ",", "\n", "stride", "=", "2", ",", "\n", "groups", "=", "batch", ")", "\n", "_", ",", "_", ",", "height", ",", "width", "=", "out", ".", "shape", "\n", "out", "=", "out", ".", "reshape", "(", "(", "batch", ",", "self", ".", "out_channel", ",", "height", ",", "width", ")", ")", "\n", "out", "=", "self", ".", "blur", "(", "out", ")", "\n", "\n", "", "elif", "self", ".", "downsample", ":", "\n", "            ", "inputs", "=", "self", ".", "blur", "(", "inputs", ")", "\n", "_", ",", "_", ",", "height", ",", "width", "=", "inputs", ".", "shape", "\n", "inputs", "=", "inputs", ".", "reshape", "(", "(", "1", ",", "batch", "*", "in_channel", ",", "height", ",", "width", ")", ")", "\n", "out", "=", "F", ".", "conv2d", "(", "inputs", ",", "weight", ",", "padding", "=", "0", ",", "stride", "=", "2", ",", "groups", "=", "batch", ")", "\n", "_", ",", "_", ",", "height", ",", "width", "=", "out", ".", "shape", "\n", "out", "=", "out", ".", "reshape", "(", "(", "batch", ",", "self", ".", "out_channel", ",", "height", ",", "width", ")", ")", "\n", "\n", "", "else", ":", "\n", "            ", "inputs", "=", "inputs", ".", "reshape", "(", "(", "1", ",", "batch", "*", "in_channel", ",", "height", ",", "width", ")", ")", "\n", "out", "=", "F", ".", "conv2d", "(", "inputs", ",", "weight", ",", "padding", "=", "self", ".", "padding", ",", "groups", "=", "batch", ")", "\n", "_", ",", "_", ",", "height", ",", "width", "=", "out", ".", "shape", "\n", "out", "=", "out", ".", "reshape", "(", "(", "batch", ",", "self", ".", "out_channel", ",", "height", ",", "width", ")", ")", "\n", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_gpen.NoiseInjection.__init__": [[145, 151], ["paddle.Layer.__init__", "generator_gpen.NoiseInjection.create_parameter", "paddle.initializer.Constant", "paddle.initializer.Constant", "paddle.initializer.Constant"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "is_concat", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "weight", "=", "self", ".", "create_parameter", "(", "\n", "(", "1", ",", ")", ",", "default_initializer", "=", "nn", ".", "initializer", ".", "Constant", "(", "0.0", ")", ")", "\n", "self", ".", "is_concat", "=", "is_concat", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_gpen.NoiseInjection.forward": [[152, 160], ["paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "image", ",", "noise", "=", "None", ")", ":", "\n", "        ", "if", "noise", "is", "None", ":", "\n", "            ", "batch", ",", "_", ",", "height", ",", "width", "=", "image", ".", "shape", "\n", "noise", "=", "paddle", ".", "randn", "(", "(", "batch", ",", "1", ",", "height", ",", "width", ")", ")", "\n", "", "if", "self", ".", "is_concat", ":", "\n", "            ", "return", "paddle", ".", "concat", "(", "[", "image", ",", "self", ".", "weight", "*", "noise", "]", ",", "axis", "=", "1", ")", "\n", "", "else", ":", "\n", "            ", "return", "image", "+", "self", ".", "weight", "*", "noise", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_gpen.ConstantInput.__init__": [[164, 170], ["paddle.Layer.__init__", "generator_gpen.ConstantInput.create_parameter", "paddle.initializer.Normal", "paddle.initializer.Normal", "paddle.initializer.Normal"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "size", "=", "4", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "input", "=", "self", ".", "create_parameter", "(", "\n", "(", "1", ",", "channel", ",", "size", ",", "size", ")", ",", "\n", "default_initializer", "=", "nn", ".", "initializer", ".", "Normal", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_gpen.ConstantInput.forward": [[171, 176], ["generator_gpen.ConstantInput.input.tile"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "batch", "=", "inputs", ".", "shape", "[", "0", "]", "\n", "out", "=", "self", ".", "input", ".", "tile", "(", "(", "batch", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_gpen.StyledConv.__init__": [[180, 204], ["paddle.Layer.__init__", "generator_gpen.ModulatedConv2D", "generator_gpen.NoiseInjection", "ppgan.modules.fused_act.FusedLeakyReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channel", ",", "\n", "out_channel", ",", "\n", "kernel_size", ",", "\n", "style_dim", ",", "\n", "upsample", "=", "False", ",", "\n", "blur_kernel", "=", "[", "1", ",", "3", ",", "3", ",", "1", "]", ",", "\n", "demodulate", "=", "True", ",", "\n", "is_concat", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv", "=", "ModulatedConv2D", "(", "\n", "in_channel", ",", "\n", "out_channel", ",", "\n", "kernel_size", ",", "\n", "style_dim", ",", "\n", "upsample", "=", "upsample", ",", "\n", "blur_kernel", "=", "blur_kernel", ",", "\n", "demodulate", "=", "demodulate", ",", "\n", ")", "\n", "\n", "self", ".", "noise", "=", "NoiseInjection", "(", "is_concat", "=", "is_concat", ")", "\n", "self", ".", "activate", "=", "FusedLeakyReLU", "(", "out_channel", "*", "\n", "2", "if", "is_concat", "else", "out_channel", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_gpen.StyledConv.forward": [[205, 211], ["generator_gpen.StyledConv.conv", "generator_gpen.StyledConv.noise", "generator_gpen.StyledConv.activate"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "style", ",", "noise", "=", "None", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv", "(", "inputs", ",", "style", ")", "\n", "out", "=", "self", ".", "noise", "(", "out", ",", "noise", "=", "noise", ")", "\n", "out", "=", "self", ".", "activate", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_gpen.ToRGB.__init__": [[215, 232], ["paddle.Layer.__init__", "generator_gpen.ModulatedConv2D", "generator_gpen.ToRGB.create_parameter", "ppgan.modules.upfirdn2d.Upfirdn2dUpsample", "paddle.initializer.Constant", "paddle.initializer.Constant", "paddle.initializer.Constant"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channel", ",", "\n", "style_dim", ",", "\n", "upsample", "=", "True", ",", "\n", "blur_kernel", "=", "[", "1", ",", "3", ",", "3", ",", "1", "]", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "upsample", ":", "\n", "            ", "self", ".", "upsample", "=", "Upfirdn2dUpsample", "(", "blur_kernel", ")", "\n", "\n", "", "self", ".", "conv", "=", "ModulatedConv2D", "(", "in_channel", ",", "\n", "3", ",", "\n", "1", ",", "\n", "style_dim", ",", "\n", "demodulate", "=", "False", ")", "\n", "self", ".", "bias", "=", "self", ".", "create_parameter", "(", "(", "1", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "initializer", ".", "Constant", "(", "0.0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_gpen.ToRGB.forward": [[233, 243], ["generator_gpen.ToRGB.conv", "generator_gpen.ToRGB.upsample"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.upsample"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "style", ",", "skip", "=", "None", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv", "(", "inputs", ",", "style", ")", "\n", "out", "=", "out", "+", "self", ".", "bias", "\n", "\n", "if", "skip", "is", "not", "None", ":", "\n", "            ", "skip", "=", "self", ".", "upsample", "(", "skip", ")", "\n", "\n", "out", "=", "out", "+", "skip", "\n", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_gpen.StyleGANv2Generator.__init__": [[247, 343], ["paddle.Layer.__init__", "range", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "generator_gpen.ConstantInput", "generator_gpen.StyledConv", "generator_gpen.ToRGB", "int", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.Layer", "paddle.Layer", "paddle.Layer", "range", "range", "generator_gpen.PixelNorm", "layers.append", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "math.log", "generator_gpen.StyleGANv2Generator.noises.register_buffer", "generator_gpen.StyleGANv2Generator.convs.append", "generator_gpen.StyleGANv2Generator.convs.append", "generator_gpen.StyleGANv2Generator.to_rgbs.append", "ppgan.modules.equalized.EqualLinear_gpen", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "generator_gpen.StyledConv", "generator_gpen.StyledConv", "generator_gpen.ToRGB"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["    ", "def", "__init__", "(", "self", ",", "\n", "size", ",", "\n", "style_dim", ",", "\n", "n_mlp", ",", "\n", "channel_multiplier", "=", "1", ",", "\n", "narrow", "=", "0.5", ",", "\n", "blur_kernel", "=", "[", "1", ",", "3", ",", "3", ",", "1", "]", ",", "\n", "lr_mlp", "=", "0.01", ",", "\n", "is_concat", "=", "True", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "size", "=", "size", "\n", "\n", "self", ".", "style_dim", "=", "style_dim", "\n", "\n", "layers", "=", "[", "PixelNorm", "(", ")", "]", "\n", "\n", "for", "i", "in", "range", "(", "n_mlp", ")", ":", "\n", "            ", "layers", ".", "append", "(", "\n", "EqualLinear", "(", "style_dim", ",", "\n", "style_dim", ",", "\n", "lr_mul", "=", "lr_mlp", ",", "\n", "activation", "=", "\"fused_lrelu\"", ")", ")", "\n", "\n", "", "self", ".", "style", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n", "self", ".", "channels", "=", "{", "\n", "4", ":", "int", "(", "512", "*", "narrow", ")", ",", "\n", "8", ":", "int", "(", "512", "*", "narrow", ")", ",", "\n", "16", ":", "int", "(", "512", "*", "narrow", ")", ",", "\n", "32", ":", "int", "(", "512", "*", "narrow", ")", ",", "\n", "64", ":", "int", "(", "256", "*", "channel_multiplier", "*", "narrow", ")", ",", "\n", "128", ":", "int", "(", "128", "*", "channel_multiplier", "*", "narrow", ")", ",", "\n", "256", ":", "int", "(", "64", "*", "channel_multiplier", "*", "narrow", ")", ",", "\n", "512", ":", "int", "(", "32", "*", "channel_multiplier", "*", "narrow", ")", ",", "\n", "1024", ":", "int", "(", "16", "*", "channel_multiplier", "*", "narrow", ")", ",", "\n", "2048", ":", "int", "(", "8", "*", "channel_multiplier", "*", "narrow", ")", "\n", "}", "\n", "\n", "self", ".", "input", "=", "ConstantInput", "(", "self", ".", "channels", "[", "4", "]", ")", "\n", "self", ".", "conv1", "=", "StyledConv", "(", "self", ".", "channels", "[", "4", "]", ",", "\n", "self", ".", "channels", "[", "4", "]", ",", "\n", "3", ",", "\n", "style_dim", ",", "\n", "blur_kernel", "=", "blur_kernel", ",", "\n", "is_concat", "=", "is_concat", ")", "\n", "self", ".", "to_rgb1", "=", "ToRGB", "(", "self", ".", "channels", "[", "4", "]", "*", "\n", "2", "if", "is_concat", "else", "self", ".", "channels", "[", "4", "]", ",", "\n", "style_dim", ",", "\n", "upsample", "=", "False", ")", "\n", "\n", "self", ".", "log_size", "=", "int", "(", "math", ".", "log", "(", "size", ",", "2", ")", ")", "\n", "self", ".", "num_layers", "=", "(", "self", ".", "log_size", "-", "2", ")", "*", "2", "+", "1", "\n", "\n", "self", ".", "convs", "=", "nn", ".", "LayerList", "(", ")", "\n", "self", ".", "upsamples", "=", "nn", ".", "LayerList", "(", ")", "\n", "self", ".", "to_rgbs", "=", "nn", ".", "LayerList", "(", ")", "\n", "self", ".", "noises", "=", "nn", ".", "Layer", "(", ")", "\n", "\n", "in_channel", "=", "self", ".", "channels", "[", "4", "]", "\n", "\n", "for", "layer_idx", "in", "range", "(", "self", ".", "num_layers", ")", ":", "\n", "            ", "res", "=", "(", "layer_idx", "+", "5", ")", "//", "2", "\n", "shape", "=", "[", "1", ",", "1", ",", "2", "**", "res", ",", "2", "**", "res", "]", "\n", "self", ".", "noises", ".", "register_buffer", "(", "f\"noise_{layer_idx}\"", ",", "\n", "paddle", ".", "randn", "(", "shape", ")", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "3", ",", "self", ".", "log_size", "+", "1", ")", ":", "\n", "            ", "out_channel", "=", "self", ".", "channels", "[", "2", "**", "i", "]", "\n", "\n", "self", ".", "convs", ".", "append", "(", "\n", "StyledConv", "(", "\n", "in_channel", "*", "2", "if", "is_concat", "else", "in_channel", ",", "\n", "out_channel", ",", "\n", "3", ",", "\n", "style_dim", ",", "\n", "upsample", "=", "True", ",", "\n", "blur_kernel", "=", "blur_kernel", ",", "\n", "is_concat", "=", "is_concat", ",", "\n", ")", ")", "\n", "\n", "self", ".", "convs", ".", "append", "(", "\n", "StyledConv", "(", "out_channel", "*", "2", "if", "is_concat", "else", "out_channel", ",", "\n", "out_channel", ",", "\n", "3", ",", "\n", "style_dim", ",", "\n", "blur_kernel", "=", "blur_kernel", ",", "\n", "is_concat", "=", "is_concat", ")", ")", "\n", "\n", "self", ".", "to_rgbs", ".", "append", "(", "\n", "ToRGB", "(", "out_channel", "*", "2", "if", "is_concat", "else", "out_channel", ",", "style_dim", ")", ")", "\n", "\n", "in_channel", "=", "out_channel", "\n", "\n", "", "self", ".", "n_latent", "=", "self", ".", "log_size", "*", "2", "-", "2", "\n", "self", ".", "is_concat", "=", "is_concat", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_gpen.StyleGANv2Generator.make_noise": [[344, 352], ["range", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "range", "noises.append", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "make_noise", "(", "self", ")", ":", "\n", "        ", "noises", "=", "[", "paddle", ".", "randn", "(", "(", "1", ",", "1", ",", "2", "**", "2", ",", "2", "**", "2", ")", ")", "]", "\n", "\n", "for", "i", "in", "range", "(", "3", ",", "self", ".", "log_size", "+", "1", ")", ":", "\n", "            ", "for", "_", "in", "range", "(", "2", ")", ":", "\n", "                ", "noises", ".", "append", "(", "paddle", ".", "randn", "(", "(", "1", ",", "1", ",", "2", "**", "i", ",", "2", "**", "i", ")", ")", ")", "\n", "\n", "", "", "return", "noises", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_gpen.StyleGANv2Generator.mean_latent": [[353, 358], ["paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "generator_gpen.StyleGANv2Generator.style().mean", "generator_gpen.StyleGANv2Generator.style"], "methods", ["None"], ["", "def", "mean_latent", "(", "self", ",", "n_latent", ")", ":", "\n", "        ", "latent_in", "=", "paddle", ".", "randn", "(", "(", "n_latent", ",", "self", ".", "style_dim", ")", ")", "\n", "latent", "=", "self", ".", "style", "(", "latent_in", ")", ".", "mean", "(", "0", ",", "keepdim", "=", "True", ")", "\n", "\n", "return", "latent", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_gpen.StyleGANv2Generator.get_latent": [[359, 361], ["generator_gpen.StyleGANv2Generator.style"], "methods", ["None"], ["", "def", "get_latent", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "return", "self", ".", "style", "(", "inputs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_gpen.StyleGANv2Generator.get_mean_style": [[362, 374], ["paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "range", "generator_gpen.StyleGANv2Generator.mean_latent"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_styleganv2.StyleGANv2Generator.mean_latent"], ["", "def", "get_mean_style", "(", "self", ")", ":", "\n", "        ", "mean_style", "=", "None", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "i", "in", "range", "(", "10", ")", ":", "\n", "                ", "style", "=", "self", ".", "mean_latent", "(", "1024", ")", "\n", "if", "mean_style", "is", "None", ":", "\n", "                    ", "mean_style", "=", "style", "\n", "", "else", ":", "\n", "                    ", "mean_style", "+=", "style", "\n", "\n", "", "", "", "mean_style", "/=", "10", "\n", "return", "mean_style", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_gpen.StyleGANv2Generator.forward": [[375, 454], ["generator_gpen.StyleGANv2Generator.input", "generator_gpen.StyleGANv2Generator.conv1", "generator_gpen.StyleGANv2Generator.to_rgb1", "zip", "range", "len", "styles[].unsqueeze", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "conv1", "conv2", "to_rgb", "generator_gpen.StyleGANv2Generator.style", "noise.append", "style_t.append", "random.randint", "styles[].unsqueeze", "styles[].unsqueeze", "paddle.create_parameter", "paddle.create_parameter", "paddle.create_parameter", "paddle.create_parameter", "paddle.create_parameter", "paddle.create_parameter", "paddle.create_parameter", "paddle.create_parameter", "paddle.create_parameter", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.initializer.Constant", "paddle.initializer.Constant", "paddle.initializer.Constant"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "forward", "(", "\n", "self", ",", "\n", "styles", ",", "\n", "return_latents", "=", "False", ",", "\n", "inject_index", "=", "None", ",", "\n", "truncation", "=", "1", ",", "\n", "truncation_latent", "=", "None", ",", "\n", "input_is_latent", "=", "False", ",", "\n", "noise", "=", "None", ",", "\n", ")", ":", "\n", "        ", "if", "not", "input_is_latent", ":", "\n", "            ", "styles", "=", "[", "self", ".", "style", "(", "s", ")", "for", "s", "in", "styles", "]", "\n", "\n", "", "if", "noise", "is", "None", ":", "\n", "            ", "'''\n            noise = [None] * (2 * (self.log_size - 2) + 1)\n            '''", "\n", "noise", "=", "[", "]", "\n", "batch", "=", "styles", "[", "0", "]", ".", "shape", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "n_mlp", "+", "1", ")", ":", "\n", "                ", "size", "=", "2", "**", "(", "i", "+", "2", ")", "\n", "noise", ".", "append", "(", "\n", "paddle", ".", "create_parameter", "(", "\n", "[", "batch", ",", "self", ".", "channels", "[", "size", "]", ",", "size", ",", "size", "]", ",", "\n", "dtype", "=", "'float32'", ",", "\n", "attr", "=", "paddle", ".", "ParamAttr", "(", "\n", "initializer", "=", "nn", ".", "initializer", ".", "Constant", "(", "0", ")", ",", "\n", "trainable", "=", "True", ")", ")", ")", "\n", "\n", "", "", "if", "truncation", "<", "1", ":", "\n", "            ", "style_t", "=", "[", "]", "\n", "\n", "for", "style", "in", "styles", ":", "\n", "                ", "style_t", ".", "append", "(", "truncation_latent", "+", "truncation", "*", "\n", "(", "style", "-", "truncation_latent", ")", ")", "\n", "\n", "", "styles", "=", "style_t", "\n", "\n", "", "if", "len", "(", "styles", ")", "<", "2", ":", "\n", "            ", "inject_index", "=", "self", ".", "n_latent", "\n", "\n", "latent", "=", "styles", "[", "0", "]", ".", "unsqueeze", "(", "1", ")", "\n", "latent", "=", "paddle", ".", "tile", "(", "latent", ",", "repeat_times", "=", "[", "1", ",", "inject_index", ",", "1", "]", ")", "\n", "", "else", ":", "\n", "            ", "if", "inject_index", "is", "None", ":", "\n", "                ", "inject_index", "=", "random", ".", "randint", "(", "1", ",", "self", ".", "n_latent", "-", "1", ")", "\n", "\n", "", "latent", "=", "paddle", ".", "tile", "(", "styles", "[", "0", "]", ".", "unsqueeze", "(", "1", ")", ",", "\n", "repeat_times", "=", "[", "1", ",", "inject_index", ",", "1", "]", ")", "\n", "latent2", "=", "paddle", ".", "tile", "(", "\n", "styles", "[", "1", "]", ".", "unsqueeze", "(", "1", ")", ",", "\n", "repeat_times", "=", "[", "1", ",", "self", ".", "n_latent", "-", "inject_index", ",", "1", "]", ")", "\n", "\n", "latent", "=", "paddle", ".", "concat", "(", "[", "latent", ",", "latent2", "]", ",", "1", ")", "\n", "\n", "", "out", "=", "self", ".", "input", "(", "latent", ")", "\n", "out", "=", "self", ".", "conv1", "(", "out", ",", "latent", "[", ":", ",", "0", "]", ",", "noise", "=", "noise", "[", "0", "]", ")", "\n", "\n", "skip", "=", "self", ".", "to_rgb1", "(", "out", ",", "latent", "[", ":", ",", "1", "]", ")", "\n", "\n", "i", "=", "1", "\n", "for", "conv1", ",", "conv2", ",", "noise1", ",", "noise2", ",", "to_rgb", "in", "zip", "(", "self", ".", "convs", "[", ":", ":", "2", "]", ",", "\n", "self", ".", "convs", "[", "1", ":", ":", "2", "]", ",", "\n", "noise", "[", "1", ":", ":", "2", "]", ",", "\n", "noise", "[", "2", ":", ":", "2", "]", ",", "\n", "self", ".", "to_rgbs", ")", ":", "\n", "            ", "out", "=", "conv1", "(", "out", ",", "latent", "[", ":", ",", "i", "]", ",", "noise", "=", "noise1", ")", "\n", "out", "=", "conv2", "(", "out", ",", "latent", "[", ":", ",", "i", "+", "1", "]", ",", "noise", "=", "noise2", ")", "\n", "skip", "=", "to_rgb", "(", "out", ",", "latent", "[", ":", ",", "i", "+", "2", "]", ",", "skip", ")", "\n", "\n", "i", "+=", "2", "\n", "\n", "", "image", "=", "skip", "\n", "\n", "if", "return_latents", ":", "\n", "            ", "return", "image", ",", "latent", "\n", "\n", "", "else", ":", "\n", "            ", "return", "image", ",", "None", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.rcan.MeanShift.__init__": [[22, 33], ["paddle.Conv2D.__init__", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "rcan.MeanShift.weight.set_value", "rcan.MeanShift.weight.set_value", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "rcan.MeanShift.bias.set_value", "paddle.eye().reshape", "paddle.eye().reshape", "paddle.eye().reshape", "paddle.eye().reshape", "paddle.to_tensor.reshape", "paddle.to_tensor.reshape", "paddle.eye", "paddle.eye", "paddle.eye", "paddle.eye"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ",", "sign", "=", "-", "1", ")", ":", "\n", "        ", "super", "(", "MeanShift", ",", "self", ")", ".", "__init__", "(", "3", ",", "3", ",", "kernel_size", "=", "1", ")", "\n", "std", "=", "paddle", ".", "to_tensor", "(", "rgb_std", ")", "\n", "self", ".", "weight", ".", "set_value", "(", "paddle", ".", "eye", "(", "3", ")", ".", "reshape", "(", "[", "3", ",", "3", ",", "1", ",", "1", "]", ")", ")", "\n", "self", ".", "weight", ".", "set_value", "(", "self", ".", "weight", "/", "(", "std", ".", "reshape", "(", "[", "3", ",", "1", ",", "1", ",", "1", "]", ")", ")", ")", "\n", "\n", "mean", "=", "paddle", ".", "to_tensor", "(", "rgb_mean", ")", "\n", "self", ".", "bias", ".", "set_value", "(", "sign", "*", "rgb_range", "*", "mean", "/", "std", ")", "\n", "\n", "self", ".", "weight", ".", "trainable", "=", "False", "\n", "self", ".", "bias", ".", "trainable", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.rcan.CALayer.__init__": [[38, 54], ["paddle.Layer.__init__", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Sigmoid", "paddle.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "reduction", "=", "16", ")", ":", "\n", "        ", "super", "(", "CALayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# global average pooling: feature --> point", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2D", "(", "1", ")", "\n", "# feature channel downscale and upscale --> channel weight", "\n", "self", ".", "conv_du", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "channel", ",", "\n", "channel", "//", "reduction", ",", "\n", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "True", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2D", "(", "channel", "//", "reduction", ",", "\n", "channel", ",", "\n", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "True", ")", ",", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.rcan.CALayer.forward": [[55, 59], ["rcan.CALayer.avg_pool", "rcan.CALayer.conv_du"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "avg_pool", "(", "x", ")", "\n", "y", "=", "self", ".", "conv_du", "(", "y", ")", "\n", "return", "x", "*", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.rcan.RCAB.__init__": [[63, 81], ["paddle.ReLU", "paddle.ReLU", "paddle.Layer.__init__", "range", "modules_body.append", "paddle.Sequential", "paddle.Sequential", "modules_body.append", "rcan.CALayer", "conv", "modules_body.append", "modules_body.append", "paddle.BatchNorm2D", "paddle.BatchNorm2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["    ", "def", "__init__", "(", "self", ",", "\n", "conv", ",", "\n", "n_feat", ",", "\n", "kernel_size", ",", "\n", "reduction", "=", "16", ",", "\n", "bias", "=", "True", ",", "\n", "bn", "=", "False", ",", "\n", "act", "=", "nn", ".", "ReLU", "(", ")", ",", "\n", "res_scale", "=", "1", ")", ":", "\n", "        ", "super", "(", "RCAB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "modules_body", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "2", ")", ":", "\n", "            ", "modules_body", ".", "append", "(", "conv", "(", "n_feat", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "bias", ")", ")", "\n", "if", "bn", ":", "modules_body", ".", "append", "(", "nn", ".", "BatchNorm2D", "(", "n_feat", ")", ")", "\n", "if", "i", "==", "0", ":", "modules_body", ".", "append", "(", "act", ")", "\n", "", "modules_body", ".", "append", "(", "CALayer", "(", "n_feat", ",", "reduction", ")", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "modules_body", ")", "\n", "self", ".", "res_scale", "=", "res_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.rcan.RCAB.forward": [[82, 86], ["rcan.RCAB.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "self", ".", "body", "(", "x", ")", "\n", "res", "+=", "x", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.rcan.ResidualGroup.__init__": [[91, 101], ["paddle.Layer.__init__", "modules_body.append", "paddle.Sequential", "paddle.Sequential", "rcan.RCAB", "conv", "range", "paddle.ReLU", "paddle.ReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv"], ["    ", "def", "__init__", "(", "self", ",", "conv", ",", "n_feat", ",", "kernel_size", ",", "reduction", ",", "act", ",", "res_scale", ",", "\n", "n_resblocks", ")", ":", "\n", "        ", "super", "(", "ResidualGroup", ",", "self", ")", ".", "__init__", "(", ")", "\n", "modules_body", "=", "[", "]", "\n", "modules_body", "=", "[", "\n", "RCAB", "(", "\n", "conv", ",", "n_feat", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", ")", ",", "res_scale", "=", "1", ")", "for", "_", "in", "range", "(", "n_resblocks", ")", "]", "\n", "modules_body", ".", "append", "(", "conv", "(", "n_feat", ",", "n_feat", ",", "kernel_size", ")", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "modules_body", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.rcan.ResidualGroup.forward": [[102, 106], ["rcan.ResidualGroup.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "self", ".", "body", "(", "x", ")", "\n", "res", "+=", "x", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.rcan.Upsampler.__init__": [[110, 136], ["paddle.Sequential.__init__", "range", "int", "m.append", "m.append", "m.append", "m.append", "math.log", "conv", "paddle.PixelShuffle", "paddle.PixelShuffle", "m.append", "m.append", "conv", "paddle.PixelShuffle", "paddle.PixelShuffle", "m.append", "m.append", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.ReLU", "paddle.ReLU", "m.append", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.ReLU", "paddle.ReLU", "m.append", "paddle.PReLU", "paddle.PReLU", "paddle.PReLU", "paddle.PReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["    ", "def", "__init__", "(", "self", ",", "conv", ",", "scale", ",", "n_feats", ",", "bn", "=", "False", ",", "act", "=", "False", ",", "bias", "=", "True", ")", ":", "\n", "        ", "m", "=", "[", "]", "\n", "if", "(", "scale", "&", "(", "scale", "-", "1", ")", ")", "==", "0", ":", "# Is scale = 2^n?", "\n", "            ", "for", "_", "in", "range", "(", "int", "(", "math", ".", "log", "(", "scale", ",", "2", ")", ")", ")", ":", "\n", "                ", "m", ".", "append", "(", "conv", "(", "n_feats", ",", "4", "*", "n_feats", ",", "3", ",", "bias", ")", ")", "\n", "m", ".", "append", "(", "nn", ".", "PixelShuffle", "(", "2", ")", ")", "\n", "if", "bn", ":", "m", ".", "append", "(", "nn", ".", "BatchNorm2D", "(", "n_feats", ")", ")", "\n", "\n", "if", "act", "==", "'relu'", ":", "\n", "                    ", "m", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "", "elif", "act", "==", "'prelu'", ":", "\n", "                    ", "m", ".", "append", "(", "nn", ".", "PReLU", "(", "n_feats", ")", ")", "\n", "\n", "", "", "", "elif", "scale", "==", "3", ":", "\n", "            ", "m", ".", "append", "(", "conv", "(", "n_feats", ",", "9", "*", "n_feats", ",", "3", ",", "bias", ")", ")", "\n", "m", ".", "append", "(", "nn", ".", "PixelShuffle", "(", "3", ")", ")", "\n", "if", "bn", ":", "m", ".", "append", "(", "nn", ".", "BatchNorm2D", "(", "n_feats", ")", ")", "\n", "\n", "if", "act", "==", "'relu'", ":", "\n", "                ", "m", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "", "elif", "act", "==", "'prelu'", ":", "\n", "                ", "m", ".", "append", "(", "nn", ".", "PReLU", "(", "n_feats", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n", "", "super", "(", "Upsampler", ",", "self", ")", ".", "__init__", "(", "*", "m", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.rcan.RCAN.__init__": [[141, 191], ["paddle.Layer.__init__", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "rcan.MeanShift", "modules_body.append", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "rcan.MeanShift", "conv", "rcan.ResidualGroup", "conv", "rcan.Upsampler", "conv", "range"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "scale", ",", "\n", "n_resgroups", ",", "\n", "n_resblocks", ",", "\n", "n_feats", "=", "64", ",", "\n", "n_colors", "=", "3", ",", "\n", "rgb_range", "=", "255", ",", "\n", "kernel_size", "=", "3", ",", "\n", "reduction", "=", "16", ",", "\n", "conv", "=", "default_conv", ",", "\n", ")", ":", "\n", "        ", "super", "(", "RCAN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "scale", "=", "scale", "\n", "act", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "n_resgroups", "=", "n_resgroups", "\n", "n_resblocks", "=", "n_resblocks", "\n", "n_feats", "=", "n_feats", "\n", "kernel_size", "=", "kernel_size", "\n", "reduction", "=", "reduction", "\n", "scale", "=", "scale", "\n", "act", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "rgb_mean", "=", "(", "0.4488", ",", "0.4371", ",", "0.4040", ")", "\n", "rgb_std", "=", "(", "1.0", ",", "1.0", ",", "1.0", ")", "\n", "self", ".", "sub_mean", "=", "MeanShift", "(", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ")", "\n", "\n", "# define head module", "\n", "modules_head", "=", "[", "conv", "(", "n_colors", ",", "n_feats", ",", "kernel_size", ")", "]", "\n", "\n", "# define body module", "\n", "modules_body", "=", "[", "\n", "ResidualGroup", "(", "\n", "conv", ",", "n_feats", ",", "kernel_size", ",", "reduction", ",", "act", "=", "act", ",", "res_scale", "=", "1", ",", "n_resblocks", "=", "n_resblocks", ")", "for", "_", "in", "range", "(", "n_resgroups", ")", "]", "\n", "\n", "modules_body", ".", "append", "(", "conv", "(", "n_feats", ",", "n_feats", ",", "kernel_size", ")", ")", "\n", "\n", "# define tail module", "\n", "modules_tail", "=", "[", "\n", "Upsampler", "(", "conv", ",", "scale", ",", "n_feats", ",", "act", "=", "False", ")", ",", "\n", "conv", "(", "n_feats", ",", "n_colors", ",", "kernel_size", ")", "\n", "]", "\n", "\n", "self", ".", "head", "=", "nn", ".", "Sequential", "(", "*", "modules_head", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "modules_body", ")", "\n", "self", ".", "tail", "=", "nn", ".", "Sequential", "(", "*", "modules_tail", ")", "\n", "\n", "self", ".", "add_mean", "=", "MeanShift", "(", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.rcan.RCAN.forward": [[192, 203], ["rcan.RCAN.sub_mean", "rcan.RCAN.head", "rcan.RCAN.body", "rcan.RCAN.tail", "rcan.RCAN.add_mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "sub_mean", "(", "x", ")", "\n", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "\n", "res", "=", "self", ".", "body", "(", "x", ")", "\n", "res", "+=", "x", "\n", "\n", "x", "=", "self", ".", "tail", "(", "res", ")", "\n", "x", "=", "self", ".", "add_mean", "(", "x", ")", "\n", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.rcan.default_conv": [[9, 18], ["paddle.ParamAttr", "paddle.ParamAttr", "paddle.Conv2D", "paddle.nn.initializer.XavierUniform", "paddle.nn.initializer.XavierUniform"], "function", ["None"], ["def", "default_conv", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "bias", "=", "True", ")", ":", "\n", "    ", "weight_attr", "=", "paddle", ".", "ParamAttr", "(", "\n", "initializer", "=", "paddle", ".", "nn", ".", "initializer", ".", "XavierUniform", "(", ")", ",", "need_clip", "=", "True", ")", "\n", "return", "nn", ".", "Conv2D", "(", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "padding", "=", "(", "kernel_size", "//", "2", ")", ",", "\n", "weight_attr", "=", "weight_attr", ",", "\n", "bias_attr", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.hook.Hook.__init__": [[16, 21], ["f"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "m", ",", "hook_func", ",", "is_forward", "=", "True", ",", "detach", "=", "True", ")", ":", "\n", "        ", "self", ".", "hook_func", ",", "self", ".", "detach", ",", "self", ".", "stored", "=", "hook_func", ",", "detach", ",", "None", "\n", "f", "=", "m", ".", "register_forward_post_hook", "if", "is_forward", "else", "m", ".", "register_backward_hook", "\n", "self", ".", "hook", "=", "f", "(", "self", ".", "hook_fn", ")", "\n", "self", ".", "removed", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.hook.Hook.hook_fn": [[22, 30], ["hook.Hook.hook_func", "hook.is_listy", "input.detach", "hook.is_listy", "output.detach", "o.detach", "o.detach"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.hook.is_listy", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.hook.is_listy"], ["", "def", "hook_fn", "(", "self", ",", "module", ",", "input", ",", "output", ")", ":", "\n", "        ", "\"Applies `hook_func` to `module`, `input`, `output`.\"", "\n", "if", "self", ".", "detach", ":", "\n", "            ", "input", "=", "(", "o", ".", "detach", "(", ")", "\n", "for", "o", "in", "input", ")", "if", "is_listy", "(", "input", ")", "else", "input", ".", "detach", "(", ")", "\n", "output", "=", "(", "o", ".", "detach", "(", ")", "\n", "for", "o", "in", "output", ")", "if", "is_listy", "(", "output", ")", "else", "output", ".", "detach", "(", ")", "\n", "", "self", ".", "stored", "=", "self", ".", "hook_func", "(", "module", ",", "input", ",", "output", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.hook.Hook.remove": [[31, 36], ["hook.Hook.hook.remove"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.hook.Hooks.remove"], ["", "def", "remove", "(", "self", ")", ":", "\n", "        ", "\"Remove the hook from the model.\"", "\n", "if", "not", "self", ".", "removed", ":", "\n", "            ", "self", ".", "hook", ".", "remove", "(", ")", "\n", "self", ".", "removed", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.hook.Hook.__enter__": [[37, 39], ["None"], "methods", ["None"], ["", "", "def", "__enter__", "(", "self", ",", "*", "args", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.hook.Hook.__exit__": [[40, 42], ["hook.Hook.remove"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.hook.Hooks.remove"], ["", "def", "__exit__", "(", "self", ",", "*", "args", ")", ":", "\n", "        ", "self", ".", "remove", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.hook.Hooks.__init__": [[47, 54], ["hook.Hooks.hooks.append", "hook.Hook"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["def", "__init__", "(", "self", ",", "ms", ",", "hook_func", ",", "is_forward", "=", "True", ",", "detach", "=", "True", ")", ":", "\n", "        ", "self", ".", "hooks", "=", "[", "]", "\n", "try", ":", "\n", "            ", "for", "m", "in", "ms", ":", "\n", "                ", "self", ".", "hooks", ".", "append", "(", "Hook", "(", "m", ",", "hook_func", ",", "is_forward", ",", "detach", ")", ")", "\n", "", "", "except", "Exception", "as", "e", ":", "\n", "            ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.hook.Hooks.__getitem__": [[55, 57], ["None"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "i", ":", "int", ")", "->", "Hook", ":", "\n", "        ", "return", "self", ".", "hooks", "[", "i", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.hook.Hooks.__len__": [[58, 60], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", "->", "int", ":", "\n", "        ", "return", "len", "(", "self", ".", "hooks", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.hook.Hooks.__iter__": [[61, 63], ["iter"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "iter", "(", "self", ".", "hooks", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.hook.Hooks.stored": [[64, 67], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "stored", "(", "self", ")", ":", "\n", "        ", "return", "[", "o", ".", "stored", "for", "o", "in", "self", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.hook.Hooks.remove": [[68, 72], ["h.remove"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.hook.Hooks.remove"], ["", "def", "remove", "(", "self", ")", ":", "\n", "        ", "\"Remove the hooks from the model.\"", "\n", "for", "h", "in", "self", ".", "hooks", ":", "\n", "            ", "h", ".", "remove", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.hook.Hooks.__enter__": [[73, 75], ["None"], "methods", ["None"], ["", "", "def", "__enter__", "(", "self", ",", "*", "args", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.hook.Hooks.__exit__": [[76, 78], ["hook.Hooks.remove"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.hook.Hooks.remove"], ["", "def", "__exit__", "(", "self", ",", "*", "args", ")", ":", "\n", "        ", "self", ".", "remove", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.hook.is_listy": [[9, 11], ["isinstance"], "function", ["None"], ["def", "is_listy", "(", "x", ")", ":", "\n", "    ", "return", "isinstance", "(", "x", ",", "(", "tuple", ",", "list", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.hook._hook_inner": [[80, 83], ["isinstance", "hook.is_listy", "list"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.hook.is_listy"], ["", "", "def", "_hook_inner", "(", "m", ",", "i", ",", "o", ")", ":", "\n", "    ", "return", "o", "if", "isinstance", "(", "\n", "o", ",", "paddle", ".", "static", ".", "Variable", ")", "else", "o", "if", "is_listy", "(", "o", ")", "else", "list", "(", "o", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.hook.hook_output": [[85, 88], ["hook.Hook"], "function", ["None"], ["", "def", "hook_output", "(", "module", ",", "detach", "=", "True", ",", "grad", "=", "False", ")", ":", "\n", "    ", "\"Return a `Hook` that stores activations of `module` in `self.stored`\"", "\n", "return", "Hook", "(", "module", ",", "_hook_inner", ",", "detach", "=", "detach", ",", "is_forward", "=", "not", "grad", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.hook.hook_outputs": [[90, 93], ["hook.Hooks"], "function", ["None"], ["", "def", "hook_outputs", "(", "modules", ",", "detach", "=", "True", ",", "grad", "=", "False", ")", ":", "\n", "    ", "\"Return `Hooks` that store activations of all `modules` in `self.stored`\"", "\n", "return", "Hooks", "(", "modules", ",", "_hook_inner", ",", "detach", "=", "detach", ",", "is_forward", "=", "not", "grad", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.hook.model_sizes": [[95, 100], ["hook.hook_outputs", "hook.dummy_eval"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.hook.hook_outputs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.hook.dummy_eval"], ["", "def", "model_sizes", "(", "m", ",", "size", "=", "(", "64", ",", "64", ")", ")", ":", "\n", "    ", "\"Pass a dummy input through the model `m` to get the various sizes of activations.\"", "\n", "with", "hook_outputs", "(", "m", ")", "as", "hooks", ":", "\n", "        ", "x", "=", "dummy_eval", "(", "m", ",", "size", ")", "\n", "return", "[", "o", ".", "stored", ".", "shape", "for", "o", "in", "hooks", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.hook.dummy_eval": [[102, 106], ["m.eval", "m", "hook.dummy_batch"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.hook.dummy_batch"], ["", "", "def", "dummy_eval", "(", "m", ",", "size", "=", "(", "64", ",", "64", ")", ")", ":", "\n", "    ", "\"Pass a `dummy_batch` in evaluation mode in `m` with `size`.\"", "\n", "m", ".", "eval", "(", ")", "\n", "return", "m", "(", "dummy_batch", "(", "size", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.hook.dummy_batch": [[108, 112], ["paddle.to_tensor", "paddle.to_tensor", "numpy.random.rand().astype", "numpy.random.rand"], "function", ["None"], ["", "def", "dummy_batch", "(", "size", "=", "(", "64", ",", "64", ")", ",", "ch_in", "=", "3", ")", ":", "\n", "    ", "\"Create a dummy batch to go through `m` with `size`.\"", "\n", "arr", "=", "np", ".", "random", ".", "rand", "(", "1", ",", "ch_in", ",", "*", "size", ")", ".", "astype", "(", "'float32'", ")", "*", "2", "-", "1", "\n", "return", "paddle", ".", "to_tensor", "(", "arr", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mobile_resnet.MobileResnetGenerator.__init__": [[23, 94], ["paddle.Layer.__init__", "modules.norm.build_norm_layer", "paddle.LayerList", "paddle.LayerList", "range", "range", "range", "mobile_resnet.MobileResnetGenerator.model.extend", "mobile_resnet.MobileResnetGenerator.model.extend", "mobile_resnet.MobileResnetGenerator.model.extend", "type", "mobile_resnet.MobileResnetGenerator.model.extend", "mobile_resnet.MobileResnetGenerator.model.extend", "mobile_resnet.MobileResnetGenerator.model.extend", "paddle.ReflectionPad2d", "paddle.ReflectionPad2d", "paddle.Conv2D", "paddle.Conv2D", "modules.norm.build_norm_layer.", "paddle.ReLU", "paddle.ReLU", "paddle.ReflectionPad2d", "paddle.ReflectionPad2d", "paddle.Conv2D", "paddle.Conv2D", "paddle.Tanh", "paddle.Tanh", "int", "paddle.Conv2D", "paddle.Conv2D", "modules.norm.build_norm_layer.", "paddle.ReLU", "paddle.ReLU", "mobile_resnet.MobileResnetBlock", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "modules.norm.build_norm_layer.", "paddle.ReLU", "paddle.ReLU", "int", "int"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.norm.build_norm_layer", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.extend", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.extend", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.extend", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.extend", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.extend", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.extend"], ["    ", "def", "__init__", "(", "self", ",", "\n", "input_channel", ",", "\n", "output_nc", ",", "\n", "ngf", "=", "64", ",", "\n", "norm_type", "=", "'instance'", ",", "\n", "use_dropout", "=", "False", ",", "\n", "n_blocks", "=", "9", ",", "\n", "padding_type", "=", "'reflect'", ")", ":", "\n", "        ", "super", "(", "MobileResnetGenerator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "norm_layer", "=", "build_norm_layer", "(", "norm_type", ")", "\n", "if", "type", "(", "norm_layer", ")", "==", "functools", ".", "partial", ":", "\n", "            ", "use_bias", "=", "norm_layer", ".", "func", "==", "nn", ".", "InstanceNorm2D", "\n", "", "else", ":", "\n", "            ", "use_bias", "=", "norm_layer", "==", "nn", ".", "InstanceNorm2D", "\n", "\n", "", "self", ".", "model", "=", "nn", ".", "LayerList", "(", "[", "\n", "nn", ".", "ReflectionPad2d", "(", "[", "3", ",", "3", ",", "3", ",", "3", "]", ")", ",", "\n", "nn", ".", "Conv2D", "(", "input_channel", ",", "\n", "int", "(", "ngf", ")", ",", "\n", "kernel_size", "=", "7", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "use_bias", ")", ",", "\n", "norm_layer", "(", "ngf", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", ")", "\n", "\n", "n_downsampling", "=", "2", "\n", "for", "i", "in", "range", "(", "n_downsampling", ")", ":", "\n", "            ", "mult", "=", "2", "**", "i", "\n", "self", ".", "model", ".", "extend", "(", "[", "\n", "nn", ".", "Conv2D", "(", "ngf", "*", "mult", ",", "\n", "ngf", "*", "mult", "*", "2", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "use_bias", ")", ",", "\n", "norm_layer", "(", "ngf", "*", "mult", "*", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", ")", "\n", "\n", "", "mult", "=", "2", "**", "n_downsampling", "\n", "\n", "for", "i", "in", "range", "(", "n_blocks", ")", ":", "\n", "            ", "self", ".", "model", ".", "extend", "(", "[", "\n", "MobileResnetBlock", "(", "ngf", "*", "mult", ",", "\n", "ngf", "*", "mult", ",", "\n", "padding_type", "=", "padding_type", ",", "\n", "norm_layer", "=", "norm_layer", ",", "\n", "use_dropout", "=", "use_dropout", ",", "\n", "use_bias", "=", "use_bias", ")", "\n", "]", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "n_downsampling", ")", ":", "\n", "            ", "mult", "=", "2", "**", "(", "n_downsampling", "-", "i", ")", "\n", "output_size", "=", "(", "i", "+", "1", ")", "*", "128", "\n", "self", ".", "model", ".", "extend", "(", "[", "\n", "nn", ".", "Conv2DTranspose", "(", "ngf", "*", "mult", ",", "\n", "int", "(", "ngf", "*", "mult", "/", "2", ")", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "output_padding", "=", "1", ",", "\n", "bias_attr", "=", "use_bias", ")", ",", "\n", "norm_layer", "(", "int", "(", "ngf", "*", "mult", "/", "2", ")", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", ")", "\n", "\n", "", "self", ".", "model", ".", "extend", "(", "[", "nn", ".", "ReflectionPad2d", "(", "[", "3", ",", "3", ",", "3", ",", "3", "]", ")", "]", ")", "\n", "self", ".", "model", ".", "extend", "(", "[", "nn", ".", "Conv2D", "(", "ngf", ",", "output_nc", ",", "kernel_size", "=", "7", ",", "padding", "=", "0", ")", "]", ")", "\n", "self", ".", "model", ".", "extend", "(", "[", "nn", ".", "Tanh", "(", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mobile_resnet.MobileResnetGenerator.forward": [[95, 100], ["sublayer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "y", "=", "inputs", "\n", "for", "sublayer", "in", "self", ".", "model", ":", "\n", "            ", "y", "=", "sublayer", "(", "y", ")", "\n", "", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mobile_resnet.MobileResnetBlock.__init__": [[103, 150], ["paddle.Layer.__init__", "paddle.LayerList", "paddle.LayerList", "mobile_resnet.MobileResnetBlock.conv_block.extend", "mobile_resnet.MobileResnetBlock.conv_block.extend", "mobile_resnet.MobileResnetBlock.conv_block.extend", "mobile_resnet.MobileResnetBlock.conv_block.extend", "mobile_resnet.MobileResnetBlock.conv_block.extend", "mobile_resnet.MobileResnetBlock.conv_block.extend", "mobile_resnet.SeparableConv2D", "norm_layer", "paddle.ReLU", "paddle.ReLU", "paddle.Dropout", "paddle.Dropout", "mobile_resnet.MobileResnetBlock.conv_block.extend", "mobile_resnet.SeparableConv2D", "norm_layer", "paddle.Pad2D", "paddle.Pad2D", "NotImplementedError", "paddle.ReflectionPad2d", "paddle.ReflectionPad2d", "NotImplementedError", "paddle.Pad2D", "paddle.Pad2D", "paddle.ReplicationPad2d", "paddle.ReplicationPad2d"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.extend", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.extend", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.extend", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.extend", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.extend", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.extend", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.extend"], ["    ", "def", "__init__", "(", "self", ",", "in_c", ",", "out_c", ",", "padding_type", ",", "norm_layer", ",", "use_dropout", ",", "\n", "use_bias", ")", ":", "\n", "        ", "super", "(", "MobileResnetBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "padding_type", "=", "padding_type", "\n", "self", ".", "use_dropout", "=", "use_dropout", "\n", "self", ".", "conv_block", "=", "nn", ".", "LayerList", "(", "[", "]", ")", "\n", "\n", "p", "=", "0", "\n", "if", "self", ".", "padding_type", "==", "'reflect'", ":", "\n", "            ", "self", ".", "conv_block", ".", "extend", "(", "[", "nn", ".", "Pad2D", "(", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "'reflect'", ")", "]", ")", "\n", "", "elif", "self", ".", "padding_type", "==", "'replicate'", ":", "\n", "            ", "self", ".", "conv_block", ".", "extend", "(", "[", "nn", ".", "Pad2D", "(", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "'replicate'", ")", "]", ")", "\n", "", "elif", "self", ".", "padding_type", "==", "'zero'", ":", "\n", "            ", "p", "=", "1", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", "'padding [%s] is not implemented'", "%", "\n", "self", ".", "padding_type", ")", "\n", "\n", "", "self", ".", "conv_block", ".", "extend", "(", "[", "\n", "SeparableConv2D", "(", "num_channels", "=", "in_c", ",", "\n", "num_filters", "=", "out_c", ",", "\n", "filter_size", "=", "3", ",", "\n", "padding", "=", "p", ",", "\n", "stride", "=", "1", ")", ",", "\n", "norm_layer", "(", "out_c", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", ")", "\n", "\n", "self", ".", "conv_block", ".", "extend", "(", "[", "nn", ".", "Dropout", "(", "0.5", ")", "]", ")", "\n", "\n", "if", "self", ".", "padding_type", "==", "'reflect'", ":", "\n", "            ", "self", ".", "conv_block", ".", "extend", "(", "[", "nn", ".", "ReflectionPad2d", "(", "[", "1", ",", "1", ",", "1", ",", "1", "]", ")", "]", ")", "\n", "", "elif", "self", ".", "padding_type", "==", "'replicate'", ":", "\n", "            ", "self", ".", "conv_block", ".", "extend", "(", "[", "nn", ".", "ReplicationPad2d", "(", "[", "1", ",", "1", ",", "1", ",", "1", "]", ")", "]", ")", "\n", "", "elif", "self", ".", "padding_type", "==", "'zero'", ":", "\n", "            ", "p", "=", "1", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", "'padding [%s] is not implemented'", "%", "\n", "self", ".", "padding_type", ")", "\n", "\n", "", "self", ".", "conv_block", ".", "extend", "(", "[", "\n", "SeparableConv2D", "(", "num_channels", "=", "out_c", ",", "\n", "num_filters", "=", "in_c", ",", "\n", "filter_size", "=", "3", ",", "\n", "padding", "=", "p", ",", "\n", "stride", "=", "1", ")", ",", "\n", "norm_layer", "(", "in_c", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mobile_resnet.MobileResnetBlock.forward": [[152, 158], ["sublayer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "y", "=", "inputs", "\n", "for", "sublayer", "in", "self", ".", "conv_block", ":", "\n", "            ", "y", "=", "sublayer", "(", "y", ")", "\n", "", "out", "=", "inputs", "+", "y", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mobile_resnet.SeparableConv2D.__init__": [[161, 197], ["paddle.Layer.__init__", "paddle.LayerList", "paddle.LayerList", "mobile_resnet.SeparableConv2D.conv.extend", "mobile_resnet.SeparableConv2D.conv.extend", "paddle.Conv2D", "paddle.Conv2D", "norm_layer", "paddle.Conv2D", "paddle.Conv2D", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.initializer.Normal", "paddle.initializer.Normal", "paddle.initializer.Normal", "paddle.initializer.Normal"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.extend", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.extend"], ["    ", "def", "__init__", "(", "self", ",", "\n", "num_channels", ",", "\n", "num_filters", ",", "\n", "filter_size", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "norm_layer", "=", "nn", ".", "InstanceNorm2D", ",", "\n", "use_bias", "=", "True", ",", "\n", "scale_factor", "=", "1", ",", "\n", "stddev", "=", "0.02", ")", ":", "\n", "        ", "super", "(", "SeparableConv2D", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv", "=", "nn", ".", "LayerList", "(", "[", "\n", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "num_channels", ",", "\n", "out_channels", "=", "num_channels", "*", "scale_factor", ",", "\n", "kernel_size", "=", "filter_size", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "\n", "groups", "=", "num_channels", ",", "\n", "weight_attr", "=", "paddle", ".", "ParamAttr", "(", "\n", "initializer", "=", "nn", ".", "initializer", ".", "Normal", "(", "loc", "=", "0.0", ",", "scale", "=", "stddev", ")", ")", ",", "\n", "bias_attr", "=", "use_bias", ")", "\n", "]", ")", "\n", "\n", "self", ".", "conv", ".", "extend", "(", "[", "norm_layer", "(", "num_channels", "*", "scale_factor", ")", "]", ")", "\n", "\n", "self", ".", "conv", ".", "extend", "(", "[", "\n", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "num_channels", "*", "scale_factor", ",", "\n", "out_channels", "=", "num_filters", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "weight_attr", "=", "paddle", ".", "ParamAttr", "(", "\n", "initializer", "=", "nn", ".", "initializer", ".", "Normal", "(", "loc", "=", "0.0", ",", "scale", "=", "stddev", ")", ")", ",", "\n", "bias_attr", "=", "use_bias", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mobile_resnet.SeparableConv2D.forward": [[199, 203], ["sublayer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "for", "sublayer", "in", "self", ".", "conv", ":", "\n", "            ", "inputs", "=", "sublayer", "(", "inputs", ")", "\n", "", "return", "inputs", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.iconvsr.IconVSR.__init__": [[48, 111], ["paddle.Layer.__init__", "basicvsr.SPyNet", "utils.download.get_path_from_url", "iconvsr.IconVSR.spynet.set_state_dict", "iconvsr.EDVRFeatureExtractor", "utils.download.get_path_from_url", "iconvsr.IconVSR.edvr.set_state_dict", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "basicvsr.ResidualBlocksWithInputConv", "basicvsr.ResidualBlocksWithInputConv", "basicvsr.PixelShufflePack", "basicvsr.PixelShufflePack", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["def", "__init__", "(", "self", ",", "\n", "mid_channels", "=", "64", ",", "\n", "num_blocks", "=", "30", ",", "\n", "padding", "=", "2", ",", "\n", "keyframe_stride", "=", "5", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "mid_channels", "=", "mid_channels", "\n", "self", ".", "padding", "=", "padding", "\n", "self", ".", "keyframe_stride", "=", "keyframe_stride", "\n", "\n", "# optical flow network for feature alignment", "\n", "self", ".", "spynet", "=", "SPyNet", "(", ")", "\n", "weight_path", "=", "get_path_from_url", "(", "\n", "'https://paddlegan.bj.bcebos.com/models/spynet.pdparams'", ")", "\n", "self", ".", "spynet", ".", "set_state_dict", "(", "paddle", ".", "load", "(", "weight_path", ")", ")", "\n", "\n", "# information-refill", "\n", "self", ".", "edvr", "=", "EDVRFeatureExtractor", "(", "num_frames", "=", "padding", "*", "2", "+", "1", ",", "\n", "center_frame_idx", "=", "padding", ")", "\n", "\n", "edvr_wight_path", "=", "get_path_from_url", "(", "\n", "'https://paddlegan.bj.bcebos.com/models/edvrm.pdparams'", ")", "\n", "self", ".", "edvr", ".", "set_state_dict", "(", "paddle", ".", "load", "(", "edvr_wight_path", ")", ")", "\n", "\n", "self", ".", "backward_fusion", "=", "nn", ".", "Conv2D", "(", "2", "*", "mid_channels", ",", "\n", "mid_channels", ",", "\n", "3", ",", "\n", "1", ",", "\n", "1", ",", "\n", "bias_attr", "=", "True", ")", "\n", "self", ".", "forward_fusion", "=", "nn", ".", "Conv2D", "(", "2", "*", "mid_channels", ",", "\n", "mid_channels", ",", "\n", "3", ",", "\n", "1", ",", "\n", "1", ",", "\n", "bias_attr", "=", "True", ")", "\n", "\n", "# propagation branches", "\n", "self", ".", "backward_resblocks", "=", "ResidualBlocksWithInputConv", "(", "\n", "mid_channels", "+", "3", ",", "mid_channels", ",", "num_blocks", ")", "\n", "self", ".", "forward_resblocks", "=", "ResidualBlocksWithInputConv", "(", "\n", "2", "*", "mid_channels", "+", "3", ",", "mid_channels", ",", "num_blocks", ")", "\n", "\n", "# upsample", "\n", "# self.fusion = nn.Conv2D(mid_channels * 2, mid_channels, 1, 1, 0)", "\n", "self", ".", "upsample1", "=", "PixelShufflePack", "(", "mid_channels", ",", "\n", "mid_channels", ",", "\n", "2", ",", "\n", "upsample_kernel", "=", "3", ")", "\n", "self", ".", "upsample2", "=", "PixelShufflePack", "(", "mid_channels", ",", "\n", "64", ",", "\n", "2", ",", "\n", "upsample_kernel", "=", "3", ")", "\n", "self", ".", "conv_hr", "=", "nn", ".", "Conv2D", "(", "64", ",", "64", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "conv_last", "=", "nn", ".", "Conv2D", "(", "64", ",", "3", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "img_upsample", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "4", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "False", ")", "\n", "\n", "# activation function", "\n", "self", ".", "lrelu", "=", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.iconvsr.IconVSR.spatial_padding": [[112, 136], ["paddle.pad.reshape", "paddle.pad", "paddle.pad", "paddle.pad", "paddle.pad.reshape"], "methods", ["None"], ["", "def", "spatial_padding", "(", "self", ",", "lrs", ")", ":", "\n", "        ", "\"\"\" Apply pdding spatially.\n\n        Since the PCD module in EDVR requires that the resolution is a multiple\n        of 4, we apply padding to the input LR images if their resolution is\n        not divisible by 4.\n\n        Args:\n            lrs (Tensor): Input LR sequence with shape (n, t, c, h, w).\n\n        Returns:\n            Tensor: Padded LR sequence with shape (n, t, c, h_pad, w_pad).\n\n        \"\"\"", "\n", "n", ",", "t", ",", "c", ",", "h", ",", "w", "=", "lrs", ".", "shape", "\n", "\n", "pad_h", "=", "(", "4", "-", "h", "%", "4", ")", "%", "4", "\n", "pad_w", "=", "(", "4", "-", "w", "%", "4", ")", "%", "4", "\n", "\n", "# padding", "\n", "lrs", "=", "lrs", ".", "reshape", "(", "[", "-", "1", ",", "c", ",", "h", ",", "w", "]", ")", "\n", "lrs", "=", "F", ".", "pad", "(", "lrs", ",", "[", "0", ",", "pad_w", ",", "0", ",", "pad_h", "]", ",", "mode", "=", "'reflect'", ")", "\n", "\n", "return", "lrs", ".", "reshape", "(", "[", "n", ",", "t", ",", "c", ",", "h", "+", "pad_h", ",", "w", "+", "pad_w", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.iconvsr.IconVSR.check_if_mirror_extended": [[137, 156], ["paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.flip", "paddle.flip", "paddle.flip", "paddle.flip", "paddle.flip", "paddle.flip", "paddle.flip", "paddle.flip", "paddle.flip", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm"], ["", "def", "check_if_mirror_extended", "(", "self", ",", "lrs", ")", ":", "\n", "        ", "\"\"\"Check whether the input is a mirror-extended sequence.\n\n        If mirror-extended, the i-th (i=0, ..., t-1) frame is equal to the\n        (t-1-i)-th frame.\n\n        Args:\n            lrs (tensor): Input LR images with shape (n, t, c, h, w)\n\n        Returns:\n            bool: whether the input is a mirror-extended sequence\n        \"\"\"", "\n", "\n", "self", ".", "is_mirror_extended", "=", "False", "\n", "if", "lrs", ".", "shape", "[", "1", "]", "%", "2", "==", "0", ":", "\n", "            ", "lrs_1", ",", "lrs_2", "=", "paddle", ".", "chunk", "(", "lrs", ",", "2", ",", "axis", "=", "1", ")", "\n", "lrs_2", "=", "paddle", ".", "flip", "(", "lrs_2", ",", "[", "1", "]", ")", "\n", "if", "paddle", ".", "norm", "(", "lrs_1", "-", "lrs_2", ")", "==", "0", ":", "\n", "                ", "self", ".", "is_mirror_extended", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.iconvsr.IconVSR.compute_refill_features": [[157, 182], ["paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "iconvsr.IconVSR.edvr"], "methods", ["None"], ["", "", "", "def", "compute_refill_features", "(", "self", ",", "lrs", ",", "keyframe_idx", ")", ":", "\n", "        ", "\"\"\" Compute keyframe features for information-refill.\n        Since EDVR-M is used, padding is performed before feature computation.\n        Args:\n            lrs (Tensor): Input LR images with shape (n, t, c, h, w)\n            keyframe_idx (list(int)): The indices specifying the keyframes.\n        Return:\n            dict(Tensor): The keyframe features. Each key corresponds to the\n                indices in keyframe_idx.\n        \"\"\"", "\n", "\n", "if", "self", ".", "padding", "==", "2", ":", "\n", "            ", "lrs", "=", "[", "\n", "lrs", "[", ":", ",", "4", ":", "5", ",", ":", ",", ":", "]", ",", "lrs", "[", ":", ",", "3", ":", "4", ",", ":", ",", ":", "]", ",", "lrs", ",", "lrs", "[", ":", ",", "-", "4", ":", "-", "3", ",", ":", ",", ":", "]", ",", "\n", "lrs", "[", ":", ",", "-", "5", ":", "-", "4", ",", ":", ",", ":", "]", "\n", "]", "\n", "", "elif", "self", ".", "padding", "==", "3", ":", "\n", "            ", "lrs", "=", "[", "lrs", "[", ":", ",", "[", "6", ",", "5", ",", "4", "]", "]", ",", "lrs", ",", "lrs", "[", ":", ",", "[", "-", "5", ",", "-", "6", ",", "-", "7", "]", "]", "]", "\n", "", "lrs", "=", "paddle", ".", "concat", "(", "lrs", ",", "axis", "=", "1", ")", "\n", "\n", "num_frames", "=", "2", "*", "self", ".", "padding", "+", "1", "\n", "feats_refill", "=", "{", "}", "\n", "for", "i", "in", "keyframe_idx", ":", "\n", "            ", "feats_refill", "[", "i", "]", "=", "self", ".", "edvr", "(", "lrs", "[", ":", ",", "i", ":", "i", "+", "num_frames", "]", ")", "\n", "", "return", "feats_refill", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.iconvsr.IconVSR.compute_flow": [[183, 213], ["lrs[].reshape", "lrs[].reshape", "iconvsr.IconVSR.spynet().reshape", "iconvsr.IconVSR.spynet().reshape", "iconvsr.IconVSR.spynet", "iconvsr.IconVSR.spynet"], "methods", ["None"], ["", "def", "compute_flow", "(", "self", ",", "lrs", ")", ":", "\n", "        ", "\"\"\"Compute optical flow using SPyNet for feature warping.\n\n        Note that if the input is an mirror-extended sequence, 'flows_forward'\n        is not needed, since it is equal to 'flows_backward.flip(1)'.\n\n        Args:\n            lrs (tensor): Input LR images with shape (n, t, c, h, w)\n\n        Return:\n            tuple(Tensor): Optical flow. 'flows_forward' corresponds to the\n                flows used for forward-time propagation (current to previous).\n                'flows_backward' corresponds to the flows used for\n                backward-time propagation (current to next).\n        \"\"\"", "\n", "\n", "n", ",", "t", ",", "c", ",", "h", ",", "w", "=", "lrs", ".", "shape", "\n", "\n", "lrs_1", "=", "lrs", "[", ":", ",", ":", "-", "1", ",", ":", ",", ":", ",", ":", "]", ".", "reshape", "(", "[", "-", "1", ",", "c", ",", "h", ",", "w", "]", ")", "\n", "lrs_2", "=", "lrs", "[", ":", ",", "1", ":", ",", ":", ",", ":", ",", ":", "]", ".", "reshape", "(", "[", "-", "1", ",", "c", ",", "h", ",", "w", "]", ")", "\n", "\n", "flows_backward", "=", "self", ".", "spynet", "(", "lrs_1", ",", "lrs_2", ")", ".", "reshape", "(", "[", "n", ",", "t", "-", "1", ",", "2", ",", "h", ",", "w", "]", ")", "\n", "\n", "if", "self", ".", "is_mirror_extended", ":", "# flows_forward = flows_backward.flip(1)", "\n", "            ", "flows_forward", "=", "None", "\n", "", "else", ":", "\n", "            ", "flows_forward", "=", "self", ".", "spynet", "(", "lrs_2", ",", "\n", "lrs_1", ")", ".", "reshape", "(", "[", "n", ",", "t", "-", "1", ",", "2", ",", "h", ",", "w", "]", ")", "\n", "\n", "", "return", "flows_forward", ",", "flows_backward", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.iconvsr.IconVSR.forward": [[214, 297], ["iconvsr.IconVSR.check_if_mirror_extended", "iconvsr.IconVSR.spatial_padding", "list", "iconvsr.IconVSR.compute_flow", "iconvsr.IconVSR.compute_refill_features", "iconvsr.IconVSR.compute_flow", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "range", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "range", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "range", "list.append", "numpy.zeros", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "iconvsr.IconVSR.backward_resblocks", "outputs.append", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "iconvsr.IconVSR.forward_resblocks", "iconvsr.IconVSR.lrelu", "iconvsr.IconVSR.lrelu", "iconvsr.IconVSR.lrelu", "iconvsr.IconVSR.conv_last", "iconvsr.IconVSR.img_upsample", "basicvsr.flow_warp", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "iconvsr.IconVSR.backward_fusion", "basicvsr.flow_warp", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "iconvsr.IconVSR.forward_fusion", "iconvsr.IconVSR.upsample1", "iconvsr.IconVSR.upsample2", "iconvsr.IconVSR.conv_hr", "flow.transpose", "flow.transpose"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.MSVSR.check_if_mirror_extended", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.iconvsr.IconVSR.spatial_padding", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.ModifiedSPyNet.compute_flow", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.iconvsr.IconVSR.compute_refill_features", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.ModifiedSPyNet.compute_flow", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.flow_warp", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.flow_warp"], ["", "def", "forward", "(", "self", ",", "lrs", ")", ":", "\n", "        ", "\"\"\"Forward function for BasicVSR.\n\n        Args:\n            lrs (Tensor): Input LR sequence with shape (n, t, c, h, w).\n\n        Returns:\n            Tensor: Output HR sequence with shape (n, t, c, 4h, 4w).\n        \"\"\"", "\n", "\n", "n", ",", "t", ",", "c", ",", "h_input", ",", "w_input", "=", "lrs", ".", "shape", "\n", "assert", "h_input", ">=", "64", "and", "w_input", ">=", "64", ",", "(", "\n", "'The height and width of inputs should be at least 64, '", "\n", "f'but got {h_input} and {w_input}.'", ")", "\n", "\n", "# check whether the input is an extended sequence", "\n", "self", ".", "check_if_mirror_extended", "(", "lrs", ")", "\n", "\n", "lrs", "=", "self", ".", "spatial_padding", "(", "lrs", ")", "\n", "h", ",", "w", "=", "lrs", ".", "shape", "[", "3", "]", ",", "lrs", ".", "shape", "[", "4", "]", "\n", "\n", "# get the keyframe indices for information-refill", "\n", "keyframe_idx", "=", "list", "(", "range", "(", "0", ",", "t", ",", "self", ".", "keyframe_stride", ")", ")", "\n", "if", "keyframe_idx", "[", "-", "1", "]", "!=", "t", "-", "1", ":", "\n", "            ", "keyframe_idx", ".", "append", "(", "t", "-", "1", ")", "# the last frame must be a keyframe", "\n", "\n", "# compute optical flow and compute features for information-refill", "\n", "", "flows_forward", ",", "flows_backward", "=", "self", ".", "compute_flow", "(", "lrs", ")", "\n", "feats_refill", "=", "self", ".", "compute_refill_features", "(", "lrs", ",", "keyframe_idx", ")", "\n", "# compute optical flow", "\n", "flows_forward", ",", "flows_backward", "=", "self", ".", "compute_flow", "(", "lrs", ")", "\n", "\n", "# backward-time propgation", "\n", "outputs", "=", "[", "]", "\n", "\n", "feat_prop", "=", "paddle", ".", "to_tensor", "(", "\n", "np", ".", "zeros", "(", "[", "n", ",", "self", ".", "mid_channels", ",", "h", ",", "w", "]", ",", "'float32'", ")", ")", "\n", "for", "i", "in", "range", "(", "t", "-", "1", ",", "-", "1", ",", "-", "1", ")", ":", "\n", "# no warping required for the last timestep", "\n", "            ", "if", "i", "<", "t", "-", "1", ":", "\n", "                ", "flow", "=", "flows_backward", "[", ":", ",", "i", ",", ":", ",", ":", ",", ":", "]", "\n", "feat_prop", "=", "flow_warp", "(", "feat_prop", ",", "flow", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", ")", "\n", "\n", "# information refill", "\n", "", "if", "i", "in", "keyframe_idx", ":", "\n", "                ", "feat_prop", "=", "paddle", ".", "concat", "(", "[", "feat_prop", ",", "feats_refill", "[", "i", "]", "]", ",", "axis", "=", "1", ")", "\n", "feat_prop", "=", "self", ".", "backward_fusion", "(", "feat_prop", ")", "\n", "\n", "", "feat_prop", "=", "paddle", ".", "concat", "(", "[", "lrs", "[", ":", ",", "i", ",", ":", ",", ":", ",", ":", "]", ",", "feat_prop", "]", ",", "axis", "=", "1", ")", "\n", "feat_prop", "=", "self", ".", "backward_resblocks", "(", "feat_prop", ")", "\n", "\n", "outputs", ".", "append", "(", "feat_prop", ")", "\n", "", "outputs", "=", "outputs", "[", ":", ":", "-", "1", "]", "\n", "\n", "# forward-time propagation and upsampling", "\n", "feat_prop", "=", "paddle", ".", "zeros_like", "(", "feat_prop", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "t", ")", ":", "\n", "            ", "lr_curr", "=", "lrs", "[", ":", ",", "i", ",", ":", ",", ":", ",", ":", "]", "\n", "if", "i", ">", "0", ":", "# no warping required for the first timestep", "\n", "                ", "if", "flows_forward", "is", "not", "None", ":", "\n", "                    ", "flow", "=", "flows_forward", "[", ":", ",", "i", "-", "1", ",", ":", ",", ":", ",", ":", "]", "\n", "", "else", ":", "\n", "                    ", "flow", "=", "flows_backward", "[", ":", ",", "-", "i", ",", ":", ",", ":", ",", ":", "]", "\n", "", "feat_prop", "=", "flow_warp", "(", "feat_prop", ",", "flow", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", ")", "\n", "\n", "# information refill", "\n", "", "if", "i", "in", "keyframe_idx", ":", "\n", "                ", "feat_prop", "=", "paddle", ".", "concat", "(", "[", "feat_prop", ",", "feats_refill", "[", "i", "]", "]", ",", "axis", "=", "1", ")", "\n", "feat_prop", "=", "self", ".", "forward_fusion", "(", "feat_prop", ")", "\n", "\n", "", "feat_prop", "=", "paddle", ".", "concat", "(", "[", "lr_curr", ",", "outputs", "[", "i", "]", ",", "feat_prop", "]", ",", "axis", "=", "1", ")", "\n", "feat_prop", "=", "self", ".", "forward_resblocks", "(", "feat_prop", ")", "\n", "\n", "# upsampling given the backward and forward features", "\n", "out", "=", "self", ".", "lrelu", "(", "self", ".", "upsample1", "(", "feat_prop", ")", ")", "\n", "out", "=", "self", ".", "lrelu", "(", "self", ".", "upsample2", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "lrelu", "(", "self", ".", "conv_hr", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "conv_last", "(", "out", ")", "\n", "base", "=", "self", ".", "img_upsample", "(", "lr_curr", ")", "\n", "out", "+=", "base", "\n", "outputs", "[", "i", "]", "=", "out", "\n", "\n", "", "return", "paddle", ".", "stack", "(", "outputs", ",", "axis", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.iconvsr.EDVRFeatureExtractor.__init__": [[322, 362], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "iconvsr.make_layer", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "edvr.PCDAlign", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "edvr.TSAFusion", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.rrdb_net.make_layer"], ["def", "__init__", "(", "self", ",", "\n", "in_channels", "=", "3", ",", "\n", "out_channel", "=", "3", ",", "\n", "mid_channels", "=", "64", ",", "\n", "num_frames", "=", "5", ",", "\n", "deform_groups", "=", "8", ",", "\n", "num_blocks_extraction", "=", "5", ",", "\n", "num_blocks_reconstruction", "=", "10", ",", "\n", "center_frame_idx", "=", "2", ",", "\n", "with_tsa", "=", "True", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "center_frame_idx", "=", "center_frame_idx", "\n", "self", ".", "with_tsa", "=", "with_tsa", "\n", "\n", "self", ".", "conv_first", "=", "nn", ".", "Conv2D", "(", "in_channels", ",", "mid_channels", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "feature_extraction", "=", "make_layer", "(", "ResidualBlockNoBN", ",", "\n", "num_blocks_extraction", ",", "\n", "nf", "=", "mid_channels", ")", "\n", "\n", "# generate pyramid features", "\n", "self", ".", "feat_l2_conv1", "=", "nn", ".", "Conv2D", "(", "mid_channels", ",", "mid_channels", ",", "3", ",", "2", ",", "1", ")", "\n", "self", ".", "feat_l2_conv2", "=", "nn", ".", "Conv2D", "(", "mid_channels", ",", "mid_channels", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "feat_l3_conv1", "=", "nn", ".", "Conv2D", "(", "mid_channels", ",", "mid_channels", ",", "3", ",", "2", ",", "1", ")", "\n", "self", ".", "feat_l3_conv2", "=", "nn", ".", "Conv2D", "(", "mid_channels", ",", "mid_channels", ",", "3", ",", "1", ",", "1", ")", "\n", "\n", "# pcd alignment", "\n", "self", ".", "pcd_alignment", "=", "PCDAlign", "(", "nf", "=", "mid_channels", ",", "groups", "=", "deform_groups", ")", "\n", "# fusion", "\n", "if", "self", ".", "with_tsa", ":", "\n", "            ", "self", ".", "fusion", "=", "TSAFusion", "(", "nf", "=", "mid_channels", ",", "\n", "nframes", "=", "num_frames", ",", "\n", "center", "=", "self", ".", "center_frame_idx", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "fusion", "=", "nn", ".", "Conv2D", "(", "num_frames", "*", "mid_channels", ",", "mid_channels", ",", "1", ",", "\n", "1", ")", "\n", "\n", "# activation function", "\n", "", "self", ".", "lrelu", "=", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.iconvsr.EDVRFeatureExtractor.forward": [[363, 410], ["iconvsr.EDVRFeatureExtractor.lrelu", "iconvsr.EDVRFeatureExtractor.feature_extraction", "iconvsr.EDVRFeatureExtractor.lrelu", "iconvsr.EDVRFeatureExtractor.lrelu", "l1_feat.reshape.reshape.reshape", "l2_feat.reshape.reshape.reshape", "l3_feat.reshape.reshape.reshape", "range", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "iconvsr.EDVRFeatureExtractor.conv_first", "iconvsr.EDVRFeatureExtractor.feat_l2_conv2", "iconvsr.EDVRFeatureExtractor.feat_l3_conv2", "l1_feat[].clone", "l2_feat[].clone", "l3_feat[].clone", "aligned_feat.reshape.reshape.append", "iconvsr.EDVRFeatureExtractor.fusion", "aligned_feat.reshape.reshape.reshape", "iconvsr.EDVRFeatureExtractor.fusion", "x.reshape", "iconvsr.EDVRFeatureExtractor.lrelu", "iconvsr.EDVRFeatureExtractor.lrelu", "l1_feat[].clone", "l2_feat[].clone", "l3_feat[].clone", "iconvsr.EDVRFeatureExtractor.pcd_alignment", "iconvsr.EDVRFeatureExtractor.feat_l2_conv1", "iconvsr.EDVRFeatureExtractor.feat_l3_conv1"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"Forward function for EDVRFeatureExtractor.\n        Args:\n            x (Tensor): Input tensor with shape (n, t, 3, h, w).\n        Returns:\n            Tensor: Intermediate feature with shape (n, mid_channels, h, w).\n        \"\"\"", "\n", "\n", "n", ",", "t", ",", "c", ",", "h", ",", "w", "=", "x", ".", "shape", "\n", "\n", "# extract LR features", "\n", "# L1", "\n", "l1_feat", "=", "self", ".", "lrelu", "(", "self", ".", "conv_first", "(", "x", ".", "reshape", "(", "[", "-", "1", ",", "c", ",", "h", ",", "w", "]", ")", ")", ")", "\n", "l1_feat", "=", "self", ".", "feature_extraction", "(", "l1_feat", ")", "\n", "# L2", "\n", "l2_feat", "=", "self", ".", "lrelu", "(", "\n", "self", ".", "feat_l2_conv2", "(", "self", ".", "lrelu", "(", "self", ".", "feat_l2_conv1", "(", "l1_feat", ")", ")", ")", ")", "\n", "# L3", "\n", "l3_feat", "=", "self", ".", "lrelu", "(", "\n", "self", ".", "feat_l3_conv2", "(", "self", ".", "lrelu", "(", "self", ".", "feat_l3_conv1", "(", "l2_feat", ")", ")", ")", ")", "\n", "\n", "l1_feat", "=", "l1_feat", ".", "reshape", "(", "[", "n", ",", "t", ",", "-", "1", ",", "h", ",", "w", "]", ")", "\n", "l2_feat", "=", "l2_feat", ".", "reshape", "(", "[", "n", ",", "t", ",", "-", "1", ",", "h", "//", "2", ",", "w", "//", "2", "]", ")", "\n", "l3_feat", "=", "l3_feat", ".", "reshape", "(", "[", "n", ",", "t", ",", "-", "1", ",", "h", "//", "4", ",", "w", "//", "4", "]", ")", "\n", "\n", "# pcd alignment", "\n", "ref_feats", "=", "[", "# reference feature list", "\n", "l1_feat", "[", ":", ",", "self", ".", "center_frame_idx", ",", ":", ",", ":", ",", ":", "]", ".", "clone", "(", ")", ",", "\n", "l2_feat", "[", ":", ",", "self", ".", "center_frame_idx", ",", ":", ",", ":", ",", ":", "]", ".", "clone", "(", ")", ",", "\n", "l3_feat", "[", ":", ",", "self", ".", "center_frame_idx", ",", ":", ",", ":", ",", ":", "]", ".", "clone", "(", ")", "\n", "]", "\n", "aligned_feat", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "t", ")", ":", "\n", "            ", "neighbor_feats", "=", "[", "\n", "l1_feat", "[", ":", ",", "i", ",", ":", ",", ":", ",", ":", "]", ".", "clone", "(", ")", ",", "l2_feat", "[", ":", ",", "i", ",", ":", ",", ":", ",", ":", "]", ".", "clone", "(", ")", ",", "\n", "l3_feat", "[", ":", ",", "i", ",", ":", ",", ":", ",", ":", "]", ".", "clone", "(", ")", "\n", "]", "\n", "aligned_feat", ".", "append", "(", "self", ".", "pcd_alignment", "(", "neighbor_feats", ",", "ref_feats", ")", ")", "\n", "", "aligned_feat", "=", "paddle", ".", "stack", "(", "aligned_feat", ",", "axis", "=", "1", ")", "# (n, t, c, h, w)", "\n", "\n", "if", "self", ".", "with_tsa", ":", "\n", "            ", "feat", "=", "self", ".", "fusion", "(", "aligned_feat", ")", "\n", "", "else", ":", "\n", "            ", "aligned_feat", "=", "aligned_feat", ".", "reshape", "(", "[", "n", ",", "-", "1", ",", "h", ",", "w", "]", ")", "\n", "feat", "=", "self", ".", "fusion", "(", "aligned_feat", ")", "\n", "\n", "", "return", "feat", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.iconvsr.make_layer": [[412, 424], ["range", "paddle.Sequential", "layers.append", "basicvsr.ResidualBlockNoBN"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "", "def", "make_layer", "(", "block", ",", "num_blocks", ",", "**", "kwarg", ")", ":", "\n", "    ", "\"\"\"Make layers by stacking the same blocks.\n    Args:\n        block (nn.Layer): nn.module class for basic block.\n        num_blocks (int): number of blocks.\n    Returns:\n        nn.Sequential: Stacked blocks in nn.Sequential.\n    \"\"\"", "\n", "layers", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "num_blocks", ")", ":", "\n", "        ", "layers", ".", "append", "(", "block", "(", "**", "kwarg", ")", ")", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.PixelShufflePack.__init__": [[56, 70], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.PixelShuffle", "paddle.PixelShuffle", "paddle.PixelShuffle", "basicvsr.PixelShufflePack.init_weights"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.PixelShufflePack.init_weights"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "scale_factor", ",", "\n", "upsample_kernel", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "out_channels", "=", "out_channels", "\n", "self", ".", "scale_factor", "=", "scale_factor", "\n", "self", ".", "upsample_kernel", "=", "upsample_kernel", "\n", "self", ".", "upsample_conv", "=", "nn", ".", "Conv2D", "(", "self", ".", "in_channels", ",", "\n", "self", ".", "out_channels", "*", "scale_factor", "*", "\n", "scale_factor", ",", "\n", "self", ".", "upsample_kernel", ",", "\n", "padding", "=", "(", "self", ".", "upsample_kernel", "-", "1", ")", "//", "2", ")", "\n", "self", ".", "pixel_shuffle", "=", "nn", ".", "PixelShuffle", "(", "self", ".", "scale_factor", ")", "\n", "self", ".", "init_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.PixelShufflePack.init_weights": [[71, 75], ["basicvsr.default_init_weights"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.edvr.default_init_weights"], ["", "def", "init_weights", "(", "self", ")", ":", "\n", "        ", "\"\"\"Initialize weights for PixelShufflePack.\n        \"\"\"", "\n", "default_init_weights", "(", "self", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.PixelShufflePack.forward": [[76, 88], ["basicvsr.PixelShufflePack.upsample_conv", "basicvsr.PixelShufflePack.pixel_shuffle"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"Forward function for PixelShufflePack.\n\n        Args:\n            x (Tensor): Input tensor with shape (in_channels, c, h, w).\n\n        Returns:\n            Tensor with shape (out_channels, c, scale_factor*h, scale_factor*w).\n        \"\"\"", "\n", "x", "=", "self", ".", "upsample_conv", "(", "x", ")", "\n", "x", "=", "self", ".", "pixel_shuffle", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.ResidualBlockNoBN.__init__": [[118, 127], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "basicvsr.default_init_weights"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.edvr.default_init_weights"], ["def", "__init__", "(", "self", ",", "nf", "=", "64", ",", "res_scale", "=", "1.0", ")", ":", "\n", "        ", "super", "(", "ResidualBlockNoBN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "nf", "=", "nf", "\n", "self", ".", "res_scale", "=", "res_scale", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2D", "(", "self", ".", "nf", ",", "self", ".", "nf", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2D", "(", "self", ".", "nf", ",", "self", ".", "nf", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "if", "self", ".", "res_scale", "==", "1.0", ":", "\n", "            ", "default_init_weights", "(", "[", "self", ".", "conv1", ",", "self", ".", "conv2", "]", ",", "0.1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.ResidualBlockNoBN.forward": [[128, 140], ["basicvsr.ResidualBlockNoBN.conv2", "basicvsr.ResidualBlockNoBN.relu", "basicvsr.ResidualBlockNoBN.conv1"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"Forward function.\n\n        Args:\n            x (Tensor): Input tensor with shape (n, c, h, w).\n\n        Returns:\n            Tensor with shape (n, c, h, w).\n        \"\"\"", "\n", "identity", "=", "x", "\n", "out", "=", "self", ".", "conv2", "(", "self", ".", "relu", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "return", "identity", "+", "out", "*", "self", ".", "res_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.SPyNetBasicModule.__init__": [[194, 223], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "8", ",", "\n", "out_channels", "=", "32", ",", "\n", "kernel_size", "=", "7", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "3", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "32", ",", "\n", "out_channels", "=", "64", ",", "\n", "kernel_size", "=", "7", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "3", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "64", ",", "\n", "out_channels", "=", "32", ",", "\n", "kernel_size", "=", "7", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "3", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "32", ",", "\n", "out_channels", "=", "16", ",", "\n", "kernel_size", "=", "7", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "3", ")", "\n", "self", ".", "conv5", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "16", ",", "\n", "out_channels", "=", "2", ",", "\n", "kernel_size", "=", "7", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "3", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.SPyNetBasicModule.forward": [[224, 240], ["basicvsr.SPyNetBasicModule.relu", "basicvsr.SPyNetBasicModule.relu", "basicvsr.SPyNetBasicModule.relu", "basicvsr.SPyNetBasicModule.relu", "basicvsr.SPyNetBasicModule.conv5", "basicvsr.SPyNetBasicModule.conv1", "basicvsr.SPyNetBasicModule.conv2", "basicvsr.SPyNetBasicModule.conv3", "basicvsr.SPyNetBasicModule.conv4"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu"], ["", "def", "forward", "(", "self", ",", "tensor_input", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            tensor_input (Tensor): Input tensor with shape (b, 8, h, w).\n                8 channels contain:\n                [reference image (3), neighbor image (3), initial flow (2)].\n\n        Returns:\n            Tensor: Refined flow with shape (b, 2, h, w)\n        \"\"\"", "\n", "out", "=", "self", ".", "relu", "(", "self", ".", "conv1", "(", "tensor_input", ")", ")", "\n", "out", "=", "self", ".", "relu", "(", "self", ".", "conv2", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "relu", "(", "self", ".", "conv3", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "relu", "(", "self", ".", "conv4", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "conv5", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.SPyNet.__init__": [[253, 269], ["paddle.Layer.__init__", "basicvsr.SPyNetBasicModule", "basicvsr.SPyNetBasicModule", "basicvsr.SPyNetBasicModule", "basicvsr.SPyNetBasicModule", "basicvsr.SPyNetBasicModule", "basicvsr.SPyNetBasicModule", "basicvsr.SPyNet.register_buffer", "basicvsr.SPyNet.register_buffer", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "basic_module0", "=", "SPyNetBasicModule", "(", ")", "\n", "self", ".", "basic_module1", "=", "SPyNetBasicModule", "(", ")", "\n", "self", ".", "basic_module2", "=", "SPyNetBasicModule", "(", ")", "\n", "self", ".", "basic_module3", "=", "SPyNetBasicModule", "(", ")", "\n", "self", ".", "basic_module4", "=", "SPyNetBasicModule", "(", ")", "\n", "self", ".", "basic_module5", "=", "SPyNetBasicModule", "(", ")", "\n", "\n", "self", ".", "register_buffer", "(", "\n", "'mean'", ",", "\n", "paddle", ".", "to_tensor", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ")", ".", "reshape", "(", "[", "1", ",", "3", ",", "1", ",", "1", "]", ")", ")", "\n", "self", ".", "register_buffer", "(", "\n", "'std'", ",", "\n", "paddle", ".", "to_tensor", "(", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ".", "reshape", "(", "[", "1", ",", "3", ",", "1", ",", "1", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.SPyNet.compute_flow": [[270, 366], ["range", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "ref.append", "supp.append", "basicvsr.SPyNet.basic_module0", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "basicvsr.SPyNet.basic_module1", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "basicvsr.SPyNet.basic_module2", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "basicvsr.SPyNet.basic_module3", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "basicvsr.SPyNet.basic_module4", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "basicvsr.SPyNet.basic_module5", "paddle.avg_pool2d", "paddle.avg_pool2d", "paddle.avg_pool2d", "paddle.avg_pool2d", "paddle.avg_pool2d", "paddle.avg_pool2d", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "basicvsr.flow_warp", "basicvsr.flow_warp", "basicvsr.flow_warp", "basicvsr.flow_warp", "basicvsr.flow_warp", "basicvsr.flow_warp", "flow_up.transpose", "flow_up.transpose", "flow_up.transpose", "flow_up.transpose", "flow_up.transpose", "flow_up.transpose"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.flow_warp", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.flow_warp", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.flow_warp", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.flow_warp", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.flow_warp", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.flow_warp"], ["", "def", "compute_flow", "(", "self", ",", "ref", ",", "supp", ")", ":", "\n", "        ", "\"\"\"Compute flow from ref to supp.\n\n        Note that in this function, the images are already resized to a\n        multiple of 32.\n\n        Args:\n            ref (Tensor): Reference image with shape of (n, 3, h, w).\n            supp (Tensor): Supporting image with shape of (n, 3, h, w).\n\n        Returns:\n            Tensor: Estimated optical flow: (n, 2, h, w).\n        \"\"\"", "\n", "\n", "n", ",", "_", ",", "h", ",", "w", "=", "ref", ".", "shape", "\n", "\n", "# normalize the input images", "\n", "ref", "=", "[", "(", "ref", "-", "self", ".", "mean", ")", "/", "self", ".", "std", "]", "\n", "supp", "=", "[", "(", "supp", "-", "self", ".", "mean", ")", "/", "self", ".", "std", "]", "\n", "\n", "# generate downsampled frames", "\n", "for", "level", "in", "range", "(", "5", ")", ":", "\n", "            ", "ref", ".", "append", "(", "F", ".", "avg_pool2d", "(", "ref", "[", "-", "1", "]", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", ")", "\n", "supp", ".", "append", "(", "F", ".", "avg_pool2d", "(", "supp", "[", "-", "1", "]", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", ")", "\n", "", "ref", "=", "ref", "[", ":", ":", "-", "1", "]", "\n", "supp", "=", "supp", "[", ":", ":", "-", "1", "]", "\n", "\n", "# flow computation", "\n", "flow", "=", "paddle", ".", "zeros", "(", "[", "n", ",", "2", ",", "h", "//", "32", ",", "w", "//", "32", "]", ")", "\n", "\n", "# level=0", "\n", "flow_up", "=", "flow", "\n", "flow", "=", "flow_up", "+", "self", ".", "basic_module0", "(", "\n", "paddle", ".", "concat", "(", "[", "\n", "ref", "[", "0", "]", ",", "\n", "flow_warp", "(", "supp", "[", "0", "]", ",", "\n", "flow_up", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", ",", "\n", "padding_mode", "=", "'border'", ")", ",", "flow_up", "\n", "]", ",", "1", ")", ")", "\n", "\n", "# level=1", "\n", "flow_up", "=", "F", ".", "interpolate", "(", "\n", "flow", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "*", "2.0", "\n", "flow", "=", "flow_up", "+", "self", ".", "basic_module1", "(", "\n", "paddle", ".", "concat", "(", "[", "\n", "ref", "[", "1", "]", ",", "\n", "flow_warp", "(", "supp", "[", "1", "]", ",", "\n", "flow_up", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", ",", "\n", "padding_mode", "=", "'border'", ")", ",", "flow_up", "\n", "]", ",", "1", ")", ")", "\n", "\n", "# level=2", "\n", "flow_up", "=", "F", ".", "interpolate", "(", "\n", "flow", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "*", "2.0", "\n", "flow", "=", "flow_up", "+", "self", ".", "basic_module2", "(", "\n", "paddle", ".", "concat", "(", "[", "\n", "ref", "[", "2", "]", ",", "\n", "flow_warp", "(", "supp", "[", "2", "]", ",", "\n", "flow_up", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", ",", "\n", "padding_mode", "=", "'border'", ")", ",", "flow_up", "\n", "]", ",", "1", ")", ")", "\n", "\n", "# level=3", "\n", "flow_up", "=", "F", ".", "interpolate", "(", "\n", "flow", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "*", "2.0", "\n", "flow", "=", "flow_up", "+", "self", ".", "basic_module3", "(", "\n", "paddle", ".", "concat", "(", "[", "\n", "ref", "[", "3", "]", ",", "\n", "flow_warp", "(", "supp", "[", "3", "]", ",", "\n", "flow_up", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", ",", "\n", "padding_mode", "=", "'border'", ")", ",", "flow_up", "\n", "]", ",", "1", ")", ")", "\n", "\n", "# level=4", "\n", "flow_up", "=", "F", ".", "interpolate", "(", "\n", "flow", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "*", "2.0", "\n", "flow", "=", "flow_up", "+", "self", ".", "basic_module4", "(", "\n", "paddle", ".", "concat", "(", "[", "\n", "ref", "[", "4", "]", ",", "\n", "flow_warp", "(", "supp", "[", "4", "]", ",", "\n", "flow_up", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", ",", "\n", "padding_mode", "=", "'border'", ")", ",", "flow_up", "\n", "]", ",", "1", ")", ")", "\n", "\n", "# level=5", "\n", "flow_up", "=", "F", ".", "interpolate", "(", "\n", "flow", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "*", "2.0", "\n", "flow", "=", "flow_up", "+", "self", ".", "basic_module5", "(", "\n", "paddle", ".", "concat", "(", "[", "\n", "ref", "[", "5", "]", ",", "\n", "flow_warp", "(", "supp", "[", "5", "]", ",", "\n", "flow_up", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", ",", "\n", "padding_mode", "=", "'border'", ")", ",", "flow_up", "\n", "]", ",", "1", ")", ")", "\n", "\n", "return", "flow", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.SPyNet.forward": [[367, 411], ["paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "basicvsr.SPyNet.compute_flow", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "float", "float", "float", "float"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.ModifiedSPyNet.compute_flow"], ["", "def", "forward", "(", "self", ",", "ref", ",", "supp", ")", ":", "\n", "        ", "\"\"\"Forward function of SPyNet.\n\n        This function computes the optical flow from ref to supp.\n\n        Args:\n            ref (Tensor): Reference image with shape of (n, 3, h, w).\n            supp (Tensor): Supporting image with shape of (n, 3, h, w).\n\n        Returns:\n            Tensor: Estimated optical flow: (n, 2, h, w).\n        \"\"\"", "\n", "\n", "# upsize to a multiple of 32", "\n", "h", ",", "w", "=", "ref", ".", "shape", "[", "2", ":", "4", "]", "\n", "w_up", "=", "w", "if", "(", "w", "%", "32", ")", "==", "0", "else", "32", "*", "(", "w", "//", "32", "+", "1", ")", "\n", "h_up", "=", "h", "if", "(", "h", "%", "32", ")", "==", "0", "else", "32", "*", "(", "h", "//", "32", "+", "1", ")", "\n", "ref", "=", "F", ".", "interpolate", "(", "ref", ",", "\n", "size", "=", "(", "h_up", ",", "w_up", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "False", ")", "\n", "supp", "=", "F", ".", "interpolate", "(", "supp", ",", "\n", "size", "=", "(", "h_up", ",", "w_up", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "False", ")", "\n", "ref", ".", "stop_gradient", "=", "False", "\n", "supp", ".", "stop_gradient", "=", "False", "\n", "# compute flow, and resize back to the original resolution", "\n", "flow_up", "=", "self", ".", "compute_flow", "(", "ref", ",", "supp", ")", "\n", "flow", "=", "F", ".", "interpolate", "(", "flow_up", ",", "\n", "size", "=", "(", "h", ",", "w", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "False", ")", "\n", "\n", "# adjust the flow values", "\n", "# todo: grad bug", "\n", "# flow[:, 0, :, :] *= (float(w) / float(w_up))", "\n", "# flow[:, 1, :, :] *= (float(h) / float(h_up))", "\n", "\n", "flow_x", "=", "flow", "[", ":", ",", "0", ":", "1", ",", ":", ",", ":", "]", "*", "(", "float", "(", "w", ")", "/", "float", "(", "w_up", ")", ")", "\n", "flow_y", "=", "flow", "[", ":", ",", "1", ":", "2", ",", ":", ",", ":", "]", "*", "(", "float", "(", "h", ")", "/", "float", "(", "h_up", ")", ")", "\n", "flow", "=", "paddle", ".", "concat", "(", "[", "flow_x", ",", "flow_y", "]", ",", "1", ")", "\n", "\n", "return", "flow", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.ResidualBlocksWithInputConv.__init__": [[422, 433], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "basicvsr.MakeMultiBlocks"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.edvr.MakeMultiBlocks"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", "=", "64", ",", "num_blocks", "=", "30", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "# a convolution used to match the channels of the residual blocks", "\n", "self", ".", "covn1", "=", "nn", ".", "Conv2D", "(", "in_channels", ",", "out_channels", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "Leaky_relu", "=", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.1", ")", "\n", "\n", "# residual blocks", "\n", "self", ".", "ResidualBlocks", "=", "MakeMultiBlocks", "(", "ResidualBlockNoBN", ",", "\n", "num_blocks", ",", "\n", "nf", "=", "out_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.ResidualBlocksWithInputConv.forward": [[434, 447], ["basicvsr.ResidualBlocksWithInputConv.Leaky_relu", "basicvsr.ResidualBlocksWithInputConv.ResidualBlocks", "basicvsr.ResidualBlocksWithInputConv.covn1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "feat", ")", ":", "\n", "        ", "\"\"\"\n        Forward function for ResidualBlocksWithInputConv.\n\n        Args:\n            feat (Tensor): Input feature with shape (n, in_channels, h, w)\n\n        Returns:\n            Tensor: Output feature with shape (n, out_channels, h, w)\n        \"\"\"", "\n", "out", "=", "self", ".", "Leaky_relu", "(", "self", ".", "covn1", "(", "feat", ")", ")", "\n", "out", "=", "self", ".", "ResidualBlocks", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.BasicVSRNet.__init__": [[464, 500], ["paddle.Layer.__init__", "basicvsr.SPyNet", "utils.download.get_path_from_url", "basicvsr.BasicVSRNet.spynet.set_state_dict", "basicvsr.ResidualBlocksWithInputConv", "basicvsr.ResidualBlocksWithInputConv", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "basicvsr.PixelShufflePack", "basicvsr.PixelShufflePack", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["def", "__init__", "(", "self", ",", "mid_channels", "=", "64", ",", "num_blocks", "=", "30", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "mid_channels", "=", "mid_channels", "\n", "\n", "# optical flow network for feature alignment", "\n", "self", ".", "spynet", "=", "SPyNet", "(", ")", "\n", "weight_path", "=", "get_path_from_url", "(", "\n", "'https://paddlegan.bj.bcebos.com/models/spynet.pdparams'", ")", "\n", "self", ".", "spynet", ".", "set_state_dict", "(", "paddle", ".", "load", "(", "weight_path", ")", ")", "\n", "\n", "# propagation branches", "\n", "self", ".", "backward_resblocks", "=", "ResidualBlocksWithInputConv", "(", "\n", "mid_channels", "+", "3", ",", "mid_channels", ",", "num_blocks", ")", "\n", "self", ".", "forward_resblocks", "=", "ResidualBlocksWithInputConv", "(", "\n", "mid_channels", "+", "3", ",", "mid_channels", ",", "num_blocks", ")", "\n", "\n", "# upsample", "\n", "self", ".", "fusion", "=", "nn", ".", "Conv2D", "(", "mid_channels", "*", "2", ",", "mid_channels", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "upsample1", "=", "PixelShufflePack", "(", "mid_channels", ",", "\n", "mid_channels", ",", "\n", "2", ",", "\n", "upsample_kernel", "=", "3", ")", "\n", "self", ".", "upsample2", "=", "PixelShufflePack", "(", "mid_channels", ",", "\n", "64", ",", "\n", "2", ",", "\n", "upsample_kernel", "=", "3", ")", "\n", "self", ".", "conv_hr", "=", "nn", ".", "Conv2D", "(", "64", ",", "64", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "conv_last", "=", "nn", ".", "Conv2D", "(", "64", ",", "3", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "img_upsample", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "4", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "False", ")", "\n", "\n", "# activation function", "\n", "self", ".", "lrelu", "=", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.BasicVSRNet.check_if_mirror_extended": [[501, 517], ["paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.flip", "paddle.flip", "paddle.flip", "paddle.flip", "paddle.flip", "paddle.flip", "paddle.flip", "paddle.flip", "paddle.flip", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm"], ["", "def", "check_if_mirror_extended", "(", "self", ",", "lrs", ")", ":", "\n", "        ", "\"\"\"Check whether the input is a mirror-extended sequence.\n\n        If mirror-extended, the i-th (i=0, ..., t-1) frame is equal to the\n        (t-1-i)-th frame.\n\n        Args:\n            lrs (tensor): Input LR images with shape (n, t, c, h, w)\n        \"\"\"", "\n", "\n", "self", ".", "is_mirror_extended", "=", "False", "\n", "if", "lrs", ".", "shape", "[", "1", "]", "%", "2", "==", "0", ":", "\n", "            ", "lrs_1", ",", "lrs_2", "=", "paddle", ".", "chunk", "(", "lrs", ",", "2", ",", "axis", "=", "1", ")", "\n", "lrs_2", "=", "paddle", ".", "flip", "(", "lrs_2", ",", "[", "1", "]", ")", "\n", "if", "paddle", ".", "norm", "(", "lrs_1", "-", "lrs_2", ")", "==", "0", ":", "\n", "                ", "self", ".", "is_mirror_extended", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.BasicVSRNet.compute_flow": [[518, 548], ["lrs[].reshape", "lrs[].reshape", "basicvsr.BasicVSRNet.spynet().reshape", "basicvsr.BasicVSRNet.spynet().reshape", "basicvsr.BasicVSRNet.spynet", "basicvsr.BasicVSRNet.spynet"], "methods", ["None"], ["", "", "", "def", "compute_flow", "(", "self", ",", "lrs", ")", ":", "\n", "        ", "\"\"\"Compute optical flow using SPyNet for feature warping.\n\n        Note that if the input is an mirror-extended sequence, 'flows_forward'\n        is not needed, since it is equal to 'flows_backward.flip(1)'.\n\n        Args:\n            lrs (tensor): Input LR images with shape (n, t, c, h, w)\n\n        Return:\n            tuple(Tensor): Optical flow. 'flows_forward' corresponds to the\n                flows used for forward-time propagation (current to previous).\n                'flows_backward' corresponds to the flows used for\n                backward-time propagation (current to next).\n        \"\"\"", "\n", "\n", "n", ",", "t", ",", "c", ",", "h", ",", "w", "=", "lrs", ".", "shape", "\n", "\n", "lrs_1", "=", "lrs", "[", ":", ",", ":", "-", "1", ",", ":", ",", ":", ",", ":", "]", ".", "reshape", "(", "[", "-", "1", ",", "c", ",", "h", ",", "w", "]", ")", "\n", "lrs_2", "=", "lrs", "[", ":", ",", "1", ":", ",", ":", ",", ":", ",", ":", "]", ".", "reshape", "(", "[", "-", "1", ",", "c", ",", "h", ",", "w", "]", ")", "\n", "\n", "flows_backward", "=", "self", ".", "spynet", "(", "lrs_1", ",", "lrs_2", ")", ".", "reshape", "(", "[", "n", ",", "t", "-", "1", ",", "2", ",", "h", ",", "w", "]", ")", "\n", "\n", "if", "self", ".", "is_mirror_extended", ":", "# flows_forward = flows_backward.flip(1)", "\n", "            ", "flows_forward", "=", "None", "\n", "", "else", ":", "\n", "            ", "flows_forward", "=", "self", ".", "spynet", "(", "lrs_2", ",", "\n", "lrs_1", ")", ".", "reshape", "(", "[", "n", ",", "t", "-", "1", ",", "2", ",", "h", ",", "w", "]", ")", "\n", "\n", "", "return", "flows_forward", ",", "flows_backward", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.BasicVSRNet.forward": [[549, 611], ["paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "basicvsr.BasicVSRNet.check_if_mirror_extended", "basicvsr.BasicVSRNet.compute_flow", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "range", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "range", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "basicvsr.BasicVSRNet.backward_resblocks", "outputs.append", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "basicvsr.BasicVSRNet.forward_resblocks", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "basicvsr.BasicVSRNet.lrelu", "basicvsr.BasicVSRNet.lrelu", "basicvsr.BasicVSRNet.lrelu", "basicvsr.BasicVSRNet.lrelu", "basicvsr.BasicVSRNet.conv_last", "basicvsr.BasicVSRNet.img_upsample", "basicvsr.flow_warp", "basicvsr.flow_warp", "basicvsr.BasicVSRNet.fusion", "basicvsr.BasicVSRNet.upsample1", "basicvsr.BasicVSRNet.upsample2", "basicvsr.BasicVSRNet.conv_hr", "flow1.transpose", "flow.transpose"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.MSVSR.check_if_mirror_extended", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.ModifiedSPyNet.compute_flow", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.flow_warp", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.flow_warp"], ["", "def", "forward", "(", "self", ",", "lrs", ")", ":", "\n", "        ", "\"\"\"Forward function for BasicVSR.\n\n        Args:\n            lrs (Tensor): Input LR sequence with shape (n, t, c, h, w).\n\n        Returns:\n            Tensor: Output HR sequence with shape (n, t, c, 4h, 4w).\n        \"\"\"", "\n", "\n", "n", ",", "t", ",", "c", ",", "h", ",", "w", "=", "lrs", ".", "shape", "\n", "t", "=", "paddle", ".", "to_tensor", "(", "t", ")", "\n", "assert", "h", ">=", "64", "and", "w", ">=", "64", ",", "(", "\n", "'The height and width of inputs should be at least 64, '", "\n", "f'but got {h} and {w}.'", ")", "\n", "\n", "# check whether the input is an extended sequence", "\n", "self", ".", "check_if_mirror_extended", "(", "lrs", ")", "\n", "\n", "# compute optical flow", "\n", "flows_forward", ",", "flows_backward", "=", "self", ".", "compute_flow", "(", "lrs", ")", "\n", "\n", "# backward-time propgation", "\n", "outputs", "=", "[", "]", "\n", "feat_prop", "=", "paddle", ".", "zeros", "(", "[", "n", ",", "self", ".", "mid_channels", ",", "h", ",", "w", "]", ")", "\n", "for", "i", "in", "range", "(", "t", "-", "1", ",", "-", "1", ",", "-", "1", ")", ":", "\n", "            ", "if", "i", "<", "t", "-", "1", ":", "# no warping required for the last timestep", "\n", "                ", "flow1", "=", "flows_backward", "[", ":", ",", "i", ",", ":", ",", ":", ",", ":", "]", "\n", "feat_prop", "=", "flow_warp", "(", "feat_prop", ",", "flow1", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", ")", "\n", "\n", "", "feat_prop", "=", "paddle", ".", "concat", "(", "[", "lrs", "[", ":", ",", "i", ",", ":", ",", ":", ",", ":", "]", ",", "feat_prop", "]", ",", "axis", "=", "1", ")", "\n", "feat_prop", "=", "self", ".", "backward_resblocks", "(", "feat_prop", ")", "\n", "\n", "outputs", ".", "append", "(", "feat_prop", ")", "\n", "", "outputs", "=", "outputs", "[", ":", ":", "-", "1", "]", "\n", "\n", "# forward-time propagation and upsampling", "\n", "feat_prop", "=", "paddle", ".", "zeros_like", "(", "feat_prop", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "t", ")", ":", "\n", "            ", "lr_curr", "=", "lrs", "[", ":", ",", "i", ",", ":", ",", ":", ",", ":", "]", "\n", "if", "i", ">", "0", ":", "# no warping required for the first timestep", "\n", "                ", "if", "flows_forward", "is", "not", "None", ":", "\n", "                    ", "flow", "=", "flows_forward", "[", ":", ",", "i", "-", "1", ",", ":", ",", ":", ",", ":", "]", "\n", "", "else", ":", "\n", "                    ", "flow", "=", "flows_backward", "[", ":", ",", "-", "i", ",", ":", ",", ":", ",", ":", "]", "\n", "", "feat_prop", "=", "flow_warp", "(", "feat_prop", ",", "flow", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", ")", "\n", "\n", "", "feat_prop", "=", "paddle", ".", "concat", "(", "[", "lr_curr", ",", "feat_prop", "]", ",", "axis", "=", "1", ")", "\n", "feat_prop", "=", "self", ".", "forward_resblocks", "(", "feat_prop", ")", "\n", "\n", "# upsampling given the backward and forward features", "\n", "out", "=", "paddle", ".", "concat", "(", "[", "outputs", "[", "i", "]", ",", "feat_prop", "]", ",", "axis", "=", "1", ")", "\n", "out", "=", "self", ".", "lrelu", "(", "self", ".", "fusion", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "lrelu", "(", "self", ".", "upsample1", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "lrelu", "(", "self", ".", "upsample2", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "lrelu", "(", "self", ".", "conv_hr", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "conv_last", "(", "out", ")", "\n", "base", "=", "self", ".", "img_upsample", "(", "lr_curr", ")", "\n", "out", "+=", "base", "\n", "outputs", "[", "i", "]", "=", "out", "\n", "\n", "", "return", "paddle", ".", "stack", "(", "outputs", ",", "axis", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.SecondOrderDeformableAlignment.__init__": [[626, 654], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.vision.ops.DeformConv2D", "paddle.vision.ops.DeformConv2D", "paddle.vision.ops.DeformConv2D", "basicvsr.SecondOrderDeformableAlignment.init_offset", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.ReAlignmentModule.init_offset"], ["def", "__init__", "(", "self", ",", "\n", "in_channels", "=", "128", ",", "\n", "out_channels", "=", "64", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "dilation", "=", "1", ",", "\n", "groups", "=", "1", ",", "\n", "deformable_groups", "=", "16", ")", ":", "\n", "        ", "super", "(", "SecondOrderDeformableAlignment", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv_offset", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "3", "*", "out_channels", "+", "4", ",", "out_channels", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.1", ")", ",", "\n", "nn", ".", "Conv2D", "(", "out_channels", ",", "out_channels", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.1", ")", ",", "\n", "nn", ".", "Conv2D", "(", "out_channels", ",", "out_channels", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.1", ")", ",", "\n", "nn", ".", "Conv2D", "(", "out_channels", ",", "27", "*", "deformable_groups", ",", "3", ",", "1", ",", "1", ")", ",", "\n", ")", "\n", "self", ".", "dcn", "=", "DeformConv2D", "(", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "\n", "dilation", "=", "dilation", ",", "\n", "deformable_groups", "=", "deformable_groups", ")", "\n", "self", ".", "init_offset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.SecondOrderDeformableAlignment.init_offset": [[655, 658], ["modules.init.constant_", "modules.init.constant_"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.constant_", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.constant_"], ["", "def", "init_offset", "(", "self", ")", ":", "\n", "        ", "constant_", "(", "self", ".", "conv_offset", "[", "-", "1", "]", ".", "weight", ",", "0", ")", "\n", "constant_", "(", "self", ".", "conv_offset", "[", "-", "1", "]", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.SecondOrderDeformableAlignment.forward": [[659, 678], ["paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "basicvsr.SecondOrderDeformableAlignment.conv_offset", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.sigmoid", "paddle.sigmoid", "paddle.sigmoid", "basicvsr.SecondOrderDeformableAlignment.dcn", "paddle.tanh", "paddle.tanh", "paddle.tanh", "paddle.tanh", "paddle.tanh", "paddle.tanh", "paddle.tanh", "paddle.tanh", "paddle.tanh", "flow_1.flip().tile", "flow_2.flip().tile", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "flow_1.flip", "flow_2.flip"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "extra_feat", ",", "flow_1", ",", "flow_2", ")", ":", "\n", "        ", "extra_feat", "=", "paddle", ".", "concat", "(", "[", "extra_feat", ",", "flow_1", ",", "flow_2", "]", ",", "axis", "=", "1", ")", "\n", "out", "=", "self", ".", "conv_offset", "(", "extra_feat", ")", "\n", "o1", ",", "o2", ",", "mask", "=", "paddle", ".", "chunk", "(", "out", ",", "3", ",", "axis", "=", "1", ")", "\n", "\n", "# offset", "\n", "offset", "=", "10", "*", "paddle", ".", "tanh", "(", "paddle", ".", "concat", "(", "(", "o1", ",", "o2", ")", ",", "axis", "=", "1", ")", ")", "\n", "offset_1", ",", "offset_2", "=", "paddle", ".", "chunk", "(", "offset", ",", "2", ",", "axis", "=", "1", ")", "\n", "offset_1", "=", "offset_1", "+", "flow_1", ".", "flip", "(", "1", ")", ".", "tile", "(", "\n", "[", "1", ",", "offset_1", ".", "shape", "[", "1", "]", "//", "2", ",", "1", ",", "1", "]", ")", "\n", "offset_2", "=", "offset_2", "+", "flow_2", ".", "flip", "(", "1", ")", ".", "tile", "(", "\n", "[", "1", ",", "offset_2", ".", "shape", "[", "1", "]", "//", "2", ",", "1", ",", "1", "]", ")", "\n", "offset", "=", "paddle", ".", "concat", "(", "[", "offset_1", ",", "offset_2", "]", ",", "axis", "=", "1", ")", "\n", "\n", "# mask", "\n", "mask", "=", "F", ".", "sigmoid", "(", "mask", ")", "\n", "\n", "out", "=", "self", ".", "dcn", "(", "x", ",", "offset", ",", "mask", ")", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.default_init_weights": [[14, 42], ["paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "isinstance", "isinstance", "modules.init.kaiming_normal_", "m.weight.set_value", "isinstance", "modules.init.constant_", "modules.init.kaiming_normal_", "m.weight.set_value", "isinstance", "modules.init.constant_", "modules.init.constant_"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.kaiming_normal_", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.constant_", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.kaiming_normal_", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.constant_", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.constant_"], ["@", "paddle", ".", "no_grad", "(", ")", "\n", "def", "default_init_weights", "(", "layer_list", ",", "scale", "=", "1", ",", "bias_fill", "=", "0", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Initialize network weights.\n\n    Args:\n        layer_list (list[nn.Layer] | nn.Layer): Layers to be initialized.\n        scale (float): Scale initialized weights, especially for residual\n            blocks. Default: 1.\n        bias_fill (float): The value to fill bias. Default: 0\n        kwargs (dict): Other arguments for initialization function.\n    \"\"\"", "\n", "if", "not", "isinstance", "(", "layer_list", ",", "list", ")", ":", "\n", "        ", "layer_list", "=", "[", "layer_list", "]", "\n", "", "for", "m", "in", "layer_list", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2D", ")", ":", "\n", "            ", "kaiming_normal_", "(", "m", ".", "weight", ",", "**", "kwargs", ")", "\n", "scale_weight", "=", "scale", "*", "m", ".", "weight", "\n", "m", ".", "weight", ".", "set_value", "(", "scale_weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "constant_", "(", "m", ".", "bias", ",", "bias_fill", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "            ", "kaiming_normal_", "(", "m", ".", "weight", ",", "**", "kwargs", ")", "\n", "scale_weight", "=", "scale", "*", "m", ".", "weight", "\n", "m", ".", "weight", ".", "set_value", "(", "scale_weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "constant_", "(", "m", ".", "bias", ",", "bias_fill", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm", ")", ":", "\n", "            ", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.MakeMultiBlocks": [[90, 104], ["paddle.Sequential", "range", "nn.Sequential.add_sublayer", "func"], "function", ["None"], ["", "", "def", "MakeMultiBlocks", "(", "func", ",", "num_layers", ",", "nf", "=", "64", ")", ":", "\n", "    ", "\"\"\"Make layers by stacking the same blocks.\n\n    Args:\n        func (nn.Layer): nn.Layer class for basic block.\n        num_layers (int): number of blocks.\n\n    Returns:\n        nn.Sequential: Stacked blocks in nn.Sequential.\n    \"\"\"", "\n", "Blocks", "=", "nn", ".", "Sequential", "(", ")", "\n", "for", "i", "in", "range", "(", "num_layers", ")", ":", "\n", "        ", "Blocks", ".", "add_sublayer", "(", "'block%d'", "%", "i", ",", "func", "(", "nf", ")", ")", "\n", "", "return", "Blocks", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.flow_warp": [[142, 186], ["paddle.meshgrid", "paddle.meshgrid", "paddle.meshgrid", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.cast", "paddle.cast", "paddle.cast", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.grid_sample", "ValueError", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "paddle.arange", "max", "max"], "function", ["None"], ["", "", "def", "flow_warp", "(", "x", ",", "\n", "flow", ",", "\n", "interpolation", "=", "'bilinear'", ",", "\n", "padding_mode", "=", "'zeros'", ",", "\n", "align_corners", "=", "True", ")", ":", "\n", "    ", "\"\"\"Warp an image or a feature map with optical flow.\n\n    Args:\n        x (Tensor): Tensor with size (n, c, h, w).\n        flow (Tensor): Tensor with size (n, h, w, 2). The last dimension is\n            a two-channel, denoting the width and height relative offsets.\n            Note that the values are not normalized to [-1, 1].\n        interpolation (str): Interpolation mode: 'nearest' or 'bilinear'.\n            Default: 'bilinear'.\n        padding_mode (str): Padding mode: 'zeros' or 'border' or 'reflection'.\n            Default: 'zeros'.\n        align_corners (bool): Whether align corners. Default: True.\n\n    Returns:\n        Tensor: Warped image or feature map.\n    \"\"\"", "\n", "x_h", ",", "x_w", "=", "x", ".", "shape", "[", "-", "2", ":", "]", "\n", "flow_h", ",", "flow_w", "=", "flow", ".", "shape", "[", "1", ":", "3", "]", "\n", "if", "x_h", "!=", "flow_h", "or", "x_w", "!=", "flow_w", ":", "\n", "        ", "raise", "ValueError", "(", "f'The spatial sizes of input ({x.shape[-2:]}) and '", "\n", "f'flow ({flow.shape[1:3]}) are not the same.'", ")", "\n", "", "_", ",", "_", ",", "h", ",", "w", "=", "x", ".", "shape", "\n", "# create mesh grid", "\n", "grid_y", ",", "grid_x", "=", "paddle", ".", "meshgrid", "(", "paddle", ".", "arange", "(", "0", ",", "h", ")", ",", "paddle", ".", "arange", "(", "0", ",", "w", ")", ")", "\n", "grid", "=", "paddle", ".", "stack", "(", "(", "grid_x", ",", "grid_y", ")", ",", "axis", "=", "2", ")", "# (w, h, 2)", "\n", "grid", "=", "paddle", ".", "cast", "(", "grid", ",", "'float32'", ")", "\n", "grid", ".", "stop_gradient", "=", "True", "\n", "\n", "grid_flow", "=", "grid", "+", "flow", "\n", "# scale grid_flow to [-1,1]", "\n", "grid_flow_x", "=", "2.0", "*", "grid_flow", "[", ":", ",", ":", ",", ":", ",", "0", "]", "/", "max", "(", "w", "-", "1", ",", "1", ")", "-", "1.0", "\n", "grid_flow_y", "=", "2.0", "*", "grid_flow", "[", ":", ",", ":", ",", ":", ",", "1", "]", "/", "max", "(", "h", "-", "1", ",", "1", ")", "-", "1.0", "\n", "grid_flow", "=", "paddle", ".", "stack", "(", "(", "grid_flow_x", ",", "grid_flow_y", ")", ",", "axis", "=", "3", ")", "\n", "output", "=", "F", ".", "grid_sample", "(", "x", ",", "\n", "grid_flow", ",", "\n", "mode", "=", "interpolation", ",", "\n", "padding_mode", "=", "padding_mode", ",", "\n", "align_corners", "=", "align_corners", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_firstorder.FirstOrderGenerator.__init__": [[45, 58], ["paddle.nn.Layer.__init__", "modules.keypoint_detector.KPDetector", "occlusion_aware.OcclusionAwareGenerator", "modules.first_order.ImagePyramide", "sum", "generator_firstorder.VGG19"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "generator_cfg", ",", "kp_detector_cfg", ",", "common_params", ",", "\n", "train_params", ",", "dis_scales", ")", ":", "\n", "        ", "super", "(", "FirstOrderGenerator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "kp_extractor", "=", "KPDetector", "(", "**", "kp_detector_cfg", ",", "**", "common_params", ")", "\n", "self", ".", "generator", "=", "OcclusionAwareGenerator", "(", "**", "generator_cfg", ",", "\n", "**", "common_params", ")", "\n", "self", ".", "train_params", "=", "train_params", "\n", "self", ".", "scales", "=", "train_params", "[", "'scales'", "]", "\n", "self", ".", "disc_scales", "=", "dis_scales", "\n", "self", ".", "pyramid", "=", "ImagePyramide", "(", "self", ".", "scales", ",", "self", ".", "generator", ".", "num_channels", ")", "\n", "self", ".", "loss_weights", "=", "train_params", "[", "'loss_weights'", "]", "\n", "if", "sum", "(", "self", ".", "loss_weights", "[", "'perceptual'", "]", ")", "!=", "0", ":", "\n", "            ", "self", ".", "vgg", "=", "VGG19", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_firstorder.FirstOrderGenerator.forward": [[59, 156], ["generator_firstorder.FirstOrderGenerator.kp_extractor", "generator_firstorder.FirstOrderGenerator.kp_extractor", "generator_firstorder.FirstOrderGenerator.generator", "generator_firstorder.FirstOrderGenerator.update", "generator_firstorder.FirstOrderGenerator.pyramid", "generator_firstorder.FirstOrderGenerator.pyramid", "sum", "discriminator", "discriminator", "generator_firstorder.Transform", "generator_firstorder.Transform.transform_frame", "generator_firstorder.FirstOrderGenerator.kp_extractor", "paddle.nn.loss.L1Loss", "paddle.nn.loss.L1Loss", "paddle.nn.loss.L1Loss", "paddle.nn.loss.L1Loss", "paddle.nn.loss.L1Loss", "paddle.nn.loss.L1Loss", "paddle.nn.loss.L1Loss", "paddle.nn.loss.L1Loss", "paddle.nn.loss.L1Loss", "paddle.nn.loss.L1Loss.", "paddle.nn.loss.L1Loss.", "paddle.nn.loss.L1Loss.", "paddle.nn.loss.L1Loss.", "paddle.nn.loss.L1Loss.", "paddle.nn.loss.L1Loss.", "generator_firstorder.FirstOrderGenerator.vgg", "generator_firstorder.FirstOrderGenerator.vgg", "enumerate", "sum", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.inverse", "paddle.inverse", "paddle.inverse", "paddle.inverse", "paddle.inverse", "paddle.inverse", "paddle.inverse", "paddle.inverse", "paddle.inverse", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.tensor.eye().reshape", "paddle.tensor.eye().reshape", "paddle.tensor.eye().reshape", "paddle.tensor.eye().reshape", "paddle.tensor.eye().reshape", "paddle.tensor.eye().reshape", "paddle.tensor.eye().reshape", "paddle.tensor.eye().reshape", "paddle.tensor.eye().reshape", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.tile", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "modules.first_order.detach_kp", "modules.first_order.detach_kp", "enumerate", "kp_extractor_ori", "generator_firstorder.FirstOrderGenerator.kp_extractor", "kp_extractor_ori", "generator_firstorder.FirstOrderGenerator.kp_extractor", "zip", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "generator_firstorder.broadcast", "generator_firstorder.broadcast", "paddle.tensor.eye", "paddle.tensor.eye", "paddle.tensor.eye", "paddle.tensor.eye", "paddle.tensor.eye", "paddle.tensor.eye", "paddle.tensor.eye", "paddle.tensor.eye", "paddle.tensor.eye", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "generator_firstorder.Transform.jacobian", "str", "str", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "generator_firstorder.Transform.warp_coordinates", "y_vgg[].detach"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_firstorder.Transform.transform_frame", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.detach_kp", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.detach_kp", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_firstorder.broadcast", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_firstorder.broadcast", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_firstorder.Transform.jacobian", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_firstorder.Transform.warp_coordinates"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "discriminator", ",", "kp_extractor_ori", "=", "None", ")", ":", "\n", "        ", "kp_source", "=", "self", ".", "kp_extractor", "(", "x", "[", "'source'", "]", ")", "\n", "kp_driving", "=", "self", ".", "kp_extractor", "(", "x", "[", "'driving'", "]", ")", "\n", "generated", "=", "self", ".", "generator", "(", "x", "[", "'source'", "]", ",", "\n", "kp_source", "=", "kp_source", ",", "\n", "kp_driving", "=", "kp_driving", ")", "\n", "generated", ".", "update", "(", "{", "'kp_source'", ":", "kp_source", ",", "'kp_driving'", ":", "kp_driving", "}", ")", "\n", "\n", "loss_values", "=", "{", "}", "\n", "\n", "pyramide_real", "=", "self", ".", "pyramid", "(", "x", "[", "'driving'", "]", ")", "\n", "pyramide_generated", "=", "self", ".", "pyramid", "(", "generated", "[", "'prediction'", "]", ")", "\n", "# VGG19 perceptual Loss", "\n", "if", "sum", "(", "self", ".", "loss_weights", "[", "'perceptual'", "]", ")", "!=", "0", ":", "\n", "            ", "value_total", "=", "0", "\n", "for", "scale", "in", "self", ".", "scales", ":", "\n", "                ", "x_vgg", "=", "self", ".", "vgg", "(", "pyramide_generated", "[", "'prediction_'", "+", "str", "(", "scale", ")", "]", ")", "\n", "y_vgg", "=", "self", ".", "vgg", "(", "pyramide_real", "[", "'prediction_'", "+", "str", "(", "scale", ")", "]", ")", "\n", "\n", "for", "i", ",", "weight", "in", "enumerate", "(", "self", ".", "loss_weights", "[", "'perceptual'", "]", ")", ":", "\n", "                    ", "value", "=", "paddle", ".", "abs", "(", "x_vgg", "[", "i", "]", "-", "y_vgg", "[", "i", "]", ".", "detach", "(", ")", ")", ".", "mean", "(", ")", "\n", "value_total", "+=", "self", ".", "loss_weights", "[", "'perceptual'", "]", "[", "i", "]", "*", "value", "\n", "", "", "loss_values", "[", "'perceptual'", "]", "=", "value_total", "\n", "\n", "# Generator Loss", "\n", "", "if", "self", ".", "loss_weights", "[", "'generator_gan'", "]", "!=", "0", ":", "\n", "            ", "discriminator_maps_generated", "=", "discriminator", "(", "\n", "pyramide_generated", ",", "kp", "=", "detach_kp", "(", "kp_driving", ")", ")", "\n", "discriminator_maps_real", "=", "discriminator", "(", "pyramide_real", ",", "\n", "kp", "=", "detach_kp", "(", "kp_driving", ")", ")", "\n", "value_total", "=", "0", "\n", "for", "scale", "in", "self", ".", "disc_scales", ":", "\n", "                ", "key", "=", "'prediction_map_%s'", "%", "scale", "\n", "value", "=", "(", "(", "1", "-", "discriminator_maps_generated", "[", "key", "]", ")", "**", "2", ")", ".", "mean", "(", ")", "\n", "value_total", "+=", "self", ".", "loss_weights", "[", "'generator_gan'", "]", "*", "value", "\n", "", "loss_values", "[", "'gen_gan'", "]", "=", "value_total", "\n", "# Feature matching Loss", "\n", "if", "sum", "(", "self", ".", "loss_weights", "[", "'feature_matching'", "]", ")", "!=", "0", ":", "\n", "                ", "value_total", "=", "0", "\n", "for", "scale", "in", "self", ".", "disc_scales", ":", "\n", "                    ", "key", "=", "'feature_maps_%s'", "%", "scale", "\n", "for", "i", ",", "(", "a", ",", "b", ")", "in", "enumerate", "(", "\n", "zip", "(", "discriminator_maps_real", "[", "key", "]", ",", "\n", "discriminator_maps_generated", "[", "key", "]", ")", ")", ":", "\n", "\n", "                        ", "if", "self", ".", "loss_weights", "[", "'feature_matching'", "]", "[", "i", "]", "==", "0", ":", "\n", "                            ", "continue", "\n", "", "value", "=", "paddle", ".", "abs", "(", "a", "-", "b", ")", ".", "mean", "(", ")", "\n", "value_total", "+=", "self", ".", "loss_weights", "[", "'feature_matching'", "]", "[", "\n", "i", "]", "*", "value", "\n", "", "", "loss_values", "[", "'feature_matching'", "]", "=", "value_total", "\n", "", "", "if", "(", "self", ".", "loss_weights", "[", "'equivariance_value'", "]", "+", "\n", "self", ".", "loss_weights", "[", "'equivariance_jacobian'", "]", ")", "!=", "0", ":", "\n", "            ", "transform", "=", "Transform", "(", "x", "[", "'driving'", "]", ".", "shape", "[", "0", "]", ",", "\n", "**", "self", ".", "train_params", "[", "'transform_params'", "]", ")", "\n", "transformed_frame", "=", "transform", ".", "transform_frame", "(", "x", "[", "'driving'", "]", ")", "\n", "transformed_kp", "=", "self", ".", "kp_extractor", "(", "transformed_frame", ")", "\n", "generated", "[", "'transformed_frame'", "]", "=", "transformed_frame", "\n", "generated", "[", "'transformed_kp'", "]", "=", "transformed_kp", "\n", "\n", "# Value loss part", "\n", "if", "self", ".", "loss_weights", "[", "'equivariance_value'", "]", "!=", "0", ":", "\n", "                ", "value", "=", "paddle", ".", "abs", "(", "\n", "kp_driving", "[", "'value'", "]", "-", "\n", "transform", ".", "warp_coordinates", "(", "transformed_kp", "[", "'value'", "]", ")", ")", ".", "mean", "(", ")", "\n", "loss_values", "[", "'equivariance_value'", "]", "=", "self", ".", "loss_weights", "[", "\n", "'equivariance_value'", "]", "*", "value", "\n", "\n", "# jacobian loss part", "\n", "", "if", "self", ".", "loss_weights", "[", "'equivariance_jacobian'", "]", "!=", "0", ":", "\n", "                ", "jacobian_transformed", "=", "paddle", ".", "matmul", "(", "\n", "*", "broadcast", "(", "transform", ".", "jacobian", "(", "transformed_kp", "[", "'value'", "]", ")", ",", "\n", "transformed_kp", "[", "'jacobian'", "]", ")", ")", "\n", "normed_driving", "=", "paddle", ".", "inverse", "(", "kp_driving", "[", "'jacobian'", "]", ")", "\n", "normed_transformed", "=", "jacobian_transformed", "\n", "value", "=", "paddle", ".", "matmul", "(", "\n", "*", "broadcast", "(", "normed_driving", ",", "normed_transformed", ")", ")", "\n", "eye", "=", "paddle", ".", "tensor", ".", "eye", "(", "2", ",", "dtype", "=", "'float32'", ")", ".", "reshape", "(", "\n", "(", "1", ",", "1", ",", "2", ",", "2", ")", ")", "\n", "eye", "=", "paddle", ".", "tile", "(", "eye", ",", "[", "1", ",", "value", ".", "shape", "[", "1", "]", ",", "1", ",", "1", "]", ")", "\n", "value", "=", "paddle", ".", "abs", "(", "eye", "-", "value", ")", ".", "mean", "(", ")", "\n", "loss_values", "[", "'equivariance_jacobian'", "]", "=", "self", ".", "loss_weights", "[", "\n", "'equivariance_jacobian'", "]", "*", "value", "\n", "\n", "", "", "if", "kp_extractor_ori", "is", "not", "None", ":", "\n", "            ", "recon_loss", "=", "paddle", ".", "nn", ".", "loss", ".", "L1Loss", "(", ")", "\n", "\n", "kp_distillation_loss_source", "=", "recon_loss", "(", "\n", "kp_extractor_ori", "(", "x", "[", "'source'", "]", ")", "[", "'value'", "]", ",", "\n", "self", ".", "kp_extractor", "(", "x", "[", "'source'", "]", ")", "[", "'value'", "]", ")", "\n", "kp_distillation_loss_driving", "=", "recon_loss", "(", "\n", "kp_extractor_ori", "(", "x", "[", "'driving'", "]", ")", "[", "'value'", "]", ",", "\n", "self", ".", "kp_extractor", "(", "x", "[", "'driving'", "]", ")", "[", "'value'", "]", ")", "\n", "loss_values", "[", "\n", "\"kp_distillation_loss\"", "]", "=", "kp_distillation_loss_source", "+", "kp_distillation_loss_driving", "\n", "\n", "", "return", "loss_values", ",", "generated", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_firstorder.VGG19.__init__": [[162, 196], ["paddle.nn.Layer.__init__", "ppgan.utils.download.get_path_from_url", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "_vgg.load_dict", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "range", "range", "range", "range", "range", "generator_firstorder.VGG19.register_buffer", "generator_firstorder.VGG19.register_buffer", "getattr", "generator_firstorder.VGG19.slice1.add_sublayer", "generator_firstorder.VGG19.slice2.add_sublayer", "generator_firstorder.VGG19.slice3.add_sublayer", "generator_firstorder.VGG19.slice4.add_sublayer", "generator_firstorder.VGG19.slice5.add_sublayer", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "generator_firstorder.VGG19.parameters", "str", "str", "str", "str", "str", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["def", "__init__", "(", "self", ",", "requires_grad", "=", "False", ")", ":", "\n", "        ", "super", "(", "VGG19", ",", "self", ")", ".", "__init__", "(", ")", "\n", "pretrained_url", "=", "'https://paddlegan.bj.bcebos.com/models/vgg19.pdparams'", "\n", "weight_path", "=", "get_path_from_url", "(", "pretrained_url", ")", "\n", "state_dict", "=", "paddle", ".", "load", "(", "weight_path", ")", "\n", "_vgg", "=", "getattr", "(", "vgg", ",", "'vgg19'", ")", "(", ")", "\n", "_vgg", ".", "load_dict", "(", "state_dict", ")", "\n", "vgg_pretrained_features", "=", "_vgg", ".", "features", "\n", "self", ".", "slice1", "=", "paddle", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice2", "=", "paddle", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice3", "=", "paddle", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice4", "=", "paddle", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice5", "=", "paddle", ".", "nn", ".", "Sequential", "(", ")", "\n", "for", "x", "in", "range", "(", "2", ")", ":", "\n", "            ", "self", ".", "slice1", ".", "add_sublayer", "(", "str", "(", "x", ")", ",", "vgg_pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "2", ",", "7", ")", ":", "\n", "            ", "self", ".", "slice2", ".", "add_sublayer", "(", "str", "(", "x", ")", ",", "vgg_pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "7", ",", "12", ")", ":", "\n", "            ", "self", ".", "slice3", ".", "add_sublayer", "(", "str", "(", "x", ")", ",", "vgg_pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "12", ",", "21", ")", ":", "\n", "            ", "self", ".", "slice4", ".", "add_sublayer", "(", "str", "(", "x", ")", ",", "vgg_pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "21", ",", "30", ")", ":", "\n", "            ", "self", ".", "slice5", ".", "add_sublayer", "(", "str", "(", "x", ")", ",", "vgg_pretrained_features", "[", "x", "]", ")", "\n", "\n", "", "self", ".", "register_buffer", "(", "\n", "'mean'", ",", "\n", "paddle", ".", "to_tensor", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ")", ".", "reshape", "(", "[", "1", ",", "3", ",", "1", ",", "1", "]", ")", ")", "\n", "# the std is for image with range [-1, 1]", "\n", "self", ".", "register_buffer", "(", "\n", "'std'", ",", "\n", "paddle", ".", "to_tensor", "(", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ".", "reshape", "(", "[", "1", ",", "3", ",", "1", ",", "1", "]", ")", ")", "\n", "if", "not", "requires_grad", ":", "\n", "            ", "for", "param", "in", "self", ".", "parameters", "(", ")", ":", "\n", "                ", "param", ".", "stop_gradient", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_firstorder.VGG19.forward": [[197, 206], ["generator_firstorder.VGG19.slice1", "generator_firstorder.VGG19.slice2", "generator_firstorder.VGG19.slice3", "generator_firstorder.VGG19.slice4", "generator_firstorder.VGG19.slice5"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "(", "x", "-", "self", ".", "mean", ")", "/", "self", ".", "std", "\n", "h_relu1", "=", "self", ".", "slice1", "(", "x", ")", "\n", "h_relu2", "=", "self", ".", "slice2", "(", "h_relu1", ")", "\n", "h_relu3", "=", "self", ".", "slice3", "(", "h_relu2", ")", "\n", "h_relu4", "=", "self", ".", "slice4", "(", "h_relu3", ")", "\n", "h_relu5", "=", "self", ".", "slice5", "(", "h_relu4", ")", "\n", "out", "=", "[", "h_relu1", ",", "h_relu2", ",", "h_relu3", ",", "h_relu4", ",", "h_relu5", "]", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_firstorder.Transform.__init__": [[212, 231], ["paddle.distribution.Normal().sample", "paddle.distribution.Normal().sample", "paddle.distribution.Normal().sample", "paddle.distribution.Normal().sample", "paddle.distribution.Normal().sample", "paddle.distribution.Normal().sample", "paddle.distribution.Normal().sample", "paddle.distribution.Normal().sample", "paddle.distribution.Normal().sample", "noise.reshape.reshape.reshape", "paddle.tensor.eye().reshape", "paddle.tensor.eye().reshape", "paddle.tensor.eye().reshape", "paddle.tensor.eye().reshape", "paddle.tensor.eye().reshape", "paddle.tensor.eye().reshape", "paddle.tensor.eye().reshape", "paddle.tensor.eye().reshape", "paddle.tensor.eye().reshape", "modules.first_order.make_coordinate_grid().unsqueeze", "paddle.distribution.Normal().sample", "paddle.distribution.Normal().sample", "paddle.distribution.Normal().sample", "paddle.distribution.Normal().sample", "paddle.distribution.Normal().sample", "paddle.distribution.Normal().sample", "paddle.distribution.Normal().sample", "paddle.distribution.Normal().sample", "paddle.distribution.Normal().sample", "paddle.distribution.Normal().sample.reshape", "paddle.distribution.Normal().sample.reshape", "paddle.distribution.Normal().sample.reshape", "paddle.distribution.Normal", "paddle.distribution.Normal", "paddle.distribution.Normal", "paddle.distribution.Normal", "paddle.distribution.Normal", "paddle.distribution.Normal", "paddle.distribution.Normal", "paddle.distribution.Normal", "paddle.distribution.Normal", "paddle.tensor.eye", "paddle.tensor.eye", "paddle.tensor.eye", "paddle.tensor.eye", "paddle.tensor.eye", "paddle.tensor.eye", "paddle.tensor.eye", "paddle.tensor.eye", "paddle.tensor.eye", "modules.first_order.make_coordinate_grid", "paddle.distribution.Normal", "paddle.distribution.Normal", "paddle.distribution.Normal", "paddle.distribution.Normal", "paddle.distribution.Normal", "paddle.distribution.Normal", "paddle.distribution.Normal", "paddle.distribution.Normal", "paddle.distribution.Normal"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.styleganv2_predictor.sample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.styleganv2_predictor.sample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.styleganv2_predictor.sample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.styleganv2_predictor.sample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.styleganv2_predictor.sample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.styleganv2_predictor.sample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.styleganv2_predictor.sample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.styleganv2_predictor.sample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.styleganv2_predictor.sample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.styleganv2_predictor.sample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.styleganv2_predictor.sample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.styleganv2_predictor.sample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.styleganv2_predictor.sample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.styleganv2_predictor.sample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.styleganv2_predictor.sample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.styleganv2_predictor.sample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.styleganv2_predictor.sample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.styleganv2_predictor.sample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.make_coordinate_grid"], ["def", "__init__", "(", "self", ",", "bs", ",", "**", "kwargs", ")", ":", "\n", "        ", "noise", "=", "paddle", ".", "distribution", ".", "Normal", "(", "loc", "=", "[", "0", "]", ",", "\n", "scale", "=", "[", "kwargs", "[", "'sigma_affine'", "]", "\n", "]", ")", ".", "sample", "(", "[", "bs", ",", "2", ",", "3", "]", ")", "\n", "noise", "=", "noise", ".", "reshape", "(", "(", "bs", ",", "2", ",", "3", ")", ")", "\n", "self", ".", "theta", "=", "noise", "+", "paddle", ".", "tensor", ".", "eye", "(", "2", ",", "3", ",", "dtype", "=", "'float32'", ")", ".", "reshape", "(", "\n", "(", "1", ",", "2", ",", "3", ")", ")", "\n", "self", ".", "bs", "=", "bs", "\n", "\n", "if", "(", "'sigma_tps'", "in", "kwargs", ")", "and", "(", "'points_tps'", "in", "kwargs", ")", ":", "\n", "            ", "self", ".", "tps", "=", "True", "\n", "self", ".", "control_points", "=", "make_coordinate_grid", "(", "\n", "(", "kwargs", "[", "'points_tps'", "]", ",", "kwargs", "[", "'points_tps'", "]", ")", ")", ".", "unsqueeze", "(", "0", ")", "\n", "buf", "=", "paddle", ".", "distribution", ".", "Normal", "(", "\n", "loc", "=", "[", "0", "]", ",", "scale", "=", "[", "kwargs", "[", "'sigma_tps'", "]", "\n", "]", ")", ".", "sample", "(", "[", "bs", ",", "1", ",", "kwargs", "[", "'points_tps'", "]", "**", "2", "]", ")", "\n", "self", ".", "control_params", "=", "buf", ".", "reshape", "(", "(", "bs", ",", "1", ",", "kwargs", "[", "'points_tps'", "]", "**", "2", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "tps", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_firstorder.Transform.transform_frame": [[232, 242], ["modules.first_order.make_coordinate_grid().unsqueeze", "generator_firstorder.Transform.reshape", "generator_firstorder.Transform.warp_coordinates().reshape", "paddle.grid_sample", "paddle.grid_sample", "paddle.grid_sample", "modules.first_order.make_coordinate_grid", "generator_firstorder.Transform.warp_coordinates"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.make_coordinate_grid", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_firstorder.Transform.warp_coordinates"], ["", "", "def", "transform_frame", "(", "self", ",", "frame", ")", ":", "\n", "        ", "grid", "=", "make_coordinate_grid", "(", "frame", ".", "shape", "[", "2", ":", "]", ",", "'float32'", ")", ".", "unsqueeze", "(", "0", ")", "\n", "grid", "=", "grid", ".", "reshape", "(", "(", "1", ",", "frame", ".", "shape", "[", "2", "]", "*", "frame", ".", "shape", "[", "3", "]", ",", "2", ")", ")", "\n", "grid", "=", "self", ".", "warp_coordinates", "(", "grid", ")", ".", "reshape", "(", "\n", "(", "self", ".", "bs", ",", "frame", ".", "shape", "[", "2", "]", ",", "frame", ".", "shape", "[", "3", "]", ",", "2", ")", ")", "\n", "return", "F", ".", "grid_sample", "(", "frame", ",", "\n", "grid", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "padding_mode", "=", "'reflection'", ",", "\n", "align_corners", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_firstorder.Transform.warp_coordinates": [[243, 271], ["generator_firstorder.Transform.theta.astype", "theta.unsqueeze.unsqueeze.unsqueeze", "coordinates.unsqueeze.unsqueeze.unsqueeze", "transformed.squeeze.squeeze.squeeze", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "generator_firstorder.Transform.control_points.astype", "generator_firstorder.Transform.control_params.astype", "distances.abs().sum.abs().sum.abs().sum", "result.sum().reshape.sum().reshape.sum().reshape", "coordinates.unsqueeze.unsqueeze.reshape", "generator_firstorder.Transform.reshape", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "paddle.log", "generator_firstorder.broadcast", "distances.abs().sum.abs().sum.abs", "result.sum().reshape.sum().reshape.sum"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_firstorder.broadcast"], ["", "def", "warp_coordinates", "(", "self", ",", "coordinates", ")", ":", "\n", "        ", "theta", "=", "self", ".", "theta", ".", "astype", "(", "'float32'", ")", "\n", "theta", "=", "theta", ".", "unsqueeze", "(", "1", ")", "\n", "coordinates", "=", "coordinates", ".", "unsqueeze", "(", "-", "1", ")", "\n", "\n", "# If x1:(1, 5, 2, 2), x2:(10, 100, 2, 1)", "\n", "# torch.matmul can broadcast x1, x2 to (10, 100, ...)", "\n", "# In PDPD, it should be done manually", "\n", "theta_part_a", "=", "theta", "[", ":", ",", ":", ",", ":", ",", ":", "2", "]", "\n", "theta_part_b", "=", "theta", "[", ":", ",", ":", ",", ":", ",", "2", ":", "]", "\n", "\n", "transformed", "=", "paddle", ".", "matmul", "(", "\n", "*", "broadcast", "(", "theta_part_a", ",", "coordinates", ")", ")", "+", "theta_part_b", "#M*p + m0", "\n", "transformed", "=", "transformed", ".", "squeeze", "(", "-", "1", ")", "\n", "if", "self", ".", "tps", ":", "\n", "            ", "control_points", "=", "self", ".", "control_points", ".", "astype", "(", "'float32'", ")", "\n", "control_params", "=", "self", ".", "control_params", ".", "astype", "(", "'float32'", ")", "\n", "distances", "=", "coordinates", ".", "reshape", "(", "\n", "(", "coordinates", ".", "shape", "[", "0", "]", ",", "-", "1", ",", "1", ",", "2", ")", ")", "-", "control_points", ".", "reshape", "(", "\n", "(", "1", ",", "1", ",", "-", "1", ",", "2", ")", ")", "\n", "distances", "=", "distances", ".", "abs", "(", ")", ".", "sum", "(", "-", "1", ")", "\n", "\n", "result", "=", "distances", "*", "distances", "\n", "result", "=", "result", "*", "paddle", ".", "log", "(", "distances", "+", "1e-6", ")", "\n", "result", "=", "result", "*", "control_params", "\n", "result", "=", "result", ".", "sum", "(", "2", ")", ".", "reshape", "(", "(", "self", ".", "bs", ",", "coordinates", ".", "shape", "[", "1", "]", ",", "1", ")", ")", "\n", "transformed", "=", "transformed", "+", "result", "\n", "", "return", "transformed", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_firstorder.Transform.jacobian": [[272, 284], ["generator_firstorder.Transform.warp_coordinates", "paddle.grad", "paddle.grad", "paddle.grad", "paddle.grad", "paddle.grad", "paddle.grad", "paddle.grad", "paddle.grad", "paddle.grad", "paddle.grad", "paddle.grad", "paddle.grad", "paddle.grad", "paddle.grad", "paddle.grad", "paddle.grad", "paddle.grad", "paddle.grad", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "len", "new_coordinates[].sum", "new_coordinates[].sum", "grad_x[].unsqueeze", "grad_y[].unsqueeze"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_firstorder.Transform.warp_coordinates"], ["", "def", "jacobian", "(", "self", ",", "coordinates", ")", ":", "\n", "        ", "new_coordinates", "=", "self", ".", "warp_coordinates", "(", "coordinates", ")", "\n", "assert", "len", "(", "new_coordinates", ".", "shape", ")", "==", "3", "\n", "grad_x", "=", "paddle", ".", "grad", "(", "new_coordinates", "[", ":", ",", ":", ",", "0", "]", ".", "sum", "(", ")", ",", "\n", "coordinates", ",", "\n", "create_graph", "=", "True", ")", "\n", "grad_y", "=", "paddle", ".", "grad", "(", "new_coordinates", "[", ":", ",", ":", ",", "1", "]", ".", "sum", "(", ")", ",", "\n", "coordinates", ",", "\n", "create_graph", "=", "True", ")", "\n", "jacobian", "=", "paddle", ".", "concat", "(", "\n", "[", "grad_x", "[", "0", "]", ".", "unsqueeze", "(", "-", "2", ")", ",", "grad_y", "[", "0", "]", ".", "unsqueeze", "(", "-", "2", ")", "]", ",", "axis", "=", "-", "2", ")", "\n", "return", "jacobian", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_firstorder.broadcast": [[286, 298], ["numpy.max", "paddle.broadcast_to", "paddle.broadcast_to", "paddle.broadcast_to", "paddle.broadcast_to", "paddle.broadcast_to", "paddle.broadcast_to", "len", "len", "ValueError", "numpy.stack"], "function", ["None"], ["", "", "def", "broadcast", "(", "x", ",", "y", ")", ":", "\n", "    ", "\"\"\"\n    Broadcast before matmul\n    \"\"\"", "\n", "if", "len", "(", "x", ".", "shape", ")", "!=", "len", "(", "y", ".", "shape", ")", ":", "\n", "        ", "raise", "ValueError", "(", "x", ".", "shape", ",", "'!='", ",", "y", ".", "shape", ")", "\n", "", "*", "dim_x", ",", "_", ",", "_", "=", "x", ".", "shape", "\n", "*", "dim_y", ",", "_", ",", "_", "=", "y", ".", "shape", "\n", "max_shape", "=", "np", ".", "max", "(", "np", ".", "stack", "(", "[", "dim_x", ",", "dim_y", "]", ",", "axis", "=", "0", ")", ",", "axis", "=", "0", ")", "\n", "x_bc", "=", "paddle", ".", "broadcast_to", "(", "x", ",", "(", "*", "max_shape", ",", "x", ".", "shape", "[", "-", "2", "]", ",", "x", ".", "shape", "[", "-", "1", "]", ")", ")", "\n", "y_bc", "=", "paddle", ".", "broadcast_to", "(", "y", ",", "(", "*", "max_shape", ",", "y", ".", "shape", "[", "-", "2", "]", ",", "y", ".", "shape", "[", "-", "1", "]", ")", ")", "\n", "return", "x_bc", ",", "y_bc", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_pixel2style2pixel.Flatten.forward": [[33, 35], ["input.reshape"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "input", ".", "reshape", "(", "(", "input", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_pixel2style2pixel.SEModule.__init__": [[82, 97], ["paddle.Layer.__init__", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Sigmoid", "paddle.Sigmoid", "paddle.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channels", ",", "reduction", ")", ":", "\n", "        ", "super", "(", "SEModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2D", "(", "1", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Conv2D", "(", "channels", ",", "\n", "channels", "//", "reduction", ",", "\n", "kernel_size", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Conv2D", "(", "channels", "//", "reduction", ",", "\n", "channels", ",", "\n", "kernel_size", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_pixel2style2pixel.SEModule.forward": [[98, 106], ["generator_pixel2style2pixel.SEModule.avg_pool", "generator_pixel2style2pixel.SEModule.fc1", "generator_pixel2style2pixel.SEModule.relu", "generator_pixel2style2pixel.SEModule.fc2", "generator_pixel2style2pixel.SEModule.sigmoid"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "module_input", "=", "x", "\n", "x", "=", "self", ".", "avg_pool", "(", "x", ")", "\n", "x", "=", "self", ".", "fc1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "fc2", "(", "x", ")", "\n", "x", "=", "self", ".", "sigmoid", "(", "x", ")", "\n", "return", "module_input", "*", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_pixel2style2pixel.BottleneckIR.__init__": [[109, 123], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.PReLU", "paddle.PReLU", "paddle.PReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "depth", ",", "stride", ")", ":", "\n", "        ", "super", "(", "BottleneckIR", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "in_channel", "==", "depth", ":", "\n", "            ", "self", ".", "shortcut_layer", "=", "nn", ".", "MaxPool2D", "(", "1", ",", "stride", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "shortcut_layer", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "in_channel", ",", "depth", ",", "(", "1", ",", "1", ")", ",", "stride", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "depth", ")", ")", "\n", "", "self", ".", "res_layer", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "BatchNorm2D", "(", "in_channel", ")", ",", "\n", "nn", ".", "Conv2D", "(", "in_channel", ",", "depth", ",", "(", "3", ",", "3", ")", ",", "(", "1", ",", "1", ")", ",", "1", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "depth", ")", ",", "\n", "nn", ".", "Conv2D", "(", "depth", ",", "depth", ",", "(", "3", ",", "3", ")", ",", "stride", ",", "1", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "depth", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_pixel2style2pixel.BottleneckIR.forward": [[124, 128], ["generator_pixel2style2pixel.BottleneckIR.shortcut_layer", "generator_pixel2style2pixel.BottleneckIR.res_layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "shortcut", "=", "self", ".", "shortcut_layer", "(", "x", ")", "\n", "res", "=", "self", ".", "res_layer", "(", "x", ")", "\n", "return", "res", "+", "shortcut", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_pixel2style2pixel.BottleneckIRSE.__init__": [[131, 145], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.PReLU", "paddle.PReLU", "paddle.PReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "generator_pixel2style2pixel.SEModule", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "depth", ",", "stride", ")", ":", "\n", "        ", "super", "(", "BottleneckIRSE", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "in_channel", "==", "depth", ":", "\n", "            ", "self", ".", "shortcut_layer", "=", "nn", ".", "MaxPool2D", "(", "1", ",", "stride", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "shortcut_layer", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "in_channel", ",", "depth", ",", "(", "1", ",", "1", ")", ",", "stride", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "depth", ")", ")", "\n", "", "self", ".", "res_layer", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "BatchNorm2D", "(", "in_channel", ")", ",", "\n", "nn", ".", "Conv2D", "(", "in_channel", ",", "depth", ",", "(", "3", ",", "3", ")", ",", "(", "1", ",", "1", ")", ",", "1", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "depth", ")", ",", "\n", "nn", ".", "Conv2D", "(", "depth", ",", "depth", ",", "(", "3", ",", "3", ")", ",", "stride", ",", "1", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "depth", ")", ",", "SEModule", "(", "depth", ",", "16", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_pixel2style2pixel.BottleneckIRSE.forward": [[146, 150], ["generator_pixel2style2pixel.BottleneckIRSE.shortcut_layer", "generator_pixel2style2pixel.BottleneckIRSE.res_layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "shortcut", "=", "self", ".", "shortcut_layer", "(", "x", ")", "\n", "res", "=", "self", ".", "res_layer", "(", "x", ")", "\n", "return", "res", "+", "shortcut", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_pixel2style2pixel.GradualStyleBlock.__init__": [[153, 170], ["paddle.Layer.__init__", "int", "range", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "modules.equalized.EqualLinear", "numpy.log2", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_c", ",", "out_c", ",", "spatial", ")", ":", "\n", "        ", "super", "(", "GradualStyleBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "out_c", "=", "out_c", "\n", "self", ".", "spatial", "=", "spatial", "\n", "num_pools", "=", "int", "(", "np", ".", "log2", "(", "spatial", ")", ")", "\n", "modules", "=", "[", "]", "\n", "modules", "+=", "[", "\n", "nn", ".", "Conv2D", "(", "in_c", ",", "out_c", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", "\n", "]", "\n", "for", "i", "in", "range", "(", "num_pools", "-", "1", ")", ":", "\n", "            ", "modules", "+=", "[", "\n", "nn", ".", "Conv2D", "(", "out_c", ",", "out_c", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", "\n", "]", "\n", "", "self", ".", "convs", "=", "nn", ".", "Sequential", "(", "*", "modules", ")", "\n", "self", ".", "linear", "=", "EqualLinear", "(", "out_c", ",", "out_c", ",", "lr_mul", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_pixel2style2pixel.GradualStyleBlock.forward": [[171, 176], ["generator_pixel2style2pixel.GradualStyleBlock.convs", "generator_pixel2style2pixel.GradualStyleBlock.reshape", "generator_pixel2style2pixel.GradualStyleBlock.linear"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.imresize.linear"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "convs", "(", "x", ")", "\n", "x", "=", "x", ".", "reshape", "(", "(", "-", "1", ",", "self", ".", "out_c", ")", ")", "\n", "x", "=", "self", ".", "linear", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_pixel2style2pixel.GradualStyleEncoder.__init__": [[179, 214], ["paddle.Layer.__init__", "generator_pixel2style2pixel.get_blocks", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "range", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.PReLU", "paddle.PReLU", "paddle.PReLU", "generator_pixel2style2pixel.GradualStyleEncoder.styles.append", "modules.append", "generator_pixel2style2pixel.GradualStyleBlock", "unit_module", "generator_pixel2style2pixel.GradualStyleBlock", "generator_pixel2style2pixel.GradualStyleBlock"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.get_blocks", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["    ", "def", "__init__", "(", "self", ",", "num_layers", ",", "mode", "=", "'ir'", ",", "opts", "=", "None", ")", ":", "\n", "        ", "super", "(", "GradualStyleEncoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "num_layers", "in", "[", "50", ",", "100", ",", "\n", "152", "]", ",", "'num_layers should be 50,100, or 152'", "\n", "assert", "mode", "in", "[", "'ir'", ",", "'ir_se'", "]", ",", "'mode should be ir or ir_se'", "\n", "blocks", "=", "get_blocks", "(", "num_layers", ")", "\n", "if", "mode", "==", "'ir'", ":", "\n", "            ", "unit_module", "=", "BottleneckIR", "\n", "", "elif", "mode", "==", "'ir_se'", ":", "\n", "            ", "unit_module", "=", "BottleneckIRSE", "\n", "", "self", ".", "input_layer", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "opts", ".", "input_nc", ",", "64", ",", "(", "3", ",", "3", ")", ",", "1", ",", "1", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "64", ")", ",", "nn", ".", "PReLU", "(", "64", ")", ")", "\n", "modules", "=", "[", "]", "\n", "for", "block", "in", "blocks", ":", "\n", "            ", "for", "bottleneck", "in", "block", ":", "\n", "                ", "modules", ".", "append", "(", "\n", "unit_module", "(", "bottleneck", ".", "in_channel", ",", "bottleneck", ".", "depth", ",", "\n", "bottleneck", ".", "stride", ")", ")", "\n", "", "", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "modules", ")", "\n", "\n", "self", ".", "styles", "=", "nn", ".", "LayerList", "(", ")", "\n", "self", ".", "style_count", "=", "18", "\n", "self", ".", "coarse_ind", "=", "3", "\n", "self", ".", "middle_ind", "=", "7", "\n", "for", "i", "in", "range", "(", "self", ".", "style_count", ")", ":", "\n", "            ", "if", "i", "<", "self", ".", "coarse_ind", ":", "\n", "                ", "style", "=", "GradualStyleBlock", "(", "512", ",", "512", ",", "16", ")", "\n", "", "elif", "i", "<", "self", ".", "middle_ind", ":", "\n", "                ", "style", "=", "GradualStyleBlock", "(", "512", ",", "512", ",", "32", ")", "\n", "", "else", ":", "\n", "                ", "style", "=", "GradualStyleBlock", "(", "512", ",", "512", ",", "64", ")", "\n", "", "self", ".", "styles", ".", "append", "(", "style", ")", "\n", "", "self", ".", "latlayer1", "=", "nn", ".", "Conv2D", "(", "256", ",", "512", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "latlayer2", "=", "nn", ".", "Conv2D", "(", "128", ",", "512", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_pixel2style2pixel.GradualStyleEncoder._upsample_add": [[215, 234], ["paddle.interpolate", "paddle.interpolate", "paddle.interpolate"], "methods", ["None"], ["", "def", "_upsample_add", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "'''Upsample and add two feature maps.\n        Args:\n          x: (Tensor) top feature map to be upsampled.\n          y: (Tensor) lateral feature map.\n        Returns:\n          (Tensor) added feature map.\n        Note in Pypaddle, when input size is odd, the upsampled feature map\n        with `F.upsample(..., scale_factor=2, mode='nearest')`\n        maybe not equal to the lateral feature map size.\n        e.g.\n        original input size: [N,_,15,15] ->\n        conv2d feature map size: [N,_,8,8] ->\n        upsampled feature map size: [N,_,16,16]\n        So we choose bilinear upsample which supports arbitrary output sizes.\n        '''", "\n", "_", ",", "_", ",", "H", ",", "W", "=", "y", ".", "shape", "\n", "return", "F", ".", "interpolate", "(", "\n", "x", ",", "size", "=", "(", "H", ",", "W", ")", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "+", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_pixel2style2pixel.GradualStyleEncoder.forward": [[235, 262], ["generator_pixel2style2pixel.GradualStyleEncoder.input_layer", "list", "enumerate", "range", "generator_pixel2style2pixel.GradualStyleEncoder._upsample_add", "range", "generator_pixel2style2pixel.GradualStyleEncoder._upsample_add", "range", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "generator_pixel2style2pixel.GradualStyleEncoder.body._sub_layers.values", "l", "latents.append", "generator_pixel2style2pixel.GradualStyleEncoder.latlayer1", "latents.append", "generator_pixel2style2pixel.GradualStyleEncoder.latlayer2", "latents.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_pixel2style2pixel.GradualStyleEncoder._upsample_add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_pixel2style2pixel.GradualStyleEncoder._upsample_add", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "input_layer", "(", "x", ")", "\n", "\n", "latents", "=", "[", "]", "\n", "modulelist", "=", "list", "(", "self", ".", "body", ".", "_sub_layers", ".", "values", "(", ")", ")", "\n", "for", "i", ",", "l", "in", "enumerate", "(", "modulelist", ")", ":", "\n", "            ", "x", "=", "l", "(", "x", ")", "\n", "if", "i", "==", "6", ":", "\n", "                ", "c1", "=", "x", "\n", "", "elif", "i", "==", "20", ":", "\n", "                ", "c2", "=", "x", "\n", "", "elif", "i", "==", "23", ":", "\n", "                ", "c3", "=", "x", "\n", "\n", "", "", "for", "j", "in", "range", "(", "self", ".", "coarse_ind", ")", ":", "\n", "            ", "latents", ".", "append", "(", "self", ".", "styles", "[", "j", "]", "(", "c3", ")", ")", "\n", "\n", "", "p2", "=", "self", ".", "_upsample_add", "(", "c3", ",", "self", ".", "latlayer1", "(", "c2", ")", ")", "\n", "for", "j", "in", "range", "(", "self", ".", "coarse_ind", ",", "self", ".", "middle_ind", ")", ":", "\n", "            ", "latents", ".", "append", "(", "self", ".", "styles", "[", "j", "]", "(", "p2", ")", ")", "\n", "\n", "", "p1", "=", "self", ".", "_upsample_add", "(", "p2", ",", "self", ".", "latlayer2", "(", "c1", ")", ")", "\n", "for", "j", "in", "range", "(", "self", ".", "middle_ind", ",", "self", ".", "style_count", ")", ":", "\n", "            ", "latents", ".", "append", "(", "self", ".", "styles", "[", "j", "]", "(", "p1", ")", ")", "\n", "\n", "", "out", "=", "paddle", ".", "stack", "(", "latents", ",", "1", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_pixel2style2pixel.BackboneEncoderUsingLastLayerIntoW.__init__": [[265, 288], ["paddle.Layer.__init__", "print", "generator_pixel2style2pixel.get_blocks", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "modules.equalized.EqualLinear", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.PReLU", "paddle.PReLU", "paddle.PReLU", "modules.append", "unit_module"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.get_blocks", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["    ", "def", "__init__", "(", "self", ",", "num_layers", ",", "mode", "=", "'ir'", ",", "opts", "=", "None", ")", ":", "\n", "        ", "super", "(", "BackboneEncoderUsingLastLayerIntoW", ",", "self", ")", ".", "__init__", "(", ")", "\n", "print", "(", "'Using BackboneEncoderUsingLastLayerIntoW'", ")", "\n", "assert", "num_layers", "in", "[", "50", ",", "100", ",", "\n", "152", "]", ",", "'num_layers should be 50,100, or 152'", "\n", "assert", "mode", "in", "[", "'ir'", ",", "'ir_se'", "]", ",", "'mode should be ir or ir_se'", "\n", "blocks", "=", "get_blocks", "(", "num_layers", ")", "\n", "if", "mode", "==", "'ir'", ":", "\n", "            ", "unit_module", "=", "BottleneckIR", "\n", "", "elif", "mode", "==", "'ir_se'", ":", "\n", "            ", "unit_module", "=", "BottleneckIRSE", "\n", "", "self", ".", "input_layer", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "opts", ".", "input_nc", ",", "64", ",", "(", "3", ",", "3", ")", ",", "1", ",", "1", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "64", ")", ",", "nn", ".", "PReLU", "(", "64", ")", ")", "\n", "self", ".", "output_pool", "=", "nn", ".", "AdaptiveAvgPool2D", "(", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "linear", "=", "EqualLinear", "(", "512", ",", "512", ",", "lr_mul", "=", "1", ")", "\n", "modules", "=", "[", "]", "\n", "for", "block", "in", "blocks", ":", "\n", "            ", "for", "bottleneck", "in", "block", ":", "\n", "                ", "modules", ".", "append", "(", "\n", "unit_module", "(", "bottleneck", ".", "in_channel", ",", "bottleneck", ".", "depth", ",", "\n", "bottleneck", ".", "stride", ")", ")", "\n", "", "", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "modules", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_pixel2style2pixel.BackboneEncoderUsingLastLayerIntoW.forward": [[289, 296], ["generator_pixel2style2pixel.BackboneEncoderUsingLastLayerIntoW.input_layer", "generator_pixel2style2pixel.BackboneEncoderUsingLastLayerIntoW.body", "generator_pixel2style2pixel.BackboneEncoderUsingLastLayerIntoW.output_pool", "generator_pixel2style2pixel.BackboneEncoderUsingLastLayerIntoW.reshape", "generator_pixel2style2pixel.BackboneEncoderUsingLastLayerIntoW.linear"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.imresize.linear"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "input_layer", "(", "x", ")", "\n", "x", "=", "self", ".", "body", "(", "x", ")", "\n", "x", "=", "self", ".", "output_pool", "(", "x", ")", "\n", "x", "=", "x", ".", "reshape", "(", "(", "-", "1", ",", "512", ")", ")", "\n", "x", "=", "self", ".", "linear", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_pixel2style2pixel.BackboneEncoderUsingLastLayerIntoWPlus.__init__": [[299, 325], ["paddle.Layer.__init__", "print", "generator_pixel2style2pixel.get_blocks", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "modules.equalized.EqualLinear", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.PReLU", "paddle.PReLU", "paddle.PReLU", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "generator_pixel2style2pixel.Flatten", "paddle.Linear", "paddle.Linear", "paddle.Linear", "modules.append", "unit_module"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.get_blocks", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["    ", "def", "__init__", "(", "self", ",", "num_layers", ",", "mode", "=", "'ir'", ",", "opts", "=", "None", ")", ":", "\n", "        ", "super", "(", "BackboneEncoderUsingLastLayerIntoWPlus", ",", "self", ")", ".", "__init__", "(", ")", "\n", "print", "(", "'Using BackboneEncoderUsingLastLayerIntoWPlus'", ")", "\n", "assert", "num_layers", "in", "[", "50", ",", "100", ",", "\n", "152", "]", ",", "'num_layers should be 50,100, or 152'", "\n", "assert", "mode", "in", "[", "'ir'", ",", "'ir_se'", "]", ",", "'mode should be ir or ir_se'", "\n", "blocks", "=", "get_blocks", "(", "num_layers", ")", "\n", "if", "mode", "==", "'ir'", ":", "\n", "            ", "unit_module", "=", "BottleneckIR", "\n", "", "elif", "mode", "==", "'ir_se'", ":", "\n", "            ", "unit_module", "=", "BottleneckIRSE", "\n", "", "self", ".", "input_layer", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "opts", ".", "input_nc", ",", "64", ",", "(", "3", ",", "3", ")", ",", "1", ",", "1", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "64", ")", ",", "nn", ".", "PReLU", "(", "64", ")", ")", "\n", "self", ".", "output_layer_2", "=", "nn", ".", "Sequential", "(", "nn", ".", "BatchNorm2D", "(", "512", ")", ",", "\n", "nn", ".", "AdaptiveAvgPool2D", "(", "(", "7", ",", "7", ")", ")", ",", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "512", "*", "7", "*", "7", ",", "512", ")", ")", "\n", "self", ".", "linear", "=", "EqualLinear", "(", "512", ",", "512", "*", "18", ",", "lr_mul", "=", "1", ")", "\n", "modules", "=", "[", "]", "\n", "for", "block", "in", "blocks", ":", "\n", "            ", "for", "bottleneck", "in", "block", ":", "\n", "                ", "modules", ".", "append", "(", "\n", "unit_module", "(", "bottleneck", ".", "in_channel", ",", "bottleneck", ".", "depth", ",", "\n", "bottleneck", ".", "stride", ")", ")", "\n", "", "", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "modules", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_pixel2style2pixel.BackboneEncoderUsingLastLayerIntoWPlus.forward": [[326, 333], ["generator_pixel2style2pixel.BackboneEncoderUsingLastLayerIntoWPlus.input_layer", "generator_pixel2style2pixel.BackboneEncoderUsingLastLayerIntoWPlus.body", "generator_pixel2style2pixel.BackboneEncoderUsingLastLayerIntoWPlus.output_layer_2", "generator_pixel2style2pixel.BackboneEncoderUsingLastLayerIntoWPlus.linear", "x.reshape.reshape.reshape"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.imresize.linear"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "input_layer", "(", "x", ")", "\n", "x", "=", "self", ".", "body", "(", "x", ")", "\n", "x", "=", "self", ".", "output_layer_2", "(", "x", ")", "\n", "x", "=", "self", ".", "linear", "(", "x", ")", "\n", "x", "=", "x", ".", "reshape", "(", "(", "-", "1", ",", "18", ",", "512", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_pixel2style2pixel.Pixel2Style2Pixel.__init__": [[337, 355], ["paddle.Layer.__init__", "generator_pixel2style2pixel.Pixel2Style2Pixel.set_opts", "generator_pixel2style2pixel.Pixel2Style2Pixel.set_encoder", "generator_styleganv2.StyleGANv2Generator", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "generator_pixel2style2pixel.Pixel2Style2Pixel.register_buffer", "generator_pixel2style2pixel.Pixel2Style2Pixel.register_buffer", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_pixel2style2pixel.Pixel2Style2Pixel.set_opts", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_pixel2style2pixel.Pixel2Style2Pixel.set_encoder"], ["    ", "def", "__init__", "(", "self", ",", "opts", ")", ":", "\n", "        ", "super", "(", "Pixel2Style2Pixel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "set_opts", "(", "opts", ")", "\n", "# Define architecture", "\n", "self", ".", "encoder", "=", "self", ".", "set_encoder", "(", ")", "\n", "self", ".", "decoder", "=", "StyleGANv2Generator", "(", "opts", ".", "size", ",", "opts", ".", "style_dim", ",", "\n", "opts", ".", "n_mlp", ",", "opts", ".", "channel_multiplier", ")", "\n", "self", ".", "face_pool", "=", "nn", ".", "AdaptiveAvgPool2D", "(", "(", "256", ",", "256", ")", ")", "\n", "self", ".", "style_dim", "=", "self", ".", "decoder", ".", "style_dim", "\n", "self", ".", "n_latent", "=", "self", ".", "decoder", ".", "n_latent", "\n", "if", "self", ".", "opts", ".", "start_from_latent_avg", ":", "\n", "            ", "if", "self", ".", "opts", ".", "learn_in_w", ":", "\n", "                ", "self", ".", "register_buffer", "(", "'latent_avg'", ",", "\n", "paddle", ".", "zeros", "(", "[", "1", ",", "self", ".", "style_dim", "]", ")", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "register_buffer", "(", "\n", "'latent_avg'", ",", "\n", "paddle", ".", "zeros", "(", "[", "1", ",", "self", ".", "n_latent", ",", "self", ".", "style_dim", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_pixel2style2pixel.Pixel2Style2Pixel.set_encoder": [[356, 368], ["generator_pixel2style2pixel.GradualStyleEncoder", "generator_pixel2style2pixel.BackboneEncoderUsingLastLayerIntoW", "generator_pixel2style2pixel.BackboneEncoderUsingLastLayerIntoWPlus", "Exception"], "methods", ["None"], ["", "", "", "def", "set_encoder", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "opts", ".", "encoder_type", "==", "'GradualStyleEncoder'", ":", "\n", "            ", "encoder", "=", "GradualStyleEncoder", "(", "50", ",", "'ir_se'", ",", "self", ".", "opts", ")", "\n", "", "elif", "self", ".", "opts", ".", "encoder_type", "==", "'BackboneEncoderUsingLastLayerIntoW'", ":", "\n", "            ", "encoder", "=", "BackboneEncoderUsingLastLayerIntoW", "(", "50", ",", "'ir_se'", ",", "self", ".", "opts", ")", "\n", "", "elif", "self", ".", "opts", ".", "encoder_type", "==", "'BackboneEncoderUsingLastLayerIntoWPlus'", ":", "\n", "            ", "encoder", "=", "BackboneEncoderUsingLastLayerIntoWPlus", "(", "\n", "50", ",", "'ir_se'", ",", "self", ".", "opts", ")", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "'{} is not a valid encoders'", ".", "format", "(", "\n", "self", ".", "opts", ".", "encoder_type", ")", ")", "\n", "", "return", "encoder", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_pixel2style2pixel.Pixel2Style2Pixel.forward": [[369, 413], ["generator_pixel2style2pixel.Pixel2Style2Pixel.decoder", "generator_pixel2style2pixel.Pixel2Style2Pixel.encoder", "generator_pixel2style2pixel.Pixel2Style2Pixel.face_pool", "generator_pixel2style2pixel.Pixel2Style2Pixel.latent_avg.tile", "generator_pixel2style2pixel.Pixel2Style2Pixel.latent_avg.tile"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "\n", "x", ",", "\n", "resize", "=", "True", ",", "\n", "latent_mask", "=", "None", ",", "\n", "input_code", "=", "False", ",", "\n", "randomize_noise", "=", "True", ",", "\n", "inject_latent", "=", "None", ",", "\n", "return_latents", "=", "False", ",", "\n", "alpha", "=", "None", ")", ":", "\n", "        ", "if", "input_code", ":", "\n", "            ", "codes", "=", "x", "\n", "", "else", ":", "\n", "            ", "codes", "=", "self", ".", "encoder", "(", "x", ")", "\n", "# normalize with respect to the center of an average face", "\n", "if", "self", ".", "opts", ".", "start_from_latent_avg", ":", "\n", "                ", "if", "self", ".", "opts", ".", "learn_in_w", ":", "\n", "                    ", "codes", "=", "codes", "+", "self", ".", "latent_avg", ".", "tile", "(", "[", "codes", ".", "shape", "[", "0", "]", ",", "1", "]", ")", "\n", "", "else", ":", "\n", "                    ", "codes", "=", "codes", "+", "self", ".", "latent_avg", ".", "tile", "(", "[", "codes", ".", "shape", "[", "0", "]", ",", "1", ",", "1", "]", ")", "\n", "\n", "", "", "", "if", "latent_mask", "is", "not", "None", ":", "\n", "            ", "for", "i", "in", "latent_mask", ":", "\n", "                ", "if", "inject_latent", "is", "not", "None", ":", "\n", "                    ", "if", "alpha", "is", "not", "None", ":", "\n", "                        ", "codes", "[", ":", ",", "i", "]", "=", "alpha", "*", "inject_latent", "[", ":", ",", "i", "]", "+", "(", "\n", "1", "-", "alpha", ")", "*", "codes", "[", ":", ",", "i", "]", "\n", "", "else", ":", "\n", "                        ", "codes", "[", ":", ",", "i", "]", "=", "inject_latent", "[", ":", ",", "i", "]", "\n", "", "", "else", ":", "\n", "                    ", "codes", "[", ":", ",", "i", "]", "=", "0", "\n", "\n", "", "", "", "input_is_latent", "=", "not", "input_code", "\n", "images", ",", "result_latent", "=", "self", ".", "decoder", "(", "[", "codes", "]", ",", "\n", "input_is_latent", "=", "input_is_latent", ",", "\n", "randomize_noise", "=", "randomize_noise", ",", "\n", "return_latents", "=", "return_latents", ")", "\n", "\n", "if", "resize", ":", "\n", "            ", "images", "=", "self", ".", "face_pool", "(", "images", ")", "\n", "\n", "", "if", "return_latents", ":", "\n", "            ", "return", "images", ",", "result_latent", "\n", "", "else", ":", "\n", "            ", "return", "images", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_pixel2style2pixel.Pixel2Style2Pixel.set_opts": [[414, 416], ["None"], "methods", ["None"], ["", "", "def", "set_opts", "(", "self", ",", "opts", ")", ":", "\n", "        ", "self", ".", "opts", "=", "opts", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_pixel2style2pixel.l2_norm": [[37, 41], ["paddle.norm", "paddle.norm", "paddle.norm", "paddle.div", "paddle.div", "paddle.div"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm"], ["", "", "def", "l2_norm", "(", "input", ",", "axis", "=", "1", ")", ":", "\n", "    ", "norm", "=", "paddle", ".", "norm", "(", "input", ",", "2", ",", "axis", ",", "True", ")", "\n", "output", "=", "paddle", ".", "div", "(", "input", ",", "norm", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_pixel2style2pixel.get_block": [[47, 50], ["generator_pixel2style2pixel.Bottleneck", "generator_pixel2style2pixel.Bottleneck", "range"], "function", ["None"], ["", "def", "get_block", "(", "in_channel", ",", "depth", ",", "num_units", ",", "stride", "=", "2", ")", ":", "\n", "    ", "return", "[", "Bottleneck", "(", "in_channel", ",", "depth", ",", "stride", ")", "\n", "]", "+", "[", "Bottleneck", "(", "depth", ",", "depth", ",", "1", ")", "for", "i", "in", "range", "(", "num_units", "-", "1", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_pixel2style2pixel.get_blocks": [[52, 79], ["generator_pixel2style2pixel.get_block", "generator_pixel2style2pixel.get_block", "generator_pixel2style2pixel.get_block", "generator_pixel2style2pixel.get_block", "generator_pixel2style2pixel.get_block", "generator_pixel2style2pixel.get_block", "generator_pixel2style2pixel.get_block", "generator_pixel2style2pixel.get_block", "ValueError", "generator_pixel2style2pixel.get_block", "generator_pixel2style2pixel.get_block", "generator_pixel2style2pixel.get_block", "generator_pixel2style2pixel.get_block"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.get_block", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.get_block", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.get_block", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.get_block", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.get_block", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.get_block", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.get_block", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.get_block", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.get_block", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.get_block", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.get_block", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.get_block"], ["", "def", "get_blocks", "(", "num_layers", ")", ":", "\n", "    ", "if", "num_layers", "==", "50", ":", "\n", "        ", "blocks", "=", "[", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "64", ",", "num_units", "=", "3", ")", ",", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "128", ",", "num_units", "=", "4", ")", ",", "\n", "get_block", "(", "in_channel", "=", "128", ",", "depth", "=", "256", ",", "num_units", "=", "14", ")", ",", "\n", "get_block", "(", "in_channel", "=", "256", ",", "depth", "=", "512", ",", "num_units", "=", "3", ")", "\n", "]", "\n", "", "elif", "num_layers", "==", "100", ":", "\n", "        ", "blocks", "=", "[", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "64", ",", "num_units", "=", "3", ")", ",", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "128", ",", "num_units", "=", "13", ")", ",", "\n", "get_block", "(", "in_channel", "=", "128", ",", "depth", "=", "256", ",", "num_units", "=", "30", ")", ",", "\n", "get_block", "(", "in_channel", "=", "256", ",", "depth", "=", "512", ",", "num_units", "=", "3", ")", "\n", "]", "\n", "", "elif", "num_layers", "==", "152", ":", "\n", "        ", "blocks", "=", "[", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "64", ",", "num_units", "=", "3", ")", ",", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "128", ",", "num_units", "=", "8", ")", ",", "\n", "get_block", "(", "in_channel", "=", "128", ",", "depth", "=", "256", ",", "num_units", "=", "36", ")", ",", "\n", "get_block", "(", "in_channel", "=", "256", ",", "depth", "=", "512", ",", "num_units", "=", "3", ")", "\n", "]", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "\"Invalid number of layers: {}. Must be one of [50, 100, 152]\"", ".", "\n", "format", "(", "num_layers", ")", ")", "\n", "", "return", "blocks", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_animegan.Conv2DNormLReLU.__init__": [[13, 30], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.GroupNorm", "paddle.GroupNorm", "paddle.GroupNorm", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", ":", "int", ",", "\n", "out_channels", ":", "int", ",", "\n", "kernel_size", ":", "int", "=", "3", ",", "\n", "stride", ":", "int", "=", "1", ",", "\n", "padding", ":", "int", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2D", "(", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "stride", ",", "\n", "padding", ",", "\n", "bias_attr", "=", "bias_attr", ")", "\n", "# NOTE layer norm is crucial for animegan!", "\n", "self", ".", "norm", "=", "nn", ".", "GroupNorm", "(", "1", ",", "out_channels", ")", "\n", "self", ".", "lrelu", "=", "nn", ".", "LeakyReLU", "(", "0.2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_animegan.Conv2DNormLReLU.forward": [[31, 36], ["generater_animegan.Conv2DNormLReLU.conv", "generater_animegan.Conv2DNormLReLU.norm", "generater_animegan.Conv2DNormLReLU.lrelu"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "norm", "(", "x", ")", "\n", "x", "=", "self", ".", "lrelu", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_animegan.ResBlock.__init__": [[39, 45], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "generater_animegan.Conv2DNormLReLU", "generater_animegan.Conv2DNormLReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ":", "int", ",", "out_channels", ":", "int", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "\n", "Conv2DNormLReLU", "(", "in_channels", ",", "out_channels", ",", "1", ",", "padding", "=", "0", ")", ",", "\n", "Conv2DNormLReLU", "(", "out_channels", ",", "out_channels", ",", "3", ")", ",", "\n", "nn", ".", "Conv2D", "(", "out_channels", ",", "out_channels", "//", "2", ",", "1", ",", "bias_attr", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_animegan.ResBlock.forward": [[46, 49], ["generater_animegan.ResBlock.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x0", ")", ":", "\n", "        ", "x", "=", "self", ".", "body", "(", "x0", ")", "\n", "return", "x0", "+", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_animegan.InvertedresBlock.__init__": [[52, 85], ["paddle.Layer.__init__", "round", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "generater_animegan.Conv2DNormLReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.GroupNorm", "paddle.GroupNorm", "paddle.GroupNorm", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.GroupNorm", "paddle.GroupNorm", "paddle.GroupNorm"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", ":", "int", ",", "\n", "expansion", ":", "float", ",", "\n", "out_channels", ":", "int", ",", "\n", "bias_attr", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "expansion", "=", "expansion", "\n", "self", ".", "out_channels", "=", "out_channels", "\n", "self", ".", "bottle_channels", "=", "round", "(", "self", ".", "expansion", "*", "self", ".", "in_channels", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "\n", "# pw", "\n", "Conv2DNormLReLU", "(", "self", ".", "in_channels", ",", "\n", "self", ".", "bottle_channels", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "bias_attr", ")", ",", "\n", "# dw", "\n", "nn", ".", "Conv2D", "(", "self", ".", "bottle_channels", ",", "\n", "self", ".", "bottle_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "groups", "=", "self", ".", "bottle_channels", ",", "\n", "bias_attr", "=", "True", ")", ",", "\n", "nn", ".", "GroupNorm", "(", "1", ",", "self", ".", "bottle_channels", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "# pw & linear", "\n", "nn", ".", "Conv2D", "(", "self", ".", "bottle_channels", ",", "\n", "self", ".", "out_channels", ",", "\n", "kernel_size", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "GroupNorm", "(", "1", ",", "self", ".", "out_channels", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_animegan.InvertedresBlock.forward": [[87, 94], ["generater_animegan.InvertedresBlock.body", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add", "paddle.add"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x0", ")", ":", "\n", "        ", "x", "=", "self", ".", "body", "(", "x0", ")", "\n", "if", "self", ".", "in_channels", "==", "self", ".", "out_channels", ":", "\n", "            ", "out", "=", "paddle", ".", "add", "(", "x0", ",", "x", ")", "\n", "", "else", ":", "\n", "            ", "out", "=", "x", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_animegan.AnimeGeneratorLite.__init__": [[98, 120], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "generater_animegan.Conv2DNormLReLU", "generater_animegan.Conv2DNormLReLU", "generater_animegan.Conv2DNormLReLU", "generater_animegan.Conv2DNormLReLU", "generater_animegan.Conv2DNormLReLU", "generater_animegan.Conv2DNormLReLU", "generater_animegan.ResBlock", "generater_animegan.ResBlock", "generater_animegan.ResBlock", "generater_animegan.ResBlock", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "generater_animegan.Conv2DNormLReLU", "generater_animegan.Conv2DNormLReLU", "generater_animegan.Conv2DNormLReLU", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "generater_animegan.Conv2DNormLReLU", "generater_animegan.Conv2DNormLReLU", "generater_animegan.Conv2DNormLReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Tanh", "paddle.Tanh", "paddle.Tanh"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "A", "=", "nn", ".", "Sequential", "(", "Conv2DNormLReLU", "(", "3", ",", "32", ",", "7", ",", "padding", "=", "3", ")", ",", "\n", "Conv2DNormLReLU", "(", "32", ",", "32", ",", "stride", "=", "2", ")", ",", "\n", "Conv2DNormLReLU", "(", "32", ",", "32", ")", ")", "\n", "\n", "self", ".", "B", "=", "nn", ".", "Sequential", "(", "Conv2DNormLReLU", "(", "32", ",", "64", ",", "stride", "=", "2", ")", ",", "\n", "Conv2DNormLReLU", "(", "64", ",", "64", ")", ",", "Conv2DNormLReLU", "(", "64", ",", "64", ")", ")", "\n", "\n", "self", ".", "C", "=", "nn", ".", "Sequential", "(", "ResBlock", "(", "64", ",", "128", ")", ",", "ResBlock", "(", "64", ",", "128", ")", ",", "\n", "ResBlock", "(", "64", ",", "128", ")", ",", "ResBlock", "(", "64", ",", "128", ")", ")", "\n", "\n", "self", ".", "D", "=", "nn", ".", "Sequential", "(", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ")", ",", "\n", "Conv2DNormLReLU", "(", "64", ",", "64", ")", ",", "Conv2DNormLReLU", "(", "64", ",", "64", ")", ",", "\n", "Conv2DNormLReLU", "(", "64", ",", "64", ")", ")", "\n", "\n", "self", ".", "E", "=", "nn", ".", "Sequential", "(", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ")", ",", "\n", "Conv2DNormLReLU", "(", "64", ",", "32", ")", ",", "Conv2DNormLReLU", "(", "32", ",", "32", ")", ",", "\n", "Conv2DNormLReLU", "(", "32", ",", "32", ",", "7", ",", "padding", "=", "3", ")", ")", "\n", "\n", "self", ".", "out", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2D", "(", "32", ",", "3", ",", "1", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_animegan.AnimeGeneratorLite.forward": [[121, 129], ["generater_animegan.AnimeGeneratorLite.A", "generater_animegan.AnimeGeneratorLite.B", "generater_animegan.AnimeGeneratorLite.C", "generater_animegan.AnimeGeneratorLite.D", "generater_animegan.AnimeGeneratorLite.E", "generater_animegan.AnimeGeneratorLite.out"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "A", "(", "x", ")", "\n", "x", "=", "self", ".", "B", "(", "x", ")", "\n", "x", "=", "self", ".", "C", "(", "x", ")", "\n", "x", "=", "self", ".", "D", "(", "x", ")", "\n", "x", "=", "self", ".", "E", "(", "x", ")", "\n", "x", "=", "self", ".", "out", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_animegan.AnimeGenerator.__init__": [[133, 160], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "generater_animegan.Conv2DNormLReLU", "generater_animegan.Conv2DNormLReLU", "generater_animegan.Conv2DNormLReLU", "generater_animegan.Conv2DNormLReLU", "generater_animegan.Conv2DNormLReLU", "generater_animegan.Conv2DNormLReLU", "generater_animegan.InvertedresBlock", "generater_animegan.InvertedresBlock", "generater_animegan.InvertedresBlock", "generater_animegan.InvertedresBlock", "generater_animegan.Conv2DNormLReLU", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "generater_animegan.Conv2DNormLReLU", "generater_animegan.Conv2DNormLReLU", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "generater_animegan.Conv2DNormLReLU", "generater_animegan.Conv2DNormLReLU", "generater_animegan.Conv2DNormLReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Tanh", "paddle.Tanh", "paddle.Tanh"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "A", "=", "nn", ".", "Sequential", "(", "Conv2DNormLReLU", "(", "3", ",", "32", ",", "7", ",", "padding", "=", "3", ")", ",", "\n", "Conv2DNormLReLU", "(", "32", ",", "64", ",", "stride", "=", "2", ")", ",", "\n", "Conv2DNormLReLU", "(", "64", ",", "64", ")", ")", "\n", "\n", "self", ".", "B", "=", "nn", ".", "Sequential", "(", "Conv2DNormLReLU", "(", "64", ",", "128", ",", "stride", "=", "2", ")", ",", "\n", "Conv2DNormLReLU", "(", "128", ",", "128", ")", ",", "\n", "Conv2DNormLReLU", "(", "128", ",", "128", ")", ")", "\n", "\n", "self", ".", "C", "=", "nn", ".", "Sequential", "(", "InvertedresBlock", "(", "128", ",", "2", ",", "256", ")", ",", "\n", "InvertedresBlock", "(", "256", ",", "2", ",", "256", ")", ",", "\n", "InvertedresBlock", "(", "256", ",", "2", ",", "256", ")", ",", "\n", "InvertedresBlock", "(", "256", ",", "2", ",", "256", ")", ",", "\n", "Conv2DNormLReLU", "(", "256", ",", "128", ")", ")", "\n", "\n", "self", ".", "D", "=", "nn", ".", "Sequential", "(", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ")", ",", "\n", "Conv2DNormLReLU", "(", "128", ",", "128", ")", ",", "\n", "Conv2DNormLReLU", "(", "128", ",", "128", ")", ")", "\n", "\n", "self", ".", "E", "=", "nn", ".", "Sequential", "(", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ")", ",", "\n", "Conv2DNormLReLU", "(", "128", ",", "64", ")", ",", "\n", "Conv2DNormLReLU", "(", "64", ",", "64", ")", ",", "\n", "Conv2DNormLReLU", "(", "64", ",", "32", ",", "7", ",", "padding", "=", "3", ")", ")", "\n", "\n", "self", ".", "out", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2D", "(", "32", ",", "3", ",", "1", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_animegan.AnimeGenerator.forward": [[161, 169], ["generater_animegan.AnimeGenerator.A", "generater_animegan.AnimeGenerator.B", "generater_animegan.AnimeGenerator.C", "generater_animegan.AnimeGenerator.D", "generater_animegan.AnimeGenerator.E", "generater_animegan.AnimeGenerator.out"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "A", "(", "x", ")", "\n", "x", "=", "self", ".", "B", "(", "x", ")", "\n", "x", "=", "self", ".", "C", "(", "x", ")", "\n", "x", "=", "self", ".", "D", "(", "x", ")", "\n", "x", "=", "self", ".", "E", "(", "x", ")", "\n", "x", "=", "self", ".", "out", "(", "x", ")", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_photopen.SPADE.__init__": [[25, 44], ["paddle.Layer.__init__", "re.search", "str", "int", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "re.search.group", "re.search.group", "ppgan.utils.photopen.build_norm_layer", "paddle.Conv2D", "paddle.Conv2D", "paddle.GELU", "paddle.GELU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.norm.build_norm_layer"], ["    ", "def", "__init__", "(", "self", ",", "config_text", ",", "norm_nc", ",", "label_nc", ")", ":", "\n", "        ", "super", "(", "SPADE", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "parsed", "=", "re", ".", "search", "(", "r'spade(\\D+)(\\d)x\\d'", ",", "config_text", ")", "\n", "param_free_norm_type", "=", "str", "(", "parsed", ".", "group", "(", "1", ")", ")", "\n", "ks", "=", "int", "(", "parsed", ".", "group", "(", "2", ")", ")", "\n", "\n", "self", ".", "param_free_norm", "=", "build_norm_layer", "(", "param_free_norm_type", ")", "(", "norm_nc", ")", "\n", "\n", "# The dimension of the intermediate embedding space. Yes, hardcoded.", "\n", "nhidden", "=", "128", "\n", "\n", "pw", "=", "ks", "//", "2", "\n", "self", ".", "mlp_shared", "=", "nn", ".", "Sequential", "(", "*", "[", "\n", "nn", ".", "Conv2D", "(", "label_nc", ",", "nhidden", ",", "ks", ",", "1", ",", "pw", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "]", ")", "\n", "self", ".", "mlp_gamma", "=", "nn", ".", "Conv2D", "(", "nhidden", ",", "norm_nc", ",", "ks", ",", "1", ",", "pw", ")", "\n", "self", ".", "mlp_beta", "=", "nn", ".", "Conv2D", "(", "nhidden", ",", "norm_nc", ",", "ks", ",", "1", ",", "pw", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_photopen.SPADE.forward": [[45, 59], ["generater_photopen.SPADE.param_free_norm", "paddle.interpolate", "paddle.interpolate", "generater_photopen.SPADE.mlp_shared", "generater_photopen.SPADE.mlp_gamma", "generater_photopen.SPADE.mlp_beta"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "segmap", ")", ":", "\n", "# Part 1. generate parameter-free normalized activations", "\n", "        ", "normalized", "=", "self", ".", "param_free_norm", "(", "x", ")", "\n", "\n", "# Part 2. produce scaling and bias conditioned on semantic map", "\n", "segmap", "=", "F", ".", "interpolate", "(", "segmap", ",", "x", ".", "shape", "[", "2", ":", "]", ")", "\n", "actv", "=", "self", ".", "mlp_shared", "(", "segmap", ")", "\n", "gamma", "=", "self", ".", "mlp_gamma", "(", "actv", ")", "\n", "beta", "=", "self", ".", "mlp_beta", "(", "actv", ")", "\n", "\n", "# apply scale and bias", "\n", "out", "=", "normalized", "*", "(", "1", "+", "gamma", ")", "+", "beta", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_photopen.SPADEResnetBlock.__init__": [[61, 92], ["paddle.Layer.__init__", "min", "opt.norm_G.replace", "generater_photopen.SPADE", "generater_photopen.SPADE", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "generater_photopen.SPADE", "paddle.Sequential", "paddle.Sequential", "paddle.GELU", "paddle.GELU", "paddle.nn.utils.spectral_norm", "paddle.nn.utils.spectral_norm", "paddle.GELU", "paddle.GELU", "paddle.nn.utils.spectral_norm", "paddle.nn.utils.spectral_norm", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.nn.utils.spectral_norm", "paddle.nn.utils.spectral_norm", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.spectral_norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.spectral_norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.spectral_norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.spectral_norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.spectral_norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.spectral_norm"], ["    ", "def", "__init__", "(", "self", ",", "fin", ",", "fout", ",", "opt", ")", ":", "\n", "        ", "super", "(", "SPADEResnetBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# Attributes", "\n", "self", ".", "learned_shortcut", "=", "(", "fin", "!=", "fout", ")", "\n", "fmiddle", "=", "min", "(", "fin", ",", "fout", ")", "\n", "\n", "# define spade layers", "\n", "spade_config_str", "=", "opt", ".", "norm_G", ".", "replace", "(", "'spectral'", ",", "''", ")", "\n", "self", ".", "spade_0", "=", "SPADE", "(", "spade_config_str", ",", "fin", ",", "opt", ".", "semantic_nc", ")", "\n", "self", ".", "spade_1", "=", "SPADE", "(", "spade_config_str", ",", "fmiddle", ",", "opt", ".", "semantic_nc", ")", "\n", "if", "self", ".", "learned_shortcut", ":", "\n", "            ", "self", ".", "spade_s", "=", "SPADE", "(", "spade_config_str", ",", "fin", ",", "opt", ".", "semantic_nc", ")", "\n", "\n", "# define act_conv layers", "\n", "", "self", ".", "act_conv_0", "=", "nn", ".", "Sequential", "(", "*", "[", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "spectral_norm", "(", "nn", ".", "Conv2D", "(", "fin", ",", "fmiddle", ",", "3", ",", "1", ",", "1", ",", "\n", "weight_attr", "=", "None", ",", "\n", "bias_attr", "=", "None", ")", ")", ",", "\n", "]", ")", "\n", "self", ".", "act_conv_1", "=", "nn", ".", "Sequential", "(", "*", "[", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "spectral_norm", "(", "nn", ".", "Conv2D", "(", "fmiddle", ",", "fout", ",", "3", ",", "1", ",", "1", ",", "\n", "weight_attr", "=", "None", ",", "\n", "bias_attr", "=", "None", ")", ")", ",", "\n", "]", ")", "\n", "if", "self", ".", "learned_shortcut", ":", "\n", "            ", "self", ".", "act_conv_s", "=", "nn", ".", "Sequential", "(", "*", "[", "\n", "spectral_norm", "(", "nn", ".", "Conv2D", "(", "fin", ",", "fout", ",", "1", ",", "1", ",", "0", ",", "bias_attr", "=", "False", ",", "\n", "weight_attr", "=", "None", ")", ")", ",", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_photopen.SPADEResnetBlock.forward": [[95, 102], ["generater_photopen.SPADEResnetBlock.shortcut", "generater_photopen.SPADEResnetBlock.act_conv_0", "generater_photopen.SPADEResnetBlock.act_conv_1", "ppgan.utils.photopen.simam", "generater_photopen.SPADEResnetBlock.spade_0", "generater_photopen.SPADEResnetBlock.spade_1"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_photopen.SPADEResnetBlock.shortcut", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.photopen.simam"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "seg", ")", ":", "\n", "        ", "x_s", "=", "self", ".", "shortcut", "(", "x", ",", "seg", ")", "\n", "\n", "dx", "=", "self", ".", "act_conv_0", "(", "self", ".", "spade_0", "(", "x", ",", "seg", ")", ")", "\n", "dx", "=", "self", ".", "act_conv_1", "(", "self", ".", "spade_1", "(", "dx", ",", "seg", ")", ")", "\n", "\n", "return", "simam", "(", "dx", "+", "x_s", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_photopen.SPADEResnetBlock.shortcut": [[103, 109], ["generater_photopen.SPADEResnetBlock.act_conv_s", "generater_photopen.SPADEResnetBlock.spade_s"], "methods", ["None"], ["", "def", "shortcut", "(", "self", ",", "x", ",", "seg", ")", ":", "\n", "        ", "if", "self", ".", "learned_shortcut", ":", "\n", "            ", "x_s", "=", "self", ".", "act_conv_s", "(", "self", ".", "spade_s", "(", "x", ",", "seg", ")", ")", "\n", "", "else", ":", "\n", "            ", "x_s", "=", "x", "\n", "", "return", "x_s", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_photopen.SPADEGenerator.__init__": [[112, 163], ["paddle.Layer.__init__", "ppgan.utils.photopen.Dict", "generater_photopen.SPADEGenerator.compute_latent_vector_size", "generater_photopen.SPADEResnetBlock", "generater_photopen.SPADEResnetBlock", "generater_photopen.SPADEResnetBlock", "generater_photopen.SPADEResnetBlock", "generater_photopen.SPADEResnetBlock", "generater_photopen.SPADEResnetBlock", "paddle.Conv2D", "paddle.Conv2D", "paddle.Upsample", "paddle.Upsample", "paddle.Linear", "paddle.Linear", "generater_photopen.SPADEResnetBlock", "paddle.Conv2D", "paddle.Conv2D", "generater_photopen.SPADEResnetBlock", "generater_photopen.SPADEResnetBlock"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_photopen.SPADEGenerator.compute_latent_vector_size"], ["    ", "def", "__init__", "(", "self", ",", "\n", "ngf", ",", "\n", "num_upsampling_layers", ",", "\n", "crop_size", ",", "\n", "aspect_ratio", ",", "\n", "norm_G", ",", "\n", "semantic_nc", ",", "\n", "use_vae", ",", "\n", "nef", ",", "\n", ")", ":", "\n", "        ", "super", "(", "SPADEGenerator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "opt", "=", "{", "\n", "'ngf'", ":", "ngf", ",", "\n", "'num_upsampling_layers'", ":", "num_upsampling_layers", ",", "\n", "'crop_size'", ":", "crop_size", ",", "\n", "'aspect_ratio'", ":", "aspect_ratio", ",", "\n", "'norm_G'", ":", "norm_G", ",", "\n", "'semantic_nc'", ":", "semantic_nc", ",", "\n", "'use_vae'", ":", "use_vae", ",", "\n", "'nef'", ":", "nef", ",", "\n", "}", "\n", "self", ".", "opt", "=", "Dict", "(", "opt", ")", "\n", "\n", "nf", "=", "self", ".", "opt", ".", "ngf", "\n", "self", ".", "sw", ",", "self", ".", "sh", "=", "self", ".", "compute_latent_vector_size", "(", "self", ".", "opt", ")", "\n", "\n", "if", "self", ".", "opt", ".", "use_vae", ":", "\n", "            ", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "opt", ".", "z_dim", ",", "16", "*", "opt", ".", "nef", "*", "self", ".", "sw", "*", "self", ".", "sh", ")", "\n", "self", ".", "head_0", "=", "SPADEResnetBlock", "(", "16", "*", "opt", ".", "nef", ",", "16", "*", "nf", ",", "self", ".", "opt", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "fc", "=", "nn", ".", "Conv2D", "(", "self", ".", "opt", ".", "semantic_nc", ",", "16", "*", "nf", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "head_0", "=", "SPADEResnetBlock", "(", "16", "*", "nf", ",", "16", "*", "nf", ",", "self", ".", "opt", ")", "\n", "\n", "", "self", ".", "G_middle_0", "=", "SPADEResnetBlock", "(", "16", "*", "nf", ",", "16", "*", "nf", ",", "self", ".", "opt", ")", "\n", "self", ".", "G_middle_1", "=", "SPADEResnetBlock", "(", "16", "*", "nf", ",", "16", "*", "nf", ",", "self", ".", "opt", ")", "\n", "\n", "self", ".", "up_0", "=", "SPADEResnetBlock", "(", "16", "*", "nf", ",", "8", "*", "nf", ",", "self", ".", "opt", ")", "\n", "self", ".", "up_1", "=", "SPADEResnetBlock", "(", "8", "*", "nf", ",", "4", "*", "nf", ",", "self", ".", "opt", ")", "\n", "self", ".", "up_2", "=", "SPADEResnetBlock", "(", "4", "*", "nf", ",", "2", "*", "nf", ",", "self", ".", "opt", ")", "\n", "self", ".", "up_3", "=", "SPADEResnetBlock", "(", "2", "*", "nf", ",", "1", "*", "nf", ",", "self", ".", "opt", ")", "\n", "\n", "final_nc", "=", "nf", "\n", "\n", "if", "self", ".", "opt", ".", "num_upsampling_layers", "==", "'most'", ":", "\n", "            ", "self", ".", "up_4", "=", "SPADEResnetBlock", "(", "1", "*", "nf", ",", "nf", "//", "2", ",", "self", ".", "opt", ")", "\n", "final_nc", "=", "nf", "//", "2", "\n", "\n", "", "self", ".", "conv_img", "=", "nn", ".", "Conv2D", "(", "final_nc", ",", "3", ",", "3", ",", "1", ",", "1", ")", "\n", "\n", "self", ".", "up", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_photopen.SPADEGenerator.forward": [[164, 200], ["generater_photopen.SPADEGenerator.head_0", "generater_photopen.SPADEGenerator.up", "generater_photopen.SPADEGenerator.G_middle_0", "generater_photopen.SPADEGenerator.G_middle_1", "generater_photopen.SPADEGenerator.up", "generater_photopen.SPADEGenerator.up_0", "generater_photopen.SPADEGenerator.up", "generater_photopen.SPADEGenerator.up_1", "generater_photopen.SPADEGenerator.up", "generater_photopen.SPADEGenerator.up_2", "generater_photopen.SPADEGenerator.up", "generater_photopen.SPADEGenerator.up_3", "generater_photopen.SPADEGenerator.conv_img", "paddle.tanh", "paddle.tanh", "generater_photopen.SPADEGenerator.fc", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.interpolate", "paddle.interpolate", "generater_photopen.SPADEGenerator.fc", "generater_photopen.SPADEGenerator.up", "generater_photopen.SPADEGenerator.up", "generater_photopen.SPADEGenerator.up_4", "paddle.gelu", "paddle.gelu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ",", "z", "=", "None", ")", ":", "\n", "        ", "seg", "=", "input", "\n", "if", "self", ".", "opt", ".", "use_vae", ":", "\n", "            ", "x", "=", "self", ".", "fc", "(", "z", ")", "\n", "x", "=", "paddle", ".", "reshape", "(", "x", ",", "[", "-", "1", ",", "16", "*", "self", ".", "opt", ".", "nef", ",", "self", ".", "sh", ",", "self", ".", "sw", "]", ")", "\n", "", "else", ":", "\n", "            ", "x", "=", "F", ".", "interpolate", "(", "seg", ",", "(", "self", ".", "sh", ",", "self", ".", "sw", ")", ")", "\n", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "", "x", "=", "self", ".", "head_0", "(", "x", ",", "seg", ")", "\n", "\n", "x", "=", "self", ".", "up", "(", "x", ")", "\n", "x", "=", "self", ".", "G_middle_0", "(", "x", ",", "seg", ")", "\n", "\n", "if", "self", ".", "opt", ".", "num_upsampling_layers", "==", "'more'", "or", "self", ".", "opt", ".", "num_upsampling_layers", "==", "'most'", ":", "\n", "            ", "x", "=", "self", ".", "up", "(", "x", ")", "\n", "\n", "", "x", "=", "self", ".", "G_middle_1", "(", "x", ",", "seg", ")", "\n", "\n", "x", "=", "self", ".", "up", "(", "x", ")", "\n", "x", "=", "self", ".", "up_0", "(", "x", ",", "seg", ")", "\n", "x", "=", "self", ".", "up", "(", "x", ")", "\n", "x", "=", "self", ".", "up_1", "(", "x", ",", "seg", ")", "\n", "x", "=", "self", ".", "up", "(", "x", ")", "\n", "x", "=", "self", ".", "up_2", "(", "x", ",", "seg", ")", "\n", "x", "=", "self", ".", "up", "(", "x", ")", "\n", "x", "=", "self", ".", "up_3", "(", "x", ",", "seg", ")", "\n", "\n", "if", "self", ".", "opt", ".", "num_upsampling_layers", "==", "'most'", ":", "\n", "            ", "x", "=", "self", ".", "up", "(", "x", ")", "\n", "x", "=", "self", ".", "up_4", "(", "x", ",", "seg", ")", "\n", "\n", "", "x", "=", "self", ".", "conv_img", "(", "F", ".", "gelu", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "tanh", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_photopen.SPADEGenerator.compute_latent_vector_size": [[201, 216], ["round", "ValueError"], "methods", ["None"], ["", "def", "compute_latent_vector_size", "(", "self", ",", "opt", ")", ":", "\n", "        ", "if", "opt", ".", "num_upsampling_layers", "==", "'normal'", ":", "\n", "            ", "num_up_layers", "=", "5", "\n", "", "elif", "opt", ".", "num_upsampling_layers", "==", "'more'", ":", "\n", "            ", "num_up_layers", "=", "6", "\n", "", "elif", "opt", ".", "num_upsampling_layers", "==", "'most'", ":", "\n", "            ", "num_up_layers", "=", "7", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'opt.num_upsampling_layers [%s] not recognized'", "%", "\n", "opt", ".", "num_upsampling_layers", ")", "\n", "\n", "", "sw", "=", "opt", ".", "crop_size", "//", "(", "2", "**", "num_up_layers", ")", "\n", "sh", "=", "round", "(", "sw", "/", "opt", ".", "aspect_ratio", ")", "\n", "\n", "return", "sw", ",", "sh", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_photopen.VAE_Encoder.__init__": [[218, 272], ["paddle.Layer.__init__", "int", "ppgan.utils.photopen.build_norm_layer", "paddle.Flatten", "paddle.Flatten", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Sequential", "paddle.Sequential", "np.ceil", "paddle.nn.utils.spectral_norm", "paddle.nn.utils.spectral_norm", "ppgan.utils.photopen.build_norm_layer.", "paddle.GELU", "paddle.GELU", "paddle.nn.utils.spectral_norm", "paddle.nn.utils.spectral_norm", "ppgan.utils.photopen.build_norm_layer.", "paddle.GELU", "paddle.GELU", "paddle.nn.utils.spectral_norm", "paddle.nn.utils.spectral_norm", "ppgan.utils.photopen.build_norm_layer.", "paddle.GELU", "paddle.GELU", "paddle.nn.utils.spectral_norm", "paddle.nn.utils.spectral_norm", "ppgan.utils.photopen.build_norm_layer.", "paddle.GELU", "paddle.GELU", "paddle.nn.utils.spectral_norm", "paddle.nn.utils.spectral_norm", "ppgan.utils.photopen.build_norm_layer.", "paddle.GELU", "paddle.GELU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.GELU", "paddle.GELU", "paddle.nn.utils.spectral_norm", "paddle.nn.utils.spectral_norm", "ppgan.utils.photopen.build_norm_layer.", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.norm.build_norm_layer", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.spectral_norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.spectral_norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.spectral_norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.spectral_norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.spectral_norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.spectral_norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.spectral_norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.spectral_norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.spectral_norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.spectral_norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.spectral_norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.utils.spectral_norm"], ["    ", "def", "__init__", "(", "self", ",", "opt", ")", ":", "\n", "        ", "super", "(", "VAE_Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "kw", "=", "3", "\n", "pw", "=", "int", "(", "np", ".", "ceil", "(", "(", "kw", "-", "1.0", ")", "/", "2", ")", ")", "\n", "ndf", "=", "opt", ".", "nef", "\n", "\n", "InstanceNorm", "=", "build_norm_layer", "(", "'instance'", ")", "\n", "model", "=", "[", "\n", "spectral_norm", "(", "nn", ".", "Conv2D", "(", "3", ",", "ndf", ",", "kw", ",", "2", ",", "pw", ",", "\n", "weight_attr", "=", "None", ",", "\n", "bias_attr", "=", "None", ")", ")", ",", "\n", "InstanceNorm", "(", "ndf", ")", ",", "\n", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "spectral_norm", "(", "nn", ".", "Conv2D", "(", "ndf", "*", "1", ",", "ndf", "*", "2", ",", "kw", ",", "2", ",", "pw", ",", "\n", "weight_attr", "=", "None", ",", "\n", "bias_attr", "=", "None", ")", ")", ",", "\n", "InstanceNorm", "(", "ndf", "*", "2", ")", ",", "\n", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "spectral_norm", "(", "nn", ".", "Conv2D", "(", "ndf", "*", "2", ",", "ndf", "*", "4", ",", "kw", ",", "2", ",", "pw", ",", "\n", "weight_attr", "=", "None", ",", "\n", "bias_attr", "=", "None", ")", ")", ",", "\n", "InstanceNorm", "(", "ndf", "*", "4", ")", ",", "\n", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "spectral_norm", "(", "nn", ".", "Conv2D", "(", "ndf", "*", "4", ",", "ndf", "*", "8", ",", "kw", ",", "2", ",", "pw", ",", "\n", "weight_attr", "=", "None", ",", "\n", "bias_attr", "=", "None", ")", ")", ",", "\n", "InstanceNorm", "(", "ndf", "*", "8", ")", ",", "\n", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "spectral_norm", "(", "nn", ".", "Conv2D", "(", "ndf", "*", "8", ",", "ndf", "*", "8", ",", "kw", ",", "2", ",", "pw", ",", "\n", "weight_attr", "=", "None", ",", "\n", "bias_attr", "=", "None", ")", ")", ",", "\n", "InstanceNorm", "(", "ndf", "*", "8", ")", ",", "\n", "]", "\n", "if", "opt", ".", "crop_size", ">=", "256", ":", "\n", "            ", "model", "+=", "[", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "spectral_norm", "(", "nn", ".", "Conv2D", "(", "ndf", "*", "8", ",", "ndf", "*", "8", ",", "kw", ",", "2", ",", "pw", ",", "\n", "weight_attr", "=", "None", ",", "\n", "bias_attr", "=", "None", ")", ")", ",", "\n", "InstanceNorm", "(", "ndf", "*", "8", ")", ",", "\n", "]", "\n", "", "model", "+=", "[", "nn", ".", "GELU", "(", ")", ",", "]", "\n", "\n", "self", ".", "flatten", "=", "nn", ".", "Flatten", "(", "1", ",", "-", "1", ")", "\n", "self", ".", "so", "=", "4", "\n", "self", ".", "fc_mu", "=", "nn", ".", "Linear", "(", "ndf", "*", "8", "*", "self", ".", "so", "*", "self", ".", "so", ",", "opt", ".", "z_dim", ")", "\n", "self", ".", "fc_var", "=", "nn", ".", "Linear", "(", "ndf", "*", "8", "*", "self", ".", "so", "*", "self", ".", "so", ",", "opt", ".", "z_dim", ")", "\n", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_photopen.VAE_Encoder.forward": [[273, 279], ["generater_photopen.VAE_Encoder.model", "generater_photopen.VAE_Encoder.flatten", "generater_photopen.VAE_Encoder.fc_mu", "generater_photopen.VAE_Encoder.fc_var"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "model", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "flatten", "(", "x", ")", "\n", "\n", "return", "self", ".", "fc_mu", "(", "x", ")", ",", "self", ".", "fc_var", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deep_conv.DeepConvGenerator.__init__": [[27, 55], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Tanh", "paddle.Tanh", "paddle.Tanh"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "latent_dim", ",", "output_nc", ",", "size", "=", "64", ",", "ngf", "=", "64", ")", ":", "\n", "        ", "\"\"\"Construct a Deep Convolutional generator\n        Args:\n            latent_dim (int): the number of latent dimension\n            output_nc (int): the number of channels in output images\n            size (int): size of output tensor\n            ngf (int): the number of filters in the last conv layer\n        \"\"\"", "\n", "super", "(", "DeepConvGenerator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "latent_dim", "=", "latent_dim", "\n", "self", ".", "ngf", "=", "ngf", "\n", "self", ".", "init_size", "=", "size", "//", "4", "\n", "self", ".", "l1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "latent_dim", ",", "ngf", "*", "2", "*", "self", ".", "init_size", "**", "2", ")", ")", "\n", "\n", "self", ".", "conv_blocks", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "BatchNorm2D", "(", "ngf", "*", "2", ")", ",", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ")", ",", "\n", "nn", ".", "Conv2D", "(", "ngf", "*", "2", ",", "ngf", "*", "2", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "ngf", "*", "2", ",", "0.2", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ")", ",", "\n", "nn", ".", "Conv2D", "(", "ngf", "*", "2", ",", "ngf", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "ngf", ",", "0.2", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "nn", ".", "Conv2D", "(", "ngf", ",", "output_nc", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deep_conv.DeepConvGenerator.random_inputs": [[57, 59], ["paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn"], "methods", ["None"], ["", "def", "random_inputs", "(", "self", ",", "batch_size", ")", ":", "\n", "        ", "return", "paddle", ".", "randn", "(", "[", "batch_size", ",", "self", ".", "latent_dim", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deep_conv.DeepConvGenerator.forward": [[60, 66], ["deep_conv.DeepConvGenerator.l1", "out.reshape.reshape.reshape", "deep_conv.DeepConvGenerator.conv_blocks"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z", ")", ":", "\n", "        ", "out", "=", "self", ".", "l1", "(", "z", ")", "\n", "out", "=", "out", ".", "reshape", "(", "\n", "[", "out", ".", "shape", "[", "0", "]", ",", "self", ".", "ngf", "*", "2", ",", "self", ".", "init_size", ",", "self", ".", "init_size", "]", ")", "\n", "img", "=", "self", ".", "conv_blocks", "(", "out", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deep_conv.ConditionalDeepConvGenerator.__init__": [[72, 84], ["deep_conv.DeepConvGenerator.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "latent_dim", ",", "output_nc", ",", "n_class", "=", "10", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"Construct a Conditional Deep Convolutional generator\n        Args:\n            latent_dim (int): the number of latent dimension\n            output_nc (int): the number of channels in output images\n            n_class (int): the number of class\n        \"\"\"", "\n", "super", "(", "ConditionalDeepConvGenerator", ",", "\n", "self", ")", ".", "__init__", "(", "latent_dim", "+", "n_class", ",", "output_nc", ",", "**", "kwargs", ")", "\n", "\n", "self", ".", "n_class", "=", "n_class", "\n", "self", ".", "latent_dim", "=", "latent_dim", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deep_conv.ConditionalDeepConvGenerator.random_inputs": [[85, 91], ["paddle.randint", "paddle.randint", "paddle.randint", "paddle.randint", "paddle.randint", "paddle.randint", "paddle.randint", "paddle.randint", "paddle.randint", "deep_conv.DeepConvGenerator.random_inputs"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deep_conv.ConditionalDeepConvGenerator.random_inputs"], ["", "def", "random_inputs", "(", "self", ",", "batch_size", ")", ":", "\n", "        ", "return_list", "=", "[", "\n", "super", "(", "ConditionalDeepConvGenerator", ",", "self", ")", ".", "random_inputs", "(", "batch_size", ")", "\n", "]", "\n", "class_id", "=", "paddle", ".", "randint", "(", "0", ",", "self", ".", "n_class", ",", "[", "batch_size", "]", ")", "\n", "return", "return_list", "+", "[", "class_id", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deep_conv.ConditionalDeepConvGenerator.forward": [[92, 100], ["deep_conv.DeepConvGenerator.forward", "paddle.one_hot().astype", "paddle.one_hot().astype", "paddle.one_hot().astype", "class_id.reshape.reshape.reshape", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.one_hot", "paddle.one_hot", "paddle.one_hot"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.vgg16.forward"], ["", "def", "forward", "(", "self", ",", "x", ",", "class_id", "=", "None", ")", ":", "\n", "        ", "if", "self", ".", "n_class", ">", "0", ":", "\n", "            ", "class_id", "=", "(", "class_id", "%", "self", ".", "n_class", ")", ".", "detach", "(", ")", "\n", "class_id", "=", "F", ".", "one_hot", "(", "class_id", ",", "self", ".", "n_class", ")", ".", "astype", "(", "'float32'", ")", "\n", "class_id", "=", "class_id", ".", "reshape", "(", "[", "x", ".", "shape", "[", "0", "]", ",", "-", "1", "]", ")", "\n", "x", "=", "paddle", ".", "concat", "(", "[", "x", ",", "class_id", "]", ",", "1", ")", "\n", "\n", "", "return", "super", "(", "ConditionalDeepConvGenerator", ",", "self", ")", ".", "forward", "(", "x", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.__init__": [[17, 20], ["paddle.Layer.__init__", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "*", "layers", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "layers", "=", "nn", ".", "LayerList", "(", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.forward": [[21, 31], ["isinstance", "l"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "x", "\n", "for", "l", "in", "self", ".", "layers", ":", "\n", "            ", "if", "isinstance", "(", "l", ",", "MergeLayer", ")", ":", "\n", "                ", "l", ".", "orig", "=", "x", "\n", "", "nres", "=", "l", "(", "res", ")", "\n", "# We have to remove res.orig to avoid hanging refs and therefore memory leaks", "\n", "# l.orig = None", "\n", "res", "=", "nres", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.__getitem__": [[32, 34], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "i", ")", ":", "\n", "        ", "return", "self", ".", "layers", "[", "i", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append": [[35, 37], ["deoldify.SequentialEx.layers.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "append", "(", "self", ",", "l", ")", ":", "\n", "        ", "return", "self", ".", "layers", ".", "append", "(", "l", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.extend": [[38, 40], ["deoldify.SequentialEx.layers.extend"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.extend"], ["", "def", "extend", "(", "self", ",", "l", ")", ":", "\n", "        ", "return", "self", ".", "layers", ".", "extend", "(", "l", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.insert": [[41, 43], ["deoldify.SequentialEx.layers.insert"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.insert"], ["", "def", "insert", "(", "self", ",", "i", ",", "l", ")", ":", "\n", "        ", "return", "self", ".", "layers", ".", "insert", "(", "i", ",", "l", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.Deoldify.__init__": [[46, 138], ["hook.model_sizes", "list", "hook.hook_outputs", "hook.dummy_eval().detach", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "enumerate", "deoldify.SequentialEx.__init__", "reversed", "deoldify.custom_conv_layer", "deoldify.custom_conv_layer", "paddle.BatchNorm", "paddle.BatchNorm", "paddle.BatchNorm", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "UnetBlockDeep.eval", "layers.append", "UnetBlockDeep.", "layers.append", "layers.append", "layers.append", "deoldify.custom_conv_layer", "layers.append", "deoldify._get_sfs_idxs", "hook.dummy_eval", "int", "int", "deoldify.UnetBlockWide", "deoldify.PixelShuffle_ICNR", "deoldify.MergeLayer", "deoldify.res_block", "deoldify.SigmoidRange", "len", "deoldify.UnetBlockDeep", "ValueError", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.hook.model_sizes", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.hook.hook_outputs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.custom_conv_layer", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.custom_conv_layer", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.custom_conv_layer", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify._get_sfs_idxs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.hook.dummy_eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.res_block"], ["    ", "def", "__init__", "(", "self", ",", "\n", "encoder", ",", "\n", "n_classes", ",", "\n", "model_type", "=", "'stable'", ",", "\n", "blur", "=", "False", ",", "\n", "blur_final", "=", "True", ",", "\n", "self_attention", "=", "False", ",", "\n", "y_range", "=", "None", ",", "\n", "last_cross", "=", "True", ",", "\n", "bottle", "=", "False", ",", "\n", "norm_type", "=", "'Batch'", ",", "\n", "nf_factor", "=", "1", ",", "\n", "**", "kwargs", ")", ":", "\n", "\n", "        ", "imsize", "=", "(", "256", ",", "256", ")", "\n", "sfs_szs", "=", "model_sizes", "(", "encoder", ",", "size", "=", "imsize", ")", "\n", "sfs_idxs", "=", "list", "(", "reversed", "(", "_get_sfs_idxs", "(", "sfs_szs", ")", ")", ")", "\n", "self", ".", "sfs", "=", "hook_outputs", "(", "[", "encoder", "[", "i", "]", "for", "i", "in", "sfs_idxs", "]", ",", "detach", "=", "False", ")", "\n", "x", "=", "dummy_eval", "(", "encoder", ",", "imsize", ")", ".", "detach", "(", ")", "\n", "\n", "nf", "=", "512", "*", "nf_factor", "\n", "extra_bn", "=", "norm_type", "==", "'Spectral'", "\n", "ni", "=", "sfs_szs", "[", "-", "1", "]", "[", "1", "]", "\n", "middle_conv", "=", "nn", ".", "Sequential", "(", "\n", "custom_conv_layer", "(", "ni", ",", "\n", "ni", "*", "2", ",", "\n", "norm_type", "=", "norm_type", ",", "\n", "extra_bn", "=", "extra_bn", ")", ",", "\n", "custom_conv_layer", "(", "ni", "*", "2", ",", "\n", "ni", ",", "\n", "norm_type", "=", "norm_type", ",", "\n", "extra_bn", "=", "extra_bn", ")", ",", "\n", ")", "\n", "\n", "layers", "=", "[", "encoder", ",", "nn", ".", "BatchNorm", "(", "ni", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "middle_conv", "]", "\n", "\n", "for", "i", ",", "idx", "in", "enumerate", "(", "sfs_idxs", ")", ":", "\n", "            ", "not_final", "=", "i", "!=", "len", "(", "sfs_idxs", ")", "-", "1", "\n", "up_in_c", ",", "x_in_c", "=", "int", "(", "x", ".", "shape", "[", "1", "]", ")", ",", "int", "(", "sfs_szs", "[", "idx", "]", "[", "1", "]", ")", "\n", "do_blur", "=", "blur", "and", "(", "not_final", "or", "blur_final", ")", "\n", "sa", "=", "self_attention", "and", "(", "i", "==", "len", "(", "sfs_idxs", ")", "-", "3", ")", "\n", "\n", "if", "model_type", "==", "'stable'", ":", "\n", "                ", "n_out", "=", "nf", "if", "not_final", "else", "nf", "//", "2", "\n", "unet_block", "=", "UnetBlockWide", "(", "up_in_c", ",", "\n", "x_in_c", ",", "\n", "n_out", ",", "\n", "self", ".", "sfs", "[", "i", "]", ",", "\n", "final_div", "=", "not_final", ",", "\n", "blur", "=", "blur", ",", "\n", "self_attention", "=", "sa", ",", "\n", "norm_type", "=", "norm_type", ",", "\n", "extra_bn", "=", "extra_bn", ",", "\n", "**", "kwargs", ")", "\n", "", "elif", "model_type", "==", "'artistic'", ":", "\n", "                ", "unet_block", "=", "UnetBlockDeep", "(", "up_in_c", ",", "\n", "x_in_c", ",", "\n", "self", ".", "sfs", "[", "i", "]", ",", "\n", "final_div", "=", "not_final", ",", "\n", "blur", "=", "blur", ",", "\n", "self_attention", "=", "sa", ",", "\n", "norm_type", "=", "norm_type", ",", "\n", "extra_bn", "=", "extra_bn", ",", "\n", "nf_factor", "=", "nf_factor", ",", "\n", "**", "kwargs", ")", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "\n", "'Expected model_type in [stable, artistic], but got {}'", ".", "\n", "format", "(", "model_type", ")", ")", "\n", "\n", "", "unet_block", ".", "eval", "(", ")", "\n", "layers", ".", "append", "(", "unet_block", ")", "\n", "x", "=", "unet_block", "(", "x", ")", "\n", "\n", "", "ni", "=", "x", ".", "shape", "[", "1", "]", "\n", "if", "imsize", "!=", "sfs_szs", "[", "0", "]", "[", "-", "2", ":", "]", ":", "\n", "            ", "layers", ".", "append", "(", "PixelShuffle_ICNR", "(", "ni", ",", "**", "kwargs", ")", ")", "\n", "", "if", "last_cross", ":", "\n", "            ", "layers", ".", "append", "(", "MergeLayer", "(", "dense", "=", "True", ")", ")", "\n", "ni", "+=", "3", "\n", "layers", ".", "append", "(", "\n", "res_block", "(", "ni", ",", "bottle", "=", "bottle", ",", "norm_type", "=", "norm_type", ",", "**", "kwargs", ")", ")", "\n", "", "layers", "+=", "[", "\n", "custom_conv_layer", "(", "ni", ",", "\n", "n_classes", ",", "\n", "ks", "=", "1", ",", "\n", "use_activ", "=", "False", ",", "\n", "norm_type", "=", "norm_type", ")", "\n", "]", "\n", "if", "y_range", "is", "not", "None", ":", "\n", "            ", "layers", ".", "append", "(", "SigmoidRange", "(", "*", "y_range", ")", ")", "\n", "", "super", "(", ")", ".", "__init__", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.UnetBlockWide.__init__": [[191, 217], ["paddle.Layer.__init__", "deoldify.CustomPixelShuffle_ICNR", "paddle.BatchNorm", "paddle.BatchNorm", "paddle.BatchNorm", "deoldify.custom_conv_layer", "deoldify.relu"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.custom_conv_layer", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu"], ["def", "__init__", "(", "self", ",", "\n", "up_in_c", ":", "int", ",", "\n", "x_in_c", ":", "int", ",", "\n", "n_out", ":", "int", ",", "\n", "hook", ",", "\n", "final_div", ":", "bool", "=", "True", ",", "\n", "blur", ":", "bool", "=", "False", ",", "\n", "leaky", ":", "float", "=", "None", ",", "\n", "self_attention", ":", "bool", "=", "False", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "hook", "=", "hook", "\n", "up_out", "=", "x_out", "=", "n_out", "//", "2", "\n", "self", ".", "shuf", "=", "CustomPixelShuffle_ICNR", "(", "up_in_c", ",", "\n", "up_out", ",", "\n", "blur", "=", "blur", ",", "\n", "leaky", "=", "leaky", ",", "\n", "**", "kwargs", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm", "(", "x_in_c", ")", "\n", "ni", "=", "up_out", "+", "x_in_c", "\n", "self", ".", "conv", "=", "custom_conv_layer", "(", "ni", ",", "\n", "x_out", ",", "\n", "leaky", "=", "leaky", ",", "\n", "self_attention", "=", "self_attention", ",", "\n", "**", "kwargs", ")", "\n", "self", ".", "relu", "=", "relu", "(", "leaky", "=", "leaky", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.UnetBlockWide.forward": [[218, 226], ["deoldify.UnetBlockWide.shuf", "deoldify.UnetBlockWide.relu", "deoldify.UnetBlockWide.conv", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "deoldify.UnetBlockWide.bn"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv"], ["", "def", "forward", "(", "self", ",", "up_in", ")", ":", "\n", "        ", "s", "=", "self", ".", "hook", ".", "stored", "\n", "up_out", "=", "self", ".", "shuf", "(", "up_in", ")", "\n", "ssh", "=", "s", ".", "shape", "[", "-", "2", ":", "]", "\n", "if", "ssh", "!=", "up_out", ".", "shape", "[", "-", "2", ":", "]", ":", "\n", "            ", "up_out", "=", "F", ".", "interpolate", "(", "up_out", ",", "s", ".", "shape", "[", "-", "2", ":", "]", ",", "mode", "=", "'nearest'", ")", "\n", "", "cat_x", "=", "self", ".", "relu", "(", "paddle", ".", "concat", "(", "[", "up_out", ",", "self", ".", "bn", "(", "s", ")", "]", ",", "axis", "=", "1", ")", ")", "\n", "return", "self", ".", "conv", "(", "cat_x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.UnetBlockDeep.__init__": [[231, 258], ["paddle.Layer.__init__", "deoldify.CustomPixelShuffle_ICNR", "paddle.BatchNorm", "paddle.BatchNorm", "paddle.BatchNorm", "int", "deoldify.custom_conv_layer", "deoldify.custom_conv_layer", "deoldify.relu"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.custom_conv_layer", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.custom_conv_layer", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu"], ["def", "__init__", "(", "self", ",", "\n", "up_in_c", ":", "int", ",", "\n", "x_in_c", ":", "int", ",", "\n", "hook", ",", "\n", "final_div", ":", "bool", "=", "True", ",", "\n", "blur", ":", "bool", "=", "False", ",", "\n", "leaky", ":", "float", "=", "None", ",", "\n", "self_attention", ":", "bool", "=", "False", ",", "\n", "nf_factor", ":", "float", "=", "1.0", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "hook", "=", "hook", "\n", "self", ".", "shuf", "=", "CustomPixelShuffle_ICNR", "(", "up_in_c", ",", "\n", "up_in_c", "//", "2", ",", "\n", "blur", "=", "blur", ",", "\n", "leaky", "=", "leaky", ",", "\n", "**", "kwargs", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm", "(", "x_in_c", ")", "\n", "ni", "=", "up_in_c", "//", "2", "+", "x_in_c", "\n", "nf", "=", "int", "(", "(", "ni", "if", "final_div", "else", "ni", "//", "2", ")", "*", "nf_factor", ")", "\n", "self", ".", "conv1", "=", "custom_conv_layer", "(", "ni", ",", "nf", ",", "leaky", "=", "leaky", ",", "**", "kwargs", ")", "\n", "self", ".", "conv2", "=", "custom_conv_layer", "(", "nf", ",", "\n", "nf", ",", "\n", "leaky", "=", "leaky", ",", "\n", "self_attention", "=", "self_attention", ",", "\n", "**", "kwargs", ")", "\n", "self", ".", "relu", "=", "relu", "(", "leaky", "=", "leaky", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.UnetBlockDeep.forward": [[259, 267], ["deoldify.UnetBlockDeep.shuf", "deoldify.UnetBlockDeep.relu", "deoldify.UnetBlockDeep.conv2", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "deoldify.UnetBlockDeep.conv1", "deoldify.UnetBlockDeep.bn"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu"], ["", "def", "forward", "(", "self", ",", "up_in", ")", ":", "\n", "        ", "s", "=", "self", ".", "hook", ".", "stored", "\n", "up_out", "=", "self", ".", "shuf", "(", "up_in", ")", "\n", "ssh", "=", "s", ".", "shape", "[", "-", "2", ":", "]", "\n", "if", "ssh", "!=", "up_out", ".", "shape", "[", "-", "2", ":", "]", ":", "\n", "            ", "up_out", "=", "F", ".", "interpolate", "(", "up_out", ",", "s", ".", "shape", "[", "-", "2", ":", "]", ",", "mode", "=", "'nearest'", ")", "\n", "", "cat_x", "=", "self", ".", "relu", "(", "paddle", ".", "concat", "(", "[", "up_out", ",", "self", ".", "bn", "(", "s", ")", "]", ",", "axis", "=", "1", ")", ")", "\n", "return", "self", ".", "conv2", "(", "self", ".", "conv1", "(", "cat_x", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.PixelShuffle_ICNR.__init__": [[277, 297], ["paddle.Layer.__init__", "deoldify.ifnone", "deoldify.conv_layer", "deoldify.PixelShuffle", "deoldify.ReplicationPad2d", "paddle.AvgPool2D", "paddle.AvgPool2D", "paddle.AvgPool2D", "deoldify.relu"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.ifnone", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.conv_layer", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu"], ["def", "__init__", "(", "self", ",", "\n", "ni", ":", "int", ",", "\n", "nf", ":", "int", "=", "None", ",", "\n", "scale", ":", "int", "=", "2", ",", "\n", "blur", ":", "bool", "=", "False", ",", "\n", "norm_type", "=", "'Weight'", ",", "\n", "leaky", ":", "float", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "nf", "=", "ifnone", "(", "nf", ",", "ni", ")", "\n", "self", ".", "conv", "=", "conv_layer", "(", "ni", ",", "\n", "nf", "*", "(", "scale", "**", "2", ")", ",", "\n", "ks", "=", "1", ",", "\n", "norm_type", "=", "norm_type", ",", "\n", "use_activ", "=", "False", ")", "\n", "\n", "self", ".", "shuf", "=", "PixelShuffle", "(", "scale", ")", "\n", "\n", "self", ".", "pad", "=", "ReplicationPad2d", "(", "[", "1", ",", "0", ",", "1", ",", "0", "]", ")", "\n", "self", ".", "blur", "=", "nn", ".", "AvgPool2D", "(", "2", ",", "stride", "=", "1", ")", "\n", "self", ".", "relu", "=", "relu", "(", "True", ",", "leaky", "=", "leaky", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.PixelShuffle_ICNR.forward": [[298, 301], ["deoldify.PixelShuffle_ICNR.shuf", "deoldify.PixelShuffle_ICNR.relu", "deoldify.PixelShuffle_ICNR.blur", "deoldify.PixelShuffle_ICNR.conv", "deoldify.PixelShuffle_ICNR.pad"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "shuf", "(", "self", ".", "relu", "(", "self", ".", "conv", "(", "x", ")", ")", ")", "\n", "return", "self", ".", "blur", "(", "self", ".", "pad", "(", "x", ")", ")", "if", "self", ".", "blur", "else", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.CustomPixelShuffle_ICNR.__init__": [[343, 364], ["paddle.Layer.__init__", "deoldify.ifnone", "deoldify.custom_conv_layer", "deoldify.PixelShuffle", "deoldify.ReplicationPad2d", "paddle.AvgPool2D", "paddle.AvgPool2D", "paddle.AvgPool2D", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.ifnone", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.custom_conv_layer"], ["def", "__init__", "(", "self", ",", "\n", "ni", ":", "int", ",", "\n", "nf", ":", "int", "=", "None", ",", "\n", "scale", ":", "int", "=", "2", ",", "\n", "blur", ":", "bool", "=", "False", ",", "\n", "leaky", ":", "float", "=", "None", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "nf", "=", "ifnone", "(", "nf", ",", "ni", ")", "\n", "self", ".", "conv", "=", "custom_conv_layer", "(", "ni", ",", "\n", "nf", "*", "(", "scale", "**", "2", ")", ",", "\n", "ks", "=", "1", ",", "\n", "use_activ", "=", "False", ",", "\n", "**", "kwargs", ")", "\n", "\n", "self", ".", "shuf", "=", "PixelShuffle", "(", "scale", ")", "\n", "\n", "self", ".", "pad", "=", "ReplicationPad2d", "(", "[", "1", ",", "0", ",", "1", ",", "0", "]", ")", "\n", "self", ".", "blur", "=", "nn", ".", "AvgPool2D", "(", "2", ",", "stride", "=", "1", ")", "\n", "self", ".", "relu", "=", "nn", ".", "LeakyReLU", "(", "\n", "leaky", ")", "if", "leaky", "is", "not", "None", "else", "nn", ".", "ReLU", "(", ")", "#relu(True, leaky=leaky)", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.CustomPixelShuffle_ICNR.forward": [[365, 368], ["deoldify.CustomPixelShuffle_ICNR.shuf", "deoldify.CustomPixelShuffle_ICNR.relu", "deoldify.CustomPixelShuffle_ICNR.blur", "deoldify.CustomPixelShuffle_ICNR.conv", "deoldify.CustomPixelShuffle_ICNR.pad"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "shuf", "(", "self", ".", "relu", "(", "self", ".", "conv", "(", "x", ")", ")", ")", "\n", "return", "self", ".", "blur", "(", "self", ".", "pad", "(", "x", ")", ")", "if", "self", ".", "blur", "else", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.MergeLayer.__init__": [[373, 377], ["paddle.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "dense", ":", "bool", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dense", "=", "dense", "\n", "self", ".", "orig", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.MergeLayer.forward": [[378, 383], ["paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "paddle", ".", "concat", "(", "[", "x", ",", "self", ".", "orig", "]", ",", "\n", "axis", "=", "1", ")", "if", "self", ".", "dense", "else", "(", "x", "+", "self", ".", "orig", ")", "\n", "self", ".", "orig", "=", "None", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SigmoidRange.__init__": [[403, 406], ["paddle.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "low", ",", "high", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "low", ",", "self", ".", "high", "=", "low", ",", "high", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SigmoidRange.forward": [[407, 409], ["deoldify.sigmoid_range"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.sigmoid_range"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "sigmoid_range", "(", "x", ",", "self", ".", "low", ",", "self", ".", "high", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.PixelShuffle.__init__": [[417, 420], ["paddle.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "upscale_factor", ")", ":", "\n", "        ", "super", "(", "PixelShuffle", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "upscale_factor", "=", "upscale_factor", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.PixelShuffle.forward": [[421, 423], ["paddle.pixel_shuffle", "paddle.pixel_shuffle", "paddle.pixel_shuffle"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "F", ".", "pixel_shuffle", "(", "x", ",", "self", ".", "upscale_factor", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.ReplicationPad2d.__init__": [[426, 429], ["paddle.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "size", ")", ":", "\n", "        ", "super", "(", "ReplicationPad2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "size", "=", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.ReplicationPad2d.forward": [[430, 432], ["paddle.pad", "paddle.pad", "paddle.pad"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "F", ".", "pad", "(", "x", ",", "self", ".", "size", ",", "mode", "=", "\"replicate\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SelfAttention.__init__": [[448, 456], ["paddle.Layer.__init__", "deoldify.conv1d", "deoldify.conv1d", "deoldify.conv1d", "deoldify.SelfAttention.create_parameter", "paddle.nn.initializer.Constant", "paddle.nn.initializer.Constant", "paddle.nn.initializer.Constant", "paddle.nn.initializer.Constant", "paddle.nn.initializer.Constant", "paddle.nn.initializer.Constant", "paddle.nn.initializer.Constant", "paddle.nn.initializer.Constant", "paddle.nn.initializer.Constant"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.conv1d", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.conv1d", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.conv1d"], ["def", "__init__", "(", "self", ",", "n_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "query", "=", "conv1d", "(", "n_channels", ",", "n_channels", "//", "8", ")", "\n", "self", ".", "key", "=", "conv1d", "(", "n_channels", ",", "n_channels", "//", "8", ")", "\n", "self", ".", "value", "=", "conv1d", "(", "n_channels", ",", "n_channels", ")", "\n", "self", ".", "gamma", "=", "self", ".", "create_parameter", "(", "\n", "shape", "=", "[", "1", "]", ",", "default_initializer", "=", "paddle", ".", "nn", ".", "initializer", ".", "Constant", "(", "\n", "0.0", ")", ")", "#nn.Parameter(tensor([0.]))", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SelfAttention.forward": [[457, 468], ["paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.nn.functional.softmax", "paddle.nn.functional.softmax", "paddle.nn.functional.softmax", "paddle.nn.functional.softmax", "paddle.nn.functional.softmax", "paddle.nn.functional.softmax", "paddle.nn.functional.softmax", "paddle.nn.functional.softmax", "paddle.nn.functional.softmax", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "deoldify.SelfAttention.query", "deoldify.SelfAttention.key", "deoldify.SelfAttention.value", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "list", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.image_pool.ImagePool.query"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "#Notation from https://arxiv.org/pdf/1805.08318.pdf", "\n", "        ", "size", "=", "x", ".", "shape", "\n", "x", "=", "paddle", ".", "reshape", "(", "x", ",", "list", "(", "size", "[", ":", "2", "]", ")", "+", "[", "-", "1", "]", ")", "\n", "f", ",", "g", ",", "h", "=", "self", ".", "query", "(", "x", ")", ",", "self", ".", "key", "(", "x", ")", ",", "self", ".", "value", "(", "x", ")", "\n", "\n", "beta", "=", "paddle", ".", "nn", ".", "functional", ".", "softmax", "(", "paddle", ".", "bmm", "(", "\n", "paddle", ".", "transpose", "(", "f", ",", "[", "0", ",", "2", ",", "1", "]", ")", ",", "g", ")", ",", "\n", "axis", "=", "1", ")", "\n", "o", "=", "self", ".", "gamma", "*", "paddle", ".", "bmm", "(", "h", ",", "beta", ")", "+", "x", "\n", "return", "paddle", ".", "reshape", "(", "o", ",", "size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.custom_conv_layer": [[140, 181], ["conv_func", "paddle.Sequential", "paddle.utils.weight_norm", "layers.append", "layers.append", "layers.append", "modules.nn.Spectralnorm", "deoldify.relu", "deoldify.SelfAttention"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu"], ["", "", "def", "custom_conv_layer", "(", "ni", ":", "int", ",", "\n", "nf", ":", "int", ",", "\n", "ks", ":", "int", "=", "3", ",", "\n", "stride", ":", "int", "=", "1", ",", "\n", "padding", ":", "int", "=", "None", ",", "\n", "bias", ":", "bool", "=", "None", ",", "\n", "is_1d", ":", "bool", "=", "False", ",", "\n", "norm_type", "=", "'Batch'", ",", "\n", "use_activ", ":", "bool", "=", "True", ",", "\n", "leaky", ":", "float", "=", "None", ",", "\n", "transpose", ":", "bool", "=", "False", ",", "\n", "self_attention", ":", "bool", "=", "False", ",", "\n", "extra_bn", ":", "bool", "=", "False", ",", "\n", "**", "kwargs", ")", ":", "\n", "    ", "\"Create a sequence of convolutional (`ni` to `nf`), ReLU (if `use_activ`) and batchnorm (if `bn`) layers.\"", "\n", "if", "padding", "is", "None", ":", "\n", "        ", "padding", "=", "(", "ks", "-", "1", ")", "//", "2", "if", "not", "transpose", "else", "0", "\n", "", "bn", "=", "norm_type", "in", "(", "'Batch'", ",", "'Batchzero'", ")", "or", "extra_bn", "==", "True", "\n", "if", "bias", "is", "None", ":", "\n", "        ", "bias", "=", "not", "bn", "\n", "", "conv_func", "=", "nn", ".", "Conv2DTranspose", "if", "transpose", "else", "nn", ".", "Conv1D", "if", "is_1d", "else", "nn", ".", "Conv2D", "\n", "\n", "conv", "=", "conv_func", "(", "ni", ",", "\n", "nf", ",", "\n", "kernel_size", "=", "ks", ",", "\n", "bias_attr", "=", "bias", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ")", "\n", "if", "norm_type", "==", "'Weight'", ":", "\n", "        ", "conv", "=", "nn", ".", "utils", ".", "weight_norm", "(", "conv", ")", "\n", "", "elif", "norm_type", "==", "'Spectral'", ":", "\n", "        ", "conv", "=", "Spectralnorm", "(", "conv", ")", "\n", "", "layers", "=", "[", "conv", "]", "\n", "if", "use_activ", ":", "\n", "        ", "layers", ".", "append", "(", "relu", "(", "True", ",", "leaky", "=", "leaky", ")", ")", "\n", "", "if", "bn", ":", "\n", "        ", "layers", ".", "append", "(", "(", "nn", ".", "BatchNorm", "if", "is_1d", "else", "nn", ".", "BatchNorm", ")", "(", "nf", ")", ")", "\n", "", "if", "self_attention", ":", "\n", "        ", "layers", ".", "append", "(", "SelfAttention", "(", "nf", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu": [[183, 186], ["paddle.LeakyReLU", "paddle.ReLU"], "function", ["None"], ["", "def", "relu", "(", "inplace", ":", "bool", "=", "False", ",", "leaky", ":", "float", "=", "None", ")", ":", "\n", "    ", "\"Return a relu activation, maybe `leaky` and `inplace`.\"", "\n", "return", "nn", ".", "LeakyReLU", "(", "leaky", ")", "if", "leaky", "is", "not", "None", "else", "nn", ".", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.ifnone": [[269, 272], ["None"], "function", ["None"], ["", "", "def", "ifnone", "(", "a", ",", "b", ")", ":", "\n", "    ", "\"`a` if `a` is not None, otherwise `b`.\"", "\n", "return", "b", "if", "a", "is", "None", "else", "a", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.conv_layer": [[303, 338], ["conv_func", "paddle.Sequential", "paddle.utils.weight_norm", "layers.append", "layers.append", "layers.append", "modules.nn.Spectralnorm", "deoldify.relu", "deoldify.SelfAttention"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu"], ["", "", "def", "conv_layer", "(", "ni", ":", "int", ",", "\n", "nf", ":", "int", ",", "\n", "ks", ":", "int", "=", "3", ",", "\n", "stride", ":", "int", "=", "1", ",", "\n", "padding", ":", "int", "=", "None", ",", "\n", "bias", ":", "bool", "=", "None", ",", "\n", "is_1d", ":", "bool", "=", "False", ",", "\n", "norm_type", "=", "'Batch'", ",", "\n", "use_activ", ":", "bool", "=", "True", ",", "\n", "leaky", ":", "float", "=", "None", ",", "\n", "transpose", ":", "bool", "=", "False", ",", "\n", "init", "=", "None", ",", "\n", "self_attention", ":", "bool", "=", "False", ")", ":", "\n", "    ", "\"Create a sequence of convolutional (`ni` to `nf`), ReLU (if `use_activ`) and batchnorm (if `bn`) layers.\"", "\n", "if", "padding", "is", "None", ":", "padding", "=", "(", "ks", "-", "1", ")", "//", "2", "if", "not", "transpose", "else", "0", "\n", "bn", "=", "norm_type", "in", "(", "'Batch'", ",", "'BatchZero'", ")", "\n", "if", "bias", "is", "None", ":", "bias", "=", "not", "bn", "\n", "conv_func", "=", "nn", ".", "Conv2DTranspose", "if", "transpose", "else", "nn", ".", "Conv1D", "if", "is_1d", "else", "nn", ".", "Conv2D", "\n", "\n", "conv", "=", "conv_func", "(", "ni", ",", "\n", "nf", ",", "\n", "kernel_size", "=", "ks", ",", "\n", "bias_attr", "=", "bias", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ")", "\n", "if", "norm_type", "==", "'Weight'", ":", "\n", "        ", "conv", "=", "nn", ".", "utils", ".", "weight_norm", "(", "conv", ")", "\n", "", "elif", "norm_type", "==", "'Spectral'", ":", "\n", "        ", "conv", "=", "Spectralnorm", "(", "conv", ")", "\n", "\n", "", "layers", "=", "[", "conv", "]", "\n", "if", "use_activ", ":", "layers", ".", "append", "(", "relu", "(", "True", ",", "leaky", "=", "leaky", ")", ")", "\n", "if", "bn", ":", "layers", ".", "append", "(", "(", "nn", ".", "BatchNorm", "if", "is_1d", "else", "nn", ".", "BatchNorm", ")", "(", "nf", ")", ")", "\n", "if", "self_attention", ":", "layers", ".", "append", "(", "SelfAttention", "(", "nf", ")", ")", "\n", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.res_block": [[385, 398], ["deoldify.SequentialEx", "deoldify.conv_layer", "deoldify.conv_layer", "deoldify.MergeLayer"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.conv_layer", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.conv_layer"], ["", "", "def", "res_block", "(", "nf", ",", "\n", "dense", ":", "bool", "=", "False", ",", "\n", "norm_type", "=", "'Batch'", ",", "\n", "bottle", ":", "bool", "=", "False", ",", "\n", "**", "conv_kwargs", ")", ":", "\n", "    ", "\"Resnet block of `nf` features. `conv_kwargs` are passed to `conv_layer`.\"", "\n", "norm2", "=", "norm_type", "\n", "if", "not", "dense", "and", "(", "norm_type", "==", "'Batch'", ")", ":", "norm2", "=", "'BatchZero'", "\n", "nf_inner", "=", "nf", "//", "2", "if", "bottle", "else", "nf", "\n", "return", "SequentialEx", "(", "\n", "conv_layer", "(", "nf", ",", "nf_inner", ",", "norm_type", "=", "norm_type", ",", "**", "conv_kwargs", ")", ",", "\n", "conv_layer", "(", "nf_inner", ",", "nf", ",", "norm_type", "=", "norm2", ",", "**", "conv_kwargs", ")", ",", "\n", "MergeLayer", "(", "dense", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.sigmoid_range": [[411, 414], ["paddle.sigmoid"], "function", ["None"], ["", "", "def", "sigmoid_range", "(", "x", ",", "low", ",", "high", ")", ":", "\n", "    ", "\"Sigmoid function with range `(low, high)`\"", "\n", "return", "F", ".", "sigmoid", "(", "x", ")", "*", "(", "high", "-", "low", ")", "+", "low", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.conv1d": [[434, 443], ["paddle.Conv1D", "modules.nn.Spectralnorm"], "function", ["None"], ["", "", "def", "conv1d", "(", "ni", ":", "int", ",", "\n", "no", ":", "int", ",", "\n", "ks", ":", "int", "=", "1", ",", "\n", "stride", ":", "int", "=", "1", ",", "\n", "padding", ":", "int", "=", "0", ",", "\n", "bias", ":", "bool", "=", "False", ")", ":", "\n", "    ", "\"Create and initialize a `nn.Conv1d` layer with spectral normalization.\"", "\n", "conv", "=", "nn", ".", "Conv1D", "(", "ni", ",", "no", ",", "ks", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "bias_attr", "=", "bias", ")", "\n", "return", "Spectralnorm", "(", "conv", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify._get_sfs_idxs": [[470, 478], ["list", "numpy.where", "numpy.array", "numpy.array"], "function", ["None"], ["", "", "def", "_get_sfs_idxs", "(", "sizes", ")", ":", "\n", "    ", "\"Get the indexes of the layers where the size of the activation changes.\"", "\n", "feature_szs", "=", "[", "size", "[", "-", "1", "]", "for", "size", "in", "sizes", "]", "\n", "sfs_idxs", "=", "list", "(", "\n", "np", ".", "where", "(", "np", ".", "array", "(", "feature_szs", "[", ":", "-", "1", "]", ")", "!=", "np", ".", "array", "(", "feature_szs", "[", "1", ":", "]", ")", ")", "[", "0", "]", ")", "\n", "if", "feature_szs", "[", "0", "]", "!=", "feature_szs", "[", "1", "]", ":", "\n", "        ", "sfs_idxs", "=", "[", "0", "]", "+", "sfs_idxs", "\n", "", "return", "sfs_idxs", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.build_model": [[480, 504], ["paddle.Sequential", "deoldify.Deoldify", "paddle.vision.models.resnet101", "paddle.vision.models.resnet34", "ValueError", "list", "paddle.vision.models.resnet34.children"], "function", ["None"], ["", "def", "build_model", "(", "model_type", "=", "'stable'", ")", ":", "\n", "    ", "if", "model_type", "==", "'stable'", ":", "\n", "        ", "backbone", "=", "resnet101", "(", ")", "\n", "nf_factor", "=", "2", "\n", "", "elif", "model_type", "==", "'artistic'", ":", "\n", "        ", "backbone", "=", "resnet34", "(", ")", "\n", "nf_factor", "=", "1.5", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "'Expected model_type in [stable, artistic], but got {}'", ".", "format", "(", "\n", "model_type", ")", ")", "\n", "\n", "", "cut", "=", "-", "2", "\n", "encoder", "=", "nn", ".", "Sequential", "(", "*", "list", "(", "backbone", ".", "children", "(", ")", ")", "[", ":", "cut", "]", ")", "\n", "\n", "model", "=", "Deoldify", "(", "encoder", ",", "\n", "3", ",", "\n", "model_type", "=", "model_type", ",", "\n", "blur", "=", "True", ",", "\n", "y_range", "=", "(", "-", "3", ",", "3", ")", ",", "\n", "norm_type", "=", "'Spectral'", ",", "\n", "self_attention", "=", "True", ",", "\n", "nf_factor", "=", "nf_factor", ")", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.unet.UnetGenerator.__init__": [[27, 89], ["paddle.Layer.__init__", "modules.norm.build_norm_layer", "unet.UnetSkipConnectionBlock", "range", "unet.UnetSkipConnectionBlock", "unet.UnetSkipConnectionBlock", "unet.UnetSkipConnectionBlock", "unet.UnetSkipConnectionBlock", "unet.UnetSkipConnectionBlock"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.norm.build_norm_layer"], ["def", "__init__", "(", "self", ",", "\n", "input_nc", ",", "\n", "output_nc", ",", "\n", "num_downs", ",", "\n", "ngf", "=", "64", ",", "\n", "norm_type", "=", "'batch'", ",", "\n", "use_dropout", "=", "False", ")", ":", "\n", "        ", "\"\"\"\n        Construct a Unet generator\n        the U-Net from the innermost layer to the outermost layer.\n        It is a recursive process.\n\n        Args:\n            input_nc (int): the number of channels in input images.\n            output_nc (int): the number of channels in output images.\n            num_downs (int): the number of downsamplings in UNet. For example, # if |num_downs| == 7,\n                                image of size 128x128 will become of size 1x1 # at the bottleneck.\n            ngf (int): the number of filters in the last conv layer.\n            norm_type (str): normalization type, default: 'batch'.\n\n        \"\"\"", "\n", "super", "(", "UnetGenerator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "norm_layer", "=", "build_norm_layer", "(", "norm_type", ")", "\n", "# construct unet structure", "\n", "unet_block", "=", "UnetSkipConnectionBlock", "(", "\n", "ngf", "*", "8", ",", "\n", "ngf", "*", "8", ",", "\n", "input_nc", "=", "None", ",", "\n", "submodule", "=", "None", ",", "\n", "norm_layer", "=", "norm_layer", ",", "\n", "innermost", "=", "True", ")", "# add the innermost layer", "\n", "for", "i", "in", "range", "(", "num_downs", "-", "\n", "5", ")", ":", "# add intermediate layers with ngf * 8 filters", "\n", "            ", "unet_block", "=", "UnetSkipConnectionBlock", "(", "ngf", "*", "8", ",", "\n", "ngf", "*", "8", ",", "\n", "input_nc", "=", "None", ",", "\n", "submodule", "=", "unet_block", ",", "\n", "norm_layer", "=", "norm_layer", ",", "\n", "use_dropout", "=", "use_dropout", ")", "\n", "# gradually reduce the number of filters from ngf * 8 to ngf", "\n", "", "unet_block", "=", "UnetSkipConnectionBlock", "(", "ngf", "*", "4", ",", "\n", "ngf", "*", "8", ",", "\n", "input_nc", "=", "None", ",", "\n", "submodule", "=", "unet_block", ",", "\n", "norm_layer", "=", "norm_layer", ")", "\n", "unet_block", "=", "UnetSkipConnectionBlock", "(", "ngf", "*", "2", ",", "\n", "ngf", "*", "4", ",", "\n", "input_nc", "=", "None", ",", "\n", "submodule", "=", "unet_block", ",", "\n", "norm_layer", "=", "norm_layer", ")", "\n", "unet_block", "=", "UnetSkipConnectionBlock", "(", "ngf", ",", "\n", "ngf", "*", "2", ",", "\n", "input_nc", "=", "None", ",", "\n", "submodule", "=", "unet_block", ",", "\n", "norm_layer", "=", "norm_layer", ")", "\n", "self", ".", "model", "=", "UnetSkipConnectionBlock", "(", "\n", "output_nc", ",", "\n", "ngf", ",", "\n", "input_nc", "=", "input_nc", ",", "\n", "submodule", "=", "unet_block", ",", "\n", "outermost", "=", "True", ",", "\n", "norm_layer", "=", "norm_layer", ")", "# add the outermost layer", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.unet.UnetGenerator.forward": [[90, 93], ["unet.UnetGenerator.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "\"\"\"Standard forward\"\"\"", "\n", "return", "self", ".", "model", "(", "input", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.unet.UnetSkipConnectionBlock.__init__": [[100, 175], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.LeakyReLU", "paddle.LeakyReLU", "norm_layer", "paddle.ReLU", "paddle.ReLU", "norm_layer", "paddle.Sequential", "paddle.Sequential", "type", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.Tanh", "paddle.Tanh", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.Dropout", "paddle.Dropout"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "\n", "outer_nc", ",", "\n", "inner_nc", ",", "\n", "input_nc", "=", "None", ",", "\n", "submodule", "=", "None", ",", "\n", "outermost", "=", "False", ",", "\n", "innermost", "=", "False", ",", "\n", "norm_layer", "=", "nn", ".", "BatchNorm", ",", "\n", "use_dropout", "=", "False", ")", ":", "\n", "        ", "\"\"\"Construct a Unet submodule with skip connections.\n\n        Args:\n            outer_nc (int): the number of filters in the outer conv layer\n            inner_nc (int): the number of filters in the inner conv layer\n            input_nc (int): the number of channels in input images/features\n            submodule (UnetSkipConnectionBlock): previously defined submodules\n            outermost (bool): if this module is the outermost module\n            innermost (bool): if this module is the innermost module\n            norm_layer (paddle.nn.Layer): normalization layer\n            use_dropout (bool): whether to  use dropout layers.\n        \"\"\"", "\n", "super", "(", "UnetSkipConnectionBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "outermost", "=", "outermost", "\n", "if", "type", "(", "norm_layer", ")", "==", "functools", ".", "partial", ":", "\n", "            ", "use_bias", "=", "norm_layer", ".", "func", "==", "nn", ".", "InstanceNorm2D", "\n", "", "else", ":", "\n", "            ", "use_bias", "=", "norm_layer", "==", "nn", ".", "InstanceNorm2D", "\n", "", "if", "input_nc", "is", "None", ":", "\n", "            ", "input_nc", "=", "outer_nc", "\n", "", "downconv", "=", "nn", ".", "Conv2D", "(", "input_nc", ",", "\n", "inner_nc", ",", "\n", "kernel_size", "=", "4", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "use_bias", ")", "\n", "downrelu", "=", "nn", ".", "LeakyReLU", "(", "0.2", ")", "\n", "downnorm", "=", "norm_layer", "(", "inner_nc", ")", "\n", "uprelu", "=", "nn", ".", "ReLU", "(", ")", "\n", "upnorm", "=", "norm_layer", "(", "outer_nc", ")", "\n", "\n", "if", "outermost", ":", "\n", "            ", "upconv", "=", "nn", ".", "Conv2DTranspose", "(", "inner_nc", "*", "2", ",", "\n", "outer_nc", ",", "\n", "kernel_size", "=", "4", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ")", "\n", "down", "=", "[", "downconv", "]", "\n", "up", "=", "[", "uprelu", ",", "upconv", ",", "nn", ".", "Tanh", "(", ")", "]", "\n", "model", "=", "down", "+", "[", "submodule", "]", "+", "up", "\n", "", "elif", "innermost", ":", "\n", "            ", "upconv", "=", "nn", ".", "Conv2DTranspose", "(", "inner_nc", ",", "\n", "outer_nc", ",", "\n", "kernel_size", "=", "4", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "use_bias", ")", "\n", "down", "=", "[", "downrelu", ",", "downconv", "]", "\n", "up", "=", "[", "uprelu", ",", "upconv", ",", "upnorm", "]", "\n", "model", "=", "down", "+", "up", "\n", "", "else", ":", "\n", "            ", "upconv", "=", "nn", ".", "Conv2DTranspose", "(", "inner_nc", "*", "2", ",", "\n", "outer_nc", ",", "\n", "kernel_size", "=", "4", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "use_bias", ")", "\n", "down", "=", "[", "downrelu", ",", "downconv", ",", "downnorm", "]", "\n", "up", "=", "[", "uprelu", ",", "upconv", ",", "upnorm", "]", "\n", "\n", "if", "use_dropout", ":", "\n", "                ", "model", "=", "down", "+", "[", "submodule", "]", "+", "up", "+", "[", "nn", ".", "Dropout", "(", "0.5", ")", "]", "\n", "", "else", ":", "\n", "                ", "model", "=", "down", "+", "[", "submodule", "]", "+", "up", "\n", "\n", "", "", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.unet.UnetSkipConnectionBlock.forward": [[176, 182], ["unet.UnetSkipConnectionBlock.model", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "unet.UnetSkipConnectionBlock.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "outermost", ":", "\n", "            ", "return", "self", ".", "model", "(", "x", ")", "\n", "# add skip connections", "\n", "", "else", ":", "\n", "            ", "return", "paddle", ".", "concat", "(", "[", "x", ",", "self", ".", "model", "(", "x", ")", "]", ",", "1", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_lapstyle.ResnetBlock.__init__": [[91, 97], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "dim", ")", ":", "\n", "        ", "super", "(", "ResnetBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv_block", "=", "nn", ".", "Sequential", "(", "nn", ".", "Pad2D", "(", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "'reflect'", ")", ",", "\n", "nn", ".", "Conv2D", "(", "dim", ",", "dim", ",", "(", "3", ",", "3", ")", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Pad2D", "(", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "'reflect'", ")", ",", "\n", "nn", ".", "Conv2D", "(", "dim", ",", "dim", ",", "(", "3", ",", "3", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_lapstyle.ResnetBlock.forward": [[98, 101], ["generater_lapstyle.ResnetBlock.conv_block"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "x", "+", "self", ".", "conv_block", "(", "x", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_lapstyle.ConvBlock.__init__": [[113, 118], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "dim1", ",", "dim2", ")", ":", "\n", "        ", "super", "(", "ConvBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv_block", "=", "nn", ".", "Sequential", "(", "nn", ".", "Pad2D", "(", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "'reflect'", ")", ",", "\n", "nn", ".", "Conv2D", "(", "dim1", ",", "dim2", ",", "(", "3", ",", "3", ")", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_lapstyle.ConvBlock.forward": [[119, 122], ["generater_lapstyle.ConvBlock.conv_block"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv_block", "(", "x", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_lapstyle.DecoderNet.__init__": [[131, 147], ["paddle.Layer.__init__", "generater_lapstyle.ResnetBlock", "generater_lapstyle.ConvBlock", "generater_lapstyle.ResnetBlock", "generater_lapstyle.ConvBlock", "generater_lapstyle.ConvBlock", "generater_lapstyle.ConvBlock", "generater_lapstyle.ConvBlock", "paddle.Upsample", "paddle.Upsample", "paddle.Sequential", "paddle.Sequential", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "DecoderNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "resblock_41", "=", "ResnetBlock", "(", "512", ")", "\n", "self", ".", "convblock_41", "=", "ConvBlock", "(", "512", ",", "256", ")", "\n", "self", ".", "resblock_31", "=", "ResnetBlock", "(", "256", ")", "\n", "self", ".", "convblock_31", "=", "ConvBlock", "(", "256", ",", "128", ")", "\n", "\n", "self", ".", "convblock_21", "=", "ConvBlock", "(", "128", ",", "128", ")", "\n", "self", ".", "convblock_22", "=", "ConvBlock", "(", "128", ",", "64", ")", "\n", "\n", "self", ".", "convblock_11", "=", "ConvBlock", "(", "64", ",", "64", ")", "\n", "self", ".", "upsample", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", "\n", "\n", "self", ".", "final_conv", "=", "nn", ".", "Sequential", "(", "nn", ".", "Pad2D", "(", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "'reflect'", ")", ",", "\n", "nn", ".", "Conv2D", "(", "64", ",", "3", ",", "(", "3", ",", "3", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_lapstyle.DecoderNet.forward": [[148, 168], ["generater_lapstyle.adaptive_instance_normalization", "generater_lapstyle.DecoderNet.resblock_41", "generater_lapstyle.DecoderNet.convblock_41", "generater_lapstyle.DecoderNet.upsample", "generater_lapstyle.adaptive_instance_normalization", "generater_lapstyle.DecoderNet.resblock_31", "generater_lapstyle.DecoderNet.convblock_31", "generater_lapstyle.DecoderNet.upsample", "generater_lapstyle.adaptive_instance_normalization", "generater_lapstyle.DecoderNet.convblock_21", "generater_lapstyle.DecoderNet.convblock_22", "generater_lapstyle.DecoderNet.upsample", "generater_lapstyle.DecoderNet.convblock_11", "generater_lapstyle.DecoderNet.final_conv"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_lapstyle.adaptive_instance_normalization", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.upsample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_lapstyle.adaptive_instance_normalization", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.upsample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_lapstyle.adaptive_instance_normalization", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.upsample"], ["", "def", "forward", "(", "self", ",", "cF", ",", "sF", ")", ":", "\n", "\n", "        ", "out", "=", "adaptive_instance_normalization", "(", "cF", "[", "'r41'", "]", ",", "sF", "[", "'r41'", "]", ")", "\n", "out", "=", "self", ".", "resblock_41", "(", "out", ")", "\n", "out", "=", "self", ".", "convblock_41", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "upsample", "(", "out", ")", "\n", "out", "+=", "adaptive_instance_normalization", "(", "cF", "[", "'r31'", "]", ",", "sF", "[", "'r31'", "]", ")", "\n", "out", "=", "self", ".", "resblock_31", "(", "out", ")", "\n", "out", "=", "self", ".", "convblock_31", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "upsample", "(", "out", ")", "\n", "out", "+=", "adaptive_instance_normalization", "(", "cF", "[", "'r21'", "]", ",", "sF", "[", "'r21'", "]", ")", "\n", "out", "=", "self", ".", "convblock_21", "(", "out", ")", "\n", "out", "=", "self", ".", "convblock_22", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "upsample", "(", "out", ")", "\n", "out", "=", "self", ".", "convblock_11", "(", "out", ")", "\n", "out", "=", "self", ".", "final_conv", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_lapstyle.Encoder.__init__": [[179, 249], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "utils.download.get_path_from_url", "paddle.Sequential.set_dict", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "list", "list", "list", "list", "list", "paddle.Sequential.children", "paddle.Sequential.children", "paddle.Sequential.children", "paddle.Sequential.children", "paddle.Sequential.children"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "vgg_net", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "3", ",", "3", ",", "(", "1", ",", "1", ")", ")", ",", "\n", "nn", ".", "Pad2D", "(", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "'reflect'", ")", ",", "\n", "nn", ".", "Conv2D", "(", "3", ",", "64", ",", "(", "3", ",", "3", ")", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "# relu1-1", "\n", "nn", ".", "Pad2D", "(", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "'reflect'", ")", ",", "\n", "nn", ".", "Conv2D", "(", "64", ",", "64", ",", "(", "3", ",", "3", ")", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "# relu1-2", "\n", "nn", ".", "MaxPool2D", "(", "(", "2", ",", "2", ")", ",", "(", "2", ",", "2", ")", ",", "(", "0", ",", "0", ")", ",", "ceil_mode", "=", "True", ")", ",", "\n", "nn", ".", "Pad2D", "(", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "'reflect'", ")", ",", "\n", "nn", ".", "Conv2D", "(", "64", ",", "128", ",", "(", "3", ",", "3", ")", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "# relu2-1", "\n", "nn", ".", "Pad2D", "(", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "'reflect'", ")", ",", "\n", "nn", ".", "Conv2D", "(", "128", ",", "128", ",", "(", "3", ",", "3", ")", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "# relu2-2", "\n", "nn", ".", "MaxPool2D", "(", "(", "2", ",", "2", ")", ",", "(", "2", ",", "2", ")", ",", "(", "0", ",", "0", ")", ",", "ceil_mode", "=", "True", ")", ",", "\n", "nn", ".", "Pad2D", "(", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "'reflect'", ")", ",", "\n", "nn", ".", "Conv2D", "(", "128", ",", "256", ",", "(", "3", ",", "3", ")", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "# relu3-1", "\n", "nn", ".", "Pad2D", "(", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "'reflect'", ")", ",", "\n", "nn", ".", "Conv2D", "(", "256", ",", "256", ",", "(", "3", ",", "3", ")", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "# relu3-2", "\n", "nn", ".", "Pad2D", "(", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "'reflect'", ")", ",", "\n", "nn", ".", "Conv2D", "(", "256", ",", "256", ",", "(", "3", ",", "3", ")", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "# relu3-3", "\n", "nn", ".", "Pad2D", "(", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "'reflect'", ")", ",", "\n", "nn", ".", "Conv2D", "(", "256", ",", "256", ",", "(", "3", ",", "3", ")", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "# relu3-4", "\n", "nn", ".", "MaxPool2D", "(", "(", "2", ",", "2", ")", ",", "(", "2", ",", "2", ")", ",", "(", "0", ",", "0", ")", ",", "ceil_mode", "=", "True", ")", ",", "\n", "nn", ".", "Pad2D", "(", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "'reflect'", ")", ",", "\n", "nn", ".", "Conv2D", "(", "256", ",", "512", ",", "(", "3", ",", "3", ")", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "# relu4-1, this is the last layer used", "\n", "nn", ".", "Pad2D", "(", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "'reflect'", ")", ",", "\n", "nn", ".", "Conv2D", "(", "512", ",", "512", ",", "(", "3", ",", "3", ")", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "# relu4-2", "\n", "nn", ".", "Pad2D", "(", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "'reflect'", ")", ",", "\n", "nn", ".", "Conv2D", "(", "512", ",", "512", ",", "(", "3", ",", "3", ")", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "# relu4-3", "\n", "nn", ".", "Pad2D", "(", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "'reflect'", ")", ",", "\n", "nn", ".", "Conv2D", "(", "512", ",", "512", ",", "(", "3", ",", "3", ")", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "# relu4-4", "\n", "nn", ".", "MaxPool2D", "(", "(", "2", ",", "2", ")", ",", "(", "2", ",", "2", ")", ",", "(", "0", ",", "0", ")", ",", "ceil_mode", "=", "True", ")", ",", "\n", "nn", ".", "Pad2D", "(", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "'reflect'", ")", ",", "\n", "nn", ".", "Conv2D", "(", "512", ",", "512", ",", "(", "3", ",", "3", ")", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "# relu5-1", "\n", "nn", ".", "Pad2D", "(", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "'reflect'", ")", ",", "\n", "nn", ".", "Conv2D", "(", "512", ",", "512", ",", "(", "3", ",", "3", ")", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "# relu5-2", "\n", "nn", ".", "Pad2D", "(", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "'reflect'", ")", ",", "\n", "nn", ".", "Conv2D", "(", "512", ",", "512", ",", "(", "3", ",", "3", ")", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "# relu5-3", "\n", "nn", ".", "Pad2D", "(", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "'reflect'", ")", ",", "\n", "nn", ".", "Conv2D", "(", "512", ",", "512", ",", "(", "3", ",", "3", ")", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "# relu5-4", "\n", ")", "\n", "weight_path", "=", "get_path_from_url", "(", "\n", "'https://paddlegan.bj.bcebos.com/models/vgg_normalised.pdparams'", ")", "\n", "vgg_net", ".", "set_dict", "(", "paddle", ".", "load", "(", "weight_path", ")", ")", "\n", "self", ".", "enc_1", "=", "nn", ".", "Sequential", "(", "*", "list", "(", "\n", "vgg_net", ".", "children", "(", ")", ")", "[", ":", "4", "]", ")", "# input -> relu1_1", "\n", "self", ".", "enc_2", "=", "nn", ".", "Sequential", "(", "*", "list", "(", "\n", "vgg_net", ".", "children", "(", ")", ")", "[", "4", ":", "11", "]", ")", "# relu1_1 -> relu2_1", "\n", "self", ".", "enc_3", "=", "nn", ".", "Sequential", "(", "*", "list", "(", "\n", "vgg_net", ".", "children", "(", ")", ")", "[", "11", ":", "18", "]", ")", "# relu2_1 -> relu3_1", "\n", "self", ".", "enc_4", "=", "nn", ".", "Sequential", "(", "*", "list", "(", "\n", "vgg_net", ".", "children", "(", ")", ")", "[", "18", ":", "31", "]", ")", "# relu3_1 -> relu4_1", "\n", "self", ".", "enc_5", "=", "nn", ".", "Sequential", "(", "*", "list", "(", "\n", "vgg_net", ".", "children", "(", ")", ")", "[", "31", ":", "44", "]", ")", "# relu4_1 -> relu5_1", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_lapstyle.Encoder.forward": [[250, 263], ["generater_lapstyle.Encoder.enc_1", "generater_lapstyle.Encoder.enc_2", "generater_lapstyle.Encoder.enc_3", "generater_lapstyle.Encoder.enc_4", "generater_lapstyle.Encoder.enc_5"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "{", "}", "\n", "x", "=", "self", ".", "enc_1", "(", "x", ")", "\n", "out", "[", "'r11'", "]", "=", "x", "\n", "x", "=", "self", ".", "enc_2", "(", "x", ")", "\n", "out", "[", "'r21'", "]", "=", "x", "\n", "x", "=", "self", ".", "enc_3", "(", "x", ")", "\n", "out", "[", "'r31'", "]", "=", "x", "\n", "x", "=", "self", ".", "enc_4", "(", "x", ")", "\n", "out", "[", "'r41'", "]", "=", "x", "\n", "x", "=", "self", ".", "enc_5", "(", "x", ")", "\n", "out", "[", "'r51'", "]", "=", "x", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_lapstyle.RevisionNet.__init__": [[272, 302], ["paddle.Layer.__init__", "generater_lapstyle.ResnetBlock", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.Upsample", "paddle.Upsample", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "input_nc", "=", "6", ")", ":", "\n", "        ", "super", "(", "RevisionNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "DownBlock", "=", "[", "]", "\n", "DownBlock", "+=", "[", "\n", "nn", ".", "Pad2D", "(", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "'reflect'", ")", ",", "\n", "nn", ".", "Conv2D", "(", "input_nc", ",", "64", ",", "(", "3", ",", "3", ")", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", "\n", "DownBlock", "+=", "[", "\n", "nn", ".", "Pad2D", "(", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "'reflect'", ")", ",", "\n", "nn", ".", "Conv2D", "(", "64", ",", "64", ",", "(", "3", ",", "3", ")", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", "\n", "\n", "self", ".", "resblock", "=", "ResnetBlock", "(", "64", ")", "\n", "\n", "UpBlock", "=", "[", "]", "\n", "UpBlock", "+=", "[", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", ",", "\n", "nn", ".", "Pad2D", "(", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "'reflect'", ")", ",", "\n", "nn", ".", "Conv2D", "(", "64", ",", "64", ",", "(", "3", ",", "3", ")", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", "\n", "UpBlock", "+=", "[", "\n", "nn", ".", "Pad2D", "(", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "'reflect'", ")", ",", "\n", "nn", ".", "Conv2D", "(", "64", ",", "3", ",", "(", "3", ",", "3", ")", ")", "\n", "]", "\n", "\n", "self", ".", "DownBlock", "=", "nn", ".", "Sequential", "(", "*", "DownBlock", ")", "\n", "self", ".", "UpBlock", "=", "nn", ".", "Sequential", "(", "*", "UpBlock", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_lapstyle.RevisionNet.forward": [[303, 315], ["generater_lapstyle.RevisionNet.DownBlock", "generater_lapstyle.RevisionNet.resblock", "generater_lapstyle.RevisionNet.UpBlock"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            input (Tensor): (b, 6, 256, 256) is concat of last input and this lap.\n\n        Returns:\n            Tensor: (b, 3, 256, 256).\n        \"\"\"", "\n", "out", "=", "self", ".", "DownBlock", "(", "input", ")", "\n", "out", "=", "self", ".", "resblock", "(", "out", ")", "\n", "out", "=", "self", ".", "UpBlock", "(", "out", ")", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_lapstyle.calc_mean_std": [[22, 44], ["feat.reshape", "paddle.sqrt", "paddle.sqrt", "feat_std.reshape.reshape", "feat.reshape", "paddle.mean", "paddle.mean", "feat_mean.reshape.reshape", "len", "paddle.var", "paddle.var"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var"], ["def", "calc_mean_std", "(", "feat", ",", "eps", "=", "1e-5", ")", ":", "\n", "    ", "\"\"\"calculate mean and standard deviation.\n\n    Args:\n        feat (Tensor): Tensor with shape (N, C, H, W).\n        eps (float): Default: 1e-5.\n\n    Return:\n        mean and std of feat\n        shape: [N, C, 1, 1]\n    \"\"\"", "\n", "size", "=", "feat", ".", "shape", "\n", "assert", "(", "len", "(", "size", ")", "==", "4", ")", "\n", "N", ",", "C", "=", "size", "[", ":", "2", "]", "\n", "feat_var", "=", "feat", ".", "reshape", "(", "[", "N", ",", "C", ",", "-", "1", "]", ")", "\n", "feat_var", "=", "paddle", ".", "var", "(", "feat_var", ",", "axis", "=", "2", ")", "+", "eps", "\n", "feat_std", "=", "paddle", ".", "sqrt", "(", "feat_var", ")", "\n", "feat_std", "=", "feat_std", ".", "reshape", "(", "[", "N", ",", "C", ",", "1", ",", "1", "]", ")", "\n", "feat_mean", "=", "feat", ".", "reshape", "(", "[", "N", ",", "C", ",", "-", "1", "]", ")", "\n", "feat_mean", "=", "paddle", ".", "mean", "(", "feat_mean", ",", "axis", "=", "2", ")", "\n", "feat_mean", "=", "feat_mean", ".", "reshape", "(", "[", "N", ",", "C", ",", "1", ",", "1", "]", ")", "\n", "return", "feat_mean", ",", "feat_std", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_lapstyle.mean_variance_norm": [[46, 59], ["generater_lapstyle.calc_mean_std", "std.expand", "mean.expand"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_lapstyle.calc_mean_std"], ["", "def", "mean_variance_norm", "(", "feat", ")", ":", "\n", "    ", "\"\"\"mean_variance_norm.\n\n    Args:\n        feat (Tensor): Tensor with shape (N, C, H, W).\n\n    Return:\n        Normalized feat with shape (N, C, H, W)\n    \"\"\"", "\n", "size", "=", "feat", ".", "shape", "\n", "mean", ",", "std", "=", "calc_mean_std", "(", "feat", ")", "\n", "normalized_feat", "=", "(", "feat", "-", "mean", ".", "expand", "(", "size", ")", ")", "/", "std", ".", "expand", "(", "size", ")", "\n", "return", "normalized_feat", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_lapstyle.adaptive_instance_normalization": [[61, 79], ["generater_lapstyle.calc_mean_std", "generater_lapstyle.calc_mean_std", "content_std.expand", "style_mean.expand", "content_mean.expand", "style_std.expand"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_lapstyle.calc_mean_std", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_lapstyle.calc_mean_std"], ["", "def", "adaptive_instance_normalization", "(", "content_feat", ",", "style_feat", ")", ":", "\n", "    ", "\"\"\"adaptive_instance_normalization.\n\n    Args:\n        content_feat (Tensor): Tensor with shape (N, C, H, W).\n        style_feat (Tensor): Tensor with shape (N, C, H, W).\n\n    Return:\n        Normalized content_feat with shape (N, C, H, W)\n    \"\"\"", "\n", "assert", "(", "content_feat", ".", "shape", "[", ":", "2", "]", "==", "style_feat", ".", "shape", "[", ":", "2", "]", ")", "\n", "size", "=", "content_feat", ".", "shape", "\n", "style_mean", ",", "style_std", "=", "calc_mean_std", "(", "style_feat", ")", "\n", "content_mean", ",", "content_std", "=", "calc_mean_std", "(", "content_feat", ")", "\n", "\n", "normalized_feat", "=", "(", "content_feat", "-", "\n", "content_mean", ".", "expand", "(", "size", ")", ")", "/", "content_std", ".", "expand", "(", "size", ")", "\n", "return", "normalized_feat", "*", "style_std", ".", "expand", "(", "size", ")", "+", "style_mean", ".", "expand", "(", "size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.gpen.GPEN.__init__": [[29, 79], ["paddle.Layer.__init__", "int", "ppgan.models.generators.generator_gpen.StyleGANv2Generator", "paddle.Sequential", "range", "paddle.Sequential", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "math.log", "ppgan.models.discriminators.discriminator_styleganv2.ConvLayer", "setattr", "ppgan.modules.equalized.EqualLinear_gpen", "range", "ppgan.models.discriminators.discriminator_styleganv2.ConvLayer", "paddle.Sequential"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["parser", ".", "add_argument", "(", "\"--weight_path\"", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ",", "\n", "help", "=", "\"path to model checkpoint path\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--test_img\"", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'data/gpen/lite_data/15006.png'", ",", "\n", "help", "=", "\"path of test image\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--model_type\"", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "None", ",", "\n", "help", "=", "\"type of model for loading pretrained model\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--seed\"", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "None", ",", "\n", "help", "=", "\"sample random seed for model's image generation\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--size\"", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "256", ",", "\n", "help", "=", "\"resolution of output image\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--style_dim\"", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "512", ",", "\n", "help", "=", "\"number of style dimension\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--n_mlp\"", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "8", ",", "\n", "help", "=", "\"number of mlp layer depth\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--channel_multiplier\"", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "1", ",", "\n", "help", "=", "\"number of channel multiplier\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--narrow\"", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "0.5", ",", "\n", "help", "=", "\"number of channel narrow\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--cpu\"", ",", "\n", "dest", "=", "\"cpu\"", ",", "\n", "action", "=", "\"store_true\"", ",", "\n", "help", "=", "\"cpu mode.\"", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.gpen.GPEN.forward": [[80, 107], ["range", "getattr.reshape", "gpen.GPEN.final_linear", "gpen.GPEN.generator", "getattr", "getattr.", "noise.append", "list", "itertools.chain.from_iterable", "itertools.repeat"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["\n", "if", "args", ".", "cpu", ":", "\n", "        ", "paddle", ".", "set_device", "(", "'cpu'", ")", "\n", "\n", "", "predictor", "=", "GPENPredictor", "(", "output_path", "=", "args", ".", "output_path", ",", "\n", "weight_path", "=", "args", ".", "weight_path", ",", "\n", "model_type", "=", "args", ".", "model_type", ",", "\n", "seed", "=", "args", ".", "seed", ",", "\n", "size", "=", "args", ".", "size", ",", "\n", "style_dim", "=", "args", ".", "style_dim", ",", "\n", "n_mlp", "=", "args", ".", "n_mlp", ",", "\n", "narrow", "=", "args", ".", "narrow", ",", "\n", "channel_multiplier", "=", "args", ".", "channel_multiplier", ")", "\n", "predictor", ".", "run", "(", "args", ".", "test_img", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.pan.PA.__init__": [[43, 48], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Sigmoid", "paddle.Sigmoid", "paddle.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "nf", ")", ":", "\n", "\n", "        ", "super", "(", "PA", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2D", "(", "nf", ",", "nf", ",", "1", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.pan.PA.forward": [[49, 56], ["pan.PA.conv", "pan.PA.sigmoid"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "y", "=", "self", ".", "conv", "(", "x", ")", "\n", "y", "=", "self", ".", "sigmoid", "(", "y", ")", "\n", "out", "=", "x", "*", "y", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.pan.PAConv.__init__": [[59, 74], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Sigmoid", "paddle.Sigmoid", "paddle.Sigmoid", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nf", ",", "k_size", "=", "3", ")", ":", "\n", "\n", "        ", "super", "(", "PAConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "k2", "=", "nn", ".", "Conv2D", "(", "nf", ",", "nf", ",", "1", ")", "# 1x1 convolution nf->nf", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "k3", "=", "nn", ".", "Conv2D", "(", "nf", ",", "\n", "nf", ",", "\n", "kernel_size", "=", "k_size", ",", "\n", "padding", "=", "(", "k_size", "-", "1", ")", "//", "2", ",", "\n", "bias_attr", "=", "False", ")", "# 3x3 convolution", "\n", "self", ".", "k4", "=", "nn", ".", "Conv2D", "(", "nf", ",", "\n", "nf", ",", "\n", "kernel_size", "=", "k_size", ",", "\n", "padding", "=", "(", "k_size", "-", "1", ")", "//", "2", ",", "\n", "bias_attr", "=", "False", ")", "# 3x3 convolution", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.pan.PAConv.forward": [[75, 84], ["pan.PAConv.k2", "pan.PAConv.sigmoid", "pan.PAConv.k4", "pan.PAConv.k3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "y", "=", "self", ".", "k2", "(", "x", ")", "\n", "y", "=", "self", ".", "sigmoid", "(", "y", ")", "\n", "\n", "out", "=", "self", ".", "k3", "(", "x", ")", "*", "y", "\n", "out", "=", "self", ".", "k4", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.pan.SCPA.__init__": [[90, 120], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "pan.PAConv", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "nf", ",", "reduction", "=", "2", ",", "stride", "=", "1", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "super", "(", "SCPA", ",", "self", ")", ".", "__init__", "(", ")", "\n", "group_width", "=", "nf", "//", "reduction", "\n", "\n", "self", ".", "conv1_a", "=", "nn", ".", "Conv2D", "(", "nf", ",", "\n", "group_width", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "conv1_b", "=", "nn", ".", "Conv2D", "(", "nf", ",", "\n", "group_width", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "k1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "group_width", ",", "\n", "group_width", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "dilation", ",", "\n", "dilation", "=", "dilation", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "\n", "self", ".", "PAConv", "=", "PAConv", "(", "group_width", ")", "\n", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2D", "(", "group_width", "*", "reduction", ",", "\n", "nf", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "self", ".", "lrelu", "=", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.pan.SCPA.forward": [[121, 138], ["pan.SCPA.conv1_a", "pan.SCPA.conv1_b", "pan.SCPA.lrelu", "pan.SCPA.lrelu", "pan.SCPA.k1", "pan.SCPA.PAConv", "pan.SCPA.lrelu", "pan.SCPA.lrelu", "pan.SCPA.conv3", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out_a", "=", "self", ".", "conv1_a", "(", "x", ")", "\n", "out_b", "=", "self", ".", "conv1_b", "(", "x", ")", "\n", "out_a", "=", "self", ".", "lrelu", "(", "out_a", ")", "\n", "out_b", "=", "self", ".", "lrelu", "(", "out_b", ")", "\n", "\n", "out_a", "=", "self", ".", "k1", "(", "out_a", ")", "\n", "out_b", "=", "self", ".", "PAConv", "(", "out_b", ")", "\n", "out_a", "=", "self", ".", "lrelu", "(", "out_a", ")", "\n", "out_b", "=", "self", ".", "lrelu", "(", "out_b", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "paddle", ".", "concat", "(", "[", "out_a", ",", "out_b", "]", ",", "axis", "=", "1", ")", ")", "\n", "out", "+=", "residual", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.pan.PAN.__init__": [[142, 167], ["paddle.Layer.__init__", "functools.partial", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "pan.make_multi_blocks", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "pan.PA", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "pan.PA", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.pan.make_multi_blocks"], ["    ", "def", "__init__", "(", "self", ",", "in_nc", ",", "out_nc", ",", "nf", ",", "unf", ",", "nb", ",", "scale", "=", "4", ")", ":", "\n", "        ", "super", "(", "PAN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# SCPA", "\n", "SCPA_block_f", "=", "functools", ".", "partial", "(", "SCPA", ",", "nf", "=", "nf", ",", "reduction", "=", "2", ")", "\n", "self", ".", "scale", "=", "scale", "\n", "\n", "### first convolution", "\n", "self", ".", "conv_first", "=", "nn", ".", "Conv2D", "(", "in_nc", ",", "nf", ",", "3", ",", "1", ",", "1", ")", "\n", "\n", "### main blocks", "\n", "self", ".", "SCPA_trunk", "=", "make_multi_blocks", "(", "SCPA_block_f", ",", "nb", ")", "\n", "self", ".", "trunk_conv", "=", "nn", ".", "Conv2D", "(", "nf", ",", "nf", ",", "3", ",", "1", ",", "1", ")", "\n", "\n", "#### upsampling", "\n", "self", ".", "upconv1", "=", "nn", ".", "Conv2D", "(", "nf", ",", "unf", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "att1", "=", "PA", "(", "unf", ")", "\n", "self", ".", "HRconv1", "=", "nn", ".", "Conv2D", "(", "unf", ",", "unf", ",", "3", ",", "1", ",", "1", ")", "\n", "\n", "if", "self", ".", "scale", "==", "4", ":", "\n", "            ", "self", ".", "upconv2", "=", "nn", ".", "Conv2D", "(", "unf", ",", "unf", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "att2", "=", "PA", "(", "unf", ")", "\n", "self", ".", "HRconv2", "=", "nn", ".", "Conv2D", "(", "unf", ",", "unf", ",", "3", ",", "1", ",", "1", ")", "\n", "\n", "", "self", ".", "conv_last", "=", "nn", ".", "Conv2D", "(", "unf", ",", "out_nc", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "lrelu", "=", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.pan.PAN.forward": [[168, 197], ["pan.PAN.conv_first", "pan.PAN.trunk_conv", "pan.PAN.conv_last", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "pan.PAN.SCPA_trunk", "pan.PAN.upconv1", "pan.PAN.lrelu", "pan.PAN.lrelu", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "pan.PAN.att1", "pan.PAN.HRconv1", "pan.PAN.upconv1", "pan.PAN.lrelu", "pan.PAN.lrelu", "pan.PAN.upconv2", "pan.PAN.lrelu", "pan.PAN.lrelu", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "pan.PAN.att1", "pan.PAN.HRconv1", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "pan.PAN.att2", "pan.PAN.HRconv2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "fea", "=", "self", ".", "conv_first", "(", "x", ")", "\n", "trunk", "=", "self", ".", "trunk_conv", "(", "self", ".", "SCPA_trunk", "(", "fea", ")", ")", "\n", "fea", "=", "fea", "+", "trunk", "\n", "\n", "if", "self", ".", "scale", "==", "2", "or", "self", ".", "scale", "==", "3", ":", "\n", "            ", "fea", "=", "self", ".", "upconv1", "(", "\n", "F", ".", "interpolate", "(", "fea", ",", "scale_factor", "=", "self", ".", "scale", ",", "mode", "=", "'nearest'", ")", ")", "\n", "fea", "=", "self", ".", "lrelu", "(", "self", ".", "att1", "(", "fea", ")", ")", "\n", "fea", "=", "self", ".", "lrelu", "(", "self", ".", "HRconv1", "(", "fea", ")", ")", "\n", "", "elif", "self", ".", "scale", "==", "4", ":", "\n", "            ", "fea", "=", "self", ".", "upconv1", "(", "\n", "F", ".", "interpolate", "(", "fea", ",", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", ")", "\n", "fea", "=", "self", ".", "lrelu", "(", "self", ".", "att1", "(", "fea", ")", ")", "\n", "fea", "=", "self", ".", "lrelu", "(", "self", ".", "HRconv1", "(", "fea", ")", ")", "\n", "fea", "=", "self", ".", "upconv2", "(", "\n", "F", ".", "interpolate", "(", "fea", ",", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", ")", "\n", "fea", "=", "self", ".", "lrelu", "(", "self", ".", "att2", "(", "fea", ")", ")", "\n", "fea", "=", "self", ".", "lrelu", "(", "self", ".", "HRconv2", "(", "fea", ")", ")", "\n", "\n", "", "out", "=", "self", ".", "conv_last", "(", "fea", ")", "\n", "\n", "ILR", "=", "F", ".", "interpolate", "(", "x", ",", "\n", "scale_factor", "=", "self", ".", "scale", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "False", ")", "\n", "out", "=", "out", "+", "ILR", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.pan.make_multi_blocks": [[25, 39], ["paddle.Sequential", "range", "nn.Sequential.add_sublayer", "func"], "function", ["None"], ["def", "make_multi_blocks", "(", "func", ",", "num_layers", ")", ":", "\n", "    ", "\"\"\"Make layers by stacking the same blocks.\n\n    Args:\n        func (nn.Layer): nn.Layer class for basic block.\n        num_layers (int): number of blocks.\n\n    Returns:\n        nn.Sequential: Stacked blocks in nn.Sequential.\n    \"\"\"", "\n", "Blocks", "=", "nn", ".", "Sequential", "(", ")", "\n", "for", "i", "in", "range", "(", "num_layers", ")", ":", "\n", "        ", "Blocks", ".", "add_sublayer", "(", "'block%d'", "%", "i", ",", "func", "(", ")", ")", "\n", "", "return", "Blocks", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.CALayer.__init__": [[27, 43], ["paddle.Layer.__init__", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Sigmoid", "paddle.Sigmoid", "paddle.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "reduction", "=", "16", ",", "bias_attr", "=", "False", ")", ":", "\n", "        ", "super", "(", "CALayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# global average pooling: feature --> point", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2D", "(", "1", ")", "\n", "# feature channel downscale and upscale --> channel weight", "\n", "self", ".", "conv_du", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "channel", ",", "\n", "channel", "//", "reduction", ",", "\n", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "bias_attr", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2D", "(", "channel", "//", "reduction", ",", "\n", "channel", ",", "\n", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "bias_attr", ")", ",", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.CALayer.forward": [[44, 48], ["mpr.CALayer.avg_pool", "mpr.CALayer.conv_du"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "avg_pool", "(", "x", ")", "\n", "y", "=", "self", ".", "conv_du", "(", "y", ")", "\n", "return", "x", "*", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.CAB.__init__": [[52, 63], ["paddle.Layer.__init__", "modules_body.append", "modules_body.append", "modules_body.append", "mpr.CALayer", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "mpr.conv", "mpr.conv"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv"], ["    ", "def", "__init__", "(", "self", ",", "n_feat", ",", "kernel_size", ",", "reduction", ",", "bias_attr", ",", "act", ")", ":", "\n", "        ", "super", "(", "CAB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "modules_body", "=", "[", "]", "\n", "modules_body", ".", "append", "(", "\n", "conv", "(", "n_feat", ",", "n_feat", ",", "kernel_size", ",", "bias_attr", "=", "bias_attr", ")", ")", "\n", "modules_body", ".", "append", "(", "act", ")", "\n", "modules_body", ".", "append", "(", "\n", "conv", "(", "n_feat", ",", "n_feat", ",", "kernel_size", ",", "bias_attr", "=", "bias_attr", ")", ")", "\n", "\n", "self", ".", "CA", "=", "CALayer", "(", "n_feat", ",", "reduction", ",", "bias_attr", "=", "bias_attr", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "modules_body", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.CAB.forward": [[64, 69], ["mpr.CAB.body", "mpr.CAB.CA"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "self", ".", "body", "(", "x", ")", "\n", "res", "=", "self", ".", "CA", "(", "res", ")", "\n", "res", "+=", "x", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.DownSample.__init__": [[73, 83], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "s_factor", ")", ":", "\n", "        ", "super", "(", "DownSample", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "down", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "0.5", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", ",", "\n", "nn", ".", "Conv2D", "(", "in_channels", ",", "\n", "in_channels", "+", "s_factor", ",", "\n", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.DownSample.forward": [[84, 87], ["mpr.DownSample.down"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "down", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.UpSample.__init__": [[90, 100], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "s_factor", ")", ":", "\n", "        ", "super", "(", "UpSample", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "up", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", ",", "\n", "nn", ".", "Conv2D", "(", "in_channels", "+", "s_factor", ",", "\n", "in_channels", ",", "\n", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.UpSample.forward": [[101, 104], ["mpr.UpSample.up"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "up", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.SkipUpSample.__init__": [[107, 117], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "s_factor", ")", ":", "\n", "        ", "super", "(", "SkipUpSample", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "up", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", ",", "\n", "nn", ".", "Conv2D", "(", "in_channels", "+", "s_factor", ",", "\n", "in_channels", ",", "\n", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.SkipUpSample.forward": [[118, 122], ["mpr.SkipUpSample.up"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "x", "=", "self", ".", "up", "(", "x", ")", "\n", "x", "=", "x", "+", "y", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.Encoder.__init__": [[127, 184], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "mpr.DownSample", "mpr.DownSample", "mpr.CAB", "mpr.CAB", "mpr.CAB", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "range", "range", "range"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_feat", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias_attr", ",", "\n", "scale_unetfeats", ",", "csff", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder_level1", "=", "[", "\n", "CAB", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "bias_attr", "=", "bias_attr", ",", "act", "=", "act", ")", "\n", "for", "_", "in", "range", "(", "2", ")", "\n", "]", "\n", "self", ".", "encoder_level2", "=", "[", "\n", "CAB", "(", "n_feat", "+", "scale_unetfeats", ",", "\n", "kernel_size", ",", "\n", "reduction", ",", "\n", "bias_attr", "=", "bias_attr", ",", "\n", "act", "=", "act", ")", "for", "_", "in", "range", "(", "2", ")", "\n", "]", "\n", "self", ".", "encoder_level3", "=", "[", "\n", "CAB", "(", "n_feat", "+", "(", "scale_unetfeats", "*", "2", ")", ",", "\n", "kernel_size", ",", "\n", "reduction", ",", "\n", "bias_attr", "=", "bias_attr", ",", "\n", "act", "=", "act", ")", "for", "_", "in", "range", "(", "2", ")", "\n", "]", "\n", "\n", "self", ".", "encoder_level1", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "encoder_level1", ")", "\n", "self", ".", "encoder_level2", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "encoder_level2", ")", "\n", "self", ".", "encoder_level3", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "encoder_level3", ")", "\n", "\n", "self", ".", "down12", "=", "DownSample", "(", "n_feat", ",", "scale_unetfeats", ")", "\n", "self", ".", "down23", "=", "DownSample", "(", "n_feat", "+", "scale_unetfeats", ",", "scale_unetfeats", ")", "\n", "\n", "# Cross Stage Feature Fusion (CSFF)", "\n", "if", "csff", ":", "\n", "            ", "self", ".", "csff_enc1", "=", "nn", ".", "Conv2D", "(", "n_feat", ",", "\n", "n_feat", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "bias_attr", ")", "\n", "self", ".", "csff_enc2", "=", "nn", ".", "Conv2D", "(", "n_feat", "+", "scale_unetfeats", ",", "\n", "n_feat", "+", "scale_unetfeats", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "bias_attr", ")", "\n", "self", ".", "csff_enc3", "=", "nn", ".", "Conv2D", "(", "n_feat", "+", "(", "scale_unetfeats", "*", "2", ")", ",", "\n", "n_feat", "+", "(", "scale_unetfeats", "*", "2", ")", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "bias_attr", ")", "\n", "\n", "self", ".", "csff_dec1", "=", "nn", ".", "Conv2D", "(", "n_feat", ",", "\n", "n_feat", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "bias_attr", ")", "\n", "self", ".", "csff_dec2", "=", "nn", ".", "Conv2D", "(", "n_feat", "+", "scale_unetfeats", ",", "\n", "n_feat", "+", "scale_unetfeats", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "bias_attr", ")", "\n", "self", ".", "csff_dec3", "=", "nn", ".", "Conv2D", "(", "n_feat", "+", "(", "scale_unetfeats", "*", "2", ")", ",", "\n", "n_feat", "+", "(", "scale_unetfeats", "*", "2", ")", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "bias_attr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.Encoder.forward": [[185, 206], ["mpr.Encoder.encoder_level1", "mpr.Encoder.down12", "mpr.Encoder.encoder_level2", "mpr.Encoder.down23", "mpr.Encoder.encoder_level3", "mpr.Encoder.csff_dec1", "mpr.Encoder.csff_dec2", "mpr.Encoder.csff_dec3", "mpr.Encoder.csff_enc1", "mpr.Encoder.csff_enc2", "mpr.Encoder.csff_enc3"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "encoder_outs", "=", "None", ",", "decoder_outs", "=", "None", ")", ":", "\n", "        ", "enc1", "=", "self", ".", "encoder_level1", "(", "x", ")", "\n", "if", "(", "encoder_outs", "is", "not", "None", ")", "and", "(", "decoder_outs", "is", "not", "None", ")", ":", "\n", "            ", "enc1", "=", "enc1", "+", "self", ".", "csff_enc1", "(", "encoder_outs", "[", "0", "]", ")", "+", "self", ".", "csff_dec1", "(", "\n", "decoder_outs", "[", "0", "]", ")", "\n", "\n", "", "x", "=", "self", ".", "down12", "(", "enc1", ")", "\n", "\n", "enc2", "=", "self", ".", "encoder_level2", "(", "x", ")", "\n", "if", "(", "encoder_outs", "is", "not", "None", ")", "and", "(", "decoder_outs", "is", "not", "None", ")", ":", "\n", "            ", "enc2", "=", "enc2", "+", "self", ".", "csff_enc2", "(", "encoder_outs", "[", "1", "]", ")", "+", "self", ".", "csff_dec2", "(", "\n", "decoder_outs", "[", "1", "]", ")", "\n", "\n", "", "x", "=", "self", ".", "down23", "(", "enc2", ")", "\n", "\n", "enc3", "=", "self", ".", "encoder_level3", "(", "x", ")", "\n", "if", "(", "encoder_outs", "is", "not", "None", ")", "and", "(", "decoder_outs", "is", "not", "None", ")", ":", "\n", "            ", "enc3", "=", "enc3", "+", "self", ".", "csff_enc3", "(", "encoder_outs", "[", "2", "]", ")", "+", "self", ".", "csff_dec3", "(", "\n", "decoder_outs", "[", "2", "]", ")", "\n", "\n", "", "return", "[", "enc1", ",", "enc2", ",", "enc3", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.Decoder.__init__": [[209, 249], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "mpr.CAB", "mpr.CAB", "mpr.SkipUpSample", "mpr.SkipUpSample", "mpr.CAB", "mpr.CAB", "mpr.CAB", "range", "range", "range"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_feat", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias_attr", ",", "\n", "scale_unetfeats", ")", ":", "\n", "        ", "super", "(", "Decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "decoder_level1", "=", "[", "\n", "CAB", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "bias_attr", "=", "bias_attr", ",", "act", "=", "act", ")", "\n", "for", "_", "in", "range", "(", "2", ")", "\n", "]", "\n", "self", ".", "decoder_level2", "=", "[", "\n", "CAB", "(", "n_feat", "+", "scale_unetfeats", ",", "\n", "kernel_size", ",", "\n", "reduction", ",", "\n", "bias_attr", "=", "bias_attr", ",", "\n", "act", "=", "act", ")", "for", "_", "in", "range", "(", "2", ")", "\n", "]", "\n", "self", ".", "decoder_level3", "=", "[", "\n", "CAB", "(", "n_feat", "+", "(", "scale_unetfeats", "*", "2", ")", ",", "\n", "kernel_size", ",", "\n", "reduction", ",", "\n", "bias_attr", "=", "bias_attr", ",", "\n", "act", "=", "act", ")", "for", "_", "in", "range", "(", "2", ")", "\n", "]", "\n", "\n", "self", ".", "decoder_level1", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "decoder_level1", ")", "\n", "self", ".", "decoder_level2", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "decoder_level2", ")", "\n", "self", ".", "decoder_level3", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "decoder_level3", ")", "\n", "\n", "self", ".", "skip_attn1", "=", "CAB", "(", "n_feat", ",", "\n", "kernel_size", ",", "\n", "reduction", ",", "\n", "bias_attr", "=", "bias_attr", ",", "\n", "act", "=", "act", ")", "\n", "self", ".", "skip_attn2", "=", "CAB", "(", "n_feat", "+", "scale_unetfeats", ",", "\n", "kernel_size", ",", "\n", "reduction", ",", "\n", "bias_attr", "=", "bias_attr", ",", "\n", "act", "=", "act", ")", "\n", "\n", "self", ".", "up21", "=", "SkipUpSample", "(", "n_feat", ",", "scale_unetfeats", ")", "\n", "self", ".", "up32", "=", "SkipUpSample", "(", "n_feat", "+", "scale_unetfeats", ",", "scale_unetfeats", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.Decoder.forward": [[250, 261], ["mpr.Decoder.decoder_level3", "mpr.Decoder.up32", "mpr.Decoder.decoder_level2", "mpr.Decoder.up21", "mpr.Decoder.decoder_level1", "mpr.Decoder.skip_attn2", "mpr.Decoder.skip_attn1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "outs", ")", ":", "\n", "        ", "enc1", ",", "enc2", ",", "enc3", "=", "outs", "\n", "dec3", "=", "self", ".", "decoder_level3", "(", "enc3", ")", "\n", "\n", "x", "=", "self", ".", "up32", "(", "dec3", ",", "self", ".", "skip_attn2", "(", "enc2", ")", ")", "\n", "dec2", "=", "self", ".", "decoder_level2", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "up21", "(", "dec2", ",", "self", ".", "skip_attn1", "(", "enc1", ")", ")", "\n", "dec1", "=", "self", ".", "decoder_level1", "(", "x", ")", "\n", "\n", "return", "[", "dec1", ",", "dec2", ",", "dec3", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.ORB.__init__": [[265, 274], ["paddle.Layer.__init__", "modules_body.append", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "mpr.CAB", "mpr.conv", "range"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv"], ["    ", "def", "__init__", "(", "self", ",", "n_feat", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias_attr", ",", "num_cab", ")", ":", "\n", "        ", "super", "(", "ORB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "modules_body", "=", "[", "]", "\n", "modules_body", "=", "[", "\n", "CAB", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "bias_attr", "=", "bias_attr", ",", "act", "=", "act", ")", "\n", "for", "_", "in", "range", "(", "num_cab", ")", "\n", "]", "\n", "modules_body", ".", "append", "(", "conv", "(", "n_feat", ",", "n_feat", ",", "kernel_size", ")", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "modules_body", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.ORB.forward": [[275, 279], ["mpr.ORB.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "self", ".", "body", "(", "x", ")", "\n", "res", "+=", "x", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.ORSNet.__init__": [[282, 328], ["paddle.Layer.__init__", "mpr.ORB", "mpr.ORB", "mpr.ORB", "mpr.UpSample", "mpr.UpSample", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "mpr.UpSample", "mpr.UpSample", "mpr.UpSample", "mpr.UpSample"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_feat", ",", "scale_orsnetfeats", ",", "kernel_size", ",", "reduction", ",", "act", ",", "\n", "bias_attr", ",", "scale_unetfeats", ",", "num_cab", ")", ":", "\n", "        ", "super", "(", "ORSNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "orb1", "=", "ORB", "(", "n_feat", "+", "scale_orsnetfeats", ",", "kernel_size", ",", "reduction", ",", "act", ",", "\n", "bias_attr", ",", "num_cab", ")", "\n", "self", ".", "orb2", "=", "ORB", "(", "n_feat", "+", "scale_orsnetfeats", ",", "kernel_size", ",", "reduction", ",", "act", ",", "\n", "bias_attr", ",", "num_cab", ")", "\n", "self", ".", "orb3", "=", "ORB", "(", "n_feat", "+", "scale_orsnetfeats", ",", "kernel_size", ",", "reduction", ",", "act", ",", "\n", "bias_attr", ",", "num_cab", ")", "\n", "\n", "self", ".", "up_enc1", "=", "UpSample", "(", "n_feat", ",", "scale_unetfeats", ")", "\n", "self", ".", "up_dec1", "=", "UpSample", "(", "n_feat", ",", "scale_unetfeats", ")", "\n", "\n", "self", ".", "up_enc2", "=", "nn", ".", "Sequential", "(", "\n", "UpSample", "(", "n_feat", "+", "scale_unetfeats", ",", "scale_unetfeats", ")", ",", "\n", "UpSample", "(", "n_feat", ",", "scale_unetfeats", ")", ")", "\n", "self", ".", "up_dec2", "=", "nn", ".", "Sequential", "(", "\n", "UpSample", "(", "n_feat", "+", "scale_unetfeats", ",", "scale_unetfeats", ")", ",", "\n", "UpSample", "(", "n_feat", ",", "scale_unetfeats", ")", ")", "\n", "\n", "self", ".", "conv_enc1", "=", "nn", ".", "Conv2D", "(", "n_feat", ",", "\n", "n_feat", "+", "scale_orsnetfeats", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "bias_attr", ")", "\n", "self", ".", "conv_enc2", "=", "nn", ".", "Conv2D", "(", "n_feat", ",", "\n", "n_feat", "+", "scale_orsnetfeats", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "bias_attr", ")", "\n", "self", ".", "conv_enc3", "=", "nn", ".", "Conv2D", "(", "n_feat", ",", "\n", "n_feat", "+", "scale_orsnetfeats", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "bias_attr", ")", "\n", "\n", "self", ".", "conv_dec1", "=", "nn", ".", "Conv2D", "(", "n_feat", ",", "\n", "n_feat", "+", "scale_orsnetfeats", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "bias_attr", ")", "\n", "self", ".", "conv_dec2", "=", "nn", ".", "Conv2D", "(", "n_feat", ",", "\n", "n_feat", "+", "scale_orsnetfeats", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "bias_attr", ")", "\n", "self", ".", "conv_dec3", "=", "nn", ".", "Conv2D", "(", "n_feat", ",", "\n", "n_feat", "+", "scale_orsnetfeats", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias_attr", "=", "bias_attr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.ORSNet.forward": [[329, 343], ["mpr.ORSNet.orb1", "mpr.ORSNet.orb2", "mpr.ORSNet.orb3", "mpr.ORSNet.conv_dec1", "mpr.ORSNet.conv_dec2", "mpr.ORSNet.conv_dec3", "mpr.ORSNet.conv_enc1", "mpr.ORSNet.conv_enc2", "mpr.ORSNet.up_dec1", "mpr.ORSNet.conv_enc3", "mpr.ORSNet.up_dec2", "mpr.ORSNet.up_enc1", "mpr.ORSNet.up_enc2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "encoder_outs", ",", "decoder_outs", ")", ":", "\n", "        ", "x", "=", "self", ".", "orb1", "(", "x", ")", "\n", "x", "=", "x", "+", "self", ".", "conv_enc1", "(", "encoder_outs", "[", "0", "]", ")", "+", "self", ".", "conv_dec1", "(", "\n", "decoder_outs", "[", "0", "]", ")", "\n", "\n", "x", "=", "self", ".", "orb2", "(", "x", ")", "\n", "x", "=", "x", "+", "self", ".", "conv_enc2", "(", "self", ".", "up_enc1", "(", "encoder_outs", "[", "1", "]", ")", ")", "+", "self", ".", "conv_dec2", "(", "\n", "self", ".", "up_dec1", "(", "decoder_outs", "[", "1", "]", ")", ")", "\n", "\n", "x", "=", "self", ".", "orb3", "(", "x", ")", "\n", "x", "=", "x", "+", "self", ".", "conv_enc3", "(", "self", ".", "up_enc2", "(", "encoder_outs", "[", "2", "]", ")", ")", "+", "self", ".", "conv_dec3", "(", "\n", "self", ".", "up_dec2", "(", "decoder_outs", "[", "2", "]", ")", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.SAM.__init__": [[347, 352], ["paddle.Layer.__init__", "mpr.conv", "mpr.conv", "mpr.conv"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv"], ["    ", "def", "__init__", "(", "self", ",", "n_feat", ",", "kernel_size", ",", "bias_attr", ")", ":", "\n", "        ", "super", "(", "SAM", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv", "(", "n_feat", ",", "n_feat", ",", "kernel_size", ",", "bias_attr", "=", "bias_attr", ")", "\n", "self", ".", "conv2", "=", "conv", "(", "n_feat", ",", "3", ",", "kernel_size", ",", "bias_attr", "=", "bias_attr", ")", "\n", "self", ".", "conv3", "=", "conv", "(", "3", ",", "n_feat", ",", "kernel_size", ",", "bias_attr", "=", "bias_attr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.SAM.forward": [[353, 360], ["mpr.SAM.conv1", "paddle.sigmoid", "paddle.sigmoid", "paddle.sigmoid", "mpr.SAM.conv2", "mpr.SAM.conv3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "x_img", ")", ":", "\n", "        ", "x1", "=", "self", ".", "conv1", "(", "x", ")", "\n", "img", "=", "self", ".", "conv2", "(", "x", ")", "+", "x_img", "\n", "x2", "=", "F", ".", "sigmoid", "(", "self", ".", "conv3", "(", "img", ")", ")", "\n", "x1", "=", "x1", "*", "x2", "\n", "x1", "=", "x1", "+", "x", "\n", "return", "x1", ",", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.MPRNet.__init__": [[364, 426], ["paddle.Layer.__init__", "paddle.PReLU", "paddle.PReLU", "paddle.PReLU", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "mpr.Encoder", "mpr.Decoder", "mpr.Encoder", "mpr.Decoder", "mpr.ORSNet", "mpr.SAM", "mpr.SAM", "mpr.conv", "mpr.conv", "mpr.conv", "mpr.conv", "mpr.CAB", "mpr.conv", "mpr.CAB", "mpr.conv", "mpr.CAB"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_c", "=", "3", ",", "\n", "out_c", "=", "3", ",", "\n", "n_feat", "=", "96", ",", "\n", "scale_unetfeats", "=", "48", ",", "\n", "scale_orsnetfeats", "=", "32", ",", "\n", "num_cab", "=", "8", ",", "\n", "kernel_size", "=", "3", ",", "\n", "reduction", "=", "4", ",", "\n", "bias_attr", "=", "False", ")", ":", "\n", "        ", "super", "(", "MPRNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "act", "=", "nn", ".", "PReLU", "(", ")", "\n", "self", ".", "shallow_feat1", "=", "nn", ".", "Sequential", "(", "\n", "conv", "(", "in_c", ",", "n_feat", ",", "kernel_size", ",", "bias_attr", "=", "bias_attr", ")", ",", "\n", "CAB", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "bias_attr", "=", "bias_attr", ",", "act", "=", "act", ")", ")", "\n", "self", ".", "shallow_feat2", "=", "nn", ".", "Sequential", "(", "\n", "conv", "(", "in_c", ",", "n_feat", ",", "kernel_size", ",", "bias_attr", "=", "bias_attr", ")", ",", "\n", "CAB", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "bias_attr", "=", "bias_attr", ",", "act", "=", "act", ")", ")", "\n", "self", ".", "shallow_feat3", "=", "nn", ".", "Sequential", "(", "\n", "conv", "(", "in_c", ",", "n_feat", ",", "kernel_size", ",", "bias_attr", "=", "bias_attr", ")", ",", "\n", "CAB", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "bias_attr", "=", "bias_attr", ",", "act", "=", "act", ")", ")", "\n", "\n", "# Cross Stage Feature Fusion (CSFF)", "\n", "self", ".", "stage1_encoder", "=", "Encoder", "(", "n_feat", ",", "\n", "kernel_size", ",", "\n", "reduction", ",", "\n", "act", ",", "\n", "bias_attr", ",", "\n", "scale_unetfeats", ",", "\n", "csff", "=", "False", ")", "\n", "self", ".", "stage1_decoder", "=", "Decoder", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "act", ",", "\n", "bias_attr", ",", "scale_unetfeats", ")", "\n", "\n", "self", ".", "stage2_encoder", "=", "Encoder", "(", "n_feat", ",", "\n", "kernel_size", ",", "\n", "reduction", ",", "\n", "act", ",", "\n", "bias_attr", ",", "\n", "scale_unetfeats", ",", "\n", "csff", "=", "True", ")", "\n", "self", ".", "stage2_decoder", "=", "Decoder", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "act", ",", "\n", "bias_attr", ",", "scale_unetfeats", ")", "\n", "\n", "self", ".", "stage3_orsnet", "=", "ORSNet", "(", "n_feat", ",", "scale_orsnetfeats", ",", "kernel_size", ",", "\n", "reduction", ",", "act", ",", "bias_attr", ",", "scale_unetfeats", ",", "\n", "num_cab", ")", "\n", "\n", "self", ".", "sam12", "=", "SAM", "(", "n_feat", ",", "kernel_size", "=", "1", ",", "bias_attr", "=", "bias_attr", ")", "\n", "self", ".", "sam23", "=", "SAM", "(", "n_feat", ",", "kernel_size", "=", "1", ",", "bias_attr", "=", "bias_attr", ")", "\n", "\n", "self", ".", "concat12", "=", "conv", "(", "n_feat", "*", "2", ",", "\n", "n_feat", ",", "\n", "kernel_size", ",", "\n", "bias_attr", "=", "bias_attr", ")", "\n", "self", ".", "concat23", "=", "conv", "(", "n_feat", "*", "2", ",", "\n", "n_feat", "+", "scale_orsnetfeats", ",", "\n", "kernel_size", ",", "\n", "bias_attr", "=", "bias_attr", ")", "\n", "self", ".", "tail", "=", "conv", "(", "n_feat", "+", "scale_orsnetfeats", ",", "\n", "out_c", ",", "\n", "kernel_size", ",", "\n", "bias_attr", "=", "bias_attr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.MPRNet.forward": [[427, 515], ["mpr.MPRNet.shallow_feat1", "mpr.MPRNet.shallow_feat1", "mpr.MPRNet.shallow_feat1", "mpr.MPRNet.shallow_feat1", "mpr.MPRNet.stage1_encoder", "mpr.MPRNet.stage1_encoder", "mpr.MPRNet.stage1_encoder", "mpr.MPRNet.stage1_encoder", "mpr.MPRNet.stage1_decoder", "mpr.MPRNet.stage1_decoder", "mpr.MPRNet.sam12", "mpr.MPRNet.sam12", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "mpr.MPRNet.shallow_feat2", "mpr.MPRNet.shallow_feat2", "mpr.MPRNet.concat12", "mpr.MPRNet.concat12", "mpr.MPRNet.stage2_encoder", "mpr.MPRNet.stage2_encoder", "mpr.MPRNet.stage2_decoder", "mpr.MPRNet.sam23", "mpr.MPRNet.shallow_feat3", "mpr.MPRNet.concat23", "mpr.MPRNet.stage3_orsnet", "mpr.MPRNet.tail", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "zip", "zip", "zip", "int", "int", "int", "int", "int", "int"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x3_img", ")", ":", "\n", "# Original-resolution Image for Stage 3", "\n", "        ", "H", "=", "x3_img", ".", "shape", "[", "2", "]", "\n", "W", "=", "x3_img", ".", "shape", "[", "3", "]", "\n", "\n", "# Multi-Patch Hierarchy: Split Image into four non-overlapping patches", "\n", "\n", "# Two Patches for Stage 2", "\n", "x2top_img", "=", "x3_img", "[", ":", ",", ":", ",", "0", ":", "int", "(", "H", "/", "2", ")", ",", ":", "]", "\n", "x2bot_img", "=", "x3_img", "[", ":", ",", ":", ",", "int", "(", "H", "/", "2", ")", ":", "H", ",", ":", "]", "\n", "\n", "# Four Patches for Stage 1", "\n", "x1ltop_img", "=", "x2top_img", "[", ":", ",", ":", ",", ":", ",", "0", ":", "int", "(", "W", "/", "2", ")", "]", "\n", "x1rtop_img", "=", "x2top_img", "[", ":", ",", ":", ",", ":", ",", "int", "(", "W", "/", "2", ")", ":", "W", "]", "\n", "x1lbot_img", "=", "x2bot_img", "[", ":", ",", ":", ",", ":", ",", "0", ":", "int", "(", "W", "/", "2", ")", "]", "\n", "x1rbot_img", "=", "x2bot_img", "[", ":", ",", ":", ",", ":", ",", "int", "(", "W", "/", "2", ")", ":", "W", "]", "\n", "\n", "##-------------------------------------------", "\n", "##-------------- Stage 1---------------------", "\n", "##-------------------------------------------", "\n", "## Compute Shallow Features", "\n", "x1ltop", "=", "self", ".", "shallow_feat1", "(", "x1ltop_img", ")", "\n", "x1rtop", "=", "self", ".", "shallow_feat1", "(", "x1rtop_img", ")", "\n", "x1lbot", "=", "self", ".", "shallow_feat1", "(", "x1lbot_img", ")", "\n", "x1rbot", "=", "self", ".", "shallow_feat1", "(", "x1rbot_img", ")", "\n", "\n", "## Process features of all 4 patches with Encoder of Stage 1", "\n", "feat1_ltop", "=", "self", ".", "stage1_encoder", "(", "x1ltop", ")", "\n", "feat1_rtop", "=", "self", ".", "stage1_encoder", "(", "x1rtop", ")", "\n", "feat1_lbot", "=", "self", ".", "stage1_encoder", "(", "x1lbot", ")", "\n", "feat1_rbot", "=", "self", ".", "stage1_encoder", "(", "x1rbot", ")", "\n", "\n", "## Concat deep features", "\n", "feat1_top", "=", "[", "\n", "paddle", ".", "concat", "(", "(", "k", ",", "v", ")", ",", "3", ")", "for", "k", ",", "v", "in", "zip", "(", "feat1_ltop", ",", "feat1_rtop", ")", "\n", "]", "\n", "feat1_bot", "=", "[", "\n", "paddle", ".", "concat", "(", "(", "k", ",", "v", ")", ",", "3", ")", "for", "k", ",", "v", "in", "zip", "(", "feat1_lbot", ",", "feat1_rbot", ")", "\n", "]", "\n", "\n", "## Pass features through Decoder of Stage 1", "\n", "res1_top", "=", "self", ".", "stage1_decoder", "(", "feat1_top", ")", "\n", "res1_bot", "=", "self", ".", "stage1_decoder", "(", "feat1_bot", ")", "\n", "\n", "## Apply Supervised Attention Module (SAM)", "\n", "x2top_samfeats", ",", "stage1_img_top", "=", "self", ".", "sam12", "(", "res1_top", "[", "0", "]", ",", "x2top_img", ")", "\n", "x2bot_samfeats", ",", "stage1_img_bot", "=", "self", ".", "sam12", "(", "res1_bot", "[", "0", "]", ",", "x2bot_img", ")", "\n", "\n", "## Output image at Stage 1", "\n", "stage1_img", "=", "paddle", ".", "concat", "(", "[", "stage1_img_top", ",", "stage1_img_bot", "]", ",", "2", ")", "\n", "##-------------------------------------------", "\n", "##-------------- Stage 2---------------------", "\n", "##-------------------------------------------", "\n", "## Compute Shallow Features", "\n", "x2top", "=", "self", ".", "shallow_feat2", "(", "x2top_img", ")", "\n", "x2bot", "=", "self", ".", "shallow_feat2", "(", "x2bot_img", ")", "\n", "\n", "## Concatenate SAM features of Stage 1 with shallow features of Stage 2", "\n", "x2top_cat", "=", "self", ".", "concat12", "(", "paddle", ".", "concat", "(", "[", "x2top", ",", "x2top_samfeats", "]", ",", "1", ")", ")", "\n", "x2bot_cat", "=", "self", ".", "concat12", "(", "paddle", ".", "concat", "(", "[", "x2bot", ",", "x2bot_samfeats", "]", ",", "1", ")", ")", "\n", "\n", "## Process features of both patches with Encoder of Stage 2", "\n", "feat2_top", "=", "self", ".", "stage2_encoder", "(", "x2top_cat", ",", "feat1_top", ",", "res1_top", ")", "\n", "feat2_bot", "=", "self", ".", "stage2_encoder", "(", "x2bot_cat", ",", "feat1_bot", ",", "res1_bot", ")", "\n", "\n", "## Concat deep features", "\n", "feat2", "=", "[", "paddle", ".", "concat", "(", "(", "k", ",", "v", ")", ",", "2", ")", "for", "k", ",", "v", "in", "zip", "(", "feat2_top", ",", "feat2_bot", ")", "]", "\n", "\n", "## Pass features through Decoder of Stage 2", "\n", "res2", "=", "self", ".", "stage2_decoder", "(", "feat2", ")", "\n", "\n", "## Apply SAM", "\n", "x3_samfeats", ",", "stage2_img", "=", "self", ".", "sam23", "(", "res2", "[", "0", "]", ",", "x3_img", ")", "\n", "\n", "##-------------------------------------------", "\n", "##-------------- Stage 3---------------------", "\n", "##-------------------------------------------", "\n", "## Compute Shallow Features", "\n", "x3", "=", "self", ".", "shallow_feat3", "(", "x3_img", ")", "\n", "\n", "## Concatenate SAM features of Stage 2 with shallow features of Stage 3", "\n", "x3_cat", "=", "self", ".", "concat23", "(", "paddle", ".", "concat", "(", "[", "x3", ",", "x3_samfeats", "]", ",", "1", ")", ")", "\n", "\n", "x3_cat", "=", "self", ".", "stage3_orsnet", "(", "x3_cat", ",", "feat2", ",", "res2", ")", "\n", "\n", "stage3_img", "=", "self", ".", "tail", "(", "x3_cat", ")", "\n", "\n", "return", "[", "stage3_img", "+", "x3_img", ",", "stage2_img", ",", "stage1_img", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv": [[16, 23], ["paddle.Conv2D"], "function", ["None"], ["def", "conv", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "bias_attr", "=", "False", ",", "stride", "=", "1", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2D", "(", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "padding", "=", "(", "kernel_size", "//", "2", ")", ",", "\n", "bias_attr", "=", "bias_attr", ",", "\n", "stride", "=", "stride", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.dcgenerator.DCGenerator.__init__": [[34, 124], ["paddle.Layer.__init__", "modules.norm.build_norm_layer", "range", "paddle.Sequential", "paddle.Sequential", "type", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.Tanh", "paddle.Tanh", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.nn.BatchNorm2D", "paddle.nn.BatchNorm2D", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "modules.norm.build_norm_layer.", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.nn.BatchNorm2D", "paddle.nn.BatchNorm2D", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "modules.norm.build_norm_layer.", "paddle.ReLU", "paddle.ReLU", "int", "int"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.norm.build_norm_layer"], ["def", "__init__", "(", "self", ",", "\n", "input_nz", ",", "\n", "input_nc", ",", "\n", "output_nc", ",", "\n", "ngf", "=", "64", ",", "\n", "norm_type", "=", "'batch'", ",", "\n", "padding_type", "=", "'reflect'", ")", ":", "\n", "        ", "\"\"\"Construct a DCGenerator generator\n\n        Args:\n            input_nz (int): the number of dimension in input noise\n            input_nc (int): the number of channels in input images\n            output_nc (int): the number of channels in output images\n            ngf (int): the number of filters in the last conv layer\n            norm_layer: normalization layer\n            padding_type (str): the name of padding layer in conv layers: reflect | replicate | zero\n        \"\"\"", "\n", "super", "(", "DCGenerator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "norm_layer", "=", "build_norm_layer", "(", "norm_type", ")", "\n", "if", "type", "(", "norm_layer", ")", "==", "functools", ".", "partial", ":", "\n", "            ", "use_bias", "=", "norm_layer", ".", "func", "==", "nn", ".", "BatchNorm2D", "\n", "", "else", ":", "\n", "            ", "use_bias", "=", "norm_layer", "==", "nn", ".", "BatchNorm2D", "\n", "\n", "", "mult", "=", "8", "\n", "n_downsampling", "=", "4", "\n", "\n", "if", "norm_type", "==", "'batch'", ":", "\n", "            ", "model", "=", "[", "\n", "nn", ".", "Conv2DTranspose", "(", "input_nz", ",", "\n", "ngf", "*", "mult", ",", "\n", "kernel_size", "=", "4", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "use_bias", ")", ",", "\n", "BatchNorm2D", "(", "ngf", "*", "mult", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", "\n", "", "else", ":", "\n", "            ", "model", "=", "[", "\n", "nn", ".", "Conv2DTranspose", "(", "input_nz", ",", "\n", "ngf", "*", "mult", ",", "\n", "kernel_size", "=", "4", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "use_bias", ")", ",", "\n", "norm_layer", "(", "ngf", "*", "mult", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", "\n", "\n", "# add upsampling layers", "\n", "", "for", "i", "in", "range", "(", "1", ",", "n_downsampling", ")", ":", "\n", "            ", "mult", "=", "2", "**", "(", "n_downsampling", "-", "i", ")", "\n", "output_size", "=", "2", "**", "(", "i", "+", "2", ")", "\n", "if", "norm_type", "==", "'batch'", ":", "\n", "                ", "model", "+=", "[", "\n", "nn", ".", "Conv2DTranspose", "(", "ngf", "*", "mult", ",", "\n", "ngf", "*", "mult", "//", "2", ",", "\n", "kernel_size", "=", "4", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "use_bias", ")", ",", "\n", "BatchNorm2D", "(", "ngf", "*", "mult", "//", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", "\n", "", "else", ":", "\n", "                ", "model", "+=", "[", "\n", "nn", ".", "Conv2DTranspose", "(", "ngf", "*", "mult", ",", "\n", "int", "(", "ngf", "*", "mult", "//", "2", ")", ",", "\n", "kernel_size", "=", "4", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "use_bias", ")", ",", "\n", "norm_layer", "(", "int", "(", "ngf", "*", "mult", "//", "2", ")", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", "\n", "\n", "", "", "output_size", "=", "2", "**", "(", "6", ")", "\n", "model", "+=", "[", "\n", "nn", ".", "Conv2DTranspose", "(", "ngf", ",", "\n", "output_nc", ",", "\n", "kernel_size", "=", "4", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "use_bias", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", "\n", "]", "\n", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.dcgenerator.DCGenerator.forward": [[125, 128], ["dcgenerator.DCGenerator.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"Standard forward\"\"\"", "\n", "return", "self", ".", "model", "(", "x", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr_plus_plus.BasicVSRPlusPlus.__init__": [[48, 109], ["paddle.Layer.__init__", "basicvsr.SPyNet", "utils.download.get_path_from_url", "basicvsr_plus_plus.BasicVSRPlusPlus.spynet.set_state_dict", "basicvsr.SecondOrderDeformableAlignment", "basicvsr.SecondOrderDeformableAlignment", "basicvsr.SecondOrderDeformableAlignment", "basicvsr.SecondOrderDeformableAlignment", "basicvsr.ResidualBlocksWithInputConv", "basicvsr.ResidualBlocksWithInputConv", "basicvsr.ResidualBlocksWithInputConv", "basicvsr.ResidualBlocksWithInputConv", "basicvsr.ResidualBlocksWithInputConv", "basicvsr.PixelShufflePack", "basicvsr.PixelShufflePack", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "basicvsr.ResidualBlocksWithInputConv", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "basicvsr.ResidualBlocksWithInputConv"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["def", "__init__", "(", "self", ",", "mid_channels", "=", "64", ",", "num_blocks", "=", "7", ",", "is_low_res_input", "=", "True", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "mid_channels", "=", "mid_channels", "\n", "self", ".", "is_low_res_input", "=", "is_low_res_input", "\n", "\n", "# optical flow", "\n", "self", ".", "spynet", "=", "SPyNet", "(", ")", "\n", "weight_path", "=", "get_path_from_url", "(", "\n", "'https://paddlegan.bj.bcebos.com/models/spynet.pdparams'", ")", "\n", "self", ".", "spynet", ".", "set_state_dict", "(", "paddle", ".", "load", "(", "weight_path", ")", ")", "\n", "\n", "# feature extraction module", "\n", "if", "is_low_res_input", ":", "\n", "            ", "self", ".", "feat_extract", "=", "ResidualBlocksWithInputConv", "(", "3", ",", "mid_channels", ",", "5", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "feat_extract", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "3", ",", "mid_channels", ",", "3", ",", "2", ",", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.1", ")", ",", "\n", "nn", ".", "Conv2D", "(", "mid_channels", ",", "mid_channels", ",", "3", ",", "2", ",", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.1", ")", ",", "\n", "ResidualBlocksWithInputConv", "(", "mid_channels", ",", "mid_channels", ",", "5", ")", ")", "\n", "\n", "# propagation branches", "\n", "", "self", ".", "deform_align_backward_1", "=", "SecondOrderDeformableAlignment", "(", "\n", "2", "*", "mid_channels", ",", "mid_channels", ",", "3", ",", "padding", "=", "1", ",", "deformable_groups", "=", "16", ")", "\n", "self", ".", "deform_align_forward_1", "=", "SecondOrderDeformableAlignment", "(", "\n", "2", "*", "mid_channels", ",", "mid_channels", ",", "3", ",", "padding", "=", "1", ",", "deformable_groups", "=", "16", ")", "\n", "self", ".", "deform_align_backward_2", "=", "SecondOrderDeformableAlignment", "(", "\n", "2", "*", "mid_channels", ",", "mid_channels", ",", "3", ",", "padding", "=", "1", ",", "deformable_groups", "=", "16", ")", "\n", "self", ".", "deform_align_forward_2", "=", "SecondOrderDeformableAlignment", "(", "\n", "2", "*", "mid_channels", ",", "mid_channels", ",", "3", ",", "padding", "=", "1", ",", "deformable_groups", "=", "16", ")", "\n", "self", ".", "backbone_backward_1", "=", "ResidualBlocksWithInputConv", "(", "\n", "2", "*", "mid_channels", ",", "mid_channels", ",", "num_blocks", ")", "\n", "self", ".", "backbone_forward_1", "=", "ResidualBlocksWithInputConv", "(", "\n", "3", "*", "mid_channels", ",", "mid_channels", ",", "num_blocks", ")", "\n", "self", ".", "backbone_backward_2", "=", "ResidualBlocksWithInputConv", "(", "\n", "4", "*", "mid_channels", ",", "mid_channels", ",", "num_blocks", ")", "\n", "self", ".", "backbone_forward_2", "=", "ResidualBlocksWithInputConv", "(", "\n", "5", "*", "mid_channels", ",", "mid_channels", ",", "num_blocks", ")", "\n", "\n", "# upsampling module", "\n", "self", ".", "reconstruction", "=", "ResidualBlocksWithInputConv", "(", "\n", "5", "*", "mid_channels", ",", "mid_channels", ",", "5", ")", "\n", "self", ".", "upsample1", "=", "PixelShufflePack", "(", "mid_channels", ",", "\n", "mid_channels", ",", "\n", "2", ",", "\n", "upsample_kernel", "=", "3", ")", "\n", "self", ".", "upsample2", "=", "PixelShufflePack", "(", "mid_channels", ",", "\n", "64", ",", "\n", "2", ",", "\n", "upsample_kernel", "=", "3", ")", "\n", "self", ".", "conv_hr", "=", "nn", ".", "Conv2D", "(", "64", ",", "64", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "conv_last", "=", "nn", ".", "Conv2D", "(", "64", ",", "3", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "img_upsample", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "4", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "False", ")", "\n", "\n", "# activation function", "\n", "self", ".", "lrelu", "=", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr_plus_plus.BasicVSRPlusPlus.check_if_mirror_extended": [[110, 125], ["paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.flip", "paddle.flip", "paddle.flip", "paddle.flip", "paddle.flip", "paddle.flip", "paddle.flip", "paddle.flip", "paddle.flip", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm"], ["", "def", "check_if_mirror_extended", "(", "self", ",", "lrs", ")", ":", "\n", "        ", "\"\"\"Check whether the input is a mirror-extended sequence.\n        If mirror-extended, the i-th (i=0, ..., t-1) frame is equal to the\n        (t-1-i)-th frame.\n        Args:\n            lqs (tensor): Input LR images with shape (n, t, c, h, w)\n        \"\"\"", "\n", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "            ", "self", ".", "is_mirror_extended", "=", "False", "\n", "if", "lrs", ".", "shape", "[", "1", "]", "%", "2", "==", "0", ":", "\n", "                ", "lrs_1", ",", "lrs_2", "=", "paddle", ".", "chunk", "(", "lrs", ",", "2", ",", "axis", "=", "1", ")", "\n", "lrs_2", "=", "paddle", ".", "flip", "(", "lrs_2", ",", "[", "1", "]", ")", "\n", "if", "paddle", ".", "norm", "(", "lrs_1", "-", "lrs_2", ")", "==", "0", ":", "\n", "                    ", "self", ".", "is_mirror_extended", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr_plus_plus.BasicVSRPlusPlus.compute_flow": [[126, 153], ["lrs[].reshape", "lrs[].reshape", "basicvsr_plus_plus.BasicVSRPlusPlus.spynet().reshape", "basicvsr_plus_plus.BasicVSRPlusPlus.flip", "basicvsr_plus_plus.BasicVSRPlusPlus.spynet().reshape", "basicvsr_plus_plus.BasicVSRPlusPlus.spynet", "basicvsr_plus_plus.BasicVSRPlusPlus.spynet"], "methods", ["None"], ["", "", "", "", "def", "compute_flow", "(", "self", ",", "lrs", ")", ":", "\n", "        ", "\"\"\"Compute optical flow using SPyNet for feature alignment.\n        Note that if the input is an mirror-extended sequence, 'flows_forward'\n        is not needed, since it is equal to 'flows_backward.flip(1)'.\n        Args:\n            lqs (tensor): Input LR images with shape (n, t, c, h, w)\n        Return:\n            tuple(Tensor): Optical flow. 'flows_forward' corresponds to the\n                flows used for forward-time propagation (current to previous).\n                'flows_backward' corresponds to the flows used for\n                backward-time propagation (current to next).\n        \"\"\"", "\n", "\n", "n", ",", "t", ",", "c", ",", "h", ",", "w", "=", "lrs", ".", "shape", "\n", "\n", "lrs_1", "=", "lrs", "[", ":", ",", ":", "-", "1", ",", ":", ",", ":", ",", ":", "]", ".", "reshape", "(", "[", "-", "1", ",", "c", ",", "h", ",", "w", "]", ")", "\n", "lrs_2", "=", "lrs", "[", ":", ",", "1", ":", ",", ":", ",", ":", ",", ":", "]", ".", "reshape", "(", "[", "-", "1", ",", "c", ",", "h", ",", "w", "]", ")", "\n", "\n", "flows_backward", "=", "self", ".", "spynet", "(", "lrs_1", ",", "lrs_2", ")", ".", "reshape", "(", "[", "n", ",", "t", "-", "1", ",", "2", ",", "h", ",", "w", "]", ")", "\n", "\n", "if", "self", ".", "is_mirror_extended", ":", "\n", "            ", "flows_forward", "=", "flows_backward", ".", "flip", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "flows_forward", "=", "self", ".", "spynet", "(", "lrs_2", ",", "\n", "lrs_1", ")", ".", "reshape", "(", "[", "n", ",", "t", "-", "1", ",", "2", ",", "h", ",", "w", "]", ")", "\n", "\n", "", "return", "flows_forward", ",", "flows_backward", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr_plus_plus.BasicVSRPlusPlus.upsample": [[154, 187], ["len", "list", "range", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "range", "basicvsr_plus_plus.BasicVSRPlusPlus.insert", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "basicvsr_plus_plus.BasicVSRPlusPlus.reconstruction", "basicvsr_plus_plus.BasicVSRPlusPlus.lrelu", "basicvsr_plus_plus.BasicVSRPlusPlus.lrelu", "basicvsr_plus_plus.BasicVSRPlusPlus.lrelu", "basicvsr_plus_plus.BasicVSRPlusPlus.conv_last", "outputs.append", "feats[].pop", "basicvsr_plus_plus.BasicVSRPlusPlus.upsample1", "basicvsr_plus_plus.BasicVSRPlusPlus.upsample2", "basicvsr_plus_plus.BasicVSRPlusPlus.conv_hr", "basicvsr_plus_plus.BasicVSRPlusPlus.img_upsample"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.insert", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "upsample", "(", "self", ",", "lqs", ",", "feats", ")", ":", "\n", "        ", "\"\"\"Compute the output image given the features.\n        Args:\n            lqs (tensor): Input LR images with shape (n, t, c, h, w).\n            feats (dict): The features from the propgation branches.\n        Returns:\n            Tensor: Output HR sequence with shape (n, t, c, 4h, 4w).\n        \"\"\"", "\n", "\n", "outputs", "=", "[", "]", "\n", "num_outputs", "=", "len", "(", "feats", "[", "'spatial'", "]", ")", "\n", "\n", "mapping_idx", "=", "list", "(", "range", "(", "0", ",", "num_outputs", ")", ")", "\n", "mapping_idx", "+=", "mapping_idx", "[", ":", ":", "-", "1", "]", "\n", "\n", "for", "i", "in", "range", "(", "0", ",", "lqs", ".", "shape", "[", "1", "]", ")", ":", "\n", "            ", "hr", "=", "[", "feats", "[", "k", "]", ".", "pop", "(", "0", ")", "for", "k", "in", "feats", "if", "k", "!=", "'spatial'", "]", "\n", "hr", ".", "insert", "(", "0", ",", "feats", "[", "'spatial'", "]", "[", "mapping_idx", "[", "i", "]", "]", ")", "\n", "hr", "=", "paddle", ".", "concat", "(", "hr", ",", "axis", "=", "1", ")", "\n", "\n", "hr", "=", "self", ".", "reconstruction", "(", "hr", ")", "\n", "hr", "=", "self", ".", "lrelu", "(", "self", ".", "upsample1", "(", "hr", ")", ")", "\n", "hr", "=", "self", ".", "lrelu", "(", "self", ".", "upsample2", "(", "hr", ")", ")", "\n", "hr", "=", "self", ".", "lrelu", "(", "self", ".", "conv_hr", "(", "hr", ")", ")", "\n", "hr", "=", "self", ".", "conv_last", "(", "hr", ")", "\n", "if", "self", ".", "is_low_res_input", ":", "\n", "                ", "hr", "+=", "self", ".", "img_upsample", "(", "lqs", "[", ":", ",", "i", ",", ":", ",", ":", ",", ":", "]", ")", "\n", "", "else", ":", "\n", "                ", "hr", "+=", "lqs", "[", ":", ",", "i", ",", ":", ",", ":", ",", ":", "]", "\n", "\n", "", "outputs", ".", "append", "(", "hr", ")", "\n", "\n", "", "return", "paddle", ".", "stack", "(", "outputs", ",", "axis", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr_plus_plus.BasicVSRPlusPlus.forward": [[188, 440], ["basicvsr_plus_plus.BasicVSRPlusPlus.check_if_mirror_extended", "basicvsr_plus_plus.BasicVSRPlusPlus.feat_extract", "feats_.reshape.reshape.reshape", "basicvsr_plus_plus.BasicVSRPlusPlus.compute_flow", "range", "range", "list", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "enumerate", "range", "range", "list", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "enumerate", "range", "range", "list", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "enumerate", "range", "range", "list", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "enumerate", "basicvsr_plus_plus.BasicVSRPlusPlus.upsample", "paddle.interpolate().reshape", "paddle.interpolate().reshape", "paddle.interpolate().reshape", "lqs.reshape", "range", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "feats[].append", "range", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "feats[].append", "range", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "feats[].append", "range", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "feats[].append", "range", "len", "basicvsr.flow_warp", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "basicvsr_plus_plus.BasicVSRPlusPlus.deform_align_backward_1", "basicvsr_plus_plus.BasicVSRPlusPlus.backbone_backward_1", "len", "basicvsr.flow_warp", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "basicvsr_plus_plus.BasicVSRPlusPlus.deform_align_forward_1", "basicvsr_plus_plus.BasicVSRPlusPlus.backbone_forward_1", "len", "basicvsr.flow_warp", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "basicvsr_plus_plus.BasicVSRPlusPlus.deform_align_backward_2", "basicvsr_plus_plus.BasicVSRPlusPlus.backbone_backward_2", "len", "basicvsr.flow_warp", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "basicvsr_plus_plus.BasicVSRPlusPlus.deform_align_forward_2", "basicvsr_plus_plus.BasicVSRPlusPlus.backbone_forward_2", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "flow_n1.transpose", "basicvsr.flow_warp", "flow_n1.transpose", "basicvsr.flow_warp", "flow_n1.transpose", "basicvsr.flow_warp", "flow_n1.transpose", "basicvsr.flow_warp", "lqs.reshape", "basicvsr.flow_warp", "paddle.zeros_like.transpose", "paddle.zeros_like.transpose", "paddle.zeros_like.transpose", "basicvsr.flow_warp", "paddle.zeros_like.transpose", "paddle.zeros_like.transpose", "paddle.zeros_like.transpose", "basicvsr.flow_warp", "paddle.zeros_like.transpose", "paddle.zeros_like.transpose", "paddle.zeros_like.transpose", "basicvsr.flow_warp", "paddle.zeros_like.transpose", "paddle.zeros_like.transpose", "paddle.zeros_like.transpose", "flow_n1.transpose", "flow_n1.transpose", "flow_n1.transpose", "flow_n1.transpose"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.MSVSR.check_if_mirror_extended", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.ModifiedSPyNet.compute_flow", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.upsample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.flow_warp", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.flow_warp", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.flow_warp", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.flow_warp", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.flow_warp", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.flow_warp", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.flow_warp", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.flow_warp", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.flow_warp", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.flow_warp", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.flow_warp", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.flow_warp"], ["", "def", "forward", "(", "self", ",", "lqs", ")", ":", "\n", "        ", "\"\"\"Forward function for BasicVSR++.\n        Args:\n            lqs (Tensor): Input LR sequence with shape (n, t, c, h, w).\n        Returns:\n            Tensor: Output HR sequence with shape (n, t, c, 4h, 4w).\n        \"\"\"", "\n", "\n", "n", ",", "t", ",", "c", ",", "h", ",", "w", "=", "lqs", ".", "shape", "\n", "\n", "if", "self", ".", "is_low_res_input", ":", "\n", "            ", "lqs_downsample", "=", "lqs", "\n", "", "else", ":", "\n", "            ", "lqs_downsample", "=", "F", ".", "interpolate", "(", "lqs", ".", "reshape", "(", "[", "-", "1", ",", "c", ",", "h", ",", "w", "]", ")", ",", "\n", "scale_factor", "=", "0.25", ",", "\n", "mode", "=", "'bicubic'", ")", ".", "reshape", "(", "\n", "[", "n", ",", "t", ",", "c", ",", "h", "//", "4", ",", "w", "//", "4", "]", ")", "\n", "\n", "# check whether the input is an extended sequence", "\n", "", "self", ".", "check_if_mirror_extended", "(", "lqs", ")", "\n", "\n", "feats", "=", "{", "}", "\n", "feats_", "=", "self", ".", "feat_extract", "(", "lqs", ".", "reshape", "(", "[", "-", "1", ",", "c", ",", "h", ",", "w", "]", ")", ")", "\n", "h", ",", "w", "=", "feats_", ".", "shape", "[", "2", ":", "]", "\n", "feats_", "=", "feats_", ".", "reshape", "(", "[", "n", ",", "t", ",", "-", "1", ",", "h", ",", "w", "]", ")", "\n", "feats", "[", "'spatial'", "]", "=", "[", "feats_", "[", ":", ",", "i", ",", ":", ",", ":", ",", ":", "]", "for", "i", "in", "range", "(", "0", ",", "t", ")", "]", "\n", "\n", "# compute optical flow using the low-res inputs", "\n", "assert", "lqs_downsample", ".", "shape", "[", "3", "]", ">=", "64", "and", "lqs_downsample", ".", "shape", "[", "4", "]", ">=", "64", ",", "(", "\n", "'The height and width of low-res inputs must be at least 64, '", "\n", "f'but got {h} and {w}.'", ")", "\n", "flows_forward", ",", "flows_backward", "=", "self", ".", "compute_flow", "(", "lqs_downsample", ")", "\n", "\n", "# feature propgation", "\n", "\n", "# backward_1", "\n", "feats", "[", "'backward_1'", "]", "=", "[", "]", "\n", "flows", "=", "flows_backward", "\n", "\n", "n", ",", "t", ",", "_", ",", "h", ",", "w", "=", "flows", ".", "shape", "\n", "\n", "frame_idx", "=", "range", "(", "t", ",", "-", "1", ",", "-", "1", ")", "\n", "flow_idx", "=", "range", "(", "t", ",", "-", "1", ",", "-", "1", ")", "\n", "mapping_idx", "=", "list", "(", "range", "(", "0", ",", "len", "(", "feats", "[", "'spatial'", "]", ")", ")", ")", "\n", "mapping_idx", "+=", "mapping_idx", "[", ":", ":", "-", "1", "]", "\n", "\n", "feat_prop", "=", "paddle", ".", "zeros", "(", "[", "n", ",", "self", ".", "mid_channels", ",", "h", ",", "w", "]", ")", "\n", "\n", "for", "i", ",", "idx", "in", "enumerate", "(", "frame_idx", ")", ":", "\n", "            ", "feat_current", "=", "feats", "[", "'spatial'", "]", "[", "mapping_idx", "[", "idx", "]", "]", "\n", "\n", "if", "i", ">", "0", ":", "\n", "                ", "flow_n1", "=", "flows", "[", ":", ",", "flow_idx", "[", "i", "]", ",", ":", ",", ":", ",", ":", "]", "\n", "cond_n1", "=", "flow_warp", "(", "feat_prop", ",", "flow_n1", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", ")", "\n", "\n", "# initialize second-order features", "\n", "feat_n2", "=", "paddle", ".", "zeros_like", "(", "feat_prop", ")", "\n", "flow_n2", "=", "paddle", ".", "zeros_like", "(", "flow_n1", ")", "\n", "cond_n2", "=", "paddle", ".", "zeros_like", "(", "cond_n1", ")", "\n", "\n", "if", "i", ">", "1", ":", "# second-order features", "\n", "                    ", "feat_n2", "=", "feats", "[", "'backward_1'", "]", "[", "-", "2", "]", "\n", "\n", "flow_n2", "=", "flows", "[", ":", ",", "flow_idx", "[", "i", "-", "1", "]", ",", ":", ",", ":", ",", ":", "]", "\n", "\n", "flow_n2", "=", "flow_n1", "+", "flow_warp", "(", "\n", "flow_n2", ",", "flow_n1", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", ")", "\n", "\n", "cond_n2", "=", "flow_warp", "(", "feat_n2", ",", "flow_n2", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "\n", "1", "]", ")", ")", "\n", "\n", "# flow-guided deformable convolution", "\n", "", "cond", "=", "paddle", ".", "concat", "(", "[", "cond_n1", ",", "feat_current", ",", "cond_n2", "]", ",", "axis", "=", "1", ")", "\n", "feat_prop", "=", "paddle", ".", "concat", "(", "[", "feat_prop", ",", "feat_n2", "]", ",", "axis", "=", "1", ")", "\n", "\n", "feat_prop", "=", "self", ".", "deform_align_backward_1", "(", "\n", "feat_prop", ",", "cond", ",", "flow_n1", ",", "flow_n2", ")", "\n", "\n", "# concatenate and residual blocks", "\n", "", "feat", "=", "[", "feat_current", "]", "+", "[", "\n", "feats", "[", "k", "]", "[", "idx", "]", "\n", "for", "k", "in", "feats", "if", "k", "not", "in", "[", "'spatial'", ",", "'backward_1'", "]", "\n", "]", "+", "[", "feat_prop", "]", "\n", "\n", "feat", "=", "paddle", ".", "concat", "(", "feat", ",", "axis", "=", "1", ")", "\n", "feat_prop", "=", "feat_prop", "+", "self", ".", "backbone_backward_1", "(", "feat", ")", "\n", "feats", "[", "'backward_1'", "]", ".", "append", "(", "feat_prop", ")", "\n", "\n", "", "feats", "[", "'backward_1'", "]", "=", "feats", "[", "'backward_1'", "]", "[", ":", ":", "-", "1", "]", "\n", "\n", "# forward_1", "\n", "feats", "[", "'forward_1'", "]", "=", "[", "]", "\n", "flows", "=", "flows_forward", "\n", "\n", "n", ",", "t", ",", "_", ",", "h", ",", "w", "=", "flows", ".", "shape", "\n", "\n", "frame_idx", "=", "range", "(", "0", ",", "t", "+", "1", ")", "\n", "flow_idx", "=", "range", "(", "-", "1", ",", "t", ")", "\n", "mapping_idx", "=", "list", "(", "range", "(", "0", ",", "len", "(", "feats", "[", "'spatial'", "]", ")", ")", ")", "\n", "mapping_idx", "+=", "mapping_idx", "[", ":", ":", "-", "1", "]", "\n", "\n", "feat_prop", "=", "paddle", ".", "zeros", "(", "[", "n", ",", "self", ".", "mid_channels", ",", "h", ",", "w", "]", ")", "\n", "\n", "for", "i", ",", "idx", "in", "enumerate", "(", "frame_idx", ")", ":", "\n", "            ", "feat_current", "=", "feats", "[", "'spatial'", "]", "[", "mapping_idx", "[", "idx", "]", "]", "\n", "\n", "if", "i", ">", "0", ":", "\n", "                ", "flow_n1", "=", "flows", "[", ":", ",", "flow_idx", "[", "i", "]", ",", ":", ",", ":", ",", ":", "]", "\n", "cond_n1", "=", "flow_warp", "(", "feat_prop", ",", "flow_n1", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", ")", "\n", "\n", "# initialize second-order features", "\n", "feat_n2", "=", "paddle", ".", "zeros_like", "(", "feat_prop", ")", "\n", "flow_n2", "=", "paddle", ".", "zeros_like", "(", "flow_n1", ")", "\n", "cond_n2", "=", "paddle", ".", "zeros_like", "(", "cond_n1", ")", "\n", "\n", "if", "i", ">", "1", ":", "# second-order features", "\n", "                    ", "feat_n2", "=", "feats", "[", "'forward_1'", "]", "[", "-", "2", "]", "\n", "\n", "flow_n2", "=", "flows", "[", ":", ",", "flow_idx", "[", "i", "-", "1", "]", ",", ":", ",", ":", ",", ":", "]", "\n", "\n", "flow_n2", "=", "flow_n1", "+", "flow_warp", "(", "\n", "flow_n2", ",", "flow_n1", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", ")", "\n", "\n", "cond_n2", "=", "flow_warp", "(", "feat_n2", ",", "flow_n2", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "\n", "1", "]", ")", ")", "\n", "\n", "# flow-guided deformable convolution", "\n", "", "cond", "=", "paddle", ".", "concat", "(", "[", "cond_n1", ",", "feat_current", ",", "cond_n2", "]", ",", "axis", "=", "1", ")", "\n", "feat_prop", "=", "paddle", ".", "concat", "(", "[", "feat_prop", ",", "feat_n2", "]", ",", "axis", "=", "1", ")", "\n", "\n", "feat_prop", "=", "self", ".", "deform_align_forward_1", "(", "feat_prop", ",", "cond", ",", "\n", "flow_n1", ",", "flow_n2", ")", "\n", "\n", "# concatenate and residual blocks", "\n", "", "feat", "=", "[", "feat_current", "]", "+", "[", "\n", "feats", "[", "k", "]", "[", "idx", "]", "\n", "for", "k", "in", "feats", "if", "k", "not", "in", "[", "'spatial'", ",", "'forward_1'", "]", "\n", "]", "+", "[", "feat_prop", "]", "\n", "\n", "feat", "=", "paddle", ".", "concat", "(", "feat", ",", "axis", "=", "1", ")", "\n", "feat_prop", "=", "feat_prop", "+", "self", ".", "backbone_forward_1", "(", "feat", ")", "\n", "feats", "[", "'forward_1'", "]", ".", "append", "(", "feat_prop", ")", "\n", "\n", "# backward_2", "\n", "", "feats", "[", "'backward_2'", "]", "=", "[", "]", "\n", "flows", "=", "flows_backward", "\n", "\n", "n", ",", "t", ",", "_", ",", "h", ",", "w", "=", "flows", ".", "shape", "\n", "\n", "frame_idx", "=", "range", "(", "t", ",", "-", "1", ",", "-", "1", ")", "\n", "flow_idx", "=", "range", "(", "t", ",", "-", "1", ",", "-", "1", ")", "\n", "mapping_idx", "=", "list", "(", "range", "(", "0", ",", "len", "(", "feats", "[", "'spatial'", "]", ")", ")", ")", "\n", "mapping_idx", "+=", "mapping_idx", "[", ":", ":", "-", "1", "]", "\n", "\n", "feat_prop", "=", "paddle", ".", "zeros", "(", "[", "n", ",", "self", ".", "mid_channels", ",", "h", ",", "w", "]", ")", "\n", "\n", "for", "i", ",", "idx", "in", "enumerate", "(", "frame_idx", ")", ":", "\n", "            ", "feat_current", "=", "feats", "[", "'spatial'", "]", "[", "mapping_idx", "[", "idx", "]", "]", "\n", "\n", "if", "i", ">", "0", ":", "\n", "                ", "flow_n1", "=", "flows", "[", ":", ",", "flow_idx", "[", "i", "]", ",", ":", ",", ":", ",", ":", "]", "\n", "cond_n1", "=", "flow_warp", "(", "feat_prop", ",", "flow_n1", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", ")", "\n", "\n", "# initialize second-order features", "\n", "feat_n2", "=", "paddle", ".", "zeros_like", "(", "feat_prop", ")", "\n", "flow_n2", "=", "paddle", ".", "zeros_like", "(", "flow_n1", ")", "\n", "cond_n2", "=", "paddle", ".", "zeros_like", "(", "cond_n1", ")", "\n", "\n", "if", "i", ">", "1", ":", "# second-order features", "\n", "                    ", "feat_n2", "=", "feats", "[", "'backward_2'", "]", "[", "-", "2", "]", "\n", "\n", "flow_n2", "=", "flows", "[", ":", ",", "flow_idx", "[", "i", "-", "1", "]", ",", ":", ",", ":", ",", ":", "]", "\n", "\n", "flow_n2", "=", "flow_n1", "+", "flow_warp", "(", "\n", "flow_n2", ",", "flow_n1", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", ")", "\n", "\n", "cond_n2", "=", "flow_warp", "(", "feat_n2", ",", "flow_n2", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "\n", "1", "]", ")", ")", "\n", "\n", "# flow-guided deformable convolution", "\n", "", "cond", "=", "paddle", ".", "concat", "(", "[", "cond_n1", ",", "feat_current", ",", "cond_n2", "]", ",", "axis", "=", "1", ")", "\n", "feat_prop", "=", "paddle", ".", "concat", "(", "[", "feat_prop", ",", "feat_n2", "]", ",", "axis", "=", "1", ")", "\n", "\n", "feat_prop", "=", "self", ".", "deform_align_backward_2", "(", "\n", "feat_prop", ",", "cond", ",", "flow_n1", ",", "flow_n2", ")", "\n", "\n", "# concatenate and residual blocks", "\n", "", "feat", "=", "[", "feat_current", "]", "+", "[", "\n", "feats", "[", "k", "]", "[", "idx", "]", "\n", "for", "k", "in", "feats", "if", "k", "not", "in", "[", "'spatial'", ",", "'backward_2'", "]", "\n", "]", "+", "[", "feat_prop", "]", "\n", "\n", "feat", "=", "paddle", ".", "concat", "(", "feat", ",", "axis", "=", "1", ")", "\n", "feat_prop", "=", "feat_prop", "+", "self", ".", "backbone_backward_2", "(", "feat", ")", "\n", "feats", "[", "'backward_2'", "]", ".", "append", "(", "feat_prop", ")", "\n", "\n", "", "feats", "[", "'backward_2'", "]", "=", "feats", "[", "'backward_2'", "]", "[", ":", ":", "-", "1", "]", "\n", "\n", "# forward_2", "\n", "feats", "[", "'forward_2'", "]", "=", "[", "]", "\n", "flows", "=", "flows_forward", "\n", "\n", "n", ",", "t", ",", "_", ",", "h", ",", "w", "=", "flows", ".", "shape", "\n", "\n", "frame_idx", "=", "range", "(", "0", ",", "t", "+", "1", ")", "\n", "flow_idx", "=", "range", "(", "-", "1", ",", "t", ")", "\n", "mapping_idx", "=", "list", "(", "range", "(", "0", ",", "len", "(", "feats", "[", "'spatial'", "]", ")", ")", ")", "\n", "mapping_idx", "+=", "mapping_idx", "[", ":", ":", "-", "1", "]", "\n", "\n", "feat_prop", "=", "paddle", ".", "zeros", "(", "[", "n", ",", "self", ".", "mid_channels", ",", "h", ",", "w", "]", ")", "\n", "\n", "for", "i", ",", "idx", "in", "enumerate", "(", "frame_idx", ")", ":", "\n", "            ", "feat_current", "=", "feats", "[", "'spatial'", "]", "[", "mapping_idx", "[", "idx", "]", "]", "\n", "\n", "if", "i", ">", "0", ":", "\n", "                ", "flow_n1", "=", "flows", "[", ":", ",", "flow_idx", "[", "i", "]", ",", ":", ",", ":", ",", ":", "]", "\n", "cond_n1", "=", "flow_warp", "(", "feat_prop", ",", "flow_n1", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", ")", "\n", "\n", "# initialize second-order features", "\n", "feat_n2", "=", "paddle", ".", "zeros_like", "(", "feat_prop", ")", "\n", "flow_n2", "=", "paddle", ".", "zeros_like", "(", "flow_n1", ")", "\n", "cond_n2", "=", "paddle", ".", "zeros_like", "(", "cond_n1", ")", "\n", "\n", "if", "i", ">", "1", ":", "# second-order features", "\n", "                    ", "feat_n2", "=", "feats", "[", "'forward_2'", "]", "[", "-", "2", "]", "\n", "\n", "flow_n2", "=", "flows", "[", ":", ",", "flow_idx", "[", "i", "-", "1", "]", ",", ":", ",", ":", ",", ":", "]", "\n", "\n", "flow_n2", "=", "flow_n1", "+", "flow_warp", "(", "\n", "flow_n2", ",", "flow_n1", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", ")", "\n", "\n", "cond_n2", "=", "flow_warp", "(", "feat_n2", ",", "flow_n2", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "\n", "1", "]", ")", ")", "\n", "\n", "# flow-guided deformable convolution", "\n", "", "cond", "=", "paddle", ".", "concat", "(", "[", "cond_n1", ",", "feat_current", ",", "cond_n2", "]", ",", "axis", "=", "1", ")", "\n", "feat_prop", "=", "paddle", ".", "concat", "(", "[", "feat_prop", ",", "feat_n2", "]", ",", "axis", "=", "1", ")", "\n", "\n", "feat_prop", "=", "self", ".", "deform_align_forward_2", "(", "feat_prop", ",", "cond", ",", "\n", "flow_n1", ",", "flow_n2", ")", "\n", "\n", "# concatenate and residual blocks", "\n", "", "feat", "=", "[", "feat_current", "]", "+", "[", "\n", "feats", "[", "k", "]", "[", "idx", "]", "\n", "for", "k", "in", "feats", "if", "k", "not", "in", "[", "'spatial'", ",", "'forward_2'", "]", "\n", "]", "+", "[", "feat_prop", "]", "\n", "\n", "feat", "=", "paddle", ".", "concat", "(", "feat", ",", "axis", "=", "1", ")", "\n", "feat_prop", "=", "feat_prop", "+", "self", ".", "backbone_forward_2", "(", "feat", ")", "\n", "feats", "[", "'forward_2'", "]", ".", "append", "(", "feat_prop", ")", "\n", "\n", "", "return", "self", ".", "upsample", "(", "lqs", ",", "feats", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.makeup.PONO.__init__": [[32, 35], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "eps", "=", "1e-5", ")", ":", "\n", "        ", "super", "(", "PONO", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "eps", "=", "eps", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.makeup.PONO.forward": [[36, 42], ["paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.square", "paddle.square", "paddle.square", "paddle.square", "paddle.square", "paddle.square", "paddle.square", "paddle.square", "paddle.square", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "mean", "=", "paddle", ".", "mean", "(", "x", ",", "axis", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "var", "=", "paddle", ".", "mean", "(", "paddle", ".", "square", "(", "x", "-", "mean", ")", ",", "axis", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "tmp", "=", "(", "x", "-", "mean", ")", "/", "paddle", ".", "sqrt", "(", "var", "+", "self", ".", "eps", ")", "\n", "\n", "return", "tmp", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.makeup.ResidualBlock.__init__": [[46, 74], ["super().__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.InstanceNorm2D", "paddle.InstanceNorm2D", "paddle.InstanceNorm2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.InstanceNorm2D", "paddle.InstanceNorm2D", "paddle.InstanceNorm2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "dim_in", ",", "dim_out", ",", "mode", "=", "None", ")", ":", "\n", "        ", "super", "(", "ResidualBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "mode", "==", "'t'", ":", "\n", "            ", "weight_attr", "=", "False", "\n", "bias_attr", "=", "False", "\n", "", "elif", "mode", "==", "'p'", "or", "(", "mode", "is", "None", ")", ":", "\n", "            ", "weight_attr", "=", "None", "\n", "bias_attr", "=", "None", "\n", "\n", "", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "dim_in", ",", "\n", "dim_out", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "InstanceNorm2D", "(", "dim_out", ",", "\n", "weight_attr", "=", "weight_attr", ",", "\n", "bias_attr", "=", "bias_attr", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2D", "(", "dim_out", ",", "\n", "dim_out", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "InstanceNorm2D", "(", "dim_out", ",", "\n", "weight_attr", "=", "weight_attr", ",", "\n", "bias_attr", "=", "bias_attr", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.makeup.ResidualBlock.forward": [[75, 78], ["makeup.ResidualBlock.main"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.lsr2_preprocess.main"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"forward\"\"\"", "\n", "return", "x", "+", "self", ".", "main", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.makeup.StyleResidualBlock.__init__": [[82, 105], ["super().__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "makeup.PONO", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "makeup.PONO"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "dim_in", ",", "dim_out", ")", ":", "\n", "        ", "super", "(", "StyleResidualBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "block1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "dim_in", ",", "\n", "dim_out", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", "PONO", "(", ")", ")", "\n", "ks", "=", "3", "\n", "pw", "=", "ks", "//", "2", "\n", "self", ".", "beta1", "=", "nn", ".", "Conv2D", "(", "dim_in", ",", "dim_out", ",", "kernel_size", "=", "ks", ",", "padding", "=", "pw", ")", "\n", "self", ".", "gamma1", "=", "nn", ".", "Conv2D", "(", "dim_in", ",", "dim_out", ",", "kernel_size", "=", "ks", ",", "padding", "=", "pw", ")", "\n", "self", ".", "block2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2D", "(", "dim_out", ",", "\n", "dim_out", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", "PONO", "(", ")", ")", "\n", "self", ".", "beta2", "=", "nn", ".", "Conv2D", "(", "dim_in", ",", "dim_out", ",", "kernel_size", "=", "ks", ",", "padding", "=", "pw", ")", "\n", "self", ".", "gamma2", "=", "nn", ".", "Conv2D", "(", "dim_in", ",", "dim_out", ",", "kernel_size", "=", "ks", ",", "padding", "=", "pw", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.makeup.StyleResidualBlock.forward": [[106, 117], ["makeup.StyleResidualBlock.block1", "makeup.StyleResidualBlock.beta1", "makeup.StyleResidualBlock.gamma1", "makeup.StyleResidualBlock.block2", "makeup.StyleResidualBlock.beta2", "makeup.StyleResidualBlock.gamma2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "\"\"\"forward\"\"\"", "\n", "x_", "=", "self", ".", "block1", "(", "x", ")", "\n", "b", "=", "self", ".", "beta1", "(", "y", ")", "\n", "g", "=", "self", ".", "gamma1", "(", "y", ")", "\n", "x_", "=", "(", "g", "+", "1", ")", "*", "x_", "+", "b", "\n", "x_", "=", "self", ".", "block2", "(", "x_", ")", "\n", "b", "=", "self", ".", "beta2", "(", "y", ")", "\n", "g", "=", "self", ".", "gamma2", "(", "y", ")", "\n", "x_", "=", "(", "g", "+", "1", ")", "*", "x_", "+", "b", "\n", "return", "x", "+", "x_", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.makeup.MDNet.__init__": [[121, 159], ["super().__init__", "layers.append", "layers.append", "layers.append", "range", "range", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.InstanceNorm2D", "paddle.InstanceNorm2D", "paddle.InstanceNorm2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "layers.append", "layers.append", "layers.append", "layers.append", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.InstanceNorm2D", "paddle.InstanceNorm2D", "paddle.InstanceNorm2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "makeup.ResidualBlock"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["def", "__init__", "(", "self", ",", "conv_dim", "=", "64", ",", "repeat_num", "=", "3", ")", ":", "\n", "        ", "super", "(", "MDNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "\n", "nn", ".", "Conv2D", "(", "3", ",", "\n", "conv_dim", ",", "\n", "kernel_size", "=", "7", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "3", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "layers", ".", "append", "(", "\n", "nn", ".", "InstanceNorm2D", "(", "conv_dim", ",", "weight_attr", "=", "None", ",", "bias_attr", "=", "None", ")", ")", "\n", "\n", "layers", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "# Down-Sampling", "\n", "curr_dim", "=", "conv_dim", "\n", "for", "i", "in", "range", "(", "2", ")", ":", "\n", "            ", "layers", ".", "append", "(", "\n", "nn", ".", "Conv2D", "(", "curr_dim", ",", "\n", "curr_dim", "*", "2", ",", "\n", "kernel_size", "=", "4", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "layers", ".", "append", "(", "\n", "nn", ".", "InstanceNorm2D", "(", "curr_dim", "*", "2", ",", "\n", "weight_attr", "=", "None", ",", "\n", "bias_attr", "=", "None", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "curr_dim", "=", "curr_dim", "*", "2", "\n", "\n", "# Bottleneck", "\n", "", "for", "i", "in", "range", "(", "repeat_num", ")", ":", "\n", "            ", "layers", ".", "append", "(", "ResidualBlock", "(", "dim_in", "=", "curr_dim", ",", "dim_out", "=", "curr_dim", ")", ")", "\n", "\n", "", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.makeup.MDNet.forward": [[160, 164], ["makeup.MDNet.main"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.lsr2_preprocess.main"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"forward\"\"\"", "\n", "out", "=", "self", ".", "main", "(", "x", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.makeup.TNetDown.__init__": [[168, 207], ["super().__init__", "layers.append", "layers.append", "layers.append", "range", "range", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.InstanceNorm2D", "paddle.InstanceNorm2D", "paddle.InstanceNorm2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "layers.append", "layers.append", "layers.append", "layers.append", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.InstanceNorm2D", "paddle.InstanceNorm2D", "paddle.InstanceNorm2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "makeup.ResidualBlock"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["def", "__init__", "(", "self", ",", "conv_dim", "=", "64", ",", "repeat_num", "=", "3", ")", ":", "\n", "        ", "super", "(", "TNetDown", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "\n", "nn", ".", "Conv2D", "(", "3", ",", "\n", "conv_dim", ",", "\n", "kernel_size", "=", "7", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "3", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "layers", ".", "append", "(", "\n", "nn", ".", "InstanceNorm2D", "(", "conv_dim", ",", "weight_attr", "=", "False", ",", "bias_attr", "=", "False", ")", ")", "\n", "\n", "layers", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "# Down-Sampling", "\n", "curr_dim", "=", "conv_dim", "\n", "for", "i", "in", "range", "(", "2", ")", ":", "\n", "            ", "layers", ".", "append", "(", "\n", "nn", ".", "Conv2D", "(", "curr_dim", ",", "\n", "curr_dim", "*", "2", ",", "\n", "kernel_size", "=", "4", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "layers", ".", "append", "(", "\n", "nn", ".", "InstanceNorm2D", "(", "curr_dim", "*", "2", ",", "\n", "weight_attr", "=", "False", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "curr_dim", "=", "curr_dim", "*", "2", "\n", "\n", "# Bottleneck", "\n", "", "for", "i", "in", "range", "(", "repeat_num", ")", ":", "\n", "            ", "layers", ".", "append", "(", "\n", "ResidualBlock", "(", "dim_in", "=", "curr_dim", ",", "dim_out", "=", "curr_dim", ",", "mode", "=", "'t'", ")", ")", "\n", "\n", "", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.makeup.TNetDown.forward": [[208, 212], ["makeup.TNetDown.main"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.lsr2_preprocess.main"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"forward\"\"\"", "\n", "out", "=", "self", ".", "main", "(", "x", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.makeup.GetMatrix.__init__": [[215, 229], ["super().__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim_in", ",", "dim_out", ")", ":", "\n", "        ", "super", "(", "GetMatrix", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "get_gamma", "=", "nn", ".", "Conv2D", "(", "dim_in", ",", "\n", "dim_out", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "get_beta", "=", "nn", ".", "Conv2D", "(", "dim_in", ",", "\n", "dim_out", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.makeup.GetMatrix.forward": [[230, 234], ["makeup.GetMatrix.get_gamma", "makeup.GetMatrix.get_beta"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "gamma", "=", "self", ".", "get_gamma", "(", "x", ")", "\n", "beta", "=", "self", ".", "get_beta", "(", "x", ")", "\n", "return", "gamma", ",", "beta", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.makeup.MANet.__init__": [[238, 296], ["super().__init__", "makeup.TNetDown", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "makeup.GetMatrix", "range", "range", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "setattr", "layers.append", "layers.append", "setattr", "setattr", "setattr", "setattr", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "makeup.ResidualBlock", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.InstanceNorm2D", "paddle.InstanceNorm2D", "paddle.InstanceNorm2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "str", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["def", "__init__", "(", "self", ",", "conv_dim", "=", "64", ",", "repeat_num", "=", "3", ",", "w", "=", "0.01", ")", ":", "\n", "        ", "super", "(", "MANet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "encoder", "=", "TNetDown", "(", "conv_dim", "=", "conv_dim", ",", "repeat_num", "=", "repeat_num", ")", "\n", "curr_dim", "=", "conv_dim", "*", "4", "\n", "self", ".", "w", "=", "w", "\n", "self", ".", "beta", "=", "nn", ".", "Conv2D", "(", "curr_dim", ",", "curr_dim", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "gamma", "=", "nn", ".", "Conv2D", "(", "curr_dim", ",", "curr_dim", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "simple_spade", "=", "GetMatrix", "(", "curr_dim", ",", "1", ")", "# get the makeup matrix", "\n", "self", ".", "repeat_num", "=", "repeat_num", "\n", "for", "i", "in", "range", "(", "repeat_num", ")", ":", "\n", "            ", "setattr", "(", "self", ",", "\"bottlenecks_\"", "+", "str", "(", "i", ")", ",", "\n", "ResidualBlock", "(", "dim_in", "=", "curr_dim", ",", "dim_out", "=", "curr_dim", ",", "mode", "=", "'t'", ")", ")", "\n", "# Up-Sampling", "\n", "", "self", ".", "upsamplers", "=", "[", "]", "\n", "self", ".", "up_betas", "=", "[", "]", "\n", "self", ".", "up_gammas", "=", "[", "]", "\n", "self", ".", "up_acts", "=", "[", "]", "\n", "y_dim", "=", "curr_dim", "\n", "for", "i", "in", "range", "(", "2", ")", ":", "\n", "            ", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "\n", "nn", ".", "Conv2DTranspose", "(", "curr_dim", ",", "\n", "curr_dim", "//", "2", ",", "\n", "kernel_size", "=", "4", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "layers", ".", "append", "(", "\n", "nn", ".", "InstanceNorm2D", "(", "curr_dim", "//", "2", ",", "\n", "weight_attr", "=", "False", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "\n", "setattr", "(", "self", ",", "\"up_acts_\"", "+", "str", "(", "i", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "setattr", "(", "\n", "self", ",", "\"up_betas_\"", "+", "str", "(", "i", ")", ",", "\n", "nn", ".", "Conv2DTranspose", "(", "y_dim", ",", "\n", "curr_dim", "//", "2", ",", "\n", "kernel_size", "=", "4", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ")", ")", "\n", "setattr", "(", "\n", "self", ",", "\"up_gammas_\"", "+", "str", "(", "i", ")", ",", "\n", "nn", ".", "Conv2DTranspose", "(", "y_dim", ",", "\n", "curr_dim", "//", "2", ",", "\n", "kernel_size", "=", "4", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ")", ")", "\n", "setattr", "(", "self", ",", "\"up_samplers_\"", "+", "str", "(", "i", ")", ",", "nn", ".", "Sequential", "(", "*", "layers", ")", ")", "\n", "curr_dim", "=", "curr_dim", "//", "2", "\n", "", "self", ".", "img_reg", "=", "[", "\n", "nn", ".", "Conv2D", "(", "curr_dim", ",", "\n", "3", ",", "\n", "kernel_size", "=", "7", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "3", ",", "\n", "bias_attr", "=", "False", ")", "\n", "]", "\n", "self", ".", "img_reg", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "img_reg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.makeup.MANet.forward": [[297, 376], ["makeup.MANet.encoder", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "mask_x.transpose.transpose.transpose", "mask_x.transpose.transpose.tile", "mask_x.transpose.transpose.tile", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "mask_y.transpose.transpose.transpose", "mask_y.transpose.transpose.tile", "mask_y.transpose.transpose.tile", "getattr.tile", "y.tile", "paddle.norm().tile", "paddle.norm().tile", "paddle.norm().tile", "paddle.norm().tile", "paddle.norm().tile", "paddle.norm().tile", "paddle.norm().tile", "paddle.norm().tile", "paddle.norm().tile", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.norm().tile", "paddle.norm().tile", "paddle.norm().tile", "paddle.norm().tile", "paddle.norm().tile", "paddle.norm().tile", "paddle.norm().tile", "paddle.norm().tile", "paddle.norm().tile", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.where", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat.reshape", "paddle.concat.reshape", "paddle.concat.reshape", "paddle.concat.reshape", "paddle.concat.reshape", "paddle.concat.reshape", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.softmax", "paddle.softmax", "paddle.softmax", "makeup.MANet.simple_spade", "beta.reshape.reshape.reshape", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "beta.reshape.reshape.transpose", "beta.reshape.reshape.reshape", "gamma.reshape.reshape.reshape", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "gamma.reshape.reshape.transpose", "gamma.reshape.reshape.reshape", "range", "range", "makeup.MANet.img_reg", "paddle.tanh", "paddle.tanh", "paddle.tanh", "paddle.tanh", "paddle.tanh", "paddle.tanh", "paddle.tanh", "paddle.tanh", "paddle.tanh", "x_p.tile", "y_p.tile", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "gamma.reshape.reshape.tile", "beta.reshape.reshape.tile", "getattr", "getattr.", "getattr", "getattr.", "getattr", "getattr.", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ",", "x_p", ",", "y_p", ",", "consistency_mask", ",", "mask_x", ",", "mask_y", ")", ":", "\n", "        ", "\"\"\"forward\"\"\"", "\n", "# y -> ref feature", "\n", "# x -> src img", "\n", "x", "=", "self", ".", "encoder", "(", "x", ")", "\n", "_", ",", "c", ",", "h", ",", "w", "=", "x", ".", "shape", "\n", "\n", "_", ",", "c2", ",", "h2", ",", "w2", "=", "y", ".", "shape", "\n", "\n", "mask_x", "=", "F", ".", "interpolate", "(", "mask_x", ",", "size", "=", "(", "64", ",", "64", ")", ")", "\n", "mask_x", "=", "mask_x", ".", "transpose", "(", "(", "1", ",", "0", ",", "2", ",", "3", ")", ")", "\n", "mask_x_re", "=", "mask_x", ".", "tile", "(", "[", "1", ",", "x", ".", "shape", "[", "1", "]", ",", "1", ",", "1", "]", ")", "\n", "mask_x_diff_re", "=", "mask_x", ".", "tile", "(", "[", "1", ",", "x_p", ".", "shape", "[", "1", "]", ",", "1", ",", "1", "]", ")", "\n", "mask_y", "=", "F", ".", "interpolate", "(", "mask_y", ",", "size", "=", "(", "64", ",", "64", ")", ")", "\n", "mask_y", "=", "mask_y", ".", "transpose", "(", "(", "1", ",", "0", ",", "2", ",", "3", ")", ")", "\n", "mask_y_re", "=", "mask_y", ".", "tile", "(", "[", "1", ",", "y", ".", "shape", "[", "1", "]", ",", "1", ",", "1", "]", ")", "\n", "mask_y_diff_re", "=", "mask_y", ".", "tile", "(", "[", "1", ",", "y_p", ".", "shape", "[", "1", "]", ",", "1", ",", "1", "]", ")", "\n", "\n", "x_re", "=", "x", ".", "tile", "(", "[", "3", ",", "1", ",", "1", ",", "1", "]", ")", "\n", "y_re", "=", "y", ".", "tile", "(", "[", "3", ",", "1", ",", "1", ",", "1", "]", ")", "\n", "x_flat", "=", "x_re", "*", "mask_x_re", "\n", "y_flat", "=", "y_re", "*", "mask_y_re", "\n", "\n", "x_p", "=", "x_p", ".", "tile", "(", "[", "3", ",", "1", ",", "1", ",", "1", "]", ")", "*", "mask_x_diff_re", "\n", "y_p", "=", "y_p", ".", "tile", "(", "[", "3", ",", "1", ",", "1", ",", "1", "]", ")", "*", "mask_y_diff_re", "\n", "\n", "norm_x", "=", "paddle", ".", "norm", "(", "x_p", ",", "axis", "=", "1", ",", "\n", "keepdim", "=", "True", ")", ".", "tile", "(", "[", "1", ",", "x_p", ".", "shape", "[", "1", "]", ",", "1", ",", "1", "]", ")", "\n", "norm_x", "=", "paddle", ".", "where", "(", "norm_x", "==", "0", ",", "paddle", ".", "to_tensor", "(", "1e10", ")", ",", "norm_x", ")", "\n", "x_p", "=", "x_p", "/", "norm_x", "\n", "norm_y", "=", "paddle", ".", "norm", "(", "y_p", ",", "axis", "=", "1", ",", "\n", "keepdim", "=", "True", ")", ".", "tile", "(", "[", "1", ",", "y_p", ".", "shape", "[", "1", "]", ",", "1", ",", "1", "]", ")", "\n", "norm_y", "=", "paddle", ".", "where", "(", "norm_y", "==", "0", ",", "paddle", ".", "to_tensor", "(", "1e10", ")", ",", "norm_y", ")", "\n", "y_p", "=", "y_p", "/", "norm_y", "\n", "\n", "x_flat", "=", "paddle", ".", "concat", "(", "[", "x_flat", "*", "0.01", ",", "x_p", "]", ",", "axis", "=", "1", ")", "\n", "y_flat", "=", "paddle", ".", "concat", "(", "[", "y_flat", "*", "0.01", ",", "y_p", "]", ",", "axis", "=", "1", ")", "\n", "\n", "x_flat_re", "=", "x_flat", ".", "reshape", "(", "[", "3", ",", "x_flat", ".", "shape", "[", "1", "]", ",", "h", "*", "w", "]", ")", "\n", "y_flat_re", "=", "y_flat", ".", "reshape", "(", "[", "3", ",", "y_flat", ".", "shape", "[", "1", "]", ",", "h2", "*", "w2", "]", ")", "\n", "\n", "a_", "=", "paddle", ".", "matmul", "(", "x_flat_re", ",", "y_flat_re", ",", "transpose_x", "=", "True", ")", "\n", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "            ", "a_mask", "=", "a_", "!=", "0", "\n", "\n", "", "a_", "*=", "200", "\n", "a", "=", "F", ".", "softmax", "(", "a_", ",", "axis", "=", "-", "1", ")", "\n", "a", "=", "a", "*", "a_mask", "\n", "\n", "gamma", ",", "beta", "=", "self", ".", "simple_spade", "(", "y", ")", "\n", "gamma", "=", "gamma", ".", "tile", "(", "[", "3", ",", "1", ",", "1", ",", "1", "]", ")", "*", "mask_y", "\n", "beta", "=", "beta", ".", "tile", "(", "[", "3", ",", "1", ",", "1", ",", "1", "]", ")", "*", "mask_y", "\n", "\n", "beta", "=", "beta", ".", "reshape", "(", "[", "-", "1", ",", "h2", "*", "w2", ",", "1", "]", ")", "\n", "beta", "=", "paddle", ".", "matmul", "(", "a", ",", "beta", ")", "\n", "beta", "=", "beta", ".", "transpose", "(", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "beta", "=", "beta", ".", "reshape", "(", "[", "-", "1", ",", "1", ",", "h2", ",", "w2", "]", ")", "\n", "gamma", "=", "gamma", ".", "reshape", "(", "[", "-", "1", ",", "h2", "*", "w2", ",", "1", "]", ")", "\n", "gamma", "=", "paddle", ".", "matmul", "(", "a", ",", "gamma", ")", "\n", "gamma", "=", "gamma", ".", "transpose", "(", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "gamma", "=", "gamma", ".", "reshape", "(", "[", "-", "1", ",", "1", ",", "h2", ",", "w2", "]", ")", "\n", "\n", "beta", "=", "(", "beta", "[", "0", "]", "+", "beta", "[", "1", "]", "+", "beta", "[", "2", "]", ")", ".", "unsqueeze", "(", "0", ")", "\n", "gamma", "=", "(", "gamma", "[", "0", "]", "+", "gamma", "[", "1", "]", "+", "gamma", "[", "2", "]", ")", ".", "unsqueeze", "(", "0", ")", "\n", "x", "=", "x", "*", "(", "1", "+", "gamma", ")", "+", "beta", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "repeat_num", ")", ":", "\n", "            ", "layer", "=", "getattr", "(", "self", ",", "\"bottlenecks_\"", "+", "str", "(", "i", ")", ")", "\n", "x", "=", "layer", "(", "x", ")", "\n", "\n", "", "for", "idx", "in", "range", "(", "2", ")", ":", "\n", "            ", "layer", "=", "getattr", "(", "self", ",", "\"up_samplers_\"", "+", "str", "(", "idx", ")", ")", "\n", "x", "=", "layer", "(", "x", ")", "\n", "layer", "=", "getattr", "(", "self", ",", "\"up_acts_\"", "+", "str", "(", "idx", ")", ")", "\n", "x", "=", "layer", "(", "x", ")", "\n", "", "x", "=", "self", ".", "img_reg", "(", "x", ")", "\n", "x", "=", "paddle", ".", "tanh", "(", "x", ")", "\n", "return", "x", ",", "a", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.makeup.GeneratorPSGANAttention.__init__": [[380, 384], ["super().__init__", "makeup.MANet", "makeup.MDNet"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv_dim", "=", "64", ",", "repeat_num", "=", "3", ")", ":", "\n", "        ", "super", "(", "GeneratorPSGANAttention", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ma_net", "=", "MANet", "(", "conv_dim", "=", "conv_dim", ",", "repeat_num", "=", "repeat_num", ")", "\n", "self", ".", "md_net", "=", "MDNet", "(", "conv_dim", "=", "conv_dim", ",", "repeat_num", "=", "repeat_num", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.makeup.GeneratorPSGANAttention.forward": [[385, 390], ["makeup.GeneratorPSGANAttention.md_net", "makeup.GeneratorPSGANAttention.ma_net"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ",", "x_p", ",", "y_p", ",", "consistency_mask", ",", "mask_x", ",", "mask_y", ")", ":", "\n", "        ", "\"\"\"forward\"\"\"", "\n", "y", "=", "self", ".", "md_net", "(", "y", ")", "\n", "out", ",", "a", "=", "self", ".", "ma_net", "(", "x", ",", "y", ",", "x_p", ",", "y_p", ",", "consistency_mask", ",", "mask_x", ",", "mask_y", ")", "\n", "return", "out", ",", "a", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.resnet.ResnetGenerator.__init__": [[42, 114], ["paddle.Layer.__init__", "modules.norm.build_norm_layer", "range", "range", "range", "paddle.Sequential", "paddle.Sequential", "type", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "modules.norm.build_norm_layer.", "paddle.ReLU", "paddle.ReLU", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Tanh", "paddle.Tanh", "paddle.Conv2D", "paddle.Conv2D", "modules.norm.build_norm_layer.", "paddle.ReLU", "paddle.ReLU", "resnet.ResnetBlock", "paddle.Conv2DTranspose", "paddle.Conv2DTranspose", "modules.norm.build_norm_layer.", "paddle.ReLU", "paddle.ReLU", "int", "int"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.norm.build_norm_layer"], ["def", "__init__", "(", "self", ",", "\n", "input_nc", ",", "\n", "output_nc", ",", "\n", "ngf", "=", "64", ",", "\n", "norm_type", "=", "'instance'", ",", "\n", "use_dropout", "=", "False", ",", "\n", "n_blocks", "=", "6", ",", "\n", "padding_type", "=", "'reflect'", ")", ":", "\n", "\n", "        ", "assert", "(", "n_blocks", ">=", "0", ")", "\n", "super", "(", "ResnetGenerator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "norm_layer", "=", "build_norm_layer", "(", "norm_type", ")", "\n", "if", "type", "(", "norm_layer", ")", "==", "functools", ".", "partial", ":", "\n", "            ", "use_bias", "=", "norm_layer", ".", "func", "==", "nn", ".", "InstanceNorm2D", "\n", "", "else", ":", "\n", "            ", "use_bias", "=", "norm_layer", "==", "nn", ".", "InstanceNorm2D", "\n", "\n", "", "model", "=", "[", "\n", "nn", ".", "Pad2D", "(", "padding", "=", "[", "3", ",", "3", ",", "3", ",", "3", "]", ",", "mode", "=", "\"reflect\"", ")", ",", "\n", "nn", ".", "Conv2D", "(", "input_nc", ",", "\n", "ngf", ",", "\n", "kernel_size", "=", "7", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "use_bias", ")", ",", "\n", "norm_layer", "(", "ngf", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", "\n", "\n", "n_downsampling", "=", "2", "\n", "for", "i", "in", "range", "(", "n_downsampling", ")", ":", "# add downsampling layers", "\n", "            ", "mult", "=", "2", "**", "i", "\n", "model", "+=", "[", "\n", "nn", ".", "Conv2D", "(", "ngf", "*", "mult", ",", "\n", "ngf", "*", "mult", "*", "2", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "use_bias", ")", ",", "\n", "norm_layer", "(", "ngf", "*", "mult", "*", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", "\n", "\n", "", "mult", "=", "2", "**", "n_downsampling", "\n", "for", "i", "in", "range", "(", "n_blocks", ")", ":", "# add ResNet blocks", "\n", "\n", "            ", "model", "+=", "[", "\n", "ResnetBlock", "(", "ngf", "*", "mult", ",", "\n", "padding_type", "=", "padding_type", ",", "\n", "norm_layer", "=", "norm_layer", ",", "\n", "use_dropout", "=", "use_dropout", ",", "\n", "use_bias", "=", "use_bias", ")", "\n", "]", "\n", "\n", "", "for", "i", "in", "range", "(", "n_downsampling", ")", ":", "# add upsampling layers", "\n", "            ", "mult", "=", "2", "**", "(", "n_downsampling", "-", "i", ")", "\n", "model", "+=", "[", "\n", "nn", ".", "Conv2DTranspose", "(", "ngf", "*", "mult", ",", "\n", "int", "(", "ngf", "*", "mult", "/", "2", ")", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "output_padding", "=", "1", ",", "\n", "bias_attr", "=", "use_bias", ")", ",", "\n", "norm_layer", "(", "int", "(", "ngf", "*", "mult", "/", "2", ")", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", "\n", "", "model", "+=", "[", "nn", ".", "Pad2D", "(", "padding", "=", "[", "3", ",", "3", ",", "3", ",", "3", "]", ",", "mode", "=", "\"reflect\"", ")", "]", "\n", "model", "+=", "[", "nn", ".", "Conv2D", "(", "ngf", ",", "output_nc", ",", "kernel_size", "=", "7", ",", "padding", "=", "0", ")", "]", "\n", "model", "+=", "[", "nn", ".", "Tanh", "(", ")", "]", "\n", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.resnet.ResnetGenerator.forward": [[115, 118], ["resnet.ResnetGenerator.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"Standard forward\"\"\"", "\n", "return", "self", ".", "model", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.resnet.ResnetBlock.__init__": [[122, 133], ["paddle.Layer.__init__", "resnet.ResnetBlock.build_conv_block"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.resnet.ResnetBlock.build_conv_block"], ["def", "__init__", "(", "self", ",", "dim", ",", "padding_type", ",", "norm_layer", ",", "use_dropout", ",", "use_bias", ")", ":", "\n", "        ", "\"\"\"Initialize the Resnet block\n\n        A resnet block is a conv block with skip connections\n        We construct a conv block with build_conv_block function,\n        and implement skip connections in <forward> function.\n        Original Resnet paper: https://arxiv.org/pdf/1512.03385.pdf\n        \"\"\"", "\n", "super", "(", "ResnetBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv_block", "=", "self", ".", "build_conv_block", "(", "dim", ",", "padding_type", ",", "norm_layer", ",", "\n", "use_dropout", ",", "use_bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.resnet.ResnetBlock.build_conv_block": [[134, 179], ["paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "norm_layer", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "norm_layer", "paddle.Pad2D", "paddle.Pad2D", "NotImplementedError", "paddle.Dropout", "paddle.Dropout", "paddle.Pad2D", "paddle.Pad2D", "NotImplementedError"], "methods", ["None"], ["", "def", "build_conv_block", "(", "self", ",", "dim", ",", "padding_type", ",", "norm_layer", ",", "use_dropout", ",", "\n", "use_bias", ")", ":", "\n", "        ", "\"\"\"Construct a convolutional block.\n\n        Args:\n            dim (int): the number of channels in the conv layer.\n            padding_type (str): the name of padding layer: reflect | replicate | zero.\n            norm_layer (paddle.nn.Layer): normalization layer.\n            use_dropout (bool): whether to  use dropout layers.\n            use_bias (bool): whether to use the conv layer bias or not.\n\n        Returns a conv block (with a conv layer, a normalization layer, and a non-linearity layer (ReLU))\n        \"\"\"", "\n", "conv_block", "=", "[", "]", "\n", "p", "=", "0", "\n", "if", "padding_type", "in", "[", "'reflect'", ",", "'replicate'", "]", ":", "\n", "            ", "conv_block", "+=", "[", "nn", ".", "Pad2D", "(", "padding", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "padding_type", ")", "]", "\n", "", "elif", "padding_type", "==", "'zero'", ":", "\n", "            ", "p", "=", "1", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", "'padding [%s] is not implemented'", "%", "\n", "padding_type", ")", "\n", "\n", "", "conv_block", "+=", "[", "\n", "nn", ".", "Conv2D", "(", "dim", ",", "dim", ",", "kernel_size", "=", "3", ",", "padding", "=", "p", ",", "bias_attr", "=", "use_bias", ")", ",", "\n", "norm_layer", "(", "dim", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", "\n", "if", "use_dropout", ":", "\n", "            ", "conv_block", "+=", "[", "nn", ".", "Dropout", "(", "0.5", ")", "]", "\n", "\n", "", "p", "=", "0", "\n", "if", "padding_type", "in", "[", "'reflect'", ",", "'replicate'", "]", ":", "\n", "            ", "conv_block", "+=", "[", "nn", ".", "Pad2D", "(", "padding", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "padding_type", ")", "]", "\n", "", "elif", "padding_type", "==", "'zero'", ":", "\n", "            ", "p", "=", "1", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", "'padding [%s] is not implemented'", "%", "\n", "padding_type", ")", "\n", "", "conv_block", "+=", "[", "\n", "nn", ".", "Conv2D", "(", "dim", ",", "dim", ",", "kernel_size", "=", "3", ",", "padding", "=", "p", ",", "bias_attr", "=", "use_bias", ")", ",", "\n", "norm_layer", "(", "dim", ")", "\n", "]", "\n", "\n", "return", "nn", ".", "Sequential", "(", "*", "conv_block", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.resnet.ResnetBlock.forward": [[180, 184], ["resnet.ResnetBlock.conv_block"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"Forward function (with skip connections)\"\"\"", "\n", "out", "=", "x", "+", "self", ".", "conv_block", "(", "x", ")", "# add skip connections", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.builder.build_generator": [[21, 26], ["copy.deepcopy", "copy.deepcopy.pop", "GENERATORS.get"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get"], ["from", "paddle", ".", "io", "import", "DistributedBatchSampler", "\n", "\n", "from", ".", "repeat_dataset", "import", "RepeatDataset", "\n", "from", ".", ".", "utils", ".", "registry", "import", "Registry", ",", "build_from_config", "\n", "\n", "DATASETS", "=", "Registry", "(", "\"DATASETS\"", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.lesrcnn.MeanShift.__init__": [[13, 27], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "lesrcnn.MeanShift.shifter.weight.set_value", "lesrcnn.MeanShift.shifter.bias.set_value", "lesrcnn.MeanShift.shifter.parameters", "paddle.eye().reshape", "paddle.eye().reshape", "paddle.eye().reshape", "paddle.eye().reshape", "paddle.eye().reshape", "paddle.eye().reshape", "paddle.eye().reshape", "paddle.eye().reshape", "paddle.eye().reshape", "numpy.array().astype", "paddle.eye", "paddle.eye", "paddle.eye", "paddle.eye", "paddle.eye", "paddle.eye", "paddle.eye", "paddle.eye", "paddle.eye", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "mean_rgb", ",", "sub", ")", ":", "\n", "        ", "super", "(", "MeanShift", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "sign", "=", "-", "1", "if", "sub", "else", "1", "\n", "r", "=", "mean_rgb", "[", "0", "]", "*", "sign", "\n", "g", "=", "mean_rgb", "[", "1", "]", "*", "sign", "\n", "b", "=", "mean_rgb", "[", "2", "]", "*", "sign", "\n", "\n", "self", ".", "shifter", "=", "nn", ".", "Conv2D", "(", "3", ",", "3", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "shifter", ".", "weight", ".", "set_value", "(", "paddle", ".", "eye", "(", "3", ")", ".", "reshape", "(", "[", "3", ",", "3", ",", "1", ",", "1", "]", ")", ")", "\n", "self", ".", "shifter", ".", "bias", ".", "set_value", "(", "np", ".", "array", "(", "[", "r", ",", "g", ",", "b", "]", ")", ".", "astype", "(", "'float32'", ")", ")", "\n", "# Freeze the mean shift layer", "\n", "for", "params", "in", "self", ".", "shifter", ".", "parameters", "(", ")", ":", "\n", "            ", "params", ".", "trainable", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.lesrcnn.MeanShift.forward": [[28, 31], ["lesrcnn.MeanShift.shifter"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "shifter", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.lesrcnn.UpsampleBlock.__init__": [[34, 45], ["paddle.Layer.__init__", "lesrcnn._UpsampleBlock", "lesrcnn._UpsampleBlock", "lesrcnn._UpsampleBlock", "lesrcnn._UpsampleBlock"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_channels", ",", "scale", ",", "multi_scale", ",", "group", "=", "1", ")", ":", "\n", "        ", "super", "(", "UpsampleBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "multi_scale", ":", "\n", "            ", "self", ".", "up2", "=", "_UpsampleBlock", "(", "n_channels", ",", "scale", "=", "2", ",", "group", "=", "group", ")", "\n", "self", ".", "up3", "=", "_UpsampleBlock", "(", "n_channels", ",", "scale", "=", "3", ",", "group", "=", "group", ")", "\n", "self", ".", "up4", "=", "_UpsampleBlock", "(", "n_channels", ",", "scale", "=", "4", ",", "group", "=", "group", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "up", "=", "_UpsampleBlock", "(", "n_channels", ",", "scale", "=", "scale", ",", "group", "=", "group", ")", "\n", "\n", "", "self", ".", "multi_scale", "=", "multi_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.lesrcnn.UpsampleBlock.forward": [[46, 56], ["lesrcnn.UpsampleBlock.up", "lesrcnn.UpsampleBlock.up2", "lesrcnn.UpsampleBlock.up3", "lesrcnn.UpsampleBlock.up4"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "scale", ")", ":", "\n", "        ", "if", "self", ".", "multi_scale", ":", "\n", "            ", "if", "scale", "==", "2", ":", "\n", "                ", "return", "self", ".", "up2", "(", "x", ")", "\n", "", "elif", "scale", "==", "3", ":", "\n", "                ", "return", "self", ".", "up3", "(", "x", ")", "\n", "", "elif", "scale", "==", "4", ":", "\n", "                ", "return", "self", ".", "up4", "(", "x", ")", "\n", "", "", "else", ":", "\n", "            ", "return", "self", ".", "up", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.lesrcnn._UpsampleBlock.__init__": [[59, 76], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "range", "int", "math.log", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.PixelShuffle", "paddle.PixelShuffle", "paddle.PixelShuffle", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.PixelShuffle", "paddle.PixelShuffle", "paddle.PixelShuffle"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_channels", ",", "scale", ",", "group", "=", "1", ")", ":", "\n", "        ", "super", "(", "_UpsampleBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "modules", "=", "[", "]", "\n", "if", "scale", "==", "2", "or", "scale", "==", "4", "or", "scale", "==", "8", ":", "\n", "            ", "for", "_", "in", "range", "(", "int", "(", "math", ".", "log", "(", "scale", ",", "2", ")", ")", ")", ":", "\n", "                ", "modules", "+=", "[", "\n", "nn", ".", "Conv2D", "(", "n_channels", ",", "4", "*", "n_channels", ",", "3", ",", "1", ",", "1", ",", "groups", "=", "group", ")", "\n", "]", "\n", "modules", "+=", "[", "nn", ".", "PixelShuffle", "(", "2", ")", "]", "\n", "", "", "elif", "scale", "==", "3", ":", "\n", "            ", "modules", "+=", "[", "\n", "nn", ".", "Conv2D", "(", "n_channels", ",", "9", "*", "n_channels", ",", "3", ",", "1", ",", "1", ",", "groups", "=", "group", ")", "\n", "]", "\n", "modules", "+=", "[", "nn", ".", "PixelShuffle", "(", "3", ")", "]", "\n", "\n", "", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "modules", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.lesrcnn._UpsampleBlock.forward": [[77, 80], ["lesrcnn._UpsampleBlock.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "body", "(", "x", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.lesrcnn.LESRCNNGenerator.__init__": [[92, 272], ["paddle.Layer.__init__", "lesrcnn.MeanShift", "lesrcnn.MeanShift", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "lesrcnn.UpsampleBlock", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "\n", "self", ",", "\n", "scale", "=", "4", ",", "\n", "multi_scale", "=", "False", ",", "\n", "group", "=", "1", ",", "\n", ")", ":", "\n", "        ", "super", "(", "LESRCNNGenerator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "kernel_size", "=", "3", "\n", "kernel_size1", "=", "1", "\n", "padding1", "=", "0", "\n", "padding", "=", "1", "\n", "features", "=", "64", "\n", "groups", "=", "1", "\n", "channels", "=", "3", "\n", "features1", "=", "64", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "sub_mean", "=", "MeanShift", "(", "(", "0.4488", ",", "0.4371", ",", "0.4040", ")", ",", "sub", "=", "True", ")", "\n", "self", ".", "add_mean", "=", "MeanShift", "(", "(", "0.4488", ",", "0.4371", ",", "0.4040", ")", ",", "sub", "=", "False", ")", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "in_channels", "=", "channels", ",", "\n", "out_channels", "=", "features", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "padding", "=", "padding", ",", "\n", "groups", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "in_channels", "=", "features", ",", "\n", "out_channels", "=", "features", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "padding", "=", "1", ",", "\n", "groups", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "in_channels", "=", "features", ",", "\n", "out_channels", "=", "features", ",", "\n", "kernel_size", "=", "kernel_size1", ",", "\n", "padding", "=", "0", ",", "\n", "groups", "=", "groups", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "in_channels", "=", "features", ",", "\n", "out_channels", "=", "features", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "padding", "=", "1", ",", "\n", "groups", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "conv5", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "in_channels", "=", "features", ",", "\n", "out_channels", "=", "features", ",", "\n", "kernel_size", "=", "kernel_size1", ",", "\n", "padding", "=", "0", ",", "\n", "groups", "=", "groups", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "self", ".", "conv6", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "in_channels", "=", "features", ",", "\n", "out_channels", "=", "features", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "padding", "=", "1", ",", "\n", "groups", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "conv7", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "in_channels", "=", "features", ",", "\n", "out_channels", "=", "features", ",", "\n", "kernel_size", "=", "kernel_size1", ",", "\n", "padding", "=", "0", ",", "\n", "groups", "=", "groups", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "self", ".", "conv8", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "in_channels", "=", "features", ",", "\n", "out_channels", "=", "features", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "padding", "=", "1", ",", "\n", "groups", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "conv9", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "in_channels", "=", "features", ",", "\n", "out_channels", "=", "features", ",", "\n", "kernel_size", "=", "kernel_size1", ",", "\n", "padding", "=", "0", ",", "\n", "groups", "=", "groups", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "self", ".", "conv10", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "in_channels", "=", "features", ",", "\n", "out_channels", "=", "features", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "padding", "=", "1", ",", "\n", "groups", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "conv11", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "in_channels", "=", "features", ",", "\n", "out_channels", "=", "features", ",", "\n", "kernel_size", "=", "kernel_size1", ",", "\n", "padding", "=", "0", ",", "\n", "groups", "=", "groups", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "self", ".", "conv12", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "in_channels", "=", "features", ",", "\n", "out_channels", "=", "features", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "padding", "=", "1", ",", "\n", "groups", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "conv13", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "in_channels", "=", "features", ",", "\n", "out_channels", "=", "features", ",", "\n", "kernel_size", "=", "kernel_size1", ",", "\n", "padding", "=", "0", ",", "\n", "groups", "=", "groups", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "self", ".", "conv14", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "in_channels", "=", "features", ",", "\n", "out_channels", "=", "features", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "padding", "=", "1", ",", "\n", "groups", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "conv15", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "in_channels", "=", "features", ",", "\n", "out_channels", "=", "features", ",", "\n", "kernel_size", "=", "kernel_size1", ",", "\n", "padding", "=", "0", ",", "\n", "groups", "=", "groups", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "self", ".", "conv16", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "in_channels", "=", "features", ",", "\n", "out_channels", "=", "features", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "padding", "=", "1", ",", "\n", "groups", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "conv17", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "in_channels", "=", "features", ",", "\n", "out_channels", "=", "features", ",", "\n", "kernel_size", "=", "kernel_size1", ",", "\n", "padding", "=", "0", ",", "\n", "groups", "=", "groups", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "self", ".", "conv17_1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "in_channels", "=", "features", ",", "\n", "out_channels", "=", "features", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "padding", "=", "1", ",", "\n", "groups", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "conv17_2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "in_channels", "=", "features", ",", "\n", "out_channels", "=", "features", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "padding", "=", "1", ",", "\n", "groups", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "conv17_3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "in_channels", "=", "features", ",", "\n", "out_channels", "=", "features", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "padding", "=", "1", ",", "\n", "groups", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "conv17_4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "in_channels", "=", "features", ",", "\n", "out_channels", "=", "features", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "padding", "=", "1", ",", "\n", "groups", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "conv18", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "in_channels", "=", "features", ",", "\n", "out_channels", "=", "3", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "padding", "=", "padding", ",", "\n", "groups", "=", "groups", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "\n", "self", ".", "ReLU", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "upsample", "=", "UpsampleBlock", "(", "64", ",", "\n", "scale", "=", "scale", ",", "\n", "multi_scale", "=", "multi_scale", ",", "\n", "group", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.lesrcnn.LESRCNNGenerator.forward": [[273, 333], ["lesrcnn.LESRCNNGenerator.sub_mean", "lesrcnn.LESRCNNGenerator.conv1", "lesrcnn.LESRCNNGenerator.ReLU", "lesrcnn.LESRCNNGenerator.conv2", "lesrcnn.LESRCNNGenerator.conv3", "lesrcnn.LESRCNNGenerator.ReLU", "lesrcnn.LESRCNNGenerator.conv4", "lesrcnn.LESRCNNGenerator.conv5", "lesrcnn.LESRCNNGenerator.ReLU", "lesrcnn.LESRCNNGenerator.conv6", "lesrcnn.LESRCNNGenerator.conv7", "lesrcnn.LESRCNNGenerator.ReLU", "lesrcnn.LESRCNNGenerator.conv8", "lesrcnn.LESRCNNGenerator.conv9", "lesrcnn.LESRCNNGenerator.ReLU", "lesrcnn.LESRCNNGenerator.conv10", "lesrcnn.LESRCNNGenerator.conv11", "lesrcnn.LESRCNNGenerator.ReLU", "lesrcnn.LESRCNNGenerator.conv12", "lesrcnn.LESRCNNGenerator.conv13", "lesrcnn.LESRCNNGenerator.ReLU", "lesrcnn.LESRCNNGenerator.conv14", "lesrcnn.LESRCNNGenerator.conv15", "lesrcnn.LESRCNNGenerator.ReLU", "lesrcnn.LESRCNNGenerator.conv16", "lesrcnn.LESRCNNGenerator.conv17", "lesrcnn.LESRCNNGenerator.ReLU", "lesrcnn.LESRCNNGenerator.upsample", "lesrcnn.LESRCNNGenerator.upsample", "lesrcnn.LESRCNNGenerator.ReLU", "lesrcnn.LESRCNNGenerator.conv17_1", "lesrcnn.LESRCNNGenerator.conv17_2", "lesrcnn.LESRCNNGenerator.conv17_3", "lesrcnn.LESRCNNGenerator.conv17_4", "lesrcnn.LESRCNNGenerator.conv18", "lesrcnn.LESRCNNGenerator.add_mean"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.upsample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.upsample"], ["", "def", "forward", "(", "self", ",", "x", ",", "scale", "=", "None", ")", ":", "\n", "        ", "if", "scale", "is", "None", ":", "\n", "            ", "scale", "=", "self", ".", "scale", "\n", "\n", "", "x", "=", "self", ".", "sub_mean", "(", "x", ")", "\n", "\n", "x1", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x1_1", "=", "self", ".", "ReLU", "(", "x1", ")", "\n", "x2", "=", "self", ".", "conv2", "(", "x1_1", ")", "\n", "x3", "=", "self", ".", "conv3", "(", "x2", ")", "\n", "\n", "x2_3", "=", "x1", "+", "x3", "\n", "x2_4", "=", "self", ".", "ReLU", "(", "x2_3", ")", "\n", "x4", "=", "self", ".", "conv4", "(", "x2_4", ")", "\n", "x5", "=", "self", ".", "conv5", "(", "x4", ")", "\n", "x3_5", "=", "x2_3", "+", "x5", "\n", "\n", "x3_6", "=", "self", ".", "ReLU", "(", "x3_5", ")", "\n", "x6", "=", "self", ".", "conv6", "(", "x3_6", ")", "\n", "x7", "=", "self", ".", "conv7", "(", "x6", ")", "\n", "x7_1", "=", "x3_5", "+", "x7", "\n", "\n", "x7_2", "=", "self", ".", "ReLU", "(", "x7_1", ")", "\n", "x8", "=", "self", ".", "conv8", "(", "x7_2", ")", "\n", "x9", "=", "self", ".", "conv9", "(", "x8", ")", "\n", "x9_2", "=", "x7_1", "+", "x9", "\n", "\n", "x9_1", "=", "self", ".", "ReLU", "(", "x9_2", ")", "\n", "x10", "=", "self", ".", "conv10", "(", "x9_1", ")", "\n", "x11", "=", "self", ".", "conv11", "(", "x10", ")", "\n", "x11_1", "=", "x9_2", "+", "x11", "\n", "\n", "x11_2", "=", "self", ".", "ReLU", "(", "x11_1", ")", "\n", "x12", "=", "self", ".", "conv12", "(", "x11_2", ")", "\n", "x13", "=", "self", ".", "conv13", "(", "x12", ")", "\n", "x13_1", "=", "x11_1", "+", "x13", "\n", "\n", "x13_2", "=", "self", ".", "ReLU", "(", "x13_1", ")", "\n", "x14", "=", "self", ".", "conv14", "(", "x13_2", ")", "\n", "x15", "=", "self", ".", "conv15", "(", "x14", ")", "\n", "x15_1", "=", "x15", "+", "x13_1", "\n", "\n", "x15_2", "=", "self", ".", "ReLU", "(", "x15_1", ")", "\n", "x16", "=", "self", ".", "conv16", "(", "x15_2", ")", "\n", "x17", "=", "self", ".", "conv17", "(", "x16", ")", "\n", "x17_2", "=", "x17", "+", "x15_1", "\n", "\n", "x17_3", "=", "self", ".", "ReLU", "(", "x17_2", ")", "\n", "temp", "=", "self", ".", "upsample", "(", "x17_3", ",", "scale", "=", "scale", ")", "\n", "x1111", "=", "self", ".", "upsample", "(", "x1_1", ",", "scale", "=", "scale", ")", "\n", "temp1", "=", "x1111", "+", "temp", "\n", "temp2", "=", "self", ".", "ReLU", "(", "temp1", ")", "\n", "temp3", "=", "self", ".", "conv17_1", "(", "temp2", ")", "\n", "temp4", "=", "self", ".", "conv17_2", "(", "temp3", ")", "\n", "temp5", "=", "self", ".", "conv17_3", "(", "temp4", ")", "\n", "temp6", "=", "self", ".", "conv17_4", "(", "temp5", ")", "\n", "x18", "=", "self", ".", "conv18", "(", "temp6", ")", "\n", "out", "=", "self", ".", "add_mean", "(", "x18", ")", "\n", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.drn.MeanShift.__init__": [[21, 32], ["paddle.Conv2D.__init__", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "drn.MeanShift.weight.set_value", "drn.MeanShift.weight.set_value", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "drn.MeanShift.bias.set_value", "paddle.eye().reshape", "paddle.eye().reshape", "paddle.eye().reshape", "paddle.eye().reshape", "paddle.to_tensor.reshape", "paddle.to_tensor.reshape", "paddle.eye", "paddle.eye", "paddle.eye", "paddle.eye"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ",", "sign", "=", "-", "1", ")", ":", "\n", "        ", "super", "(", "MeanShift", ",", "self", ")", ".", "__init__", "(", "3", ",", "3", ",", "kernel_size", "=", "1", ")", "\n", "std", "=", "paddle", ".", "to_tensor", "(", "rgb_std", ")", "\n", "self", ".", "weight", ".", "set_value", "(", "paddle", ".", "eye", "(", "3", ")", ".", "reshape", "(", "[", "3", ",", "3", ",", "1", ",", "1", "]", ")", ")", "\n", "self", ".", "weight", ".", "set_value", "(", "self", ".", "weight", "/", "(", "std", ".", "reshape", "(", "[", "3", ",", "1", ",", "1", ",", "1", "]", ")", ")", ")", "\n", "\n", "mean", "=", "paddle", ".", "to_tensor", "(", "rgb_mean", ")", "\n", "self", ".", "bias", ".", "set_value", "(", "sign", "*", "rgb_range", "*", "mean", "/", "std", ")", "\n", "\n", "self", ".", "weight", ".", "trainable", "=", "False", "\n", "self", ".", "bias", ".", "trainable", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.drn.DownBlock.__init__": [[35, 84], ["paddle.Layer.__init__", "range", "dual_block.append", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "int", "dual_block.append", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.LeakyReLU", "paddle.LeakyReLU", "math.log2", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.LeakyReLU", "paddle.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["    ", "def", "__init__", "(", "self", ",", "\n", "negval", ",", "\n", "n_feats", ",", "\n", "n_colors", ",", "\n", "scale", ",", "\n", "nFeat", "=", "None", ",", "\n", "in_channels", "=", "None", ",", "\n", "out_channels", "=", "None", ")", ":", "\n", "        ", "super", "(", "DownBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "nFeat", "is", "None", ":", "\n", "            ", "nFeat", "=", "n_feats", "\n", "\n", "", "if", "in_channels", "is", "None", ":", "\n", "            ", "in_channels", "=", "n_colors", "\n", "\n", "", "if", "out_channels", "is", "None", ":", "\n", "            ", "out_channels", "=", "n_colors", "\n", "\n", "", "dual_block", "=", "[", "\n", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "in_channels", ",", "\n", "nFeat", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "negval", ")", ")", "\n", "]", "\n", "\n", "for", "_", "in", "range", "(", "1", ",", "int", "(", "math", ".", "log2", "(", "scale", ")", ")", ")", ":", "\n", "            ", "dual_block", ".", "append", "(", "\n", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "nFeat", ",", "\n", "nFeat", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "negval", ")", ")", ")", "\n", "\n", "", "dual_block", ".", "append", "(", "\n", "nn", ".", "Conv2D", "(", "nFeat", ",", "\n", "out_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "\n", "self", ".", "dual_module", "=", "nn", ".", "Sequential", "(", "*", "dual_block", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.drn.DownBlock.forward": [[85, 88], ["drn.DownBlock.dual_module"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "dual_module", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.drn.CALayer.__init__": [[92, 108], ["paddle.Layer.__init__", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Sigmoid", "paddle.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "reduction", "=", "16", ")", ":", "\n", "        ", "super", "(", "CALayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# global average pooling: feature --> point", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2D", "(", "1", ")", "\n", "# feature channel downscale and upscale --> channel weight", "\n", "self", ".", "conv_du", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "channel", ",", "\n", "channel", "//", "reduction", ",", "\n", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "True", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2D", "(", "channel", "//", "reduction", ",", "\n", "channel", ",", "\n", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "True", ")", ",", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.drn.CALayer.forward": [[109, 113], ["drn.CALayer.avg_pool", "drn.CALayer.conv_du"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "avg_pool", "(", "x", ")", "\n", "y", "=", "self", ".", "conv_du", "(", "y", ")", "\n", "return", "x", "*", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.drn.RCAB.__init__": [[116, 134], ["paddle.ReLU", "paddle.ReLU", "paddle.Layer.__init__", "range", "modules_body.append", "paddle.Sequential", "paddle.Sequential", "modules_body.append", "drn.CALayer", "conv", "modules_body.append", "modules_body.append", "paddle.BatchNorm2D", "paddle.BatchNorm2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["    ", "def", "__init__", "(", "self", ",", "\n", "conv", ",", "\n", "n_feat", ",", "\n", "kernel_size", ",", "\n", "reduction", "=", "16", ",", "\n", "bias", "=", "True", ",", "\n", "bn", "=", "False", ",", "\n", "act", "=", "nn", ".", "ReLU", "(", ")", ",", "\n", "res_scale", "=", "1", ")", ":", "\n", "        ", "super", "(", "RCAB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "modules_body", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "2", ")", ":", "\n", "            ", "modules_body", ".", "append", "(", "conv", "(", "n_feat", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "bias", ")", ")", "\n", "if", "bn", ":", "modules_body", ".", "append", "(", "nn", ".", "BatchNorm2D", "(", "n_feat", ")", ")", "\n", "if", "i", "==", "0", ":", "modules_body", ".", "append", "(", "act", ")", "\n", "", "modules_body", ".", "append", "(", "CALayer", "(", "n_feat", ",", "reduction", ")", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "modules_body", ")", "\n", "self", ".", "res_scale", "=", "res_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.drn.RCAB.forward": [[135, 139], ["drn.RCAB.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "self", ".", "body", "(", "x", ")", "\n", "res", "+=", "x", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.drn.Upsampler.__init__": [[142, 168], ["paddle.Sequential.__init__", "range", "int", "m.append", "m.append", "m.append", "m.append", "math.log", "conv", "paddle.PixelShuffle", "paddle.PixelShuffle", "m.append", "m.append", "conv", "paddle.PixelShuffle", "paddle.PixelShuffle", "m.append", "m.append", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.ReLU", "paddle.ReLU", "m.append", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.ReLU", "paddle.ReLU", "m.append", "paddle.PReLU", "paddle.PReLU", "paddle.PReLU", "paddle.PReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["    ", "def", "__init__", "(", "self", ",", "conv", ",", "scale", ",", "n_feats", ",", "bn", "=", "False", ",", "act", "=", "False", ",", "bias", "=", "True", ")", ":", "\n", "        ", "m", "=", "[", "]", "\n", "if", "(", "scale", "&", "(", "scale", "-", "1", ")", ")", "==", "0", ":", "# Is scale = 2^n?", "\n", "            ", "for", "_", "in", "range", "(", "int", "(", "math", ".", "log", "(", "scale", ",", "2", ")", ")", ")", ":", "\n", "                ", "m", ".", "append", "(", "conv", "(", "n_feats", ",", "4", "*", "n_feats", ",", "3", ",", "bias", ")", ")", "\n", "m", ".", "append", "(", "nn", ".", "PixelShuffle", "(", "2", ")", ")", "\n", "if", "bn", ":", "m", ".", "append", "(", "nn", ".", "BatchNorm2D", "(", "n_feats", ")", ")", "\n", "\n", "if", "act", "==", "'relu'", ":", "\n", "                    ", "m", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "", "elif", "act", "==", "'prelu'", ":", "\n", "                    ", "m", ".", "append", "(", "nn", ".", "PReLU", "(", "n_feats", ")", ")", "\n", "\n", "", "", "", "elif", "scale", "==", "3", ":", "\n", "            ", "m", ".", "append", "(", "conv", "(", "n_feats", ",", "9", "*", "n_feats", ",", "3", ",", "bias", ")", ")", "\n", "m", ".", "append", "(", "nn", ".", "PixelShuffle", "(", "3", ")", ")", "\n", "if", "bn", ":", "m", ".", "append", "(", "nn", ".", "BatchNorm2D", "(", "n_feats", ")", ")", "\n", "\n", "if", "act", "==", "'relu'", ":", "\n", "                ", "m", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "", "elif", "act", "==", "'prelu'", ":", "\n", "                ", "m", ".", "append", "(", "nn", ".", "PReLU", "(", "n_feats", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n", "", "super", "(", "Upsampler", ",", "self", ")", ".", "__init__", "(", "*", "m", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.drn.DRNGenerator.__init__": [[173, 245], ["paddle.Layer.__init__", "len", "paddle.ReLU", "paddle.ReLU", "paddle.Upsample", "paddle.Upsample", "drn.MeanShift", "conv", "paddle.LayerList", "paddle.LayerList", "up_body_blocks.insert", "range", "paddle.LayerList", "paddle.LayerList", "range", "range", "paddle.LayerList", "paddle.LayerList", "drn.MeanShift", "drn.DownBlock", "up.append", "drn.DRNGenerator.up_blocks.append", "conv", "tail.append", "max", "range", "drn.RCAB", "range", "drn.RCAB", "drn.Upsampler", "conv", "paddle.Sequential", "paddle.Sequential", "conv", "pow", "pow", "pow", "range", "range", "drn.Upsampler", "conv", "pow", "pow", "pow", "pow", "pow", "pow", "pow", "pow", "pow", "pow"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.insert", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv"], ["def", "__init__", "(", "\n", "self", ",", "\n", "scale", ",", "\n", "n_blocks", "=", "30", ",", "\n", "n_feats", "=", "16", ",", "\n", "n_colors", "=", "3", ",", "\n", "rgb_range", "=", "255", ",", "\n", "negval", "=", "0.2", ",", "\n", "kernel_size", "=", "3", ",", "\n", "conv", "=", "default_conv", ",", "\n", ")", ":", "\n", "        ", "super", "(", "DRNGenerator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "phase", "=", "len", "(", "scale", ")", "\n", "act", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "self", ".", "upsample", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "max", "(", "scale", ")", ",", "\n", "mode", "=", "'bicubic'", ",", "\n", "align_corners", "=", "False", ")", "\n", "\n", "rgb_mean", "=", "(", "0.4488", ",", "0.4371", ",", "0.4040", ")", "\n", "rgb_std", "=", "(", "1.0", ",", "1.0", ",", "1.0", ")", "\n", "self", ".", "sub_mean", "=", "MeanShift", "(", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ")", "\n", "\n", "self", ".", "head", "=", "conv", "(", "n_colors", ",", "n_feats", ",", "kernel_size", ")", "\n", "\n", "self", ".", "down", "=", "[", "\n", "DownBlock", "(", "negval", ",", "n_feats", ",", "n_colors", ",", "2", ",", "n_feats", "*", "pow", "(", "2", ",", "p", ")", ",", "\n", "n_feats", "*", "pow", "(", "2", ",", "p", ")", ",", "n_feats", "*", "pow", "(", "2", ",", "p", "+", "1", ")", ")", "\n", "for", "p", "in", "range", "(", "self", ".", "phase", ")", "\n", "]", "\n", "\n", "self", ".", "down", "=", "nn", ".", "LayerList", "(", "self", ".", "down", ")", "\n", "\n", "up_body_blocks", "=", "[", "[", "\n", "RCAB", "(", "conv", ",", "n_feats", "*", "pow", "(", "2", ",", "p", ")", ",", "kernel_size", ",", "act", "=", "act", ")", "\n", "for", "_", "in", "range", "(", "n_blocks", ")", "\n", "]", "for", "p", "in", "range", "(", "self", ".", "phase", ",", "1", ",", "-", "1", ")", "]", "\n", "\n", "up_body_blocks", ".", "insert", "(", "0", ",", "[", "\n", "RCAB", "(", "conv", ",", "n_feats", "*", "pow", "(", "2", ",", "self", ".", "phase", ")", ",", "kernel_size", ",", "act", "=", "act", ")", "\n", "for", "_", "in", "range", "(", "n_blocks", ")", "\n", "]", ")", "\n", "\n", "# The fisrt upsample block", "\n", "up", "=", "[", "[", "\n", "Upsampler", "(", "conv", ",", "2", ",", "n_feats", "*", "pow", "(", "2", ",", "self", ".", "phase", ")", ",", "act", "=", "False", ")", ",", "\n", "conv", "(", "n_feats", "*", "pow", "(", "2", ",", "self", ".", "phase", ")", ",", "\n", "n_feats", "*", "pow", "(", "2", ",", "self", ".", "phase", "-", "1", ")", ",", "\n", "kernel_size", "=", "1", ")", "\n", "]", "]", "\n", "\n", "# The rest upsample blocks", "\n", "for", "p", "in", "range", "(", "self", ".", "phase", "-", "1", ",", "0", ",", "-", "1", ")", ":", "\n", "            ", "up", ".", "append", "(", "[", "\n", "Upsampler", "(", "conv", ",", "2", ",", "2", "*", "n_feats", "*", "pow", "(", "2", ",", "p", ")", ",", "act", "=", "False", ")", ",", "\n", "conv", "(", "2", "*", "n_feats", "*", "pow", "(", "2", ",", "p", ")", ",", "\n", "n_feats", "*", "pow", "(", "2", ",", "p", "-", "1", ")", ",", "\n", "kernel_size", "=", "1", ")", "\n", "]", ")", "\n", "\n", "", "self", ".", "up_blocks", "=", "nn", ".", "LayerList", "(", ")", "\n", "for", "idx", "in", "range", "(", "self", ".", "phase", ")", ":", "\n", "            ", "self", ".", "up_blocks", ".", "append", "(", "nn", ".", "Sequential", "(", "*", "up_body_blocks", "[", "idx", "]", ",", "*", "up", "[", "idx", "]", ")", ")", "\n", "\n", "# tail conv that output sr imgs", "\n", "", "tail", "=", "[", "conv", "(", "n_feats", "*", "pow", "(", "2", ",", "self", ".", "phase", ")", ",", "n_colors", ",", "kernel_size", ")", "]", "\n", "for", "p", "in", "range", "(", "self", ".", "phase", ",", "0", ",", "-", "1", ")", ":", "\n", "            ", "tail", ".", "append", "(", "conv", "(", "n_feats", "*", "pow", "(", "2", ",", "p", ")", ",", "n_colors", ",", "kernel_size", ")", ")", "\n", "", "self", ".", "tail", "=", "nn", ".", "LayerList", "(", "tail", ")", "\n", "\n", "self", ".", "add_mean", "=", "MeanShift", "(", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.drn.DRNGenerator.forward": [[246, 284], ["drn.DRNGenerator.upsample", "drn.DRNGenerator.sub_mean", "drn.DRNGenerator.head", "range", "drn.DRNGenerator.add_mean", "range", "copies.append", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "drn.DRNGenerator.add_mean", "results.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.upsample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"Forward function.\n\n        Args:\n            x (Tensor): Input tensor with shape (n, c, h, w).\n\n        Returns:\n            Tensor: Forward results.\n        \"\"\"", "\n", "# upsample x to target sr size", "\n", "x", "=", "self", ".", "upsample", "(", "x", ")", "\n", "\n", "# preprocess", "\n", "x", "=", "self", ".", "sub_mean", "(", "x", ")", "\n", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "\n", "# down phases,", "\n", "copies", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "self", ".", "phase", ")", ":", "\n", "            ", "copies", ".", "append", "(", "x", ")", "\n", "x", "=", "self", ".", "down", "[", "idx", "]", "(", "x", ")", "\n", "\n", "# up phases", "\n", "", "sr", "=", "self", ".", "tail", "[", "0", "]", "(", "x", ")", "\n", "sr", "=", "self", ".", "add_mean", "(", "sr", ")", "\n", "results", "=", "[", "sr", "]", "\n", "for", "idx", "in", "range", "(", "self", ".", "phase", ")", ":", "\n", "# upsample to SR features", "\n", "            ", "x", "=", "self", ".", "up_blocks", "[", "idx", "]", "(", "x", ")", "\n", "# concat down features and upsample features", "\n", "x", "=", "paddle", ".", "concat", "(", "(", "x", ",", "copies", "[", "self", ".", "phase", "-", "idx", "-", "1", "]", ")", ",", "1", ")", "\n", "# output sr imgs", "\n", "sr", "=", "self", ".", "tail", "[", "idx", "+", "1", "]", "(", "x", ")", "\n", "sr", "=", "self", ".", "add_mean", "(", "sr", ")", "\n", "\n", "results", ".", "append", "(", "sr", ")", "\n", "\n", "", "return", "results", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.drn.default_conv": [[12, 18], ["paddle.Conv2D"], "function", ["None"], ["def", "default_conv", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "bias", "=", "True", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2D", "(", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "padding", "=", "(", "kernel_size", "//", "2", ")", ",", "\n", "bias_attr", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.occlusion_aware.OcclusionAwareGenerator.__init__": [[20, 161], ["paddle.nn.Layer.__init__", "paddle.nn.LayerList", "paddle.nn.LayerList", "paddle.nn.LayerList", "paddle.nn.LayerList", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "min", "modules.dense_motion.DenseMotionNetwork", "paddle.nn.Sequential", "paddle.nn.Sequential", "modules.first_order.SameBlock2d", "range", "range", "range", "range", "range", "range", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "modules.first_order.SameBlock2d", "modules.first_order.SameBlock2d", "modules.first_order.SameBlock2d", "min", "min", "down_blocks.append", "min", "min", "down_blocks.append", "min", "min", "up_blocks.append", "min", "min", "up_blocks.append", "occlusion_aware.OcclusionAwareGenerator.bottleneck.add_sublayer", "occlusion_aware.OcclusionAwareGenerator.bottleneck.add_sublayer", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "paddle.nn.ReLU", "paddle.nn.ReLU", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "paddle.nn.ReLU", "paddle.nn.ReLU", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "modules.first_order.MobileDownBlock2d", "modules.first_order.DownBlock2d", "modules.first_order.MobileUpBlock2d", "modules.first_order.UpBlock2d", "modules.first_order.MobileResBlock2d", "modules.first_order.ResBlock2d", "str", "str", "paddle.nn.initializer.KaimingUniform", "paddle.nn.initializer.KaimingUniform", "paddle.nn.initializer.KaimingUniform", "paddle.nn.initializer.KaimingUniform", "paddle.nn.initializer.KaimingUniform", "paddle.nn.initializer.KaimingUniform"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["def", "__init__", "(", "self", ",", "\n", "num_channels", ",", "\n", "num_kp", ",", "\n", "block_expansion", ",", "\n", "max_features", ",", "\n", "num_down_blocks", ",", "\n", "num_bottleneck_blocks", ",", "\n", "estimate_occlusion_map", "=", "False", ",", "\n", "dense_motion_params", "=", "None", ",", "\n", "estimate_jacobian", "=", "False", ",", "\n", "inference", "=", "False", ",", "\n", "mobile_net", "=", "False", ")", ":", "\n", "        ", "super", "(", "OcclusionAwareGenerator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "dense_motion_params", "is", "not", "None", ":", "\n", "            ", "self", ".", "dense_motion_network", "=", "DenseMotionNetwork", "(", "\n", "num_kp", "=", "num_kp", ",", "\n", "num_channels", "=", "num_channels", ",", "\n", "estimate_occlusion_map", "=", "estimate_occlusion_map", ",", "\n", "**", "dense_motion_params", ",", "\n", "mobile_net", "=", "mobile_net", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "dense_motion_network", "=", "None", "\n", "\n", "", "if", "mobile_net", ":", "\n", "            ", "self", ".", "first", "=", "nn", ".", "Sequential", "(", "\n", "SameBlock2d", "(", "num_channels", ",", "\n", "num_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "\n", "mobile_net", "=", "mobile_net", ")", ",", "\n", "SameBlock2d", "(", "num_channels", ",", "\n", "num_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "\n", "mobile_net", "=", "mobile_net", ")", ",", "\n", "SameBlock2d", "(", "num_channels", ",", "\n", "block_expansion", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "\n", "mobile_net", "=", "mobile_net", ")", "\n", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "first", "=", "SameBlock2d", "(", "num_channels", ",", "\n", "block_expansion", ",", "\n", "kernel_size", "=", "(", "7", ",", "7", ")", ",", "\n", "padding", "=", "(", "3", ",", "3", ")", ",", "\n", "mobile_net", "=", "mobile_net", ")", "\n", "\n", "", "down_blocks", "=", "[", "]", "\n", "if", "mobile_net", ":", "\n", "            ", "for", "i", "in", "range", "(", "num_down_blocks", ")", ":", "\n", "                ", "in_features", "=", "min", "(", "max_features", ",", "block_expansion", "*", "(", "2", "**", "i", ")", ")", "\n", "out_features", "=", "min", "(", "max_features", ",", "block_expansion", "*", "(", "2", "**", "(", "i", "+", "1", ")", ")", ")", "\n", "down_blocks", ".", "append", "(", "\n", "MobileDownBlock2d", "(", "in_features", ",", "\n", "out_features", ",", "\n", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "\n", "padding", "=", "(", "1", ",", "1", ")", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "for", "i", "in", "range", "(", "num_down_blocks", ")", ":", "\n", "                ", "in_features", "=", "min", "(", "max_features", ",", "block_expansion", "*", "(", "2", "**", "i", ")", ")", "\n", "out_features", "=", "min", "(", "max_features", ",", "block_expansion", "*", "(", "2", "**", "(", "i", "+", "1", ")", ")", ")", "\n", "down_blocks", ".", "append", "(", "\n", "DownBlock2d", "(", "in_features", ",", "\n", "out_features", ",", "\n", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "\n", "padding", "=", "(", "1", ",", "1", ")", ")", ")", "\n", "", "", "self", ".", "down_blocks", "=", "nn", ".", "LayerList", "(", "down_blocks", ")", "\n", "\n", "up_blocks", "=", "[", "]", "\n", "if", "mobile_net", ":", "\n", "            ", "for", "i", "in", "range", "(", "num_down_blocks", ")", ":", "\n", "                ", "in_features", "=", "min", "(", "max_features", ",", "\n", "block_expansion", "*", "(", "2", "**", "(", "num_down_blocks", "-", "i", ")", ")", ")", "\n", "out_features", "=", "min", "(", "\n", "max_features", ",", "\n", "block_expansion", "*", "(", "2", "**", "(", "num_down_blocks", "-", "i", "-", "1", ")", ")", ")", "\n", "up_blocks", ".", "append", "(", "\n", "MobileUpBlock2d", "(", "in_features", ",", "\n", "out_features", ",", "\n", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "\n", "padding", "=", "(", "1", ",", "1", ")", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "for", "i", "in", "range", "(", "num_down_blocks", ")", ":", "\n", "                ", "in_features", "=", "min", "(", "max_features", ",", "\n", "block_expansion", "*", "(", "2", "**", "(", "num_down_blocks", "-", "i", ")", ")", ")", "\n", "out_features", "=", "min", "(", "\n", "max_features", ",", "\n", "block_expansion", "*", "(", "2", "**", "(", "num_down_blocks", "-", "i", "-", "1", ")", ")", ")", "\n", "up_blocks", ".", "append", "(", "\n", "UpBlock2d", "(", "in_features", ",", "\n", "out_features", ",", "\n", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "\n", "padding", "=", "(", "1", ",", "1", ")", ")", ")", "\n", "", "", "self", ".", "up_blocks", "=", "nn", ".", "LayerList", "(", "up_blocks", ")", "\n", "\n", "self", ".", "bottleneck", "=", "paddle", ".", "nn", ".", "Sequential", "(", ")", "\n", "in_features", "=", "min", "(", "max_features", ",", "block_expansion", "*", "(", "2", "**", "num_down_blocks", ")", ")", "\n", "if", "mobile_net", ":", "\n", "            ", "for", "i", "in", "range", "(", "num_bottleneck_blocks", ")", ":", "\n", "                ", "self", ".", "bottleneck", ".", "add_sublayer", "(", "\n", "'r'", "+", "str", "(", "i", ")", ",", "\n", "MobileResBlock2d", "(", "in_features", ",", "\n", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "\n", "padding", "=", "(", "1", ",", "1", ")", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "for", "i", "in", "range", "(", "num_bottleneck_blocks", ")", ":", "\n", "                ", "self", ".", "bottleneck", ".", "add_sublayer", "(", "\n", "'r'", "+", "str", "(", "i", ")", ",", "\n", "ResBlock2d", "(", "in_features", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", ")", "\n", "", "", "if", "mobile_net", ":", "\n", "            ", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "block_expansion", ",", "\n", "block_expansion", ",", "\n", "kernel_size", "=", "3", ",", "\n", "weight_attr", "=", "nn", ".", "initializer", ".", "KaimingUniform", "(", ")", ",", "\n", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2D", "(", "block_expansion", ",", "\n", "block_expansion", ",", "\n", "kernel_size", "=", "3", ",", "\n", "weight_attr", "=", "nn", ".", "initializer", ".", "KaimingUniform", "(", ")", ",", "\n", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2D", "(", "block_expansion", ",", "\n", "num_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "weight_attr", "=", "nn", ".", "initializer", ".", "KaimingUniform", "(", ")", ",", "\n", "padding", "=", "1", ")", "\n", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "final", "=", "nn", ".", "Conv2D", "(", "block_expansion", ",", "\n", "num_channels", ",", "\n", "kernel_size", "=", "(", "7", ",", "7", ")", ",", "\n", "padding", "=", "(", "3", ",", "3", ")", ")", "\n", "", "self", ".", "estimate_occlusion_map", "=", "estimate_occlusion_map", "\n", "self", ".", "num_channels", "=", "num_channels", "\n", "self", ".", "inference", "=", "inference", "\n", "self", ".", "pad", "=", "5", "\n", "self", ".", "mobile_net", "=", "mobile_net", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.occlusion_aware.OcclusionAwareGenerator.deform_input": [[162, 191], ["paddle.grid_sample", "paddle.grid_sample", "deformation.transpose.transpose.transpose", "paddle.interpolate", "paddle.interpolate", "deformation.transpose.transpose.transpose", "modules.first_order.make_coordinate_grid", "identity_grid.reshape.reshape.reshape", "numpy.zeros().astype", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "gauss_kernel.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "cv2.GaussianBlur", "numpy.zeros", "gauss_kernel.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.first_order.make_coordinate_grid"], ["", "def", "deform_input", "(", "self", ",", "inp", ",", "deformation", ")", ":", "\n", "        ", "_", ",", "h_old", ",", "w_old", ",", "_", "=", "deformation", ".", "shape", "\n", "_", ",", "_", ",", "h", ",", "w", "=", "inp", ".", "shape", "\n", "if", "h_old", "!=", "h", "or", "w_old", "!=", "w", ":", "\n", "            ", "deformation", "=", "deformation", ".", "transpose", "(", "[", "0", ",", "3", ",", "1", ",", "2", "]", ")", "\n", "deformation", "=", "F", ".", "interpolate", "(", "deformation", ",", "\n", "size", "=", "(", "h", ",", "w", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "False", ")", "\n", "deformation", "=", "deformation", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "\n", "", "if", "self", ".", "inference", ":", "\n", "            ", "identity_grid", "=", "make_coordinate_grid", "(", "(", "h", ",", "w", ")", ",", "type", "=", "inp", ".", "dtype", ")", "\n", "identity_grid", "=", "identity_grid", ".", "reshape", "(", "[", "1", ",", "h", ",", "w", ",", "2", "]", ")", "\n", "visualization_matrix", "=", "np", ".", "zeros", "(", "(", "h", ",", "w", ")", ")", ".", "astype", "(", "\"float32\"", ")", "\n", "visualization_matrix", "[", "self", ".", "pad", ":", "h", "-", "self", ".", "pad", ",", "\n", "self", ".", "pad", ":", "w", "-", "self", ".", "pad", "]", "=", "1.0", "\n", "gauss_kernel", "=", "paddle", ".", "to_tensor", "(", "\n", "cv2", ".", "GaussianBlur", "(", "visualization_matrix", ",", "(", "9", ",", "9", ")", ",", "\n", "0.0", ",", "\n", "borderType", "=", "cv2", ".", "BORDER_ISOLATED", ")", ")", "\n", "gauss_kernel", "=", "gauss_kernel", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "deformation", "=", "gauss_kernel", "*", "deformation", "+", "(", "\n", "1", "-", "gauss_kernel", ")", "*", "identity_grid", "\n", "\n", "", "return", "F", ".", "grid_sample", "(", "inp", ",", "\n", "deformation", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "padding_mode", "=", "'zeros'", ",", "\n", "align_corners", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.occlusion_aware.OcclusionAwareGenerator.forward": [[192, 243], ["occlusion_aware.OcclusionAwareGenerator.first", "range", "occlusion_aware.OcclusionAwareGenerator.bottleneck", "range", "occlusion_aware.OcclusionAwareGenerator.final", "paddle.sigmoid", "paddle.sigmoid", "len", "occlusion_aware.OcclusionAwareGenerator.dense_motion_network", "occlusion_aware.OcclusionAwareGenerator.deform_input", "occlusion_aware.OcclusionAwareGenerator.deform_input", "len", "paddle.interpolate", "paddle.interpolate"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.occlusion_aware.OcclusionAwareGenerator.deform_input", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.occlusion_aware.OcclusionAwareGenerator.deform_input"], ["", "def", "forward", "(", "self", ",", "source_image", ",", "kp_driving", ",", "kp_source", ")", ":", "\n", "# Encoding (downsampling) part", "\n", "        ", "out", "=", "self", ".", "first", "(", "source_image", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "down_blocks", ")", ")", ":", "\n", "            ", "out", "=", "self", ".", "down_blocks", "[", "i", "]", "(", "out", ")", "\n", "\n", "# Transforming feature representation according to deformation and occlusion", "\n", "", "output_dict", "=", "{", "}", "\n", "if", "self", ".", "dense_motion_network", "is", "not", "None", ":", "\n", "            ", "dense_motion", "=", "self", ".", "dense_motion_network", "(", "source_image", "=", "source_image", ",", "\n", "kp_driving", "=", "kp_driving", ",", "\n", "kp_source", "=", "kp_source", ")", "\n", "output_dict", "[", "'mask'", "]", "=", "dense_motion", "[", "'mask'", "]", "\n", "output_dict", "[", "'sparse_deformed'", "]", "=", "dense_motion", "[", "'sparse_deformed'", "]", "\n", "\n", "if", "'occlusion_map'", "in", "dense_motion", ":", "\n", "                ", "occlusion_map", "=", "dense_motion", "[", "'occlusion_map'", "]", "\n", "output_dict", "[", "'occlusion_map'", "]", "=", "occlusion_map", "\n", "", "else", ":", "\n", "                ", "occlusion_map", "=", "None", "\n", "", "deformation", "=", "dense_motion", "[", "'deformation'", "]", "\n", "out", "=", "self", ".", "deform_input", "(", "out", ",", "deformation", ")", "\n", "\n", "if", "occlusion_map", "is", "not", "None", ":", "\n", "                ", "if", "out", ".", "shape", "[", "2", "]", "!=", "occlusion_map", ".", "shape", "[", "2", "]", "or", "out", ".", "shape", "[", "\n", "3", "]", "!=", "occlusion_map", ".", "shape", "[", "3", "]", ":", "\n", "                    ", "occlusion_map", "=", "F", ".", "interpolate", "(", "occlusion_map", ",", "\n", "size", "=", "out", ".", "shape", "[", "2", ":", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "False", ")", "\n", "", "if", "self", ".", "inference", "and", "not", "self", ".", "mobile_net", ":", "\n", "                    ", "h", ",", "w", "=", "occlusion_map", ".", "shape", "[", "2", ":", "]", "\n", "occlusion_map", "[", ":", ",", ":", ",", "0", ":", "self", ".", "pad", ",", ":", "]", "=", "1.0", "\n", "occlusion_map", "[", ":", ",", ":", ",", ":", ",", "0", ":", "self", ".", "pad", "]", "=", "1.0", "\n", "occlusion_map", "[", ":", ",", ":", ",", "h", "-", "self", ".", "pad", ":", "h", ",", ":", "]", "=", "1.0", "\n", "occlusion_map", "[", ":", ",", ":", ",", ":", ",", "w", "-", "self", ".", "pad", ":", "w", "]", "=", "1.0", "\n", "", "out", "=", "out", "*", "occlusion_map", "\n", "\n", "", "output_dict", "[", "\"deformed\"", "]", "=", "self", ".", "deform_input", "(", "source_image", ",", "\n", "deformation", ")", "\n", "\n", "# Decoding part", "\n", "", "out", "=", "self", ".", "bottleneck", "(", "out", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "up_blocks", ")", ")", ":", "\n", "            ", "out", "=", "self", ".", "up_blocks", "[", "i", "]", "(", "out", ")", "\n", "", "out", "=", "self", ".", "final", "(", "out", ")", "\n", "out", "=", "F", ".", "sigmoid", "(", "out", ")", "\n", "\n", "output_dict", "[", "\"prediction\"", "]", "=", "out", "\n", "\n", "return", "output_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_singan.ConvBlock.__init__": [[24, 29], ["paddle.Sequential.__init__", "generator_singan.ConvBlock.add_sublayer", "generator_singan.ConvBlock.add_sublayer", "generator_singan.ConvBlock.add_sublayer", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "out_channel", ",", "ker_size", ",", "padd", ",", "stride", ")", ":", "\n", "        ", "super", "(", "ConvBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "add_sublayer", "(", "'conv'", ",", "nn", ".", "Conv2D", "(", "in_channel", ",", "out_channel", ",", "ker_size", ",", "stride", ",", "padd", ")", ")", ",", "\n", "self", ".", "add_sublayer", "(", "'norm'", ",", "nn", ".", "BatchNorm2D", "(", "out_channel", ")", ")", ",", "\n", "self", ".", "add_sublayer", "(", "'LeakyRelu'", ",", "nn", ".", "LeakyReLU", "(", "0.2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_singan.GeneratorConcatSkip2CleanAdd.__init__": [[31, 42], ["paddle.Layer.__init__", "generator_singan.ConvBlock", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "range", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "int", "generator_singan.ConvBlock", "generator_singan.GeneratorConcatSkip2CleanAdd.body.add_sublayer", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Tanh", "paddle.Tanh", "paddle.Tanh", "max", "max", "max", "pow"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nfc", "=", "32", ",", "min_nfc", "=", "32", ",", "input_nc", "=", "3", ",", "num_layers", "=", "5", ",", "ker_size", "=", "3", ",", "padd_size", "=", "0", ")", ":", "\n", "        ", "super", "(", "GeneratorConcatSkip2CleanAdd", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "head", "=", "ConvBlock", "(", "input_nc", ",", "nfc", ",", "ker_size", ",", "padd_size", ",", "1", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", ")", "\n", "for", "i", "in", "range", "(", "num_layers", "-", "2", ")", ":", "\n", "            ", "N", "=", "int", "(", "nfc", "/", "pow", "(", "2", ",", "i", "+", "1", ")", ")", "\n", "block", "=", "ConvBlock", "(", "max", "(", "2", "*", "N", ",", "min_nfc", ")", ",", "max", "(", "N", ",", "min_nfc", ")", ",", "ker_size", ",", "padd_size", ",", "1", ")", "\n", "self", ".", "body", ".", "add_sublayer", "(", "'block%d'", "%", "(", "i", "+", "1", ")", ",", "block", ")", "\n", "", "self", ".", "tail", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "max", "(", "N", ",", "min_nfc", ")", ",", "input_nc", ",", "ker_size", ",", "1", ",", "padd_size", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_singan.GeneratorConcatSkip2CleanAdd.forward": [[42, 49], ["generator_singan.GeneratorConcatSkip2CleanAdd.head", "generator_singan.GeneratorConcatSkip2CleanAdd.body", "generator_singan.GeneratorConcatSkip2CleanAdd.tail", "int"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "x", "=", "self", ".", "body", "(", "x", ")", "\n", "x", "=", "self", ".", "tail", "(", "x", ")", "\n", "ind", "=", "int", "(", "(", "y", ".", "shape", "[", "2", "]", "-", "x", ".", "shape", "[", "2", "]", ")", "/", "2", ")", "\n", "y", "=", "y", "[", ":", ",", ":", ",", "ind", ":", "(", "y", ".", "shape", "[", "2", "]", "-", "ind", ")", ",", "ind", ":", "(", "y", ".", "shape", "[", "3", "]", "-", "ind", ")", "]", "\n", "return", "x", "+", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_singan.SinGANGenerator.__init__": [[52, 90], ["paddle.Layer.__init__", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "int", "paddle.Pad2D", "paddle.Pad2D", "paddle.Pad2D", "paddle.Pad2D", "paddle.Pad2D", "paddle.Pad2D", "generator_singan.SinGANGenerator.register_buffer", "generator_singan.SinGANGenerator.register_buffer", "generator_singan.SinGANGenerator.register_buffer", "generator_singan.SinGANGenerator.register_buffer", "generator_singan.SinGANGenerator.register_buffer", "generator_singan.SinGANGenerator.register_buffer", "generator_singan.SinGANGenerator.register_buffer", "generator_singan.SinGANGenerator.register_buffer", "generator_singan.SinGANGenerator.register_buffer", "generator_singan.SinGANGenerator.register_buffer", "min", "min", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.ones", "paddle.ones", "paddle.ones", "paddle.ones", "paddle.ones", "paddle.ones", "paddle.ones", "paddle.ones", "paddle.ones", "paddle.ones", "paddle.ones", "paddle.ones", "paddle.ones", "paddle.ones", "paddle.ones", "paddle.ones", "paddle.ones", "paddle.ones", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "range", "range", "generator_singan.GeneratorConcatSkip2CleanAdd", "pow", "pow", "zip", "paddle.pad", "paddle.pad", "paddle.pad", "math.floor", "math.floor", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "scale_num", ",", "\n", "coarsest_shape", ",", "\n", "nfc_init", "=", "32", ",", "\n", "min_nfc_init", "=", "32", ",", "\n", "input_nc", "=", "3", ",", "\n", "num_layers", "=", "5", ",", "\n", "ker_size", "=", "3", ",", "\n", "noise_zero_pad", "=", "True", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "nfc_list", "=", "[", "min", "(", "nfc_init", "*", "pow", "(", "2", ",", "math", ".", "floor", "(", "i", "/", "4", ")", ")", ",", "128", ")", "for", "i", "in", "range", "(", "scale_num", ")", "]", "\n", "min_nfc_list", "=", "[", "min", "(", "min_nfc_init", "*", "pow", "(", "2", ",", "math", ".", "floor", "(", "i", "/", "4", ")", ")", ",", "128", ")", "for", "i", "in", "range", "(", "scale_num", ")", "]", "\n", "self", ".", "generators", "=", "nn", ".", "LayerList", "(", "[", "\n", "GeneratorConcatSkip2CleanAdd", "(", "\n", "nfc", ",", "min_nfc", ",", "input_nc", ",", "num_layers", ",", "\n", "ker_size", ",", "0", "\n", ")", "for", "nfc", ",", "min_nfc", "in", "zip", "(", "nfc_list", ",", "min_nfc_list", ")", "]", ")", "\n", "self", ".", "_scale_num", "=", "scale_num", "\n", "self", ".", "_pad_size", "=", "int", "(", "(", "ker_size", "-", "1", ")", "/", "2", "*", "num_layers", ")", "\n", "self", ".", "noise_pad", "=", "nn", ".", "Pad2D", "(", "self", ".", "_pad_size", "if", "noise_zero_pad", "else", "0", ")", "\n", "self", ".", "image_pad", "=", "nn", ".", "Pad2D", "(", "self", ".", "_pad_size", ")", "\n", "self", ".", "_noise_zero_pad", "=", "noise_zero_pad", "\n", "self", ".", "_coarsest_shape", "=", "coarsest_shape", "\n", "self", ".", "register_buffer", "(", "'scale_num'", ",", "paddle", ".", "to_tensor", "(", "scale_num", ",", "'int32'", ")", ",", "True", ")", "\n", "self", ".", "register_buffer", "(", "'coarsest_shape'", ",", "paddle", ".", "to_tensor", "(", "coarsest_shape", ",", "'int32'", ")", ",", "True", ")", "\n", "self", ".", "register_buffer", "(", "'nfc_init'", ",", "paddle", ".", "to_tensor", "(", "nfc_init", ",", "'int32'", ")", ",", "True", ")", "\n", "self", ".", "register_buffer", "(", "'min_nfc_init'", ",", "paddle", ".", "to_tensor", "(", "min_nfc_init", ",", "'int32'", ")", ",", "True", ")", "\n", "self", ".", "register_buffer", "(", "'num_layers'", ",", "paddle", ".", "to_tensor", "(", "num_layers", ",", "'int32'", ")", ",", "True", ")", "\n", "self", ".", "register_buffer", "(", "'ker_size'", ",", "paddle", ".", "to_tensor", "(", "ker_size", ",", "'int32'", ")", ",", "True", ")", "\n", "self", ".", "register_buffer", "(", "'noise_zero_pad'", ",", "paddle", ".", "to_tensor", "(", "noise_zero_pad", ",", "'bool'", ")", ",", "True", ")", "\n", "self", ".", "register_buffer", "(", "'sigma'", ",", "paddle", ".", "ones", "(", "[", "scale_num", "]", ")", ",", "True", ")", "\n", "self", ".", "register_buffer", "(", "'scale_factor'", ",", "paddle", ".", "ones", "(", "[", "1", "]", ")", ",", "True", ")", "\n", "self", ".", "register_buffer", "(", "\n", "'z_fixed'", ",", "\n", "paddle", ".", "randn", "(", "\n", "F", ".", "pad", "(", "\n", "paddle", ".", "zeros", "(", "coarsest_shape", ")", ",", "\n", "[", "0", "if", "noise_zero_pad", "else", "self", ".", "_pad_size", "]", "*", "4", ")", ".", "shape", ")", ",", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_singan.SinGANGenerator.forward": [[91, 106], ["enumerate", "range", "generator_singan.SinGANGenerator.image_pad", "generator_singan.SinGANGenerator.noise_pad", "z.detach", "paddle.interpolate.detach", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.pad", "paddle.pad", "paddle.pad"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z_pyramid", ",", "x_prev", ",", "stop_scale", ",", "start_scale", "=", "0", ")", ":", "\n", "        ", "stop_scale", "%=", "self", ".", "_scale_num", "\n", "start_scale", "%=", "self", ".", "_scale_num", "\n", "for", "i", ",", "scale", "in", "enumerate", "(", "range", "(", "start_scale", ",", "stop_scale", "+", "1", ")", ")", ":", "\n", "            ", "x_prev", "=", "self", ".", "image_pad", "(", "x_prev", ")", "\n", "z", "=", "self", ".", "noise_pad", "(", "z_pyramid", "[", "i", "]", "*", "self", ".", "sigma", "[", "scale", "]", ")", "+", "x_prev", "\n", "x_prev", "=", "self", ".", "generators", "[", "scale", "]", "(", "\n", "z", ".", "detach", "(", ")", ",", "\n", "x_prev", ".", "detach", "(", ")", "\n", ")", "\n", "if", "scale", "<", "stop_scale", ":", "\n", "                ", "x_prev", "=", "F", ".", "interpolate", "(", "x_prev", ",", "\n", "F", ".", "pad", "(", "z_pyramid", "[", "i", "+", "1", "]", ",", "[", "0", "if", "self", ".", "_noise_zero_pad", "else", "-", "self", ".", "_pad_size", "]", "*", "4", ")", ".", "shape", "[", "-", "2", ":", "]", ",", "\n", "None", ",", "'bicubic'", ")", "\n", "", "", "return", "x_prev", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.resnet_ugatit_p2c.ResnetUGATITP2CGenerator.__init__": [[28, 137], ["paddle.Layer.__init__", "range", "range", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "range", "range", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Pad2D", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.InstanceNorm2D", "paddle.InstanceNorm2D", "paddle.InstanceNorm2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "resnet_ugatit_p2c.HourGlass", "resnet_ugatit_p2c.HourGlass", "setattr", "setattr", "resnet_ugatit_p2c.HourGlass", "resnet_ugatit_p2c.HourGlass", "paddle.Pad2D", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Tanh", "paddle.Tanh", "paddle.Tanh", "paddle.Pad2D", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.InstanceNorm2D", "paddle.InstanceNorm2D", "paddle.InstanceNorm2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "resnet_ugatit_p2c.ResnetBlock", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "resnet_ugatit_p2c.ResnetSoftAdaLINBlock", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "paddle.Pad2D", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "resnet_ugatit_p2c.LIN", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "str", "str"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "input_nc", "=", "3", ",", "\n", "output_nc", "=", "3", ",", "\n", "ngf", "=", "32", ",", "\n", "img_size", "=", "256", ",", "\n", "n_blocks", "=", "4", ",", "\n", "light", "=", "True", ")", ":", "\n", "        ", "super", "(", "ResnetUGATITP2CGenerator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "input_nc", "=", "input_nc", "\n", "self", ".", "output_nc", "=", "output_nc", "\n", "self", ".", "ngf", "=", "ngf", "\n", "self", ".", "n_blocks", "=", "n_blocks", "\n", "self", ".", "img_size", "=", "img_size", "\n", "self", ".", "light", "=", "light", "\n", "\n", "DownBlock", "=", "[", "]", "\n", "DownBlock", "+=", "[", "\n", "nn", ".", "Pad2D", "(", "[", "3", ",", "3", ",", "3", ",", "3", "]", ",", "'reflect'", ")", ",", "\n", "nn", ".", "Conv2D", "(", "input_nc", ",", "ngf", ",", "kernel_size", "=", "7", ",", "stride", "=", "1", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "InstanceNorm2D", "(", "ngf", ",", "weight_attr", "=", "False", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", "\n", "\n", "DownBlock", "+=", "[", "HourGlass", "(", "ngf", ",", "ngf", ")", ",", "HourGlass", "(", "ngf", ",", "ngf", ")", "]", "\n", "\n", "# Down-Sampling", "\n", "n_downsampling", "=", "2", "\n", "for", "i", "in", "range", "(", "n_downsampling", ")", ":", "\n", "            ", "mult", "=", "2", "**", "i", "\n", "DownBlock", "+=", "[", "\n", "nn", ".", "Pad2D", "(", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "'reflect'", ")", ",", "\n", "nn", ".", "Conv2D", "(", "ngf", "*", "mult", ",", "\n", "ngf", "*", "mult", "*", "2", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "InstanceNorm2D", "(", "ngf", "*", "mult", "*", "2", ",", "\n", "weight_attr", "=", "False", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", "\n", "\n", "# Encoder Bottleneck", "\n", "", "mult", "=", "2", "**", "n_downsampling", "\n", "for", "i", "in", "range", "(", "n_blocks", ")", ":", "\n", "            ", "setattr", "(", "self", ",", "'EncodeBlock'", "+", "str", "(", "i", "+", "1", ")", ",", "ResnetBlock", "(", "ngf", "*", "mult", ")", ")", "\n", "\n", "# Class Activation Map", "\n", "", "self", ".", "gap_fc", "=", "nn", ".", "Linear", "(", "ngf", "*", "mult", ",", "1", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "gmp_fc", "=", "nn", ".", "Linear", "(", "ngf", "*", "mult", ",", "1", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "conv1x1", "=", "nn", ".", "Conv2D", "(", "ngf", "*", "mult", "*", "2", ",", "\n", "ngf", "*", "mult", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "# Gamma, Beta block", "\n", "FC", "=", "[", "]", "\n", "if", "self", ".", "light", ":", "\n", "            ", "FC", "+=", "[", "\n", "nn", ".", "Linear", "(", "ngf", "*", "mult", ",", "ngf", "*", "mult", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "ngf", "*", "mult", ",", "ngf", "*", "mult", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", "\n", "\n", "", "else", ":", "\n", "            ", "FC", "+=", "[", "\n", "nn", ".", "Linear", "(", "img_size", "//", "mult", "*", "img_size", "//", "mult", "*", "ngf", "*", "mult", ",", "\n", "ngf", "*", "mult", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "ngf", "*", "mult", ",", "ngf", "*", "mult", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", "\n", "\n", "# Decoder Bottleneck", "\n", "", "mult", "=", "2", "**", "n_downsampling", "\n", "for", "i", "in", "range", "(", "n_blocks", ")", ":", "\n", "            ", "setattr", "(", "self", ",", "'DecodeBlock'", "+", "str", "(", "i", "+", "1", ")", ",", "\n", "ResnetSoftAdaLINBlock", "(", "ngf", "*", "mult", ")", ")", "\n", "\n", "# Up-Sampling", "\n", "", "UpBlock", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "n_downsampling", ")", ":", "\n", "            ", "mult", "=", "2", "**", "(", "n_downsampling", "-", "i", ")", "\n", "UpBlock", "+=", "[", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ")", ",", "\n", "nn", ".", "Pad2D", "(", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "'reflect'", ")", ",", "\n", "nn", ".", "Conv2D", "(", "ngf", "*", "mult", ",", "\n", "ngf", "*", "mult", "//", "2", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "LIN", "(", "ngf", "*", "mult", "//", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", "\n", "\n", "", "UpBlock", "+=", "[", "HourGlass", "(", "ngf", ",", "ngf", ")", ",", "HourGlass", "(", "ngf", ",", "ngf", ",", "False", ")", "]", "\n", "\n", "UpBlock", "+=", "[", "\n", "nn", ".", "Pad2D", "(", "[", "3", ",", "3", ",", "3", ",", "3", "]", ",", "'reflect'", ")", ",", "\n", "nn", ".", "Conv2D", "(", "3", ",", "output_nc", ",", "kernel_size", "=", "7", ",", "stride", "=", "1", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", "\n", "]", "\n", "\n", "self", ".", "DownBlock", "=", "nn", ".", "Sequential", "(", "*", "DownBlock", ")", "\n", "self", ".", "FC", "=", "nn", ".", "Sequential", "(", "*", "FC", ")", "\n", "self", ".", "UpBlock", "=", "nn", ".", "Sequential", "(", "*", "UpBlock", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.resnet_ugatit_p2c.ResnetUGATITP2CGenerator.forward": [[138, 180], ["resnet_ugatit_p2c.ResnetUGATITP2CGenerator.DownBlock", "range", "paddle.adaptive_avg_pool2d", "paddle.adaptive_avg_pool2d", "paddle.adaptive_avg_pool2d", "resnet_ugatit_p2c.ResnetUGATITP2CGenerator.gap_fc", "[].transpose", "paddle.adaptive_max_pool2d", "paddle.adaptive_max_pool2d", "paddle.adaptive_max_pool2d", "resnet_ugatit_p2c.ResnetUGATITP2CGenerator.gmp_fc", "[].transpose", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "resnet_ugatit_p2c.ResnetUGATITP2CGenerator.relu", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "range", "resnet_ugatit_p2c.ResnetUGATITP2CGenerator.UpBlock", "content_features.append", "paddle.adaptive_avg_pool2d.reshape", "[].transpose.unsqueeze().unsqueeze", "paddle.adaptive_max_pool2d.reshape", "[].transpose.unsqueeze().unsqueeze", "resnet_ugatit_p2c.ResnetUGATITP2CGenerator.conv1x1", "paddle.adaptive_avg_pool2d", "paddle.adaptive_avg_pool2d", "paddle.adaptive_avg_pool2d", "resnet_ugatit_p2c.ResnetUGATITP2CGenerator.FC", "resnet_ugatit_p2c.ResnetUGATITP2CGenerator.FC", "getattr", "paddle.adaptive_avg_pool2d().reshape", "paddle.adaptive_avg_pool2d().reshape", "paddle.adaptive_avg_pool2d().reshape", "paddle.adaptive_avg_pool2d.reshape", "resnet_ugatit_p2c.ResnetUGATITP2CGenerator.reshape", "getattr", "list", "[].transpose.unsqueeze", "list", "[].transpose.unsqueeze", "str", "paddle.adaptive_avg_pool2d", "paddle.adaptive_avg_pool2d", "paddle.adaptive_avg_pool2d", "resnet_ugatit_p2c.ResnetUGATITP2CGenerator.gap_fc.parameters", "resnet_ugatit_p2c.ResnetUGATITP2CGenerator.gmp_fc.parameters", "str"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "bs", "=", "x", ".", "shape", "[", "0", "]", "\n", "\n", "x", "=", "self", ".", "DownBlock", "(", "x", ")", "\n", "\n", "content_features", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "n_blocks", ")", ":", "\n", "            ", "x", "=", "getattr", "(", "self", ",", "'EncodeBlock'", "+", "str", "(", "i", "+", "1", ")", ")", "(", "x", ")", "\n", "content_features", ".", "append", "(", "\n", "F", ".", "adaptive_avg_pool2d", "(", "x", ",", "1", ")", ".", "reshape", "(", "[", "bs", ",", "-", "1", "]", ")", ")", "\n", "\n", "", "gap", "=", "F", ".", "adaptive_avg_pool2d", "(", "x", ",", "1", ")", "\n", "gap_logit", "=", "self", ".", "gap_fc", "(", "gap", ".", "reshape", "(", "[", "bs", ",", "-", "1", "]", ")", ")", "\n", "gap_weight", "=", "list", "(", "self", ".", "gap_fc", ".", "parameters", "(", ")", ")", "[", "0", "]", ".", "transpose", "(", "[", "1", ",", "0", "]", ")", "\n", "gap", "=", "x", "*", "gap_weight", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "\n", "gmp", "=", "F", ".", "adaptive_max_pool2d", "(", "x", ",", "1", ")", "\n", "gmp_logit", "=", "self", ".", "gmp_fc", "(", "gmp", ".", "reshape", "(", "[", "bs", ",", "-", "1", "]", ")", ")", "\n", "gmp_weight", "=", "list", "(", "self", ".", "gmp_fc", ".", "parameters", "(", ")", ")", "[", "0", "]", ".", "transpose", "(", "[", "1", ",", "0", "]", ")", "\n", "gmp", "=", "x", "*", "gmp_weight", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "\n", "cam_logit", "=", "paddle", ".", "concat", "(", "[", "gap_logit", ",", "gmp_logit", "]", ",", "1", ")", "\n", "x", "=", "paddle", ".", "concat", "(", "[", "gap", ",", "gmp", "]", ",", "1", ")", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "conv1x1", "(", "x", ")", ")", "\n", "\n", "heatmap", "=", "paddle", ".", "sum", "(", "x", ",", "axis", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "\n", "if", "self", ".", "light", ":", "\n", "            ", "x_", "=", "F", ".", "adaptive_avg_pool2d", "(", "x", ",", "1", ")", "\n", "style_features", "=", "self", ".", "FC", "(", "x_", ".", "reshape", "(", "[", "bs", ",", "-", "1", "]", ")", ")", "\n", "", "else", ":", "\n", "            ", "style_features", "=", "self", ".", "FC", "(", "x", ".", "reshape", "(", "[", "bs", ",", "-", "1", "]", ")", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "self", ".", "n_blocks", ")", ":", "\n", "            ", "x", "=", "getattr", "(", "self", ",", "\n", "'DecodeBlock'", "+", "str", "(", "i", "+", "1", ")", ")", "(", "x", ",", "\n", "content_features", "[", "4", "-", "i", "-", "1", "]", ",", "\n", "style_features", ")", "\n", "\n", "", "out", "=", "self", ".", "UpBlock", "(", "x", ")", "\n", "\n", "return", "out", ",", "cam_logit", ",", "heatmap", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.resnet_ugatit_p2c.ConvBlock.__init__": [[183, 201], ["paddle.Layer.__init__", "resnet_ugatit_p2c.ConvBlock.__convblock", "resnet_ugatit_p2c.ConvBlock.__convblock", "resnet_ugatit_p2c.ConvBlock.__convblock", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.InstanceNorm2D", "paddle.InstanceNorm2D", "paddle.InstanceNorm2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.resnet_ugatit_p2c.ConvBlock.__convblock", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.resnet_ugatit_p2c.ConvBlock.__convblock", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.resnet_ugatit_p2c.ConvBlock.__convblock"], ["    ", "def", "__init__", "(", "self", ",", "dim_in", ",", "dim_out", ")", ":", "\n", "        ", "super", "(", "ConvBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dim_in", "=", "dim_in", "\n", "self", ".", "dim_out", "=", "dim_out", "\n", "\n", "self", ".", "conv_block1", "=", "self", ".", "__convblock", "(", "dim_in", ",", "dim_out", "//", "2", ")", "\n", "self", ".", "conv_block2", "=", "self", ".", "__convblock", "(", "dim_out", "//", "2", ",", "dim_out", "//", "4", ")", "\n", "self", ".", "conv_block3", "=", "self", ".", "__convblock", "(", "dim_out", "//", "4", ",", "dim_out", "//", "4", ")", "\n", "\n", "if", "self", ".", "dim_in", "!=", "self", ".", "dim_out", ":", "\n", "            ", "self", ".", "conv_skip", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "InstanceNorm2D", "(", "dim_in", ",", "weight_attr", "=", "False", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2D", "(", "dim_in", ",", "\n", "dim_out", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.resnet_ugatit_p2c.ConvBlock.__convblock": [[202, 209], ["paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.InstanceNorm2D", "paddle.InstanceNorm2D", "paddle.InstanceNorm2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Pad2D", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "__convblock", "(", "dim_in", ",", "dim_out", ")", ":", "\n", "        ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "InstanceNorm2D", "(", "dim_in", ",", "weight_attr", "=", "False", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "nn", ".", "Pad2D", "(", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "'reflect'", ")", ",", "\n", "nn", ".", "Conv2D", "(", "dim_in", ",", "dim_out", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.resnet_ugatit_p2c.ConvBlock.forward": [[210, 222], ["resnet_ugatit_p2c.ConvBlock.conv_block1", "resnet_ugatit_p2c.ConvBlock.conv_block2", "resnet_ugatit_p2c.ConvBlock.conv_block3", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "resnet_ugatit_p2c.ConvBlock.conv_skip"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "x1", "=", "self", ".", "conv_block1", "(", "x", ")", "\n", "x2", "=", "self", ".", "conv_block2", "(", "x1", ")", "\n", "x3", "=", "self", ".", "conv_block3", "(", "x2", ")", "\n", "out", "=", "paddle", ".", "concat", "(", "[", "x1", ",", "x2", ",", "x3", "]", ",", "1", ")", "\n", "\n", "if", "self", ".", "dim_in", "!=", "self", ".", "dim_out", ":", "\n", "            ", "residual", "=", "self", ".", "conv_skip", "(", "residual", ")", "\n", "\n", "", "return", "residual", "+", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.resnet_ugatit_p2c.HourGlassBlock.__init__": [[225, 237], ["paddle.Layer.__init__", "range", "range", "setattr", "setattr", "resnet_ugatit_p2c.ConvBlock", "resnet_ugatit_p2c.ConvBlock", "str", "str"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim_in", ")", ":", "\n", "        ", "super", "(", "HourGlassBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "n_skip", "=", "4", "\n", "self", ".", "n_block", "=", "9", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "n_skip", ")", ":", "\n", "            ", "setattr", "(", "self", ",", "'ConvBlockskip'", "+", "str", "(", "i", "+", "1", ")", ",", "\n", "ConvBlock", "(", "dim_in", ",", "dim_in", ")", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "self", ".", "n_block", ")", ":", "\n", "            ", "setattr", "(", "self", ",", "'ConvBlock'", "+", "str", "(", "i", "+", "1", ")", ",", "ConvBlock", "(", "dim_in", ",", "dim_in", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.resnet_ugatit_p2c.HourGlassBlock.forward": [[238, 253], ["range", "resnet_ugatit_p2c.HourGlassBlock.ConvBlock5", "range", "skips.append", "paddle.avg_pool2d", "paddle.avg_pool2d", "paddle.avg_pool2d", "paddle.upsample", "paddle.upsample", "paddle.upsample", "getattr", "getattr", "getattr", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.upsample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.upsample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.upsample"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "skips", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "n_skip", ")", ":", "\n", "            ", "skips", ".", "append", "(", "getattr", "(", "self", ",", "'ConvBlockskip'", "+", "str", "(", "i", "+", "1", ")", ")", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "avg_pool2d", "(", "x", ",", "2", ")", "\n", "x", "=", "getattr", "(", "self", ",", "'ConvBlock'", "+", "str", "(", "i", "+", "1", ")", ")", "(", "x", ")", "\n", "\n", "", "x", "=", "self", ".", "ConvBlock5", "(", "x", ")", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "n_skip", ")", ":", "\n", "            ", "x", "=", "getattr", "(", "self", ",", "'ConvBlock'", "+", "str", "(", "i", "+", "6", ")", ")", "(", "x", ")", "\n", "x", "=", "F", ".", "upsample", "(", "x", ",", "scale_factor", "=", "2", ")", "\n", "x", "=", "skips", "[", "self", ".", "n_skip", "-", "i", "-", "1", "]", "+", "x", "\n", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.resnet_ugatit_p2c.HourGlass.__init__": [[256, 275], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "resnet_ugatit_p2c.HourGlassBlock", "resnet_ugatit_p2c.ConvBlock", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.InstanceNorm2D", "paddle.InstanceNorm2D", "paddle.InstanceNorm2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim_in", ",", "dim_out", ",", "use_res", "=", "True", ")", ":", "\n", "        ", "super", "(", "HourGlass", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "use_res", "=", "use_res", "\n", "\n", "self", ".", "HG", "=", "nn", ".", "Sequential", "(", "\n", "HourGlassBlock", "(", "dim_in", ")", ",", "ConvBlock", "(", "dim_out", ",", "dim_out", ")", ",", "\n", "nn", ".", "Conv2D", "(", "dim_out", ",", "\n", "dim_out", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "InstanceNorm2D", "(", "dim_out", ",", "weight_attr", "=", "False", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "self", ".", "Conv1", "=", "nn", ".", "Conv2D", "(", "dim_out", ",", "3", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "\n", "\n", "if", "self", ".", "use_res", ":", "\n", "            ", "self", ".", "Conv2", "=", "nn", ".", "Conv2D", "(", "dim_out", ",", "dim_out", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "\n", "self", ".", "Conv3", "=", "nn", ".", "Conv2D", "(", "3", ",", "dim_out", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.resnet_ugatit_p2c.HourGlass.forward": [[276, 287], ["resnet_ugatit_p2c.HourGlass.HG", "resnet_ugatit_p2c.HourGlass.Conv1", "resnet_ugatit_p2c.HourGlass.Conv2", "resnet_ugatit_p2c.HourGlass.Conv3"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "ll", "=", "self", ".", "HG", "(", "x", ")", "\n", "tmp_out", "=", "self", ".", "Conv1", "(", "ll", ")", "\n", "\n", "if", "self", ".", "use_res", ":", "\n", "            ", "ll", "=", "self", ".", "Conv2", "(", "ll", ")", "\n", "tmp_out_", "=", "self", ".", "Conv3", "(", "tmp_out", ")", "\n", "return", "x", "+", "ll", "+", "tmp_out_", "\n", "\n", "", "else", ":", "\n", "            ", "return", "tmp_out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.resnet_ugatit_p2c.ResnetBlock.__init__": [[290, 307], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Pad2D", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.InstanceNorm2D", "paddle.InstanceNorm2D", "paddle.InstanceNorm2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Pad2D", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.InstanceNorm2D", "paddle.InstanceNorm2D", "paddle.InstanceNorm2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", ",", "use_bias", "=", "False", ")", ":", "\n", "        ", "super", "(", "ResnetBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "conv_block", "=", "[", "]", "\n", "conv_block", "+=", "[", "\n", "nn", ".", "Pad2D", "(", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "'reflect'", ")", ",", "\n", "nn", ".", "Conv2D", "(", "dim", ",", "dim", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "bias_attr", "=", "use_bias", ")", ",", "\n", "nn", ".", "InstanceNorm2D", "(", "dim", ",", "weight_attr", "=", "False", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", "\n", "\n", "conv_block", "+=", "[", "\n", "nn", ".", "Pad2D", "(", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "'reflect'", ")", ",", "\n", "nn", ".", "Conv2D", "(", "dim", ",", "dim", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "bias_attr", "=", "use_bias", ")", ",", "\n", "nn", ".", "InstanceNorm2D", "(", "dim", ",", "weight_attr", "=", "False", ",", "bias_attr", "=", "False", ")", "\n", "]", "\n", "\n", "self", ".", "conv_block", "=", "nn", ".", "Sequential", "(", "*", "conv_block", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.resnet_ugatit_p2c.ResnetBlock.forward": [[308, 311], ["resnet_ugatit_p2c.ResnetBlock.conv_block"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "x", "+", "self", ".", "conv_block", "(", "x", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.resnet_ugatit_p2c.ResnetSoftAdaLINBlock.__init__": [[314, 332], ["paddle.Layer.__init__", "paddle.Pad2D", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "resnet_ugatit_p2c.SoftAdaLIN", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Pad2D", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "resnet_ugatit_p2c.SoftAdaLIN"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", ",", "use_bias", "=", "False", ")", ":", "\n", "        ", "super", "(", "ResnetSoftAdaLINBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pad1", "=", "nn", ".", "Pad2D", "(", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "'reflect'", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2D", "(", "dim", ",", "\n", "dim", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "bias_attr", "=", "use_bias", ")", "\n", "self", ".", "norm1", "=", "SoftAdaLIN", "(", "dim", ")", "\n", "self", ".", "relu1", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "self", ".", "pad2", "=", "nn", ".", "Pad2D", "(", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "'reflect'", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2D", "(", "dim", ",", "\n", "dim", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "bias_attr", "=", "use_bias", ")", "\n", "self", ".", "norm2", "=", "SoftAdaLIN", "(", "dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.resnet_ugatit_p2c.ResnetSoftAdaLINBlock.forward": [[333, 343], ["resnet_ugatit_p2c.ResnetSoftAdaLINBlock.pad1", "resnet_ugatit_p2c.ResnetSoftAdaLINBlock.conv1", "resnet_ugatit_p2c.ResnetSoftAdaLINBlock.norm1", "resnet_ugatit_p2c.ResnetSoftAdaLINBlock.relu1", "resnet_ugatit_p2c.ResnetSoftAdaLINBlock.pad2", "resnet_ugatit_p2c.ResnetSoftAdaLINBlock.conv2", "resnet_ugatit_p2c.ResnetSoftAdaLINBlock.norm2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "content_features", ",", "style_features", ")", ":", "\n", "        ", "out", "=", "self", ".", "pad1", "(", "x", ")", "\n", "out", "=", "self", ".", "conv1", "(", "out", ")", "\n", "out", "=", "self", ".", "norm1", "(", "out", ",", "content_features", ",", "style_features", ")", "\n", "out", "=", "self", ".", "relu1", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "pad2", "(", "out", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "norm2", "(", "out", ",", "content_features", ",", "style_features", ")", "\n", "return", "out", "+", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.resnet_ugatit_p2c.SoftAdaLIN.__init__": [[346, 363], ["paddle.Layer.__init__", "resnet_ugatit_p2c.AdaLIN", "resnet_ugatit_p2c.SoftAdaLIN.create_parameter", "resnet_ugatit_p2c.SoftAdaLIN.create_parameter", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.initializer.Constant", "paddle.initializer.Constant", "paddle.initializer.Constant", "paddle.initializer.Constant", "paddle.initializer.Constant", "paddle.initializer.Constant"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "eps", "=", "1e-5", ")", ":", "\n", "        ", "super", "(", "SoftAdaLIN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "norm", "=", "AdaLIN", "(", "num_features", ",", "eps", ")", "\n", "\n", "self", ".", "w_gamma", "=", "self", ".", "create_parameter", "(", "\n", "[", "1", ",", "num_features", "]", ",", "default_initializer", "=", "nn", ".", "initializer", ".", "Constant", "(", "0.", ")", ")", "\n", "self", ".", "w_beta", "=", "self", ".", "create_parameter", "(", "\n", "[", "1", ",", "num_features", "]", ",", "default_initializer", "=", "nn", ".", "initializer", ".", "Constant", "(", "0.", ")", ")", "\n", "\n", "self", ".", "c_gamma", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "num_features", ",", "num_features", ",", "bias_attr", "=", "False", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "num_features", ",", "num_features", ",", "bias_attr", "=", "False", ")", ")", "\n", "self", ".", "c_beta", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "num_features", ",", "num_features", ",", "bias_attr", "=", "False", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "num_features", ",", "num_features", ",", "bias_attr", "=", "False", ")", ")", "\n", "self", ".", "s_gamma", "=", "nn", ".", "Linear", "(", "num_features", ",", "num_features", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "s_beta", "=", "nn", ".", "Linear", "(", "num_features", ",", "num_features", ",", "bias_attr", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.resnet_ugatit_p2c.SoftAdaLIN.forward": [[364, 377], ["resnet_ugatit_p2c.SoftAdaLIN.norm", "resnet_ugatit_p2c.SoftAdaLIN.c_gamma", "resnet_ugatit_p2c.SoftAdaLIN.c_beta", "resnet_ugatit_p2c.SoftAdaLIN.s_gamma", "resnet_ugatit_p2c.SoftAdaLIN.s_beta", "resnet_ugatit_p2c.SoftAdaLIN.w_gamma.expand", "resnet_ugatit_p2c.SoftAdaLIN.w_beta.expand"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm"], ["", "def", "forward", "(", "self", ",", "x", ",", "content_features", ",", "style_features", ")", ":", "\n", "        ", "content_gamma", ",", "content_beta", "=", "self", ".", "c_gamma", "(", "\n", "content_features", ")", ",", "self", ".", "c_beta", "(", "content_features", ")", "\n", "style_gamma", ",", "style_beta", "=", "self", ".", "s_gamma", "(", "style_features", ")", ",", "self", ".", "s_beta", "(", "\n", "style_features", ")", "\n", "\n", "w_gamma_", ",", "w_beta_", "=", "self", ".", "w_gamma", ".", "expand", "(", "\n", "[", "x", ".", "shape", "[", "0", "]", ",", "-", "1", "]", ")", ",", "self", ".", "w_beta", ".", "expand", "(", "[", "x", ".", "shape", "[", "0", "]", ",", "-", "1", "]", ")", "\n", "soft_gamma", "=", "(", "1.", "-", "w_gamma_", ")", "*", "style_gamma", "+", "w_gamma_", "*", "content_gamma", "\n", "soft_beta", "=", "(", "1.", "-", "w_beta_", ")", "*", "style_beta", "+", "w_beta_", "*", "content_beta", "\n", "\n", "out", "=", "self", ".", "norm", "(", "x", ",", "soft_gamma", ",", "soft_beta", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.resnet_ugatit_p2c.AdaLIN.__init__": [[380, 386], ["paddle.Layer.__init__", "resnet_ugatit_p2c.AdaLIN.create_parameter", "paddle.initializer.Constant", "paddle.initializer.Constant", "paddle.initializer.Constant"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "eps", "=", "1e-5", ")", ":", "\n", "        ", "super", "(", "AdaLIN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "eps", "=", "eps", "\n", "self", ".", "rho", "=", "self", ".", "create_parameter", "(", "\n", "[", "1", ",", "num_features", ",", "1", ",", "1", "]", ",", "\n", "default_initializer", "=", "nn", ".", "initializer", ".", "Constant", "(", "0.9", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.resnet_ugatit_p2c.AdaLIN.forward": [[387, 404], ["paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "beta.unsqueeze().unsqueeze", "resnet_ugatit_p2c.AdaLIN.rho.expand", "gamma.unsqueeze().unsqueeze", "resnet_ugatit_p2c.AdaLIN.rho.expand", "beta.unsqueeze", "gamma.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var"], ["", "def", "forward", "(", "self", ",", "x", ",", "gamma", ",", "beta", ")", ":", "\n", "        ", "in_mean", ",", "in_var", "=", "paddle", ".", "mean", "(", "x", ",", "axis", "=", "[", "2", ",", "3", "]", ",", "\n", "keepdim", "=", "True", ")", ",", "paddle", ".", "var", "(", "x", ",", "\n", "axis", "=", "[", "2", ",", "3", "]", ",", "\n", "keepdim", "=", "True", ")", "\n", "out_in", "=", "(", "x", "-", "in_mean", ")", "/", "paddle", ".", "sqrt", "(", "in_var", "+", "self", ".", "eps", ")", "\n", "ln_mean", ",", "ln_var", "=", "paddle", ".", "mean", "(", "x", ",", "axis", "=", "[", "1", ",", "2", ",", "3", "]", ",", "\n", "keepdim", "=", "True", ")", ",", "paddle", ".", "var", "(", "x", ",", "\n", "axis", "=", "[", "1", ",", "2", ",", "3", "]", ",", "\n", "keepdim", "=", "True", ")", "\n", "out_ln", "=", "(", "x", "-", "ln_mean", ")", "/", "paddle", ".", "sqrt", "(", "ln_var", "+", "self", ".", "eps", ")", "\n", "out", "=", "self", ".", "rho", ".", "expand", "(", "[", "x", ".", "shape", "[", "0", "]", ",", "-", "1", ",", "-", "1", ",", "-", "1", "]", ")", "*", "out_in", "+", "(", "1", "-", "self", ".", "rho", ".", "expand", "(", "[", "x", ".", "shape", "[", "0", "]", ",", "-", "1", ",", "-", "1", ",", "-", "1", "]", ")", ")", "*", "out_ln", "\n", "out", "=", "out", "*", "gamma", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "+", "beta", ".", "unsqueeze", "(", "\n", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.resnet_ugatit_p2c.LIN.__init__": [[407, 419], ["paddle.Layer.__init__", "resnet_ugatit_p2c.LIN.create_parameter", "resnet_ugatit_p2c.LIN.create_parameter", "resnet_ugatit_p2c.LIN.create_parameter", "paddle.initializer.Constant", "paddle.initializer.Constant", "paddle.initializer.Constant", "paddle.initializer.Constant", "paddle.initializer.Constant", "paddle.initializer.Constant", "paddle.initializer.Constant", "paddle.initializer.Constant", "paddle.initializer.Constant"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "eps", "=", "1e-5", ")", ":", "\n", "        ", "super", "(", "LIN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "eps", "=", "eps", "\n", "self", ".", "rho", "=", "self", ".", "create_parameter", "(", "\n", "[", "1", ",", "num_features", ",", "1", ",", "1", "]", ",", "\n", "default_initializer", "=", "nn", ".", "initializer", ".", "Constant", "(", "0.", ")", ")", "\n", "self", ".", "gamma", "=", "self", ".", "create_parameter", "(", "\n", "[", "1", ",", "num_features", ",", "1", ",", "1", "]", ",", "\n", "default_initializer", "=", "nn", ".", "initializer", ".", "Constant", "(", "1.", ")", ")", "\n", "self", ".", "beta", "=", "self", ".", "create_parameter", "(", "\n", "[", "1", ",", "num_features", ",", "1", ",", "1", "]", ",", "\n", "default_initializer", "=", "nn", ".", "initializer", ".", "Constant", "(", "0.", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.resnet_ugatit_p2c.LIN.forward": [[420, 438], ["paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "resnet_ugatit_p2c.LIN.beta.expand", "resnet_ugatit_p2c.LIN.rho.expand", "resnet_ugatit_p2c.LIN.gamma.expand", "resnet_ugatit_p2c.LIN.rho.expand"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "in_mean", ",", "in_var", "=", "paddle", ".", "mean", "(", "x", ",", "axis", "=", "[", "2", ",", "3", "]", ",", "\n", "keepdim", "=", "True", ")", ",", "paddle", ".", "var", "(", "x", ",", "\n", "axis", "=", "[", "2", ",", "3", "]", ",", "\n", "keepdim", "=", "True", ")", "\n", "out_in", "=", "(", "x", "-", "in_mean", ")", "/", "paddle", ".", "sqrt", "(", "in_var", "+", "self", ".", "eps", ")", "\n", "ln_mean", ",", "ln_var", "=", "paddle", ".", "mean", "(", "x", ",", "axis", "=", "[", "1", ",", "2", ",", "3", "]", ",", "\n", "keepdim", "=", "True", ")", ",", "paddle", ".", "var", "(", "x", ",", "\n", "axis", "=", "[", "1", ",", "2", ",", "3", "]", ",", "\n", "keepdim", "=", "True", ")", "\n", "out_ln", "=", "(", "x", "-", "ln_mean", ")", "/", "paddle", ".", "sqrt", "(", "ln_var", "+", "self", ".", "eps", ")", "\n", "out", "=", "self", ".", "rho", ".", "expand", "(", "[", "x", ".", "shape", "[", "0", "]", ",", "-", "1", ",", "-", "1", ",", "-", "1", "]", ")", "*", "out_in", "+", "(", "1", "-", "self", ".", "rho", ".", "expand", "(", "[", "x", ".", "shape", "[", "0", "]", ",", "-", "1", ",", "-", "1", ",", "-", "1", "]", ")", ")", "*", "out_ln", "\n", "out", "=", "out", "*", "self", ".", "gamma", ".", "expand", "(", "[", "x", ".", "shape", "[", "0", "]", ",", "-", "1", ",", "-", "1", ",", "-", "1", "\n", "]", ")", "+", "self", ".", "beta", ".", "expand", "(", "\n", "[", "x", ".", "shape", "[", "0", "]", ",", "-", "1", ",", "-", "1", ",", "-", "1", "]", ")", "\n", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.edvr.ResidualBlockNoBN.__init__": [[65, 72], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "edvr.default_init_weights"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.edvr.default_init_weights"], ["def", "__init__", "(", "self", ",", "nf", "=", "64", ")", ":", "\n", "        ", "super", "(", "ResidualBlockNoBN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "nf", "=", "nf", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2D", "(", "self", ".", "nf", ",", "self", ".", "nf", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2D", "(", "self", ".", "nf", ",", "self", ".", "nf", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "default_init_weights", "(", "[", "self", ".", "conv1", ",", "self", ".", "conv2", "]", ",", "0.1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.edvr.ResidualBlockNoBN.forward": [[73, 77], ["edvr.ResidualBlockNoBN.conv2", "edvr.ResidualBlockNoBN.relu", "edvr.ResidualBlockNoBN.conv1"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "out", "=", "self", ".", "conv2", "(", "self", ".", "relu", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "return", "identity", "+", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.edvr.PredeblurResNetPyramid.__init__": [[103, 153], ["paddle.Layer.__init__", "paddle.LeakyReLU", "paddle.LeakyReLU", "edvr.ResidualBlockNoBN", "edvr.ResidualBlockNoBN", "edvr.ResidualBlockNoBN", "edvr.ResidualBlockNoBN", "edvr.ResidualBlockNoBN", "edvr.ResidualBlockNoBN", "edvr.ResidualBlockNoBN", "edvr.ResidualBlockNoBN", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Upsample", "paddle.Upsample", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "in_nf", "=", "3", ",", "nf", "=", "64", ",", "HR_in", "=", "False", ")", ":", "\n", "        ", "super", "(", "PredeblurResNetPyramid", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_nf", "=", "in_nf", "\n", "self", ".", "nf", "=", "nf", "\n", "self", ".", "HR_in", "=", "True", "if", "HR_in", "else", "False", "\n", "self", ".", "Leaky_relu", "=", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.1", ")", "\n", "if", "self", ".", "HR_in", ":", "\n", "            ", "self", ".", "conv_first_1", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "self", ".", "in_nf", ",", "\n", "out_channels", "=", "self", ".", "nf", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "self", ".", "conv_first_2", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "self", ".", "nf", ",", "\n", "out_channels", "=", "self", ".", "nf", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ")", "\n", "self", ".", "conv_first_3", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "self", ".", "nf", ",", "\n", "out_channels", "=", "self", ".", "nf", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "conv_first", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "self", ".", "in_nf", ",", "\n", "out_channels", "=", "self", ".", "nf", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "", "self", ".", "RB_L1_1", "=", "ResidualBlockNoBN", "(", "nf", "=", "self", ".", "nf", ")", "\n", "self", ".", "RB_L1_2", "=", "ResidualBlockNoBN", "(", "nf", "=", "self", ".", "nf", ")", "\n", "self", ".", "RB_L1_3", "=", "ResidualBlockNoBN", "(", "nf", "=", "self", ".", "nf", ")", "\n", "self", ".", "RB_L1_4", "=", "ResidualBlockNoBN", "(", "nf", "=", "self", ".", "nf", ")", "\n", "self", ".", "RB_L1_5", "=", "ResidualBlockNoBN", "(", "nf", "=", "self", ".", "nf", ")", "\n", "self", ".", "RB_L2_1", "=", "ResidualBlockNoBN", "(", "nf", "=", "self", ".", "nf", ")", "\n", "self", ".", "RB_L2_2", "=", "ResidualBlockNoBN", "(", "nf", "=", "self", ".", "nf", ")", "\n", "self", ".", "RB_L3_1", "=", "ResidualBlockNoBN", "(", "nf", "=", "self", ".", "nf", ")", "\n", "self", ".", "deblur_L2_conv", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "self", ".", "nf", ",", "\n", "out_channels", "=", "self", ".", "nf", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ")", "\n", "self", ".", "deblur_L3_conv", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "self", ".", "nf", ",", "\n", "out_channels", "=", "self", ".", "nf", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ")", "\n", "self", ".", "upsample", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "\n", "mode", "=", "\"bilinear\"", ",", "\n", "align_corners", "=", "False", ",", "\n", "align_mode", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.edvr.PredeblurResNetPyramid.forward": [[154, 176], ["edvr.PredeblurResNetPyramid.deblur_L2_conv", "edvr.PredeblurResNetPyramid.Leaky_relu", "edvr.PredeblurResNetPyramid.deblur_L3_conv", "edvr.PredeblurResNetPyramid.Leaky_relu", "edvr.PredeblurResNetPyramid.RB_L3_1", "edvr.PredeblurResNetPyramid.upsample", "edvr.PredeblurResNetPyramid.RB_L2_2", "edvr.PredeblurResNetPyramid.upsample", "edvr.PredeblurResNetPyramid.RB_L1_1", "edvr.PredeblurResNetPyramid.RB_L1_3", "edvr.PredeblurResNetPyramid.RB_L1_4", "edvr.PredeblurResNetPyramid.RB_L1_5", "edvr.PredeblurResNetPyramid.Leaky_relu", "edvr.PredeblurResNetPyramid.Leaky_relu", "edvr.PredeblurResNetPyramid.Leaky_relu", "edvr.PredeblurResNetPyramid.Leaky_relu", "edvr.PredeblurResNetPyramid.RB_L2_1", "edvr.PredeblurResNetPyramid.RB_L1_2", "edvr.PredeblurResNetPyramid.conv_first_1", "edvr.PredeblurResNetPyramid.conv_first_2", "edvr.PredeblurResNetPyramid.conv_first_3", "edvr.PredeblurResNetPyramid.conv_first"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.upsample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.upsample"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "HR_in", ":", "\n", "            ", "L1_fea", "=", "self", ".", "Leaky_relu", "(", "self", ".", "conv_first_1", "(", "x", ")", ")", "\n", "L1_fea", "=", "self", ".", "Leaky_relu", "(", "self", ".", "conv_first_2", "(", "L1_fea", ")", ")", "\n", "L1_fea", "=", "self", ".", "Leaky_relu", "(", "self", ".", "conv_first_3", "(", "L1_fea", ")", ")", "\n", "", "else", ":", "\n", "            ", "L1_fea", "=", "self", ".", "Leaky_relu", "(", "self", ".", "conv_first", "(", "x", ")", ")", "\n", "", "L2_fea", "=", "self", ".", "deblur_L2_conv", "(", "L1_fea", ")", "\n", "L2_fea", "=", "self", ".", "Leaky_relu", "(", "L2_fea", ")", "\n", "L3_fea", "=", "self", ".", "deblur_L3_conv", "(", "L2_fea", ")", "\n", "L3_fea", "=", "self", ".", "Leaky_relu", "(", "L3_fea", ")", "\n", "L3_fea", "=", "self", ".", "RB_L3_1", "(", "L3_fea", ")", "\n", "L3_fea", "=", "self", ".", "upsample", "(", "L3_fea", ")", "\n", "L2_fea", "=", "self", ".", "RB_L2_1", "(", "L2_fea", ")", "+", "L3_fea", "\n", "L2_fea", "=", "self", ".", "RB_L2_2", "(", "L2_fea", ")", "\n", "L2_fea", "=", "self", ".", "upsample", "(", "L2_fea", ")", "\n", "L1_fea", "=", "self", ".", "RB_L1_1", "(", "L1_fea", ")", "\n", "L1_fea", "=", "self", ".", "RB_L1_2", "(", "L1_fea", ")", "+", "L2_fea", "\n", "out", "=", "self", ".", "RB_L1_3", "(", "L1_fea", ")", "\n", "out", "=", "self", ".", "RB_L1_4", "(", "out", ")", "\n", "out", "=", "self", ".", "RB_L1_5", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.edvr.TSAFusion.__init__": [[192, 274], ["paddle.Layer.__init__", "paddle.Sigmoid", "paddle.Sigmoid", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.AvgPool2D", "paddle.AvgPool2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Upsample", "paddle.Upsample"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "nf", "=", "64", ",", "nframes", "=", "5", ",", "center", "=", "2", ")", ":", "\n", "        ", "super", "(", "TSAFusion", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "nf", "=", "nf", "\n", "self", ".", "nframes", "=", "nframes", "\n", "self", ".", "center", "=", "center", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "Leaky_relu", "=", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.1", ")", "\n", "self", ".", "tAtt_2", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "self", ".", "nf", ",", "\n", "out_channels", "=", "self", ".", "nf", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "self", ".", "tAtt_1", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "self", ".", "nf", ",", "\n", "out_channels", "=", "self", ".", "nf", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "self", ".", "fea_fusion", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "self", ".", "nf", "*", "self", ".", "nframes", ",", "\n", "out_channels", "=", "self", ".", "nf", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ")", "\n", "self", ".", "sAtt_1", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "self", ".", "nf", "*", "self", ".", "nframes", ",", "\n", "out_channels", "=", "self", ".", "nf", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ")", "\n", "self", ".", "max_pool", "=", "nn", ".", "MaxPool2D", "(", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AvgPool2D", "(", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "exclusive", "=", "False", ")", "\n", "self", ".", "sAtt_2", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "2", "*", "self", ".", "nf", ",", "\n", "out_channels", "=", "self", ".", "nf", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ")", "\n", "self", ".", "sAtt_3", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "self", ".", "nf", ",", "\n", "out_channels", "=", "self", ".", "nf", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "self", ".", "sAtt_4", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "self", ".", "nf", ",", "\n", "out_channels", "=", "self", ".", "nf", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", ")", "\n", "self", ".", "sAtt_5", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "self", ".", "nf", ",", "\n", "out_channels", "=", "self", ".", "nf", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "self", ".", "sAtt_add_1", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "self", ".", "nf", ",", "\n", "out_channels", "=", "self", ".", "nf", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ")", "\n", "self", ".", "sAtt_add_2", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "self", ".", "nf", ",", "\n", "out_channels", "=", "self", ".", "nf", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ")", "\n", "self", ".", "sAtt_L1", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "self", ".", "nf", ",", "\n", "out_channels", "=", "self", ".", "nf", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ")", "\n", "self", ".", "sAtt_L2", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "2", "*", "self", ".", "nf", ",", "\n", "out_channels", "=", "self", ".", "nf", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", ")", "\n", "self", ".", "sAtt_L3", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "self", ".", "nf", ",", "\n", "out_channels", "=", "self", ".", "nf", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "self", ".", "upsample", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "\n", "mode", "=", "\"bilinear\"", ",", "\n", "align_corners", "=", "False", ",", "\n", "align_mode", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.edvr.TSAFusion.forward": [[275, 342], ["edvr.TSAFusion.tAtt_2", "aligned_fea.reshape.reshape.reshape", "edvr.TSAFusion.tAtt_1", "emb.reshape.reshape.reshape", "range", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "edvr.TSAFusion.sigmoid", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.expand", "paddle.expand", "paddle.expand", "paddle.expand", "cor_prob.reshape.reshape.reshape", "aligned_fea.reshape.reshape.reshape", "edvr.TSAFusion.fea_fusion", "edvr.TSAFusion.Leaky_relu", "edvr.TSAFusion.sAtt_1", "edvr.TSAFusion.Leaky_relu", "edvr.TSAFusion.max_pool", "edvr.TSAFusion.avg_pool", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "edvr.TSAFusion.sAtt_2", "edvr.TSAFusion.Leaky_relu", "edvr.TSAFusion.sAtt_L1", "edvr.TSAFusion.Leaky_relu", "edvr.TSAFusion.max_pool", "edvr.TSAFusion.avg_pool", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "edvr.TSAFusion.sAtt_L2", "edvr.TSAFusion.Leaky_relu", "edvr.TSAFusion.sAtt_L3", "edvr.TSAFusion.Leaky_relu", "edvr.TSAFusion.upsample", "edvr.TSAFusion.sAtt_3", "edvr.TSAFusion.Leaky_relu", "edvr.TSAFusion.sAtt_4", "edvr.TSAFusion.Leaky_relu", "edvr.TSAFusion.upsample", "edvr.TSAFusion.sAtt_5", "edvr.TSAFusion.sAtt_add_1", "edvr.TSAFusion.Leaky_relu", "edvr.TSAFusion.sAtt_add_2", "edvr.TSAFusion.sigmoid", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "paddle.unsqueeze", "cor_l.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.upsample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.upsample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "forward", "(", "self", ",", "aligned_fea", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            aligned_feat (Tensor): Aligned features with shape (b, n, c, h, w).\n\n        Returns:\n            Tensor: Features after TSA with the shape (b, c, h, w).\n        \"\"\"", "\n", "B", ",", "N", ",", "C", ",", "H", ",", "W", "=", "aligned_fea", ".", "shape", "\n", "x_center", "=", "aligned_fea", "[", ":", ",", "self", ".", "center", ",", ":", ",", ":", ",", ":", "]", "\n", "emb_rf", "=", "self", ".", "tAtt_2", "(", "x_center", ")", "\n", "emb", "=", "aligned_fea", ".", "reshape", "(", "[", "-", "1", ",", "C", ",", "H", ",", "W", "]", ")", "\n", "emb", "=", "self", ".", "tAtt_1", "(", "emb", ")", "\n", "emb", "=", "emb", ".", "reshape", "(", "[", "-", "1", ",", "N", ",", "self", ".", "nf", ",", "H", ",", "W", "]", ")", "\n", "cor_l", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "            ", "emb_nbr", "=", "emb", "[", ":", ",", "i", ",", ":", ",", ":", ",", ":", "]", "#[B,C,W,H]", "\n", "cor_tmp", "=", "paddle", ".", "sum", "(", "emb_nbr", "*", "emb_rf", ",", "axis", "=", "1", ")", "\n", "cor_tmp", "=", "paddle", ".", "unsqueeze", "(", "cor_tmp", ",", "axis", "=", "1", ")", "\n", "cor_l", ".", "append", "(", "cor_tmp", ")", "\n", "", "cor_prob", "=", "paddle", ".", "concat", "(", "cor_l", ",", "axis", "=", "1", ")", "#[B,N,H,W]", "\n", "\n", "cor_prob", "=", "self", ".", "sigmoid", "(", "cor_prob", ")", "\n", "cor_prob", "=", "paddle", ".", "unsqueeze", "(", "cor_prob", ",", "axis", "=", "2", ")", "#[B,N,1,H,W]", "\n", "cor_prob", "=", "paddle", ".", "expand", "(", "cor_prob", ",", "[", "B", ",", "N", ",", "self", ".", "nf", ",", "H", ",", "W", "]", ")", "#[B,N,C,H,W]", "\n", "cor_prob", "=", "cor_prob", ".", "reshape", "(", "[", "B", ",", "-", "1", ",", "H", ",", "W", "]", ")", "\n", "aligned_fea", "=", "aligned_fea", ".", "reshape", "(", "[", "B", ",", "-", "1", ",", "H", ",", "W", "]", ")", "\n", "aligned_fea", "=", "aligned_fea", "*", "cor_prob", "\n", "\n", "fea", "=", "self", ".", "fea_fusion", "(", "aligned_fea", ")", "\n", "fea", "=", "self", ".", "Leaky_relu", "(", "fea", ")", "\n", "\n", "#spatial fusion", "\n", "att", "=", "self", ".", "sAtt_1", "(", "aligned_fea", ")", "\n", "att", "=", "self", ".", "Leaky_relu", "(", "att", ")", "\n", "att_max", "=", "self", ".", "max_pool", "(", "att", ")", "\n", "att_avg", "=", "self", ".", "avg_pool", "(", "att", ")", "\n", "att_pool", "=", "paddle", ".", "concat", "(", "[", "att_max", ",", "att_avg", "]", ",", "axis", "=", "1", ")", "\n", "att", "=", "self", ".", "sAtt_2", "(", "att_pool", ")", "\n", "att", "=", "self", ".", "Leaky_relu", "(", "att", ")", "\n", "\n", "#pyramid", "\n", "att_L", "=", "self", ".", "sAtt_L1", "(", "att", ")", "\n", "att_L", "=", "self", ".", "Leaky_relu", "(", "att_L", ")", "\n", "att_max", "=", "self", ".", "max_pool", "(", "att_L", ")", "\n", "att_avg", "=", "self", ".", "avg_pool", "(", "att_L", ")", "\n", "att_pool", "=", "paddle", ".", "concat", "(", "[", "att_max", ",", "att_avg", "]", ",", "axis", "=", "1", ")", "\n", "att_L", "=", "self", ".", "sAtt_L2", "(", "att_pool", ")", "\n", "att_L", "=", "self", ".", "Leaky_relu", "(", "att_L", ")", "\n", "att_L", "=", "self", ".", "sAtt_L3", "(", "att_L", ")", "\n", "att_L", "=", "self", ".", "Leaky_relu", "(", "att_L", ")", "\n", "att_L", "=", "self", ".", "upsample", "(", "att_L", ")", "\n", "\n", "att", "=", "self", ".", "sAtt_3", "(", "att", ")", "\n", "att", "=", "self", ".", "Leaky_relu", "(", "att", ")", "\n", "att", "=", "att", "+", "att_L", "\n", "att", "=", "self", ".", "sAtt_4", "(", "att", ")", "\n", "att", "=", "self", ".", "Leaky_relu", "(", "att", ")", "\n", "att", "=", "self", ".", "upsample", "(", "att", ")", "\n", "att", "=", "self", ".", "sAtt_5", "(", "att", ")", "\n", "att_add", "=", "self", ".", "sAtt_add_1", "(", "att", ")", "\n", "att_add", "=", "self", ".", "Leaky_relu", "(", "att_add", ")", "\n", "att_add", "=", "self", ".", "sAtt_add_2", "(", "att_add", ")", "\n", "att", "=", "self", ".", "sigmoid", "(", "att", ")", "\n", "\n", "fea", "=", "fea", "*", "att", "*", "2", "+", "att_add", "\n", "return", "fea", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.edvr.DCNPack.__init__": [[350, 384], ["paddle.Layer.__init__", "isinstance", "paddle.Conv2D", "paddle.Conv2D", "paddle.vision.ops.DeformConv2D", "paddle.vision.ops.DeformConv2D", "paddle.Sigmoid", "paddle.Sigmoid", "modules.init.constant_init"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.constant_init"], ["def", "__init__", "(", "self", ",", "\n", "num_filters", "=", "64", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "dilation", "=", "1", ",", "\n", "deformable_groups", "=", "8", ",", "\n", "extra_offset_mask", "=", "True", ")", ":", "\n", "        ", "super", "(", "DCNPack", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "extra_offset_mask", "=", "extra_offset_mask", "\n", "self", ".", "deformable_groups", "=", "deformable_groups", "\n", "self", ".", "num_filters", "=", "num_filters", "\n", "if", "isinstance", "(", "kernel_size", ",", "int", ")", ":", "\n", "            ", "self", ".", "kernel_size", "=", "[", "kernel_size", ",", "kernel_size", "]", "\n", "", "self", ".", "conv_offset_mask", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "self", ".", "num_filters", ",", "\n", "out_channels", "=", "self", ".", "deformable_groups", "*", "\n", "3", "*", "self", ".", "kernel_size", "[", "0", "]", "*", "\n", "self", ".", "kernel_size", "[", "1", "]", ",", "\n", "kernel_size", "=", "self", ".", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ")", "\n", "self", ".", "total_channels", "=", "self", ".", "deformable_groups", "*", "3", "*", "self", ".", "kernel_size", "[", "\n", "0", "]", "*", "self", ".", "kernel_size", "[", "1", "]", "\n", "self", ".", "split_channels", "=", "self", ".", "total_channels", "//", "3", "\n", "self", ".", "dcn", "=", "DeformConv2D", "(", "in_channels", "=", "self", ".", "num_filters", ",", "\n", "out_channels", "=", "self", ".", "num_filters", ",", "\n", "kernel_size", "=", "self", ".", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "\n", "dilation", "=", "dilation", ",", "\n", "deformable_groups", "=", "self", ".", "deformable_groups", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "# init conv offset", "\n", "constant_init", "(", "self", ".", "conv_offset_mask", ",", "0.", ",", "0.", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.edvr.DCNPack.forward": [[385, 398], ["paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "edvr.DCNPack.sigmoid", "edvr.DCNPack.dcn", "edvr.DCNPack.conv_offset_mask"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "fea_and_offset", ")", ":", "\n", "        ", "out", "=", "None", "\n", "x", "=", "None", "\n", "if", "self", ".", "extra_offset_mask", ":", "\n", "            ", "out", "=", "self", ".", "conv_offset_mask", "(", "fea_and_offset", "[", "1", "]", ")", "\n", "x", "=", "fea_and_offset", "[", "0", "]", "\n", "", "o1", "=", "out", "[", ":", ",", "0", ":", "self", ".", "split_channels", ",", ":", ",", ":", "]", "\n", "o2", "=", "out", "[", ":", ",", "self", ".", "split_channels", ":", "2", "*", "self", ".", "split_channels", ",", ":", ",", ":", "]", "\n", "mask", "=", "out", "[", ":", ",", "2", "*", "self", ".", "split_channels", ":", ",", ":", ",", ":", "]", "\n", "offset", "=", "paddle", ".", "concat", "(", "[", "o1", ",", "o2", "]", ",", "axis", "=", "1", ")", "\n", "mask", "=", "self", ".", "sigmoid", "(", "mask", ")", "\n", "y", "=", "self", ".", "dcn", "(", "x", ",", "offset", ",", "mask", ")", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.edvr.PCDAlign.__init__": [[411, 509], ["paddle.Layer.__init__", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.Upsample", "paddle.Upsample", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "edvr.DCNPack", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "edvr.DCNPack", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "edvr.DCNPack", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "edvr.DCNPack"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "nf", "=", "64", ",", "groups", "=", "8", ")", ":", "\n", "        ", "super", "(", "PCDAlign", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "nf", "=", "nf", "\n", "self", ".", "groups", "=", "groups", "\n", "self", ".", "Leaky_relu", "=", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.1", ")", "\n", "self", ".", "upsample", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "\n", "mode", "=", "\"bilinear\"", ",", "\n", "align_corners", "=", "False", ",", "\n", "align_mode", "=", "0", ")", "\n", "# Pyramid has three levels:", "\n", "# L3: level 3, 1/4 spatial size", "\n", "# L2: level 2, 1/2 spatial size", "\n", "# L1: level 1, original spatial size", "\n", "\n", "# L3", "\n", "self", ".", "PCD_Align_L3_offset_conv1", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "nf", "*", "2", ",", "\n", "out_channels", "=", "nf", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "self", ".", "PCD_Align_L3_offset_conv2", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "nf", ",", "\n", "out_channels", "=", "nf", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "self", ".", "PCD_Align_L3_dcn", "=", "DCNPack", "(", "num_filters", "=", "nf", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "deformable_groups", "=", "groups", ")", "\n", "#L2", "\n", "self", ".", "PCD_Align_L2_offset_conv1", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "nf", "*", "2", ",", "\n", "out_channels", "=", "nf", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "self", ".", "PCD_Align_L2_offset_conv2", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "nf", "*", "2", ",", "\n", "out_channels", "=", "nf", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "self", ".", "PCD_Align_L2_offset_conv3", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "nf", ",", "\n", "out_channels", "=", "nf", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "self", ".", "PCD_Align_L2_dcn", "=", "DCNPack", "(", "num_filters", "=", "nf", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "deformable_groups", "=", "groups", ")", "\n", "self", ".", "PCD_Align_L2_fea_conv", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "nf", "*", "2", ",", "\n", "out_channels", "=", "nf", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "#L1", "\n", "self", ".", "PCD_Align_L1_offset_conv1", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "nf", "*", "2", ",", "\n", "out_channels", "=", "nf", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "self", ".", "PCD_Align_L1_offset_conv2", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "nf", "*", "2", ",", "\n", "out_channels", "=", "nf", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "self", ".", "PCD_Align_L1_offset_conv3", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "nf", ",", "\n", "out_channels", "=", "nf", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "self", ".", "PCD_Align_L1_dcn", "=", "DCNPack", "(", "num_filters", "=", "nf", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "deformable_groups", "=", "groups", ")", "\n", "self", ".", "PCD_Align_L1_fea_conv", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "nf", "*", "2", ",", "\n", "out_channels", "=", "nf", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "#cascade", "\n", "self", ".", "PCD_Align_cas_offset_conv1", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "nf", "*", "2", ",", "\n", "out_channels", "=", "nf", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "self", ".", "PCD_Align_cas_offset_conv2", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "nf", ",", "\n", "out_channels", "=", "nf", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "self", ".", "PCD_Align_cascade_dcn", "=", "DCNPack", "(", "num_filters", "=", "nf", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "deformable_groups", "=", "groups", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.edvr.PCDAlign.forward": [[510, 572], ["paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "edvr.PCDAlign.PCD_Align_L3_offset_conv1", "edvr.PCDAlign.Leaky_relu", "edvr.PCDAlign.PCD_Align_L3_offset_conv2", "edvr.PCDAlign.Leaky_relu", "edvr.PCDAlign.PCD_Align_L3_dcn", "edvr.PCDAlign.Leaky_relu", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "edvr.PCDAlign.PCD_Align_L2_offset_conv1", "edvr.PCDAlign.Leaky_relu", "edvr.PCDAlign.upsample", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "edvr.PCDAlign.PCD_Align_L2_offset_conv2", "edvr.PCDAlign.Leaky_relu", "edvr.PCDAlign.PCD_Align_L2_offset_conv3", "edvr.PCDAlign.Leaky_relu", "edvr.PCDAlign.PCD_Align_L2_dcn", "edvr.PCDAlign.upsample", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "edvr.PCDAlign.PCD_Align_L2_fea_conv", "edvr.PCDAlign.Leaky_relu", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "edvr.PCDAlign.PCD_Align_L1_offset_conv1", "edvr.PCDAlign.Leaky_relu", "edvr.PCDAlign.upsample", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "edvr.PCDAlign.PCD_Align_L1_offset_conv2", "edvr.PCDAlign.Leaky_relu", "edvr.PCDAlign.PCD_Align_L1_offset_conv3", "edvr.PCDAlign.Leaky_relu", "edvr.PCDAlign.PCD_Align_L1_dcn", "edvr.PCDAlign.upsample", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "edvr.PCDAlign.PCD_Align_L1_fea_conv", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "edvr.PCDAlign.PCD_Align_cas_offset_conv1", "edvr.PCDAlign.Leaky_relu", "edvr.PCDAlign.PCD_Align_cas_offset_conv2", "edvr.PCDAlign.Leaky_relu", "edvr.PCDAlign.PCD_Align_cascade_dcn", "edvr.PCDAlign.Leaky_relu"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.upsample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.upsample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.upsample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.upsample"], ["", "def", "forward", "(", "self", ",", "nbr_fea_l", ",", "ref_fea_l", ")", ":", "\n", "        ", "\"\"\"Align neighboring frame features to the reference frame features.\n\n        Args:\n            nbr_fea_l (list[Tensor]): Neighboring feature list. It\n                contains three pyramid levels (L1, L2, L3),\n                each with shape (b, c, h, w).\n            ref_fea_l (list[Tensor]): Reference feature list. It\n                contains three pyramid levels (L1, L2, L3),\n                each with shape (b, c, h, w).\n\n        Returns:\n            Tensor: Aligned features.\n        \"\"\"", "\n", "#L3", "\n", "L3_offset", "=", "paddle", ".", "concat", "(", "[", "nbr_fea_l", "[", "2", "]", ",", "ref_fea_l", "[", "2", "]", "]", ",", "axis", "=", "1", ")", "\n", "L3_offset", "=", "self", ".", "PCD_Align_L3_offset_conv1", "(", "L3_offset", ")", "\n", "L3_offset", "=", "self", ".", "Leaky_relu", "(", "L3_offset", ")", "\n", "L3_offset", "=", "self", ".", "PCD_Align_L3_offset_conv2", "(", "L3_offset", ")", "\n", "L3_offset", "=", "self", ".", "Leaky_relu", "(", "L3_offset", ")", "\n", "\n", "L3_fea", "=", "self", ".", "PCD_Align_L3_dcn", "(", "[", "nbr_fea_l", "[", "2", "]", ",", "L3_offset", "]", ")", "\n", "L3_fea", "=", "self", ".", "Leaky_relu", "(", "L3_fea", ")", "\n", "#L2", "\n", "L2_offset", "=", "paddle", ".", "concat", "(", "[", "nbr_fea_l", "[", "1", "]", ",", "ref_fea_l", "[", "1", "]", "]", ",", "axis", "=", "1", ")", "\n", "L2_offset", "=", "self", ".", "PCD_Align_L2_offset_conv1", "(", "L2_offset", ")", "\n", "L2_offset", "=", "self", ".", "Leaky_relu", "(", "L2_offset", ")", "\n", "L3_offset", "=", "self", ".", "upsample", "(", "L3_offset", ")", "\n", "L2_offset", "=", "paddle", ".", "concat", "(", "[", "L2_offset", ",", "L3_offset", "*", "2", "]", ",", "axis", "=", "1", ")", "\n", "L2_offset", "=", "self", ".", "PCD_Align_L2_offset_conv2", "(", "L2_offset", ")", "\n", "L2_offset", "=", "self", ".", "Leaky_relu", "(", "L2_offset", ")", "\n", "L2_offset", "=", "self", ".", "PCD_Align_L2_offset_conv3", "(", "L2_offset", ")", "\n", "L2_offset", "=", "self", ".", "Leaky_relu", "(", "L2_offset", ")", "\n", "L2_fea", "=", "self", ".", "PCD_Align_L2_dcn", "(", "[", "nbr_fea_l", "[", "1", "]", ",", "L2_offset", "]", ")", "\n", "L3_fea", "=", "self", ".", "upsample", "(", "L3_fea", ")", "\n", "L2_fea", "=", "paddle", ".", "concat", "(", "[", "L2_fea", ",", "L3_fea", "]", ",", "axis", "=", "1", ")", "\n", "L2_fea", "=", "self", ".", "PCD_Align_L2_fea_conv", "(", "L2_fea", ")", "\n", "L2_fea", "=", "self", ".", "Leaky_relu", "(", "L2_fea", ")", "\n", "#L1", "\n", "L1_offset", "=", "paddle", ".", "concat", "(", "[", "nbr_fea_l", "[", "0", "]", ",", "ref_fea_l", "[", "0", "]", "]", ",", "axis", "=", "1", ")", "\n", "L1_offset", "=", "self", ".", "PCD_Align_L1_offset_conv1", "(", "L1_offset", ")", "\n", "L1_offset", "=", "self", ".", "Leaky_relu", "(", "L1_offset", ")", "\n", "L2_offset", "=", "self", ".", "upsample", "(", "L2_offset", ")", "\n", "L1_offset", "=", "paddle", ".", "concat", "(", "[", "L1_offset", ",", "L2_offset", "*", "2", "]", ",", "axis", "=", "1", ")", "\n", "L1_offset", "=", "self", ".", "PCD_Align_L1_offset_conv2", "(", "L1_offset", ")", "\n", "L1_offset", "=", "self", ".", "Leaky_relu", "(", "L1_offset", ")", "\n", "L1_offset", "=", "self", ".", "PCD_Align_L1_offset_conv3", "(", "L1_offset", ")", "\n", "L1_offset", "=", "self", ".", "Leaky_relu", "(", "L1_offset", ")", "\n", "L1_fea", "=", "self", ".", "PCD_Align_L1_dcn", "(", "[", "nbr_fea_l", "[", "0", "]", ",", "L1_offset", "]", ")", "\n", "L2_fea", "=", "self", ".", "upsample", "(", "L2_fea", ")", "\n", "L1_fea", "=", "paddle", ".", "concat", "(", "[", "L1_fea", ",", "L2_fea", "]", ",", "axis", "=", "1", ")", "\n", "L1_fea", "=", "self", ".", "PCD_Align_L1_fea_conv", "(", "L1_fea", ")", "\n", "#cascade", "\n", "offset", "=", "paddle", ".", "concat", "(", "[", "L1_fea", ",", "ref_fea_l", "[", "0", "]", "]", ",", "axis", "=", "1", ")", "\n", "offset", "=", "self", ".", "PCD_Align_cas_offset_conv1", "(", "offset", ")", "\n", "offset", "=", "self", ".", "Leaky_relu", "(", "offset", ")", "\n", "offset", "=", "self", ".", "PCD_Align_cas_offset_conv2", "(", "offset", ")", "\n", "offset", "=", "self", ".", "Leaky_relu", "(", "offset", ")", "\n", "L1_fea", "=", "self", ".", "PCD_Align_cascade_dcn", "(", "[", "L1_fea", ",", "offset", "]", ")", "\n", "L1_fea", "=", "self", ".", "Leaky_relu", "(", "L1_fea", ")", "\n", "\n", "return", "L1_fea", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.edvr.EDVRNet.__init__": [[597, 710], ["paddle.Layer.__init__", "paddle.LeakyReLU", "paddle.LeakyReLU", "edvr.MakeMultiBlocks", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "edvr.PCDAlign", "edvr.MakeMultiBlocks", "paddle.Conv2D", "paddle.Conv2D", "paddle.PixelShuffle", "paddle.PixelShuffle", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "edvr.PredeblurResNetPyramid", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "edvr.TSAFusion", "paddle.Conv2D", "paddle.Conv2D", "paddle.Upsample", "paddle.Upsample"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.edvr.MakeMultiBlocks", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.edvr.MakeMultiBlocks"], ["def", "__init__", "(", "self", ",", "\n", "in_nf", "=", "3", ",", "\n", "out_nf", "=", "3", ",", "\n", "scale_factor", "=", "4", ",", "\n", "nf", "=", "64", ",", "\n", "nframes", "=", "5", ",", "\n", "groups", "=", "8", ",", "\n", "front_RBs", "=", "5", ",", "\n", "back_RBs", "=", "10", ",", "\n", "center", "=", "None", ",", "\n", "predeblur", "=", "False", ",", "\n", "HR_in", "=", "False", ",", "\n", "w_TSA", "=", "True", ")", ":", "\n", "        ", "super", "(", "EDVRNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_nf", "=", "in_nf", "\n", "self", ".", "out_nf", "=", "out_nf", "\n", "self", ".", "scale_factor", "=", "scale_factor", "\n", "self", ".", "nf", "=", "nf", "\n", "self", ".", "nframes", "=", "nframes", "\n", "self", ".", "groups", "=", "groups", "\n", "self", ".", "front_RBs", "=", "front_RBs", "\n", "self", ".", "back_RBs", "=", "back_RBs", "\n", "self", ".", "center", "=", "nframes", "//", "2", "if", "center", "is", "None", "else", "center", "\n", "self", ".", "predeblur", "=", "True", "if", "predeblur", "else", "False", "\n", "self", ".", "HR_in", "=", "True", "if", "HR_in", "else", "False", "\n", "self", ".", "w_TSA", "=", "True", "if", "w_TSA", "else", "False", "\n", "\n", "self", ".", "Leaky_relu", "=", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.1", ")", "\n", "if", "self", ".", "predeblur", ":", "\n", "            ", "self", ".", "pre_deblur", "=", "PredeblurResNetPyramid", "(", "in_nf", "=", "self", ".", "in_nf", ",", "\n", "nf", "=", "self", ".", "nf", ",", "\n", "HR_in", "=", "self", ".", "HR_in", ")", "\n", "self", ".", "cov_1", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "self", ".", "nf", ",", "\n", "out_channels", "=", "self", ".", "nf", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "conv_first", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "self", ".", "in_nf", ",", "\n", "out_channels", "=", "self", ".", "nf", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "\n", "#feature extraction module", "\n", "", "self", ".", "feature_extractor", "=", "MakeMultiBlocks", "(", "ResidualBlockNoBN", ",", "\n", "self", ".", "front_RBs", ",", "self", ".", "nf", ")", "\n", "self", ".", "fea_L2_conv1", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "self", ".", "nf", ",", "\n", "out_channels", "=", "self", ".", "nf", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ")", "\n", "self", ".", "fea_L2_conv2", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "self", ".", "nf", ",", "\n", "out_channels", "=", "self", ".", "nf", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "self", ".", "fea_L3_conv1", "=", "nn", ".", "Conv2D", "(", "\n", "in_channels", "=", "self", ".", "nf", ",", "\n", "out_channels", "=", "self", ".", "nf", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "\n", ")", "\n", "self", ".", "fea_L3_conv2", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "self", ".", "nf", ",", "\n", "out_channels", "=", "self", ".", "nf", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "\n", "#PCD alignment module", "\n", "self", ".", "PCDModule", "=", "PCDAlign", "(", "nf", "=", "self", ".", "nf", ",", "groups", "=", "self", ".", "groups", ")", "\n", "\n", "#TSA Fusion module", "\n", "if", "self", ".", "w_TSA", ":", "\n", "            ", "self", ".", "TSAModule", "=", "TSAFusion", "(", "nf", "=", "self", ".", "nf", ",", "\n", "nframes", "=", "self", ".", "nframes", ",", "\n", "center", "=", "self", ".", "center", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "TSAModule", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "self", ".", "nframes", "*", "self", ".", "nf", ",", "\n", "out_channels", "=", "self", ".", "nf", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ")", "\n", "\n", "#reconstruction module", "\n", "", "self", ".", "reconstructor", "=", "MakeMultiBlocks", "(", "ResidualBlockNoBN", ",", "self", ".", "back_RBs", ",", "\n", "self", ".", "nf", ")", "\n", "self", ".", "upconv1", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "self", ".", "nf", ",", "\n", "out_channels", "=", "4", "*", "self", ".", "nf", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "\n", "self", ".", "pixel_shuffle", "=", "nn", ".", "PixelShuffle", "(", "2", ")", "\n", "self", ".", "upconv2", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "self", ".", "nf", ",", "\n", "out_channels", "=", "4", "*", "64", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "self", ".", "HRconv", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "64", ",", "\n", "out_channels", "=", "64", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "self", ".", "conv_last", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "64", ",", "\n", "out_channels", "=", "self", ".", "out_nf", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "if", "self", ".", "scale_factor", "==", "4", ":", "\n", "            ", "self", ".", "upsample", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "self", ".", "scale_factor", ",", "\n", "mode", "=", "\"bilinear\"", ",", "\n", "align_corners", "=", "False", ",", "\n", "align_mode", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.edvr.EDVRNet.forward": [[711, 789], ["x.reshape", "edvr.EDVRNet.feature_extractor", "edvr.EDVRNet.fea_L2_conv1", "edvr.EDVRNet.Leaky_relu", "edvr.EDVRNet.fea_L2_conv2", "edvr.EDVRNet.Leaky_relu", "edvr.EDVRNet.fea_L3_conv1", "edvr.EDVRNet.Leaky_relu", "edvr.EDVRNet.fea_L3_conv2", "edvr.EDVRNet.Leaky_relu", "edvr.EDVRNet.reshape", "L2_fea.reshape.reshape.reshape", "L3_fea.reshape.reshape.reshape", "range", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "edvr.EDVRNet.TSAModule", "edvr.EDVRNet.reconstructor", "edvr.EDVRNet.upconv1", "edvr.EDVRNet.pixel_shuffle", "edvr.EDVRNet.Leaky_relu", "edvr.EDVRNet.upconv2", "edvr.EDVRNet.pixel_shuffle", "edvr.EDVRNet.Leaky_relu", "edvr.EDVRNet.HRconv", "edvr.EDVRNet.Leaky_relu", "edvr.EDVRNet.conv_last", "edvr.EDVRNet.pre_deblur", "edvr.EDVRNet.cov_1", "edvr.EDVRNet.conv_first", "edvr.EDVRNet.Leaky_relu", "aligned_fea.reshape.reshape.append", "aligned_fea.reshape.reshape.reshape", "edvr.EDVRNet.upsample", "edvr.EDVRNet.PCDModule"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.upsample"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            x (Tensor): Input features with shape (b, n, c, h, w).\n\n        Returns:\n            Tensor: Features after EDVR with the shape (b, c, scale_factor*h, scale_factor*w).\n        \"\"\"", "\n", "B", ",", "N", ",", "C", ",", "H", ",", "W", "=", "x", ".", "shape", "\n", "x_center", "=", "x", "[", ":", ",", "self", ".", "center", ",", ":", ",", ":", ",", ":", "]", "\n", "L1_fea", "=", "x", ".", "reshape", "(", "[", "-", "1", ",", "C", ",", "H", ",", "W", "]", ")", "#[B*N\uff0cC,W,H]", "\n", "if", "self", ".", "predeblur", ":", "\n", "            ", "L1_fea", "=", "self", ".", "pre_deblur", "(", "L1_fea", ")", "\n", "L1_fea", "=", "self", ".", "cov_1", "(", "L1_fea", ")", "\n", "if", "self", ".", "HR_in", ":", "\n", "                ", "H", ",", "W", "=", "H", "//", "4", ",", "W", "//", "4", "\n", "", "", "else", ":", "\n", "            ", "L1_fea", "=", "self", ".", "conv_first", "(", "L1_fea", ")", "\n", "L1_fea", "=", "self", ".", "Leaky_relu", "(", "L1_fea", ")", "\n", "\n", "# feature extraction and create Pyramid", "\n", "", "L1_fea", "=", "self", ".", "feature_extractor", "(", "L1_fea", ")", "\n", "# L2", "\n", "L2_fea", "=", "self", ".", "fea_L2_conv1", "(", "L1_fea", ")", "\n", "L2_fea", "=", "self", ".", "Leaky_relu", "(", "L2_fea", ")", "\n", "L2_fea", "=", "self", ".", "fea_L2_conv2", "(", "L2_fea", ")", "\n", "L2_fea", "=", "self", ".", "Leaky_relu", "(", "L2_fea", ")", "\n", "# L3", "\n", "L3_fea", "=", "self", ".", "fea_L3_conv1", "(", "L2_fea", ")", "\n", "L3_fea", "=", "self", ".", "Leaky_relu", "(", "L3_fea", ")", "\n", "L3_fea", "=", "self", ".", "fea_L3_conv2", "(", "L3_fea", ")", "\n", "L3_fea", "=", "self", ".", "Leaky_relu", "(", "L3_fea", ")", "\n", "\n", "L1_fea", "=", "L1_fea", ".", "reshape", "(", "[", "-", "1", ",", "N", ",", "self", ".", "nf", ",", "H", ",", "W", "]", ")", "\n", "L2_fea", "=", "L2_fea", ".", "reshape", "(", "[", "-", "1", ",", "N", ",", "self", ".", "nf", ",", "H", "//", "2", ",", "W", "//", "2", "]", ")", "\n", "L3_fea", "=", "L3_fea", ".", "reshape", "(", "[", "-", "1", ",", "N", ",", "self", ".", "nf", ",", "H", "//", "4", ",", "W", "//", "4", "]", ")", "\n", "\n", "# pcd align", "\n", "ref_fea_l", "=", "[", "\n", "L1_fea", "[", ":", ",", "self", ".", "center", ",", ":", ",", ":", ",", ":", "]", ",", "L2_fea", "[", ":", ",", "self", ".", "center", ",", ":", ",", ":", ",", ":", "]", ",", "\n", "L3_fea", "[", ":", ",", "self", ".", "center", ",", ":", ",", ":", ",", ":", "]", "\n", "]", "\n", "aligned_fea", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "            ", "nbr_fea_l", "=", "[", "\n", "L1_fea", "[", ":", ",", "i", ",", ":", ",", ":", ",", ":", "]", ",", "L2_fea", "[", ":", ",", "i", ",", ":", ",", ":", ",", ":", "]", ",", "L3_fea", "[", ":", ",", "\n", "i", ",", ":", ",", ":", ",", ":", "]", "\n", "]", "\n", "aligned_fea", ".", "append", "(", "self", ".", "PCDModule", "(", "nbr_fea_l", ",", "ref_fea_l", ")", ")", "\n", "\n", "# TSA Fusion", "\n", "", "aligned_fea", "=", "paddle", ".", "stack", "(", "aligned_fea", ",", "axis", "=", "1", ")", "# [B, N, C, H, W]", "\n", "fea", "=", "None", "\n", "if", "not", "self", ".", "w_TSA", ":", "\n", "            ", "aligned_fea", "=", "aligned_fea", ".", "reshape", "(", "[", "B", ",", "-", "1", ",", "H", ",", "W", "]", ")", "\n", "", "fea", "=", "self", ".", "TSAModule", "(", "aligned_fea", ")", "# [B, N, C, H, W]", "\n", "\n", "#Reconstruct", "\n", "out", "=", "self", ".", "reconstructor", "(", "fea", ")", "\n", "\n", "out", "=", "self", ".", "upconv1", "(", "out", ")", "\n", "out", "=", "self", ".", "pixel_shuffle", "(", "out", ")", "\n", "out", "=", "self", ".", "Leaky_relu", "(", "out", ")", "\n", "out", "=", "self", ".", "upconv2", "(", "out", ")", "\n", "out", "=", "self", ".", "pixel_shuffle", "(", "out", ")", "\n", "out", "=", "self", ".", "Leaky_relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "HRconv", "(", "out", ")", "\n", "out", "=", "self", ".", "Leaky_relu", "(", "out", ")", "\n", "out", "=", "self", ".", "conv_last", "(", "out", ")", "\n", "\n", "if", "self", ".", "HR_in", ":", "\n", "            ", "base", "=", "x_center", "\n", "", "else", ":", "\n", "            ", "base", "=", "self", ".", "upsample", "(", "x_center", ")", "\n", "\n", "", "out", "+=", "base", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.edvr.default_init_weights": [[26, 52], ["paddle.no_grad", "paddle.no_grad", "isinstance", "isinstance", "modules.init.kaiming_normal_", "m.weight.set_value", "isinstance", "modules.init.constant_", "modules.init.kaiming_normal_", "m.weight.set_value", "modules.init.constant_"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.kaiming_normal_", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.constant_", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.kaiming_normal_", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.constant_"], ["@", "paddle", ".", "no_grad", "(", ")", "\n", "def", "default_init_weights", "(", "module_list", ",", "scale", "=", "1", ",", "bias_fill", "=", "0", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Initialize network weights.\n\n    Args:\n        module_list (list[nn.Module] | nn.Module): Modules to be initialized.\n        scale (float): Scale initialized weights, especially for residual\n            blocks. Default: 1.\n        bias_fill (float): The value to fill bias. Default: 0\n        kwargs (dict): Other arguments for initialization function.\n    \"\"\"", "\n", "if", "not", "isinstance", "(", "module_list", ",", "list", ")", ":", "\n", "        ", "module_list", "=", "[", "module_list", "]", "\n", "", "for", "m", "in", "module_list", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2D", ")", ":", "\n", "            ", "kaiming_normal_", "(", "m", ".", "weight", ",", "**", "kwargs", ")", "\n", "scale_weight", "=", "scale", "*", "m", ".", "weight", "\n", "m", ".", "weight", ".", "set_value", "(", "scale_weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "constant_", "(", "m", ".", "bias", ",", "bias_fill", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "            ", "kaiming_normal_", "(", "m", ".", "weight", ",", "**", "kwargs", ")", "\n", "scale_weight", "=", "scale", "*", "m", ".", "weight", "\n", "m", ".", "weight", ".", "set_value", "(", "scale_weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "constant_", "(", "m", ".", "bias", ",", "bias_fill", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.edvr.MakeMultiBlocks": [[79, 93], ["paddle.Sequential", "range", "nn.Sequential.add_sublayer", "func"], "function", ["None"], ["", "", "def", "MakeMultiBlocks", "(", "func", ",", "num_layers", ",", "nf", "=", "64", ")", ":", "\n", "    ", "\"\"\"Make layers by stacking the same blocks.\n\n    Args:\n        func (nn.Layer): nn.Layer class for basic block.\n        num_layers (int): number of blocks.\n\n    Returns:\n        nn.Sequential: Stacked blocks in nn.Sequential.\n    \"\"\"", "\n", "Blocks", "=", "nn", ".", "Sequential", "(", ")", "\n", "for", "i", "in", "range", "(", "num_layers", ")", ":", "\n", "        ", "Blocks", ".", "add_sublayer", "(", "'block%d'", "%", "i", ",", "func", "(", "nf", ")", ")", "\n", "", "return", "Blocks", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.wav2lip.Wav2Lip.__init__": [[16, 270], ["paddle.nn.Layer.__init__", "paddle.nn.LayerList", "paddle.nn.Sequential", "paddle.nn.LayerList", "paddle.nn.Sequential", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "paddle.nn.Conv2D", "paddle.nn.Sigmoid", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.Conv2dTransposeRelu", "modules.conv.ConvBNRelu", "modules.conv.Conv2dTransposeRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.Conv2dTransposeRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.Conv2dTransposeRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.Conv2dTransposeRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu", "modules.conv.Conv2dTransposeRelu", "modules.conv.ConvBNRelu", "modules.conv.ConvBNRelu"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["\n", "import", "paddle", "\n", "from", "ppgan", ".", "apps", ".", "wav2lip_predictor", "import", "Wav2LipPredictor", "\n", "\n", "parser", "=", "argparse", ".", "ArgumentParser", "(", "\n", "description", "=", "\n", "'Inference code to lip-sync videos in the wild using Wav2Lip models'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--checkpoint_path'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'Name of saved checkpoint to load weights from'", ",", "\n", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--audio'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'Filepath of video/audio file to use as raw audio source'", ",", "\n", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "'--face'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'Filepath of video/image that contains faces to use'", ",", "\n", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "'--outfile'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'Video path to save result. See default for an e.g.'", ",", "\n", "default", "=", "'results/result_voice.mp4'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--static'", ",", "\n", "type", "=", "bool", ",", "\n", "help", "=", "'If True, then use only first video frame for inference'", ",", "\n", "default", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--fps'", ",", "\n", "type", "=", "float", ",", "\n", "help", "=", "'Can be specified only if input is a static image (default: 25)'", ",", "\n", "default", "=", "25.", ",", "\n", "required", "=", "False", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--pads'", ",", "\n", "nargs", "=", "'+'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "[", "0", ",", "10", ",", "0", ",", "0", "]", ",", "\n", "help", "=", "\n", "'Padding (top, bottom, left, right). Please adjust to include chin at least'", "\n", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--face_det_batch_size'", ",", "\n", "type", "=", "int", ",", "\n", "help", "=", "'Batch size for face detection'", ",", "\n", "default", "=", "16", ")", "\n", "parser", ".", "add_argument", "(", "'--wav2lip_batch_size'", ",", "\n", "type", "=", "int", ",", "\n", "help", "=", "'Batch size for Wav2Lip model(s)'", ",", "\n", "default", "=", "128", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--resize_factor'", ",", "\n", "default", "=", "1", ",", "\n", "type", "=", "int", ",", "\n", "help", "=", "\n", "'Reduce the resolution by this factor. Sometimes, best results are obtained at 480p or 720p'", "\n", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--crop'", ",", "\n", "nargs", "=", "'+'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "[", "0", ",", "-", "1", ",", "0", ",", "-", "1", "]", ",", "\n", "help", "=", "\n", "'Crop video to a smaller region (top, bottom, left, right). Applied after resize_factor and rotate arg. '", "\n", "'Useful if multiple face present. -1 implies the value will be auto-inferred based on height, width'", "\n", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--box'", ",", "\n", "nargs", "=", "'+'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "[", "-", "1", ",", "-", "1", ",", "-", "1", ",", "-", "1", "]", ",", "\n", "help", "=", "\n", "'Specify a constant bounding box for the face. Use only as a last resort if the face is not detected.'", "\n", "'Also, might work only if the face is not moving around much. Syntax: (top, bottom, left, right).'", "\n", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--rotate'", ",", "\n", "default", "=", "False", ",", "\n", "action", "=", "'store_true'", ",", "\n", "help", "=", "\n", "'Sometimes videos taken from a phone can be flipped 90deg. If true, will flip video right by 90deg.'", "\n", "'Use if you get a flipped result, despite feeding a normal looking video'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--nosmooth'", ",", "\n", "default", "=", "False", ",", "\n", "action", "=", "'store_true'", ",", "\n", "help", "=", "'Prevent smoothing face detections over a short temporal window'", ")", "\n", "parser", ".", "add_argument", "(", "\"--cpu\"", ",", "dest", "=", "\"cpu\"", ",", "action", "=", "\"store_true\"", ",", "help", "=", "\"cpu mode.\"", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--face_detector\"", ",", "\n", "dest", "=", "\"face_detector\"", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'sfd'", ",", "\n", "help", "=", "\"face detector to be used, can choose s3fd or blazeface\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--face_enhancement\"", ",", "\n", "dest", "=", "\"face_enhancement\"", ",", "\n", "action", "=", "\"store_true\"", ",", "\n", "help", "=", "\"use face enhance for face\"", ")", "\n", "parser", ".", "set_defaults", "(", "face_enhancement", "=", "False", ")", "\n", "\n", "if", "__name__", "==", "\"__main__\"", ":", "\n", "    ", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "if", "args", ".", "cpu", ":", "\n", "        ", "paddle", ".", "set_device", "(", "'cpu'", ")", "\n", "\n", "", "predictor", "=", "Wav2LipPredictor", "(", "checkpoint_path", "=", "args", ".", "checkpoint_path", ",", "\n", "static", "=", "args", ".", "static", ",", "\n", "fps", "=", "args", ".", "fps", ",", "\n", "pads", "=", "args", ".", "pads", ",", "\n", "face_det_batch_size", "=", "args", ".", "face_det_batch_size", ",", "\n", "wav2lip_batch_size", "=", "args", ".", "wav2lip_batch_size", ",", "\n", "resize_factor", "=", "args", ".", "resize_factor", ",", "\n", "crop", "=", "args", ".", "crop", ",", "\n", "box", "=", "args", ".", "box", ",", "\n", "rotate", "=", "args", ".", "rotate", ",", "\n", "nosmooth", "=", "args", ".", "nosmooth", ",", "\n", "face_detector", "=", "args", ".", "face_detector", ",", "\n", "face_enhancement", "=", "args", ".", "face_enhancement", ")", "\n", "predictor", ".", "run", "(", "args", ".", "face", ",", "args", ".", "audio", ",", "args", ".", "outfile", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.wav2lip.Wav2Lip.forward": [[271, 315], ["len", "wav2lip.Wav2Lip.audio_encoder", "wav2lip.Wav2Lip.output_block", "paddle.concat", "paddle.concat", "f", "feats.append", "f", "feats.pop", "paddle.split", "paddle.stack", "paddle.concat", "int", "print", "print", "range", "range"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.MSVSR.__init__": [[62, 191], ["paddle.Layer.__init__", "basicvsr.ResidualBlocksWithInputConv", "paddle.LayerDict", "paddle.LayerDict", "paddle.LayerDict", "paddle.LayerDict", "paddle.LayerDict", "paddle.LayerDict", "enumerate", "msvsr.AlignmentModule", "basicvsr.ResidualBlocksWithInputConv", "basicvsr.ResidualBlocksWithInputConv", "basicvsr.PixelShufflePack", "basicvsr.PixelShufflePack", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "basicvsr.PixelShufflePack", "basicvsr.PixelShufflePack", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "msvsr.ModifiedSPyNet", "utils.download.get_path_from_url", "msvsr.MSVSR.spynet.set_state_dict", "msvsr.ModifiedSPyNet", "utils.download.get_path_from_url", "msvsr.MSVSR.spynet.set_state_dict", "basicvsr.ResidualBlocksWithInputConv", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "basicvsr.ResidualBlocksWithInputConv", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "msvsr.ReAlignmentModule", "msvsr.AlignmentModule", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["def", "__init__", "(", "self", ",", "\n", "mid_channels", "=", "32", ",", "\n", "num_init_blocks", "=", "2", ",", "\n", "num_blocks", "=", "3", ",", "\n", "num_reconstruction_blocks", "=", "2", ",", "\n", "only_last", "=", "True", ",", "\n", "use_tiny_spynet", "=", "True", ",", "\n", "deform_groups", "=", "4", ",", "\n", "stage1_groups", "=", "8", ",", "\n", "auxiliary_loss", "=", "True", ",", "\n", "use_refine_align", "=", "True", ",", "\n", "aux_reconstruction_blocks", "=", "1", ",", "\n", "use_local_connnect", "=", "True", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "mid_channels", "=", "mid_channels", "\n", "self", ".", "only_last", "=", "only_last", "\n", "self", ".", "deform_groups", "=", "deform_groups", "\n", "self", ".", "auxiliary_loss", "=", "auxiliary_loss", "\n", "self", ".", "use_refine_align", "=", "use_refine_align", "\n", "self", ".", "use_local_connnect", "=", "use_local_connnect", "\n", "\n", "# optical flow module", "\n", "if", "use_tiny_spynet", ":", "\n", "            ", "self", ".", "spynet", "=", "ModifiedSPyNet", "(", "num_blocks", "=", "3", ",", "use_tiny_block", "=", "True", ")", "\n", "weight_path", "=", "get_path_from_url", "(", "\n", "'https://paddlegan.bj.bcebos.com/models/modified_spynet_tiny.pdparams'", "\n", ")", "\n", "self", ".", "spynet", ".", "set_state_dict", "(", "paddle", ".", "load", "(", "weight_path", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "spynet", "=", "ModifiedSPyNet", "(", "num_blocks", "=", "6", ",", "use_tiny_block", "=", "False", ")", "\n", "weight_path", "=", "get_path_from_url", "(", "\n", "'https://paddlegan.bj.bcebos.com/models/modified_spynet.pdparams'", "\n", ")", "\n", "self", ".", "spynet", ".", "set_state_dict", "(", "paddle", ".", "load", "(", "weight_path", ")", ")", "\n", "\n", "# feature extraction module", "\n", "", "self", ".", "feat_extract", "=", "ResidualBlocksWithInputConv", "(", "3", ",", "mid_channels", ",", "\n", "num_init_blocks", ")", "\n", "\n", "# propagation branches module for stage2 and stage3", "\n", "self", ".", "deform_align", "=", "nn", ".", "LayerDict", "(", ")", "\n", "self", ".", "backbone", "=", "nn", ".", "LayerDict", "(", ")", "\n", "\n", "prop_names", "=", "[", "\n", "'stage2_backward'", ",", "'stage2_forward'", ",", "'stage3_backward'", ",", "\n", "'stage3_forward'", "\n", "]", "\n", "\n", "for", "i", ",", "layer", "in", "enumerate", "(", "prop_names", ")", ":", "\n", "            ", "if", "i", ">", "1", "and", "self", ".", "use_refine_align", ":", "\n", "                ", "self", ".", "deform_align", "[", "layer", "]", "=", "ReAlignmentModule", "(", "\n", "mid_channels", ",", "\n", "mid_channels", ",", "\n", "3", ",", "\n", "padding", "=", "1", ",", "\n", "deformable_groups", "=", "deform_groups", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "deform_align", "[", "layer", "]", "=", "AlignmentModule", "(", "\n", "mid_channels", ",", "\n", "mid_channels", ",", "\n", "3", ",", "\n", "padding", "=", "1", ",", "\n", "deformable_groups", "=", "deform_groups", ")", "\n", "\n", "", "self", ".", "backbone", "[", "layer", "]", "=", "ResidualBlocksWithInputConv", "(", "\n", "(", "3", "+", "i", ")", "*", "mid_channels", ",", "mid_channels", ",", "num_blocks", ")", "\n", "\n", "# stage1", "\n", "", "self", ".", "stage1_align", "=", "AlignmentModule", "(", "mid_channels", ",", "\n", "mid_channels", ",", "\n", "3", ",", "\n", "padding", "=", "1", ",", "\n", "deformable_groups", "=", "stage1_groups", ")", "\n", "self", ".", "stage1_blocks", "=", "ResidualBlocksWithInputConv", "(", "\n", "3", "*", "mid_channels", ",", "mid_channels", ",", "3", ")", "\n", "\n", "# upsampling module", "\n", "self", ".", "reconstruction", "=", "ResidualBlocksWithInputConv", "(", "\n", "6", "*", "mid_channels", ",", "mid_channels", ",", "num_reconstruction_blocks", ")", "\n", "\n", "self", ".", "upsample1", "=", "PixelShufflePack", "(", "mid_channels", ",", "\n", "mid_channels", ",", "\n", "2", ",", "\n", "upsample_kernel", "=", "3", ")", "\n", "self", ".", "upsample2", "=", "PixelShufflePack", "(", "mid_channels", ",", "\n", "mid_channels", ",", "\n", "2", ",", "\n", "upsample_kernel", "=", "3", ")", "\n", "if", "self", ".", "only_last", ":", "\n", "            ", "self", ".", "conv_last", "=", "nn", ".", "Conv2D", "(", "mid_channels", ",", "3", ",", "3", ",", "1", ",", "1", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "conv_hr", "=", "nn", ".", "Conv2D", "(", "mid_channels", ",", "mid_channels", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "conv_last", "=", "nn", ".", "Conv2D", "(", "mid_channels", ",", "3", ",", "3", ",", "1", ",", "1", ")", "\n", "", "self", ".", "img_upsample", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "4", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "False", ")", "\n", "\n", "# activation function", "\n", "self", ".", "lrelu", "=", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.1", ")", "\n", "\n", "# auxiliary loss", "\n", "if", "self", ".", "auxiliary_loss", ":", "\n", "            ", "self", ".", "aux_fusion", "=", "nn", ".", "Conv2D", "(", "mid_channels", "*", "2", ",", "mid_channels", ",", "3", ",", "1", ",", "1", ")", "\n", "\n", "self", ".", "aux_reconstruction", "=", "ResidualBlocksWithInputConv", "(", "\n", "4", "*", "mid_channels", ",", "mid_channels", ",", "aux_reconstruction_blocks", ")", "\n", "\n", "self", ".", "aux_block_down1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "3", "+", "mid_channels", ",", "mid_channels", ",", "3", ",", "2", ",", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.1", ")", ",", "\n", "nn", ".", "Conv2D", "(", "mid_channels", ",", "mid_channels", ",", "3", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "aux_block_down2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "mid_channels", "*", "2", ",", "mid_channels", ",", "3", ",", "2", ",", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.1", ")", ",", "\n", "nn", ".", "Conv2D", "(", "mid_channels", ",", "mid_channels", ",", "3", ",", "1", ",", "1", ")", ")", "\n", "\n", "self", ".", "aux_conv_last", "=", "nn", ".", "Conv2D", "(", "mid_channels", ",", "3", ",", "3", ",", "1", ",", "1", ")", "\n", "\n", "", "self", ".", "aux_upsample1", "=", "PixelShufflePack", "(", "mid_channels", ",", "\n", "mid_channels", ",", "\n", "2", ",", "\n", "upsample_kernel", "=", "3", ")", "\n", "self", ".", "aux_upsample2", "=", "PixelShufflePack", "(", "mid_channels", ",", "\n", "mid_channels", ",", "\n", "2", ",", "\n", "upsample_kernel", "=", "3", ")", "\n", "self", ".", "hybrid_conv_last", "=", "nn", ".", "Conv2D", "(", "mid_channels", ",", "3", ",", "3", ",", "1", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.MSVSR.check_if_mirror_extended": [[192, 210], ["paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.flip", "paddle.flip", "paddle.flip", "paddle.flip", "paddle.flip", "paddle.flip", "paddle.flip", "paddle.flip", "paddle.flip", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm", "paddle.norm"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm"], ["", "def", "check_if_mirror_extended", "(", "self", ",", "lrs", ")", ":", "\n", "        ", "\"\"\"Check whether the input is a mirror-extended sequence.\n        If mirror-extended, the i-th (i=0, ..., t-1) frame is equal to the\n        (t-1-i)-th frame.\n        Args:\n            lrs (tensor): Input LR images with shape (n, t, c, h, w)\n\n        Returns:\n            Bool: Whether the input is a mirror-extended sequence.\n        \"\"\"", "\n", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "            ", "self", ".", "is_mirror_extended", "=", "False", "\n", "if", "lrs", ".", "shape", "[", "1", "]", "%", "2", "==", "0", ":", "\n", "                ", "lrs_1", ",", "lrs_2", "=", "paddle", ".", "chunk", "(", "lrs", ",", "2", ",", "axis", "=", "1", ")", "\n", "lrs_2", "=", "paddle", ".", "flip", "(", "lrs_2", ",", "[", "1", "]", ")", "\n", "if", "paddle", ".", "norm", "(", "lrs_1", "-", "lrs_2", ")", "==", "0", ":", "\n", "                    ", "self", ".", "is_mirror_extended", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.MSVSR.compute_flow": [[211, 233], ["lrs[].reshape", "lrs[].reshape", "msvsr.MSVSR.spynet().reshape", "msvsr.MSVSR.flip", "msvsr.MSVSR.spynet().reshape", "msvsr.MSVSR.spynet", "msvsr.MSVSR.spynet"], "methods", ["None"], ["", "", "", "", "def", "compute_flow", "(", "self", ",", "lrs", ")", ":", "\n", "        ", "\"\"\"Compute optical flow using pretrained flow network for feature alignment.\n        Args:\n            lrs (tensor): Input LR images with shape (n, t, c, h, w)\n\n        Returns:\n            Tuple: Tensor of forward optical flow and backward optical flow with shape (n, t-1, 2, h, w).\n        \"\"\"", "\n", "n", ",", "t", ",", "c", ",", "h", ",", "w", "=", "lrs", ".", "shape", "\n", "\n", "lrs_1", "=", "lrs", "[", ":", ",", ":", "-", "1", ",", ":", ",", ":", ",", ":", "]", ".", "reshape", "(", "[", "-", "1", ",", "c", ",", "h", ",", "w", "]", ")", "\n", "lrs_2", "=", "lrs", "[", ":", ",", "1", ":", ",", ":", ",", ":", ",", ":", "]", ".", "reshape", "(", "[", "-", "1", ",", "c", ",", "h", ",", "w", "]", ")", "\n", "\n", "flows_backward", "=", "self", ".", "spynet", "(", "lrs_1", ",", "lrs_2", ")", ".", "reshape", "(", "[", "n", ",", "t", "-", "1", ",", "2", ",", "h", ",", "w", "]", ")", "\n", "\n", "if", "self", ".", "is_mirror_extended", ":", "\n", "            ", "flows_forward", "=", "flows_backward", ".", "flip", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "flows_forward", "=", "self", ".", "spynet", "(", "lrs_2", ",", "\n", "lrs_1", ")", ".", "reshape", "(", "[", "n", ",", "t", "-", "1", ",", "2", ",", "h", ",", "w", "]", ")", "\n", "\n", "", "return", "flows_forward", ",", "flows_backward", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.MSVSR.stage1": [[234, 287], ["range", "range", "list", "enumerate", "range", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "msvsr.MSVSR.stage1_blocks", "feats[].append", "len", "basicvsr.flow_warp", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "msvsr.MSVSR.stage1_align", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "basicvsr.flow_warp", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "msvsr.MSVSR.stage1_align", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "flow_n1.transpose", "flow_n1_.transpose"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.flow_warp", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.flow_warp"], ["", "def", "stage1", "(", "self", ",", "feats", ",", "flows", ",", "flows_forward", "=", "None", ")", ":", "\n", "        ", "\"\"\"Stage1 of PP-MSVSR network.\n        Args:\n            feats (dict): Dict with key 'spatial', the value is Array of tensor after feature extraction with shape (n, c, h, w).\n            flows (tensor): Backward optical flow with shape (n, t-1, 2, h, w).\n            flows_forward (tensor): Forward optical flow with shape (n, t-1, 2, h, w).\n\n        Returns:\n            Dict: The input dict with new keys 'feat_stage1', the value of 'feat_stage1' is Array of tensor after Local Fusion Module with shape (n, c, h, w).\n        \"\"\"", "\n", "\n", "n", ",", "t", ",", "_", ",", "h", ",", "w", "=", "flows", ".", "shape", "\n", "\n", "frame_idx", "=", "range", "(", "t", ",", "-", "1", ",", "-", "1", ")", "\n", "flow_idx", "=", "range", "(", "t", ",", "-", "1", ",", "-", "1", ")", "\n", "mapping_idx", "=", "list", "(", "range", "(", "0", ",", "len", "(", "feats", "[", "'spatial'", "]", ")", ")", ")", "\n", "mapping_idx", "+=", "mapping_idx", "[", ":", ":", "-", "1", "]", "\n", "\n", "# Local Fusion Module", "\n", "for", "i", ",", "idx", "in", "enumerate", "(", "frame_idx", ")", ":", "\n", "            ", "feat_current", "=", "feats", "[", "'spatial'", "]", "[", "mapping_idx", "[", "idx", "]", "]", "\n", "\n", "# get aligned right adjacent frames", "\n", "if", "i", ">", "0", ":", "\n", "                ", "feat_prop", "=", "feats", "[", "'spatial'", "]", "[", "mapping_idx", "[", "idx", "+", "1", "]", "]", "\n", "flow_n1", "=", "flows", "[", ":", ",", "flow_idx", "[", "i", "]", ",", ":", ",", ":", ",", ":", "]", "\n", "cond_n1", "=", "flow_warp", "(", "feat_prop", ",", "flow_n1", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", ")", "\n", "cond", "=", "paddle", ".", "concat", "(", "[", "cond_n1", ",", "feat_current", "]", ",", "axis", "=", "1", ")", "\n", "feat_prop", ",", "_", ",", "_", "=", "self", ".", "stage1_align", "(", "feat_prop", ",", "cond", ",", "flow_n1", ")", "\n", "", "else", ":", "\n", "                ", "feat_prop", "=", "paddle", ".", "zeros", "(", "[", "n", ",", "self", ".", "mid_channels", ",", "h", ",", "w", "]", ")", "\n", "\n", "# get aligned left adjacent frames", "\n", "", "if", "i", "<", "t", ":", "\n", "                ", "feat_back", "=", "feats", "[", "'spatial'", "]", "[", "mapping_idx", "[", "idx", "-", "1", "]", "]", "\n", "flow_n1_", "=", "flows_forward", "[", ":", ",", "flow_idx", "[", "i", "]", "-", "1", ",", ":", ",", ":", ",", ":", "]", "\n", "cond_n1_", "=", "flow_warp", "(", "feat_back", ",", "flow_n1_", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "\n", "1", "]", ")", ")", "\n", "cond_", "=", "paddle", ".", "concat", "(", "[", "cond_n1_", ",", "feat_current", "]", ",", "axis", "=", "1", ")", "\n", "feat_back", ",", "_", ",", "_", "=", "self", ".", "stage1_align", "(", "feat_back", ",", "cond_", ",", "flow_n1_", ")", "\n", "", "else", ":", "\n", "                ", "feat_back", "=", "paddle", ".", "zeros", "(", "[", "n", ",", "self", ".", "mid_channels", ",", "h", ",", "w", "]", ")", "\n", "\n", "# concatenate and residual blocks", "\n", "", "feat", "=", "[", "feat_current", "]", "+", "[", "feat_prop", "]", "+", "[", "feat_back", "]", "\n", "feat", "=", "paddle", ".", "concat", "(", "feat", ",", "axis", "=", "1", ")", "\n", "feat", "=", "self", ".", "stage1_blocks", "(", "feat", ")", "\n", "\n", "feats", "[", "'feat_stage1'", "]", ".", "append", "(", "feat", ")", "\n", "\n", "", "feats", "[", "'feat_stage1'", "]", "=", "feats", "[", "'feat_stage1'", "]", "[", ":", ":", "-", "1", "]", "\n", "\n", "return", "feats", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.MSVSR.stage2": [[288, 355], ["range", "range", "range", "list", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "enumerate", "range", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "feats[].append", "range", "range", "len", "basicvsr.flow_warp", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "flow_n1.transpose"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.flow_warp"], ["", "def", "stage2", "(", "self", ",", "feats", ",", "flows", ")", ":", "\n", "        ", "\"\"\"Stage2 of PP-MSVSR network.\n        Args:\n            feats (dict): Dict with key 'spatial' and 'feat_stage1' after stage1.\n            flows (tuple): Tensor of backward optical flow and forward optical flow with shape (n, t-1, 2, h, w).\n\n        Returns:\n            feats (dict): The input dict with new keys 'stage2_backward' and 'stage2_forward', the value of both is Array of feature after stage2 with shape (n, c, h, w).\n            pre_offset (dict): Dict with keys 'stage2_backward' and 'stage2_forward', the value of both is Array of offset in stage2 with shape (n, 18*deform_groups, h, w).\n            pre_mask (dict): Dict with keys 'stage2_backward' and 'stage2_forward', the value of both is Array of mask in stage2 with shape (n, 9*deform_groups, h, w).\n        \"\"\"", "\n", "flows_backward", ",", "flows_forward", "=", "flows", "\n", "n", ",", "t", ",", "_", ",", "h", ",", "w", "=", "flows_backward", ".", "shape", "\n", "\n", "pre_offset", "=", "{", "}", "\n", "pre_mask", "=", "{", "}", "\n", "\n", "# propagation branches module", "\n", "prop_names", "=", "[", "'stage2_backward'", ",", "'stage2_forward'", "]", "\n", "for", "index", "in", "range", "(", "2", ")", ":", "\n", "            ", "prop_name", "=", "prop_names", "[", "index", "]", "\n", "pre_offset", "[", "prop_name", "]", "=", "[", "0", "for", "_", "in", "range", "(", "t", ")", "]", "\n", "pre_mask", "[", "prop_name", "]", "=", "[", "0", "for", "_", "in", "range", "(", "t", ")", "]", "\n", "feats", "[", "prop_name", "]", "=", "[", "]", "\n", "frame_idx", "=", "range", "(", "0", ",", "t", "+", "1", ")", "\n", "flow_idx", "=", "range", "(", "-", "1", ",", "t", ")", "\n", "mapping_idx", "=", "list", "(", "range", "(", "0", ",", "len", "(", "feats", "[", "'spatial'", "]", ")", ")", ")", "\n", "mapping_idx", "+=", "mapping_idx", "[", ":", ":", "-", "1", "]", "\n", "\n", "if", "'backward'", "in", "prop_name", ":", "\n", "                ", "frame_idx", "=", "frame_idx", "[", ":", ":", "-", "1", "]", "\n", "flow_idx", "=", "frame_idx", "\n", "flows", "=", "flows_backward", "\n", "", "else", ":", "\n", "                ", "flows", "=", "flows_forward", "\n", "\n", "", "feat_prop", "=", "paddle", ".", "zeros", "(", "[", "n", ",", "self", ".", "mid_channels", ",", "h", ",", "w", "]", ")", "\n", "for", "i", ",", "idx", "in", "enumerate", "(", "frame_idx", ")", ":", "\n", "                ", "feat_current", "=", "feats", "[", "'spatial'", "]", "[", "mapping_idx", "[", "idx", "]", "]", "\n", "\n", "if", "i", ">", "0", ":", "\n", "                    ", "flow_n1", "=", "flows", "[", ":", ",", "flow_idx", "[", "i", "]", ",", ":", ",", ":", ",", ":", "]", "\n", "\n", "cond_n1", "=", "flow_warp", "(", "feat_prop", ",", "\n", "flow_n1", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", ")", "\n", "cond", "=", "paddle", ".", "concat", "(", "[", "cond_n1", ",", "feat_current", "]", ",", "axis", "=", "1", ")", "\n", "\n", "feat_prop", ",", "offset", ",", "mask", "=", "self", ".", "deform_align", "[", "prop_name", "]", "(", "\n", "feat_prop", ",", "cond", ",", "flow_n1", ")", "\n", "pre_offset", "[", "prop_name", "]", "[", "flow_idx", "[", "i", "]", "]", "=", "offset", "\n", "pre_mask", "[", "prop_name", "]", "[", "flow_idx", "[", "i", "]", "]", "=", "(", "mask", ")", "\n", "\n", "# concatenate and residual blocks", "\n", "", "feat", "=", "[", "feat_current", "]", "+", "[", "\n", "feats", "[", "k", "]", "[", "idx", "]", "\n", "for", "k", "in", "feats", "if", "k", "not", "in", "[", "'spatial'", ",", "prop_name", "]", "\n", "]", "+", "[", "feat_prop", "]", "\n", "\n", "feat", "=", "paddle", ".", "concat", "(", "feat", ",", "axis", "=", "1", ")", "\n", "feat_prop", "=", "feat_prop", "+", "self", ".", "backbone", "[", "prop_name", "]", "(", "feat", ")", "\n", "\n", "feats", "[", "prop_name", "]", ".", "append", "(", "feat_prop", ")", "\n", "\n", "", "if", "'backward'", "in", "prop_name", ":", "\n", "                ", "feats", "[", "prop_name", "]", "=", "feats", "[", "prop_name", "]", "[", ":", ":", "-", "1", "]", "\n", "\n", "", "", "return", "feats", ",", "pre_offset", ",", "pre_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.MSVSR.stage3": [[356, 428], ["range", "range", "range", "list", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "enumerate", "range", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "feats[].append", "len", "basicvsr.flow_warp", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "flow_n1.transpose"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.flow_warp"], ["", "def", "stage3", "(", "self", ",", "\n", "feats", ",", "\n", "flows", ",", "\n", "aux_feats", "=", "None", ",", "\n", "pre_offset", "=", "None", ",", "\n", "pre_mask", "=", "None", ")", ":", "\n", "        ", "\"\"\"Stage3 of PP-MSVSR network.\n        Args:\n            feats (dict): Dict of features after stage2.\n            flows (tuple): Tensor of backward optical flow and forward optical flow with shape (n, t-1, 2, h, w).\n            aux_feats (dict): Dict with keys 'outs' and 'feats', the value is Array of tensor after auxiliary_stage with shape (n, 3, 4*h, 4*w) and (n, c, h, w), separately.\n            pre_offset (dict): Dict with keys 'stage2_backward' and 'stage2_forward', the value of both is Array of offset in stage2 with shape (n, 18*deform_groups, h, w).\n            pre_mask (dict): Dict with keys 'stage2_backward' and 'stage2_forward', the value of both is Array of mask in stage2 with shape (n, 9*deform_groups, h, w).\n\n        Returns:\n            feats (dict): The input feats dict with new keys 'stage3_backward' and 'stage3_forward', the value of both is Array of feature after stage3 with shape (n, c, h, w).\n            \"\"\"", "\n", "flows_backward", ",", "flows_forward", "=", "flows", "\n", "n", ",", "t", ",", "_", ",", "h", ",", "w", "=", "flows_backward", ".", "shape", "\n", "\n", "# propagation branches module", "\n", "prop_names", "=", "[", "'stage3_backward'", ",", "'stage3_forward'", "]", "\n", "for", "index", "in", "range", "(", "2", ")", ":", "\n", "            ", "prop_name", "=", "prop_names", "[", "index", "]", "\n", "feats", "[", "prop_name", "]", "=", "[", "]", "\n", "frame_idx", "=", "range", "(", "0", ",", "t", "+", "1", ")", "\n", "flow_idx", "=", "range", "(", "-", "1", ",", "t", ")", "\n", "mapping_idx", "=", "list", "(", "range", "(", "0", ",", "len", "(", "feats", "[", "'spatial'", "]", ")", ")", ")", "\n", "mapping_idx", "+=", "mapping_idx", "[", ":", ":", "-", "1", "]", "\n", "\n", "if", "'backward'", "in", "prop_name", ":", "\n", "                ", "frame_idx", "=", "frame_idx", "[", ":", ":", "-", "1", "]", "\n", "flow_idx", "=", "frame_idx", "\n", "flows", "=", "flows_backward", "\n", "pre_stage_name", "=", "'stage2_backward'", "\n", "", "else", ":", "\n", "                ", "flows", "=", "flows_forward", "\n", "pre_stage_name", "=", "'stage2_forward'", "\n", "\n", "", "feat_prop", "=", "paddle", ".", "zeros", "(", "[", "n", ",", "self", ".", "mid_channels", ",", "h", ",", "w", "]", ")", "\n", "for", "i", ",", "idx", "in", "enumerate", "(", "frame_idx", ")", ":", "\n", "                ", "feat_current", "=", "feats", "[", "'spatial'", "]", "[", "mapping_idx", "[", "idx", "]", "]", "\n", "if", "aux_feats", "is", "not", "None", "and", "'feats'", "in", "aux_feats", ":", "\n", "                    ", "feat_current", "=", "aux_feats", "[", "'feats'", "]", "[", "mapping_idx", "[", "idx", "]", "]", "\n", "\n", "", "if", "i", ">", "0", ":", "\n", "                    ", "flow_n1", "=", "flows", "[", ":", ",", "flow_idx", "[", "i", "]", ",", ":", ",", ":", ",", ":", "]", "\n", "\n", "cond_n1", "=", "flow_warp", "(", "feat_prop", ",", "\n", "flow_n1", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", ")", "\n", "cond", "=", "paddle", ".", "concat", "(", "[", "cond_n1", ",", "feat_current", "]", ",", "axis", "=", "1", ")", "\n", "\n", "feat_prop", "=", "self", ".", "deform_align", "[", "prop_name", "]", "(", "\n", "feat_prop", ",", "cond", ",", "flow_n1", ",", "feat_current", ",", "\n", "pre_offset", "[", "pre_stage_name", "]", "[", "flow_idx", "[", "i", "]", "]", ",", "\n", "pre_mask", "[", "pre_stage_name", "]", "[", "flow_idx", "[", "i", "]", "]", ")", "\n", "\n", "# concatenate and residual blocks", "\n", "", "feat", "=", "[", "feat_current", "]", "+", "[", "\n", "feats", "[", "k", "]", "[", "idx", "]", "\n", "for", "k", "in", "feats", "if", "k", "not", "in", "[", "'spatial'", ",", "prop_name", "]", "\n", "]", "+", "[", "feat_prop", "]", "\n", "\n", "feat", "=", "paddle", ".", "concat", "(", "feat", ",", "axis", "=", "1", ")", "\n", "feat_prop", "=", "feat_prop", "+", "self", ".", "backbone", "[", "prop_name", "]", "(", "feat", ")", "\n", "\n", "feats", "[", "prop_name", "]", ".", "append", "(", "feat_prop", ")", "\n", "\n", "", "if", "'backward'", "in", "prop_name", ":", "\n", "                ", "feats", "[", "prop_name", "]", "=", "feats", "[", "prop_name", "]", "[", ":", ":", "-", "1", "]", "\n", "\n", "", "", "return", "feats", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.MSVSR.auxiliary_stage": [[429, 474], ["len", "list", "range", "range", "msvsr.MSVSR.insert", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "msvsr.MSVSR.aux_reconstruction", "msvsr.MSVSR.lrelu", "msvsr.MSVSR.lrelu", "msvsr.MSVSR.aux_conv_last", "msvsr.MSVSR.img_upsample", "aux_feats[].append", "msvsr.MSVSR.aux_block_down1", "msvsr.MSVSR.aux_block_down2", "msvsr.MSVSR.aux_fusion", "aux_feats[].append", "msvsr.MSVSR.aux_upsample1", "msvsr.MSVSR.aux_upsample2", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.insert", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "auxiliary_stage", "(", "self", ",", "feats", ",", "lqs", ")", ":", "\n", "        ", "\"\"\"Compute the output image and auxiliary feature for Auxiliary Loss in stage2.\n        Args:\n            feats (dict): Dict of features after stage2.\n            lqs (tensor): Input LR images with shape (n, t, c, h, w)\n\n        Returns:\n            dict: Dict with keys 'outs' and 'feats', the value is Array of tensor after auxiliary_stage with shape (n, 3, 4*h, 4*w) and (n, c, h, w), separately.\n        \"\"\"", "\n", "aux_feats", "=", "{", "}", "\n", "aux_feats", "[", "'outs'", "]", "=", "[", "]", "\n", "aux_feats", "[", "'feats'", "]", "=", "[", "]", "\n", "num_outputs", "=", "len", "(", "feats", "[", "'spatial'", "]", ")", "\n", "\n", "mapping_idx", "=", "list", "(", "range", "(", "0", ",", "num_outputs", ")", ")", "\n", "mapping_idx", "+=", "mapping_idx", "[", ":", ":", "-", "1", "]", "\n", "\n", "t", "=", "lqs", ".", "shape", "[", "1", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "t", ")", ":", "\n", "            ", "hr", "=", "[", "feats", "[", "k", "]", "[", "i", "]", "for", "k", "in", "feats", "if", "(", "k", "!=", "'spatial'", ")", "]", "\n", "feat_current", "=", "feats", "[", "'spatial'", "]", "[", "mapping_idx", "[", "i", "]", "]", "\n", "hr", ".", "insert", "(", "0", ",", "feat_current", ")", "\n", "hr", "=", "paddle", ".", "concat", "(", "hr", ",", "axis", "=", "1", ")", "\n", "\n", "hr_low", "=", "self", ".", "aux_reconstruction", "(", "hr", ")", "\n", "hr_mid", "=", "self", ".", "lrelu", "(", "self", ".", "aux_upsample1", "(", "hr_low", ")", ")", "\n", "hr_high", "=", "self", ".", "lrelu", "(", "self", ".", "aux_upsample2", "(", "hr_mid", ")", ")", "\n", "\n", "hr", "=", "self", ".", "aux_conv_last", "(", "hr_high", ")", "\n", "hr", "+=", "self", ".", "img_upsample", "(", "lqs", "[", ":", ",", "i", ",", ":", ",", ":", ",", ":", "]", ")", "\n", "\n", "# output tensor of auxiliary_stage with shape (n, 3, 4*h, 4*w)", "\n", "aux_feats", "[", "'outs'", "]", ".", "append", "(", "hr", ")", "\n", "\n", "aux_feat", "=", "self", ".", "aux_block_down1", "(", "paddle", ".", "concat", "(", "[", "hr", ",", "hr_high", "]", ",", "\n", "axis", "=", "1", ")", ")", "\n", "aux_feat", "=", "self", ".", "aux_block_down2", "(", "\n", "paddle", ".", "concat", "(", "[", "aux_feat", ",", "hr_mid", "]", ",", "axis", "=", "1", ")", ")", "\n", "aux_feat", "=", "self", ".", "aux_fusion", "(", "paddle", ".", "concat", "(", "[", "aux_feat", ",", "hr_low", "]", ",", "\n", "axis", "=", "1", ")", ")", "\n", "\n", "# out feature of auxiliary_stage with shape (n, c, h, w)", "\n", "aux_feats", "[", "'feats'", "]", ".", "append", "(", "aux_feat", ")", "\n", "\n", "", "return", "aux_feats", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.MSVSR.upsample": [[475, 526], ["len", "list", "range", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "range", "msvsr.MSVSR.insert", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "msvsr.MSVSR.reconstruction", "msvsr.MSVSR.lrelu", "msvsr.MSVSR.lrelu", "msvsr.MSVSR.img_upsample", "outputs.append", "feats[].pop", "feats[].pop", "msvsr.MSVSR.insert", "msvsr.MSVSR.upsample1", "msvsr.MSVSR.upsample2", "msvsr.MSVSR.conv_last", "msvsr.MSVSR.lrelu", "msvsr.MSVSR.conv_last", "msvsr.MSVSR.lrelu", "msvsr.MSVSR.lrelu", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "msvsr.MSVSR.conv_hr", "msvsr.MSVSR.aux_upsample1", "msvsr.MSVSR.aux_upsample2", "msvsr.MSVSR.hybrid_conv_last"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.insert", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.insert"], ["", "def", "upsample", "(", "self", ",", "lqs", ",", "feats", ",", "aux_feats", "=", "None", ")", ":", "\n", "        ", "\"\"\"Compute the output image given the features.\n        Args:\n            lqs (tensor): Input LR images with shape (n, t, c, h, w).\n            feats (dict): Dict of features after stage3.\n            aux_feats (dict): Dict with keys 'outs' and 'feats', the value is Array of tensor after auxiliary_stage with shape (n, 3, 4*h, 4*w) and (n, c, h, w), separately.\n\n        Returns:\n            Tensor: Output HR sequence with shape (n, t, 3, 4*h, 4*w).\n        \"\"\"", "\n", "\n", "outputs", "=", "[", "]", "\n", "num_outputs", "=", "len", "(", "feats", "[", "'spatial'", "]", ")", "\n", "\n", "mapping_idx", "=", "list", "(", "range", "(", "0", ",", "num_outputs", ")", ")", "\n", "mapping_idx", "+=", "mapping_idx", "[", ":", ":", "-", "1", "]", "\n", "\n", "t", "=", "lqs", ".", "shape", "[", "1", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "t", ")", ":", "\n", "            ", "hr", "=", "[", "\n", "feats", "[", "k", "]", ".", "pop", "(", "0", ")", "for", "k", "in", "feats", "\n", "if", "(", "k", "!=", "'spatial'", "and", "k", "!=", "'feat_stage1'", ")", "\n", "]", "\n", "if", "'feat_stage1'", "in", "feats", ":", "\n", "                ", "local_feat", "=", "feats", "[", "'feat_stage1'", "]", ".", "pop", "(", "0", ")", "\n", "hr", ".", "insert", "(", "0", ",", "local_feat", ")", "\n", "", "hr", ".", "insert", "(", "0", ",", "feats", "[", "'spatial'", "]", "[", "mapping_idx", "[", "i", "]", "]", ")", "\n", "hr", "=", "paddle", ".", "concat", "(", "hr", ",", "axis", "=", "1", ")", "\n", "\n", "hr", "=", "self", ".", "reconstruction", "(", "hr", ")", "\n", "\n", "hr", "=", "self", ".", "lrelu", "(", "self", ".", "upsample1", "(", "hr", ")", ")", "\n", "hr", "=", "self", ".", "lrelu", "(", "self", ".", "upsample2", "(", "hr", ")", ")", "\n", "if", "self", ".", "only_last", ":", "\n", "                ", "hr", "=", "self", ".", "conv_last", "(", "hr", ")", "\n", "", "else", ":", "\n", "                ", "hr", "=", "self", ".", "lrelu", "(", "self", ".", "conv_hr", "(", "hr", ")", ")", "\n", "hr", "=", "self", ".", "conv_last", "(", "hr", ")", "\n", "\n", "", "hr", "+=", "self", ".", "img_upsample", "(", "lqs", "[", ":", ",", "i", ",", ":", ",", ":", ",", ":", "]", ")", "\n", "if", "self", ".", "use_local_connnect", ":", "\n", "                ", "local_head", "=", "self", ".", "lrelu", "(", "self", ".", "aux_upsample1", "(", "local_feat", ")", ")", "\n", "local_head", "=", "self", ".", "lrelu", "(", "self", ".", "aux_upsample2", "(", "local_head", ")", ")", "\n", "hr", "=", "self", ".", "hybrid_conv_last", "(", "local_head", ")", "+", "hr", "\n", "\n", "", "outputs", ".", "append", "(", "hr", ")", "\n", "\n", "", "if", "self", ".", "auxiliary_loss", ":", "\n", "            ", "return", "paddle", ".", "stack", "(", "aux_feats", "[", "'outs'", "]", ",", "\n", "axis", "=", "1", ")", ",", "paddle", ".", "stack", "(", "outputs", ",", "axis", "=", "1", ")", "\n", "", "return", "paddle", ".", "stack", "(", "outputs", ",", "axis", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.MSVSR.forward": [[527, 570], ["msvsr.MSVSR.check_if_mirror_extended", "msvsr.MSVSR.feat_extract", "feats_.reshape.reshape.reshape", "msvsr.MSVSR.compute_flow", "msvsr.MSVSR.stage1", "msvsr.MSVSR.stage2", "msvsr.MSVSR.stage3", "msvsr.MSVSR.upsample", "lqs.reshape", "msvsr.MSVSR.auxiliary_stage", "range"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.MSVSR.check_if_mirror_extended", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.ModifiedSPyNet.compute_flow", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.MSVSR.stage1", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.MSVSR.stage2", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.MSVSR.stage3", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.upsample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.MSVSR.auxiliary_stage"], ["", "def", "forward", "(", "self", ",", "lqs", ")", ":", "\n", "        ", "\"\"\"Forward function for PP-MSVSR.\n        Args:\n            lqs (Tensor): Input LR sequence with shape (n, t, c, h, w).\n        Returns:\n            Tensor: Output HR sequence with shape (n, t, 3, 4*h, 4*w).\n        \"\"\"", "\n", "\n", "n", ",", "t", ",", "c", ",", "h", ",", "w", "=", "lqs", ".", "shape", "\n", "\n", "lqs_downsample", "=", "lqs", "\n", "\n", "# check whether the input is an extended sequence", "\n", "self", ".", "check_if_mirror_extended", "(", "lqs", ")", "\n", "\n", "feats", "=", "{", "}", "\n", "feats_", "=", "self", ".", "feat_extract", "(", "lqs", ".", "reshape", "(", "[", "-", "1", ",", "c", ",", "h", ",", "w", "]", ")", ")", "\n", "\n", "h", ",", "w", "=", "feats_", ".", "shape", "[", "2", ":", "]", "\n", "feats_", "=", "feats_", ".", "reshape", "(", "[", "n", ",", "t", ",", "-", "1", ",", "h", ",", "w", "]", ")", "\n", "feats", "[", "'spatial'", "]", "=", "[", "feats_", "[", ":", ",", "i", ",", ":", ",", ":", ",", ":", "]", "for", "i", "in", "range", "(", "0", ",", "t", ")", "]", "\n", "\n", "# compute optical flow using the low-res inputs", "\n", "assert", "lqs_downsample", ".", "shape", "[", "3", "]", ">=", "64", "and", "lqs_downsample", ".", "shape", "[", "4", "]", ">=", "64", ",", "(", "\n", "'The height and width of low-res inputs must be at least 64, '", "\n", "f'but got {h} and {w}.'", ")", "\n", "\n", "flows_forward", ",", "flows_backward", "=", "self", ".", "compute_flow", "(", "lqs_downsample", ")", "\n", "\n", "# feature propgation", "\n", "feats", "[", "'feat_stage1'", "]", "=", "[", "]", "\n", "feats", "=", "self", ".", "stage1", "(", "feats", ",", "flows_backward", ",", "flows_forward", ")", "\n", "\n", "feats", ",", "pre_offset", ",", "pre_mask", "=", "self", ".", "stage2", "(", "\n", "feats", ",", "(", "flows_backward", ",", "flows_forward", ")", ")", "\n", "\n", "if", "self", ".", "auxiliary_loss", ":", "\n", "            ", "aux_feats", "=", "self", ".", "auxiliary_stage", "(", "feats", ",", "lqs", ")", "\n", "\n", "", "feats", "=", "self", ".", "stage3", "(", "feats", ",", "(", "flows_backward", ",", "flows_forward", ")", ",", "aux_feats", ",", "\n", "pre_offset", ",", "pre_mask", ")", "\n", "\n", "return", "self", ".", "upsample", "(", "lqs", ",", "feats", ",", "aux_feats", "=", "aux_feats", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.AlignmentModule.__init__": [[584, 613], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.vision.ops.DeformConv2D", "paddle.vision.ops.DeformConv2D", "paddle.vision.ops.DeformConv2D", "msvsr.AlignmentModule.init_offset", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.ReAlignmentModule.init_offset"], ["def", "__init__", "(", "self", ",", "\n", "in_channels", "=", "128", ",", "\n", "out_channels", "=", "64", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "dilation", "=", "1", ",", "\n", "groups", "=", "1", ",", "\n", "deformable_groups", "=", "16", ")", ":", "\n", "        ", "super", "(", "AlignmentModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv_offset", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "2", "*", "out_channels", "+", "2", ",", "out_channels", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.1", ")", ",", "\n", "nn", ".", "Conv2D", "(", "out_channels", ",", "out_channels", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.1", ")", ",", "\n", "nn", ".", "Conv2D", "(", "out_channels", ",", "out_channels", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.1", ")", ",", "\n", "nn", ".", "Conv2D", "(", "out_channels", ",", "27", "*", "deformable_groups", ",", "3", ",", "1", ",", "1", ")", ",", "\n", ")", "\n", "self", ".", "dcn", "=", "DeformConv2D", "(", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "\n", "dilation", "=", "dilation", ",", "\n", "deformable_groups", "=", "deformable_groups", ")", "\n", "\n", "self", ".", "init_offset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.AlignmentModule.init_offset": [[614, 617], ["modules.init.constant_", "modules.init.constant_"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.constant_", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.constant_"], ["", "def", "init_offset", "(", "self", ")", ":", "\n", "        ", "constant_", "(", "self", ".", "conv_offset", "[", "-", "1", "]", ".", "weight", ",", "0", ")", "\n", "constant_", "(", "self", ".", "conv_offset", "[", "-", "1", "]", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.AlignmentModule.forward": [[618, 631], ["paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "msvsr.AlignmentModule.conv_offset", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.sigmoid", "paddle.sigmoid", "paddle.sigmoid", "msvsr.AlignmentModule.dcn", "paddle.tanh", "paddle.tanh", "paddle.tanh", "paddle.tanh", "paddle.tanh", "paddle.tanh", "paddle.tanh", "paddle.tanh", "paddle.tanh", "flow_1.flip().tile", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "flow_1.flip"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "extra_feat", ",", "flow_1", ")", ":", "\n", "        ", "extra_feat", "=", "paddle", ".", "concat", "(", "[", "extra_feat", ",", "flow_1", "]", ",", "axis", "=", "1", ")", "\n", "out", "=", "self", ".", "conv_offset", "(", "extra_feat", ")", "\n", "o1", ",", "o2", ",", "mask", "=", "paddle", ".", "chunk", "(", "out", ",", "3", ",", "axis", "=", "1", ")", "\n", "\n", "# offset", "\n", "offset", "=", "10", "*", "paddle", ".", "tanh", "(", "paddle", ".", "concat", "(", "(", "o1", ",", "o2", ")", ",", "axis", "=", "1", ")", ")", "\n", "offset", "=", "offset", "+", "flow_1", ".", "flip", "(", "1", ")", ".", "tile", "(", "[", "1", ",", "offset", ".", "shape", "[", "1", "]", "//", "2", ",", "1", ",", "1", "]", ")", "\n", "\n", "# mask", "\n", "mask", "=", "F", ".", "sigmoid", "(", "mask", ")", "\n", "out", "=", "self", ".", "dcn", "(", "x", ",", "offset", ",", "mask", ")", "\n", "return", "out", ",", "offset", ",", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.ReAlignmentModule.__init__": [[645, 681], ["paddle.Layer.__init__", "paddle.vision.ops.DeformConv2D", "paddle.vision.ops.DeformConv2D", "paddle.vision.ops.DeformConv2D", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.vision.ops.DeformConv2D", "paddle.vision.ops.DeformConv2D", "paddle.vision.ops.DeformConv2D", "msvsr.ReAlignmentModule.init_offset", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.ReAlignmentModule.init_offset"], ["def", "__init__", "(", "self", ",", "\n", "in_channels", "=", "128", ",", "\n", "out_channels", "=", "64", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "dilation", "=", "1", ",", "\n", "groups", "=", "1", ",", "\n", "deformable_groups", "=", "16", ")", ":", "\n", "        ", "super", "(", "ReAlignmentModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "mdconv", "=", "DeformConv2D", "(", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "\n", "dilation", "=", "dilation", ",", "\n", "deformable_groups", "=", "deformable_groups", ")", "\n", "self", ".", "conv_offset", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "2", "*", "out_channels", "+", "2", ",", "out_channels", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.1", ")", ",", "\n", "nn", ".", "Conv2D", "(", "out_channels", ",", "out_channels", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.1", ")", ",", "\n", "nn", ".", "Conv2D", "(", "out_channels", ",", "out_channels", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.1", ")", ",", "\n", "nn", ".", "Conv2D", "(", "out_channels", ",", "27", "*", "deformable_groups", ",", "3", ",", "1", ",", "1", ")", ",", "\n", ")", "\n", "self", ".", "dcn", "=", "DeformConv2D", "(", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "\n", "dilation", "=", "dilation", ",", "\n", "deformable_groups", "=", "deformable_groups", ")", "\n", "\n", "self", ".", "init_offset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.ReAlignmentModule.init_offset": [[682, 685], ["modules.init.constant_", "modules.init.constant_"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.constant_", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.init.constant_"], ["", "def", "init_offset", "(", "self", ")", ":", "\n", "        ", "constant_", "(", "self", ".", "conv_offset", "[", "-", "1", "]", ".", "weight", ",", "0", ")", "\n", "constant_", "(", "self", ".", "conv_offset", "[", "-", "1", "]", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.ReAlignmentModule.forward": [[686, 716], ["msvsr.ReAlignmentModule.conv_offset", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "msvsr.ReAlignmentModule.dcn", "msvsr.ReAlignmentModule.mdconv", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.tanh", "paddle.tanh", "paddle.tanh", "paddle.tanh", "paddle.tanh", "paddle.tanh", "paddle.tanh", "paddle.tanh", "paddle.tanh", "paddle.sigmoid", "paddle.sigmoid", "paddle.sigmoid", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "flow_1.flip().tile", "paddle.sigmoid", "paddle.sigmoid", "paddle.sigmoid", "flow_1.flip"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "\n", "x", ",", "\n", "extra_feat", ",", "\n", "flow_1", ",", "\n", "feat_current", ",", "\n", "pre_stage_flow", "=", "None", ",", "\n", "pre_stage_mask", "=", "None", ")", ":", "\n", "        ", "if", "pre_stage_flow", "is", "not", "None", ":", "\n", "            ", "pre_feat", "=", "self", ".", "mdconv", "(", "x", ",", "pre_stage_flow", ",", "pre_stage_mask", ")", "\n", "extra_feat", "=", "paddle", ".", "concat", "(", "[", "pre_feat", ",", "feat_current", ",", "flow_1", "]", ",", "axis", "=", "1", ")", "\n", "", "else", ":", "\n", "            ", "extra_feat", "=", "paddle", ".", "concat", "(", "[", "extra_feat", ",", "flow_1", "]", ",", "axis", "=", "1", ")", "\n", "", "out", "=", "self", ".", "conv_offset", "(", "extra_feat", ")", "\n", "o1", ",", "o2", ",", "mask", "=", "paddle", ".", "chunk", "(", "out", ",", "3", ",", "axis", "=", "1", ")", "\n", "\n", "# offset", "\n", "offset", "=", "10", "*", "paddle", ".", "tanh", "(", "paddle", ".", "concat", "(", "(", "o1", ",", "o2", ")", ",", "axis", "=", "1", ")", ")", "\n", "if", "pre_stage_flow", "is", "not", "None", ":", "\n", "            ", "offset", "=", "offset", "+", "pre_stage_flow", "\n", "", "else", ":", "\n", "            ", "offset", "=", "offset", "+", "flow_1", ".", "flip", "(", "1", ")", ".", "tile", "(", "\n", "[", "1", ",", "offset", ".", "shape", "[", "1", "]", "//", "2", ",", "1", ",", "1", "]", ")", "\n", "\n", "# mask", "\n", "", "if", "pre_stage_mask", "is", "not", "None", ":", "\n", "            ", "mask", "=", "(", "F", ".", "sigmoid", "(", "mask", ")", "+", "pre_stage_mask", ")", "/", "2.0", "\n", "", "else", ":", "\n", "            ", "mask", "=", "F", ".", "sigmoid", "(", "mask", ")", "\n", "", "out", "=", "self", ".", "dcn", "(", "x", ",", "offset", ",", "mask", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.ModifiedSPyNet.__init__": [[737, 754], ["dict", "paddle.Layer.__init__", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "msvsr.ModifiedSPyNet.register_buffer", "msvsr.ModifiedSPyNet.register_buffer", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "msvsr.SPyNetBlock", "range", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "\n", "act_cfg", "=", "dict", "(", "name", "=", "'LeakyReLU'", ")", ",", "\n", "num_blocks", "=", "6", ",", "\n", "use_tiny_block", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_blocks", "=", "num_blocks", "\n", "self", ".", "basic_module", "=", "nn", ".", "LayerList", "(", "[", "\n", "SPyNetBlock", "(", "act_cfg", "=", "act_cfg", ",", "use_tiny_block", "=", "use_tiny_block", ")", "\n", "for", "_", "in", "range", "(", "num_blocks", ")", "\n", "]", ")", "\n", "\n", "self", ".", "register_buffer", "(", "\n", "'mean'", ",", "\n", "paddle", ".", "to_tensor", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ")", ".", "reshape", "(", "[", "1", ",", "3", ",", "1", ",", "1", "]", ")", ")", "\n", "self", ".", "register_buffer", "(", "\n", "'std'", ",", "\n", "paddle", ".", "to_tensor", "(", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ".", "reshape", "(", "[", "1", ",", "3", ",", "1", ",", "1", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.ModifiedSPyNet.compute_flow": [[755, 806], ["range", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "range", "ref.append", "supp.append", "numpy.zeros", "len", "paddle.avg_pool2d", "paddle.avg_pool2d", "paddle.avg_pool2d", "paddle.avg_pool2d", "paddle.avg_pool2d", "paddle.avg_pool2d", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "basicvsr.flow_warp", "flow_up.transpose"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.flow_warp"], ["", "def", "compute_flow", "(", "self", ",", "ref", ",", "supp", ")", ":", "\n", "        ", "\"\"\"Compute flow from ref to supp.\n\n        Note that in this function, the images are already resized to a\n        multiple of 32.\n\n        Args:\n            ref (Tensor): Reference image with shape of (n, 3, h, w).\n            supp (Tensor): Supporting image with shape of (n, 3, h, w).\n\n        Returns:\n            Tensor: Estimated optical flow: (n, 2, h, w).\n        \"\"\"", "\n", "n", ",", "_", ",", "h", ",", "w", "=", "ref", ".", "shape", "\n", "\n", "# normalize the input images", "\n", "ref", "=", "[", "(", "ref", "-", "self", ".", "mean", ")", "/", "self", ".", "std", "]", "\n", "supp", "=", "[", "(", "supp", "-", "self", ".", "mean", ")", "/", "self", ".", "std", "]", "\n", "\n", "# generate downsampled frames", "\n", "for", "level", "in", "range", "(", "self", ".", "num_blocks", "-", "1", ")", ":", "\n", "            ", "ref", ".", "append", "(", "F", ".", "avg_pool2d", "(", "ref", "[", "-", "1", "]", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", ")", "\n", "supp", ".", "append", "(", "F", ".", "avg_pool2d", "(", "supp", "[", "-", "1", "]", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", ")", "\n", "", "ref", "=", "ref", "[", ":", ":", "-", "1", "]", "\n", "supp", "=", "supp", "[", ":", ":", "-", "1", "]", "\n", "\n", "# flow computation", "\n", "flow", "=", "paddle", ".", "to_tensor", "(", "\n", "np", ".", "zeros", "(", "[", "\n", "n", ",", "2", ",", "h", "//", "(", "2", "**", "(", "self", ".", "num_blocks", "-", "1", ")", ")", ",", "w", "//", "\n", "(", "2", "**", "(", "self", ".", "num_blocks", "-", "1", ")", ")", "\n", "]", ",", "'float32'", ")", ")", "\n", "\n", "for", "level", "in", "range", "(", "len", "(", "ref", ")", ")", ":", "\n", "            ", "if", "level", "==", "0", ":", "\n", "                ", "flow_up", "=", "flow", "\n", "", "else", ":", "\n", "                ", "flow_up", "=", "F", ".", "interpolate", "(", "\n", "flow", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "True", ")", "*", "2.0", "\n", "\n", "# add the residue to the upsampled flow", "\n", "", "flow", "=", "flow_up", "+", "self", ".", "basic_module", "[", "level", "]", "(", "paddle", ".", "concat", "(", "[", "\n", "ref", "[", "level", "]", ",", "\n", "flow_warp", "(", "supp", "[", "level", "]", ",", "\n", "flow_up", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", ",", "\n", "padding_mode", "=", "'border'", ")", ",", "flow_up", "\n", "]", ",", "\n", "axis", "=", "1", ")", ")", "\n", "\n", "", "return", "flow", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.ModifiedSPyNet.compute_flow_list": [[807, 846], ["range", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "range", "ref.append", "supp.append", "numpy.zeros", "len", "flow_list.append", "paddle.avg_pool2d", "paddle.avg_pool2d", "paddle.avg_pool2d", "paddle.avg_pool2d", "paddle.avg_pool2d", "paddle.avg_pool2d", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "basicvsr.flow_warp", "flow_up.transpose"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.basicvsr.flow_warp"], ["", "def", "compute_flow_list", "(", "self", ",", "ref", ",", "supp", ")", ":", "\n", "        ", "n", ",", "_", ",", "h", ",", "w", "=", "ref", ".", "shape", "\n", "\n", "# normalize the input images", "\n", "ref", "=", "[", "(", "ref", "-", "self", ".", "mean", ")", "/", "self", ".", "std", "]", "\n", "supp", "=", "[", "(", "supp", "-", "self", ".", "mean", ")", "/", "self", ".", "std", "]", "\n", "\n", "# generate downsampled frames", "\n", "for", "level", "in", "range", "(", "self", ".", "num_blocks", "-", "1", ")", ":", "\n", "            ", "ref", ".", "append", "(", "F", ".", "avg_pool2d", "(", "ref", "[", "-", "1", "]", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", ")", "\n", "supp", ".", "append", "(", "F", ".", "avg_pool2d", "(", "supp", "[", "-", "1", "]", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", ")", "\n", "", "ref", "=", "ref", "[", ":", ":", "-", "1", "]", "\n", "supp", "=", "supp", "[", ":", ":", "-", "1", "]", "\n", "\n", "# flow computation", "\n", "flow_list", "=", "[", "]", "\n", "flow", "=", "paddle", ".", "to_tensor", "(", "\n", "np", ".", "zeros", "(", "[", "\n", "n", ",", "2", ",", "h", "//", "(", "2", "**", "(", "self", ".", "num_blocks", "-", "1", ")", ")", ",", "w", "//", "\n", "(", "2", "**", "(", "self", ".", "num_blocks", "-", "1", ")", ")", "\n", "]", ",", "'float32'", ")", ")", "\n", "for", "level", "in", "range", "(", "len", "(", "ref", ")", ")", ":", "\n", "            ", "if", "level", "==", "0", ":", "\n", "                ", "flow_up", "=", "flow", "\n", "", "else", ":", "\n", "                ", "flow_up", "=", "F", ".", "interpolate", "(", "\n", "flow", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "True", ")", "*", "2.0", "\n", "\n", "# add the residue to the upsampled flow", "\n", "", "flow", "=", "flow_up", "+", "self", ".", "basic_module", "[", "level", "]", "(", "paddle", ".", "concat", "(", "[", "\n", "ref", "[", "level", "]", ",", "\n", "flow_warp", "(", "supp", "[", "level", "]", ",", "\n", "flow_up", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", ",", "\n", "padding_mode", "=", "'border'", ")", ",", "flow_up", "\n", "]", ",", "\n", "axis", "=", "1", ")", ")", "\n", "flow_list", ".", "append", "(", "flow", ")", "\n", "", "return", "flow_list", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.ModifiedSPyNet.forward": [[847, 888], ["paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "msvsr.ModifiedSPyNet.compute_flow", "float", "float", "float", "float"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.ModifiedSPyNet.compute_flow"], ["", "def", "forward", "(", "self", ",", "ref", ",", "supp", ")", ":", "\n", "        ", "\"\"\"Forward function of Modified SPyNet.\n\n        This function computes the optical flow from ref to supp.\n\n        Args:\n            ref (Tensor): Reference image with shape of (n, 3, h, w).\n            supp (Tensor): Supporting image with shape of (n, 3, h, w).\n\n        Returns:\n            Tensor: Estimated optical flow: (n, 2, h, w).\n        \"\"\"", "\n", "\n", "# upsize to a multiple of 32", "\n", "h", ",", "w", "=", "ref", ".", "shape", "[", "2", ":", "4", "]", "\n", "w_up", "=", "w", "if", "(", "w", "%", "32", ")", "==", "0", "else", "32", "*", "(", "w", "//", "32", "+", "1", ")", "\n", "h_up", "=", "h", "if", "(", "h", "%", "32", ")", "==", "0", "else", "32", "*", "(", "h", "//", "32", "+", "1", ")", "\n", "ref", "=", "F", ".", "interpolate", "(", "ref", ",", "\n", "size", "=", "(", "h_up", ",", "w_up", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "False", ")", "\n", "\n", "supp", "=", "F", ".", "interpolate", "(", "supp", ",", "\n", "size", "=", "(", "h_up", ",", "w_up", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "False", ")", "\n", "\n", "ref", ".", "stop_gradient", "=", "False", "\n", "supp", ".", "stop_gradient", "=", "False", "\n", "\n", "# compute flow, and resize back to the original resolution", "\n", "flow", "=", "F", ".", "interpolate", "(", "self", ".", "compute_flow", "(", "ref", ",", "supp", ")", ",", "\n", "size", "=", "(", "h", ",", "w", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "False", ")", "\n", "\n", "# adjust the flow values", "\n", "flow", "[", ":", ",", "0", ",", ":", ",", ":", "]", "*=", "float", "(", "w", ")", "/", "float", "(", "w_up", ")", "\n", "flow", "[", ":", ",", "1", ",", ":", ",", ":", "]", "*=", "float", "(", "h", ")", "/", "float", "(", "h_up", ")", "\n", "\n", "return", "flow", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.SPyNetBlock.__init__": [[894, 1062], ["dict", "paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "msvsr.ConvLayer", "msvsr.ConvLayer", "msvsr.ConvLayer", "msvsr.ConvLayer", "msvsr.ConvLayer", "msvsr.ConvLayer", "msvsr.ConvLayer", "msvsr.ConvLayer", "msvsr.ConvLayer", "msvsr.ConvLayer", "msvsr.ConvLayer", "msvsr.ConvLayer", "msvsr.ConvLayer", "msvsr.ConvLayer", "msvsr.ConvLayer", "msvsr.ConvLayer", "msvsr.ConvLayer", "msvsr.ConvLayer", "msvsr.ConvLayer", "msvsr.ConvLayer", "msvsr.ConvLayer", "msvsr.ConvLayer", "msvsr.ConvLayer", "msvsr.ConvLayer", "msvsr.ConvLayer", "msvsr.ConvLayer", "msvsr.ConvLayer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "act_cfg", "=", "dict", "(", "name", "=", "'LeakyReLU'", ")", ",", "use_tiny_block", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "if", "use_tiny_block", ":", "\n", "            ", "self", ".", "basic_module", "=", "nn", ".", "Sequential", "(", "\n", "ConvLayer", "(", "in_channels", "=", "8", ",", "\n", "out_channels", "=", "16", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "act_cfg", "=", "act_cfg", ")", ",", "\n", "ConvLayer", "(", "in_channels", "=", "16", ",", "\n", "out_channels", "=", "16", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "act_cfg", "=", "act_cfg", ")", ",", "\n", "ConvLayer", "(", "in_channels", "=", "16", ",", "\n", "out_channels", "=", "32", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "act_cfg", "=", "act_cfg", ")", ",", "\n", "ConvLayer", "(", "in_channels", "=", "32", ",", "\n", "out_channels", "=", "32", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "act_cfg", "=", "act_cfg", ")", ",", "\n", "ConvLayer", "(", "in_channels", "=", "32", ",", "\n", "out_channels", "=", "32", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "act_cfg", "=", "act_cfg", ")", ",", "\n", "ConvLayer", "(", "in_channels", "=", "32", ",", "\n", "out_channels", "=", "32", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "act_cfg", "=", "act_cfg", ")", ",", "\n", "ConvLayer", "(", "in_channels", "=", "32", ",", "\n", "out_channels", "=", "16", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "act_cfg", "=", "act_cfg", ")", ",", "\n", "ConvLayer", "(", "in_channels", "=", "16", ",", "\n", "out_channels", "=", "16", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "act_cfg", "=", "act_cfg", ")", ",", "\n", "ConvLayer", "(", "in_channels", "=", "16", ",", "\n", "out_channels", "=", "16", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "act_cfg", "=", "act_cfg", ")", ",", "\n", "ConvLayer", "(", "in_channels", "=", "16", ",", "\n", "out_channels", "=", "8", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "act_cfg", "=", "act_cfg", ")", ",", "\n", "ConvLayer", "(", "in_channels", "=", "8", ",", "\n", "out_channels", "=", "8", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "act_cfg", "=", "act_cfg", ")", ",", "\n", "ConvLayer", "(", "in_channels", "=", "8", ",", "\n", "out_channels", "=", "2", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "act_cfg", "=", "None", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "basic_module", "=", "nn", ".", "Sequential", "(", "\n", "ConvLayer", "(", "in_channels", "=", "8", ",", "\n", "out_channels", "=", "16", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "act_cfg", "=", "act_cfg", ")", ",", "\n", "ConvLayer", "(", "in_channels", "=", "16", ",", "\n", "out_channels", "=", "16", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "act_cfg", "=", "act_cfg", ")", ",", "\n", "ConvLayer", "(", "in_channels", "=", "16", ",", "\n", "out_channels", "=", "32", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "act_cfg", "=", "act_cfg", ")", ",", "\n", "ConvLayer", "(", "in_channels", "=", "32", ",", "\n", "out_channels", "=", "32", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "act_cfg", "=", "act_cfg", ")", ",", "\n", "ConvLayer", "(", "in_channels", "=", "32", ",", "\n", "out_channels", "=", "32", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "act_cfg", "=", "act_cfg", ")", ",", "\n", "ConvLayer", "(", "in_channels", "=", "32", ",", "\n", "out_channels", "=", "64", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "act_cfg", "=", "act_cfg", ")", ",", "\n", "ConvLayer", "(", "in_channels", "=", "64", ",", "\n", "out_channels", "=", "32", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "act_cfg", "=", "act_cfg", ")", ",", "\n", "ConvLayer", "(", "in_channels", "=", "32", ",", "\n", "out_channels", "=", "32", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "act_cfg", "=", "act_cfg", ")", ",", "\n", "ConvLayer", "(", "in_channels", "=", "32", ",", "\n", "out_channels", "=", "32", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "act_cfg", "=", "act_cfg", ")", ",", "\n", "ConvLayer", "(", "in_channels", "=", "32", ",", "\n", "out_channels", "=", "16", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "act_cfg", "=", "act_cfg", ")", ",", "\n", "ConvLayer", "(", "in_channels", "=", "16", ",", "\n", "out_channels", "=", "16", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "act_cfg", "=", "act_cfg", ")", ",", "\n", "ConvLayer", "(", "in_channels", "=", "16", ",", "\n", "out_channels", "=", "16", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "act_cfg", "=", "act_cfg", ")", ",", "\n", "ConvLayer", "(", "in_channels", "=", "16", ",", "\n", "out_channels", "=", "16", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "act_cfg", "=", "act_cfg", ")", ",", "\n", "ConvLayer", "(", "in_channels", "=", "16", ",", "\n", "out_channels", "=", "16", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "act_cfg", "=", "act_cfg", ")", ",", "\n", "ConvLayer", "(", "in_channels", "=", "16", ",", "\n", "out_channels", "=", "2", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "act_cfg", "=", "None", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.SPyNetBlock.forward": [[1063, 1074], ["msvsr.SPyNetBlock.basic_module"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "tensor_input", ")", ":", "\n", "        ", "\"\"\"Forward function of SPyNetBlock.\n        Args:\n            tensor_input (Tensor): Input tensor with shape (b, 8, h, w).\n                8 channels contain:\n                [reference image (3), neighbor image (3), initial flow (2)].\n\n        Returns:\n            Tensor: Refined flow with shape (b, 2, h, w)\n        \"\"\"", "\n", "return", "self", ".", "basic_module", "(", "tensor_input", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.ConvLayer.__init__": [[1077, 1103], ["dict", "paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.nn.ReLU", "paddle.nn.ReLU", "paddle.nn.ReLU", "paddle.nn.ReLU", "paddle.nn.ReLU", "paddle.nn.ReLU", "paddle.nn.ReLU", "paddle.nn.ReLU", "paddle.nn.ReLU", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "dilation", "=", "1", ",", "\n", "groups", "=", "1", ",", "\n", "act_cfg", "=", "dict", "(", "name", "=", "'ReLU'", ")", ")", ":", "\n", "        ", "super", "(", "ConvLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "act_cfg", "=", "act_cfg", "\n", "self", ".", "with_activation", "=", "act_cfg", "is", "not", "None", "\n", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2D", "(", "in_channels", "=", "in_channels", ",", "\n", "out_channels", "=", "out_channels", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "\n", "dilation", "=", "dilation", ",", "\n", "groups", "=", "groups", ")", "\n", "\n", "if", "self", ".", "with_activation", ":", "\n", "            ", "if", "act_cfg", "[", "'name'", "]", "==", "'ReLU'", ":", "\n", "                ", "self", ".", "act", "=", "paddle", ".", "nn", ".", "ReLU", "(", ")", "\n", "", "elif", "act_cfg", "[", "'name'", "]", "==", "'LeakyReLU'", ":", "\n", "                ", "self", ".", "act", "=", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.msvsr.ConvLayer.forward": [[1104, 1109], ["msvsr.ConvLayer.conv", "msvsr.ConvLayer.act"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv"], ["", "", "", "def", "forward", "(", "self", ",", "tensor_input", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv", "(", "tensor_input", ")", "\n", "if", "self", ".", "with_activation", ":", "\n", "            ", "out", "=", "self", ".", "act", "(", "out", ")", "\n", "", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.resnet_ugatit.ResnetUGATITGenerator.__init__": [[17, 137], ["paddle.Layer.__init__", "modules.norm.build_norm_layer", "range", "range", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.Linear", "range", "range", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Pad2D", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "modules.norm.build_norm_layer.", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "setattr", "paddle.Pad2D", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Tanh", "paddle.Tanh", "paddle.Tanh", "paddle.Pad2D", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "modules.norm.build_norm_layer.", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "resnet_ugatit.ResnetBlock", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Linear", "paddle.Linear", "paddle.Linear", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "resnet_ugatit.ResnetAdaILNBlock", "paddle.Upsample", "paddle.Upsample", "paddle.Upsample", "paddle.Pad2D", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "resnet_ugatit.ILN", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "str", "int", "int"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.norm.build_norm_layer"], ["    ", "def", "__init__", "(", "self", ",", "\n", "input_nc", ",", "\n", "output_nc", ",", "\n", "ngf", "=", "64", ",", "\n", "n_blocks", "=", "6", ",", "\n", "img_size", "=", "256", ",", "\n", "light", "=", "False", ",", "\n", "norm_type", "=", "'instance'", ")", ":", "\n", "        ", "assert", "(", "n_blocks", ">=", "0", ")", "\n", "super", "(", "ResnetUGATITGenerator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "input_nc", "=", "input_nc", "\n", "self", ".", "output_nc", "=", "output_nc", "\n", "self", ".", "ngf", "=", "ngf", "\n", "self", ".", "n_blocks", "=", "n_blocks", "\n", "self", ".", "img_size", "=", "img_size", "\n", "self", ".", "light", "=", "light", "\n", "\n", "norm_layer", "=", "build_norm_layer", "(", "norm_type", ")", "\n", "DownBlock", "=", "[", "]", "\n", "DownBlock", "+=", "[", "\n", "nn", ".", "Pad2D", "(", "padding", "=", "[", "3", ",", "3", ",", "3", ",", "3", "]", ",", "mode", "=", "\"reflect\"", ")", ",", "\n", "nn", ".", "Conv2D", "(", "input_nc", ",", "\n", "ngf", ",", "\n", "kernel_size", "=", "7", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "norm_layer", "(", "ngf", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", "\n", "\n", "# Down-Sampling", "\n", "n_downsampling", "=", "2", "\n", "for", "i", "in", "range", "(", "n_downsampling", ")", ":", "\n", "            ", "mult", "=", "2", "**", "i", "\n", "DownBlock", "+=", "[", "\n", "nn", ".", "Pad2D", "(", "padding", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "\"reflect\"", ")", ",", "\n", "nn", ".", "Conv2D", "(", "ngf", "*", "mult", ",", "\n", "ngf", "*", "mult", "*", "2", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "norm_layer", "(", "ngf", "*", "mult", "*", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", "\n", "\n", "# Down-Sampling Bottleneck", "\n", "", "mult", "=", "2", "**", "n_downsampling", "\n", "for", "i", "in", "range", "(", "n_blocks", ")", ":", "\n", "            ", "DownBlock", "+=", "[", "\n", "ResnetBlock", "(", "ngf", "*", "mult", ",", "use_bias", "=", "False", ",", "norm_layer", "=", "norm_layer", ")", "\n", "]", "\n", "\n", "# Class Activation Map", "\n", "", "self", ".", "gap_fc", "=", "nn", ".", "Linear", "(", "ngf", "*", "mult", ",", "1", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "gmp_fc", "=", "nn", ".", "Linear", "(", "ngf", "*", "mult", ",", "1", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "conv1x1", "=", "nn", ".", "Conv2D", "(", "ngf", "*", "mult", "*", "2", ",", "\n", "ngf", "*", "mult", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "bias_attr", "=", "True", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "# Gamma, Beta block", "\n", "if", "self", ".", "light", ":", "\n", "            ", "FC", "=", "[", "\n", "nn", ".", "Linear", "(", "ngf", "*", "mult", ",", "ngf", "*", "mult", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "ngf", "*", "mult", ",", "ngf", "*", "mult", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", "\n", "", "else", ":", "\n", "            ", "FC", "=", "[", "\n", "nn", ".", "Linear", "(", "img_size", "//", "mult", "*", "img_size", "//", "mult", "*", "ngf", "*", "mult", ",", "\n", "ngf", "*", "mult", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "ngf", "*", "mult", ",", "ngf", "*", "mult", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", "\n", "", "self", ".", "gamma", "=", "nn", ".", "Linear", "(", "ngf", "*", "mult", ",", "ngf", "*", "mult", ",", "bias_attr", "=", "False", ")", "\n", "self", ".", "beta", "=", "nn", ".", "Linear", "(", "ngf", "*", "mult", ",", "ngf", "*", "mult", ",", "bias_attr", "=", "False", ")", "\n", "\n", "# Up-Sampling Bottleneck", "\n", "for", "i", "in", "range", "(", "n_blocks", ")", ":", "\n", "            ", "setattr", "(", "self", ",", "'UpBlock1_'", "+", "str", "(", "i", "+", "1", ")", ",", "\n", "ResnetAdaILNBlock", "(", "ngf", "*", "mult", ",", "use_bias", "=", "False", ")", ")", "\n", "\n", "# Up-Sampling", "\n", "", "UpBlock2", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "n_downsampling", ")", ":", "\n", "            ", "mult", "=", "2", "**", "(", "n_downsampling", "-", "i", ")", "\n", "UpBlock2", "+=", "[", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", ",", "\n", "nn", ".", "Pad2D", "(", "padding", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "\"reflect\"", ")", ",", "\n", "nn", ".", "Conv2D", "(", "ngf", "*", "mult", ",", "\n", "int", "(", "ngf", "*", "mult", "/", "2", ")", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "ILN", "(", "int", "(", "ngf", "*", "mult", "/", "2", ")", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", "\n", "\n", "", "UpBlock2", "+=", "[", "\n", "nn", ".", "Pad2D", "(", "padding", "=", "[", "3", ",", "3", ",", "3", ",", "3", "]", ",", "mode", "=", "\"reflect\"", ")", ",", "\n", "nn", ".", "Conv2D", "(", "ngf", ",", "\n", "output_nc", ",", "\n", "kernel_size", "=", "7", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", "\n", "]", "\n", "\n", "self", ".", "DownBlock", "=", "nn", ".", "Sequential", "(", "*", "DownBlock", ")", "\n", "self", ".", "FC", "=", "nn", ".", "Sequential", "(", "*", "FC", ")", "\n", "self", ".", "UpBlock2", "=", "nn", ".", "Sequential", "(", "*", "UpBlock2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.resnet_ugatit.ResnetUGATITGenerator.forward": [[138, 169], ["resnet_ugatit.ResnetUGATITGenerator.DownBlock", "paddle.adaptive_avg_pool2d", "paddle.adaptive_avg_pool2d", "paddle.adaptive_avg_pool2d", "resnet_ugatit.ResnetUGATITGenerator.gap_fc", "[].transpose", "paddle.adaptive_max_pool2d", "paddle.adaptive_max_pool2d", "paddle.adaptive_max_pool2d", "resnet_ugatit.ResnetUGATITGenerator.gmp_fc", "[].transpose", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "resnet_ugatit.ResnetUGATITGenerator.relu", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "range", "resnet_ugatit.ResnetUGATITGenerator.UpBlock2", "paddle.adaptive_avg_pool2d.reshape", "[].transpose.unsqueeze().unsqueeze", "paddle.adaptive_max_pool2d.reshape", "[].transpose.unsqueeze().unsqueeze", "resnet_ugatit.ResnetUGATITGenerator.conv1x1", "paddle.adaptive_avg_pool2d", "paddle.adaptive_avg_pool2d", "paddle.adaptive_avg_pool2d", "resnet_ugatit.ResnetUGATITGenerator.FC", "resnet_ugatit.ResnetUGATITGenerator.FC", "resnet_ugatit.ResnetUGATITGenerator.gamma", "resnet_ugatit.ResnetUGATITGenerator.beta", "resnet_ugatit.ResnetUGATITGenerator.reshape", "resnet_ugatit.ResnetUGATITGenerator.reshape", "getattr", "list", "[].transpose.unsqueeze", "list", "[].transpose.unsqueeze", "resnet_ugatit.ResnetUGATITGenerator.gap_fc.parameters", "resnet_ugatit.ResnetUGATITGenerator.gmp_fc.parameters", "str"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "x", "=", "self", ".", "DownBlock", "(", "input", ")", "\n", "\n", "gap", "=", "F", ".", "adaptive_avg_pool2d", "(", "x", ",", "1", ")", "\n", "gap_logit", "=", "self", ".", "gap_fc", "(", "gap", ".", "reshape", "(", "[", "x", ".", "shape", "[", "0", "]", ",", "-", "1", "]", ")", ")", "\n", "gap_weight", "=", "list", "(", "self", ".", "gap_fc", ".", "parameters", "(", ")", ")", "[", "0", "]", ".", "transpose", "(", "[", "1", ",", "0", "]", ")", "\n", "gap", "=", "x", "*", "gap_weight", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "\n", "gmp", "=", "F", ".", "adaptive_max_pool2d", "(", "x", ",", "1", ")", "\n", "gmp_logit", "=", "self", ".", "gmp_fc", "(", "gmp", ".", "reshape", "(", "[", "x", ".", "shape", "[", "0", "]", ",", "-", "1", "]", ")", ")", "\n", "gmp_weight", "=", "list", "(", "self", ".", "gmp_fc", ".", "parameters", "(", ")", ")", "[", "0", "]", ".", "transpose", "(", "[", "1", ",", "0", "]", ")", "\n", "gmp", "=", "x", "*", "gmp_weight", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "\n", "cam_logit", "=", "paddle", ".", "concat", "(", "[", "gap_logit", ",", "gmp_logit", "]", ",", "1", ")", "\n", "x", "=", "paddle", ".", "concat", "(", "[", "gap", ",", "gmp", "]", ",", "1", ")", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "conv1x1", "(", "x", ")", ")", "\n", "\n", "heatmap", "=", "paddle", ".", "sum", "(", "x", ",", "axis", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "\n", "if", "self", ".", "light", ":", "\n", "            ", "x_", "=", "F", ".", "adaptive_avg_pool2d", "(", "x", ",", "1", ")", "\n", "x_", "=", "self", ".", "FC", "(", "x_", ".", "reshape", "(", "[", "x_", ".", "shape", "[", "0", "]", ",", "-", "1", "]", ")", ")", "\n", "", "else", ":", "\n", "            ", "x_", "=", "self", ".", "FC", "(", "x", ".", "reshape", "(", "[", "x", ".", "shape", "[", "0", "]", ",", "-", "1", "]", ")", ")", "\n", "", "gamma", ",", "beta", "=", "self", ".", "gamma", "(", "x_", ")", ",", "self", ".", "beta", "(", "x_", ")", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "n_blocks", ")", ":", "\n", "            ", "x", "=", "getattr", "(", "self", ",", "'UpBlock1_'", "+", "str", "(", "i", "+", "1", ")", ")", "(", "x", ",", "gamma", ",", "beta", ")", "\n", "", "out", "=", "self", ".", "UpBlock2", "(", "x", ")", "\n", "\n", "return", "out", ",", "cam_logit", ",", "heatmap", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.resnet_ugatit.ResnetBlock.__init__": [[172, 199], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Pad2D", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "norm_layer", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Pad2D", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "norm_layer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", ",", "use_bias", ",", "norm_layer", ")", ":", "\n", "        ", "super", "(", "ResnetBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "conv_block", "=", "[", "]", "\n", "conv_block", "+=", "[", "\n", "nn", ".", "Pad2D", "(", "padding", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "\"reflect\"", ")", ",", "\n", "nn", ".", "Conv2D", "(", "dim", ",", "\n", "dim", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "use_bias", ")", ",", "\n", "norm_layer", "(", "dim", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", "\n", "\n", "conv_block", "+=", "[", "\n", "nn", ".", "Pad2D", "(", "padding", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "\"reflect\"", ")", ",", "\n", "nn", ".", "Conv2D", "(", "dim", ",", "\n", "dim", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "use_bias", ")", ",", "\n", "norm_layer", "(", "dim", ")", "\n", "]", "\n", "\n", "self", ".", "conv_block", "=", "nn", ".", "Sequential", "(", "*", "conv_block", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.resnet_ugatit.ResnetBlock.forward": [[200, 203], ["resnet_ugatit.ResnetBlock.conv_block"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "x", "+", "self", ".", "conv_block", "(", "x", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.resnet_ugatit.ResnetAdaILNBlock.__init__": [[206, 226], ["paddle.Layer.__init__", "paddle.Pad2D", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "resnet_ugatit.AdaILN", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "paddle.Pad2D", "paddle.Pad2D", "paddle.Pad2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "resnet_ugatit.AdaILN"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", ",", "use_bias", ")", ":", "\n", "        ", "super", "(", "ResnetAdaILNBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pad1", "=", "nn", ".", "Pad2D", "(", "padding", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "\"reflect\"", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2D", "(", "dim", ",", "\n", "dim", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "use_bias", ")", "\n", "self", ".", "norm1", "=", "AdaILN", "(", "dim", ")", "\n", "self", ".", "relu1", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "self", ".", "pad2", "=", "nn", ".", "Pad2D", "(", "padding", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "mode", "=", "\"reflect\"", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2D", "(", "dim", ",", "\n", "dim", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "use_bias", ")", "\n", "self", ".", "norm2", "=", "AdaILN", "(", "dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.resnet_ugatit.ResnetAdaILNBlock.forward": [[227, 237], ["resnet_ugatit.ResnetAdaILNBlock.pad1", "resnet_ugatit.ResnetAdaILNBlock.conv1", "resnet_ugatit.ResnetAdaILNBlock.norm1", "resnet_ugatit.ResnetAdaILNBlock.relu1", "resnet_ugatit.ResnetAdaILNBlock.pad2", "resnet_ugatit.ResnetAdaILNBlock.conv2", "resnet_ugatit.ResnetAdaILNBlock.norm2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "gamma", ",", "beta", ")", ":", "\n", "        ", "out", "=", "self", ".", "pad1", "(", "x", ")", "\n", "out", "=", "self", ".", "conv1", "(", "out", ")", "\n", "out", "=", "self", ".", "norm1", "(", "out", ",", "gamma", ",", "beta", ")", "\n", "out", "=", "self", ".", "relu1", "(", "out", ")", "\n", "out", "=", "self", ".", "pad2", "(", "out", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "norm2", "(", "out", ",", "gamma", ",", "beta", ")", "\n", "\n", "return", "out", "+", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.resnet_ugatit.AdaILN.__init__": [[240, 247], ["paddle.Layer.__init__", "resnet_ugatit.AdaILN.create_parameter", "resnet_ugatit.AdaILN.rho.set_value", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "eps", "=", "1e-5", ")", ":", "\n", "        ", "super", "(", "AdaILN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "eps", "=", "eps", "\n", "shape", "=", "(", "1", ",", "num_features", ",", "1", ",", "1", ")", "\n", "\n", "self", ".", "rho", "=", "self", ".", "create_parameter", "(", "shape", ")", "\n", "self", ".", "rho", ".", "set_value", "(", "paddle", ".", "full", "(", "shape", ",", "0.9", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.resnet_ugatit.AdaILN.forward": [[248, 265], ["paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "beta.unsqueeze().unsqueeze", "resnet_ugatit.AdaILN.rho.expand", "gamma.unsqueeze().unsqueeze", "resnet_ugatit.AdaILN.rho.expand", "beta.unsqueeze", "gamma.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var"], ["", "def", "forward", "(", "self", ",", "input", ",", "gamma", ",", "beta", ")", ":", "\n", "        ", "in_mean", ",", "in_var", "=", "paddle", ".", "mean", "(", "input", ",", "[", "2", ",", "3", "]", ",", "\n", "keepdim", "=", "True", ")", ",", "paddle", ".", "var", "(", "input", ",", "[", "2", ",", "3", "]", ",", "\n", "keepdim", "=", "True", ")", "\n", "out_in", "=", "(", "input", "-", "in_mean", ")", "/", "paddle", ".", "sqrt", "(", "in_var", "+", "self", ".", "eps", ")", "\n", "ln_mean", ",", "ln_var", "=", "paddle", ".", "mean", "(", "input", ",", "[", "1", ",", "2", ",", "3", "]", ",", "\n", "keepdim", "=", "True", ")", ",", "paddle", ".", "var", "(", "input", ",", "\n", "[", "1", ",", "2", ",", "3", "]", ",", "\n", "keepdim", "=", "True", ")", "\n", "out_ln", "=", "(", "input", "-", "ln_mean", ")", "/", "paddle", ".", "sqrt", "(", "ln_var", "+", "self", ".", "eps", ")", "\n", "\n", "out", "=", "self", ".", "rho", ".", "expand", "(", "[", "input", ".", "shape", "[", "0", "]", ",", "-", "1", ",", "-", "1", ",", "-", "1", "]", ")", "*", "out_in", "+", "(", "\n", "1", "-", "self", ".", "rho", ".", "expand", "(", "[", "input", ".", "shape", "[", "0", "]", ",", "-", "1", ",", "-", "1", ",", "-", "1", "]", ")", ")", "*", "out_ln", "\n", "out", "=", "out", "*", "gamma", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "+", "beta", ".", "unsqueeze", "(", "\n", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.resnet_ugatit.ILN.__init__": [[268, 278], ["paddle.Layer.__init__", "resnet_ugatit.ILN.create_parameter", "resnet_ugatit.ILN.create_parameter", "resnet_ugatit.ILN.create_parameter", "resnet_ugatit.ILN.rho.set_value", "resnet_ugatit.ILN.gamma.set_value", "resnet_ugatit.ILN.beta.set_value", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "eps", "=", "1e-5", ")", ":", "\n", "        ", "super", "(", "ILN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "eps", "=", "eps", "\n", "shape", "=", "(", "1", ",", "num_features", ",", "1", ",", "1", ")", "\n", "self", ".", "rho", "=", "self", ".", "create_parameter", "(", "shape", ")", "\n", "self", ".", "gamma", "=", "self", ".", "create_parameter", "(", "shape", ")", "\n", "self", ".", "beta", "=", "self", ".", "create_parameter", "(", "shape", ")", "\n", "self", ".", "rho", ".", "set_value", "(", "paddle", ".", "full", "(", "shape", ",", "0.0", ")", ")", "\n", "self", ".", "gamma", ".", "set_value", "(", "paddle", ".", "full", "(", "shape", ",", "1.0", ")", ")", "\n", "self", ".", "beta", ".", "set_value", "(", "paddle", ".", "full", "(", "shape", ",", "0.0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.resnet_ugatit.ILN.forward": [[279, 296], ["paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.var", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "resnet_ugatit.ILN.beta.expand", "resnet_ugatit.ILN.rho.expand", "resnet_ugatit.ILN.gamma.expand", "resnet_ugatit.ILN.rho.expand"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "in_mean", ",", "in_var", "=", "paddle", ".", "mean", "(", "input", ",", "[", "2", ",", "3", "]", ",", "\n", "keepdim", "=", "True", ")", ",", "paddle", ".", "var", "(", "input", ",", "[", "2", ",", "3", "]", ",", "\n", "keepdim", "=", "True", ")", "\n", "out_in", "=", "(", "input", "-", "in_mean", ")", "/", "paddle", ".", "sqrt", "(", "in_var", "+", "self", ".", "eps", ")", "\n", "ln_mean", ",", "ln_var", "=", "paddle", ".", "mean", "(", "input", ",", "[", "1", ",", "2", ",", "3", "]", ",", "\n", "keepdim", "=", "True", ")", ",", "paddle", ".", "var", "(", "input", ",", "\n", "[", "1", ",", "2", ",", "3", "]", ",", "\n", "keepdim", "=", "True", ")", "\n", "out_ln", "=", "(", "input", "-", "ln_mean", ")", "/", "paddle", ".", "sqrt", "(", "ln_var", "+", "self", ".", "eps", ")", "\n", "out", "=", "self", ".", "rho", ".", "expand", "(", "[", "input", ".", "shape", "[", "0", "]", ",", "-", "1", ",", "-", "1", ",", "-", "1", "]", ")", "*", "out_in", "+", "(", "\n", "1", "-", "self", ".", "rho", ".", "expand", "(", "[", "input", ".", "shape", "[", "0", "]", ",", "-", "1", ",", "-", "1", ",", "-", "1", "]", ")", ")", "*", "out_ln", "\n", "out", "=", "out", "*", "self", ".", "gamma", ".", "expand", "(", "[", "input", ".", "shape", "[", "0", "]", ",", "-", "1", ",", "-", "1", ",", "-", "1", "\n", "]", ")", "+", "self", ".", "beta", ".", "expand", "(", "\n", "[", "input", ".", "shape", "[", "0", "]", ",", "-", "1", ",", "-", "1", ",", "-", "1", "]", ")", "\n", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.rrdb_net.ResidualDenseBlock_5C.__init__": [[46, 55], ["paddle.Layer.__init__", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nf", "=", "64", ",", "gc", "=", "32", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "ResidualDenseBlock_5C", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# gc: growth channel, i.e. intermediate channels", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2D", "(", "nf", ",", "gc", ",", "3", ",", "1", ",", "1", ",", "bias_attr", "=", "bias", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2D", "(", "nf", "+", "gc", ",", "gc", ",", "3", ",", "1", ",", "1", ",", "bias_attr", "=", "bias", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2D", "(", "nf", "+", "2", "*", "gc", ",", "gc", ",", "3", ",", "1", ",", "1", ",", "bias_attr", "=", "bias", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv2D", "(", "nf", "+", "3", "*", "gc", ",", "gc", ",", "3", ",", "1", ",", "1", ",", "bias_attr", "=", "bias", ")", "\n", "self", ".", "conv5", "=", "nn", ".", "Conv2D", "(", "nf", "+", "4", "*", "gc", ",", "nf", ",", "3", ",", "1", ",", "1", ",", "bias_attr", "=", "bias", ")", "\n", "self", ".", "lrelu", "=", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.rrdb_net.ResidualDenseBlock_5C.forward": [[56, 63], ["rrdb_net.ResidualDenseBlock_5C.lrelu", "rrdb_net.ResidualDenseBlock_5C.lrelu", "rrdb_net.ResidualDenseBlock_5C.lrelu", "rrdb_net.ResidualDenseBlock_5C.lrelu", "rrdb_net.ResidualDenseBlock_5C.conv5", "rrdb_net.ResidualDenseBlock_5C.conv1", "rrdb_net.ResidualDenseBlock_5C.conv2", "rrdb_net.ResidualDenseBlock_5C.conv3", "rrdb_net.ResidualDenseBlock_5C.conv4", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x1", "=", "self", ".", "lrelu", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "x2", "=", "self", ".", "lrelu", "(", "self", ".", "conv2", "(", "paddle", ".", "concat", "(", "(", "x", ",", "x1", ")", ",", "1", ")", ")", ")", "\n", "x3", "=", "self", ".", "lrelu", "(", "self", ".", "conv3", "(", "paddle", ".", "concat", "(", "(", "x", ",", "x1", ",", "x2", ")", ",", "1", ")", ")", ")", "\n", "x4", "=", "self", ".", "lrelu", "(", "self", ".", "conv4", "(", "paddle", ".", "concat", "(", "(", "x", ",", "x1", ",", "x2", ",", "x3", ")", ",", "1", ")", ")", ")", "\n", "x5", "=", "self", ".", "conv5", "(", "paddle", ".", "concat", "(", "(", "x", ",", "x1", ",", "x2", ",", "x3", ",", "x4", ")", ",", "1", ")", ")", "\n", "return", "x5", "*", "0.2", "+", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.rrdb_net.RRDB.__init__": [[67, 72], ["paddle.Layer.__init__", "rrdb_net.ResidualDenseBlock_5C", "rrdb_net.ResidualDenseBlock_5C", "rrdb_net.ResidualDenseBlock_5C"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "nf", ",", "gc", "=", "32", ")", ":", "\n", "        ", "super", "(", "RRDB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "RDB1", "=", "ResidualDenseBlock_5C", "(", "nf", ",", "gc", ")", "\n", "self", ".", "RDB2", "=", "ResidualDenseBlock_5C", "(", "nf", ",", "gc", ")", "\n", "self", ".", "RDB3", "=", "ResidualDenseBlock_5C", "(", "nf", ",", "gc", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.rrdb_net.RRDB.forward": [[73, 78], ["rrdb_net.RRDB.RDB1", "rrdb_net.RRDB.RDB2", "rrdb_net.RRDB.RDB3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "RDB1", "(", "x", ")", "\n", "out", "=", "self", ".", "RDB2", "(", "out", ")", "\n", "out", "=", "self", ".", "RDB3", "(", "out", ")", "\n", "return", "out", "*", "0.2", "+", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.rrdb_net.RRDBNet.__init__": [[89, 111], ["paddle.Layer.__init__", "functools.partial", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "rrdb_net.make_layer", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.LeakyReLU", "paddle.LeakyReLU", "paddle.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.rrdb_net.make_layer"], ["    ", "def", "__init__", "(", "self", ",", "in_nc", ",", "out_nc", ",", "nf", ",", "nb", ",", "gc", "=", "32", ",", "scale", "=", "4", ")", ":", "\n", "        ", "super", "(", "RRDBNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "scale", "=", "scale", "\n", "if", "scale", "==", "2", ":", "\n", "            ", "in_nc", "=", "in_nc", "*", "4", "\n", "", "elif", "scale", "==", "1", ":", "\n", "            ", "in_nc", "=", "in_nc", "*", "16", "\n", "\n", "", "RRDB_block_f", "=", "functools", ".", "partial", "(", "RRDB", ",", "nf", "=", "nf", ",", "gc", "=", "gc", ")", "\n", "\n", "self", ".", "conv_first", "=", "nn", ".", "Conv2D", "(", "in_nc", ",", "nf", ",", "3", ",", "1", ",", "1", ",", "bias_attr", "=", "True", ")", "\n", "self", ".", "RRDB_trunk", "=", "make_layer", "(", "RRDB_block_f", ",", "nb", ")", "\n", "self", ".", "trunk_conv", "=", "nn", ".", "Conv2D", "(", "nf", ",", "nf", ",", "3", ",", "1", ",", "1", ",", "bias_attr", "=", "True", ")", "\n", "\n", "#### upsampling", "\n", "self", ".", "upconv1", "=", "nn", ".", "Conv2D", "(", "nf", ",", "nf", ",", "3", ",", "1", ",", "1", ",", "bias_attr", "=", "True", ")", "\n", "self", ".", "upconv2", "=", "nn", ".", "Conv2D", "(", "nf", ",", "nf", ",", "3", ",", "1", ",", "1", ",", "bias_attr", "=", "True", ")", "\n", "self", ".", "HRconv", "=", "nn", ".", "Conv2D", "(", "nf", ",", "nf", ",", "3", ",", "1", ",", "1", ",", "bias_attr", "=", "True", ")", "\n", "self", ".", "conv_last", "=", "nn", ".", "Conv2D", "(", "nf", ",", "out_nc", ",", "3", ",", "1", ",", "1", ",", "bias_attr", "=", "True", ")", "\n", "\n", "self", ".", "lrelu", "=", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.rrdb_net.RRDBNet.forward": [[112, 131], ["rrdb_net.RRDBNet.conv_first", "rrdb_net.RRDBNet.trunk_conv", "rrdb_net.RRDBNet.lrelu", "rrdb_net.RRDBNet.lrelu", "rrdb_net.RRDBNet.conv_last", "rrdb_net.pixel_unshuffle", "rrdb_net.RRDBNet.RRDB_trunk", "rrdb_net.RRDBNet.upconv1", "rrdb_net.RRDBNet.upconv2", "rrdb_net.RRDBNet.lrelu", "rrdb_net.pixel_unshuffle", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "rrdb_net.RRDBNet.HRconv"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.rrdb_net.pixel_unshuffle", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.rrdb_net.pixel_unshuffle"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "scale", "==", "2", ":", "\n", "            ", "fea", "=", "pixel_unshuffle", "(", "x", ",", "scale", "=", "2", ")", "\n", "", "elif", "self", ".", "scale", "==", "1", ":", "\n", "            ", "fea", "=", "pixel_unshuffle", "(", "x", ",", "scale", "=", "4", ")", "\n", "", "else", ":", "\n", "            ", "fea", "=", "x", "\n", "\n", "", "fea", "=", "self", ".", "conv_first", "(", "fea", ")", "\n", "trunk", "=", "self", ".", "trunk_conv", "(", "self", ".", "RRDB_trunk", "(", "fea", ")", ")", "\n", "fea", "=", "fea", "+", "trunk", "\n", "\n", "fea", "=", "self", ".", "lrelu", "(", "\n", "self", ".", "upconv1", "(", "F", ".", "interpolate", "(", "fea", ",", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", ")", ")", "\n", "fea", "=", "self", ".", "lrelu", "(", "\n", "self", ".", "upconv2", "(", "F", ".", "interpolate", "(", "fea", ",", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", ")", ")", "\n", "out", "=", "self", ".", "conv_last", "(", "self", ".", "lrelu", "(", "self", ".", "HRconv", "(", "fea", ")", ")", ")", "\n", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.rrdb_net.pixel_unshuffle": [[25, 43], ["x.reshape", "x.reshape.transpose().reshape", "x.reshape.transpose"], "function", ["None"], ["def", "pixel_unshuffle", "(", "x", ",", "scale", ")", ":", "\n", "    ", "\"\"\" Pixel unshuffle function.\n\n    Args:\n        x (paddle.Tensor): Input feature.\n        scale (int): Downsample ratio.\n\n    Returns:\n        paddle.Tensor: the pixel unshuffled feature.\n    \"\"\"", "\n", "b", ",", "c", ",", "h", ",", "w", "=", "x", ".", "shape", "\n", "out_channel", "=", "c", "*", "(", "scale", "**", "2", ")", "\n", "assert", "h", "%", "scale", "==", "0", "and", "w", "%", "scale", "==", "0", "\n", "hh", "=", "h", "//", "scale", "\n", "ww", "=", "w", "//", "scale", "\n", "x_reshaped", "=", "x", ".", "reshape", "(", "[", "b", ",", "c", ",", "hh", ",", "scale", ",", "ww", ",", "scale", "]", ")", "\n", "return", "x_reshaped", ".", "transpose", "(", "[", "0", ",", "1", ",", "3", ",", "5", ",", "2", ",", "\n", "4", "]", ")", ".", "reshape", "(", "[", "b", ",", "out_channel", ",", "hh", ",", "ww", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.rrdb_net.make_layer": [[80, 85], ["range", "paddle.Sequential", "layers.append", "block"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "", "def", "make_layer", "(", "block", ",", "n_layers", ")", ":", "\n", "    ", "layers", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "n_layers", ")", ":", "\n", "        ", "layers", ".", "append", "(", "block", "(", ")", ")", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_styleganv2.PixelNorm.__init__": [[32, 34], ["paddle.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_styleganv2.PixelNorm.forward": [[35, 38], ["paddle.rsqrt", "paddle.rsqrt", "paddle.rsqrt", "paddle.rsqrt", "paddle.rsqrt", "paddle.rsqrt", "paddle.rsqrt", "paddle.rsqrt", "paddle.rsqrt", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "return", "inputs", "*", "paddle", ".", "rsqrt", "(", "\n", "paddle", ".", "mean", "(", "inputs", "*", "inputs", ",", "1", ",", "keepdim", "=", "True", ")", "+", "1e-8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_styleganv2.ModulatedConv2D.__init__": [[41, 90], ["paddle.Layer.__init__", "generator_styleganv2.ModulatedConv2D.create_parameter", "modules.equalized.EqualLinear", "modules.upfirdn2d.Upfirdn2dBlur", "modules.upfirdn2d.Upfirdn2dBlur", "math.sqrt", "paddle.initializer.Normal", "paddle.initializer.Normal", "paddle.initializer.Normal", "len", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "in_channel", ",", "\n", "out_channel", ",", "\n", "kernel_size", ",", "\n", "style_dim", ",", "\n", "demodulate", "=", "True", ",", "\n", "upsample", "=", "False", ",", "\n", "downsample", "=", "False", ",", "\n", "blur_kernel", "=", "[", "1", ",", "3", ",", "3", ",", "1", "]", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "eps", "=", "1e-8", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "in_channel", "=", "in_channel", "\n", "self", ".", "out_channel", "=", "out_channel", "\n", "self", ".", "upsample", "=", "upsample", "\n", "self", ".", "downsample", "=", "downsample", "\n", "\n", "if", "upsample", ":", "\n", "            ", "factor", "=", "2", "\n", "p", "=", "(", "len", "(", "blur_kernel", ")", "-", "factor", ")", "-", "(", "kernel_size", "-", "1", ")", "\n", "pad0", "=", "(", "p", "+", "1", ")", "//", "2", "+", "factor", "-", "1", "\n", "pad1", "=", "p", "//", "2", "+", "1", "\n", "\n", "self", ".", "blur", "=", "Upfirdn2dBlur", "(", "blur_kernel", ",", "\n", "pad", "=", "(", "pad0", ",", "pad1", ")", ",", "\n", "upsample_factor", "=", "factor", ")", "\n", "\n", "", "if", "downsample", ":", "\n", "            ", "factor", "=", "2", "\n", "p", "=", "(", "len", "(", "blur_kernel", ")", "-", "factor", ")", "+", "(", "kernel_size", "-", "1", ")", "\n", "pad0", "=", "(", "p", "+", "1", ")", "//", "2", "\n", "pad1", "=", "p", "//", "2", "\n", "\n", "self", ".", "blur", "=", "Upfirdn2dBlur", "(", "blur_kernel", ",", "pad", "=", "(", "pad0", ",", "pad1", ")", ")", "\n", "\n", "", "fan_in", "=", "in_channel", "*", "(", "kernel_size", "*", "kernel_size", ")", "\n", "self", ".", "scale", "=", "1", "/", "math", ".", "sqrt", "(", "fan_in", ")", "\n", "self", ".", "padding", "=", "kernel_size", "//", "2", "\n", "\n", "self", ".", "weight", "=", "self", ".", "create_parameter", "(", "\n", "(", "1", ",", "out_channel", ",", "in_channel", ",", "kernel_size", ",", "kernel_size", ")", ",", "\n", "default_initializer", "=", "nn", ".", "initializer", ".", "Normal", "(", ")", ")", "\n", "\n", "self", ".", "modulation", "=", "EqualLinear", "(", "style_dim", ",", "in_channel", ",", "bias_init", "=", "1", ")", "\n", "\n", "self", ".", "demodulate", "=", "demodulate", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_styleganv2.ModulatedConv2D.__repr__": [[91, 94], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "(", "\n", "f\"{self.__class__.__name__}({self.in_channel}, {self.out_channel}, {self.kernel_size}, \"", "\n", "f\"upsample={self.upsample}, downsample={self.downsample})\"", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_styleganv2.ModulatedConv2D.forward": [[96, 140], ["generator_styleganv2.ModulatedConv2D.modulation().reshape", "weight.transpose().reshape.transpose().reshape.reshape", "paddle.rsqrt", "paddle.rsqrt", "paddle.rsqrt", "paddle.rsqrt", "paddle.rsqrt", "paddle.rsqrt", "paddle.rsqrt", "paddle.rsqrt", "paddle.rsqrt", "inputs.reshape.reshape.reshape", "weight.transpose().reshape.transpose().reshape.reshape", "weight.transpose().reshape.transpose().reshape.transpose().reshape", "paddle.conv2d_transpose", "paddle.conv2d_transpose", "paddle.conv2d_transpose", "out.reshape.reshape.reshape", "generator_styleganv2.ModulatedConv2D.blur", "generator_styleganv2.ModulatedConv2D.modulation", "paddle.rsqrt.reshape", "paddle.rsqrt.reshape", "paddle.rsqrt.reshape", "generator_styleganv2.ModulatedConv2D.blur", "inputs.reshape.reshape.reshape", "paddle.conv2d", "paddle.conv2d", "paddle.conv2d", "out.reshape.reshape.reshape", "inputs.reshape.reshape.reshape", "paddle.conv2d", "paddle.conv2d", "paddle.conv2d", "out.reshape.reshape.reshape", "weight.transpose().reshape.transpose().reshape.transpose"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "style", ")", ":", "\n", "        ", "batch", ",", "in_channel", ",", "height", ",", "width", "=", "inputs", ".", "shape", "\n", "\n", "style", "=", "self", ".", "modulation", "(", "style", ")", ".", "reshape", "(", "(", "batch", ",", "1", ",", "in_channel", ",", "1", ",", "1", ")", ")", "\n", "weight", "=", "self", ".", "scale", "*", "self", ".", "weight", "*", "style", "\n", "\n", "if", "self", ".", "demodulate", ":", "\n", "            ", "demod", "=", "paddle", ".", "rsqrt", "(", "(", "weight", "*", "weight", ")", ".", "sum", "(", "[", "2", ",", "3", ",", "4", "]", ")", "+", "1e-8", ")", "\n", "weight", "=", "weight", "*", "demod", ".", "reshape", "(", "(", "batch", ",", "self", ".", "out_channel", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "\n", "", "weight", "=", "weight", ".", "reshape", "(", "(", "batch", "*", "self", ".", "out_channel", ",", "in_channel", ",", "\n", "self", ".", "kernel_size", ",", "self", ".", "kernel_size", ")", ")", "\n", "\n", "if", "self", ".", "upsample", ":", "\n", "            ", "inputs", "=", "inputs", ".", "reshape", "(", "(", "1", ",", "batch", "*", "in_channel", ",", "height", ",", "width", ")", ")", "\n", "weight", "=", "weight", ".", "reshape", "(", "(", "batch", ",", "self", ".", "out_channel", ",", "in_channel", ",", "\n", "self", ".", "kernel_size", ",", "self", ".", "kernel_size", ")", ")", "\n", "weight", "=", "weight", ".", "transpose", "(", "(", "0", ",", "2", ",", "1", ",", "3", ",", "4", ")", ")", ".", "reshape", "(", "\n", "(", "batch", "*", "in_channel", ",", "self", ".", "out_channel", ",", "self", ".", "kernel_size", ",", "\n", "self", ".", "kernel_size", ")", ")", "\n", "out", "=", "F", ".", "conv2d_transpose", "(", "inputs", ",", "\n", "weight", ",", "\n", "padding", "=", "0", ",", "\n", "stride", "=", "2", ",", "\n", "groups", "=", "batch", ")", "\n", "_", ",", "_", ",", "height", ",", "width", "=", "out", ".", "shape", "\n", "out", "=", "out", ".", "reshape", "(", "(", "batch", ",", "self", ".", "out_channel", ",", "height", ",", "width", ")", ")", "\n", "out", "=", "self", ".", "blur", "(", "out", ")", "\n", "\n", "", "elif", "self", ".", "downsample", ":", "\n", "            ", "inputs", "=", "self", ".", "blur", "(", "inputs", ")", "\n", "_", ",", "_", ",", "height", ",", "width", "=", "inputs", ".", "shape", "\n", "inputs", "=", "inputs", ".", "reshape", "(", "(", "1", ",", "batch", "*", "in_channel", ",", "height", ",", "width", ")", ")", "\n", "out", "=", "F", ".", "conv2d", "(", "inputs", ",", "weight", ",", "padding", "=", "0", ",", "stride", "=", "2", ",", "groups", "=", "batch", ")", "\n", "_", ",", "_", ",", "height", ",", "width", "=", "out", ".", "shape", "\n", "out", "=", "out", ".", "reshape", "(", "(", "batch", ",", "self", ".", "out_channel", ",", "height", ",", "width", ")", ")", "\n", "\n", "", "else", ":", "\n", "            ", "inputs", "=", "inputs", ".", "reshape", "(", "(", "1", ",", "batch", "*", "in_channel", ",", "height", ",", "width", ")", ")", "\n", "out", "=", "F", ".", "conv2d", "(", "inputs", ",", "weight", ",", "padding", "=", "self", ".", "padding", ",", "groups", "=", "batch", ")", "\n", "_", ",", "_", ",", "height", ",", "width", "=", "out", ".", "shape", "\n", "out", "=", "out", ".", "reshape", "(", "(", "batch", ",", "self", ".", "out_channel", ",", "height", ",", "width", ")", ")", "\n", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_styleganv2.NoiseInjection.__init__": [[143, 149], ["paddle.Layer.__init__", "generator_styleganv2.NoiseInjection.create_parameter", "paddle.initializer.Constant", "paddle.initializer.Constant", "paddle.initializer.Constant"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "is_concat", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "weight", "=", "self", ".", "create_parameter", "(", "\n", "(", "1", ",", ")", ",", "default_initializer", "=", "nn", ".", "initializer", ".", "Constant", "(", "0.0", ")", ")", "\n", "self", ".", "is_concat", "=", "is_concat", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_styleganv2.NoiseInjection.forward": [[150, 158], ["paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "image", ",", "noise", "=", "None", ")", ":", "\n", "        ", "if", "noise", "is", "None", ":", "\n", "            ", "batch", ",", "_", ",", "height", ",", "width", "=", "image", ".", "shape", "\n", "noise", "=", "paddle", ".", "randn", "(", "(", "batch", ",", "1", ",", "height", ",", "width", ")", ")", "\n", "", "if", "self", ".", "is_concat", ":", "\n", "            ", "return", "paddle", ".", "concat", "(", "[", "image", ",", "self", ".", "weight", "*", "noise", "]", ",", "axis", "=", "1", ")", "\n", "", "else", ":", "\n", "            ", "return", "image", "+", "self", ".", "weight", "*", "noise", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_styleganv2.ConstantInput.__init__": [[161, 167], ["paddle.Layer.__init__", "generator_styleganv2.ConstantInput.create_parameter", "paddle.initializer.Normal", "paddle.initializer.Normal", "paddle.initializer.Normal"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "size", "=", "4", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "input", "=", "self", ".", "create_parameter", "(", "\n", "(", "1", ",", "channel", ",", "size", ",", "size", ")", ",", "\n", "default_initializer", "=", "nn", ".", "initializer", ".", "Normal", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_styleganv2.ConstantInput.forward": [[168, 173], ["generator_styleganv2.ConstantInput.input.tile"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "batch", "=", "inputs", ".", "shape", "[", "0", "]", "\n", "out", "=", "self", ".", "input", ".", "tile", "(", "(", "batch", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_styleganv2.StyledConv.__init__": [[176, 200], ["paddle.Layer.__init__", "generator_styleganv2.ModulatedConv2D", "generator_styleganv2.NoiseInjection", "modules.fused_act.FusedLeakyReLU"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channel", ",", "\n", "out_channel", ",", "\n", "kernel_size", ",", "\n", "style_dim", ",", "\n", "upsample", "=", "False", ",", "\n", "blur_kernel", "=", "[", "1", ",", "3", ",", "3", ",", "1", "]", ",", "\n", "demodulate", "=", "True", ",", "\n", "is_concat", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv", "=", "ModulatedConv2D", "(", "\n", "in_channel", ",", "\n", "out_channel", ",", "\n", "kernel_size", ",", "\n", "style_dim", ",", "\n", "upsample", "=", "upsample", ",", "\n", "blur_kernel", "=", "blur_kernel", ",", "\n", "demodulate", "=", "demodulate", ",", "\n", ")", "\n", "\n", "self", ".", "noise", "=", "NoiseInjection", "(", "is_concat", "=", "is_concat", ")", "\n", "self", ".", "activate", "=", "FusedLeakyReLU", "(", "out_channel", "*", "\n", "2", "if", "is_concat", "else", "out_channel", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_styleganv2.StyledConv.forward": [[201, 207], ["generator_styleganv2.StyledConv.conv", "generator_styleganv2.StyledConv.noise", "generator_styleganv2.StyledConv.activate"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "style", ",", "noise", "=", "None", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv", "(", "inputs", ",", "style", ")", "\n", "out", "=", "self", ".", "noise", "(", "out", ",", "noise", "=", "noise", ")", "\n", "out", "=", "self", ".", "activate", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_styleganv2.ToRGB.__init__": [[210, 227], ["paddle.Layer.__init__", "generator_styleganv2.ModulatedConv2D", "generator_styleganv2.ToRGB.create_parameter", "modules.upfirdn2d.Upfirdn2dUpsample", "paddle.initializer.Constant", "paddle.initializer.Constant", "paddle.initializer.Constant"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channel", ",", "\n", "style_dim", ",", "\n", "upsample", "=", "True", ",", "\n", "blur_kernel", "=", "[", "1", ",", "3", ",", "3", ",", "1", "]", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "upsample", ":", "\n", "            ", "self", ".", "upsample", "=", "Upfirdn2dUpsample", "(", "blur_kernel", ")", "\n", "\n", "", "self", ".", "conv", "=", "ModulatedConv2D", "(", "in_channel", ",", "\n", "3", ",", "\n", "1", ",", "\n", "style_dim", ",", "\n", "demodulate", "=", "False", ")", "\n", "self", ".", "bias", "=", "self", ".", "create_parameter", "(", "(", "1", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "initializer", ".", "Constant", "(", "0.0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_styleganv2.ToRGB.forward": [[228, 238], ["generator_styleganv2.ToRGB.conv", "generator_styleganv2.ToRGB.upsample"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.upsample"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "style", ",", "skip", "=", "None", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv", "(", "inputs", ",", "style", ")", "\n", "out", "=", "out", "+", "self", ".", "bias", "\n", "\n", "if", "skip", "is", "not", "None", ":", "\n", "            ", "skip", "=", "self", ".", "upsample", "(", "skip", ")", "\n", "\n", "out", "=", "out", "+", "skip", "\n", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_styleganv2.StyleGANv2Generator.__init__": [[242, 336], ["paddle.Layer.__init__", "range", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "generator_styleganv2.ConstantInput", "generator_styleganv2.StyledConv", "generator_styleganv2.ToRGB", "int", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.LayerList", "paddle.Layer", "paddle.Layer", "paddle.Layer", "range", "range", "generator_styleganv2.PixelNorm", "layers.append", "math.log", "generator_styleganv2.StyleGANv2Generator.noises.register_buffer", "generator_styleganv2.StyleGANv2Generator.convs.append", "generator_styleganv2.StyleGANv2Generator.convs.append", "generator_styleganv2.StyleGANv2Generator.to_rgbs.append", "modules.equalized.EqualLinear", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "generator_styleganv2.StyledConv", "generator_styleganv2.StyledConv", "generator_styleganv2.ToRGB"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["    ", "def", "__init__", "(", "self", ",", "\n", "size", ",", "\n", "style_dim", ",", "\n", "n_mlp", ",", "\n", "channel_multiplier", "=", "2", ",", "\n", "blur_kernel", "=", "[", "1", ",", "3", ",", "3", ",", "1", "]", ",", "\n", "lr_mlp", "=", "0.01", ",", "\n", "is_concat", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "size", "=", "size", "\n", "\n", "self", ".", "style_dim", "=", "style_dim", "\n", "\n", "layers", "=", "[", "PixelNorm", "(", ")", "]", "\n", "\n", "for", "i", "in", "range", "(", "n_mlp", ")", ":", "\n", "            ", "layers", ".", "append", "(", "\n", "EqualLinear", "(", "style_dim", ",", "\n", "style_dim", ",", "\n", "lr_mul", "=", "lr_mlp", ",", "\n", "activation", "=", "\"fused_lrelu\"", ")", ")", "\n", "\n", "", "self", ".", "style", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n", "self", ".", "channels", "=", "{", "\n", "4", ":", "512", ",", "\n", "8", ":", "512", ",", "\n", "16", ":", "512", ",", "\n", "32", ":", "512", ",", "\n", "64", ":", "256", "*", "channel_multiplier", ",", "\n", "128", ":", "128", "*", "channel_multiplier", ",", "\n", "256", ":", "64", "*", "channel_multiplier", ",", "\n", "512", ":", "32", "*", "channel_multiplier", ",", "\n", "1024", ":", "16", "*", "channel_multiplier", ",", "\n", "}", "\n", "\n", "self", ".", "input", "=", "ConstantInput", "(", "self", ".", "channels", "[", "4", "]", ")", "\n", "self", ".", "conv1", "=", "StyledConv", "(", "self", ".", "channels", "[", "4", "]", ",", "\n", "self", ".", "channels", "[", "4", "]", ",", "\n", "3", ",", "\n", "style_dim", ",", "\n", "blur_kernel", "=", "blur_kernel", ",", "\n", "is_concat", "=", "is_concat", ")", "\n", "self", ".", "to_rgb1", "=", "ToRGB", "(", "self", ".", "channels", "[", "4", "]", "*", "\n", "2", "if", "is_concat", "else", "self", ".", "channels", "[", "4", "]", ",", "\n", "style_dim", ",", "\n", "upsample", "=", "False", ")", "\n", "\n", "self", ".", "log_size", "=", "int", "(", "math", ".", "log", "(", "size", ",", "2", ")", ")", "\n", "self", ".", "num_layers", "=", "(", "self", ".", "log_size", "-", "2", ")", "*", "2", "+", "1", "\n", "\n", "self", ".", "convs", "=", "nn", ".", "LayerList", "(", ")", "\n", "self", ".", "upsamples", "=", "nn", ".", "LayerList", "(", ")", "\n", "self", ".", "to_rgbs", "=", "nn", ".", "LayerList", "(", ")", "\n", "self", ".", "noises", "=", "nn", ".", "Layer", "(", ")", "\n", "\n", "in_channel", "=", "self", ".", "channels", "[", "4", "]", "\n", "\n", "for", "layer_idx", "in", "range", "(", "self", ".", "num_layers", ")", ":", "\n", "            ", "res", "=", "(", "layer_idx", "+", "5", ")", "//", "2", "\n", "shape", "=", "[", "1", ",", "1", ",", "2", "**", "res", ",", "2", "**", "res", "]", "\n", "self", ".", "noises", ".", "register_buffer", "(", "f\"noise_{layer_idx}\"", ",", "\n", "paddle", ".", "randn", "(", "shape", ")", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "3", ",", "self", ".", "log_size", "+", "1", ")", ":", "\n", "            ", "out_channel", "=", "self", ".", "channels", "[", "2", "**", "i", "]", "\n", "\n", "self", ".", "convs", ".", "append", "(", "\n", "StyledConv", "(", "\n", "in_channel", "*", "2", "if", "is_concat", "else", "in_channel", ",", "\n", "out_channel", ",", "\n", "3", ",", "\n", "style_dim", ",", "\n", "upsample", "=", "True", ",", "\n", "blur_kernel", "=", "blur_kernel", ",", "\n", "is_concat", "=", "is_concat", ",", "\n", ")", ")", "\n", "\n", "self", ".", "convs", ".", "append", "(", "\n", "StyledConv", "(", "out_channel", "*", "2", "if", "is_concat", "else", "out_channel", ",", "\n", "out_channel", ",", "\n", "3", ",", "\n", "style_dim", ",", "\n", "blur_kernel", "=", "blur_kernel", ",", "\n", "is_concat", "=", "is_concat", ")", ")", "\n", "\n", "self", ".", "to_rgbs", ".", "append", "(", "\n", "ToRGB", "(", "out_channel", "*", "2", "if", "is_concat", "else", "out_channel", ",", "style_dim", ")", ")", "\n", "\n", "in_channel", "=", "out_channel", "\n", "\n", "", "self", ".", "n_latent", "=", "self", ".", "log_size", "*", "2", "-", "2", "\n", "self", ".", "is_concat", "=", "is_concat", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_styleganv2.StyleGANv2Generator.make_noise": [[337, 345], ["range", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "range", "noises.append", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "make_noise", "(", "self", ")", ":", "\n", "        ", "noises", "=", "[", "paddle", ".", "randn", "(", "(", "1", ",", "1", ",", "2", "**", "2", ",", "2", "**", "2", ")", ")", "]", "\n", "\n", "for", "i", "in", "range", "(", "3", ",", "self", ".", "log_size", "+", "1", ")", ":", "\n", "            ", "for", "_", "in", "range", "(", "2", ")", ":", "\n", "                ", "noises", ".", "append", "(", "paddle", ".", "randn", "(", "(", "1", ",", "1", ",", "2", "**", "i", ",", "2", "**", "i", ")", ")", ")", "\n", "\n", "", "", "return", "noises", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_styleganv2.StyleGANv2Generator.mean_latent": [[346, 351], ["paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "paddle.randn", "generator_styleganv2.StyleGANv2Generator.style().mean", "generator_styleganv2.StyleGANv2Generator.style"], "methods", ["None"], ["", "def", "mean_latent", "(", "self", ",", "n_latent", ")", ":", "\n", "        ", "latent_in", "=", "paddle", ".", "randn", "(", "(", "n_latent", ",", "self", ".", "style_dim", ")", ")", "\n", "latent", "=", "self", ".", "style", "(", "latent_in", ")", ".", "mean", "(", "0", ",", "keepdim", "=", "True", ")", "\n", "\n", "return", "latent", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_styleganv2.StyleGANv2Generator.get_latent": [[352, 354], ["generator_styleganv2.StyleGANv2Generator.style"], "methods", ["None"], ["", "def", "get_latent", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "return", "self", ".", "style", "(", "inputs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_styleganv2.StyleGANv2Generator.get_mean_style": [[355, 367], ["paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "range", "generator_styleganv2.StyleGANv2Generator.mean_latent"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_styleganv2.StyleGANv2Generator.mean_latent"], ["", "def", "get_mean_style", "(", "self", ")", ":", "\n", "        ", "mean_style", "=", "None", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "i", "in", "range", "(", "10", ")", ":", "\n", "                ", "style", "=", "self", ".", "mean_latent", "(", "1024", ")", "\n", "if", "mean_style", "is", "None", ":", "\n", "                    ", "mean_style", "=", "style", "\n", "", "else", ":", "\n", "                    ", "mean_style", "+=", "style", "\n", "\n", "", "", "", "mean_style", "/=", "10", "\n", "return", "mean_style", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_styleganv2.StyleGANv2Generator.forward": [[368, 458], ["generator_styleganv2.StyleGANv2Generator.input", "generator_styleganv2.StyleGANv2Generator.conv1", "generator_styleganv2.StyleGANv2Generator.to_rgb1", "len", "styles[].unsqueeze().tile", "styles[].unsqueeze().tile", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "zip", "zip", "generator_styleganv2.StyleGANv2Generator.style", "generator_styleganv2.StyleGANv2Generator.get_mean_style", "style_t.append", "styles[].unsqueeze().tile", "random.randint", "conv1", "conv2", "to_rgb", "conv1", "conv2", "to_rgb", "getattr", "styles[].unsqueeze", "styles[].unsqueeze", "range", "styles[].unsqueeze"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_styleganv2.StyleGANv2Generator.get_mean_style", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "forward", "(", "\n", "self", ",", "\n", "styles", ",", "\n", "return_latents", "=", "False", ",", "\n", "inject_index", "=", "None", ",", "\n", "truncation", "=", "1.0", ",", "\n", "truncation_latent", "=", "None", ",", "\n", "input_is_latent", "=", "False", ",", "\n", "noise", "=", "None", ",", "\n", "randomize_noise", "=", "True", ",", "\n", ")", ":", "\n", "        ", "if", "not", "input_is_latent", ":", "\n", "            ", "styles", "=", "[", "self", ".", "style", "(", "s", ")", "for", "s", "in", "styles", "]", "\n", "\n", "", "if", "noise", "is", "None", ":", "\n", "            ", "if", "randomize_noise", ":", "\n", "                ", "noise", "=", "[", "None", "]", "*", "self", ".", "num_layers", "\n", "", "else", ":", "\n", "                ", "noise", "=", "[", "\n", "getattr", "(", "self", ".", "noises", ",", "f\"noise_{i}\"", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "num_layers", ")", "\n", "]", "\n", "\n", "", "", "if", "truncation", "<", "1.0", ":", "\n", "            ", "style_t", "=", "[", "]", "\n", "if", "truncation_latent", "is", "None", ":", "\n", "                ", "truncation_latent", "=", "self", ".", "get_mean_style", "(", ")", "\n", "", "for", "style", "in", "styles", ":", "\n", "                ", "style_t", ".", "append", "(", "truncation_latent", "+", "truncation", "*", "\n", "(", "style", "-", "truncation_latent", ")", ")", "\n", "\n", "", "styles", "=", "style_t", "\n", "\n", "", "if", "len", "(", "styles", ")", "<", "2", ":", "\n", "            ", "inject_index", "=", "self", ".", "n_latent", "\n", "\n", "if", "styles", "[", "0", "]", ".", "ndim", "<", "3", ":", "\n", "                ", "latent", "=", "styles", "[", "0", "]", ".", "unsqueeze", "(", "1", ")", ".", "tile", "(", "(", "1", ",", "inject_index", ",", "1", ")", ")", "\n", "\n", "", "else", ":", "\n", "                ", "latent", "=", "styles", "[", "0", "]", "\n", "\n", "", "", "else", ":", "\n", "            ", "if", "inject_index", "is", "None", ":", "\n", "                ", "inject_index", "=", "random", ".", "randint", "(", "1", ",", "self", ".", "n_latent", "-", "1", ")", "\n", "\n", "", "latent", "=", "styles", "[", "0", "]", ".", "unsqueeze", "(", "1", ")", ".", "tile", "(", "(", "1", ",", "inject_index", ",", "1", ")", ")", "\n", "latent2", "=", "styles", "[", "1", "]", ".", "unsqueeze", "(", "1", ")", ".", "tile", "(", "\n", "(", "1", ",", "self", ".", "n_latent", "-", "inject_index", ",", "1", ")", ")", "\n", "\n", "latent", "=", "paddle", ".", "concat", "(", "[", "latent", ",", "latent2", "]", ",", "1", ")", "\n", "\n", "", "out", "=", "self", ".", "input", "(", "latent", ")", "\n", "out", "=", "self", ".", "conv1", "(", "out", ",", "latent", "[", ":", ",", "0", "]", ",", "noise", "=", "noise", "[", "0", "]", ")", "\n", "\n", "skip", "=", "self", ".", "to_rgb1", "(", "out", ",", "latent", "[", ":", ",", "1", "]", ")", "\n", "\n", "i", "=", "1", "\n", "if", "self", ".", "is_concat", ":", "\n", "            ", "noise_i", "=", "1", "\n", "\n", "outs", "=", "[", "]", "\n", "for", "conv1", ",", "conv2", ",", "to_rgb", "in", "zip", "(", "self", ".", "convs", "[", ":", ":", "2", "]", ",", "self", ".", "convs", "[", "1", ":", ":", "2", "]", ",", "\n", "self", ".", "to_rgbs", ")", ":", "\n", "                ", "out", "=", "conv1", "(", "out", ",", "latent", "[", ":", ",", "i", "]", ",", "\n", "noise", "=", "noise", "[", "(", "noise_i", "+", "1", ")", "//", "2", "]", ")", "### 1 for 2", "\n", "out", "=", "conv2", "(", "out", ",", "\n", "latent", "[", ":", ",", "i", "+", "1", "]", ",", "\n", "noise", "=", "noise", "[", "(", "noise_i", "+", "2", ")", "//", "2", "]", ")", "### 1 for 2", "\n", "skip", "=", "to_rgb", "(", "out", ",", "latent", "[", ":", ",", "i", "+", "2", "]", ",", "skip", ")", "\n", "\n", "i", "+=", "2", "\n", "noise_i", "+=", "2", "\n", "", "", "else", ":", "\n", "            ", "for", "conv1", ",", "conv2", ",", "noise1", ",", "noise2", ",", "to_rgb", "in", "zip", "(", "\n", "self", ".", "convs", "[", ":", ":", "2", "]", ",", "self", ".", "convs", "[", "1", ":", ":", "2", "]", ",", "noise", "[", "1", ":", ":", "2", "]", ",", "noise", "[", "2", ":", ":", "2", "]", ",", "\n", "self", ".", "to_rgbs", ")", ":", "\n", "                ", "out", "=", "conv1", "(", "out", ",", "latent", "[", ":", ",", "i", "]", ",", "noise", "=", "noise1", ")", "\n", "out", "=", "conv2", "(", "out", ",", "latent", "[", ":", ",", "i", "+", "1", "]", ",", "noise", "=", "noise2", ")", "\n", "skip", "=", "to_rgb", "(", "out", ",", "latent", "[", ":", ",", "i", "+", "2", "]", ",", "skip", ")", "\n", "\n", "i", "+=", "2", "\n", "\n", "", "", "image", "=", "skip", "\n", "\n", "if", "return_latents", ":", "\n", "            ", "return", "image", ",", "latent", "\n", "\n", "", "else", ":", "\n", "            ", "return", "image", ",", "None", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_starganv2.ResBlk.__init__": [[20, 33], ["paddle.nn.LeakyReLU", "paddle.nn.LeakyReLU", "paddle.nn.Layer.__init__", "generator_starganv2.ResBlk._build_weights", "paddle.nn.AvgPool2D", "paddle.nn.AvgPool2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_starganv2.AdainResBlk._build_weights"], ["    ", "def", "__init__", "(", "self", ",", "\n", "dim_in", ",", "\n", "dim_out", ",", "\n", "actv", "=", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "normalize", "=", "False", ",", "\n", "downsample", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "actv", "=", "actv", "\n", "self", ".", "normalize", "=", "normalize", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "learned_sc", "=", "dim_in", "!=", "dim_out", "\n", "self", ".", "_build_weights", "(", "dim_in", ",", "dim_out", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "AvgPool2D", "(", "kernel_size", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_starganv2.ResBlk._build_weights": [[34, 46], ["paddle.nn.Conv2D", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "paddle.nn.InstanceNorm2D", "paddle.nn.InstanceNorm2D", "paddle.nn.InstanceNorm2D", "paddle.nn.InstanceNorm2D", "paddle.nn.Conv2D", "paddle.nn.Conv2D"], "methods", ["None"], ["", "def", "_build_weights", "(", "self", ",", "dim_in", ",", "dim_out", ")", ":", "\n", "        ", "self", ".", "conv1", "=", "nn", ".", "Conv2D", "(", "dim_in", ",", "dim_in", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2D", "(", "dim_in", ",", "dim_out", ",", "3", ",", "1", ",", "1", ")", "\n", "if", "self", ".", "normalize", ":", "\n", "            ", "self", ".", "norm1", "=", "nn", ".", "InstanceNorm2D", "(", "dim_in", ",", "\n", "weight_attr", "=", "True", ",", "\n", "bias_attr", "=", "True", ")", "\n", "self", ".", "norm2", "=", "nn", ".", "InstanceNorm2D", "(", "dim_in", ",", "\n", "weight_attr", "=", "True", ",", "\n", "bias_attr", "=", "True", ")", "\n", "", "if", "self", ".", "learned_sc", ":", "\n", "            ", "self", ".", "conv1x1", "=", "nn", ".", "Conv2D", "(", "dim_in", ",", "dim_out", ",", "1", ",", "1", ",", "0", ",", "bias_attr", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_starganv2.ResBlk._shortcut": [[47, 53], ["generator_starganv2.ResBlk.conv1x1", "generator_starganv2.ResBlk.maxpool"], "methods", ["None"], ["", "", "def", "_shortcut", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "learned_sc", ":", "\n", "            ", "x", "=", "self", ".", "conv1x1", "(", "x", ")", "\n", "", "if", "self", ".", "downsample", ":", "\n", "            ", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_starganv2.ResBlk._residual": [[54, 66], ["generator_starganv2.ResBlk.actv", "generator_starganv2.ResBlk.conv1", "generator_starganv2.ResBlk.actv", "generator_starganv2.ResBlk.conv2", "generator_starganv2.ResBlk.norm1", "generator_starganv2.ResBlk.maxpool", "generator_starganv2.ResBlk.norm2"], "methods", ["None"], ["", "def", "_residual", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "normalize", ":", "\n", "            ", "x", "=", "self", ".", "norm1", "(", "x", ")", "\n", "", "x", "=", "self", ".", "actv", "(", "x", ")", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "if", "self", ".", "downsample", ":", "\n", "            ", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "", "if", "self", ".", "normalize", ":", "\n", "            ", "x", "=", "self", ".", "norm2", "(", "x", ")", "\n", "", "x", "=", "self", ".", "actv", "(", "x", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_starganv2.ResBlk.forward": [[67, 70], ["generator_starganv2.ResBlk._shortcut", "generator_starganv2.ResBlk._residual", "math.sqrt"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_starganv2.AdainResBlk._shortcut", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_starganv2.AdainResBlk._residual"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "_shortcut", "(", "x", ")", "+", "self", ".", "_residual", "(", "x", ")", "\n", "return", "x", "/", "math", ".", "sqrt", "(", "2", ")", "# unit variance", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_starganv2.AdaIN.__init__": [[73, 79], ["paddle.nn.Layer.__init__", "paddle.nn.InstanceNorm2D", "paddle.nn.InstanceNorm2D", "paddle.nn.Linear", "paddle.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "style_dim", ",", "num_features", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "norm", "=", "nn", ".", "InstanceNorm2D", "(", "num_features", ",", "\n", "weight_attr", "=", "False", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "style_dim", ",", "num_features", "*", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_starganv2.AdaIN.forward": [[80, 86], ["generator_starganv2.AdaIN.fc", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.chunk", "paddle.chunk", "paddle.chunk", "paddle.chunk", "generator_starganv2.AdaIN.norm"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm"], ["", "def", "forward", "(", "self", ",", "x", ",", "s", ")", ":", "\n", "        ", "h", "=", "self", ".", "fc", "(", "s", ")", "\n", "# h = h.view(h.size(0), h.size(1), 1, 1)", "\n", "h", "=", "paddle", ".", "reshape", "(", "h", ",", "(", "h", ".", "shape", "[", "0", "]", ",", "h", ".", "shape", "[", "1", "]", ",", "1", ",", "1", ")", ")", "\n", "gamma", ",", "beta", "=", "paddle", ".", "chunk", "(", "h", ",", "chunks", "=", "2", ",", "axis", "=", "1", ")", "\n", "return", "(", "1", "+", "gamma", ")", "*", "self", ".", "norm", "(", "x", ")", "+", "beta", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_starganv2.AdainResBlk.__init__": [[89, 102], ["paddle.nn.LeakyReLU", "paddle.nn.LeakyReLU", "paddle.nn.Layer.__init__", "generator_starganv2.AdainResBlk._build_weights"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_starganv2.AdainResBlk._build_weights"], ["    ", "def", "__init__", "(", "self", ",", "\n", "dim_in", ",", "\n", "dim_out", ",", "\n", "style_dim", "=", "64", ",", "\n", "w_hpf", "=", "0", ",", "\n", "actv", "=", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "upsample", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "w_hpf", "=", "w_hpf", "\n", "self", ".", "actv", "=", "actv", "\n", "self", ".", "upsample", "=", "upsample", "\n", "self", ".", "learned_sc", "=", "dim_in", "!=", "dim_out", "\n", "self", ".", "_build_weights", "(", "dim_in", ",", "dim_out", ",", "style_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_starganv2.AdainResBlk._build_weights": [[103, 110], ["paddle.nn.Conv2D", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "generator_starganv2.AdaIN", "generator_starganv2.AdaIN", "paddle.nn.Conv2D", "paddle.nn.Conv2D"], "methods", ["None"], ["", "def", "_build_weights", "(", "self", ",", "dim_in", ",", "dim_out", ",", "style_dim", "=", "64", ")", ":", "\n", "        ", "self", ".", "conv1", "=", "nn", ".", "Conv2D", "(", "dim_in", ",", "dim_out", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2D", "(", "dim_out", ",", "dim_out", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "norm1", "=", "AdaIN", "(", "style_dim", ",", "dim_in", ")", "\n", "self", ".", "norm2", "=", "AdaIN", "(", "style_dim", ",", "dim_out", ")", "\n", "if", "self", ".", "learned_sc", ":", "\n", "            ", "self", ".", "conv1x1", "=", "nn", ".", "Conv2D", "(", "dim_in", ",", "dim_out", ",", "1", ",", "1", ",", "0", ",", "bias_attr", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_starganv2.AdainResBlk._shortcut": [[111, 117], ["paddle.interpolate", "paddle.interpolate", "generator_starganv2.AdainResBlk.conv1x1"], "methods", ["None"], ["", "", "def", "_shortcut", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "upsample", ":", "\n", "            ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", "\n", "", "if", "self", ".", "learned_sc", ":", "\n", "            ", "x", "=", "self", ".", "conv1x1", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_starganv2.AdainResBlk._residual": [[118, 128], ["generator_starganv2.AdainResBlk.norm1", "generator_starganv2.AdainResBlk.actv", "generator_starganv2.AdainResBlk.conv1", "generator_starganv2.AdainResBlk.norm2", "generator_starganv2.AdainResBlk.actv", "generator_starganv2.AdainResBlk.conv2", "paddle.interpolate", "paddle.interpolate"], "methods", ["None"], ["", "def", "_residual", "(", "self", ",", "x", ",", "s", ")", ":", "\n", "        ", "x", "=", "self", ".", "norm1", "(", "x", ",", "s", ")", "\n", "x", "=", "self", ".", "actv", "(", "x", ")", "\n", "if", "self", ".", "upsample", ":", "\n", "            ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", "\n", "", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "norm2", "(", "x", ",", "s", ")", "\n", "x", "=", "self", ".", "actv", "(", "x", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_starganv2.AdainResBlk.forward": [[129, 134], ["generator_starganv2.AdainResBlk._residual", "math.sqrt", "generator_starganv2.AdainResBlk._shortcut"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_starganv2.AdainResBlk._residual", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_starganv2.AdainResBlk._shortcut"], ["", "def", "forward", "(", "self", ",", "x", ",", "s", ")", ":", "\n", "        ", "out", "=", "self", ".", "_residual", "(", "x", ",", "s", ")", "\n", "if", "self", ".", "w_hpf", "==", "0", ":", "\n", "            ", "out", "=", "(", "out", "+", "self", ".", "_shortcut", "(", "x", ")", ")", "/", "math", ".", "sqrt", "(", "2", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_starganv2.HighPass.__init__": [[137, 141], ["paddle.nn.Layer.__init__", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "w_hpf", ")", ":", "\n", "        ", "super", "(", "HighPass", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "filter", "=", "paddle", ".", "to_tensor", "(", "[", "[", "-", "1", ",", "-", "1", ",", "-", "1", "]", ",", "[", "-", "1", ",", "8.", ",", "-", "1", "]", ",", "\n", "[", "-", "1", ",", "-", "1", ",", "-", "1", "]", "]", ")", "/", "w_hpf", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_starganv2.HighPass.forward": [[142, 147], ["generator_starganv2.HighPass.filter.unsqueeze().unsqueeze().tile", "paddle.conv2d", "paddle.conv2d", "generator_starganv2.HighPass.filter.unsqueeze().unsqueeze", "generator_starganv2.HighPass.filter.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# filter = self.filter.unsqueeze(0).unsqueeze(1).repeat(x.size(1), 1, 1, 1)", "\n", "        ", "filter", "=", "self", ".", "filter", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "1", ")", ".", "tile", "(", "\n", "[", "x", ".", "shape", "[", "1", "]", ",", "1", ",", "1", ",", "1", "]", ")", "\n", "return", "F", ".", "conv2d", "(", "x", ",", "filter", ",", "padding", "=", "1", ",", "groups", "=", "x", ".", "shape", "[", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_starganv2.StarGANv2Generator.__init__": [[151, 194], ["paddle.nn.Layer.__init__", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "paddle.nn.LayerList", "paddle.nn.LayerList", "paddle.nn.LayerList", "paddle.nn.LayerList", "paddle.nn.Sequential", "paddle.nn.Sequential", "range", "range", "paddle.nn.InstanceNorm2D", "paddle.nn.InstanceNorm2D", "paddle.nn.LeakyReLU", "paddle.nn.LeakyReLU", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "int", "min", "generator_starganv2.StarGANv2Generator.encode.append", "generator_starganv2.StarGANv2Generator.encode.append", "generator_starganv2.StarGANv2Generator.decode.insert", "generator_starganv2.HighPass", "numpy.log2", "generator_starganv2.ResBlk", "len", "generator_starganv2.StarGANv2Generator.decode.append", "generator_starganv2.StarGANv2Generator.decode.insert", "generator_starganv2.ResBlk", "generator_starganv2.AdainResBlk", "generator_starganv2.AdainResBlk", "generator_starganv2.AdainResBlk"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.insert", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.insert"], ["    ", "def", "__init__", "(", "self", ",", "img_size", "=", "256", ",", "style_dim", "=", "64", ",", "max_conv_dim", "=", "512", ",", "w_hpf", "=", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "dim_in", "=", "2", "**", "14", "//", "img_size", "\n", "self", ".", "img_size", "=", "img_size", "\n", "self", ".", "from_rgb", "=", "nn", ".", "Conv2D", "(", "3", ",", "dim_in", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "encode", "=", "nn", ".", "LayerList", "(", ")", "\n", "self", ".", "decode", "=", "nn", ".", "LayerList", "(", ")", "\n", "self", ".", "to_rgb", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "InstanceNorm2D", "(", "dim_in", ",", "weight_attr", "=", "True", ",", "bias_attr", "=", "True", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "nn", ".", "Conv2D", "(", "dim_in", ",", "3", ",", "1", ",", "1", ",", "0", ")", ")", "\n", "\n", "# down/up-sampling blocks", "\n", "repeat_num", "=", "int", "(", "np", ".", "log2", "(", "img_size", ")", ")", "-", "4", "\n", "if", "w_hpf", ">", "0", ":", "\n", "            ", "repeat_num", "+=", "1", "\n", "", "for", "_", "in", "range", "(", "repeat_num", ")", ":", "\n", "            ", "dim_out", "=", "min", "(", "dim_in", "*", "2", ",", "max_conv_dim", ")", "\n", "self", ".", "encode", ".", "append", "(", "\n", "ResBlk", "(", "dim_in", ",", "dim_out", ",", "normalize", "=", "True", ",", "downsample", "=", "True", ")", ")", "\n", "if", "len", "(", "self", ".", "decode", ")", "==", "0", ":", "\n", "                ", "self", ".", "decode", ".", "append", "(", "\n", "AdainResBlk", "(", "dim_out", ",", "\n", "dim_in", ",", "\n", "style_dim", ",", "\n", "w_hpf", "=", "w_hpf", ",", "\n", "upsample", "=", "True", ")", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "decode", ".", "insert", "(", "0", ",", "\n", "AdainResBlk", "(", "dim_out", ",", "\n", "dim_in", ",", "\n", "style_dim", ",", "\n", "w_hpf", "=", "w_hpf", ",", "\n", "upsample", "=", "True", ")", ")", "# stack-like", "\n", "", "dim_in", "=", "dim_out", "\n", "\n", "# bottleneck blocks", "\n", "", "for", "_", "in", "range", "(", "2", ")", ":", "\n", "            ", "self", ".", "encode", ".", "append", "(", "ResBlk", "(", "dim_out", ",", "dim_out", ",", "normalize", "=", "True", ")", ")", "\n", "self", ".", "decode", ".", "insert", "(", "\n", "0", ",", "AdainResBlk", "(", "dim_out", ",", "dim_out", ",", "style_dim", ",", "w_hpf", "=", "w_hpf", ")", ")", "\n", "\n", "", "if", "w_hpf", ">", "0", ":", "\n", "            ", "self", ".", "hpf", "=", "HighPass", "(", "w_hpf", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_starganv2.StarGANv2Generator.forward": [[195, 211], ["generator_starganv2.StarGANv2Generator.from_rgb", "generator_starganv2.StarGANv2Generator.to_rgb", "block", "block", "paddle.interpolate", "paddle.interpolate", "generator_starganv2.StarGANv2Generator.hpf"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "s", ",", "masks", "=", "None", ")", ":", "\n", "        ", "x", "=", "self", ".", "from_rgb", "(", "x", ")", "\n", "cache", "=", "{", "}", "\n", "for", "block", "in", "self", ".", "encode", ":", "\n", "            ", "if", "(", "masks", "is", "not", "None", ")", "and", "(", "x", ".", "shape", "[", "2", "]", "in", "[", "32", ",", "64", ",", "128", "]", ")", ":", "\n", "                ", "cache", "[", "x", ".", "shape", "[", "2", "]", "]", "=", "x", "\n", "", "x", "=", "block", "(", "x", ")", "\n", "", "for", "block", "in", "self", ".", "decode", ":", "\n", "            ", "x", "=", "block", "(", "x", ",", "s", ")", "\n", "if", "(", "masks", "is", "not", "None", ")", "and", "(", "x", ".", "shape", "[", "2", "]", "in", "[", "32", ",", "64", ",", "128", "]", ")", ":", "\n", "                ", "mask", "=", "masks", "[", "0", "]", "if", "x", ".", "shape", "[", "2", "]", "in", "[", "32", "]", "else", "masks", "[", "1", "]", "\n", "mask", "=", "F", ".", "interpolate", "(", "mask", ",", "\n", "size", "=", "[", "x", ".", "shape", "[", "2", "]", ",", "x", ".", "shape", "[", "2", "]", "]", ",", "\n", "mode", "=", "'bilinear'", ")", "\n", "x", "=", "x", "+", "self", ".", "hpf", "(", "mask", "*", "cache", "[", "x", ".", "shape", "[", "2", "]", "]", ")", "\n", "", "", "return", "self", ".", "to_rgb", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_starganv2.StarGANv2Mapping.__init__": [[215, 232], ["paddle.nn.Layer.__init__", "range", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.LayerList", "paddle.nn.LayerList", "range", "paddle.nn.Linear", "paddle.nn.Linear", "paddle.nn.ReLU", "paddle.nn.ReLU", "generator_starganv2.StarGANv2Mapping.unshared.append", "paddle.nn.Linear", "paddle.nn.Linear", "paddle.nn.ReLU", "paddle.nn.ReLU", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Linear", "paddle.nn.Linear", "paddle.nn.ReLU", "paddle.nn.ReLU", "paddle.nn.Linear", "paddle.nn.Linear", "paddle.nn.ReLU", "paddle.nn.ReLU", "paddle.nn.Linear", "paddle.nn.Linear", "paddle.nn.ReLU", "paddle.nn.ReLU", "paddle.nn.Linear", "paddle.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["    ", "def", "__init__", "(", "self", ",", "latent_dim", "=", "16", ",", "style_dim", "=", "64", ",", "num_domains", "=", "2", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "layers", "=", "[", "]", "\n", "layers", "+=", "[", "nn", ".", "Linear", "(", "latent_dim", ",", "512", ")", "]", "\n", "layers", "+=", "[", "nn", ".", "ReLU", "(", ")", "]", "\n", "for", "_", "in", "range", "(", "3", ")", ":", "\n", "            ", "layers", "+=", "[", "nn", ".", "Linear", "(", "512", ",", "512", ")", "]", "\n", "layers", "+=", "[", "nn", ".", "ReLU", "(", ")", "]", "\n", "", "self", ".", "shared", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n", "self", ".", "unshared", "=", "nn", ".", "LayerList", "(", ")", "\n", "for", "_", "in", "range", "(", "num_domains", ")", ":", "\n", "            ", "self", ".", "unshared", ".", "append", "(", "\n", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "512", ",", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "nn", ".", "Linear", "(", "512", ",", "512", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "512", ",", "512", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "512", ",", "style_dim", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_starganv2.StarGANv2Mapping.forward": [[233, 249], ["generator_starganv2.StarGANv2Mapping.shared", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "range", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "layer", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "numpy.array", "range", "idx[].numpy().astype().tolist", "y[].numpy().astype().tolist", "idx[].numpy().astype", "y[].numpy().astype", "idx[].numpy", "y[].numpy"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "z", ",", "y", ")", ":", "\n", "        ", "h", "=", "self", ".", "shared", "(", "z", ")", "\n", "out", "=", "[", "]", "\n", "for", "layer", "in", "self", ".", "unshared", ":", "\n", "            ", "out", "+=", "[", "layer", "(", "h", ")", "]", "\n", "", "out", "=", "paddle", ".", "stack", "(", "out", ",", "axis", "=", "1", ")", "# (batch, num_domains, style_dim)", "\n", "idx", "=", "paddle", ".", "to_tensor", "(", "np", ".", "array", "(", "range", "(", "y", ".", "shape", "[", "0", "]", ")", ")", ")", ".", "astype", "(", "'int'", ")", "\n", "s", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "idx", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "s", "+=", "[", "\n", "out", "[", "idx", "[", "i", "]", ".", "numpy", "(", ")", ".", "astype", "(", "np", ".", "int", ")", ".", "tolist", "(", ")", "[", "0", "]", ",", "\n", "y", "[", "i", "]", ".", "numpy", "(", ")", ".", "astype", "(", "np", ".", "int", ")", ".", "tolist", "(", ")", "[", "0", "]", "]", "\n", "]", "\n", "", "s", "=", "paddle", ".", "stack", "(", "s", ")", "\n", "s", "=", "paddle", ".", "reshape", "(", "s", ",", "(", "s", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ")", "\n", "return", "s", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_starganv2.StarGANv2Style.__init__": [[253, 277], ["paddle.nn.Layer.__init__", "range", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.LayerList", "paddle.nn.LayerList", "range", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "int", "min", "paddle.nn.LeakyReLU", "paddle.nn.LeakyReLU", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "paddle.nn.LeakyReLU", "paddle.nn.LeakyReLU", "generator_starganv2.StarGANv2Style.unshared.append", "numpy.log2", "generator_starganv2.ResBlk", "paddle.nn.Linear", "paddle.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["    ", "def", "__init__", "(", "self", ",", "\n", "img_size", "=", "256", ",", "\n", "style_dim", "=", "64", ",", "\n", "num_domains", "=", "2", ",", "\n", "max_conv_dim", "=", "512", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "dim_in", "=", "2", "**", "14", "//", "img_size", "\n", "blocks", "=", "[", "]", "\n", "blocks", "+=", "[", "nn", ".", "Conv2D", "(", "3", ",", "dim_in", ",", "3", ",", "1", ",", "1", ")", "]", "\n", "\n", "repeat_num", "=", "int", "(", "np", ".", "log2", "(", "img_size", ")", ")", "-", "2", "\n", "for", "_", "in", "range", "(", "repeat_num", ")", ":", "\n", "            ", "dim_out", "=", "min", "(", "dim_in", "*", "2", ",", "max_conv_dim", ")", "\n", "blocks", "+=", "[", "ResBlk", "(", "dim_in", ",", "dim_out", ",", "downsample", "=", "True", ")", "]", "\n", "dim_in", "=", "dim_out", "\n", "\n", "", "blocks", "+=", "[", "nn", ".", "LeakyReLU", "(", "0.2", ")", "]", "\n", "blocks", "+=", "[", "nn", ".", "Conv2D", "(", "dim_out", ",", "dim_out", ",", "4", ",", "1", ",", "0", ")", "]", "\n", "blocks", "+=", "[", "nn", ".", "LeakyReLU", "(", "0.2", ")", "]", "\n", "self", ".", "shared", "=", "nn", ".", "Sequential", "(", "*", "blocks", ")", "\n", "\n", "self", ".", "unshared", "=", "nn", ".", "LayerList", "(", ")", "\n", "for", "_", "in", "range", "(", "num_domains", ")", ":", "\n", "            ", "self", ".", "unshared", ".", "append", "(", "nn", ".", "Linear", "(", "dim_out", ",", "style_dim", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_starganv2.StarGANv2Style.forward": [[278, 295], ["generator_starganv2.StarGANv2Style.shared", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "paddle.to_tensor().astype", "range", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.stack", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "layer", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "numpy.array", "range", "idx[].numpy().astype().tolist", "y[].numpy().astype().tolist", "idx[].numpy().astype", "y[].numpy().astype", "idx[].numpy", "y[].numpy"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "h", "=", "self", ".", "shared", "(", "x", ")", "\n", "h", "=", "paddle", ".", "reshape", "(", "h", ",", "(", "h", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ")", "\n", "out", "=", "[", "]", "\n", "for", "layer", "in", "self", ".", "unshared", ":", "\n", "            ", "out", "+=", "[", "layer", "(", "h", ")", "]", "\n", "", "out", "=", "paddle", ".", "stack", "(", "out", ",", "axis", "=", "1", ")", "# (batch, num_domains, style_dim)", "\n", "idx", "=", "paddle", ".", "to_tensor", "(", "np", ".", "array", "(", "range", "(", "y", ".", "shape", "[", "0", "]", ")", ")", ")", ".", "astype", "(", "'int'", ")", "\n", "s", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "idx", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "s", "+=", "[", "\n", "out", "[", "idx", "[", "i", "]", ".", "numpy", "(", ")", ".", "astype", "(", "np", ".", "int", ")", ".", "tolist", "(", ")", "[", "0", "]", ",", "\n", "y", "[", "i", "]", ".", "numpy", "(", ")", ".", "astype", "(", "np", ".", "int", ")", ".", "tolist", "(", ")", "[", "0", "]", "]", "\n", "]", "\n", "", "s", "=", "paddle", ".", "stack", "(", "s", ")", "\n", "s", "=", "paddle", ".", "reshape", "(", "s", ",", "(", "s", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ")", "\n", "return", "s", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_starganv2.FAN.__init__": [[299, 335], ["paddle.nn.Layer.__init__", "ppgan.modules.wing.CoordConvTh", "paddle.nn.BatchNorm2D", "paddle.nn.BatchNorm2D", "ppgan.modules.wing.ConvBlock", "ppgan.modules.wing.ConvBlock", "ppgan.modules.wing.ConvBlock", "generator_starganv2.FAN.add_sublayer", "generator_starganv2.FAN.add_sublayer", "generator_starganv2.FAN.add_sublayer", "generator_starganv2.FAN.add_sublayer", "generator_starganv2.FAN.add_sublayer", "ppgan.modules.wing.HourGlass", "ppgan.modules.wing.ConvBlock", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "paddle.nn.BatchNorm2D", "paddle.nn.BatchNorm2D", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "generator_starganv2.FAN.load_pretrained_weights", "ppgan.utils.download.get_path_from_url", "generator_starganv2.FAN.load_pretrained_weights"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_starganv2.FAN.load_pretrained_weights", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_starganv2.FAN.load_pretrained_weights"], ["    ", "def", "__init__", "(", "self", ",", "\n", "num_modules", "=", "1", ",", "\n", "end_relu", "=", "False", ",", "\n", "num_landmarks", "=", "98", ",", "\n", "fname_pretrained", "=", "None", ")", ":", "\n", "        ", "super", "(", "FAN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_modules", "=", "num_modules", "\n", "self", ".", "end_relu", "=", "end_relu", "\n", "\n", "# Base part", "\n", "self", ".", "conv1", "=", "CoordConvTh", "(", "256", ",", "\n", "256", ",", "\n", "True", ",", "\n", "False", ",", "\n", "in_channels", "=", "3", ",", "\n", "out_channels", "=", "64", ",", "\n", "kernel_size", "=", "7", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "3", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2D", "(", "64", ")", "\n", "self", ".", "conv2", "=", "ConvBlock", "(", "64", ",", "128", ")", "\n", "self", ".", "conv3", "=", "ConvBlock", "(", "128", ",", "128", ")", "\n", "self", ".", "conv4", "=", "ConvBlock", "(", "128", ",", "256", ")", "\n", "\n", "# Stacking part", "\n", "self", ".", "add_sublayer", "(", "'m0'", ",", "HourGlass", "(", "1", ",", "4", ",", "256", ",", "first_one", "=", "True", ")", ")", "\n", "self", ".", "add_sublayer", "(", "'top_m_0'", ",", "ConvBlock", "(", "256", ",", "256", ")", ")", "\n", "self", ".", "add_sublayer", "(", "'conv_last0'", ",", "nn", ".", "Conv2D", "(", "256", ",", "256", ",", "1", ",", "1", ",", "0", ")", ")", "\n", "self", ".", "add_sublayer", "(", "'bn_end0'", ",", "nn", ".", "BatchNorm2D", "(", "256", ")", ")", "\n", "self", ".", "add_sublayer", "(", "'l0'", ",", "nn", ".", "Conv2D", "(", "256", ",", "num_landmarks", "+", "1", ",", "1", ",", "1", ",", "0", ")", ")", "\n", "\n", "if", "fname_pretrained", "is", "not", "None", ":", "\n", "            ", "self", ".", "load_pretrained_weights", "(", "fname_pretrained", ")", "\n", "", "else", ":", "\n", "            ", "weight_path", "=", "get_path_from_url", "(", "FAN_WEIGHT_URL", ")", "\n", "self", ".", "load_pretrained_weights", "(", "weight_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_starganv2.FAN.load_pretrained_weights": [[336, 350], ["generator_starganv2.FAN.state_dict", "generator_starganv2.FAN.update", "generator_starganv2.FAN.set_state_dict", "open", "pickle.load", "pickle.load", "checkpoint[].items"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["", "", "def", "load_pretrained_weights", "(", "self", ",", "fname", ")", ":", "\n", "        ", "import", "pickle", "\n", "import", "six", "\n", "\n", "with", "open", "(", "fname", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "checkpoint", "=", "pickle", ".", "load", "(", "f", ")", "if", "six", ".", "PY2", "else", "pickle", ".", "load", "(", "\n", "f", ",", "encoding", "=", "'latin1'", ")", "\n", "\n", "", "model_weights", "=", "self", ".", "state_dict", "(", ")", "\n", "model_weights", ".", "update", "(", "{", "\n", "k", ":", "v", "\n", "for", "k", ",", "v", "in", "checkpoint", "[", "'state_dict'", "]", ".", "items", "(", ")", "if", "k", "in", "model_weights", "\n", "}", ")", "\n", "self", ".", "set_state_dict", "(", "model_weights", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_starganv2.FAN.forward": [[351, 374], ["generator_starganv2.FAN.conv1", "paddle.relu", "paddle.relu", "paddle.avg_pool2d", "paddle.avg_pool2d", "generator_starganv2.FAN.conv3", "generator_starganv2.FAN.conv4", "paddle.relu", "paddle.relu", "outputs.append", "boundary_channels.append", "generator_starganv2.FAN.bn1", "generator_starganv2.FAN.conv2", "paddle.relu", "paddle.relu"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", ",", "_", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "x", ")", ",", "True", ")", "\n", "x", "=", "F", ".", "avg_pool2d", "(", "self", ".", "conv2", "(", "x", ")", ",", "2", ",", "stride", "=", "2", ")", "\n", "x", "=", "self", ".", "conv3", "(", "x", ")", "\n", "x", "=", "self", ".", "conv4", "(", "x", ")", "\n", "\n", "outputs", "=", "[", "]", "\n", "boundary_channels", "=", "[", "]", "\n", "tmp_out", "=", "None", "\n", "ll", ",", "boundary_channel", "=", "self", ".", "_sub_layers", "[", "'m0'", "]", "(", "x", ",", "tmp_out", ")", "\n", "ll", "=", "self", ".", "_sub_layers", "[", "'top_m_0'", "]", "(", "ll", ")", "\n", "ll", "=", "F", ".", "relu", "(", "\n", "self", ".", "_sub_layers", "[", "'bn_end0'", "]", "(", "self", ".", "_sub_layers", "[", "'conv_last0'", "]", "(", "ll", ")", ")", ",", "\n", "True", ")", "\n", "\n", "# Predict heatmaps", "\n", "tmp_out", "=", "self", ".", "_sub_layers", "[", "'l0'", "]", "(", "ll", ")", "\n", "if", "self", ".", "end_relu", ":", "\n", "            ", "tmp_out", "=", "F", ".", "relu", "(", "tmp_out", ")", "# HACK: Added relu", "\n", "", "outputs", ".", "append", "(", "tmp_out", ")", "\n", "boundary_channels", ".", "append", "(", "boundary_channel", ")", "\n", "return", "outputs", ",", "boundary_channels", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generator_starganv2.FAN.get_heatmap": [[375, 390], ["paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.interpolate", "paddle.interpolate", "generator_starganv2.FAN.", "paddle.interpolate", "paddle.interpolate", "ppgan.modules.wing.preprocess"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.preprocess"], ["", "@", "paddle", ".", "no_grad", "(", ")", "\n", "def", "get_heatmap", "(", "self", ",", "x", ",", "b_preprocess", "=", "True", ")", ":", "\n", "        ", "''' outputs 0-1 normalized heatmap '''", "\n", "x", "=", "F", ".", "interpolate", "(", "x", ",", "size", "=", "[", "256", ",", "256", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "x_01", "=", "x", "*", "0.5", "+", "0.5", "\n", "outputs", ",", "_", "=", "self", "(", "x_01", ")", "\n", "heatmaps", "=", "outputs", "[", "-", "1", "]", "[", ":", ",", ":", "-", "1", ",", ":", ",", ":", "]", "\n", "scale_factor", "=", "x", ".", "shape", "[", "2", "]", "//", "heatmaps", ".", "shape", "[", "2", "]", "\n", "if", "b_preprocess", ":", "\n", "            ", "heatmaps", "=", "F", ".", "interpolate", "(", "heatmaps", ",", "\n", "scale_factor", "=", "scale_factor", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "True", ")", "\n", "heatmaps", "=", "preprocess", "(", "heatmaps", ")", "\n", "", "return", "heatmaps", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.remaster.TempConv.__init__": [[21, 34], ["paddle.Layer.__init__", "paddle.Conv3D", "paddle.Conv3D", "paddle.Conv3D", "paddle.BatchNorm", "paddle.BatchNorm", "paddle.BatchNorm"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_planes", ",", "\n", "out_planes", ",", "\n", "kernel_size", "=", "(", "1", ",", "3", ",", "3", ")", ",", "\n", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "padding", "=", "(", "0", ",", "1", ",", "1", ")", ")", ":", "\n", "        ", "super", "(", "TempConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Conv3D", "(", "in_planes", ",", "\n", "out_planes", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm", "(", "out_planes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.remaster.TempConv.forward": [[35, 37], ["paddle.elu", "paddle.elu", "paddle.elu", "remaster.TempConv.bn", "remaster.TempConv.conv3d"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "F", ".", "elu", "(", "self", ".", "bn", "(", "self", ".", "conv3d", "(", "x", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.remaster.Upsample.__init__": [[40, 49], ["paddle.Layer.__init__", "paddle.Conv3D", "paddle.Conv3D", "paddle.Conv3D", "paddle.BatchNorm", "paddle.BatchNorm", "paddle.BatchNorm"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "scale_factor", "=", "(", "1", ",", "2", ",", "2", ")", ")", ":", "\n", "        ", "super", "(", "Upsample", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "scale_factor", "=", "scale_factor", "\n", "self", ".", "conv3d", "=", "nn", ".", "Conv3D", "(", "in_planes", ",", "\n", "out_planes", ",", "\n", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "\n", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm", "(", "out_planes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.remaster.Upsample.forward": [[50, 64], ["range", "paddle.elu", "paddle.elu", "paddle.elu", "remaster.Upsample.bn", "remaster.Upsample.conv3d", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out_size", "=", "x", ".", "shape", "[", "2", ":", "]", "\n", "for", "i", "in", "range", "(", "3", ")", ":", "\n", "            ", "out_size", "[", "i", "]", "=", "self", ".", "scale_factor", "[", "i", "]", "*", "out_size", "[", "i", "]", "\n", "\n", "", "return", "F", ".", "elu", "(", "\n", "self", ".", "bn", "(", "\n", "self", ".", "conv3d", "(", "\n", "F", ".", "interpolate", "(", "x", ",", "\n", "size", "=", "out_size", ",", "\n", "mode", "=", "'trilinear'", ",", "\n", "align_corners", "=", "False", ",", "\n", "data_format", "=", "'NCDHW'", ",", "\n", "align_mode", "=", "0", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.remaster.UpsampleConcat.__init__": [[67, 74], ["paddle.Layer.__init__", "remaster.TempConv"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes_up", ",", "in_planes_flat", ",", "out_planes", ")", ":", "\n", "        ", "super", "(", "UpsampleConcat", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv3d", "=", "TempConv", "(", "in_planes_up", "+", "in_planes_flat", ",", "\n", "out_planes", ",", "\n", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "\n", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.remaster.UpsampleConcat.forward": [[75, 89], ["range", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "remaster.UpsampleConcat.conv3d"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x1", ",", "x2", ")", ":", "\n", "        ", "scale_factor", "=", "(", "1", ",", "2", ",", "2", ")", "\n", "out_size", "=", "x1", ".", "shape", "[", "2", ":", "]", "\n", "for", "i", "in", "range", "(", "3", ")", ":", "\n", "            ", "out_size", "[", "i", "]", "=", "scale_factor", "[", "i", "]", "*", "out_size", "[", "i", "]", "\n", "\n", "", "x1", "=", "F", ".", "interpolate", "(", "x1", ",", "\n", "size", "=", "out_size", ",", "\n", "mode", "=", "'trilinear'", ",", "\n", "align_corners", "=", "False", ",", "\n", "data_format", "=", "'NCDHW'", ",", "\n", "align_mode", "=", "0", ")", "\n", "x", "=", "paddle", ".", "concat", "(", "[", "x1", ",", "x2", "]", ",", "axis", "=", "1", ")", "\n", "return", "self", ".", "conv3d", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.remaster.SourceReferenceAttention.__init__": [[101, 116], ["paddle.Layer.__init__", "paddle.Conv3D", "paddle.Conv3D", "paddle.Conv3D", "paddle.Conv3D", "paddle.Conv3D", "paddle.Conv3D", "paddle.Conv3D", "paddle.Conv3D", "paddle.Conv3D", "remaster.SourceReferenceAttention.create_parameter", "paddle.initializer.Constant", "paddle.initializer.Constant", "paddle.initializer.Constant"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "in_planes_s", ",", "in_planes_r", ")", ":", "\n", "        ", "super", "(", "SourceReferenceAttention", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "query_conv", "=", "nn", ".", "Conv3D", "(", "in_channels", "=", "in_planes_s", ",", "\n", "out_channels", "=", "in_planes_s", "//", "8", ",", "\n", "kernel_size", "=", "1", ")", "\n", "self", ".", "key_conv", "=", "nn", ".", "Conv3D", "(", "in_channels", "=", "in_planes_r", ",", "\n", "out_channels", "=", "in_planes_r", "//", "8", ",", "\n", "kernel_size", "=", "1", ")", "\n", "self", ".", "value_conv", "=", "nn", ".", "Conv3D", "(", "in_channels", "=", "in_planes_r", ",", "\n", "out_channels", "=", "in_planes_r", ",", "\n", "kernel_size", "=", "1", ")", "\n", "self", ".", "gamma", "=", "self", ".", "create_parameter", "(", "\n", "shape", "=", "[", "1", "]", ",", "\n", "dtype", "=", "self", ".", "query_conv", ".", "weight", ".", "dtype", ",", "\n", "default_initializer", "=", "nn", ".", "initializer", ".", "Constant", "(", "0.0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.remaster.SourceReferenceAttention.forward": [[117, 136], ["paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.softmax", "paddle.softmax", "paddle.softmax", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.bmm", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "remaster.SourceReferenceAttention.query_conv", "remaster.SourceReferenceAttention.key_conv", "remaster.SourceReferenceAttention.value_conv", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "source", ",", "reference", ")", ":", "\n", "        ", "s_batchsize", ",", "sC", ",", "sT", ",", "sH", ",", "sW", "=", "source", ".", "shape", "\n", "r_batchsize", ",", "rC", ",", "rT", ",", "rH", ",", "rW", "=", "reference", ".", "shape", "\n", "\n", "proj_query", "=", "paddle", ".", "reshape", "(", "self", ".", "query_conv", "(", "source", ")", ",", "\n", "[", "s_batchsize", ",", "-", "1", ",", "sT", "*", "sH", "*", "sW", "]", ")", "\n", "proj_query", "=", "paddle", ".", "transpose", "(", "proj_query", ",", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "proj_key", "=", "paddle", ".", "reshape", "(", "self", ".", "key_conv", "(", "reference", ")", ",", "\n", "[", "r_batchsize", ",", "-", "1", ",", "rT", "*", "rW", "*", "rH", "]", ")", "\n", "energy", "=", "paddle", ".", "bmm", "(", "proj_query", ",", "proj_key", ")", "\n", "attention", "=", "F", ".", "softmax", "(", "energy", ")", "\n", "\n", "proj_value", "=", "paddle", ".", "reshape", "(", "self", ".", "value_conv", "(", "reference", ")", ",", "\n", "[", "r_batchsize", ",", "-", "1", ",", "rT", "*", "rH", "*", "rW", "]", ")", "\n", "\n", "out", "=", "paddle", ".", "bmm", "(", "proj_value", ",", "paddle", ".", "transpose", "(", "attention", ",", "[", "0", ",", "2", ",", "1", "]", ")", ")", "\n", "out", "=", "paddle", ".", "reshape", "(", "out", ",", "[", "s_batchsize", ",", "sC", ",", "sT", ",", "sH", ",", "sW", "]", ")", "\n", "out", "=", "self", ".", "gamma", "*", "out", "+", "source", "\n", "return", "out", ",", "attention", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.remaster.NetworkR.__init__": [[139, 169], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Pad3D", "paddle.Pad3D", "paddle.Pad3D", "remaster.TempConv", "remaster.TempConv", "remaster.TempConv", "remaster.TempConv", "remaster.TempConv", "remaster.TempConv", "remaster.TempConv", "remaster.TempConv", "remaster.Upsample", "remaster.TempConv", "remaster.TempConv", "remaster.Upsample", "paddle.Conv3D", "paddle.Conv3D", "paddle.Conv3D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "NetworkR", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "layers", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Pad3D", "(", "(", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ")", ",", "mode", "=", "'replicate'", ")", ",", "\n", "TempConv", "(", "1", ",", "\n", "64", ",", "\n", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "\n", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "\n", "padding", "=", "(", "0", ",", "0", ",", "0", ")", ")", ",", "\n", "TempConv", "(", "64", ",", "128", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", ",", "\n", "TempConv", "(", "128", ",", "128", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", ",", "\n", "TempConv", "(", "128", ",", "\n", "256", ",", "\n", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "\n", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "\n", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", ",", "\n", "TempConv", "(", "256", ",", "256", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", ",", "\n", "TempConv", "(", "256", ",", "256", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", ",", "\n", "TempConv", "(", "256", ",", "256", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", ",", "\n", "TempConv", "(", "256", ",", "256", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", ",", "\n", "Upsample", "(", "256", ",", "128", ")", ",", "\n", "TempConv", "(", "128", ",", "64", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", ",", "\n", "TempConv", "(", "64", ",", "64", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", ",", "\n", "Upsample", "(", "64", ",", "16", ")", ",", "\n", "nn", ".", "Conv3D", "(", "16", ",", "\n", "1", ",", "\n", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "\n", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.remaster.NetworkR.forward": [[170, 173], ["paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.clip", "paddle.tanh", "paddle.tanh", "paddle.tanh", "remaster.NetworkR.layers"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "paddle", ".", "clip", "(", "\n", "(", "x", "+", "F", ".", "tanh", "(", "self", ".", "layers", "(", "(", "(", "x", "*", "1", ")", ".", "detach", "(", ")", ")", "-", "0.4462414", ")", ")", ")", ",", "0.0", ",", "1.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.remaster.NetworkC.__init__": [[176, 240], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "remaster.SourceReferenceAttention", "remaster.SourceReferenceAttention", "remaster.SourceReferenceAttention", "remaster.TempConv", "remaster.UpsampleConcat", "remaster.SourceReferenceAttention", "remaster.TempConv", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Pad3D", "paddle.Pad3D", "paddle.Pad3D", "remaster.TempConv", "remaster.TempConv", "remaster.TempConv", "remaster.TempConv", "remaster.TempConv", "remaster.TempConv", "remaster.TempConv", "remaster.TempConv", "remaster.TempConv", "remaster.TempConv", "remaster.TempConv", "remaster.TempConv", "remaster.TempConv", "remaster.Upsample", "remaster.TempConv", "remaster.Upsample", "remaster.TempConv", "remaster.Upsample", "paddle.Conv3D", "paddle.Conv3D", "paddle.Conv3D", "remaster.TempConv", "remaster.TempConv", "remaster.TempConv", "remaster.TempConv", "remaster.TempConv", "remaster.TempConv", "remaster.TempConv", "remaster.TempConv", "remaster.TempConv", "remaster.TempConv", "remaster.TempConv", "remaster.TempConv"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "NetworkC", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "down1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Pad3D", "(", "(", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ")", ",", "mode", "=", "'replicate'", ")", ",", "\n", "TempConv", "(", "1", ",", "64", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "padding", "=", "(", "0", ",", "0", ",", "0", ")", ")", ",", "\n", "TempConv", "(", "64", ",", "128", ")", ",", "TempConv", "(", "128", ",", "128", ")", ",", "\n", "TempConv", "(", "128", ",", "256", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ")", ",", "TempConv", "(", "256", ",", "256", ")", ",", "\n", "TempConv", "(", "256", ",", "256", ")", ",", "TempConv", "(", "256", ",", "512", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ")", ",", "\n", "TempConv", "(", "512", ",", "512", ")", ",", "TempConv", "(", "512", ",", "512", ")", ")", "\n", "self", ".", "flat", "=", "nn", ".", "Sequential", "(", "TempConv", "(", "512", ",", "512", ")", ",", "TempConv", "(", "512", ",", "512", ")", ")", "\n", "self", ".", "down2", "=", "nn", ".", "Sequential", "(", "\n", "TempConv", "(", "512", ",", "512", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ")", ",", "\n", "TempConv", "(", "512", ",", "512", ")", ",", "\n", ")", "\n", "self", ".", "stattn1", "=", "SourceReferenceAttention", "(", "\n", "512", ",", "512", ")", "# Source-Reference Attention", "\n", "self", ".", "stattn2", "=", "SourceReferenceAttention", "(", "\n", "512", ",", "512", ")", "# Source-Reference Attention", "\n", "self", ".", "selfattn1", "=", "SourceReferenceAttention", "(", "512", ",", "512", ")", "# Self Attention", "\n", "self", ".", "conv1", "=", "TempConv", "(", "512", ",", "512", ")", "\n", "self", ".", "up1", "=", "UpsampleConcat", "(", "512", ",", "512", ",", "512", ")", "# 1/8", "\n", "self", ".", "selfattn2", "=", "SourceReferenceAttention", "(", "512", ",", "512", ")", "# Self Attention", "\n", "self", ".", "conv2", "=", "TempConv", "(", "512", ",", "\n", "256", ",", "\n", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "\n", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "up2", "=", "nn", ".", "Sequential", "(", "\n", "Upsample", "(", "256", ",", "128", ")", ",", "# 1/4", "\n", "TempConv", "(", "128", ",", "\n", "64", ",", "\n", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "\n", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", ")", "\n", "self", ".", "up3", "=", "nn", ".", "Sequential", "(", "\n", "Upsample", "(", "64", ",", "32", ")", ",", "# 1/2", "\n", "TempConv", "(", "32", ",", "\n", "16", ",", "\n", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "\n", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", ")", "\n", "self", ".", "up4", "=", "nn", ".", "Sequential", "(", "\n", "Upsample", "(", "16", ",", "8", ")", ",", "# 1/1", "\n", "nn", ".", "Conv3D", "(", "8", ",", "\n", "2", ",", "\n", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "\n", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", ")", "\n", "self", ".", "reffeatnet1", "=", "nn", ".", "Sequential", "(", "\n", "TempConv", "(", "3", ",", "64", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ")", ",", "\n", "TempConv", "(", "64", ",", "128", ")", ",", "\n", "TempConv", "(", "128", ",", "128", ")", ",", "\n", "TempConv", "(", "128", ",", "256", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ")", ",", "\n", "TempConv", "(", "256", ",", "256", ")", ",", "\n", "TempConv", "(", "256", ",", "256", ")", ",", "\n", "TempConv", "(", "256", ",", "512", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ")", ",", "\n", "TempConv", "(", "512", ",", "512", ")", ",", "\n", "TempConv", "(", "512", ",", "512", ")", ",", "\n", ")", "\n", "self", ".", "reffeatnet2", "=", "nn", ".", "Sequential", "(", "\n", "TempConv", "(", "512", ",", "512", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ")", ",", "\n", "TempConv", "(", "512", ",", "512", ")", ",", "\n", "TempConv", "(", "512", ",", "512", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.remaster.NetworkC.forward": [[242, 265], ["remaster.NetworkC.down1", "remaster.NetworkC.flat", "remaster.NetworkC.down2", "remaster.NetworkC.conv1", "remaster.NetworkC.selfattn1", "remaster.NetworkC.up1", "remaster.NetworkC.selfattn2", "remaster.NetworkC.conv2", "remaster.NetworkC.up2", "remaster.NetworkC.up3", "remaster.NetworkC.up4", "paddle.sigmoid", "paddle.sigmoid", "paddle.sigmoid", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "paddle.transpose", "remaster.NetworkC.reffeatnet1", "remaster.NetworkC.stattn1", "remaster.NetworkC.reffeatnet2", "remaster.NetworkC.stattn2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "x_refs", "=", "None", ")", ":", "\n", "        ", "x1", "=", "self", ".", "down1", "(", "x", "-", "0.4462414", ")", "\n", "if", "x_refs", "is", "not", "None", ":", "\n", "            ", "x_refs", "=", "paddle", ".", "transpose", "(", "\n", "x_refs", ",", "[", "0", ",", "2", ",", "1", ",", "3", ",", "4", "]", ")", "# [B,T,C,H,W] --> [B,C,T,H,W]", "\n", "reffeat", "=", "self", ".", "reffeatnet1", "(", "x_refs", "-", "0.48", ")", "\n", "x1", ",", "_", "=", "self", ".", "stattn1", "(", "x1", ",", "reffeat", ")", "\n", "\n", "", "x2", "=", "self", ".", "flat", "(", "x1", ")", "\n", "out", "=", "self", ".", "down2", "(", "x1", ")", "\n", "if", "x_refs", "is", "not", "None", ":", "\n", "            ", "reffeat2", "=", "self", ".", "reffeatnet2", "(", "reffeat", ")", "\n", "out", ",", "_", "=", "self", ".", "stattn2", "(", "out", ",", "reffeat2", ")", "\n", "", "out", "=", "self", ".", "conv1", "(", "out", ")", "\n", "out", ",", "_", "=", "self", ".", "selfattn1", "(", "out", ",", "out", ")", "\n", "out", "=", "self", ".", "up1", "(", "out", ",", "x2", ")", "\n", "out", ",", "_", "=", "self", ".", "selfattn2", "(", "out", ",", "out", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "up2", "(", "out", ")", "\n", "out", "=", "self", ".", "up3", "(", "out", ")", "\n", "out", "=", "self", ".", "up4", "(", "out", ")", "\n", "\n", "return", "F", ".", "sigmoid", "(", "out", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.prenet.PReNet.__init__": [[64, 89], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "prenet.convWithBias", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "prenet.convWithBias", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "prenet.convWithBias", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "prenet.convWithBias", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "prenet.convWithBias", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "prenet.convWithBias", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "prenet.convWithBias", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "prenet.convWithBias", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "prenet.convWithBias", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "prenet.convWithBias", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "prenet.convWithBias", "paddle.ReLU", "paddle.ReLU", "paddle.ReLU", "prenet.convWithBias", "paddle.Sigmoid", "paddle.Sigmoid", "paddle.Sigmoid", "prenet.convWithBias", "paddle.Sigmoid", "paddle.Sigmoid", "paddle.Sigmoid", "prenet.convWithBias", "paddle.Tanh", "paddle.Tanh", "paddle.Tanh", "prenet.convWithBias", "paddle.Sigmoid", "paddle.Sigmoid", "paddle.Sigmoid", "prenet.convWithBias"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.prenet.convWithBias", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.prenet.convWithBias", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.prenet.convWithBias", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.prenet.convWithBias", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.prenet.convWithBias", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.prenet.convWithBias", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.prenet.convWithBias", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.prenet.convWithBias", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.prenet.convWithBias", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.prenet.convWithBias", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.prenet.convWithBias", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.prenet.convWithBias", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.prenet.convWithBias", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.prenet.convWithBias", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.prenet.convWithBias", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.prenet.convWithBias"], ["def", "__init__", "(", "self", ",", "recurrent_iter", "=", "6", ",", "use_GPU", "=", "True", ")", ":", "\n", "        ", "super", "(", "PReNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "iteration", "=", "recurrent_iter", "\n", "self", ".", "use_GPU", "=", "use_GPU", "\n", "\n", "self", ".", "conv0", "=", "nn", ".", "Sequential", "(", "convWithBias", "(", "6", ",", "32", ",", "3", ",", "1", ",", "1", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "res_conv1", "=", "nn", ".", "Sequential", "(", "convWithBias", "(", "32", ",", "32", ",", "3", ",", "1", ",", "1", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "convWithBias", "(", "32", ",", "32", ",", "3", ",", "1", ",", "1", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "res_conv2", "=", "nn", ".", "Sequential", "(", "convWithBias", "(", "32", ",", "32", ",", "3", ",", "1", ",", "1", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "convWithBias", "(", "32", ",", "32", ",", "3", ",", "1", ",", "1", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "res_conv3", "=", "nn", ".", "Sequential", "(", "convWithBias", "(", "32", ",", "32", ",", "3", ",", "1", ",", "1", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "convWithBias", "(", "32", ",", "32", ",", "3", ",", "1", ",", "1", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "res_conv4", "=", "nn", ".", "Sequential", "(", "convWithBias", "(", "32", ",", "32", ",", "3", ",", "1", ",", "1", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "convWithBias", "(", "32", ",", "32", ",", "3", ",", "1", ",", "1", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "res_conv5", "=", "nn", ".", "Sequential", "(", "convWithBias", "(", "32", ",", "32", ",", "3", ",", "1", ",", "1", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "convWithBias", "(", "32", ",", "32", ",", "3", ",", "1", ",", "1", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "conv_i", "=", "nn", ".", "Sequential", "(", "convWithBias", "(", "32", "+", "32", ",", "32", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "self", ".", "conv_f", "=", "nn", ".", "Sequential", "(", "convWithBias", "(", "32", "+", "32", ",", "32", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "self", ".", "conv_g", "=", "nn", ".", "Sequential", "(", "convWithBias", "(", "32", "+", "32", ",", "32", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "self", ".", "conv_o", "=", "nn", ".", "Sequential", "(", "convWithBias", "(", "32", "+", "32", ",", "32", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "convWithBias", "(", "32", ",", "3", ",", "3", ",", "1", ",", "1", ")", ",", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.prenet.PReNet.forward": [[90, 131], ["paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "range", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.zeros", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "prenet.PReNet.conv0", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "prenet.PReNet.conv_i", "prenet.PReNet.conv_f", "prenet.PReNet.conv_g", "prenet.PReNet.conv_o", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "prenet.PReNet.conv", "x_list.append", "paddle.tanh", "paddle.tanh", "paddle.tanh", "paddle.tanh", "paddle.tanh", "paddle.tanh", "paddle.tanh", "paddle.tanh", "paddle.tanh", "prenet.PReNet.res_conv1", "prenet.PReNet.res_conv2", "prenet.PReNet.res_conv3", "prenet.PReNet.res_conv4", "prenet.PReNet.res_conv5"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "batch_size", ",", "row", ",", "col", "=", "input", ".", "shape", "[", "0", "]", ",", "input", ".", "shape", "[", "2", "]", ",", "input", ".", "shape", "[", "3", "]", "\n", "\n", "x", "=", "input", "\n", "\n", "h", "=", "paddle", ".", "to_tensor", "(", "paddle", ".", "zeros", "(", "shape", "=", "(", "batch_size", ",", "32", ",", "row", ",", "col", ")", ",", "\n", "dtype", "=", "'float32'", ")", ",", "\n", "stop_gradient", "=", "False", ")", "\n", "c", "=", "paddle", ".", "to_tensor", "(", "paddle", ".", "zeros", "(", "shape", "=", "(", "batch_size", ",", "32", ",", "row", ",", "col", ")", ",", "\n", "dtype", "=", "'float32'", ")", ",", "\n", "stop_gradient", "=", "False", ")", "\n", "\n", "x_list", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "self", ".", "iteration", ")", ":", "\n", "            ", "x", "=", "paddle", ".", "concat", "(", "(", "input", ",", "x", ")", ",", "1", ")", "\n", "x", "=", "self", ".", "conv0", "(", "x", ")", "\n", "\n", "x", "=", "paddle", ".", "concat", "(", "(", "x", ",", "h", ")", ",", "1", ")", "\n", "i", "=", "self", ".", "conv_i", "(", "x", ")", "\n", "f", "=", "self", ".", "conv_f", "(", "x", ")", "\n", "g", "=", "self", ".", "conv_g", "(", "x", ")", "\n", "o", "=", "self", ".", "conv_o", "(", "x", ")", "\n", "c", "=", "f", "*", "c", "+", "i", "*", "g", "\n", "h", "=", "o", "*", "paddle", ".", "tanh", "(", "c", ")", "\n", "\n", "x", "=", "h", "\n", "resx", "=", "x", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "res_conv1", "(", "x", ")", "+", "resx", ")", "\n", "resx", "=", "x", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "res_conv2", "(", "x", ")", "+", "resx", ")", "\n", "resx", "=", "x", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "res_conv3", "(", "x", ")", "+", "resx", ")", "\n", "resx", "=", "x", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "res_conv4", "(", "x", ")", "+", "resx", ")", "\n", "resx", "=", "x", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "res_conv5", "(", "x", ")", "+", "resx", ")", "\n", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "\n", "x", "=", "x", "+", "input", "\n", "x_list", ".", "append", "(", "x", ")", "\n", "", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.prenet.convWithBias": [[27, 52], ["isinstance", "paddle.framework.ParamAttr", "paddle.framework.ParamAttr", "paddle.framework.ParamAttr", "paddle.framework.ParamAttr", "paddle.framework.ParamAttr", "paddle.framework.ParamAttr", "paddle.Conv2D", "math.sqrt", "paddle.initializer.Uniform", "paddle.initializer.KaimingUniform"], "function", ["None"], ["def", "convWithBias", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "padding", ")", ":", "\n", "    ", "\"\"\" Obtain a 2d convolution layer with bias and initialized by KaimingUniform\n        in_channels (int): Number of input channels.\n        out_channels (int): Number of output channels.\n        kernel_size (int): Convolution kernel size\n        stride (int): Convolution stride\n        padding (int|tuple): Convolution padding.\n    \"\"\"", "\n", "if", "isinstance", "(", "kernel_size", ",", "int", ")", ":", "\n", "        ", "fan_in", "=", "kernel_size", "*", "kernel_size", "*", "in_channels", "\n", "", "else", ":", "\n", "        ", "fan_in", "=", "kernel_size", "[", "0", "]", "*", "kernel_size", "[", "1", "]", "*", "in_channels", "\n", "", "bound", "=", "1", "/", "math", ".", "sqrt", "(", "fan_in", ")", "\n", "bias_attr", "=", "paddle", ".", "framework", ".", "ParamAttr", "(", "\n", "initializer", "=", "nn", ".", "initializer", ".", "Uniform", "(", "-", "bound", ",", "bound", ")", ")", "\n", "weight_attr", "=", "paddle", ".", "framework", ".", "ParamAttr", "(", "\n", "initializer", "=", "nn", ".", "initializer", ".", "KaimingUniform", "(", "fan_in", "=", "6", "*", "fan_in", ")", ")", "\n", "conv", "=", "nn", ".", "Conv2D", "(", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "stride", ",", "\n", "padding", ",", "\n", "weight_attr", "=", "weight_attr", ",", "\n", "bias_attr", "=", "bias_attr", ")", "\n", "return", "conv", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.perceptual_loss.PerceptualVGG.__init__": [[28, 68], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "perceptual_loss.PerceptualVGG.vgg_layers.parameters", "getattr", "ppgan.utils.download.get_path_from_url", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "_vgg.load_dict", "print", "max", "len", "perceptual_loss.PerceptualVGG.register_buffer", "perceptual_loss.PerceptualVGG.register_buffer", "map", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "list", "_vgg.features.children", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["def", "__init__", "(", "\n", "self", ",", "\n", "layer_name_list", ",", "\n", "vgg_type", "=", "'vgg19'", ",", "\n", "use_input_norm", "=", "True", ",", "\n", "pretrained_url", "=", "'https://paddlegan.bj.bcebos.com/models/vgg19.pdparams'", "\n", ")", ":", "\n", "        ", "super", "(", "PerceptualVGG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "layer_name_list", "=", "layer_name_list", "\n", "self", ".", "use_input_norm", "=", "use_input_norm", "\n", "\n", "# get vgg model and load pretrained vgg weight", "\n", "_vgg", "=", "getattr", "(", "vgg", ",", "vgg_type", ")", "(", ")", "\n", "\n", "if", "pretrained_url", ":", "\n", "            ", "weight_path", "=", "get_path_from_url", "(", "pretrained_url", ")", "\n", "state_dict", "=", "paddle", ".", "load", "(", "weight_path", ")", "\n", "_vgg", ".", "load_dict", "(", "state_dict", ")", "\n", "print", "(", "'PerceptualVGG loaded pretrained weight.'", ")", "\n", "\n", "", "num_layers", "=", "max", "(", "map", "(", "int", ",", "layer_name_list", ")", ")", "+", "1", "\n", "assert", "len", "(", "_vgg", ".", "features", ")", ">=", "num_layers", "\n", "\n", "# only borrow layers that will be used from _vgg to avoid unused params", "\n", "self", ".", "vgg_layers", "=", "nn", ".", "Sequential", "(", "\n", "*", "list", "(", "_vgg", ".", "features", ".", "children", "(", ")", ")", "[", ":", "num_layers", "]", ")", "\n", "\n", "if", "self", ".", "use_input_norm", ":", "\n", "# the mean is for image with range [0, 1]", "\n", "            ", "self", ".", "register_buffer", "(", "\n", "'mean'", ",", "\n", "paddle", ".", "to_tensor", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ")", ".", "reshape", "(", "[", "1", ",", "3", ",", "1", ",", "1", "]", ")", ")", "\n", "# the std is for image with range [-1, 1]", "\n", "self", ".", "register_buffer", "(", "\n", "'std'", ",", "\n", "paddle", ".", "to_tensor", "(", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ".", "reshape", "(", "[", "1", ",", "3", ",", "1", ",", "1", "]", ")", ")", "\n", "\n", "", "for", "v", "in", "self", ".", "vgg_layers", ".", "parameters", "(", ")", ":", "\n", "            ", "v", ".", "trainable", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.perceptual_loss.PerceptualVGG.forward": [[69, 88], ["perceptual_loss.PerceptualVGG.vgg_layers.named_children", "module", "module.clone"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"Forward function.\n\n        Args:\n            x (Tensor): Input tensor with shape (n, c, h, w).\n\n        Returns:\n            Tensor: Forward results.\n        \"\"\"", "\n", "\n", "if", "self", ".", "use_input_norm", ":", "\n", "            ", "x", "=", "(", "x", "-", "self", ".", "mean", ")", "/", "self", ".", "std", "\n", "", "output", "=", "{", "}", "\n", "\n", "for", "name", ",", "module", "in", "self", ".", "vgg_layers", ".", "named_children", "(", ")", ":", "\n", "            ", "x", "=", "module", "(", "x", ")", "\n", "if", "name", "in", "self", ".", "layer_name_list", ":", "\n", "                ", "output", "[", "name", "]", "=", "x", ".", "clone", "(", ")", "\n", "", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.perceptual_loss.PerceptualLoss.__init__": [[116, 145], ["paddle.Layer.__init__", "perceptual_loss.PerceptualVGG", "paddle.L1Loss", "paddle.L1Loss", "paddle.L1Loss", "NotImplementedError", "list", "layer_weights.keys"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "\n", "self", ",", "\n", "layer_weights", ",", "\n", "vgg_type", "=", "'vgg19'", ",", "\n", "use_input_norm", "=", "True", ",", "\n", "perceptual_weight", "=", "1.0", ",", "\n", "style_weight", "=", "1.0", ",", "\n", "norm_img", "=", "True", ",", "\n", "pretrained", "=", "'https://paddlegan.bj.bcebos.com/models/vgg19.pdparams'", ",", "\n", "criterion", "=", "'l1'", ")", ":", "\n", "        ", "super", "(", "PerceptualLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# when loss weight less than zero return None", "\n", "if", "perceptual_weight", "<=", "0", "and", "style_weight", "<=", "0", ":", "\n", "            ", "return", "None", "\n", "\n", "", "self", ".", "norm_img", "=", "norm_img", "\n", "self", ".", "perceptual_weight", "=", "perceptual_weight", "\n", "self", ".", "style_weight", "=", "style_weight", "\n", "self", ".", "layer_weights", "=", "layer_weights", "\n", "self", ".", "vgg", "=", "PerceptualVGG", "(", "layer_name_list", "=", "list", "(", "layer_weights", ".", "keys", "(", ")", ")", ",", "\n", "vgg_type", "=", "vgg_type", ",", "\n", "use_input_norm", "=", "use_input_norm", ",", "\n", "pretrained_url", "=", "pretrained", ")", "\n", "\n", "if", "criterion", "==", "'l1'", ":", "\n", "            ", "self", ".", "criterion", "=", "nn", ".", "L1Loss", "(", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\n", "f'{criterion} criterion has not been supported in'", "\n", "' this version.'", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.perceptual_loss.PerceptualLoss.forward": [[147, 187], ["perceptual_loss.PerceptualLoss.vgg", "perceptual_loss.PerceptualLoss.vgg", "gt.detach", "perceptual_loss.PerceptualLoss.keys", "perceptual_loss.PerceptualLoss.keys", "perceptual_loss.PerceptualLoss.criterion", "perceptual_loss.PerceptualLoss.criterion", "perceptual_loss.PerceptualLoss._gram_mat", "perceptual_loss.PerceptualLoss._gram_mat"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.perceptual_loss.PerceptualLoss._gram_mat", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.perceptual_loss.PerceptualLoss._gram_mat"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "gt", ")", ":", "\n", "        ", "\"\"\"Forward function.\n\n        Args:\n            x (Tensor): Input tensor with shape (n, c, h, w).\n            gt (Tensor): Ground-truth tensor with shape (n, c, h, w).\n\n        Returns:\n            Tensor: Forward results.\n        \"\"\"", "\n", "\n", "if", "self", ".", "norm_img", ":", "\n", "            ", "x", "=", "(", "x", "+", "1.", ")", "*", "0.5", "\n", "gt", "=", "(", "gt", "+", "1.", ")", "*", "0.5", "\n", "# extract vgg features", "\n", "", "x_features", "=", "self", ".", "vgg", "(", "x", ")", "\n", "gt_features", "=", "self", ".", "vgg", "(", "gt", ".", "detach", "(", ")", ")", "\n", "\n", "# calculate preceptual loss", "\n", "if", "self", ".", "perceptual_weight", ">", "0", ":", "\n", "            ", "percep_loss", "=", "0", "\n", "for", "k", "in", "x_features", ".", "keys", "(", ")", ":", "\n", "                ", "percep_loss", "+=", "self", ".", "criterion", "(", "\n", "x_features", "[", "k", "]", ",", "gt_features", "[", "k", "]", ")", "*", "self", ".", "layer_weights", "[", "k", "]", "\n", "", "percep_loss", "*=", "self", ".", "perceptual_weight", "\n", "", "else", ":", "\n", "            ", "percep_loss", "=", "None", "\n", "\n", "# calculate style loss", "\n", "", "if", "self", ".", "style_weight", ">", "0", ":", "\n", "            ", "style_loss", "=", "0", "\n", "for", "k", "in", "x_features", ".", "keys", "(", ")", ":", "\n", "                ", "style_loss", "+=", "self", ".", "criterion", "(", "self", ".", "_gram_mat", "(", "\n", "x_features", "[", "k", "]", ")", ",", "self", ".", "_gram_mat", "(", "\n", "gt_features", "[", "k", "]", ")", ")", "*", "self", ".", "layer_weights", "[", "k", "]", "\n", "", "style_loss", "*=", "self", ".", "style_weight", "\n", "", "else", ":", "\n", "            ", "style_loss", "=", "None", "\n", "\n", "", "return", "percep_loss", ",", "style_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.perceptual_loss.PerceptualLoss._gram_mat": [[188, 202], ["x.reshape", "x.reshape.transpose", "x.reshape.bmm"], "methods", ["None"], ["", "def", "_gram_mat", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"Calculate Gram matrix.\n\n        Args:\n            x (paddle.Tensor): Tensor with shape of (n, c, h, w).\n\n        Returns:\n            paddle.Tensor: Gram matrix.\n        \"\"\"", "\n", "(", "n", ",", "c", ",", "h", ",", "w", ")", "=", "x", ".", "shape", "\n", "features", "=", "x", ".", "reshape", "(", "[", "n", ",", "c", ",", "w", "*", "h", "]", ")", "\n", "features_t", "=", "features", ".", "transpose", "(", "[", "1", ",", "2", "]", ")", "\n", "gram", "=", "features", ".", "bmm", "(", "features_t", ")", "/", "(", "c", "*", "h", "*", "w", ")", "\n", "return", "gram", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.pixel_loss.L1Loss.__init__": [[34, 41], ["paddle.L1Loss", "paddle.L1Loss", "paddle.L1Loss"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "reduction", "=", "'mean'", ",", "loss_weight", "=", "1.0", ")", ":", "\n", "# when loss weight less than zero return None", "\n", "        ", "if", "loss_weight", "<=", "0", ":", "\n", "            ", "return", "None", "\n", "", "self", ".", "_l1_loss", "=", "nn", ".", "L1Loss", "(", "reduction", ")", "\n", "self", ".", "loss_weight", "=", "loss_weight", "\n", "self", ".", "reduction", "=", "reduction", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.pixel_loss.L1Loss.__call__": [[42, 52], ["pixel_loss.L1Loss._l1_loss"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "pred", ",", "target", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"Forward Function.\n\n        Args:\n            pred (Tensor): of shape (N, C, H, W). Predicted tensor.\n            target (Tensor): of shape (N, C, H, W). Ground truth tensor.\n            weight (Tensor, optional): of shape (N, C, H, W). Element-wise\n                weights. Default: None.\n        \"\"\"", "\n", "return", "self", ".", "loss_weight", "*", "self", ".", "_l1_loss", "(", "pred", ",", "target", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.pixel_loss.CharbonnierLoss.__init__": [[62, 65], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "eps", "=", "1e-12", ",", "reduction", "=", "'sum'", ")", ":", "\n", "        ", "self", ".", "eps", "=", "eps", "\n", "self", ".", "reduction", "=", "reduction", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.pixel_loss.CharbonnierLoss.__call__": [[66, 81], ["paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sum", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "paddle.mean", "NotImplementedError", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "pred", ",", "target", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"Forward Function.\n\n        Args:\n            pred (Tensor): of shape (N, C, H, W). Predicted tensor.\n            target (Tensor): of shape (N, C, H, W). Ground truth tensor.\n        \"\"\"", "\n", "if", "self", ".", "reduction", "==", "'sum'", ":", "\n", "            ", "out", "=", "paddle", ".", "sum", "(", "paddle", ".", "sqrt", "(", "(", "pred", "-", "target", ")", "**", "2", "+", "self", ".", "eps", ")", ")", "\n", "", "elif", "self", ".", "reduction", "==", "'mean'", ":", "\n", "            ", "out", "=", "paddle", ".", "mean", "(", "paddle", ".", "sqrt", "(", "(", "pred", "-", "target", ")", "**", "2", "+", "self", ".", "eps", ")", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", "'CharbonnierLoss %s not implemented'", "%", "\n", "self", ".", "reduction", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.pixel_loss.MSELoss.__init__": [[93, 100], ["paddle.MSELoss", "paddle.MSELoss", "paddle.MSELoss"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "reduction", "=", "'mean'", ",", "loss_weight", "=", "1.0", ")", ":", "\n", "# when loss weight less than zero return None", "\n", "        ", "if", "loss_weight", "<=", "0", ":", "\n", "            ", "return", "None", "\n", "", "self", ".", "_l2_loss", "=", "nn", ".", "MSELoss", "(", "reduction", ")", "\n", "self", ".", "loss_weight", "=", "loss_weight", "\n", "self", ".", "reduction", "=", "reduction", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.pixel_loss.MSELoss.__call__": [[101, 111], ["pixel_loss.MSELoss._l2_loss"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "pred", ",", "target", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"Forward Function.\n\n        Args:\n            pred (Tensor): of shape (N, C, H, W). Predicted tensor.\n            target (Tensor): of shape (N, C, H, W). Ground truth tensor.\n            weight (Tensor, optional): of shape (N, C, H, W). Element-wise\n                weights. Default: None.\n        \"\"\"", "\n", "return", "self", ".", "loss_weight", "*", "self", ".", "_l2_loss", "(", "pred", ",", "target", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.pixel_loss.BCEWithLogitsLoss.__init__": [[122, 129], ["paddle.BCEWithLogitsLoss", "paddle.BCEWithLogitsLoss", "paddle.BCEWithLogitsLoss"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "reduction", "=", "'mean'", ",", "loss_weight", "=", "1.0", ")", ":", "\n", "# when loss weight less than zero return None", "\n", "        ", "if", "loss_weight", "<=", "0", ":", "\n", "            ", "return", "None", "\n", "", "self", ".", "_bce_loss", "=", "nn", ".", "BCEWithLogitsLoss", "(", "reduction", "=", "reduction", ")", "\n", "self", ".", "loss_weight", "=", "loss_weight", "\n", "self", ".", "reduction", "=", "reduction", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.pixel_loss.BCEWithLogitsLoss.__call__": [[130, 140], ["pixel_loss.BCEWithLogitsLoss._bce_loss"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "pred", ",", "target", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"Forward Function.\n\n        Args:\n            pred (Tensor): of shape (N, C, H, W). Predicted tensor.\n            target (Tensor): of shape (N, C, H, W). Ground truth tensor.\n            weight (Tensor, optional): of shape (N, C, H, W). Element-wise\n                weights. Default: None.\n        \"\"\"", "\n", "return", "self", ".", "loss_weight", "*", "self", ".", "_bce_loss", "(", "pred", ",", "target", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.pixel_loss.CalcStyleEmdLoss.__init__": [[164, 166], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "CalcStyleEmdLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.pixel_loss.CalcStyleEmdLoss.__call__": [[167, 180], ["pixel_loss.calc_emd_loss", "calc_emd_loss.min", "calc_emd_loss.min", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.max", "paddle.max", "paddle.max", "paddle.max", "paddle.max", "paddle.max", "paddle.max", "paddle.max", "paddle.max", "calc_emd_loss.min.mean", "calc_emd_loss.min.mean"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.pixel_loss.calc_emd_loss"], ["", "def", "__call__", "(", "self", ",", "pred", ",", "target", ")", ":", "\n", "        ", "\"\"\"Forward Function.\n\n        Args:\n            pred (Tensor): of shape (N, C, H, W). Predicted tensor.\n            target (Tensor): of shape (N, C, H, W). Ground truth tensor.\n        \"\"\"", "\n", "CX_M", "=", "calc_emd_loss", "(", "pred", ",", "target", ")", "\n", "m1", "=", "CX_M", ".", "min", "(", "2", ")", "\n", "m2", "=", "CX_M", ".", "min", "(", "1", ")", "\n", "m", "=", "paddle", ".", "concat", "(", "[", "m1", ".", "mean", "(", ")", ",", "m2", ".", "mean", "(", ")", "]", ")", "\n", "loss_remd", "=", "paddle", ".", "max", "(", "m", ")", "\n", "return", "loss_remd", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.pixel_loss.CalcContentReltLoss.__init__": [[186, 188], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "CalcContentReltLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.pixel_loss.CalcContentReltLoss.__call__": [[189, 204], ["pixel_loss.calc_emd_loss", "pixel_loss.calc_emd_loss", "calc_emd_loss.sum", "calc_emd_loss.sum", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs().mean", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs", "paddle.abs"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.pixel_loss.calc_emd_loss", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.pixel_loss.calc_emd_loss"], ["", "def", "__call__", "(", "self", ",", "pred", ",", "target", ")", ":", "\n", "        ", "\"\"\"Forward Function.\n\n        Args:\n            pred (Tensor): of shape (N, C, H, W). Predicted tensor.\n            target (Tensor): of shape (N, C, H, W). Ground truth tensor.\n        \"\"\"", "\n", "dM", "=", "1.", "\n", "Mx", "=", "calc_emd_loss", "(", "pred", ",", "pred", ")", "\n", "Mx", "=", "Mx", "/", "Mx", ".", "sum", "(", "1", ",", "keepdim", "=", "True", ")", "\n", "My", "=", "calc_emd_loss", "(", "target", ",", "target", ")", "\n", "My", "=", "My", "/", "My", ".", "sum", "(", "1", ",", "keepdim", "=", "True", ")", "\n", "loss_content", "=", "paddle", ".", "abs", "(", "\n", "dM", "*", "(", "Mx", "-", "My", ")", ")", ".", "mean", "(", ")", "*", "pred", ".", "shape", "[", "2", "]", "*", "pred", ".", "shape", "[", "3", "]", "\n", "return", "loss_content", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.pixel_loss.CalcContentLoss.__init__": [[210, 212], ["paddle.MSELoss", "paddle.MSELoss", "paddle.MSELoss"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "mse_loss", "=", "nn", ".", "MSELoss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.pixel_loss.CalcContentLoss.__call__": [[213, 226], ["pixel_loss.CalcContentLoss.mse_loss", "pixel_loss.CalcContentLoss.mse_loss", "generators.generater_lapstyle.mean_variance_norm", "generators.generater_lapstyle.mean_variance_norm"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_lapstyle.mean_variance_norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_lapstyle.mean_variance_norm"], ["", "def", "__call__", "(", "self", ",", "pred", ",", "target", ",", "norm", "=", "False", ")", ":", "\n", "        ", "\"\"\"Forward Function.\n\n        Args:\n            pred (Tensor): of shape (N, C, H, W). Predicted tensor.\n            target (Tensor): of shape (N, C, H, W). Ground truth tensor.\n            norm(Bool): whether use mean_variance_norm for pred and target\n        \"\"\"", "\n", "if", "(", "norm", "==", "False", ")", ":", "\n", "            ", "return", "self", ".", "mse_loss", "(", "pred", ",", "target", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "mse_loss", "(", "mean_variance_norm", "(", "pred", ")", ",", "\n", "mean_variance_norm", "(", "target", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.pixel_loss.CalcStyleLoss.__init__": [[232, 234], ["paddle.MSELoss", "paddle.MSELoss", "paddle.MSELoss"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "mse_loss", "=", "nn", ".", "MSELoss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.pixel_loss.CalcStyleLoss.__call__": [[235, 246], ["generators.generater_lapstyle.calc_mean_std", "generators.generater_lapstyle.calc_mean_std", "pixel_loss.CalcStyleLoss.mse_loss", "pixel_loss.CalcStyleLoss.mse_loss"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_lapstyle.calc_mean_std", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.generater_lapstyle.calc_mean_std"], ["", "def", "__call__", "(", "self", ",", "pred", ",", "target", ")", ":", "\n", "        ", "\"\"\"Forward Function.\n\n        Args:\n            pred (Tensor): of shape (N, C, H, W). Predicted tensor.\n            target (Tensor): of shape (N, C, H, W). Ground truth tensor.\n        \"\"\"", "\n", "pred_mean", ",", "pred_std", "=", "calc_mean_std", "(", "pred", ")", "\n", "target_mean", ",", "target_std", "=", "calc_mean_std", "(", "target", ")", "\n", "return", "self", ".", "mse_loss", "(", "pred_mean", ",", "target_mean", ")", "+", "self", ".", "mse_loss", "(", "\n", "pred_std", ",", "target_std", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.pixel_loss.EdgeLoss.__init__": [[250, 254], ["paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.matmul().unsqueeze().tile", "paddle.matmul().unsqueeze().tile", "paddle.matmul().unsqueeze().tile", "paddle.matmul().unsqueeze().tile", "paddle.matmul().unsqueeze().tile", "paddle.matmul().unsqueeze().tile", "paddle.matmul().unsqueeze().tile", "paddle.matmul().unsqueeze().tile", "paddle.matmul().unsqueeze().tile", "pixel_loss.CharbonnierLoss", "paddle.matmul().unsqueeze", "paddle.matmul().unsqueeze", "paddle.matmul().unsqueeze", "paddle.matmul().unsqueeze", "paddle.matmul().unsqueeze", "paddle.matmul().unsqueeze", "paddle.matmul().unsqueeze", "paddle.matmul().unsqueeze", "paddle.matmul().unsqueeze", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.matmul", "paddle.to_tensor.t", "paddle.to_tensor.t", "paddle.to_tensor.t"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "k", "=", "paddle", ".", "to_tensor", "(", "[", "[", ".05", ",", ".25", ",", ".4", ",", ".25", ",", ".05", "]", "]", ")", "\n", "self", ".", "kernel", "=", "paddle", ".", "matmul", "(", "k", ".", "t", "(", ")", ",", "k", ")", ".", "unsqueeze", "(", "0", ")", ".", "tile", "(", "[", "3", ",", "1", ",", "1", ",", "1", "]", ")", "\n", "self", ".", "loss", "=", "CharbonnierLoss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.pixel_loss.EdgeLoss.conv_gauss": [[255, 259], ["paddle.pad", "paddle.pad", "paddle.pad", "paddle.conv2d", "paddle.conv2d", "paddle.conv2d"], "methods", ["None"], ["", "def", "conv_gauss", "(", "self", ",", "img", ")", ":", "\n", "        ", "n_channels", ",", "_", ",", "kw", ",", "kh", "=", "self", ".", "kernel", ".", "shape", "\n", "img", "=", "F", ".", "pad", "(", "img", ",", "[", "kw", "//", "2", ",", "kh", "//", "2", ",", "kw", "//", "2", ",", "kh", "//", "2", "]", ",", "mode", "=", "'replicate'", ")", "\n", "return", "F", ".", "conv2d", "(", "img", ",", "self", ".", "kernel", ",", "groups", "=", "n_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.pixel_loss.EdgeLoss.laplacian_kernel": [[260, 269], ["pixel_loss.EdgeLoss.conv_gauss", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "paddle.zeros_like", "pixel_loss.EdgeLoss.conv_gauss"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.pixel_loss.EdgeLoss.conv_gauss", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.pixel_loss.EdgeLoss.conv_gauss"], ["", "def", "laplacian_kernel", "(", "self", ",", "current", ")", ":", "\n", "        ", "filtered", "=", "self", ".", "conv_gauss", "(", "current", ")", "# filter", "\n", "down", "=", "filtered", "[", ":", ",", ":", ",", ":", ":", "2", ",", ":", ":", "2", "]", "# downsample", "\n", "new_filter", "=", "paddle", ".", "zeros_like", "(", "filtered", ")", "\n", "new_filter", ".", "stop_gradient", "=", "True", "\n", "new_filter", "[", ":", ",", ":", ",", ":", ":", "2", ",", ":", ":", "2", "]", "=", "down", "*", "4", "# upsample", "\n", "filtered", "=", "self", ".", "conv_gauss", "(", "new_filter", ")", "# filter", "\n", "diff", "=", "current", "-", "filtered", "\n", "return", "diff", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.pixel_loss.EdgeLoss.__call__": [[270, 274], ["pixel_loss.EdgeLoss.loss", "pixel_loss.EdgeLoss.laplacian_kernel", "pixel_loss.EdgeLoss.laplacian_kernel"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.pixel_loss.EdgeLoss.laplacian_kernel", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.pixel_loss.EdgeLoss.laplacian_kernel"], ["", "def", "__call__", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "y", ".", "stop_gradient", "=", "True", "\n", "loss", "=", "self", ".", "loss", "(", "self", ".", "laplacian_kernel", "(", "x", ")", ",", "self", ".", "laplacian_kernel", "(", "y", ")", ")", "\n", "return", "loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.pixel_loss.calc_emd_loss": [[142, 158], ["pred.transpose.reshape", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "pred.transpose.transpose", "target.reshape", "paddle.sqrt", "paddle.sqrt", "paddle.sqrt", "paddle.bmm", "paddle.bmm", "paddle.bmm"], "function", ["None"], ["", "", "def", "calc_emd_loss", "(", "pred", ",", "target", ")", ":", "\n", "    ", "\"\"\"calculate emd loss.\n\n    Args:\n        pred (Tensor): of shape (N, C, H, W). Predicted tensor.\n        target (Tensor): of shape (N, C, H, W). Ground truth tensor.\n    \"\"\"", "\n", "b", ",", "_", ",", "h", ",", "w", "=", "pred", ".", "shape", "\n", "pred", "=", "pred", ".", "reshape", "(", "[", "b", ",", "-", "1", ",", "w", "*", "h", "]", ")", "\n", "pred_norm", "=", "paddle", ".", "sqrt", "(", "(", "pred", "**", "2", ")", ".", "sum", "(", "1", ")", ".", "reshape", "(", "[", "b", ",", "-", "1", ",", "1", "]", ")", ")", "\n", "pred", "=", "pred", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "target_t", "=", "target", ".", "reshape", "(", "[", "b", ",", "-", "1", ",", "w", "*", "h", "]", ")", "\n", "target_norm", "=", "paddle", ".", "sqrt", "(", "(", "target", "**", "2", ")", ".", "sum", "(", "1", ")", ".", "reshape", "(", "[", "b", ",", "1", ",", "-", "1", "]", ")", ")", "\n", "similarity", "=", "paddle", ".", "bmm", "(", "pred", ",", "target_t", ")", "/", "pred_norm", "/", "target_norm", "\n", "dist", "=", "1.", "-", "similarity", "\n", "return", "dist", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.gan_loss.GANLoss.__init__": [[30, 63], ["paddle.Layer.__init__", "paddle.MSELoss", "paddle.MSELoss", "paddle.MSELoss", "paddle.BCEWithLogitsLoss", "paddle.BCEWithLogitsLoss", "paddle.BCEWithLogitsLoss", "NotImplementedError"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "\n", "gan_mode", ",", "\n", "target_real_label", "=", "1.0", ",", "\n", "target_fake_label", "=", "0.0", ",", "\n", "loss_weight", "=", "1.0", ")", ":", "\n", "        ", "\"\"\" Initialize the GANLoss class.\n\n        Args:\n            gan_mode (str): the type of GAN objective. It currently supports vanilla, lsgan, and wgangp.\n            target_real_label (bool): label for a real image\n            target_fake_label (bool): label of a fake image\n\n        Note: Do not use sigmoid as the last layer of Discriminator.\n        LSGAN needs no sigmoid. vanilla GANs will handle it with BCEWithLogitsLoss.\n        \"\"\"", "\n", "super", "(", "GANLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# when loss weight less than zero return None", "\n", "if", "loss_weight", "<=", "0", ":", "\n", "            ", "return", "None", "\n", "\n", "", "self", ".", "target_real_label", "=", "target_real_label", "\n", "self", ".", "target_fake_label", "=", "target_fake_label", "\n", "self", ".", "loss_weight", "=", "loss_weight", "\n", "\n", "self", ".", "gan_mode", "=", "gan_mode", "\n", "if", "gan_mode", "==", "'lsgan'", ":", "\n", "            ", "self", ".", "loss", "=", "nn", ".", "MSELoss", "(", ")", "\n", "", "elif", "gan_mode", "==", "'vanilla'", ":", "\n", "            ", "self", ".", "loss", "=", "nn", ".", "BCEWithLogitsLoss", "(", ")", "\n", "", "elif", "gan_mode", "in", "[", "'wgan'", ",", "'wgangp'", ",", "'hinge'", ",", "'logistic'", "]", ":", "\n", "            ", "self", ".", "loss", "=", "None", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", "'gan mode %s not implemented'", "%", "gan_mode", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.gan_loss.GANLoss.get_target_tensor": [[64, 90], ["hasattr", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "hasattr", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.full", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape", "paddle.shape"], "methods", ["None"], ["", "", "def", "get_target_tensor", "(", "self", ",", "prediction", ",", "target_is_real", ")", ":", "\n", "        ", "\"\"\"Create label tensors with the same size as the input.\n\n        Args:\n            prediction (tensor) - - tpyically the prediction from a discriminator\n            target_is_real (bool) - - if the ground truth label is for real images or fake images\n\n        Returns:\n            A label tensor filled with ground truth label, and with the size of the input\n        \"\"\"", "\n", "if", "target_is_real", ":", "\n", "            ", "if", "not", "hasattr", "(", "self", ",", "'target_real_tensor'", ")", ":", "\n", "                ", "self", ".", "target_real_tensor", "=", "paddle", ".", "full", "(", "\n", "shape", "=", "paddle", ".", "shape", "(", "prediction", ")", ",", "\n", "fill_value", "=", "self", ".", "target_real_label", ",", "\n", "dtype", "=", "'float32'", ")", "\n", "", "target_tensor", "=", "self", ".", "target_real_tensor", "\n", "", "else", ":", "\n", "            ", "if", "not", "hasattr", "(", "self", ",", "'target_fake_tensor'", ")", ":", "\n", "                ", "self", ".", "target_fake_tensor", "=", "paddle", ".", "full", "(", "\n", "shape", "=", "paddle", ".", "shape", "(", "prediction", ")", ",", "\n", "fill_value", "=", "self", ".", "target_fake_label", ",", "\n", "dtype", "=", "'float32'", ")", "\n", "", "target_tensor", "=", "self", ".", "target_fake_tensor", "\n", "\n", "", "return", "target_tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.gan_loss.GANLoss.__call__": [[91, 127], ["gan_loss.GANLoss.get_target_tensor", "gan_loss.GANLoss.loss", "gan_loss.GANLoss.gan_mode.find", "prediction.mean", "paddle.softplus().mean.mean", "prediction.mean", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.softplus().mean", "paddle.softplus().mean", "paddle.softplus().mean", "paddle.softplus().mean", "paddle.softplus().mean", "paddle.softplus().mean", "paddle.softplus", "paddle.softplus", "paddle.softplus", "paddle.softplus", "paddle.softplus", "paddle.softplus"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.gan_loss.GANLoss.get_target_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu"], ["", "def", "__call__", "(", "self", ",", "\n", "prediction", ",", "\n", "target_is_real", ",", "\n", "is_disc", "=", "False", ",", "\n", "is_updating_D", "=", "None", ")", ":", "\n", "        ", "\"\"\"Calculate loss given Discriminator's output and grount truth labels.\n\n        Args:\n            prediction (tensor) - - tpyically the prediction output from a discriminator\n            target_is_real (bool) - - if the ground truth label is for real images or fake images\n            is_updating_D (bool)  - - if we are in updating D step or not\n\n        Returns:\n            the calculated loss.\n        \"\"\"", "\n", "if", "self", ".", "gan_mode", "in", "[", "'lsgan'", ",", "'vanilla'", "]", ":", "\n", "            ", "target_tensor", "=", "self", ".", "get_target_tensor", "(", "prediction", ",", "target_is_real", ")", "\n", "loss", "=", "self", ".", "loss", "(", "prediction", ",", "target_tensor", ")", "\n", "", "elif", "self", ".", "gan_mode", ".", "find", "(", "'wgan'", ")", "!=", "-", "1", ":", "\n", "            ", "if", "target_is_real", ":", "\n", "                ", "loss", "=", "-", "prediction", ".", "mean", "(", ")", "\n", "", "else", ":", "\n", "                ", "loss", "=", "prediction", ".", "mean", "(", ")", "\n", "", "", "elif", "self", ".", "gan_mode", "==", "'hinge'", ":", "\n", "            ", "if", "target_is_real", ":", "\n", "                ", "loss", "=", "F", ".", "relu", "(", "1", "-", "prediction", ")", "if", "is_updating_D", "else", "-", "prediction", "\n", "", "else", ":", "\n", "                ", "loss", "=", "F", ".", "relu", "(", "1", "+", "prediction", ")", "if", "is_updating_D", "else", "prediction", "\n", "", "loss", "=", "loss", ".", "mean", "(", ")", "\n", "", "elif", "self", ".", "gan_mode", "==", "'logistic'", ":", "\n", "            ", "if", "target_is_real", ":", "\n", "                ", "loss", "=", "F", ".", "softplus", "(", "-", "prediction", ")", ".", "mean", "(", ")", "\n", "", "else", ":", "\n", "                ", "loss", "=", "F", ".", "softplus", "(", "prediction", ")", ".", "mean", "(", ")", "\n", "\n", "", "", "return", "loss", "if", "is_disc", "else", "loss", "*", "self", ".", "loss_weight", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.builder.build_criterion": [[34, 43], ["cfg.copy", "cfg.copy.pop", "CRITERIONS.get", "CRITERIONS.get", "RuntimeError"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get"], ["dataset", "=", "RepeatDataset", "(", "dataset_", ",", "cfg", "[", "'times'", "]", ")", "\n", "", "else", ":", "\n", "        ", "dataset", "=", "dataset", "=", "DATASETS", ".", "get", "(", "name", ")", "(", "**", "cfg", ")", "\n", "\n", "", "return", "dataset", "\n", "\n", "\n", "", "def", "build_dataloader", "(", "cfg", ",", "is_train", "=", "True", ",", "distributed", "=", "True", ")", ":", "\n", "    ", "cfg_", "=", "cfg", ".", "copy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.photopen_perceptual_loss.ConvBlock.__init__": [[13, 50], ["paddle.Layer.__init__", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "paddle.nn.MaxPool2D", "paddle.nn.MaxPool2D", "paddle.nn.MaxPool2D", "paddle.nn.MaxPool2D", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "paddle.nn.Conv2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_channels", ",", "output_channels", ",", "groups", ",", "name", "=", "None", ")", ":", "\n", "        ", "super", "(", "ConvBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "groups", "=", "groups", "\n", "self", ".", "_conv_1", "=", "Conv2D", "(", "\n", "in_channels", "=", "input_channels", ",", "\n", "out_channels", "=", "output_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "if", "groups", "==", "2", "or", "groups", "==", "3", "or", "groups", "==", "4", ":", "\n", "            ", "self", ".", "_conv_2", "=", "Conv2D", "(", "\n", "in_channels", "=", "output_channels", ",", "\n", "out_channels", "=", "output_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "", "if", "groups", "==", "3", "or", "groups", "==", "4", ":", "\n", "            ", "self", ".", "_conv_3", "=", "Conv2D", "(", "\n", "in_channels", "=", "output_channels", ",", "\n", "out_channels", "=", "output_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "", "if", "groups", "==", "4", ":", "\n", "            ", "self", ".", "_conv_4", "=", "Conv2D", "(", "\n", "in_channels", "=", "output_channels", ",", "\n", "out_channels", "=", "output_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "bias_attr", "=", "False", ")", "\n", "\n", "", "self", ".", "_pool", "=", "MaxPool2D", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "padding", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.photopen_perceptual_loss.ConvBlock.forward": [[51, 65], ["photopen_perceptual_loss.ConvBlock._conv_1", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "photopen_perceptual_loss.ConvBlock._pool", "photopen_perceptual_loss.ConvBlock._conv_2", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "photopen_perceptual_loss.ConvBlock._conv_3", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "photopen_perceptual_loss.ConvBlock._conv_4", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "x", "=", "self", ".", "_conv_1", "(", "inputs", ")", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "if", "self", ".", "groups", "==", "2", "or", "self", ".", "groups", "==", "3", "or", "self", ".", "groups", "==", "4", ":", "\n", "            ", "x", "=", "self", ".", "_conv_2", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "", "if", "self", ".", "groups", "==", "3", "or", "self", ".", "groups", "==", "4", ":", "\n", "            ", "x", "=", "self", ".", "_conv_3", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "", "if", "self", ".", "groups", "==", "4", ":", "\n", "            ", "x", "=", "self", ".", "_conv_4", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "", "x", "=", "self", ".", "_pool", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.photopen_perceptual_loss.VGG19.__init__": [[67, 98], ["paddle.Layer.__init__", "photopen_perceptual_loss.ConvBlock", "photopen_perceptual_loss.ConvBlock", "photopen_perceptual_loss.ConvBlock", "photopen_perceptual_loss.ConvBlock", "photopen_perceptual_loss.ConvBlock", "paddle.nn.Dropout", "paddle.nn.Dropout", "paddle.nn.Dropout", "paddle.nn.Dropout", "paddle.nn.Linear", "paddle.nn.Linear", "paddle.nn.Linear", "paddle.nn.Linear", "paddle.nn.Linear", "paddle.nn.Linear", "paddle.nn.Linear", "paddle.nn.Linear", "paddle.nn.Linear", "paddle.nn.Linear", "paddle.nn.Linear", "paddle.nn.Linear", "photopen_perceptual_loss.VGG19.vgg_configure.keys", "vgg_configure.keys"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "layers", "=", "19", ",", "class_dim", "=", "1000", ")", ":", "\n", "        ", "super", "(", "VGG19", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "layers", "=", "layers", "\n", "self", ".", "vgg_configure", "=", "{", "\n", "11", ":", "[", "1", ",", "1", ",", "2", ",", "2", ",", "2", "]", ",", "\n", "13", ":", "[", "2", ",", "2", ",", "2", ",", "2", ",", "2", "]", ",", "\n", "16", ":", "[", "2", ",", "2", ",", "3", ",", "3", ",", "3", "]", ",", "\n", "19", ":", "[", "2", ",", "2", ",", "4", ",", "4", ",", "4", "]", "\n", "}", "\n", "assert", "self", ".", "layers", "in", "self", ".", "vgg_configure", ".", "keys", "(", ")", ",", "\"supported layers are {} but input layer is {}\"", ".", "format", "(", "\n", "vgg_configure", ".", "keys", "(", ")", ",", "layers", ")", "\n", "self", ".", "groups", "=", "self", ".", "vgg_configure", "[", "self", ".", "layers", "]", "\n", "\n", "self", ".", "_conv_block_1", "=", "ConvBlock", "(", "3", ",", "64", ",", "self", ".", "groups", "[", "0", "]", ",", "name", "=", "\"conv1_\"", ")", "\n", "self", ".", "_conv_block_2", "=", "ConvBlock", "(", "64", ",", "128", ",", "self", ".", "groups", "[", "1", "]", ",", "name", "=", "\"conv2_\"", ")", "\n", "self", ".", "_conv_block_3", "=", "ConvBlock", "(", "128", ",", "256", ",", "self", ".", "groups", "[", "2", "]", ",", "name", "=", "\"conv3_\"", ")", "\n", "self", ".", "_conv_block_4", "=", "ConvBlock", "(", "256", ",", "512", ",", "self", ".", "groups", "[", "3", "]", ",", "name", "=", "\"conv4_\"", ")", "\n", "self", ".", "_conv_block_5", "=", "ConvBlock", "(", "512", ",", "512", ",", "self", ".", "groups", "[", "4", "]", ",", "name", "=", "\"conv5_\"", ")", "\n", "\n", "self", ".", "_drop", "=", "Dropout", "(", "p", "=", "0.5", ",", "mode", "=", "\"downscale_in_infer\"", ")", "\n", "self", ".", "_fc1", "=", "Linear", "(", "\n", "7", "*", "7", "*", "512", ",", "\n", "4096", ",", ")", "\n", "self", ".", "_fc2", "=", "Linear", "(", "\n", "4096", ",", "\n", "4096", ",", ")", "\n", "self", ".", "_out", "=", "Linear", "(", "\n", "4096", ",", "\n", "class_dim", ",", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.photopen_perceptual_loss.VGG19.forward": [[99, 121], ["features.append", "photopen_perceptual_loss.VGG19._conv_block_1", "features.append", "photopen_perceptual_loss.VGG19._conv_block_2", "features.append", "photopen_perceptual_loss.VGG19._conv_block_3", "features.append", "photopen_perceptual_loss.VGG19._conv_block_4", "features.append", "photopen_perceptual_loss.VGG19._conv_block_5", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape", "photopen_perceptual_loss.VGG19._fc1", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "photopen_perceptual_loss.VGG19._drop", "photopen_perceptual_loss.VGG19._fc2", "paddle.relu", "paddle.relu", "paddle.relu", "paddle.relu", "photopen_perceptual_loss.VGG19._drop", "photopen_perceptual_loss.VGG19._out"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "features", "=", "[", "]", "\n", "features", ".", "append", "(", "inputs", ")", "\n", "x", "=", "self", ".", "_conv_block_1", "(", "inputs", ")", "\n", "features", ".", "append", "(", "x", ")", "\n", "x", "=", "self", ".", "_conv_block_2", "(", "x", ")", "\n", "features", ".", "append", "(", "x", ")", "\n", "x", "=", "self", ".", "_conv_block_3", "(", "x", ")", "\n", "features", ".", "append", "(", "x", ")", "\n", "x", "=", "self", ".", "_conv_block_4", "(", "x", ")", "\n", "features", ".", "append", "(", "x", ")", "\n", "x", "=", "self", ".", "_conv_block_5", "(", "x", ")", "\n", "\n", "x", "=", "paddle", ".", "reshape", "(", "x", ",", "[", "0", ",", "-", "1", "]", ")", "\n", "x", "=", "self", ".", "_fc1", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "_drop", "(", "x", ")", "\n", "x", "=", "self", ".", "_fc2", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "_drop", "(", "x", ")", "\n", "x", "=", "self", ".", "_out", "(", "x", ")", "\n", "return", "x", ",", "features", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.photopen_perceptual_loss.PhotoPenPerceptualLoss.__init__": [[124, 139], ["paddle.Layer.__init__", "photopen_perceptual_loss.VGG19", "ppgan.utils.download.get_path_from_url", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "paddle.load", "photopen_perceptual_loss.PhotoPenPerceptualLoss.model.set_state_dict", "print"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["    ", "def", "__init__", "(", "self", ",", "\n", "crop_size", ",", "\n", "lambda_vgg", ",", "\n", "#                  pretrained='test/vgg19pretrain.pdparams',", "\n", "pretrained", "=", "'https://paddlegan.bj.bcebos.com/models/vgg19pretrain.pdparams'", ",", "\n", ")", ":", "\n", "        ", "super", "(", "PhotoPenPerceptualLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "model", "=", "VGG19", "(", ")", "\n", "weight_path", "=", "get_path_from_url", "(", "pretrained", ")", "\n", "vgg_weight", "=", "paddle", ".", "load", "(", "weight_path", ")", "\n", "self", ".", "model", ".", "set_state_dict", "(", "vgg_weight", ")", "\n", "print", "(", "'PerceptualVGG loaded pretrained weight.'", ")", "\n", "self", ".", "rates", "=", "[", "1.0", "/", "32", ",", "1.0", "/", "16", ",", "1.0", "/", "8", ",", "1.0", "/", "4", ",", "1.0", "]", "\n", "self", ".", "crop_size", "=", "crop_size", "\n", "self", ".", "lambda_vgg", "=", "lambda_vgg", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.photopen_perceptual_loss.PhotoPenPerceptualLoss.forward": [[140, 151], ["paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "paddle.interpolate", "photopen_perceptual_loss.PhotoPenPerceptualLoss.model", "photopen_perceptual_loss.PhotoPenPerceptualLoss.model", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "range", "len", "paddle.L1Loss", "paddle.L1Loss", "paddle.L1Loss", "paddle.L1Loss"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "img_r", ",", "img_f", ")", ":", "\n", "        ", "img_r", "=", "F", ".", "interpolate", "(", "img_r", ",", "(", "self", ".", "crop_size", ",", "self", ".", "crop_size", ")", ")", "\n", "img_f", "=", "F", ".", "interpolate", "(", "img_f", ",", "(", "self", ".", "crop_size", ",", "self", ".", "crop_size", ")", ")", "\n", "_", ",", "feat_r", "=", "self", ".", "model", "(", "img_r", ")", "\n", "_", ",", "feat_f", "=", "self", ".", "model", "(", "img_f", ")", "\n", "g_vggloss", "=", "paddle", ".", "to_tensor", "(", "0.", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "feat_r", ")", ")", ":", "\n", "            ", "g_vggloss", "+=", "self", ".", "rates", "[", "i", "]", "*", "nn", ".", "L1Loss", "(", ")", "(", "feat_r", "[", "i", "]", ",", "feat_f", "[", "i", "]", ")", "\n", "", "g_vggloss", "*=", "self", ".", "lambda_vgg", "\n", "\n", "return", "g_vggloss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.ssim.SSIM.__init__": [[75, 81], ["super().__init__", "ssim.create_window"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.ssim.create_window"], ["    ", "def", "__init__", "(", "self", ",", "window_size", "=", "11", ",", "size_average", "=", "True", ")", ":", "\n", "        ", "super", "(", "SSIM", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "window_size", "=", "window_size", "\n", "self", ".", "size_average", "=", "size_average", "\n", "self", ".", "channel", "=", "1", "\n", "self", ".", "window", "=", "create_window", "(", "window_size", ",", "self", ".", "channel", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.ssim.SSIM.forward": [[82, 96], ["ssim._ssim", "ssim.create_window", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.psnr_ssim._ssim", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.ssim.create_window"], ["", "def", "forward", "(", "self", ",", "img1", ",", "img2", ")", ":", "\n", "        ", "(", "_", ",", "channel", ",", "_", ",", "_", ")", "=", "img1", ".", "shape", "\n", "\n", "if", "channel", "==", "self", ".", "channel", "and", "self", ".", "window", ".", "dtype", "==", "img1", ".", "dtype", ":", "\n", "            ", "window", "=", "self", ".", "window", "\n", "", "else", ":", "\n", "            ", "window", "=", "create_window", "(", "self", ".", "window_size", ",", "channel", ")", "\n", "tt", "=", "img1", ".", "dtype", "\n", "window", "=", "paddle", ".", "to_tensor", "(", "window", ",", "dtype", "=", "tt", ")", "\n", "self", ".", "window", "=", "window", "\n", "self", ".", "channel", "=", "channel", "\n", "\n", "", "return", "_ssim", "(", "img1", ",", "img2", ",", "window", ",", "self", ".", "window_size", ",", "channel", ",", "\n", "self", ".", "size_average", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.ssim.gaussian": [[26, 32], ["paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor.sum", "math.exp", "range", "float"], "function", ["None"], ["def", "gaussian", "(", "window_size", ",", "sigma", ")", ":", "\n", "    ", "gauss", "=", "paddle", ".", "to_tensor", "(", "[", "\n", "exp", "(", "-", "(", "x", "-", "window_size", "//", "2", ")", "**", "2", "/", "float", "(", "2", "*", "sigma", "**", "2", ")", ")", "\n", "for", "x", "in", "range", "(", "window_size", ")", "\n", "]", ")", "\n", "return", "gauss", "/", "gauss", ".", "sum", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.ssim.create_window": [[35, 42], ["gaussian().unsqueeze", "gaussian().unsqueeze.mm().unsqueeze().unsqueeze", "paddle.to_tensor", "paddle.to_tensor", "paddle.expand", "paddle.expand", "ssim.gaussian", "gaussian().unsqueeze.mm().unsqueeze", "gaussian().unsqueeze.mm", "gaussian().unsqueeze.t"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.ssim.gaussian"], ["", "def", "create_window", "(", "window_size", ",", "channel", ")", ":", "\n", "    ", "_1D_window", "=", "gaussian", "(", "window_size", ",", "1.5", ")", ".", "unsqueeze", "(", "1", ")", "\n", "_2D_window", "=", "_1D_window", ".", "mm", "(", "_1D_window", ".", "t", "(", ")", ")", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", "\n", "window", "=", "paddle", ".", "to_tensor", "(", "paddle", ".", "expand", "(", "\n", "_2D_window", ",", "(", "channel", ",", "1", ",", "window_size", ",", "window_size", ")", ")", ",", "\n", "stop_gradient", "=", "False", ")", "\n", "return", "window", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.ssim._ssim": [[44, 70], ["paddle.conv2d", "paddle.conv2d", "F.conv2d.pow", "F.conv2d.pow", "paddle.conv2d", "paddle.conv2d", "paddle.conv2d", "ssim_map.mean", "ssim_map.mean().mean().mean", "ssim_map.mean().mean", "ssim_map.mean"], "function", ["None"], ["", "def", "_ssim", "(", "img1", ",", "img2", ",", "window", ",", "window_size", ",", "channel", ",", "size_average", "=", "True", ")", ":", "\n", "    ", "mu1", "=", "F", ".", "conv2d", "(", "img1", ",", "window", ",", "padding", "=", "window_size", "//", "2", ",", "groups", "=", "channel", ")", "\n", "mu2", "=", "F", ".", "conv2d", "(", "img2", ",", "window", ",", "padding", "=", "window_size", "//", "2", ",", "groups", "=", "channel", ")", "\n", "\n", "mu1_sq", "=", "mu1", ".", "pow", "(", "2", ")", "\n", "mu2_sq", "=", "mu2", ".", "pow", "(", "2", ")", "\n", "mu1_mu2", "=", "mu1", "*", "mu2", "\n", "\n", "sigma1_sq", "=", "F", ".", "conv2d", "(", "\n", "img1", "*", "img1", ",", "window", ",", "padding", "=", "window_size", "//", "2", ",", "groups", "=", "channel", ")", "-", "mu1_sq", "\n", "sigma2_sq", "=", "F", ".", "conv2d", "(", "\n", "img2", "*", "img2", ",", "window", ",", "padding", "=", "window_size", "//", "2", ",", "groups", "=", "channel", ")", "-", "mu2_sq", "\n", "sigma12", "=", "F", ".", "conv2d", "(", "\n", "img1", "*", "img2", ",", "window", ",", "padding", "=", "window_size", "//", "2", ",", "groups", "=", "channel", ")", "-", "mu1_mu2", "\n", "\n", "C1", "=", "0.01", "**", "2", "\n", "C2", "=", "0.03", "**", "2", "\n", "\n", "ssim_map", "=", "(", "(", "2", "*", "mu1_mu2", "+", "C1", ")", "*", "\n", "(", "2", "*", "sigma12", "+", "C2", ")", ")", "/", "(", "(", "mu1_sq", "+", "mu2_sq", "+", "C1", ")", "*", "\n", "(", "sigma1_sq", "+", "sigma2_sq", "+", "C2", ")", ")", "\n", "\n", "if", "size_average", ":", "\n", "        ", "return", "ssim_map", ".", "mean", "(", ")", "\n", "", "else", ":", "\n", "        ", "return", "ssim_map", ".", "mean", "(", "1", ")", ".", "mean", "(", "1", ")", ".", "mean", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.ssim.ssim": [[98, 107], ["img1.size", "ssim.create_window", "window.cuda.type_as", "ssim._ssim", "window.cuda.cuda", "img1.get_device"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.ssim.create_window", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.psnr_ssim._ssim"], ["", "", "def", "ssim", "(", "img1", ",", "img2", ",", "window_size", "=", "11", ",", "size_average", "=", "True", ")", ":", "\n", "    ", "(", "_", ",", "channel", ",", "_", ",", "_", ")", "=", "img1", ".", "size", "(", ")", "\n", "window", "=", "create_window", "(", "window_size", ",", "channel", ")", "\n", "\n", "if", "img1", ".", "is_cuda", ":", "\n", "        ", "window", "=", "window", ".", "cuda", "(", "img1", ".", "get_device", "(", ")", ")", "\n", "", "window", "=", "window", ".", "type_as", "(", "img1", ")", "\n", "\n", "return", "_ssim", "(", "img1", ",", "img2", ",", "window", ",", "window_size", ",", "channel", ",", "size_average", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.gradient_penalty.GradientPenalty.__init__": [[21, 23], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "loss_weight", "=", "1.0", ")", ":", "\n", "        ", "self", ".", "loss_weight", "=", "loss_weight", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.criterions.gradient_penalty.GradientPenalty.__call__": [[24, 40], ["paddle.rand", "range", "net", "paddle.unsqueeze", "paddle.grad", "paddle.ones_like", "gradient.norm"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm"], ["", "def", "__call__", "(", "self", ",", "net", ",", "real", ",", "fake", ")", ":", "\n", "        ", "batch_size", "=", "real", ".", "shape", "[", "0", "]", "\n", "alpha", "=", "paddle", ".", "rand", "(", "[", "batch_size", "]", ")", "\n", "for", "_", "in", "range", "(", "real", ".", "ndim", "-", "1", ")", ":", "\n", "            ", "alpha", "=", "paddle", ".", "unsqueeze", "(", "alpha", ",", "-", "1", ")", "\n", "", "interpolate", "=", "alpha", "*", "real", "+", "(", "1", "-", "alpha", ")", "*", "fake", "\n", "interpolate", ".", "stop_gradient", "=", "False", "\n", "interpolate_pred", "=", "net", "(", "interpolate", ")", "\n", "gradient", "=", "paddle", ".", "grad", "(", "outputs", "=", "interpolate_pred", ",", "\n", "inputs", "=", "interpolate", ",", "\n", "grad_outputs", "=", "paddle", ".", "ones_like", "(", "interpolate_pred", ")", ",", "\n", "create_graph", "=", "True", ",", "\n", "retain_graph", "=", "True", ",", "\n", "only_inputs", "=", "True", ")", "[", "0", "]", "\n", "gradient_penalty", "=", "(", "(", "gradient", ".", "norm", "(", "2", ",", "1", ")", "-", "1", ")", "**", "2", ")", ".", "mean", "(", ")", "\n", "return", "gradient_penalty", "*", "self", ".", "loss_weight", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.model_irse.Backbone.__init__": [[25, 62], ["paddle.Layer.__init__", "helpers.get_blocks", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.nn.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.PReLU", "paddle.PReLU", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.Dropout", "paddle.Dropout", "helpers.Flatten", "paddle.Linear", "paddle.Linear", "paddle.BatchNorm1D", "paddle.BatchNorm1D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.Dropout", "paddle.Dropout", "helpers.Flatten", "paddle.Linear", "paddle.Linear", "paddle.BatchNorm1D", "paddle.BatchNorm1D", "modules.append", "unit_module"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.get_blocks", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["    ", "def", "__init__", "(", "self", ",", "\n", "input_size", ",", "\n", "num_layers", ",", "\n", "mode", "=", "'ir'", ",", "\n", "drop_ratio", "=", "0.4", ",", "\n", "affine", "=", "True", ")", ":", "\n", "        ", "super", "(", "Backbone", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "input_size", "in", "[", "112", ",", "224", "]", ",", "\"input_size should be 112 or 224\"", "\n", "assert", "num_layers", "in", "[", "50", ",", "100", ",", "\n", "152", "]", ",", "\"num_layers should be 50, 100 or 152\"", "\n", "assert", "mode", "in", "[", "'ir'", ",", "'ir_se'", "]", ",", "\"mode should be ir or ir_se\"", "\n", "blocks", "=", "get_blocks", "(", "num_layers", ")", "\n", "if", "mode", "==", "'ir'", ":", "\n", "            ", "unit_module", "=", "bottleneck_IR", "\n", "", "elif", "mode", "==", "'ir_se'", ":", "\n", "            ", "unit_module", "=", "bottleneck_IR_SE", "\n", "", "self", ".", "input_layer", "=", "paddle", ".", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "3", ",", "64", ",", "(", "3", ",", "3", ")", ",", "1", ",", "1", ",", "bias_attr", "=", "False", ")", ",", "nn", ".", "BatchNorm2D", "(", "64", ")", ",", "\n", "nn", ".", "PReLU", "(", "64", ")", ")", "\n", "if", "input_size", "==", "112", ":", "\n", "            ", "self", ".", "output_layer", "=", "nn", ".", "Sequential", "(", "nn", ".", "BatchNorm2D", "(", "512", ")", ",", "\n", "nn", ".", "Dropout", "(", "drop_ratio", ")", ",", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "512", "*", "7", "*", "7", ",", "512", ")", ",", "\n", "nn", ".", "BatchNorm1D", "(", "512", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "output_layer", "=", "nn", ".", "Sequential", "(", "nn", ".", "BatchNorm2D", "(", "512", ")", ",", "\n", "nn", ".", "Dropout", "(", "drop_ratio", ")", ",", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "512", "*", "14", "*", "14", ",", "512", ")", ",", "\n", "nn", ".", "BatchNorm1D", "(", "512", ")", ")", "\n", "\n", "", "modules", "=", "[", "]", "\n", "for", "block", "in", "blocks", ":", "\n", "            ", "for", "bottleneck", "in", "block", ":", "\n", "                ", "modules", ".", "append", "(", "\n", "unit_module", "(", "bottleneck", ".", "in_channel", ",", "bottleneck", ".", "depth", ",", "\n", "bottleneck", ".", "stride", ")", ")", "\n", "", "", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "modules", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.model_irse.Backbone.forward": [[63, 68], ["model_irse.Backbone.input_layer", "model_irse.Backbone.body", "model_irse.Backbone.output_layer", "helpers.l2_norm"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.l2_norm"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "input_layer", "(", "x", ")", "\n", "x", "=", "self", ".", "body", "(", "x", ")", "\n", "x", "=", "self", ".", "output_layer", "(", "x", ")", "\n", "return", "l2_norm", "(", "x", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.Flatten.forward": [[22, 24], ["paddle.reshape", "paddle.reshape", "paddle.reshape", "paddle.reshape"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "paddle", ".", "reshape", "(", "input", ",", "[", "input", ".", "shape", "[", "0", "]", ",", "-", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.SEModule.__init__": [[72, 87], ["paddle.Layer.__init__", "paddle.AdaptiveAvgPool2D", "paddle.AdaptiveAvgPool2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.ReLU", "paddle.ReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.Sigmoid", "paddle.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channels", ",", "reduction", ")", ":", "\n", "        ", "super", "(", "SEModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2D", "(", "1", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Conv2D", "(", "channels", ",", "\n", "channels", "//", "reduction", ",", "\n", "kernel_size", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Conv2D", "(", "channels", "//", "reduction", ",", "\n", "channels", ",", "\n", "kernel_size", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.SEModule.forward": [[88, 96], ["helpers.SEModule.avg_pool", "helpers.SEModule.fc1", "helpers.SEModule.relu", "helpers.SEModule.fc2", "helpers.SEModule.sigmoid"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.relu"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "module_input", "=", "x", "\n", "x", "=", "self", ".", "avg_pool", "(", "x", ")", "\n", "x", "=", "self", ".", "fc1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "fc2", "(", "x", ")", "\n", "x", "=", "self", ".", "sigmoid", "(", "x", ")", "\n", "return", "module_input", "*", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.bottleneck_IR.__init__": [[100, 114], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.Sequential", "paddle.Sequential", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.PReLU", "paddle.PReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "depth", ",", "stride", ")", ":", "\n", "        ", "super", "(", "bottleneck_IR", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "in_channel", "==", "depth", ":", "\n", "            ", "self", ".", "shortcut_layer", "=", "nn", ".", "MaxPool2D", "(", "1", ",", "stride", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "shortcut_layer", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "in_channel", ",", "depth", ",", "(", "1", ",", "1", ")", ",", "stride", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "depth", ")", ")", "\n", "", "self", ".", "res_layer", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "BatchNorm2D", "(", "in_channel", ")", ",", "\n", "nn", ".", "Conv2D", "(", "in_channel", ",", "depth", ",", "(", "3", ",", "3", ")", ",", "(", "1", ",", "1", ")", ",", "1", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "depth", ")", ",", "\n", "nn", ".", "Conv2D", "(", "depth", ",", "depth", ",", "(", "3", ",", "3", ")", ",", "stride", ",", "1", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "depth", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.bottleneck_IR.forward": [[115, 119], ["helpers.bottleneck_IR.shortcut_layer", "helpers.bottleneck_IR.res_layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "shortcut", "=", "self", ".", "shortcut_layer", "(", "x", ")", "\n", "res", "=", "self", ".", "res_layer", "(", "x", ")", "\n", "return", "res", "+", "shortcut", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.bottleneck_IR_SE.__init__": [[123, 137], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.MaxPool2D", "paddle.MaxPool2D", "paddle.Sequential", "paddle.Sequential", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "paddle.Conv2D", "paddle.Conv2D", "paddle.PReLU", "paddle.PReLU", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D", "helpers.SEModule", "paddle.Conv2D", "paddle.Conv2D", "paddle.BatchNorm2D", "paddle.BatchNorm2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "depth", ",", "stride", ")", ":", "\n", "        ", "super", "(", "bottleneck_IR_SE", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "in_channel", "==", "depth", ":", "\n", "            ", "self", ".", "shortcut_layer", "=", "nn", ".", "MaxPool2D", "(", "1", ",", "stride", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "shortcut_layer", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2D", "(", "in_channel", ",", "depth", ",", "(", "1", ",", "1", ")", ",", "stride", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "depth", ")", ")", "\n", "", "self", ".", "res_layer", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "BatchNorm2D", "(", "in_channel", ")", ",", "\n", "nn", ".", "Conv2D", "(", "in_channel", ",", "depth", ",", "(", "3", ",", "3", ")", ",", "(", "1", ",", "1", ")", ",", "1", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "depth", ")", ",", "\n", "nn", ".", "Conv2D", "(", "depth", ",", "depth", ",", "(", "3", ",", "3", ")", ",", "stride", ",", "1", ",", "bias_attr", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2D", "(", "depth", ")", ",", "SEModule", "(", "depth", ",", "16", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.bottleneck_IR_SE.forward": [[138, 142], ["helpers.bottleneck_IR_SE.shortcut_layer", "helpers.bottleneck_IR_SE.res_layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "shortcut", "=", "self", ".", "shortcut_layer", "(", "x", ")", "\n", "res", "=", "self", ".", "res_layer", "(", "x", ")", "\n", "return", "res", "+", "shortcut", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.l2_norm": [[26, 30], ["paddle.norm", "paddle.norm", "paddle.divide", "paddle.divide"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.deoldify_predictor.DeOldifyPredictor.norm"], ["", "", "def", "l2_norm", "(", "input", ",", "axis", "=", "1", ")", ":", "\n", "    ", "norm", "=", "paddle", ".", "norm", "(", "input", ",", "2", ",", "axis", ",", "True", ")", "\n", "output", "=", "paddle", ".", "divide", "(", "input", ",", "norm", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.get_block": [[36, 39], ["helpers.Bottleneck", "helpers.Bottleneck", "range"], "function", ["None"], ["", "def", "get_block", "(", "in_channel", ",", "depth", ",", "num_units", ",", "stride", "=", "2", ")", ":", "\n", "    ", "return", "[", "Bottleneck", "(", "in_channel", ",", "depth", ",", "stride", ")", "\n", "]", "+", "[", "Bottleneck", "(", "depth", ",", "depth", ",", "1", ")", "for", "i", "in", "range", "(", "num_units", "-", "1", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.get_blocks": [[41, 68], ["helpers.get_block", "helpers.get_block", "helpers.get_block", "helpers.get_block", "helpers.get_block", "helpers.get_block", "helpers.get_block", "helpers.get_block", "ValueError", "helpers.get_block", "helpers.get_block", "helpers.get_block", "helpers.get_block"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.get_block", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.get_block", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.get_block", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.get_block", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.get_block", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.get_block", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.get_block", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.get_block", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.get_block", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.get_block", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.get_block", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.helpers.get_block"], ["", "def", "get_blocks", "(", "num_layers", ")", ":", "\n", "    ", "if", "num_layers", "==", "50", ":", "\n", "        ", "blocks", "=", "[", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "64", ",", "num_units", "=", "3", ")", ",", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "128", ",", "num_units", "=", "4", ")", ",", "\n", "get_block", "(", "in_channel", "=", "128", ",", "depth", "=", "256", ",", "num_units", "=", "14", ")", ",", "\n", "get_block", "(", "in_channel", "=", "256", ",", "depth", "=", "512", ",", "num_units", "=", "3", ")", "\n", "]", "\n", "", "elif", "num_layers", "==", "100", ":", "\n", "        ", "blocks", "=", "[", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "64", ",", "num_units", "=", "3", ")", ",", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "128", ",", "num_units", "=", "13", ")", ",", "\n", "get_block", "(", "in_channel", "=", "128", ",", "depth", "=", "256", ",", "num_units", "=", "30", ")", ",", "\n", "get_block", "(", "in_channel", "=", "256", ",", "depth", "=", "512", ",", "num_units", "=", "3", ")", "\n", "]", "\n", "", "elif", "num_layers", "==", "152", ":", "\n", "        ", "blocks", "=", "[", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "64", ",", "num_units", "=", "3", ")", ",", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "128", ",", "num_units", "=", "8", ")", ",", "\n", "get_block", "(", "in_channel", "=", "128", ",", "depth", "=", "256", ",", "num_units", "=", "36", ")", ",", "\n", "get_block", "(", "in_channel", "=", "256", ",", "depth", "=", "512", ",", "num_units", "=", "3", ")", "\n", "]", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "\"Invalid number of layers: {}. Must be one of [50, 100, 152]\"", ".", "\n", "format", "(", "num_layers", ")", ")", "\n", "", "return", "blocks", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.id_loss.IDLoss.__init__": [[31, 49], ["super().__init__", "print", "model_irse.Backbone", "os.path.join", "id_loss.IDLoss.facenet.load_dict", "paddle.nn.AdaptiveAvgPool2D", "id_loss.IDLoss.facenet.eval", "os.path.isfile", "ppgan.utils.download.get_path_from_url", "paddle.load"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.download.get_path_from_url", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["    ", "def", "__init__", "(", "self", ",", "base_dir", "=", "'./'", ")", ":", "\n", "        ", "super", "(", "IDLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "print", "(", "'Loading ResNet ArcFace'", ")", "\n", "self", ".", "facenet", "=", "Backbone", "(", "input_size", "=", "112", ",", "\n", "num_layers", "=", "50", ",", "\n", "drop_ratio", "=", "0.6", ",", "\n", "mode", "=", "'ir_se'", ")", "\n", "\n", "facenet_weights_path", "=", "os", ".", "path", ".", "join", "(", "base_dir", ",", "'data/gpen/weights'", ",", "\n", "'model_ir_se50.pdparams'", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "facenet_weights_path", ")", ":", "\n", "            ", "facenet_weights_path", "=", "get_path_from_url", "(", "model_cfgs", "[", "'model_urls'", "]", ")", "\n", "\n", "", "self", ".", "facenet", ".", "load_dict", "(", "paddle", ".", "load", "(", "facenet_weights_path", ")", ")", "\n", "\n", "self", ".", "face_pool", "=", "paddle", ".", "nn", ".", "AdaptiveAvgPool2D", "(", "(", "112", ",", "112", ")", ")", "\n", "self", ".", "facenet", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.id_loss.IDLoss.extract_feats": [[50, 66], ["paddle.vision.transforms.Resize", "range", "id_loss.IDLoss.facenet", "paddle.vision.transforms.Resize.unsqueeze", "paddle.concat", "paddle.vision.transforms.Resize."], "methods", ["None"], ["", "def", "extract_feats", "(", "self", ",", "x", ")", ":", "\n", "        ", "_", ",", "_", ",", "h", ",", "w", "=", "x", ".", "shape", "\n", "assert", "h", "==", "w", "\n", "ss", "=", "h", "//", "256", "\n", "x", "=", "x", "[", ":", ",", ":", ",", "35", "*", "ss", ":", "-", "33", "*", "ss", ",", "32", "*", "ss", ":", "-", "36", "*", "ss", "]", "\n", "transform", "=", "Resize", "(", "size", "=", "(", "112", ",", "112", ")", ")", "\n", "\n", "for", "num", "in", "range", "(", "x", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "mid_feats", "=", "transform", "(", "x", "[", "num", "]", ")", ".", "unsqueeze", "(", "0", ")", "\n", "if", "num", "==", "0", ":", "\n", "                ", "x_feats", "=", "mid_feats", "\n", "", "else", ":", "\n", "                ", "x_feats", "=", "paddle", ".", "concat", "(", "[", "x_feats", ",", "mid_feats", "]", ",", "axis", "=", "0", ")", "\n", "\n", "", "", "x_feats", "=", "self", ".", "facenet", "(", "x_feats", ")", "\n", "return", "x_feats", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.id_loss.IDLoss.forward": [[67, 80], ["id_loss.IDLoss.extract_feats", "id_loss.IDLoss.extract_feats", "y_feats.detach.detach.detach", "range", "y_hat_feats[].dot"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.id_loss.IDLoss.extract_feats", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.IDLoss.id_loss.IDLoss.extract_feats"], ["", "def", "forward", "(", "self", ",", "y_hat", ",", "y", ",", "x", ")", ":", "\n", "        ", "n_samples", "=", "x", ".", "shape", "[", "0", "]", "\n", "y_feats", "=", "self", ".", "extract_feats", "(", "y", ")", "\n", "y_hat_feats", "=", "self", ".", "extract_feats", "(", "y_hat", ")", "\n", "y_feats", "=", "y_feats", ".", "detach", "(", ")", "\n", "loss", "=", "0", "\n", "count", "=", "0", "\n", "for", "i", "in", "range", "(", "n_samples", ")", ":", "\n", "            ", "diff_target", "=", "y_hat_feats", "[", "i", "]", ".", "dot", "(", "y_feats", "[", "i", "]", ")", "\n", "loss", "+=", "1", "-", "diff_target", "\n", "count", "+=", "1", "\n", "\n", "", "return", "loss", "/", "count", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.IterLoader.__init__": [[35, 40], ["iter"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dataloader", ")", ":", "\n", "        ", "self", ".", "_dataloader", "=", "dataloader", "\n", "self", ".", "iter_loader", "=", "iter", "(", "self", ".", "_dataloader", ")", "\n", "self", ".", "_epoch", "=", "1", "\n", "self", ".", "_inner_iter", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.IterLoader.epoch": [[41, 44], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "epoch", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_epoch", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.IterLoader.__next__": [[45, 59], ["next", "iter", "next", "len"], "methods", ["None"], ["", "def", "__next__", "(", "self", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "if", "sys", ".", "platform", "==", "\"Windows\"", "and", "self", ".", "_inner_iter", "==", "len", "(", "\n", "self", ".", "_dataloader", ")", "-", "1", ":", "\n", "                ", "self", ".", "_inner_iter", "=", "0", "\n", "raise", "StopIteration", "\n", "", "data", "=", "next", "(", "self", ".", "iter_loader", ")", "\n", "", "except", "StopIteration", ":", "\n", "            ", "self", ".", "_epoch", "+=", "1", "\n", "self", ".", "iter_loader", "=", "iter", "(", "self", ".", "_dataloader", ")", "\n", "data", "=", "next", "(", "self", ".", "iter_loader", ")", "\n", "\n", "", "self", ".", "_inner_iter", "+=", "1", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.IterLoader.__len__": [[60, 62], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "_dataloader", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.__init__": [[82, 159], ["logging.getLogger", "cfg.model.get", "models.builder.build_model", "cfg.get", "cfg.get", "datasets.builder.build_dataloader", "len", "trainer.Trainer.model.setup_lr_schedulers", "trainer.Trainer.model.setup_optimizers", "cfg.get", "trainer.Trainer.model.set_total_iter", "paddle.distributed.ParallelEnv", "paddle.distributed.ParallelEnv", "trainer.Trainer.distributed_data_parallel", "trainer.Trainer.model.setup_metrics", "visualdl.LogWriter", "cfg.get", "cfg.validate.get", "paddle.distributed.ParallelEnv"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.build_model", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.builder.build_dataloader", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.setup_lr_schedulers", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.photopen_model.PhotoPenModel.setup_optimizers", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.set_total_iter", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.distributed_data_parallel", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.setup_metrics", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get"], ["def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "# base config", "\n", "        ", "self", ".", "logger", "=", "logging", ".", "getLogger", "(", "__name__", ")", "\n", "self", ".", "cfg", "=", "cfg", "\n", "self", ".", "output_dir", "=", "cfg", ".", "output_dir", "\n", "self", ".", "max_eval_steps", "=", "cfg", ".", "model", ".", "get", "(", "'max_eval_steps'", ",", "None", ")", "\n", "\n", "self", ".", "local_rank", "=", "ParallelEnv", "(", ")", ".", "local_rank", "\n", "self", ".", "world_size", "=", "ParallelEnv", "(", ")", ".", "nranks", "\n", "self", ".", "log_interval", "=", "cfg", ".", "log_config", ".", "interval", "\n", "self", ".", "visual_interval", "=", "cfg", ".", "log_config", ".", "visiual_interval", "\n", "self", ".", "weight_interval", "=", "cfg", ".", "snapshot_config", ".", "interval", "\n", "\n", "self", ".", "start_epoch", "=", "1", "\n", "self", ".", "current_epoch", "=", "1", "\n", "self", ".", "current_iter", "=", "1", "\n", "self", ".", "inner_iter", "=", "1", "\n", "self", ".", "batch_id", "=", "0", "\n", "self", ".", "global_steps", "=", "0", "\n", "\n", "# build model", "\n", "self", ".", "model", "=", "build_model", "(", "cfg", ".", "model", ")", "\n", "# multiple gpus prepare", "\n", "if", "ParallelEnv", "(", ")", ".", "nranks", ">", "1", ":", "\n", "            ", "self", ".", "distributed_data_parallel", "(", ")", "\n", "\n", "# build metrics", "\n", "", "self", ".", "metrics", "=", "None", "\n", "self", ".", "is_save_img", "=", "True", "\n", "validate_cfg", "=", "cfg", ".", "get", "(", "'validate'", ",", "None", ")", "\n", "if", "validate_cfg", "and", "'metrics'", "in", "validate_cfg", ":", "\n", "            ", "self", ".", "metrics", "=", "self", ".", "model", ".", "setup_metrics", "(", "validate_cfg", "[", "'metrics'", "]", ")", "\n", "", "if", "validate_cfg", "and", "'save_img'", "in", "validate_cfg", ":", "\n", "            ", "self", ".", "is_save_img", "=", "validate_cfg", "[", "'save_img'", "]", "\n", "\n", "", "self", ".", "enable_visualdl", "=", "cfg", ".", "get", "(", "'enable_visualdl'", ",", "False", ")", "\n", "if", "self", ".", "enable_visualdl", ":", "\n", "            ", "import", "visualdl", "\n", "self", ".", "vdl_logger", "=", "visualdl", ".", "LogWriter", "(", "logdir", "=", "cfg", ".", "output_dir", ")", "\n", "\n", "# evaluate only", "\n", "", "if", "not", "cfg", ".", "is_train", ":", "\n", "            ", "return", "\n", "\n", "# build train dataloader", "\n", "", "self", ".", "train_dataloader", "=", "build_dataloader", "(", "cfg", ".", "dataset", ".", "train", ")", "\n", "self", ".", "iters_per_epoch", "=", "len", "(", "self", ".", "train_dataloader", ")", "\n", "\n", "# build lr scheduler", "\n", "# TODO: has a better way?", "\n", "if", "'lr_scheduler'", "in", "cfg", "and", "'iters_per_epoch'", "in", "cfg", ".", "lr_scheduler", ":", "\n", "            ", "cfg", ".", "lr_scheduler", ".", "iters_per_epoch", "=", "self", ".", "iters_per_epoch", "\n", "", "self", ".", "lr_schedulers", "=", "self", ".", "model", ".", "setup_lr_schedulers", "(", "cfg", ".", "lr_scheduler", ")", "\n", "\n", "# build optimizers", "\n", "self", ".", "optimizers", "=", "self", ".", "model", ".", "setup_optimizers", "(", "self", ".", "lr_schedulers", ",", "\n", "cfg", ".", "optimizer", ")", "\n", "\n", "self", ".", "epochs", "=", "cfg", ".", "get", "(", "'epochs'", ",", "None", ")", "\n", "if", "self", ".", "epochs", ":", "\n", "            ", "self", ".", "total_iters", "=", "self", ".", "epochs", "*", "self", ".", "iters_per_epoch", "\n", "self", ".", "by_epoch", "=", "True", "\n", "", "else", ":", "\n", "            ", "self", ".", "by_epoch", "=", "False", "\n", "self", ".", "total_iters", "=", "cfg", ".", "total_iters", "\n", "\n", "", "if", "self", ".", "by_epoch", ":", "\n", "            ", "self", ".", "weight_interval", "*=", "self", ".", "iters_per_epoch", "\n", "\n", "", "self", ".", "validate_interval", "=", "-", "1", "\n", "if", "cfg", ".", "get", "(", "'validate'", ",", "None", ")", "is", "not", "None", ":", "\n", "            ", "self", ".", "validate_interval", "=", "cfg", ".", "validate", ".", "get", "(", "'interval'", ",", "-", "1", ")", "\n", "\n", "", "self", ".", "time_count", "=", "{", "}", "\n", "self", ".", "best_metric", "=", "{", "}", "\n", "self", ".", "model", ".", "set_total_iter", "(", "self", ".", "total_iters", ")", "\n", "self", ".", "profiler_options", "=", "cfg", ".", "profiler_options", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.distributed_data_parallel": [[160, 166], ["paddle.distributed.init_parallel_env", "trainer.Trainer.cfg.get", "trainer.Trainer.model.nets.items", "paddle.DataParallel"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get"], ["", "def", "distributed_data_parallel", "(", "self", ")", ":", "\n", "        ", "paddle", ".", "distributed", ".", "init_parallel_env", "(", ")", "\n", "find_unused_parameters", "=", "self", ".", "cfg", ".", "get", "(", "'find_unused_parameters'", ",", "False", ")", "\n", "for", "net_name", ",", "net", "in", "self", ".", "model", ".", "nets", ".", "items", "(", ")", ":", "\n", "            ", "self", ".", "model", ".", "nets", "[", "net_name", "]", "=", "paddle", ".", "DataParallel", "(", "\n", "net", ",", "find_unused_parameters", "=", "find_unused_parameters", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.learning_rate_scheduler_step": [[167, 177], ["isinstance", "trainer.Trainer.model.lr_scheduler.values", "isinstance", "lr_scheduler.step", "trainer.Trainer.model.lr_scheduler.step", "ValueError"], "methods", ["None"], ["", "", "def", "learning_rate_scheduler_step", "(", "self", ")", ":", "\n", "        ", "if", "isinstance", "(", "self", ".", "model", ".", "lr_scheduler", ",", "dict", ")", ":", "\n", "            ", "for", "lr_scheduler", "in", "self", ".", "model", ".", "lr_scheduler", ".", "values", "(", ")", ":", "\n", "                ", "lr_scheduler", ".", "step", "(", ")", "\n", "", "", "elif", "isinstance", "(", "self", ".", "model", ".", "lr_scheduler", ",", "\n", "paddle", ".", "optimizer", ".", "lr", ".", "LRScheduler", ")", ":", "\n", "            ", "self", ".", "model", ".", "lr_scheduler", ".", "step", "(", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'lr schedulter must be a dict or an instance of LRScheduler'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.train": [[178, 228], ["utils.timer.TimeAverager", "utils.timer.TimeAverager", "trainer.IterLoader", "trainer.Trainer.model.setup_train_mode", "utils.profiler.add_profiler_step", "time.time", "next", "utils.timer.TimeAverager.record", "trainer.Trainer.model.setup_input", "trainer.Trainer.model.train_iter", "utils.timer.TimeAverager.record", "time.time", "trainer.Trainer.learning_rate_scheduler_step", "utils.timer.TimeAverager.get_average", "utils.timer.TimeAverager.get_average", "utils.timer.TimeAverager.get_ips_average", "trainer.Trainer.print_log", "utils.timer.TimeAverager.reset", "utils.timer.TimeAverager.reset", "trainer.Trainer.visual", "trainer.Trainer.test", "trainer.Trainer.save", "trainer.Trainer.save", "time.time", "time.time", "[].get"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.setup_train_mode", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.profiler.add_profiler_step", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.timer.TimeAverager.record", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.setup_input", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.train_iter", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.timer.TimeAverager.record", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.learning_rate_scheduler_step", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.timer.TimeAverager.get_average", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.timer.TimeAverager.get_average", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.timer.TimeAverager.get_ips_average", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.print_log", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid.FID.reset", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid.FID.reset", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.visual", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.test", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get"], ["", "", "def", "train", "(", "self", ")", ":", "\n", "        ", "reader_cost_averager", "=", "TimeAverager", "(", ")", "\n", "batch_cost_averager", "=", "TimeAverager", "(", ")", "\n", "\n", "iter_loader", "=", "IterLoader", "(", "self", ".", "train_dataloader", ")", "\n", "\n", "# set model.is_train = True", "\n", "self", ".", "model", ".", "setup_train_mode", "(", "is_train", "=", "True", ")", "\n", "while", "self", ".", "current_iter", "<", "(", "self", ".", "total_iters", "+", "1", ")", ":", "\n", "            ", "self", ".", "current_epoch", "=", "iter_loader", ".", "epoch", "\n", "self", ".", "inner_iter", "=", "self", ".", "current_iter", "%", "self", ".", "iters_per_epoch", "\n", "\n", "add_profiler_step", "(", "self", ".", "profiler_options", ")", "\n", "\n", "start_time", "=", "step_start_time", "=", "time", ".", "time", "(", ")", "\n", "data", "=", "next", "(", "iter_loader", ")", "\n", "reader_cost_averager", ".", "record", "(", "time", ".", "time", "(", ")", "-", "step_start_time", ")", "\n", "# unpack data from dataset and apply preprocessing", "\n", "# data input should be dict", "\n", "self", ".", "model", ".", "setup_input", "(", "data", ")", "\n", "self", ".", "model", ".", "train_iter", "(", "self", ".", "optimizers", ")", "\n", "\n", "batch_cost_averager", ".", "record", "(", "\n", "time", ".", "time", "(", ")", "-", "step_start_time", ",", "\n", "num_samples", "=", "self", ".", "cfg", "[", "'dataset'", "]", "[", "'train'", "]", ".", "get", "(", "'batch_size'", ",", "1", ")", ")", "\n", "\n", "step_start_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "if", "self", ".", "current_iter", "%", "self", ".", "log_interval", "==", "0", ":", "\n", "                ", "self", ".", "data_time", "=", "reader_cost_averager", ".", "get_average", "(", ")", "\n", "self", ".", "step_time", "=", "batch_cost_averager", ".", "get_average", "(", ")", "\n", "self", ".", "ips", "=", "batch_cost_averager", ".", "get_ips_average", "(", ")", "\n", "self", ".", "print_log", "(", ")", "\n", "\n", "reader_cost_averager", ".", "reset", "(", ")", "\n", "batch_cost_averager", ".", "reset", "(", ")", "\n", "\n", "", "if", "self", ".", "current_iter", "%", "self", ".", "visual_interval", "==", "0", "and", "self", ".", "local_rank", "==", "0", ":", "\n", "                ", "self", ".", "visual", "(", "'visual_train'", ")", "\n", "\n", "", "self", ".", "learning_rate_scheduler_step", "(", ")", "\n", "\n", "if", "self", ".", "validate_interval", ">", "-", "1", "and", "self", ".", "current_iter", "%", "self", ".", "validate_interval", "==", "0", ":", "\n", "                ", "self", ".", "test", "(", ")", "\n", "\n", "", "if", "self", ".", "current_iter", "%", "self", ".", "weight_interval", "==", "0", ":", "\n", "                ", "self", ".", "save", "(", "self", ".", "current_iter", ",", "'weight'", ",", "keep", "=", "-", "1", ")", "\n", "self", ".", "save", "(", "self", ".", "current_iter", ")", "\n", "\n", "", "self", ".", "current_iter", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.test": [[229, 287], ["trainer.IterLoader", "trainer.Trainer.model.setup_train_mode", "range", "hasattr", "datasets.builder.build_dataloader", "len", "trainer.Trainer.metrics.values", "next", "trainer.Trainer.model.setup_input", "trainer.Trainer.model.test_iter", "trainer.Trainer.metrics.items", "metric.reset", "trainer.Trainer.logger.info", "trainer.Trainer.model.get_image_paths", "trainer.Trainer.model.get_current_visuals", "range", "trainer.Trainer.visual", "trainer.Trainer.logger.info", "trainer.Trainer.items", "len", "len", "os.path.basename", "metric.accumulate", "os.path.splitext", "len", "visual_results.update", "visual_results.update", "list", "list", "trainer.Trainer.values", "trainer.Trainer.values"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.setup_train_mode", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.builder.build_dataloader", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.setup_input", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.pix2pix_model.Pix2PixModel.test_iter", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid.FID.reset", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.get_image_paths", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.get_current_visuals", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.visual", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid.FID.accumulate", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update"], ["", "", "def", "test", "(", "self", ")", ":", "\n", "        ", "if", "not", "hasattr", "(", "self", ",", "'test_dataloader'", ")", ":", "\n", "            ", "self", ".", "test_dataloader", "=", "build_dataloader", "(", "self", ".", "cfg", ".", "dataset", ".", "test", ",", "\n", "is_train", "=", "False", ")", "\n", "", "iter_loader", "=", "IterLoader", "(", "self", ".", "test_dataloader", ")", "\n", "if", "self", ".", "max_eval_steps", "is", "None", ":", "\n", "            ", "self", ".", "max_eval_steps", "=", "len", "(", "self", ".", "test_dataloader", ")", "\n", "\n", "", "if", "self", ".", "metrics", ":", "\n", "            ", "for", "metric", "in", "self", ".", "metrics", ".", "values", "(", ")", ":", "\n", "                ", "metric", ".", "reset", "(", ")", "\n", "\n", "# set model.is_train = False", "\n", "", "", "self", ".", "model", ".", "setup_train_mode", "(", "is_train", "=", "False", ")", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "max_eval_steps", ")", ":", "\n", "            ", "if", "self", ".", "max_eval_steps", "<", "self", ".", "log_interval", "or", "i", "%", "self", ".", "log_interval", "==", "0", ":", "\n", "                ", "self", ".", "logger", ".", "info", "(", "'Test iter: [%d/%d]'", "%", "\n", "(", "i", "*", "self", ".", "world_size", ",", "\n", "self", ".", "max_eval_steps", "*", "self", ".", "world_size", ")", ")", "\n", "\n", "", "data", "=", "next", "(", "iter_loader", ")", "\n", "self", ".", "model", ".", "setup_input", "(", "data", ")", "\n", "self", ".", "model", ".", "test_iter", "(", "metrics", "=", "self", ".", "metrics", ")", "\n", "\n", "if", "self", ".", "is_save_img", ":", "\n", "                ", "visual_results", "=", "{", "}", "\n", "current_paths", "=", "self", ".", "model", ".", "get_image_paths", "(", ")", "\n", "current_visuals", "=", "self", ".", "model", ".", "get_current_visuals", "(", ")", "\n", "\n", "if", "len", "(", "current_visuals", ")", ">", "0", "and", "list", "(", "\n", "current_visuals", ".", "values", "(", ")", ")", "[", "0", "]", ".", "shape", "==", "4", ":", "\n", "                    ", "num_samples", "=", "list", "(", "current_visuals", ".", "values", "(", ")", ")", "[", "0", "]", ".", "shape", "[", "0", "]", "\n", "", "else", ":", "\n", "                    ", "num_samples", "=", "1", "\n", "\n", "", "for", "j", "in", "range", "(", "num_samples", ")", ":", "\n", "                    ", "if", "j", "<", "len", "(", "current_paths", ")", ":", "\n", "                        ", "short_path", "=", "os", ".", "path", ".", "basename", "(", "current_paths", "[", "j", "]", ")", "\n", "basename", "=", "os", ".", "path", ".", "splitext", "(", "short_path", ")", "[", "0", "]", "\n", "", "else", ":", "\n", "                        ", "basename", "=", "'{:04d}_{:04d}'", ".", "format", "(", "i", ",", "j", ")", "\n", "", "for", "k", ",", "img_tensor", "in", "current_visuals", ".", "items", "(", ")", ":", "\n", "                        ", "name", "=", "'%s_%s'", "%", "(", "basename", ",", "k", ")", "\n", "if", "len", "(", "img_tensor", ".", "shape", ")", "==", "4", ":", "\n", "                            ", "visual_results", ".", "update", "(", "{", "name", ":", "img_tensor", "[", "j", "]", "}", ")", "\n", "", "else", ":", "\n", "                            ", "visual_results", ".", "update", "(", "{", "name", ":", "img_tensor", "}", ")", "\n", "\n", "", "", "", "self", ".", "visual", "(", "'visual_test'", ",", "\n", "visual_results", "=", "visual_results", ",", "\n", "step", "=", "self", ".", "batch_id", ",", "\n", "is_save_image", "=", "True", ")", "\n", "\n", "", "", "if", "self", ".", "metrics", ":", "\n", "            ", "for", "metric_name", ",", "metric", "in", "self", ".", "metrics", ".", "items", "(", ")", ":", "\n", "                ", "self", ".", "logger", ".", "info", "(", "\"Metric {}: {:.4f}\"", ".", "format", "(", "\n", "metric_name", ",", "metric", ".", "accumulate", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.print_log": [[288, 324], ["trainer.Trainer.model.get_current_losses", "trainer.Trainer.items", "hasattr", "hasattr", "hasattr", "hasattr", "trainer.Trainer.logger.info", "str", "trainer.Trainer.vdl_logger.add_scalar", "datetime.timedelta", "int"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.get_current_losses"], ["", "", "", "def", "print_log", "(", "self", ")", ":", "\n", "        ", "losses", "=", "self", ".", "model", ".", "get_current_losses", "(", ")", "\n", "\n", "message", "=", "''", "\n", "if", "self", ".", "by_epoch", ":", "\n", "            ", "message", "+=", "'Epoch: %d/%d, iter: %d/%d '", "%", "(", "\n", "self", ".", "current_epoch", ",", "self", ".", "epochs", ",", "self", ".", "inner_iter", ",", "\n", "self", ".", "iters_per_epoch", ")", "\n", "", "else", ":", "\n", "            ", "message", "+=", "'Iter: %d/%d '", "%", "(", "self", ".", "current_iter", ",", "self", ".", "total_iters", ")", "\n", "\n", "", "message", "+=", "f'lr: {self.current_learning_rate:.3e} '", "\n", "\n", "for", "k", ",", "v", "in", "losses", ".", "items", "(", ")", ":", "\n", "            ", "message", "+=", "'%s: %.3f '", "%", "(", "k", ",", "v", ")", "\n", "if", "self", ".", "enable_visualdl", ":", "\n", "                ", "self", ".", "vdl_logger", ".", "add_scalar", "(", "k", ",", "v", ",", "step", "=", "self", ".", "global_steps", ")", "\n", "\n", "", "", "if", "hasattr", "(", "self", ",", "'step_time'", ")", ":", "\n", "            ", "message", "+=", "'batch_cost: %.5f sec '", "%", "self", ".", "step_time", "\n", "\n", "", "if", "hasattr", "(", "self", ",", "'data_time'", ")", ":", "\n", "            ", "message", "+=", "'reader_cost: %.5f sec '", "%", "self", ".", "data_time", "\n", "\n", "", "if", "hasattr", "(", "self", ",", "'ips'", ")", ":", "\n", "            ", "message", "+=", "'ips: %.5f images/s '", "%", "self", ".", "ips", "\n", "\n", "", "if", "hasattr", "(", "self", ",", "'step_time'", ")", ":", "\n", "            ", "eta", "=", "self", ".", "step_time", "*", "(", "self", ".", "total_iters", "-", "self", ".", "current_iter", ")", "\n", "eta", "=", "eta", "if", "eta", ">", "0", "else", "0", "\n", "\n", "eta_str", "=", "str", "(", "datetime", ".", "timedelta", "(", "seconds", "=", "int", "(", "eta", ")", ")", ")", "\n", "message", "+=", "f'eta: {eta_str}'", "\n", "\n", "# print the message", "\n", "", "self", ".", "logger", ".", "info", "(", "message", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.current_learning_rate": [[325, 329], ["trainer.Trainer.model.optimizers.values", "optimizer.get_lr"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.solver.lr_scheduler.CosineAnnealingRestartLR.get_lr"], ["", "@", "property", "\n", "def", "current_learning_rate", "(", "self", ")", ":", "\n", "        ", "for", "optimizer", "in", "self", ".", "model", ".", "optimizers", ".", "values", "(", ")", ":", "\n", "            ", "return", "optimizer", ".", "get_lr", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.visual": [[330, 375], ["trainer.Trainer.model.compute_visuals", "trainer.Trainer.cfg.get", "trainer.Trainer.cfg.get", "trainer.Trainer.items", "trainer.Trainer.model.get_current_visuals", "utils.visual.tensor2img", "trainer.Trainer.vdl_logger.add_image", "utils.filesystem.makedirs", "os.path.join", "utils.visual.save_image", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.compute_visuals", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.get_current_visuals", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.tensor2img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.visual.save_image"], ["", "", "def", "visual", "(", "self", ",", "\n", "results_dir", ",", "\n", "visual_results", "=", "None", ",", "\n", "step", "=", "None", ",", "\n", "is_save_image", "=", "False", ")", ":", "\n", "        ", "\"\"\"\n        visual the images, use visualdl or directly write to the directory\n        Parameters:\n            results_dir (str)     --  directory name which contains saved images\n            visual_results (dict) --  the results images dict\n            step (int)            --  global steps, used in visualdl\n            is_save_image (bool)  --  weather write to the directory or visualdl\n        \"\"\"", "\n", "self", ".", "model", ".", "compute_visuals", "(", ")", "\n", "\n", "if", "visual_results", "is", "None", ":", "\n", "            ", "visual_results", "=", "self", ".", "model", ".", "get_current_visuals", "(", ")", "\n", "\n", "", "min_max", "=", "self", ".", "cfg", ".", "get", "(", "'min_max'", ",", "None", ")", "\n", "if", "min_max", "is", "None", ":", "\n", "            ", "min_max", "=", "(", "-", "1.", ",", "1.", ")", "\n", "\n", "", "image_num", "=", "self", ".", "cfg", ".", "get", "(", "'image_num'", ",", "None", ")", "\n", "if", "(", "image_num", "is", "None", ")", "or", "(", "not", "self", ".", "enable_visualdl", ")", ":", "\n", "            ", "image_num", "=", "1", "\n", "", "for", "label", ",", "image", "in", "visual_results", ".", "items", "(", ")", ":", "\n", "            ", "image_numpy", "=", "tensor2img", "(", "image", ",", "min_max", ",", "image_num", ")", "\n", "if", "(", "not", "is_save_image", ")", "and", "self", ".", "enable_visualdl", ":", "\n", "                ", "self", ".", "vdl_logger", ".", "add_image", "(", "\n", "results_dir", "+", "'/'", "+", "label", ",", "\n", "image_numpy", ",", "\n", "step", "=", "step", "if", "step", "else", "self", ".", "global_steps", ",", "\n", "dataformats", "=", "\"HWC\"", "if", "image_num", "==", "1", "else", "\"NCHW\"", ")", "\n", "", "else", ":", "\n", "                ", "if", "self", ".", "cfg", ".", "is_train", ":", "\n", "                    ", "if", "self", ".", "by_epoch", ":", "\n", "                        ", "msg", "=", "'epoch%.3d_'", "%", "self", ".", "current_epoch", "\n", "", "else", ":", "\n", "                        ", "msg", "=", "'iter%.3d_'", "%", "self", ".", "current_iter", "\n", "", "", "else", ":", "\n", "                    ", "msg", "=", "''", "\n", "", "makedirs", "(", "os", ".", "path", ".", "join", "(", "self", ".", "output_dir", ",", "results_dir", ")", ")", "\n", "img_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "output_dir", ",", "results_dir", ",", "\n", "msg", "+", "'%s.png'", "%", "(", "label", ")", ")", "\n", "save_image", "(", "image_numpy", ",", "img_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save": [[376, 422], ["os.makedirs", "os.path.join", "trainer.Trainer.model.nets.items", "trainer.Trainer.model.optimizers.items", "utils.filesystem.save", "net.state_dict", "utils.filesystem.save", "opt.state_dict", "os.path.exists", "os.path.join", "os.path.join", "os.remove", "trainer.Trainer.logger.info"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.save", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.hook.Hooks.remove"], ["", "", "", "def", "save", "(", "self", ",", "epoch", ",", "name", "=", "'checkpoint'", ",", "keep", "=", "1", ")", ":", "\n", "        ", "if", "self", ".", "local_rank", "!=", "0", ":", "\n", "            ", "return", "\n", "\n", "", "assert", "name", "in", "[", "'checkpoint'", ",", "'weight'", "]", "\n", "\n", "state_dicts", "=", "{", "}", "\n", "if", "self", ".", "by_epoch", ":", "\n", "            ", "save_filename", "=", "'epoch_%s_%s.pdparams'", "%", "(", "\n", "epoch", "//", "self", ".", "iters_per_epoch", ",", "name", ")", "\n", "", "else", ":", "\n", "            ", "save_filename", "=", "'iter_%s_%s.pdparams'", "%", "(", "epoch", ",", "name", ")", "\n", "\n", "", "os", ".", "makedirs", "(", "self", ".", "output_dir", ",", "exist_ok", "=", "True", ")", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "output_dir", ",", "save_filename", ")", "\n", "for", "net_name", ",", "net", "in", "self", ".", "model", ".", "nets", ".", "items", "(", ")", ":", "\n", "            ", "state_dicts", "[", "net_name", "]", "=", "net", ".", "state_dict", "(", ")", "\n", "\n", "", "if", "name", "==", "'weight'", ":", "\n", "            ", "save", "(", "state_dicts", ",", "save_path", ")", "\n", "return", "\n", "\n", "", "state_dicts", "[", "'epoch'", "]", "=", "epoch", "\n", "\n", "for", "opt_name", ",", "opt", "in", "self", ".", "model", ".", "optimizers", ".", "items", "(", ")", ":", "\n", "            ", "state_dicts", "[", "opt_name", "]", "=", "opt", ".", "state_dict", "(", ")", "\n", "\n", "", "save", "(", "state_dicts", ",", "save_path", ")", "\n", "\n", "if", "keep", ">", "0", ":", "\n", "            ", "try", ":", "\n", "                ", "if", "self", ".", "by_epoch", ":", "\n", "                    ", "checkpoint_name_to_be_removed", "=", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "output_dir", ",", "'epoch_%s_%s.pdparams'", "%", "\n", "(", "(", "epoch", "-", "keep", "*", "self", ".", "weight_interval", ")", "//", "\n", "self", ".", "iters_per_epoch", ",", "name", ")", ")", "\n", "", "else", ":", "\n", "                    ", "checkpoint_name_to_be_removed", "=", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "output_dir", ",", "'iter_%s_%s.pdparams'", "%", "\n", "(", "epoch", "-", "keep", "*", "self", ".", "weight_interval", ",", "name", ")", ")", "\n", "\n", "", "if", "os", ".", "path", ".", "exists", "(", "checkpoint_name_to_be_removed", ")", ":", "\n", "                    ", "os", ".", "remove", "(", "checkpoint_name_to_be_removed", ")", "\n", "\n", "", "", "except", "Exception", "as", "e", ":", "\n", "                ", "self", ".", "logger", ".", "info", "(", "'remove old checkpoints error: {}'", ".", "format", "(", "e", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.resume": [[423, 436], ["utils.filesystem.load", "trainer.Trainer.model.nets.items", "trainer.Trainer.model.optimizers.items", "utils.filesystem.load.get", "net.set_state_dict", "opt.set_state_dict"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get"], ["", "", "", "def", "resume", "(", "self", ",", "checkpoint_path", ")", ":", "\n", "        ", "state_dicts", "=", "load", "(", "checkpoint_path", ")", "\n", "if", "state_dicts", ".", "get", "(", "'epoch'", ",", "None", ")", "is", "not", "None", ":", "\n", "            ", "self", ".", "start_epoch", "=", "state_dicts", "[", "'epoch'", "]", "+", "1", "\n", "self", ".", "global_steps", "=", "self", ".", "iters_per_epoch", "*", "state_dicts", "[", "'epoch'", "]", "\n", "\n", "self", ".", "current_iter", "=", "state_dicts", "[", "'epoch'", "]", "+", "1", "\n", "\n", "", "for", "net_name", ",", "net", "in", "self", ".", "model", ".", "nets", ".", "items", "(", ")", ":", "\n", "            ", "net", ".", "set_state_dict", "(", "state_dicts", "[", "net_name", "]", ")", "\n", "\n", "", "for", "opt_name", ",", "opt", "in", "self", ".", "model", ".", "optimizers", ".", "items", "(", ")", ":", "\n", "            ", "opt", ".", "set_state_dict", "(", "state_dicts", "[", "opt_name", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load": [[437, 469], ["utils.filesystem.load", "trainer.Trainer.load.is_dict_in_dict_weight"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["", "", "def", "load", "(", "self", ",", "weight_path", ")", ":", "\n", "        ", "state_dicts", "=", "load", "(", "weight_path", ")", "\n", "\n", "def", "is_dict_in_dict_weight", "(", "state_dict", ")", ":", "\n", "            ", "if", "isinstance", "(", "state_dict", ",", "dict", ")", "and", "len", "(", "state_dict", ")", ">", "0", ":", "\n", "                ", "val", "=", "list", "(", "state_dict", ".", "values", "(", ")", ")", "[", "0", "]", "\n", "if", "isinstance", "(", "val", ",", "dict", ")", ":", "\n", "                    ", "return", "True", "\n", "", "else", ":", "\n", "                    ", "return", "False", "\n", "", "", "else", ":", "\n", "                ", "return", "False", "\n", "\n", "", "", "if", "is_dict_in_dict_weight", "(", "state_dicts", ")", ":", "\n", "            ", "for", "net_name", ",", "net", "in", "self", ".", "model", ".", "nets", ".", "items", "(", ")", ":", "\n", "                ", "if", "net_name", "in", "state_dicts", ":", "\n", "                    ", "net", ".", "set_state_dict", "(", "state_dicts", "[", "net_name", "]", ")", "\n", "self", ".", "logger", ".", "info", "(", "\n", "'Loaded pretrained weight for net {}'", ".", "format", "(", "net_name", ")", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "logger", ".", "warning", "(", "\n", "'Can not find state dict of net {}. Skip load pretrained weight for net {}'", "\n", ".", "format", "(", "net_name", ",", "net_name", ")", ")", "\n", "", "", "", "else", ":", "\n", "            ", "assert", "len", "(", "self", ".", "model", ".", "nets", "\n", ")", "==", "1", ",", "'checkpoint only contain weight of one net, \\\n                                                but model contains more than one net!'", "\n", "\n", "net_name", ",", "net", "=", "list", "(", "self", ".", "model", ".", "nets", ".", "items", "(", ")", ")", "[", "0", "]", "\n", "net", ".", "set_state_dict", "(", "state_dicts", ")", "\n", "self", ".", "logger", ".", "info", "(", "\n", "'Loaded pretrained weight for net {}'", ".", "format", "(", "net_name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.close": [[470, 476], ["trainer.Trainer.vdl_logger.close"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.close"], ["", "", "def", "close", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        when finish the training need close file handler or other.\n        \"\"\"", "\n", "if", "self", ".", "enable_visualdl", ":", "\n", "            ", "self", ".", "vdl_logger", ".", "close", "(", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.inception.InceptionV3.__init__": [[23, 105], ["paddle.Layer.__init__", "sorted", "max", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "paddle.nn.MaxPool2D", "paddle.nn.MaxPool2D", "inception.InceptionV3.blocks.append", "paddle.Sequential", "paddle.Sequential", "inception.ConvBNLayer", "inception.ConvBNLayer", "paddle.nn.MaxPool2D", "paddle.nn.MaxPool2D", "inception.InceptionV3.blocks.append", "inception.Fid_inceptionA", "inception.Fid_inceptionA", "inception.Fid_inceptionA", "inception.InceptionB", "inception.Fid_inceptionC", "inception.Fid_inceptionC", "inception.Fid_inceptionC", "inception.Fid_inceptionC", "inception.InceptionV3.blocks.append", "inception.InceptionAux", "inception.InceptionD", "inception.Fid_inceptionE_1", "inception.Fid_inceptionE_2", "paddle.nn.AdaptiveAvgPool2D", "paddle.nn.AdaptiveAvgPool2D", "inception.InceptionV3.blocks.append", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential", "paddle.Sequential"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["def", "__init__", "(", "self", ",", "\n", "output_blocks", "=", "[", "DEFAULT_BLOCK_INDEX", "]", ",", "\n", "class_dim", "=", "1000", ",", "\n", "aux_logits", "=", "False", ",", "\n", "resize_input", "=", "True", ",", "\n", "normalize_input", "=", "True", ")", ":", "\n", "        ", "super", "(", "InceptionV3", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "resize_input", "=", "resize_input", "\n", "self", ".", "normalize_input", "=", "normalize_input", "\n", "self", ".", "output_blocks", "=", "sorted", "(", "output_blocks", ")", "\n", "self", ".", "last_needed_block", "=", "max", "(", "output_blocks", ")", "\n", "self", ".", "class_dim", "=", "class_dim", "\n", "self", ".", "aux_logits", "=", "aux_logits", "\n", "\n", "assert", "self", ".", "last_needed_block", "<=", "3", ",", "'Last possible output block index is 3'", "\n", "self", ".", "blocks", "=", "[", "]", "\n", "\n", "self", ".", "Conv2d_1a_3x3", "=", "ConvBNLayer", "(", "3", ",", "\n", "32", ",", "\n", "3", ",", "\n", "stride", "=", "2", ",", "\n", "name", "=", "'Conv2d_1a_3x3'", ")", "\n", "self", ".", "Conv2d_2a_3x3", "=", "ConvBNLayer", "(", "32", ",", "32", ",", "3", ",", "name", "=", "'Conv2d_2a_3x3'", ")", "\n", "self", ".", "Conv2d_2b_3x3", "=", "ConvBNLayer", "(", "32", ",", "\n", "64", ",", "\n", "3", ",", "\n", "padding", "=", "1", ",", "\n", "name", "=", "'Conv2d_2b_3x3'", ")", "\n", "self", ".", "maxpool1", "=", "MaxPool2D", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "\n", "block0", "=", "[", "\n", "self", ".", "Conv2d_1a_3x3", ",", "self", ".", "Conv2d_2a_3x3", ",", "self", ".", "Conv2d_2b_3x3", ",", "\n", "self", ".", "maxpool1", "\n", "]", "\n", "self", ".", "blocks", ".", "append", "(", "nn", ".", "Sequential", "(", "*", "block0", ")", ")", "\n", "### block1", "\n", "\n", "if", "self", ".", "last_needed_block", ">=", "1", ":", "\n", "            ", "self", ".", "Conv2d_3b_1x1", "=", "ConvBNLayer", "(", "64", ",", "80", ",", "1", ",", "name", "=", "'Conv2d_3b_1x1'", ")", "\n", "self", ".", "Conv2d_4a_3x3", "=", "ConvBNLayer", "(", "80", ",", "192", ",", "3", ",", "name", "=", "'Conv2d_4a_3x3'", ")", "\n", "self", ".", "maxpool2", "=", "MaxPool2D", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "block1", "=", "[", "self", ".", "Conv2d_3b_1x1", ",", "self", ".", "Conv2d_4a_3x3", ",", "self", ".", "maxpool2", "]", "\n", "self", ".", "blocks", ".", "append", "(", "nn", ".", "Sequential", "(", "*", "block1", ")", ")", "\n", "\n", "### block2", "\n", "### Mixed_5b 5c 5d", "\n", "", "if", "self", ".", "last_needed_block", ">=", "2", ":", "\n", "            ", "self", ".", "Mixed_5b", "=", "Fid_inceptionA", "(", "192", ",", "\n", "pool_features", "=", "32", ",", "\n", "name", "=", "'Mixed_5b'", ")", "\n", "self", ".", "Mixed_5c", "=", "Fid_inceptionA", "(", "256", ",", "\n", "pool_features", "=", "64", ",", "\n", "name", "=", "'Mixed_5c'", ")", "\n", "self", ".", "Mixed_5d", "=", "Fid_inceptionA", "(", "288", ",", "\n", "pool_features", "=", "64", ",", "\n", "name", "=", "'Mixed_5d'", ")", "\n", "\n", "### Mixed_6", "\n", "self", ".", "Mixed_6a", "=", "InceptionB", "(", "288", ",", "name", "=", "'Mixed_6a'", ")", "\n", "self", ".", "Mixed_6b", "=", "Fid_inceptionC", "(", "768", ",", "c7", "=", "128", ",", "name", "=", "'Mixed_6b'", ")", "\n", "self", ".", "Mixed_6c", "=", "Fid_inceptionC", "(", "768", ",", "c7", "=", "160", ",", "name", "=", "'Mixed_6c'", ")", "\n", "self", ".", "Mixed_6d", "=", "Fid_inceptionC", "(", "768", ",", "c7", "=", "160", ",", "name", "=", "'Mixed_6d'", ")", "\n", "self", ".", "Mixed_6e", "=", "Fid_inceptionC", "(", "768", ",", "c7", "=", "192", ",", "name", "=", "'Mixed_6e'", ")", "\n", "\n", "block2", "=", "[", "\n", "self", ".", "Mixed_5b", ",", "self", ".", "Mixed_5c", ",", "self", ".", "Mixed_5d", ",", "self", ".", "Mixed_6a", ",", "\n", "self", ".", "Mixed_6b", ",", "self", ".", "Mixed_6c", ",", "self", ".", "Mixed_6d", ",", "self", ".", "Mixed_6e", "\n", "]", "\n", "self", ".", "blocks", ".", "append", "(", "nn", ".", "Sequential", "(", "*", "block2", ")", ")", "\n", "\n", "", "if", "self", ".", "aux_logits", ":", "\n", "            ", "self", ".", "AuxLogits", "=", "InceptionAux", "(", "768", ",", "self", ".", "class_dim", ",", "name", "=", "'AuxLogits'", ")", "\n", "### block3", "\n", "### Mixed_7", "\n", "", "if", "self", ".", "last_needed_block", ">=", "3", ":", "\n", "            ", "self", ".", "Mixed_7a", "=", "InceptionD", "(", "768", ",", "name", "=", "'Mixed_7a'", ")", "\n", "self", ".", "Mixed_7b", "=", "Fid_inceptionE_1", "(", "1280", ",", "name", "=", "'Mixed_7b'", ")", "\n", "self", ".", "Mixed_7c", "=", "Fid_inceptionE_2", "(", "2048", ",", "name", "=", "'Mixed_7c'", ")", "\n", "self", ".", "avgpool", "=", "AdaptiveAvgPool2D", "(", "output_size", "=", "1", ")", "\n", "\n", "block3", "=", "[", "self", ".", "Mixed_7a", ",", "self", ".", "Mixed_7b", ",", "self", ".", "Mixed_7c", ",", "self", ".", "avgpool", "]", "\n", "self", ".", "blocks", ".", "append", "(", "nn", ".", "Sequential", "(", "*", "block3", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.inception.InceptionV3.forward": [[106, 129], ["enumerate", "paddle.functional.interpolate", "paddle.functional.interpolate", "block", "inception.InceptionV3.AuxLogits", "out.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "[", "]", "\n", "aux", "=", "None", "\n", "if", "self", ".", "resize_input", ":", "\n", "            ", "x", "=", "nn", ".", "functional", ".", "interpolate", "(", "x", ",", "\n", "size", "=", "[", "299", ",", "299", "]", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "False", ",", "\n", "align_mode", "=", "0", ")", "\n", "\n", "", "if", "self", ".", "normalize_input", ":", "\n", "            ", "x", "=", "x", "*", "2", "-", "1", "\n", "\n", "", "for", "idx", ",", "block", "in", "enumerate", "(", "self", ".", "blocks", ")", ":", "\n", "            ", "x", "=", "block", "(", "x", ")", "\n", "if", "self", ".", "aux_logits", "and", "(", "idx", "==", "2", ")", ":", "\n", "                ", "aux", "=", "self", ".", "AuxLogits", "(", "x", ")", "\n", "", "if", "idx", "in", "self", ".", "output_blocks", ":", "\n", "                ", "out", ".", "append", "(", "x", ")", "\n", "", "if", "idx", "==", "self", ".", "last_needed_block", ":", "\n", "                ", "break", "\n", "\n", "", "", "return", "out", ",", "aux", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.inception.InceptionA.__init__": [[132, 172], ["paddle.Layer.__init__", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "paddle.nn.AvgPool2D", "paddle.nn.AvgPool2D", "inception.ConvBNLayer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "pool_features", ",", "name", "=", "None", ")", ":", "\n", "        ", "super", "(", "InceptionA", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "branch1x1", "=", "ConvBNLayer", "(", "in_channels", ",", "\n", "64", ",", "\n", "1", ",", "\n", "name", "=", "name", "+", "'.branch1x1'", ")", "\n", "\n", "self", ".", "branch5x5_1", "=", "ConvBNLayer", "(", "in_channels", ",", "\n", "48", ",", "\n", "1", ",", "\n", "name", "=", "name", "+", "'.branch5x5_1'", ")", "\n", "self", ".", "branch5x5_2", "=", "ConvBNLayer", "(", "48", ",", "\n", "64", ",", "\n", "5", ",", "\n", "padding", "=", "2", ",", "\n", "name", "=", "name", "+", "'.branch5x5_2'", ")", "\n", "\n", "self", ".", "branch3x3dbl_1", "=", "ConvBNLayer", "(", "in_channels", ",", "\n", "64", ",", "\n", "1", ",", "\n", "name", "=", "name", "+", "'.branch3x3dbl_1'", ")", "\n", "self", ".", "branch3x3dbl_2", "=", "ConvBNLayer", "(", "64", ",", "\n", "96", ",", "\n", "3", ",", "\n", "padding", "=", "1", ",", "\n", "name", "=", "name", "+", "'.branch3x3dbl_2'", ")", "\n", "self", ".", "branch3x3dbl_3", "=", "ConvBNLayer", "(", "96", ",", "\n", "96", ",", "\n", "3", ",", "\n", "padding", "=", "1", ",", "\n", "name", "=", "name", "+", "'.branch3x3dbl_3'", ")", "\n", "\n", "self", ".", "branch_pool0", "=", "AvgPool2D", "(", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "exclusive", "=", "True", ")", "\n", "self", ".", "branch_pool", "=", "ConvBNLayer", "(", "in_channels", ",", "\n", "pool_features", ",", "\n", "1", ",", "\n", "name", "=", "name", "+", "'.branch_pool'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.inception.InceptionA.forward": [[173, 187], ["inception.InceptionA.branch1x1", "inception.InceptionA.branch5x5_1", "inception.InceptionA.branch5x5_2", "inception.InceptionA.branch3x3dbl_1", "inception.InceptionA.branch3x3dbl_2", "inception.InceptionA.branch3x3dbl_3", "inception.InceptionA.branch_pool0", "inception.InceptionA.branch_pool", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "branch1x1", "=", "self", ".", "branch1x1", "(", "x", ")", "\n", "\n", "branch5x5", "=", "self", ".", "branch5x5_1", "(", "x", ")", "\n", "branch5x5", "=", "self", ".", "branch5x5_2", "(", "branch5x5", ")", "\n", "\n", "branch3x3dbl", "=", "self", ".", "branch3x3dbl_1", "(", "x", ")", "\n", "branch3x3dbl", "=", "self", ".", "branch3x3dbl_2", "(", "branch3x3dbl", ")", "\n", "branch3x3dbl", "=", "self", ".", "branch3x3dbl_3", "(", "branch3x3dbl", ")", "\n", "\n", "branch_pool", "=", "self", ".", "branch_pool0", "(", "x", ")", "\n", "branch_pool", "=", "self", ".", "branch_pool", "(", "branch_pool", ")", "\n", "return", "paddle", ".", "concat", "(", "\n", "[", "branch1x1", ",", "branch5x5", ",", "branch3x3dbl", ",", "branch_pool", "]", ",", "axis", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.inception.InceptionB.__init__": [[190, 214], ["paddle.Layer.__init__", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "paddle.nn.MaxPool2D", "paddle.nn.MaxPool2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "name", "=", "None", ")", ":", "\n", "        ", "super", "(", "InceptionB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "branch3x3", "=", "ConvBNLayer", "(", "in_channels", ",", "\n", "384", ",", "\n", "3", ",", "\n", "stride", "=", "2", ",", "\n", "name", "=", "name", "+", "'.branch3x3'", ")", "\n", "\n", "self", ".", "branch3x3dbl_1", "=", "ConvBNLayer", "(", "in_channels", ",", "\n", "64", ",", "\n", "1", ",", "\n", "name", "=", "name", "+", "'.branch3x3dbl_1'", ")", "\n", "self", ".", "branch3x3dbl_2", "=", "ConvBNLayer", "(", "64", ",", "\n", "96", ",", "\n", "3", ",", "\n", "padding", "=", "1", ",", "\n", "name", "=", "name", "+", "'.branch3x3dbl_2'", ")", "\n", "self", ".", "branch3x3dbl_3", "=", "ConvBNLayer", "(", "96", ",", "\n", "96", ",", "\n", "3", ",", "\n", "stride", "=", "2", ",", "\n", "name", "=", "name", "+", "'.branch3x3dbl_3'", ")", "\n", "\n", "self", ".", "branch_pool", "=", "MaxPool2D", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.inception.InceptionB.forward": [[215, 225], ["inception.InceptionB.branch3x3", "inception.InceptionB.branch3x3dbl_1", "inception.InceptionB.branch3x3dbl_2", "inception.InceptionB.branch3x3dbl_3", "inception.InceptionB.branch_pool", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "branch3x3", "=", "self", ".", "branch3x3", "(", "x", ")", "\n", "\n", "branch3x3dbl", "=", "self", ".", "branch3x3dbl_1", "(", "x", ")", "\n", "branch3x3dbl", "=", "self", ".", "branch3x3dbl_2", "(", "branch3x3dbl", ")", "\n", "branch3x3dbl", "=", "self", ".", "branch3x3dbl_3", "(", "branch3x3dbl", ")", "\n", "\n", "branch_pool", "=", "self", ".", "branch_pool", "(", "x", ")", "\n", "return", "paddle", ".", "concat", "(", "[", "branch3x3", ",", "branch3x3dbl", ",", "branch_pool", "]", ",", "\n", "axis", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.inception.InceptionC.__init__": [[228, 277], ["paddle.Layer.__init__", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "paddle.nn.AvgPool2D", "paddle.nn.AvgPool2D", "inception.ConvBNLayer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "c7", ",", "name", "=", "None", ")", ":", "\n", "        ", "super", "(", "InceptionC", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "branch1x1", "=", "ConvBNLayer", "(", "in_channels", ",", "\n", "192", ",", "\n", "1", ",", "\n", "name", "=", "name", "+", "'.branch1x1'", ")", "\n", "\n", "self", ".", "branch7x7_1", "=", "ConvBNLayer", "(", "in_channels", ",", "\n", "c7", ",", "\n", "1", ",", "\n", "name", "=", "name", "+", "'.branch7x7_1'", ")", "\n", "self", ".", "branch7x7_2", "=", "ConvBNLayer", "(", "c7", ",", "\n", "c7", ",", "(", "1", ",", "7", ")", ",", "\n", "padding", "=", "(", "0", ",", "3", ")", ",", "\n", "name", "=", "name", "+", "'.branch7x7_2'", ")", "\n", "self", ".", "branch7x7_3", "=", "ConvBNLayer", "(", "c7", ",", "\n", "192", ",", "(", "7", ",", "1", ")", ",", "\n", "padding", "=", "(", "3", ",", "0", ")", ",", "\n", "name", "=", "name", "+", "'.branch7x7_3'", ")", "\n", "\n", "self", ".", "branch7x7dbl_1", "=", "ConvBNLayer", "(", "in_channels", ",", "\n", "c7", ",", "\n", "1", ",", "\n", "name", "=", "name", "+", "'.branch7x7dbl_1'", ")", "\n", "self", ".", "branch7x7dbl_2", "=", "ConvBNLayer", "(", "c7", ",", "\n", "c7", ",", "(", "7", ",", "1", ")", ",", "\n", "padding", "=", "(", "3", ",", "0", ")", ",", "\n", "name", "=", "name", "+", "'.branch7x7dbl_2'", ")", "\n", "self", ".", "branch7x7dbl_3", "=", "ConvBNLayer", "(", "c7", ",", "\n", "c7", ",", "(", "1", ",", "7", ")", ",", "\n", "padding", "=", "(", "0", ",", "3", ")", ",", "\n", "name", "=", "name", "+", "'.branch7x7dbl_3'", ")", "\n", "self", ".", "branch7x7dbl_4", "=", "ConvBNLayer", "(", "c7", ",", "\n", "c7", ",", "(", "7", ",", "1", ")", ",", "\n", "padding", "=", "(", "3", ",", "0", ")", ",", "\n", "name", "=", "name", "+", "'.branch7x7dbl_4'", ")", "\n", "self", ".", "branch7x7dbl_5", "=", "ConvBNLayer", "(", "c7", ",", "\n", "192", ",", "(", "1", ",", "7", ")", ",", "\n", "padding", "=", "(", "0", ",", "3", ")", ",", "\n", "name", "=", "name", "+", "'.branch7x7dbl_5'", ")", "\n", "\n", "self", ".", "branch_pool0", "=", "AvgPool2D", "(", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "exclusive", "=", "True", ")", "\n", "self", ".", "branch_pool", "=", "ConvBNLayer", "(", "in_channels", ",", "\n", "192", ",", "\n", "1", ",", "\n", "name", "=", "name", "+", "'.branch_pool'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.inception.InceptionC.forward": [[278, 296], ["inception.InceptionC.branch1x1", "inception.InceptionC.branch7x7_1", "inception.InceptionC.branch7x7_2", "inception.InceptionC.branch7x7_3", "inception.InceptionC.branch7x7dbl_1", "inception.InceptionC.branch7x7dbl_2", "inception.InceptionC.branch7x7dbl_3", "inception.InceptionC.branch7x7dbl_4", "inception.InceptionC.branch7x7dbl_5", "inception.InceptionC.branch_pool0", "inception.InceptionC.branch_pool", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "branch1x1", "=", "self", ".", "branch1x1", "(", "x", ")", "\n", "\n", "branch7x7", "=", "self", ".", "branch7x7_1", "(", "x", ")", "\n", "branch7x7", "=", "self", ".", "branch7x7_2", "(", "branch7x7", ")", "\n", "branch7x7", "=", "self", ".", "branch7x7_3", "(", "branch7x7", ")", "\n", "\n", "branch7x7dbl", "=", "self", ".", "branch7x7dbl_1", "(", "x", ")", "\n", "branch7x7dbl", "=", "self", ".", "branch7x7dbl_2", "(", "branch7x7dbl", ")", "\n", "branch7x7dbl", "=", "self", ".", "branch7x7dbl_3", "(", "branch7x7dbl", ")", "\n", "branch7x7dbl", "=", "self", ".", "branch7x7dbl_4", "(", "branch7x7dbl", ")", "\n", "branch7x7dbl", "=", "self", ".", "branch7x7dbl_5", "(", "branch7x7dbl", ")", "\n", "\n", "branch_pool", "=", "self", ".", "branch_pool0", "(", "x", ")", "\n", "branch_pool", "=", "self", ".", "branch_pool", "(", "branch_pool", ")", "\n", "\n", "return", "paddle", ".", "concat", "(", "\n", "[", "branch1x1", ",", "branch7x7", ",", "branch7x7dbl", ",", "branch_pool", "]", ",", "axis", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.inception.InceptionD.__init__": [[299, 330], ["paddle.Layer.__init__", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "paddle.nn.MaxPool2D", "paddle.nn.MaxPool2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "name", "=", "None", ")", ":", "\n", "        ", "super", "(", "InceptionD", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "branch3x3_1", "=", "ConvBNLayer", "(", "in_channels", ",", "\n", "192", ",", "\n", "1", ",", "\n", "name", "=", "name", "+", "'.branch3x3_1'", ")", "\n", "self", ".", "branch3x3_2", "=", "ConvBNLayer", "(", "192", ",", "\n", "320", ",", "\n", "3", ",", "\n", "stride", "=", "2", ",", "\n", "name", "=", "name", "+", "'.branch3x3_2'", ")", "\n", "\n", "self", ".", "branch7x7x3_1", "=", "ConvBNLayer", "(", "in_channels", ",", "\n", "192", ",", "\n", "1", ",", "\n", "name", "=", "name", "+", "'.branch7x7x3_1'", ")", "\n", "self", ".", "branch7x7x3_2", "=", "ConvBNLayer", "(", "192", ",", "\n", "192", ",", "(", "1", ",", "7", ")", ",", "\n", "padding", "=", "(", "0", ",", "3", ")", ",", "\n", "name", "=", "name", "+", "'.branch7x7x3_2'", ")", "\n", "self", ".", "branch7x7x3_3", "=", "ConvBNLayer", "(", "192", ",", "\n", "192", ",", "(", "7", ",", "1", ")", ",", "\n", "padding", "=", "(", "3", ",", "0", ")", ",", "\n", "name", "=", "name", "+", "'.branch7x7x3_3'", ")", "\n", "self", ".", "branch7x7x3_4", "=", "ConvBNLayer", "(", "192", ",", "\n", "192", ",", "\n", "3", ",", "\n", "stride", "=", "2", ",", "\n", "name", "=", "name", "+", "'.branch7x7x3_4'", ")", "\n", "\n", "self", ".", "branch_pool", "=", "MaxPool2D", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.inception.InceptionD.forward": [[331, 344], ["inception.InceptionD.branch3x3_1", "inception.InceptionD.branch3x3_2", "inception.InceptionD.branch7x7x3_1", "inception.InceptionD.branch7x7x3_2", "inception.InceptionD.branch7x7x3_3", "inception.InceptionD.branch7x7x3_4", "inception.InceptionD.branch_pool", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "branch3x3", "=", "self", ".", "branch3x3_1", "(", "x", ")", "\n", "branch3x3", "=", "self", ".", "branch3x3_2", "(", "branch3x3", ")", "\n", "\n", "branch7x7x3", "=", "self", ".", "branch7x7x3_1", "(", "x", ")", "\n", "branch7x7x3", "=", "self", ".", "branch7x7x3_2", "(", "branch7x7x3", ")", "\n", "branch7x7x3", "=", "self", ".", "branch7x7x3_3", "(", "branch7x7x3", ")", "\n", "branch7x7x3", "=", "self", ".", "branch7x7x3_4", "(", "branch7x7x3", ")", "\n", "\n", "branch_pool", "=", "self", ".", "branch_pool", "(", "x", ")", "\n", "\n", "return", "paddle", ".", "concat", "(", "[", "branch3x3", ",", "branch7x7x3", ",", "branch_pool", "]", ",", "\n", "axis", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.inception.InceptionE.__init__": [[347, 393], ["paddle.Layer.__init__", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "paddle.nn.AvgPool2D", "paddle.nn.AvgPool2D", "inception.ConvBNLayer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "name", "=", "None", ")", ":", "\n", "        ", "super", "(", "InceptionE", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "branch1x1", "=", "ConvBNLayer", "(", "in_channels", ",", "\n", "320", ",", "\n", "1", ",", "\n", "name", "=", "name", "+", "'.branch1x1'", ")", "\n", "\n", "self", ".", "branch3x3_1", "=", "ConvBNLayer", "(", "in_channels", ",", "\n", "384", ",", "\n", "1", ",", "\n", "name", "=", "name", "+", "'.branch3x3_1'", ")", "\n", "self", ".", "branch3x3_2a", "=", "ConvBNLayer", "(", "384", ",", "\n", "384", ",", "(", "1", ",", "3", ")", ",", "\n", "padding", "=", "(", "0", ",", "1", ")", ",", "\n", "name", "=", "name", "+", "'.branch3x3_2a'", ")", "\n", "self", ".", "branch3x3_2b", "=", "ConvBNLayer", "(", "384", ",", "\n", "384", ",", "(", "3", ",", "1", ")", ",", "\n", "padding", "=", "(", "1", ",", "0", ")", ",", "\n", "name", "=", "name", "+", "'.branch3x3_2b'", ")", "\n", "\n", "self", ".", "branch3x3dbl_1", "=", "ConvBNLayer", "(", "in_channels", ",", "\n", "448", ",", "\n", "1", ",", "\n", "name", "=", "name", "+", "'.branch3x3dbl_1'", ")", "\n", "self", ".", "branch3x3dbl_2", "=", "ConvBNLayer", "(", "448", ",", "\n", "384", ",", "\n", "3", ",", "\n", "padding", "=", "1", ",", "\n", "name", "=", "name", "+", "'.branch3x3dbl_2'", ")", "\n", "self", ".", "branch3x3dbl_3a", "=", "ConvBNLayer", "(", "384", ",", "\n", "384", ",", "(", "1", ",", "3", ")", ",", "\n", "padding", "=", "(", "0", ",", "1", ")", ",", "\n", "name", "=", "name", "+", "'.branch3x3dbl_3a'", ")", "\n", "self", ".", "branch3x3dbl_3b", "=", "ConvBNLayer", "(", "384", ",", "\n", "384", ",", "(", "3", ",", "1", ")", ",", "\n", "padding", "=", "(", "1", ",", "0", ")", ",", "\n", "name", "=", "name", "+", "'.branch3x3dbl_3b'", ")", "\n", "\n", "self", ".", "branch_pool0", "=", "AvgPool2D", "(", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "exclusive", "=", "True", ")", "\n", "self", ".", "branch_pool", "=", "ConvBNLayer", "(", "in_channels", ",", "\n", "192", ",", "\n", "1", ",", "\n", "name", "=", "name", "+", "'.branch_pool'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.inception.InceptionE.forward": [[394, 413], ["inception.InceptionE.branch1x1", "inception.InceptionE.branch3x3_1", "inception.InceptionE.branch3x3_2a", "inception.InceptionE.branch3x3_2b", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "inception.InceptionE.branch3x3dbl_1", "inception.InceptionE.branch3x3dbl_2", "inception.InceptionE.branch3x3dbl_3a", "inception.InceptionE.branch3x3dbl_3b", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "inception.InceptionE.branch_pool0", "inception.InceptionE.branch_pool", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "branch1x1", "=", "self", ".", "branch1x1", "(", "x", ")", "\n", "branch3x3_1", "=", "self", ".", "branch3x3_1", "(", "x", ")", "\n", "branch3x3_2a", "=", "self", ".", "branch3x3_2a", "(", "branch3x3_1", ")", "\n", "branch3x3_2b", "=", "self", ".", "branch3x3_2b", "(", "branch3x3_1", ")", "\n", "branch3x3", "=", "paddle", ".", "concat", "(", "[", "branch3x3_2a", ",", "branch3x3_2b", "]", ",", "axis", "=", "1", ")", "\n", "\n", "branch3x3dbl", "=", "self", ".", "branch3x3dbl_1", "(", "x", ")", "\n", "branch3x3dbl", "=", "self", ".", "branch3x3dbl_2", "(", "branch3x3dbl", ")", "\n", "branch3x3dbl_3a", "=", "self", ".", "branch3x3dbl_3a", "(", "branch3x3dbl", ")", "\n", "branch3x3dbl_3b", "=", "self", ".", "branch3x3dbl_3b", "(", "branch3x3dbl", ")", "\n", "branch3x3dbl", "=", "paddle", ".", "concat", "(", "[", "branch3x3dbl_3a", ",", "branch3x3dbl_3b", "]", ",", "\n", "axis", "=", "1", ")", "\n", "\n", "branch_pool", "=", "self", ".", "branch_pool0", "(", "x", ")", "\n", "branch_pool", "=", "self", ".", "branch_pool", "(", "branch_pool", ")", "\n", "\n", "return", "paddle", ".", "concat", "(", "\n", "[", "branch1x1", ",", "branch3x3", ",", "branch3x3dbl", ",", "branch_pool", "]", ",", "axis", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.inception.InceptionAux.__init__": [[416, 423], ["paddle.Layer.__init__", "paddle.nn.AvgPool2D", "paddle.nn.AvgPool2D", "inception.ConvBNLayer", "inception.ConvBNLayer", "paddle.nn.AvgPool2D", "paddle.nn.AvgPool2D"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "num_classes", ",", "name", "=", "None", ")", ":", "\n", "        ", "super", "(", "InceptionAux", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "pool0", "=", "AvgPool2D", "(", "kernel_size", "=", "5", ",", "stride", "=", "3", ")", "\n", "self", ".", "conv0", "=", "ConvBNLayer", "(", "in_channels", ",", "128", ",", "1", ",", "name", "=", "name", "+", "'.conv0'", ")", "\n", "self", ".", "conv1", "=", "ConvBNLayer", "(", "128", ",", "768", ",", "5", ",", "name", "=", "name", "+", "'.conv1'", ")", "\n", "self", ".", "pool1", "=", "AvgPool2D", "(", "global_pooling", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.inception.InceptionAux.forward": [[424, 432], ["inception.InceptionAux.pool0", "inception.InceptionAux.conv0", "inception.InceptionAux.conv1", "inception.InceptionAux.pool1", "paddle.flatten", "paddle.flatten", "paddle.flatten", "paddle.flatten", "paddle.static.nn.fc", "paddle.static.nn.fc", "paddle.static.nn.fc", "paddle.static.nn.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "pool0", "(", "x", ")", "\n", "x", "=", "self", ".", "conv0", "(", "x", ")", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "pool1", "(", "x", ")", "\n", "x", "=", "paddle", ".", "flatten", "(", "x", ",", "axis", "=", "1", ")", "\n", "x", "=", "paddle", ".", "static", ".", "nn", ".", "fc", "(", "x", ",", "size", "=", "self", ".", "num_classes", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.inception.Fid_inceptionA.__init__": [[437, 477], ["paddle.Layer.__init__", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "paddle.nn.AvgPool2D", "paddle.nn.AvgPool2D", "inception.ConvBNLayer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "pool_features", ",", "name", "=", "None", ")", ":", "\n", "        ", "super", "(", "Fid_inceptionA", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "branch1x1", "=", "ConvBNLayer", "(", "in_channels", ",", "\n", "64", ",", "\n", "1", ",", "\n", "name", "=", "name", "+", "'.branch1x1'", ")", "\n", "\n", "self", ".", "branch5x5_1", "=", "ConvBNLayer", "(", "in_channels", ",", "\n", "48", ",", "\n", "1", ",", "\n", "name", "=", "name", "+", "'.branch5x5_1'", ")", "\n", "self", ".", "branch5x5_2", "=", "ConvBNLayer", "(", "48", ",", "\n", "64", ",", "\n", "5", ",", "\n", "padding", "=", "2", ",", "\n", "name", "=", "name", "+", "'.branch5x5_2'", ")", "\n", "\n", "self", ".", "branch3x3dbl_1", "=", "ConvBNLayer", "(", "in_channels", ",", "\n", "64", ",", "\n", "1", ",", "\n", "name", "=", "name", "+", "'.branch3x3dbl_1'", ")", "\n", "self", ".", "branch3x3dbl_2", "=", "ConvBNLayer", "(", "64", ",", "\n", "96", ",", "\n", "3", ",", "\n", "padding", "=", "1", ",", "\n", "name", "=", "name", "+", "'.branch3x3dbl_2'", ")", "\n", "self", ".", "branch3x3dbl_3", "=", "ConvBNLayer", "(", "96", ",", "\n", "96", ",", "\n", "3", ",", "\n", "padding", "=", "1", ",", "\n", "name", "=", "name", "+", "'.branch3x3dbl_3'", ")", "\n", "\n", "self", ".", "branch_pool0", "=", "AvgPool2D", "(", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "exclusive", "=", "True", ")", "\n", "self", ".", "branch_pool", "=", "ConvBNLayer", "(", "in_channels", ",", "\n", "pool_features", ",", "\n", "1", ",", "\n", "name", "=", "name", "+", "'.branch_pool'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.inception.Fid_inceptionA.forward": [[478, 492], ["inception.Fid_inceptionA.branch1x1", "inception.Fid_inceptionA.branch5x5_1", "inception.Fid_inceptionA.branch5x5_2", "inception.Fid_inceptionA.branch3x3dbl_1", "inception.Fid_inceptionA.branch3x3dbl_2", "inception.Fid_inceptionA.branch3x3dbl_3", "inception.Fid_inceptionA.branch_pool0", "inception.Fid_inceptionA.branch_pool", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "branch1x1", "=", "self", ".", "branch1x1", "(", "x", ")", "\n", "\n", "branch5x5", "=", "self", ".", "branch5x5_1", "(", "x", ")", "\n", "branch5x5", "=", "self", ".", "branch5x5_2", "(", "branch5x5", ")", "\n", "\n", "branch3x3dbl", "=", "self", ".", "branch3x3dbl_1", "(", "x", ")", "\n", "branch3x3dbl", "=", "self", ".", "branch3x3dbl_2", "(", "branch3x3dbl", ")", "\n", "branch3x3dbl", "=", "self", ".", "branch3x3dbl_3", "(", "branch3x3dbl", ")", "\n", "\n", "branch_pool", "=", "self", ".", "branch_pool0", "(", "x", ")", "\n", "branch_pool", "=", "self", ".", "branch_pool", "(", "branch_pool", ")", "\n", "return", "paddle", ".", "concat", "(", "\n", "[", "branch1x1", ",", "branch5x5", ",", "branch3x3dbl", ",", "branch_pool", "]", ",", "axis", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.inception.Fid_inceptionC.__init__": [[497, 546], ["paddle.Layer.__init__", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "paddle.nn.AvgPool2D", "paddle.nn.AvgPool2D", "inception.ConvBNLayer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "c7", ",", "name", "=", "None", ")", ":", "\n", "        ", "super", "(", "Fid_inceptionC", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "branch1x1", "=", "ConvBNLayer", "(", "in_channels", ",", "\n", "192", ",", "\n", "1", ",", "\n", "name", "=", "name", "+", "'.branch1x1'", ")", "\n", "\n", "self", ".", "branch7x7_1", "=", "ConvBNLayer", "(", "in_channels", ",", "\n", "c7", ",", "\n", "1", ",", "\n", "name", "=", "name", "+", "'.branch7x7_1'", ")", "\n", "self", ".", "branch7x7_2", "=", "ConvBNLayer", "(", "c7", ",", "\n", "c7", ",", "(", "1", ",", "7", ")", ",", "\n", "padding", "=", "(", "0", ",", "3", ")", ",", "\n", "name", "=", "name", "+", "'.branch7x7_2'", ")", "\n", "self", ".", "branch7x7_3", "=", "ConvBNLayer", "(", "c7", ",", "\n", "192", ",", "(", "7", ",", "1", ")", ",", "\n", "padding", "=", "(", "3", ",", "0", ")", ",", "\n", "name", "=", "name", "+", "'.branch7x7_3'", ")", "\n", "\n", "self", ".", "branch7x7dbl_1", "=", "ConvBNLayer", "(", "in_channels", ",", "\n", "c7", ",", "\n", "1", ",", "\n", "name", "=", "name", "+", "'.branch7x7dbl_1'", ")", "\n", "self", ".", "branch7x7dbl_2", "=", "ConvBNLayer", "(", "c7", ",", "\n", "c7", ",", "(", "7", ",", "1", ")", ",", "\n", "padding", "=", "(", "3", ",", "0", ")", ",", "\n", "name", "=", "name", "+", "'.branch7x7dbl_2'", ")", "\n", "self", ".", "branch7x7dbl_3", "=", "ConvBNLayer", "(", "c7", ",", "\n", "c7", ",", "(", "1", ",", "7", ")", ",", "\n", "padding", "=", "(", "0", ",", "3", ")", ",", "\n", "name", "=", "name", "+", "'.branch7x7dbl_3'", ")", "\n", "self", ".", "branch7x7dbl_4", "=", "ConvBNLayer", "(", "c7", ",", "\n", "c7", ",", "(", "7", ",", "1", ")", ",", "\n", "padding", "=", "(", "3", ",", "0", ")", ",", "\n", "name", "=", "name", "+", "'.branch7x7dbl_4'", ")", "\n", "self", ".", "branch7x7dbl_5", "=", "ConvBNLayer", "(", "c7", ",", "\n", "192", ",", "(", "1", ",", "7", ")", ",", "\n", "padding", "=", "(", "0", ",", "3", ")", ",", "\n", "name", "=", "name", "+", "'.branch7x7dbl_5'", ")", "\n", "\n", "self", ".", "branch_pool0", "=", "AvgPool2D", "(", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "exclusive", "=", "True", ")", "\n", "self", ".", "branch_pool", "=", "ConvBNLayer", "(", "in_channels", ",", "\n", "192", ",", "\n", "1", ",", "\n", "name", "=", "name", "+", "'.branch_pool'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.inception.Fid_inceptionC.forward": [[547, 565], ["inception.Fid_inceptionC.branch1x1", "inception.Fid_inceptionC.branch7x7_1", "inception.Fid_inceptionC.branch7x7_2", "inception.Fid_inceptionC.branch7x7_3", "inception.Fid_inceptionC.branch7x7dbl_1", "inception.Fid_inceptionC.branch7x7dbl_2", "inception.Fid_inceptionC.branch7x7dbl_3", "inception.Fid_inceptionC.branch7x7dbl_4", "inception.Fid_inceptionC.branch7x7dbl_5", "inception.Fid_inceptionC.branch_pool0", "inception.Fid_inceptionC.branch_pool", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "branch1x1", "=", "self", ".", "branch1x1", "(", "x", ")", "\n", "\n", "branch7x7", "=", "self", ".", "branch7x7_1", "(", "x", ")", "\n", "branch7x7", "=", "self", ".", "branch7x7_2", "(", "branch7x7", ")", "\n", "branch7x7", "=", "self", ".", "branch7x7_3", "(", "branch7x7", ")", "\n", "\n", "branch7x7dbl", "=", "self", ".", "branch7x7dbl_1", "(", "x", ")", "\n", "branch7x7dbl", "=", "self", ".", "branch7x7dbl_2", "(", "branch7x7dbl", ")", "\n", "branch7x7dbl", "=", "self", ".", "branch7x7dbl_3", "(", "branch7x7dbl", ")", "\n", "branch7x7dbl", "=", "self", ".", "branch7x7dbl_4", "(", "branch7x7dbl", ")", "\n", "branch7x7dbl", "=", "self", ".", "branch7x7dbl_5", "(", "branch7x7dbl", ")", "\n", "\n", "branch_pool", "=", "self", ".", "branch_pool0", "(", "x", ")", "\n", "branch_pool", "=", "self", ".", "branch_pool", "(", "branch_pool", ")", "\n", "\n", "return", "paddle", ".", "concat", "(", "\n", "[", "branch1x1", ",", "branch7x7", ",", "branch7x7dbl", ",", "branch_pool", "]", ",", "axis", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.inception.Fid_inceptionE_1.__init__": [[570, 616], ["paddle.Layer.__init__", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "paddle.nn.AvgPool2D", "paddle.nn.AvgPool2D", "inception.ConvBNLayer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "name", "=", "None", ")", ":", "\n", "        ", "super", "(", "Fid_inceptionE_1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "branch1x1", "=", "ConvBNLayer", "(", "in_channels", ",", "\n", "320", ",", "\n", "1", ",", "\n", "name", "=", "name", "+", "'.branch1x1'", ")", "\n", "\n", "self", ".", "branch3x3_1", "=", "ConvBNLayer", "(", "in_channels", ",", "\n", "384", ",", "\n", "1", ",", "\n", "name", "=", "name", "+", "'.branch3x3_1'", ")", "\n", "self", ".", "branch3x3_2a", "=", "ConvBNLayer", "(", "384", ",", "\n", "384", ",", "(", "1", ",", "3", ")", ",", "\n", "padding", "=", "(", "0", ",", "1", ")", ",", "\n", "name", "=", "name", "+", "'.branch3x3_2a'", ")", "\n", "self", ".", "branch3x3_2b", "=", "ConvBNLayer", "(", "384", ",", "\n", "384", ",", "(", "3", ",", "1", ")", ",", "\n", "padding", "=", "(", "1", ",", "0", ")", ",", "\n", "name", "=", "name", "+", "'.branch3x3_2b'", ")", "\n", "\n", "self", ".", "branch3x3dbl_1", "=", "ConvBNLayer", "(", "in_channels", ",", "\n", "448", ",", "\n", "1", ",", "\n", "name", "=", "name", "+", "'.branch3x3dbl_1'", ")", "\n", "self", ".", "branch3x3dbl_2", "=", "ConvBNLayer", "(", "448", ",", "\n", "384", ",", "\n", "3", ",", "\n", "padding", "=", "1", ",", "\n", "name", "=", "name", "+", "'.branch3x3dbl_2'", ")", "\n", "self", ".", "branch3x3dbl_3a", "=", "ConvBNLayer", "(", "384", ",", "\n", "384", ",", "(", "1", ",", "3", ")", ",", "\n", "padding", "=", "(", "0", ",", "1", ")", ",", "\n", "name", "=", "name", "+", "'.branch3x3dbl_3a'", ")", "\n", "self", ".", "branch3x3dbl_3b", "=", "ConvBNLayer", "(", "384", ",", "\n", "384", ",", "(", "3", ",", "1", ")", ",", "\n", "padding", "=", "(", "1", ",", "0", ")", ",", "\n", "name", "=", "name", "+", "'.branch3x3dbl_3b'", ")", "\n", "\n", "self", ".", "branch_pool0", "=", "AvgPool2D", "(", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "exclusive", "=", "True", ")", "\n", "self", ".", "branch_pool", "=", "ConvBNLayer", "(", "in_channels", ",", "\n", "192", ",", "\n", "1", ",", "\n", "name", "=", "name", "+", "'.branch_pool'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.inception.Fid_inceptionE_1.forward": [[617, 636], ["inception.Fid_inceptionE_1.branch1x1", "inception.Fid_inceptionE_1.branch3x3_1", "inception.Fid_inceptionE_1.branch3x3_2a", "inception.Fid_inceptionE_1.branch3x3_2b", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "inception.Fid_inceptionE_1.branch3x3dbl_1", "inception.Fid_inceptionE_1.branch3x3dbl_2", "inception.Fid_inceptionE_1.branch3x3dbl_3a", "inception.Fid_inceptionE_1.branch3x3dbl_3b", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "inception.Fid_inceptionE_1.branch_pool0", "inception.Fid_inceptionE_1.branch_pool", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "branch1x1", "=", "self", ".", "branch1x1", "(", "x", ")", "\n", "branch3x3_1", "=", "self", ".", "branch3x3_1", "(", "x", ")", "\n", "branch3x3_2a", "=", "self", ".", "branch3x3_2a", "(", "branch3x3_1", ")", "\n", "branch3x3_2b", "=", "self", ".", "branch3x3_2b", "(", "branch3x3_1", ")", "\n", "branch3x3", "=", "paddle", ".", "concat", "(", "[", "branch3x3_2a", ",", "branch3x3_2b", "]", ",", "axis", "=", "1", ")", "\n", "\n", "branch3x3dbl", "=", "self", ".", "branch3x3dbl_1", "(", "x", ")", "\n", "branch3x3dbl", "=", "self", ".", "branch3x3dbl_2", "(", "branch3x3dbl", ")", "\n", "branch3x3dbl_3a", "=", "self", ".", "branch3x3dbl_3a", "(", "branch3x3dbl", ")", "\n", "branch3x3dbl_3b", "=", "self", ".", "branch3x3dbl_3b", "(", "branch3x3dbl", ")", "\n", "branch3x3dbl", "=", "paddle", ".", "concat", "(", "[", "branch3x3dbl_3a", ",", "branch3x3dbl_3b", "]", ",", "\n", "axis", "=", "1", ")", "\n", "\n", "branch_pool", "=", "self", ".", "branch_pool0", "(", "x", ")", "\n", "branch_pool", "=", "self", ".", "branch_pool", "(", "branch_pool", ")", "\n", "\n", "return", "paddle", ".", "concat", "(", "\n", "[", "branch1x1", ",", "branch3x3", ",", "branch3x3dbl", ",", "branch_pool", "]", ",", "axis", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.inception.Fid_inceptionE_2.__init__": [[641, 686], ["paddle.Layer.__init__", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "inception.ConvBNLayer", "paddle.nn.MaxPool2D", "paddle.nn.MaxPool2D", "inception.ConvBNLayer"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "name", "=", "None", ")", ":", "\n", "        ", "super", "(", "Fid_inceptionE_2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "branch1x1", "=", "ConvBNLayer", "(", "in_channels", ",", "\n", "320", ",", "\n", "1", ",", "\n", "name", "=", "name", "+", "'.branch1x1'", ")", "\n", "\n", "self", ".", "branch3x3_1", "=", "ConvBNLayer", "(", "in_channels", ",", "\n", "384", ",", "\n", "1", ",", "\n", "name", "=", "name", "+", "'.branch3x3_1'", ")", "\n", "self", ".", "branch3x3_2a", "=", "ConvBNLayer", "(", "384", ",", "\n", "384", ",", "(", "1", ",", "3", ")", ",", "\n", "padding", "=", "(", "0", ",", "1", ")", ",", "\n", "name", "=", "name", "+", "'.branch3x3_2a'", ")", "\n", "self", ".", "branch3x3_2b", "=", "ConvBNLayer", "(", "384", ",", "\n", "384", ",", "(", "3", ",", "1", ")", ",", "\n", "padding", "=", "(", "1", ",", "0", ")", ",", "\n", "name", "=", "name", "+", "'.branch3x3_2b'", ")", "\n", "\n", "self", ".", "branch3x3dbl_1", "=", "ConvBNLayer", "(", "in_channels", ",", "\n", "448", ",", "\n", "1", ",", "\n", "name", "=", "name", "+", "'.branch3x3dbl_1'", ")", "\n", "self", ".", "branch3x3dbl_2", "=", "ConvBNLayer", "(", "448", ",", "\n", "384", ",", "\n", "3", ",", "\n", "padding", "=", "1", ",", "\n", "name", "=", "name", "+", "'.branch3x3dbl_2'", ")", "\n", "self", ".", "branch3x3dbl_3a", "=", "ConvBNLayer", "(", "384", ",", "\n", "384", ",", "(", "1", ",", "3", ")", ",", "\n", "padding", "=", "(", "0", ",", "1", ")", ",", "\n", "name", "=", "name", "+", "'.branch3x3dbl_3a'", ")", "\n", "self", ".", "branch3x3dbl_3b", "=", "ConvBNLayer", "(", "384", ",", "\n", "384", ",", "(", "3", ",", "1", ")", ",", "\n", "padding", "=", "(", "1", ",", "0", ")", ",", "\n", "name", "=", "name", "+", "'.branch3x3dbl_3b'", ")", "\n", "### same with paper", "\n", "self", ".", "branch_pool0", "=", "MaxPool2D", "(", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "self", ".", "branch_pool", "=", "ConvBNLayer", "(", "in_channels", ",", "\n", "192", ",", "\n", "1", ",", "\n", "name", "=", "name", "+", "'.branch_pool'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.inception.Fid_inceptionE_2.forward": [[687, 706], ["inception.Fid_inceptionE_2.branch1x1", "inception.Fid_inceptionE_2.branch3x3_1", "inception.Fid_inceptionE_2.branch3x3_2a", "inception.Fid_inceptionE_2.branch3x3_2b", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "inception.Fid_inceptionE_2.branch3x3dbl_1", "inception.Fid_inceptionE_2.branch3x3dbl_2", "inception.Fid_inceptionE_2.branch3x3dbl_3a", "inception.Fid_inceptionE_2.branch3x3dbl_3b", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat", "inception.Fid_inceptionE_2.branch_pool0", "inception.Fid_inceptionE_2.branch_pool", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "branch1x1", "=", "self", ".", "branch1x1", "(", "x", ")", "\n", "branch3x3_1", "=", "self", ".", "branch3x3_1", "(", "x", ")", "\n", "branch3x3_2a", "=", "self", ".", "branch3x3_2a", "(", "branch3x3_1", ")", "\n", "branch3x3_2b", "=", "self", ".", "branch3x3_2b", "(", "branch3x3_1", ")", "\n", "branch3x3", "=", "paddle", ".", "concat", "(", "[", "branch3x3_2a", ",", "branch3x3_2b", "]", ",", "axis", "=", "1", ")", "\n", "\n", "branch3x3dbl", "=", "self", ".", "branch3x3dbl_1", "(", "x", ")", "\n", "branch3x3dbl", "=", "self", ".", "branch3x3dbl_2", "(", "branch3x3dbl", ")", "\n", "branch3x3dbl_3a", "=", "self", ".", "branch3x3dbl_3a", "(", "branch3x3dbl", ")", "\n", "branch3x3dbl_3b", "=", "self", ".", "branch3x3dbl_3b", "(", "branch3x3dbl", ")", "\n", "branch3x3dbl", "=", "paddle", ".", "concat", "(", "[", "branch3x3dbl_3a", ",", "branch3x3dbl_3b", "]", ",", "\n", "axis", "=", "1", ")", "\n", "\n", "branch_pool", "=", "self", ".", "branch_pool0", "(", "x", ")", "\n", "branch_pool", "=", "self", ".", "branch_pool", "(", "branch_pool", ")", "\n", "\n", "return", "paddle", ".", "concat", "(", "\n", "[", "branch1x1", ",", "branch3x3", ",", "branch3x3dbl", ",", "branch_pool", "]", ",", "axis", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.inception.ConvBNLayer.__init__": [[709, 734], ["paddle.Layer.__init__", "paddle.nn.Conv2D", "paddle.nn.Conv2D", "paddle.nn.BatchNorm", "paddle.nn.BatchNorm", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr", "paddle.ParamAttr"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "num_filters", ",", "\n", "filter_size", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "groups", "=", "1", ",", "\n", "act", "=", "'relu'", ",", "\n", "name", "=", "None", ")", ":", "\n", "        ", "super", "(", "ConvBNLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "Conv2D", "(", "in_channels", "=", "in_channels", ",", "\n", "out_channels", "=", "num_filters", ",", "\n", "kernel_size", "=", "filter_size", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "\n", "groups", "=", "groups", ",", "\n", "weight_attr", "=", "paddle", ".", "ParamAttr", "(", "name", "=", "name", "+", "\".conv.weight\"", ")", ",", "\n", "bias_attr", "=", "False", ")", "\n", "self", ".", "bn", "=", "BatchNorm", "(", "num_filters", ",", "\n", "act", "=", "act", ",", "\n", "epsilon", "=", "0.001", ",", "\n", "param_attr", "=", "paddle", ".", "ParamAttr", "(", "name", "=", "name", "+", "\".bn.weight\"", ")", ",", "\n", "bias_attr", "=", "paddle", ".", "ParamAttr", "(", "name", "=", "name", "+", "\".bn.bias\"", ")", ",", "\n", "moving_mean_name", "=", "name", "+", "'.bn.running_mean'", ",", "\n", "moving_variance_name", "=", "name", "+", "'.bn.running_var'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.inception.ConvBNLayer.forward": [[735, 739], ["inception.ConvBNLayer.conv", "inception.ConvBNLayer.bn"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.mpr.conv"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "y", "=", "self", ".", "conv", "(", "inputs", ")", "\n", "y", "=", "self", ".", "bn", "(", "y", ")", "\n", "return", "y", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.LPIPSMetric.__init__": [[48, 65], ["lpips.LPIPS", "lpips.LPIPSMetric.reset"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid.FID.reset"], ["def", "__init__", "(", "self", ",", "net", "=", "'vgg'", ",", "version", "=", "'0.1'", ",", "mean", "=", "None", ",", "std", "=", "None", ")", ":", "\n", "        ", "self", ".", "net", "=", "net", "\n", "self", ".", "version", "=", "version", "\n", "\n", "self", ".", "loss_fn", "=", "LPIPS", "(", "net", "=", "net", ",", "version", "=", "version", ")", "\n", "\n", "if", "mean", "is", "None", ":", "\n", "            ", "self", ".", "mean", "=", "[", "0.5", ",", "0.5", ",", "0.5", "]", "\n", "", "else", ":", "\n", "            ", "self", ".", "mean", "=", "mean", "\n", "\n", "", "if", "std", "is", "None", ":", "\n", "            ", "self", ".", "std", "=", "[", "0.5", ",", "0.5", ",", "0.5", "]", "\n", "", "else", ":", "\n", "            ", "self", ".", "std", "=", "std", "\n", "\n", "", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.LPIPSMetric.reset": [[66, 68], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "results", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.LPIPSMetric.update": [[69, 90], ["zip", "isinstance", "isinstance", "paddle.vision.transforms.normalize", "paddle.vision.transforms.normalize", "paddle.vision.transforms.normalize", "paddle.vision.transforms.normalize", "paddle.vision.transforms.normalize", "paddle.vision.transforms.normalize", "paddle.vision.transforms.normalize", "paddle.vision.transforms.normalize", "paddle.vision.transforms.normalize.transpose", "paddle.vision.transforms.normalize.transpose", "paddle.vision.transforms.normalize.transpose", "paddle.vision.transforms.normalize.transpose", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "paddle.no_grad", "lpips.LPIPSMetric.loss_fn", "lpips.LPIPSMetric.results.append", "paddle.vision.transforms.normalize.astype", "paddle.vision.transforms.normalize.astype", "paddle.vision.transforms.normalize.astype", "paddle.vision.transforms.normalize.astype", "paddle.to_tensor().unsqueeze", "paddle.to_tensor().unsqueeze", "paddle.to_tensor().unsqueeze", "paddle.to_tensor().unsqueeze", "paddle.to_tensor().unsqueeze", "paddle.to_tensor().unsqueeze", "paddle.to_tensor().unsqueeze", "paddle.to_tensor().unsqueeze", "lpips.LPIPSMetric.item", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.normalize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "update", "(", "self", ",", "preds", ",", "gts", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "preds", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "            ", "preds", "=", "[", "preds", "]", "\n", "\n", "", "if", "not", "isinstance", "(", "gts", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "            ", "gts", "=", "[", "gts", "]", "\n", "\n", "", "for", "pred", ",", "gt", "in", "zip", "(", "preds", ",", "gts", ")", ":", "\n", "            ", "pred", ",", "gt", "=", "pred", ".", "astype", "(", "np", ".", "float32", ")", "/", "255.", ",", "gt", ".", "astype", "(", "\n", "np", ".", "float32", ")", "/", "255.", "\n", "pred", "=", "paddle", ".", "vision", ".", "transforms", ".", "normalize", "(", "pred", ".", "transpose", "(", "[", "2", ",", "0", ",", "1", "]", ")", ",", "\n", "self", ".", "mean", ",", "self", ".", "std", ")", "\n", "gt", "=", "paddle", ".", "vision", ".", "transforms", ".", "normalize", "(", "gt", ".", "transpose", "(", "[", "2", ",", "0", ",", "1", "]", ")", ",", "\n", "self", ".", "mean", ",", "self", ".", "std", ")", "\n", "\n", "with", "paddle", ".", "no_grad", "(", ")", ":", "\n", "                ", "value", "=", "self", ".", "loss_fn", "(", "\n", "paddle", ".", "to_tensor", "(", "pred", ")", ".", "unsqueeze", "(", "0", ")", ",", "\n", "paddle", ".", "to_tensor", "(", "gt", ")", ".", "unsqueeze", "(", "0", ")", ")", "\n", "\n", "self", ".", "results", ".", "append", "(", "value", ".", "item", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.LPIPSMetric.accumulate": [[91, 101], ["numpy.mean", "paddle.distributed.get_world_size", "paddle.distributed.get_world_size", "paddle.distributed.get_world_size", "paddle.distributed.get_world_size", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.distributed.all_gather", "paddle.distributed.all_gather", "paddle.distributed.all_gather", "paddle.distributed.all_gather", "paddle.concat().numpy", "paddle.concat().numpy", "paddle.concat().numpy", "paddle.concat().numpy", "len", "paddle.concat", "paddle.concat", "paddle.concat", "paddle.concat"], "methods", ["None"], ["", "", "", "def", "accumulate", "(", "self", ")", ":", "\n", "        ", "if", "paddle", ".", "distributed", ".", "get_world_size", "(", ")", ">", "1", ":", "\n", "            ", "results", "=", "paddle", ".", "to_tensor", "(", "self", ".", "results", ")", "\n", "results_list", "=", "[", "]", "\n", "paddle", ".", "distributed", ".", "all_gather", "(", "results_list", ",", "results", ")", "\n", "self", ".", "results", "=", "paddle", ".", "concat", "(", "results_list", ")", ".", "numpy", "(", ")", "\n", "\n", "", "if", "len", "(", "self", ".", "results", ")", "<=", "0", ":", "\n", "            ", "return", "0.", "\n", "", "return", "np", ".", "mean", "(", "self", ".", "results", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.LPIPSMetric.name": [[102, 104], ["None"], "methods", ["None"], ["", "def", "name", "(", "self", ")", ":", "\n", "        ", "return", "'LPIPS'", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.LPIPS.__init__": [[127, 195], ["paddle.Layer.__init__", "lpips.ScalingLayer", "len", "net_type", "print", "lpips.NetLinLayer", "lpips.NetLinLayer", "lpips.NetLinLayer", "lpips.NetLinLayer", "lpips.NetLinLayer", "paddle.LayerList", "paddle.LayerList", "lpips.LPIPS.eval", "TypeError", "lpips.LPIPS.lins.set_state_dict", "TypeError", "paddle.utils.download.get_weights_path_from_url", "paddle.utils.download.get_weights_path_from_url", "print", "paddle.load", "paddle.load", "paddle.load", "paddle.load"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load"], ["    ", "def", "__init__", "(", "self", ",", "\n", "pretrained", "=", "True", ",", "\n", "net", "=", "'vgg'", ",", "\n", "version", "=", "'0.1'", ",", "\n", "lpips", "=", "True", ",", "\n", "spatial", "=", "False", ",", "\n", "pnet_rand", "=", "False", ",", "\n", "pnet_tune", "=", "False", ",", "\n", "use_dropout", "=", "True", ",", "\n", "model_path", "=", "None", ",", "\n", "eval_mode", "=", "True", ",", "\n", "verbose", "=", "True", ")", ":", "\n", "# lpips - [True] means with linear calibration on top of base network", "\n", "# pretrained - [True] means load linear weights", "\n", "\n", "        ", "super", "(", "LPIPS", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "(", "verbose", ")", ":", "\n", "            ", "print", "(", "\n", "'Setting up [%s] perceptual loss: trunk [%s], v[%s], spatial [%s]'", "\n", "%", "(", "'LPIPS'", "if", "lpips", "else", "'baseline'", ",", "net", ",", "version", ",", "\n", "'on'", "if", "spatial", "else", "'off'", ")", ")", "\n", "\n", "", "self", ".", "pnet_type", "=", "net", "\n", "self", ".", "pnet_tune", "=", "pnet_tune", "\n", "self", ".", "pnet_rand", "=", "pnet_rand", "\n", "self", ".", "spatial", "=", "spatial", "\n", "\n", "# false means baseline of just averaging all layers", "\n", "self", ".", "lpips", "=", "lpips", "\n", "\n", "self", ".", "version", "=", "version", "\n", "self", ".", "scaling_layer", "=", "ScalingLayer", "(", ")", "\n", "\n", "if", "(", "self", ".", "pnet_type", "in", "[", "'vgg'", ",", "'vgg16'", "]", ")", ":", "\n", "            ", "net_type", "=", "vgg16", "\n", "self", ".", "chns", "=", "[", "64", ",", "128", ",", "256", ",", "512", ",", "512", "]", "\n", "", "elif", "(", "self", ".", "pnet_type", "==", "'alex'", ")", ":", "\n", "            ", "raise", "TypeError", "(", "'alex not support now!'", ")", "\n", "\n", "", "elif", "(", "self", ".", "pnet_type", "==", "'squeeze'", ")", ":", "\n", "            ", "raise", "TypeError", "(", "'squeeze not support now!'", ")", "\n", "\n", "", "self", ".", "L", "=", "len", "(", "self", ".", "chns", ")", "\n", "\n", "self", ".", "net", "=", "net_type", "(", "pretrained", "=", "True", ",", "requires_grad", "=", "False", ")", "\n", "\n", "if", "(", "lpips", ")", ":", "\n", "            ", "self", ".", "lin0", "=", "NetLinLayer", "(", "self", ".", "chns", "[", "0", "]", ",", "use_dropout", "=", "use_dropout", ")", "\n", "self", ".", "lin1", "=", "NetLinLayer", "(", "self", ".", "chns", "[", "1", "]", ",", "use_dropout", "=", "use_dropout", ")", "\n", "self", ".", "lin2", "=", "NetLinLayer", "(", "self", ".", "chns", "[", "2", "]", ",", "use_dropout", "=", "use_dropout", ")", "\n", "self", ".", "lin3", "=", "NetLinLayer", "(", "self", ".", "chns", "[", "3", "]", ",", "use_dropout", "=", "use_dropout", ")", "\n", "self", ".", "lin4", "=", "NetLinLayer", "(", "self", ".", "chns", "[", "4", "]", ",", "use_dropout", "=", "use_dropout", ")", "\n", "self", ".", "lins", "=", "[", "self", ".", "lin0", ",", "self", ".", "lin1", ",", "self", ".", "lin2", ",", "self", ".", "lin3", ",", "self", ".", "lin4", "]", "\n", "\n", "# TODO: add alex and squeezenet", "\n", "# 7 layers for squeezenet", "\n", "self", ".", "lins", "=", "nn", ".", "LayerList", "(", "self", ".", "lins", ")", "\n", "if", "(", "pretrained", ")", ":", "\n", "                ", "if", "(", "model_path", "is", "None", ")", ":", "\n", "                    ", "model_path", "=", "get_weights_path_from_url", "(", "LINS_01_VGG_URL", ")", "\n", "\n", "", "if", "(", "verbose", ")", ":", "\n", "                    ", "print", "(", "'Loading model from: %s'", "%", "model_path", ")", "\n", "\n", "", "self", ".", "lins", ".", "set_state_dict", "(", "paddle", ".", "load", "(", "model_path", ")", ")", "\n", "\n", "", "", "if", "(", "eval_mode", ")", ":", "\n", "            ", "self", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.LPIPS.forward": [[196, 245], ["range", "range", "lpips.LPIPS.net.forward", "lpips.LPIPS.net.forward", "lpips.LPIPS.scaling_layer", "lpips.LPIPS.scaling_layer", "lpips.normalize_tensor", "lpips.normalize_tensor", "lpips.upsample", "lpips.spatial_average", "lpips.upsample", "lpips.spatial_average", "lpips.LPIPS.lins[].model", "range", "lpips.LPIPS.lins[].model", "range", "diffs[].sum", "range", "diffs[].sum", "range"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.vgg16.forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.vgg16.forward", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.normalize_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.normalize_tensor", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.upsample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.spatial_average", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.upsample", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.spatial_average"], ["", "", "def", "forward", "(", "self", ",", "in0", ",", "in1", ",", "retPerLayer", "=", "False", ",", "normalize", "=", "False", ")", ":", "\n", "# turn on this flag if input is [0,1] so it can be adjusted to [-1, +1]", "\n", "        ", "if", "normalize", ":", "\n", "            ", "in0", "=", "2", "*", "in0", "-", "1", "\n", "in1", "=", "2", "*", "in1", "-", "1", "\n", "\n", "# v0.0 - original release had a bug, where input was not scaled", "\n", "", "in0_input", ",", "in1_input", "=", "(", "\n", "self", ".", "scaling_layer", "(", "in0", ")", ",", "\n", "self", ".", "scaling_layer", "(", "in1", ")", ")", "if", "self", ".", "version", "==", "'0.1'", "else", "(", "in0", ",", "in1", ")", "\n", "outs0", ",", "outs1", "=", "self", ".", "net", ".", "forward", "(", "in0_input", ")", ",", "self", ".", "net", ".", "forward", "(", "in1_input", ")", "\n", "feats0", ",", "feats1", ",", "diffs", "=", "{", "}", ",", "{", "}", ",", "{", "}", "\n", "\n", "for", "kk", "in", "range", "(", "self", ".", "L", ")", ":", "\n", "            ", "feats0", "[", "kk", "]", ",", "feats1", "[", "kk", "]", "=", "normalize_tensor", "(", "\n", "outs0", "[", "kk", "]", ")", ",", "normalize_tensor", "(", "outs1", "[", "kk", "]", ")", "\n", "diffs", "[", "kk", "]", "=", "(", "feats0", "[", "kk", "]", "-", "feats1", "[", "kk", "]", ")", "**", "2", "\n", "\n", "", "if", "(", "self", ".", "lpips", ")", ":", "\n", "            ", "if", "(", "self", ".", "spatial", ")", ":", "\n", "                ", "res", "=", "[", "\n", "upsample", "(", "self", ".", "lins", "[", "kk", "]", ".", "model", "(", "diffs", "[", "kk", "]", ")", ",", "\n", "out_HW", "=", "in0", ".", "shape", "[", "2", ":", "]", ")", "for", "kk", "in", "range", "(", "self", ".", "L", ")", "\n", "]", "\n", "", "else", ":", "\n", "                ", "res", "=", "[", "\n", "spatial_average", "(", "self", ".", "lins", "[", "kk", "]", ".", "model", "(", "diffs", "[", "kk", "]", ")", ",", "\n", "keepdim", "=", "True", ")", "for", "kk", "in", "range", "(", "self", ".", "L", ")", "\n", "]", "\n", "", "", "else", ":", "\n", "            ", "if", "(", "self", ".", "spatial", ")", ":", "\n", "                ", "res", "=", "[", "\n", "upsample", "(", "diffs", "[", "kk", "]", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ",", "\n", "out_HW", "=", "in0", ".", "shape", "[", "2", ":", "]", ")", "for", "kk", "in", "range", "(", "self", ".", "L", ")", "\n", "]", "\n", "", "else", ":", "\n", "                ", "res", "=", "[", "\n", "spatial_average", "(", "diffs", "[", "kk", "]", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ",", "\n", "keepdim", "=", "True", ")", "for", "kk", "in", "range", "(", "self", ".", "L", ")", "\n", "]", "\n", "\n", "", "", "val", "=", "res", "[", "0", "]", "\n", "for", "l", "in", "range", "(", "1", ",", "self", ".", "L", ")", ":", "\n", "            ", "val", "+=", "res", "[", "l", "]", "\n", "\n", "", "if", "(", "retPerLayer", ")", ":", "\n", "            ", "return", "(", "val", ",", "res", ")", "\n", "", "else", ":", "\n", "            ", "return", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.ScalingLayer.__init__": [[248, 256], ["paddle.Layer.__init__", "lpips.ScalingLayer.register_buffer", "lpips.ScalingLayer.register_buffer", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor().reshape", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor", "paddle.to_tensor"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "ScalingLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "register_buffer", "(", "\n", "'shift'", ",", "\n", "paddle", ".", "to_tensor", "(", "[", "-", ".030", ",", "-", ".088", ",", "-", ".188", "]", ")", ".", "reshape", "(", "[", "1", ",", "3", ",", "1", ",", "1", "]", ")", ")", "\n", "self", ".", "register_buffer", "(", "\n", "'scale'", ",", "\n", "paddle", ".", "to_tensor", "(", "[", ".458", ",", ".448", ",", ".450", "]", ")", ".", "reshape", "(", "[", "1", ",", "3", ",", "1", ",", "1", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.ScalingLayer.forward": [[257, 259], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inp", ")", ":", "\n", "        ", "return", "(", "inp", "-", "self", ".", "shift", ")", "/", "self", ".", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.NetLinLayer.__init__": [[263, 273], ["paddle.Layer.__init__", "paddle.Sequential", "paddle.Sequential", "paddle.Conv2D", "paddle.Conv2D", "paddle.Dropout", "paddle.Dropout"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "chn_in", ",", "chn_out", "=", "1", ",", "use_dropout", "=", "False", ")", ":", "\n", "        ", "super", "(", "NetLinLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "layers", "=", "[", "\n", "nn", ".", "Dropout", "(", ")", ",", "\n", "]", "if", "(", "use_dropout", ")", "else", "[", "]", "\n", "layers", "+=", "[", "\n", "nn", ".", "Conv2D", "(", "chn_in", ",", "chn_out", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias_attr", "=", "False", ")", ",", "\n", "]", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.vgg16.__init__": [[276, 284], ["paddle.Layer.__init__", "models.criterions.perceptual_loss.PerceptualVGG", "lpips.vgg16.parameters"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "requires_grad", "=", "False", ",", "pretrained", "=", "True", ")", ":", "\n", "        ", "super", "(", "vgg16", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "vgg16", "=", "PerceptualVGG", "(", "[", "'3'", ",", "'8'", ",", "'15'", ",", "'22'", ",", "'29'", "]", ",", "'vgg16'", ",", "False", ",", "\n", "VGG16_TORCHVISION_URL", ")", "\n", "\n", "if", "not", "requires_grad", ":", "\n", "            ", "for", "param", "in", "self", ".", "parameters", "(", ")", ":", "\n", "                ", "param", ".", "trainable", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.vgg16.forward": [[285, 293], ["lpips.vgg16.vgg16", "collections.namedtuple", "collections.namedtuple."], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "vgg16", "(", "x", ")", "\n", "vgg_outputs", "=", "namedtuple", "(", "\n", "\"VggOutputs\"", ",", "\n", "[", "'relu1_2'", ",", "'relu2_2'", ",", "'relu3_3'", ",", "'relu4_3'", ",", "'relu5_3'", "]", ")", "\n", "out", "=", "vgg_outputs", "(", "out", "[", "'3'", "]", ",", "out", "[", "'8'", "]", ",", "out", "[", "'15'", "]", ",", "out", "[", "'22'", "]", ",", "out", "[", "'29'", "]", ")", "\n", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.spatial_average": [[106, 108], ["in_tens.mean"], "function", ["None"], ["", "", "def", "spatial_average", "(", "in_tens", ",", "keepdim", "=", "True", ")", ":", "\n", "    ", "return", "in_tens", ".", "mean", "(", "[", "2", ",", "3", "]", ",", "keepdim", "=", "keepdim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.upsample": [[111, 118], ["paddle.Upsample"], "function", ["None"], ["", "def", "upsample", "(", "in_tens", ",", "out_HW", "=", "(", "64", ",", "64", ")", ")", ":", "\n", "    ", "in_H", ",", "in_W", "=", "in_tens", ".", "shape", "[", "2", "]", ",", "in_tens", ".", "shape", "[", "3", "]", "\n", "scale_factor_H", ",", "scale_factor_W", "=", "1.", "*", "out_HW", "[", "0", "]", "/", "in_H", ",", "1.", "*", "out_HW", "[", "1", "]", "/", "in_W", "\n", "\n", "return", "nn", ".", "Upsample", "(", "scale_factor", "=", "(", "scale_factor_H", ",", "scale_factor_W", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "False", ")", "(", "in_tens", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.lpips.normalize_tensor": [[120, 123], ["paddle.sqrt", "paddle.sqrt", "paddle.sum", "paddle.sum"], "function", ["None"], ["", "def", "normalize_tensor", "(", "in_feat", ",", "eps", "=", "1e-10", ")", ":", "\n", "    ", "norm_factor", "=", "paddle", ".", "sqrt", "(", "paddle", ".", "sum", "(", "in_feat", "**", "2", ",", "1", ",", "keepdim", "=", "True", ")", ")", "\n", "return", "in_feat", "/", "(", "norm_factor", "+", "eps", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.builder.build_metric": [[23, 28], ["cfg.copy", "cfg.copy.pop", "METRICS.get"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get"], ["from", ".", "repeat_dataset", "import", "RepeatDataset", "\n", "from", ".", ".", "utils", ".", "registry", "import", "Registry", ",", "build_from_config", "\n", "\n", "DATASETS", "=", "Registry", "(", "\"DATASETS\"", ")", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.psnr_ssim.PSNR.__init__": [[24, 29], ["psnr_ssim.PSNR.reset"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid.FID.reset"], ["    ", "def", "__init__", "(", "self", ",", "crop_border", ",", "input_order", "=", "'HWC'", ",", "test_y_channel", "=", "False", ")", ":", "\n", "        ", "self", ".", "crop_border", "=", "crop_border", "\n", "self", ".", "input_order", "=", "input_order", "\n", "self", ".", "test_y_channel", "=", "test_y_channel", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.psnr_ssim.PSNR.reset": [[30, 32], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "results", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.psnr_ssim.PSNR.update": [[33, 53], ["zip", "isinstance", "isinstance", "psnr_ssim.calculate_psnr", "psnr_ssim.PSNR.results.append", "single_seq.append", "psnr_ssim.PSNR.results.append", "numpy.mean"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.psnr_ssim.calculate_psnr", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "update", "(", "self", ",", "preds", ",", "gts", ",", "is_seq", "=", "False", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "preds", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "            ", "preds", "=", "[", "preds", "]", "\n", "\n", "", "if", "not", "isinstance", "(", "gts", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "            ", "gts", "=", "[", "gts", "]", "\n", "\n", "", "if", "is_seq", ":", "\n", "            ", "single_seq", "=", "[", "]", "\n", "\n", "", "for", "pred", ",", "gt", "in", "zip", "(", "preds", ",", "gts", ")", ":", "\n", "            ", "value", "=", "calculate_psnr", "(", "pred", ",", "gt", ",", "self", ".", "crop_border", ",", "self", ".", "input_order", ",", "\n", "self", ".", "test_y_channel", ")", "\n", "if", "is_seq", ":", "\n", "                ", "single_seq", ".", "append", "(", "value", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "results", ".", "append", "(", "value", ")", "\n", "\n", "", "", "if", "is_seq", ":", "\n", "            ", "self", ".", "results", ".", "append", "(", "np", ".", "mean", "(", "single_seq", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.psnr_ssim.PSNR.accumulate": [[54, 64], ["numpy.mean", "paddle.distributed.get_world_size", "paddle.to_tensor", "paddle.distributed.all_gather", "paddle.concat().numpy", "len", "paddle.concat"], "methods", ["None"], ["", "", "def", "accumulate", "(", "self", ")", ":", "\n", "        ", "if", "paddle", ".", "distributed", ".", "get_world_size", "(", ")", ">", "1", ":", "\n", "            ", "results", "=", "paddle", ".", "to_tensor", "(", "self", ".", "results", ")", "\n", "results_list", "=", "[", "]", "\n", "paddle", ".", "distributed", ".", "all_gather", "(", "results_list", ",", "results", ")", "\n", "self", ".", "results", "=", "paddle", ".", "concat", "(", "results_list", ")", ".", "numpy", "(", ")", "\n", "\n", "", "if", "len", "(", "self", ".", "results", ")", "<=", "0", ":", "\n", "            ", "return", "0.", "\n", "", "return", "np", ".", "mean", "(", "self", ".", "results", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.psnr_ssim.PSNR.name": [[65, 67], ["None"], "methods", ["None"], ["", "def", "name", "(", "self", ")", ":", "\n", "        ", "return", "'PSNR'", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.psnr_ssim.SSIM.update": [[71, 91], ["zip", "isinstance", "isinstance", "psnr_ssim.calculate_ssim", "psnr_ssim.SSIM.results.append", "single_seq.append", "psnr_ssim.SSIM.results.append", "numpy.mean"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.psnr_ssim.calculate_ssim", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["    ", "def", "update", "(", "self", ",", "preds", ",", "gts", ",", "is_seq", "=", "False", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "preds", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "            ", "preds", "=", "[", "preds", "]", "\n", "\n", "", "if", "not", "isinstance", "(", "gts", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "            ", "gts", "=", "[", "gts", "]", "\n", "\n", "", "if", "is_seq", ":", "\n", "            ", "single_seq", "=", "[", "]", "\n", "\n", "", "for", "pred", ",", "gt", "in", "zip", "(", "preds", ",", "gts", ")", ":", "\n", "            ", "value", "=", "calculate_ssim", "(", "pred", ",", "gt", ",", "self", ".", "crop_border", ",", "self", ".", "input_order", ",", "\n", "self", ".", "test_y_channel", ")", "\n", "if", "is_seq", ":", "\n", "                ", "single_seq", ".", "append", "(", "value", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "results", ".", "append", "(", "value", ")", "\n", "\n", "", "", "if", "is_seq", ":", "\n", "            ", "self", ".", "results", ".", "append", "(", "np", ".", "mean", "(", "single_seq", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.psnr_ssim.SSIM.name": [[92, 94], ["None"], "methods", ["None"], ["", "", "def", "name", "(", "self", ")", ":", "\n", "        ", "return", "'SSIM'", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.psnr_ssim.calculate_psnr": [[96, 141], ["to_y_channel.copy().astype", "to_y_channel.copy().astype", "psnr_ssim.reorder_image", "psnr_ssim.reorder_image", "numpy.mean", "ValueError", "psnr_ssim.to_y_channel", "psnr_ssim.to_y_channel", "float", "numpy.log10", "to_y_channel.copy", "to_y_channel.copy", "numpy.sqrt"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.psnr_ssim.reorder_image", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.psnr_ssim.reorder_image", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.psnr_ssim.to_y_channel", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.psnr_ssim.to_y_channel"], ["", "", "def", "calculate_psnr", "(", "img1", ",", "\n", "img2", ",", "\n", "crop_border", ",", "\n", "input_order", "=", "'HWC'", ",", "\n", "test_y_channel", "=", "False", ")", ":", "\n", "    ", "\"\"\"Calculate PSNR (Peak Signal-to-Noise Ratio).\n\n    Ref: https://en.wikipedia.org/wiki/Peak_signal-to-noise_ratio\n\n    Args:\n        img1 (ndarray): Images with range [0, 255].\n        img2 (ndarray): Images with range [0, 255].\n        crop_border (int): Cropped pixels in each edge of an image. These\n            pixels are not involved in the PSNR calculation.\n        input_order (str): Whether the input order is 'HWC' or 'CHW'.\n            Default: 'HWC'.\n        test_y_channel (bool): Test on Y channel of YCbCr. Default: False.\n\n    Returns:\n        float: psnr result.\n    \"\"\"", "\n", "\n", "assert", "img1", ".", "shape", "==", "img2", ".", "shape", ",", "(", "\n", "f'Image shapes are differnet: {img1.shape}, {img2.shape}.'", ")", "\n", "if", "input_order", "not", "in", "[", "'HWC'", ",", "'CHW'", "]", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "f'Wrong input_order {input_order}. Supported input_orders are '", "\n", "'\"HWC\" and \"CHW\"'", ")", "\n", "", "img1", "=", "img1", ".", "copy", "(", ")", ".", "astype", "(", "'float32'", ")", "\n", "img2", "=", "img2", ".", "copy", "(", ")", ".", "astype", "(", "'float32'", ")", "\n", "img1", "=", "reorder_image", "(", "img1", ",", "input_order", "=", "input_order", ")", "\n", "img2", "=", "reorder_image", "(", "img2", ",", "input_order", "=", "input_order", ")", "\n", "\n", "if", "crop_border", "!=", "0", ":", "\n", "        ", "img1", "=", "img1", "[", "crop_border", ":", "-", "crop_border", ",", "crop_border", ":", "-", "crop_border", ",", "...", "]", "\n", "img2", "=", "img2", "[", "crop_border", ":", "-", "crop_border", ",", "crop_border", ":", "-", "crop_border", ",", "...", "]", "\n", "\n", "", "if", "test_y_channel", ":", "\n", "        ", "img1", "=", "to_y_channel", "(", "img1", ")", "\n", "img2", "=", "to_y_channel", "(", "img2", ")", "\n", "\n", "", "mse", "=", "np", ".", "mean", "(", "(", "img1", "-", "img2", ")", "**", "2", ")", "\n", "if", "mse", "==", "0", ":", "\n", "        ", "return", "float", "(", "'inf'", ")", "\n", "", "return", "20.", "*", "np", ".", "log10", "(", "255.", "/", "np", ".", "sqrt", "(", "mse", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.psnr_ssim._ssim": [[143, 177], ["img1.astype.astype", "img2.astype.astype", "cv2.getGaussianKernel", "numpy.outer", "ssim_map.mean", "cv2.getGaussianKernel.transpose", "cv2.filter2D", "cv2.filter2D", "cv2.filter2D", "cv2.filter2D", "cv2.filter2D"], "function", ["None"], ["", "def", "_ssim", "(", "img1", ",", "img2", ")", ":", "\n", "    ", "\"\"\"Calculate SSIM (structural similarity) for one channel images.\n\n    It is called by func:`calculate_ssim`.\n\n    Args:\n        img1 (ndarray): Images with range [0, 255] with order 'HWC'.\n        img2 (ndarray): Images with range [0, 255] with order 'HWC'.\n\n    Returns:\n        float: ssim result.\n    \"\"\"", "\n", "\n", "C1", "=", "(", "0.01", "*", "255", ")", "**", "2", "\n", "C2", "=", "(", "0.03", "*", "255", ")", "**", "2", "\n", "\n", "img1", "=", "img1", ".", "astype", "(", "np", ".", "float64", ")", "\n", "img2", "=", "img2", ".", "astype", "(", "np", ".", "float64", ")", "\n", "kernel", "=", "cv2", ".", "getGaussianKernel", "(", "11", ",", "1.5", ")", "\n", "window", "=", "np", ".", "outer", "(", "kernel", ",", "kernel", ".", "transpose", "(", ")", ")", "\n", "\n", "mu1", "=", "cv2", ".", "filter2D", "(", "img1", ",", "-", "1", ",", "window", ")", "[", "5", ":", "-", "5", ",", "5", ":", "-", "5", "]", "\n", "mu2", "=", "cv2", ".", "filter2D", "(", "img2", ",", "-", "1", ",", "window", ")", "[", "5", ":", "-", "5", ",", "5", ":", "-", "5", "]", "\n", "mu1_sq", "=", "mu1", "**", "2", "\n", "mu2_sq", "=", "mu2", "**", "2", "\n", "mu1_mu2", "=", "mu1", "*", "mu2", "\n", "sigma1_sq", "=", "cv2", ".", "filter2D", "(", "img1", "**", "2", ",", "-", "1", ",", "window", ")", "[", "5", ":", "-", "5", ",", "5", ":", "-", "5", "]", "-", "mu1_sq", "\n", "sigma2_sq", "=", "cv2", ".", "filter2D", "(", "img2", "**", "2", ",", "-", "1", ",", "window", ")", "[", "5", ":", "-", "5", ",", "5", ":", "-", "5", "]", "-", "mu2_sq", "\n", "sigma12", "=", "cv2", ".", "filter2D", "(", "img1", "*", "img2", ",", "-", "1", ",", "window", ")", "[", "5", ":", "-", "5", ",", "5", ":", "-", "5", "]", "-", "mu1_mu2", "\n", "\n", "ssim_map", "=", "(", "(", "2", "*", "mu1_mu2", "+", "C1", ")", "*", "\n", "(", "2", "*", "sigma12", "+", "C2", ")", ")", "/", "(", "(", "mu1_sq", "+", "mu2_sq", "+", "C1", ")", "*", "\n", "(", "sigma1_sq", "+", "sigma2_sq", "+", "C2", ")", ")", "\n", "return", "ssim_map", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.psnr_ssim.calculate_ssim": [[179, 233], ["to_y_channel.copy().astype", "to_y_channel.copy().astype", "psnr_ssim.reorder_image", "psnr_ssim.reorder_image", "range", "numpy.array().mean", "ValueError", "psnr_ssim.to_y_channel", "psnr_ssim.to_y_channel", "ssims.append", "to_y_channel.copy", "to_y_channel.copy", "psnr_ssim._ssim", "numpy.array"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.psnr_ssim.reorder_image", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.psnr_ssim.reorder_image", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.psnr_ssim.to_y_channel", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.psnr_ssim.to_y_channel", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.psnr_ssim._ssim"], ["", "def", "calculate_ssim", "(", "img1", ",", "\n", "img2", ",", "\n", "crop_border", ",", "\n", "input_order", "=", "'HWC'", ",", "\n", "test_y_channel", "=", "False", ")", ":", "\n", "    ", "\"\"\"Calculate SSIM (structural similarity).\n\n    Ref:\n    Image quality assessment: From error visibility to structural similarity\n\n    The results are the same as that of the official released MATLAB code in\n    https://ece.uwaterloo.ca/~z70wang/research/ssim/.\n\n    For three-channel images, SSIM is calculated for each channel and then\n    averaged.\n\n    Args:\n        img1 (ndarray): Images with range [0, 255].\n        img2 (ndarray): Images with range [0, 255].\n        crop_border (int): Cropped pixels in each edge of an image. These\n            pixels are not involved in the SSIM calculation.\n        input_order (str): Whether the input order is 'HWC' or 'CHW'.\n            Default: 'HWC'.\n        test_y_channel (bool): Test on Y channel of YCbCr. Default: False.\n\n    Returns:\n        float: ssim result.\n    \"\"\"", "\n", "\n", "assert", "img1", ".", "shape", "==", "img2", ".", "shape", ",", "(", "\n", "f'Image shapes are differnet: {img1.shape}, {img2.shape}.'", ")", "\n", "if", "input_order", "not", "in", "[", "'HWC'", ",", "'CHW'", "]", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "f'Wrong input_order {input_order}. Supported input_orders are '", "\n", "'\"HWC\" and \"CHW\"'", ")", "\n", "\n", "", "img1", "=", "img1", ".", "copy", "(", ")", ".", "astype", "(", "'float32'", ")", "\n", "img2", "=", "img2", ".", "copy", "(", ")", ".", "astype", "(", "'float32'", ")", "\n", "\n", "img1", "=", "reorder_image", "(", "img1", ",", "input_order", "=", "input_order", ")", "\n", "img2", "=", "reorder_image", "(", "img2", ",", "input_order", "=", "input_order", ")", "\n", "\n", "if", "crop_border", "!=", "0", ":", "\n", "        ", "img1", "=", "img1", "[", "crop_border", ":", "-", "crop_border", ",", "crop_border", ":", "-", "crop_border", ",", "...", "]", "\n", "img2", "=", "img2", "[", "crop_border", ":", "-", "crop_border", ",", "crop_border", ":", "-", "crop_border", ",", "...", "]", "\n", "\n", "", "if", "test_y_channel", ":", "\n", "        ", "img1", "=", "to_y_channel", "(", "img1", ")", "\n", "img2", "=", "to_y_channel", "(", "img2", ")", "\n", "\n", "", "ssims", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "img1", ".", "shape", "[", "2", "]", ")", ":", "\n", "        ", "ssims", ".", "append", "(", "_ssim", "(", "img1", "[", "...", ",", "i", "]", ",", "img2", "[", "...", ",", "i", "]", ")", ")", "\n", "", "return", "np", ".", "array", "(", "ssims", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.psnr_ssim.reorder_image": [[235, 262], ["ValueError", "len", "img.transpose.transpose"], "function", ["None"], ["", "def", "reorder_image", "(", "img", ",", "input_order", "=", "'HWC'", ")", ":", "\n", "    ", "\"\"\"Reorder images to 'HWC' order.\n\n    If the input_order is (h, w), return (h, w, 1);\n    If the input_order is (c, h, w), return (h, w, c);\n    If the input_order is (h, w, c), return as it is.\n\n    Args:\n        img (ndarray): Input image.\n        input_order (str): Whether the input order is 'HWC' or 'CHW'.\n            If the input image shape is (h, w), input_order will not have\n            effects. Default: 'HWC'.\n\n    Returns:\n        ndarray: reordered image.\n    \"\"\"", "\n", "\n", "if", "input_order", "not", "in", "[", "'HWC'", ",", "'CHW'", "]", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "f'Wrong input_order {input_order}. Supported input_orders are '", "\n", "\"'HWC' and 'CHW'\"", ")", "\n", "", "if", "len", "(", "img", ".", "shape", ")", "==", "2", ":", "\n", "        ", "img", "=", "img", "[", "...", ",", "None", "]", "\n", "return", "img", "\n", "", "if", "input_order", "==", "'CHW'", ":", "\n", "        ", "img", "=", "img", ".", "transpose", "(", "1", ",", "2", ",", "0", ")", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.psnr_ssim.bgr2ycbcr": [[264, 295], ["numpy.dot", "numpy.matmul"], "function", ["None"], ["", "def", "bgr2ycbcr", "(", "img", ",", "y_only", "=", "False", ")", ":", "\n", "    ", "\"\"\"Convert a BGR image to YCbCr image.\n\n    The bgr version of rgb2ycbcr.\n    It implements the ITU-R BT.601 conversion for standard-definition\n    television. See more details in\n    https://en.wikipedia.org/wiki/YCbCr#ITU-R_BT.601_conversion.\n\n    It differs from a similar function in cv2.cvtColor: `BGR <-> YCrCb`.\n    In OpenCV, it implements a JPEG conversion. See more details in\n    https://en.wikipedia.org/wiki/YCbCr#JPEG_conversion.\n\n    Args:\n        img (ndarray): The input image. It accepts:\n            1. np.uint8 type with range [0, 255];\n            2. np.float32 type with range [0, 1].\n        y_only (bool): Whether to only return Y channel. Default: False.\n\n    Returns:\n        ndarray: The converted YCbCr image. The output image has the same type\n            and range as input image.\n    \"\"\"", "\n", "img_type", "=", "img", ".", "dtype", "\n", "\n", "if", "y_only", ":", "\n", "        ", "out_img", "=", "np", ".", "dot", "(", "img", ",", "[", "24.966", ",", "128.553", ",", "65.481", "]", ")", "+", "16.0", "\n", "", "else", ":", "\n", "        ", "out_img", "=", "np", ".", "matmul", "(", "\n", "img", ",", "[", "[", "24.966", ",", "112.0", ",", "-", "18.214", "]", ",", "[", "128.553", ",", "-", "74.203", ",", "-", "93.786", "]", ",", "\n", "[", "65.481", ",", "-", "37.797", ",", "112.0", "]", "]", ")", "+", "[", "16", ",", "128", ",", "128", "]", "\n", "", "return", "out_img", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.psnr_ssim.rgb2ycbcr": [[297, 337], ["out_img.round.round", "numpy.matmul", "numpy.dot", "numpy.np.float32"], "function", ["None"], ["", "def", "rgb2ycbcr", "(", "img", ",", "y_only", "=", "False", ")", ":", "\n", "    ", "\"\"\"Convert a RGB image to YCbCr image.\n\n    The RGB version of rgb2ycbcr.\n    It implements the ITU-R BT.601 conversion for standard-definition\n    television. See more details in\n    https://en.wikipedia.org/wiki/YCbCr#ITU-R_BT.601_conversion.\n\n    It differs from a similar function in cv2.cvtColor: `RGB <-> YCrCb`.\n    In OpenCV, it implements a JPEG conversion. See more details in\n    https://en.wikipedia.org/wiki/YCbCr#JPEG_conversion.\n\n    Args:\n        img (ndarray): The input image. It accepts:\n            1. np.uint8 type with range [0, 255];\n            2. np.float32 type with range [0, 1].\n        y_only (bool): Whether to only return Y channel. Default: False.\n\n    Returns:\n        ndarray: The converted YCbCr image. The output image has the same type\n            and range as input image.\n    \"\"\"", "\n", "img_type", "=", "img", ".", "dtype", "\n", "\n", "if", "img_type", "!=", "np", ".", "uint8", ":", "\n", "        ", "img", "*=", "255.", "\n", "\n", "", "if", "y_only", ":", "\n", "        ", "out_img", "=", "np", ".", "dot", "(", "img", ",", "[", "65.481", ",", "128.553", ",", "24.966", "]", ")", "/", "255.", "+", "16.0", "\n", "", "else", ":", "\n", "        ", "out_img", "=", "np", ".", "matmul", "(", "\n", "img", ",", "[", "[", "24.966", ",", "112.0", ",", "-", "18.214", "]", ",", "[", "128.553", ",", "-", "74.203", ",", "-", "93.786", "]", ",", "\n", "[", "65.481", ",", "-", "37.797", ",", "112.0", "]", "]", ")", "+", "[", "16", ",", "128", ",", "128", "]", "\n", "\n", "", "if", "img_type", "!=", "np", ".", "uint8", ":", "\n", "        ", "out_img", "/=", "255.", "\n", "", "else", ":", "\n", "        ", "out_img", "=", "out_img", ".", "round", "(", ")", "\n", "\n", "", "return", "out_img", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.psnr_ssim.to_y_channel": [[339, 353], ["rgb2ycbcr.astype", "psnr_ssim.rgb2ycbcr"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.psnr_ssim.rgb2ycbcr"], ["", "def", "to_y_channel", "(", "img", ")", ":", "\n", "    ", "\"\"\"Change to Y channel of YCbCr.\n\n    Args:\n        img (ndarray): Images with range [0, 255].\n\n    Returns:\n        (ndarray): Images with range [0, 255] (float type) without round.\n    \"\"\"", "\n", "img", "=", "img", ".", "astype", "(", "np", ".", "float32", ")", "/", "255.", "\n", "if", "img", ".", "ndim", "==", "3", "and", "img", ".", "shape", "[", "2", "]", "==", "3", ":", "\n", "        ", "img", "=", "rgb2ycbcr", "(", "img", ",", "y_only", "=", "True", ")", "\n", "img", "=", "img", "[", "...", ",", "None", "]", "\n", "", "return", "img", "*", "255.", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid.FID.__init__": [[36, 56], ["paddle.load", "fid.FID.model.load_dict", "fid.FID.model.eval", "fid.FID.reset", "inception.InceptionV3", "paddle.utils.download.get_weights_path_from_url"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid.FID.reset"], ["    ", "def", "__init__", "(", "self", ",", "\n", "batch_size", "=", "1", ",", "\n", "use_GPU", "=", "True", ",", "\n", "dims", "=", "2048", ",", "\n", "premodel_path", "=", "None", ",", "\n", "model", "=", "None", ")", ":", "\n", "        ", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "use_GPU", "=", "use_GPU", "\n", "self", ".", "dims", "=", "dims", "\n", "self", ".", "premodel_path", "=", "premodel_path", "\n", "if", "model", "is", "None", ":", "\n", "            ", "block_idx", "=", "InceptionV3", ".", "BLOCK_INDEX_BY_DIM", "[", "dims", "]", "\n", "model", "=", "InceptionV3", "(", "[", "block_idx", "]", ",", "normalize_input", "=", "False", ")", "\n", "", "if", "premodel_path", "is", "None", ":", "\n", "            ", "premodel_path", "=", "get_weights_path_from_url", "(", "INCEPTIONV3_WEIGHT_URL", ")", "\n", "", "self", ".", "model", "=", "model", "\n", "param_dict", "=", "paddle", ".", "load", "(", "premodel_path", ")", "\n", "self", ".", "model", ".", "load_dict", "(", "param_dict", ")", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid.FID.reset": [[57, 61], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "preds", "=", "[", "]", "\n", "self", ".", "gts", "=", "[", "]", "\n", "self", ".", "results", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid.FID.update": [[62, 67], ["fid.calculate_inception_val", "fid.FID.preds.append", "fid.FID.gts.append"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid.calculate_inception_val", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "update", "(", "self", ",", "preds", ",", "gts", ")", ":", "\n", "        ", "preds_inception", ",", "gts_inception", "=", "calculate_inception_val", "(", "\n", "preds", ",", "gts", ",", "self", ".", "batch_size", ",", "self", ".", "model", ",", "self", ".", "use_GPU", ",", "self", ".", "dims", ")", "\n", "self", ".", "preds", ".", "append", "(", "preds_inception", ")", "\n", "self", ".", "gts", ".", "append", "(", "gts_inception", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid.FID.accumulate": [[68, 74], ["numpy.concatenate", "numpy.concatenate", "fid.calculate_fid_given_img", "fid.FID.reset"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid.calculate_fid_given_img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid.FID.reset"], ["", "def", "accumulate", "(", "self", ")", ":", "\n", "        ", "self", ".", "preds", "=", "np", ".", "concatenate", "(", "self", ".", "preds", ",", "axis", "=", "0", ")", "\n", "self", ".", "gts", "=", "np", ".", "concatenate", "(", "self", ".", "gts", ",", "axis", "=", "0", ")", "\n", "value", "=", "calculate_fid_given_img", "(", "self", ".", "preds", ",", "self", ".", "gts", ")", "\n", "self", ".", "reset", "(", ")", "\n", "return", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid.FID.name": [[75, 77], ["None"], "methods", ["None"], ["", "def", "name", "(", "self", ")", ":", "\n", "        ", "return", "'FID'", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid._calculate_frechet_distance": [[79, 110], ["numpy.atleast_1d", "numpy.atleast_1d", "numpy.atleast_2d", "numpy.atleast_2d", "np.atleast_2d.dot", "scipy.linalg.sqrtm", "numpy.iscomplexobj", "numpy.trace", "np.atleast_2d.dot", "numpy.isfinite().all", "print", "scipy.linalg.sqrtm", "numpy.eye", "numpy.allclose", "numpy.max", "ValueError", "numpy.trace", "numpy.isfinite", "numpy.abs", "diff.dot", "numpy.trace", "numpy.diagonal"], "function", ["None"], ["", "", "def", "_calculate_frechet_distance", "(", "mu1", ",", "sigma1", ",", "mu2", ",", "sigma2", ",", "eps", "=", "1e-6", ")", ":", "\n", "    ", "m1", "=", "np", ".", "atleast_1d", "(", "mu1", ")", "\n", "m2", "=", "np", ".", "atleast_1d", "(", "mu2", ")", "\n", "\n", "sigma1", "=", "np", ".", "atleast_2d", "(", "sigma1", ")", "\n", "sigma2", "=", "np", ".", "atleast_2d", "(", "sigma2", ")", "\n", "\n", "assert", "mu1", ".", "shape", "==", "mu2", ".", "shape", ",", "'Training and test mean vectors have different lengths'", "\n", "assert", "sigma1", ".", "shape", "==", "sigma2", ".", "shape", ",", "'Training and test covariances have different dimensions'", "\n", "\n", "diff", "=", "mu1", "-", "mu2", "\n", "\n", "t", "=", "sigma1", ".", "dot", "(", "sigma2", ")", "\n", "covmean", ",", "_", "=", "linalg", ".", "sqrtm", "(", "sigma1", ".", "dot", "(", "sigma2", ")", ",", "disp", "=", "False", ")", "\n", "if", "not", "np", ".", "isfinite", "(", "covmean", ")", ".", "all", "(", ")", ":", "\n", "        ", "msg", "=", "(", "'fid calculation produces singular product; '", "\n", "'adding %s to diagonal of cov estimates'", ")", "%", "eps", "\n", "print", "(", "msg", ")", "\n", "offset", "=", "np", ".", "eye", "(", "sigma1", ".", "shape", "[", "0", "]", ")", "*", "eps", "\n", "covmean", "=", "linalg", ".", "sqrtm", "(", "(", "sigma1", "+", "offset", ")", ".", "dot", "(", "sigma2", "+", "offset", ")", ")", "\n", "\n", "# Numerical error might give slight imaginary component", "\n", "", "if", "np", ".", "iscomplexobj", "(", "covmean", ")", ":", "\n", "        ", "if", "not", "np", ".", "allclose", "(", "np", ".", "diagonal", "(", "covmean", ")", ".", "imag", ",", "0", ",", "atol", "=", "1e-3", ")", ":", "\n", "            ", "m", "=", "np", ".", "max", "(", "np", ".", "abs", "(", "covmean", ".", "imag", ")", ")", "\n", "raise", "ValueError", "(", "'Imaginary component {}'", ".", "format", "(", "m", ")", ")", "\n", "", "covmean", "=", "covmean", ".", "real", "\n", "", "tr_covmean", "=", "np", ".", "trace", "(", "covmean", ")", "\n", "\n", "return", "(", "diff", ".", "dot", "(", "diff", ")", "+", "np", ".", "trace", "(", "sigma1", ")", "+", "np", ".", "trace", "(", "sigma2", ")", "-", "\n", "2", "*", "tr_covmean", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid._get_activations_from_ims": [[112, 131], ["len", "numpy.empty", "range", "paddle.to_tensor", "pred.reshape().cpu().numpy", "len", "len", "images.transpose.transpose", "len", "model", "pred.reshape().cpu", "pred.reshape"], "function", ["None"], ["", "def", "_get_activations_from_ims", "(", "img", ",", "model", ",", "batch_size", ",", "dims", ",", "use_gpu", ")", ":", "\n", "    ", "n_batches", "=", "(", "len", "(", "img", ")", "+", "batch_size", "-", "1", ")", "//", "batch_size", "\n", "n_used_img", "=", "len", "(", "img", ")", "\n", "\n", "pred_arr", "=", "np", ".", "empty", "(", "(", "n_used_img", ",", "dims", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "n_batches", ")", ":", "\n", "        ", "start", "=", "i", "*", "batch_size", "\n", "end", "=", "start", "+", "batch_size", "\n", "if", "end", ">", "len", "(", "img", ")", ":", "\n", "            ", "end", "=", "len", "(", "img", ")", "\n", "", "images", "=", "img", "[", "start", ":", "end", "]", "\n", "if", "images", ".", "shape", "[", "1", "]", "!=", "3", ":", "\n", "            ", "images", "=", "images", ".", "transpose", "(", "(", "0", ",", "3", ",", "1", ",", "2", ")", ")", "\n", "\n", "", "images", "=", "paddle", ".", "to_tensor", "(", "images", ")", "\n", "pred", "=", "model", "(", "images", ")", "[", "0", "]", "[", "0", "]", "\n", "pred_arr", "[", "start", ":", "end", "]", "=", "pred", ".", "reshape", "(", "[", "end", "-", "start", ",", "-", "1", "]", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "", "return", "pred_arr", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid._compute_statistic_of_img": [[133, 137], ["numpy.mean", "numpy.cov"], "function", ["None"], ["", "def", "_compute_statistic_of_img", "(", "act", ")", ":", "\n", "    ", "mu", "=", "np", ".", "mean", "(", "act", ",", "axis", "=", "0", ")", "\n", "sigma", "=", "np", ".", "cov", "(", "act", ",", "rowvar", "=", "False", ")", "\n", "return", "mu", ",", "sigma", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid.calculate_inception_val": [[139, 150], ["fid._get_activations_from_ims", "fid._get_activations_from_ims"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid._get_activations_from_ims", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid._get_activations_from_ims"], ["", "def", "calculate_inception_val", "(", "img_fake", ",", "\n", "img_real", ",", "\n", "batch_size", ",", "\n", "model", ",", "\n", "use_gpu", "=", "True", ",", "\n", "dims", "=", "2048", ")", ":", "\n", "    ", "act_fake", "=", "_get_activations_from_ims", "(", "img_fake", ",", "model", ",", "batch_size", ",", "dims", ",", "\n", "use_gpu", ")", "\n", "act_real", "=", "_get_activations_from_ims", "(", "img_real", ",", "model", ",", "batch_size", ",", "dims", ",", "\n", "use_gpu", ")", "\n", "return", "act_fake", ",", "act_real", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid.calculate_fid_given_img": [[152, 158], ["fid._compute_statistic_of_img", "fid._compute_statistic_of_img", "fid._calculate_frechet_distance"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid._compute_statistic_of_img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid._compute_statistic_of_img", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid._calculate_frechet_distance"], ["", "def", "calculate_fid_given_img", "(", "act_fake", ",", "act_real", ")", ":", "\n", "\n", "    ", "m1", ",", "s1", "=", "_compute_statistic_of_img", "(", "act_fake", ")", "\n", "m2", ",", "s2", "=", "_compute_statistic_of_img", "(", "act_real", ")", "\n", "fid_value", "=", "_calculate_frechet_distance", "(", "m1", ",", "s1", ",", "m2", ",", "s2", ")", "\n", "return", "fid_value", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid._get_activations": [[160, 227], ["numpy.empty", "tqdm", "print", "len", "print", "len", "len", "range", "paddle.to_tensor.transpose", "len", "numpy.array", "numpy.array", "len", "cv2.imread", "cv2.cvtColor", "numpy.array", "numpy.array().astype", "numpy.array().astype", "fid.inception_infer", "PIL.Image.open().convert", "img_list.append", "str", "paddle.guard", "paddle.to_tensor", "paddle.load", "model.set_dict", "model.eval", "[].numpy", "[].numpy.reshape", "im.resize.resize", "im.resize.resize", "numpy.array().astype", "cv2.imread().astype", "paddle.to_tensor.astype", "numpy.array", "numpy.array", "PIL.Image.open", "str", "numpy.array", "cv2.imread", "str", "model"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.imread", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid.inception_infer", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.models.base_model.BaseModel.eval", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.resize", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.imread"], ["", "def", "_get_activations", "(", "files", ",", "\n", "model", ",", "\n", "batch_size", ",", "\n", "dims", ",", "\n", "use_gpu", ",", "\n", "premodel_path", ",", "\n", "style", "=", "None", ")", ":", "\n", "    ", "if", "len", "(", "files", ")", "%", "batch_size", "!=", "0", ":", "\n", "        ", "print", "(", "(", "'Warning: number of images is not a multiple of the '", "\n", "'batch size. Some samples are going to be ignored.'", ")", ")", "\n", "", "if", "batch_size", ">", "len", "(", "files", ")", ":", "\n", "        ", "print", "(", "(", "'Warning: batch size is bigger than the datasets size. '", "\n", "'Setting batch size to datasets size'", ")", ")", "\n", "batch_size", "=", "len", "(", "files", ")", "\n", "\n", "", "n_batches", "=", "len", "(", "files", ")", "//", "batch_size", "\n", "n_used_imgs", "=", "n_batches", "*", "batch_size", "\n", "\n", "pred_arr", "=", "np", ".", "empty", "(", "(", "n_used_imgs", ",", "dims", ")", ")", "\n", "for", "i", "in", "tqdm", "(", "range", "(", "n_batches", ")", ")", ":", "\n", "        ", "start", "=", "i", "*", "batch_size", "\n", "end", "=", "start", "+", "batch_size", "\n", "\n", "# same as stargan-v2 official implementation: resize to 256 first, then resize to 299", "\n", "if", "style", "==", "'stargan'", ":", "\n", "            ", "img_list", "=", "[", "]", "\n", "for", "f", "in", "files", "[", "start", ":", "end", "]", ":", "\n", "                ", "im", "=", "Image", ".", "open", "(", "str", "(", "f", ")", ")", ".", "convert", "(", "'RGB'", ")", "\n", "if", "im", ".", "size", "[", "0", "]", "!=", "299", ":", "\n", "                    ", "im", "=", "im", ".", "resize", "(", "(", "256", ",", "256", ")", ",", "2", ")", "\n", "im", "=", "im", ".", "resize", "(", "(", "299", ",", "299", ")", ",", "2", ")", "\n", "\n", "", "img_list", ".", "append", "(", "np", ".", "array", "(", "im", ")", ".", "astype", "(", "'float32'", ")", ")", "\n", "\n", "", "images", "=", "np", ".", "array", "(", "img_list", ")", "\n", "", "else", ":", "\n", "            ", "images", "=", "np", ".", "array", "(", "\n", "[", "imread", "(", "str", "(", "f", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "for", "f", "in", "files", "[", "start", ":", "end", "]", "]", ")", "\n", "\n", "", "if", "len", "(", "images", ".", "shape", ")", "!=", "4", ":", "\n", "            ", "images", "=", "imread", "(", "str", "(", "files", "[", "start", "]", ")", ")", "\n", "images", "=", "cv2", ".", "cvtColor", "(", "images", ",", "cv2", ".", "COLOR_BGR2GRAY", ")", "\n", "images", "=", "np", ".", "array", "(", "[", "images", ".", "astype", "(", "np", ".", "float32", ")", "]", ")", "\n", "\n", "", "images", "=", "images", ".", "transpose", "(", "(", "0", ",", "3", ",", "1", ",", "2", ")", ")", "\n", "images", "/=", "255", "\n", "\n", "# imagenet normalization", "\n", "if", "style", "==", "'stargan'", ":", "\n", "            ", "mean", "=", "np", ".", "array", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ")", ".", "astype", "(", "'float32'", ")", "\n", "std", "=", "np", ".", "array", "(", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ".", "astype", "(", "'float32'", ")", "\n", "images", "[", ":", "]", "=", "(", "images", "[", ":", "]", "-", "mean", "[", ":", ",", "None", ",", "None", "]", ")", "/", "std", "[", ":", ",", "None", ",", "None", "]", "\n", "\n", "", "if", "style", "==", "'stargan'", ":", "\n", "            ", "pred_arr", "[", "start", ":", "end", "]", "=", "inception_infer", "(", "images", ",", "premodel_path", ")", "\n", "", "else", ":", "\n", "            ", "with", "paddle", ".", "guard", "(", ")", ":", "\n", "                ", "images", "=", "paddle", ".", "to_tensor", "(", "images", ")", "\n", "param_dict", ",", "_", "=", "paddle", ".", "load", "(", "premodel_path", ")", "\n", "model", ".", "set_dict", "(", "param_dict", ")", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "pred", "=", "model", "(", "images", ")", "[", "0", "]", "[", "0", "]", ".", "numpy", "(", ")", "\n", "\n", "pred_arr", "[", "start", ":", "end", "]", "=", "pred", ".", "reshape", "(", "end", "-", "start", ",", "-", "1", ")", "\n", "\n", "", "", "", "return", "pred_arr", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid.inception_infer": [[229, 237], ["paddle.static.Executor", "paddle.static.load_inference_model", "paddle.static.Executor.run"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.midas_predictor.MiDaSPredictor.run"], ["", "def", "inception_infer", "(", "x", ",", "model_path", ")", ":", "\n", "    ", "exe", "=", "paddle", ".", "static", ".", "Executor", "(", ")", "\n", "[", "inference_program", ",", "feed_target_names", ",", "\n", "fetch_targets", "]", "=", "paddle", ".", "static", ".", "load_inference_model", "(", "model_path", ",", "exe", ")", "\n", "results", "=", "exe", ".", "run", "(", "inference_program", ",", "\n", "feed", "=", "{", "feed_target_names", "[", "0", "]", ":", "x", "}", ",", "\n", "fetch_list", "=", "fetch_targets", ")", "\n", "return", "results", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid._calculate_activation_statistics": [[239, 251], ["fid._get_activations", "numpy.mean", "numpy.cov"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid._get_activations"], ["", "def", "_calculate_activation_statistics", "(", "files", ",", "\n", "model", ",", "\n", "premodel_path", ",", "\n", "batch_size", "=", "50", ",", "\n", "dims", "=", "2048", ",", "\n", "use_gpu", "=", "False", ",", "\n", "style", "=", "None", ")", ":", "\n", "    ", "act", "=", "_get_activations", "(", "files", ",", "model", ",", "batch_size", ",", "dims", ",", "use_gpu", ",", "\n", "premodel_path", ",", "style", ")", "\n", "mu", "=", "np", ".", "mean", "(", "act", ",", "axis", "=", "0", ")", "\n", "sigma", "=", "np", ".", "cov", "(", "act", ",", "rowvar", "=", "False", ")", "\n", "return", "mu", ",", "sigma", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid._compute_statistics_of_path": [[253, 274], ["path.endswith", "numpy.load", "np.load.close", "os.walk", "fid._calculate_activation_statistics", "fnmatch.filter", "fnmatch.filter", "files.append", "os.path.join"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.load", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.close", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid._calculate_activation_statistics", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "_compute_statistics_of_path", "(", "path", ",", "\n", "model", ",", "\n", "batch_size", ",", "\n", "dims", ",", "\n", "use_gpu", ",", "\n", "premodel_path", ",", "\n", "style", "=", "None", ")", ":", "\n", "    ", "if", "path", ".", "endswith", "(", "'.npz'", ")", ":", "\n", "        ", "f", "=", "np", ".", "load", "(", "path", ")", "\n", "m", ",", "s", "=", "f", "[", "'mu'", "]", "[", ":", "]", ",", "f", "[", "'sigma'", "]", "[", ":", "]", "\n", "f", ".", "close", "(", ")", "\n", "", "else", ":", "\n", "        ", "files", "=", "[", "]", "\n", "for", "root", ",", "dirnames", ",", "filenames", "in", "os", ".", "walk", "(", "path", ")", ":", "\n", "            ", "for", "filename", "in", "fnmatch", ".", "filter", "(", "\n", "filenames", ",", "'*.jpg'", ")", "or", "fnmatch", ".", "filter", "(", "filenames", ",", "'*.png'", ")", ":", "\n", "                ", "files", ".", "append", "(", "os", ".", "path", ".", "join", "(", "root", ",", "filename", ")", ")", "\n", "", "", "m", ",", "s", "=", "_calculate_activation_statistics", "(", "files", ",", "model", ",", "premodel_path", ",", "\n", "batch_size", ",", "dims", ",", "use_gpu", ",", "\n", "style", ")", "\n", "", "return", "m", ",", "s", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid.calculate_fid_given_paths": [[276, 303], ["os.path.exists", "fid._compute_statistics_of_path", "fid._compute_statistics_of_path", "fid._calculate_frechet_distance", "os.path.exists", "RuntimeError", "paddle.guard", "inception.InceptionV3"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid._compute_statistics_of_path", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid._compute_statistics_of_path", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.metrics.fid._calculate_frechet_distance"], ["", "def", "calculate_fid_given_paths", "(", "paths", ",", "\n", "premodel_path", ",", "\n", "batch_size", ",", "\n", "use_gpu", ",", "\n", "dims", ",", "\n", "model", "=", "None", ",", "\n", "style", "=", "None", ")", ":", "\n", "    ", "assert", "os", ".", "path", ".", "exists", "(", "\n", "premodel_path", "\n", ")", ",", "'pretrain_model path {} is not exists! Please download it first'", ".", "format", "(", "\n", "premodel_path", ")", "\n", "for", "p", "in", "paths", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "p", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "'Invalid path: %s'", "%", "p", ")", "\n", "\n", "", "", "if", "model", "is", "None", "and", "style", "!=", "'stargan'", ":", "\n", "        ", "with", "paddle", ".", "guard", "(", ")", ":", "\n", "            ", "block_idx", "=", "InceptionV3", ".", "BLOCK_INDEX_BY_DIM", "[", "dims", "]", "\n", "model", "=", "InceptionV3", "(", "[", "block_idx", "]", ",", "class_dim", "=", "1008", ")", "\n", "\n", "", "", "m1", ",", "s1", "=", "_compute_statistics_of_path", "(", "paths", "[", "0", "]", ",", "model", ",", "batch_size", ",", "dims", ",", "\n", "use_gpu", ",", "premodel_path", ",", "style", ")", "\n", "m2", ",", "s2", "=", "_compute_statistics_of_path", "(", "paths", "[", "1", "]", ",", "model", ",", "batch_size", ",", "dims", ",", "\n", "use_gpu", ",", "premodel_path", ",", "style", ")", "\n", "\n", "fid_value", "=", "_calculate_frechet_distance", "(", "m1", ",", "s1", ",", "m2", ",", "s2", ")", "\n", "return", "fid_value", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.solver.builder.build_lr_scheduler": [[21, 25], ["cfg.copy", "cfg.copy.pop", "LRSCHEDULERS.get"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get"], ["from", "paddle", ".", "io", "import", "DistributedBatchSampler", "\n", "\n", "from", ".", "repeat_dataset", "import", "RepeatDataset", "\n", "from", ".", ".", "utils", ".", "registry", "import", "Registry", ",", "build_from_config", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.solver.builder.build_optimizer": [[27, 31], ["cfg.copy", "cfg.copy.pop", "OPTIMIZERS.get"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.registry.Registry.get"], ["\n", "\n", "def", "build_dataset", "(", "cfg", ")", ":", "\n", "    ", "name", "=", "cfg", ".", "pop", "(", "'name'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.solver.lr_scheduler.NonLinearDecay.__init__": [[26, 29], ["paddle.optimizer.lr.LRScheduler.__init__"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "learning_rate", ",", "lr_decay", ",", "last_epoch", "=", "-", "1", ")", ":", "\n", "        ", "self", ".", "lr_decay", "=", "lr_decay", "\n", "super", "(", "NonLinearDecay", ",", "self", ")", ".", "__init__", "(", "learning_rate", ",", "last_epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.solver.lr_scheduler.NonLinearDecay.get_lr": [[30, 33], ["None"], "methods", ["None"], ["", "def", "get_lr", "(", "self", ")", ":", "\n", "        ", "lr", "=", "self", ".", "base_lr", "/", "(", "1.0", "+", "self", ".", "lr_decay", "*", "self", ".", "last_epoch", ")", "\n", "return", "lr", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.solver.lr_scheduler.LinearDecay.__init__": [[37, 46], ["paddle.optimizer.lr.LambdaDecay.__init__", "max", "float"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "learning_rate", ",", "start_epoch", ",", "decay_epochs", ",", "\n", "iters_per_epoch", ")", ":", "\n", "        ", "def", "lambda_rule", "(", "epoch", ")", ":", "\n", "            ", "epoch", "=", "epoch", "//", "iters_per_epoch", "\n", "lr_l", "=", "1.0", "-", "max", "(", "0", ",", "\n", "epoch", "+", "1", "-", "start_epoch", ")", "/", "float", "(", "decay_epochs", "+", "1", ")", "\n", "return", "lr_l", "\n", "\n", "", "super", "(", ")", ".", "__init__", "(", "learning_rate", ",", "lambda_rule", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.solver.lr_scheduler.CosineAnnealingRestartLR.__init__": [[69, 85], ["paddle.optimizer.lr.LRScheduler.__init__", "len", "len", "sum", "range", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "\n", "learning_rate", ",", "\n", "periods", ",", "\n", "restart_weights", "=", "[", "1", "]", ",", "\n", "eta_min", "=", "0", ",", "\n", "last_epoch", "=", "-", "1", ")", ":", "\n", "        ", "self", ".", "periods", "=", "periods", "\n", "self", ".", "restart_weights", "=", "restart_weights", "\n", "self", ".", "eta_min", "=", "eta_min", "\n", "assert", "(", "len", "(", "self", ".", "periods", ")", "==", "len", "(", "self", ".", "restart_weights", ")", "\n", ")", ",", "'periods and restart_weights should have the same length.'", "\n", "self", ".", "cumulative_period", "=", "[", "\n", "sum", "(", "self", ".", "periods", "[", "0", ":", "i", "+", "1", "]", ")", "for", "i", "in", "range", "(", "0", ",", "len", "(", "self", ".", "periods", ")", ")", "\n", "]", "\n", "super", "(", "CosineAnnealingRestartLR", ",", "self", ")", ".", "__init__", "(", "learning_rate", ",", "\n", "last_epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.solver.lr_scheduler.CosineAnnealingRestartLR.get_lr": [[86, 100], ["enumerate", "math.cos"], "methods", ["None"], ["", "def", "get_lr", "(", "self", ")", ":", "\n", "        ", "for", "i", ",", "period", "in", "enumerate", "(", "self", ".", "cumulative_period", ")", ":", "\n", "            ", "if", "self", ".", "last_epoch", "<=", "period", ":", "\n", "                ", "index", "=", "i", "\n", "break", "\n", "\n", "", "", "current_weight", "=", "self", ".", "restart_weights", "[", "index", "]", "\n", "nearest_restart", "=", "0", "if", "index", "==", "0", "else", "self", ".", "cumulative_period", "[", "index", "-", "1", "]", "\n", "current_period", "=", "self", ".", "periods", "[", "index", "]", "\n", "\n", "lr", "=", "self", ".", "eta_min", "+", "current_weight", "*", "0.5", "*", "(", "\n", "self", ".", "base_lr", "-", "self", ".", "eta_min", ")", "*", "(", "1", "+", "math", ".", "cos", "(", "math", ".", "pi", "*", "(", "\n", "(", "self", ".", "last_epoch", "-", "nearest_restart", ")", "/", "current_period", ")", ")", ")", "\n", "return", "lr", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.Timer.__init__": [[17, 22], ["process_div2k_data.Timer.start"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.start"], ["def", "__init__", "(", "self", ",", "start", "=", "True", ",", "print_tmpl", "=", "None", ")", ":", "\n", "        ", "self", ".", "_is_running", "=", "False", "\n", "self", ".", "print_tmpl", "=", "print_tmpl", "if", "print_tmpl", "else", "'{:.3f}'", "\n", "if", "start", ":", "\n", "            ", "self", ".", "start", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.Timer.is_running": [[23, 27], ["None"], "methods", ["None"], ["", "", "@", "property", "\n", "def", "is_running", "(", "self", ")", ":", "\n", "        ", "\"\"\"bool: indicate whether the timer is running\"\"\"", "\n", "return", "self", ".", "_is_running", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.Timer.__enter__": [[28, 31], ["process_div2k_data.Timer.start"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.start"], ["", "def", "__enter__", "(", "self", ")", ":", "\n", "        ", "self", ".", "start", "(", ")", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.Timer.__exit__": [[32, 35], ["print", "process_div2k_data.Timer.print_tmpl.format", "process_div2k_data.Timer.since_last_check"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.Timer.since_last_check"], ["", "def", "__exit__", "(", "self", ",", "type", ",", "value", ",", "traceback", ")", ":", "\n", "        ", "print", "(", "self", ".", "print_tmpl", ".", "format", "(", "self", ".", "since_last_check", "(", ")", ")", ")", "\n", "self", ".", "_is_running", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.Timer.start": [[36, 42], ["time.time.time", "time.time.time"], "methods", ["None"], ["", "def", "start", "(", "self", ")", ":", "\n", "        ", "\"\"\"Start the timer.\"\"\"", "\n", "if", "not", "self", ".", "_is_running", ":", "\n", "            ", "self", ".", "_t_start", "=", "time", "(", ")", "\n", "self", ".", "_is_running", "=", "True", "\n", "", "self", ".", "_t_last", "=", "time", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.Timer.since_start": [[43, 52], ["time.time.time", "ValueError"], "methods", ["None"], ["", "def", "since_start", "(", "self", ")", ":", "\n", "        ", "\"\"\"Total time since the timer is started.\n\n        Returns (float): Time in seconds.\n        \"\"\"", "\n", "if", "not", "self", ".", "_is_running", ":", "\n", "            ", "raise", "ValueError", "(", "'timer is not running'", ")", "\n", "", "self", ".", "_t_last", "=", "time", "(", ")", "\n", "return", "self", ".", "_t_last", "-", "self", ".", "_t_start", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.Timer.since_last_check": [[53, 66], ["time.time.time", "ValueError", "time.time.time"], "methods", ["None"], ["", "def", "since_last_check", "(", "self", ")", ":", "\n", "        ", "\"\"\"Time since the last checking.\n\n        Either :func:`since_start` or :func:`since_last_check` is a checking\n        operation.\n\n        Returns (float): Time in seconds.\n        \"\"\"", "\n", "if", "not", "self", ".", "_is_running", ":", "\n", "            ", "raise", "ValueError", "(", "'timer is not running'", ")", "\n", "", "dur", "=", "time", "(", ")", "-", "self", ".", "_t_last", "\n", "self", ".", "_t_last", "=", "time", "(", ")", "\n", "return", "dur", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.__init__": [[70, 77], ["process_div2k_data.ProgressBar.start"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.start"], ["def", "__init__", "(", "self", ",", "task_num", "=", "0", ",", "bar_width", "=", "50", ",", "start", "=", "True", ",", "file", "=", "sys", ".", "stdout", ")", ":", "\n", "        ", "self", ".", "task_num", "=", "task_num", "\n", "self", ".", "bar_width", "=", "bar_width", "\n", "self", ".", "completed", "=", "0", "\n", "self", ".", "file", "=", "file", "\n", "if", "start", ":", "\n", "            ", "self", ".", "start", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.terminal_width": [[78, 82], ["shutil.get_terminal_size"], "methods", ["None"], ["", "", "@", "property", "\n", "def", "terminal_width", "(", "self", ")", ":", "\n", "        ", "width", ",", "_", "=", "get_terminal_size", "(", ")", "\n", "return", "width", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.start": [[83, 91], ["process_div2k_data.ProgressBar.file.flush", "process_div2k_data.Timer", "process_div2k_data.ProgressBar.file.write", "process_div2k_data.ProgressBar.file.write"], "methods", ["None"], ["", "def", "start", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "task_num", ">", "0", ":", "\n", "            ", "self", ".", "file", ".", "write", "(", "f'[{\" \" * self.bar_width}] 0/{self.task_num}, '", "\n", "'elapsed: 0s, ETA:'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "file", ".", "write", "(", "'completed: 0, elapsed: 0s'", ")", "\n", "", "self", ".", "file", ".", "flush", "(", ")", "\n", "self", ".", "timer", "=", "Timer", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update": [[92, 119], ["process_div2k_data.ProgressBar.timer.since_start", "process_div2k_data.ProgressBar.file.flush", "float", "int", "min", "max", "int", "process_div2k_data.ProgressBar.file.write", "process_div2k_data.ProgressBar.file.write", "float", "int", "msg.format", "int", "int", "int", "len"], "methods", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.Timer.since_start"], ["", "def", "update", "(", "self", ",", "num_tasks", "=", "1", ")", ":", "\n", "        ", "assert", "num_tasks", ">", "0", "\n", "self", ".", "completed", "+=", "num_tasks", "\n", "elapsed", "=", "self", ".", "timer", ".", "since_start", "(", ")", "\n", "if", "elapsed", ">", "0", ":", "\n", "            ", "fps", "=", "self", ".", "completed", "/", "elapsed", "\n", "", "else", ":", "\n", "            ", "fps", "=", "float", "(", "'inf'", ")", "\n", "", "if", "self", ".", "task_num", ">", "0", ":", "\n", "            ", "percentage", "=", "self", ".", "completed", "/", "float", "(", "self", ".", "task_num", ")", "\n", "eta", "=", "int", "(", "elapsed", "*", "(", "1", "-", "percentage", ")", "/", "percentage", "+", "0.5", ")", "\n", "msg", "=", "f'\\r[{{}}] {self.completed}/{self.task_num}, '", "f'{fps:.1f} task/s, elapsed: {int(elapsed + 0.5)}s, '", "f'ETA: {eta:5}s'", "\n", "\n", "bar_width", "=", "min", "(", "self", ".", "bar_width", ",", "\n", "int", "(", "self", ".", "terminal_width", "-", "len", "(", "msg", ")", ")", "+", "2", ",", "\n", "int", "(", "self", ".", "terminal_width", "*", "0.6", ")", ")", "\n", "bar_width", "=", "max", "(", "2", ",", "bar_width", ")", "\n", "mark_width", "=", "int", "(", "bar_width", "*", "percentage", ")", "\n", "bar_chars", "=", "'>'", "*", "mark_width", "+", "' '", "*", "(", "bar_width", "-", "mark_width", ")", "\n", "self", ".", "file", ".", "write", "(", "msg", ".", "format", "(", "bar_chars", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "file", ".", "write", "(", "\n", "f'completed: {self.completed}, elapsed: {int(elapsed + 0.5)}s,'", "\n", "f' {fps:.1f} tasks/s'", ")", "\n", "", "self", ".", "file", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.main_extract_subimages": [[121, 172], ["os.join", "os.join", "process_div2k_data.extract_subimages", "os.join", "os.join", "process_div2k_data.extract_subimages"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.extract_subimages", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.extract_subimages"], ["", "", "def", "main_extract_subimages", "(", "args", ")", ":", "\n", "    ", "\"\"\"A multi-thread tool to crop large images to sub-images for faster IO.\n\n    It is used for DIV2K dataset.\n\n    args (dict): Configuration dict. It contains:\n        n_thread (int): Thread number.\n        compression_level (int):  CV_IMWRITE_PNG_COMPRESSION from 0 to 9.\n            A higher value means a smaller size and longer compression time.\n            Use 0 for faster CPU decompression. Default: 3, same in cv2.\n\n        input_folder (str): Path to the input folder.\n        save_folder (str): Path to save folder.\n        crop_size (int): Crop size.\n        step (int): Step for overlapped sliding window.\n        thresh_size (int): Threshold size. Patches whose size is lower\n            than thresh_size will be dropped.\n\n    Usage:\n        For each folder, run this script.\n        Typically, there are four folders to be processed for DIV2K dataset.\n            DIV2K_train_HR\n            DIV2K_train_LR_bicubic/X2\n            DIV2K_train_LR_bicubic/X3\n            DIV2K_train_LR_bicubic/X4\n        After process, each sub_folder should have the same number of\n        subimages.\n        Remember to modify opt configurations according to your settings.\n    \"\"\"", "\n", "\n", "opt", "=", "{", "}", "\n", "opt", "[", "'n_thread'", "]", "=", "args", ".", "n_thread", "\n", "opt", "[", "'compression_level'", "]", "=", "args", ".", "compression_level", "\n", "\n", "# HR images", "\n", "opt", "[", "'input_folder'", "]", "=", "osp", ".", "join", "(", "args", ".", "data_root", ",", "'DIV2K_train_HR'", ")", "\n", "opt", "[", "'save_folder'", "]", "=", "osp", ".", "join", "(", "args", ".", "data_root", ",", "'DIV2K_train_HR_sub'", ")", "\n", "opt", "[", "'crop_size'", "]", "=", "args", ".", "crop_size", "\n", "opt", "[", "'step'", "]", "=", "args", ".", "step", "\n", "opt", "[", "'thresh_size'", "]", "=", "args", ".", "thresh_size", "\n", "extract_subimages", "(", "opt", ")", "\n", "\n", "for", "scale", "in", "[", "2", ",", "3", ",", "4", "]", ":", "\n", "        ", "opt", "[", "'input_folder'", "]", "=", "osp", ".", "join", "(", "args", ".", "data_root", ",", "\n", "f'DIV2K_train_LR_bicubic/X{scale}'", ")", "\n", "opt", "[", "'save_folder'", "]", "=", "osp", ".", "join", "(", "args", ".", "data_root", ",", "\n", "f'DIV2K_train_LR_bicubic/X{scale}_sub'", ")", "\n", "opt", "[", "'crop_size'", "]", "=", "args", ".", "crop_size", "//", "scale", "\n", "opt", "[", "'step'", "]", "=", "args", ".", "step", "//", "scale", "\n", "opt", "[", "'thresh_size'", "]", "=", "args", ".", "thresh_size", "//", "scale", "\n", "extract_subimages", "(", "opt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.extract_subimages": [[174, 204], ["list", "process_div2k_data.ProgressBar", "multiprocessing.Pool", "multiprocessing.Pool.close", "multiprocessing.Pool.join", "print", "os.exists", "os.makedirs", "os.makedirs", "print", "print", "sys.exit", "ppgan.datasets.base_dataset.scandir", "os.join", "len", "multiprocessing.Pool.apply_async", "process_div2k_data.ProgressBar.update"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.engine.trainer.Trainer.close", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.datasets.base_dataset.scandir", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.ProgressBar.update"], ["", "", "def", "extract_subimages", "(", "opt", ")", ":", "\n", "    ", "\"\"\"Crop images to subimages.\n\n    Args:\n        opt (dict): Configuration dict. It contains:\n            input_folder (str): Path to the input folder.\n            save_folder (str): Path to save folder.\n            n_thread (int): Thread number.\n    \"\"\"", "\n", "input_folder", "=", "opt", "[", "'input_folder'", "]", "\n", "save_folder", "=", "opt", "[", "'save_folder'", "]", "\n", "if", "not", "osp", ".", "exists", "(", "save_folder", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "save_folder", ")", "\n", "print", "(", "f'mkdir {save_folder} ...'", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "f'Folder {save_folder} already exists. Exit.'", ")", "\n", "sys", ".", "exit", "(", "1", ")", "\n", "\n", "", "img_list", "=", "list", "(", "scandir", "(", "input_folder", ")", ")", "\n", "img_list", "=", "[", "osp", ".", "join", "(", "input_folder", ",", "v", ")", "for", "v", "in", "img_list", "]", "\n", "\n", "prog_bar", "=", "ProgressBar", "(", "len", "(", "img_list", ")", ")", "\n", "pool", "=", "Pool", "(", "opt", "[", "'n_thread'", "]", ")", "\n", "for", "path", "in", "img_list", ":", "\n", "        ", "pool", ".", "apply_async", "(", "worker", ",", "\n", "args", "=", "(", "path", ",", "opt", ")", ",", "\n", "callback", "=", "lambda", "arg", ":", "prog_bar", ".", "update", "(", ")", ")", "\n", "", "pool", ".", "close", "(", ")", "\n", "pool", ".", "join", "(", ")", "\n", "print", "(", "'All processes done.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.worker": [[206, 255], ["os.splitext", "re.sub", "cv2.imread", "numpy.arange", "numpy.arange", "os.basename", "ValueError", "numpy.append", "numpy.append", "cv2.imwrite", "os.join"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.apps.singan_predictor.imread", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "worker", "(", "path", ",", "opt", ")", ":", "\n", "    ", "\"\"\"Worker for each process.\n\n    Args:\n        path (str): Image path.\n        opt (dict): Configuration dict. It contains:\n            crop_size (int): Crop size.\n            step (int): Step for overlapped sliding window.\n            thresh_size (int): Threshold size. Patches whose size is smaller\n                than thresh_size will be dropped.\n            save_folder (str): Path to save folder.\n            compression_level (int): for cv2.IMWRITE_PNG_COMPRESSION.\n\n    Returns:\n        process_info (str): Process information displayed in progress bar.\n    \"\"\"", "\n", "crop_size", "=", "opt", "[", "'crop_size'", "]", "\n", "step", "=", "opt", "[", "'step'", "]", "\n", "thresh_size", "=", "opt", "[", "'thresh_size'", "]", "\n", "img_name", ",", "extension", "=", "osp", ".", "splitext", "(", "osp", ".", "basename", "(", "path", ")", ")", "\n", "\n", "# remove the x2, x3, x4 and x8 in the filename for DIV2K", "\n", "img_name", "=", "re", ".", "sub", "(", "'x[2348]'", ",", "''", ",", "img_name", ")", "\n", "\n", "img", "=", "cv2", ".", "imread", "(", "path", ",", "cv2", ".", "IMREAD_UNCHANGED", ")", "\n", "\n", "if", "img", ".", "ndim", "==", "2", "or", "img", ".", "ndim", "==", "3", ":", "\n", "        ", "h", ",", "w", "=", "img", ".", "shape", "[", ":", "2", "]", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f'Image ndim should be 2 or 3, but got {img.ndim}'", ")", "\n", "\n", "", "h_space", "=", "np", ".", "arange", "(", "0", ",", "h", "-", "crop_size", "+", "1", ",", "step", ")", "\n", "if", "h", "-", "(", "h_space", "[", "-", "1", "]", "+", "crop_size", ")", ">", "thresh_size", ":", "\n", "        ", "h_space", "=", "np", ".", "append", "(", "h_space", ",", "h", "-", "crop_size", ")", "\n", "", "w_space", "=", "np", ".", "arange", "(", "0", ",", "w", "-", "crop_size", "+", "1", ",", "step", ")", "\n", "if", "w", "-", "(", "w_space", "[", "-", "1", "]", "+", "crop_size", ")", ">", "thresh_size", ":", "\n", "        ", "w_space", "=", "np", ".", "append", "(", "w_space", ",", "w", "-", "crop_size", ")", "\n", "\n", "", "index", "=", "0", "\n", "for", "x", "in", "h_space", ":", "\n", "        ", "for", "y", "in", "w_space", ":", "\n", "            ", "index", "+=", "1", "\n", "cropped_img", "=", "img", "[", "x", ":", "x", "+", "crop_size", ",", "y", ":", "y", "+", "crop_size", ",", "...", "]", "\n", "cv2", ".", "imwrite", "(", "\n", "osp", ".", "join", "(", "opt", "[", "'save_folder'", "]", ",", "\n", "f'{img_name}_s{index:03d}{extension}'", ")", ",", "cropped_img", ",", "\n", "[", "cv2", ".", "IMWRITE_PNG_COMPRESSION", ",", "opt", "[", "'compression_level'", "]", "]", ")", "\n", "", "", "process_info", "=", "f'Processing {img_name} ...'", "\n", "return", "process_info", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.parse_args": [[257, 285], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.process_div2k_data.parse_args"], ["", "def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "\n", "description", "=", "'Prepare DIV2K dataset'", ",", "\n", "formatter_class", "=", "argparse", ".", "ArgumentDefaultsHelpFormatter", ")", "\n", "parser", ".", "add_argument", "(", "'--data-root'", ",", "help", "=", "'dataset root'", ")", "\n", "parser", ".", "add_argument", "(", "'--crop-size'", ",", "\n", "nargs", "=", "'?'", ",", "\n", "default", "=", "480", ",", "\n", "help", "=", "'cropped size for HR images'", ")", "\n", "parser", ".", "add_argument", "(", "'--step'", ",", "\n", "nargs", "=", "'?'", ",", "\n", "default", "=", "240", ",", "\n", "help", "=", "'step size for HR images'", ")", "\n", "parser", ".", "add_argument", "(", "'--thresh-size'", ",", "\n", "nargs", "=", "'?'", ",", "\n", "default", "=", "0", ",", "\n", "help", "=", "'threshold size for HR images'", ")", "\n", "parser", ".", "add_argument", "(", "'--compression-level'", ",", "\n", "nargs", "=", "'?'", ",", "\n", "default", "=", "3", ",", "\n", "help", "=", "'compression level when save png images'", ")", "\n", "parser", ".", "add_argument", "(", "'--n-thread'", ",", "\n", "nargs", "=", "'?'", ",", "\n", "default", "=", "20", ",", "\n", "help", "=", "'thread number when using multiprocessing'", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.lsr2_preprocess.process_video_file": [[46, 80], ["cv2.VideoCapture", "os.path.join", "os.makedirs", "cv2.VideoCapture.read", "frames.append", "os.path.basename().split", "vfile.split", "fa[].get_detections_for_batch", "enumerate", "cv2.VideoCapture.release", "range", "numpy.asarray", "cv2.imwrite", "os.path.basename", "len", "os.path.join"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.face_detection.api.FaceAlignment.get_detections_for_batch"], ["def", "process_video_file", "(", "vfile", ",", "args", ",", "gpu_id", ")", ":", "\n", "    ", "video_stream", "=", "cv2", ".", "VideoCapture", "(", "vfile", ")", "\n", "\n", "frames", "=", "[", "]", "\n", "while", "1", ":", "\n", "        ", "still_reading", ",", "frame", "=", "video_stream", ".", "read", "(", ")", "\n", "if", "not", "still_reading", ":", "\n", "            ", "video_stream", ".", "release", "(", ")", "\n", "break", "\n", "", "frames", ".", "append", "(", "frame", ")", "\n", "\n", "", "vidname", "=", "os", ".", "path", ".", "basename", "(", "vfile", ")", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "dirname", "=", "vfile", ".", "split", "(", "'/'", ")", "[", "-", "2", "]", "\n", "\n", "fulldir", "=", "path", ".", "join", "(", "args", ".", "preprocessed_root", ",", "dirname", ",", "vidname", ")", "\n", "os", ".", "makedirs", "(", "fulldir", ",", "exist_ok", "=", "True", ")", "\n", "\n", "batches", "=", "[", "\n", "frames", "[", "i", ":", "i", "+", "args", ".", "batch_size", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "frames", ")", ",", "args", ".", "batch_size", ")", "\n", "]", "\n", "\n", "i", "=", "-", "1", "\n", "for", "fb", "in", "batches", ":", "\n", "        ", "preds", "=", "fa", "[", "gpu_id", "]", ".", "get_detections_for_batch", "(", "np", ".", "asarray", "(", "fb", ")", ")", "\n", "\n", "for", "j", ",", "f", "in", "enumerate", "(", "preds", ")", ":", "\n", "            ", "i", "+=", "1", "\n", "if", "f", "is", "None", ":", "\n", "                ", "continue", "\n", "\n", "", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "f", "\n", "cv2", ".", "imwrite", "(", "path", ".", "join", "(", "fulldir", ",", "'{}.jpg'", ".", "format", "(", "i", ")", ")", ",", "fb", "[", "j", "]", "[", "y1", ":", "y2", ",", "\n", "x1", ":", "x2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.lsr2_preprocess.process_audio_file": [[82, 93], ["os.path.join", "os.makedirs", "os.path.join", "template.format", "subprocess.call", "os.path.basename().split", "vfile.split", "os.path.basename"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.utils.filesystem.makedirs"], ["", "", "", "def", "process_audio_file", "(", "vfile", ",", "args", ")", ":", "\n", "    ", "vidname", "=", "os", ".", "path", ".", "basename", "(", "vfile", ")", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "dirname", "=", "vfile", ".", "split", "(", "'/'", ")", "[", "-", "2", "]", "\n", "\n", "fulldir", "=", "path", ".", "join", "(", "args", ".", "preprocessed_root", ",", "dirname", ",", "vidname", ")", "\n", "os", ".", "makedirs", "(", "fulldir", ",", "exist_ok", "=", "True", ")", "\n", "\n", "wavpath", "=", "path", ".", "join", "(", "fulldir", ",", "'audio.wav'", ")", "\n", "\n", "command", "=", "template", ".", "format", "(", "vfile", ",", "wavpath", ")", "\n", "subprocess", ".", "call", "(", "command", ",", "shell", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.lsr2_preprocess.mp_handler": [[95, 103], ["lsr2_preprocess.process_video_file", "exit", "traceback.print_exc"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.lsr2_preprocess.process_video_file"], ["", "def", "mp_handler", "(", "job", ")", ":", "\n", "    ", "vfile", ",", "args", ",", "gpu_id", "=", "job", "\n", "try", ":", "\n", "        ", "process_video_file", "(", "vfile", ",", "args", ",", "gpu_id", ")", "\n", "", "except", "KeyboardInterrupt", ":", "\n", "        ", "exit", "(", "0", ")", "\n", "", "except", ":", "\n", "        ", "traceback", ".", "print_exc", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.lsr2_preprocess.main": [[105, 126], ["print", "glob.glob", "concurrent.futures.ThreadPoolExecutor", "print", "tqdm.tqdm", "os.path.join", "concurrent.futures.ThreadPoolExecutor.submit", "r.result", "enumerate", "tqdm.tqdm", "lsr2_preprocess.process_audio_file", "concurrent.futures.as_completed", "exit", "traceback.print_exc", "len"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.data.lsr2_preprocess.process_audio_file"], ["", "", "def", "main", "(", "args", ")", ":", "\n", "    ", "print", "(", "'Started processing for {} with {} GPUs'", ".", "format", "(", "\n", "args", ".", "data_root", ",", "args", ".", "ngpu", ")", ")", "\n", "\n", "filelist", "=", "glob", "(", "path", ".", "join", "(", "args", ".", "data_root", ",", "'*/*.mp4'", ")", ")", "\n", "\n", "jobs", "=", "[", "(", "vfile", ",", "args", ",", "i", "%", "args", ".", "ngpu", ")", "for", "i", ",", "vfile", "in", "enumerate", "(", "filelist", ")", "]", "\n", "p", "=", "ThreadPoolExecutor", "(", "args", ".", "ngpu", ")", "\n", "futures", "=", "[", "p", ".", "submit", "(", "mp_handler", ",", "j", ")", "for", "j", "in", "jobs", "]", "\n", "_", "=", "[", "r", ".", "result", "(", ")", "for", "r", "in", "tqdm", "(", "as_completed", "(", "futures", ")", ",", "total", "=", "len", "(", "futures", ")", ")", "]", "\n", "\n", "print", "(", "'Dumping audios...'", ")", "\n", "\n", "for", "vfile", "in", "tqdm", "(", "filelist", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "process_audio_file", "(", "vfile", ",", "args", ")", "\n", "", "except", "KeyboardInterrupt", ":", "\n", "            ", "exit", "(", "0", ")", "\n", "", "except", ":", "\n", "            ", "traceback", ".", "print_exc", "(", ")", "\n", "continue", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.collect_noise.noise_patch": [[35, 53], ["np.array.convert", "numpy.array", "numpy.array", "range", "range", "numpy.var", "numpy.mean", "collect_patchs.append"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.discriminators.discriminator_styleganv2.var", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.append"], ["", "def", "noise_patch", "(", "rgb_img", ",", "sp", ",", "max_var", ",", "min_mean", ")", ":", "\n", "    ", "img", "=", "rgb_img", ".", "convert", "(", "'L'", ")", "\n", "rgb_img", "=", "np", ".", "array", "(", "rgb_img", ")", "\n", "img", "=", "np", ".", "array", "(", "img", ")", "\n", "\n", "w", ",", "h", "=", "img", ".", "shape", "\n", "collect_patchs", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "0", ",", "w", "-", "sp", ",", "sp", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "0", ",", "h", "-", "sp", ",", "sp", ")", ":", "\n", "            ", "patch", "=", "img", "[", "i", ":", "i", "+", "sp", ",", "j", ":", "j", "+", "sp", "]", "\n", "var_global", "=", "np", ".", "var", "(", "patch", ")", "\n", "mean_global", "=", "np", ".", "mean", "(", "patch", ")", "\n", "if", "var_global", "<", "max_var", "and", "mean_global", ">", "min_mean", ":", "\n", "                ", "rgb_patch", "=", "rgb_img", "[", "i", ":", "i", "+", "sp", ",", "j", ":", "j", "+", "sp", ",", ":", "]", "\n", "collect_patchs", ".", "append", "(", "rgb_patch", ")", "\n", "\n", "", "", "", "return", "collect_patchs", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.imresize.imresize": [[7, 55], ["imresize.fix_scale_and_size", "numpy.argsort().tolist", "numpy.copy", "imresize.numeric_kernel", "imresize.contributions", "imresize.resize_along_dim", "type", "numpy.argsort", "numpy.array"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.imresize.fix_scale_and_size", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.imresize.numeric_kernel", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.imresize.contributions", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.imresize.resize_along_dim"], ["def", "imresize", "(", "im", ",", "\n", "scale_factor", "=", "None", ",", "\n", "output_shape", "=", "None", ",", "\n", "kernel", "=", "None", ",", "\n", "antialiasing", "=", "True", ",", "\n", "kernel_shift_flag", "=", "False", ")", ":", "\n", "# First standardize values and fill missing arguments (if needed) by deriving scale from output shape or vice versa", "\n", "    ", "scale_factor", ",", "output_shape", "=", "fix_scale_and_size", "(", "im", ".", "shape", ",", "output_shape", ",", "\n", "scale_factor", ")", "\n", "\n", "# For a given numeric kernel case, just do convolution and sub-sampling (downscaling only)", "\n", "if", "type", "(", "kernel", ")", "==", "np", ".", "ndarray", "and", "scale_factor", "[", "0", "]", "<=", "1", ":", "\n", "        ", "return", "numeric_kernel", "(", "im", ",", "kernel", ",", "scale_factor", ",", "output_shape", ",", "\n", "kernel_shift_flag", ")", "\n", "\n", "# Choose interpolation method, each method has the matching kernel size", "\n", "", "method", ",", "kernel_width", "=", "{", "\n", "\"cubic\"", ":", "(", "cubic", ",", "4.0", ")", ",", "\n", "\"lanczos2\"", ":", "(", "lanczos2", ",", "4.0", ")", ",", "\n", "\"lanczos3\"", ":", "(", "lanczos3", ",", "6.0", ")", ",", "\n", "\"box\"", ":", "(", "box", ",", "1.0", ")", ",", "\n", "\"linear\"", ":", "(", "linear", ",", "2.0", ")", ",", "\n", "None", ":", "(", "cubic", ",", "4.0", ")", "# Default interpolation method is cubic", "\n", "}", ".", "get", "(", "kernel", ")", "\n", "\n", "# Antialiasing is only used when downscaling", "\n", "antialiasing", "*=", "(", "scale_factor", "[", "0", "]", "<", "1", ")", "\n", "\n", "# Sort indices of dimensions according to scale of each dimension. since we are going dim by dim this is efficient", "\n", "sorted_dims", "=", "np", ".", "argsort", "(", "np", ".", "array", "(", "scale_factor", ")", ")", ".", "tolist", "(", ")", "\n", "\n", "# Iterate over dimensions to calculate local weights for resizing and resize each time in one direction", "\n", "out_im", "=", "np", ".", "copy", "(", "im", ")", "\n", "for", "dim", "in", "sorted_dims", ":", "\n", "# No point doing calculations for scale-factor 1. nothing will happen anyway", "\n", "        ", "if", "scale_factor", "[", "dim", "]", "==", "1.0", ":", "\n", "            ", "continue", "\n", "\n", "# for each coordinate (along 1 dim), calculate which coordinates in the input image affect its result and the", "\n", "# weights that multiply the values there to get its result.", "\n", "", "weights", ",", "field_of_view", "=", "contributions", "(", "im", ".", "shape", "[", "dim", "]", ",", "output_shape", "[", "dim", "]", ",", "\n", "scale_factor", "[", "dim", "]", ",", "method", ",", "\n", "kernel_width", ",", "antialiasing", ")", "\n", "\n", "# Use the affecting position values and the set of weights to calculate the result of resizing along this 1 dim", "\n", "out_im", "=", "resize_along_dim", "(", "out_im", ",", "dim", ",", "weights", ",", "field_of_view", ")", "\n", "\n", "", "return", "out_im", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.imresize.fix_scale_and_size": [[57, 86], ["numpy.isscalar", "list", "list.extend", "numpy.uint", "list", "list", "numpy.array", "numpy.ceil", "numpy.uint", "numpy.array", "len", "len", "numpy.array", "numpy.array", "numpy.array", "len"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.generators.deoldify.SequentialEx.extend"], ["", "def", "fix_scale_and_size", "(", "input_shape", ",", "output_shape", ",", "scale_factor", ")", ":", "\n", "# First fixing the scale-factor (if given) to be standardized the function expects (a list of scale factors in the", "\n", "# same size as the number of input dimensions)", "\n", "    ", "if", "scale_factor", "is", "not", "None", ":", "\n", "# By default, if scale-factor is a scalar we assume 2d resizing and duplicate it.", "\n", "        ", "if", "np", ".", "isscalar", "(", "scale_factor", ")", ":", "\n", "            ", "scale_factor", "=", "[", "scale_factor", ",", "scale_factor", "]", "\n", "\n", "# We extend the size of scale-factor list to the size of the input by assigning 1 to all the unspecified scales", "\n", "", "scale_factor", "=", "list", "(", "scale_factor", ")", "\n", "scale_factor", ".", "extend", "(", "[", "1", "]", "*", "(", "len", "(", "input_shape", ")", "-", "len", "(", "scale_factor", ")", ")", ")", "\n", "\n", "# Fixing output-shape (if given): extending it to the size of the input-shape, by assigning the original input-size", "\n", "# to all the unspecified dimensions", "\n", "", "if", "output_shape", "is", "not", "None", ":", "\n", "        ", "output_shape", "=", "list", "(", "np", ".", "uint", "(", "np", ".", "array", "(", "output_shape", ")", ")", ")", "+", "list", "(", "\n", "input_shape", "[", "len", "(", "output_shape", ")", ":", "]", ")", "\n", "\n", "# Dealing with the case of non-give scale-factor, calculating according to output-shape. note that this is", "\n", "# sub-optimal, because there can be different scales to the same output-shape.", "\n", "", "if", "scale_factor", "is", "None", ":", "\n", "        ", "scale_factor", "=", "1.0", "*", "np", ".", "array", "(", "output_shape", ")", "/", "np", ".", "array", "(", "input_shape", ")", "\n", "\n", "# Dealing with missing output-shape. calculating according to scale-factor", "\n", "", "if", "output_shape", "is", "None", ":", "\n", "        ", "output_shape", "=", "np", ".", "uint", "(", "\n", "np", ".", "ceil", "(", "np", ".", "array", "(", "input_shape", ")", "*", "np", ".", "array", "(", "scale_factor", ")", ")", ")", "\n", "\n", "", "return", "scale_factor", ",", "output_shape", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.imresize.contributions": [[88, 154], ["numpy.arange", "numpy.floor", "numpy.squeeze", "fixed_kernel", "numpy.sum", "numpy.uint", "numpy.nonzero", "numpy.squeeze", "numpy.squeeze", "numpy.ceil", "numpy.uint", "numpy.expand_dims", "numpy.concatenate", "numpy.any", "numpy.mod", "kernel", "numpy.arange", "numpy.arange", "numpy.expand_dims", "numpy.arange", "numpy.expand_dims"], "function", ["None"], ["", "def", "contributions", "(", "in_length", ",", "out_length", ",", "scale", ",", "kernel", ",", "kernel_width", ",", "\n", "antialiasing", ")", ":", "\n", "# This function calculates a set of 'filters' and a set of field_of_view that will later on be applied", "\n", "# such that each position from the field_of_view will be multiplied with a matching filter from the", "\n", "# 'weights' based on the interpolation method and the distance of the sub-pixel location from the pixel centers", "\n", "# around it. This is only done for one dimension of the image.", "\n", "\n", "# When anti-aliasing is activated (default and only for downscaling) the receptive field is stretched to size of", "\n", "# 1/sf. this means filtering is more 'low-pass filter'.", "\n", "    ", "fixed_kernel", "=", "(", "\n", "lambda", "arg", ":", "scale", "*", "kernel", "(", "scale", "*", "arg", ")", ")", "if", "antialiasing", "else", "kernel", "\n", "kernel_width", "*=", "1.0", "/", "scale", "if", "antialiasing", "else", "1.0", "\n", "\n", "# These are the coordinates of the output image", "\n", "out_coordinates", "=", "np", ".", "arange", "(", "1", ",", "out_length", "+", "1", ")", "\n", "\n", "# These are the matching positions of the output-coordinates on the input image coordinates.", "\n", "# Best explained by example: say we have 4 horizontal pixels for HR and we downscale by SF=2 and get 2 pixels:", "\n", "# [1,2,3,4] -> [1,2]. Remember each pixel number is the middle of the pixel.", "\n", "# The scaling is done between the distances and not pixel numbers (the right boundary of pixel 4 is transformed to", "\n", "# the right boundary of pixel 2. pixel 1 in the small image matches the boundary between pixels 1 and 2 in the big", "\n", "# one and not to pixel 2. This means the position is not just multiplication of the old pos by scale-factor).", "\n", "# So if we measure distance from the left border, middle of pixel 1 is at distance d=0.5, border between 1 and 2 is", "\n", "# at d=1, and so on (d = p - 0.5).  we calculate (d_new = d_old / sf) which means:", "\n", "# (p_new-0.5 = (p_old-0.5) / sf)     ->          p_new = p_old/sf + 0.5 * (1-1/sf)", "\n", "match_coordinates", "=", "1.0", "*", "out_coordinates", "/", "scale", "+", "0.5", "*", "(", "1", "-", "1.0", "/", "scale", ")", "\n", "\n", "# This is the left boundary to start multiplying the filter from, it depends on the size of the filter", "\n", "left_boundary", "=", "np", ".", "floor", "(", "match_coordinates", "-", "kernel_width", "/", "2", ")", "\n", "\n", "# Kernel width needs to be enlarged because when covering has sub-pixel borders, it must 'see' the pixel centers", "\n", "# of the pixels it only covered a part from. So we add one pixel at each side to consider (weights can zeroize them)", "\n", "expanded_kernel_width", "=", "np", ".", "ceil", "(", "kernel_width", ")", "+", "2", "\n", "\n", "# Determine a set of field_of_view for each each output position, these are the pixels in the input image", "\n", "# that the pixel in the output image 'sees'. We get a matrix whos horizontal dim is the output pixels (big) and the", "\n", "# vertical dim is the pixels it 'sees' (kernel_size + 2)", "\n", "field_of_view", "=", "np", ".", "squeeze", "(", "\n", "np", ".", "uint", "(", "\n", "np", ".", "expand_dims", "(", "left_boundary", ",", "axis", "=", "1", ")", "+", "\n", "np", ".", "arange", "(", "expanded_kernel_width", ")", "-", "1", ")", ")", "\n", "\n", "# Assign weight to each pixel in the field of view. A matrix whos horizontal dim is the output pixels and the", "\n", "# vertical dim is a list of weights matching to the pixel in the field of view (that are specified in", "\n", "# 'field_of_view')", "\n", "weights", "=", "fixed_kernel", "(", "1.0", "*", "np", ".", "expand_dims", "(", "match_coordinates", ",", "axis", "=", "1", ")", "-", "\n", "field_of_view", "-", "1", ")", "\n", "\n", "# Normalize weights to sum up to 1. be careful from dividing by 0", "\n", "sum_weights", "=", "np", ".", "sum", "(", "weights", ",", "axis", "=", "1", ")", "\n", "sum_weights", "[", "sum_weights", "==", "0", "]", "=", "1.0", "\n", "weights", "=", "1.0", "*", "weights", "/", "np", ".", "expand_dims", "(", "sum_weights", ",", "axis", "=", "1", ")", "\n", "\n", "# We use this mirror structure as a trick for reflection padding at the boundaries", "\n", "mirror", "=", "np", ".", "uint", "(", "\n", "np", ".", "concatenate", "(", "\n", "(", "np", ".", "arange", "(", "in_length", ")", ",", "np", ".", "arange", "(", "in_length", "-", "1", ",", "-", "1", ",", "step", "=", "-", "1", ")", ")", ")", ")", "\n", "field_of_view", "=", "mirror", "[", "np", ".", "mod", "(", "field_of_view", ",", "mirror", ".", "shape", "[", "0", "]", ")", "]", "\n", "\n", "# Get rid of  weights and pixel positions that are of zero weight", "\n", "non_zero_out_pixels", "=", "np", ".", "nonzero", "(", "np", ".", "any", "(", "weights", ",", "axis", "=", "0", ")", ")", "\n", "weights", "=", "np", ".", "squeeze", "(", "weights", "[", ":", ",", "non_zero_out_pixels", "]", ")", "\n", "field_of_view", "=", "np", ".", "squeeze", "(", "field_of_view", "[", ":", ",", "non_zero_out_pixels", "]", ")", "\n", "\n", "# Final products are the relative positions and the matching weights, both are output_size X fixed_kernel_size", "\n", "return", "weights", ",", "field_of_view", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.imresize.resize_along_dim": [[156, 175], ["numpy.swapaxes", "numpy.reshape", "numpy.sum", "numpy.swapaxes", "list", "numpy.ndim"], "function", ["None"], ["", "def", "resize_along_dim", "(", "im", ",", "dim", ",", "weights", ",", "field_of_view", ")", ":", "\n", "# To be able to act on each dim, we swap so that dim 0 is the wanted dim to resize", "\n", "    ", "tmp_im", "=", "np", ".", "swapaxes", "(", "im", ",", "dim", ",", "0", ")", "\n", "\n", "# We add singleton dimensions to the weight matrix so we can multiply it with the big tensor we get for", "\n", "# tmp_im[field_of_view.T], (bsxfun style)", "\n", "weights", "=", "np", ".", "reshape", "(", "weights", ".", "T", ",", "\n", "list", "(", "weights", ".", "T", ".", "shape", ")", "+", "(", "np", ".", "ndim", "(", "im", ")", "-", "1", ")", "*", "[", "1", "]", ")", "\n", "\n", "# This is a bit of a complicated multiplication: tmp_im[field_of_view.T] is a tensor of order image_dims+1.", "\n", "# for each pixel in the output-image it matches the positions the influence it from the input image (along 1 dim", "\n", "# only, this is why it only adds 1 dim to the shape). We then multiply, for each pixel, its set of positions with", "\n", "# the matching set of weights. we do this by this big tensor element-wise multiplication (MATLAB bsxfun style:", "\n", "# matching dims are multiplied element-wise while singletons mean that the matching dim is all multiplied by the", "\n", "# same number", "\n", "tmp_out_im", "=", "np", ".", "sum", "(", "tmp_im", "[", "field_of_view", ".", "T", "]", "*", "weights", ",", "axis", "=", "0", ")", "\n", "\n", "# Finally we swap back the axes to the original order", "\n", "return", "np", ".", "swapaxes", "(", "tmp_out_im", ",", "dim", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.imresize.numeric_kernel": [[177, 196], ["numpy.zeros_like", "range", "imresize.kernel_shift", "numpy.ndim", "scipy.ndimage.filters.correlate", "numpy.round().astype", "numpy.round().astype", "numpy.round", "numpy.round", "numpy.linspace", "numpy.linspace"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.imresize.kernel_shift"], ["", "def", "numeric_kernel", "(", "im", ",", "kernel", ",", "scale_factor", ",", "output_shape", ",", "kernel_shift_flag", ")", ":", "\n", "# See kernel_shift function to understand what this is", "\n", "    ", "if", "kernel_shift_flag", ":", "\n", "        ", "kernel", "=", "kernel_shift", "(", "kernel", ",", "scale_factor", ")", "\n", "\n", "# First run a correlation (convolution with flipped kernel)", "\n", "", "out_im", "=", "np", ".", "zeros_like", "(", "im", ")", "\n", "for", "channel", "in", "range", "(", "np", ".", "ndim", "(", "im", ")", ")", ":", "\n", "        ", "out_im", "[", ":", ",", ":", ",", "channel", "]", "=", "filters", ".", "correlate", "(", "im", "[", ":", ",", ":", ",", "channel", "]", ",", "kernel", ")", "\n", "\n", "# Then subsample and return", "\n", "", "return", "out_im", "[", "\n", "np", ".", "\n", "round", "(", "np", ".", "linspace", "(", "0", ",", "im", ".", "shape", "[", "0", "]", "-", "1", "/", "\n", "scale_factor", "[", "0", "]", ",", "output_shape", "[", "0", "]", ")", ")", ".", "astype", "(", "int", ")", "[", ":", ",", "\n", "None", "]", ",", "\n", "np", ".", "\n", "round", "(", "np", ".", "linspace", "(", "0", ",", "im", ".", "shape", "[", "1", "]", "-", "\n", "1", "/", "scale_factor", "[", "1", "]", ",", "output_shape", "[", "1", "]", ")", ")", ".", "astype", "(", "int", ")", ",", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.imresize.kernel_shift": [[198, 225], ["scipy.ndimage.measurements.center_of_mass", "numpy.pad", "scipy.ndimage.interpolation.shift", "numpy.array", "numpy.int", "numpy.ceil", "numpy.max"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.modules.wing.shift"], ["", "def", "kernel_shift", "(", "kernel", ",", "sf", ")", ":", "\n", "# There are two reasons for shifting the kernel:", "\n", "# 1. Center of mass is not in the center of the kernel which creates ambiguity. There is no possible way to know", "\n", "#    the degradation process included shifting so we always assume center of mass is center of the kernel.", "\n", "# 2. We further shift kernel center so that top left result pixel corresponds to the middle of the sfXsf first", "\n", "#    pixels. Default is for odd size to be in the middle of the first pixel and for even sized kernel to be at the", "\n", "#    top left corner of the first pixel. that is why different shift size needed between od and even size.", "\n", "# Given that these two conditions are fulfilled, we are happy and aligned, the way to test it is as follows:", "\n", "# The input image, when interpolated (regular bicubic) is exactly aligned with ground truth.", "\n", "\n", "# First calculate the current center of mass for the kernel", "\n", "    ", "current_center_of_mass", "=", "measurements", ".", "center_of_mass", "(", "kernel", ")", "\n", "\n", "# The second (\"+ 0.5 * ....\") is for applying condition 2 from the comments above", "\n", "wanted_center_of_mass", "=", "np", ".", "array", "(", "\n", "kernel", ".", "shape", ")", "//", "2", "+", "0.5", "*", "(", "sf", "-", "(", "kernel", ".", "shape", "[", "0", "]", "%", "2", ")", ")", "\n", "# wanted_center_of_mass = np.array(kernel.shape) / 2 + 0.5 * (np.array(sf)[0:2] - (kernel.shape[0] % 2))", "\n", "\n", "# Define the shift vector for the kernel shifting (x,y)", "\n", "shift_vec", "=", "wanted_center_of_mass", "-", "current_center_of_mass", "\n", "\n", "# Before applying the shift, we first pad the kernel so that nothing is lost due to the shift", "\n", "# (biggest shift among dims + 1 for safety)", "\n", "kernel", "=", "np", ".", "pad", "(", "kernel", ",", "np", ".", "int", "(", "np", ".", "ceil", "(", "np", ".", "max", "(", "shift_vec", ")", ")", ")", "+", "1", ",", "'constant'", ")", "\n", "\n", "# Finally shift the kernel and return", "\n", "return", "interpolation", ".", "shift", "(", "kernel", ",", "shift_vec", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.imresize.cubic": [[228, 235], ["numpy.abs"], "function", ["None"], ["", "def", "cubic", "(", "x", ")", ":", "\n", "    ", "absx", "=", "np", ".", "abs", "(", "x", ")", "\n", "absx2", "=", "absx", "**", "2", "\n", "absx3", "=", "absx", "**", "3", "\n", "return", "(", "(", "1.5", "*", "absx3", "-", "2.5", "*", "absx2", "+", "1", ")", "*", "(", "absx", "<=", "1", ")", "+", "\n", "(", "-", "0.5", "*", "absx3", "+", "2.5", "*", "absx2", "-", "4", "*", "absx", "+", "2", ")", "*", "(", "(", "1", "<", "absx", ")", "&", "\n", "(", "absx", "<=", "2", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.imresize.lanczos2": [[237, 240], ["abs", "numpy.sin", "numpy.sin", "numpy.finfo", "numpy.finfo"], "function", ["None"], ["", "def", "lanczos2", "(", "x", ")", ":", "\n", "    ", "return", "(", "(", "(", "np", ".", "sin", "(", "pi", "*", "x", ")", "*", "np", ".", "sin", "(", "pi", "*", "x", "/", "2", ")", "+", "np", ".", "finfo", "(", "np", ".", "float32", ")", ".", "eps", ")", "/", "\n", "(", "(", "pi", "**", "2", "*", "x", "**", "2", "/", "2", ")", "+", "np", ".", "finfo", "(", "np", ".", "float32", ")", ".", "eps", ")", ")", "*", "(", "abs", "(", "x", ")", "<", "2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.imresize.box": [[242, 244], ["None"], "function", ["None"], ["", "def", "box", "(", "x", ")", ":", "\n", "    ", "return", "(", "(", "-", "0.5", "<=", "x", ")", "&", "(", "x", "<", "0.5", ")", ")", "*", "1.0", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.imresize.lanczos3": [[246, 249], ["abs", "numpy.sin", "numpy.sin", "numpy.finfo", "numpy.finfo"], "function", ["None"], ["", "def", "lanczos3", "(", "x", ")", ":", "\n", "    ", "return", "(", "(", "(", "np", ".", "sin", "(", "pi", "*", "x", ")", "*", "np", ".", "sin", "(", "pi", "*", "x", "/", "3", ")", "+", "np", ".", "finfo", "(", "np", ".", "float32", ")", ".", "eps", ")", "/", "\n", "(", "(", "pi", "**", "2", "*", "x", "**", "2", "/", "3", ")", "+", "np", ".", "finfo", "(", "np", ".", "float32", ")", ".", "eps", ")", ")", "*", "(", "abs", "(", "x", ")", "<", "3", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.imresize.linear": [[251, 253], ["None"], "function", ["None"], ["", "def", "linear", "(", "x", ")", ":", "\n", "    ", "return", "(", "x", "+", "1", ")", "*", "(", "(", "-", "1", "<=", "x", ")", "&", "(", "x", "<", "0", ")", ")", "+", "(", "1", "-", "x", ")", "*", "(", "(", "0", "<=", "x", ")", "&", "(", "x", "<=", "1", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.utils.is_image_file": [[11, 15], ["any", "filename.endswith"], "function", ["None"], ["    "]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.utils.calculate_valid_crop_size": [[17, 19], ["None"], "function", ["None"], ["\n", "\n", "with", "open", "(", "path", ",", "\"wb\"", ")", "as", "file", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.utils.gaussian_noise": [[21, 25], ["numpy.rint", "PIL.Image.fromarray", "numpy.random.normal", "numpy.clip().astype", "numpy.shape", "numpy.clip"], "function", ["None"], ["\n", "if", "image", ".", "dtype", ".", "name", "!=", "\"float32\"", ":", "\n", "            ", "raise", "Exception", "(", "\"Image dtype must be float32.\"", ")", "\n", "\n", "", "image", "=", "np", ".", "flipud", "(", "image", ")", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.utils.cubic": [[32, 41], ["paddle.abs", "paddle.cast", "paddle.cast", "paddle.cast"], "function", ["None"], ["", "else", ":", "\n", "            ", "raise", "Exception", "(", "\n", "\"Image must have H x W x 3, H x W x 1 or H x W dimensions.\"", ")", "\n", "\n", "", "file", ".", "write", "(", "\"PF\\n\"", "if", "color", "else", "\"Pf\\n\"", ".", "encode", "(", ")", ")", "\n", "file", ".", "write", "(", "\"%d %d\\n\"", ".", "encode", "(", ")", "%", "(", "image", ".", "shape", "[", "1", "]", ",", "image", ".", "shape", "[", "0", "]", ")", ")", "\n", "\n", "endian", "=", "image", ".", "dtype", ".", "byteorder", "\n", "\n", "if", "endian", "==", "\"<\"", "or", "endian", "==", "\"=\"", "and", "sys", ".", "byteorder", "==", "\"little\"", ":", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.utils.calculate_weights_indices": [[43, 99], ["paddle.linspace", "paddle.floor", "paddle.sum().reshape", "numpy.sum", "math.ceil", "paddle.floor.reshape().expand", "paddle.linspace().reshape().expand", "u.reshape().expand", "utils.cubic", "paddle.sum().reshape.expand", "math.isclose", "math.isclose", "indices.max", "int", "int", "utils.cubic", "paddle.sum", "cubic.numpy", "indices.min", "paddle.floor.reshape", "paddle.linspace().reshape", "u.reshape", "paddle.linspace"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.utils.cubic", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.utils.cubic"], ["\n", "", "file", ".", "write", "(", "\"%f\\n\"", ".", "encode", "(", ")", "%", "scale", ")", "\n", "\n", "image", ".", "tofile", "(", "file", ")", "\n", "\n", "\n", "", "", "def", "read_image", "(", "path", ")", ":", "\n", "    ", "\"\"\"Read image and output RGB image (0-1).\n\n    Args:\n        path (str): path to file\n\n    Returns:\n        array: RGB image (0-1)\n    \"\"\"", "\n", "img", "=", "cv2", ".", "imread", "(", "path", ")", "\n", "if", "img", ".", "ndim", "==", "2", ":", "\n", "        ", "img", "=", "cv2", ".", "cvtColor", "(", "img", ",", "cv2", ".", "COLOR_GRAY2BGR", ")", "\n", "", "img", "=", "cv2", ".", "cvtColor", "(", "img", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "/", "255.0", "\n", "return", "img", "\n", "\n", "\n", "", "def", "write_depth", "(", "path", ",", "depth", ",", "bits", "=", "1", ")", ":", "\n", "    ", "\"\"\"Write depth map to pfm and png file.\n\n    Args:\n        path (str): filepath without extension\n        depth (array): depth\n    \"\"\"", "\n", "write_pfm", "(", "path", "+", "\".pfm\"", ",", "depth", ".", "astype", "(", "np", ".", "float32", ")", ")", "\n", "\n", "depth_min", "=", "depth", ".", "min", "(", ")", "\n", "depth_max", "=", "depth", ".", "max", "(", ")", "\n", "\n", "max_val", "=", "(", "2", "**", "(", "8", "*", "bits", ")", ")", "-", "1", "\n", "\n", "if", "depth_max", "-", "depth_min", ">", "np", ".", "finfo", "(", "\"float\"", ")", ".", "eps", ":", "\n", "        ", "out", "=", "max_val", "*", "(", "depth", "-", "depth_min", ")", "/", "(", "depth_max", "-", "depth_min", ")", "\n", "", "else", ":", "\n", "        ", "out", "=", "np", ".", "zeros", "(", "depth", ".", "shape", ",", "dtype", "=", "depth", ".", "type", ")", "\n", "\n", "", "if", "bits", "==", "1", ":", "\n", "        ", "cv2", ".", "imwrite", "(", "path", "+", "\".png\"", ",", "out", ".", "astype", "(", "\"uint8\"", ")", ")", "\n", "", "elif", "bits", "==", "2", ":", "\n", "        ", "cv2", ".", "imwrite", "(", "path", "+", "\".png\"", ",", "out", ".", "astype", "(", "\"uint16\"", ")", ")", "\n", "", "return", "path", "+", "'.pfm'", ",", "path", "+", "\".png\"", "\n", "", ""]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.utils.imresize": [[101, 182], ["utils.calculate_weights_indices", "utils.calculate_weights_indices", "paddle.zeros", "paddle.arange", "paddle.index_select", "paddle.arange", "paddle.index_select", "paddle.zeros", "range", "paddle.zeros", "paddle.arange", "paddle.index_select", "paddle.arange", "paddle.index_select", "paddle.zeros", "range", "paddle.clip", "math.ceil", "math.ceil", "int", "paddle.mv", "paddle.mv", "paddle.mv", "int", "out_1_aug[].mv", "out_1_aug[].mv", "out_1_aug[].mv", "img_aug[].transpose", "img_aug[].transpose", "img_aug[].transpose"], "function", ["home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.utils.calculate_weights_indices", "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.utils.calculate_weights_indices"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.realsr_preprocess.utils.to_pil_image": [[184, 277], ["PIL.Image.fromarray", "TypeError", "isinstance", "isinstance", "np.expand_dims.numpy", "numpy.transpose", "isinstance", "TypeError", "TypeError", "isinstance", "isinstance", "isinstance", "ValueError", "type", "len", "ValueError", "ValueError", "len", "np.expand_dims.unsqueeze", "ValueError", "type", "ValueError", "ValueError", "np.expand_dims.ndimension", "numpy.expand_dims"], "function", ["None"], []], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.benchmark.analysis_log.analyze": [[9, 39], ["re.compile", "open().readlines", "re.compile.findall", "json.dumps", "range", "open", "of.write", "open", "log_file.split", "len", "float", "len"], "function", ["None"], ["def", "analyze", "(", "model_name", ",", "log_file", ",", "res_log_file", ")", ":", "\n", "    ", "time_pat", "=", "re", ".", "compile", "(", "r\"ips: (.*) images/s\"", ")", "\n", "\n", "logs", "=", "open", "(", "log_file", ")", ".", "readlines", "(", ")", "\n", "logs", "=", "\";\"", ".", "join", "(", "logs", ")", "\n", "time_res", "=", "time_pat", ".", "findall", "(", "logs", ")", "\n", "\n", "fail_flag", "=", "0", "\n", "run_mode", "=", "\"\"", "\n", "gpu_num", "=", "0", "\n", "ips", "=", "0", "\n", "\n", "if", "time_res", "==", "[", "]", ":", "\n", "        ", "fail_flag", "=", "1", "\n", "", "else", ":", "\n", "        ", "gpu_num", "=", "log_file", ".", "split", "(", "'_'", ")", "[", "-", "1", "]", "\n", "run_mode", "=", "\"sp\"", "if", "gpu_num", "==", "1", "else", "\"mp\"", "\n", "\n", "skip_num", "=", "4", "\n", "total_time", "=", "0", "\n", "for", "i", "in", "range", "(", "skip_num", ",", "len", "(", "time_res", ")", ")", ":", "\n", "            ", "total_time", "+=", "float", "(", "time_res", "[", "i", "]", ")", "\n", "", "ips", "=", "total_time", "/", "(", "len", "(", "time_res", ")", "-", "skip_num", ")", "\n", "\n", "", "info", "=", "{", "\"log_file\"", ":", "log_file", ",", "\"model_name\"", ":", "model_name", ",", "\"mission_name\"", ":", "\"\u56fe\u50cf\u751f\u6210\"", ",", "\n", "\"direction_id\"", ":", "0", ",", "\"run_mode\"", ":", "run_mode", ",", "\"index\"", ":", "1", ",", "\"gpu_num\"", ":", "gpu_num", ",", "\n", "\"FINAL_RESULT\"", ":", "ips", ",", "\"JOB_FAIL_FLAG\"", ":", "fail_flag", ",", "\"UNIT\"", ":", "\"images/s\"", "}", "\n", "json_info", "=", "json", ".", "dumps", "(", "info", ")", "\n", "with", "open", "(", "res_log_file", ",", "\"w\"", ")", "as", "of", ":", "\n", "        ", "of", ".", "write", "(", "json_info", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PaddlePaddle_PaddleGAN.serving.test_client.get_img": [[23, 31], ["np.transpose.squeeze", "numpy.clip", "np.transpose.round", "np.transpose.astype", "numpy.transpose"], "function", ["None"], ["def", "get_img", "(", "pred", ")", ":", "\n", "    ", "pred", "=", "pred", ".", "squeeze", "(", ")", "\n", "pred", "=", "np", ".", "clip", "(", "pred", ",", "a_min", "=", "0.", ",", "a_max", "=", "1.0", ")", "\n", "pred", "=", "pred", "*", "255", "\n", "pred", "=", "pred", ".", "round", "(", ")", "\n", "pred", "=", "pred", ".", "astype", "(", "'uint8'", ")", "\n", "pred", "=", "np", ".", "transpose", "(", "pred", ",", "(", "1", ",", "2", ",", "0", ")", ")", "# chw -> hwc", "\n", "return", "pred", "\n", "\n"]]}