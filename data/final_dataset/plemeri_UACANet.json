{"home.repos.pwc.inspect_result.plemeri_UACANet.None.Expr._args": [[7, 15], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["def", "_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--config'", ",", "type", "=", "str", ",", "\n", "default", "=", "'configs/UACANet-L.yaml'", ")", "\n", "parser", ".", "add_argument", "(", "'--local_rank'", ",", "type", "=", "int", ",", "default", "=", "-", "1", ")", "\n", "parser", ".", "add_argument", "(", "'--verbose'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--debug'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.None.Exprs._args": [[8, 15], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["def", "_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--config'", ",", "type", "=", "str", ",", "default", "=", "'configs/UACANet-L.yaml'", ")", "\n", "parser", ".", "add_argument", "(", "'--devices'", ",", "type", "=", "str", ",", "default", "=", "'0'", ")", "\n", "parser", ".", "add_argument", "(", "'--exprs'", ",", "type", "=", "int", ",", "default", "=", "4", ")", "\n", "parser", ".", "add_argument", "(", "'--verbose'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.lib.CANet.CANet.__init__": [[16, 34], ["torch.Module.__init__", "backbones.Res2Net_v1b.res2net50_v1b_26w_4s", "modules.context_module.PAA_e", "modules.context_module.PAA_e", "modules.context_module.PAA_e", "modules.decoder_module.PAA_d", "modules.attention_module.CA", "modules.attention_module.CA", "modules.attention_module.CA", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.__init__", "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.Res2Net_v1b.res2net50_v1b_26w_4s"], ["    ", "def", "__init__", "(", "self", ",", "channels", "=", "256", ",", "output_stride", "=", "16", ",", "pretrained", "=", "True", ")", ":", "\n", "        ", "super", "(", "CANet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "resnet", "=", "res2net50_v1b_26w_4s", "(", "pretrained", "=", "pretrained", ",", "output_stride", "=", "output_stride", ")", "\n", "\n", "self", ".", "context2", "=", "PAA_e", "(", "512", ",", "channels", ")", "\n", "self", ".", "context3", "=", "PAA_e", "(", "1024", ",", "channels", ")", "\n", "self", ".", "context4", "=", "PAA_e", "(", "2048", ",", "channels", ")", "\n", "\n", "self", ".", "decoder", "=", "PAA_d", "(", "channels", ")", "\n", "\n", "self", ".", "attention2", "=", "CA", "(", "channels", "*", "2", ",", "channels", ")", "\n", "self", ".", "attention3", "=", "CA", "(", "channels", "*", "2", ",", "channels", ")", "\n", "self", ".", "attention4", "=", "CA", "(", "channels", "*", "2", ",", "channels", ")", "\n", "\n", "self", ".", "loss_fn", "=", "bce_iou_loss", "\n", "\n", "self", ".", "ret", "=", "lambda", "x", ",", "target", ":", "F", ".", "interpolate", "(", "x", ",", "size", "=", "target", ".", "shape", "[", "-", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "self", ".", "res", "=", "lambda", "x", ",", "size", ":", "F", ".", "interpolate", "(", "x", ",", "size", "=", "size", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.lib.CANet.CANet.forward": [[35, 84], ["CANet.CANet.resnet.conv1", "CANet.CANet.resnet.bn1", "CANet.CANet.resnet.relu", "CANet.CANet.resnet.maxpool", "CANet.CANet.resnet.layer1", "CANet.CANet.resnet.layer2", "CANet.CANet.resnet.layer3", "CANet.CANet.resnet.layer4", "CANet.CANet.context2", "CANet.CANet.context3", "CANet.CANet.context4", "CANet.CANet.decoder", "CANet.CANet.res", "CANet.CANet.attention4", "CANet.CANet.res", "CANet.CANet.attention3", "CANet.CANet.res", "CANet.CANet.attention2", "CANet.CANet.res", "sample.keys", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "CANet.CANet.loss_fn", "CANet.CANet.loss_fn", "CANet.CANet.loss_fn", "CANet.CANet.loss_fn", "CANet.CANet.ret", "CANet.CANet.ret", "CANet.CANet.ret"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "sample", ")", ":", "\n", "        ", "x", "=", "sample", "[", "'image'", "]", "\n", "if", "'gt'", "in", "sample", ".", "keys", "(", ")", ":", "\n", "            ", "y", "=", "sample", "[", "'gt'", "]", "\n", "", "else", ":", "\n", "            ", "y", "=", "None", "\n", "\n", "", "base_size", "=", "x", ".", "shape", "[", "-", "2", ":", "]", "\n", "\n", "x", "=", "self", ".", "resnet", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "resnet", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "resnet", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "resnet", ".", "maxpool", "(", "x", ")", "\n", "\n", "x1", "=", "self", ".", "resnet", ".", "layer1", "(", "x", ")", "\n", "x2", "=", "self", ".", "resnet", ".", "layer2", "(", "x1", ")", "\n", "x3", "=", "self", ".", "resnet", ".", "layer3", "(", "x2", ")", "\n", "x4", "=", "self", ".", "resnet", ".", "layer4", "(", "x3", ")", "\n", "\n", "x2", "=", "self", ".", "context2", "(", "x2", ")", "\n", "x3", "=", "self", ".", "context3", "(", "x3", ")", "\n", "x4", "=", "self", ".", "context4", "(", "x4", ")", "\n", "\n", "f5", ",", "a5", "=", "self", ".", "decoder", "(", "x4", ",", "x3", ",", "x2", ")", "\n", "out5", "=", "self", ".", "res", "(", "a5", ",", "base_size", ")", "\n", "\n", "f4", ",", "a4", "=", "self", ".", "attention4", "(", "torch", ".", "cat", "(", "[", "x4", ",", "self", ".", "ret", "(", "f5", ",", "x4", ")", "]", ",", "dim", "=", "1", ")", ",", "a5", ")", "\n", "out4", "=", "self", ".", "res", "(", "a4", ",", "base_size", ")", "\n", "\n", "f3", ",", "a3", "=", "self", ".", "attention3", "(", "torch", ".", "cat", "(", "[", "x3", ",", "self", ".", "ret", "(", "f4", ",", "x3", ")", "]", ",", "dim", "=", "1", ")", ",", "a4", ")", "\n", "out3", "=", "self", ".", "res", "(", "a3", ",", "base_size", ")", "\n", "\n", "_", ",", "a2", "=", "self", ".", "attention2", "(", "torch", ".", "cat", "(", "[", "x2", ",", "self", ".", "ret", "(", "f3", ",", "x2", ")", "]", ",", "dim", "=", "1", ")", ",", "a3", ")", "\n", "out2", "=", "self", ".", "res", "(", "a2", ",", "base_size", ")", "\n", "\n", "\n", "if", "y", "is", "not", "None", ":", "\n", "            ", "loss5", "=", "self", ".", "loss_fn", "(", "out5", ",", "y", ")", "\n", "loss4", "=", "self", ".", "loss_fn", "(", "out4", ",", "y", ")", "\n", "loss3", "=", "self", ".", "loss_fn", "(", "out3", ",", "y", ")", "\n", "loss2", "=", "self", ".", "loss_fn", "(", "out2", ",", "y", ")", "\n", "\n", "loss", "=", "loss2", "+", "loss3", "+", "loss4", "+", "loss5", "\n", "debug", "=", "[", "out5", ",", "out4", ",", "out3", "]", "\n", "", "else", ":", "\n", "            ", "loss", "=", "0", "\n", "debug", "=", "[", "]", "\n", "\n", "", "return", "{", "'pred'", ":", "out2", ",", "'loss'", ":", "loss", ",", "'debug'", ":", "debug", "}", "", "", "", ""]], "home.repos.pwc.inspect_result.plemeri_UACANet.lib.UACANet_SwinB.UACANet_SwinB.__init__": [[16, 34], ["torch.Module.__init__", "lib.backbones.SwinTransformer.SwinB", "modules.context_module.PAA_e", "modules.context_module.PAA_e", "modules.context_module.PAA_e", "modules.decoder_module.PAA_d", "modules.attention_module.UACA", "modules.attention_module.UACA", "modules.attention_module.UACA", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.__init__", "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.SwinB"], ["    ", "def", "__init__", "(", "self", ",", "channels", "=", "256", ",", "output_stride", "=", "16", ",", "pretrained", "=", "True", ")", ":", "\n", "        ", "super", "(", "UACANet_SwinB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "backbone", "=", "self", ".", "backbone", "=", "SwinB", "(", "pretrained", "=", "pretrained", ")", "\n", "\n", "self", ".", "context2", "=", "PAA_e", "(", "256", ",", "channels", ")", "\n", "self", ".", "context3", "=", "PAA_e", "(", "512", ",", "channels", ")", "\n", "self", ".", "context4", "=", "PAA_e", "(", "1024", ",", "channels", ")", "\n", "\n", "self", ".", "decoder", "=", "PAA_d", "(", "channels", ")", "\n", "\n", "self", ".", "attention2", "=", "UACA", "(", "channels", "*", "2", ",", "channels", ")", "\n", "self", ".", "attention3", "=", "UACA", "(", "channels", "*", "2", ",", "channels", ")", "\n", "self", ".", "attention4", "=", "UACA", "(", "channels", "*", "2", ",", "channels", ")", "\n", "\n", "self", ".", "loss_fn", "=", "bce_iou_loss", "\n", "\n", "self", ".", "ret", "=", "lambda", "x", ",", "target", ":", "F", ".", "interpolate", "(", "x", ",", "size", "=", "target", ".", "shape", "[", "-", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "self", ".", "res", "=", "lambda", "x", ",", "size", ":", "F", ".", "interpolate", "(", "x", ",", "size", "=", "size", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.lib.UACANet_SwinB.UACANet_SwinB.forward": [[35, 86], ["UACANet_SwinB.UACANet_SwinB.backbone.stem", "x1.view().permute().contiguous.view().permute().contiguous.view().permute().contiguous", "UACANet_SwinB.UACANet_SwinB.view().permute().contiguous", "UACANet_SwinB.UACANet_SwinB.view().permute().contiguous", "UACANet_SwinB.UACANet_SwinB.view().permute().contiguous", "x5.view().permute().contiguous.view().permute().contiguous.view().permute().contiguous", "UACANet_SwinB.UACANet_SwinB.context2", "UACANet_SwinB.UACANet_SwinB.context3", "UACANet_SwinB.UACANet_SwinB.context4", "UACANet_SwinB.UACANet_SwinB.decoder", "UACANet_SwinB.UACANet_SwinB.res", "UACANet_SwinB.UACANet_SwinB.attention4", "UACANet_SwinB.UACANet_SwinB.res", "UACANet_SwinB.UACANet_SwinB.attention3", "UACANet_SwinB.UACANet_SwinB.res", "UACANet_SwinB.UACANet_SwinB.attention2", "UACANet_SwinB.UACANet_SwinB.res", "sample.keys", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "UACANet_SwinB.UACANet_SwinB.loss_fn", "UACANet_SwinB.UACANet_SwinB.loss_fn", "UACANet_SwinB.UACANet_SwinB.loss_fn", "UACANet_SwinB.UACANet_SwinB.loss_fn", "x1.view().permute().contiguous.view().permute().contiguous.view().permute", "UACANet_SwinB.UACANet_SwinB.view().permute", "UACANet_SwinB.UACANet_SwinB.view().permute", "UACANet_SwinB.UACANet_SwinB.view().permute", "x5.view().permute().contiguous.view().permute().contiguous.view().permute", "UACANet_SwinB.UACANet_SwinB.ret", "UACANet_SwinB.UACANet_SwinB.ret", "UACANet_SwinB.UACANet_SwinB.ret", "x1.view().permute().contiguous.view().permute().contiguous.view", "UACANet_SwinB.UACANet_SwinB.view", "UACANet_SwinB.UACANet_SwinB.view", "UACANet_SwinB.UACANet_SwinB.view", "x5.view().permute().contiguous.view().permute().contiguous.view"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.SwinTransformer.stem"], ["", "def", "forward", "(", "self", ",", "sample", ")", ":", "\n", "        ", "x", "=", "sample", "[", "'image'", "]", "\n", "if", "'gt'", "in", "sample", ".", "keys", "(", ")", ":", "\n", "            ", "y", "=", "sample", "[", "'gt'", "]", "\n", "", "else", ":", "\n", "            ", "y", "=", "None", "\n", "\n", "", "B", ",", "_", ",", "H", ",", "W", "=", "x", ".", "shape", "# (b, 32H, 32W, 3)", "\n", "\n", "x1", "=", "self", ".", "backbone", ".", "stem", "(", "x", ")", "# 8h 8w", "\n", "x2", "=", "self", ".", "backbone", ".", "layers", "[", "0", "]", "(", "x1", ")", "# 4h 4w", "\n", "x3", "=", "self", ".", "backbone", ".", "layers", "[", "1", "]", "(", "x2", ")", "# 2h 2w", "\n", "x4", "=", "self", ".", "backbone", ".", "layers", "[", "2", "]", "(", "x3", ")", "# h w", "\n", "x5", "=", "self", ".", "backbone", ".", "layers", "[", "3", "]", "(", "x4", ")", "# hw", "\n", "\n", "x1", "=", "x1", ".", "view", "(", "B", ",", "H", "//", "4", ",", "W", "//", "4", ",", "-", "1", ")", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "x2", "=", "x2", ".", "view", "(", "B", ",", "H", "//", "8", ",", "W", "//", "8", ",", "-", "1", ")", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "x3", "=", "x3", ".", "view", "(", "B", ",", "H", "//", "16", ",", "W", "//", "16", ",", "-", "1", ")", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "x4", "=", "x4", ".", "view", "(", "B", ",", "H", "//", "32", ",", "W", "//", "32", ",", "-", "1", ")", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "x5", "=", "x5", ".", "view", "(", "B", ",", "H", "//", "32", ",", "W", "//", "32", ",", "-", "1", ")", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "\n", "x2", "=", "self", ".", "context2", "(", "x2", ")", "\n", "x3", "=", "self", ".", "context3", "(", "x3", ")", "\n", "x4", "=", "self", ".", "context4", "(", "x4", ")", "\n", "\n", "f5", ",", "a5", "=", "self", ".", "decoder", "(", "x4", ",", "x3", ",", "x2", ")", "\n", "out5", "=", "self", ".", "res", "(", "a5", ",", "(", "H", ",", "W", ")", ")", "\n", "\n", "f4", ",", "a4", "=", "self", ".", "attention4", "(", "torch", ".", "cat", "(", "[", "x4", ",", "self", ".", "ret", "(", "f5", ",", "x4", ")", "]", ",", "dim", "=", "1", ")", ",", "a5", ")", "\n", "out4", "=", "self", ".", "res", "(", "a4", ",", "(", "H", ",", "W", ")", ")", "\n", "\n", "f3", ",", "a3", "=", "self", ".", "attention3", "(", "torch", ".", "cat", "(", "[", "x3", ",", "self", ".", "ret", "(", "f4", ",", "x3", ")", "]", ",", "dim", "=", "1", ")", ",", "a4", ")", "\n", "out3", "=", "self", ".", "res", "(", "a3", ",", "(", "H", ",", "W", ")", ")", "\n", "\n", "_", ",", "a2", "=", "self", ".", "attention2", "(", "torch", ".", "cat", "(", "[", "x2", ",", "self", ".", "ret", "(", "f3", ",", "x2", ")", "]", ",", "dim", "=", "1", ")", ",", "a3", ")", "\n", "out2", "=", "self", ".", "res", "(", "a2", ",", "(", "H", ",", "W", ")", ")", "\n", "\n", "\n", "if", "y", "is", "not", "None", ":", "\n", "            ", "loss5", "=", "self", ".", "loss_fn", "(", "out5", ",", "y", ")", "\n", "loss4", "=", "self", ".", "loss_fn", "(", "out4", ",", "y", ")", "\n", "loss3", "=", "self", ".", "loss_fn", "(", "out3", ",", "y", ")", "\n", "loss2", "=", "self", ".", "loss_fn", "(", "out2", ",", "y", ")", "\n", "\n", "loss", "=", "loss2", "+", "loss3", "+", "loss4", "+", "loss5", "\n", "debug", "=", "[", "out5", ",", "out4", ",", "out3", "]", "\n", "", "else", ":", "\n", "            ", "loss", "=", "0", "\n", "debug", "=", "[", "]", "\n", "\n", "", "return", "{", "'pred'", ":", "out2", ",", "'loss'", ":", "loss", ",", "'debug'", ":", "debug", "}", "", "", "", ""]], "home.repos.pwc.inspect_result.plemeri_UACANet.lib.Baseline.Baseline.__init__": [[16, 31], ["torch.Module.__init__", "backbones.Res2Net_v1b.res2net50_v1b_26w_4s", "modules.context_module.simple_context", "modules.context_module.simple_context", "modules.context_module.simple_context", "modules.decoder_module.simple_decoder", "modules.attention_module.simple_attention", "modules.attention_module.simple_attention", "modules.attention_module.simple_attention"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.__init__", "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.Res2Net_v1b.res2net50_v1b_26w_4s"], ["    ", "def", "__init__", "(", "self", ",", "channels", "=", "256", ",", "output_stride", "=", "16", ",", "pretrained", "=", "True", ")", ":", "\n", "        ", "super", "(", "Baseline", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "resnet", "=", "res2net50_v1b_26w_4s", "(", "pretrained", "=", "pretrained", ",", "output_stride", "=", "output_stride", ")", "\n", "\n", "self", ".", "context2", "=", "simple_context", "(", "512", ",", "channels", ")", "\n", "self", ".", "context3", "=", "simple_context", "(", "1024", ",", "channels", ")", "\n", "self", ".", "context4", "=", "simple_context", "(", "2048", ",", "channels", ")", "\n", "\n", "self", ".", "decoder", "=", "simple_decoder", "(", "channels", ")", "\n", "\n", "self", ".", "attention2", "=", "simple_attention", "(", "512", ",", "64", ",", "2", ",", "3", ")", "\n", "self", ".", "attention3", "=", "simple_attention", "(", "1024", ",", "64", ",", "2", ",", "3", ")", "\n", "self", ".", "attention4", "=", "simple_attention", "(", "2048", ",", "256", ",", "3", ",", "5", ")", "\n", "\n", "self", ".", "loss_fn", "=", "bce_iou_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.lib.Baseline.Baseline.forward": [[32, 79], ["Baseline.Baseline.resnet.conv1", "Baseline.Baseline.resnet.bn1", "Baseline.Baseline.resnet.relu", "Baseline.Baseline.resnet.maxpool", "Baseline.Baseline.resnet.layer1", "Baseline.Baseline.resnet.layer2", "Baseline.Baseline.resnet.layer3", "Baseline.Baseline.resnet.layer4", "Baseline.Baseline.context2", "Baseline.Baseline.context3", "Baseline.Baseline.context4", "Baseline.Baseline.decoder", "torch.interpolate", "torch.interpolate", "torch.interpolate", "Baseline.Baseline.attention4", "torch.interpolate", "torch.interpolate", "torch.interpolate", "Baseline.Baseline.attention3", "torch.interpolate", "torch.interpolate", "torch.interpolate", "Baseline.Baseline.attention2", "torch.interpolate", "torch.interpolate", "torch.interpolate", "sample.keys", "Baseline.Baseline.loss_fn", "Baseline.Baseline.loss_fn", "Baseline.Baseline.loss_fn", "Baseline.Baseline.loss_fn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "sample", ")", ":", "\n", "        ", "x", "=", "sample", "[", "'image'", "]", "\n", "if", "'gt'", "in", "sample", ".", "keys", "(", ")", ":", "\n", "            ", "y", "=", "sample", "[", "'gt'", "]", "\n", "", "else", ":", "\n", "            ", "y", "=", "None", "\n", "\n", "", "base_size", "=", "x", ".", "shape", "[", "-", "2", ":", "]", "\n", "x", "=", "self", ".", "resnet", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "resnet", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "resnet", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "resnet", ".", "maxpool", "(", "x", ")", "\n", "\n", "x1", "=", "self", ".", "resnet", ".", "layer1", "(", "x", ")", "\n", "x2", "=", "self", ".", "resnet", ".", "layer2", "(", "x1", ")", "\n", "x3", "=", "self", ".", "resnet", ".", "layer3", "(", "x2", ")", "\n", "x4", "=", "self", ".", "resnet", ".", "layer4", "(", "x3", ")", "\n", "\n", "x2_context", "=", "self", ".", "context2", "(", "x2", ")", "\n", "x3_context", "=", "self", ".", "context3", "(", "x3", ")", "\n", "x4_context", "=", "self", ".", "context4", "(", "x4", ")", "\n", "\n", "_", ",", "a5", "=", "self", ".", "decoder", "(", "x4_context", ",", "x3_context", ",", "x2_context", ")", "\n", "out5", "=", "F", ".", "interpolate", "(", "a5", ",", "size", "=", "base_size", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "\n", "_", ",", "a4", "=", "self", ".", "attention4", "(", "x4", ",", "a5", ")", "\n", "out4", "=", "F", ".", "interpolate", "(", "a4", ",", "size", "=", "base_size", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "\n", "_", ",", "a3", "=", "self", ".", "attention3", "(", "x3", ",", "a4", ")", "\n", "out3", "=", "F", ".", "interpolate", "(", "a3", ",", "size", "=", "base_size", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "\n", "_", ",", "a2", "=", "self", ".", "attention2", "(", "x2", ",", "a3", ")", "\n", "out2", "=", "F", ".", "interpolate", "(", "a2", ",", "size", "=", "base_size", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "\n", "\n", "if", "y", "is", "not", "None", ":", "\n", "            ", "loss5", "=", "self", ".", "loss_fn", "(", "out5", ",", "y", ")", "\n", "loss4", "=", "self", ".", "loss_fn", "(", "out4", ",", "y", ")", "\n", "loss3", "=", "self", ".", "loss_fn", "(", "out3", ",", "y", ")", "\n", "loss2", "=", "self", ".", "loss_fn", "(", "out2", ",", "y", ")", "\n", "loss", "=", "loss2", "+", "loss3", "+", "loss4", "+", "loss5", "\n", "debug", "=", "[", "out5", ",", "out4", ",", "out3", "]", "\n", "", "else", ":", "\n", "            ", "loss", "=", "0", "\n", "debug", "=", "[", "]", "\n", "\n", "", "return", "{", "'pred'", ":", "out2", ",", "'loss'", ":", "loss", ",", "'debug'", ":", "debug", "}", "", "", "", ""]], "home.repos.pwc.inspect_result.plemeri_UACANet.lib.PraNet.PraNet.__init__": [[16, 31], ["torch.Module.__init__", "backbones.Res2Net_v1b.res2net50_v1b_26w_4s", "modules.context_module.RFB", "modules.context_module.RFB", "modules.context_module.RFB", "modules.decoder_module.PPD", "modules.attention_module.reverse_attention", "modules.attention_module.reverse_attention", "modules.attention_module.reverse_attention"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.__init__", "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.Res2Net_v1b.res2net50_v1b_26w_4s"], ["    ", "def", "__init__", "(", "self", ",", "channels", "=", "256", ",", "output_stride", "=", "16", ",", "pretrained", "=", "True", ")", ":", "\n", "        ", "super", "(", "PraNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "resnet", "=", "res2net50_v1b_26w_4s", "(", "pretrained", "=", "pretrained", ",", "output_stride", "=", "output_stride", ")", "\n", "\n", "self", ".", "context2", "=", "RFB", "(", "512", ",", "channels", ")", "\n", "self", ".", "context3", "=", "RFB", "(", "1024", ",", "channels", ")", "\n", "self", ".", "context4", "=", "RFB", "(", "2048", ",", "channels", ")", "\n", "\n", "self", ".", "decoder", "=", "PPD", "(", "channels", ")", "\n", "\n", "self", ".", "attention2", "=", "reverse_attention", "(", "512", ",", "64", ",", "2", ",", "3", ")", "\n", "self", ".", "attention3", "=", "reverse_attention", "(", "1024", ",", "64", ",", "2", ",", "3", ")", "\n", "self", ".", "attention4", "=", "reverse_attention", "(", "2048", ",", "256", ",", "3", ",", "5", ")", "\n", "\n", "self", ".", "loss_fn", "=", "bce_iou_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.lib.PraNet.PraNet.forward": [[32, 80], ["PraNet.PraNet.resnet.conv1", "PraNet.PraNet.resnet.bn1", "PraNet.PraNet.resnet.relu", "PraNet.PraNet.resnet.maxpool", "PraNet.PraNet.resnet.layer1", "PraNet.PraNet.resnet.layer2", "PraNet.PraNet.resnet.layer3", "PraNet.PraNet.resnet.layer4", "PraNet.PraNet.context2", "PraNet.PraNet.context3", "PraNet.PraNet.context4", "PraNet.PraNet.decoder", "torch.interpolate", "torch.interpolate", "torch.interpolate", "PraNet.PraNet.attention4", "torch.interpolate", "torch.interpolate", "torch.interpolate", "PraNet.PraNet.attention3", "torch.interpolate", "torch.interpolate", "torch.interpolate", "PraNet.PraNet.attention2", "torch.interpolate", "torch.interpolate", "torch.interpolate", "sample.keys", "PraNet.PraNet.loss_fn", "PraNet.PraNet.loss_fn", "PraNet.PraNet.loss_fn", "PraNet.PraNet.loss_fn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "sample", ")", ":", "\n", "        ", "x", "=", "sample", "[", "'image'", "]", "\n", "if", "'gt'", "in", "sample", ".", "keys", "(", ")", ":", "\n", "            ", "y", "=", "sample", "[", "'gt'", "]", "\n", "", "else", ":", "\n", "            ", "y", "=", "None", "\n", "\n", "", "base_size", "=", "x", ".", "shape", "[", "-", "2", ":", "]", "\n", "\n", "x", "=", "self", ".", "resnet", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "resnet", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "resnet", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "resnet", ".", "maxpool", "(", "x", ")", "\n", "\n", "x1", "=", "self", ".", "resnet", ".", "layer1", "(", "x", ")", "\n", "x2", "=", "self", ".", "resnet", ".", "layer2", "(", "x1", ")", "\n", "x3", "=", "self", ".", "resnet", ".", "layer3", "(", "x2", ")", "\n", "x4", "=", "self", ".", "resnet", ".", "layer4", "(", "x3", ")", "\n", "\n", "x2_context", "=", "self", ".", "context2", "(", "x2", ")", "\n", "x3_context", "=", "self", ".", "context3", "(", "x3", ")", "\n", "x4_context", "=", "self", ".", "context4", "(", "x4", ")", "\n", "\n", "_", ",", "a5", "=", "self", ".", "decoder", "(", "x4_context", ",", "x3_context", ",", "x2_context", ")", "\n", "out5", "=", "F", ".", "interpolate", "(", "a5", ",", "size", "=", "base_size", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "\n", "_", ",", "a4", "=", "self", ".", "attention4", "(", "x4", ",", "a5", ")", "\n", "out4", "=", "F", ".", "interpolate", "(", "a4", ",", "size", "=", "base_size", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "\n", "_", ",", "a3", "=", "self", ".", "attention3", "(", "x3", ",", "a4", ")", "\n", "out3", "=", "F", ".", "interpolate", "(", "a3", ",", "size", "=", "base_size", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "\n", "_", ",", "a2", "=", "self", ".", "attention2", "(", "x2", ",", "a3", ")", "\n", "out2", "=", "F", ".", "interpolate", "(", "a2", ",", "size", "=", "base_size", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "\n", "\n", "if", "y", "is", "not", "None", ":", "\n", "            ", "loss5", "=", "self", ".", "loss_fn", "(", "out5", ",", "y", ")", "\n", "loss4", "=", "self", ".", "loss_fn", "(", "out4", ",", "y", ")", "\n", "loss3", "=", "self", ".", "loss_fn", "(", "out3", ",", "y", ")", "\n", "loss2", "=", "self", ".", "loss_fn", "(", "out2", ",", "y", ")", "\n", "loss", "=", "loss2", "+", "loss3", "+", "loss4", "+", "loss5", "\n", "debug", "=", "[", "out5", ",", "out4", ",", "out3", "]", "\n", "", "else", ":", "\n", "            ", "loss", "=", "0", "\n", "debug", "=", "[", "]", "\n", "\n", "", "return", "{", "'pred'", ":", "out2", ",", "'loss'", ":", "loss", ",", "'debug'", ":", "debug", "}", "", "", "", ""]], "home.repos.pwc.inspect_result.plemeri_UACANet.lib.UACANet.UACANet.__init__": [[16, 34], ["torch.Module.__init__", "backbones.Res2Net_v1b.res2net50_v1b_26w_4s", "modules.context_module.PAA_e", "modules.context_module.PAA_e", "modules.context_module.PAA_e", "modules.decoder_module.PAA_d", "modules.attention_module.UACA", "modules.attention_module.UACA", "modules.attention_module.UACA", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.__init__", "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.Res2Net_v1b.res2net50_v1b_26w_4s"], ["    ", "def", "__init__", "(", "self", ",", "channels", "=", "256", ",", "output_stride", "=", "16", ",", "pretrained", "=", "True", ")", ":", "\n", "        ", "super", "(", "UACANet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "resnet", "=", "res2net50_v1b_26w_4s", "(", "pretrained", "=", "pretrained", ",", "output_stride", "=", "output_stride", ")", "\n", "\n", "self", ".", "context2", "=", "PAA_e", "(", "512", ",", "channels", ")", "\n", "self", ".", "context3", "=", "PAA_e", "(", "1024", ",", "channels", ")", "\n", "self", ".", "context4", "=", "PAA_e", "(", "2048", ",", "channels", ")", "\n", "\n", "self", ".", "decoder", "=", "PAA_d", "(", "channels", ")", "\n", "\n", "self", ".", "attention2", "=", "UACA", "(", "channels", "*", "2", ",", "channels", ")", "\n", "self", ".", "attention3", "=", "UACA", "(", "channels", "*", "2", ",", "channels", ")", "\n", "self", ".", "attention4", "=", "UACA", "(", "channels", "*", "2", ",", "channels", ")", "\n", "\n", "self", ".", "loss_fn", "=", "bce_iou_loss", "\n", "\n", "self", ".", "ret", "=", "lambda", "x", ",", "target", ":", "F", ".", "interpolate", "(", "x", ",", "size", "=", "target", ".", "shape", "[", "-", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "self", ".", "res", "=", "lambda", "x", ",", "size", ":", "F", ".", "interpolate", "(", "x", ",", "size", "=", "size", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.lib.UACANet.UACANet.forward": [[35, 84], ["UACANet.UACANet.resnet.conv1", "UACANet.UACANet.resnet.bn1", "UACANet.UACANet.resnet.relu", "UACANet.UACANet.resnet.maxpool", "UACANet.UACANet.resnet.layer1", "UACANet.UACANet.resnet.layer2", "UACANet.UACANet.resnet.layer3", "UACANet.UACANet.resnet.layer4", "UACANet.UACANet.context2", "UACANet.UACANet.context3", "UACANet.UACANet.context4", "UACANet.UACANet.decoder", "UACANet.UACANet.res", "UACANet.UACANet.attention4", "UACANet.UACANet.res", "UACANet.UACANet.attention3", "UACANet.UACANet.res", "UACANet.UACANet.attention2", "UACANet.UACANet.res", "sample.keys", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "UACANet.UACANet.loss_fn", "UACANet.UACANet.loss_fn", "UACANet.UACANet.loss_fn", "UACANet.UACANet.loss_fn", "UACANet.UACANet.ret", "UACANet.UACANet.ret", "UACANet.UACANet.ret"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "sample", ")", ":", "\n", "        ", "x", "=", "sample", "[", "'image'", "]", "\n", "if", "'gt'", "in", "sample", ".", "keys", "(", ")", ":", "\n", "            ", "y", "=", "sample", "[", "'gt'", "]", "\n", "", "else", ":", "\n", "            ", "y", "=", "None", "\n", "\n", "", "base_size", "=", "x", ".", "shape", "[", "-", "2", ":", "]", "\n", "\n", "x", "=", "self", ".", "resnet", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "resnet", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "resnet", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "resnet", ".", "maxpool", "(", "x", ")", "\n", "\n", "x1", "=", "self", ".", "resnet", ".", "layer1", "(", "x", ")", "\n", "x2", "=", "self", ".", "resnet", ".", "layer2", "(", "x1", ")", "\n", "x3", "=", "self", ".", "resnet", ".", "layer3", "(", "x2", ")", "\n", "x4", "=", "self", ".", "resnet", ".", "layer4", "(", "x3", ")", "\n", "\n", "x2", "=", "self", ".", "context2", "(", "x2", ")", "\n", "x3", "=", "self", ".", "context3", "(", "x3", ")", "\n", "x4", "=", "self", ".", "context4", "(", "x4", ")", "\n", "\n", "f5", ",", "a5", "=", "self", ".", "decoder", "(", "x4", ",", "x3", ",", "x2", ")", "\n", "out5", "=", "self", ".", "res", "(", "a5", ",", "base_size", ")", "\n", "\n", "f4", ",", "a4", "=", "self", ".", "attention4", "(", "torch", ".", "cat", "(", "[", "x4", ",", "self", ".", "ret", "(", "f5", ",", "x4", ")", "]", ",", "dim", "=", "1", ")", ",", "a5", ")", "\n", "out4", "=", "self", ".", "res", "(", "a4", ",", "base_size", ")", "\n", "\n", "f3", ",", "a3", "=", "self", ".", "attention3", "(", "torch", ".", "cat", "(", "[", "x3", ",", "self", ".", "ret", "(", "f4", ",", "x3", ")", "]", ",", "dim", "=", "1", ")", ",", "a4", ")", "\n", "out3", "=", "self", ".", "res", "(", "a3", ",", "base_size", ")", "\n", "\n", "_", ",", "a2", "=", "self", ".", "attention2", "(", "torch", ".", "cat", "(", "[", "x2", ",", "self", ".", "ret", "(", "f3", ",", "x2", ")", "]", ",", "dim", "=", "1", ")", ",", "a3", ")", "\n", "out2", "=", "self", ".", "res", "(", "a2", ",", "base_size", ")", "\n", "\n", "\n", "if", "y", "is", "not", "None", ":", "\n", "            ", "loss5", "=", "self", ".", "loss_fn", "(", "out5", ",", "y", ")", "\n", "loss4", "=", "self", ".", "loss_fn", "(", "out4", ",", "y", ")", "\n", "loss3", "=", "self", ".", "loss_fn", "(", "out3", ",", "y", ")", "\n", "loss2", "=", "self", ".", "loss_fn", "(", "out2", ",", "y", ")", "\n", "\n", "loss", "=", "loss2", "+", "loss3", "+", "loss4", "+", "loss5", "\n", "debug", "=", "[", "out5", ",", "out4", ",", "out3", "]", "\n", "", "else", ":", "\n", "            ", "loss", "=", "0", "\n", "debug", "=", "[", "]", "\n", "\n", "", "return", "{", "'pred'", ":", "out2", ",", "'loss'", ":", "loss", ",", "'debug'", ":", "debug", "}", "", "", "", ""]], "home.repos.pwc.inspect_result.plemeri_UACANet.optim.scheduler.PolyLr.__init__": [[11, 18], ["torch.optim.lr_scheduler._LRScheduler.__init__"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "optimizer", ",", "gamma", ",", "max_iteration", ",", "minimum_lr", "=", "0", ",", "warmup_iteration", "=", "0", ",", "last_epoch", "=", "-", "1", ")", ":", "\n", "        ", "self", ".", "gamma", "=", "gamma", "\n", "self", ".", "max_iteration", "=", "max_iteration", "\n", "self", ".", "minimum_lr", "=", "minimum_lr", "\n", "self", ".", "warmup_iteration", "=", "warmup_iteration", "\n", "\n", "super", "(", "PolyLr", ",", "self", ")", ".", "__init__", "(", "optimizer", ",", "last_epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.optim.scheduler.PolyLr.poly_lr": [[19, 21], ["None"], "methods", ["None"], ["", "def", "poly_lr", "(", "self", ",", "base_lr", ",", "step", ")", ":", "\n", "        ", "return", "(", "base_lr", "-", "self", ".", "minimum_lr", ")", "*", "(", "(", "1", "-", "(", "step", "/", "self", ".", "max_iteration", ")", ")", "**", "self", ".", "gamma", ")", "+", "self", ".", "minimum_lr", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.optim.scheduler.PolyLr.warmup_lr": [[22, 24], ["None"], "methods", ["None"], ["", "def", "warmup_lr", "(", "self", ",", "base_lr", ",", "alpha", ")", ":", "\n", "        ", "return", "base_lr", "*", "(", "1", "/", "10.0", "*", "(", "1", "-", "alpha", ")", "+", "alpha", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.optim.scheduler.PolyLr.get_lr": [[25, 34], ["min", "scheduler.PolyLr.poly_lr", "scheduler.PolyLr.warmup_lr", "scheduler.PolyLr.poly_lr"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.optim.scheduler.PolyLr.poly_lr", "home.repos.pwc.inspect_result.plemeri_UACANet.optim.scheduler.PolyLr.warmup_lr", "home.repos.pwc.inspect_result.plemeri_UACANet.optim.scheduler.PolyLr.poly_lr"], ["", "def", "get_lr", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "last_epoch", "<", "self", ".", "warmup_iteration", ":", "\n", "            ", "alpha", "=", "self", ".", "last_epoch", "/", "self", ".", "warmup_iteration", "\n", "lrs", "=", "[", "min", "(", "self", ".", "warmup_lr", "(", "base_lr", ",", "alpha", ")", ",", "self", ".", "poly_lr", "(", "base_lr", ",", "self", ".", "last_epoch", ")", ")", "for", "base_lr", "in", "\n", "self", ".", "base_lrs", "]", "\n", "", "else", ":", "\n", "            ", "lrs", "=", "[", "self", ".", "poly_lr", "(", "base_lr", ",", "self", ".", "last_epoch", ")", "for", "base_lr", "in", "self", ".", "base_lrs", "]", "\n", "\n", "", "return", "lrs", "", "", "", ""]], "home.repos.pwc.inspect_result.plemeri_UACANet.optim.losses.bce_iou_loss": [[4, 18], ["torch.binary_cross_entropy_with_logits", "torch.sigmoid", "torch.sigmoid", "weight.sum", "weight.sum", "torch.abs", "torch.abs", "torch.avg_pool2d"], "function", ["None"], ["def", "bce_iou_loss", "(", "pred", ",", "mask", ")", ":", "\n", "    ", "weight", "=", "1", "+", "5", "*", "torch", ".", "abs", "(", "F", ".", "avg_pool2d", "(", "mask", ",", "kernel_size", "=", "31", ",", "stride", "=", "1", ",", "padding", "=", "15", ")", "-", "mask", ")", "\n", "\n", "bce", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "pred", ",", "mask", ",", "reduction", "=", "'none'", ")", "\n", "\n", "pred", "=", "torch", ".", "sigmoid", "(", "pred", ")", "\n", "inter", "=", "pred", "*", "mask", "\n", "union", "=", "pred", "+", "mask", "\n", "iou", "=", "1", "-", "(", "inter", "+", "1", ")", "/", "(", "union", "-", "inter", "+", "1", ")", "\n", "\n", "weighted_bce", "=", "(", "weight", "*", "bce", ")", ".", "sum", "(", "dim", "=", "(", "2", ",", "3", ")", ")", "/", "weight", ".", "sum", "(", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "weighted_iou", "=", "(", "weight", "*", "iou", ")", ".", "sum", "(", "dim", "=", "(", "2", ",", "3", ")", ")", "/", "weight", ".", "sum", "(", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "\n", "return", "(", "weighted_bce", "+", "weighted_iou", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.optim.losses.dice_bce_loss": [[19, 28], ["torch.binary_cross_entropy_with_logits", "torch.sigmoid", "torch.sigmoid"], "function", ["None"], ["", "def", "dice_bce_loss", "(", "pred", ",", "mask", ")", ":", "\n", "    ", "bce", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "pred", ",", "mask", ",", "reduction", "=", "'none'", ")", "\n", "\n", "pred", "=", "torch", ".", "sigmoid", "(", "pred", ")", "\n", "inter", "=", "pred", "*", "mask", "\n", "union", "=", "pred", "+", "mask", "\n", "iou", "=", "1", "-", "(", "2.", "*", "inter", "+", "1", ")", "/", "(", "union", "+", "1", ")", "\n", "\n", "return", "(", "bce", "+", "iou", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.optim.losses.tversky_loss": [[29, 44], ["torch.sigmoid", "torch.sigmoid", "pred.view.view", "mask.view.view"], "function", ["None"], ["", "def", "tversky_loss", "(", "pred", ",", "mask", ",", "alpha", "=", "0.5", ",", "beta", "=", "0.5", ",", "gamma", "=", "2", ")", ":", "\n", "    ", "pred", "=", "torch", ".", "sigmoid", "(", "pred", ")", "\n", "\n", "#flatten label and prediction tensors", "\n", "pred", "=", "pred", ".", "view", "(", "-", "1", ")", "\n", "mask", "=", "mask", ".", "view", "(", "-", "1", ")", "\n", "\n", "#True Positives, False Positives & False Negatives", "\n", "TP", "=", "(", "pred", "*", "mask", ")", ".", "sum", "(", ")", "\n", "FP", "=", "(", "(", "1", "-", "mask", ")", "*", "pred", ")", ".", "sum", "(", ")", "\n", "FN", "=", "(", "mask", "*", "(", "1", "-", "pred", ")", ")", ".", "sum", "(", ")", "\n", "\n", "Tversky", "=", "(", "TP", "+", "1", ")", "/", "(", "TP", "+", "alpha", "*", "FP", "+", "beta", "*", "FN", "+", "1", ")", "\n", "\n", "return", "(", "1", "-", "Tversky", ")", "**", "gamma", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.optim.losses.tversky_bce_loss": [[45, 62], ["torch.binary_cross_entropy_with_logits", "torch.sigmoid", "torch.sigmoid", "pred.view.view", "mask.view.view"], "function", ["None"], ["", "def", "tversky_bce_loss", "(", "pred", ",", "mask", ",", "alpha", "=", "0.5", ",", "beta", "=", "0.5", ",", "gamma", "=", "2", ")", ":", "\n", "    ", "bce", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "pred", ",", "mask", ",", "reduction", "=", "'mean'", ")", "\n", "\n", "pred", "=", "torch", ".", "sigmoid", "(", "pred", ")", "\n", "\n", "#flatten label and prediction tensors", "\n", "pred", "=", "pred", ".", "view", "(", "-", "1", ")", "\n", "mask", "=", "mask", ".", "view", "(", "-", "1", ")", "\n", "\n", "#True Positives, False Positives & False Negatives", "\n", "TP", "=", "(", "pred", "*", "mask", ")", ".", "sum", "(", ")", "\n", "FP", "=", "(", "(", "1", "-", "mask", ")", "*", "pred", ")", ".", "sum", "(", ")", "\n", "FN", "=", "(", "mask", "*", "(", "1", "-", "pred", ")", ")", ".", "sum", "(", ")", "\n", "\n", "Tversky", "=", "(", "TP", "+", "1", ")", "/", "(", "TP", "+", "alpha", "*", "FP", "+", "beta", "*", "FN", "+", "1", ")", "\n", "\n", "return", "bce", "+", "(", "1", "-", "Tversky", ")", "**", "gamma", "", "", ""]], "home.repos.pwc.inspect_result.plemeri_UACANet.modules.attention_module.reverse_attention.__init__": [[10, 17], ["torch.Module.__init__", "conv", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "conv", "attention_module.reverse_attention.conv_mid.append", "conv"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "channel", ",", "depth", "=", "3", ",", "kernel_size", "=", "3", ")", ":", "\n", "        ", "super", "(", "reverse_attention", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv_in", "=", "conv", "(", "in_channel", ",", "channel", ",", "1", ")", "\n", "self", ".", "conv_mid", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "i", "in", "range", "(", "depth", ")", ":", "\n", "            ", "self", ".", "conv_mid", ".", "append", "(", "conv", "(", "channel", ",", "channel", ",", "kernel_size", ")", ")", "\n", "", "self", ".", "conv_out", "=", "conv", "(", "channel", ",", "1", ",", "3", "if", "kernel_size", "==", "3", "else", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.modules.attention_module.reverse_attention.forward": [[18, 30], ["torch.interpolate", "torch.interpolate", "torch.interpolate", "rmap.expand().mul", "attention_module.reverse_attention.conv_in", "attention_module.reverse_attention.conv_out", "torch.relu", "torch.relu", "torch.relu", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "rmap.expand", "conv_mid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "map", ")", ":", "\n", "        ", "map", "=", "F", ".", "interpolate", "(", "map", ",", "size", "=", "x", ".", "shape", "[", "-", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "rmap", "=", "-", "1", "*", "(", "torch", ".", "sigmoid", "(", "map", ")", ")", "+", "1", "\n", "\n", "x", "=", "rmap", ".", "expand", "(", "-", "1", ",", "x", ".", "shape", "[", "1", "]", ",", "-", "1", ",", "-", "1", ")", ".", "mul", "(", "x", ")", "\n", "x", "=", "self", ".", "conv_in", "(", "x", ")", "\n", "for", "conv_mid", "in", "self", ".", "conv_mid", ":", "\n", "            ", "x", "=", "F", ".", "relu", "(", "conv_mid", "(", "x", ")", ")", "\n", "", "out", "=", "self", ".", "conv_out", "(", "x", ")", "\n", "out", "=", "out", "+", "map", "\n", "\n", "return", "x", ",", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.modules.attention_module.simple_attention.__init__": [[32, 39], ["torch.Module.__init__", "conv", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "conv", "attention_module.simple_attention.conv_mid.append", "conv"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "channel", ",", "depth", "=", "3", ",", "kernel_size", "=", "3", ")", ":", "\n", "        ", "super", "(", "simple_attention", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv_in", "=", "conv", "(", "in_channel", ",", "channel", ",", "1", ")", "\n", "self", ".", "conv_mid", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "i", "in", "range", "(", "depth", ")", ":", "\n", "            ", "self", ".", "conv_mid", ".", "append", "(", "conv", "(", "channel", ",", "channel", ",", "kernel_size", ")", ")", "\n", "", "self", ".", "conv_out", "=", "conv", "(", "channel", ",", "1", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.modules.attention_module.simple_attention.forward": [[40, 52], ["torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid.expand().mul", "torch.sigmoid.expand().mul", "torch.sigmoid.expand().mul", "attention_module.simple_attention.conv_in", "attention_module.simple_attention.conv_out", "torch.relu", "torch.relu", "torch.relu", "torch.sigmoid.expand", "torch.sigmoid.expand", "torch.sigmoid.expand", "conv_mid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "map", ")", ":", "\n", "        ", "map", "=", "F", ".", "interpolate", "(", "map", ",", "size", "=", "x", ".", "shape", "[", "-", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "amap", "=", "torch", ".", "sigmoid", "(", "map", ")", "\n", "\n", "x", "=", "amap", ".", "expand", "(", "-", "1", ",", "x", ".", "shape", "[", "1", "]", ",", "-", "1", ",", "-", "1", ")", ".", "mul", "(", "x", ")", "\n", "x", "=", "self", ".", "conv_in", "(", "x", ")", "\n", "for", "conv_mid", "in", "self", ".", "conv_mid", ":", "\n", "            ", "x", "=", "F", ".", "relu", "(", "conv_mid", "(", "x", ")", ")", "\n", "", "out", "=", "self", ".", "conv_out", "(", "x", ")", "\n", "out", "=", "out", "+", "map", "\n", "\n", "return", "x", ",", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.modules.attention_module.CA.__init__": [[54, 69], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "conv", "conv", "conv", "conv", "conv", "conv", "conv", "conv", "conv", "conv"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "channel", ")", ":", "\n", "        ", "super", "(", "CA", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "channel", "=", "channel", "\n", "\n", "self", ".", "conv_query", "=", "nn", ".", "Sequential", "(", "conv", "(", "in_channel", ",", "channel", ",", "3", ",", "relu", "=", "True", ")", ",", "\n", "conv", "(", "channel", ",", "channel", ",", "3", ",", "relu", "=", "True", ")", ")", "\n", "self", ".", "conv_key", "=", "nn", ".", "Sequential", "(", "conv", "(", "in_channel", ",", "channel", ",", "1", ",", "relu", "=", "True", ")", ",", "\n", "conv", "(", "channel", ",", "channel", ",", "1", ",", "relu", "=", "True", ")", ")", "\n", "self", ".", "conv_value", "=", "nn", ".", "Sequential", "(", "conv", "(", "in_channel", ",", "channel", ",", "1", ",", "relu", "=", "True", ")", ",", "\n", "conv", "(", "channel", ",", "channel", ",", "1", ",", "relu", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv_out1", "=", "conv", "(", "channel", ",", "channel", ",", "3", ",", "relu", "=", "True", ")", "\n", "self", ".", "conv_out2", "=", "conv", "(", "in_channel", "+", "channel", ",", "channel", ",", "3", ",", "relu", "=", "True", ")", "\n", "self", ".", "conv_out3", "=", "conv", "(", "channel", ",", "channel", ",", "3", ",", "relu", "=", "True", ")", "\n", "self", ".", "conv_out4", "=", "conv", "(", "channel", ",", "1", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.modules.attention_module.CA.forward": [[70, 111], ["torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.clip", "torch.clip", "torch.clip", "torch.clip", "torch.clip", "torch.clip", "torch.clip", "torch.clip", "torch.clip", "torch.clip", "torch.clip", "torch.clip", "torch.clip", "torch.clip", "torch.clip", "torch.clip", "torch.clip", "torch.clip", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "attention_module.CA.view", "prob.view.view.view", "torch.bmm().permute().unsqueeze", "torch.bmm().permute().unsqueeze", "torch.bmm().permute().unsqueeze", "torch.bmm().permute().unsqueeze", "torch.bmm().permute().unsqueeze", "torch.bmm().permute().unsqueeze", "torch.bmm().permute().unsqueeze", "torch.bmm().permute().unsqueeze", "torch.bmm().permute().unsqueeze", "attention_module.CA.conv_query().view().permute", "attention_module.CA.conv_key().view", "attention_module.CA.conv_value().view().permute", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.softmax", "torch.softmax", "torch.softmax", "torch.bmm().permute().contiguous().view", "torch.bmm().permute().contiguous().view", "torch.bmm().permute().contiguous().view", "torch.bmm().permute().contiguous().view", "torch.bmm().permute().contiguous().view", "torch.bmm().permute().contiguous().view", "torch.bmm().permute().contiguous().view", "torch.bmm().permute().contiguous().view", "torch.bmm().permute().contiguous().view", "attention_module.CA.conv_out1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "attention_module.CA.conv_out2", "attention_module.CA.conv_out3", "attention_module.CA.conv_out4", "torch.bmm().permute", "torch.bmm().permute", "torch.bmm().permute", "torch.bmm().permute", "torch.bmm().permute", "torch.bmm().permute", "torch.bmm().permute", "torch.bmm().permute", "torch.bmm().permute", "attention_module.CA.conv_query().view", "attention_module.CA.conv_key", "attention_module.CA.conv_value().view", "torch.bmm().permute().contiguous", "torch.bmm().permute().contiguous", "torch.bmm().permute().contiguous", "torch.bmm().permute().contiguous", "torch.bmm().permute().contiguous", "torch.bmm().permute().contiguous", "torch.bmm().permute().contiguous", "torch.bmm().permute().contiguous", "torch.bmm().permute().contiguous", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "attention_module.CA.conv_query", "attention_module.CA.conv_value", "torch.bmm().permute", "torch.bmm().permute", "torch.bmm().permute", "torch.bmm().permute", "torch.bmm().permute", "torch.bmm().permute", "torch.bmm().permute", "torch.bmm().permute", "torch.bmm().permute", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "map", ")", ":", "\n", "        ", "b", ",", "c", ",", "h", ",", "w", "=", "x", ".", "shape", "\n", "\n", "# compute class probability", "\n", "map", "=", "F", ".", "interpolate", "(", "map", ",", "size", "=", "x", ".", "shape", "[", "-", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "fg", "=", "torch", ".", "sigmoid", "(", "map", ")", "\n", "\n", "p", "=", "fg", "-", ".5", "\n", "\n", "fg", "=", "torch", ".", "clip", "(", "p", ",", "0", ",", "1", ")", "# foreground", "\n", "bg", "=", "torch", ".", "clip", "(", "-", "p", ",", "0", ",", "1", ")", "# background", "\n", "\n", "prob", "=", "torch", ".", "cat", "(", "[", "fg", ",", "bg", "]", ",", "dim", "=", "1", ")", "\n", "\n", "# reshape feature & prob", "\n", "f", "=", "x", ".", "view", "(", "b", ",", "h", "*", "w", ",", "-", "1", ")", "\n", "prob", "=", "prob", ".", "view", "(", "b", ",", "2", ",", "h", "*", "w", ")", "\n", "\n", "# compute context vector", "\n", "context", "=", "torch", ".", "bmm", "(", "prob", ",", "f", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "unsqueeze", "(", "3", ")", "# b, 2, c", "\n", "\n", "# k q v compute", "\n", "query", "=", "self", ".", "conv_query", "(", "x", ")", ".", "view", "(", "b", ",", "self", ".", "channel", ",", "-", "1", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "key", "=", "self", ".", "conv_key", "(", "context", ")", ".", "view", "(", "b", ",", "self", ".", "channel", ",", "-", "1", ")", "\n", "value", "=", "self", ".", "conv_value", "(", "context", ")", ".", "view", "(", "b", ",", "self", ".", "channel", ",", "-", "1", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "\n", "# compute similarity map", "\n", "sim", "=", "torch", ".", "bmm", "(", "query", ",", "key", ")", "# b, hw, c x b, c, 2", "\n", "sim", "=", "(", "self", ".", "channel", "**", "-", ".5", ")", "*", "sim", "\n", "sim", "=", "F", ".", "softmax", "(", "sim", ",", "dim", "=", "-", "1", ")", "\n", "\n", "# compute refined feature", "\n", "context", "=", "torch", ".", "bmm", "(", "sim", ",", "value", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "contiguous", "(", ")", ".", "view", "(", "b", ",", "-", "1", ",", "h", ",", "w", ")", "\n", "context", "=", "self", ".", "conv_out1", "(", "context", ")", "\n", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "context", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "self", ".", "conv_out2", "(", "x", ")", "\n", "x", "=", "self", ".", "conv_out3", "(", "x", ")", "\n", "out", "=", "self", ".", "conv_out4", "(", "x", ")", "\n", "out", "=", "out", "+", "map", "\n", "return", "x", ",", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.modules.attention_module.UACA.__init__": [[113, 128], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "conv", "conv", "conv", "conv", "conv", "conv", "conv", "conv", "conv", "conv"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "channel", ")", ":", "\n", "        ", "super", "(", "UACA", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "channel", "=", "channel", "\n", "\n", "self", ".", "conv_query", "=", "nn", ".", "Sequential", "(", "conv", "(", "in_channel", ",", "channel", ",", "3", ",", "relu", "=", "True", ")", ",", "\n", "conv", "(", "channel", ",", "channel", ",", "3", ",", "relu", "=", "True", ")", ")", "\n", "self", ".", "conv_key", "=", "nn", ".", "Sequential", "(", "conv", "(", "in_channel", ",", "channel", ",", "1", ",", "relu", "=", "True", ")", ",", "\n", "conv", "(", "channel", ",", "channel", ",", "1", ",", "relu", "=", "True", ")", ")", "\n", "self", ".", "conv_value", "=", "nn", ".", "Sequential", "(", "conv", "(", "in_channel", ",", "channel", ",", "1", ",", "relu", "=", "True", ")", ",", "\n", "conv", "(", "channel", ",", "channel", ",", "1", ",", "relu", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv_out1", "=", "conv", "(", "channel", ",", "channel", ",", "3", ",", "relu", "=", "True", ")", "\n", "self", ".", "conv_out2", "=", "conv", "(", "in_channel", "+", "channel", ",", "channel", ",", "3", ",", "relu", "=", "True", ")", "\n", "self", ".", "conv_out3", "=", "conv", "(", "channel", ",", "channel", ",", "3", ",", "relu", "=", "True", ")", "\n", "self", ".", "conv_out4", "=", "conv", "(", "channel", ",", "1", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.modules.attention_module.UACA.forward": [[129, 171], ["torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.clip", "torch.clip", "torch.clip", "torch.clip", "torch.clip", "torch.clip", "torch.clip", "torch.clip", "torch.clip", "torch.clip", "torch.clip", "torch.clip", "torch.clip", "torch.clip", "torch.clip", "torch.clip", "torch.clip", "torch.clip", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "attention_module.UACA.view", "prob.view.view.view", "torch.bmm().permute().unsqueeze", "torch.bmm().permute().unsqueeze", "torch.bmm().permute().unsqueeze", "torch.bmm().permute().unsqueeze", "torch.bmm().permute().unsqueeze", "torch.bmm().permute().unsqueeze", "torch.bmm().permute().unsqueeze", "torch.bmm().permute().unsqueeze", "torch.bmm().permute().unsqueeze", "attention_module.UACA.conv_query().view().permute", "attention_module.UACA.conv_key().view", "attention_module.UACA.conv_value().view().permute", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.softmax", "torch.softmax", "torch.softmax", "torch.bmm().permute().contiguous().view", "torch.bmm().permute().contiguous().view", "torch.bmm().permute().contiguous().view", "torch.bmm().permute().contiguous().view", "torch.bmm().permute().contiguous().view", "torch.bmm().permute().contiguous().view", "torch.bmm().permute().contiguous().view", "torch.bmm().permute().contiguous().view", "torch.bmm().permute().contiguous().view", "attention_module.UACA.conv_out1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "attention_module.UACA.conv_out2", "attention_module.UACA.conv_out3", "attention_module.UACA.conv_out4", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.bmm().permute", "torch.bmm().permute", "torch.bmm().permute", "torch.bmm().permute", "torch.bmm().permute", "torch.bmm().permute", "torch.bmm().permute", "torch.bmm().permute", "torch.bmm().permute", "attention_module.UACA.conv_query().view", "attention_module.UACA.conv_key", "attention_module.UACA.conv_value().view", "torch.bmm().permute().contiguous", "torch.bmm().permute().contiguous", "torch.bmm().permute().contiguous", "torch.bmm().permute().contiguous", "torch.bmm().permute().contiguous", "torch.bmm().permute().contiguous", "torch.bmm().permute().contiguous", "torch.bmm().permute().contiguous", "torch.bmm().permute().contiguous", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "attention_module.UACA.conv_query", "attention_module.UACA.conv_value", "torch.bmm().permute", "torch.bmm().permute", "torch.bmm().permute", "torch.bmm().permute", "torch.bmm().permute", "torch.bmm().permute", "torch.bmm().permute", "torch.bmm().permute", "torch.bmm().permute", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "map", ")", ":", "\n", "        ", "b", ",", "c", ",", "h", ",", "w", "=", "x", ".", "shape", "\n", "\n", "# compute class probability", "\n", "map", "=", "F", ".", "interpolate", "(", "map", ",", "size", "=", "x", ".", "shape", "[", "-", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "fg", "=", "torch", ".", "sigmoid", "(", "map", ")", "\n", "\n", "p", "=", "fg", "-", ".5", "\n", "\n", "fg", "=", "torch", ".", "clip", "(", "p", ",", "0", ",", "1", ")", "# foreground", "\n", "bg", "=", "torch", ".", "clip", "(", "-", "p", ",", "0", ",", "1", ")", "# background", "\n", "cg", "=", ".5", "-", "torch", ".", "abs", "(", "p", ")", "# confusion area", "\n", "\n", "prob", "=", "torch", ".", "cat", "(", "[", "fg", ",", "bg", ",", "cg", "]", ",", "dim", "=", "1", ")", "\n", "\n", "# reshape feature & prob", "\n", "f", "=", "x", ".", "view", "(", "b", ",", "h", "*", "w", ",", "-", "1", ")", "\n", "prob", "=", "prob", ".", "view", "(", "b", ",", "3", ",", "h", "*", "w", ")", "\n", "\n", "# compute context vector", "\n", "context", "=", "torch", ".", "bmm", "(", "prob", ",", "f", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "unsqueeze", "(", "3", ")", "# b, 3, c", "\n", "\n", "# k q v compute", "\n", "query", "=", "self", ".", "conv_query", "(", "x", ")", ".", "view", "(", "b", ",", "self", ".", "channel", ",", "-", "1", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "key", "=", "self", ".", "conv_key", "(", "context", ")", ".", "view", "(", "b", ",", "self", ".", "channel", ",", "-", "1", ")", "\n", "value", "=", "self", ".", "conv_value", "(", "context", ")", ".", "view", "(", "b", ",", "self", ".", "channel", ",", "-", "1", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "\n", "# compute similarity map", "\n", "sim", "=", "torch", ".", "bmm", "(", "query", ",", "key", ")", "# b, hw, c x b, c, 2", "\n", "sim", "=", "(", "self", ".", "channel", "**", "-", ".5", ")", "*", "sim", "\n", "sim", "=", "F", ".", "softmax", "(", "sim", ",", "dim", "=", "-", "1", ")", "\n", "\n", "# compute refined feature", "\n", "context", "=", "torch", ".", "bmm", "(", "sim", ",", "value", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "contiguous", "(", ")", ".", "view", "(", "b", ",", "-", "1", ",", "h", ",", "w", ")", "\n", "context", "=", "self", ".", "conv_out1", "(", "context", ")", "\n", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "context", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "self", ".", "conv_out2", "(", "x", ")", "\n", "x", "=", "self", ".", "conv_out3", "(", "x", ")", "\n", "out", "=", "self", ".", "conv_out4", "(", "x", ")", "\n", "out", "=", "out", "+", "map", "\n", "return", "x", ",", "out", "", "", "", ""]], "home.repos.pwc.inspect_result.plemeri_UACANet.modules.layers.conv.__init__": [[5, 43], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "layers.conv.reset_parameters", "dir", "dir", "dir", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "dir"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.__init__", "home.repos.pwc.inspect_result.plemeri_UACANet.modules.layers.conv.reset_parameters"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "padding", "=", "'same'", ",", "bias", "=", "False", ",", "bn", "=", "True", ",", "relu", "=", "False", ")", ":", "\n", "        ", "super", "(", "conv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "'__iter__'", "not", "in", "dir", "(", "kernel_size", ")", ":", "\n", "            ", "kernel_size", "=", "(", "kernel_size", ",", "kernel_size", ")", "\n", "", "if", "'__iter__'", "not", "in", "dir", "(", "stride", ")", ":", "\n", "            ", "stride", "=", "(", "stride", ",", "stride", ")", "\n", "", "if", "'__iter__'", "not", "in", "dir", "(", "dilation", ")", ":", "\n", "            ", "dilation", "=", "(", "dilation", ",", "dilation", ")", "\n", "\n", "", "if", "padding", "==", "'same'", ":", "\n", "            ", "width_pad_size", "=", "kernel_size", "[", "0", "]", "+", "(", "kernel_size", "[", "0", "]", "-", "1", ")", "*", "(", "dilation", "[", "0", "]", "-", "1", ")", "\n", "height_pad_size", "=", "kernel_size", "[", "1", "]", "+", "(", "kernel_size", "[", "1", "]", "-", "1", ")", "*", "(", "dilation", "[", "1", "]", "-", "1", ")", "\n", "", "elif", "padding", "==", "'valid'", ":", "\n", "            ", "width_pad_size", "=", "0", "\n", "height_pad_size", "=", "0", "\n", "", "else", ":", "\n", "            ", "if", "'__iter__'", "in", "dir", "(", "padding", ")", ":", "\n", "                ", "width_pad_size", "=", "padding", "[", "0", "]", "*", "2", "\n", "height_pad_size", "=", "padding", "[", "1", "]", "*", "2", "\n", "", "else", ":", "\n", "                ", "width_pad_size", "=", "padding", "*", "2", "\n", "height_pad_size", "=", "padding", "*", "2", "\n", "\n", "", "", "width_pad_size", "=", "width_pad_size", "//", "2", "+", "(", "width_pad_size", "%", "2", "-", "1", ")", "\n", "height_pad_size", "=", "height_pad_size", "//", "2", "+", "(", "height_pad_size", "%", "2", "-", "1", ")", "\n", "pad_size", "=", "(", "width_pad_size", ",", "height_pad_size", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "pad_size", ",", "dilation", ",", "groups", ",", "bias", "=", "bias", ")", "\n", "self", ".", "reset_parameters", "(", ")", "\n", "\n", "if", "bn", "is", "True", ":", "\n", "            ", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "bn", "=", "None", "\n", "\n", "", "if", "relu", "is", "True", ":", "\n", "            ", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "relu", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.modules.layers.conv.forward": [[44, 51], ["layers.conv.conv", "layers.conv.bn", "layers.conv.relu"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "if", "self", ".", "bn", "is", "not", "None", ":", "\n", "            ", "x", "=", "self", ".", "bn", "(", "x", ")", "\n", "", "if", "self", ".", "relu", "is", "not", "None", ":", "\n", "            ", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.modules.layers.conv.reset_parameters": [[52, 54], ["torch.init.kaiming_normal_", "torch.init.kaiming_normal_"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "nn", ".", "init", ".", "kaiming_normal_", "(", "self", ".", "conv", ".", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.modules.layers.self_attn.__init__": [[57, 68], ["torch.Module.__init__", "layers.conv", "layers.conv", "layers.conv", "torch.Parameter", "torch.Parameter", "torch.Softmax", "torch.Softmax", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "mode", "=", "'hw'", ")", ":", "\n", "        ", "super", "(", "self_attn", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "mode", "=", "mode", "\n", "\n", "self", ".", "query_conv", "=", "conv", "(", "in_channels", ",", "in_channels", "//", "8", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "key_conv", "=", "conv", "(", "in_channels", ",", "in_channels", "//", "8", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "value_conv", "=", "conv", "(", "in_channels", ",", "in_channels", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ")", "\n", "\n", "self", ".", "gamma", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ")", ")", "\n", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.modules.layers.self_attn.forward": [[69, 92], ["x.size", "layers.self_attn.query_conv().view().permute", "layers.self_attn.key_conv().view", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "layers.self_attn.softmax", "layers.self_attn.value_conv().view", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "out.view.view.view", "layers.self_attn.permute", "layers.self_attn.query_conv().view", "layers.self_attn.key_conv", "layers.self_attn.value_conv", "layers.self_attn.query_conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "batch_size", ",", "channel", ",", "height", ",", "width", "=", "x", ".", "size", "(", ")", "\n", "\n", "axis", "=", "1", "\n", "if", "'h'", "in", "self", ".", "mode", ":", "\n", "            ", "axis", "*=", "height", "\n", "", "if", "'w'", "in", "self", ".", "mode", ":", "\n", "            ", "axis", "*=", "width", "\n", "\n", "", "view", "=", "(", "batch_size", ",", "-", "1", ",", "axis", ")", "\n", "\n", "projected_query", "=", "self", ".", "query_conv", "(", "x", ")", ".", "view", "(", "*", "view", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "projected_key", "=", "self", ".", "key_conv", "(", "x", ")", ".", "view", "(", "*", "view", ")", "\n", "\n", "attention_map", "=", "torch", ".", "bmm", "(", "projected_query", ",", "projected_key", ")", "\n", "attention", "=", "self", ".", "softmax", "(", "attention_map", ")", "\n", "projected_value", "=", "self", ".", "value_conv", "(", "x", ")", ".", "view", "(", "*", "view", ")", "\n", "\n", "out", "=", "torch", ".", "bmm", "(", "projected_value", ",", "attention", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "out", "=", "out", ".", "view", "(", "batch_size", ",", "channel", ",", "height", ",", "width", ")", "\n", "\n", "out", "=", "self", ".", "gamma", "*", "out", "+", "x", "\n", "return", "out", "", "", "", ""]], "home.repos.pwc.inspect_result.plemeri_UACANet.modules.decoder_module.PPD.__init__": [[8, 23], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.ReLU", "layers.conv", "layers.conv", "layers.conv", "layers.conv", "layers.conv", "layers.conv", "layers.conv", "layers.conv", "layers.conv", "torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ")", ":", "\n", "        ", "super", "(", "PPD", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "\n", "self", ".", "upsample", "=", "lambda", "img", ",", "size", ":", "F", ".", "interpolate", "(", "img", ",", "size", "=", "size", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "self", ".", "conv_upsample1", "=", "conv", "(", "channel", ",", "channel", ",", "3", ")", "\n", "self", ".", "conv_upsample2", "=", "conv", "(", "channel", ",", "channel", ",", "3", ")", "\n", "self", ".", "conv_upsample3", "=", "conv", "(", "channel", ",", "channel", ",", "3", ")", "\n", "self", ".", "conv_upsample4", "=", "conv", "(", "channel", ",", "channel", ",", "3", ")", "\n", "self", ".", "conv_upsample5", "=", "conv", "(", "2", "*", "channel", ",", "2", "*", "channel", ",", "3", ")", "\n", "\n", "self", ".", "conv_concat2", "=", "conv", "(", "2", "*", "channel", ",", "2", "*", "channel", ",", "3", ")", "\n", "self", ".", "conv_concat3", "=", "conv", "(", "3", "*", "channel", ",", "3", "*", "channel", ",", "3", ")", "\n", "self", ".", "conv4", "=", "conv", "(", "3", "*", "channel", ",", "3", "*", "channel", ",", "3", ")", "\n", "self", ".", "conv5", "=", "conv", "(", "3", "*", "channel", ",", "1", ",", "1", ",", "bn", "=", "False", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.modules.decoder_module.PPD.forward": [[24, 46], ["decoder_module.PPD.upsample", "decoder_module.PPD.upsample", "decoder_module.PPD.upsample", "decoder_module.PPD.conv_upsample4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "decoder_module.PPD.conv_concat2", "decoder_module.PPD.upsample", "decoder_module.PPD.conv_upsample5", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "decoder_module.PPD.conv_concat3", "decoder_module.PPD.conv4", "decoder_module.PPD.conv5", "decoder_module.PPD.conv_upsample1", "decoder_module.PPD.conv_upsample2", "decoder_module.PPD.conv_upsample3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "f1", ",", "f2", ",", "f3", ")", ":", "\n", "        ", "f1x2", "=", "self", ".", "upsample", "(", "f1", ",", "f2", ".", "shape", "[", "-", "2", ":", "]", ")", "\n", "f1x4", "=", "self", ".", "upsample", "(", "f1", ",", "f3", ".", "shape", "[", "-", "2", ":", "]", ")", "\n", "f2x2", "=", "self", ".", "upsample", "(", "f2", ",", "f3", ".", "shape", "[", "-", "2", ":", "]", ")", "\n", "\n", "f2_1", "=", "self", ".", "conv_upsample1", "(", "f1x2", ")", "*", "f2", "\n", "f3_1", "=", "self", ".", "conv_upsample2", "(", "f1x4", ")", "*", "self", ".", "conv_upsample3", "(", "f2x2", ")", "*", "f3", "\n", "\n", "f1_2", "=", "self", ".", "conv_upsample4", "(", "f1x2", ")", "\n", "f2_2", "=", "torch", ".", "cat", "(", "[", "f2_1", ",", "f1_2", "]", ",", "1", ")", "\n", "f2_2", "=", "self", ".", "conv_concat2", "(", "f2_2", ")", "\n", "\n", "f2_2x2", "=", "self", ".", "upsample", "(", "f2_2", ",", "f3", ".", "shape", "[", "-", "2", ":", "]", ")", "\n", "f2_2x2", "=", "self", ".", "conv_upsample5", "(", "f2_2x2", ")", "\n", "\n", "f3_2", "=", "torch", ".", "cat", "(", "[", "f3_1", ",", "f2_2x2", "]", ",", "1", ")", "\n", "f3_2", "=", "self", ".", "conv_concat3", "(", "f3_2", ")", "\n", "\n", "f3_2", "=", "self", ".", "conv4", "(", "f3_2", ")", "\n", "out", "=", "self", ".", "conv5", "(", "f3_2", ")", "\n", "\n", "return", "f3_2", ",", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.modules.decoder_module.simple_decoder.__init__": [[50, 59], ["torch.Module.__init__", "layers.conv", "layers.conv", "layers.conv", "layers.conv", "layers.conv", "torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ")", ":", "\n", "        ", "super", "(", "simple_decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv", "(", "channel", "*", "3", ",", "channel", ",", "3", ")", "\n", "self", ".", "conv2", "=", "conv", "(", "channel", ",", "channel", ",", "3", ")", "\n", "self", ".", "conv3", "=", "conv", "(", "channel", ",", "channel", ",", "3", ")", "\n", "self", ".", "conv4", "=", "conv", "(", "channel", ",", "channel", ",", "3", ")", "\n", "self", ".", "conv5", "=", "conv", "(", "channel", ",", "1", ",", "3", ",", "bn", "=", "False", ")", "\n", "\n", "self", ".", "upsample", "=", "lambda", "img", ",", "size", ":", "F", ".", "interpolate", "(", "img", ",", "size", "=", "size", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.modules.decoder_module.simple_decoder.forward": [[60, 72], ["decoder_module.simple_decoder.upsample", "decoder_module.simple_decoder.upsample", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "decoder_module.simple_decoder.conv1", "decoder_module.simple_decoder.conv2", "decoder_module.simple_decoder.conv3", "decoder_module.simple_decoder.conv4", "decoder_module.simple_decoder.conv5"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "f1", ",", "f2", ",", "f3", ")", ":", "\n", "        ", "f1", "=", "self", ".", "upsample", "(", "f1", ",", "f3", ".", "shape", "[", "-", "2", ":", "]", ")", "\n", "f2", "=", "self", ".", "upsample", "(", "f2", ",", "f3", ".", "shape", "[", "-", "2", ":", "]", ")", "\n", "f3", "=", "torch", ".", "cat", "(", "[", "f1", ",", "f2", ",", "f3", "]", ",", "dim", "=", "1", ")", "\n", "\n", "f3", "=", "self", ".", "conv1", "(", "f3", ")", "\n", "f3", "=", "self", ".", "conv2", "(", "f3", ")", "\n", "f3", "=", "self", ".", "conv3", "(", "f3", ")", "\n", "f3", "=", "self", ".", "conv4", "(", "f3", ")", "\n", "out", "=", "self", ".", "conv5", "(", "f3", ")", "\n", "\n", "return", "f3", ",", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.modules.decoder_module.PAA_d.__init__": [[76, 88], ["torch.Module.__init__", "layers.conv", "layers.conv", "layers.conv", "layers.conv", "layers.conv", "decoder_module.PAA_d.", "decoder_module.PAA_d.", "torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ")", ":", "\n", "        ", "super", "(", "PAA_d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv", "(", "channel", "*", "3", ",", "channel", ",", "3", ")", "\n", "self", ".", "conv2", "=", "conv", "(", "channel", ",", "channel", ",", "3", ")", "\n", "self", ".", "conv3", "=", "conv", "(", "channel", ",", "channel", ",", "3", ")", "\n", "self", ".", "conv4", "=", "conv", "(", "channel", ",", "channel", ",", "3", ")", "\n", "self", ".", "conv5", "=", "conv", "(", "channel", ",", "1", ",", "3", ",", "bn", "=", "False", ")", "\n", "\n", "self", ".", "Hattn", "=", "self_attn", "(", "channel", ",", "mode", "=", "'h'", ")", "\n", "self", ".", "Wattn", "=", "self_attn", "(", "channel", ",", "mode", "=", "'w'", ")", "\n", "\n", "self", ".", "upsample", "=", "lambda", "img", ",", "size", ":", "F", ".", "interpolate", "(", "img", ",", "size", "=", "size", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.modules.decoder_module.PAA_d.forward": [[89, 104], ["decoder_module.PAA_d.upsample", "decoder_module.PAA_d.upsample", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "decoder_module.PAA_d.conv1", "decoder_module.PAA_d.Hattn", "decoder_module.PAA_d.Wattn", "decoder_module.PAA_d.conv2", "decoder_module.PAA_d.conv3", "decoder_module.PAA_d.conv4", "decoder_module.PAA_d.conv5"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "f1", ",", "f2", ",", "f3", ")", ":", "\n", "        ", "f1", "=", "self", ".", "upsample", "(", "f1", ",", "f3", ".", "shape", "[", "-", "2", ":", "]", ")", "\n", "f2", "=", "self", ".", "upsample", "(", "f2", ",", "f3", ".", "shape", "[", "-", "2", ":", "]", ")", "\n", "f3", "=", "torch", ".", "cat", "(", "[", "f1", ",", "f2", ",", "f3", "]", ",", "dim", "=", "1", ")", "\n", "f3", "=", "self", ".", "conv1", "(", "f3", ")", "\n", "\n", "Hf3", "=", "self", ".", "Hattn", "(", "f3", ")", "\n", "Wf3", "=", "self", ".", "Wattn", "(", "f3", ")", "\n", "\n", "f3", "=", "self", ".", "conv2", "(", "Hf3", "+", "Wf3", ")", "\n", "f3", "=", "self", ".", "conv3", "(", "f3", ")", "\n", "f3", "=", "self", ".", "conv4", "(", "f3", ")", "\n", "out", "=", "self", ".", "conv5", "(", "f3", ")", "\n", "\n", "return", "f3", ",", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.plemeri_UACANet.modules.context_module.simple_context.__init__": [[8, 17], ["torch.Module.__init__", "layers.conv", "layers.conv", "layers.conv", "layers.conv", "layers.conv", "layers.conv"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "out_channel", ")", ":", "\n", "        ", "super", "(", "simple_context", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "branch0", "=", "conv", "(", "in_channel", ",", "out_channel", ",", "1", ")", "\n", "self", ".", "branch1", "=", "conv", "(", "in_channel", ",", "out_channel", ",", "3", ",", "dilation", "=", "3", ")", "\n", "self", ".", "branch2", "=", "conv", "(", "in_channel", ",", "out_channel", ",", "3", ",", "dilation", "=", "5", ")", "\n", "self", ".", "branch3", "=", "conv", "(", "in_channel", ",", "out_channel", ",", "3", ",", "dilation", "=", "7", ")", "\n", "\n", "self", ".", "conv_cat", "=", "conv", "(", "4", "*", "out_channel", ",", "out_channel", ",", "3", ",", "relu", "=", "True", ")", "\n", "self", ".", "conv_res", "=", "conv", "(", "in_channel", ",", "out_channel", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.modules.context_module.simple_context.forward": [[18, 29], ["context_module.simple_context.branch0", "context_module.simple_context.branch1", "context_module.simple_context.branch2", "context_module.simple_context.branch3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "context_module.simple_context.conv_cat", "context_module.simple_context.conv_res"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x0", "=", "self", ".", "branch0", "(", "x", ")", "\n", "x1", "=", "self", ".", "branch1", "(", "x", ")", "\n", "x2", "=", "self", ".", "branch2", "(", "x", ")", "\n", "x3", "=", "self", ".", "branch3", "(", "x", ")", "\n", "\n", "x_cat", "=", "torch", ".", "cat", "(", "[", "x0", ",", "x1", ",", "x2", ",", "x3", "]", ",", "dim", "=", "1", ")", "\n", "x_cat", "=", "self", ".", "conv_cat", "(", "x_cat", ")", "\n", "\n", "x_cat", "=", "x_cat", "+", "self", ".", "conv_res", "(", "x", ")", "\n", "return", "x_cat", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.modules.context_module.RFB_kernel.__init__": [[31, 37], ["torch.Module.__init__", "layers.conv", "layers.conv", "layers.conv", "layers.conv"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "out_channel", ",", "receptive_size", "=", "3", ")", ":", "\n", "        ", "super", "(", "RFB_kernel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv0", "=", "conv", "(", "in_channel", ",", "out_channel", ",", "1", ")", "\n", "self", ".", "conv1", "=", "conv", "(", "out_channel", ",", "out_channel", ",", "kernel_size", "=", "(", "1", ",", "receptive_size", ")", ")", "\n", "self", ".", "conv2", "=", "conv", "(", "out_channel", ",", "out_channel", ",", "kernel_size", "=", "(", "receptive_size", ",", "1", ")", ")", "\n", "self", ".", "conv3", "=", "conv", "(", "out_channel", ",", "out_channel", ",", "3", ",", "dilation", "=", "receptive_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.modules.context_module.RFB_kernel.forward": [[38, 44], ["context_module.RFB_kernel.conv0", "context_module.RFB_kernel.conv1", "context_module.RFB_kernel.conv2", "context_module.RFB_kernel.conv3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv0", "(", "x", ")", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "x", "=", "self", ".", "conv3", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.modules.context_module.RFB.__init__": [[46, 57], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.ReLU", "layers.conv", "context_module.RFB_kernel", "context_module.RFB_kernel", "context_module.RFB_kernel", "layers.conv", "layers.conv"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "out_channel", ")", ":", "\n", "        ", "super", "(", "RFB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "\n", "self", ".", "branch0", "=", "conv", "(", "in_channel", ",", "out_channel", ",", "1", ")", "\n", "self", ".", "branch1", "=", "RFB_kernel", "(", "in_channel", ",", "out_channel", ",", "3", ")", "\n", "self", ".", "branch2", "=", "RFB_kernel", "(", "in_channel", ",", "out_channel", ",", "5", ")", "\n", "self", ".", "branch3", "=", "RFB_kernel", "(", "in_channel", ",", "out_channel", ",", "7", ")", "\n", "\n", "self", ".", "conv_cat", "=", "conv", "(", "4", "*", "out_channel", ",", "out_channel", ",", "3", ")", "\n", "self", ".", "conv_res", "=", "conv", "(", "in_channel", ",", "out_channel", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.modules.context_module.RFB.forward": [[58, 68], ["context_module.RFB.branch0", "context_module.RFB.branch1", "context_module.RFB.branch2", "context_module.RFB.branch3", "context_module.RFB.conv_cat", "context_module.RFB.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "context_module.RFB.conv_res"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x0", "=", "self", ".", "branch0", "(", "x", ")", "\n", "x1", "=", "self", ".", "branch1", "(", "x", ")", "\n", "x2", "=", "self", ".", "branch2", "(", "x", ")", "\n", "x3", "=", "self", ".", "branch3", "(", "x", ")", "\n", "\n", "x_cat", "=", "self", ".", "conv_cat", "(", "torch", ".", "cat", "(", "(", "x0", ",", "x1", ",", "x2", ",", "x3", ")", ",", "1", ")", ")", "\n", "x", "=", "self", ".", "relu", "(", "x_cat", "+", "self", ".", "conv_res", "(", "x", ")", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.modules.context_module.PAA_kernel.__init__": [[70, 78], ["torch.Module.__init__", "layers.conv", "layers.conv", "layers.conv", "layers.conv", "context_module.PAA_kernel.", "context_module.PAA_kernel."], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "out_channel", ",", "receptive_size", "=", "3", ")", ":", "\n", "        ", "super", "(", "PAA_kernel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv0", "=", "conv", "(", "in_channel", ",", "out_channel", ",", "1", ")", "\n", "self", ".", "conv1", "=", "conv", "(", "out_channel", ",", "out_channel", ",", "kernel_size", "=", "(", "1", ",", "receptive_size", ")", ")", "\n", "self", ".", "conv2", "=", "conv", "(", "out_channel", ",", "out_channel", ",", "kernel_size", "=", "(", "receptive_size", ",", "1", ")", ")", "\n", "self", ".", "conv3", "=", "conv", "(", "out_channel", ",", "out_channel", ",", "3", ",", "dilation", "=", "receptive_size", ")", "\n", "self", ".", "Hattn", "=", "self_attn", "(", "out_channel", ",", "mode", "=", "'h'", ")", "\n", "self", ".", "Wattn", "=", "self_attn", "(", "out_channel", ",", "mode", "=", "'w'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.modules.context_module.PAA_kernel.forward": [[79, 89], ["context_module.PAA_kernel.conv0", "context_module.PAA_kernel.conv1", "context_module.PAA_kernel.conv2", "context_module.PAA_kernel.Hattn", "context_module.PAA_kernel.Wattn", "context_module.PAA_kernel.conv3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv0", "(", "x", ")", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "\n", "Hx", "=", "self", ".", "Hattn", "(", "x", ")", "\n", "Wx", "=", "self", ".", "Wattn", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "conv3", "(", "Hx", "+", "Wx", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.modules.context_module.PAA_e.__init__": [[91, 102], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.ReLU", "layers.conv", "context_module.PAA_kernel", "context_module.PAA_kernel", "context_module.PAA_kernel", "layers.conv", "layers.conv"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "out_channel", ")", ":", "\n", "        ", "super", "(", "PAA_e", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "\n", "self", ".", "branch0", "=", "conv", "(", "in_channel", ",", "out_channel", ",", "1", ")", "\n", "self", ".", "branch1", "=", "PAA_kernel", "(", "in_channel", ",", "out_channel", ",", "3", ")", "\n", "self", ".", "branch2", "=", "PAA_kernel", "(", "in_channel", ",", "out_channel", ",", "5", ")", "\n", "self", ".", "branch3", "=", "PAA_kernel", "(", "in_channel", ",", "out_channel", ",", "7", ")", "\n", "\n", "self", ".", "conv_cat", "=", "conv", "(", "4", "*", "out_channel", ",", "out_channel", ",", "3", ")", "\n", "self", ".", "conv_res", "=", "conv", "(", "in_channel", ",", "out_channel", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.modules.context_module.PAA_e.forward": [[103, 113], ["context_module.PAA_e.branch0", "context_module.PAA_e.branch1", "context_module.PAA_e.branch2", "context_module.PAA_e.branch3", "context_module.PAA_e.conv_cat", "context_module.PAA_e.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "context_module.PAA_e.conv_res"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x0", "=", "self", ".", "branch0", "(", "x", ")", "\n", "x1", "=", "self", ".", "branch1", "(", "x", ")", "\n", "x2", "=", "self", ".", "branch2", "(", "x", ")", "\n", "x3", "=", "self", ".", "branch3", "(", "x", ")", "\n", "\n", "x_cat", "=", "self", ".", "conv_cat", "(", "torch", ".", "cat", "(", "(", "x0", ",", "x1", ",", "x2", ",", "x3", ")", ",", "1", ")", ")", "\n", "x", "=", "self", ".", "relu", "(", "x_cat", "+", "self", ".", "conv_res", "(", "x", ")", ")", "\n", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.ResNet.BasicBlock.__init__": [[14, 23], ["torch.Module.__init__", "ResNet.conv3x3", "torch.BatchNorm2d", "torch.ReLU", "ResNet.conv3x3", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.__init__", "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.ResNet.conv3x3", "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.ResNet.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.ResNet.BasicBlock.forward": [[24, 41], ["ResNet.BasicBlock.conv1", "ResNet.BasicBlock.bn1", "ResNet.BasicBlock.relu", "ResNet.BasicBlock.conv2", "ResNet.BasicBlock.bn2", "ResNet.BasicBlock.relu", "ResNet.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.ResNet.Bottleneck.__init__": [[46, 58], ["torch.Module.__init__", "torch.Conv2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "*", "4", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "4", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.ResNet.Bottleneck.forward": [[59, 80], ["ResNet.Bottleneck.conv1", "ResNet.Bottleneck.bn1", "ResNet.Bottleneck.relu", "ResNet.Bottleneck.conv2", "ResNet.Bottleneck.bn2", "ResNet.Bottleneck.relu", "ResNet.Bottleneck.conv3", "ResNet.Bottleneck.bn3", "ResNet.Bottleneck.relu", "ResNet.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.ResNet.ResNet.__init__": [[84, 106], ["torch.Module.__init__", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.MaxPool2d", "ResNet.ResNet._make_layer", "ResNet.ResNet._make_layer", "ResNet.ResNet._make_layer", "ResNet.ResNet._make_layer", "ResNet.ResNet.modules", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.__init__", "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.Res2Net_v1b.Res2Net._make_layer", "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.Res2Net_v1b.Res2Net._make_layer", "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.Res2Net_v1b.Res2Net._make_layer", "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.Res2Net_v1b.Res2Net._make_layer"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "# self.inplanes = 128", "\n", "        ", "self", ".", "inplanes", "=", "64", "\n", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "Bottleneck", ",", "64", ",", "3", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "Bottleneck", ",", "128", ",", "4", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "Bottleneck", ",", "256", ",", "6", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "Bottleneck", ",", "512", ",", "3", ",", "stride", "=", "2", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.ResNet.ResNet._make_layer": [[107, 123], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "block", "layers.append", "torch.Conv2d", "torch.BatchNorm2d", "block"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.ResNet.ResNet.forward": [[124, 139], ["ResNet.ResNet.conv1", "ResNet.ResNet.bn1", "ResNet.ResNet.relu", "ResNet.ResNet.maxpool", "ResNet.ResNet.layer1", "ResNet.ResNet.layer2", "ResNet.ResNet.layer3_1", "ResNet.ResNet.layer4_1", "ResNet.ResNet.layer3_2", "ResNet.ResNet.layer4_2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x1", "=", "self", ".", "layer3_1", "(", "x", ")", "\n", "x1", "=", "self", ".", "layer4_1", "(", "x1", ")", "\n", "\n", "x2", "=", "self", ".", "layer3_2", "(", "x", ")", "\n", "x2", "=", "self", ".", "layer4_2", "(", "x2", ")", "\n", "\n", "return", "x1", ",", "x2", "\n", "", "", ""]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.ResNet.conv3x3": [[5, 9], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.Res2Net_v1b.Bottle2neck.__init__": [[12, 41], ["torch.Module.__init__", "int", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "range", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "math.floor", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "convs.append", "bns.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "dilation", "=", "1", ",", "downsample", "=", "None", ",", "baseWidth", "=", "26", ",", "scale", "=", "4", ",", "stype", "=", "'normal'", ")", ":", "\n", "        ", "super", "(", "Bottle2neck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "width", "=", "int", "(", "math", ".", "floor", "(", "planes", "*", "(", "baseWidth", "/", "64.0", ")", ")", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "width", "*", "scale", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "width", "*", "scale", ")", "\n", "\n", "if", "scale", "==", "1", ":", "\n", "            ", "self", ".", "nums", "=", "1", "\n", "", "else", ":", "\n", "            ", "self", ".", "nums", "=", "scale", "-", "1", "\n", "", "if", "stype", "==", "'stage'", ":", "\n", "            ", "self", ".", "pool", "=", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ")", "\n", "", "convs", "=", "[", "]", "\n", "bns", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "nums", ")", ":", "\n", "            ", "convs", ".", "append", "(", "nn", ".", "Conv2d", "(", "width", ",", "width", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "dilation", "=", "dilation", ",", "padding", "=", "dilation", ",", "bias", "=", "False", ")", ")", "\n", "bns", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "width", ")", ")", "\n", "", "self", ".", "convs", "=", "nn", ".", "ModuleList", "(", "convs", ")", "\n", "self", ".", "bns", "=", "nn", ".", "ModuleList", "(", "bns", ")", "\n", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "width", "*", "scale", ",", "planes", "*", "self", ".", "expansion", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stype", "=", "stype", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "width", "=", "width", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.Res2Net_v1b.Bottle2neck.forward": [[42, 76], ["Res2Net_v1b.Bottle2neck.conv1", "Res2Net_v1b.Bottle2neck.bn1", "Res2Net_v1b.Bottle2neck.relu", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "range", "Res2Net_v1b.Bottle2neck.conv3", "Res2Net_v1b.Bottle2neck.bn3", "Res2Net_v1b.Bottle2neck.relu", "Res2Net_v1b.Bottle2neck.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "Res2Net_v1b.Bottle2neck.downsample", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "Res2Net_v1b.Bottle2neck.pool"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "spx", "=", "torch", ".", "split", "(", "out", ",", "self", ".", "width", ",", "1", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "nums", ")", ":", "\n", "            ", "if", "i", "==", "0", "or", "self", ".", "stype", "==", "'stage'", ":", "\n", "                ", "sp", "=", "spx", "[", "i", "]", "\n", "", "else", ":", "\n", "                ", "sp", "=", "sp", "+", "spx", "[", "i", "]", "\n", "", "sp", "=", "self", ".", "convs", "[", "i", "]", "(", "sp", ")", "\n", "sp", "=", "self", ".", "relu", "(", "self", ".", "bns", "[", "i", "]", "(", "sp", ")", ")", "\n", "if", "i", "==", "0", ":", "\n", "                ", "out", "=", "sp", "\n", "", "else", ":", "\n", "                ", "out", "=", "torch", ".", "cat", "(", "(", "out", ",", "sp", ")", ",", "1", ")", "\n", "", "", "if", "self", ".", "scale", "!=", "1", "and", "self", ".", "stype", "==", "'normal'", ":", "\n", "            ", "out", "=", "torch", ".", "cat", "(", "(", "out", ",", "spx", "[", "self", ".", "nums", "]", ")", ",", "1", ")", "\n", "", "elif", "self", ".", "scale", "!=", "1", "and", "self", ".", "stype", "==", "'stage'", ":", "\n", "            ", "out", "=", "torch", ".", "cat", "(", "(", "out", ",", "self", ".", "pool", "(", "spx", "[", "self", ".", "nums", "]", ")", ")", ",", "1", ")", "\n", "\n", "", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.Res2Net_v1b.Res2Net.__init__": [[80, 122], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "Res2Net_v1b.Res2Net._make_layer", "Res2Net_v1b.Res2Net._make_layer", "Res2Net_v1b.Res2Net._make_layer", "Res2Net_v1b.Res2Net._make_layer", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "Res2Net_v1b.Res2Net.modules", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "isinstance", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.__init__", "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.Res2Net_v1b.Res2Net._make_layer", "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.Res2Net_v1b.Res2Net._make_layer", "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.Res2Net_v1b.Res2Net._make_layer", "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.Res2Net_v1b.Res2Net._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "baseWidth", "=", "26", ",", "scale", "=", "4", ",", "num_classes", "=", "1000", ",", "output_stride", "=", "32", ")", ":", "\n", "        ", "self", ".", "inplanes", "=", "64", "\n", "super", "(", "Res2Net", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "baseWidth", "=", "baseWidth", "\n", "self", ".", "scale", "=", "scale", "\n", "if", "output_stride", "==", "8", ":", "\n", "            ", "self", ".", "grid", "=", "[", "1", ",", "2", ",", "1", "]", "\n", "self", ".", "stride", "=", "[", "1", ",", "2", ",", "1", ",", "1", "]", "\n", "self", ".", "dilation", "=", "[", "1", ",", "1", ",", "2", ",", "4", "]", "\n", "", "elif", "output_stride", "==", "16", ":", "\n", "            ", "self", ".", "grid", "=", "[", "1", ",", "2", ",", "4", "]", "\n", "self", ".", "stride", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", "\n", "self", ".", "dilation", "=", "[", "1", ",", "1", ",", "1", ",", "2", "]", "\n", "", "elif", "output_stride", "==", "32", ":", "\n", "            ", "self", ".", "grid", "=", "[", "1", ",", "2", ",", "4", "]", "\n", "self", ".", "stride", "=", "[", "1", ",", "2", ",", "2", ",", "2", "]", "\n", "self", ".", "dilation", "=", "[", "1", ",", "1", ",", "2", ",", "4", "]", "\n", "", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "32", ",", "3", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "32", ",", "32", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "32", ",", "64", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ",", "stride", "=", "self", ".", "stride", "[", "0", "]", ",", "dilation", "=", "self", ".", "dilation", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "self", ".", "stride", "[", "1", "]", ",", "dilation", "=", "self", ".", "dilation", "[", "1", "]", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "self", ".", "stride", "[", "2", "]", ",", "dilation", "=", "self", ".", "dilation", "[", "2", "]", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "self", ".", "stride", "[", "3", "]", ",", "dilation", "=", "self", ".", "dilation", "[", "3", "]", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "num_classes", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.Res2Net_v1b.Res2Net._make_layer": [[123, 142], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "block"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "stride", ",", "stride", "=", "stride", ",", "\n", "ceil_mode", "=", "True", ",", "count_include_pad", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "dilation", ",", "downsample", "=", "downsample", ",", "\n", "stype", "=", "'stage'", ",", "baseWidth", "=", "self", ".", "baseWidth", ",", "scale", "=", "self", ".", "scale", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "dilation", "=", "dilation", ",", "baseWidth", "=", "self", ".", "baseWidth", ",", "scale", "=", "self", ".", "scale", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.Res2Net_v1b.Res2Net.forward": [[143, 159], ["Res2Net_v1b.Res2Net.conv1", "Res2Net_v1b.Res2Net.bn1", "Res2Net_v1b.Res2Net.relu", "Res2Net_v1b.Res2Net.maxpool", "Res2Net_v1b.Res2Net.layer1", "Res2Net_v1b.Res2Net.layer2", "Res2Net_v1b.Res2Net.layer3", "Res2Net_v1b.Res2Net.layer4", "Res2Net_v1b.Res2Net.avgpool", "Res2Net_v1b.Res2Net.view", "Res2Net_v1b.Res2Net.fc", "Res2Net_v1b.Res2Net.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.Res2Net_v1b.res2net50_v1b": [[161, 166], ["Res2Net_v1b.Res2Net", "Res2Net.load_state_dict", "torch.load_url"], "function", ["None"], ["", "", "def", "res2net50_v1b", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "Res2Net", "(", "Bottle2neck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "baseWidth", "=", "26", ",", "scale", "=", "4", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'res2net50_v1b_26w_4s'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.Res2Net_v1b.res2net101_v1b": [[168, 173], ["Res2Net_v1b.Res2Net", "Res2Net.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "res2net101_v1b", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "Res2Net", "(", "Bottle2neck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "baseWidth", "=", "26", ",", "scale", "=", "4", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'res2net101_v1b_26w_4s'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.Res2Net_v1b.res2net50_v1b_26w_4s": [[175, 180], ["Res2Net_v1b.Res2Net", "Res2Net.load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load"], "function", ["None"], ["", "def", "res2net50_v1b_26w_4s", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "Res2Net", "(", "Bottle2neck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "baseWidth", "=", "26", ",", "scale", "=", "4", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "'data/backbone_ckpt/res2net50_v1b_26w_4s-3cf99910.pth'", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.Res2Net_v1b.res2net101_v1b_26w_4s": [[182, 187], ["Res2Net_v1b.Res2Net", "Res2Net.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "res2net101_v1b_26w_4s", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "Res2Net", "(", "Bottle2neck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "baseWidth", "=", "26", ",", "scale", "=", "4", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'res2net101_v1b_26w_4s'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.Res2Net_v1b.res2net152_v1b_26w_4s": [[189, 194], ["Res2Net_v1b.Res2Net", "Res2Net.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "res2net152_v1b_26w_4s", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "Res2Net", "(", "Bottle2neck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ",", "baseWidth", "=", "26", ",", "scale", "=", "4", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'res2net152_v1b_26w_4s'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.Mlp.__init__": [[14, 22], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "act_layer", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_features", ",", "hidden_features", "=", "None", ",", "out_features", "=", "None", ",", "act_layer", "=", "nn", ".", "GELU", ",", "drop", "=", "0.", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "out_features", "=", "out_features", "or", "in_features", "\n", "hidden_features", "=", "hidden_features", "or", "in_features", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "in_features", ",", "hidden_features", ")", "\n", "self", ".", "act", "=", "act_layer", "(", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "hidden_features", ",", "out_features", ")", "\n", "self", ".", "drop", "=", "nn", ".", "Dropout", "(", "drop", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.Mlp.forward": [[23, 30], ["SwinTransformer.Mlp.fc1", "SwinTransformer.Mlp.act", "SwinTransformer.Mlp.drop", "SwinTransformer.Mlp.fc2", "SwinTransformer.Mlp.drop"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "fc1", "(", "x", ")", "\n", "x", "=", "self", ".", "act", "(", "x", ")", "\n", "x", "=", "self", ".", "drop", "(", "x", ")", "\n", "x", "=", "self", ".", "fc2", "(", "x", ")", "\n", "x", "=", "self", ".", "drop", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.WindowAttention.__init__": [[78, 111], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "relative_coords.permute().contiguous.permute().contiguous.permute().contiguous", "relative_coords.permute().contiguous.permute().contiguous.sum", "SwinTransformer.WindowAttention.register_buffer", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Dropout", "timm.models.layers.trunc_normal_", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "relative_coords.permute().contiguous.permute().contiguous.permute"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.__init__"], ["def", "__init__", "(", "self", ",", "dim", ",", "window_size", ",", "num_heads", ",", "qkv_bias", "=", "True", ",", "qk_scale", "=", "None", ",", "attn_drop", "=", "0.", ",", "proj_drop", "=", "0.", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "window_size", "=", "window_size", "# Wh, Ww", "\n", "self", ".", "num_heads", "=", "num_heads", "\n", "head_dim", "=", "dim", "//", "num_heads", "\n", "self", ".", "scale", "=", "qk_scale", "or", "head_dim", "**", "-", "0.5", "\n", "\n", "# define a parameter table of relative position bias", "\n", "self", ".", "relative_position_bias_table", "=", "nn", ".", "Parameter", "(", "\n", "torch", ".", "zeros", "(", "(", "2", "*", "window_size", "[", "0", "]", "-", "1", ")", "*", "(", "2", "*", "window_size", "[", "1", "]", "-", "1", ")", ",", "num_heads", ")", ")", "# 2*Wh-1 * 2*Ww-1, nH", "\n", "\n", "# get pair-wise relative position index for each token inside the window", "\n", "coords_h", "=", "torch", ".", "arange", "(", "self", ".", "window_size", "[", "0", "]", ")", "\n", "coords_w", "=", "torch", ".", "arange", "(", "self", ".", "window_size", "[", "1", "]", ")", "\n", "coords", "=", "torch", ".", "stack", "(", "torch", ".", "meshgrid", "(", "[", "coords_h", ",", "coords_w", "]", ")", ")", "# 2, Wh, Ww", "\n", "coords_flatten", "=", "torch", ".", "flatten", "(", "coords", ",", "1", ")", "# 2, Wh*Ww", "\n", "relative_coords", "=", "coords_flatten", "[", ":", ",", ":", ",", "None", "]", "-", "coords_flatten", "[", ":", ",", "None", ",", ":", "]", "# 2, Wh*Ww, Wh*Ww", "\n", "relative_coords", "=", "relative_coords", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "contiguous", "(", ")", "# Wh*Ww, Wh*Ww, 2", "\n", "relative_coords", "[", ":", ",", ":", ",", "0", "]", "+=", "self", ".", "window_size", "[", "0", "]", "-", "1", "# shift to start from 0", "\n", "relative_coords", "[", ":", ",", ":", ",", "1", "]", "+=", "self", ".", "window_size", "[", "1", "]", "-", "1", "\n", "relative_coords", "[", ":", ",", ":", ",", "0", "]", "*=", "2", "*", "self", ".", "window_size", "[", "1", "]", "-", "1", "\n", "relative_position_index", "=", "relative_coords", ".", "sum", "(", "-", "1", ")", "# Wh*Ww, Wh*Ww", "\n", "self", ".", "register_buffer", "(", "\"relative_position_index\"", ",", "relative_position_index", ")", "\n", "\n", "self", ".", "qkv", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", "*", "3", ",", "bias", "=", "qkv_bias", ")", "\n", "self", ".", "attn_drop", "=", "nn", ".", "Dropout", "(", "attn_drop", ")", "\n", "self", ".", "proj", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", ")", "\n", "self", ".", "proj_drop", "=", "nn", ".", "Dropout", "(", "proj_drop", ")", "\n", "\n", "trunc_normal_", "(", "self", ".", "relative_position_bias_table", ",", "std", "=", ".02", ")", "\n", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.WindowAttention.forward": [[112, 144], ["SwinTransformer.WindowAttention.qkv().reshape().permute", "SwinTransformer.WindowAttention.relative_position_bias_table[].view", "relative_position_bias.permute().contiguous.permute().contiguous.permute().contiguous", "SwinTransformer.WindowAttention.attn_drop", "SwinTransformer.WindowAttention.proj", "SwinTransformer.WindowAttention.proj_drop", "k.transpose", "relative_position_bias.permute().contiguous.permute().contiguous.unsqueeze", "SwinTransformer.WindowAttention.view", "SwinTransformer.WindowAttention.softmax", "SwinTransformer.WindowAttention.softmax", "SwinTransformer.WindowAttention.qkv().reshape", "relative_position_bias.permute().contiguous.permute().contiguous.permute", "SwinTransformer.WindowAttention.view", "mask.unsqueeze().unsqueeze", "SwinTransformer.WindowAttention.qkv", "SwinTransformer.WindowAttention.relative_position_index.view", "mask.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "mask", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            x: input features with shape of (num_windows*B, N, C)\n            mask: (0/-inf) mask with shape of (num_windows, Wh*Ww, Wh*Ww) or None\n        \"\"\"", "\n", "B_", ",", "N", ",", "C", "=", "x", ".", "shape", "\n", "qkv", "=", "self", ".", "qkv", "(", "x", ")", ".", "reshape", "(", "B_", ",", "N", ",", "3", ",", "self", ".", "num_heads", ",", "C", "//", "self", ".", "num_heads", ")", ".", "permute", "(", "2", ",", "0", ",", "3", ",", "1", ",", "4", ")", "\n", "q", ",", "k", ",", "v", "=", "qkv", "[", "0", "]", ",", "qkv", "[", "1", "]", ",", "qkv", "[", "2", "]", "# make torchscript happy (cannot use tensor as tuple)", "\n", "\n", "q", "=", "q", "*", "self", ".", "scale", "\n", "attn", "=", "(", "q", "@", "k", ".", "transpose", "(", "-", "2", ",", "-", "1", ")", ")", "\n", "\n", "relative_position_bias", "=", "self", ".", "relative_position_bias_table", "[", "self", ".", "relative_position_index", ".", "view", "(", "-", "1", ")", "]", ".", "view", "(", "\n", "self", ".", "window_size", "[", "0", "]", "*", "self", ".", "window_size", "[", "1", "]", ",", "self", ".", "window_size", "[", "0", "]", "*", "self", ".", "window_size", "[", "1", "]", ",", "-", "1", ")", "# Wh*Ww,Wh*Ww,nH", "\n", "relative_position_bias", "=", "relative_position_bias", ".", "permute", "(", "2", ",", "0", ",", "1", ")", ".", "contiguous", "(", ")", "# nH, Wh*Ww, Wh*Ww", "\n", "attn", "=", "attn", "+", "relative_position_bias", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "if", "mask", "is", "not", "None", ":", "\n", "            ", "nW", "=", "mask", ".", "shape", "[", "0", "]", "\n", "attn", "=", "attn", ".", "view", "(", "B_", "//", "nW", ",", "nW", ",", "self", ".", "num_heads", ",", "N", ",", "N", ")", "+", "mask", ".", "unsqueeze", "(", "1", ")", ".", "unsqueeze", "(", "0", ")", "\n", "attn", "=", "attn", ".", "view", "(", "-", "1", ",", "self", ".", "num_heads", ",", "N", ",", "N", ")", "\n", "attn", "=", "self", ".", "softmax", "(", "attn", ")", "\n", "", "else", ":", "\n", "            ", "attn", "=", "self", ".", "softmax", "(", "attn", ")", "\n", "\n", "", "attn", "=", "self", ".", "attn_drop", "(", "attn", ")", "\n", "\n", "x", "=", "(", "attn", "@", "v", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "reshape", "(", "B_", ",", "N", ",", "C", ")", "\n", "x", "=", "self", ".", "proj", "(", "x", ")", "\n", "x", "=", "self", ".", "proj_drop", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.WindowAttention.extra_repr": [[145, 147], ["None"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", "->", "str", ":", "\n", "        ", "return", "f'dim={self.dim}, window_size={self.window_size}, num_heads={self.num_heads}'", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.WindowAttention.flops": [[148, 160], ["None"], "methods", ["None"], ["", "def", "flops", "(", "self", ",", "N", ")", ":", "\n", "# calculate flops for 1 window with token length of N", "\n", "        ", "flops", "=", "0", "\n", "# qkv = self.qkv(x)", "\n", "flops", "+=", "N", "*", "self", ".", "dim", "*", "3", "*", "self", ".", "dim", "\n", "# attn = (q @ k.transpose(-2, -1))", "\n", "flops", "+=", "self", ".", "num_heads", "*", "N", "*", "(", "self", ".", "dim", "//", "self", ".", "num_heads", ")", "*", "N", "\n", "#  x = (attn @ v)", "\n", "flops", "+=", "self", ".", "num_heads", "*", "N", "*", "N", "*", "(", "self", ".", "dim", "//", "self", ".", "num_heads", ")", "\n", "# x = self.proj(x)", "\n", "flops", "+=", "N", "*", "self", ".", "dim", "*", "self", ".", "dim", "\n", "return", "flops", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.SwinTransformerBlock.__init__": [[181, 231], ["torch.Module.__init__", "norm_layer", "SwinTransformer.WindowAttention", "norm_layer", "int", "SwinTransformer.Mlp", "SwinTransformer.SwinTransformerBlock.register_buffer", "min", "min", "timm.models.layers.DropPath", "torch.Identity", "torch.Identity", "torch.Identity", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "SwinTransformer.window_partition", "mask_windows.view.view.view", "attn_mask.masked_fill().masked_fill.masked_fill().masked_fill.masked_fill().masked_fill", "timm.models.layers.to_2tuple", "slice", "slice", "slice", "slice", "slice", "slice", "mask_windows.view.view.unsqueeze", "mask_windows.view.view.unsqueeze", "float", "attn_mask.masked_fill().masked_fill.masked_fill().masked_fill.masked_fill", "float"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.__init__", "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.window_partition"], ["def", "__init__", "(", "self", ",", "dim", ",", "input_resolution", ",", "num_heads", ",", "window_size", "=", "7", ",", "shift_size", "=", "0", ",", "\n", "mlp_ratio", "=", "4.", ",", "qkv_bias", "=", "True", ",", "qk_scale", "=", "None", ",", "drop", "=", "0.", ",", "attn_drop", "=", "0.", ",", "drop_path", "=", "0.", ",", "\n", "act_layer", "=", "nn", ".", "GELU", ",", "norm_layer", "=", "nn", ".", "LayerNorm", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "input_resolution", "=", "input_resolution", "\n", "self", ".", "num_heads", "=", "num_heads", "\n", "self", ".", "window_size", "=", "window_size", "\n", "self", ".", "shift_size", "=", "shift_size", "\n", "self", ".", "mlp_ratio", "=", "mlp_ratio", "\n", "if", "min", "(", "self", ".", "input_resolution", ")", "<=", "self", ".", "window_size", ":", "\n", "# if window size is larger than input resolution, we don't partition windows", "\n", "            ", "self", ".", "shift_size", "=", "0", "\n", "self", ".", "window_size", "=", "min", "(", "self", ".", "input_resolution", ")", "\n", "", "assert", "0", "<=", "self", ".", "shift_size", "<", "self", ".", "window_size", ",", "\"shift_size must in 0-window_size\"", "\n", "\n", "self", ".", "norm1", "=", "norm_layer", "(", "dim", ")", "\n", "self", ".", "attn", "=", "WindowAttention", "(", "\n", "dim", ",", "window_size", "=", "to_2tuple", "(", "self", ".", "window_size", ")", ",", "num_heads", "=", "num_heads", ",", "\n", "qkv_bias", "=", "qkv_bias", ",", "qk_scale", "=", "qk_scale", ",", "attn_drop", "=", "attn_drop", ",", "proj_drop", "=", "drop", ")", "\n", "\n", "self", ".", "drop_path", "=", "DropPath", "(", "drop_path", ")", "if", "drop_path", ">", "0.", "else", "nn", ".", "Identity", "(", ")", "\n", "self", ".", "norm2", "=", "norm_layer", "(", "dim", ")", "\n", "mlp_hidden_dim", "=", "int", "(", "dim", "*", "mlp_ratio", ")", "\n", "self", ".", "mlp", "=", "Mlp", "(", "in_features", "=", "dim", ",", "hidden_features", "=", "mlp_hidden_dim", ",", "act_layer", "=", "act_layer", ",", "drop", "=", "drop", ")", "\n", "\n", "if", "self", ".", "shift_size", ">", "0", ":", "\n", "# calculate attention mask for SW-MSA", "\n", "            ", "H", ",", "W", "=", "self", ".", "input_resolution", "\n", "img_mask", "=", "torch", ".", "zeros", "(", "(", "1", ",", "H", ",", "W", ",", "1", ")", ")", "# 1 H W 1", "\n", "h_slices", "=", "(", "slice", "(", "0", ",", "-", "self", ".", "window_size", ")", ",", "\n", "slice", "(", "-", "self", ".", "window_size", ",", "-", "self", ".", "shift_size", ")", ",", "\n", "slice", "(", "-", "self", ".", "shift_size", ",", "None", ")", ")", "\n", "w_slices", "=", "(", "slice", "(", "0", ",", "-", "self", ".", "window_size", ")", ",", "\n", "slice", "(", "-", "self", ".", "window_size", ",", "-", "self", ".", "shift_size", ")", ",", "\n", "slice", "(", "-", "self", ".", "shift_size", ",", "None", ")", ")", "\n", "cnt", "=", "0", "\n", "for", "h", "in", "h_slices", ":", "\n", "                ", "for", "w", "in", "w_slices", ":", "\n", "                    ", "img_mask", "[", ":", ",", "h", ",", "w", ",", ":", "]", "=", "cnt", "\n", "cnt", "+=", "1", "\n", "\n", "", "", "mask_windows", "=", "window_partition", "(", "img_mask", ",", "self", ".", "window_size", ")", "# nW, window_size, window_size, 1", "\n", "mask_windows", "=", "mask_windows", ".", "view", "(", "-", "1", ",", "self", ".", "window_size", "*", "self", ".", "window_size", ")", "\n", "attn_mask", "=", "mask_windows", ".", "unsqueeze", "(", "1", ")", "-", "mask_windows", ".", "unsqueeze", "(", "2", ")", "\n", "attn_mask", "=", "attn_mask", ".", "masked_fill", "(", "attn_mask", "!=", "0", ",", "float", "(", "-", "100.0", ")", ")", ".", "masked_fill", "(", "attn_mask", "==", "0", ",", "float", "(", "0.0", ")", ")", "\n", "", "else", ":", "\n", "            ", "attn_mask", "=", "None", "\n", "\n", "", "self", ".", "register_buffer", "(", "\"attn_mask\"", ",", "attn_mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.SwinTransformerBlock.forward": [[232, 270], ["SwinTransformer.SwinTransformerBlock.norm1", "torch.roll.view", "torch.roll.view", "torch.roll.view", "SwinTransformer.window_partition", "x_windows.view.view.view", "SwinTransformer.SwinTransformerBlock.attn", "attn_windows.view.view.view", "SwinTransformer.window_reverse", "torch.roll.view", "torch.roll.view", "torch.roll.view", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "SwinTransformer.SwinTransformerBlock.drop_path", "SwinTransformer.SwinTransformerBlock.drop_path", "SwinTransformer.SwinTransformerBlock.mlp", "SwinTransformer.SwinTransformerBlock.norm2"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.window_partition", "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.window_reverse"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "H", ",", "W", "=", "self", ".", "input_resolution", "\n", "B", ",", "L", ",", "C", "=", "x", ".", "shape", "\n", "assert", "L", "==", "H", "*", "W", ",", "\"input feature has wrong size\"", "\n", "\n", "shortcut", "=", "x", "\n", "x", "=", "self", ".", "norm1", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "B", ",", "H", ",", "W", ",", "C", ")", "\n", "\n", "# cyclic shift", "\n", "if", "self", ".", "shift_size", ">", "0", ":", "\n", "            ", "shifted_x", "=", "torch", ".", "roll", "(", "x", ",", "shifts", "=", "(", "-", "self", ".", "shift_size", ",", "-", "self", ".", "shift_size", ")", ",", "dims", "=", "(", "1", ",", "2", ")", ")", "\n", "", "else", ":", "\n", "            ", "shifted_x", "=", "x", "\n", "\n", "# partition windows", "\n", "", "x_windows", "=", "window_partition", "(", "shifted_x", ",", "self", ".", "window_size", ")", "# nW*B, window_size, window_size, C", "\n", "x_windows", "=", "x_windows", ".", "view", "(", "-", "1", ",", "self", ".", "window_size", "*", "self", ".", "window_size", ",", "C", ")", "# nW*B, window_size*window_size, C", "\n", "\n", "# W-MSA/SW-MSA", "\n", "attn_windows", "=", "self", ".", "attn", "(", "x_windows", ",", "mask", "=", "self", ".", "attn_mask", ")", "# nW*B, window_size*window_size, C", "\n", "\n", "# merge windows", "\n", "attn_windows", "=", "attn_windows", ".", "view", "(", "-", "1", ",", "self", ".", "window_size", ",", "self", ".", "window_size", ",", "C", ")", "\n", "shifted_x", "=", "window_reverse", "(", "attn_windows", ",", "self", ".", "window_size", ",", "H", ",", "W", ")", "# B H' W' C", "\n", "\n", "# reverse cyclic shift", "\n", "if", "self", ".", "shift_size", ">", "0", ":", "\n", "            ", "x", "=", "torch", ".", "roll", "(", "shifted_x", ",", "shifts", "=", "(", "self", ".", "shift_size", ",", "self", ".", "shift_size", ")", ",", "dims", "=", "(", "1", ",", "2", ")", ")", "\n", "", "else", ":", "\n", "            ", "x", "=", "shifted_x", "\n", "", "x", "=", "x", ".", "view", "(", "B", ",", "H", "*", "W", ",", "C", ")", "\n", "\n", "# FFN", "\n", "x", "=", "shortcut", "+", "self", ".", "drop_path", "(", "x", ")", "\n", "x", "=", "x", "+", "self", ".", "drop_path", "(", "self", ".", "mlp", "(", "self", ".", "norm2", "(", "x", ")", ")", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.SwinTransformerBlock.extra_repr": [[271, 273], ["None"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", "->", "str", ":", "\n", "        ", "return", "f\"dim={self.dim}, input_resolution={self.input_resolution}, num_heads={self.num_heads}, \"", "f\"window_size={self.window_size}, shift_size={self.shift_size}, mlp_ratio={self.mlp_ratio}\"", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.SwinTransformerBlock.flops": [[275, 288], ["SwinTransformer.SwinTransformerBlock.attn.flops"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.SwinTransformer.flops"], ["", "def", "flops", "(", "self", ")", ":", "\n", "        ", "flops", "=", "0", "\n", "H", ",", "W", "=", "self", ".", "input_resolution", "\n", "# norm1", "\n", "flops", "+=", "self", ".", "dim", "*", "H", "*", "W", "\n", "# W-MSA/SW-MSA", "\n", "nW", "=", "H", "*", "W", "/", "self", ".", "window_size", "/", "self", ".", "window_size", "\n", "flops", "+=", "nW", "*", "self", ".", "attn", ".", "flops", "(", "self", ".", "window_size", "*", "self", ".", "window_size", ")", "\n", "# mlp", "\n", "flops", "+=", "2", "*", "H", "*", "W", "*", "self", ".", "dim", "*", "self", ".", "dim", "*", "self", ".", "mlp_ratio", "\n", "# norm2", "\n", "flops", "+=", "self", ".", "dim", "*", "H", "*", "W", "\n", "return", "flops", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.PatchMerging.__init__": [[299, 305], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "norm_layer"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.__init__"], ["def", "__init__", "(", "self", ",", "input_resolution", ",", "dim", ",", "norm_layer", "=", "nn", ".", "LayerNorm", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "input_resolution", "=", "input_resolution", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "reduction", "=", "nn", ".", "Linear", "(", "4", "*", "dim", ",", "2", "*", "dim", ",", "bias", "=", "False", ")", "\n", "self", ".", "norm", "=", "norm_layer", "(", "4", "*", "dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.PatchMerging.forward": [[306, 328], ["SwinTransformer.PatchMerging.view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "SwinTransformer.PatchMerging.view", "SwinTransformer.PatchMerging.norm", "SwinTransformer.PatchMerging.reduction"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"\n        x: B, H*W, C\n        \"\"\"", "\n", "H", ",", "W", "=", "self", ".", "input_resolution", "\n", "B", ",", "L", ",", "C", "=", "x", ".", "shape", "\n", "assert", "L", "==", "H", "*", "W", ",", "\"input feature has wrong size\"", "\n", "assert", "H", "%", "2", "==", "0", "and", "W", "%", "2", "==", "0", ",", "f\"x size ({H}*{W}) are not even.\"", "\n", "\n", "x", "=", "x", ".", "view", "(", "B", ",", "H", ",", "W", ",", "C", ")", "\n", "\n", "x0", "=", "x", "[", ":", ",", "0", ":", ":", "2", ",", "0", ":", ":", "2", ",", ":", "]", "# B H/2 W/2 C", "\n", "x1", "=", "x", "[", ":", ",", "1", ":", ":", "2", ",", "0", ":", ":", "2", ",", ":", "]", "# B H/2 W/2 C", "\n", "x2", "=", "x", "[", ":", ",", "0", ":", ":", "2", ",", "1", ":", ":", "2", ",", ":", "]", "# B H/2 W/2 C", "\n", "x3", "=", "x", "[", ":", ",", "1", ":", ":", "2", ",", "1", ":", ":", "2", ",", ":", "]", "# B H/2 W/2 C", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x0", ",", "x1", ",", "x2", ",", "x3", "]", ",", "-", "1", ")", "# B H/2 W/2 4*C", "\n", "x", "=", "x", ".", "view", "(", "B", ",", "-", "1", ",", "4", "*", "C", ")", "# B H/2*W/2 4*C", "\n", "\n", "x", "=", "self", ".", "norm", "(", "x", ")", "\n", "x", "=", "self", ".", "reduction", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.PatchMerging.extra_repr": [[329, 331], ["None"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", "->", "str", ":", "\n", "        ", "return", "f\"input_resolution={self.input_resolution}, dim={self.dim}\"", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.PatchMerging.flops": [[332, 337], ["None"], "methods", ["None"], ["", "def", "flops", "(", "self", ")", ":", "\n", "        ", "H", ",", "W", "=", "self", ".", "input_resolution", "\n", "flops", "=", "H", "*", "W", "*", "self", ".", "dim", "\n", "flops", "+=", "(", "H", "//", "2", ")", "*", "(", "W", "//", "2", ")", "*", "4", "*", "self", ".", "dim", "*", "2", "*", "self", ".", "dim", "\n", "return", "flops", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.BasicLayer.__init__": [[359, 386], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "downsample", "SwinTransformer.SwinTransformerBlock", "range", "isinstance"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.__init__"], ["def", "__init__", "(", "self", ",", "dim", ",", "input_resolution", ",", "depth", ",", "num_heads", ",", "window_size", ",", "\n", "mlp_ratio", "=", "4.", ",", "qkv_bias", "=", "True", ",", "qk_scale", "=", "None", ",", "drop", "=", "0.", ",", "attn_drop", "=", "0.", ",", "\n", "drop_path", "=", "0.", ",", "norm_layer", "=", "nn", ".", "LayerNorm", ",", "downsample", "=", "None", ",", "use_checkpoint", "=", "False", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "input_resolution", "=", "input_resolution", "\n", "self", ".", "depth", "=", "depth", "\n", "self", ".", "use_checkpoint", "=", "use_checkpoint", "\n", "\n", "# build blocks", "\n", "self", ".", "blocks", "=", "nn", ".", "ModuleList", "(", "[", "\n", "SwinTransformerBlock", "(", "dim", "=", "dim", ",", "input_resolution", "=", "input_resolution", ",", "\n", "num_heads", "=", "num_heads", ",", "window_size", "=", "window_size", ",", "\n", "shift_size", "=", "0", "if", "(", "i", "%", "2", "==", "0", ")", "else", "window_size", "//", "2", ",", "\n", "mlp_ratio", "=", "mlp_ratio", ",", "\n", "qkv_bias", "=", "qkv_bias", ",", "qk_scale", "=", "qk_scale", ",", "\n", "drop", "=", "drop", ",", "attn_drop", "=", "attn_drop", ",", "\n", "drop_path", "=", "drop_path", "[", "i", "]", "if", "isinstance", "(", "drop_path", ",", "list", ")", "else", "drop_path", ",", "\n", "norm_layer", "=", "norm_layer", ")", "\n", "for", "i", "in", "range", "(", "depth", ")", "]", ")", "\n", "\n", "# patch merging layer", "\n", "if", "downsample", "is", "not", "None", ":", "\n", "            ", "self", ".", "downsample", "=", "downsample", "(", "input_resolution", ",", "dim", "=", "dim", ",", "norm_layer", "=", "norm_layer", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "downsample", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.BasicLayer.forward": [[387, 396], ["SwinTransformer.BasicLayer.downsample", "torch.checkpoint", "torch.checkpoint", "torch.checkpoint", "blk"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "for", "blk", "in", "self", ".", "blocks", ":", "\n", "            ", "if", "self", ".", "use_checkpoint", ":", "\n", "                ", "x", "=", "checkpoint", ".", "checkpoint", "(", "blk", ",", "x", ")", "\n", "", "else", ":", "\n", "                ", "x", "=", "blk", "(", "x", ")", "\n", "", "", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "x", "=", "self", ".", "downsample", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.BasicLayer.extra_repr": [[397, 399], ["None"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", "->", "str", ":", "\n", "        ", "return", "f\"dim={self.dim}, input_resolution={self.input_resolution}, depth={self.depth}\"", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.BasicLayer.flops": [[400, 407], ["blk.flops", "SwinTransformer.BasicLayer.downsample.flops"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.SwinTransformer.flops", "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.SwinTransformer.flops"], ["", "def", "flops", "(", "self", ")", ":", "\n", "        ", "flops", "=", "0", "\n", "for", "blk", "in", "self", ".", "blocks", ":", "\n", "            ", "flops", "+=", "blk", ".", "flops", "(", ")", "\n", "", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "flops", "+=", "self", ".", "downsample", ".", "flops", "(", ")", "\n", "", "return", "flops", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.PatchEmbed.__init__": [[420, 438], ["torch.Module.__init__", "timm.models.layers.to_2tuple", "timm.models.layers.to_2tuple", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "norm_layer"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.__init__"], ["def", "__init__", "(", "self", ",", "img_size", "=", "224", ",", "patch_size", "=", "4", ",", "in_chans", "=", "3", ",", "embed_dim", "=", "96", ",", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "img_size", "=", "to_2tuple", "(", "img_size", ")", "\n", "patch_size", "=", "to_2tuple", "(", "patch_size", ")", "\n", "patches_resolution", "=", "[", "img_size", "[", "0", "]", "//", "patch_size", "[", "0", "]", ",", "img_size", "[", "1", "]", "//", "patch_size", "[", "1", "]", "]", "\n", "self", ".", "img_size", "=", "img_size", "\n", "self", ".", "patch_size", "=", "patch_size", "\n", "self", ".", "patches_resolution", "=", "patches_resolution", "\n", "self", ".", "num_patches", "=", "patches_resolution", "[", "0", "]", "*", "patches_resolution", "[", "1", "]", "\n", "\n", "self", ".", "in_chans", "=", "in_chans", "\n", "self", ".", "embed_dim", "=", "embed_dim", "\n", "\n", "self", ".", "proj", "=", "nn", ".", "Conv2d", "(", "in_chans", ",", "embed_dim", ",", "kernel_size", "=", "patch_size", ",", "stride", "=", "patch_size", ")", "\n", "if", "norm_layer", "is", "not", "None", ":", "\n", "            ", "self", ".", "norm", "=", "norm_layer", "(", "embed_dim", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "norm", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.PatchEmbed.forward": [[439, 448], ["SwinTransformer.PatchEmbed.proj().flatten().transpose", "SwinTransformer.PatchEmbed.norm", "SwinTransformer.PatchEmbed.proj().flatten", "SwinTransformer.PatchEmbed.proj"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "B", ",", "C", ",", "H", ",", "W", "=", "x", ".", "shape", "\n", "# FIXME look at relaxing size constraints", "\n", "assert", "H", "==", "self", ".", "img_size", "[", "0", "]", "and", "W", "==", "self", ".", "img_size", "[", "1", "]", ",", "f\"Input image size ({H}*{W}) doesn't match model ({self.img_size[0]}*{self.img_size[1]}).\"", "\n", "x", "=", "self", ".", "proj", "(", "x", ")", ".", "flatten", "(", "2", ")", ".", "transpose", "(", "1", ",", "2", ")", "# B Ph*Pw C", "\n", "if", "self", ".", "norm", "is", "not", "None", ":", "\n", "            ", "x", "=", "self", ".", "norm", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.PatchEmbed.flops": [[449, 455], ["None"], "methods", ["None"], ["", "def", "flops", "(", "self", ")", ":", "\n", "        ", "Ho", ",", "Wo", "=", "self", ".", "patches_resolution", "\n", "flops", "=", "Ho", "*", "Wo", "*", "self", ".", "embed_dim", "*", "self", ".", "in_chans", "*", "(", "self", ".", "patch_size", "[", "0", "]", "*", "self", ".", "patch_size", "[", "1", "]", ")", "\n", "if", "self", ".", "norm", "is", "not", "None", ":", "\n", "            ", "flops", "+=", "Ho", "*", "Wo", "*", "self", ".", "embed_dim", "\n", "", "return", "flops", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.SwinTransformer.__init__": [[483, 540], ["torch.Module.__init__", "len", "int", "SwinTransformer.PatchEmbed", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "norm_layer", "torch.AdaptiveAvgPool1d", "torch.AdaptiveAvgPool1d", "torch.AdaptiveAvgPool1d", "SwinTransformer.SwinTransformer.apply", "torch.Parameter", "torch.Parameter", "torch.Parameter", "timm.models.layers.trunc_normal_", "x.item", "SwinTransformer.BasicLayer", "SwinTransformer.SwinTransformer.layers.append", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Identity", "torch.Identity", "torch.Identity", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "sum", "int", "sum", "sum"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.__init__"], ["def", "__init__", "(", "self", ",", "img_size", "=", "224", ",", "patch_size", "=", "4", ",", "in_chans", "=", "3", ",", "num_classes", "=", "1000", ",", "\n", "embed_dim", "=", "96", ",", "depths", "=", "[", "2", ",", "2", ",", "6", ",", "2", "]", ",", "num_heads", "=", "[", "3", ",", "6", ",", "12", ",", "24", "]", ",", "\n", "window_size", "=", "7", ",", "mlp_ratio", "=", "4.", ",", "qkv_bias", "=", "True", ",", "qk_scale", "=", "None", ",", "\n", "drop_rate", "=", "0.", ",", "attn_drop_rate", "=", "0.", ",", "drop_path_rate", "=", "0.1", ",", "\n", "norm_layer", "=", "nn", ".", "LayerNorm", ",", "ape", "=", "False", ",", "patch_norm", "=", "True", ",", "\n", "use_checkpoint", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "num_layers", "=", "len", "(", "depths", ")", "\n", "self", ".", "embed_dim", "=", "embed_dim", "\n", "self", ".", "ape", "=", "ape", "\n", "self", ".", "patch_norm", "=", "patch_norm", "\n", "self", ".", "num_features", "=", "int", "(", "embed_dim", "*", "2", "**", "(", "self", ".", "num_layers", "-", "1", ")", ")", "\n", "self", ".", "mlp_ratio", "=", "mlp_ratio", "\n", "\n", "# split image into non-overlapping patches", "\n", "self", ".", "patch_embed", "=", "PatchEmbed", "(", "\n", "img_size", "=", "img_size", ",", "patch_size", "=", "patch_size", ",", "in_chans", "=", "in_chans", ",", "embed_dim", "=", "embed_dim", ",", "\n", "norm_layer", "=", "norm_layer", "if", "self", ".", "patch_norm", "else", "None", ")", "\n", "num_patches", "=", "self", ".", "patch_embed", ".", "num_patches", "\n", "patches_resolution", "=", "self", ".", "patch_embed", ".", "patches_resolution", "\n", "self", ".", "patches_resolution", "=", "patches_resolution", "\n", "\n", "# absolute position embedding", "\n", "if", "self", ".", "ape", ":", "\n", "            ", "self", ".", "absolute_pos_embed", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "num_patches", ",", "embed_dim", ")", ")", "\n", "trunc_normal_", "(", "self", ".", "absolute_pos_embed", ",", "std", "=", ".02", ")", "\n", "\n", "", "self", ".", "pos_drop", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_rate", ")", "\n", "\n", "# stochastic depth", "\n", "dpr", "=", "[", "x", ".", "item", "(", ")", "for", "x", "in", "torch", ".", "linspace", "(", "0", ",", "drop_path_rate", ",", "sum", "(", "depths", ")", ")", "]", "# stochastic depth decay rule", "\n", "\n", "# build layers", "\n", "self", ".", "layers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "i_layer", "in", "range", "(", "self", ".", "num_layers", ")", ":", "\n", "            ", "layer", "=", "BasicLayer", "(", "dim", "=", "int", "(", "embed_dim", "*", "2", "**", "i_layer", ")", ",", "\n", "input_resolution", "=", "(", "patches_resolution", "[", "0", "]", "//", "(", "2", "**", "i_layer", ")", ",", "\n", "patches_resolution", "[", "1", "]", "//", "(", "2", "**", "i_layer", ")", ")", ",", "\n", "depth", "=", "depths", "[", "i_layer", "]", ",", "\n", "num_heads", "=", "num_heads", "[", "i_layer", "]", ",", "\n", "window_size", "=", "window_size", ",", "\n", "mlp_ratio", "=", "self", ".", "mlp_ratio", ",", "\n", "qkv_bias", "=", "qkv_bias", ",", "qk_scale", "=", "qk_scale", ",", "\n", "drop", "=", "drop_rate", ",", "attn_drop", "=", "attn_drop_rate", ",", "\n", "drop_path", "=", "dpr", "[", "sum", "(", "depths", "[", ":", "i_layer", "]", ")", ":", "sum", "(", "depths", "[", ":", "i_layer", "+", "1", "]", ")", "]", ",", "\n", "norm_layer", "=", "norm_layer", ",", "\n", "downsample", "=", "PatchMerging", "if", "(", "i_layer", "<", "self", ".", "num_layers", "-", "1", ")", "else", "None", ",", "\n", "use_checkpoint", "=", "use_checkpoint", ")", "\n", "self", ".", "layers", ".", "append", "(", "layer", ")", "\n", "\n", "", "self", ".", "norm", "=", "norm_layer", "(", "self", ".", "num_features", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool1d", "(", "1", ")", "\n", "self", ".", "head", "=", "nn", ".", "Linear", "(", "self", ".", "num_features", ",", "num_classes", ")", "if", "num_classes", ">", "0", "else", "nn", ".", "Identity", "(", ")", "\n", "\n", "self", ".", "apply", "(", "self", ".", "_init_weights", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.SwinTransformer._init_weights": [[541, 549], ["isinstance", "timm.models.layers.trunc_normal_", "isinstance", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "def", "_init_weights", "(", "self", ",", "m", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "            ", "trunc_normal_", "(", "m", ".", "weight", ",", "std", "=", ".02", ")", "\n", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", "and", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "LayerNorm", ")", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.SwinTransformer.no_weight_decay": [[550, 553], ["None"], "methods", ["None"], ["", "", "@", "torch", ".", "jit", ".", "ignore", "\n", "def", "no_weight_decay", "(", "self", ")", ":", "\n", "        ", "return", "{", "'absolute_pos_embed'", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.SwinTransformer.no_weight_decay_keywords": [[554, 557], ["None"], "methods", ["None"], ["", "@", "torch", ".", "jit", ".", "ignore", "\n", "def", "no_weight_decay_keywords", "(", "self", ")", ":", "\n", "        ", "return", "{", "'relative_position_bias_table'", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.SwinTransformer.stem": [[558, 571], ["SwinTransformer.SwinTransformer.patch_embed", "SwinTransformer.SwinTransformer.pos_drop"], "methods", ["None"], ["", "def", "stem", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "patch_embed", "(", "x", ")", "\n", "if", "self", ".", "ape", ":", "\n", "            ", "x", "=", "x", "+", "self", ".", "absolute_pos_embed", "\n", "", "x", "=", "self", ".", "pos_drop", "(", "x", ")", "\n", "\n", "# for layer in self.layers:", "\n", "#     x = layer(x)", "\n", "\n", "# x = self.norm(x)  # B L C", "\n", "# x = self.avgpool(x.transpose(1, 2))  # B C 1", "\n", "# x = torch.flatten(x, 1)", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.SwinTransformer.forward": [[572, 581], ["SwinTransformer.SwinTransformer.stem", "SwinTransformer.SwinTransformer.norm", "SwinTransformer.SwinTransformer.avgpool", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "SwinTransformer.SwinTransformer.head", "layer", "layer.transpose"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.SwinTransformer.stem"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "stem", "(", "x", ")", "\n", "for", "layer", "in", "self", ".", "layers", ":", "\n", "            ", "x", "=", "layer", "(", "x", ")", "\n", "", "x", "=", "self", ".", "norm", "(", "x", ")", "# B L C", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ".", "transpose", "(", "1", ",", "2", ")", ")", "# B C 1", "\n", "x", "=", "torch", ".", "flatten", "(", "x", ",", "1", ")", "\n", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.SwinTransformer.flops": [[582, 590], ["SwinTransformer.SwinTransformer.patch_embed.flops", "enumerate", "layer.flops"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.SwinTransformer.flops", "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.SwinTransformer.flops"], ["", "def", "flops", "(", "self", ")", ":", "\n", "        ", "flops", "=", "0", "\n", "flops", "+=", "self", ".", "patch_embed", ".", "flops", "(", ")", "\n", "for", "i", ",", "layer", "in", "enumerate", "(", "self", ".", "layers", ")", ":", "\n", "            ", "flops", "+=", "layer", ".", "flops", "(", ")", "\n", "", "flops", "+=", "self", ".", "num_features", "*", "self", ".", "patches_resolution", "[", "0", "]", "*", "self", ".", "patches_resolution", "[", "1", "]", "//", "(", "2", "**", "self", ".", "num_layers", ")", "\n", "flops", "+=", "self", ".", "num_features", "*", "self", ".", "num_classes", "\n", "return", "flops", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.window_partition": [[32, 45], ["x.view.view", "x.view.permute().contiguous().view", "x.view.permute().contiguous", "x.view.permute"], "function", ["None"], ["", "", "def", "window_partition", "(", "x", ",", "window_size", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        x: (B, H, W, C)\n        window_size (int): window size\n\n    Returns:\n        windows: (num_windows*B, window_size, window_size, C)\n    \"\"\"", "\n", "B", ",", "H", ",", "W", ",", "C", "=", "x", ".", "shape", "\n", "x", "=", "x", ".", "view", "(", "B", ",", "H", "//", "window_size", ",", "window_size", ",", "W", "//", "window_size", ",", "window_size", ",", "C", ")", "\n", "windows", "=", "x", ".", "permute", "(", "0", ",", "1", ",", "3", ",", "2", ",", "4", ",", "5", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "window_size", ",", "window_size", ",", "C", ")", "\n", "return", "windows", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.window_reverse": [[47, 62], ["int", "windows.view", "x.permute().contiguous().view.permute().contiguous().view", "x.permute().contiguous().view.permute().contiguous", "x.permute().contiguous().view.permute"], "function", ["None"], ["", "def", "window_reverse", "(", "windows", ",", "window_size", ",", "H", ",", "W", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        windows: (num_windows*B, window_size, window_size, C)\n        window_size (int): Window size\n        H (int): Height of image\n        W (int): Width of image\n\n    Returns:\n        x: (B, H, W, C)\n    \"\"\"", "\n", "B", "=", "int", "(", "windows", ".", "shape", "[", "0", "]", "/", "(", "H", "*", "W", "/", "window_size", "/", "window_size", ")", ")", "\n", "x", "=", "windows", ".", "view", "(", "B", ",", "H", "//", "window_size", ",", "W", "//", "window_size", ",", "window_size", ",", "window_size", ",", "-", "1", ")", "\n", "x", "=", "x", ".", "permute", "(", "0", ",", "1", ",", "3", ",", "2", ",", "4", ",", "5", ")", ".", "contiguous", "(", ")", ".", "view", "(", "B", ",", "H", ",", "W", ",", "-", "1", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.SwinB": [[591, 597], ["SwinTransformer.SwinTransformer", "SwinTransformer.load_state_dict", "torch.load", "torch.load", "torch.load"], "function", ["None"], ["", "", "def", "SwinB", "(", "pretrained", "=", "True", ")", ":", "\n", "    ", "model", "=", "SwinTransformer", "(", "img_size", "=", "384", ",", "embed_dim", "=", "128", ",", "depths", "=", "[", "2", ",", "2", ",", "18", ",", "2", "]", ",", "num_heads", "=", "[", "4", ",", "8", ",", "16", ",", "32", "]", ",", "window_size", "=", "12", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "'data/backbone_ckpt/swin_base_patch4_window12_384.pth'", ")", "[", "'model'", "]", ")", "\n", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.backbones.SwinTransformer.SwinB_224": [[598, 604], ["SwinTransformer.SwinTransformer", "SwinTransformer.load_state_dict", "torch.load", "torch.load", "torch.load"], "function", ["None"], ["", "def", "SwinB_224", "(", "pretrained", "=", "True", ")", ":", "\n", "    ", "model", "=", "SwinTransformer", "(", "img_size", "=", "224", ",", "embed_dim", "=", "128", ",", "depths", "=", "[", "2", ",", "2", ",", "18", ",", "2", "]", ",", "num_heads", "=", "[", "4", ",", "8", ",", "16", ",", "32", "]", ",", "window_size", "=", "7", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "'data/backbone_ckpt/swin_base_patch4_window7_224_22kto1k.pth'", ")", "[", "'model'", "]", ")", "\n", "\n", "", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.custom_transforms.resize.__init__": [[11, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "size", ")", ":", "\n", "        ", "self", ".", "size", "=", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.custom_transforms.resize.__call__": [[14, 23], ["sample.keys", "sample[].resize", "sample.keys", "sample[].resize", "sample.keys", "sample[].resize"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "sample", ")", ":", "\n", "        ", "if", "'image'", "in", "sample", ".", "keys", "(", ")", ":", "\n", "            ", "sample", "[", "'image'", "]", "=", "sample", "[", "'image'", "]", ".", "resize", "(", "self", ".", "size", ",", "Image", ".", "BILINEAR", ")", "\n", "", "if", "'gt'", "in", "sample", ".", "keys", "(", ")", ":", "\n", "            ", "sample", "[", "'gt'", "]", "=", "sample", "[", "'gt'", "]", ".", "resize", "(", "self", ".", "size", ",", "Image", ".", "BILINEAR", ")", "\n", "", "if", "'mask'", "in", "sample", ".", "keys", "(", ")", ":", "\n", "            ", "sample", "[", "'mask'", "]", "=", "sample", "[", "'mask'", "]", ".", "resize", "(", "self", ".", "size", ",", "Image", ".", "BILINEAR", ")", "\n", "\n", "", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.custom_transforms.random_scale_crop.__init__": [[25, 27], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "range", "=", "[", "0.75", ",", "1.25", "]", ")", ":", "\n", "        ", "self", ".", "range", "=", "range", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.custom_transforms.random_scale_crop.__call__": [[28, 44], ["numpy.random.random", "sample.keys", "numpy.random.random", "tuple", "sample[].resize", "sample[].crop", "numpy.array"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "sample", ")", ":", "\n", "        ", "scale", "=", "np", ".", "random", ".", "random", "(", ")", "*", "(", "self", ".", "range", "[", "1", "]", "-", "self", ".", "range", "[", "0", "]", ")", "+", "self", ".", "range", "[", "0", "]", "\n", "if", "np", ".", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "            ", "for", "key", "in", "sample", ".", "keys", "(", ")", ":", "\n", "                ", "if", "key", "in", "[", "'image'", ",", "'gt'", ",", "'contour'", "]", ":", "\n", "                    ", "base_size", "=", "sample", "[", "key", "]", ".", "size", "\n", "\n", "scale_size", "=", "tuple", "(", "(", "np", ".", "array", "(", "base_size", ")", "*", "scale", ")", ".", "round", "(", ")", ".", "astype", "(", "int", ")", ")", "\n", "sample", "[", "key", "]", "=", "sample", "[", "key", "]", ".", "resize", "(", "scale_size", ")", "\n", "\n", "sample", "[", "key", "]", "=", "sample", "[", "key", "]", ".", "crop", "(", "(", "(", "sample", "[", "key", "]", ".", "size", "[", "0", "]", "-", "base_size", "[", "0", "]", ")", "//", "2", ",", "\n", "(", "sample", "[", "key", "]", ".", "size", "[", "1", "]", "-", "base_size", "[", "1", "]", ")", "//", "2", ",", "\n", "(", "sample", "[", "key", "]", ".", "size", "[", "0", "]", "+", "base_size", "[", "0", "]", ")", "//", "2", ",", "\n", "(", "sample", "[", "key", "]", ".", "size", "[", "1", "]", "+", "base_size", "[", "1", "]", ")", "//", "2", ")", ")", "\n", "\n", "", "", "", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.custom_transforms.random_flip.__init__": [[46, 49], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "lr", "=", "True", ",", "ud", "=", "True", ")", ":", "\n", "        ", "self", ".", "lr", "=", "lr", "\n", "self", ".", "ud", "=", "ud", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.custom_transforms.random_flip.__call__": [[50, 64], ["sample.keys", "numpy.random.random", "numpy.random.random", "numpy.array", "PIL.Image.fromarray", "numpy.fliplr", "numpy.flipud"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "sample", ")", ":", "\n", "        ", "lr", "=", "np", ".", "random", ".", "random", "(", ")", "<", "0.5", "and", "self", ".", "lr", "is", "True", "\n", "ud", "=", "np", ".", "random", ".", "random", "(", ")", "<", "0.5", "and", "self", ".", "ud", "is", "True", "\n", "\n", "for", "key", "in", "sample", ".", "keys", "(", ")", ":", "\n", "            ", "if", "key", "in", "[", "'image'", ",", "'gt'", ",", "'contour'", "]", ":", "\n", "                ", "sample", "[", "key", "]", "=", "np", ".", "array", "(", "sample", "[", "key", "]", ")", "\n", "if", "lr", ":", "\n", "                    ", "sample", "[", "key", "]", "=", "np", ".", "fliplr", "(", "sample", "[", "key", "]", ")", "\n", "", "if", "ud", ":", "\n", "                    ", "sample", "[", "key", "]", "=", "np", ".", "flipud", "(", "sample", "[", "key", "]", ")", "\n", "", "sample", "[", "key", "]", "=", "Image", ".", "fromarray", "(", "sample", "[", "key", "]", ")", "\n", "\n", "", "", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.custom_transforms.random_rotate.__init__": [[66, 69], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "range", "=", "[", "0", ",", "360", "]", ",", "interval", "=", "1", ")", ":", "\n", "        ", "self", ".", "range", "=", "range", "\n", "self", ".", "interval", "=", "interval", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.custom_transforms.random_rotate.__call__": [[70, 87], ["numpy.random.random", "sample.keys", "numpy.random.randint", "sample[].rotate", "sample[].crop"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "sample", ")", ":", "\n", "        ", "rot", "=", "(", "np", ".", "random", ".", "randint", "(", "*", "self", ".", "range", ")", "//", "self", ".", "interval", ")", "*", "self", ".", "interval", "\n", "rot", "=", "rot", "+", "360", "if", "rot", "<", "0", "else", "rot", "\n", "\n", "if", "np", ".", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "            ", "for", "key", "in", "sample", ".", "keys", "(", ")", ":", "\n", "                ", "if", "key", "in", "[", "'image'", ",", "'gt'", ",", "'contour'", "]", ":", "\n", "                    ", "base_size", "=", "sample", "[", "key", "]", ".", "size", "\n", "\n", "sample", "[", "key", "]", "=", "sample", "[", "key", "]", ".", "rotate", "(", "rot", ",", "expand", "=", "True", ")", "\n", "\n", "sample", "[", "key", "]", "=", "sample", "[", "key", "]", ".", "crop", "(", "(", "(", "sample", "[", "key", "]", ".", "size", "[", "0", "]", "-", "base_size", "[", "0", "]", ")", "//", "2", ",", "\n", "(", "sample", "[", "key", "]", ".", "size", "[", "1", "]", "-", "base_size", "[", "1", "]", ")", "//", "2", ",", "\n", "(", "sample", "[", "key", "]", ".", "size", "[", "0", "]", "+", "base_size", "[", "0", "]", ")", "//", "2", ",", "\n", "(", "sample", "[", "key", "]", ".", "size", "[", "1", "]", "+", "base_size", "[", "1", "]", ")", "//", "2", ")", ")", "\n", "\n", "", "", "", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.custom_transforms.random_image_enhance.__init__": [[89, 97], ["custom_transforms.random_image_enhance.enhance_method.append", "custom_transforms.random_image_enhance.enhance_method.append", "custom_transforms.random_image_enhance.enhance_method.append"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "methods", "=", "[", "'contrast'", ",", "'brightness'", ",", "'sharpness'", "]", ")", ":", "\n", "        ", "self", ".", "enhance_method", "=", "[", "]", "\n", "if", "'contrast'", "in", "methods", ":", "\n", "            ", "self", ".", "enhance_method", ".", "append", "(", "ImageEnhance", ".", "Contrast", ")", "\n", "", "if", "'brightness'", "in", "methods", ":", "\n", "            ", "self", ".", "enhance_method", ".", "append", "(", "ImageEnhance", ".", "Brightness", ")", "\n", "", "if", "'sharpness'", "in", "methods", ":", "\n", "            ", "self", ".", "enhance_method", ".", "append", "(", "ImageEnhance", ".", "Sharpness", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.custom_transforms.random_image_enhance.__call__": [[98, 110], ["numpy.random.shuffle", "numpy.random.random", "method", "float", "method.enhance", "numpy.random.random"], "methods", ["None"], ["", "", "def", "__call__", "(", "self", ",", "sample", ")", ":", "\n", "        ", "image", "=", "sample", "[", "'image'", "]", "\n", "np", ".", "random", ".", "shuffle", "(", "self", ".", "enhance_method", ")", "\n", "\n", "for", "method", "in", "self", ".", "enhance_method", ":", "\n", "            ", "if", "np", ".", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "                ", "enhancer", "=", "method", "(", "image", ")", "\n", "factor", "=", "float", "(", "1", "+", "np", ".", "random", ".", "random", "(", ")", "/", "10", ")", "\n", "image", "=", "enhancer", ".", "enhance", "(", "factor", ")", "\n", "", "", "sample", "[", "'image'", "]", "=", "image", "\n", "\n", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.custom_transforms.random_dilation_erosion.__init__": [[112, 114], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "kernel_range", ")", ":", "\n", "        ", "self", ".", "kernel_range", "=", "kernel_range", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.custom_transforms.random_dilation_erosion.__call__": [[115, 129], ["numpy.array", "numpy.random.random", "cv2.getStructuringElement", "PIL.Image.fromarray", "cv2.dilate", "cv2.erode", "numpy.random.randint"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "sample", ")", ":", "\n", "        ", "gt", "=", "sample", "[", "'gt'", "]", "\n", "gt", "=", "np", ".", "array", "(", "gt", ")", "\n", "key", "=", "np", ".", "random", ".", "random", "(", ")", "\n", "# kernel = np.ones(tuple([np.random.randint(*self.kernel_range)]) * 2, dtype=np.uint8)", "\n", "kernel", "=", "cv2", ".", "getStructuringElement", "(", "cv2", ".", "MORPH_ELLIPSE", ",", "(", "np", ".", "random", ".", "randint", "(", "*", "self", ".", "kernel_range", ")", ",", ")", "*", "2", ")", "\n", "if", "key", "<", "1", "/", "3", ":", "\n", "            ", "gt", "=", "cv2", ".", "dilate", "(", "gt", ",", "kernel", ")", "\n", "", "elif", "1", "/", "3", "<=", "key", "<", "2", "/", "3", ":", "\n", "            ", "gt", "=", "cv2", ".", "erode", "(", "gt", ",", "kernel", ")", "\n", "\n", "", "sample", "[", "'gt'", "]", "=", "Image", ".", "fromarray", "(", "gt", ")", "\n", "\n", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.custom_transforms.random_gaussian_blur.__init__": [[131, 133], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.custom_transforms.random_gaussian_blur.__call__": [[134, 141], ["numpy.random.random", "image.filter.filter.filter", "PIL.ImageFilter.GaussianBlur", "numpy.random.random"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "sample", ")", ":", "\n", "        ", "image", "=", "sample", "[", "'image'", "]", "\n", "if", "np", ".", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "            ", "image", "=", "image", ".", "filter", "(", "ImageFilter", ".", "GaussianBlur", "(", "radius", "=", "np", ".", "random", ".", "random", "(", ")", ")", ")", "\n", "", "sample", "[", "'image'", "]", "=", "image", "\n", "\n", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.custom_transforms.tonumpy.__init__": [[143, 145], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.custom_transforms.tonumpy.__call__": [[146, 153], ["numpy.array", "numpy.array"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "sample", ")", ":", "\n", "        ", "image", ",", "gt", "=", "sample", "[", "'image'", "]", ",", "sample", "[", "'gt'", "]", "\n", "\n", "sample", "[", "'image'", "]", "=", "np", ".", "array", "(", "image", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "sample", "[", "'gt'", "]", "=", "np", ".", "array", "(", "gt", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.custom_transforms.normalize.__init__": [[155, 158], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "mean", ",", "std", ")", ":", "\n", "        ", "self", ".", "mean", "=", "mean", "\n", "self", ".", "std", "=", "std", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.custom_transforms.normalize.__call__": [[159, 170], ["None"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "sample", ")", ":", "\n", "        ", "image", ",", "gt", "=", "sample", "[", "'image'", "]", ",", "sample", "[", "'gt'", "]", "\n", "image", "/=", "255", "\n", "image", "-=", "self", ".", "mean", "\n", "image", "/=", "self", ".", "std", "\n", "\n", "gt", "/=", "255", "\n", "sample", "[", "'image'", "]", "=", "image", "\n", "sample", "[", "'gt'", "]", "=", "gt", "\n", "\n", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.custom_transforms.totensor.__init__": [[172, 174], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.custom_transforms.totensor.__call__": [[175, 188], ["torch.from_numpy().float.transpose", "torch.from_numpy().float.transpose", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "gt.unsqueeze.unsqueeze.unsqueeze", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "sample", ")", ":", "\n", "        ", "image", ",", "gt", "=", "sample", "[", "'image'", "]", ",", "sample", "[", "'gt'", "]", "\n", "\n", "image", "=", "image", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "image", "=", "torch", ".", "from_numpy", "(", "image", ")", ".", "float", "(", ")", "\n", "\n", "gt", "=", "torch", ".", "from_numpy", "(", "gt", ")", "\n", "gt", "=", "gt", ".", "unsqueeze", "(", "dim", "=", "0", ")", "\n", "\n", "sample", "[", "'image'", "]", "=", "image", "\n", "sample", "[", "'gt'", "]", "=", "gt", "\n", "\n", "return", "sample", "\n", "", "", ""]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.eval_functions.Object": [[5, 11], ["numpy.mean", "numpy.std", "numpy.finfo"], "function", ["None"], ["def", "Object", "(", "pred", ",", "gt", ")", ":", "\n", "    ", "x", "=", "np", ".", "mean", "(", "pred", "[", "gt", "==", "1", "]", ")", "\n", "sigma_x", "=", "np", ".", "std", "(", "pred", "[", "gt", "==", "1", "]", ")", "\n", "score", "=", "2.0", "*", "x", "/", "(", "x", "**", "2", "+", "1", "+", "sigma_x", "+", "np", ".", "finfo", "(", "np", ".", "float64", ")", ".", "eps", ")", "\n", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.eval_functions.S_Object": [[12, 25], ["pred.copy", "eval_functions.Object", "eval_functions.Object", "numpy.mean", "pred.copy"], "function", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.eval_functions.Object", "home.repos.pwc.inspect_result.plemeri_UACANet.utils.eval_functions.Object"], ["", "def", "S_Object", "(", "pred", ",", "gt", ")", ":", "\n", "    ", "pred_fg", "=", "pred", ".", "copy", "(", ")", "\n", "pred_fg", "[", "gt", "!=", "1", "]", "=", "0.0", "\n", "O_fg", "=", "Object", "(", "pred_fg", ",", "gt", ")", "\n", "\n", "pred_bg", "=", "(", "1", "-", "pred", ".", "copy", "(", ")", ")", "\n", "pred_bg", "[", "gt", "==", "1", "]", "=", "0.0", "\n", "O_bg", "=", "Object", "(", "pred_bg", ",", "1", "-", "gt", ")", "\n", "\n", "u", "=", "np", ".", "mean", "(", "gt", ")", "\n", "Q", "=", "u", "*", "O_fg", "+", "(", "1", "-", "u", ")", "*", "O_bg", "\n", "\n", "return", "Q", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.eval_functions.centroid": [[26, 33], ["numpy.sum", "numpy.where", "int", "int", "numpy.mean().round", "numpy.mean().round", "numpy.mean", "numpy.mean"], "function", ["None"], ["", "def", "centroid", "(", "gt", ")", ":", "\n", "    ", "if", "np", ".", "sum", "(", "gt", ")", "==", "0", ":", "\n", "        ", "return", "gt", ".", "shape", "[", "0", "]", "//", "2", ",", "gt", ".", "shape", "[", "1", "]", "//", "2", "\n", "\n", "", "else", ":", "\n", "        ", "x", ",", "y", "=", "np", ".", "where", "(", "gt", "==", "1", ")", "\n", "return", "int", "(", "np", ".", "mean", "(", "x", ")", ".", "round", "(", ")", ")", ",", "int", "(", "np", ".", "mean", "(", "y", ")", ".", "round", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.eval_functions.divide": [[34, 46], ["None"], "function", ["None"], ["", "", "def", "divide", "(", "gt", ",", "x", ",", "y", ")", ":", "\n", "    ", "LT", "=", "gt", "[", ":", "x", ",", ":", "y", "]", "\n", "RT", "=", "gt", "[", "x", ":", ",", ":", "y", "]", "\n", "LB", "=", "gt", "[", ":", "x", ",", "y", ":", "]", "\n", "RB", "=", "gt", "[", "x", ":", ",", "y", ":", "]", "\n", "\n", "w1", "=", "LT", ".", "size", "/", "gt", ".", "size", "\n", "w2", "=", "RT", ".", "size", "/", "gt", ".", "size", "\n", "w3", "=", "LB", ".", "size", "/", "gt", ".", "size", "\n", "w4", "=", "RB", ".", "size", "/", "gt", ".", "size", "\n", "\n", "return", "LT", ",", "RT", ",", "LB", ",", "RB", ",", "w1", ",", "w2", ",", "w3", ",", "w4", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.eval_functions.ssim": [[47, 68], ["numpy.mean", "numpy.mean", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.finfo", "numpy.finfo", "numpy.finfo", "numpy.finfo"], "function", ["None"], ["", "def", "ssim", "(", "pred", ",", "gt", ")", ":", "\n", "    ", "x", "=", "np", ".", "mean", "(", "pred", ")", "\n", "y", "=", "np", ".", "mean", "(", "gt", ")", "\n", "N", "=", "pred", ".", "size", "\n", "\n", "sigma_x2", "=", "np", ".", "sum", "(", "(", "pred", "-", "x", ")", "**", "2", "/", "(", "N", "-", "1", "+", "np", ".", "finfo", "(", "np", ".", "float64", ")", ".", "eps", ")", ")", "\n", "sigma_y2", "=", "np", ".", "sum", "(", "(", "gt", "-", "y", ")", "**", "2", "/", "(", "N", "-", "1", "+", "np", ".", "finfo", "(", "np", ".", "float64", ")", ".", "eps", ")", ")", "\n", "\n", "sigma_xy", "=", "np", ".", "sum", "(", "(", "pred", "-", "x", ")", "*", "(", "gt", "-", "y", ")", "/", "(", "N", "-", "1", "+", "np", ".", "finfo", "(", "np", ".", "float64", ")", ".", "eps", ")", ")", "\n", "\n", "alpha", "=", "4", "*", "x", "*", "y", "*", "sigma_xy", "\n", "beta", "=", "(", "x", "**", "2", "+", "y", "**", "2", ")", "*", "(", "sigma_x2", "+", "sigma_y2", ")", "\n", "\n", "if", "alpha", "!=", "0", ":", "\n", "        ", "Q", "=", "alpha", "/", "(", "beta", "+", "np", ".", "finfo", "(", "np", ".", "float64", ")", ".", "eps", ")", "\n", "", "elif", "alpha", "==", "0", "and", "beta", "==", "0", ":", "\n", "        ", "Q", "=", "1", "\n", "", "else", ":", "\n", "        ", "Q", "=", "0", "\n", "\n", "", "return", "Q", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.eval_functions.S_Region": [[69, 82], ["eval_functions.centroid", "eval_functions.divide", "eval_functions.divide", "eval_functions.ssim", "eval_functions.ssim", "eval_functions.ssim", "eval_functions.ssim"], "function", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.eval_functions.centroid", "home.repos.pwc.inspect_result.plemeri_UACANet.utils.eval_functions.divide", "home.repos.pwc.inspect_result.plemeri_UACANet.utils.eval_functions.divide", "home.repos.pwc.inspect_result.plemeri_UACANet.utils.eval_functions.ssim", "home.repos.pwc.inspect_result.plemeri_UACANet.utils.eval_functions.ssim", "home.repos.pwc.inspect_result.plemeri_UACANet.utils.eval_functions.ssim", "home.repos.pwc.inspect_result.plemeri_UACANet.utils.eval_functions.ssim"], ["", "def", "S_Region", "(", "pred", ",", "gt", ")", ":", "\n", "    ", "x", ",", "y", "=", "centroid", "(", "gt", ")", "\n", "gt1", ",", "gt2", ",", "gt3", ",", "gt4", ",", "w1", ",", "w2", ",", "w3", ",", "w4", "=", "divide", "(", "gt", ",", "x", ",", "y", ")", "\n", "pred1", ",", "pred2", ",", "pred3", ",", "pred4", ",", "_", ",", "_", ",", "_", ",", "_", "=", "divide", "(", "pred", ",", "x", ",", "y", ")", "\n", "\n", "Q1", "=", "ssim", "(", "pred1", ",", "gt1", ")", "\n", "Q2", "=", "ssim", "(", "pred2", ",", "gt2", ")", "\n", "Q3", "=", "ssim", "(", "pred3", ",", "gt3", ")", "\n", "Q4", "=", "ssim", "(", "pred4", ",", "gt4", ")", "\n", "\n", "Q", "=", "Q1", "*", "w1", "+", "Q2", "*", "w2", "+", "Q3", "*", "w3", "+", "Q4", "*", "w4", "\n", "\n", "return", "Q", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.eval_functions.StructureMeasure": [[83, 99], ["numpy.mean", "numpy.mean", "numpy.mean", "eval_functions.S_Object", "eval_functions.S_Region"], "function", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.eval_functions.S_Object", "home.repos.pwc.inspect_result.plemeri_UACANet.utils.eval_functions.S_Region"], ["", "def", "StructureMeasure", "(", "pred", ",", "gt", ")", ":", "\n", "    ", "y", "=", "np", ".", "mean", "(", "gt", ")", "\n", "\n", "if", "y", "==", "0", ":", "\n", "        ", "x", "=", "np", ".", "mean", "(", "pred", ")", "\n", "Q", "=", "1", "-", "x", "\n", "", "elif", "y", "==", "1", ":", "\n", "        ", "x", "=", "np", ".", "mean", "(", "pred", ")", "\n", "Q", "=", "x", "\n", "", "else", ":", "\n", "        ", "alpha", "=", "0.5", "\n", "Q", "=", "alpha", "*", "S_Object", "(", "pred", ",", "gt", ")", "+", "(", "1", "-", "alpha", ")", "*", "S_Region", "(", "pred", ",", "gt", ")", "\n", "if", "Q", "<", "0", ":", "\n", "            ", "Q", "=", "0", "\n", "\n", "", "", "return", "Q", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.eval_functions.fspecial_gauss": [[100, 106], ["numpy.exp", "np.exp.sum"], "function", ["None"], ["", "def", "fspecial_gauss", "(", "size", ",", "sigma", ")", ":", "\n", "       ", "\"\"\"Function to mimic the 'fspecial' gaussian MATLAB function\n       \"\"\"", "\n", "x", ",", "y", "=", "np", ".", "mgrid", "[", "-", "size", "//", "2", "+", "1", ":", "size", "//", "2", "+", "1", ",", "-", "size", "//", "2", "+", "1", ":", "size", "//", "2", "+", "1", "]", "\n", "g", "=", "np", ".", "exp", "(", "-", "(", "(", "x", "**", "2", "+", "y", "**", "2", ")", "/", "(", "2.0", "*", "sigma", "**", "2", ")", ")", ")", "\n", "return", "g", "/", "g", ".", "sum", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.eval_functions.original_WFb": [[107, 130], ["numpy.abs", "scipy.ndimage.morphology.distance_transform_edt", "eval_functions.fspecial_gauss", "np.abs.copy", "scipy.ndimage.filters.convolve", "np.abs.copy", "numpy.ones_like", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.mean", "numpy.exp", "numpy.finfo", "numpy.finfo", "numpy.log"], "function", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.eval_functions.fspecial_gauss"], ["", "def", "original_WFb", "(", "pred", ",", "gt", ")", ":", "\n", "    ", "E", "=", "np", ".", "abs", "(", "pred", "-", "gt", ")", "\n", "dst", ",", "idst", "=", "distance_transform_edt", "(", "1", "-", "gt", ",", "return_indices", "=", "True", ")", "\n", "\n", "K", "=", "fspecial_gauss", "(", "7", ",", "5", ")", "\n", "Et", "=", "E", ".", "copy", "(", ")", "\n", "Et", "[", "gt", "!=", "1", "]", "=", "Et", "[", "idst", "[", ":", ",", "gt", "!=", "1", "]", "[", "0", "]", ",", "idst", "[", ":", ",", "gt", "!=", "1", "]", "[", "1", "]", "]", "\n", "EA", "=", "convolve", "(", "Et", ",", "K", ",", "mode", "=", "'nearest'", ")", "\n", "MIN_E_EA", "=", "E", ".", "copy", "(", ")", "\n", "MIN_E_EA", "[", "(", "gt", "==", "1", ")", "&", "(", "EA", "<", "E", ")", "]", "=", "EA", "[", "(", "gt", "==", "1", ")", "&", "(", "EA", "<", "E", ")", "]", "\n", "\n", "B", "=", "np", ".", "ones_like", "(", "gt", ")", "\n", "B", "[", "gt", "!=", "1", "]", "=", "2.0", "-", "1", "*", "np", ".", "exp", "(", "np", ".", "log", "(", "1", "-", "0.5", ")", "/", "5", "*", "dst", "[", "gt", "!=", "1", "]", ")", "\n", "Ew", "=", "MIN_E_EA", "*", "B", "\n", "\n", "TPw", "=", "np", ".", "sum", "(", "gt", ")", "-", "np", ".", "sum", "(", "Ew", "[", "gt", "==", "1", "]", ")", "\n", "FPw", "=", "np", ".", "sum", "(", "Ew", "[", "gt", "!=", "1", "]", ")", "\n", "\n", "R", "=", "1", "-", "np", ".", "mean", "(", "Ew", "[", "gt", "==", "1", "]", ")", "\n", "P", "=", "TPw", "/", "(", "TPw", "+", "FPw", "+", "np", ".", "finfo", "(", "np", ".", "float64", ")", ".", "eps", ")", "\n", "Q", "=", "2", "*", "R", "*", "P", "/", "(", "R", "+", "P", "+", "np", ".", "finfo", "(", "np", ".", "float64", ")", ".", "eps", ")", "\n", "\n", "return", "Q", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.eval_functions.Fmeasure_calu": [[131, 167], ["numpy.zeros_like", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum"], "function", ["None"], ["", "def", "Fmeasure_calu", "(", "pred", ",", "gt", ",", "threshold", ")", ":", "\n", "    ", "if", "threshold", ">", "1", ":", "\n", "        ", "threshold", "=", "1", "\n", "\n", "", "Label3", "=", "np", ".", "zeros_like", "(", "gt", ")", "\n", "Label3", "[", "pred", ">=", "threshold", "]", "=", "1", "\n", "\n", "NumRec", "=", "np", ".", "sum", "(", "Label3", "==", "1", ")", "\n", "NumNoRec", "=", "np", ".", "sum", "(", "Label3", "==", "0", ")", "\n", "\n", "LabelAnd", "=", "(", "Label3", "==", "1", ")", "&", "(", "gt", "==", "1", ")", "\n", "NumAnd", "=", "np", ".", "sum", "(", "LabelAnd", "==", "1", ")", "\n", "num_obj", "=", "np", ".", "sum", "(", "gt", ")", "\n", "num_pred", "=", "np", ".", "sum", "(", "Label3", ")", "\n", "\n", "FN", "=", "num_obj", "-", "NumAnd", "\n", "FP", "=", "NumRec", "-", "NumAnd", "\n", "TN", "=", "NumNoRec", "-", "FN", "\n", "\n", "if", "NumAnd", "==", "0", ":", "\n", "        ", "PreFtem", "=", "0", "\n", "RecallFtem", "=", "0", "\n", "FmeasureF", "=", "0", "\n", "Dice", "=", "0", "\n", "SpecifTem", "=", "0", "\n", "IoU", "=", "0", "\n", "\n", "", "else", ":", "\n", "        ", "IoU", "=", "NumAnd", "/", "(", "FN", "+", "NumRec", ")", "\n", "PreFtem", "=", "NumAnd", "/", "NumRec", "\n", "RecallFtem", "=", "NumAnd", "/", "num_obj", "\n", "SpecifTem", "=", "TN", "/", "(", "TN", "+", "FP", ")", "\n", "Dice", "=", "2", "*", "NumAnd", "/", "(", "num_obj", "+", "num_pred", ")", "\n", "FmeasureF", "=", "(", "(", "2.0", "*", "PreFtem", "*", "RecallFtem", ")", "/", "(", "PreFtem", "+", "RecallFtem", ")", ")", "\n", "\n", "", "return", "PreFtem", ",", "RecallFtem", ",", "SpecifTem", ",", "Dice", ",", "FmeasureF", ",", "IoU", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.eval_functions.AlignmentTerm": [[168, 178], ["numpy.mean", "numpy.mean", "numpy.finfo"], "function", ["None"], ["", "def", "AlignmentTerm", "(", "pred", ",", "gt", ")", ":", "\n", "    ", "mu_pred", "=", "np", ".", "mean", "(", "pred", ")", "\n", "mu_gt", "=", "np", ".", "mean", "(", "gt", ")", "\n", "\n", "align_pred", "=", "pred", "-", "mu_pred", "\n", "align_gt", "=", "gt", "-", "mu_gt", "\n", "\n", "align_mat", "=", "2", "*", "(", "align_gt", "*", "align_pred", ")", "/", "(", "align_gt", "**", "2", "+", "align_pred", "**", "2", "+", "np", ".", "finfo", "(", "np", ".", "float64", ")", ".", "eps", ")", "\n", "\n", "return", "align_mat", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.eval_functions.EnhancedAlighmentTerm": [[179, 182], ["None"], "function", ["None"], ["", "def", "EnhancedAlighmentTerm", "(", "align_mat", ")", ":", "\n", "    ", "enhanced", "=", "(", "(", "align_mat", "+", "1", ")", "**", "2", ")", "/", "4", "\n", "return", "enhanced", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.eval_functions.EnhancedMeasure": [[183, 194], ["numpy.sum", "numpy.sum", "numpy.sum", "pred.copy", "eval_functions.AlignmentTerm", "eval_functions.EnhancedAlighmentTerm", "numpy.finfo"], "function", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.eval_functions.AlignmentTerm", "home.repos.pwc.inspect_result.plemeri_UACANet.utils.eval_functions.EnhancedAlighmentTerm"], ["", "def", "EnhancedMeasure", "(", "pred", ",", "gt", ")", ":", "\n", "    ", "if", "np", ".", "sum", "(", "gt", ")", "==", "0", ":", "\n", "        ", "enhanced_mat", "=", "1", "-", "pred", "\n", "", "elif", "np", ".", "sum", "(", "1", "-", "gt", ")", "==", "0", ":", "\n", "        ", "enhanced_mat", "=", "pred", ".", "copy", "(", ")", "\n", "", "else", ":", "\n", "        ", "align_mat", "=", "AlignmentTerm", "(", "pred", ",", "gt", ")", "\n", "enhanced_mat", "=", "EnhancedAlighmentTerm", "(", "align_mat", ")", "\n", "\n", "", "score", "=", "np", ".", "sum", "(", "enhanced_mat", ")", "/", "(", "gt", ".", "size", "-", "1", "+", "np", ".", "finfo", "(", "np", ".", "float64", ")", ".", "eps", ")", "\n", "return", "score", "", "", ""]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.__init__": [[12, 25], ["sorted", "sorted", "dataloader.PolypDataset.filter_files", "len", "dataloader.PolypDataset.get_transform", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.listdir", "os.listdir", "f.endswith", "f.endswith", "f.endswith"], "methods", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.filter_files", "home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.get_transform"], ["    ", "def", "__init__", "(", "self", ",", "root", ",", "transform_list", ")", ":", "\n", "        ", "image_root", ",", "gt_root", "=", "os", ".", "path", ".", "join", "(", "root", ",", "'images'", ")", ",", "os", ".", "path", ".", "join", "(", "root", ",", "'masks'", ")", "\n", "\n", "self", ".", "images", "=", "[", "os", ".", "path", ".", "join", "(", "image_root", ",", "f", ")", "for", "f", "in", "os", ".", "listdir", "(", "image_root", ")", "if", "f", ".", "endswith", "(", "'.jpg'", ")", "or", "f", ".", "endswith", "(", "'.png'", ")", "]", "\n", "self", ".", "images", "=", "sorted", "(", "self", ".", "images", ")", "\n", "\n", "self", ".", "gts", "=", "[", "os", ".", "path", ".", "join", "(", "gt_root", ",", "f", ")", "for", "f", "in", "os", ".", "listdir", "(", "gt_root", ")", "if", "f", ".", "endswith", "(", "'.png'", ")", "]", "\n", "self", ".", "gts", "=", "sorted", "(", "self", ".", "gts", ")", "\n", "\n", "self", ".", "filter_files", "(", ")", "\n", "\n", "self", ".", "size", "=", "len", "(", "self", ".", "images", ")", "\n", "self", ".", "transform", "=", "self", ".", "get_transform", "(", "transform_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.get_transform": [[26, 36], ["zip", "torchvision.Compose", "transform_list.keys", "transform_list.values", "tfs.append", "eval", "eval"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_transform", "(", "transform_list", ")", ":", "\n", "        ", "tfs", "=", "[", "]", "\n", "for", "key", ",", "value", "in", "zip", "(", "transform_list", ".", "keys", "(", ")", ",", "transform_list", ".", "values", "(", ")", ")", ":", "\n", "            ", "if", "value", "is", "not", "None", ":", "\n", "                ", "tf", "=", "eval", "(", "key", ")", "(", "**", "value", ")", "\n", "", "else", ":", "\n", "                ", "tf", "=", "eval", "(", "key", ")", "(", ")", "\n", "", "tfs", ".", "append", "(", "tf", ")", "\n", "", "return", "transforms", ".", "Compose", "(", "tfs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.__getitem__": [[37, 49], ["PIL.Image.open().convert", "PIL.Image.open().convert", "name.endswith", "dataloader.PolypDataset.transform", "dataloader.PolypDataset.images[].split", "PIL.Image.open", "PIL.Image.open", "name.split"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "image", "=", "Image", ".", "open", "(", "self", ".", "images", "[", "index", "]", ")", ".", "convert", "(", "'RGB'", ")", "\n", "gt", "=", "Image", ".", "open", "(", "self", ".", "gts", "[", "index", "]", ")", ".", "convert", "(", "'L'", ")", "\n", "shape", "=", "gt", ".", "size", "[", ":", ":", "-", "1", "]", "\n", "name", "=", "self", ".", "images", "[", "index", "]", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "if", "name", ".", "endswith", "(", "'.jpg'", ")", ":", "\n", "            ", "name", "=", "name", ".", "split", "(", "'.jpg'", ")", "[", "0", "]", "+", "'.png'", "\n", "\n", "", "sample", "=", "{", "'image'", ":", "image", ",", "'gt'", ":", "gt", ",", "'name'", ":", "name", ",", "'shape'", ":", "shape", "}", "\n", "\n", "sample", "=", "self", ".", "transform", "(", "sample", ")", "\n", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.filter_files": [[50, 59], ["zip", "len", "len", "PIL.Image.open", "PIL.Image.open", "images.append", "gts.append"], "methods", ["None"], ["", "def", "filter_files", "(", "self", ")", ":", "\n", "        ", "assert", "len", "(", "self", ".", "images", ")", "==", "len", "(", "self", ".", "gts", ")", "\n", "images", ",", "gts", "=", "[", "]", ",", "[", "]", "\n", "for", "img_path", ",", "gt_path", "in", "zip", "(", "self", ".", "images", ",", "self", ".", "gts", ")", ":", "\n", "            ", "img", ",", "gt", "=", "Image", ".", "open", "(", "img_path", ")", ",", "Image", ".", "open", "(", "gt_path", ")", "\n", "if", "img", ".", "size", "==", "gt", ".", "size", ":", "\n", "                ", "images", ".", "append", "(", "img_path", ")", "\n", "gts", ".", "append", "(", "gt_path", ")", "\n", "", "", "self", ".", "images", ",", "self", ".", "gts", "=", "images", ",", "gts", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.__len__": [[60, 62], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "size", "\n", "", "", ""]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.utils.load_config": [[11, 13], ["easydict.EasyDict", "yaml.load", "open"], "function", ["None"], ["def", "load_config", "(", "config_dir", ")", ":", "\n", "    ", "return", "ed", "(", "yaml", ".", "load", "(", "open", "(", "config_dir", ")", ",", "yaml", ".", "FullLoader", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.utils.to_cuda": [[15, 20], ["sample.keys", "type", "sample[].cuda"], "function", ["None"], ["", "def", "to_cuda", "(", "sample", ")", ":", "\n", "    ", "for", "key", "in", "sample", ".", "keys", "(", ")", ":", "\n", "        ", "if", "type", "(", "sample", "[", "key", "]", ")", "==", "torch", ".", "Tensor", ":", "\n", "            ", "sample", "[", "key", "]", "=", "sample", "[", "key", "]", ".", "cuda", "(", ")", "\n", "", "", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.utils.clip_gradient": [[22, 27], ["param.grad.data.clamp_"], "function", ["None"], ["", "def", "clip_gradient", "(", "optimizer", ",", "grad_clip", ")", ":", "\n", "    ", "for", "group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "for", "param", "in", "group", "[", "'params'", "]", ":", "\n", "            ", "if", "param", ".", "grad", "is", "not", "None", ":", "\n", "                ", "param", ".", "grad", ".", "data", ".", "clamp_", "(", "-", "grad_clip", ",", "grad_clip", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.utils.utils.debug_tile": [[28, 42], ["numpy.hstack", "debugs.append", "torch.sigmoid().cpu().detach().numpy().squeeze", "torch.sigmoid().cpu().detach().numpy().squeeze", "cv2.resize.astype", "cv2.cvtColor", "cv2.resize", "debug.append", "numpy.vstack", "torch.sigmoid().cpu().detach().numpy", "torch.sigmoid().cpu().detach().numpy", "cv2.resize.min", "cv2.resize.max", "cv2.resize.min", "torch.sigmoid().cpu().detach", "torch.sigmoid().cpu().detach", "torch.sigmoid().cpu", "torch.sigmoid().cpu", "torch.sigmoid", "torch.sigmoid"], "function", ["None"], ["", "", "", "", "def", "debug_tile", "(", "out", ",", "size", "=", "(", "100", ",", "100", ")", ")", ":", "\n", "    ", "debugs", "=", "[", "]", "\n", "for", "debs", "in", "out", "[", "'debug'", "]", ":", "\n", "        ", "debug", "=", "[", "]", "\n", "for", "deb", "in", "debs", ":", "\n", "            ", "log", "=", "torch", ".", "sigmoid", "(", "deb", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", "\n", "log", "=", "(", "log", "-", "log", ".", "min", "(", ")", ")", "/", "(", "log", ".", "max", "(", ")", "-", "log", ".", "min", "(", ")", ")", "\n", "log", "*=", "255", "\n", "log", "=", "log", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "log", "=", "cv2", ".", "cvtColor", "(", "log", ",", "cv2", ".", "COLOR_GRAY2RGB", ")", "\n", "log", "=", "cv2", ".", "resize", "(", "log", ",", "size", ")", "\n", "debug", ".", "append", "(", "log", ")", "\n", "", "debugs", ".", "append", "(", "np", ".", "vstack", "(", "debug", ")", ")", "\n", "", "return", "np", ".", "hstack", "(", "debugs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.run.Inference._args": [[22, 30], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["def", "_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--config'", ",", "type", "=", "str", ",", "default", "=", "'configs/UACANet-L.yaml'", ")", "\n", "parser", ".", "add_argument", "(", "'--source'", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "'--type'", ",", "type", "=", "str", ",", "\n", "choices", "=", "[", "'rgba'", ",", "'map'", "]", ",", "default", "=", "'map'", ")", "\n", "parser", ".", "add_argument", "(", "'--verbose'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.run.Inference.inference": [[32, 91], ["model.load_state_dict", "model.cuda", "model.eval", "eval().get_transform", "os.path.isdir", "os.makedirs", "eval", "torch.load", "torch.load", "os.listdir", "os.path.join", "os.path.isfile", "tqdm.tqdm", "enumerate", "PIL.Image.open().convert", "eval().get_transform.", "sample[].unsqueeze", "to_cuda", "model", "torch.interpolate", "out[].data.cpu", "torch.sigmoid", "torch.sigmoid", "out[].numpy().squeeze", "PIL.Image.fromarray().save", "os.path.join", "eval", "enumerate", "os.path.join", "args.source.split", "os.path.split", "len", "PIL.Image.open", "out[].numpy", "out[].min", "numpy.array", "cv2.split", "cv2.merge", "PIL.Image.fromarray", "os.path.split", "os.path.join", "out[].max", "out[].min", "os.path.splitext"], "function", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.dataloader.PolypDataset.get_transform", "home.repos.pwc.inspect_result.plemeri_UACANet.utils.utils.to_cuda"], ["", "def", "inference", "(", "opt", ",", "args", ")", ":", "\n", "    ", "model", "=", "eval", "(", "opt", ".", "Model", ".", "name", ")", "(", "channels", "=", "opt", ".", "Model", ".", "channels", ",", "\n", "pretrained", "=", "opt", ".", "Model", ".", "pretrained", ")", "\n", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "\n", "opt", ".", "Test", ".", "Checkpoint", ".", "checkpoint_dir", ",", "'latest.pth'", ")", ")", ",", "strict", "=", "True", ")", "\n", "model", ".", "cuda", "(", ")", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "transform", "=", "eval", "(", "opt", ".", "Test", ".", "Dataset", ".", "type", ")", ".", "get_transform", "(", "\n", "opt", ".", "Test", ".", "Dataset", ".", "transform_list", ")", "\n", "\n", "if", "os", ".", "path", ".", "isdir", "(", "args", ".", "source", ")", ":", "\n", "        ", "source_dir", "=", "args", ".", "source", "\n", "source_list", "=", "os", ".", "listdir", "(", "args", ".", "source", ")", "\n", "\n", "save_dir", "=", "os", ".", "path", ".", "join", "(", "'results'", ",", "args", ".", "source", ".", "split", "(", "os", ".", "sep", ")", "[", "-", "1", "]", ")", "\n", "\n", "", "elif", "os", ".", "path", ".", "isfile", "(", "args", ".", "source", ")", ":", "\n", "        ", "source_dir", "=", "os", ".", "path", ".", "split", "(", "args", ".", "source", ")", "[", "0", "]", "\n", "source_list", "=", "[", "os", ".", "path", ".", "split", "(", "args", ".", "source", ")", "[", "1", "]", "]", "\n", "\n", "save_dir", "=", "'results'", "\n", "", "else", ":", "\n", "        ", "return", "\n", "\n", "", "os", ".", "makedirs", "(", "save_dir", ",", "exist_ok", "=", "True", ")", "\n", "\n", "if", "args", ".", "verbose", "is", "True", ":", "\n", "        ", "sources", "=", "tqdm", ".", "tqdm", "(", "enumerate", "(", "source_list", ")", ",", "desc", "=", "'Inference'", ",", "total", "=", "len", "(", "\n", "source_list", ")", ",", "position", "=", "1", ",", "leave", "=", "False", ",", "bar_format", "=", "'{desc:<30}{percentage:3.0f}%|{bar:50}{r_bar}'", ")", "\n", "", "else", ":", "\n", "        ", "sources", "=", "enumerate", "(", "source_list", ")", "\n", "\n", "", "for", "i", ",", "source", "in", "sources", ":", "\n", "        ", "img", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "source_dir", ",", "source", ")", ")", ".", "convert", "(", "'RGB'", ")", "\n", "sample", "=", "{", "'image'", ":", "img", "}", "\n", "sample", "=", "transform", "(", "sample", ")", "\n", "sample", "[", "'image'", "]", "=", "sample", "[", "'image'", "]", ".", "unsqueeze", "(", "0", ")", "\n", "sample", "=", "to_cuda", "(", "sample", ")", "\n", "\n", "out", "=", "model", "(", "sample", ")", "\n", "out", "[", "'pred'", "]", "=", "F", ".", "interpolate", "(", "\n", "out", "[", "'pred'", "]", ",", "img", ".", "size", "[", ":", ":", "-", "1", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "out", "[", "'pred'", "]", "=", "out", "[", "'pred'", "]", ".", "data", ".", "cpu", "(", ")", "\n", "out", "[", "'pred'", "]", "=", "torch", ".", "sigmoid", "(", "out", "[", "'pred'", "]", ")", "\n", "out", "[", "'pred'", "]", "=", "out", "[", "'pred'", "]", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", "\n", "out", "[", "'pred'", "]", "=", "(", "out", "[", "'pred'", "]", "-", "out", "[", "'pred'", "]", ".", "min", "(", ")", ")", "/", "(", "out", "[", "'pred'", "]", ".", "max", "(", ")", "-", "out", "[", "'pred'", "]", ".", "min", "(", ")", "+", "1e-8", ")", "\n", "out", "[", "'pred'", "]", "=", "(", "out", "[", "'pred'", "]", "*", "255", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n", "if", "args", ".", "type", "==", "'map'", ":", "\n", "            ", "img", "=", "out", "[", "'pred'", "]", "\n", "", "elif", "args", ".", "type", "==", "'rgba'", ":", "\n", "            ", "img", "=", "np", ".", "array", "(", "img", ")", "\n", "r", ",", "g", ",", "b", "=", "cv2", ".", "split", "(", "img", ")", "\n", "img", "=", "cv2", ".", "merge", "(", "[", "r", ",", "g", ",", "b", ",", "out", "[", "'pred'", "]", "]", ")", "\n", "\n", "", "Image", ".", "fromarray", "(", "img", ")", ".", "save", "(", "os", ".", "path", ".", "join", "(", "\n", "save_dir", ",", "os", ".", "path", ".", "splitext", "(", "source", ")", "[", "0", "]", "+", "'.png'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.run.Test._args": [[21, 26], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["def", "_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--config'", ",", "type", "=", "str", ",", "default", "=", "'configs/UACANet-L.yaml'", ")", "\n", "parser", ".", "add_argument", "(", "'--verbose'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.run.Test.test": [[28, 75], ["model.load_state_dict", "model.cuda", "model.eval", "eval", "torch.load", "torch.load", "tqdm.tqdm", "os.path.join", "os.path.join", "os.makedirs", "data.DataLoader", "os.path.join", "eval", "tqdm.tqdm", "to_cuda", "model", "torch.interpolate", "out[].data.cpu", "torch.sigmoid", "torch.sigmoid", "out[].numpy().squeeze", "PIL.Image.fromarray().save", "len", "os.path.join", "len", "out[].numpy", "out[].min", "PIL.Image.fromarray", "out[].max", "out[].min"], "function", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.utils.to_cuda"], ["", "def", "test", "(", "opt", ",", "args", ")", ":", "\n", "    ", "model", "=", "eval", "(", "opt", ".", "Model", ".", "name", ")", "(", "channels", "=", "opt", ".", "Model", ".", "channels", ",", "\n", "output_stride", "=", "opt", ".", "Model", ".", "output_stride", ",", "\n", "pretrained", "=", "opt", ".", "Model", ".", "pretrained", ")", "\n", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "\n", "opt", ".", "Test", ".", "Checkpoint", ".", "checkpoint_dir", ",", "'latest.pth'", ")", ")", ",", "strict", "=", "True", ")", "\n", "model", ".", "cuda", "(", ")", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "if", "args", ".", "verbose", "is", "True", ":", "\n", "        ", "testsets", "=", "tqdm", ".", "tqdm", "(", "opt", ".", "Test", ".", "Dataset", ".", "testsets", ",", "desc", "=", "'Total TestSet'", ",", "total", "=", "len", "(", "\n", "opt", ".", "Test", ".", "Dataset", ".", "testsets", ")", ",", "position", "=", "0", ",", "bar_format", "=", "'{desc:<30}{percentage:3.0f}%|{bar:50}{r_bar}'", ")", "\n", "", "else", ":", "\n", "        ", "testsets", "=", "opt", ".", "Test", ".", "Dataset", ".", "testsets", "\n", "\n", "", "for", "testset", "in", "testsets", ":", "\n", "        ", "data_path", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "Test", ".", "Dataset", ".", "root", ",", "testset", ")", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "Test", ".", "Checkpoint", ".", "checkpoint_dir", ",", "testset", ")", "\n", "\n", "os", ".", "makedirs", "(", "save_path", ",", "exist_ok", "=", "True", ")", "\n", "\n", "test_dataset", "=", "eval", "(", "opt", ".", "Test", ".", "Dataset", ".", "type", ")", "(", "root", "=", "data_path", ",", "transform_list", "=", "opt", ".", "Test", ".", "Dataset", ".", "transform_list", ")", "\n", "\n", "test_loader", "=", "data", ".", "DataLoader", "(", "dataset", "=", "test_dataset", ",", "\n", "batch_size", "=", "1", ",", "\n", "num_workers", "=", "opt", ".", "Test", ".", "Dataloader", ".", "num_workers", ",", "\n", "pin_memory", "=", "opt", ".", "Test", ".", "Dataloader", ".", "pin_memory", ")", "\n", "\n", "if", "args", ".", "verbose", "is", "True", ":", "\n", "            ", "samples", "=", "tqdm", ".", "tqdm", "(", "test_loader", ",", "desc", "=", "testset", "+", "' - Test'", ",", "total", "=", "len", "(", "test_loader", ")", ",", "\n", "position", "=", "1", ",", "leave", "=", "False", ",", "bar_format", "=", "'{desc:<30}{percentage:3.0f}%|{bar:50}{r_bar}'", ")", "\n", "", "else", ":", "\n", "            ", "samples", "=", "test_loader", "\n", "\n", "", "for", "sample", "in", "samples", ":", "\n", "            ", "sample", "=", "to_cuda", "(", "sample", ")", "\n", "out", "=", "model", "(", "sample", ")", "\n", "out", "[", "'pred'", "]", "=", "F", ".", "interpolate", "(", "\n", "out", "[", "'pred'", "]", ",", "sample", "[", "'shape'", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n", "out", "[", "'pred'", "]", "=", "out", "[", "'pred'", "]", ".", "data", ".", "cpu", "(", ")", "\n", "out", "[", "'pred'", "]", "=", "torch", ".", "sigmoid", "(", "out", "[", "'pred'", "]", ")", "\n", "out", "[", "'pred'", "]", "=", "out", "[", "'pred'", "]", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", "\n", "out", "[", "'pred'", "]", "=", "(", "out", "[", "'pred'", "]", "-", "out", "[", "'pred'", "]", ".", "min", "(", ")", ")", "/", "(", "out", "[", "'pred'", "]", ".", "max", "(", ")", "-", "out", "[", "'pred'", "]", ".", "min", "(", ")", "+", "1e-8", ")", "\n", "Image", ".", "fromarray", "(", "(", "(", "out", "[", "'pred'", "]", ">", ".5", ")", "*", "255", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", ")", ".", "save", "(", "os", ".", "path", ".", "join", "(", "save_path", ",", "sample", "[", "'name'", "]", "[", "0", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.run.Train._args": [[22, 29], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["def", "_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--config'", ",", "type", "=", "str", ",", "default", "=", "'configs/UACANet-L.yaml'", ")", "\n", "parser", ".", "add_argument", "(", "'--local_rank'", ",", "type", "=", "int", ",", "default", "=", "-", "1", ")", "\n", "parser", ".", "add_argument", "(", "'--verbose'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--debug'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.run.Train.train": [[31, 146], ["os.environ[].split", "len", "data.DataLoader", "torch.ParameterList", "torch.ParameterList", "model.cuda.named_parameters", "model.cuda.train", "eval", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.init_process_group", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.distributed.DistributedSampler", "eval", "torch.SyncBatchNorm.convert_sync_batchnorm", "model.cuda.cuda", "torch.parallel.DistributedDataParallel", "model.cuda.cuda", "eval", "torch.cuda.amp.GradScaler", "eval", "tqdm.tqdm", "range", "torch.save", "torch.save", "torch.save", "nn.ParameterList.append", "range", "tqdm.tqdm", "enumerate", "optimizer.zero_grad", "os.makedirs", "os.makedirs", "os.path.join", "nn.ParameterList.append", "len", "enumerate", "torch.utils.data.distributed.DistributedSampler.set_epoch", "to_cuda", "model.cuda.", "out[].backward", "optimizer.step", "scheduler.step", "enumerate.set_postfix", "os.path.join", "torch.save", "torch.save", "torch.save", "debug_tile", "cv2.imwrite", "model.cuda.module.state_dict", "model.cuda.state_dict", "len", "torch.cuda.amp.autocast", "to_cuda", "model.cuda.", "torch.cuda.amp.GradScaler.scale().backward", "torch.cuda.amp.GradScaler.step", "torch.cuda.amp.GradScaler.update", "scheduler.step", "os.path.join", "os.path.join", "out[].item", "model.cuda.module.state_dict", "model.cuda.state_dict", "torch.cuda.amp.GradScaler.scale", "str"], "function", ["home.repos.pwc.inspect_result.plemeri_UACANet.run.Train.train", "home.repos.pwc.inspect_result.plemeri_UACANet.utils.utils.to_cuda", "home.repos.pwc.inspect_result.plemeri_UACANet.utils.utils.debug_tile", "home.repos.pwc.inspect_result.plemeri_UACANet.utils.utils.to_cuda"], ["", "def", "train", "(", "opt", ",", "args", ")", ":", "\n", "    ", "device_ids", "=", "os", ".", "environ", "[", "\"CUDA_VISIBLE_DEVICES\"", "]", ".", "split", "(", "','", ")", "\n", "device_num", "=", "len", "(", "device_ids", ")", "\n", "\n", "train_dataset", "=", "eval", "(", "opt", ".", "Train", ".", "Dataset", ".", "type", ")", "(", "\n", "root", "=", "opt", ".", "Train", ".", "Dataset", ".", "root", ",", "transform_list", "=", "opt", ".", "Train", ".", "Dataset", ".", "transform_list", ")", "\n", "\n", "if", "device_num", ">", "1", ":", "\n", "        ", "torch", ".", "cuda", ".", "set_device", "(", "args", ".", "local_rank", ")", "\n", "dist", ".", "init_process_group", "(", "backend", "=", "'nccl'", ")", "\n", "train_sampler", "=", "torch", ".", "utils", ".", "data", ".", "distributed", ".", "DistributedSampler", "(", "\n", "train_dataset", ",", "shuffle", "=", "True", ")", "\n", "", "else", ":", "\n", "        ", "train_sampler", "=", "None", "\n", "\n", "", "train_loader", "=", "data", ".", "DataLoader", "(", "dataset", "=", "train_dataset", ",", "\n", "batch_size", "=", "opt", ".", "Train", ".", "Dataloader", ".", "batch_size", ",", "\n", "shuffle", "=", "train_sampler", "is", "None", ",", "\n", "sampler", "=", "train_sampler", ",", "\n", "num_workers", "=", "opt", ".", "Train", ".", "Dataloader", ".", "num_workers", ",", "\n", "pin_memory", "=", "opt", ".", "Train", ".", "Dataloader", ".", "pin_memory", ",", "\n", "drop_last", "=", "True", ")", "\n", "\n", "model", "=", "eval", "(", "opt", ".", "Model", ".", "name", ")", "(", "channels", "=", "opt", ".", "Model", ".", "channels", ",", "\n", "output_stride", "=", "opt", ".", "Model", ".", "output_stride", ",", "\n", "pretrained", "=", "opt", ".", "Model", ".", "pretrained", ")", "\n", "\n", "if", "device_num", ">", "1", ":", "\n", "        ", "model", "=", "nn", ".", "SyncBatchNorm", ".", "convert_sync_batchnorm", "(", "model", ")", "\n", "model", "=", "model", ".", "cuda", "(", ")", "\n", "model", "=", "nn", ".", "parallel", ".", "DistributedDataParallel", "(", "model", ",", "device_ids", "=", "[", "\n", "args", ".", "local_rank", "]", ",", "output_device", "=", "args", ".", "local_rank", ",", "find_unused_parameters", "=", "True", ")", "\n", "", "else", ":", "\n", "        ", "model", "=", "model", ".", "cuda", "(", ")", "\n", "\n", "", "backbone_params", "=", "nn", ".", "ParameterList", "(", ")", "\n", "decoder_params", "=", "nn", ".", "ParameterList", "(", ")", "\n", "\n", "for", "name", ",", "param", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "        ", "if", "'backbone'", "in", "name", ":", "\n", "            ", "if", "'backbone.layer'", "in", "name", ":", "\n", "                ", "backbone_params", ".", "append", "(", "param", ")", "\n", "", "else", ":", "\n", "                ", "pass", "\n", "", "", "else", ":", "\n", "            ", "decoder_params", ".", "append", "(", "param", ")", "\n", "\n", "", "", "params_list", "=", "[", "{", "'params'", ":", "backbone_params", "}", ",", "{", "\n", "'params'", ":", "decoder_params", ",", "'lr'", ":", "opt", ".", "Train", ".", "Optimizer", ".", "lr", "*", "10", "}", "]", "\n", "optimizer", "=", "eval", "(", "opt", ".", "Train", ".", "Optimizer", ".", "type", ")", "(", "\n", "params_list", ",", "opt", ".", "Train", ".", "Optimizer", ".", "lr", ",", "weight_decay", "=", "opt", ".", "Train", ".", "Optimizer", ".", "weight_decay", ")", "\n", "if", "opt", ".", "Train", ".", "Optimizer", ".", "mixed_precision", "is", "True", ":", "\n", "        ", "scaler", "=", "GradScaler", "(", ")", "\n", "", "else", ":", "\n", "        ", "scaler", "=", "None", "\n", "\n", "", "scheduler", "=", "eval", "(", "opt", ".", "Train", ".", "Scheduler", ".", "type", ")", "(", "optimizer", ",", "gamma", "=", "opt", ".", "Train", ".", "Scheduler", ".", "gamma", ",", "\n", "minimum_lr", "=", "opt", ".", "Train", ".", "Scheduler", ".", "minimum_lr", ",", "\n", "max_iteration", "=", "len", "(", "\n", "train_loader", ")", "*", "opt", ".", "Train", ".", "Scheduler", ".", "epoch", ",", "\n", "warmup_iteration", "=", "opt", ".", "Train", ".", "Scheduler", ".", "warmup_iteration", ")", "\n", "model", ".", "train", "(", ")", "\n", "\n", "if", "args", ".", "local_rank", "<=", "0", "and", "args", ".", "verbose", "is", "True", ":", "\n", "        ", "epoch_iter", "=", "tqdm", ".", "tqdm", "(", "range", "(", "1", ",", "opt", ".", "Train", ".", "Scheduler", ".", "epoch", "+", "1", ")", ",", "desc", "=", "'Epoch'", ",", "total", "=", "opt", ".", "Train", ".", "Scheduler", ".", "epoch", ",", "\n", "position", "=", "0", ",", "bar_format", "=", "'{desc:<5.5}{percentage:3.0f}%|{bar:40}{r_bar}'", ")", "\n", "", "else", ":", "\n", "        ", "epoch_iter", "=", "range", "(", "1", ",", "opt", ".", "Train", ".", "Scheduler", ".", "epoch", "+", "1", ")", "\n", "\n", "", "for", "epoch", "in", "epoch_iter", ":", "\n", "        ", "if", "args", ".", "local_rank", "<=", "0", "and", "args", ".", "verbose", "is", "True", ":", "\n", "            ", "step_iter", "=", "tqdm", ".", "tqdm", "(", "enumerate", "(", "train_loader", ",", "start", "=", "1", ")", ",", "desc", "=", "'Iter'", ",", "total", "=", "len", "(", "\n", "train_loader", ")", ",", "position", "=", "1", ",", "leave", "=", "False", ",", "bar_format", "=", "'{desc:<5.5}{percentage:3.0f}%|{bar:40}{r_bar}'", ")", "\n", "if", "device_num", ">", "1", ":", "\n", "                ", "train_sampler", ".", "set_epoch", "(", "epoch", ")", "\n", "", "", "else", ":", "\n", "            ", "step_iter", "=", "enumerate", "(", "train_loader", ",", "start", "=", "1", ")", "\n", "\n", "", "for", "i", ",", "sample", "in", "step_iter", ":", "\n", "            ", "optimizer", ".", "zero_grad", "(", ")", "\n", "if", "opt", ".", "Train", ".", "Optimizer", ".", "mixed_precision", "is", "True", ":", "\n", "                ", "with", "autocast", "(", ")", ":", "\n", "                    ", "sample", "=", "to_cuda", "(", "sample", ")", "\n", "out", "=", "model", "(", "sample", ")", "\n", "\n", "scaler", ".", "scale", "(", "out", "[", "'loss'", "]", ")", ".", "backward", "(", ")", "\n", "scaler", ".", "step", "(", "optimizer", ")", "\n", "scaler", ".", "update", "(", ")", "\n", "scheduler", ".", "step", "(", ")", "\n", "", "", "else", ":", "\n", "                ", "sample", "=", "to_cuda", "(", "sample", ")", "\n", "out", "=", "model", "(", "sample", ")", "\n", "out", "[", "'loss'", "]", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "scheduler", ".", "step", "(", ")", "\n", "\n", "", "if", "args", ".", "local_rank", "<=", "0", "and", "args", ".", "verbose", "is", "True", ":", "\n", "                ", "step_iter", ".", "set_postfix", "(", "{", "'loss'", ":", "out", "[", "'loss'", "]", ".", "item", "(", ")", "}", ")", "\n", "\n", "", "", "if", "args", ".", "local_rank", "<=", "0", ":", "\n", "            ", "os", ".", "makedirs", "(", "opt", ".", "Train", ".", "Checkpoint", ".", "checkpoint_dir", ",", "exist_ok", "=", "True", ")", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "\n", "opt", ".", "Train", ".", "Checkpoint", ".", "checkpoint_dir", ",", "'debug'", ")", ",", "exist_ok", "=", "True", ")", "\n", "if", "epoch", "%", "opt", ".", "Train", ".", "Checkpoint", ".", "checkpoint_epoch", "==", "0", ":", "\n", "                ", "torch", ".", "save", "(", "model", ".", "module", ".", "state_dict", "(", ")", "if", "device_num", ">", "1", "else", "model", ".", "state_dict", "(", "\n", ")", ",", "os", ".", "path", ".", "join", "(", "opt", ".", "Train", ".", "Checkpoint", ".", "checkpoint_dir", ",", "'latest.pth'", ")", ")", "\n", "\n", "", "if", "args", ".", "debug", "is", "True", ":", "\n", "                ", "debout", "=", "debug_tile", "(", "out", ")", "\n", "cv2", ".", "imwrite", "(", "os", ".", "path", ".", "join", "(", "\n", "opt", ".", "Train", ".", "Checkpoint", ".", "checkpoint_dir", ",", "'debug'", ",", "str", "(", "epoch", ")", "+", "'.png'", ")", ",", "debout", ")", "\n", "\n", "", "", "", "if", "args", ".", "local_rank", "<=", "0", ":", "\n", "        ", "torch", ".", "save", "(", "model", ".", "module", ".", "state_dict", "(", ")", "if", "device_num", ">", "1", "else", "model", ".", "state_dict", "(", "\n", ")", ",", "os", ".", "path", ".", "join", "(", "opt", ".", "Train", ".", "Checkpoint", ".", "checkpoint_dir", ",", "'latest.pth'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.run.Eval._args": [[18, 23], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["def", "_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--config'", ",", "type", "=", "str", ",", "default", "=", "'configs/UACANet-L.yaml'", ")", "\n", "parser", ".", "add_argument", "(", "'--verbose'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.plemeri_UACANet.run.Eval.evaluate": [[24, 171], ["numpy.linspace", "tabulate.tabulate", "os.path.isdir", "os.makedirs", "os.path.split", "print", "tqdm.tqdm", "os.path.join", "os.path.join", "os.listdir", "os.listdir", "os.listdir.sort", "os.listdir.sort", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.max", "numpy.mean", "numpy.mean", "numpy.max", "numpy.mean", "numpy.mean", "numpy.max", "numpy.mean", "numpy.mean", "numpy.max", "numpy.mean", "numpy.mean", "numpy.max", "result.extend", "results.append", "os.path.join", "open.write", "open.close", "print", "print", "len", "len", "len", "tqdm.tqdm", "enumerate", "numpy.array", "numpy.array", "StructureMeasure", "original_WFb", "numpy.mean", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "enumerate", "out.append", "os.path.isfile", "open", "open", "open.write", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "enumerate", "zip", "PIL.Image.open", "PIL.Image.open", "len", "len", "np.array.astype", "np.array.astype", "numpy.abs", "len", "len", "len", "len", "len", "len", "len", "Fmeasure_calu", "numpy.zeros_like", "EnhancedMeasure", "eval", "zip", "len", "os.path.splitext", "os.path.splitext", "os.path.join", "os.path.join"], "function", ["home.repos.pwc.inspect_result.plemeri_UACANet.utils.eval_functions.StructureMeasure", "home.repos.pwc.inspect_result.plemeri_UACANet.utils.eval_functions.original_WFb", "home.repos.pwc.inspect_result.plemeri_UACANet.utils.eval_functions.Fmeasure_calu", "home.repos.pwc.inspect_result.plemeri_UACANet.utils.eval_functions.EnhancedMeasure"], ["", "def", "evaluate", "(", "opt", ",", "args", ")", ":", "\n", "    ", "if", "os", ".", "path", ".", "isdir", "(", "opt", ".", "Eval", ".", "result_path", ")", "is", "False", ":", "\n", "        ", "os", ".", "makedirs", "(", "opt", ".", "Eval", ".", "result_path", ")", "\n", "\n", "", "method", "=", "os", ".", "path", ".", "split", "(", "opt", ".", "Eval", ".", "pred_root", ")", "[", "-", "1", "]", "\n", "Thresholds", "=", "np", ".", "linspace", "(", "1", ",", "0", ",", "256", ")", "\n", "headers", "=", "opt", ".", "Eval", ".", "metrics", "#['meanDic', 'meanIoU', 'wFm', 'Sm', 'meanEm', 'mae', 'maxEm', 'maxDic', 'maxIoU', 'meanSen', 'maxSen', 'meanSpe', 'maxSpe']", "\n", "results", "=", "[", "]", "\n", "\n", "if", "args", ".", "verbose", "is", "True", ":", "\n", "        ", "print", "(", "'#'", "*", "20", ",", "'Start Evaluation'", ",", "'#'", "*", "20", ")", "\n", "datasets", "=", "tqdm", ".", "tqdm", "(", "opt", ".", "Eval", ".", "datasets", ",", "desc", "=", "'Expr - '", "+", "method", ",", "total", "=", "len", "(", "\n", "opt", ".", "Eval", ".", "datasets", ")", ",", "position", "=", "0", ",", "bar_format", "=", "'{desc:<30}{percentage:3.0f}%|{bar:50}{r_bar}'", ")", "\n", "", "else", ":", "\n", "        ", "datasets", "=", "opt", ".", "Eval", ".", "datasets", "\n", "\n", "", "for", "dataset", "in", "datasets", ":", "\n", "        ", "pred_root", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "Eval", ".", "pred_root", ",", "dataset", ")", "\n", "gt_root", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "Eval", ".", "gt_root", ",", "dataset", ",", "'masks'", ")", "\n", "\n", "preds", "=", "os", ".", "listdir", "(", "pred_root", ")", "\n", "gts", "=", "os", ".", "listdir", "(", "gt_root", ")", "\n", "\n", "preds", ".", "sort", "(", ")", "\n", "gts", ".", "sort", "(", ")", "\n", "\n", "threshold_Fmeasure", "=", "np", ".", "zeros", "(", "(", "len", "(", "preds", ")", ",", "len", "(", "Thresholds", ")", ")", ")", "\n", "threshold_Emeasure", "=", "np", ".", "zeros", "(", "(", "len", "(", "preds", ")", ",", "len", "(", "Thresholds", ")", ")", ")", "\n", "threshold_IoU", "=", "np", ".", "zeros", "(", "(", "len", "(", "preds", ")", ",", "len", "(", "Thresholds", ")", ")", ")", "\n", "# threshold_Precision = np.zeros((len(preds), len(Thresholds)))", "\n", "# threshold_Recall = np.zeros((len(preds), len(Thresholds)))", "\n", "threshold_Sensitivity", "=", "np", ".", "zeros", "(", "(", "len", "(", "preds", ")", ",", "len", "(", "Thresholds", ")", ")", ")", "\n", "threshold_Specificity", "=", "np", ".", "zeros", "(", "(", "len", "(", "preds", ")", ",", "len", "(", "Thresholds", ")", ")", ")", "\n", "threshold_Dice", "=", "np", ".", "zeros", "(", "(", "len", "(", "preds", ")", ",", "len", "(", "Thresholds", ")", ")", ")", "\n", "\n", "Smeasure", "=", "np", ".", "zeros", "(", "len", "(", "preds", ")", ")", "\n", "wFmeasure", "=", "np", ".", "zeros", "(", "len", "(", "preds", ")", ")", "\n", "MAE", "=", "np", ".", "zeros", "(", "len", "(", "preds", ")", ")", "\n", "\n", "if", "args", ".", "verbose", "is", "True", ":", "\n", "            ", "samples", "=", "tqdm", ".", "tqdm", "(", "enumerate", "(", "zip", "(", "preds", ",", "gts", ")", ")", ",", "desc", "=", "dataset", "+", "' - Evaluation'", ",", "total", "=", "len", "(", "\n", "preds", ")", ",", "position", "=", "1", ",", "leave", "=", "False", ",", "bar_format", "=", "'{desc:<30}{percentage:3.0f}%|{bar:50}{r_bar}'", ")", "\n", "", "else", ":", "\n", "            ", "samples", "=", "enumerate", "(", "zip", "(", "preds", ",", "gts", ")", ")", "\n", "\n", "", "for", "i", ",", "sample", "in", "samples", ":", "\n", "            ", "pred", ",", "gt", "=", "sample", "\n", "assert", "os", ".", "path", ".", "splitext", "(", "pred", ")", "[", "0", "]", "==", "os", ".", "path", ".", "splitext", "(", "gt", ")", "[", "0", "]", "\n", "\n", "pred_mask", "=", "np", ".", "array", "(", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "pred_root", ",", "pred", ")", ")", ")", "\n", "gt_mask", "=", "np", ".", "array", "(", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "gt_root", ",", "gt", ")", ")", ")", "\n", "\n", "if", "len", "(", "pred_mask", ".", "shape", ")", "!=", "2", ":", "\n", "                ", "pred_mask", "=", "pred_mask", "[", ":", ",", ":", ",", "0", "]", "\n", "", "if", "len", "(", "gt_mask", ".", "shape", ")", "!=", "2", ":", "\n", "                ", "gt_mask", "=", "gt_mask", "[", ":", ",", ":", ",", "0", "]", "\n", "\n", "", "assert", "pred_mask", ".", "shape", "==", "gt_mask", ".", "shape", "\n", "\n", "gt_mask", "=", "gt_mask", ".", "astype", "(", "np", ".", "float64", ")", "/", "255", "\n", "gt_mask", "=", "(", "gt_mask", ">", "0.5", ")", ".", "astype", "(", "np", ".", "float64", ")", "\n", "\n", "pred_mask", "=", "pred_mask", ".", "astype", "(", "np", ".", "float64", ")", "/", "255", "\n", "\n", "Smeasure", "[", "i", "]", "=", "StructureMeasure", "(", "pred_mask", ",", "gt_mask", ")", "\n", "wFmeasure", "[", "i", "]", "=", "original_WFb", "(", "pred_mask", ",", "gt_mask", ")", "\n", "MAE", "[", "i", "]", "=", "np", ".", "mean", "(", "np", ".", "abs", "(", "gt_mask", "-", "pred_mask", ")", ")", "\n", "\n", "threshold_E", "=", "np", ".", "zeros", "(", "len", "(", "Thresholds", ")", ")", "\n", "threshold_F", "=", "np", ".", "zeros", "(", "len", "(", "Thresholds", ")", ")", "\n", "threshold_Pr", "=", "np", ".", "zeros", "(", "len", "(", "Thresholds", ")", ")", "\n", "threshold_Rec", "=", "np", ".", "zeros", "(", "len", "(", "Thresholds", ")", ")", "\n", "threshold_Iou", "=", "np", ".", "zeros", "(", "len", "(", "Thresholds", ")", ")", "\n", "threshold_Spe", "=", "np", ".", "zeros", "(", "len", "(", "Thresholds", ")", ")", "\n", "threshold_Dic", "=", "np", ".", "zeros", "(", "len", "(", "Thresholds", ")", ")", "\n", "\n", "for", "j", ",", "threshold", "in", "enumerate", "(", "Thresholds", ")", ":", "\n", "                ", "threshold_Pr", "[", "j", "]", ",", "threshold_Rec", "[", "j", "]", ",", "threshold_Spe", "[", "j", "]", ",", "threshold_Dic", "[", "j", "]", ",", "threshold_F", "[", "j", "]", ",", "threshold_Iou", "[", "j", "]", "=", "Fmeasure_calu", "(", "pred_mask", ",", "gt_mask", ",", "threshold", ")", "\n", "\n", "Bi_pred", "=", "np", ".", "zeros_like", "(", "pred_mask", ")", "\n", "Bi_pred", "[", "pred_mask", ">=", "threshold", "]", "=", "1", "\n", "threshold_E", "[", "j", "]", "=", "EnhancedMeasure", "(", "Bi_pred", ",", "gt_mask", ")", "\n", "\n", "", "threshold_Emeasure", "[", "i", ",", ":", "]", "=", "threshold_E", "\n", "threshold_Fmeasure", "[", "i", ",", ":", "]", "=", "threshold_F", "\n", "threshold_Sensitivity", "[", "i", ",", ":", "]", "=", "threshold_Rec", "\n", "threshold_Specificity", "[", "i", ",", ":", "]", "=", "threshold_Spe", "\n", "threshold_Dice", "[", "i", ",", ":", "]", "=", "threshold_Dic", "\n", "threshold_IoU", "[", "i", ",", ":", "]", "=", "threshold_Iou", "\n", "\n", "", "result", "=", "[", "]", "\n", "\n", "mae", "=", "np", ".", "mean", "(", "MAE", ")", "\n", "Sm", "=", "np", ".", "mean", "(", "Smeasure", ")", "\n", "wFm", "=", "np", ".", "mean", "(", "wFmeasure", ")", "\n", "\n", "column_E", "=", "np", ".", "mean", "(", "threshold_Emeasure", ",", "axis", "=", "0", ")", "\n", "meanEm", "=", "np", ".", "mean", "(", "column_E", ")", "\n", "maxEm", "=", "np", ".", "max", "(", "column_E", ")", "\n", "\n", "column_Sen", "=", "np", ".", "mean", "(", "threshold_Sensitivity", ",", "axis", "=", "0", ")", "\n", "meanSen", "=", "np", ".", "mean", "(", "column_Sen", ")", "\n", "maxSen", "=", "np", ".", "max", "(", "column_Sen", ")", "\n", "\n", "column_Spe", "=", "np", ".", "mean", "(", "threshold_Specificity", ",", "axis", "=", "0", ")", "\n", "meanSpe", "=", "np", ".", "mean", "(", "column_Spe", ")", "\n", "maxSpe", "=", "np", ".", "max", "(", "column_Spe", ")", "\n", "\n", "column_Dic", "=", "np", ".", "mean", "(", "threshold_Dice", ",", "axis", "=", "0", ")", "\n", "meanDic", "=", "np", ".", "mean", "(", "column_Dic", ")", "\n", "maxDic", "=", "np", ".", "max", "(", "column_Dic", ")", "\n", "\n", "column_IoU", "=", "np", ".", "mean", "(", "threshold_IoU", ",", "axis", "=", "0", ")", "\n", "meanIoU", "=", "np", ".", "mean", "(", "column_IoU", ")", "\n", "maxIoU", "=", "np", ".", "max", "(", "column_IoU", ")", "\n", "\n", "# result.extend([meanDic, meanIoU, wFm, Sm, meanEm, mae, maxEm, maxDic, maxIoU, meanSen, maxSen, meanSpe, maxSpe])", "\n", "# results.append([dataset, *result])", "\n", "\n", "out", "=", "[", "]", "\n", "for", "metric", "in", "opt", ".", "Eval", ".", "metrics", ":", "\n", "            ", "out", ".", "append", "(", "eval", "(", "metric", ")", ")", "\n", "\n", "", "result", ".", "extend", "(", "out", ")", "\n", "results", ".", "append", "(", "[", "dataset", ",", "*", "result", "]", ")", "\n", "\n", "csv", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "Eval", ".", "result_path", ",", "'result_'", "+", "dataset", "+", "'.csv'", ")", "\n", "if", "os", ".", "path", ".", "isfile", "(", "csv", ")", "is", "True", ":", "\n", "            ", "csv", "=", "open", "(", "csv", ",", "'a'", ")", "\n", "", "else", ":", "\n", "            ", "csv", "=", "open", "(", "csv", ",", "'w'", ")", "\n", "csv", ".", "write", "(", "', '", ".", "join", "(", "[", "'method'", ",", "*", "headers", "]", ")", "+", "'\\n'", ")", "\n", "\n", "", "out_str", "=", "method", "+", "','", "\n", "for", "metric", "in", "result", ":", "\n", "            ", "out_str", "+=", "'{:.4f}'", ".", "format", "(", "metric", ")", "+", "','", "\n", "", "out_str", "+=", "'\\n'", "\n", "\n", "csv", ".", "write", "(", "out_str", ")", "\n", "csv", ".", "close", "(", ")", "\n", "", "tab", "=", "tabulate", "(", "results", ",", "headers", "=", "[", "'dataset'", ",", "*", "headers", "]", ",", "floatfmt", "=", "\".3f\"", ")", "\n", "\n", "if", "args", ".", "verbose", "is", "True", ":", "\n", "        ", "print", "(", "tab", ")", "\n", "print", "(", "\"#\"", "*", "20", ",", "\"End Evaluation\"", ",", "\"#\"", "*", "20", ")", "\n", "\n", "", "return", "tab", "\n", "\n"]]}