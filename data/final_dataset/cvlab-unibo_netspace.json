{"home.repos.pwc.inspect_result.cvlab-unibo_netspace.None.create_mlp_dataset.main": [[16, 84], ["pathlib.Path", "random.sample", "data.sdfdset.SDFDataset", "pathlib.Path", "pathlib.Path.mkdir", "list", "trainers.utils.progress_bar", "range", "min", "batches.append", "models.mlp.MLP().state_dict().keys", "range", "range", "torch.optim.Adam", "torch.optim.lr_scheduler.ExponentialLR", "trainers.utils.progress_bar", "enumerate", "tuple", "len", "models.mlp.MLP().to", "params.append", "len", "torch.stack", "torch.stack", "torch.clone", "torch.clone", "batched_params.append", "range", "torch.stack", "torch.stack", "create_mlp_dataset.mlp_batched_forward", "torch.mse_loss", "torch.optim.Adam.zero_grad", "F.mse_loss.backward", "torch.optim.Adam.step", "data.sdfdset.SDFDataset.get_sdf", "torch.save", "torch.save", "range", "models.mlp.MLP().state_dict", "list", "torch.clone.detach", "dataset[].to", "torch.optim.lr_scheduler.ExponentialLR.step", "[].detach().cpu", "models.mlp.MLP", "MLP().to.parameters", "enumerate", "models.mlp.MLP", "[].detach"], "function", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.utils.progress_bar", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.utils.progress_bar", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.mlp_batched_forward", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.sdfdset.SDFDataset.get_sdf", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.save", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.save"], ["def", "main", "(", ")", "->", "None", ":", "\n", "    ", "device", "=", "\"cuda\"", "\n", "\n", "dataset_root", "=", "Path", "(", "\"/path/to/sdf/dataset\"", ")", "\n", "num_samples", "=", "20_000", "\n", "\n", "dataset_range", "=", "[", "0", ",", "1500", "]", "\n", "num_shapes", "=", "500", "\n", "\n", "indices", "=", "sample", "(", "range", "(", "dataset_range", "[", "0", "]", ",", "dataset_range", "[", "1", "]", ")", ",", "num_shapes", ")", "\n", "dataset", "=", "SDFDataset", "(", "dataset_root", ",", "num_samples", ",", "indices", ")", "\n", "\n", "num_parallel_mlps", "=", "4", "\n", "batches", "=", "[", "]", "\n", "start", "=", "0", "\n", "while", "start", "<", "num_shapes", ":", "\n", "        ", "end", "=", "min", "(", "start", "+", "num_parallel_mlps", ",", "num_shapes", ")", "\n", "batches", ".", "append", "(", "tuple", "(", "range", "(", "start", ",", "end", ")", ")", ")", "\n", "start", "+=", "num_parallel_mlps", "\n", "\n", "", "output_path", "=", "Path", "(", "\"/path/to/output/dir\"", ")", "\n", "output_path", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "\n", "num_steps", "=", "10_000", "\n", "lr", "=", "0.0001", "\n", "gamma", "=", "0.9", "\n", "lr_sched_steps", "=", "1000", "\n", "\n", "sdk", "=", "list", "(", "MLP", "(", "256", ",", "1", ")", ".", "state_dict", "(", ")", ".", "keys", "(", ")", ")", "\n", "\n", "for", "sdf_idxs", "in", "progress_bar", "(", "batches", ")", ":", "\n", "        ", "params", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "len", "(", "sdf_idxs", ")", ")", ":", "\n", "            ", "mlp", "=", "MLP", "(", "256", ",", "1", ")", ".", "to", "(", "device", ")", "\n", "params", ".", "append", "(", "list", "(", "mlp", ".", "parameters", "(", ")", ")", ")", "\n", "\n", "", "batched_params", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "params", "[", "0", "]", ")", ")", ":", "\n", "            ", "p", "=", "torch", ".", "stack", "(", "[", "p", "[", "i", "]", "for", "p", "in", "params", "]", ",", "dim", "=", "0", ")", "\n", "p", "=", "torch", ".", "clone", "(", "p", ".", "detach", "(", ")", ")", "\n", "p", ".", "requires_grad", "=", "True", "\n", "batched_params", ".", "append", "(", "p", ")", "\n", "\n", "", "optimizer", "=", "Adam", "(", "batched_params", ",", "lr", ")", "\n", "scheduler", "=", "ExponentialLR", "(", "optimizer", ",", "gamma", ")", "\n", "\n", "for", "step", "in", "progress_bar", "(", "range", "(", "num_steps", ")", ")", ":", "\n", "            ", "sdfs", "=", "[", "dataset", "[", "idx", "]", ".", "to", "(", "device", ")", "for", "idx", "in", "sdf_idxs", "]", "\n", "sdf", "=", "torch", ".", "stack", "(", "sdfs", ",", "dim", "=", "0", ")", "\n", "xyz", "=", "sdf", "[", ":", ",", ":", ",", ":", "3", "]", "\n", "y", "=", "sdf", "[", ":", ",", ":", ",", "3", "]", "\n", "\n", "pred", "=", "mlp_batched_forward", "(", "batched_params", ",", "xyz", ")", "\n", "loss", "=", "F", ".", "mse_loss", "(", "pred", ",", "y", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "if", "step", "%", "lr_sched_steps", "==", "lr_sched_steps", "-", "1", ":", "\n", "                ", "scheduler", ".", "step", "(", ")", "\n", "\n", "", "", "for", "mlp_idx", ",", "sdf_idx", "in", "enumerate", "(", "sdf_idxs", ")", ":", "\n", "            ", "sd", "=", "{", "k", ":", "batched_params", "[", "i", "]", "[", "mlp_idx", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", "for", "i", ",", "k", "in", "enumerate", "(", "sdk", ")", "}", "\n", "name", ",", "sdf", "=", "dataset", ".", "get_sdf", "(", "sdf_idx", ")", "\n", "result", "=", "{", "\"mlp\"", ":", "sd", ",", "\"sdf\"", ":", "sdf", "}", "\n", "result_path", "=", "output_path", "/", "f\"{name}.pt\"", "\n", "torch", ".", "save", "(", "result", ",", "result_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.None.create_mlp_dataset.mlp_batched_forward": [[86, 101], ["range", "torch.sin.squeeze", "len", "torch.bmm", "torch.bmm", "biases.unsqueeze", "torch.sin", "torch.sin", "weights.permute"], "function", ["None"], ["", "", "", "def", "mlp_batched_forward", "(", "batched_params", ":", "List", "[", "Tensor", "]", ",", "coords", ":", "Tensor", ")", "->", "Tensor", ":", "\n", "    ", "num_layers", "=", "len", "(", "batched_params", ")", "//", "2", "\n", "\n", "f", "=", "coords", "\n", "\n", "for", "i", "in", "range", "(", "num_layers", ")", ":", "\n", "        ", "weights", "=", "batched_params", "[", "i", "*", "2", "]", "\n", "biases", "=", "batched_params", "[", "i", "*", "2", "+", "1", "]", "\n", "\n", "f", "=", "torch", ".", "bmm", "(", "f", ",", "weights", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ")", "+", "biases", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "if", "i", "<", "num_layers", "-", "1", ":", "\n", "            ", "f", "=", "torch", ".", "sin", "(", "30", "*", "f", ")", "\n", "\n", "", "", "return", "f", ".", "squeeze", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.None.view_mlp.main": [[11, 36], ["pathlib.Path", "models.mlp.MLP().to", "list", "pathlib.Path.glob", "random.randint", "torch.load", "MLP().to.load_state_dict", "trainers.utils.sdf_to_mesh", "open3d.geometry.TriangleMesh", "open3d.utility.Vector3dVector", "open3d.utility.Vector3iVector", "open3d.visualization.draw_geometries", "input", "models.mlp.MLP", "input.lower", "len"], "function", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.load", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.utils.sdf_to_mesh"], ["def", "main", "(", ")", "->", "None", ":", "\n", "    ", "dataset_path", "=", "Path", "(", "\"/path/to/mlp/dataset\"", ")", "\n", "mlp", "=", "MLP", "(", "256", ",", "1", ")", ".", "to", "(", "\"cuda\"", ")", "\n", "\n", "ckpt_paths", "=", "list", "(", "dataset_path", ".", "glob", "(", "\"*.pt\"", ")", ")", "\n", "\n", "stop", "=", "False", "\n", "while", "not", "stop", ":", "\n", "        ", "ckpt_index", "=", "randint", "(", "0", ",", "len", "(", "ckpt_paths", ")", "-", "1", ")", "\n", "mlp_path", "=", "ckpt_paths", "[", "ckpt_index", "]", "\n", "\n", "ckpt", "=", "torch", ".", "load", "(", "mlp_path", ")", "\n", "\n", "mlp", ".", "load_state_dict", "(", "ckpt", "[", "\"mlp\"", "]", ")", "\n", "\n", "vertices", ",", "faces", "=", "sdf_to_mesh", "(", "mlp", ",", "grid_size", "=", "256", ")", "\n", "\n", "mesh", "=", "o3d", ".", "geometry", ".", "TriangleMesh", "(", ")", "\n", "mesh", ".", "vertices", "=", "o3d", ".", "utility", ".", "Vector3dVector", "(", "vertices", ")", "\n", "mesh", ".", "triangles", "=", "o3d", ".", "utility", ".", "Vector3iVector", "(", "faces", ")", "\n", "\n", "o3d", ".", "visualization", ".", "draw_geometries", "(", "[", "mesh", "]", ")", "\n", "\n", "s", "=", "input", "(", "\"Press ENTER to continue or Q+ENTER to exit: \"", ")", "\n", "stop", "=", "s", ".", "lower", "(", ")", "==", "\"q\"", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.None.interpolate_mlps.main": [[13, 93], ["torch.no_grad", "pathlib.Path", "pathlib.Path", "pathlib.Path.mkdir", "pathlib.Path", "data.mlpdset.MLPDataset", "models.encoder.Encoder", "models.decoder.Decoder", "torch.load", "models.encoder.Encoder.load_state_dict", "models.encoder.Encoder.eval", "models.encoder.Encoder.to", "models.decoder.Decoder.load_state_dict", "models.decoder.Decoder.eval", "models.decoder.Decoder.to", "prep_a.to.to", "prep_b.to.to", "range", "preps.append", "models.encoder.Encoder.view", "models.encoder.Encoder.view", "range", "embeddings.append", "models.mlp.MLP().to", "MLP().to.state_dict", "range", "enumerate", "preps.append", "embeddings.append", "len", "open3d.io.write_triangle_mesh", "models.encoder.Encoder.", "models.encoder.Encoder.", "models.mlp.MLP", "models.mlp.MLP.params_from_prep", "MLP().to.load_state_dict", "trainers.utils.sdf_to_mesh", "open3d.geometry.TriangleMesh", "open3d.utility.Vector3dVector", "open3d.utility.Vector3iVector", "meshes.append", "str", "prep_a.to.unsqueeze", "prep_b.to.unsqueeze", "enumerate"], "function", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.load", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.eval", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.eval", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.mlp.MLP.params_from_prep", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.utils.sdf_to_mesh"], ["@", "torch", ".", "no_grad", "(", ")", "\n", "def", "main", "(", ")", "->", "None", ":", "\n", "    ", "device", "=", "\"cuda\"", "\n", "\n", "num_interp", "=", "5", "\n", "interp_step", "=", "1", "/", "(", "num_interp", "+", "1", ")", "\n", "\n", "ckpt_path", "=", "Path", "(", "\"/path/to/netspace/ckpt\"", ")", "\n", "\n", "out_dir", "=", "Path", "(", "\"/out/dir\"", ")", "\n", "out_dir", ".", "mkdir", "(", "exist_ok", "=", "True", ")", "\n", "\n", "dataset_root", "=", "Path", "(", "\"/path/to/sdf/datasets\"", ")", "\n", "train_range", "=", "(", "0", ",", "950", ")", "\n", "num_coords", "=", "50_000", "\n", "\n", "prep_shape", "=", "(", "8", ",", "10_000", ")", "\n", "emb_size", "=", "4096", "\n", "\n", "mlps_train_dataset", "=", "MLPDataset", "(", "dataset_root", ",", "train_range", ",", "prep_shape", ",", "num_coords", ")", "\n", "\n", "encoder", "=", "Encoder", "(", "emb_size", ")", "\n", "decoder", "=", "Decoder", "(", "[", "]", ",", "emb_size", ",", "prep_shape", ",", "arch_prediction", "=", "False", ")", "\n", "\n", "ckpt", "=", "torch", ".", "load", "(", "ckpt_path", ")", "\n", "encoder", ".", "load_state_dict", "(", "ckpt", "[", "\"0\"", "]", ")", "\n", "encoder", ".", "eval", "(", ")", "\n", "encoder", ".", "to", "(", "device", ")", "\n", "decoder", ".", "load_state_dict", "(", "ckpt", "[", "\"1\"", "]", ")", "\n", "decoder", ".", "eval", "(", ")", "\n", "decoder", ".", "to", "(", "device", ")", "\n", "\n", "a", ",", "b", "=", "0", ",", "1000", "# indices of boundaries shapes", "\n", "\n", "prep_a", ",", "_", "=", "mlps_train_dataset", "[", "a", "]", "\n", "prep_b", ",", "_", "=", "mlps_train_dataset", "[", "b", "]", "\n", "prep_a", "=", "prep_a", ".", "to", "(", "device", ")", "\n", "prep_b", "=", "prep_b", ".", "to", "(", "device", ")", "\n", "\n", "preps", "=", "[", "prep_a", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "num_interp", "+", "1", ")", ":", "\n", "        ", "gamma", "=", "i", "*", "interp_step", "\n", "prep", "=", "(", "1", "-", "gamma", ")", "*", "prep_a", "+", "gamma", "*", "prep_b", "\n", "preps", ".", "append", "(", "prep", ")", "\n", "", "preps", ".", "append", "(", "prep_b", ")", "\n", "\n", "embedding_a", "=", "encoder", "(", "prep_a", ".", "unsqueeze", "(", "0", ")", ")", ".", "view", "(", "-", "1", ")", "\n", "embedding_b", "=", "encoder", "(", "prep_b", ".", "unsqueeze", "(", "0", ")", ")", ".", "view", "(", "-", "1", ")", "\n", "\n", "embeddings", "=", "[", "embedding_a", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "num_interp", "+", "1", ")", ":", "\n", "        ", "gamma", "=", "i", "*", "interp_step", "\n", "embedding", "=", "(", "1", "-", "gamma", ")", "*", "embedding_a", "+", "gamma", "*", "embedding_b", "\n", "embeddings", ".", "append", "(", "embedding", ")", "\n", "", "embeddings", ".", "append", "(", "embedding_b", ")", "\n", "\n", "mlp", "=", "MLP", "(", "256", ",", "1", ")", ".", "to", "(", "device", ")", "\n", "sd", "=", "mlp", ".", "state_dict", "(", ")", "\n", "\n", "meshes", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "preps", ")", ")", ":", "\n", "        ", "interp_prep", "=", "preps", "[", "i", "]", "\n", "\n", "try", ":", "\n", "            ", "params", "=", "MLP", ".", "params_from_prep", "(", "interp_prep", ")", "\n", "sd", "=", "{", "k", ":", "params", "[", "i", "]", "for", "i", ",", "k", "in", "enumerate", "(", "sd", ")", "}", "\n", "mlp", ".", "load_state_dict", "(", "sd", ")", "\n", "vertices", ",", "faces", "=", "sdf_to_mesh", "(", "mlp", ",", "grid_size", "=", "256", ")", "\n", "\n", "mesh", "=", "o3d", ".", "geometry", ".", "TriangleMesh", "(", ")", "\n", "mesh", ".", "vertices", "=", "o3d", ".", "utility", ".", "Vector3dVector", "(", "vertices", ")", "\n", "mesh", ".", "triangles", "=", "o3d", ".", "utility", ".", "Vector3iVector", "(", "faces", ")", "\n", "meshes", ".", "append", "(", "mesh", ")", "\n", "", "except", ":", "\n", "            ", "pass", "\n", "\n", "", "", "for", "i", ",", "mesh", "in", "enumerate", "(", "meshes", ")", ":", "\n", "        ", "out_path", "=", "out_dir", "/", "f\"{i}.ply\"", "\n", "o3d", ".", "io", ".", "write_triangle_mesh", "(", "str", "(", "out_path", ")", ",", "mesh", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.experiments.single_arch_interp.SingleArchInterpolation.__init__": [[13, 26], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "encoder", ":", "Encoder", ",", "\n", "decoder", ":", "Decoder", ",", "\n", "nets", ":", "Tuple", "[", "Tuple", "[", "BaseNet", ",", "torch", ".", "Tensor", "]", "]", ",", "\n", "eval", ":", "Callable", ",", "\n", "device", ":", "torch", ".", "device", ",", "\n", ")", ":", "\n", "        ", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "decoder", "=", "decoder", "\n", "self", ".", "nets", "=", "nets", "\n", "self", ".", "eval", "=", "eval", "\n", "self", ".", "device", "=", "device", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.experiments.single_arch_interp.SingleArchInterpolation.interpolation_loop": [[27, 49], ["torch.no_grad", "single_arch_interp.SingleArchInterpolation.encoder", "single_arch_interp.SingleArchInterpolation.eval", "emb_A.view().cpu().numpy.view().cpu().numpy.view().cpu().numpy", "single_arch_interp.SingleArchInterpolation.encoder", "single_arch_interp.SingleArchInterpolation.eval", "emb_B.view().cpu().numpy.view().cpu().numpy.view().cpu().numpy", "scipy.interpolate.interp1d", "scores.append", "trainers.utils.progress_bar", "scores.append", "[].unsqueeze", "single_arch_interp.SingleArchInterpolation.decoder", "[].unsqueeze", "single_arch_interp.SingleArchInterpolation.decoder", "numpy.vstack", "range", "torch.tensor", "emb_i.to().view.to().view.to().view", "single_arch_interp.SingleArchInterpolation.eval", "scores.append", "emb_A.view().cpu().numpy.view().cpu().numpy.view().cpu", "emb_B.view().cpu().numpy.view().cpu().numpy.view().cpu", "scipy.interpolate.interp1d.", "single_arch_interp.SingleArchInterpolation.decoder", "emb_i.to().view.to().view.to", "emb_A.view().cpu().numpy.view().cpu().numpy.view", "emb_B.view().cpu().numpy.view().cpu().numpy.view"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.eval", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.eval", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.utils.progress_bar", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.eval"], ["", "def", "interpolation_loop", "(", "self", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "emb_A", "=", "self", ".", "encoder", "(", "self", ".", "nets", "[", "0", "]", "[", "1", "]", ".", "unsqueeze", "(", "0", ")", ")", "\n", "prep_A", "=", "self", ".", "decoder", "(", "emb_A", ")", "[", "0", "]", "\n", "score_A", "=", "self", ".", "eval", "(", "self", ".", "nets", "[", "0", "]", "[", "0", "]", ",", "net_prep", "=", "prep_A", ")", "\n", "emb_A", "=", "emb_A", ".", "view", "(", "-", "1", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "emb_B", "=", "self", ".", "encoder", "(", "self", ".", "nets", "[", "1", "]", "[", "1", "]", ".", "unsqueeze", "(", "0", ")", ")", "\n", "prep_B", "=", "self", ".", "decoder", "(", "emb_B", ")", "[", "0", "]", "\n", "score_B", "=", "self", ".", "eval", "(", "self", ".", "nets", "[", "1", "]", "[", "0", "]", ",", "net_prep", "=", "prep_B", ")", "\n", "emb_B", "=", "emb_B", ".", "view", "(", "-", "1", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "interfunc", "=", "interp1d", "(", "[", "1", ",", "100", "]", ",", "np", ".", "vstack", "(", "[", "emb_A", ",", "emb_B", "]", ")", ",", "axis", "=", "0", ")", "\n", "\n", "scores", "=", "[", "]", "\n", "scores", ".", "append", "(", "score_A", ")", "\n", "for", "i", "in", "progress_bar", "(", "range", "(", "2", ",", "100", ")", ")", ":", "\n", "                ", "emb_i", "=", "torch", ".", "tensor", "(", "interfunc", "(", "i", ")", ",", "dtype", "=", "torch", ".", "float", ")", "\n", "emb_i", "=", "emb_i", ".", "to", "(", "self", ".", "device", ")", ".", "view", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", "\n", "prep_i", "=", "self", ".", "decoder", "(", "emb_i", ")", "[", "0", "]", "\n", "score_i", "=", "self", ".", "eval", "(", "self", ".", "nets", "[", "0", "]", "[", "0", "]", ",", "net_prep", "=", "prep_i", ")", "\n", "scores", ".", "append", "(", "score_i", ")", "\n", "", "scores", ".", "append", "(", "score_B", ")", "\n", "", "return", "scores", "\n", "", "", ""]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.experiments.multi_arch_interp.MultiArchInterpolation.__init__": [[13, 26], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "encoder", ":", "Encoder", ",", "\n", "decoder", ":", "Decoder", ",", "\n", "nets", ":", "Tuple", "[", "Tuple", "[", "BaseNet", ",", "torch", ".", "Tensor", "]", "]", ",", "\n", "eval", ":", "Callable", ",", "\n", "device", ":", "torch", ".", "device", ",", "\n", ")", ":", "\n", "        ", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "decoder", "=", "decoder", "\n", "self", ".", "nets", "=", "nets", "\n", "self", ".", "eval", "=", "eval", "\n", "self", ".", "device", "=", "device", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.experiments.multi_arch_interp.MultiArchInterpolation.interpolation_loop": [[27, 58], ["torch.no_grad", "multi_arch_interp.MultiArchInterpolation.encoder", "multi_arch_interp.MultiArchInterpolation.decoder", "multi_arch_interp.MultiArchInterpolation.eval", "emb_A.view().cpu().numpy.view().cpu().numpy.view().cpu().numpy", "multi_arch_interp.MultiArchInterpolation.encoder", "multi_arch_interp.MultiArchInterpolation.decoder", "multi_arch_interp.MultiArchInterpolation.eval", "emb_B.view().cpu().numpy.view().cpu().numpy.view().cpu().numpy", "scipy.interpolate.interp1d", "archs.append", "scores.append", "trainers.utils.progress_bar", "scores.append", "archs.append", "[].unsqueeze", "[].unsqueeze", "numpy.vstack", "torch.argmax().item", "range", "torch.tensor", "emb_i.to().view.to().view.to().view", "multi_arch_interp.MultiArchInterpolation.decoder", "torch.argmax().item", "multi_arch_interp.MultiArchInterpolation.eval", "scores.append", "archs.append", "torch.argmax().item", "emb_A.view().cpu().numpy.view().cpu().numpy.view().cpu", "emb_B.view().cpu().numpy.view().cpu().numpy.view().cpu", "scipy.interpolate.interp1d.", "torch.argmax", "emb_i.to().view.to().view.to", "torch.argmax", "torch.argmax", "emb_A.view().cpu().numpy.view().cpu().numpy.view", "emb_B.view().cpu().numpy.view().cpu().numpy.view"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.eval", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.eval", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.utils.progress_bar", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.eval"], ["", "def", "interpolation_loop", "(", "self", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "emb_A", "=", "self", ".", "encoder", "(", "self", ".", "nets", "[", "0", "]", "[", "1", "]", ".", "unsqueeze", "(", "0", ")", ")", "\n", "arch_A", ",", "prep_A", "=", "self", ".", "decoder", "(", "emb_A", ")", "\n", "score_A", "=", "self", ".", "eval", "(", "self", ".", "nets", "[", "0", "]", "[", "0", "]", ",", "net_prep", "=", "prep_A", ")", "\n", "emb_A", "=", "emb_A", ".", "view", "(", "-", "1", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "emb_B", "=", "self", ".", "encoder", "(", "self", ".", "nets", "[", "1", "]", "[", "1", "]", ".", "unsqueeze", "(", "0", ")", ")", "\n", "arch_B", ",", "prep_B", "=", "self", ".", "decoder", "(", "emb_B", ")", "\n", "score_B", "=", "self", ".", "eval", "(", "self", ".", "nets", "[", "1", "]", "[", "0", "]", ",", "net_prep", "=", "prep_B", ")", "\n", "emb_B", "=", "emb_B", ".", "view", "(", "-", "1", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "interfunc", "=", "interp1d", "(", "[", "0", ",", "100", "]", ",", "np", ".", "vstack", "(", "[", "emb_A", ",", "emb_B", "]", ")", ",", "axis", "=", "0", ")", "\n", "\n", "archs", "=", "[", "]", "\n", "archs", ".", "append", "(", "torch", ".", "argmax", "(", "arch_A", ",", "dim", "=", "1", ")", ".", "item", "(", ")", ")", "\n", "scores", "=", "[", "]", "\n", "scores", ".", "append", "(", "score_A", ")", "\n", "\n", "for", "i", "in", "progress_bar", "(", "range", "(", "1", ",", "99", ")", ")", ":", "\n", "                ", "emb_i", "=", "torch", ".", "tensor", "(", "interfunc", "(", "i", ")", ",", "dtype", "=", "torch", ".", "float", ")", "\n", "emb_i", "=", "emb_i", ".", "to", "(", "self", ".", "device", ")", ".", "view", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", "\n", "arch_i", ",", "prep_i", "=", "self", ".", "decoder", "(", "emb_i", ")", "\n", "arch", "=", "torch", ".", "argmax", "(", "arch_i", ",", "dim", "=", "1", ")", ".", "item", "(", ")", "\n", "predicted_net", "=", "self", ".", "decoder", ".", "out_nets", "[", "arch", "]", "\n", "score_i", "=", "self", ".", "eval", "(", "predicted_net", ",", "net_prep", "=", "prep_i", ")", "\n", "scores", ".", "append", "(", "score_i", ")", "\n", "archs", ".", "append", "(", "arch", ")", "\n", "\n", "", "scores", ".", "append", "(", "score_B", ")", "\n", "archs", ".", "append", "(", "torch", ".", "argmax", "(", "arch_B", ",", "dim", "=", "1", ")", ".", "item", "(", ")", ")", "\n", "\n", "", "return", "scores", ",", "archs", "\n", "", "", ""]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.experiments.single_arch_weights_interp.SingleArchWeightsInterpolation.__init__": [[12, 26], ["ref_net.get_parameters"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet.ResNet.get_parameters"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "ref_net", ":", "BaseNet", ",", "\n", "preps", ":", "Tuple", "[", "torch", ".", "Tensor", ",", "torch", ".", "Tensor", "]", ",", "\n", "prep_size", ":", "Tuple", "[", "int", ",", "int", "]", ",", "\n", "eval", ":", "Callable", ",", "\n", "device", ":", "torch", ".", "device", ",", "\n", ")", ":", "\n", "        ", "self", ".", "eval", "=", "eval", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "ref_net", "=", "ref_net", "\n", "self", ".", "preps", "=", "preps", "\n", "self", ".", "prep_size", "=", "prep_size", "\n", "self", ".", "param_mask", "=", "ref_net", ".", "get_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.experiments.single_arch_weights_interp.SingleArchWeightsInterpolation.flatten_params": [[27, 31], ["torch.cat", "p.view"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "flatten_params", "(", "params", ":", "List", "[", "torch", ".", "Tensor", "]", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "flatten_params", "=", "[", "p", ".", "view", "(", "-", "1", ")", "for", "p", "in", "params", "]", "\n", "return", "torch", ".", "cat", "(", "flatten_params", ",", "dim", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.experiments.single_arch_weights_interp.SingleArchWeightsInterpolation.reshape_params": [[32, 41], ["reshaped_params.append", "mask.numel", "params[].view"], "methods", ["None"], ["", "def", "reshape_params", "(", "self", ",", "params", ":", "torch", ".", "Tensor", ")", "->", "List", "[", "torch", ".", "Tensor", "]", ":", "\n", "        ", "reshaped_params", "=", "[", "]", "\n", "start", "=", "0", "\n", "for", "mask", "in", "self", ".", "param_mask", ":", "\n", "            ", "end", "=", "start", "+", "mask", ".", "numel", "(", ")", "\n", "reshaped_params", ".", "append", "(", "params", "[", "start", ":", "end", "]", ".", "view", "(", "mask", ".", "shape", ")", ")", "\n", "start", "=", "end", "\n", "\n", "", "return", "reshaped_params", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.experiments.single_arch_weights_interp.SingleArchWeightsInterpolation.interpolation_loop": [[42, 62], ["torch.no_grad", "single_arch_weights_interp.SingleArchWeightsInterpolation.eval", "flatten().cpu().numpy", "single_arch_weights_interp.SingleArchWeightsInterpolation.eval", "flatten().cpu().numpy", "scipy.interpolate.interp1d", "scores.append", "trainers.utils.progress_bar", "scores.append", "numpy.vstack", "range", "torch.tensor", "params_i.to.to.to", "single_arch_weights_interp.SingleArchWeightsInterpolation.reshape_params", "single_arch_weights_interp.SingleArchWeightsInterpolation.ref_net.get_prep", "single_arch_weights_interp.SingleArchWeightsInterpolation.eval", "scores.append", "flatten().cpu", "flatten().cpu", "scipy.interpolate.interp1d.", "flatten", "flatten", "single_arch_weights_interp.SingleArchWeightsInterpolation.ref_net.params_from_prep", "single_arch_weights_interp.SingleArchWeightsInterpolation.ref_net.params_from_prep"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.eval", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.eval", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.utils.progress_bar", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.experiments.single_arch_weights_interp.SingleArchWeightsInterpolation.reshape_params", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.mlp.MLP.get_prep", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.eval", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.mlp.MLP.params_from_prep", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.mlp.MLP.params_from_prep"], ["", "def", "interpolation_loop", "(", "self", ")", ":", "\n", "        ", "flatten", "=", "SingleArchWeightsInterpolation", ".", "flatten_params", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "score_A", "=", "self", ".", "eval", "(", "self", ".", "ref_net", ",", "net_prep", "=", "self", ".", "preps", "[", "0", "]", ")", "\n", "params_A", "=", "flatten", "(", "self", ".", "ref_net", ".", "params_from_prep", "(", "self", ".", "preps", "[", "0", "]", ")", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "score_B", "=", "self", ".", "eval", "(", "self", ".", "ref_net", ",", "net_prep", "=", "self", ".", "preps", "[", "1", "]", ")", "\n", "params_B", "=", "flatten", "(", "self", ".", "ref_net", ".", "params_from_prep", "(", "self", ".", "preps", "[", "1", "]", ")", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "interfunc", "=", "interp1d", "(", "[", "1", ",", "100", "]", ",", "np", ".", "vstack", "(", "[", "params_A", ",", "params_B", "]", ")", ",", "axis", "=", "0", ")", "\n", "\n", "scores", "=", "[", "]", "\n", "scores", ".", "append", "(", "score_A", ")", "\n", "for", "i", "in", "progress_bar", "(", "range", "(", "2", ",", "100", ")", ")", ":", "\n", "                ", "params_i", "=", "torch", ".", "tensor", "(", "interfunc", "(", "i", ")", ",", "dtype", "=", "torch", ".", "float", ")", "\n", "params_i", "=", "params_i", ".", "to", "(", "self", ".", "device", ")", "\n", "reshaped_params_i", "=", "self", ".", "reshape_params", "(", "params_i", ")", "\n", "prep_i", "=", "self", ".", "ref_net", ".", "get_prep", "(", "self", ".", "prep_size", ",", "reshaped_params_i", ")", "\n", "score_i", "=", "self", ".", "eval", "(", "self", ".", "ref_net", ",", "net_prep", "=", "prep_i", ")", "\n", "scores", ".", "append", "(", "score_i", ")", "\n", "", "scores", ".", "append", "(", "score_B", ")", "\n", "", "return", "scores", "\n", "", "", ""]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.single_arch.SingleArchTrainer.__init__": [[15, 19], ["torch.utils.tensorboard.SummaryWriter", "torch.utils.tensorboard.SummaryWriter", "torch.utils.tensorboard.SummaryWriter", "pathlib.Path"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "device", ",", "logdir", ")", ":", "\n", "        ", "self", ".", "device", "=", "device", "\n", "self", ".", "summary_writer", "=", "SummaryWriter", "(", "log_dir", "=", "logdir", ")", "\n", "self", ".", "ckptdir", "=", "Path", "(", "logdir", ")", "/", "\"ckpt\"", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.single_arch.SingleArchTrainer.train": [[20, 109], ["list", "list.extend", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "trainers.ckptmngr.CheckpointManager", "trainers.ckptmngr.CheckpointManager.try_to_load", "print", "iter", "range", "encoder.parameters", "list", "trainers.utils.progress_bar", "single_arch.SingleArchTrainer.summary_writer.add_scalar", "trainers.ckptmngr.CheckpointManager.save_interval", "decoder.parameters", "images_batch.to.to.to", "labels_batch.to.to.to", "encoder.train", "decoder.train", "torch.optim.Adam.zero_grad", "torch.optim.Adam.zero_grad", "torch.optim.Adam.zero_grad", "encoder", "decoder", "single_arch.SingleArchTrainer.compute_loss", "single_arch.SingleArchTrainer.backward", "torch.optim.Adam.step", "torch.optim.Adam.step", "torch.optim.Adam.step", "single_arch.SingleArchTrainer.item", "encoder.eval", "decoder.eval", "single_arch.SingleArchTrainer.eval", "single_arch.SingleArchTrainer.eval", "single_arch.SingleArchTrainer.eval", "trainers.ckptmngr.CheckpointManager.save_best", "next", "iter", "next"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.ckptmngr.CheckpointManager.try_to_load", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.utils.progress_bar", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.ckptmngr.CheckpointManager.save_interval", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.train", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.train", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.compute_loss", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.eval", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.eval", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.eval", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.eval", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.eval", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.ckptmngr.CheckpointManager.save_best"], ["", "def", "train", "(", "\n", "self", ",", "\n", "encoder", ",", "\n", "decoder", ",", "\n", "nets_train_loader", ",", "\n", "nets_val_loader", ",", "\n", "images_train_loader", ",", "\n", "images_val_loader", ",", "\n", "epoch_num", ",", "\n", ")", ":", "\n", "        ", "params", "=", "list", "(", "encoder", ".", "parameters", "(", ")", ")", "\n", "params", ".", "extend", "(", "list", "(", "decoder", ".", "parameters", "(", ")", ")", ")", "\n", "\n", "optimizer", "=", "Adam", "(", "params", ",", "lr", "=", "1e-4", ")", "\n", "\n", "elements", "=", "[", "encoder", ",", "decoder", ",", "optimizer", "]", "\n", "ckptmngr", "=", "CheckpointManager", "(", "self", ".", "ckptdir", ",", "25", ",", "lambda", "x", ",", "y", ":", "y", "-", "x", ",", "elements", ")", "\n", "\n", "start_epoch", "=", "ckptmngr", ".", "try_to_load", "(", "False", ")", "\n", "print", "(", "\"Training starting from epoch\"", ",", "start_epoch", ")", "\n", "\n", "nets_train_iter", "=", "iter", "(", "nets_train_loader", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "start_epoch", ",", "epoch_num", ")", ":", "\n", "            ", "step", "=", "0", "\n", "epoch_kl_loss", "=", "0.0", "\n", "\n", "desc", "=", "f\"{epoch} / {epoch_num}\"", "\n", "for", "images_batch", ",", "labels_batch", "in", "progress_bar", "(", "images_train_loader", ",", "desc", "=", "desc", ")", ":", "\n", "                ", "images_batch", "=", "images_batch", ".", "to", "(", "self", ".", "device", ")", "\n", "labels_batch", "=", "labels_batch", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "try", ":", "\n", "                    ", "net_batch", ",", "prep_batch", "=", "next", "(", "nets_train_iter", ")", "\n", "", "except", "StopIteration", ":", "\n", "                    ", "nets_train_iter", "=", "iter", "(", "nets_train_loader", ")", "\n", "net_batch", ",", "prep_batch", "=", "next", "(", "nets_train_iter", ")", "\n", "\n", "", "encoder", ".", "train", "(", ")", "\n", "decoder", ".", "train", "(", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "embedding", "=", "encoder", "(", "prep_batch", ")", "\n", "predicted_prep", "=", "decoder", "(", "embedding", ")", "\n", "\n", "kl_loss", "=", "self", ".", "compute_loss", "(", "net_batch", ",", "predicted_prep", ",", "images_batch", ",", "decoder", ")", "\n", "\n", "kl_loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "step", "+=", "1", "\n", "\n", "epoch_kl_loss", "+=", "kl_loss", ".", "item", "(", ")", "\n", "\n", "", "epoch_kl_loss", "/=", "step", "\n", "self", ".", "summary_writer", ".", "add_scalar", "(", "\"train/kl_loss\"", ",", "epoch_kl_loss", ",", "epoch", ")", "\n", "\n", "if", "epoch", "%", "20", "==", "19", ":", "\n", "                ", "encoder", ".", "eval", "(", ")", "\n", "decoder", ".", "eval", "(", ")", "\n", "\n", "_", "=", "self", ".", "eval", "(", "\n", "encoder", ",", "\n", "decoder", ",", "\n", "nets_train_loader", ",", "\n", "images_train_loader", ",", "\n", "epoch", ",", "\n", "\"train_train_accuracy\"", ",", "\n", ")", "\n", "_", "=", "self", ".", "eval", "(", "\n", "encoder", ",", "\n", "decoder", ",", "\n", "nets_train_loader", ",", "\n", "images_val_loader", ",", "\n", "epoch", ",", "\n", "\"train_val_accuracy\"", ",", "\n", ")", "\n", "validation_error", "=", "self", ".", "eval", "(", "\n", "encoder", ",", "\n", "decoder", ",", "\n", "nets_val_loader", ",", "\n", "images_val_loader", ",", "\n", "epoch", ",", "\n", "\"val_val_accuracy\"", ",", "\n", ")", "\n", "ckptmngr", ".", "save_best", "(", "epoch", ",", "validation_error", ")", "\n", "\n", "", "ckptmngr", ".", "save_interval", "(", "epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.single_arch.SingleArchTrainer.compute_loss": [[110, 132], ["torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.LogSoftmax", "torch.LogSoftmax", "torch.LogSoftmax", "range", "len", "decoder.out_nets[].func_forward", "torch.Softmax.", "torch.LogSoftmax.", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.kl_div", "torch.kl_div", "torch.kl_div"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.lenetlike.LeNetLike.func_forward"], ["", "", "def", "compute_loss", "(", "self", ",", "nets_batch", ",", "predicted_prep", ",", "images_batch", ",", "decoder", ")", ":", "\n", "        ", "kl_loss", "=", "0.0", "\n", "counter", "=", "0", "\n", "\n", "softmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "\n", "log_softmax", "=", "nn", ".", "LogSoftmax", "(", "dim", "=", "1", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "nets_batch", ")", ")", ":", "\n", "            ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "target_pred", "=", "nets_batch", "[", "i", "]", "(", "images_batch", ")", "\n", "", "net_pred", "=", "decoder", ".", "out_nets", "[", "0", "]", ".", "func_forward", "(", "images_batch", ",", "predicted_prep", "[", "i", "]", ")", "\n", "\n", "T", "=", "4.0", "\n", "target", "=", "softmax", "(", "target_pred", "/", "T", ")", "\n", "pred", "=", "log_softmax", "(", "net_pred", "/", "T", ")", "\n", "kl_loss", "+=", "F", ".", "kl_div", "(", "pred", ",", "target", ",", "reduction", "=", "\"batchmean\"", ")", "*", "T", "**", "2", "\n", "\n", "counter", "+=", "1", "\n", "\n", "", "kl_loss", "/=", "counter", "\n", "\n", "return", "kl_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.single_arch.SingleArchTrainer.eval": [[133, 154], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "encoder", "decoder", "range", "len", "evalfn", "evalfn", "abs", "single_arch.SingleArchTrainer.summary_writer.add_scalars", "str"], "methods", ["None"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "eval", "(", "self", ",", "encoder", ",", "decoder", ",", "nets_loader", ",", "images_loader", ",", "epoch", ",", "logdir", ")", ":", "\n", "        ", "error", "=", "0", "\n", "counter", "=", "0", "\n", "evalfn", "=", "ClassificationTrainer", ".", "eval_accuracy", "\n", "\n", "for", "net_batch", ",", "prep_batch", "in", "nets_loader", ":", "\n", "            ", "embedding", "=", "encoder", "(", "prep_batch", ")", "\n", "predicted_prep", "=", "decoder", "(", "embedding", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "net_batch", ")", ")", ":", "\n", "                ", "net", "=", "net_batch", "[", "i", "]", "\n", "target_score", "=", "evalfn", "(", "net", ",", "images_loader", ")", "\n", "pred_score", "=", "evalfn", "(", "decoder", ".", "out_nets", "[", "0", "]", ",", "images_loader", ",", "predicted_prep", "[", "i", "]", ")", "\n", "counter", "+=", "1", "\n", "error", "+=", "abs", "(", "target_score", "-", "pred_score", ")", "\n", "\n", "writer_dict", "=", "{", "\"target\"", ":", "target_score", ",", "\"predicted\"", ":", "pred_score", "}", "\n", "self", ".", "summary_writer", ".", "add_scalars", "(", "logdir", "+", "\"/net\"", "+", "str", "(", "net", ".", "id", ")", ",", "writer_dict", ",", "epoch", ")", "\n", "\n", "", "", "return", "error", "/", "counter", "\n", "", "", ""]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.latspace_single.LatSpaceTrainer.__init__": [[18, 68], ["data.images.ImagesDataset", "data.images.ImagesDataset.get_loaders", "torch.utils.tensorboard.SummaryWriter", "torch.optim.Adam", "torch.randn", "torch.tensor", "torch.no_grad", "latspace_single.LatSpaceTrainer.decoder", "latspace_single.LatSpaceTrainer.eval", "print", "embedding.detach().cpu().numpy", "embedding.detach().cpu", "embedding.detach"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.images.ImagesDataset.get_loaders", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.eval"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "dataset_name", ":", "str", ",", "\n", "decoder", ":", "Decoder", ",", "\n", "emb_size", ":", "int", ",", "\n", "device", ":", "torch", ".", "device", ",", "\n", "logdir", ":", "str", ",", "\n", "net", ":", "BaseNet", ",", "\n", "teacher_net", ":", "nn", ".", "Module", ",", "\n", "lr", ":", "float", ",", "\n", "embedding", ":", "Optional", "[", "torch", ".", "Tensor", "]", "=", "None", ",", "\n", ")", ":", "\n", "        ", "self", ".", "decoder", "=", "decoder", "\n", "\n", "dataset", "=", "ImagesDataset", "(", "dataset_name", ")", "\n", "self", ".", "train_loader", ",", "self", ".", "val_loader", ",", "self", ".", "test_loader", "=", "dataset", ".", "get_loaders", "(", ")", "\n", "\n", "self", ".", "device", "=", "device", "\n", "\n", "self", ".", "net", "=", "net", "\n", "\n", "self", ".", "eval", "=", "ClassificationTrainer", ".", "eval_accuracy", "\n", "self", ".", "summary_writer", "=", "SummaryWriter", "(", "log_dir", "=", "logdir", ")", "\n", "self", ".", "best_score", "=", "0.0", "\n", "self", ".", "best_embedding", "=", "None", "\n", "self", ".", "logdir", "=", "logdir", "\n", "\n", "if", "embedding", "is", "None", ":", "\n", "            ", "emb_shape", "=", "(", "1", ",", "emb_size", ",", "1", ",", "1", ")", "\n", "self", ".", "embedding", "=", "torch", ".", "randn", "(", "\n", "emb_shape", ",", "\n", "dtype", "=", "torch", ".", "float", ",", "\n", "device", "=", "device", ",", "\n", "requires_grad", "=", "True", ",", "\n", ")", "\n", "", "else", ":", "\n", "            ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "pred_prep", "=", "self", ".", "decoder", "(", "embedding", ")", "\n", "val_acc", "=", "self", ".", "eval", "(", "self", ".", "net", ",", "self", ".", "test_loader", ",", "pred_prep", ")", "\n", "print", "(", "\"Start val acc:\"", ",", "val_acc", ")", "\n", "\n", "", "self", ".", "embedding", "=", "torch", ".", "tensor", "(", "\n", "embedding", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "\n", "dtype", "=", "torch", ".", "float", ",", "\n", "device", "=", "device", ",", "\n", "requires_grad", "=", "True", ",", "\n", ")", "\n", "\n", "", "self", ".", "optimizer", "=", "Adam", "(", "[", "self", ".", "embedding", "]", ",", "lr", "=", "lr", ")", "\n", "self", ".", "teacher_net", "=", "teacher_net", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.latspace_single.LatSpaceTrainer.train": [[69, 116], ["torch.nn.Softmax", "torch.nn.LogSoftmax", "range", "latspace_single.LatSpaceTrainer.best_embedding.to", "latspace_single.LatSpaceTrainer.eval", "print", "trainers.utils.progress_bar", "len", "latspace_single.LatSpaceTrainer.summary_writer.add_scalar", "latspace_single.LatSpaceTrainer.decoder", "latspace_single.LatSpaceTrainer.optimizer.zero_grad", "images.to.to.to", "labels.to.to.to", "latspace_single.LatSpaceTrainer.decoder", "latspace_single.LatSpaceTrainer.net.func_forward", "torch.nn.LogSoftmax.", "torch.nn.Softmax.", "loss.backward", "latspace_single.LatSpaceTrainer.optimizer.step", "loss.item", "torch.no_grad", "latspace_single.LatSpaceTrainer.eval", "latspace_single.LatSpaceTrainer.eval", "latspace_single.LatSpaceTrainer.summary_writer.add_scalar", "latspace_single.LatSpaceTrainer.summary_writer.add_scalar", "torch.no_grad", "latspace_single.LatSpaceTrainer.teacher_net", "torch.nn.functional.kl_div", "latspace_single.LatSpaceTrainer.embedding.detach().clone", "torch.save", "print", "os.path.join", "latspace_single.LatSpaceTrainer.embedding.detach"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.eval", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.utils.progress_bar", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.lenetlike.LeNetLike.func_forward", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.eval", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.eval", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.save"], ["", "def", "train", "(", "self", ",", "epoch_num", ":", "int", ")", ":", "\n", "        ", "softmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "\n", "log_softmax", "=", "nn", ".", "LogSoftmax", "(", "dim", "=", "1", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "epoch_num", ")", ":", "\n", "            ", "epoch_loss", "=", "0.0", "\n", "desc", "=", "f\"{epoch} / {epoch_num}\"", "\n", "for", "images", ",", "labels", "in", "progress_bar", "(", "self", ".", "train_loader", ",", "desc", "=", "desc", ")", ":", "\n", "                ", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "images", "=", "images", ".", "to", "(", "self", ".", "device", ")", "\n", "labels", "=", "labels", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "teacher_pred", "=", "self", ".", "teacher_net", "(", "images", ")", "\n", "\n", "", "pred_prep", "=", "self", ".", "decoder", "(", "self", ".", "embedding", ")", "\n", "pred", "=", "self", ".", "net", ".", "func_forward", "(", "images", ",", "pred_prep", ")", "\n", "\n", "T", "=", "4.0", "\n", "pred", "=", "log_softmax", "(", "pred", "/", "T", ")", "\n", "teacher_pred", "=", "softmax", "(", "teacher_pred", "/", "T", ")", "\n", "loss", "=", "kl_div", "(", "pred", ",", "teacher_pred", ",", "reduction", "=", "\"batchmean\"", ")", "*", "T", "**", "2", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "epoch_loss", "+=", "loss", ".", "item", "(", ")", "\n", "\n", "", "epoch_loss", "/=", "len", "(", "self", ".", "train_loader", ")", "\n", "self", ".", "summary_writer", ".", "add_scalar", "(", "\"train/loss\"", ",", "epoch_loss", ",", "global_step", "=", "epoch", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "train_acc", "=", "self", ".", "eval", "(", "self", ".", "net", ",", "self", ".", "train_loader", ",", "pred_prep", ")", "\n", "val_acc", "=", "self", ".", "eval", "(", "self", ".", "net", ",", "self", ".", "val_loader", ",", "pred_prep", ")", "\n", "self", ".", "summary_writer", ".", "add_scalar", "(", "\"acc/train\"", ",", "train_acc", ",", "global_step", "=", "epoch", ")", "\n", "self", ".", "summary_writer", ".", "add_scalar", "(", "\"acc/val\"", ",", "val_acc", ",", "global_step", "=", "epoch", ")", "\n", "\n", "if", "val_acc", ">", "self", ".", "best_score", ":", "\n", "                    ", "self", ".", "best_score", "=", "val_acc", "\n", "self", ".", "best_embedding", "=", "self", ".", "embedding", ".", "detach", "(", ")", ".", "clone", "(", ")", "\n", "torch", ".", "save", "(", "self", ".", "best_embedding", ",", "os", ".", "path", ".", "join", "(", "self", ".", "logdir", ",", "\"best_embedding.pt\"", ")", ")", "\n", "print", "(", "\"best_score:\"", ",", "self", ".", "best_score", ",", "\"epoch:\"", ",", "epoch", ")", "\n", "\n", "", "", "", "self", ".", "best_embedding", "=", "self", ".", "best_embedding", ".", "to", "(", "self", ".", "device", ")", "\n", "pred_prep", "=", "self", ".", "decoder", "(", "self", ".", "best_embedding", ")", "[", "0", "]", "\n", "score", "=", "self", ".", "eval", "(", "self", ".", "net", ",", "self", ".", "test_loader", ",", "pred_prep", ")", "\n", "print", "(", "\"best embedding score : \"", ",", "score", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.multi_arch.MultiArchTrainer.__init__": [[16, 21], ["torch.utils.tensorboard.SummaryWriter", "torch.utils.tensorboard.SummaryWriter", "pathlib.Path"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "device", ",", "logdir", ")", ":", "\n", "        ", "self", ".", "device", "=", "device", "\n", "self", ".", "summary_writer", "=", "SummaryWriter", "(", "log_dir", "=", "logdir", ")", "\n", "self", ".", "ckptdir", "=", "Path", "(", "logdir", ")", "/", "\"ckpt\"", "\n", "self", ".", "eval_fn", "=", "ClassificationTrainer", ".", "eval_accuracy", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.multi_arch.MultiArchTrainer.train": [[22, 168], ["list", "list.extend", "torch.optim.Adam", "torch.optim.Adam", "trainers.ckptmngr.CheckpointManager", "trainers.ckptmngr.CheckpointManager.try_to_load", "print", "iter", "range", "encoder.parameters", "list", "trainers.utils.progress_bar", "multi_arch.MultiArchTrainer.summary_writer.add_scalar", "multi_arch.MultiArchTrainer.summary_writer.add_scalar", "multi_arch.MultiArchTrainer.summary_writer.add_scalar", "multi_arch.MultiArchTrainer.summary_writer.add_scalar", "multi_arch.MultiArchTrainer.summary_writer.add_scalar", "multi_arch.MultiArchTrainer.summary_writer.add_scalar", "multi_arch.MultiArchTrainer.summary_writer.add_scalar", "trainers.ckptmngr.CheckpointManager.save_interval", "decoder.parameters", "images_batch.to.to.to", "labels_batch.to.to.to", "encoder.train", "decoder.train", "encoder", "max", "multi_arch.MultiArchTrainer.interpolation_loss", "decoder", "multi_arch.MultiArchTrainer.compute_losses", "torch.optim.Adam.zero_grad", "torch.optim.Adam.zero_grad", "total_loss.backward", "torch.optim.Adam.step", "torch.optim.Adam.step", "ce_loss.item", "kd_loss.item", "interp_loss.item", "interp_arch_loss.item", "interp_kd_loss.item", "arch_loss.item", "total_loss.item", "encoder.eval", "decoder.eval", "multi_arch.MultiArchTrainer.eval", "multi_arch.MultiArchTrainer.eval", "multi_arch.MultiArchTrainer.eval", "trainers.ckptmngr.CheckpointManager.save_best", "next", "iter", "next"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.ckptmngr.CheckpointManager.try_to_load", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.utils.progress_bar", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.ckptmngr.CheckpointManager.save_interval", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.train", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.train", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.multi_arch.MultiArchTrainer.interpolation_loss", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.multi_arch.MultiArchTrainer.compute_losses", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.eval", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.eval", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.eval", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.eval", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.eval", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.ckptmngr.CheckpointManager.save_best"], ["", "def", "train", "(", "\n", "self", ",", "\n", "encoder", ",", "\n", "decoder", ",", "\n", "nets_train_loader", ",", "\n", "nets_val_loader", ",", "\n", "images_train_loader", ",", "\n", "images_val_loader", ",", "\n", "epoch_num", ",", "\n", "num_archs", ",", "\n", "teacher_net", ",", "\n", ")", ":", "\n", "        ", "params", "=", "list", "(", "encoder", ".", "parameters", "(", ")", ")", "\n", "params", ".", "extend", "(", "list", "(", "decoder", ".", "parameters", "(", ")", ")", ")", "\n", "optimizer", "=", "Adam", "(", "params", ",", "lr", "=", "1e-4", ")", "\n", "\n", "elements", "=", "[", "encoder", ",", "decoder", ",", "optimizer", "]", "\n", "ckptmngr", "=", "CheckpointManager", "(", "self", ".", "ckptdir", ",", "25", ",", "lambda", "x", ",", "y", ":", "x", "-", "y", ",", "elements", ")", "\n", "\n", "start_epoch", "=", "ckptmngr", ".", "try_to_load", "(", "False", ")", "\n", "print", "(", "\"Training starting from epoch\"", ",", "start_epoch", ")", "\n", "\n", "nets_train_iter", "=", "iter", "(", "nets_train_loader", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "start_epoch", ",", "epoch_num", ")", ":", "\n", "            ", "step", "=", "0", "\n", "epoch_kd_loss", "=", "0.0", "\n", "epoch_ce_loss", "=", "0.0", "\n", "epoch_arch_loss", "=", "0.0", "\n", "epoch_interp_loss", "=", "0.0", "\n", "epoch_interp_arch_loss", "=", "0.0", "\n", "epoch_interp_kd_loss", "=", "0.0", "\n", "epoch_total_loss", "=", "0.0", "\n", "\n", "desc", "=", "f\"{epoch} / {epoch_num}\"", "\n", "for", "images_batch", ",", "labels_batch", "in", "progress_bar", "(", "images_train_loader", ",", "desc", "=", "desc", ")", ":", "\n", "                ", "images_batch", "=", "images_batch", ".", "to", "(", "self", ".", "device", ")", "\n", "labels_batch", "=", "labels_batch", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "try", ":", "\n", "                    ", "net_batch", ",", "prep_batch", "=", "next", "(", "nets_train_iter", ")", "\n", "", "except", "StopIteration", ":", "\n", "                    ", "nets_train_iter", "=", "iter", "(", "nets_train_loader", ")", "\n", "net_batch", ",", "prep_batch", "=", "next", "(", "nets_train_iter", ")", "\n", "\n", "", "encoder", ".", "train", "(", ")", "\n", "decoder", ".", "train", "(", ")", "\n", "\n", "embeddings", "=", "encoder", "(", "prep_batch", ")", "\n", "\n", "# we want to activate interpolation loss only on boundaries", "\n", "interp_distance", "=", "max", "(", "1", ",", "num_archs", "-", "2", ")", "\n", "\n", "interp_arch_loss", ",", "interp_kl_loss", ",", "interp_ce_loss", "=", "self", ".", "interpolation_loss", "(", "\n", "decoder", ",", "\n", "embeddings", ",", "\n", "net_batch", ",", "\n", "images_batch", ",", "\n", "labels_batch", ",", "\n", "teacher_net", ",", "\n", "interp_distance", ",", "\n", ")", "\n", "\n", "w", "=", "0.9", "\n", "interp_kd_loss", "=", "w", "*", "interp_kl_loss", "+", "(", "1", "-", "w", ")", "*", "interp_ce_loss", "\n", "interp_loss", "=", "interp_arch_loss", "+", "interp_kd_loss", "\n", "\n", "predicted_archs", ",", "predicted_preps", "=", "decoder", "(", "embeddings", ")", "\n", "\n", "arch_loss", ",", "kl_loss", ",", "ce_loss", "=", "self", ".", "compute_losses", "(", "\n", "net_batch", ",", "\n", "predicted_preps", ",", "\n", "predicted_archs", ",", "\n", "images_batch", ",", "\n", "labels_batch", ",", "\n", "decoder", ",", "\n", "teacher_net", ",", "\n", ")", "\n", "\n", "w", "=", "0.9", "\n", "kd_loss", "=", "w", "*", "kl_loss", "+", "(", "1", "-", "w", ")", "*", "ce_loss", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "total_loss", "=", "arch_loss", "+", "kd_loss", "+", "interp_loss", "\n", "total_loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "step", "+=", "1", "\n", "\n", "epoch_ce_loss", "+=", "ce_loss", ".", "item", "(", ")", "\n", "epoch_kd_loss", "+=", "kd_loss", ".", "item", "(", ")", "\n", "epoch_interp_loss", "+=", "interp_loss", ".", "item", "(", ")", "\n", "epoch_interp_arch_loss", "+=", "interp_arch_loss", ".", "item", "(", ")", "\n", "epoch_interp_kd_loss", "+=", "interp_kd_loss", ".", "item", "(", ")", "\n", "epoch_arch_loss", "+=", "arch_loss", ".", "item", "(", ")", "\n", "epoch_total_loss", "+=", "total_loss", ".", "item", "(", ")", "\n", "\n", "", "epoch_ce_loss", "/=", "step", "\n", "epoch_kd_loss", "/=", "step", "\n", "epoch_interp_loss", "/=", "step", "\n", "epoch_interp_arch_loss", "/=", "step", "\n", "epoch_interp_kd_loss", "/=", "step", "\n", "epoch_arch_loss", "/=", "step", "\n", "epoch_total_loss", "/=", "step", "\n", "\n", "self", ".", "summary_writer", ".", "add_scalar", "(", "\"train/ce_loss\"", ",", "epoch_ce_loss", ",", "epoch", ")", "\n", "self", ".", "summary_writer", ".", "add_scalar", "(", "\"train/kd_loss\"", ",", "epoch_kd_loss", ",", "epoch", ")", "\n", "self", ".", "summary_writer", ".", "add_scalar", "(", "\"train/arch_loss\"", ",", "epoch_arch_loss", ",", "epoch", ")", "\n", "self", ".", "summary_writer", ".", "add_scalar", "(", "\"train/interp_loss\"", ",", "epoch_interp_loss", ",", "epoch", ")", "\n", "self", ".", "summary_writer", ".", "add_scalar", "(", "\"train/interp_arch_loss\"", ",", "epoch_interp_arch_loss", ",", "epoch", ")", "\n", "self", ".", "summary_writer", ".", "add_scalar", "(", "\"train/interp_kd_loss\"", ",", "epoch_interp_kd_loss", ",", "epoch", ")", "\n", "self", ".", "summary_writer", ".", "add_scalar", "(", "\"train/total_loss\"", ",", "epoch_total_loss", ",", "epoch", ")", "\n", "\n", "if", "epoch", "%", "25", "==", "24", ":", "\n", "                ", "encoder", ".", "eval", "(", ")", "\n", "decoder", ".", "eval", "(", ")", "\n", "\n", "_", "=", "self", ".", "eval", "(", "\n", "epoch", ",", "\n", "encoder", ",", "\n", "decoder", ",", "\n", "nets_train_loader", ",", "\n", "images_train_loader", ",", "\n", "\"train_train_accuracy\"", ",", "\n", "num_archs", ",", "\n", ")", "\n", "_", "=", "self", ".", "eval", "(", "\n", "epoch", ",", "\n", "encoder", ",", "\n", "decoder", ",", "\n", "nets_train_loader", ",", "\n", "images_val_loader", ",", "\n", "\"train_val_accuracy\"", ",", "\n", "num_archs", ",", "\n", ")", "\n", "validation_error", "=", "self", ".", "eval", "(", "\n", "epoch", ",", "\n", "encoder", ",", "\n", "decoder", ",", "\n", "nets_val_loader", ",", "\n", "images_val_loader", ",", "\n", "\"val_val_accuracy\"", ",", "\n", "num_archs", ",", "\n", ")", "\n", "ckptmngr", ".", "save_best", "(", "epoch", ",", "validation_error", ")", "\n", "", "ckptmngr", ".", "save_interval", "(", "epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.multi_arch.MultiArchTrainer.interpolation_loss": [[169, 226], ["torch.nn.Softmax", "torch.nn.Softmax", "torch.nn.LogSoftmax", "torch.nn.LogSoftmax", "itertools.combinations", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "embeddings[].view", "embeddings[].view", "torch.nn.Softmax.", "len", "torch.stack().unsqueeze().unsqueeze", "torch.stack().unsqueeze().unsqueeze", "torch.stack().unsqueeze().unsqueeze", "torch.stack().unsqueeze().unsqueeze", "decoder", "torch.cross_entropy", "torch.cross_entropy", "range", "range", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "len", "torch.argmax().item", "torch.argmax().item", "torch.argmax().item", "torch.argmax().item", "net.func_forward", "torch.nn.LogSoftmax.", "torch.nn.functional.cross_entropy", "torch.nn.functional.cross_entropy", "range", "teacher_net", "archs.append", "samples.append", "softmaxes.append", "torch.stack().unsqueeze", "torch.stack().unsqueeze", "torch.stack().unsqueeze", "torch.stack().unsqueeze", "torch.kl_div", "torch.kl_div", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.stack", "torch.stack", "torch.stack", "torch.stack"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.lenetlike.LeNetLike.func_forward"], ["", "", "def", "interpolation_loss", "(", "\n", "self", ",", "\n", "decoder", ",", "\n", "embeddings", ",", "\n", "nets_batch", ",", "\n", "images_batch", ",", "\n", "labels_batch", ",", "\n", "teacher_net", ",", "\n", "working_distance", "=", "1", ",", "\n", "T", "=", "4", ",", "\n", ")", ":", "\n", "        ", "samples", "=", "[", "]", "\n", "archs", "=", "[", "]", "\n", "softmaxes", "=", "[", "]", "\n", "softmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "\n", "log_softmax", "=", "nn", ".", "LogSoftmax", "(", "dim", "=", "1", ")", "\n", "\n", "for", "couple", "in", "comb", "(", "[", "i", "for", "i", "in", "range", "(", "embeddings", ".", "shape", "[", "0", "]", ")", "]", ",", "2", ")", ":", "\n", "            ", "i", ",", "j", "=", "couple", "\n", "if", "nets_batch", "[", "i", "]", ".", "class_id", ">", "nets_batch", "[", "j", "]", ".", "class_id", ":", "\n", "                ", "j", ",", "i", "=", "couple", "\n", "", "class_min", "=", "nets_batch", "[", "i", "]", ".", "class_id", "\n", "class_max", "=", "nets_batch", "[", "j", "]", ".", "class_id", "\n", "embedding_min", "=", "embeddings", "[", "i", "]", ".", "view", "(", "-", "1", ")", "\n", "embedding_max", "=", "embeddings", "[", "j", "]", ".", "view", "(", "-", "1", ")", "\n", "teacher_softmax", "=", "softmax", "(", "teacher_net", "(", "images_batch", ")", "/", "T", ")", "\n", "distance", "=", "class_max", "-", "class_min", "\n", "if", "distance", ">", "working_distance", ":", "\n", "                ", "for", "step", "in", "range", "(", "1", ",", "distance", ")", ":", "\n", "                    ", "inter_factor", "=", "(", "1", "/", "distance", ")", "*", "step", "\n", "archs", ".", "append", "(", "class_min", "+", "step", ")", "\n", "sample", "=", "(", "1", "-", "inter_factor", ")", "*", "embedding_min", "+", "(", "inter_factor", ")", "*", "embedding_max", "\n", "samples", ".", "append", "(", "sample", ")", "\n", "target_softmax", "=", "teacher_softmax", "\n", "softmaxes", ".", "append", "(", "target_softmax", ")", "\n", "\n", "", "", "", "arch_loss", "=", "torch", ".", "tensor", "(", "[", "0.0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "kl_loss", "=", "torch", ".", "tensor", "(", "[", "0.0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "ce_loss", "=", "torch", ".", "tensor", "(", "[", "0.0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "if", "len", "(", "samples", ")", ">", "0", ":", "\n", "            ", "samples_batch", "=", "torch", ".", "stack", "(", "samples", ",", "dim", "=", "0", ")", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "pred_arch", ",", "pred_prep", "=", "decoder", "(", "samples_batch", ")", "\n", "arch_loss", "=", "F", ".", "cross_entropy", "(", "\n", "pred_arch", ",", "torch", ".", "tensor", "(", "archs", ")", ".", "to", "(", "self", ".", "device", ")", ",", "reduction", "=", "\"sum\"", "\n", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "softmaxes", ")", ")", ":", "\n", "                ", "arch", "=", "torch", ".", "argmax", "(", "pred_arch", "[", "i", "]", ",", "dim", "=", "0", ")", ".", "item", "(", ")", "\n", "net", "=", "decoder", ".", "out_nets", "[", "arch", "]", "\n", "pred", "=", "net", ".", "func_forward", "(", "images_batch", ",", "pred_prep", "[", "i", "]", ")", "\n", "pred_logs", "=", "log_softmax", "(", "pred", "/", "T", ")", "\n", "kl", "=", "F", ".", "kl_div", "(", "pred_logs", ",", "softmaxes", "[", "i", "]", ",", "reduction", "=", "\"batchmean\"", ")", "*", "T", "**", "2", "\n", "kl_loss", "+=", "kl", "\n", "ce", "=", "nn", ".", "functional", ".", "cross_entropy", "(", "pred", ",", "labels_batch", ")", "\n", "ce_loss", "+=", "ce", "\n", "\n", "", "", "return", "arch_loss", ",", "kl_loss", ",", "ce_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.multi_arch.MultiArchTrainer.compute_losses": [[227, 265], ["range", "len", "predicted_archs[].unsqueeze", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.cross_entropy", "torch.cross_entropy", "torch.argmax().item", "torch.argmax().item", "torch.argmax().item", "torch.argmax().item", "predicted_net.func_forward", "torch.nn.functional.cross_entropy", "torch.nn.functional.cross_entropy", "torch.nn.Softmax", "torch.nn.Softmax", "torch.nn.LogSoftmax", "torch.nn.LogSoftmax", "torch.nn.Softmax.", "torch.nn.LogSoftmax.", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "teacher_net", "torch.kl_div", "torch.kl_div", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.lenetlike.LeNetLike.func_forward"], ["", "def", "compute_losses", "(", "\n", "self", ",", "\n", "nets_batch", ",", "\n", "predicted_preps", ",", "\n", "predicted_archs", ",", "\n", "images_batch", ",", "\n", "labels_batch", ",", "\n", "decoder", ",", "\n", "teacher_net", ",", "\n", "T", "=", "4", ",", "\n", ")", ":", "\n", "        ", "ce_loss", "=", "0.0", "\n", "kl_loss", "=", "0.0", "\n", "arch_loss", "=", "0.0", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "nets_batch", ")", ")", ":", "\n", "            ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "target_pred", "=", "teacher_net", "(", "images_batch", ")", "\n", "", "predicted_arch", "=", "predicted_archs", "[", "i", "]", ".", "unsqueeze", "(", "0", ")", "\n", "target_arch", "=", "torch", ".", "tensor", "(", "[", "nets_batch", "[", "i", "]", ".", "class_id", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "arch_loss", "+=", "F", ".", "cross_entropy", "(", "predicted_arch", ",", "target_arch", ")", "\n", "\n", "arch", "=", "torch", ".", "argmax", "(", "predicted_archs", "[", "i", "]", ",", "dim", "=", "0", ")", ".", "item", "(", ")", "\n", "predicted_net", "=", "decoder", ".", "out_nets", "[", "arch", "]", "\n", "net_pred", "=", "predicted_net", ".", "func_forward", "(", "images_batch", ",", "predicted_preps", "[", "i", "]", ")", "\n", "\n", "ce", "=", "nn", ".", "functional", ".", "cross_entropy", "(", "net_pred", ",", "labels_batch", ")", "\n", "ce_loss", "+=", "ce", "\n", "\n", "softmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "\n", "log_softmax", "=", "nn", ".", "LogSoftmax", "(", "dim", "=", "1", ")", "\n", "\n", "target", "=", "softmax", "(", "target_pred", "/", "T", ")", "\n", "pred", "=", "log_softmax", "(", "net_pred", "/", "T", ")", "\n", "kl", "=", "F", ".", "kl_div", "(", "pred", ",", "target", ",", "reduction", "=", "\"batchmean\"", ")", "*", "T", "**", "2", "\n", "kl_loss", "+=", "kl", "\n", "\n", "", "return", "arch_loss", ",", "kl_loss", ",", "ce_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.multi_arch.MultiArchTrainer.eval": [[266, 330], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "range", "range", "range", "encoder", "decoder", "range", "len", "range", "len", "predicted_archs[].unsqueeze", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.cross_entropy", "torch.cross_entropy", "multi_arch.MultiArchTrainer.eval_fn", "torch.argmax().item", "torch.argmax().item", "torch.argmax().item", "torch.argmax().item", "multi_arch.MultiArchTrainer.eval_fn", "multi_arch.MultiArchTrainer.summary_writer.add_scalars", "multi_arch.MultiArchTrainer.summary_writer.add_scalar", "sample.unsqueeze.unsqueeze.unsqueeze", "decoder", "torch.argmax().item", "torch.argmax().item", "torch.argmax().item", "torch.argmax().item", "multi_arch.MultiArchTrainer.eval_fn", "multi_arch.MultiArchTrainer.summary_writer.add_scalars", "min_embeddings.append", "max_embeddings.append", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "str", "str", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "str"], "methods", ["None"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "eval", "(", "self", ",", "epoch", ",", "encoder", ",", "decoder", ",", "nets_loader", ",", "images_loader", ",", "logdir", ",", "num_archs", ")", ":", "\n", "        ", "counter", "=", "0", "\n", "score", "=", "0", "\n", "inter_perfs", "=", "{", "}", "\n", "inter_class_examples_num", "=", "{", "}", "\n", "\n", "for", "i", "in", "range", "(", "num_archs", ")", ":", "\n", "            ", "inter_perfs", "[", "i", "]", "=", "0", "\n", "inter_class_examples_num", "[", "i", "]", "=", "0", "\n", "\n", "", "min_class_id", "=", "0", "\n", "max_class_id", "=", "num_archs", "-", "1", "\n", "min_embeddings", "=", "[", "]", "\n", "max_embeddings", "=", "[", "]", "\n", "\n", "for", "net_batch", ",", "prep_batch", "in", "nets_loader", ":", "\n", "            ", "embedding", "=", "encoder", "(", "prep_batch", ")", "\n", "predicted_archs", ",", "predicted_preps", "=", "decoder", "(", "embedding", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "net_batch", ")", ")", ":", "\n", "                ", "net", "=", "net_batch", "[", "i", "]", "\n", "if", "net", ".", "class_id", "==", "min_class_id", ":", "\n", "                    ", "min_embeddings", ".", "append", "(", "embedding", "[", "i", "]", ")", "\n", "", "elif", "net", ".", "class_id", "==", "max_class_id", ":", "\n", "                    ", "max_embeddings", ".", "append", "(", "embedding", "[", "i", "]", ")", "\n", "", "predicted_arch", "=", "predicted_archs", "[", "i", "]", ".", "unsqueeze", "(", "0", ")", "\n", "target_arch", "=", "torch", ".", "tensor", "(", "[", "net", ".", "class_id", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "arch_loss", "=", "F", ".", "cross_entropy", "(", "predicted_arch", ",", "target_arch", ")", "\n", "\n", "target_score", "=", "self", ".", "eval_fn", "(", "net", ",", "images_loader", ")", "\n", "arch", "=", "torch", ".", "argmax", "(", "predicted_archs", "[", "i", "]", ",", "dim", "=", "0", ")", ".", "item", "(", ")", "\n", "predicted_net", "=", "decoder", ".", "out_nets", "[", "arch", "]", "\n", "pred_score", "=", "self", ".", "eval_fn", "(", "predicted_net", ",", "images_loader", ",", "predicted_preps", "[", "i", "]", ")", "\n", "writer_dict", "=", "{", "\"target\"", ":", "target_score", ",", "\"predicted\"", ":", "pred_score", "}", "\n", "\n", "counter", "+=", "1", "\n", "score", "+=", "pred_score", "\n", "\n", "self", ".", "summary_writer", ".", "add_scalars", "(", "logdir", "+", "\"/net\"", "+", "str", "(", "net", ".", "id", ")", ",", "writer_dict", ",", "epoch", ")", "\n", "self", ".", "summary_writer", ".", "add_scalar", "(", "logdir", "+", "\"/net_arch\"", "+", "str", "(", "net", ".", "id", ")", ",", "arch_loss", ",", "epoch", ")", "\n", "\n", "", "", "for", "i", "in", "range", "(", "len", "(", "min_embeddings", ")", ")", ":", "\n", "            ", "distance", "=", "max_class_id", "-", "min_class_id", "\n", "for", "step", "in", "range", "(", "1", ",", "distance", ")", ":", "\n", "                ", "inter_factor", "=", "(", "1", "/", "distance", ")", "*", "step", "\n", "sample", "=", "(", "1", "-", "inter_factor", ")", "*", "min_embeddings", "[", "i", "]", "+", "(", "inter_factor", ")", "*", "max_embeddings", "[", "i", "]", "\n", "sample", "=", "sample", ".", "unsqueeze", "(", "0", ")", "\n", "sample_arch", ",", "sample_prep", "=", "decoder", "(", "sample", ")", "\n", "arch", "=", "torch", ".", "argmax", "(", "sample_arch", "[", "0", "]", ",", "dim", "=", "0", ")", ".", "item", "(", ")", "\n", "predicted_net", "=", "decoder", ".", "out_nets", "[", "arch", "]", "\n", "pred_score", "=", "self", ".", "eval_fn", "(", "predicted_net", ",", "images_loader", ",", "sample_prep", "[", "0", "]", ")", "\n", "score", "+=", "pred_score", "\n", "counter", "+=", "1", "\n", "inter_perfs", "[", "arch", "]", "+=", "pred_score", "\n", "inter_class_examples_num", "[", "arch", "]", "+=", "1", "\n", "\n", "", "", "for", "i", "in", "range", "(", "num_archs", ")", ":", "\n", "            ", "if", "inter_class_examples_num", "[", "i", "]", "!=", "0", ":", "\n", "                ", "inter_perfs", "[", "i", "]", "/=", "inter_class_examples_num", "[", "i", "]", "\n", "writer_dict", "=", "{", "\"predicted\"", ":", "inter_perfs", "[", "i", "]", "}", "\n", "self", ".", "summary_writer", ".", "add_scalars", "(", "logdir", "+", "\"/interp_net\"", "+", "str", "(", "i", ")", ",", "writer_dict", ",", "epoch", ")", "\n", "\n", "", "", "return", "score", "/", "counter", "\n", "", "", ""]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.ckptmngr.CheckpointManager.__init__": [[8, 23], ["ckptmngr.CheckpointManager.ckptdir.mkdir"], "methods", ["None"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "ckptdir", ":", "Path", ",", "\n", "interval", ":", "int", ",", "\n", "compare_fn", ":", "Callable", "[", "[", "float", ",", "float", "]", ",", "float", "]", ",", "\n", "elements", ":", "List", ",", "\n", ")", ":", "\n", "        ", "self", ".", "ckptdir", "=", "ckptdir", "\n", "self", ".", "interval", "=", "interval", "\n", "self", ".", "compare_fn", "=", "compare_fn", "\n", "self", ".", "elements", "=", "elements", "\n", "\n", "self", ".", "ckptdir", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "self", ".", "initialized", "=", "False", "\n", "self", ".", "best_score", "=", "0.0", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.ckptmngr.CheckpointManager.save_interval": [[24, 30], ["ckptmngr.CheckpointManager.ckptdir.glob", "ckptmngr.CheckpointManager._save_ckpt", "str", "ckpt_path.unlink"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.ckptmngr.CheckpointManager._save_ckpt"], ["", "def", "save_interval", "(", "self", ",", "epoch_num", ":", "int", ")", ":", "\n", "        ", "if", "epoch_num", "%", "self", ".", "interval", "==", "self", ".", "interval", "-", "1", ":", "\n", "            ", "for", "ckpt_path", "in", "self", ".", "ckptdir", ".", "glob", "(", "\"*.pt\"", ")", ":", "\n", "                ", "if", "\"best\"", "not", "in", "ckpt_path", ".", "name", ":", "\n", "                    ", "ckpt_path", ".", "unlink", "(", ")", "\n", "", "", "self", ".", "_save_ckpt", "(", "str", "(", "epoch_num", "+", "1", ")", ",", "epoch_num", "+", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.ckptmngr.CheckpointManager.save_best": [[31, 47], ["print", "print", "ckptmngr.CheckpointManager.ckptdir.glob", "ckptmngr.CheckpointManager._save_ckpt", "print", "ckptmngr.CheckpointManager.compare_fn", "ckpt_path.unlink", "str"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.ckptmngr.CheckpointManager._save_ckpt"], ["", "", "def", "save_best", "(", "self", ",", "epoch_num", ":", "int", ",", "epoch_score", ":", "float", ")", ":", "\n", "        ", "if", "not", "self", ".", "initialized", ":", "\n", "            ", "save", "=", "True", "\n", "self", ".", "initialized", "=", "True", "\n", "", "else", ":", "\n", "            ", "save", "=", "self", ".", "compare_fn", "(", "self", ".", "best_score", ",", "epoch_score", ")", "<", "0", "\n", "", "print", "(", "f\"#### best score {self.best_score:.2f} epoch score {epoch_score:.2f}\"", ",", "end", "=", "\" \"", ")", "\n", "if", "save", ":", "\n", "            ", "print", "(", "\"-> SAVED\"", ")", "\n", "for", "ckpt_path", "in", "self", ".", "ckptdir", ".", "glob", "(", "\"*.pt\"", ")", ":", "\n", "                ", "if", "\"best\"", "in", "ckpt_path", ".", "name", ":", "\n", "                    ", "ckpt_path", ".", "unlink", "(", ")", "\n", "", "", "self", ".", "_save_ckpt", "(", "\"best_\"", "+", "str", "(", "epoch_num", "+", "1", ")", ",", "epoch_num", "+", "1", ")", "\n", "self", ".", "best_score", "=", "epoch_score", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"-> NOT SAVED\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.ckptmngr.CheckpointManager.try_to_load": [[48, 53], ["ckptmngr.CheckpointManager.ckptdir.glob", "ckptmngr.CheckpointManager._load_ckpt"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.ckptmngr.CheckpointManager._load_ckpt"], ["", "", "def", "try_to_load", "(", "self", ",", "best", ":", "bool", ")", ":", "\n", "        ", "for", "ckpt_path", "in", "self", ".", "ckptdir", ".", "glob", "(", "\"*.pt\"", ")", ":", "\n", "            ", "if", "(", "best", "and", "\"best\"", "in", "ckpt_path", ".", "name", ")", "or", "(", "not", "best", "and", "\"best\"", "not", "in", "ckpt_path", ".", "name", ")", ":", "\n", "                ", "return", "self", ".", "_load_ckpt", "(", "ckpt_path", ".", "stem", ")", "\n", "", "", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.ckptmngr.CheckpointManager._save_ckpt": [[54, 62], ["range", "torch.save", "len", "ckptmngr.CheckpointManager.elements[].state_dict", "str"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.save"], ["", "def", "_save_ckpt", "(", "self", ",", "ckpt_name", ":", "str", ",", "epoch_num", ":", "int", ")", ":", "\n", "        ", "ckpt", "=", "{", "}", "\n", "ckpt", "[", "\"epoch\"", "]", "=", "epoch_num", "\n", "ckpt", "[", "\"best_score\"", "]", "=", "self", ".", "best_score", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "elements", ")", ")", ":", "\n", "            ", "ckpt", "[", "str", "(", "i", ")", "]", "=", "self", ".", "elements", "[", "i", "]", ".", "state_dict", "(", ")", "\n", "\n", "", "torch", ".", "save", "(", "ckpt", ",", "self", ".", "ckptdir", "/", "(", "ckpt_name", "+", "\".pt\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.ckptmngr.CheckpointManager._load_ckpt": [[63, 73], ["torch.load", "range", "len", "ckptmngr.CheckpointManager.elements[].load_state_dict", "str"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.load"], ["", "def", "_load_ckpt", "(", "self", ",", "ckpt_name", ":", "str", ")", ":", "\n", "        ", "ckpt", "=", "torch", ".", "load", "(", "self", ".", "ckptdir", "/", "(", "ckpt_name", "+", "\".pt\"", ")", ")", "\n", "epoch_num", "=", "ckpt", "[", "\"epoch\"", "]", "\n", "self", ".", "best_score", "=", "ckpt", "[", "\"best_score\"", "]", "\n", "self", ".", "initialized", "=", "True", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "elements", ")", ")", ":", "\n", "            ", "self", ".", "elements", "[", "i", "]", ".", "load_state_dict", "(", "ckpt", "[", "str", "(", "i", ")", "]", ")", "\n", "\n", "", "return", "epoch_num", "\n", "", "", ""]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.latspace_multi.LatSpaceTrainer.__init__": [[18, 71], ["data.images.ImagesDataset", "data.images.ImagesDataset.get_loaders", "torch.tensor", "torch.utils.tensorboard.SummaryWriter", "torch.optim.Adam", "torch.randn", "torch.tensor", "torch.no_grad", "latspace_multi.LatSpaceTrainer.decoder", "torch.argmax().item", "latspace_multi.LatSpaceTrainer.eval", "print", "embedding.detach().cpu().numpy", "torch.argmax", "embedding.detach().cpu", "embedding.detach"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.images.ImagesDataset.get_loaders", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.eval"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "dataset_name", ":", "str", ",", "\n", "decoder", ":", "Decoder", ",", "\n", "emb_size", ":", "int", ",", "\n", "device", ":", "torch", ".", "device", ",", "\n", "logdir", ":", "str", ",", "\n", "net", ":", "BaseNet", ",", "\n", "teacher_net", ":", "nn", ".", "Module", ",", "\n", "lr", ":", "float", ",", "\n", "embedding", ":", "Optional", "[", "torch", ".", "Tensor", "]", "=", "None", ",", "\n", ")", ":", "\n", "        ", "self", ".", "decoder", "=", "decoder", "\n", "\n", "dataset", "=", "ImagesDataset", "(", "dataset_name", ")", "\n", "self", ".", "train_loader", ",", "self", ".", "val_loader", ",", "self", ".", "test_loader", "=", "dataset", ".", "get_loaders", "(", ")", "\n", "\n", "self", ".", "device", "=", "device", "\n", "\n", "self", ".", "net", "=", "net", "\n", "self", ".", "required_class_id", "=", "torch", ".", "tensor", "(", "[", "net", ".", "class_id", "]", ",", "device", "=", "device", ")", "\n", "\n", "self", ".", "eval", "=", "ClassificationTrainer", ".", "eval_accuracy", "\n", "self", ".", "summary_writer", "=", "SummaryWriter", "(", "log_dir", "=", "logdir", ")", "\n", "self", ".", "best_score", "=", "0.0", "\n", "self", ".", "best_embedding", "=", "None", "\n", "self", ".", "logdir", "=", "logdir", "\n", "\n", "if", "embedding", "is", "None", ":", "\n", "            ", "emb_shape", "=", "(", "1", ",", "emb_size", ",", "1", ",", "1", ")", "\n", "self", ".", "embedding", "=", "torch", ".", "randn", "(", "\n", "emb_shape", ",", "\n", "dtype", "=", "torch", ".", "float", ",", "\n", "device", "=", "device", ",", "\n", "requires_grad", "=", "True", ",", "\n", ")", "\n", "", "else", ":", "\n", "            ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "pred_class", ",", "pred_prep", "=", "self", ".", "decoder", "(", "embedding", ")", "\n", "pred_class_id", "=", "torch", ".", "argmax", "(", "pred_class", ",", "dim", "=", "1", ")", ".", "item", "(", ")", "\n", "pred_net", "=", "self", ".", "decoder", ".", "out_nets", "[", "pred_class_id", "]", "\n", "val_acc", "=", "self", ".", "eval", "(", "pred_net", ",", "self", ".", "val_loader", ",", "pred_prep", ")", "\n", "print", "(", "\"Start class:\"", ",", "pred_class_id", ",", "\"Start val acc:\"", ",", "val_acc", ")", "\n", "\n", "", "self", ".", "embedding", "=", "torch", ".", "tensor", "(", "\n", "embedding", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "\n", "dtype", "=", "torch", ".", "float", ",", "\n", "device", "=", "device", ",", "\n", "requires_grad", "=", "True", ",", "\n", ")", "\n", "\n", "", "self", ".", "optimizer", "=", "Adam", "(", "[", "self", ".", "embedding", "]", ",", "lr", "=", "lr", ")", "\n", "self", ".", "teacher_net", "=", "teacher_net", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.latspace_multi.LatSpaceTrainer.train": [[72, 140], ["torch.nn.Softmax", "torch.nn.LogSoftmax", "range", "latspace_multi.LatSpaceTrainer.best_embedding.to", "latspace_multi.LatSpaceTrainer.decoder", "torch.argmax().item", "latspace_multi.LatSpaceTrainer.eval", "print", "trainers.utils.progress_bar", "len", "len", "len", "latspace_multi.LatSpaceTrainer.summary_writer.add_scalar", "latspace_multi.LatSpaceTrainer.summary_writer.add_scalar", "latspace_multi.LatSpaceTrainer.summary_writer.add_scalar", "latspace_multi.LatSpaceTrainer.optimizer.zero_grad", "images.to.to.to", "labels.to.to.to", "latspace_multi.LatSpaceTrainer.decoder", "torch.argmax().item", "pred_net.func_forward", "torch.nn.functional.cross_entropy", "torch.nn.LogSoftmax.", "torch.nn.Softmax.", "torch.nn.functional.kl_div", "torch.nn.functional.cross_entropy", "loss.backward", "latspace_multi.LatSpaceTrainer.optimizer.step", "torch.nn.functional.kl_div.item", "torch.nn.functional.cross_entropy.item", "torch.nn.functional.cross_entropy.item", "torch.no_grad", "latspace_multi.LatSpaceTrainer.eval", "latspace_multi.LatSpaceTrainer.eval", "latspace_multi.LatSpaceTrainer.summary_writer.add_scalar", "latspace_multi.LatSpaceTrainer.summary_writer.add_scalar", "torch.argmax", "torch.no_grad", "latspace_multi.LatSpaceTrainer.teacher_net", "latspace_multi.LatSpaceTrainer.embedding.detach().clone", "os.path.join", "torch.save", "print", "torch.argmax", "latspace_multi.LatSpaceTrainer.embedding.detach"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.eval", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.utils.progress_bar", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.lenetlike.LeNetLike.func_forward", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.eval", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.eval", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.save"], ["", "def", "train", "(", "self", ",", "epoch_num", ":", "int", ")", ":", "\n", "        ", "softmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "\n", "log_softmax", "=", "nn", ".", "LogSoftmax", "(", "dim", "=", "1", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "epoch_num", ")", ":", "\n", "            ", "epoch_kl_loss", "=", "0.0", "\n", "epoch_ce_loss", "=", "0.0", "\n", "epoch_class_loss", "=", "0.0", "\n", "\n", "desc", "=", "f\"{epoch} / {epoch_num}\"", "\n", "for", "images", ",", "labels", "in", "progress_bar", "(", "self", ".", "train_loader", ",", "desc", "=", "desc", ")", ":", "\n", "                ", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "images", "=", "images", ".", "to", "(", "self", ".", "device", ")", "\n", "labels", "=", "labels", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "teacher_pred", "=", "self", ".", "teacher_net", "(", "images", ")", "\n", "\n", "", "pred_class", ",", "pred_prep", "=", "self", ".", "decoder", "(", "self", ".", "embedding", ")", "\n", "pred_class_id", "=", "torch", ".", "argmax", "(", "pred_class", ",", "dim", "=", "1", ")", ".", "item", "(", ")", "\n", "pred_net", "=", "self", ".", "decoder", ".", "out_nets", "[", "pred_class_id", "]", "\n", "pred", "=", "pred_net", ".", "func_forward", "(", "images", ",", "pred_prep", ")", "\n", "\n", "ce", "=", "cross_entropy", "(", "pred", ",", "labels", ")", "\n", "\n", "T", "=", "4.0", "\n", "pred", "=", "log_softmax", "(", "pred", "/", "T", ")", "\n", "teacher_pred", "=", "softmax", "(", "teacher_pred", "/", "T", ")", "\n", "kl", "=", "kl_div", "(", "pred", ",", "teacher_pred", ",", "reduction", "=", "\"batchmean\"", ")", "\n", "\n", "class_id_loss", "=", "cross_entropy", "(", "pred_class", ",", "self", ".", "required_class_id", ")", "\n", "loss", "=", "(", "0.9", "*", "kl", "+", "0.1", "*", "ce", ")", "+", "class_id_loss", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "\n", "epoch_kl_loss", "+=", "kl", ".", "item", "(", ")", "\n", "epoch_ce_loss", "+=", "ce", ".", "item", "(", ")", "\n", "epoch_class_loss", "+=", "class_id_loss", ".", "item", "(", ")", "\n", "\n", "", "epoch_kl_loss", "/=", "len", "(", "self", ".", "train_loader", ")", "\n", "epoch_ce_loss", "/=", "len", "(", "self", ".", "train_loader", ")", "\n", "epoch_class_loss", "/=", "len", "(", "self", ".", "train_loader", ")", "\n", "\n", "self", ".", "summary_writer", ".", "add_scalar", "(", "\"train/kl_loss\"", ",", "epoch_kl_loss", ",", "global_step", "=", "epoch", ")", "\n", "self", ".", "summary_writer", ".", "add_scalar", "(", "\"train/ce_loss\"", ",", "epoch_ce_loss", ",", "global_step", "=", "epoch", ")", "\n", "self", ".", "summary_writer", ".", "add_scalar", "(", "\"train/class_loss\"", ",", "epoch_class_loss", ",", "global_step", "=", "epoch", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "train_acc", "=", "self", ".", "eval", "(", "pred_net", ",", "self", ".", "train_loader", ",", "pred_prep", ")", "\n", "val_acc", "=", "self", ".", "eval", "(", "pred_net", ",", "self", ".", "val_loader", ",", "pred_prep", ")", "\n", "self", ".", "summary_writer", ".", "add_scalar", "(", "\"acc/train\"", ",", "train_acc", ",", "global_step", "=", "epoch", ")", "\n", "self", ".", "summary_writer", ".", "add_scalar", "(", "\"acc/val\"", ",", "val_acc", ",", "global_step", "=", "epoch", ")", "\n", "\n", "if", "val_acc", ">", "self", ".", "best_score", ":", "\n", "                    ", "self", ".", "best_score", "=", "val_acc", "\n", "self", ".", "best_embedding", "=", "self", ".", "embedding", ".", "detach", "(", ")", ".", "clone", "(", ")", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "logdir", ",", "\"best_embedding.pt\"", ")", "\n", "torch", ".", "save", "(", "self", ".", "best_embedding", ",", "save_path", ")", "\n", "print", "(", "\"best_score:\"", ",", "self", ".", "best_score", ",", "\"epoch:\"", ",", "epoch", ")", "\n", "\n", "", "", "", "self", ".", "best_embedding", "=", "self", ".", "best_embedding", ".", "to", "(", "self", ".", "device", ")", "\n", "pred_class", ",", "pred_prep", "=", "self", ".", "decoder", "(", "self", ".", "best_embedding", ")", "\n", "pred_class_id", "=", "torch", ".", "argmax", "(", "pred_class", ",", "dim", "=", "1", ")", ".", "item", "(", ")", "\n", "pred_net", "=", "self", ".", "decoder", ".", "out_nets", "[", "pred_class_id", "]", "\n", "score", "=", "self", ".", "eval", "(", "pred_net", ",", "self", ".", "test_loader", ",", "pred_prep", ")", "\n", "print", "(", "\"best embedding class:\"", ",", "pred_class_id", ",", "\"best embedding score:\"", ",", "score", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.classification.ClassificationTrainer.__init__": [[9, 19], ["torch.utils.tensorboard.SummaryWriter"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "device", ",", "log_dir", ",", "ckpt_path", ",", "save_mode", ",", "show_progress", "=", "False", ")", ":", "\n", "        ", "self", ".", "device", "=", "device", "\n", "self", ".", "ckpt_path", "=", "ckpt_path", "\n", "self", ".", "save_mode", "=", "save_mode", "\n", "self", ".", "best_val_acc", "=", "0", "\n", "self", ".", "show_progress", "=", "show_progress", "\n", "\n", "self", ".", "summary_writer", "=", "None", "\n", "if", "log_dir", "is", "not", "None", ":", "\n", "            ", "self", ".", "summary_writer", "=", "SummaryWriter", "(", "log_dir", "=", "log_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.classification.ClassificationTrainer.train": [[20, 60], ["torch.nn.CrossEntropyLoss", "range", "net.train", "trainers.utils.adjust_learning_rate", "net.save", "trainers.utils.progress_bar", "inputs.to.to.to", "labels.to.to.to", "optimizer.zero_grad", "net", "torch.nn.CrossEntropyLoss.", "nn.CrossEntropyLoss.backward", "optimizer.step", "net.eval", "classification.ClassificationTrainer.eval_accuracy", "classification.ClassificationTrainer.eval_accuracy", "classification.ClassificationTrainer.summary_writer.add_scalar", "classification.ClassificationTrainer.summary_writer.add_scalar", "net.eval", "classification.ClassificationTrainer.eval_accuracy", "net.save"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.train", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.utils.adjust_learning_rate", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.save", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.utils.progress_bar", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.eval", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.classification.ClassificationTrainer.eval_accuracy", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.classification.ClassificationTrainer.eval_accuracy", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.eval", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.classification.ClassificationTrainer.eval_accuracy", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.save"], ["", "", "def", "train", "(", "self", ",", "net", ",", "train_loader", ",", "val_loader", ",", "epoch_num", ",", "optimizer", ",", "lr_value", ",", "lr_decay_epochs", ")", ":", "\n", "        ", "ce", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "epoch_num", ")", ":", "\n", "            ", "net", ".", "train", "(", ")", "\n", "\n", "if", "self", ".", "show_progress", ":", "\n", "                ", "iterable", "=", "progress_bar", "(", "train_loader", ",", "f\"Epoch {epoch}\"", ")", "\n", "", "else", ":", "\n", "                ", "iterable", "=", "train_loader", "\n", "\n", "", "for", "data", "in", "iterable", ":", "\n", "                ", "inputs", ",", "labels", "=", "data", "\n", "inputs", "=", "inputs", ".", "to", "(", "self", ".", "device", ")", "\n", "labels", "=", "labels", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "outputs", "=", "net", "(", "inputs", ")", "\n", "loss", "=", "ce", "(", "outputs", ",", "labels", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "", "if", "self", ".", "summary_writer", "and", "epoch", "%", "20", "==", "19", ":", "\n", "                ", "net", ".", "eval", "(", ")", "\n", "validation_acc", "=", "self", ".", "eval_accuracy", "(", "net", ",", "val_loader", ")", "\n", "training_acc", "=", "self", ".", "eval_accuracy", "(", "net", ",", "train_loader", ")", "\n", "self", ".", "summary_writer", ".", "add_scalar", "(", "\"val_acc\"", ",", "validation_acc", ",", "epoch", ")", "\n", "self", ".", "summary_writer", ".", "add_scalar", "(", "\"train_acc\"", ",", "training_acc", ",", "epoch", ")", "\n", "\n", "", "if", "self", ".", "save_mode", "==", "\"best\"", "and", "epoch", ">=", "200", "and", "epoch", "%", "10", "==", "9", ":", "\n", "                ", "net", ".", "eval", "(", ")", "\n", "validation_acc", "=", "self", ".", "eval_accuracy", "(", "net", ",", "val_loader", ")", "\n", "if", "validation_acc", ">", "self", ".", "best_val_acc", ":", "\n", "                    ", "self", ".", "best_val_acc", "=", "validation_acc", "\n", "net", ".", "save", "(", "self", ".", "ckpt_path", ")", "\n", "\n", "", "", "adjust_learning_rate", "(", "epoch", ",", "lr_decay_epochs", ",", "optimizer", ",", "lr_value", ")", "\n", "\n", "", "if", "self", ".", "save_mode", "==", "\"final\"", ":", "\n", "            ", "net", ".", "save", "(", "self", ".", "ckpt_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.classification.ClassificationTrainer.eval_accuracy": [[61, 84], ["torch.no_grad", "images.to.to.to", "labels.to.to.to", "torch.max", "labels.to.to.size", "net.func_forward", "net"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.lenetlike.LeNetLike.func_forward"], ["", "", "@", "staticmethod", "\n", "def", "eval_accuracy", "(", "net", ",", "images_loader", ",", "net_prep", "=", "None", ",", "device", "=", "\"cuda:0\"", ")", ":", "\n", "        ", "correct", "=", "0", "\n", "total", "=", "0", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "data", "in", "images_loader", ":", "\n", "                ", "images", ",", "labels", "=", "data", "\n", "images", "=", "images", ".", "to", "(", "device", ")", "\n", "labels", "=", "labels", ".", "to", "(", "device", ")", "\n", "\n", "if", "net_prep", "is", "not", "None", ":", "\n", "                    ", "outputs", "=", "net", ".", "func_forward", "(", "images", ",", "net_prep", ")", "\n", "", "else", ":", "\n", "                    ", "outputs", "=", "net", "(", "images", ")", "\n", "\n", "", "_", ",", "predicted", "=", "torch", ".", "max", "(", "outputs", ".", "data", ",", "1", ")", "\n", "total", "+=", "labels", ".", "size", "(", "0", ")", "\n", "correct", "+=", "(", "predicted", "==", "labels", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n", "", "", "accuracy", "=", "100", "*", "correct", "/", "total", "\n", "\n", "return", "accuracy", "\n", "", "", ""]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.__init__": [[15, 19], ["torch.utils.tensorboard.SummaryWriter", "torch.utils.tensorboard.SummaryWriter", "pathlib.Path"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "device", ",", "logdir", ")", ":", "\n", "        ", "self", ".", "device", "=", "device", "\n", "self", ".", "summary_writer", "=", "SummaryWriter", "(", "log_dir", "=", "logdir", ")", "\n", "self", ".", "ckptdir", "=", "Path", "(", "logdir", ")", "/", "\"ckpt\"", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.train": [[20, 71], ["list", "list.extend", "torch.optim.Adam", "torch.optim.Adam", "trainers.ckptmngr.CheckpointManager", "trainers.ckptmngr.CheckpointManager.try_to_load", "print", "range", "encoder.parameters", "list", "encoder.train", "decoder.train", "trainers.utils.progress_bar", "mlps.MLPTrainer.summary_writer.add_scalar", "trainers.ckptmngr.CheckpointManager.save_interval", "decoder.parameters", "preps.to.to.to", "coords.to.to.to", "encoder", "decoder", "mlps.MLPTrainer.compute_loss", "torch.optim.Adam.zero_grad", "torch.optim.Adam.zero_grad", "mlps.MLPTrainer.backward", "torch.optim.Adam.step", "torch.optim.Adam.step", "mlps.MLPTrainer.item", "encoder.eval", "decoder.eval", "mlps.MLPTrainer.eval", "trainers.ckptmngr.CheckpointManager.save_best", "mlps.MLPTrainer.plot"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.ckptmngr.CheckpointManager.try_to_load", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.train", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.train", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.utils.progress_bar", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.ckptmngr.CheckpointManager.save_interval", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.compute_loss", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.eval", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.eval", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.eval", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.ckptmngr.CheckpointManager.save_best", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.plot"], ["", "def", "train", "(", "self", ",", "encoder", ",", "decoder", ",", "mlps_loader", ",", "num_epochs", ")", ":", "\n", "        ", "params", "=", "list", "(", "encoder", ".", "parameters", "(", ")", ")", "\n", "params", ".", "extend", "(", "list", "(", "decoder", ".", "parameters", "(", ")", ")", ")", "\n", "\n", "optimizer", "=", "Adam", "(", "params", ",", "lr", "=", "1e-4", ")", "\n", "\n", "elements", "=", "[", "encoder", ",", "decoder", ",", "optimizer", "]", "\n", "ckptmngr", "=", "CheckpointManager", "(", "self", ".", "ckptdir", ",", "25", ",", "lambda", "x", ",", "y", ":", "x", "-", "y", ",", "elements", ")", "\n", "\n", "start_epoch", "=", "ckptmngr", ".", "try_to_load", "(", "False", ")", "\n", "print", "(", "\"Training starting from epoch\"", ",", "start_epoch", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "start_epoch", ",", "num_epochs", ")", ":", "\n", "            ", "encoder", ".", "train", "(", ")", "\n", "decoder", ".", "train", "(", ")", "\n", "\n", "step", "=", "0", "\n", "epoch_loss", "=", "0.0", "\n", "\n", "desc", "=", "f\"{epoch} / {num_epochs}\"", "\n", "for", "preps", ",", "coords", "in", "progress_bar", "(", "mlps_loader", ",", "desc", "=", "desc", ")", ":", "\n", "                ", "preps", "=", "preps", ".", "to", "(", "self", ".", "device", ")", "\n", "coords", "=", "coords", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "embeddings", "=", "encoder", "(", "preps", ")", "\n", "predicted_preps", "=", "decoder", "(", "embeddings", ")", "\n", "\n", "loss", "=", "self", ".", "compute_loss", "(", "coords", ",", "preps", ",", "predicted_preps", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "step", "+=", "1", "\n", "\n", "epoch_loss", "+=", "loss", ".", "item", "(", ")", "\n", "\n", "", "epoch_loss", "/=", "step", "\n", "self", ".", "summary_writer", ".", "add_scalar", "(", "\"train/loss\"", ",", "epoch_loss", ",", "epoch", ")", "\n", "\n", "if", "epoch", "%", "1000", "==", "999", ":", "\n", "                ", "encoder", ".", "eval", "(", ")", "\n", "decoder", ".", "eval", "(", ")", "\n", "\n", "acc", "=", "self", ".", "eval", "(", "encoder", ",", "decoder", ",", "mlps_loader", ",", "\"train\"", ",", "epoch", ")", "\n", "\n", "ckptmngr", ".", "save_best", "(", "epoch", ",", "acc", ")", "\n", "\n", "self", ".", "plot", "(", "encoder", ",", "decoder", ",", "mlps_loader", ",", "\"train\"", ",", "epoch", ")", "\n", "\n", "", "ckptmngr", ".", "save_interval", "(", "epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.mlp_batched_forward": [[72, 93], ["range", "range", "models.mlp.MLP.params_from_prep", "len", "batched_params.append", "len", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "biases.unsqueeze", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "weights.permute"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.mlp.MLP.params_from_prep"], ["", "", "@", "staticmethod", "\n", "def", "mlp_batched_forward", "(", "coordinates", ",", "preps", ")", ":", "\n", "        ", "params", "=", "[", "MLP", ".", "params_from_prep", "(", "prep", ")", "for", "prep", "in", "preps", "]", "\n", "batched_params", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "params", "[", "0", "]", ")", ")", ":", "\n", "            ", "batched_params", ".", "append", "(", "torch", ".", "stack", "(", "[", "p", "[", "i", "]", "for", "p", "in", "params", "]", ",", "dim", "=", "0", ")", ")", "\n", "\n", "", "num_layers", "=", "len", "(", "batched_params", ")", "//", "2", "\n", "\n", "f", "=", "coordinates", "\n", "\n", "for", "i", "in", "range", "(", "num_layers", ")", ":", "\n", "            ", "weights", "=", "batched_params", "[", "i", "*", "2", "]", "\n", "biases", "=", "batched_params", "[", "i", "*", "2", "+", "1", "]", "\n", "\n", "f", "=", "f", "@", "weights", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "+", "biases", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "if", "i", "<", "num_layers", "-", "1", ":", "\n", "                ", "f", "=", "torch", ".", "sin", "(", "30", "*", "f", ")", "\n", "\n", "", "", "return", "f", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.compute_loss": [[94, 101], ["mlps.MLPTrainer.mlp_batched_forward", "torch.mse_loss", "torch.mse_loss", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "mlps.MLPTrainer.mlp_batched_forward"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.mlp_batched_forward", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.mlp_batched_forward"], ["", "def", "compute_loss", "(", "self", ",", "coords", ",", "input_preps", ",", "predicted_preps", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "y", "=", "MLPTrainer", ".", "mlp_batched_forward", "(", "coords", ",", "input_preps", ")", "\n", "", "pred", "=", "MLPTrainer", ".", "mlp_batched_forward", "(", "coords", ",", "predicted_preps", ")", "\n", "\n", "loss", "=", "F", ".", "mse_loss", "(", "pred", ",", "y", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.eval": [[102, 125], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "float", "mlps.MLPTrainer.summary_writer.add_scalar", "preps.to.to.to", "coords.to.to.to", "encoder", "decoder", "mlps.MLPTrainer.mlp_batched_forward", "mlps.MLPTrainer.mlp_batched_forward", "torch.count_nonzero", "torch.count_nonzero", "torch.count_nonzero", "torch.count_nonzero", "torch.isclose", "torch.isclose", "torch.isclose", "torch.isclose"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.mlp_batched_forward", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.mlp_batched_forward"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "eval", "(", "self", ",", "encoder", ",", "decoder", ",", "mlps_loader", ",", "logtag", ",", "epoch", ")", ":", "\n", "        ", "correct", "=", "0", "\n", "counter", "=", "0", "\n", "\n", "for", "preps", ",", "coords", "in", "mlps_loader", ":", "\n", "            ", "preps", "=", "preps", ".", "to", "(", "self", ".", "device", ")", "\n", "coords", "=", "coords", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "embeddings", "=", "encoder", "(", "preps", ")", "\n", "predicted_preps", "=", "decoder", "(", "embeddings", ")", "\n", "\n", "y", "=", "MLPTrainer", ".", "mlp_batched_forward", "(", "coords", ",", "preps", ")", "\n", "pred", "=", "MLPTrainer", ".", "mlp_batched_forward", "(", "coords", ",", "predicted_preps", ")", "\n", "correct", "+=", "torch", ".", "count_nonzero", "(", "torch", ".", "isclose", "(", "pred", ",", "y", ",", "rtol", "=", "0.0", ",", "atol", "=", "1e-2", ")", ")", "\n", "\n", "counter", "+=", "coords", ".", "shape", "[", "0", "]", "*", "coords", ".", "shape", "[", "1", "]", "\n", "\n", "", "acc", "=", "float", "(", "correct", "/", "counter", ")", "\n", "\n", "self", ".", "summary_writer", ".", "add_scalar", "(", "logtag", "+", "\"/acc\"", ",", "acc", ",", "epoch", ")", "\n", "\n", "return", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.plot": [[126, 165], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "random.sample", "enumerate", "range", "prep.to.to.to", "encoder", "decoder().squeeze", "models.mlp.MLP().to", "models.mlp.MLP().to.state_dict", "len", "prep.to.to.unsqueeze", "models.mlp.MLP.params_from_prep", "models.mlp.MLP().to.load_state_dict", "trainers.utils.sdf_to_mesh", "mlps.MLPTrainer.summary_writer.add_mesh", "models.mlp.MLP.params_from_prep", "models.mlp.MLP().to.load_state_dict", "trainers.utils.sdf_to_mesh", "mlps.MLPTrainer.summary_writer.add_mesh", "decoder", "models.mlp.MLP", "enumerate", "torch.tensor().unsqueeze", "torch.tensor().unsqueeze", "torch.tensor().unsqueeze", "torch.tensor().unsqueeze", "torch.tensor().unsqueeze", "torch.tensor().unsqueeze", "torch.tensor().unsqueeze", "torch.tensor().unsqueeze", "enumerate", "torch.tensor().unsqueeze", "torch.tensor().unsqueeze", "torch.tensor().unsqueeze", "torch.tensor().unsqueeze", "torch.tensor().unsqueeze", "torch.tensor().unsqueeze", "torch.tensor().unsqueeze", "torch.tensor().unsqueeze", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "gt_vertices.copy", "gt_faces.copy", "pred_vertices.copy", "pred_faces.copy"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.mlp.MLP.params_from_prep", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.utils.sdf_to_mesh", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.mlp.MLP.params_from_prep", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.utils.sdf_to_mesh"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "plot", "(", "self", ",", "encoder", ",", "decoder", ",", "mlps_loader", ",", "logtag", ",", "epoch", ")", ":", "\n", "        ", "dataset", "=", "mlps_loader", ".", "dataset", "\n", "indices", "=", "sample", "(", "range", "(", "len", "(", "dataset", ")", ")", ",", "4", ")", "\n", "\n", "for", "n", ",", "idx", "in", "enumerate", "(", "indices", ")", ":", "\n", "            ", "prep", ",", "_", "=", "dataset", "[", "idx", "]", "\n", "prep", "=", "prep", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "embedding", "=", "encoder", "(", "prep", ".", "unsqueeze", "(", "0", ")", ")", "\n", "predicted_prep", "=", "decoder", "(", "embedding", ")", ".", "squeeze", "(", "0", ")", "\n", "\n", "mlp", "=", "MLP", "(", "256", ",", "1", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "sd", "=", "mlp", ".", "state_dict", "(", ")", "\n", "\n", "try", ":", "\n", "                ", "params", "=", "MLP", ".", "params_from_prep", "(", "prep", ")", "\n", "sd", "=", "{", "k", ":", "params", "[", "i", "]", "for", "i", ",", "k", "in", "enumerate", "(", "sd", ")", "}", "\n", "mlp", ".", "load_state_dict", "(", "sd", ")", "\n", "gt_vertices", ",", "gt_faces", "=", "sdf_to_mesh", "(", "mlp", ",", "grid_size", "=", "128", ")", "\n", "self", ".", "summary_writer", ".", "add_mesh", "(", "\n", "logtag", "+", "f\"/gt_{n}\"", ",", "\n", "vertices", "=", "torch", ".", "tensor", "(", "gt_vertices", ".", "copy", "(", ")", ")", ".", "unsqueeze", "(", "0", ")", ",", "\n", "faces", "=", "torch", ".", "tensor", "(", "gt_faces", ".", "copy", "(", ")", ")", ".", "unsqueeze", "(", "0", ")", ",", "\n", "global_step", "=", "epoch", ",", "\n", ")", "\n", "\n", "params", "=", "MLP", ".", "params_from_prep", "(", "predicted_prep", ")", "\n", "sd", "=", "{", "k", ":", "params", "[", "i", "]", "for", "i", ",", "k", "in", "enumerate", "(", "sd", ")", "}", "\n", "mlp", ".", "load_state_dict", "(", "sd", ")", "\n", "pred_vertices", ",", "pred_faces", "=", "sdf_to_mesh", "(", "mlp", ",", "grid_size", "=", "128", ")", "\n", "self", ".", "summary_writer", ".", "add_mesh", "(", "\n", "logtag", "+", "f\"/pred_{n}\"", ",", "\n", "vertices", "=", "torch", ".", "tensor", "(", "pred_vertices", ".", "copy", "(", ")", ")", ".", "unsqueeze", "(", "0", ")", ",", "\n", "faces", "=", "torch", ".", "tensor", "(", "pred_faces", ".", "copy", "(", ")", ")", ".", "unsqueeze", "(", "0", ")", ",", "\n", "global_step", "=", "epoch", ",", "\n", ")", "\n", "", "except", ":", "\n", "                ", "pass", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.utils.adjust_learning_rate": [[11, 22], ["numpy.sum", "numpy.asarray"], "function", ["None"], ["def", "adjust_learning_rate", "(", "epoch", ",", "lr_decay_epochs", ",", "optimizer", ",", "lr_value", ",", "lr_decay_rate", "=", "0.1", ")", ":", "\n", "    ", "\"\"\"Sets the learning rate to the initial LR decayed by decay rate every steep step\"\"\"", "\n", "if", "lr_decay_epochs", "is", "not", "None", ":", "\n", "        ", "steps", "=", "np", ".", "sum", "(", "epoch", ">=", "np", ".", "asarray", "(", "lr_decay_epochs", ")", ")", "\n", "", "else", ":", "\n", "        ", "steps", "=", "0", "\n", "# print(\"current lr: \", optimizer.param_groups[0][\"lr\"])", "\n", "", "if", "steps", ">", "0", ":", "\n", "        ", "new_lr", "=", "lr_value", "*", "(", "lr_decay_rate", "**", "steps", ")", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "            ", "param_group", "[", "\"lr\"", "]", "=", "new_lr", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.utils.progress_bar": [[24, 29], ["tqdm.tqdm", "len"], "function", ["None"], ["", "", "", "def", "progress_bar", "(", "iterable", ":", "Iterable", ",", "desc", ":", "str", "=", "\"\"", ",", "ncols", "=", "60", ")", "->", "Iterable", ":", "\n", "    ", "bar_format", "=", "\"{percentage:.0f}%|{bar}| {n_fmt}/{total_fmt} [{elapsed}<{remaining}]\"", "\n", "if", "len", "(", "desc", ")", ">", "0", ":", "\n", "        ", "bar_format", "=", "\"{desc}: \"", "+", "bar_format", "\n", "", "return", "tqdm", "(", "iterable", ",", "desc", "=", "desc", ",", "bar_format", "=", "bar_format", ",", "ncols", "=", "ncols", ",", "leave", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.utils.sdf_to_mesh": [[31, 66], ["torch.no_grad", "torch.arange", "torch.zeros", "coords[].reshape", "skimage.measure.marching_cubes", "min", "coords[].cuda", "mlp().cpu", "mlp().cpu.numpy", "torch.arange.long", "torch.arange.long", "mlp"], "function", ["None"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "sdf_to_mesh", "(", "\n", "mlp", ":", "MLP", ",", "\n", "grid_size", ":", "int", "=", "256", ",", "\n", "max_batch", ":", "int", "=", "100_000", ",", "\n", ")", "->", "Tuple", "[", "np", ".", "ndarray", ",", "np", ".", "ndarray", "]", ":", "\n", "    ", "voxel_origin", "=", "[", "-", "1", ",", "-", "1", ",", "-", "1", "]", "\n", "voxel_size", "=", "2.0", "/", "(", "grid_size", "-", "1", ")", "\n", "\n", "overall_index", "=", "torch", ".", "arange", "(", "0", ",", "grid_size", "**", "3", ",", "1", ")", "\n", "coords", "=", "torch", ".", "zeros", "(", "grid_size", "**", "3", ",", "4", ")", "\n", "\n", "coords", "[", ":", ",", "2", "]", "=", "overall_index", "%", "grid_size", "\n", "coords", "[", ":", ",", "1", "]", "=", "(", "overall_index", ".", "long", "(", ")", "/", "grid_size", ")", "%", "grid_size", "\n", "coords", "[", ":", ",", "0", "]", "=", "(", "(", "overall_index", ".", "long", "(", ")", "/", "grid_size", ")", "/", "grid_size", ")", "%", "grid_size", "\n", "\n", "coords", "[", ":", ",", "0", "]", "=", "(", "coords", "[", ":", ",", "0", "]", "*", "voxel_size", ")", "+", "voxel_origin", "[", "2", "]", "\n", "coords", "[", ":", ",", "1", "]", "=", "(", "coords", "[", ":", ",", "1", "]", "*", "voxel_size", ")", "+", "voxel_origin", "[", "1", "]", "\n", "coords", "[", ":", ",", "2", "]", "=", "(", "coords", "[", ":", ",", "2", "]", "*", "voxel_size", ")", "+", "voxel_origin", "[", "0", "]", "\n", "\n", "num_samples", "=", "grid_size", "**", "3", "\n", "start", "=", "0", "\n", "\n", "while", "start", "<", "num_samples", ":", "\n", "        ", "end", "=", "min", "(", "start", "+", "max_batch", ",", "num_samples", ")", "\n", "coords_subset", "=", "coords", "[", "start", ":", "end", ",", ":", "3", "]", ".", "cuda", "(", ")", "\n", "sdf", "=", "mlp", "(", "coords_subset", ")", ".", "cpu", "(", ")", "\n", "coords", "[", "start", ":", "end", ",", "3", "]", "=", "sdf", "\n", "start", "+=", "max_batch", "\n", "\n", "", "sdf", "=", "coords", "[", ":", ",", "3", "]", ".", "reshape", "(", "grid_size", ",", "grid_size", ",", "grid_size", ")", "\n", "\n", "verts", ",", "faces", ",", "_", ",", "_", "=", "marching_cubes", "(", "sdf", ".", "numpy", "(", ")", ",", "level", "=", "0.0", ",", "spacing", "=", "[", "voxel_size", "]", "*", "3", ")", "\n", "\n", "return", "verts", ",", "faces", "\n", "", ""]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.vanillacnn.VanillaCNN.__init__": [[9, 36], ["models.basenet.BaseNet.__init__", "torch.nn.ModuleList", "vanillacnn.VanillaCNN.layers.append", "vanillacnn.VanillaCNN.layers.append", "torch.nn.Linear", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.listdset.ListDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "net_id", ":", "int", ",", "class_id", ":", "int", ",", "dataset_name", ":", "str", ")", "->", "None", ":", "\n", "        ", "super", "(", "VanillaCNN", ",", "self", ")", ".", "__init__", "(", "net_id", ",", "class_id", ")", "\n", "\n", "assert", "dataset_name", "in", "[", "TINY_IMAGENET_NAME", ",", "CIFAR10_NAME", "]", "\n", "\n", "if", "dataset_name", "==", "TINY_IMAGENET_NAME", ":", "\n", "            ", "config", "=", "[", "[", "8", ",", "3", ",", "2", "]", ",", "[", "16", ",", "3", ",", "2", "]", ",", "[", "32", ",", "3", ",", "2", "]", ",", "[", "64", ",", "3", ",", "2", "]", ",", "[", "64", ",", "3", ",", "2", "]", "]", "\n", "input_size", "=", "64", "\n", "in_ch", "=", "3", "\n", "num_classes", "=", "200", "\n", "", "else", ":", "\n", "            ", "config", "=", "[", "[", "8", ",", "3", ",", "2", "]", ",", "[", "8", ",", "3", ",", "1", "]", ",", "[", "32", ",", "3", ",", "2", "]", ",", "[", "64", ",", "3", ",", "1", "]", ",", "[", "64", ",", "3", ",", "2", "]", "]", "\n", "input_size", "=", "32", "\n", "in_ch", "=", "3", "\n", "num_classes", "=", "10", "\n", "\n", "", "tot_stride", "=", "1", "\n", "self", ".", "layers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "conf", "in", "config", ":", "\n", "            ", "out_ch", ",", "ks", ",", "stride", "=", "conf", "\n", "self", ".", "layers", ".", "append", "(", "nn", ".", "Conv2d", "(", "in_ch", ",", "out_ch", ",", "ks", ",", "stride", "=", "stride", ",", "padding", "=", "1", ")", ")", "\n", "in_ch", "=", "out_ch", "\n", "tot_stride", "*=", "stride", "\n", "\n", "", "final_size", "=", "input_size", "//", "tot_stride", "\n", "out_ch", "=", "config", "[", "-", "1", "]", "[", "0", "]", "\n", "self", ".", "layers", ".", "append", "(", "nn", ".", "Linear", "(", "final_size", "*", "final_size", "*", "out_ch", ",", "num_classes", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.vanillacnn.VanillaCNN.forward": [[37, 44], ["torch.leaky_relu.view", "torch.leaky_relu", "layer", "torch.leaky_relu.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ":", "Tensor", ")", "->", "Tensor", ":", "\n", "        ", "for", "layer", "in", "self", ".", "layers", "[", ":", "-", "1", "]", ":", "\n", "            ", "x", "=", "F", ".", "leaky_relu", "(", "layer", "(", "x", ")", ")", "\n", "", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", ")", "[", "0", "]", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "layers", "[", "-", "1", "]", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.vanillacnn.VanillaCNN.func_forward": [[45, 58], ["vanillacnn.VanillaCNN.params_from_prep", "range", "torch.leaky_relu.view", "torch.linear", "len", "torch.conv2d", "torch.leaky_relu", "torch.leaky_relu.size"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.mlp.MLP.params_from_prep"], ["", "def", "func_forward", "(", "self", ",", "x", ":", "Tensor", ",", "prep", ":", "Tensor", ")", "->", "Tensor", ":", "\n", "        ", "params", "=", "self", ".", "params_from_prep", "(", "prep", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "layers", "[", ":", "-", "1", "]", ")", ")", ":", "\n", "            ", "stride", "=", "self", ".", "layers", "[", "i", "]", ".", "stride", "\n", "idx", "=", "i", "*", "2", "\n", "x", "=", "F", ".", "conv2d", "(", "x", ",", "params", "[", "idx", "]", ",", "bias", "=", "params", "[", "idx", "+", "1", "]", ",", "stride", "=", "stride", ",", "padding", "=", "1", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "x", ")", "\n", "\n", "", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", ")", "[", "0", "]", ",", "-", "1", ")", "\n", "x", "=", "F", ".", "linear", "(", "x", ",", "params", "[", "-", "2", "]", ",", "bias", "=", "params", "[", "-", "1", "]", ")", "\n", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.encoder.Encoder.__init__": [[9, 17], ["torch.Module.__init__", "models.utils.conv_block", "models.utils.conv_block", "models.utils.conv_block", "models.utils.conv_block"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.listdset.ListDataset.__init__", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.utils.conv_block", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.utils.conv_block", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.utils.conv_block", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.utils.conv_block"], ["    ", "def", "__init__", "(", "self", ",", "emb_size", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "h", "=", "emb_size", "//", "32", "\n", "\n", "self", ".", "conv1", "=", "conv_block", "(", "1", ",", "h", ",", "(", "1", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "2", ")", ",", "padding", "=", "(", "0", ",", "1", ")", ")", "\n", "self", ".", "conv2", "=", "conv_block", "(", "h", ",", "h", "*", "2", ",", "(", "1", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "2", ")", ",", "padding", "=", "(", "0", ",", "1", ")", ")", "\n", "self", ".", "conv3", "=", "conv_block", "(", "h", "*", "2", ",", "h", "*", "4", ",", "(", "3", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "0", ")", ")", "\n", "self", ".", "conv4", "=", "conv_block", "(", "h", "*", "4", ",", "h", "*", "32", ",", "(", "3", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.encoder.Encoder.forward": [[18, 27], ["torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "encoder.Encoder.conv1", "encoder.Encoder.conv2", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "encoder.Encoder.conv3", "encoder.Encoder.conv4", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "F", ".", "leaky_relu", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "self", ".", "conv2", "(", "x", ")", ")", "\n", "x", "=", "torch", ".", "max", "(", "x", ",", "3", ",", "keepdim", "=", "True", ")", ".", "values", "\n", "x", "=", "F", ".", "leaky_relu", "(", "self", ".", "conv3", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "self", ".", "conv4", "(", "x", ")", ")", "\n", "x", "=", "torch", ".", "max", "(", "x", ",", "2", ",", "keepdim", "=", "True", ")", ".", "values", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.encoder.Encoder.save": [[28, 30], ["torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "encoder.Encoder.state_dict"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.save", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.save", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.save", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.save", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.save", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.save", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.save", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.save", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.save"], ["", "def", "save", "(", "self", ",", "path", ")", ":", "\n", "        ", "torch", ".", "save", "(", "self", ".", "state_dict", "(", ")", ",", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.encoder.Encoder.load": [[31, 33], ["encoder.Encoder.load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.load", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.load", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.load", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.load", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.load", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.load", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.load", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.load", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.load"], ["", "def", "load", "(", "self", ",", "path", ")", ":", "\n", "        ", "self", ".", "load_state_dict", "(", "torch", ".", "load", "(", "path", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet_fusedbn.BasicBlock.__init__": [[61, 67], ["torch.nn.Module.__init__", "torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.listdset.ListDataset.__init__", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.listdset.ListDataset.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "nn", ".", "Module", ".", "__init__", "(", "self", ")", "\n", "self", ".", "conv1", "=", "None", "\n", "self", ".", "conv2", "=", "None", "\n", "self", ".", "downsample", "=", "None", "\n", "self", ".", "activation", "=", "F", ".", "leaky_relu", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet_fusedbn.BasicBlock.forward": [[68, 82], ["resnet_fusedbn.BasicBlock.conv1", "resnet_fusedbn.BasicBlock.activation", "resnet_fusedbn.BasicBlock.conv2", "resnet_fusedbn.BasicBlock.activation", "resnet_fusedbn.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "activation", "(", "out", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "activation", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet_fusedbn.BasicBlock.func_forward": [[83, 98], ["torch.conv2d", "torch.conv2d", "resnet_fusedbn.BasicBlock.activation", "torch.conv2d", "torch.conv2d", "resnet_fusedbn.BasicBlock.activation", "torch.conv2d", "torch.conv2d"], "methods", ["None"], ["", "def", "func_forward", "(", "self", ",", "x", ",", "params", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "F", ".", "conv2d", "(", "x", ",", "params", "[", "0", "]", ",", "bias", "=", "params", "[", "1", "]", ",", "padding", "=", "1", ",", "stride", "=", "self", ".", "conv1", ".", "stride", ")", "\n", "out", "=", "self", ".", "activation", "(", "out", ")", "\n", "\n", "out", "=", "F", ".", "conv2d", "(", "out", ",", "params", "[", "2", "]", ",", "bias", "=", "params", "[", "3", "]", ",", "padding", "=", "1", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "F", ".", "conv2d", "(", "x", ",", "params", "[", "4", "]", ",", "bias", "=", "params", "[", "5", "]", ",", "stride", "=", "self", ".", "downsample", ".", "stride", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "activation", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet_fusedbn.BasicBlock.get_parameters": [[99, 110], ["convs.append", "parameters.append", "parameters.append"], "methods", ["None"], ["", "def", "get_parameters", "(", "self", ")", ":", "\n", "        ", "parameters", "=", "[", "]", "\n", "convs", "=", "[", "self", ".", "conv1", ",", "self", ".", "conv2", "]", "\n", "if", "self", ".", "downsample", ":", "\n", "            ", "convs", ".", "append", "(", "self", ".", "downsample", ")", "\n", "\n", "", "for", "conv", "in", "convs", ":", "\n", "            ", "parameters", ".", "append", "(", "conv", ".", "weight", ")", "\n", "parameters", ".", "append", "(", "conv", ".", "bias", ")", "\n", "\n", "", "return", "parameters", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet_fusedbn.ResNetFusedBN.__init__": [[113, 125], ["models.basenet.BaseNet.__init__", "models.resnet.ResNet", "resnet_fusedbn.ResNetFusedBN.init_like"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.listdset.ListDataset.__init__", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet_fusedbn.ResNetFusedBN.init_like"], ["    ", "def", "__init__", "(", "self", ",", "net_id", ",", "class_id", ",", "depth", ",", "dataset_name", ")", ":", "\n", "        ", "BaseNet", ".", "__init__", "(", "self", ",", "net_id", ",", "class_id", ")", "\n", "\n", "assert", "dataset_name", "in", "[", "TINY_IMAGENET_NAME", ",", "CIFAR10_NAME", "]", "\n", "self", ".", "dataset_name", "=", "dataset_name", "\n", "self", ".", "in_ch", "=", "3", "\n", "\n", "self", ".", "depth", "=", "depth", "\n", "self", ".", "activation", "=", "F", ".", "leaky_relu", "\n", "\n", "ref_net", "=", "ResNet", "(", "0", ",", "0", ",", "depth", ",", "dataset_name", ")", "\n", "self", ".", "init_like", "(", "ref_net", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet_fusedbn.ResNetFusedBN.load": [[126, 131], ["models.resnet.ResNet", "models.resnet.ResNet.eval", "models.resnet.ResNet.load", "resnet_fusedbn.ResNetFusedBN.init_from_ref_net"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.eval", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.load", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet_fusedbn.ResNetFusedBN.init_from_ref_net"], ["", "def", "load", "(", "self", ",", "path", ":", "str", ")", "->", "None", ":", "\n", "        ", "ref_net", "=", "ResNet", "(", "0", ",", "0", ",", "self", ".", "depth", ",", "self", ".", "dataset_name", ")", "\n", "ref_net", ".", "eval", "(", ")", "\n", "ref_net", ".", "load", "(", "path", ")", "\n", "self", ".", "init_from_ref_net", "(", "ref_net", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet_fusedbn.ResNetFusedBN.init_from_ref_net": [[132, 147], ["resnet_fusedbn.fuse_conv_and_bn", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.AvgPool2d", "torch.nn.AvgPool2d", "resnet_fusedbn.ResNetFusedBN.layers.append", "resnet_fusedbn.fuse_block_convs_and_bns", "blocks.append", "torch.nn.Sequential", "torch.nn.Sequential"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet_fusedbn.fuse_conv_and_bn", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet_fusedbn.fuse_block_convs_and_bns"], ["", "def", "init_from_ref_net", "(", "self", ",", "ref_net", ")", ":", "\n", "        ", "self", ".", "conv1", "=", "fuse_conv_and_bn", "(", "ref_net", ".", "conv1", ",", "ref_net", ".", "bn1", ")", "\n", "\n", "ref_layers", "=", "[", "ref_net", ".", "layer1", ",", "ref_net", ".", "layer2", ",", "ref_net", ".", "layer3", "]", "\n", "self", ".", "layers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "layer", "in", "ref_layers", ":", "\n", "            ", "blocks", "=", "[", "]", "\n", "for", "block", "in", "layer", ":", "\n", "                ", "fused_block", "=", "fuse_block_convs_and_bns", "(", "block", ")", "\n", "fused_block", ".", "activation", "=", "self", ".", "activation", "\n", "blocks", ".", "append", "(", "fused_block", ")", "\n", "", "self", ".", "layers", ".", "append", "(", "nn", ".", "Sequential", "(", "*", "blocks", ")", ")", "\n", "\n", "", "self", ".", "avgpool", "=", "nn", ".", "AvgPool2d", "(", "8", ")", "\n", "self", ".", "fc", "=", "ref_net", ".", "fc", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet_fusedbn.ResNetFusedBN.init_like": [[148, 163], ["resnet_fusedbn.get_conv_like", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.AvgPool2d", "torch.nn.AvgPool2d", "torch.nn.Linear", "torch.nn.Linear", "resnet_fusedbn.ResNetFusedBN.layers.append", "resnet_fusedbn.get_block_like", "blocks.append", "torch.nn.Sequential", "torch.nn.Sequential"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet_fusedbn.get_conv_like", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet_fusedbn.get_block_like"], ["", "def", "init_like", "(", "self", ",", "ref_net", ")", ":", "\n", "        ", "self", ".", "conv1", "=", "get_conv_like", "(", "ref_net", ".", "conv1", ")", "\n", "\n", "ref_layers", "=", "[", "ref_net", ".", "layer1", ",", "ref_net", ".", "layer2", ",", "ref_net", ".", "layer3", "]", "\n", "self", ".", "layers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "layer", "in", "ref_layers", ":", "\n", "            ", "blocks", "=", "[", "]", "\n", "for", "block", "in", "layer", ":", "\n", "                ", "new_block", "=", "get_block_like", "(", "block", ")", "\n", "new_block", ".", "activation", "=", "self", ".", "activation", "\n", "blocks", ".", "append", "(", "new_block", ")", "\n", "", "self", ".", "layers", ".", "append", "(", "nn", ".", "Sequential", "(", "*", "blocks", ")", ")", "\n", "\n", "", "self", ".", "avgpool", "=", "nn", ".", "AvgPool2d", "(", "8", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "ref_net", ".", "fc", ".", "weight", ".", "shape", "[", "1", "]", ",", "ref_net", ".", "fc", ".", "weight", ".", "shape", "[", "0", "]", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet_fusedbn.ResNetFusedBN.forward": [[164, 176], ["resnet_fusedbn.ResNetFusedBN.conv1", "resnet_fusedbn.ResNetFusedBN.activation", "resnet_fusedbn.ResNetFusedBN.avgpool", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "resnet_fusedbn.ResNetFusedBN.fc", "layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "\n", "for", "layer", "in", "self", ".", "layers", ":", "\n", "            ", "x", "=", "layer", "(", "x", ")", "\n", "\n", "", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "torch", ".", "flatten", "(", "x", ",", "1", ")", "\n", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet_fusedbn.ResNetFusedBN.func_forward": [[177, 196], ["resnet_fusedbn.ResNetFusedBN.params_from_prep", "torch.conv2d", "torch.conv2d", "resnet_fusedbn.ResNetFusedBN.activation", "torch.avg_pool2d", "torch.avg_pool2d", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.linear", "torch.linear", "block.func_forward", "len", "block.get_parameters"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.mlp.MLP.params_from_prep", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.lenetlike.LeNetLike.func_forward", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet.ResNet.get_parameters"], ["", "def", "func_forward", "(", "self", ",", "x", ",", "prep", ")", ":", "\n", "        ", "params", "=", "self", ".", "params_from_prep", "(", "prep", ")", "\n", "\n", "x", "=", "F", ".", "conv2d", "(", "x", ",", "params", "[", "0", "]", ",", "bias", "=", "params", "[", "1", "]", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "\n", "params_start", "=", "2", "\n", "\n", "for", "layer", "in", "self", ".", "layers", ":", "\n", "            ", "for", "block", "in", "layer", ":", "\n", "                ", "params_end", "=", "params_start", "+", "len", "(", "block", ".", "get_parameters", "(", ")", ")", "\n", "x", "=", "block", ".", "func_forward", "(", "x", ",", "params", "[", "params_start", ":", "params_end", "]", ")", "\n", "params_start", "=", "params_end", "\n", "\n", "", "", "x", "=", "F", ".", "avg_pool2d", "(", "x", ",", "8", ")", "\n", "x", "=", "torch", ".", "flatten", "(", "x", ",", "1", ")", "\n", "x", "=", "F", ".", "linear", "(", "x", ",", "params", "[", "params_start", "]", ",", "bias", "=", "params", "[", "params_start", "+", "1", "]", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet_fusedbn.ResNetFusedBN.get_parameters": [[197, 211], ["parameters.append", "parameters.append", "parameters.append", "parameters.append", "parameters.extend", "block.get_parameters"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet.ResNet.get_parameters"], ["", "def", "get_parameters", "(", "self", ")", ":", "\n", "        ", "parameters", "=", "[", "]", "\n", "\n", "parameters", ".", "append", "(", "self", ".", "conv1", ".", "weight", ")", "\n", "parameters", ".", "append", "(", "self", ".", "conv1", ".", "bias", ")", "\n", "\n", "for", "layer", "in", "self", ".", "layers", ":", "\n", "            ", "for", "block", "in", "layer", ":", "\n", "                ", "parameters", ".", "extend", "(", "block", ".", "get_parameters", "(", ")", ")", "\n", "\n", "", "", "parameters", ".", "append", "(", "self", ".", "fc", ".", "weight", ")", "\n", "parameters", ".", "append", "(", "self", ".", "fc", ".", "bias", ")", "\n", "\n", "return", "parameters", "\n", "", "", ""]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet_fusedbn.fuse_conv_and_bn": [[10, 28], ["torch.sqrt", "torch.sqrt", "torch.nn.Conv2d", "torch.nn.Parameter", "torch.nn.Parameter", "mean.new_zeros"], "function", ["None"], ["def", "fuse_conv_and_bn", "(", "conv", ",", "bn", ")", ":", "\n", "    ", "w", "=", "conv", ".", "weight", "\n", "mean", "=", "bn", ".", "running_mean", "\n", "var_sqrt", "=", "torch", ".", "sqrt", "(", "bn", ".", "running_var", "+", "bn", ".", "eps", ")", "\n", "beta", "=", "bn", ".", "weight", "\n", "gamma", "=", "bn", ".", "bias", "\n", "if", "conv", ".", "bias", "is", "not", "None", ":", "\n", "        ", "b", "=", "conv", ".", "bias", "\n", "", "else", ":", "\n", "        ", "b", "=", "mean", ".", "new_zeros", "(", "mean", ".", "shape", ")", "\n", "", "w", "=", "w", "*", "(", "beta", "/", "var_sqrt", ")", ".", "reshape", "(", "[", "conv", ".", "out_channels", ",", "1", ",", "1", ",", "1", "]", ")", "\n", "b", "=", "(", "b", "-", "mean", ")", "/", "var_sqrt", "*", "beta", "+", "gamma", "\n", "fused_conv", "=", "nn", ".", "Conv2d", "(", "\n", "conv", ".", "in_channels", ",", "conv", ".", "out_channels", ",", "conv", ".", "kernel_size", ",", "conv", ".", "stride", ",", "conv", ".", "padding", ",", "bias", "=", "True", "\n", ")", "\n", "fused_conv", ".", "weight", "=", "nn", ".", "Parameter", "(", "w", ")", "\n", "fused_conv", ".", "bias", "=", "nn", ".", "Parameter", "(", "b", ")", "\n", "return", "fused_conv", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet_fusedbn.fuse_block_convs_and_bns": [[30, 38], ["resnet_fusedbn.BasicBlock", "resnet_fusedbn.fuse_conv_and_bn", "resnet_fusedbn.fuse_conv_and_bn", "resnet_fusedbn.fuse_conv_and_bn"], "function", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet_fusedbn.fuse_conv_and_bn", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet_fusedbn.fuse_conv_and_bn", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet_fusedbn.fuse_conv_and_bn"], ["", "def", "fuse_block_convs_and_bns", "(", "block", ")", ":", "\n", "    ", "fused_block", "=", "BasicBlock", "(", ")", "\n", "fused_block", ".", "conv1", "=", "fuse_conv_and_bn", "(", "block", ".", "conv1", ",", "block", ".", "bn1", ")", "\n", "fused_block", ".", "conv2", "=", "fuse_conv_and_bn", "(", "block", ".", "conv2", ",", "block", ".", "bn2", ")", "\n", "if", "block", ".", "downsample", "is", "not", "None", ":", "\n", "        ", "fused_block", ".", "downsample", "=", "fuse_conv_and_bn", "(", "block", ".", "downsample", "[", "0", "]", ",", "block", ".", "downsample", "[", "1", "]", ")", "\n", "\n", "", "return", "fused_block", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet_fusedbn.get_conv_like": [[40, 48], ["torch.nn.Conv2d"], "function", ["None"], ["", "def", "get_conv_like", "(", "conv", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "\n", "conv", ".", "in_channels", ",", "\n", "conv", ".", "out_channels", ",", "\n", "conv", ".", "kernel_size", ",", "\n", "conv", ".", "stride", ",", "\n", "conv", ".", "padding", ",", "\n", "bias", "=", "True", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet_fusedbn.get_block_like": [[51, 58], ["resnet_fusedbn.BasicBlock", "resnet_fusedbn.get_conv_like", "resnet_fusedbn.get_conv_like", "resnet_fusedbn.get_conv_like"], "function", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet_fusedbn.get_conv_like", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet_fusedbn.get_conv_like", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet_fusedbn.get_conv_like"], ["", "def", "get_block_like", "(", "block", ")", ":", "\n", "    ", "new_block", "=", "BasicBlock", "(", ")", "\n", "new_block", ".", "conv1", "=", "get_conv_like", "(", "block", ".", "conv1", ")", "\n", "new_block", ".", "conv2", "=", "get_conv_like", "(", "block", ".", "conv2", ")", "\n", "if", "block", ".", "downsample", "is", "not", "None", ":", "\n", "        ", "new_block", ".", "downsample", "=", "get_conv_like", "(", "block", ".", "downsample", "[", "0", "]", ")", "\n", "", "return", "new_block", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.__init__": [[10, 16], ["torch.Module.__init__", "torch.Module.__init__", "torch.Module.__init__", "abc.ABC.__init__"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.listdset.ListDataset.__init__", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.listdset.ListDataset.__init__", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.listdset.ListDataset.__init__", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.listdset.ListDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "net_id", ":", "int", ",", "class_id", ":", "int", ")", "->", "None", ":", "\n", "        ", "nn", ".", "Module", ".", "__init__", "(", "self", ")", "\n", "ABC", ".", "__init__", "(", "self", ")", "\n", "self", ".", "id", "=", "net_id", "\n", "self", ".", "score", "=", "-", "1", "\n", "self", ".", "class_id", "=", "class_id", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.forward": [[17, 20], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "forward", "(", "self", ",", "x", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.func_forward": [[21, 24], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "func_forward", "(", "self", ",", "x", ":", "torch", ".", "Tensor", ",", "prep", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.save": [[25, 29], ["basenet.BaseNet.state_dict", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "sd[].to"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.save", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.save", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.save", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.save", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.save", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.save", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.save", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.save", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.save"], ["", "def", "save", "(", "self", ",", "path", ":", "str", ")", "->", "None", ":", "\n", "        ", "sd", "=", "self", ".", "state_dict", "(", ")", "\n", "cpusd", "=", "{", "k", ":", "sd", "[", "k", "]", ".", "to", "(", "\"cpu\"", ")", "for", "k", "in", "sd", "}", "\n", "torch", ".", "save", "(", "cpusd", ",", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.load": [[30, 32], ["basenet.BaseNet.load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.load", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.load", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.load", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.load", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.load", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.load", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.load", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.load", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.load"], ["", "def", "load", "(", "self", ",", "path", ":", "str", ")", "->", "None", ":", "\n", "        ", "self", ".", "load_state_dict", "(", "torch", ".", "load", "(", "path", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.get_parameters": [[33, 35], ["list", "basenet.BaseNet.parameters"], "methods", ["None"], ["", "def", "get_parameters", "(", "self", ")", "->", "List", "[", "torch", ".", "Tensor", "]", ":", "\n", "        ", "return", "list", "(", "self", ".", "parameters", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.get_prep": [[36, 67], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.pad", "torch.pad", "torch.pad", "prep.unsqueeze.unsqueeze.unsqueeze", "basenet.BaseNet.get_parameters", "p.view", "len", "torch.pad", "torch.pad", "torch.pad", "param_rows.append", "torch.pad.numel"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet.ResNet.get_parameters"], ["", "def", "get_prep", "(", "\n", "self", ",", "\n", "prep_size", ":", "Tuple", "[", "int", ",", "int", "]", ",", "\n", "parameters", ":", "List", "[", "torch", ".", "Tensor", "]", "=", "None", ",", "\n", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "if", "parameters", "is", "not", "None", ":", "\n", "            ", "params", "=", "parameters", "\n", "", "else", ":", "\n", "            ", "params", "=", "self", ".", "get_parameters", "(", ")", "\n", "\n", "", "height", "=", "prep_size", "[", "0", "]", "\n", "width", "=", "prep_size", "[", "1", "]", "\n", "\n", "flatten_params", "=", "[", "p", ".", "view", "(", "-", "1", ")", "for", "p", "in", "params", "]", "\n", "all_params", "=", "torch", ".", "cat", "(", "flatten_params", ",", "dim", "=", "0", ")", "\n", "param_rows", "=", "[", "]", "\n", "\n", "start", "=", "0", "\n", "while", "start", "<", "len", "(", "all_params", ")", ":", "\n", "            ", "row", "=", "all_params", "[", "start", ":", "start", "+", "width", "]", "\n", "row", "=", "F", ".", "pad", "(", "row", ",", "[", "0", ",", "width", "-", "row", ".", "numel", "(", ")", "]", ",", "\"constant\"", ",", "0", ")", "\n", "param_rows", ".", "append", "(", "row", ")", "\n", "start", "+=", "width", "\n", "\n", "", "prep", "=", "torch", ".", "stack", "(", "param_rows", ",", "dim", "=", "0", ")", "\n", "\n", "prep", "=", "F", ".", "pad", "(", "prep", ",", "[", "0", ",", "0", ",", "0", ",", "height", "-", "prep", ".", "shape", "[", "0", "]", "]", ",", "\"constant\"", ",", "0", ")", "\n", "\n", "prep", "=", "prep", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "return", "prep", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.get_layers": [[68, 70], ["list", "basenet.BaseNet.children"], "methods", ["None"], ["", "def", "get_layers", "(", "self", ")", "->", "List", "[", "nn", ".", "Module", "]", ":", "\n", "        ", "return", "list", "(", "self", ".", "children", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.params_from_prep": [[71, 83], ["prep.squeeze.squeeze.squeeze", "prep.squeeze.squeeze.view", "basenet.BaseNet.get_parameters", "params.append", "mask.numel", "flatten_prep[].view"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet.ResNet.get_parameters"], ["", "def", "params_from_prep", "(", "self", ",", "prep", ":", "torch", ".", "Tensor", ")", "->", "List", "[", "torch", ".", "Tensor", "]", ":", "\n", "        ", "prep", "=", "prep", ".", "squeeze", "(", "0", ")", "\n", "flatten_prep", "=", "prep", ".", "view", "(", "-", "1", ")", "\n", "masks", "=", "self", ".", "get_parameters", "(", ")", "\n", "params", "=", "[", "]", "\n", "start", "=", "0", "\n", "for", "mask", "in", "masks", ":", "\n", "            ", "end", "=", "start", "+", "mask", ".", "numel", "(", ")", "\n", "params", ".", "append", "(", "flatten_prep", "[", "start", ":", "end", "]", ".", "view", "(", "mask", ".", "shape", ")", ")", "\n", "start", "=", "end", "\n", "\n", "", "return", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.num_parameters": [[84, 86], ["sum", "p.numel", "basenet.BaseNet.parameters"], "methods", ["None"], ["", "def", "num_parameters", "(", "self", ")", "->", "int", ":", "\n", "        ", "return", "sum", "(", "p", ".", "numel", "(", ")", "for", "p", "in", "self", ".", "parameters", "(", ")", "if", "p", ".", "requires_grad", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.decoder.Decoder.__init__": [[8, 28], ["torch.nn.Module.__init__", "models.utils.conv_block", "models.utils.conv_block", "models.utils.conv_block", "models.utils.conv_block", "models.utils.ScaleLayer", "models.utils.conv_block", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.listdset.ListDataset.__init__", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.utils.conv_block", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.utils.conv_block", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.utils.conv_block", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.utils.conv_block", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.utils.conv_block"], ["    ", "def", "__init__", "(", "self", ",", "out_nets", ",", "emb_size", ",", "prep_size", ",", "arch_prediction", "=", "False", ",", "num_archs", "=", "4", ")", ":", "\n", "        ", "super", "(", "Decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "out_nets", "=", "out_nets", "\n", "self", ".", "prep_height", "=", "prep_size", "[", "0", "]", "\n", "self", ".", "prep_width", "=", "prep_size", "[", "1", "]", "\n", "self", ".", "arch_prediction", "=", "arch_prediction", "\n", "\n", "if", "self", ".", "arch_prediction", ":", "\n", "            ", "self", ".", "arch_conv", "=", "conv_block", "(", "1", ",", "10", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "arch_classifier", "=", "nn", ".", "Linear", "(", "10", "*", "emb_size", "//", "4", ",", "num_archs", ")", "\n", "\n", "", "self", ".", "in_ch", "=", "emb_size", "//", "4096", "\n", "\n", "self", ".", "conv1", "=", "conv_block", "(", "self", ".", "in_ch", ",", "self", ".", "prep_height", "*", "256", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv2", "=", "conv_block", "(", "32", "*", "4", ",", "self", ".", "prep_width", "//", "8", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv3", "=", "conv_block", "(", "16", "*", "32", ",", "256", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv4", "=", "conv_block", "(", "256", ",", "32", ",", "3", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "scalelayer", "=", "ScaleLayer", "(", "prep_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.decoder.Decoder.forward": [[29, 53], ["decoder.Decoder.view", "activation", "decoder.Decoder.view", "activation", "decoder.Decoder.view", "activation", "decoder.Decoder.view", "decoder.Decoder.conv4", "decoder.Decoder.view", "decoder.Decoder.scalelayer", "activation", "x_fc.view.view.view", "decoder.Decoder.arch_classifier", "decoder.Decoder.conv1", "decoder.Decoder.conv2", "decoder.Decoder.conv3", "decoder.Decoder.arch_conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "activation", "=", "F", ".", "leaky_relu", "\n", "x", "=", "x", ".", "view", "(", "(", "x", ".", "shape", "[", "0", "]", ",", "self", ".", "in_ch", ",", "64", ",", "64", ")", ")", "\n", "\n", "if", "self", ".", "arch_prediction", ":", "\n", "            ", "x_fc", "=", "activation", "(", "self", ".", "arch_conv", "(", "x", ")", ")", "\n", "x_fc", "=", "x_fc", ".", "view", "(", "x_fc", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "arch_scores", "=", "self", ".", "arch_classifier", "(", "x_fc", ")", "\n", "\n", "", "x", "=", "activation", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "x", "=", "x", ".", "view", "(", "(", "x", ".", "shape", "[", "0", "]", ",", "32", "*", "4", ",", "self", ".", "prep_height", ",", "32", "*", "64", ")", ")", "\n", "x", "=", "activation", "(", "self", ".", "conv2", "(", "x", ")", ")", "\n", "x", "=", "x", ".", "view", "(", "(", "x", ".", "shape", "[", "0", "]", ",", "16", "*", "32", ",", "self", ".", "prep_height", "//", "2", ",", "self", ".", "prep_width", "//", "4", ")", ")", "\n", "x", "=", "activation", "(", "self", ".", "conv3", "(", "x", ")", ")", "\n", "x", "=", "x", ".", "view", "(", "(", "x", ".", "shape", "[", "0", "]", ",", "256", ",", "self", ".", "prep_height", "//", "4", ",", "self", ".", "prep_width", "//", "8", ")", ")", "\n", "x", "=", "self", ".", "conv4", "(", "x", ")", "\n", "prep", "=", "x", ".", "view", "(", "(", "x", ".", "shape", "[", "0", "]", ",", "1", ",", "self", ".", "prep_height", ",", "self", ".", "prep_width", ")", ")", "\n", "\n", "prep", "=", "self", ".", "scalelayer", "(", "prep", ")", "\n", "\n", "if", "self", ".", "arch_prediction", ":", "\n", "            ", "return", "arch_scores", ",", "prep", "\n", "", "else", ":", "\n", "            ", "return", "prep", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet.BasicBlock.__init__": [[11, 26], ["torchvision.models.resnet.BasicBlock.__init__", "torch.nn.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.listdset.ListDataset.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "inplanes", ",", "\n", "planes", ",", "\n", "stride", "=", "1", ",", "\n", "downsample", "=", "None", ",", "\n", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "\n", "dilation", "=", "1", ",", "\n", "norm_layer", "=", "None", ",", "\n", ")", ":", "\n", "        ", "TorchBasicBlock", ".", "__init__", "(", "\n", "self", ",", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ",", "groups", ",", "base_width", ",", "dilation", ",", "norm_layer", "\n", ")", "\n", "self", ".", "relu", "=", "nn", ".", "LeakyReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet.BasicBlock.forward": [[27, 29], ["torchvision.models.resnet.BasicBlock.forward"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.utils.ScaleLayer.forward"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "TorchBasicBlock", ".", "forward", "(", "self", ",", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet.BasicBlock.get_parameters": [[30, 46], ["range", "convs.append", "bns.append", "len", "parameters.append", "parameters.append", "parameters.append", "parameters.append", "parameters.append"], "methods", ["None"], ["", "def", "get_parameters", "(", "self", ")", ":", "\n", "        ", "parameters", "=", "[", "]", "\n", "convs", "=", "[", "self", ".", "conv1", ",", "self", ".", "conv2", "]", "\n", "bns", "=", "[", "self", ".", "bn1", ",", "self", ".", "bn2", "]", "\n", "if", "self", ".", "downsample", ":", "\n", "            ", "convs", ".", "append", "(", "self", ".", "downsample", "[", "0", "]", ")", "\n", "bns", ".", "append", "(", "self", ".", "downsample", "[", "1", "]", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "len", "(", "convs", ")", ")", ":", "\n", "            ", "parameters", ".", "append", "(", "convs", "[", "i", "]", ".", "weight", ")", "\n", "parameters", ".", "append", "(", "bns", "[", "i", "]", ".", "running_mean", ")", "\n", "parameters", ".", "append", "(", "bns", "[", "i", "]", ".", "running_var", ")", "\n", "parameters", ".", "append", "(", "bns", "[", "i", "]", ".", "weight", ")", "\n", "parameters", ".", "append", "(", "bns", "[", "i", "]", ".", "bias", ")", "\n", "\n", "", "return", "parameters", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet.ResNet.__init__": [[49, 97], ["models.basenet.BaseNet.__init__", "torch.nn.Conv2d", "resnet.ResNet._norm_layer", "torch.nn.LeakyReLU", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "torch.nn.AvgPool2d", "torch.nn.Linear", "resnet.ResNet.modules", "isinstance", "torch.nn.init.kaiming_normal_", "isinstance", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.listdset.ListDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "net_id", ":", "int", ",", "class_id", ":", "int", ",", "depth", ":", "int", ",", "dataset_name", ":", "str", ")", "->", "None", ":", "\n", "        ", "BaseNet", ".", "__init__", "(", "self", ",", "net_id", ",", "class_id", ")", "\n", "\n", "assert", "dataset_name", "in", "[", "TINY_IMAGENET_NAME", ",", "CIFAR10_NAME", "]", "\n", "\n", "if", "dataset_name", "==", "TINY_IMAGENET_NAME", ":", "\n", "            ", "in_ch", "=", "3", "\n", "num_classes", "=", "200", "\n", "out_mul", "=", "4", "\n", "", "else", ":", "\n", "            ", "in_ch", "=", "3", "\n", "num_classes", "=", "10", "\n", "out_mul", "=", "1", "\n", "\n", "", "self", ".", "dilation", "=", "1", "\n", "self", ".", "groups", "=", "1", "\n", "self", ".", "base_width", "=", "64", "\n", "\n", "error_msg", "=", "\"Depth should be 6n+2, e.g. 20, 32, 44, 56, 110, 1202\"", "\n", "assert", "(", "depth", "-", "2", ")", "%", "6", "==", "0", ",", "error_msg", "\n", "n", "=", "(", "depth", "-", "2", ")", "//", "6", "\n", "block", "=", "BasicBlock", "\n", "\n", "self", ".", "_norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "\n", "num_filters", "=", "[", "16", ",", "16", ",", "32", ",", "64", "]", "\n", "\n", "self", ".", "inplanes", "=", "num_filters", "[", "0", "]", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_ch", ",", "self", ".", "inplanes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "self", ".", "_norm_layer", "(", "self", ".", "inplanes", ")", "\n", "self", ".", "leaky_relu", "=", "nn", ".", "LeakyReLU", "(", "inplace", "=", "True", ")", "\n", "# H/2 x W/2", "\n", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "num_filters", "[", "1", "]", ",", "n", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "num_filters", "[", "2", "]", ",", "n", ",", "stride", "=", "2", ")", "\n", "# H/4 x W/4", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "num_filters", "[", "3", "]", ",", "n", ",", "stride", "=", "2", ")", "\n", "# H/8 x H/8", "\n", "self", ".", "avgpool", "=", "nn", ".", "AvgPool2d", "(", "8", ")", "\n", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "num_filters", "[", "3", "]", "*", "block", ".", "expansion", "*", "out_mul", ",", "num_classes", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "\"fan_out\"", ",", "nonlinearity", "=", "\"relu\"", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "(", "nn", ".", "BatchNorm2d", ",", "nn", ".", "GroupNorm", ")", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet.ResNet._forward_impl": [[98, 112], ["resnet.ResNet.conv1", "resnet.ResNet.bn1", "resnet.ResNet.leaky_relu", "resnet.ResNet.layer1", "resnet.ResNet.layer2", "resnet.ResNet.layer3", "resnet.ResNet.avgpool", "torch.flatten", "resnet.ResNet.fc"], "methods", ["None"], ["", "", "", "def", "_forward_impl", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "leaky_relu", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "torch", ".", "flatten", "(", "x", ",", "1", ")", "\n", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet.ResNet.forward": [[113, 115], ["resnet.ResNet._forward_impl"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet.ResNet._forward_impl"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "_forward_impl", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet.ResNet.func_forward": [[116, 118], ["None"], "methods", ["None"], ["", "def", "func_forward", "(", "self", ",", "x", ",", "prep", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet.ResNet.get_parameters": [[119, 137], ["parameters.append", "parameters.append", "parameters.append", "parameters.append", "parameters.append", "parameters.append", "parameters.append", "parameters.extend", "block.get_parameters"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.resnet.ResNet.get_parameters"], ["", "def", "get_parameters", "(", "self", ")", ":", "\n", "        ", "parameters", "=", "[", "]", "\n", "\n", "parameters", ".", "append", "(", "self", ".", "conv1", ".", "weight", ")", "\n", "parameters", ".", "append", "(", "self", ".", "bn1", ".", "running_mean", ")", "\n", "parameters", ".", "append", "(", "self", ".", "bn1", ".", "running_var", ")", "\n", "parameters", ".", "append", "(", "self", ".", "bn1", ".", "weight", ")", "\n", "parameters", ".", "append", "(", "self", ".", "bn1", ".", "bias", ")", "\n", "\n", "layers", "=", "[", "self", ".", "layer1", ",", "self", ".", "layer2", ",", "self", ".", "layer3", "]", "\n", "for", "layer", "in", "layers", ":", "\n", "            ", "for", "block", "in", "layer", ":", "\n", "                ", "parameters", ".", "extend", "(", "block", ".", "get_parameters", "(", ")", ")", "\n", "\n", "", "", "parameters", ".", "append", "(", "self", ".", "fc", ".", "weight", ")", "\n", "parameters", ".", "append", "(", "self", ".", "fc", ".", "bias", ")", "\n", "\n", "return", "parameters", "\n", "", "", ""]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.mlp.Sine.__init__": [[10, 12], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.listdset.ListDataset.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.mlp.Sine.forward": [[13, 15], ["torch.sin", "torch.sin", "torch.sin", "torch.sin"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "torch", ".", "sin", "(", "30", "*", "input", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.mlp.MLP.__init__": [[32, 48], ["torch.nn.Module.__init__", "layers.append", "layers.append", "range", "layers.append", "torch.nn.Sequential", "torch.nn.Sequential", "mlp.MLP.mlp.apply", "mlp.MLP.mlp[].apply", "torch.nn.Linear", "torch.nn.Linear", "mlp.Sine", "layers.append", "layers.append", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "mlp.Sine"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.listdset.ListDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "hidden_dim", ":", "int", ",", "num_hidden_layers", ":", "int", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "layers", "=", "[", "]", "\n", "\n", "layers", ".", "append", "(", "nn", ".", "Linear", "(", "3", ",", "hidden_dim", ")", ")", "\n", "layers", ".", "append", "(", "Sine", "(", ")", ")", "\n", "for", "_", "in", "range", "(", "num_hidden_layers", ")", ":", "\n", "            ", "layers", ".", "append", "(", "nn", ".", "Linear", "(", "hidden_dim", ",", "hidden_dim", ")", ")", "\n", "layers", ".", "append", "(", "Sine", "(", ")", ")", "\n", "", "layers", ".", "append", "(", "nn", ".", "Linear", "(", "hidden_dim", ",", "1", ")", ")", "\n", "\n", "self", ".", "mlp", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n", "self", ".", "mlp", ".", "apply", "(", "weights_init", ")", "\n", "self", ".", "mlp", "[", "0", "]", ".", "apply", "(", "first_layer_weights_init", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.mlp.MLP.forward": [[49, 51], ["mlp.MLP.mlp().squeeze", "mlp.MLP.mlp"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "coordinates", ":", "Tensor", ")", "->", "Tensor", ":", "\n", "        ", "return", "self", ".", "mlp", "(", "coordinates", ")", ".", "squeeze", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.mlp.MLP.num_parameters": [[52, 54], ["sum", "p.numel", "mlp.MLP.parameters"], "methods", ["None"], ["", "def", "num_parameters", "(", "self", ")", "->", "int", ":", "\n", "        ", "return", "sum", "(", "[", "p", ".", "numel", "(", ")", "for", "p", "in", "self", ".", "parameters", "(", ")", "if", "p", ".", "requires_grad", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.mlp.MLP.get_prep": [[55, 74], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.pad", "torch.pad", "torch.pad.unsqueeze", "len", "torch.pad", "torch.pad", "rows.append", "p.view", "torch.pad.numel"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_prep", "(", "params", ":", "List", "[", "Tensor", "]", ",", "prep_shape", ":", "Tuple", "[", "int", ",", "int", "]", ")", "->", "Tensor", ":", "\n", "        ", "height", "=", "prep_shape", "[", "0", "]", "\n", "width", "=", "prep_shape", "[", "1", "]", "\n", "\n", "all_params", "=", "torch", ".", "cat", "(", "[", "p", ".", "view", "(", "-", "1", ")", "for", "p", "in", "params", "]", ",", "dim", "=", "0", ")", "\n", "\n", "rows", "=", "[", "]", "\n", "start", "=", "0", "\n", "while", "start", "<", "len", "(", "all_params", ")", ":", "\n", "            ", "row", "=", "all_params", "[", "start", ":", "start", "+", "width", "]", "\n", "row", "=", "F", ".", "pad", "(", "row", ",", "[", "0", ",", "width", "-", "row", ".", "numel", "(", ")", "]", ",", "\"constant\"", ",", "0", ")", "\n", "rows", ".", "append", "(", "row", ")", "\n", "start", "+=", "width", "\n", "\n", "", "prep", "=", "torch", ".", "stack", "(", "rows", ",", "dim", "=", "0", ")", "\n", "prep", "=", "F", ".", "pad", "(", "prep", ",", "[", "0", ",", "0", ",", "0", ",", "height", "-", "prep", ".", "shape", "[", "0", "]", "]", ",", "\"constant\"", ",", "0", ")", "\n", "\n", "return", "prep", ".", "unsqueeze", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.mlp.MLP.params_from_prep": [[75, 91], ["MLP.MLP", "list", "prep.squeeze.squeeze.squeeze", "prep.squeeze.squeeze.view", "MLP.parameters", "params.append", "mask.numel", "flatten_prep[].view"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "params_from_prep", "(", "prep", ":", "Tensor", ")", "->", "List", "[", "Tensor", "]", ":", "\n", "        ", "mlp", "=", "MLP", "(", "256", ",", "1", ")", "\n", "masks", "=", "list", "(", "mlp", ".", "parameters", "(", ")", ")", "\n", "\n", "prep", "=", "prep", ".", "squeeze", "(", "0", ")", "\n", "flatten_prep", "=", "prep", ".", "view", "(", "-", "1", ")", "\n", "\n", "params", "=", "[", "]", "\n", "start", "=", "0", "\n", "for", "mask", "in", "masks", ":", "\n", "            ", "end", "=", "start", "+", "mask", ".", "numel", "(", ")", "\n", "params", ".", "append", "(", "flatten_prep", "[", "start", ":", "end", "]", ".", "view", "(", "mask", ".", "shape", ")", ")", "\n", "start", "=", "end", "\n", "\n", "", "return", "params", "\n", "", "", ""]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.mlp.weights_init": [[17, 22], ["torch.no_grad", "torch.no_grad", "hasattr", "m.weight.size", "m.weight.uniform_", "numpy.sqrt", "numpy.sqrt"], "function", ["None"], ["", "", "def", "weights_init", "(", "m", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "if", "hasattr", "(", "m", ",", "\"weight\"", ")", ":", "\n", "            ", "num_input", "=", "m", ".", "weight", ".", "size", "(", "-", "1", ")", "\n", "m", ".", "weight", ".", "uniform_", "(", "-", "np", ".", "sqrt", "(", "6", "/", "num_input", ")", "/", "30", ",", "np", ".", "sqrt", "(", "6", "/", "num_input", ")", "/", "30", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.mlp.first_layer_weights_init": [[24, 29], ["torch.no_grad", "torch.no_grad", "hasattr", "m.weight.size", "m.weight.uniform_"], "function", ["None"], ["", "", "", "def", "first_layer_weights_init", "(", "m", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "if", "hasattr", "(", "m", ",", "\"weight\"", ")", ":", "\n", "            ", "num_input", "=", "m", ".", "weight", ".", "size", "(", "-", "1", ")", "\n", "m", ".", "weight", ".", "uniform_", "(", "-", "1", "/", "num_input", ",", "1", "/", "num_input", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.lenetlike.LeNetLike.__init__": [[10, 23], ["models.basenet.BaseNet.__init__", "lenetlike.LeNetLike.build_tin", "lenetlike.LeNetLike.build_cifar10"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.listdset.ListDataset.__init__", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.lenetlike.LeNetLike.build_tin", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.lenetlike.LeNetLike.build_cifar10"], ["    ", "def", "__init__", "(", "self", ",", "net_id", ":", "int", ",", "class_id", ":", "int", ",", "dataset_name", ":", "str", ")", "->", "None", ":", "\n", "        ", "super", "(", "LeNetLike", ",", "self", ")", ".", "__init__", "(", "net_id", ",", "class_id", ")", "\n", "\n", "assert", "dataset_name", "in", "[", "CIFAR10_NAME", ",", "TINY_IMAGENET_NAME", "]", "\n", "\n", "if", "dataset_name", "==", "TINY_IMAGENET_NAME", ":", "\n", "            ", "self", ".", "build_tin", "(", ")", "\n", "self", ".", "forward_fn", "=", "self", ".", "forward_tin", "\n", "self", ".", "func_forward_fn", "=", "self", ".", "func_forward_tin", "\n", "", "else", ":", "\n", "            ", "self", ".", "build_cifar10", "(", ")", "\n", "self", ".", "forward_fn", "=", "self", ".", "forward_cifar10", "\n", "self", ".", "func_forward_fn", "=", "self", ".", "func_forward_cifar10", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.lenetlike.LeNetLike.build_tin": [[24, 31], ["torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["None"], ["", "", "def", "build_tin", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "4", ",", "kernel_size", "=", "5", ",", "stride", "=", "2", ",", "padding", "=", "2", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "4", ",", "8", ",", "kernel_size", "=", "5", ",", "stride", "=", "2", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "8", ",", "16", ",", "kernel_size", "=", "5", ",", "stride", "=", "2", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "16", "*", "5", "*", "5", ",", "120", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "120", ",", "84", ")", "\n", "self", ".", "fc3", "=", "nn", ".", "Linear", "(", "84", ",", "200", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.lenetlike.LeNetLike.forward_tin": [[32, 41], ["torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "lenetlike.LeNetLike.view", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "lenetlike.LeNetLike.fc3", "lenetlike.LeNetLike.conv1", "lenetlike.LeNetLike.conv2", "lenetlike.LeNetLike.conv3", "lenetlike.LeNetLike.fc1", "lenetlike.LeNetLike.fc2"], "methods", ["None"], ["", "def", "forward_tin", "(", "self", ",", "x", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "x", "=", "F", ".", "leaky_relu", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "self", ".", "conv2", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "self", ".", "conv3", "(", "x", ")", ")", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "16", "*", "5", "*", "5", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "self", ".", "fc1", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "self", ".", "fc2", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "fc3", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.lenetlike.LeNetLike.func_forward_tin": [[42, 54], ["lenetlike.LeNetLike.params_from_prep", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.linear.view", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.linear", "torch.linear", "torch.linear", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.linear", "torch.linear", "torch.linear", "torch.linear", "torch.linear", "torch.linear"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.mlp.MLP.params_from_prep"], ["", "def", "func_forward_tin", "(", "self", ",", "x", ":", "torch", ".", "Tensor", ",", "prep", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "params", "=", "self", ".", "params_from_prep", "(", "prep", ")", "\n", "\n", "x", "=", "F", ".", "leaky_relu", "(", "F", ".", "conv2d", "(", "x", ",", "params", "[", "0", "]", ",", "bias", "=", "params", "[", "1", "]", ",", "stride", "=", "2", ",", "padding", "=", "2", ")", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "F", ".", "conv2d", "(", "x", ",", "params", "[", "2", "]", ",", "bias", "=", "params", "[", "3", "]", ",", "stride", "=", "2", ")", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "F", ".", "conv2d", "(", "x", ",", "params", "[", "4", "]", ",", "bias", "=", "params", "[", "5", "]", ",", "stride", "=", "2", ")", ")", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "16", "*", "5", "*", "5", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "F", ".", "linear", "(", "x", ",", "params", "[", "6", "]", ",", "bias", "=", "params", "[", "7", "]", ")", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "F", ".", "linear", "(", "x", ",", "params", "[", "8", "]", ",", "bias", "=", "params", "[", "9", "]", ")", ")", "\n", "x", "=", "F", ".", "linear", "(", "x", ",", "params", "[", "10", "]", ",", "bias", "=", "params", "[", "11", "]", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.lenetlike.LeNetLike.build_cifar10": [[55, 61], ["torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["None"], ["", "def", "build_cifar10", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "6", ",", "kernel_size", "=", "5", ",", "stride", "=", "2", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "6", ",", "16", ",", "kernel_size", "=", "5", ",", "stride", "=", "2", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "16", "*", "5", "*", "5", ",", "120", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "120", ",", "84", ")", "\n", "self", ".", "fc3", "=", "nn", ".", "Linear", "(", "84", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.lenetlike.LeNetLike.forward_cifar10": [[62, 70], ["torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "lenetlike.LeNetLike.view", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "lenetlike.LeNetLike.fc3", "lenetlike.LeNetLike.conv1", "lenetlike.LeNetLike.conv2", "lenetlike.LeNetLike.fc1", "lenetlike.LeNetLike.fc2"], "methods", ["None"], ["", "def", "forward_cifar10", "(", "self", ",", "x", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "x", "=", "F", ".", "leaky_relu", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "self", ".", "conv2", "(", "x", ")", ")", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "16", "*", "5", "*", "5", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "self", ".", "fc1", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "self", ".", "fc2", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "fc3", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.lenetlike.LeNetLike.func_forward_cifar10": [[71, 82], ["lenetlike.LeNetLike.params_from_prep", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.linear.view", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.linear", "torch.linear", "torch.linear", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.linear", "torch.linear", "torch.linear", "torch.linear", "torch.linear", "torch.linear"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.mlp.MLP.params_from_prep"], ["", "def", "func_forward_cifar10", "(", "self", ",", "x", ":", "torch", ".", "Tensor", ",", "prep", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "params", "=", "self", ".", "params_from_prep", "(", "prep", ")", "\n", "\n", "x", "=", "F", ".", "leaky_relu", "(", "F", ".", "conv2d", "(", "x", ",", "params", "[", "0", "]", ",", "bias", "=", "params", "[", "1", "]", ",", "stride", "=", "2", ")", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "F", ".", "conv2d", "(", "x", ",", "params", "[", "2", "]", ",", "bias", "=", "params", "[", "3", "]", ",", "stride", "=", "2", ")", ")", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "16", "*", "5", "*", "5", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "F", ".", "linear", "(", "x", ",", "params", "[", "4", "]", ",", "bias", "=", "params", "[", "5", "]", ")", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "F", ".", "linear", "(", "x", ",", "params", "[", "6", "]", ",", "bias", "=", "params", "[", "7", "]", ")", ")", "\n", "x", "=", "F", ".", "linear", "(", "x", ",", "params", "[", "8", "]", ",", "bias", "=", "params", "[", "9", "]", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.lenetlike.LeNetLike.forward": [[83, 85], ["lenetlike.LeNetLike.forward_fn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "return", "self", ".", "forward_fn", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.lenetlike.LeNetLike.func_forward": [[86, 88], ["lenetlike.LeNetLike.func_forward_fn"], "methods", ["None"], ["", "def", "func_forward", "(", "self", ",", "x", ":", "torch", ".", "Tensor", ",", "prep", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "return", "self", ".", "func_forward_fn", "(", "x", ",", "prep", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.utils.ScaleLayer.__init__": [[31, 35], ["torch.nn.Module.__init__", "torch.nn.Parameter", "torch.nn.Parameter", "torch.randn", "torch.rand"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.listdset.ListDataset.__init__"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "sdf_to_mesh", "(", "\n", "mlp", ":", "MLP", ",", "\n", "grid_size", ":", "int", "=", "256", ",", "\n", "max_batch", ":", "int", "=", "100_000", ",", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.utils.ScaleLayer.forward": [[36, 38], ["None"], "methods", ["None"], [")", "->", "Tuple", "[", "np", ".", "ndarray", ",", "np", ".", "ndarray", "]", ":", "\n", "    ", "voxel_origin", "=", "[", "-", "1", ",", "-", "1", ",", "-", "1", "]", "\n", "voxel_size", "=", "2.0", "/", "(", "grid_size", "-", "1", ")", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.utils.conv_block": [[5, 28], ["torch.nn.Conv2d", "modules.append", "torch.nn.Sequential", "torch.nn.init.xavier_uniform_", "modules.append", "torch.nn.BatchNorm2d"], "function", ["None"], ["from", "models", ".", "mlp", "import", "MLP", "\n", "from", "skimage", ".", "measure", "import", "marching_cubes", "\n", "from", "tqdm", "import", "tqdm", "\n", "\n", "\n", "# from https://github.com/HobbitLong/RepDistiller", "\n", "def", "adjust_learning_rate", "(", "epoch", ",", "lr_decay_epochs", ",", "optimizer", ",", "lr_value", ",", "lr_decay_rate", "=", "0.1", ")", ":", "\n", "    ", "\"\"\"Sets the learning rate to the initial LR decayed by decay rate every steep step\"\"\"", "\n", "if", "lr_decay_epochs", "is", "not", "None", ":", "\n", "        ", "steps", "=", "np", ".", "sum", "(", "epoch", ">=", "np", ".", "asarray", "(", "lr_decay_epochs", ")", ")", "\n", "", "else", ":", "\n", "        ", "steps", "=", "0", "\n", "# print(\"current lr: \", optimizer.param_groups[0][\"lr\"])", "\n", "", "if", "steps", ">", "0", ":", "\n", "        ", "new_lr", "=", "lr_value", "*", "(", "lr_decay_rate", "**", "steps", ")", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "            ", "param_group", "[", "\"lr\"", "]", "=", "new_lr", "\n", "\n", "\n", "", "", "", "def", "progress_bar", "(", "iterable", ":", "Iterable", ",", "desc", ":", "str", "=", "\"\"", ",", "ncols", "=", "60", ")", "->", "Iterable", ":", "\n", "    ", "bar_format", "=", "\"{percentage:.0f}%|{bar}| {n_fmt}/{total_fmt} [{elapsed}<{remaining}]\"", "\n", "if", "len", "(", "desc", ")", ">", "0", ":", "\n", "        ", "bar_format", "=", "\"{desc}: \"", "+", "bar_format", "\n", "", "return", "tqdm", "(", "iterable", ",", "desc", "=", "desc", ",", "bar_format", "=", "bar_format", ",", "ncols", "=", "ncols", ",", "leave", "=", "False", ")", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.netfactory.NetFactory.get_net": [[10, 15], ["cls.parse_params", "cls.get_net_builder", "cls.get_net_builder."], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.netfactory.NetFactory.parse_params", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.netfactory.NetFactory.get_net_builder"], ["    ", "@", "classmethod", "\n", "def", "get_net", "(", "cls", ",", "class_name", ":", "str", ",", "net_id", ":", "int", ",", "params", ":", "List", "[", "str", "]", ")", "->", "BaseNet", ":", "\n", "        ", "params", "=", "cls", ".", "parse_params", "(", "params", ")", "\n", "builder", "=", "cls", ".", "get_net_builder", "(", "class_name", ")", "\n", "return", "builder", "(", "net_id", ",", "*", "params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.netfactory.NetFactory.get_net_builder": [[16, 24], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_net_builder", "(", "class_name", ":", "str", ")", "->", "Callable", ":", "\n", "        ", "builders", "=", "{", "\n", "\"lenetlike\"", ":", "LeNetLike", ",", "\n", "\"vanilla_cnn\"", ":", "VanillaCNN", ",", "\n", "\"resnet_fusedbn\"", ":", "ResNetFusedBN", ",", "\n", "}", "\n", "return", "builders", "[", "class_name", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.netfactory.NetFactory.converters": [[25, 28], ["None"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "converters", "(", "cls", ")", "->", "Dict", "[", "str", ",", "Callable", "]", ":", "\n", "        ", "return", "{", "\"f\"", ":", "float", ",", "\"d\"", ":", "int", ",", "\"l\"", ":", "cls", ".", "list_converter", ",", "\"s\"", ":", "str", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.netfactory.NetFactory.parse_params": [[29, 40], ["cls.converters", "len", "result.append"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.netfactory.NetFactory.converters"], ["", "@", "classmethod", "\n", "def", "parse_params", "(", "cls", ",", "params", ":", "List", "[", "str", "]", ")", "->", "List", ":", "\n", "        ", "result", "=", "[", "]", "\n", "converters", "=", "cls", ".", "converters", "(", ")", "\n", "\n", "for", "p", "in", "params", ":", "\n", "            ", "if", "len", "(", "p", ")", ">", "1", ":", "\n", "                ", "t", ",", "v", "=", "p", "[", "0", "]", ",", "p", "[", "1", ":", "]", "\n", "result", ".", "append", "(", "converters", "[", "t", "]", "(", "v", ")", ")", "\n", "\n", "", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.netfactory.NetFactory.list_converter": [[41, 54], ["cls.parse_params", "s.split", "s.split"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.netfactory.NetFactory.parse_params"], ["", "@", "classmethod", "\n", "def", "list_converter", "(", "cls", ",", "s", ":", "str", ")", "->", "List", ":", "\n", "        ", "if", "s", "[", "0", "]", "!=", "\"[\"", "or", "s", "[", "-", "1", "]", "!=", "\"]\"", ":", "\n", "            ", "raise", "ValueError", "\n", "\n", "", "s", "=", "s", "[", "1", ":", "-", "1", "]", "\n", "\n", "if", "\"*\"", "in", "s", ":", "\n", "            ", "elements", "=", "s", ".", "split", "(", "\"*\"", ")", "\n", "", "else", ":", "\n", "            ", "elements", "=", "s", ".", "split", "(", "\",\"", ")", "\n", "\n", "", "return", "cls", ".", "parse_params", "(", "elements", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.nets.NetsDataset.__init__": [[9, 31], ["enumerate", "open", "random.shuffle", "models.netfactory.NetFactory.get_net", "models.netfactory.NetFactory.get_net.to", "models.netfactory.NetFactory.get_net.eval", "eval_func", "nets.NetsDataset.nets.append", "s.strip().split", "len", "models.netfactory.NetFactory.get_net.load", "f.readlines", "s.strip"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.netfactory.NetFactory.get_net", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.eval", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.load"], ["    ", "def", "__init__", "(", "self", ",", "nets_file", ",", "device", ",", "eval_func", ",", "prep_size", ",", "shuffle", "=", "False", ")", ":", "\n", "        ", "self", ".", "prep_size", "=", "prep_size", "\n", "with", "open", "(", "nets_file", ")", "as", "f", ":", "\n", "            ", "lines", "=", "[", "s", ".", "strip", "(", ")", ".", "split", "(", "\";\"", ")", "for", "s", "in", "f", ".", "readlines", "(", ")", "]", "\n", "\n", "", "if", "shuffle", ":", "\n", "            ", "random", ".", "shuffle", "(", "lines", ")", "\n", "\n", "", "self", ".", "device", "=", "device", "\n", "\n", "self", ".", "nets", "=", "[", "]", "\n", "for", "i", ",", "line", "in", "enumerate", "(", "lines", ")", ":", "\n", "            ", "class_name", "=", "line", "[", "0", "]", "\n", "params", "=", "line", "[", "1", ":", "-", "1", "]", "\n", "weights_path", "=", "line", "[", "-", "1", "]", "\n", "net", "=", "NetFactory", ".", "get_net", "(", "class_name", ",", "i", ",", "params", ")", "\n", "if", "len", "(", "weights_path", ")", ">", "0", ":", "\n", "                ", "net", ".", "load", "(", "weights_path", ")", "\n", "", "net", ".", "to", "(", "self", ".", "device", ")", "\n", "net", ".", "eval", "(", ")", "\n", "net", ".", "score", "=", "eval_func", "(", "net", ")", "\n", "self", ".", "nets", ".", "append", "(", "net", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.nets.NetsDataset.__len__": [[32, 34], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "nets", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.nets.NetsDataset.__getitem__": [[35, 37], ["nets.NetsDataset.nets[].get_prep"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.mlp.MLP.get_prep"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "return", "self", ".", "nets", "[", "idx", "]", ",", "self", ".", "nets", "[", "idx", "]", ".", "get_prep", "(", "self", ".", "prep_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.nets.NetsDataset.collate_fn": [[38, 44], ["torch.stack"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "collate_fn", "(", "batch", ")", ":", "\n", "        ", "preps", "=", "[", "element", "[", "1", "]", "for", "element", "in", "batch", "]", "\n", "prep", "=", "torch", ".", "stack", "(", "preps", ",", "dim", "=", "0", ")", "\n", "nets", "=", "[", "element", "[", "0", "]", "for", "element", "in", "batch", "]", "\n", "return", "[", "nets", ",", "prep", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.sdfdset.SDFDataset.__init__": [[12, 34], ["torch.utils.data.Dataset.__init__", "list", "trainers.utils.progress_bar", "root.glob", "len", "numpy.load", "torch.from_numpy", "torch.isnan", "torch.from_numpy", "torch.isnan", "sdfdset.SDFDataset.sdfs.append"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.listdset.ListDataset.__init__", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.utils.progress_bar", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.load"], ["    ", "def", "__init__", "(", "self", ",", "root", ":", "Path", ",", "num_samples", ":", "int", ",", "indices", ":", "List", "[", "int", "]", "=", "[", "]", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "num_samples", "=", "num_samples", "\n", "\n", "self", ".", "npz_files", ":", "List", "[", "Path", "]", "=", "list", "(", "root", ".", "glob", "(", "\"*.npz\"", ")", ")", "\n", "if", "len", "(", "indices", ")", ">", "0", ":", "\n", "            ", "self", ".", "npz_files", "=", "[", "self", ".", "npz_files", "[", "i", "]", "for", "i", "in", "indices", "]", "\n", "\n", "", "self", ".", "sdfs", ":", "List", "[", "Tuple", "[", "Tensor", ",", "Tensor", "]", "]", "=", "[", "]", "\n", "for", "npz_file", "in", "progress_bar", "(", "self", ".", "npz_files", ",", "desc", "=", "\"Loading SDF dataset\"", ")", ":", "\n", "            ", "data", "=", "np", ".", "load", "(", "npz_file", ")", "\n", "\n", "pos", "=", "torch", ".", "from_numpy", "(", "data", "[", "\"pos\"", "]", ")", "\n", "pos_nans", "=", "torch", ".", "isnan", "(", "pos", "[", ":", ",", "3", "]", ")", "\n", "pos", "=", "pos", "[", "~", "pos_nans", ",", ":", "]", "\n", "\n", "neg", "=", "torch", ".", "from_numpy", "(", "data", "[", "\"neg\"", "]", ")", "\n", "neg_nans", "=", "torch", ".", "isnan", "(", "neg", "[", ":", ",", "3", "]", ")", "\n", "neg", "=", "neg", "[", "~", "neg_nans", ",", ":", "]", "\n", "\n", "self", ".", "sdfs", ".", "append", "(", "(", "pos", ",", "neg", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.sdfdset.SDFDataset.__len__": [[35, 37], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", "->", "int", ":", "\n", "        ", "return", "len", "(", "self", ".", "npz_files", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.sdfdset.SDFDataset.__getitem__": [[38, 50], ["int", "torch.index_select", "torch.index_select", "torch.cat", "torch.rand", "torch.rand"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ":", "int", ")", "->", "Tensor", ":", "\n", "        ", "pos", ",", "neg", "=", "self", ".", "sdfs", "[", "index", "]", "\n", "\n", "num", "=", "int", "(", "self", ".", "num_samples", "/", "2", ")", "\n", "random_pos", "=", "(", "torch", ".", "rand", "(", "num", ")", "*", "pos", ".", "shape", "[", "0", "]", ")", ".", "long", "(", ")", "\n", "samples_pos", "=", "torch", ".", "index_select", "(", "pos", ",", "0", ",", "random_pos", ")", "\n", "\n", "random_neg", "=", "(", "torch", ".", "rand", "(", "num", ")", "*", "neg", ".", "shape", "[", "0", "]", ")", ".", "long", "(", ")", "\n", "samples_neg", "=", "torch", ".", "index_select", "(", "neg", ",", "0", ",", "random_neg", ")", "\n", "\n", "samples", "=", "torch", ".", "cat", "(", "[", "samples_pos", ",", "samples_neg", "]", ",", "0", ")", "\n", "return", "samples", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.sdfdset.SDFDataset.get_sdf": [[51, 55], ["torch.cat"], "methods", ["None"], ["", "def", "get_sdf", "(", "self", ",", "index", ":", "int", ")", "->", "Tuple", "[", "str", ",", "Tensor", "]", ":", "\n", "        ", "pos", ",", "neg", "=", "self", ".", "sdfs", "[", "index", "]", "\n", "sdf", "=", "torch", ".", "cat", "(", "[", "pos", ",", "neg", "]", ",", "0", ")", "\n", "return", "self", ".", "npz_files", "[", "index", "]", ".", "stem", ",", "sdf", "\n", "", "", ""]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.nets_missing.NetsDatasetMissing.__init__": [[9, 48], ["enumerate", "min", "max", "range", "range", "open", "random.shuffle", "models.netfactory.NetFactory.get_net", "models.netfactory.NetFactory.get_net.to", "models.netfactory.NetFactory.get_net.eval", "eval_func", "len", "len", "len", "len", "nets_missing.NetsDatasetMissing.nets.append", "s.strip().split", "len", "models.netfactory.NetFactory.get_net.load", "nets_A.append", "len", "nets_missing.NetsDatasetMissing.nets.append", "nets_missing.NetsDatasetMissing.nets.append", "f.readlines", "nets_B.append", "s.strip"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.netfactory.NetFactory.get_net", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.trainers.mlps.MLPTrainer.eval", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.load"], ["    ", "def", "__init__", "(", "self", ",", "nets_file", ",", "device", ",", "eval_func", ",", "prep_size", ",", "shuffle", "=", "False", ")", ":", "\n", "        ", "self", ".", "prep_size", "=", "prep_size", "\n", "with", "open", "(", "nets_file", ")", "as", "f", ":", "\n", "            ", "lines", "=", "[", "s", ".", "strip", "(", ")", ".", "split", "(", "\";\"", ")", "for", "s", "in", "f", ".", "readlines", "(", ")", "]", "\n", "\n", "", "if", "shuffle", ":", "\n", "            ", "random", ".", "shuffle", "(", "lines", ")", "\n", "\n", "", "self", ".", "device", "=", "device", "\n", "\n", "self", ".", "nets", "=", "[", "]", "\n", "nets_A", "=", "[", "]", "\n", "nets_B", "=", "[", "]", "\n", "\n", "for", "i", ",", "line", "in", "enumerate", "(", "lines", ")", ":", "\n", "            ", "class_name", "=", "line", "[", "0", "]", "\n", "params", "=", "line", "[", "1", ":", "-", "1", "]", "\n", "weights_path", "=", "line", "[", "-", "1", "]", "\n", "net", "=", "NetFactory", ".", "get_net", "(", "class_name", ",", "i", ",", "params", ")", "\n", "if", "len", "(", "weights_path", ")", ">", "0", ":", "\n", "                ", "net", ".", "load", "(", "weights_path", ")", "\n", "", "net", ".", "to", "(", "self", ".", "device", ")", "\n", "net", ".", "eval", "(", ")", "\n", "net", ".", "score", "=", "eval_func", "(", "net", ")", "\n", "\n", "if", "net", ".", "class_id", "==", "0", ":", "\n", "                ", "nets_A", ".", "append", "(", "net", ")", "\n", "", "elif", "net", ".", "class_id", "==", "3", ":", "\n", "                ", "nets_B", ".", "append", "(", "net", ")", "\n", "\n", "", "", "min_nets_num", "=", "min", "(", "len", "(", "nets_A", ")", ",", "len", "(", "nets_B", ")", ")", "\n", "max_nets_num", "=", "max", "(", "len", "(", "nets_A", ")", ",", "len", "(", "nets_B", ")", ")", "\n", "for", "i", "in", "range", "(", "min_nets_num", ")", ":", "\n", "            ", "self", ".", "nets", ".", "append", "(", "[", "nets_A", "[", "i", "]", ",", "nets_B", "[", "i", "]", "]", ")", "\n", "", "for", "i", "in", "range", "(", "min_nets_num", ",", "max_nets_num", ",", "2", ")", ":", "\n", "            ", "if", "len", "(", "nets_A", ")", "==", "max_nets_num", ":", "\n", "                ", "self", ".", "nets", ".", "append", "(", "[", "nets_A", "[", "i", "]", ",", "nets_A", "[", "i", "+", "1", "]", "]", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "nets", ".", "append", "(", "[", "nets_B", "[", "i", "]", ",", "nets_B", "[", "i", "+", "1", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.nets_missing.NetsDatasetMissing.__len__": [[49, 51], ["len"], "methods", ["None"], ["", "", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "nets", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.nets_missing.NetsDatasetMissing.__getitem__": [[52, 58], ["net_1.get_prep", "net_2.get_prep", "torch.stack"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.mlp.MLP.get_prep", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.mlp.MLP.get_prep"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "net_1", ",", "net_2", "=", "self", ".", "nets", "[", "idx", "]", "\n", "prep_1", "=", "net_1", ".", "get_prep", "(", "self", ".", "prep_size", ")", "\n", "prep_2", "=", "net_2", ".", "get_prep", "(", "self", ".", "prep_size", ")", "\n", "preps", "=", "torch", ".", "stack", "(", "[", "prep_1", ",", "prep_2", "]", ",", "dim", "=", "0", ")", "\n", "return", "[", "net_1", ",", "net_2", "]", ",", "preps", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.nets_missing.NetsDatasetMissing.collate_fn": [[59, 62], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "collate_fn", "(", "batch", ")", ":", "\n", "        ", "return", "batch", "[", "0", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.mlpdset.MLPDataset.__init__": [[11, 25], ["torch.utils.data.Dataset.__init__", "sorted", "list", "dataset_root.glob"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.listdset.ListDataset.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "dataset_root", ":", "Path", ",", "\n", "range", ":", "Tuple", "[", "int", ",", "int", "]", ",", "\n", "prep_shape", ":", "Tuple", "[", "int", ",", "int", "]", ",", "\n", "num_coords", ":", "int", ",", "\n", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "ckpt_paths", "=", "sorted", "(", "list", "(", "dataset_root", ".", "glob", "(", "\"*.pt\"", ")", ")", ")", "\n", "self", ".", "ckpt_paths", "=", "ckpt_paths", "[", "range", "[", "0", "]", ":", "range", "[", "1", "]", "]", "\n", "\n", "self", ".", "prep_shape", "=", "prep_shape", "\n", "self", ".", "num_coords", "=", "num_coords", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.mlpdset.MLPDataset.__len__": [[26, 28], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", "->", "int", ":", "\n", "        ", "return", "len", "(", "self", ".", "ckpt_paths", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.mlpdset.MLPDataset.__getitem__": [[29, 52], ["torch.load", "list", "models.mlp.MLP.get_prep", "prep.detach.detach.detach", "int", "torch.index_select", "torch.index_select", "torch.cat", "state_dict.values", "torch.rand", "torch.rand"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.basenet.BaseNet.load", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.models.mlp.MLP.get_prep"], ["", "def", "__getitem__", "(", "self", ",", "index", ":", "int", ")", "->", "Tuple", "[", "Tensor", ",", "Tensor", "]", ":", "\n", "        ", "ckpt_path", "=", "self", ".", "ckpt_paths", "[", "index", "]", "\n", "ckpt", "=", "torch", ".", "load", "(", "ckpt_path", ")", "\n", "\n", "state_dict", "=", "ckpt", "[", "\"mlp\"", "]", "\n", "params", "=", "list", "(", "state_dict", ".", "values", "(", ")", ")", "\n", "prep", "=", "MLP", ".", "get_prep", "(", "params", ",", "self", ".", "prep_shape", ")", "\n", "prep", "=", "prep", ".", "detach", "(", ")", "\n", "\n", "sdf", "=", "ckpt", "[", "\"sdf\"", "]", "\n", "half", "=", "sdf", ".", "shape", "[", "0", "]", "//", "2", "\n", "pos", ",", "neg", "=", "sdf", "[", ":", "half", ",", ":", "3", "]", ",", "sdf", "[", "half", ":", ",", ":", "3", "]", "\n", "\n", "num", "=", "int", "(", "self", ".", "num_coords", "/", "2", ")", "\n", "random_pos", "=", "(", "torch", ".", "rand", "(", "num", ")", "*", "pos", ".", "shape", "[", "0", "]", ")", ".", "long", "(", ")", "\n", "coords_pos", "=", "torch", ".", "index_select", "(", "pos", ",", "0", ",", "random_pos", ")", "\n", "\n", "random_neg", "=", "(", "torch", ".", "rand", "(", "num", ")", "*", "neg", ".", "shape", "[", "0", "]", ")", ".", "long", "(", ")", "\n", "coords_neg", "=", "torch", ".", "index_select", "(", "neg", ",", "0", ",", "random_neg", ")", "\n", "\n", "coords", "=", "torch", ".", "cat", "(", "[", "coords_pos", ",", "coords_neg", "]", ",", "0", ")", "\n", "\n", "return", "prep", ",", "coords", "\n", "", "", ""]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.images.Subset.__init__": [[16, 20], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dataset", ":", "Dataset", ",", "indices", ":", "List", "[", "int", "]", ",", "transform", ":", "Callable", ")", "->", "None", ":", "\n", "        ", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "indices", "=", "indices", "\n", "self", ".", "transform", "=", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.images.Subset.__getitem__": [[21, 24], ["images.Subset.transform"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ":", "int", ")", "->", "Tuple", "[", "Tensor", ",", "Tensor", "]", ":", "\n", "        ", "img", ",", "label", "=", "self", ".", "dataset", "[", "self", ".", "indices", "[", "idx", "]", "]", "\n", "return", "self", ".", "transform", "(", "img", ")", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.images.Subset.__len__": [[25, 27], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", "->", "int", ":", "\n", "        ", "return", "len", "(", "self", ".", "indices", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.images.ImagesDataset.__init__": [[52, 92], ["dataset_name.lower.lower.lower", "os.path.join", "images.get_transforms", "images.get_transforms", "dset", "images.Subset", "images.Subset", "dset", "os.path.join", "data.listdset.ListDataset", "os.path.join", "data.listdset.ListDataset", "os.path.join", "data.listdset.ListDataset", "len", "range", "range", "len"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.images.get_transforms", "home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.images.get_transforms"], ["    ", "def", "__init__", "(", "self", ",", "dataset_name", ":", "str", ",", "batch_size", ":", "int", "=", "128", ",", "data_root", ":", "str", "=", "\"data\"", ")", "->", "None", ":", "\n", "        ", "dataset_name", "=", "dataset_name", ".", "lower", "(", ")", "\n", "assert", "dataset_name", "in", "[", "\n", "CIFAR10_NAME", ",", "\n", "TINY_IMAGENET_NAME", ",", "\n", "]", "\n", "data_root", "=", "os", ".", "path", ".", "join", "(", "data_root", ",", "dataset_name", ")", "\n", "\n", "self", ".", "channels", "=", "3", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "\n", "train_transforms", "=", "get_transforms", "(", "dataset_name", ",", "True", ")", "\n", "val_test_transforms", "=", "get_transforms", "(", "dataset_name", ",", "False", ")", "\n", "\n", "dset", "=", "{", "\n", "CIFAR10_NAME", ":", "CIFAR10", ",", "\n", "TINY_IMAGENET_NAME", ":", "ListDataset", ",", "\n", "}", "[", "dataset_name", "]", "\n", "\n", "if", "dataset_name", "!=", "TINY_IMAGENET_NAME", ":", "\n", "            ", "full_trainset", "=", "dset", "(", "root", "=", "data_root", ",", "train", "=", "True", ",", "download", "=", "True", ")", "\n", "train_numel", "=", "len", "(", "full_trainset", ")", "//", "100", "*", "80", "\n", "train_indices", "=", "[", "i", "for", "i", "in", "range", "(", "train_numel", ")", "]", "\n", "val_indices", "=", "[", "i", "for", "i", "in", "range", "(", "train_numel", ",", "len", "(", "full_trainset", ")", ")", "]", "\n", "self", ".", "trainset", "=", "Subset", "(", "full_trainset", ",", "train_indices", ",", "train_transforms", ")", "\n", "self", ".", "valset", "=", "Subset", "(", "full_trainset", ",", "val_indices", ",", "val_test_transforms", ")", "\n", "\n", "self", ".", "testset", "=", "dset", "(", "\n", "root", "=", "data_root", ",", "\n", "train", "=", "False", ",", "\n", "download", "=", "True", ",", "\n", "transform", "=", "val_test_transforms", ",", "\n", ")", "\n", "", "else", ":", "\n", "            ", "train_file", "=", "os", ".", "path", ".", "join", "(", "data_root", ",", "\"train.txt\"", ")", "\n", "self", ".", "trainset", "=", "ListDataset", "(", "train_file", ",", "train_transforms", ")", "\n", "val_file", "=", "os", ".", "path", ".", "join", "(", "data_root", ",", "\"val.txt\"", ")", "\n", "self", ".", "valset", "=", "ListDataset", "(", "val_file", ",", "val_test_transforms", ")", "\n", "test_file", "=", "os", ".", "path", ".", "join", "(", "data_root", ",", "\"test.txt\"", ")", "\n", "self", ".", "testset", "=", "ListDataset", "(", "test_file", ",", "val_test_transforms", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.images.ImagesDataset.get_datasets": [[93, 95], ["None"], "methods", ["None"], ["", "", "def", "get_datasets", "(", "self", ")", "->", "Tuple", "[", "Dataset", ",", "Dataset", ",", "Dataset", "]", ":", "\n", "        ", "return", "self", ".", "trainset", ",", "self", ".", "valset", ",", "self", ".", "testset", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.images.ImagesDataset.get_loaders": [[96, 119], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader"], "methods", ["None"], ["", "def", "get_loaders", "(", "self", ")", "->", "Tuple", "[", "DataLoader", ",", "DataLoader", ",", "DataLoader", "]", ":", "\n", "        ", "trainloader", "=", "DataLoader", "(", "\n", "self", ".", "trainset", ",", "\n", "batch_size", "=", "self", ".", "batch_size", ",", "\n", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "8", ",", "\n", "pin_memory", "=", "True", ",", "\n", ")", "\n", "valloader", "=", "DataLoader", "(", "\n", "self", ".", "valset", ",", "\n", "batch_size", "=", "self", ".", "batch_size", ",", "\n", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "8", ",", "\n", "pin_memory", "=", "True", ",", "\n", ")", "\n", "testloader", "=", "DataLoader", "(", "\n", "self", ".", "testset", ",", "\n", "batch_size", "=", "self", ".", "batch_size", ",", "\n", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "8", ",", "\n", "pin_memory", "=", "True", ",", "\n", ")", "\n", "return", "trainloader", ",", "valloader", ",", "testloader", "\n", "", "", ""]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.images.get_transforms": [[29, 49], ["t.append", "t.append", "torchvision.Compose", "t.append", "torchvision.ToTensor", "torchvision.Normalize", "t.append", "torchvision.RandomHorizontalFlip", "torchvision.RandomCrop", "t.append", "torchvision.RandomCrop"], "function", ["None"], ["", "", "def", "get_transforms", "(", "dataset_name", ":", "str", ",", "train", ":", "bool", ")", "->", "transforms", ".", "Compose", ":", "\n", "    ", "t", "=", "[", "]", "\n", "\n", "if", "train", ":", "\n", "        ", "if", "dataset_name", "==", "CIFAR10_NAME", ":", "\n", "            ", "t", ".", "append", "(", "transforms", ".", "RandomCrop", "(", "32", ",", "padding", "=", "4", ")", ")", "\n", "", "elif", "dataset_name", "==", "TINY_IMAGENET_NAME", ":", "\n", "            ", "t", ".", "append", "(", "transforms", ".", "RandomCrop", "(", "64", ",", "padding", "=", "8", ")", ")", "\n", "\n", "", "t", ".", "append", "(", "transforms", ".", "RandomHorizontalFlip", "(", ")", ")", "\n", "\n", "", "t", ".", "append", "(", "transforms", ".", "ToTensor", "(", ")", ")", "\n", "\n", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", "\n", "t", ".", "append", "(", "transforms", ".", "Normalize", "(", "mean", ",", "std", ")", ")", "\n", "\n", "train_transforms", "=", "transforms", ".", "Compose", "(", "t", ")", "\n", "\n", "return", "train_transforms", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.listdset.ListDataset.__init__": [[10, 25], ["torch.utils.data.Dataset.__init__", "open", "line.split", "PIL.Image.open().convert", "torch.tensor", "listdset.ListDataset.items.append", "line.strip", "int", "f.readlines", "PIL.Image.open"], "methods", ["home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.listdset.ListDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "list_file_path", ":", "str", ",", "transform", ":", "Optional", "[", "Callable", "]", "=", "None", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "items", ":", "List", "[", "Tuple", "[", "Image", ".", "Image", ",", "Tensor", "]", "]", "=", "[", "]", "\n", "\n", "with", "open", "(", "list_file_path", ")", "as", "f", ":", "\n", "            ", "lines", "=", "[", "line", ".", "strip", "(", ")", "for", "line", "in", "f", ".", "readlines", "(", ")", "]", "\n", "\n", "", "for", "line", "in", "lines", ":", "\n", "            ", "img_path", ",", "label", "=", "line", ".", "split", "(", "\",\"", ")", "\n", "img", "=", "Image", ".", "open", "(", "img_path", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "label", "=", "torch", ".", "tensor", "(", "int", "(", "label", ")", ",", "dtype", "=", "torch", ".", "long", ")", "\n", "self", ".", "items", ".", "append", "(", "(", "img", ",", "label", ")", ")", "\n", "\n", "", "self", ".", "transform", "=", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.listdset.ListDataset.__len__": [[26, 28], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", "->", "int", ":", "\n", "        ", "return", "len", "(", "self", ".", "items", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cvlab-unibo_netspace.data.listdset.ListDataset.__getitem__": [[29, 35], ["listdset.ListDataset.transform"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ":", "int", ")", "->", "Tuple", "[", "Any", ",", "Tensor", "]", ":", "\n", "        ", "img", ",", "label", "=", "self", ".", "items", "[", "index", "]", "\n", "if", "self", ".", "transform", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "", "return", "img", ",", "label", "\n", "", "", ""]]}