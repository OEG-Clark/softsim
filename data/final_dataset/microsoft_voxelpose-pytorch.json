{"home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.flip_back": [[16, 31], ["output_flipped[].copy"], "function", ["None"], ["def", "flip_back", "(", "output_flipped", ",", "matched_parts", ")", ":", "\n", "    ", "'''\n    ouput_flipped: numpy.ndarray(batch_size, num_joints, height, width)\n    '''", "\n", "assert", "output_flipped", ".", "ndim", "==", "4", ",", "'output_flipped should be [batch_size, num_joints, height, width]'", "\n", "\n", "output_flipped", "=", "output_flipped", "[", ":", ",", ":", ",", ":", ",", ":", ":", "-", "1", "]", "\n", "\n", "for", "pair", "in", "matched_parts", ":", "\n", "        ", "tmp", "=", "output_flipped", "[", ":", ",", "pair", "[", "0", "]", ",", ":", ",", ":", "]", ".", "copy", "(", ")", "\n", "output_flipped", "[", ":", ",", "pair", "[", "0", "]", ",", ":", ",", ":", "]", "=", "output_flipped", "[", ":", ",", "pair", "[", "1", "]", ",", ":", ",", ":", "]", "\n", "output_flipped", "[", ":", ",", "pair", "[", "1", "]", ",", ":", ",", ":", "]", "=", "tmp", "\n", "\n", "", "return", "output_flipped", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.fliplr_joints": [[33, 48], ["joints[].copy", "joints_vis[].copy"], "function", ["None"], ["", "def", "fliplr_joints", "(", "joints", ",", "joints_vis", ",", "width", ",", "matched_parts", ")", ":", "\n", "    ", "\"\"\"\n    flip coords\n    \"\"\"", "\n", "# Flip horizontal", "\n", "joints", "[", ":", ",", "0", "]", "=", "width", "-", "joints", "[", ":", ",", "0", "]", "-", "1", "\n", "\n", "# Change left-right parts", "\n", "for", "pair", "in", "matched_parts", ":", "\n", "        ", "joints", "[", "pair", "[", "0", "]", ",", ":", "]", ",", "joints", "[", "pair", "[", "1", "]", ",", ":", "]", "=", "joints", "[", "pair", "[", "1", "]", ",", ":", "]", ",", "joints", "[", "pair", "[", "0", "]", ",", ":", "]", ".", "copy", "(", ")", "\n", "joints_vis", "[", "pair", "[", "0", "]", ",", ":", "]", ",", "joints_vis", "[", "pair", "[", "1", "]", ",", ":", "]", "=", "joints_vis", "[", "pair", "[", "1", "]", ",", ":", "]", ",", "joints_vis", "[", "pair", "[", "0", "]", ",", ":", "]", ".", "copy", "(", ")", "\n", "\n", "", "return", "joints", "*", "joints_vis", ",", "joints_vis", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.transform_preds": [[50, 56], ["numpy.zeros", "transforms.get_affine_transform", "range", "transforms.affine_transform"], "function", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.get_affine_transform", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.affine_transform"], ["", "def", "transform_preds", "(", "coords", ",", "center", ",", "scale", ",", "output_size", ")", ":", "\n", "    ", "target_coords", "=", "np", ".", "zeros", "(", "coords", ".", "shape", ")", "\n", "trans", "=", "get_affine_transform", "(", "center", ",", "scale", ",", "0", ",", "output_size", ",", "inv", "=", "1", ")", "\n", "for", "p", "in", "range", "(", "coords", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "target_coords", "[", "p", ",", "0", ":", "2", "]", "=", "affine_transform", "(", "coords", "[", "p", ",", "0", ":", "2", "]", ",", "trans", ")", "\n", "", "return", "target_coords", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.get_affine_transform": [[58, 99], ["numpy.array", "isinstance", "isinstance", "numpy.zeros", "numpy.zeros", "transforms.get_3rd_point", "transforms.get_3rd_point", "numpy.array", "numpy.array", "numpy.array", "transforms.get_dir", "numpy.array", "transforms.get_dir", "numpy.array", "numpy.array", "cv2.getAffineTransform", "cv2.getAffineTransform", "np.array.cpu", "np.array.cpu", "isinstance", "isinstance", "numpy.float32", "numpy.float32", "numpy.float32", "numpy.float32"], "function", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.get_3rd_point", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.get_3rd_point", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.get_dir", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.get_dir"], ["", "def", "get_affine_transform", "(", "center", ",", "\n", "scale", ",", "\n", "rot", ",", "\n", "output_size", ",", "\n", "shift", "=", "np", ".", "array", "(", "[", "0", ",", "0", "]", ",", "dtype", "=", "np", ".", "float32", ")", ",", "\n", "inv", "=", "0", ")", ":", "\n", "    ", "if", "isinstance", "(", "scale", ",", "torch", ".", "Tensor", ")", ":", "\n", "        ", "scale", "=", "np", ".", "array", "(", "scale", ".", "cpu", "(", ")", ")", "\n", "", "if", "isinstance", "(", "center", ",", "torch", ".", "Tensor", ")", ":", "\n", "        ", "center", "=", "np", ".", "array", "(", "center", ".", "cpu", "(", ")", ")", "\n", "", "if", "not", "isinstance", "(", "scale", ",", "np", ".", "ndarray", ")", "and", "not", "isinstance", "(", "scale", ",", "list", ")", ":", "\n", "        ", "scale", "=", "np", ".", "array", "(", "[", "scale", ",", "scale", "]", ")", "\n", "\n", "", "scale_tmp", "=", "scale", "*", "200.0", "\n", "src_w", ",", "src_h", "=", "scale_tmp", "[", "0", "]", ",", "scale_tmp", "[", "1", "]", "\n", "dst_w", ",", "dst_h", "=", "output_size", "[", "0", "]", ",", "output_size", "[", "1", "]", "\n", "\n", "rot_rad", "=", "np", ".", "pi", "*", "rot", "/", "180", "\n", "if", "src_w", ">=", "src_h", ":", "\n", "        ", "src_dir", "=", "get_dir", "(", "[", "0", ",", "src_w", "*", "-", "0.5", "]", ",", "rot_rad", ")", "\n", "dst_dir", "=", "np", ".", "array", "(", "[", "0", ",", "dst_w", "*", "-", "0.5", "]", ",", "np", ".", "float32", ")", "\n", "", "else", ":", "\n", "        ", "src_dir", "=", "get_dir", "(", "[", "src_h", "*", "-", "0.5", ",", "0", "]", ",", "rot_rad", ")", "\n", "dst_dir", "=", "np", ".", "array", "(", "[", "dst_h", "*", "-", "0.5", ",", "0", "]", ",", "np", ".", "float32", ")", "\n", "\n", "", "src", "=", "np", ".", "zeros", "(", "(", "3", ",", "2", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "dst", "=", "np", ".", "zeros", "(", "(", "3", ",", "2", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "src", "[", "0", ",", ":", "]", "=", "center", "+", "scale_tmp", "*", "shift", "# x,y", "\n", "src", "[", "1", ",", ":", "]", "=", "center", "+", "src_dir", "+", "scale_tmp", "*", "shift", "\n", "dst", "[", "0", ",", ":", "]", "=", "[", "dst_w", "*", "0.5", ",", "dst_h", "*", "0.5", "]", "\n", "dst", "[", "1", ",", ":", "]", "=", "np", ".", "array", "(", "[", "dst_w", "*", "0.5", ",", "dst_h", "*", "0.5", "]", ")", "+", "dst_dir", "\n", "\n", "src", "[", "2", ":", ",", ":", "]", "=", "get_3rd_point", "(", "src", "[", "0", ",", ":", "]", ",", "src", "[", "1", ",", ":", "]", ")", "\n", "dst", "[", "2", ":", ",", ":", "]", "=", "get_3rd_point", "(", "dst", "[", "0", ",", ":", "]", ",", "dst", "[", "1", ",", ":", "]", ")", "\n", "\n", "if", "inv", ":", "\n", "        ", "trans", "=", "cv2", ".", "getAffineTransform", "(", "np", ".", "float32", "(", "dst", ")", ",", "np", ".", "float32", "(", "src", ")", ")", "\n", "", "else", ":", "\n", "        ", "trans", "=", "cv2", ".", "getAffineTransform", "(", "np", ".", "float32", "(", "src", ")", ",", "np", ".", "float32", "(", "dst", ")", ")", "\n", "\n", "", "return", "trans", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.affine_transform": [[101, 105], ["numpy.dot", "numpy.array"], "function", ["None"], ["", "def", "affine_transform", "(", "pt", ",", "t", ")", ":", "\n", "    ", "new_pt", "=", "np", ".", "array", "(", "[", "pt", "[", "0", "]", ",", "pt", "[", "1", "]", ",", "1.", "]", ")", ".", "T", "\n", "new_pt", "=", "np", ".", "dot", "(", "t", ",", "new_pt", ")", "\n", "return", "new_pt", "[", ":", "2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.affine_transform_pts": [[107, 112], ["numpy.add", "numpy.array().dot", "numpy.array", "numpy.dot", "numpy.array"], "function", ["None"], ["", "def", "affine_transform_pts", "(", "pts", ",", "t", ")", ":", "\n", "    ", "xyz", "=", "np", ".", "add", "(", "\n", "np", ".", "array", "(", "[", "[", "1", ",", "0", "]", ",", "[", "0", ",", "1", "]", ",", "[", "0", ",", "0", "]", "]", ")", ".", "dot", "(", "pts", ".", "T", ")", ",", "np", ".", "array", "(", "[", "[", "0", "]", ",", "[", "0", "]", ",", "\n", "[", "1", "]", "]", ")", ")", "\n", "return", "np", ".", "dot", "(", "t", ",", "xyz", ")", ".", "T", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.affine_transform_pts_cuda": [[114, 119], ["torch.cat", "torch.mm", "torch.t", "torch.t", "torch.ones"], "function", ["None"], ["", "def", "affine_transform_pts_cuda", "(", "pts", ",", "t", ")", ":", "\n", "    ", "npts", "=", "pts", ".", "shape", "[", "0", "]", "\n", "pts_homo", "=", "torch", ".", "cat", "(", "[", "pts", ",", "torch", ".", "ones", "(", "npts", ",", "1", ",", "device", "=", "pts", ".", "device", ")", "]", ",", "dim", "=", "1", ")", "\n", "out", "=", "torch", ".", "mm", "(", "t", ",", "torch", ".", "t", "(", "pts_homo", ")", ")", "\n", "return", "torch", ".", "t", "(", "out", "[", ":", "2", ",", ":", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.get_3rd_point": [[121, 124], ["numpy.array", "numpy.array"], "function", ["None"], ["", "def", "get_3rd_point", "(", "a", ",", "b", ")", ":", "\n", "    ", "direct", "=", "a", "-", "b", "\n", "return", "np", ".", "array", "(", "b", ")", "+", "np", ".", "array", "(", "[", "-", "direct", "[", "1", "]", ",", "direct", "[", "0", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.get_dir": [[126, 134], ["numpy.sin", "numpy.cos"], "function", ["None"], ["", "def", "get_dir", "(", "src_point", ",", "rot_rad", ")", ":", "\n", "    ", "sn", ",", "cs", "=", "np", ".", "sin", "(", "rot_rad", ")", ",", "np", ".", "cos", "(", "rot_rad", ")", "\n", "\n", "src_result", "=", "[", "0", ",", "0", "]", "\n", "src_result", "[", "0", "]", "=", "src_point", "[", "0", "]", "*", "cs", "-", "src_point", "[", "1", "]", "*", "sn", "\n", "src_result", "[", "1", "]", "=", "src_point", "[", "0", "]", "*", "sn", "+", "src_point", "[", "1", "]", "*", "cs", "\n", "\n", "return", "src_result", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.crop": [[136, 145], ["transforms.get_affine_transform", "cv2.warpAffine", "int", "int"], "function", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.get_affine_transform"], ["", "def", "crop", "(", "img", ",", "center", ",", "scale", ",", "output_size", ",", "rot", "=", "0", ")", ":", "\n", "    ", "trans", "=", "get_affine_transform", "(", "center", ",", "scale", ",", "rot", ",", "output_size", ")", "\n", "\n", "dst_img", "=", "cv2", ".", "warpAffine", "(", "\n", "img", ",", "\n", "trans", ",", "(", "int", "(", "output_size", "[", "0", "]", ")", ",", "int", "(", "output_size", "[", "1", "]", ")", ")", ",", "\n", "flags", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "\n", "return", "dst_img", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.get_scale": [[146, 158], ["numpy.array"], "function", ["None"], ["", "def", "get_scale", "(", "image_size", ",", "resized_size", ")", ":", "\n", "    ", "w", ",", "h", "=", "image_size", "\n", "w_resized", ",", "h_resized", "=", "resized_size", "\n", "if", "w", "/", "w_resized", "<", "h", "/", "h_resized", ":", "\n", "        ", "w_pad", "=", "h", "/", "h_resized", "*", "w_resized", "\n", "h_pad", "=", "h", "\n", "", "else", ":", "\n", "        ", "w_pad", "=", "w", "\n", "h_pad", "=", "w", "/", "w_resized", "*", "h_resized", "\n", "", "scale", "=", "np", ".", "array", "(", "[", "w_pad", "/", "200.0", ",", "h_pad", "/", "200.0", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "return", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.projectPoints": [[160, 186], ["numpy.dot"], "function", ["None"], ["", "def", "projectPoints", "(", "X", ",", "K", ",", "R", ",", "t", ",", "Kd", ")", ":", "\n", "    ", "\"\"\"\n    Projects points X (3xN) using camera intrinsics K (3x3),\n    extrinsics (R,t) and distortion parameters Kd=[k1,k2,p1,p2,k3].\n    Roughly, x = K*(R*X + t) + distortion\n    See http://docs.opencv.org/2.4/doc/tutorials/calib3d/camera_calibration/camera_calibration.html\n    or cv2.projectPoints\n    \"\"\"", "\n", "\n", "x", "=", "np", ".", "dot", "(", "R", ",", "X", ")", "+", "t", "\n", "\n", "x", "[", "0", ":", "2", ",", ":", "]", "=", "x", "[", "0", ":", "2", ",", ":", "]", "/", "(", "x", "[", "2", ",", ":", "]", "+", "1e-5", ")", "\n", "\n", "r", "=", "x", "[", "0", ",", ":", "]", "*", "x", "[", "0", ",", ":", "]", "+", "x", "[", "1", ",", ":", "]", "*", "x", "[", "1", ",", ":", "]", "\n", "\n", "x", "[", "0", ",", ":", "]", "=", "x", "[", "0", ",", ":", "]", "*", "(", "1", "+", "Kd", "[", "0", "]", "*", "r", "+", "Kd", "[", "1", "]", "*", "r", "*", "r", "+", "Kd", "[", "4", "]", "*", "r", "*", "r", "*", "r", "\n", ")", "+", "2", "*", "Kd", "[", "2", "]", "*", "x", "[", "0", ",", ":", "]", "*", "x", "[", "1", ",", ":", "]", "+", "Kd", "[", "3", "]", "*", "(", "\n", "r", "+", "2", "*", "x", "[", "0", ",", ":", "]", "*", "x", "[", "0", ",", ":", "]", ")", "\n", "x", "[", "1", ",", ":", "]", "=", "x", "[", "1", ",", ":", "]", "*", "(", "1", "+", "Kd", "[", "0", "]", "*", "r", "+", "Kd", "[", "1", "]", "*", "r", "*", "r", "+", "Kd", "[", "4", "]", "*", "r", "*", "r", "*", "r", "\n", ")", "+", "2", "*", "Kd", "[", "3", "]", "*", "x", "[", "0", ",", ":", "]", "*", "x", "[", "1", ",", ":", "]", "+", "Kd", "[", "2", "]", "*", "(", "\n", "r", "+", "2", "*", "x", "[", "1", ",", ":", "]", "*", "x", "[", "1", ",", ":", "]", ")", "\n", "\n", "x", "[", "0", ",", ":", "]", "=", "K", "[", "0", ",", "0", "]", "*", "x", "[", "0", ",", ":", "]", "+", "K", "[", "0", ",", "1", "]", "*", "x", "[", "1", ",", ":", "]", "+", "K", "[", "0", ",", "2", "]", "\n", "x", "[", "1", ",", ":", "]", "=", "K", "[", "1", ",", "0", "]", "*", "x", "[", "0", ",", ":", "]", "+", "K", "[", "1", ",", "1", "]", "*", "x", "[", "1", ",", ":", "]", "+", "K", "[", "1", ",", "2", "]", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.rotate_points": [[188, 203], ["numpy.array", "center.reshape.reshape", "np.array.dot", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.sin"], "function", ["None"], ["", "def", "rotate_points", "(", "points", ",", "center", ",", "rot_rad", ")", ":", "\n", "    ", "\"\"\"\n    :param points:  N*2\n    :param center:  2\n    :param rot_rad: scalar\n    :return: N*2\n    \"\"\"", "\n", "rot_rad", "=", "rot_rad", "*", "np", ".", "pi", "/", "180.0", "\n", "rotate_mat", "=", "np", ".", "array", "(", "[", "[", "np", ".", "cos", "(", "rot_rad", ")", ",", "-", "np", ".", "sin", "(", "rot_rad", ")", "]", ",", "\n", "[", "np", ".", "sin", "(", "rot_rad", ")", ",", "np", ".", "cos", "(", "rot_rad", ")", "]", "]", ")", "\n", "center", "=", "center", ".", "reshape", "(", "2", ",", "1", ")", "\n", "points", "=", "points", ".", "T", "\n", "points", "=", "rotate_mat", ".", "dot", "(", "points", "-", "center", ")", "+", "center", "\n", "\n", "return", "points", ".", "T", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.compute_similarity_transform": [[205, 265], ["X.mean", "Y.mean", "numpy.sqrt", "numpy.sqrt", "numpy.dot", "numpy.linalg.svd", "numpy.dot", "numpy.linalg.det", "numpy.sign", "numpy.sign", "numpy.dot", "s.sum", "numpy.dot", "numpy.dot", "numpy.dot"], "function", ["None"], ["", "def", "compute_similarity_transform", "(", "X", ",", "Y", ",", "compute_optimal_scale", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    A port of MATLAB's `procrustes` function to Numpy.\n    Adapted from http://stackoverflow.com/a/18927641/1884420\n\n    Args\n        X: array NxM of targets, with N number of points and M point dimensionality\n        Y: array NxM of inputs\n        compute_optimal_scale: whether we compute optimal scale or force it to be 1\n\n    Returns:\n        d: squared error after transformation\n        Z: transformed Y\n        T: computed rotation\n        b: scaling\n        c: translation\n    \"\"\"", "\n", "muX", "=", "X", ".", "mean", "(", "0", ")", "\n", "muY", "=", "Y", ".", "mean", "(", "0", ")", "\n", "\n", "X0", "=", "X", "-", "muX", "\n", "Y0", "=", "Y", "-", "muY", "\n", "\n", "ssX", "=", "(", "X0", "**", "2.", ")", ".", "sum", "(", ")", "\n", "ssY", "=", "(", "Y0", "**", "2.", ")", ".", "sum", "(", ")", "\n", "\n", "# centred Frobenius norm", "\n", "normX", "=", "np", ".", "sqrt", "(", "ssX", ")", "\n", "normY", "=", "np", ".", "sqrt", "(", "ssY", ")", "\n", "\n", "# scale to equal (unit) norm", "\n", "X0", "=", "X0", "/", "normX", "\n", "Y0", "=", "Y0", "/", "normY", "\n", "\n", "# optimum rotation matrix of Y", "\n", "A", "=", "np", ".", "dot", "(", "X0", ".", "T", ",", "Y0", ")", "\n", "U", ",", "s", ",", "Vt", "=", "np", ".", "linalg", ".", "svd", "(", "A", ",", "full_matrices", "=", "False", ")", "\n", "V", "=", "Vt", ".", "T", "\n", "T", "=", "np", ".", "dot", "(", "V", ",", "U", ".", "T", ")", "\n", "\n", "# Make sure we have a rotation", "\n", "detT", "=", "np", ".", "linalg", ".", "det", "(", "T", ")", "\n", "V", "[", ":", ",", "-", "1", "]", "*=", "np", ".", "sign", "(", "detT", ")", "\n", "s", "[", "-", "1", "]", "*=", "np", ".", "sign", "(", "detT", ")", "\n", "T", "=", "np", ".", "dot", "(", "V", ",", "U", ".", "T", ")", "\n", "\n", "traceTA", "=", "s", ".", "sum", "(", ")", "\n", "\n", "if", "compute_optimal_scale", ":", "# Compute optimum scaling of Y.", "\n", "        ", "b", "=", "traceTA", "*", "normX", "/", "normY", "\n", "d", "=", "1", "-", "traceTA", "**", "2", "\n", "Z", "=", "normX", "*", "traceTA", "*", "np", ".", "dot", "(", "Y0", ",", "T", ")", "+", "muX", "\n", "", "else", ":", "# If no scaling allowed", "\n", "        ", "b", "=", "1", "\n", "d", "=", "1", "+", "ssY", "/", "ssX", "-", "2", "*", "traceTA", "*", "normY", "/", "normX", "\n", "Z", "=", "normY", "*", "np", ".", "dot", "(", "Y0", ",", "T", ")", "+", "muX", "\n", "\n", "", "c", "=", "muX", "-", "b", "*", "np", ".", "dot", "(", "muY", ",", "T", ")", "\n", "\n", "return", "d", ",", "Z", ",", "T", ",", "b", ",", "c", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.procrustes_transform": [[267, 272], ["transforms.compute_similarity_transform", "from_pose.dot"], "function", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.compute_similarity_transform"], ["", "def", "procrustes_transform", "(", "target_pose", ",", "from_pose", ")", ":", "\n", "    ", "_", ",", "Z", ",", "rot", ",", "s", ",", "t", "=", "compute_similarity_transform", "(", "target_pose", ",", "from_pose", ",", "compute_optimal_scale", "=", "True", ")", "\n", "align_pose", "=", "s", "*", "from_pose", ".", "dot", "(", "rot", ")", "+", "t", "\n", "\n", "return", "align_pose", "\n", "", ""]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.cameras.unfold_camera_param": [[11, 24], ["torch.as_tensor", "torch.as_tensor", "torch.as_tensor", "torch.as_tensor", "torch.tensor().reshape", "torch.as_tensor", "torch.as_tensor", "torch.as_tensor", "torch.tensor"], "function", ["None"], ["def", "unfold_camera_param", "(", "camera", ",", "device", "=", "None", ")", ":", "\n", "    ", "R", "=", "torch", ".", "as_tensor", "(", "camera", "[", "'R'", "]", ",", "dtype", "=", "torch", ".", "float", ",", "device", "=", "device", ")", "\n", "T", "=", "torch", ".", "as_tensor", "(", "camera", "[", "'T'", "]", ",", "dtype", "=", "torch", ".", "float", ",", "device", "=", "device", ")", "\n", "fx", "=", "torch", ".", "as_tensor", "(", "camera", "[", "'fx'", "]", ",", "dtype", "=", "torch", ".", "float", ",", "device", "=", "device", ")", "\n", "fy", "=", "torch", ".", "as_tensor", "(", "camera", "[", "'fy'", "]", ",", "dtype", "=", "torch", ".", "float", ",", "device", "=", "device", ")", "\n", "f", "=", "torch", ".", "tensor", "(", "[", "fx", ",", "fy", "]", ",", "dtype", "=", "torch", ".", "float", ",", "device", "=", "device", ")", ".", "reshape", "(", "2", ",", "1", ")", "\n", "c", "=", "torch", ".", "as_tensor", "(", "\n", "[", "[", "camera", "[", "'cx'", "]", "]", ",", "[", "camera", "[", "'cy'", "]", "]", "]", ",", "\n", "dtype", "=", "torch", ".", "float", ",", "\n", "device", "=", "device", ")", "\n", "k", "=", "torch", ".", "as_tensor", "(", "camera", "[", "'k'", "]", ",", "dtype", "=", "torch", ".", "float", ",", "device", "=", "device", ")", "\n", "p", "=", "torch", ".", "as_tensor", "(", "camera", "[", "'p'", "]", ",", "dtype", "=", "torch", ".", "float", ",", "device", "=", "device", ")", "\n", "return", "R", ",", "T", ",", "f", ",", "c", ",", "k", ",", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.cameras.project_point_radial": [[26, 54], ["torch.mm", "k.repeat", "torch.sum", "torch.cat", "torch.t", "torch.einsum", "torch.ger", "torch.t", "torch.cat().view", "torch.sum.view", "torch.cat"], "function", ["None"], ["", "def", "project_point_radial", "(", "x", ",", "R", ",", "T", ",", "f", ",", "c", ",", "k", ",", "p", ")", ":", "\n", "    ", "\"\"\"\n    Args\n        x: Nx3 points in world coordinates\n        R: 3x3 Camera rotation matrix\n        T: 3x1 Camera translation parameters\n        f: (scalar) Camera focal length\n        c: 2x1 Camera center\n        k: 3x1 Camera radial distortion coefficients\n        p: 2x1 Camera tangential distortion coefficients\n    Returns\n        ypixel.T: Nx2 points in pixel space\n    \"\"\"", "\n", "n", "=", "x", ".", "shape", "[", "0", "]", "\n", "xcam", "=", "torch", ".", "mm", "(", "R", ",", "torch", ".", "t", "(", "x", ")", "-", "T", ")", "\n", "y", "=", "xcam", "[", ":", "2", "]", "/", "(", "xcam", "[", "2", "]", "+", "1e-5", ")", "\n", "\n", "kexp", "=", "k", ".", "repeat", "(", "(", "1", ",", "n", ")", ")", "\n", "r2", "=", "torch", ".", "sum", "(", "y", "**", "2", ",", "0", ",", "keepdim", "=", "True", ")", "\n", "r2exp", "=", "torch", ".", "cat", "(", "[", "r2", ",", "r2", "**", "2", ",", "r2", "**", "3", "]", ",", "0", ")", "\n", "radial", "=", "1", "+", "torch", ".", "einsum", "(", "'ij,ij->j'", ",", "kexp", ",", "r2exp", ")", "\n", "\n", "tan", "=", "p", "[", "0", "]", "*", "y", "[", "1", "]", "+", "p", "[", "1", "]", "*", "y", "[", "0", "]", "\n", "corr", "=", "(", "radial", "+", "2", "*", "tan", ")", ".", "repeat", "(", "(", "2", ",", "1", ")", ")", "\n", "\n", "y", "=", "y", "*", "corr", "+", "torch", ".", "ger", "(", "torch", ".", "cat", "(", "[", "p", "[", "1", "]", ",", "p", "[", "0", "]", "]", ")", ".", "view", "(", "-", "1", ")", ",", "r2", ".", "view", "(", "-", "1", ")", ")", "\n", "ypixel", "=", "(", "f", "*", "y", ")", "+", "c", "\n", "return", "torch", ".", "t", "(", "ypixel", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.cameras.project_pose": [[56, 59], ["cameras.unfold_camera_param", "cameras.project_point_radial"], "function", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.cameras_cpu.unfold_camera_param", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.cameras_cpu.project_point_radial"], ["", "def", "project_pose", "(", "x", ",", "camera", ")", ":", "\n", "    ", "R", ",", "T", ",", "f", ",", "c", ",", "k", ",", "p", "=", "unfold_camera_param", "(", "camera", ",", "device", "=", "x", ".", "device", ")", "\n", "return", "project_point_radial", "(", "x", ",", "R", ",", "T", ",", "f", ",", "c", ",", "k", ",", "p", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.cameras.world_to_camera_frame": [[61, 75], ["torch.as_tensor", "torch.as_tensor", "torch.mm", "torch.t", "torch.t"], "function", ["None"], ["", "def", "world_to_camera_frame", "(", "x", ",", "R", ",", "T", ")", ":", "\n", "    ", "\"\"\"\n    Args\n        x: Nx3 3d points in world coordinates\n        R: 3x3 Camera rotation matrix\n        T: 3x1 Camera translation parameters\n    Returns\n        xcam: Nx3 3d points in camera coordinates\n    \"\"\"", "\n", "\n", "R", "=", "torch", ".", "as_tensor", "(", "R", ",", "device", "=", "x", ".", "device", ")", "\n", "T", "=", "torch", ".", "as_tensor", "(", "T", ",", "device", "=", "x", ".", "device", ")", "\n", "xcam", "=", "torch", ".", "mm", "(", "R", ",", "torch", ".", "t", "(", "x", ")", "-", "T", ")", "\n", "return", "torch", ".", "t", "(", "xcam", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.cameras.camera_to_world_frame": [[77, 92], ["torch.as_tensor", "torch.as_tensor", "torch.mm", "torch.t", "torch.t", "torch.t"], "function", ["None"], ["", "def", "camera_to_world_frame", "(", "x", ",", "R", ",", "T", ")", ":", "\n", "    ", "\"\"\"\n    Args\n        x: Nx3 points in camera coordinates\n        R: 3x3 Camera rotation matrix\n        T: 3x1 Camera translation parameters\n    Returns\n        xcam: Nx3 points in world coordinates\n    \"\"\"", "\n", "\n", "R", "=", "torch", ".", "as_tensor", "(", "R", ",", "device", "=", "x", ".", "device", ")", "\n", "T", "=", "torch", ".", "as_tensor", "(", "T", ",", "device", "=", "x", ".", "device", ")", "\n", "xcam", "=", "torch", ".", "mm", "(", "torch", ".", "t", "(", "R", ")", ",", "torch", ".", "t", "(", "x", ")", ")", "\n", "xcam", "=", "xcam", "+", "T", "# rotate and translate", "\n", "return", "torch", ".", "t", "(", "xcam", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.zipreader.imread": [[18, 42], ["path.index", "range", "_im_zfile.append", "[].read", "cv2.imdecode", "print", "os.path.isfile", "print", "len", "numpy.frombuffer", "[].read", "cv2.imdecode", "zipfile.ZipFile", "numpy.frombuffer"], "function", ["None"], ["def", "imread", "(", "filename", ",", "flags", "=", "cv2", ".", "IMREAD_COLOR", ")", ":", "\n", "    ", "global", "_im_zfile", "\n", "path", "=", "filename", "\n", "pos_at", "=", "path", ".", "index", "(", "'@'", ")", "\n", "if", "pos_at", "==", "-", "1", ":", "\n", "        ", "print", "(", "\"character '@' is not found from the given path '%s'\"", "%", "(", "path", ")", ")", "\n", "assert", "0", "\n", "", "path_zip", "=", "path", "[", "0", ":", "pos_at", "]", "\n", "path_img", "=", "path", "[", "pos_at", "+", "2", ":", "]", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "path_zip", ")", ":", "\n", "        ", "print", "(", "\"zip file '%s' is not found\"", "%", "(", "path_zip", ")", ")", "\n", "assert", "0", "\n", "", "for", "i", "in", "range", "(", "len", "(", "_im_zfile", ")", ")", ":", "\n", "        ", "if", "_im_zfile", "[", "i", "]", "[", "'path'", "]", "==", "path_zip", ":", "\n", "            ", "data", "=", "_im_zfile", "[", "i", "]", "[", "'zipfile'", "]", ".", "read", "(", "path_img", ")", "\n", "return", "cv2", ".", "imdecode", "(", "np", ".", "frombuffer", "(", "data", ",", "np", ".", "uint8", ")", ",", "flags", ")", "\n", "\n", "", "", "_im_zfile", ".", "append", "(", "{", "\n", "'path'", ":", "path_zip", ",", "\n", "'zipfile'", ":", "zipfile", ".", "ZipFile", "(", "path_zip", ",", "'r'", ")", "\n", "}", ")", "\n", "data", "=", "_im_zfile", "[", "-", "1", "]", "[", "'zipfile'", "]", ".", "read", "(", "path_img", ")", "\n", "\n", "return", "cv2", ".", "imdecode", "(", "np", ".", "frombuffer", "(", "data", ",", "np", ".", "uint8", ")", ",", "flags", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.zipreader.xmlread": [[44, 66], ["path.index", "xrange", "_xml_path_zip.append", "print", "_xml_zfile.append", "_xml_zfile[].open", "xml.fromstring", "print", "os.path.isfile", "print", "len", "zipfile.ZipFile", "_xml_zfile[].open.read", "_xml_zfile[].open", "xml.fromstring", "_xml_zfile[].open.read"], "function", ["None"], ["", "def", "xmlread", "(", "filename", ")", ":", "\n", "    ", "global", "_xml_path_zip", "\n", "global", "_xml_zfile", "\n", "path", "=", "filename", "\n", "pos_at", "=", "path", ".", "index", "(", "'@'", ")", "\n", "if", "pos_at", "==", "-", "1", ":", "\n", "        ", "print", "(", "\"character '@' is not found from the given path '%s'\"", "%", "(", "path", ")", ")", "\n", "assert", "0", "\n", "", "path_zip", "=", "path", "[", "0", ":", "pos_at", "]", "\n", "path_xml", "=", "path", "[", "pos_at", "+", "2", ":", "]", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "path_zip", ")", ":", "\n", "        ", "print", "(", "\"zip file '%s' is not found\"", "%", "(", "path_zip", ")", ")", "\n", "assert", "0", "\n", "", "for", "i", "in", "xrange", "(", "len", "(", "_xml_path_zip", ")", ")", ":", "\n", "        ", "if", "_xml_path_zip", "[", "i", "]", "==", "path_zip", ":", "\n", "            ", "data", "=", "_xml_zfile", "[", "i", "]", ".", "open", "(", "path_xml", ")", "\n", "return", "ET", ".", "fromstring", "(", "data", ".", "read", "(", ")", ")", "\n", "", "", "_xml_path_zip", ".", "append", "(", "path_zip", ")", "\n", "print", "(", "\"read new xml file '%s'\"", "%", "(", "path_zip", ")", ")", "\n", "_xml_zfile", ".", "append", "(", "zipfile", ".", "ZipFile", "(", "path_zip", ",", "'r'", ")", ")", "\n", "data", "=", "_xml_zfile", "[", "-", "1", "]", ".", "open", "(", "path_xml", ")", "\n", "return", "ET", ".", "fromstring", "(", "data", ".", "read", "(", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.cameras_cpu.unfold_camera_param": [[10, 21], ["numpy.array().reshape", "numpy.array().reshape", "numpy.array", "numpy.array"], "function", ["None"], ["def", "unfold_camera_param", "(", "camera", ")", ":", "\n", "    ", "R", "=", "camera", "[", "'R'", "]", "\n", "T", "=", "camera", "[", "'T'", "]", "\n", "fx", "=", "camera", "[", "'fx'", "]", "\n", "fy", "=", "camera", "[", "'fy'", "]", "\n", "# f = 0.5 * (camera['fx'] + camera['fy'])", "\n", "f", "=", "np", ".", "array", "(", "[", "[", "fx", "]", ",", "[", "fy", "]", "]", ")", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "c", "=", "np", ".", "array", "(", "[", "[", "camera", "[", "'cx'", "]", "]", ",", "[", "camera", "[", "'cy'", "]", "]", "]", ")", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "k", "=", "camera", "[", "'k'", "]", "\n", "p", "=", "camera", "[", "'p'", "]", "\n", "return", "R", ",", "T", ",", "f", ",", "c", ",", "k", ",", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.cameras_cpu.project_point_radial": [[23, 49], ["R.dot", "numpy.sum", "numpy.einsum", "numpy.outer", "numpy.multiply", "numpy.tile", "numpy.array", "numpy.tile", "numpy.array().reshape", "numpy.array"], "function", ["None"], ["", "def", "project_point_radial", "(", "x", ",", "R", ",", "T", ",", "f", ",", "c", ",", "k", ",", "p", ")", ":", "\n", "    ", "\"\"\"\n    Args\n        x: Nx3 points in world coordinates\n        R: 3x3 Camera rotation matrix\n        T: 3x1 Camera translation parameters\n        f: (scalar) Camera focal length\n        c: 2x1 Camera center\n        k: 3x1 Camera radial distortion coefficients\n        p: 2x1 Camera tangential distortion coefficients\n    Returns\n        ypixel.T: Nx2 points in pixel space\n    \"\"\"", "\n", "n", "=", "x", ".", "shape", "[", "0", "]", "\n", "xcam", "=", "R", ".", "dot", "(", "x", ".", "T", "-", "T", ")", "\n", "y", "=", "xcam", "[", ":", "2", "]", "/", "(", "xcam", "[", "2", "]", "+", "1e-5", ")", "\n", "# print(xcam[2])", "\n", "\n", "r2", "=", "np", ".", "sum", "(", "y", "**", "2", ",", "axis", "=", "0", ")", "\n", "radial", "=", "1", "+", "np", ".", "einsum", "(", "'ij,ij->j'", ",", "np", ".", "tile", "(", "k", ",", "(", "1", ",", "n", ")", ")", ",", "\n", "np", ".", "array", "(", "[", "r2", ",", "r2", "**", "2", ",", "r2", "**", "3", "]", ")", ")", "\n", "tan", "=", "p", "[", "0", "]", "*", "y", "[", "1", "]", "+", "p", "[", "1", "]", "*", "y", "[", "0", "]", "\n", "y", "=", "y", "*", "np", ".", "tile", "(", "radial", "+", "2", "*", "tan", ",", "\n", "(", "2", ",", "1", ")", ")", "+", "np", ".", "outer", "(", "np", ".", "array", "(", "[", "p", "[", "1", "]", ",", "p", "[", "0", "]", "]", ")", ".", "reshape", "(", "-", "1", ")", ",", "r2", ")", "\n", "ypixel", "=", "np", ".", "multiply", "(", "f", ",", "y", ")", "+", "c", "\n", "return", "ypixel", ".", "T", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.cameras_cpu.project_pose": [[51, 54], ["cameras_cpu.unfold_camera_param", "cameras_cpu.project_point_radial"], "function", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.cameras_cpu.unfold_camera_param", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.cameras_cpu.project_point_radial"], ["", "def", "project_pose", "(", "x", ",", "camera", ")", ":", "\n", "    ", "R", ",", "T", ",", "f", ",", "c", ",", "k", ",", "p", "=", "unfold_camera_param", "(", "camera", ")", "\n", "return", "project_point_radial", "(", "x", ",", "R", ",", "T", ",", "f", ",", "c", ",", "k", ",", "p", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.cameras_cpu.world_to_camera_frame": [[56, 68], ["R.dot"], "function", ["None"], ["", "def", "world_to_camera_frame", "(", "x", ",", "R", ",", "T", ")", ":", "\n", "    ", "\"\"\"\n    Args\n        x: Nx3 3d points in world coordinates\n        R: 3x3 Camera rotation matrix\n        T: 3x1 Camera translation parameters\n    Returns\n        xcam: Nx3 3d points in camera coordinates\n    \"\"\"", "\n", "\n", "xcam", "=", "R", ".", "dot", "(", "x", ".", "T", "-", "T", ")", "# rotate and translate", "\n", "return", "xcam", ".", "T", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.cameras_cpu.camera_to_world_frame": [[70, 82], ["R.T.dot"], "function", ["None"], ["", "def", "camera_to_world_frame", "(", "x", ",", "R", ",", "T", ")", ":", "\n", "    ", "\"\"\"\n    Args\n        x: Nx3 points in camera coordinates\n        R: 3x3 Camera rotation matrix\n        T: 3x1 Camera translation parameters\n    Returns\n        xcam: Nx3 points in world coordinates\n    \"\"\"", "\n", "\n", "xcam", "=", "R", ".", "T", ".", "dot", "(", "x", ".", "T", ")", "+", "T", "# rotate and translate", "\n", "return", "xcam", ".", "T", "\n", "", ""]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.utils.create_logger": [[22, 57], ["pathlib.Path", "core.config.get_model_name", "print", "final_output_dir.mkdir", "time.strftime", "logging.basicConfig", "logging.getLogger", "logging.getLogger.setLevel", "logging.StreamHandler", "logging.getLogger().addHandler", "print", "tensorboard_log_dir.mkdir", "os.path.dirname", "root_output_dir.exists", "print", "root_output_dir.mkdir", "os.path.basename().split", "str", "str", "str", "logging.getLogger", "os.path.basename"], "function", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.config.get_model_name"], ["def", "create_logger", "(", "cfg", ",", "cfg_name", ",", "phase", "=", "'train'", ")", ":", "\n", "    ", "this_dir", "=", "Path", "(", "os", ".", "path", ".", "dirname", "(", "__file__", ")", ")", "##", "\n", "root_output_dir", "=", "(", "this_dir", "/", "'..'", "/", "'..'", "/", "cfg", ".", "OUTPUT_DIR", ")", ".", "resolve", "(", ")", "##", "\n", "tensorboard_log_dir", "=", "(", "this_dir", "/", "'..'", "/", "'..'", "/", "cfg", ".", "LOG_DIR", ")", ".", "resolve", "(", ")", "\n", "# set up logger", "\n", "if", "not", "root_output_dir", ".", "exists", "(", ")", ":", "\n", "        ", "print", "(", "'=> creating {}'", ".", "format", "(", "root_output_dir", ")", ")", "\n", "root_output_dir", ".", "mkdir", "(", ")", "\n", "\n", "", "dataset", "=", "cfg", ".", "DATASET", ".", "TRAIN_DATASET", "\n", "model", ",", "_", "=", "get_model_name", "(", "cfg", ")", "\n", "cfg_name", "=", "os", ".", "path", ".", "basename", "(", "cfg_name", ")", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "\n", "final_output_dir", "=", "root_output_dir", "/", "dataset", "/", "model", "/", "cfg_name", "\n", "\n", "print", "(", "'=> creating {}'", ".", "format", "(", "final_output_dir", ")", ")", "\n", "final_output_dir", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "\n", "time_str", "=", "time", ".", "strftime", "(", "'%Y-%m-%d-%H-%M'", ")", "\n", "log_file", "=", "'{}_{}_{}.log'", ".", "format", "(", "cfg_name", ",", "time_str", ",", "phase", ")", "\n", "final_log_file", "=", "final_output_dir", "/", "log_file", "\n", "head", "=", "'%(asctime)-15s %(message)s'", "\n", "logging", ".", "basicConfig", "(", "filename", "=", "str", "(", "final_log_file", ")", ",", "\n", "format", "=", "head", ")", "\n", "logger", "=", "logging", ".", "getLogger", "(", ")", "\n", "logger", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "console", "=", "logging", ".", "StreamHandler", "(", ")", "\n", "logging", ".", "getLogger", "(", "''", ")", ".", "addHandler", "(", "console", ")", "\n", "\n", "tensorboard_log_dir", "=", "tensorboard_log_dir", "/", "dataset", "/", "model", "/", "(", "cfg_name", "+", "time_str", ")", "\n", "print", "(", "'=> creating {}'", ".", "format", "(", "tensorboard_log_dir", ")", ")", "\n", "tensorboard_log_dir", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "\n", "return", "logger", ",", "str", "(", "final_output_dir", ")", ",", "str", "(", "tensorboard_log_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.utils.get_optimizer": [[58, 75], ["torch.SGD", "model.parameters", "torch.Adam", "model.parameters"], "function", ["None"], ["", "def", "get_optimizer", "(", "cfg", ",", "model", ")", ":", "\n", "    ", "optimizer", "=", "None", "\n", "if", "cfg", ".", "TRAIN", ".", "OPTIMIZER", "==", "'sgd'", ":", "\n", "        ", "optimizer", "=", "optim", ".", "SGD", "(", "\n", "model", ".", "parameters", "(", ")", ",", "\n", "lr", "=", "cfg", ".", "TRAIN", ".", "LR", ",", "\n", "momentum", "=", "cfg", ".", "TRAIN", ".", "MOMENTUM", ",", "\n", "weight_decay", "=", "cfg", ".", "TRAIN", ".", "WD", ",", "\n", "nesterov", "=", "cfg", ".", "TRAIN", ".", "NESTEROV", "\n", ")", "\n", "", "elif", "cfg", ".", "TRAIN", ".", "OPTIMIZER", "==", "'adam'", ":", "\n", "        ", "optimizer", "=", "optim", ".", "Adam", "(", "\n", "model", ".", "parameters", "(", ")", ",", "\n", "lr", "=", "cfg", ".", "TRAIN", ".", "LR", "\n", ")", "\n", "\n", "", "return", "optimizer", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.utils.load_model_state": [[77, 87], ["os.path.join", "os.path.isfile", "model.module.load_state_dict", "print", "print", "torch.load", "torch.load", "torch.load", "str"], "function", ["None"], ["", "def", "load_model_state", "(", "model", ",", "output_dir", ",", "epoch", ")", ":", "\n", "    ", "file", "=", "os", ".", "path", ".", "join", "(", "output_dir", ",", "'checkpoint_3d_epoch'", "+", "str", "(", "epoch", ")", "+", "'.pth.tar'", ")", "\n", "if", "os", ".", "path", ".", "isfile", "(", "file", ")", ":", "\n", "        ", "model", ".", "module", ".", "load_state_dict", "(", "torch", ".", "load", "(", "file", ")", ")", "\n", "print", "(", "'=> load models state {} (epoch {})'", "\n", ".", "format", "(", "file", ",", "epoch", ")", ")", "\n", "return", "model", "\n", "", "else", ":", "\n", "        ", "print", "(", "'=> no checkpoint found at {}'", ".", "format", "(", "file", ")", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.utils.load_checkpoint": [[89, 105], ["os.path.join", "os.path.isfile", "torch.load", "torch.load", "torch.load", "model.module.load_state_dict", "optimizer.load_state_dict", "print", "print"], "function", ["None"], ["", "", "def", "load_checkpoint", "(", "model", ",", "optimizer", ",", "output_dir", ",", "filename", "=", "'checkpoint.pth.tar'", ")", ":", "\n", "    ", "file", "=", "os", ".", "path", ".", "join", "(", "output_dir", ",", "filename", ")", "\n", "if", "os", ".", "path", ".", "isfile", "(", "file", ")", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "load", "(", "file", ")", "\n", "start_epoch", "=", "checkpoint", "[", "'epoch'", "]", "\n", "precision", "=", "checkpoint", "[", "'precision'", "]", "if", "'precision'", "in", "checkpoint", "else", "0", "\n", "model", ".", "module", ".", "load_state_dict", "(", "checkpoint", "[", "'state_dict'", "]", ")", "\n", "optimizer", ".", "load_state_dict", "(", "checkpoint", "[", "'optimizer'", "]", ")", "\n", "print", "(", "'=> load checkpoint {} (epoch {})'", "\n", ".", "format", "(", "file", ",", "start_epoch", ")", ")", "\n", "\n", "return", "start_epoch", ",", "model", ",", "optimizer", ",", "precision", "\n", "\n", "", "else", ":", "\n", "        ", "print", "(", "'=> no checkpoint found at {}'", ".", "format", "(", "file", ")", ")", "\n", "return", "0", ",", "model", ",", "optimizer", ",", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.utils.save_checkpoint": [[107, 113], ["torch.save", "torch.save", "torch.save", "os.path.join", "torch.save", "torch.save", "torch.save", "os.path.join"], "function", ["None"], ["", "", "def", "save_checkpoint", "(", "states", ",", "is_best", ",", "output_dir", ",", "\n", "filename", "=", "'checkpoint.pth.tar'", ")", ":", "\n", "    ", "torch", ".", "save", "(", "states", ",", "os", ".", "path", ".", "join", "(", "output_dir", ",", "filename", ")", ")", "\n", "if", "is_best", "and", "'state_dict'", "in", "states", ":", "\n", "        ", "torch", ".", "save", "(", "states", "[", "'state_dict'", "]", ",", "\n", "os", ".", "path", ".", "join", "(", "output_dir", ",", "'model_best.pth.tar'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.utils.load_backbone_panoptic": [[115, 147], ["os.path.dirname", "os.path.abspath", "torch.load", "torch.load", "torch.load", "model.module.backbone.state_dict", "torch.load.items", "logging.info", "model.module.backbone.load_state_dict", "os.path.join", "k.replace", "k.replace", "print", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.init.xavier_uniform_", "min", "k.replace", "k.replace", "print", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.init.zeros_", "min", "k.replace", "k.replace", "k.replace", "k.replace", "k.replace"], "function", ["None"], ["", "", "def", "load_backbone_panoptic", "(", "model", ",", "pretrained_file", ")", ":", "\n", "    ", "this_dir", "=", "os", ".", "path", ".", "dirname", "(", "__file__", ")", "\n", "pretrained_file", "=", "os", ".", "path", ".", "abspath", "(", "os", ".", "path", ".", "join", "(", "this_dir", ",", "'../..'", ",", "pretrained_file", ")", ")", "\n", "pretrained_state_dict", "=", "torch", ".", "load", "(", "pretrained_file", ")", "\n", "model_state_dict", "=", "model", ".", "module", ".", "backbone", ".", "state_dict", "(", ")", "\n", "\n", "prefix", "=", "\"module.\"", "\n", "new_pretrained_state_dict", "=", "{", "}", "\n", "for", "k", ",", "v", "in", "pretrained_state_dict", ".", "items", "(", ")", ":", "\n", "        ", "if", "k", ".", "replace", "(", "prefix", ",", "\"\"", ")", "in", "model_state_dict", "and", "v", ".", "shape", "==", "model_state_dict", "[", "k", ".", "replace", "(", "prefix", ",", "\"\"", ")", "]", ".", "shape", ":", "\n", "            ", "new_pretrained_state_dict", "[", "k", ".", "replace", "(", "prefix", ",", "\"\"", ")", "]", "=", "v", "\n", "", "elif", "k", ".", "replace", "(", "prefix", ",", "\"\"", ")", "==", "\"final_layer.weight\"", ":", "# TODO", "\n", "            ", "print", "(", "\"Reiniting final layer filters:\"", ",", "k", ")", "\n", "\n", "o", "=", "torch", ".", "zeros_like", "(", "model_state_dict", "[", "k", ".", "replace", "(", "prefix", ",", "\"\"", ")", "]", "[", ":", ",", ":", ",", ":", ",", ":", "]", ")", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "o", ")", "\n", "n_filters", "=", "min", "(", "o", ".", "shape", "[", "0", "]", ",", "v", ".", "shape", "[", "0", "]", ")", "\n", "o", "[", ":", "n_filters", ",", ":", ",", ":", ",", ":", "]", "=", "v", "[", ":", "n_filters", ",", ":", ",", ":", ",", ":", "]", "\n", "\n", "new_pretrained_state_dict", "[", "k", ".", "replace", "(", "prefix", ",", "\"\"", ")", "]", "=", "o", "\n", "", "elif", "k", ".", "replace", "(", "prefix", ",", "\"\"", ")", "==", "\"final_layer.bias\"", ":", "\n", "            ", "print", "(", "\"Reiniting final layer biases:\"", ",", "k", ")", "\n", "o", "=", "torch", ".", "zeros_like", "(", "model_state_dict", "[", "k", ".", "replace", "(", "prefix", ",", "\"\"", ")", "]", "[", ":", "]", ")", "\n", "nn", ".", "init", ".", "zeros_", "(", "o", ")", "\n", "n_filters", "=", "min", "(", "o", ".", "shape", "[", "0", "]", ",", "v", ".", "shape", "[", "0", "]", ")", "\n", "o", "[", ":", "n_filters", "]", "=", "v", "[", ":", "n_filters", "]", "\n", "\n", "new_pretrained_state_dict", "[", "k", ".", "replace", "(", "prefix", ",", "\"\"", ")", "]", "=", "o", "\n", "", "", "logging", ".", "info", "(", "\"load backbone statedict from {}\"", ".", "format", "(", "pretrained_file", ")", ")", "\n", "model", ".", "module", ".", "backbone", ".", "load_state_dict", "(", "new_pretrained_state_dict", ")", "\n", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.vis.save_batch_image_with_joints_multi": [[17, 58], ["batch_image.flip.flip", "torchvision.utils.make_grid", "torchvision.utils.make_grid.mul().clamp().byte().permute().cpu().numpy", "ndarr.copy.copy", "batch_image.flip.size", "min", "int", "int", "int", "range", "cv2.imwrite", "math.ceil", "range", "torchvision.utils.make_grid.mul().clamp().byte().permute().cpu", "batch_image.flip.size", "batch_image.flip.size", "range", "float", "zip", "torchvision.utils.make_grid.mul().clamp().byte().permute", "cv2.circle", "torchvision.utils.make_grid.mul().clamp().byte", "int", "int", "torchvision.utils.make_grid.mul().clamp", "torchvision.utils.make_grid.mul"], "function", ["None"], ["def", "save_batch_image_with_joints_multi", "(", "batch_image", ",", "\n", "batch_joints", ",", "\n", "batch_joints_vis", ",", "\n", "num_person", ",", "\n", "file_name", ",", "\n", "nrow", "=", "8", ",", "\n", "padding", "=", "2", ")", ":", "\n", "    ", "'''\n    batch_image: [batch_size, channel, height, width]\n    batch_joints: [batch_size, num_person, num_joints, 3],\n    batch_joints_vis: [batch_size, num_person, num_joints, 1],\n    num_person: [batch_size]\n    }\n    '''", "\n", "batch_image", "=", "batch_image", ".", "flip", "(", "1", ")", "\n", "grid", "=", "torchvision", ".", "utils", ".", "make_grid", "(", "batch_image", ",", "nrow", ",", "padding", ",", "True", ")", "\n", "ndarr", "=", "grid", ".", "mul", "(", "255", ")", ".", "clamp", "(", "0", ",", "255", ")", ".", "byte", "(", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "ndarr", "=", "ndarr", ".", "copy", "(", ")", "\n", "\n", "nmaps", "=", "batch_image", ".", "size", "(", "0", ")", "\n", "xmaps", "=", "min", "(", "nrow", ",", "nmaps", ")", "\n", "ymaps", "=", "int", "(", "math", ".", "ceil", "(", "float", "(", "nmaps", ")", "/", "xmaps", ")", ")", "\n", "height", "=", "int", "(", "batch_image", ".", "size", "(", "2", ")", "+", "padding", ")", "\n", "width", "=", "int", "(", "batch_image", ".", "size", "(", "3", ")", "+", "padding", ")", "\n", "k", "=", "0", "\n", "for", "y", "in", "range", "(", "ymaps", ")", ":", "\n", "        ", "for", "x", "in", "range", "(", "xmaps", ")", ":", "\n", "            ", "if", "k", ">=", "nmaps", ":", "\n", "                ", "break", "\n", "", "for", "n", "in", "range", "(", "num_person", "[", "k", "]", ")", ":", "\n", "                ", "joints", "=", "batch_joints", "[", "k", ",", "n", "]", "\n", "joints_vis", "=", "batch_joints_vis", "[", "k", ",", "n", "]", "\n", "\n", "for", "joint", ",", "joint_vis", "in", "zip", "(", "joints", ",", "joints_vis", ")", ":", "\n", "                    ", "joint", "[", "0", "]", "=", "x", "*", "width", "+", "padding", "+", "joint", "[", "0", "]", "\n", "joint", "[", "1", "]", "=", "y", "*", "height", "+", "padding", "+", "joint", "[", "1", "]", "\n", "if", "joint_vis", "[", "0", "]", ":", "\n", "                        ", "cv2", ".", "circle", "(", "ndarr", ",", "(", "int", "(", "joint", "[", "0", "]", ")", ",", "int", "(", "joint", "[", "1", "]", ")", ")", ",", "2", ",", "\n", "[", "0", ",", "255", ",", "255", "]", ",", "2", ")", "\n", "", "", "", "k", "=", "k", "+", "1", "\n", "", "", "cv2", ".", "imwrite", "(", "file_name", ",", "ndarr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.vis.save_batch_heatmaps_multi": [[60, 114], ["batch_image.clone.flip", "batch_heatmaps.size", "batch_heatmaps.size", "batch_heatmaps.size", "batch_heatmaps.size", "numpy.zeros", "range", "cv2.imwrite", "batch_image.clone.clone", "float", "float", "batch_image.clone.add_().div_", "batch_image[].mul().clamp().byte().permute().cpu().numpy", "batch_heatmaps[].mul().clamp().byte().cpu().numpy", "cv2.resize", "range", "batch_image.clone.min", "batch_image.clone.max", "cv2.applyColorMap", "batch_image.clone.add_", "batch_image[].mul().clamp().byte().permute().cpu", "batch_heatmaps[].mul().clamp().byte().cpu", "int", "int", "batch_image[].mul().clamp().byte().permute", "batch_heatmaps[].mul().clamp().byte", "batch_image[].mul().clamp().byte", "batch_heatmaps[].mul().clamp", "batch_image[].mul().clamp", "batch_heatmaps[].mul", "batch_image[].mul"], "function", ["None"], ["", "def", "save_batch_heatmaps_multi", "(", "batch_image", ",", "batch_heatmaps", ",", "file_name", ",", "normalize", "=", "True", ")", ":", "\n", "    ", "'''\n    batch_image: [batch_size, channel, height, width]\n    batch_heatmaps: ['batch_size, num_joints, height, width]\n    file_name: saved file name\n    '''", "\n", "if", "normalize", ":", "\n", "        ", "batch_image", "=", "batch_image", ".", "clone", "(", ")", "\n", "min", "=", "float", "(", "batch_image", ".", "min", "(", ")", ")", "\n", "max", "=", "float", "(", "batch_image", ".", "max", "(", ")", ")", "\n", "\n", "batch_image", ".", "add_", "(", "-", "min", ")", ".", "div_", "(", "max", "-", "min", "+", "1e-5", ")", "\n", "", "batch_image", "=", "batch_image", ".", "flip", "(", "1", ")", "\n", "\n", "batch_size", "=", "batch_heatmaps", ".", "size", "(", "0", ")", "\n", "num_joints", "=", "batch_heatmaps", ".", "size", "(", "1", ")", "\n", "heatmap_height", "=", "batch_heatmaps", ".", "size", "(", "2", ")", "\n", "heatmap_width", "=", "batch_heatmaps", ".", "size", "(", "3", ")", "\n", "\n", "grid_image", "=", "np", ".", "zeros", "(", "\n", "(", "batch_size", "*", "heatmap_height", ",", "(", "num_joints", "+", "1", ")", "*", "heatmap_width", ",", "3", ")", ",", "\n", "dtype", "=", "np", ".", "uint8", ")", "\n", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "        ", "image", "=", "batch_image", "[", "i", "]", ".", "mul", "(", "255", ")", ".", "clamp", "(", "0", ",", "255", ")", ".", "byte", "(", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "heatmaps", "=", "batch_heatmaps", "[", "i", "]", ".", "mul", "(", "255", ")", ".", "clamp", "(", "0", ",", "255", ")", ".", "byte", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "resized_image", "=", "cv2", ".", "resize", "(", "image", ",", "\n", "(", "int", "(", "heatmap_width", ")", ",", "int", "(", "heatmap_height", ")", ")", ")", "\n", "\n", "height_begin", "=", "heatmap_height", "*", "i", "\n", "height_end", "=", "heatmap_height", "*", "(", "i", "+", "1", ")", "\n", "for", "j", "in", "range", "(", "num_joints", ")", ":", "\n", "            ", "heatmap", "=", "heatmaps", "[", "j", ",", ":", ",", ":", "]", "\n", "colored_heatmap", "=", "cv2", ".", "applyColorMap", "(", "heatmap", ",", "cv2", ".", "COLORMAP_JET", ")", "\n", "masked_image", "=", "colored_heatmap", "*", "0.7", "+", "resized_image", "*", "0.3", "\n", "\n", "width_begin", "=", "heatmap_width", "*", "(", "j", "+", "1", ")", "\n", "width_end", "=", "heatmap_width", "*", "(", "j", "+", "2", ")", "\n", "grid_image", "[", "height_begin", ":", "height_end", ",", "width_begin", ":", "width_end", ",", ":", "]", "=", "masked_image", "\n", "# grid_image[height_begin:height_end, width_begin:width_end, :] = \\", "\n", "#     colored_heatmap*0.7 + resized_image*0.3", "\n", "\n", "", "grid_image", "[", "height_begin", ":", "height_end", ",", "0", ":", "heatmap_width", ",", ":", "]", "=", "resized_image", "\n", "\n", "", "cv2", ".", "imwrite", "(", "file_name", ",", "grid_image", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.vis.save_debug_images_multi": [[116, 138], ["os.path.basename", "os.path.dirname", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "vis.save_batch_image_with_joints_multi", "vis.save_batch_heatmaps_multi", "vis.save_batch_heatmaps_multi", "os.path.exists", "os.makedirs"], "function", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.vis.save_batch_image_with_joints_multi", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.vis.save_batch_heatmaps_multi", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.vis.save_batch_heatmaps_multi"], ["", "def", "save_debug_images_multi", "(", "config", ",", "input", ",", "meta", ",", "target", ",", "output", ",", "prefix", ")", ":", "\n", "    ", "if", "not", "config", ".", "DEBUG", ".", "DEBUG", ":", "\n", "        ", "return", "\n", "\n", "", "basename", "=", "os", ".", "path", ".", "basename", "(", "prefix", ")", "\n", "dirname", "=", "os", ".", "path", ".", "dirname", "(", "prefix", ")", "\n", "dirname1", "=", "os", ".", "path", ".", "join", "(", "dirname", ",", "'image_with_joints'", ")", "\n", "dirname2", "=", "os", ".", "path", ".", "join", "(", "dirname", ",", "'batch_heatmaps'", ")", "\n", "\n", "for", "dir", "in", "[", "dirname1", ",", "dirname2", "]", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "dir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "dir", ")", "\n", "\n", "", "", "prefix1", "=", "os", ".", "path", ".", "join", "(", "dirname1", ",", "basename", ")", "\n", "prefix2", "=", "os", ".", "path", ".", "join", "(", "dirname2", ",", "basename", ")", "\n", "\n", "if", "config", ".", "DEBUG", ".", "SAVE_BATCH_IMAGES_GT", ":", "\n", "        ", "save_batch_image_with_joints_multi", "(", "input", ",", "meta", "[", "'joints'", "]", ",", "meta", "[", "'joints_vis'", "]", ",", "meta", "[", "'num_person'", "]", ",", "'{}_gt.jpg'", ".", "format", "(", "prefix1", ")", ")", "\n", "", "if", "config", ".", "DEBUG", ".", "SAVE_HEATMAPS_GT", ":", "\n", "        ", "save_batch_heatmaps_multi", "(", "input", ",", "target", ",", "'{}_hm_gt.jpg'", ".", "format", "(", "prefix2", ")", ")", "\n", "", "if", "config", ".", "DEBUG", ".", "SAVE_HEATMAPS_PRED", ":", "\n", "        ", "save_batch_heatmaps_multi", "(", "input", ",", "output", ",", "'{}_hm_pred.jpg'", ".", "format", "(", "prefix2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.vis.save_debug_3d_images": [[155, 215], ["os.path.basename", "os.path.dirname", "os.path.join", "os.path.join", "min", "int", "matplotlib.pyplot.figure", "matplotlib.pyplot.subplots_adjust", "range", "matplotlib.pyplot.savefig", "matplotlib.pyplot.close", "os.path.exists", "os.makedirs", "math.ceil", "matplotlib.pyplot.subplot", "range", "eval", "range", "float", "len", "len", "plt.subplot.plot", "plt.subplot.plot", "eval", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "plt.subplot.plot", "len", "float", "float", "float", "float", "float", "float", "int"], "function", ["None"], ["def", "save_debug_3d_images", "(", "config", ",", "meta", ",", "preds", ",", "prefix", ")", ":", "\n", "    ", "if", "not", "config", ".", "DEBUG", ".", "DEBUG", ":", "\n", "        ", "return", "\n", "\n", "", "basename", "=", "os", ".", "path", ".", "basename", "(", "prefix", ")", "\n", "dirname", "=", "os", ".", "path", ".", "dirname", "(", "prefix", ")", "\n", "dirname1", "=", "os", ".", "path", ".", "join", "(", "dirname", ",", "'3d_joints'", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "dirname1", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "dirname1", ")", "\n", "\n", "", "prefix", "=", "os", ".", "path", ".", "join", "(", "dirname1", ",", "basename", ")", "\n", "file_name", "=", "prefix", "+", "\"_3d.png\"", "\n", "\n", "# preds = preds.cpu().numpy()", "\n", "batch_size", "=", "meta", "[", "'num_person'", "]", ".", "shape", "[", "0", "]", "\n", "xplot", "=", "min", "(", "4", ",", "batch_size", ")", "\n", "yplot", "=", "int", "(", "math", ".", "ceil", "(", "float", "(", "batch_size", ")", "/", "xplot", ")", ")", "\n", "\n", "width", "=", "4.0", "*", "xplot", "\n", "height", "=", "4.0", "*", "yplot", "\n", "fig", "=", "plt", ".", "figure", "(", "0", ",", "figsize", "=", "(", "width", ",", "height", ")", ")", "\n", "plt", ".", "subplots_adjust", "(", "left", "=", "0.05", ",", "right", "=", "0.95", ",", "bottom", "=", "0.05", ",", "\n", "top", "=", "0.95", ",", "wspace", "=", "0.05", ",", "hspace", "=", "0.15", ")", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "        ", "num_person", "=", "meta", "[", "'num_person'", "]", "[", "i", "]", "\n", "joints_3d", "=", "meta", "[", "'joints_3d'", "]", "[", "i", "]", "\n", "joints_3d_vis", "=", "meta", "[", "'joints_3d_vis'", "]", "[", "i", "]", "\n", "ax", "=", "plt", ".", "subplot", "(", "yplot", ",", "xplot", ",", "i", "+", "1", ",", "projection", "=", "'3d'", ")", "\n", "for", "n", "in", "range", "(", "num_person", ")", ":", "\n", "            ", "joint", "=", "joints_3d", "[", "n", "]", "\n", "joint_vis", "=", "joints_3d_vis", "[", "n", "]", "\n", "for", "k", "in", "eval", "(", "\"LIMBS{}\"", ".", "format", "(", "len", "(", "joint", ")", ")", ")", ":", "\n", "                ", "if", "joint_vis", "[", "k", "[", "0", "]", ",", "0", "]", "and", "joint_vis", "[", "k", "[", "1", "]", ",", "0", "]", ":", "\n", "                    ", "x", "=", "[", "float", "(", "joint", "[", "k", "[", "0", "]", ",", "0", "]", ")", ",", "float", "(", "joint", "[", "k", "[", "1", "]", ",", "0", "]", ")", "]", "\n", "y", "=", "[", "float", "(", "joint", "[", "k", "[", "0", "]", ",", "1", "]", ")", ",", "float", "(", "joint", "[", "k", "[", "1", "]", ",", "1", "]", ")", "]", "\n", "z", "=", "[", "float", "(", "joint", "[", "k", "[", "0", "]", ",", "2", "]", ")", ",", "float", "(", "joint", "[", "k", "[", "1", "]", ",", "2", "]", ")", "]", "\n", "ax", ".", "plot", "(", "x", ",", "y", ",", "z", ",", "c", "=", "'r'", ",", "lw", "=", "1.5", ",", "marker", "=", "'o'", ",", "markerfacecolor", "=", "'w'", ",", "markersize", "=", "2", ",", "\n", "markeredgewidth", "=", "1", ")", "\n", "", "else", ":", "\n", "                    ", "x", "=", "[", "float", "(", "joint", "[", "k", "[", "0", "]", ",", "0", "]", ")", ",", "float", "(", "joint", "[", "k", "[", "1", "]", ",", "0", "]", ")", "]", "\n", "y", "=", "[", "float", "(", "joint", "[", "k", "[", "0", "]", ",", "1", "]", ")", ",", "float", "(", "joint", "[", "k", "[", "1", "]", ",", "1", "]", ")", "]", "\n", "z", "=", "[", "float", "(", "joint", "[", "k", "[", "0", "]", ",", "2", "]", ")", ",", "float", "(", "joint", "[", "k", "[", "1", "]", ",", "2", "]", ")", "]", "\n", "ax", ".", "plot", "(", "x", ",", "y", ",", "z", ",", "c", "=", "'r'", ",", "ls", "=", "'--'", ",", "lw", "=", "1.5", ",", "marker", "=", "'o'", ",", "markerfacecolor", "=", "'w'", ",", "markersize", "=", "2", ",", "\n", "markeredgewidth", "=", "1", ")", "\n", "\n", "", "", "", "colors", "=", "[", "'b'", ",", "'g'", ",", "'c'", ",", "'y'", ",", "'m'", ",", "'orange'", ",", "'pink'", ",", "'royalblue'", ",", "'lightgreen'", ",", "'gold'", "]", "\n", "if", "preds", "is", "not", "None", ":", "\n", "            ", "pred", "=", "preds", "[", "i", "]", "\n", "for", "n", "in", "range", "(", "len", "(", "pred", ")", ")", ":", "\n", "                ", "joint", "=", "pred", "[", "n", "]", "\n", "if", "joint", "[", "0", ",", "3", "]", ">=", "0", ":", "\n", "                    ", "for", "k", "in", "eval", "(", "\"LIMBS{}\"", ".", "format", "(", "len", "(", "joint", ")", ")", ")", ":", "\n", "                        ", "x", "=", "[", "float", "(", "joint", "[", "k", "[", "0", "]", ",", "0", "]", ")", ",", "float", "(", "joint", "[", "k", "[", "1", "]", ",", "0", "]", ")", "]", "\n", "y", "=", "[", "float", "(", "joint", "[", "k", "[", "0", "]", ",", "1", "]", ")", ",", "float", "(", "joint", "[", "k", "[", "1", "]", ",", "1", "]", ")", "]", "\n", "z", "=", "[", "float", "(", "joint", "[", "k", "[", "0", "]", ",", "2", "]", ")", ",", "float", "(", "joint", "[", "k", "[", "1", "]", ",", "2", "]", ")", "]", "\n", "ax", ".", "plot", "(", "x", ",", "y", ",", "z", ",", "c", "=", "colors", "[", "int", "(", "n", "%", "10", ")", "]", ",", "lw", "=", "1.5", ",", "marker", "=", "'o'", ",", "markerfacecolor", "=", "'w'", ",", "markersize", "=", "2", ",", "\n", "markeredgewidth", "=", "1", ")", "\n", "", "", "", "", "", "plt", ".", "savefig", "(", "file_name", ")", "\n", "plt", ".", "close", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.vis.save_debug_3d_cubes": [[217, 267], ["os.path.basename", "os.path.dirname", "os.path.join", "os.path.join", "min", "int", "matplotlib.pyplot.figure", "matplotlib.pyplot.subplots_adjust", "range", "matplotlib.pyplot.savefig", "matplotlib.pyplot.close", "os.path.exists", "os.makedirs", "math.ceil", "matplotlib.pyplot.subplot", "roots_gt[].cpu", "roots_gt[].cpu", "roots_gt[].cpu", "plt.subplot.scatter", "roots_pred[].cpu", "roots_pred[].cpu", "roots_pred[].cpu", "plt.subplot.scatter", "plt.subplot.set_xlim", "plt.subplot.set_ylim", "plt.subplot.set_zlim", "float"], "function", ["None"], ["", "def", "save_debug_3d_cubes", "(", "config", ",", "meta", ",", "root", ",", "prefix", ")", ":", "\n", "    ", "if", "not", "config", ".", "DEBUG", ".", "DEBUG", ":", "\n", "        ", "return", "\n", "\n", "", "basename", "=", "os", ".", "path", ".", "basename", "(", "prefix", ")", "\n", "dirname", "=", "os", ".", "path", ".", "dirname", "(", "prefix", ")", "\n", "dirname1", "=", "os", ".", "path", ".", "join", "(", "dirname", ",", "'root_cubes'", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "dirname1", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "dirname1", ")", "\n", "\n", "", "prefix", "=", "os", ".", "path", ".", "join", "(", "dirname1", ",", "basename", ")", "\n", "file_name", "=", "prefix", "+", "\"_root.png\"", "\n", "\n", "batch_size", "=", "root", ".", "shape", "[", "0", "]", "\n", "root_id", "=", "config", ".", "DATASET", ".", "ROOTIDX", "\n", "\n", "xplot", "=", "min", "(", "4", ",", "batch_size", ")", "\n", "yplot", "=", "int", "(", "math", ".", "ceil", "(", "float", "(", "batch_size", ")", "/", "xplot", ")", ")", "\n", "\n", "width", "=", "6.0", "*", "xplot", "\n", "height", "=", "4.0", "*", "yplot", "\n", "fig", "=", "plt", ".", "figure", "(", "0", ",", "figsize", "=", "(", "width", ",", "height", ")", ")", "\n", "plt", ".", "subplots_adjust", "(", "left", "=", "0.05", ",", "right", "=", "0.95", ",", "bottom", "=", "0.05", ",", "\n", "top", "=", "0.95", ",", "wspace", "=", "0.05", ",", "hspace", "=", "0.15", ")", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "        ", "roots_gt", "=", "meta", "[", "'roots_3d'", "]", "[", "i", "]", "\n", "num_person", "=", "meta", "[", "'num_person'", "]", "[", "i", "]", "\n", "roots_pred", "=", "root", "[", "i", "]", "\n", "ax", "=", "plt", ".", "subplot", "(", "yplot", ",", "xplot", ",", "i", "+", "1", ",", "projection", "=", "'3d'", ")", "\n", "\n", "x", "=", "roots_gt", "[", ":", "num_person", ",", "0", "]", ".", "cpu", "(", ")", "\n", "y", "=", "roots_gt", "[", ":", "num_person", ",", "1", "]", ".", "cpu", "(", ")", "\n", "z", "=", "roots_gt", "[", ":", "num_person", ",", "2", "]", ".", "cpu", "(", ")", "\n", "ax", ".", "scatter", "(", "x", ",", "y", ",", "z", ",", "c", "=", "'r'", ")", "\n", "\n", "index", "=", "roots_pred", "[", ":", ",", "3", "]", ">=", "0", "\n", "x", "=", "roots_pred", "[", "index", ",", "0", "]", ".", "cpu", "(", ")", "\n", "y", "=", "roots_pred", "[", "index", ",", "1", "]", ".", "cpu", "(", ")", "\n", "z", "=", "roots_pred", "[", "index", ",", "2", "]", ".", "cpu", "(", ")", "\n", "ax", ".", "scatter", "(", "x", ",", "y", ",", "z", ",", "c", "=", "'b'", ")", "\n", "\n", "space_size", "=", "config", ".", "MULTI_PERSON", ".", "SPACE_SIZE", "\n", "space_center", "=", "config", ".", "MULTI_PERSON", ".", "SPACE_CENTER", "\n", "ax", ".", "set_xlim", "(", "space_center", "[", "0", "]", "-", "space_size", "[", "0", "]", "/", "2", ",", "space_center", "[", "0", "]", "+", "space_size", "[", "0", "]", "/", "2", ")", "\n", "ax", ".", "set_ylim", "(", "space_center", "[", "1", "]", "-", "space_size", "[", "1", "]", "/", "2", ",", "space_center", "[", "1", "]", "+", "space_size", "[", "1", "]", "/", "2", ")", "\n", "ax", ".", "set_zlim", "(", "space_center", "[", "2", "]", "-", "space_size", "[", "2", "]", "/", "2", ",", "space_center", "[", "2", "]", "+", "space_size", "[", "2", "]", "/", "2", ")", "\n", "\n", "", "plt", ".", "savefig", "(", "file_name", ")", "\n", "plt", ".", "close", "(", "0", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.panoptic.Panoptic.__init__": [[77, 117], ["dataset.JointsDataset.JointsDataset.__init__", "len", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.exists", "os.exists", "len", "len", "pickle.load", "panoptic.Panoptic._get_db", "pickle.dump", "len", "open", "open"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.AverageMeter.__init__", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.campus.Campus._get_db"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ",", "image_set", ",", "is_train", ",", "transform", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "cfg", ",", "image_set", ",", "is_train", ",", "transform", ")", "\n", "self", ".", "pixel_std", "=", "200.0", "\n", "self", ".", "joints_def", "=", "JOINTS_DEF", "\n", "self", ".", "limbs", "=", "LIMBS", "\n", "self", ".", "num_joints", "=", "len", "(", "JOINTS_DEF", ")", "\n", "\n", "if", "self", ".", "image_set", "==", "'train'", ":", "\n", "            ", "self", ".", "sequence_list", "=", "TRAIN_LIST", "\n", "self", ".", "_interval", "=", "3", "\n", "self", ".", "cam_list", "=", "[", "(", "0", ",", "12", ")", ",", "(", "0", ",", "6", ")", ",", "(", "0", ",", "23", ")", ",", "(", "0", ",", "13", ")", ",", "(", "0", ",", "3", ")", "]", "[", ":", "self", ".", "num_views", "]", "\n", "# self.cam_list = list(set([(0, n) for n in range(0, 31)]) - {(0, 12), (0, 6), (0, 23), (0, 13), (0, 3)})", "\n", "# self.cam_list.sort()", "\n", "self", ".", "num_views", "=", "len", "(", "self", ".", "cam_list", ")", "\n", "", "elif", "self", ".", "image_set", "==", "'validation'", ":", "\n", "            ", "self", ".", "sequence_list", "=", "VAL_LIST", "\n", "self", ".", "_interval", "=", "12", "\n", "self", ".", "cam_list", "=", "[", "(", "0", ",", "12", ")", ",", "(", "0", ",", "6", ")", ",", "(", "0", ",", "23", ")", ",", "(", "0", ",", "13", ")", ",", "(", "0", ",", "3", ")", "]", "[", ":", "self", ".", "num_views", "]", "\n", "self", ".", "num_views", "=", "len", "(", "self", ".", "cam_list", ")", "\n", "\n", "", "self", ".", "db_file", "=", "'group_{}_cam{}.pkl'", ".", "format", "(", "self", ".", "image_set", ",", "self", ".", "num_views", ")", "\n", "self", ".", "db_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "self", ".", "db_file", ")", "\n", "\n", "if", "osp", ".", "exists", "(", "self", ".", "db_file", ")", ":", "\n", "            ", "info", "=", "pickle", ".", "load", "(", "open", "(", "self", ".", "db_file", ",", "'rb'", ")", ")", "\n", "assert", "info", "[", "'sequence_list'", "]", "==", "self", ".", "sequence_list", "\n", "assert", "info", "[", "'interval'", "]", "==", "self", ".", "_interval", "\n", "assert", "info", "[", "'cam_list'", "]", "==", "self", ".", "cam_list", "\n", "self", ".", "db", "=", "info", "[", "'db'", "]", "\n", "", "else", ":", "\n", "            ", "self", ".", "db", "=", "self", ".", "_get_db", "(", ")", "\n", "info", "=", "{", "\n", "'sequence_list'", ":", "self", ".", "sequence_list", ",", "\n", "'interval'", ":", "self", ".", "_interval", ",", "\n", "'cam_list'", ":", "self", ".", "cam_list", ",", "\n", "'db'", ":", "self", ".", "db", "\n", "}", "\n", "pickle", ".", "dump", "(", "info", ",", "open", "(", "self", ".", "db_file", ",", "'wb'", ")", ")", "\n", "# self.db = self._get_db()", "\n", "", "self", ".", "db_size", "=", "len", "(", "self", ".", "db", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.panoptic.Panoptic._get_db": [[118, 204], ["panoptic.Panoptic._get_cam", "os.join", "os.join", "sorted", "enumerate", "glob.iglob", "panoptic.Panoptic.items", "open", "len", "os.basename().replace", "os.basename().replace", "os.join", "os.join", "image.replace.replace.replace", "json_tricks.load", "numpy.array().reshape", "numpy.array", "pose3d[].dot", "all_poses_3d.append", "all_poses_vis_3d.append", "numpy.zeros", "numpy.bitwise_and", "numpy.bitwise_and", "numpy.bitwise_and", "all_poses.append", "all_poses_vis.append", "len", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "[].reshape", "[].reshape", "db.append", "os.basename", "os.basename", "numpy.repeat", "utils.transforms.projectPoints().transpose", "numpy.repeat", "numpy.array", "numpy.reshape", "numpy.logical_not", "numpy.reshape", "numpy.dot", "os.join", "os.join", "utils.transforms.projectPoints", "pose3d[].transpose", "os.basename().replace.split"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.campus.Campus._get_cam", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.projectPoints"], ["", "def", "_get_db", "(", "self", ")", ":", "\n", "        ", "width", "=", "1920", "\n", "height", "=", "1080", "\n", "db", "=", "[", "]", "\n", "for", "seq", "in", "self", ".", "sequence_list", ":", "\n", "\n", "            ", "cameras", "=", "self", ".", "_get_cam", "(", "seq", ")", "\n", "\n", "curr_anno", "=", "osp", ".", "join", "(", "self", ".", "dataset_root", ",", "seq", ",", "'hdPose3d_stage1_coco19'", ")", "\n", "anno_files", "=", "sorted", "(", "glob", ".", "iglob", "(", "'{:s}/*.json'", ".", "format", "(", "curr_anno", ")", ")", ")", "\n", "\n", "for", "i", ",", "file", "in", "enumerate", "(", "anno_files", ")", ":", "\n", "                ", "if", "i", "%", "self", ".", "_interval", "==", "0", ":", "\n", "                    ", "with", "open", "(", "file", ")", "as", "dfile", ":", "\n", "                        ", "bodies", "=", "json", ".", "load", "(", "dfile", ")", "[", "'bodies'", "]", "\n", "", "if", "len", "(", "bodies", ")", "==", "0", ":", "\n", "                        ", "continue", "\n", "\n", "", "for", "k", ",", "v", "in", "cameras", ".", "items", "(", ")", ":", "\n", "                        ", "postfix", "=", "osp", ".", "basename", "(", "file", ")", ".", "replace", "(", "'body3DScene'", ",", "''", ")", "\n", "prefix", "=", "'{:02d}_{:02d}'", ".", "format", "(", "k", "[", "0", "]", ",", "k", "[", "1", "]", ")", "\n", "image", "=", "osp", ".", "join", "(", "seq", ",", "'hdImgs'", ",", "prefix", ",", "\n", "prefix", "+", "postfix", ")", "\n", "image", "=", "image", ".", "replace", "(", "'json'", ",", "'jpg'", ")", "\n", "\n", "all_poses_3d", "=", "[", "]", "\n", "all_poses_vis_3d", "=", "[", "]", "\n", "all_poses", "=", "[", "]", "\n", "all_poses_vis", "=", "[", "]", "\n", "for", "body", "in", "bodies", ":", "\n", "                            ", "pose3d", "=", "np", ".", "array", "(", "body", "[", "'joints19'", "]", ")", ".", "reshape", "(", "(", "-", "1", ",", "4", ")", ")", "\n", "pose3d", "=", "pose3d", "[", ":", "self", ".", "num_joints", "]", "\n", "\n", "joints_vis", "=", "pose3d", "[", ":", ",", "-", "1", "]", ">", "0.1", "\n", "\n", "if", "not", "joints_vis", "[", "self", ".", "root_id", "]", ":", "\n", "                                ", "continue", "\n", "\n", "# Coordinate transformation", "\n", "", "M", "=", "np", ".", "array", "(", "[", "[", "1.0", ",", "0.0", ",", "0.0", "]", ",", "\n", "[", "0.0", ",", "0.0", ",", "-", "1.0", "]", ",", "\n", "[", "0.0", ",", "1.0", ",", "0.0", "]", "]", ")", "\n", "pose3d", "[", ":", ",", "0", ":", "3", "]", "=", "pose3d", "[", ":", ",", "0", ":", "3", "]", ".", "dot", "(", "M", ")", "\n", "\n", "all_poses_3d", ".", "append", "(", "pose3d", "[", ":", ",", "0", ":", "3", "]", "*", "10.0", ")", "\n", "all_poses_vis_3d", ".", "append", "(", "\n", "np", ".", "repeat", "(", "\n", "np", ".", "reshape", "(", "joints_vis", ",", "(", "-", "1", ",", "1", ")", ")", ",", "3", ",", "axis", "=", "1", ")", ")", "\n", "\n", "pose2d", "=", "np", ".", "zeros", "(", "(", "pose3d", ".", "shape", "[", "0", "]", ",", "2", ")", ")", "\n", "pose2d", "[", ":", ",", ":", "2", "]", "=", "projectPoints", "(", "\n", "pose3d", "[", ":", ",", "0", ":", "3", "]", ".", "transpose", "(", ")", ",", "v", "[", "'K'", "]", ",", "v", "[", "'R'", "]", ",", "\n", "v", "[", "'t'", "]", ",", "v", "[", "'distCoef'", "]", ")", ".", "transpose", "(", ")", "[", ":", ",", ":", "2", "]", "\n", "x_check", "=", "np", ".", "bitwise_and", "(", "pose2d", "[", ":", ",", "0", "]", ">=", "0", ",", "\n", "pose2d", "[", ":", ",", "0", "]", "<=", "width", "-", "1", ")", "\n", "y_check", "=", "np", ".", "bitwise_and", "(", "pose2d", "[", ":", ",", "1", "]", ">=", "0", ",", "\n", "pose2d", "[", ":", ",", "1", "]", "<=", "height", "-", "1", ")", "\n", "check", "=", "np", ".", "bitwise_and", "(", "x_check", ",", "y_check", ")", "\n", "joints_vis", "[", "np", ".", "logical_not", "(", "check", ")", "]", "=", "0", "\n", "\n", "all_poses", ".", "append", "(", "pose2d", ")", "\n", "all_poses_vis", ".", "append", "(", "\n", "np", ".", "repeat", "(", "\n", "np", ".", "reshape", "(", "joints_vis", ",", "(", "-", "1", ",", "1", ")", ")", ",", "2", ",", "axis", "=", "1", ")", ")", "\n", "\n", "", "if", "len", "(", "all_poses_3d", ")", ">", "0", ":", "\n", "                            ", "our_cam", "=", "{", "}", "\n", "our_cam", "[", "'R'", "]", "=", "v", "[", "'R'", "]", "\n", "our_cam", "[", "'T'", "]", "=", "-", "np", ".", "dot", "(", "v", "[", "'R'", "]", ".", "T", ",", "v", "[", "'t'", "]", ")", "*", "10.0", "# cm to mm", "\n", "our_cam", "[", "'fx'", "]", "=", "np", ".", "array", "(", "v", "[", "'K'", "]", "[", "0", ",", "0", "]", ")", "\n", "our_cam", "[", "'fy'", "]", "=", "np", ".", "array", "(", "v", "[", "'K'", "]", "[", "1", ",", "1", "]", ")", "\n", "our_cam", "[", "'cx'", "]", "=", "np", ".", "array", "(", "v", "[", "'K'", "]", "[", "0", ",", "2", "]", ")", "\n", "our_cam", "[", "'cy'", "]", "=", "np", ".", "array", "(", "v", "[", "'K'", "]", "[", "1", ",", "2", "]", ")", "\n", "our_cam", "[", "'k'", "]", "=", "v", "[", "'distCoef'", "]", "[", "[", "0", ",", "1", ",", "4", "]", "]", ".", "reshape", "(", "3", ",", "1", ")", "\n", "our_cam", "[", "'p'", "]", "=", "v", "[", "'distCoef'", "]", "[", "[", "2", ",", "3", "]", "]", ".", "reshape", "(", "2", ",", "1", ")", "\n", "\n", "db", ".", "append", "(", "{", "\n", "'key'", ":", "\"{}_{}{}\"", ".", "format", "(", "seq", ",", "prefix", ",", "postfix", ".", "split", "(", "'.'", ")", "[", "0", "]", ")", ",", "\n", "'image'", ":", "osp", ".", "join", "(", "self", ".", "dataset_root", ",", "image", ")", ",", "\n", "'joints_3d'", ":", "all_poses_3d", ",", "\n", "'joints_3d_vis'", ":", "all_poses_vis_3d", ",", "\n", "'joints_2d'", ":", "all_poses", ",", "\n", "'joints_2d_vis'", ":", "all_poses_vis", ",", "\n", "'camera'", ":", "our_cam", "\n", "}", ")", "\n", "", "", "", "", "", "return", "db", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.panoptic.Panoptic._get_cam": [[205, 223], ["os.join", "os.join", "numpy.array", "open", "json_tricks.load", "numpy.array", "numpy.array", "numpy.array().dot", "numpy.array().reshape", "numpy.array", "numpy.array"], "methods", ["None"], ["", "def", "_get_cam", "(", "self", ",", "seq", ")", ":", "\n", "        ", "cam_file", "=", "osp", ".", "join", "(", "self", ".", "dataset_root", ",", "seq", ",", "'calibration_{:s}.json'", ".", "format", "(", "seq", ")", ")", "\n", "with", "open", "(", "cam_file", ")", "as", "cfile", ":", "\n", "            ", "calib", "=", "json", ".", "load", "(", "cfile", ")", "\n", "\n", "", "M", "=", "np", ".", "array", "(", "[", "[", "1.0", ",", "0.0", ",", "0.0", "]", ",", "\n", "[", "0.0", ",", "0.0", ",", "-", "1.0", "]", ",", "\n", "[", "0.0", ",", "1.0", ",", "0.0", "]", "]", ")", "\n", "cameras", "=", "{", "}", "\n", "for", "cam", "in", "calib", "[", "'cameras'", "]", ":", "\n", "            ", "if", "(", "cam", "[", "'panel'", "]", ",", "cam", "[", "'node'", "]", ")", "in", "self", ".", "cam_list", ":", "\n", "                ", "sel_cam", "=", "{", "}", "\n", "sel_cam", "[", "'K'", "]", "=", "np", ".", "array", "(", "cam", "[", "'K'", "]", ")", "\n", "sel_cam", "[", "'distCoef'", "]", "=", "np", ".", "array", "(", "cam", "[", "'distCoef'", "]", ")", "\n", "sel_cam", "[", "'R'", "]", "=", "np", ".", "array", "(", "cam", "[", "'R'", "]", ")", ".", "dot", "(", "M", ")", "\n", "sel_cam", "[", "'t'", "]", "=", "np", ".", "array", "(", "cam", "[", "'t'", "]", ")", ".", "reshape", "(", "(", "3", ",", "1", ")", ")", "\n", "cameras", "[", "(", "cam", "[", "'panel'", "]", ",", "cam", "[", "'node'", "]", ")", "]", "=", "sel_cam", "\n", "", "", "return", "cameras", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.panoptic.Panoptic.__getitem__": [[224, 244], ["range", "dataset.JointsDataset.JointsDataset.__getitem__", "input.append", "target.append", "weight.append", "target_3d.append", "meta.append", "input_heatmap.append"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.campus.Campus.__getitem__"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "input", ",", "target", ",", "weight", ",", "target_3d", ",", "meta", ",", "input_heatmap", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "\n", "# if self.image_set == 'train':", "\n", "#     # camera_num = np.random.choice([5], size=1)", "\n", "#     select_cam = np.random.choice(self.num_views, size=5, replace=False)", "\n", "# elif self.image_set == 'validation':", "\n", "#     select_cam = list(range(self.num_views))", "\n", "\n", "for", "k", "in", "range", "(", "self", ".", "num_views", ")", ":", "\n", "            ", "i", ",", "t", ",", "w", ",", "t3", ",", "m", ",", "ih", "=", "super", "(", ")", ".", "__getitem__", "(", "self", ".", "num_views", "*", "idx", "+", "k", ")", "\n", "if", "i", "is", "None", ":", "\n", "                ", "continue", "\n", "", "input", ".", "append", "(", "i", ")", "\n", "target", ".", "append", "(", "t", ")", "\n", "weight", ".", "append", "(", "w", ")", "\n", "target_3d", ".", "append", "(", "t3", ")", "\n", "meta", ".", "append", "(", "m", ")", "\n", "input_heatmap", ".", "append", "(", "ih", ")", "\n", "", "return", "input", ",", "target", ",", "weight", ",", "target_3d", ",", "meta", ",", "input_heatmap", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.panoptic.Panoptic.__len__": [[245, 247], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "db_size", "//", "self", ".", "num_views", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.panoptic.Panoptic.evaluate": [[248, 291], ["range", "numpy.arange", "len", "copy.deepcopy", "preds[].copy", "len", "panoptic.Panoptic._eval_list_to_ap", "aps.append", "recs.append", "panoptic.Panoptic._eval_list_to_mpjpe", "panoptic.Panoptic._eval_list_to_recall", "len", "zip", "numpy.argmin", "numpy.min", "eval_list.append", "numpy.mean", "mpjpes.append", "numpy.sqrt", "float", "float", "int", "numpy.sum"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.panoptic.Panoptic._eval_list_to_ap", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.panoptic.Panoptic._eval_list_to_mpjpe", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.panoptic.Panoptic._eval_list_to_recall"], ["", "def", "evaluate", "(", "self", ",", "preds", ")", ":", "\n", "        ", "eval_list", "=", "[", "]", "\n", "gt_num", "=", "self", ".", "db_size", "//", "self", ".", "num_views", "\n", "assert", "len", "(", "preds", ")", "==", "gt_num", ",", "'number mismatch'", "\n", "\n", "total_gt", "=", "0", "\n", "for", "i", "in", "range", "(", "gt_num", ")", ":", "\n", "            ", "index", "=", "self", ".", "num_views", "*", "i", "\n", "db_rec", "=", "copy", ".", "deepcopy", "(", "self", ".", "db", "[", "index", "]", ")", "\n", "joints_3d", "=", "db_rec", "[", "'joints_3d'", "]", "\n", "joints_3d_vis", "=", "db_rec", "[", "'joints_3d_vis'", "]", "\n", "\n", "if", "len", "(", "joints_3d", ")", "==", "0", ":", "\n", "                ", "continue", "\n", "\n", "", "pred", "=", "preds", "[", "i", "]", ".", "copy", "(", ")", "\n", "pred", "=", "pred", "[", "pred", "[", ":", ",", "0", ",", "3", "]", ">=", "0", "]", "\n", "for", "pose", "in", "pred", ":", "\n", "                ", "mpjpes", "=", "[", "]", "\n", "for", "(", "gt", ",", "gt_vis", ")", "in", "zip", "(", "joints_3d", ",", "joints_3d_vis", ")", ":", "\n", "                    ", "vis", "=", "gt_vis", "[", ":", ",", "0", "]", ">", "0", "\n", "mpjpe", "=", "np", ".", "mean", "(", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "(", "pose", "[", "vis", ",", "0", ":", "3", "]", "-", "gt", "[", "vis", "]", ")", "**", "2", ",", "axis", "=", "-", "1", ")", ")", ")", "\n", "mpjpes", ".", "append", "(", "mpjpe", ")", "\n", "", "min_gt", "=", "np", ".", "argmin", "(", "mpjpes", ")", "\n", "min_mpjpe", "=", "np", ".", "min", "(", "mpjpes", ")", "\n", "score", "=", "pose", "[", "0", ",", "4", "]", "\n", "eval_list", ".", "append", "(", "{", "\n", "\"mpjpe\"", ":", "float", "(", "min_mpjpe", ")", ",", "\n", "\"score\"", ":", "float", "(", "score", ")", ",", "\n", "\"gt_id\"", ":", "int", "(", "total_gt", "+", "min_gt", ")", "\n", "}", ")", "\n", "\n", "", "total_gt", "+=", "len", "(", "joints_3d", ")", "\n", "\n", "", "mpjpe_threshold", "=", "np", ".", "arange", "(", "25", ",", "155", ",", "25", ")", "\n", "aps", "=", "[", "]", "\n", "recs", "=", "[", "]", "\n", "for", "t", "in", "mpjpe_threshold", ":", "\n", "            ", "ap", ",", "rec", "=", "self", ".", "_eval_list_to_ap", "(", "eval_list", ",", "total_gt", ",", "t", ")", "\n", "aps", ".", "append", "(", "ap", ")", "\n", "recs", ".", "append", "(", "rec", ")", "\n", "\n", "", "return", "aps", ",", "recs", ",", "self", ".", "_eval_list_to_mpjpe", "(", "eval_list", ")", ",", "self", ".", "_eval_list_to_recall", "(", "eval_list", ",", "total_gt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.panoptic.Panoptic._eval_list_to_ap": [[292, 319], ["eval_list.sort", "len", "numpy.zeros", "numpy.zeros", "enumerate", "numpy.cumsum", "numpy.cumsum", "range", "numpy.concatenate", "numpy.concatenate", "numpy.sum", "max", "numpy.where", "gt_det.append"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_eval_list_to_ap", "(", "eval_list", ",", "total_gt", ",", "threshold", ")", ":", "\n", "        ", "eval_list", ".", "sort", "(", "key", "=", "lambda", "k", ":", "k", "[", "\"score\"", "]", ",", "reverse", "=", "True", ")", "\n", "total_num", "=", "len", "(", "eval_list", ")", "\n", "\n", "tp", "=", "np", ".", "zeros", "(", "total_num", ")", "\n", "fp", "=", "np", ".", "zeros", "(", "total_num", ")", "\n", "gt_det", "=", "[", "]", "\n", "for", "i", ",", "item", "in", "enumerate", "(", "eval_list", ")", ":", "\n", "            ", "if", "item", "[", "\"mpjpe\"", "]", "<", "threshold", "and", "item", "[", "\"gt_id\"", "]", "not", "in", "gt_det", ":", "\n", "                ", "tp", "[", "i", "]", "=", "1", "\n", "gt_det", ".", "append", "(", "item", "[", "\"gt_id\"", "]", ")", "\n", "", "else", ":", "\n", "                ", "fp", "[", "i", "]", "=", "1", "\n", "", "", "tp", "=", "np", ".", "cumsum", "(", "tp", ")", "\n", "fp", "=", "np", ".", "cumsum", "(", "fp", ")", "\n", "recall", "=", "tp", "/", "(", "total_gt", "+", "1e-5", ")", "\n", "precise", "=", "tp", "/", "(", "tp", "+", "fp", "+", "1e-5", ")", "\n", "for", "n", "in", "range", "(", "total_num", "-", "2", ",", "-", "1", ",", "-", "1", ")", ":", "\n", "            ", "precise", "[", "n", "]", "=", "max", "(", "precise", "[", "n", "]", ",", "precise", "[", "n", "+", "1", "]", ")", "\n", "\n", "", "precise", "=", "np", ".", "concatenate", "(", "(", "[", "0", "]", ",", "precise", ",", "[", "0", "]", ")", ")", "\n", "recall", "=", "np", ".", "concatenate", "(", "(", "[", "0", "]", ",", "recall", ",", "[", "1", "]", ")", ")", "\n", "index", "=", "np", ".", "where", "(", "recall", "[", "1", ":", "]", "!=", "recall", "[", ":", "-", "1", "]", ")", "[", "0", "]", "\n", "ap", "=", "np", ".", "sum", "(", "(", "recall", "[", "index", "+", "1", "]", "-", "recall", "[", "index", "]", ")", "*", "precise", "[", "index", "+", "1", "]", ")", "\n", "\n", "return", "ap", ",", "recall", "[", "-", "2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.panoptic.Panoptic._eval_list_to_mpjpe": [[320, 332], ["eval_list.sort", "enumerate", "numpy.mean", "mpjpes.append", "gt_det.append", "len"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_eval_list_to_mpjpe", "(", "eval_list", ",", "threshold", "=", "500", ")", ":", "\n", "        ", "eval_list", ".", "sort", "(", "key", "=", "lambda", "k", ":", "k", "[", "\"score\"", "]", ",", "reverse", "=", "True", ")", "\n", "gt_det", "=", "[", "]", "\n", "\n", "mpjpes", "=", "[", "]", "\n", "for", "i", ",", "item", "in", "enumerate", "(", "eval_list", ")", ":", "\n", "            ", "if", "item", "[", "\"mpjpe\"", "]", "<", "threshold", "and", "item", "[", "\"gt_id\"", "]", "not", "in", "gt_det", ":", "\n", "                ", "mpjpes", ".", "append", "(", "item", "[", "\"mpjpe\"", "]", ")", "\n", "gt_det", ".", "append", "(", "item", "[", "\"gt_id\"", "]", ")", "\n", "\n", "", "", "return", "np", ".", "mean", "(", "mpjpes", ")", "if", "len", "(", "mpjpes", ")", ">", "0", "else", "np", ".", "inf", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.panoptic.Panoptic._eval_list_to_recall": [[333, 338], ["len", "numpy.unique"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_eval_list_to_recall", "(", "eval_list", ",", "total_gt", ",", "threshold", "=", "500", ")", ":", "\n", "        ", "gt_ids", "=", "[", "e", "[", "\"gt_id\"", "]", "for", "e", "in", "eval_list", "if", "e", "[", "\"mpjpe\"", "]", "<", "threshold", "]", "\n", "\n", "return", "len", "(", "np", ".", "unique", "(", "gt_ids", ")", ")", "/", "total_gt", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf.Shelf.__init__": [[59, 73], ["dataset.JointsDataset.JointsDataset.__init__", "len", "len", "list", "shelf.Shelf._get_pred_pose2d", "shelf.Shelf._get_db", "len", "range"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.AverageMeter.__init__", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.campus.Campus._get_pred_pose2d", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.campus.Campus._get_db"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ",", "image_set", ",", "is_train", ",", "transform", "=", "None", ")", ":", "\n", "        ", "self", ".", "pixel_std", "=", "200.0", "\n", "self", ".", "joints_def", "=", "SHELF_JOINTS_DEF", "\n", "super", "(", ")", ".", "__init__", "(", "cfg", ",", "image_set", ",", "is_train", ",", "transform", ")", "\n", "self", ".", "limbs", "=", "LIMBS", "\n", "self", ".", "num_joints", "=", "len", "(", "SHELF_JOINTS_DEF", ")", "\n", "self", ".", "cam_list", "=", "[", "0", ",", "1", ",", "2", ",", "3", ",", "4", "]", "\n", "self", ".", "num_views", "=", "len", "(", "self", ".", "cam_list", ")", "\n", "self", ".", "frame_range", "=", "list", "(", "range", "(", "300", ",", "601", ")", ")", "\n", "\n", "self", ".", "pred_pose2d", "=", "self", ".", "_get_pred_pose2d", "(", ")", "\n", "self", ".", "db", "=", "self", ".", "_get_db", "(", ")", "\n", "\n", "self", ".", "db_size", "=", "len", "(", "self", ".", "db", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf.Shelf._get_pred_pose2d": [[74, 81], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "open", "logging.info", "pickle.load"], "methods", ["None"], ["", "def", "_get_pred_pose2d", "(", "self", ")", ":", "\n", "        ", "file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "\"pred_shelf_maskrcnn_hrnet_coco.pkl\"", ")", "\n", "with", "open", "(", "file", ",", "\"rb\"", ")", "as", "pfile", ":", "\n", "            ", "logging", ".", "info", "(", "\"=> load {}\"", ".", "format", "(", "file", ")", ")", "\n", "pred_2d", "=", "pickle", ".", "load", "(", "pfile", ")", "\n", "\n", "", "return", "pred_2d", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf.Shelf._get_db": [[82, 139], ["shelf.Shelf._get_cam", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "scipy.loadmat", "numpy.array().squeeze", "len", "len", "shelf.Shelf.items", "numpy.array", "os.join", "os.join", "range", "db.append", "numpy.array().tolist", "numpy.array", "len", "all_poses_3d.append", "all_poses_vis_3d.append", "utils.cameras_cpu.project_pose", "numpy.bitwise_and", "numpy.bitwise_and", "numpy.bitwise_and", "numpy.ones", "all_poses.append", "all_poses_vis.append", "os.join", "os.join", "numpy.array", "numpy.ones", "numpy.repeat", "data[].tolist", "len", "numpy.logical_not", "numpy.reshape"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.campus.Campus._get_cam", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.cameras_cpu.project_pose"], ["", "def", "_get_db", "(", "self", ")", ":", "\n", "        ", "width", "=", "1032", "\n", "height", "=", "776", "\n", "\n", "db", "=", "[", "]", "\n", "cameras", "=", "self", ".", "_get_cam", "(", ")", "\n", "\n", "datafile", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'actorsGT.mat'", ")", "\n", "data", "=", "scio", ".", "loadmat", "(", "datafile", ")", "\n", "actor_3d", "=", "np", ".", "array", "(", "np", ".", "array", "(", "data", "[", "'actor3D'", "]", ".", "tolist", "(", ")", ")", ".", "tolist", "(", ")", ")", ".", "squeeze", "(", ")", "# num_person * num_frame", "\n", "\n", "num_person", "=", "len", "(", "actor_3d", ")", "\n", "num_frames", "=", "len", "(", "actor_3d", "[", "0", "]", ")", "\n", "\n", "for", "i", "in", "self", ".", "frame_range", ":", "\n", "            ", "for", "k", ",", "cam", "in", "cameras", ".", "items", "(", ")", ":", "\n", "                ", "image", "=", "osp", ".", "join", "(", "\"Camera\"", "+", "k", ",", "\"img_{:06d}.png\"", ".", "format", "(", "i", ")", ")", "\n", "\n", "all_poses_3d", "=", "[", "]", "\n", "all_poses_vis_3d", "=", "[", "]", "\n", "all_poses", "=", "[", "]", "\n", "all_poses_vis", "=", "[", "]", "\n", "for", "person", "in", "range", "(", "num_person", ")", ":", "\n", "                    ", "pose3d", "=", "actor_3d", "[", "person", "]", "[", "i", "]", "*", "1000.0", "\n", "if", "len", "(", "pose3d", "[", "0", "]", ")", ">", "0", ":", "\n", "                        ", "all_poses_3d", ".", "append", "(", "pose3d", ")", "\n", "all_poses_vis_3d", ".", "append", "(", "np", ".", "ones", "(", "(", "self", ".", "num_joints", ",", "3", ")", ")", ")", "\n", "\n", "pose2d", "=", "project_pose", "(", "pose3d", ",", "cam", ")", "\n", "\n", "x_check", "=", "np", ".", "bitwise_and", "(", "pose2d", "[", ":", ",", "0", "]", ">=", "0", ",", "\n", "pose2d", "[", ":", ",", "0", "]", "<=", "width", "-", "1", ")", "\n", "y_check", "=", "np", ".", "bitwise_and", "(", "pose2d", "[", ":", ",", "1", "]", ">=", "0", ",", "\n", "pose2d", "[", ":", ",", "1", "]", "<=", "height", "-", "1", ")", "\n", "check", "=", "np", ".", "bitwise_and", "(", "x_check", ",", "y_check", ")", "\n", "\n", "joints_vis", "=", "np", ".", "ones", "(", "(", "len", "(", "pose2d", ")", ",", "1", ")", ")", "\n", "joints_vis", "[", "np", ".", "logical_not", "(", "check", ")", "]", "=", "0", "\n", "all_poses", ".", "append", "(", "pose2d", ")", "\n", "all_poses_vis", ".", "append", "(", "\n", "np", ".", "repeat", "(", "\n", "np", ".", "reshape", "(", "joints_vis", ",", "(", "-", "1", ",", "1", ")", ")", ",", "2", ",", "axis", "=", "1", ")", ")", "\n", "\n", "", "", "pred_index", "=", "'{}_{}'", ".", "format", "(", "k", ",", "i", ")", "\n", "preds", "=", "self", ".", "pred_pose2d", "[", "pred_index", "]", "\n", "preds", "=", "[", "np", ".", "array", "(", "p", "[", "\"pred\"", "]", ")", "for", "p", "in", "preds", "]", "\n", "db", ".", "append", "(", "{", "\n", "'image'", ":", "osp", ".", "join", "(", "self", ".", "dataset_root", ",", "image", ")", ",", "\n", "'joints_3d'", ":", "all_poses_3d", ",", "\n", "'joints_3d_vis'", ":", "all_poses_vis_3d", ",", "\n", "'joints_2d'", ":", "all_poses", ",", "\n", "'joints_2d_vis'", ":", "all_poses_vis", ",", "\n", "'camera'", ":", "cam", ",", "\n", "'pred_pose2d'", ":", "preds", "\n", "}", ")", "\n", "\n", "", "", "return", "db", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf.Shelf._get_cam": [[140, 150], ["os.join", "os.join", "json_tricks.load.items", "open", "json_tricks.load", "cam.items", "numpy.array"], "methods", ["None"], ["", "def", "_get_cam", "(", "self", ")", ":", "\n", "        ", "cam_file", "=", "osp", ".", "join", "(", "self", ".", "dataset_root", ",", "\"calibration_shelf.json\"", ")", "\n", "with", "open", "(", "cam_file", ")", "as", "cfile", ":", "\n", "            ", "cameras", "=", "json", ".", "load", "(", "cfile", ")", "\n", "\n", "", "for", "id", ",", "cam", "in", "cameras", ".", "items", "(", ")", ":", "\n", "            ", "for", "k", ",", "v", "in", "cam", ".", "items", "(", ")", ":", "\n", "                ", "cameras", "[", "id", "]", "[", "k", "]", "=", "np", ".", "array", "(", "v", ")", "\n", "\n", "", "", "return", "cameras", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf.Shelf.__getitem__": [[151, 162], ["range", "dataset.JointsDataset.JointsDataset.__getitem__", "input.append", "target_heatmap.append", "target_weight.append", "input_heatmap.append", "target_3d.append", "meta.append"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.campus.Campus.__getitem__"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "input", ",", "target_heatmap", ",", "target_weight", ",", "target_3d", ",", "meta", ",", "input_heatmap", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "k", "in", "range", "(", "self", ".", "num_views", ")", ":", "\n", "            ", "i", ",", "th", ",", "tw", ",", "t3", ",", "m", ",", "ih", "=", "super", "(", ")", ".", "__getitem__", "(", "self", ".", "num_views", "*", "idx", "+", "k", ")", "\n", "input", ".", "append", "(", "i", ")", "\n", "target_heatmap", ".", "append", "(", "th", ")", "\n", "target_weight", ".", "append", "(", "tw", ")", "\n", "input_heatmap", ".", "append", "(", "ih", ")", "\n", "target_3d", ".", "append", "(", "t3", ")", "\n", "meta", ".", "append", "(", "m", ")", "\n", "", "return", "input", ",", "target_heatmap", ",", "target_weight", ",", "target_3d", ",", "meta", ",", "input_heatmap", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf.Shelf.__len__": [[163, 165], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "db_size", "//", "self", ".", "num_views", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf.Shelf.evaluate": [[166, 226], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "scipy.loadmat", "numpy.array().squeeze", "len", "numpy.zeros", "numpy.zeros", "numpy.zeros", "enumerate", "numpy.mean", "collections.OrderedDict", "collections.OrderedDict", "collections.OrderedDict.items", "preds[].copy", "numpy.stack", "range", "numpy.array", "numpy.mean", "numpy.argmin", "numpy.min", "enumerate", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.sum", "numpy.array().tolist", "shelf.Shelf.coco2shelf3D", "len", "numpy.sqrt", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.linalg.norm", "copy.deepcopy", "numpy.sum", "len", "numpy.array", "data[].tolist"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf.Shelf.coco2shelf3D"], ["", "def", "evaluate", "(", "self", ",", "preds", ",", "recall_threshold", "=", "500", ")", ":", "\n", "        ", "datafile", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'actorsGT.mat'", ")", "\n", "data", "=", "scio", ".", "loadmat", "(", "datafile", ")", "\n", "actor_3d", "=", "np", ".", "array", "(", "np", ".", "array", "(", "data", "[", "'actor3D'", "]", ".", "tolist", "(", ")", ")", ".", "tolist", "(", ")", ")", ".", "squeeze", "(", ")", "# num_person * num_frame", "\n", "num_person", "=", "len", "(", "actor_3d", ")", "\n", "total_gt", "=", "0", "\n", "match_gt", "=", "0", "\n", "\n", "limbs", "=", "[", "[", "0", ",", "1", "]", ",", "[", "1", ",", "2", "]", ",", "[", "3", ",", "4", "]", ",", "[", "4", ",", "5", "]", ",", "[", "6", ",", "7", "]", ",", "[", "7", ",", "8", "]", ",", "[", "9", ",", "10", "]", ",", "[", "10", ",", "11", "]", ",", "[", "12", ",", "13", "]", "]", "\n", "correct_parts", "=", "np", ".", "zeros", "(", "num_person", ")", "\n", "total_parts", "=", "np", ".", "zeros", "(", "num_person", ")", "\n", "alpha", "=", "0.5", "\n", "bone_correct_parts", "=", "np", ".", "zeros", "(", "(", "num_person", ",", "10", ")", ")", "\n", "\n", "for", "i", ",", "fi", "in", "enumerate", "(", "self", ".", "frame_range", ")", ":", "\n", "            ", "pred_coco", "=", "preds", "[", "i", "]", ".", "copy", "(", ")", "\n", "pred_coco", "=", "pred_coco", "[", "pred_coco", "[", ":", ",", "0", ",", "3", "]", ">=", "0", ",", ":", ",", ":", "3", "]", "\n", "pred", "=", "np", ".", "stack", "(", "[", "self", ".", "coco2shelf3D", "(", "p", ")", "for", "p", "in", "copy", ".", "deepcopy", "(", "pred_coco", "[", ":", ",", ":", ",", ":", "3", "]", ")", "]", ")", "\n", "\n", "for", "person", "in", "range", "(", "num_person", ")", ":", "\n", "                ", "gt", "=", "actor_3d", "[", "person", "]", "[", "fi", "]", "*", "1000.0", "\n", "if", "len", "(", "gt", "[", "0", "]", ")", "==", "0", ":", "\n", "                    ", "continue", "\n", "\n", "", "mpjpes", "=", "np", ".", "mean", "(", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "(", "gt", "[", "np", ".", "newaxis", "]", "-", "pred", ")", "**", "2", ",", "axis", "=", "-", "1", ")", ")", ",", "axis", "=", "-", "1", ")", "\n", "min_n", "=", "np", ".", "argmin", "(", "mpjpes", ")", "\n", "min_mpjpe", "=", "np", ".", "min", "(", "mpjpes", ")", "\n", "if", "min_mpjpe", "<", "recall_threshold", ":", "\n", "                    ", "match_gt", "+=", "1", "\n", "", "total_gt", "+=", "1", "\n", "\n", "for", "j", ",", "k", "in", "enumerate", "(", "limbs", ")", ":", "\n", "                    ", "total_parts", "[", "person", "]", "+=", "1", "\n", "error_s", "=", "np", ".", "linalg", ".", "norm", "(", "pred", "[", "min_n", ",", "k", "[", "0", "]", ",", "0", ":", "3", "]", "-", "gt", "[", "k", "[", "0", "]", "]", ")", "\n", "error_e", "=", "np", ".", "linalg", ".", "norm", "(", "pred", "[", "min_n", ",", "k", "[", "1", "]", ",", "0", ":", "3", "]", "-", "gt", "[", "k", "[", "1", "]", "]", ")", "\n", "limb_length", "=", "np", ".", "linalg", ".", "norm", "(", "gt", "[", "k", "[", "0", "]", "]", "-", "gt", "[", "k", "[", "1", "]", "]", ")", "\n", "if", "(", "error_s", "+", "error_e", ")", "/", "2.0", "<=", "alpha", "*", "limb_length", ":", "\n", "                        ", "correct_parts", "[", "person", "]", "+=", "1", "\n", "bone_correct_parts", "[", "person", ",", "j", "]", "+=", "1", "\n", "", "", "pred_hip", "=", "(", "pred", "[", "min_n", ",", "2", ",", "0", ":", "3", "]", "+", "pred", "[", "min_n", ",", "3", ",", "0", ":", "3", "]", ")", "/", "2.0", "\n", "gt_hip", "=", "(", "gt", "[", "2", "]", "+", "gt", "[", "3", "]", ")", "/", "2.0", "\n", "total_parts", "[", "person", "]", "+=", "1", "\n", "error_s", "=", "np", ".", "linalg", ".", "norm", "(", "pred_hip", "-", "gt_hip", ")", "\n", "error_e", "=", "np", ".", "linalg", ".", "norm", "(", "pred", "[", "min_n", ",", "12", ",", "0", ":", "3", "]", "-", "gt", "[", "12", "]", ")", "\n", "limb_length", "=", "np", ".", "linalg", ".", "norm", "(", "gt_hip", "-", "gt", "[", "12", "]", ")", "\n", "if", "(", "error_s", "+", "error_e", ")", "/", "2.0", "<=", "alpha", "*", "limb_length", ":", "\n", "                    ", "correct_parts", "[", "person", "]", "+=", "1", "\n", "bone_correct_parts", "[", "person", ",", "9", "]", "+=", "1", "\n", "\n", "", "", "", "actor_pcp", "=", "correct_parts", "/", "(", "total_parts", "+", "1e-8", ")", "\n", "avg_pcp", "=", "np", ".", "mean", "(", "actor_pcp", "[", ":", "3", "]", ")", "\n", "\n", "bone_group", "=", "OrderedDict", "(", "\n", "[", "(", "'Head'", ",", "[", "8", "]", ")", ",", "(", "'Torso'", ",", "[", "9", "]", ")", ",", "(", "'Upper arms'", ",", "[", "5", ",", "6", "]", ")", ",", "\n", "(", "'Lower arms'", ",", "[", "4", ",", "7", "]", ")", ",", "(", "'Upper legs'", ",", "[", "1", ",", "2", "]", ")", ",", "(", "'Lower legs'", ",", "[", "0", ",", "3", "]", ")", "]", ")", "\n", "bone_person_pcp", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "bone_group", ".", "items", "(", ")", ":", "\n", "            ", "bone_person_pcp", "[", "k", "]", "=", "np", ".", "sum", "(", "bone_correct_parts", "[", ":", ",", "v", "]", ",", "axis", "=", "-", "1", ")", "/", "(", "total_parts", "/", "10", "*", "len", "(", "v", ")", "+", "1e-8", ")", "\n", "\n", "", "return", "actor_pcp", ",", "avg_pcp", ",", "bone_person_pcp", ",", "match_gt", "/", "(", "total_gt", "+", "1e-8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf.Shelf.coco2shelf3D": [[227, 257], ["numpy.zeros", "numpy.array", "numpy.array", "numpy.array"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "coco2shelf3D", "(", "coco_pose", ")", ":", "\n", "        ", "\"\"\"\n        transform coco order(our method output) 3d pose to shelf dataset order with interpolation\n        :param coco_pose: np.array with shape 17x3\n        :return: 3D pose in shelf order with shape 14x3\n        \"\"\"", "\n", "shelf_pose", "=", "np", ".", "zeros", "(", "(", "14", ",", "3", ")", ")", "\n", "coco2shelf", "=", "np", ".", "array", "(", "[", "16", ",", "14", ",", "12", ",", "11", ",", "13", ",", "15", ",", "10", ",", "8", ",", "6", ",", "5", ",", "7", ",", "9", "]", ")", "\n", "shelf_pose", "[", "0", ":", "12", "]", "+=", "coco_pose", "[", "coco2shelf", "]", "\n", "\n", "mid_sho", "=", "(", "coco_pose", "[", "5", "]", "+", "coco_pose", "[", "6", "]", ")", "/", "2", "# L and R shoulder", "\n", "head_center", "=", "(", "coco_pose", "[", "3", "]", "+", "coco_pose", "[", "4", "]", ")", "/", "2", "# middle of two ear", "\n", "\n", "head_bottom", "=", "(", "mid_sho", "+", "head_center", ")", "/", "2", "# nose and head center", "\n", "head_top", "=", "head_bottom", "+", "(", "head_center", "-", "head_bottom", ")", "*", "2", "\n", "# shelf_pose[12] += head_bottom", "\n", "# shelf_pose[13] += head_top", "\n", "\n", "shelf_pose", "[", "12", "]", "=", "(", "shelf_pose", "[", "8", "]", "+", "shelf_pose", "[", "9", "]", ")", "/", "2", "# Use middle of shoulder to init", "\n", "shelf_pose", "[", "13", "]", "=", "coco_pose", "[", "0", "]", "# use nose to init", "\n", "\n", "shelf_pose", "[", "13", "]", "=", "shelf_pose", "[", "12", "]", "+", "(", "shelf_pose", "[", "13", "]", "-", "shelf_pose", "[", "12", "]", ")", "*", "np", ".", "array", "(", "[", "0.75", ",", "0.75", ",", "1.5", "]", ")", "\n", "shelf_pose", "[", "12", "]", "=", "shelf_pose", "[", "12", "]", "+", "(", "coco_pose", "[", "0", "]", "-", "shelf_pose", "[", "12", "]", ")", "*", "np", ".", "array", "(", "[", "0.5", ",", "0.5", ",", "0.5", "]", ")", "\n", "\n", "alpha", "=", "0.75", "\n", "shelf_pose", "[", "13", "]", "=", "shelf_pose", "[", "13", "]", "*", "alpha", "+", "head_top", "*", "(", "1", "-", "alpha", ")", "\n", "shelf_pose", "[", "12", "]", "=", "shelf_pose", "[", "12", "]", "*", "alpha", "+", "head_bottom", "*", "(", "1", "-", "alpha", ")", "\n", "\n", "return", "shelf_pose", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.campus_synthetic.CampusSynthetic.__init__": [[45, 84], ["torch.utils.data.Dataset.__init__", "len", "len", "os.path.dirname", "os.path.dirname", "os.path.dirname", "os.path.dirname", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "pickle.load", "campus_synthetic.CampusSynthetic._get_cam", "open"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.AverageMeter.__init__", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.campus.Campus._get_cam"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ",", "image_set", ",", "is_train", ",", "transform", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pixel_std", "=", "200.0", "\n", "self", ".", "joints_def", "=", "coco_joints_def", "\n", "self", ".", "limbs", "=", "LIMBS", "\n", "self", ".", "num_joints", "=", "len", "(", "coco_joints_def", ")", "\n", "self", ".", "cam_list", "=", "[", "0", ",", "1", ",", "2", "]", "\n", "self", ".", "num_views", "=", "len", "(", "self", ".", "cam_list", ")", "\n", "self", ".", "maximum_person", "=", "cfg", ".", "MULTI_PERSON", ".", "MAX_PEOPLE_NUM", "\n", "\n", "self", ".", "is_train", "=", "is_train", "\n", "\n", "this_dir", "=", "os", ".", "path", ".", "dirname", "(", "__file__", ")", "\n", "dataset_root", "=", "os", ".", "path", ".", "join", "(", "this_dir", ",", "'../..'", ",", "cfg", ".", "DATASET", ".", "ROOT", ")", "\n", "self", ".", "dataset_root", "=", "dataset_root", "\n", "self", ".", "image_set", "=", "image_set", "\n", "self", ".", "dataset_name", "=", "cfg", ".", "DATASET", ".", "TEST_DATASET", "\n", "\n", "self", ".", "data_format", "=", "cfg", ".", "DATASET", ".", "DATA_FORMAT", "\n", "self", ".", "data_augmentation", "=", "cfg", ".", "DATASET", ".", "DATA_AUGMENTATION", "\n", "\n", "self", ".", "color_rgb", "=", "cfg", ".", "DATASET", ".", "COLOR_RGB", "\n", "\n", "self", ".", "target_type", "=", "cfg", ".", "NETWORK", ".", "TARGET_TYPE", "\n", "self", ".", "image_size", "=", "np", ".", "array", "(", "cfg", ".", "NETWORK", ".", "IMAGE_SIZE", ")", "\n", "self", ".", "heatmap_size", "=", "np", ".", "array", "(", "cfg", ".", "NETWORK", ".", "HEATMAP_SIZE", ")", "\n", "self", ".", "sigma", "=", "cfg", ".", "NETWORK", ".", "SIGMA", "\n", "self", ".", "use_different_joints_weight", "=", "cfg", ".", "LOSS", ".", "USE_DIFFERENT_JOINTS_WEIGHT", "\n", "self", ".", "joints_weight", "=", "1", "\n", "\n", "self", ".", "transform", "=", "transform", "\n", "\n", "self", ".", "space_size", "=", "np", ".", "array", "(", "cfg", ".", "MULTI_PERSON", ".", "SPACE_SIZE", ")", "\n", "self", ".", "space_center", "=", "np", ".", "array", "(", "cfg", ".", "MULTI_PERSON", ".", "SPACE_CENTER", ")", "\n", "self", ".", "initial_cube_size", "=", "np", ".", "array", "(", "cfg", ".", "MULTI_PERSON", ".", "INITIAL_CUBE_SIZE", ")", "\n", "\n", "pose_db_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "\"..\"", ",", "\"panoptic_training_pose.pkl\"", ")", "\n", "self", ".", "pose_db", "=", "pickle", ".", "load", "(", "open", "(", "pose_db_file", ",", "\"rb\"", ")", ")", "\n", "self", ".", "cameras", "=", "self", ".", "_get_cam", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.campus_synthetic.CampusSynthetic._get_cam": [[85, 95], ["os.join", "os.join", "json_tricks.load.items", "open", "json_tricks.load", "cam.items", "numpy.array"], "methods", ["None"], ["", "def", "_get_cam", "(", "self", ")", ":", "\n", "        ", "cam_file", "=", "osp", ".", "join", "(", "self", ".", "dataset_root", ",", "\"calibration_campus.json\"", ")", "\n", "with", "open", "(", "cam_file", ")", "as", "cfile", ":", "\n", "            ", "cameras", "=", "json", ".", "load", "(", "cfile", ")", "\n", "\n", "", "for", "id", ",", "cam", "in", "cameras", ".", "items", "(", ")", ":", "\n", "            ", "for", "k", ",", "v", "in", "cam", ".", "items", "(", ")", ":", "\n", "                ", "cameras", "[", "id", "]", "[", "k", "]", "=", "np", ".", "array", "(", "v", ")", "\n", "\n", "", "", "return", "cameras", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.campus_synthetic.CampusSynthetic.__getitem__": [[96, 141], ["numpy.random.choice", "numpy.random.choice", "numpy.array", "numpy.array", "range", "campus_synthetic.CampusSynthetic.cameras.items", "range", "[].copy", "numpy.random.uniform", "campus_synthetic.CampusSynthetic.get_new_center", "campus_synthetic.CampusSynthetic._get_single_view_item", "input.append", "target_heatmap.append", "target_weight.append", "input_heatmap.append", "target_3d.append", "meta.append", "campus_synthetic.CampusSynthetic.isvalid", "campus_synthetic.CampusSynthetic.get_new_center", "center_list.append", "bbox_list.append", "utils.transforms.rotate_points", "campus_synthetic.CampusSynthetic.calc_bbox", "campus_synthetic.CampusSynthetic.calc_bbox", "utils.transforms.rotate_points"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf_synthetic.ShelfSynthetic.get_new_center", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf_synthetic.ShelfSynthetic._get_single_view_item", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf_synthetic.ShelfSynthetic.isvalid", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf_synthetic.ShelfSynthetic.get_new_center", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.rotate_points", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf_synthetic.ShelfSynthetic.calc_bbox", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf_synthetic.ShelfSynthetic.calc_bbox", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.rotate_points"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "# nposes = np.random.choice([1, 2, 3, 4, 5], p=[0.1, 0.1, 0.2, 0.4, 0.2])", "\n", "        ", "nposes", "=", "np", ".", "random", ".", "choice", "(", "range", "(", "1", ",", "10", ")", ")", "\n", "bbox_list", "=", "[", "]", "\n", "center_list", "=", "[", "]", "\n", "\n", "select_poses", "=", "np", ".", "random", ".", "choice", "(", "self", ".", "pose_db", ",", "nposes", ")", "\n", "joints_3d", "=", "np", ".", "array", "(", "[", "p", "[", "'pose'", "]", "for", "p", "in", "select_poses", "]", ")", "\n", "joints_3d_vis", "=", "np", ".", "array", "(", "[", "p", "[", "'vis'", "]", "for", "p", "in", "select_poses", "]", ")", "\n", "\n", "for", "n", "in", "range", "(", "0", ",", "nposes", ")", ":", "\n", "            ", "points", "=", "joints_3d", "[", "n", "]", "[", ":", ",", ":", "2", "]", ".", "copy", "(", ")", "\n", "center", "=", "(", "points", "[", "11", ",", ":", "2", "]", "+", "points", "[", "12", ",", ":", "2", "]", ")", "/", "2", "\n", "rot_rad", "=", "np", ".", "random", ".", "uniform", "(", "-", "180", ",", "180", ")", "\n", "\n", "new_center", "=", "self", ".", "get_new_center", "(", "center_list", ")", "\n", "new_xy", "=", "rotate_points", "(", "points", ",", "center", ",", "rot_rad", ")", "-", "center", "+", "new_center", "\n", "\n", "loop_count", "=", "0", "\n", "while", "not", "self", ".", "isvalid", "(", "new_center", ",", "self", ".", "calc_bbox", "(", "new_xy", ",", "joints_3d_vis", "[", "n", "]", ")", ",", "bbox_list", ")", ":", "\n", "                ", "loop_count", "+=", "1", "\n", "if", "loop_count", ">=", "100", ":", "\n", "                    ", "break", "\n", "", "new_center", "=", "self", ".", "get_new_center", "(", "center_list", ")", "\n", "new_xy", "=", "rotate_points", "(", "points", ",", "center", ",", "rot_rad", ")", "-", "center", "+", "new_center", "\n", "\n", "", "if", "loop_count", ">=", "100", ":", "\n", "                ", "nposes", "=", "n", "\n", "joints_3d", "=", "joints_3d", "[", ":", "n", "]", "\n", "joints_3d_vis", "=", "joints_3d_vis", "[", ":", "n", "]", "\n", "", "else", ":", "\n", "                ", "center_list", ".", "append", "(", "new_center", ")", "\n", "bbox_list", ".", "append", "(", "self", ".", "calc_bbox", "(", "new_xy", ",", "joints_3d_vis", "[", "n", "]", ")", ")", "\n", "joints_3d", "[", "n", "]", "[", ":", ",", ":", "2", "]", "=", "new_xy", "\n", "\n", "", "", "input", ",", "target_heatmap", ",", "target_weight", ",", "target_3d", ",", "meta", ",", "input_heatmap", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "k", ",", "cam", "in", "self", ".", "cameras", ".", "items", "(", ")", ":", "\n", "            ", "i", ",", "th", ",", "tw", ",", "t3", ",", "m", ",", "ih", "=", "self", ".", "_get_single_view_item", "(", "joints_3d", ",", "joints_3d_vis", ",", "cam", ")", "\n", "input", ".", "append", "(", "i", ")", "\n", "target_heatmap", ".", "append", "(", "th", ")", "\n", "target_weight", ".", "append", "(", "tw", ")", "\n", "input_heatmap", ".", "append", "(", "ih", ")", "\n", "target_3d", ".", "append", "(", "t3", ")", "\n", "meta", ".", "append", "(", "m", ")", "\n", "", "return", "input", ",", "target_heatmap", ",", "target_weight", ",", "target_3d", ",", "meta", ",", "input_heatmap", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.campus_synthetic.CampusSynthetic.__len__": [[142, 144], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "3000", "\n", "# return self.db_size // self.num_views", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.campus_synthetic.CampusSynthetic._get_single_view_item": [[146, 232], ["copy.deepcopy", "copy.deepcopy", "len", "numpy.array", "utils.transforms.get_scale", "range", "utils.transforms.get_affine_transform", "numpy.ones", "cv2.warpAffine", "range", "campus_synthetic.CampusSynthetic.generate_input_heatmap", "torch.from_numpy", "torch.zeros_like", "torch.zeros", "numpy.zeros", "numpy.zeros", "range", "numpy.zeros", "numpy.zeros", "range", "campus_synthetic.CampusSynthetic.generate_3d_target", "torch.from_numpy", "utils.cameras_cpu.project_pose", "numpy.bitwise_and", "numpy.bitwise_and", "numpy.bitwise_and", "joints.append", "joints_vis.append", "campus_synthetic.CampusSynthetic.transform", "range", "len", "numpy.repeat", "int", "int", "len", "len", "len", "len", "len", "numpy.logical_not", "numpy.reshape", "utils.transforms.affine_transform", "numpy.min"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.get_scale", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.get_affine_transform", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf_synthetic.ShelfSynthetic.generate_input_heatmap", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf_synthetic.ShelfSynthetic.generate_3d_target", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.cameras_cpu.project_pose", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.affine_transform"], ["", "def", "_get_single_view_item", "(", "self", ",", "joints_3d", ",", "joints_3d_vis", ",", "cam", ")", ":", "\n", "        ", "joints_3d", "=", "copy", ".", "deepcopy", "(", "joints_3d", ")", "\n", "joints_3d_vis", "=", "copy", ".", "deepcopy", "(", "joints_3d_vis", ")", "\n", "nposes", "=", "len", "(", "joints_3d", ")", "\n", "\n", "width", "=", "360", "\n", "height", "=", "288", "\n", "c", "=", "np", ".", "array", "(", "[", "width", "/", "2.0", ",", "height", "/", "2.0", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "# s = np.array(", "\n", "#     [width / self.pixel_std, height / self.pixel_std], dtype=np.float32)", "\n", "s", "=", "get_scale", "(", "(", "width", ",", "height", ")", ",", "self", ".", "image_size", ")", "\n", "r", "=", "0", "\n", "\n", "joints", "=", "[", "]", "\n", "joints_vis", "=", "[", "]", "\n", "for", "n", "in", "range", "(", "nposes", ")", ":", "\n", "            ", "pose2d", "=", "project_pose", "(", "joints_3d", "[", "n", "]", ",", "cam", ")", "\n", "\n", "x_check", "=", "np", ".", "bitwise_and", "(", "pose2d", "[", ":", ",", "0", "]", ">=", "0", ",", "\n", "pose2d", "[", ":", ",", "0", "]", "<=", "width", "-", "1", ")", "\n", "y_check", "=", "np", ".", "bitwise_and", "(", "pose2d", "[", ":", ",", "1", "]", ">=", "0", ",", "\n", "pose2d", "[", ":", ",", "1", "]", "<=", "height", "-", "1", ")", "\n", "check", "=", "np", ".", "bitwise_and", "(", "x_check", ",", "y_check", ")", "\n", "vis", "=", "joints_3d_vis", "[", "n", "]", "[", ":", ",", "0", "]", ">", "0", "\n", "vis", "[", "np", ".", "logical_not", "(", "check", ")", "]", "=", "0", "\n", "\n", "joints", ".", "append", "(", "pose2d", ")", "\n", "joints_vis", ".", "append", "(", "np", ".", "repeat", "(", "np", ".", "reshape", "(", "vis", ",", "(", "-", "1", ",", "1", ")", ")", ",", "2", ",", "axis", "=", "1", ")", ")", "\n", "\n", "", "trans", "=", "get_affine_transform", "(", "c", ",", "s", ",", "r", ",", "self", ".", "image_size", ")", "\n", "input", "=", "np", ".", "ones", "(", "(", "height", ",", "width", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "input", "=", "cv2", ".", "warpAffine", "(", "\n", "input", ",", "\n", "trans", ",", "(", "int", "(", "self", ".", "image_size", "[", "0", "]", ")", ",", "int", "(", "self", ".", "image_size", "[", "1", "]", ")", ")", ",", "\n", "flags", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "\n", "if", "self", ".", "transform", ":", "\n", "            ", "input", "=", "self", ".", "transform", "(", "input", ")", "\n", "\n", "", "for", "n", "in", "range", "(", "nposes", ")", ":", "\n", "            ", "for", "i", "in", "range", "(", "len", "(", "joints", "[", "0", "]", ")", ")", ":", "\n", "                ", "if", "joints_vis", "[", "n", "]", "[", "i", ",", "0", "]", ">", "0.0", ":", "\n", "                    ", "joints", "[", "n", "]", "[", "i", ",", "0", ":", "2", "]", "=", "affine_transform", "(", "\n", "joints", "[", "n", "]", "[", "i", ",", "0", ":", "2", "]", ",", "trans", ")", "\n", "if", "(", "np", ".", "min", "(", "joints", "[", "n", "]", "[", "i", ",", ":", "2", "]", ")", "<", "0", "or", "\n", "joints", "[", "n", "]", "[", "i", ",", "0", "]", ">=", "self", ".", "image_size", "[", "0", "]", "or", "\n", "joints", "[", "n", "]", "[", "i", ",", "1", "]", ">=", "self", ".", "image_size", "[", "1", "]", ")", ":", "\n", "                        ", "joints_vis", "[", "n", "]", "[", "i", ",", ":", "]", "=", "0", "\n", "\n", "", "", "", "", "input_heatmap", ",", "_", "=", "self", ".", "generate_input_heatmap", "(", "\n", "joints", ",", "joints_vis", ")", "\n", "input_heatmap", "=", "torch", ".", "from_numpy", "(", "input_heatmap", ")", "\n", "target_heatmap", "=", "torch", ".", "zeros_like", "(", "input_heatmap", ")", "\n", "target_weight", "=", "torch", ".", "zeros", "(", "len", "(", "target_heatmap", ")", ",", "1", ")", "\n", "\n", "# make joints and joints_vis having same shape", "\n", "joints_u", "=", "np", ".", "zeros", "(", "(", "self", ".", "maximum_person", ",", "len", "(", "joints", "[", "0", "]", ")", ",", "2", ")", ")", "\n", "joints_vis_u", "=", "np", ".", "zeros", "(", "(", "self", ".", "maximum_person", ",", "len", "(", "joints", "[", "0", "]", ")", ",", "2", ")", ")", "\n", "for", "i", "in", "range", "(", "nposes", ")", ":", "\n", "            ", "joints_u", "[", "i", "]", "=", "joints", "[", "i", "]", "\n", "joints_vis_u", "[", "i", "]", "=", "joints_vis", "[", "i", "]", "\n", "\n", "", "joints_3d_u", "=", "np", ".", "zeros", "(", "(", "self", ".", "maximum_person", ",", "len", "(", "joints", "[", "0", "]", ")", ",", "3", ")", ")", "\n", "joints_3d_vis_u", "=", "np", ".", "zeros", "(", "(", "self", ".", "maximum_person", ",", "len", "(", "joints", "[", "0", "]", ")", ",", "3", ")", ")", "\n", "for", "i", "in", "range", "(", "nposes", ")", ":", "\n", "            ", "joints_3d_u", "[", "i", "]", "=", "joints_3d", "[", "i", "]", "[", ":", ",", "0", ":", "3", "]", "\n", "joints_3d_vis_u", "[", "i", "]", "=", "joints_3d_vis", "[", "i", "]", "[", ":", ",", "0", ":", "3", "]", "\n", "\n", "", "target_3d", "=", "self", ".", "generate_3d_target", "(", "joints_3d", ")", "\n", "target_3d", "=", "torch", ".", "from_numpy", "(", "target_3d", ")", "\n", "\n", "meta", "=", "{", "\n", "'image'", ":", "''", ",", "\n", "'num_person'", ":", "nposes", ",", "\n", "'joints_3d'", ":", "joints_3d_u", ",", "\n", "'roots_3d'", ":", "(", "joints_3d_u", "[", ":", ",", "11", "]", "+", "joints_3d_u", "[", ":", ",", "12", "]", ")", "/", "2.0", ",", "\n", "'joints_3d_vis'", ":", "joints_3d_vis_u", ",", "\n", "'joints'", ":", "joints_u", ",", "\n", "'joints_vis'", ":", "joints_vis_u", ",", "\n", "'center'", ":", "c", ",", "\n", "'scale'", ":", "s", ",", "\n", "'rotation'", ":", "r", ",", "\n", "'camera'", ":", "cam", "\n", "}", "\n", "\n", "return", "input", ",", "target_heatmap", ",", "target_weight", ",", "target_3d", ",", "meta", ",", "input_heatmap", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.campus_synthetic.CampusSynthetic.compute_human_scale": [[233, 241], ["numpy.clip", "numpy.sum", "numpy.min", "numpy.max", "numpy.min", "numpy.max", "numpy.maximum"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "compute_human_scale", "(", "pose", ",", "joints_vis", ")", ":", "\n", "        ", "idx", "=", "joints_vis", "[", ":", ",", "0", "]", "==", "1", "\n", "if", "np", ".", "sum", "(", "idx", ")", "==", "0", ":", "\n", "            ", "return", "0", "\n", "", "minx", ",", "maxx", "=", "np", ".", "min", "(", "pose", "[", "idx", ",", "0", "]", ")", ",", "np", ".", "max", "(", "pose", "[", "idx", ",", "0", "]", ")", "\n", "miny", ",", "maxy", "=", "np", ".", "min", "(", "pose", "[", "idx", ",", "1", "]", ")", ",", "np", ".", "max", "(", "pose", "[", "idx", ",", "1", "]", ")", "\n", "return", "np", ".", "clip", "(", "np", ".", "maximum", "(", "maxy", "-", "miny", ",", "maxx", "-", "minx", ")", "**", "2", ",", "1.0", "/", "4", "*", "96", "**", "2", ",", "4", "*", "96", "**", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.campus_synthetic.CampusSynthetic.generate_input_heatmap": [[242, 319], ["len", "numpy.zeros", "range", "range", "numpy.zeros", "range", "numpy.multiply", "range", "numpy.clip", "campus_synthetic.CampusSynthetic.compute_human_scale", "numpy.sqrt", "int", "int", "numpy.arange", "numpy.maximum", "int", "int", "int", "int", "numpy.exp", "max", "max", "max", "min", "max", "min", "random.random", "min", "min", "numpy.random.randn", "random.random", "random.random", "random.random"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf_synthetic.ShelfSynthetic.compute_human_scale"], ["", "def", "generate_input_heatmap", "(", "self", ",", "joints", ",", "joints_vis", ")", ":", "\n", "        ", "'''\n        :param joints:  [[num_joints, 3]]\n        :param joints_vis: [num_joints, 3]\n        :return: input_heatmap\n        '''", "\n", "nposes", "=", "len", "(", "joints", ")", "\n", "num_joints", "=", "joints", "[", "0", "]", ".", "shape", "[", "0", "]", "\n", "target_weight", "=", "np", ".", "zeros", "(", "(", "num_joints", ",", "1", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "i", "in", "range", "(", "num_joints", ")", ":", "\n", "            ", "for", "n", "in", "range", "(", "nposes", ")", ":", "\n", "                ", "if", "joints_vis", "[", "n", "]", "[", "i", ",", "0", "]", "==", "1", ":", "\n", "                    ", "target_weight", "[", "i", ",", "0", "]", "=", "1", "\n", "\n", "", "", "", "assert", "self", ".", "target_type", "==", "'gaussian'", ",", "'Only support gaussian map now!'", "\n", "\n", "if", "self", ".", "target_type", "==", "'gaussian'", ":", "\n", "            ", "target", "=", "np", ".", "zeros", "(", "\n", "(", "num_joints", ",", "self", ".", "heatmap_size", "[", "1", "]", ",", "self", ".", "heatmap_size", "[", "0", "]", ")", ",", "\n", "dtype", "=", "np", ".", "float32", ")", "\n", "feat_stride", "=", "self", ".", "image_size", "/", "self", ".", "heatmap_size", "\n", "\n", "for", "n", "in", "range", "(", "nposes", ")", ":", "\n", "# obscured = random.random() < 0.05", "\n", "# if obscured:", "\n", "#     continue", "\n", "                ", "human_scale", "=", "2", "*", "self", ".", "compute_human_scale", "(", "joints", "[", "n", "]", "/", "feat_stride", ",", "joints_vis", "[", "n", "]", ")", "\n", "if", "human_scale", "==", "0", ":", "\n", "                    ", "continue", "\n", "\n", "", "cur_sigma", "=", "self", ".", "sigma", "*", "np", ".", "sqrt", "(", "(", "human_scale", "/", "(", "96.0", "*", "96.0", ")", ")", ")", "\n", "tmp_size", "=", "cur_sigma", "*", "3", "\n", "for", "joint_id", "in", "range", "(", "num_joints", ")", ":", "\n", "                    ", "feat_stride", "=", "self", ".", "image_size", "/", "self", ".", "heatmap_size", "\n", "mu_x", "=", "int", "(", "joints", "[", "n", "]", "[", "joint_id", "]", "[", "0", "]", "/", "feat_stride", "[", "0", "]", ")", "\n", "mu_y", "=", "int", "(", "joints", "[", "n", "]", "[", "joint_id", "]", "[", "1", "]", "/", "feat_stride", "[", "1", "]", ")", "\n", "ul", "=", "[", "int", "(", "mu_x", "-", "tmp_size", ")", ",", "int", "(", "mu_y", "-", "tmp_size", ")", "]", "\n", "br", "=", "[", "int", "(", "mu_x", "+", "tmp_size", "+", "1", ")", ",", "int", "(", "mu_y", "+", "tmp_size", "+", "1", ")", "]", "\n", "if", "joints_vis", "[", "n", "]", "[", "joint_id", ",", "0", "]", "==", "0", "or", "ul", "[", "0", "]", ">=", "self", ".", "heatmap_size", "[", "0", "]", "or", "ul", "[", "1", "]", ">=", "self", ".", "heatmap_size", "[", "1", "]", "or", "br", "[", "0", "]", "<", "0", "or", "br", "[", "1", "]", "<", "0", ":", "\n", "                        ", "continue", "\n", "\n", "", "size", "=", "2", "*", "tmp_size", "+", "1", "\n", "x", "=", "np", ".", "arange", "(", "0", ",", "size", ",", "1", ",", "np", ".", "float32", ")", "\n", "y", "=", "x", "[", ":", ",", "np", ".", "newaxis", "]", "\n", "x0", "=", "y0", "=", "size", "//", "2", "\n", "scale", "=", "0.9", "+", "np", ".", "random", ".", "randn", "(", "1", ")", "*", "0.03", "if", "random", ".", "random", "(", ")", "<", "0.6", "else", "1.0", "\n", "if", "joint_id", "in", "[", "7", ",", "8", "]", ":", "\n", "                        ", "scale", "=", "scale", "*", "0.5", "if", "random", ".", "random", "(", ")", "<", "0.1", "else", "scale", "\n", "", "elif", "joint_id", "in", "[", "9", ",", "10", "]", ":", "\n", "                        ", "scale", "=", "scale", "*", "0.2", "if", "random", ".", "random", "(", ")", "<", "0.1", "else", "scale", "\n", "", "else", ":", "\n", "                        ", "scale", "=", "scale", "*", "0.5", "if", "random", ".", "random", "(", ")", "<", "0.05", "else", "scale", "\n", "", "g", "=", "np", ".", "exp", "(", "\n", "-", "(", "(", "x", "-", "x0", ")", "**", "2", "+", "(", "y", "-", "y0", ")", "**", "2", ")", "/", "(", "2", "*", "cur_sigma", "**", "2", ")", ")", "*", "scale", "\n", "\n", "# Usable gaussian range", "\n", "g_x", "=", "max", "(", "0", ",", "\n", "-", "ul", "[", "0", "]", ")", ",", "min", "(", "br", "[", "0", "]", ",", "self", ".", "heatmap_size", "[", "0", "]", ")", "-", "ul", "[", "0", "]", "\n", "g_y", "=", "max", "(", "0", ",", "\n", "-", "ul", "[", "1", "]", ")", ",", "min", "(", "br", "[", "1", "]", ",", "self", ".", "heatmap_size", "[", "1", "]", ")", "-", "ul", "[", "1", "]", "\n", "# Image range", "\n", "img_x", "=", "max", "(", "0", ",", "ul", "[", "0", "]", ")", ",", "min", "(", "br", "[", "0", "]", ",", "self", ".", "heatmap_size", "[", "0", "]", ")", "\n", "img_y", "=", "max", "(", "0", ",", "ul", "[", "1", "]", ")", ",", "min", "(", "br", "[", "1", "]", ",", "self", ".", "heatmap_size", "[", "1", "]", ")", "\n", "\n", "target", "[", "joint_id", "]", "[", "img_y", "[", "0", "]", ":", "img_y", "[", "1", "]", ",", "img_x", "[", "0", "]", ":", "img_x", "[", "1", "]", "]", "=", "np", ".", "maximum", "(", "\n", "target", "[", "joint_id", "]", "[", "img_y", "[", "0", "]", ":", "img_y", "[", "1", "]", ",", "img_x", "[", "0", "]", ":", "img_x", "[", "1", "]", "]", ",", "\n", "g", "[", "g_y", "[", "0", "]", ":", "g_y", "[", "1", "]", ",", "g_x", "[", "0", "]", ":", "g_x", "[", "1", "]", "]", ")", "\n", "", "target", "=", "np", ".", "clip", "(", "target", ",", "0", ",", "1", ")", "\n", "\n", "", "", "if", "self", ".", "use_different_joints_weight", ":", "\n", "            ", "target_weight", "=", "np", ".", "multiply", "(", "target_weight", ",", "self", ".", "joints_weight", ")", "\n", "\n", "", "return", "target", ",", "target_weight", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.campus_synthetic.CampusSynthetic.generate_3d_target": [[320, 356], ["len", "numpy.zeros", "range", "numpy.clip", "numpy.linspace", "numpy.linspace", "numpy.linspace", "numpy.meshgrid", "numpy.exp", "numpy.maximum", "numpy.searchsorted", "numpy.searchsorted", "numpy.searchsorted", "numpy.searchsorted", "numpy.searchsorted", "numpy.searchsorted"], "methods", ["None"], ["", "def", "generate_3d_target", "(", "self", ",", "joints_3d", ")", ":", "\n", "        ", "num_people", "=", "len", "(", "joints_3d", ")", "\n", "\n", "space_size", "=", "self", ".", "space_size", "\n", "space_center", "=", "self", ".", "space_center", "\n", "cube_size", "=", "self", ".", "initial_cube_size", "\n", "grid1Dx", "=", "np", ".", "linspace", "(", "-", "space_size", "[", "0", "]", "/", "2", ",", "space_size", "[", "0", "]", "/", "2", ",", "cube_size", "[", "0", "]", ")", "+", "space_center", "[", "0", "]", "\n", "grid1Dy", "=", "np", ".", "linspace", "(", "-", "space_size", "[", "1", "]", "/", "2", ",", "space_size", "[", "1", "]", "/", "2", ",", "cube_size", "[", "1", "]", ")", "+", "space_center", "[", "1", "]", "\n", "grid1Dz", "=", "np", ".", "linspace", "(", "-", "space_size", "[", "2", "]", "/", "2", ",", "space_size", "[", "2", "]", "/", "2", ",", "cube_size", "[", "2", "]", ")", "+", "space_center", "[", "2", "]", "\n", "\n", "target", "=", "np", ".", "zeros", "(", "(", "cube_size", "[", "0", "]", ",", "cube_size", "[", "1", "]", ",", "cube_size", "[", "2", "]", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "cur_sigma", "=", "200.0", "\n", "\n", "for", "n", "in", "range", "(", "num_people", ")", ":", "\n", "            ", "joint_id", "=", "[", "11", ",", "12", "]", "# mid-hip", "\n", "mu_x", "=", "(", "joints_3d", "[", "n", "]", "[", "joint_id", "[", "0", "]", "]", "[", "0", "]", "+", "joints_3d", "[", "n", "]", "[", "joint_id", "[", "1", "]", "]", "[", "0", "]", ")", "/", "2.0", "\n", "mu_y", "=", "(", "joints_3d", "[", "n", "]", "[", "joint_id", "[", "0", "]", "]", "[", "1", "]", "+", "joints_3d", "[", "n", "]", "[", "joint_id", "[", "1", "]", "]", "[", "1", "]", ")", "/", "2.0", "\n", "mu_z", "=", "(", "joints_3d", "[", "n", "]", "[", "joint_id", "[", "0", "]", "]", "[", "2", "]", "+", "joints_3d", "[", "n", "]", "[", "joint_id", "[", "1", "]", "]", "[", "2", "]", ")", "/", "2.0", "\n", "\n", "i_x", "=", "[", "np", ".", "searchsorted", "(", "grid1Dx", ",", "mu_x", "-", "3", "*", "cur_sigma", ")", ",", "\n", "np", ".", "searchsorted", "(", "grid1Dx", ",", "mu_x", "+", "3", "*", "cur_sigma", ",", "'right'", ")", "]", "\n", "i_y", "=", "[", "np", ".", "searchsorted", "(", "grid1Dy", ",", "mu_y", "-", "3", "*", "cur_sigma", ")", ",", "\n", "np", ".", "searchsorted", "(", "grid1Dy", ",", "mu_y", "+", "3", "*", "cur_sigma", ",", "'right'", ")", "]", "\n", "i_z", "=", "[", "np", ".", "searchsorted", "(", "grid1Dz", ",", "mu_z", "-", "3", "*", "cur_sigma", ")", ",", "\n", "np", ".", "searchsorted", "(", "grid1Dz", ",", "mu_z", "+", "3", "*", "cur_sigma", ",", "'right'", ")", "]", "\n", "if", "i_x", "[", "0", "]", ">=", "i_x", "[", "1", "]", "or", "i_y", "[", "0", "]", ">=", "i_y", "[", "1", "]", "or", "i_z", "[", "0", "]", ">=", "i_z", "[", "1", "]", ":", "\n", "                ", "continue", "\n", "\n", "", "gridx", ",", "gridy", ",", "gridz", "=", "np", ".", "meshgrid", "(", "grid1Dx", "[", "i_x", "[", "0", "]", ":", "i_x", "[", "1", "]", "]", ",", "grid1Dy", "[", "i_y", "[", "0", "]", ":", "i_y", "[", "1", "]", "]", ",", "grid1Dz", "[", "i_z", "[", "0", "]", ":", "i_z", "[", "1", "]", "]", ",", "\n", "indexing", "=", "'ij'", ")", "\n", "g", "=", "np", ".", "exp", "(", "-", "(", "(", "gridx", "-", "mu_x", ")", "**", "2", "+", "(", "gridy", "-", "mu_y", ")", "**", "2", "+", "(", "gridz", "-", "mu_z", ")", "**", "2", ")", "/", "(", "2", "*", "cur_sigma", "**", "2", ")", ")", "\n", "target", "[", "i_x", "[", "0", "]", ":", "i_x", "[", "1", "]", ",", "i_y", "[", "0", "]", ":", "i_y", "[", "1", "]", ",", "i_z", "[", "0", "]", ":", "i_z", "[", "1", "]", "]", "=", "np", ".", "maximum", "(", "\n", "target", "[", "i_x", "[", "0", "]", ":", "i_x", "[", "1", "]", ",", "i_y", "[", "0", "]", ":", "i_y", "[", "1", "]", ",", "i_z", "[", "0", "]", ":", "i_z", "[", "1", "]", "]", ",", "g", ")", "\n", "\n", "", "target", "=", "np", ".", "clip", "(", "target", ",", "0", ",", "1", ")", "\n", "return", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.campus_synthetic.CampusSynthetic.evaluate": [[357, 359], ["None"], "methods", ["None"], ["", "def", "evaluate", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.campus_synthetic.CampusSynthetic.get_new_center": [[360, 369], ["numpy.array", "len", "random.random", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.choice", "numpy.random.normal", "numpy.random.choice", "range", "len"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_new_center", "(", "center_list", ")", ":", "\n", "        ", "if", "len", "(", "center_list", ")", "==", "0", "or", "random", ".", "random", "(", ")", "<", "0.7", ":", "\n", "            ", "new_center", "=", "np", ".", "array", "(", "[", "np", ".", "random", ".", "uniform", "(", "-", "2500.0", ",", "8500.0", ")", ",", "np", ".", "random", ".", "uniform", "(", "-", "1000.0", ",", "10000.0", ")", "]", ")", "\n", "", "else", ":", "\n", "            ", "xy", "=", "center_list", "[", "np", ".", "random", ".", "choice", "(", "range", "(", "len", "(", "center_list", ")", ")", ")", "]", "\n", "new_center", "=", "xy", "+", "np", ".", "random", ".", "normal", "(", "500", ",", "50", ",", "2", ")", "*", "np", ".", "random", ".", "choice", "(", "[", "1", ",", "-", "1", "]", ",", "2", ")", "\n", "\n", "", "return", "new_center", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.campus_synthetic.CampusSynthetic.isvalid": [[370, 395], ["new_center.reshape", "campus_synthetic.CampusSynthetic.cameras.items", "numpy.array", "numpy.maximum", "numpy.maximum", "numpy.minimum", "numpy.minimum", "numpy.maximum", "utils.cameras_cpu.project_pose", "len", "numpy.hstack", "numpy.max"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.cameras_cpu.project_pose"], ["", "def", "isvalid", "(", "self", ",", "new_center", ",", "bbox", ",", "bbox_list", ")", ":", "\n", "        ", "new_center_us", "=", "new_center", ".", "reshape", "(", "1", ",", "-", "1", ")", "\n", "vis", "=", "0", "\n", "for", "k", ",", "cam", "in", "self", ".", "cameras", ".", "items", "(", ")", ":", "\n", "            ", "width", "=", "360", "\n", "height", "=", "288", "\n", "loc_2d", "=", "project_pose", "(", "np", ".", "hstack", "(", "(", "new_center_us", ",", "[", "[", "1000.0", "]", "]", ")", ")", ",", "cam", ")", "\n", "if", "10", "<", "loc_2d", "[", "0", ",", "0", "]", "<", "width", "-", "10", "and", "10", "<", "loc_2d", "[", "0", ",", "1", "]", "<", "height", "-", "10", ":", "\n", "                ", "vis", "+=", "1", "\n", "\n", "", "", "if", "len", "(", "bbox_list", ")", "==", "0", ":", "\n", "            ", "return", "vis", ">=", "2", "\n", "\n", "", "bbox_list", "=", "np", ".", "array", "(", "bbox_list", ")", "\n", "x0", "=", "np", ".", "maximum", "(", "bbox", "[", "0", "]", ",", "bbox_list", "[", ":", ",", "0", "]", ")", "\n", "y0", "=", "np", ".", "maximum", "(", "bbox", "[", "1", "]", ",", "bbox_list", "[", ":", ",", "1", "]", ")", "\n", "x1", "=", "np", ".", "minimum", "(", "bbox", "[", "2", "]", ",", "bbox_list", "[", ":", ",", "2", "]", ")", "\n", "y1", "=", "np", ".", "minimum", "(", "bbox", "[", "3", "]", ",", "bbox_list", "[", ":", ",", "3", "]", ")", "\n", "\n", "intersection", "=", "np", ".", "maximum", "(", "0", ",", "(", "x1", "-", "x0", ")", "*", "(", "y1", "-", "y0", ")", ")", "\n", "area", "=", "(", "bbox", "[", "2", "]", "-", "bbox", "[", "0", "]", ")", "*", "(", "bbox", "[", "3", "]", "-", "bbox", "[", "1", "]", ")", "\n", "area_list", "=", "(", "bbox_list", "[", ":", ",", "2", "]", "-", "bbox_list", "[", ":", ",", "0", "]", ")", "*", "(", "bbox_list", "[", ":", ",", "3", "]", "-", "bbox_list", "[", ":", ",", "1", "]", ")", "\n", "iou_list", "=", "intersection", "/", "(", "area", "+", "area_list", "-", "intersection", ")", "\n", "\n", "return", "vis", ">=", "2", "and", "np", ".", "max", "(", "iou_list", ")", "<", "0.01", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.campus_synthetic.CampusSynthetic.calc_bbox": [[396, 403], ["numpy.array", "numpy.min", "numpy.min", "numpy.max", "numpy.max"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "calc_bbox", "(", "pose", ",", "pose_vis", ")", ":", "\n", "        ", "index", "=", "pose_vis", "[", ":", ",", "0", "]", ">", "0", "\n", "bbox", "=", "[", "np", ".", "min", "(", "pose", "[", "index", ",", "0", "]", ")", ",", "np", ".", "min", "(", "pose", "[", "index", ",", "1", "]", ")", ",", "\n", "np", ".", "max", "(", "pose", "[", "index", ",", "0", "]", ")", ",", "np", ".", "max", "(", "pose", "[", "index", ",", "1", "]", ")", "]", "\n", "\n", "return", "np", ".", "array", "(", "bbox", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.JointsDataset.JointsDataset.__init__": [[23, 62], ["os.path.dirname", "os.path.join", "os.path.abspath", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ",", "image_set", ",", "is_train", ",", "transform", "=", "None", ")", ":", "\n", "        ", "self", ".", "cfg", "=", "cfg", "\n", "self", ".", "num_joints", "=", "0", "\n", "self", ".", "pixel_std", "=", "200", "\n", "self", ".", "flip_pairs", "=", "[", "]", "\n", "self", ".", "maximum_person", "=", "cfg", ".", "MULTI_PERSON", ".", "MAX_PEOPLE_NUM", "\n", "\n", "self", ".", "is_train", "=", "is_train", "\n", "\n", "this_dir", "=", "os", ".", "path", ".", "dirname", "(", "__file__", ")", "\n", "dataset_root", "=", "os", ".", "path", ".", "join", "(", "this_dir", ",", "'../..'", ",", "cfg", ".", "DATASET", ".", "ROOT", ")", "\n", "self", ".", "dataset_root", "=", "os", ".", "path", ".", "abspath", "(", "dataset_root", ")", "\n", "self", ".", "root_id", "=", "cfg", ".", "DATASET", ".", "ROOTIDX", "\n", "self", ".", "image_set", "=", "image_set", "\n", "self", ".", "dataset_name", "=", "cfg", ".", "DATASET", ".", "TEST_DATASET", "\n", "\n", "self", ".", "data_format", "=", "cfg", ".", "DATASET", ".", "DATA_FORMAT", "\n", "self", ".", "data_augmentation", "=", "cfg", ".", "DATASET", ".", "DATA_AUGMENTATION", "\n", "\n", "self", ".", "num_views", "=", "cfg", ".", "DATASET", ".", "CAMERA_NUM", "\n", "\n", "self", ".", "scale_factor", "=", "cfg", ".", "DATASET", ".", "SCALE_FACTOR", "\n", "self", ".", "rotation_factor", "=", "cfg", ".", "DATASET", ".", "ROT_FACTOR", "\n", "self", ".", "flip", "=", "cfg", ".", "DATASET", ".", "FLIP", "\n", "self", ".", "color_rgb", "=", "cfg", ".", "DATASET", ".", "COLOR_RGB", "\n", "\n", "self", ".", "target_type", "=", "cfg", ".", "NETWORK", ".", "TARGET_TYPE", "\n", "self", ".", "image_size", "=", "np", ".", "array", "(", "cfg", ".", "NETWORK", ".", "IMAGE_SIZE", ")", "\n", "self", ".", "heatmap_size", "=", "np", ".", "array", "(", "cfg", ".", "NETWORK", ".", "HEATMAP_SIZE", ")", "\n", "self", ".", "sigma", "=", "cfg", ".", "NETWORK", ".", "SIGMA", "\n", "self", ".", "use_different_joints_weight", "=", "cfg", ".", "LOSS", ".", "USE_DIFFERENT_JOINTS_WEIGHT", "\n", "self", ".", "joints_weight", "=", "1", "\n", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "db", "=", "[", "]", "\n", "\n", "self", ".", "space_size", "=", "np", ".", "array", "(", "cfg", ".", "MULTI_PERSON", ".", "SPACE_SIZE", ")", "\n", "self", ".", "space_center", "=", "np", ".", "array", "(", "cfg", ".", "MULTI_PERSON", ".", "SPACE_CENTER", ")", "\n", "self", ".", "initial_cube_size", "=", "np", ".", "array", "(", "cfg", ".", "MULTI_PERSON", ".", "INITIAL_CUBE_SIZE", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.JointsDataset.JointsDataset._get_db": [[64, 66], ["None"], "methods", ["None"], ["", "def", "_get_db", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.JointsDataset.JointsDataset.evaluate": [[67, 69], ["None"], "methods", ["None"], ["", "def", "evaluate", "(", "self", ",", "cfg", ",", "preds", ",", "output_dir", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.JointsDataset.JointsDataset.__len__": [[70, 72], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ",", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "db", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.JointsDataset.JointsDataset.__getitem__": [[73, 180], ["copy.deepcopy", "len", "numpy.array", "utils.transforms.get_scale", "utils.transforms.get_affine_transform", "cv2.warpAffine", "range", "JointsDataset.JointsDataset.generate_target_heatmap", "torch.from_numpy", "torch.from_numpy", "numpy.zeros", "numpy.zeros", "range", "numpy.zeros", "numpy.zeros", "range", "JointsDataset.JointsDataset.generate_3d_target", "torch.from_numpy", "isinstance", "zipreader.imread", "cv2.imread", "cv2.cvtColor", "JointsDataset.JointsDataset.transform", "range", "range", "JointsDataset.JointsDataset.generate_input_heatmap", "torch.from_numpy", "torch.zeros", "isinstance", "int", "int", "len", "len", "range", "numpy.mean", "utils.transforms.affine_transform", "len", "utils.transforms.affine_transform", "numpy.min"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.get_scale", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.get_affine_transform", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.JointsDataset.JointsDataset.generate_target_heatmap", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf_synthetic.ShelfSynthetic.generate_3d_target", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.zipreader.imread", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.zipreader.imread", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf_synthetic.ShelfSynthetic.generate_input_heatmap", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.affine_transform", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.affine_transform"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "db_rec", "=", "copy", ".", "deepcopy", "(", "self", ".", "db", "[", "idx", "]", ")", "\n", "\n", "image_file", "=", "db_rec", "[", "'image'", "]", "\n", "\n", "if", "self", ".", "data_format", "==", "'zip'", ":", "\n", "            ", "from", "utils", "import", "zipreader", "\n", "data_numpy", "=", "zipreader", ".", "imread", "(", "\n", "image_file", ",", "cv2", ".", "IMREAD_COLOR", "|", "cv2", ".", "IMREAD_IGNORE_ORIENTATION", ")", "\n", "", "else", ":", "\n", "            ", "data_numpy", "=", "cv2", ".", "imread", "(", "\n", "image_file", ",", "cv2", ".", "IMREAD_COLOR", "|", "cv2", ".", "IMREAD_IGNORE_ORIENTATION", ")", "\n", "\n", "", "if", "data_numpy", "is", "None", ":", "\n", "# logger.error('=> fail to read {}'.format(image_file))", "\n", "# raise ValueError('Fail to read {}'.format(image_file))", "\n", "            ", "return", "None", ",", "None", ",", "None", ",", "None", ",", "None", ",", "None", "\n", "\n", "", "if", "self", ".", "color_rgb", ":", "\n", "            ", "data_numpy", "=", "cv2", ".", "cvtColor", "(", "data_numpy", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "\n", "", "joints", "=", "db_rec", "[", "'joints_2d'", "]", "\n", "joints_vis", "=", "db_rec", "[", "'joints_2d_vis'", "]", "\n", "joints_3d", "=", "db_rec", "[", "'joints_3d'", "]", "\n", "joints_3d_vis", "=", "db_rec", "[", "'joints_3d_vis'", "]", "\n", "\n", "nposes", "=", "len", "(", "joints", ")", "\n", "assert", "nposes", "<=", "self", ".", "maximum_person", ",", "'too many persons'", "\n", "\n", "height", ",", "width", ",", "_", "=", "data_numpy", ".", "shape", "\n", "c", "=", "np", ".", "array", "(", "[", "width", "/", "2.0", ",", "height", "/", "2.0", "]", ")", "\n", "s", "=", "get_scale", "(", "(", "width", ",", "height", ")", ",", "self", ".", "image_size", ")", "\n", "r", "=", "0", "\n", "\n", "trans", "=", "get_affine_transform", "(", "c", ",", "s", ",", "r", ",", "self", ".", "image_size", ")", "\n", "input", "=", "cv2", ".", "warpAffine", "(", "\n", "data_numpy", ",", "\n", "trans", ",", "(", "int", "(", "self", ".", "image_size", "[", "0", "]", ")", ",", "int", "(", "self", ".", "image_size", "[", "1", "]", ")", ")", ",", "\n", "flags", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "\n", "if", "self", ".", "transform", ":", "\n", "            ", "input", "=", "self", ".", "transform", "(", "input", ")", "\n", "\n", "", "for", "n", "in", "range", "(", "nposes", ")", ":", "\n", "            ", "for", "i", "in", "range", "(", "len", "(", "joints", "[", "0", "]", ")", ")", ":", "\n", "                ", "if", "joints_vis", "[", "n", "]", "[", "i", ",", "0", "]", ">", "0.0", ":", "\n", "                    ", "joints", "[", "n", "]", "[", "i", ",", "0", ":", "2", "]", "=", "affine_transform", "(", "\n", "joints", "[", "n", "]", "[", "i", ",", "0", ":", "2", "]", ",", "trans", ")", "\n", "if", "(", "np", ".", "min", "(", "joints", "[", "n", "]", "[", "i", ",", ":", "2", "]", ")", "<", "0", "or", "\n", "joints", "[", "n", "]", "[", "i", ",", "0", "]", ">=", "self", ".", "image_size", "[", "0", "]", "or", "\n", "joints", "[", "n", "]", "[", "i", ",", "1", "]", ">=", "self", ".", "image_size", "[", "1", "]", ")", ":", "\n", "                        ", "joints_vis", "[", "n", "]", "[", "i", ",", ":", "]", "=", "0", "\n", "\n", "", "", "", "", "if", "'pred_pose2d'", "in", "db_rec", "and", "db_rec", "[", "'pred_pose2d'", "]", "!=", "None", ":", "\n", "# For convenience, we use predicted poses and corresponding values at the original heatmaps", "\n", "# to generate 2d heatmaps for Campus and Shelf dataset.", "\n", "# You can also use other 2d backbone trained on COCO to generate 2d heatmaps directly.", "\n", "            ", "pred_pose2d", "=", "db_rec", "[", "'pred_pose2d'", "]", "\n", "for", "n", "in", "range", "(", "len", "(", "pred_pose2d", ")", ")", ":", "\n", "                ", "for", "i", "in", "range", "(", "len", "(", "pred_pose2d", "[", "n", "]", ")", ")", ":", "\n", "                    ", "pred_pose2d", "[", "n", "]", "[", "i", ",", "0", ":", "2", "]", "=", "affine_transform", "(", "pred_pose2d", "[", "n", "]", "[", "i", ",", "0", ":", "2", "]", ",", "trans", ")", "\n", "\n", "", "", "input_heatmap", "=", "self", ".", "generate_input_heatmap", "(", "pred_pose2d", ")", "\n", "input_heatmap", "=", "torch", ".", "from_numpy", "(", "input_heatmap", ")", "\n", "", "else", ":", "\n", "            ", "input_heatmap", "=", "torch", ".", "zeros", "(", "self", ".", "cfg", ".", "NETWORK", ".", "NUM_JOINTS", ",", "self", ".", "heatmap_size", "[", "1", "]", ",", "self", ".", "heatmap_size", "[", "0", "]", ")", "\n", "\n", "", "target_heatmap", ",", "target_weight", "=", "self", ".", "generate_target_heatmap", "(", "\n", "joints", ",", "joints_vis", ")", "\n", "target_heatmap", "=", "torch", ".", "from_numpy", "(", "target_heatmap", ")", "\n", "target_weight", "=", "torch", ".", "from_numpy", "(", "target_weight", ")", "\n", "\n", "# make joints and joints_vis having same shape", "\n", "joints_u", "=", "np", ".", "zeros", "(", "(", "self", ".", "maximum_person", ",", "self", ".", "num_joints", ",", "2", ")", ")", "\n", "joints_vis_u", "=", "np", ".", "zeros", "(", "(", "self", ".", "maximum_person", ",", "self", ".", "num_joints", ",", "2", ")", ")", "\n", "for", "i", "in", "range", "(", "nposes", ")", ":", "\n", "            ", "joints_u", "[", "i", "]", "=", "joints", "[", "i", "]", "\n", "joints_vis_u", "[", "i", "]", "=", "joints_vis", "[", "i", "]", "\n", "\n", "", "joints_3d_u", "=", "np", ".", "zeros", "(", "(", "self", ".", "maximum_person", ",", "self", ".", "num_joints", ",", "3", ")", ")", "\n", "joints_3d_vis_u", "=", "np", ".", "zeros", "(", "(", "self", ".", "maximum_person", ",", "self", ".", "num_joints", ",", "3", ")", ")", "\n", "for", "i", "in", "range", "(", "nposes", ")", ":", "\n", "            ", "joints_3d_u", "[", "i", "]", "=", "joints_3d", "[", "i", "]", "[", ":", ",", "0", ":", "3", "]", "\n", "joints_3d_vis_u", "[", "i", "]", "=", "joints_3d_vis", "[", "i", "]", "[", ":", ",", "0", ":", "3", "]", "\n", "\n", "", "target_3d", "=", "self", ".", "generate_3d_target", "(", "joints_3d", ")", "\n", "target_3d", "=", "torch", ".", "from_numpy", "(", "target_3d", ")", "\n", "\n", "if", "isinstance", "(", "self", ".", "root_id", ",", "int", ")", ":", "\n", "            ", "roots_3d", "=", "joints_3d_u", "[", ":", ",", "self", ".", "root_id", "]", "\n", "", "elif", "isinstance", "(", "self", ".", "root_id", ",", "list", ")", ":", "\n", "            ", "roots_3d", "=", "np", ".", "mean", "(", "[", "joints_3d_u", "[", ":", ",", "j", "]", "for", "j", "in", "self", ".", "root_id", "]", ",", "axis", "=", "0", ")", "\n", "", "meta", "=", "{", "\n", "'image'", ":", "image_file", ",", "\n", "'num_person'", ":", "nposes", ",", "\n", "'joints_3d'", ":", "joints_3d_u", ",", "\n", "'joints_3d_vis'", ":", "joints_3d_vis_u", ",", "\n", "'roots_3d'", ":", "roots_3d", ",", "\n", "'joints'", ":", "joints_u", ",", "\n", "'joints_vis'", ":", "joints_vis_u", ",", "\n", "'center'", ":", "c", ",", "\n", "'scale'", ":", "s", ",", "\n", "'rotation'", ":", "r", ",", "\n", "'camera'", ":", "db_rec", "[", "'camera'", "]", "\n", "}", "\n", "\n", "return", "input", ",", "target_heatmap", ",", "target_weight", ",", "target_3d", ",", "meta", ",", "input_heatmap", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.JointsDataset.JointsDataset.compute_human_scale": [[181, 190], ["numpy.clip", "numpy.sum", "numpy.min", "numpy.max", "numpy.min", "numpy.max", "numpy.maximum"], "methods", ["None"], ["", "def", "compute_human_scale", "(", "self", ",", "pose", ",", "joints_vis", ")", ":", "\n", "        ", "idx", "=", "joints_vis", "[", ":", ",", "0", "]", "==", "1", "\n", "if", "np", ".", "sum", "(", "idx", ")", "==", "0", ":", "\n", "            ", "return", "0", "\n", "", "minx", ",", "maxx", "=", "np", ".", "min", "(", "pose", "[", "idx", ",", "0", "]", ")", ",", "np", ".", "max", "(", "pose", "[", "idx", ",", "0", "]", ")", "\n", "miny", ",", "maxy", "=", "np", ".", "min", "(", "pose", "[", "idx", ",", "1", "]", ")", ",", "np", ".", "max", "(", "pose", "[", "idx", ",", "1", "]", ")", "\n", "# return np.clip((maxy - miny) * (maxx - minx), 1.0 / 4 * 256**2,", "\n", "#                4 * 256**2)", "\n", "return", "np", ".", "clip", "(", "np", ".", "maximum", "(", "maxy", "-", "miny", ",", "maxx", "-", "minx", ")", "**", "2", ",", "1.0", "/", "4", "*", "96", "**", "2", ",", "4", "*", "96", "**", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.JointsDataset.JointsDataset.generate_target_heatmap": [[191, 257], ["len", "numpy.zeros", "range", "range", "numpy.zeros", "range", "numpy.multiply", "range", "numpy.clip", "JointsDataset.JointsDataset.compute_human_scale", "numpy.sqrt", "int", "int", "numpy.arange", "numpy.exp", "numpy.maximum", "int", "int", "int", "int", "max", "max", "max", "min", "max", "min", "min", "min"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf_synthetic.ShelfSynthetic.compute_human_scale"], ["", "def", "generate_target_heatmap", "(", "self", ",", "joints", ",", "joints_vis", ")", ":", "\n", "        ", "'''\n        :param joints:  [[num_joints, 3]]\n        :param joints_vis: [num_joints, 3]\n        :return: target, target_weight(1: visible, 0: invisible)\n        '''", "\n", "nposes", "=", "len", "(", "joints", ")", "\n", "num_joints", "=", "self", ".", "num_joints", "\n", "target_weight", "=", "np", ".", "zeros", "(", "(", "num_joints", ",", "1", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "i", "in", "range", "(", "num_joints", ")", ":", "\n", "            ", "for", "n", "in", "range", "(", "nposes", ")", ":", "\n", "                ", "if", "joints_vis", "[", "n", "]", "[", "i", ",", "0", "]", "==", "1", ":", "\n", "                    ", "target_weight", "[", "i", ",", "0", "]", "=", "1", "\n", "\n", "", "", "", "assert", "self", ".", "target_type", "==", "'gaussian'", ",", "'Only support gaussian map now!'", "\n", "\n", "if", "self", ".", "target_type", "==", "'gaussian'", ":", "\n", "            ", "target", "=", "np", ".", "zeros", "(", "\n", "(", "num_joints", ",", "self", ".", "heatmap_size", "[", "1", "]", ",", "self", ".", "heatmap_size", "[", "0", "]", ")", ",", "\n", "dtype", "=", "np", ".", "float32", ")", "\n", "feat_stride", "=", "self", ".", "image_size", "/", "self", ".", "heatmap_size", "\n", "\n", "for", "n", "in", "range", "(", "nposes", ")", ":", "\n", "                ", "human_scale", "=", "2", "*", "self", ".", "compute_human_scale", "(", "joints", "[", "n", "]", "/", "feat_stride", ",", "joints_vis", "[", "n", "]", ")", "\n", "if", "human_scale", "==", "0", ":", "\n", "                    ", "continue", "\n", "\n", "", "cur_sigma", "=", "self", ".", "sigma", "*", "np", ".", "sqrt", "(", "(", "human_scale", "/", "(", "96.0", "*", "96.0", ")", ")", ")", "\n", "tmp_size", "=", "cur_sigma", "*", "3", "\n", "for", "joint_id", "in", "range", "(", "num_joints", ")", ":", "\n", "                    ", "feat_stride", "=", "self", ".", "image_size", "/", "self", ".", "heatmap_size", "\n", "mu_x", "=", "int", "(", "joints", "[", "n", "]", "[", "joint_id", "]", "[", "0", "]", "/", "feat_stride", "[", "0", "]", ")", "\n", "mu_y", "=", "int", "(", "joints", "[", "n", "]", "[", "joint_id", "]", "[", "1", "]", "/", "feat_stride", "[", "1", "]", ")", "\n", "ul", "=", "[", "int", "(", "mu_x", "-", "tmp_size", ")", ",", "int", "(", "mu_y", "-", "tmp_size", ")", "]", "\n", "br", "=", "[", "int", "(", "mu_x", "+", "tmp_size", "+", "1", ")", ",", "int", "(", "mu_y", "+", "tmp_size", "+", "1", ")", "]", "\n", "if", "joints_vis", "[", "n", "]", "[", "joint_id", ",", "0", "]", "==", "0", "or", "ul", "[", "0", "]", ">=", "self", ".", "heatmap_size", "[", "0", "]", "or", "ul", "[", "1", "]", ">=", "self", ".", "heatmap_size", "[", "1", "]", "or", "br", "[", "0", "]", "<", "0", "or", "br", "[", "1", "]", "<", "0", ":", "\n", "                        ", "continue", "\n", "\n", "", "size", "=", "2", "*", "tmp_size", "+", "1", "\n", "x", "=", "np", ".", "arange", "(", "0", ",", "size", ",", "1", ",", "np", ".", "float32", ")", "\n", "y", "=", "x", "[", ":", ",", "np", ".", "newaxis", "]", "\n", "x0", "=", "y0", "=", "size", "//", "2", "\n", "g", "=", "np", ".", "exp", "(", "\n", "-", "(", "(", "x", "-", "x0", ")", "**", "2", "+", "(", "y", "-", "y0", ")", "**", "2", ")", "/", "(", "2", "*", "cur_sigma", "**", "2", ")", ")", "\n", "\n", "# Usable gaussian range", "\n", "g_x", "=", "max", "(", "0", ",", "\n", "-", "ul", "[", "0", "]", ")", ",", "min", "(", "br", "[", "0", "]", ",", "self", ".", "heatmap_size", "[", "0", "]", ")", "-", "ul", "[", "0", "]", "\n", "g_y", "=", "max", "(", "0", ",", "\n", "-", "ul", "[", "1", "]", ")", ",", "min", "(", "br", "[", "1", "]", ",", "self", ".", "heatmap_size", "[", "1", "]", ")", "-", "ul", "[", "1", "]", "\n", "# Image range", "\n", "img_x", "=", "max", "(", "0", ",", "ul", "[", "0", "]", ")", ",", "min", "(", "br", "[", "0", "]", ",", "self", ".", "heatmap_size", "[", "0", "]", ")", "\n", "img_y", "=", "max", "(", "0", ",", "ul", "[", "1", "]", ")", ",", "min", "(", "br", "[", "1", "]", ",", "self", ".", "heatmap_size", "[", "1", "]", ")", "\n", "\n", "target", "[", "joint_id", "]", "[", "img_y", "[", "0", "]", ":", "img_y", "[", "1", "]", ",", "img_x", "[", "0", "]", ":", "img_x", "[", "1", "]", "]", "=", "np", ".", "maximum", "(", "target", "[", "joint_id", "]", "[", "img_y", "[", "0", "]", ":", "img_y", "[", "1", "]", ",", "img_x", "[", "0", "]", ":", "img_x", "[", "1", "]", "]", ",", "\n", "g", "[", "g_y", "[", "0", "]", ":", "g_y", "[", "1", "]", ",", "g_x", "[", "0", "]", ":", "g_x", "[", "1", "]", "]", ")", "\n", "", "target", "=", "np", ".", "clip", "(", "target", ",", "0", ",", "1", ")", "\n", "\n", "", "", "if", "self", ".", "use_different_joints_weight", ":", "\n", "            ", "target_weight", "=", "np", ".", "multiply", "(", "target_weight", ",", "self", ".", "joints_weight", ")", "\n", "\n", "", "return", "target", ",", "target_weight", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.JointsDataset.JointsDataset.generate_3d_target": [[258, 296], ["len", "numpy.zeros", "range", "numpy.clip", "numpy.linspace", "numpy.linspace", "numpy.linspace", "isinstance", "numpy.meshgrid", "numpy.exp", "numpy.maximum", "isinstance", "numpy.searchsorted", "numpy.searchsorted", "numpy.searchsorted", "numpy.searchsorted", "numpy.searchsorted", "numpy.searchsorted"], "methods", ["None"], ["", "def", "generate_3d_target", "(", "self", ",", "joints_3d", ")", ":", "\n", "        ", "num_people", "=", "len", "(", "joints_3d", ")", "\n", "\n", "space_size", "=", "self", ".", "space_size", "\n", "space_center", "=", "self", ".", "space_center", "\n", "cube_size", "=", "self", ".", "initial_cube_size", "\n", "grid1Dx", "=", "np", ".", "linspace", "(", "-", "space_size", "[", "0", "]", "/", "2", ",", "space_size", "[", "0", "]", "/", "2", ",", "cube_size", "[", "0", "]", ")", "+", "space_center", "[", "0", "]", "\n", "grid1Dy", "=", "np", ".", "linspace", "(", "-", "space_size", "[", "1", "]", "/", "2", ",", "space_size", "[", "1", "]", "/", "2", ",", "cube_size", "[", "1", "]", ")", "+", "space_center", "[", "1", "]", "\n", "grid1Dz", "=", "np", ".", "linspace", "(", "-", "space_size", "[", "2", "]", "/", "2", ",", "space_size", "[", "2", "]", "/", "2", ",", "cube_size", "[", "2", "]", ")", "+", "space_center", "[", "2", "]", "\n", "\n", "target", "=", "np", ".", "zeros", "(", "(", "cube_size", "[", "0", "]", ",", "cube_size", "[", "1", "]", ",", "cube_size", "[", "2", "]", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "cur_sigma", "=", "200.0", "\n", "\n", "for", "n", "in", "range", "(", "num_people", ")", ":", "\n", "            ", "joint_id", "=", "self", ".", "root_id", "# mid-hip", "\n", "if", "isinstance", "(", "joint_id", ",", "int", ")", ":", "\n", "                ", "mu_x", "=", "joints_3d", "[", "n", "]", "[", "joint_id", "]", "[", "0", "]", "\n", "mu_y", "=", "joints_3d", "[", "n", "]", "[", "joint_id", "]", "[", "1", "]", "\n", "mu_z", "=", "joints_3d", "[", "n", "]", "[", "joint_id", "]", "[", "2", "]", "\n", "", "elif", "isinstance", "(", "joint_id", ",", "list", ")", ":", "\n", "                ", "mu_x", "=", "(", "joints_3d", "[", "n", "]", "[", "joint_id", "[", "0", "]", "]", "[", "0", "]", "+", "joints_3d", "[", "n", "]", "[", "joint_id", "[", "1", "]", "]", "[", "0", "]", ")", "/", "2.0", "\n", "mu_y", "=", "(", "joints_3d", "[", "n", "]", "[", "joint_id", "[", "0", "]", "]", "[", "1", "]", "+", "joints_3d", "[", "n", "]", "[", "joint_id", "[", "1", "]", "]", "[", "1", "]", ")", "/", "2.0", "\n", "mu_z", "=", "(", "joints_3d", "[", "n", "]", "[", "joint_id", "[", "0", "]", "]", "[", "2", "]", "+", "joints_3d", "[", "n", "]", "[", "joint_id", "[", "1", "]", "]", "[", "2", "]", ")", "/", "2.0", "\n", "", "i_x", "=", "[", "np", ".", "searchsorted", "(", "grid1Dx", ",", "mu_x", "-", "3", "*", "cur_sigma", ")", ",", "\n", "np", ".", "searchsorted", "(", "grid1Dx", ",", "mu_x", "+", "3", "*", "cur_sigma", ",", "'right'", ")", "]", "\n", "i_y", "=", "[", "np", ".", "searchsorted", "(", "grid1Dy", ",", "mu_y", "-", "3", "*", "cur_sigma", ")", ",", "\n", "np", ".", "searchsorted", "(", "grid1Dy", ",", "mu_y", "+", "3", "*", "cur_sigma", ",", "'right'", ")", "]", "\n", "i_z", "=", "[", "np", ".", "searchsorted", "(", "grid1Dz", ",", "mu_z", "-", "3", "*", "cur_sigma", ")", ",", "\n", "np", ".", "searchsorted", "(", "grid1Dz", ",", "mu_z", "+", "3", "*", "cur_sigma", ",", "'right'", ")", "]", "\n", "if", "i_x", "[", "0", "]", ">=", "i_x", "[", "1", "]", "or", "i_y", "[", "0", "]", ">=", "i_y", "[", "1", "]", "or", "i_z", "[", "0", "]", ">=", "i_z", "[", "1", "]", ":", "\n", "                ", "continue", "\n", "\n", "", "gridx", ",", "gridy", ",", "gridz", "=", "np", ".", "meshgrid", "(", "grid1Dx", "[", "i_x", "[", "0", "]", ":", "i_x", "[", "1", "]", "]", ",", "grid1Dy", "[", "i_y", "[", "0", "]", ":", "i_y", "[", "1", "]", "]", ",", "grid1Dz", "[", "i_z", "[", "0", "]", ":", "i_z", "[", "1", "]", "]", ",", "indexing", "=", "'ij'", ")", "\n", "g", "=", "np", ".", "exp", "(", "-", "(", "(", "gridx", "-", "mu_x", ")", "**", "2", "+", "(", "gridy", "-", "mu_y", ")", "**", "2", "+", "(", "gridz", "-", "mu_z", ")", "**", "2", ")", "/", "(", "2", "*", "cur_sigma", "**", "2", ")", ")", "\n", "target", "[", "i_x", "[", "0", "]", ":", "i_x", "[", "1", "]", ",", "i_y", "[", "0", "]", ":", "i_y", "[", "1", "]", ",", "i_z", "[", "0", "]", ":", "i_z", "[", "1", "]", "]", "=", "np", ".", "maximum", "(", "target", "[", "i_x", "[", "0", "]", ":", "i_x", "[", "1", "]", ",", "i_y", "[", "0", "]", ":", "i_y", "[", "1", "]", ",", "i_z", "[", "0", "]", ":", "i_z", "[", "1", "]", "]", ",", "g", ")", "\n", "\n", "", "target", "=", "np", ".", "clip", "(", "target", ",", "0", ",", "1", ")", "\n", "return", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.JointsDataset.JointsDataset.generate_input_heatmap": [[297, 359], ["len", "numpy.zeros", "range", "range", "numpy.clip", "JointsDataset.JointsDataset.compute_human_scale", "numpy.sqrt", "int", "int", "numpy.arange", "numpy.maximum", "numpy.ones", "int", "int", "int", "int", "numpy.exp", "max", "max", "max", "min", "max", "min", "min", "min", "len"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf_synthetic.ShelfSynthetic.compute_human_scale"], ["", "def", "generate_input_heatmap", "(", "self", ",", "joints", ")", ":", "\n", "        ", "'''\n        :param joints:  [[num_joints, 3]]\n        :param joints_vis: [num_joints, 3]\n        :return: input_heatmap\n        '''", "\n", "nposes", "=", "len", "(", "joints", ")", "\n", "num_joints", "=", "self", ".", "cfg", ".", "NETWORK", ".", "NUM_JOINTS", "\n", "\n", "assert", "self", ".", "target_type", "==", "'gaussian'", ",", "'Only support gaussian map now!'", "\n", "\n", "if", "self", ".", "target_type", "==", "'gaussian'", ":", "\n", "            ", "target", "=", "np", ".", "zeros", "(", "\n", "(", "num_joints", ",", "self", ".", "heatmap_size", "[", "1", "]", ",", "self", ".", "heatmap_size", "[", "0", "]", ")", ",", "\n", "dtype", "=", "np", ".", "float32", ")", "\n", "feat_stride", "=", "self", ".", "image_size", "/", "self", ".", "heatmap_size", "\n", "\n", "for", "n", "in", "range", "(", "nposes", ")", ":", "\n", "                ", "human_scale", "=", "2", "*", "self", ".", "compute_human_scale", "(", "joints", "[", "n", "]", "[", ":", ",", "0", ":", "2", "]", "/", "feat_stride", ",", "np", ".", "ones", "(", "(", "num_joints", ",", "1", ")", ")", ")", "\n", "if", "human_scale", "==", "0", ":", "\n", "                    ", "continue", "\n", "\n", "", "cur_sigma", "=", "self", ".", "sigma", "*", "np", ".", "sqrt", "(", "(", "human_scale", "/", "(", "96.0", "*", "96.0", ")", ")", ")", "\n", "tmp_size", "=", "cur_sigma", "*", "3", "\n", "for", "joint_id", "in", "range", "(", "num_joints", ")", ":", "\n", "                    ", "feat_stride", "=", "self", ".", "image_size", "/", "self", ".", "heatmap_size", "\n", "mu_x", "=", "int", "(", "joints", "[", "n", "]", "[", "joint_id", "]", "[", "0", "]", "/", "feat_stride", "[", "0", "]", ")", "\n", "mu_y", "=", "int", "(", "joints", "[", "n", "]", "[", "joint_id", "]", "[", "1", "]", "/", "feat_stride", "[", "1", "]", ")", "\n", "ul", "=", "[", "int", "(", "mu_x", "-", "tmp_size", ")", ",", "int", "(", "mu_y", "-", "tmp_size", ")", "]", "\n", "br", "=", "[", "int", "(", "mu_x", "+", "tmp_size", "+", "1", ")", ",", "int", "(", "mu_y", "+", "tmp_size", "+", "1", ")", "]", "\n", "if", "ul", "[", "0", "]", ">=", "self", ".", "heatmap_size", "[", "0", "]", "or", "ul", "[", "1", "]", ">=", "self", ".", "heatmap_size", "[", "1", "]", "or", "br", "[", "0", "]", "<", "0", "or", "br", "[", "1", "]", "<", "0", ":", "\n", "                        ", "continue", "\n", "\n", "", "size", "=", "2", "*", "tmp_size", "+", "1", "\n", "x", "=", "np", ".", "arange", "(", "0", ",", "size", ",", "1", ",", "np", ".", "float32", ")", "\n", "y", "=", "x", "[", ":", ",", "np", ".", "newaxis", "]", "\n", "x0", "=", "y0", "=", "size", "//", "2", "\n", "if", "'campus'", "in", "self", ".", "dataset_name", ":", "\n", "                        ", "max_value", "=", "1.0", "\n", "", "else", ":", "\n", "                        ", "max_value", "=", "joints", "[", "n", "]", "[", "joint_id", "]", "[", "2", "]", "if", "len", "(", "joints", "[", "n", "]", "[", "joint_id", "]", ")", "==", "3", "else", "1.0", "\n", "# max_value = max_value**0.5", "\n", "", "g", "=", "np", ".", "exp", "(", "\n", "-", "(", "(", "x", "-", "x0", ")", "**", "2", "+", "(", "y", "-", "y0", ")", "**", "2", ")", "/", "(", "2", "*", "cur_sigma", "**", "2", ")", ")", "*", "max_value", "\n", "\n", "# Usable gaussian range", "\n", "g_x", "=", "max", "(", "0", ",", "\n", "-", "ul", "[", "0", "]", ")", ",", "min", "(", "br", "[", "0", "]", ",", "self", ".", "heatmap_size", "[", "0", "]", ")", "-", "ul", "[", "0", "]", "\n", "g_y", "=", "max", "(", "0", ",", "\n", "-", "ul", "[", "1", "]", ")", ",", "min", "(", "br", "[", "1", "]", ",", "self", ".", "heatmap_size", "[", "1", "]", ")", "-", "ul", "[", "1", "]", "\n", "# Image range", "\n", "img_x", "=", "max", "(", "0", ",", "ul", "[", "0", "]", ")", ",", "min", "(", "br", "[", "0", "]", ",", "self", ".", "heatmap_size", "[", "0", "]", ")", "\n", "img_y", "=", "max", "(", "0", ",", "ul", "[", "1", "]", ")", ",", "min", "(", "br", "[", "1", "]", ",", "self", ".", "heatmap_size", "[", "1", "]", ")", "\n", "\n", "target", "[", "joint_id", "]", "[", "img_y", "[", "0", "]", ":", "img_y", "[", "1", "]", ",", "img_x", "[", "0", "]", ":", "img_x", "[", "1", "]", "]", "=", "np", ".", "maximum", "(", "target", "[", "joint_id", "]", "[", "img_y", "[", "0", "]", ":", "img_y", "[", "1", "]", ",", "img_x", "[", "0", "]", ":", "img_x", "[", "1", "]", "]", ",", "\n", "g", "[", "g_y", "[", "0", "]", ":", "g_y", "[", "1", "]", ",", "g_x", "[", "0", "]", ":", "g_x", "[", "1", "]", "]", ")", "\n", "", "target", "=", "np", ".", "clip", "(", "target", ",", "0", ",", "1", ")", "\n", "\n", "", "", "return", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf_synthetic.ShelfSynthetic.__init__": [[45, 84], ["torch.utils.data.Dataset.__init__", "len", "len", "os.path.dirname", "os.path.dirname", "os.path.dirname", "os.path.dirname", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "pickle.load", "shelf_synthetic.ShelfSynthetic._get_cam", "open"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.AverageMeter.__init__", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.campus.Campus._get_cam"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ",", "image_set", ",", "is_train", ",", "transform", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pixel_std", "=", "200.0", "\n", "self", ".", "joints_def", "=", "coco_joints_def", "\n", "self", ".", "limbs", "=", "LIMBS", "\n", "self", ".", "num_joints", "=", "len", "(", "coco_joints_def", ")", "\n", "self", ".", "cam_list", "=", "[", "0", ",", "1", ",", "2", ",", "3", ",", "4", "]", "\n", "self", ".", "num_views", "=", "len", "(", "self", ".", "cam_list", ")", "\n", "self", ".", "maximum_person", "=", "cfg", ".", "MULTI_PERSON", ".", "MAX_PEOPLE_NUM", "\n", "\n", "self", ".", "is_train", "=", "is_train", "\n", "\n", "this_dir", "=", "os", ".", "path", ".", "dirname", "(", "__file__", ")", "\n", "dataset_root", "=", "os", ".", "path", ".", "join", "(", "this_dir", ",", "'../..'", ",", "cfg", ".", "DATASET", ".", "ROOT", ")", "\n", "self", ".", "dataset_root", "=", "dataset_root", "\n", "self", ".", "image_set", "=", "image_set", "\n", "self", ".", "dataset_name", "=", "cfg", ".", "DATASET", ".", "TEST_DATASET", "\n", "\n", "self", ".", "data_format", "=", "cfg", ".", "DATASET", ".", "DATA_FORMAT", "\n", "self", ".", "data_augmentation", "=", "cfg", ".", "DATASET", ".", "DATA_AUGMENTATION", "\n", "\n", "self", ".", "color_rgb", "=", "cfg", ".", "DATASET", ".", "COLOR_RGB", "\n", "\n", "self", ".", "target_type", "=", "cfg", ".", "NETWORK", ".", "TARGET_TYPE", "\n", "self", ".", "image_size", "=", "np", ".", "array", "(", "cfg", ".", "NETWORK", ".", "IMAGE_SIZE", ")", "\n", "self", ".", "heatmap_size", "=", "np", ".", "array", "(", "cfg", ".", "NETWORK", ".", "HEATMAP_SIZE", ")", "\n", "self", ".", "sigma", "=", "cfg", ".", "NETWORK", ".", "SIGMA", "\n", "self", ".", "use_different_joints_weight", "=", "cfg", ".", "LOSS", ".", "USE_DIFFERENT_JOINTS_WEIGHT", "\n", "self", ".", "joints_weight", "=", "1", "\n", "\n", "self", ".", "transform", "=", "transform", "\n", "\n", "self", ".", "space_size", "=", "np", ".", "array", "(", "cfg", ".", "MULTI_PERSON", ".", "SPACE_SIZE", ")", "\n", "self", ".", "space_center", "=", "np", ".", "array", "(", "cfg", ".", "MULTI_PERSON", ".", "SPACE_CENTER", ")", "\n", "self", ".", "initial_cube_size", "=", "np", ".", "array", "(", "cfg", ".", "MULTI_PERSON", ".", "INITIAL_CUBE_SIZE", ")", "\n", "\n", "pose_db_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "\"..\"", ",", "\"panoptic_training_pose.pkl\"", ")", "\n", "self", ".", "pose_db", "=", "pickle", ".", "load", "(", "open", "(", "pose_db_file", ",", "\"rb\"", ")", ")", "\n", "self", ".", "cameras", "=", "self", ".", "_get_cam", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf_synthetic.ShelfSynthetic._get_cam": [[85, 95], ["os.join", "os.join", "json_tricks.load.items", "open", "json_tricks.load", "cam.items", "numpy.array"], "methods", ["None"], ["", "def", "_get_cam", "(", "self", ")", ":", "\n", "        ", "cam_file", "=", "osp", ".", "join", "(", "self", ".", "dataset_root", ",", "\"calibration_shelf.json\"", ")", "\n", "with", "open", "(", "cam_file", ")", "as", "cfile", ":", "\n", "            ", "cameras", "=", "json", ".", "load", "(", "cfile", ")", "\n", "\n", "", "for", "id", ",", "cam", "in", "cameras", ".", "items", "(", ")", ":", "\n", "            ", "for", "k", ",", "v", "in", "cam", ".", "items", "(", ")", ":", "\n", "                ", "cameras", "[", "id", "]", "[", "k", "]", "=", "np", ".", "array", "(", "v", ")", "\n", "\n", "", "", "return", "cameras", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf_synthetic.ShelfSynthetic.__getitem__": [[96, 141], ["numpy.random.choice", "numpy.random.choice", "numpy.array", "numpy.array", "range", "shelf_synthetic.ShelfSynthetic.cameras.items", "range", "[].copy", "numpy.random.uniform", "shelf_synthetic.ShelfSynthetic.get_new_center", "shelf_synthetic.ShelfSynthetic._get_single_view_item", "input.append", "target_heatmap.append", "target_weight.append", "input_heatmap.append", "target_3d.append", "meta.append", "shelf_synthetic.ShelfSynthetic.isvalid", "shelf_synthetic.ShelfSynthetic.get_new_center", "center_list.append", "bbox_list.append", "utils.transforms.rotate_points", "shelf_synthetic.ShelfSynthetic.calc_bbox", "shelf_synthetic.ShelfSynthetic.calc_bbox", "utils.transforms.rotate_points"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf_synthetic.ShelfSynthetic.get_new_center", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf_synthetic.ShelfSynthetic._get_single_view_item", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf_synthetic.ShelfSynthetic.isvalid", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf_synthetic.ShelfSynthetic.get_new_center", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.rotate_points", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf_synthetic.ShelfSynthetic.calc_bbox", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf_synthetic.ShelfSynthetic.calc_bbox", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.rotate_points"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "# nposes = np.random.choice([1, 2, 3, 4, 5], p=[0.1, 0.1, 0.2, 0.4, 0.2])", "\n", "        ", "nposes", "=", "np", ".", "random", ".", "choice", "(", "range", "(", "1", ",", "6", ")", ")", "\n", "bbox_list", "=", "[", "]", "\n", "center_list", "=", "[", "]", "\n", "\n", "select_poses", "=", "np", ".", "random", ".", "choice", "(", "self", ".", "pose_db", ",", "nposes", ")", "\n", "joints_3d", "=", "np", ".", "array", "(", "[", "p", "[", "'pose'", "]", "for", "p", "in", "select_poses", "]", ")", "\n", "joints_3d_vis", "=", "np", ".", "array", "(", "[", "p", "[", "'vis'", "]", "for", "p", "in", "select_poses", "]", ")", "\n", "\n", "for", "n", "in", "range", "(", "0", ",", "nposes", ")", ":", "\n", "            ", "points", "=", "joints_3d", "[", "n", "]", "[", ":", ",", ":", "2", "]", ".", "copy", "(", ")", "\n", "center", "=", "(", "points", "[", "11", ",", ":", "2", "]", "+", "points", "[", "12", ",", ":", "2", "]", ")", "/", "2", "\n", "rot_rad", "=", "np", ".", "random", ".", "uniform", "(", "-", "180", ",", "180", ")", "\n", "\n", "new_center", "=", "self", ".", "get_new_center", "(", "center_list", ")", "\n", "new_xy", "=", "rotate_points", "(", "points", ",", "center", ",", "rot_rad", ")", "-", "center", "+", "new_center", "\n", "\n", "loop_count", "=", "0", "\n", "while", "not", "self", ".", "isvalid", "(", "self", ".", "calc_bbox", "(", "new_xy", ",", "joints_3d_vis", "[", "n", "]", ")", ",", "bbox_list", ")", ":", "\n", "                ", "loop_count", "+=", "1", "\n", "if", "loop_count", ">=", "100", ":", "\n", "                    ", "break", "\n", "", "new_center", "=", "self", ".", "get_new_center", "(", "center_list", ")", "\n", "new_xy", "=", "rotate_points", "(", "points", ",", "center", ",", "rot_rad", ")", "-", "center", "+", "new_center", "\n", "\n", "", "if", "loop_count", ">=", "100", ":", "\n", "                ", "nposes", "=", "n", "\n", "joints_3d", "=", "joints_3d", "[", ":", "n", "]", "\n", "joints_3d_vis", "=", "joints_3d_vis", "[", ":", "n", "]", "\n", "", "else", ":", "\n", "                ", "center_list", ".", "append", "(", "new_center", ")", "\n", "bbox_list", ".", "append", "(", "self", ".", "calc_bbox", "(", "new_xy", ",", "joints_3d_vis", "[", "n", "]", ")", ")", "\n", "joints_3d", "[", "n", "]", "[", ":", ",", ":", "2", "]", "=", "new_xy", "\n", "\n", "", "", "input", ",", "target_heatmap", ",", "target_weight", ",", "target_3d", ",", "meta", ",", "input_heatmap", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "k", ",", "cam", "in", "self", ".", "cameras", ".", "items", "(", ")", ":", "\n", "            ", "i", ",", "th", ",", "tw", ",", "t3", ",", "m", ",", "ih", "=", "self", ".", "_get_single_view_item", "(", "joints_3d", ",", "joints_3d_vis", ",", "cam", ")", "\n", "input", ".", "append", "(", "i", ")", "\n", "target_heatmap", ".", "append", "(", "th", ")", "\n", "target_weight", ".", "append", "(", "tw", ")", "\n", "input_heatmap", ".", "append", "(", "ih", ")", "\n", "target_3d", ".", "append", "(", "t3", ")", "\n", "meta", ".", "append", "(", "m", ")", "\n", "", "return", "input", ",", "target_heatmap", ",", "target_weight", ",", "target_3d", ",", "meta", ",", "input_heatmap", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf_synthetic.ShelfSynthetic.__len__": [[142, 144], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "3000", "\n", "# return self.db_size // self.num_views", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf_synthetic.ShelfSynthetic._get_single_view_item": [[146, 232], ["copy.deepcopy", "copy.deepcopy", "len", "numpy.array", "utils.transforms.get_scale", "range", "utils.transforms.get_affine_transform", "numpy.ones", "cv2.warpAffine", "range", "shelf_synthetic.ShelfSynthetic.generate_input_heatmap", "torch.from_numpy", "torch.zeros_like", "torch.zeros", "numpy.zeros", "numpy.zeros", "range", "numpy.zeros", "numpy.zeros", "range", "shelf_synthetic.ShelfSynthetic.generate_3d_target", "torch.from_numpy", "utils.cameras_cpu.project_pose", "numpy.bitwise_and", "numpy.bitwise_and", "numpy.bitwise_and", "joints.append", "joints_vis.append", "shelf_synthetic.ShelfSynthetic.transform", "range", "len", "numpy.repeat", "int", "int", "len", "len", "len", "len", "len", "numpy.logical_not", "numpy.reshape", "utils.transforms.affine_transform", "numpy.min"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.get_scale", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.get_affine_transform", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf_synthetic.ShelfSynthetic.generate_input_heatmap", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf_synthetic.ShelfSynthetic.generate_3d_target", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.cameras_cpu.project_pose", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.affine_transform"], ["", "def", "_get_single_view_item", "(", "self", ",", "joints_3d", ",", "joints_3d_vis", ",", "cam", ")", ":", "\n", "        ", "joints_3d", "=", "copy", ".", "deepcopy", "(", "joints_3d", ")", "\n", "joints_3d_vis", "=", "copy", ".", "deepcopy", "(", "joints_3d_vis", ")", "\n", "nposes", "=", "len", "(", "joints_3d", ")", "\n", "\n", "width", "=", "1032", "\n", "height", "=", "776", "\n", "c", "=", "np", ".", "array", "(", "[", "width", "/", "2.0", ",", "height", "/", "2.0", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "# s = np.array(", "\n", "#     [width / self.pixel_std, height / self.pixel_std], dtype=np.float32)", "\n", "s", "=", "get_scale", "(", "(", "width", ",", "height", ")", ",", "self", ".", "image_size", ")", "\n", "r", "=", "0", "\n", "\n", "joints", "=", "[", "]", "\n", "joints_vis", "=", "[", "]", "\n", "for", "n", "in", "range", "(", "nposes", ")", ":", "\n", "            ", "pose2d", "=", "project_pose", "(", "joints_3d", "[", "n", "]", ",", "cam", ")", "\n", "\n", "x_check", "=", "np", ".", "bitwise_and", "(", "pose2d", "[", ":", ",", "0", "]", ">=", "0", ",", "\n", "pose2d", "[", ":", ",", "0", "]", "<=", "width", "-", "1", ")", "\n", "y_check", "=", "np", ".", "bitwise_and", "(", "pose2d", "[", ":", ",", "1", "]", ">=", "0", ",", "\n", "pose2d", "[", ":", ",", "1", "]", "<=", "height", "-", "1", ")", "\n", "check", "=", "np", ".", "bitwise_and", "(", "x_check", ",", "y_check", ")", "\n", "vis", "=", "joints_3d_vis", "[", "n", "]", "[", ":", ",", "0", "]", ">", "0", "\n", "vis", "[", "np", ".", "logical_not", "(", "check", ")", "]", "=", "0", "\n", "\n", "joints", ".", "append", "(", "pose2d", ")", "\n", "joints_vis", ".", "append", "(", "np", ".", "repeat", "(", "np", ".", "reshape", "(", "vis", ",", "(", "-", "1", ",", "1", ")", ")", ",", "2", ",", "axis", "=", "1", ")", ")", "\n", "\n", "", "trans", "=", "get_affine_transform", "(", "c", ",", "s", ",", "r", ",", "self", ".", "image_size", ")", "\n", "input", "=", "np", ".", "ones", "(", "(", "height", ",", "width", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "input", "=", "cv2", ".", "warpAffine", "(", "\n", "input", ",", "\n", "trans", ",", "(", "int", "(", "self", ".", "image_size", "[", "0", "]", ")", ",", "int", "(", "self", ".", "image_size", "[", "1", "]", ")", ")", ",", "\n", "flags", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "\n", "if", "self", ".", "transform", ":", "\n", "            ", "input", "=", "self", ".", "transform", "(", "input", ")", "\n", "\n", "", "for", "n", "in", "range", "(", "nposes", ")", ":", "\n", "            ", "for", "i", "in", "range", "(", "len", "(", "joints", "[", "0", "]", ")", ")", ":", "\n", "                ", "if", "joints_vis", "[", "n", "]", "[", "i", ",", "0", "]", ">", "0.0", ":", "\n", "                    ", "joints", "[", "n", "]", "[", "i", ",", "0", ":", "2", "]", "=", "affine_transform", "(", "\n", "joints", "[", "n", "]", "[", "i", ",", "0", ":", "2", "]", ",", "trans", ")", "\n", "if", "(", "np", ".", "min", "(", "joints", "[", "n", "]", "[", "i", ",", ":", "2", "]", ")", "<", "0", "or", "\n", "joints", "[", "n", "]", "[", "i", ",", "0", "]", ">=", "self", ".", "image_size", "[", "0", "]", "or", "\n", "joints", "[", "n", "]", "[", "i", ",", "1", "]", ">=", "self", ".", "image_size", "[", "1", "]", ")", ":", "\n", "                        ", "joints_vis", "[", "n", "]", "[", "i", ",", ":", "]", "=", "0", "\n", "\n", "", "", "", "", "input_heatmap", ",", "_", "=", "self", ".", "generate_input_heatmap", "(", "\n", "joints", ",", "joints_vis", ")", "\n", "input_heatmap", "=", "torch", ".", "from_numpy", "(", "input_heatmap", ")", "\n", "target_heatmap", "=", "torch", ".", "zeros_like", "(", "input_heatmap", ")", "\n", "target_weight", "=", "torch", ".", "zeros", "(", "len", "(", "target_heatmap", ")", ",", "1", ")", "\n", "\n", "# make joints and joints_vis having same shape", "\n", "joints_u", "=", "np", ".", "zeros", "(", "(", "self", ".", "maximum_person", ",", "len", "(", "joints", "[", "0", "]", ")", ",", "2", ")", ")", "\n", "joints_vis_u", "=", "np", ".", "zeros", "(", "(", "self", ".", "maximum_person", ",", "len", "(", "joints", "[", "0", "]", ")", ",", "2", ")", ")", "\n", "for", "i", "in", "range", "(", "nposes", ")", ":", "\n", "            ", "joints_u", "[", "i", "]", "=", "joints", "[", "i", "]", "\n", "joints_vis_u", "[", "i", "]", "=", "joints_vis", "[", "i", "]", "\n", "\n", "", "joints_3d_u", "=", "np", ".", "zeros", "(", "(", "self", ".", "maximum_person", ",", "len", "(", "joints", "[", "0", "]", ")", ",", "3", ")", ")", "\n", "joints_3d_vis_u", "=", "np", ".", "zeros", "(", "(", "self", ".", "maximum_person", ",", "len", "(", "joints", "[", "0", "]", ")", ",", "3", ")", ")", "\n", "for", "i", "in", "range", "(", "nposes", ")", ":", "\n", "            ", "joints_3d_u", "[", "i", "]", "=", "joints_3d", "[", "i", "]", "[", ":", ",", "0", ":", "3", "]", "\n", "joints_3d_vis_u", "[", "i", "]", "=", "joints_3d_vis", "[", "i", "]", "[", ":", ",", "0", ":", "3", "]", "\n", "\n", "", "target_3d", "=", "self", ".", "generate_3d_target", "(", "joints_3d", ")", "\n", "target_3d", "=", "torch", ".", "from_numpy", "(", "target_3d", ")", "\n", "\n", "meta", "=", "{", "\n", "'image'", ":", "''", ",", "\n", "'num_person'", ":", "nposes", ",", "\n", "'joints_3d'", ":", "joints_3d_u", ",", "\n", "'roots_3d'", ":", "(", "joints_3d_u", "[", ":", ",", "11", "]", "+", "joints_3d_u", "[", ":", ",", "12", "]", ")", "/", "2.0", ",", "\n", "'joints_3d_vis'", ":", "joints_3d_vis_u", ",", "\n", "'joints'", ":", "joints_u", ",", "\n", "'joints_vis'", ":", "joints_vis_u", ",", "\n", "'center'", ":", "c", ",", "\n", "'scale'", ":", "s", ",", "\n", "'rotation'", ":", "r", ",", "\n", "'camera'", ":", "cam", "\n", "}", "\n", "\n", "return", "input", ",", "target_heatmap", ",", "target_weight", ",", "target_3d", ",", "meta", ",", "input_heatmap", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf_synthetic.ShelfSynthetic.compute_human_scale": [[233, 241], ["numpy.clip", "numpy.sum", "numpy.min", "numpy.max", "numpy.min", "numpy.max", "numpy.maximum"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "compute_human_scale", "(", "pose", ",", "joints_vis", ")", ":", "\n", "        ", "idx", "=", "joints_vis", "[", ":", ",", "0", "]", "==", "1", "\n", "if", "np", ".", "sum", "(", "idx", ")", "==", "0", ":", "\n", "            ", "return", "0", "\n", "", "minx", ",", "maxx", "=", "np", ".", "min", "(", "pose", "[", "idx", ",", "0", "]", ")", ",", "np", ".", "max", "(", "pose", "[", "idx", ",", "0", "]", ")", "\n", "miny", ",", "maxy", "=", "np", ".", "min", "(", "pose", "[", "idx", ",", "1", "]", ")", ",", "np", ".", "max", "(", "pose", "[", "idx", ",", "1", "]", ")", "\n", "return", "np", ".", "clip", "(", "np", ".", "maximum", "(", "maxy", "-", "miny", ",", "maxx", "-", "minx", ")", "**", "2", ",", "1.0", "/", "4", "*", "96", "**", "2", ",", "4", "*", "96", "**", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf_synthetic.ShelfSynthetic.generate_input_heatmap": [[242, 320], ["len", "numpy.zeros", "range", "range", "numpy.zeros", "range", "numpy.multiply", "range", "numpy.clip", "random.random", "shelf_synthetic.ShelfSynthetic.compute_human_scale", "numpy.sqrt", "int", "int", "numpy.arange", "numpy.maximum", "int", "int", "int", "int", "numpy.exp", "max", "max", "max", "min", "max", "min", "random.random", "min", "min", "numpy.random.randn", "random.random", "random.random", "random.random"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf_synthetic.ShelfSynthetic.compute_human_scale"], ["", "def", "generate_input_heatmap", "(", "self", ",", "joints", ",", "joints_vis", ")", ":", "\n", "        ", "'''\n        :param joints:  [[num_joints, 3]]\n        :param joints_vis: [num_joints, 3]\n        :return: input_heatmap\n        '''", "\n", "nposes", "=", "len", "(", "joints", ")", "\n", "num_joints", "=", "joints", "[", "0", "]", ".", "shape", "[", "0", "]", "\n", "target_weight", "=", "np", ".", "zeros", "(", "(", "num_joints", ",", "1", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "i", "in", "range", "(", "num_joints", ")", ":", "\n", "            ", "for", "n", "in", "range", "(", "nposes", ")", ":", "\n", "                ", "if", "joints_vis", "[", "n", "]", "[", "i", ",", "0", "]", "==", "1", ":", "\n", "                    ", "target_weight", "[", "i", ",", "0", "]", "=", "1", "\n", "\n", "", "", "", "assert", "self", ".", "target_type", "==", "'gaussian'", ",", "'Only support gaussian map now!'", "\n", "\n", "if", "self", ".", "target_type", "==", "'gaussian'", ":", "\n", "            ", "target", "=", "np", ".", "zeros", "(", "\n", "(", "num_joints", ",", "self", ".", "heatmap_size", "[", "1", "]", ",", "self", ".", "heatmap_size", "[", "0", "]", ")", ",", "\n", "dtype", "=", "np", ".", "float32", ")", "\n", "feat_stride", "=", "self", ".", "image_size", "/", "self", ".", "heatmap_size", "\n", "\n", "for", "n", "in", "range", "(", "nposes", ")", ":", "\n", "                ", "obscured", "=", "random", ".", "random", "(", ")", "<", "0.05", "\n", "if", "obscured", ":", "\n", "                    ", "continue", "\n", "", "human_scale", "=", "2", "*", "self", ".", "compute_human_scale", "(", "joints", "[", "n", "]", "/", "feat_stride", ",", "joints_vis", "[", "n", "]", ")", "\n", "if", "human_scale", "==", "0", ":", "\n", "                    ", "continue", "\n", "\n", "", "cur_sigma", "=", "self", ".", "sigma", "*", "np", ".", "sqrt", "(", "(", "human_scale", "/", "(", "96.0", "*", "96.0", ")", ")", ")", "\n", "tmp_size", "=", "cur_sigma", "*", "3", "\n", "for", "joint_id", "in", "range", "(", "num_joints", ")", ":", "\n", "                    ", "feat_stride", "=", "self", ".", "image_size", "/", "self", ".", "heatmap_size", "\n", "mu_x", "=", "int", "(", "joints", "[", "n", "]", "[", "joint_id", "]", "[", "0", "]", "/", "feat_stride", "[", "0", "]", ")", "\n", "mu_y", "=", "int", "(", "joints", "[", "n", "]", "[", "joint_id", "]", "[", "1", "]", "/", "feat_stride", "[", "1", "]", ")", "\n", "ul", "=", "[", "int", "(", "mu_x", "-", "tmp_size", ")", ",", "int", "(", "mu_y", "-", "tmp_size", ")", "]", "\n", "br", "=", "[", "int", "(", "mu_x", "+", "tmp_size", "+", "1", ")", ",", "int", "(", "mu_y", "+", "tmp_size", "+", "1", ")", "]", "\n", "if", "joints_vis", "[", "n", "]", "[", "joint_id", ",", "0", "]", "==", "0", "or", "ul", "[", "0", "]", ">=", "self", ".", "heatmap_size", "[", "0", "]", "or", "ul", "[", "1", "]", ">=", "self", ".", "heatmap_size", "[", "1", "]", "or", "br", "[", "0", "]", "<", "0", "or", "br", "[", "1", "]", "<", "0", ":", "\n", "                        ", "continue", "\n", "\n", "", "size", "=", "2", "*", "tmp_size", "+", "1", "\n", "x", "=", "np", ".", "arange", "(", "0", ",", "size", ",", "1", ",", "np", ".", "float32", ")", "\n", "y", "=", "x", "[", ":", ",", "np", ".", "newaxis", "]", "\n", "x0", "=", "y0", "=", "size", "//", "2", "\n", "# scale = 1 - np.abs(np.random.randn(1) * 0.25)", "\n", "scale", "=", "0.9", "+", "np", ".", "random", ".", "randn", "(", "1", ")", "*", "0.03", "if", "random", ".", "random", "(", ")", "<", "0.6", "else", "1.0", "\n", "if", "joint_id", "in", "[", "7", ",", "8", ",", "13", ",", "14", "]", ":", "\n", "                        ", "scale", "=", "scale", "*", "0.5", "if", "random", ".", "random", "(", ")", "<", "0.1", "else", "scale", "\n", "", "elif", "joint_id", "in", "[", "9", ",", "10", ",", "15", ",", "16", "]", ":", "\n", "                        ", "scale", "=", "scale", "*", "0.2", "if", "random", ".", "random", "(", ")", "<", "0.1", "else", "scale", "\n", "", "else", ":", "\n", "                        ", "scale", "=", "scale", "*", "0.5", "if", "random", ".", "random", "(", ")", "<", "0.05", "else", "scale", "\n", "", "g", "=", "np", ".", "exp", "(", "\n", "-", "(", "(", "x", "-", "x0", ")", "**", "2", "+", "(", "y", "-", "y0", ")", "**", "2", ")", "/", "(", "2", "*", "cur_sigma", "**", "2", ")", ")", "*", "scale", "\n", "\n", "# Usable gaussian range", "\n", "g_x", "=", "max", "(", "0", ",", "\n", "-", "ul", "[", "0", "]", ")", ",", "min", "(", "br", "[", "0", "]", ",", "self", ".", "heatmap_size", "[", "0", "]", ")", "-", "ul", "[", "0", "]", "\n", "g_y", "=", "max", "(", "0", ",", "\n", "-", "ul", "[", "1", "]", ")", ",", "min", "(", "br", "[", "1", "]", ",", "self", ".", "heatmap_size", "[", "1", "]", ")", "-", "ul", "[", "1", "]", "\n", "# Image range", "\n", "img_x", "=", "max", "(", "0", ",", "ul", "[", "0", "]", ")", ",", "min", "(", "br", "[", "0", "]", ",", "self", ".", "heatmap_size", "[", "0", "]", ")", "\n", "img_y", "=", "max", "(", "0", ",", "ul", "[", "1", "]", ")", ",", "min", "(", "br", "[", "1", "]", ",", "self", ".", "heatmap_size", "[", "1", "]", ")", "\n", "\n", "target", "[", "joint_id", "]", "[", "img_y", "[", "0", "]", ":", "img_y", "[", "1", "]", ",", "img_x", "[", "0", "]", ":", "img_x", "[", "1", "]", "]", "=", "np", ".", "maximum", "(", "\n", "target", "[", "joint_id", "]", "[", "img_y", "[", "0", "]", ":", "img_y", "[", "1", "]", ",", "img_x", "[", "0", "]", ":", "img_x", "[", "1", "]", "]", ",", "\n", "g", "[", "g_y", "[", "0", "]", ":", "g_y", "[", "1", "]", ",", "g_x", "[", "0", "]", ":", "g_x", "[", "1", "]", "]", ")", "\n", "", "target", "=", "np", ".", "clip", "(", "target", ",", "0", ",", "1", ")", "\n", "\n", "", "", "if", "self", ".", "use_different_joints_weight", ":", "\n", "            ", "target_weight", "=", "np", ".", "multiply", "(", "target_weight", ",", "self", ".", "joints_weight", ")", "\n", "\n", "", "return", "target", ",", "target_weight", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf_synthetic.ShelfSynthetic.generate_3d_target": [[321, 357], ["len", "numpy.zeros", "range", "numpy.clip", "numpy.linspace", "numpy.linspace", "numpy.linspace", "numpy.meshgrid", "numpy.exp", "numpy.maximum", "numpy.searchsorted", "numpy.searchsorted", "numpy.searchsorted", "numpy.searchsorted", "numpy.searchsorted", "numpy.searchsorted"], "methods", ["None"], ["", "def", "generate_3d_target", "(", "self", ",", "joints_3d", ")", ":", "\n", "        ", "num_people", "=", "len", "(", "joints_3d", ")", "\n", "\n", "space_size", "=", "self", ".", "space_size", "\n", "space_center", "=", "self", ".", "space_center", "\n", "cube_size", "=", "self", ".", "initial_cube_size", "\n", "grid1Dx", "=", "np", ".", "linspace", "(", "-", "space_size", "[", "0", "]", "/", "2", ",", "space_size", "[", "0", "]", "/", "2", ",", "cube_size", "[", "0", "]", ")", "+", "space_center", "[", "0", "]", "\n", "grid1Dy", "=", "np", ".", "linspace", "(", "-", "space_size", "[", "1", "]", "/", "2", ",", "space_size", "[", "1", "]", "/", "2", ",", "cube_size", "[", "1", "]", ")", "+", "space_center", "[", "1", "]", "\n", "grid1Dz", "=", "np", ".", "linspace", "(", "-", "space_size", "[", "2", "]", "/", "2", ",", "space_size", "[", "2", "]", "/", "2", ",", "cube_size", "[", "2", "]", ")", "+", "space_center", "[", "2", "]", "\n", "\n", "target", "=", "np", ".", "zeros", "(", "(", "cube_size", "[", "0", "]", ",", "cube_size", "[", "1", "]", ",", "cube_size", "[", "2", "]", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "cur_sigma", "=", "200.0", "\n", "\n", "for", "n", "in", "range", "(", "num_people", ")", ":", "\n", "            ", "joint_id", "=", "[", "11", ",", "12", "]", "# mid-hip", "\n", "mu_x", "=", "(", "joints_3d", "[", "n", "]", "[", "joint_id", "[", "0", "]", "]", "[", "0", "]", "+", "joints_3d", "[", "n", "]", "[", "joint_id", "[", "1", "]", "]", "[", "0", "]", ")", "/", "2.0", "\n", "mu_y", "=", "(", "joints_3d", "[", "n", "]", "[", "joint_id", "[", "0", "]", "]", "[", "1", "]", "+", "joints_3d", "[", "n", "]", "[", "joint_id", "[", "1", "]", "]", "[", "1", "]", ")", "/", "2.0", "\n", "mu_z", "=", "(", "joints_3d", "[", "n", "]", "[", "joint_id", "[", "0", "]", "]", "[", "2", "]", "+", "joints_3d", "[", "n", "]", "[", "joint_id", "[", "1", "]", "]", "[", "2", "]", ")", "/", "2.0", "\n", "\n", "i_x", "=", "[", "np", ".", "searchsorted", "(", "grid1Dx", ",", "mu_x", "-", "3", "*", "cur_sigma", ")", ",", "\n", "np", ".", "searchsorted", "(", "grid1Dx", ",", "mu_x", "+", "3", "*", "cur_sigma", ",", "'right'", ")", "]", "\n", "i_y", "=", "[", "np", ".", "searchsorted", "(", "grid1Dy", ",", "mu_y", "-", "3", "*", "cur_sigma", ")", ",", "\n", "np", ".", "searchsorted", "(", "grid1Dy", ",", "mu_y", "+", "3", "*", "cur_sigma", ",", "'right'", ")", "]", "\n", "i_z", "=", "[", "np", ".", "searchsorted", "(", "grid1Dz", ",", "mu_z", "-", "3", "*", "cur_sigma", ")", ",", "\n", "np", ".", "searchsorted", "(", "grid1Dz", ",", "mu_z", "+", "3", "*", "cur_sigma", ",", "'right'", ")", "]", "\n", "if", "i_x", "[", "0", "]", ">=", "i_x", "[", "1", "]", "or", "i_y", "[", "0", "]", ">=", "i_y", "[", "1", "]", "or", "i_z", "[", "0", "]", ">=", "i_z", "[", "1", "]", ":", "\n", "                ", "continue", "\n", "\n", "", "gridx", ",", "gridy", ",", "gridz", "=", "np", ".", "meshgrid", "(", "grid1Dx", "[", "i_x", "[", "0", "]", ":", "i_x", "[", "1", "]", "]", ",", "grid1Dy", "[", "i_y", "[", "0", "]", ":", "i_y", "[", "1", "]", "]", ",", "grid1Dz", "[", "i_z", "[", "0", "]", ":", "i_z", "[", "1", "]", "]", ",", "\n", "indexing", "=", "'ij'", ")", "\n", "g", "=", "np", ".", "exp", "(", "-", "(", "(", "gridx", "-", "mu_x", ")", "**", "2", "+", "(", "gridy", "-", "mu_y", ")", "**", "2", "+", "(", "gridz", "-", "mu_z", ")", "**", "2", ")", "/", "(", "2", "*", "cur_sigma", "**", "2", ")", ")", "\n", "target", "[", "i_x", "[", "0", "]", ":", "i_x", "[", "1", "]", ",", "i_y", "[", "0", "]", ":", "i_y", "[", "1", "]", ",", "i_z", "[", "0", "]", ":", "i_z", "[", "1", "]", "]", "=", "np", ".", "maximum", "(", "\n", "target", "[", "i_x", "[", "0", "]", ":", "i_x", "[", "1", "]", ",", "i_y", "[", "0", "]", ":", "i_y", "[", "1", "]", ",", "i_z", "[", "0", "]", ":", "i_z", "[", "1", "]", "]", ",", "g", ")", "\n", "\n", "", "target", "=", "np", ".", "clip", "(", "target", ",", "0", ",", "1", ")", "\n", "return", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf_synthetic.ShelfSynthetic.evaluate": [[358, 360], ["None"], "methods", ["None"], ["", "def", "evaluate", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf_synthetic.ShelfSynthetic.get_new_center": [[361, 370], ["numpy.array", "len", "random.random", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.choice", "numpy.random.normal", "numpy.random.choice", "range", "len"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_new_center", "(", "center_list", ")", ":", "\n", "        ", "if", "len", "(", "center_list", ")", "==", "0", "or", "random", ".", "random", "(", ")", "<", "0.7", ":", "\n", "            ", "new_center", "=", "np", ".", "array", "(", "[", "np", ".", "random", ".", "uniform", "(", "-", "1000.0", ",", "2000.0", ")", ",", "np", ".", "random", ".", "uniform", "(", "-", "1600.0", ",", "1600.0", ")", "]", ")", "\n", "", "else", ":", "\n", "            ", "xy", "=", "center_list", "[", "np", ".", "random", ".", "choice", "(", "range", "(", "len", "(", "center_list", ")", ")", ")", "]", "\n", "new_center", "=", "xy", "+", "np", ".", "random", ".", "normal", "(", "500", ",", "50", ",", "2", ")", "*", "np", ".", "random", ".", "choice", "(", "[", "1", ",", "-", "1", "]", ",", "2", ")", "\n", "\n", "", "return", "new_center", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf_synthetic.ShelfSynthetic.isvalid": [[371, 388], ["numpy.array", "numpy.maximum", "numpy.maximum", "numpy.minimum", "numpy.minimum", "numpy.maximum", "len", "numpy.max"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "isvalid", "(", "bbox", ",", "bbox_list", ")", ":", "\n", "        ", "if", "len", "(", "bbox_list", ")", "==", "0", ":", "\n", "            ", "return", "True", "\n", "\n", "", "bbox_list", "=", "np", ".", "array", "(", "bbox_list", ")", "\n", "x0", "=", "np", ".", "maximum", "(", "bbox", "[", "0", "]", ",", "bbox_list", "[", ":", ",", "0", "]", ")", "\n", "y0", "=", "np", ".", "maximum", "(", "bbox", "[", "1", "]", ",", "bbox_list", "[", ":", ",", "1", "]", ")", "\n", "x1", "=", "np", ".", "minimum", "(", "bbox", "[", "2", "]", ",", "bbox_list", "[", ":", ",", "2", "]", ")", "\n", "y1", "=", "np", ".", "minimum", "(", "bbox", "[", "3", "]", ",", "bbox_list", "[", ":", ",", "3", "]", ")", "\n", "\n", "intersection", "=", "np", ".", "maximum", "(", "0", ",", "(", "x1", "-", "x0", ")", "*", "(", "y1", "-", "y0", ")", ")", "\n", "area", "=", "(", "bbox", "[", "2", "]", "-", "bbox", "[", "0", "]", ")", "*", "(", "bbox", "[", "3", "]", "-", "bbox", "[", "1", "]", ")", "\n", "area_list", "=", "(", "bbox_list", "[", ":", ",", "2", "]", "-", "bbox_list", "[", ":", ",", "0", "]", ")", "*", "(", "bbox_list", "[", ":", ",", "3", "]", "-", "bbox_list", "[", ":", ",", "1", "]", ")", "\n", "iou_list", "=", "intersection", "/", "(", "area", "+", "area_list", "-", "intersection", ")", "\n", "\n", "return", "np", ".", "max", "(", "iou_list", ")", "<", "0.01", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.shelf_synthetic.ShelfSynthetic.calc_bbox": [[389, 396], ["numpy.array", "numpy.min", "numpy.min", "numpy.max", "numpy.max"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "calc_bbox", "(", "pose", ",", "pose_vis", ")", ":", "\n", "        ", "index", "=", "pose_vis", "[", ":", ",", "0", "]", ">", "0", "\n", "bbox", "=", "[", "np", ".", "min", "(", "pose", "[", "index", ",", "0", "]", ")", ",", "np", ".", "min", "(", "pose", "[", "index", ",", "1", "]", ")", ",", "\n", "np", ".", "max", "(", "pose", "[", "index", ",", "0", "]", ")", ",", "np", ".", "max", "(", "pose", "[", "index", ",", "1", "]", ")", "]", "\n", "\n", "return", "np", ".", "array", "(", "bbox", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.campus.Campus.__init__": [[59, 73], ["dataset.JointsDataset.JointsDataset.__init__", "len", "len", "campus.Campus._get_pred_pose2d", "campus.Campus._get_db", "len", "list", "list", "range", "range"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.AverageMeter.__init__", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.campus.Campus._get_pred_pose2d", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.campus.Campus._get_db"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ",", "image_set", ",", "is_train", ",", "transform", "=", "None", ")", ":", "\n", "        ", "self", ".", "pixel_std", "=", "200.0", "\n", "self", ".", "joints_def", "=", "CAMPUS_JOINTS_DEF", "\n", "super", "(", ")", ".", "__init__", "(", "cfg", ",", "image_set", ",", "is_train", ",", "transform", ")", "\n", "self", ".", "limbs", "=", "LIMBS", "\n", "self", ".", "num_joints", "=", "len", "(", "CAMPUS_JOINTS_DEF", ")", "\n", "self", ".", "cam_list", "=", "[", "0", ",", "1", ",", "2", "]", "\n", "self", ".", "num_views", "=", "len", "(", "self", ".", "cam_list", ")", "\n", "self", ".", "frame_range", "=", "list", "(", "range", "(", "350", ",", "471", ")", ")", "+", "list", "(", "range", "(", "650", ",", "751", ")", ")", "\n", "\n", "self", ".", "pred_pose2d", "=", "self", ".", "_get_pred_pose2d", "(", ")", "\n", "self", ".", "db", "=", "self", ".", "_get_db", "(", ")", "\n", "\n", "self", ".", "db_size", "=", "len", "(", "self", ".", "db", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.campus.Campus._get_pred_pose2d": [[74, 81], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "open", "logging.info", "pickle.load"], "methods", ["None"], ["", "def", "_get_pred_pose2d", "(", "self", ")", ":", "\n", "        ", "file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "\"pred_campus_maskrcnn_hrnet_coco.pkl\"", ")", "\n", "with", "open", "(", "file", ",", "\"rb\"", ")", "as", "pfile", ":", "\n", "            ", "logging", ".", "info", "(", "\"=> load {}\"", ".", "format", "(", "file", ")", ")", "\n", "pred_2d", "=", "pickle", ".", "load", "(", "pfile", ")", "\n", "\n", "", "return", "pred_2d", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.campus.Campus._get_db": [[82, 139], ["campus.Campus._get_cam", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "scipy.loadmat", "numpy.array().squeeze", "len", "len", "campus.Campus.items", "numpy.array", "os.join", "os.join", "range", "db.append", "numpy.array().tolist", "numpy.array", "len", "all_poses_3d.append", "all_poses_vis_3d.append", "utils.cameras_cpu.project_pose", "numpy.bitwise_and", "numpy.bitwise_and", "numpy.bitwise_and", "numpy.ones", "all_poses.append", "all_poses_vis.append", "os.join", "os.join", "numpy.array", "numpy.ones", "numpy.repeat", "data[].tolist", "len", "numpy.logical_not", "numpy.reshape"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.campus.Campus._get_cam", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.cameras_cpu.project_pose"], ["", "def", "_get_db", "(", "self", ")", ":", "\n", "        ", "width", "=", "360", "\n", "height", "=", "288", "\n", "\n", "db", "=", "[", "]", "\n", "cameras", "=", "self", ".", "_get_cam", "(", ")", "\n", "\n", "datafile", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'actorsGT.mat'", ")", "\n", "data", "=", "scio", ".", "loadmat", "(", "datafile", ")", "\n", "actor_3d", "=", "np", ".", "array", "(", "np", ".", "array", "(", "data", "[", "'actor3D'", "]", ".", "tolist", "(", ")", ")", ".", "tolist", "(", ")", ")", ".", "squeeze", "(", ")", "# num_person * num_frame", "\n", "\n", "num_person", "=", "len", "(", "actor_3d", ")", "\n", "num_frames", "=", "len", "(", "actor_3d", "[", "0", "]", ")", "\n", "\n", "for", "i", "in", "self", ".", "frame_range", ":", "\n", "            ", "for", "k", ",", "cam", "in", "cameras", ".", "items", "(", ")", ":", "\n", "                ", "image", "=", "osp", ".", "join", "(", "\"Camera\"", "+", "k", ",", "\"campus4-c{0}-{1:05d}.png\"", ".", "format", "(", "k", ",", "i", ")", ")", "\n", "\n", "all_poses_3d", "=", "[", "]", "\n", "all_poses_vis_3d", "=", "[", "]", "\n", "all_poses", "=", "[", "]", "\n", "all_poses_vis", "=", "[", "]", "\n", "for", "person", "in", "range", "(", "num_person", ")", ":", "\n", "                    ", "pose3d", "=", "actor_3d", "[", "person", "]", "[", "i", "]", "*", "1000.0", "\n", "if", "len", "(", "pose3d", "[", "0", "]", ")", ">", "0", ":", "\n", "                        ", "all_poses_3d", ".", "append", "(", "pose3d", ")", "\n", "all_poses_vis_3d", ".", "append", "(", "np", ".", "ones", "(", "(", "self", ".", "num_joints", ",", "3", ")", ")", ")", "\n", "\n", "pose2d", "=", "project_pose", "(", "pose3d", ",", "cam", ")", "\n", "\n", "x_check", "=", "np", ".", "bitwise_and", "(", "pose2d", "[", ":", ",", "0", "]", ">=", "0", ",", "\n", "pose2d", "[", ":", ",", "0", "]", "<=", "width", "-", "1", ")", "\n", "y_check", "=", "np", ".", "bitwise_and", "(", "pose2d", "[", ":", ",", "1", "]", ">=", "0", ",", "\n", "pose2d", "[", ":", ",", "1", "]", "<=", "height", "-", "1", ")", "\n", "check", "=", "np", ".", "bitwise_and", "(", "x_check", ",", "y_check", ")", "\n", "\n", "joints_vis", "=", "np", ".", "ones", "(", "(", "len", "(", "pose2d", ")", ",", "1", ")", ")", "\n", "joints_vis", "[", "np", ".", "logical_not", "(", "check", ")", "]", "=", "0", "\n", "all_poses", ".", "append", "(", "pose2d", ")", "\n", "all_poses_vis", ".", "append", "(", "\n", "np", ".", "repeat", "(", "\n", "np", ".", "reshape", "(", "joints_vis", ",", "(", "-", "1", ",", "1", ")", ")", ",", "2", ",", "axis", "=", "1", ")", ")", "\n", "\n", "", "", "pred_index", "=", "'{}_{}'", ".", "format", "(", "k", ",", "i", ")", "\n", "preds", "=", "self", ".", "pred_pose2d", "[", "pred_index", "]", "\n", "preds", "=", "[", "np", ".", "array", "(", "p", "[", "\"pred\"", "]", ")", "for", "p", "in", "preds", "]", "\n", "\n", "db", ".", "append", "(", "{", "\n", "'image'", ":", "osp", ".", "join", "(", "self", ".", "dataset_root", ",", "image", ")", ",", "\n", "'joints_3d'", ":", "all_poses_3d", ",", "\n", "'joints_3d_vis'", ":", "all_poses_vis_3d", ",", "\n", "'joints_2d'", ":", "all_poses", ",", "\n", "'joints_2d_vis'", ":", "all_poses_vis", ",", "\n", "'camera'", ":", "cam", ",", "\n", "'pred_pose2d'", ":", "preds", "\n", "}", ")", "\n", "", "", "return", "db", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.campus.Campus._get_cam": [[140, 150], ["os.join", "os.join", "json_tricks.load.items", "open", "json_tricks.load", "cam.items", "numpy.array"], "methods", ["None"], ["", "def", "_get_cam", "(", "self", ")", ":", "\n", "        ", "cam_file", "=", "osp", ".", "join", "(", "self", ".", "dataset_root", ",", "\"calibration_campus.json\"", ")", "\n", "with", "open", "(", "cam_file", ")", "as", "cfile", ":", "\n", "            ", "cameras", "=", "json", ".", "load", "(", "cfile", ")", "\n", "\n", "", "for", "id", ",", "cam", "in", "cameras", ".", "items", "(", ")", ":", "\n", "            ", "for", "k", ",", "v", "in", "cam", ".", "items", "(", ")", ":", "\n", "                ", "cameras", "[", "id", "]", "[", "k", "]", "=", "np", ".", "array", "(", "v", ")", "\n", "\n", "", "", "return", "cameras", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.campus.Campus.__getitem__": [[151, 162], ["range", "dataset.JointsDataset.JointsDataset.__getitem__", "input.append", "target_heatmap.append", "target_weight.append", "input_heatmap.append", "target_3d.append", "meta.append"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.campus.Campus.__getitem__"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "input", ",", "target_heatmap", ",", "target_weight", ",", "target_3d", ",", "meta", ",", "input_heatmap", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "k", "in", "range", "(", "self", ".", "num_views", ")", ":", "\n", "            ", "i", ",", "th", ",", "tw", ",", "t3", ",", "m", ",", "ih", "=", "super", "(", ")", ".", "__getitem__", "(", "self", ".", "num_views", "*", "idx", "+", "k", ")", "\n", "input", ".", "append", "(", "i", ")", "\n", "target_heatmap", ".", "append", "(", "th", ")", "\n", "target_weight", ".", "append", "(", "tw", ")", "\n", "input_heatmap", ".", "append", "(", "ih", ")", "\n", "target_3d", ".", "append", "(", "t3", ")", "\n", "meta", ".", "append", "(", "m", ")", "\n", "", "return", "input", ",", "target_heatmap", ",", "target_weight", ",", "target_3d", ",", "meta", ",", "input_heatmap", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.campus.Campus.__len__": [[163, 165], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "db_size", "//", "self", ".", "num_views", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.campus.Campus.evaluate": [[166, 226], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "scipy.loadmat", "numpy.array().squeeze", "len", "numpy.zeros", "numpy.zeros", "numpy.zeros", "enumerate", "numpy.mean", "collections.OrderedDict", "collections.OrderedDict", "collections.OrderedDict.items", "preds[].copy", "numpy.stack", "range", "numpy.array", "numpy.mean", "numpy.argmin", "numpy.min", "enumerate", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.sum", "numpy.array().tolist", "campus.Campus.coco2campus3D", "len", "numpy.sqrt", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.linalg.norm", "copy.deepcopy", "numpy.sum", "len", "numpy.array", "data[].tolist"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.campus.Campus.coco2campus3D"], ["", "def", "evaluate", "(", "self", ",", "preds", ",", "recall_threshold", "=", "500", ")", ":", "\n", "        ", "datafile", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "'actorsGT.mat'", ")", "\n", "data", "=", "scio", ".", "loadmat", "(", "datafile", ")", "\n", "actor_3d", "=", "np", ".", "array", "(", "np", ".", "array", "(", "data", "[", "'actor3D'", "]", ".", "tolist", "(", ")", ")", ".", "tolist", "(", ")", ")", ".", "squeeze", "(", ")", "# num_person * num_frame", "\n", "num_person", "=", "len", "(", "actor_3d", ")", "\n", "total_gt", "=", "0", "\n", "match_gt", "=", "0", "\n", "\n", "limbs", "=", "[", "[", "0", ",", "1", "]", ",", "[", "1", ",", "2", "]", ",", "[", "3", ",", "4", "]", ",", "[", "4", ",", "5", "]", ",", "[", "6", ",", "7", "]", ",", "[", "7", ",", "8", "]", ",", "[", "9", ",", "10", "]", ",", "[", "10", ",", "11", "]", ",", "[", "12", ",", "13", "]", "]", "\n", "correct_parts", "=", "np", ".", "zeros", "(", "num_person", ")", "\n", "total_parts", "=", "np", ".", "zeros", "(", "num_person", ")", "\n", "alpha", "=", "0.5", "\n", "bone_correct_parts", "=", "np", ".", "zeros", "(", "(", "num_person", ",", "10", ")", ")", "\n", "\n", "for", "i", ",", "fi", "in", "enumerate", "(", "self", ".", "frame_range", ")", ":", "\n", "            ", "pred_coco", "=", "preds", "[", "i", "]", ".", "copy", "(", ")", "\n", "pred_coco", "=", "pred_coco", "[", "pred_coco", "[", ":", ",", "0", ",", "3", "]", ">=", "0", ",", ":", ",", ":", "3", "]", "\n", "pred", "=", "np", ".", "stack", "(", "[", "self", ".", "coco2campus3D", "(", "p", ")", "for", "p", "in", "copy", ".", "deepcopy", "(", "pred_coco", "[", ":", ",", ":", ",", ":", "3", "]", ")", "]", ")", "\n", "\n", "for", "person", "in", "range", "(", "num_person", ")", ":", "\n", "                ", "gt", "=", "actor_3d", "[", "person", "]", "[", "fi", "]", "*", "1000.0", "\n", "if", "len", "(", "gt", "[", "0", "]", ")", "==", "0", ":", "\n", "                    ", "continue", "\n", "\n", "", "mpjpes", "=", "np", ".", "mean", "(", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "(", "gt", "[", "np", ".", "newaxis", "]", "-", "pred", ")", "**", "2", ",", "axis", "=", "-", "1", ")", ")", ",", "axis", "=", "-", "1", ")", "\n", "min_n", "=", "np", ".", "argmin", "(", "mpjpes", ")", "\n", "min_mpjpe", "=", "np", ".", "min", "(", "mpjpes", ")", "\n", "if", "min_mpjpe", "<", "recall_threshold", ":", "\n", "                    ", "match_gt", "+=", "1", "\n", "", "total_gt", "+=", "1", "\n", "\n", "for", "j", ",", "k", "in", "enumerate", "(", "limbs", ")", ":", "\n", "                    ", "total_parts", "[", "person", "]", "+=", "1", "\n", "error_s", "=", "np", ".", "linalg", ".", "norm", "(", "pred", "[", "min_n", ",", "k", "[", "0", "]", ",", "0", ":", "3", "]", "-", "gt", "[", "k", "[", "0", "]", "]", ")", "\n", "error_e", "=", "np", ".", "linalg", ".", "norm", "(", "pred", "[", "min_n", ",", "k", "[", "1", "]", ",", "0", ":", "3", "]", "-", "gt", "[", "k", "[", "1", "]", "]", ")", "\n", "limb_length", "=", "np", ".", "linalg", ".", "norm", "(", "gt", "[", "k", "[", "0", "]", "]", "-", "gt", "[", "k", "[", "1", "]", "]", ")", "\n", "if", "(", "error_s", "+", "error_e", ")", "/", "2.0", "<=", "alpha", "*", "limb_length", ":", "\n", "                        ", "correct_parts", "[", "person", "]", "+=", "1", "\n", "bone_correct_parts", "[", "person", ",", "j", "]", "+=", "1", "\n", "", "", "pred_hip", "=", "(", "pred", "[", "min_n", ",", "2", ",", "0", ":", "3", "]", "+", "pred", "[", "min_n", ",", "3", ",", "0", ":", "3", "]", ")", "/", "2.0", "\n", "gt_hip", "=", "(", "gt", "[", "2", "]", "+", "gt", "[", "3", "]", ")", "/", "2.0", "\n", "total_parts", "[", "person", "]", "+=", "1", "\n", "error_s", "=", "np", ".", "linalg", ".", "norm", "(", "pred_hip", "-", "gt_hip", ")", "\n", "error_e", "=", "np", ".", "linalg", ".", "norm", "(", "pred", "[", "min_n", ",", "12", ",", "0", ":", "3", "]", "-", "gt", "[", "12", "]", ")", "\n", "limb_length", "=", "np", ".", "linalg", ".", "norm", "(", "gt_hip", "-", "gt", "[", "12", "]", ")", "\n", "if", "(", "error_s", "+", "error_e", ")", "/", "2.0", "<=", "alpha", "*", "limb_length", ":", "\n", "                    ", "correct_parts", "[", "person", "]", "+=", "1", "\n", "bone_correct_parts", "[", "person", ",", "9", "]", "+=", "1", "\n", "\n", "", "", "", "actor_pcp", "=", "correct_parts", "/", "(", "total_parts", "+", "1e-8", ")", "\n", "avg_pcp", "=", "np", ".", "mean", "(", "actor_pcp", "[", ":", "3", "]", ")", "\n", "\n", "bone_group", "=", "OrderedDict", "(", "\n", "[", "(", "'Head'", ",", "[", "8", "]", ")", ",", "(", "'Torso'", ",", "[", "9", "]", ")", ",", "(", "'Upper arms'", ",", "[", "5", ",", "6", "]", ")", ",", "\n", "(", "'Lower arms'", ",", "[", "4", ",", "7", "]", ")", ",", "(", "'Upper legs'", ",", "[", "1", ",", "2", "]", ")", ",", "(", "'Lower legs'", ",", "[", "0", ",", "3", "]", ")", "]", ")", "\n", "bone_person_pcp", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "bone_group", ".", "items", "(", ")", ":", "\n", "            ", "bone_person_pcp", "[", "k", "]", "=", "np", ".", "sum", "(", "bone_correct_parts", "[", ":", ",", "v", "]", ",", "axis", "=", "-", "1", ")", "/", "(", "total_parts", "/", "10", "*", "len", "(", "v", ")", "+", "1e-8", ")", "\n", "\n", "", "return", "actor_pcp", ",", "avg_pcp", ",", "bone_person_pcp", ",", "match_gt", "/", "(", "total_gt", "+", "1e-8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.campus.Campus.coco2campus3D": [[227, 247], ["numpy.zeros", "numpy.array"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "coco2campus3D", "(", "coco_pose", ")", ":", "\n", "        ", "\"\"\"\n        transform coco order(our method output) 3d pose to shelf dataset order with interpolation\n        :param coco_pose: np.array with shape 17x3\n        :return: 3D pose in campus order with shape 14x3\n        \"\"\"", "\n", "campus_pose", "=", "np", ".", "zeros", "(", "(", "14", ",", "3", ")", ")", "\n", "coco2campus", "=", "np", ".", "array", "(", "[", "16", ",", "14", ",", "12", ",", "11", ",", "13", ",", "15", ",", "10", ",", "8", ",", "6", ",", "5", ",", "7", ",", "9", "]", ")", "\n", "campus_pose", "[", "0", ":", "12", "]", "+=", "coco_pose", "[", "coco2campus", "]", "\n", "\n", "mid_sho", "=", "(", "coco_pose", "[", "5", "]", "+", "coco_pose", "[", "6", "]", ")", "/", "2", "# L and R shoulder", "\n", "head_center", "=", "(", "coco_pose", "[", "3", "]", "+", "coco_pose", "[", "4", "]", ")", "/", "2", "# middle of two ear", "\n", "\n", "head_bottom", "=", "(", "mid_sho", "+", "head_center", ")", "/", "2", "# nose and head center", "\n", "head_top", "=", "head_bottom", "+", "(", "head_center", "-", "head_bottom", ")", "*", "2", "\n", "campus_pose", "[", "12", "]", "+=", "head_bottom", "\n", "campus_pose", "[", "13", "]", "+=", "head_top", "\n", "\n", "return", "campus_pose", "\n", "", "", ""]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.project_layer.ProjectLayer.__init__": [[16, 24], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "super", "(", "ProjectLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "img_size", "=", "cfg", ".", "NETWORK", ".", "IMAGE_SIZE", "\n", "self", ".", "heatmap_size", "=", "cfg", ".", "NETWORK", ".", "HEATMAP_SIZE", "\n", "self", ".", "grid_size", "=", "cfg", ".", "MULTI_PERSON", ".", "SPACE_SIZE", "\n", "self", ".", "cube_size", "=", "cfg", ".", "MULTI_PERSON", ".", "INITIAL_CUBE_SIZE", "\n", "self", ".", "grid_center", "=", "cfg", ".", "MULTI_PERSON", ".", "SPACE_CENTER", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.project_layer.ProjectLayer.compute_grid": [[25, 44], ["isinstance", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "gridx.contiguous().view.contiguous().view.contiguous().view", "gridy.contiguous().view.contiguous().view.contiguous().view", "gridz.contiguous().view.contiguous().view.contiguous().view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "isinstance", "isinstance", "gridx.contiguous().view.contiguous().view.contiguous", "gridy.contiguous().view.contiguous().view.contiguous", "gridz.contiguous().view.contiguous().view.contiguous"], "methods", ["None"], ["", "def", "compute_grid", "(", "self", ",", "boxSize", ",", "boxCenter", ",", "nBins", ",", "device", "=", "None", ")", ":", "\n", "        ", "if", "isinstance", "(", "boxSize", ",", "int", ")", "or", "isinstance", "(", "boxSize", ",", "float", ")", ":", "\n", "            ", "boxSize", "=", "[", "boxSize", ",", "boxSize", ",", "boxSize", "]", "\n", "", "if", "isinstance", "(", "nBins", ",", "int", ")", ":", "\n", "            ", "nBins", "=", "[", "nBins", ",", "nBins", ",", "nBins", "]", "\n", "\n", "", "grid1Dx", "=", "torch", ".", "linspace", "(", "-", "boxSize", "[", "0", "]", "/", "2", ",", "boxSize", "[", "0", "]", "/", "2", ",", "nBins", "[", "0", "]", ",", "device", "=", "device", ")", "\n", "grid1Dy", "=", "torch", ".", "linspace", "(", "-", "boxSize", "[", "1", "]", "/", "2", ",", "boxSize", "[", "1", "]", "/", "2", ",", "nBins", "[", "1", "]", ",", "device", "=", "device", ")", "\n", "grid1Dz", "=", "torch", ".", "linspace", "(", "-", "boxSize", "[", "2", "]", "/", "2", ",", "boxSize", "[", "2", "]", "/", "2", ",", "nBins", "[", "2", "]", ",", "device", "=", "device", ")", "\n", "gridx", ",", "gridy", ",", "gridz", "=", "torch", ".", "meshgrid", "(", "\n", "grid1Dx", "+", "boxCenter", "[", "0", "]", ",", "\n", "grid1Dy", "+", "boxCenter", "[", "1", "]", ",", "\n", "grid1Dz", "+", "boxCenter", "[", "2", "]", ",", "\n", ")", "\n", "gridx", "=", "gridx", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "gridy", "=", "gridy", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "gridz", "=", "gridz", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "grid", "=", "torch", ".", "cat", "(", "[", "gridx", ",", "gridy", ",", "gridz", "]", ",", "dim", "=", "1", ")", "\n", "return", "grid", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.project_layer.ProjectLayer.get_voxel": [[45, 102], ["len", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "range", "cubes.view.view.clamp", "cubes.view.view.view", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "range", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "len", "len", "project_layer.ProjectLayer.compute_grid", "project_layer.ProjectLayer.compute_grid", "torch.as_tensor", "torch.as_tensor", "torch.as_tensor", "torch.as_tensor", "torch.as_tensor", "torch.as_tensor", "torch.as_tensor", "torch.as_tensor", "torch.as_tensor", "[].items", "utils.project_pose", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "utils.transforms.affine_transform_pts_cuda", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "utils.transforms.get_affine_transform", "max", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.clamp.view", "torch.clamp.view", "torch.clamp.view", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.project_layer.ProjectLayer.compute_grid", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.project_layer.ProjectLayer.compute_grid", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.cameras_cpu.project_pose", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.affine_transform_pts_cuda", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.transforms.get_affine_transform"], ["", "def", "get_voxel", "(", "self", ",", "heatmaps", ",", "meta", ",", "grid_size", ",", "grid_center", ",", "cube_size", ")", ":", "\n", "        ", "device", "=", "heatmaps", "[", "0", "]", ".", "device", "\n", "batch_size", "=", "heatmaps", "[", "0", "]", ".", "shape", "[", "0", "]", "\n", "num_joints", "=", "heatmaps", "[", "0", "]", ".", "shape", "[", "1", "]", "\n", "nbins", "=", "cube_size", "[", "0", "]", "*", "cube_size", "[", "1", "]", "*", "cube_size", "[", "2", "]", "\n", "n", "=", "len", "(", "heatmaps", ")", "\n", "cubes", "=", "torch", ".", "zeros", "(", "batch_size", ",", "num_joints", ",", "1", ",", "nbins", ",", "n", ",", "device", "=", "device", ")", "\n", "# h, w = heatmaps[0].shape[2], heatmaps[0].shape[3]", "\n", "w", ",", "h", "=", "self", ".", "heatmap_size", "\n", "grids", "=", "torch", ".", "zeros", "(", "batch_size", ",", "nbins", ",", "3", ",", "device", "=", "device", ")", "\n", "bounding", "=", "torch", ".", "zeros", "(", "batch_size", ",", "1", ",", "1", ",", "nbins", ",", "n", ",", "device", "=", "device", ")", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "if", "len", "(", "grid_center", "[", "0", "]", ")", "==", "3", "or", "grid_center", "[", "i", "]", "[", "3", "]", ">=", "0", ":", "\n", "# This part of the code can be optimized because the projection operation is time-consuming.", "\n", "# If the camera locations always keep the same, the grids and sample_grids are repeated across frames", "\n", "# and can be computed only one time.", "\n", "                ", "if", "len", "(", "grid_center", ")", "==", "1", ":", "\n", "                    ", "grid", "=", "self", ".", "compute_grid", "(", "grid_size", ",", "grid_center", "[", "0", "]", ",", "cube_size", ",", "device", "=", "device", ")", "\n", "", "else", ":", "\n", "                    ", "grid", "=", "self", ".", "compute_grid", "(", "grid_size", ",", "grid_center", "[", "i", "]", ",", "cube_size", ",", "device", "=", "device", ")", "\n", "", "grids", "[", "i", ":", "i", "+", "1", "]", "=", "grid", "\n", "for", "c", "in", "range", "(", "n", ")", ":", "\n", "                    ", "center", "=", "meta", "[", "c", "]", "[", "'center'", "]", "[", "i", "]", "\n", "scale", "=", "meta", "[", "c", "]", "[", "'scale'", "]", "[", "i", "]", "\n", "\n", "width", ",", "height", "=", "center", "*", "2", "\n", "trans", "=", "torch", ".", "as_tensor", "(", "\n", "get_transform", "(", "center", ",", "scale", ",", "0", ",", "self", ".", "img_size", ")", ",", "\n", "dtype", "=", "torch", ".", "float", ",", "\n", "device", "=", "device", ")", "\n", "cam", "=", "{", "}", "\n", "for", "k", ",", "v", "in", "meta", "[", "c", "]", "[", "'camera'", "]", ".", "items", "(", ")", ":", "\n", "                        ", "cam", "[", "k", "]", "=", "v", "[", "i", "]", "\n", "", "xy", "=", "cameras", ".", "project_pose", "(", "grid", ",", "cam", ")", "\n", "\n", "bounding", "[", "i", ",", "0", ",", "0", ",", ":", ",", "c", "]", "=", "(", "xy", "[", ":", ",", "0", "]", ">=", "0", ")", "&", "(", "xy", "[", ":", ",", "1", "]", ">=", "0", ")", "&", "(", "xy", "[", ":", ",", "0", "]", "<", "width", ")", "&", "(", "\n", "xy", "[", ":", ",", "1", "]", "<", "height", ")", "\n", "xy", "=", "torch", ".", "clamp", "(", "xy", ",", "-", "1.0", ",", "max", "(", "width", ",", "height", ")", ")", "\n", "xy", "=", "do_transform", "(", "xy", ",", "trans", ")", "\n", "xy", "=", "xy", "*", "torch", ".", "tensor", "(", "\n", "[", "w", ",", "h", "]", ",", "dtype", "=", "torch", ".", "float", ",", "device", "=", "device", ")", "/", "torch", ".", "tensor", "(", "\n", "self", ".", "img_size", ",", "dtype", "=", "torch", ".", "float", ",", "device", "=", "device", ")", "\n", "sample_grid", "=", "xy", "/", "torch", ".", "tensor", "(", "\n", "[", "w", "-", "1", ",", "h", "-", "1", "]", ",", "dtype", "=", "torch", ".", "float", ",", "\n", "device", "=", "device", ")", "*", "2.0", "-", "1.0", "\n", "sample_grid", "=", "torch", ".", "clamp", "(", "sample_grid", ".", "view", "(", "1", ",", "1", ",", "nbins", ",", "2", ")", ",", "-", "1.1", ",", "1.1", ")", "\n", "\n", "# if pytorch version < 1.3.0, align_corners=True should be omitted.", "\n", "cubes", "[", "i", ":", "i", "+", "1", ",", ":", ",", ":", ",", ":", ",", "c", "]", "+=", "F", ".", "grid_sample", "(", "heatmaps", "[", "c", "]", "[", "i", ":", "i", "+", "1", ",", ":", ",", ":", ",", ":", "]", ",", "sample_grid", ",", "align_corners", "=", "True", ")", "\n", "\n", "# cubes = cubes.mean(dim=-1)", "\n", "", "", "", "cubes", "=", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "cubes", ",", "bounding", ")", ",", "dim", "=", "-", "1", ")", "/", "(", "torch", ".", "sum", "(", "bounding", ",", "dim", "=", "-", "1", ")", "+", "1e-6", ")", "\n", "cubes", "[", "cubes", "!=", "cubes", "]", "=", "0.0", "\n", "cubes", "=", "cubes", ".", "clamp", "(", "0.0", ",", "1.0", ")", "\n", "\n", "cubes", "=", "cubes", ".", "view", "(", "batch_size", ",", "num_joints", ",", "cube_size", "[", "0", "]", ",", "cube_size", "[", "1", "]", ",", "cube_size", "[", "2", "]", ")", "##", "\n", "return", "cubes", ",", "grids", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.project_layer.ProjectLayer.forward": [[103, 106], ["project_layer.ProjectLayer.get_voxel"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.project_layer.ProjectLayer.get_voxel"], ["", "def", "forward", "(", "self", ",", "heatmaps", ",", "meta", ",", "grid_size", ",", "grid_center", ",", "cube_size", ")", ":", "\n", "        ", "cubes", ",", "grids", "=", "self", ".", "get_voxel", "(", "heatmaps", ",", "meta", ",", "grid_size", ",", "grid_center", ",", "cube_size", ")", "\n", "return", "cubes", ",", "grids", "", "", "", ""]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.pose_resnet.BasicBlock.__init__": [[30, 39], ["torch.Module.__init__", "pose_resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "pose_resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.AverageMeter.__init__", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.pose_resnet.conv3x3", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.pose_resnet.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ",", "momentum", "=", "BN_MOMENTUM", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ",", "momentum", "=", "BN_MOMENTUM", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.pose_resnet.BasicBlock.forward": [[40, 57], ["pose_resnet.BasicBlock.conv1", "pose_resnet.BasicBlock.bn1", "pose_resnet.BasicBlock.relu", "pose_resnet.BasicBlock.conv2", "pose_resnet.BasicBlock.bn2", "pose_resnet.BasicBlock.relu", "pose_resnet.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.pose_resnet.Bottleneck.__init__": [[62, 76], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.AverageMeter.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ",", "momentum", "=", "BN_MOMENTUM", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ",", "momentum", "=", "BN_MOMENTUM", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ",", "kernel_size", "=", "1", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "self", ".", "expansion", ",", "\n", "momentum", "=", "BN_MOMENTUM", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.pose_resnet.Bottleneck.forward": [[77, 98], ["pose_resnet.Bottleneck.conv1", "pose_resnet.Bottleneck.bn1", "pose_resnet.Bottleneck.relu", "pose_resnet.Bottleneck.conv2", "pose_resnet.Bottleneck.bn2", "pose_resnet.Bottleneck.relu", "pose_resnet.Bottleneck.conv3", "pose_resnet.Bottleneck.bn3", "pose_resnet.Bottleneck.relu", "pose_resnet.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.pose_resnet.PoseResNet.__init__": [[102, 130], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "pose_resnet.PoseResNet._make_layer", "pose_resnet.PoseResNet._make_layer", "pose_resnet.PoseResNet._make_layer", "pose_resnet.PoseResNet._make_layer", "pose_resnet.PoseResNet._make_deconv_layer", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.AverageMeter.__init__", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.pose_resnet.PoseResNet._make_layer", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.pose_resnet.PoseResNet._make_layer", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.pose_resnet.PoseResNet._make_layer", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.pose_resnet.PoseResNet._make_layer", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.pose_resnet.PoseResNet._make_deconv_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "cfg", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "inplanes", "=", "64", "\n", "self", ".", "deconv_with_bias", "=", "cfg", ".", "POSE_RESNET", ".", "DECONV_WITH_BIAS", "\n", "\n", "super", "(", "PoseResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ",", "momentum", "=", "BN_MOMENTUM", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "\n", "# used for deconv layers", "\n", "self", ".", "deconv_layers", "=", "self", ".", "_make_deconv_layer", "(", "\n", "cfg", ".", "POSE_RESNET", ".", "NUM_DECONV_LAYERS", ",", "\n", "cfg", ".", "POSE_RESNET", ".", "NUM_DECONV_FILTERS", ",", "\n", "cfg", ".", "POSE_RESNET", ".", "NUM_DECONV_KERNELS", ",", "\n", ")", "\n", "\n", "self", ".", "final_layer", "=", "nn", ".", "Conv2d", "(", "\n", "in_channels", "=", "cfg", ".", "POSE_RESNET", ".", "NUM_DECONV_FILTERS", "[", "-", "1", "]", ",", "\n", "out_channels", "=", "cfg", ".", "NETWORK", ".", "NUM_JOINTS", ",", "\n", "kernel_size", "=", "cfg", ".", "POSE_RESNET", ".", "FINAL_CONV_KERNEL", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", "if", "cfg", ".", "POSE_RESNET", ".", "FINAL_CONV_KERNEL", "==", "3", "else", "0", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.pose_resnet.PoseResNet._make_layer": [[132, 148], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ",", "momentum", "=", "BN_MOMENTUM", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.pose_resnet.PoseResNet._get_deconv_cfg": [[149, 161], ["None"], "methods", ["None"], ["", "def", "_get_deconv_cfg", "(", "self", ",", "deconv_kernel", ",", "index", ")", ":", "\n", "        ", "if", "deconv_kernel", "==", "4", ":", "\n", "            ", "padding", "=", "1", "\n", "output_padding", "=", "0", "\n", "", "elif", "deconv_kernel", "==", "3", ":", "\n", "            ", "padding", "=", "1", "\n", "output_padding", "=", "1", "\n", "", "elif", "deconv_kernel", "==", "2", ":", "\n", "            ", "padding", "=", "0", "\n", "output_padding", "=", "0", "\n", "\n", "", "return", "deconv_kernel", ",", "padding", ",", "output_padding", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.pose_resnet.PoseResNet._make_deconv_layer": [[162, 188], ["range", "torch.Sequential", "torch.Sequential", "len", "len", "pose_resnet.PoseResNet._get_deconv_cfg", "layers.append", "layers.append", "layers.append", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.pose_resnet.PoseResNet._get_deconv_cfg"], ["", "def", "_make_deconv_layer", "(", "self", ",", "num_layers", ",", "num_filters", ",", "num_kernels", ")", ":", "\n", "        ", "assert", "num_layers", "==", "len", "(", "num_filters", ")", ",", "'ERROR: num_deconv_layers is different len(num_deconv_filters)'", "\n", "assert", "num_layers", "==", "len", "(", "num_kernels", ")", ",", "'ERROR: num_deconv_layers is different len(num_deconv_filters)'", "\n", "\n", "layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_layers", ")", ":", "\n", "            ", "kernel", ",", "padding", ",", "output_padding", "=", "self", ".", "_get_deconv_cfg", "(", "num_kernels", "[", "i", "]", ",", "i", ")", "\n", "\n", "planes", "=", "num_filters", "[", "i", "]", "\n", "layers", ".", "append", "(", "\n", "nn", ".", "ConvTranspose2d", "(", "\n", "in_channels", "=", "self", ".", "inplanes", ",", "\n", "out_channels", "=", "planes", ",", "\n", "kernel_size", "=", "kernel", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "padding", ",", "\n", "output_padding", "=", "output_padding", ",", "\n", "bias", "=", "self", ".", "deconv_with_bias", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "planes", ",", "momentum", "=", "BN_MOMENTUM", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.pose_resnet.PoseResNet.forward": [[189, 204], ["pose_resnet.PoseResNet.conv1", "pose_resnet.PoseResNet.bn1", "pose_resnet.PoseResNet.relu", "pose_resnet.PoseResNet.maxpool", "pose_resnet.PoseResNet.layer1", "pose_resnet.PoseResNet.layer2", "pose_resnet.PoseResNet.layer3", "pose_resnet.PoseResNet.layer4", "pose_resnet.PoseResNet.deconv_layers", "pose_resnet.PoseResNet.final_layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "deconv_layers", "(", "x", ")", "\n", "x", "=", "self", ".", "final_layer", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.pose_resnet.PoseResNet.init_weights": [[205, 253], ["os.path.dirname", "os.path.join", "os.path.isfile", "torch.load", "torch.load", "torch.load", "torch.load", "logger.info", "pose_resnet.PoseResNet.state_dict", "torch.load.items", "torch.load.items", "pose_resnet.PoseResNet.load_state_dict", "logger.info", "pose_resnet.PoseResNet.deconv_layers.named_modules", "logger.info", "pose_resnet.PoseResNet.final_layer.modules", "logger.info", "pose_resnet.PoseResNet.modules", "isinstance", "isinstance", "isinstance", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "logger.info", "logger.info", "torch.init.normal_", "torch.init.normal_", "isinstance", "logger.info", "logger.info", "torch.init.normal_", "torch.init.normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.normal_", "torch.init.normal_", "isinstance", "torch.init.constant_", "torch.init.constant_", "logger.info", "logger.info", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "torch.init.normal_", "torch.init.normal_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "def", "init_weights", "(", "self", ",", "pretrained", "=", "''", ")", ":", "\n", "        ", "this_dir", "=", "os", ".", "path", ".", "dirname", "(", "__file__", ")", "\n", "pretrained", "=", "os", ".", "path", ".", "join", "(", "this_dir", ",", "'../..'", ",", "pretrained", ")", "\n", "if", "os", ".", "path", ".", "isfile", "(", "pretrained", ")", ":", "\n", "            ", "pretrained_state_dict", "=", "torch", ".", "load", "(", "pretrained", ")", "\n", "logger", ".", "info", "(", "'=> loading pretrained models {}'", ".", "format", "(", "pretrained", ")", ")", "\n", "\n", "model_state_dict", "=", "self", ".", "state_dict", "(", ")", "\n", "for", "k", ",", "v", "in", "pretrained_state_dict", ".", "items", "(", ")", ":", "\n", "                ", "if", "\"final_layer\"", "in", "k", ":", "\n", "                    ", "pretrained_state_dict", "[", "k", "]", "=", "torch", ".", "zeros_like", "(", "model_state_dict", "[", "k", "]", ")", "\n", "", "", "self", ".", "load_state_dict", "(", "pretrained_state_dict", ",", "strict", "=", "False", ")", "\n", "\n", "logger", ".", "info", "(", "'=> init deconv weights from normal distribution'", ")", "\n", "for", "name", ",", "m", "in", "self", ".", "deconv_layers", ".", "named_modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "m", ",", "nn", ".", "ConvTranspose2d", ")", ":", "\n", "                    ", "logger", ".", "info", "(", "'=> init {}.weight as normal(0, 0.001)'", ".", "format", "(", "name", ")", ")", "\n", "logger", ".", "info", "(", "'=> init {}.bias as 0'", ".", "format", "(", "name", ")", ")", "\n", "nn", ".", "init", ".", "normal_", "(", "m", ".", "weight", ",", "std", "=", "0.001", ")", "\n", "if", "self", ".", "deconv_with_bias", ":", "\n", "                        ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                    ", "logger", ".", "info", "(", "'=> init {}.weight as 1'", ".", "format", "(", "name", ")", ")", "\n", "logger", ".", "info", "(", "'=> init {}.bias as 0'", ".", "format", "(", "name", ")", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "logger", ".", "info", "(", "'=> init final conv weights from normal distribution'", ")", "\n", "for", "m", "in", "self", ".", "final_layer", ".", "modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "# nn.init.kaiming_normal_(m.weight, mode='fan_out', nonlinearity='relu')", "\n", "                    ", "logger", ".", "info", "(", "'=> init {}.weight as normal(0, 0.001)'", ".", "format", "(", "name", ")", ")", "\n", "logger", ".", "info", "(", "'=> init {}.bias as 0'", ".", "format", "(", "name", ")", ")", "\n", "nn", ".", "init", ".", "normal_", "(", "m", ".", "weight", ",", "std", "=", "0.001", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "", "else", ":", "\n", "            ", "logger", ".", "info", "(", "'=> init weights from normal distribution'", ")", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "# nn.init.kaiming_normal_(m.weight, mode='fan_out', nonlinearity='relu')", "\n", "                    ", "nn", ".", "init", ".", "normal_", "(", "m", ".", "weight", ",", "std", "=", "0.001", ")", "\n", "# nn.init.constant_(m.bias, 0)", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "ConvTranspose2d", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "normal_", "(", "m", ".", "weight", ",", "std", "=", "0.001", ")", "\n", "if", "self", ".", "deconv_with_bias", ":", "\n", "                        ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.pose_resnet.conv3x3": [[21, 25], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.pose_resnet.get_pose_net": [[262, 273], ["pose_resnet.PoseResNet", "pose_resnet.PoseResNet.init_weights"], "function", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.pose_resnet.PoseResNet.init_weights"], ["def", "get_pose_net", "(", "cfg", ",", "is_train", ",", "**", "kwargs", ")", ":", "\n", "    ", "num_layers", "=", "cfg", ".", "POSE_RESNET", ".", "NUM_LAYERS", "\n", "\n", "block_class", ",", "layers", "=", "resnet_spec", "[", "num_layers", "]", "\n", "\n", "model", "=", "PoseResNet", "(", "block_class", ",", "layers", ",", "cfg", ",", "**", "kwargs", ")", "\n", "\n", "if", "is_train", ":", "\n", "        ", "model", ".", "init_weights", "(", "cfg", ".", "NETWORK", ".", "PRETRAINED", ")", "\n", "\n", "", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.pose_regression_net.SoftArgmaxLayer.__init__": [[15, 18], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "super", "(", "SoftArgmaxLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "beta", "=", "cfg", ".", "NETWORK", ".", "BETA", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.pose_regression_net.SoftArgmaxLayer.forward": [[19, 29], ["torch.sum.size", "torch.sum.size", "torch.sum.size", "torch.sum.size", "torch.sum.size", "torch.sum.size", "torch.sum.reshape", "torch.sum.reshape", "torch.sum.reshape", "torch.softmax", "torch.softmax", "torch.softmax", "grids.unsqueeze.unsqueeze.unsqueeze", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "grids", ")", ":", "\n", "        ", "batch_size", "=", "x", ".", "size", "(", "0", ")", "\n", "channel", "=", "x", ".", "size", "(", "1", ")", "\n", "x", "=", "x", ".", "reshape", "(", "batch_size", ",", "channel", ",", "-", "1", ",", "1", ")", "\n", "# x = F.softmax(x, dim=2)", "\n", "x", "=", "F", ".", "softmax", "(", "self", ".", "beta", "*", "x", ",", "dim", "=", "2", ")", "\n", "grids", "=", "grids", ".", "unsqueeze", "(", "1", ")", "\n", "x", "=", "torch", ".", "mul", "(", "x", ",", "grids", ")", "\n", "x", "=", "torch", ".", "sum", "(", "x", ",", "dim", "=", "2", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.pose_regression_net.PoseRegressionNet.__init__": [[32, 40], ["torch.Module.__init__", "models.project_layer.ProjectLayer", "models.v2v_net.V2VNet", "pose_regression_net.SoftArgmaxLayer"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "super", "(", "PoseRegressionNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "grid_size", "=", "cfg", ".", "PICT_STRUCT", ".", "GRID_SIZE", "\n", "self", ".", "cube_size", "=", "cfg", ".", "PICT_STRUCT", ".", "CUBE_SIZE", "\n", "\n", "self", ".", "project_layer", "=", "ProjectLayer", "(", "cfg", ")", "\n", "self", ".", "v2v_net", "=", "V2VNet", "(", "cfg", ".", "NETWORK", ".", "NUM_JOINTS", ",", "cfg", ".", "NETWORK", ".", "NUM_JOINTS", ")", "\n", "self", ".", "soft_argmax_layer", "=", "SoftArgmaxLayer", "(", "cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.pose_regression_net.PoseRegressionNet.forward": [[41, 54], ["torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "pose_regression_net.PoseRegressionNet.project_layer", "pose_regression_net.PoseRegressionNet.v2v_net", "pose_regression_net.PoseRegressionNet.soft_argmax_layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "all_heatmaps", ",", "meta", ",", "grid_centers", ")", ":", "\n", "        ", "batch_size", "=", "all_heatmaps", "[", "0", "]", ".", "shape", "[", "0", "]", "\n", "num_joints", "=", "all_heatmaps", "[", "0", "]", ".", "shape", "[", "1", "]", "\n", "device", "=", "all_heatmaps", "[", "0", "]", ".", "device", "\n", "pred", "=", "torch", ".", "zeros", "(", "batch_size", ",", "num_joints", ",", "3", ",", "device", "=", "device", ")", "\n", "cubes", ",", "grids", "=", "self", ".", "project_layer", "(", "all_heatmaps", ",", "meta", ",", "\n", "self", ".", "grid_size", ",", "grid_centers", ",", "self", ".", "cube_size", ")", "\n", "\n", "index", "=", "grid_centers", "[", ":", ",", "3", "]", ">=", "0", "\n", "valid_cubes", "=", "self", ".", "v2v_net", "(", "cubes", "[", "index", "]", ")", "\n", "pred", "[", "index", "]", "=", "self", ".", "soft_argmax_layer", "(", "valid_cubes", ",", "grids", "[", "index", "]", ")", "\n", "\n", "return", "pred", "\n", "", "", ""]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.multi_person_posenet.MultiPersonPoseNet.__init__": [[21, 33], ["torch.Module.__init__", "models.cuboid_proposal_net.CuboidProposalNet", "models.pose_regression_net.PoseRegressionNet"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "backbone", ",", "cfg", ")", ":", "\n", "        ", "super", "(", "MultiPersonPoseNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_cand", "=", "cfg", ".", "MULTI_PERSON", ".", "MAX_PEOPLE_NUM", "\n", "self", ".", "num_joints", "=", "cfg", ".", "NETWORK", ".", "NUM_JOINTS", "\n", "\n", "self", ".", "backbone", "=", "backbone", "\n", "self", ".", "root_net", "=", "CuboidProposalNet", "(", "cfg", ")", "\n", "self", ".", "pose_net", "=", "PoseRegressionNet", "(", "cfg", ")", "\n", "\n", "self", ".", "USE_GT", "=", "cfg", ".", "NETWORK", ".", "USE_GT", "\n", "self", ".", "root_id", "=", "cfg", ".", "DATASET", ".", "ROOTIDX", "\n", "self", ".", "dataset_name", "=", "cfg", ".", "DATASET", ".", "TEST_DATASET", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.multi_person_posenet.MultiPersonPoseNet.forward": [[34, 98], ["core.loss.PerJointMSELoss().cuda", "core.loss.PerJointMSELoss().cuda.", "core.loss.PerJointMSELoss().cuda.", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "grid_centers[].reshape", "core.loss.PerJointMSELoss().cuda.", "core.loss.PerJointL1Loss().cuda", "range", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "zip", "len", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "[].float", "range", "multi_person_posenet.MultiPersonPoseNet.root_net", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "multi_person_posenet.MultiPersonPoseNet.backbone", "all_heatmaps.append", "core.loss.PerJointMSELoss", "core.loss.PerJointMSELoss().cuda.", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "core.loss.PerJointMSELoss().cuda.", "core.loss.PerJointL1Loss", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "multi_person_posenet.MultiPersonPoseNet.pose_net", "multi_person_posenet.MultiPersonPoseNet.detach", "range", "[].float", "range", "[].float", "core.loss.PerJointL1Loss().cuda.", "pred[].long", "pred[].long"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "views", "=", "None", ",", "meta", "=", "None", ",", "targets_2d", "=", "None", ",", "weights_2d", "=", "None", ",", "targets_3d", "=", "None", ",", "input_heatmaps", "=", "None", ")", ":", "\n", "        ", "if", "views", "is", "not", "None", ":", "\n", "            ", "all_heatmaps", "=", "[", "]", "\n", "for", "view", "in", "views", ":", "\n", "                ", "heatmaps", "=", "self", ".", "backbone", "(", "view", ")", "\n", "all_heatmaps", ".", "append", "(", "heatmaps", ")", "\n", "", "", "else", ":", "\n", "            ", "all_heatmaps", "=", "input_heatmaps", "\n", "\n", "# all_heatmaps = targets_2d", "\n", "", "device", "=", "all_heatmaps", "[", "0", "]", ".", "device", "\n", "batch_size", "=", "all_heatmaps", "[", "0", "]", ".", "shape", "[", "0", "]", "\n", "\n", "# calculate 2D heatmap loss", "\n", "criterion", "=", "PerJointMSELoss", "(", ")", ".", "cuda", "(", ")", "\n", "loss_2d", "=", "criterion", "(", "torch", ".", "zeros", "(", "1", ",", "device", "=", "device", ")", ",", "torch", ".", "zeros", "(", "1", ",", "device", "=", "device", ")", ")", "\n", "if", "targets_2d", "is", "not", "None", ":", "\n", "            ", "for", "t", ",", "w", ",", "o", "in", "zip", "(", "targets_2d", ",", "weights_2d", ",", "all_heatmaps", ")", ":", "\n", "                ", "loss_2d", "+=", "criterion", "(", "o", ",", "t", ",", "True", ",", "w", ")", "\n", "", "loss_2d", "/=", "len", "(", "all_heatmaps", ")", "\n", "\n", "", "loss_3d", "=", "criterion", "(", "torch", ".", "zeros", "(", "1", ",", "device", "=", "device", ")", ",", "torch", ".", "zeros", "(", "1", ",", "device", "=", "device", ")", ")", "\n", "if", "self", ".", "USE_GT", ":", "\n", "            ", "num_person", "=", "meta", "[", "0", "]", "[", "'num_person'", "]", "\n", "grid_centers", "=", "torch", ".", "zeros", "(", "batch_size", ",", "self", ".", "num_cand", ",", "5", ",", "device", "=", "device", ")", "\n", "grid_centers", "[", ":", ",", ":", ",", "0", ":", "3", "]", "=", "meta", "[", "0", "]", "[", "'roots_3d'", "]", ".", "float", "(", ")", "\n", "grid_centers", "[", ":", ",", ":", ",", "3", "]", "=", "-", "1.0", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "                ", "grid_centers", "[", "i", ",", ":", "num_person", "[", "i", "]", ",", "3", "]", "=", "torch", ".", "tensor", "(", "range", "(", "num_person", "[", "i", "]", ")", ",", "device", "=", "device", ")", "\n", "grid_centers", "[", "i", ",", ":", "num_person", "[", "i", "]", ",", "4", "]", "=", "1.0", "\n", "", "", "else", ":", "\n", "            ", "root_cubes", ",", "grid_centers", "=", "self", ".", "root_net", "(", "all_heatmaps", ",", "meta", ")", "\n", "\n", "# calculate 3D heatmap loss", "\n", "if", "targets_3d", "is", "not", "None", ":", "\n", "                ", "loss_3d", "=", "criterion", "(", "root_cubes", ",", "targets_3d", ")", "\n", "", "del", "root_cubes", "\n", "\n", "", "pred", "=", "torch", ".", "zeros", "(", "batch_size", ",", "self", ".", "num_cand", ",", "self", ".", "num_joints", ",", "5", ",", "device", "=", "device", ")", "\n", "pred", "[", ":", ",", ":", ",", ":", ",", "3", ":", "]", "=", "grid_centers", "[", ":", ",", ":", ",", "3", ":", "]", ".", "reshape", "(", "batch_size", ",", "-", "1", ",", "1", ",", "2", ")", "# matched gt", "\n", "\n", "loss_cord", "=", "criterion", "(", "torch", ".", "zeros", "(", "1", ",", "device", "=", "device", ")", ",", "torch", ".", "zeros", "(", "1", ",", "device", "=", "device", ")", ")", "\n", "criterion_cord", "=", "PerJointL1Loss", "(", ")", ".", "cuda", "(", ")", "\n", "count", "=", "0", "\n", "\n", "for", "n", "in", "range", "(", "self", ".", "num_cand", ")", ":", "\n", "            ", "index", "=", "(", "pred", "[", ":", ",", "n", ",", "0", ",", "3", "]", ">=", "0", ")", "\n", "if", "torch", ".", "sum", "(", "index", ")", ">", "0", ":", "\n", "                ", "single_pose", "=", "self", ".", "pose_net", "(", "all_heatmaps", ",", "meta", ",", "grid_centers", "[", ":", ",", "n", "]", ")", "\n", "pred", "[", ":", ",", "n", ",", ":", ",", "0", ":", "3", "]", "=", "single_pose", ".", "detach", "(", ")", "\n", "\n", "# calculate 3D pose loss", "\n", "if", "self", ".", "training", "and", "'joints_3d'", "in", "meta", "[", "0", "]", "and", "'joints_3d_vis'", "in", "meta", "[", "0", "]", ":", "\n", "                    ", "gt_3d", "=", "meta", "[", "0", "]", "[", "'joints_3d'", "]", ".", "float", "(", ")", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "                        ", "if", "pred", "[", "i", ",", "n", ",", "0", ",", "3", "]", ">=", "0", ":", "\n", "                            ", "targets", "=", "gt_3d", "[", "i", ":", "i", "+", "1", ",", "pred", "[", "i", ",", "n", ",", "0", ",", "3", "]", ".", "long", "(", ")", "]", "\n", "weights_3d", "=", "meta", "[", "0", "]", "[", "'joints_3d_vis'", "]", "[", "i", ":", "i", "+", "1", ",", "pred", "[", "i", ",", "n", ",", "0", ",", "3", "]", ".", "long", "(", ")", ",", ":", ",", "0", ":", "1", "]", ".", "float", "(", ")", "\n", "count", "+=", "1", "\n", "loss_cord", "=", "(", "loss_cord", "*", "(", "count", "-", "1", ")", "+", "\n", "criterion_cord", "(", "single_pose", "[", "i", ":", "i", "+", "1", "]", ",", "targets", ",", "True", ",", "weights_3d", ")", ")", "/", "count", "\n", "", "", "", "del", "single_pose", "\n", "\n", "", "", "return", "pred", ",", "all_heatmaps", ",", "grid_centers", ",", "loss_2d", ",", "loss_3d", ",", "loss_cord", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.multi_person_posenet.get_multi_person_pose_net": [[100, 107], ["multi_person_posenet.MultiPersonPoseNet", "eval"], "function", ["None"], ["", "", "def", "get_multi_person_pose_net", "(", "cfg", ",", "is_train", "=", "True", ")", ":", "\n", "    ", "if", "cfg", ".", "BACKBONE_MODEL", ":", "\n", "        ", "backbone", "=", "eval", "(", "cfg", ".", "BACKBONE_MODEL", "+", "'.get_pose_net'", ")", "(", "cfg", ",", "is_train", "=", "is_train", ")", "\n", "", "else", ":", "\n", "        ", "backbone", "=", "None", "\n", "", "model", "=", "MultiPersonPoseNet", "(", "backbone", ",", "cfg", ")", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.cuboid_proposal_net.ProposalLayer.__init__": [[15, 24], ["torch.Module.__init__", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "super", "(", "ProposalLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "grid_size", "=", "torch", ".", "tensor", "(", "cfg", ".", "MULTI_PERSON", ".", "SPACE_SIZE", ")", "\n", "self", ".", "cube_size", "=", "torch", ".", "tensor", "(", "cfg", ".", "MULTI_PERSON", ".", "INITIAL_CUBE_SIZE", ")", "\n", "self", ".", "grid_center", "=", "torch", ".", "tensor", "(", "cfg", ".", "MULTI_PERSON", ".", "SPACE_CENTER", ")", "\n", "self", ".", "num_cand", "=", "cfg", ".", "MULTI_PERSON", ".", "MAX_PEOPLE_NUM", "\n", "self", ".", "root_id", "=", "cfg", ".", "DATASET", ".", "ROOTIDX", "\n", "self", ".", "num_joints", "=", "cfg", ".", "NETWORK", ".", "NUM_JOINTS", "\n", "self", ".", "threshold", "=", "cfg", ".", "MULTI_PERSON", ".", "THRESHOLD", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.cuboid_proposal_net.ProposalLayer.filter_proposal": [[25, 41], ["torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "range", "topk_index[].reshape", "gt_3d[].reshape", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.min", "torch.min", "torch.min", "torch.min", "torch.sum", "torch.sum", "torch.sum", "torch.sum"], "methods", ["None"], ["", "def", "filter_proposal", "(", "self", ",", "topk_index", ",", "gt_3d", ",", "num_person", ")", ":", "\n", "        ", "batch_size", "=", "topk_index", ".", "shape", "[", "0", "]", "\n", "cand_num", "=", "topk_index", ".", "shape", "[", "1", "]", "\n", "cand2gt", "=", "torch", ".", "zeros", "(", "batch_size", ",", "cand_num", ")", "\n", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "cand", "=", "topk_index", "[", "i", "]", ".", "reshape", "(", "cand_num", ",", "1", ",", "-", "1", ")", "\n", "gt", "=", "gt_3d", "[", "i", ",", ":", "num_person", "[", "i", "]", "]", ".", "reshape", "(", "1", ",", "num_person", "[", "i", "]", ",", "-", "1", ")", "\n", "\n", "dist", "=", "torch", ".", "sqrt", "(", "torch", ".", "sum", "(", "(", "cand", "-", "gt", ")", "**", "2", ",", "dim", "=", "-", "1", ")", ")", "\n", "min_dist", ",", "min_gt", "=", "torch", ".", "min", "(", "dist", ",", "dim", "=", "-", "1", ")", "\n", "\n", "cand2gt", "[", "i", "]", "=", "min_gt", "\n", "cand2gt", "[", "i", "]", "[", "min_dist", ">", "500.0", "]", "=", "-", "1.0", "\n", "\n", "", "return", "cand2gt", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.cuboid_proposal_net.ProposalLayer.get_real_loc": [[42, 49], ["cuboid_proposal_net.ProposalLayer.cube_size.to", "cuboid_proposal_net.ProposalLayer.grid_size.to", "cuboid_proposal_net.ProposalLayer.grid_center.to", "index.float"], "methods", ["None"], ["", "def", "get_real_loc", "(", "self", ",", "index", ")", ":", "\n", "        ", "device", "=", "index", ".", "device", "\n", "cube_size", "=", "self", ".", "cube_size", ".", "to", "(", "device", "=", "device", ",", "dtype", "=", "torch", ".", "float", ")", "\n", "grid_size", "=", "self", ".", "grid_size", ".", "to", "(", "device", "=", "device", ")", "\n", "grid_center", "=", "self", ".", "grid_center", ".", "to", "(", "device", "=", "device", ")", "\n", "loc", "=", "index", ".", "float", "(", ")", "/", "(", "cube_size", "-", "1", ")", "*", "grid_size", "+", "grid_center", "-", "grid_size", "/", "2.0", "\n", "return", "loc", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.cuboid_proposal_net.ProposalLayer.forward": [[50, 87], ["core.proposal.nms", "cuboid_proposal_net.ProposalLayer.get_real_loc", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "root_cubes.detach", "[].float", "cuboid_proposal_net.ProposalLayer.filter_proposal"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.proposal.nms", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.cuboid_proposal_net.ProposalLayer.get_real_loc", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.cuboid_proposal_net.ProposalLayer.filter_proposal"], ["", "def", "forward", "(", "self", ",", "root_cubes", ",", "meta", ")", ":", "\n", "        ", "batch_size", "=", "root_cubes", ".", "shape", "[", "0", "]", "\n", "\n", "topk_values", ",", "topk_unravel_index", "=", "nms", "(", "root_cubes", ".", "detach", "(", ")", ",", "self", ".", "num_cand", ")", "\n", "topk_unravel_index", "=", "self", ".", "get_real_loc", "(", "topk_unravel_index", ")", "\n", "\n", "grid_centers", "=", "torch", ".", "zeros", "(", "batch_size", ",", "self", ".", "num_cand", ",", "5", ",", "device", "=", "root_cubes", ".", "device", ")", "\n", "grid_centers", "[", ":", ",", ":", ",", "0", ":", "3", "]", "=", "topk_unravel_index", "\n", "grid_centers", "[", ":", ",", ":", ",", "4", "]", "=", "topk_values", "\n", "\n", "# match gt to filter those invalid proposals for training/validate PRN", "\n", "if", "self", ".", "training", "and", "(", "'roots_3d'", "in", "meta", "[", "0", "]", "and", "'num_person'", "in", "meta", "[", "0", "]", ")", ":", "\n", "            ", "gt_3d", "=", "meta", "[", "0", "]", "[", "'roots_3d'", "]", ".", "float", "(", ")", "\n", "num_person", "=", "meta", "[", "0", "]", "[", "'num_person'", "]", "\n", "cand2gt", "=", "self", ".", "filter_proposal", "(", "topk_unravel_index", ",", "gt_3d", ",", "num_person", ")", "\n", "grid_centers", "[", ":", ",", ":", ",", "3", "]", "=", "cand2gt", "\n", "", "else", ":", "\n", "            ", "grid_centers", "[", ":", ",", ":", ",", "3", "]", "=", "(", "topk_values", ">", "self", ".", "threshold", ")", ".", "float", "(", ")", "-", "1.0", "# if ground-truths are not available.", "\n", "\n", "# nms", "\n", "# for b in range(batch_size):", "\n", "#     centers = copy.deepcopy(topk_unravel_index[b, :, :3])", "\n", "#     scores = copy.deepcopy(topk_values[b])", "\n", "#     keep = []", "\n", "#     keep_s = []", "\n", "#     while len(centers):", "\n", "#         keep.append(centers[0])", "\n", "#         keep_s.append(scores[0])", "\n", "#         dist = torch.sqrt(torch.sum((centers[0] - centers)**2, dim=-1))", "\n", "#         index = (dist > 500.0) & (scores > 0.1)", "\n", "#         centers = centers[index]", "\n", "#         scores = scores[index]", "\n", "#     grid_centers[b, :len(keep), :3] = torch.stack(keep, dim=0)", "\n", "#     grid_centers[b, :len(keep), 3] = 0.0", "\n", "#     grid_centers[b, :len(keep), 4] = torch.stack(keep_s, dim=0)", "\n", "\n", "", "return", "grid_centers", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.cuboid_proposal_net.CuboidProposalNet.__init__": [[90, 99], ["torch.Module.__init__", "models.project_layer.ProjectLayer", "models.v2v_net.V2VNet", "cuboid_proposal_net.ProposalLayer"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "super", "(", "CuboidProposalNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "grid_size", "=", "cfg", ".", "MULTI_PERSON", ".", "SPACE_SIZE", "\n", "self", ".", "cube_size", "=", "cfg", ".", "MULTI_PERSON", ".", "INITIAL_CUBE_SIZE", "\n", "self", ".", "grid_center", "=", "cfg", ".", "MULTI_PERSON", ".", "SPACE_CENTER", "\n", "\n", "self", ".", "project_layer", "=", "ProjectLayer", "(", "cfg", ")", "\n", "self", ".", "v2v_net", "=", "V2VNet", "(", "cfg", ".", "NETWORK", ".", "NUM_JOINTS", ",", "1", ")", "\n", "self", ".", "proposal_layer", "=", "ProposalLayer", "(", "cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.cuboid_proposal_net.CuboidProposalNet.forward": [[100, 109], ["cuboid_proposal_net.CuboidProposalNet.project_layer", "cuboid_proposal_net.CuboidProposalNet.v2v_net", "root_cubes.squeeze.squeeze.squeeze", "cuboid_proposal_net.CuboidProposalNet.proposal_layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "all_heatmaps", ",", "meta", ")", ":", "\n", "\n", "        ", "initial_cubes", ",", "grids", "=", "self", ".", "project_layer", "(", "all_heatmaps", ",", "meta", ",", "\n", "self", ".", "grid_size", ",", "[", "self", ".", "grid_center", "]", ",", "self", ".", "cube_size", ")", "\n", "root_cubes", "=", "self", ".", "v2v_net", "(", "initial_cubes", ")", "\n", "root_cubes", "=", "root_cubes", ".", "squeeze", "(", "1", ")", "\n", "grid_centers", "=", "self", ".", "proposal_layer", "(", "root_cubes", ",", "meta", ")", "\n", "\n", "return", "root_cubes", ",", "grid_centers", "", "", "", ""]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.v2v_net.Basic3DBlock.__init__": [[11, 17], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "kernel_size", ")", ":", "\n", "        ", "super", "(", "Basic3DBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "block", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "(", "(", "kernel_size", "-", "1", ")", "//", "2", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "out_planes", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.v2v_net.Basic3DBlock.forward": [[19, 21], ["v2v_net.Basic3DBlock.block"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "block", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.v2v_net.Res3DBlock.__init__": [[24, 40], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ")", ":", "\n", "        ", "super", "(", "Res3DBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "res_branch", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "out_planes", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv3d", "(", "out_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "out_planes", ")", "\n", ")", "\n", "\n", "if", "in_planes", "==", "out_planes", ":", "\n", "            ", "self", ".", "skip_con", "=", "nn", ".", "Sequential", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "skip_con", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "out_planes", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.v2v_net.Res3DBlock.forward": [[42, 46], ["v2v_net.Res3DBlock.res_branch", "v2v_net.Res3DBlock.skip_con", "torch.relu", "torch.relu"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "self", ".", "res_branch", "(", "x", ")", "\n", "skip", "=", "self", ".", "skip_con", "(", "x", ")", "\n", "return", "F", ".", "relu", "(", "res", "+", "skip", ",", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.v2v_net.Pool3DBlock.__init__": [[49, 52], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "pool_size", ")", ":", "\n", "        ", "super", "(", "Pool3DBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pool_size", "=", "pool_size", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.v2v_net.Pool3DBlock.forward": [[53, 55], ["torch.max_pool3d", "torch.max_pool3d"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "F", ".", "max_pool3d", "(", "x", ",", "kernel_size", "=", "self", ".", "pool_size", ",", "stride", "=", "self", ".", "pool_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.v2v_net.Upsample3DBlock.__init__": [[58, 66], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "kernel_size", ",", "stride", ")", ":", "\n", "        ", "super", "(", "Upsample3DBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "(", "kernel_size", "==", "2", ")", "\n", "assert", "(", "stride", "==", "2", ")", "\n", "self", ".", "block", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ConvTranspose3d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "0", ",", "output_padding", "=", "0", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "out_planes", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.v2v_net.Upsample3DBlock.forward": [[68, 70], ["v2v_net.Upsample3DBlock.block"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "block", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.v2v_net.EncoderDecorder.__init__": [[73, 90], ["torch.Module.__init__", "v2v_net.Pool3DBlock", "v2v_net.Res3DBlock", "v2v_net.Pool3DBlock", "v2v_net.Res3DBlock", "v2v_net.Res3DBlock", "v2v_net.Res3DBlock", "v2v_net.Upsample3DBlock", "v2v_net.Res3DBlock", "v2v_net.Upsample3DBlock", "v2v_net.Res3DBlock", "v2v_net.Res3DBlock"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "EncoderDecorder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder_pool1", "=", "Pool3DBlock", "(", "2", ")", "\n", "self", ".", "encoder_res1", "=", "Res3DBlock", "(", "32", ",", "64", ")", "\n", "self", ".", "encoder_pool2", "=", "Pool3DBlock", "(", "2", ")", "\n", "self", ".", "encoder_res2", "=", "Res3DBlock", "(", "64", ",", "128", ")", "\n", "\n", "self", ".", "mid_res", "=", "Res3DBlock", "(", "128", ",", "128", ")", "\n", "\n", "self", ".", "decoder_res2", "=", "Res3DBlock", "(", "128", ",", "128", ")", "\n", "self", ".", "decoder_upsample2", "=", "Upsample3DBlock", "(", "128", ",", "64", ",", "2", ",", "2", ")", "\n", "self", ".", "decoder_res1", "=", "Res3DBlock", "(", "64", ",", "64", ")", "\n", "self", ".", "decoder_upsample1", "=", "Upsample3DBlock", "(", "64", ",", "32", ",", "2", ",", "2", ")", "\n", "\n", "self", ".", "skip_res1", "=", "Res3DBlock", "(", "32", ",", "32", ")", "\n", "self", ".", "skip_res2", "=", "Res3DBlock", "(", "64", ",", "64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.v2v_net.EncoderDecorder.forward": [[91, 111], ["v2v_net.EncoderDecorder.skip_res1", "v2v_net.EncoderDecorder.encoder_pool1", "v2v_net.EncoderDecorder.encoder_res1", "v2v_net.EncoderDecorder.skip_res2", "v2v_net.EncoderDecorder.encoder_pool2", "v2v_net.EncoderDecorder.encoder_res2", "v2v_net.EncoderDecorder.mid_res", "v2v_net.EncoderDecorder.decoder_res2", "v2v_net.EncoderDecorder.decoder_upsample2", "v2v_net.EncoderDecorder.decoder_res1", "v2v_net.EncoderDecorder.decoder_upsample1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "skip_x1", "=", "self", ".", "skip_res1", "(", "x", ")", "\n", "x", "=", "self", ".", "encoder_pool1", "(", "x", ")", "\n", "x", "=", "self", ".", "encoder_res1", "(", "x", ")", "\n", "\n", "skip_x2", "=", "self", ".", "skip_res2", "(", "x", ")", "\n", "x", "=", "self", ".", "encoder_pool2", "(", "x", ")", "\n", "x", "=", "self", ".", "encoder_res2", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "mid_res", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "decoder_res2", "(", "x", ")", "\n", "x", "=", "self", ".", "decoder_upsample2", "(", "x", ")", "\n", "x", "=", "x", "+", "skip_x2", "\n", "\n", "x", "=", "self", ".", "decoder_res1", "(", "x", ")", "\n", "x", "=", "self", ".", "decoder_upsample1", "(", "x", ")", "\n", "x", "=", "x", "+", "skip_x1", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.v2v_net.V2VNet.__init__": [[114, 127], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "v2v_net.EncoderDecorder", "torch.Conv3d", "torch.Conv3d", "v2v_net.V2VNet._initialize_weights", "v2v_net.Basic3DBlock", "v2v_net.Res3DBlock"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.AverageMeter.__init__", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.v2v_net.V2VNet._initialize_weights"], ["    ", "def", "__init__", "(", "self", ",", "input_channels", ",", "output_channels", ")", ":", "\n", "        ", "super", "(", "V2VNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "front_layers", "=", "nn", ".", "Sequential", "(", "\n", "Basic3DBlock", "(", "input_channels", ",", "16", ",", "7", ")", ",", "\n", "Res3DBlock", "(", "16", ",", "32", ")", ",", "\n", ")", "\n", "\n", "self", ".", "encoder_decoder", "=", "EncoderDecorder", "(", ")", "\n", "\n", "self", ".", "output_layer", "=", "nn", ".", "Conv3d", "(", "32", ",", "output_channels", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "\n", "self", ".", "_initialize_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.v2v_net.V2VNet.forward": [[128, 134], ["v2v_net.V2VNet.front_layers", "v2v_net.V2VNet.encoder_decoder", "v2v_net.V2VNet.output_layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "front_layers", "(", "x", ")", "\n", "x", "=", "self", ".", "encoder_decoder", "(", "x", ")", "\n", "x", "=", "self", ".", "output_layer", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.models.v2v_net.V2VNet._initialize_weights": [[135, 145], ["v2v_net.V2VNet.modules", "isinstance", "torch.init.normal_", "torch.init.normal_", "torch.init.constant_", "torch.init.constant_", "isinstance", "torch.init.normal_", "torch.init.normal_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "def", "_initialize_weights", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv3d", ")", ":", "\n", "# nn.init.xavier_normal_(m.weight)", "\n", "                ", "nn", ".", "init", ".", "normal_", "(", "m", ".", "weight", ",", "0", ",", "0.001", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "ConvTranspose3d", ")", ":", "\n", "# nn.init.xavier_normal_(m.weight)", "\n", "                ", "nn", ".", "init", ".", "normal_", "(", "m", ".", "weight", ",", "0", ",", "0.001", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.config._update_dict": [[189, 214], ["v.items", "numpy.array", "numpy.array", "isinstance", "isinstance", "ValueError", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "isinstance", "eval", "isinstance", "eval"], "function", ["None"], ["def", "_update_dict", "(", "k", ",", "v", ")", ":", "\n", "    ", "if", "k", "==", "'DATASET'", ":", "\n", "        ", "if", "'MEAN'", "in", "v", "and", "v", "[", "'MEAN'", "]", ":", "\n", "            ", "v", "[", "'MEAN'", "]", "=", "np", ".", "array", "(", "\n", "[", "eval", "(", "x", ")", "if", "isinstance", "(", "x", ",", "str", ")", "else", "x", "for", "x", "in", "v", "[", "'MEAN'", "]", "]", ")", "\n", "", "if", "'STD'", "in", "v", "and", "v", "[", "'STD'", "]", ":", "\n", "            ", "v", "[", "'STD'", "]", "=", "np", ".", "array", "(", "\n", "[", "eval", "(", "x", ")", "if", "isinstance", "(", "x", ",", "str", ")", "else", "x", "for", "x", "in", "v", "[", "'STD'", "]", "]", ")", "\n", "", "", "if", "k", "==", "'NETWORK'", ":", "\n", "        ", "if", "'HEATMAP_SIZE'", "in", "v", ":", "\n", "            ", "if", "isinstance", "(", "v", "[", "'HEATMAP_SIZE'", "]", ",", "int", ")", ":", "\n", "                ", "v", "[", "'HEATMAP_SIZE'", "]", "=", "np", ".", "array", "(", "\n", "[", "v", "[", "'HEATMAP_SIZE'", "]", ",", "v", "[", "'HEATMAP_SIZE'", "]", "]", ")", "\n", "", "else", ":", "\n", "                ", "v", "[", "'HEATMAP_SIZE'", "]", "=", "np", ".", "array", "(", "v", "[", "'HEATMAP_SIZE'", "]", ")", "\n", "", "", "if", "'IMAGE_SIZE'", "in", "v", ":", "\n", "            ", "if", "isinstance", "(", "v", "[", "'IMAGE_SIZE'", "]", ",", "int", ")", ":", "\n", "                ", "v", "[", "'IMAGE_SIZE'", "]", "=", "np", ".", "array", "(", "[", "v", "[", "'IMAGE_SIZE'", "]", ",", "v", "[", "'IMAGE_SIZE'", "]", "]", ")", "\n", "", "else", ":", "\n", "                ", "v", "[", "'IMAGE_SIZE'", "]", "=", "np", ".", "array", "(", "v", "[", "'IMAGE_SIZE'", "]", ")", "\n", "", "", "", "for", "vk", ",", "vv", "in", "v", ".", "items", "(", ")", ":", "\n", "        ", "if", "vk", "in", "config", "[", "k", "]", ":", "\n", "            ", "config", "[", "k", "]", "[", "vk", "]", "=", "vv", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\"{}.{} not exist in config.py\"", ".", "format", "(", "k", ",", "vk", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.config.update_config": [[216, 231], ["open", "easydict.EasyDict", "easydict.EasyDict.items", "yaml.load", "isinstance", "ValueError", "config._update_dict", "tuple"], "function", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.config._update_dict"], ["", "", "", "def", "update_config", "(", "config_file", ")", ":", "\n", "    ", "exp_config", "=", "None", "\n", "with", "open", "(", "config_file", ")", "as", "f", ":", "\n", "        ", "exp_config", "=", "edict", "(", "yaml", ".", "load", "(", "f", ",", "Loader", "=", "yaml", ".", "FullLoader", ")", ")", "\n", "for", "k", ",", "v", "in", "exp_config", ".", "items", "(", ")", ":", "\n", "            ", "if", "k", "in", "config", ":", "\n", "                ", "if", "isinstance", "(", "v", ",", "dict", ")", ":", "\n", "                    ", "_update_dict", "(", "k", ",", "v", ")", "\n", "", "else", ":", "\n", "                    ", "if", "k", "==", "'SCALES'", ":", "\n", "                        ", "config", "[", "k", "]", "[", "0", "]", "=", "(", "tuple", "(", "v", ")", ")", "\n", "", "else", ":", "\n", "                        ", "config", "[", "k", "]", "=", "v", "\n", "", "", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "\"{} not exist in config.py\"", ".", "format", "(", "k", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.config.gen_config": [[233, 241], ["dict", "dict.items", "isinstance", "open", "yaml.dump", "dict", "dict"], "function", ["None"], ["", "", "", "", "def", "gen_config", "(", "config_file", ")", ":", "\n", "    ", "cfg", "=", "dict", "(", "config", ")", "\n", "for", "k", ",", "v", "in", "cfg", ".", "items", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "v", ",", "edict", ")", ":", "\n", "            ", "cfg", "[", "k", "]", "=", "dict", "(", "v", ")", "\n", "\n", "", "", "with", "open", "(", "config_file", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "yaml", ".", "dump", "(", "dict", "(", "cfg", ")", ",", "f", ",", "default_flow_style", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.config.update_dir": [[243, 259], ["os.path.join", "os.path.join", "os.path.join"], "function", ["None"], ["", "", "def", "update_dir", "(", "model_dir", ",", "log_dir", ",", "data_dir", ")", ":", "\n", "    ", "if", "model_dir", ":", "\n", "        ", "config", ".", "OUTPUT_DIR", "=", "model_dir", "\n", "\n", "", "if", "log_dir", ":", "\n", "        ", "config", ".", "LOG_DIR", "=", "log_dir", "\n", "\n", "", "if", "data_dir", ":", "\n", "        ", "config", ".", "DATA_DIR", "=", "data_dir", "\n", "\n", "", "config", ".", "DATASET", ".", "ROOT", "=", "os", ".", "path", ".", "join", "(", "config", ".", "DATA_DIR", ",", "config", ".", "DATASET", ".", "ROOT", ")", "\n", "\n", "config", ".", "TEST", ".", "BBOX_FILE", "=", "os", ".", "path", ".", "join", "(", "config", ".", "DATA_DIR", ",", "config", ".", "TEST", ".", "BBOX_FILE", ")", "\n", "\n", "config", ".", "NETWORK", ".", "PRETRAINED", "=", "os", ".", "path", ".", "join", "(", "config", ".", "DATA_DIR", ",", "\n", "config", ".", "NETWORK", ".", "PRETRAINED", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.config.get_model_name": [[261, 274], ["None"], "function", ["None"], ["", "def", "get_model_name", "(", "cfg", ")", ":", "\n", "    ", "name", "=", "'{model}_{num_layers}'", ".", "format", "(", "\n", "model", "=", "cfg", ".", "MODEL", ",", "num_layers", "=", "cfg", ".", "POSE_RESNET", ".", "NUM_LAYERS", ")", "\n", "deconv_suffix", "=", "''", ".", "join", "(", "\n", "'d{}'", ".", "format", "(", "num_filters", ")", "\n", "for", "num_filters", "in", "cfg", ".", "POSE_RESNET", ".", "NUM_DECONV_FILTERS", ")", "\n", "full_name", "=", "'{height}x{width}_{name}_{deconv_suffix}'", ".", "format", "(", "\n", "height", "=", "cfg", ".", "NETWORK", ".", "IMAGE_SIZE", "[", "1", "]", ",", "\n", "width", "=", "cfg", ".", "NETWORK", ".", "IMAGE_SIZE", "[", "0", "]", ",", "\n", "name", "=", "name", ",", "\n", "deconv_suffix", "=", "deconv_suffix", ")", "\n", "\n", "return", "name", ",", "full_name", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.proposal.get_index": [[16, 24], ["torch.cat", "torch.cat"], "function", ["None"], ["def", "get_index", "(", "indices", ",", "shape", ")", ":", "\n", "    ", "batch_size", "=", "indices", ".", "shape", "[", "0", "]", "\n", "num_people", "=", "indices", ".", "shape", "[", "1", "]", "\n", "indices_x", "=", "(", "indices", "//", "(", "shape", "[", "1", "]", "*", "shape", "[", "2", "]", ")", ")", ".", "reshape", "(", "batch_size", ",", "num_people", ",", "-", "1", ")", "\n", "indices_y", "=", "(", "(", "indices", "%", "(", "shape", "[", "1", "]", "*", "shape", "[", "2", "]", ")", ")", "//", "shape", "[", "2", "]", ")", ".", "reshape", "(", "batch_size", ",", "num_people", ",", "-", "1", ")", "\n", "indices_z", "=", "(", "indices", "%", "shape", "[", "2", "]", ")", ".", "reshape", "(", "batch_size", ",", "num_people", ",", "-", "1", ")", "\n", "indices", "=", "torch", ".", "cat", "(", "[", "indices_x", ",", "indices_y", ",", "indices_z", "]", ",", "dim", "=", "2", ")", "\n", "return", "indices", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.proposal.max_pool": [[26, 31], ["torch.max_pool3d"], "function", ["None"], ["", "def", "max_pool", "(", "inputs", ",", "kernel", "=", "3", ")", ":", "\n", "    ", "padding", "=", "(", "kernel", "-", "1", ")", "//", "2", "\n", "max", "=", "F", ".", "max_pool3d", "(", "inputs", ",", "kernel_size", "=", "kernel", ",", "stride", "=", "1", ",", "padding", "=", "padding", ")", "\n", "keep", "=", "(", "inputs", "==", "max", ")", ".", "float", "(", ")", "\n", "return", "keep", "*", "inputs", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.proposal.nms": [[33, 47], ["proposal.max_pool", "max_pool.reshape", "root_cubes_nms.reshape.topk", "proposal.get_index"], "function", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.proposal.max_pool", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.proposal.get_index"], ["", "def", "nms", "(", "root_cubes", ",", "max_num", ")", ":", "\n", "    ", "batch_size", "=", "root_cubes", ".", "shape", "[", "0", "]", "\n", "# root_cubes_nms = torch.zeros_like(root_cubes, device=root_cubes.device)", "\n", "#", "\n", "# for b in range(batch_size):", "\n", "#     mx = torch.as_tensor(maximum_filter(root_cubes[b].detach().cpu().numpy(), size=3),", "\n", "#                          dtype=torch.float, device=root_cubes.device)", "\n", "#     root_cubes_nms[b] = (mx == root_cubes[b]).float() * root_cubes[b]", "\n", "root_cubes_nms", "=", "max_pool", "(", "root_cubes", ")", "\n", "root_cubes_nms_reshape", "=", "root_cubes_nms", ".", "reshape", "(", "batch_size", ",", "-", "1", ")", "\n", "topk_values", ",", "topk_index", "=", "root_cubes_nms_reshape", ".", "topk", "(", "max_num", ")", "\n", "topk_unravel_index", "=", "get_index", "(", "topk_index", ",", "root_cubes", "[", "0", "]", ".", "shape", ")", "\n", "\n", "return", "topk_values", ",", "topk_unravel_index", "\n", "", ""]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.loss.JointsMSELoss.__init__": [[14, 18], ["torch.Module.__init__", "torch.MSELoss"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "use_target_weight", ")", ":", "\n", "        ", "super", "(", "JointsMSELoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "criterion", "=", "nn", ".", "MSELoss", "(", "reduction", "=", "'mean'", ")", "\n", "self", ".", "use_target_weight", "=", "use_target_weight", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.loss.JointsMSELoss.forward": [[19, 36], ["output.size", "output.size", "output.reshape().split", "target.reshape().split", "range", "heatmaps_pred[].squeeze", "heatmaps_gt[].squeeze", "output.reshape", "target.reshape", "loss.JointsMSELoss.criterion", "loss.JointsMSELoss.criterion", "heatmaps_pred[].squeeze.mul", "heatmaps_gt[].squeeze.mul"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "output", ",", "target", ",", "target_weight", ")", ":", "\n", "        ", "batch_size", "=", "output", ".", "size", "(", "0", ")", "\n", "num_joints", "=", "output", ".", "size", "(", "1", ")", "\n", "heatmaps_pred", "=", "output", ".", "reshape", "(", "(", "batch_size", ",", "num_joints", ",", "-", "1", ")", ")", ".", "split", "(", "1", ",", "1", ")", "\n", "heatmaps_gt", "=", "target", ".", "reshape", "(", "(", "batch_size", ",", "num_joints", ",", "-", "1", ")", ")", ".", "split", "(", "1", ",", "1", ")", "\n", "loss", "=", "0", "\n", "\n", "for", "idx", "in", "range", "(", "num_joints", ")", ":", "\n", "            ", "heatmap_pred", "=", "heatmaps_pred", "[", "idx", "]", ".", "squeeze", "(", ")", "\n", "heatmap_gt", "=", "heatmaps_gt", "[", "idx", "]", ".", "squeeze", "(", ")", "\n", "if", "self", ".", "use_target_weight", ":", "\n", "                ", "loss", "+=", "self", ".", "criterion", "(", "heatmap_pred", ".", "mul", "(", "target_weight", "[", ":", ",", "idx", "]", ")", ",", "\n", "heatmap_gt", ".", "mul", "(", "target_weight", "[", ":", ",", "idx", "]", ")", ")", "\n", "", "else", ":", "\n", "                ", "loss", "+=", "self", ".", "criterion", "(", "heatmap_pred", ",", "heatmap_gt", ")", "\n", "\n", "", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.loss.PerJointMSELoss.__init__": [[39, 42], ["torch.Module.__init__", "torch.MSELoss"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "PerJointMSELoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "criterion", "=", "nn", ".", "MSELoss", "(", "reduction", "=", "'mean'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.loss.PerJointMSELoss.forward": [[43, 55], ["output.size", "output.size", "output.reshape", "target.reshape", "loss.PerJointMSELoss.PerJointMSELoss.criterion", "loss.PerJointMSELoss.PerJointMSELoss.criterion", "output.reshape.mul", "target.reshape.mul"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "output", ",", "target", ",", "use_target_weight", "=", "False", ",", "target_weight", "=", "None", ")", ":", "\n", "        ", "if", "use_target_weight", ":", "\n", "            ", "batch_size", "=", "output", ".", "size", "(", "0", ")", "\n", "num_joints", "=", "output", ".", "size", "(", "1", ")", "\n", "\n", "heatmap_pred", "=", "output", ".", "reshape", "(", "(", "batch_size", ",", "num_joints", ",", "-", "1", ")", ")", "\n", "heatmap_gt", "=", "target", ".", "reshape", "(", "(", "batch_size", ",", "num_joints", ",", "-", "1", ")", ")", "\n", "loss", "=", "self", ".", "criterion", "(", "heatmap_pred", ".", "mul", "(", "target_weight", ")", ",", "heatmap_gt", ".", "mul", "(", "target_weight", ")", ")", "\n", "", "else", ":", "\n", "            ", "loss", "=", "self", ".", "criterion", "(", "output", ",", "target", ")", "\n", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.loss.PerJointL1Loss.__init__": [[58, 61], ["torch.Module.__init__", "torch.L1Loss"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "PerJointL1Loss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "criterion", "=", "nn", ".", "L1Loss", "(", "reduction", "=", "'mean'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.loss.PerJointL1Loss.forward": [[62, 74], ["output.size", "output.size", "output.reshape", "target.reshape", "loss.PerJointL1Loss.PerJointL1Loss.criterion", "loss.PerJointL1Loss.PerJointL1Loss.criterion", "output.reshape.mul", "target.reshape.mul"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "output", ",", "target", ",", "use_target_weight", "=", "False", ",", "target_weight", "=", "None", ")", ":", "\n", "        ", "if", "use_target_weight", ":", "\n", "            ", "batch_size", "=", "output", ".", "size", "(", "0", ")", "\n", "num_joints", "=", "output", ".", "size", "(", "1", ")", "\n", "\n", "pred", "=", "output", ".", "reshape", "(", "(", "batch_size", ",", "num_joints", ",", "-", "1", ")", ")", "\n", "gt", "=", "target", ".", "reshape", "(", "(", "batch_size", ",", "num_joints", ",", "-", "1", ")", ")", "\n", "loss", "=", "self", ".", "criterion", "(", "pred", ".", "mul", "(", "target_weight", ")", ",", "gt", ".", "mul", "(", "target_weight", ")", ")", "\n", "", "else", ":", "\n", "            ", "loss", "=", "self", ".", "criterion", "(", "output", ",", "target", ")", "\n", "\n", "", "return", "loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.AverageMeter.__init__": [[181, 183], ["function.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.AverageMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.AverageMeter.reset": [[184, 189], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.AverageMeter.update": [[190, 195], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "", "", ""]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.train_3d": [[20, 109], ["torch.device", "function.AverageMeter", "function.AverageMeter", "function.AverageMeter", "function.AverageMeter", "function.AverageMeter", "function.AverageMeter", "model.train", "time.time", "enumerate", "model.module.backbone.eval", "function.AverageMeter.update", "loss_2d.mean.mean", "loss_3d.mean.mean", "loss_cord.mean.mean", "function.AverageMeter.update", "function.AverageMeter.update", "function.AverageMeter.update", "function.AverageMeter.update", "function.AverageMeter.update", "time.time", "model", "loss_2d.mean.item", "loss_3d.mean.item", "loss_cord.mean.item", "loss.item", "optimizer.zero_grad", "optimizer.step", "optimizer.zero_grad", "accu_loss_3d.backward", "optimizer.step", "torch.cuda.memory_allocated", "logger.info", "writer.add_scalar", "writer.add_scalar", "writer.add_scalar", "range", "utils.vis.save_debug_3d_cubes", "utils.vis.save_debug_3d_images", "time.time", "model", "time.time", "len", "len", "utils.vis.save_debug_images_multi", "os.path.join", "os.path.join", "len", "inputs[].size"], "function", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.AverageMeter.update", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.AverageMeter.update", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.AverageMeter.update", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.AverageMeter.update", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.AverageMeter.update", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.AverageMeter.update", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.vis.save_debug_3d_cubes", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.vis.save_debug_3d_images", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.vis.save_debug_images_multi"], ["def", "train_3d", "(", "config", ",", "model", ",", "optimizer", ",", "loader", ",", "epoch", ",", "output_dir", ",", "writer_dict", ",", "device", "=", "torch", ".", "device", "(", "'cuda'", ")", ",", "dtype", "=", "torch", ".", "float", ")", ":", "\n", "    ", "batch_time", "=", "AverageMeter", "(", ")", "\n", "data_time", "=", "AverageMeter", "(", ")", "\n", "losses", "=", "AverageMeter", "(", ")", "\n", "losses_2d", "=", "AverageMeter", "(", ")", "\n", "losses_3d", "=", "AverageMeter", "(", ")", "\n", "losses_cord", "=", "AverageMeter", "(", ")", "\n", "\n", "model", ".", "train", "(", ")", "\n", "\n", "if", "model", ".", "module", ".", "backbone", "is", "not", "None", ":", "\n", "        ", "model", ".", "module", ".", "backbone", ".", "eval", "(", ")", "# Comment out this line if you want to train 2D backbone jointly", "\n", "\n", "", "accumulation_steps", "=", "4", "\n", "accu_loss_3d", "=", "0", "\n", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "for", "i", ",", "(", "inputs", ",", "targets_2d", ",", "weights_2d", ",", "targets_3d", ",", "meta", ",", "input_heatmap", ")", "in", "enumerate", "(", "loader", ")", ":", "\n", "        ", "data_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "\n", "if", "'panoptic'", "in", "config", ".", "DATASET", ".", "TEST_DATASET", ":", "\n", "            ", "pred", ",", "heatmaps", ",", "grid_centers", ",", "loss_2d", ",", "loss_3d", ",", "loss_cord", "=", "model", "(", "views", "=", "inputs", ",", "meta", "=", "meta", ",", "\n", "targets_2d", "=", "targets_2d", ",", "\n", "weights_2d", "=", "weights_2d", ",", "\n", "targets_3d", "=", "targets_3d", "[", "0", "]", ")", "\n", "", "elif", "'campus'", "in", "config", ".", "DATASET", ".", "TEST_DATASET", "or", "'shelf'", "in", "config", ".", "DATASET", ".", "TEST_DATASET", ":", "\n", "            ", "pred", ",", "heatmaps", ",", "grid_centers", ",", "loss_2d", ",", "loss_3d", ",", "loss_cord", "=", "model", "(", "meta", "=", "meta", ",", "targets_3d", "=", "targets_3d", "[", "0", "]", ",", "\n", "input_heatmaps", "=", "input_heatmap", ")", "\n", "\n", "", "loss_2d", "=", "loss_2d", ".", "mean", "(", ")", "\n", "loss_3d", "=", "loss_3d", ".", "mean", "(", ")", "\n", "loss_cord", "=", "loss_cord", ".", "mean", "(", ")", "\n", "\n", "losses_2d", ".", "update", "(", "loss_2d", ".", "item", "(", ")", ")", "\n", "losses_3d", ".", "update", "(", "loss_3d", ".", "item", "(", ")", ")", "\n", "losses_cord", ".", "update", "(", "loss_cord", ".", "item", "(", ")", ")", "\n", "loss", "=", "loss_2d", "+", "loss_3d", "+", "loss_cord", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ")", "\n", "\n", "if", "loss_cord", ">", "0", ":", "\n", "            ", "optimizer", ".", "zero_grad", "(", ")", "\n", "(", "loss_2d", "+", "loss_cord", ")", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "", "if", "accu_loss_3d", ">", "0", "and", "(", "i", "+", "1", ")", "%", "accumulation_steps", "==", "0", ":", "\n", "            ", "optimizer", ".", "zero_grad", "(", ")", "\n", "accu_loss_3d", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "accu_loss_3d", "=", "0.0", "\n", "", "else", ":", "\n", "            ", "accu_loss_3d", "+=", "loss_3d", "/", "accumulation_steps", "\n", "\n", "", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "if", "i", "%", "config", ".", "PRINT_FREQ", "==", "0", ":", "\n", "            ", "gpu_memory_usage", "=", "torch", ".", "cuda", ".", "memory_allocated", "(", "0", ")", "\n", "msg", "=", "'Epoch: [{0}][{1}/{2}]\\t'", "'Time: {batch_time.val:.3f}s ({batch_time.avg:.3f}s)\\t'", "'Speed: {speed:.1f} samples/s\\t'", "'Data: {data_time.val:.3f}s ({data_time.avg:.3f}s)\\t'", "'Loss: {loss.val:.6f} ({loss.avg:.6f})\\t'", "'Loss_2d: {loss_2d.val:.7f} ({loss_2d.avg:.7f})\\t'", "'Loss_3d: {loss_3d.val:.7f} ({loss_3d.avg:.7f})\\t'", "'Loss_cord: {loss_cord.val:.6f} ({loss_cord.avg:.6f})\\t'", "'Memory {memory:.1f}'", ".", "format", "(", "\n", "epoch", ",", "i", ",", "len", "(", "loader", ")", ",", "batch_time", "=", "batch_time", ",", "\n", "speed", "=", "len", "(", "inputs", ")", "*", "inputs", "[", "0", "]", ".", "size", "(", "0", ")", "/", "batch_time", ".", "val", ",", "\n", "data_time", "=", "data_time", ",", "loss", "=", "losses", ",", "loss_2d", "=", "losses_2d", ",", "loss_3d", "=", "losses_3d", ",", "\n", "loss_cord", "=", "losses_cord", ",", "memory", "=", "gpu_memory_usage", ")", "\n", "logger", ".", "info", "(", "msg", ")", "\n", "\n", "writer", "=", "writer_dict", "[", "'writer'", "]", "\n", "global_steps", "=", "writer_dict", "[", "'train_global_steps'", "]", "\n", "writer", ".", "add_scalar", "(", "'train_loss_3d'", ",", "losses_3d", ".", "val", ",", "global_steps", ")", "\n", "writer", ".", "add_scalar", "(", "'train_loss_cord'", ",", "losses_cord", ".", "val", ",", "global_steps", ")", "\n", "writer", ".", "add_scalar", "(", "'train_loss'", ",", "losses", ".", "val", ",", "global_steps", ")", "\n", "writer_dict", "[", "'train_global_steps'", "]", "=", "global_steps", "+", "1", "\n", "\n", "for", "k", "in", "range", "(", "len", "(", "inputs", ")", ")", ":", "\n", "                ", "view_name", "=", "'view_{}'", ".", "format", "(", "k", "+", "1", ")", "\n", "prefix", "=", "'{}_{:08}_{}'", ".", "format", "(", "\n", "os", ".", "path", ".", "join", "(", "output_dir", ",", "'train'", ")", ",", "i", ",", "view_name", ")", "\n", "save_debug_images_multi", "(", "config", ",", "inputs", "[", "k", "]", ",", "meta", "[", "k", "]", ",", "targets_2d", "[", "k", "]", ",", "heatmaps", "[", "k", "]", ",", "prefix", ")", "\n", "", "prefix2", "=", "'{}_{:08}'", ".", "format", "(", "\n", "os", ".", "path", ".", "join", "(", "output_dir", ",", "'train'", ")", ",", "i", ")", "\n", "\n", "save_debug_3d_cubes", "(", "config", ",", "meta", "[", "0", "]", ",", "grid_centers", ",", "prefix2", ")", "\n", "save_debug_3d_images", "(", "config", ",", "meta", "[", "0", "]", ",", "pred", ",", "prefix2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.validate_3d": [[111, 176], ["function.AverageMeter", "function.AverageMeter", "model.eval", "torch.no_grad", "time.time", "enumerate", "loader.dataset.evaluate", "logger.info", "numpy.mean", "function.AverageMeter.update", "pred.detach().cpu().numpy.detach().cpu().numpy", "range", "function.AverageMeter.update", "time.time", "loader.dataset.evaluate", "logger.info", "numpy.mean", "model", "preds.append", "torch.cuda.memory_allocated", "logger.info", "range", "utils.vis.save_debug_3d_cubes", "utils.vis.save_debug_3d_images", "time.time", "model", "pred.detach().cpu().numpy.detach().cpu", "time.time", "len", "len", "utils.vis.save_debug_images_multi", "os.path.join", "len", "os.path.join", "pred.detach().cpu().numpy.detach", "len", "inputs[].size"], "function", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.campus.Campus.evaluate", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.AverageMeter.update", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.AverageMeter.update", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.campus.Campus.evaluate", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.vis.save_debug_3d_cubes", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.vis.save_debug_3d_images", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.vis.save_debug_images_multi"], ["", "", "", "def", "validate_3d", "(", "config", ",", "model", ",", "loader", ",", "output_dir", ")", ":", "\n", "    ", "batch_time", "=", "AverageMeter", "(", ")", "\n", "data_time", "=", "AverageMeter", "(", ")", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "preds", "=", "[", "]", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "end", "=", "time", ".", "time", "(", ")", "\n", "for", "i", ",", "(", "inputs", ",", "targets_2d", ",", "weights_2d", ",", "targets_3d", ",", "meta", ",", "input_heatmap", ")", "in", "enumerate", "(", "loader", ")", ":", "\n", "            ", "data_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "if", "'panoptic'", "in", "config", ".", "DATASET", ".", "TEST_DATASET", ":", "\n", "                ", "pred", ",", "heatmaps", ",", "grid_centers", ",", "_", ",", "_", ",", "_", "=", "model", "(", "views", "=", "inputs", ",", "meta", "=", "meta", ",", "targets_2d", "=", "targets_2d", ",", "\n", "weights_2d", "=", "weights_2d", ",", "targets_3d", "=", "targets_3d", "[", "0", "]", ")", "\n", "", "elif", "'campus'", "in", "config", ".", "DATASET", ".", "TEST_DATASET", "or", "'shelf'", "in", "config", ".", "DATASET", ".", "TEST_DATASET", ":", "\n", "                ", "pred", ",", "heatmaps", ",", "grid_centers", ",", "_", ",", "_", ",", "_", "=", "model", "(", "meta", "=", "meta", ",", "targets_3d", "=", "targets_3d", "[", "0", "]", ",", "\n", "input_heatmaps", "=", "input_heatmap", ")", "\n", "", "pred", "=", "pred", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "for", "b", "in", "range", "(", "pred", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "preds", ".", "append", "(", "pred", "[", "b", "]", ")", "\n", "\n", "", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "if", "i", "%", "config", ".", "PRINT_FREQ", "==", "0", "or", "i", "==", "len", "(", "loader", ")", "-", "1", ":", "\n", "                ", "gpu_memory_usage", "=", "torch", ".", "cuda", ".", "memory_allocated", "(", "0", ")", "\n", "msg", "=", "'Test: [{0}/{1}]\\t'", "'Time: {batch_time.val:.3f}s ({batch_time.avg:.3f}s)\\t'", "'Speed: {speed:.1f} samples/s\\t'", "'Data: {data_time.val:.3f}s ({data_time.avg:.3f}s)\\t'", "'Memory {memory:.1f}'", ".", "format", "(", "\n", "i", ",", "len", "(", "loader", ")", ",", "batch_time", "=", "batch_time", ",", "\n", "speed", "=", "len", "(", "inputs", ")", "*", "inputs", "[", "0", "]", ".", "size", "(", "0", ")", "/", "batch_time", ".", "val", ",", "\n", "data_time", "=", "data_time", ",", "memory", "=", "gpu_memory_usage", ")", "\n", "logger", ".", "info", "(", "msg", ")", "\n", "\n", "for", "k", "in", "range", "(", "len", "(", "inputs", ")", ")", ":", "\n", "                    ", "view_name", "=", "'view_{}'", ".", "format", "(", "k", "+", "1", ")", "\n", "prefix", "=", "'{}_{:08}_{}'", ".", "format", "(", "\n", "os", ".", "path", ".", "join", "(", "output_dir", ",", "'validation'", ")", ",", "i", ",", "view_name", ")", "\n", "save_debug_images_multi", "(", "config", ",", "inputs", "[", "k", "]", ",", "meta", "[", "k", "]", ",", "targets_2d", "[", "k", "]", ",", "heatmaps", "[", "k", "]", ",", "prefix", ")", "\n", "", "prefix2", "=", "'{}_{:08}'", ".", "format", "(", "\n", "os", ".", "path", ".", "join", "(", "output_dir", ",", "'validation'", ")", ",", "i", ")", "\n", "\n", "save_debug_3d_cubes", "(", "config", ",", "meta", "[", "0", "]", ",", "grid_centers", ",", "prefix2", ")", "\n", "save_debug_3d_images", "(", "config", ",", "meta", "[", "0", "]", ",", "pred", ",", "prefix2", ")", "\n", "\n", "", "", "", "metric", "=", "None", "\n", "if", "'panoptic'", "in", "config", ".", "DATASET", ".", "TEST_DATASET", ":", "\n", "        ", "aps", ",", "_", ",", "mpjpe", ",", "recall", "=", "loader", ".", "dataset", ".", "evaluate", "(", "preds", ")", "\n", "msg", "=", "'ap@25: {aps_25:.4f}\\tap@50: {aps_50:.4f}\\tap@75: {aps_75:.4f}\\t'", "'ap@100: {aps_100:.4f}\\tap@125: {aps_125:.4f}\\tap@150: {aps_150:.4f}\\t'", "'recall@500mm: {recall:.4f}\\tmpjpe@500mm: {mpjpe:.3f}'", ".", "format", "(", "\n", "aps_25", "=", "aps", "[", "0", "]", ",", "aps_50", "=", "aps", "[", "1", "]", ",", "aps_75", "=", "aps", "[", "2", "]", ",", "aps_100", "=", "aps", "[", "3", "]", ",", "\n", "aps_125", "=", "aps", "[", "4", "]", ",", "aps_150", "=", "aps", "[", "5", "]", ",", "recall", "=", "recall", ",", "mpjpe", "=", "mpjpe", "\n", ")", "\n", "logger", ".", "info", "(", "msg", ")", "\n", "metric", "=", "np", ".", "mean", "(", "aps", ")", "\n", "", "elif", "'campus'", "in", "config", ".", "DATASET", ".", "TEST_DATASET", "or", "'shelf'", "in", "config", ".", "DATASET", ".", "TEST_DATASET", ":", "\n", "        ", "actor_pcp", ",", "avg_pcp", ",", "_", ",", "recall", "=", "loader", ".", "dataset", ".", "evaluate", "(", "preds", ")", "\n", "msg", "=", "'     | Actor 1 | Actor 2 | Actor 3 | Average | \\n'", "' PCP |  {pcp_1:.2f}  |  {pcp_2:.2f}  |  {pcp_3:.2f}  |  {pcp_avg:.2f}  |\\t Recall@500mm: {recall:.4f}'", ".", "format", "(", "\n", "pcp_1", "=", "actor_pcp", "[", "0", "]", "*", "100", ",", "pcp_2", "=", "actor_pcp", "[", "1", "]", "*", "100", ",", "pcp_3", "=", "actor_pcp", "[", "2", "]", "*", "100", ",", "pcp_avg", "=", "avg_pcp", "*", "100", ",", "recall", "=", "recall", ")", "\n", "logger", ".", "info", "(", "msg", ")", "\n", "metric", "=", "np", ".", "mean", "(", "avg_pcp", ")", "\n", "\n", "", "return", "metric", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.test.evaluate.parse_args": [[30, 39], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_known_args", "core.config.update_config"], "function", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.config.update_config"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Train keypoints network'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--cfg'", ",", "help", "=", "'experiment configure file name'", ",", "required", "=", "True", ",", "type", "=", "str", ")", "\n", "\n", "args", ",", "rest", "=", "parser", ".", "parse_known_args", "(", ")", "\n", "update_config", "(", "args", ".", "cfg", ")", "\n", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.test.evaluate.main": [[41, 112], ["evaluate.parse_args", "utils.utils.create_logger", "print", "torchvision.Normalize", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "print", "os.path.join", "torch.nn.DataParallel().cuda.eval", "os.path.basename().split", "int", "eval", "torchvision.Compose", "eval", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.nn.DataParallel().cuda", "torch.nn.DataParallel().cuda", "torch.nn.DataParallel().cuda", "torch.nn.DataParallel().cuda", "os.path.isfile", "logger.info", "torch.nn.DataParallel().cuda.module.load_state_dict", "ValueError", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "prettytable.PrettyTable", "core.config.config.GPUS.split", "torch.load", "torch.load", "torch.load", "torch.load", "tqdm.tqdm", "pred.detach().cpu().numpy.detach().cpu().numpy", "range", "numpy.arange", "test_dataset.evaluate", "prettytable.PrettyTable.add_row", "prettytable.PrettyTable.add_row", "print", "print", "test_dataset.evaluate", "bone_person_pcp.items", "prettytable.PrettyTable.add_row", "print", "os.path.basename", "torchvision.ToTensor", "len", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel().cuda.", "preds.append", "prettytable.PrettyTable.add_row", "torch.nn.DataParallel().cuda.", "pred.detach().cpu().numpy.detach().cpu", "pred.detach().cpu().numpy.detach", "range", "len", "numpy.mean"], "function", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.run.train_3d.parse_args", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.utils.create_logger", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.campus.Campus.evaluate", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.dataset.campus.Campus.evaluate"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "logger", ",", "final_output_dir", ",", "tb_log_dir", "=", "create_logger", "(", "\n", "config", ",", "args", ".", "cfg", ",", "'eval_map'", ")", "\n", "cfg_name", "=", "os", ".", "path", ".", "basename", "(", "args", ".", "cfg", ")", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "\n", "gpus", "=", "[", "int", "(", "i", ")", "for", "i", "in", "config", ".", "GPUS", ".", "split", "(", "','", ")", "]", "\n", "print", "(", "'=> Loading data ..'", ")", "\n", "normalize", "=", "transforms", ".", "Normalize", "(", "\n", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "\n", "test_dataset", "=", "eval", "(", "'dataset.'", "+", "config", ".", "DATASET", ".", "TEST_DATASET", ")", "(", "\n", "config", ",", "config", ".", "DATASET", ".", "TEST_SUBSET", ",", "False", ",", "\n", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", ",", "\n", "]", ")", ")", "\n", "\n", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "test_dataset", ",", "\n", "batch_size", "=", "config", ".", "TEST", ".", "BATCH_SIZE", "*", "len", "(", "gpus", ")", ",", "\n", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "config", ".", "WORKERS", ",", "\n", "pin_memory", "=", "True", ")", "\n", "\n", "cudnn", ".", "benchmark", "=", "config", ".", "CUDNN", ".", "BENCHMARK", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "config", ".", "CUDNN", ".", "DETERMINISTIC", "\n", "torch", ".", "backends", ".", "cudnn", ".", "enabled", "=", "config", ".", "CUDNN", ".", "ENABLED", "\n", "\n", "print", "(", "'=> Constructing models ..'", ")", "\n", "model", "=", "eval", "(", "'models.'", "+", "config", ".", "MODEL", "+", "'.get_multi_person_pose_net'", ")", "(", "\n", "config", ",", "is_train", "=", "True", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "model", ",", "device_ids", "=", "gpus", ")", ".", "cuda", "(", ")", "\n", "\n", "", "test_model_file", "=", "os", ".", "path", ".", "join", "(", "final_output_dir", ",", "config", ".", "TEST", ".", "MODEL_FILE", ")", "\n", "if", "config", ".", "TEST", ".", "MODEL_FILE", "and", "os", ".", "path", ".", "isfile", "(", "test_model_file", ")", ":", "\n", "        ", "logger", ".", "info", "(", "'=> load models state {}'", ".", "format", "(", "test_model_file", ")", ")", "\n", "model", ".", "module", ".", "load_state_dict", "(", "torch", ".", "load", "(", "test_model_file", ")", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'Check the model file for testing!'", ")", "\n", "\n", "", "model", ".", "eval", "(", ")", "\n", "preds", "=", "[", "]", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "i", ",", "(", "inputs", ",", "targets_2d", ",", "weights_2d", ",", "targets_3d", ",", "meta", ",", "input_heatmap", ")", "in", "enumerate", "(", "tqdm", "(", "test_loader", ")", ")", ":", "\n", "            ", "if", "'panoptic'", "in", "config", ".", "DATASET", ".", "TEST_DATASET", ":", "\n", "                ", "pred", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_", "=", "model", "(", "views", "=", "inputs", ",", "meta", "=", "meta", ")", "\n", "", "elif", "'campus'", "in", "config", ".", "DATASET", ".", "TEST_DATASET", "or", "'shelf'", "in", "config", ".", "DATASET", ".", "TEST_DATASET", ":", "\n", "                ", "pred", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_", "=", "model", "(", "meta", "=", "meta", ",", "input_heatmaps", "=", "input_heatmap", ")", "\n", "\n", "", "pred", "=", "pred", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "for", "b", "in", "range", "(", "pred", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "preds", ".", "append", "(", "pred", "[", "b", "]", ")", "\n", "\n", "", "", "tb", "=", "PrettyTable", "(", ")", "\n", "if", "'panoptic'", "in", "config", ".", "DATASET", ".", "TEST_DATASET", ":", "\n", "            ", "mpjpe_threshold", "=", "np", ".", "arange", "(", "25", ",", "155", ",", "25", ")", "\n", "aps", ",", "recs", ",", "mpjpe", ",", "_", "=", "test_dataset", ".", "evaluate", "(", "preds", ")", "\n", "tb", ".", "field_names", "=", "[", "'Threshold/mm'", "]", "+", "[", "f'{i}'", "for", "i", "in", "mpjpe_threshold", "]", "\n", "tb", ".", "add_row", "(", "[", "'AP'", "]", "+", "[", "f'{ap * 100:.2f}'", "for", "ap", "in", "aps", "]", ")", "\n", "tb", ".", "add_row", "(", "[", "'Recall'", "]", "+", "[", "f'{re * 100:.2f}'", "for", "re", "in", "recs", "]", ")", "\n", "print", "(", "tb", ")", "\n", "print", "(", "f'MPJPE: {mpjpe:.2f}mm'", ")", "\n", "", "else", ":", "\n", "            ", "actor_pcp", ",", "avg_pcp", ",", "bone_person_pcp", ",", "_", "=", "test_dataset", ".", "evaluate", "(", "preds", ")", "\n", "tb", ".", "field_names", "=", "[", "'Bone Group'", "]", "+", "[", "f'Actor {i+1}'", "for", "i", "in", "range", "(", "len", "(", "actor_pcp", ")", ")", "]", "+", "[", "'Average'", "]", "\n", "for", "k", ",", "v", "in", "bone_person_pcp", ".", "items", "(", ")", ":", "\n", "                ", "tb", ".", "add_row", "(", "[", "k", "]", "+", "[", "f'{i*100:.1f}'", "for", "i", "in", "v", "]", "+", "[", "f'{np.mean(v)*100:.1f}'", "]", ")", "\n", "", "tb", ".", "add_row", "(", "[", "'Total'", "]", "+", "[", "f'{i*100:.1f}'", "for", "i", "in", "actor_pcp", "]", "+", "[", "f'{avg_pcp*100:.1f}'", "]", ")", "\n", "print", "(", "tb", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.test._init_paths.add_path": [[14, 17], ["sys.path.insert"], "function", ["None"], ["def", "add_path", "(", "path", ")", ":", "\n", "    ", "if", "path", "not", "in", "sys", ".", "path", ":", "\n", "        ", "sys", ".", "path", ".", "insert", "(", "0", ",", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.run.validate_3d.parse_args": [[35, 44], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_known_args", "core.config.update_config"], "function", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.config.update_config"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Train keypoints network'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--cfg'", ",", "help", "=", "'experiment configure file name'", ",", "required", "=", "True", ",", "type", "=", "str", ")", "\n", "\n", "args", ",", "rest", "=", "parser", ".", "parse_known_args", "(", ")", "\n", "update_config", "(", "args", ".", "cfg", ")", "\n", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.run.validate_3d.main": [[46, 91], ["validate_3d.parse_args", "utils.utils.create_logger", "logger.info", "logger.info", "print", "torchvision.Normalize", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "print", "os.path.join", "core.function.validate_3d", "pprint.pformat", "pprint.pformat", "int", "eval", "torchvision.Compose", "eval", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.nn.DataParallel().cuda", "torch.nn.DataParallel().cuda", "torch.nn.DataParallel().cuda", "torch.nn.DataParallel().cuda", "torch.nn.DataParallel().cuda", "torch.nn.DataParallel().cuda", "os.path.isfile", "logger.info", "torch.nn.DataParallel().cuda.module.load_state_dict", "ValueError", "core.config.config.GPUS.split", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torchvision.ToTensor", "len", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel"], "function", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.run.train_3d.parse_args", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.utils.create_logger", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.validate_3d"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "logger", ",", "final_output_dir", ",", "tb_log_dir", "=", "create_logger", "(", "\n", "config", ",", "args", ".", "cfg", ",", "'validate'", ")", "\n", "\n", "logger", ".", "info", "(", "pprint", ".", "pformat", "(", "args", ")", ")", "\n", "logger", ".", "info", "(", "pprint", ".", "pformat", "(", "config", ")", ")", "\n", "\n", "gpus", "=", "[", "int", "(", "i", ")", "for", "i", "in", "config", ".", "GPUS", ".", "split", "(", "','", ")", "]", "\n", "print", "(", "'=> Loading data ..'", ")", "\n", "normalize", "=", "transforms", ".", "Normalize", "(", "\n", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "\n", "test_dataset", "=", "eval", "(", "'dataset.'", "+", "config", ".", "DATASET", ".", "TEST_DATASET", ")", "(", "\n", "config", ",", "config", ".", "DATASET", ".", "TEST_SUBSET", ",", "False", ",", "\n", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", ",", "\n", "]", ")", ")", "\n", "\n", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "test_dataset", ",", "\n", "batch_size", "=", "config", ".", "TEST", ".", "BATCH_SIZE", "*", "len", "(", "gpus", ")", ",", "\n", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "config", ".", "WORKERS", ",", "\n", "pin_memory", "=", "True", ")", "\n", "\n", "cudnn", ".", "benchmark", "=", "config", ".", "CUDNN", ".", "BENCHMARK", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "config", ".", "CUDNN", ".", "DETERMINISTIC", "\n", "torch", ".", "backends", ".", "cudnn", ".", "enabled", "=", "config", ".", "CUDNN", ".", "ENABLED", "\n", "\n", "print", "(", "'=> Constructing models ..'", ")", "\n", "model", "=", "eval", "(", "'models.'", "+", "config", ".", "MODEL", "+", "'.get_multi_person_pose_net'", ")", "(", "\n", "config", ",", "is_train", "=", "True", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "model", ",", "device_ids", "=", "gpus", ")", ".", "cuda", "(", ")", "\n", "\n", "", "test_model_file", "=", "os", ".", "path", ".", "join", "(", "final_output_dir", ",", "config", ".", "TEST", ".", "MODEL_FILE", ")", "\n", "if", "config", ".", "TEST", ".", "MODEL_FILE", "and", "os", ".", "path", ".", "isfile", "(", "test_model_file", ")", ":", "\n", "        ", "logger", ".", "info", "(", "'=> load models state {}'", ".", "format", "(", "test_model_file", ")", ")", "\n", "model", ".", "module", ".", "load_state_dict", "(", "torch", ".", "load", "(", "test_model_file", ")", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'Check the model file for testing!'", ")", "\n", "\n", "", "validate_3d", "(", "config", ",", "model", ",", "test_loader", ",", "final_output_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.run._init_paths.add_path": [[14, 17], ["sys.path.insert"], "function", ["None"], ["def", "add_path", "(", "path", ")", ":", "\n", "    ", "if", "path", "not", "in", "sys", ".", "path", ":", "\n", "        ", "sys", ".", "path", ".", "insert", "(", "0", ",", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.run.train_3d.parse_args": [[35, 44], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_known_args", "core.config.update_config"], "function", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.config.update_config"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Train keypoints network'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--cfg'", ",", "help", "=", "'experiment configure file name'", ",", "required", "=", "True", ",", "type", "=", "str", ")", "\n", "\n", "args", ",", "rest", "=", "parser", ".", "parse_known_args", "(", ")", "\n", "update_config", "(", "args", ".", "cfg", ")", "\n", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.run.train_3d.get_optimizer": [[46, 59], ["model.module.root_net.parameters", "model.module.pose_net.parameters", "torch.Adam", "model.module.backbone.parameters", "filter", "model.module.parameters"], "function", ["None"], ["", "def", "get_optimizer", "(", "model", ")", ":", "\n", "    ", "lr", "=", "config", ".", "TRAIN", ".", "LR", "\n", "if", "model", ".", "module", ".", "backbone", "is", "not", "None", ":", "\n", "        ", "for", "params", "in", "model", ".", "module", ".", "backbone", ".", "parameters", "(", ")", ":", "\n", "            ", "params", ".", "requires_grad", "=", "False", "# If you want to train the whole model jointly, set it to be True.", "\n", "", "", "for", "params", "in", "model", ".", "module", ".", "root_net", ".", "parameters", "(", ")", ":", "\n", "        ", "params", ".", "requires_grad", "=", "True", "\n", "", "for", "params", "in", "model", ".", "module", ".", "pose_net", ".", "parameters", "(", ")", ":", "\n", "        ", "params", ".", "requires_grad", "=", "True", "\n", "", "optimizer", "=", "optim", ".", "Adam", "(", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "model", ".", "module", ".", "parameters", "(", ")", ")", ",", "lr", "=", "lr", ")", "\n", "# optimizer = optim.Adam(model.module.parameters(), lr=lr)", "\n", "\n", "return", "model", ",", "optimizer", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.run.train_3d.main": [[61, 157], ["train_3d.parse_args", "utils.utils.create_logger", "logger.info", "logger.info", "print", "torchvision.Normalize", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "print", "train_3d.get_optimizer", "print", "range", "os.path.join", "logger.info", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "writer_dict[].close", "pprint.pformat", "pprint.pformat", "int", "eval", "torchvision.Compose", "eval", "torchvision.Compose", "eval", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.nn.DataParallel().cuda", "torch.nn.DataParallel().cuda", "torch.nn.DataParallel().cuda", "torch.nn.DataParallel().cuda", "torch.nn.DataParallel().cuda", "torch.nn.DataParallel().cuda", "utils.utils.load_backbone_panoptic", "utils.utils.load_checkpoint", "tensorboardX.SummaryWriter", "print", "core.function.train_3d", "core.function.validate_3d", "logger.info", "utils.utils.save_checkpoint", "utils.utils.load_backbone_panoptic.module.state_dict", "core.config.config.GPUS.split", "torchvision.ToTensor", "len", "torchvision.ToTensor", "len", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "utils.utils.load_backbone_panoptic.module.state_dict", "optimizer.state_dict"], "function", ["home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.run.train_3d.parse_args", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.utils.create_logger", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.run.train_3d.get_optimizer", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.utils.load_backbone_panoptic", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.utils.load_checkpoint", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.train_3d", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.core.function.validate_3d", "home.repos.pwc.inspect_result.microsoft_voxelpose-pytorch.utils.utils.save_checkpoint"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "logger", ",", "final_output_dir", ",", "tb_log_dir", "=", "create_logger", "(", "\n", "config", ",", "args", ".", "cfg", ",", "'train'", ")", "\n", "\n", "logger", ".", "info", "(", "pprint", ".", "pformat", "(", "args", ")", ")", "\n", "logger", ".", "info", "(", "pprint", ".", "pformat", "(", "config", ")", ")", "\n", "\n", "gpus", "=", "[", "int", "(", "i", ")", "for", "i", "in", "config", ".", "GPUS", ".", "split", "(", "','", ")", "]", "\n", "print", "(", "'=> Loading data ..'", ")", "\n", "normalize", "=", "transforms", ".", "Normalize", "(", "\n", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "train_dataset", "=", "eval", "(", "'dataset.'", "+", "config", ".", "DATASET", ".", "TRAIN_DATASET", ")", "(", "\n", "config", ",", "config", ".", "DATASET", ".", "TRAIN_SUBSET", ",", "True", ",", "\n", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", ",", "\n", "]", ")", ")", "\n", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "train_dataset", ",", "\n", "batch_size", "=", "config", ".", "TRAIN", ".", "BATCH_SIZE", "*", "len", "(", "gpus", ")", ",", "\n", "shuffle", "=", "config", ".", "TRAIN", ".", "SHUFFLE", ",", "\n", "num_workers", "=", "config", ".", "WORKERS", ",", "\n", "pin_memory", "=", "True", ")", "\n", "\n", "test_dataset", "=", "eval", "(", "'dataset.'", "+", "config", ".", "DATASET", ".", "TEST_DATASET", ")", "(", "\n", "config", ",", "config", ".", "DATASET", ".", "TEST_SUBSET", ",", "False", ",", "\n", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", ",", "\n", "]", ")", ")", "\n", "\n", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "test_dataset", ",", "\n", "batch_size", "=", "config", ".", "TEST", ".", "BATCH_SIZE", "*", "len", "(", "gpus", ")", ",", "\n", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "config", ".", "WORKERS", ",", "\n", "pin_memory", "=", "True", ")", "\n", "\n", "cudnn", ".", "benchmark", "=", "config", ".", "CUDNN", ".", "BENCHMARK", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "config", ".", "CUDNN", ".", "DETERMINISTIC", "\n", "torch", ".", "backends", ".", "cudnn", ".", "enabled", "=", "config", ".", "CUDNN", ".", "ENABLED", "\n", "\n", "print", "(", "'=> Constructing models ..'", ")", "\n", "model", "=", "eval", "(", "'models.'", "+", "config", ".", "MODEL", "+", "'.get_multi_person_pose_net'", ")", "(", "\n", "config", ",", "is_train", "=", "True", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "model", ",", "device_ids", "=", "gpus", ")", ".", "cuda", "(", ")", "\n", "\n", "", "model", ",", "optimizer", "=", "get_optimizer", "(", "model", ")", "\n", "\n", "start_epoch", "=", "config", ".", "TRAIN", ".", "BEGIN_EPOCH", "\n", "end_epoch", "=", "config", ".", "TRAIN", ".", "END_EPOCH", "\n", "\n", "best_precision", "=", "0", "\n", "if", "config", ".", "NETWORK", ".", "PRETRAINED_BACKBONE", ":", "\n", "        ", "model", "=", "load_backbone_panoptic", "(", "model", ",", "config", ".", "NETWORK", ".", "PRETRAINED_BACKBONE", ")", "\n", "", "if", "config", ".", "TRAIN", ".", "RESUME", ":", "\n", "        ", "start_epoch", ",", "model", ",", "optimizer", ",", "best_precision", "=", "load_checkpoint", "(", "model", ",", "optimizer", ",", "final_output_dir", ")", "\n", "\n", "", "writer_dict", "=", "{", "\n", "'writer'", ":", "SummaryWriter", "(", "log_dir", "=", "tb_log_dir", ")", ",", "\n", "'train_global_steps'", ":", "0", ",", "\n", "'valid_global_steps'", ":", "0", ",", "\n", "}", "\n", "\n", "print", "(", "'=> Training...'", ")", "\n", "for", "epoch", "in", "range", "(", "start_epoch", ",", "end_epoch", ")", ":", "\n", "        ", "print", "(", "'Epoch: {}'", ".", "format", "(", "epoch", ")", ")", "\n", "\n", "# lr_scheduler.step()", "\n", "train_3d", "(", "config", ",", "model", ",", "optimizer", ",", "train_loader", ",", "epoch", ",", "final_output_dir", ",", "writer_dict", ")", "\n", "precision", "=", "validate_3d", "(", "config", ",", "model", ",", "test_loader", ",", "final_output_dir", ")", "\n", "\n", "if", "precision", ">", "best_precision", ":", "\n", "            ", "best_precision", "=", "precision", "\n", "best_model", "=", "True", "\n", "", "else", ":", "\n", "            ", "best_model", "=", "False", "\n", "\n", "", "logger", ".", "info", "(", "'=> saving checkpoint to {} (Best: {})'", ".", "format", "(", "final_output_dir", ",", "best_model", ")", ")", "\n", "save_checkpoint", "(", "{", "\n", "'epoch'", ":", "epoch", "+", "1", ",", "\n", "'state_dict'", ":", "model", ".", "module", ".", "state_dict", "(", ")", ",", "\n", "'precision'", ":", "best_precision", ",", "\n", "'optimizer'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "}", ",", "best_model", ",", "final_output_dir", ")", "\n", "\n", "", "final_model_state_file", "=", "os", ".", "path", ".", "join", "(", "final_output_dir", ",", "\n", "'final_state.pth.tar'", ")", "\n", "logger", ".", "info", "(", "'saving final model state to {}'", ".", "format", "(", "\n", "final_model_state_file", ")", ")", "\n", "torch", ".", "save", "(", "model", ".", "module", ".", "state_dict", "(", ")", ",", "final_model_state_file", ")", "\n", "\n", "writer_dict", "[", "'writer'", "]", ".", "close", "(", ")", "\n", "\n"]]}