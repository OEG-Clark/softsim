{"home.repos.pwc.inspect_result.GeneZC_PWCN.None.data_utils.Tokenizer.__init__": [[41, 55], ["word2idx.items"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "word2idx", "=", "None", ")", ":", "\n", "        ", "if", "word2idx", "is", "None", ":", "\n", "            ", "self", ".", "word2idx", "=", "{", "}", "\n", "self", ".", "idx2word", "=", "{", "}", "\n", "self", ".", "idx", "=", "0", "\n", "self", ".", "word2idx", "[", "'<pad>'", "]", "=", "self", ".", "idx", "\n", "self", ".", "idx2word", "[", "self", ".", "idx", "]", "=", "'<pad>'", "\n", "self", ".", "idx", "+=", "1", "\n", "self", ".", "word2idx", "[", "'<unk>'", "]", "=", "self", ".", "idx", "\n", "self", ".", "idx2word", "[", "self", ".", "idx", "]", "=", "'<unk>'", "\n", "self", ".", "idx", "+=", "1", "\n", "", "else", ":", "\n", "            ", "self", ".", "word2idx", "=", "word2idx", "\n", "self", ".", "idx2word", "=", "{", "v", ":", "k", "for", "k", ",", "v", "in", "word2idx", ".", "items", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.GeneZC_PWCN.None.data_utils.Tokenizer.fit_on_text": [[56, 64], ["text.lower.lower.lower", "text.lower.lower.split"], "methods", ["None"], ["", "", "def", "fit_on_text", "(", "self", ",", "text", ")", ":", "\n", "        ", "text", "=", "text", ".", "lower", "(", ")", "\n", "words", "=", "text", ".", "split", "(", ")", "\n", "for", "word", "in", "words", ":", "\n", "            ", "if", "word", "not", "in", "self", ".", "word2idx", ":", "\n", "                ", "self", ".", "word2idx", "[", "word", "]", "=", "self", ".", "idx", "\n", "self", ".", "idx2word", "[", "self", ".", "idx", "]", "=", "word", "\n", "self", ".", "idx", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.GeneZC_PWCN.None.data_utils.Tokenizer.text_to_sequence": [[65, 73], ["text.lower.lower.lower", "text.lower.lower.split", "len"], "methods", ["None"], ["", "", "", "def", "text_to_sequence", "(", "self", ",", "text", ")", ":", "\n", "        ", "text", "=", "text", ".", "lower", "(", ")", "\n", "words", "=", "text", ".", "split", "(", ")", "\n", "unknownidx", "=", "1", "\n", "sequence", "=", "[", "self", ".", "word2idx", "[", "w", "]", "if", "w", "in", "self", ".", "word2idx", "else", "unknownidx", "for", "w", "in", "words", "]", "\n", "if", "len", "(", "sequence", ")", "==", "0", ":", "\n", "            ", "sequence", "=", "[", "0", "]", "\n", "", "return", "sequence", "\n", "\n"]], "home.repos.pwc.inspect_result.GeneZC_PWCN.None.data_utils.ABSADataset.__init__": [[76, 78], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data", ")", ":", "\n", "        ", "self", ".", "data", "=", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.GeneZC_PWCN.None.data_utils.ABSADataset.__getitem__": [[79, 81], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "return", "self", ".", "data", "[", "index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.GeneZC_PWCN.None.data_utils.ABSADataset.__len__": [[82, 84], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.GeneZC_PWCN.None.data_utils.ABSADatesetReader.__read_text__": [[87, 100], ["open", "open.readlines", "open.close", "range", "len", "lines[].lower().strip", "s.lower().strip", "lines[].partition", "lines[].lower", "s.lower"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "__read_text__", "(", "fnames", ")", ":", "\n", "        ", "text", "=", "''", "\n", "for", "fname", "in", "fnames", ":", "\n", "            ", "fin", "=", "open", "(", "fname", ",", "'r'", ",", "encoding", "=", "'utf-8'", ",", "newline", "=", "'\\n'", ",", "errors", "=", "'ignore'", ")", "\n", "lines", "=", "fin", ".", "readlines", "(", ")", "\n", "fin", ".", "close", "(", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "lines", ")", ",", "3", ")", ":", "\n", "                ", "text_left", ",", "_", ",", "text_right", "=", "[", "s", ".", "lower", "(", ")", ".", "strip", "(", ")", "for", "s", "in", "lines", "[", "i", "]", ".", "partition", "(", "\"$T$\"", ")", "]", "\n", "aspect", "=", "lines", "[", "i", "+", "1", "]", ".", "lower", "(", ")", ".", "strip", "(", ")", "\n", "text_raw", "=", "text_left", "+", "\" \"", "+", "aspect", "+", "\" \"", "+", "text_right", "\n", "text", "+=", "text_raw", "+", "\" \"", "\n", "", "", "return", "text", "\n", "\n"]], "home.repos.pwc.inspect_result.GeneZC_PWCN.None.data_utils.ABSADatesetReader.__read_data__": [[101, 134], ["open", "open.readlines", "open.close", "open", "open.readlines", "open.close", "range", "len", "lines[].lower().strip", "lines[].strip", "tokenizer.text_to_sequence", "tokenizer.text_to_sequence", "tokenizer.text_to_sequence", "all_data.append", "s.lower().strip", "int", "float", "lines[].partition", "lines[].lower", "dist_lines[].split", "s.lower"], "methods", ["home.repos.pwc.inspect_result.GeneZC_PWCN.None.data_utils.Tokenizer.text_to_sequence", "home.repos.pwc.inspect_result.GeneZC_PWCN.None.data_utils.Tokenizer.text_to_sequence", "home.repos.pwc.inspect_result.GeneZC_PWCN.None.data_utils.Tokenizer.text_to_sequence"], ["", "@", "staticmethod", "\n", "def", "__read_data__", "(", "fname", ",", "tokenizer", ")", ":", "\n", "        ", "fin", "=", "open", "(", "fname", ",", "'r'", ",", "encoding", "=", "'utf-8'", ",", "newline", "=", "'\\n'", ",", "errors", "=", "'ignore'", ")", "\n", "lines", "=", "fin", ".", "readlines", "(", ")", "\n", "fin", ".", "close", "(", ")", "\n", "fin", "=", "open", "(", "fname", "+", "'.dist'", ",", "'r'", ",", "encoding", "=", "'utf-8'", ",", "newline", "=", "'\\n'", ",", "errors", "=", "'ignore'", ")", "\n", "dist_lines", "=", "fin", ".", "readlines", "(", ")", "\n", "fin", ".", "close", "(", ")", "\n", "\n", "all_data", "=", "[", "]", "\n", "cnt", "=", "0", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "lines", ")", ",", "3", ")", ":", "\n", "            ", "text_left", ",", "_", ",", "text_right", "=", "[", "s", ".", "lower", "(", ")", ".", "strip", "(", ")", "for", "s", "in", "lines", "[", "i", "]", ".", "partition", "(", "\"$T$\"", ")", "]", "\n", "aspect", "=", "lines", "[", "i", "+", "1", "]", ".", "lower", "(", ")", ".", "strip", "(", ")", "\n", "polarity", "=", "lines", "[", "i", "+", "2", "]", ".", "strip", "(", ")", "\n", "\n", "text_indices", "=", "tokenizer", ".", "text_to_sequence", "(", "text_left", "+", "\" \"", "+", "aspect", "+", "\" \"", "+", "text_right", ")", "\n", "aspect_indices", "=", "tokenizer", ".", "text_to_sequence", "(", "aspect", ")", "\n", "left_indices", "=", "tokenizer", ".", "text_to_sequence", "(", "text_left", ")", "\n", "polarity", "=", "int", "(", "polarity", ")", "+", "1", "\n", "dependency_dist", "=", "[", "float", "(", "d", ")", "for", "d", "in", "dist_lines", "[", "cnt", "*", "2", "+", "1", "]", ".", "split", "(", ")", "]", "\n", "cnt", "+=", "1", "\n", "\n", "data", "=", "{", "\n", "'text_indices'", ":", "text_indices", ",", "\n", "'aspect_indices'", ":", "aspect_indices", ",", "\n", "'left_indices'", ":", "left_indices", ",", "\n", "'polarity'", ":", "polarity", ",", "\n", "'dependency_dist'", ":", "dependency_dist", "\n", "}", "\n", "\n", "all_data", ".", "append", "(", "data", ")", "\n", "", "return", "all_data", "\n", "\n"]], "home.repos.pwc.inspect_result.GeneZC_PWCN.None.data_utils.ABSADatesetReader.__init__": [[135, 163], ["print", "data_utils.ABSADatesetReader.__read_text__", "os.path.exists", "data_utils.build_embedding_matrix", "data_utils.ABSADataset", "data_utils.ABSADataset", "print", "data_utils.Tokenizer", "data_utils.Tokenizer.fit_on_text", "data_utils.ABSADatesetReader.__read_data__", "data_utils.ABSADatesetReader.__read_data__", "open", "pickle.load", "data_utils.Tokenizer", "open", "pickle.dump"], "methods", ["home.repos.pwc.inspect_result.GeneZC_PWCN.None.data_utils.ABSADatesetReader.__read_text__", "home.repos.pwc.inspect_result.GeneZC_PWCN.None.data_utils.build_embedding_matrix", "home.repos.pwc.inspect_result.GeneZC_PWCN.None.data_utils.Tokenizer.fit_on_text", "home.repos.pwc.inspect_result.GeneZC_PWCN.None.data_utils.ABSADatesetReader.__read_data__", "home.repos.pwc.inspect_result.GeneZC_PWCN.None.data_utils.ABSADatesetReader.__read_data__"], ["", "def", "__init__", "(", "self", ",", "dataset", "=", "'laptop'", ",", "embed_dim", "=", "300", ")", ":", "\n", "        ", "print", "(", "\"preparing {0} dataset...\"", ".", "format", "(", "dataset", ")", ")", "\n", "fname", "=", "{", "\n", "'restaurant'", ":", "{", "\n", "'train'", ":", "'./datasets/semeval14/Restaurants_Train.xml.seg'", ",", "\n", "'test'", ":", "'./datasets/semeval14/Restaurants_Test_Gold.xml.seg'", "\n", "}", ",", "\n", "'laptop'", ":", "{", "\n", "'train'", ":", "'./datasets/semeval14/Laptops_Train.xml.seg'", ",", "\n", "'test'", ":", "'./datasets/semeval14/Laptops_Test_Gold.xml.seg'", "\n", "}", "\n", "}", "\n", "text", "=", "ABSADatesetReader", ".", "__read_text__", "(", "[", "fname", "[", "dataset", "]", "[", "'train'", "]", ",", "fname", "[", "dataset", "]", "[", "'test'", "]", "]", ")", "\n", "\n", "if", "os", ".", "path", ".", "exists", "(", "dataset", "+", "'_word2idx.pkl'", ")", ":", "\n", "            ", "print", "(", "\"loading {0} tokenizer...\"", ".", "format", "(", "dataset", ")", ")", "\n", "with", "open", "(", "dataset", "+", "'_word2idx.pkl'", ",", "'rb'", ")", "as", "f", ":", "\n", "                 ", "word2idx", "=", "pickle", ".", "load", "(", "f", ")", "\n", "tokenizer", "=", "Tokenizer", "(", "word2idx", "=", "word2idx", ")", "\n", "", "", "else", ":", "\n", "            ", "tokenizer", "=", "Tokenizer", "(", ")", "\n", "tokenizer", ".", "fit_on_text", "(", "text", ")", "\n", "with", "open", "(", "dataset", "+", "'_word2idx.pkl'", ",", "'wb'", ")", "as", "f", ":", "\n", "                ", "pickle", ".", "dump", "(", "tokenizer", ".", "word2idx", ",", "f", ")", "\n", "\n", "", "", "self", ".", "embedding_matrix", "=", "build_embedding_matrix", "(", "tokenizer", ".", "word2idx", ",", "embed_dim", ",", "dataset", ")", "\n", "self", ".", "train_data", "=", "ABSADataset", "(", "ABSADatesetReader", ".", "__read_data__", "(", "fname", "[", "dataset", "]", "[", "'train'", "]", ",", "tokenizer", ")", ")", "\n", "self", ".", "test_data", "=", "ABSADataset", "(", "ABSADatesetReader", ".", "__read_data__", "(", "fname", "[", "dataset", "]", "[", "'test'", "]", ",", "tokenizer", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.GeneZC_PWCN.None.data_utils.load_word_vec": [[8, 17], ["open", "line.rstrip().split", "word2idx.keys", "numpy.asarray", "line.rstrip"], "function", ["None"], ["def", "load_word_vec", "(", "path", ",", "word2idx", "=", "None", ",", "embed_dim", "=", "300", ")", ":", "\n", "    ", "fin", "=", "open", "(", "path", ",", "'r'", ",", "encoding", "=", "'utf-8'", ",", "newline", "=", "'\\n'", ",", "errors", "=", "'ignore'", ")", "\n", "word_vec", "=", "{", "}", "\n", "for", "line", "in", "fin", ":", "\n", "        ", "tokens", "=", "line", ".", "rstrip", "(", ")", ".", "split", "(", ")", "\n", "word", ",", "vec", "=", "' '", ".", "join", "(", "tokens", "[", ":", "-", "embed_dim", "]", ")", ",", "tokens", "[", "-", "embed_dim", ":", "]", "\n", "if", "word", "in", "word2idx", ".", "keys", "(", ")", ":", "\n", "            ", "word_vec", "[", "word", "]", "=", "np", ".", "asarray", "(", "vec", ",", "dtype", "=", "'float32'", ")", "\n", "", "", "return", "word_vec", "\n", "\n"]], "home.repos.pwc.inspect_result.GeneZC_PWCN.None.data_utils.build_embedding_matrix": [[19, 38], ["os.path.exists", "str", "print", "pickle.load", "print", "numpy.zeros", "numpy.random.uniform", "data_utils.load_word_vec", "print", "word2idx.items", "pickle.dump", "open", "load_word_vec.get", "open", "len", "numpy.sqrt", "numpy.sqrt"], "function", ["home.repos.pwc.inspect_result.GeneZC_PWCN.None.data_utils.load_word_vec"], ["", "def", "build_embedding_matrix", "(", "word2idx", ",", "embed_dim", ",", "type", ")", ":", "\n", "    ", "embedding_matrix_file_name", "=", "'{0}_{1}_embedding_matrix.pkl'", ".", "format", "(", "str", "(", "embed_dim", ")", ",", "type", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "embedding_matrix_file_name", ")", ":", "\n", "        ", "print", "(", "'loading embedding_matrix:'", ",", "embedding_matrix_file_name", ")", "\n", "embedding_matrix", "=", "pickle", ".", "load", "(", "open", "(", "embedding_matrix_file_name", ",", "'rb'", ")", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "'loading word vectors ...'", ")", "\n", "embedding_matrix", "=", "np", ".", "zeros", "(", "(", "len", "(", "word2idx", ")", ",", "embed_dim", ")", ")", "# idx 0 and 1 are all-zeros", "\n", "embedding_matrix", "[", "1", ",", ":", "]", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", "/", "np", ".", "sqrt", "(", "embed_dim", ")", ",", "1", "/", "np", ".", "sqrt", "(", "embed_dim", ")", ",", "(", "1", ",", "embed_dim", ")", ")", "\n", "fname", "=", "'./glove/glove.840B.300d.txt'", "\n", "word_vec", "=", "load_word_vec", "(", "fname", ",", "word2idx", "=", "word2idx", ",", "embed_dim", "=", "embed_dim", ")", "\n", "print", "(", "'building embedding_matrix:'", ",", "embedding_matrix_file_name", ")", "\n", "for", "word", ",", "i", "in", "word2idx", ".", "items", "(", ")", ":", "\n", "            ", "vec", "=", "word_vec", ".", "get", "(", "word", ")", "\n", "if", "vec", "is", "not", "None", ":", "\n", "# words not found in embedding index will be all-zeros.", "\n", "                ", "embedding_matrix", "[", "i", "]", "=", "vec", "\n", "", "", "pickle", ".", "dump", "(", "embedding_matrix", ",", "open", "(", "embedding_matrix_file_name", ",", "'wb'", ")", ")", "\n", "", "return", "embedding_matrix", "\n", "\n"]], "home.repos.pwc.inspect_result.GeneZC_PWCN.None.dependency_dist.WhitespaceTokenizer.__init__": [[10, 12], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "vocab", ")", ":", "\n", "        ", "self", ".", "vocab", "=", "vocab", "\n", "\n"]], "home.repos.pwc.inspect_result.GeneZC_PWCN.None.dependency_dist.WhitespaceTokenizer.__call__": [[13, 18], ["text.split", "spacy.tokens.Doc", "len"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "text", ")", ":", "\n", "        ", "words", "=", "text", ".", "split", "(", ")", "\n", "# All tokens 'own' a subsequent space character in this tokenizer", "\n", "spaces", "=", "[", "True", "]", "*", "len", "(", "words", ")", "\n", "return", "Doc", "(", "self", ".", "vocab", ",", "words", "=", "words", ",", "spaces", "=", "spaces", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.GeneZC_PWCN.None.dependency_dist.dependency_dist_func": [[22, 49], ["nlp", "networkx.Graph", "text.split", "len", "text.partition", "len", "enumerate", "numpy.min", "text_left.split", "len", "numpy.ones().astype", "range", "edges.append", "aspect_term.split", "range", "numpy.ones", "networkx.shortest_path_length", "len"], "function", ["None"], ["def", "dependency_dist_func", "(", "text", ",", "aspect_term", ")", ":", "\n", "# https://spacy.io/docs/usage/processing-text", "\n", "    ", "document", "=", "nlp", "(", "text", ")", "\n", "# Load spacy's dependency tree into a networkx graph", "\n", "edges", "=", "[", "]", "\n", "\n", "for", "token", "in", "document", ":", "\n", "# FYI https://spacy.io/docs/api/token", "\n", "        ", "for", "child", "in", "token", ".", "children", ":", "\n", "            ", "edges", ".", "append", "(", "(", "token", ".", "i", ",", "child", ".", "i", ")", ")", "\n", "", "", "graph", "=", "nx", ".", "Graph", "(", "edges", ")", "\n", "\n", "text_lst", "=", "text", ".", "split", "(", ")", "\n", "seq_len", "=", "len", "(", "text_lst", ")", "\n", "text_left", ",", "_", ",", "_", "=", "text", ".", "partition", "(", "aspect_term", ")", "\n", "start", "=", "len", "(", "text_left", ".", "split", "(", ")", ")", "\n", "end", "=", "start", "+", "len", "(", "aspect_term", ".", "split", "(", ")", ")", "\n", "asp_idx", "=", "[", "i", "for", "i", "in", "range", "(", "start", ",", "end", ")", "]", "\n", "dist_matrix", "=", "seq_len", "*", "np", ".", "ones", "(", "(", "seq_len", ",", "len", "(", "asp_idx", ")", ")", ")", ".", "astype", "(", "'float32'", ")", "\n", "for", "i", ",", "asp", "in", "enumerate", "(", "asp_idx", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "seq_len", ")", ":", "\n", "            ", "try", ":", "\n", "                ", "dist_matrix", "[", "j", "]", "[", "i", "]", "=", "nx", ".", "shortest_path_length", "(", "graph", ",", "source", "=", "asp", ",", "target", "=", "j", ")", "\n", "", "except", ":", "\n", "                ", "dist_matrix", "[", "j", "]", "[", "i", "]", "=", "seq_len", "/", "2", "\n", "", "", "", "dist_matrix", "=", "np", ".", "min", "(", "dist_matrix", ",", "axis", "=", "1", ")", "\n", "return", "dist_matrix", "\n", "\n"]], "home.repos.pwc.inspect_result.GeneZC_PWCN.None.bucket_iterator.BucketIterator.__init__": [[8, 13], ["bucket_iterator.BucketIterator.sort_and_pad", "len"], "methods", ["home.repos.pwc.inspect_result.GeneZC_PWCN.None.bucket_iterator.BucketIterator.sort_and_pad"], ["    ", "def", "__init__", "(", "self", ",", "data", ",", "batch_size", ",", "shuffle", "=", "True", ",", "sort", "=", "True", ")", ":", "\n", "        ", "self", ".", "shuffle", "=", "shuffle", "\n", "self", ".", "sort", "=", "sort", "\n", "self", ".", "batches", "=", "self", ".", "sort_and_pad", "(", "data", ",", "batch_size", ")", "\n", "self", ".", "batch_len", "=", "len", "(", "self", ".", "batches", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.GeneZC_PWCN.None.bucket_iterator.BucketIterator.sort_and_pad": [[14, 24], ["int", "range", "math.ceil", "sorted", "batches.append", "bucket_iterator.BucketIterator.pad_data", "len", "len"], "methods", ["home.repos.pwc.inspect_result.GeneZC_PWCN.None.bucket_iterator.BucketIterator.pad_data"], ["", "def", "sort_and_pad", "(", "self", ",", "data", ",", "batch_size", ")", ":", "\n", "        ", "num_batch", "=", "int", "(", "math", ".", "ceil", "(", "len", "(", "data", ")", "/", "batch_size", ")", ")", "\n", "if", "self", ".", "sort", ":", "\n", "            ", "sorted_data", "=", "sorted", "(", "data", ",", "key", "=", "lambda", "x", ":", "len", "(", "x", "[", "'text_indices'", "]", ")", ")", "\n", "", "else", ":", "\n", "            ", "sorted_data", "=", "data", "\n", "", "batches", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_batch", ")", ":", "\n", "            ", "batches", ".", "append", "(", "self", ".", "pad_data", "(", "sorted_data", "[", "i", "*", "batch_size", ":", "(", "i", "+", "1", ")", "*", "batch_size", "]", ")", ")", "\n", "", "return", "batches", "\n", "\n"]], "home.repos.pwc.inspect_result.GeneZC_PWCN.None.bucket_iterator.BucketIterator.pad_data": [[25, 52], ["max", "batch_text_indices.append", "batch_aspect_indices.append", "batch_left_indices.append", "batch_polarity.append", "batch_dependency_dist.append", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "len", "len", "len", "len", "len"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "pad_data", "(", "batch_data", ")", ":", "\n", "        ", "batch_text_indices", "=", "[", "]", "\n", "batch_aspect_indices", "=", "[", "]", "\n", "batch_left_indices", "=", "[", "]", "\n", "batch_polarity", "=", "[", "]", "\n", "batch_dependency_dist", "=", "[", "]", "\n", "max_len", "=", "max", "(", "[", "len", "(", "t", "[", "'text_indices'", "]", ")", "for", "t", "in", "batch_data", "]", ")", "\n", "for", "item", "in", "batch_data", ":", "\n", "            ", "text_indices", ",", "aspect_indices", ",", "left_indices", ",", "polarity", ",", "dependency_dist", "=", "item", "[", "'text_indices'", "]", ",", "item", "[", "'aspect_indices'", "]", ",", "item", "[", "'left_indices'", "]", ",", "item", "[", "'polarity'", "]", ",", "item", "[", "'dependency_dist'", "]", "\n", "text_padding", "=", "[", "0", "]", "*", "(", "max_len", "-", "len", "(", "text_indices", ")", ")", "\n", "aspect_padding", "=", "[", "0", "]", "*", "(", "max_len", "-", "len", "(", "aspect_indices", ")", ")", "\n", "left_padding", "=", "[", "0", "]", "*", "(", "max_len", "-", "len", "(", "left_indices", ")", ")", "\n", "dependency_dist_padding", "=", "[", "0", "]", "*", "(", "max_len", "-", "len", "(", "dependency_dist", ")", ")", "\n", "batch_text_indices", ".", "append", "(", "text_indices", "+", "text_padding", ")", "\n", "batch_aspect_indices", ".", "append", "(", "aspect_indices", "+", "aspect_padding", ")", "\n", "batch_left_indices", ".", "append", "(", "left_indices", "+", "left_padding", ")", "\n", "batch_polarity", ".", "append", "(", "polarity", ")", "\n", "batch_dependency_dist", ".", "append", "(", "dependency_dist", "+", "dependency_dist_padding", ")", "\n", "", "return", "{", "'text_indices'", ":", "torch", ".", "tensor", "(", "batch_text_indices", ")", ",", "'aspect_indices'", ":", "torch", ".", "tensor", "(", "batch_aspect_indices", ")", ",", "'left_indices'", ":", "torch", ".", "tensor", "(", "batch_left_indices", ")", ",", "'polarity'", ":", "torch", ".", "tensor", "(", "batch_polarity", ")", ",", "'dependency_dist'", ":", "torch", ".", "tensor", "(", "batch_dependency_dist", ")", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.GeneZC_PWCN.None.bucket_iterator.BucketIterator.__iter__": [[54, 59], ["range", "random.shuffle"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "shuffle", ":", "\n", "            ", "random", ".", "shuffle", "(", "self", ".", "batches", ")", "\n", "", "for", "idx", "in", "range", "(", "self", ".", "batch_len", ")", ":", "\n", "            ", "yield", "self", ".", "batches", "[", "idx", "]", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.GeneZC_PWCN.None.train.Instructor.__init__": [[17, 27], ["data_utils.ABSADatesetReader", "bucket_iterator.BucketIterator", "bucket_iterator.BucketIterator", "opt.model_class().to", "train.Instructor._print_args", "opt.model_class"], "methods", ["home.repos.pwc.inspect_result.GeneZC_PWCN.None.train.Instructor._print_args"], ["    ", "def", "__init__", "(", "self", ",", "opt", ")", ":", "\n", "        ", "self", ".", "opt", "=", "opt", "\n", "\n", "absa_dataset", "=", "ABSADatesetReader", "(", "dataset", "=", "opt", ".", "dataset", ",", "embed_dim", "=", "opt", ".", "embed_dim", ")", "\n", "self", ".", "train_data_loader", "=", "BucketIterator", "(", "data", "=", "absa_dataset", ".", "train_data", ",", "batch_size", "=", "opt", ".", "batch_size", ",", "shuffle", "=", "True", ")", "\n", "self", ".", "test_data_loader", "=", "BucketIterator", "(", "data", "=", "absa_dataset", ".", "test_data", ",", "batch_size", "=", "opt", ".", "batch_size", ",", "shuffle", "=", "False", ")", "\n", "\n", "self", ".", "model", "=", "opt", ".", "model_class", "(", "absa_dataset", ".", "embedding_matrix", ",", "opt", ")", ".", "to", "(", "opt", ".", "device", ")", "\n", "self", ".", "_print_args", "(", ")", "\n", "self", ".", "global_f1", "=", "0.", "\n", "\n"]], "home.repos.pwc.inspect_result.GeneZC_PWCN.None.train.Instructor._print_args": [[28, 40], ["train.Instructor.model.parameters", "print", "print", "vars", "torch.prod().item", "torch.prod().item", "torch.prod().item", "torch.prod().item", "print", "torch.prod", "torch.prod", "torch.prod", "torch.prod", "getattr", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["None"], ["", "def", "_print_args", "(", "self", ")", ":", "\n", "        ", "n_trainable_params", ",", "n_nontrainable_params", "=", "0", ",", "0", "\n", "for", "p", "in", "self", ".", "model", ".", "parameters", "(", ")", ":", "\n", "            ", "n_params", "=", "torch", ".", "prod", "(", "torch", ".", "tensor", "(", "p", ".", "shape", ")", ")", ".", "item", "(", ")", "\n", "if", "p", ".", "requires_grad", ":", "\n", "                ", "n_trainable_params", "+=", "n_params", "\n", "", "else", ":", "\n", "                ", "n_nontrainable_params", "+=", "n_params", "\n", "", "", "print", "(", "'>> n_trainable_params: {0}, n_nontrainable_params: {1}'", ".", "format", "(", "n_trainable_params", ",", "n_nontrainable_params", ")", ")", "\n", "print", "(", "'>> training arguments:'", ")", "\n", "for", "arg", "in", "vars", "(", "self", ".", "opt", ")", ":", "\n", "            ", "print", "(", "'>>> {0}: {1}'", ".", "format", "(", "arg", ",", "getattr", "(", "self", ".", "opt", ",", "arg", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.GeneZC_PWCN.None.train.Instructor._reset_params": [[41, 49], ["train.Instructor.model.parameters", "len", "train.Instructor.opt.initializer", "torch.nn.init.uniform_", "torch.nn.init.uniform_", "torch.nn.init.uniform_", "torch.nn.init.uniform_", "math.sqrt"], "methods", ["None"], ["", "", "def", "_reset_params", "(", "self", ")", ":", "\n", "        ", "for", "p", "in", "self", ".", "model", ".", "parameters", "(", ")", ":", "\n", "            ", "if", "p", ".", "requires_grad", ":", "\n", "                ", "if", "len", "(", "p", ".", "shape", ")", ">", "1", ":", "\n", "                    ", "self", ".", "opt", ".", "initializer", "(", "p", ")", "\n", "", "else", ":", "\n", "                    ", "stdv", "=", "1.", "/", "math", ".", "sqrt", "(", "p", ".", "shape", "[", "0", "]", ")", "\n", "torch", ".", "nn", ".", "init", ".", "uniform_", "(", "p", ",", "a", "=", "-", "stdv", ",", "b", "=", "stdv", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.GeneZC_PWCN.None.train.Instructor._train": [[50, 101], ["range", "print", "print", "enumerate", "train.Instructor.model.train", "optimizer.zero_grad", "sample_batched[].to", "train.Instructor.model", "criterion", "criterion.backward", "optimizer.step", "sample_batched[].to", "len", "train.Instructor._evaluate_acc_f1", "print", "print", "torch.save", "torch.save", "torch.save", "torch.save", "print", "criterion.item", "os.path.exists", "os.mkdir", "train.Instructor.model.state_dict", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax"], "methods", ["home.repos.pwc.inspect_result.GeneZC_PWCN.None.train.Instructor._evaluate_acc_f1"], ["", "", "", "", "def", "_train", "(", "self", ",", "criterion", ",", "optimizer", ")", ":", "\n", "        ", "max_test_acc", "=", "0", "\n", "max_f1", "=", "0", "\n", "global_step", "=", "0", "\n", "continue_not_increase", "=", "0", "\n", "for", "epoch", "in", "range", "(", "self", ".", "opt", ".", "num_epoch", ")", ":", "\n", "            ", "print", "(", "'>'", "*", "100", ")", "\n", "print", "(", "'epoch: '", ",", "epoch", ")", "\n", "n_correct", ",", "n_total", "=", "0", ",", "0", "\n", "increase_flag", "=", "False", "\n", "for", "i_batch", ",", "sample_batched", "in", "enumerate", "(", "self", ".", "train_data_loader", ")", ":", "\n", "                ", "global_step", "+=", "1", "\n", "\n", "# switch model to training mode, clear gradient accumulators", "\n", "self", ".", "model", ".", "train", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "inputs", "=", "[", "sample_batched", "[", "col", "]", ".", "to", "(", "self", ".", "opt", ".", "device", ")", "for", "col", "in", "self", ".", "opt", ".", "inputs_cols", "]", "\n", "targets", "=", "sample_batched", "[", "'polarity'", "]", ".", "to", "(", "self", ".", "opt", ".", "device", ")", "\n", "\n", "outputs", "=", "self", ".", "model", "(", "inputs", ")", "\n", "loss", "=", "criterion", "(", "outputs", ",", "targets", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "if", "global_step", "%", "self", ".", "opt", ".", "log_step", "==", "0", ":", "\n", "                    ", "n_correct", "+=", "(", "torch", ".", "argmax", "(", "outputs", ",", "-", "1", ")", "==", "targets", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "n_total", "+=", "len", "(", "outputs", ")", "\n", "train_acc", "=", "n_correct", "/", "n_total", "\n", "\n", "test_acc", ",", "f1", "=", "self", ".", "_evaluate_acc_f1", "(", ")", "\n", "if", "test_acc", ">", "max_test_acc", ":", "\n", "                        ", "max_test_acc", "=", "test_acc", "\n", "", "if", "f1", ">", "max_f1", ":", "\n", "                        ", "increase_flag", "=", "True", "\n", "max_f1", "=", "f1", "\n", "if", "self", ".", "opt", ".", "save", "and", "f1", ">", "self", ".", "global_f1", ":", "\n", "                            ", "self", ".", "global_f1", "=", "f1", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "'state_dict'", ")", ":", "\n", "                                ", "os", ".", "mkdir", "(", "'state_dict'", ")", "\n", "", "torch", ".", "save", "(", "self", ".", "model", ".", "state_dict", "(", ")", ",", "'state_dict/'", "+", "self", ".", "opt", ".", "model_name", "+", "'_'", "+", "self", ".", "opt", ".", "dataset", "+", "'.pkl'", ")", "\n", "print", "(", "'>> best model saved.'", ")", "\n", "", "", "print", "(", "'loss: {:.4f}, acc: {:.4f}, test_acc: {:.4f}, f1: {:.4f}'", ".", "format", "(", "loss", ".", "item", "(", ")", ",", "train_acc", ",", "test_acc", ",", "f1", ")", ")", "\n", "", "", "if", "increase_flag", "==", "False", ":", "\n", "                ", "continue_not_increase", "+=", "1", "\n", "if", "continue_not_increase", ">=", "5", ":", "\n", "                    ", "print", "(", "'early stop.'", ")", "\n", "break", "\n", "", "", "else", ":", "\n", "                ", "continue_not_increase", "=", "0", "\n", "", "", "return", "max_test_acc", ",", "max_f1", "\n", "\n"]], "home.repos.pwc.inspect_result.GeneZC_PWCN.None.train.Instructor._evaluate_acc_f1": [[102, 126], ["train.Instructor.model.eval", "sklearn.metrics.f1_score", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "torch.cat.cpu", "torch.cat.cpu", "torch.argmax().cpu", "torch.argmax().cpu", "torch.argmax().cpu", "torch.argmax().cpu", "t_sample_batched[].to", "train.Instructor.model", "len", "t_sample_batched[].to", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax"], "methods", ["None"], ["", "def", "_evaluate_acc_f1", "(", "self", ")", ":", "\n", "# switch model to evaluation mode", "\n", "        ", "self", ".", "model", ".", "eval", "(", ")", "\n", "n_test_correct", ",", "n_test_total", "=", "0", ",", "0", "\n", "t_targets_all", ",", "t_outputs_all", "=", "None", ",", "None", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "t_batch", ",", "t_sample_batched", "in", "enumerate", "(", "self", ".", "test_data_loader", ")", ":", "\n", "                ", "t_inputs", "=", "[", "t_sample_batched", "[", "col", "]", ".", "to", "(", "opt", ".", "device", ")", "for", "col", "in", "self", ".", "opt", ".", "inputs_cols", "]", "\n", "t_targets", "=", "t_sample_batched", "[", "'polarity'", "]", ".", "to", "(", "opt", ".", "device", ")", "\n", "t_outputs", "=", "self", ".", "model", "(", "t_inputs", ")", "\n", "\n", "n_test_correct", "+=", "(", "torch", ".", "argmax", "(", "t_outputs", ",", "-", "1", ")", "==", "t_targets", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "n_test_total", "+=", "len", "(", "t_outputs", ")", "\n", "\n", "if", "t_targets_all", "is", "None", ":", "\n", "                    ", "t_targets_all", "=", "t_targets", "\n", "t_outputs_all", "=", "t_outputs", "\n", "", "else", ":", "\n", "                    ", "t_targets_all", "=", "torch", ".", "cat", "(", "(", "t_targets_all", ",", "t_targets", ")", ",", "dim", "=", "0", ")", "\n", "t_outputs_all", "=", "torch", ".", "cat", "(", "(", "t_outputs_all", ",", "t_outputs", ")", ",", "dim", "=", "0", ")", "\n", "\n", "", "", "", "test_acc", "=", "n_test_correct", "/", "n_test_total", "\n", "f1", "=", "metrics", ".", "f1_score", "(", "t_targets_all", ".", "cpu", "(", ")", ",", "torch", ".", "argmax", "(", "t_outputs_all", ",", "-", "1", ")", ".", "cpu", "(", ")", ",", "labels", "=", "[", "0", ",", "1", ",", "2", "]", ",", "average", "=", "'macro'", ")", "\n", "return", "test_acc", ",", "f1", "\n", "\n"]], "home.repos.pwc.inspect_result.GeneZC_PWCN.None.train.Instructor.run": [[127, 145], ["torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "range", "print", "print", "print", "train.Instructor._reset_params", "filter", "train.Instructor.opt.optimizer", "train.Instructor._train", "print", "print", "train.Instructor.model.parameters"], "methods", ["home.repos.pwc.inspect_result.GeneZC_PWCN.None.train.Instructor._reset_params", "home.repos.pwc.inspect_result.GeneZC_PWCN.None.train.Instructor._train"], ["", "def", "run", "(", "self", ",", "repeats", "=", "5", ")", ":", "\n", "# Loss and Optimizer", "\n", "        ", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "\n", "max_test_acc_avg", "=", "0", "\n", "max_f1_avg", "=", "0", "\n", "for", "i", "in", "range", "(", "repeats", ")", ":", "\n", "            ", "print", "(", "'repeat: '", ",", "i", ")", "\n", "self", ".", "_reset_params", "(", ")", "\n", "_params", "=", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "self", ".", "model", ".", "parameters", "(", ")", ")", "\n", "optimizer", "=", "self", ".", "opt", ".", "optimizer", "(", "_params", ",", "lr", "=", "self", ".", "opt", ".", "learning_rate", ",", "weight_decay", "=", "self", ".", "opt", ".", "l2reg", ")", "\n", "max_test_acc", ",", "max_f1", "=", "self", ".", "_train", "(", "criterion", ",", "optimizer", ")", "\n", "print", "(", "'max_test_acc: {0}     max_f1: {1}'", ".", "format", "(", "max_test_acc", ",", "max_f1", ")", ")", "\n", "max_test_acc_avg", "+=", "max_test_acc", "\n", "max_f1_avg", "+=", "max_f1", "\n", "print", "(", "'#'", "*", "100", ")", "\n", "", "print", "(", "\"max_test_acc_avg:\"", ",", "max_test_acc_avg", "/", "repeats", ")", "\n", "print", "(", "\"max_f1_avg:\"", ",", "max_f1_avg", "/", "repeats", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.GeneZC_PWCN.None.infer.Inferer.__init__": [[17, 30], ["print", "data_utils.build_embedding_matrix", "opt.model_class", "print", "infer.Inferer.model.load_state_dict", "infer.Inferer.model.eval", "torch.autograd.set_grad_enabled", "torch.autograd.set_grad_enabled", "torch.autograd.set_grad_enabled", "torch.autograd.set_grad_enabled", "open", "pickle.load", "data_utils.Tokenizer", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["home.repos.pwc.inspect_result.GeneZC_PWCN.None.data_utils.build_embedding_matrix"], ["def", "__init__", "(", "self", ",", "opt", ")", ":", "\n", "        ", "self", ".", "opt", "=", "opt", "\n", "print", "(", "\"loading {0} tokenizer...\"", ".", "format", "(", "opt", ".", "dataset", ")", ")", "\n", "with", "open", "(", "opt", ".", "dataset", "+", "'_word2idx.pkl'", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "word2idx", "=", "pickle", ".", "load", "(", "f", ")", "\n", "self", ".", "tokenizer", "=", "Tokenizer", "(", "word2idx", "=", "word2idx", ")", "\n", "", "embedding_matrix", "=", "build_embedding_matrix", "(", "self", ".", "tokenizer", ".", "word2idx", ",", "opt", ".", "embed_dim", ",", "opt", ".", "dataset", ")", "\n", "self", ".", "model", "=", "opt", ".", "model_class", "(", "embedding_matrix", ",", "opt", ")", "\n", "print", "(", "'loading model {0} ...'", ".", "format", "(", "opt", ".", "model_name", ")", ")", "\n", "self", ".", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "opt", ".", "state_dict_path", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", ")", "\n", "# switch model to evaluation mode", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "torch", ".", "autograd", ".", "set_grad_enabled", "(", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.GeneZC_PWCN.None.infer.Inferer.evaluate": [[31, 50], ["torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "infer.Inferer.model", "torch.softmax().cpu().numpy", "torch.softmax().cpu().numpy", "infer.Inferer.tokenizer.text_to_sequence", "infer.Inferer.tokenizer.text_to_sequence", "infer.Inferer.tokenizer.text_to_sequence", "raw_text.lower().strip", "aspect.lower", "torch.tensor.dependency_dist_func", "torch.softmax().cpu", "torch.softmax().cpu", "raw_text.lower().split", "raw_text.lower", "aspect.lower", "torch.softmax", "torch.softmax", "raw_text.lower"], "methods", ["home.repos.pwc.inspect_result.GeneZC_PWCN.None.data_utils.Tokenizer.text_to_sequence", "home.repos.pwc.inspect_result.GeneZC_PWCN.None.data_utils.Tokenizer.text_to_sequence", "home.repos.pwc.inspect_result.GeneZC_PWCN.None.data_utils.Tokenizer.text_to_sequence", "home.repos.pwc.inspect_result.GeneZC_PWCN.None.dependency_dist.dependency_dist_func"], ["", "def", "evaluate", "(", "self", ",", "raw_text", ",", "aspect", ")", ":", "\n", "        ", "text_seqs", "=", "[", "self", ".", "tokenizer", ".", "text_to_sequence", "(", "raw_text", ".", "lower", "(", ")", ".", "strip", "(", ")", ")", "]", "\n", "aspect_seqs", "=", "[", "self", ".", "tokenizer", ".", "text_to_sequence", "(", "aspect", ".", "lower", "(", ")", ")", "]", "\n", "left_seqs", "=", "[", "self", ".", "tokenizer", ".", "text_to_sequence", "(", "raw_text", ".", "lower", "(", ")", ".", "split", "(", "aspect", ".", "lower", "(", ")", ")", "[", "0", "]", ")", "]", "\n", "text_indices", "=", "torch", ".", "tensor", "(", "text_seqs", ",", "dtype", "=", "torch", ".", "int64", ")", "\n", "aspect_indices", "=", "torch", ".", "tensor", "(", "aspect_seqs", ",", "dtype", "=", "torch", ".", "int64", ")", "\n", "left_indices", "=", "torch", ".", "tensor", "(", "left_seqs", ",", "dtype", "=", "torch", ".", "int64", ")", "\n", "dependency_dist", "=", "torch", ".", "tensor", "(", "[", "dependency_dist_func", "(", "raw_text", ",", "aspect", ")", "]", ",", "dtype", "=", "torch", ".", "int64", ")", "\n", "data", "=", "{", "\n", "'text_indices'", ":", "text_indices", ",", "\n", "'aspect_indices'", ":", "aspect_indices", ",", "\n", "'left_indices'", ":", "left_indices", ",", "\n", "'dependency_dist'", ":", "dependency_dist", ",", "\n", "}", "\n", "t_inputs", "=", "[", "data", "[", "col", "]", "for", "col", "in", "self", ".", "opt", ".", "inputs_cols", "]", "\n", "t_outputs", "=", "self", ".", "model", "(", "t_inputs", ")", "\n", "\n", "t_probs", "=", "F", ".", "softmax", "(", "t_outputs", ",", "dim", "=", "-", "1", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "t_probs", "\n", "\n"]], "home.repos.pwc.inspect_result.GeneZC_PWCN.layers.dynamic_rnn.DynamicLSTM.__init__": [[10, 47], ["torch.Module.__init__", "torch.LSTM", "torch.LSTM", "torch.GRU", "torch.GRU", "torch.RNN", "torch.RNN"], "methods", ["home.repos.pwc.inspect_result.GeneZC_PWCN.models.pwcn_dep.PWCN_DEP.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "hidden_size", ",", "num_layers", "=", "1", ",", "bias", "=", "True", ",", "batch_first", "=", "True", ",", "dropout", "=", "0", ",", "\n", "bidirectional", "=", "False", ",", "only_use_last_hidden_state", "=", "False", ",", "rnn_type", "=", "'LSTM'", ")", ":", "\n", "        ", "\"\"\"\n        LSTM which can hold variable length sequence, use like TensorFlow's RNN(input, length...).\n\n        :param input_size:The number of expected features in the input x\n        :param hidden_size:The number of features in the hidden state h\n        :param num_layers:Number of recurrent layers.\n        :param bias:If False, then the layer does not use bias weights b_ih and b_hh. Default: True\n        :param batch_first:If True, then the input and output tensors are provided as (batch, seq, feature)\n        :param dropout:If non-zero, introduces a dropout layer on the outputs of each RNN layer except the last layer\n        :param bidirectional:If True, becomes a bidirectional RNN. Default: False\n        :param rnn_type: {LSTM, GRU, RNN}\n        \"\"\"", "\n", "super", "(", "DynamicLSTM", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "input_size", "=", "input_size", "\n", "self", ".", "hidden_size", "=", "hidden_size", "\n", "self", ".", "num_layers", "=", "num_layers", "\n", "self", ".", "bias", "=", "bias", "\n", "self", ".", "batch_first", "=", "batch_first", "\n", "self", ".", "dropout", "=", "dropout", "\n", "self", ".", "bidirectional", "=", "bidirectional", "\n", "self", ".", "only_use_last_hidden_state", "=", "only_use_last_hidden_state", "\n", "self", ".", "rnn_type", "=", "rnn_type", "\n", "\n", "if", "self", ".", "rnn_type", "==", "'LSTM'", ":", "\n", "            ", "self", ".", "RNN", "=", "nn", ".", "LSTM", "(", "\n", "input_size", "=", "input_size", ",", "hidden_size", "=", "hidden_size", ",", "num_layers", "=", "num_layers", ",", "\n", "bias", "=", "bias", ",", "batch_first", "=", "batch_first", ",", "dropout", "=", "dropout", ",", "bidirectional", "=", "bidirectional", ")", "\n", "", "elif", "self", ".", "rnn_type", "==", "'GRU'", ":", "\n", "            ", "self", ".", "RNN", "=", "nn", ".", "GRU", "(", "\n", "input_size", "=", "input_size", ",", "hidden_size", "=", "hidden_size", ",", "num_layers", "=", "num_layers", ",", "\n", "bias", "=", "bias", ",", "batch_first", "=", "batch_first", ",", "dropout", "=", "dropout", ",", "bidirectional", "=", "bidirectional", ")", "\n", "", "elif", "self", ".", "rnn_type", "==", "'RNN'", ":", "\n", "            ", "self", ".", "RNN", "=", "nn", ".", "RNN", "(", "\n", "input_size", "=", "input_size", ",", "hidden_size", "=", "hidden_size", ",", "num_layers", "=", "num_layers", ",", "\n", "bias", "=", "bias", ",", "batch_first", "=", "batch_first", ",", "dropout", "=", "dropout", ",", "bidirectional", "=", "bidirectional", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.GeneZC_PWCN.layers.dynamic_rnn.DynamicLSTM.forward": [[49, 96], ["torch.argsort", "torch.argsort", "torch.argsort", "torch.argsort", "torch.argsort().long", "torch.argsort().long", "torch.argsort().long", "torch.argsort().long", "torch.nn.utils.rnn.pack_padded_sequence", "torch.nn.utils.rnn.pack_padded_sequence", "torch.nn.utils.rnn.pack_padded_sequence", "torch.nn.utils.rnn.pack_padded_sequence", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.nn.utils.rnn.pad_packed_sequence", "torch.nn.utils.rnn.pad_packed_sequence", "torch.nn.utils.rnn.pad_packed_sequence", "torch.nn.utils.rnn.pad_packed_sequence", "torch.argsort", "torch.argsort", "torch.argsort", "torch.argsort", "torch.argsort.long", "torch.argsort.long", "dynamic_rnn.DynamicLSTM.RNN", "dynamic_rnn.DynamicLSTM.RNN", "dynamic_rnn.DynamicLSTM.RNN", "dynamic_rnn.DynamicLSTM.RNN", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "x_len", ",", "h0", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        sequence -> sort -> pad and pack ->process using RNN -> unpack ->unsort\n\n        :param x: sequence embedding vectors\n        :param x_len: numpy/tensor list\n        :return:\n        \"\"\"", "\n", "\"\"\"sort\"\"\"", "\n", "x_sort_idx", "=", "torch", ".", "argsort", "(", "-", "x_len", ")", "\n", "x_unsort_idx", "=", "torch", ".", "argsort", "(", "x_sort_idx", ")", ".", "long", "(", ")", "\n", "x_len", "=", "x_len", "[", "x_sort_idx", "]", "\n", "x", "=", "x", "[", "x_sort_idx", ".", "long", "(", ")", "]", "\n", "\"\"\"pack\"\"\"", "\n", "x_emb_p", "=", "torch", ".", "nn", ".", "utils", ".", "rnn", ".", "pack_padded_sequence", "(", "x", ",", "x_len", ",", "batch_first", "=", "self", ".", "batch_first", ")", "\n", "\n", "# process using the selected RNN", "\n", "if", "self", ".", "rnn_type", "==", "'LSTM'", ":", "\n", "            ", "if", "h0", "is", "None", ":", "\n", "                ", "out_pack", ",", "(", "ht", ",", "ct", ")", "=", "self", ".", "RNN", "(", "x_emb_p", ",", "None", ")", "\n", "", "else", ":", "\n", "                ", "out_pack", ",", "(", "ht", ",", "ct", ")", "=", "self", ".", "RNN", "(", "x_emb_p", ",", "(", "h0", ",", "h0", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "if", "h0", "is", "None", ":", "\n", "                ", "out_pack", ",", "ht", "=", "self", ".", "RNN", "(", "x_emb_p", ",", "None", ")", "\n", "", "else", ":", "\n", "                ", "out_pack", ",", "ht", "=", "self", ".", "RNN", "(", "x_emb_p", ",", "h0", ")", "\n", "", "ct", "=", "None", "\n", "", "\"\"\"unsort: h\"\"\"", "\n", "ht", "=", "torch", ".", "transpose", "(", "ht", ",", "0", ",", "1", ")", "[", "\n", "x_unsort_idx", "]", "# (num_layers * num_directions, batch, hidden_size) -> (batch, ...)", "\n", "ht", "=", "torch", ".", "transpose", "(", "ht", ",", "0", ",", "1", ")", "\n", "\n", "if", "self", ".", "only_use_last_hidden_state", ":", "\n", "            ", "return", "ht", "\n", "", "else", ":", "\n", "            ", "\"\"\"unpack: out\"\"\"", "\n", "out", "=", "torch", ".", "nn", ".", "utils", ".", "rnn", ".", "pad_packed_sequence", "(", "out_pack", ",", "batch_first", "=", "self", ".", "batch_first", ")", "# (sequence, lengths)", "\n", "out", "=", "out", "[", "0", "]", "#", "\n", "out", "=", "out", "[", "x_unsort_idx", "]", "\n", "\"\"\"unsort: out c\"\"\"", "\n", "if", "self", ".", "rnn_type", "==", "'LSTM'", ":", "\n", "                ", "ct", "=", "torch", ".", "transpose", "(", "ct", ",", "0", ",", "1", ")", "[", "\n", "x_unsort_idx", "]", "# (num_layers * num_directions, batch, hidden_size) -> (batch, ...)", "\n", "ct", "=", "torch", ".", "transpose", "(", "ct", ",", "0", ",", "1", ")", "\n", "\n", "", "return", "out", ",", "(", "ht", ",", "ct", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.GeneZC_PWCN.models.attn.AOA.__init__": [[11, 18], ["torch.Module.__init__", "torch.Embedding.from_pretrained", "torch.Embedding.from_pretrained", "torch.Embedding.from_pretrained", "layers.dynamic_rnn.DynamicLSTM", "layers.dynamic_rnn.DynamicLSTM", "torch.Linear", "torch.Linear", "torch.Linear", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.GeneZC_PWCN.models.pwcn_dep.PWCN_DEP.__init__"], ["    ", "def", "__init__", "(", "self", ",", "embedding_matrix", ",", "opt", ")", ":", "\n", "        ", "super", "(", "AOA", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "opt", "=", "opt", "\n", "self", ".", "embed", "=", "nn", ".", "Embedding", ".", "from_pretrained", "(", "torch", ".", "tensor", "(", "embedding_matrix", ",", "dtype", "=", "torch", ".", "float", ")", ")", "\n", "self", ".", "txt_lstm", "=", "DynamicLSTM", "(", "opt", ".", "embed_dim", ",", "opt", ".", "hidden_dim", ",", "num_layers", "=", "1", ",", "batch_first", "=", "True", ",", "bidirectional", "=", "True", ")", "\n", "self", ".", "asp_lstm", "=", "DynamicLSTM", "(", "opt", ".", "embed_dim", ",", "opt", ".", "hidden_dim", ",", "num_layers", "=", "1", ",", "batch_first", "=", "True", ",", "bidirectional", "=", "True", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "2", "*", "opt", ".", "hidden_dim", ",", "opt", ".", "polarities_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.GeneZC_PWCN.models.attn.AOA.forward": [[19, 36], ["torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "attn.AOA.embed", "attn.AOA.embed", "attn.AOA.txt_lstm", "attn.AOA.asp_lstm", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax.mean", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "attn.AOA.fc", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "F.softmax.mean.transpose", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "text_indices", ",", "aspect_indices", "=", "inputs", "\n", "txt_len", "=", "torch", ".", "sum", "(", "text_indices", "!=", "0", ",", "dim", "=", "1", ")", "\n", "asp_len", "=", "torch", ".", "sum", "(", "aspect_indices", "!=", "0", ",", "dim", "=", "1", ")", "\n", "txt", "=", "self", ".", "embed", "(", "text_indices", ")", "\n", "asp", "=", "self", ".", "embed", "(", "aspect_indices", ")", "\n", "txt_out", ",", "(", "_", ",", "_", ")", "=", "self", ".", "txt_lstm", "(", "txt", ",", "txt_len", ")", "\n", "asp_out", ",", "(", "_", ",", "_", ")", "=", "self", ".", "asp_lstm", "(", "asp", ",", "asp_len", ")", "\n", "interaction_mat", "=", "torch", ".", "matmul", "(", "txt_out", ",", "torch", ".", "transpose", "(", "asp_out", ",", "1", ",", "2", ")", ")", "\n", "alpha", "=", "F", ".", "softmax", "(", "interaction_mat", ",", "dim", "=", "1", ")", "# col-wise", "\n", "beta", "=", "F", ".", "softmax", "(", "interaction_mat", ",", "dim", "=", "2", ")", "# row-wise", "\n", "beta_avg", "=", "beta", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "gamma", "=", "torch", ".", "matmul", "(", "alpha", ",", "beta_avg", ".", "transpose", "(", "1", ",", "2", ")", ")", "\n", "weighted_sum", "=", "torch", ".", "matmul", "(", "torch", ".", "transpose", "(", "txt_out", ",", "1", ",", "2", ")", ",", "gamma", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "out", "=", "self", ".", "fc", "(", "weighted_sum", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.GeneZC_PWCN.models.attn.BiLSTMAttn.__init__": [[38, 45], ["torch.Module.__init__", "torch.Embedding.from_pretrained", "torch.Embedding.from_pretrained", "torch.Embedding.from_pretrained", "layers.dynamic_rnn.DynamicLSTM", "layers.dynamic_rnn.DynamicLSTM", "torch.Linear", "torch.Linear", "torch.Linear", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.GeneZC_PWCN.models.pwcn_dep.PWCN_DEP.__init__"], ["    ", "def", "__init__", "(", "self", ",", "embedding_matrix", ",", "opt", ")", ":", "\n", "        ", "super", "(", "BiLSTMAttn", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "opt", "=", "opt", "\n", "self", ".", "embed", "=", "nn", ".", "Embedding", ".", "from_pretrained", "(", "torch", ".", "tensor", "(", "embedding_matrix", ",", "dtype", "=", "torch", ".", "float", ")", ")", "\n", "self", ".", "txt_lstm", "=", "DynamicLSTM", "(", "opt", ".", "embed_dim", ",", "opt", ".", "hidden_dim", ",", "num_layers", "=", "1", ",", "batch_first", "=", "True", ",", "bidirectional", "=", "True", ")", "\n", "self", ".", "asp_lstm", "=", "DynamicLSTM", "(", "opt", ".", "embed_dim", ",", "opt", ".", "hidden_dim", ",", "num_layers", "=", "1", ",", "batch_first", "=", "True", ",", "bidirectional", "=", "True", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "2", "*", "opt", ".", "hidden_dim", ",", "opt", ".", "polarities_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.GeneZC_PWCN.models.attn.BiLSTMAttn.forward": [[46, 60], ["torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "attn.BiLSTMAttn.embed", "attn.BiLSTMAttn.embed", "attn.BiLSTMAttn.txt_lstm", "attn.BiLSTMAttn.asp_lstm", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.softmax", "torch.softmax", "torch.softmax", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "attn.BiLSTMAttn.fc", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.matmul.sum", "torch.matmul.sum", "torch.matmul.sum", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "text_indices", ",", "aspect_indices", "=", "inputs", "\n", "txt_len", "=", "torch", ".", "sum", "(", "text_indices", "!=", "0", ",", "dim", "=", "1", ")", "\n", "asp_len", "=", "torch", ".", "sum", "(", "aspect_indices", "!=", "0", ",", "dim", "=", "1", ")", "\n", "txt", "=", "self", ".", "embed", "(", "text_indices", ")", "\n", "asp", "=", "self", ".", "embed", "(", "aspect_indices", ")", "\n", "txt_out", ",", "(", "_", ",", "_", ")", "=", "self", ".", "txt_lstm", "(", "txt", ",", "txt_len", ")", "\n", "asp_out", ",", "(", "_", ",", "_", ")", "=", "self", ".", "asp_lstm", "(", "asp", ",", "asp_len", ")", "\n", "alpha_mat", "=", "torch", ".", "matmul", "(", "txt_out", ",", "torch", ".", "transpose", "(", "asp_out", ",", "1", ",", "2", ")", ")", "\n", "alpha", "=", "F", ".", "softmax", "(", "alpha_mat", ".", "sum", "(", "2", ",", "keepdim", "=", "True", ")", ",", "dim", "=", "1", ")", "\n", "weighted_sum", "=", "torch", ".", "matmul", "(", "torch", ".", "transpose", "(", "txt_out", ",", "1", ",", "2", ")", ",", "alpha", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "out", "=", "self", ".", "fc", "(", "weighted_sum", ")", "\n", "\n", "return", "out", "", "", "", ""]], "home.repos.pwc.inspect_result.GeneZC_PWCN.models.pwcn_pos.PositionProximity.__init__": [[11, 14], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.GeneZC_PWCN.models.pwcn_dep.PWCN_DEP.__init__"], ["    ", "def", "__init__", "(", "self", ",", "opt", ")", ":", "\n", "        ", "self", ".", "opt", "=", "opt", "\n", "super", "(", "PositionProximity", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.GeneZC_PWCN.models.pwcn_pos.PositionProximity.forward": [[15, 20], ["pwcn_pos.PositionProximity.weight_matrix().to", "pwcn_pos.PositionProximity.unsqueeze", "pwcn_pos.PositionProximity.weight_matrix"], "methods", ["home.repos.pwc.inspect_result.GeneZC_PWCN.models.pwcn_dep.DependencyProximity.weight_matrix"], ["", "def", "forward", "(", "self", ",", "x", ",", "aspect_double_idx", ",", "text_len", ",", "aspect_len", ")", ":", "\n", "        ", "batch_size", ",", "seq_len", "=", "x", ".", "shape", "[", "0", "]", ",", "x", ".", "shape", "[", "1", "]", "\n", "weight", "=", "self", ".", "weight_matrix", "(", "aspect_double_idx", ",", "text_len", ",", "aspect_len", ",", "batch_size", ",", "seq_len", ")", ".", "to", "(", "self", ".", "opt", ".", "device", ")", "\n", "x", "=", "weight", ".", "unsqueeze", "(", "2", ")", "*", "x", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.GeneZC_PWCN.models.pwcn_pos.PositionProximity.weight_matrix": [[21, 37], ["aspect_double_idx.cpu().numpy.cpu().numpy.cpu().numpy", "text_len.cpu().numpy.cpu().numpy.cpu().numpy", "aspect_len.cpu().numpy.cpu().numpy.cpu().numpy", "range", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "range", "range", "range", "range", "aspect_double_idx.cpu().numpy.cpu().numpy.cpu", "text_len.cpu().numpy.cpu().numpy.cpu", "aspect_len.cpu().numpy.cpu().numpy.cpu", "range", "weight[].append", "weight[].append", "weight[].append", "weight[].append"], "methods", ["None"], ["", "def", "weight_matrix", "(", "self", ",", "aspect_double_idx", ",", "text_len", ",", "aspect_len", ",", "batch_size", ",", "seq_len", ")", ":", "\n", "        ", "aspect_double_idx", "=", "aspect_double_idx", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "text_len", "=", "text_len", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "aspect_len", "=", "aspect_len", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "weight", "=", "[", "[", "]", "for", "i", "in", "range", "(", "batch_size", ")", "]", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "context_len", "=", "text_len", "[", "i", "]", "-", "aspect_len", "[", "i", "]", "\n", "for", "j", "in", "range", "(", "aspect_double_idx", "[", "i", ",", "0", "]", ")", ":", "\n", "                ", "weight", "[", "i", "]", ".", "append", "(", "1", "-", "(", "aspect_double_idx", "[", "i", ",", "0", "]", "-", "j", ")", "/", "context_len", ")", "\n", "", "for", "j", "in", "range", "(", "aspect_double_idx", "[", "i", ",", "0", "]", ",", "aspect_double_idx", "[", "i", ",", "1", "]", "+", "1", ")", ":", "\n", "                ", "weight", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "for", "j", "in", "range", "(", "aspect_double_idx", "[", "i", ",", "1", "]", "+", "1", ",", "text_len", "[", "i", "]", ")", ":", "\n", "                ", "weight", "[", "i", "]", ".", "append", "(", "1", "-", "(", "j", "-", "aspect_double_idx", "[", "i", ",", "1", "]", ")", "/", "context_len", ")", "\n", "", "for", "j", "in", "range", "(", "text_len", "[", "i", "]", ",", "seq_len", ")", ":", "\n", "                ", "weight", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "return", "torch", ".", "tensor", "(", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.GeneZC_PWCN.models.pwcn_pos.PWCN_POS.__init__": [[39, 48], ["torch.Module.__init__", "torch.Embedding.from_pretrained", "torch.Embedding.from_pretrained", "torch.Embedding.from_pretrained", "torch.Dropout", "torch.Dropout", "torch.Dropout", "layers.dynamic_rnn.DynamicLSTM", "pwcn_pos.PositionProximity", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.GeneZC_PWCN.models.pwcn_dep.PWCN_DEP.__init__"], ["    ", "def", "__init__", "(", "self", ",", "embedding_matrix", ",", "opt", ")", ":", "\n", "        ", "super", "(", "PWCN_POS", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "opt", "=", "opt", "\n", "self", ".", "embed", "=", "nn", ".", "Embedding", ".", "from_pretrained", "(", "torch", ".", "tensor", "(", "embedding_matrix", ",", "dtype", "=", "torch", ".", "float", ")", ")", "\n", "self", ".", "embed_dropout", "=", "nn", ".", "Dropout", "(", "0.3", ")", "\n", "self", ".", "txt_lstm", "=", "DynamicLSTM", "(", "opt", ".", "embed_dim", ",", "opt", ".", "hidden_dim", ",", "num_layers", "=", "1", ",", "batch_first", "=", "True", ",", "bidirectional", "=", "True", ")", "\n", "self", ".", "proximity", "=", "PositionProximity", "(", "opt", ")", "\n", "self", ".", "convs3", "=", "nn", ".", "Conv1d", "(", "2", "*", "opt", ".", "hidden_dim", ",", "2", "*", "opt", ".", "hidden_dim", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "2", "*", "opt", ".", "hidden_dim", ",", "opt", ".", "polarities_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.GeneZC_PWCN.models.pwcn_pos.PWCN_POS.forward": [[49, 62], ["torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "pwcn_pos.PWCN_POS.embed_dropout", "pwcn_pos.PWCN_POS.txt_lstm", "torch.relu", "torch.relu", "torch.relu", "torch.max_pool1d().squeeze", "torch.max_pool1d().squeeze", "torch.max_pool1d().squeeze", "pwcn_pos.PWCN_POS.fc", "pwcn_pos.PWCN_POS.embed", "pwcn_pos.PWCN_POS.convs3", "torch.sum.unsqueeze", "torch.sum.unsqueeze", "torch.sum.unsqueeze", "pwcn_pos.PWCN_POS.proximity().transpose", "torch.max_pool1d", "torch.max_pool1d", "torch.max_pool1d", "torch.max_pool1d().squeeze.size", "pwcn_pos.PWCN_POS.proximity"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "text_indices", ",", "aspect_indices", ",", "left_indices", "=", "inputs", "\n", "txt_len", "=", "torch", ".", "sum", "(", "text_indices", "!=", "0", ",", "dim", "=", "1", ")", "\n", "asp_len", "=", "torch", ".", "sum", "(", "aspect_indices", "!=", "0", ",", "dim", "=", "1", ")", "\n", "left_len", "=", "torch", ".", "sum", "(", "left_indices", "!=", "0", ",", "dim", "=", "-", "1", ")", "\n", "aspect_double_idx", "=", "torch", ".", "cat", "(", "[", "left_len", ".", "unsqueeze", "(", "-", "1", ")", ",", "(", "left_len", "+", "asp_len", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", "]", ",", "dim", "=", "-", "1", ")", "\n", "txt_out", "=", "self", ".", "embed_dropout", "(", "self", ".", "embed", "(", "text_indices", ")", ")", "\n", "txt_out", ",", "(", "_", ",", "_", ")", "=", "self", ".", "txt_lstm", "(", "txt_out", ",", "txt_len", ")", "\n", "z", "=", "F", ".", "relu", "(", "self", ".", "convs3", "(", "\n", "self", ".", "proximity", "(", "txt_out", ",", "aspect_double_idx", ",", "txt_len", ",", "asp_len", ")", ".", "transpose", "(", "1", ",", "2", ")", ")", ")", "# [(N,Co,L), ...]*len(Ks)", "\n", "z", "=", "F", ".", "max_pool1d", "(", "z", ",", "z", ".", "size", "(", "2", ")", ")", ".", "squeeze", "(", "2", ")", "\n", "out", "=", "self", ".", "fc", "(", "z", ")", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.GeneZC_PWCN.models.lstm.LSTM.__init__": [[10, 15], ["torch.Module.__init__", "torch.Embedding.from_pretrained", "torch.Embedding.from_pretrained", "layers.dynamic_rnn.DynamicLSTM", "torch.Linear", "torch.Linear", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.GeneZC_PWCN.models.pwcn_dep.PWCN_DEP.__init__"], ["    ", "def", "__init__", "(", "self", ",", "embedding_matrix", ",", "opt", ")", ":", "\n", "        ", "super", "(", "LSTM", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "embed", "=", "nn", ".", "Embedding", ".", "from_pretrained", "(", "torch", ".", "tensor", "(", "embedding_matrix", ",", "dtype", "=", "torch", ".", "float", ")", ")", "\n", "self", ".", "lstm", "=", "DynamicLSTM", "(", "opt", ".", "embed_dim", ",", "opt", ".", "hidden_dim", ",", "num_layers", "=", "1", ",", "batch_first", "=", "True", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "opt", ".", "hidden_dim", ",", "opt", ".", "polarities_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.GeneZC_PWCN.models.lstm.LSTM.forward": [[16, 23], ["lstm.LSTM.embed", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "lstm.LSTM.lstm", "lstm.LSTM.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "text_raw_indices", "=", "inputs", "[", "0", "]", "\n", "x", "=", "self", ".", "embed", "(", "text_raw_indices", ")", "\n", "x_len", "=", "torch", ".", "sum", "(", "text_raw_indices", "!=", "0", ",", "dim", "=", "-", "1", ")", "\n", "_", ",", "(", "h_n", ",", "_", ")", "=", "self", ".", "lstm", "(", "x", ",", "x_len", ")", "\n", "out", "=", "self", ".", "fc", "(", "h_n", "[", "0", "]", ")", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.GeneZC_PWCN.models.pwcn_dep.DependencyProximity.__init__": [[11, 14], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.GeneZC_PWCN.models.pwcn_dep.PWCN_DEP.__init__"], ["    ", "def", "__init__", "(", "self", ",", "opt", ")", ":", "\n", "        ", "self", ".", "opt", "=", "opt", "\n", "super", "(", "DependencyProximity", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.GeneZC_PWCN.models.pwcn_dep.DependencyProximity.forward": [[15, 20], ["pwcn_dep.DependencyProximity.weight_matrix().to", "pwcn_dep.DependencyProximity.unsqueeze", "pwcn_dep.DependencyProximity.weight_matrix"], "methods", ["home.repos.pwc.inspect_result.GeneZC_PWCN.models.pwcn_dep.DependencyProximity.weight_matrix"], ["", "def", "forward", "(", "self", ",", "x", ",", "aspect_double_idx", ",", "text_len", ",", "aspect_len", ",", "dependency_dist", ")", ":", "\n", "        ", "batch_size", ",", "seq_len", "=", "x", ".", "shape", "[", "0", "]", ",", "x", ".", "shape", "[", "1", "]", "\n", "weight", "=", "self", ".", "weight_matrix", "(", "aspect_double_idx", ",", "text_len", ",", "aspect_len", ",", "dependency_dist", ",", "batch_size", ",", "seq_len", ")", ".", "to", "(", "self", ".", "opt", ".", "device", ")", "\n", "x", "=", "weight", ".", "unsqueeze", "(", "2", ")", "*", "x", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.GeneZC_PWCN.models.pwcn_dep.DependencyProximity.weight_matrix": [[21, 38], ["aspect_double_idx.cpu().numpy.cpu().numpy.cpu().numpy", "text_len.cpu().numpy.cpu().numpy.cpu().numpy", "aspect_len.cpu().numpy.cpu().numpy.cpu().numpy", "dependency_dist.cpu().numpy.cpu().numpy.cpu().numpy", "range", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "range", "range", "range", "range", "aspect_double_idx.cpu().numpy.cpu().numpy.cpu", "text_len.cpu().numpy.cpu().numpy.cpu", "aspect_len.cpu().numpy.cpu().numpy.cpu", "dependency_dist.cpu().numpy.cpu().numpy.cpu", "range", "weight[].append", "weight[].append", "weight[].append", "weight[].append"], "methods", ["None"], ["", "def", "weight_matrix", "(", "self", ",", "aspect_double_idx", ",", "text_len", ",", "aspect_len", ",", "dependency_dist", ",", "batch_size", ",", "seq_len", ")", ":", "\n", "        ", "aspect_double_idx", "=", "aspect_double_idx", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "text_len", "=", "text_len", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "aspect_len", "=", "aspect_len", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "dependency_dist", "=", "dependency_dist", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "weight", "=", "[", "[", "]", "for", "i", "in", "range", "(", "batch_size", ")", "]", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "context_len", "=", "text_len", "[", "i", "]", "-", "aspect_len", "[", "i", "]", "\n", "for", "j", "in", "range", "(", "aspect_double_idx", "[", "i", ",", "0", "]", ")", ":", "\n", "                ", "weight", "[", "i", "]", ".", "append", "(", "1", "-", "dependency_dist", "[", "i", ",", "j", "]", "/", "context_len", ")", "\n", "", "for", "j", "in", "range", "(", "aspect_double_idx", "[", "i", ",", "0", "]", ",", "aspect_double_idx", "[", "i", ",", "1", "]", "+", "1", ")", ":", "\n", "                ", "weight", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "for", "j", "in", "range", "(", "aspect_double_idx", "[", "i", ",", "1", "]", "+", "1", ",", "text_len", "[", "i", "]", ")", ":", "\n", "                ", "weight", "[", "i", "]", ".", "append", "(", "1", "-", "dependency_dist", "[", "i", ",", "j", "]", "/", "context_len", ")", "\n", "", "for", "j", "in", "range", "(", "text_len", "[", "i", "]", ",", "seq_len", ")", ":", "\n", "                ", "weight", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "return", "torch", ".", "tensor", "(", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.GeneZC_PWCN.models.pwcn_dep.PWCN_DEP.__init__": [[40, 49], ["torch.Module.__init__", "torch.Embedding.from_pretrained", "torch.Embedding.from_pretrained", "torch.Embedding.from_pretrained", "torch.Dropout", "torch.Dropout", "torch.Dropout", "layers.dynamic_rnn.DynamicLSTM", "pwcn_dep.DependencyProximity", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.GeneZC_PWCN.models.pwcn_dep.PWCN_DEP.__init__"], ["    ", "def", "__init__", "(", "self", ",", "embedding_matrix", ",", "opt", ")", ":", "\n", "        ", "super", "(", "PWCN_DEP", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "opt", "=", "opt", "\n", "self", ".", "embed", "=", "nn", ".", "Embedding", ".", "from_pretrained", "(", "torch", ".", "tensor", "(", "embedding_matrix", ",", "dtype", "=", "torch", ".", "float", ")", ")", "\n", "self", ".", "embed_dropout", "=", "nn", ".", "Dropout", "(", "0.3", ")", "\n", "self", ".", "txt_lstm", "=", "DynamicLSTM", "(", "opt", ".", "embed_dim", ",", "opt", ".", "hidden_dim", ",", "num_layers", "=", "1", ",", "batch_first", "=", "True", ",", "bidirectional", "=", "True", ")", "\n", "self", ".", "proximity", "=", "DependencyProximity", "(", "opt", ")", "\n", "self", ".", "convs3", "=", "nn", ".", "Conv1d", "(", "2", "*", "opt", ".", "hidden_dim", ",", "2", "*", "opt", ".", "hidden_dim", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "2", "*", "opt", ".", "hidden_dim", ",", "opt", ".", "polarities_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.GeneZC_PWCN.models.pwcn_dep.PWCN_DEP.forward": [[50, 63], ["torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "pwcn_dep.PWCN_DEP.embed_dropout", "pwcn_dep.PWCN_DEP.txt_lstm", "torch.relu", "torch.relu", "torch.relu", "torch.max_pool1d().squeeze", "torch.max_pool1d().squeeze", "torch.max_pool1d().squeeze", "pwcn_dep.PWCN_DEP.fc", "pwcn_dep.PWCN_DEP.embed", "pwcn_dep.PWCN_DEP.convs3", "torch.sum.unsqueeze", "torch.sum.unsqueeze", "torch.sum.unsqueeze", "pwcn_dep.PWCN_DEP.proximity().transpose", "torch.max_pool1d", "torch.max_pool1d", "torch.max_pool1d", "torch.max_pool1d().squeeze.size", "pwcn_dep.PWCN_DEP.proximity"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "text_indices", ",", "aspect_indices", ",", "left_indices", ",", "dependency_dist", "=", "inputs", "\n", "txt_len", "=", "torch", ".", "sum", "(", "text_indices", "!=", "0", ",", "dim", "=", "1", ")", "\n", "asp_len", "=", "torch", ".", "sum", "(", "aspect_indices", "!=", "0", ",", "dim", "=", "1", ")", "\n", "left_len", "=", "torch", ".", "sum", "(", "left_indices", "!=", "0", ",", "dim", "=", "-", "1", ")", "\n", "aspect_double_idx", "=", "torch", ".", "cat", "(", "[", "left_len", ".", "unsqueeze", "(", "-", "1", ")", ",", "(", "left_len", "+", "asp_len", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", "]", ",", "dim", "=", "-", "1", ")", "\n", "txt_out", "=", "self", ".", "embed_dropout", "(", "self", ".", "embed", "(", "text_indices", ")", ")", "\n", "txt_out", ",", "(", "_", ",", "_", ")", "=", "self", ".", "txt_lstm", "(", "txt_out", ",", "txt_len", ")", "\n", "z", "=", "F", ".", "relu", "(", "self", ".", "convs3", "(", "\n", "self", ".", "proximity", "(", "txt_out", ",", "aspect_double_idx", ",", "txt_len", ",", "asp_len", ",", "dependency_dist", ")", ".", "transpose", "(", "1", ",", "2", ")", ")", ")", "# [(N,Co,L), ...]*len(Ks)", "\n", "z", "=", "F", ".", "max_pool1d", "(", "z", ",", "z", ".", "size", "(", "2", ")", ")", ".", "squeeze", "(", "2", ")", "\n", "out", "=", "self", ".", "fc", "(", "z", ")", "\n", "return", "out", "\n", "", "", ""]]}