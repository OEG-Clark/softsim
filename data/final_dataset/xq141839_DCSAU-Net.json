{"home.repos.pwc.inspect_result.xq141839_DCSAU-Net.None.data_split_csv.pre_csv": [[7, 27], ["numpy.random.seed", "os.listdir", "len", "int", "numpy.random.choice", "pandas.DataFrame", "pd.DataFrame.to_csv", "print", "print", "round", "ds_split.append", "ds_split.append", "len", "len"], "function", ["None"], ["def", "pre_csv", "(", "data_path", ",", "frac", ")", ":", "\n", "    ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "image_ids", "=", "os", ".", "listdir", "(", "data_path", ")", "\n", "data_size", "=", "len", "(", "image_ids", ")", "\n", "train_size", "=", "int", "(", "round", "(", "len", "(", "image_ids", ")", "*", "frac", ",", "0", ")", ")", "\n", "train_set", "=", "np", ".", "random", ".", "choice", "(", "image_ids", ",", "train_size", ",", "replace", "=", "False", ")", "\n", "ds_split", "=", "[", "]", "\n", "for", "img_id", "in", "image_ids", ":", "\n", "        ", "if", "img_id", "in", "train_set", ":", "\n", "            ", "ds_split", ".", "append", "(", "'train'", ")", "\n", "", "else", ":", "\n", "            ", "ds_split", ".", "append", "(", "'test'", ")", "\n", "\n", "", "", "ds_dict", "=", "{", "'image_id'", ":", "image_ids", ",", "\n", "'category'", ":", "ds_split", "\n", "}", "\n", "df", "=", "pd", ".", "DataFrame", "(", "ds_dict", ")", "\n", "df", ".", "to_csv", "(", "'src/test_train_data.csv'", ",", "index", "=", "False", ")", "\n", "print", "(", "'Number of train sample: {}'", ".", "format", "(", "len", "(", "train_set", ")", ")", ")", "\n", "print", "(", "'Number of test sample: {}'", ".", "format", "(", "data_size", "-", "train_size", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.None.data_loading.multi_classes.__init__": [[20, 25], ["data_loading.Normalization"], "methods", ["home.repos.pwc.inspect_result.xq141839_DCSAU-Net.None.data_loading.Normalization"], ["        ", "def", "__init__", "(", "self", ",", "path", ",", "data", ",", "transform", "=", "None", ")", ":", "\n", "            ", "self", ".", "path", "=", "path", "\n", "self", ".", "folders", "=", "data", "\n", "self", ".", "transforms", "=", "transform", "\n", "self", ".", "normalization", "=", "Normalization", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.None.data_loading.multi_classes.__len__": [[26, 28], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "            ", "return", "len", "(", "self", ".", "folders", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.None.data_loading.multi_classes.__getitem__": [[30, 57], ["os.path.join", "os.path.join", "os.path.join", "[].astype", "data_loading.multi_classes.get_mask", "data_loading.multi_classes.transforms", "data_loading.multi_classes.normalization", "numpy.squeeze", "skimage.img_as_ubyte", "numpy.squeeze", "torch.from_numpy", "torch.squeeze", "torch.nn.functional.one_hot", "mask.permute.permute.permute", "str", "str", "mask.permute.permute.to", "os.listdir", "skimage.io.imread", "mask.permute.permute.max", "mask.permute.permute.max"], "methods", ["home.repos.pwc.inspect_result.xq141839_DCSAU-Net.None.data_loading.multi_classes.get_mask"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "            ", "image_folder", "=", "os", ".", "path", ".", "join", "(", "self", ".", "path", ",", "str", "(", "self", ".", "folders", "[", "idx", "]", ")", ",", "'images/'", ")", "\n", "mask_folder", "=", "os", ".", "path", ".", "join", "(", "self", ".", "path", ",", "str", "(", "self", ".", "folders", "[", "idx", "]", ")", ",", "'masks/'", ")", "\n", "image_path", "=", "os", ".", "path", ".", "join", "(", "image_folder", ",", "os", ".", "listdir", "(", "image_folder", ")", "[", "0", "]", ")", "\n", "\n", "image_id", "=", "self", ".", "folders", "[", "idx", "]", "\n", "img", "=", "io", ".", "imread", "(", "image_path", ")", "[", ":", ",", ":", ",", ":", "3", "]", ".", "astype", "(", "'float32'", ")", "\n", "mask", "=", "self", ".", "get_mask", "(", "mask_folder", ",", "256", ",", "256", ")", "\n", "\n", "augmented", "=", "self", ".", "transforms", "(", "image", "=", "img", ",", "mask", "=", "mask", ")", "\n", "img", "=", "augmented", "[", "'image'", "]", "\n", "mask", "=", "augmented", "[", "'mask'", "]", "\n", "\n", "normalized", "=", "self", ".", "normalization", "(", "image", "=", "img", ",", "mask", "=", "mask", ")", "\n", "img_nl", "=", "normalized", "[", "'image'", "]", "\n", "mask_nl", "=", "normalized", "[", "'mask'", "]", "\n", "mask_nl", "=", "np", ".", "squeeze", "(", "mask_nl", ")", "\n", "\n", "mask", "=", "img_as_ubyte", "(", "mask", ")", "\n", "mask", "=", "np", ".", "squeeze", "(", "mask", ")", "\n", "mask", "[", "(", "mask", ">", "0", ")", "&", "(", "mask", "<", "mask", ".", "max", "(", ")", ")", "]", "=", "1", "\n", "mask", "[", "mask", "==", "mask", ".", "max", "(", ")", "]", "=", "2", "\n", "mask", "=", "torch", ".", "from_numpy", "(", "mask", ")", "\n", "mask", "=", "torch", ".", "squeeze", "(", "mask", ")", "\n", "mask", "=", "torch", ".", "nn", ".", "functional", ".", "one_hot", "(", "mask", ".", "to", "(", "torch", ".", "int64", ")", ",", "3", ")", "\n", "mask", "=", "mask", ".", "permute", "(", "2", ",", "0", ",", "1", ")", "\n", "return", "(", "img_nl", ",", "mask", ",", "mask_nl", ",", "image_id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.None.data_loading.multi_classes.get_mask": [[59, 68], ["numpy.zeros", "os.listdir", "skimage.io.imread", "skimage.transform.resize", "numpy.expand_dims", "numpy.maximum", "os.path.join"], "methods", ["None"], ["", "def", "get_mask", "(", "self", ",", "mask_folder", ",", "IMG_HEIGHT", ",", "IMG_WIDTH", ")", ":", "\n", "            ", "mask", "=", "np", ".", "zeros", "(", "(", "IMG_HEIGHT", ",", "IMG_WIDTH", ",", "1", ")", ",", "dtype", "=", "np", ".", "bool", ")", "\n", "for", "mask_", "in", "os", ".", "listdir", "(", "mask_folder", ")", ":", "\n", "                    ", "mask_", "=", "io", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "mask_folder", ",", "mask_", ")", ",", "as_gray", "=", "True", ")", "\n", "mask_", "=", "transform", ".", "resize", "(", "mask_", ",", "(", "IMG_HEIGHT", ",", "IMG_WIDTH", ")", ")", "\n", "mask_", "=", "np", ".", "expand_dims", "(", "mask_", ",", "axis", "=", "-", "1", ")", "\n", "mask", "=", "np", ".", "maximum", "(", "mask", ",", "mask_", ")", "\n", "\n", "", "return", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.None.data_loading.binary_class.__init__": [[70, 74], ["None"], "methods", ["None"], ["        ", "def", "__init__", "(", "self", ",", "path", ",", "data", ",", "transform", "=", "None", ")", ":", "\n", "            ", "self", ".", "path", "=", "path", "\n", "self", ".", "folders", "=", "data", "\n", "self", ".", "transforms", "=", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.None.data_loading.binary_class.__len__": [[75, 77], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "            ", "return", "len", "(", "self", ".", "folders", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.None.data_loading.binary_class.__getitem__": [[79, 92], ["os.path.join", "os.path.join", "[].astype", "skimage.io.imread", "data_loading.binary_class.transforms", "skimage.io.imread"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "            ", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "path", ",", "'images/'", ",", "self", ".", "folders", "[", "idx", "]", ")", "\n", "mask_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "path", ",", "'masks/'", ",", "self", ".", "folders", "[", "idx", "]", ")", "\n", "\n", "img", "=", "io", ".", "imread", "(", "image_path", ")", "[", ":", ",", ":", ",", ":", "3", "]", ".", "astype", "(", "'float32'", ")", "\n", "mask", "=", "io", ".", "imread", "(", "mask_path", ")", "\n", "image_id", "=", "self", ".", "folders", "[", "idx", "]", "\n", "\n", "augmented", "=", "self", ".", "transforms", "(", "image", "=", "img", ",", "mask", "=", "mask", ")", "\n", "img", "=", "augmented", "[", "'image'", "]", "\n", "mask", "=", "augmented", "[", "'mask'", "]", "\n", "\n", "return", "(", "img", ",", "mask", ",", "image_id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.None.data_loading.Normalization": [[10, 15], ["albumentations.Compose", "albumentations.Normalize", "albumentations.pytorch.ToTensor"], "function", ["None"], ["def", "Normalization", "(", ")", ":", "\n", "   ", "return", "A", ".", "Compose", "(", "\n", "[", "\n", "A", ".", "Normalize", "(", "mean", "=", "(", "0.485", ",", "0.456", ",", "0.406", ")", ",", "std", "=", "(", "0.229", ",", "0.224", ",", "0.225", ")", ")", ",", "\n", "ToTensor", "(", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.None.train.get_train_transform": [[23, 32], ["albumentations.Compose", "albumentations.Resize", "albumentations.HorizontalFlip", "albumentations.ShiftScaleRotate", "albumentations.CoarseDropout", "albumentations.Normalize", "albumentations.pytorch.ToTensor"], "function", ["None"], ["def", "get_train_transform", "(", ")", ":", "\n", "   ", "return", "A", ".", "Compose", "(", "\n", "[", "\n", "A", ".", "Resize", "(", "256", ",", "256", ")", ",", "\n", "A", ".", "HorizontalFlip", "(", "p", "=", "0.25", ")", ",", "\n", "A", ".", "ShiftScaleRotate", "(", "shift_limit", "=", "0", ",", "p", "=", "0.25", ")", ",", "\n", "A", ".", "CoarseDropout", "(", ")", ",", "\n", "A", ".", "Normalize", "(", "mean", "=", "(", "0.485", ",", "0.456", ",", "0.406", ")", ",", "std", "=", "(", "0.229", ",", "0.224", ",", "0.225", ")", ")", ",", "\n", "ToTensor", "(", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.None.train.get_valid_transform": [[34, 40], ["albumentations.Compose", "albumentations.Resize", "albumentations.Normalize", "albumentations.pytorch.ToTensor"], "function", ["None"], ["", "def", "get_valid_transform", "(", ")", ":", "\n", "   ", "return", "A", ".", "Compose", "(", "\n", "[", "\n", "A", ".", "Resize", "(", "256", ",", "256", ")", ",", "\n", "A", ".", "Normalize", "(", "mean", "=", "(", "0.485", ",", "0.456", ",", "0.406", ")", ",", "std", "=", "(", "0.229", ",", "0.224", ",", "0.225", ")", ")", ",", "\n", "ToTensor", "(", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.None.train.train_model": [[42, 125], ["time.time", "model.state_dict", "float", "range", "print", "print", "model.load_state_dict", "print", "print", "print", "time.time", "numpy.mean", "numpy.mean", "print", "Loss_list[].append", "Accuracy_list[].append", "model.train", "model.train", "torch.cuda.is_available", "torch.cuda.is_available", "optimizer.zero_grad", "model", "criterion", "accuracy_metric", "running_loss.append", "running_corrects.append", "model.state_dict", "scheduler.step", "torch.autograd.Variable", "torch.autograd.Variable", "criterion.backward", "optimizer.step", "criterion.item", "accuracy_metric.item", "torch.save", "torch.save", "torch.autograd.Variable.cuda", "torch.autograd.Variable.cuda", "torch.autograd.Variable", "torch.autograd.Variable"], "function", ["None"], ["", "def", "train_model", "(", "model", ",", "criterion", ",", "optimizer", ",", "scheduler", ",", "num_epochs", "=", "5", ")", ":", "\n", "    ", "since", "=", "time", ".", "time", "(", ")", "\n", "\n", "Loss_list", "=", "{", "'train'", ":", "[", "]", ",", "'valid'", ":", "[", "]", "}", "\n", "Accuracy_list", "=", "{", "'train'", ":", "[", "]", ",", "'valid'", ":", "[", "]", "}", "\n", "\n", "best_model_wts", "=", "model", ".", "state_dict", "(", ")", "\n", "best_loss", "=", "float", "(", "'inf'", ")", "\n", "counter", "=", "0", "\n", "\n", "for", "epoch", "in", "range", "(", "num_epochs", ")", ":", "\n", "        ", "print", "(", "'Epoch {}/{}'", ".", "format", "(", "epoch", ",", "num_epochs", "-", "1", ")", ")", "\n", "print", "(", "'-'", "*", "10", ")", "\n", "\n", "# Each epoch has a training and validation phase", "\n", "for", "phase", "in", "[", "'train'", ",", "'valid'", "]", ":", "\n", "            ", "if", "phase", "==", "'train'", ":", "\n", "                ", "model", ".", "train", "(", "True", ")", "\n", "", "else", ":", "\n", "                ", "model", ".", "train", "(", "False", ")", "\n", "\n", "", "running_loss", "=", "[", "]", "\n", "running_corrects", "=", "[", "]", "\n", "\n", "# Iterate over data", "\n", "#for inputs,labels,label_for_ce,image_id in dataloaders[phase]: ", "\n", "for", "inputs", ",", "labels", ",", "image_id", "in", "dataloaders", "[", "phase", "]", ":", "\n", "# wrap them in Variable", "\n", "                ", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "\n", "                    ", "inputs", "=", "Variable", "(", "inputs", ".", "cuda", "(", ")", ")", "\n", "labels", "=", "Variable", "(", "labels", ".", "cuda", "(", ")", ")", "\n", "#label_for_ce = Variable(label_for_ce.cuda())", "\n", "", "else", ":", "\n", "                    ", "inputs", ",", "labels", "=", "Variable", "(", "inputs", ")", ",", "Variable", "(", "labels", ")", "\n", "\n", "# zero the parameter gradients", "\n", "", "optimizer", ".", "zero_grad", "(", ")", "\n", "#label_for_ce = label_for_ce.long()", "\n", "# forward", "\n", "outputs", "=", "model", "(", "inputs", ")", "\n", "\n", "loss", "=", "criterion", "(", "outputs", ",", "labels", ")", "\n", "score", "=", "accuracy_metric", "(", "outputs", ",", "labels", ")", "\n", "\n", "if", "phase", "==", "'train'", ":", "\n", "                    ", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# calculate loss and IoU", "\n", "", "running_loss", ".", "append", "(", "loss", ".", "item", "(", ")", ")", "\n", "running_corrects", ".", "append", "(", "score", ".", "item", "(", ")", ")", "\n", "\n", "\n", "", "epoch_loss", "=", "np", ".", "mean", "(", "running_loss", ")", "\n", "epoch_acc", "=", "np", ".", "mean", "(", "running_corrects", ")", "\n", "\n", "print", "(", "'{} Loss: {:.4f} IoU: {:.4f}'", ".", "format", "(", "\n", "phase", ",", "epoch_loss", ",", "epoch_acc", ")", ")", "\n", "\n", "Loss_list", "[", "phase", "]", ".", "append", "(", "epoch_loss", ")", "\n", "Accuracy_list", "[", "phase", "]", ".", "append", "(", "epoch_acc", ")", "\n", "\n", "# save parameters", "\n", "if", "phase", "==", "'valid'", "and", "epoch_loss", "<=", "best_loss", ":", "\n", "                ", "best_loss", "=", "epoch_loss", "\n", "best_model_wts", "=", "model", ".", "state_dict", "(", ")", "\n", "counter", "=", "0", "\n", "if", "epoch", ">", "50", ":", "\n", "                    ", "torch", ".", "save", "(", "model", ",", "f'save_models/epoch_{epoch}_{epoch_acc}.pth'", ")", "\n", "", "", "elif", "phase", "==", "'valid'", "and", "epoch_loss", ">", "best_loss", ":", "\n", "                ", "counter", "+=", "1", "\n", "", "if", "phase", "==", "'train'", ":", "\n", "                ", "scheduler", ".", "step", "(", ")", "\n", "\n", "", "", "print", "(", ")", "\n", "\n", "", "time_elapsed", "=", "time", ".", "time", "(", ")", "-", "since", "\n", "print", "(", "'Training complete in {:.0f}m {:.0f}s'", ".", "format", "(", "\n", "time_elapsed", "//", "60", ",", "time_elapsed", "%", "60", ")", ")", "\n", "print", "(", "'Best val loss: {:4f}'", ".", "format", "(", "best_loss", ")", ")", "\n", "model", ".", "load_state_dict", "(", "best_model_wts", ")", "\n", "return", "model", ",", "Loss_list", ",", "Accuracy_list", "\n", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.None.loss.DiceLoss_multiple.__init__": [[11, 14], ["torch.Module.__init__", "torch.Softmax", "torch.Softmax", "torch.Softmax"], "methods", ["home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.DCSAU_Net.Model.__init__"], ["    ", "def", "__init__", "(", "self", ",", "weight", "=", "None", ",", "size_average", "=", "True", ")", ":", "\n", "        ", "super", "(", "DiceLoss_multiple", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "sfx", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.None.loss.DiceLoss_multiple.binary_dice": [[15, 21], ["inputs.sum", "targets.sum"], "methods", ["None"], ["", "def", "binary_dice", "(", "self", ",", "inputs", ",", "targets", ",", "smooth", "=", "1", ")", ":", "\n", "\n", "        ", "intersection", "=", "(", "inputs", "*", "targets", ")", ".", "sum", "(", ")", "\n", "dice", "=", "(", "2.", "*", "intersection", "+", "smooth", ")", "/", "(", "inputs", ".", "sum", "(", ")", "+", "targets", ".", "sum", "(", ")", "+", "smooth", ")", "\n", "\n", "return", "1", "-", "dice", "\n", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.None.loss.DiceLoss_multiple.forward": [[22, 33], ["loss.DiceLoss_multiple.sfx", "range", "loss.DiceLoss_multiple.binary_dice"], "methods", ["home.repos.pwc.inspect_result.xq141839_DCSAU-Net.None.loss.DiceLoss_multiple.binary_dice"], ["", "def", "forward", "(", "self", ",", "ipts", ",", "gt", ")", ":", "\n", "\n", "        ", "ipts", "=", "self", ".", "sfx", "(", "ipts", ")", "\n", "c", "=", "ipts", ".", "shape", "[", "1", "]", "\n", "sum_loss", "=", "0", "\n", "for", "i", "in", "range", "(", "c", ")", ":", "\n", "            ", "tmp_inputs", "=", "ipts", "[", ":", ",", "i", "]", "\n", "tmp_gt", "=", "gt", "[", ":", ",", "i", "]", "\n", "tmp_loss", "=", "self", ".", "binary_dice", "(", "tmp_inputs", ",", "tmp_gt", ")", "\n", "sum_loss", "+=", "tmp_loss", "\n", "", "return", "sum_loss", "/", "c", "\n", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.None.loss.IoU_multiple.__init__": [[35, 38], ["torch.Module.__init__", "torch.Softmax", "torch.Softmax", "torch.Softmax"], "methods", ["home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.DCSAU_Net.Model.__init__"], ["    ", "def", "__init__", "(", "self", ",", "weight", "=", "None", ",", "size_average", "=", "True", ")", ":", "\n", "        ", "super", "(", "IoU_multiple", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "sfx", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.None.loss.IoU_multiple.forward": [[39, 56], ["loss.IoU_multiple.sfx", "torch.max().indices.cpu", "torch.max().indices.cpu", "torch.max().indices.cpu", "torch.max().indices.cpu", "torch.max().indices.cpu", "torch.max().indices.cpu", "torch.max().indices.cpu", "torch.max().indices.cpu", "torch.max().indices.cpu", "torch.max().indices.cpu", "torch.max().indices.cpu", "torch.max().indices.cpu", "torch.max().indices.cpu", "torch.max().indices.cpu", "torch.max().indices.cpu", "torch.max().indices.cpu", "torch.max().indices.cpu", "torch.max().indices.cpu", "cfs().numpy", "range", "cfs", "numpy.sum", "numpy.sum", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "targets", ",", "smooth", "=", "1", ")", ":", "\n", "        ", "inputs", "=", "self", ".", "sfx", "(", "inputs", ")", "\n", "c", "=", "inputs", ".", "shape", "[", "1", "]", "\n", "inputs", "=", "torch", ".", "max", "(", "inputs", ",", "1", ")", ".", "indices", ".", "cpu", "(", ")", "\n", "targets", "=", "torch", ".", "max", "(", "targets", ",", "1", ")", ".", "indices", ".", "cpu", "(", ")", "\n", "cfsmat", "=", "cfs", "(", "inputs", ",", "targets", ")", ".", "numpy", "(", ")", "\n", "\n", "sum_iou", "=", "0", "\n", "for", "i", "in", "range", "(", "c", ")", ":", "\n", "                ", "tp", "=", "cfsmat", "[", "i", ",", "i", "]", "\n", "fp", "=", "np", ".", "sum", "(", "cfsmat", "[", "0", ":", "3", ",", "i", "]", ")", "-", "tp", "\n", "fn", "=", "np", ".", "sum", "(", "cfsmat", "[", "i", ",", "0", ":", "3", "]", ")", "-", "tp", "\n", "\n", "tmp_iou", "=", "tp", "/", "(", "fp", "+", "fn", "+", "tp", ")", "\n", "sum_iou", "+=", "tmp_iou", "\n", "\n", "", "return", "sum_iou", "/", "c", "\n", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.None.loss.DiceLoss_binary.__init__": [[58, 60], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.DCSAU_Net.Model.__init__"], ["    ", "def", "__init__", "(", "self", ",", "weight", "=", "None", ",", "size_average", "=", "True", ")", ":", "\n", "        ", "super", "(", "DiceLoss_binary", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.None.loss.DiceLoss_binary.forward": [[61, 69], ["torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid.sum", "torch.sigmoid.sum", "torch.sigmoid.sum", "targets.sum"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "targets", ",", "smooth", "=", "1", ")", ":", "\n", "\n", "        ", "inputs", "=", "torch", ".", "sigmoid", "(", "inputs", ")", "\n", "\n", "intersection", "=", "(", "inputs", "*", "targets", ")", ".", "sum", "(", ")", "\n", "dice", "=", "(", "2.", "*", "intersection", "+", "smooth", ")", "/", "(", "inputs", ".", "sum", "(", ")", "+", "targets", ".", "sum", "(", ")", "+", "smooth", ")", "\n", "\n", "return", "1", "-", "dice", "\n", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.None.loss.IoU_binary.__init__": [[71, 73], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.DCSAU_Net.Model.__init__"], ["    ", "def", "__init__", "(", "self", ",", "weight", "=", "None", ",", "size_average", "=", "True", ")", ":", "\n", "        ", "super", "(", "IoU_binary", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.None.loss.IoU_binary.forward": [[74, 85], ["torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "targets", ",", "smooth", "=", "1", ")", ":", "\n", "\n", "        ", "inputs", "=", "torch", ".", "sigmoid", "(", "inputs", ")", "\n", "\n", "intersection", "=", "(", "inputs", "*", "targets", ")", ".", "sum", "(", ")", "\n", "total", "=", "(", "inputs", "+", "targets", ")", ".", "sum", "(", ")", "\n", "union", "=", "total", "-", "intersection", "\n", "\n", "IoU", "=", "(", "intersection", "+", "smooth", ")", "/", "(", "union", "+", "smooth", ")", "\n", "\n", "return", "IoU", "\n", "", "", ""]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.None.eval_binary.IoU.__init__": [[19, 21], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.DCSAU_Net.Model.__init__"], ["    ", "def", "__init__", "(", "self", ",", "weight", "=", "None", ",", "size_average", "=", "True", ")", ":", "\n", "        ", "super", "(", "IoU", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.None.eval_binary.IoU.forward": [[22, 34], ["inputs.view.view.view", "targets.view.view.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "targets", ",", "smooth", "=", "1", ")", ":", "\n", "\n", "        ", "inputs", "=", "inputs", ".", "view", "(", "-", "1", ")", "\n", "targets", "=", "targets", ".", "view", "(", "-", "1", ")", "\n", "\n", "intersection", "=", "(", "inputs", "*", "targets", ")", ".", "sum", "(", ")", "\n", "total", "=", "(", "inputs", "+", "targets", ")", ".", "sum", "(", ")", "\n", "union", "=", "total", "-", "intersection", "\n", "\n", "IoU", "=", "(", "intersection", "+", "smooth", ")", "/", "(", "union", "+", "smooth", ")", "\n", "\n", "return", "IoU", "\n", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.None.eval_binary.Dice.__init__": [[36, 38], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.DCSAU_Net.Model.__init__"], ["    ", "def", "__init__", "(", "self", ",", "weight", "=", "None", ",", "size_average", "=", "True", ")", ":", "\n", "        ", "super", "(", "Dice", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.None.eval_binary.Dice.forward": [[39, 45], ["inputs.sum", "targets.sum"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "targets", ",", "smooth", "=", "1", ")", ":", "\n", "\n", "        ", "intersection", "=", "(", "inputs", "*", "targets", ")", ".", "sum", "(", ")", "\n", "dice", "=", "(", "2.", "*", "intersection", "+", "smooth", ")", "/", "(", "inputs", ".", "sum", "(", ")", "+", "targets", ".", "sum", "(", ")", "+", "smooth", ")", "\n", "\n", "return", "dice", "\n", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.None.eval_binary.get_transform": [[46, 52], ["albumentations.Compose", "albumentations.Resize", "albumentations.Normalize", "albumentations.pytorch.ToTensor"], "function", ["None"], ["", "", "def", "get_transform", "(", ")", ":", "\n", "   ", "return", "A", ".", "Compose", "(", "\n", "[", "\n", "A", ".", "Resize", "(", "256", ",", "256", ")", ",", "\n", "A", ".", "Normalize", "(", "mean", "=", "(", "0.485", ",", "0.456", ",", "0.406", ")", ",", "std", "=", "(", "0.229", ",", "0.224", ",", "0.225", ")", ")", ",", "\n", "ToTensor", "(", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.None.eval_multiple.get_transform": [[18, 22], ["albumentations.Compose", "albumentations.Resize"], "function", ["None"], ["def", "get_transform", "(", ")", ":", "\n", "   ", "return", "A", ".", "Compose", "(", "\n", "[", "\n", "A", ".", "Resize", "(", "256", ",", "256", ")", ",", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.encoder.CSA": [[14, 21], ["ResNet"], "function", ["None"], ["def", "CSA", "(", "pretrained", "=", "False", ",", "root", "=", "'~/.encoding/models'", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "\n", "radix", "=", "2", ",", "groups", "=", "1", ",", "bottleneck_width", "=", "64", ",", "\n", "deep_stem", "=", "True", ",", "stem_width", "=", "32", ",", "avg_down", "=", "True", ",", "\n", "avd", "=", "True", ",", "avd_first", "=", "False", ",", "**", "kwargs", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.splat.SplAtConv2d.__init__": [[18, 54], ["torch.nn.Module.__init__", "torch.nn.modules.utils._pair", "torch.nn.modules.utils._pair", "max", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "splat.rSoftMax", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Dropout", "torch.nn.Dropout", "RFConv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "norm_layer", "norm_layer", "norm_layer", "DropBlock2D"], "methods", ["home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.DCSAU_Net.Model.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "channels", ",", "kernel_size", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", "0", ")", ",", "\n", "dilation", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "True", ",", "\n", "radix", "=", "2", ",", "reduction_factor", "=", "4", ",", "\n", "rectify", "=", "False", ",", "rectify_avg", "=", "False", ",", "norm_layer", "=", "None", ",", "\n", "dropblock_prob", "=", "0.0", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "SplAtConv2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "padding", "=", "_pair", "(", "padding", ")", "\n", "self", ".", "rectify", "=", "rectify", "and", "(", "padding", "[", "0", "]", ">", "0", "or", "padding", "[", "1", "]", ">", "0", ")", "\n", "self", ".", "rectify_avg", "=", "rectify_avg", "\n", "inter_channels", "=", "max", "(", "in_channels", "*", "radix", "//", "reduction_factor", ",", "32", ")", "\n", "self", ".", "radix", "=", "radix", "\n", "self", ".", "cardinality", "=", "groups", "\n", "self", ".", "channels", "=", "channels", "\n", "self", ".", "dropblock_prob", "=", "dropblock_prob", "\n", "if", "self", ".", "rectify", ":", "\n", "            ", "from", "rfconv", "import", "RFConv2d", "\n", "self", ".", "conv", "=", "RFConv2d", "(", "in_channels", ",", "channels", "*", "radix", ",", "kernel_size", ",", "stride", ",", "padding", ",", "dilation", ",", "\n", "groups", "=", "groups", "*", "radix", ",", "bias", "=", "bias", ",", "average_mode", "=", "rectify_avg", ",", "**", "kwargs", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "conv", "=", "Conv2d", "(", "in_channels", ",", "channels", "*", "radix", ",", "kernel_size", ",", "stride", ",", "padding", ",", "dilation", ",", "\n", "groups", "=", "groups", "*", "radix", ",", "bias", "=", "bias", ",", "**", "kwargs", ")", "\n", "", "self", ".", "use_bn", "=", "norm_layer", "is", "not", "None", "\n", "if", "self", ".", "use_bn", ":", "\n", "            ", "self", ".", "bn0", "=", "norm_layer", "(", "channels", "*", "radix", ")", "\n", "self", ".", "bn2", "=", "norm_layer", "(", "channels", ")", "\n", "", "self", ".", "relu", "=", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "fc1", "=", "Conv2d", "(", "channels", ",", "inter_channels", ",", "1", ",", "groups", "=", "self", ".", "cardinality", ")", "\n", "if", "self", ".", "use_bn", ":", "\n", "            ", "self", ".", "bn1", "=", "norm_layer", "(", "inter_channels", ")", "\n", "", "self", ".", "fc2", "=", "Conv2d", "(", "inter_channels", ",", "channels", "*", "radix", ",", "1", ",", "groups", "=", "self", ".", "cardinality", ")", "\n", "if", "dropblock_prob", ">", "0.0", ":", "\n", "            ", "self", ".", "dropblock", "=", "DropBlock2D", "(", "dropblock_prob", ",", "3", ")", "\n", "", "self", ".", "rsoftmax", "=", "rSoftMax", "(", "radix", ",", "groups", ")", "\n", "self", ".", "conv2", "=", "Conv2d", "(", "channels", ",", "channels", ",", "kernel_size", ",", "stride", ",", "padding", ",", "dilation", ",", "\n", "groups", "=", "groups", "*", "radix", ",", "bias", "=", "bias", ",", "**", "kwargs", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "0.2", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.splat.SplAtConv2d.forward": [[54, 86], ["splat.SplAtConv2d.conv", "splat.SplAtConv2d.bn0", "splat.SplAtConv2d.relu", "torch.split", "torch.split", "torch.split", "torch.split", "splat.SplAtConv2d.conv2", "splat.SplAtConv2d.bn2", "splat.SplAtConv2d.relu", "sum", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "splat.SplAtConv2d.fc1", "splat.SplAtConv2d.relu", "splat.SplAtConv2d.fc2", "splat.SplAtConv2d.rsoftmax().view", "torch.split", "torch.split", "torch.split", "torch.split", "sum", "sum.contiguous", "splat.SplAtConv2d.bn1", "splat.SplAtConv2d.rsoftmax", "zip"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "bn0", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "batch", ",", "rchannel", "=", "x", ".", "shape", "[", ":", "2", "]", "\n", "\n", "x1", ",", "x2", "=", "torch", ".", "split", "(", "x", ",", "rchannel", "//", "self", ".", "radix", ",", "dim", "=", "1", ")", "\n", "\n", "x2", "=", "x2", "+", "x1", "\n", "\n", "x2", "=", "self", ".", "conv2", "(", "x2", ")", "\n", "x2", "=", "self", ".", "bn2", "(", "x2", ")", "\n", "x2", "=", "self", ".", "relu", "(", "x2", ")", "\n", "\n", "splited", "=", "(", "x1", ",", "x2", ")", "\n", "gap", "=", "sum", "(", "splited", ")", "\n", "\n", "gap", "=", "F", ".", "adaptive_avg_pool2d", "(", "gap", ",", "1", ")", "\n", "gap", "=", "self", ".", "fc1", "(", "gap", ")", "\n", "\n", "if", "self", ".", "use_bn", ":", "\n", "            ", "gap", "=", "self", ".", "bn1", "(", "gap", ")", "\n", "", "gap", "=", "self", ".", "relu", "(", "gap", ")", "\n", "\n", "atten", "=", "self", ".", "fc2", "(", "gap", ")", "\n", "atten", "=", "self", ".", "rsoftmax", "(", "atten", ")", ".", "view", "(", "batch", ",", "-", "1", ",", "1", ",", "1", ")", "\n", "\n", "attens", "=", "torch", ".", "split", "(", "atten", ",", "rchannel", "//", "self", ".", "radix", ",", "dim", "=", "1", ")", "\n", "\n", "out", "=", "sum", "(", "[", "att", "*", "split", "for", "(", "att", ",", "split", ")", "in", "zip", "(", "attens", ",", "splited", ")", "]", ")", "\n", "return", "out", ".", "contiguous", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.splat.rSoftMax.__init__": [[88, 92], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.DCSAU_Net.Model.__init__"], ["    ", "def", "__init__", "(", "self", ",", "radix", ",", "cardinality", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "radix", "=", "radix", "\n", "self", ".", "cardinality", "=", "cardinality", "\n", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.splat.rSoftMax.forward": [[93, 102], ["torch.sigmoid.size", "torch.sigmoid.size", "torch.sigmoid.view().transpose", "torch.sigmoid.view().transpose", "torch.softmax", "torch.softmax", "torch.sigmoid.reshape", "torch.sigmoid.reshape", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid.view", "torch.sigmoid.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "batch", "=", "x", ".", "size", "(", "0", ")", "\n", "if", "self", ".", "radix", ">", "1", ":", "\n", "            ", "x", "=", "x", ".", "view", "(", "batch", ",", "self", ".", "cardinality", ",", "self", ".", "radix", ",", "-", "1", ")", ".", "transpose", "(", "1", ",", "2", ")", "\n", "x", "=", "F", ".", "softmax", "(", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "x", ".", "reshape", "(", "batch", ",", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "x", "=", "torch", ".", "sigmoid", "(", "x", ")", "\n", "", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.resnet.DropBlock2D.__init__": [[15, 17], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.resnet.GlobalAvgPool2d.__init__": [[19, 22], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.DCSAU_Net.Model.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "\"\"\"Global average pooling over the input's spatial dimensions\"\"\"", "\n", "super", "(", "GlobalAvgPool2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.resnet.GlobalAvgPool2d.forward": [[23, 25], ["torch.functional.adaptive_avg_pool2d().view", "torch.functional.adaptive_avg_pool2d().view", "inputs.size", "torch.functional.adaptive_avg_pool2d", "torch.functional.adaptive_avg_pool2d"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "return", "nn", ".", "functional", ".", "adaptive_avg_pool2d", "(", "inputs", ",", "1", ")", ".", "view", "(", "inputs", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.resnet.Bottleneck.__init__": [[31, 90], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.ReLU", "torch.ReLU", "int", "torch.AvgPool2d", "torch.AvgPool2d", "resnet.DropBlock2D", "resnet.DropBlock2D", "pytorch_dcsaunet.splat.SplAtConv2d", "zeros_", "resnet.DropBlock2D", "RFConv2d", "norm_layer", "torch.Conv2d", "torch.Conv2d", "norm_layer"], "methods", ["home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.DCSAU_Net.Model.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "\n", "radix", "=", "1", ",", "cardinality", "=", "1", ",", "bottleneck_width", "=", "64", ",", "\n", "avd", "=", "False", ",", "avd_first", "=", "False", ",", "dilation", "=", "1", ",", "is_first", "=", "False", ",", "\n", "rectified_conv", "=", "False", ",", "rectify_avg", "=", "False", ",", "\n", "norm_layer", "=", "None", ",", "dropblock_prob", "=", "0.0", ",", "last_gamma", "=", "False", ",", "number", "=", "1", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "group_width", "=", "int", "(", "planes", "*", "(", "bottleneck_width", "/", "64.", ")", ")", "*", "cardinality", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "group_width", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "group_width", ")", "\n", "self", ".", "dropblock_prob", "=", "dropblock_prob", "\n", "self", ".", "radix", "=", "radix", "\n", "self", ".", "avd", "=", "avd", "and", "(", "stride", ">", "1", "or", "is_first", ")", "\n", "self", ".", "avd_first", "=", "avd_first", "\n", "\n", "if", "self", ".", "avd", ":", "\n", "            ", "self", ".", "avd_layer", "=", "nn", ".", "AvgPool2d", "(", "3", ",", "stride", ",", "padding", "=", "1", ")", "\n", "stride", "=", "1", "\n", "\n", "", "if", "dropblock_prob", ">", "0.0", ":", "\n", "            ", "self", ".", "dropblock1", "=", "DropBlock2D", "(", "dropblock_prob", ",", "3", ")", "\n", "if", "radix", "==", "1", ":", "\n", "                ", "self", ".", "dropblock2", "=", "DropBlock2D", "(", "dropblock_prob", ",", "3", ")", "\n", "", "self", ".", "dropblock3", "=", "DropBlock2D", "(", "dropblock_prob", ",", "3", ")", "\n", "\n", "", "if", "radix", ">=", "1", ":", "\n", "            ", "self", ".", "conv2", "=", "splat", ".", "SplAtConv2d", "(", "\n", "group_width", ",", "group_width", ",", "kernel_size", "=", "3", ",", "\n", "stride", "=", "stride", ",", "padding", "=", "dilation", ",", "\n", "dilation", "=", "dilation", ",", "groups", "=", "cardinality", ",", "bias", "=", "False", ",", "\n", "radix", "=", "radix", ",", "rectify", "=", "rectified_conv", ",", "\n", "rectify_avg", "=", "rectify_avg", ",", "\n", "norm_layer", "=", "norm_layer", ",", "\n", "dropblock_prob", "=", "dropblock_prob", ")", "\n", "", "elif", "rectified_conv", ":", "\n", "            ", "from", "rfconv", "import", "RFConv2d", "\n", "self", ".", "conv2", "=", "RFConv2d", "(", "\n", "group_width", ",", "group_width", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "dilation", ",", "dilation", "=", "dilation", ",", "\n", "groups", "=", "cardinality", ",", "bias", "=", "False", ",", "\n", "average_mode", "=", "rectify_avg", ")", "\n", "self", ".", "bn2", "=", "norm_layer", "(", "group_width", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "\n", "group_width", ",", "group_width", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "dilation", ",", "dilation", "=", "dilation", ",", "\n", "groups", "=", "cardinality", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "norm_layer", "(", "group_width", ")", "\n", "\n", "", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "\n", "group_width", ",", "planes", "*", "4", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "norm_layer", "(", "planes", "*", "4", ")", "\n", "\n", "if", "last_gamma", ":", "\n", "            ", "from", "torch", ".", "nn", ".", "init", "import", "zeros_", "\n", "zeros_", "(", "self", ".", "bn3", ".", "weight", ")", "\n", "", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "dilation", "=", "dilation", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.resnet.Bottleneck.forward": [[91, 131], ["resnet.Bottleneck.conv1", "resnet.Bottleneck.bn1", "resnet.Bottleneck.relu", "resnet.Bottleneck.conv2", "resnet.Bottleneck.conv3", "resnet.Bottleneck.bn3", "resnet.Bottleneck.relu", "resnet.Bottleneck.dropblock1", "resnet.Bottleneck.avd_layer", "resnet.Bottleneck.bn2", "resnet.Bottleneck.relu", "resnet.Bottleneck.avd_layer", "resnet.Bottleneck.dropblock3", "resnet.Bottleneck.downsample", "resnet.Bottleneck.dropblock2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "if", "self", ".", "dropblock_prob", ">", "0.0", ":", "\n", "            ", "out", "=", "self", ".", "dropblock1", "(", "out", ")", "\n", "", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "if", "self", ".", "avd", "and", "self", ".", "avd_first", ":", "\n", "            ", "out", "=", "self", ".", "avd_layer", "(", "out", ")", "\n", "\n", "\n", "\n", "", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "#out = self.dp(out)", "\n", "if", "self", ".", "radix", "==", "0", ":", "\n", "            ", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "if", "self", ".", "dropblock_prob", ">", "0.0", ":", "\n", "                ", "out", "=", "self", ".", "dropblock2", "(", "out", ")", "\n", "", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "", "if", "self", ".", "avd", "and", "not", "self", ".", "avd_first", ":", "\n", "            ", "out", "=", "self", ".", "avd_layer", "(", "out", ")", "\n", "\n", "\n", "\n", "", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "# out = self.dp(out)", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "if", "self", ".", "dropblock_prob", ">", "0.0", ":", "\n", "            ", "out", "=", "self", ".", "dropblock3", "(", "out", ")", "\n", "\n", "", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.resnet.ResNet.__init__": [[157, 241], ["torch.Module.__init__", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet.modules", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.DCSAU_Net.Model.__init__", "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.resnet.ResNet._make_layer"], ["def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "radix", "=", "1", ",", "groups", "=", "1", ",", "bottleneck_width", "=", "64", ",", "\n", "num_classes", "=", "1000", ",", "dilated", "=", "False", ",", "dilation", "=", "2", ",", "\n", "deep_stem", "=", "False", ",", "stem_width", "=", "64", ",", "avg_down", "=", "False", ",", "\n", "rectified_conv", "=", "False", ",", "rectify_avg", "=", "False", ",", "\n", "avd", "=", "False", ",", "avd_first", "=", "False", ",", "\n", "final_drop", "=", "0.0", ",", "dropblock_prob", "=", "0", ",", "\n", "last_gamma", "=", "False", ",", "norm_layer", "=", "nn", ".", "BatchNorm2d", ")", ":", "\n", "        ", "self", ".", "cardinality", "=", "groups", "\n", "self", ".", "bottleneck_width", "=", "bottleneck_width", "\n", "# ResNet-D params", "\n", "self", ".", "inplanes", "=", "stem_width", "*", "2", "if", "deep_stem", "else", "64", "\n", "self", ".", "avg_down", "=", "avg_down", "\n", "self", ".", "last_gamma", "=", "last_gamma", "\n", "# ResNeSt params", "\n", "self", ".", "radix", "=", "radix", "\n", "self", ".", "avd", "=", "avd", "\n", "self", ".", "avd_first", "=", "avd_first", "\n", "\n", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "rectified_conv", "=", "rectified_conv", "\n", "self", ".", "rectify_avg", "=", "rectify_avg", "\n", "if", "rectified_conv", ":", "\n", "            ", "from", "rfconv", "import", "RFConv2d", "\n", "conv_layer", "=", "RFConv2d", "\n", "", "else", ":", "\n", "            ", "conv_layer", "=", "nn", ".", "Conv2d", "\n", "", "conv_kwargs", "=", "{", "'average_mode'", ":", "rectify_avg", "}", "if", "rectified_conv", "else", "{", "}", "\n", "\n", "ConvFea", "=", "[", "32", ",", "64", ",", "128", ",", "256", ",", "512", "]", "\n", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "ConvFea", "[", "0", "]", ",", "layers", "[", "0", "]", ",", "norm_layer", "=", "norm_layer", ",", "is_first", "=", "False", ")", "\n", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "ConvFea", "[", "1", "]", ",", "layers", "[", "1", "]", ",", "stride", "=", "1", ",", "norm_layer", "=", "norm_layer", ")", "\n", "\n", "\n", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "ConvFea", "[", "2", "]", ",", "layers", "[", "2", "]", ",", "stride", "=", "1", ",", "\n", "dilation", "=", "1", ",", "norm_layer", "=", "norm_layer", ",", "\n", "dropblock_prob", "=", "dropblock_prob", ")", "\n", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "ConvFea", "[", "3", "]", ",", "layers", "[", "3", "]", ",", "stride", "=", "1", ",", "\n", "dilation", "=", "2", ",", "norm_layer", "=", "norm_layer", ",", "\n", "dropblock_prob", "=", "dropblock_prob", ")", "\n", "\n", "\n", "self", ".", "layer5", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "3", "]", ",", "stride", "=", "1", ",", "\n", "dilation", "=", "2", ",", "norm_layer", "=", "norm_layer", ",", "\n", "dropblock_prob", "=", "dropblock_prob", ")", "\n", "self", ".", "layer6", "=", "self", ".", "_make_layer", "(", "block", ",", "ConvFea", "[", "2", "]", ",", "layers", "[", "0", "]", ",", "stride", "=", "1", ",", "\n", "dilation", "=", "2", ",", "norm_layer", "=", "norm_layer", ",", "\n", "dropblock_prob", "=", "dropblock_prob", ")", "\n", "\n", "\n", "\n", "\n", "self", ".", "layer7", "=", "self", ".", "_make_layer", "(", "block", ",", "192", ",", "layers", "[", "0", "]", ",", "stride", "=", "1", ",", "\n", "dilation", "=", "2", ",", "norm_layer", "=", "norm_layer", ",", "\n", "dropblock_prob", "=", "dropblock_prob", ")", "\n", "self", ".", "layer8", "=", "self", ".", "_make_layer", "(", "block", ",", "ConvFea", "[", "1", "]", ",", "layers", "[", "1", "]", ",", "stride", "=", "1", ",", "\n", "dilation", "=", "1", ",", "norm_layer", "=", "norm_layer", ",", "\n", "dropblock_prob", "=", "dropblock_prob", ")", "\n", "\n", "\n", "\n", "self", ".", "layer9", "=", "self", ".", "_make_layer", "(", "block", ",", "96", ",", "layers", "[", "0", "]", ",", "stride", "=", "1", ",", "\n", "dilation", "=", "2", ",", "norm_layer", "=", "norm_layer", ",", "\n", "dropblock_prob", "=", "dropblock_prob", ")", "\n", "\n", "\n", "\n", "self", ".", "layer10", "=", "self", ".", "_make_layer", "(", "block", ",", "ConvFea", "[", "0", "]", ",", "layers", "[", "2", "]", ",", "stride", "=", "1", ",", "norm_layer", "=", "norm_layer", ")", "\n", "\n", "\n", "self", ".", "layer11", "=", "self", ".", "_make_layer", "(", "block", ",", "48", ",", "layers", "[", "2", "]", ",", "stride", "=", "1", ",", "norm_layer", "=", "norm_layer", ")", "\n", "self", ".", "layer12", "=", "self", ".", "_make_layer", "(", "block", ",", "ConvFea", "[", "0", "]", "//", "2", ",", "layers", "[", "3", "]", ",", "norm_layer", "=", "norm_layer", ",", "is_first", "=", "False", ")", "\n", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "norm_layer", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.resnet.ResNet._make_layer": [[242, 296], ["range", "torch.Sequential", "torch.Sequential", "down_layers.append", "torch.Sequential", "torch.Sequential", "layers.append", "layers.append", "down_layers.append", "down_layers.append", "norm_layer", "block", "layers.append", "RuntimeError", "block", "down_layers.append", "down_layers.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "block", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ",", "\n", "dropblock_prob", "=", "0.0", ",", "is_first", "=", "True", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "down_layers", "=", "[", "]", "\n", "if", "self", ".", "avg_down", ":", "\n", "                ", "if", "dilation", "==", "1", ":", "\n", "                    ", "down_layers", ".", "append", "(", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "stride", ",", "stride", "=", "stride", ",", "\n", "ceil_mode", "=", "True", ",", "count_include_pad", "=", "False", ")", ")", "\n", "", "else", ":", "\n", "                    ", "down_layers", ".", "append", "(", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "\n", "ceil_mode", "=", "True", ",", "count_include_pad", "=", "False", ")", ")", "\n", "", "down_layers", ".", "append", "(", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", ")", "\n", "", "else", ":", "\n", "                ", "down_layers", ".", "append", "(", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ")", "\n", "", "down_layers", ".", "append", "(", "norm_layer", "(", "planes", "*", "block", ".", "expansion", ")", ")", "\n", "downsample", "=", "nn", ".", "Sequential", "(", "*", "down_layers", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "if", "dilation", "==", "1", "or", "dilation", "==", "2", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", "=", "downsample", ",", "\n", "radix", "=", "self", ".", "radix", ",", "cardinality", "=", "self", ".", "cardinality", ",", "\n", "bottleneck_width", "=", "self", ".", "bottleneck_width", ",", "\n", "avd", "=", "self", ".", "avd", ",", "avd_first", "=", "self", ".", "avd_first", ",", "\n", "dilation", "=", "1", ",", "is_first", "=", "is_first", ",", "rectified_conv", "=", "self", ".", "rectified_conv", ",", "\n", "rectify_avg", "=", "self", ".", "rectify_avg", ",", "\n", "norm_layer", "=", "norm_layer", ",", "dropblock_prob", "=", "dropblock_prob", ",", "\n", "last_gamma", "=", "self", ".", "last_gamma", ")", ")", "\n", "", "elif", "dilation", "==", "4", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", "=", "downsample", ",", "\n", "radix", "=", "self", ".", "radix", ",", "cardinality", "=", "self", ".", "cardinality", ",", "\n", "bottleneck_width", "=", "self", ".", "bottleneck_width", ",", "\n", "avd", "=", "self", ".", "avd", ",", "avd_first", "=", "self", ".", "avd_first", ",", "\n", "dilation", "=", "2", ",", "is_first", "=", "is_first", ",", "rectified_conv", "=", "self", ".", "rectified_conv", ",", "\n", "rectify_avg", "=", "self", ".", "rectify_avg", ",", "\n", "norm_layer", "=", "norm_layer", ",", "dropblock_prob", "=", "dropblock_prob", ",", "\n", "last_gamma", "=", "self", ".", "last_gamma", ")", ")", "\n", "", "else", ":", "\n", "            ", "raise", "RuntimeError", "(", "\"=> unknown dilation size: {}\"", ".", "format", "(", "dilation", ")", ")", "\n", "\n", "", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "\n", "radix", "=", "self", ".", "radix", ",", "cardinality", "=", "self", ".", "cardinality", ",", "\n", "bottleneck_width", "=", "self", ".", "bottleneck_width", ",", "\n", "avd", "=", "self", ".", "avd", ",", "avd_first", "=", "self", ".", "avd_first", ",", "\n", "dilation", "=", "dilation", ",", "rectified_conv", "=", "self", ".", "rectified_conv", ",", "\n", "rectify_avg", "=", "self", ".", "rectify_avg", ",", "\n", "norm_layer", "=", "norm_layer", ",", "dropblock_prob", "=", "dropblock_prob", ",", "\n", "last_gamma", "=", "self", ".", "last_gamma", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.DCSAU_Net.DownAndUp.__init__": [[8, 18], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.DCSAU_Net.Model.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ")", ":", "\n", "       ", "super", "(", "DownAndUp", ",", "self", ")", ".", "__init__", "(", ")", "\n", "temp", "=", "out_channels", "\n", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "temp", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "temp", ",", "out_channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.DCSAU_Net.DownAndUp.forward": [[19, 22], ["DCSAU_Net.DownAndUp.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "return", "self", ".", "conv1", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.DCSAU_Net.Up.__init__": [[26, 30], ["torch.Module.__init__", "torch.Upsample", "torch.Upsample", "torch.Upsample"], "methods", ["home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.DCSAU_Net.Model.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "up", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.DCSAU_Net.Up.forward": [[31, 43], ["DCSAU_Net.Up.up", "torch.pad", "torch.pad", "torch.pad", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "x2.size", "torch.pad.size", "x2.size", "torch.pad.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x1", ",", "x2", ")", ":", "\n", "        ", "x1", "=", "self", ".", "up", "(", "x1", ")", "\n", "# input is CHW", "\n", "\n", "diffY", "=", "x2", ".", "size", "(", ")", "[", "2", "]", "-", "x1", ".", "size", "(", ")", "[", "2", "]", "\n", "diffX", "=", "x2", ".", "size", "(", ")", "[", "3", "]", "-", "x1", ".", "size", "(", ")", "[", "3", "]", "\n", "\n", "x1", "=", "F", ".", "pad", "(", "x1", ",", "[", "diffX", "//", "2", ",", "diffX", "-", "diffX", "//", "2", ",", "\n", "diffY", "//", "2", ",", "diffY", "-", "diffY", "//", "2", "]", ")", "\n", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x2", ",", "x1", "]", ",", "dim", "=", "1", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.DCSAU_Net.DC.__init__": [[46, 57], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.DCSAU_Net.Model.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channels", ",", "depth", ",", "kernel_size", "=", "7", ")", ":", "\n", "        ", "super", "(", "DC", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "depth", "=", "depth", "\n", "self", ".", "depthwise", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "channels", ",", "channels", ",", "kernel_size", ",", "groups", "=", "channels", ",", "padding", "=", "kernel_size", "//", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "channels", ")", ")", "\n", "self", ".", "pointwise", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "channels", ",", "channels", ",", "kernel_size", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "channels", ")", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.DCSAU_Net.DC.forward": [[57, 64], ["range", "DCSAU_Net.DC.depthwise", "DCSAU_Net.DC.pointwise"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "            ", "for", "i", "in", "range", "(", "self", ".", "depth", ")", ":", "\n", "                ", "residual", "=", "x", "\n", "x", "=", "self", ".", "depthwise", "(", "x", ")", "\n", "x", "+=", "residual", "\n", "x", "=", "self", ".", "pointwise", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.DCSAU_Net.Model.__init__": [[68, 88], ["torch.Module.__init__", "pytorch_dcsaunet.encoder.CSA", "DCSAU_Net.DC", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "DCSAU_Net.Up", "DCSAU_Net.Up", "DCSAU_Net.Up", "DCSAU_Net.Up", "DCSAU_Net.DownAndUp"], "methods", ["home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.DCSAU_Net.Model.__init__", "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.encoder.CSA"], ["    ", "def", "__init__", "(", "self", ",", "img_channels", "=", "3", ",", "n_classes", "=", "1", ")", ":", "\n", "       ", "super", "(", "Model", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "csa", "=", "CSA", "(", ")", "\n", "self", ".", "convmix", "=", "DC", "(", "512", ",", "12", ")", "\n", "self", ".", "img_channels", "=", "img_channels", "\n", "self", ".", "n_classes", "=", "n_classes", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ")", "\n", "self", ".", "out_conv", "=", "nn", ".", "Conv2d", "(", "64", ",", "n_classes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "up_conv1", "=", "Up", "(", ")", "\n", "self", ".", "up_conv2", "=", "Up", "(", ")", "\n", "self", ".", "up_conv3", "=", "Up", "(", ")", "\n", "self", ".", "up_conv4", "=", "Up", "(", ")", "\n", "self", ".", "down1", "=", "DownAndUp", "(", "img_channels", ",", "64", ")", "\n", "self", ".", "down2", "=", "self", ".", "csa", ".", "layer1", "\n", "self", ".", "down3", "=", "self", ".", "csa", ".", "layer2", "\n", "self", ".", "down4", "=", "self", ".", "csa", ".", "layer3", "\n", "self", ".", "up1", "=", "self", ".", "csa", ".", "layer6", "\n", "self", ".", "up2", "=", "self", ".", "csa", ".", "layer8", "\n", "self", ".", "up3", "=", "self", ".", "csa", ".", "layer10", "\n", "self", ".", "up4", "=", "self", ".", "csa", ".", "layer12", "\n", "\n"]], "home.repos.pwc.inspect_result.xq141839_DCSAU-Net.pytorch_dcsaunet.DCSAU_Net.Model.forward": [[90, 123], ["DCSAU_Net.Model.down1", "DCSAU_Net.Model.maxpool", "DCSAU_Net.Model.down2", "DCSAU_Net.Model.maxpool", "DCSAU_Net.Model.down3", "DCSAU_Net.Model.maxpool", "DCSAU_Net.Model.down4", "DCSAU_Net.Model.maxpool", "DCSAU_Net.Model.convmix", "DCSAU_Net.Model.up_conv1", "DCSAU_Net.Model.up1", "DCSAU_Net.Model.up_conv2", "DCSAU_Net.Model.up2", "DCSAU_Net.Model.up_conv3", "DCSAU_Net.Model.up3", "DCSAU_Net.Model.up_conv4", "DCSAU_Net.Model.up4", "DCSAU_Net.Model.out_conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "x1", "=", "self", ".", "down1", "(", "x", ")", "\n", "x2", "=", "self", ".", "maxpool", "(", "x1", ")", "\n", "\n", "x3", "=", "self", ".", "down2", "(", "x2", ")", "\n", "x4", "=", "self", ".", "maxpool", "(", "x3", ")", "\n", "\n", "x5", "=", "self", ".", "down3", "(", "x4", ")", "\n", "x6", "=", "self", ".", "maxpool", "(", "x5", ")", "\n", "\n", "x7", "=", "self", ".", "down4", "(", "x6", ")", "\n", "x8", "=", "self", ".", "maxpool", "(", "x7", ")", "\n", "\n", "x9", "=", "self", ".", "convmix", "(", "x8", ")", "\n", "\n", "x10", "=", "self", ".", "up_conv1", "(", "x9", ",", "x7", ")", "\n", "\n", "x11", "=", "self", ".", "up1", "(", "x10", ")", "\n", "\n", "x12", "=", "self", ".", "up_conv2", "(", "x11", ",", "x5", ")", "\n", "x13", "=", "self", ".", "up2", "(", "x12", ")", "\n", "\n", "x14", "=", "self", ".", "up_conv3", "(", "x13", ",", "x3", ")", "\n", "x15", "=", "self", ".", "up3", "(", "x14", ")", "\n", "\n", "x16", "=", "self", ".", "up_conv4", "(", "x15", ",", "x1", ")", "\n", "x17", "=", "self", ".", "up4", "(", "x16", ")", "\n", "\n", "x18", "=", "self", ".", "out_conv", "(", "x17", ")", "\n", "\n", "#x19 = torch.sigmoid(x18)", "\n", "return", "x19", "\n", "", "", ""]]}