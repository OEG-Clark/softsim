{"home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.config.update_dict": [[10, 22], ["u.items", "isinstance", "print", "config.update_dict", "isinstance", "d.get"], "function", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.config.update_dict"], ["def", "update_dict", "(", "d", ",", "u", ",", "show_warning", "=", "False", ")", ":", "\n", "    ", "for", "k", ",", "v", "in", "u", ".", "items", "(", ")", ":", "\n", "        ", "if", "k", "not", "in", "d", "and", "show_warning", ":", "\n", "            ", "print", "(", "\"\\033[91m Warning: key {} not found in config. Make sure to double check spelling and config option name. \\033[0m\"", ".", "format", "(", "k", ")", ")", "\n", "", "if", "isinstance", "(", "v", ",", "dict", ")", ":", "\n", "            ", "if", "k", "not", "in", "d", "or", "not", "isinstance", "(", "d", "[", "k", "]", ",", "dict", ")", ":", "\n", "                ", "d", "[", "k", "]", "=", "v", "\n", "", "else", ":", "\n", "                ", "d", "[", "k", "]", "=", "update_dict", "(", "d", ".", "get", "(", "k", ",", "{", "}", ")", ",", "v", ",", "show_warning", ")", "\n", "", "", "else", ":", "\n", "            ", "d", "[", "k", "]", "=", "v", "\n", "", "", "return", "d", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.config.load_config": [[23, 31], ["open", "json.load", "auto_LiRPA.utils.logger.info", "open", "config.update_dict", "json.load"], "function", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.config.update_dict"], ["", "def", "load_config", "(", "path", ")", ":", "\n", "    ", "with", "open", "(", "\"config/defaults.json\"", ")", "as", "f", ":", "\n", "        ", "config", "=", "json", ".", "load", "(", "f", ")", "\n", "", "if", "path", "is", "not", "None", ":", "\n", "        ", "logger", ".", "info", "(", "\"Loading config file: {}\"", ".", "format", "(", "path", ")", ")", "\n", "with", "open", "(", "path", ")", "as", "f", ":", "\n", "            ", "update_dict", "(", "config", ",", "json", ".", "load", "(", "f", ")", ")", "\n", "", "", "return", "config", "", "", ""]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.certified.get_crown_loss": [[11, 21], ["torch.cat", "torch.cat", "torch.zeros", "torch.zeros", "ce_loss", "lb.size", "torch.zeros_like", "torch.zeros_like", "torch.Softmax", "torch.log", "torch.log"], "function", ["None"], ["def", "get_crown_loss", "(", "args", ",", "lb", ",", "eps", "=", "None", ")", ":", "\n", "    ", "lb_padded", "=", "torch", ".", "cat", "(", "[", "torch", ".", "zeros_like", "(", "lb", "[", ":", ",", ":", "1", "]", ")", ",", "lb", "]", ",", "dim", "=", "1", ")", "\n", "fake_labels", "=", "torch", ".", "zeros", "(", "lb", ".", "size", "(", "0", ")", ",", "dtype", "=", "torch", ".", "long", ",", "device", "=", "lb", ".", "device", ")", "\n", "if", "args", ".", "ls", ">", "0", ":", "\n", "        ", "threshold", "=", "1", "-", "eps", "*", "args", ".", "ls", "\n", "prob", "=", "nn", ".", "Softmax", "(", "dim", "=", "-", "1", ")", "(", "-", "lb_padded", ")", "[", ":", ",", "0", "]", "\n", "robust_loss_", "=", "(", "-", "torch", ".", "log", "(", "prob", "[", ":", "]", ")", "*", "(", "prob", "<", "threshold", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "return", "robust_loss_", "\n", "", "robust_loss_", "=", "ce_loss", "(", "-", "lb_padded", ",", "fake_labels", ")", "\n", "return", "robust_loss_", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.certified.get_C": [[22, 24], ["get_spec_matrix"], "function", ["None"], ["", "def", "get_C", "(", "args", ",", "data", ",", "labels", ")", ":", "\n", "    ", "return", "get_spec_matrix", "(", "data", ",", "labels", ",", "args", ".", "num_class", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.certified.get_bound_loss": [[25, 62], ["utils.update_relu_stat", "model", "isinstance", "certified.get_crown_loss", "certified.get_C", "model.compute_bounds", "torch.mean", "torch.mean", "eps_scheduler.get_max_eps", "model.compute_bounds", "eps_scheduler.get_max_eps", "eps_scheduler.get_eps", "torch.log", "torch.log", "eps_scheduler.get_eps", "eps_scheduler.get_max_eps", "utils.get_exp_module"], "function", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.update_relu_stat", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.certified.get_crown_loss", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.certified.get_C", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.get_exp_module"], ["", "def", "get_bound_loss", "(", "args", ",", "model", ",", "loss_fusion", ",", "eps_scheduler", ",", "\n", "x", "=", "None", ",", "data", "=", "None", ",", "labels", "=", "None", ",", "eps", "=", "None", ",", "\n", "meter", "=", "None", ",", "train", "=", "False", ")", ":", "\n", "    ", "if", "loss_fusion", ":", "\n", "        ", "c", ",", "bound_lower", ",", "bound_upper", "=", "None", ",", "False", ",", "True", "\n", "", "else", ":", "\n", "        ", "c", ",", "bound_lower", ",", "bound_upper", "=", "get_C", "(", "args", ",", "data", ",", "labels", ")", ",", "True", ",", "False", "\n", "", "if", "args", ".", "bound_type", "==", "'IBP'", ":", "\n", "# FIXME remove `x=x`???", "\n", "        ", "lb", ",", "ub", "=", "model", "(", "method_opt", "=", "\"compute_bounds\"", ",", "x", "=", "x", ",", "IBP", "=", "True", ",", "C", "=", "c", ",", "method", "=", "None", ",", "\n", "no_replicas", "=", "True", ")", "\n", "", "elif", "args", ".", "bound_type", "==", "'CROWN-IBP'", ":", "\n", "        ", "factor", "=", "(", "eps_scheduler", ".", "get_max_eps", "(", ")", "-", "eps_scheduler", ".", "get_eps", "(", ")", ")", "/", "eps_scheduler", ".", "get_max_eps", "(", ")", "\n", "ilb", ",", "iub", "=", "model", ".", "compute_bounds", "(", "IBP", "=", "True", ",", "C", "=", "c", ",", "method", "=", "None", ")", "\n", "if", "factor", "<", "1e-5", ":", "\n", "            ", "lb", ",", "ub", "=", "ilb", ",", "iub", "\n", "", "else", ":", "\n", "            ", "clb", ",", "cub", "=", "model", ".", "compute_bounds", "(", "IBP", "=", "False", ",", "C", "=", "c", ",", "method", "=", "'backward'", ",", "\n", "bound_lower", "=", "bound_lower", ",", "bound_upper", "=", "bound_upper", ")", "\n", "# clb, cub, A_dict = model.compute_bounds(IBP=False, C=c, method='backward', ", "\n", "#     bound_lower=bound_lower, bound_upper=bound_upper, return_A=True)", "\n", "if", "loss_fusion", ":", "\n", "                ", "ub", "=", "cub", "*", "factor", "+", "iub", "*", "(", "1", "-", "factor", ")", "\n", "", "else", ":", "\n", "                ", "lb", "=", "clb", "*", "factor", "+", "ilb", "*", "(", "1", "-", "factor", ")", "\n", "", "", "", "else", ":", "\n", "        ", "raise", "ValueError", "\n", "", "update_relu_stat", "(", "model", ",", "meter", ")", "\n", "if", "loss_fusion", ":", "\n", "        ", "if", "isinstance", "(", "model", ",", "BoundDataParallel", ")", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "", "return", "None", ",", "torch", ".", "mean", "(", "torch", ".", "log", "(", "ub", ")", "+", "get_exp_module", "(", "model", ")", ".", "max_input", ")", "\n", "", "else", ":", "\n", "# Pad zero at the beginning for each example, and use fake label '0' for all examples", "\n", "        ", "robust_loss", "=", "get_crown_loss", "(", "args", ",", "lb", ",", "\n", "eps", "=", "eps_scheduler", ".", "get_eps", "(", ")", "/", "eps_scheduler", ".", "get_max_eps", "(", ")", ")", "\n", "return", "lb", ",", "robust_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.certified.cert": [[63, 101], ["torch.min", "torch.min", "torch.max", "torch.max", "PerturbationLpNorm", "auto_LiRPA.BoundedTensor", "max", "type", "model", "torch.mean", "torch.mean", "model", "ce_loss", "certified.get_bound_loss", "torch.isnan", "torch.isnan", "max.view", "std.view", "torch.sum().item", "torch.sum().item", "auto_LiRPA.BoundedTensor.size", "torch.log", "torch.log", "torch.sum().item", "torch.sum().item", "data.size", "utils.get_exp_module", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.argmax", "torch.argmax"], "function", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.certified.get_bound_loss", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.get_exp_module"], ["", "", "def", "cert", "(", "args", ",", "model", ",", "model_ori", ",", "epoch", ",", "epoch_progress", ",", "data", ",", "labels", ",", "eps", ",", "data_max", ",", "data_min", ",", "std", ",", "\n", "robust", "=", "False", ",", "reg", "=", "False", ",", "loss_fusion", "=", "False", ",", "eps_scheduler", "=", "None", ",", "\n", "train", "=", "False", ",", "meter", "=", "None", ")", ":", "\n", "    ", "if", "not", "robust", "and", "reg", ":", "\n", "        ", "eps", "=", "max", "(", "eps", ",", "args", ".", "min_eps_reg", ")", "\n", "", "if", "type", "(", "eps", ")", "==", "float", ":", "\n", "        ", "eps", "=", "(", "eps", "/", "std", ")", ".", "view", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", "\n", "", "else", ":", "# [batch_size, channels]", "\n", "        ", "eps", "=", "(", "eps", ".", "view", "(", "*", "eps", ".", "shape", ",", "1", ",", "1", ")", "/", "std", ".", "view", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", ")", "\n", "\n", "", "data_ub", "=", "torch", ".", "min", "(", "data", "+", "eps", ",", "data_max", ")", "\n", "data_lb", "=", "torch", ".", "max", "(", "data", "-", "eps", ",", "data_min", ")", "\n", "ptb", "=", "PerturbationLpNorm", "(", "norm", "=", "np", ".", "inf", ",", "eps", "=", "eps", ",", "x_L", "=", "data_lb", ",", "x_U", "=", "data_ub", ")", "\n", "x", "=", "BoundedTensor", "(", "data", ",", "ptb", ")", "\n", "\n", "if", "loss_fusion", ":", "\n", "        ", "x", "=", "(", "x", ",", "labels", ")", "\n", "output", "=", "model", "(", "*", "x", ")", "\n", "regular_ce", "=", "torch", ".", "mean", "(", "torch", ".", "log", "(", "output", ")", "+", "get_exp_module", "(", "model", ")", ".", "max_input", ")", "\n", "regular_err", "=", "None", "\n", "", "else", ":", "\n", "        ", "output", "=", "model", "(", "x", ")", "\n", "regular_ce", "=", "ce_loss", "(", "output", ",", "labels", ")", "# regular CrossEntropyLoss used for warming up", "\n", "regular_err", "=", "torch", ".", "sum", "(", "torch", ".", "argmax", "(", "output", ",", "dim", "=", "1", ")", "!=", "labels", ")", ".", "item", "(", ")", "/", "x", ".", "size", "(", "0", ")", "\n", "x", "=", "(", "x", ",", ")", "\n", "\n", "", "if", "robust", "or", "reg", "or", "args", ".", "xiao_reg", "or", "args", ".", "vol_reg", ":", "\n", "        ", "b_res", ",", "robust_loss", "=", "get_bound_loss", "(", "args", ",", "model", ",", "loss_fusion", ",", "eps_scheduler", ",", "\n", "x", "=", "(", "x", "if", "loss_fusion", "else", "None", ")", ",", "data", "=", "data", ",", "labels", "=", "labels", ",", "\n", "eps", "=", "eps", ",", "meter", "=", "meter", ",", "train", "=", "train", ")", "\n", "robust_err", "=", "torch", ".", "sum", "(", "(", "b_res", "<", "0", ")", ".", "any", "(", "dim", "=", "1", ")", ")", ".", "item", "(", ")", "/", "data", ".", "size", "(", "0", ")", "if", "not", "loss_fusion", "else", "None", "\n", "", "else", ":", "\n", "        ", "robust_loss", "=", "robust_err", "=", "None", "\n", "\n", "", "if", "robust_loss", "is", "not", "None", "and", "torch", ".", "isnan", "(", "robust_loss", ")", ":", "\n", "        ", "robust_err", "=", "100.", "\n", "\n", "", "return", "regular_ce", ",", "robust_loss", ",", "regular_err", ",", "robust_err", "", "", ""]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.parser.add_arguments_lipschitz": [[3, 6], ["parser.add_argument", "parser.add_argument"], "function", ["None"], ["def", "add_arguments_lipschitz", "(", "parser", ")", ":", "\n", "    ", "parser", ".", "add_argument", "(", "'--lip'", ",", "action", "=", "'store_true'", ",", "help", "=", "'1-lipschitz network'", ")", "\n", "parser", ".", "add_argument", "(", "'--global-lip'", ",", "action", "=", "'store_true'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.parser.add_arguments_regularizers_and_init": [[7, 26], ["parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument"], "function", ["None"], ["", "def", "add_arguments_regularizers_and_init", "(", "parser", ")", ":", "\n", "    ", "\"\"\" NeurIPS 2021 \"\"\"", "\n", "parser", ".", "add_argument", "(", "'--reg-obj'", ",", "'--pre-obj'", ",", "type", "=", "str", ",", "nargs", "=", "'+'", ",", "default", "=", "[", "'relu'", ",", "'tightness'", "]", ")", "\n", "parser", ".", "add_argument", "(", "'--reg-lambda'", ",", "'--pi'", ",", "type", "=", "float", ",", "default", "=", "0.5", ")", "\n", "parser", ".", "add_argument", "(", "'--reg'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--vol-reg'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--colt-coeff'", ",", "type", "=", "float", ",", "default", "=", "0", ")", "\n", "parser", ".", "add_argument", "(", "'--xiao_reg'", ",", "action", "=", "\"store_true\"", ")", "\n", "parser", ".", "add_argument", "(", "'--xiao_coeff'", ",", "type", "=", "float", ",", "default", "=", "1e-5", ")", "\n", "parser", ".", "add_argument", "(", "'--l1_coeff'", ",", "type", "=", "float", ",", "default", "=", "1e-5", ")", "\n", "parser", ".", "add_argument", "(", "'--min-eps-reg'", ",", "type", "=", "float", ",", "default", "=", "1e-6", ")", "\n", "parser", ".", "add_argument", "(", "'--tol'", ",", "type", "=", "float", ",", "default", "=", "0.5", ")", "\n", "parser", ".", "add_argument", "(", "'--num-reg-epochs'", ",", "type", "=", "int", ",", "default", "=", "0", ")", "\n", "parser", ".", "add_argument", "(", "'--no-reg-dec'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--manual-init'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--init-method'", ",", "type", "=", "str", ",", "default", "=", "'ibp'", ")", "\n", "parser", ".", "add_argument", "(", "'--kaiming_init'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--no-init'", ",", "action", "=", "'store_true'", ",", "help", "=", "'No initialization'", ")", "\n", "parser", ".", "add_argument", "(", "'--length'", ",", "type", "=", "int", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.parser.add_arguments_adversarial_training": [[27, 43], ["parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument"], "function", ["None"], ["", "def", "add_arguments_adversarial_training", "(", "parser", ")", ":", "\n", "    ", "\"\"\"Add arguments for adversarial training\"\"\"", "\n", "parser", ".", "add_argument", "(", "'--pgd-relu'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--pgd-relu-w'", ",", "type", "=", "float", ",", "default", "=", "10", ",", "help", "=", "'Weight of the loss term of unstable relu neurons'", ")", "\n", "parser", ".", "add_argument", "(", "'--pgd-relu-iters'", ",", "type", "=", "int", ",", "default", "=", "7", ")", "\n", "parser", ".", "add_argument", "(", "'--pgd-relu-mask-cor'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--pgd-relu-scheduler'", ",", "type", "=", "int", ",", "default", "=", "0", ")", "\n", "parser", ".", "add_argument", "(", "'--trades-relu'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--trades-relu-w'", ",", "type", "=", "float", ",", "default", "=", "10", ",", "help", "=", "'Weight of the loss term of unstable relu neurons'", ")", "\n", "parser", ".", "add_argument", "(", "'--trades-relu-scheduler'", ",", "type", "=", "int", ",", "default", "=", "0", ")", "\n", "parser", ".", "add_argument", "(", "'--alpha'", ",", "type", "=", "float", ",", "default", "=", "10.", "/", "255", ")", "\n", "parser", ".", "add_argument", "(", "'--pgd-alpha'", ",", "type", "=", "float", ",", "default", "=", "2.", "/", "255", ")", "\n", "parser", ".", "add_argument", "(", "'--test-pgd-alpha'", ",", "type", "=", "float", ",", "default", "=", "2.", "/", "255", ")", "\n", "parser", ".", "add_argument", "(", "'--attack-iters'", ",", "type", "=", "int", ",", "default", "=", "7", ",", "help", "=", "'Attack iterations for pgd training'", ")", "\n", "parser", ".", "add_argument", "(", "'--attack-iters-eval'", ",", "type", "=", "int", ",", "default", "=", "10", ",", "help", "=", "'Attack iterations for pgd evaluation'", ")", "\n", "parser", ".", "add_argument", "(", "'--bn-eval'", ",", "action", "=", "'store_true'", ",", "help", "=", "'Use eval mode BN for adversarial attack'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.parser.add_arguments_data": [[44, 50], ["parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument"], "function", ["None"], ["", "def", "add_arguments_data", "(", "parser", ")", ":", "\n", "    ", "parser", ".", "add_argument", "(", "'--random-crop'", ",", "type", "=", "int", ",", "default", "=", "2", ")", "\n", "parser", ".", "add_argument", "(", "'--num-class'", ",", "type", "=", "int", ",", "default", "=", "10", ")", "\n", "parser", ".", "add_argument", "(", "'--no-data-aug'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--test-batch-size'", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "'--batch-size'", ",", "type", "=", "int", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.parser.add_arguments_eps": [[51, 59], ["parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument"], "function", ["None"], ["", "def", "add_arguments_eps", "(", "parser", ")", ":", "\n", "    ", "parser", ".", "add_argument", "(", "'--eps'", ",", "type", "=", "float", ")", "\n", "parser", ".", "add_argument", "(", "'--min-eps'", ",", "type", "=", "float", ",", "default", "=", "0", ")", "\n", "parser", ".", "add_argument", "(", "'--init-eps'", ",", "type", "=", "float", ")", "\n", "parser", ".", "add_argument", "(", "'--fix-eps'", ",", "action", "=", "'store_true'", ",", "help", "=", "'No epsilon scheduling'", ")", "\n", "parser", ".", "add_argument", "(", "'--scheduler_name'", ",", "type", "=", "str", ",", "default", "=", "'SmoothedScheduler'", ")", "\n", "parser", ".", "add_argument", "(", "'--scheduler_opts'", ",", "type", "=", "str", ",", "default", "=", "'start=2,length=80'", ")", "\n", "parser", ".", "add_argument", "(", "'--train-eps-mul'", ",", "type", "=", "float", ",", "default", "=", "1.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.parser.add_arguments_opt": [[60, 69], ["parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument"], "function", ["None"], ["", "def", "add_arguments_opt", "(", "parser", ")", ":", "\n", "    ", "parser", ".", "add_argument", "(", "'--lr'", ",", "type", "=", "float", ",", "default", "=", "5e-4", ")", "\n", "parser", ".", "add_argument", "(", "'--lr-decay-factor'", ",", "type", "=", "float", ",", "default", "=", "0.2", ")", "\n", "parser", ".", "add_argument", "(", "'--lr-decay-milestones'", ",", "type", "=", "str", ",", "default", "=", "'10000'", ")", "\n", "parser", ".", "add_argument", "(", "'--opt'", ",", "type", "=", "str", ",", "default", "=", "'Adam'", ")", "\n", "parser", ".", "add_argument", "(", "'--momentum'", ",", "type", "=", "float", ",", "default", "=", "0.9", ",", "help", "=", "\"Momentum for SGD\"", ")", "\n", "parser", ".", "add_argument", "(", "'--grad-norm'", ",", "type", "=", "float", ",", "default", "=", "10.0", ")", "\n", "parser", ".", "add_argument", "(", "'--weight-decay'", ",", "'--wd'", ",", "type", "=", "float", ",", "default", "=", "0", ")", "\n", "parser", ".", "add_argument", "(", "'--grad-acc-steps'", ",", "type", "=", "int", ",", "default", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.parser.add_arguments_objective": [[70, 73], ["parser.add_argument", "parser.add_argument"], "function", ["None"], ["", "def", "add_arguments_objective", "(", "parser", ")", ":", "\n", "    ", "parser", ".", "add_argument", "(", "'--loss'", ",", "type", "=", "str", ",", "default", "=", "'ce'", ")", "\n", "parser", ".", "add_argument", "(", "'--ls'", ",", "type", "=", "float", ",", "default", "=", "0.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.parser.override_neurips2021": [[74, 126], ["print", "print", "args.scheduler_opts.split", "int", "int", "ValueError", "int.split", "int.split"], "function", ["None"], ["", "def", "override_neurips2021", "(", "args", ")", ":", "\n", "# Rename for compatibility", "\n", "    ", "if", "args", ".", "method", "==", "'default'", ":", "\n", "        ", "args", ".", "method", "=", "'vanilla'", "\n", "", "elif", "args", ".", "method", "==", "'reg'", ":", "\n", "        ", "args", ".", "method", "=", "'fast'", "\n", "\n", "# Override arguments depending on `method`", "\n", "", "if", "args", ".", "method", "==", "'reg-only'", "or", "args", ".", "method", "==", "'fast'", "and", "args", ".", "no_init", ":", "\n", "        ", "args", ".", "reg", "=", "True", "\n", "", "elif", "args", ".", "method", "==", "'fast'", ":", "\n", "        ", "args", ".", "reg", "=", "args", ".", "manual_init", "=", "True", "\n", "", "elif", "args", ".", "method", "==", "'manual'", ":", "\n", "        ", "args", ".", "manual_init", "=", "True", "\n", "", "elif", "args", ".", "method", "==", "'crown-ibp'", ":", "\n", "        ", "args", ".", "bound_type", "=", "'CROWN-IBP'", "\n", "# Enable loss fusion by default", "\n", "if", "not", "args", ".", "no_loss_fusion", ":", "\n", "            ", "args", ".", "loss_fusion", "=", "True", "\n", "", "", "elif", "args", ".", "method", "==", "'xiao_reg'", ":", "\n", "        ", "args", ".", "xiao_reg", "=", "True", "\n", "", "elif", "args", ".", "method", "==", "'crown'", ":", "\n", "        ", "args", ".", "bound_type", "=", "'CROWN'", "\n", "", "elif", "args", ".", "method", "in", "[", "'pgd'", ",", "'fgsm'", ",", "'trades'", "]", ":", "\n", "        ", "args", ".", "mode", "=", "'adv'", "\n", "\n", "", "print", "(", "'Regularizer:'", ",", "args", ".", "reg", ")", "\n", "print", "(", "'Manual initialization:'", ",", "args", ".", "manual_init", ")", "\n", "\n", "if", "args", ".", "mode", "==", "'adv'", ":", "\n", "        ", "args", ".", "fix_eps", "=", "True", "\n", "args", ".", "scheduler_opts", "=", "'start=1,length=0'", "\n", "args", ".", "scheduler_name", "=", "'LinearScheduler'", "\n", "\n", "", "if", "args", ".", "length", ":", "\n", "        ", "if", "args", ".", "length", "==", "20", ":", "\n", "            ", "args", ".", "scheduler_opts", "=", "'start=2,length=20'", "\n", "args", ".", "lr_decay_milestones", "=", "'50,60'", "\n", "args", ".", "num_epochs", "=", "70", "\n", "", "elif", "args", ".", "length", "==", "80", ":", "\n", "            ", "args", ".", "scheduler_opts", "=", "'start=2,length=80'", "\n", "args", ".", "lr_decay_milestones", "=", "'120,140'", "\n", "args", ".", "num_epochs", "=", "160", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'Unknown length {}'", ".", "format", "(", "args", ".", "length", ")", ")", "\n", "\n", "", "", "if", "args", ".", "reg", ":", "\n", "# Overridde the legacy num_reg_epochs ", "\n", "        ", "start", ",", "length", "=", "args", ".", "scheduler_opts", ".", "split", "(", "','", ")", "\n", "start", "=", "int", "(", "start", ".", "split", "(", "'='", ")", "[", "1", "]", ")", "\n", "length", "=", "int", "(", "length", ".", "split", "(", "'='", ")", "[", "1", "]", ")", "\n", "args", ".", "num_reg_epochs", "=", "start", "+", "length", "-", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.parser.parse_args": [[127, 169], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "parser.add_arguments_data", "parser.add_arguments_eps", "parser.add_arguments_opt", "parser.add_arguments_objective", "parser.add_arguments_adversarial_training", "parser.add_arguments_regularizers_and_init", "parser.add_arguments_lipschitz", "argparse.ArgumentParser.parse_args", "parser.override_neurips2021"], "function", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.parser.add_arguments_data", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.parser.add_arguments_eps", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.parser.add_arguments_opt", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.parser.add_arguments_objective", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.parser.add_arguments_adversarial_training", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.parser.add_arguments_regularizers_and_init", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.parser.add_arguments_lipschitz", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.parser.parse_args", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.parser.override_neurips2021"], ["", "", "def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--debug'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--verify'", ",", "'--infer'", ",", "action", "=", "'store_true'", ",", "help", "=", "'verification mode, do not train'", ")", "\n", "parser", ".", "add_argument", "(", "'--load'", ",", "type", "=", "str", ",", "default", "=", "''", ",", "help", "=", "'Load reged model'", ")", "\n", "parser", ".", "add_argument", "(", "'--config'", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "'--device'", ",", "type", "=", "str", ",", "default", "=", "'cuda'", ",", "choices", "=", "[", "'cpu'", ",", "'cuda'", "]", ",", "help", "=", "'use cpu or cuda'", ")", "\n", "parser", ".", "add_argument", "(", "'--log-interval'", ",", "type", "=", "int", ",", "default", "=", "1000", ")", "\n", "parser", ".", "add_argument", "(", "'--seed'", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "'--dir'", ",", "type", "=", "str", ",", "default", "=", "'model'", ")", "\n", "parser", ".", "add_argument", "(", "'--model'", ",", "type", "=", "str", ",", "default", "=", "'cnn'", ")", "\n", "parser", ".", "add_argument", "(", "'--loss-fusion'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--num-epochs'", ",", "type", "=", "int", ",", "default", "=", "160", ")", "\n", "parser", ".", "add_argument", "(", "'--auto-load'", ",", "action", "=", "'store_true'", ",", "help", "=", "'Automatically load the latest checkpoint in the directory without specifying the checkpoint file'", ")", "\n", "parser", ".", "add_argument", "(", "'--method'", ",", "type", "=", "str", ",", "default", "=", "None", ",", "\n", "choices", "=", "[", "'vanilla'", ",", "'fast'", ",", "'crown-ibp'", ",", "'crown'", ",", "\n", "'default'", ",", "'manual'", ",", "'reg'", ",", "'xiao_reg'", ",", "'pgd'", ",", "'fgsm'", ",", "'trades'", "]", ")", "\n", "parser", ".", "add_argument", "(", "'--test-interval'", ",", "type", "=", "int", ",", "default", "=", "1", ")", "\n", "parser", ".", "add_argument", "(", "'--plot'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--bound-type'", ",", "type", "=", "str", ",", "default", "=", "'IBP'", ",", "choices", "=", "[", "'IBP'", ",", "'CROWN-IBP'", "]", ")", "\n", "parser", ".", "add_argument", "(", "'--natural'", ",", "action", "=", "'store_true'", ",", "help", "=", "'Natural training'", ")", "\n", "parser", ".", "add_argument", "(", "'--check-nan'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--w-scale-cls'", ",", "type", "=", "float", ",", "default", "=", "100", ",", "help", "=", "'Weight scaling for the classification layer'", ")", "\n", "parser", ".", "add_argument", "(", "'--multi-gpu'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--no-loss-fusion'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--save-all'", ",", "action", "=", "'store_true'", ",", "help", "=", "'Save all the checkpoints'", ")", "\n", "parser", ".", "add_argument", "(", "'--model-params'", ",", "type", "=", "str", ",", "default", "=", "''", ")", "\n", "parser", ".", "add_argument", "(", "'--mode'", ",", "type", "=", "str", ",", "default", "=", "'cert'", ",", "choices", "=", "[", "'cert'", ",", "'adv'", ",", "'natural'", "]", ")", "\n", "parser", ".", "add_argument", "(", "'--eval'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--complete'", ",", "action", "=", "'store_true'", ",", "help", "=", "'Complete verification or approximately complete PGD'", ")", "\n", "\n", "add_arguments_data", "(", "parser", ")", "\n", "add_arguments_eps", "(", "parser", ")", "\n", "add_arguments_opt", "(", "parser", ")", "\n", "add_arguments_objective", "(", "parser", ")", "\n", "add_arguments_adversarial_training", "(", "parser", ")", "\n", "add_arguments_regularizers_and_init", "(", "parser", ")", "\n", "add_arguments_lipschitz", "(", "parser", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "override_neurips2021", "(", "args", ")", "\n", "\n", "return", "args", "", "", ""]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.train.Train": [[32, 146], ["auto_LiRPA.utils.MultiAverageMeter", "enumerate", "logger.info", "utils.update_log_writer", "model_ori.train", "model.train", "eps_scheduler.train", "eps_scheduler.step_epoch", "model_ori.eval", "model.eval", "eps_scheduler.eval", "time.time", "eps_scheduler.step_batch", "eps_scheduler.get_eps", "range", "auto_LiRPA.utils.MultiAverageMeter.update", "auto_LiRPA.utils.MultiAverageMeter.update", "auto_LiRPA.utils.MultiAverageMeter.update", "utils.update_log_reg", "data_min.cuda", "data_max.cuda", "std.cuda", "eps_scheduler.get_max_eps", "utils.update_meter", "auto_LiRPA.utils.MultiAverageMeter.update", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "auto_LiRPA.utils.MultiAverageMeter.update", "opt.step", "opt.zero_grad", "utils.get_weight_norm", "logger.info", "eps_scheduler.get_eps", "len", "data.cuda().detach().requires_grad_", "labels.cuda", "certified.cert", "data.size", "regularization.compute_reg", "torch.tensor().to.item", "data.size", "torch.tensor().to.backward", "model_ori.parameters", "time.time", "print", "pdb.set_trace", "adversarial.adv", "model.parameters", "len", "data.cuda().detach", "regularization.compute_stab_reg", "regularization.compute_L1_reg", "regularization.compute_vol_reg", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "pdb.set_trace", "torch.save", "torch.save", "torch.save", "pdb.set_trace", "data.cuda", "torch.tensor", "torch.tensor", "torch.tensor", "torch.isnan", "torch.isnan", "torch.isnan"], "function", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.update_log_writer", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.update_log_reg", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.update_meter", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.get_weight_norm", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.certified.cert", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.regularization.compute_reg", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.adversarial.adv", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.regularization.compute_stab_reg", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.regularization.compute_L1_reg", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.regularization.compute_vol_reg", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.save", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.save", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.save"], ["def", "Train", "(", "model", ",", "model_ori", ",", "t", ",", "loader", ",", "eps_scheduler", ",", "opt", ",", "loss_fusion", "=", "False", ",", "valid", "=", "False", ")", ":", "\n", "    ", "train", "=", "opt", "is", "not", "None", "\n", "meter", "=", "MultiAverageMeter", "(", ")", "\n", "meter_layer", "=", "[", "]", "\n", "\n", "data_max", ",", "data_min", ",", "std", "=", "loader", ".", "data_max", ",", "loader", ".", "data_min", ",", "loader", ".", "std", "\n", "if", "args", ".", "device", "==", "'cuda'", ":", "\n", "        ", "data_min", ",", "data_max", ",", "std", "=", "data_min", ".", "cuda", "(", ")", ",", "data_max", ".", "cuda", "(", ")", ",", "std", ".", "cuda", "(", ")", "\n", "\n", "", "if", "train", ":", "\n", "        ", "model_ori", ".", "train", "(", ")", ";", "model", ".", "train", "(", ")", ";", "eps_scheduler", ".", "train", "(", ")", "\n", "eps_scheduler", ".", "step_epoch", "(", ")", "\n", "", "else", ":", "\n", "        ", "model_ori", ".", "eval", "(", ")", ";", "model", ".", "eval", "(", ")", ";", "eps_scheduler", ".", "eval", "(", ")", "\n", "\n", "", "for", "i", ",", "(", "data", ",", "labels", ")", "in", "enumerate", "(", "loader", ")", ":", "\n", "        ", "start", "=", "time", ".", "time", "(", ")", "\n", "eps_scheduler", ".", "step_batch", "(", ")", "\n", "eps", "=", "eps_scheduler", ".", "get_eps", "(", ")", "\n", "epoch_progress", "=", "(", "i", "+", "1", ")", "*", "1.", "/", "len", "(", "loader", ")", "if", "train", "else", "1.0", "\n", "\n", "if", "train", ":", "\n", "            ", "eps", "*=", "args", ".", "train_eps_mul", "\n", "", "if", "eps", "<", "args", ".", "min_eps", ":", "\n", "            ", "eps", "=", "args", ".", "min_eps", "\n", "", "if", "args", ".", "fix_eps", ":", "\n", "            ", "eps", "=", "eps_scheduler", ".", "get_max_eps", "(", ")", "\n", "", "if", "args", ".", "natural", ":", "\n", "            ", "eps", "=", "0.", "\n", "\n", "", "reg", "=", "t", "<=", "args", ".", "num_reg_epochs", "\n", "\n", "# For small eps just use natural training, no need to compute LiRPA bounds", "\n", "batch_method", "=", "'natural'", "if", "(", "eps", "<", "1e-50", ")", "else", "'robust'", "\n", "robust", "=", "batch_method", "==", "'robust'", "\n", "\n", "# labels = labels.to(torch.long)", "\n", "if", "args", ".", "device", "==", "'cuda'", ":", "\n", "            ", "data", ",", "labels", "=", "data", ".", "cuda", "(", ")", ".", "detach", "(", ")", ".", "requires_grad_", "(", ")", ",", "labels", ".", "cuda", "(", ")", "\n", "\n", "", "data_batch", ",", "labels_batch", "=", "data", ",", "labels", "\n", "grad_acc", "=", "args", ".", "grad_acc_steps", "\n", "assert", "data", ".", "shape", "[", "0", "]", "%", "grad_acc", "==", "0", "\n", "bsz", "=", "data", ".", "shape", "[", "0", "]", "//", "grad_acc", "\n", "\n", "for", "k", "in", "range", "(", "grad_acc", ")", ":", "\n", "            ", "if", "grad_acc", ">", "1", ":", "\n", "                ", "data", ",", "labels", "=", "data_batch", "[", "bsz", "*", "k", ":", "bsz", "*", "(", "k", "+", "1", ")", "]", ",", "labels_batch", "[", "bsz", "*", "k", ":", "bsz", "*", "(", "k", "+", "1", ")", "]", "\n", "\n", "", "if", "args", ".", "mode", "==", "'cert'", ":", "\n", "                ", "regular_ce", ",", "robust_loss", ",", "regular_err", ",", "robust_err", "=", "cert", "(", "\n", "args", ",", "model", ",", "model_ori", ",", "t", ",", "epoch_progress", ",", "data", ",", "labels", ",", "eps", "=", "eps", ",", "\n", "data_max", "=", "data_max", ",", "data_min", "=", "data_min", ",", "std", "=", "std", ",", "robust", "=", "robust", ",", "reg", "=", "reg", ",", "\n", "loss_fusion", "=", "loss_fusion", ",", "eps_scheduler", "=", "eps_scheduler", ",", "\n", "train", "=", "train", ",", "meter", "=", "meter", ")", "\n", "", "elif", "args", ".", "mode", "==", "'adv'", ":", "\n", "                ", "method", "=", "args", ".", "method", "if", "train", "else", "'pgd'", "\n", "regular_ce", ",", "robust_loss", ",", "regular_err", ",", "robust_err", "=", "adv", "(", "\n", "args", ",", "model", ",", "model_ori", ",", "t", ",", "epoch_progress", ",", "data", ",", "labels", ",", "eps", "=", "eps", ",", "\n", "data_max", "=", "data_max", ",", "data_min", "=", "data_min", ",", "std", "=", "std", ",", "train", "=", "train", ",", "meter", "=", "meter", ")", "\n", "", "else", ":", "\n", "                ", "raise", "NotImplementedError", "\n", "", "update_meter", "(", "meter", ",", "regular_ce", ",", "robust_loss", ",", "regular_err", ",", "robust_err", ",", "data", ".", "size", "(", "0", ")", ")", "\n", "\n", "if", "reg", ":", "\n", "                ", "loss", "=", "compute_reg", "(", "args", ",", "model", ",", "meter", ",", "eps", ",", "eps_scheduler", ")", "\n", "", "elif", "args", ".", "xiao_reg", ":", "\n", "                ", "loss", "=", "compute_stab_reg", "(", "args", ",", "model", ",", "meter", ",", "eps", ",", "eps_scheduler", ")", "+", "compute_L1_reg", "(", "args", ",", "model_ori", ",", "meter", ",", "eps", ",", "eps_scheduler", ")", "\n", "", "elif", "args", ".", "vol_reg", ":", "# by colt", "\n", "                ", "loss", "=", "compute_vol_reg", "(", "args", ",", "model", ",", "meter", ",", "eps", ",", "eps_scheduler", ")", "\n", "", "else", ":", "\n", "                ", "loss", "=", "torch", ".", "tensor", "(", "0.", ")", ".", "to", "(", "args", ".", "device", ")", "\n", "", "if", "robust", ":", "\n", "                ", "loss", "+=", "robust_loss", "\n", "", "else", ":", "\n", "                ", "loss", "+=", "regular_ce", "\n", "", "meter", ".", "update", "(", "'Loss'", ",", "loss", ".", "item", "(", ")", ",", "data", ".", "size", "(", "0", ")", ")", "\n", "\n", "if", "train", ":", "\n", "                ", "loss", "/=", "grad_acc", "\n", "loss", ".", "backward", "(", ")", "\n", "\n", "if", "args", ".", "check_nan", ":", "\n", "                    ", "for", "p", "in", "model", ".", "parameters", "(", ")", ":", "\n", "                        ", "if", "torch", ".", "isnan", "(", "p", ".", "grad", ")", ".", "any", "(", ")", ":", "\n", "                            ", "pdb", ".", "set_trace", "(", ")", "\n", "ckpt", "=", "{", "'model_ori'", ":", "model_ori", ",", "'args_cert'", ":", "(", "t", ",", "epoch_progress", ",", "data", ",", "labels", ",", "eps", ",", "data_max", ",", "data_min", ",", "std", ",", "robust", ",", "reg", ",", "loss_fusion", ",", "eps_scheduler", ",", "train", ",", "meter", ")", "}", "\n", "torch", ".", "save", "(", "ckpt", ",", "'nan_ckpt'", ")", "\n", "pdb", ".", "set_trace", "(", ")", "\n", "\n", "", "", "", "", "", "if", "train", ":", "\n", "            ", "grad_norm", "=", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "model_ori", ".", "parameters", "(", ")", ",", "max_norm", "=", "args", ".", "grad_norm", ")", "\n", "meter", ".", "update", "(", "'grad_norm'", ",", "grad_norm", ")", "\n", "opt", ".", "step", "(", ")", "\n", "opt", ".", "zero_grad", "(", ")", "\n", "\n", "", "meter", ".", "update", "(", "'wnorm'", ",", "get_weight_norm", "(", "model_ori", ")", ")", "\n", "meter", ".", "update", "(", "'Time'", ",", "time", ".", "time", "(", ")", "-", "start", ")", "\n", "\n", "if", "(", "i", "+", "1", ")", "%", "args", ".", "log_interval", "==", "0", "and", "(", "train", "or", "args", ".", "eval", "or", "args", ".", "verify", ")", ":", "\n", "            ", "logger", ".", "info", "(", "'[{:2d}:{:4d}/{:4d}]: eps={:.8f} {}'", ".", "format", "(", "t", ",", "i", "+", "1", ",", "len", "(", "loader", ")", ",", "eps", ",", "meter", ")", ")", "\n", "if", "args", ".", "debug", ":", "\n", "                ", "print", "(", ")", "\n", "pdb", ".", "set_trace", "(", ")", "\n", "", "", "", "logger", ".", "info", "(", "'[{:2d}]: eps={:.8f} {}'", ".", "format", "(", "t", ",", "eps", ",", "meter", ")", ")", "\n", "\n", "if", "batch_method", "!=", "'natural'", ":", "\n", "        ", "meter", ".", "update", "(", "'eps'", ",", "eps_scheduler", ".", "get_eps", "(", ")", ")", "\n", "\n", "", "if", "t", "<=", "args", ".", "num_reg_epochs", ":", "\n", "        ", "update_log_reg", "(", "writer", ",", "meter", ",", "t", ",", "train", ",", "model", ")", "\n", "", "update_log_writer", "(", "args", ",", "writer", ",", "meter", ",", "t", ",", "train", ",", "robust", "=", "(", "batch_method", "!=", "'natural'", ")", ")", "\n", "\n", "return", "meter", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.train.main": [[147, 230], ["config.load_config", "logger.info", "utils.set_seed", "utils.prepare_model", "logger.info", "datasets.load_data", "model_ori.train", "auto_LiRPA.BoundedModule", "model_ori.to", "logger.info", "utils.get_optimizer", "utils.get_eps_scheduler", "utils.get_lr_scheduler", "auto_LiRPA.BoundedModule", "list", "list", "NotImplementedError", "auto_LiRPA.BoundDataParallel", "auto_LiRPA.BoundDataParallel", "utils.get_eps_scheduler.train", "range", "logger.info", "train.Train", "logger.info", "range", "json.dumps", "str", "manual_init.manual_init", "manual_init.kaiming_init", "auto_LiRPA.CrossEntropyWrapper", "auto_LiRPA.BoundDataParallel.parameters", "model_ori.parameters", "utils.get_lr_scheduler.step", "utils.get_eps_scheduler.step_epoch", "logger.info", "time.time", "utils.update_state_dict", "utils.get_lr_scheduler.step", "logger.info", "utils.save", "dummy_input.cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "utils.get_bound_opts_lf", "train.Train", "train.Train", "time.time", "logger.info", "utils.get_lr_scheduler.get_last_lr", "torch.no_grad", "torch.no_grad", "torch.no_grad", "train.Train", "utils.get_eps_scheduler.get_eps", "utils.get_eps_scheduler.get_max_eps", "logger.info", "torch.zeros", "torch.zeros", "torch.zeros", "Train.avg", "Train.avg", "Train.avg"], "function", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.config.load_config", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.set_seed", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.prepare_model", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.ImageNet64.imagenet_data_loader.DatasetDownsampledImageNet.load_data", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.get_optimizer", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.get_eps_scheduler", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.get_lr_scheduler", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.train.Train", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.manual_init.manual_init", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.manual_init.kaiming_init", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.update_state_dict", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.save", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.get_bound_opts_lf", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.train.Train", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.train.Train", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.train.Train"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "config", "=", "load_config", "(", "args", ".", "config", ")", "\n", "logger", ".", "info", "(", "'config: {}'", ".", "format", "(", "json", ".", "dumps", "(", "config", ")", ")", ")", "\n", "set_seed", "(", "args", ".", "seed", "or", "config", "[", "'seed'", "]", ")", "\n", "model_ori", ",", "checkpoint", ",", "epoch", ",", "best", "=", "prepare_model", "(", "args", ",", "logger", ",", "config", ")", "\n", "logger", ".", "info", "(", "'Model structure: \\n {}'", ".", "format", "(", "str", "(", "model_ori", ")", ")", ")", "\n", "\n", "custom_ops", "=", "{", "}", "\n", "bound_config", "=", "config", "[", "'bound_params'", "]", "\n", "batch_size", "=", "(", "args", ".", "batch_size", "or", "config", "[", "'batch_size'", "]", ")", "\n", "test_batch_size", "=", "args", ".", "test_batch_size", "or", "batch_size", "\n", "dummy_input", ",", "train_data", ",", "test_data", "=", "load_data", "(", "\n", "args", ",", "config", "[", "'data'", "]", ",", "batch_size", ",", "test_batch_size", ",", "aug", "=", "not", "args", ".", "no_data_aug", ")", "\n", "lf", "=", "args", ".", "loss_fusion", "and", "args", ".", "bound_type", "==", "'CROWN-IBP'", "\n", "bound_opts", "=", "bound_config", "[", "'bound_opts'", "]", "\n", "\n", "model_ori", ".", "train", "(", ")", "\n", "model", "=", "BoundedModule", "(", "model_ori", ",", "dummy_input", ",", "bound_opts", "=", "bound_opts", ",", "custom_ops", "=", "custom_ops", ",", "device", "=", "args", ".", "device", ")", "\n", "model_ori", ".", "to", "(", "args", ".", "device", ")", "\n", "\n", "if", "checkpoint", "is", "None", ":", "\n", "        ", "if", "args", ".", "manual_init", ":", "\n", "            ", "manual_init", "(", "args", ",", "model_ori", ",", "model", ",", "train_data", ")", "\n", "", "if", "args", ".", "kaiming_init", ":", "\n", "            ", "kaiming_init", "(", "model_ori", ")", "\n", "\n", "", "", "if", "lf", ":", "\n", "        ", "model_loss", "=", "BoundedModule", "(", "\n", "CrossEntropyWrapper", "(", "model_ori", ")", ",", "\n", "(", "dummy_input", ".", "cuda", "(", ")", ",", "torch", ".", "zeros", "(", "1", ",", "dtype", "=", "torch", ".", "long", ")", ".", "cuda", "(", ")", ")", ",", "\n", "bound_opts", "=", "get_bound_opts_lf", "(", "bound_opts", ")", ",", "device", "=", "args", ".", "device", ")", "\n", "params", "=", "list", "(", "model_loss", ".", "parameters", "(", ")", ")", "\n", "", "else", ":", "\n", "        ", "model_loss", "=", "model", "\n", "params", "=", "list", "(", "model_ori", ".", "parameters", "(", ")", ")", "\n", "", "logger", ".", "info", "(", "'Parameter shapes: {}'", ".", "format", "(", "[", "p", ".", "shape", "for", "p", "in", "params", "]", ")", ")", "\n", "if", "args", ".", "multi_gpu", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Multi-GPU is not supported yet'", ")", "\n", "model", "=", "BoundDataParallel", "(", "model", ")", "\n", "model_loss", "=", "BoundDataParallel", "(", "model_loss", ")", "\n", "\n", "", "opt", "=", "get_optimizer", "(", "args", ",", "params", ",", "checkpoint", ")", "\n", "max_eps", "=", "args", ".", "eps", "or", "bound_config", "[", "'eps'", "]", "\n", "eps_scheduler", "=", "get_eps_scheduler", "(", "args", ",", "max_eps", ",", "train_data", ")", "\n", "lr_scheduler", "=", "get_lr_scheduler", "(", "args", ",", "opt", ")", "\n", "if", "epoch", ">", "0", "and", "not", "args", ".", "plot", ":", "\n", "# skip epochs", "\n", "        ", "eps_scheduler", ".", "train", "(", ")", "\n", "for", "i", "in", "range", "(", "epoch", ")", ":", "\n", "# FIXME Can use `last_epoch` argument of lr_scheduler", "\n", "            ", "lr_scheduler", ".", "step", "(", ")", "\n", "eps_scheduler", ".", "step_epoch", "(", "verbose", "=", "False", ")", "\n", "\n", "", "", "if", "args", ".", "verify", ":", "\n", "        ", "logger", ".", "info", "(", "'Inference'", ")", "\n", "meter", "=", "Train", "(", "model", ",", "model_ori", ",", "10000", ",", "test_data", ",", "eps_scheduler", ",", "None", ",", "loss_fusion", "=", "False", ")", "\n", "logger", ".", "info", "(", "meter", ")", "\n", "", "else", ":", "\n", "        ", "timer", "=", "0.0", "\n", "for", "t", "in", "range", "(", "epoch", "+", "1", ",", "args", ".", "num_epochs", "+", "1", ")", ":", "\n", "            ", "logger", ".", "info", "(", "'Epoch {}, learning rate {}, dir {}'", ".", "format", "(", "\n", "t", ",", "lr_scheduler", ".", "get_last_lr", "(", ")", ",", "args", ".", "dir", ")", ")", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "if", "lf", ":", "\n", "                ", "Train", "(", "model_loss", ",", "model_ori", ",", "t", ",", "train_data", ",", "eps_scheduler", ",", "opt", ",", "loss_fusion", "=", "True", ")", "\n", "", "else", ":", "\n", "                ", "Train", "(", "model", ",", "model_ori", ",", "t", ",", "train_data", ",", "eps_scheduler", ",", "opt", ")", "\n", "", "update_state_dict", "(", "model_ori", ",", "model_loss", ")", "\n", "epoch_time", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "timer", "+=", "epoch_time", "\n", "lr_scheduler", ".", "step", "(", ")", "\n", "logger", ".", "info", "(", "'Epoch time: {:.4f}, Total time: {:.4f}'", ".", "format", "(", "epoch_time", ",", "timer", ")", ")", "\n", "is_best", "=", "False", "\n", "if", "t", "%", "args", ".", "test_interval", "==", "0", ":", "\n", "                ", "logger", ".", "info", "(", "'Test without loss fusion'", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "meter", "=", "Train", "(", "model", ",", "model_ori", ",", "t", ",", "test_data", ",", "eps_scheduler", ",", "None", ",", "loss_fusion", "=", "False", ")", "\n", "", "if", "eps_scheduler", ".", "get_eps", "(", ")", "==", "eps_scheduler", ".", "get_max_eps", "(", ")", ":", "\n", "                    ", "if", "meter", ".", "avg", "(", "'Rob_Err'", ")", "<", "best", "[", "1", "]", ":", "\n", "                        ", "is_best", ",", "best", "=", "True", ",", "(", "meter", ".", "avg", "(", "'Err'", ")", ",", "meter", ".", "avg", "(", "'Rob_Err'", ")", ",", "t", ")", "\n", "", "logger", ".", "info", "(", "'Best epoch {}, error {:.4f}, robust error {:.4f}'", ".", "format", "(", "\n", "best", "[", "-", "1", "]", ",", "best", "[", "0", "]", ",", "best", "[", "1", "]", ")", ")", "\n", "", "", "save", "(", "args", ",", "epoch", "=", "t", ",", "best", "=", "best", ",", "model", "=", "model_ori", ",", "opt", "=", "opt", ",", "is_best", "=", "is_best", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.adversarial.init_delta": [[13, 19], ["torch.zeros_like", "torch.zeros_like", "range", "utils.clamp", "len", "delta[].uniform_", "[].item", "[].item"], "function", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.clamp"], ["def", "init_delta", "(", "X", ",", "epsilon", ",", "data_min", ",", "data_max", ")", ":", "\n", "    ", "delta", "=", "torch", ".", "zeros_like", "(", "X", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "epsilon", ")", ")", ":", "\n", "        ", "delta", "[", ":", ",", "i", ",", ":", ",", ":", "]", ".", "uniform_", "(", "-", "epsilon", "[", "i", "]", "[", "0", "]", "[", "0", "]", ".", "item", "(", ")", ",", "epsilon", "[", "i", "]", "[", "0", "]", "[", "0", "]", ".", "item", "(", ")", ")", "\n", "", "delta", ".", "data", "=", "clamp", "(", "delta", ",", "data_min", "-", "X", ",", "data_max", "-", "X", ")", "\n", "return", "delta", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.adversarial.fgsm": [[20, 41], ["adversarial.init_delta", "delta.detach.detach", "model", "criterion", "model.eval", "torch.enable_grad", "torch.enable_grad", "model", "F.cross_entropy", "[].detach", "utils.clamp", "utils.clamp", "delta.detach.detach", "model", "criterion", "model.train", "X.size", "torch.autograd.grad", "torch.autograd.grad", "torch.sign", "torch.sign", "X.size", "X.size", "X.size"], "function", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.adversarial.init_delta", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.clamp", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.clamp"], ["", "def", "fgsm", "(", "args", ",", "model_bound", ",", "model", ",", "epoch", ",", "epoch_progress", ",", "\n", "X", ",", "y", ",", "data_min", ",", "data_max", ",", "epsilon", ",", "alpha", ",", "train", ",", "meter", ")", ":", "\n", "    ", "delta", "=", "init_delta", "(", "X", ",", "epsilon", ",", "data_min", ",", "data_max", ")", "\n", "if", "args", ".", "bn_eval", ":", "\n", "        ", "model", ".", "eval", "(", ")", "\n", "", "with", "torch", ".", "enable_grad", "(", ")", ":", "\n", "        ", "delta", ".", "requires_grad", "=", "True", "\n", "output", "=", "model", "(", "X", "+", "delta", "[", ":", "X", ".", "size", "(", "0", ")", "]", ")", "\n", "loss", "=", "F", ".", "cross_entropy", "(", "output", ",", "y", ")", "\n", "grad", "=", "torch", ".", "autograd", ".", "grad", "(", "loss", ",", "delta", ")", "[", "0", "]", ".", "detach", "(", ")", "\n", "delta", ".", "data", "=", "clamp", "(", "delta", "+", "alpha", "*", "torch", ".", "sign", "(", "grad", ")", ",", "-", "epsilon", ",", "epsilon", ")", "\n", "delta", ".", "data", "[", ":", "X", ".", "size", "(", "0", ")", "]", "=", "clamp", "(", "delta", "[", ":", "X", ".", "size", "(", "0", ")", "]", ",", "data_min", "-", "X", ",", "data_max", "-", "X", ")", "\n", "delta", "=", "delta", ".", "detach", "(", ")", "\n", "output", "=", "model", "(", "X", "+", "delta", "[", ":", "X", ".", "size", "(", "0", ")", "]", ")", "\n", "loss", "=", "criterion", "(", "output", ",", "y", ")", "\n", "", "delta", "=", "delta", ".", "detach", "(", ")", "\n", "if", "train", ":", "\n", "        ", "model", ".", "train", "(", ")", "\n", "", "output", "=", "model", "(", "X", "+", "delta", ")", "\n", "loss", "=", "criterion", "(", "output", ",", "y", ")", "\n", "return", "loss", ",", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.adversarial.get_relus": [[42, 51], ["model_bound", "model_bound._modules.values", "isinstance", "relus.append"], "function", ["None"], ["", "def", "get_relus", "(", "model_bound", ",", "x", ")", ":", "\n", "    ", "model_bound", "(", "x", ")", "\n", "relus", "=", "[", "]", "\n", "for", "node", "in", "model_bound", ".", "_modules", ".", "values", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "node", ",", "BoundRelu", ")", ":", "\n", "            ", "fv", "=", "node", ".", "inputs", "[", "0", "]", ".", "fv", "\n", "status", "=", "fv", ">", "0", "\n", "relus", ".", "append", "(", "(", "fv", ",", "status", ")", ")", "\n", "", "", "return", "relus", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.adversarial.pgd": [[52, 80], ["adversarial.init_delta", "delta.detach.detach", "model", "criterion", "model.eval", "torch.enable_grad", "torch.enable_grad", "range", "model.train", "pgd_relu", "meter.update", "model", "criterion", "[].detach", "utils.clamp", "utils.clamp", "torch.autograd.grad", "torch.autograd.grad", "torch.sign", "torch.sign"], "function", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.adversarial.init_delta", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.clamp", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.clamp"], ["", "def", "pgd", "(", "args", ",", "model_bound", ",", "model", ",", "epoch", ",", "epoch_progress", ",", "\n", "X", ",", "y", ",", "data_min", ",", "data_max", ",", "epsilon", ",", "alpha", ",", "attack_iters", ",", "train", ",", "meter", ")", ":", "\n", "    ", "delta", "=", "init_delta", "(", "X", ",", "epsilon", ",", "data_min", ",", "data_max", ")", "\n", "if", "args", ".", "bn_eval", ":", "\n", "        ", "model", ".", "eval", "(", ")", "\n", "", "with", "torch", ".", "enable_grad", "(", ")", ":", "\n", "        ", "delta", ".", "requires_grad", "=", "True", "\n", "for", "_", "in", "range", "(", "attack_iters", ")", ":", "\n", "            ", "output", "=", "model", "(", "X", "+", "delta", ")", "\n", "loss", "=", "criterion", "(", "output", ",", "y", ")", "\n", "grad", "=", "torch", ".", "autograd", ".", "grad", "(", "loss", ",", "delta", ")", "[", "0", "]", ".", "detach", "(", ")", "\n", "delta", ".", "data", "=", "clamp", "(", "delta", "+", "alpha", "*", "torch", ".", "sign", "(", "grad", ")", ",", "-", "epsilon", ",", "epsilon", ")", "\n", "delta", ".", "data", "=", "clamp", "(", "delta", ",", "data_min", "-", "X", ",", "data_max", "-", "X", ")", "\n", "\n", "", "", "delta", "=", "delta", ".", "detach", "(", ")", "\n", "if", "train", ":", "\n", "        ", "model", ".", "train", "(", ")", "\n", "", "output", "=", "model", "(", "X", "+", "delta", ")", "\n", "loss", "=", "criterion", "(", "output", ",", "y", ")", "\n", "\n", "if", "args", ".", "pgd_relu", ":", "\n", "        ", "loss_relu", ",", "unsafe_relu", ",", "delta_relu", "=", "pgd_relu", "(", "\n", "args", ",", "model_bound", ",", "model", ",", "X", ",", "y", ",", "data_min", ",", "data_max", ",", "epsilon", ",", "\n", "alpha", ",", "attack_iters", ",", "train", ",", "meter", "=", "meter", ",", "adv_out", "=", "output", ")", "\n", "meter", ".", "update", "(", "'loss_relu'", ",", "loss_relu", ")", "\n", "loss", "+=", "loss_relu", "*", "args", ".", "pgd_relu_w", "\n", "\n", "", "return", "loss", ",", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.adversarial.trades": [[81, 154], ["len", "torch.zeros_like", "torch.zeros_like", "range", "utils.clamp", "torch.KLDivLoss", "model.eval", "adversarial.get_relus", "torch.min.requires_grad_", "model", "F.cross_entropy", "len", "delta[].uniform_", "X.detach", "torch.zeros_like.detach", "adversarial.get_relus", "range", "torch.enable_grad", "torch.enable_grad", "range", "model.train", "nn.KLDivLoss.", "adversarial.trades.get_relu_loss"], "function", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.clamp", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.adversarial.get_relus", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.adversarial.get_relus"], ["", "def", "trades", "(", "args", ",", "model_bound", ",", "model", ",", "epoch", ",", "epoch_progress", ",", "\n", "X", ",", "y", ",", "data_min", ",", "data_max", ",", "epsilon", ",", "alpha", ",", "attack_iters", ",", "train", ",", "meter", ")", ":", "\n", "    ", "beta", "=", "6.0", "\n", "batch_size", "=", "len", "(", "X", ")", "\n", "delta", "=", "torch", ".", "zeros_like", "(", "X", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "epsilon", ")", ")", ":", "\n", "        ", "delta", "[", ":", ",", "i", ",", ":", ",", ":", "]", ".", "uniform_", "(", "-", "0.001", "/", "cifar10_std", "[", "i", "]", ",", "0.001", "/", "cifar10_std", "[", "i", "]", ")", "\n", "", "delta", ".", "data", "=", "clamp", "(", "delta", ",", "data_min", "-", "X", ",", "data_max", "-", "X", ")", "\n", "x_adv", "=", "X", ".", "detach", "(", ")", "+", "delta", ".", "detach", "(", ")", "\n", "criterion_kl", "=", "nn", ".", "KLDivLoss", "(", "size_average", "=", "False", ")", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "relus_0", "=", "get_relus", "(", "model_bound", ",", "X", ")", "\n", "\n", "def", "get_relu_loss", "(", "x_adv", ",", "relus_0", ")", ":", "\n", "        ", "loss", "=", "0", "\n", "relus", "=", "get_relus", "(", "model_bound", ",", "x_adv", ")", "\n", "unsafe_count", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "relus", ")", ")", ":", "\n", "            ", "changed", "=", "relus", "[", "i", "]", "[", "1", "]", "!=", "relus_0", "[", "i", "]", "[", "1", "]", "\n", "loss", "+=", "(", "changed", ".", "int", "(", ")", "*", "(", "relus_0", "[", "i", "]", "[", "0", "]", "-", "relus", "[", "i", "]", "[", "0", "]", ")", "**", "2", ")", ".", "view", "(", "x_adv", ".", "size", "(", "0", ")", ",", "-", "1", ")", ".", "sum", "(", "dim", "=", "-", "1", ")", ".", "mean", "(", ")", "\n", "unsafe_count", "+=", "changed", ".", "int", "(", ")", ".", "sum", "(", ")", "\n", "", "unsafe_count", "=", "float", "(", "unsafe_count", ")", "/", "x_adv", ".", "size", "(", "0", ")", "\n", "return", "loss", ",", "unsafe_count", "\n", "\n", "", "with", "torch", ".", "enable_grad", "(", ")", ":", "\n", "        ", "for", "_", "in", "range", "(", "attack_iters", ")", ":", "\n", "            ", "x_adv", ".", "requires_grad_", "(", "True", ")", "\n", "loss_kl", "=", "criterion_kl", "(", "F", ".", "log_softmax", "(", "model", "(", "x_adv", ")", ",", "dim", "=", "1", ")", ",", "\n", "F", ".", "softmax", "(", "model", "(", "X", ")", ",", "dim", "=", "1", ")", ")", "\n", "loss", "=", "loss_kl", "\n", "if", "args", ".", "trades_relu", ":", "\n", "                ", "loss_relu", ",", "unsafe_count", "=", "get_relu_loss", "(", "x_adv", ",", "relus_0", ")", "\n", "loss", "+=", "loss_relu", "*", "batch_size", "\n", "", "grad", "=", "torch", ".", "autograd", ".", "grad", "(", "loss", ",", "[", "x_adv", "]", ")", "[", "0", "]", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "x_adv", "=", "x_adv", ".", "detach", "(", ")", "+", "alpha", "*", "torch", ".", "sign", "(", "grad", ".", "detach", "(", ")", ")", "\n", "x_adv", "=", "torch", ".", "min", "(", "torch", ".", "max", "(", "x_adv", ",", "X", "-", "epsilon", ")", ",", "X", "+", "epsilon", ")", "\n", "x_adv", "=", "torch", ".", "min", "(", "torch", ".", "max", "(", "x_adv", ",", "data_min", ")", ",", "data_max", ")", "\n", "", "", "", "if", "train", ":", "\n", "        ", "model", ".", "train", "(", ")", "\n", "", "x_adv", ".", "requires_grad_", "(", "False", ")", "# x_adv = Variable(x_adv, requires_grad=False)", "\n", "output", "=", "logits", "=", "model", "(", "X", ")", "\n", "loss_natural", "=", "F", ".", "cross_entropy", "(", "logits", ",", "y", ")", "\n", "loss_robust", "=", "(", "1.0", "/", "batch_size", ")", "*", "criterion_kl", "(", "F", ".", "log_softmax", "(", "model", "(", "x_adv", ")", ",", "dim", "=", "1", ")", ",", "\n", "F", ".", "softmax", "(", "model", "(", "X", ")", ",", "dim", "=", "1", ")", ")", "\n", "loss", "=", "loss_natural", "+", "beta", "*", "loss_robust", "\n", "if", "args", ".", "trades_relu", ":", "\n", "        ", "loss_relu", ",", "unsafe_count", "=", "get_relu_loss", "(", "x_adv", ",", "relus_0", ")", "\n", "relu_w", "=", "args", ".", "trades_relu_w", "\n", "if", "args", ".", "trades_relu_scheduler", ">", "0", "and", "epoch", "<=", "args", ".", "trades_relu_scheduler", ":", "\n", "            ", "w_per_epoch", "=", "args", ".", "trades_relu_w", "/", "args", ".", "trades_relu_scheduler", "\n", "relu_w", "=", "w_per_epoch", "*", "(", "epoch", "-", "1", "+", "batch", ")", "\n", "", "loss_relu", "*=", "relu_w", "\n", "loss", "+=", "loss_relu", "\n", "meter", ".", "update", "(", "'loss_relu'", ",", "loss_relu", ")", "\n", "meter", ".", "update", "(", "'unsafe_count'", ",", "unsafe_count", ")", "\n", "\n", "", "if", "args", ".", "pgd_relu", ":", "\n", "        ", "loss_relu", ",", "unsafe_relu", ",", "delta_relu", "=", "pgd_relu", "(", "\n", "args", ",", "model_bound", ",", "model", ",", "X", ",", "y", ",", "data_min", ",", "data_max", ",", "epsilon", ",", "\n", "alpha", ",", "attack_iters", ",", "train", ",", "meter", "=", "meter", ",", "adv_out", "=", "output", ")", "\n", "meter", ".", "update", "(", "'loss_relu'", ",", "loss_relu", ")", "\n", "\n", "pgd_relu_w", "=", "args", ".", "pgd_relu_w", "\n", "if", "args", ".", "pgd_relu_scheduler", ">", "0", "and", "epoch", "<=", "args", ".", "pgd_relu_scheduler", ":", "\n", "            ", "w_per_epoch", "=", "args", ".", "pgd_relu_w", "/", "args", ".", "pgd_relu_scheduler", "\n", "pgd_relu_w", "=", "w_per_epoch", "*", "(", "epoch", "-", "1", "+", "epoch_progress", ")", "\n", "", "loss_relu", "*=", "pgd_relu_w", "\n", "loss", "+=", "loss_relu", "\n", "\n", "", "return", "loss", ",", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.adversarial.adv": [[155, 189], ["std.view.view", "adversarial.pgd", "model", "ce_loss", "torch.zeros_like", "torch.zeros_like", "adversarial.trades", "adversarial.fgsm", "ValueError", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax"], "function", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.adversarial.pgd", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.adversarial.trades", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.adversarial.fgsm"], ["", "def", "adv", "(", "args", ",", "model_bound", ",", "model", ",", "epoch", ",", "epoch_progress", ",", "\n", "X", ",", "y", ",", "eps", ",", "data_max", ",", "data_min", ",", "std", ",", "meter", ",", "train", "=", "False", ")", ":", "\n", "    ", "std", "=", "std", ".", "view", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", "\n", "epsilon", "=", "eps", "/", "std", "\n", "alpha", "=", "args", ".", "alpha", "/", "std", "\n", "# FIXME hardcoded", "\n", "pgd_alpha", "=", "args", ".", "pgd_alpha", "/", "std", "if", "train", "else", "args", ".", "test_pgd_alpha", "/", "std", "\n", "attack_iters", "=", "args", ".", "attack_iters", "if", "train", "else", "args", ".", "attack_iters_eval", "\n", "method", "=", "args", ".", "method", "\n", "\n", "if", "not", "train", "or", "method", "==", "'pgd'", ":", "\n", "        ", "loss", ",", "output", "=", "pgd", "(", "args", ",", "model_bound", ",", "model", ",", "epoch", ",", "epoch_progress", ",", "\n", "X", ",", "y", ",", "data_min", ",", "data_max", ",", "epsilon", ",", "pgd_alpha", ",", "attack_iters", ",", "train", ",", "meter", ")", "\n", "", "elif", "method", "==", "'trades'", ":", "\n", "        ", "loss", ",", "output", "=", "trades", "(", "args", ",", "model_bound", ",", "model", ",", "epoch", ",", "epoch_progress", ",", "\n", "X", ",", "y", ",", "data_min", ",", "data_max", ",", "epsilon", ",", "pgd_alpha", ",", "attack_iters", ",", "train", ",", "meter", ")", "\n", "", "elif", "method", "==", "'fgsm'", ":", "\n", "        ", "loss", ",", "output", "=", "fgsm", "(", "args", ",", "model_bound", ",", "model", ",", "epoch", ",", "epoch_progress", ",", "\n", "X", ",", "y", ",", "data_min", ",", "data_max", ",", "epsilon", ",", "alpha", ",", "train", ",", "meter", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "args", ".", "method", ")", "\n", "\n", "", "acc", "=", "(", "torch", ".", "argmax", "(", "output", ",", "dim", "=", "1", ")", "==", "y", ")", ".", "float", "(", ")", ".", "mean", "(", ")", "\n", "robust_ce", "=", "loss", "\n", "robust_err", "=", "1", "-", "acc", "\n", "\n", "if", "not", "train", ":", "\n", "        ", "output", "=", "model", "(", "X", ")", "\n", "regular_ce", "=", "ce_loss", "(", "output", ",", "y", ")", "\n", "regular_err", "=", "1", "-", "(", "torch", ".", "argmax", "(", "output", ",", "dim", "=", "1", ")", "==", "y", ")", ".", "float", "(", ")", ".", "mean", "(", ")", "\n", "", "else", ":", "\n", "        ", "regular_ce", "=", "regular_err", "=", "torch", ".", "zeros_like", "(", "loss", ")", "\n", "\n", "", "return", "regular_ce", ",", "robust_ce", ",", "regular_err", ",", "robust_err", "\n", "", ""]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.manual_init.get_params": [[11, 22], ["model.named_parameters", "weights.append", "biases.append", "print"], "function", ["None"], ["def", "get_params", "(", "model", ")", ":", "\n", "    ", "weights", "=", "[", "]", "\n", "biases", "=", "[", "]", "\n", "for", "p", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "        ", "if", "'weight'", "in", "p", "[", "0", "]", ":", "\n", "            ", "weights", ".", "append", "(", "p", ")", "\n", "", "elif", "'bias'", "in", "p", "[", "0", "]", ":", "\n", "            ", "biases", ".", "append", "(", "p", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'Skipping parameter {}'", ".", "format", "(", "p", "[", "0", "]", ")", ")", "\n", "", "", "return", "weights", ",", "biases", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.manual_init.ibp_init": [[23, 39], ["manual_init.get_params", "range", "model._modules.values", "torch.nn.init._calculate_fan_in_and_fan_out", "torch.nn.init._calculate_fan_in_and_fan_out", "math.sqrt", "weight.std().item", "torch.nn.init.normal_", "torch.nn.init.normal_", "print", "len", "isinstance", "isinstance", "weight.std", "isinstance", "print", "weight.std", "len"], "function", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.manual_init.get_params"], ["", "def", "ibp_init", "(", "model_ori", ",", "model", ")", ":", "\n", "    ", "weights", ",", "biases", "=", "get_params", "(", "model_ori", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "weights", ")", "-", "1", ")", ":", "\n", "        ", "if", "weights", "[", "i", "]", "[", "1", "]", ".", "ndim", "==", "1", ":", "\n", "            ", "continue", "\n", "", "weight", "=", "weights", "[", "i", "]", "[", "1", "]", "\n", "fan_in", ",", "fan_out", "=", "torch", ".", "nn", ".", "init", ".", "_calculate_fan_in_and_fan_out", "(", "weight", ")", "\n", "std", "=", "math", ".", "sqrt", "(", "2", "*", "math", ".", "pi", "/", "(", "fan_in", "**", "2", ")", ")", "\n", "std_before", "=", "weight", ".", "std", "(", ")", ".", "item", "(", ")", "\n", "torch", ".", "nn", ".", "init", ".", "normal_", "(", "weight", ",", "mean", "=", "0", ",", "std", "=", "std", ")", "\n", "print", "(", "f'Reinitialize {weights[i][0]}, std before {std_before:.5f}, std now {weight.std():.5f}'", ")", "\n", "", "for", "node", "in", "model", ".", "_modules", ".", "values", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "node", ",", "BoundConv", ")", "or", "isinstance", "(", "node", ",", "BoundLinear", ")", ":", "\n", "            ", "if", "len", "(", "node", ".", "inputs", "[", "0", "]", ".", "inputs", ")", ">", "0", "and", "isinstance", "(", "node", ".", "inputs", "[", "0", "]", ".", "inputs", "[", "0", "]", ",", "BoundAdd", ")", ":", "\n", "                ", "print", "(", "f'Adjust weights for node {node.name} due to residual connection'", ")", "\n", "node", ".", "inputs", "[", "1", "]", ".", "param", ".", "data", "/=", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.manual_init.kaiming_init": [[40, 46], ["model.named_parameters", "p[].find", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "p[].find"], "function", ["None"], ["", "", "", "", "def", "kaiming_init", "(", "model", ")", ":", "\n", "    ", "for", "p", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "        ", "if", "p", "[", "0", "]", ".", "find", "(", "'.weight'", ")", "!=", "-", "1", ":", "\n", "            ", "if", "p", "[", "0", "]", ".", "find", "(", "'bn'", ")", "!=", "-", "1", "or", "p", "[", "1", "]", ".", "ndim", "==", "1", ":", "\n", "                ", "continue", "\n", "", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "p", "[", "1", "]", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.manual_init.orthogonal_init": [[47, 63], ["model_ori.named_parameters", "p[].std().item", "print", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "print", "print", "p[].find", "p[].abs().mean", "p[].abs().mean", "bns.append", "params.append", "p[].std", "p[].std", "p[].find", "p[].abs", "p[].abs"], "function", ["None"], ["", "", "", "def", "orthogonal_init", "(", "model", ")", ":", "\n", "    ", "params", "=", "[", "]", "\n", "bns", "=", "[", "]", "\n", "for", "p", "in", "model_ori", ".", "named_parameters", "(", ")", ":", "\n", "        ", "if", "p", "[", "0", "]", ".", "find", "(", "'.weight'", ")", "!=", "-", "1", ":", "\n", "            ", "if", "p", "[", "0", "]", ".", "find", "(", "'bn'", ")", "!=", "-", "1", "or", "p", "[", "1", "]", ".", "ndim", "==", "1", ":", "\n", "                ", "bns", ".", "append", "(", "p", ")", "\n", "", "else", ":", "\n", "                ", "params", ".", "append", "(", "p", ")", "\n", "", "", "", "for", "p", "in", "params", "[", ":", "-", "1", "]", ":", "\n", "        ", "std_before", "=", "p", "[", "1", "]", ".", "std", "(", ")", ".", "item", "(", ")", "\n", "print", "(", "'before mean abs'", ",", "p", "[", "1", "]", ".", "abs", "(", ")", ".", "mean", "(", ")", ")", "\n", "torch", ".", "nn", ".", "init", ".", "orthogonal_", "(", "p", "[", "1", "]", ")", "\n", "print", "(", "'Reinitialize {} with orthogonal matrix, std before {:.5f}, std now {:.5f}'", ".", "format", "(", "\n", "p", "[", "0", "]", ",", "std_before", ",", "p", "[", "1", "]", ".", "std", "(", ")", ")", ")", "\n", "print", "(", "'after mean abs'", ",", "p", "[", "1", "]", ".", "abs", "(", ")", ".", "mean", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.manual_init.manual_init": [[64, 76], ["manual_init.ibp_init", "manual_init.orthogonal_init", "utils.logger.info", "manual_init.kaiming_init", "ValueError"], "function", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.manual_init.ibp_init", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.manual_init.orthogonal_init", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.manual_init.kaiming_init"], ["", "", "def", "manual_init", "(", "args", ",", "model_ori", ",", "model", ",", "train_data", ",", "mode", "=", "1", ")", ":", "\n", "    ", "if", "args", ".", "init_method", "==", "'ibp'", ":", "\n", "        ", "ibp_init", "(", "model_ori", ",", "model", ")", "\n", "", "elif", "args", ".", "init_method", "==", "'orthogonal'", ":", "\n", "        ", "orthogonal_init", "(", "model_ori", ")", "\n", "", "elif", "args", ".", "init_method", "==", "'kaiming'", ":", "\n", "        ", "logger", ".", "info", "(", "'Initialization: Kaiming normal'", ")", "\n", "kaiming_init", "(", "model_ori", ")", "\n", "", "elif", "args", ".", "init_method", "==", "'identity'", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "args", ".", "init_method", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.set_file_handler": [[17, 21], ["logging.FileHandler", "logging.FileHandler.setFormatter", "auto_LiRPA.utils.logger.addHandler", "os.path.join", "logging.Formatter"], "function", ["None"], ["def", "set_file_handler", "(", "logger", ",", "dir", ")", ":", "\n", "    ", "file_handler", "=", "logging", ".", "FileHandler", "(", "os", ".", "path", ".", "join", "(", "dir", ",", "'train.log'", ")", ")", "\n", "file_handler", ".", "setFormatter", "(", "logging", ".", "Formatter", "(", "'%(levelname)-8s %(asctime)-12s %(message)s'", ")", ")", "\n", "logger", ".", "addHandler", "(", "file_handler", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.set_seed": [[22, 27], ["torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "random.seed", "numpy.random.seed"], "function", ["None"], ["", "def", "set_seed", "(", "seed", ")", ":", "\n", "    ", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "seed", ")", "\n", "random", ".", "seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.get_weight_norm": [[28, 32], ["torch.norm", "torch.norm", "torch.norm", "torch.stack", "torch.stack", "torch.stack", "torch.norm", "torch.norm", "torch.norm", "p[].detach", "model.named_parameters"], "function", ["None"], ["", "def", "get_weight_norm", "(", "model", ")", ":", "\n", "# Skip param_mean and param_std", "\n", "    ", "return", "torch", ".", "norm", "(", "torch", ".", "stack", "(", "[", "\n", "torch", ".", "norm", "(", "p", "[", "1", "]", ".", "detach", "(", ")", ")", "for", "p", "in", "model", ".", "named_parameters", "(", ")", "if", "'weight'", "in", "p", "[", "0", "]", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.get_exp_module": [[33, 39], ["bounded_module._modules.values", "isinstance"], "function", ["None"], ["", "def", "get_exp_module", "(", "bounded_module", ")", ":", "\n", "    ", "for", "node", "in", "bounded_module", ".", "_modules", ".", "values", "(", ")", ":", "\n", "# Find the Exp neuron in computational graph", "\n", "        ", "if", "isinstance", "(", "node", ",", "BoundExp", ")", ":", "\n", "            ", "return", "node", "\n", "", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.clamp": [[40, 42], ["torch.max", "torch.max", "torch.max", "torch.min", "torch.min", "torch.min"], "function", ["None"], ["", "def", "clamp", "(", "X", ",", "lower_limit", ",", "upper_limit", ")", ":", "\n", "    ", "return", "torch", ".", "max", "(", "torch", ".", "min", "(", "X", ",", "upper_limit", ")", ",", "lower_limit", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.update_state_dict": [[45, 59], ["model_loss.state_dict", "model.state_dict", "model.state_dict().keys", "model.load_state_dict", "model.state_dict", "name.startswith", "KeyError", "len"], "function", ["None"], ["def", "update_state_dict", "(", "model", ",", "model_loss", ")", ":", "\n", "    ", "state_dict_loss", "=", "model_loss", ".", "state_dict", "(", ")", "\n", "state_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "keys", "=", "model", ".", "state_dict", "(", ")", ".", "keys", "(", ")", "\n", "for", "name", "in", "state_dict_loss", ":", "\n", "        ", "v", "=", "state_dict_loss", "[", "name", "]", "\n", "for", "prefix", "in", "[", "'model.'", ",", "'/w.'", ",", "'/b.'", ",", "'/running_mean.'", "]", ":", "\n", "            ", "if", "name", ".", "startswith", "(", "prefix", ")", ":", "\n", "                ", "name", "=", "name", "[", "len", "(", "prefix", ")", ":", "]", "\n", "break", "\n", "", "", "if", "not", "name", "in", "keys", ":", "\n", "            ", "raise", "KeyError", "(", "name", ")", "\n", "", "state_dict", "[", "name", "]", "=", "v", "\n", "", "model", ".", "load_state_dict", "(", "state_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.update_meter": [[60, 68], ["meter.update", "meter.update", "meter.update", "meter.update"], "function", ["None"], ["", "def", "update_meter", "(", "meter", ",", "regular_ce", ",", "robust_loss", ",", "regular_err", ",", "robust_err", ",", "batch_size", ")", ":", "\n", "    ", "meter", ".", "update", "(", "'CE'", ",", "regular_ce", ",", "batch_size", ")", "\n", "if", "robust_loss", "is", "not", "None", ":", "\n", "        ", "meter", ".", "update", "(", "'Rob_Loss'", ",", "robust_loss", ",", "batch_size", ")", "\n", "", "if", "regular_err", "is", "not", "None", ":", "\n", "        ", "meter", ".", "update", "(", "'Err'", ",", "regular_err", ",", "batch_size", ")", "\n", "", "if", "robust_err", "is", "not", "None", ":", "\n", "        ", "meter", ".", "update", "(", "'Rob_Err'", ",", "robust_err", ",", "batch_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.update_log_writer": [[69, 83], ["writer.add_scalar", "writer.add_scalar", "writer.add_scalar", "writer.add_scalar", "meter.avg", "meter.avg", "writer.add_scalar", "writer.add_scalar", "meter.avg", "meter.avg", "writer.add_scalar", "writer.add_scalar", "writer.add_scalar", "meter.avg", "meter.avg", "meter.avg", "meter.avg", "meter.avg"], "function", ["None"], ["", "", "def", "update_log_writer", "(", "args", ",", "writer", ",", "meter", ",", "epoch", ",", "train", ",", "robust", ")", ":", "\n", "    ", "if", "train", ":", "\n", "        ", "writer", ".", "add_scalar", "(", "'loss/train'", ",", "meter", ".", "avg", "(", "\"CE\"", ")", ",", "epoch", ")", "\n", "writer", ".", "add_scalar", "(", "'err/train'", ",", "meter", ".", "avg", "(", "\"Err\"", ")", ",", "epoch", ")", "\n", "if", "robust", ":", "\n", "            ", "writer", ".", "add_scalar", "(", "'loss/robust_train'", ",", "meter", ".", "avg", "(", "\"Rob_Loss\"", ")", ",", "epoch", ")", "\n", "writer", ".", "add_scalar", "(", "'err/robust_train'", ",", "meter", ".", "avg", "(", "\"Rob_Err\"", ")", ",", "epoch", ")", "\n", "", "", "else", ":", "\n", "        ", "writer", ".", "add_scalar", "(", "'loss/test'", ",", "meter", ".", "avg", "(", "\"CE\"", ")", ",", "epoch", ")", "\n", "writer", ".", "add_scalar", "(", "'err/test'", ",", "meter", ".", "avg", "(", "\"Err\"", ")", ",", "epoch", ")", "\n", "if", "robust", ":", "\n", "            ", "writer", ".", "add_scalar", "(", "'loss/robust_test'", ",", "meter", ".", "avg", "(", "\"Rob_Loss\"", ")", ",", "epoch", ")", "\n", "writer", ".", "add_scalar", "(", "'err/robust_test'", ",", "meter", ".", "avg", "(", "\"Rob_Err\"", ")", ",", "epoch", ")", "\n", "writer", ".", "add_scalar", "(", "'eps'", ",", "meter", ".", "avg", "(", "'eps'", ")", ",", "epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.update_log_reg": [[84, 93], ["writer.add_scalar", "meter.avg", "writer.add_scalar", "meter.avg"], "function", ["None"], ["", "", "", "def", "update_log_reg", "(", "writer", ",", "meter", ",", "epoch", ",", "train", ",", "model", ")", ":", "\n", "    ", "set", "=", "'train'", "if", "train", "else", "'test'", "\n", "writer", ".", "add_scalar", "(", "'loss/pre_{}'", ".", "format", "(", "set", ")", ",", "meter", ".", "avg", "(", "\"loss_reg\"", ")", ",", "epoch", ")", "\n", "\n", "if", "not", "train", ":", "\n", "        ", "for", "item", "in", "[", "'std'", ",", "'relu'", ",", "'tightness'", "]", ":", "\n", "            ", "key", "=", "'L_{}'", ".", "format", "(", "item", ")", "\n", "if", "key", "in", "meter", ".", "lasts", ":", "\n", "                ", "writer", ".", "add_scalar", "(", "'loss/{}'", ".", "format", "(", "key", ")", ",", "meter", ".", "avg", "(", "key", ")", ",", "epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.parse_opts": [[94, 108], ["s.split", "o.strip", "o.split", "eval", "type"], "function", ["None"], ["", "", "", "", "def", "parse_opts", "(", "s", ")", ":", "\n", "    ", "opts", "=", "s", ".", "split", "(", "','", ")", "\n", "params", "=", "{", "}", "\n", "for", "o", "in", "opts", ":", "\n", "        ", "if", "o", ".", "strip", "(", ")", ":", "\n", "            ", "key", ",", "val", "=", "o", ".", "split", "(", "'='", ")", "\n", "try", ":", "\n", "                ", "v", "=", "eval", "(", "val", ")", "\n", "", "except", ":", "\n", "                ", "v", "=", "val", "\n", "", "if", "type", "(", "v", ")", "not", "in", "[", "int", ",", "float", ",", "bool", "]", ":", "\n", "                ", "v", "=", "val", "\n", "", "params", "[", "key", "]", "=", "v", "\n", "", "", "return", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.prepare_model": [[109, 154], ["eval", "os.path.join", "os.path.exists", "torch.load", "torch.load", "torch.load", "torch.load.get", "model_ori.load_state_dict", "auto_LiRPA.utils.logger.info", "utils.parse_opts", "auto_LiRPA.utils.logger.info", "os.listdir", "NotImplementedError", "filename.startswith", "os.path.join", "max", "torch.load", "torch.load", "torch.load", "int", "auto_LiRPA.utils.logger.warning", "os.path.join", "auto_LiRPA.utils.logger.warning"], "function", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.parse_opts"], ["", "def", "prepare_model", "(", "args", ",", "logger", ",", "config", ")", ":", "\n", "    ", "model", "=", "args", ".", "model", "\n", "\n", "if", "config", "[", "'data'", "]", "==", "'MNIST'", ":", "\n", "        ", "input_shape", "=", "(", "1", ",", "28", ",", "28", ")", "\n", "", "elif", "config", "[", "'data'", "]", "==", "'CIFAR'", ":", "\n", "        ", "input_shape", "=", "(", "3", ",", "32", ",", "32", ")", "\n", "", "elif", "config", "[", "'data'", "]", "==", "'tinyimagenet'", ":", "\n", "        ", "input_shape", "=", "(", "3", ",", "64", ",", "64", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "(", "config", "[", "'data'", "]", ")", "\n", "\n", "", "model_ori", "=", "eval", "(", "model", ")", "(", "in_ch", "=", "input_shape", "[", "0", "]", ",", "in_dim", "=", "input_shape", "[", "1", "]", ",", "**", "parse_opts", "(", "args", ".", "model_params", ")", ")", "\n", "\n", "checkpoint", "=", "None", "\n", "if", "args", ".", "auto_load", ":", "\n", "        ", "path_last", "=", "os", ".", "path", ".", "join", "(", "args", ".", "dir", ",", "'ckpt_last'", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "path_last", ")", ":", "\n", "            ", "args", ".", "load", "=", "path_last", "\n", "logger", ".", "info", "(", "'Use last checkpoint {}'", ".", "format", "(", "path_last", ")", ")", "\n", "", "else", ":", "\n", "            ", "latest", "=", "-", "1", "\n", "for", "filename", "in", "os", ".", "listdir", "(", "args", ".", "dir", ")", ":", "\n", "                ", "if", "filename", ".", "startswith", "(", "'ckpt_'", ")", ":", "\n", "                    ", "latest", "=", "max", "(", "latest", ",", "int", "(", "filename", "[", "5", ":", "]", ")", ")", "\n", "", "", "if", "latest", "!=", "-", "1", ":", "\n", "                ", "args", ".", "load", "=", "os", ".", "path", ".", "join", "(", "args", ".", "dir", ",", "'ckpt_{}'", ".", "format", "(", "latest", ")", ")", "\n", "try", ":", "\n", "                    ", "checkpoint", "=", "torch", ".", "load", "(", "args", ".", "load", ")", "\n", "", "except", ":", "\n", "                    ", "logger", ".", "warning", "(", "'Cannot load {}'", ".", "format", "(", "args", ".", "load", ")", ")", "\n", "args", ".", "load", "=", "os", ".", "path", ".", "join", "(", "args", ".", "dir", ",", "'ckpt_{}'", ".", "format", "(", "latest", "-", "1", ")", ")", "\n", "logger", ".", "warning", "(", "'Trying {}'", ".", "format", "(", "args", ".", "load", ")", ")", "\n", "", "", "", "", "if", "checkpoint", "is", "None", "and", "args", ".", "load", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "load", "(", "args", ".", "load", ")", "\n", "", "if", "checkpoint", "is", "not", "None", ":", "\n", "        ", "epoch", ",", "state_dict", "=", "checkpoint", "[", "'epoch'", "]", ",", "checkpoint", "[", "'state_dict'", "]", "\n", "best", "=", "checkpoint", ".", "get", "(", "'best'", ",", "(", "100.", ",", "100.", ",", "-", "1", ")", ")", "\n", "model_ori", ".", "load_state_dict", "(", "state_dict", ",", "strict", "=", "False", ")", "\n", "logger", ".", "info", "(", "f'Checkpoint loaded: {args.load}, epoch {epoch}'", ")", "\n", "", "else", ":", "\n", "        ", "epoch", "=", "0", "\n", "best", "=", "(", "100.", ",", "100.", ",", "-", "1", ")", "\n", "\n", "", "return", "model_ori", ",", "checkpoint", ",", "epoch", ",", "best", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.save": [[155, 172], ["os.path.join", "os.path.exists", "torch.save", "torch.save", "torch.save", "auto_LiRPA.utils.logger.info", "model.state_dict", "opt.state_dict", "os.system", "os.path.join", "os.path.exists", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "os.system", "os.path.join"], "function", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.save", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.save", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.save", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.save", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.save", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.save", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.save", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.save", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.save"], ["", "def", "save", "(", "args", ",", "epoch", ",", "best", ",", "model", ",", "opt", ",", "is_best", "=", "False", ")", ":", "\n", "    ", "ckpt", "=", "{", "\n", "'state_dict'", ":", "model", ".", "state_dict", "(", ")", ",", "'optimizer'", ":", "opt", ".", "state_dict", "(", ")", ",", "\n", "'epoch'", ":", "epoch", ",", "'best'", ":", "best", "\n", "}", "\n", "path_last", "=", "os", ".", "path", ".", "join", "(", "args", ".", "dir", ",", "'ckpt_last'", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "path_last", ")", ":", "\n", "        ", "os", ".", "system", "(", "'mv {path} {path}.bak'", ".", "format", "(", "path", "=", "path_last", ")", ")", "\n", "", "torch", ".", "save", "(", "ckpt", ",", "path_last", ")", "\n", "if", "is_best", ":", "\n", "        ", "path_best", "=", "os", ".", "path", ".", "join", "(", "args", ".", "dir", ",", "'ckpt_best'", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "path_best", ")", ":", "\n", "            ", "os", ".", "system", "(", "'mv {path} {path}.bak'", ".", "format", "(", "path", "=", "path_best", ")", ")", "\n", "", "torch", ".", "save", "(", "ckpt", ",", "path_best", ")", "\n", "", "if", "args", ".", "save_all", ":", "\n", "        ", "torch", ".", "save", "(", "ckpt", ",", "os", ".", "path", ".", "join", "(", "args", ".", "dir", ",", "'ckpt_{}'", ".", "format", "(", "epoch", ")", ")", ")", "\n", "", "logger", ".", "info", "(", "''", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.get_eps_scheduler": [[173, 178], ["int", "eps_scheduler.set_epoch_length", "eval", "len"], "function", ["None"], ["", "def", "get_eps_scheduler", "(", "args", ",", "max_eps", ",", "train_data", ")", ":", "\n", "    ", "eps_scheduler", "=", "eval", "(", "args", ".", "scheduler_name", ")", "(", "max_eps", ",", "args", ".", "scheduler_opts", ")", "\n", "epoch_length", "=", "int", "(", "(", "len", "(", "train_data", ".", "dataset", ")", "+", "train_data", ".", "batch_size", "-", "1", ")", "/", "train_data", ".", "batch_size", ")", "\n", "eps_scheduler", ".", "set_epoch_length", "(", "epoch_length", ")", "\n", "return", "eps_scheduler", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.get_lr_scheduler": [[179, 184], ["torch.lr_scheduler.MultiStepLR", "map", "args.lr_decay_milestones.split"], "function", ["None"], ["", "def", "get_lr_scheduler", "(", "args", ",", "opt", ")", ":", "\n", "    ", "for", "pg", "in", "opt", ".", "param_groups", ":", "\n", "        ", "pg", "[", "'lr'", "]", "=", "args", ".", "lr", "\n", "", "return", "optim", ".", "lr_scheduler", ".", "MultiStepLR", "(", "opt", ",", "\n", "milestones", "=", "map", "(", "int", ",", "args", ".", "lr_decay_milestones", ".", "split", "(", "','", ")", ")", ",", "gamma", "=", "args", ".", "lr_decay_factor", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.get_optimizer": [[185, 197], ["auto_LiRPA.utils.logger.info", "torch.SGD", "eval", "auto_LiRPA.utils.logger.error", "optim.SGD.load_state_dict"], "function", ["None"], ["", "def", "get_optimizer", "(", "args", ",", "params", ",", "checkpoint", "=", "None", ")", ":", "\n", "    ", "if", "args", ".", "opt", "==", "'SGD'", ":", "\n", "        ", "opt", "=", "optim", ".", "SGD", "(", "params", ",", "lr", "=", "args", ".", "lr", ",", "momentum", "=", "args", ".", "momentum", ",", "weight_decay", "=", "args", ".", "weight_decay", ")", "\n", "", "else", ":", "\n", "        ", "opt", "=", "eval", "(", "'optim.'", "+", "args", ".", "opt", ")", "(", "params", ",", "lr", "=", "args", ".", "lr", ",", "weight_decay", "=", "args", ".", "weight_decay", ")", "\n", "", "logger", ".", "info", "(", "f'Optimizer {opt}'", ")", "\n", "if", "checkpoint", ":", "\n", "        ", "if", "'optimizer'", "not", "in", "checkpoint", ":", "\n", "            ", "logger", ".", "error", "(", "'Cannot find optimzier checkpoint'", ")", "\n", "", "else", ":", "\n", "            ", "opt", ".", "load_state_dict", "(", "checkpoint", "[", "'optimizer'", "]", ")", "\n", "", "", "return", "opt", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.get_bound_opts_lf": [[198, 202], ["copy.deepcopy"], "function", ["None"], ["", "def", "get_bound_opts_lf", "(", "bound_opts", ")", ":", "\n", "    ", "bound_opts", "=", "copy", ".", "deepcopy", "(", "bound_opts", ")", "\n", "bound_opts", "[", "'loss_fusion'", "]", "=", "True", "\n", "return", "bound_opts", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.update_relu_stat": [[203, 209], ["model._modules.values", "isinstance", "meter.update", "meter.update", "l.numel", "l.numel"], "function", ["None"], ["", "def", "update_relu_stat", "(", "model", ",", "meter", ")", ":", "\n", "    ", "for", "node", "in", "model", ".", "_modules", ".", "values", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "node", ",", "BoundRelu", ")", ":", "\n", "            ", "l", ",", "u", "=", "node", ".", "inputs", "[", "0", "]", ".", "lower", ",", "node", ".", "inputs", "[", "0", "]", ".", "upper", "\n", "meter", ".", "update", "(", "'active'", ",", "(", "l", ">", "0", ")", ".", "float", "(", ")", ".", "sum", "(", ")", "/", "l", ".", "numel", "(", ")", ")", "\n", "meter", ".", "update", "(", "'inactive'", ",", "(", "u", "<", "0", ")", ".", "float", "(", ")", ".", "sum", "(", ")", "/", "l", ".", "numel", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.datasets.MNIST.__init__": [[16, 20], ["torchvision.MNIST.__init__"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.ImageNet64.imagenet_data_loader.DatasetDownsampledImageNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "root", ",", "train", "=", "True", ",", "transform", "=", "None", ",", "target_transform", "=", "None", ",", "\n", "download", "=", "False", ",", "use_index", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "root", ",", "train", ",", "transform", ",", "target_transform", ",", "download", ")", "\n", "self", ".", "use_index", "=", "use_index", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.datasets.MNIST.__getitem__": [[21, 27], ["torchvision.MNIST.__getitem__"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.datasets.CIFAR10.__getitem__"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "img", ",", "target", "=", "super", "(", ")", ".", "__getitem__", "(", "index", ")", "\n", "if", "self", ".", "use_index", ":", "\n", "            ", "return", "img", ",", "target", ",", "index", "\n", "", "else", ":", "\n", "            ", "return", "img", ",", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.datasets.CIFAR10.__init__": [[29, 33], ["torchvision.CIFAR10.__init__"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.ImageNet64.imagenet_data_loader.DatasetDownsampledImageNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "root", ",", "train", "=", "True", ",", "transform", "=", "None", ",", "target_transform", "=", "None", ",", "\n", "download", "=", "False", ",", "use_index", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "root", ",", "train", ",", "transform", ",", "target_transform", ",", "download", ")", "\n", "self", ".", "use_index", "=", "use_index", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.datasets.CIFAR10.__getitem__": [[34, 40], ["torchvision.CIFAR10.__getitem__"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.datasets.CIFAR10.__getitem__"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "img", ",", "target", "=", "super", "(", ")", ".", "__getitem__", "(", "index", ")", "\n", "if", "self", ".", "use_index", ":", "\n", "            ", "return", "img", ",", "target", ",", "index", "\n", "", "else", ":", "\n", "            ", "return", "img", ",", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.datasets.load_data": [[41, 106], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.randn.to", "urllib.request.build_opener", "urllib.request.install_opener", "torch.randn", "datasets.MNIST", "datasets.MNIST", "torch.reshape", "torch.reshape", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.randn", "torchvision.Normalize", "torchvision.Compose", "datasets.CIFAR10", "datasets.CIFAR10", "torchvision.ToTensor", "torchvision.ToTensor", "torchvision.Compose", "torchvision.Compose", "torch.tensor", "torch.tensor", "torch.randn", "torchvision.Normalize", "torchvision.ImageFolder", "torchvision.ImageFolder", "torchvision.ToTensor", "torchvision.RandomHorizontalFlip", "torchvision.RandomCrop", "torchvision.ToTensor", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.Compose", "torchvision.Compose", "torchvision.RandomHorizontalFlip", "torchvision.RandomCrop", "torchvision.ToTensor", "torchvision.ToTensor"], "function", ["None"], ["", "", "", "def", "load_data", "(", "args", ",", "data", ",", "batch_size", ",", "test_batch_size", ",", "use_index", "=", "False", ",", "aug", "=", "True", ")", ":", "\n", "    ", "if", "data", "==", "'MNIST'", ":", "\n", "        ", "\"\"\"Fix 403 Forbidden error in downloading MNIST\n        See https://github.com/pytorch/vision/issues/1938.\"\"\"", "\n", "from", "six", ".", "moves", "import", "urllib", "\n", "opener", "=", "urllib", ".", "request", ".", "build_opener", "(", ")", "\n", "opener", ".", "addheaders", "=", "[", "(", "'User-agent'", ",", "'Mozilla/5.0'", ")", "]", "\n", "urllib", ".", "request", ".", "install_opener", "(", "opener", ")", "\n", "\n", "dummy_input", "=", "torch", ".", "randn", "(", "2", ",", "1", ",", "28", ",", "28", ")", "\n", "mean", ",", "std", "=", "torch", ".", "tensor", "(", "[", "0.0", "]", ")", ",", "torch", ".", "tensor", "(", "[", "1.0", "]", ")", "\n", "train_data", "=", "MNIST", "(", "'./data'", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "transforms", ".", "ToTensor", "(", ")", ",", "use_index", "=", "use_index", ")", "\n", "test_data", "=", "MNIST", "(", "'./data'", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transforms", ".", "ToTensor", "(", ")", ",", "use_index", "=", "use_index", ")", "\n", "", "elif", "data", "==", "'CIFAR'", ":", "\n", "        ", "mean", "=", "torch", ".", "tensor", "(", "cifar10_mean", ")", "\n", "std", "=", "torch", ".", "tensor", "(", "[", "0.2", ",", "0.2", ",", "0.2", "]", "if", "args", ".", "lip", "or", "args", ".", "global_lip", "or", "'lip'", "in", "args", ".", "model", "else", "cifar10_std", ")", "\n", "dummy_input", "=", "torch", ".", "randn", "(", "2", ",", "3", ",", "32", ",", "32", ")", "\n", "normalize", "=", "transforms", ".", "Normalize", "(", "mean", "=", "mean", ",", "std", "=", "std", ")", "\n", "if", "aug", ":", "\n", "            ", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "RandomCrop", "(", "32", ",", "2", ",", "padding_mode", "=", "'edge'", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", "]", ")", "\n", "", "else", ":", "\n", "# No random cropping", "\n", "            ", "transform", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "transforms", ".", "ToTensor", "(", ")", ",", "normalize", "]", ")", "\n", "", "transform_test", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "ToTensor", "(", ")", ",", "normalize", "]", ")", "\n", "\n", "train_data", "=", "CIFAR10", "(", "'./data'", ",", "train", "=", "True", ",", "download", "=", "True", ",", "\n", "transform", "=", "transform", ",", "use_index", "=", "use_index", ")", "\n", "test_data", "=", "CIFAR10", "(", "'./data'", ",", "train", "=", "False", ",", "download", "=", "True", ",", "\n", "transform", "=", "transform_test", ",", "use_index", "=", "use_index", ")", "\n", "", "elif", "data", "==", "\"tinyimagenet\"", ":", "\n", "        ", "mean", "=", "torch", ".", "tensor", "(", "[", "0.4802", ",", "0.4481", ",", "0.3975", "]", ")", "\n", "std", "=", "torch", ".", "tensor", "(", "[", "0.22", ",", "0.22", ",", "0.22", "]", "if", "args", ".", "lip", "else", "[", "0.2302", ",", "0.2265", ",", "0.2262", "]", ")", "\n", "dummy_input", "=", "torch", ".", "randn", "(", "2", ",", "3", ",", "64", ",", "64", ")", "\n", "normalize", "=", "transforms", ".", "Normalize", "(", "mean", "=", "mean", ",", "std", "=", "std", ")", "\n", "data_dir", "=", "'data/tinyImageNet/tiny-imagenet-200'", "\n", "train_data", "=", "datasets", ".", "ImageFolder", "(", "data_dir", "+", "'/train'", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "RandomCrop", "(", "64", ",", "4", ",", "padding_mode", "=", "'edge'", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", ",", "\n", "]", ")", ")", "\n", "test_data", "=", "datasets", ".", "ImageFolder", "(", "data_dir", "+", "'/val'", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", "]", ")", ")", "\n", "\n", "", "train_data", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "train_data", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ",", "pin_memory", "=", "True", ",", "num_workers", "=", "0", ")", "\n", "test_data", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "test_data", ",", "batch_size", "=", "test_batch_size", ",", "pin_memory", "=", "True", ",", "num_workers", "=", "0", ")", "\n", "\n", "train_data", ".", "mean", "=", "test_data", ".", "mean", "=", "mean", "\n", "train_data", ".", "std", "=", "test_data", ".", "std", "=", "std", "\n", "\n", "for", "loader", "in", "[", "train_data", ",", "test_data", "]", ":", "\n", "        ", "loader", ".", "mean", ",", "loader", ".", "std", "=", "mean", ",", "std", "\n", "loader", ".", "data_max", "=", "data_max", "=", "torch", ".", "reshape", "(", "(", "1.", "-", "mean", ")", "/", "std", ",", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", ")", "\n", "loader", ".", "data_min", "=", "torch", ".", "reshape", "(", "(", "0.", "-", "mean", ")", "/", "std", ",", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", ")", "\n", "\n", "", "dummy_input", "=", "dummy_input", ".", "to", "(", "args", ".", "device", ")", "\n", "\n", "return", "dummy_input", ",", "train_data", ",", "test_data", "\n", "", ""]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.regularization.compute_stab_reg": [[11, 35], ["torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "isinstance", "modules.values", "nodes.items", "meter.update", "isinstance", "torch.zeros", "torch.zeros", "torch.zeros", "isinstance", "Node", "torch.tanh().view().sum().mean", "torch.tanh().view().sum().mean", "torch.tanh().view().sum().mean", "list", "model", "model", "model._modules.values", "torch.tanh().view().sum", "torch.tanh().view().sum", "torch.tanh().view().sum", "torch.tanh().view", "torch.tanh().view", "torch.tanh().view", "v.lower.size", "torch.tanh", "torch.tanh", "torch.tanh"], "function", ["None"], ["def", "compute_stab_reg", "(", "args", ",", "model", ",", "meter", ",", "eps", ",", "eps_scheduler", ")", ":", "\n", "    ", "loss", "=", "torch", ".", "zeros", "(", "(", ")", ")", ".", "to", "(", "args", ".", "device", ")", "\n", "if", "isinstance", "(", "model", ",", "BoundDataParallel", ")", ":", "\n", "        ", "modules", "=", "list", "(", "model", ".", "_modules", ".", "values", "(", ")", ")", "[", "0", "]", ".", "_modules", "\n", "", "else", ":", "\n", "        ", "modules", "=", "model", ".", "_modules", "\n", "\n", "", "nodes", "=", "{", "}", "\n", "for", "m", "in", "modules", ".", "values", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "BoundRelu", ")", ":", "\n", "            ", "if", "isinstance", "(", "model", ",", "BoundDataParallel", ")", ":", "\n", "                ", "lower", "=", "model", "(", "get_property", "=", "True", ",", "node_name", "=", "m", ".", "name", ",", "att_name", "=", "'lower'", ")", "\n", "upper", "=", "model", "(", "get_property", "=", "True", ",", "node_name", "=", "m", ".", "name", ",", "att_name", "=", "'upper'", ")", "\n", "", "else", ":", "\n", "                ", "lower", ",", "upper", "=", "m", ".", "lower", ",", "m", ".", "upper", "\n", "", "nodes", "[", "m", ".", "name", "]", "=", "Node", "(", "m", ",", "lower", ",", "upper", ")", "\n", "\n", "\n", "", "", "for", "k", ",", "v", "in", "nodes", ".", "items", "(", ")", ":", "\n", "        ", "loss", "+=", "-", "torch", ".", "tanh", "(", "1", "+", "v", ".", "lower", "*", "v", ".", "upper", ")", ".", "view", "(", "v", ".", "lower", ".", "size", "(", "0", ")", ",", "-", "1", ")", ".", "sum", "(", "dim", "=", "-", "1", ")", ".", "mean", "(", ")", "\n", "\n", "", "meter", ".", "update", "(", "'relu_stab_Loss'", ",", "loss", ")", "\n", "\n", "return", "loss", "*", "args", ".", "xiao_coeff", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.regularization.compute_vol_reg": [[37, 46], ["torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "model._modules.values", "meter.update", "isinstance", "torch.zeros", "torch.zeros", "torch.zeros", "u.clamp"], "function", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.clamp"], ["", "def", "compute_vol_reg", "(", "args", ",", "model", ",", "meter", ",", "eps", ",", "eps_scheduler", ")", ":", "\n", "    ", "loss", "=", "torch", ".", "zeros", "(", "(", ")", ")", ".", "to", "(", "args", ".", "device", ")", "\n", "nodes", "=", "{", "}", "\n", "for", "m", "in", "model", ".", "_modules", ".", "values", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "BoundRelu", ")", ":", "\n", "            ", "l", ",", "u", "=", "m", ".", "inputs", "[", "0", "]", ".", "lower", ",", "m", ".", "inputs", "[", "0", "]", ".", "upper", "\n", "loss", "+=", "(", "(", "-", "l", ")", ".", "clamp", "(", "min", "=", "0", ")", "*", "u", ".", "clamp", "(", "min", "=", "0", ")", ")", ".", "mean", "(", ")", "\n", "", "", "meter", ".", "update", "(", "'relu_vol_Loss'", ",", "loss", ")", "\n", "return", "loss", "*", "args", ".", "colt_coeff", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.regularization.compute_L1_reg": [[48, 57], ["torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "model._modules.values", "meter.update", "isinstance", "torch.zeros", "torch.zeros", "torch.zeros", "torch.abs().sum", "torch.abs().sum", "torch.abs().sum", "isinstance", "torch.abs().sum", "torch.abs().sum", "torch.abs().sum", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs"], "function", ["None"], ["", "def", "compute_L1_reg", "(", "args", ",", "model", ",", "meter", ",", "eps", ",", "eps_scheduler", ")", ":", "\n", "    ", "loss", "=", "torch", ".", "zeros", "(", "(", ")", ")", ".", "to", "(", "args", ".", "device", ")", "\n", "for", "module", "in", "model", ".", "_modules", ".", "values", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "module", ",", "nn", ".", "Linear", ")", ":", "\n", "            ", "loss", "+=", "torch", ".", "abs", "(", "module", ".", "weight", ")", ".", "sum", "(", ")", "\n", "", "elif", "isinstance", "(", "module", ",", "nn", ".", "Conv2d", ")", ":", "\n", "            ", "loss", "+=", "torch", ".", "abs", "(", "module", ".", "weight", ")", ".", "sum", "(", ")", "\n", "", "", "meter", ".", "update", "(", "'L1_loss'", ",", "loss", ")", "\n", "return", "loss", "*", "args", ".", "l1_coeff", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.regularization.compute_reg": [[59, 147], ["torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "isinstance", "model._modules.values", "meter.update", "torch.zeros_like.clone", "isinstance", "pdb.set_trace", "eval", "meter.update", "torch.zeros", "torch.zeros", "torch.zeros", "range", "diff.mean", "center.mean", "center.std", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "list", "torch.relu", "torch.relu", "print", "print", "model._modules.values", "torch.min.clamp", "torch.min.clamp", "torch.relu", "torch.relu", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isinf", "torch.isinf", "torch.isinf", "eps_scheduler.get_eps", "eps_scheduler.get_max_eps", "lower.mean", "upper.mean", "diff.mean.item", "center.std.item", "bn_mean.item", "bn_var.item", "lower.mean", "upper.mean", "bn_mean.item", "bn_var.item", "diff.mean.clamp", "lower.numel", "lower.numel"], "function", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.clamp", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.clamp", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.clamp"], ["", "def", "compute_reg", "(", "args", ",", "model", ",", "meter", ",", "eps", ",", "eps_scheduler", ")", ":", "\n", "    ", "loss", "=", "torch", ".", "zeros", "(", "(", ")", ")", ".", "to", "(", "args", ".", "device", ")", "\n", "\n", "# Handle the non-feedforward case", "\n", "l0", "=", "torch", ".", "zeros_like", "(", "loss", ")", "\n", "loss_tightness", ",", "loss_std", ",", "loss_relu", ",", "loss_ratio", "=", "(", "l0", ".", "clone", "(", ")", "for", "i", "in", "range", "(", "4", ")", ")", "\n", "\n", "if", "isinstance", "(", "model", ",", "BoundDataParallel", ")", ":", "\n", "        ", "modules", "=", "list", "(", "model", ".", "_modules", ".", "values", "(", ")", ")", "[", "0", "]", ".", "_modules", "\n", "", "else", ":", "\n", "        ", "modules", "=", "model", ".", "_modules", "\n", "", "node_inp", "=", "modules", "[", "'/input.1'", "]", "\n", "tightness_0", "=", "(", "(", "node_inp", ".", "upper", "-", "node_inp", ".", "lower", ")", "/", "2", ")", ".", "mean", "(", ")", "\n", "ratio_init", "=", "tightness_0", "/", "(", "(", "node_inp", ".", "upper", "+", "node_inp", ".", "lower", ")", "/", "2", ")", ".", "std", "(", ")", "\n", "cnt_layers", "=", "0", "\n", "cnt", "=", "0", "\n", "for", "m", "in", "model", ".", "_modules", ".", "values", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "BoundRelu", ")", ":", "\n", "            ", "lower", ",", "upper", "=", "m", ".", "inputs", "[", "0", "]", ".", "lower", ",", "m", ".", "inputs", "[", "0", "]", ".", "upper", "\n", "center", "=", "(", "upper", "+", "lower", ")", "/", "2", "\n", "diff", "=", "(", "(", "upper", "-", "lower", ")", "/", "2", ")", "\n", "tightness", "=", "diff", ".", "mean", "(", ")", "\n", "mean_", "=", "center", ".", "mean", "(", ")", "\n", "std_", "=", "center", ".", "std", "(", ")", "\n", "\n", "loss_tightness", "+=", "F", ".", "relu", "(", "args", ".", "tol", "-", "tightness_0", "/", "tightness", ".", "clamp", "(", "min", "=", "1e-12", ")", ")", "/", "args", ".", "tol", "\n", "loss_std", "+=", "F", ".", "relu", "(", "args", ".", "tol", "-", "std_", ")", "/", "args", ".", "tol", "\n", "cnt", "+=", "1", "\n", "\n", "# L_{relu}", "\n", "mask_act", ",", "mask_inact", "=", "lower", ">", "0", ",", "upper", "<", "0", "\n", "mean_act", "=", "(", "center", "*", "mask_act", ")", ".", "mean", "(", ")", "\n", "mean_inact", "=", "(", "center", "*", "mask_inact", ")", ".", "mean", "(", ")", "\n", "delta", "=", "(", "center", "-", "mean_", ")", "**", "2", "\n", "var_act", "=", "(", "delta", "*", "mask_act", ")", ".", "sum", "(", ")", "# / center.numel()", "\n", "var_inact", "=", "(", "delta", "*", "mask_inact", ")", ".", "sum", "(", ")", "# / center.numel()                        ", "\n", "\n", "mean_ratio", "=", "mean_act", "/", "-", "mean_inact", "\n", "var_ratio", "=", "var_act", "/", "var_inact", "\n", "mean_ratio", "=", "torch", ".", "min", "(", "mean_ratio", ",", "1", "/", "mean_ratio", ".", "clamp", "(", "min", "=", "1e-12", ")", ")", "\n", "var_ratio", "=", "torch", ".", "min", "(", "var_ratio", ",", "1", "/", "var_ratio", ".", "clamp", "(", "min", "=", "1e-12", ")", ")", "\n", "loss_relu_", "=", "(", "(", "\n", "F", ".", "relu", "(", "args", ".", "tol", "-", "mean_ratio", ")", "+", "F", ".", "relu", "(", "args", ".", "tol", "-", "var_ratio", ")", ")", "\n", "/", "args", ".", "tol", ")", "\n", "if", "not", "torch", ".", "isnan", "(", "loss_relu_", ")", "and", "not", "torch", ".", "isinf", "(", "loss_relu_", ")", ":", "\n", "                ", "loss_relu", "+=", "loss_relu_", "\n", "\n", "", "if", "args", ".", "debug", ":", "\n", "                ", "bn_mean", "=", "(", "lower", ".", "mean", "(", ")", "+", "upper", ".", "mean", "(", ")", ")", "/", "2", "\n", "bn_var", "=", "(", "(", "upper", "**", "2", "+", "lower", "**", "2", ")", "/", "2", ")", ".", "mean", "(", ")", "-", "bn_mean", "**", "2", "\n", "print", "(", "m", ".", "name", ",", "m", ",", "\n", "'tightness {:.4f} gain {:.4f} std {:.4f}'", ".", "format", "(", "\n", "tightness", ".", "item", "(", ")", ",", "(", "tightness", "/", "tightness_0", ")", ".", "item", "(", ")", ",", "std_", ".", "item", "(", ")", ")", ",", "\n", "'input'", ",", "m", ".", "inputs", "[", "0", "]", ",", "m", ".", "inputs", "[", "0", "]", ".", "name", ",", "\n", "'active {:.4f} inactive {:.4f}'", ".", "format", "(", "\n", "(", "lower", ">", "0", ")", ".", "float", "(", ")", ".", "sum", "(", ")", "/", "lower", ".", "numel", "(", ")", ",", "\n", "(", "upper", "<", "0", ")", ".", "float", "(", ")", ".", "sum", "(", ")", "/", "lower", ".", "numel", "(", ")", ")", ",", "\n", "'bnv2_mean {:.5f} bnv2_var {:.5f}'", ".", "format", "(", "bn_mean", ".", "item", "(", ")", ",", "bn_var", ".", "item", "(", ")", ")", "\n", ")", "\n", "# pre-bn", "\n", "lower", ",", "upper", "=", "m", ".", "inputs", "[", "0", "]", ".", "inputs", "[", "0", "]", ".", "lower", ",", "m", ".", "inputs", "[", "0", "]", ".", "inputs", "[", "0", "]", ".", "upper", "\n", "bn_mean", "=", "(", "lower", ".", "mean", "(", ")", "+", "upper", ".", "mean", "(", ")", ")", "/", "2", "\n", "bn_var", "=", "(", "(", "upper", "**", "2", "+", "lower", "**", "2", ")", "/", "2", ")", ".", "mean", "(", ")", "-", "bn_mean", "**", "2", "\n", "print", "(", "'pre-bn'", ",", "\n", "'bnv2_mean {:.5f} bnv2_var {:.5f}'", ".", "format", "(", "bn_mean", ".", "item", "(", ")", ",", "bn_var", ".", "item", "(", ")", ")", ")", "\n", "\n", "", "", "", "loss_tightness", "/=", "cnt", "\n", "loss_std", "/=", "cnt", "\n", "loss_relu", "/=", "cnt", "\n", "\n", "if", "args", ".", "debug", ":", "\n", "        ", "pdb", ".", "set_trace", "(", ")", "\n", "\n", "", "for", "item", "in", "[", "'tightness'", ",", "'relu'", ",", "'std'", "]", ":", "\n", "        ", "loss_", "=", "eval", "(", "'loss_{}'", ".", "format", "(", "item", ")", ")", "\n", "if", "item", "in", "args", ".", "reg_obj", ":", "\n", "            ", "loss", "+=", "loss_", "\n", "", "meter", ".", "update", "(", "'L_{}'", ".", "format", "(", "item", ")", ",", "loss_", ")", "\n", "\n", "", "meter", ".", "update", "(", "'loss_reg'", ",", "loss", ")", "\n", "\n", "if", "args", ".", "no_reg_dec", ":", "\n", "        ", "intensity", "=", "args", ".", "reg_lambda", "\n", "", "else", ":", "\n", "        ", "intensity", "=", "args", ".", "reg_lambda", "*", "(", "1", "-", "eps_scheduler", ".", "get_eps", "(", ")", "/", "eps_scheduler", ".", "get_max_eps", "(", ")", ")", "\n", "", "loss", "*=", "intensity", "\n", "\n", "return", "loss", "", "", ""]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnext_imagenet64.Block.__init__": [[14, 26], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.ImageNet64.imagenet_data_loader.DatasetDownsampledImageNet.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "cardinality", "=", "32", ",", "bottleneck_width", "=", "4", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "Block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "group_width", "=", "cardinality", "*", "bottleneck_width", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "group_width", ",", "kernel_size", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "group_width", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "group_width", ",", "group_width", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "groups", "=", "cardinality", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "group_width", ",", "self", ".", "expansion", "*", "group_width", ",", "kernel_size", "=", "1", ",", "bias", "=", "True", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "group_width", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "group_width", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "True", ")", ",", "\n", "# nn.BatchNorm2d(self.expansion*group_width)", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnext_imagenet64.Block.forward": [[29, 36], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "resnext_imagenet64.Block.conv3", "resnext_imagenet64.Block.shortcut", "torch.relu", "torch.relu", "torch.relu", "resnext_imagenet64.Block.bn1", "resnext_imagenet64.Block.conv2", "resnext_imagenet64.Block.conv1"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "conv2", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnext_imagenet64.ResNeXt.__init__": [[39, 51], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "resnext_imagenet64.ResNeXt._make_layer", "resnext_imagenet64.ResNeXt._make_layer", "resnext_imagenet64.ResNeXt._make_layer", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.ImageNet64.imagenet_data_loader.DatasetDownsampledImageNet.__init__", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.ResNet._make_layer", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.ResNet._make_layer", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "num_blocks", ",", "cardinality", ",", "bottleneck_width", ",", "num_classes", "=", "200", ")", ":", "\n", "        ", "super", "(", "ResNeXt", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cardinality", "=", "cardinality", "\n", "self", ".", "bottleneck_width", "=", "bottleneck_width", "\n", "self", ".", "in_planes", "=", "16", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "16", ",", "kernel_size", "=", "3", ",", "bias", "=", "True", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "num_blocks", "[", "0", "]", ",", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "num_blocks", "[", "1", "]", ",", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "num_blocks", "[", "2", "]", ",", "2", ")", "\n", "self", ".", "linear1", "=", "nn", ".", "Linear", "(", "cardinality", "*", "bottleneck_width", "*", "2048", ",", "512", ")", "\n", "self", ".", "linear2", "=", "nn", ".", "Linear", "(", "512", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnext_imagenet64.ResNeXt._make_layer": [[53, 62], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "resnext_imagenet64.Block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "num_blocks", ",", "stride", ")", ":", "\n", "        ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "num_blocks", "-", "1", ")", "\n", "layers", "=", "[", "]", "\n", "for", "stride", "in", "strides", ":", "\n", "            ", "layers", ".", "append", "(", "Block", "(", "self", ".", "in_planes", ",", "self", ".", "cardinality", ",", "self", ".", "bottleneck_width", ",", "stride", ")", ")", "\n", "self", ".", "in_planes", "=", "Block", ".", "expansion", "*", "self", ".", "cardinality", "*", "self", ".", "bottleneck_width", "\n", "# Increase bottleneck_width by 2 after each stage.", "\n", "", "self", ".", "bottleneck_width", "*=", "2", "\n", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnext_imagenet64.ResNeXt.forward": [[63, 72], ["torch.relu", "torch.relu", "torch.relu", "resnext_imagenet64.ResNeXt.layer1", "resnext_imagenet64.ResNeXt.layer2", "resnext_imagenet64.ResNeXt.layer3", "resnext_imagenet64.ResNeXt.view", "torch.relu", "torch.relu", "torch.relu", "resnext_imagenet64.ResNeXt.linear2", "resnext_imagenet64.ResNeXt.conv1", "resnext_imagenet64.ResNeXt.size", "resnext_imagenet64.ResNeXt.linear1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "linear1", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "linear2", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnext_imagenet64.ResNeXt_imagenet64": [[73, 75], ["resnext_imagenet64.ResNeXt"], "function", ["None"], ["", "", "def", "ResNeXt_imagenet64", "(", "in_ch", ",", "in_dim", ")", ":", "\n", "    ", "return", "ResNeXt", "(", "num_blocks", "=", "[", "2", ",", "2", ",", "2", "]", ",", "cardinality", "=", "2", ",", "bottleneck_width", "=", "8", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn_imagenet64.BasicBlock.__init__": [[16, 26], ["torch.Module.__init__", "wide_resnet_bn_imagenet64.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "wide_resnet_bn_imagenet64.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.ImageNet64.imagenet_data_loader.DatasetDownsampledImageNet.__init__", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.conv3x3", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.conv3x3"], ["    ", "def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ",", "residual", "=", "True", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "residual", "=", "residual", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn_imagenet64.BasicBlock.forward": [[27, 43], ["wide_resnet_bn_imagenet64.BasicBlock.conv1", "wide_resnet_bn_imagenet64.BasicBlock.bn1", "wide_resnet_bn_imagenet64.BasicBlock.relu", "wide_resnet_bn_imagenet64.BasicBlock.conv2", "wide_resnet_bn_imagenet64.BasicBlock.bn2", "wide_resnet_bn_imagenet64.BasicBlock.relu", "wide_resnet_bn_imagenet64.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "x", "=", "self", ".", "bn2", "(", "x", ")", "\n", "\n", "if", "self", ".", "residual", ":", "\n", "            ", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "                ", "identity", "=", "self", ".", "downsample", "(", "identity", ")", "\n", "", "x", "+=", "identity", "\n", "\n", "", "return", "self", ".", "relu", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn_imagenet64.Wide_ResNet.__init__": [[46, 83], ["torch.Module.__init__", "wide_resnet_bn_imagenet64.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "wide_resnet_bn_imagenet64.Wide_ResNet._make_layer", "wide_resnet_bn_imagenet64.Wide_ResNet._make_layer", "wide_resnet_bn_imagenet64.Wide_ResNet._make_layer", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.ImageNet64.imagenet_data_loader.DatasetDownsampledImageNet.__init__", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.conv3x3", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.ResNet._make_layer", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.ResNet._make_layer", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.ResNet._make_layer"], ["    ", "def", "__init__", "(", "\n", "self", ",", "block", ",", "layers", ",", "num_classes", "=", "1000", ",", "\n", "zero_init_residual", "=", "False", ",", "dense", "=", "False", ",", "residual", "=", "True", ",", "\n", "widen_factor", "=", "1", ",", "base_width", "=", "16", ",", "pool", "=", "True", ",", "\n", "in_ch", "=", "3", ",", "in_dim", "=", "32", "\n", ")", ":", "\n", "        ", "super", "(", "Wide_ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "residual", "=", "residual", "\n", "\n", "self", ".", "inplanes", "=", "base_width", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "in_ch", ",", "self", ".", "inplanes", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "inplanes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "base_width", "*", "widen_factor", ",", "layers", "[", "0", "]", ",", "stride", "=", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "base_width", "*", "2", "*", "widen_factor", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "base_width", "*", "4", "*", "widen_factor", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "\n", "self", ".", "pool", "=", "pool", "\n", "if", "pool", ":", "\n", "            ", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "\n", "if", "dense", ":", "\n", "                ", "dim_dense", "=", "512", "\n", "self", ".", "dense", "=", "nn", ".", "Linear", "(", "self", ".", "inplanes", ",", "dim_dense", ")", "\n", "self", ".", "dense_bn", "=", "nn", ".", "BatchNorm1d", "(", "dim_dense", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "dim_dense", ",", "num_classes", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "dense", "=", "None", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "self", ".", "inplanes", ",", "num_classes", ")", "\n", "\n", "", "", "else", ":", "\n", "            ", "assert", "dense", "\n", "dim_dense", "=", "512", "\n", "self", ".", "dense", "=", "nn", ".", "Linear", "(", "self", ".", "inplanes", "*", "(", "(", "in_dim", "//", "4", ")", "**", "2", ")", ",", "dim_dense", ")", "\n", "self", ".", "dense_bn", "=", "nn", ".", "BatchNorm1d", "(", "dim_dense", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "dim_dense", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn_imagenet64.Wide_ResNet._make_layer": [[84, 101], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "wide_resnet_bn_imagenet64.conv1x1", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "block"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.conv1x1"], ["", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", ")", ":", "\n", "        ", "if", "blocks", "==", "0", ":", "\n", "            ", "return", "nn", ".", "Sequential", "(", ")", "\n", "\n", "", "downsample", "=", "None", "\n", "if", "self", ".", "residual", "and", "(", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", ")", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "conv1x1", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ",", "residual", "=", "self", ".", "residual", ")", "]", "\n", "for", "_", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "planes", ",", "planes", ",", "residual", "=", "self", ".", "residual", ")", ")", "\n", "", "self", ".", "inplanes", "=", "planes", "\n", "\n", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn_imagenet64.Wide_ResNet.forward": [[102, 115], ["wide_resnet_bn_imagenet64.Wide_ResNet.conv1", "wide_resnet_bn_imagenet64.Wide_ResNet.bn1", "wide_resnet_bn_imagenet64.Wide_ResNet.relu", "wide_resnet_bn_imagenet64.Wide_ResNet.layer1", "wide_resnet_bn_imagenet64.Wide_ResNet.layer2", "wide_resnet_bn_imagenet64.Wide_ResNet.layer3", "torch.relu.view", "wide_resnet_bn_imagenet64.Wide_ResNet.fc", "wide_resnet_bn_imagenet64.Wide_ResNet.avgpool", "torch.relu.size", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "wide_resnet_bn_imagenet64.Wide_ResNet.dense_bn", "wide_resnet_bn_imagenet64.Wide_ResNet.dense"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "if", "self", ".", "pool", ":", "\n", "            ", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "if", "self", ".", "dense", ":", "\n", "            ", "x", "=", "F", ".", "relu", "(", "self", ".", "dense_bn", "(", "self", ".", "dense", "(", "x", ")", ")", ")", "\n", "", "return", "self", ".", "fc", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn_imagenet64.conv3x3": [[8, 10], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn_imagenet64.conv1x1": [[11, 14], ["torch.Conv2d"], "function", ["None"], ["", "def", "conv1x1", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"1x1 convolution\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn_imagenet64.wide_resnet_bn_imagenet64": [[116, 119], ["wide_resnet_bn_imagenet64.Wide_ResNet"], "function", ["None"], ["", "", "def", "wide_resnet_bn_imagenet64", "(", "in_ch", "=", "3", ",", "in_dim", "=", "56", ")", ":", "\n", "    ", "model", "=", "Wide_ResNet", "(", "BasicBlock", ",", "[", "1", ",", "1", ",", "1", "]", ",", "num_classes", "=", "200", ",", "widen_factor", "=", "10", ",", "base_width", "=", "16", ",", "pool", "=", "False", ",", "dense", "=", "True", ",", "in_ch", "=", "in_ch", ",", "in_dim", "=", "in_dim", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn_imagenet64.count_params": [[120, 125], ["model.parameters", "p.numel"], "function", ["None"], ["", "def", "count_params", "(", "model", ")", ":", "\n", "    ", "cnt", "=", "0", "\n", "for", "p", "in", "model", ".", "parameters", "(", ")", ":", "\n", "        ", "cnt", "+=", "p", ".", "numel", "(", ")", "\n", "", "return", "cnt", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnext_bn_imagenet64.Block.__init__": [[14, 29], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.ImageNet64.imagenet_data_loader.DatasetDownsampledImageNet.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "cardinality", "=", "32", ",", "bottleneck_width", "=", "4", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "Block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "group_width", "=", "cardinality", "*", "bottleneck_width", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "group_width", ",", "kernel_size", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "group_width", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "group_width", ",", "group_width", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "groups", "=", "cardinality", ",", "bias", "=", "True", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "group_width", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "group_width", ",", "self", ".", "expansion", "*", "group_width", ",", "kernel_size", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "group_width", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "group_width", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "group_width", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "group_width", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnext_bn_imagenet64.Block.forward": [[31, 38], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "resnext_bn_imagenet64.Block.bn3", "resnext_bn_imagenet64.Block.shortcut", "torch.relu", "torch.relu", "torch.relu", "resnext_bn_imagenet64.Block.bn1", "resnext_bn_imagenet64.Block.bn2", "resnext_bn_imagenet64.Block.conv3", "resnext_bn_imagenet64.Block.conv1", "resnext_bn_imagenet64.Block.conv2"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", ")", "\n", "out", "=", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out", ")", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnext_bn_imagenet64.ResNeXt.__init__": [[41, 58], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "resnext_bn_imagenet64.ResNeXt._make_layer", "resnext_bn_imagenet64.ResNeXt._make_layer", "resnext_bn_imagenet64.ResNeXt._make_layer", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.ImageNet64.imagenet_data_loader.DatasetDownsampledImageNet.__init__", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.ResNet._make_layer", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.ResNet._make_layer", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "num_blocks", ",", "cardinality", ",", "bottleneck_width", ",", "num_classes", "=", "200", ")", ":", "\n", "        ", "super", "(", "ResNeXt", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cardinality", "=", "cardinality", "\n", "self", ".", "bottleneck_width", "=", "bottleneck_width", "\n", "self", ".", "in_planes", "=", "16", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "16", ",", "kernel_size", "=", "3", ",", "bias", "=", "True", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "16", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "num_blocks", "[", "0", "]", ",", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "num_blocks", "[", "1", "]", ",", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "num_blocks", "[", "2", "]", ",", "2", ")", "\n", "\n", "self", ".", "linear1", "=", "nn", ".", "Linear", "(", "cardinality", "*", "bottleneck_width", "*", "2048", ",", "512", ")", "\n", "self", ".", "bn_dense", "=", "nn", ".", "BatchNorm1d", "(", "512", ")", "\n", "self", ".", "linear2", "=", "nn", ".", "Linear", "(", "512", ",", "num_classes", ")", "\n", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnext_bn_imagenet64.ResNeXt._make_layer": [[60, 69], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "resnext_bn_imagenet64.Block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "num_blocks", ",", "stride", ")", ":", "\n", "        ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "num_blocks", "-", "1", ")", "\n", "layers", "=", "[", "]", "\n", "for", "stride", "in", "strides", ":", "\n", "            ", "layers", ".", "append", "(", "Block", "(", "self", ".", "in_planes", ",", "self", ".", "cardinality", ",", "self", ".", "bottleneck_width", ",", "stride", ")", ")", "\n", "self", ".", "in_planes", "=", "Block", ".", "expansion", "*", "self", ".", "cardinality", "*", "self", ".", "bottleneck_width", "\n", "# Increase bottleneck_width by 2 after each stage.", "\n", "", "self", ".", "bottleneck_width", "*=", "2", "\n", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnext_bn_imagenet64.ResNeXt.forward": [[70, 83], ["resnext_bn_imagenet64.ResNeXt.conv1", "resnext_bn_imagenet64.ResNeXt.bn1", "resnext_bn_imagenet64.ResNeXt.relu", "resnext_bn_imagenet64.ResNeXt.layer1", "resnext_bn_imagenet64.ResNeXt.layer2", "resnext_bn_imagenet64.ResNeXt.layer3", "resnext_bn_imagenet64.ResNeXt.view", "torch.relu", "torch.relu", "torch.relu", "resnext_bn_imagenet64.ResNeXt.linear2", "resnext_bn_imagenet64.ResNeXt.size", "resnext_bn_imagenet64.ResNeXt.bn_dense", "resnext_bn_imagenet64.ResNeXt.linear1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn_dense", "(", "self", ".", "linear1", "(", "out", ")", ")", ")", "\n", "out", "=", "self", ".", "linear2", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnext_bn_imagenet64.ResNeXt_bn_imagenet64": [[84, 86], ["resnext_bn_imagenet64.ResNeXt"], "function", ["None"], ["", "", "def", "ResNeXt_bn_imagenet64", "(", "in_ch", ",", "in_dim", ")", ":", "\n", "    ", "return", "ResNeXt", "(", "num_blocks", "=", "[", "2", ",", "2", ",", "2", "]", ",", "cardinality", "=", "2", ",", "bottleneck_width", "=", "8", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet.wide_basic.__init__": [[14, 28], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.ImageNet64.imagenet_data_loader.DatasetDownsampledImageNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "dropout_rate", ",", "stride", "=", "1", ",", "use_bn", "=", "False", ")", ":", "\n", "        ", "super", "(", "wide_basic", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "use_bn", "=", "use_bn", "\n", "self", ".", "dropout_rate", "=", "dropout_rate", "\n", "if", "use_bn", ":", "\n", "            ", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", "\n", "if", "dropout_rate", ":", "\n", "            ", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "dropout_rate", ")", "\n", "", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "True", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet.wide_basic.forward": [[30, 40], ["wide_resnet.wide_basic.conv2", "wide_resnet.wide_basic.shortcut", "wide_resnet.wide_basic.conv1", "wide_resnet.wide_basic.conv1", "wide_resnet.wide_basic.dropout", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "wide_resnet.wide_basic.bn1"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "use_bn", ":", "\n", "            ", "out", "=", "self", ".", "conv1", "(", "F", ".", "relu", "(", "self", ".", "bn1", "(", "x", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "out", "=", "self", ".", "conv1", "(", "F", ".", "relu", "(", "x", ")", ")", "\n", "", "if", "self", ".", "dropout_rate", ":", "\n", "            ", "out", "=", "self", ".", "dropout", "(", "out", ")", "\n", "", "out", "=", "self", ".", "conv2", "(", "F", ".", "relu", "(", "out", ")", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet.Wide_ResNet.__init__": [[42, 69], ["torch.Module.__init__", "print", "wide_resnet.conv3x3", "wide_resnet.Wide_ResNet._wide_layer", "wide_resnet.Wide_ResNet._wide_layer", "wide_resnet.Wide_ResNet._wide_layer", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "wide_resnet.Wide_ResNet.layer3", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "wide_resnet.Wide_ResNet.layer2", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d.numel", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.avg_pool2d.numel", "wide_resnet.Wide_ResNet.layer1", "wide_resnet.Wide_ResNet.conv1"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.ImageNet64.imagenet_data_loader.DatasetDownsampledImageNet.__init__", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.conv3x3", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_imagenet64.Wide_ResNet._wide_layer", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_imagenet64.Wide_ResNet._wide_layer", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_imagenet64.Wide_ResNet._wide_layer"], ["    ", "def", "__init__", "(", "self", ",", "depth", ",", "widen_factor", ",", "dropout_rate", ",", "num_classes", ",", "\n", "use_bn", "=", "False", ",", "use_pooling", "=", "True", ",", "in_ch", "=", "3", ",", "in_dim", "=", "32", ",", "bn_after_dense", "=", "False", ")", ":", "\n", "        ", "super", "(", "Wide_ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_planes", "=", "16", "\n", "self", ".", "use_bn", "=", "use_bn", "\n", "self", ".", "use_pooling", "=", "use_pooling", "\n", "assert", "(", "(", "depth", "-", "4", ")", "%", "6", "==", "0", ")", ",", "'Wide-resnet depth should be 6n+4'", "\n", "n", "=", "(", "depth", "-", "4", ")", "/", "6", "\n", "k", "=", "widen_factor", "\n", "\n", "print", "(", "'| Wide-Resnet %dx%d'", "%", "(", "depth", ",", "k", ")", ")", "\n", "nStages", "=", "[", "self", ".", "in_planes", ",", "self", ".", "in_planes", "*", "2", "*", "k", ",", "self", ".", "in_planes", "*", "4", "*", "k", ",", "self", ".", "in_planes", "*", "8", "*", "k", "]", "\n", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "in_ch", ",", "nStages", "[", "0", "]", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_wide_layer", "(", "wide_basic", ",", "nStages", "[", "1", "]", ",", "n", ",", "dropout_rate", ",", "stride", "=", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_wide_layer", "(", "wide_basic", ",", "nStages", "[", "2", "]", ",", "n", ",", "dropout_rate", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_wide_layer", "(", "wide_basic", ",", "nStages", "[", "3", "]", ",", "n", ",", "dropout_rate", ",", "stride", "=", "2", ")", "\n", "\n", "dummy_in", "=", "torch", ".", "randn", "(", "1", ",", "in_ch", ",", "in_dim", ",", "in_dim", ")", "\n", "dummy_out", "=", "self", ".", "layer3", "(", "self", ".", "layer2", "(", "self", ".", "layer1", "(", "self", ".", "conv1", "(", "dummy_in", ")", ")", ")", ")", "\n", "self", ".", "pool_kernel", "=", "dummy_out", ".", "shape", "[", "-", "1", "]", "\n", "if", "self", ".", "use_pooling", ":", "\n", "            ", "dummy_out", "=", "F", ".", "avg_pool2d", "(", "dummy_out", ",", "self", ".", "pool_kernel", ")", "\n", "\n", "", "self", ".", "linear1", "=", "nn", ".", "Linear", "(", "dummy_out", ".", "numel", "(", ")", ",", "512", ")", "\n", "self", ".", "bn_dense", "=", "nn", ".", "BatchNorm1d", "(", "512", ")", "if", "bn_after_dense", "else", "None", "\n", "self", ".", "linear2", "=", "nn", ".", "Linear", "(", "dummy_out", ".", "numel", "(", ")", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet.Wide_ResNet._wide_layer": [[70, 79], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "block", "int"], "methods", ["None"], ["", "def", "_wide_layer", "(", "self", ",", "block", ",", "planes", ",", "num_blocks", ",", "dropout_rate", ",", "stride", ")", ":", "\n", "        ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "int", "(", "num_blocks", ")", "-", "1", ")", "\n", "layers", "=", "[", "]", "\n", "\n", "for", "stride", "in", "strides", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "in_planes", ",", "planes", ",", "dropout_rate", ",", "stride", ",", "self", ".", "use_bn", ")", ")", "\n", "self", ".", "in_planes", "=", "planes", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet.Wide_ResNet.forward": [[80, 91], ["wide_resnet.Wide_ResNet.conv1", "wide_resnet.Wide_ResNet.layer1", "wide_resnet.Wide_ResNet.layer2", "wide_resnet.Wide_ResNet.layer3", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.avg_pool2d.view", "wide_resnet.Wide_ResNet.linear2", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "if", "self", ".", "use_pooling", ":", "\n", "            ", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "self", ".", "pool_kernel", ")", "\n", "", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear2", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet.conv3x3": [[10, 12], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet.wide_resnet_cifar_bn": [[92, 94], ["wide_resnet.Wide_ResNet"], "function", ["None"], ["", "", "def", "wide_resnet_cifar_bn", "(", "in_ch", "=", "3", ",", "in_dim", "=", "32", ")", ":", "\n", "    ", "return", "Wide_ResNet", "(", "10", ",", "4", ",", "None", ",", "10", ",", "use_bn", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet.wide_resnet_cifar_10": [[95, 97], ["wide_resnet.Wide_ResNet"], "function", ["None"], ["", "def", "wide_resnet_cifar_10", "(", "in_ch", "=", "3", ",", "in_dim", "=", "32", ")", ":", "\n", "    ", "return", "Wide_ResNet", "(", "10", ",", "4", ",", "0.3", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet.wide_resnet_cifar": [[98, 100], ["wide_resnet.Wide_ResNet"], "function", ["None"], ["", "def", "wide_resnet_cifar", "(", "in_ch", "=", "3", ",", "in_dim", "=", "32", ")", ":", "\n", "    ", "return", "Wide_ResNet", "(", "16", ",", "4", ",", "0.3", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet.wide_resnet_mnist_bn": [[101, 103], ["wide_resnet.Wide_ResNet"], "function", ["None"], ["", "def", "wide_resnet_mnist_bn", "(", "in_ch", "=", "1", ",", "in_dim", "=", "28", ")", ":", "\n", "    ", "return", "Wide_ResNet", "(", "10", ",", "4", ",", "None", ",", "10", ",", "use_bn", "=", "True", ",", "use_pooling", "=", "True", ",", "in_ch", "=", "1", ",", "in_dim", "=", "28", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet.wide_resnet_cifar_bn_wo_pooling": [[104, 106], ["wide_resnet.Wide_ResNet"], "function", ["None"], ["", "def", "wide_resnet_cifar_bn_wo_pooling", "(", ")", ":", "# 1113M, 21M", "\n", "    ", "return", "Wide_ResNet", "(", "10", ",", "4", ",", "None", ",", "10", ",", "use_bn", "=", "True", ",", "use_pooling", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet.wide_resnet_cifar_bn_wo_pooling_dropout": [[107, 109], ["wide_resnet.Wide_ResNet"], "function", ["None"], ["", "def", "wide_resnet_cifar_bn_wo_pooling_dropout", "(", ")", ":", "# 1113M, 21M", "\n", "    ", "return", "Wide_ResNet", "(", "10", ",", "4", ",", "0.3", ",", "10", ",", "use_bn", "=", "True", ",", "use_pooling", "=", "False", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnet.PreActBlock.__init__": [[10, 20], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.ImageNet64.imagenet_data_loader.DatasetDownsampledImageNet.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "PreActBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnet.PreActBlock.forward": [[22, 29], ["torch.relu", "torch.relu", "torch.relu", "resnet.PreActBlock.conv1", "resnet.PreActBlock.conv2", "resnet.PreActBlock.bn1", "hasattr", "resnet.PreActBlock.shortcut", "torch.relu", "torch.relu", "torch.relu", "resnet.PreActBlock.bn2"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "x", ")", ")", "\n", "shortcut", "=", "self", ".", "shortcut", "(", "x", ")", "if", "hasattr", "(", "self", ",", "'shortcut'", ")", "else", "x", "\n", "out", "=", "self", ".", "conv1", "(", "out", ")", "\n", "out", "=", "self", ".", "conv2", "(", "F", ".", "relu", "(", "self", ".", "bn2", "(", "out", ")", ")", ")", "\n", "out", "+=", "shortcut", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnet.PreActBottleneck.__init__": [[35, 47], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.ImageNet64.imagenet_data_loader.DatasetDownsampledImageNet.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "PreActBottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnet.PreActBottleneck.forward": [[49, 57], ["torch.relu", "torch.relu", "torch.relu", "resnet.PreActBottleneck.conv1", "resnet.PreActBottleneck.conv2", "resnet.PreActBottleneck.conv3", "resnet.PreActBottleneck.bn1", "hasattr", "resnet.PreActBottleneck.shortcut", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "resnet.PreActBottleneck.bn2", "resnet.PreActBottleneck.bn3"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "x", ")", ")", "\n", "shortcut", "=", "self", ".", "shortcut", "(", "out", ")", "if", "hasattr", "(", "self", ",", "'shortcut'", ")", "else", "x", "\n", "out", "=", "self", ".", "conv1", "(", "out", ")", "\n", "out", "=", "self", ".", "conv2", "(", "F", ".", "relu", "(", "self", ".", "bn2", "(", "out", ")", ")", ")", "\n", "out", "=", "self", ".", "conv3", "(", "F", ".", "relu", "(", "self", ".", "bn3", "(", "out", ")", ")", ")", "\n", "out", "+=", "shortcut", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnet.PreActResNet.__init__": [[60, 70], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "resnet.PreActResNet._make_layer", "resnet.PreActResNet._make_layer", "resnet.PreActResNet._make_layer", "resnet.PreActResNet._make_layer", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.ImageNet64.imagenet_data_loader.DatasetDownsampledImageNet.__init__", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.ResNet._make_layer", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.ResNet._make_layer", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.ResNet._make_layer", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "num_blocks", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "PreActResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_planes", "=", "64", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "num_blocks", "[", "0", "]", ",", "stride", "=", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "num_blocks", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "num_blocks", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "num_blocks", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "512", "*", "block", ".", "expansion", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnet.PreActResNet._make_layer": [[71, 78], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "num_blocks", ",", "stride", ")", ":", "\n", "        ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "num_blocks", "-", "1", ")", "\n", "layers", "=", "[", "]", "\n", "for", "stride", "in", "strides", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "in_planes", ",", "planes", ",", "stride", ")", ")", "\n", "self", ".", "in_planes", "=", "planes", "*", "block", ".", "expansion", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnet.PreActResNet.forward": [[79, 90], ["resnet.PreActResNet.conv1", "resnet.PreActResNet.layer1", "resnet.PreActResNet.layer2", "resnet.PreActResNet.layer3", "resnet.PreActResNet.layer4", "torch.relu", "torch.relu", "torch.relu", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "resnet.PreActResNet.view", "resnet.PreActResNet.linear", "resnet.PreActResNet.bn", "resnet.PreActResNet.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "self", ".", "layer4", "(", "out", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn", "(", "out", ")", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "4", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnet.PreActResNet18": [[92, 94], ["resnet.PreActResNet"], "function", ["None"], ["", "", "def", "PreActResNet18", "(", "in_ch", "=", "3", ",", "in_dim", "=", "32", ")", ":", "\n", "    ", "return", "PreActResNet", "(", "PreActBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.feedforward.cnn_7layer": [[9, 27], ["torch.Sequential", "torch.Conv2d", "torch.ReLU", "torch.Conv2d", "torch.ReLU", "torch.Conv2d", "torch.ReLU", "torch.Conv2d", "torch.ReLU", "torch.Conv2d", "torch.ReLU", "utils.Flatten", "torch.Linear", "torch.ReLU", "torch.Linear"], "function", ["None"], ["def", "cnn_7layer", "(", "in_ch", "=", "3", ",", "in_dim", "=", "32", ",", "width", "=", "64", ",", "linear_size", "=", "512", ")", ":", "\n", "    ", "model", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_ch", ",", "width", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "width", ",", "width", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "width", ",", "2", "*", "width", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "width", ",", "2", "*", "width", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "width", ",", "2", "*", "width", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "(", "in_dim", "//", "2", ")", "*", "(", "in_dim", "//", "2", ")", "*", "2", "*", "width", ",", "linear_size", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "linear_size", ",", "10", ")", "\n", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.feedforward.cnn_7layer_bn": [[28, 51], ["torch.Sequential", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "utils.Flatten", "torch.Linear", "torch.ReLU", "torch.Linear"], "function", ["None"], ["", "def", "cnn_7layer_bn", "(", "in_ch", "=", "3", ",", "in_dim", "=", "32", ",", "width", "=", "64", ",", "linear_size", "=", "512", ")", ":", "\n", "    ", "model", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_ch", ",", "width", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "width", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "width", ",", "width", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "width", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "width", ",", "2", "*", "width", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "width", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "width", ",", "2", "*", "width", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "width", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "width", ",", "2", "*", "width", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "width", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "(", "in_dim", "//", "2", ")", "*", "(", "in_dim", "//", "2", ")", "*", "2", "*", "width", ",", "linear_size", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "linear_size", ",", "10", ")", "\n", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.feedforward.cnn_7layer_bn2": [[52, 76], ["torch.Sequential", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "utils.Flatten", "torch.Linear", "torch.BatchNorm1d", "torch.ReLU", "torch.Linear"], "function", ["None"], ["", "def", "cnn_7layer_bn2", "(", "in_ch", "=", "3", ",", "in_dim", "=", "32", ",", "width", "=", "64", ",", "linear_size", "=", "512", ",", "num_class", "=", "10", ")", ":", "\n", "    ", "model", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_ch", ",", "width", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "width", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "width", ",", "width", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "width", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "width", ",", "2", "*", "width", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "width", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "width", ",", "2", "*", "width", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "width", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "width", ",", "2", "*", "width", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "width", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "(", "in_dim", "//", "2", ")", "*", "(", "in_dim", "//", "2", ")", "*", "2", "*", "width", ",", "linear_size", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "linear_size", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "linear_size", ",", "num_class", ")", "\n", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.feedforward.cnn": [[77, 79], ["feedforward.cnn_7layer_bn2"], "function", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.feedforward.cnn_7layer_bn2"], ["", "def", "cnn", "(", "in_ch", "=", "3", ",", "in_dim", "=", "32", ")", ":", "\n", "    ", "return", "cnn_7layer_bn2", "(", "in_ch", ",", "in_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.feedforward.cnn_wide": [[80, 82], ["feedforward.cnn_7layer_bn2"], "function", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.feedforward.cnn_7layer_bn2"], ["", "def", "cnn_wide", "(", "in_ch", "=", "3", ",", "in_dim", "=", "32", ")", ":", "\n", "    ", "return", "cnn_7layer_bn2", "(", "in_ch", ",", "in_dim", ",", "width", "=", "128", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.feedforward.cnn_7layer_imagenet": [[83, 105], ["torch.Sequential", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.ReLU", "utils.Flatten", "torch.Linear", "torch.ReLU", "torch.Linear"], "function", ["None"], ["", "def", "cnn_7layer_imagenet", "(", "in_ch", "=", "3", ",", "in_dim", "=", "32", ",", "width", "=", "64", ",", "linear_size", "=", "512", ")", ":", "\n", "    ", "model", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_ch", ",", "width", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "width", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "width", ",", "width", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "width", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "width", ",", "2", "*", "width", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "width", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "width", ",", "2", "*", "width", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "width", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "width", ",", "2", "*", "width", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "32768", ",", "linear_size", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "linear_size", ",", "200", ")", "\n", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.feedforward.cnn_7layer_bn_imagenet": [[106, 130], ["torch.Sequential", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "utils.Flatten", "torch.Linear", "torch.BatchNorm1d", "torch.ReLU", "torch.Linear"], "function", ["None"], ["", "def", "cnn_7layer_bn_imagenet", "(", "in_ch", "=", "3", ",", "in_dim", "=", "32", ",", "width", "=", "64", ",", "linear_size", "=", "512", ")", ":", "\n", "    ", "model", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_ch", ",", "width", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "width", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "width", ",", "width", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "width", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "width", ",", "2", "*", "width", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "width", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "width", ",", "2", "*", "width", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "width", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "width", ",", "2", "*", "width", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "width", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "32768", ",", "linear_size", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "linear_size", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "linear_size", ",", "200", ")", "\n", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.feedforward.cnn_6layer": [[131, 147], ["torch.Sequential", "torch.Conv2d", "torch.ReLU", "torch.Conv2d", "torch.ReLU", "torch.Conv2d", "torch.ReLU", "torch.Conv2d", "torch.ReLU", "utils.Flatten", "torch.Linear", "torch.ReLU", "torch.Linear"], "function", ["None"], ["", "def", "cnn_6layer", "(", "in_ch", ",", "in_dim", ",", "width", "=", "32", ",", "linear_size", "=", "256", ")", ":", "\n", "    ", "model", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_ch", ",", "width", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "width", ",", "width", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "width", ",", "2", "*", "width", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "width", ",", "2", "*", "width", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "(", "in_dim", "//", "2", ")", "*", "(", "in_dim", "//", "2", ")", "*", "2", "*", "width", ",", "linear_size", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "linear_size", ",", "10", ")", "\n", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.feedforward.cnn_6layer_bn2": [[149, 170], ["torch.Sequential", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "utils.Flatten", "torch.Linear", "torch.BatchNorm1d", "torch.ReLU", "torch.Linear"], "function", ["None"], ["", "def", "cnn_6layer_bn2", "(", "in_ch", ",", "in_dim", ",", "width", "=", "32", ",", "linear_size", "=", "256", ",", "num_class", "=", "10", ")", ":", "\n", "    ", "model", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_ch", ",", "width", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "width", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "width", ",", "width", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "width", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "width", ",", "2", "*", "width", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "width", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "width", ",", "2", "*", "width", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "width", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "(", "in_dim", "//", "2", ")", "*", "(", "in_dim", "//", "2", ")", "*", "2", "*", "width", ",", "linear_size", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "linear_size", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "linear_size", ",", "num_class", ")", "\n", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.feedforward.cnn_large": [[172, 190], ["torch.Sequential", "torch.Conv2d", "torch.ReLU", "torch.Conv2d", "torch.ReLU", "torch.Conv2d", "torch.ReLU", "torch.Conv2d", "torch.ReLU", "torch.Conv2d", "torch.ReLU", "utils.Flatten", "torch.Linear", "torch.ReLU", "torch.Linear"], "function", ["None"], ["def", "cnn_large", "(", "in_ch", ",", "in_dim", ",", "num_classes", "=", "10", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_ch", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "128", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "128", "*", "(", "in_dim", "//", "2", ")", "*", "(", "in_dim", "//", "2", ")", ",", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "512", ",", "num_classes", ")", "\n", ")", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnext_bn.Block.__init__": [[11, 26], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Identity", "torch.Identity", "torch.Identity", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Identity", "torch.Identity", "torch.Identity", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Identity", "torch.Identity", "torch.Identity", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Identity", "torch.Identity", "torch.Identity"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.ImageNet64.imagenet_data_loader.DatasetDownsampledImageNet.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "cardinality", "=", "32", ",", "bottleneck_width", "=", "4", ",", "stride", "=", "1", ",", "bn", "=", "True", ")", ":", "\n", "        ", "super", "(", "Block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "group_width", "=", "cardinality", "*", "bottleneck_width", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "group_width", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "group_width", ")", "if", "bn", "else", "nn", ".", "Identity", "(", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "group_width", ",", "group_width", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "groups", "=", "cardinality", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "group_width", ")", "if", "bn", "else", "nn", ".", "Identity", "(", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "group_width", ",", "self", ".", "expansion", "*", "group_width", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "group_width", ")", "if", "bn", "else", "nn", ".", "Identity", "(", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "group_width", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "group_width", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "group_width", ")", "if", "bn", "else", "nn", ".", "Identity", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnext_bn.Block.forward": [[28, 35], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "resnext_bn.Block.bn3", "resnext_bn.Block.shortcut", "torch.relu", "torch.relu", "torch.relu", "resnext_bn.Block.bn1", "resnext_bn.Block.bn2", "resnext_bn.Block.conv3", "resnext_bn.Block.conv1", "resnext_bn.Block.conv2"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", ")", "\n", "out", "=", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out", ")", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnext_bn.ResNeXt.__init__": [[38, 55], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "resnext_bn.ResNeXt._make_layer", "resnext_bn.ResNeXt._make_layer", "resnext_bn.ResNeXt._make_layer", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Identity", "torch.Identity", "torch.Identity", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Identity", "torch.Identity", "torch.Identity"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.ImageNet64.imagenet_data_loader.DatasetDownsampledImageNet.__init__", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.ResNet._make_layer", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.ResNet._make_layer", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "num_blocks", ",", "cardinality", ",", "bottleneck_width", ",", "\n", "num_classes", "=", "10", ",", "in_ch", "=", "3", ",", "in_dim", "=", "32", ",", "bn", "=", "True", ")", ":", "\n", "        ", "super", "(", "ResNeXt", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cardinality", "=", "cardinality", "\n", "self", ".", "bottleneck_width", "=", "bottleneck_width", "\n", "self", ".", "in_planes", "=", "64", "\n", "self", ".", "bn", "=", "bn", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_ch", ",", "self", ".", "in_planes", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "in_planes", ")", "if", "bn", "else", "nn", ".", "Identity", "(", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "num_blocks", "[", "0", "]", ",", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "num_blocks", "[", "1", "]", ",", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "num_blocks", "[", "2", "]", ",", "2", ")", "\n", "\n", "self", ".", "linear1", "=", "nn", ".", "Linear", "(", "self", ".", "in_planes", "*", "(", "(", "in_dim", "//", "4", ")", "**", "2", ")", ",", "512", ")", "\n", "self", ".", "bn_dense", "=", "nn", ".", "BatchNorm1d", "(", "512", ")", "if", "bn", "else", "nn", ".", "Identity", "(", ")", "\n", "self", ".", "linear2", "=", "nn", ".", "Linear", "(", "512", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnext_bn.ResNeXt._make_layer": [[56, 65], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "resnext_bn.Block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "num_blocks", ",", "stride", ")", ":", "\n", "        ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "num_blocks", "-", "1", ")", "\n", "layers", "=", "[", "]", "\n", "for", "stride", "in", "strides", ":", "\n", "            ", "layers", ".", "append", "(", "Block", "(", "self", ".", "in_planes", ",", "self", ".", "cardinality", ",", "self", ".", "bottleneck_width", ",", "stride", ",", "bn", "=", "self", ".", "bn", ")", ")", "\n", "self", ".", "in_planes", "=", "Block", ".", "expansion", "*", "self", ".", "cardinality", "*", "self", ".", "bottleneck_width", "\n", "# Increase bottleneck_width by 2 after each stage.", "\n", "", "self", ".", "bottleneck_width", "*=", "Block", ".", "expansion", "\n", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnext_bn.ResNeXt.forward": [[66, 75], ["torch.relu", "torch.relu", "torch.relu", "resnext_bn.ResNeXt.layer1", "resnext_bn.ResNeXt.layer2", "resnext_bn.ResNeXt.layer3", "torch.relu", "torch.relu", "torch.relu", "resnext_bn.ResNeXt.linear2", "resnext_bn.ResNeXt.bn1", "utils.Flatten", "resnext_bn.ResNeXt.bn_dense", "resnext_bn.ResNeXt.conv1", "resnext_bn.ResNeXt.linear1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "Flatten", "(", ")", "(", "out", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn_dense", "(", "self", ".", "linear1", "(", "out", ")", ")", ")", "\n", "out", "=", "self", ".", "linear2", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnext_bn.ResNeXt_2_32": [[76, 79], ["resnext_bn.ResNeXt"], "function", ["None"], ["", "", "def", "ResNeXt_2_32", "(", "in_ch", "=", "3", ",", "in_dim", "=", "32", ",", "bn", "=", "True", ")", ":", "\n", "    ", "return", "ResNeXt", "(", "num_blocks", "=", "[", "1", ",", "1", ",", "1", "]", ",", "cardinality", "=", "2", ",", "bottleneck_width", "=", "32", ",", "\n", "in_ch", "=", "in_ch", ",", "in_dim", "=", "in_dim", ",", "bn", "=", "bn", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnext_bn.ResNeXt_4_20": [[80, 82], ["resnext_bn.ResNeXt"], "function", ["None"], ["", "def", "ResNeXt_4_20", "(", "in_ch", "=", "3", ",", "in_dim", "=", "32", ")", ":", "\n", "    ", "return", "ResNeXt", "(", "num_blocks", "=", "[", "1", ",", "1", ",", "1", "]", ",", "cardinality", "=", "4", ",", "bottleneck_width", "=", "20", ",", "in_ch", "=", "in_ch", ",", "in_dim", "=", "in_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnext_bn.resnext": [[83, 85], ["resnext_bn.ResNeXt_2_32"], "function", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnext_bn.ResNeXt_2_32"], ["", "def", "resnext", "(", "in_ch", "=", "3", ",", "in_dim", "=", "32", ")", ":", "\n", "    ", "return", "ResNeXt_2_32", "(", "in_ch", ",", "in_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnext_bn.resnext_no_bn": [[86, 88], ["resnext_bn.ResNeXt_2_32"], "function", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnext_bn.ResNeXt_2_32"], ["", "def", "resnext_no_bn", "(", "in_ch", "=", "3", ",", "in_dim", "=", "32", ")", ":", "\n", "    ", "return", "ResNeXt_2_32", "(", "in_ch", ",", "in_dim", ",", "bn", "=", "False", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_imagenet64.wide_basic.__init__": [[22, 34], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.ImageNet64.imagenet_data_loader.DatasetDownsampledImageNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "dropout_rate", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "wide_basic", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", "\n", "# self.dropout = nn.Dropout(p=dropout_rate)", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "True", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_imagenet64.wide_basic.forward": [[36, 41], ["wide_resnet_imagenet64.wide_basic.conv1", "wide_resnet_imagenet64.wide_basic.conv2", "wide_resnet_imagenet64.wide_basic.shortcut", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "wide_resnet_imagenet64.wide_basic.bn1", "wide_resnet_imagenet64.wide_basic.bn2"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "F", ".", "relu", "(", "self", ".", "bn1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "conv2", "(", "F", ".", "relu", "(", "self", ".", "bn2", "(", "out", ")", ")", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_imagenet64.wide_basic_bn.__init__": [[44, 55], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.ImageNet64.imagenet_data_loader.DatasetDownsampledImageNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "dropout_rate", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "wide_basic_bn", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_imagenet64.wide_basic_bn.forward": [[57, 62], ["wide_resnet_imagenet64.wide_basic_bn.conv1", "wide_resnet_imagenet64.wide_basic_bn.conv2", "wide_resnet_imagenet64.wide_basic_bn.shortcut", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "wide_resnet_imagenet64.wide_basic_bn.bn1", "wide_resnet_imagenet64.wide_basic_bn.bn2"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "F", ".", "relu", "(", "self", ".", "bn1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "conv2", "(", "F", ".", "relu", "(", "self", ".", "bn2", "(", "out", ")", ")", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_imagenet64.Wide_ResNet_bn.__init__": [[65, 82], ["torch.Module.__init__", "print", "wide_resnet_imagenet64.conv3x3", "wide_resnet_imagenet64.Wide_ResNet_bn._wide_layer", "wide_resnet_imagenet64.Wide_ResNet_bn._wide_layer", "wide_resnet_imagenet64.Wide_ResNet_bn._wide_layer", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.ImageNet64.imagenet_data_loader.DatasetDownsampledImageNet.__init__", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.conv3x3", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_imagenet64.Wide_ResNet._wide_layer", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_imagenet64.Wide_ResNet._wide_layer", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_imagenet64.Wide_ResNet._wide_layer"], ["    ", "def", "__init__", "(", "self", ",", "depth", ",", "widen_factor", ",", "dropout_rate", ",", "num_classes", ")", ":", "\n", "        ", "super", "(", "Wide_ResNet_bn", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_planes", "=", "16", "\n", "\n", "assert", "(", "(", "depth", "-", "4", ")", "%", "6", "==", "0", ")", ",", "'Wide-resnet depth should be 6n+4'", "\n", "n", "=", "(", "depth", "-", "4", ")", "/", "6", "\n", "k", "=", "widen_factor", "\n", "\n", "print", "(", "'| Wide-Resnet %dx%d'", "%", "(", "depth", ",", "k", ")", ")", "\n", "nStages", "=", "[", "16", ",", "16", "*", "k", ",", "32", "*", "k", ",", "64", "*", "k", "]", "\n", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "3", ",", "nStages", "[", "0", "]", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_wide_layer", "(", "wide_basic_bn", ",", "nStages", "[", "1", "]", ",", "n", ",", "dropout_rate", ",", "stride", "=", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_wide_layer", "(", "wide_basic_bn", ",", "nStages", "[", "2", "]", ",", "n", ",", "dropout_rate", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_wide_layer", "(", "wide_basic_bn", ",", "nStages", "[", "3", "]", ",", "n", ",", "dropout_rate", ",", "stride", "=", "2", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "nStages", "[", "3", "]", ",", "momentum", "=", "0.1", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "2560", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_imagenet64.Wide_ResNet_bn._wide_layer": [[83, 92], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "block", "int"], "methods", ["None"], ["", "def", "_wide_layer", "(", "self", ",", "block", ",", "planes", ",", "num_blocks", ",", "dropout_rate", ",", "stride", ")", ":", "\n", "        ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "int", "(", "num_blocks", ")", "-", "1", ")", "\n", "layers", "=", "[", "]", "\n", "\n", "for", "stride", "in", "strides", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "in_planes", ",", "planes", ",", "dropout_rate", ",", "stride", ")", ")", "\n", "self", ".", "in_planes", "=", "planes", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_imagenet64.Wide_ResNet_bn.forward": [[93, 104], ["wide_resnet_imagenet64.Wide_ResNet_bn.conv1", "wide_resnet_imagenet64.Wide_ResNet_bn.layer1", "wide_resnet_imagenet64.Wide_ResNet_bn.layer2", "wide_resnet_imagenet64.Wide_ResNet_bn.layer3", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "wide_resnet_imagenet64.Wide_ResNet_bn.view", "wide_resnet_imagenet64.Wide_ResNet_bn.linear", "wide_resnet_imagenet64.Wide_ResNet_bn.bn1", "wide_resnet_imagenet64.Wide_ResNet_bn.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "out", ")", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "7", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_imagenet64.Wide_ResNet.__init__": [[108, 125], ["torch.Module.__init__", "print", "wide_resnet_imagenet64.conv3x3", "wide_resnet_imagenet64.Wide_ResNet._wide_layer", "wide_resnet_imagenet64.Wide_ResNet._wide_layer", "wide_resnet_imagenet64.Wide_ResNet._wide_layer", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.ImageNet64.imagenet_data_loader.DatasetDownsampledImageNet.__init__", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.conv3x3", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_imagenet64.Wide_ResNet._wide_layer", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_imagenet64.Wide_ResNet._wide_layer", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_imagenet64.Wide_ResNet._wide_layer"], ["    ", "def", "__init__", "(", "self", ",", "depth", ",", "widen_factor", ",", "dropout_rate", ",", "num_classes", ")", ":", "\n", "        ", "super", "(", "Wide_ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_planes", "=", "16", "\n", "\n", "assert", "(", "(", "depth", "-", "4", ")", "%", "6", "==", "0", ")", ",", "'Wide-resnet depth should be 6n+4'", "\n", "n", "=", "(", "depth", "-", "4", ")", "/", "6", "\n", "k", "=", "widen_factor", "\n", "\n", "print", "(", "'| Wide-Resnet %dx%d'", "%", "(", "depth", ",", "k", ")", ")", "\n", "nStages", "=", "[", "16", ",", "16", "*", "k", ",", "32", "*", "k", ",", "64", "*", "k", "]", "\n", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "3", ",", "nStages", "[", "0", "]", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_wide_layer", "(", "wide_basic", ",", "nStages", "[", "1", "]", ",", "n", ",", "dropout_rate", ",", "stride", "=", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_wide_layer", "(", "wide_basic", ",", "nStages", "[", "2", "]", ",", "n", ",", "dropout_rate", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_wide_layer", "(", "wide_basic", ",", "nStages", "[", "3", "]", ",", "n", ",", "dropout_rate", ",", "stride", "=", "2", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "nStages", "[", "3", "]", ",", "momentum", "=", "0.1", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "2560", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_imagenet64.Wide_ResNet._wide_layer": [[126, 135], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "block", "int"], "methods", ["None"], ["", "def", "_wide_layer", "(", "self", ",", "block", ",", "planes", ",", "num_blocks", ",", "dropout_rate", ",", "stride", ")", ":", "\n", "        ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "int", "(", "num_blocks", ")", "-", "1", ")", "\n", "layers", "=", "[", "]", "\n", "\n", "for", "stride", "in", "strides", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "in_planes", ",", "planes", ",", "dropout_rate", ",", "stride", ")", ")", "\n", "self", ".", "in_planes", "=", "planes", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_imagenet64.Wide_ResNet.forward": [[136, 147], ["wide_resnet_imagenet64.Wide_ResNet.conv1", "wide_resnet_imagenet64.Wide_ResNet.layer1", "wide_resnet_imagenet64.Wide_ResNet.layer2", "wide_resnet_imagenet64.Wide_ResNet.layer3", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "wide_resnet_imagenet64.Wide_ResNet.view", "wide_resnet_imagenet64.Wide_ResNet.linear", "wide_resnet_imagenet64.Wide_ResNet.bn1", "wide_resnet_imagenet64.Wide_ResNet.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "out", ")", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "7", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_imagenet64.conv3x3": [[9, 11], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_imagenet64.conv_init": [[12, 20], ["classname.find", "torch.xavier_uniform_", "torch.constant_", "classname.find", "torch.constant_", "torch.constant_", "numpy.sqrt"], "function", ["None"], ["", "def", "conv_init", "(", "m", ")", ":", "\n", "    ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "classname", ".", "find", "(", "'Conv'", ")", "!=", "-", "1", ":", "\n", "        ", "init", ".", "xavier_uniform_", "(", "m", ".", "weight", ",", "gain", "=", "np", ".", "sqrt", "(", "2", ")", ")", "\n", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "elif", "classname", ".", "find", "(", "'BatchNorm'", ")", "!=", "-", "1", ":", "\n", "        ", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_imagenet64.wide_resnet_imagenet64": [[148, 150], ["wide_resnet_imagenet64.Wide_ResNet"], "function", ["None"], ["", "", "def", "wide_resnet_imagenet64", "(", "in_ch", "=", "3", ",", "in_dim", "=", "56", ")", ":", "\n", "    ", "return", "Wide_ResNet", "(", "16", ",", "10", ",", "0.3", ",", "200", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_imagenet64.wide_resnet_imagenet64_1000class": [[151, 153], ["wide_resnet_imagenet64.Wide_ResNet"], "function", ["None"], ["", "def", "wide_resnet_imagenet64_1000class", "(", ")", ":", "\n", "    ", "return", "Wide_ResNet", "(", "10", ",", "10", ",", "0.3", ",", "1000", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnext.Block.__init__": [[14, 25], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.ImageNet64.imagenet_data_loader.DatasetDownsampledImageNet.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "cardinality", "=", "32", ",", "bottleneck_width", "=", "4", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "Block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "group_width", "=", "cardinality", "*", "bottleneck_width", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "group_width", ",", "kernel_size", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "group_width", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "group_width", ",", "group_width", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "groups", "=", "cardinality", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "group_width", ",", "self", ".", "expansion", "*", "group_width", ",", "kernel_size", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "group_width", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "group_width", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "True", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnext.Block.forward": [[27, 34], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "resnext.Block.conv3", "resnext.Block.shortcut", "torch.relu", "torch.relu", "torch.relu", "resnext.Block.bn1", "resnext.Block.conv2", "resnext.Block.conv1"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "conv2", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnext.ResNeXt.__init__": [[37, 53], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "resnext.ResNeXt._make_layer", "resnext.ResNeXt._make_layer", "resnext.ResNeXt._make_layer", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "resnext.ResNeXt.layer3", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "resnext.ResNeXt.layer2", "resnext.ResNeXt.numel", "resnext.ResNeXt.layer1", "resnext.ResNeXt.conv1"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.ImageNet64.imagenet_data_loader.DatasetDownsampledImageNet.__init__", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.ResNet._make_layer", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.ResNet._make_layer", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "num_blocks", ",", "cardinality", ",", "bottleneck_width", ",", "num_classes", "=", "10", ",", "in_ch", "=", "3", ",", "in_dim", "=", "32", ")", ":", "\n", "        ", "super", "(", "ResNeXt", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cardinality", "=", "cardinality", "\n", "self", ".", "bottleneck_width", "=", "bottleneck_width", "\n", "self", ".", "in_planes", "=", "16", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_ch", ",", "16", ",", "kernel_size", "=", "3", ",", "bias", "=", "True", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "num_blocks", "[", "0", "]", ",", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "num_blocks", "[", "1", "]", ",", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "num_blocks", "[", "2", "]", ",", "2", ")", "\n", "\n", "dummy_input", "=", "torch", ".", "zeros", "(", "1", ",", "in_ch", ",", "in_dim", ",", "in_dim", ")", "\n", "dummy_out", "=", "self", ".", "layer3", "(", "self", ".", "layer2", "(", "self", ".", "layer1", "(", "self", ".", "conv1", "(", "dummy_input", ")", ")", ")", ")", "\n", "\n", "self", ".", "linear1", "=", "nn", ".", "Linear", "(", "dummy_out", ".", "numel", "(", ")", ",", "512", ")", "\n", "self", ".", "linear2", "=", "nn", ".", "Linear", "(", "512", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnext.ResNeXt._make_layer": [[54, 63], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "resnext.Block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "num_blocks", ",", "stride", ")", ":", "\n", "        ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "num_blocks", "-", "1", ")", "\n", "layers", "=", "[", "]", "\n", "for", "stride", "in", "strides", ":", "\n", "            ", "layers", ".", "append", "(", "Block", "(", "self", ".", "in_planes", ",", "self", ".", "cardinality", ",", "self", ".", "bottleneck_width", ",", "stride", ")", ")", "\n", "self", ".", "in_planes", "=", "Block", ".", "expansion", "*", "self", ".", "cardinality", "*", "self", ".", "bottleneck_width", "\n", "# Increase bottleneck_width by 2 after each stage.", "\n", "", "self", ".", "bottleneck_width", "*=", "2", "\n", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnext.ResNeXt.forward": [[64, 73], ["torch.relu", "torch.relu", "torch.relu", "resnext.ResNeXt.layer1", "resnext.ResNeXt.layer2", "resnext.ResNeXt.layer3", "resnext.ResNeXt.view", "torch.relu", "torch.relu", "torch.relu", "resnext.ResNeXt.linear2", "resnext.ResNeXt.bn1", "resnext.ResNeXt.size", "resnext.ResNeXt.linear1", "resnext.ResNeXt.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "linear1", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "linear2", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnext.ResNeXt29_2x64d": [[74, 76], ["resnext.ResNeXt"], "function", ["None"], ["", "", "def", "ResNeXt29_2x64d", "(", ")", ":", "\n", "    ", "return", "ResNeXt", "(", "num_blocks", "=", "[", "3", ",", "3", ",", "3", "]", ",", "cardinality", "=", "2", ",", "bottleneck_width", "=", "64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnext.ResNeXt29_4x64d": [[77, 79], ["resnext.ResNeXt"], "function", ["None"], ["", "def", "ResNeXt29_4x64d", "(", ")", ":", "\n", "    ", "return", "ResNeXt", "(", "num_blocks", "=", "[", "3", ",", "3", ",", "3", "]", ",", "cardinality", "=", "4", ",", "bottleneck_width", "=", "64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnext.ResNeXt29_8x64d": [[80, 82], ["resnext.ResNeXt"], "function", ["None"], ["", "def", "ResNeXt29_8x64d", "(", ")", ":", "\n", "    ", "return", "ResNeXt", "(", "num_blocks", "=", "[", "3", ",", "3", ",", "3", "]", ",", "cardinality", "=", "8", ",", "bottleneck_width", "=", "64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnext.ResNeXt29_32x4d": [[83, 85], ["resnext.ResNeXt"], "function", ["None"], ["", "def", "ResNeXt29_32x4d", "(", ")", ":", "\n", "    ", "return", "ResNeXt", "(", "num_blocks", "=", "[", "3", ",", "3", ",", "3", "]", ",", "cardinality", "=", "32", ",", "bottleneck_width", "=", "4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnext.ResNeXt_cifar": [[86, 88], ["resnext.ResNeXt"], "function", ["None"], ["", "def", "ResNeXt_cifar", "(", ")", ":", "\n", "    ", "return", "ResNeXt", "(", "num_blocks", "=", "[", "1", ",", "1", ",", "1", "]", ",", "cardinality", "=", "2", ",", "bottleneck_width", "=", "32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.resnext.resnext": [[89, 91], ["resnext.ResNeXt"], "function", ["None"], ["", "def", "resnext", "(", "in_ch", "=", "3", ",", "in_dim", "=", "32", ")", ":", "\n", "    ", "return", "ResNeXt", "(", "num_blocks", "=", "[", "1", ",", "1", ",", "1", "]", ",", "cardinality", "=", "2", ",", "bottleneck_width", "=", "32", ",", "in_ch", "=", "in_ch", ",", "in_dim", "=", "in_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.utils.Flatten.forward": [[6, 8], ["x.view", "x.size"], "methods", ["None"], ["import", "torch", ".", "nn", "as", "nn", "\n", "import", "torch", ".", "optim", "as", "optim", "\n", "import", "numpy", "as", "np", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.BasicBlock.__init__": [[18, 28], ["torch.Module.__init__", "wide_resnet_bn.conv3x3", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "wide_resnet_bn.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Identity", "torch.Identity", "torch.Identity", "torch.Identity", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Identity", "torch.Identity", "torch.Identity", "torch.Identity"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.ImageNet64.imagenet_data_loader.DatasetDownsampledImageNet.__init__", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.conv3x3", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.conv3x3"], ["    ", "def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ",", "residual", "=", "True", ",", "bn", "=", "True", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "if", "bn", "else", "nn", ".", "Identity", "(", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "if", "bn", "else", "nn", ".", "Identity", "(", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "residual", "=", "residual", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.BasicBlock.forward": [[29, 47], ["wide_resnet_bn.BasicBlock.conv1", "wide_resnet_bn.BasicBlock.bn1", "wide_resnet_bn.BasicBlock.relu", "wide_resnet_bn.BasicBlock.conv2", "wide_resnet_bn.BasicBlock.bn2", "wide_resnet_bn.BasicBlock.relu", "wide_resnet_bn.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "residual", ":", "\n", "            ", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "                ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "", "out", "+=", "identity", "\n", "\n", "", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.ResNet.__init__": [[50, 96], ["torch.Module.__init__", "wide_resnet_bn.conv3x3", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "wide_resnet_bn.ResNet._make_layer", "wide_resnet_bn.ResNet._make_layer", "wide_resnet_bn.ResNet._make_layer", "wide_resnet_bn.ResNet.modules", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Identity", "torch.Identity", "torch.Identity", "torch.Identity", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "isinstance", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Identity", "torch.Identity", "torch.Identity", "torch.Identity", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Identity", "torch.Identity", "torch.Identity", "torch.Identity", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.ImageNet64.imagenet_data_loader.DatasetDownsampledImageNet.__init__", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.conv3x3", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.ResNet._make_layer", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.ResNet._make_layer", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.ResNet._make_layer"], ["    ", "def", "__init__", "(", "\n", "self", ",", "block", ",", "layers", ",", "num_classes", "=", "1000", ",", "\n", "zero_init_residual", "=", "False", ",", "dense", "=", "False", ",", "residual", "=", "True", ",", "\n", "widen_factor", "=", "1", ",", "base_width", "=", "16", ",", "pool", "=", "True", ",", "\n", "in_ch", "=", "3", ",", "in_dim", "=", "32", ",", "bn", "=", "True", "\n", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "residual", "=", "residual", "\n", "\n", "self", ".", "inplanes", "=", "base_width", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "in_ch", ",", "self", ".", "inplanes", ")", "\n", "self", ".", "bn", "=", "bn", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "inplanes", ")", "if", "bn", "else", "nn", ".", "Identity", "(", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "base_width", "*", "widen_factor", ",", "layers", "[", "0", "]", ",", "stride", "=", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "base_width", "*", "2", "*", "widen_factor", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "base_width", "*", "4", "*", "widen_factor", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "\n", "self", ".", "pool", "=", "pool", "\n", "if", "pool", ":", "\n", "            ", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "\n", "if", "dense", ":", "\n", "                ", "dim_dense", "=", "512", "\n", "self", ".", "dense", "=", "nn", ".", "Linear", "(", "self", ".", "inplanes", ",", "dim_dense", ")", "\n", "self", ".", "dense_bn", "=", "nn", ".", "BatchNorm1d", "(", "dim_dense", ")", "if", "bn", "else", "nn", ".", "Identity", "(", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "dim_dense", ",", "num_classes", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "dense", "=", "None", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "self", ".", "inplanes", ",", "num_classes", ")", "\n", "\n", "", "", "else", ":", "\n", "            ", "assert", "dense", "\n", "dim_dense", "=", "512", "\n", "self", ".", "dense", "=", "nn", ".", "Linear", "(", "self", ".", "inplanes", "*", "(", "(", "in_dim", "//", "4", ")", "**", "2", ")", ",", "dim_dense", ")", "\n", "self", ".", "dense_bn", "=", "nn", ".", "BatchNorm1d", "(", "dim_dense", ")", "if", "bn", "else", "nn", ".", "Identity", "(", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "dim_dense", ",", "num_classes", ")", "\n", "\n", "", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "(", "nn", ".", "BatchNorm2d", ",", "nn", ".", "GroupNorm", ")", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.ResNet._make_layer": [[97, 114], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "wide_resnet_bn.conv1x1", "block", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Identity", "torch.Identity", "torch.Identity", "torch.Identity"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.conv1x1"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", ")", ":", "\n", "        ", "if", "blocks", "==", "0", ":", "\n", "            ", "return", "nn", ".", "Sequential", "(", ")", "\n", "\n", "", "downsample", "=", "None", "\n", "if", "self", ".", "residual", "and", "(", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", ")", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "conv1x1", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", ")", "if", "self", ".", "bn", "else", "nn", ".", "Identity", "(", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ",", "residual", "=", "self", ".", "residual", ",", "bn", "=", "self", ".", "bn", ")", "]", "\n", "for", "_", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "planes", ",", "planes", ",", "residual", "=", "self", ".", "residual", ")", ")", "\n", "", "self", ".", "inplanes", "=", "planes", "\n", "\n", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.ResNet.forward": [[115, 134], ["wide_resnet_bn.ResNet.conv1", "wide_resnet_bn.ResNet.bn1", "wide_resnet_bn.ResNet.relu", "wide_resnet_bn.ResNet.layer1", "wide_resnet_bn.ResNet.layer2", "wide_resnet_bn.ResNet.layer3", "wide_resnet_bn.ResNet.fc", "wide_resnet_bn.ResNet.avgpool", "utils.Flatten", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "wide_resnet_bn.ResNet.dense_bn", "wide_resnet_bn.ResNet.dense"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "\n", "if", "self", ".", "pool", ":", "\n", "            ", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "\n", "", "x", "=", "Flatten", "(", ")", "(", "x", ")", "\n", "\n", "if", "self", ".", "dense", ":", "\n", "            ", "x", "=", "F", ".", "relu", "(", "self", ".", "dense_bn", "(", "self", ".", "dense", "(", "x", ")", ")", ")", "\n", "\n", "", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.conv3x3": [[8, 12], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ",", "groups", "=", "1", ",", "dilation", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "dilation", ",", "groups", "=", "groups", ",", "bias", "=", "True", ",", "dilation", "=", "dilation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.conv1x1": [[13, 16], ["torch.Conv2d"], "function", ["None"], ["", "def", "conv1x1", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"1x1 convolution\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.wide_resnet_8_pool": [[136, 139], ["wide_resnet_bn.ResNet"], "function", ["None"], ["", "", "def", "wide_resnet_8_pool", "(", "in_ch", "=", "3", ",", "in_dim", "=", "32", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "1", ",", "1", ",", "1", "]", ",", "num_classes", "=", "10", ",", "widen_factor", "=", "8", ",", "pool", "=", "True", ",", "dense", "=", "False", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.wide_resnet_8": [[140, 144], ["wide_resnet_bn.ResNet"], "function", ["None"], ["", "def", "wide_resnet_8", "(", "in_ch", "=", "3", ",", "in_dim", "=", "32", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "1", ",", "1", ",", "1", "]", ",", "num_classes", "=", "10", ",", "widen_factor", "=", "8", ",", "\n", "dense", "=", "True", ",", "pool", "=", "False", ",", "in_ch", "=", "in_ch", ",", "in_dim", "=", "in_dim", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.wide_resnet_12": [[145, 148], ["wide_resnet_bn.ResNet"], "function", ["None"], ["", "def", "wide_resnet_12", "(", "in_ch", "=", "3", ",", "in_dim", "=", "32", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "1", ",", "1", ",", "1", "]", ",", "num_classes", "=", "10", ",", "widen_factor", "=", "12", ",", "dense", "=", "True", ",", "pool", "=", "False", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.wide_resnet_8_dense_no_pool": [[149, 152], ["wide_resnet_bn.ResNet"], "function", ["None"], ["", "def", "wide_resnet_8_dense_no_pool", "(", "in_ch", "=", "3", ",", "in_dim", "=", "32", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "1", ",", "1", ",", "1", "]", ",", "num_classes", "=", "10", ",", "widen_factor", "=", "8", ",", "dense", "=", "True", ",", "pool", "=", "False", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.wide_resnet_12_dense_no_pool": [[153, 156], ["wide_resnet_bn.ResNet"], "function", ["None"], ["", "def", "wide_resnet_12_dense_no_pool", "(", "in_ch", "=", "3", ",", "in_dim", "=", "32", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "1", ",", "1", ",", "1", "]", ",", "num_classes", "=", "10", ",", "widen_factor", "=", "12", ",", "dense", "=", "True", ",", "pool", "=", "False", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.wide_resnet": [[157, 159], ["wide_resnet_bn.wide_resnet_8"], "function", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.wide_resnet_8"], ["", "def", "wide_resnet", "(", "in_ch", "=", "3", ",", "in_dim", "=", "32", ")", ":", "\n", "    ", "return", "wide_resnet_8", "(", "in_ch", ",", "in_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.wide_resnet_no_bn": [[160, 164], ["wide_resnet_bn.ResNet"], "function", ["None"], ["", "def", "wide_resnet_no_bn", "(", "in_ch", "=", "3", ",", "in_dim", "=", "32", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "1", ",", "1", ",", "1", "]", ",", "num_classes", "=", "10", ",", "widen_factor", "=", "8", ",", "\n", "dense", "=", "True", ",", "pool", "=", "False", ",", "in_ch", "=", "in_ch", ",", "in_dim", "=", "in_dim", ",", "bn", "=", "False", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.models.wide_resnet_bn.count_params": [[165, 170], ["model.parameters", "p.numel"], "function", ["None"], ["", "def", "count_params", "(", "model", ")", ":", "\n", "    ", "cnt", "=", "0", "\n", "for", "p", "in", "model", ".", "parameters", "(", ")", ":", "\n", "        ", "cnt", "+=", "p", ".", "numel", "(", ")", "\n", "", "return", "cnt", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.ImageNet64.imagenet_data_loader.DatasetDownsampledImageNet.__init__": [[8, 18], ["os.mkdir", "os.mkdir", "range", "imagenet_data_loader.DatasetDownsampledImageNet.load_data", "imagenet_data_loader.DatasetDownsampledImageNet.load_data", "os.mkdir", "os.mkdir", "print", "str", "str"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.ImageNet64.imagenet_data_loader.DatasetDownsampledImageNet.load_data", "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.ImageNet64.imagenet_data_loader.DatasetDownsampledImageNet.load_data"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "# self.data_path = data_path", "\n", "        ", "os", ".", "mkdir", "(", "'train'", ")", "\n", "os", ".", "mkdir", "(", "'test'", ")", "\n", "for", "i", "in", "range", "(", "1000", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "'train/'", "+", "str", "(", "i", ")", ")", "\n", "os", ".", "mkdir", "(", "'test/'", "+", "str", "(", "i", ")", ")", "\n", "print", "(", "i", ")", "\n", "", "self", ".", "load_data", "(", "'raw_data/Imagenet64_train_npz'", ",", "count", "=", "0", ",", "fname", "=", "'train/'", ")", "\n", "self", ".", "load_data", "(", "'raw_data/Imagenet64_val_npz'", ",", "count", "=", "1e8", ",", "fname", "=", "'test/'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.ImageNet64.imagenet_data_loader.DatasetDownsampledImageNet.load_data": [[19, 40], ["os.listdir", "numpy.load", "numpy.array", "numpy.dstack", "x.reshape.reshape.reshape", "enumerate", "numpy.array", "PIL.Image.fromarray", "str().zfill", "str", "print", "PIL.Image.fromarray.save", "PIL.Image.fromarray.reshape", "str", "int", "str.zfill", "str.zfill"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Fast-Certified-Robust-Training.None.utils.save"], ["", "def", "load_data", "(", "self", ",", "data_path", ",", "img_size", "=", "64", ",", "count", "=", "0.", ",", "fname", "=", "''", ")", ":", "\n", "        ", "files", "=", "os", ".", "listdir", "(", "data_path", ")", "\n", "img_size2", "=", "img_size", "*", "img_size", "\n", "\n", "# count = 0  # 1e8  # test data start with 1", "\n", "for", "file", "in", "files", ":", "\n", "            ", "f", "=", "np", ".", "load", "(", "data_path", "+", "'/'", "+", "file", ")", "\n", "x", "=", "np", ".", "array", "(", "f", "[", "'data'", "]", ")", "\n", "y", "=", "np", ".", "array", "(", "f", "[", "'labels'", "]", ")", "-", "1", "\n", "x", "=", "np", ".", "dstack", "(", "(", "x", "[", ":", ",", ":", "img_size2", "]", ",", "x", "[", ":", ",", "img_size2", ":", "2", "*", "img_size2", "]", ",", "x", "[", ":", ",", "2", "*", "img_size2", ":", "]", ")", ")", "\n", "x", "=", "x", ".", "reshape", "(", "(", "x", ".", "shape", "[", "0", "]", ",", "img_size", ",", "img_size", ",", "3", ")", ")", "\n", "\n", "for", "i", ",", "img", "in", "enumerate", "(", "x", ")", ":", "\n", "                ", "img", "=", "Image", ".", "fromarray", "(", "img", ".", "reshape", "(", "img_size", ",", "img_size", ",", "3", ")", ")", "\n", "name", "=", "str", "(", "int", "(", "count", ")", ")", ".", "zfill", "(", "9", ")", "\n", "label", "=", "str", "(", "y", "[", "i", "]", ")", "\n", "print", "(", "count", ",", "fname", "+", "label", "+", "'/'", "+", "name", "+", "'_label_'", "+", "label", ".", "zfill", "(", "4", ")", "+", "'.png'", ")", "\n", "# img.show()", "\n", "img", ".", "save", "(", "fname", "+", "label", "+", "'/'", "+", "name", "+", "'_label_'", "+", "label", ".", "zfill", "(", "4", ")", "+", "'.png'", ")", "\n", "\n", "count", "+=", "1", "\n", "\n"]]}