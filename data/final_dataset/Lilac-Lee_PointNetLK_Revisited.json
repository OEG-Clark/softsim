{"home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.ThreeDMatch_Testing.__init__": [[56, 78], ["int", "data_utils.load_pose", "open", "fi.read().split", "range", "len", "len", "glob.glob", "fi.read", "os.path.join", "open", "data_utils.ThreeDMatch_Testing.pairs.append", "x.strip().split", "fi.readlines", "x.strip"], "methods", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.load_pose", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.Globset.split", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.Globset.split"], ["    ", "def", "__init__", "(", "self", ",", "dataset_path", ",", "category", ",", "overlap_ratio", ",", "voxel_ratio", ",", "voxel", ",", "max_voxel_points", ",", "num_voxels", ",", "rigid_transform", ",", "vis", ",", "voxel_after_transf", ")", ":", "\n", "        ", "self", ".", "dataset_path", "=", "dataset_path", "\n", "self", ".", "pairs", "=", "[", "]", "\n", "with", "open", "(", "category", ",", "'r'", ")", "as", "fi", ":", "\n", "            ", "cinfo_fi", "=", "fi", ".", "read", "(", ")", ".", "split", "(", ")", "# category names", "\n", "for", "i", "in", "range", "(", "len", "(", "cinfo_fi", ")", ")", ":", "\n", "                ", "cat_name", "=", "cinfo_fi", "[", "i", "]", "\n", "cinfo_name", "=", "cat_name", "+", "'*%.2f.txt'", "%", "overlap_ratio", "\n", "cinfo", "=", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_path", ",", "cinfo_name", ")", ")", "\n", "for", "fi_name", "in", "cinfo", ":", "\n", "                    ", "with", "open", "(", "fi_name", ")", "as", "fi", ":", "\n", "                        ", "fi_list", "=", "[", "x", ".", "strip", "(", ")", ".", "split", "(", ")", "for", "x", "in", "fi", ".", "readlines", "(", ")", "]", "\n", "", "for", "fi", "in", "fi_list", ":", "\n", "                        ", "self", ".", "pairs", ".", "append", "(", "[", "fi", "[", "0", "]", ",", "fi", "[", "1", "]", "]", ")", "\n", "\n", "", "", "", "", "self", ".", "voxel_ratio", "=", "voxel_ratio", "\n", "self", ".", "voxel", "=", "int", "(", "voxel", ")", "\n", "self", ".", "max_voxel_points", "=", "max_voxel_points", "\n", "self", ".", "num_voxels", "=", "num_voxels", "\n", "self", ".", "perturbation", "=", "load_pose", "(", "rigid_transform", ",", "len", "(", "self", ".", "pairs", ")", ")", "\n", "self", ".", "vis", "=", "vis", "\n", "self", ".", "voxel_after_transf", "=", "voxel_after_transf", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.ThreeDMatch_Testing.__len__": [[79, 81], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "pairs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.ThreeDMatch_Testing.do_transform": [[82, 89], ["utils.exp().to", "utils.transform", "utils.exp().to.squeeze", "utils.exp"], "methods", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.transform", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.exp"], ["", "def", "do_transform", "(", "self", ",", "p0", ",", "x", ")", ":", "\n", "# p0: [N, 3]", "\n", "# x: [1, 6], twist-params", "\n", "        ", "g", "=", "utils", ".", "exp", "(", "x", ")", ".", "to", "(", "p0", ")", "# [1, 4, 4]", "\n", "p1", "=", "utils", ".", "transform", "(", "g", ",", "p0", ")", "\n", "igt", "=", "g", ".", "squeeze", "(", "0", ")", "# igt: p0 -> p1", "\n", "return", "p1", ",", "igt", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.ThreeDMatch_Testing.__getitem__": [[90, 180], ["data_utils.load_3dmatch_batch_data", "numpy.intersect1d", "numpy.intersect1d", "numpy.intersect1d", "os.path.join", "os.path.join", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "data_utils.ThreeDMatch_Testing.do_transform", "numpy.mean", "numpy.mean", "data_utils.find_voxel_overlaps", "data_utils.points_to_voxel_second", "data_utils.points_to_voxel_second", "data_utils.find_voxel_overlaps", "data_utils.points_to_voxel_second", "data_utils.points_to_voxel_second", "numpy.linspace", "numpy.linspace", "numpy.linspace", "numpy.linspace", "numpy.linspace", "numpy.linspace", "numpy.linspace", "numpy.linspace", "numpy.linspace", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "data_utils.ThreeDMatch_Testing.do_transform", "voxels_p1_.reshape", "data_utils.ThreeDMatch_Testing.do_transform", "data_utils.ThreeDMatch_Testing.do_transform", "torch.from_numpy().double", "torch.from_numpy().double", "torch.from_numpy().double", "torch.from_numpy().double", "p1_pre.numpy", "p1_pre.numpy", "int", "int", "int", "numpy.vstack().reshape", "int", "int", "int", "numpy.vstack().reshape", "int", "int", "int", "numpy.vstack().reshape", "numpy.where", "numpy.where", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy().double", "torch.from_numpy().double", "torch.from_numpy().double", "torch.from_numpy().double", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "int", "int", "int", "int", "voxels_p1_.reshape.reshape", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "numpy.vstack", "numpy.vstack", "numpy.vstack", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "numpy.meshgrid", "numpy.meshgrid", "numpy.meshgrid"], "methods", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.load_3dmatch_batch_data", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.ToyExampleData.do_transform", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.find_voxel_overlaps", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.points_to_voxel_second", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.points_to_voxel_second", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.find_voxel_overlaps", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.points_to_voxel_second", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.points_to_voxel_second", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.ToyExampleData.do_transform", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.ToyExampleData.do_transform", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.ToyExampleData.do_transform"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "p0_pre", ",", "p1_pre", "=", "load_3dmatch_batch_data", "(", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_path", ",", "self", ".", "pairs", "[", "index", "]", "[", "0", "]", ")", ",", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_path", ",", "self", ".", "pairs", "[", "index", "]", "[", "1", "]", ")", ",", "self", ".", "voxel_ratio", ")", "\n", "\n", "if", "self", ".", "voxel_after_transf", ":", "\n", "            ", "x", "=", "torch", ".", "from_numpy", "(", "self", ".", "perturbation", "[", "index", "]", "[", "np", ".", "newaxis", ",", "...", "]", ")", "\n", "p1_pre", ",", "igt", "=", "self", ".", "do_transform", "(", "torch", ".", "from_numpy", "(", "p1_pre", ")", ".", "double", "(", ")", ",", "x", ")", "\n", "\n", "p0_pre_mean", "=", "np", ".", "mean", "(", "p0_pre", ",", "0", ")", "\n", "p1_pre_mean", "=", "np", ".", "mean", "(", "p1_pre", ".", "numpy", "(", ")", ",", "0", ")", "\n", "p0_pre_", "=", "p0_pre", "-", "p0_pre_mean", "\n", "p1_pre_", "=", "p1_pre", ".", "numpy", "(", ")", "-", "p1_pre_mean", "\n", "\n", "# voxelization", "\n", "p0", ",", "p1", ",", "xmin", ",", "ymin", ",", "zmin", ",", "xmax", ",", "ymax", ",", "zmax", ",", "vx", ",", "vy", ",", "vz", "=", "find_voxel_overlaps", "(", "p0_pre_", ",", "p1_pre_", ",", "self", ".", "voxel", ")", "# constraints of P1 ^ P2, where contains roughly overlapped area", "\n", "\n", "p0", "=", "p0", "+", "p0_pre_mean", "\n", "p1", "=", "p1", "+", "p1_pre_mean", "\n", "xmin0", "=", "xmin", "+", "p0_pre_mean", "[", "0", "]", "\n", "ymin0", "=", "ymin", "+", "p0_pre_mean", "[", "1", "]", "\n", "zmin0", "=", "zmin", "+", "p0_pre_mean", "[", "2", "]", "\n", "xmax0", "=", "xmax", "+", "p0_pre_mean", "[", "0", "]", "\n", "ymax0", "=", "ymax", "+", "p0_pre_mean", "[", "1", "]", "\n", "zmax0", "=", "zmax", "+", "p0_pre_mean", "[", "2", "]", "\n", "\n", "xmin1", "=", "xmin", "+", "p1_pre_mean", "[", "0", "]", "\n", "ymin1", "=", "ymin", "+", "p1_pre_mean", "[", "1", "]", "\n", "zmin1", "=", "zmin", "+", "p1_pre_mean", "[", "2", "]", "\n", "xmax1", "=", "xmax", "+", "p1_pre_mean", "[", "0", "]", "\n", "ymax1", "=", "ymax", "+", "p1_pre_mean", "[", "1", "]", "\n", "zmax1", "=", "zmax", "+", "p1_pre_mean", "[", "2", "]", "\n", "\n", "voxels_p0", ",", "coords_p0", ",", "num_points_per_voxel_p0", "=", "points_to_voxel_second", "(", "p0", ",", "(", "xmin0", ",", "ymin0", ",", "zmin0", ",", "xmax0", ",", "ymax0", ",", "zmax0", ")", ",", "\n", "(", "vx", ",", "vy", ",", "vz", ")", ",", "self", ".", "max_voxel_points", ",", "reverse_index", "=", "False", ",", "max_voxels", "=", "self", ".", "num_voxels", ")", "\n", "voxels_p1", ",", "coords_p1", ",", "num_points_per_voxel_p1", "=", "points_to_voxel_second", "(", "p1", ",", "(", "xmin1", ",", "ymin1", ",", "zmin1", ",", "xmax1", ",", "ymax1", ",", "zmax1", ")", ",", "\n", "(", "vx", ",", "vy", ",", "vz", ")", ",", "self", ".", "max_voxel_points", ",", "reverse_index", "=", "False", ",", "max_voxels", "=", "self", ".", "num_voxels", ")", "\n", "", "else", ":", "\n", "# voxelization", "\n", "            ", "p0", ",", "p1", ",", "xmin", ",", "ymin", ",", "zmin", ",", "xmax", ",", "ymax", ",", "zmax", ",", "vx", ",", "vy", ",", "vz", "=", "find_voxel_overlaps", "(", "p0_pre", ",", "p1_pre", ",", "self", ".", "voxel", ")", "# constraints of P1 ^ P2, where contains roughly overlapped area", "\n", "voxels_p0", ",", "coords_p0", ",", "num_points_per_voxel_p0", "=", "points_to_voxel_second", "(", "p0", ",", "(", "xmin", ",", "ymin", ",", "zmin", ",", "xmax", ",", "ymax", ",", "zmax", ")", ",", "\n", "(", "vx", ",", "vy", ",", "vz", ")", ",", "self", ".", "max_voxel_points", ",", "reverse_index", "=", "False", ",", "max_voxels", "=", "self", ".", "num_voxels", ")", "\n", "voxels_p1", ",", "coords_p1", ",", "num_points_per_voxel_p1", "=", "points_to_voxel_second", "(", "p1", ",", "(", "xmin", ",", "ymin", ",", "zmin", ",", "xmax", ",", "ymax", ",", "zmax", ")", ",", "\n", "(", "vx", ",", "vy", ",", "vz", ")", ",", "self", ".", "max_voxel_points", ",", "reverse_index", "=", "False", ",", "max_voxels", "=", "self", ".", "num_voxels", ")", "\n", "\n", "", "coords_p0_idx", "=", "coords_p0", "[", ":", ",", "1", "]", "*", "(", "int", "(", "self", ".", "voxel", "**", "2", ")", ")", "+", "coords_p0", "[", ":", ",", "0", "]", "*", "(", "int", "(", "self", ".", "voxel", ")", ")", "+", "coords_p0", "[", ":", ",", "2", "]", "\n", "coords_p1_idx", "=", "coords_p1", "[", ":", ",", "1", "]", "*", "(", "int", "(", "self", ".", "voxel", "**", "2", ")", ")", "+", "coords_p1", "[", ":", ",", "0", "]", "*", "(", "int", "(", "self", ".", "voxel", ")", ")", "+", "coords_p1", "[", ":", ",", "2", "]", "\n", "\n", "if", "self", ".", "voxel_after_transf", ":", "\n", "# calculate for the voxel medium", "\n", "            ", "xm_x0", "=", "np", ".", "linspace", "(", "xmin0", "+", "vx", "/", "2", ",", "xmax0", "-", "vx", "/", "2", ",", "int", "(", "self", ".", "voxel", ")", ")", "\n", "xm_y0", "=", "np", ".", "linspace", "(", "ymin0", "+", "vy", "/", "2", ",", "ymax0", "-", "vy", "/", "2", ",", "int", "(", "self", ".", "voxel", ")", ")", "\n", "xm_z0", "=", "np", ".", "linspace", "(", "zmin0", "+", "vz", "/", "2", ",", "zmax0", "-", "vz", "/", "2", ",", "int", "(", "self", ".", "voxel", ")", ")", "\n", "mesh3d0", "=", "np", ".", "vstack", "(", "np", ".", "meshgrid", "(", "xm_x0", ",", "xm_y0", ",", "xm_z0", ")", ")", ".", "reshape", "(", "3", ",", "-", "1", ")", ".", "T", "\n", "xm_x1", "=", "np", ".", "linspace", "(", "xmin1", "+", "vx", "/", "2", ",", "xmax1", "-", "vx", "/", "2", ",", "int", "(", "self", ".", "voxel", ")", ")", "\n", "xm_y1", "=", "np", ".", "linspace", "(", "ymin1", "+", "vy", "/", "2", ",", "ymax1", "-", "vy", "/", "2", ",", "int", "(", "self", ".", "voxel", ")", ")", "\n", "xm_z1", "=", "np", ".", "linspace", "(", "zmin1", "+", "vz", "/", "2", ",", "zmax1", "-", "vz", "/", "2", ",", "int", "(", "self", ".", "voxel", ")", ")", "\n", "mesh3d1", "=", "np", ".", "vstack", "(", "np", ".", "meshgrid", "(", "xm_x1", ",", "xm_y1", ",", "xm_z1", ")", ")", ".", "reshape", "(", "3", ",", "-", "1", ")", ".", "T", "\n", "\n", "voxel_coords_p0", "=", "mesh3d0", "[", "coords_p0_idx", "]", "\n", "voxel_coords_p1", "=", "mesh3d1", "[", "coords_p1_idx", "]", "\n", "", "else", ":", "\n", "# calculate for the voxel medium", "\n", "            ", "xm_x", "=", "np", ".", "linspace", "(", "xmin", "+", "vx", "/", "2", ",", "xmax", "-", "vx", "/", "2", ",", "int", "(", "self", ".", "voxel", ")", ")", "\n", "xm_y", "=", "np", ".", "linspace", "(", "ymin", "+", "vy", "/", "2", ",", "ymax", "-", "vy", "/", "2", ",", "int", "(", "self", ".", "voxel", ")", ")", "\n", "xm_z", "=", "np", ".", "linspace", "(", "zmin", "+", "vz", "/", "2", ",", "zmax", "-", "vz", "/", "2", ",", "int", "(", "self", ".", "voxel", ")", ")", "\n", "mesh3d", "=", "np", ".", "vstack", "(", "np", ".", "meshgrid", "(", "xm_x", ",", "xm_y", ",", "xm_z", ")", ")", ".", "reshape", "(", "3", ",", "-", "1", ")", ".", "T", "\n", "voxel_coords_p0", "=", "mesh3d", "[", "coords_p0_idx", "]", "\n", "voxel_coords_p1", "=", "mesh3d", "[", "coords_p1_idx", "]", "\n", "\n", "# find voxels where number of points >= 80% of the maximum number of points", "\n", "", "idx_conditioned_p0", "=", "coords_p0_idx", "[", "np", ".", "where", "(", "num_points_per_voxel_p0", ">=", "0.1", "*", "self", ".", "max_voxel_points", ")", "]", "\n", "idx_conditioned_p1", "=", "coords_p1_idx", "[", "np", ".", "where", "(", "num_points_per_voxel_p1", ">=", "0.1", "*", "self", ".", "max_voxel_points", ")", "]", "\n", "idx_conditioned", ",", "_", ",", "_", "=", "np", ".", "intersect1d", "(", "idx_conditioned_p0", ",", "idx_conditioned_p1", ",", "assume_unique", "=", "True", ",", "return_indices", "=", "True", ")", "\n", "_", ",", "_", ",", "idx_p0", "=", "np", ".", "intersect1d", "(", "idx_conditioned", ",", "coords_p0_idx", ",", "assume_unique", "=", "True", ",", "return_indices", "=", "True", ")", "\n", "_", ",", "_", ",", "idx_p1", "=", "np", ".", "intersect1d", "(", "idx_conditioned", ",", "coords_p1_idx", ",", "assume_unique", "=", "True", ",", "return_indices", "=", "True", ")", "\n", "voxel_coords_p0", "=", "voxel_coords_p0", "[", "idx_p0", "]", "\n", "voxel_coords_p1", "=", "voxel_coords_p1", "[", "idx_p1", "]", "\n", "voxels_p0", "=", "voxels_p0", "[", "idx_p0", "]", "\n", "voxels_p1", "=", "voxels_p1", "[", "idx_p1", "]", "\n", "\n", "if", "not", "self", ".", "voxel_after_transf", ":", "\n", "            ", "x", "=", "torch", ".", "from_numpy", "(", "self", ".", "perturbation", "[", "index", "]", "[", "np", ".", "newaxis", ",", "...", "]", ")", "\n", "voxels_p1_", ",", "igt", "=", "self", ".", "do_transform", "(", "torch", ".", "from_numpy", "(", "voxels_p1", ".", "reshape", "(", "-", "1", ",", "3", ")", ")", ",", "x", ")", "\n", "voxels_p1", "=", "voxels_p1_", ".", "reshape", "(", "voxels_p1", ".", "shape", ")", "\n", "voxel_coords_p1", ",", "_", "=", "self", ".", "do_transform", "(", "torch", ".", "from_numpy", "(", "voxel_coords_p1", ")", ".", "double", "(", ")", ",", "x", ")", "\n", "p1", ",", "_", "=", "self", ".", "do_transform", "(", "torch", ".", "from_numpy", "(", "p1", ")", ",", "x", ")", "\n", "\n", "", "if", "self", ".", "vis", ":", "\n", "            ", "return", "voxels_p0", ",", "voxel_coords_p0", ",", "voxels_p1", ",", "voxel_coords_p1", ",", "igt", ",", "p0", ",", "p1", "\n", "", "else", ":", "\n", "            ", "return", "voxels_p0", ",", "voxel_coords_p0", ",", "voxels_p1", ",", "voxel_coords_p1", ",", "igt", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.ToyExampleData.__init__": [[183, 192], ["int"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "p0", ",", "p1", ",", "voxel_ratio", ",", "voxel", ",", "max_voxel_points", ",", "num_voxels", ",", "rigid_transform", ",", "vis", ")", ":", "\n", "        ", "self", ".", "voxel_ratio", "=", "voxel_ratio", "\n", "self", ".", "voxel", "=", "int", "(", "voxel", ")", "\n", "self", ".", "max_voxel_points", "=", "max_voxel_points", "\n", "self", ".", "num_voxels", "=", "num_voxels", "\n", "self", ".", "perturbation", "=", "rigid_transform", "\n", "self", ".", "p0", "=", "p0", "\n", "self", ".", "p1", "=", "p1", "\n", "self", ".", "vis", "=", "vis", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.ToyExampleData.__len__": [[193, 195], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "p0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.ToyExampleData.do_transform": [[196, 203], ["utils.exp().to", "utils.transform", "utils.exp().to.squeeze", "utils.exp"], "methods", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.transform", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.exp"], ["", "def", "do_transform", "(", "self", ",", "p0", ",", "x", ")", ":", "\n", "# p0: [N, 3]", "\n", "# x: [1, 6], twist-params", "\n", "        ", "g", "=", "utils", ".", "exp", "(", "x", ")", ".", "to", "(", "p0", ")", "# [1, 4, 4]", "\n", "p1", "=", "utils", ".", "transform", "(", "g", ",", "p0", ")", "\n", "igt", "=", "g", ".", "squeeze", "(", "0", ")", "# igt: p0 -> p1", "\n", "return", "p1", ",", "igt", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.ToyExampleData.__getitem__": [[204, 247], ["data_utils.find_voxel_overlaps", "data_utils.points_to_voxel_second", "data_utils.points_to_voxel_second", "numpy.linspace", "numpy.linspace", "numpy.linspace", "numpy.intersect1d", "numpy.intersect1d", "numpy.intersect1d", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "data_utils.ToyExampleData.do_transform", "voxels_p1_.reshape", "data_utils.ToyExampleData.do_transform", "data_utils.ToyExampleData.do_transform", "int", "int", "int", "numpy.vstack().reshape", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy().double", "torch.from_numpy().double", "torch.from_numpy().double", "torch.from_numpy().double", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "numpy.where", "numpy.where", "voxels_p1_.reshape.reshape", "int", "int", "int", "int", "numpy.vstack", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "numpy.meshgrid"], "methods", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.find_voxel_overlaps", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.points_to_voxel_second", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.points_to_voxel_second", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.ToyExampleData.do_transform", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.ToyExampleData.do_transform", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.ToyExampleData.do_transform"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "p0_pre", "=", "self", ".", "p0", "[", "index", "]", "\n", "p1_pre", "=", "self", ".", "p1", "[", "index", "]", "\n", "\n", "# voxelization", "\n", "p0", ",", "p1", ",", "xmin", ",", "ymin", ",", "zmin", ",", "xmax", ",", "ymax", ",", "zmax", ",", "vx", ",", "vy", ",", "vz", "=", "find_voxel_overlaps", "(", "p0_pre", ",", "p1_pre", ",", "self", ".", "voxel", ")", "# constraints of P1 ^ P2, where contains roughly overlapped area", "\n", "voxels_p0", ",", "coords_p0", ",", "num_points_per_voxel_p0", "=", "points_to_voxel_second", "(", "p0", ",", "(", "xmin", ",", "ymin", ",", "zmin", ",", "xmax", ",", "ymax", ",", "zmax", ")", ",", "\n", "(", "vx", ",", "vy", ",", "vz", ")", ",", "self", ".", "max_voxel_points", ",", "reverse_index", "=", "False", ",", "max_voxels", "=", "self", ".", "num_voxels", ")", "\n", "voxels_p1", ",", "coords_p1", ",", "num_points_per_voxel_p1", "=", "points_to_voxel_second", "(", "p1", ",", "(", "xmin", ",", "ymin", ",", "zmin", ",", "xmax", ",", "ymax", ",", "zmax", ")", ",", "\n", "(", "vx", ",", "vy", ",", "vz", ")", ",", "self", ".", "max_voxel_points", ",", "reverse_index", "=", "False", ",", "max_voxels", "=", "self", ".", "num_voxels", ")", "\n", "\n", "coords_p0_idx", "=", "coords_p0", "[", ":", ",", "1", "]", "*", "(", "int", "(", "self", ".", "voxel", "**", "2", ")", ")", "+", "coords_p0", "[", ":", ",", "0", "]", "*", "(", "int", "(", "self", ".", "voxel", ")", ")", "+", "coords_p0", "[", ":", ",", "2", "]", "\n", "coords_p1_idx", "=", "coords_p1", "[", ":", ",", "1", "]", "*", "(", "int", "(", "self", ".", "voxel", "**", "2", ")", ")", "+", "coords_p1", "[", ":", ",", "0", "]", "*", "(", "int", "(", "self", ".", "voxel", ")", ")", "+", "coords_p1", "[", ":", ",", "2", "]", "\n", "\n", "# calculate for the voxel medium", "\n", "xm_x", "=", "np", ".", "linspace", "(", "xmin", "+", "vx", "/", "2", ",", "xmax", "-", "vx", "/", "2", ",", "int", "(", "self", ".", "voxel", ")", ")", "\n", "xm_y", "=", "np", ".", "linspace", "(", "ymin", "+", "vy", "/", "2", ",", "ymax", "-", "vy", "/", "2", ",", "int", "(", "self", ".", "voxel", ")", ")", "\n", "xm_z", "=", "np", ".", "linspace", "(", "zmin", "+", "vz", "/", "2", ",", "zmax", "-", "vz", "/", "2", ",", "int", "(", "self", ".", "voxel", ")", ")", "\n", "mesh3d", "=", "np", ".", "vstack", "(", "np", ".", "meshgrid", "(", "xm_x", ",", "xm_y", ",", "xm_z", ")", ")", ".", "reshape", "(", "3", ",", "-", "1", ")", ".", "T", "\n", "voxel_coords_p0", "=", "mesh3d", "[", "coords_p0_idx", "]", "\n", "voxel_coords_p1", "=", "mesh3d", "[", "coords_p1_idx", "]", "\n", "\n", "# find voxels where number of points >= 80% of the maximum number of points", "\n", "idx_conditioned_p0", "=", "coords_p0_idx", "[", "np", ".", "where", "(", "num_points_per_voxel_p0", ">=", "0.1", "*", "self", ".", "max_voxel_points", ")", "]", "\n", "idx_conditioned_p1", "=", "coords_p1_idx", "[", "np", ".", "where", "(", "num_points_per_voxel_p1", ">=", "0.1", "*", "self", ".", "max_voxel_points", ")", "]", "\n", "idx_conditioned", ",", "_", ",", "_", "=", "np", ".", "intersect1d", "(", "idx_conditioned_p0", ",", "idx_conditioned_p1", ",", "assume_unique", "=", "True", ",", "return_indices", "=", "True", ")", "\n", "_", ",", "_", ",", "idx_p0", "=", "np", ".", "intersect1d", "(", "idx_conditioned", ",", "coords_p0_idx", ",", "assume_unique", "=", "True", ",", "return_indices", "=", "True", ")", "\n", "_", ",", "_", ",", "idx_p1", "=", "np", ".", "intersect1d", "(", "idx_conditioned", ",", "coords_p1_idx", ",", "assume_unique", "=", "True", ",", "return_indices", "=", "True", ")", "\n", "voxel_coords_p0", "=", "voxel_coords_p0", "[", "idx_p0", "]", "\n", "voxel_coords_p1", "=", "voxel_coords_p1", "[", "idx_p1", "]", "\n", "voxels_p0", "=", "voxels_p0", "[", "idx_p0", "]", "\n", "voxels_p1", "=", "voxels_p1", "[", "idx_p1", "]", "\n", "\n", "x", "=", "torch", ".", "from_numpy", "(", "self", ".", "perturbation", "[", "index", "]", "[", "np", ".", "newaxis", ",", "...", "]", ")", "\n", "voxels_p1_", ",", "igt", "=", "self", ".", "do_transform", "(", "torch", ".", "from_numpy", "(", "voxels_p1", ".", "reshape", "(", "-", "1", ",", "3", ")", ")", ",", "x", ")", "\n", "voxels_p1", "=", "voxels_p1_", ".", "reshape", "(", "voxels_p1", ".", "shape", ")", "\n", "voxel_coords_p1", ",", "_", "=", "self", ".", "do_transform", "(", "torch", ".", "from_numpy", "(", "voxel_coords_p1", ")", ".", "double", "(", ")", ",", "x", ")", "\n", "p1", ",", "_", "=", "self", ".", "do_transform", "(", "torch", ".", "from_numpy", "(", "p1", ")", ",", "x", ")", "\n", "\n", "if", "self", ".", "vis", ":", "\n", "            ", "return", "voxels_p0", ",", "voxel_coords_p0", ",", "voxels_p1", ",", "voxel_coords_p1", ",", "igt", ",", "p0", ",", "p1", "\n", "", "else", ":", "\n", "            ", "return", "voxels_p0", ",", "voxel_coords_p0", ",", "voxels_p1", ",", "voxel_coords_p1", ",", "igt", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.RandomTransformSE3.__init__": [[252, 257], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "mag", "=", "1", ",", "mag_randomly", "=", "True", ")", ":", "\n", "        ", "self", ".", "mag", "=", "mag", "\n", "self", ".", "randomly", "=", "mag_randomly", "\n", "self", ".", "gt", "=", "None", "\n", "self", ".", "igt", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.RandomTransformSE3.generate_transform": [[258, 266], ["torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.randn.norm", "torch.randn.norm"], "methods", ["None"], ["", "def", "generate_transform", "(", "self", ")", ":", "\n", "        ", "amp", "=", "self", ".", "mag", "\n", "if", "self", ".", "randomly", ":", "\n", "            ", "amp", "=", "torch", ".", "rand", "(", "1", ",", "1", ")", "*", "self", ".", "mag", "\n", "", "x", "=", "torch", ".", "randn", "(", "1", ",", "6", ")", "\n", "x", "=", "x", "/", "x", ".", "norm", "(", "p", "=", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "*", "amp", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.RandomTransformSE3.apply_transform": [[267, 277], ["utils.exp().to", "utils.exp().to", "utils.transform", "utils.exp", "utils.exp"], "methods", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.transform", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.exp", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.exp"], ["", "def", "apply_transform", "(", "self", ",", "p0", ",", "x", ")", ":", "\n", "# p0: [N, 3]", "\n", "# x: [1, 6], twist params", "\n", "        ", "g", "=", "utils", ".", "exp", "(", "x", ")", ".", "to", "(", "p0", ")", "# [1, 4, 4]", "\n", "gt", "=", "utils", ".", "exp", "(", "-", "x", ")", ".", "to", "(", "p0", ")", "# [1, 4, 4]", "\n", "p1", "=", "utils", ".", "transform", "(", "g", ",", "p0", ")", "\n", "self", ".", "gt", "=", "gt", "# p1 --> p0", "\n", "self", ".", "igt", "=", "g", "# p0 --> p1", "\n", "\n", "return", "p1", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.RandomTransformSE3.transform": [[278, 281], ["data_utils.RandomTransformSE3.generate_transform", "data_utils.RandomTransformSE3.apply_transform"], "methods", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.RandomTransformSE3.generate_transform", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.RandomTransformSE3.apply_transform"], ["", "def", "transform", "(", "self", ",", "tensor", ")", ":", "\n", "        ", "x", "=", "self", ".", "generate_transform", "(", ")", "\n", "return", "self", ".", "apply_transform", "(", "tensor", ",", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.RandomTransformSE3.__call__": [[282, 284], ["data_utils.RandomTransformSE3.transform"], "methods", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.transform"], ["", "def", "__call__", "(", "self", ",", "tensor", ")", ":", "\n", "        ", "return", "self", ".", "transform", "(", "tensor", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.PointRegistration.__init__": [[294, 299], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dataset", ",", "rigid_transform", ",", "sigma", "=", "0.00", ",", "clip", "=", "0.00", ")", ":", "\n", "        ", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "transf", "=", "rigid_transform", "\n", "self", ".", "sigma", "=", "sigma", "\n", "self", ".", "clip", "=", "clip", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.PointRegistration.__len__": [[300, 302], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "dataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.PointRegistration.__getitem__": [[303, 312], ["data_utils.add_noise", "data_utils.PointRegistration.transf", "data_utils.PointRegistration.transf.igt.squeeze"], "methods", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.add_noise"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "pm", ",", "_", "=", "self", ".", "dataset", "[", "index", "]", "# one point cloud", "\n", "p_", "=", "add_noise", "(", "pm", ",", "sigma", "=", "self", ".", "sigma", ",", "clip", "=", "self", ".", "clip", ")", "\n", "p1", "=", "self", ".", "transf", "(", "p_", ")", "\n", "igt", "=", "self", ".", "transf", ".", "igt", ".", "squeeze", "(", "0", ")", "\n", "p0", "=", "pm", "\n", "\n", "# p0: template, p1: source, igt:transform matrix from p0 to p1", "\n", "return", "p0", ",", "p1", ",", "igt", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.PointRegistration_fixed_perturbation.__init__": [[315, 323], ["torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "data_utils.load_pose", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "len", "len"], "methods", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.load_pose"], ["    ", "def", "__init__", "(", "self", ",", "dataset", ",", "rigid_transform", ",", "sigma", "=", "0.00", ",", "clip", "=", "0.00", ")", ":", "\n", "        ", "torch", ".", "manual_seed", "(", "713", ")", "\n", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "transf_", "=", "load_pose", "(", "rigid_transform", ",", "len", "(", "self", ".", "dataset", ")", ")", "\n", "list_order", "=", "torch", ".", "randperm", "(", "len", "(", "self", ".", "dataset", ")", ")", "\n", "self", ".", "transf", "=", "self", ".", "transf_", "[", "list_order", "]", "\n", "self", ".", "sigma", "=", "sigma", "\n", "self", ".", "clip", "=", "clip", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.PointRegistration_fixed_perturbation.__len__": [[324, 326], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "dataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.PointRegistration_fixed_perturbation.transform": [[327, 335], ["utils.exp().to", "utils.transform", "utils.exp().to.squeeze", "utils.exp"], "methods", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.transform", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.exp"], ["", "def", "transform", "(", "self", ",", "p0", ",", "x", ")", ":", "\n", "# p0: [N, 3]", "\n", "# x: [1, 6], twist-vector (rotation and translation)", "\n", "        ", "g", "=", "utils", ".", "exp", "(", "x", ")", ".", "to", "(", "p0", ")", "# [1, 4, 4]", "\n", "p1", "=", "utils", ".", "transform", "(", "g", ",", "p0", ")", "\n", "igt", "=", "g", ".", "squeeze", "(", "0", ")", "\n", "\n", "return", "p1", ",", "igt", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.PointRegistration_fixed_perturbation.__getitem__": [[336, 345], ["data_utils.add_noise", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "data_utils.PointRegistration_fixed_perturbation.transform", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "methods", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.add_noise", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.transform"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "pm", ",", "_", "=", "self", ".", "dataset", "[", "index", "]", "# one point cloud", "\n", "p_", "=", "add_noise", "(", "pm", ",", "sigma", "=", "self", ".", "sigma", ",", "clip", "=", "self", ".", "clip", ")", "\n", "p0", "=", "pm", "\n", "x", "=", "torch", ".", "from_numpy", "(", "self", ".", "transf", "[", "index", "]", "[", "np", ".", "newaxis", ",", "...", "]", ")", ".", "to", "(", "p0", ")", "\n", "p1", ",", "igt", "=", "self", ".", "transform", "(", "p_", ",", "x", ")", "\n", "\n", "# p0: template, p1: source, igt:transform matrix from p0 to p1", "\n", "return", "p0", ",", "p1", ",", "igt", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.Globset.__init__": [[500, 523], ["super().__init__", "isinstance", "data_utils.glob_dataset", "data_utils.find_classes", "RuntimeError"], "methods", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.model.AnalyticalPointNetLK.__init__", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.glob_dataset", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.find_classes"], ["def", "__init__", "(", "self", ",", "rootdir", ",", "pattern", ",", "fileloader", ",", "transform", "=", "None", ",", "classinfo", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "isinstance", "(", "pattern", ",", "six", ".", "string_types", ")", ":", "\n", "            ", "pattern", "=", "[", "pattern", "]", "\n", "\n", "", "if", "classinfo", "is", "not", "None", ":", "\n", "            ", "classes", ",", "class_to_idx", "=", "classinfo", "\n", "", "else", ":", "\n", "            ", "classes", ",", "class_to_idx", "=", "find_classes", "(", "rootdir", ")", "\n", "\n", "", "samples", "=", "glob_dataset", "(", "rootdir", ",", "class_to_idx", ",", "pattern", ")", "\n", "if", "not", "samples", ":", "\n", "            ", "raise", "RuntimeError", "(", "\"Empty: rootdir={}, pattern(s)={}\"", ".", "format", "(", "rootdir", ",", "pattern", ")", ")", "\n", "\n", "", "self", ".", "rootdir", "=", "rootdir", "\n", "self", ".", "pattern", "=", "pattern", "\n", "self", ".", "fileloader", "=", "fileloader", "\n", "self", ".", "transform", "=", "transform", "\n", "\n", "self", ".", "classes", "=", "classes", "\n", "self", ".", "class_to_idx", "=", "class_to_idx", "\n", "self", ".", "samples", "=", "samples", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.Globset.__repr__": [[524, 534], ["data_utils.Globset.__len__", "data_utils.Globset.transform.__repr__().replace", "data_utils.Globset.transform.__repr__", "len"], "methods", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.Globset.__len__", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.Globset.__repr__"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "fmt_str", "=", "'Dataset {}\\n'", ".", "format", "(", "self", ".", "__class__", ".", "__name__", ")", "\n", "fmt_str", "+=", "'    Number of datapoints: {}\\n'", ".", "format", "(", "self", ".", "__len__", "(", ")", ")", "\n", "fmt_str", "+=", "'    Root Location: {}\\n'", ".", "format", "(", "self", ".", "rootdir", ")", "\n", "fmt_str", "+=", "'    File Patterns: {}\\n'", ".", "format", "(", "self", ".", "pattern", ")", "\n", "fmt_str", "+=", "'    File Loader: {}\\n'", ".", "format", "(", "self", ".", "fileloader", ")", "\n", "tmp", "=", "'    Transforms (if any): '", "\n", "fmt_str", "+=", "'{0}{1}\\n'", ".", "format", "(", "tmp", ",", "\n", "self", ".", "transform", ".", "__repr__", "(", ")", ".", "replace", "(", "'\\n'", ",", "'\\n'", "+", "' '", "*", "len", "(", "tmp", ")", ")", ")", "\n", "return", "fmt_str", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.Globset.__len__": [[535, 537], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "samples", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.Globset.__getitem__": [[538, 545], ["data_utils.Globset.fileloader", "data_utils.Globset.transform"], "methods", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.transform"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "path", ",", "target", "=", "self", ".", "samples", "[", "index", "]", "\n", "sample", "=", "self", ".", "fileloader", "(", "path", ")", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "sample", "=", "self", ".", "transform", "(", "sample", ")", "\n", "\n", "", "return", "sample", ",", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.Globset.num_classes": [[546, 548], ["len"], "methods", ["None"], ["", "def", "num_classes", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.Globset.class_name": [[549, 551], ["None"], "methods", ["None"], ["", "def", "class_name", "(", "self", ",", "cidx", ")", ":", "\n", "        ", "return", "self", ".", "classes", "[", "cidx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.Globset.indices_in_class": [[552, 555], ["numpy.array", "numpy.where().tolist", "list", "map", "numpy.where"], "methods", ["None"], ["", "def", "indices_in_class", "(", "self", ",", "cidx", ")", ":", "\n", "        ", "targets", "=", "np", ".", "array", "(", "list", "(", "map", "(", "lambda", "s", ":", "s", "[", "1", "]", ",", "self", ".", "samples", ")", ")", ")", "\n", "return", "np", ".", "where", "(", "targets", "==", "cidx", ")", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.Globset.select_classes": [[556, 562], ["data_utils.Globset.indices_in_class", "indices.extend"], "methods", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.Globset.indices_in_class"], ["", "def", "select_classes", "(", "self", ",", "cidxs", ")", ":", "\n", "        ", "indices", "=", "[", "]", "\n", "for", "i", "in", "cidxs", ":", "\n", "            ", "idxs", "=", "self", ".", "indices_in_class", "(", "i", ")", "\n", "indices", ".", "extend", "(", "idxs", ")", "\n", "", "return", "indices", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.Globset.split": [[563, 592], ["len", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "range", "copy.deepcopy", "copy.deepcopy", "list", "list", "len", "len", "map", "map", "numpy.where", "numpy.where"], "methods", ["None"], ["", "def", "split", "(", "self", ",", "rate", ")", ":", "\n", "        ", "\"\"\" dateset -> dataset1, dataset2. s.t.\n            len(dataset1) = rate * len(dataset),\n            len(dataset2) = (1-rate) * len(dataset)\n        \"\"\"", "\n", "orig_size", "=", "len", "(", "self", ")", "\n", "select", "=", "np", ".", "zeros", "(", "orig_size", ",", "dtype", "=", "int", ")", "\n", "csize", "=", "np", ".", "zeros", "(", "len", "(", "self", ".", "classes", ")", ",", "dtype", "=", "int", ")", "\n", "dsize", "=", "np", ".", "zeros", "(", "len", "(", "self", ".", "classes", ")", ",", "dtype", "=", "int", ")", "\n", "\n", "for", "i", "in", "range", "(", "orig_size", ")", ":", "\n", "            ", "_", ",", "target", "=", "self", ".", "samples", "[", "i", "]", "\n", "csize", "[", "target", "]", "+=", "1", "\n", "", "dsize", "=", "(", "csize", "*", "rate", ")", ".", "astype", "(", "int", ")", "\n", "for", "i", "in", "range", "(", "orig_size", ")", ":", "\n", "            ", "_", ",", "target", "=", "self", ".", "samples", "[", "i", "]", "\n", "if", "dsize", "[", "target", "]", ">", "0", ":", "\n", "                ", "select", "[", "i", "]", "=", "1", "\n", "dsize", "[", "target", "]", "-=", "1", "\n", "\n", "", "", "dataset1", "=", "copy", ".", "deepcopy", "(", "self", ")", "\n", "dataset2", "=", "copy", ".", "deepcopy", "(", "self", ")", "\n", "\n", "samples1", "=", "list", "(", "map", "(", "lambda", "i", ":", "dataset1", ".", "samples", "[", "i", "]", ",", "np", ".", "where", "(", "select", "==", "1", ")", "[", "0", "]", ")", ")", "\n", "samples2", "=", "list", "(", "map", "(", "lambda", "i", ":", "dataset2", ".", "samples", "[", "i", "]", ",", "np", ".", "where", "(", "select", "==", "0", ")", "[", "0", "]", ")", ")", "\n", "\n", "dataset1", ".", "samples", "=", "samples1", "\n", "dataset2", ".", "samples", "=", "samples2", "\n", "return", "dataset1", ",", "dataset2", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.Mesh.__init__": [[595, 599], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "_vertices", "=", "[", "]", "# array-like (N, D)", "\n", "self", ".", "_faces", "=", "[", "]", "# array-like (M, K)", "\n", "self", ".", "_edges", "=", "[", "]", "# array-like (L, 2)", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.Mesh.clone": [[600, 603], ["copy.deepcopy"], "methods", ["None"], ["", "def", "clone", "(", "self", ")", ":", "\n", "        ", "other", "=", "copy", ".", "deepcopy", "(", "self", ")", "\n", "return", "other", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.Mesh.clear": [[604, 607], ["None"], "methods", ["None"], ["", "def", "clear", "(", "self", ")", ":", "\n", "        ", "for", "key", "in", "self", ".", "__dict__", ":", "\n", "            ", "self", ".", "__dict__", "[", "key", "]", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.Mesh.add_attr": [[608, 610], ["None"], "methods", ["None"], ["", "", "def", "add_attr", "(", "self", ",", "name", ")", ":", "\n", "        ", "self", ".", "__dict__", "[", "name", "]", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.Mesh.vertex_array": [[611, 614], ["numpy.array"], "methods", ["None"], ["", "@", "property", "\n", "def", "vertex_array", "(", "self", ")", ":", "\n", "        ", "return", "np", ".", "array", "(", "self", ".", "_vertices", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.Mesh.vertex_list": [[615, 618], ["list", "map"], "methods", ["None"], ["", "@", "property", "\n", "def", "vertex_list", "(", "self", ")", ":", "\n", "        ", "return", "list", "(", "map", "(", "tuple", ",", "self", ".", "_vertices", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.Mesh.faces2polygons": [[619, 624], ["list", "map", "list", "map"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "faces2polygons", "(", "faces", ",", "vertices", ")", ":", "\n", "        ", "p", "=", "list", "(", "map", "(", "lambda", "face", ":", "list", "(", "map", "(", "lambda", "vidx", ":", "vertices", "[", "vidx", "]", ",", "face", ")", ")", ",", "faces", ")", ")", "\n", "return", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.Mesh.polygon_list": [[625, 629], ["data_utils.Mesh.faces2polygons"], "methods", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.Mesh.faces2polygons"], ["", "@", "property", "\n", "def", "polygon_list", "(", "self", ")", ":", "\n", "        ", "p", "=", "Mesh", ".", "faces2polygons", "(", "self", ".", "_faces", ",", "self", ".", "_vertices", ")", "\n", "return", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.Mesh.on_unit_sphere": [[630, 641], ["numpy.linalg.norm", "numpy.max", "numpy.mean"], "methods", ["None"], ["", "def", "on_unit_sphere", "(", "self", ",", "zero_mean", "=", "False", ")", ":", "\n", "# radius == 1", "\n", "        ", "v", "=", "self", ".", "vertex_array", "# (N, D)", "\n", "if", "zero_mean", ":", "\n", "            ", "a", "=", "np", ".", "mean", "(", "v", "[", ":", ",", "0", ":", "3", "]", ",", "axis", "=", "0", ",", "keepdims", "=", "True", ")", "# (1, 3)", "\n", "v", "[", ":", ",", "0", ":", "3", "]", "=", "v", "[", ":", ",", "0", ":", "3", "]", "-", "a", "\n", "", "n", "=", "np", ".", "linalg", ".", "norm", "(", "v", "[", ":", ",", "0", ":", "3", "]", ",", "axis", "=", "1", ")", "# (N,)", "\n", "m", "=", "np", ".", "max", "(", "n", ")", "# scalar", "\n", "v", "[", ":", ",", "0", ":", "3", "]", "=", "v", "[", ":", ",", "0", ":", "3", "]", "/", "m", "\n", "self", ".", "_vertices", "=", "v", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.Mesh.on_unit_cube": [[642, 652], ["numpy.max", "numpy.mean", "numpy.abs"], "methods", ["None"], ["", "def", "on_unit_cube", "(", "self", ",", "zero_mean", "=", "False", ")", ":", "\n", "# volume == 1", "\n", "        ", "v", "=", "self", ".", "vertex_array", "# (N, D)", "\n", "if", "zero_mean", ":", "\n", "            ", "a", "=", "np", ".", "mean", "(", "v", "[", ":", ",", "0", ":", "3", "]", ",", "axis", "=", "0", ",", "keepdims", "=", "True", ")", "# (1, 3)", "\n", "v", "[", ":", ",", "0", ":", "3", "]", "=", "v", "[", ":", ",", "0", ":", "3", "]", "-", "a", "\n", "", "m", "=", "np", ".", "max", "(", "np", ".", "abs", "(", "v", ")", ")", "# scalar", "\n", "v", "[", ":", ",", "0", ":", "3", "]", "=", "v", "[", ":", ",", "0", ":", "3", "]", "/", "(", "m", "*", "2", ")", "\n", "self", ".", "_vertices", "=", "v", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.Mesh.rot_x": [[653, 661], ["numpy.copy", "list", "numpy.copy", "map"], "methods", ["None"], ["", "def", "rot_x", "(", "self", ")", ":", "\n", "# camera local (up: +Y, front: -Z) -> model local (up: +Z, front: +Y).", "\n", "        ", "v", "=", "self", ".", "vertex_array", "\n", "t", "=", "np", ".", "copy", "(", "v", "[", ":", ",", "1", "]", ")", "\n", "v", "[", ":", ",", "1", "]", "=", "-", "np", ".", "copy", "(", "v", "[", ":", ",", "2", "]", ")", "\n", "v", "[", ":", ",", "2", "]", "=", "t", "\n", "self", ".", "_vertices", "=", "list", "(", "map", "(", "tuple", ",", "v", ")", ")", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.Mesh.rot_zc": [[662, 672], ["numpy.copy", "numpy.copy", "list", "map"], "methods", ["None"], ["", "def", "rot_zc", "(", "self", ")", ":", "\n", "# R = [0, -1;", "\n", "#      1,  0]", "\n", "        ", "v", "=", "self", ".", "vertex_array", "\n", "x", "=", "np", ".", "copy", "(", "v", "[", ":", ",", "0", "]", ")", "\n", "y", "=", "np", ".", "copy", "(", "v", "[", ":", ",", "1", "]", ")", "\n", "v", "[", ":", ",", "0", "]", "=", "-", "y", "\n", "v", "[", ":", ",", "1", "]", "=", "x", "\n", "self", ".", "_vertices", "=", "list", "(", "map", "(", "tuple", ",", "v", ")", ")", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.Mesh2Points.__init__": [[778, 780], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.Mesh2Points.__call__": [[781, 785], ["mesh.clone.clone.clone", "torch.from_numpy().type", "torch.from_numpy().type", "torch.from_numpy().type", "torch.from_numpy().type", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "methods", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.Mesh.clone"], ["", "def", "__call__", "(", "self", ",", "mesh", ")", ":", "\n", "        ", "mesh", "=", "mesh", ".", "clone", "(", ")", "\n", "v", "=", "mesh", ".", "vertex_array", "\n", "return", "torch", ".", "from_numpy", "(", "v", ")", ".", "type", "(", "dtype", "=", "torch", ".", "float", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.OnUnitCube.__init__": [[788, 790], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.OnUnitCube.method1": [[791, 797], ["tensor.mean", "torch.max", "torch.max", "torch.max", "torch.max", "v.abs"], "methods", ["None"], ["", "def", "method1", "(", "self", ",", "tensor", ")", ":", "\n", "        ", "m", "=", "tensor", ".", "mean", "(", "dim", "=", "0", ",", "keepdim", "=", "True", ")", "# [N, D] -> [1, D]", "\n", "v", "=", "tensor", "-", "m", "\n", "s", "=", "torch", ".", "max", "(", "v", ".", "abs", "(", ")", ")", "\n", "v", "=", "v", "/", "s", "*", "0.5", "\n", "return", "v", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.OnUnitCube.method2": [[798, 803], ["torch.max", "torch.max", "torch.max", "torch.max", "v.mean", "torch.max", "torch.max", "torch.max", "torch.max", "torch.min", "torch.min", "torch.min", "torch.min"], "methods", ["None"], ["", "def", "method2", "(", "self", ",", "tensor", ")", ":", "\n", "        ", "c", "=", "torch", ".", "max", "(", "tensor", ",", "dim", "=", "0", ")", "[", "0", "]", "-", "torch", ".", "min", "(", "tensor", ",", "dim", "=", "0", ")", "[", "0", "]", "# [N, D] -> [D]", "\n", "s", "=", "torch", ".", "max", "(", "c", ")", "# -> scalar", "\n", "v", "=", "tensor", "/", "s", "\n", "return", "v", "-", "v", ".", "mean", "(", "dim", "=", "0", ",", "keepdim", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.OnUnitCube.__call__": [[804, 807], ["data_utils.OnUnitCube.method2"], "methods", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.OnUnitCube.method2"], ["", "def", "__call__", "(", "self", ",", "tensor", ")", ":", "\n", "#return self.method1(tensor)", "\n", "        ", "return", "self", ".", "method2", "(", "tensor", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.ModelNet.__init__": [[811, 820], ["data_utils.Globset.__init__"], "methods", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.model.AnalyticalPointNetLK.__init__"], ["def", "__init__", "(", "self", ",", "dataset_path", ",", "train", "=", "1", ",", "transform", "=", "None", ",", "classinfo", "=", "None", ")", ":", "\n", "        ", "loader", "=", "offread", "\n", "if", "train", ">", "0", ":", "\n", "            ", "pattern", "=", "'train/*.off'", "\n", "", "elif", "train", "==", "0", ":", "\n", "            ", "pattern", "=", "'test/*.off'", "\n", "", "else", ":", "\n", "            ", "pattern", "=", "[", "'train/*.off'", ",", "'test/*.off'", "]", "\n", "", "super", "(", ")", ".", "__init__", "(", "dataset_path", ",", "pattern", ",", "loader", ",", "transform", ",", "classinfo", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.ShapeNet2.__init__": [[824, 828], ["data_utils.Globset.__init__"], "methods", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.model.AnalyticalPointNetLK.__init__"], ["def", "__init__", "(", "self", ",", "dataset_path", ",", "transform", "=", "None", ",", "classinfo", "=", "None", ")", ":", "\n", "        ", "loader", "=", "objread", "\n", "pattern", "=", "'*/models/model_normalized.obj'", "\n", "super", "(", ")", ".", "__init__", "(", "dataset_path", ",", "pattern", ",", "loader", ",", "transform", ",", "classinfo", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.Resampler.__init__": [[832, 834], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "num", ")", ":", "\n", "        ", "self", ".", "num", "=", "num", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.Resampler.__call__": [[835, 848], ["tensor.size", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "min", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "tensor", ")", ":", "\n", "        ", "num_points", ",", "dim_p", "=", "tensor", ".", "size", "(", ")", "\n", "out", "=", "torch", ".", "zeros", "(", "self", ".", "num", ",", "dim_p", ")", ".", "to", "(", "tensor", ")", "\n", "\n", "selected", "=", "0", "\n", "while", "selected", "<", "self", ".", "num", ":", "\n", "            ", "remainder", "=", "self", ".", "num", "-", "selected", "\n", "idx", "=", "torch", ".", "randperm", "(", "num_points", ")", "\n", "sel", "=", "min", "(", "remainder", ",", "num_points", ")", "\n", "val", "=", "tensor", "[", "idx", "[", ":", "sel", "]", "]", "\n", "out", "[", "selected", ":", "(", "selected", "+", "sel", ")", "]", "=", "val", "\n", "selected", "+=", "sel", "\n", "", "return", "out", "", "", "", ""]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.load_3dmatch_batch_data": [[18, 34], ["open3d.geometry.PointCloud", "open3d.utility.Vector3dVector", "o3d.geometry.PointCloud.voxel_down_sample", "numpy.array", "open3d.geometry.PointCloud", "open3d.utility.Vector3dVector", "o3d.geometry.PointCloud.voxel_down_sample", "numpy.array", "numpy.load", "numpy.load"], "function", ["None"], ["def", "load_3dmatch_batch_data", "(", "p0_fi", ",", "p1_fi", ",", "voxel_ratio", ")", ":", "\n", "    ", "p0", "=", "np", ".", "load", "(", "p0_fi", ")", "[", "'pcd'", "]", "\n", "p1", "=", "np", ".", "load", "(", "p1_fi", ")", "[", "'pcd'", "]", "\n", "\n", "# voxelization", "\n", "pcd0", "=", "o3d", ".", "geometry", ".", "PointCloud", "(", ")", "\n", "pcd0", ".", "points", "=", "o3d", ".", "utility", ".", "Vector3dVector", "(", "p0", ")", "\n", "p0_downsampled_pcd", "=", "pcd0", ".", "voxel_down_sample", "(", "voxel_size", "=", "voxel_ratio", ")", "# open3d 0.8.0.0+", "\n", "p0_downsampled", "=", "np", ".", "array", "(", "p0_downsampled_pcd", ".", "points", ")", "\n", "\n", "pcd1", "=", "o3d", ".", "geometry", ".", "PointCloud", "(", ")", "\n", "pcd1", ".", "points", "=", "o3d", ".", "utility", ".", "Vector3dVector", "(", "p1", ")", "\n", "p1_downsampled_pcd", "=", "pcd1", ".", "voxel_down_sample", "(", "voxel_size", "=", "voxel_ratio", ")", "# open3d 0.8.0.0+", "\n", "p1_downsampled", "=", "np", ".", "array", "(", "p1_downsampled_pcd", ".", "points", ")", "\n", "\n", "return", "p0_downsampled", ",", "p1_downsampled", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.find_voxel_overlaps": [[36, 53], ["numpy.max", "numpy.min", "numpy.max", "numpy.min", "numpy.stack", "numpy.stack", "numpy.stack", "numpy.stack", "numpy.min", "numpy.min", "numpy.max", "numpy.max", "numpy.all", "numpy.all", "numpy.all", "numpy.all", "numpy.min", "numpy.min", "numpy.max", "numpy.max"], "function", ["None"], ["", "def", "find_voxel_overlaps", "(", "p0", ",", "p1", ",", "voxel", ")", ":", "\n", "    ", "xmin", ",", "ymin", ",", "zmin", "=", "np", ".", "max", "(", "np", ".", "stack", "(", "[", "np", ".", "min", "(", "p0", ",", "0", ")", ",", "np", ".", "min", "(", "p1", ",", "0", ")", "]", ")", ",", "0", ")", "\n", "xmax", ",", "ymax", ",", "zmax", "=", "np", ".", "min", "(", "np", ".", "stack", "(", "[", "np", ".", "max", "(", "p0", ",", "0", ")", ",", "np", ".", "max", "(", "p1", ",", "0", ")", "]", ")", ",", "0", ")", "\n", "\n", "# truncate the point cloud", "\n", "eps", "=", "1e-6", "\n", "p0_", "=", "p0", "[", "np", ".", "all", "(", "p0", ">", "[", "xmin", "+", "eps", ",", "ymin", "+", "eps", ",", "zmin", "+", "eps", "]", ",", "axis", "=", "1", ")", "&", "np", ".", "all", "(", "p0", "<", "[", "xmax", "-", "eps", ",", "ymax", "-", "eps", ",", "zmax", "-", "eps", "]", ",", "axis", "=", "1", ")", "]", "\n", "p1_", "=", "p1", "[", "np", ".", "all", "(", "p1", ">", "[", "xmin", "+", "eps", ",", "ymin", "+", "eps", ",", "zmin", "+", "eps", "]", ",", "axis", "=", "1", ")", "&", "np", ".", "all", "(", "p1", "<", "[", "xmax", "-", "eps", ",", "ymax", "-", "eps", ",", "zmax", "-", "eps", "]", ",", "axis", "=", "1", ")", "]", "\n", "\n", "# recalculate the constraints", "\n", "xmin", ",", "ymin", ",", "zmin", "=", "np", ".", "max", "(", "np", ".", "stack", "(", "[", "np", ".", "min", "(", "p0", ",", "0", ")", ",", "np", ".", "min", "(", "p1", ",", "0", ")", "]", ")", ",", "0", ")", "\n", "xmax", ",", "ymax", ",", "zmax", "=", "np", ".", "min", "(", "np", ".", "stack", "(", "[", "np", ".", "max", "(", "p0", ",", "0", ")", ",", "np", ".", "max", "(", "p1", ",", "0", ")", "]", ")", ",", "0", ")", "\n", "vx", "=", "(", "xmax", "-", "xmin", ")", "/", "voxel", "\n", "vy", "=", "(", "ymax", "-", "ymin", ")", "/", "voxel", "\n", "vz", "=", "(", "zmax", "-", "zmin", ")", "/", "voxel", "\n", "\n", "return", "p0_", ",", "p1_", ",", "xmin", ",", "ymin", ",", "zmin", ",", "xmax", ",", "ymax", ",", "zmax", ",", "vx", ",", "vy", ",", "vz", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.add_noise": [[286, 291], ["torch.clamp", "torch.clamp", "torch.randn", "torch.randn"], "function", ["None"], ["", "", "def", "add_noise", "(", "pointcloud", ",", "sigma", "=", "0.01", ",", "clip", "=", "0.05", ")", ":", "\n", "    ", "N", ",", "C", "=", "pointcloud", ".", "shape", "\n", "pointcloud", "+=", "torch", ".", "clamp", "(", "sigma", "*", "torch", ".", "randn", "(", "N", ",", "C", ")", ",", "-", "1", "*", "clip", ",", "clip", ")", "\n", "\n", "return", "pointcloud", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils._points_to_voxel_kernel": [[348, 395], ["numpy.around().astype", "numpy.zeros", "range", "range", "numpy.around", "numpy.floor"], "function", ["None"], ["", "", "def", "_points_to_voxel_kernel", "(", "points", ",", "\n", "voxel_size", ",", "\n", "coords_range", ",", "\n", "num_points_per_voxel", ",", "\n", "coor_to_voxelidx", ",", "\n", "voxels", ",", "\n", "coors", ",", "\n", "max_points", "=", "35", ",", "\n", "max_voxels", "=", "20000", ")", ":", "\n", "# need mutex if write in cuda, but numba.cuda don't support mutex.", "\n", "# in addition, pytorch don't support cuda in dataloader(tensorflow support this).", "\n", "# put all computations to one loop.", "\n", "# we shouldn't create large array in main jit code, otherwise", "\n", "# decrease performance", "\n", "    ", "N", "=", "points", ".", "shape", "[", "0", "]", "\n", "ndim", "=", "3", "\n", "grid_size", "=", "(", "coords_range", "[", "3", ":", "]", "-", "coords_range", "[", ":", "3", "]", ")", "/", "voxel_size", "\n", "grid_size", "=", "np", ".", "around", "(", "grid_size", ",", "0", ",", "grid_size", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "\n", "coor", "=", "np", ".", "zeros", "(", "shape", "=", "(", "3", ",", ")", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "voxel_num", "=", "0", "\n", "failed", "=", "False", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "        ", "failed", "=", "False", "\n", "for", "j", "in", "range", "(", "ndim", ")", ":", "\n", "            ", "c", "=", "np", ".", "floor", "(", "(", "points", "[", "i", ",", "j", "]", "-", "coords_range", "[", "j", "]", ")", "/", "voxel_size", "[", "j", "]", ")", "\n", "if", "c", "<", "0", "or", "c", ">=", "grid_size", "[", "j", "]", ":", "\n", "                ", "failed", "=", "True", "\n", "break", "\n", "", "coor", "[", "j", "]", "=", "c", "\n", "", "if", "failed", ":", "\n", "            ", "continue", "\n", "", "voxelidx", "=", "coor_to_voxelidx", "[", "coor", "[", "0", "]", ",", "coor", "[", "1", "]", ",", "coor", "[", "2", "]", "]", "\n", "if", "voxelidx", "==", "-", "1", ":", "\n", "            ", "voxelidx", "=", "voxel_num", "\n", "# print(voxel_num)", "\n", "if", "voxel_num", ">", "max_voxels", ":", "\n", "                ", "break", "\n", "", "voxel_num", "+=", "1", "\n", "coor_to_voxelidx", "[", "coor", "[", "0", "]", ",", "coor", "[", "1", "]", ",", "coor", "[", "2", "]", "]", "=", "voxelidx", "\n", "coors", "[", "voxelidx", "]", "=", "coor", "\n", "", "num", "=", "num_points_per_voxel", "[", "voxelidx", "]", "\n", "if", "num", "<", "max_points", ":", "\n", "            ", "voxels", "[", "voxelidx", ",", "num", "]", "=", "points", "[", "i", "]", "\n", "num_points_per_voxel", "[", "voxelidx", "]", "+=", "1", "\n", "\n", "", "", "return", "voxel_num", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.points_to_voxel_second": [[398, 450], ["tuple", "numpy.zeros", "numpy.zeros", "data_utils._points_to_voxel_kernel", "isinstance", "numpy.array", "isinstance", "numpy.array", "numpy.around().astype().tolist", "numpy.ones", "numpy.ones", "numpy.mean", "numpy.around().astype", "numpy.around"], "function", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils._points_to_voxel_kernel"], ["", "def", "points_to_voxel_second", "(", "points", ",", "\n", "coords_range", ",", "\n", "voxel_size", ",", "\n", "max_points", "=", "100", ",", "\n", "reverse_index", "=", "False", ",", "\n", "max_voxels", "=", "20000", ")", ":", "\n", "    ", "\"\"\"convert kitti points(N, >=3) to voxels. This version calculate\n    everything in one loop. now it takes only 4.2ms(complete point cloud) \n    with jit and 3.2ghz cpu.(don't calculate other features)\n    Note: this function in ubuntu seems faster than windows 10.\n    Args:\n        points: [N, ndim] float tensor. points[:, :3] contain xyz points and\n            points[:, 3:] contain other information such as reflectivity.\n        voxel_size: [3] list/tuple or array, float. xyz, indicate voxel size\n        coords_range: [6] list/tuple or array, float. indicate voxel range.\n            format: xyzxyz, minmax\n        max_points: int. indicate maximum points contained in a voxel.\n        reverse_index: boolean. indicate whether return reversed coordinates.\n            if points has xyz format and reverse_index is True, output \n            coordinates will be zyx format, but points in features always\n            xyz format.\n        max_voxels: int. indicate maximum voxels this function create.\n            for second, 20000 is a good choice. you should shuffle points\n            before call this function because max_voxels may drop some points.\n    Returns:\n        voxels: [M, max_points, ndim] float tensor. only contain points.\n        coordinates: [M, 3] int32 tensor.\n        num_points_per_voxel: [M] int32 tensor.\n    \"\"\"", "\n", "if", "not", "isinstance", "(", "voxel_size", ",", "np", ".", "ndarray", ")", ":", "\n", "        ", "voxel_size", "=", "np", ".", "array", "(", "voxel_size", ",", "dtype", "=", "points", ".", "dtype", ")", "\n", "", "if", "not", "isinstance", "(", "coords_range", ",", "np", ".", "ndarray", ")", ":", "\n", "        ", "coords_range", "=", "np", ".", "array", "(", "coords_range", ",", "dtype", "=", "points", ".", "dtype", ")", "\n", "", "voxelmap_shape", "=", "(", "coords_range", "[", "3", ":", "]", "-", "coords_range", "[", ":", "3", "]", ")", "/", "voxel_size", "\n", "voxelmap_shape", "=", "tuple", "(", "np", ".", "around", "(", "voxelmap_shape", ")", ".", "astype", "(", "np", ".", "int32", ")", ".", "tolist", "(", ")", ")", "\n", "if", "reverse_index", ":", "\n", "        ", "voxelmap_shape", "=", "voxelmap_shape", "[", ":", ":", "-", "1", "]", "\n", "# don't create large array in jit(nopython=True) code.", "\n", "", "num_points_per_voxel", "=", "np", ".", "zeros", "(", "shape", "=", "(", "max_voxels", ",", ")", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "coor_to_voxelidx", "=", "-", "np", ".", "ones", "(", "shape", "=", "voxelmap_shape", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "voxels", "=", "np", ".", "ones", "(", "\n", "shape", "=", "(", "max_voxels", ",", "max_points", ",", "points", ".", "shape", "[", "-", "1", "]", ")", ",", "dtype", "=", "points", ".", "dtype", ")", "*", "np", ".", "mean", "(", "points", ",", "0", ")", "\n", "coors", "=", "np", ".", "zeros", "(", "shape", "=", "(", "max_voxels", ",", "3", ")", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "voxel_num", "=", "_points_to_voxel_kernel", "(", "\n", "points", ",", "voxel_size", ",", "coords_range", ",", "num_points_per_voxel", ",", "\n", "coor_to_voxelidx", ",", "voxels", ",", "coors", ",", "max_points", ",", "max_voxels", ")", "\n", "\n", "coors", "=", "coors", "[", ":", "voxel_num", "]", "\n", "voxels", "=", "voxels", "[", ":", "voxel_num", "]", "\n", "num_points_per_voxel", "=", "num_points_per_voxel", "[", ":", "voxel_num", "]", "\n", "\n", "return", "voxels", ",", "coors", ",", "num_points_per_voxel", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.load_pose": [[452, 463], ["print", "open", "csv.reader", "poses.append", "numpy.array", "float"], "function", ["None"], ["", "def", "load_pose", "(", "trans_pth", ",", "num_pose", ")", ":", "\n", "    ", "with", "open", "(", "trans_pth", ",", "'r'", ")", "as", "csvfile", ":", "\n", "        ", "csvreader", "=", "csv", ".", "reader", "(", "csvfile", ")", "\n", "poses", "=", "[", "]", "\n", "for", "row", "in", "csvreader", ":", "\n", "            ", "row", "=", "[", "float", "(", "i", ")", "for", "i", "in", "row", "]", "\n", "poses", ".", "append", "(", "row", ")", "\n", "", "init_gt", "=", "np", ".", "array", "(", "poses", ")", "[", ":", "num_pose", "]", "\n", "", "print", "(", "'init_trans shape is {}'", ".", "format", "(", "init_gt", ".", "shape", ")", ")", "\n", "\n", "return", "init_gt", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.find_classes": [[465, 471], ["classes.sort", "os.listdir", "os.path.isdir", "range", "os.path.join", "len"], "function", ["None"], ["", "def", "find_classes", "(", "root", ")", ":", "\n", "    ", "\"\"\" find ${root}/${class}/* \"\"\"", "\n", "classes", "=", "[", "d", "for", "d", "in", "os", ".", "listdir", "(", "root", ")", "if", "os", ".", "path", ".", "isdir", "(", "os", ".", "path", ".", "join", "(", "root", ",", "d", ")", ")", "]", "\n", "classes", ".", "sort", "(", ")", "\n", "class_to_idx", "=", "{", "classes", "[", "i", "]", ":", "i", "for", "i", "in", "range", "(", "len", "(", "classes", ")", ")", "}", "\n", "return", "classes", ",", "class_to_idx", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.glob_dataset": [[473, 495], ["os.path.expanduser", "sorted", "os.listdir", "os.path.join", "class_to_idx.get", "enumerate", "os.path.isdir", "os.path.join", "glob.glob", "sorted", "samples.append"], "function", ["None"], ["", "def", "glob_dataset", "(", "root", ",", "class_to_idx", ",", "ptns", ")", ":", "\n", "    ", "\"\"\" glob ${root}/${class}/${ptns[i]} \"\"\"", "\n", "root", "=", "os", ".", "path", ".", "expanduser", "(", "root", ")", "\n", "samples", "=", "[", "]", "\n", "\n", "for", "target", "in", "sorted", "(", "os", ".", "listdir", "(", "root", ")", ")", ":", "\n", "        ", "d", "=", "os", ".", "path", ".", "join", "(", "root", ",", "target", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "d", ")", ":", "\n", "            ", "continue", "\n", "\n", "", "target_idx", "=", "class_to_idx", ".", "get", "(", "target", ")", "\n", "if", "target_idx", "is", "None", ":", "\n", "            ", "continue", "\n", "\n", "", "for", "i", ",", "ptn", "in", "enumerate", "(", "ptns", ")", ":", "\n", "            ", "gptn", "=", "os", ".", "path", ".", "join", "(", "d", ",", "ptn", ")", "\n", "names", "=", "glob", ".", "glob", "(", "gptn", ")", "\n", "for", "path", "in", "sorted", "(", "names", ")", ":", "\n", "                ", "item", "=", "(", "path", ",", "target_idx", ")", "\n", "samples", ".", "append", "(", "item", ")", "\n", "\n", "", "", "", "return", "samples", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.offread": [[673, 680], ["open", "data_utils._load_off", "data_utils._fix_modelnet_broken_off"], "function", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils._load_off", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils._fix_modelnet_broken_off"], ["", "", "def", "offread", "(", "filepath", ",", "points_only", "=", "True", ")", ":", "\n", "    ", "\"\"\" read Geomview OFF file. \"\"\"", "\n", "with", "open", "(", "filepath", ",", "'r'", ")", "as", "fin", ":", "\n", "        ", "mesh", ",", "fixme", "=", "_load_off", "(", "fin", ",", "points_only", ")", "\n", "", "if", "fixme", ":", "\n", "        ", "_fix_modelnet_broken_off", "(", "filepath", ")", "\n", "", "return", "mesh", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils._load_off": [[681, 709], ["data_utils.Mesh", "fin.readline().strip", "range", "range", "fin.readline().strip", "tuple", "tuple", "Mesh._vertices.append", "tuple", "Mesh._faces.append", "fin.readline", "tuple", "RuntimeError", "fin.readline", "int", "float", "fin.readline().strip.split", "int", "fin.readline().strip().split", "int", "fin.readline().strip.split", "fin.readline().strip().split", "fin.readline().strip", "fin.readline().strip", "fin.readline", "fin.readline"], "function", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.Globset.split", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.Globset.split", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.Globset.split", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.Globset.split"], ["", "def", "_load_off", "(", "fin", ",", "points_only", ")", ":", "\n", "    ", "\"\"\" read Geomview OFF file. \"\"\"", "\n", "mesh", "=", "Mesh", "(", ")", "\n", "\n", "fixme", "=", "False", "\n", "sig", "=", "fin", ".", "readline", "(", ")", ".", "strip", "(", ")", "\n", "if", "sig", "==", "'OFF'", ":", "\n", "        ", "line", "=", "fin", ".", "readline", "(", ")", ".", "strip", "(", ")", "\n", "num_verts", ",", "num_faces", ",", "num_edges", "=", "tuple", "(", "[", "int", "(", "s", ")", "for", "s", "in", "line", ".", "split", "(", "' '", ")", "]", ")", "\n", "", "elif", "sig", "[", "0", ":", "3", "]", "==", "'OFF'", ":", "# ...broken data in ModelNet (missing '\\n')...", "\n", "        ", "line", "=", "sig", "[", "3", ":", "]", "\n", "num_verts", ",", "num_faces", ",", "num_edges", "=", "tuple", "(", "[", "int", "(", "s", ")", "for", "s", "in", "line", ".", "split", "(", "' '", ")", "]", ")", "\n", "fixme", "=", "True", "\n", "", "else", ":", "\n", "        ", "raise", "RuntimeError", "(", "'unknown format'", ")", "\n", "\n", "", "for", "v", "in", "range", "(", "num_verts", ")", ":", "\n", "        ", "vp", "=", "tuple", "(", "float", "(", "s", ")", "for", "s", "in", "fin", ".", "readline", "(", ")", ".", "strip", "(", ")", ".", "split", "(", "' '", ")", ")", "\n", "mesh", ".", "_vertices", ".", "append", "(", "vp", ")", "\n", "\n", "", "if", "points_only", ":", "\n", "        ", "return", "mesh", ",", "fixme", "\n", "\n", "", "for", "f", "in", "range", "(", "num_faces", ")", ":", "\n", "        ", "fc", "=", "tuple", "(", "[", "int", "(", "s", ")", "for", "s", "in", "fin", ".", "readline", "(", ")", ".", "strip", "(", ")", ".", "split", "(", "' '", ")", "]", "[", "1", ":", "]", ")", "\n", "mesh", ".", "_faces", ".", "append", "(", "fc", ")", "\n", "\n", "", "return", "mesh", ",", "fixme", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils._fix_modelnet_broken_off": [[711, 722], ["os.rename", "open", "open", "fin.readline().strip", "print", "print", "print", "fin.readline", "line.strip"], "function", ["None"], ["", "def", "_fix_modelnet_broken_off", "(", "filepath", ")", ":", "\n", "    ", "oldfile", "=", "'{}.orig'", ".", "format", "(", "filepath", ")", "\n", "os", ".", "rename", "(", "filepath", ",", "oldfile", ")", "\n", "with", "open", "(", "oldfile", ",", "'r'", ")", "as", "fin", ":", "\n", "        ", "with", "open", "(", "filepath", ",", "'w'", ")", "as", "fout", ":", "\n", "            ", "sig", "=", "fin", ".", "readline", "(", ")", ".", "strip", "(", ")", "\n", "line", "=", "sig", "[", "3", ":", "]", "\n", "print", "(", "'OFF'", ",", "file", "=", "fout", ")", "\n", "print", "(", "line", ",", "file", "=", "fout", ")", "\n", "for", "line", "in", "fin", ":", "\n", "                ", "print", "(", "line", ".", "strip", "(", ")", ",", "file", "=", "fout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.objread": [[724, 775], ["open", "data_utils.Mesh", "line.startswith", "line.split", "tuple", "_vertices.append", "map", "tuple", "_normals.append", "map", "_texcoords.append", "tuple", "map", "_faces.append", "tuple.split", "face_.append", "texcoords_.append", "texcoords_.append", "norms_.append", "norms_.append", "int", "len", "len", "len", "len", "int", "int"], "function", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.Globset.split", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.data_utils.Globset.split"], ["", "", "", "", "def", "objread", "(", "filepath", ",", "points_only", "=", "True", ")", ":", "\n", "    ", "\"\"\"Loads a Wavefront OBJ file. \"\"\"", "\n", "_vertices", "=", "[", "]", "\n", "_normals", "=", "[", "]", "\n", "_texcoords", "=", "[", "]", "\n", "_faces", "=", "[", "]", "\n", "_mtl_name", "=", "None", "\n", "\n", "material", "=", "None", "\n", "for", "line", "in", "open", "(", "filepath", ",", "\"r\"", ")", ":", "\n", "        ", "if", "line", ".", "startswith", "(", "'#'", ")", ":", "continue", "\n", "values", "=", "line", ".", "split", "(", ")", "\n", "if", "not", "values", ":", "continue", "\n", "if", "values", "[", "0", "]", "==", "'v'", ":", "\n", "            ", "v", "=", "tuple", "(", "map", "(", "float", ",", "values", "[", "1", ":", "4", "]", ")", ")", "\n", "_vertices", ".", "append", "(", "v", ")", "\n", "", "elif", "values", "[", "0", "]", "==", "'vn'", ":", "\n", "            ", "v", "=", "tuple", "(", "map", "(", "float", ",", "values", "[", "1", ":", "4", "]", ")", ")", "\n", "_normals", ".", "append", "(", "v", ")", "\n", "", "elif", "values", "[", "0", "]", "==", "'vt'", ":", "\n", "            ", "_texcoords", ".", "append", "(", "tuple", "(", "map", "(", "float", ",", "values", "[", "1", ":", "3", "]", ")", ")", ")", "\n", "", "elif", "values", "[", "0", "]", "in", "(", "'usemtl'", ",", "'usemat'", ")", ":", "\n", "            ", "material", "=", "values", "[", "1", "]", "\n", "", "elif", "values", "[", "0", "]", "==", "'mtllib'", ":", "\n", "            ", "_mtl_name", "=", "values", "[", "1", "]", "\n", "", "elif", "values", "[", "0", "]", "==", "'f'", ":", "\n", "            ", "face_", "=", "[", "]", "\n", "texcoords_", "=", "[", "]", "\n", "norms_", "=", "[", "]", "\n", "for", "v", "in", "values", "[", "1", ":", "]", ":", "\n", "                ", "w", "=", "v", ".", "split", "(", "'/'", ")", "\n", "face_", ".", "append", "(", "int", "(", "w", "[", "0", "]", ")", "-", "1", ")", "\n", "if", "len", "(", "w", ")", ">=", "2", "and", "len", "(", "w", "[", "1", "]", ")", ">", "0", ":", "\n", "                    ", "texcoords_", ".", "append", "(", "int", "(", "w", "[", "1", "]", ")", "-", "1", ")", "\n", "", "else", ":", "\n", "                    ", "texcoords_", ".", "append", "(", "-", "1", ")", "\n", "", "if", "len", "(", "w", ")", ">=", "3", "and", "len", "(", "w", "[", "2", "]", ")", ">", "0", ":", "\n", "                    ", "norms_", ".", "append", "(", "int", "(", "w", "[", "2", "]", ")", "-", "1", ")", "\n", "", "else", ":", "\n", "                    ", "norms_", ".", "append", "(", "-", "1", ")", "\n", "#_faces.append((face_, norms_, texcoords_, material))", "\n", "", "", "_faces", ".", "append", "(", "face_", ")", "\n", "\n", "", "", "mesh", "=", "Mesh", "(", ")", "\n", "mesh", ".", "_vertices", "=", "_vertices", "\n", "if", "points_only", ":", "\n", "        ", "return", "mesh", "\n", "\n", "", "mesh", ".", "_faces", "=", "_faces", "\n", "\n", "return", "mesh", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.trainer.TrainerAnalyticalPointNetLK.__init__": [[20, 32], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "# PointNet", "\n", "        ", "self", ".", "dim_k", "=", "args", ".", "dim_k", "\n", "# LK", "\n", "self", ".", "device", "=", "args", ".", "device", "\n", "self", ".", "max_iter", "=", "args", ".", "max_iter", "\n", "self", ".", "xtol", "=", "1.0e-7", "\n", "self", ".", "p0_zero_mean", "=", "True", "\n", "self", ".", "p1_zero_mean", "=", "True", "\n", "# network", "\n", "self", ".", "embedding", "=", "args", ".", "embedding", "\n", "self", ".", "filename", "=", "args", ".", "outfile", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.trainer.TrainerAnalyticalPointNetLK.create_features": [[33, 37], ["model.Pointnet_Features.float", "model.Pointnet_Features"], "methods", ["None"], ["", "def", "create_features", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "embedding", "==", "'pointnet'", ":", "\n", "            ", "ptnet", "=", "model", ".", "Pointnet_Features", "(", "dim_k", "=", "self", ".", "dim_k", ")", "\n", "", "return", "ptnet", ".", "float", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.trainer.TrainerAnalyticalPointNetLK.create_from_pointnet_features": [[38, 40], ["model.AnalyticalPointNetLK"], "methods", ["None"], ["", "def", "create_from_pointnet_features", "(", "self", ",", "ptnet", ")", ":", "\n", "        ", "return", "model", ".", "AnalyticalPointNetLK", "(", "ptnet", ",", "self", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.trainer.TrainerAnalyticalPointNetLK.create_model": [[41, 44], ["trainer.TrainerAnalyticalPointNetLK.create_features", "trainer.TrainerAnalyticalPointNetLK.create_from_pointnet_features"], "methods", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.trainer.TrainerAnalyticalPointNetLK.create_features", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.trainer.TrainerAnalyticalPointNetLK.create_from_pointnet_features"], ["", "def", "create_model", "(", "self", ")", ":", "\n", "        ", "ptnet", "=", "self", ".", "create_features", "(", ")", "\n", "return", "self", ".", "create_from_pointnet_features", "(", "ptnet", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.trainer.TrainerAnalyticalPointNetLK.train_one_epoch": [[45, 68], ["ptnetlk.float", "ptnetlk.train", "enumerate", "trainer.TrainerAnalyticalPointNetLK.compute_loss", "optimizer.zero_grad", "loss.backward", "optimizer.step", "loss.item", "loss_pose.item", "float", "float"], "methods", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.train.train", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.trainer.TrainerAnalyticalPointNetLK.compute_loss", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.ExpMap.backward"], ["", "def", "train_one_epoch", "(", "self", ",", "ptnetlk", ",", "trainloader", ",", "optimizer", ",", "device", ",", "mode", ",", "data_type", "=", "'synthetic'", ",", "num_random_points", "=", "100", ")", ":", "\n", "        ", "ptnetlk", ".", "float", "(", ")", "\n", "ptnetlk", ".", "train", "(", ")", "\n", "vloss", "=", "0.0", "\n", "gloss", "=", "0.0", "\n", "batches", "=", "0", "\n", "\n", "for", "i", ",", "data", "in", "enumerate", "(", "trainloader", ")", ":", "\n", "            ", "loss", ",", "loss_pose", "=", "self", ".", "compute_loss", "(", "ptnetlk", ",", "data", ",", "device", ",", "mode", ",", "data_type", ",", "num_random_points", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "vloss", "+=", "(", "loss", ".", "item", "(", ")", ")", "\n", "gloss", "+=", "(", "loss_pose", ".", "item", "(", ")", ")", "\n", "batches", "+=", "1", "\n", "\n", "", "ave_vloss", "=", "float", "(", "vloss", ")", "/", "batches", "\n", "ave_loss_pose", "=", "float", "(", "gloss", ")", "/", "batches", "\n", "\n", "return", "ave_vloss", ",", "ave_loss_pose", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.trainer.TrainerAnalyticalPointNetLK.eval_one_epoch": [[69, 86], ["ptnetlk.eval", "enumerate", "trainer.TrainerAnalyticalPointNetLK.compute_loss", "loss.item", "loss_pose.item", "float", "float"], "methods", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.trainer.TrainerAnalyticalPointNetLK.compute_loss"], ["", "def", "eval_one_epoch", "(", "self", ",", "ptnetlk", ",", "evalloader", ",", "device", ",", "mode", ",", "data_type", "=", "'synthetic'", ",", "num_random_points", "=", "100", ")", ":", "\n", "        ", "ptnetlk", ".", "eval", "(", ")", "\n", "vloss", "=", "0.0", "\n", "gloss", "=", "0.0", "\n", "batches", "=", "0", "\n", "\n", "for", "_", ",", "data", "in", "enumerate", "(", "evalloader", ")", ":", "\n", "            ", "loss", ",", "loss_pose", "=", "self", ".", "compute_loss", "(", "ptnetlk", ",", "data", ",", "device", ",", "mode", ",", "data_type", ",", "num_random_points", ")", "\n", "\n", "vloss", "+=", "(", "loss", ".", "item", "(", ")", ")", "\n", "gloss", "+=", "(", "loss_pose", ".", "item", "(", ")", ")", "\n", "batches", "+=", "1", "\n", "\n", "", "ave_vloss", "=", "float", "(", "vloss", ")", "/", "batches", "\n", "ave_loss_pose", "=", "float", "(", "gloss", ")", "/", "batches", "\n", "\n", "return", "ave_vloss", ",", "ave_loss_pose", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.trainer.TrainerAnalyticalPointNetLK.test_one_epoch": [[87, 209], ["ptnetlk.eval", "tqdm.tqdm", "utils.test_metrics", "enumerate", "range", "gt_pose.float().to.cpu().contiguous().view.squeeze().numpy().transpose", "scipy.spatial.transform.Rotation.from_matrix", "scipy.spatial.transform.Rotation.from_matrix.as_euler", "numpy.array", "rotations_gt.append", "translation_gt.append", "estimated_pose.cpu().contiguous().view().detach.squeeze().numpy", "scipy.spatial.transform.Rotation.from_matrix", "scipy.spatial.transform.Rotation.from_matrix.as_euler", "numpy.array", "rotations_ab.append", "translation_ab.append", "len", "voxel_features_p0.reshape().to.reshape().to.reshape().to", "voxel_features_p1.reshape().to.reshape().to.reshape().to", "voxel_coords_p0.reshape().to.reshape().to.reshape().to", "voxel_coords_p1.reshape().to.reshape().to.reshape().to", "gt_pose.float().to.float().to.float().to", "p0.float().to.float().to.float().to", "p1.float().to.float().to.float().to", "print", "gt_pose.float().to.float().to.cpu().contiguous().view", "estimated_pose.cpu().contiguous().view().detach", "estimated_pose.cpu().contiguous().view().detach.bmm", "utils.log", "utils.log.norm", "utils.log.norm.mean", "LOGGER.info", "R_gt.dot", "p0.float().to.float().to.float().to", "p1.float().to.float().to.float().to", "model.AnalyticalPointNetLK.do_forward", "model.AnalyticalPointNetLK.do_forward", "open3d.geometry.PointCloud", "open3d.utility.Vector3dVector", "open3d.geometry.PointCloud.estimate_normals", "open3d.geometry.PointCloud.orient_normals_to_align_with_direction", "open3d.geometry.PointCloud.paint_uniform_color", "open3d.geometry.PointCloud", "open3d.utility.Vector3dVector", "open3d.geometry.PointCloud.estimate_normals", "open3d.geometry.PointCloud.orient_normals_to_align_with_direction", "open3d.geometry.PointCloud.paint_uniform_color", "open3d.geometry.PointCloud", "open3d.utility.Vector3dVector", "open3d.geometry.PointCloud.estimate_normals", "open3d.geometry.PointCloud.orient_normals_to_align_with_direction", "open3d.geometry.PointCloud.paint_uniform_color", "len", "gt_pose.float().to.cpu().contiguous().view.squeeze().numpy", "estimated_pose.cpu().contiguous().view().detach.squeeze", "voxel_features_p0.reshape().to.reshape().to.reshape", "voxel_features_p1.reshape().to.reshape().to.reshape", "voxel_coords_p0.reshape().to.reshape().to.reshape", "voxel_coords_p1.reshape().to.reshape().to.reshape", "gt_pose.float().to.float().to.float", "p0.float().to.float().to.float", "p1.float().to.float().to.float", "gt_pose.float().to.float().to.cpu().contiguous", "estimated_pose.cpu().contiguous().view", "utils.transform().transpose", "p0_hat.detach().cpu().numpy", "p0_.cpu().numpy", "p1_.cpu().numpy", "p0.float().to.float().to.float", "p1.float().to.float().to.float", "open3d.geometry.KDTreeSearchParamHybrid", "open3d.geometry.KDTreeSearchParamHybrid", "open3d.geometry.KDTreeSearchParamHybrid", "open3d.web_visualizer.draw", "open3d.visualization.draw_geometries", "open3d.web_visualizer.draw", "open3d.visualization.draw_geometries", "gt_pose.float().to.cpu().contiguous().view.squeeze", "gt_pose.float().to.float().to.cpu", "estimated_pose.cpu().contiguous", "utils.transform", "p0_hat.detach().cpu", "p0_.cpu", "p1_.cpu", "p1_.unsqueeze", "estimated_pose.cpu", "p0_hat.detach"], "methods", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.test_metrics", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.log", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.model.AnalyticalPointNetLK.do_forward", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.model.AnalyticalPointNetLK.do_forward", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.transform"], ["", "def", "test_one_epoch", "(", "self", ",", "ptnetlk", ",", "testloader", ",", "device", ",", "mode", ",", "data_type", "=", "'synthetic'", ",", "vis", "=", "False", ",", "toyexample", "=", "False", ")", ":", "\n", "        ", "ptnetlk", ".", "eval", "(", ")", "\n", "rotations_gt", "=", "[", "]", "\n", "translation_gt", "=", "[", "]", "\n", "rotations_ab", "=", "[", "]", "\n", "translation_ab", "=", "[", "]", "\n", "\n", "for", "i", ",", "data", "in", "tqdm", ".", "tqdm", "(", "enumerate", "(", "testloader", ")", ",", "total", "=", "len", "(", "testloader", ")", ",", "ncols", "=", "73", ",", "leave", "=", "False", ")", ":", "\n", "# if voxelization: VxNx3, Vx3, 1x4x4", "\n", "            ", "if", "data_type", "==", "'real'", ":", "\n", "                ", "if", "vis", ":", "\n", "                    ", "voxel_features_p0", ",", "voxel_coords_p0", ",", "voxel_features_p1", ",", "voxel_coords_p1", ",", "gt_pose", ",", "p0", ",", "p1", "=", "data", "\n", "p0", "=", "p0", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "p1", "=", "p1", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "", "else", ":", "\n", "                    ", "voxel_features_p0", ",", "voxel_coords_p0", ",", "voxel_features_p1", ",", "voxel_coords_p1", ",", "gt_pose", "=", "data", "\n", "", "voxel_features_p0", "=", "voxel_features_p0", ".", "reshape", "(", "-", "1", ",", "voxel_features_p0", ".", "shape", "[", "2", "]", ",", "voxel_features_p0", ".", "shape", "[", "3", "]", ")", ".", "to", "(", "device", ")", "\n", "voxel_features_p1", "=", "voxel_features_p1", ".", "reshape", "(", "-", "1", ",", "voxel_features_p1", ".", "shape", "[", "2", "]", ",", "voxel_features_p1", ".", "shape", "[", "3", "]", ")", ".", "to", "(", "device", ")", "\n", "voxel_coords_p0", "=", "voxel_coords_p0", ".", "reshape", "(", "-", "1", ",", "voxel_coords_p0", ".", "shape", "[", "2", "]", ")", ".", "to", "(", "device", ")", "\n", "voxel_coords_p1", "=", "voxel_coords_p1", ".", "reshape", "(", "-", "1", ",", "voxel_coords_p1", ".", "shape", "[", "2", "]", ")", ".", "to", "(", "device", ")", "\n", "gt_pose", "=", "gt_pose", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "if", "voxel_features_p0", ".", "shape", "[", "0", "]", "==", "0", "or", "voxel_features_p1", ".", "shape", "[", "0", "]", "==", "0", ":", "\n", "                    ", "data_flag", "=", "-", "1", "\n", "", "else", ":", "\n", "                    ", "data_flag", "=", "1", "\n", "", "", "else", ":", "\n", "                ", "p0", ",", "p1", ",", "gt_pose", "=", "data", "\n", "p0", "=", "p0", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "p1", "=", "p1", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "if", "p0", ".", "shape", "[", "0", "]", "==", "0", "or", "p1", ".", "shape", "[", "0", "]", "==", "0", ":", "\n", "                    ", "data_flag", "=", "-", "1", "\n", "", "else", ":", "\n", "                    ", "data_flag", "=", "1", "\n", "\n", "", "", "if", "data_flag", "==", "-", "1", ":", "\n", "                ", "print", "(", "'empty data, continue!'", ")", "\n", "continue", "\n", "\n", "", "if", "vis", ":", "\n", "                ", "start_idx", "=", "0", "\n", "end_idx", "=", "self", ".", "max_iter", "+", "1", "\n", "", "else", ":", "\n", "                ", "start_idx", "=", "self", ".", "max_iter", "\n", "end_idx", "=", "self", ".", "max_iter", "+", "1", "\n", "\n", "", "for", "j", "in", "range", "(", "start_idx", ",", "end_idx", ")", ":", "\n", "                ", "if", "data_type", "==", "'real'", ":", "\n", "                    ", "_", "=", "model", ".", "AnalyticalPointNetLK", ".", "do_forward", "(", "ptnetlk", ",", "voxel_features_p0", ",", "voxel_coords_p0", ",", "\n", "voxel_features_p1", ",", "voxel_coords_p1", ",", "j", ",", "self", ".", "xtol", ",", "self", ".", "p0_zero_mean", ",", "self", ".", "p1_zero_mean", ",", "mode", ",", "data_type", ")", "\n", "", "else", ":", "\n", "                    ", "_", "=", "model", ".", "AnalyticalPointNetLK", ".", "do_forward", "(", "ptnetlk", ",", "p0", ",", "None", ",", "\n", "p1", ",", "None", ",", "j", ",", "self", ".", "xtol", ",", "self", ".", "p0_zero_mean", ",", "self", ".", "p1_zero_mean", ",", "mode", ",", "data_type", ")", "\n", "\n", "", "estimated_pose", "=", "ptnetlk", ".", "g", "\n", "\n", "ig_gt", "=", "gt_pose", ".", "cpu", "(", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "4", ",", "4", ")", "# --> [1, 4, 4]", "\n", "g_hat", "=", "estimated_pose", ".", "cpu", "(", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "4", ",", "4", ")", ".", "detach", "(", ")", "# --> [1, 4, 4], p1->p0 (S->T)", "\n", "\n", "if", "vis", ":", "\n", "# ANCHOR for visualization", "\n", "                    ", "p0_", "=", "p0", "[", "0", "]", "\n", "p1_", "=", "p1", "[", "0", "]", "\n", "p0_hat", "=", "utils", ".", "transform", "(", "estimated_pose", ",", "p1_", ".", "unsqueeze", "(", "0", ")", ")", ".", "transpose", "(", "1", ",", "2", ")", "[", "0", "]", "# Nx3", "\n", "\n", "pcd0", "=", "o3d", ".", "geometry", ".", "PointCloud", "(", ")", "\n", "pcd0", ".", "points", "=", "o3d", ".", "utility", ".", "Vector3dVector", "(", "p0_hat", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "pcd0", ".", "estimate_normals", "(", "search_param", "=", "o3d", ".", "geometry", ".", "KDTreeSearchParamHybrid", "(", "radius", "=", "0.1", ",", "max_nn", "=", "30", ")", ")", "\n", "pcd0", ".", "orient_normals_to_align_with_direction", "(", ")", "\n", "pcd0", ".", "paint_uniform_color", "(", "[", "123", "/", "255", ",", "89", "/", "255", ",", "151", "/", "255", "]", ")", "\n", "\n", "pcd1", "=", "o3d", ".", "geometry", ".", "PointCloud", "(", ")", "\n", "pcd1", ".", "points", "=", "o3d", ".", "utility", ".", "Vector3dVector", "(", "p0_", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "pcd1", ".", "estimate_normals", "(", "search_param", "=", "o3d", ".", "geometry", ".", "KDTreeSearchParamHybrid", "(", "radius", "=", "0.1", ",", "max_nn", "=", "30", ")", ")", "\n", "pcd1", ".", "orient_normals_to_align_with_direction", "(", ")", "\n", "pcd1", ".", "paint_uniform_color", "(", "[", "53", "/", "255", ",", "141", "/", "255", ",", "42", "/", "255", "]", ")", "\n", "\n", "pcd2", "=", "o3d", ".", "geometry", ".", "PointCloud", "(", ")", "\n", "pcd2", ".", "points", "=", "o3d", ".", "utility", ".", "Vector3dVector", "(", "p1_", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "pcd2", ".", "estimate_normals", "(", "search_param", "=", "o3d", ".", "geometry", ".", "KDTreeSearchParamHybrid", "(", "radius", "=", "0.1", ",", "max_nn", "=", "30", ")", ")", "\n", "pcd2", ".", "orient_normals_to_align_with_direction", "(", ")", "\n", "pcd2", ".", "paint_uniform_color", "(", "[", "205", "/", "255", ",", "107", "/", "255", ",", "0", "/", "255", "]", ")", "\n", "\n", "if", "j", "==", "0", ":", "\n", "                        ", "if", "toyexample", ":", "\n", "                            ", "draw", "(", "[", "pcd1", ",", "pcd2", "]", ")", "\n", "", "else", ":", "\n", "                            ", "o3d", ".", "visualization", ".", "draw_geometries", "(", "[", "pcd1", ",", "pcd2", "]", ")", "\n", "", "", "else", ":", "\n", "                        ", "if", "toyexample", ":", "\n", "                            ", "draw", "(", "[", "pcd0", ",", "pcd1", "]", ")", "\n", "", "else", ":", "\n", "                            ", "o3d", ".", "visualization", ".", "draw_geometries", "(", "[", "pcd0", ",", "pcd1", "]", ")", "\n", "\n", "", "", "", "dg", "=", "g_hat", ".", "bmm", "(", "ig_gt", ")", "# if correct, dg == identity matrix.", "\n", "dx", "=", "utils", ".", "log", "(", "dg", ")", "# --> [1, 6] (if corerct, dx == zero vector)", "\n", "dn", "=", "dx", ".", "norm", "(", "p", "=", "2", ",", "dim", "=", "1", ")", "# --> [1]", "\n", "dm", "=", "dn", ".", "mean", "(", ")", "\n", "\n", "LOGGER", ".", "info", "(", "'test, %d/%d, %d iterations, %f'", ",", "i", ",", "len", "(", "testloader", ")", ",", "j", ",", "dm", ")", "\n", "\n", "# euler representation for ground truth", "\n", "", "tform_gt", "=", "ig_gt", ".", "squeeze", "(", ")", ".", "numpy", "(", ")", ".", "transpose", "(", ")", "\n", "R_gt", "=", "tform_gt", "[", ":", "3", ",", ":", "3", "]", "\n", "euler_angle", "=", "Rotation", ".", "from_matrix", "(", "R_gt", ")", "\n", "anglez_gt", ",", "angley_gt", ",", "anglex_gt", "=", "euler_angle", ".", "as_euler", "(", "'zyx'", ")", "\n", "angle_gt", "=", "np", ".", "array", "(", "[", "anglex_gt", ",", "angley_gt", ",", "anglez_gt", "]", ")", "\n", "rotations_gt", ".", "append", "(", "angle_gt", ")", "\n", "trans_gt_t", "=", "-", "R_gt", ".", "dot", "(", "tform_gt", "[", "3", ",", ":", "3", "]", ")", "\n", "translation_gt", ".", "append", "(", "trans_gt_t", ")", "\n", "# euler representation for predicted transformation", "\n", "tform_ab", "=", "g_hat", ".", "squeeze", "(", ")", ".", "numpy", "(", ")", "\n", "R_ab", "=", "tform_ab", "[", ":", "3", ",", ":", "3", "]", "\n", "euler_angle", "=", "Rotation", ".", "from_matrix", "(", "R_ab", ")", "\n", "anglez_ab", ",", "angley_ab", ",", "anglex_ab", "=", "euler_angle", ".", "as_euler", "(", "'zyx'", ")", "\n", "angle_ab", "=", "np", ".", "array", "(", "[", "anglex_ab", ",", "angley_ab", ",", "anglez_ab", "]", ")", "\n", "rotations_ab", ".", "append", "(", "angle_ab", ")", "\n", "trans_ab", "=", "tform_ab", "[", ":", "3", ",", "3", "]", "\n", "translation_ab", ".", "append", "(", "trans_ab", ")", "\n", "\n", "", "utils", ".", "test_metrics", "(", "rotations_gt", ",", "translation_gt", ",", "rotations_ab", ",", "translation_ab", ",", "self", ".", "filename", ")", "\n", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.trainer.TrainerAnalyticalPointNetLK.compute_loss": [[210, 242], ["model.AnalyticalPointNetLK.comp", "p0.to.to.to", "p1.to.to.to", "gt_pose.reshape().to.reshape().to.to", "model.AnalyticalPointNetLK.do_forward", "voxel_features_p0.reshape().to.reshape().to.reshape().to", "voxel_features_p1.reshape().to.reshape().to.reshape().to", "voxel_coords_p0.reshape().to.reshape().to.reshape().to", "voxel_coords_p1.reshape().to.reshape().to.reshape().to", "gt_pose.reshape().to.reshape().to.reshape().to", "model.AnalyticalPointNetLK.do_forward", "model.AnalyticalPointNetLK.rsq", "model.AnalyticalPointNetLK.rsq", "voxel_features_p0.reshape().to.reshape().to.reshape", "voxel_features_p1.reshape().to.reshape().to.reshape", "voxel_coords_p0.reshape().to.reshape().to.reshape", "voxel_coords_p1.reshape().to.reshape().to.reshape", "gt_pose.reshape().to.reshape().to.reshape"], "methods", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.model.AnalyticalPointNetLK.comp", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.model.AnalyticalPointNetLK.do_forward", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.model.AnalyticalPointNetLK.do_forward", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.model.AnalyticalPointNetLK.rsq", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.model.AnalyticalPointNetLK.rsq"], ["", "def", "compute_loss", "(", "self", ",", "ptnetlk", ",", "data", ",", "device", ",", "mode", ",", "data_type", "=", "'synthetic'", ",", "num_random_points", "=", "100", ")", ":", "\n", "# 1. non-voxelization", "\n", "        ", "if", "data_type", "==", "'synthetic'", ":", "\n", "            ", "p0", ",", "p1", ",", "gt_pose", "=", "data", "\n", "p0", "=", "p0", ".", "to", "(", "self", ".", "device", ")", "\n", "p1", "=", "p1", ".", "to", "(", "self", ".", "device", ")", "\n", "gt_pose", "=", "gt_pose", ".", "to", "(", "device", ")", "\n", "r", "=", "model", ".", "AnalyticalPointNetLK", ".", "do_forward", "(", "ptnetlk", ",", "p0", ",", "None", ",", "\n", "p1", ",", "None", ",", "self", ".", "max_iter", ",", "self", ".", "xtol", ",", "self", ".", "p0_zero_mean", ",", "self", ".", "p1_zero_mean", ",", "mode", ",", "data_type", ",", "num_random_points", ")", "\n", "", "else", ":", "\n", "# 2. voxelization", "\n", "            ", "voxel_features_p0", ",", "voxel_coords_p0", ",", "voxel_features_p1", ",", "voxel_coords_p1", ",", "gt_pose", "=", "data", "\n", "voxel_features_p0", "=", "voxel_features_p0", ".", "reshape", "(", "-", "1", ",", "voxel_features_p0", ".", "shape", "[", "2", "]", ",", "voxel_features_p0", ".", "shape", "[", "3", "]", ")", ".", "to", "(", "device", ")", "\n", "voxel_features_p1", "=", "voxel_features_p1", ".", "reshape", "(", "-", "1", ",", "voxel_features_p1", ".", "shape", "[", "2", "]", ",", "voxel_features_p1", ".", "shape", "[", "3", "]", ")", ".", "to", "(", "device", ")", "\n", "voxel_coords_p0", "=", "voxel_coords_p0", ".", "reshape", "(", "-", "1", ",", "voxel_coords_p0", ".", "shape", "[", "2", "]", ")", ".", "to", "(", "device", ")", "\n", "voxel_coords_p1", "=", "voxel_coords_p1", ".", "reshape", "(", "-", "1", ",", "voxel_coords_p1", ".", "shape", "[", "2", "]", ")", ".", "to", "(", "device", ")", "\n", "gt_pose", "=", "gt_pose", ".", "reshape", "(", "-", "1", ",", "gt_pose", ".", "shape", "[", "2", "]", ",", "gt_pose", ".", "shape", "[", "3", "]", ")", ".", "to", "(", "device", ")", "\n", "\n", "r", "=", "model", ".", "AnalyticalPointNetLK", ".", "do_forward", "(", "ptnetlk", ",", "voxel_features_p0", ",", "voxel_coords_p0", ",", "\n", "voxel_features_p1", ",", "voxel_coords_p1", ",", "self", ".", "max_iter", ",", "self", ".", "xtol", ",", "self", ".", "p0_zero_mean", ",", "self", ".", "p1_zero_mean", ",", "mode", ",", "data_type", ",", "num_random_points", ")", "\n", "\n", "", "estimated_pose", "=", "ptnetlk", ".", "g", "\n", "\n", "loss_pose", "=", "model", ".", "AnalyticalPointNetLK", ".", "comp", "(", "estimated_pose", ",", "gt_pose", ")", "\n", "pr", "=", "ptnetlk", ".", "prev_r", "\n", "if", "pr", "is", "not", "None", ":", "\n", "            ", "loss_r", "=", "model", ".", "AnalyticalPointNetLK", ".", "rsq", "(", "r", "-", "pr", ")", "\n", "", "else", ":", "\n", "            ", "loss_r", "=", "model", ".", "AnalyticalPointNetLK", ".", "rsq", "(", "r", ")", "\n", "", "loss", "=", "loss_r", "+", "loss_pose", "\n", "\n", "return", "loss", ",", "loss_pose", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.train.options": [[17, 82], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["def", "options", "(", "argv", "=", "None", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'PointNet-LK'", ")", "\n", "\n", "# io settings.", "\n", "parser", ".", "add_argument", "(", "'--outfile'", ",", "type", "=", "str", ",", "default", "=", "'./logs/2021_04_17_train_modelnet'", ",", "\n", "metavar", "=", "'BASENAME'", ",", "help", "=", "'output filename (prefix)'", ")", "\n", "parser", ".", "add_argument", "(", "'--dataset_path'", ",", "type", "=", "str", ",", "default", "=", "'./dataset/ModelNet'", ",", "\n", "metavar", "=", "'PATH'", ",", "help", "=", "'path to the input dataset'", ")", "\n", "\n", "# settings for input data", "\n", "parser", ".", "add_argument", "(", "'--dataset_type'", ",", "default", "=", "'modelnet'", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'DATASET'", ",", "help", "=", "'dataset type'", ")", "\n", "parser", ".", "add_argument", "(", "'--data_type'", ",", "default", "=", "'synthetic'", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'DATASET'", ",", "help", "=", "'whether data is synthetic or real'", ")", "\n", "parser", ".", "add_argument", "(", "'--categoryfile'", ",", "type", "=", "str", ",", "default", "=", "'./dataset/modelnet40_half1.txt'", ",", "\n", "metavar", "=", "'PATH'", ",", "help", "=", "'path to the categories to be trained'", ")", "\n", "parser", ".", "add_argument", "(", "'--num_points'", ",", "default", "=", "1000", ",", "type", "=", "int", ",", "\n", "metavar", "=", "'N'", ",", "help", "=", "'points in point-cloud.'", ")", "\n", "parser", ".", "add_argument", "(", "'--num_random_points'", ",", "default", "=", "100", ",", "type", "=", "int", ",", "\n", "metavar", "=", "'N'", ",", "help", "=", "'number of random points to compute Jacobian.'", ")", "\n", "parser", ".", "add_argument", "(", "'--mag'", ",", "default", "=", "0.8", ",", "type", "=", "float", ",", "\n", "metavar", "=", "'D'", ",", "help", "=", "'max. mag. of twist-vectors (perturbations) on training (default: 0.8)'", ")", "\n", "parser", ".", "add_argument", "(", "'--sigma'", ",", "default", "=", "0.00", ",", "type", "=", "float", ",", "\n", "metavar", "=", "'D'", ",", "help", "=", "'noise range in the data'", ")", "\n", "parser", ".", "add_argument", "(", "'--clip'", ",", "default", "=", "0.00", ",", "type", "=", "float", ",", "\n", "metavar", "=", "'D'", ",", "help", "=", "'noise range in the data'", ")", "\n", "parser", ".", "add_argument", "(", "'--workers'", ",", "default", "=", "12", ",", "type", "=", "int", ",", "\n", "metavar", "=", "'N'", ",", "help", "=", "'number of data loading workers'", ")", "\n", "\n", "# settings for Embedding", "\n", "parser", ".", "add_argument", "(", "'--embedding'", ",", "default", "=", "'pointnet'", ",", "\n", "type", "=", "str", ",", "help", "=", "'pointnet'", ")", "\n", "parser", ".", "add_argument", "(", "'--dim_k'", ",", "default", "=", "1024", ",", "type", "=", "int", ",", "\n", "metavar", "=", "'K'", ",", "help", "=", "'dim. of the feature vector'", ")", "\n", "\n", "# settings for LK", "\n", "parser", ".", "add_argument", "(", "'--max_iter'", ",", "default", "=", "10", ",", "type", "=", "int", ",", "\n", "metavar", "=", "'N'", ",", "help", "=", "'max-iter on LK.'", ")", "\n", "\n", "# settings for training.", "\n", "parser", ".", "add_argument", "(", "'--batch_size'", ",", "default", "=", "32", ",", "type", "=", "int", ",", "\n", "metavar", "=", "'N'", ",", "help", "=", "'mini-batch size'", ")", "\n", "parser", ".", "add_argument", "(", "'--max_epochs'", ",", "default", "=", "200", ",", "type", "=", "int", ",", "\n", "metavar", "=", "'N'", ",", "help", "=", "'number of total epochs to run'", ")", "\n", "parser", ".", "add_argument", "(", "'--start_epoch'", ",", "default", "=", "0", ",", "type", "=", "int", ",", "\n", "metavar", "=", "'N'", ",", "help", "=", "'manual epoch number'", ")", "\n", "parser", ".", "add_argument", "(", "'--optimizer'", ",", "default", "=", "'Adam'", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'METHOD'", ",", "help", "=", "'name of an optimizer'", ")", "\n", "parser", ".", "add_argument", "(", "'--device'", ",", "default", "=", "'cuda:0'", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'DEVICE'", ",", "help", "=", "'use CUDA if available'", ")", "\n", "parser", ".", "add_argument", "(", "'--lr'", ",", "type", "=", "float", ",", "default", "=", "1e-3", ",", "\n", "metavar", "=", "'D'", ",", "help", "=", "'learning rate'", ")", "\n", "parser", ".", "add_argument", "(", "'--decay_rate'", ",", "type", "=", "float", ",", "default", "=", "1e-4", ",", "\n", "metavar", "=", "'D'", ",", "help", "=", "'decay rate of learning rate'", ")", "\n", "\n", "# settings for log", "\n", "parser", ".", "add_argument", "(", "'--logfile'", ",", "default", "=", "''", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'LOGNAME'", ",", "help", "=", "'path to logfile'", ")", "\n", "parser", ".", "add_argument", "(", "'--resume'", ",", "default", "=", "''", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'PATH'", ",", "help", "=", "'path to latest checkpoint'", ")", "\n", "parser", ".", "add_argument", "(", "'--pretrained'", ",", "default", "=", "''", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'PATH'", ",", "help", "=", "'path to pretrained model file'", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", "argv", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.train.train": [[84, 146], ["torch.device", "torch.device", "dptnetlk.create_model", "dptnetlk.create_model.to", "print", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "float", "float", "filter", "LOGGER.debug", "range", "torch.cuda.is_available", "torch.cuda.is_available", "os.path.isfile", "dptnetlk.create_model.load_state_dict", "os.path.isfile", "torch.load", "torch.load", "dptnetlk.create_model.load_state_dict", "dptnetlk.create_model.parameters", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD.load_state_dict", "dptnetlk.train_one_epoch", "dptnetlk.eval_one_epoch", "min", "LOGGER.info", "torch.save", "torch.save", "torch.load", "torch.load", "dptnetlk.create_model.state_dict", "torch.optim.SGD.state_dict", "torch.save", "torch.save", "dptnetlk.create_model.state_dict"], "function", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.trainer.TrainerAnalyticalPointNetLK.create_model", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.trainer.TrainerAnalyticalPointNetLK.train_one_epoch", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.trainer.TrainerAnalyticalPointNetLK.eval_one_epoch"], ["", "def", "train", "(", "args", ",", "trainset", ",", "evalset", ",", "dptnetlk", ")", ":", "\n", "    ", "if", "not", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "args", ".", "device", "=", "'cpu'", "\n", "", "args", ".", "device", "=", "torch", ".", "device", "(", "args", ".", "device", ")", "\n", "\n", "model", "=", "dptnetlk", ".", "create_model", "(", ")", "\n", "\n", "if", "args", ".", "pretrained", ":", "\n", "        ", "assert", "os", ".", "path", ".", "isfile", "(", "args", ".", "pretrained", ")", "\n", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "args", ".", "pretrained", ",", "map_location", "=", "'cpu'", ")", ")", "\n", "\n", "", "model", ".", "to", "(", "args", ".", "device", ")", "\n", "\n", "checkpoint", "=", "None", "\n", "if", "args", ".", "resume", ":", "\n", "        ", "assert", "os", ".", "path", ".", "isfile", "(", "args", ".", "resume", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "args", ".", "resume", ")", "\n", "args", ".", "start_epoch", "=", "checkpoint", "[", "'epoch'", "]", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'model'", "]", ")", "\n", "", "print", "(", "'resume epoch from {}'", ".", "format", "(", "args", ".", "start_epoch", "+", "1", ")", ")", "\n", "\n", "evalloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "evalset", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "False", ",", "num_workers", "=", "args", ".", "workers", ",", "drop_last", "=", "True", ")", "\n", "trainloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "trainset", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "args", ".", "workers", ",", "drop_last", "=", "True", ")", "\n", "\n", "min_loss", "=", "float", "(", "'inf'", ")", "\n", "min_info", "=", "float", "(", "'inf'", ")", "\n", "\n", "learnable_params", "=", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "model", ".", "parameters", "(", ")", ")", "\n", "\n", "if", "args", ".", "optimizer", "==", "'Adam'", ":", "\n", "        ", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "learnable_params", ",", "lr", "=", "args", ".", "lr", ",", "weight_decay", "=", "args", ".", "decay_rate", ")", "\n", "", "else", ":", "\n", "        ", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "learnable_params", ",", "lr", "=", "args", ".", "lr", ")", "\n", "\n", "", "if", "checkpoint", "is", "not", "None", ":", "\n", "        ", "min_loss", "=", "checkpoint", "[", "'min_loss'", "]", "\n", "min_info", "=", "checkpoint", "[", "'min_info'", "]", "\n", "optimizer", ".", "load_state_dict", "(", "checkpoint", "[", "'optimizer'", "]", ")", "\n", "\n", "# training", "\n", "", "LOGGER", ".", "debug", "(", "'Begin Training!'", ")", "\n", "for", "epoch", "in", "range", "(", "args", ".", "start_epoch", ",", "args", ".", "max_epochs", ")", ":", "\n", "        ", "running_loss", ",", "running_info", "=", "dptnetlk", ".", "train_one_epoch", "(", "\n", "model", ",", "trainloader", ",", "optimizer", ",", "args", ".", "device", ",", "'train'", ",", "args", ".", "data_type", ",", "num_random_points", "=", "args", ".", "num_random_points", ")", "\n", "val_loss", ",", "val_info", "=", "dptnetlk", ".", "eval_one_epoch", "(", "\n", "model", ",", "evalloader", ",", "args", ".", "device", ",", "'eval'", ",", "args", ".", "data_type", ",", "num_random_points", "=", "args", ".", "num_random_points", ")", "\n", "\n", "is_best", "=", "val_loss", "<", "min_loss", "\n", "min_loss", "=", "min", "(", "val_loss", ",", "min_loss", ")", "\n", "\n", "LOGGER", ".", "info", "(", "'epoch, %04d, %f, %f, %f, %f'", ",", "epoch", "+", "1", ",", "\n", "running_loss", ",", "val_loss", ",", "running_info", ",", "val_info", ")", "\n", "snap", "=", "{", "'epoch'", ":", "epoch", "+", "1", ",", "\n", "'model'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'min_loss'", ":", "min_loss", ",", "\n", "'min_info'", ":", "min_info", ",", "\n", "'optimizer'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "}", "\n", "if", "is_best", ":", "\n", "            ", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "'{}_{}.pth'", ".", "format", "(", "args", ".", "outfile", ",", "'model_best'", ")", ")", "\n", "", "torch", ".", "save", "(", "snap", ",", "'{}_{}.pth'", ".", "format", "(", "args", ".", "outfile", ",", "'snap_last'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.train.main": [[148, 152], ["train.get_datasets", "trainer.TrainerAnalyticalPointNetLK", "train.train"], "function", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.test.get_datasets", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.train.train"], ["", "", "def", "main", "(", "args", ")", ":", "\n", "    ", "trainset", ",", "evalset", "=", "get_datasets", "(", "args", ")", "\n", "dptnetlk", "=", "trainer", ".", "TrainerAnalyticalPointNetLK", "(", "args", ")", "\n", "train", "(", "args", ",", "trainset", ",", "evalset", ",", "dptnetlk", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.train.get_datasets": [[154, 177], ["categories.sort", "torchvision.transforms.Compose", "data_utils.ModelNet", "data_utils.ModelNet", "data_utils.PointRegistration", "data_utils.PointRegistration", "print", "line.rstrip", "data_utils.RandomTransformSE3", "data_utils.RandomTransformSE3", "open", "range", "data_utils.Mesh2Points", "data_utils.OnUnitCube", "data_utils.Resampler", "len"], "function", ["None"], ["", "def", "get_datasets", "(", "args", ")", ":", "\n", "    ", "cinfo", "=", "None", "\n", "if", "args", ".", "categoryfile", ":", "\n", "        ", "categories", "=", "[", "line", ".", "rstrip", "(", "'\\n'", ")", "for", "line", "in", "open", "(", "args", ".", "categoryfile", ")", "]", "\n", "categories", ".", "sort", "(", ")", "\n", "c_to_idx", "=", "{", "categories", "[", "i", "]", ":", "i", "for", "i", "in", "range", "(", "len", "(", "categories", ")", ")", "}", "\n", "cinfo", "=", "(", "categories", ",", "c_to_idx", ")", "\n", "\n", "", "if", "args", ".", "dataset_type", "==", "'modelnet'", ":", "\n", "        ", "transform", "=", "torchvision", ".", "transforms", ".", "Compose", "(", "[", "data_utils", ".", "Mesh2Points", "(", ")", ",", "data_utils", ".", "OnUnitCube", "(", ")", ",", "data_utils", ".", "Resampler", "(", "args", ".", "num_points", ")", "]", ")", "\n", "\n", "traindata", "=", "data_utils", ".", "ModelNet", "(", "args", ".", "dataset_path", ",", "train", "=", "1", ",", "transform", "=", "transform", ",", "classinfo", "=", "cinfo", ")", "\n", "evaldata", "=", "data_utils", ".", "ModelNet", "(", "args", ".", "dataset_path", ",", "train", "=", "0", ",", "transform", "=", "transform", ",", "classinfo", "=", "cinfo", ")", "\n", "\n", "trainset", "=", "data_utils", ".", "PointRegistration", "(", "traindata", ",", "data_utils", ".", "RandomTransformSE3", "(", "args", ".", "mag", ")", ")", "\n", "evalset", "=", "data_utils", ".", "PointRegistration", "(", "evaldata", ",", "data_utils", ".", "RandomTransformSE3", "(", "args", ".", "mag", ")", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "'wrong dataset type!'", ")", "\n", "\n", "", "return", "trainset", ",", "evalset", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.test.options": [[17, 85], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["def", "options", "(", "argv", "=", "None", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'PointNet-LK'", ")", "\n", "\n", "# io settings.", "\n", "parser", ".", "add_argument", "(", "'--outfile'", ",", "type", "=", "str", ",", "default", "=", "'./test_logs/2021_04_17_test_on_3dmatch_trained_on_modelnet'", ",", "\n", "metavar", "=", "'BASENAME'", ",", "help", "=", "'output filename (prefix)'", ")", "\n", "parser", ".", "add_argument", "(", "'--dataset_path'", ",", "type", "=", "str", ",", "default", "=", "'./dataset/ThreeDMatch'", ",", "\n", "metavar", "=", "'PATH'", ",", "help", "=", "'path to the input dataset'", ")", "\n", "parser", ".", "add_argument", "(", "'--categoryfile'", ",", "type", "=", "str", ",", "default", "=", "'./dataset/test_3dmatch.txt'", ",", "\n", "metavar", "=", "'PATH'", ",", "choices", "=", "[", "'./dataset/test_3dmatch.txt'", ",", "'./dataset/modelnet40_half2.txt'", "]", ",", "\n", "help", "=", "'path to the categories to be tested'", ")", "\n", "parser", ".", "add_argument", "(", "'--pose_file'", ",", "type", "=", "str", ",", "default", "=", "'./dataset/gt_poses.csv'", ",", "\n", "metavar", "=", "'PATH'", ",", "help", "=", "'path to the testing pose files'", ")", "\n", "\n", "# settings for input data", "\n", "parser", ".", "add_argument", "(", "'--dataset_type'", ",", "default", "=", "'3dmatch'", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'DATASET'", ",", "choices", "=", "[", "'modelnet'", ",", "'3dmatch'", "]", ",", "help", "=", "'dataset type'", ")", "\n", "parser", ".", "add_argument", "(", "'--data_type'", ",", "default", "=", "'real'", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'DATASET'", ",", "help", "=", "'whether data is synthetic or real'", ")", "\n", "parser", ".", "add_argument", "(", "'--num_points'", ",", "default", "=", "1000", ",", "type", "=", "int", ",", "\n", "metavar", "=", "'N'", ",", "help", "=", "'points in point-cloud'", ")", "\n", "parser", ".", "add_argument", "(", "'--sigma'", ",", "default", "=", "0.00", ",", "type", "=", "float", ",", "\n", "metavar", "=", "'D'", ",", "help", "=", "'noise range in the data'", ")", "\n", "parser", ".", "add_argument", "(", "'--clip'", ",", "default", "=", "0.00", ",", "type", "=", "float", ",", "\n", "metavar", "=", "'D'", ",", "help", "=", "'noise range in the data'", ")", "\n", "parser", ".", "add_argument", "(", "'--workers'", ",", "default", "=", "0", ",", "type", "=", "int", ",", "\n", "metavar", "=", "'N'", ",", "help", "=", "'number of data loading workers'", ")", "\n", "\n", "# settings for voxelization", "\n", "parser", ".", "add_argument", "(", "'--overlap_ratio'", ",", "default", "=", "0.7", ",", "type", "=", "float", ",", "\n", "metavar", "=", "'D'", ",", "help", "=", "'overlapping ratio for 3DMatch dataset.'", ")", "\n", "parser", ".", "add_argument", "(", "'--voxel_ratio'", ",", "default", "=", "0.05", ",", "type", "=", "float", ",", "\n", "metavar", "=", "'D'", ",", "help", "=", "'voxel ratio'", ")", "\n", "parser", ".", "add_argument", "(", "'--voxel'", ",", "default", "=", "2", ",", "type", "=", "float", ",", "\n", "metavar", "=", "'D'", ",", "help", "=", "'how many voxels you want to divide in each axis'", ")", "\n", "parser", ".", "add_argument", "(", "'--max_voxel_points'", ",", "default", "=", "1000", ",", "type", "=", "int", ",", "\n", "metavar", "=", "'N'", ",", "help", "=", "'maximum points allowed in a voxel'", ")", "\n", "parser", ".", "add_argument", "(", "'--num_voxels'", ",", "default", "=", "8", ",", "type", "=", "int", ",", "\n", "metavar", "=", "'N'", ",", "help", "=", "'number of voxels'", ")", "\n", "parser", ".", "add_argument", "(", "'--vis'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "\n", "help", "=", "'whether to visualize or not'", ")", "\n", "parser", ".", "add_argument", "(", "'--voxel_after_transf'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "\n", "help", "=", "'given voxelization before or after transformation'", ")", "\n", "\n", "# settings for Embedding", "\n", "parser", ".", "add_argument", "(", "'--embedding'", ",", "default", "=", "'pointnet'", ",", "\n", "type", "=", "str", ",", "help", "=", "'pointnet'", ")", "\n", "parser", ".", "add_argument", "(", "'--dim_k'", ",", "default", "=", "1024", ",", "type", "=", "int", ",", "\n", "metavar", "=", "'K'", ",", "help", "=", "'dim. of the feature vector'", ")", "\n", "\n", "# settings for LK", "\n", "parser", ".", "add_argument", "(", "'-mi'", ",", "'--max_iter'", ",", "default", "=", "20", ",", "type", "=", "int", ",", "\n", "metavar", "=", "'N'", ",", "help", "=", "'max-iter on LK.'", ")", "\n", "\n", "# settings for training.", "\n", "parser", ".", "add_argument", "(", "'-b'", ",", "'--batch_size'", ",", "default", "=", "1", ",", "type", "=", "int", ",", "\n", "metavar", "=", "'N'", ",", "help", "=", "'mini-batch size'", ")", "\n", "parser", ".", "add_argument", "(", "'--device'", ",", "default", "=", "'cuda:0'", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'DEVICE'", ",", "help", "=", "'use CUDA if available'", ")", "\n", "\n", "# settings for log", "\n", "parser", ".", "add_argument", "(", "'-l'", ",", "'--logfile'", ",", "default", "=", "''", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'LOGNAME'", ",", "help", "=", "'path to logfile'", ")", "\n", "parser", ".", "add_argument", "(", "'--pretrained'", ",", "default", "=", "'./logs/model_trained_on_ModelNet40_model_best.pth'", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'PATH'", ",", "help", "=", "'path to pretrained model file '", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", "argv", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.test.test": [[87, 107], ["torch.device", "torch.device", "dptnetlk.create_model", "dptnetlk.create_model.to", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "LOGGER.debug", "dptnetlk.test_one_epoch", "torch.cuda.is_available", "torch.cuda.is_available", "os.path.isfile", "dptnetlk.create_model.load_state_dict", "torch.load", "torch.load"], "function", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.trainer.TrainerAnalyticalPointNetLK.create_model", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.trainer.TrainerAnalyticalPointNetLK.test_one_epoch"], ["", "def", "test", "(", "args", ",", "testset", ",", "dptnetlk", ")", ":", "\n", "    ", "if", "not", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "args", ".", "device", "=", "'cpu'", "\n", "", "args", ".", "device", "=", "torch", ".", "device", "(", "args", ".", "device", ")", "\n", "\n", "model", "=", "dptnetlk", ".", "create_model", "(", ")", "\n", "\n", "if", "args", ".", "pretrained", ":", "\n", "        ", "assert", "os", ".", "path", ".", "isfile", "(", "args", ".", "pretrained", ")", "\n", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "args", ".", "pretrained", ",", "map_location", "=", "'cpu'", ")", ")", "\n", "\n", "", "model", ".", "to", "(", "args", ".", "device", ")", "\n", "\n", "testloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "testset", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "False", ",", "num_workers", "=", "args", ".", "workers", ",", "drop_last", "=", "False", ")", "\n", "\n", "# testing", "\n", "LOGGER", ".", "debug", "(", "'Begin Testing!'", ")", "\n", "dptnetlk", ".", "test_one_epoch", "(", "model", ",", "testloader", ",", "args", ".", "device", ",", "'test'", ",", "args", ".", "data_type", ",", "args", ".", "vis", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.test.main": [[109, 113], ["test.get_datasets", "trainer.TrainerAnalyticalPointNetLK", "test.test"], "function", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.test.get_datasets", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.test.test"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "testset", "=", "get_datasets", "(", "args", ")", "\n", "dptnetlk", "=", "trainer", ".", "TrainerAnalyticalPointNetLK", "(", "args", ")", "\n", "test", "(", "args", ",", "testset", ",", "dptnetlk", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.test.get_datasets": [[115, 145], ["categories.sort", "torchvision.transforms.Compose", "data_utils.ModelNet", "data_utils.PointRegistration_fixed_perturbation", "line.rstrip", "torchvision.transforms.Compose", "data_utils.ShapeNet2", "data_utils.PointRegistration_fixed_perturbation", "open", "range", "data_utils.Mesh2Points", "data_utils.OnUnitCube", "data_utils.ThreeDMatch_Testing", "len", "data_utils.Mesh2Points", "data_utils.OnUnitCube"], "function", ["None"], ["", "def", "get_datasets", "(", "args", ")", ":", "\n", "    ", "cinfo", "=", "None", "\n", "if", "args", ".", "categoryfile", "and", "args", ".", "data_type", "==", "'synthetic'", ":", "\n", "        ", "categories", "=", "[", "line", ".", "rstrip", "(", "'\\n'", ")", "for", "line", "in", "open", "(", "args", ".", "categoryfile", ")", "]", "\n", "categories", ".", "sort", "(", ")", "\n", "c_to_idx", "=", "{", "categories", "[", "i", "]", ":", "i", "for", "i", "in", "range", "(", "len", "(", "categories", ")", ")", "}", "\n", "cinfo", "=", "(", "categories", ",", "c_to_idx", ")", "\n", "\n", "", "if", "args", ".", "dataset_type", "==", "'modelnet'", ":", "\n", "        ", "transform", "=", "torchvision", ".", "transforms", ".", "Compose", "(", "[", "data_utils", ".", "Mesh2Points", "(", ")", ",", "data_utils", ".", "OnUnitCube", "(", ")", "]", ")", "\n", "\n", "testdata", "=", "data_utils", ".", "ModelNet", "(", "args", ".", "dataset_path", ",", "train", "=", "-", "1", ",", "transform", "=", "transform", ",", "classinfo", "=", "cinfo", ")", "\n", "testset", "=", "data_utils", ".", "PointRegistration_fixed_perturbation", "(", "testdata", ",", "args", ".", "pose_file", ",", "sigma", "=", "args", ".", "sigma", ",", "clip", "=", "args", ".", "clip", ")", "\n", "\n", "", "elif", "args", ".", "dataset_type", "==", "'shapenet2'", ":", "\n", "        ", "transform", "=", "torchvision", ".", "transforms", ".", "Compose", "(", "[", "data_utils", ".", "Mesh2Points", "(", ")", ",", "data_utils", ".", "OnUnitCube", "(", ")", "]", ")", "\n", "\n", "testdata", "=", "data_utils", ".", "ShapeNet2", "(", "args", ".", "dataset_path", ",", "transform", "=", "transform", ",", "classinfo", "=", "cinfo", ")", "\n", "testset", "=", "data_utils", ".", "PointRegistration_fixed_perturbation", "(", "testdata", ",", "args", ".", "pose_file", ",", "sigma", "=", "args", ".", "sigma", ",", "clip", "=", "args", ".", "clip", ")", "\n", "\n", "", "elif", "args", ".", "dataset_type", "==", "'3dmatch'", ":", "\n", "        ", "testset", "=", "data_utils", ".", "ThreeDMatch_Testing", "(", "args", ".", "dataset_path", ",", "args", ".", "categoryfile", ",", "args", ".", "overlap_ratio", ",", "\n", "args", ".", "voxel_ratio", ",", "args", ".", "voxel", ",", "args", ".", "max_voxel_points", ",", "\n", "args", ".", "num_voxels", ",", "args", ".", "pose_file", ",", "args", ".", "vis", ",", "args", ".", "voxel_after_transf", ")", "\n", "\n", "", "return", "testset", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.model.MLPNet.__init__": [[34, 38], ["super().__init__", "model.mlp_layers", "torch.nn.Sequential"], "methods", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.model.AnalyticalPointNetLK.__init__", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.model.mlp_layers"], ["def", "__init__", "(", "self", ",", "nch_input", ",", "nch_layers", ",", "b_shared", "=", "True", ",", "bn_momentum", "=", "0.1", ",", "dropout", "=", "0.0", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "list_layers", "=", "mlp_layers", "(", "nch_input", ",", "nch_layers", ",", "b_shared", ",", "bn_momentum", ",", "dropout", ")", "\n", "self", ".", "layers", "=", "torch", ".", "nn", ".", "Sequential", "(", "*", "list_layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.model.MLPNet.forward": [[39, 42], ["model.MLPNet.layers"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inp", ")", ":", "\n", "        ", "out", "=", "self", ".", "layers", "(", "inp", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.model.Pointnet_Features.__init__": [[51, 56], ["super().__init__", "model.MLPNet", "model.MLPNet", "model.MLPNet"], "methods", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.model.AnalyticalPointNetLK.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim_k", "=", "1024", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "mlp1", "=", "MLPNet", "(", "3", ",", "[", "64", "]", ",", "b_shared", "=", "True", ")", ".", "layers", "\n", "self", ".", "mlp2", "=", "MLPNet", "(", "64", ",", "[", "128", "]", ",", "b_shared", "=", "True", ")", ".", "layers", "\n", "self", ".", "mlp3", "=", "MLPNet", "(", "128", ",", "[", "dim_k", "]", ",", "b_shared", "=", "True", ")", ".", "layers", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.model.Pointnet_Features.forward": [[57, 101], ["points.transpose", "torch.nn.functional.max_pool1d", "x.view.view.view", "model.Pointnet_Features.mlp1", "model.Pointnet_Features.mlp2", "model.Pointnet_Features.mlp3", "torch.nn.functional.max_pool1d", "x.view.view.view", "torch.max", "x.view.view.size", "x.view.view.size", "x.view.view.size", "x.view.view.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "points", ",", "iter", ")", ":", "\n", "        ", "\"\"\" points -> features\n            [B, N, 3] -> [B, K]\n        \"\"\"", "\n", "x", "=", "points", ".", "transpose", "(", "1", ",", "2", ")", "# [B, 3, N]", "\n", "if", "iter", "==", "-", "1", ":", "\n", "            ", "x", "=", "self", ".", "mlp1", "[", "0", "]", "(", "x", ")", "\n", "A1_x", "=", "x", "\n", "x", "=", "self", ".", "mlp1", "[", "1", "]", "(", "x", ")", "\n", "bn1_x", "=", "x", "\n", "x", "=", "self", ".", "mlp1", "[", "2", "]", "(", "x", ")", "\n", "M1", "=", "(", "x", ">", "0", ")", ".", "type", "(", "torch", ".", "float", ")", "\n", "\n", "x", "=", "self", ".", "mlp2", "[", "0", "]", "(", "x", ")", "\n", "A2_x", "=", "x", "\n", "x", "=", "self", ".", "mlp2", "[", "1", "]", "(", "x", ")", "\n", "bn2_x", "=", "x", "\n", "x", "=", "self", ".", "mlp2", "[", "2", "]", "(", "x", ")", "\n", "M2", "=", "(", "x", ">", "0", ")", ".", "type", "(", "torch", ".", "float", ")", "\n", "\n", "x", "=", "self", ".", "mlp3", "[", "0", "]", "(", "x", ")", "\n", "A3_x", "=", "x", "\n", "x", "=", "self", ".", "mlp3", "[", "1", "]", "(", "x", ")", "\n", "bn3_x", "=", "x", "\n", "x", "=", "self", ".", "mlp3", "[", "2", "]", "(", "x", ")", "\n", "M3", "=", "(", "x", ">", "0", ")", ".", "type", "(", "torch", ".", "float", ")", "\n", "max_idx", "=", "torch", ".", "max", "(", "x", ",", "-", "1", ")", "[", "-", "1", "]", "\n", "x", "=", "torch", ".", "nn", ".", "functional", ".", "max_pool1d", "(", "x", ",", "x", ".", "size", "(", "-", "1", ")", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "# extract weights....", "\n", "A1", "=", "self", ".", "mlp1", "[", "0", "]", ".", "weight", "\n", "A2", "=", "self", ".", "mlp2", "[", "0", "]", ".", "weight", "\n", "A3", "=", "self", ".", "mlp3", "[", "0", "]", ".", "weight", "\n", "\n", "return", "x", ",", "[", "M1", ",", "M2", ",", "M3", "]", ",", "[", "A1", ",", "A2", ",", "A3", "]", ",", "[", "A1_x", ",", "A2_x", ",", "A3_x", "]", ",", "[", "bn1_x", ",", "bn2_x", ",", "bn3_x", "]", ",", "max_idx", "\n", "", "else", ":", "\n", "            ", "x", "=", "self", ".", "mlp1", "(", "x", ")", "\n", "x", "=", "self", ".", "mlp2", "(", "x", ")", "\n", "x", "=", "self", ".", "mlp3", "(", "x", ")", "\n", "x", "=", "torch", ".", "nn", ".", "functional", ".", "max_pool1d", "(", "x", ",", "x", ".", "size", "(", "-", "1", ")", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.model.AnalyticalPointNetLK.__init__": [[104, 120], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.model.AnalyticalPointNetLK.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ptnet", ",", "device", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ptnet", "=", "ptnet", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "inverse", "=", "utils", ".", "InvMatrix", ".", "apply", "\n", "self", ".", "exp", "=", "utils", ".", "ExpMap", ".", "apply", "# [B, 6] -> [B, 4, 4]", "\n", "self", ".", "transform", "=", "utils", ".", "transform", "# [B, 1, 4, 4] x [B, N, 3] -> [B, N, 3]", "\n", "\n", "self", ".", "step_train", "=", "0", "\n", "self", ".", "step_test", "=", "0", "\n", "\n", "# results", "\n", "self", ".", "last_err", "=", "None", "\n", "self", ".", "prev_r", "=", "None", "\n", "self", ".", "g", "=", "None", "# estimation result", "\n", "self", ".", "itr", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.model.AnalyticalPointNetLK.rsq": [[121, 126], ["torch.zeros_like", "torch.nn.functional.mse_loss"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "rsq", "(", "r", ")", ":", "\n", "        ", "z", "=", "torch", ".", "zeros_like", "(", "r", ")", "\n", "\n", "return", "torch", ".", "nn", ".", "functional", ".", "mse_loss", "(", "r", ",", "z", ",", "reduction", "=", "'sum'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.model.AnalyticalPointNetLK.comp": [[127, 141], ["g.float.float.float", "igt.float.float.float", "g.float.float.matmul", "torch.eye().to().view().expand", "g.float.float.size", "igt.float.float.size", "g.float.matmul.size", "torch.nn.functional.mse_loss", "g.float.float.size", "igt.float.float.size", "g.float.float.size", "g.float.float.size", "igt.float.float.size", "g.float.float.size", "torch.eye().to().view", "torch.eye().to", "torch.eye"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "comp", "(", "g", ",", "igt", ")", ":", "\n", "        ", "\"\"\" |g*igt - I| \"\"\"", "\n", "g", "=", "g", ".", "float", "(", ")", "\n", "igt", "=", "igt", ".", "float", "(", ")", "\n", "\n", "assert", "g", ".", "size", "(", "0", ")", "==", "igt", ".", "size", "(", "0", ")", "\n", "assert", "g", ".", "size", "(", "1", ")", "==", "igt", ".", "size", "(", "1", ")", "and", "g", ".", "size", "(", "1", ")", "==", "4", "\n", "assert", "g", ".", "size", "(", "2", ")", "==", "igt", ".", "size", "(", "2", ")", "and", "g", ".", "size", "(", "2", ")", "==", "4", "\n", "A", "=", "g", ".", "matmul", "(", "igt", ")", "\n", "I", "=", "torch", ".", "eye", "(", "4", ")", ".", "to", "(", "A", ")", ".", "view", "(", "1", ",", "4", ",", "4", ")", ".", "expand", "(", "A", ".", "size", "(", "0", ")", ",", "4", ",", "4", ")", "\n", "loss_pose", "=", "torch", ".", "nn", ".", "functional", ".", "mse_loss", "(", "A", ",", "I", ",", "reduction", "=", "'mean'", ")", "*", "16", "\n", "\n", "return", "loss_pose", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.model.AnalyticalPointNetLK.do_forward": [[142, 203], ["net", "torch.eye().view().expand().to", "torch.eye().view().expand().to", "torch.eye().view().to", "torch.eye().view().to", "p0.mean", "p1.mean", "torch.eye().view().to.to().bmm", "est_g.bmm.bmm.bmm", "torch.eye().view().expand", "torch.eye().view().expand", "torch.eye().view", "torch.eye().view", "voxel_coords_p0.mean.unsqueeze", "voxel_coords_p0.mean", "voxel_coords_p1.mean.unsqueeze", "voxel_coords_p1.mean", "torch.eye().view().to.to", "p0.size", "p1.size", "voxel_coords_p0.mean.unsqueeze", "voxel_coords_p0.unsqueeze", "voxel_coords_p1.mean.unsqueeze", "voxel_coords_p1.unsqueeze", "torch.eye().view().to.to", "torch.eye().view", "torch.eye().view", "torch.eye", "torch.eye", "torch.eye", "torch.eye"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "do_forward", "(", "net", ",", "p0", ",", "voxel_coords_p0", ",", "p1", ",", "voxel_coords_p1", ",", "maxiter", "=", "10", ",", "xtol", "=", "1.0e-7", ",", "p0_zero_mean", "=", "True", ",", "p1_zero_mean", "=", "True", ",", "mode", "=", "'train'", ",", "data_type", "=", "'synthetic'", ",", "num_random_points", "=", "100", ")", ":", "\n", "        ", "voxel_coords_diff", "=", "None", "\n", "if", "mode", "!=", "'test'", "or", "data_type", "==", "'synthetic'", ":", "\n", "            ", "a0", "=", "torch", ".", "eye", "(", "4", ")", ".", "view", "(", "1", ",", "4", ",", "4", ")", ".", "expand", "(", "\n", "p0", ".", "size", "(", "0", ")", ",", "4", ",", "4", ")", ".", "to", "(", "p0", ")", "# [B, 4, 4]", "\n", "a1", "=", "torch", ".", "eye", "(", "4", ")", ".", "view", "(", "1", ",", "4", ",", "4", ")", ".", "expand", "(", "\n", "p1", ".", "size", "(", "0", ")", ",", "4", ",", "4", ")", ".", "to", "(", "p1", ")", "# [B, 4, 4]", "\n", "", "else", ":", "\n", "            ", "a0", "=", "torch", ".", "eye", "(", "4", ")", ".", "view", "(", "1", ",", "4", ",", "4", ")", ".", "to", "(", "voxel_coords_p0", ")", "# [1, 4, 4]", "\n", "a1", "=", "torch", ".", "eye", "(", "4", ")", ".", "view", "(", "1", ",", "4", ",", "4", ")", ".", "to", "(", "voxel_coords_p1", ")", "# [1, 4, 4]", "\n", "\n", "", "if", "p0_zero_mean", ":", "\n", "            ", "if", "data_type", "==", "'synthetic'", ":", "\n", "                ", "p0_m", "=", "p0", ".", "mean", "(", "dim", "=", "1", ")", "# [B, N, 3] -> [B, 3]", "\n", "a0", "[", ":", ",", "0", ":", "3", ",", "3", "]", "=", "p0_m", "\n", "q0", "=", "p0", "-", "p0_m", ".", "unsqueeze", "(", "1", ")", "\n", "", "else", ":", "\n", "                ", "if", "mode", "!=", "'test'", ":", "\n", "                    ", "p0_m", "=", "voxel_coords_p0", "\n", "a0", "[", ":", ",", "0", ":", "3", ",", "3", "]", "=", "p0_m", "\n", "q0", "=", "p0", "-", "p0_m", ".", "unsqueeze", "(", "1", ")", "\n", "", "else", ":", "\n", "                    ", "p0_m", "=", "voxel_coords_p0", ".", "mean", "(", "dim", "=", "0", ")", "\n", "a0", "[", ":", ",", "0", ":", "3", ",", "3", "]", "=", "p0_m", "# global frame", "\n", "q0", "=", "p0", "-", "voxel_coords_p0", ".", "unsqueeze", "(", "1", ")", "# local frame", "\n", "voxel_coords_diff", "=", "voxel_coords_p0", "-", "p0_m", "\n", "", "", "", "else", ":", "\n", "            ", "q0", "=", "p0", "\n", "\n", "", "if", "p1_zero_mean", ":", "\n", "            ", "if", "data_type", "==", "'synthetic'", ":", "\n", "                ", "p1_m", "=", "p1", ".", "mean", "(", "dim", "=", "1", ")", "# [B, N, 3] -> [B, 3]", "\n", "a1", "[", ":", ",", "0", ":", "3", ",", "3", "]", "=", "-", "p1_m", "\n", "q1", "=", "p1", "-", "p1_m", ".", "unsqueeze", "(", "1", ")", "\n", "", "else", ":", "\n", "                ", "if", "mode", "!=", "'test'", ":", "\n", "                    ", "p1_m", "=", "voxel_coords_p1", "\n", "a1", "[", ":", ",", "0", ":", "3", ",", "3", "]", "=", "-", "p1_m", "\n", "q1", "=", "p1", "-", "p1_m", ".", "unsqueeze", "(", "1", ")", "\n", "", "else", ":", "\n", "                    ", "p1_m", "=", "voxel_coords_p1", ".", "mean", "(", "dim", "=", "0", ")", "\n", "a1", "[", ":", ",", "0", ":", "3", ",", "3", "]", "=", "-", "p1_m", "# global frame", "\n", "q1", "=", "p1", "-", "voxel_coords_p1", ".", "unsqueeze", "(", "1", ")", "# local frame", "\n", "", "", "", "else", ":", "\n", "            ", "q1", "=", "p1", "\n", "\n", "", "r", "=", "net", "(", "q0", ",", "q1", ",", "mode", ",", "maxiter", "=", "maxiter", ",", "xtol", "=", "xtol", ",", "voxel_coords_diff", "=", "voxel_coords_diff", ",", "data_type", "=", "data_type", ",", "num_random_points", "=", "num_random_points", ")", "\n", "\n", "if", "p0_zero_mean", "or", "p1_zero_mean", ":", "\n", "# output' = trans(p0_m) * output * trans(-p1_m)", "\n", "#         = [I, p0_m] * [R, t] * [I, -p1_m]", "\n", "#           [0,   1 ]   [0, 1]   [0,    1 ]", "\n", "            ", "est_g", "=", "net", ".", "g", "\n", "if", "p0_zero_mean", ":", "\n", "                ", "est_g", "=", "a0", ".", "to", "(", "est_g", ")", ".", "bmm", "(", "est_g", ")", "\n", "", "if", "p1_zero_mean", ":", "\n", "                ", "est_g", "=", "est_g", ".", "bmm", "(", "a1", ".", "to", "(", "est_g", ")", ")", "\n", "", "net", ".", "g", "=", "est_g", "\n", "\n", "", "return", "r", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.model.AnalyticalPointNetLK.forward": [[204, 216], ["model.AnalyticalPointNetLK.iclk_new", "torch.eye().to().view().expand().contiguous", "torch.eye().to().view", "torch.eye().to().view().expand", "torch.eye().to", "p0.size", "torch.eye().to().view", "torch.eye", "torch.eye().to", "torch.eye"], "methods", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.model.AnalyticalPointNetLK.iclk_new"], ["", "def", "forward", "(", "self", ",", "p0", ",", "p1", ",", "mode", ",", "maxiter", "=", "10", ",", "xtol", "=", "1.0e-7", ",", "voxel_coords_diff", "=", "None", ",", "data_type", "=", "'synthetic'", ",", "num_random_points", "=", "100", ")", ":", "\n", "        ", "if", "mode", "!=", "'test'", "or", "data_type", "==", "'synthetic'", ":", "\n", "            ", "g0", "=", "torch", ".", "eye", "(", "4", ")", ".", "to", "(", "p0", ")", ".", "view", "(", "1", ",", "4", ",", "4", ")", ".", "expand", "(", "\n", "p0", ".", "size", "(", "0", ")", ",", "4", ",", "4", ")", ".", "contiguous", "(", ")", "\n", "", "else", ":", "\n", "            ", "g0", "=", "torch", ".", "eye", "(", "4", ")", ".", "to", "(", "p0", ")", ".", "view", "(", "1", ",", "4", ",", "4", ")", "\n", "", "r", ",", "g", ",", "itr", "=", "self", ".", "iclk_new", "(", "g0", ",", "p0", ",", "p1", ",", "maxiter", ",", "xtol", ",", "mode", ",", "voxel_coords_diff", "=", "voxel_coords_diff", ",", "data_type", "=", "data_type", ",", "num_random_points", "=", "num_random_points", ")", "\n", "\n", "self", ".", "g", "=", "g", "\n", "self", ".", "itr", "=", "itr", "\n", "\n", "return", "r", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.model.AnalyticalPointNetLK.update": [[217, 221], ["model.AnalyticalPointNetLK.exp", "model.AnalyticalPointNetLK.matmul", "g.float"], "methods", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.exp"], ["", "def", "update", "(", "self", ",", "g", ",", "dx", ")", ":", "\n", "# [B, 4, 4] x [B, 6] -> [B, 4, 4]", "\n", "        ", "dg", "=", "self", ".", "exp", "(", "dx", ")", "\n", "return", "dg", ".", "matmul", "(", "g", ".", "float", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.model.AnalyticalPointNetLK.Cal_Jac": [[222, 263], ["torch.zeros().to", "utils.compute_warp_jac", "utils.feature_jac().to", "feature_j.permute.permute.permute", "torch.einsum", "J_.permute().reshape.permute().reshape.permute", "range", "torch.cat", "torch.cat.reshape", "torch.cat.append", "len", "J_.permute().reshape.permute().reshape.unsqueeze", "J_.permute().reshape.permute().reshape.permute().reshape", "utils.cal_conditioned_warp_jacobian", "warp_condition.permute().reshape.permute().reshape.permute().reshape", "torch.einsum().unsqueeze", "torch.zeros", "utils.feature_jac", "J_.permute().reshape.permute().reshape.size", "J_.permute().reshape.permute().reshape.permute", "warp_condition.permute().reshape.permute().reshape.permute", "torch.einsum", "numpy.arange"], "methods", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.compute_warp_jac", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.cal_conditioned_warp_jacobian", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.feature_jac"], ["", "def", "Cal_Jac", "(", "self", ",", "Mask_fn", ",", "A_fn", ",", "Ax_fn", ",", "BN_fn", ",", "max_idx", ",", "num_points", ",", "p0", ",", "mode", ",", "voxel_coords_diff", "=", "None", ",", "data_type", "=", "'synthetic'", ")", ":", "\n", "        ", "batch_size", "=", "p0", ".", "shape", "[", "0", "]", "\n", "\n", "# 1. get \"warp Jacobian\", warp => Identity matrix, can be pre-computed", "\n", "g_", "=", "torch", ".", "zeros", "(", "batch_size", ",", "6", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "warp_jac", "=", "utils", ".", "compute_warp_jac", "(", "g_", ",", "p0", ",", "num_points", ")", "# B x N x 3 x 6", "\n", "\n", "# 2. explicitly compute \"feature gradient\"", "\n", "feature_j", "=", "utils", ".", "feature_jac", "(", "\n", "Mask_fn", ",", "A_fn", ",", "Ax_fn", ",", "BN_fn", ",", "self", ".", "device", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "feature_j", "=", "feature_j", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", "# B x N x 6 x K", "\n", "\n", "# 3. compose to get final Jacobian", "\n", "J_", "=", "torch", ".", "einsum", "(", "'ijkl,ijkm->ijlm'", ",", "feature_j", ",", "warp_jac", ")", "# B x N x K x 6, K=1024", "\n", "\n", "# 4. max pooling according to network", "\n", "dim_k", "=", "J_", ".", "shape", "[", "2", "]", "\n", "jac_max", "=", "J_", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ")", "# B x K x N x 6", "\n", "jac_max_", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "jac_max_t", "=", "jac_max", "[", "i", ",", "np", ".", "arange", "(", "dim_k", ")", ",", "max_idx", "[", "i", "]", "]", "\n", "jac_max_", ".", "append", "(", "jac_max_t", ")", "\n", "", "jac_max_", "=", "torch", ".", "cat", "(", "jac_max_", ")", "\n", "J_", "=", "jac_max_", ".", "reshape", "(", "batch_size", ",", "dim_k", ",", "6", ")", "# B x K x 6", "\n", "if", "len", "(", "J_", ".", "size", "(", ")", ")", "<", "3", ":", "\n", "            ", "J", "=", "J_", ".", "unsqueeze", "(", "0", ")", "\n", "", "else", ":", "\n", "            ", "J", "=", "J_", "\n", "\n", "", "if", "mode", "==", "'test'", "and", "data_type", "==", "'real'", ":", "\n", "            ", "J_", "=", "J_", ".", "permute", "(", "1", ",", "0", ",", "2", ")", ".", "reshape", "(", "dim_k", ",", "-", "1", ")", "# K x (V6)", "\n", "\n", "# 1. explicit expression for the conditioned warp of 6 twist parameters", "\n", "# V x 6 x 6, using the difference between the local points mean and global points mean", "\n", "warp_condition", "=", "utils", ".", "cal_conditioned_warp_jacobian", "(", "voxel_coords_diff", ")", "\n", "warp_condition", "=", "warp_condition", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "reshape", "(", "-", "1", ",", "6", ")", "# (V6) x 6", "\n", "\n", "J", "=", "torch", ".", "einsum", "(", "'ij,jk->ik'", ",", "J_", ",", "warp_condition", ")", ".", "unsqueeze", "(", "0", ")", "# 1 X K X 6", "\n", "\n", "", "return", "J", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.model.AnalyticalPointNetLK.iclk_new": [[264, 351], ["p0.float.float.size", "p0.float.float.size", "p0.float.float.float", "p1.float.float.float", "g0.float.float.float", "model.AnalyticalPointNetLK.ptnet.eval", "model.AnalyticalPointNetLK.transpose", "model.AnalyticalPointNetLK.transpose.bmm", "model.AnalyticalPointNetLK.inverse", "model.AnalyticalPointNetLK.bmm", "range", "model.AnalyticalPointNetLK.ptnet.train", "numpy.random.choice", "model.AnalyticalPointNetLK.ptnet", "model.AnalyticalPointNetLK.ptnet", "range", "model.AnalyticalPointNetLK.ptnet", "model.AnalyticalPointNetLK.Cal_Jac", "model.AnalyticalPointNetLK.ptnet", "model.AnalyticalPointNetLK.Cal_Jac", "B.bmm.bmm().view.norm().max", "model.AnalyticalPointNetLK.update", "model.AnalyticalPointNetLK.ptnet", "model.AnalyticalPointNetLK.ptnet", "numpy.random.choice", "numpy.random.choice", "model.AnalyticalPointNetLK.transform", "model.AnalyticalPointNetLK.transform", "model.AnalyticalPointNetLK.ptnet", "model.AnalyticalPointNetLK.bmm.bmm().view", "model.AnalyticalPointNetLK.bmm.bmm().view", "float", "model.AnalyticalPointNetLK.unsqueeze", "model.AnalyticalPointNetLK.unsqueeze", "torch.no_grad", "model.AnalyticalPointNetLK.ptnet", "model.AnalyticalPointNetLK.float", "B.bmm.bmm().view.norm", "model.AnalyticalPointNetLK.float", "r.unsqueeze.unsqueeze.unsqueeze", "model.AnalyticalPointNetLK.bmm.bmm", "model.AnalyticalPointNetLK.bmm.bmm", "model.AnalyticalPointNetLK.sum", "model.AnalyticalPointNetLK.sum", "r.unsqueeze.unsqueeze.unsqueeze", "r.unsqueeze.unsqueeze.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.train.train", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.model.AnalyticalPointNetLK.Cal_Jac", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.model.AnalyticalPointNetLK.Cal_Jac", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.model.AnalyticalPointNetLK.update", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.transform", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.transform"], ["", "def", "iclk_new", "(", "self", ",", "g0", ",", "p0", ",", "p1", ",", "maxiter", ",", "xtol", ",", "mode", ",", "voxel_coords_diff", "=", "None", ",", "data_type", "=", "'synthetic'", ",", "num_random_points", "=", "100", ")", ":", "\n", "        ", "training", "=", "self", ".", "ptnet", ".", "training", "\n", "if", "training", ":", "\n", "            ", "self", ".", "step_train", "+=", "1", "\n", "", "else", ":", "\n", "            ", "self", ".", "step_test", "+=", "1", "\n", "", "batch_size", "=", "p0", ".", "size", "(", "0", ")", "\n", "num_points", "=", "p0", ".", "size", "(", "1", ")", "\n", "p0", "=", "p0", ".", "float", "(", ")", "# T", "\n", "p1", "=", "p1", ".", "float", "(", ")", "# S", "\n", "g0", "=", "g0", ".", "float", "(", ")", "# T-->S", "\n", "\n", "g", "=", "g0", "\n", "\n", "# create a data sampler", "\n", "if", "mode", "!=", "'test'", ":", "\n", "            ", "data_sampler", "=", "np", ".", "random", ".", "choice", "(", "num_points", ",", "(", "num_points", "//", "num_random_points", ",", "num_random_points", ")", ",", "replace", "=", "False", ")", "\n", "# input through entire pointnet", "\n", "", "if", "training", ":", "\n", "# first, update BatchNorm modules", "\n", "            ", "f0", "=", "self", ".", "ptnet", "(", "p0", "[", ":", ",", "data_sampler", "[", "0", "]", ",", ":", "]", ",", "0", ")", "\n", "f1", "=", "self", ".", "ptnet", "(", "p1", "[", ":", ",", "data_sampler", "[", "0", "]", ",", ":", "]", ",", "0", ")", "\n", "", "self", ".", "ptnet", ".", "eval", "(", ")", "\n", "\n", "if", "mode", "!=", "'test'", ":", "\n", "            ", "for", "i", "in", "range", "(", "1", ",", "num_points", "//", "num_random_points", "-", "1", ")", ":", "\n", "                ", "f0", "=", "self", ".", "ptnet", "(", "p0", "[", ":", ",", "data_sampler", "[", "i", "]", ",", ":", "]", ",", "i", ")", "\n", "f1", "=", "self", ".", "ptnet", "(", "p1", "[", ":", ",", "data_sampler", "[", "i", "]", ",", ":", "]", ",", "i", ")", "\n", "\n", "# ANCHOR: compute the Jacobian matrix", "\n", "", "", "if", "mode", "==", "'test'", ":", "\n", "            ", "f0", ",", "Mask_fn", ",", "A_fn", ",", "Ax_fn", ",", "BN_fn", ",", "max_idx", "=", "self", ".", "ptnet", "(", "p0", ",", "-", "1", ")", "\n", "J", "=", "self", ".", "Cal_Jac", "(", "Mask_fn", ",", "A_fn", ",", "Ax_fn", ",", "BN_fn", ",", "max_idx", ",", "\n", "num_points", ",", "p0", ",", "mode", ",", "voxel_coords_diff", "=", "voxel_coords_diff", ",", "data_type", "=", "data_type", ")", "# B x N x K x D, K=1024, D=3 or 6", "\n", "", "else", ":", "\n", "            ", "if", "num_points", ">=", "num_random_points", ":", "\n", "                ", "random_idx", "=", "np", ".", "random", ".", "choice", "(", "num_points", ",", "num_random_points", ",", "replace", "=", "False", ")", "\n", "", "else", ":", "\n", "                ", "random_idx", "=", "np", ".", "random", ".", "choice", "(", "num_points", ",", "num_random_points", ",", "replace", "=", "True", ")", "\n", "", "random_points", "=", "p0", "[", ":", ",", "random_idx", "]", "\n", "f0", ",", "Mask_fn", ",", "A_fn", ",", "Ax_fn", ",", "BN_fn", ",", "max_idx", "=", "self", ".", "ptnet", "(", "random_points", ",", "-", "1", ")", "\n", "J", "=", "self", ".", "Cal_Jac", "(", "Mask_fn", ",", "A_fn", ",", "Ax_fn", ",", "BN_fn", ",", "max_idx", ",", "\n", "num_random_points", ",", "random_points", ",", "mode", ")", "# B x N x K x 6, K=1024", "\n", "\n", "# compute psuedo inverse of the Jacobian to solve delta(xi)", "\n", "", "Jt", "=", "J", ".", "transpose", "(", "1", ",", "2", ")", "# [B, 6, K]", "\n", "H", "=", "Jt", ".", "bmm", "(", "J", ")", "# [B, 6, 6]", "\n", "B", "=", "self", ".", "inverse", "(", "H", ")", "\n", "pinv", "=", "B", ".", "bmm", "(", "Jt", ")", "# [B, 6, K]", "\n", "\n", "# iteratively solve for the pose", "\n", "itr", "=", "0", "\n", "r", "=", "None", "\n", "for", "itr", "in", "range", "(", "maxiter", ")", ":", "\n", "            ", "self", ".", "prev_r", "=", "r", "\n", "# [B, 1, 4, 4] x [B, N, 3] -> [B, N, 3]", "\n", "if", "mode", "==", "'test'", ":", "\n", "                ", "p", "=", "self", ".", "transform", "(", "g", ".", "unsqueeze", "(", "1", ")", ",", "p1", ")", "# in local frame", "\n", "", "else", ":", "\n", "                ", "p", "=", "self", ".", "transform", "(", "g", ".", "unsqueeze", "(", "1", ")", ",", "p1", "[", ":", ",", "random_idx", "]", ")", "\n", "\n", "", "if", "not", "training", ":", "\n", "                ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "f", "=", "self", ".", "ptnet", "(", "p", ".", "float", "(", ")", ",", "0", ")", "# [B, N, 3] -> [B, K], in local frame / global frame", "\n", "if", "mode", "==", "'test'", "and", "data_type", "==", "'real'", ":", "\n", "                        ", "r", "=", "f", ".", "sum", "(", "0", ")", "-", "f0", ".", "sum", "(", "0", ")", "\n", "r", "=", "r", ".", "unsqueeze", "(", "0", ")", "\n", "", "else", ":", "\n", "                        ", "r", "=", "f", "-", "f0", "\n", "", "", "", "else", ":", "\n", "                ", "f", "=", "self", ".", "ptnet", "(", "p", ".", "float", "(", ")", ",", "0", ")", "# [B, N, 3] -> [B, K]", "\n", "r", "=", "f", "-", "f0", "# [B, K]", "\n", "\n", "", "if", "mode", "!=", "'test'", "or", "data_type", "==", "'synthetic'", ":", "\n", "                ", "dx", "=", "pinv", ".", "bmm", "(", "r", ".", "unsqueeze", "(", "-", "1", ")", ")", ".", "view", "(", "batch_size", ",", "6", ")", "\n", "", "else", ":", "# during voxelization, testing", "\n", "                ", "dx", "=", "pinv", ".", "bmm", "(", "r", ".", "unsqueeze", "(", "-", "1", ")", ")", ".", "view", "(", "1", ",", "6", ")", "\n", "", "check", "=", "dx", ".", "norm", "(", "p", "=", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ".", "max", "(", ")", "\n", "if", "float", "(", "check", ")", "<", "xtol", ":", "\n", "                ", "if", "itr", "==", "0", ":", "\n", "                    ", "self", ".", "last_err", "=", "0", "# no update", "\n", "", "break", "\n", "", "g", "=", "self", ".", "update", "(", "g", ",", "dx", ")", "\n", "\n", "", "self", ".", "ptnet", ".", "train", "(", "training", ")", "\n", "\n", "return", "r", ",", "g", ",", "(", "itr", "+", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.model.mlp_layers": [[9, 27], ["enumerate", "layers.append", "layers.append", "layers.append", "torch.nn.Conv1d", "torch.nn.Linear", "torch.nn.BatchNorm1d", "torch.nn.ReLU", "layers.append", "torch.nn.Dropout"], "function", ["None"], ["def", "mlp_layers", "(", "nch_input", ",", "nch_layers", ",", "b_shared", "=", "True", ",", "bn_momentum", "=", "0.1", ",", "dropout", "=", "0.0", ")", ":", "\n", "    ", "\"\"\" [B, Cin, N] -> [B, Cout, N] or\n        [B, Cin] -> [B, Cout]\n    \"\"\"", "\n", "layers", "=", "[", "]", "\n", "last", "=", "nch_input", "\n", "for", "i", ",", "outp", "in", "enumerate", "(", "nch_layers", ")", ":", "\n", "        ", "if", "b_shared", ":", "\n", "            ", "weights", "=", "torch", ".", "nn", ".", "Conv1d", "(", "last", ",", "outp", ",", "1", ")", "\n", "", "else", ":", "\n", "            ", "weights", "=", "torch", ".", "nn", ".", "Linear", "(", "last", ",", "outp", ")", "\n", "", "layers", ".", "append", "(", "weights", ")", "\n", "layers", ".", "append", "(", "torch", ".", "nn", ".", "BatchNorm1d", "(", "outp", ",", "momentum", "=", "bn_momentum", ")", ")", "\n", "layers", ".", "append", "(", "torch", ".", "nn", ".", "ReLU", "(", ")", ")", "\n", "if", "b_shared", "==", "False", "and", "dropout", ">", "0.0", ":", "\n", "            ", "layers", ".", "append", "(", "torch", ".", "nn", ".", "Dropout", "(", "dropout", ")", ")", "\n", "", "last", "=", "outp", "\n", "", "return", "layers", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.model.symfn_max": [[44, 48], ["torch.nn.functional.max_pool1d", "x.size"], "function", ["None"], ["", "", "def", "symfn_max", "(", "x", ")", ":", "\n", "# [B, K, N] -> [B, K, 1]", "\n", "    ", "a", "=", "torch", ".", "nn", ".", "functional", ".", "max_pool1d", "(", "x", ",", "x", ".", "size", "(", "-", "1", ")", ")", "\n", "return", "a", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.InvMatrix.forward": [[34, 39], ["utils.batch_inverse", "ctx.save_for_backward"], "methods", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.batch_inverse"], ["@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "x", ")", ":", "\n", "        ", "y", "=", "batch_inverse", "(", "x", ")", "\n", "ctx", ".", "save_for_backward", "(", "y", ")", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.InvMatrix.backward": [[40, 53], ["y.size", "utils.batch_inverse_dx", "grad_output.contiguous().view", "batch_inverse_dx.view", "grad_output.contiguous().view.bmm", "grad_output.contiguous().view.bmm.view", "grad_output.contiguous"], "methods", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.batch_inverse_dx"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_output", ")", ":", "\n", "        ", "y", ",", "=", "ctx", ".", "saved_tensors", "\n", "batch_size", ",", "h", ",", "w", "=", "y", ".", "size", "(", ")", "\n", "assert", "h", "==", "w", "\n", "\n", "dy", "=", "batch_inverse_dx", "(", "y", ")", "# dy(j,k,m,n) = dy(j,k)/dx(m,n)", "\n", "go", "=", "grad_output", ".", "contiguous", "(", ")", ".", "view", "(", "batch_size", ",", "1", ",", "h", "*", "h", ")", "# [1, (j*k)]", "\n", "ym", "=", "dy", ".", "view", "(", "batch_size", ",", "h", "*", "h", ",", "h", "*", "h", ")", "# [(j*k), (m*n)]", "\n", "r", "=", "go", ".", "bmm", "(", "ym", ")", "# [1, (m*n)]", "\n", "grad_input", "=", "r", ".", "view", "(", "batch_size", ",", "h", ",", "h", ")", "# [m, n]", "\n", "\n", "return", "grad_input", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.ExpMap.forward": [[258, 267], ["ctx.save_for_backward", "utils.exp"], "methods", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.exp"], ["@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "x", ")", ":", "\n", "        ", "\"\"\" Exp: R^6 -> M(4),\n            size: [B, 6] -> [B, 4, 4],\n              or  [B, 1, 6] -> [B, 1, 4, 4]\n        \"\"\"", "\n", "ctx", ".", "save_for_backward", "(", "x", ")", "\n", "g", "=", "exp", "(", "x", ")", "\n", "return", "g", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.ExpMap.backward": [[268, 283], ["utils.exp", "mat_se3().to", "mat_se3().to.matmul", "dg.to.to.to", "grad_output.contiguous().view", "dd.sum().sum", "exp.view", "utils.mat_se3", "grad_output.contiguous", "dd.sum", "torch.eye"], "methods", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.exp", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.mat_se3"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_output", ")", ":", "\n", "        ", "x", ",", "=", "ctx", ".", "saved_tensors", "\n", "g", "=", "exp", "(", "x", ")", "\n", "gen_k", "=", "mat_se3", "(", "torch", ".", "eye", "(", "6", ")", ")", ".", "to", "(", "x", ")", "\n", "\n", "dg", "=", "gen_k", ".", "matmul", "(", "g", ".", "view", "(", "-", "1", ",", "1", ",", "4", ",", "4", ")", ")", "\n", "# (k, i, j)", "\n", "dg", "=", "dg", ".", "to", "(", "grad_output", ")", "\n", "\n", "go", "=", "grad_output", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "1", ",", "4", ",", "4", ")", "\n", "dd", "=", "go", "*", "dg", "\n", "grad_input", "=", "dd", ".", "sum", "(", "-", "1", ")", ".", "sum", "(", "-", "1", ")", "\n", "\n", "return", "grad_input", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.batch_inverse": [[10, 18], ["x.size", "torch.zeros_like", "range", "x[].inverse"], "function", ["None"], ["def", "batch_inverse", "(", "x", ")", ":", "\n", "    ", "\"\"\" M(n) -> M(n); x -> x^-1 \"\"\"", "\n", "batch_size", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "assert", "h", "==", "w", "\n", "y", "=", "torch", ".", "zeros_like", "(", "x", ")", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "        ", "y", "[", "i", ",", ":", ",", ":", "]", "=", "x", "[", "i", ",", ":", ",", ":", "]", ".", "inverse", "(", ")", "\n", "", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.batch_inverse_dx": [[20, 29], ["y.size", "y.repeat().view", "y.transpose().repeat().view", "y.repeat().view.bmm().view", "y.repeat", "y.transpose().repeat", "y.repeat().view.bmm", "y.transpose"], "function", ["None"], ["", "def", "batch_inverse_dx", "(", "y", ")", ":", "\n", "    ", "\"\"\" backward \"\"\"", "\n", "batch_size", ",", "h", ",", "w", "=", "y", ".", "size", "(", ")", "\n", "assert", "h", "==", "w", "\n", "yl", "=", "y", ".", "repeat", "(", "1", ",", "1", ",", "h", ")", ".", "view", "(", "batch_size", "*", "h", "*", "h", ",", "h", ",", "1", ")", "\n", "yr", "=", "y", ".", "transpose", "(", "1", ",", "2", ")", ".", "repeat", "(", "1", ",", "h", ",", "1", ")", ".", "view", "(", "batch_size", "*", "h", "*", "h", ",", "1", ",", "h", ")", "\n", "dy", "=", "-", "yl", ".", "bmm", "(", "yr", ")", ".", "view", "(", "batch_size", ",", "h", ",", "h", ",", "h", ",", "h", ")", "\n", "\n", "return", "dy", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.transform": [[56, 68], ["g.view", "g_[].contiguous().view", "g_[].contiguous().view", "len", "len", "a.transpose.transpose", "g_[].contiguous", "g_[].contiguous", "g.size", "a.transpose.size", "g_[].contiguous().view.matmul", "g_[].contiguous().view.unsqueeze", "g_[].contiguous().view.matmul().squeeze", "g.size", "g.size", "g_[].contiguous().view.matmul", "a.transpose.unsqueeze"], "function", ["None"], ["", "", "def", "transform", "(", "g", ",", "a", ")", ":", "\n", "# g : SE(3),  B x 4 x 4", "\n", "# a : R^3,    B x N x 3", "\n", "    ", "g_", "=", "g", ".", "view", "(", "-", "1", ",", "4", ",", "4", ")", "\n", "R", "=", "g_", "[", ":", ",", "0", ":", "3", ",", "0", ":", "3", "]", ".", "contiguous", "(", ")", ".", "view", "(", "*", "(", "g", ".", "size", "(", ")", "[", "0", ":", "-", "2", "]", ")", ",", "3", ",", "3", ")", "\n", "p", "=", "g_", "[", ":", ",", "0", ":", "3", ",", "3", "]", ".", "contiguous", "(", ")", ".", "view", "(", "*", "(", "g", ".", "size", "(", ")", "[", "0", ":", "-", "2", "]", ")", ",", "3", ")", "\n", "if", "len", "(", "g", ".", "size", "(", ")", ")", "==", "len", "(", "a", ".", "size", "(", ")", ")", ":", "\n", "        ", "a", "=", "a", ".", "transpose", "(", "1", ",", "2", ")", "\n", "b", "=", "R", ".", "matmul", "(", "a", ")", "+", "p", ".", "unsqueeze", "(", "-", "1", ")", "\n", "", "else", ":", "\n", "        ", "b", "=", "R", ".", "matmul", "(", "a", ".", "unsqueeze", "(", "-", "1", ")", ")", ".", "squeeze", "(", "-", "1", ")", "+", "p", "\n", "", "return", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.mat_so3": [[71, 83], ["x.view", "torch.zeros_like", "torch.stack", "torch.stack.view", "torch.stack", "torch.stack", "torch.stack", "x.size"], "function", ["None"], ["", "def", "mat_so3", "(", "x", ")", ":", "\n", "# x: [*, 3]", "\n", "# X: [*, 3, 3]", "\n", "    ", "x_", "=", "x", ".", "view", "(", "-", "1", ",", "3", ")", "\n", "x1", ",", "x2", ",", "x3", "=", "x_", "[", ":", ",", "0", "]", ",", "x_", "[", ":", ",", "1", "]", ",", "x_", "[", ":", ",", "2", "]", "\n", "O", "=", "torch", ".", "zeros_like", "(", "x1", ")", "\n", "\n", "X", "=", "torch", ".", "stack", "(", "(", "\n", "torch", ".", "stack", "(", "(", "O", ",", "-", "x3", ",", "x2", ")", ",", "dim", "=", "1", ")", ",", "\n", "torch", ".", "stack", "(", "(", "x3", ",", "O", ",", "-", "x1", ")", ",", "dim", "=", "1", ")", ",", "\n", "torch", ".", "stack", "(", "(", "-", "x2", ",", "x1", ",", "O", ")", ",", "dim", "=", "1", ")", ")", ",", "dim", "=", "1", ")", "\n", "return", "X", ".", "view", "(", "*", "(", "x", ".", "size", "(", ")", "[", "0", ":", "-", "1", "]", ")", ",", "3", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.btrace": [[85, 94], ["X.size", "X.view", "torch.zeros().to", "range", "torch.zeros().to.view", "torch.zeros().to.size", "torch.trace", "torch.zeros", "X.view.size", "X.size"], "function", ["None"], ["", "def", "btrace", "(", "X", ")", ":", "\n", "# batch-trace: [B, N, N] -> [B]", "\n", "    ", "n", "=", "X", ".", "size", "(", "-", "1", ")", "\n", "X_", "=", "X", ".", "view", "(", "-", "1", ",", "n", ",", "n", ")", "\n", "tr", "=", "torch", ".", "zeros", "(", "X_", ".", "size", "(", "0", ")", ")", ".", "to", "(", "X", ")", "\n", "for", "i", "in", "range", "(", "tr", ".", "size", "(", "0", ")", ")", ":", "\n", "        ", "m", "=", "X_", "[", "i", ",", ":", ",", ":", "]", "\n", "tr", "[", "i", "]", "=", "torch", ".", "trace", "(", "m", ")", "\n", "", "return", "tr", ".", "view", "(", "*", "(", "X", ".", "size", "(", ")", "[", "0", ":", "-", "2", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.vec": [[96, 101], ["X.view", "torch.stack", "torch.stack.view", "X.size"], "function", ["None"], ["", "def", "vec", "(", "X", ")", ":", "\n", "    ", "X_", "=", "X", ".", "view", "(", "-", "1", ",", "3", ",", "3", ")", "\n", "x1", ",", "x2", ",", "x3", "=", "X_", "[", ":", ",", "2", ",", "1", "]", ",", "X_", "[", ":", ",", "0", ",", "2", "]", ",", "X_", "[", ":", ",", "1", ",", "0", "]", "\n", "x", "=", "torch", ".", "stack", "(", "(", "x1", ",", "x2", ",", "x3", ")", ",", "dim", "=", "1", ")", "\n", "return", "x", ".", "view", "(", "*", "X", ".", "size", "(", ")", "[", "0", ":", "-", "2", "]", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.log_so3": [[103, 138], ["g.view", "utils.btrace", "torch.acos", "utils.sinc1", "sc.view.view", "torch.zeros_like", "idx1.any", "idx0.any", "utils.vec", "torch.abs", "torch.abs", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sign", "torch.sign", "torch.stack", "utils.mat_so3", "torch.zeros_like.view_as", "R[].transpose", "t2.view", "torch.eye().type_as().unsqueeze", "torch.eye().type_as", "torch.eye"], "function", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.btrace", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.sinc1", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.vec", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.mat_so3"], ["", "def", "log_so3", "(", "g", ")", ":", "\n", "    ", "eps", "=", "1.0e-6", "\n", "R", "=", "g", ".", "view", "(", "-", "1", ",", "3", ",", "3", ")", "\n", "tr", "=", "btrace", "(", "R", ")", "\n", "c", "=", "(", "tr", "-", "1", ")", "/", "2", "\n", "t", "=", "torch", ".", "acos", "(", "c", ")", "\n", "sc", "=", "sinc1", "(", "t", ")", "\n", "idx0", "=", "(", "torch", ".", "abs", "(", "sc", ")", "<=", "eps", ")", "\n", "idx1", "=", "(", "torch", ".", "abs", "(", "sc", ")", ">", "eps", ")", "\n", "sc", "=", "sc", ".", "view", "(", "-", "1", ",", "1", ",", "1", ")", "\n", "\n", "X", "=", "torch", ".", "zeros_like", "(", "R", ")", "\n", "if", "idx1", ".", "any", "(", ")", ":", "\n", "        ", "X", "[", "idx1", "]", "=", "(", "R", "[", "idx1", "]", "-", "R", "[", "idx1", "]", ".", "transpose", "(", "1", ",", "2", ")", ")", "/", "(", "2", "*", "sc", "[", "idx1", "]", ")", "\n", "\n", "", "if", "idx0", ".", "any", "(", ")", ":", "\n", "        ", "t2", "=", "t", "[", "idx0", "]", "**", "2", "\n", "A", "=", "(", "R", "[", "idx0", "]", "+", "torch", ".", "eye", "(", "3", ")", ".", "type_as", "(", "R", ")", ".", "unsqueeze", "(", "0", ")", ")", "*", "t2", ".", "view", "(", "-", "1", ",", "1", ",", "1", ")", "/", "2", "\n", "aw1", "=", "torch", ".", "sqrt", "(", "A", "[", ":", ",", "0", ",", "0", "]", ")", "\n", "aw2", "=", "torch", ".", "sqrt", "(", "A", "[", ":", ",", "1", ",", "1", "]", ")", "\n", "aw3", "=", "torch", ".", "sqrt", "(", "A", "[", ":", ",", "2", ",", "2", "]", ")", "\n", "sgn_3", "=", "torch", ".", "sign", "(", "A", "[", ":", ",", "0", ",", "2", "]", ")", "\n", "sgn_3", "[", "sgn_3", "==", "0", "]", "=", "1", "\n", "sgn_23", "=", "torch", ".", "sign", "(", "A", "[", ":", ",", "1", ",", "2", "]", ")", "\n", "sgn_23", "[", "sgn_23", "==", "0", "]", "=", "1", "\n", "sgn_2", "=", "sgn_23", "*", "sgn_3", "\n", "w1", "=", "aw1", "\n", "w2", "=", "aw2", "*", "sgn_2", "\n", "w3", "=", "aw3", "*", "sgn_3", "\n", "w", "=", "torch", ".", "stack", "(", "(", "w1", ",", "w2", ",", "w3", ")", ",", "dim", "=", "-", "1", ")", "\n", "W", "=", "mat_so3", "(", "w", ")", "\n", "X", "[", "idx0", "]", "=", "W", "\n", "\n", "", "x", "=", "vec", "(", "X", ".", "view_as", "(", "g", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.inv_vecs_Xg_ig": [[140, 157], ["x.view().norm().view", "utils.mat_so3", "mat_so3.bmm", "torch.eye().to", "torch.zeros_like", "H.view", "x.view().norm", "torch.eye", "torch.tan", "x.size", "x.view"], "function", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.mat_so3"], ["", "def", "inv_vecs_Xg_ig", "(", "x", ")", ":", "\n", "    ", "\"\"\" H = inv(vecs_Xg_ig(x)) \"\"\"", "\n", "t", "=", "x", ".", "view", "(", "-", "1", ",", "3", ")", ".", "norm", "(", "p", "=", "2", ",", "dim", "=", "1", ")", ".", "view", "(", "-", "1", ",", "1", ",", "1", ")", "\n", "X", "=", "mat_so3", "(", "x", ")", "\n", "S", "=", "X", ".", "bmm", "(", "X", ")", "\n", "I", "=", "torch", ".", "eye", "(", "3", ")", ".", "to", "(", "x", ")", "\n", "\n", "e", "=", "0.01", "\n", "eta", "=", "torch", ".", "zeros_like", "(", "t", ")", "\n", "s", "=", "(", "t", "<", "e", ")", "\n", "c", "=", "(", "s", "==", "0", ")", "\n", "t2", "=", "t", "[", "s", "]", "**", "2", "\n", "eta", "[", "s", "]", "=", "(", "(", "t2", "/", "40", "+", "1", ")", "*", "t2", "/", "42", "+", "1", ")", "*", "t2", "/", "720", "+", "1", "/", "12", "# O(t**8)", "\n", "eta", "[", "c", "]", "=", "(", "1", "-", "(", "t", "[", "c", "]", "/", "2", ")", "/", "torch", ".", "tan", "(", "t", "[", "c", "]", "/", "2", ")", ")", "/", "(", "t", "[", "c", "]", "**", "2", ")", "\n", "\n", "H", "=", "I", "-", "1", "/", "2", "*", "X", "+", "eta", "*", "S", "\n", "return", "H", ".", "view", "(", "*", "(", "x", ".", "size", "(", ")", "[", "0", ":", "-", "1", "]", ")", ",", "3", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.log": [[159, 170], ["g.view", "utils.log_so3", "utils.inv_vecs_Xg_ig", "inv_vecs_Xg_ig.bmm().view", "torch.cat", "torch.cat.view", "inv_vecs_Xg_ig.bmm", "p.contiguous().view", "g.size", "p.contiguous"], "function", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.log_so3", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.inv_vecs_Xg_ig"], ["", "def", "log", "(", "g", ")", ":", "\n", "    ", "g_", "=", "g", ".", "view", "(", "-", "1", ",", "4", ",", "4", ")", "\n", "R", "=", "g_", "[", ":", ",", "0", ":", "3", ",", "0", ":", "3", "]", "\n", "p", "=", "g_", "[", ":", ",", "0", ":", "3", ",", "3", "]", "\n", "\n", "w", "=", "log_so3", "(", "R", ")", "\n", "H", "=", "inv_vecs_Xg_ig", "(", "w", ")", "\n", "v", "=", "H", ".", "bmm", "(", "p", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "3", ",", "1", ")", ")", ".", "view", "(", "-", "1", ",", "3", ")", "\n", "\n", "x", "=", "torch", ".", "cat", "(", "(", "w", ",", "v", ")", ",", "dim", "=", "1", ")", "\n", "return", "x", ".", "view", "(", "*", "(", "g", ".", "size", "(", ")", "[", "0", ":", "-", "2", "]", ")", ",", "6", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.mat_se3": [[173, 186], ["x.view", "torch.zeros_like", "torch.stack", "torch.stack.view", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "x.size"], "function", ["None"], ["", "def", "mat_se3", "(", "x", ")", ":", "\n", "# size: [*, 6] -> [*, 4, 4]", "\n", "    ", "x_", "=", "x", ".", "view", "(", "-", "1", ",", "6", ")", "\n", "w1", ",", "w2", ",", "w3", "=", "x_", "[", ":", ",", "0", "]", ",", "x_", "[", ":", ",", "1", "]", ",", "x_", "[", ":", ",", "2", "]", "\n", "v1", ",", "v2", ",", "v3", "=", "x_", "[", ":", ",", "3", "]", ",", "x_", "[", ":", ",", "4", "]", ",", "x_", "[", ":", ",", "5", "]", "\n", "O", "=", "torch", ".", "zeros_like", "(", "w1", ")", "\n", "\n", "X", "=", "torch", ".", "stack", "(", "(", "\n", "torch", ".", "stack", "(", "(", "O", ",", "-", "w3", ",", "w2", ",", "v1", ")", ",", "dim", "=", "1", ")", ",", "\n", "torch", ".", "stack", "(", "(", "w3", ",", "O", ",", "-", "w1", ",", "v2", ")", ",", "dim", "=", "1", ")", ",", "\n", "torch", ".", "stack", "(", "(", "-", "w2", ",", "w1", ",", "O", ",", "v3", ")", ",", "dim", "=", "1", ")", ",", "\n", "torch", ".", "stack", "(", "(", "O", ",", "O", ",", "O", ",", "O", ")", ",", "dim", "=", "1", ")", ")", ",", "dim", "=", "1", ")", "\n", "return", "X", ".", "view", "(", "*", "(", "x", ".", "size", "(", ")", "[", "0", ":", "-", "1", "]", ")", ",", "4", ",", "4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.sinc1": [[188, 201], ["torch.zeros_like", "torch.abs", "torch.sin"], "function", ["None"], ["", "def", "sinc1", "(", "t", ")", ":", "\n", "    ", "\"\"\" sinc1: t -> sin(t)/t \"\"\"", "\n", "e", "=", "0.01", "\n", "r", "=", "torch", ".", "zeros_like", "(", "t", ")", "\n", "a", "=", "torch", ".", "abs", "(", "t", ")", "\n", "\n", "s", "=", "a", "<", "e", "\n", "c", "=", "(", "s", "==", "0", ")", "\n", "t2", "=", "t", "[", "s", "]", "**", "2", "\n", "r", "[", "s", "]", "=", "1", "-", "t2", "/", "6", "*", "(", "1", "-", "t2", "/", "20", "*", "(", "1", "-", "t2", "/", "42", ")", ")", "# Taylor series O(t^8)", "\n", "r", "[", "c", "]", "=", "torch", ".", "sin", "(", "t", "[", "c", "]", ")", "/", "t", "[", "c", "]", "\n", "\n", "return", "r", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.sinc2": [[203, 216], ["torch.zeros_like", "torch.abs", "torch.cos"], "function", ["None"], ["", "def", "sinc2", "(", "t", ")", ":", "\n", "    ", "\"\"\" sinc2: t -> (1 - cos(t)) / (t**2) \"\"\"", "\n", "e", "=", "0.01", "\n", "r", "=", "torch", ".", "zeros_like", "(", "t", ")", "\n", "a", "=", "torch", ".", "abs", "(", "t", ")", "\n", "\n", "s", "=", "a", "<", "e", "\n", "c", "=", "(", "s", "==", "0", ")", "\n", "t2", "=", "t", "**", "2", "\n", "r", "[", "s", "]", "=", "1", "/", "2", "*", "(", "1", "-", "t2", "[", "s", "]", "/", "12", "*", "(", "1", "-", "t2", "[", "s", "]", "/", "30", "*", "(", "1", "-", "t2", "[", "s", "]", "/", "56", ")", ")", ")", "# Taylor series O(t^8)", "\n", "r", "[", "c", "]", "=", "(", "1", "-", "torch", ".", "cos", "(", "t", "[", "c", "]", ")", ")", "/", "t2", "[", "c", "]", "\n", "\n", "return", "r", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.sinc3": [[218, 231], ["torch.zeros_like", "torch.abs", "torch.sin"], "function", ["None"], ["", "def", "sinc3", "(", "t", ")", ":", "\n", "    ", "\"\"\" sinc3: t -> (t - sin(t)) / (t**3) \"\"\"", "\n", "e", "=", "0.01", "\n", "r", "=", "torch", ".", "zeros_like", "(", "t", ")", "\n", "a", "=", "torch", ".", "abs", "(", "t", ")", "\n", "\n", "s", "=", "a", "<", "e", "\n", "c", "=", "(", "s", "==", "0", ")", "\n", "t2", "=", "t", "[", "s", "]", "**", "2", "\n", "r", "[", "s", "]", "=", "1", "/", "6", "*", "(", "1", "-", "t2", "/", "20", "*", "(", "1", "-", "t2", "/", "42", "*", "(", "1", "-", "t2", "/", "72", ")", ")", ")", "# Taylor series O(t^8)", "\n", "r", "[", "c", "]", "=", "(", "t", "[", "c", "]", "-", "torch", ".", "sin", "(", "t", "[", "c", "]", ")", ")", "/", "(", "t", "[", "c", "]", "**", "3", ")", "\n", "\n", "return", "r", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.exp": [[234, 253], ["x.view", "w.norm().view", "utils.mat_so3", "mat_so3.bmm", "torch.eye().to", "V.bmm", "torch.Tensor().view().repeat().to", "torch.cat", "torch.cat", "torch.cat.view", "v.contiguous().view", "w.norm", "torch.eye", "utils.sinc2", "utils.sinc3", "torch.Tensor().view().repeat", "utils.sinc1", "utils.sinc2", "v.contiguous", "x.view.size", "x.size", "torch.Tensor().view", "torch.Tensor"], "function", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.mat_so3", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.sinc2", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.sinc3", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.sinc1", "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.sinc2"], ["", "def", "exp", "(", "x", ")", ":", "\n", "    ", "x_", "=", "x", ".", "view", "(", "-", "1", ",", "6", ")", "\n", "w", ",", "v", "=", "x_", "[", ":", ",", "0", ":", "3", "]", ",", "x_", "[", ":", ",", "3", ":", "6", "]", "\n", "t", "=", "w", ".", "norm", "(", "p", "=", "2", ",", "dim", "=", "1", ")", ".", "view", "(", "-", "1", ",", "1", ",", "1", ")", "# norm of rotation", "\n", "W", "=", "mat_so3", "(", "w", ")", "\n", "S", "=", "W", ".", "bmm", "(", "W", ")", "\n", "I", "=", "torch", ".", "eye", "(", "3", ")", ".", "to", "(", "w", ")", "\n", "\n", "# Rodrigues' rotation formula.", "\n", "R", "=", "I", "+", "sinc1", "(", "t", ")", "*", "W", "+", "sinc2", "(", "t", ")", "*", "S", "\n", "V", "=", "I", "+", "sinc2", "(", "t", ")", "*", "W", "+", "sinc3", "(", "t", ")", "*", "S", "\n", "\n", "p", "=", "V", ".", "bmm", "(", "v", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "3", ",", "1", ")", ")", "\n", "\n", "z", "=", "torch", ".", "Tensor", "(", "[", "0", ",", "0", ",", "0", ",", "1", "]", ")", ".", "view", "(", "1", ",", "1", ",", "4", ")", ".", "repeat", "(", "x_", ".", "size", "(", "0", ")", ",", "1", ",", "1", ")", ".", "to", "(", "x", ")", "\n", "Rp", "=", "torch", ".", "cat", "(", "(", "R", ",", "p", ")", ",", "dim", "=", "2", ")", "\n", "g", "=", "torch", ".", "cat", "(", "(", "Rp", ",", "z", ")", ",", "dim", "=", "1", ")", "\n", "\n", "return", "g", ".", "view", "(", "*", "(", "x", ".", "size", "(", ")", "[", "0", ":", "-", "1", "]", ")", ",", "4", ",", "4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.feature_jac": [[286, 322], ["A1.T.detach().unsqueeze.T.detach().unsqueeze", "A2.T.detach().unsqueeze.T.detach().unsqueeze", "A3.T.detach().unsqueeze.T.detach().unsqueeze", "[].unsqueeze().detach", "[].unsqueeze().detach", "[].unsqueeze().detach", "M1.detach().unsqueeze.detach().unsqueeze", "M2.detach().unsqueeze.detach().unsqueeze", "M3.detach().unsqueeze.detach().unsqueeze", "torch.einsum", "torch.einsum", "A1.T.detach().unsqueeze.T.detach", "A2.T.detach().unsqueeze.T.detach", "A3.T.detach().unsqueeze.T.detach", "[].unsqueeze", "[].unsqueeze", "[].unsqueeze", "M1.detach().unsqueeze.detach", "M2.detach().unsqueeze.detach", "M3.detach().unsqueeze.detach", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones", "torch.ones", "torch.ones", "BN1.size", "BN2.size", "BN3.size"], "function", ["None"], ["", "", "def", "feature_jac", "(", "M", ",", "A", ",", "Ax", ",", "BN", ",", "device", ")", ":", "\n", "# M, A, Ax, BN: list", "\n", "    ", "A1", ",", "A2", ",", "A3", "=", "A", "\n", "M1", ",", "M2", ",", "M3", "=", "M", "\n", "Ax1", ",", "Ax2", ",", "Ax3", "=", "Ax", "\n", "BN1", ",", "BN2", ",", "BN3", "=", "BN", "\n", "\n", "# 1 x c_in x c_out x 1", "\n", "A1", "=", "(", "A1", ".", "T", ")", ".", "detach", "(", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "A2", "=", "(", "A2", ".", "T", ")", ".", "detach", "(", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "A3", "=", "(", "A3", ".", "T", ")", ".", "detach", "(", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "\n", "# calculate gradient for batch normalization using autograd, ", "\n", "# since the dimension is small, and the actual computation is complex.", "\n", "# B x 1 x c_out x N", "\n", "dBN1", "=", "torch", ".", "autograd", ".", "grad", "(", "outputs", "=", "BN1", ",", "inputs", "=", "Ax1", ",", "grad_outputs", "=", "torch", ".", "ones", "(", "BN1", ".", "size", "(", ")", ")", ".", "to", "(", "device", ")", ",", "retain_graph", "=", "True", ")", "[", "0", "]", ".", "unsqueeze", "(", "1", ")", ".", "detach", "(", ")", "\n", "dBN2", "=", "torch", ".", "autograd", ".", "grad", "(", "outputs", "=", "BN2", ",", "inputs", "=", "Ax2", ",", "grad_outputs", "=", "torch", ".", "ones", "(", "BN2", ".", "size", "(", ")", ")", ".", "to", "(", "device", ")", ",", "retain_graph", "=", "True", ")", "[", "0", "]", ".", "unsqueeze", "(", "1", ")", ".", "detach", "(", ")", "\n", "dBN3", "=", "torch", ".", "autograd", ".", "grad", "(", "outputs", "=", "BN3", ",", "inputs", "=", "Ax3", ",", "grad_outputs", "=", "torch", ".", "ones", "(", "BN3", ".", "size", "(", ")", ")", ".", "to", "(", "device", ")", ",", "retain_graph", "=", "True", ")", "[", "0", "]", ".", "unsqueeze", "(", "1", ")", ".", "detach", "(", ")", "\n", "\n", "# B x 1 x c_out x N", "\n", "M1", "=", "M1", ".", "detach", "(", ")", ".", "unsqueeze", "(", "1", ")", "\n", "M2", "=", "M2", ".", "detach", "(", ")", ".", "unsqueeze", "(", "1", ")", "\n", "M3", "=", "M3", ".", "detach", "(", ")", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "# 1. using *, naturally broadcast --> B x c_in x c_out x N", "\n", "A1BN1M1", "=", "A1", "*", "dBN1", "*", "M1", "\n", "A2BN2M2", "=", "A2", "*", "dBN2", "*", "M2", "\n", "A3BN3M3", "=", "M3", "*", "dBN3", "*", "A3", "\n", "\n", "# using torch.einsum()", "\n", "A1BN1M1_A2BN2M2", "=", "torch", ".", "einsum", "(", "'ijkl,ikml->ijml'", ",", "A1BN1M1", ",", "A2BN2M2", ")", "# B x 3 x 64 x N", "\n", "A2BN2M2_A3BN3M3", "=", "torch", ".", "einsum", "(", "'ijkl,ikml->ijml'", ",", "A1BN1M1_A2BN2M2", ",", "A3BN3M3", ")", "# B x 3 x K x N", "\n", "\n", "feat_jac", "=", "A2BN2M2_A3BN3M3", "\n", "\n", "return", "feat_jac", "# B x 3 x K x N", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.compute_warp_jac": [[325, 352], ["torch.zeros().to", "utils.exp", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "rotm.transpose().unsqueeze().repeat", "torch.zeros", "T[].unsqueeze", "T[].unsqueeze", "T[].unsqueeze", "T[].unsqueeze", "T[].unsqueeze", "T[].unsqueeze", "T[].unsqueeze", "T[].unsqueeze", "T[].unsqueeze", "T[].unsqueeze", "T[].unsqueeze", "T[].unsqueeze", "T[].unsqueeze", "T[].unsqueeze", "T[].unsqueeze", "d03.unsqueeze", "d04.unsqueeze", "d05.unsqueeze", "d13.unsqueeze", "d14.unsqueeze", "d15.unsqueeze", "d23.unsqueeze", "d24.unsqueeze", "d25.unsqueeze", "torch.cat.unsqueeze", "torch.cat.unsqueeze", "torch.cat.unsqueeze", "rotm.transpose().unsqueeze", "T[].unsqueeze", "T[].unsqueeze", "T[].unsqueeze", "rotm.transpose"], "function", ["home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.exp"], ["", "def", "compute_warp_jac", "(", "t", ",", "xx", ",", "num_points", ")", ":", "\n", "    ", "b", "=", "xx", ".", "shape", "[", "0", "]", "\n", "\n", "warp_jac", "=", "torch", ".", "zeros", "(", "b", ",", "num_points", ",", "3", ",", "6", ")", ".", "to", "(", "xx", ")", "\n", "T", "=", "exp", "(", "t", ")", "\n", "rotm", "=", "T", "[", ":", ",", ":", "3", ",", ":", "3", "]", "# Bx3x3", "\n", "warp_jac", "[", "...", ",", "3", ":", "]", "=", "-", "rotm", ".", "transpose", "(", "1", ",", "2", ")", ".", "unsqueeze", "(", "1", ")", ".", "repeat", "(", "1", ",", "num_points", ",", "1", ",", "1", ")", "# BxNx3x6", "\n", "\n", "x", "=", "xx", "[", "...", ",", "0", "]", "\n", "y", "=", "xx", "[", "...", ",", "1", "]", "\n", "z", "=", "xx", "[", "...", ",", "2", "]", "\n", "d03", "=", "T", "[", ":", ",", "1", ",", "0", "]", ".", "unsqueeze", "(", "1", ")", "*", "z", "-", "T", "[", ":", ",", "2", ",", "0", "]", ".", "unsqueeze", "(", "1", ")", "*", "y", "# BxN", "\n", "d04", "=", "-", "T", "[", ":", ",", "0", ",", "0", "]", ".", "unsqueeze", "(", "1", ")", "*", "z", "+", "T", "[", ":", ",", "2", ",", "0", "]", ".", "unsqueeze", "(", "1", ")", "*", "x", "\n", "d05", "=", "T", "[", ":", ",", "0", ",", "0", "]", ".", "unsqueeze", "(", "1", ")", "*", "y", "-", "T", "[", ":", ",", "1", ",", "0", "]", ".", "unsqueeze", "(", "1", ")", "*", "x", "\n", "d13", "=", "T", "[", ":", ",", "1", ",", "1", "]", ".", "unsqueeze", "(", "1", ")", "*", "z", "-", "T", "[", ":", ",", "2", ",", "1", "]", ".", "unsqueeze", "(", "1", ")", "*", "y", "\n", "d14", "=", "-", "T", "[", ":", ",", "0", ",", "1", "]", ".", "unsqueeze", "(", "1", ")", "*", "z", "+", "T", "[", ":", ",", "2", ",", "1", "]", ".", "unsqueeze", "(", "1", ")", "*", "x", "\n", "d15", "=", "T", "[", ":", ",", "0", ",", "1", "]", ".", "unsqueeze", "(", "1", ")", "*", "y", "-", "T", "[", ":", ",", "1", ",", "1", "]", ".", "unsqueeze", "(", "1", ")", "*", "x", "\n", "d23", "=", "T", "[", ":", ",", "1", ",", "2", "]", ".", "unsqueeze", "(", "1", ")", "*", "z", "-", "T", "[", ":", ",", "2", ",", "2", "]", ".", "unsqueeze", "(", "1", ")", "*", "y", "\n", "d24", "=", "-", "T", "[", ":", ",", "0", ",", "2", "]", ".", "unsqueeze", "(", "1", ")", "*", "z", "+", "T", "[", ":", ",", "2", ",", "2", "]", ".", "unsqueeze", "(", "1", ")", "*", "x", "\n", "d25", "=", "T", "[", ":", ",", "0", ",", "2", "]", ".", "unsqueeze", "(", "1", ")", "*", "y", "-", "T", "[", ":", ",", "1", ",", "2", "]", ".", "unsqueeze", "(", "1", ")", "*", "x", "\n", "\n", "d0", "=", "torch", ".", "cat", "(", "[", "d03", ".", "unsqueeze", "(", "-", "1", ")", ",", "d04", ".", "unsqueeze", "(", "-", "1", ")", ",", "d05", ".", "unsqueeze", "(", "-", "1", ")", "]", ",", "-", "1", ")", "# BxNx3", "\n", "d1", "=", "torch", ".", "cat", "(", "[", "d13", ".", "unsqueeze", "(", "-", "1", ")", ",", "d14", ".", "unsqueeze", "(", "-", "1", ")", ",", "d15", ".", "unsqueeze", "(", "-", "1", ")", "]", ",", "-", "1", ")", "\n", "d2", "=", "torch", ".", "cat", "(", "[", "d23", ".", "unsqueeze", "(", "-", "1", ")", ",", "d24", ".", "unsqueeze", "(", "-", "1", ")", ",", "d25", ".", "unsqueeze", "(", "-", "1", ")", "]", ",", "-", "1", ")", "\n", "warp_jac", "[", "...", ",", ":", "3", "]", "=", "torch", ".", "cat", "(", "[", "d0", ".", "unsqueeze", "(", "-", "2", ")", ",", "d1", ".", "unsqueeze", "(", "-", "2", ")", ",", "d2", ".", "unsqueeze", "(", "-", "2", ")", "]", ",", "-", "2", ")", "\n", "\n", "return", "warp_jac", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.cal_conditioned_warp_jacobian": [[355, 387], ["torch.eye().repeat().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "voxel_coords[].unsqueeze", "voxel_coords[].unsqueeze", "voxel_coords[].unsqueeze", "torch.cat().reshape", "torch.cat().reshape", "torch.cat().reshape", "torch.cat().reshape", "torch.inverse().float", "voxel_coords[].unsqueeze", "voxel_coords[].unsqueeze", "voxel_coords[].unsqueeze", "torch.eye().repeat", "torch.zeros", "torch.zeros", "torch.zeros", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.inverse", "torch.eye"], "function", ["None"], ["", "def", "cal_conditioned_warp_jacobian", "(", "voxel_coords", ")", ":", "\n", "# conditioned warp: see supplementary for detailed math.", "\n", "#               --                                        --  ^-1", "\n", "#               |   1  ,   0  ,   0  ,   0  ,   0  ,   0   |", "\n", "#               |   0  ,   1  ,   0  ,   0  ,   0  ,   0   |", "\n", "# xi_v / xi_g = |   0  ,   0  ,   1  ,   0  ,   0  ,   0   |", "\n", "#               |   0  , -xi_6,  xi_5,   1  ,   0  ,   0   |", "\n", "#               |  xi_6,   0  , -xi_4,   0  ,   1  ,   0   |", "\n", "#               | -xi_5,  xi_4,   0  ,   0  ,   0  ,   1   |", "\n", "#               --                                        --", "\n", "\n", "    ", "V", "=", "voxel_coords", ".", "shape", "[", "0", "]", "\n", "conditioned_jac", "=", "torch", ".", "eye", "(", "6", ")", ".", "repeat", "(", "V", ",", "1", ",", "1", ")", ".", "to", "(", "voxel_coords", ")", "# V x 6 x 6", "\n", "trans_twist_mat_00", "=", "torch", ".", "zeros", "(", "V", ",", "1", ")", ".", "to", "(", "voxel_coords", ")", "\n", "trans_twist_mat_11", "=", "torch", ".", "zeros", "(", "V", ",", "1", ")", ".", "to", "(", "voxel_coords", ")", "\n", "trans_twist_mat_22", "=", "torch", ".", "zeros", "(", "V", ",", "1", ")", ".", "to", "(", "voxel_coords", ")", "\n", "trans_twist_mat_01", "=", "-", "voxel_coords", "[", ":", ",", "2", "]", ".", "unsqueeze", "(", "1", ")", "\n", "trans_twist_mat_02", "=", "voxel_coords", "[", ":", ",", "1", "]", ".", "unsqueeze", "(", "1", ")", "\n", "trans_twist_mat_10", "=", "voxel_coords", "[", ":", ",", "2", "]", ".", "unsqueeze", "(", "1", ")", "\n", "trans_twist_mat_12", "=", "-", "voxel_coords", "[", ":", ",", "0", "]", ".", "unsqueeze", "(", "1", ")", "\n", "trans_twist_mat_20", "=", "-", "voxel_coords", "[", ":", ",", "1", "]", ".", "unsqueeze", "(", "1", ")", "\n", "trans_twist_mat_21", "=", "voxel_coords", "[", ":", ",", "0", "]", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "trans_twist_mat_0", "=", "torch", ".", "cat", "(", "[", "trans_twist_mat_00", ",", "trans_twist_mat_01", ",", "trans_twist_mat_02", "]", ",", "1", ")", ".", "reshape", "(", "-", "1", ",", "3", ")", "\n", "trans_twist_mat_1", "=", "torch", ".", "cat", "(", "[", "trans_twist_mat_10", ",", "trans_twist_mat_11", ",", "trans_twist_mat_12", "]", ",", "1", ")", ".", "reshape", "(", "-", "1", ",", "3", ")", "\n", "trans_twist_mat_2", "=", "torch", ".", "cat", "(", "[", "trans_twist_mat_20", ",", "trans_twist_mat_21", ",", "trans_twist_mat_22", "]", ",", "1", ")", ".", "reshape", "(", "-", "1", ",", "3", ")", "\n", "trans_twist_mat", "=", "torch", ".", "cat", "(", "[", "trans_twist_mat_0", ",", "trans_twist_mat_1", ",", "trans_twist_mat_2", "]", ",", "1", ")", ".", "reshape", "(", "-", "1", ",", "3", ",", "3", ")", "\n", "conditioned_jac", "[", ":", ",", "3", ":", ",", ":", "3", "]", "=", "trans_twist_mat", "# V x 6 x 6", "\n", "\n", "conditioned_jac", "=", "torch", ".", "inverse", "(", "conditioned_jac", ")", ".", "float", "(", ")", "\n", "\n", "return", "conditioned_jac", "\n", "\n"]], "home.repos.pwc.inspect_result.Lilac-Lee_PointNetLK_Revisited.None.utils.test_metrics": [[390, 462], ["numpy.concatenate().reshape", "numpy.concatenate().reshape", "numpy.concatenate().reshape", "numpy.concatenate().reshape", "numpy.sqrt", "numpy.sqrt", "numpy.zeros", "numpy.triu", "range", "print", "numpy.mean", "numpy.sqrt", "numpy.mean", "numpy.mean", "numpy.sqrt", "numpy.mean", "numpy.median", "numpy.sqrt", "numpy.median", "numpy.median", "numpy.sqrt", "numpy.median", "print", "print", "print", "print", "print", "print", "numpy.mean", "numpy.mean", "numpy.arange", "numpy.arange", "numpy.ones", "numpy.abs", "numpy.abs", "numpy.abs", "numpy.abs", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.degrees", "numpy.degrees", "numpy.degrees", "numpy.degrees", "numpy.degrees", "numpy.degrees", "numpy.degrees", "numpy.degrees", "numpy.degrees", "numpy.degrees"], "function", ["None"], ["", "def", "test_metrics", "(", "rotations_gt", ",", "translation_gt", ",", "rotations_ab", ",", "translation_ab", ",", "filename", ")", ":", "\n", "    ", "rotations_gt", "=", "np", ".", "concatenate", "(", "rotations_gt", ",", "axis", "=", "0", ")", ".", "reshape", "(", "-", "1", ",", "3", ")", "\n", "translation_gt", "=", "np", ".", "concatenate", "(", "translation_gt", ",", "axis", "=", "0", ")", ".", "reshape", "(", "-", "1", ",", "3", ")", "\n", "rotations_ab", "=", "np", ".", "concatenate", "(", "rotations_ab", ",", "axis", "=", "0", ")", ".", "reshape", "(", "-", "1", ",", "3", ")", "\n", "translation_ab", "=", "np", ".", "concatenate", "(", "translation_ab", ",", "axis", "=", "0", ")", ".", "reshape", "(", "-", "1", ",", "3", ")", "\n", "\n", "# root square error", "\n", "rot_err", "=", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "(", "np", ".", "degrees", "(", "rotations_ab", ")", "-", "np", ".", "degrees", "(", "rotations_gt", ")", ")", "**", "2", ",", "axis", "=", "1", ")", ")", "\n", "trans_err", "=", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "(", "translation_ab", "-", "translation_gt", ")", "**", "2", ",", "axis", "=", "1", ")", ")", "\n", "\n", "suc_tab", "=", "np", ".", "zeros", "(", "11", ")", "\n", "\n", "# set the criteria", "\n", "rot_err_tab", "=", "np", ".", "arange", "(", "11", ")", "*", "0.5", "\n", "trans_err_tab", "=", "np", ".", "arange", "(", "11", ")", "*", "0.05", "\n", "\n", "err_count_tab", "=", "np", ".", "triu", "(", "np", ".", "ones", "(", "(", "11", ",", "11", ")", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "rot_err", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "if", "rot_err", "[", "i", "]", "<=", "rot_err_tab", "[", "0", "]", "and", "trans_err", "[", "i", "]", "<=", "trans_err_tab", "[", "0", "]", ":", "\n", "            ", "suc_tab", "=", "suc_tab", "+", "err_count_tab", "[", "0", "]", "\n", "", "elif", "rot_err", "[", "i", "]", "<=", "rot_err_tab", "[", "1", "]", "and", "trans_err", "[", "i", "]", "<=", "trans_err_tab", "[", "1", "]", ":", "\n", "            ", "suc_tab", "=", "suc_tab", "+", "err_count_tab", "[", "1", "]", "\n", "", "elif", "rot_err", "[", "i", "]", "<=", "rot_err_tab", "[", "2", "]", "and", "trans_err", "[", "i", "]", "<=", "trans_err_tab", "[", "2", "]", ":", "\n", "            ", "suc_tab", "=", "suc_tab", "+", "err_count_tab", "[", "2", "]", "\n", "", "elif", "rot_err", "[", "i", "]", "<=", "rot_err_tab", "[", "3", "]", "and", "trans_err", "[", "i", "]", "<=", "trans_err_tab", "[", "3", "]", ":", "\n", "            ", "suc_tab", "=", "suc_tab", "+", "err_count_tab", "[", "3", "]", "\n", "", "elif", "rot_err", "[", "i", "]", "<=", "rot_err_tab", "[", "4", "]", "and", "trans_err", "[", "i", "]", "<=", "trans_err_tab", "[", "4", "]", ":", "\n", "            ", "suc_tab", "=", "suc_tab", "+", "err_count_tab", "[", "4", "]", "\n", "", "elif", "rot_err", "[", "i", "]", "<=", "rot_err_tab", "[", "5", "]", "and", "trans_err", "[", "i", "]", "<=", "trans_err_tab", "[", "5", "]", ":", "\n", "            ", "suc_tab", "=", "suc_tab", "+", "err_count_tab", "[", "5", "]", "\n", "", "elif", "rot_err", "[", "i", "]", "<=", "rot_err_tab", "[", "6", "]", "and", "trans_err", "[", "i", "]", "<=", "trans_err_tab", "[", "6", "]", ":", "\n", "            ", "suc_tab", "=", "suc_tab", "+", "err_count_tab", "[", "6", "]", "\n", "", "elif", "rot_err", "[", "i", "]", "<=", "rot_err_tab", "[", "7", "]", "and", "trans_err", "[", "i", "]", "<=", "trans_err_tab", "[", "7", "]", ":", "\n", "            ", "suc_tab", "=", "suc_tab", "+", "err_count_tab", "[", "7", "]", "\n", "", "elif", "rot_err", "[", "i", "]", "<=", "rot_err_tab", "[", "8", "]", "and", "trans_err", "[", "i", "]", "<=", "trans_err_tab", "[", "8", "]", ":", "\n", "            ", "suc_tab", "=", "suc_tab", "+", "err_count_tab", "[", "8", "]", "\n", "", "elif", "rot_err", "[", "i", "]", "<=", "rot_err_tab", "[", "9", "]", "and", "trans_err", "[", "i", "]", "<=", "trans_err_tab", "[", "9", "]", ":", "\n", "            ", "suc_tab", "=", "suc_tab", "+", "err_count_tab", "[", "9", "]", "\n", "", "elif", "rot_err", "[", "i", "]", "<=", "rot_err_tab", "[", "10", "]", "and", "trans_err", "[", "i", "]", "<=", "trans_err_tab", "[", "10", "]", ":", "\n", "            ", "suc_tab", "=", "suc_tab", "+", "err_count_tab", "[", "10", "]", "\n", "\n", "", "", "print", "(", "'success cases are {}'", ".", "format", "(", "suc_tab", ")", ")", "\n", "\n", "# 1. use mean error", "\n", "rot_mse_ab", "=", "np", ".", "mean", "(", "(", "np", ".", "degrees", "(", "rotations_ab", ")", "-", "np", ".", "degrees", "(", "rotations_gt", ")", ")", "**", "2", ")", "\n", "rot_rmse_ab", "=", "np", ".", "sqrt", "(", "rot_mse_ab", ")", "\n", "rot_mae_ab", "=", "np", ".", "mean", "(", "np", ".", "abs", "(", "np", ".", "degrees", "(", "rotations_ab", ")", "-", "np", ".", "degrees", "(", "rotations_gt", ")", ")", ")", "\n", "\n", "trans_mse_ab", "=", "np", ".", "mean", "(", "(", "translation_ab", "-", "translation_gt", ")", "**", "2", ")", "\n", "trans_rmse_ab", "=", "np", ".", "sqrt", "(", "trans_mse_ab", ")", "\n", "trans_mae_ab", "=", "np", ".", "mean", "(", "np", ".", "abs", "(", "translation_ab", "-", "translation_gt", ")", ")", "\n", "\n", "# 2. use median error", "\n", "rot_mse_ab_02", "=", "np", ".", "median", "(", "(", "np", ".", "degrees", "(", "rotations_ab", ")", "-", "np", ".", "degrees", "(", "rotations_gt", ")", ")", "**", "2", ")", "\n", "rot_rmse_ab_02", "=", "np", ".", "sqrt", "(", "rot_mse_ab_02", ")", "\n", "rot_mae_ab_02", "=", "np", ".", "median", "(", "np", ".", "abs", "(", "np", ".", "degrees", "(", "rotations_ab", ")", "-", "np", ".", "degrees", "(", "rotations_gt", ")", ")", ")", "\n", "\n", "trans_mse_ab_02", "=", "np", ".", "median", "(", "(", "translation_ab", "-", "translation_gt", ")", "**", "2", ")", "\n", "trans_rmse_ab_02", "=", "np", ".", "sqrt", "(", "trans_mse_ab_02", ")", "\n", "trans_mae_ab_02", "=", "np", ".", "median", "(", "np", ".", "abs", "(", "translation_ab", "-", "translation_gt", ")", ")", "\n", "\n", "print", "(", "'Source to Template:'", ")", "\n", "print", "(", "filename", ")", "\n", "print", "(", "'********************mean********************'", ")", "\n", "print", "(", "'rot_MSE: {}, rot_RMSE: {}, rot_MAE: {}, trans_MSE: {}, trans_RMSE: {}, trans_MAE: {}'", ".", "format", "(", "rot_mse_ab", ",", "\n", "rot_rmse_ab", ",", "rot_mae_ab", ",", "trans_mse_ab", ",", "trans_rmse_ab", ",", "trans_mae_ab", ")", ")", "\n", "print", "(", "'********************median********************'", ")", "\n", "print", "(", "'rot_MSE: {}, rot_RMSE: {}, rot_MAE: {}, trans_MSE: {}, trans_RMSE: {}, trans_MAE: {}'", ".", "format", "(", "rot_mse_ab_02", ",", "\n", "rot_rmse_ab_02", ",", "rot_mae_ab_02", ",", "trans_mse_ab_02", ",", "trans_rmse_ab_02", ",", "trans_mae_ab_02", ")", ")", "\n", "\n", "return", "\n", "\n"]]}