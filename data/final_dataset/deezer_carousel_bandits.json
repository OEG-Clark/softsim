{"home.repos.pwc.inspect_result.deezer_carousel_bandits.None.online_logistic_regression.OnlineLogisticRegression.__init__": [[13, 27], ["numpy.zeros", "numpy.random.normal", "numpy.ones"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "lambda_", ",", "alpha", ",", "n_dim", ",", "bias", ",", "maxiter", "=", "15", ")", ":", "\n", "\n", "# Hyperparameter: deviation on the prior (L2 regularizer)", "\n", "        ", "self", ".", "lambda_", "=", "lambda_", ";", "self", ".", "alpha", "=", "alpha", ";", "self", ".", "maxiter", "=", "maxiter", "\n", "\n", "# Initializing parameters of the model", "\n", "self", ".", "n_dim", "=", "n_dim", "\n", "# m: mean of the Bi, q inverse variance of the distribution", "\n", "self", ".", "m", "=", "np", ".", "zeros", "(", "self", ".", "n_dim", ")", "\n", "self", ".", "m", "[", "-", "1", "]", "=", "bias", "\n", "self", ".", "q", "=", "np", ".", "ones", "(", "self", ".", "n_dim", ")", "*", "self", ".", "lambda_", "\n", "\n", "# Initializing weights", "\n", "self", ".", "w", "=", "np", ".", "random", ".", "normal", "(", "self", ".", "m", ",", "self", ".", "alpha", "*", "(", "self", ".", "q", ")", "**", "(", "-", "1.0", ")", ",", "size", "=", "self", ".", "n_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.deezer_carousel_bandits.None.online_logistic_regression.OnlineLogisticRegression.loss": [[29, 33], ["numpy.sum", "numpy.log", "range", "numpy.exp", "w.dot"], "methods", ["None"], ["", "def", "loss", "(", "self", ",", "w", ",", "*", "args", ")", ":", "\n", "        ", "X", ",", "y", "=", "args", "\n", "# Note: the bias is removed from the \"regularization term\" of the loss", "\n", "return", "0.5", "*", "(", "self", ".", "q", "[", ":", "-", "1", "]", "*", "(", "w", "[", ":", "-", "1", "]", "-", "self", ".", "m", "[", ":", "-", "1", "]", ")", ")", ".", "dot", "(", "w", "[", ":", "-", "1", "]", "-", "self", ".", "m", "[", ":", "-", "1", "]", ")", "+", "np", ".", "sum", "(", "[", "np", ".", "log", "(", "1", "+", "np", ".", "exp", "(", "-", "y", "[", "j", "]", "*", "w", ".", "dot", "(", "X", "[", "j", "]", ")", ")", ")", "for", "j", "in", "range", "(", "y", ".", "shape", "[", "0", "]", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.deezer_carousel_bandits.None.online_logistic_regression.OnlineLogisticRegression.grad": [[35, 38], ["numpy.concatenate", "numpy.array().sum", "numpy.array", "range", "numpy.exp", "w.dot"], "methods", ["None"], ["", "def", "grad", "(", "self", ",", "w", ",", "*", "args", ")", ":", "\n", "        ", "X", ",", "y", "=", "args", "\n", "return", "np", ".", "concatenate", "(", "(", "self", ".", "q", "[", ":", "-", "1", "]", "*", "(", "w", "[", ":", "-", "1", "]", "-", "self", ".", "m", "[", ":", "-", "1", "]", ")", ",", "0.0", ")", ",", "axis", "=", "None", ")", "+", "(", "-", "1", ")", "*", "np", ".", "array", "(", "[", "y", "[", "j", "]", "*", "X", "[", "j", "]", "/", "(", "1.", "+", "np", ".", "exp", "(", "y", "[", "j", "]", "*", "w", ".", "dot", "(", "X", "[", "j", "]", ")", ")", ")", "for", "j", "in", "range", "(", "y", ".", "shape", "[", "0", "]", ")", "]", ")", ".", "sum", "(", "axis", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.deezer_carousel_bandits.None.online_logistic_regression.OnlineLogisticRegression.fit": [[40, 49], ["scipy.optimize.minimize", "numpy.exp", "X.dot"], "methods", ["None"], ["", "def", "fit", "(", "self", ",", "X", ",", "y", ")", ":", "\n", "\n", "# Step 1, find w", "\n", "        ", "self", ".", "w", "=", "minimize", "(", "self", ".", "loss", ",", "self", ".", "w", ",", "args", "=", "(", "X", ",", "y", ")", ",", "jac", "=", "self", ".", "grad", ",", "method", "=", "\"L-BFGS-B\"", ",", "options", "=", "{", "'maxiter'", ":", "self", ".", "maxiter", "}", ")", ".", "x", "\n", "self", ".", "m", "=", "self", ".", "w", "\n", "\n", "# Step 2, update q", "\n", "P", "=", "(", "1", "+", "np", ".", "exp", "(", "1", "-", "X", ".", "dot", "(", "self", ".", "m", ")", ")", ")", "**", "(", "-", "1", ")", "\n", "self", ".", "q", "=", "self", ".", "q", "+", "(", "P", "*", "(", "1", "-", "P", ")", ")", ".", "dot", "(", "X", "**", "2", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.deezer_carousel_bandits.None.policies.Policy.recommend_to_users_batch": [[35, 37], ["None"], "methods", ["None"], ["    ", "def", "recommend_to_users_batch", "(", "self", ",", "batch_users", ",", "n_recos", "=", "12", ")", ":", "\n", "        ", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.deezer_carousel_bandits.None.policies.Policy.update_policy": [[39, 41], ["None"], "methods", ["None"], ["", "def", "update_policy", "(", "self", ",", "user_ids", ",", "recos", ",", "rewards", ")", ":", "\n", "        ", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.deezer_carousel_bandits.None.policies.RandomPolicy.__init__": [[45, 48], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "n_playlists", ",", "cascade_model", "=", "True", ")", ":", "\n", "        ", "self", ".", "cascade_model", "=", "cascade_model", "\n", "self", ".", "n_playlists", "=", "n_playlists", "\n", "\n"]], "home.repos.pwc.inspect_result.deezer_carousel_bandits.None.policies.RandomPolicy.recommend_to_users_batch": [[49, 57], ["len", "numpy.zeros", "numpy.arange", "range", "numpy.random.shuffle"], "methods", ["None"], ["", "def", "recommend_to_users_batch", "(", "self", ",", "batch_users", ",", "n_recos", "=", "12", ",", "l_init", "=", "3", ")", ":", "\n", "        ", "n_users", "=", "len", "(", "batch_users", ")", "\n", "recos", "=", "np", ".", "zeros", "(", "(", "n_users", ",", "n_recos", ")", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "r", "=", "np", ".", "arange", "(", "self", ".", "n_playlists", ")", "\n", "for", "i", "in", "range", "(", "n_users", ")", ":", "\n", "            ", "np", ".", "random", ".", "shuffle", "(", "r", ")", "\n", "recos", "[", "i", "]", "=", "r", "[", ":", "n_recos", "]", "\n", "", "return", "recos", "\n", "\n"]], "home.repos.pwc.inspect_result.deezer_carousel_bandits.None.policies.RandomPolicy.update_policy": [[58, 60], ["None"], "methods", ["None"], ["", "def", "update_policy", "(", "self", ",", "user_ids", ",", "recos", ",", "rewards", ",", "l_init", "=", "3", ")", ":", "\n", "        ", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.deezer_carousel_bandits.None.policies.KLUCBSegmentPolicy.__init__": [[64, 74], ["len", "numpy.zeros", "numpy.zeros", "numpy.ones", "numpy.unique"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "user_segment", ",", "n_playlists", ",", "precision", "=", "1e-6", ",", "eps", "=", "1e-15", ",", "cascade_model", "=", "True", ")", ":", "\n", "        ", "self", ".", "user_segment", "=", "user_segment", "\n", "n_segments", "=", "len", "(", "np", ".", "unique", "(", "self", ".", "user_segment", ")", ")", "\n", "self", ".", "playlist_display", "=", "np", ".", "zeros", "(", "(", "n_segments", ",", "n_playlists", ")", ")", "\n", "self", ".", "playlist_success", "=", "np", ".", "zeros", "(", "(", "n_segments", ",", "n_playlists", ")", ")", "\n", "self", ".", "playlist_score", "=", "np", ".", "ones", "(", "(", "n_segments", ",", "n_playlists", ")", ")", "\n", "self", ".", "t", "=", "0", "\n", "self", ".", "cascade_model", "=", "cascade_model", "\n", "self", ".", "precision", "=", "precision", "\n", "self", ".", "eps", "=", "eps", "\n", "\n"]], "home.repos.pwc.inspect_result.deezer_carousel_bandits.None.policies.KLUCBSegmentPolicy.recommend_to_users_batch": [[75, 84], ["numpy.take", "numpy.take", "numpy.random.random", "numpy.random.shuffle", "numpy.lexsort"], "methods", ["None"], ["", "def", "recommend_to_users_batch", "(", "self", ",", "batch_users", ",", "n_recos", "=", "12", ",", "l_init", "=", "3", ")", ":", "\n", "        ", "user_segment", "=", "np", ".", "take", "(", "self", ".", "user_segment", ",", "batch_users", ")", "\n", "user_score", "=", "np", ".", "take", "(", "self", ".", "playlist_score", ",", "user_segment", ",", "axis", "=", "0", ")", "\n", "# Break ties", "\n", "user_random_score", "=", "np", ".", "random", ".", "random", "(", "user_score", ".", "shape", ")", "\n", "user_choice", "=", "np", ".", "lexsort", "(", "(", "user_random_score", ",", "-", "user_score", ")", ")", "[", ":", ",", ":", "n_recos", "]", "\n", "# Shuffle l_init first slots", "\n", "np", ".", "random", ".", "shuffle", "(", "user_choice", "[", "0", ":", "l_init", "]", ")", "\n", "return", "user_choice", "\n", "\n"]], "home.repos.pwc.inspect_result.deezer_carousel_bandits.None.policies.KLUCBSegmentPolicy.kl": [[85, 89], ["min", "min", "max", "max", "math.log", "math.log"], "methods", ["None"], ["", "def", "kl", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "x", "=", "min", "(", "max", "(", "x", ",", "self", ".", "eps", ")", ",", "1", "-", "self", ".", "eps", ")", "\n", "y", "=", "min", "(", "max", "(", "y", ",", "self", ".", "eps", ")", ",", "1", "-", "self", ".", "eps", ")", "\n", "return", "x", "*", "log", "(", "x", "/", "y", ")", "+", "(", "1", "-", "x", ")", "*", "log", "(", "(", "1", "-", "x", ")", "/", "(", "1", "-", "y", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.deezer_carousel_bandits.None.policies.KLUCBSegmentPolicy.scoring_function": [[90, 106], ["math.log", "policies.KLUCBSegmentPolicy.kl"], "methods", ["home.repos.pwc.inspect_result.deezer_carousel_bandits.None.policies.KLUCBSegmentPolicy.kl"], ["", "def", "scoring_function", "(", "self", ",", "n_success", ",", "n", ",", "t", ")", ":", "\n", "        ", "if", "n", "==", "0", ":", "\n", "            ", "return", "1.0", "\n", "", "p", "=", "n_success", "/", "n", "\n", "value", "=", "p", "\n", "u", "=", "1", "\n", "threshold", "=", "log", "(", "t", ")", "/", "n", "\n", "_count_iteration", "=", "0", "\n", "while", "_count_iteration", "<", "50", "and", "u", "-", "value", ">", "self", ".", "precision", ":", "\n", "            ", "_count_iteration", "+=", "1", "\n", "m", "=", "(", "value", "+", "u", ")", "*", "0.5", "\n", "if", "self", ".", "kl", "(", "p", ",", "m", ")", ">", "threshold", ":", "\n", "                ", "u", "=", "m", "\n", "", "else", ":", "\n", "                ", "value", "=", "m", "\n", "", "", "return", "(", "value", "+", "u", ")", "*", "0.5", "\n", "\n"]], "home.repos.pwc.inspect_result.deezer_carousel_bandits.None.policies.KLUCBSegmentPolicy.update_policy": [[107, 126], ["len", "collections.defaultdict", "range", "policies.KLUCBSegmentPolicy.playlist_display.sum", "collections.defaultdict.items", "len", "zip", "rewards[].nonzero", "modified_data[].add", "policies.KLUCBSegmentPolicy.scoring_function"], "methods", ["home.repos.pwc.inspect_result.deezer_carousel_bandits.None.policies.KLUCBSegmentPolicy.scoring_function"], ["", "def", "update_policy", "(", "self", ",", "user_ids", ",", "recos", ",", "rewards", ",", "l_init", "=", "3", ")", ":", "\n", "        ", "batch_size", "=", "len", "(", "user_ids", ")", "\n", "modified_data", "=", "defaultdict", "(", "set", ")", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "user_segment", "=", "self", ".", "user_segment", "[", "user_ids", "[", "i", "]", "]", "\n", "total_stream", "=", "len", "(", "rewards", "[", "i", "]", ".", "nonzero", "(", ")", ")", "\n", "nb_display", "=", "0", "\n", "for", "p", ",", "r", "in", "zip", "(", "recos", "[", "i", "]", ",", "rewards", "[", "i", "]", ")", ":", "\n", "                ", "nb_display", "+=", "1", "\n", "modified_data", "[", "user_segment", "]", ".", "add", "(", "p", ")", "\n", "self", ".", "playlist_success", "[", "user_segment", "]", "[", "p", "]", "+=", "r", "\n", "self", ".", "playlist_display", "[", "user_segment", "]", "[", "p", "]", "+=", "1", "\n", "if", "self", ".", "cascade_model", "and", "(", "(", "total_stream", "==", "0", "and", "nb_display", "==", "l_init", ")", "or", "(", "r", "==", "1", ")", ")", ":", "\n", "                    ", "break", "\n", "", "", "", "self", ".", "t", "=", "self", ".", "playlist_display", ".", "sum", "(", ")", "\n", "for", "seg", ",", "pls", "in", "modified_data", ".", "items", "(", ")", ":", "\n", "            ", "for", "pl", "in", "pls", ":", "\n", "                ", "self", ".", "playlist_score", "[", "seg", "]", "[", "pl", "]", "=", "self", ".", "scoring_function", "(", "self", ".", "playlist_success", "[", "seg", "]", "[", "pl", "]", ",", "self", ".", "playlist_display", "[", "seg", "]", "[", "pl", "]", ",", "self", ".", "t", ")", "\n", "", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.deezer_carousel_bandits.None.policies.ExploreThenCommitSegmentPolicy.__init__": [[131, 138], ["len", "numpy.zeros", "numpy.zeros", "numpy.unique"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "user_segment", ",", "n_playlists", ",", "min_n", ",", "cascade_model", "=", "True", ")", ":", "\n", "        ", "self", ".", "user_segment", "=", "user_segment", "\n", "n_segments", "=", "len", "(", "np", ".", "unique", "(", "self", ".", "user_segment", ")", ")", "\n", "self", ".", "playlist_display", "=", "np", ".", "zeros", "(", "(", "n_segments", ",", "n_playlists", ")", ")", "\n", "self", ".", "playlist_success", "=", "np", ".", "zeros", "(", "(", "n_segments", ",", "n_playlists", ")", ")", "\n", "self", ".", "min_n", "=", "min_n", "\n", "self", ".", "cascade_model", "=", "cascade_model", "\n", "\n"]], "home.repos.pwc.inspect_result.deezer_carousel_bandits.None.policies.ExploreThenCommitSegmentPolicy.recommend_to_users_batch": [[139, 150], ["numpy.take", "numpy.take", "numpy.take().astype", "numpy.random.random", "numpy.divide", "numpy.maximum", "numpy.random.shuffle", "numpy.zeros_like", "numpy.lexsort", "numpy.take", "numpy.zeros_like"], "methods", ["None"], ["", "def", "recommend_to_users_batch", "(", "self", ",", "batch_users", ",", "n_recos", "=", "12", ",", "l_init", "=", "3", ")", ":", "\n", "        ", "user_segment", "=", "np", ".", "take", "(", "self", ".", "user_segment", ",", "batch_users", ")", "\n", "user_success", "=", "np", ".", "take", "(", "self", ".", "playlist_success", ",", "user_segment", ",", "axis", "=", "0", ")", "\n", "user_displays", "=", "np", ".", "take", "(", "self", ".", "playlist_display", ",", "user_segment", ",", "axis", "=", "0", ")", ".", "astype", "(", "float", ")", "\n", "user_random_score", "=", "np", ".", "random", ".", "random", "(", "user_displays", ".", "shape", ")", "\n", "user_score", "=", "np", ".", "divide", "(", "user_success", ",", "user_displays", ",", "out", "=", "np", ".", "zeros_like", "(", "user_displays", ")", ",", "where", "=", "user_displays", "!=", "0", ")", "\n", "discounted_displays", "=", "np", ".", "maximum", "(", "np", ".", "zeros_like", "(", "user_displays", ")", ",", "self", ".", "min_n", "-", "user_displays", ")", "\n", "user_choice", "=", "np", ".", "lexsort", "(", "(", "user_random_score", ",", "-", "user_score", ",", "-", "discounted_displays", ")", ")", "[", ":", ",", ":", "n_recos", "]", "\n", "# Shuffle l_init first slots", "\n", "np", ".", "random", ".", "shuffle", "(", "user_choice", "[", "0", ":", "l_init", "]", ")", "\n", "return", "user_choice", "\n", "\n"]], "home.repos.pwc.inspect_result.deezer_carousel_bandits.None.policies.ExploreThenCommitSegmentPolicy.update_policy": [[151, 164], ["len", "range", "len", "zip", "rewards[].nonzero"], "methods", ["None"], ["", "def", "update_policy", "(", "self", ",", "user_ids", ",", "recos", ",", "rewards", ",", "l_init", "=", "3", ")", ":", "\n", "        ", "batch_size", "=", "len", "(", "user_ids", ")", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "user_segment", "=", "self", ".", "user_segment", "[", "user_ids", "[", "i", "]", "]", "\n", "total_stream", "=", "len", "(", "rewards", "[", "i", "]", ".", "nonzero", "(", ")", ")", "\n", "nb_display", "=", "0", "\n", "for", "p", ",", "r", "in", "zip", "(", "recos", "[", "i", "]", ",", "rewards", "[", "i", "]", ")", ":", "\n", "                ", "nb_display", "+=", "1", "\n", "self", ".", "playlist_success", "[", "user_segment", "]", "[", "p", "]", "+=", "r", "\n", "self", ".", "playlist_display", "[", "user_segment", "]", "[", "p", "]", "+=", "1", "\n", "if", "self", ".", "cascade_model", "and", "(", "(", "total_stream", "==", "0", "and", "nb_display", "==", "l_init", ")", "or", "(", "r", "==", "1", ")", ")", ":", "\n", "                    ", "break", "\n", "", "", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.deezer_carousel_bandits.None.policies.EpsilonGreedySegmentPolicy.__init__": [[169, 177], ["len", "numpy.zeros", "numpy.zeros", "numpy.ones", "numpy.unique"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "user_segment", ",", "n_playlists", ",", "epsilon", ",", "cascade_model", "=", "True", ")", ":", "\n", "        ", "self", ".", "user_segment", "=", "user_segment", "\n", "n_segments", "=", "len", "(", "np", ".", "unique", "(", "self", ".", "user_segment", ")", ")", "\n", "self", ".", "playlist_display", "=", "np", ".", "zeros", "(", "(", "n_segments", ",", "n_playlists", ")", ")", "\n", "self", ".", "playlist_success", "=", "np", ".", "zeros", "(", "(", "n_segments", ",", "n_playlists", ")", ")", "\n", "self", ".", "playlist_score", "=", "np", ".", "ones", "(", "(", "n_segments", ",", "n_playlists", ")", ")", "\n", "self", ".", "epsilon", "=", "epsilon", "\n", "self", ".", "cascade_model", "=", "cascade_model", "\n", "\n"]], "home.repos.pwc.inspect_result.deezer_carousel_bandits.None.policies.EpsilonGreedySegmentPolicy.recommend_to_users_batch": [[178, 189], ["numpy.take", "numpy.take", "numpy.random.random", "len", "numpy.random.binomial", "numpy.random.shuffle", "numpy.lexsort", "range"], "methods", ["None"], ["", "def", "recommend_to_users_batch", "(", "self", ",", "batch_users", ",", "n_recos", "=", "12", ",", "l_init", "=", "3", ")", ":", "\n", "        ", "user_segment", "=", "np", ".", "take", "(", "self", ".", "user_segment", ",", "batch_users", ")", "\n", "user_scores", "=", "np", ".", "take", "(", "self", ".", "playlist_score", ",", "user_segment", ",", "axis", "=", "0", ")", "\n", "user_random_score", "=", "np", ".", "random", ".", "random", "(", "user_scores", ".", "shape", ")", "\n", "n_users", "=", "len", "(", "batch_users", ")", "\n", "user_greedy", "=", "np", ".", "random", ".", "binomial", "(", "1", ",", "[", "1", "-", "self", ".", "epsilon", "for", "i", "in", "range", "(", "n_users", ")", "]", ")", "\n", "new_scores", "=", "user_scores", "*", "user_greedy", "[", ":", ",", "np", ".", "newaxis", "]", "\n", "user_choice", "=", "np", ".", "lexsort", "(", "(", "user_random_score", ",", "-", "new_scores", ")", ")", "[", ":", ",", ":", "n_recos", "]", "\n", "# Shuffle l_init first slots", "\n", "np", ".", "random", ".", "shuffle", "(", "user_choice", "[", "0", ":", "l_init", "]", ")", "\n", "return", "user_choice", "\n", "\n"]], "home.repos.pwc.inspect_result.deezer_carousel_bandits.None.policies.EpsilonGreedySegmentPolicy.update_policy": [[190, 204], ["len", "range", "len", "zip", "rewards[].nonzero"], "methods", ["None"], ["", "def", "update_policy", "(", "self", ",", "user_ids", ",", "recos", ",", "rewards", ",", "l_init", "=", "3", ")", ":", "\n", "        ", "batch_size", "=", "len", "(", "user_ids", ")", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "user_segment", "=", "self", ".", "user_segment", "[", "user_ids", "[", "i", "]", "]", "\n", "total_stream", "=", "len", "(", "rewards", "[", "i", "]", ".", "nonzero", "(", ")", ")", "\n", "nb_display", "=", "0", "\n", "for", "p", ",", "r", "in", "zip", "(", "recos", "[", "i", "]", ",", "rewards", "[", "i", "]", ")", ":", "\n", "                ", "nb_display", "+=", "1", "\n", "self", ".", "playlist_success", "[", "user_segment", "]", "[", "p", "]", "+=", "r", "\n", "self", ".", "playlist_display", "[", "user_segment", "]", "[", "p", "]", "+=", "1", "\n", "self", ".", "playlist_score", "[", "user_segment", "]", "[", "p", "]", "=", "self", ".", "playlist_success", "[", "user_segment", "]", "[", "p", "]", "/", "self", ".", "playlist_display", "[", "user_segment", "]", "[", "p", "]", "\n", "if", "self", ".", "cascade_model", "and", "(", "(", "total_stream", "==", "0", "and", "nb_display", "==", "l_init", ")", "or", "(", "r", "==", "1", ")", ")", ":", "\n", "                    ", "break", "\n", "", "", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.deezer_carousel_bandits.None.policies.TSSegmentPolicy.__init__": [[208, 217], ["len", "numpy.zeros", "numpy.zeros", "numpy.unique"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "user_segment", ",", "n_playlists", ",", "alpha_zero", "=", "1", ",", "beta_zero", "=", "99", ",", "cascade_model", "=", "True", ")", ":", "\n", "        ", "self", ".", "user_segment", "=", "user_segment", "\n", "n_segments", "=", "len", "(", "np", ".", "unique", "(", "self", ".", "user_segment", ")", ")", "\n", "self", ".", "playlist_display", "=", "np", ".", "zeros", "(", "(", "n_segments", ",", "n_playlists", ")", ")", "\n", "self", ".", "playlist_success", "=", "np", ".", "zeros", "(", "(", "n_segments", ",", "n_playlists", ")", ")", "\n", "self", ".", "alpha_zero", "=", "alpha_zero", "\n", "self", ".", "beta_zero", "=", "beta_zero", "\n", "self", ".", "t", "=", "0", "\n", "self", ".", "cascade_model", "=", "cascade_model", "\n", "\n"]], "home.repos.pwc.inspect_result.deezer_carousel_bandits.None.policies.TSSegmentPolicy.recommend_to_users_batch": [[218, 227], ["numpy.take", "numpy.take().astype", "numpy.take", "numpy.random.beta", "numpy.random.shuffle", "numpy.argsort", "numpy.take"], "methods", ["None"], ["", "def", "recommend_to_users_batch", "(", "self", ",", "batch_users", ",", "n_recos", "=", "12", ",", "l_init", "=", "3", ")", ":", "\n", "        ", "user_segment", "=", "np", ".", "take", "(", "self", ".", "user_segment", ",", "batch_users", ")", "\n", "user_displays", "=", "np", ".", "take", "(", "self", ".", "playlist_display", ",", "user_segment", ",", "axis", "=", "0", ")", ".", "astype", "(", "float", ")", "\n", "user_success", "=", "np", ".", "take", "(", "self", ".", "playlist_success", ",", "user_segment", ",", "axis", "=", "0", ")", "\n", "user_score", "=", "np", ".", "random", ".", "beta", "(", "self", ".", "alpha_zero", "+", "user_success", ",", "self", ".", "beta_zero", "+", "user_displays", "-", "user_success", ")", "\n", "user_choice", "=", "np", ".", "argsort", "(", "-", "user_score", ")", "[", ":", ",", ":", "n_recos", "]", "\n", "# Shuffle l_init first slots", "\n", "np", ".", "random", ".", "shuffle", "(", "user_choice", "[", "0", ":", "l_init", "]", ")", "\n", "return", "user_choice", "\n", "\n"]], "home.repos.pwc.inspect_result.deezer_carousel_bandits.None.policies.TSSegmentPolicy.update_policy": [[228, 241], ["len", "range", "len", "zip", "rewards[].nonzero"], "methods", ["None"], ["", "def", "update_policy", "(", "self", ",", "user_ids", ",", "recos", ",", "rewards", ",", "l_init", "=", "3", ")", ":", "\n", "        ", "batch_size", "=", "len", "(", "user_ids", ")", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "user_segment", "=", "self", ".", "user_segment", "[", "user_ids", "[", "i", "]", "]", "\n", "total_stream", "=", "len", "(", "rewards", "[", "i", "]", ".", "nonzero", "(", ")", ")", "\n", "nb_display", "=", "0", "\n", "for", "p", ",", "r", "in", "zip", "(", "recos", "[", "i", "]", ",", "rewards", "[", "i", "]", ")", ":", "\n", "                ", "nb_display", "+=", "1", "\n", "self", ".", "playlist_success", "[", "user_segment", "]", "[", "p", "]", "+=", "r", "\n", "self", ".", "playlist_display", "[", "user_segment", "]", "[", "p", "]", "+=", "1", "\n", "if", "self", ".", "cascade_model", "and", "(", "(", "total_stream", "==", "0", "and", "nb_display", "==", "l_init", ")", "or", "(", "r", "==", "1", ")", ")", ":", "\n", "                    ", "break", "\n", "", "", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.deezer_carousel_bandits.None.policies.LinearTSPolicy.__init__": [[245, 255], ["numpy.zeros", "numpy.ones", "online_logistic_regression.OnlineLogisticRegression", "range"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "user_features", ",", "n_playlists", ",", "bias", "=", "0.0", ",", "cascade_model", "=", "True", ")", ":", "\n", "        ", "self", ".", "user_features", "=", "user_features", "\n", "n_dim", "=", "user_features", ".", "shape", "[", "1", "]", "\n", "self", ".", "n_playlists", "=", "n_playlists", "\n", "self", ".", "models", "=", "[", "OnlineLogisticRegression", "(", "1", ",", "1", ",", "n_dim", ",", "bias", ",", "15", ")", "for", "i", "in", "range", "(", "n_playlists", ")", "]", "\n", "self", ".", "m", "=", "np", ".", "zeros", "(", "(", "n_playlists", ",", "n_dim", ")", ")", "\n", "self", ".", "m", "[", ":", ",", "-", "1", "]", "=", "bias", "\n", "self", ".", "q", "=", "np", ".", "ones", "(", "(", "n_playlists", ",", "n_dim", ")", ")", "\n", "self", ".", "n_dim", "=", "n_dim", "\n", "self", ".", "cascade_model", "=", "cascade_model", "\n", "\n"]], "home.repos.pwc.inspect_result.deezer_carousel_bandits.None.policies.LinearTSPolicy.recommend_to_users_batch": [[256, 272], ["numpy.take", "len", "numpy.zeros", "numpy.random.shuffle", "min", "numpy.random.normal", "numpy.random.normal.dot", "range", "numpy.sqrt", "numpy.argsort"], "methods", ["None"], ["", "def", "recommend_to_users_batch", "(", "self", ",", "batch_users", ",", "n_recos", "=", "12", ",", "l_init", "=", "3", ")", ":", "\n", "        ", "user_features", "=", "np", ".", "take", "(", "self", ".", "user_features", ",", "batch_users", ",", "axis", "=", "0", ")", "\n", "n_users", "=", "len", "(", "batch_users", ")", "\n", "recos", "=", "np", ".", "zeros", "(", "(", "n_users", ",", "n_recos", ")", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "step", "=", "1", "\n", "u", "=", "0", "\n", "while", "u", "<", "n_users", ":", "\n", "            ", "u_next", "=", "min", "(", "n_users", ",", "u", "+", "step", ")", "\n", "p_features_sampled", "=", "(", "np", ".", "random", ".", "normal", "(", "self", ".", "m", ",", "1", "/", "np", ".", "sqrt", "(", "self", ".", "q", ")", ",", "size", "=", "(", "u_next", "-", "u", ",", "self", ".", "n_playlists", ",", "self", ".", "n_dim", ")", ")", ")", "\n", "step_p", "=", "p_features_sampled", ".", "dot", "(", "user_features", "[", "u", ":", "u_next", "]", ".", "T", ")", "\n", "for", "i", "in", "range", "(", "u_next", "-", "u", ")", ":", "\n", "                ", "recos", "[", "u", "+", "i", "]", "=", "np", ".", "argsort", "(", "(", "-", "step_p", "[", "i", ",", ":", ",", "i", "]", ")", ")", "[", ":", "n_recos", "]", "\n", "", "u", "+=", "step", "\n", "# Shuffle l_init first slots", "\n", "", "np", ".", "random", ".", "shuffle", "(", "recos", "[", "0", ":", "l_init", "]", ")", "\n", "return", "recos", "\n", "\n"]], "home.repos.pwc.inspect_result.deezer_carousel_bandits.None.policies.LinearTSPolicy.update_policy": [[273, 295], ["len", "range", "modified_playlists.items", "len", "zip", "numpy.array", "numpy.array", "policies.LinearTSPolicy.models[].fit", "rewards[].nonzero", "[].append", "[].append"], "methods", ["home.repos.pwc.inspect_result.deezer_carousel_bandits.None.online_logistic_regression.OnlineLogisticRegression.fit"], ["", "def", "update_policy", "(", "self", ",", "user_ids", ",", "recos", ",", "rewards", ",", "l_init", "=", "3", ")", ":", "\n", "        ", "rewards", "=", "2", "*", "rewards", "-", "1", "\n", "batch_size", "=", "len", "(", "user_ids", ")", "\n", "modified_playlists", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "total_stream", "=", "len", "(", "rewards", "[", "i", "]", ".", "nonzero", "(", ")", ")", "\n", "nb_display", "=", "0", "\n", "for", "p", ",", "r", "in", "zip", "(", "recos", "[", "i", "]", ",", "rewards", "[", "i", "]", ")", ":", "\n", "                ", "nb_display", "+=", "1", "\n", "if", "p", "not", "in", "modified_playlists", ":", "\n", "                    ", "modified_playlists", "[", "p", "]", "=", "{", "\"X\"", ":", "[", "]", ",", "\"Y\"", ":", "[", "]", "}", "\n", "", "modified_playlists", "[", "p", "]", "[", "\"X\"", "]", ".", "append", "(", "self", ".", "user_features", "[", "user_ids", "[", "i", "]", "]", ")", "\n", "modified_playlists", "[", "p", "]", "[", "\"Y\"", "]", ".", "append", "(", "r", ")", "\n", "if", "self", ".", "cascade_model", "and", "(", "(", "total_stream", "==", "0", "and", "nb_display", "==", "l_init", ")", "or", "(", "r", "==", "1", ")", ")", ":", "\n", "                    ", "break", "\n", "", "", "", "for", "p", ",", "v", "in", "modified_playlists", ".", "items", "(", ")", ":", "\n", "            ", "X", "=", "np", ".", "array", "(", "v", "[", "\"X\"", "]", ")", "\n", "Y", "=", "np", ".", "array", "(", "v", "[", "\"Y\"", "]", ")", "\n", "self", ".", "models", "[", "p", "]", ".", "fit", "(", "X", ",", "Y", ")", "\n", "self", ".", "m", "[", "p", "]", "=", "self", ".", "models", "[", "p", "]", ".", "m", "\n", "self", ".", "q", "[", "p", "]", "=", "self", ".", "models", "[", "p", "]", ".", "q", "\n", "", "return", "", "", "", ""]], "home.repos.pwc.inspect_result.deezer_carousel_bandits.None.main.set_policies": [[11, 30], ["policies.RandomPolicy", "policies.ExploreThenCommitSegmentPolicy", "policies.ExploreThenCommitSegmentPolicy", "policies.EpsilonGreedySegmentPolicy", "policies.EpsilonGreedySegmentPolicy", "policies.KLUCBSegmentPolicy", "policies.TSSegmentPolicy", "policies.TSSegmentPolicy", "policies.LinearTSPolicy", "policies.LinearTSPolicy", "policies.EpsilonGreedySegmentPolicy", "policies.TSSegmentPolicy"], "function", ["None"], ["def", "set_policies", "(", "policies_name", ",", "user_segment", ",", "user_features", ",", "n_playlists", ")", ":", "\n", "# Please see section 3.3 of RecSys paper for a description of policies", "\n", "    ", "POLICIES_SETTINGS", "=", "{", "\n", "'random'", ":", "RandomPolicy", "(", "n_playlists", ")", ",", "\n", "'etc-seg-explore'", ":", "ExploreThenCommitSegmentPolicy", "(", "user_segment", ",", "n_playlists", ",", "min_n", "=", "100", ",", "cascade_model", "=", "True", ")", ",", "\n", "'etc-seg-exploit'", ":", "ExploreThenCommitSegmentPolicy", "(", "user_segment", ",", "n_playlists", ",", "min_n", "=", "20", ",", "cascade_model", "=", "True", ")", ",", "\n", "'epsilon-greedy-explore'", ":", "EpsilonGreedySegmentPolicy", "(", "user_segment", ",", "n_playlists", ",", "epsilon", "=", "0.1", ",", "cascade_model", "=", "True", ")", ",", "\n", "'epsilon-greedy-exploit'", ":", "EpsilonGreedySegmentPolicy", "(", "user_segment", ",", "n_playlists", ",", "epsilon", "=", "0.01", ",", "cascade_model", "=", "True", ")", ",", "\n", "'kl-ucb-seg'", ":", "KLUCBSegmentPolicy", "(", "user_segment", ",", "n_playlists", ",", "cascade_model", "=", "True", ")", ",", "\n", "'ts-seg-naive'", ":", "TSSegmentPolicy", "(", "user_segment", ",", "n_playlists", ",", "alpha_zero", "=", "1", ",", "beta_zero", "=", "1", ",", "cascade_model", "=", "True", ")", ",", "\n", "'ts-seg-pessimistic'", ":", "TSSegmentPolicy", "(", "user_segment", ",", "n_playlists", ",", "alpha_zero", "=", "1", ",", "beta_zero", "=", "99", ",", "cascade_model", "=", "True", ")", ",", "\n", "'ts-lin-naive'", ":", "LinearTSPolicy", "(", "user_features", ",", "n_playlists", ",", "bias", "=", "0.0", ",", "cascade_model", "=", "True", ")", ",", "\n", "'ts-lin-pessimistic'", ":", "LinearTSPolicy", "(", "user_features", ",", "n_playlists", ",", "bias", "=", "-", "5.0", ",", "cascade_model", "=", "True", ")", ",", "\n", "# Versions of epsilon-greedy-explore and ts-seg-pessimistic WITHOUT cascade model", "\n", "'epsilon-greedy-explore-no-cascade'", ":", "EpsilonGreedySegmentPolicy", "(", "user_segment", ",", "n_playlists", ",", "epsilon", "=", "0.1", ",", "cascade_model", "=", "False", ")", ",", "\n", "'ts-seg-pessimistic-no-cascade'", ":", "TSSegmentPolicy", "(", "user_segment", ",", "n_playlists", ",", "alpha_zero", "=", "1", ",", "beta_zero", "=", "99", ",", "cascade_model", "=", "False", ")", "\n", "}", "\n", "\n", "return", "[", "POLICIES_SETTINGS", "[", "name", "]", "for", "name", "in", "policies_name", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.deezer_carousel_bandits.None.environment.ContextualEnvironment.__init__": [[8, 17], ["numpy.zeros", "numpy.zeros", "environment.ContextualEnvironment.compute_optimal_theoretical_rewards", "environment.ContextualEnvironment.compute_segment_optimal_theoretical_rewards"], "methods", ["home.repos.pwc.inspect_result.deezer_carousel_bandits.None.environment.ContextualEnvironment.compute_optimal_theoretical_rewards", "home.repos.pwc.inspect_result.deezer_carousel_bandits.None.environment.ContextualEnvironment.compute_segment_optimal_theoretical_rewards"], ["    ", "def", "__init__", "(", "self", ",", "user_features", ",", "playlist_features", ",", "user_segment", ",", "n_recos", ")", ":", "\n", "        ", "self", ".", "user_features", "=", "user_features", "\n", "self", ".", "playlist_features", "=", "playlist_features", "\n", "self", ".", "user_segment", "=", "user_segment", "\n", "self", ".", "n_recos", "=", "n_recos", "\n", "self", ".", "th_segment_rewards", "=", "np", ".", "zeros", "(", "user_features", ".", "shape", "[", "0", "]", ")", "\n", "self", ".", "th_rewards", "=", "np", ".", "zeros", "(", "user_features", ".", "shape", "[", "0", "]", ")", "\n", "self", ".", "compute_optimal_theoretical_rewards", "(", ")", "\n", "self", ".", "compute_segment_optimal_theoretical_rewards", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.deezer_carousel_bandits.None.environment.ContextualEnvironment.compute_theoretical_rewards": [[19, 28], ["numpy.take", "numpy.take", "len", "numpy.zeros", "range", "scipy.special.expit", "batch_user_features[].dot", "functools.reduce"], "methods", ["None"], ["", "def", "compute_theoretical_rewards", "(", "self", ",", "batch_user_ids", ",", "batch_recos", ")", ":", "\n", "        ", "batch_user_features", "=", "np", ".", "take", "(", "self", ".", "user_features", ",", "batch_user_ids", ",", "axis", "=", "0", ")", "\n", "batch_playlist_features", "=", "np", ".", "take", "(", "self", ".", "playlist_features", ",", "batch_recos", ",", "axis", "=", "0", ")", "\n", "n_users", "=", "len", "(", "batch_user_ids", ")", "\n", "th_reward", "=", "np", ".", "zeros", "(", "n_users", ")", "\n", "for", "i", "in", "range", "(", "n_users", ")", ":", "\n", "            ", "probas", "=", "expit", "(", "batch_user_features", "[", "i", "]", ".", "dot", "(", "batch_playlist_features", "[", "i", "]", ".", "T", ")", ")", "\n", "th_reward", "[", "i", "]", "=", "1", "-", "reduce", "(", "lambda", "x", ",", "y", ":", "x", "*", "y", ",", "1", "-", "probas", ")", "\n", "", "return", "th_reward", "\n", "\n"]], "home.repos.pwc.inspect_result.deezer_carousel_bandits.None.environment.ContextualEnvironment.compute_optimal_recos": [[30, 36], ["numpy.take", "len", "numpy.take.dot", "numpy.argsort"], "methods", ["None"], ["", "def", "compute_optimal_recos", "(", "self", ",", "batch_user_ids", ",", "n", ")", ":", "\n", "        ", "batch_user_features", "=", "np", ".", "take", "(", "self", ".", "user_features", ",", "batch_user_ids", ",", "axis", "=", "0", ")", "\n", "n_users", "=", "len", "(", "batch_user_ids", ")", "\n", "probas", "=", "batch_user_features", ".", "dot", "(", "self", ".", "playlist_features", ".", "T", ")", "\n", "optim", "=", "np", ".", "argsort", "(", "-", "probas", ")", "[", ":", ",", ":", "n", "]", "\n", "return", "optim", "\n", "\n"]], "home.repos.pwc.inspect_result.deezer_carousel_bandits.None.environment.ContextualEnvironment.compute_optimal_theoretical_rewards": [[38, 49], ["range", "environment.ContextualEnvironment.compute_optimal_recos", "environment.ContextualEnvironment.compute_theoretical_rewards", "min", "min"], "methods", ["home.repos.pwc.inspect_result.deezer_carousel_bandits.None.environment.ContextualEnvironment.compute_optimal_recos", "home.repos.pwc.inspect_result.deezer_carousel_bandits.None.environment.ContextualEnvironment.compute_theoretical_rewards"], ["", "def", "compute_optimal_theoretical_rewards", "(", "self", ")", ":", "\n", "        ", "n_users", "=", "self", ".", "user_features", ".", "shape", "[", "0", "]", "\n", "u", "=", "0", "\n", "step", "=", "100000", "\n", "while", "u", "<", "n_users", ":", "\n", "            ", "users_ids", "=", "range", "(", "u", ",", "min", "(", "n_users", ",", "u", "+", "step", ")", ")", "\n", "opt_recos", "=", "self", ".", "compute_optimal_recos", "(", "users_ids", ",", "self", ".", "n_recos", ")", "\n", "opt_rewards", "=", "self", ".", "compute_theoretical_rewards", "(", "users_ids", ",", "opt_recos", ")", "\n", "self", ".", "th_rewards", "[", "u", ":", "min", "(", "n_users", ",", "u", "+", "step", ")", "]", "=", "opt_rewards", "\n", "u", "+=", "step", "\n", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.deezer_carousel_bandits.None.environment.ContextualEnvironment.compute_segment_optimal_recos": [[51, 59], ["len", "numpy.zeros", "range", "numpy.unique", "numpy.mean", "scipy.special.expit", "functools.reduce", "numpy.argsort", "numpy.take().dot", "numpy.take", "numpy.sort", "numpy.where"], "methods", ["None"], ["", "def", "compute_segment_optimal_recos", "(", "self", ",", "n", ")", ":", "\n", "        ", "n_segments", "=", "len", "(", "np", ".", "unique", "(", "self", ".", "user_segment", ")", ")", "\n", "segment_recos", "=", "np", ".", "zeros", "(", "(", "n_segments", ",", "n", ")", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "for", "i", "in", "range", "(", "n_segments", ")", ":", "\n", "            ", "mean_probas", "=", "np", ".", "mean", "(", "expit", "(", "np", ".", "take", "(", "self", ".", "user_features", ",", "np", ".", "where", "(", "self", ".", "user_segment", "==", "i", ")", "[", "0", "]", ",", "axis", "=", "0", ")", ".", "dot", "(", "self", ".", "playlist_features", ".", "T", ")", ")", ",", "axis", "=", "0", ")", "\n", "reward", "=", "1", "-", "reduce", "(", "lambda", "x", ",", "y", ":", "x", "*", "y", ",", "1", "+", "np", ".", "sort", "(", "-", "mean_probas", ")", "[", ":", "n", "]", ")", "\n", "segment_recos", "[", "i", "]", "=", "np", ".", "argsort", "(", "-", "mean_probas", ")", "[", ":", "n", "]", "\n", "", "return", "segment_recos", "\n", "\n"]], "home.repos.pwc.inspect_result.deezer_carousel_bandits.None.environment.ContextualEnvironment.compute_segment_optimal_theoretical_rewards": [[61, 74], ["environment.ContextualEnvironment.compute_segment_optimal_recos", "range", "numpy.take", "numpy.take", "environment.ContextualEnvironment.compute_theoretical_rewards", "min", "min"], "methods", ["home.repos.pwc.inspect_result.deezer_carousel_bandits.None.environment.ContextualEnvironment.compute_segment_optimal_recos", "home.repos.pwc.inspect_result.deezer_carousel_bandits.None.environment.ContextualEnvironment.compute_theoretical_rewards"], ["", "def", "compute_segment_optimal_theoretical_rewards", "(", "self", ")", ":", "\n", "        ", "n_users", "=", "self", ".", "user_features", ".", "shape", "[", "0", "]", "\n", "u", "=", "0", "\n", "step", "=", "100000", "\n", "segment_recos", "=", "self", ".", "compute_segment_optimal_recos", "(", "self", ".", "n_recos", ")", "\n", "while", "u", "<", "n_users", ":", "\n", "            ", "users_ids", "=", "range", "(", "u", ",", "min", "(", "n_users", ",", "u", "+", "step", ")", ")", "\n", "user_segment", "=", "np", ".", "take", "(", "self", ".", "user_segment", ",", "users_ids", ")", "\n", "opt_recos", "=", "np", ".", "take", "(", "segment_recos", ",", "user_segment", ",", "axis", "=", "0", ")", "\n", "opt_rewards", "=", "self", ".", "compute_theoretical_rewards", "(", "users_ids", ",", "opt_recos", ")", "\n", "self", ".", "th_segment_rewards", "[", "u", ":", "min", "(", "n_users", ",", "u", "+", "step", ")", "]", "=", "opt_rewards", "\n", "u", "+=", "step", "\n", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.deezer_carousel_bandits.None.environment.ContextualEnvironment.simulate_batch_users_reward": [[77, 103], ["numpy.take", "numpy.take", "len", "len", "numpy.zeros", "range", "numpy.zeros", "numpy.random.binomial", "set", "numpy.random.binomial.nonzero", "range", "scipy.special.expit", "len", "batch_user_features[].dot", "set.add"], "methods", ["None"], ["", "def", "simulate_batch_users_reward", "(", "self", ",", "batch_user_ids", ",", "batch_recos", ")", ":", "\n", "\n", "# First, compute probability of streaming each reco and draw rewards accordingly", "\n", "        ", "batch_user_features", "=", "np", ".", "take", "(", "self", ".", "user_features", ",", "batch_user_ids", ",", "axis", "=", "0", ")", "\n", "batch_playlist_features", "=", "np", ".", "take", "(", "self", ".", "playlist_features", ",", "batch_recos", ",", "axis", "=", "0", ")", "\n", "n_users", "=", "len", "(", "batch_user_ids", ")", "\n", "n", "=", "len", "(", "batch_recos", "[", "0", "]", ")", "\n", "probas", "=", "np", ".", "zeros", "(", "(", "n_users", ",", "n", ")", ")", "\n", "for", "i", "in", "range", "(", "n_users", ")", ":", "\n", "            ", "probas", "[", "i", "]", "=", "expit", "(", "batch_user_features", "[", "i", "]", ".", "dot", "(", "batch_playlist_features", "[", "i", "]", ".", "T", ")", ")", "# probability to stream each reco", "\n", "", "rewards", "=", "np", ".", "zeros", "(", "(", "n_users", ",", "n", ")", ")", "\n", "i", "=", "0", "\n", "rewards_uncascaded", "=", "np", ".", "random", ".", "binomial", "(", "1", ",", "probas", ")", "# drawing rewards from probabilities", "\n", "positive_rewards", "=", "set", "(", ")", "\n", "\n", "# Then, for each user, positive rewards after the first one are set to 0 (and playlists as \"unseen\" subsequently)", "\n", "# to imitate a cascading browsing behavior", "\n", "# (nonetheless, users can be drawn several times in the batch of a same round ; therefore, each user", "\n", "# can have several positive rewards - i.e. stream several playlists - in a same round, consistently with", "\n", "# the multiple-plays framework from the paper)", "\n", "nz", "=", "rewards_uncascaded", ".", "nonzero", "(", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "nz", "[", "0", "]", ")", ")", ":", "\n", "            ", "if", "nz", "[", "0", "]", "[", "i", "]", "not", "in", "positive_rewards", ":", "\n", "                ", "rewards", "[", "nz", "[", "0", "]", "[", "i", "]", "]", "[", "nz", "[", "1", "]", "[", "i", "]", "]", "=", "1", "\n", "positive_rewards", ".", "add", "(", "nz", "[", "0", "]", "[", "i", "]", ")", "\n", "", "", "return", "rewards", "\n", "", "", ""]]}