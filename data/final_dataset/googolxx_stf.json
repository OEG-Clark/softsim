{"home.repos.pwc.inspect_result.googolxx_stf.None.setup.write_version_file": [[38, 43], ["path.open", "f.write", "f.write"], "function", ["None"], ["", "def", "write_version_file", "(", ")", ":", "\n", "    ", "path", "=", "cwd", "/", "package_name", "/", "\"version.py\"", "\n", "with", "path", ".", "open", "(", "\"w\"", ")", "as", "f", ":", "\n", "        ", "f", ".", "write", "(", "f'__version__ = \"{version}\"\\n'", ")", "\n", "f", ".", "write", "(", "f'git_version = \"{git_hash}\"\\n'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.None.setup.get_extensions": [[48, 83], ["os.getenv", "ext_modules.append", "ext_modules.append", "pybind11.setup_helpers.Pybind11Extension", "pybind11.setup_helpers.Pybind11Extension", "str", "str", "rans_ext_dir.glob", "ops_ext_dir.glob"], "function", ["None"], ["def", "get_extensions", "(", ")", ":", "\n", "    ", "ext_dirs", "=", "cwd", "/", "package_name", "/", "\"cpp_exts\"", "\n", "ext_modules", "=", "[", "]", "\n", "\n", "# Add rANS module", "\n", "rans_lib_dir", "=", "cwd", "/", "\"third_party/ryg_rans\"", "\n", "rans_ext_dir", "=", "ext_dirs", "/", "\"rans\"", "\n", "\n", "extra_compile_args", "=", "[", "\"-std=c++17\"", "]", "\n", "if", "os", ".", "getenv", "(", "\"DEBUG_BUILD\"", ",", "None", ")", ":", "\n", "        ", "extra_compile_args", "+=", "[", "\"-O0\"", ",", "\"-g\"", ",", "\"-UNDEBUG\"", "]", "\n", "", "else", ":", "\n", "        ", "extra_compile_args", "+=", "[", "\"-O3\"", "]", "\n", "", "ext_modules", ".", "append", "(", "\n", "Pybind11Extension", "(", "\n", "name", "=", "f\"{package_name}.ans\"", ",", "\n", "sources", "=", "[", "str", "(", "s", ")", "for", "s", "in", "rans_ext_dir", ".", "glob", "(", "\"*.cpp\"", ")", "]", ",", "\n", "language", "=", "\"c++\"", ",", "\n", "include_dirs", "=", "[", "rans_lib_dir", ",", "rans_ext_dir", "]", ",", "\n", "extra_compile_args", "=", "extra_compile_args", ",", "\n", ")", "\n", ")", "\n", "\n", "# Add ops", "\n", "ops_ext_dir", "=", "ext_dirs", "/", "\"ops\"", "\n", "ext_modules", ".", "append", "(", "\n", "Pybind11Extension", "(", "\n", "name", "=", "f\"{package_name}._CXX\"", ",", "\n", "sources", "=", "[", "str", "(", "s", ")", "for", "s", "in", "ops_ext_dir", ".", "glob", "(", "\"*.cpp\"", ")", "]", ",", "\n", "language", "=", "\"c++\"", ",", "\n", "extra_compile_args", "=", "extra_compile_args", ",", "\n", ")", "\n", ")", "\n", "\n", "return", "ext_modules", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.None.setup.get_extra_requirements": [[96, 105], ["set", "extras_require.values"], "function", ["None"], ["def", "get_extra_requirements", "(", ")", ":", "\n", "    ", "extras_require", "=", "{", "\n", "\"test\"", ":", "TEST_REQUIRES", ",", "\n", "\"dev\"", ":", "DEV_REQUIRES", ",", "\n", "\"doc\"", ":", "[", "\"sphinx\"", ",", "\"furo\"", "]", ",", "\n", "\"tutorials\"", ":", "[", "\"jupyter\"", ",", "\"ipywidgets\"", "]", ",", "\n", "}", "\n", "extras_require", "[", "\"all\"", "]", "=", "set", "(", "req", "for", "reqs", "in", "extras_require", ".", "values", "(", ")", "for", "req", "in", "reqs", ")", "\n", "return", "extras_require", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.None.train.RateDistortionLoss.__init__": [[35, 39], ["torch.Module.__init__", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.__init__"], ["def", "__init__", "(", "self", ",", "lmbda", "=", "1e-2", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "mse", "=", "nn", ".", "MSELoss", "(", ")", "\n", "self", ".", "lmbda", "=", "lmbda", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.None.train.RateDistortionLoss.forward": [[40, 53], ["target.size", "sum", "train.RateDistortionLoss.mse", "torch.log().sum", "torch.log().sum", "torch.log().sum", "torch.log().sum", "torch.log().sum", "torch.log().sum", "torch.log().sum", "torch.log().sum", "torch.log().sum", "output[].values", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "math.log"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "output", ",", "target", ")", ":", "\n", "        ", "N", ",", "_", ",", "H", ",", "W", "=", "target", ".", "size", "(", ")", "\n", "out", "=", "{", "}", "\n", "num_pixels", "=", "N", "*", "H", "*", "W", "\n", "\n", "out", "[", "\"bpp_loss\"", "]", "=", "sum", "(", "\n", "(", "torch", ".", "log", "(", "likelihoods", ")", ".", "sum", "(", ")", "/", "(", "-", "math", ".", "log", "(", "2", ")", "*", "num_pixels", ")", ")", "\n", "for", "likelihoods", "in", "output", "[", "\"likelihoods\"", "]", ".", "values", "(", ")", "\n", ")", "\n", "out", "[", "\"mse_loss\"", "]", "=", "self", ".", "mse", "(", "output", "[", "\"x_hat\"", "]", ",", "target", ")", "\n", "out", "[", "\"loss\"", "]", "=", "self", ".", "lmbda", "*", "255", "**", "2", "*", "out", "[", "\"mse_loss\"", "]", "+", "out", "[", "\"bpp_loss\"", "]", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.None.train.AverageMeter.__init__": [[58, 63], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.None.train.AverageMeter.update": [[64, 69], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.None.train.CustomDataParallel.__getattr__": [[74, 79], ["super().__getattr__", "getattr"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.None.train.CustomDataParallel.__getattr__"], ["def", "__getattr__", "(", "self", ",", "key", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "return", "super", "(", ")", ".", "__getattr__", "(", "key", ")", "\n", "", "except", "AttributeError", ":", "\n", "            ", "return", "getattr", "(", "self", ".", "module", ",", "key", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.None.train.configure_optimizers": [[81, 113], ["dict", "torch.Adam", "torch.Adam", "net.named_parameters", "len", "net.named_parameters", "net.named_parameters", "len", "len", "n.endswith", "dict.keys", "sorted", "sorted", "n.endswith"], "function", ["None"], ["", "", "", "def", "configure_optimizers", "(", "net", ",", "args", ")", ":", "\n", "    ", "\"\"\"Separate parameters for the main optimizer and the auxiliary optimizer.\n    Return two optimizers\"\"\"", "\n", "\n", "parameters", "=", "{", "\n", "n", "\n", "for", "n", ",", "p", "in", "net", ".", "named_parameters", "(", ")", "\n", "if", "not", "n", ".", "endswith", "(", "\".quantiles\"", ")", "and", "p", ".", "requires_grad", "\n", "}", "\n", "aux_parameters", "=", "{", "\n", "n", "\n", "for", "n", ",", "p", "in", "net", ".", "named_parameters", "(", ")", "\n", "if", "n", ".", "endswith", "(", "\".quantiles\"", ")", "and", "p", ".", "requires_grad", "\n", "}", "\n", "\n", "# Make sure we don't have an intersection of parameters", "\n", "params_dict", "=", "dict", "(", "net", ".", "named_parameters", "(", ")", ")", "\n", "inter_params", "=", "parameters", "&", "aux_parameters", "\n", "union_params", "=", "parameters", "|", "aux_parameters", "\n", "\n", "assert", "len", "(", "inter_params", ")", "==", "0", "\n", "assert", "len", "(", "union_params", ")", "-", "len", "(", "params_dict", ".", "keys", "(", ")", ")", "==", "0", "\n", "\n", "optimizer", "=", "optim", ".", "Adam", "(", "\n", "(", "params_dict", "[", "n", "]", "for", "n", "in", "sorted", "(", "parameters", ")", ")", ",", "\n", "lr", "=", "args", ".", "learning_rate", ",", "\n", ")", "\n", "aux_optimizer", "=", "optim", ".", "Adam", "(", "\n", "(", "params_dict", "[", "n", "]", "for", "n", "in", "sorted", "(", "aux_parameters", ")", ")", ",", "\n", "lr", "=", "args", ".", "aux_learning_rate", ",", "\n", ")", "\n", "return", "optimizer", ",", "aux_optimizer", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.None.train.train_one_epoch": [[115, 142], ["model.train", "enumerate", "next", "d.to.to", "optimizer.zero_grad", "aux_optimizer.zero_grad", "model", "criterion", "out_criterion[].backward", "optimizer.step", "model.aux_loss", "model.aux_loss.backward", "aux_optimizer.step", "model.parameters", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "print", "model.parameters", "len", "out_criterion[].item", "out_criterion[].item", "model.aux_loss.item", "len", "len", "out_criterion[].item"], "function", ["home.repos.pwc.inspect_result.googolxx_stf.ops.bound_ops.LowerBoundFunction.backward", "home.repos.pwc.inspect_result.googolxx_stf.models.base.CompressionModel.aux_loss", "home.repos.pwc.inspect_result.googolxx_stf.ops.bound_ops.LowerBoundFunction.backward"], ["", "def", "train_one_epoch", "(", "\n", "model", ",", "criterion", ",", "train_dataloader", ",", "optimizer", ",", "aux_optimizer", ",", "epoch", ",", "clip_max_norm", "\n", ")", ":", "\n", "    ", "model", ".", "train", "(", ")", "\n", "device", "=", "next", "(", "model", ".", "parameters", "(", ")", ")", ".", "device", "\n", "\n", "for", "i", ",", "d", "in", "enumerate", "(", "train_dataloader", ")", ":", "\n", "        ", "d", "=", "d", ".", "to", "(", "device", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "aux_optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "out_net", "=", "model", "(", "d", ")", "\n", "\n", "out_criterion", "=", "criterion", "(", "out_net", ",", "d", ")", "\n", "out_criterion", "[", "\"loss\"", "]", ".", "backward", "(", ")", "\n", "if", "clip_max_norm", ">", "0", ":", "\n", "            ", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "model", ".", "parameters", "(", ")", ",", "clip_max_norm", ")", "\n", "", "optimizer", ".", "step", "(", ")", "\n", "\n", "aux_loss", "=", "model", ".", "aux_loss", "(", ")", "\n", "aux_loss", ".", "backward", "(", ")", "\n", "aux_optimizer", ".", "step", "(", ")", "\n", "\n", "if", "i", "%", "100", "==", "0", ":", "\n", "            ", "print", "(", "\n", "f\"Train epoch {epoch}: [\"", "\n", "f\"{i*len(d)}/{len(train_dataloader.dataset)}\"", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.None.train.test_epoch": [[151, 179], ["model.eval", "train.AverageMeter", "train.AverageMeter", "train.AverageMeter", "train.AverageMeter", "print", "next", "torch.no_grad", "torch.no_grad", "torch.no_grad", "model.parameters", "d.to.to", "model", "criterion", "train.AverageMeter.update", "train.AverageMeter.update", "train.AverageMeter.update", "train.AverageMeter.update", "model.aux_loss"], "function", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.update", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.update", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.update", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.update", "home.repos.pwc.inspect_result.googolxx_stf.models.base.CompressionModel.aux_loss"], ["", "", "", "def", "test_epoch", "(", "epoch", ",", "test_dataloader", ",", "model", ",", "criterion", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "device", "=", "next", "(", "model", ".", "parameters", "(", ")", ")", ".", "device", "\n", "\n", "loss", "=", "AverageMeter", "(", ")", "\n", "bpp_loss", "=", "AverageMeter", "(", ")", "\n", "mse_loss", "=", "AverageMeter", "(", ")", "\n", "aux_loss", "=", "AverageMeter", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "d", "in", "test_dataloader", ":", "\n", "            ", "d", "=", "d", ".", "to", "(", "device", ")", "\n", "out_net", "=", "model", "(", "d", ")", "\n", "out_criterion", "=", "criterion", "(", "out_net", ",", "d", ")", "\n", "\n", "aux_loss", ".", "update", "(", "model", ".", "aux_loss", "(", ")", ")", "\n", "bpp_loss", ".", "update", "(", "out_criterion", "[", "\"bpp_loss\"", "]", ")", "\n", "loss", ".", "update", "(", "out_criterion", "[", "\"loss\"", "]", ")", "\n", "mse_loss", ".", "update", "(", "out_criterion", "[", "\"mse_loss\"", "]", ")", "\n", "\n", "", "", "print", "(", "\n", "f\"Test epoch {epoch}: Average losses:\"", "\n", "f\"\\tLoss: {loss.avg:.3f} |\"", "\n", "f\"\\tMSE loss: {mse_loss.avg * 255 ** 2 / 3:.3f} |\"", "\n", "f\"\\tBpp loss: {bpp_loss.avg:.2f} |\"", "\n", "f\"\\tAux loss: {aux_loss.avg:.2f}\\n\"", "\n", ")", "\n", "return", "loss", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.None.train.save_checkpoint": [[181, 185], ["torch.save", "torch.save", "torch.save", "shutil.copyfile"], "function", ["None"], ["", "def", "save_checkpoint", "(", "state", ",", "is_best", ",", "filename", ")", ":", "\n", "    ", "torch", ".", "save", "(", "state", ",", "filename", ")", "\n", "if", "is_best", ":", "\n", "        ", "shutil", ".", "copyfile", "(", "filename", ",", "filename", "[", ":", "-", "8", "]", "+", "\"_best\"", "+", "filename", "[", "-", "8", ":", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.None.train.parse_args": [[187, 268], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "compressai.zoo.models.keys"], "function", ["home.repos.pwc.inspect_result.googolxx_stf.None.train.parse_args"], ["", "", "def", "parse_args", "(", "argv", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "\"Example training script.\"", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"-m\"", ",", "\n", "\"--model\"", ",", "\n", "default", "=", "\"stf\"", ",", "\n", "choices", "=", "models", ".", "keys", "(", ")", ",", "\n", "help", "=", "\"Model architecture (default: %(default)s)\"", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"-d\"", ",", "\"--dataset\"", ",", "type", "=", "str", ",", "required", "=", "True", ",", "help", "=", "\"Training dataset\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"-e\"", ",", "\n", "\"--epochs\"", ",", "\n", "default", "=", "100", ",", "\n", "type", "=", "int", ",", "\n", "help", "=", "\"Number of epochs (default: %(default)s)\"", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"-lr\"", ",", "\n", "\"--learning-rate\"", ",", "\n", "default", "=", "1e-4", ",", "\n", "type", "=", "float", ",", "\n", "help", "=", "\"Learning rate (default: %(default)s)\"", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"-n\"", ",", "\n", "\"--num-workers\"", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "30", ",", "\n", "help", "=", "\"Dataloaders threads (default: %(default)s)\"", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--lambda\"", ",", "\n", "dest", "=", "\"lmbda\"", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "1e-2", ",", "\n", "help", "=", "\"Bit-rate distortion parameter (default: %(default)s)\"", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--batch-size\"", ",", "type", "=", "int", ",", "default", "=", "16", ",", "help", "=", "\"Batch size (default: %(default)s)\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--test-batch-size\"", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "64", ",", "\n", "help", "=", "\"Test batch size (default: %(default)s)\"", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--aux-learning-rate\"", ",", "\n", "default", "=", "1e-3", ",", "\n", "type", "=", "float", ",", "\n", "help", "=", "\"Auxiliary loss learning rate (default: %(default)s)\"", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--patch-size\"", ",", "\n", "type", "=", "int", ",", "\n", "nargs", "=", "2", ",", "\n", "default", "=", "(", "256", ",", "256", ")", ",", "\n", "help", "=", "\"Size of the patches to be cropped (default: %(default)s)\"", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\"--cuda\"", ",", "action", "=", "\"store_true\"", ",", "help", "=", "\"Use cuda\"", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--save\"", ",", "action", "=", "\"store_true\"", ",", "default", "=", "True", ",", "help", "=", "\"Save model to disk\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--save_path\"", ",", "type", "=", "str", ",", "default", "=", "\"ckpt/model.pth.tar\"", ",", "help", "=", "\"Where to Save model\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--seed\"", ",", "type", "=", "float", ",", "help", "=", "\"Set random seed for reproducibility\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--clip_max_norm\"", ",", "\n", "default", "=", "1.0", ",", "\n", "type", "=", "float", ",", "\n", "help", "=", "\"gradient clipping max norm (default: %(default)s\"", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\"--checkpoint\"", ",", "type", "=", "str", ",", "help", "=", "\"Path to a checkpoint\"", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", "argv", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.None.train.main": [[270, 357], ["train.parse_args", "print", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "compressai.datasets.ImageFolder", "compressai.datasets.ImageFolder", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "CustomDataParallel.to", "train.configure_optimizers", "torch.lr_scheduler.ReduceLROnPlateau", "train.RateDistortionLoss", "float", "range", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "random.seed", "train.CustomDataParallel", "print", "torch.load", "torch.load", "torch.load", "CustomDataParallel.load_state_dict", "optimizer.load_state_dict", "aux_optimizer.load_state_dict", "optim.lr_scheduler.ReduceLROnPlateau.load_state_dict", "print", "train.train_one_epoch", "train.test_epoch", "optim.lr_scheduler.ReduceLROnPlateau.step", "min", "torchvision.transforms.RandomCrop", "torchvision.transforms.ToTensor", "torchvision.transforms.CenterCrop", "torchvision.transforms.ToTensor", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "train.save_checkpoint", "CustomDataParallel.state_dict", "optimizer.state_dict", "aux_optimizer.state_dict", "optim.lr_scheduler.ReduceLROnPlateau.state_dict"], "function", ["home.repos.pwc.inspect_result.googolxx_stf.None.train.parse_args", "home.repos.pwc.inspect_result.googolxx_stf.None.train.configure_optimizers", "home.repos.pwc.inspect_result.googolxx_stf.models.cnn.WACNN.load_state_dict", "home.repos.pwc.inspect_result.googolxx_stf.models.cnn.WACNN.load_state_dict", "home.repos.pwc.inspect_result.googolxx_stf.models.cnn.WACNN.load_state_dict", "home.repos.pwc.inspect_result.googolxx_stf.models.cnn.WACNN.load_state_dict", "home.repos.pwc.inspect_result.googolxx_stf.None.train.train_one_epoch", "home.repos.pwc.inspect_result.googolxx_stf.None.train.test_epoch", "home.repos.pwc.inspect_result.googolxx_stf.None.train.save_checkpoint"], ["", "def", "main", "(", "argv", ")", ":", "\n", "    ", "args", "=", "parse_args", "(", "argv", ")", "\n", "print", "(", "args", ")", "\n", "if", "args", ".", "seed", "is", "not", "None", ":", "\n", "        ", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "\n", "", "train_transforms", "=", "transforms", ".", "Compose", "(", "\n", "[", "transforms", ".", "RandomCrop", "(", "args", ".", "patch_size", ")", ",", "transforms", ".", "ToTensor", "(", ")", "]", "\n", ")", "\n", "\n", "test_transforms", "=", "transforms", ".", "Compose", "(", "\n", "[", "transforms", ".", "CenterCrop", "(", "args", ".", "patch_size", ")", ",", "transforms", ".", "ToTensor", "(", ")", "]", "\n", ")", "\n", "\n", "train_dataset", "=", "ImageFolder", "(", "args", ".", "dataset", ",", "split", "=", "\"train\"", ",", "transform", "=", "train_transforms", ")", "\n", "test_dataset", "=", "ImageFolder", "(", "args", ".", "dataset", ",", "split", "=", "\"test\"", ",", "transform", "=", "test_transforms", ")", "\n", "\n", "device", "=", "\"cuda\"", "if", "args", ".", "cuda", "and", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", "\n", "\n", "train_dataloader", "=", "DataLoader", "(", "\n", "train_dataset", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "num_workers", "=", "args", ".", "num_workers", ",", "\n", "shuffle", "=", "True", ",", "\n", "pin_memory", "=", "(", "device", "==", "\"cuda\"", ")", ",", "\n", ")", "\n", "\n", "test_dataloader", "=", "DataLoader", "(", "\n", "test_dataset", ",", "\n", "batch_size", "=", "args", ".", "test_batch_size", ",", "\n", "num_workers", "=", "args", ".", "num_workers", ",", "\n", "shuffle", "=", "False", ",", "\n", "pin_memory", "=", "(", "device", "==", "\"cuda\"", ")", ",", "\n", ")", "\n", "\n", "net", "=", "models", "[", "args", ".", "model", "]", "(", ")", "\n", "net", "=", "net", ".", "to", "(", "device", ")", "\n", "\n", "if", "args", ".", "cuda", "and", "torch", ".", "cuda", ".", "device_count", "(", ")", ">", "1", ":", "\n", "        ", "net", "=", "CustomDataParallel", "(", "net", ")", "\n", "\n", "", "optimizer", ",", "aux_optimizer", "=", "configure_optimizers", "(", "net", ",", "args", ")", "\n", "lr_scheduler", "=", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "optimizer", ",", "\"min\"", ",", "factor", "=", "0.3", ",", "patience", "=", "4", ")", "\n", "criterion", "=", "RateDistortionLoss", "(", "lmbda", "=", "args", ".", "lmbda", ")", "\n", "\n", "last_epoch", "=", "0", "\n", "if", "args", ".", "checkpoint", ":", "# load from previous checkpoint", "\n", "        ", "print", "(", "\"Loading\"", ",", "args", ".", "checkpoint", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "args", ".", "checkpoint", ",", "map_location", "=", "device", ")", "\n", "last_epoch", "=", "checkpoint", "[", "\"epoch\"", "]", "+", "1", "\n", "net", ".", "load_state_dict", "(", "checkpoint", "[", "\"state_dict\"", "]", ")", "\n", "\n", "optimizer", ".", "load_state_dict", "(", "checkpoint", "[", "\"optimizer\"", "]", ")", "\n", "aux_optimizer", ".", "load_state_dict", "(", "checkpoint", "[", "\"aux_optimizer\"", "]", ")", "\n", "lr_scheduler", ".", "load_state_dict", "(", "checkpoint", "[", "\"lr_scheduler\"", "]", ")", "\n", "\n", "", "best_loss", "=", "float", "(", "\"inf\"", ")", "\n", "for", "epoch", "in", "range", "(", "last_epoch", ",", "args", ".", "epochs", ")", ":", "\n", "        ", "print", "(", "f\"Learning rate: {optimizer.param_groups[0]['lr']}\"", ")", "\n", "train_one_epoch", "(", "\n", "net", ",", "\n", "criterion", ",", "\n", "train_dataloader", ",", "\n", "optimizer", ",", "\n", "aux_optimizer", ",", "\n", "epoch", ",", "\n", "args", ".", "clip_max_norm", ",", "\n", ")", "\n", "loss", "=", "test_epoch", "(", "epoch", ",", "test_dataloader", ",", "net", ",", "criterion", ")", "\n", "lr_scheduler", ".", "step", "(", "loss", ")", "\n", "\n", "is_best", "=", "loss", "<", "best_loss", "\n", "best_loss", "=", "min", "(", "loss", ",", "best_loss", ")", "\n", "\n", "if", "args", ".", "save", ":", "\n", "            ", "save_checkpoint", "(", "\n", "{", "\n", "\"epoch\"", ":", "epoch", ",", "\n", "\"state_dict\"", ":", "net", ".", "state_dict", "(", ")", ",", "\n", "\"loss\"", ":", "loss", ",", "\n", "\"optimizer\"", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "\"aux_optimizer\"", ":", "aux_optimizer", ".", "state_dict", "(", ")", ",", "\n", "\"lr_scheduler\"", ":", "lr_scheduler", ".", "state_dict", "(", ")", ",", "\n", "}", ",", "\n", "is_best", ",", "\n", "args", ".", "save_path", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.compressai.__init__.set_entropy_coder": [[33, 49], ["ValueError"], "function", ["None"], ["", "def", "set_entropy_coder", "(", "entropy_coder", ")", ":", "\n", "    ", "\"\"\"\n    Specifies the default entropy coder used to encode the bit-streams.\n\n    Use :mod:`available_entropy_coders` to list the possible values.\n\n    Args:\n        entropy_coder (string): Name of the entropy coder\n    \"\"\"", "\n", "global", "_entropy_coder", "\n", "if", "entropy_coder", "not", "in", "_available_entropy_coders", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "f'Invalid entropy coder \"{entropy_coder}\", choose from'", "\n", "f'({\", \".join(_available_entropy_coders)}).'", "\n", ")", "\n", "", "_entropy_coder", "=", "entropy_coder", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.compressai.__init__.get_entropy_coder": [[51, 56], ["None"], "function", ["None"], ["", "def", "get_entropy_coder", "(", ")", ":", "\n", "    ", "\"\"\"\n    Return the name of the default entropy coder used to encode the bit-streams.\n    \"\"\"", "\n", "return", "_entropy_coder", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.compressai.__init__.available_entropy_coders": [[58, 63], ["None"], "function", ["None"], ["", "def", "available_entropy_coders", "(", ")", ":", "\n", "    ", "\"\"\"\n    Return the list of available entropy coders.\n    \"\"\"", "\n", "return", "_available_entropy_coders", "\n", "", ""]], "home.repos.pwc.inspect_result.googolxx_stf.eval_model.__main__.collect_images": [[56, 61], ["os.path.join", "os.listdir", "[].lower", "os.path.splitext"], "function", ["None"], ["def", "collect_images", "(", "rootpath", ":", "str", ")", "->", "List", "[", "str", "]", ":", "\n", "    ", "return", "[", "\n", "os", ".", "path", ".", "join", "(", "rootpath", ",", "f", ")", "\n", "for", "f", "in", "os", ".", "listdir", "(", "rootpath", ")", "\n", "if", "os", ".", "path", ".", "splitext", "(", "f", ")", "[", "-", "1", "]", ".", "lower", "(", ")", "in", "IMG_EXTENSIONS", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.eval_model.__main__.psnr": [[64, 67], ["torch.mse_loss().item", "math.log10", "torch.mse_loss"], "function", ["None"], ["", "def", "psnr", "(", "a", ":", "torch", ".", "Tensor", ",", "b", ":", "torch", ".", "Tensor", ")", "->", "float", ":", "\n", "    ", "mse", "=", "F", ".", "mse_loss", "(", "a", ",", "b", ")", ".", "item", "(", ")", "\n", "return", "-", "10", "*", "math", ".", "log10", "(", "mse", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.eval_model.__main__.read_image": [[69, 73], ["os.path.isfile", "PIL.Image.open().convert", "torchvision.transforms.ToTensor", "PIL.Image.open"], "function", ["None"], ["", "def", "read_image", "(", "filepath", ":", "str", ")", "->", "torch", ".", "Tensor", ":", "\n", "    ", "assert", "os", ".", "path", ".", "isfile", "(", "filepath", ")", "\n", "img", "=", "Image", ".", "open", "(", "filepath", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "return", "transforms", ".", "ToTensor", "(", ")", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.eval_model.__main__.reconstruct": [[75, 80], ["reconstruction.squeeze.squeeze", "reconstruction.squeeze.clamp_", "reconstruction.squeeze.save", "torchvision.transforms.ToPILImage", "reconstruction.squeeze.cpu", "os.path.join"], "function", ["None"], ["", "def", "reconstruct", "(", "reconstruction", ",", "filename", ",", "recon_path", ")", ":", "\n", "    ", "reconstruction", "=", "reconstruction", ".", "squeeze", "(", ")", "\n", "reconstruction", ".", "clamp_", "(", "0", ",", "1", ")", "\n", "reconstruction", "=", "transforms", ".", "ToPILImage", "(", ")", "(", "reconstruction", ".", "cpu", "(", ")", ")", "\n", "reconstruction", ".", "save", "(", "os", ".", "path", ".", "join", "(", "recon_path", ",", "filename", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.eval_model.__main__.inference": [[82, 125], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "x.unsqueeze.unsqueeze", "torch.pad", "time.time", "model.compress", "time.time", "model.decompress", "torch.pad", "__main__.reconstruct", "os.path.exists", "os.makedirs", "x.unsqueeze.size", "x.unsqueeze.size", "time.time", "time.time", "x.unsqueeze.size", "__main__.psnr", "pytorch_msssim.ms_ssim().item", "x.unsqueeze.size", "x.unsqueeze.size", "sum", "pytorch_msssim.ms_ssim", "len"], "function", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyBottleneck.compress", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyBottleneck.decompress", "home.repos.pwc.inspect_result.googolxx_stf.eval_model.__main__.reconstruct", "home.repos.pwc.inspect_result.googolxx_stf.eval_model.__main__.psnr"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "inference", "(", "model", ",", "x", ",", "filename", ",", "recon_path", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "recon_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "recon_path", ")", "\n", "\n", "", "x", "=", "x", ".", "unsqueeze", "(", "0", ")", "\n", "h", ",", "w", "=", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", "\n", "p", "=", "64", "# maximum 6 strides of 2", "\n", "new_h", "=", "(", "h", "+", "p", "-", "1", ")", "//", "p", "*", "p", "\n", "new_w", "=", "(", "w", "+", "p", "-", "1", ")", "//", "p", "*", "p", "\n", "padding_left", "=", "(", "new_w", "-", "w", ")", "//", "2", "\n", "padding_right", "=", "new_w", "-", "w", "-", "padding_left", "\n", "padding_top", "=", "(", "new_h", "-", "h", ")", "//", "2", "\n", "padding_bottom", "=", "new_h", "-", "h", "-", "padding_top", "\n", "x_padded", "=", "F", ".", "pad", "(", "\n", "x", ",", "\n", "(", "padding_left", ",", "padding_right", ",", "padding_top", ",", "padding_bottom", ")", ",", "\n", "mode", "=", "\"constant\"", ",", "\n", "value", "=", "0", ",", "\n", ")", "\n", "\n", "start", "=", "time", ".", "time", "(", ")", "\n", "\n", "out_enc", "=", "model", ".", "compress", "(", "x_padded", ")", "\n", "\n", "enc_time", "=", "time", ".", "time", "(", ")", "-", "start", "\n", "start", "=", "time", ".", "time", "(", ")", "\n", "out_dec", "=", "model", ".", "decompress", "(", "out_enc", "[", "\"strings\"", "]", ",", "out_enc", "[", "\"shape\"", "]", ")", "\n", "dec_time", "=", "time", ".", "time", "(", ")", "-", "start", "\n", "\n", "out_dec", "[", "\"x_hat\"", "]", "=", "F", ".", "pad", "(", "\n", "out_dec", "[", "\"x_hat\"", "]", ",", "(", "-", "padding_left", ",", "-", "padding_right", ",", "-", "padding_top", ",", "-", "padding_bottom", ")", "\n", ")", "\n", "reconstruct", "(", "out_dec", "[", "\"x_hat\"", "]", ",", "filename", ",", "recon_path", ")", "# add", "\n", "\n", "num_pixels", "=", "x", ".", "size", "(", "0", ")", "*", "x", ".", "size", "(", "2", ")", "*", "x", ".", "size", "(", "3", ")", "\n", "bpp", "=", "sum", "(", "len", "(", "s", "[", "0", "]", ")", "for", "s", "in", "out_enc", "[", "\"strings\"", "]", ")", "*", "8.0", "/", "num_pixels", "\n", "return", "{", "\n", "\"psnr\"", ":", "psnr", "(", "x", ",", "out_dec", "[", "\"x_hat\"", "]", ")", ",", "\n", "\"ms-ssim\"", ":", "ms_ssim", "(", "x", ",", "out_dec", "[", "\"x_hat\"", "]", ",", "data_range", "=", "1.0", ")", ".", "item", "(", ")", ",", "\n", "\"bpp\"", ":", "bpp", ",", "\n", "\"encoding_time\"", ":", "enc_time", ",", "\n", "\"decoding_time\"", ":", "dec_time", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.eval_model.__main__.inference_entropy_estimation": [[128, 147], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "x.unsqueeze.unsqueeze", "time.time", "model.forward", "sum", "time.time", "x.unsqueeze.size", "__main__.psnr", "sum.item", "x.unsqueeze.size", "x.unsqueeze.size", "torch.log().sum", "torch.log().sum", "torch.log().sum", "out_net[].values", "torch.log", "torch.log", "torch.log", "math.log"], "function", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.forward", "home.repos.pwc.inspect_result.googolxx_stf.eval_model.__main__.psnr"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "inference_entropy_estimation", "(", "model", ",", "x", ")", ":", "\n", "    ", "x", "=", "x", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "start", "=", "time", ".", "time", "(", ")", "\n", "out_net", "=", "model", ".", "forward", "(", "x", ")", "\n", "elapsed_time", "=", "time", ".", "time", "(", ")", "-", "start", "\n", "\n", "num_pixels", "=", "x", ".", "size", "(", "0", ")", "*", "x", ".", "size", "(", "2", ")", "*", "x", ".", "size", "(", "3", ")", "\n", "bpp", "=", "sum", "(", "\n", "(", "torch", ".", "log", "(", "likelihoods", ")", ".", "sum", "(", ")", "/", "(", "-", "math", ".", "log", "(", "2", ")", "*", "num_pixels", ")", ")", "\n", "for", "likelihoods", "in", "out_net", "[", "\"likelihoods\"", "]", ".", "values", "(", ")", "\n", ")", "\n", "\n", "return", "{", "\n", "\"psnr\"", ":", "psnr", "(", "x", ",", "out_net", "[", "\"x_hat\"", "]", ")", ",", "\n", "\"bpp\"", ":", "bpp", ".", "item", "(", ")", ",", "\n", "\"encoding_time\"", ":", "elapsed_time", "/", "2.0", ",", "# broad estimation", "\n", "\"decoding_time\"", ":", "elapsed_time", "/", "2.0", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.eval_model.__main__.load_checkpoint": [[150, 153], ["compressai.zoo.load_state_dict", "models[].from_state_dict().eval", "torch.load", "torch.load", "torch.load", "models[].from_state_dict"], "function", ["home.repos.pwc.inspect_result.googolxx_stf.models.cnn.WACNN.load_state_dict", "home.repos.pwc.inspect_result.googolxx_stf.models.cnn.WACNN.from_state_dict"], ["", "def", "load_checkpoint", "(", "arch", ":", "str", ",", "checkpoint_path", ":", "str", ")", "->", "nn", ".", "Module", ":", "\n", "    ", "state_dict", "=", "load_state_dict", "(", "torch", ".", "load", "(", "checkpoint_path", ")", "[", "'state_dict'", "]", ")", "\n", "return", "models", "[", "arch", "]", ".", "from_state_dict", "(", "state_dict", ")", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.eval_model.__main__.eval_model": [[155, 175], ["collections.defaultdict", "collections.defaultdict.items", "next", "read_image().to", "inference_entropy_estimation.items", "model.half.parameters", "f.split", "__main__.inference", "__main__.inference_entropy_estimation", "len", "__main__.read_image", "model.half.half", "x.half.half"], "function", ["home.repos.pwc.inspect_result.googolxx_stf.eval_model.__main__.inference", "home.repos.pwc.inspect_result.googolxx_stf.eval_model.__main__.inference_entropy_estimation", "home.repos.pwc.inspect_result.googolxx_stf.eval_model.__main__.read_image"], ["", "def", "eval_model", "(", "model", ",", "filepaths", ",", "entropy_estimation", "=", "False", ",", "half", "=", "False", ",", "recon_path", "=", "'reconstruction'", ")", ":", "\n", "    ", "device", "=", "next", "(", "model", ".", "parameters", "(", ")", ")", ".", "device", "\n", "metrics", "=", "defaultdict", "(", "float", ")", "\n", "for", "f", "in", "filepaths", ":", "\n", "        ", "_filename", "=", "f", ".", "split", "(", "\"/\"", ")", "[", "-", "1", "]", "\n", "\n", "x", "=", "read_image", "(", "f", ")", ".", "to", "(", "device", ")", "\n", "if", "not", "entropy_estimation", ":", "\n", "            ", "if", "half", ":", "\n", "                ", "model", "=", "model", ".", "half", "(", ")", "\n", "x", "=", "x", ".", "half", "(", ")", "\n", "", "rv", "=", "inference", "(", "model", ",", "x", ",", "_filename", ",", "recon_path", ")", "\n", "", "else", ":", "\n", "            ", "rv", "=", "inference_entropy_estimation", "(", "model", ",", "x", ")", "\n", "", "for", "k", ",", "v", "in", "rv", ".", "items", "(", ")", ":", "\n", "            ", "metrics", "[", "k", "]", "+=", "v", "\n", "", "", "for", "k", ",", "v", "in", "metrics", ".", "items", "(", ")", ":", "\n", "        ", "metrics", "[", "k", "]", "=", "v", "/", "len", "(", "filepaths", ")", "\n", "\n", "", "return", "metrics", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.eval_model.__main__.setup_args": [[177, 229], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "compressai.zoo.models.keys", "compressai.available_entropy_coders", "compressai.available_entropy_coders"], "function", ["home.repos.pwc.inspect_result.googolxx_stf.compressai.__init__.available_entropy_coders", "home.repos.pwc.inspect_result.googolxx_stf.compressai.__init__.available_entropy_coders"], ["", "def", "setup_args", "(", ")", ":", "\n", "    ", "parent_parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "\n", "# Common options.", "\n", "parent_parser", ".", "add_argument", "(", "\"-d\"", ",", "\"--dataset\"", ",", "type", "=", "str", ",", "help", "=", "\"dataset path\"", ")", "\n", "parent_parser", ".", "add_argument", "(", "\"-r\"", ",", "\"--recon_path\"", ",", "type", "=", "str", ",", "default", "=", "\"reconstruction\"", ",", "help", "=", "\"where to save recon img\"", ")", "\n", "parent_parser", ".", "add_argument", "(", "\n", "\"-a\"", ",", "\n", "\"--architecture\"", ",", "\n", "type", "=", "str", ",", "\n", "choices", "=", "models", ".", "keys", "(", ")", ",", "\n", "help", "=", "\"model architecture\"", ",", "\n", "required", "=", "True", ",", "\n", ")", "\n", "parent_parser", ".", "add_argument", "(", "\n", "\"-c\"", ",", "\n", "\"--entropy-coder\"", ",", "\n", "choices", "=", "compressai", ".", "available_entropy_coders", "(", ")", ",", "\n", "default", "=", "compressai", ".", "available_entropy_coders", "(", ")", "[", "0", "]", ",", "\n", "help", "=", "\"entropy coder (default: %(default)s)\"", ",", "\n", ")", "\n", "parent_parser", ".", "add_argument", "(", "\n", "\"--cuda\"", ",", "\n", "action", "=", "\"store_true\"", ",", "\n", "help", "=", "\"enable CUDA\"", ",", "\n", ")", "\n", "parent_parser", ".", "add_argument", "(", "\n", "\"--half\"", ",", "\n", "action", "=", "\"store_true\"", ",", "\n", "help", "=", "\"convert model to half floating point (fp16)\"", ",", "\n", ")", "\n", "parent_parser", ".", "add_argument", "(", "\n", "\"--entropy-estimation\"", ",", "\n", "action", "=", "\"store_true\"", ",", "\n", "help", "=", "\"use evaluated entropy estimation (no entropy coding)\"", ",", "\n", ")", "\n", "parent_parser", ".", "add_argument", "(", "\n", "\"-v\"", ",", "\n", "\"--verbose\"", ",", "\n", "action", "=", "\"store_true\"", ",", "\n", "help", "=", "\"verbose mode\"", ",", "\n", ")", "\n", "parent_parser", ".", "add_argument", "(", "\n", "\"-p\"", ",", "\n", "\"--path\"", ",", "\n", "dest", "=", "\"paths\"", ",", "\n", "type", "=", "str", ",", "\n", "nargs", "=", "\"*\"", ",", "\n", "required", "=", "True", ",", "\n", "help", "=", "\"checkpoint path\"", ",", "\n", ")", "\n", "return", "parent_parser", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.eval_model.__main__.main": [[231, 276], ["__main__.setup_args", "setup_args.parse_args", "__main__.collect_images", "compressai.set_entropy_coder", "collections.defaultdict", "print", "len", "print", "sys.exit", "load_func", "model.to.update", "__main__.eval_model", "eval_model.items", "sys.stderr.write", "sys.stderr.flush", "json.dumps", "sys.stderr.write", "sys.stderr.flush", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "model.to.to", "results[].append", "log_fmt.format"], "function", ["home.repos.pwc.inspect_result.googolxx_stf.eval_model.__main__.setup_args", "home.repos.pwc.inspect_result.googolxx_stf.None.train.parse_args", "home.repos.pwc.inspect_result.googolxx_stf.eval_model.__main__.collect_images", "home.repos.pwc.inspect_result.googolxx_stf.compressai.__init__.set_entropy_coder", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.update", "home.repos.pwc.inspect_result.googolxx_stf.eval_model.__main__.eval_model"], ["", "def", "main", "(", "argv", ")", ":", "\n", "    ", "parser", "=", "setup_args", "(", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", "argv", ")", "\n", "\n", "filepaths", "=", "collect_images", "(", "args", ".", "dataset", ")", "\n", "if", "len", "(", "filepaths", ")", "==", "0", ":", "\n", "        ", "print", "(", "\"Error: no images found in directory.\"", ",", "file", "=", "sys", ".", "stderr", ")", "\n", "sys", ".", "exit", "(", "1", ")", "\n", "\n", "", "compressai", ".", "set_entropy_coder", "(", "args", ".", "entropy_coder", ")", "\n", "\n", "runs", "=", "args", ".", "paths", "\n", "opts", "=", "(", "args", ".", "architecture", ",", ")", "\n", "load_func", "=", "load_checkpoint", "\n", "log_fmt", "=", "\"\\rEvaluating {run:s}\"", "\n", "\n", "results", "=", "defaultdict", "(", "list", ")", "\n", "for", "run", "in", "runs", ":", "\n", "        ", "if", "args", ".", "verbose", ":", "\n", "            ", "sys", ".", "stderr", ".", "write", "(", "log_fmt", ".", "format", "(", "*", "opts", ",", "run", "=", "run", ")", ")", "\n", "sys", ".", "stderr", ".", "flush", "(", ")", "\n", "", "model", "=", "load_func", "(", "*", "opts", ",", "run", ")", "\n", "if", "args", ".", "cuda", "and", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "model", "=", "model", ".", "to", "(", "\"cuda\"", ")", "\n", "\n", "", "model", ".", "update", "(", "force", "=", "True", ")", "\n", "\n", "metrics", "=", "eval_model", "(", "model", ",", "filepaths", ",", "args", ".", "entropy_estimation", ",", "args", ".", "half", ",", "args", ".", "recon_path", ")", "\n", "for", "k", ",", "v", "in", "metrics", ".", "items", "(", ")", ":", "\n", "            ", "results", "[", "k", "]", ".", "append", "(", "v", ")", "\n", "\n", "", "", "if", "args", ".", "verbose", ":", "\n", "        ", "sys", ".", "stderr", ".", "write", "(", "\"\\n\"", ")", "\n", "sys", ".", "stderr", ".", "flush", "(", ")", "\n", "\n", "", "description", "=", "(", "\n", "\"entropy estimation\"", "if", "args", ".", "entropy_estimation", "else", "args", ".", "entropy_coder", "\n", ")", "\n", "output", "=", "{", "\n", "\"name\"", ":", "args", ".", "architecture", ",", "\n", "\"description\"", ":", "f\"Inference ({description})\"", ",", "\n", "\"results\"", ":", "results", ",", "\n", "}", "\n", "\n", "print", "(", "json", ".", "dumps", "(", "output", ",", "indent", "=", "2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.datasets.utils.ImageFolder.__init__": [[42, 51], ["splitdir.is_dir", "RuntimeError", "pathlib.Path", "splitdir.iterdir", "f.is_file"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "root", ",", "transform", "=", "None", ",", "split", "=", "\"train\"", ")", ":", "\n", "        ", "splitdir", "=", "Path", "(", "root", ")", "/", "split", "/", "\"data\"", "\n", "\n", "if", "not", "splitdir", ".", "is_dir", "(", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "f'Invalid directory \"{root}\"'", ")", "\n", "\n", "", "self", ".", "samples", "=", "[", "f", "for", "f", "in", "splitdir", ".", "iterdir", "(", ")", "if", "f", ".", "is_file", "(", ")", "]", "\n", "\n", "self", ".", "transform", "=", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.datasets.utils.ImageFolder.__getitem__": [[52, 64], ["PIL.Image.open().convert", "utils.ImageFolder.transform", "PIL.Image.open"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            index (int): Index\n\n        Returns:\n            img: `PIL.Image.Image` or transformed `PIL.Image.Image`.\n        \"\"\"", "\n", "img", "=", "Image", ".", "open", "(", "self", ".", "samples", "[", "index", "]", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "if", "self", ".", "transform", ":", "\n", "            ", "return", "self", ".", "transform", "(", "img", ")", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.datasets.utils.ImageFolder.__len__": [[65, 67], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "samples", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.Win_noShift_Attention.__init__": [[48, 81], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "ResidualUnit", "ResidualUnit", "ResidualUnit", "win_attention.WinBasedAttention", "ResidualUnit", "ResidualUnit", "ResidualUnit", "layers.conv1x1", "torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.GELU", "torch.GELU", "layers.Win_noShift_Attention.conv", "layers.Win_noShift_Attention.relu", "layers.conv1x1", "torch.GELU", "torch.GELU", "layers.conv3x3", "torch.GELU", "torch.GELU", "layers.conv1x1"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.__init__", "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.conv1x1", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.__init__", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.conv", "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.conv1x1", "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.conv3x3", "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.conv1x1"], ["def", "__init__", "(", "self", ",", "dim", ",", "num_heads", "=", "8", ",", "window_size", "=", "8", ",", "shift_size", "=", "0", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "N", "=", "dim", "\n", "\n", "class", "ResidualUnit", "(", "nn", ".", "Module", ")", ":", "\n", "            ", "\"\"\"Simple residual unit.\"\"\"", "\n", "\n", "def", "__init__", "(", "self", ")", ":", "\n", "                ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "conv1x1", "(", "N", ",", "N", "//", "2", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv3x3", "(", "N", "//", "2", ",", "N", "//", "2", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv1x1", "(", "N", "//", "2", ",", "N", ")", ",", "\n", ")", "\n", "self", ".", "relu", "=", "nn", ".", "GELU", "(", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "                ", "identity", "=", "x", "\n", "out", "=", "self", ".", "conv", "(", "x", ")", "\n", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n", "", "", "self", ".", "conv_a", "=", "nn", ".", "Sequential", "(", "ResidualUnit", "(", ")", ",", "ResidualUnit", "(", ")", ",", "ResidualUnit", "(", ")", ")", "\n", "\n", "self", ".", "conv_b", "=", "nn", ".", "Sequential", "(", "\n", "WinBasedAttention", "(", "dim", "=", "dim", ",", "num_heads", "=", "num_heads", ",", "window_size", "=", "window_size", ",", "shift_size", "=", "shift_size", ")", ",", "\n", "ResidualUnit", "(", ")", ",", "\n", "ResidualUnit", "(", ")", ",", "\n", "ResidualUnit", "(", ")", ",", "\n", "conv1x1", "(", "N", ",", "N", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.Win_noShift_Attention.forward": [[83, 90], ["layers.Win_noShift_Attention.conv_a", "layers.Win_noShift_Attention.conv_b", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "a", "=", "self", ".", "conv_a", "(", "x", ")", "\n", "b", "=", "self", ".", "conv_b", "(", "x", ")", "\n", "out", "=", "a", "*", "torch", ".", "sigmoid", "(", "b", ")", "\n", "out", "+=", "identity", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.conv3x3": [[29, 32], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_ch", ":", "int", ",", "out_ch", ":", "int", ",", "stride", ":", "int", "=", "1", ")", "->", "nn", ".", "Module", ":", "\n", "    ", "\"\"\"3x3 convolution with padding.\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_ch", ",", "out_ch", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.subpel_conv3x3": [[34, 38], ["torch.Sequential", "torch.Conv2d", "torch.PixelShuffle"], "function", ["None"], ["", "def", "subpel_conv3x3", "(", "in_ch", ":", "int", ",", "out_ch", ":", "int", ",", "r", ":", "int", "=", "1", ")", "->", "nn", ".", "Sequential", ":", "\n", "    ", "\"\"\"3x3 sub-pixel convolution for up-sampling.\"\"\"", "\n", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_ch", ",", "out_ch", "*", "r", "**", "2", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "PixelShuffle", "(", "r", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.conv1x1": [[41, 44], ["torch.Conv2d"], "function", ["None"], ["", "def", "conv1x1", "(", "in_ch", ":", "int", ",", "out_ch", ":", "int", ",", "stride", ":", "int", "=", "1", ")", "->", "nn", ".", "Module", ":", "\n", "    ", "\"\"\"1x1 convolution.\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_ch", ",", "out_ch", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.layers.gdn.GDN.__init__": [[39, 61], ["torch.Module.__init__", "float", "float", "bool", "compressai.ops.parametrizers.NonNegativeParametrizer", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "gdn.GDN.beta_reparam.init", "torch.Parameter", "torch.Parameter", "torch.Parameter", "compressai.ops.parametrizers.NonNegativeParametrizer", "gdn.GDN.gamma_reparam.init", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.__init__", "home.repos.pwc.inspect_result.googolxx_stf.ops.parametrizers.NonNegativeParametrizer.init", "home.repos.pwc.inspect_result.googolxx_stf.ops.parametrizers.NonNegativeParametrizer.init"], ["def", "__init__", "(", "\n", "self", ",", "\n", "in_channels", ":", "int", ",", "\n", "inverse", ":", "bool", "=", "False", ",", "\n", "beta_min", ":", "float", "=", "1e-6", ",", "\n", "gamma_init", ":", "float", "=", "0.1", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "beta_min", "=", "float", "(", "beta_min", ")", "\n", "gamma_init", "=", "float", "(", "gamma_init", ")", "\n", "self", ".", "inverse", "=", "bool", "(", "inverse", ")", "\n", "\n", "self", ".", "beta_reparam", "=", "NonNegativeParametrizer", "(", "minimum", "=", "beta_min", ")", "\n", "beta", "=", "torch", ".", "ones", "(", "in_channels", ")", "\n", "beta", "=", "self", ".", "beta_reparam", ".", "init", "(", "beta", ")", "\n", "self", ".", "beta", "=", "nn", ".", "Parameter", "(", "beta", ")", "\n", "\n", "self", ".", "gamma_reparam", "=", "NonNegativeParametrizer", "(", ")", "\n", "gamma", "=", "gamma_init", "*", "torch", ".", "eye", "(", "in_channels", ")", "\n", "gamma", "=", "self", ".", "gamma_reparam", ".", "init", "(", "gamma", ")", "\n", "self", ".", "gamma", "=", "nn", ".", "Parameter", "(", "gamma", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.layers.gdn.GDN.forward": [[62, 76], ["x.size", "gdn.GDN.beta_reparam", "gdn.GDN.gamma_reparam", "gamma.reshape.reshape.reshape", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.rsqrt", "torch.rsqrt", "torch.rsqrt", "torch.rsqrt", "torch.rsqrt", "torch.rsqrt", "torch.rsqrt", "torch.rsqrt", "torch.rsqrt"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ":", "Tensor", ")", "->", "Tensor", ":", "\n", "        ", "_", ",", "C", ",", "_", ",", "_", "=", "x", ".", "size", "(", ")", "\n", "\n", "beta", "=", "self", ".", "beta_reparam", "(", "self", ".", "beta", ")", "\n", "gamma", "=", "self", ".", "gamma_reparam", "(", "self", ".", "gamma", ")", "\n", "gamma", "=", "gamma", ".", "reshape", "(", "C", ",", "C", ",", "1", ",", "1", ")", "\n", "norm", "=", "F", ".", "conv2d", "(", "x", "**", "2", ",", "gamma", ",", "beta", ")", "# _ C _ _", "\n", "\n", "if", "self", ".", "inverse", ":", "\n", "            ", "norm", "=", "torch", ".", "sqrt", "(", "norm", ")", "\n", "", "else", ":", "\n", "            ", "norm", "=", "torch", ".", "rsqrt", "(", "norm", ")", "\n", "", "out", "=", "x", "*", "norm", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.layers.gdn.GDN1.forward": [[91, 105], ["x.size", "gdn.GDN1.beta_reparam", "gdn.GDN1.gamma_reparam", "gamma.reshape.reshape.reshape", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs"], "methods", ["None"], ["def", "forward", "(", "self", ",", "x", ":", "Tensor", ")", "->", "Tensor", ":", "\n", "        ", "_", ",", "C", ",", "_", ",", "_", "=", "x", ".", "size", "(", ")", "\n", "\n", "beta", "=", "self", ".", "beta_reparam", "(", "self", ".", "beta", ")", "\n", "gamma", "=", "self", ".", "gamma_reparam", "(", "self", ".", "gamma", ")", "\n", "gamma", "=", "gamma", ".", "reshape", "(", "C", ",", "C", ",", "1", ",", "1", ")", "\n", "norm", "=", "F", ".", "conv2d", "(", "torch", ".", "abs", "(", "x", ")", ",", "gamma", ",", "beta", ")", "\n", "\n", "if", "not", "self", ".", "inverse", ":", "\n", "            ", "norm", "=", "1.0", "/", "norm", "\n", "\n", "", "out", "=", "x", "*", "norm", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.layers.win_attention.WindowAttention.__init__": [[50, 83], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "relative_coords.permute().contiguous.permute().contiguous.permute().contiguous", "relative_coords.permute().contiguous.permute().contiguous.sum", "win_attention.WindowAttention.register_buffer", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "timm.models.layers.trunc_normal_", "torch.Softmax", "torch.Softmax", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "relative_coords.permute().contiguous.permute().contiguous.permute"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.__init__"], ["def", "__init__", "(", "self", ",", "dim", "=", "192", ",", "window_size", "=", "(", "8", ",", "8", ")", ",", "num_heads", "=", "8", ",", "qkv_bias", "=", "True", ",", "qk_scale", "=", "None", ",", "attn_drop", "=", "0.", ",", "proj_drop", "=", "0.", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "window_size", "=", "window_size", "\n", "self", ".", "num_heads", "=", "num_heads", "\n", "head_dim", "=", "dim", "//", "num_heads", "\n", "self", ".", "scale", "=", "qk_scale", "or", "head_dim", "**", "-", "0.5", "\n", "\n", "# define a parameter table of relative position bias", "\n", "self", ".", "relative_position_bias_table", "=", "nn", ".", "Parameter", "(", "\n", "torch", ".", "zeros", "(", "(", "2", "*", "window_size", "[", "0", "]", "-", "1", ")", "*", "(", "2", "*", "window_size", "[", "1", "]", "-", "1", ")", ",", "num_heads", ")", ")", "# 2*Wh-1 * 2*Ww-1, nH", "\n", "\n", "# get pair-wise relative position index for each token inside the window", "\n", "coords_h", "=", "torch", ".", "arange", "(", "self", ".", "window_size", "[", "0", "]", ")", "\n", "coords_w", "=", "torch", ".", "arange", "(", "self", ".", "window_size", "[", "1", "]", ")", "\n", "coords", "=", "torch", ".", "stack", "(", "torch", ".", "meshgrid", "(", "[", "coords_h", ",", "coords_w", "]", ")", ")", "# 2, Wh, Ww", "\n", "coords_flatten", "=", "torch", ".", "flatten", "(", "coords", ",", "1", ")", "# 2, Wh*Ww", "\n", "relative_coords", "=", "coords_flatten", "[", ":", ",", ":", ",", "None", "]", "-", "coords_flatten", "[", ":", ",", "None", ",", ":", "]", "# 2, Wh*Ww, Wh*Ww", "\n", "relative_coords", "=", "relative_coords", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "contiguous", "(", ")", "# Wh*Ww, Wh*Ww, 2", "\n", "relative_coords", "[", ":", ",", ":", ",", "0", "]", "+=", "self", ".", "window_size", "[", "0", "]", "-", "1", "# shift to start from 0", "\n", "relative_coords", "[", ":", ",", ":", ",", "1", "]", "+=", "self", ".", "window_size", "[", "1", "]", "-", "1", "\n", "relative_coords", "[", ":", ",", ":", ",", "0", "]", "*=", "2", "*", "self", ".", "window_size", "[", "1", "]", "-", "1", "\n", "relative_position_index", "=", "relative_coords", ".", "sum", "(", "-", "1", ")", "# Wh*Ww, Wh*Ww", "\n", "self", ".", "register_buffer", "(", "\"relative_position_index\"", ",", "relative_position_index", ")", "\n", "\n", "self", ".", "qkv", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", "*", "3", ",", "bias", "=", "qkv_bias", ")", "\n", "self", ".", "attn_drop", "=", "nn", ".", "Dropout", "(", "attn_drop", ")", "\n", "self", ".", "proj", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", ")", "\n", "self", ".", "proj_drop", "=", "nn", ".", "Dropout", "(", "proj_drop", ")", "\n", "\n", "trunc_normal_", "(", "self", ".", "relative_position_bias_table", ",", "std", "=", ".02", ")", "\n", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.layers.win_attention.WindowAttention.forward": [[84, 116], ["win_attention.WindowAttention.qkv().reshape().permute().contiguous", "win_attention.WindowAttention.relative_position_bias_table[].view", "relative_position_bias.permute().contiguous.permute().contiguous.permute().contiguous", "win_attention.WindowAttention.attn_drop", "win_attention.WindowAttention.proj", "win_attention.WindowAttention.proj_drop", "k.transpose", "relative_position_bias.permute().contiguous.permute().contiguous.unsqueeze", "win_attention.WindowAttention.view", "win_attention.WindowAttention.softmax", "win_attention.WindowAttention.softmax", "win_attention.WindowAttention.qkv().reshape().permute", "relative_position_bias.permute().contiguous.permute().contiguous.permute", "win_attention.WindowAttention.view", "mask.unsqueeze().unsqueeze", "win_attention.WindowAttention.qkv().reshape", "win_attention.WindowAttention.relative_position_index.view", "mask.unsqueeze", "win_attention.WindowAttention.qkv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "mask", "=", "None", ")", ":", "\n", "        ", "\"\"\" Forward function.\n        Args:\n            x: input features with shape of (num_windows*B, N, C)\n            mask: (0/-inf) mask with shape of (num_windows, Wh*Ww, Wh*Ww) or None\n        \"\"\"", "\n", "B_", ",", "N", ",", "C", "=", "x", ".", "shape", "\n", "qkv", "=", "self", ".", "qkv", "(", "x", ")", ".", "reshape", "(", "B_", ",", "N", ",", "3", ",", "self", ".", "num_heads", ",", "C", "//", "self", ".", "num_heads", ")", ".", "permute", "(", "2", ",", "0", ",", "3", ",", "1", ",", "4", ")", ".", "contiguous", "(", ")", "\n", "q", ",", "k", ",", "v", "=", "qkv", "[", "0", "]", ",", "qkv", "[", "1", "]", ",", "qkv", "[", "2", "]", "# make torchscript happy (cannot use tensor as tuple)", "\n", "\n", "q", "=", "q", "*", "self", ".", "scale", "\n", "attn", "=", "(", "q", "@", "k", ".", "transpose", "(", "-", "2", ",", "-", "1", ")", ")", "\n", "\n", "relative_position_bias", "=", "self", ".", "relative_position_bias_table", "[", "self", ".", "relative_position_index", ".", "view", "(", "-", "1", ")", "]", ".", "view", "(", "\n", "self", ".", "window_size", "[", "0", "]", "*", "self", ".", "window_size", "[", "1", "]", ",", "self", ".", "window_size", "[", "0", "]", "*", "self", ".", "window_size", "[", "1", "]", ",", "-", "1", ")", "# Wh*Ww,Wh*Ww,nH", "\n", "relative_position_bias", "=", "relative_position_bias", ".", "permute", "(", "2", ",", "0", ",", "1", ")", ".", "contiguous", "(", ")", "# nH, Wh*Ww, Wh*Ww", "\n", "attn", "=", "attn", "+", "relative_position_bias", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "if", "mask", "is", "not", "None", ":", "\n", "            ", "nW", "=", "mask", ".", "shape", "[", "0", "]", "\n", "attn", "=", "attn", ".", "view", "(", "B_", "//", "nW", ",", "nW", ",", "self", ".", "num_heads", ",", "N", ",", "N", ")", "+", "mask", ".", "unsqueeze", "(", "1", ")", ".", "unsqueeze", "(", "0", ")", "\n", "attn", "=", "attn", ".", "view", "(", "-", "1", ",", "self", ".", "num_heads", ",", "N", ",", "N", ")", "\n", "attn", "=", "self", ".", "softmax", "(", "attn", ")", "\n", "", "else", ":", "\n", "            ", "attn", "=", "self", ".", "softmax", "(", "attn", ")", "\n", "\n", "", "attn", "=", "self", ".", "attn_drop", "(", "attn", ")", "\n", "\n", "x", "=", "(", "attn", "@", "v", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "reshape", "(", "B_", ",", "N", ",", "C", ")", "\n", "x", "=", "self", ".", "proj", "(", "x", ")", "\n", "x", "=", "self", ".", "proj_drop", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.layers.win_attention.WinBasedAttention.__init__": [[136, 151], ["torch.Module.__init__", "win_attention.WindowAttention", "timm.models.layers.DropPath", "torch.Identity", "torch.Identity", "timm.models.layers.to_2tuple"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.__init__"], ["def", "__init__", "(", "self", ",", "dim", "=", "192", ",", "num_heads", "=", "8", ",", "window_size", "=", "8", ",", "shift_size", "=", "0", ",", "\n", "qkv_bias", "=", "True", ",", "qk_scale", "=", "None", ",", "drop", "=", "0.", ",", "attn_drop", "=", "0.", ",", "drop_path", "=", "0.", ",", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "num_heads", "=", "num_heads", "\n", "self", ".", "window_size", "=", "window_size", "\n", "self", ".", "shift_size", "=", "shift_size", "\n", "\n", "assert", "0", "<=", "self", ".", "shift_size", "<", "self", ".", "window_size", ",", "\"shift_size must in 0-window_size\"", "\n", "\n", "self", ".", "attn", "=", "WindowAttention", "(", "\n", "dim", ",", "window_size", "=", "to_2tuple", "(", "self", ".", "window_size", ")", ",", "num_heads", "=", "num_heads", ",", "\n", "qkv_bias", "=", "qkv_bias", ",", "qk_scale", "=", "qk_scale", ",", "attn_drop", "=", "attn_drop", ",", "proj_drop", "=", "drop", ")", "\n", "\n", "self", ".", "drop_path", "=", "DropPath", "(", "drop_path", ")", "if", "drop_path", ">", "0.", "else", "nn", ".", "Identity", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.layers.win_attention.WinBasedAttention.forward": [[153, 208], ["torch.roll.permute", "torch.roll.permute", "win_attention.window_partition", "x_windows.view.view.view", "win_attention.WinBasedAttention.attn", "attn_windows.view.view.view", "win_attention.window_reverse", "torch.roll.permute().contiguous", "torch.roll.permute().contiguous", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "win_attention.window_partition", "mask_windows.view.view.view", "attn_mask.masked_fill().masked_fill.masked_fill().masked_fill.masked_fill().masked_fill", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "win_attention.WinBasedAttention.drop_path", "slice", "slice", "slice", "slice", "slice", "slice", "mask_windows.view.view.unsqueeze", "mask_windows.view.view.unsqueeze", "float", "torch.roll.permute", "torch.roll.permute", "attn_mask.masked_fill().masked_fill.masked_fill().masked_fill.masked_fill", "float"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.models.stf.window_partition", "home.repos.pwc.inspect_result.googolxx_stf.models.stf.window_reverse", "home.repos.pwc.inspect_result.googolxx_stf.models.stf.window_partition"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "B", ",", "C", ",", "H", ",", "W", "=", "x", ".", "shape", "\n", "shortcut", "=", "x", "\n", "x", "=", "x", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "\n", "\n", "if", "self", ".", "shift_size", ">", "0", ":", "\n", "# calculate attention mask for SW-MSA", "\n", "            ", "img_mask", "=", "torch", ".", "zeros", "(", "(", "1", ",", "H", ",", "W", ",", "1", ")", ",", "device", "=", "x", ".", "device", ")", "\n", "h_slices", "=", "(", "slice", "(", "0", ",", "-", "self", ".", "window_size", ")", ",", "\n", "slice", "(", "-", "self", ".", "window_size", ",", "-", "self", ".", "shift_size", ")", ",", "\n", "slice", "(", "-", "self", ".", "shift_size", ",", "None", ")", ")", "\n", "w_slices", "=", "(", "slice", "(", "0", ",", "-", "self", ".", "window_size", ")", ",", "\n", "slice", "(", "-", "self", ".", "window_size", ",", "-", "self", ".", "shift_size", ")", ",", "\n", "slice", "(", "-", "self", ".", "shift_size", ",", "None", ")", ")", "\n", "cnt", "=", "0", "\n", "for", "h", "in", "h_slices", ":", "\n", "                ", "for", "w", "in", "w_slices", ":", "\n", "                    ", "img_mask", "[", ":", ",", "h", ",", "w", ",", ":", "]", "=", "cnt", "\n", "cnt", "+=", "1", "\n", "\n", "", "", "mask_windows", "=", "window_partition", "(", "img_mask", ",", "self", ".", "window_size", ")", "# nW, window_size, window_size, 1", "\n", "mask_windows", "=", "mask_windows", ".", "view", "(", "-", "1", ",", "self", ".", "window_size", "*", "self", ".", "window_size", ")", "\n", "attn_mask", "=", "mask_windows", ".", "unsqueeze", "(", "1", ")", "-", "mask_windows", ".", "unsqueeze", "(", "2", ")", "\n", "attn_mask", "=", "attn_mask", ".", "masked_fill", "(", "attn_mask", "!=", "0", ",", "float", "(", "-", "100.0", ")", ")", ".", "masked_fill", "(", "attn_mask", "==", "0", ",", "float", "(", "0.0", ")", ")", "\n", "", "else", ":", "\n", "            ", "attn_mask", "=", "None", "\n", "\n", "# cyclic shift", "\n", "", "if", "self", ".", "shift_size", ">", "0", ":", "\n", "            ", "shifted_x", "=", "torch", ".", "roll", "(", "x", ",", "shifts", "=", "(", "-", "self", ".", "shift_size", ",", "-", "self", ".", "shift_size", ")", ",", "dims", "=", "(", "1", ",", "2", ")", ")", "\n", "", "else", ":", "\n", "            ", "shifted_x", "=", "x", "\n", "\n", "# partition windows", "\n", "", "x_windows", "=", "window_partition", "(", "shifted_x", ",", "self", ".", "window_size", ")", "\n", "x_windows", "=", "x_windows", ".", "view", "(", "-", "1", ",", "self", ".", "window_size", "*", "self", ".", "window_size", ",", "C", ")", "\n", "\n", "# W-MSA/SW-MSA", "\n", "attn_windows", "=", "self", ".", "attn", "(", "x_windows", ",", "mask", "=", "attn_mask", ")", "\n", "\n", "# merge windows", "\n", "attn_windows", "=", "attn_windows", ".", "view", "(", "-", "1", ",", "self", ".", "window_size", ",", "self", ".", "window_size", ",", "C", ")", "\n", "shifted_x", "=", "window_reverse", "(", "attn_windows", ",", "self", ".", "window_size", ",", "H", ",", "W", ")", "\n", "\n", "# reverse cyclic shift", "\n", "if", "self", ".", "shift_size", ">", "0", ":", "\n", "            ", "x", "=", "torch", ".", "roll", "(", "shifted_x", ",", "shifts", "=", "(", "self", ".", "shift_size", ",", "self", ".", "shift_size", ")", ",", "dims", "=", "(", "1", ",", "2", ")", ")", "\n", "", "else", ":", "\n", "            ", "x", "=", "shifted_x", "\n", "\n", "", "x", "=", "x", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "x", "=", "shortcut", "+", "self", ".", "drop_path", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.layers.win_attention.window_partition": [[6, 19], ["x.view.view", "x.view.permute().contiguous().view", "x.view.permute().contiguous", "x.view.permute"], "function", ["None"], ["def", "window_partition", "(", "x", ",", "window_size", "=", "8", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        x: (B, H, W, C)\n        window_size (int): window size\n    Returns:\n        windows: (num_windows*B, window_size, window_size, C)\n    \"\"\"", "\n", "B", ",", "H", ",", "W", ",", "C", "=", "x", ".", "shape", "\n", "x", "=", "x", ".", "view", "(", "B", ",", "H", "//", "window_size", ",", "window_size", ",", "W", "//", "window_size", ",", "window_size", ",", "C", ")", "\n", "windows", "=", "x", ".", "permute", "(", "0", ",", "1", ",", "3", ",", "2", ",", "4", ",", "5", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "window_size", ",", "window_size", ",", "C", ")", "\n", "\n", "return", "windows", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.layers.win_attention.window_reverse": [[21, 35], ["int", "windows.view", "x.permute().contiguous().view.permute().contiguous().view", "x.permute().contiguous().view.permute().contiguous", "x.permute().contiguous().view.permute"], "function", ["None"], ["", "def", "window_reverse", "(", "windows", ",", "window_size", ",", "H", ",", "W", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        windows: (num_windows*B, window_size, window_size, C)\n        window_size (int): Window size\n        H (int): Height of image\n        W (int): Width of image\n    Returns:\n        x: (B, H, W, C)\n    \"\"\"", "\n", "B", "=", "int", "(", "windows", ".", "shape", "[", "0", "]", "/", "(", "H", "*", "W", "/", "window_size", "/", "window_size", ")", ")", "\n", "x", "=", "windows", ".", "view", "(", "B", ",", "H", "//", "window_size", ",", "W", "//", "window_size", ",", "window_size", ",", "window_size", ",", "-", "1", ")", "\n", "x", "=", "x", ".", "permute", "(", "0", ",", "1", ",", "3", ",", "2", ",", "4", ",", "5", ")", ".", "contiguous", "(", ")", ".", "view", "(", "B", ",", "H", ",", "W", ",", "-", "1", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.ops.ops.ste_round": [[20, 35], ["torch.round", "x.detach"], "function", ["None"], ["def", "ste_round", "(", "x", ":", "Tensor", ")", "->", "Tensor", ":", "\n", "    ", "\"\"\"\n    Rounding with non-zero gradients. Gradients are approximated by replacing\n    the derivative by the identity function.\n\n    Used in `\"Lossy Image Compression with Compressive Autoencoders\"\n    <https://arxiv.org/abs/1703.00395>`_\n\n    .. note::\n\n        Implemented with the pytorch `detach()` reparametrization trick:\n\n        `x_round = x_round - x.detach() + x`\n    \"\"\"", "\n", "return", "torch", ".", "round", "(", "x", ")", "-", "x", ".", "detach", "(", ")", "+", "x", "\n", "", ""]], "home.repos.pwc.inspect_result.googolxx_stf.ops.parametrizers.NonNegativeParametrizer.__init__": [[32, 42], ["torch.Module.__init__", "float", "float", "parametrizers.NonNegativeParametrizer.register_buffer", "bound_ops.LowerBound", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.__init__"], ["def", "__init__", "(", "self", ",", "minimum", ":", "float", "=", "0", ",", "reparam_offset", ":", "float", "=", "2", "**", "-", "18", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "minimum", "=", "float", "(", "minimum", ")", "\n", "self", ".", "reparam_offset", "=", "float", "(", "reparam_offset", ")", "\n", "\n", "pedestal", "=", "self", ".", "reparam_offset", "**", "2", "\n", "self", ".", "register_buffer", "(", "\"pedestal\"", ",", "torch", ".", "Tensor", "(", "[", "pedestal", "]", ")", ")", "\n", "bound", "=", "(", "self", ".", "minimum", "+", "self", ".", "reparam_offset", "**", "2", ")", "**", "0.5", "\n", "self", ".", "lower_bound", "=", "LowerBound", "(", "bound", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.ops.parametrizers.NonNegativeParametrizer.init": [[43, 45], ["torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.max", "torch.max", "torch.max", "torch.max"], "methods", ["None"], ["", "def", "init", "(", "self", ",", "x", ":", "Tensor", ")", "->", "Tensor", ":", "\n", "        ", "return", "torch", ".", "sqrt", "(", "torch", ".", "max", "(", "x", "+", "self", ".", "pedestal", ",", "self", ".", "pedestal", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.ops.parametrizers.NonNegativeParametrizer.forward": [[46, 50], ["parametrizers.NonNegativeParametrizer.lower_bound"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.ops.bound_ops.LowerBound.lower_bound"], ["", "def", "forward", "(", "self", ",", "x", ":", "Tensor", ")", "->", "Tensor", ":", "\n", "        ", "out", "=", "self", ".", "lower_bound", "(", "x", ")", "\n", "out", "=", "out", "**", "2", "-", "self", ".", "pedestal", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.ops.bound_ops.LowerBoundFunction.forward": [[33, 37], ["ctx.save_for_backward", "bound_ops.lower_bound_fwd"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.ops.bound_ops.lower_bound_fwd"], ["@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "x", ",", "bound", ")", ":", "\n", "        ", "ctx", ".", "save_for_backward", "(", "x", ",", "bound", ")", "\n", "return", "lower_bound_fwd", "(", "x", ",", "bound", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.ops.bound_ops.LowerBoundFunction.backward": [[38, 42], ["bound_ops.lower_bound_bwd"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.ops.bound_ops.lower_bound_bwd"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_output", ")", ":", "\n", "        ", "x", ",", "bound", "=", "ctx", ".", "saved_tensors", "\n", "return", "lower_bound_bwd", "(", "x", ",", "bound", ",", "grad_output", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.ops.bound_ops.LowerBound.__init__": [[54, 57], ["torch.Module.__init__", "bound_ops.LowerBound.register_buffer", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "float"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.__init__"], ["def", "__init__", "(", "self", ",", "bound", ":", "float", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "register_buffer", "(", "\"bound\"", ",", "torch", ".", "Tensor", "(", "[", "float", "(", "bound", ")", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.ops.bound_ops.LowerBound.lower_bound": [[58, 61], ["LowerBoundFunction.apply"], "methods", ["None"], ["", "@", "torch", ".", "jit", ".", "unused", "\n", "def", "lower_bound", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "LowerBoundFunction", ".", "apply", "(", "x", ",", "self", ".", "bound", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.ops.bound_ops.LowerBound.forward": [[62, 66], ["torch.jit.is_scripting", "torch.jit.is_scripting", "torch.jit.is_scripting", "torch.jit.is_scripting", "bound_ops.LowerBound.lower_bound", "torch.max", "torch.max", "torch.max", "torch.max"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.ops.bound_ops.LowerBound.lower_bound"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "torch", ".", "jit", ".", "is_scripting", "(", ")", ":", "\n", "            ", "return", "torch", ".", "max", "(", "x", ",", "self", ".", "bound", ")", "\n", "", "return", "self", ".", "lower_bound", "(", "x", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.googolxx_stf.ops.bound_ops.lower_bound_fwd": [[21, 23], ["torch.max", "torch.max"], "function", ["None"], ["def", "lower_bound_fwd", "(", "x", ":", "Tensor", ",", "bound", ":", "Tensor", ")", "->", "Tensor", ":", "\n", "    ", "return", "torch", ".", "max", "(", "x", ",", "bound", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.ops.bound_ops.lower_bound_bwd": [[25, 28], ["None"], "function", ["None"], ["", "def", "lower_bound_bwd", "(", "x", ":", "Tensor", ",", "bound", ":", "Tensor", ",", "grad_output", ":", "Tensor", ")", ":", "\n", "    ", "pass_through_if", "=", "(", "x", ">=", "bound", ")", "|", "(", "grad_output", "<", "0", ")", "\n", "return", "pass_through_if", "*", "grad_output", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.base.CompressionModel.__init__": [[15, 21], ["torch.Module.__init__", "base.CompressionModel._initialize_weights"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.__init__", "home.repos.pwc.inspect_result.googolxx_stf.models.base.CompressionModel._initialize_weights"], ["def", "__init__", "(", "self", ",", "init_weights", "=", "True", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "# self.entropy_bottleneck = EntropyBottleneck(entropy_bottleneck_channels)", "\n", "\n", "if", "init_weights", ":", "\n", "            ", "self", ".", "_initialize_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.base.CompressionModel.aux_loss": [[22, 30], ["sum", "m.loss", "base.CompressionModel.modules", "isinstance"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyBottleneck.loss"], ["", "", "def", "aux_loss", "(", "self", ")", ":", "\n", "        ", "\"\"\"Return the aggregated loss over the auxiliary entropy bottleneck\n        module(s).\n        \"\"\"", "\n", "aux_loss", "=", "sum", "(", "\n", "m", ".", "loss", "(", ")", "for", "m", "in", "self", ".", "modules", "(", ")", "if", "isinstance", "(", "m", ",", "EntropyBottleneck", ")", "\n", ")", "\n", "return", "aux_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.base.CompressionModel._initialize_weights": [[31, 37], ["base.CompressionModel.modules", "isinstance", "torch.init.kaiming_normal_", "torch.init.zeros_"], "methods", ["None"], ["", "def", "_initialize_weights", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "(", "nn", ".", "Conv2d", ",", "nn", ".", "ConvTranspose2d", ")", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "nn", ".", "init", ".", "zeros_", "(", "m", ".", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.base.CompressionModel.forward": [[38, 40], ["NotImplementedError"], "methods", ["None"], ["", "", "", "", "def", "forward", "(", "self", ",", "*", "args", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.base.CompressionModel.update": [[41, 61], ["base.CompressionModel.children", "m.update", "isinstance"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.update"], ["", "def", "update", "(", "self", ",", "force", "=", "False", ")", ":", "\n", "        ", "\"\"\"Updates the entropy bottleneck(s) CDF values.\n\n        Needs to be called once after training to be able to later perform the\n        evaluation with an actual entropy coder.\n\n        Args:\n            force (bool): overwrite previous values (default: False)\n\n        Returns:\n            updated (bool): True if one of the EntropyBottlenecks was updated.\n\n        \"\"\"", "\n", "updated", "=", "False", "\n", "for", "m", "in", "self", ".", "children", "(", ")", ":", "\n", "            ", "if", "not", "isinstance", "(", "m", ",", "EntropyBottleneck", ")", ":", "\n", "                ", "continue", "\n", "", "rv", "=", "m", ".", "update", "(", "force", "=", "force", ")", "\n", "updated", "|=", "rv", "\n", "", "return", "updated", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.base.CompressionModel.load_state_dict": [[62, 71], ["utils.update_registered_buffers", "super().load_state_dict"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.models.utils.update_registered_buffers", "home.repos.pwc.inspect_result.googolxx_stf.models.cnn.WACNN.load_state_dict"], ["", "def", "load_state_dict", "(", "self", ",", "state_dict", ")", ":", "\n", "# Dynamically update the entropy bottleneck buffers related to the CDFs", "\n", "        ", "update_registered_buffers", "(", "\n", "self", ".", "entropy_bottleneck", ",", "\n", "\"entropy_bottleneck\"", ",", "\n", "[", "\"_quantized_cdf\"", ",", "\"_offset\"", ",", "\"_cdf_length\"", "]", ",", "\n", "state_dict", ",", "\n", ")", "\n", "super", "(", ")", ".", "load_state_dict", "(", "state_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.stf.Mlp.__init__": [[25, 33], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "act_layer", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_features", ",", "hidden_features", "=", "None", ",", "out_features", "=", "None", ",", "act_layer", "=", "nn", ".", "GELU", ",", "drop", "=", "0.", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "out_features", "=", "out_features", "or", "in_features", "\n", "hidden_features", "=", "hidden_features", "or", "in_features", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "in_features", ",", "hidden_features", ")", "\n", "self", ".", "act", "=", "act_layer", "(", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "hidden_features", ",", "out_features", ")", "\n", "self", ".", "drop", "=", "nn", ".", "Dropout", "(", "drop", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.stf.Mlp.forward": [[34, 41], ["stf.Mlp.fc1", "stf.Mlp.act", "stf.Mlp.drop", "stf.Mlp.fc2", "stf.Mlp.drop"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "fc1", "(", "x", ")", "\n", "x", "=", "self", ".", "act", "(", "x", ")", "\n", "x", "=", "self", ".", "drop", "(", "x", ")", "\n", "x", "=", "self", ".", "fc2", "(", "x", ")", "\n", "x", "=", "self", ".", "drop", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.stf.WindowAttention.__init__": [[56, 89], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "relative_coords.permute().contiguous.permute().contiguous.permute().contiguous", "relative_coords.permute().contiguous.permute().contiguous.sum", "stf.WindowAttention.register_buffer", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Dropout", "timm.models.layers.trunc_normal_", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "relative_coords.permute().contiguous.permute().contiguous.permute"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", ",", "window_size", ",", "num_heads", ",", "qkv_bias", "=", "True", ",", "qk_scale", "=", "None", ",", "attn_drop", "=", "0.", ",", "proj_drop", "=", "0.", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "window_size", "=", "window_size", "# Wh, Ww", "\n", "self", ".", "num_heads", "=", "num_heads", "\n", "head_dim", "=", "dim", "//", "num_heads", "\n", "self", ".", "scale", "=", "qk_scale", "or", "head_dim", "**", "-", "0.5", "\n", "\n", "# define a parameter table of relative position bias", "\n", "self", ".", "relative_position_bias_table", "=", "nn", ".", "Parameter", "(", "\n", "torch", ".", "zeros", "(", "(", "2", "*", "window_size", "[", "0", "]", "-", "1", ")", "*", "(", "2", "*", "window_size", "[", "1", "]", "-", "1", ")", ",", "num_heads", ")", ")", "# 2*Wh-1 * 2*Ww-1, nH", "\n", "\n", "# get pair-wise relative position index for each token inside the window", "\n", "coords_h", "=", "torch", ".", "arange", "(", "self", ".", "window_size", "[", "0", "]", ")", "\n", "coords_w", "=", "torch", ".", "arange", "(", "self", ".", "window_size", "[", "1", "]", ")", "\n", "coords", "=", "torch", ".", "stack", "(", "torch", ".", "meshgrid", "(", "[", "coords_h", ",", "coords_w", "]", ")", ")", "# 2, Wh, Ww", "\n", "coords_flatten", "=", "torch", ".", "flatten", "(", "coords", ",", "1", ")", "# 2, Wh*Ww", "\n", "relative_coords", "=", "coords_flatten", "[", ":", ",", ":", ",", "None", "]", "-", "coords_flatten", "[", ":", ",", "None", ",", ":", "]", "# 2, Wh*Ww, Wh*Ww", "\n", "relative_coords", "=", "relative_coords", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "contiguous", "(", ")", "# Wh*Ww, Wh*Ww, 2", "\n", "relative_coords", "[", ":", ",", ":", ",", "0", "]", "+=", "self", ".", "window_size", "[", "0", "]", "-", "1", "# shift to start from 0", "\n", "relative_coords", "[", ":", ",", ":", ",", "1", "]", "+=", "self", ".", "window_size", "[", "1", "]", "-", "1", "\n", "relative_coords", "[", ":", ",", ":", ",", "0", "]", "*=", "2", "*", "self", ".", "window_size", "[", "1", "]", "-", "1", "\n", "relative_position_index", "=", "relative_coords", ".", "sum", "(", "-", "1", ")", "# Wh*Ww, Wh*Ww", "\n", "self", ".", "register_buffer", "(", "\"relative_position_index\"", ",", "relative_position_index", ")", "\n", "\n", "self", ".", "qkv", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", "*", "3", ",", "bias", "=", "qkv_bias", ")", "\n", "self", ".", "attn_drop", "=", "nn", ".", "Dropout", "(", "attn_drop", ")", "\n", "self", ".", "proj", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", ")", "\n", "self", ".", "proj_drop", "=", "nn", ".", "Dropout", "(", "proj_drop", ")", "\n", "\n", "trunc_normal_", "(", "self", ".", "relative_position_bias_table", ",", "std", "=", ".02", ")", "\n", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.stf.WindowAttention.forward": [[90, 122], ["stf.WindowAttention.qkv().reshape().permute().contiguous", "stf.WindowAttention.relative_position_bias_table[].view", "relative_position_bias.permute().contiguous.permute().contiguous.permute().contiguous", "stf.WindowAttention.attn_drop", "stf.WindowAttention.proj", "stf.WindowAttention.proj_drop", "k.transpose", "relative_position_bias.permute().contiguous.permute().contiguous.unsqueeze", "stf.WindowAttention.view", "stf.WindowAttention.softmax", "stf.WindowAttention.softmax", "stf.WindowAttention.qkv().reshape().permute", "relative_position_bias.permute().contiguous.permute().contiguous.permute", "stf.WindowAttention.view", "mask.unsqueeze().unsqueeze", "stf.WindowAttention.qkv().reshape", "stf.WindowAttention.relative_position_index.view", "mask.unsqueeze", "stf.WindowAttention.qkv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "mask", "=", "None", ")", ":", "\n", "        ", "\"\"\" Forward function.\n        Args:\n            x: input features with shape of (num_windows*B, N, C)\n            mask: (0/-inf) mask with shape of (num_windows, Wh*Ww, Wh*Ww) or None\n        \"\"\"", "\n", "B_", ",", "N", ",", "C", "=", "x", ".", "shape", "\n", "qkv", "=", "self", ".", "qkv", "(", "x", ")", ".", "reshape", "(", "B_", ",", "N", ",", "3", ",", "self", ".", "num_heads", ",", "C", "//", "self", ".", "num_heads", ")", ".", "permute", "(", "2", ",", "0", ",", "3", ",", "1", ",", "4", ")", ".", "contiguous", "(", ")", "\n", "q", ",", "k", ",", "v", "=", "qkv", "[", "0", "]", ",", "qkv", "[", "1", "]", ",", "qkv", "[", "2", "]", "# make torchscript happy (cannot use tensor as tuple)", "\n", "\n", "q", "=", "q", "*", "self", ".", "scale", "\n", "attn", "=", "(", "q", "@", "k", ".", "transpose", "(", "-", "2", ",", "-", "1", ")", ")", "\n", "\n", "relative_position_bias", "=", "self", ".", "relative_position_bias_table", "[", "self", ".", "relative_position_index", ".", "view", "(", "-", "1", ")", "]", ".", "view", "(", "\n", "self", ".", "window_size", "[", "0", "]", "*", "self", ".", "window_size", "[", "1", "]", ",", "self", ".", "window_size", "[", "0", "]", "*", "self", ".", "window_size", "[", "1", "]", ",", "-", "1", ")", "# Wh*Ww,Wh*Ww,nH", "\n", "relative_position_bias", "=", "relative_position_bias", ".", "permute", "(", "2", ",", "0", ",", "1", ")", ".", "contiguous", "(", ")", "# nH, Wh*Ww, Wh*Ww", "\n", "attn", "=", "attn", "+", "relative_position_bias", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "if", "mask", "is", "not", "None", ":", "\n", "            ", "nW", "=", "mask", ".", "shape", "[", "0", "]", "\n", "attn", "=", "attn", ".", "view", "(", "B_", "//", "nW", ",", "nW", ",", "self", ".", "num_heads", ",", "N", ",", "N", ")", "+", "mask", ".", "unsqueeze", "(", "1", ")", ".", "unsqueeze", "(", "0", ")", "\n", "attn", "=", "attn", ".", "view", "(", "-", "1", ",", "self", ".", "num_heads", ",", "N", ",", "N", ")", "\n", "attn", "=", "self", ".", "softmax", "(", "attn", ")", "\n", "", "else", ":", "\n", "            ", "attn", "=", "self", ".", "softmax", "(", "attn", ")", "\n", "\n", "", "attn", "=", "self", ".", "attn_drop", "(", "attn", ")", "\n", "\n", "x", "=", "(", "attn", "@", "v", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "reshape", "(", "B_", ",", "N", ",", "C", ")", "\n", "x", "=", "self", ".", "proj", "(", "x", ")", "\n", "x", "=", "self", ".", "proj_drop", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.stf.SwinTransformerBlock.__init__": [[125, 148], ["torch.Module.__init__", "norm_layer", "stf.WindowAttention", "norm_layer", "int", "stf.Mlp", "timm.models.layers.DropPath", "torch.Identity", "torch.Identity", "torch.Identity", "timm.models.layers.to_2tuple"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", ",", "num_heads", ",", "window_size", "=", "7", ",", "shift_size", "=", "0", ",", "\n", "mlp_ratio", "=", "4.", ",", "qkv_bias", "=", "True", ",", "qk_scale", "=", "None", ",", "drop", "=", "0.", ",", "attn_drop", "=", "0.", ",", "drop_path", "=", "0.", ",", "\n", "act_layer", "=", "nn", ".", "GELU", ",", "norm_layer", "=", "nn", ".", "LayerNorm", ",", "inverse", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "num_heads", "=", "num_heads", "\n", "self", ".", "window_size", "=", "window_size", "\n", "self", ".", "shift_size", "=", "shift_size", "\n", "self", ".", "mlp_ratio", "=", "mlp_ratio", "\n", "assert", "0", "<=", "self", ".", "shift_size", "<", "self", ".", "window_size", ",", "\"shift_size must in 0-window_size\"", "\n", "\n", "self", ".", "norm1", "=", "norm_layer", "(", "dim", ")", "\n", "self", ".", "attn", "=", "WindowAttention", "(", "\n", "dim", ",", "window_size", "=", "to_2tuple", "(", "self", ".", "window_size", ")", ",", "num_heads", "=", "num_heads", ",", "\n", "qkv_bias", "=", "qkv_bias", ",", "qk_scale", "=", "qk_scale", ",", "attn_drop", "=", "attn_drop", ",", "proj_drop", "=", "drop", ")", "\n", "\n", "self", ".", "drop_path", "=", "DropPath", "(", "drop_path", ")", "if", "drop_path", ">", "0.", "else", "nn", ".", "Identity", "(", ")", "\n", "self", ".", "norm2", "=", "norm_layer", "(", "dim", ")", "\n", "mlp_hidden_dim", "=", "int", "(", "dim", "*", "mlp_ratio", ")", "\n", "self", ".", "mlp", "=", "Mlp", "(", "in_features", "=", "dim", ",", "hidden_features", "=", "mlp_hidden_dim", ",", "act_layer", "=", "act_layer", ",", "drop", "=", "drop", ")", "\n", "\n", "self", ".", "H", "=", "None", "\n", "self", ".", "W", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.stf.SwinTransformerBlock.forward": [[149, 200], ["stf.SwinTransformerBlock.norm1", "x[].contiguous.view", "torch.pad", "torch.pad", "torch.pad", "stf.window_partition", "x_windows.view.view.view", "stf.SwinTransformerBlock.attn", "attn_windows.view.view.view", "stf.window_reverse", "x[].contiguous.view", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "x[].contiguous", "stf.SwinTransformerBlock.drop_path", "stf.SwinTransformerBlock.drop_path", "stf.SwinTransformerBlock.mlp", "stf.SwinTransformerBlock.norm2"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.models.stf.window_partition", "home.repos.pwc.inspect_result.googolxx_stf.models.stf.window_reverse"], ["", "def", "forward", "(", "self", ",", "x", ",", "mask_matrix", ")", ":", "\n", "        ", "B", ",", "L", ",", "C", "=", "x", ".", "shape", "\n", "H", ",", "W", "=", "self", ".", "H", ",", "self", ".", "W", "\n", "assert", "L", "==", "H", "*", "W", ",", "\"input feature has wrong size\"", "\n", "\n", "shortcut", "=", "x", "\n", "x", "=", "self", ".", "norm1", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "B", ",", "H", ",", "W", ",", "C", ")", "\n", "\n", "# pad feature maps to multiples of window size", "\n", "pad_l", "=", "pad_t", "=", "0", "\n", "pad_r", "=", "(", "self", ".", "window_size", "-", "W", "%", "self", ".", "window_size", ")", "%", "self", ".", "window_size", "\n", "pad_b", "=", "(", "self", ".", "window_size", "-", "H", "%", "self", ".", "window_size", ")", "%", "self", ".", "window_size", "\n", "x", "=", "F", ".", "pad", "(", "x", ",", "(", "0", ",", "0", ",", "pad_l", ",", "pad_r", ",", "pad_t", ",", "pad_b", ")", ")", "\n", "_", ",", "Hp", ",", "Wp", ",", "_", "=", "x", ".", "shape", "\n", "\n", "# cyclic shift", "\n", "if", "self", ".", "shift_size", ">", "0", ":", "\n", "            ", "shifted_x", "=", "torch", ".", "roll", "(", "x", ",", "shifts", "=", "(", "-", "self", ".", "shift_size", ",", "-", "self", ".", "shift_size", ")", ",", "dims", "=", "(", "1", ",", "2", ")", ")", "\n", "attn_mask", "=", "mask_matrix", "\n", "", "else", ":", "\n", "            ", "shifted_x", "=", "x", "\n", "attn_mask", "=", "None", "\n", "\n", "# partition windows", "\n", "", "x_windows", "=", "window_partition", "(", "shifted_x", ",", "self", ".", "window_size", ")", "# nW*B, window_size, window_size, C", "\n", "x_windows", "=", "x_windows", ".", "view", "(", "-", "1", ",", "self", ".", "window_size", "*", "self", ".", "window_size", ",", "C", ")", "# nW*B, window_size*window_size, C", "\n", "\n", "# W-MSA/SW-MSA", "\n", "attn_windows", "=", "self", ".", "attn", "(", "x_windows", ",", "mask", "=", "attn_mask", ")", "# nW*B, window_size*window_size, C", "\n", "\n", "# merge windows", "\n", "attn_windows", "=", "attn_windows", ".", "view", "(", "-", "1", ",", "self", ".", "window_size", ",", "self", ".", "window_size", ",", "C", ")", "\n", "shifted_x", "=", "window_reverse", "(", "attn_windows", ",", "self", ".", "window_size", ",", "Hp", ",", "Wp", ")", "# B H' W' C", "\n", "\n", "# reverse cyclic shift", "\n", "if", "self", ".", "shift_size", ">", "0", ":", "\n", "            ", "x", "=", "torch", ".", "roll", "(", "shifted_x", ",", "shifts", "=", "(", "self", ".", "shift_size", ",", "self", ".", "shift_size", ")", ",", "dims", "=", "(", "1", ",", "2", ")", ")", "\n", "", "else", ":", "\n", "            ", "x", "=", "shifted_x", "\n", "\n", "", "if", "pad_r", ">", "0", "or", "pad_b", ">", "0", ":", "\n", "            ", "x", "=", "x", "[", ":", ",", ":", "H", ",", ":", "W", ",", ":", "]", ".", "contiguous", "(", ")", "\n", "\n", "", "x", "=", "x", ".", "view", "(", "B", ",", "H", "*", "W", ",", "C", ")", "\n", "\n", "# FFN", "\n", "x", "=", "shortcut", "+", "self", ".", "drop_path", "(", "x", ")", "\n", "x", "=", "x", "+", "self", ".", "drop_path", "(", "self", ".", "mlp", "(", "self", ".", "norm2", "(", "x", ")", ")", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.stf.PatchMerging.__init__": [[203, 208], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "norm_layer"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", ",", "norm_layer", "=", "nn", ".", "LayerNorm", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "reduction", "=", "nn", ".", "Linear", "(", "4", "*", "dim", ",", "2", "*", "dim", ",", "bias", "=", "False", ")", "\n", "self", ".", "norm", "=", "norm_layer", "(", "4", "*", "dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.stf.PatchMerging.forward": [[209, 236], ["torch.pad.view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.pad.view", "stf.PatchMerging.norm", "stf.PatchMerging.reduction", "torch.pad", "torch.pad", "torch.pad"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "H", ",", "W", ")", ":", "\n", "        ", "\"\"\" Forward function.\n        Args:\n            x: Input feature, tensor size (B, H*W, C).\n            H, W: Spatial resolution of the input feature.\n        \"\"\"", "\n", "B", ",", "L", ",", "C", "=", "x", ".", "shape", "\n", "assert", "L", "==", "H", "*", "W", ",", "\"input feature has wrong size\"", "\n", "\n", "x", "=", "x", ".", "view", "(", "B", ",", "H", ",", "W", ",", "C", ")", "\n", "\n", "# padding", "\n", "pad_input", "=", "(", "H", "%", "2", "==", "1", ")", "or", "(", "W", "%", "2", "==", "1", ")", "\n", "if", "pad_input", ":", "\n", "            ", "x", "=", "F", ".", "pad", "(", "x", ",", "(", "0", ",", "0", ",", "0", ",", "W", "%", "2", ",", "0", ",", "H", "%", "2", ")", ")", "\n", "\n", "", "x0", "=", "x", "[", ":", ",", "0", ":", ":", "2", ",", "0", ":", ":", "2", ",", ":", "]", "# B H/2 W/2 C", "\n", "x1", "=", "x", "[", ":", ",", "1", ":", ":", "2", ",", "0", ":", ":", "2", ",", ":", "]", "# B H/2 W/2 C", "\n", "x2", "=", "x", "[", ":", ",", "0", ":", ":", "2", ",", "1", ":", ":", "2", ",", ":", "]", "# B H/2 W/2 C", "\n", "x3", "=", "x", "[", ":", ",", "1", ":", ":", "2", ",", "1", ":", ":", "2", ",", ":", "]", "# B H/2 W/2 C", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x0", ",", "x1", ",", "x2", ",", "x3", "]", ",", "-", "1", ")", "# B H/2 W/2 4*C", "\n", "x", "=", "x", ".", "view", "(", "B", ",", "-", "1", ",", "4", "*", "C", ")", "# B H/2*W/2 4*C", "\n", "\n", "x", "=", "self", ".", "norm", "(", "x", ")", "\n", "x", "=", "self", ".", "reduction", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.stf.PatchSplit.__init__": [[244, 250], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "norm_layer", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PixelShuffle"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.__init__"], ["def", "__init__", "(", "self", ",", "dim", ",", "norm_layer", "=", "nn", ".", "LayerNorm", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "reduction", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", "*", "2", ",", "bias", "=", "False", ")", "\n", "self", ".", "norm", "=", "norm_layer", "(", "dim", ")", "\n", "self", ".", "shuffle", "=", "nn", ".", "PixelShuffle", "(", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.stf.PatchSplit.forward": [[251, 261], ["stf.PatchSplit.norm", "stf.PatchSplit.reduction", "x.permute().contiguous().view.permute().contiguous().view.permute().contiguous().view", "stf.PatchSplit.shuffle", "x.permute().contiguous().view.permute().contiguous().view.permute().contiguous().view", "x.permute().contiguous().view.permute().contiguous().view.permute().contiguous", "x.permute().contiguous().view.permute().contiguous().view.permute().contiguous", "x.permute().contiguous().view.permute().contiguous().view.permute", "x.permute().contiguous().view.permute().contiguous().view.permute"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "H", ",", "W", ")", ":", "\n", "        ", "B", ",", "L", ",", "C", "=", "x", ".", "shape", "\n", "assert", "L", "==", "H", "*", "W", ",", "\"input feature has wrong size\"", "\n", "\n", "x", "=", "self", ".", "norm", "(", "x", ")", "\n", "x", "=", "self", ".", "reduction", "(", "x", ")", "# B, L, C", "\n", "x", "=", "x", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "contiguous", "(", ")", ".", "view", "(", "B", ",", "2", "*", "C", ",", "H", ",", "W", ")", "\n", "x", "=", "self", ".", "shuffle", "(", "x", ")", "# B, C//2 ,2H, 2W", "\n", "x", "=", "x", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", ".", "contiguous", "(", ")", ".", "view", "(", "B", ",", "4", "*", "L", ",", "-", "1", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.stf.BasicLayer.__init__": [[263, 307], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "downsample", "stf.SwinTransformerBlock", "range", "isinstance"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "dim", ",", "\n", "depth", ",", "\n", "num_heads", ",", "\n", "window_size", "=", "7", ",", "\n", "mlp_ratio", "=", "4.", ",", "\n", "qkv_bias", "=", "True", ",", "\n", "qk_scale", "=", "None", ",", "\n", "drop", "=", "0.", ",", "\n", "attn_drop", "=", "0.", ",", "\n", "drop_path", "=", "0.", ",", "\n", "norm_layer", "=", "nn", ".", "LayerNorm", ",", "\n", "downsample", "=", "None", ",", "\n", "use_checkpoint", "=", "False", ",", "\n", "inverse", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "window_size", "=", "window_size", "\n", "self", ".", "shift_size", "=", "window_size", "//", "2", "\n", "self", ".", "depth", "=", "depth", "\n", "self", ".", "use_checkpoint", "=", "use_checkpoint", "\n", "\n", "# build blocks", "\n", "self", ".", "blocks", "=", "nn", ".", "ModuleList", "(", "[", "\n", "SwinTransformerBlock", "(", "\n", "\n", "dim", "=", "dim", ",", "\n", "num_heads", "=", "num_heads", ",", "\n", "window_size", "=", "window_size", ",", "\n", "shift_size", "=", "0", "if", "(", "i", "%", "2", "==", "0", ")", "else", "window_size", "//", "2", ",", "\n", "mlp_ratio", "=", "mlp_ratio", ",", "\n", "qkv_bias", "=", "qkv_bias", ",", "\n", "qk_scale", "=", "qk_scale", ",", "\n", "drop", "=", "drop", ",", "\n", "attn_drop", "=", "attn_drop", ",", "\n", "drop_path", "=", "drop_path", "[", "i", "]", "if", "isinstance", "(", "drop_path", ",", "list", ")", "else", "drop_path", ",", "\n", "norm_layer", "=", "norm_layer", ",", "\n", "inverse", "=", "inverse", ")", "\n", "for", "i", "in", "range", "(", "depth", ")", "]", ")", "\n", "\n", "# patch merging layer", "\n", "if", "downsample", "is", "not", "None", ":", "\n", "            ", "self", ".", "downsample", "=", "downsample", "(", "dim", "=", "dim", ",", "norm_layer", "=", "norm_layer", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "downsample", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.stf.BasicLayer.forward": [[308, 348], ["torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "stf.window_partition", "mask_windows.view.view.view", "attn_mask.masked_fill().masked_fill.masked_fill().masked_fill.masked_fill().masked_fill", "int", "int", "slice", "slice", "slice", "slice", "slice", "slice", "mask_windows.view.view.unsqueeze", "mask_windows.view.view.unsqueeze", "float", "blk", "stf.BasicLayer.downsample", "isinstance", "numpy.ceil", "numpy.ceil", "attn_mask.masked_fill().masked_fill.masked_fill().masked_fill.masked_fill", "isinstance", "float"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.models.stf.window_partition"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "H", ",", "W", ")", ":", "\n", "        ", "\"\"\" Forward function.\n        Args:\n            x: Input feature, tensor size (B, H*W, C).\n            H, W: Spatial resolution of the input feature.\n        \"\"\"", "\n", "\n", "# calculate attention mask for SW-MSA", "\n", "Hp", "=", "int", "(", "np", ".", "ceil", "(", "H", "/", "self", ".", "window_size", ")", ")", "*", "self", ".", "window_size", "\n", "Wp", "=", "int", "(", "np", ".", "ceil", "(", "W", "/", "self", ".", "window_size", ")", ")", "*", "self", ".", "window_size", "\n", "img_mask", "=", "torch", ".", "zeros", "(", "(", "1", ",", "Hp", ",", "Wp", ",", "1", ")", ",", "device", "=", "x", ".", "device", ")", "\n", "h_slices", "=", "(", "slice", "(", "0", ",", "-", "self", ".", "window_size", ")", ",", "\n", "slice", "(", "-", "self", ".", "window_size", ",", "-", "self", ".", "shift_size", ")", ",", "\n", "slice", "(", "-", "self", ".", "shift_size", ",", "None", ")", ")", "\n", "w_slices", "=", "(", "slice", "(", "0", ",", "-", "self", ".", "window_size", ")", ",", "\n", "slice", "(", "-", "self", ".", "window_size", ",", "-", "self", ".", "shift_size", ")", ",", "\n", "slice", "(", "-", "self", ".", "shift_size", ",", "None", ")", ")", "\n", "cnt", "=", "0", "\n", "for", "h", "in", "h_slices", ":", "\n", "            ", "for", "w", "in", "w_slices", ":", "\n", "                ", "img_mask", "[", ":", ",", "h", ",", "w", ",", ":", "]", "=", "cnt", "\n", "cnt", "+=", "1", "\n", "\n", "", "", "mask_windows", "=", "window_partition", "(", "img_mask", ",", "self", ".", "window_size", ")", "# nW, window_size, window_size, 1", "\n", "mask_windows", "=", "mask_windows", ".", "view", "(", "-", "1", ",", "self", ".", "window_size", "*", "self", ".", "window_size", ")", "\n", "attn_mask", "=", "mask_windows", ".", "unsqueeze", "(", "1", ")", "-", "mask_windows", ".", "unsqueeze", "(", "2", ")", "\n", "attn_mask", "=", "attn_mask", ".", "masked_fill", "(", "attn_mask", "!=", "0", ",", "float", "(", "-", "100.0", ")", ")", ".", "masked_fill", "(", "attn_mask", "==", "0", ",", "float", "(", "0.0", ")", ")", "\n", "\n", "for", "blk", "in", "self", ".", "blocks", ":", "\n", "            ", "blk", ".", "H", ",", "blk", ".", "W", "=", "H", ",", "W", "\n", "x", "=", "blk", "(", "x", ",", "attn_mask", ")", "\n", "", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "x_down", "=", "self", ".", "downsample", "(", "x", ",", "H", ",", "W", ")", "\n", "if", "isinstance", "(", "self", ".", "downsample", ",", "PatchMerging", ")", ":", "\n", "                ", "Wh", ",", "Ww", "=", "(", "H", "+", "1", ")", "//", "2", ",", "(", "W", "+", "1", ")", "//", "2", "\n", "", "elif", "isinstance", "(", "self", ".", "downsample", ",", "PatchSplit", ")", ":", "\n", "                ", "Wh", ",", "Ww", "=", "H", "*", "2", ",", "W", "*", "2", "\n", "", "return", "x_down", ",", "Wh", ",", "Ww", "\n", "", "else", ":", "\n", "            ", "return", "x", ",", "H", ",", "W", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.stf.PatchEmbed.__init__": [[351, 364], ["torch.Module.__init__", "timm.models.layers.to_2tuple", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "norm_layer"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.__init__"], ["    ", "def", "__init__", "(", "self", ",", "patch_size", "=", "4", ",", "in_chans", "=", "3", ",", "embed_dim", "=", "96", ",", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "patch_size", "=", "to_2tuple", "(", "patch_size", ")", "\n", "self", ".", "patch_size", "=", "patch_size", "\n", "\n", "self", ".", "in_chans", "=", "in_chans", "\n", "self", ".", "embed_dim", "=", "embed_dim", "\n", "\n", "self", ".", "proj", "=", "nn", ".", "Conv2d", "(", "in_chans", ",", "embed_dim", ",", "kernel_size", "=", "patch_size", ",", "stride", "=", "patch_size", ")", "\n", "if", "norm_layer", "is", "not", "None", ":", "\n", "            ", "self", ".", "norm", "=", "norm_layer", "(", "embed_dim", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "norm", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.stf.PatchEmbed.forward": [[365, 382], ["x.transpose().view.transpose().view.size", "stf.PatchEmbed.proj", "torch.pad", "torch.pad", "torch.pad", "torch.pad", "torch.pad", "torch.pad", "x.transpose().view.transpose().view.flatten().transpose", "stf.PatchEmbed.norm", "x.transpose().view.transpose().view.transpose().view", "x.transpose().view.transpose().view.size", "x.transpose().view.transpose().view.size", "x.transpose().view.transpose().view.flatten", "x.transpose().view.transpose().view.transpose"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"Forward function.\"\"\"", "\n", "# padding", "\n", "_", ",", "_", ",", "H", ",", "W", "=", "x", ".", "size", "(", ")", "\n", "if", "W", "%", "self", ".", "patch_size", "[", "1", "]", "!=", "0", ":", "\n", "            ", "x", "=", "F", ".", "pad", "(", "x", ",", "(", "0", ",", "self", ".", "patch_size", "[", "1", "]", "-", "W", "%", "self", ".", "patch_size", "[", "1", "]", ")", ")", "\n", "", "if", "H", "%", "self", ".", "patch_size", "[", "0", "]", "!=", "0", ":", "\n", "            ", "x", "=", "F", ".", "pad", "(", "x", ",", "(", "0", ",", "0", ",", "0", ",", "self", ".", "patch_size", "[", "0", "]", "-", "H", "%", "self", ".", "patch_size", "[", "0", "]", ")", ")", "\n", "\n", "", "x", "=", "self", ".", "proj", "(", "x", ")", "# B C Wh Ww", "\n", "if", "self", ".", "norm", "is", "not", "None", ":", "\n", "            ", "Wh", ",", "Ww", "=", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", "\n", "x", "=", "x", ".", "flatten", "(", "2", ")", ".", "transpose", "(", "1", ",", "2", ")", "\n", "x", "=", "self", ".", "norm", "(", "x", ")", "\n", "x", "=", "x", ".", "transpose", "(", "1", ",", "2", ")", ".", "view", "(", "-", "1", ",", "self", ".", "embed_dim", ",", "Wh", ",", "Ww", ")", "\n", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.stf.SymmetricalTransFormer.__init__": [[385, 550], ["base.CompressionModel.__init__", "len", "stf.PatchEmbed", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "compressai.entropy_models.EntropyBottleneck", "compressai.entropy_models.GaussianConditional", "stf.SymmetricalTransFormer._freeze_stages", "x.item", "stf.BasicLayer", "stf.SymmetricalTransFormer.layers.append", "stf.BasicLayer", "stf.SymmetricalTransFormer.syn_layers.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PixelShuffle", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "int", "compressai.layers.conv3x3", "torch.GELU", "torch.GELU", "torch.GELU", "compressai.layers.conv3x3", "torch.GELU", "torch.GELU", "torch.GELU", "compressai.layers.conv3x3", "torch.GELU", "torch.GELU", "torch.GELU", "compressai.layers.conv3x3", "torch.GELU", "torch.GELU", "torch.GELU", "compressai.layers.conv3x3", "compressai.layers.conv3x3", "torch.GELU", "torch.GELU", "torch.GELU", "compressai.layers.subpel_conv3x3", "torch.GELU", "torch.GELU", "torch.GELU", "compressai.layers.conv3x3", "torch.GELU", "torch.GELU", "torch.GELU", "compressai.layers.subpel_conv3x3", "torch.GELU", "torch.GELU", "torch.GELU", "compressai.layers.conv3x3", "compressai.layers.conv3x3", "torch.GELU", "torch.GELU", "torch.GELU", "compressai.layers.subpel_conv3x3", "torch.GELU", "torch.GELU", "torch.GELU", "compressai.layers.conv3x3", "torch.GELU", "torch.GELU", "torch.GELU", "compressai.layers.subpel_conv3x3", "torch.GELU", "torch.GELU", "torch.GELU", "compressai.layers.conv3x3", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "sum", "int", "int", "utils.conv", "torch.GELU", "torch.GELU", "torch.GELU", "utils.conv", "torch.GELU", "torch.GELU", "torch.GELU", "utils.conv", "torch.GELU", "torch.GELU", "torch.GELU", "utils.conv", "torch.GELU", "torch.GELU", "torch.GELU", "utils.conv", "range", "utils.conv", "torch.GELU", "torch.GELU", "torch.GELU", "utils.conv", "torch.GELU", "torch.GELU", "torch.GELU", "utils.conv", "torch.GELU", "torch.GELU", "torch.GELU", "utils.conv", "torch.GELU", "torch.GELU", "torch.GELU", "utils.conv", "range", "utils.conv", "torch.GELU", "torch.GELU", "torch.GELU", "utils.conv", "torch.GELU", "torch.GELU", "torch.GELU", "utils.conv", "torch.GELU", "torch.GELU", "torch.GELU", "utils.conv", "torch.GELU", "torch.GELU", "torch.GELU", "utils.conv", "range", "sum", "sum", "sum", "sum", "min", "min", "min"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.__init__", "home.repos.pwc.inspect_result.googolxx_stf.models.stf.SymmetricalTransFormer._freeze_stages", "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.conv3x3", "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.conv3x3", "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.conv3x3", "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.conv3x3", "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.conv3x3", "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.conv3x3", "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.subpel_conv3x3", "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.conv3x3", "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.subpel_conv3x3", "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.conv3x3", "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.conv3x3", "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.subpel_conv3x3", "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.conv3x3", "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.subpel_conv3x3", "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.conv3x3", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.conv", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.conv", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.conv", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.conv", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.conv", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.conv", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.conv", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.conv", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.conv", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.conv", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.conv", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.conv", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.conv", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.conv", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.conv"], ["    ", "def", "__init__", "(", "self", ",", "\n", "pretrain_img_size", "=", "256", ",", "\n", "patch_size", "=", "2", ",", "\n", "in_chans", "=", "3", ",", "\n", "embed_dim", "=", "48", ",", "\n", "depths", "=", "[", "2", ",", "2", ",", "6", ",", "2", "]", ",", "\n", "num_heads", "=", "[", "3", ",", "6", ",", "12", ",", "24", "]", ",", "\n", "window_size", "=", "4", ",", "\n", "num_slices", "=", "12", ",", "\n", "mlp_ratio", "=", "4.", ",", "\n", "qkv_bias", "=", "True", ",", "\n", "qk_scale", "=", "None", ",", "\n", "drop_rate", "=", "0.", ",", "\n", "attn_drop_rate", "=", "0.", ",", "\n", "drop_path_rate", "=", "0.2", ",", "\n", "norm_layer", "=", "nn", ".", "LayerNorm", ",", "\n", "patch_norm", "=", "True", ",", "\n", "frozen_stages", "=", "-", "1", ",", "\n", "use_checkpoint", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "pretrain_img_size", "=", "pretrain_img_size", "\n", "self", ".", "num_layers", "=", "len", "(", "depths", ")", "\n", "self", ".", "embed_dim", "=", "embed_dim", "\n", "self", ".", "patch_norm", "=", "patch_norm", "\n", "self", ".", "frozen_stages", "=", "frozen_stages", "\n", "self", ".", "num_slices", "=", "num_slices", "\n", "self", ".", "max_support_slices", "=", "num_slices", "//", "2", "\n", "# split image into non-overlapping patches", "\n", "self", ".", "patch_embed", "=", "PatchEmbed", "(", "\n", "patch_size", "=", "patch_size", ",", "in_chans", "=", "in_chans", ",", "embed_dim", "=", "embed_dim", ",", "\n", "norm_layer", "=", "norm_layer", "if", "self", ".", "patch_norm", "else", "None", ")", "\n", "\n", "self", ".", "pos_drop", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_rate", ")", "\n", "\n", "# stochastic depth", "\n", "dpr", "=", "[", "x", ".", "item", "(", ")", "for", "x", "in", "torch", ".", "linspace", "(", "0", ",", "drop_path_rate", ",", "sum", "(", "depths", ")", ")", "]", "# stochastic depth decay rule", "\n", "\n", "# build layers", "\n", "self", ".", "layers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "i_layer", "in", "range", "(", "self", ".", "num_layers", ")", ":", "\n", "            ", "layer", "=", "BasicLayer", "(", "\n", "dim", "=", "int", "(", "embed_dim", "*", "2", "**", "i_layer", ")", ",", "\n", "depth", "=", "depths", "[", "i_layer", "]", ",", "\n", "num_heads", "=", "num_heads", "[", "i_layer", "]", ",", "\n", "window_size", "=", "window_size", ",", "\n", "mlp_ratio", "=", "mlp_ratio", ",", "\n", "qkv_bias", "=", "qkv_bias", ",", "\n", "qk_scale", "=", "qk_scale", ",", "\n", "drop", "=", "drop_rate", ",", "\n", "attn_drop", "=", "attn_drop_rate", ",", "\n", "drop_path", "=", "dpr", "[", "sum", "(", "depths", "[", ":", "i_layer", "]", ")", ":", "sum", "(", "depths", "[", ":", "i_layer", "+", "1", "]", ")", "]", ",", "\n", "norm_layer", "=", "norm_layer", ",", "\n", "downsample", "=", "PatchMerging", "if", "(", "i_layer", "<", "self", ".", "num_layers", "-", "1", ")", "else", "None", ",", "\n", "use_checkpoint", "=", "use_checkpoint", ",", "\n", "inverse", "=", "False", ")", "\n", "self", ".", "layers", ".", "append", "(", "layer", ")", "\n", "\n", "", "depths", "=", "depths", "[", ":", ":", "-", "1", "]", "\n", "num_heads", "=", "num_heads", "[", ":", ":", "-", "1", "]", "\n", "self", ".", "syn_layers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "i_layer", "in", "range", "(", "self", ".", "num_layers", ")", ":", "\n", "            ", "layer", "=", "BasicLayer", "(", "\n", "dim", "=", "int", "(", "embed_dim", "*", "2", "**", "(", "3", "-", "i_layer", ")", ")", ",", "\n", "depth", "=", "depths", "[", "i_layer", "]", ",", "\n", "num_heads", "=", "num_heads", "[", "i_layer", "]", ",", "\n", "window_size", "=", "window_size", ",", "\n", "mlp_ratio", "=", "mlp_ratio", ",", "\n", "qkv_bias", "=", "qkv_bias", ",", "\n", "qk_scale", "=", "qk_scale", ",", "\n", "drop", "=", "drop_rate", ",", "\n", "attn_drop", "=", "attn_drop_rate", ",", "\n", "drop_path", "=", "dpr", "[", "sum", "(", "depths", "[", ":", "i_layer", "]", ")", ":", "sum", "(", "depths", "[", ":", "i_layer", "+", "1", "]", ")", "]", ",", "\n", "norm_layer", "=", "norm_layer", ",", "\n", "downsample", "=", "PatchSplit", "if", "(", "i_layer", "<", "self", ".", "num_layers", "-", "1", ")", "else", "None", ",", "\n", "use_checkpoint", "=", "use_checkpoint", ",", "\n", "inverse", "=", "True", ")", "\n", "self", ".", "syn_layers", ".", "append", "(", "layer", ")", "\n", "\n", "", "self", ".", "end_conv", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "embed_dim", ",", "embed_dim", "*", "patch_size", "**", "2", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "PixelShuffle", "(", "patch_size", ")", ",", "\n", "nn", ".", "Conv2d", "(", "embed_dim", ",", "3", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", ")", "\n", "\n", "num_features", "=", "[", "int", "(", "embed_dim", "*", "2", "**", "i", ")", "for", "i", "in", "range", "(", "self", ".", "num_layers", ")", "]", "\n", "self", ".", "num_features", "=", "num_features", "\n", "self", ".", "g_a", "=", "None", "\n", "self", ".", "g_s", "=", "None", "\n", "\n", "self", ".", "h_a", "=", "nn", ".", "Sequential", "(", "\n", "conv3x3", "(", "384", ",", "384", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv3x3", "(", "384", ",", "336", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv3x3", "(", "336", ",", "288", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv3x3", "(", "288", ",", "240", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv3x3", "(", "240", ",", "192", ",", "stride", "=", "2", ")", ",", "\n", ")", "\n", "\n", "self", ".", "h_mean_s", "=", "nn", ".", "Sequential", "(", "\n", "conv3x3", "(", "192", ",", "240", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "subpel_conv3x3", "(", "240", ",", "288", ",", "2", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv3x3", "(", "288", ",", "336", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "subpel_conv3x3", "(", "336", ",", "384", ",", "2", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv3x3", "(", "384", ",", "384", ")", ",", "\n", ")", "\n", "self", ".", "h_scale_s", "=", "nn", ".", "Sequential", "(", "\n", "conv3x3", "(", "192", ",", "240", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "subpel_conv3x3", "(", "240", ",", "288", ",", "2", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv3x3", "(", "288", ",", "336", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "subpel_conv3x3", "(", "336", ",", "384", ",", "2", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv3x3", "(", "384", ",", "384", ")", ",", "\n", ")", "\n", "self", ".", "cc_mean_transforms", "=", "nn", ".", "ModuleList", "(", "\n", "nn", ".", "Sequential", "(", "\n", "conv", "(", "384", "+", "32", "*", "min", "(", "i", ",", "6", ")", ",", "224", ",", "stride", "=", "1", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv", "(", "224", ",", "176", ",", "stride", "=", "1", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv", "(", "176", ",", "128", ",", "stride", "=", "1", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv", "(", "128", ",", "64", ",", "stride", "=", "1", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv", "(", "64", ",", "32", ",", "stride", "=", "1", ",", "kernel_size", "=", "3", ")", ",", "\n", ")", "for", "i", "in", "range", "(", "num_slices", ")", "\n", ")", "\n", "self", ".", "cc_scale_transforms", "=", "nn", ".", "ModuleList", "(", "\n", "nn", ".", "Sequential", "(", "\n", "conv", "(", "384", "+", "32", "*", "min", "(", "i", ",", "6", ")", ",", "224", ",", "stride", "=", "1", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv", "(", "224", ",", "176", ",", "stride", "=", "1", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv", "(", "176", ",", "128", ",", "stride", "=", "1", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv", "(", "128", ",", "64", ",", "stride", "=", "1", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv", "(", "64", ",", "32", ",", "stride", "=", "1", ",", "kernel_size", "=", "3", ")", ",", "\n", ")", "for", "i", "in", "range", "(", "num_slices", ")", "\n", ")", "\n", "self", ".", "lrp_transforms", "=", "nn", ".", "ModuleList", "(", "\n", "nn", ".", "Sequential", "(", "\n", "conv", "(", "384", "+", "32", "*", "min", "(", "i", "+", "1", ",", "7", ")", ",", "224", ",", "stride", "=", "1", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv", "(", "224", ",", "176", ",", "stride", "=", "1", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv", "(", "176", ",", "128", ",", "stride", "=", "1", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv", "(", "128", ",", "64", ",", "stride", "=", "1", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv", "(", "64", ",", "32", ",", "stride", "=", "1", ",", "kernel_size", "=", "3", ")", ",", "\n", ")", "for", "i", "in", "range", "(", "num_slices", ")", "\n", ")", "\n", "self", ".", "entropy_bottleneck", "=", "EntropyBottleneck", "(", "embed_dim", "*", "4", ")", "\n", "self", ".", "gaussian_conditional", "=", "GaussianConditional", "(", "None", ")", "\n", "self", ".", "_freeze_stages", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.stf.SymmetricalTransFormer._freeze_stages": [[551, 567], ["stf.SymmetricalTransFormer.patch_embed.eval", "stf.SymmetricalTransFormer.patch_embed.parameters", "stf.SymmetricalTransFormer.pos_drop.eval", "range", "m.eval", "m.parameters"], "methods", ["None"], ["", "def", "_freeze_stages", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "frozen_stages", ">=", "0", ":", "\n", "            ", "self", ".", "patch_embed", ".", "eval", "(", ")", "\n", "for", "param", "in", "self", ".", "patch_embed", ".", "parameters", "(", ")", ":", "\n", "                ", "param", ".", "requires_grad", "=", "False", "\n", "\n", "", "", "if", "self", ".", "frozen_stages", ">=", "1", "and", "self", ".", "ape", ":", "\n", "            ", "self", ".", "absolute_pos_embed", ".", "requires_grad", "=", "False", "\n", "\n", "", "if", "self", ".", "frozen_stages", ">=", "2", ":", "\n", "            ", "self", ".", "pos_drop", ".", "eval", "(", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "self", ".", "frozen_stages", "-", "1", ")", ":", "\n", "                ", "m", "=", "self", ".", "layers", "[", "i", "]", "\n", "m", ".", "eval", "(", ")", "\n", "for", "param", "in", "m", ".", "parameters", "(", ")", ":", "\n", "                    ", "param", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.stf.SymmetricalTransFormer.init_weights": [[568, 581], ["stf.SymmetricalTransFormer.modules", "isinstance", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "torch.init.zeros_", "torch.init.zeros_", "torch.init.zeros_", "timm.models.layers.trunc_normal_", "isinstance", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "", "", "", "def", "init_weights", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "(", "nn", ".", "Conv2d", ",", "nn", ".", "ConvTranspose2d", ")", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "nn", ".", "init", ".", "zeros_", "(", "m", ".", "bias", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "trunc_normal_", "(", "m", ".", "weight", ",", "std", "=", ".02", ")", "\n", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", "and", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "LayerNorm", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.stf.SymmetricalTransFormer.forward": [[582, 645], ["stf.SymmetricalTransFormer.patch_embed", "stf.SymmetricalTransFormer.flatten().transpose", "stf.SymmetricalTransFormer.pos_drop", "range", "y.view().permute().contiguous.view().permute().contiguous.view().permute().contiguous", "stf.SymmetricalTransFormer.h_a", "stf.SymmetricalTransFormer.entropy_bottleneck", "stf.SymmetricalTransFormer.entropy_bottleneck._get_medians", "stf.SymmetricalTransFormer.h_scale_s", "stf.SymmetricalTransFormer.h_mean_s", "y.view().permute().contiguous.view().permute().contiguous.chunk", "enumerate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "y_hat.permute().contiguous().view.permute().contiguous().view.permute().contiguous().view", "range", "stf.SymmetricalTransFormer.end_conv", "stf.SymmetricalTransFormer.size", "stf.SymmetricalTransFormer.size", "layer", "compressai.ops.ste_round", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "stf.SymmetricalTransFormer.gaussian_conditional", "y_likelihood.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "y_hat_slices.append", "layer", "y_hat.permute().contiguous().view.permute().contiguous().view.view().permute().contiguous", "stf.SymmetricalTransFormer.flatten", "y.view().permute().contiguous.view().permute().contiguous.view().permute", "compressai.ops.ste_round", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "y_hat.permute().contiguous().view.permute().contiguous().view.permute().contiguous", "y_hat.permute().contiguous().view.permute().contiguous().view.view().permute", "y.view().permute().contiguous.view().permute().contiguous.view", "y_hat.permute().contiguous().view.permute().contiguous().view.permute", "y_hat.permute().contiguous().view.permute().contiguous().view.view"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyBottleneck._get_medians", "home.repos.pwc.inspect_result.googolxx_stf.ops.ops.ste_round", "home.repos.pwc.inspect_result.googolxx_stf.ops.ops.ste_round"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"Forward function.\"\"\"", "\n", "x", "=", "self", ".", "patch_embed", "(", "x", ")", "\n", "\n", "Wh", ",", "Ww", "=", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", "\n", "x", "=", "x", ".", "flatten", "(", "2", ")", ".", "transpose", "(", "1", ",", "2", ")", "\n", "x", "=", "self", ".", "pos_drop", "(", "x", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "num_layers", ")", ":", "\n", "            ", "layer", "=", "self", ".", "layers", "[", "i", "]", "\n", "x", ",", "Wh", ",", "Ww", "=", "layer", "(", "x", ",", "Wh", ",", "Ww", ")", "\n", "\n", "", "y", "=", "x", "\n", "C", "=", "self", ".", "embed_dim", "*", "8", "\n", "y", "=", "y", ".", "view", "(", "-", "1", ",", "Wh", ",", "Ww", ",", "C", ")", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "y_shape", "=", "y", ".", "shape", "[", "2", ":", "]", "\n", "\n", "z", "=", "self", ".", "h_a", "(", "y", ")", "\n", "_", ",", "z_likelihoods", "=", "self", ".", "entropy_bottleneck", "(", "z", ")", "\n", "z_offset", "=", "self", ".", "entropy_bottleneck", ".", "_get_medians", "(", ")", "\n", "z_tmp", "=", "z", "-", "z_offset", "\n", "z_hat", "=", "ste_round", "(", "z_tmp", ")", "+", "z_offset", "\n", "\n", "latent_scales", "=", "self", ".", "h_scale_s", "(", "z_hat", ")", "\n", "latent_means", "=", "self", ".", "h_mean_s", "(", "z_hat", ")", "\n", "\n", "y_slices", "=", "y", ".", "chunk", "(", "self", ".", "num_slices", ",", "1", ")", "\n", "y_hat_slices", "=", "[", "]", "\n", "y_likelihood", "=", "[", "]", "\n", "\n", "for", "slice_index", ",", "y_slice", "in", "enumerate", "(", "y_slices", ")", ":", "\n", "            ", "support_slices", "=", "(", "y_hat_slices", "if", "self", ".", "max_support_slices", "<", "0", "else", "y_hat_slices", "[", ":", "self", ".", "max_support_slices", "]", ")", "\n", "mean_support", "=", "torch", ".", "cat", "(", "[", "latent_means", "]", "+", "support_slices", ",", "dim", "=", "1", ")", "\n", "mu", "=", "self", ".", "cc_mean_transforms", "[", "slice_index", "]", "(", "mean_support", ")", "\n", "mu", "=", "mu", "[", ":", ",", ":", ",", ":", "y_shape", "[", "0", "]", ",", ":", "y_shape", "[", "1", "]", "]", "\n", "\n", "scale_support", "=", "torch", ".", "cat", "(", "[", "latent_scales", "]", "+", "support_slices", ",", "dim", "=", "1", ")", "\n", "scale", "=", "self", ".", "cc_scale_transforms", "[", "slice_index", "]", "(", "scale_support", ")", "\n", "scale", "=", "scale", "[", ":", ",", ":", ",", ":", "y_shape", "[", "0", "]", ",", ":", "y_shape", "[", "1", "]", "]", "\n", "\n", "_", ",", "y_slice_likelihood", "=", "self", ".", "gaussian_conditional", "(", "y_slice", ",", "scale", ",", "mu", ")", "\n", "\n", "y_likelihood", ".", "append", "(", "y_slice_likelihood", ")", "\n", "y_hat_slice", "=", "ste_round", "(", "y_slice", "-", "mu", ")", "+", "mu", "\n", "\n", "lrp_support", "=", "torch", ".", "cat", "(", "[", "mean_support", ",", "y_hat_slice", "]", ",", "dim", "=", "1", ")", "\n", "lrp", "=", "self", ".", "lrp_transforms", "[", "slice_index", "]", "(", "lrp_support", ")", "\n", "lrp", "=", "0.5", "*", "torch", ".", "tanh", "(", "lrp", ")", "\n", "y_hat_slice", "+=", "lrp", "\n", "\n", "y_hat_slices", ".", "append", "(", "y_hat_slice", ")", "\n", "\n", "", "y_hat", "=", "torch", ".", "cat", "(", "y_hat_slices", ",", "dim", "=", "1", ")", "\n", "y_likelihoods", "=", "torch", ".", "cat", "(", "y_likelihood", ",", "dim", "=", "1", ")", "\n", "\n", "y_hat", "=", "y_hat", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "Wh", "*", "Ww", ",", "C", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "num_layers", ")", ":", "\n", "            ", "layer", "=", "self", ".", "syn_layers", "[", "i", "]", "\n", "y_hat", ",", "Wh", ",", "Ww", "=", "layer", "(", "y_hat", ",", "Wh", ",", "Ww", ")", "\n", "\n", "", "x_hat", "=", "self", ".", "end_conv", "(", "y_hat", ".", "view", "(", "-", "1", ",", "Wh", ",", "Ww", ",", "self", ".", "embed_dim", ")", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", ".", "contiguous", "(", ")", ")", "\n", "return", "{", "\n", "\"x_hat\"", ":", "x_hat", ",", "\n", "\"likelihoods\"", ":", "{", "\"y\"", ":", "y_likelihoods", ",", "\"z\"", ":", "z_likelihoods", "}", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.stf.SymmetricalTransFormer.update": [[647, 653], ["stf.SymmetricalTransFormer.gaussian_conditional.update_scale_table", "super().update", "stf.get_scale_table"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.update_scale_table", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.update", "home.repos.pwc.inspect_result.googolxx_stf.models.cnn.get_scale_table"], ["", "def", "update", "(", "self", ",", "scale_table", "=", "None", ",", "force", "=", "False", ")", ":", "\n", "        ", "if", "scale_table", "is", "None", ":", "\n", "            ", "scale_table", "=", "get_scale_table", "(", ")", "\n", "", "updated", "=", "self", ".", "gaussian_conditional", ".", "update_scale_table", "(", "scale_table", ",", "force", "=", "force", ")", "\n", "updated", "|=", "super", "(", ")", ".", "update", "(", "force", "=", "force", ")", "\n", "return", "updated", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.stf.SymmetricalTransFormer.load_state_dict": [[654, 662], ["utils.update_registered_buffers", "super().load_state_dict"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.models.utils.update_registered_buffers", "home.repos.pwc.inspect_result.googolxx_stf.models.cnn.WACNN.load_state_dict"], ["", "def", "load_state_dict", "(", "self", ",", "state_dict", ")", ":", "\n", "        ", "update_registered_buffers", "(", "\n", "self", ".", "gaussian_conditional", ",", "\n", "\"gaussian_conditional\"", ",", "\n", "[", "\"_quantized_cdf\"", ",", "\"_offset\"", ",", "\"_cdf_length\"", ",", "\"scale_table\"", "]", ",", "\n", "state_dict", ",", "\n", ")", "\n", "super", "(", ")", ".", "load_state_dict", "(", "state_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.stf.SymmetricalTransFormer.from_state_dict": [[663, 669], ["cls", "cls.load_state_dict"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.models.cnn.WACNN.load_state_dict"], ["", "@", "classmethod", "\n", "def", "from_state_dict", "(", "cls", ",", "state_dict", ")", ":", "\n", "        ", "\"\"\"Return a new model instance from `state_dict`.\"\"\"", "\n", "net", "=", "cls", "(", ")", "\n", "net", ".", "load_state_dict", "(", "state_dict", ")", "\n", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.stf.SymmetricalTransFormer.compress": [[671, 733], ["stf.SymmetricalTransFormer.patch_embed", "x.flatten().transpose.flatten().transpose.flatten().transpose", "range", "y.view().permute().contiguous.view().permute().contiguous.view().permute().contiguous", "stf.SymmetricalTransFormer.h_a", "stf.SymmetricalTransFormer.entropy_bottleneck.compress", "stf.SymmetricalTransFormer.entropy_bottleneck.decompress", "stf.SymmetricalTransFormer.h_scale_s", "stf.SymmetricalTransFormer.h_mean_s", "y.view().permute().contiguous.view().permute().contiguous.chunk", "stf.SymmetricalTransFormer.gaussian_conditional.quantized_cdf.tolist", "stf.SymmetricalTransFormer.gaussian_conditional.cdf_length.reshape().int().tolist", "stf.SymmetricalTransFormer.gaussian_conditional.offset.reshape().int().tolist", "compressai.ans.BufferedRansEncoder", "enumerate", "compressai.ans.BufferedRansEncoder.encode_with_indexes", "compressai.ans.BufferedRansEncoder.flush", "y_strings.append", "x.flatten().transpose.flatten().transpose.size", "x.flatten().transpose.flatten().transpose.size", "layer", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "stf.SymmetricalTransFormer.gaussian_conditional.build_indexes", "stf.SymmetricalTransFormer.gaussian_conditional.quantize", "symbols_list.extend", "indexes_list.extend", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "y_hat_slices.append", "x.flatten().transpose.flatten().transpose.flatten", "y.view().permute().contiguous.view().permute().contiguous.view().permute", "stf.SymmetricalTransFormer.size", "stf.SymmetricalTransFormer.gaussian_conditional.cdf_length.reshape().int", "stf.SymmetricalTransFormer.gaussian_conditional.offset.reshape().int", "stf.SymmetricalTransFormer.reshape().tolist", "stf.SymmetricalTransFormer.reshape().tolist", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "stf.SymmetricalTransFormer.size", "y.view().permute().contiguous.view().permute().contiguous.view", "stf.SymmetricalTransFormer.gaussian_conditional.cdf_length.reshape", "stf.SymmetricalTransFormer.gaussian_conditional.offset.reshape", "stf.SymmetricalTransFormer.reshape", "stf.SymmetricalTransFormer.reshape"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyBottleneck.compress", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyBottleneck.decompress", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models._EntropyCoder.encode_with_indexes", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.build_indexes", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyModel.quantize"], ["", "def", "compress", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "patch_embed", "(", "x", ")", "\n", "\n", "Wh", ",", "Ww", "=", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", "\n", "x", "=", "x", ".", "flatten", "(", "2", ")", ".", "transpose", "(", "1", ",", "2", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "num_layers", ")", ":", "\n", "            ", "layer", "=", "self", ".", "layers", "[", "i", "]", "\n", "x", ",", "Wh", ",", "Ww", "=", "layer", "(", "x", ",", "Wh", ",", "Ww", ")", "\n", "", "y", "=", "x", "\n", "C", "=", "self", ".", "embed_dim", "*", "8", "\n", "y", "=", "y", ".", "view", "(", "-", "1", ",", "Wh", ",", "Ww", ",", "C", ")", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "y_shape", "=", "y", ".", "shape", "[", "2", ":", "]", "\n", "\n", "z", "=", "self", ".", "h_a", "(", "y", ")", "\n", "z_strings", "=", "self", ".", "entropy_bottleneck", ".", "compress", "(", "z", ")", "\n", "z_hat", "=", "self", ".", "entropy_bottleneck", ".", "decompress", "(", "z_strings", ",", "z", ".", "size", "(", ")", "[", "-", "2", ":", "]", ")", "\n", "\n", "latent_scales", "=", "self", ".", "h_scale_s", "(", "z_hat", ")", "\n", "latent_means", "=", "self", ".", "h_mean_s", "(", "z_hat", ")", "\n", "\n", "y_slices", "=", "y", ".", "chunk", "(", "self", ".", "num_slices", ",", "1", ")", "\n", "y_hat_slices", "=", "[", "]", "\n", "\n", "cdf", "=", "self", ".", "gaussian_conditional", ".", "quantized_cdf", ".", "tolist", "(", ")", "\n", "cdf_lengths", "=", "self", ".", "gaussian_conditional", ".", "cdf_length", ".", "reshape", "(", "-", "1", ")", ".", "int", "(", ")", ".", "tolist", "(", ")", "\n", "offsets", "=", "self", ".", "gaussian_conditional", ".", "offset", ".", "reshape", "(", "-", "1", ")", ".", "int", "(", ")", ".", "tolist", "(", ")", "\n", "\n", "encoder", "=", "BufferedRansEncoder", "(", ")", "\n", "symbols_list", "=", "[", "]", "\n", "indexes_list", "=", "[", "]", "\n", "y_strings", "=", "[", "]", "\n", "\n", "for", "slice_index", ",", "y_slice", "in", "enumerate", "(", "y_slices", ")", ":", "\n", "            ", "support_slices", "=", "(", "y_hat_slices", "if", "self", ".", "max_support_slices", "<", "0", "else", "y_hat_slices", "[", ":", "self", ".", "max_support_slices", "]", ")", "\n", "\n", "mean_support", "=", "torch", ".", "cat", "(", "[", "latent_means", "]", "+", "support_slices", ",", "dim", "=", "1", ")", "\n", "mu", "=", "self", ".", "cc_mean_transforms", "[", "slice_index", "]", "(", "mean_support", ")", "\n", "mu", "=", "mu", "[", ":", ",", ":", ",", ":", "y_shape", "[", "0", "]", ",", ":", "y_shape", "[", "1", "]", "]", "\n", "\n", "scale_support", "=", "torch", ".", "cat", "(", "[", "latent_scales", "]", "+", "support_slices", ",", "dim", "=", "1", ")", "\n", "scale", "=", "self", ".", "cc_scale_transforms", "[", "slice_index", "]", "(", "scale_support", ")", "\n", "scale", "=", "scale", "[", ":", ",", ":", ",", ":", "y_shape", "[", "0", "]", ",", ":", "y_shape", "[", "1", "]", "]", "\n", "\n", "index", "=", "self", ".", "gaussian_conditional", ".", "build_indexes", "(", "scale", ")", "\n", "y_q_slice", "=", "self", ".", "gaussian_conditional", ".", "quantize", "(", "y_slice", ",", "\"symbols\"", ",", "mu", ")", "\n", "y_hat_slice", "=", "y_q_slice", "+", "mu", "\n", "\n", "symbols_list", ".", "extend", "(", "y_q_slice", ".", "reshape", "(", "-", "1", ")", ".", "tolist", "(", ")", ")", "\n", "indexes_list", ".", "extend", "(", "index", ".", "reshape", "(", "-", "1", ")", ".", "tolist", "(", ")", ")", "\n", "\n", "lrp_support", "=", "torch", ".", "cat", "(", "[", "mean_support", ",", "y_hat_slice", "]", ",", "dim", "=", "1", ")", "\n", "lrp", "=", "self", ".", "lrp_transforms", "[", "slice_index", "]", "(", "lrp_support", ")", "\n", "lrp", "=", "0.5", "*", "torch", ".", "tanh", "(", "lrp", ")", "\n", "y_hat_slice", "+=", "lrp", "\n", "\n", "y_hat_slices", ".", "append", "(", "y_hat_slice", ")", "\n", "", "encoder", ".", "encode_with_indexes", "(", "symbols_list", ",", "indexes_list", ",", "cdf", ",", "cdf_lengths", ",", "offsets", ")", "\n", "\n", "y_string", "=", "encoder", ".", "flush", "(", ")", "\n", "y_strings", ".", "append", "(", "y_string", ")", "\n", "\n", "return", "{", "\"strings\"", ":", "[", "y_strings", ",", "z_strings", "]", ",", "\"shape\"", ":", "z", ".", "size", "(", ")", "[", "-", "2", ":", "]", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.stf.SymmetricalTransFormer.decompress": [[734, 786], ["stf.SymmetricalTransFormer.entropy_bottleneck.decompress", "stf.SymmetricalTransFormer.h_scale_s", "stf.SymmetricalTransFormer.h_mean_s", "stf.SymmetricalTransFormer.gaussian_conditional.quantized_cdf.tolist", "stf.SymmetricalTransFormer.gaussian_conditional.cdf_length.reshape().int().tolist", "stf.SymmetricalTransFormer.gaussian_conditional.offset.reshape().int().tolist", "compressai.ans.RansDecoder", "compressai.ans.RansDecoder.set_stream", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "y_hat.permute().contiguous().view.permute().contiguous().view.permute().contiguous().view", "range", "stf.SymmetricalTransFormer.end_conv().clamp_", "isinstance", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "stf.SymmetricalTransFormer.gaussian_conditional.build_indexes", "compressai.ans.RansDecoder.decode_stream", "torch.Tensor().reshape", "torch.Tensor().reshape", "torch.Tensor().reshape", "torch.Tensor().reshape", "torch.Tensor().reshape", "torch.Tensor().reshape", "torch.Tensor().reshape", "torch.Tensor().reshape", "torch.Tensor().reshape", "stf.SymmetricalTransFormer.gaussian_conditional.dequantize", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "y_hat_slices.append", "layer", "len", "stf.SymmetricalTransFormer.gaussian_conditional.cdf_length.reshape().int", "stf.SymmetricalTransFormer.gaussian_conditional.offset.reshape().int", "stf.SymmetricalTransFormer.reshape().tolist", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "y_hat.permute().contiguous().view.permute().contiguous().view.permute().contiguous", "stf.SymmetricalTransFormer.end_conv", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "y_hat.permute().contiguous().view.permute().contiguous().view.view().permute().contiguous", "stf.SymmetricalTransFormer.gaussian_conditional.cdf_length.reshape", "stf.SymmetricalTransFormer.gaussian_conditional.offset.reshape", "stf.SymmetricalTransFormer.reshape", "y_hat.permute().contiguous().view.permute().contiguous().view.permute", "y_hat.permute().contiguous().view.permute().contiguous().view.view().permute", "y_hat.permute().contiguous().view.permute().contiguous().view.view"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyBottleneck.decompress", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.build_indexes", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyModel.dequantize"], ["", "def", "decompress", "(", "self", ",", "strings", ",", "shape", ")", ":", "\n", "        ", "assert", "isinstance", "(", "strings", ",", "list", ")", "and", "len", "(", "strings", ")", "==", "2", "\n", "z_hat", "=", "self", ".", "entropy_bottleneck", ".", "decompress", "(", "strings", "[", "1", "]", ",", "shape", ")", "\n", "latent_scales", "=", "self", ".", "h_scale_s", "(", "z_hat", ")", "\n", "latent_means", "=", "self", ".", "h_mean_s", "(", "z_hat", ")", "\n", "\n", "y_shape", "=", "[", "z_hat", ".", "shape", "[", "2", "]", "*", "4", ",", "z_hat", ".", "shape", "[", "3", "]", "*", "4", "]", "\n", "Wh", ",", "Ww", "=", "y_shape", "\n", "C", "=", "self", ".", "embed_dim", "*", "8", "\n", "\n", "y_string", "=", "strings", "[", "0", "]", "[", "0", "]", "\n", "\n", "y_hat_slices", "=", "[", "]", "\n", "cdf", "=", "self", ".", "gaussian_conditional", ".", "quantized_cdf", ".", "tolist", "(", ")", "\n", "cdf_lengths", "=", "self", ".", "gaussian_conditional", ".", "cdf_length", ".", "reshape", "(", "-", "1", ")", ".", "int", "(", ")", ".", "tolist", "(", ")", "\n", "offsets", "=", "self", ".", "gaussian_conditional", ".", "offset", ".", "reshape", "(", "-", "1", ")", ".", "int", "(", ")", ".", "tolist", "(", ")", "\n", "\n", "decoder", "=", "RansDecoder", "(", ")", "\n", "decoder", ".", "set_stream", "(", "y_string", ")", "\n", "\n", "for", "slice_index", "in", "range", "(", "self", ".", "num_slices", ")", ":", "\n", "            ", "support_slices", "=", "(", "y_hat_slices", "if", "self", ".", "max_support_slices", "<", "0", "else", "y_hat_slices", "[", ":", "self", ".", "max_support_slices", "]", ")", "\n", "mean_support", "=", "torch", ".", "cat", "(", "[", "latent_means", "]", "+", "support_slices", ",", "dim", "=", "1", ")", "\n", "mu", "=", "self", ".", "cc_mean_transforms", "[", "slice_index", "]", "(", "mean_support", ")", "\n", "mu", "=", "mu", "[", ":", ",", ":", ",", ":", "y_shape", "[", "0", "]", ",", ":", "y_shape", "[", "1", "]", "]", "\n", "\n", "scale_support", "=", "torch", ".", "cat", "(", "[", "latent_scales", "]", "+", "support_slices", ",", "dim", "=", "1", ")", "\n", "scale", "=", "self", ".", "cc_scale_transforms", "[", "slice_index", "]", "(", "scale_support", ")", "\n", "scale", "=", "scale", "[", ":", ",", ":", ",", ":", "y_shape", "[", "0", "]", ",", ":", "y_shape", "[", "1", "]", "]", "\n", "\n", "index", "=", "self", ".", "gaussian_conditional", ".", "build_indexes", "(", "scale", ")", "\n", "\n", "rv", "=", "decoder", ".", "decode_stream", "(", "index", ".", "reshape", "(", "-", "1", ")", ".", "tolist", "(", ")", ",", "cdf", ",", "cdf_lengths", ",", "offsets", ")", "\n", "rv", "=", "torch", ".", "Tensor", "(", "rv", ")", ".", "reshape", "(", "1", ",", "-", "1", ",", "y_shape", "[", "0", "]", ",", "y_shape", "[", "1", "]", ")", "\n", "y_hat_slice", "=", "self", ".", "gaussian_conditional", ".", "dequantize", "(", "rv", ",", "mu", ")", "\n", "\n", "\n", "lrp_support", "=", "torch", ".", "cat", "(", "[", "mean_support", ",", "y_hat_slice", "]", ",", "dim", "=", "1", ")", "\n", "lrp", "=", "self", ".", "lrp_transforms", "[", "slice_index", "]", "(", "lrp_support", ")", "\n", "lrp", "=", "0.5", "*", "torch", ".", "tanh", "(", "lrp", ")", "\n", "y_hat_slice", "+=", "lrp", "\n", "\n", "y_hat_slices", ".", "append", "(", "y_hat_slice", ")", "\n", "\n", "", "y_hat", "=", "torch", ".", "cat", "(", "y_hat_slices", ",", "dim", "=", "1", ")", "\n", "y_hat", "=", "y_hat", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "Wh", "*", "Ww", ",", "C", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "num_layers", ")", ":", "\n", "            ", "layer", "=", "self", ".", "syn_layers", "[", "i", "]", "\n", "y_hat", ",", "Wh", ",", "Ww", "=", "layer", "(", "y_hat", ",", "Wh", ",", "Ww", ")", "\n", "\n", "", "x_hat", "=", "self", ".", "end_conv", "(", "y_hat", ".", "view", "(", "-", "1", ",", "Wh", ",", "Ww", ",", "self", ".", "embed_dim", ")", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", ".", "contiguous", "(", ")", ")", ".", "clamp_", "(", "0", ",", "1", ")", "\n", "return", "{", "\"x_hat\"", ":", "x_hat", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.stf.get_scale_table": [[21, 23], ["torch.exp", "torch.exp", "torch.exp", "torch.linspace", "torch.linspace", "torch.linspace", "math.log", "math.log"], "function", ["None"], ["def", "get_scale_table", "(", "min", "=", "SCALES_MIN", ",", "max", "=", "SCALES_MAX", ",", "levels", "=", "SCALES_LEVELS", ")", ":", "\n", "    ", "return", "torch", ".", "exp", "(", "torch", ".", "linspace", "(", "math", ".", "log", "(", "min", ")", ",", "math", ".", "log", "(", "max", ")", ",", "levels", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.stf.window_partition": [[42, 47], ["x.view.view", "x.view.permute().contiguous().view", "x.view.permute().contiguous", "x.view.permute"], "function", ["None"], ["", "", "def", "window_partition", "(", "x", ",", "window_size", ")", ":", "\n", "    ", "B", ",", "H", ",", "W", ",", "C", "=", "x", ".", "shape", "\n", "x", "=", "x", ".", "view", "(", "B", ",", "H", "//", "window_size", ",", "window_size", ",", "W", "//", "window_size", ",", "window_size", ",", "C", ")", "\n", "windows", "=", "x", ".", "permute", "(", "0", ",", "1", ",", "3", ",", "2", ",", "4", ",", "5", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "window_size", ",", "window_size", ",", "C", ")", "\n", "return", "windows", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.stf.window_reverse": [[49, 54], ["int", "windows.view", "x.permute().contiguous().view.permute().contiguous().view", "x.permute().contiguous().view.permute().contiguous", "x.permute().contiguous().view.permute"], "function", ["None"], ["", "def", "window_reverse", "(", "windows", ",", "window_size", ",", "H", ",", "W", ")", ":", "\n", "    ", "B", "=", "int", "(", "windows", ".", "shape", "[", "0", "]", "/", "(", "H", "*", "W", "/", "window_size", "/", "window_size", ")", ")", "\n", "x", "=", "windows", ".", "view", "(", "B", ",", "H", "//", "window_size", ",", "W", "//", "window_size", ",", "window_size", ",", "window_size", ",", "-", "1", ")", "\n", "x", "=", "x", ".", "permute", "(", "0", ",", "1", ",", "3", ",", "2", ",", "4", ",", "5", ")", ".", "contiguous", "(", ")", ".", "view", "(", "B", ",", "H", ",", "W", ",", "-", "1", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.cnn.WACNN.__init__": [[26, 131], ["base.CompressionModel.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "compressai.entropy_models.EntropyBottleneck", "compressai.entropy_models.GaussianConditional", "utils.conv", "compressai.layers.GDN", "utils.conv", "compressai.layers.GDN", "compressai.layers.Win_noShift_Attention", "utils.conv", "compressai.layers.GDN", "utils.conv", "compressai.layers.Win_noShift_Attention", "compressai.layers.Win_noShift_Attention", "utils.deconv", "compressai.layers.GDN", "utils.deconv", "compressai.layers.GDN", "compressai.layers.Win_noShift_Attention", "utils.deconv", "compressai.layers.GDN", "utils.deconv", "compressai.layers.conv3x3", "torch.GELU", "torch.GELU", "compressai.layers.conv3x3", "torch.GELU", "torch.GELU", "compressai.layers.conv3x3", "torch.GELU", "torch.GELU", "compressai.layers.conv3x3", "torch.GELU", "torch.GELU", "compressai.layers.conv3x3", "compressai.layers.conv3x3", "torch.GELU", "torch.GELU", "compressai.layers.subpel_conv3x3", "torch.GELU", "torch.GELU", "compressai.layers.conv3x3", "torch.GELU", "torch.GELU", "compressai.layers.subpel_conv3x3", "torch.GELU", "torch.GELU", "compressai.layers.conv3x3", "compressai.layers.conv3x3", "torch.GELU", "torch.GELU", "compressai.layers.subpel_conv3x3", "torch.GELU", "torch.GELU", "compressai.layers.conv3x3", "torch.GELU", "torch.GELU", "compressai.layers.subpel_conv3x3", "torch.GELU", "torch.GELU", "compressai.layers.conv3x3", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "utils.conv", "torch.GELU", "torch.GELU", "utils.conv", "torch.GELU", "torch.GELU", "utils.conv", "torch.GELU", "torch.GELU", "utils.conv", "torch.GELU", "torch.GELU", "utils.conv", "range", "utils.conv", "torch.GELU", "torch.GELU", "utils.conv", "torch.GELU", "torch.GELU", "utils.conv", "torch.GELU", "torch.GELU", "utils.conv", "torch.GELU", "torch.GELU", "utils.conv", "range", "utils.conv", "torch.GELU", "torch.GELU", "utils.conv", "torch.GELU", "torch.GELU", "utils.conv", "torch.GELU", "torch.GELU", "utils.conv", "torch.GELU", "torch.GELU", "utils.conv", "range", "min", "min", "min"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.__init__", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.conv", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.conv", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.conv", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.conv", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.deconv", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.deconv", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.deconv", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.deconv", "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.conv3x3", "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.conv3x3", "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.conv3x3", "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.conv3x3", "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.conv3x3", "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.conv3x3", "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.subpel_conv3x3", "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.conv3x3", "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.subpel_conv3x3", "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.conv3x3", "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.conv3x3", "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.subpel_conv3x3", "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.conv3x3", "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.subpel_conv3x3", "home.repos.pwc.inspect_result.googolxx_stf.layers.layers.conv3x3", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.conv", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.conv", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.conv", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.conv", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.conv", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.conv", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.conv", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.conv", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.conv", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.conv", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.conv", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.conv", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.conv", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.conv", "home.repos.pwc.inspect_result.googolxx_stf.models.utils.conv"], ["def", "__init__", "(", "self", ",", "N", "=", "192", ",", "M", "=", "320", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "self", ".", "num_slices", "=", "10", "\n", "self", ".", "max_support_slices", "=", "5", "\n", "\n", "self", ".", "g_a", "=", "nn", ".", "Sequential", "(", "\n", "conv", "(", "3", ",", "N", ",", "kernel_size", "=", "5", ",", "stride", "=", "2", ")", ",", "\n", "GDN", "(", "N", ")", ",", "\n", "conv", "(", "N", ",", "N", ",", "kernel_size", "=", "5", ",", "stride", "=", "2", ")", ",", "\n", "GDN", "(", "N", ")", ",", "\n", "Win_noShift_Attention", "(", "dim", "=", "N", ",", "num_heads", "=", "8", ",", "window_size", "=", "8", ",", "shift_size", "=", "4", ")", ",", "\n", "conv", "(", "N", ",", "N", ",", "kernel_size", "=", "5", ",", "stride", "=", "2", ")", ",", "\n", "GDN", "(", "N", ")", ",", "\n", "conv", "(", "N", ",", "M", ",", "kernel_size", "=", "5", ",", "stride", "=", "2", ")", ",", "\n", "Win_noShift_Attention", "(", "dim", "=", "M", ",", "num_heads", "=", "8", ",", "window_size", "=", "4", ",", "shift_size", "=", "2", ")", ",", "\n", ")", "\n", "self", ".", "g_s", "=", "nn", ".", "Sequential", "(", "\n", "Win_noShift_Attention", "(", "dim", "=", "M", ",", "num_heads", "=", "8", ",", "window_size", "=", "4", ",", "shift_size", "=", "2", ")", ",", "\n", "deconv", "(", "M", ",", "N", ",", "kernel_size", "=", "5", ",", "stride", "=", "2", ")", ",", "\n", "GDN", "(", "N", ",", "inverse", "=", "True", ")", ",", "\n", "deconv", "(", "N", ",", "N", ",", "kernel_size", "=", "5", ",", "stride", "=", "2", ")", ",", "\n", "GDN", "(", "N", ",", "inverse", "=", "True", ")", ",", "\n", "Win_noShift_Attention", "(", "dim", "=", "N", ",", "num_heads", "=", "8", ",", "window_size", "=", "8", ",", "shift_size", "=", "4", ")", ",", "\n", "deconv", "(", "N", ",", "N", ",", "kernel_size", "=", "5", ",", "stride", "=", "2", ")", ",", "\n", "GDN", "(", "N", ",", "inverse", "=", "True", ")", ",", "\n", "deconv", "(", "N", ",", "3", ",", "kernel_size", "=", "5", ",", "stride", "=", "2", ")", ",", "\n", ")", "\n", "\n", "self", ".", "h_a", "=", "nn", ".", "Sequential", "(", "\n", "conv3x3", "(", "320", ",", "320", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv3x3", "(", "320", ",", "288", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv3x3", "(", "288", ",", "256", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv3x3", "(", "256", ",", "224", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv3x3", "(", "224", ",", "192", ",", "stride", "=", "2", ")", ",", "\n", ")", "\n", "\n", "self", ".", "h_mean_s", "=", "nn", ".", "Sequential", "(", "\n", "conv3x3", "(", "192", ",", "192", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "subpel_conv3x3", "(", "192", ",", "224", ",", "2", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv3x3", "(", "224", ",", "256", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "subpel_conv3x3", "(", "256", ",", "288", ",", "2", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv3x3", "(", "288", ",", "320", ")", ",", "\n", ")", "\n", "\n", "self", ".", "h_scale_s", "=", "nn", ".", "Sequential", "(", "\n", "conv3x3", "(", "192", ",", "192", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "subpel_conv3x3", "(", "192", ",", "224", ",", "2", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv3x3", "(", "224", ",", "256", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "subpel_conv3x3", "(", "256", ",", "288", ",", "2", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv3x3", "(", "288", ",", "320", ")", ",", "\n", ")", "\n", "self", ".", "cc_mean_transforms", "=", "nn", ".", "ModuleList", "(", "\n", "nn", ".", "Sequential", "(", "\n", "conv", "(", "320", "+", "32", "*", "min", "(", "i", ",", "5", ")", ",", "224", ",", "stride", "=", "1", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv", "(", "224", ",", "176", ",", "stride", "=", "1", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv", "(", "176", ",", "128", ",", "stride", "=", "1", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv", "(", "128", ",", "64", ",", "stride", "=", "1", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv", "(", "64", ",", "32", ",", "stride", "=", "1", ",", "kernel_size", "=", "3", ")", ",", "\n", ")", "for", "i", "in", "range", "(", "10", ")", "\n", ")", "\n", "self", ".", "cc_scale_transforms", "=", "nn", ".", "ModuleList", "(", "\n", "nn", ".", "Sequential", "(", "\n", "conv", "(", "320", "+", "32", "*", "min", "(", "i", ",", "5", ")", ",", "224", ",", "stride", "=", "1", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv", "(", "224", ",", "176", ",", "stride", "=", "1", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv", "(", "176", ",", "128", ",", "stride", "=", "1", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv", "(", "128", ",", "64", ",", "stride", "=", "1", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv", "(", "64", ",", "32", ",", "stride", "=", "1", ",", "kernel_size", "=", "3", ")", ",", "\n", ")", "for", "i", "in", "range", "(", "10", ")", "\n", ")", "\n", "self", ".", "lrp_transforms", "=", "nn", ".", "ModuleList", "(", "\n", "nn", ".", "Sequential", "(", "\n", "conv", "(", "320", "+", "32", "*", "min", "(", "i", "+", "1", ",", "6", ")", ",", "224", ",", "stride", "=", "1", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv", "(", "224", ",", "176", ",", "stride", "=", "1", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv", "(", "176", ",", "128", ",", "stride", "=", "1", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv", "(", "128", ",", "64", ",", "stride", "=", "1", ",", "kernel_size", "=", "3", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv", "(", "64", ",", "32", ",", "stride", "=", "1", ",", "kernel_size", "=", "3", ")", ",", "\n", ")", "for", "i", "in", "range", "(", "10", ")", "\n", ")", "\n", "\n", "self", ".", "entropy_bottleneck", "=", "EntropyBottleneck", "(", "N", ")", "\n", "self", ".", "gaussian_conditional", "=", "GaussianConditional", "(", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.cnn.WACNN.update": [[133, 139], ["cnn.WACNN.gaussian_conditional.update_scale_table", "super().update", "cnn.get_scale_table"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.update_scale_table", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.update", "home.repos.pwc.inspect_result.googolxx_stf.models.cnn.get_scale_table"], ["", "def", "update", "(", "self", ",", "scale_table", "=", "None", ",", "force", "=", "False", ")", ":", "\n", "        ", "if", "scale_table", "is", "None", ":", "\n", "            ", "scale_table", "=", "get_scale_table", "(", ")", "\n", "", "updated", "=", "self", ".", "gaussian_conditional", ".", "update_scale_table", "(", "scale_table", ",", "force", "=", "force", ")", "\n", "updated", "|=", "super", "(", ")", ".", "update", "(", "force", "=", "force", ")", "\n", "return", "updated", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.cnn.WACNN.forward": [[141, 189], ["cnn.WACNN.g_a", "cnn.WACNN.h_a", "cnn.WACNN.entropy_bottleneck", "cnn.WACNN.entropy_bottleneck._get_medians", "cnn.WACNN.h_scale_s", "cnn.WACNN.h_mean_s", "cnn.WACNN.chunk", "enumerate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "cnn.WACNN.g_s", "compressai.ops.ste_round", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "cnn.WACNN.gaussian_conditional", "y_likelihood.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "y_hat_slices.append", "compressai.ops.ste_round", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyBottleneck._get_medians", "home.repos.pwc.inspect_result.googolxx_stf.ops.ops.ste_round", "home.repos.pwc.inspect_result.googolxx_stf.ops.ops.ste_round"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "g_a", "(", "x", ")", "\n", "y_shape", "=", "y", ".", "shape", "[", "2", ":", "]", "\n", "z", "=", "self", ".", "h_a", "(", "y", ")", "\n", "_", ",", "z_likelihoods", "=", "self", ".", "entropy_bottleneck", "(", "z", ")", "\n", "\n", "# Use rounding (instead of uniform noise) to modify z before passing it", "\n", "# to the hyper-synthesis transforms. Note that quantize() overrides the", "\n", "# gradient to create a straight-through estimator.", "\n", "z_offset", "=", "self", ".", "entropy_bottleneck", ".", "_get_medians", "(", ")", "\n", "z_tmp", "=", "z", "-", "z_offset", "\n", "z_hat", "=", "ste_round", "(", "z_tmp", ")", "+", "z_offset", "\n", "\n", "latent_scales", "=", "self", ".", "h_scale_s", "(", "z_hat", ")", "\n", "latent_means", "=", "self", ".", "h_mean_s", "(", "z_hat", ")", "\n", "\n", "y_slices", "=", "y", ".", "chunk", "(", "self", ".", "num_slices", ",", "1", ")", "\n", "y_hat_slices", "=", "[", "]", "\n", "y_likelihood", "=", "[", "]", "\n", "\n", "for", "slice_index", ",", "y_slice", "in", "enumerate", "(", "y_slices", ")", ":", "\n", "            ", "support_slices", "=", "(", "y_hat_slices", "if", "self", ".", "max_support_slices", "<", "0", "else", "y_hat_slices", "[", ":", "self", ".", "max_support_slices", "]", ")", "\n", "mean_support", "=", "torch", ".", "cat", "(", "[", "latent_means", "]", "+", "support_slices", ",", "dim", "=", "1", ")", "\n", "mu", "=", "self", ".", "cc_mean_transforms", "[", "slice_index", "]", "(", "mean_support", ")", "\n", "mu", "=", "mu", "[", ":", ",", ":", ",", ":", "y_shape", "[", "0", "]", ",", ":", "y_shape", "[", "1", "]", "]", "\n", "\n", "scale_support", "=", "torch", ".", "cat", "(", "[", "latent_scales", "]", "+", "support_slices", ",", "dim", "=", "1", ")", "\n", "scale", "=", "self", ".", "cc_scale_transforms", "[", "slice_index", "]", "(", "scale_support", ")", "\n", "scale", "=", "scale", "[", ":", ",", ":", ",", ":", "y_shape", "[", "0", "]", ",", ":", "y_shape", "[", "1", "]", "]", "\n", "\n", "_", ",", "y_slice_likelihood", "=", "self", ".", "gaussian_conditional", "(", "y_slice", ",", "scale", ",", "mu", ")", "\n", "y_likelihood", ".", "append", "(", "y_slice_likelihood", ")", "\n", "y_hat_slice", "=", "ste_round", "(", "y_slice", "-", "mu", ")", "+", "mu", "\n", "\n", "lrp_support", "=", "torch", ".", "cat", "(", "[", "mean_support", ",", "y_hat_slice", "]", ",", "dim", "=", "1", ")", "\n", "lrp", "=", "self", ".", "lrp_transforms", "[", "slice_index", "]", "(", "lrp_support", ")", "\n", "lrp", "=", "0.5", "*", "torch", ".", "tanh", "(", "lrp", ")", "\n", "y_hat_slice", "+=", "lrp", "\n", "\n", "y_hat_slices", ".", "append", "(", "y_hat_slice", ")", "\n", "\n", "", "y_hat", "=", "torch", ".", "cat", "(", "y_hat_slices", ",", "dim", "=", "1", ")", "\n", "y_likelihoods", "=", "torch", ".", "cat", "(", "y_likelihood", ",", "dim", "=", "1", ")", "\n", "x_hat", "=", "self", ".", "g_s", "(", "y_hat", ")", "\n", "\n", "return", "{", "\n", "\"x_hat\"", ":", "x_hat", ",", "\n", "\"likelihoods\"", ":", "{", "\"y\"", ":", "y_likelihoods", ",", "\"z\"", ":", "z_likelihoods", "}", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.cnn.WACNN.load_state_dict": [[191, 199], ["utils.update_registered_buffers", "super().load_state_dict"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.models.utils.update_registered_buffers", "home.repos.pwc.inspect_result.googolxx_stf.models.cnn.WACNN.load_state_dict"], ["", "def", "load_state_dict", "(", "self", ",", "state_dict", ")", ":", "\n", "        ", "update_registered_buffers", "(", "\n", "self", ".", "gaussian_conditional", ",", "\n", "\"gaussian_conditional\"", ",", "\n", "[", "\"_quantized_cdf\"", ",", "\"_offset\"", ",", "\"_cdf_length\"", ",", "\"scale_table\"", "]", ",", "\n", "state_dict", ",", "\n", ")", "\n", "super", "(", ")", ".", "load_state_dict", "(", "state_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.cnn.WACNN.from_state_dict": [[200, 209], ["cls", "cls.load_state_dict"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.models.cnn.WACNN.load_state_dict"], ["", "@", "classmethod", "\n", "def", "from_state_dict", "(", "cls", ",", "state_dict", ")", ":", "\n", "        ", "\"\"\"Return a new model instance from `state_dict`.\"\"\"", "\n", "# N = state_dict[\"g_a.0.weight\"].size(0)", "\n", "# M = state_dict[\"g_a.6.weight\"].size(0)", "\n", "# net = cls(N, M)", "\n", "net", "=", "cls", "(", "192", ",", "320", ")", "\n", "net", ".", "load_state_dict", "(", "state_dict", ")", "\n", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.cnn.WACNN.compress": [[210, 268], ["cnn.WACNN.g_a", "cnn.WACNN.h_a", "cnn.WACNN.entropy_bottleneck.compress", "cnn.WACNN.entropy_bottleneck.decompress", "cnn.WACNN.h_scale_s", "cnn.WACNN.h_mean_s", "cnn.WACNN.chunk", "cnn.WACNN.gaussian_conditional.quantized_cdf.tolist", "cnn.WACNN.gaussian_conditional.cdf_length.reshape().int().tolist", "cnn.WACNN.gaussian_conditional.offset.reshape().int().tolist", "compressai.ans.BufferedRansEncoder", "enumerate", "compressai.ans.BufferedRansEncoder.encode_with_indexes", "compressai.ans.BufferedRansEncoder.flush", "y_strings.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "cnn.WACNN.gaussian_conditional.build_indexes", "cnn.WACNN.gaussian_conditional.quantize", "symbols_list.extend", "indexes_list.extend", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "y_hat_slices.append", "y_scales.append", "y_means.append", "cnn.WACNN.size", "cnn.WACNN.gaussian_conditional.cdf_length.reshape().int", "cnn.WACNN.gaussian_conditional.offset.reshape().int", "cnn.WACNN.reshape().tolist", "cnn.WACNN.reshape().tolist", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "cnn.WACNN.size", "cnn.WACNN.gaussian_conditional.cdf_length.reshape", "cnn.WACNN.gaussian_conditional.offset.reshape", "cnn.WACNN.reshape", "cnn.WACNN.reshape"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyBottleneck.compress", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyBottleneck.decompress", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models._EntropyCoder.encode_with_indexes", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.build_indexes", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyModel.quantize"], ["", "def", "compress", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "g_a", "(", "x", ")", "\n", "y_shape", "=", "y", ".", "shape", "[", "2", ":", "]", "\n", "\n", "z", "=", "self", ".", "h_a", "(", "y", ")", "\n", "z_strings", "=", "self", ".", "entropy_bottleneck", ".", "compress", "(", "z", ")", "\n", "z_hat", "=", "self", ".", "entropy_bottleneck", ".", "decompress", "(", "z_strings", ",", "z", ".", "size", "(", ")", "[", "-", "2", ":", "]", ")", "\n", "\n", "latent_scales", "=", "self", ".", "h_scale_s", "(", "z_hat", ")", "\n", "latent_means", "=", "self", ".", "h_mean_s", "(", "z_hat", ")", "\n", "\n", "y_slices", "=", "y", ".", "chunk", "(", "self", ".", "num_slices", ",", "1", ")", "\n", "y_hat_slices", "=", "[", "]", "\n", "y_scales", "=", "[", "]", "\n", "y_means", "=", "[", "]", "\n", "\n", "cdf", "=", "self", ".", "gaussian_conditional", ".", "quantized_cdf", ".", "tolist", "(", ")", "\n", "cdf_lengths", "=", "self", ".", "gaussian_conditional", ".", "cdf_length", ".", "reshape", "(", "-", "1", ")", ".", "int", "(", ")", ".", "tolist", "(", ")", "\n", "offsets", "=", "self", ".", "gaussian_conditional", ".", "offset", ".", "reshape", "(", "-", "1", ")", ".", "int", "(", ")", ".", "tolist", "(", ")", "\n", "\n", "encoder", "=", "BufferedRansEncoder", "(", ")", "\n", "symbols_list", "=", "[", "]", "\n", "indexes_list", "=", "[", "]", "\n", "y_strings", "=", "[", "]", "\n", "\n", "for", "slice_index", ",", "y_slice", "in", "enumerate", "(", "y_slices", ")", ":", "\n", "            ", "support_slices", "=", "(", "y_hat_slices", "if", "self", ".", "max_support_slices", "<", "0", "else", "y_hat_slices", "[", ":", "self", ".", "max_support_slices", "]", ")", "\n", "\n", "mean_support", "=", "torch", ".", "cat", "(", "[", "latent_means", "]", "+", "support_slices", ",", "dim", "=", "1", ")", "\n", "mu", "=", "self", ".", "cc_mean_transforms", "[", "slice_index", "]", "(", "mean_support", ")", "\n", "mu", "=", "mu", "[", ":", ",", ":", ",", ":", "y_shape", "[", "0", "]", ",", ":", "y_shape", "[", "1", "]", "]", "\n", "\n", "scale_support", "=", "torch", ".", "cat", "(", "[", "latent_scales", "]", "+", "support_slices", ",", "dim", "=", "1", ")", "\n", "scale", "=", "self", ".", "cc_scale_transforms", "[", "slice_index", "]", "(", "scale_support", ")", "\n", "scale", "=", "scale", "[", ":", ",", ":", ",", ":", "y_shape", "[", "0", "]", ",", ":", "y_shape", "[", "1", "]", "]", "\n", "\n", "index", "=", "self", ".", "gaussian_conditional", ".", "build_indexes", "(", "scale", ")", "\n", "y_q_slice", "=", "self", ".", "gaussian_conditional", ".", "quantize", "(", "y_slice", ",", "\"symbols\"", ",", "mu", ")", "\n", "y_hat_slice", "=", "y_q_slice", "+", "mu", "\n", "\n", "symbols_list", ".", "extend", "(", "y_q_slice", ".", "reshape", "(", "-", "1", ")", ".", "tolist", "(", ")", ")", "\n", "indexes_list", ".", "extend", "(", "index", ".", "reshape", "(", "-", "1", ")", ".", "tolist", "(", ")", ")", "\n", "\n", "\n", "lrp_support", "=", "torch", ".", "cat", "(", "[", "mean_support", ",", "y_hat_slice", "]", ",", "dim", "=", "1", ")", "\n", "lrp", "=", "self", ".", "lrp_transforms", "[", "slice_index", "]", "(", "lrp_support", ")", "\n", "lrp", "=", "0.5", "*", "torch", ".", "tanh", "(", "lrp", ")", "\n", "y_hat_slice", "+=", "lrp", "\n", "\n", "y_hat_slices", ".", "append", "(", "y_hat_slice", ")", "\n", "y_scales", ".", "append", "(", "scale", ")", "\n", "y_means", ".", "append", "(", "mu", ")", "\n", "\n", "", "encoder", ".", "encode_with_indexes", "(", "symbols_list", ",", "indexes_list", ",", "cdf", ",", "cdf_lengths", ",", "offsets", ")", "\n", "y_string", "=", "encoder", ".", "flush", "(", ")", "\n", "y_strings", ".", "append", "(", "y_string", ")", "\n", "\n", "return", "{", "\"strings\"", ":", "[", "y_strings", ",", "z_strings", "]", ",", "\"shape\"", ":", "z", ".", "size", "(", ")", "[", "-", "2", ":", "]", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.cnn.WACNN._likelihood": [[269, 282], ["float", "torch.max", "torch.max", "torch.max", "torch.max", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "cnn.WACNN._standardized_cumulative", "cnn.WACNN._standardized_cumulative", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional._standardized_cumulative", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional._standardized_cumulative"], ["", "def", "_likelihood", "(", "self", ",", "inputs", ",", "scales", ",", "means", "=", "None", ")", ":", "\n", "        ", "half", "=", "float", "(", "0.5", ")", "\n", "if", "means", "is", "not", "None", ":", "\n", "            ", "values", "=", "inputs", "-", "means", "\n", "", "else", ":", "\n", "            ", "values", "=", "inputs", "\n", "\n", "", "scales", "=", "torch", ".", "max", "(", "scales", ",", "torch", ".", "tensor", "(", "0.11", ")", ")", "\n", "values", "=", "torch", ".", "abs", "(", "values", ")", "\n", "upper", "=", "self", ".", "_standardized_cumulative", "(", "(", "half", "-", "values", ")", "/", "scales", ")", "\n", "lower", "=", "self", ".", "_standardized_cumulative", "(", "(", "-", "half", "-", "values", ")", "/", "scales", ")", "\n", "likelihood", "=", "upper", "-", "lower", "\n", "return", "likelihood", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.cnn.WACNN._standardized_cumulative": [[283, 288], ["float", "float", "torch.erfc", "torch.erfc", "torch.erfc", "torch.erfc"], "methods", ["None"], ["", "def", "_standardized_cumulative", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "half", "=", "float", "(", "0.5", ")", "\n", "const", "=", "float", "(", "-", "(", "2", "**", "-", "0.5", ")", ")", "\n", "# Using the complementary error function maximizes numerical precision.", "\n", "return", "half", "*", "torch", ".", "erfc", "(", "const", "*", "inputs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.cnn.WACNN.decompress": [[289, 333], ["cnn.WACNN.entropy_bottleneck.decompress", "cnn.WACNN.h_scale_s", "cnn.WACNN.h_mean_s", "cnn.WACNN.gaussian_conditional.quantized_cdf.tolist", "cnn.WACNN.gaussian_conditional.cdf_length.reshape().int().tolist", "cnn.WACNN.gaussian_conditional.offset.reshape().int().tolist", "compressai.ans.RansDecoder", "compressai.ans.RansDecoder.set_stream", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "cnn.WACNN.g_s().clamp_", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "cnn.WACNN.gaussian_conditional.build_indexes", "compressai.ans.RansDecoder.decode_stream", "torch.Tensor().reshape", "torch.Tensor().reshape", "torch.Tensor().reshape", "torch.Tensor().reshape", "cnn.WACNN.gaussian_conditional.dequantize", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "y_hat_slices.append", "cnn.WACNN.gaussian_conditional.cdf_length.reshape().int", "cnn.WACNN.gaussian_conditional.offset.reshape().int", "cnn.WACNN.reshape().tolist", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "cnn.WACNN.g_s", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "cnn.WACNN.gaussian_conditional.cdf_length.reshape", "cnn.WACNN.gaussian_conditional.offset.reshape", "cnn.WACNN.reshape"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyBottleneck.decompress", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.build_indexes", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyModel.dequantize"], ["", "def", "decompress", "(", "self", ",", "strings", ",", "shape", ")", ":", "\n", "        ", "z_hat", "=", "self", ".", "entropy_bottleneck", ".", "decompress", "(", "strings", "[", "1", "]", ",", "shape", ")", "\n", "latent_scales", "=", "self", ".", "h_scale_s", "(", "z_hat", ")", "\n", "latent_means", "=", "self", ".", "h_mean_s", "(", "z_hat", ")", "\n", "\n", "y_shape", "=", "[", "z_hat", ".", "shape", "[", "2", "]", "*", "4", ",", "z_hat", ".", "shape", "[", "3", "]", "*", "4", "]", "\n", "\n", "y_string", "=", "strings", "[", "0", "]", "[", "0", "]", "\n", "\n", "y_hat_slices", "=", "[", "]", "\n", "cdf", "=", "self", ".", "gaussian_conditional", ".", "quantized_cdf", ".", "tolist", "(", ")", "\n", "cdf_lengths", "=", "self", ".", "gaussian_conditional", ".", "cdf_length", ".", "reshape", "(", "-", "1", ")", ".", "int", "(", ")", ".", "tolist", "(", ")", "\n", "offsets", "=", "self", ".", "gaussian_conditional", ".", "offset", ".", "reshape", "(", "-", "1", ")", ".", "int", "(", ")", ".", "tolist", "(", ")", "\n", "\n", "decoder", "=", "RansDecoder", "(", ")", "\n", "decoder", ".", "set_stream", "(", "y_string", ")", "\n", "\n", "for", "slice_index", "in", "range", "(", "self", ".", "num_slices", ")", ":", "\n", "            ", "support_slices", "=", "(", "y_hat_slices", "if", "self", ".", "max_support_slices", "<", "0", "else", "y_hat_slices", "[", ":", "self", ".", "max_support_slices", "]", ")", "\n", "mean_support", "=", "torch", ".", "cat", "(", "[", "latent_means", "]", "+", "support_slices", ",", "dim", "=", "1", ")", "\n", "mu", "=", "self", ".", "cc_mean_transforms", "[", "slice_index", "]", "(", "mean_support", ")", "\n", "mu", "=", "mu", "[", ":", ",", ":", ",", ":", "y_shape", "[", "0", "]", ",", ":", "y_shape", "[", "1", "]", "]", "\n", "\n", "scale_support", "=", "torch", ".", "cat", "(", "[", "latent_scales", "]", "+", "support_slices", ",", "dim", "=", "1", ")", "\n", "scale", "=", "self", ".", "cc_scale_transforms", "[", "slice_index", "]", "(", "scale_support", ")", "\n", "scale", "=", "scale", "[", ":", ",", ":", ",", ":", "y_shape", "[", "0", "]", ",", ":", "y_shape", "[", "1", "]", "]", "\n", "\n", "index", "=", "self", ".", "gaussian_conditional", ".", "build_indexes", "(", "scale", ")", "\n", "\n", "rv", "=", "decoder", ".", "decode_stream", "(", "index", ".", "reshape", "(", "-", "1", ")", ".", "tolist", "(", ")", ",", "cdf", ",", "cdf_lengths", ",", "offsets", ")", "\n", "rv", "=", "torch", ".", "Tensor", "(", "rv", ")", ".", "reshape", "(", "1", ",", "-", "1", ",", "y_shape", "[", "0", "]", ",", "y_shape", "[", "1", "]", ")", "\n", "y_hat_slice", "=", "self", ".", "gaussian_conditional", ".", "dequantize", "(", "rv", ",", "mu", ")", "\n", "\n", "lrp_support", "=", "torch", ".", "cat", "(", "[", "mean_support", ",", "y_hat_slice", "]", ",", "dim", "=", "1", ")", "\n", "lrp", "=", "self", ".", "lrp_transforms", "[", "slice_index", "]", "(", "lrp_support", ")", "\n", "lrp", "=", "0.5", "*", "torch", ".", "tanh", "(", "lrp", ")", "\n", "y_hat_slice", "+=", "lrp", "\n", "\n", "y_hat_slices", ".", "append", "(", "y_hat_slice", ")", "\n", "\n", "", "y_hat", "=", "torch", ".", "cat", "(", "y_hat_slices", ",", "dim", "=", "1", ")", "\n", "x_hat", "=", "self", ".", "g_s", "(", "y_hat", ")", ".", "clamp_", "(", "0", ",", "1", ")", "\n", "\n", "return", "{", "\"x_hat\"", ":", "x_hat", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.cnn.get_scale_table": [[19, 21], ["torch.exp", "torch.exp", "torch.linspace", "torch.linspace", "math.log", "math.log"], "function", ["None"], ["def", "get_scale_table", "(", "min", "=", "SCALES_MIN", ",", "max", "=", "SCALES_MAX", ",", "levels", "=", "SCALES_LEVELS", ")", ":", "\n", "    ", "return", "torch", ".", "exp", "(", "torch", ".", "linspace", "(", "math", ".", "log", "(", "min", ")", ",", "math", ".", "log", "(", "max", ")", ",", "levels", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.utils.find_named_module": [[19, 31], ["next", "module.named_modules"], "function", ["None"], ["\n", "\n", "class", "ImageFolder", "(", "Dataset", ")", ":", "\n", "    "]], "home.repos.pwc.inspect_result.googolxx_stf.models.utils.find_named_buffer": [[33, 44], ["next", "module.named_buffers"], "function", ["None"], ["\n", "\n", "def", "__init__", "(", "self", ",", "root", ",", "transform", "=", "None", ",", "split", "=", "\"train\"", ")", ":", "\n", "        ", "splitdir", "=", "Path", "(", "root", ")", "/", "split", "/", "\"data\"", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.models.utils._update_registered_buffer": [[46, 72], ["state_dict[].size", "utils.find_named_buffer", "RuntimeError", "find_named_buffer.resize_", "module.register_buffer", "ValueError", "find_named_buffer.numel", "RuntimeError", "torch.empty().fill_", "torch.empty().fill_", "torch.empty", "torch.empty"], "function", ["home.repos.pwc.inspect_result.googolxx_stf.models.utils.find_named_buffer"], ["            ", "raise", "RuntimeError", "(", "f'Invalid directory \"{root}\"'", ")", "\n", "\n", "", "self", ".", "samples", "=", "[", "f", "for", "f", "in", "splitdir", ".", "iterdir", "(", ")", "if", "f", ".", "is_file", "(", ")", "]", "\n", "\n", "self", ".", "transform", "=", "transform", "\n", "\n", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            index (int): Index\n\n        Returns:\n            img: `PIL.Image.Image` or transformed `PIL.Image.Image`.\n        \"\"\"", "\n", "img", "=", "Image", ".", "open", "(", "self", ".", "samples", "[", "index", "]", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "if", "self", ".", "transform", ":", "\n", "            ", "return", "self", ".", "transform", "(", "img", ")", "\n", "", "return", "img", "\n", "\n", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "samples", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.googolxx_stf.models.utils.update_registered_buffers": [[74, 111], ["utils._update_registered_buffer", "module.named_buffers", "ValueError"], "function", ["home.repos.pwc.inspect_result.googolxx_stf.models.utils._update_registered_buffer"], []], "home.repos.pwc.inspect_result.googolxx_stf.models.utils.conv": [[114, 121], ["torch.Conv2d"], "function", ["None"], []], "home.repos.pwc.inspect_result.googolxx_stf.models.utils.deconv": [[124, 132], ["torch.ConvTranspose2d"], "function", ["None"], []], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models._EntropyCoder.__init__": [[20, 46], ["isinstance", "ValueError", "available_entropy_coders", "ValueError", "ans.RansEncoder", "ans.RansDecoder", "available_entropy_coders", "range_coder.RangeEncoder", "range_coder.RangeDecoder", "type"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.compressai.__init__.available_entropy_coders", "home.repos.pwc.inspect_result.googolxx_stf.compressai.__init__.available_entropy_coders"], ["def", "__init__", "(", "self", ",", "method", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "method", ",", "str", ")", ":", "\n", "            ", "raise", "ValueError", "(", "f'Invalid method type \"{type(method)}\"'", ")", "\n", "\n", "", "from", "compressai", "import", "available_entropy_coders", "\n", "\n", "if", "method", "not", "in", "available_entropy_coders", "(", ")", ":", "\n", "            ", "methods", "=", "\", \"", ".", "join", "(", "available_entropy_coders", "(", ")", ")", "\n", "raise", "ValueError", "(", "\n", "f'Unknown entropy coder \"{method}\"'", "f\" (available: {methods})\"", "\n", ")", "\n", "\n", "", "if", "method", "==", "\"ans\"", ":", "\n", "            ", "from", "compressai", "import", "ans", "\n", "\n", "encoder", "=", "ans", ".", "RansEncoder", "(", ")", "\n", "decoder", "=", "ans", ".", "RansDecoder", "(", ")", "\n", "", "elif", "method", "==", "\"rangecoder\"", ":", "\n", "            ", "import", "range_coder", "\n", "\n", "encoder", "=", "range_coder", ".", "RangeEncoder", "(", ")", "\n", "decoder", "=", "range_coder", ".", "RangeDecoder", "(", ")", "\n", "\n", "", "self", ".", "name", "=", "method", "\n", "self", ".", "_encoder", "=", "encoder", "\n", "self", ".", "_decoder", "=", "decoder", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models._EntropyCoder.encode_with_indexes": [[47, 49], ["entropy_models._EntropyCoder._encoder.encode_with_indexes"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models._EntropyCoder.encode_with_indexes"], ["", "def", "encode_with_indexes", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "self", ".", "_encoder", ".", "encode_with_indexes", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models._EntropyCoder.decode_with_indexes": [[50, 52], ["entropy_models._EntropyCoder._decoder.decode_with_indexes"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models._EntropyCoder.decode_with_indexes"], ["", "def", "decode_with_indexes", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "self", ".", "_decoder", ".", "decode_with_indexes", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyModel.__init__": [[80, 101], ["torch.Module.__init__", "entropy_models._EntropyCoder", "int", "entropy_models.EntropyModel.register_buffer", "entropy_models.EntropyModel.register_buffer", "entropy_models.EntropyModel.register_buffer", "entropy_models.default_entropy_coder", "compressai.ops.LowerBound", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.__init__", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.default_entropy_coder"], ["def", "__init__", "(", "\n", "self", ",", "\n", "likelihood_bound", ":", "float", "=", "1e-9", ",", "\n", "entropy_coder", ":", "Optional", "[", "str", "]", "=", "None", ",", "\n", "entropy_coder_precision", ":", "int", "=", "16", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "entropy_coder", "is", "None", ":", "\n", "            ", "entropy_coder", "=", "default_entropy_coder", "(", ")", "\n", "", "self", ".", "entropy_coder", "=", "_EntropyCoder", "(", "entropy_coder", ")", "\n", "self", ".", "entropy_coder_precision", "=", "int", "(", "entropy_coder_precision", ")", "\n", "\n", "self", ".", "use_likelihood_bound", "=", "likelihood_bound", ">", "0", "\n", "if", "self", ".", "use_likelihood_bound", ":", "\n", "            ", "self", ".", "likelihood_lower_bound", "=", "LowerBound", "(", "likelihood_bound", ")", "\n", "\n", "# to be filled on update()", "\n", "", "self", ".", "register_buffer", "(", "\"_offset\"", ",", "torch", ".", "IntTensor", "(", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"_quantized_cdf\"", ",", "torch", ".", "IntTensor", "(", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"_cdf_length\"", ",", "torch", ".", "IntTensor", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyModel.__getstate__": [[102, 106], ["entropy_models.EntropyModel.__dict__.copy"], "methods", ["None"], ["", "def", "__getstate__", "(", "self", ")", ":", "\n", "        ", "attributes", "=", "self", ".", "__dict__", ".", "copy", "(", ")", "\n", "attributes", "[", "\"entropy_coder\"", "]", "=", "self", ".", "entropy_coder", ".", "name", "\n", "return", "attributes", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyModel.__setstate__": [[107, 110], ["entropy_models._EntropyCoder", "entropy_models.EntropyModel.__dict__.pop"], "methods", ["None"], ["", "def", "__setstate__", "(", "self", ",", "state", ")", ":", "\n", "        ", "self", ".", "__dict__", "=", "state", "\n", "self", ".", "entropy_coder", "=", "_EntropyCoder", "(", "self", ".", "__dict__", ".", "pop", "(", "\"entropy_coder\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyModel.offset": [[111, 114], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "offset", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_offset", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyModel.quantized_cdf": [[115, 118], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "quantized_cdf", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_quantized_cdf", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyModel.cdf_length": [[119, 122], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "cdf_length", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_cdf_length", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyModel.quantize": [[126, 151], ["inputs.clone", "torch.round", "torch.round", "torch.round", "torch.round", "torch.round", "torch.round", "torch.round", "torch.round", "torch.round", "outputs.int.int.int", "ValueError", "float", "torch.empty_like().uniform_", "torch.empty_like().uniform_", "torch.empty_like().uniform_", "torch.empty_like().uniform_", "torch.empty_like().uniform_", "torch.empty_like().uniform_", "torch.empty_like().uniform_", "torch.empty_like().uniform_", "torch.empty_like().uniform_", "torch.empty_like", "torch.empty_like", "torch.empty_like", "torch.empty_like", "torch.empty_like", "torch.empty_like", "torch.empty_like", "torch.empty_like", "torch.empty_like"], "methods", ["None"], ["def", "quantize", "(", "\n", "self", ",", "inputs", ":", "Tensor", ",", "mode", ":", "str", ",", "means", ":", "Optional", "[", "Tensor", "]", "=", "None", "\n", ")", "->", "Tensor", ":", "\n", "        ", "if", "mode", "not", "in", "(", "\"noise\"", ",", "\"dequantize\"", ",", "\"symbols\"", ")", ":", "\n", "            ", "raise", "ValueError", "(", "f'Invalid quantization mode: \"{mode}\"'", ")", "\n", "", "if", "mode", "==", "\"noise\"", ":", "\n", "            ", "half", "=", "float", "(", "0.5", ")", "\n", "noise", "=", "torch", ".", "empty_like", "(", "inputs", ")", ".", "uniform_", "(", "-", "half", ",", "half", ")", "\n", "inputs", "=", "inputs", "+", "noise", "\n", "return", "inputs", "\n", "\n", "", "outputs", "=", "inputs", ".", "clone", "(", ")", "\n", "if", "means", "is", "not", "None", ":", "\n", "            ", "outputs", "-=", "means", "\n", "\n", "", "outputs", "=", "torch", ".", "round", "(", "outputs", ")", "\n", "\n", "if", "mode", "==", "\"dequantize\"", ":", "\n", "            ", "if", "means", "is", "not", "None", ":", "\n", "                ", "outputs", "+=", "means", "\n", "", "return", "outputs", "\n", "\n", "", "assert", "mode", "==", "\"symbols\"", ",", "mode", "\n", "outputs", "=", "outputs", ".", "int", "(", ")", "\n", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyModel._quantize": [[152, 157], ["warnings.warn", "entropy_models.EntropyModel.quantize"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyModel.quantize"], ["", "def", "_quantize", "(", "\n", "self", ",", "inputs", ":", "Tensor", ",", "mode", ":", "str", ",", "means", ":", "Optional", "[", "Tensor", "]", "=", "None", "\n", ")", "->", "Tensor", ":", "\n", "        ", "warnings", ".", "warn", "(", "\"_quantize is deprecated. Use quantize instead.\"", ")", "\n", "return", "self", ".", "quantize", "(", "inputs", ",", "mode", ",", "means", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyModel.dequantize": [[158, 166], ["inputs.type_as", "inputs.float"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "dequantize", "(", "inputs", ":", "Tensor", ",", "means", ":", "Optional", "[", "Tensor", "]", "=", "None", ")", "->", "Tensor", ":", "\n", "        ", "if", "means", "is", "not", "None", ":", "\n", "            ", "outputs", "=", "inputs", ".", "type_as", "(", "means", ")", "\n", "outputs", "+=", "means", "\n", "", "else", ":", "\n", "            ", "outputs", "=", "inputs", ".", "float", "(", ")", "\n", "", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyModel._dequantize": [[167, 171], ["warnings.warn", "cls.dequantize"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyModel.dequantize"], ["", "@", "classmethod", "\n", "def", "_dequantize", "(", "cls", ",", "inputs", ":", "Tensor", ",", "means", ":", "Optional", "[", "Tensor", "]", "=", "None", ")", "->", "Tensor", ":", "\n", "        ", "warnings", ".", "warn", "(", "\"_dequantize. Use dequantize instead.\"", ")", "\n", "return", "cls", ".", "dequantize", "(", "inputs", ",", "means", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyModel._pmf_to_cdf": [[172, 181], ["torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "enumerate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "compressai._CXX.pmf_to_quantized_cdf", "len", "compressai._CXX.pmf_to_quantized_cdf.size"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.pmf_to_quantized_cdf"], ["", "def", "_pmf_to_cdf", "(", "self", ",", "pmf", ",", "tail_mass", ",", "pmf_length", ",", "max_length", ")", ":", "\n", "        ", "cdf", "=", "torch", ".", "zeros", "(", "\n", "(", "len", "(", "pmf_length", ")", ",", "max_length", "+", "2", ")", ",", "dtype", "=", "torch", ".", "int32", ",", "device", "=", "pmf", ".", "device", "\n", ")", "\n", "for", "i", ",", "p", "in", "enumerate", "(", "pmf", ")", ":", "\n", "            ", "prob", "=", "torch", ".", "cat", "(", "(", "p", "[", ":", "pmf_length", "[", "i", "]", "]", ",", "tail_mass", "[", "i", "]", ")", ",", "dim", "=", "0", ")", "\n", "_cdf", "=", "pmf_to_quantized_cdf", "(", "prob", ",", "self", ".", "entropy_coder_precision", ")", "\n", "cdf", "[", "i", ",", ":", "_cdf", ".", "size", "(", "0", ")", "]", "=", "_cdf", "\n", "", "return", "cdf", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyModel._check_cdf_size": [[182, 188], ["entropy_models.EntropyModel._quantized_cdf.numel", "ValueError", "len", "ValueError", "entropy_models.EntropyModel._quantized_cdf.size", "entropy_models.EntropyModel._quantized_cdf.size"], "methods", ["None"], ["", "def", "_check_cdf_size", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_quantized_cdf", ".", "numel", "(", ")", "==", "0", ":", "\n", "            ", "raise", "ValueError", "(", "\"Uninitialized CDFs. Run update() first\"", ")", "\n", "\n", "", "if", "len", "(", "self", ".", "_quantized_cdf", ".", "size", "(", ")", ")", "!=", "2", ":", "\n", "            ", "raise", "ValueError", "(", "f\"Invalid CDF size {self._quantized_cdf.size()}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyModel._check_offsets_size": [[189, 195], ["entropy_models.EntropyModel._offset.numel", "ValueError", "len", "ValueError", "entropy_models.EntropyModel._offset.size", "entropy_models.EntropyModel._offset.size"], "methods", ["None"], ["", "", "def", "_check_offsets_size", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_offset", ".", "numel", "(", ")", "==", "0", ":", "\n", "            ", "raise", "ValueError", "(", "\"Uninitialized offsets. Run update() first\"", ")", "\n", "\n", "", "if", "len", "(", "self", ".", "_offset", ".", "size", "(", ")", ")", "!=", "1", ":", "\n", "            ", "raise", "ValueError", "(", "f\"Invalid offsets size {self._offset.size()}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyModel._check_cdf_length": [[196, 202], ["entropy_models.EntropyModel._cdf_length.numel", "ValueError", "len", "ValueError", "entropy_models.EntropyModel._cdf_length.size", "entropy_models.EntropyModel._cdf_length.size"], "methods", ["None"], ["", "", "def", "_check_cdf_length", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_cdf_length", ".", "numel", "(", ")", "==", "0", ":", "\n", "            ", "raise", "ValueError", "(", "\"Uninitialized CDF lengths. Run update() first\"", ")", "\n", "\n", "", "if", "len", "(", "self", ".", "_cdf_length", ".", "size", "(", ")", ")", "!=", "1", ":", "\n", "            ", "raise", "ValueError", "(", "f\"Invalid offsets size {self._cdf_length.size()}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyModel.compress": [[203, 239], ["entropy_models.EntropyModel.quantize", "entropy_models.EntropyModel._check_cdf_size", "entropy_models.EntropyModel._check_cdf_length", "entropy_models.EntropyModel._check_offsets_size", "range", "len", "ValueError", "inputs.size", "indexes.size", "ValueError", "entropy_models.EntropyModel.size", "entropy_models.EntropyModel.entropy_coder.encode_with_indexes", "strings.append", "inputs.size", "symbols[].reshape().int().tolist", "indexes[].reshape().int().tolist", "entropy_models.EntropyModel._quantized_cdf.tolist", "entropy_models.EntropyModel._cdf_length.reshape().int().tolist", "entropy_models.EntropyModel._offset.reshape().int().tolist", "symbols[].reshape().int", "indexes[].reshape().int", "entropy_models.EntropyModel._cdf_length.reshape().int", "entropy_models.EntropyModel._offset.reshape().int", "symbols[].reshape", "indexes[].reshape", "entropy_models.EntropyModel._cdf_length.reshape", "entropy_models.EntropyModel._offset.reshape"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyModel.quantize", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyModel._check_cdf_size", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyModel._check_cdf_length", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyModel._check_offsets_size", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models._EntropyCoder.encode_with_indexes"], ["", "", "def", "compress", "(", "self", ",", "inputs", ",", "indexes", ",", "means", "=", "None", ",", "flag", "=", "1", ")", ":", "\n", "        ", "\"\"\"\n        Compress input tensors to char strings.\n\n        Args:\n            inputs (torch.Tensor): input tensors\n            indexes (torch.IntTensor): tensors CDF indexes\n            means (torch.Tensor, optional): optional tensor means\n        \"\"\"", "\n", "symbols", "=", "self", ".", "quantize", "(", "inputs", ",", "\"symbols\"", ",", "means", ")", "\n", "\n", "if", "len", "(", "inputs", ".", "size", "(", ")", ")", "<", "2", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"Invalid `inputs` size. Expected a tensor with at least 2 dimensions.\"", "\n", ")", "\n", "\n", "", "if", "inputs", ".", "size", "(", ")", "!=", "indexes", ".", "size", "(", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"`inputs` and `indexes` should have the same size.\"", ")", "\n", "\n", "", "self", ".", "_check_cdf_size", "(", ")", "\n", "self", ".", "_check_cdf_length", "(", ")", "\n", "self", ".", "_check_offsets_size", "(", ")", "\n", "\n", "strings", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "symbols", ".", "size", "(", "0", ")", ")", ":", "\n", "            ", "rv", "=", "self", ".", "entropy_coder", ".", "encode_with_indexes", "(", "\n", "symbols", "[", "i", "]", ".", "reshape", "(", "-", "1", ")", ".", "int", "(", ")", ".", "tolist", "(", ")", ",", "\n", "indexes", "[", "i", "]", ".", "reshape", "(", "-", "1", ")", ".", "int", "(", ")", ".", "tolist", "(", ")", ",", "\n", "self", ".", "_quantized_cdf", ".", "tolist", "(", ")", ",", "\n", "self", ".", "_cdf_length", ".", "reshape", "(", "-", "1", ")", ".", "int", "(", ")", ".", "tolist", "(", ")", ",", "\n", "self", ".", "_offset", ".", "reshape", "(", "-", "1", ")", ".", "int", "(", ")", ".", "tolist", "(", ")", ",", "\n", ")", "\n", "strings", ".", "append", "(", "rv", ")", "\n", "\n", "\n", "", "return", "strings", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyModel.decompress": [[240, 291], ["entropy_models.EntropyModel._check_cdf_size", "entropy_models.EntropyModel._check_cdf_length", "entropy_models.EntropyModel._check_offsets_size", "cdf.new_empty", "enumerate", "entropy_models.EntropyModel.dequantize", "isinstance", "ValueError", "ValueError", "len", "ValueError", "indexes.size", "entropy_models.EntropyModel.entropy_coder.decode_with_indexes", "torch.tensor().reshape", "torch.tensor().reshape", "torch.tensor().reshape", "torch.tensor().reshape", "torch.tensor().reshape", "torch.tensor().reshape", "torch.tensor().reshape", "torch.tensor().reshape", "torch.tensor().reshape", "len", "indexes.size", "indexes.size", "ValueError", "means.size", "indexes.size", "range", "indexes[].reshape().int().tolist", "cdf.tolist", "entropy_models.EntropyModel._cdf_length.reshape().int().tolist", "entropy_models.EntropyModel._offset.reshape().int().tolist", "outputs[].size", "means.size", "indexes.size", "len", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "indexes.size", "means.size", "ValueError", "indexes[].reshape().int", "entropy_models.EntropyModel._cdf_length.reshape().int", "entropy_models.EntropyModel._offset.reshape().int", "indexes[].reshape", "entropy_models.EntropyModel._cdf_length.reshape", "entropy_models.EntropyModel._offset.reshape"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyModel._check_cdf_size", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyModel._check_cdf_length", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyModel._check_offsets_size", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyModel.dequantize", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models._EntropyCoder.decode_with_indexes"], ["", "def", "decompress", "(", "self", ",", "strings", ",", "indexes", ",", "means", "=", "None", ",", "flag", "=", "1", ")", ":", "\n", "        ", "\"\"\"\n        Decompress char strings to tensors.\n\n        Args:\n            strings (str): compressed tensors\n            indexes (torch.IntTensor): tensors CDF indexes\n            means (torch.Tensor, optional): optional tensor means\n        \"\"\"", "\n", "\n", "if", "not", "isinstance", "(", "strings", ",", "(", "tuple", ",", "list", ")", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"Invalid `strings` parameter type.\"", ")", "\n", "\n", "", "if", "not", "len", "(", "strings", ")", "==", "indexes", ".", "size", "(", "0", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"Invalid strings or indexes parameters\"", ")", "\n", "\n", "", "if", "len", "(", "indexes", ".", "size", "(", ")", ")", "<", "2", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"Invalid `indexes` size. Expected a tensor with at least 2 dimensions.\"", "\n", ")", "\n", "\n", "", "self", ".", "_check_cdf_size", "(", ")", "\n", "self", ".", "_check_cdf_length", "(", ")", "\n", "self", ".", "_check_offsets_size", "(", ")", "\n", "\n", "if", "means", "is", "not", "None", ":", "\n", "            ", "if", "means", ".", "size", "(", ")", "[", ":", "2", "]", "!=", "indexes", ".", "size", "(", ")", "[", ":", "2", "]", ":", "\n", "                ", "raise", "ValueError", "(", "\"Invalid means or indexes parameters\"", ")", "\n", "", "if", "means", ".", "size", "(", ")", "!=", "indexes", ".", "size", "(", ")", ":", "\n", "                ", "for", "i", "in", "range", "(", "2", ",", "len", "(", "indexes", ".", "size", "(", ")", ")", ")", ":", "\n", "                    ", "if", "means", ".", "size", "(", "i", ")", "!=", "1", ":", "\n", "                        ", "raise", "ValueError", "(", "\"Invalid means parameters\"", ")", "\n", "\n", "", "", "", "", "cdf", "=", "self", ".", "_quantized_cdf", "\n", "outputs", "=", "cdf", ".", "new_empty", "(", "indexes", ".", "size", "(", ")", ")", "\n", "\n", "for", "i", ",", "s", "in", "enumerate", "(", "strings", ")", ":", "\n", "            ", "values", "=", "self", ".", "entropy_coder", ".", "decode_with_indexes", "(", "\n", "s", ",", "\n", "indexes", "[", "i", "]", ".", "reshape", "(", "-", "1", ")", ".", "int", "(", ")", ".", "tolist", "(", ")", ",", "\n", "cdf", ".", "tolist", "(", ")", ",", "\n", "self", ".", "_cdf_length", ".", "reshape", "(", "-", "1", ")", ".", "int", "(", ")", ".", "tolist", "(", ")", ",", "\n", "self", ".", "_offset", ".", "reshape", "(", "-", "1", ")", ".", "int", "(", ")", ".", "tolist", "(", ")", ",", "\n", ")", "\n", "outputs", "[", "i", "]", "=", "torch", ".", "tensor", "(", "\n", "values", ",", "device", "=", "outputs", ".", "device", ",", "dtype", "=", "outputs", ".", "dtype", "\n", ")", ".", "reshape", "(", "outputs", "[", "i", "]", ".", "size", "(", ")", ")", "\n", "\n", "\n", "", "outputs", "=", "self", ".", "dequantize", "(", "outputs", ",", "means", ")", "\n", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyBottleneck.__init__": [[307, 349], ["entropy_models.EntropyModel.__init__", "int", "tuple", "float", "float", "range", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "numpy.log.repeat", "numpy.log", "entropy_models.EntropyBottleneck.register_buffer", "numpy.log", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor.data.fill_", "torch.Tensor.data.fill_", "torch.Tensor.data.fill_", "entropy_models.EntropyBottleneck.register_parameter", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.init.uniform_", "torch.init.uniform_", "torch.init.uniform_", "entropy_models.EntropyBottleneck.register_parameter", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "entropy_models.EntropyBottleneck.quantiles.size", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "int", "len", "numpy.expm1", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "len", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.init.zeros_", "torch.init.zeros_", "torch.init.zeros_", "entropy_models.EntropyBottleneck.register_parameter", "len", "torch.Parameter", "torch.Parameter", "torch.Parameter"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.__init__"], ["def", "__init__", "(", "\n", "self", ",", "\n", "channels", ":", "int", ",", "\n", "*", "args", ":", "Any", ",", "\n", "tail_mass", ":", "float", "=", "1e-9", ",", "\n", "init_scale", ":", "float", "=", "10", ",", "\n", "filters", ":", "Tuple", "[", "int", ",", "...", "]", "=", "(", "3", ",", "3", ",", "3", ",", "3", ")", ",", "\n", "**", "kwargs", ":", "Any", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n", "self", ".", "channels", "=", "int", "(", "channels", ")", "\n", "self", ".", "filters", "=", "tuple", "(", "int", "(", "f", ")", "for", "f", "in", "filters", ")", "\n", "self", ".", "init_scale", "=", "float", "(", "init_scale", ")", "\n", "self", ".", "tail_mass", "=", "float", "(", "tail_mass", ")", "\n", "\n", "# Create parameters", "\n", "filters", "=", "(", "1", ",", ")", "+", "self", ".", "filters", "+", "(", "1", ",", ")", "\n", "scale", "=", "self", ".", "init_scale", "**", "(", "1", "/", "(", "len", "(", "self", ".", "filters", ")", "+", "1", ")", ")", "\n", "channels", "=", "self", ".", "channels", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "filters", ")", "+", "1", ")", ":", "\n", "            ", "init", "=", "np", ".", "log", "(", "np", ".", "expm1", "(", "1", "/", "scale", "/", "filters", "[", "i", "+", "1", "]", ")", ")", "\n", "matrix", "=", "torch", ".", "Tensor", "(", "channels", ",", "filters", "[", "i", "+", "1", "]", ",", "filters", "[", "i", "]", ")", "\n", "matrix", ".", "data", ".", "fill_", "(", "init", ")", "\n", "self", ".", "register_parameter", "(", "f\"_matrix{i:d}\"", ",", "nn", ".", "Parameter", "(", "matrix", ")", ")", "\n", "\n", "bias", "=", "torch", ".", "Tensor", "(", "channels", ",", "filters", "[", "i", "+", "1", "]", ",", "1", ")", "\n", "nn", ".", "init", ".", "uniform_", "(", "bias", ",", "-", "0.5", ",", "0.5", ")", "\n", "self", ".", "register_parameter", "(", "f\"_bias{i:d}\"", ",", "nn", ".", "Parameter", "(", "bias", ")", ")", "\n", "\n", "if", "i", "<", "len", "(", "self", ".", "filters", ")", ":", "\n", "                ", "factor", "=", "torch", ".", "Tensor", "(", "channels", ",", "filters", "[", "i", "+", "1", "]", ",", "1", ")", "\n", "nn", ".", "init", ".", "zeros_", "(", "factor", ")", "\n", "self", ".", "register_parameter", "(", "f\"_factor{i:d}\"", ",", "nn", ".", "Parameter", "(", "factor", ")", ")", "\n", "\n", "", "", "self", ".", "quantiles", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "channels", ",", "1", ",", "3", ")", ")", "\n", "init", "=", "torch", ".", "Tensor", "(", "[", "-", "self", ".", "init_scale", ",", "0", ",", "self", ".", "init_scale", "]", ")", "\n", "self", ".", "quantiles", ".", "data", "=", "init", ".", "repeat", "(", "self", ".", "quantiles", ".", "size", "(", "0", ")", ",", "1", ",", "1", ")", "\n", "\n", "target", "=", "np", ".", "log", "(", "2", "/", "self", ".", "tail_mass", "-", "1", ")", "\n", "self", ".", "register_buffer", "(", "\"target\"", ",", "torch", ".", "Tensor", "(", "[", "-", "target", ",", "0", ",", "target", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyBottleneck._get_medians": [[350, 353], ["None"], "methods", ["None"], ["", "def", "_get_medians", "(", "self", ")", "->", "Tensor", ":", "\n", "        ", "medians", "=", "self", ".", "quantiles", "[", ":", ",", ":", ",", "1", ":", "2", "]", "\n", "return", "medians", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyBottleneck.update": [[354, 394], ["torch.ceil().int", "torch.ceil().int", "torch.ceil().int", "torch.ceil().int", "torch.ceil().int", "torch.ceil().int", "torch.ceil().int", "torch.ceil().int", "torch.ceil().int", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.ceil().int", "torch.ceil().int", "torch.ceil().int", "torch.ceil().int", "torch.ceil().int", "torch.ceil().int", "torch.ceil().int", "torch.ceil().int", "torch.ceil().int", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "pmf_length.max().item", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "float", "entropy_models.EntropyBottleneck._logits_cumulative", "entropy_models.EntropyBottleneck._logits_cumulative", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "entropy_models.EntropyBottleneck._pmf_to_cdf", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "entropy_models.EntropyBottleneck._offset.numel", "torch.ceil", "torch.ceil", "torch.ceil", "torch.ceil", "torch.ceil", "torch.ceil", "torch.ceil", "torch.ceil", "torch.ceil", "torch.ceil", "torch.ceil", "torch.ceil", "torch.ceil", "torch.ceil", "torch.ceil", "torch.ceil", "torch.ceil", "torch.ceil", "pmf_length.max", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyBottleneck._logits_cumulative", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyBottleneck._logits_cumulative", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyModel._pmf_to_cdf"], ["", "def", "update", "(", "self", ",", "force", ":", "bool", "=", "False", ")", "->", "bool", ":", "\n", "# Check if we need to update the bottleneck parameters, the offsets are", "\n", "# only computed and stored when the conditonal model is update()'d.", "\n", "        ", "if", "self", ".", "_offset", ".", "numel", "(", ")", ">", "0", "and", "not", "force", ":", "\n", "            ", "return", "False", "\n", "\n", "", "medians", "=", "self", ".", "quantiles", "[", ":", ",", "0", ",", "1", "]", "\n", "minima", "=", "medians", "-", "self", ".", "quantiles", "[", ":", ",", "0", ",", "0", "]", "\n", "minima", "=", "torch", ".", "ceil", "(", "minima", ")", ".", "int", "(", ")", "\n", "minima", "=", "torch", ".", "clamp", "(", "minima", ",", "min", "=", "0", ")", "\n", "\n", "maxima", "=", "self", ".", "quantiles", "[", ":", ",", "0", ",", "2", "]", "-", "medians", "\n", "maxima", "=", "torch", ".", "ceil", "(", "maxima", ")", ".", "int", "(", ")", "\n", "maxima", "=", "torch", ".", "clamp", "(", "maxima", ",", "min", "=", "0", ")", "\n", "\n", "self", ".", "_offset", "=", "-", "minima", "\n", "\n", "pmf_start", "=", "medians", "-", "minima", "\n", "pmf_length", "=", "maxima", "+", "minima", "+", "1", "\n", "\n", "max_length", "=", "pmf_length", ".", "max", "(", ")", ".", "item", "(", ")", "\n", "device", "=", "pmf_start", ".", "device", "\n", "samples", "=", "torch", ".", "arange", "(", "max_length", ",", "device", "=", "device", ")", "\n", "\n", "samples", "=", "samples", "[", "None", ",", ":", "]", "+", "pmf_start", "[", ":", ",", "None", ",", "None", "]", "\n", "\n", "half", "=", "float", "(", "0.5", ")", "\n", "\n", "lower", "=", "self", ".", "_logits_cumulative", "(", "samples", "-", "half", ",", "stop_gradient", "=", "True", ")", "\n", "upper", "=", "self", ".", "_logits_cumulative", "(", "samples", "+", "half", ",", "stop_gradient", "=", "True", ")", "\n", "sign", "=", "-", "torch", ".", "sign", "(", "lower", "+", "upper", ")", "\n", "pmf", "=", "torch", ".", "abs", "(", "torch", ".", "sigmoid", "(", "sign", "*", "upper", ")", "-", "torch", ".", "sigmoid", "(", "sign", "*", "lower", ")", ")", "\n", "\n", "pmf", "=", "pmf", "[", ":", ",", "0", ",", ":", "]", "\n", "tail_mass", "=", "torch", ".", "sigmoid", "(", "lower", "[", ":", ",", "0", ",", ":", "1", "]", ")", "+", "torch", ".", "sigmoid", "(", "-", "upper", "[", ":", ",", "0", ",", "-", "1", ":", "]", ")", "\n", "\n", "quantized_cdf", "=", "self", ".", "_pmf_to_cdf", "(", "pmf", ",", "tail_mass", ",", "pmf_length", ",", "max_length", ")", "\n", "self", ".", "_quantized_cdf", "=", "quantized_cdf", "\n", "self", ".", "_cdf_length", "=", "pmf_length", "+", "2", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyBottleneck.loss": [[395, 399], ["entropy_models.EntropyBottleneck._logits_cumulative", "torch.abs().sum", "torch.abs().sum", "torch.abs().sum", "torch.abs().sum", "torch.abs().sum", "torch.abs().sum", "torch.abs().sum", "torch.abs().sum", "torch.abs().sum", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyBottleneck._logits_cumulative"], ["", "def", "loss", "(", "self", ")", "->", "Tensor", ":", "\n", "        ", "logits", "=", "self", ".", "_logits_cumulative", "(", "self", ".", "quantiles", ",", "stop_gradient", "=", "True", ")", "\n", "loss", "=", "torch", ".", "abs", "(", "logits", "-", "self", ".", "target", ")", ".", "sum", "(", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyBottleneck._logits_cumulative": [[400, 420], ["range", "getattr", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "getattr", "len", "matrix.detach.detach.detach", "torch.softplus", "torch.softplus", "torch.softplus", "bias.detach.detach.detach", "len", "getattr", "factor.detach.detach.detach", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh"], "methods", ["None"], ["", "def", "_logits_cumulative", "(", "self", ",", "inputs", ":", "Tensor", ",", "stop_gradient", ":", "bool", ")", "->", "Tensor", ":", "\n", "# TorchScript not yet working (nn.Mmodule indexing not supported)", "\n", "        ", "logits", "=", "inputs", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "filters", ")", "+", "1", ")", ":", "\n", "            ", "matrix", "=", "getattr", "(", "self", ",", "f\"_matrix{i:d}\"", ")", "\n", "if", "stop_gradient", ":", "\n", "                ", "matrix", "=", "matrix", ".", "detach", "(", ")", "\n", "", "logits", "=", "torch", ".", "matmul", "(", "F", ".", "softplus", "(", "matrix", ")", ",", "logits", ")", "\n", "\n", "bias", "=", "getattr", "(", "self", ",", "f\"_bias{i:d}\"", ")", "\n", "if", "stop_gradient", ":", "\n", "                ", "bias", "=", "bias", ".", "detach", "(", ")", "\n", "", "logits", "+=", "bias", "\n", "\n", "if", "i", "<", "len", "(", "self", ".", "filters", ")", ":", "\n", "                ", "factor", "=", "getattr", "(", "self", ",", "f\"_factor{i:d}\"", ")", "\n", "if", "stop_gradient", ":", "\n", "                    ", "factor", "=", "factor", ".", "detach", "(", ")", "\n", "", "logits", "+=", "torch", ".", "tanh", "(", "factor", ")", "*", "torch", ".", "tanh", "(", "logits", ")", "\n", "", "", "return", "logits", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyBottleneck._likelihood": [[421, 434], ["float", "entropy_models.EntropyBottleneck._logits_cumulative", "entropy_models.EntropyBottleneck._logits_cumulative", "sign.detach.detach.detach", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyBottleneck._logits_cumulative", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyBottleneck._logits_cumulative"], ["", "@", "torch", ".", "jit", ".", "unused", "\n", "def", "_likelihood", "(", "self", ",", "inputs", ":", "Tensor", ")", "->", "Tensor", ":", "\n", "        ", "half", "=", "float", "(", "0.5", ")", "\n", "v0", "=", "inputs", "-", "half", "\n", "v1", "=", "inputs", "+", "half", "\n", "lower", "=", "self", ".", "_logits_cumulative", "(", "v0", ",", "stop_gradient", "=", "False", ")", "\n", "upper", "=", "self", ".", "_logits_cumulative", "(", "v1", ",", "stop_gradient", "=", "False", ")", "\n", "sign", "=", "-", "torch", ".", "sign", "(", "lower", "+", "upper", ")", "\n", "sign", "=", "sign", ".", "detach", "(", ")", "\n", "likelihood", "=", "torch", ".", "abs", "(", "\n", "torch", ".", "sigmoid", "(", "sign", "*", "upper", ")", "-", "torch", ".", "sigmoid", "(", "sign", "*", "lower", ")", "\n", ")", "\n", "return", "likelihood", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyBottleneck.check_out": [[435, 445], ["x[].reshape.size", "x[].reshape", "print", "print", "range", "x[].reshape.size", "range", "x[].reshape.size", "print", "print"], "methods", ["None"], ["", "def", "check_out", "(", "self", ",", "x", ")", ":", "\n", "        ", "t", "=", "x", ".", "size", "(", "1", ")", "\n", "x", "=", "x", "[", "0", "]", ".", "reshape", "(", "t", ",", "-", "1", ")", "\n", "print", "(", "x", ".", "shape", ")", "\n", "print", "(", "self", ".", "quantiles", ".", "shape", ")", "\n", "for", "i", "in", "range", "(", "x", ".", "size", "(", "0", ")", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "x", ".", "size", "(", "1", ")", ")", ":", "\n", "                ", "if", "x", "[", "i", "]", "[", "j", "]", "<", "self", ".", "quantiles", "[", "i", "]", "[", "0", "]", "[", "0", "]", "or", "x", "[", "i", "]", "[", "j", "]", ">", "self", ".", "quantiles", "[", "i", "]", "[", "0", "]", "[", "2", "]", ":", "\n", "                    ", "print", "(", "'x:'", ",", "x", "[", "i", "]", "[", "j", "]", ")", "\n", "print", "(", "'q:'", ",", "self", ".", "quantiles", "[", "i", "]", "[", "0", "]", "[", "0", "]", ",", "self", ".", "quantiles", "[", "i", "]", "[", "0", "]", "[", "2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyBottleneck.forward": [[446, 490], ["x.permute().contiguous.permute().contiguous.permute().contiguous", "x.permute().contiguous.permute().contiguous.size", "x.permute().contiguous.permute().contiguous.reshape", "entropy_models.EntropyBottleneck.quantize", "outputs.permute().contiguous.permute().contiguous.reshape", "outputs.permute().contiguous.permute().contiguous.permute().contiguous", "entropy_models.EntropyBottleneck.reshape", "entropy_models.EntropyBottleneck.permute().contiguous", "torch.jit.is_scripting", "torch.jit.is_scripting", "torch.jit.is_scripting", "torch.jit.is_scripting", "torch.jit.is_scripting", "torch.jit.is_scripting", "torch.jit.is_scripting", "torch.jit.is_scripting", "torch.jit.is_scripting", "numpy.arange", "x.permute().contiguous.permute().contiguous.size", "entropy_models.EntropyBottleneck._get_medians", "torch.jit.is_scripting", "torch.jit.is_scripting", "torch.jit.is_scripting", "torch.jit.is_scripting", "torch.jit.is_scripting", "torch.jit.is_scripting", "torch.jit.is_scripting", "torch.jit.is_scripting", "torch.jit.is_scripting", "entropy_models.EntropyBottleneck._likelihood", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "len", "numpy.arange", "x.permute().contiguous.permute().contiguous.permute", "entropy_models.EntropyBottleneck.likelihood_lower_bound", "outputs.permute().contiguous.permute().contiguous.permute", "entropy_models.EntropyBottleneck.permute", "len", "numpy.argsort"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyModel.quantize", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyBottleneck._get_medians", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional._likelihood"], ["", "", "", "", "def", "forward", "(", "\n", "self", ",", "x", ":", "Tensor", ",", "training", ":", "Optional", "[", "bool", "]", "=", "None", "\n", ")", "->", "Tuple", "[", "Tensor", ",", "Tensor", "]", ":", "\n", "        ", "if", "training", "is", "None", ":", "\n", "            ", "training", "=", "self", ".", "training", "\n", "\n", "", "if", "not", "torch", ".", "jit", ".", "is_scripting", "(", ")", ":", "\n", "# x from B x C x ... to C x B x ...", "\n", "            ", "perm", "=", "np", ".", "arange", "(", "len", "(", "x", ".", "shape", ")", ")", "\n", "perm", "[", "0", "]", ",", "perm", "[", "1", "]", "=", "perm", "[", "1", "]", ",", "perm", "[", "0", "]", "\n", "# Compute inverse permutation", "\n", "inv_perm", "=", "np", ".", "arange", "(", "len", "(", "x", ".", "shape", ")", ")", "[", "np", ".", "argsort", "(", "perm", ")", "]", "\n", "", "else", ":", "\n", "# TorchScript in 2D for static inference", "\n", "# Convert to (channels, ... , batch) format", "\n", "            ", "perm", "=", "(", "1", ",", "2", ",", "3", ",", "0", ")", "\n", "inv_perm", "=", "(", "3", ",", "0", ",", "1", ",", "2", ")", "\n", "\n", "", "x", "=", "x", ".", "permute", "(", "*", "perm", ")", ".", "contiguous", "(", ")", "\n", "shape", "=", "x", ".", "size", "(", ")", "\n", "values", "=", "x", ".", "reshape", "(", "x", ".", "size", "(", "0", ")", ",", "1", ",", "-", "1", ")", "\n", "\n", "# Add noise or quantize", "\n", "\n", "outputs", "=", "self", ".", "quantize", "(", "\n", "values", ",", "\"noise\"", "if", "training", "else", "\"dequantize\"", ",", "self", ".", "_get_medians", "(", ")", "\n", ")", "\n", "\n", "if", "not", "torch", ".", "jit", ".", "is_scripting", "(", ")", ":", "\n", "            ", "likelihood", "=", "self", ".", "_likelihood", "(", "outputs", ")", "\n", "if", "self", ".", "use_likelihood_bound", ":", "\n", "                ", "likelihood", "=", "self", ".", "likelihood_lower_bound", "(", "likelihood", ")", "\n", "", "", "else", ":", "\n", "# TorchScript not yet supported", "\n", "            ", "likelihood", "=", "torch", ".", "zeros_like", "(", "outputs", ")", "\n", "\n", "# Convert back to input tensor shape", "\n", "", "outputs", "=", "outputs", ".", "reshape", "(", "shape", ")", "\n", "outputs", "=", "outputs", ".", "permute", "(", "*", "inv_perm", ")", ".", "contiguous", "(", ")", "\n", "\n", "likelihood", "=", "likelihood", ".", "reshape", "(", "shape", ")", "\n", "likelihood", "=", "likelihood", ".", "permute", "(", "*", "inv_perm", ")", ".", "contiguous", "(", ")", "\n", "\n", "return", "outputs", ",", "likelihood", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyBottleneck._build_indexes": [[491, 503], ["len", "numpy.ones", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "indexes.int.int.int", "indexes.int.int.repeat", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_build_indexes", "(", "size", ")", ":", "\n", "        ", "dims", "=", "len", "(", "size", ")", "\n", "N", "=", "size", "[", "0", "]", "\n", "C", "=", "size", "[", "1", "]", "\n", "\n", "view_dims", "=", "np", ".", "ones", "(", "(", "dims", ",", ")", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "view_dims", "[", "1", "]", "=", "-", "1", "\n", "indexes", "=", "torch", ".", "arange", "(", "C", ")", ".", "view", "(", "*", "view_dims", ")", "\n", "indexes", "=", "indexes", ".", "int", "(", ")", "\n", "\n", "return", "indexes", ".", "repeat", "(", "N", ",", "1", ",", "*", "size", "[", "2", ":", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyBottleneck._extend_ndims": [[504, 507], ["tensor.reshape", "tensor.reshape"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_extend_ndims", "(", "tensor", ",", "n", ")", ":", "\n", "        ", "return", "tensor", ".", "reshape", "(", "-", "1", ",", "*", "(", "[", "1", "]", "*", "n", ")", ")", "if", "n", ">", "0", "else", "tensor", ".", "reshape", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyBottleneck.compress": [[508, 516], ["entropy_models.EntropyBottleneck._build_indexes", "entropy_models.EntropyBottleneck._get_medians().detach", "entropy_models.EntropyBottleneck._extend_ndims", "medians.expand.expand.expand", "entropy_models.EntropyModel.compress", "x.size", "len", "x.size", "entropy_models.EntropyBottleneck._get_medians", "x.size"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyBottleneck._build_indexes", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyBottleneck._extend_ndims", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyBottleneck.compress", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyBottleneck._get_medians"], ["", "def", "compress", "(", "self", ",", "x", ")", ":", "\n", "        ", "indexes", "=", "self", ".", "_build_indexes", "(", "x", ".", "size", "(", ")", ")", "\n", "medians", "=", "self", ".", "_get_medians", "(", ")", ".", "detach", "(", ")", "\n", "spatial_dims", "=", "len", "(", "x", ".", "size", "(", ")", ")", "-", "2", "\n", "medians", "=", "self", ".", "_extend_ndims", "(", "medians", ",", "spatial_dims", ")", "\n", "medians", "=", "medians", ".", "expand", "(", "x", ".", "size", "(", "0", ")", ",", "*", "(", "[", "-", "1", "]", "*", "(", "spatial_dims", "+", "1", ")", ")", ")", "\n", "\n", "return", "super", "(", ")", ".", "compress", "(", "x", ",", "indexes", ",", "medians", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyBottleneck.decompress": [[517, 523], ["entropy_models.EntropyBottleneck._build_indexes().to", "entropy_models.EntropyBottleneck._extend_ndims", "medians.expand.expand.expand", "entropy_models.EntropyModel.decompress", "len", "entropy_models.EntropyBottleneck._quantized_cdf.size", "entropy_models.EntropyBottleneck._get_medians().detach", "len", "len", "entropy_models.EntropyBottleneck._build_indexes", "entropy_models.EntropyBottleneck._get_medians", "len"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyBottleneck._extend_ndims", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyBottleneck.decompress", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyBottleneck._build_indexes", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyBottleneck._get_medians"], ["", "def", "decompress", "(", "self", ",", "strings", ",", "size", ")", ":", "\n", "        ", "output_size", "=", "(", "len", "(", "strings", ")", ",", "self", ".", "_quantized_cdf", ".", "size", "(", "0", ")", ",", "*", "size", ")", "\n", "indexes", "=", "self", ".", "_build_indexes", "(", "output_size", ")", ".", "to", "(", "self", ".", "_quantized_cdf", ".", "device", ")", "\n", "medians", "=", "self", ".", "_extend_ndims", "(", "self", ".", "_get_medians", "(", ")", ".", "detach", "(", ")", ",", "len", "(", "size", ")", ")", "\n", "medians", "=", "medians", ".", "expand", "(", "len", "(", "strings", ")", ",", "*", "(", "[", "-", "1", "]", "*", "(", "len", "(", "size", ")", "+", "1", ")", ")", ")", "\n", "return", "super", "(", ")", ".", "decompress", "(", "strings", ",", "indexes", ",", "medians", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.__init__": [[536, 572], ["entropy_models.EntropyModel.__init__", "float", "compressai.ops.LowerBound", "entropy_models.GaussianConditional.register_buffer", "entropy_models.GaussianConditional.register_buffer", "isinstance", "ValueError", "isinstance", "ValueError", "ValueError", "ValueError", "len", "any", "entropy_models.GaussianConditional._prepare_scale_table", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "type", "sorted", "type", "len", "float"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.__init__", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional._prepare_scale_table"], ["def", "__init__", "(", "\n", "self", ",", "\n", "scale_table", ":", "Optional", "[", "Union", "[", "List", ",", "Tuple", "]", "]", ",", "\n", "*", "args", ":", "Any", ",", "\n", "scale_bound", ":", "float", "=", "0.11", ",", "\n", "tail_mass", ":", "float", "=", "1e-9", ",", "\n", "**", "kwargs", ":", "Any", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n", "if", "not", "isinstance", "(", "scale_table", ",", "(", "type", "(", "None", ")", ",", "list", ",", "tuple", ")", ")", ":", "\n", "            ", "raise", "ValueError", "(", "f'Invalid type for scale_table \"{type(scale_table)}\"'", ")", "\n", "\n", "", "if", "isinstance", "(", "scale_table", ",", "(", "list", ",", "tuple", ")", ")", "and", "len", "(", "scale_table", ")", "<", "1", ":", "\n", "            ", "raise", "ValueError", "(", "f'Invalid scale_table length \"{len(scale_table)}\"'", ")", "\n", "\n", "", "if", "scale_table", "and", "(", "\n", "scale_table", "!=", "sorted", "(", "scale_table", ")", "or", "any", "(", "s", "<=", "0", "for", "s", "in", "scale_table", ")", "\n", ")", ":", "\n", "            ", "raise", "ValueError", "(", "f'Invalid scale_table \"({scale_table})\"'", ")", "\n", "\n", "", "self", ".", "tail_mass", "=", "float", "(", "tail_mass", ")", "\n", "if", "scale_bound", "is", "None", "and", "scale_table", ":", "\n", "            ", "scale_bound", "=", "self", ".", "scale_table", "[", "0", "]", "\n", "", "if", "scale_bound", "<=", "0", ":", "\n", "            ", "raise", "ValueError", "(", "\"Invalid parameters\"", ")", "\n", "", "self", ".", "lower_bound_scale", "=", "LowerBound", "(", "scale_bound", ")", "\n", "\n", "self", ".", "register_buffer", "(", "\n", "\"scale_table\"", ",", "\n", "self", ".", "_prepare_scale_table", "(", "scale_table", ")", "if", "scale_table", "else", "torch", ".", "Tensor", "(", ")", ",", "\n", ")", "\n", "\n", "self", ".", "register_buffer", "(", "\n", "\"scale_bound\"", ",", "\n", "torch", ".", "Tensor", "(", "[", "float", "(", "scale_bound", ")", "]", ")", "if", "scale_bound", "is", "not", "None", "else", "None", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional._prepare_scale_table": [[574, 577], ["torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "tuple", "float"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_prepare_scale_table", "(", "scale_table", ")", ":", "\n", "        ", "return", "torch", ".", "Tensor", "(", "tuple", "(", "float", "(", "s", ")", "for", "s", "in", "scale_table", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional._standardized_cumulative": [[578, 583], ["float", "float", "torch.erfc", "torch.erfc", "torch.erfc", "torch.erfc", "torch.erfc", "torch.erfc", "torch.erfc", "torch.erfc", "torch.erfc"], "methods", ["None"], ["", "def", "_standardized_cumulative", "(", "self", ",", "inputs", ":", "Tensor", ")", "->", "Tensor", ":", "\n", "        ", "half", "=", "float", "(", "0.5", ")", "\n", "const", "=", "float", "(", "-", "(", "2", "**", "-", "0.5", ")", ")", "\n", "# Using the complementary error function maximizes numerical precision.", "\n", "return", "half", "*", "torch", ".", "erfc", "(", "const", "*", "inputs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional._standardized_quantile": [[584, 587], ["scipy.stats.norm.ppf"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_standardized_quantile", "(", "quantile", ")", ":", "\n", "        ", "return", "scipy", ".", "stats", ".", "norm", ".", "ppf", "(", "quantile", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.update_scale_table": [[588, 598], ["entropy_models.GaussianConditional._prepare_scale_table().to", "entropy_models.GaussianConditional.update", "entropy_models.GaussianConditional._offset.numel", "entropy_models.GaussianConditional._prepare_scale_table"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.update", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional._prepare_scale_table"], ["", "def", "update_scale_table", "(", "self", ",", "scale_table", ",", "force", "=", "False", ")", ":", "\n", "# Check if we need to update the gaussian conditional parameters, the", "\n", "# offsets are only computed and stored when the conditonal model is", "\n", "# updated.", "\n", "        ", "if", "self", ".", "_offset", ".", "numel", "(", ")", ">", "0", "and", "not", "force", ":", "\n", "            ", "return", "False", "\n", "", "device", "=", "self", ".", "scale_table", ".", "device", "\n", "self", ".", "scale_table", "=", "self", ".", "_prepare_scale_table", "(", "scale_table", ")", ".", "to", "(", "device", ")", "\n", "self", ".", "update", "(", ")", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.update": [[599, 625], ["torch.ceil().int", "torch.ceil().int", "torch.ceil().int", "torch.ceil().int", "torch.ceil().int", "torch.ceil().int", "torch.ceil().int", "torch.ceil().int", "torch.ceil().int", "torch.max().item", "torch.max().item", "torch.max().item", "torch.max().item", "torch.max().item", "torch.max().item", "torch.max().item", "torch.max().item", "torch.max().item", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "entropy_models.GaussianConditional.scale_table.unsqueeze", "samples.float.float.float", "samples_scale.float.float.float", "entropy_models.GaussianConditional._standardized_cumulative", "entropy_models.GaussianConditional._standardized_cumulative", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "entropy_models.GaussianConditional._pmf_to_cdf", "entropy_models.GaussianConditional._standardized_quantile", "len", "torch.ceil", "torch.ceil", "torch.ceil", "torch.ceil", "torch.ceil", "torch.ceil", "torch.ceil", "torch.ceil", "torch.ceil", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional._standardized_cumulative", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional._standardized_cumulative", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyModel._pmf_to_cdf", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional._standardized_quantile"], ["", "def", "update", "(", "self", ")", ":", "\n", "        ", "multiplier", "=", "-", "self", ".", "_standardized_quantile", "(", "self", ".", "tail_mass", "/", "2", ")", "\n", "pmf_center", "=", "torch", ".", "ceil", "(", "self", ".", "scale_table", "*", "multiplier", ")", ".", "int", "(", ")", "\n", "pmf_length", "=", "2", "*", "pmf_center", "+", "1", "\n", "\n", "max_length", "=", "torch", ".", "max", "(", "pmf_length", ")", ".", "item", "(", ")", "\n", "\n", "device", "=", "pmf_center", ".", "device", "\n", "samples", "=", "torch", ".", "abs", "(", "\n", "torch", ".", "arange", "(", "max_length", ",", "device", "=", "device", ")", ".", "int", "(", ")", "-", "pmf_center", "[", ":", ",", "None", "]", "\n", ")", "\n", "# print(samples)", "\n", "samples_scale", "=", "self", ".", "scale_table", ".", "unsqueeze", "(", "1", ")", "\n", "samples", "=", "samples", ".", "float", "(", ")", "\n", "samples_scale", "=", "samples_scale", ".", "float", "(", ")", "\n", "upper", "=", "self", ".", "_standardized_cumulative", "(", "(", "0.5", "-", "samples", ")", "/", "samples_scale", ")", "\n", "lower", "=", "self", ".", "_standardized_cumulative", "(", "(", "-", "0.5", "-", "samples", ")", "/", "samples_scale", ")", "\n", "pmf", "=", "upper", "-", "lower", "\n", "\n", "tail_mass", "=", "2", "*", "lower", "[", ":", ",", ":", "1", "]", "\n", "\n", "quantized_cdf", "=", "torch", ".", "Tensor", "(", "len", "(", "pmf_length", ")", ",", "max_length", "+", "2", ")", "\n", "quantized_cdf", "=", "self", ".", "_pmf_to_cdf", "(", "pmf", ",", "tail_mass", ",", "pmf_length", ",", "max_length", ")", "\n", "self", ".", "_quantized_cdf", "=", "quantized_cdf", "\n", "self", ".", "_offset", "=", "-", "pmf_center", "\n", "self", ".", "_cdf_length", "=", "pmf_length", "+", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional._likelihood": [[626, 644], ["float", "entropy_models.GaussianConditional.lower_bound_scale", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "entropy_models.GaussianConditional._standardized_cumulative", "entropy_models.GaussianConditional._standardized_cumulative"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional._standardized_cumulative", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional._standardized_cumulative"], ["", "def", "_likelihood", "(", "\n", "self", ",", "inputs", ":", "Tensor", ",", "scales", ":", "Tensor", ",", "means", ":", "Optional", "[", "Tensor", "]", "=", "None", "\n", ")", "->", "Tensor", ":", "\n", "        ", "half", "=", "float", "(", "0.5", ")", "\n", "\n", "if", "means", "is", "not", "None", ":", "\n", "            ", "values", "=", "inputs", "-", "means", "\n", "", "else", ":", "\n", "            ", "values", "=", "inputs", "\n", "\n", "", "scales", "=", "self", ".", "lower_bound_scale", "(", "scales", ")", "\n", "\n", "values", "=", "torch", ".", "abs", "(", "values", ")", "\n", "upper", "=", "self", ".", "_standardized_cumulative", "(", "(", "half", "-", "values", ")", "/", "scales", ")", "\n", "lower", "=", "self", ".", "_standardized_cumulative", "(", "(", "-", "half", "-", "values", ")", "/", "scales", ")", "\n", "likelihood", "=", "upper", "-", "lower", "\n", "\n", "return", "likelihood", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.forward": [[645, 660], ["entropy_models.GaussianConditional.quantize", "entropy_models.GaussianConditional._likelihood", "entropy_models.GaussianConditional.likelihood_lower_bound"], "methods", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.EntropyModel.quantize", "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional._likelihood"], ["", "def", "forward", "(", "\n", "self", ",", "\n", "inputs", ":", "Tensor", ",", "\n", "scales", ":", "Tensor", ",", "\n", "means", ":", "Optional", "[", "Tensor", "]", "=", "None", ",", "\n", "training", ":", "Optional", "[", "bool", "]", "=", "None", ",", "\n", ")", "->", "Tuple", "[", "Tensor", ",", "Tensor", "]", ":", "\n", "        ", "if", "training", "is", "None", ":", "\n", "            ", "training", "=", "self", ".", "training", "\n", "", "outputs", "=", "self", ".", "quantize", "(", "inputs", ",", "\"noise\"", "if", "training", "else", "\"dequantize\"", ",", "means", ")", "\n", "likelihood", "=", "self", ".", "_likelihood", "(", "outputs", ",", "scales", ",", "means", ")", "\n", "if", "self", ".", "use_likelihood_bound", ":", "\n", "            ", "likelihood", "=", "self", ".", "likelihood_lower_bound", "(", "likelihood", ")", "\n", "\n", "", "return", "outputs", ",", "likelihood", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.GaussianConditional.build_indexes": [[661, 667], ["entropy_models.GaussianConditional.lower_bound_scale", "entropy_models.GaussianConditional.new_full().int", "entropy_models.GaussianConditional.new_full", "entropy_models.GaussianConditional.size", "len"], "methods", ["None"], ["", "def", "build_indexes", "(", "self", ",", "scales", ":", "Tensor", ")", "->", "Tensor", ":", "\n", "        ", "scales", "=", "self", ".", "lower_bound_scale", "(", "scales", ")", "\n", "indexes", "=", "scales", ".", "new_full", "(", "scales", ".", "size", "(", ")", ",", "len", "(", "self", ".", "scale_table", ")", "-", "1", ")", ".", "int", "(", ")", "\n", "for", "s", "in", "self", ".", "scale_table", "[", ":", "-", "1", "]", ":", "\n", "            ", "indexes", "-=", "(", "scales", "<=", "s", ")", ".", "int", "(", ")", "\n", "", "return", "indexes", "\n", "", "", ""]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.default_entropy_coder": [[54, 58], ["get_entropy_coder"], "function", ["home.repos.pwc.inspect_result.googolxx_stf.compressai.__init__.get_entropy_coder"], ["", "", "def", "default_entropy_coder", "(", ")", ":", "\n", "    ", "from", "compressai", "import", "get_entropy_coder", "\n", "\n", "return", "get_entropy_coder", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.pmf_to_quantized_cdf": [[60, 64], ["compressai._CXX.pmf_to_quantized_cdf", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor", "pmf.tolist"], "function", ["home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models.pmf_to_quantized_cdf"], ["", "def", "pmf_to_quantized_cdf", "(", "pmf", ":", "Tensor", ",", "precision", ":", "int", "=", "16", ")", "->", "Tensor", ":", "\n", "    ", "cdf", "=", "_pmf_to_quantized_cdf", "(", "pmf", ".", "tolist", "(", ")", ",", "precision", ")", "\n", "cdf", "=", "torch", ".", "IntTensor", "(", "cdf", ")", "\n", "return", "cdf", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.entropy_models.entropy_models._forward": [[66, 68], ["NotImplementedError"], "function", ["None"], ["", "def", "_forward", "(", "self", ",", "*", "args", ":", "Any", ")", "->", "Any", ":", "\n", "    ", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.zoo.pretrained.rename_key": [[19, 44], ["key.startswith", "key.startswith", "key.startswith", "key.startswith", "key.startswith", "key.startswith"], "function", ["None"], ["def", "rename_key", "(", "key", ":", "str", ")", ":", "\n", "    ", "\"\"\"Rename state_dict key.\"\"\"", "\n", "\n", "# Deal with modules trained with DataParallel", "\n", "if", "key", ".", "startswith", "(", "\"module.\"", ")", ":", "\n", "        ", "key", "=", "key", "[", "7", ":", "]", "\n", "", "if", "key", ".", "startswith", "(", "'h_s.'", ")", ":", "\n", "        ", "return", "None", "\n", "\n", "# ResidualBlockWithStride: 'downsample' -> 'skip'", "\n", "# if \".downsample.\" in key:", "\n", "#     return key.replace(\"downsample\", \"skip\")", "\n", "\n", "# EntropyBottleneck: nn.ParameterList to nn.Parameters", "\n", "", "if", "key", ".", "startswith", "(", "\"entropy_bottleneck.\"", ")", ":", "\n", "        ", "if", "key", ".", "startswith", "(", "\"entropy_bottleneck._biases.\"", ")", ":", "\n", "            ", "return", "f\"entropy_bottleneck._bias{key[-1]}\"", "\n", "\n", "", "if", "key", ".", "startswith", "(", "\"entropy_bottleneck._matrices.\"", ")", ":", "\n", "            ", "return", "f\"entropy_bottleneck._matrix{key[-1]}\"", "\n", "\n", "", "if", "key", ".", "startswith", "(", "\"entropy_bottleneck._factors.\"", ")", ":", "\n", "            ", "return", "f\"entropy_bottleneck._factor{key[-1]}\"", "\n", "\n", "", "", "return", "key", "\n", "\n"]], "home.repos.pwc.inspect_result.googolxx_stf.zoo.pretrained.load_pretrained": [[45, 51], ["pretrained.rename_key", "state_dict.pop", "state_dict.items"], "function", ["home.repos.pwc.inspect_result.googolxx_stf.zoo.pretrained.rename_key"], ["", "def", "load_pretrained", "(", "state_dict", ":", "Dict", "[", "str", ",", "Tensor", "]", ")", "->", "Dict", "[", "str", ",", "Tensor", "]", ":", "\n", "    ", "\"\"\"Convert state_dict keys.\"\"\"", "\n", "state_dict", "=", "{", "rename_key", "(", "k", ")", ":", "v", "for", "k", ",", "v", "in", "state_dict", ".", "items", "(", ")", "}", "\n", "if", "None", "in", "state_dict", ":", "\n", "        ", "state_dict", ".", "pop", "(", "None", ")", "\n", "", "return", "state_dict", "\n", "", ""]]}