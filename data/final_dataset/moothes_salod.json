{"home.repos.pwc.inspect_result.moothes_salod.None.train.main": [[19, 128], ["base.framework_factory.load_framework", "print", "data.get_loader", "collections.OrderedDict", "len", "model.zero_grad", "range", "len", "print", "sorted", "data.Test_Dataset", "model.train", "torch.cuda.empty_cache", "progress.bar.Bar", "time.time", "optim.zero_grad", "enumerate", "progress.bar.Bar.finish", "test.test_model", "config.items", "test.test_model", "sche", "model", "loss.backward", "progress.bar.Bar.next", "test.test_model", "F.upsample.float().cuda", "F.upsample.float().cuda", "torch.flip", "torch.flip", "torch.cat", "torch.cat", "model_loss", "optim.step", "optim.zero_grad", "float", "F.upsample", "F.upsample", "np.random.choice", "int", "int", "int", "F.upsample", "F.upsample", "int", "F.upsample", "F.upsample", "torch.nn.utils.clip_grad_norm_", "format", "time.time", "F.upsample.float", "F.upsample.float", "model.parameters", "random.random", "random.random", "np.random.choice"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.framework_factory.load_framework", "home.repos.pwc.inspect_result.moothes_salod.None.data.get_loader", "home.repos.pwc.inspect_result.moothes_salod.None.test.test_model", "home.repos.pwc.inspect_result.moothes_salod.None.test.test_model", "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.SwishImplementation.backward", "home.repos.pwc.inspect_result.moothes_salod.None.test.test_model"], ["def", "main", "(", ")", ":", "\n", "    ", "if", "len", "(", "sys", ".", "argv", ")", ">", "1", ":", "\n", "        ", "net_name", "=", "sys", ".", "argv", "[", "1", "]", "\n", "", "else", ":", "\n", "        ", "print", "(", "'Need model name!'", ")", "\n", "return", "\n", "\n", "# Loading model", "\n", "", "config", ",", "model", ",", "optim", ",", "sche", ",", "model_loss", ",", "saver", "=", "load_framework", "(", "net_name", ")", "\n", "config", "[", "'batch'", "]", "=", "config", "[", "'batch'", "]", "//", "config", "[", "'ave_batch'", "]", "\n", "print", "(", "sorted", "(", "config", ".", "items", "(", ")", ")", ")", "\n", "\n", "\n", "# Loading datasets", "\n", "train_loader", "=", "get_loader", "(", "config", ")", "\n", "test_sets", "=", "OrderedDict", "(", ")", "\n", "for", "set_name", "in", "config", "[", "'vals'", "]", ":", "\n", "        ", "test_sets", "[", "set_name", "]", "=", "Test_Dataset", "(", "name", "=", "set_name", ",", "config", "=", "config", ")", "\n", "\n", "", "debug", "=", "config", "[", "'debug'", "]", "\n", "num_epoch", "=", "config", "[", "'epoch'", "]", "\n", "num_iter", "=", "len", "(", "train_loader", ")", "\n", "ave_batch", "=", "config", "[", "'ave_batch'", "]", "\n", "trset", "=", "config", "[", "'trset'", "]", "\n", "batch_idx", "=", "0", "\n", "model", ".", "zero_grad", "(", ")", "\n", "for", "epoch", "in", "range", "(", "1", ",", "num_epoch", "+", "1", ")", ":", "\n", "        ", "model", ".", "train", "(", ")", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "\n", "if", "debug", ":", "\n", "            ", "test_model", "(", "model", ",", "test_sets", ",", "config", ",", "epoch", ")", "\n", "\n", "", "bar", "=", "Bar", "(", "'{:10}-{:8} | epoch {:2}:'", ".", "format", "(", "net_name", ",", "config", "[", "'sub'", "]", ",", "epoch", ")", ",", "max", "=", "num_iter", ")", "\n", "\n", "\n", "st", "=", "time", ".", "time", "(", ")", "\n", "loss_count", "=", "0", "\n", "optim", ".", "zero_grad", "(", ")", "\n", "#sche.step()", "\n", "for", "i", ",", "pack", "in", "enumerate", "(", "train_loader", ",", "start", "=", "1", ")", ":", "\n", "            ", "current_iter", "=", "(", "epoch", "-", "1", ")", "*", "num_iter", "+", "i", "\n", "total_iter", "=", "num_epoch", "*", "num_iter", "\n", "#print('iter: ', total_iter, current_iter)", "\n", "\n", "sche", "(", "optim", ",", "current_iter", ",", "total_iter", ",", "config", ")", "\n", "\n", "\n", "images", ",", "gts", "=", "pack", "\n", "images", ",", "gts", "=", "images", ".", "float", "(", ")", ".", "cuda", "(", ")", ",", "gts", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "\n", "if", "config", "[", "'multi'", "]", ":", "\n", "                ", "if", "net_name", "==", "'picanet'", ":", "\n", "# picanet only support 320*320 input now!", "\n", "# picanet doesn't support multi-scale training, so we crop images to same sizes to simulate it.", "\n", "                    ", "input_size", "=", "config", "[", "'size'", "]", "\n", "images", "=", "F", ".", "upsample", "(", "images", ",", "size", "=", "(", "input_size", ",", "input_size", ")", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "gts", "=", "F", ".", "upsample", "(", "gts", ",", "size", "=", "(", "input_size", ",", "input_size", ")", ",", "mode", "=", "'nearest'", ")", "\n", "\n", "scales", "=", "[", "16", ",", "8", ",", "0", "]", "\n", "scale", "=", "np", ".", "random", ".", "choice", "(", "scales", ",", "1", ")", "\n", "w_start", "=", "int", "(", "random", ".", "random", "(", ")", "*", "scale", ")", "\n", "h_start", "=", "int", "(", "random", ".", "random", "(", ")", "*", "scale", ")", "\n", "new_size", "=", "int", "(", "input_size", "-", "scale", ")", "\n", "images", "=", "images", "[", ":", ",", ":", ",", "h_start", ":", "h_start", "+", "new_size", ",", "w_start", ":", "w_start", "+", "new_size", "]", "\n", "gts", "=", "gts", "[", ":", ",", ":", ",", "h_start", ":", "h_start", "+", "new_size", ",", "w_start", ":", "w_start", "+", "new_size", "]", "\n", "\n", "images", "=", "F", ".", "upsample", "(", "images", ",", "size", "=", "(", "input_size", ",", "input_size", ")", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "gts", "=", "F", ".", "upsample", "(", "gts", ",", "size", "=", "(", "input_size", ",", "input_size", ")", ",", "mode", "=", "'nearest'", ")", "\n", "", "else", ":", "\n", "                    ", "scales", "=", "[", "-", "1", ",", "0", ",", "1", "]", "\n", "#scales = [-2, -1, 0, 1, 2] ", "\n", "input_size", "=", "config", "[", "'size'", "]", "\n", "input_size", "+=", "int", "(", "np", ".", "random", ".", "choice", "(", "scales", ",", "1", ")", "*", "64", ")", "\n", "#input_size += int(np.random.choice(scales, 1) * 32)", "\n", "images", "=", "F", ".", "upsample", "(", "images", ",", "size", "=", "(", "input_size", ",", "input_size", ")", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "gts", "=", "F", ".", "upsample", "(", "gts", ",", "size", "=", "(", "input_size", ",", "input_size", ")", ",", "mode", "=", "'nearest'", ")", "\n", "\n", "", "", "if", "config", "[", "'consist'", "]", ":", "\n", "                ", "flipped_img", "=", "torch", ".", "flip", "(", "images", ",", "dims", "=", "[", "2", "]", ")", "\n", "flipped_gt", "=", "torch", ".", "flip", "(", "gts", ",", "dims", "=", "[", "2", "]", ")", "\n", "\n", "images", "=", "torch", ".", "cat", "(", "[", "images", ",", "flipped_img", "]", ",", "dim", "=", "0", ")", "\n", "gts", "=", "torch", ".", "cat", "(", "[", "gts", ",", "flipped_gt", "]", ",", "dim", "=", "0", ")", "\n", "\n", "", "Y", "=", "model", "(", "images", ",", "'train'", ")", "\n", "loss", "=", "model_loss", "(", "Y", ",", "gts", ",", "config", ")", "/", "ave_batch", "\n", "loss_count", "+=", "loss", ".", "data", "\n", "loss", ".", "backward", "(", ")", "\n", "\n", "batch_idx", "+=", "1", "\n", "if", "batch_idx", "==", "ave_batch", ":", "\n", "                ", "if", "config", "[", "'clip_gradient'", "]", ":", "\n", "                    ", "utils", ".", "clip_grad_norm_", "(", "model", ".", "parameters", "(", ")", ",", "config", "[", "'clip_gradient'", "]", ")", "\n", "", "optim", ".", "step", "(", ")", "\n", "optim", ".", "zero_grad", "(", ")", "\n", "batch_idx", "=", "0", "\n", "\n", "", "lrs", "=", "','", ".", "join", "(", "[", "format", "(", "param", "[", "'lr'", "]", ",", "\".1e\"", ")", "for", "param", "in", "optim", ".", "param_groups", "]", ")", "\n", "Bar", ".", "suffix", "=", "'{:4}/{:4} | loss: {:1.3f}, LRs: [{}], time: {:1.3f}.'", ".", "format", "(", "i", ",", "num_iter", ",", "float", "(", "loss_count", "/", "i", ")", ",", "lrs", ",", "time", ".", "time", "(", ")", "-", "st", ")", "\n", "bar", ".", "next", "(", ")", "\n", "\n", "", "bar", ".", "finish", "(", ")", "\n", "\n", "if", "trset", "in", "(", "'DUTS-TR'", ",", "'MSB-TR'", ")", ":", "\n", "            ", "test_model", "(", "model", ",", "test_sets", ",", "config", ",", "epoch", ")", "\n", "\n", "", "", "if", "trset", "!=", "'DUTS-TR'", ":", "\n", "        ", "test_model", "(", "model", ",", "test_sets", ",", "config", ",", "epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.test_fps.test_model": [[22, 51], ["model.eval", "test_sets.items", "os.path.join", "util.check_path", "range", "print", "test_set.load_data", "image.cuda.cuda", "torch.cuda.synchronize", "time.time", "model", "torch.cuda.synchronize", "Y[].sigmoid_().cpu().data.numpy", "time.time", "Y[].sigmoid_().cpu", "Y[].sigmoid_"], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.test.eval", "home.repos.pwc.inspect_result.moothes_salod.None.util.check_path", "home.repos.pwc.inspect_result.moothes_salod.None.data.Test_Dataset.load_data"], ["def", "test_model", "(", "model", ",", "test_sets", ",", "config", ",", "epoch", "=", "None", ",", "saver", "=", "None", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "#time_count = 0", "\n", "\n", "#st = time.time()", "\n", "for", "set_name", ",", "test_set", "in", "test_sets", ".", "items", "(", ")", ":", "\n", "        ", "save_folder", "=", "os", ".", "path", ".", "join", "(", "config", "[", "'save_path'", "]", ",", "set_name", ")", "\n", "check_path", "(", "save_folder", ")", "\n", "\n", "titer", "=", "1000", "#test_set.size", "\n", "time_count", "=", "0", "\n", "\n", "for", "j", "in", "range", "(", "titer", ")", ":", "\n", "            ", "image", ",", "gt", ",", "name", "=", "test_set", ".", "load_data", "(", "j", ")", "\n", "image", "=", "image", ".", "cuda", "(", ")", "\n", "\n", "torch", ".", "cuda", ".", "synchronize", "(", ")", "\n", "st", "=", "time", ".", "time", "(", ")", "\n", "Y", "=", "model", "(", "image", ")", "\n", "torch", ".", "cuda", ".", "synchronize", "(", ")", "\n", "time_count", "+=", "time", ".", "time", "(", ")", "-", "st", "\n", "preds", "=", "Y", "[", "'final'", "]", ".", "sigmoid_", "(", ")", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "\n", "#pred = preds[0, 0] / (np.max(preds) + 1e-8)", "\n", "#out_shape = gt.shape", "\n", "\n", "#pred = np.array(Image.fromarray(pred).resize((out_shape[::-1])))", "\n", "\n", "#time_count = time.time() - st", "\n", "", "print", "(", "'\\nFPS: {}.'", ".", "format", "(", "titer", "/", "time_count", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.test_fps.main": [[52, 72], ["base.framework_factory.load_framework", "data.Test_Dataset", "torch.randn().cuda", "thop.profile", "print", "model.cuda.cuda", "test_fps.test_model", "len", "print", "torch.randn"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.framework_factory.load_framework", "home.repos.pwc.inspect_result.moothes_salod.None.test.test_model"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "if", "len", "(", "sys", ".", "argv", ")", ">", "1", ":", "\n", "        ", "net_name", "=", "sys", ".", "argv", "[", "1", "]", "\n", "", "else", ":", "\n", "        ", "print", "(", "'Need model name!'", ")", "\n", "return", "\n", "\n", "", "config", ",", "model", ",", "_", ",", "_", ",", "_", ",", "saver", "=", "load_framework", "(", "net_name", ")", "\n", "\n", "test_sets", "=", "{", "}", "\n", "test_sets", "[", "'SALOD'", "]", "=", "Test_Dataset", "(", "name", "=", "'SALOD'", ",", "config", "=", "config", ")", "\n", "\n", "input", "=", "torch", ".", "randn", "(", "1", ",", "3", ",", "config", "[", "'size'", "]", ",", "config", "[", "'size'", "]", ")", ".", "cuda", "(", ")", "\n", "macs", ",", "params", "=", "profile", "(", "model", ",", "inputs", "=", "(", "input", ",", ")", ")", "\n", "print", "(", "'MACs: {:.2f} G, Params: {:.2f} M.'", ".", "format", "(", "macs", "/", "1e9", ",", "params", "/", "1e6", ")", ")", "\n", "\n", "#if not config['cpu']:", "\n", "model", "=", "model", ".", "cuda", "(", ")", "\n", "\n", "test_model", "(", "model", ",", "test_sets", ",", "config", ",", "saver", "=", "saver", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.data.Train_Dataset.__init__": [[131, 135], ["data.get_image_list", "len"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.None.data.get_image_list"], ["    ", "def", "__init__", "(", "self", ",", "name", ",", "config", ")", ":", "\n", "        ", "self", ".", "config", "=", "config", "\n", "self", ".", "images", ",", "self", ".", "gts", "=", "get_image_list", "(", "name", ",", "config", ",", "'train'", ")", "\n", "self", ".", "size", "=", "len", "(", "self", ".", "images", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.data.Train_Dataset.__getitem__": [[136, 163], ["PIL.Image.open().convert", "PIL.Image.open().convert", "image.transpose.transpose.resize", "numpy.expand_dims.resize", "numpy.array().astype", "numpy.array", "image.transpose.transpose.transpose", "numpy.expand_dims", "data.RandomCrop", "random.random", "random.random", "random.random", "random.random", "PIL.Image.open", "PIL.Image.open", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.None.data.RandomCrop"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "image", "=", "Image", ".", "open", "(", "self", ".", "images", "[", "index", "]", ")", ".", "convert", "(", "'RGB'", ")", "\n", "gt", "=", "Image", ".", "open", "(", "self", ".", "gts", "[", "index", "]", ")", ".", "convert", "(", "'L'", ")", "\n", "\n", "#print('orig: ', image.size, gt.size)", "\n", "if", "self", ".", "config", "[", "'data_aug'", "]", ":", "\n", "#image, gt = rotate(image, gt)", "\n", "#image = random_light(image)", "\n", "            ", "image", ",", "gt", "=", "RandomCrop", "(", "image", ",", "gt", ")", "\n", "#print('croped: ', image.size, gt.size)", "\n", "\n", "", "img_size", "=", "self", ".", "config", "[", "'size'", "]", "\n", "image", "=", "image", ".", "resize", "(", "(", "img_size", ",", "img_size", ")", ")", "\n", "gt", "=", "gt", ".", "resize", "(", "(", "img_size", ",", "img_size", ")", ")", "\n", "\n", "image", "=", "np", ".", "array", "(", "image", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "gt", "=", "np", ".", "array", "(", "gt", ")", "\n", "\n", "#print(image.shape, gt.shape)", "\n", "if", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "            ", "image", "=", "image", "[", ":", ",", ":", ":", "-", "1", "]", "\n", "gt", "=", "gt", "[", ":", ",", ":", ":", "-", "1", "]", "\n", "\n", "", "image", "=", "(", "(", "image", "/", "255.", ")", "-", "mean", ")", "/", "std", "\n", "image", "=", "image", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "gt", "=", "np", ".", "expand_dims", "(", "(", "gt", ">", "128", ")", ".", "astype", "(", "np", ".", "float32", ")", ",", "axis", "=", "0", ")", "\n", "return", "image", ",", "gt", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.data.Train_Dataset.__len__": [[164, 166], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.data.Test_Dataset.__init__": [[168, 172], ["data.get_image_list", "len"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.None.data.get_image_list"], ["    ", "def", "__init__", "(", "self", ",", "name", ",", "config", "=", "None", ")", ":", "\n", "        ", "self", ".", "config", "=", "config", "\n", "self", ".", "images", ",", "self", ".", "gts", "=", "get_image_list", "(", "name", ",", "config", ",", "'test'", ")", "\n", "self", ".", "size", "=", "len", "(", "self", ".", "images", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.data.Test_Dataset.load_data": [[173, 187], ["PIL.Image.open().convert", "torch.tensor().float.resize", "torch.tensor().float.resize", "numpy.array().astype", "numpy.array", "torch.tensor().float.transpose", "torch.tensor().float.transpose", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "PIL.Image.open().convert", "[].split", "PIL.Image.open", "numpy.array", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "PIL.Image.open", "numpy.expand_dims", "torch.Test_Dataset.images[].split"], "methods", ["None"], ["", "def", "load_data", "(", "self", ",", "index", ")", ":", "\n", "        ", "image", "=", "Image", ".", "open", "(", "self", ".", "images", "[", "index", "]", ")", ".", "convert", "(", "'RGB'", ")", "\n", "#if not self.config['orig_size']:", "\n", "image", "=", "image", ".", "resize", "(", "(", "self", ".", "config", "[", "'size'", "]", ",", "self", ".", "config", "[", "'size'", "]", ")", ")", "\n", "image", "=", "np", ".", "array", "(", "image", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "gt", "=", "np", ".", "array", "(", "Image", ".", "open", "(", "self", ".", "gts", "[", "index", "]", ")", ".", "convert", "(", "'L'", ")", ")", "\n", "name", "=", "self", ".", "images", "[", "index", "]", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "\n", "\n", "image", "=", "(", "(", "image", "/", "255.", ")", "-", "mean", ")", "/", "std", "\n", "image", "=", "image", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "image", "=", "torch", ".", "tensor", "(", "np", ".", "expand_dims", "(", "image", ",", "0", ")", ")", ".", "float", "(", ")", "\n", "gt", "=", "(", "gt", ">", "128", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "return", "image", ",", "gt", ",", "name", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.data.rgb_loader": [[18, 22], ["open", "PIL.Image.open", "Image.open.convert"], "function", ["None"], ["def", "rgb_loader", "(", "path", ")", ":", "\n", "    ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "img", "=", "Image", ".", "open", "(", "f", ")", "\n", "return", "img", ".", "convert", "(", "'RGB'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.data.binary_loader": [[23, 27], ["open", "PIL.Image.open", "Image.open.convert"], "function", ["None"], ["", "", "def", "binary_loader", "(", "path", ")", ":", "\n", "    ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "img", "=", "Image", ".", "open", "(", "f", ")", "\n", "return", "img", ".", "convert", "(", "'L'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.data.get_image_list": [[28, 95], ["print", "open", "range", "os.path.join", "len", "os.path.join", "os.path.join", "open", "open.readlines", "os.path.join", "os.path.join", "sorted", "sorted", "open.readlines", "img_list[].split", "os.path.join", "os.path.join", "os.path.join", "open.readlines", "open.readlines", "line.strip", "line.strip", "os.path.join", "os.path.join", "line.strip", "line.strip", "os.listdir", "open.endswith", "os.listdir", "open.endswith"], "function", ["None"], ["", "", "def", "get_image_list", "(", "name", ",", "config", ",", "phase", ")", ":", "\n", "    ", "images", "=", "[", "]", "\n", "gts", "=", "[", "]", "\n", "#print(name)", "\n", "if", "name", "in", "(", "'simple'", ",", "'tough'", ",", "'normal'", ")", ":", "\n", "        ", "train_split", "=", "10000", "\n", "\n", "print", "(", "'Objectness shifting experiment.'", ")", "\n", "# Objectness", "\n", "list_file", "=", "'clean_list.txt'", "\n", "#print(list_file)", "\n", "#f = open(os.path.join(config['data_path'], 'SALOD/gaps.txt'), 'r')", "\n", "#f = open(os.path.join(config['data_path'], 'SALOD/new_list.txt'), 'r')", "\n", "#f = open(os.path.join(config['data_path'], 'SALOD/place_list.txt'), 'r')", "\n", "f", "=", "open", "(", "os", ".", "path", ".", "join", "(", "config", "[", "'data_path'", "]", ",", "'SALOD/{}'", ".", "format", "(", "list_file", ")", ")", ",", "'r'", ")", "\n", "if", "name", "==", "'simple'", ":", "\n", "            ", "img_list", "=", "f", ".", "readlines", "(", ")", "[", "-", "train_split", ":", "]", "\n", "", "elif", "name", "==", "'normal'", ":", "\n", "            ", "img_list", "=", "f", ".", "readlines", "(", ")", "[", "train_split", ":", "-", "train_split", "]", "\n", "", "else", ":", "\n", "            ", "img_list", "=", "f", ".", "readlines", "(", ")", "[", ":", "train_split", "]", "\n", "\n", "", "for", "i", "in", "range", "(", "len", "(", "img_list", ")", ")", ":", "\n", "            ", "img_list", "[", "i", "]", "=", "img_list", "[", "i", "]", ".", "split", "(", "' '", ")", "[", "0", "]", "\n", "#print(img_list[i])", "\n", "\n", "", "images", "=", "[", "os", ".", "path", ".", "join", "(", "config", "[", "'data_path'", "]", ",", "'SALOD/images'", ",", "line", ".", "strip", "(", ")", "+", "'.jpg'", ")", "for", "line", "in", "img_list", "]", "\n", "gts", "=", "[", "os", ".", "path", ".", "join", "(", "config", "[", "'data_path'", "]", ",", "'SALOD/mask'", ",", "line", ".", "strip", "(", ")", "+", "'.png'", ")", "for", "line", "in", "img_list", "]", "\n", "\n", "# Benchmark + few_shot", "\n", "", "elif", "name", "==", "'SALOD'", ":", "\n", "        ", "'''\n        if phase == 'train':\n            f = open(os.path.join(config['data_path'], 'SALOD/train.txt'), 'r')\n            img_list = f.readlines()[:config['train_split']]\n        else:\n            f = open(os.path.join(config['data_path'], 'SALOD/test.txt'), 'r')\n            img_list = f.readlines()\n        '''", "\n", "\n", "f", "=", "open", "(", "os", ".", "path", ".", "join", "(", "config", "[", "'data_path'", "]", ",", "'SALOD/{}.txt'", ".", "format", "(", "phase", ")", ")", ",", "'r'", ")", "\n", "img_list", "=", "f", ".", "readlines", "(", ")", "\n", "\n", "\n", "images", "=", "[", "os", ".", "path", ".", "join", "(", "config", "[", "'data_path'", "]", ",", "name", ",", "'images'", ",", "line", ".", "strip", "(", ")", "+", "'.jpg'", ")", "for", "line", "in", "img_list", "]", "\n", "gts", "=", "[", "os", ".", "path", ".", "join", "(", "config", "[", "'data_path'", "]", ",", "name", ",", "'mask'", ",", "line", ".", "strip", "(", ")", "+", "'.png'", ")", "for", "line", "in", "img_list", "]", "\n", "", "else", ":", "\n", "        ", "image_root", "=", "os", ".", "path", ".", "join", "(", "config", "[", "'data_path'", "]", ",", "name", ",", "'images'", ")", "\n", "'''\n        if name == 'DUTS-TR' and phase == 'train':\n            tag = 'segmentations' #'crf2' # 'pseudo'\n        elif name == 'MSB-TR' and phase == 'train':\n            tag = 'crf3'\n            #tag = 'iter1'\n        else:\n            tag = 'segmentations'\n        print(tag)\n        '''", "\n", "\n", "gt_root", "=", "os", ".", "path", ".", "join", "(", "config", "[", "'data_path'", "]", ",", "name", ",", "'segmentations'", ")", "\n", "#print(gt_root)", "\n", "\n", "images", "=", "sorted", "(", "[", "os", ".", "path", ".", "join", "(", "image_root", ",", "f", ")", "for", "f", "in", "os", ".", "listdir", "(", "image_root", ")", "if", "f", ".", "endswith", "(", "'.jpg'", ")", "]", ")", "\n", "gts", "=", "sorted", "(", "[", "os", ".", "path", ".", "join", "(", "gt_root", ",", "f", ")", "for", "f", "in", "os", ".", "listdir", "(", "gt_root", ")", "if", "f", ".", "endswith", "(", "'.png'", ")", "]", ")", "\n", "#print(len(images), len(gts))", "\n", "\n", "", "return", "images", ",", "gts", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.data.get_loader": [[96, 105], ["data.Train_Dataset", "torch.DataLoader"], "function", ["None"], ["", "def", "get_loader", "(", "config", ")", ":", "\n", "    ", "dataset", "=", "Train_Dataset", "(", "config", "[", "'trset'", "]", ",", "config", ")", "\n", "data_loader", "=", "data", ".", "DataLoader", "(", "dataset", "=", "dataset", ",", "\n", "batch_size", "=", "config", "[", "'batch'", "]", ",", "\n", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "4", ",", "\n", "pin_memory", "=", "True", ",", "\n", "drop_last", "=", "True", ")", "\n", "return", "data_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.data.random_light": [[106, 111], ["numpy.random.randint", "numpy.clip", "numpy.random.rand"], "function", ["None"], ["", "def", "random_light", "(", "x", ")", ":", "\n", "    ", "contrast", "=", "np", ".", "random", ".", "rand", "(", "1", ")", "+", "0.5", "\n", "light", "=", "np", ".", "random", ".", "randint", "(", "-", "20", ",", "20", ")", "\n", "x", "=", "contrast", "*", "x", "+", "light", "\n", "return", "np", ".", "clip", "(", "x", ",", "0", ",", "255", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.data.rotate": [[112, 117], ["numpy.random.randint", "img.rotate.rotate", "gt.rotate.rotate"], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.data.rotate", "home.repos.pwc.inspect_result.moothes_salod.None.data.rotate"], ["", "def", "rotate", "(", "img", ",", "gt", ")", ":", "\n", "    ", "angle", "=", "np", ".", "random", ".", "randint", "(", "-", "25", ",", "25", ")", "\n", "img", "=", "img", ".", "rotate", "(", "angle", ")", "\n", "gt", "=", "gt", ".", "rotate", "(", "angle", ")", "\n", "return", "img", ",", "gt", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.data.RandomCrop": [[119, 128], ["numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "image.crop", "mask.crop"], "function", ["None"], ["", "def", "RandomCrop", "(", "image", ",", "mask", ")", ":", "\n", "    ", "H", ",", "W", "=", "image", ".", "size", "\n", "randw", "=", "np", ".", "random", ".", "randint", "(", "W", "/", "8", ")", "\n", "randh", "=", "np", ".", "random", ".", "randint", "(", "H", "/", "8", ")", "\n", "offseth", "=", "0", "if", "randh", "==", "0", "else", "np", ".", "random", ".", "randint", "(", "randh", ")", "\n", "offsetw", "=", "0", "if", "randw", "==", "0", "else", "np", ".", "random", ".", "randint", "(", "randw", ")", "\n", "p0", ",", "p1", ",", "p2", ",", "p3", "=", "offseth", ",", "H", "+", "offseth", "-", "randh", ",", "offsetw", ",", "W", "+", "offsetw", "-", "randw", "\n", "#return image[p0:p1, p2:p3, :], mask[p0:p1, p2:p3]", "\n", "return", "image", ".", "crop", "(", "(", "p0", ",", "p2", ",", "p1", ",", "p3", ")", ")", ",", "mask", ".", "crop", "(", "(", "p0", ",", "p2", ",", "p1", ",", "p3", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.data.test_data": [[188, 214], ["Val_Dataset", "Val_Dataset.load_all_data", "print", "len"], "function", ["None"], ["", "", "def", "test_data", "(", ")", ":", "\n", "    ", "config", "=", "{", "'orig_size'", ":", "True", ",", "'size'", ":", "288", ",", "'data_path'", ":", "'../dataset'", "}", "\n", "dataset", "=", "'SOD'", "\n", "\n", "'''\n    data_loader = Test_Dataset(dataset, config)\n    #data_loader = Train_Dataset(dataset, config)\n    data_size = data_loader.size\n    \n    for i in range(data_size):\n        img, gt, name = data_loader.load_data(i)\n        #img, gt = data_loader.__getitem__(i)\n        new_img = (img * std + mean) * 255.\n        #new_img = gt * 255\n        print(np.min(new_img), np.max(new_img))\n        new_img = (new_img).astype(np.uint8)\n        #print(new_img.shape).astype(np.)\n        im = Image.fromarray(new_img)\n        #im.save('temp/' + name + '.jpg')\n        im.save('temp/' + str(i) + '.jpg')\n    \n    '''", "\n", "\n", "data_loader", "=", "Val_Dataset", "(", "dataset", ",", "config", ")", "\n", "imgs", ",", "gts", ",", "names", "=", "data_loader", ".", "load_all_data", "(", ")", "\n", "print", "(", "imgs", ".", "shape", ",", "gts", ".", "shape", ",", "len", "(", "names", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.deploy.img_process": [[14, 21], ["image.transpose.resize", "numpy.array().astype", "image.transpose.transpose", "torch.tensor().float", "numpy.array", "torch.tensor", "numpy.expand_dims"], "function", ["None"], ["def", "img_process", "(", "image", ",", "config", ")", ":", "\n", "    ", "image", "=", "image", ".", "resize", "(", "(", "config", "[", "'size'", "]", ",", "config", "[", "'size'", "]", ")", ")", "\n", "image", "=", "np", ".", "array", "(", "image", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "image", "=", "(", "(", "image", "/", "255.", ")", "-", "mean", ")", "/", "std", "\n", "image", "=", "image", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "im", "=", "torch", ".", "tensor", "(", "np", ".", "expand_dims", "(", "image", ",", "0", ")", ")", ".", "float", "(", ")", "\n", "return", "im", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.deploy.detect_img": [[22, 38], ["PIL.Image.open().convert", "deploy.img_process", "model", "Y[].sigmoid_().cpu().data.numpy", "len", "PIL.Image.fromarray().convert", "Image.fromarray().convert.save", "img_process.cuda", "os.path.exists", "os.makedirs", "PIL.Image.open", "PIL.Image.fromarray", "save_name.split", "Y[].sigmoid_().cpu", "img_path[].split", "Y[].sigmoid_"], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.deploy.img_process"], ["", "def", "detect_img", "(", "img_path", ",", "model", ",", "config", ")", ":", "\n", "    ", "image", "=", "Image", ".", "open", "(", "img_path", ")", ".", "convert", "(", "'RGB'", ")", "\n", "image", "=", "img_process", "(", "image", ",", "config", ")", "\n", "\n", "Y", "=", "model", "(", "image", ".", "cuda", "(", ")", ")", "\n", "pred", "=", "Y", "[", "'final'", "]", ".", "sigmoid_", "(", ")", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "\n", "\n", "start", "=", "len", "(", "img_fold", ")", "\n", "im", "=", "Image", ".", "fromarray", "(", "(", "pred", "[", "0", ",", "0", "]", "*", "255", ")", ")", ".", "convert", "(", "'L'", ")", "\n", "#print(img_path[start:].split('.')[0])", "\n", "save_name", "=", "'./photo/'", "+", "img_path", "[", "start", ":", "]", ".", "split", "(", "'.'", ")", "[", "0", "]", "+", "'.png'", "\n", "fold_name", "=", "'/'", ".", "join", "(", "save_name", ".", "split", "(", "'/'", ")", "[", ":", "-", "1", "]", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "fold_name", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "fold_name", ")", "\n", "", "im", ".", "save", "(", "save_name", ")", "\n", "return", "pred", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.deploy.recursion": [[40, 48], ["os.listdir", "os.path.join", "os.path.isdir", "deploy.recursion", "deploy.detect_img", "os.path.join.split"], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.deploy.recursion", "home.repos.pwc.inspect_result.moothes_salod.None.deploy.detect_img"], ["", "def", "recursion", "(", "base_path", ",", "model", ",", "config", ")", ":", "\n", "    ", "sub_list", "=", "os", ".", "listdir", "(", "base_path", ")", "\n", "for", "sub_name", "in", "sub_list", ":", "\n", "        ", "sub_path", "=", "os", ".", "path", ".", "join", "(", "base_path", ",", "sub_name", ")", "\n", "if", "os", ".", "path", ".", "isdir", "(", "sub_path", ")", ":", "\n", "            ", "recursion", "(", "sub_path", ",", "model", ",", "config", ")", "\n", "", "elif", "sub_path", ".", "split", "(", "'.'", ")", "[", "-", "1", "]", "in", "(", "'png'", ",", "'jpg'", ")", ":", "\n", "            ", "detect_img", "(", "sub_path", ",", "model", ",", "config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.deploy.main": [[54, 77], ["base.framework_factory.load_framework", "torch.load", "model.cuda.load_state_dict", "model.cuda.eval", "model.cuda.cuda", "deploy.recursion", "len", "print"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.framework_factory.load_framework", "home.repos.pwc.inspect_result.moothes_salod.None.test.eval", "home.repos.pwc.inspect_result.moothes_salod.None.deploy.recursion"], ["def", "main", "(", ")", ":", "\n", "    ", "if", "len", "(", "sys", ".", "argv", ")", ">", "1", ":", "\n", "        ", "net_name", "=", "sys", ".", "argv", "[", "1", "]", "\n", "", "else", ":", "\n", "        ", "print", "(", "'Need model name!'", ")", "\n", "return", "\n", "\n", "\n", "", "config", ",", "model", ",", "_", ",", "_", ",", "_", ",", "saver", "=", "load_framework", "(", "net_name", ")", "\n", "\n", "saved_model", "=", "torch", ".", "load", "(", "config", "[", "'weight'", "]", ",", "map_location", "=", "'cpu'", ")", "\n", "#new_name = {}", "\n", "#for k, v in saved_model.items():", "\n", "#    if k.startswith('model'):", "\n", "#        new_name[k[6:]] = v", "\n", "#    else:", "\n", "#        new_name[k] = v", "\n", "#model.load_state_dict(new_name)", "\n", "model", ".", "load_state_dict", "(", "saved_model", ")", "\n", "model", ".", "eval", "(", ")", "\n", "model", "=", "model", ".", "cuda", "(", ")", "\n", "\n", "recursion", "(", "img_fold", ",", "model", ",", "config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.test.eval": [[19, 27], ["eval_mae", "eval_f", "eval_e", "eval_s", "eval_fbw"], "function", ["None"], ["def", "eval", "(", "pred", ",", "gt", ")", ":", "\n", "    ", "mae", "=", "eval_mae", "(", "pred", ",", "gt", ")", "\n", "fm", "=", "eval_f", "(", "pred", "*", "255", ",", "gt", "*", "255", ")", "\n", "em", "=", "eval_e", "(", "pred", ",", "gt", ")", "\n", "sm", "=", "eval_s", "(", "pred", ",", "gt", ")", "\n", "fbw", "=", "eval_fbw", "(", "pred", ",", "gt", ")", "\n", "\n", "return", "mae", ",", "fm", ",", "em", ",", "sm", ",", "fbw", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.test.test_model": [[28, 73], ["model.eval", "time.time", "test_sets.items", "print", "os.path.join", "torch.save", "os.path.join", "util.check_path", "metric.MetricRecorder", "progress.bar.Bar", "range", "metric.MetricRecorder.show", "print", "model.state_dict", "test_set.load_data", "model", "[].sigmoid_().cpu().data.numpy", "numpy.array", "metric.MetricRecorder.update", "progress.bar.Bar.next", "round", "image.cuda", "PIL.Image.fromarray().resize", "numpy.round", "os.path.join", "util.check_path", "os.path.join", "PIL.Image.fromarray().convert().save", "saver", "time.time", "[].sigmoid_().cpu", "PIL.Image.fromarray", "PIL.Image.fromarray().convert", "[].sigmoid_", "PIL.Image.fromarray"], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.test.eval", "home.repos.pwc.inspect_result.moothes_salod.None.util.check_path", "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_wfm.show", "home.repos.pwc.inspect_result.moothes_salod.None.data.Test_Dataset.load_data", "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_wfm.update", "home.repos.pwc.inspect_result.moothes_salod.None.util.check_path"], ["", "def", "test_model", "(", "model", ",", "test_sets", ",", "config", ",", "epoch", "=", "None", ",", "saver", "=", "None", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "if", "epoch", "is", "not", "None", ":", "\n", "        ", "weight_path", "=", "os", ".", "path", ".", "join", "(", "config", "[", "'weight_path'", "]", ",", "'{}_{}_{}.pth'", ".", "format", "(", "config", "[", "'model_name'", "]", ",", "config", "[", "'sub'", "]", ",", "epoch", ")", ")", "\n", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "weight_path", ")", "\n", "\n", "", "st", "=", "time", ".", "time", "(", ")", "\n", "for", "set_name", ",", "test_set", "in", "test_sets", ".", "items", "(", ")", ":", "\n", "        ", "save_folder", "=", "os", ".", "path", ".", "join", "(", "config", "[", "'save_path'", "]", ",", "set_name", ")", "\n", "check_path", "(", "save_folder", ")", "\n", "\n", "titer", "=", "test_set", ".", "size", "\n", "MR", "=", "MetricRecorder", "(", "titer", ")", "\n", "\n", "test_bar", "=", "Bar", "(", "'Dataset {:10}:'", ".", "format", "(", "set_name", ")", ",", "max", "=", "titer", ")", "\n", "for", "j", "in", "range", "(", "titer", ")", ":", "\n", "            ", "image", ",", "gt", ",", "name", "=", "test_set", ".", "load_data", "(", "j", ")", "\n", "Y", "=", "model", "(", "image", ".", "cuda", "(", ")", ")", "\n", "pred", "=", "Y", "[", "'final'", "]", "[", "0", ",", "0", "]", ".", "sigmoid_", "(", ")", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "\n", "out_shape", "=", "gt", ".", "shape", "\n", "\n", "pred", "=", "np", ".", "array", "(", "Image", ".", "fromarray", "(", "pred", ")", ".", "resize", "(", "(", "out_shape", "[", ":", ":", "-", "1", "]", ")", ")", ")", "\n", "\n", "pred", "=", "np", ".", "round", "(", "pred", "*", "255", ")", "/", "255.", "\n", "MR", ".", "update", "(", "pre", "=", "pred", ",", "gt", "=", "gt", ")", "\n", "\n", "# save predictions", "\n", "if", "config", "[", "'save'", "]", ":", "\n", "                ", "fnl_folder", "=", "os", ".", "path", ".", "join", "(", "save_folder", ",", "'final'", ")", "\n", "check_path", "(", "fnl_folder", ")", "\n", "im_path", "=", "os", ".", "path", ".", "join", "(", "fnl_folder", ",", "name", "+", "'.png'", ")", "\n", "Image", ".", "fromarray", "(", "(", "pred", "*", "255", ")", ")", ".", "convert", "(", "'L'", ")", ".", "save", "(", "im_path", ")", "\n", "\n", "if", "saver", "is", "not", "None", ":", "\n", "                    ", "saver", "(", "Y", ",", "gt", ",", "name", ",", "save_folder", ",", "config", ")", "\n", "pass", "\n", "\n", "", "", "Bar", ".", "suffix", "=", "'{}/{}'", ".", "format", "(", "j", ",", "titer", ")", "\n", "test_bar", ".", "next", "(", ")", "\n", "\n", "", "mae", ",", "(", "maxf", ",", "meanf", ",", "*", "_", ")", ",", "sm", ",", "em", ",", "wfm", "=", "MR", ".", "show", "(", "bit_num", "=", "3", ")", "\n", "#print('  MAE: {}, Max-F: {}, Maen-F: {}, SM: {}, EM: {}, Fbw: {}.'.format(mae, maxf, meanf, sm, em, wfm))", "\n", "print", "(", "'  Max-F: {}, Maen-F: {}, Fbw: {}, MAE: {}, SM: {}, EM: {}.'", ".", "format", "(", "maxf", ",", "meanf", ",", "wfm", ",", "mae", ",", "sm", ",", "em", ")", ")", "\n", "\n", "", "print", "(", "'Test using time: {}.'", ".", "format", "(", "round", "(", "time", ".", "time", "(", ")", "-", "st", ",", "3", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.test.main": [[74, 100], ["base.framework_factory.load_framework", "torch.load", "torch.load.items", "model.cuda.load_state_dict", "collections.OrderedDict", "model.cuda.cuda", "test.test_model", "len", "print", "k.startswith", "data.Test_Dataset"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.framework_factory.load_framework", "home.repos.pwc.inspect_result.moothes_salod.None.test.test_model"], ["", "def", "main", "(", ")", ":", "\n", "    ", "if", "len", "(", "sys", ".", "argv", ")", ">", "1", ":", "\n", "        ", "net_name", "=", "sys", ".", "argv", "[", "1", "]", "\n", "", "else", ":", "\n", "        ", "print", "(", "'Need model name!'", ")", "\n", "return", "\n", "\n", "", "config", ",", "model", ",", "_", ",", "_", ",", "_", ",", "saver", "=", "load_framework", "(", "net_name", ")", "\n", "\n", "#model.load_state_dict(torch.load(config['weight'], map_location='cpu'))", "\n", "saved_model", "=", "torch", ".", "load", "(", "config", "[", "'weight'", "]", ",", "map_location", "=", "'cpu'", ")", "\n", "new_name", "=", "{", "}", "\n", "for", "k", ",", "v", "in", "saved_model", ".", "items", "(", ")", ":", "\n", "        ", "if", "k", ".", "startswith", "(", "'model'", ")", ":", "\n", "            ", "new_name", "[", "k", "[", "6", ":", "]", "]", "=", "v", "\n", "", "else", ":", "\n", "            ", "new_name", "[", "k", "]", "=", "v", "\n", "", "", "model", ".", "load_state_dict", "(", "new_name", ")", "\n", "\n", "test_sets", "=", "OrderedDict", "(", ")", "\n", "for", "set_name", "in", "config", "[", "'vals'", "]", ":", "\n", "        ", "test_sets", "[", "set_name", "]", "=", "Test_Dataset", "(", "name", "=", "set_name", ",", "config", "=", "config", ")", "\n", "\n", "", "model", "=", "model", ".", "cuda", "(", ")", "\n", "\n", "test_model", "(", "model", ",", "test_sets", ",", "config", ",", "saver", "=", "saver", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.metric.MetricRecorder.__init__": [[9, 15], ["metric.cal_mae", "metric.cal_fm", "metric.cal_sm", "metric.cal_em", "metric.cal_wfm"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "eval_length_for_fm", ",", "beta_for_wfm", "=", "1", ")", ":", "\n", "        ", "self", ".", "mae", "=", "cal_mae", "(", ")", "\n", "self", ".", "fm", "=", "cal_fm", "(", "eval_length_for_fm", ")", "\n", "self", ".", "sm", "=", "cal_sm", "(", ")", "\n", "self", ".", "em", "=", "cal_em", "(", ")", "\n", "self", ".", "wfm", "=", "cal_wfm", "(", "beta_for_wfm", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.metric.MetricRecorder.update": [[16, 22], ["metric.MetricRecorder.mae.update", "metric.MetricRecorder.sm.update", "metric.MetricRecorder.fm.update", "metric.MetricRecorder.em.update", "metric.MetricRecorder.wfm.update"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_wfm.update", "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_wfm.update", "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_wfm.update", "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_wfm.update", "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_wfm.update"], ["", "def", "update", "(", "self", ",", "pre", ",", "gt", ")", ":", "\n", "        ", "self", ".", "mae", ".", "update", "(", "pre", ",", "gt", ")", "\n", "self", ".", "sm", ".", "update", "(", "pre", ",", "gt", ")", "\n", "self", ".", "fm", ".", "update", "(", "pre", ",", "gt", ")", "\n", "self", ".", "em", ".", "update", "(", "pre", ",", "gt", ")", "\n", "self", ".", "wfm", ".", "update", "(", "pre", ",", "gt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.metric.MetricRecorder.show": [[23, 33], ["metric.MetricRecorder.mae.show", "metric.MetricRecorder.fm.show", "metric.MetricRecorder.sm.show", "metric.MetricRecorder.em.show", "metric.MetricRecorder.wfm.show", "metric.MetricRecorder.round_bit_num"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_wfm.show", "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_wfm.show", "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_wfm.show", "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_wfm.show", "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_wfm.show", "home.repos.pwc.inspect_result.moothes_salod.None.metric.MetricRecorder.round_bit_num"], ["", "def", "show", "(", "self", ",", "bit_num", ":", "int", ")", "->", "tuple", ":", "\n", "        ", "mae", "=", "self", ".", "mae", ".", "show", "(", ")", "\n", "f", ",", "maxf", ",", "meanf", ",", "p", ",", "r", "=", "self", ".", "fm", ".", "show", "(", ")", "\n", "sm", "=", "self", ".", "sm", ".", "show", "(", ")", "\n", "em", "=", "self", ".", "em", ".", "show", "(", ")", "\n", "wfm", "=", "self", ".", "wfm", ".", "show", "(", ")", "\n", "mae", ",", "maxf", ",", "meanf", ",", "sm", ",", "em", ",", "wfm", "=", "self", ".", "round_bit_num", "(", "\n", "data", "=", "[", "mae", ",", "maxf", ",", "meanf", ",", "sm", ",", "em", ",", "wfm", "]", ",", "bit_num", "=", "bit_num", "\n", ")", "\n", "return", "mae", ",", "(", "maxf", ",", "meanf", ",", "f", ",", "p", ",", "r", ")", ",", "sm", ",", "em", ",", "wfm", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.metric.MetricRecorder.round_bit_num": [[34, 39], ["results.append", "round"], "methods", ["None"], ["", "def", "round_bit_num", "(", "self", ",", "data", ":", "list", ",", "bit_num", ":", "int", ")", ":", "\n", "        ", "results", "=", "[", "]", "\n", "for", "d", "in", "data", ":", "\n", "            ", "results", ".", "append", "(", "round", "(", "d", ",", "bit_num", ")", ")", "\n", "", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_fm.__init__": [[132, 139], ["numpy.zeros", "numpy.zeros", "numpy.zeros"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "num", ",", "thds", "=", "255", ")", ":", "\n", "        ", "self", ".", "num", "=", "num", "\n", "self", ".", "thds", "=", "thds", "\n", "self", ".", "precision", "=", "np", ".", "zeros", "(", "(", "self", ".", "num", ",", "self", ".", "thds", ")", ")", "\n", "self", ".", "recall", "=", "np", ".", "zeros", "(", "(", "self", ".", "num", ",", "self", ".", "thds", ")", ")", "\n", "self", ".", "meanF", "=", "np", ".", "zeros", "(", "(", "self", ".", "num", ",", "1", ")", ")", "\n", "self", ".", "idx", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_fm.update": [[140, 147], ["gt.max", "metric.cal_fm.cal"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_wfm.cal"], ["", "def", "update", "(", "self", ",", "pred", ",", "gt", ")", ":", "\n", "        ", "if", "gt", ".", "max", "(", ")", "!=", "0", ":", "\n", "            ", "prediction", ",", "recall", ",", "Fmeasure_temp", "=", "self", ".", "cal", "(", "pred", ",", "gt", ")", "\n", "self", ".", "precision", "[", "self", ".", "idx", ",", ":", "]", "=", "prediction", "\n", "self", ".", "recall", "[", "self", ".", "idx", ",", ":", "]", "=", "recall", "\n", "self", ".", "meanF", "[", "self", ".", "idx", ",", ":", "]", "=", "Fmeasure_temp", "\n", "", "self", ".", "idx", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_fm.cal": [[148, 176], ["numpy.zeros_like", "numpy.zeros_like", "numpy.uint8", "numpy.histogram", "numpy.histogram", "numpy.cumsum", "numpy.cumsum", "numpy.uint8.mean", "numpy.flip", "numpy.flip", "numpy.sum", "numpy.zeros_like.sum", "numpy.zeros_like.sum", "range", "range"], "methods", ["None"], ["", "def", "cal", "(", "self", ",", "pred", ",", "gt", ")", ":", "\n", "########################meanF##############################", "\n", "        ", "th", "=", "2", "*", "pred", ".", "mean", "(", ")", "\n", "if", "th", ">", "1", ":", "\n", "            ", "th", "=", "1", "\n", "", "binary", "=", "np", ".", "zeros_like", "(", "pred", ")", "\n", "binary", "[", "pred", ">=", "th", "]", "=", "1", "\n", "hard_gt", "=", "np", ".", "zeros_like", "(", "gt", ")", "\n", "hard_gt", "[", "gt", ">", "0.5", "]", "=", "1", "\n", "tp", "=", "(", "binary", "*", "hard_gt", ")", ".", "sum", "(", ")", "\n", "if", "tp", "==", "0", ":", "\n", "            ", "meanF", "=", "0", "\n", "", "else", ":", "\n", "            ", "pre", "=", "tp", "/", "binary", ".", "sum", "(", ")", "\n", "rec", "=", "tp", "/", "hard_gt", ".", "sum", "(", ")", "\n", "meanF", "=", "1.3", "*", "pre", "*", "rec", "/", "(", "0.3", "*", "pre", "+", "rec", ")", "\n", "\n", "########################maxF##############################", "\n", "", "pred", "=", "np", ".", "uint8", "(", "pred", "*", "255", ")", "\n", "target", "=", "pred", "[", "gt", ">", "0.5", "]", "\n", "nontarget", "=", "pred", "[", "gt", "<=", "0.5", "]", "\n", "targetHist", ",", "_", "=", "np", ".", "histogram", "(", "target", ",", "bins", "=", "range", "(", "256", ")", ")", "\n", "nontargetHist", ",", "_", "=", "np", ".", "histogram", "(", "nontarget", ",", "bins", "=", "range", "(", "256", ")", ")", "\n", "targetHist", "=", "np", ".", "cumsum", "(", "np", ".", "flip", "(", "targetHist", ",", "axis", "=", "0", ")", ",", "axis", "=", "0", ")", "\n", "nontargetHist", "=", "np", ".", "cumsum", "(", "np", ".", "flip", "(", "nontargetHist", ",", "axis", "=", "0", ")", ",", "axis", "=", "0", ")", "\n", "precision", "=", "targetHist", "/", "(", "targetHist", "+", "nontargetHist", "+", "1e-8", ")", "\n", "recall", "=", "targetHist", "/", "np", ".", "sum", "(", "gt", ")", "\n", "return", "precision", ",", "recall", ",", "meanF", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_fm.show": [[177, 184], ["metric.cal_fm.precision.mean", "metric.cal_fm.recall.mean", "metric.cal_fm.meanF.mean", "fmeasure.max"], "methods", ["None"], ["", "def", "show", "(", "self", ")", ":", "\n", "        ", "assert", "self", ".", "num", "==", "self", ".", "idx", ",", "\"{}, {}\"", ".", "format", "(", "self", ".", "num", ",", "self", ".", "idx", ")", "\n", "precision", "=", "self", ".", "precision", ".", "mean", "(", "axis", "=", "0", ")", "\n", "recall", "=", "self", ".", "recall", ".", "mean", "(", "axis", "=", "0", ")", "\n", "fmeasure", "=", "1.3", "*", "precision", "*", "recall", "/", "(", "0.3", "*", "precision", "+", "recall", "+", "1e-8", ")", "\n", "fmeasure_avg", "=", "self", ".", "meanF", ".", "mean", "(", "axis", "=", "0", ")", "\n", "return", "fmeasure", ",", "fmeasure", ".", "max", "(", ")", ",", "fmeasure_avg", "[", "0", "]", ",", "precision", ",", "recall", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_mae.__init__": [[188, 190], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "prediction", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_mae.update": [[191, 194], ["metric.cal_mae.cal", "metric.cal_mae.prediction.append"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_wfm.cal"], ["", "def", "update", "(", "self", ",", "pred", ",", "gt", ")", ":", "\n", "        ", "score", "=", "self", ".", "cal", "(", "pred", ",", "gt", ")", "\n", "self", ".", "prediction", ".", "append", "(", "score", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_mae.cal": [[195, 197], ["numpy.mean", "numpy.abs"], "methods", ["None"], ["", "def", "cal", "(", "self", ",", "pred", ",", "gt", ")", ":", "\n", "        ", "return", "np", ".", "mean", "(", "np", ".", "abs", "(", "pred", "-", "gt", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_mae.show": [[198, 200], ["numpy.mean"], "methods", ["None"], ["", "def", "show", "(", "self", ")", ":", "\n", "        ", "return", "np", ".", "mean", "(", "self", ".", "prediction", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_sm.__init__": [[204, 207], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "alpha", "=", "0.5", ")", ":", "\n", "        ", "self", ".", "prediction", "=", "[", "]", "\n", "self", ".", "alpha", "=", "alpha", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_sm.update": [[208, 212], ["metric.cal_sm.cal", "metric.cal_sm.prediction.append"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_wfm.cal"], ["", "def", "update", "(", "self", ",", "pred", ",", "gt", ")", ":", "\n", "        ", "gt", "=", "gt", ">", "0.5", "\n", "score", "=", "self", ".", "cal", "(", "pred", ",", "gt", ")", "\n", "self", ".", "prediction", ".", "append", "(", "score", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_sm.show": [[213, 215], ["numpy.mean"], "methods", ["None"], ["", "def", "show", "(", "self", ")", ":", "\n", "        ", "return", "np", ".", "mean", "(", "self", ".", "prediction", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_sm.cal": [[216, 227], ["numpy.mean", "numpy.mean", "numpy.mean", "metric.cal_sm.object", "metric.cal_sm.region"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_sm.object", "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_sm.region"], ["", "def", "cal", "(", "self", ",", "pred", ",", "gt", ")", ":", "\n", "        ", "y", "=", "np", ".", "mean", "(", "gt", ")", "\n", "if", "y", "==", "0", ":", "\n", "            ", "score", "=", "1", "-", "np", ".", "mean", "(", "pred", ")", "\n", "", "elif", "y", "==", "1", ":", "\n", "            ", "score", "=", "np", ".", "mean", "(", "pred", ")", "\n", "", "else", ":", "\n", "            ", "score", "=", "self", ".", "alpha", "*", "self", ".", "object", "(", "pred", ",", "gt", ")", "+", "(", "1", "-", "self", ".", "alpha", ")", "*", "self", ".", "region", "(", "\n", "pred", ",", "gt", "\n", ")", "\n", "", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_sm.object": [[228, 235], ["numpy.mean", "metric.cal_sm.s_object", "metric.cal_sm.s_object", "numpy.logical_not"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_sm.s_object", "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_sm.s_object"], ["", "def", "object", "(", "self", ",", "pred", ",", "gt", ")", ":", "\n", "        ", "fg", "=", "pred", "*", "gt", "\n", "bg", "=", "(", "1", "-", "pred", ")", "*", "(", "1", "-", "gt", ")", "\n", "\n", "u", "=", "np", ".", "mean", "(", "gt", ")", "\n", "return", "u", "*", "self", ".", "s_object", "(", "fg", ",", "gt", ")", "+", "(", "1", "-", "u", ")", "*", "self", ".", "s_object", "(", "\n", "bg", ",", "np", ".", "logical_not", "(", "gt", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_sm.s_object": [[237, 241], ["numpy.mean", "numpy.std", "pow"], "methods", ["None"], ["", "def", "s_object", "(", "self", ",", "in1", ",", "in2", ")", ":", "\n", "        ", "x", "=", "np", ".", "mean", "(", "in1", "[", "in2", "]", ")", "\n", "sigma_x", "=", "np", ".", "std", "(", "in1", "[", "in2", "]", ")", "\n", "return", "2", "*", "x", "/", "(", "pow", "(", "x", ",", "2", ")", "+", "1", "+", "sigma_x", "+", "1e-8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_sm.region": [[242, 255], ["scipy.ndimage.center_of_mass", "metric.cal_sm.divideGT", "metric.cal_sm.dividePred", "metric.cal_sm.ssim", "metric.cal_sm.ssim", "metric.cal_sm.ssim", "metric.cal_sm.ssim", "int", "int", "round", "round"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_sm.divideGT", "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_sm.dividePred", "home.repos.pwc.inspect_result.moothes_salod.basnet.new_loss.ssim", "home.repos.pwc.inspect_result.moothes_salod.basnet.new_loss.ssim", "home.repos.pwc.inspect_result.moothes_salod.basnet.new_loss.ssim", "home.repos.pwc.inspect_result.moothes_salod.basnet.new_loss.ssim"], ["", "def", "region", "(", "self", ",", "pred", ",", "gt", ")", ":", "\n", "        ", "[", "y", ",", "x", "]", "=", "center_of_mass", "(", "gt", ")", "\n", "y", "=", "int", "(", "round", "(", "y", ")", ")", "+", "1", "\n", "x", "=", "int", "(", "round", "(", "x", ")", ")", "+", "1", "\n", "[", "gt1", ",", "gt2", ",", "gt3", ",", "gt4", ",", "w1", ",", "w2", ",", "w3", ",", "w4", "]", "=", "self", ".", "divideGT", "(", "gt", ",", "x", ",", "y", ")", "\n", "pred1", ",", "pred2", ",", "pred3", ",", "pred4", "=", "self", ".", "dividePred", "(", "pred", ",", "x", ",", "y", ")", "\n", "\n", "score1", "=", "self", ".", "ssim", "(", "pred1", ",", "gt1", ")", "\n", "score2", "=", "self", ".", "ssim", "(", "pred2", ",", "gt2", ")", "\n", "score3", "=", "self", ".", "ssim", "(", "pred3", ",", "gt3", ")", "\n", "score4", "=", "self", ".", "ssim", "(", "pred4", ",", "gt4", ")", "\n", "\n", "return", "w1", "*", "score1", "+", "w2", "*", "score2", "+", "w3", "*", "score3", "+", "w4", "*", "score4", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_sm.divideGT": [[256, 270], ["None"], "methods", ["None"], ["", "def", "divideGT", "(", "self", ",", "gt", ",", "x", ",", "y", ")", ":", "\n", "        ", "h", ",", "w", "=", "gt", ".", "shape", "\n", "area", "=", "h", "*", "w", "\n", "LT", "=", "gt", "[", "0", ":", "y", ",", "0", ":", "x", "]", "\n", "RT", "=", "gt", "[", "0", ":", "y", ",", "x", ":", "w", "]", "\n", "LB", "=", "gt", "[", "y", ":", "h", ",", "0", ":", "x", "]", "\n", "RB", "=", "gt", "[", "y", ":", "h", ",", "x", ":", "w", "]", "\n", "\n", "w1", "=", "x", "*", "y", "/", "area", "\n", "w2", "=", "y", "*", "(", "w", "-", "x", ")", "/", "area", "\n", "w3", "=", "(", "h", "-", "y", ")", "*", "x", "/", "area", "\n", "w4", "=", "(", "h", "-", "y", ")", "*", "(", "w", "-", "x", ")", "/", "area", "\n", "\n", "return", "LT", ",", "RT", ",", "LB", ",", "RB", ",", "w1", ",", "w2", ",", "w3", ",", "w4", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_sm.dividePred": [[271, 279], ["None"], "methods", ["None"], ["", "def", "dividePred", "(", "self", ",", "pred", ",", "x", ",", "y", ")", ":", "\n", "        ", "h", ",", "w", "=", "pred", ".", "shape", "\n", "LT", "=", "pred", "[", "0", ":", "y", ",", "0", ":", "x", "]", "\n", "RT", "=", "pred", "[", "0", ":", "y", ",", "x", ":", "w", "]", "\n", "LB", "=", "pred", "[", "y", ":", "h", ",", "0", ":", "x", "]", "\n", "RB", "=", "pred", "[", "y", ":", "h", ",", "x", ":", "w", "]", "\n", "\n", "return", "LT", ",", "RT", ",", "LB", ",", "RB", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_sm.ssim": [[280, 302], ["numpy.float32", "numpy.mean", "numpy.mean", "numpy.var", "numpy.var", "numpy.sum"], "methods", ["None"], ["", "def", "ssim", "(", "self", ",", "in1", ",", "in2", ")", ":", "\n", "        ", "in2", "=", "np", ".", "float32", "(", "in2", ")", "\n", "h", ",", "w", "=", "in1", ".", "shape", "\n", "N", "=", "h", "*", "w", "\n", "\n", "x", "=", "np", ".", "mean", "(", "in1", ")", "\n", "y", "=", "np", ".", "mean", "(", "in2", ")", "\n", "sigma_x", "=", "np", ".", "var", "(", "in1", ")", "\n", "sigma_y", "=", "np", ".", "var", "(", "in2", ")", "\n", "sigma_xy", "=", "np", ".", "sum", "(", "(", "in1", "-", "x", ")", "*", "(", "in2", "-", "y", ")", ")", "/", "(", "N", "-", "1", ")", "\n", "\n", "alpha", "=", "4", "*", "x", "*", "y", "*", "sigma_xy", "\n", "beta", "=", "(", "x", "*", "x", "+", "y", "*", "y", ")", "*", "(", "sigma_x", "+", "sigma_y", ")", "\n", "\n", "if", "alpha", "!=", "0", ":", "\n", "            ", "score", "=", "alpha", "/", "(", "beta", "+", "1e-8", ")", "\n", "", "elif", "alpha", "==", "0", "and", "beta", "==", "0", ":", "\n", "            ", "score", "=", "1", "\n", "", "else", ":", "\n", "            ", "score", "=", "0", "\n", "\n", "", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_em.__init__": [[306, 308], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "prediction", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_em.update": [[309, 312], ["metric.cal_em.cal", "metric.cal_em.prediction.append"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_wfm.cal"], ["", "def", "update", "(", "self", ",", "pred", ",", "gt", ")", ":", "\n", "        ", "score", "=", "self", ".", "cal", "(", "pred", ",", "gt", ")", "\n", "self", ".", "prediction", ".", "append", "(", "score", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_em.cal": [[313, 333], ["numpy.zeros", "numpy.array", "numpy.array", "numpy.double", "numpy.shape", "pred.mean", "sum", "sum", "sum", "sum", "numpy.double", "metric.cal_em.AlignmentTerm", "metric.cal_em.EnhancedAlignmentTerm", "sum", "numpy.double", "sum", "numpy.double"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_em.AlignmentTerm", "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_em.EnhancedAlignmentTerm"], ["", "def", "cal", "(", "self", ",", "pred", ",", "gt", ")", ":", "\n", "        ", "th", "=", "2", "*", "pred", ".", "mean", "(", ")", "\n", "if", "th", ">", "1", ":", "\n", "            ", "th", "=", "1", "\n", "", "FM", "=", "np", ".", "zeros", "(", "gt", ".", "shape", ")", "\n", "FM", "[", "pred", ">=", "th", "]", "=", "1", "\n", "FM", "=", "np", ".", "array", "(", "FM", ",", "dtype", "=", "bool", ")", "\n", "GT", "=", "np", ".", "array", "(", "gt", ",", "dtype", "=", "bool", ")", "\n", "dFM", "=", "np", ".", "double", "(", "FM", ")", "\n", "if", "sum", "(", "sum", "(", "np", ".", "double", "(", "GT", ")", ")", ")", "==", "0", ":", "\n", "            ", "enhanced_matrix", "=", "1.0", "-", "dFM", "\n", "", "elif", "sum", "(", "sum", "(", "np", ".", "double", "(", "~", "GT", ")", ")", ")", "==", "0", ":", "\n", "            ", "enhanced_matrix", "=", "dFM", "\n", "", "else", ":", "\n", "            ", "dGT", "=", "np", ".", "double", "(", "GT", ")", "\n", "align_matrix", "=", "self", ".", "AlignmentTerm", "(", "dFM", ",", "dGT", ")", "\n", "enhanced_matrix", "=", "self", ".", "EnhancedAlignmentTerm", "(", "align_matrix", ")", "\n", "", "[", "w", ",", "h", "]", "=", "np", ".", "shape", "(", "GT", ")", "\n", "score", "=", "sum", "(", "sum", "(", "enhanced_matrix", ")", ")", "/", "(", "w", "*", "h", "-", "1", "+", "1e-8", ")", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_em.AlignmentTerm": [[334, 345], ["numpy.mean", "numpy.mean"], "methods", ["None"], ["", "def", "AlignmentTerm", "(", "self", ",", "dFM", ",", "dGT", ")", ":", "\n", "        ", "mu_FM", "=", "np", ".", "mean", "(", "dFM", ")", "\n", "mu_GT", "=", "np", ".", "mean", "(", "dGT", ")", "\n", "align_FM", "=", "dFM", "-", "mu_FM", "\n", "align_GT", "=", "dGT", "-", "mu_GT", "\n", "align_Matrix", "=", "(", "\n", "2.0", "\n", "*", "(", "align_GT", "*", "align_FM", ")", "\n", "/", "(", "align_GT", "*", "align_GT", "+", "align_FM", "*", "align_FM", "+", "1e-8", ")", "\n", ")", "\n", "return", "align_Matrix", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_em.EnhancedAlignmentTerm": [[346, 349], ["numpy.power"], "methods", ["None"], ["", "def", "EnhancedAlignmentTerm", "(", "self", ",", "align_Matrix", ")", ":", "\n", "        ", "enhanced", "=", "np", ".", "power", "(", "align_Matrix", "+", "1", ",", "2", ")", "/", "4", "\n", "return", "enhanced", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_em.show": [[350, 352], ["numpy.mean"], "methods", ["None"], ["", "def", "show", "(", "self", ")", ":", "\n", "        ", "return", "np", ".", "mean", "(", "self", ".", "prediction", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_wfm.__init__": [[359, 363], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "beta", "=", "1", ")", ":", "\n", "        ", "self", ".", "beta", "=", "beta", "\n", "self", ".", "eps", "=", "1e-6", "\n", "self", ".", "scores_list", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_wfm.update": [[364, 375], ["metric.cal_wfm.scores_list.append", "gt.max", "metric.cal_wfm.cal", "pred.max", "pred.min", "gt.max", "gt.min"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_wfm.cal"], ["", "def", "update", "(", "self", ",", "pred", ",", "gt", ")", ":", "\n", "        ", "assert", "pred", ".", "ndim", "==", "gt", ".", "ndim", "and", "pred", ".", "shape", "==", "gt", ".", "shape", "\n", "assert", "pred", ".", "max", "(", ")", "<=", "1", "and", "pred", ".", "min", "(", ")", ">=", "0", "\n", "assert", "gt", ".", "max", "(", ")", "<=", "1", "and", "gt", ".", "min", "(", ")", ">=", "0", "\n", "\n", "gt", "=", "gt", ">", "0.5", "\n", "if", "gt", ".", "max", "(", ")", "==", "0", ":", "\n", "            ", "score", "=", "0", "\n", "", "else", ":", "\n", "            ", "score", "=", "self", ".", "cal", "(", "pred", ",", "gt", ")", "\n", "", "self", ".", "scores_list", ".", "append", "(", "score", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_wfm.matlab_style_gauss2D": [[376, 389], ["numpy.exp", "numpy.exp.sum", "numpy.exp.max", "numpy.finfo"], "methods", ["None"], ["", "def", "matlab_style_gauss2D", "(", "self", ",", "shape", "=", "(", "7", ",", "7", ")", ",", "sigma", "=", "5", ")", ":", "\n", "        ", "\"\"\"\n        2D gaussian mask - should give the same result as MATLAB's\n        fspecial('gaussian',[shape],[sigma])\n        \"\"\"", "\n", "m", ",", "n", "=", "[", "(", "ss", "-", "1.0", ")", "/", "2.0", "for", "ss", "in", "shape", "]", "\n", "y", ",", "x", "=", "np", ".", "ogrid", "[", "-", "m", ":", "m", "+", "1", ",", "-", "n", ":", "n", "+", "1", "]", "\n", "h", "=", "np", ".", "exp", "(", "-", "(", "x", "*", "x", "+", "y", "*", "y", ")", "/", "(", "2.0", "*", "sigma", "*", "sigma", ")", ")", "\n", "h", "[", "h", "<", "np", ".", "finfo", "(", "h", ".", "dtype", ")", ".", "eps", "*", "h", ".", "max", "(", ")", "]", "=", "0", "\n", "sumh", "=", "h", ".", "sum", "(", ")", "\n", "if", "sumh", "!=", "0", ":", "\n", "            ", "h", "/=", "sumh", "\n", "", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_wfm.cal": [[390, 430], ["scipy.ndimage.distance_transform_edt", "numpy.abs", "numpy.copy", "metric.cal_wfm.matlab_style_gauss2D", "scipy.ndimage.convolve", "numpy.where", "numpy.where", "numpy.sum", "numpy.ones_like", "numpy.sum", "numpy.sum", "numpy.mean", "numpy.exp", "numpy.log"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_wfm.matlab_style_gauss2D"], ["", "def", "cal", "(", "self", ",", "pred", ",", "gt", ")", ":", "\n", "# [Dst,IDXT] = bwdist(dGT);", "\n", "        ", "Dst", ",", "Idxt", "=", "bwdist", "(", "gt", "==", "0", ",", "return_indices", "=", "True", ")", "\n", "\n", "# %Pixel dependency", "\n", "# E = abs(FG-dGT);", "\n", "E", "=", "np", ".", "abs", "(", "pred", "-", "gt", ")", "\n", "# Et = E;", "\n", "# Et(~GT)=Et(IDXT(~GT)); %To deal correctly with the edges of the foreground region", "\n", "Et", "=", "np", ".", "copy", "(", "E", ")", "\n", "Et", "[", "gt", "==", "0", "]", "=", "Et", "[", "Idxt", "[", "0", "]", "[", "gt", "==", "0", "]", ",", "Idxt", "[", "1", "]", "[", "gt", "==", "0", "]", "]", "\n", "\n", "# K = fspecial('gaussian',7,5);", "\n", "# EA = imfilter(Et,K);", "\n", "# MIN_E_EA(GT & EA<E) = EA(GT & EA<E);", "\n", "K", "=", "self", ".", "matlab_style_gauss2D", "(", "(", "7", ",", "7", ")", ",", "sigma", "=", "5", ")", "\n", "EA", "=", "convolve", "(", "Et", ",", "weights", "=", "K", ",", "mode", "=", "\"constant\"", ",", "cval", "=", "0", ")", "\n", "MIN_E_EA", "=", "np", ".", "where", "(", "gt", "&", "(", "EA", "<", "E", ")", ",", "EA", ",", "E", ")", "\n", "\n", "# %Pixel importance", "\n", "# B = ones(size(GT));", "\n", "# B(~GT) = 2-1*exp(log(1-0.5)/5.*Dst(~GT));", "\n", "# Ew = MIN_E_EA.*B;", "\n", "B", "=", "np", ".", "where", "(", "gt", "==", "0", ",", "2", "-", "np", ".", "exp", "(", "np", ".", "log", "(", "0.5", ")", "/", "5", "*", "Dst", ")", ",", "np", ".", "ones_like", "(", "gt", ")", ")", "\n", "Ew", "=", "MIN_E_EA", "*", "B", "\n", "\n", "# TPw = sum(dGT(:)) - sum(sum(Ew(GT)));", "\n", "# FPw = sum(sum(Ew(~GT)));", "\n", "TPw", "=", "np", ".", "sum", "(", "gt", ")", "-", "np", ".", "sum", "(", "Ew", "[", "gt", "==", "1", "]", ")", "\n", "FPw", "=", "np", ".", "sum", "(", "Ew", "[", "gt", "==", "0", "]", ")", "\n", "\n", "# R = 1- mean2(Ew(GT)); %Weighed Recall", "\n", "# P = TPw./(eps+TPw+FPw); %Weighted Precision", "\n", "R", "=", "1", "-", "np", ".", "mean", "(", "Ew", "[", "gt", "]", ")", "\n", "P", "=", "TPw", "/", "(", "self", ".", "eps", "+", "TPw", "+", "FPw", ")", "\n", "\n", "# % Q = (1+Beta^2)*(R*P)./(eps+R+(Beta.*P));", "\n", "Q", "=", "(", "1", "+", "self", ".", "beta", ")", "*", "R", "*", "P", "/", "(", "self", ".", "eps", "+", "R", "+", "self", ".", "beta", "*", "P", ")", "\n", "\n", "return", "Q", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_wfm.show": [[431, 433], ["numpy.mean"], "methods", ["None"], ["", "def", "show", "(", "self", ")", ":", "\n", "        ", "return", "np", ".", "mean", "(", "self", ".", "scores_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.metric.normalize_pil": [[117, 129], ["numpy.asarray", "numpy.asarray", "numpy.where", "np.asarray.max", "np.asarray.min", "np.where.max"], "function", ["None"], ["def", "normalize_pil", "(", "pre", ",", "gt", ")", ":", "\n", "    ", "gt", "=", "np", ".", "asarray", "(", "gt", ")", "\n", "pre", "=", "np", ".", "asarray", "(", "pre", ")", "\n", "gt", "=", "gt", "/", "(", "gt", ".", "max", "(", ")", "+", "1e-8", ")", "\n", "gt", "=", "np", ".", "where", "(", "gt", ">", "0.5", ",", "1", ",", "0", ")", "\n", "max_pre", "=", "pre", ".", "max", "(", ")", "\n", "min_pre", "=", "pre", ".", "min", "(", ")", "\n", "if", "max_pre", "==", "min_pre", ":", "\n", "        ", "pre", "=", "pre", "/", "255", "\n", "", "else", ":", "\n", "        ", "pre", "=", "(", "pre", "-", "min_pre", ")", "/", "(", "max_pre", "-", "min_pre", ")", "\n", "", "return", "pre", ",", "gt", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.util.check_path": [[14, 17], ["os.path.exists", "os.makedirs"], "function", ["None"], ["def", "check_path", "(", "path", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.util.freeze_bn": [[18, 24], ["model.base.modules", "isinstance", "m.eval"], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.test.eval"], ["", "", "def", "freeze_bn", "(", "model", ")", ":", "\n", "    ", "for", "m", "in", "model", ".", "base", ".", "modules", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "torch", ".", "nn", ".", "BatchNorm2d", ")", ":", "\n", "            ", "m", ".", "eval", "(", ")", "\n", "m", ".", "weight", ".", "requires_grad", "=", "False", "\n", "m", ".", "bias", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.util.label_edge_prediction_old": [[25, 43], ["numpy.array().astype", "numpy.array().astype", "numpy.reshape", "numpy.reshape", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "F.pad.float", "torch.nn.functional.pad", "torch.nn.functional.conv2d", "torch.nn.functional.conv2d", "torch.sqrt", "torch.sqrt", "torch.gt().float", "torch.gt().float", "numpy.array", "numpy.array", "torch.autograd.Variable", "torch.autograd.Variable", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.gt", "torch.gt", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "function", ["None"], ["", "", "", "def", "label_edge_prediction_old", "(", "label", ")", ":", "\n", "    ", "fx", "=", "np", ".", "array", "(", "[", "[", "-", "1", ",", "0", ",", "1", "]", ",", "[", "-", "2", ",", "0", ",", "2", "]", ",", "[", "-", "1", ",", "0", ",", "1", "]", "]", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "fy", "=", "np", ".", "array", "(", "[", "[", "-", "1", ",", "-", "2", ",", "-", "1", "]", ",", "[", "0", ",", "0", ",", "0", "]", ",", "[", "1", ",", "2", ",", "1", "]", "]", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "fx", "=", "np", ".", "reshape", "(", "fx", ",", "(", "1", ",", "1", ",", "3", ",", "3", ")", ")", "\n", "fy", "=", "np", ".", "reshape", "(", "fy", ",", "(", "1", ",", "1", ",", "3", ",", "3", ")", ")", "\n", "fx", "=", "Variable", "(", "torch", ".", "from_numpy", "(", "fx", ")", ")", ".", "cuda", "(", ")", "\n", "fy", "=", "Variable", "(", "torch", ".", "from_numpy", "(", "fy", ")", ")", ".", "cuda", "(", ")", "\n", "contour_th", "=", "1.5", "\n", "\n", "# convert label to edge", "\n", "label", "=", "label", ".", "float", "(", ")", "\n", "label", "=", "F", ".", "pad", "(", "label", ",", "(", "1", ",", "1", ",", "1", ",", "1", ")", ",", "mode", "=", "'replicate'", ")", "\n", "label_fx", "=", "F", ".", "conv2d", "(", "label", ",", "fx", ")", "\n", "label_fy", "=", "F", ".", "conv2d", "(", "label", ",", "fy", ")", "\n", "label_grad", "=", "torch", ".", "sqrt", "(", "torch", ".", "mul", "(", "label_fx", ",", "label_fx", ")", "+", "torch", ".", "mul", "(", "label_fy", ",", "label_fy", ")", ")", "\n", "label_grad", "=", "torch", ".", "gt", "(", "label_grad", ",", "contour_th", ")", ".", "float", "(", ")", "\n", "\n", "return", "label_grad", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.util.label_edge_prediction": [[44, 50], ["torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool2d"], "function", ["None"], ["", "def", "label_edge_prediction", "(", "label", ")", ":", "\n", "    ", "ero", "=", "1", "-", "F", ".", "max_pool2d", "(", "1", "-", "label", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", "# erosion", "\n", "dil", "=", "F", ".", "max_pool2d", "(", "label", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", "# dilation", "\n", "\n", "edge", "=", "dil", "-", "ero", "\n", "return", "edge", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.None.util.mask_normalize": [[51, 53], ["numpy.amax"], "function", ["None"], ["", "def", "mask_normalize", "(", "mask", ")", ":", "\n", "    ", "return", "mask", "/", "(", "np", ".", "amax", "(", "mask", ")", "+", "1e-8", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.ldf.config.get_config": [[7, 21], ["base.config.base_config", "base.config.base_config.parse_args", "vars", "base.config.cfg_convert", "print"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.config.base_config", "home.repos.pwc.inspect_result.moothes_salod.base.config.cfg_convert"], ["def", "get_config", "(", ")", ":", "\n", "    ", "strategy", "=", "'base_sgd'", "\n", "parser", "=", "base_config", "(", "strategy", ")", "\n", "# Add custom params here", "\n", "# parser.add_argument('--size', default=320, type=int, help='Input size')", "\n", "\n", "params", "=", "parser", ".", "parse_args", "(", ")", "\n", "config", "=", "vars", "(", "params", ")", "\n", "cfg_convert", "(", "config", ")", "\n", "print", "(", "'Training {} network with {} backbone using Gpu: {}'", ".", "format", "(", "config", "[", "'model_name'", "]", ",", "config", "[", "'backbone'", "]", ",", "config", "[", "'gpus'", "]", ")", ")", "\n", "\n", "# Config post-process", "\n", "\n", "return", "config", "", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.ldf.loss.IOU": [[8, 15], ["torch.sigmoid", "torch.sum", "torch.sum", "torch.sum"], "function", ["None"], ["def", "IOU", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "    ", "pred", "=", "torch", ".", "sigmoid", "(", "preds", ")", "\n", "\n", "inter", "=", "torch", ".", "sum", "(", "target", "*", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "\n", "union", "=", "torch", ".", "sum", "(", "target", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "+", "torch", ".", "sum", "(", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "-", "inter", "\n", "iou_loss", "=", "1", "-", "(", "inter", "/", "union", ")", ".", "mean", "(", ")", "\n", "return", "iou_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.ldf.loss.Loss": [[16, 34], ["torch.nn.BCEWithLogitsLoss", "label_edge_prediction", "nn.BCEWithLogitsLoss.mean", "loss.IOU", "nn.BCEWithLogitsLoss.mean", "nn.BCEWithLogitsLoss.mean", "nn.BCEWithLogitsLoss.", "nn.BCEWithLogitsLoss.", "nn.BCEWithLogitsLoss.", "target.gt().float", "label_edge_prediction.gt().float", "gt_body.gt().float", "target.gt", "label_edge_prediction.gt", "gt_body.gt"], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.util.label_edge_prediction", "home.repos.pwc.inspect_result.moothes_salod.base.loss.IOU"], ["", "def", "Loss", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "# preds: Dict type. Customarily, preds['final'] is the final prediction without sigmoid.", "\n", "    ", "bce", "=", "nn", ".", "BCEWithLogitsLoss", "(", "reduction", "=", "'none'", ")", "\n", "\n", "loss", "=", "0", "\n", "for", "pred", "in", "preds", "[", "'sal'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "target", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "loss", "+=", "IOU", "(", "pred", ",", "target", ",", "config", ")", "\n", "\n", "", "gt_edge", "=", "label_edge_prediction", "(", "target", ")", "\n", "for", "pred", "in", "preds", "[", "'detail'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "gt_edge", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "\n", "", "gt_body", "=", "(", "target", "-", "gt_edge", ")", ".", "gt", "(", "0.5", ")", "\n", "for", "pred", "in", "preds", "[", "'body'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "gt_body", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.ldf.model.Decoder.__init__": [[11, 21], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv0", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn0", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.ldf.model.Decoder.forward": [[22, 31], ["torch.nn.functional.relu", "torch.nn.functional.interpolate", "torch.nn.functional.relu", "torch.nn.functional.interpolate", "torch.nn.functional.relu", "torch.nn.functional.interpolate", "torch.nn.functional.relu", "model.Decoder.bn0", "model.Decoder.bn1", "model.Decoder.bn2", "model.Decoder.bn3", "model.Decoder.conv0", "model.Decoder.conv1", "model.Decoder.conv2", "model.Decoder.conv3", "input1[].size", "input1[].size", "input1[].size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input1", ",", "input2", "=", "[", "0", ",", "0", ",", "0", ",", "0", "]", ")", ":", "\n", "        ", "out0", "=", "F", ".", "relu", "(", "self", ".", "bn0", "(", "self", ".", "conv0", "(", "input1", "[", "0", "]", "+", "input2", "[", "0", "]", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out0", "=", "F", ".", "interpolate", "(", "out0", ",", "size", "=", "input1", "[", "1", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "input1", "[", "1", "]", "+", "input2", "[", "1", "]", "+", "out0", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out1", "=", "F", ".", "interpolate", "(", "out1", ",", "size", "=", "input1", "[", "2", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "input1", "[", "2", "]", "+", "input2", "[", "2", "]", "+", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2", "=", "F", ".", "interpolate", "(", "out2", ",", "size", "=", "input1", "[", "3", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "input1", "[", "3", "]", "+", "input2", "[", "3", "]", "+", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "return", "out3", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.ldf.model.Decoder.initialize": [[32, 34], ["weight_init"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.gcpa.model.weight_init"], ["", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.ldf.model.Encoder.__init__": [[37, 65], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "conv1b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "conv1d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.ldf.model.Encoder.forward": [[66, 85], ["torch.nn.functional.relu", "torch.nn.functional.max_pool2d", "torch.nn.functional.relu", "torch.nn.functional.max_pool2d", "torch.nn.functional.relu", "torch.nn.functional.max_pool2d", "torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.relu", "model.Encoder.bn1", "model.Encoder.bn2", "model.Encoder.bn3", "model.Encoder.bn4", "model.Encoder.bn1b", "model.Encoder.bn2b", "model.Encoder.bn3b", "model.Encoder.bn4b", "model.Encoder.bn1d", "model.Encoder.bn2d", "model.Encoder.bn3d", "model.Encoder.bn4d", "model.Encoder.conv1", "model.Encoder.conv2", "model.Encoder.conv3", "model.Encoder.conv4", "model.Encoder.conv1b", "model.Encoder.conv2b", "model.Encoder.conv3b", "model.Encoder.conv4b", "model.Encoder.conv1d", "model.Encoder.conv2d", "model.Encoder.conv3d", "model.Encoder.conv4d"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "out1", ")", ":", "\n", "        ", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2", "=", "F", ".", "max_pool2d", "(", "out1", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3", "=", "F", ".", "max_pool2d", "(", "out2", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4", "=", "F", ".", "max_pool2d", "(", "out3", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out4", "=", "F", ".", "relu", "(", "self", ".", "bn4", "(", "self", ".", "conv4", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "out1b", "=", "F", ".", "relu", "(", "self", ".", "bn1b", "(", "self", ".", "conv1b", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2b", "=", "F", ".", "relu", "(", "self", ".", "bn2b", "(", "self", ".", "conv2b", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3b", "=", "F", ".", "relu", "(", "self", ".", "bn3b", "(", "self", ".", "conv3b", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4b", "=", "F", ".", "relu", "(", "self", ".", "bn4b", "(", "self", ".", "conv4b", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "out1d", "=", "F", ".", "relu", "(", "self", ".", "bn1d", "(", "self", ".", "conv1d", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2d", "=", "F", ".", "relu", "(", "self", ".", "bn2d", "(", "self", ".", "conv2d", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3d", "=", "F", ".", "relu", "(", "self", ".", "bn3d", "(", "self", ".", "conv3d", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4d", "=", "F", ".", "relu", "(", "self", ".", "bn4d", "(", "self", ".", "conv4d", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "return", "(", "out4b", ",", "out3b", ",", "out2b", ",", "out1b", ")", ",", "(", "out4d", ",", "out3d", ",", "out2d", ",", "out1d", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.ldf.model.Encoder.initialize": [[86, 88], ["weight_init"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.gcpa.model.weight_init"], ["", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.ldf.model.Network.__init__": [[91, 113], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "model.Encoder", "model.Decoder", "model.Decoder", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ",", "encoder", ",", "feat", ")", ":", "\n", "# encoder: backbone, forward function output 5 encoder features. details in methods/base/model.py", "\n", "# feat: length of encoder features. e.g.: VGG:[64, 128, 256, 512, 512]; Resnet:[64, 256, 512, 1024, 2048]", "\n", "        ", "super", "(", "Network", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "conv5b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv2b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv5d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "encoder1", "=", "Encoder", "(", ")", "\n", "self", ".", "decoderb", "=", "Decoder", "(", ")", "\n", "self", ".", "decoderd", "=", "Decoder", "(", ")", "\n", "self", ".", "linearb", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "lineard", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.ldf.model.Network.forward": [[114, 143], ["model.Network.encoder", "model.Network.decoderb", "model.Network.decoderd", "torch.cat", "model.Network.encoder1", "model.Network.decoderb", "model.Network.decoderd", "torch.cat", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "x.size", "model.Network.conv2b", "model.Network.conv3b", "model.Network.conv4b", "model.Network.conv5b", "model.Network.conv2d", "model.Network.conv3d", "model.Network.conv4d", "model.Network.conv5d", "model.Network.linear", "model.Network.linearb", "model.Network.lineard", "model.Network.linear", "model.Network.linearb", "model.Network.lineard"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "phase", "=", "'test'", ")", ":", "\n", "        ", "shape", "=", "x", ".", "size", "(", ")", "[", "2", ":", "]", "\n", "out1", ",", "out2", ",", "out3", ",", "out4", ",", "out5", "=", "self", ".", "encoder", "(", "x", ")", "\n", "out2b", ",", "out3b", ",", "out4b", ",", "out5b", "=", "self", ".", "conv2b", "(", "out2", ")", ",", "self", ".", "conv3b", "(", "out3", ")", ",", "self", ".", "conv4b", "(", "out4", ")", ",", "self", ".", "conv5b", "(", "out5", ")", "\n", "out2d", ",", "out3d", ",", "out4d", ",", "out5d", "=", "self", ".", "conv2d", "(", "out2", ")", ",", "self", ".", "conv3d", "(", "out3", ")", ",", "self", ".", "conv4d", "(", "out4", ")", ",", "self", ".", "conv5d", "(", "out5", ")", "\n", "\n", "outb1", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ")", "\n", "outd1", "=", "self", ".", "decoderd", "(", "[", "out5d", ",", "out4d", ",", "out3d", ",", "out2d", "]", ")", "\n", "out1", "=", "torch", ".", "cat", "(", "[", "outb1", ",", "outd1", "]", ",", "dim", "=", "1", ")", "\n", "outb2", ",", "outd2", "=", "self", ".", "encoder1", "(", "out1", ")", "\n", "outb2", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ",", "outb2", ")", "\n", "outd2", "=", "self", ".", "decoderd", "(", "[", "out5d", ",", "out4d", ",", "out3d", ",", "out2d", "]", ",", "outd2", ")", "\n", "out2", "=", "torch", ".", "cat", "(", "[", "outb2", ",", "outd2", "]", ",", "dim", "=", "1", ")", "\n", "\n", "out1", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outb1", "=", "F", ".", "interpolate", "(", "self", ".", "linearb", "(", "outb1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outd1", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "\n", "out2", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outb2", "=", "F", ".", "interpolate", "(", "self", ".", "linearb", "(", "outb2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outd2", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "#return outb1, outd1, out1, outb2, outd2, out2", "\n", "\n", "OutDict", "=", "{", "}", "\n", "OutDict", "[", "'final'", "]", "=", "out2", "\n", "OutDict", "[", "'body'", "]", "=", "[", "outb1", ",", "outb2", "]", "\n", "OutDict", "[", "'detail'", "]", "=", "[", "outd1", ",", "outd2", "]", "\n", "OutDict", "[", "'sal'", "]", "=", "[", "out1", ",", "out2", "]", "\n", "return", "OutDict", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.dhsnet.config.get_config": [[7, 19], ["base.config.base_config", "base.config.base_config.parse_args", "vars", "base.config.cfg_convert", "print"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.config.base_config", "home.repos.pwc.inspect_result.moothes_salod.base.config.cfg_convert"], ["def", "get_config", "(", ")", ":", "\n", "    ", "strategy", "=", "'base_sgd'", "\n", "parser", "=", "base_config", "(", "strategy", ")", "\n", "# Add custom params here", "\n", "# parser.add_argument('--size', default=320, type=int, help='Input size')", "\n", "\n", "params", "=", "parser", ".", "parse_args", "(", ")", "\n", "config", "=", "vars", "(", "params", ")", "\n", "cfg_convert", "(", "config", ")", "\n", "print", "(", "'Training {} network with {} backbone using Gpu: {}'", ".", "format", "(", "config", "[", "'model_name'", "]", ",", "config", "[", "'backbone'", "]", ",", "config", "[", "'gpus'", "]", ")", ")", "\n", "\n", "# Config post-process", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.dhsnet.loss.CTLoss": [[9, 14], ["torch.nn.BCEWithLogitsLoss", "torch.nn.functional.avg_pool2d", "label_edge_prediction", "nn.BCEWithLogitsLoss."], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.util.label_edge_prediction"], ["    ", "pred", "=", "torch", ".", "sigmoid", "(", "preds", ")", "\n", "\n", "inter", "=", "torch", ".", "sum", "(", "target", "*", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "\n", "union", "=", "torch", ".", "sum", "(", "target", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "+", "torch", ".", "sum", "(", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "-", "inter", "\n", "iou_loss", "=", "1", "-", "(", "inter", "/", "union", ")", ".", "mean", "(", ")", "\n", "return", "iou_loss", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.dhsnet.loss.Fscore": [[16, 27], ["torch.sigmoid", "fs.mean", "torch.nn.functional.avg_pool2d", "tp.sum", "torch.sigmoid.sum", "label_edge_prediction", "target.sum"], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.util.label_edge_prediction"], ["", "def", "Loss", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "# preds: Dict type. Customarily, preds['final'] is the final prediction without sigmoid.", "\n", "    ", "bce", "=", "nn", ".", "BCEWithLogitsLoss", "(", "reduction", "=", "'none'", ")", "\n", "\n", "loss", "=", "0", "\n", "for", "pred", "in", "preds", "[", "'sal'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "target", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "loss", "+=", "IOU", "(", "pred", ",", "target", ",", "config", ")", "\n", "\n", "", "gt_edge", "=", "label_edge_prediction", "(", "target", ")", "\n", "for", "pred", "in", "preds", "[", "'detail'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "gt_edge", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.dhsnet.loss.cff_loss": [[28, 32], ["loss.CTLoss", "loss.Fscore"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.loss.CTLoss", "home.repos.pwc.inspect_result.moothes_salod.base.loss.Fscore"], ["\n", "", "gt_body", "=", "(", "target", "-", "gt_edge", ")", ".", "gt", "(", "0.5", ")", "\n", "for", "pred", "in", "preds", "[", "'body'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "gt_body", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.dhsnet.loss.Loss_new": [[34, 40], ["loss.cff_loss"], "function", ["home.repos.pwc.inspect_result.moothes_salod.itsd.loss.cff_loss"], ["\n", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.dhsnet.loss.Loss": [[41, 49], ["torch.nn.BCEWithLogitsLoss", "nn.BCEWithLogitsLoss."], "function", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.dhsnet.model.RCL.__init__": [[23, 47], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "list", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "model.gen_conv", "range", "list", "model.gen_conv"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.page.model.gen_conv", "home.repos.pwc.inspect_result.moothes_salod.page.model.gen_conv"], ["        ", "out0", "=", "F", ".", "relu", "(", "self", ".", "bn0", "(", "self", ".", "conv0", "(", "input1", "[", "0", "]", "+", "input2", "[", "0", "]", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out0", "=", "F", ".", "interpolate", "(", "out0", ",", "size", "=", "input1", "[", "1", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "input1", "[", "1", "]", "+", "input2", "[", "1", "]", "+", "out0", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out1", "=", "F", ".", "interpolate", "(", "out1", ",", "size", "=", "input1", "[", "2", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "input1", "[", "2", "]", "+", "input2", "[", "2", "]", "+", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2", "=", "F", ".", "interpolate", "(", "out2", ",", "size", "=", "input1", "[", "3", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "input1", "[", "3", "]", "+", "input2", "[", "3", "]", "+", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "return", "out3", "\n", "\n", "", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n", "\n", "", "", "class", "Encoder", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.dhsnet.model.RCL.forward": [[48, 60], ["model.RCL.conv1", "model.RCL.sigmoid", "model.RCL.sigmoid", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.RCL.conv2", "range", "model.RCL.conv4", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add"], "methods", ["None"], ["self", ".", "conv1b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "conv1d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.dhsnet.model.Network.__init__": [[64, 75], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "model.RCL", "model.RCL", "model.RCL", "model.RCL"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["self", ".", "bn4d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "out1", ")", ":", "\n", "        ", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2", "=", "F", ".", "max_pool2d", "(", "out1", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3", "=", "F", ".", "max_pool2d", "(", "out2", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4", "=", "F", ".", "max_pool2d", "(", "out3", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out4", "=", "F", ".", "relu", "(", "self", ".", "bn4", "(", "self", ".", "conv4", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "out1b", "=", "F", ".", "relu", "(", "self", ".", "bn1b", "(", "self", ".", "conv1b", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.dhsnet.model.Network.forward": [[76, 95], ["model.Network.encoder", "model.Network.atten", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "model.Network.layer1", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "model.Network.layer2", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "model.Network.layer3", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "model.Network.layer4", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "x.size"], "methods", ["None"], ["out2b", "=", "F", ".", "relu", "(", "self", ".", "bn2b", "(", "self", ".", "conv2b", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3b", "=", "F", ".", "relu", "(", "self", ".", "bn3b", "(", "self", ".", "conv3b", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4b", "=", "F", ".", "relu", "(", "self", ".", "bn4b", "(", "self", ".", "conv4b", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "out1d", "=", "F", ".", "relu", "(", "self", ".", "bn1d", "(", "self", ".", "conv1d", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2d", "=", "F", ".", "relu", "(", "self", ".", "bn2d", "(", "self", ".", "conv2d", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3d", "=", "F", ".", "relu", "(", "self", ".", "bn3d", "(", "self", ".", "conv3d", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4d", "=", "F", ".", "relu", "(", "self", ".", "bn4d", "(", "self", ".", "conv4d", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "return", "(", "out4b", ",", "out3b", ",", "out2b", ",", "out1b", ")", ",", "(", "out4d", ",", "out3d", ",", "out2d", ",", "out1d", ")", "\n", "\n", "", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n", "\n", "", "", "class", "Network", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "config", ",", "encoder", ",", "feat", ")", ":", "\n", "# encoder: backbone, forward function output 5 encoder features. details in methods/base/model.py", "\n", "# feat: length of encoder features. e.g.: VGG:[64, 128, 256, 512, 512]; Resnet:[64, 256, 512, 1024, 2048]", "\n", "        ", "super", "(", "Network", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.dhsnet.model.gen_conv": [[15, 19], ["torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU"], "function", ["None"], ["self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.amulet.config.get_config": [[8, 19], ["base.config.base_config", "base.config.base_config.parse_args", "vars", "base.config.cfg_convert", "print"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.config.base_config", "home.repos.pwc.inspect_result.moothes_salod.base.config.cfg_convert"], ["    ", "strategy", "=", "'base_sgd'", "\n", "parser", "=", "base_config", "(", "strategy", ")", "\n", "# Add custom params here", "\n", "# parser.add_argument('--size', default=320, type=int, help='Input size')", "\n", "\n", "params", "=", "parser", ".", "parse_args", "(", ")", "\n", "config", "=", "vars", "(", "params", ")", "\n", "cfg_convert", "(", "config", ")", "\n", "print", "(", "'Training {} network with {} backbone using Gpu: {}'", ".", "format", "(", "config", "[", "'model_name'", "]", ",", "config", "[", "'backbone'", "]", ",", "config", "[", "'gpus'", "]", ")", ")", "\n", "\n", "# Config post-process", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.amulet.loss.CTLoss": [[9, 14], ["torch.nn.BCEWithLogitsLoss", "torch.nn.functional.avg_pool2d", "label_edge_prediction", "nn.BCEWithLogitsLoss."], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.util.label_edge_prediction"], ["    ", "pred", "=", "torch", ".", "sigmoid", "(", "preds", ")", "\n", "\n", "inter", "=", "torch", ".", "sum", "(", "target", "*", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "\n", "union", "=", "torch", ".", "sum", "(", "target", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "+", "torch", ".", "sum", "(", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "-", "inter", "\n", "iou_loss", "=", "1", "-", "(", "inter", "/", "union", ")", ".", "mean", "(", ")", "\n", "return", "iou_loss", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.amulet.loss.Fscore": [[16, 27], ["torch.sigmoid", "fs.mean", "torch.nn.functional.avg_pool2d", "tp.sum", "torch.sigmoid.sum", "label_edge_prediction", "target.sum"], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.util.label_edge_prediction"], ["", "def", "Loss", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "# preds: Dict type. Customarily, preds['final'] is the final prediction without sigmoid.", "\n", "    ", "bce", "=", "nn", ".", "BCEWithLogitsLoss", "(", "reduction", "=", "'none'", ")", "\n", "\n", "loss", "=", "0", "\n", "for", "pred", "in", "preds", "[", "'sal'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "target", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "loss", "+=", "IOU", "(", "pred", ",", "target", ",", "config", ")", "\n", "\n", "", "gt_edge", "=", "label_edge_prediction", "(", "target", ")", "\n", "for", "pred", "in", "preds", "[", "'detail'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "gt_edge", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.amulet.loss.cff_loss": [[28, 33], ["loss.CTLoss", "loss.Fscore"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.loss.CTLoss", "home.repos.pwc.inspect_result.moothes_salod.base.loss.Fscore"], ["\n", "", "gt_body", "=", "(", "target", "-", "gt_edge", ")", ".", "gt", "(", "0.5", ")", "\n", "for", "pred", "in", "preds", "[", "'body'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "gt_body", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "\n", "", "return", "loss", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.amulet.loss.Loss_new": [[35, 41], ["loss.cff_loss"], "function", ["home.repos.pwc.inspect_result.moothes_salod.itsd.loss.cff_loss"], ["", ""]], "home.repos.pwc.inspect_result.moothes_salod.amulet.loss.Loss": [[42, 50], ["torch.nn.BCEWithLogitsLoss", "nn.BCEWithLogitsLoss."], "function", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.amulet.model.RFC.__init__": [[10, 60], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "ValueError", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.Conv2d", "torch.Conv2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "ValueError"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["class", "Decoder", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv0", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn0", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "input1", ",", "input2", "=", "[", "0", ",", "0", ",", "0", ",", "0", "]", ")", ":", "\n", "        ", "out0", "=", "F", ".", "relu", "(", "self", ".", "bn0", "(", "self", ".", "conv0", "(", "input1", "[", "0", "]", "+", "input2", "[", "0", "]", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out0", "=", "F", ".", "interpolate", "(", "out0", ",", "size", "=", "input1", "[", "1", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "input1", "[", "1", "]", "+", "input2", "[", "1", "]", "+", "out0", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out1", "=", "F", ".", "interpolate", "(", "out1", ",", "size", "=", "input1", "[", "2", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "input1", "[", "2", "]", "+", "input2", "[", "2", "]", "+", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2", "=", "F", ".", "interpolate", "(", "out2", ",", "size", "=", "input1", "[", "3", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "input1", "[", "3", "]", "+", "input2", "[", "3", "]", "+", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "return", "out3", "\n", "\n", "", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n", "\n", "", "", "class", "Encoder", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "conv1b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "conv1d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.amulet.model.RFC.forward": [[62, 77], ["model.RFC.layer1", "model.RFC.layer2", "model.RFC.layer3", "model.RFC.layer4", "model.RFC.layer5", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.RFC.conv_out", "model.RFC.bn", "model.RFC.relu", "model.RFC.upsample"], "methods", ["None"], ["self", ".", "bn3d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "out1", ")", ":", "\n", "        ", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2", "=", "F", ".", "max_pool2d", "(", "out1", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3", "=", "F", ".", "max_pool2d", "(", "out2", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4", "=", "F", ".", "max_pool2d", "(", "out3", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out4", "=", "F", ".", "relu", "(", "self", ".", "bn4", "(", "self", ".", "conv4", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "out1b", "=", "F", ".", "relu", "(", "self", ".", "bn1b", "(", "self", ".", "conv1b", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2b", "=", "F", ".", "relu", "(", "self", ".", "bn2b", "(", "self", ".", "conv2b", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3b", "=", "F", ".", "relu", "(", "self", ".", "bn3b", "(", "self", ".", "conv3b", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.amulet.model.Network.__init__": [[80, 106], ["torch.Module.__init__", "model.RFC", "model.RFC", "model.RFC", "model.RFC", "model.RFC", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["out1d", "=", "F", ".", "relu", "(", "self", ".", "bn1d", "(", "self", ".", "conv1d", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2d", "=", "F", ".", "relu", "(", "self", ".", "bn2d", "(", "self", ".", "conv2d", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3d", "=", "F", ".", "relu", "(", "self", ".", "bn3d", "(", "self", ".", "conv3d", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4d", "=", "F", ".", "relu", "(", "self", ".", "bn4d", "(", "self", ".", "conv4d", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "return", "(", "out4b", ",", "out3b", ",", "out2b", ",", "out1b", ")", ",", "(", "out4d", ",", "out3d", ",", "out2d", ",", "out1d", ")", "\n", "\n", "", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n", "\n", "", "", "class", "Network", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "config", ",", "encoder", ",", "feat", ")", ":", "\n", "# encoder: backbone, forward function output 5 encoder features. details in methods/base/model.py", "\n", "# feat: length of encoder features. e.g.: VGG:[64, 128, 256, 512, 512]; Resnet:[64, 256, 512, 1024, 2048]", "\n", "        ", "super", "(", "Network", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "conv5b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv2b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv5d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.amulet.model.Network.forward": [[110, 151], ["model.Network.encoder", "model.Network.rfc1", "model.Network.rfc2", "model.Network.rfc3", "model.Network.rfc4", "model.Network.rfc5", "model.Network.catconv1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.Network.catconv2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.Network.catconv3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.Network.catconv4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.Network.catdeconv", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.Network.out_conv", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate"], "methods", ["None"], ["self", ".", "linearb", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "lineard", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ",", "phase", "=", "'test'", ")", ":", "\n", "        ", "shape", "=", "x", ".", "size", "(", ")", "[", "2", ":", "]", "\n", "out1", ",", "out2", ",", "out3", ",", "out4", ",", "out5", "=", "self", ".", "encoder", "(", "x", ")", "\n", "out2b", ",", "out3b", ",", "out4b", ",", "out5b", "=", "self", ".", "conv2b", "(", "out2", ")", ",", "self", ".", "conv3b", "(", "out3", ")", ",", "self", ".", "conv4b", "(", "out4", ")", ",", "self", ".", "conv5b", "(", "out5", ")", "\n", "out2d", ",", "out3d", ",", "out4d", ",", "out5d", "=", "self", ".", "conv2d", "(", "out2", ")", ",", "self", ".", "conv3d", "(", "out3", ")", ",", "self", ".", "conv4d", "(", "out4", ")", ",", "self", ".", "conv5d", "(", "out5", ")", "\n", "\n", "outb1", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ")", "\n", "outd1", "=", "self", ".", "decoderd", "(", "[", "out5d", ",", "out4d", ",", "out3d", ",", "out2d", "]", ")", "\n", "out1", "=", "torch", ".", "cat", "(", "[", "outb1", ",", "outd1", "]", ",", "dim", "=", "1", ")", "\n", "outb2", ",", "outd2", "=", "self", ".", "encoder1", "(", "out1", ")", "\n", "outb2", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ",", "outb2", ")", "\n", "outd2", "=", "self", ".", "decoderd", "(", "[", "out5d", ",", "out4d", ",", "out3d", ",", "out2d", "]", ",", "outd2", ")", "\n", "out2", "=", "torch", ".", "cat", "(", "[", "outb2", ",", "outd2", "]", ",", "dim", "=", "1", ")", "\n", "\n", "out1", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outb1", "=", "F", ".", "interpolate", "(", "self", ".", "linearb", "(", "outb1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outd1", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "\n", "out2", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outb2", "=", "F", ".", "interpolate", "(", "self", ".", "linearb", "(", "outb2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outd2", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "#return outb1, outd1, out1, outb2, outd2, out2", "\n", "\n", "OutDict", "=", "{", "}", "\n", "OutDict", "[", "'final'", "]", "=", "out2", "\n", "OutDict", "[", "'body'", "]", "=", "[", "outb1", ",", "outb2", "]", "\n", "OutDict", "[", "'detail'", "]", "=", "[", "outd1", ",", "outd2", "]", "\n", "OutDict", "[", "'sal'", "]", "=", "[", "out1", ",", "out2", "]", "\n", "return", "OutDict", "\n", "\n", "\n", "\n", "", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.amulet.model.Network.get_pred": [[152, 156], ["pred.exp.exp.exp", "pred.exp.exp.unsqueeze"], "methods", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.f3net.config.get_config": [[7, 18], ["base.config.base_config", "base.config.base_config.parse_args", "vars", "base.config.cfg_convert", "print"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.config.base_config", "home.repos.pwc.inspect_result.moothes_salod.base.config.cfg_convert"], ["def", "get_config", "(", ")", ":", "\n", "    ", "strategy", "=", "'base_sgd'", "\n", "parser", "=", "base_config", "(", "strategy", ")", "\n", "# Add custom params here", "\n", "# parser.add_argument('--size', default=320, type=int, help='Input size')", "\n", "\n", "params", "=", "parser", ".", "parse_args", "(", ")", "\n", "config", "=", "vars", "(", "params", ")", "\n", "cfg_convert", "(", "config", ")", "\n", "print", "(", "'Training {} network with {} backbone using Gpu: {}'", ".", "format", "(", "config", "[", "'model_name'", "]", ",", "config", "[", "'backbone'", "]", ",", "config", "[", "'gpus'", "]", ")", ")", "\n", "\n", "# Config post-process", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.f3net.loss.Loss": [[7, 22], ["zip", "torch.nn.functional.binary_cross_entropy_with_logits", "torch.sigmoid", "weit.sum", "torch.abs", "torch.nn.functional.avg_pool2d"], "function", ["None"], ["\n", "def", "IOU", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "    ", "pred", "=", "torch", ".", "sigmoid", "(", "preds", ")", "\n", "\n", "inter", "=", "torch", ".", "sum", "(", "target", "*", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "\n", "union", "=", "torch", ".", "sum", "(", "target", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "+", "torch", ".", "sum", "(", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "-", "inter", "\n", "iou_loss", "=", "1", "-", "(", "inter", "/", "union", ")", ".", "mean", "(", ")", "\n", "return", "iou_loss", "\n", "\n", "", "def", "Loss", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "# preds: Dict type. Customarily, preds['final'] is the final prediction without sigmoid.", "\n", "    ", "bce", "=", "nn", ".", "BCEWithLogitsLoss", "(", "reduction", "=", "'none'", ")", "\n", "\n", "loss", "=", "0", "\n", "for", "pred", "in", "preds", "[", "'sal'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "target", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.f3net.model.CFM.__init__": [[33, 52], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["        ", "weight_init", "(", "self", ")", "\n", "\n", "\n", "", "", "class", "Encoder", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "conv1b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.f3net.model.CFM.forward": [[53, 66], ["torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.interpolate", "model.CFM.bn1h", "model.CFM.bn2h", "model.CFM.bn1v", "model.CFM.bn2v", "torch.nn.functional.relu", "model.CFM.bn4h", "torch.nn.functional.relu", "model.CFM.bn4v", "torch.nn.functional.interpolate.size", "left.size", "model.CFM.conv1h", "model.CFM.conv2h", "model.CFM.conv1v", "model.CFM.conv2v", "model.CFM.bn3h", "model.CFM.conv4h", "model.CFM.bn3v", "model.CFM.conv4v", "model.CFM.conv3h", "model.CFM.conv3v", "left.size"], "methods", ["None"], ["self", ".", "bn3b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "conv1d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "out1", ")", ":", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.f3net.model.CFM.initialize": [[67, 69], ["model.weight_init"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.gcpa.model.weight_init"], ["        ", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2", "=", "F", ".", "max_pool2d", "(", "out1", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.f3net.model.Decoder.__init__": [[72, 77], ["torch.nn.Module.__init__", "model.CFM", "model.CFM", "model.CFM"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["out4", "=", "F", ".", "max_pool2d", "(", "out3", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out4", "=", "F", ".", "relu", "(", "self", ".", "bn4", "(", "self", ".", "conv4", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "out1b", "=", "F", ".", "relu", "(", "self", ".", "bn1b", "(", "self", ".", "conv1b", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2b", "=", "F", ".", "relu", "(", "self", ".", "bn2b", "(", "self", ".", "conv2b", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3b", "=", "F", ".", "relu", "(", "self", ".", "bn3b", "(", "self", ".", "conv3b", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.f3net.model.Decoder.forward": [[78, 93], ["torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "model.Decoder.cfm45", "model.Decoder.cfm34", "model.Decoder.cfm23", "model.Decoder.cfm45", "model.Decoder.cfm34", "model.Decoder.cfm23", "out5v.size", "out4h.size", "out3h.size", "out2h.size"], "methods", ["None"], ["out4b", "=", "F", ".", "relu", "(", "self", ".", "bn4b", "(", "self", ".", "conv4b", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "out1d", "=", "F", ".", "relu", "(", "self", ".", "bn1d", "(", "self", ".", "conv1d", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2d", "=", "F", ".", "relu", "(", "self", ".", "bn2d", "(", "self", ".", "conv2d", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3d", "=", "F", ".", "relu", "(", "self", ".", "bn3d", "(", "self", ".", "conv3d", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4d", "=", "F", ".", "relu", "(", "self", ".", "bn4d", "(", "self", ".", "conv4d", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "return", "(", "out4b", ",", "out3b", ",", "out2b", ",", "out1b", ")", ",", "(", "out4d", ",", "out3d", ",", "out2d", ",", "out1d", ")", "\n", "\n", "", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n", "\n", "", "", "class", "Network", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "config", ",", "encoder", ",", "feat", ")", ":", "\n", "# encoder: backbone, forward function output 5 encoder features. details in methods/base/model.py", "\n", "# feat: length of encoder features. e.g.: VGG:[64, 128, 256, 512, 512]; Resnet:[64, 256, 512, 1024, 2048]", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.f3net.model.Decoder.initialize": [[94, 96], ["model.weight_init"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.gcpa.model.weight_init"], ["        ", "super", "(", "Network", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder", "=", "encoder", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.f3net.model.decoder.__init__": [[98, 115], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "model.Decoder", "model.Decoder", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["self", ".", "conv4b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv2b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv5d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "encoder1", "=", "Encoder", "(", ")", "\n", "self", ".", "decoderb", "=", "Decoder", "(", ")", "\n", "self", ".", "decoderd", "=", "Decoder", "(", ")", "\n", "self", ".", "linearb", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "lineard", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ",", "phase", "=", "'test'", ")", ":", "\n", "        ", "shape", "=", "x", ".", "size", "(", ")", "[", "2", ":", "]", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.f3net.model.decoder.forward": [[116, 135], ["model.decoder.decoder1", "model.decoder.decoder2", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "model.decoder.squeeze2", "model.decoder.squeeze3", "model.decoder.squeeze4", "model.decoder.squeeze5", "model.decoder.linearp1", "model.decoder.linearp2", "model.decoder.linearr2", "model.decoder.linearr3", "model.decoder.linearr4", "model.decoder.linearr5"], "methods", ["None"], ["out1", ",", "out2", ",", "out3", ",", "out4", ",", "out5", "=", "self", ".", "encoder", "(", "x", ")", "\n", "out2b", ",", "out3b", ",", "out4b", ",", "out5b", "=", "self", ".", "conv2b", "(", "out2", ")", ",", "self", ".", "conv3b", "(", "out3", ")", ",", "self", ".", "conv4b", "(", "out4", ")", ",", "self", ".", "conv5b", "(", "out5", ")", "\n", "out2d", ",", "out3d", ",", "out4d", ",", "out5d", "=", "self", ".", "conv2d", "(", "out2", ")", ",", "self", ".", "conv3d", "(", "out3", ")", ",", "self", ".", "conv4d", "(", "out4", ")", ",", "self", ".", "conv5d", "(", "out5", ")", "\n", "\n", "outb1", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ")", "\n", "outd1", "=", "self", ".", "decoderd", "(", "[", "out5d", ",", "out4d", ",", "out3d", ",", "out2d", "]", ")", "\n", "out1", "=", "torch", ".", "cat", "(", "[", "outb1", ",", "outd1", "]", ",", "dim", "=", "1", ")", "\n", "outb2", ",", "outd2", "=", "self", ".", "encoder1", "(", "out1", ")", "\n", "outb2", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ",", "outb2", ")", "\n", "outd2", "=", "self", ".", "decoderd", "(", "[", "out5d", ",", "out4d", ",", "out3d", ",", "out2d", "]", ",", "outd2", ")", "\n", "out2", "=", "torch", ".", "cat", "(", "[", "outb2", ",", "outd2", "]", ",", "dim", "=", "1", ")", "\n", "\n", "out1", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outb1", "=", "F", ".", "interpolate", "(", "self", ".", "linearb", "(", "outb1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outd1", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "\n", "out2", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outb2", "=", "F", ".", "interpolate", "(", "self", ".", "linearb", "(", "outb2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outd2", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "#return outb1, outd1, out1, outb2, outd2, out2", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.f3net.model.Network.__init__": [[138, 161], ["torch.nn.Module.__init__", "model.decoder"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["OutDict", "[", "'final'", "]", "=", "out2", "\n", "OutDict", "[", "'body'", "]", "=", "[", "outb1", ",", "outb2", "]", "\n", "OutDict", "[", "'detail'", "]", "=", "[", "outd1", ",", "outd2", "]", "\n", "OutDict", "[", "'sal'", "]", "=", "[", "out1", ",", "out2", "]", "\n", "return", "OutDict", "\n", "\n", "\n", "\n", "", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.f3net.model.Network.forward": [[162, 188], ["model.Network.encoder", "model.Network.decoder", "x.size"], "methods", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.f3net.model.Network.initialize": [[189, 191], ["model.weight_init"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.gcpa.model.weight_init"], []], "home.repos.pwc.inspect_result.moothes_salod.f3net.model.weight_init": [[10, 31], ["module.named_children", "print", "isinstance", "torch.nn.init.kaiming_normal_", "isinstance", "torch.nn.init.zeros_", "torch.nn.init.ones_", "isinstance", "torch.nn.init.zeros_", "torch.nn.init.kaiming_normal_", "isinstance", "torch.nn.init.zeros_", "model.weight_init", "isinstance", "m.initialize"], "function", ["home.repos.pwc.inspect_result.moothes_salod.gcpa.model.weight_init", "home.repos.pwc.inspect_result.moothes_salod.itsd.model.ctr_block.initialize"], ["class", "Decoder", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv0", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn0", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "input1", ",", "input2", "=", "[", "0", ",", "0", ",", "0", ",", "0", "]", ")", ":", "\n", "        ", "out0", "=", "F", ".", "relu", "(", "self", ".", "bn0", "(", "self", ".", "conv0", "(", "input1", "[", "0", "]", "+", "input2", "[", "0", "]", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out0", "=", "F", ".", "interpolate", "(", "out0", ",", "size", "=", "input1", "[", "1", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "input1", "[", "1", "]", "+", "input2", "[", "1", "]", "+", "out0", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out1", "=", "F", ".", "interpolate", "(", "out1", ",", "size", "=", "input1", "[", "2", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "input1", "[", "2", "]", "+", "input2", "[", "2", "]", "+", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2", "=", "F", ".", "interpolate", "(", "out2", ",", "size", "=", "input1", "[", "3", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "input1", "[", "3", "]", "+", "input2", "[", "3", "]", "+", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "return", "out3", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.gatenet.config.get_config": [[7, 23], ["base.config.base_config", "base.config.base_config.parse_args", "vars", "base.config.cfg_convert", "print"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.config.base_config", "home.repos.pwc.inspect_result.moothes_salod.base.config.cfg_convert"], ["def", "get_config", "(", ")", ":", "\n", "    ", "strategy", "=", "'base_sgd'", "\n", "parser", "=", "base_config", "(", "strategy", ")", "\n", "# Add custom params here", "\n", "# parser.add_argument('--size', default=320, type=int, help='Input size')", "\n", "\n", "params", "=", "parser", ".", "parse_args", "(", ")", "\n", "config", "=", "vars", "(", "params", ")", "\n", "cfg_convert", "(", "config", ")", "\n", "print", "(", "'Training {} network with {} backbone using Gpu: {}'", ".", "format", "(", "config", "[", "'model_name'", "]", ",", "config", "[", "'backbone'", "]", ",", "config", "[", "'gpus'", "]", ")", ")", "\n", "\n", "# Config post-process", "\n", "\n", "return", "config", "", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.gatenet.loss.Loss": [[8, 16], ["torch.nn.BCEWithLogitsLoss", "nn.BCEWithLogitsLoss.mean", "nn.BCEWithLogitsLoss.", "target.gt().float", "target.gt"], "function", ["None"], ["def", "IOU", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "    ", "pred", "=", "torch", ".", "sigmoid", "(", "preds", ")", "\n", "\n", "inter", "=", "torch", ".", "sum", "(", "target", "*", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "\n", "union", "=", "torch", ".", "sum", "(", "target", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "+", "torch", ".", "sum", "(", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "-", "inter", "\n", "iou_loss", "=", "1", "-", "(", "inter", "/", "union", ")", ".", "mean", "(", ")", "\n", "return", "iou_loss", "\n", "\n", "", "def", "Loss", "(", "preds", ",", "target", ",", "config", ")", ":", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.gatenet.model.FoldConv_aspp.__init__": [[12, 48], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Unfold", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["        ", "super", "(", "Decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv0", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn0", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "input1", ",", "input2", "=", "[", "0", ",", "0", ",", "0", ",", "0", "]", ")", ":", "\n", "        ", "out0", "=", "F", ".", "relu", "(", "self", ".", "bn0", "(", "self", ".", "conv0", "(", "input1", "[", "0", "]", "+", "input2", "[", "0", "]", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out0", "=", "F", ".", "interpolate", "(", "out0", ",", "size", "=", "input1", "[", "1", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "input1", "[", "1", "]", "+", "input2", "[", "1", "]", "+", "out0", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out1", "=", "F", ".", "interpolate", "(", "out1", ",", "size", "=", "input1", "[", "2", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "input1", "[", "2", "]", "+", "input2", "[", "2", "]", "+", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2", "=", "F", ".", "interpolate", "(", "out2", ",", "size", "=", "input1", "[", "3", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "input1", "[", "3", "]", "+", "input2", "[", "3", "]", "+", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "return", "out3", "\n", "\n", "", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n", "\n", "", "", "class", "Encoder", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "conv1b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.gatenet.model.FoldConv_aspp.forward": [[49, 67], ["model.FoldConv_aspp.size", "model.FoldConv_aspp.down_conv", "model.FoldConv_aspp.unfold", "model.FoldConv_aspp.view", "model.FoldConv_aspp.conv1", "model.FoldConv_aspp.conv2", "model.FoldConv_aspp.conv3", "model.FoldConv_aspp.conv4", "torch.nn.functional.upsample", "model.FoldConv_aspp.fuse", "model.FoldConv_aspp.reshape", "torch.nn.functional.fold", "model.FoldConv_aspp.up_conv", "model.FoldConv_aspp.size", "model.FoldConv_aspp.size", "model.FoldConv_aspp.conv5", "torch.cat", "model.FoldConv_aspp.size", "model.FoldConv_aspp.size", "torch.nn.functional.adaptive_avg_pool2d", "model.FoldConv_aspp.size"], "methods", ["None"], ["self", ".", "bn1b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "conv1d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "out1", ")", ":", "\n", "        ", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.gatenet.model.decoder.__init__": [[94, 142], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "model.decoder.modules", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "model.FoldConv_aspp", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "isinstance", "isinstance"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["        ", "super", "(", "Network", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "conv5b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv2b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv5d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "encoder1", "=", "Encoder", "(", ")", "\n", "self", ".", "decoderb", "=", "Decoder", "(", ")", "\n", "self", ".", "decoderd", "=", "Decoder", "(", ")", "\n", "self", ".", "linearb", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "lineard", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ",", "phase", "=", "'test'", ")", ":", "\n", "        ", "shape", "=", "x", ".", "size", "(", ")", "[", "2", ":", "]", "\n", "out1", ",", "out2", ",", "out3", ",", "out4", ",", "out5", "=", "self", ".", "encoder", "(", "x", ")", "\n", "out2b", ",", "out3b", ",", "out4b", ",", "out5b", "=", "self", ".", "conv2b", "(", "out2", ")", ",", "self", ".", "conv3b", "(", "out3", ")", ",", "self", ".", "conv4b", "(", "out4", ")", ",", "self", ".", "conv5b", "(", "out5", ")", "\n", "out2d", ",", "out3d", ",", "out4d", ",", "out5d", "=", "self", ".", "conv2d", "(", "out2", ")", ",", "self", ".", "conv3d", "(", "out3", ")", ",", "self", ".", "conv4d", "(", "out4", ")", ",", "self", ".", "conv5d", "(", "out5", ")", "\n", "\n", "outb1", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ")", "\n", "outd1", "=", "self", ".", "decoderd", "(", "[", "out5d", ",", "out4d", ",", "out3d", ",", "out2d", "]", ")", "\n", "out1", "=", "torch", ".", "cat", "(", "[", "outb1", ",", "outd1", "]", ",", "dim", "=", "1", ")", "\n", "outb2", ",", "outd2", "=", "self", ".", "encoder1", "(", "out1", ")", "\n", "outb2", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ",", "outb2", ")", "\n", "outd2", "=", "self", ".", "decoderd", "(", "[", "out5d", ",", "out4d", ",", "out3d", ",", "out2d", "]", ",", "outd2", ")", "\n", "out2", "=", "torch", ".", "cat", "(", "[", "outb2", ",", "outd2", "]", ",", "dim", "=", "1", ")", "\n", "\n", "out1", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outb1", "=", "F", ".", "interpolate", "(", "self", ".", "linearb", "(", "outb1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outd1", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "\n", "out2", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outb2", "=", "F", ".", "interpolate", "(", "self", ".", "linearb", "(", "outb2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outd2", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "#return outb1, outd1, out1, outb2, outd2, out2", "\n", "\n", "OutDict", "=", "{", "}", "\n", "OutDict", "[", "'final'", "]", "=", "out2", "\n", "OutDict", "[", "'body'", "]", "=", "[", "outb1", ",", "outb2", "]", "\n", "OutDict", "[", "'detail'", "]", "=", "[", "outd1", ",", "outd2", "]", "\n", "OutDict", "[", "'sal'", "]", "=", "[", "out1", ",", "out2", "]", "\n", "return", "OutDict", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.gatenet.model.decoder.forward": [[144, 190], ["model.decoder.dem1", "model.decoder.dem2", "model.decoder.dem3", "model.decoder.dem4", "model.decoder.dem5", "model.decoder.attention_feature1", "torch.nn.functional.adaptive_avg_pool2d", "model.decoder.output1", "model.decoder.attention_feature2", "torch.nn.functional.adaptive_avg_pool2d", "model.decoder.output2", "model.decoder.attention_feature3", "torch.nn.functional.adaptive_avg_pool2d", "model.decoder.output3", "model.decoder.attention_feature4", "torch.nn.functional.adaptive_avg_pool2d", "model.decoder.output4", "model.decoder.attention_feature5", "torch.nn.functional.adaptive_avg_pool2d", "model.decoder.output5", "model.decoder.out_res", "torch.nn.functional.upsample", "torch.nn.functional.upsample", "torch.cat", "torch.nn.functional.sigmoid", "torch.cat", "torch.nn.functional.sigmoid", "torch.cat", "torch.nn.functional.sigmoid", "torch.cat", "torch.nn.functional.sigmoid", "torch.cat", "torch.nn.functional.sigmoid", "torch.cat", "G5[].unsqueeze().repeat", "torch.nn.functional.upsample", "torch.nn.functional.upsample", "torch.nn.functional.upsample", "torch.nn.functional.upsample", "torch.nn.functional.upsample", "G4[].unsqueeze().repeat", "torch.nn.functional.upsample", "G3[].unsqueeze().repeat", "torch.nn.functional.upsample", "G2[].unsqueeze().repeat", "torch.nn.functional.upsample", "G1[].unsqueeze().repeat", "torch.nn.functional.upsample", "torch.nn.functional.upsample", "torch.nn.functional.upsample", "torch.nn.functional.upsample", "torch.nn.functional.upsample", "input.size", "input.size", "G5[].unsqueeze", "E4.size", "G4[].unsqueeze", "E3.size", "G3[].unsqueeze", "E2.size", "G2[].unsqueeze", "E1.size", "G1[].unsqueeze", "G5[].unsqueeze().repeat", "G4[].unsqueeze().repeat", "G3[].unsqueeze().repeat", "G2[].unsqueeze().repeat", "G1[].unsqueeze().repeat", "E4.size", "E3.size", "E2.size", "E1.size", "E1.size", "E1.size", "E1.size", "E1.size", "E1.size", "G5[].unsqueeze", "G4[].unsqueeze", "G3[].unsqueeze", "G2[].unsqueeze", "G1[].unsqueeze"], "methods", ["None"], ["\n", "\n", "", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.gatenet.model.Network.__init__": [[193, 243], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "model.Network.modules", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "model.FoldConv_aspp", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.Conv2d", "isinstance", "isinstance"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], []], "home.repos.pwc.inspect_result.moothes_salod.gatenet.model.Network.forward": [[245, 291], ["input.size", "model.Network.encoder", "model.Network.dem1", "model.Network.dem2", "model.Network.dem3", "model.Network.dem4", "model.Network.dem5", "model.Network.attention_feature1", "torch.nn.functional.adaptive_avg_pool2d", "model.Network.output1", "model.Network.attention_feature2", "torch.nn.functional.adaptive_avg_pool2d", "model.Network.output2", "model.Network.attention_feature3", "torch.nn.functional.adaptive_avg_pool2d", "model.Network.output3", "model.Network.attention_feature4", "torch.nn.functional.adaptive_avg_pool2d", "model.Network.output4", "model.Network.attention_feature5", "torch.nn.functional.adaptive_avg_pool2d", "model.Network.output5", "torch.nn.functional.upsample", "model.Network.out_res", "torch.nn.functional.upsample", "torch.cat", "torch.nn.functional.sigmoid", "torch.cat", "torch.nn.functional.sigmoid", "torch.cat", "torch.nn.functional.sigmoid", "torch.cat", "torch.nn.functional.sigmoid", "torch.cat", "torch.nn.functional.sigmoid", "torch.cat", "G5[].unsqueeze().repeat", "torch.nn.functional.upsample", "torch.nn.functional.upsample", "torch.nn.functional.upsample", "torch.nn.functional.upsample", "torch.nn.functional.upsample", "G4[].unsqueeze().repeat", "torch.nn.functional.upsample", "G3[].unsqueeze().repeat", "torch.nn.functional.upsample", "G2[].unsqueeze().repeat", "torch.nn.functional.upsample", "G1[].unsqueeze().repeat", "input.size", "torch.nn.functional.upsample", "torch.nn.functional.upsample", "torch.nn.functional.upsample", "torch.nn.functional.upsample", "torch.nn.functional.upsample", "input.size", "G5[].unsqueeze", "E4.size", "G4[].unsqueeze", "E3.size", "G3[].unsqueeze", "E2.size", "G2[].unsqueeze", "E1.size", "G1[].unsqueeze", "G5[].unsqueeze().repeat", "G4[].unsqueeze().repeat", "G3[].unsqueeze().repeat", "G2[].unsqueeze().repeat", "G1[].unsqueeze().repeat", "E4.size", "E3.size", "E2.size", "E1.size", "E1.size", "E1.size", "E1.size", "E1.size", "E1.size", "G5[].unsqueeze", "G4[].unsqueeze", "G3[].unsqueeze", "G2[].unsqueeze", "G1[].unsqueeze"], "methods", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.page.config.get_config": [[7, 17], ["base.config.base_config", "base.config.base_config.parse_args", "vars", "base.config.cfg_convert", "print"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.config.base_config", "home.repos.pwc.inspect_result.moothes_salod.base.config.cfg_convert"], ["def", "get_config", "(", ")", ":", "\n", "    ", "strategy", "=", "'base_sgd'", "\n", "parser", "=", "base_config", "(", "strategy", ")", "\n", "# Add custom params here", "\n", "# parser.add_argument('--size', default=320, type=int, help='Input size')", "\n", "\n", "params", "=", "parser", ".", "parse_args", "(", ")", "\n", "config", "=", "vars", "(", "params", ")", "\n", "cfg_convert", "(", "config", ")", "\n", "print", "(", "'Training {} network with {} backbone using Gpu: {}'", ".", "format", "(", "config", "[", "'model_name'", "]", ",", "config", "[", "'backbone'", "]", ",", "config", "[", "'gpus'", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.page.model_orig.Atten.__init__": [[16, 24], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "scale", "=", "1", ")", ":", "\n", "        ", "super", "(", "Atten", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "scale", "=", "scale", "\n", "if", "scale", "==", "1", ":", "\n", "            ", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "channel", ",", "1", ",", "1", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "channel", ",", "1", ",", "1", ",", "dilation", "=", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.page.model_orig.Atten.forward": [[25, 35], ["torch.nn.functional.max_pool2d.size", "model_orig.Atten.conv().sigmoid_", "torch.nn.functional.softmax", "torch.nn.functional.max_pool2d.view", "torch.nn.functional.max_pool2d", "torch.nn.functional.interpolate().view", "model_orig.Atten.conv", "torch.nn.functional.interpolate"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_size", "=", "x", ".", "size", "(", ")", "\n", "\n", "x", "=", "self", ".", "conv", "(", "x", ")", ".", "sigmoid_", "(", ")", "\n", "if", "self", ".", "scale", ">", "1", ":", "\n", "            ", "x", "=", "F", ".", "max_pool2d", "(", "x", ",", "kernel_size", "=", "(", "self", ".", "scale", ",", "self", ".", "scale", ")", ",", "stride", "=", "(", "self", ".", "scale", ",", "self", ".", "scale", ")", ")", "\n", "", "x", "=", "F", ".", "softmax", "(", "F", ".", "interpolate", "(", "x", ",", "size", "=", "x_size", "[", "-", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", ".", "view", "(", "x_size", "[", "0", "]", ",", "-", "1", ")", ",", "dim", "=", "1", ")", "\n", "\n", "#x_size[1] = 1", "\n", "return", "x", ".", "view", "(", "x_size", "[", "0", "]", ",", "1", ",", "x_size", "[", "2", "]", ",", "x_size", "[", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.page.model_orig.decoder.__init__": [[37, 100], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "model_orig.Atten", "model_orig.Atten", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "model_orig.Atten", "model_orig.Atten", "model_orig.Atten", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "model_orig.Atten", "model_orig.Atten", "model_orig.Atten", "model_orig.Atten", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "model_orig.Atten", "model_orig.Atten", "model_orig.Atten", "model_orig.Atten", "model_orig.Atten", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "model_orig.Atten", "model_orig.Atten", "model_orig.Atten", "model_orig.Atten", "model_orig.Atten", "model_orig.Atten", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Sequential().cuda", "torch.nn.Sequential().cuda", "range", "range", "torch.nn.Sequential", "torch.nn.Sequential", "list", "list", "model_orig.gen_conv", "model_orig.gen_conv"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.page.model.gen_conv", "home.repos.pwc.inspect_result.moothes_salod.page.model.gen_conv"], ["    ", "def", "__init__", "(", "self", ",", "feat", ")", ":", "\n", "        ", "super", "(", "decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "new_feat", "=", "[", "64", ",", "128", ",", "256", ",", "256", ",", "512", ",", "512", "]", "\n", "\n", "self", ".", "sal_out", "=", "[", "nn", ".", "Sequential", "(", "*", "list", "(", "gen_conv", "(", "feat", "[", "i", "]", ",", "new_feat", "[", "i", "]", ")", ")", ")", ".", "cuda", "(", ")", "for", "i", "in", "range", "(", "6", ")", "]", "\n", "self", ".", "edge_out", "=", "[", "nn", ".", "Sequential", "(", "*", "list", "(", "gen_conv", "(", "feat", "[", "i", "]", ",", "new_feat", "[", "i", "]", ")", ")", ")", ".", "cuda", "(", ")", "for", "i", "in", "range", "(", "5", ")", "]", "\n", "\n", "self", ".", "sal6_conv", "=", "nn", ".", "Conv2d", "(", "new_feat", "[", "5", "]", ",", "1", ",", "1", ")", "\n", "\n", "self", ".", "edge5_conv", "=", "nn", ".", "Conv2d", "(", "new_feat", "[", "4", "]", ",", "1", ",", "1", ")", "\n", "self", ".", "sal5_conv", "=", "nn", ".", "Conv2d", "(", "new_feat", "[", "4", "]", "+", "1", ",", "256", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "atten5a", "=", "Atten", "(", "256", ",", "1", ")", "#nn.Conv2d(256, 1, 1)", "\n", "self", ".", "atten5b", "=", "Atten", "(", "256", ",", "2", ")", "#nn.Conv2d(256, 1, 1, dilation=3)", "\n", "#self.atten5b_mp = nn.MaxUnpool2d(2, 2)", "\n", "self", ".", "sal5_out", "=", "nn", ".", "Conv2d", "(", "257", ",", "256", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "sal5_up", "=", "nn", ".", "Conv2d", "(", "256", ",", "1", ",", "1", ")", "\n", "\n", "self", ".", "edge4_conv_1", "=", "nn", ".", "Conv2d", "(", "new_feat", "[", "3", "]", "+", "1", ",", "128", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "edge4_conv", "=", "nn", ".", "Conv2d", "(", "128", ",", "1", ",", "1", ")", "\n", "\n", "self", ".", "sal4_conv_1", "=", "nn", ".", "Conv2d", "(", "new_feat", "[", "3", "]", "+", "2", ",", "128", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "atten4a", "=", "Atten", "(", "128", ",", "1", ")", "\n", "self", ".", "atten4b", "=", "Atten", "(", "128", ",", "2", ")", "\n", "self", ".", "atten4c", "=", "Atten", "(", "128", ",", "4", ")", "\n", "self", ".", "sal4_out", "=", "nn", ".", "Conv2d", "(", "129", ",", "128", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "sal4_up", "=", "nn", ".", "Conv2d", "(", "128", ",", "1", ",", "1", ")", "\n", "\n", "self", ".", "edge3_conv_1", "=", "nn", ".", "Conv2d", "(", "new_feat", "[", "2", "]", "+", "2", ",", "128", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "edge3_conv", "=", "nn", ".", "Conv2d", "(", "128", ",", "1", ",", "1", ")", "\n", "\n", "self", ".", "sal3_conv_1", "=", "nn", ".", "Conv2d", "(", "new_feat", "[", "2", "]", "+", "3", ",", "128", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "atten3a", "=", "Atten", "(", "128", ",", "1", ")", "\n", "self", ".", "atten3b", "=", "Atten", "(", "128", ",", "2", ")", "\n", "self", ".", "atten3c", "=", "Atten", "(", "128", ",", "4", ")", "\n", "self", ".", "atten3d", "=", "Atten", "(", "128", ",", "8", ")", "\n", "self", ".", "sal3_out", "=", "nn", ".", "Conv2d", "(", "129", ",", "128", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "sal3_up", "=", "nn", ".", "Conv2d", "(", "128", ",", "1", ",", "1", ")", "\n", "\n", "self", ".", "edge2_conv_1", "=", "nn", ".", "Conv2d", "(", "new_feat", "[", "1", "]", "+", "3", ",", "64", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "edge2_conv", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "1", ")", "\n", "\n", "self", ".", "sal2_conv_1", "=", "nn", ".", "Conv2d", "(", "new_feat", "[", "1", "]", "+", "4", ",", "64", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "atten2a", "=", "Atten", "(", "64", ",", "1", ")", "\n", "self", ".", "atten2b", "=", "Atten", "(", "64", ",", "2", ")", "\n", "self", ".", "atten2c", "=", "Atten", "(", "64", ",", "4", ")", "\n", "self", ".", "atten2d", "=", "Atten", "(", "64", ",", "8", ")", "\n", "self", ".", "atten2e", "=", "Atten", "(", "64", ",", "16", ")", "\n", "self", ".", "sal2_out", "=", "nn", ".", "Conv2d", "(", "65", ",", "64", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "sal2_up", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "1", ")", "\n", "\n", "self", ".", "edge1_conv_1", "=", "nn", ".", "Conv2d", "(", "new_feat", "[", "0", "]", "+", "4", ",", "32", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "edge1_conv", "=", "nn", ".", "Conv2d", "(", "32", ",", "1", ",", "1", ")", "\n", "\n", "self", ".", "sal1_conv_1", "=", "nn", ".", "Conv2d", "(", "new_feat", "[", "0", "]", "+", "5", ",", "32", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "atten1a", "=", "Atten", "(", "32", ",", "1", ")", "\n", "self", ".", "atten1b", "=", "Atten", "(", "32", ",", "2", ")", "\n", "self", ".", "atten1c", "=", "Atten", "(", "32", ",", "4", ")", "\n", "self", ".", "atten1d", "=", "Atten", "(", "32", ",", "8", ")", "\n", "self", ".", "atten1e", "=", "Atten", "(", "32", ",", "16", ")", "\n", "self", ".", "atten1f", "=", "Atten", "(", "32", ",", "32", ")", "\n", "self", ".", "sal1_out", "=", "nn", ".", "Conv2d", "(", "33", ",", "32", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "sal1_up", "=", "nn", ".", "Conv2d", "(", "32", ",", "1", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.page.model_orig.decoder.forward": [[101, 237], ["model_orig.decoder.sal6_conv", "model_orig.decoder.edge5_conv", "torch.nn.functional.interpolate().sigmoid_", "model_orig.decoder.sal5_conv", "model_orig.decoder.atten5a", "model_orig.decoder.atten5b", "torch.cat", "model_orig.decoder.sal5_out().sigmoid_", "model_orig.decoder.sal5_up", "torch.nn.functional.interpolate().sigmoid_", "model_orig.decoder.edge4_conv_1().sigmoid_", "model_orig.decoder.edge4_conv().sigmoid_", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.cat", "model_orig.decoder.sal4_conv_1().sigmoid_", "model_orig.decoder.atten4a", "model_orig.decoder.atten4b", "model_orig.decoder.atten4c", "torch.cat", "model_orig.decoder.sal4_out().sigmoid_", "model_orig.decoder.sal4_up", "torch.nn.functional.interpolate().sigmoid_", "torch.nn.functional.interpolate().sigmoid_", "model_orig.decoder.edge3_conv_1().sigmoid_", "model_orig.decoder.edge3_conv().sigmoid_", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.cat", "model_orig.decoder.sal3_conv_1().sigmoid_", "model_orig.decoder.atten3a", "model_orig.decoder.atten3b", "model_orig.decoder.atten3c", "model_orig.decoder.atten3d", "torch.cat", "model_orig.decoder.sal3_out().sigmoid_", "model_orig.decoder.sal3_up", "torch.nn.functional.interpolate().sigmoid_", "torch.nn.functional.interpolate().sigmoid_", "torch.nn.functional.interpolate().sigmoid_", "model_orig.decoder.edge2_conv_1().sigmoid_", "model_orig.decoder.edge2_conv().sigmoid_", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.cat", "model_orig.decoder.sal2_conv_1().sigmoid_", "model_orig.decoder.atten2a", "model_orig.decoder.atten2b", "model_orig.decoder.atten2c", "model_orig.decoder.atten2d", "model_orig.decoder.atten2e", "torch.cat", "model_orig.decoder.sal2_out().sigmoid_", "model_orig.decoder.sal2_up", "torch.nn.functional.interpolate().sigmoid_", "torch.nn.functional.interpolate().sigmoid_", "torch.nn.functional.interpolate().sigmoid_", "torch.nn.functional.interpolate().sigmoid_", "model_orig.decoder.edge1_conv_1().sigmoid_", "model_orig.decoder.edge1_conv().sigmoid_", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.cat", "model_orig.decoder.sal1_conv_1().sigmoid_", "model_orig.decoder.atten1a", "model_orig.decoder.atten1b", "model_orig.decoder.atten1c", "model_orig.decoder.atten1d", "model_orig.decoder.atten1e", "model_orig.decoder.atten1f", "torch.cat", "model_orig.decoder.sal1_out().sigmoid_", "model_orig.decoder.sal1_up", "sal_xs[].size", "torch.cat", "sal_xs[].size", "sal_xs[].size", "sal_xs[].size", "sal_xs[].size", "model_orig.up2_size", "model_orig.up2_size", "range", "range", "torch.nn.functional.interpolate", "model_orig.decoder.sal5_out", "torch.nn.functional.interpolate", "model_orig.decoder.edge4_conv_1", "model_orig.decoder.edge4_conv", "model_orig.decoder.sal4_conv_1", "model_orig.decoder.sal4_out", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "model_orig.decoder.edge3_conv_1", "model_orig.decoder.edge3_conv", "model_orig.decoder.sal3_conv_1", "model_orig.decoder.sal3_out", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "model_orig.decoder.edge2_conv_1", "model_orig.decoder.edge2_conv", "model_orig.decoder.sal2_conv_1", "model_orig.decoder.sal2_out", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "model_orig.decoder.edge1_conv_1", "model_orig.decoder.edge1_conv", "model_orig.decoder.sal1_conv_1", "model_orig.decoder.sal1_out", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.page.model.up2_size", "home.repos.pwc.inspect_result.moothes_salod.page.model.up2_size"], ["", "def", "forward", "(", "self", ",", "xs", ",", "x0_size", ",", "phase", "=", "'test'", ")", ":", "\n", "        ", "batch", "=", "x0_size", "[", "0", "]", "\n", "x_size", "=", "x0_size", "[", "-", "2", ":", "]", "\n", "\n", "sal_xs", "=", "[", "self", ".", "sal_out", "[", "i", "]", "(", "xs", "[", "i", "]", ")", "for", "i", "in", "range", "(", "6", ")", "]", "\n", "edge_xs", "=", "[", "self", ".", "edge_out", "[", "i", "]", "(", "xs", "[", "i", "]", ")", "for", "i", "in", "range", "(", "5", ")", "]", "\n", "\n", "# 6666666666666666666666666666666", "\n", "sal6", "=", "self", ".", "sal6_conv", "(", "sal_xs", "[", "5", "]", ")", "\n", "\n", "# 555555555555555555555555", "\n", "s5_size", "=", "sal_xs", "[", "4", "]", ".", "size", "(", ")", "[", "-", "2", ":", "]", "\n", "edge5", "=", "self", ".", "edge5_conv", "(", "edge_xs", "[", "4", "]", ")", "\n", "\n", "sal_t5", "=", "F", ".", "interpolate", "(", "sal6", ",", "size", "=", "s5_size", ",", "mode", "=", "'bilinear'", ")", ".", "sigmoid_", "(", ")", "\n", "sal5_out", "=", "self", ".", "sal5_conv", "(", "torch", ".", "cat", "(", "[", "sal_xs", "[", "4", "]", ",", "sal_t5", "]", ",", "dim", "=", "1", ")", ")", "\n", "\n", "atten5a", "=", "self", ".", "atten5a", "(", "sal5_out", ")", "\n", "atten5b", "=", "self", ".", "atten5b", "(", "sal5_out", ")", "\n", "atten5", "=", "(", "atten5a", "+", "atten5b", ")", "/", "2.", "\n", "sal5_out", "=", "sal5_out", "*", "(", "atten5", "+", "1", ")", "\n", "sal5_out", "=", "torch", ".", "cat", "(", "[", "sal5_out", ",", "edge5", "]", ",", "dim", "=", "1", ")", "\n", "sal5_out", "=", "self", ".", "sal5_out", "(", "sal5_out", ")", ".", "sigmoid_", "(", ")", "\n", "sal5", "=", "self", ".", "sal5_up", "(", "sal5_out", ")", "\n", "\n", "# 4444444444444444444444444444444444444", "\n", "s4_size", "=", "sal_xs", "[", "3", "]", ".", "size", "(", ")", "[", "-", "2", ":", "]", "\n", "edge_t4", "=", "F", ".", "interpolate", "(", "edge5", ",", "size", "=", "s4_size", ",", "mode", "=", "'bilinear'", ")", ".", "sigmoid_", "(", ")", "\n", "edge4", "=", "self", ".", "edge4_conv_1", "(", "torch", ".", "cat", "(", "[", "edge_xs", "[", "3", "]", ",", "edge_t4", "]", ",", "dim", "=", "1", ")", ")", ".", "sigmoid_", "(", ")", "\n", "edge4", "=", "self", ".", "edge4_conv", "(", "edge4", ")", ".", "sigmoid_", "(", ")", "\n", "\n", "sal_t41", "=", "F", ".", "interpolate", "(", "sal6", ",", "size", "=", "s4_size", ",", "mode", "=", "'bilinear'", ")", "\n", "sal_t42", "=", "F", ".", "interpolate", "(", "sal5", ",", "size", "=", "s4_size", ",", "mode", "=", "'bilinear'", ")", "\n", "sal4_out", "=", "torch", ".", "cat", "(", "[", "sal_xs", "[", "3", "]", ",", "sal_t41", ",", "sal_t42", "]", ",", "dim", "=", "1", ")", "\n", "sal4_out", "=", "self", ".", "sal4_conv_1", "(", "sal4_out", ")", ".", "sigmoid_", "(", ")", "\n", "\n", "atten4a", "=", "self", ".", "atten4a", "(", "sal4_out", ")", "\n", "atten4b", "=", "self", ".", "atten4b", "(", "sal4_out", ")", "\n", "atten4c", "=", "self", ".", "atten4c", "(", "sal4_out", ")", "\n", "atten4", "=", "(", "atten4a", "+", "atten4b", "+", "atten4c", ")", "/", "3.", "\n", "sal4_out", "=", "sal4_out", "*", "(", "atten4", "+", "1", ")", "\n", "sal4_out", "=", "torch", ".", "cat", "(", "[", "sal4_out", ",", "edge4", "]", ",", "dim", "=", "1", ")", "\n", "sal4_out", "=", "self", ".", "sal4_out", "(", "sal4_out", ")", ".", "sigmoid_", "(", ")", "\n", "sal4", "=", "self", ".", "sal4_up", "(", "sal4_out", ")", "\n", "\n", "# 3333333333333333333333333333333333333", "\n", "s3_size", "=", "sal_xs", "[", "2", "]", ".", "size", "(", ")", "[", "-", "2", ":", "]", "\n", "edge_t31", "=", "F", ".", "interpolate", "(", "edge5", ",", "size", "=", "s3_size", ",", "mode", "=", "'bilinear'", ")", ".", "sigmoid_", "(", ")", "\n", "edge_t32", "=", "F", ".", "interpolate", "(", "edge4", ",", "size", "=", "s3_size", ",", "mode", "=", "'bilinear'", ")", ".", "sigmoid_", "(", ")", "\n", "edge3", "=", "self", ".", "edge3_conv_1", "(", "torch", ".", "cat", "(", "[", "edge_xs", "[", "2", "]", ",", "edge_t31", ",", "edge_t32", "]", ",", "dim", "=", "1", ")", ")", ".", "sigmoid_", "(", ")", "\n", "edge3", "=", "self", ".", "edge3_conv", "(", "edge3", ")", ".", "sigmoid_", "(", ")", "\n", "\n", "sal_t31", "=", "F", ".", "interpolate", "(", "sal6", ",", "size", "=", "s3_size", ",", "mode", "=", "'bilinear'", ")", "\n", "sal_t32", "=", "F", ".", "interpolate", "(", "sal5", ",", "size", "=", "s3_size", ",", "mode", "=", "'bilinear'", ")", "\n", "sal_t33", "=", "F", ".", "interpolate", "(", "sal4", ",", "size", "=", "s3_size", ",", "mode", "=", "'bilinear'", ")", "\n", "sal3_out", "=", "torch", ".", "cat", "(", "[", "sal_xs", "[", "2", "]", ",", "sal_t31", ",", "sal_t32", ",", "sal_t33", "]", ",", "dim", "=", "1", ")", "\n", "sal3_out", "=", "self", ".", "sal3_conv_1", "(", "sal3_out", ")", ".", "sigmoid_", "(", ")", "\n", "\n", "atten3a", "=", "self", ".", "atten3a", "(", "sal3_out", ")", "\n", "atten3b", "=", "self", ".", "atten3b", "(", "sal3_out", ")", "\n", "atten3c", "=", "self", ".", "atten3c", "(", "sal3_out", ")", "\n", "atten3d", "=", "self", ".", "atten3d", "(", "sal3_out", ")", "\n", "atten3", "=", "(", "atten3a", "+", "atten3b", "+", "atten3c", "+", "atten3d", ")", "/", "4.", "\n", "sal3_out", "=", "sal3_out", "*", "(", "atten3", "+", "1", ")", "\n", "sal3_out", "=", "torch", ".", "cat", "(", "[", "sal3_out", ",", "edge3", "]", ",", "dim", "=", "1", ")", "\n", "sal3_out", "=", "self", ".", "sal3_out", "(", "sal3_out", ")", ".", "sigmoid_", "(", ")", "\n", "sal3", "=", "self", ".", "sal3_up", "(", "sal3_out", ")", "\n", "\n", "# 222222222222222222222222222222222", "\n", "s2_size", "=", "sal_xs", "[", "1", "]", ".", "size", "(", ")", "[", "-", "2", ":", "]", "\n", "edge_t21", "=", "F", ".", "interpolate", "(", "edge5", ",", "size", "=", "s2_size", ",", "mode", "=", "'bilinear'", ")", ".", "sigmoid_", "(", ")", "\n", "edge_t22", "=", "F", ".", "interpolate", "(", "edge4", ",", "size", "=", "s2_size", ",", "mode", "=", "'bilinear'", ")", ".", "sigmoid_", "(", ")", "\n", "edge_t23", "=", "F", ".", "interpolate", "(", "edge3", ",", "size", "=", "s2_size", ",", "mode", "=", "'bilinear'", ")", ".", "sigmoid_", "(", ")", "\n", "edge2", "=", "self", ".", "edge2_conv_1", "(", "torch", ".", "cat", "(", "[", "edge_xs", "[", "1", "]", ",", "edge_t21", ",", "edge_t22", ",", "edge_t23", "]", ",", "dim", "=", "1", ")", ")", ".", "sigmoid_", "(", ")", "\n", "edge2", "=", "self", ".", "edge2_conv", "(", "edge2", ")", ".", "sigmoid_", "(", ")", "\n", "\n", "sal_t21", "=", "F", ".", "interpolate", "(", "sal6", ",", "size", "=", "s2_size", ",", "mode", "=", "'bilinear'", ")", "\n", "sal_t22", "=", "F", ".", "interpolate", "(", "sal5", ",", "size", "=", "s2_size", ",", "mode", "=", "'bilinear'", ")", "\n", "sal_t23", "=", "F", ".", "interpolate", "(", "sal4", ",", "size", "=", "s2_size", ",", "mode", "=", "'bilinear'", ")", "\n", "sal_t24", "=", "F", ".", "interpolate", "(", "sal3", ",", "size", "=", "s2_size", ",", "mode", "=", "'bilinear'", ")", "\n", "sal2_out", "=", "torch", ".", "cat", "(", "[", "sal_xs", "[", "1", "]", ",", "sal_t21", ",", "sal_t22", ",", "sal_t23", ",", "sal_t24", "]", ",", "dim", "=", "1", ")", "\n", "sal2_out", "=", "self", ".", "sal2_conv_1", "(", "sal2_out", ")", ".", "sigmoid_", "(", ")", "\n", "\n", "atten2a", "=", "self", ".", "atten2a", "(", "sal2_out", ")", "\n", "atten2b", "=", "self", ".", "atten2b", "(", "sal2_out", ")", "\n", "atten2c", "=", "self", ".", "atten2c", "(", "sal2_out", ")", "\n", "atten2d", "=", "self", ".", "atten2d", "(", "sal2_out", ")", "\n", "atten2e", "=", "self", ".", "atten2e", "(", "sal2_out", ")", "\n", "atten2", "=", "(", "atten2a", "+", "atten2b", "+", "atten2c", "+", "atten2d", "+", "atten2e", ")", "/", "5.", "\n", "sal2_out", "=", "sal2_out", "*", "(", "atten2", "+", "1", ")", "\n", "sal2_out", "=", "torch", ".", "cat", "(", "[", "sal2_out", ",", "edge2", "]", ",", "dim", "=", "1", ")", "\n", "sal2_out", "=", "self", ".", "sal2_out", "(", "sal2_out", ")", ".", "sigmoid_", "(", ")", "\n", "sal2", "=", "self", ".", "sal2_up", "(", "sal2_out", ")", "\n", "\n", "# 11111111111111111111111111111111", "\n", "s1_size", "=", "sal_xs", "[", "0", "]", ".", "size", "(", ")", "[", "-", "2", ":", "]", "\n", "edge_t11", "=", "F", ".", "interpolate", "(", "edge5", ",", "size", "=", "s1_size", ",", "mode", "=", "'bilinear'", ")", ".", "sigmoid_", "(", ")", "\n", "edge_t12", "=", "F", ".", "interpolate", "(", "edge4", ",", "size", "=", "s1_size", ",", "mode", "=", "'bilinear'", ")", ".", "sigmoid_", "(", ")", "\n", "edge_t13", "=", "F", ".", "interpolate", "(", "edge3", ",", "size", "=", "s1_size", ",", "mode", "=", "'bilinear'", ")", ".", "sigmoid_", "(", ")", "\n", "edge_t14", "=", "F", ".", "interpolate", "(", "edge2", ",", "size", "=", "s1_size", ",", "mode", "=", "'bilinear'", ")", ".", "sigmoid_", "(", ")", "\n", "edge1", "=", "self", ".", "edge1_conv_1", "(", "torch", ".", "cat", "(", "[", "edge_xs", "[", "0", "]", ",", "edge_t11", ",", "edge_t12", ",", "edge_t13", ",", "edge_t14", "]", ",", "dim", "=", "1", ")", ")", ".", "sigmoid_", "(", ")", "\n", "edge1", "=", "self", ".", "edge1_conv", "(", "edge1", ")", ".", "sigmoid_", "(", ")", "\n", "\n", "sal_t11", "=", "F", ".", "interpolate", "(", "sal6", ",", "size", "=", "s1_size", ",", "mode", "=", "'bilinear'", ")", "\n", "sal_t12", "=", "F", ".", "interpolate", "(", "sal5", ",", "size", "=", "s1_size", ",", "mode", "=", "'bilinear'", ")", "\n", "sal_t13", "=", "F", ".", "interpolate", "(", "sal4", ",", "size", "=", "s1_size", ",", "mode", "=", "'bilinear'", ")", "\n", "sal_t14", "=", "F", ".", "interpolate", "(", "sal3", ",", "size", "=", "s1_size", ",", "mode", "=", "'bilinear'", ")", "\n", "sal_t15", "=", "F", ".", "interpolate", "(", "sal2", ",", "size", "=", "s1_size", ",", "mode", "=", "'bilinear'", ")", "\n", "sal1_out", "=", "torch", ".", "cat", "(", "[", "sal_xs", "[", "0", "]", ",", "sal_t11", ",", "sal_t12", ",", "sal_t13", ",", "sal_t14", ",", "sal_t15", "]", ",", "dim", "=", "1", ")", "\n", "sal1_out", "=", "self", ".", "sal1_conv_1", "(", "sal1_out", ")", ".", "sigmoid_", "(", ")", "\n", "\n", "atten1a", "=", "self", ".", "atten1a", "(", "sal1_out", ")", "\n", "atten1b", "=", "self", ".", "atten1b", "(", "sal1_out", ")", "\n", "atten1c", "=", "self", ".", "atten1c", "(", "sal1_out", ")", "\n", "atten1d", "=", "self", ".", "atten1d", "(", "sal1_out", ")", "\n", "atten1e", "=", "self", ".", "atten1e", "(", "sal1_out", ")", "\n", "atten1f", "=", "self", ".", "atten1f", "(", "sal1_out", ")", "\n", "atten1", "=", "(", "atten1a", "+", "atten1b", "+", "atten1c", "+", "atten1d", "+", "atten1e", "+", "atten1f", ")", "/", "6.", "\n", "sal1_out", "=", "sal1_out", "*", "(", "atten1", "+", "1", ")", "\n", "sal1_out", "=", "torch", ".", "cat", "(", "[", "sal1_out", ",", "edge1", "]", ",", "dim", "=", "1", ")", "\n", "sal1_out", "=", "self", ".", "sal1_out", "(", "sal1_out", ")", ".", "sigmoid_", "(", ")", "\n", "sal1", "=", "self", ".", "sal1_up", "(", "sal1_out", ")", "\n", "\n", "edges", "=", "[", "edge5", ",", "edge4", ",", "edge3", ",", "edge2", ",", "edge1", "]", "\n", "sals", "=", "[", "sal6", ",", "sal5", ",", "sal4", ",", "sal3", ",", "sal2", ",", "sal1", "]", "\n", "\n", "#for e in edges:", "\n", "#    print(e.size())", "\n", "#for s in sals:", "\n", "#    print(s.size())", "\n", "\n", "out_dict", "=", "{", "}", "\n", "out_dict", "[", "'edge'", "]", "=", "[", "up2_size", "(", "edge", ",", "x_size", ")", "for", "edge", "in", "edges", "]", "\n", "out_dict", "[", "'sal'", "]", "=", "[", "up2_size", "(", "sal", ",", "x_size", ")", "for", "sal", "in", "sals", "]", "\n", "out_dict", "[", "'final'", "]", "=", "out_dict", "[", "'sal'", "]", "[", "-", "1", "]", "\n", "return", "out_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.page.model_orig.Network.__init__": [[240, 248], ["torch.nn.Module.__init__", "torch.nn.MaxUnpool2d", "feat.append", "model_orig.decoder"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ",", "encoder", ",", "feat", ")", ":", "\n", "        ", "super", "(", "Network", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "maxp", "=", "nn", ".", "MaxUnpool2d", "(", "2", ",", "2", ")", "\n", "feat", ".", "append", "(", "feat", "[", "-", "1", "]", ")", "\n", "\n", "self", ".", "decoder", "=", "decoder", "(", "feat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.page.model_orig.Network.forward": [[249, 260], ["torch.nn.functional.max_pool2d.size", "model_orig.Network.encoder", "torch.nn.functional.max_pool2d", "model_orig.Network.append", "model_orig.Network.decoder"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "phase", "=", "'test'", ")", ":", "\n", "        ", "x_size", "=", "x", ".", "size", "(", ")", "\n", "\n", "xs", "=", "self", ".", "encoder", "(", "x", ")", "\n", "x", "=", "F", ".", "max_pool2d", "(", "xs", "[", "-", "1", "]", ",", "kernel_size", "=", "(", "2", ",", "2", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ")", "\n", "#x = self.maxp(xs[-1])", "\n", "xs", ".", "append", "(", "x", ")", "\n", "\n", "out", "=", "self", ".", "decoder", "(", "xs", ",", "x_size", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.page.model_orig.up2_size": [[5, 8], ["torch.nn.functional.interpolate"], "function", ["None"], ["def", "up2_size", "(", "x", ",", "x_size", ")", ":", "\n", "    ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "size", "=", "x_size", ",", "mode", "=", "'bilinear'", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.page.model_orig.gen_conv": [[9, 14], ["torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Sigmoid"], "function", ["None"], ["", "def", "gen_conv", "(", "In", ",", "Out", ")", ":", "\n", "    ", "yield", "nn", ".", "Conv2d", "(", "In", ",", "Out", ",", "5", ",", "padding", "=", "2", ")", "\n", "yield", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "yield", "nn", ".", "Conv2d", "(", "Out", ",", "Out", ",", "5", ",", "padding", "=", "2", ")", "\n", "yield", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.page.loss.Loss": [[7, 26], ["torch.nn.functional.binary_cross_entropy_with_logits"], "function", ["None"], ["\n", "def", "IOU", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "    ", "pred", "=", "torch", ".", "sigmoid", "(", "preds", ")", "\n", "\n", "inter", "=", "torch", ".", "sum", "(", "target", "*", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "\n", "union", "=", "torch", ".", "sum", "(", "target", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "+", "torch", ".", "sum", "(", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "-", "inter", "\n", "iou_loss", "=", "1", "-", "(", "inter", "/", "union", ")", ".", "mean", "(", ")", "\n", "return", "iou_loss", "\n", "\n", "", "def", "Loss", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "# preds: Dict type. Customarily, preds['final'] is the final prediction without sigmoid.", "\n", "    ", "bce", "=", "nn", ".", "BCEWithLogitsLoss", "(", "reduction", "=", "'none'", ")", "\n", "\n", "loss", "=", "0", "\n", "for", "pred", "in", "preds", "[", "'sal'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "target", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "loss", "+=", "IOU", "(", "pred", ",", "target", ",", "config", ")", "\n", "\n", "", "gt_edge", "=", "label_edge_prediction", "(", "target", ")", "\n", "for", "pred", "in", "preds", "[", "'detail'", "]", ":", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.page.model.Atten.__init__": [[16, 24], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "input1", ",", "input2", "=", "[", "0", ",", "0", ",", "0", ",", "0", "]", ")", ":", "\n", "        ", "out0", "=", "F", ".", "relu", "(", "self", ".", "bn0", "(", "self", ".", "conv0", "(", "input1", "[", "0", "]", "+", "input2", "[", "0", "]", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out0", "=", "F", ".", "interpolate", "(", "out0", ",", "size", "=", "input1", "[", "1", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.page.model.Atten.forward": [[25, 36], ["torch.nn.functional.max_pool2d.size", "model.Atten.conv().relu_", "torch.nn.functional.interpolate", "torch.nn.functional.max_pool2d.view", "torch.nn.functional.max_pool2d", "model.Atten.conv"], "methods", ["None"], ["out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "input1", "[", "1", "]", "+", "input2", "[", "1", "]", "+", "out0", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out1", "=", "F", ".", "interpolate", "(", "out1", ",", "size", "=", "input1", "[", "2", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "input1", "[", "2", "]", "+", "input2", "[", "2", "]", "+", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2", "=", "F", ".", "interpolate", "(", "out2", ",", "size", "=", "input1", "[", "3", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "input1", "[", "3", "]", "+", "input2", "[", "3", "]", "+", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "return", "out3", "\n", "\n", "", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n", "\n", "", "", "class", "Encoder", "(", "nn", ".", "Module", ")", ":", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.page.model.decoder.__init__": [[38, 101], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "model.Atten", "model.Atten", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "model.Atten", "model.Atten", "model.Atten", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "model.Atten", "model.Atten", "model.Atten", "model.Atten", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "model.Atten", "model.Atten", "model.Atten", "model.Atten", "model.Atten", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "model.Atten", "model.Atten", "model.Atten", "model.Atten", "model.Atten", "model.Atten", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Sequential().cuda", "torch.nn.Sequential().cuda", "range", "range", "torch.nn.Sequential", "torch.nn.Sequential", "list", "list", "model.gen_conv", "model.gen_conv"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.page.model.gen_conv", "home.repos.pwc.inspect_result.moothes_salod.page.model.gen_conv"], ["        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "conv1b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "conv1d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "out1", ")", ":", "\n", "        ", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2", "=", "F", ".", "max_pool2d", "(", "out1", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3", "=", "F", ".", "max_pool2d", "(", "out2", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4", "=", "F", ".", "max_pool2d", "(", "out3", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out4", "=", "F", ".", "relu", "(", "self", ".", "bn4", "(", "self", ".", "conv4", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "out1b", "=", "F", ".", "relu", "(", "self", ".", "bn1b", "(", "self", ".", "conv1b", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2b", "=", "F", ".", "relu", "(", "self", ".", "bn2b", "(", "self", ".", "conv2b", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3b", "=", "F", ".", "relu", "(", "self", ".", "bn3b", "(", "self", ".", "conv3b", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4b", "=", "F", ".", "relu", "(", "self", ".", "bn4b", "(", "self", ".", "conv4b", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "out1d", "=", "F", ".", "relu", "(", "self", ".", "bn1d", "(", "self", ".", "conv1d", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2d", "=", "F", ".", "relu", "(", "self", ".", "bn2d", "(", "self", ".", "conv2d", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3d", "=", "F", ".", "relu", "(", "self", ".", "bn3d", "(", "self", ".", "conv3d", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4d", "=", "F", ".", "relu", "(", "self", ".", "bn4d", "(", "self", ".", "conv4d", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "return", "(", "out4b", ",", "out3b", ",", "out2b", ",", "out1b", ")", ",", "(", "out4d", ",", "out3d", ",", "out2d", ",", "out1d", ")", "\n", "\n", "", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n", "\n", "", "", "class", "Network", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "config", ",", "encoder", ",", "feat", ")", ":", "\n", "# encoder: backbone, forward function output 5 encoder features. details in methods/base/model.py", "\n", "# feat: length of encoder features. e.g.: VGG:[64, 128, 256, 512, 512]; Resnet:[64, 256, 512, 1024, 2048]", "\n", "        ", "super", "(", "Network", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "conv5b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv2b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.page.model.decoder.forward": [[102, 239], ["model.decoder.sal6_conv().relu_", "model.decoder.edge5_conv", "torch.nn.functional.interpolate", "model.decoder.sal5_conv().relu_", "model.decoder.atten5a", "model.decoder.atten5b", "torch.cat", "model.decoder.sal5_out().relu_", "model.decoder.sal5_up", "torch.nn.functional.interpolate", "model.decoder.edge4_conv_1().relu_", "model.decoder.edge4_conv", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.cat", "model.decoder.sal4_conv_1().relu_", "model.decoder.atten4a", "model.decoder.atten4b", "model.decoder.atten4c", "torch.cat", "model.decoder.sal4_out().relu_", "model.decoder.sal4_up", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "model.decoder.edge3_conv_1().relu_", "model.decoder.edge3_conv", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.cat", "model.decoder.sal3_conv_1().relu_", "model.decoder.atten3a", "model.decoder.atten3b", "model.decoder.atten3c", "model.decoder.atten3d", "torch.cat", "model.decoder.sal3_out().relu_", "model.decoder.sal3_up", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "model.decoder.edge2_conv_1().relu_", "model.decoder.edge2_conv", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.cat", "model.decoder.sal2_conv_1().relu_", "model.decoder.atten2a", "model.decoder.atten2b", "model.decoder.atten2c", "model.decoder.atten2d", "model.decoder.atten2e", "torch.cat", "model.decoder.sal2_out().relu_", "model.decoder.sal2_up", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "model.decoder.edge1_conv_1().relu_", "model.decoder.edge1_conv", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.cat", "model.decoder.sal1_conv_1().relu_", "model.decoder.atten1a", "model.decoder.atten1b", "model.decoder.atten1c", "model.decoder.atten1d", "model.decoder.atten1e", "model.decoder.atten1f", "torch.cat", "model.decoder.sal1_out().relu_", "model.decoder.sal1_up", "sal_xs[].size", "sal_xs[].size", "sal_xs[].size", "sal_xs[].size", "sal_xs[].size", "model.up2_size", "model.up2_size", "range", "range", "model.decoder.sal6_conv", "model.decoder.sal5_conv", "model.decoder.sal5_out", "model.decoder.edge4_conv_1", "model.decoder.sal4_conv_1", "model.decoder.sal4_out", "model.decoder.edge3_conv_1", "model.decoder.sal3_conv_1", "model.decoder.sal3_out", "model.decoder.edge2_conv_1", "model.decoder.sal2_conv_1", "model.decoder.sal2_out", "model.decoder.edge1_conv_1", "model.decoder.sal1_conv_1", "model.decoder.sal1_out", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.page.model.up2_size", "home.repos.pwc.inspect_result.moothes_salod.page.model.up2_size"], ["self", ".", "conv5d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "encoder1", "=", "Encoder", "(", ")", "\n", "self", ".", "decoderb", "=", "Decoder", "(", ")", "\n", "self", ".", "decoderd", "=", "Decoder", "(", ")", "\n", "self", ".", "linearb", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "lineard", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ",", "phase", "=", "'test'", ")", ":", "\n", "        ", "shape", "=", "x", ".", "size", "(", ")", "[", "2", ":", "]", "\n", "out1", ",", "out2", ",", "out3", ",", "out4", ",", "out5", "=", "self", ".", "encoder", "(", "x", ")", "\n", "out2b", ",", "out3b", ",", "out4b", ",", "out5b", "=", "self", ".", "conv2b", "(", "out2", ")", ",", "self", ".", "conv3b", "(", "out3", ")", ",", "self", ".", "conv4b", "(", "out4", ")", ",", "self", ".", "conv5b", "(", "out5", ")", "\n", "out2d", ",", "out3d", ",", "out4d", ",", "out5d", "=", "self", ".", "conv2d", "(", "out2", ")", ",", "self", ".", "conv3d", "(", "out3", ")", ",", "self", ".", "conv4d", "(", "out4", ")", ",", "self", ".", "conv5d", "(", "out5", ")", "\n", "\n", "outb1", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ")", "\n", "outd1", "=", "self", ".", "decoderd", "(", "[", "out5d", ",", "out4d", ",", "out3d", ",", "out2d", "]", ")", "\n", "out1", "=", "torch", ".", "cat", "(", "[", "outb1", ",", "outd1", "]", ",", "dim", "=", "1", ")", "\n", "outb2", ",", "outd2", "=", "self", ".", "encoder1", "(", "out1", ")", "\n", "outb2", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ",", "outb2", ")", "\n", "outd2", "=", "self", ".", "decoderd", "(", "[", "out5d", ",", "out4d", ",", "out3d", ",", "out2d", "]", ",", "outd2", ")", "\n", "out2", "=", "torch", ".", "cat", "(", "[", "outb2", ",", "outd2", "]", ",", "dim", "=", "1", ")", "\n", "\n", "out1", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outb1", "=", "F", ".", "interpolate", "(", "self", ".", "linearb", "(", "outb1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outd1", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "\n", "out2", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outb2", "=", "F", ".", "interpolate", "(", "self", ".", "linearb", "(", "outb2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outd2", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "#return outb1, outd1, out1, outb2, outd2, out2", "\n", "\n", "OutDict", "=", "{", "}", "\n", "OutDict", "[", "'final'", "]", "=", "out2", "\n", "OutDict", "[", "'body'", "]", "=", "[", "outb1", ",", "outb2", "]", "\n", "OutDict", "[", "'detail'", "]", "=", "[", "outd1", ",", "outd2", "]", "\n", "OutDict", "[", "'sal'", "]", "=", "[", "out1", ",", "out2", "]", "\n", "return", "OutDict", "\n", "\n", "\n", "\n", "", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.page.model.Network.__init__": [[242, 250], ["torch.nn.Module.__init__", "torch.nn.MaxUnpool2d", "feat.append", "model.decoder"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], []], "home.repos.pwc.inspect_result.moothes_salod.page.model.Network.forward": [[251, 262], ["torch.nn.functional.max_pool2d.size", "model.Network.encoder", "torch.nn.functional.max_pool2d", "model.Network.append", "model.Network.decoder"], "methods", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.page.model.up2_size": [[5, 8], ["torch.nn.functional.interpolate"], "function", ["None"], ["\n", "from", "base", ".", "encoder", ".", "vgg", "import", "vgg", "\n", "from", "base", ".", "encoder", ".", "resnet", "import", "resnet", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.page.model.gen_conv": [[9, 14], ["torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Sigmoid"], "function", ["None"], ["\n", "class", "Decoder", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv0", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn0", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.gcpa.config.get_config": [[8, 19], ["base.config.base_config", "base.config.base_config.parse_args", "vars", "base.config.cfg_convert", "print"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.config.base_config", "home.repos.pwc.inspect_result.moothes_salod.base.config.cfg_convert"], ["    ", "strategy", "=", "'base_sgd'", "\n", "parser", "=", "base_config", "(", "strategy", ")", "\n", "# Add custom params here", "\n", "# parser.add_argument('--size', default=320, type=int, help='Input size')", "\n", "\n", "params", "=", "parser", ".", "parse_args", "(", ")", "\n", "config", "=", "vars", "(", "params", ")", "\n", "cfg_convert", "(", "config", ")", "\n", "print", "(", "'Training {} network with {} backbone using Gpu: {}'", ".", "format", "(", "config", "[", "'model_name'", "]", ",", "config", "[", "'backbone'", "]", ",", "config", "[", "'gpus'", "]", ")", ")", "\n", "\n", "# Config post-process", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.gcpa.loss.Loss_orig": [[8, 17], ["torch.nn.BCEWithLogitsLoss", "zip", "nn.BCEWithLogitsLoss."], "function", ["None"], ["def", "IOU", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "    ", "pred", "=", "torch", ".", "sigmoid", "(", "preds", ")", "\n", "\n", "inter", "=", "torch", ".", "sum", "(", "target", "*", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "\n", "union", "=", "torch", ".", "sum", "(", "target", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "+", "torch", ".", "sum", "(", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "-", "inter", "\n", "iou_loss", "=", "1", "-", "(", "inter", "/", "union", ")", ".", "mean", "(", ")", "\n", "return", "iou_loss", "\n", "\n", "", "def", "Loss", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "# preds: Dict type. Customarily, preds['final'] is the final prediction without sigmoid.", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.gcpa.loss.Loss": [[19, 33], ["torch.nn.BCEWithLogitsLoss", "zip", "torch.sigmoid", "torch.sum", "nn.BCEWithLogitsLoss.", "torch.sum", "torch.sum"], "function", ["None"], ["\n", "loss", "=", "0", "\n", "for", "pred", "in", "preds", "[", "'sal'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "target", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "loss", "+=", "IOU", "(", "pred", ",", "target", ",", "config", ")", "\n", "\n", "", "gt_edge", "=", "label_edge_prediction", "(", "target", ")", "\n", "for", "pred", "in", "preds", "[", "'detail'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "gt_edge", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "\n", "", "gt_body", "=", "(", "target", "-", "gt_edge", ")", ".", "gt", "(", "0.5", ")", "\n", "for", "pred", "in", "preds", "[", "'body'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "gt_body", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "\n", "", "return", "loss", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.gcpa.model.Bottleneck.__init__": [[29, 38], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "input1", "[", "3", "]", "+", "input2", "[", "3", "]", "+", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "return", "out3", "\n", "\n", "", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n", "\n", "", "", "class", "Encoder", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.gcpa.model.Bottleneck.forward": [[39, 47], ["torch.nn.functional.relu", "torch.nn.functional.relu", "model.Bottleneck.bn3", "torch.nn.functional.relu", "model.Bottleneck.bn1", "model.Bottleneck.bn2", "model.Bottleneck.conv3", "model.Bottleneck.downsample", "model.Bottleneck.conv1", "model.Bottleneck.conv2"], "methods", ["None"], ["self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.gcpa.model.ResNet.__init__": [[50, 60], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "model.ResNet.make_layer", "model.ResNet.make_layer", "model.ResNet.make_layer", "model.ResNet.make_layer", "model.ResNet.initialize"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.gcpa.model.ResNet.make_layer", "home.repos.pwc.inspect_result.moothes_salod.gcpa.model.ResNet.make_layer", "home.repos.pwc.inspect_result.moothes_salod.gcpa.model.ResNet.make_layer", "home.repos.pwc.inspect_result.moothes_salod.gcpa.model.ResNet.make_layer", "home.repos.pwc.inspect_result.moothes_salod.itsd.model.ctr_block.initialize"], ["self", ".", "conv2b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "conv1d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.gcpa.model.ResNet.make_layer": [[61, 71], ["range", "torch.nn.Sequential", "torch.nn.Sequential", "model.Bottleneck", "layers.append", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "model.Bottleneck"], "methods", ["None"], ["self", ".", "conv3d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "out1", ")", ":", "\n", "        ", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2", "=", "F", ".", "max_pool2d", "(", "out1", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3", "=", "F", ".", "max_pool2d", "(", "out2", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.gcpa.model.ResNet.forward": [[72, 80], ["torch.nn.functional.relu", "torch.nn.functional.max_pool2d", "model.ResNet.layer1", "model.ResNet.layer2", "model.ResNet.layer3", "model.ResNet.layer4", "model.ResNet.bn1", "model.ResNet.conv1"], "methods", ["None"], ["out4", "=", "F", ".", "max_pool2d", "(", "out3", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out4", "=", "F", ".", "relu", "(", "self", ".", "bn4", "(", "self", ".", "conv4", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "out1b", "=", "F", ".", "relu", "(", "self", ".", "bn1b", "(", "self", ".", "conv1b", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2b", "=", "F", ".", "relu", "(", "self", ".", "bn2b", "(", "self", ".", "conv2b", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3b", "=", "F", ".", "relu", "(", "self", ".", "bn3b", "(", "self", ".", "conv3b", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4b", "=", "F", ".", "relu", "(", "self", ".", "bn4b", "(", "self", ".", "conv4b", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "out1d", "=", "F", ".", "relu", "(", "self", ".", "bn1d", "(", "self", ".", "conv1d", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.gcpa.model.ResNet.initialize": [[81, 83], ["model.ResNet.load_state_dict", "torch.load"], "methods", ["None"], ["out2d", "=", "F", ".", "relu", "(", "self", ".", "bn2d", "(", "self", ".", "conv2d", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3d", "=", "F", ".", "relu", "(", "self", ".", "bn3d", "(", "self", ".", "conv3d", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4d", "=", "F", ".", "relu", "(", "self", ".", "bn4d", "(", "self", ".", "conv4d", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.gcpa.model.CA.__init__": [[85, 91], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["\n", "", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n", "\n", "", "", "class", "Network", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "config", ",", "encoder", ",", "feat", ")", ":", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.gcpa.model.CA.forward": [[92, 98], ["torch.nn.functional.relu", "torch.sigmoid.mean", "torch.nn.functional.relu", "torch.sigmoid", "model.CA.bn0", "model.CA.conv1", "model.CA.conv2", "model.CA.conv0"], "methods", ["None"], ["# encoder: backbone, forward function output 5 encoder features. details in methods/base/model.py", "\n", "# feat: length of encoder features. e.g.: VGG:[64, 128, 256, 512, 512]; Resnet:[64, 256, 512, 1024, 2048]", "\n", "        ", "super", "(", "Network", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "conv5b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.gcpa.model.CA.initialize": [[99, 101], ["model.weight_init"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.gcpa.model.weight_init"], ["self", ".", "conv3b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv2b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.gcpa.model.SRM.__init__": [[104, 109], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["self", ".", "conv3d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "encoder1", "=", "Encoder", "(", ")", "\n", "self", ".", "decoderb", "=", "Decoder", "(", ")", "\n", "self", ".", "decoderd", "=", "Decoder", "(", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.gcpa.model.SRM.forward": [[110, 116], ["torch.nn.functional.relu", "model.SRM.conv2", "torch.nn.functional.relu", "model.SRM.bn1", "model.SRM.conv1"], "methods", ["None"], ["self", ".", "linearb", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "lineard", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ",", "phase", "=", "'test'", ")", ":", "\n", "        ", "shape", "=", "x", ".", "size", "(", ")", "[", "2", ":", "]", "\n", "out1", ",", "out2", ",", "out3", ",", "out4", ",", "out5", "=", "self", ".", "encoder", "(", "x", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.gcpa.model.SRM.initialize": [[118, 120], ["model.weight_init"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.gcpa.model.weight_init"], ["out2d", ",", "out3d", ",", "out4d", ",", "out5d", "=", "self", ".", "conv2d", "(", "out2", ")", ",", "self", ".", "conv3d", "(", "out3", ")", ",", "self", ".", "conv4d", "(", "out4", ")", ",", "self", ".", "conv5d", "(", "out5", ")", "\n", "\n", "outb1", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.gcpa.model.FAM.__init__": [[124, 139], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["outb2", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ",", "outb2", ")", "\n", "outd2", "=", "self", ".", "decoderd", "(", "[", "out5d", ",", "out4d", ",", "out3d", ",", "out2d", "]", ",", "outd2", ")", "\n", "out2", "=", "torch", ".", "cat", "(", "[", "outb2", ",", "outd2", "]", ",", "dim", "=", "1", ")", "\n", "\n", "out1", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outb1", "=", "F", ".", "interpolate", "(", "self", ".", "linearb", "(", "outb1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outd1", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "\n", "out2", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outb2", "=", "F", ".", "interpolate", "(", "self", ".", "linearb", "(", "outb2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outd2", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "#return outb1, outd1, out1, outb2, outd2, out2", "\n", "\n", "OutDict", "=", "{", "}", "\n", "OutDict", "[", "'final'", "]", "=", "out2", "\n", "OutDict", "[", "'body'", "]", "=", "[", "outb1", ",", "outb2", "]", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.gcpa.model.FAM.forward": [[141, 168], ["torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.relu", "model.FAM.conv_d1", "model.FAM.conv_l", "torch.nn.functional.relu", "model.FAM.conv_d2", "torch.nn.functional.relu", "torch.cat", "torch.nn.functional.relu", "model.FAM.bn0", "model.FAM.bn1", "model.FAM.bn2", "torch.nn.functional.interpolate", "torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "model.FAM.bn3", "model.FAM.conv0", "model.FAM.conv1", "model.FAM.conv2", "torch.nn.functional.relu.size", "torch.nn.functional.relu.size", "torch.nn.functional.interpolate.size", "torch.nn.functional.relu.size", "torch.nn.functional.interpolate.size", "torch.nn.functional.relu.size", "model.FAM.conv3", "torch.nn.functional.relu.size", "torch.nn.functional.relu.size", "torch.nn.functional.relu.size"], "methods", ["None"], ["OutDict", "[", "'sal'", "]", "=", "[", "out1", ",", "out2", "]", "\n", "return", "OutDict", "\n", "\n", "\n", "\n", "", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.gcpa.model.FAM.initialize": [[170, 172], ["model.weight_init"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.gcpa.model.weight_init"], []], "home.repos.pwc.inspect_result.moothes_salod.gcpa.model.SA.__init__": [[175, 180], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], []], "home.repos.pwc.inspect_result.moothes_salod.gcpa.model.SA.forward": [[181, 189], ["torch.nn.functional.relu", "model.SA.conv2", "torch.nn.functional.relu", "model.SA.bn0", "torch.nn.functional.interpolate", "model.SA.conv0", "torch.nn.functional.interpolate.size", "torch.nn.functional.relu.size", "torch.nn.functional.relu.size"], "methods", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.gcpa.model.SA.initialize": [[190, 192], ["model.weight_init"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.gcpa.model.weight_init"], []], "home.repos.pwc.inspect_result.moothes_salod.gcpa.model.decoder.__init__": [[195, 218], ["torch.nn.Module.__init__", "model.CA", "model.CA", "model.CA", "model.CA", "model.SA", "model.FAM", "model.FAM", "model.FAM", "model.SRM", "model.SRM", "model.SRM", "model.SRM", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "model.decoder.initialize"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.itsd.model.ctr_block.initialize"], []], "home.repos.pwc.inspect_result.moothes_salod.gcpa.model.decoder.forward": [[219, 243], ["model.decoder.ca45", "model.decoder.ca35", "model.decoder.ca25", "model.decoder.sa55", "model.decoder.ca55", "model.decoder.srm5", "model.decoder.srm4", "model.decoder.srm3", "model.decoder.srm2", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "model.decoder.fam45", "model.decoder.fam34", "model.decoder.fam23", "model.decoder.linear5", "model.decoder.linear4", "model.decoder.linear3", "model.decoder.linear2"], "methods", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.gcpa.model.decoder.initialize": [[245, 247], ["model.weight_init"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.gcpa.model.weight_init"], []], "home.repos.pwc.inspect_result.moothes_salod.gcpa.model.Network.__init__": [[249, 255], ["torch.nn.Module.__init__", "model.decoder"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], []], "home.repos.pwc.inspect_result.moothes_salod.gcpa.model.Network.forward": [[256, 260], ["model.Network.encoder", "model.Network.decoder", "x.size"], "methods", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.gcpa.model.weight_init": [[10, 27], ["module.named_children", "isinstance", "torch.nn.init.kaiming_normal_", "isinstance", "torch.nn.init.zeros_", "torch.nn.init.ones_", "isinstance", "torch.nn.init.zeros_", "torch.nn.init.kaiming_normal_", "m.initialize", "torch.nn.init.zeros_"], "function", ["home.repos.pwc.inspect_result.moothes_salod.itsd.model.ctr_block.initialize"], ["class", "Decoder", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv0", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn0", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "input1", ",", "input2", "=", "[", "0", ",", "0", ",", "0", ",", "0", "]", ")", ":", "\n", "        ", "out0", "=", "F", ".", "relu", "(", "self", ".", "bn0", "(", "self", ".", "conv0", "(", "input1", "[", "0", "]", "+", "input2", "[", "0", "]", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out0", "=", "F", ".", "interpolate", "(", "out0", ",", "size", "=", "input1", "[", "1", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "input1", "[", "1", "]", "+", "input2", "[", "1", "]", "+", "out0", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out1", "=", "F", ".", "interpolate", "(", "out1", ",", "size", "=", "input1", "[", "2", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "input1", "[", "2", "]", "+", "input2", "[", "2", "]", "+", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.srm.config.get_config": [[7, 19], ["base.config.base_config", "base.config.base_config.parse_args", "vars", "base.config.cfg_convert", "print"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.config.base_config", "home.repos.pwc.inspect_result.moothes_salod.base.config.cfg_convert"], ["def", "get_config", "(", ")", ":", "\n", "    ", "strategy", "=", "'base_sgd'", "\n", "parser", "=", "base_config", "(", "strategy", ")", "\n", "# Add custom params here", "\n", "# parser.add_argument('--size', default=320, type=int, help='Input size')", "\n", "\n", "params", "=", "parser", ".", "parse_args", "(", ")", "\n", "config", "=", "vars", "(", "params", ")", "\n", "cfg_convert", "(", "config", ")", "\n", "print", "(", "'Training {} network with {} backbone using Gpu: {}'", ".", "format", "(", "config", "[", "'model_name'", "]", ",", "config", "[", "'backbone'", "]", ",", "config", "[", "'gpus'", "]", ")", ")", "\n", "\n", "# Config post-process", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.srm.loss.CTLoss": [[8, 13], ["torch.nn.BCEWithLogitsLoss", "torch.nn.functional.avg_pool2d", "label_edge_prediction", "nn.BCEWithLogitsLoss."], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.util.label_edge_prediction"], ["def", "IOU", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "    ", "pred", "=", "torch", ".", "sigmoid", "(", "preds", ")", "\n", "\n", "inter", "=", "torch", ".", "sum", "(", "target", "*", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "\n", "union", "=", "torch", ".", "sum", "(", "target", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "+", "torch", ".", "sum", "(", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "-", "inter", "\n", "iou_loss", "=", "1", "-", "(", "inter", "/", "union", ")", ".", "mean", "(", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.srm.loss.Fscore": [[15, 26], ["torch.sigmoid", "fs.mean", "torch.nn.functional.avg_pool2d", "tp.sum", "torch.sigmoid.sum", "label_edge_prediction", "target.sum"], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.util.label_edge_prediction"], ["\n", "", "def", "Loss", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "# preds: Dict type. Customarily, preds['final'] is the final prediction without sigmoid.", "\n", "    ", "bce", "=", "nn", ".", "BCEWithLogitsLoss", "(", "reduction", "=", "'none'", ")", "\n", "\n", "loss", "=", "0", "\n", "for", "pred", "in", "preds", "[", "'sal'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "target", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "loss", "+=", "IOU", "(", "pred", ",", "target", ",", "config", ")", "\n", "\n", "", "gt_edge", "=", "label_edge_prediction", "(", "target", ")", "\n", "for", "pred", "in", "preds", "[", "'detail'", "]", ":", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.srm.loss.cff_loss": [[27, 32], ["loss.CTLoss", "loss.Fscore"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.loss.CTLoss", "home.repos.pwc.inspect_result.moothes_salod.base.loss.Fscore"], ["        ", "loss", "+=", "bce", "(", "pred", ",", "gt_edge", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "\n", "", "gt_body", "=", "(", "target", "-", "gt_edge", ")", ".", "gt", "(", "0.5", ")", "\n", "for", "pred", "in", "preds", "[", "'body'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "gt_body", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.srm.loss.Loss_new": [[33, 39], ["loss.cff_loss"], "function", ["home.repos.pwc.inspect_result.moothes_salod.itsd.loss.cff_loss"], ["", "return", "loss", "\n", "\n", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.srm.loss.Loss": [[40, 48], ["torch.nn.BCEWithLogitsLoss", "nn.BCEWithLogitsLoss.mean", "nn.BCEWithLogitsLoss."], "function", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.srm.model.Bottleneck.__init__": [[13, 25], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["self", ".", "conv0", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn0", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "input1", ",", "input2", "=", "[", "0", ",", "0", ",", "0", ",", "0", "]", ")", ":", "\n", "        ", "out0", "=", "F", ".", "relu", "(", "self", ".", "bn0", "(", "self", ".", "conv0", "(", "input1", "[", "0", "]", "+", "input2", "[", "0", "]", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out0", "=", "F", ".", "interpolate", "(", "out0", ",", "size", "=", "input1", "[", "1", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "input1", "[", "1", "]", "+", "input2", "[", "1", "]", "+", "out0", ")", ")", ",", "inplace", "=", "True", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.srm.model.Bottleneck.forward": [[26, 47], ["model.Bottleneck.conv1", "model.Bottleneck.bn1", "model.Bottleneck.relu", "model.Bottleneck.conv2", "model.Bottleneck.bn2", "model.Bottleneck.relu", "model.Bottleneck.conv3", "model.Bottleneck.bn3", "model.Bottleneck.relu", "model.Bottleneck.downsample"], "methods", ["None"], ["out1", "=", "F", ".", "interpolate", "(", "out1", ",", "size", "=", "input1", "[", "2", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "input1", "[", "2", "]", "+", "input2", "[", "2", "]", "+", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2", "=", "F", ".", "interpolate", "(", "out2", ",", "size", "=", "input1", "[", "3", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "input1", "[", "3", "]", "+", "input2", "[", "3", "]", "+", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "return", "out3", "\n", "\n", "", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n", "\n", "", "", "class", "Encoder", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.srm.model.Stage1.__init__": [[51, 68], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.MaxPool2d", "model.Stage1._make_layer", "model.Stage1._make_layer", "model.Stage1._make_layer", "model.Stage1._make_layer", "torch.nn.Conv2d", "torch.nn.Conv2d", "model.Stage1._copy_params"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.moothes_salod.srm.model.Stage2._copy_params"], ["self", ".", "bn2b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "conv1d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "out1", ")", ":", "\n", "        ", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2", "=", "F", ".", "max_pool2d", "(", "out1", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.srm.model.Stage1.forward": [[69, 82], ["model.Stage1.conv1", "model.Stage1.bn1", "model.Stage1.relu", "model.Stage1.maxpool", "model.Stage1.layer1", "model.Stage1.layer2", "model.Stage1.layer3", "model.Stage1.layer4", "model.Stage1.conv6", "model.Stage1.conv7"], "methods", ["None"], ["out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3", "=", "F", ".", "max_pool2d", "(", "out2", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4", "=", "F", ".", "max_pool2d", "(", "out3", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out4", "=", "F", ".", "relu", "(", "self", ".", "bn4", "(", "self", ".", "conv4", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "out1b", "=", "F", ".", "relu", "(", "self", ".", "bn1b", "(", "self", ".", "conv1b", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2b", "=", "F", ".", "relu", "(", "self", ".", "bn2b", "(", "self", ".", "conv2b", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3b", "=", "F", ".", "relu", "(", "self", ".", "bn3b", "(", "self", ".", "conv3b", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4b", "=", "F", ".", "relu", "(", "self", ".", "bn4b", "(", "self", ".", "conv4b", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "out1d", "=", "F", ".", "relu", "(", "self", ".", "bn1d", "(", "self", ".", "conv1d", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2d", "=", "F", ".", "relu", "(", "self", ".", "bn2d", "(", "self", ".", "conv2d", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3d", "=", "F", ".", "relu", "(", "self", ".", "bn3d", "(", "self", ".", "conv3d", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.srm.model.Stage1._make_layer": [[83, 99], ["layers.append", "range", "torch.nn.Sequential", "torch.nn.Sequential", "block", "layers.append", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "block"], "methods", ["None"], ["out4d", "=", "F", ".", "relu", "(", "self", ".", "bn4d", "(", "self", ".", "conv4d", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "return", "(", "out4b", ",", "out3b", ",", "out2b", ",", "out1b", ")", ",", "(", "out4d", ",", "out3d", ",", "out2d", ",", "out1d", ")", "\n", "\n", "", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n", "\n", "", "", "class", "Network", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "config", ",", "encoder", ",", "feat", ")", ":", "\n", "# encoder: backbone, forward function output 5 encoder features. details in methods/base/model.py", "\n", "# feat: length of encoder features. e.g.: VGG:[64, 128, 256, 512, 512]; Resnet:[64, 256, 512, 1024, 2048]", "\n", "        ", "super", "(", "Network", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "conv5b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.srm.model.Stage1._copy_params": [[100, 110], ["torchvision.models.resnet50().state_dict", "model.Stage1.state_dict", "model.Stage1.update", "model.Stage1.load_state_dict", "torchvision.models.resnet50", "torchvision.models.resnet50().state_dict.items"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_wfm.update"], ["self", ".", "conv2b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv5d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "encoder1", "=", "Encoder", "(", ")", "\n", "self", ".", "decoderb", "=", "Decoder", "(", ")", "\n", "self", ".", "decoderd", "=", "Decoder", "(", ")", "\n", "self", ".", "linearb", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.srm.model.Stage2.__init__": [[114, 128], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.MaxPool2d", "model.Stage2._make_layer", "model.Stage2._make_layer", "model.Stage2._make_layer", "model.PPM", "model.Stage2._copy_params"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.moothes_salod.srm.model.Stage2._copy_params"], ["", "def", "forward", "(", "self", ",", "x", ",", "phase", "=", "'test'", ")", ":", "\n", "        ", "shape", "=", "x", ".", "size", "(", ")", "[", "2", ":", "]", "\n", "out1", ",", "out2", ",", "out3", ",", "out4", ",", "out5", "=", "self", ".", "encoder", "(", "x", ")", "\n", "out2b", ",", "out3b", ",", "out4b", ",", "out5b", "=", "self", ".", "conv2b", "(", "out2", ")", ",", "self", ".", "conv3b", "(", "out3", ")", ",", "self", ".", "conv4b", "(", "out4", ")", ",", "self", ".", "conv5b", "(", "out5", ")", "\n", "out2d", ",", "out3d", ",", "out4d", ",", "out5d", "=", "self", ".", "conv2d", "(", "out2", ")", ",", "self", ".", "conv3d", "(", "out3", ")", ",", "self", ".", "conv4d", "(", "out4", ")", ",", "self", ".", "conv5d", "(", "out5", ")", "\n", "\n", "outb1", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ")", "\n", "outd1", "=", "self", ".", "decoderd", "(", "[", "out5d", ",", "out4d", ",", "out3d", ",", "out2d", "]", ")", "\n", "out1", "=", "torch", ".", "cat", "(", "[", "outb1", ",", "outd1", "]", ",", "dim", "=", "1", ")", "\n", "outb2", ",", "outd2", "=", "self", ".", "encoder1", "(", "out1", ")", "\n", "outb2", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ",", "outb2", ")", "\n", "outd2", "=", "self", ".", "decoderd", "(", "[", "out5d", ",", "out4d", ",", "out3d", ",", "out2d", "]", ",", "outd2", ")", "\n", "out2", "=", "torch", ".", "cat", "(", "[", "outb2", ",", "outd2", "]", ",", "dim", "=", "1", ")", "\n", "\n", "out1", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.srm.model.Stage2.forward": [[129, 140], ["model.Stage2.conv1", "model.Stage2.bn1", "model.Stage2.relu", "model.Stage2.maxpool", "model.Stage2.layer1", "model.Stage2.layer2", "model.Stage2.layer3", "model.Stage2.ppm"], "methods", ["None"], ["outb1", "=", "F", ".", "interpolate", "(", "self", ".", "linearb", "(", "outb1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outd1", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "\n", "out2", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outb2", "=", "F", ".", "interpolate", "(", "self", ".", "linearb", "(", "outb2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outd2", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "#return outb1, outd1, out1, outb2, outd2, out2", "\n", "\n", "OutDict", "=", "{", "}", "\n", "OutDict", "[", "'final'", "]", "=", "out2", "\n", "OutDict", "[", "'body'", "]", "=", "[", "outb1", ",", "outb2", "]", "\n", "OutDict", "[", "'detail'", "]", "=", "[", "outd1", ",", "outd2", "]", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.srm.model.Stage2._make_layer": [[141, 157], ["layers.append", "range", "torch.nn.Sequential", "torch.nn.Sequential", "block", "layers.append", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "block"], "methods", ["None"], ["OutDict", "[", "'sal'", "]", "=", "[", "out1", ",", "out2", "]", "\n", "return", "OutDict", "\n", "\n", "\n", "\n", "", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.srm.model.Stage2._copy_params": [[158, 167], ["torchvision.models.resnet50().state_dict", "model.Stage2.state_dict", "model.Stage2.update", "model.Stage2.load_state_dict", "torchvision.models.resnet50", "torchvision.models.resnet50().state_dict.items"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_wfm.update"], []], "home.repos.pwc.inspect_result.moothes_salod.srm.model.PPM.__init__": [[171, 191], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.AvgPool2d", "torch.nn.Conv2d", "torch.nn.AvgPool2d", "torch.nn.Conv2d", "torch.nn.AvgPool2d", "torch.nn.Conv2d", "torch.nn.AvgPool2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], []], "home.repos.pwc.inspect_result.moothes_salod.srm.model.PPM.forward": [[193, 205], ["model.PPM.block1", "torch.nn.functional.interpolate", "model.PPM.block2", "torch.nn.functional.interpolate", "model.PPM.block3", "torch.nn.functional.interpolate", "model.PPM.block4", "torch.nn.functional.interpolate", "torch.cat", "x.size"], "methods", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.srm.model.Network.__init__": [[208, 225], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "model.PPM", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], []], "home.repos.pwc.inspect_result.moothes_salod.srm.model.Network.forward": [[226, 249], ["model.Network.encoder", "model.Network.conv7", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "model.Network.stage2", "model.Network.ppm", "model.Network.conv1", "model.Network.conv2", "torch.cat", "model.Network.conv61", "model.Network.conv71", "torch.nn.functional.interpolate", "x.size", "torch.nn.functional.relu", "model.Network.conv6"], "methods", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.ctdnet.config.get_config": [[7, 24], ["base.config.base_config", "base.config.base_config.parse_args", "vars", "base.config.cfg_convert", "print"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.config.base_config", "home.repos.pwc.inspect_result.moothes_salod.base.config.cfg_convert"], ["def", "get_config", "(", ")", ":", "\n", "    ", "strategy", "=", "'base_sgd'", "\n", "parser", "=", "base_config", "(", "strategy", ")", "\n", "# Add custom params here", "\n", "# parser.add_argument('--size', default=320, type=int, help='Input size')", "\n", "\n", "params", "=", "parser", ".", "parse_args", "(", ")", "\n", "config", "=", "vars", "(", "params", ")", "\n", "cfg_convert", "(", "config", ")", "\n", "print", "(", "'Training {} network with {} backbone using Gpu: {}'", ".", "format", "(", "config", "[", "'model_name'", "]", ",", "config", "[", "'backbone'", "]", ",", "config", "[", "'gpus'", "]", ")", ")", "\n", "\n", "# Config post-process", "\n", "\n", "return", "config", "", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.ctdnet.loss.IOU": [[8, 15], ["torch.sigmoid", "torch.sum", "torch.sum", "torch.sum"], "function", ["None"], ["def", "IOU", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "    ", "pred", "=", "torch", ".", "sigmoid", "(", "preds", ")", "\n", "\n", "inter", "=", "torch", ".", "sum", "(", "target", "*", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "\n", "union", "=", "torch", ".", "sum", "(", "target", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "+", "torch", ".", "sum", "(", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "-", "inter", "\n", "iou_loss", "=", "1", "-", "(", "inter", "/", "union", ")", ".", "mean", "(", ")", "\n", "return", "iou_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.ctdnet.loss.Loss": [[16, 29], ["label_edge_prediction", "torch.nn.BCEWithLogitsLoss", "loss.IOU", "torch.nn.BCEWithLogitsLoss", "nn.BCEWithLogitsLoss.mean", "nn.BCEWithLogitsLoss.mean", "nn.BCEWithLogitsLoss.", "nn.BCEWithLogitsLoss.", "label_edge_prediction.gt().float", "target.gt().float", "label_edge_prediction.gt", "target.gt"], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.util.label_edge_prediction", "home.repos.pwc.inspect_result.moothes_salod.base.loss.IOU"], ["", "def", "Loss", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "# preds: Dict type. Customarily, preds['final'] is the final prediction without sigmoid.", "\n", "    ", "bce", "=", "nn", ".", "BCEWithLogitsLoss", "(", "reduction", "=", "'none'", ")", "\n", "\n", "loss", "=", "0", "\n", "for", "pred", "in", "preds", "[", "'sal'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "target", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "loss", "+=", "IOU", "(", "pred", ",", "target", ",", "config", ")", "\n", "\n", "", "gt_edge", "=", "label_edge_prediction", "(", "target", ")", "\n", "for", "pred", "in", "preds", "[", "'detail'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "gt_edge", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "\n", "", "gt_body", "=", "(", "target", "-", "gt_edge", ")", ".", "gt", "(", "0.5", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.ctdnet.model.BasicBlock.__init__": [[36, 43], ["torch.nn.Module.__init__", "model.conv3x3", "torch.nn.BatchNorm2d", "model.conv3x3", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.conv3x3", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.conv3x3"], ["", "", "class", "Encoder", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.ctdnet.model.BasicBlock.forward": [[44, 52], ["torch.nn.functional.relu", "model.BasicBlock.bn2", "torch.nn.functional.relu", "model.BasicBlock.bn1", "model.BasicBlock.conv2", "model.BasicBlock.downsample", "model.BasicBlock.conv1"], "methods", ["None"], ["self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "conv1b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.ctdnet.model.FFM.__init__": [[64, 70], ["torch.nn.Module.__init__", "model.conv3x3", "torch.nn.BatchNorm2d", "model.conv3x3", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.conv3x3", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.conv3x3"], ["self", ".", "bn4d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "out1", ")", ":", "\n", "        ", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2", "=", "F", ".", "max_pool2d", "(", "out1", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3", "=", "F", ".", "max_pool2d", "(", "out2", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.ctdnet.model.FFM.forward": [[71, 76], ["torch.nn.functional.relu", "torch.nn.functional.relu", "model.FFM.bn_1", "model.FFM.bn_2", "model.FFM.conv_1", "model.FFM.conv_2"], "methods", ["None"], ["out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4", "=", "F", ".", "max_pool2d", "(", "out3", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out4", "=", "F", ".", "relu", "(", "self", ".", "bn4", "(", "self", ".", "conv4", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "out1b", "=", "F", ".", "relu", "(", "self", ".", "bn1b", "(", "self", ".", "conv1b", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2b", "=", "F", ".", "relu", "(", "self", ".", "bn2b", "(", "self", ".", "conv2b", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.ctdnet.model.FFM.initialize": [[77, 79], ["weight_init"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.gcpa.model.weight_init"], ["out3b", "=", "F", ".", "relu", "(", "self", ".", "bn3b", "(", "self", ".", "conv3b", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4b", "=", "F", ".", "relu", "(", "self", ".", "bn4b", "(", "self", ".", "conv4b", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.ctdnet.model.CAM.__init__": [[83, 94], ["torch.nn.Module.__init__", "torch.nn.Sequential", "model.conv3x3", "torch.nn.BatchNorm2d", "model.conv3x3", "torch.nn.BatchNorm2d", "model.FFM", "model.conv3x3", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.conv3x3", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.conv3x3", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.conv3x3"], ["out4d", "=", "F", ".", "relu", "(", "self", ".", "bn4d", "(", "self", ".", "conv4d", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "return", "(", "out4b", ",", "out3b", ",", "out2b", ",", "out1b", ")", ",", "(", "out4d", ",", "out3d", ",", "out2d", ",", "out1d", ")", "\n", "\n", "", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n", "\n", "", "", "class", "Network", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "config", ",", "encoder", ",", "feat", ")", ":", "\n", "# encoder: backbone, forward function output 5 encoder features. details in methods/base/model.py", "\n", "# feat: length of encoder features. e.g.: VGG:[64, 128, 256, 512, 512]; Resnet:[64, 256, 512, 1024, 2048]", "\n", "        ", "super", "(", "Network", ",", "self", ")", ".", "__init__", "(", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.ctdnet.model.CAM.forward": [[95, 107], ["torch.nn.functional.relu", "torch.nn.functional.interpolate", "torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.interpolate", "model.CAM.mul", "model.CAM.down", "model.CAM.bn_1", "model.CAM.bn_2", "model.CAM.conv_1", "model.CAM.conv_2", "x_low.size", "x_low.size"], "methods", ["None"], ["\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "conv5b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv2b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv5d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "encoder1", "=", "Encoder", "(", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.ctdnet.model.CAM.initialize": [[108, 110], ["weight_init"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.gcpa.model.weight_init"], ["self", ".", "decoderb", "=", "Decoder", "(", ")", "\n", "self", ".", "decoderd", "=", "Decoder", "(", ")", "\n", "self", ".", "linearb", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.ctdnet.model.SAM.__init__": [[114, 119], ["torch.nn.Module.__init__", "model.conv3x3", "model.conv3x3", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.conv3x3", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.conv3x3"], ["", "def", "forward", "(", "self", ",", "x", ",", "phase", "=", "'test'", ")", ":", "\n", "        ", "shape", "=", "x", ".", "size", "(", ")", "[", "2", ":", "]", "\n", "out1", ",", "out2", ",", "out3", ",", "out4", ",", "out5", "=", "self", ".", "encoder", "(", "x", ")", "\n", "out2b", ",", "out3b", ",", "out4b", ",", "out5b", "=", "self", ".", "conv2b", "(", "out2", ")", ",", "self", ".", "conv3b", "(", "out3", ")", ",", "self", ".", "conv4b", "(", "out4", ")", ",", "self", ".", "conv5b", "(", "out5", ")", "\n", "out2d", ",", "out3d", ",", "out4d", ",", "out5d", "=", "self", ".", "conv2d", "(", "out2", ")", ",", "self", ".", "conv3d", "(", "out3", ")", ",", "self", ".", "conv4d", "(", "out4", ")", ",", "self", ".", "conv5d", "(", "out5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.ctdnet.model.SAM.forward": [[120, 128], ["torch.mean", "torch.max", "torch.cat", "torch.sigmoid", "torch.mul", "torch.nn.functional.relu", "model.SAM.conv_atten", "model.SAM.bn", "model.SAM.conv"], "methods", ["None"], ["outb1", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ")", "\n", "outd1", "=", "self", ".", "decoderd", "(", "[", "out5d", ",", "out4d", ",", "out3d", ",", "out2d", "]", ")", "\n", "out1", "=", "torch", ".", "cat", "(", "[", "outb1", ",", "outd1", "]", ",", "dim", "=", "1", ")", "\n", "outb2", ",", "outd2", "=", "self", ".", "encoder1", "(", "out1", ")", "\n", "outb2", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ",", "outb2", ")", "\n", "outd2", "=", "self", ".", "decoderd", "(", "[", "out5d", ",", "out4d", ",", "out3d", ",", "out2d", "]", ",", "outd2", ")", "\n", "out2", "=", "torch", ".", "cat", "(", "[", "outb2", ",", "outd2", "]", ",", "dim", "=", "1", ")", "\n", "\n", "out1", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.ctdnet.model.SAM.initialize": [[129, 131], ["weight_init"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.gcpa.model.weight_init"], ["outb1", "=", "F", ".", "interpolate", "(", "self", ".", "linearb", "(", "outb1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outd1", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.ctdnet.model.BRM.__init__": [[135, 142], ["torch.nn.Module.__init__", "model.conv1x1", "model.conv3x3", "torch.nn.BatchNorm2d", "model.conv3x3", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.conv1x1", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.conv3x3", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.conv3x3"], ["#return outb1, outd1, out1, outb2, outd2, out2", "\n", "\n", "OutDict", "=", "{", "}", "\n", "OutDict", "[", "'final'", "]", "=", "out2", "\n", "OutDict", "[", "'body'", "]", "=", "[", "outb1", ",", "outb2", "]", "\n", "OutDict", "[", "'detail'", "]", "=", "[", "outd1", ",", "outd2", "]", "\n", "OutDict", "[", "'sal'", "]", "=", "[", "out1", ",", "out2", "]", "\n", "return", "OutDict", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.ctdnet.model.BRM.forward": [[143, 152], ["torch.nn.functional.avg_pool2d", "torch.sigmoid", "torch.nn.functional.relu", "torch.nn.functional.relu", "model.BRM.conv_atten", "torch.mul", "model.BRM.bn_1", "model.BRM.bn_2", "x.size", "model.BRM.conv_1", "model.BRM.conv_2"], "methods", ["None"], ["\n", "\n", "\n", "", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.ctdnet.model.BRM.initialize": [[153, 155], ["weight_init"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.gcpa.model.weight_init"], []], "home.repos.pwc.inspect_result.moothes_salod.ctdnet.model.Network.__init__": [[158, 198], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "model.SAM", "torch.nn.Sequential", "model.FFM", "model.FFM", "model.CAM", "model.FFM", "model.BRM", "model.conv3x3", "model.conv3x3", "model.conv3x3", "model.conv3x3", "model.conv3x3", "model.conv3x3", "model.conv1x1", "torch.nn.BatchNorm2d", "model.conv1x1", "torch.nn.BatchNorm2d", "model.conv1x1", "torch.nn.BatchNorm2d", "model.conv1x1", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.conv3x3", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.conv3x3", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.conv3x3", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.conv3x3", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.conv3x3", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.conv3x3", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.conv1x1", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.conv1x1", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.conv1x1", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.conv1x1"], []], "home.repos.pwc.inspect_result.moothes_salod.ctdnet.model.Network.forward": [[200, 240], ["model.Network.encoder", "torch.nn.functional.avg_pool2d", "model.Network.path1_1", "torch.nn.functional.interpolate", "torch.nn.functional.relu", "model.Network.fuse1_1", "torch.nn.functional.interpolate", "torch.nn.functional.relu", "model.Network.fuse1_2", "model.Network.path2", "model.Network.fuse12", "torch.nn.functional.interpolate", "torch.nn.functional.relu", "torch.nn.functional.interpolate", "model.Network.fuse3", "model.Network.fuse23", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "x.size", "model.Network.path1_2", "model.Network.path1_3", "model.Network.path3", "model.Network.head_1", "model.Network.head_edge", "model.Network.head_2", "model.Network.head_3", "model.Network.head_4", "model.Network.head_5", "l5.size", "l5.size", "l4.size", "l2.size", "l2.size"], "methods", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.ctdnet.model.conv3x3": [[53, 56], ["torch.nn.Conv2d"], "function", ["None"], ["self", ".", "bn3b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.ctdnet.model.conv1x1": [[58, 61], ["torch.nn.Conv2d"], "function", ["None"], ["self", ".", "bn1d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.nldf.config.get_config": [[7, 18], ["base.config.base_config", "base.config.base_config.parse_args", "vars", "base.config.cfg_convert", "print"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.config.base_config", "home.repos.pwc.inspect_result.moothes_salod.base.config.cfg_convert"], ["def", "get_config", "(", ")", ":", "\n", "    ", "strategy", "=", "'base_sgd'", "\n", "parser", "=", "base_config", "(", "strategy", ")", "\n", "# Add custom params here", "\n", "# parser.add_argument('--size', default=320, type=int, help='Input size')", "\n", "\n", "params", "=", "parser", ".", "parse_args", "(", ")", "\n", "config", "=", "vars", "(", "params", ")", "\n", "cfg_convert", "(", "config", ")", "\n", "print", "(", "'Training {} network with {} backbone using Gpu: {}'", ".", "format", "(", "config", "[", "'model_name'", "]", ",", "config", "[", "'backbone'", "]", ",", "config", "[", "'gpus'", "]", ")", ")", "\n", "\n", "# Config post-process", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.nldf.loss.GradLayer.__init__": [[6, 11], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "loss.GradLayer.set_weight"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.nldf.loss.GradLayer.set_weight"], ["\n", "\n", "def", "IOU", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "    ", "pred", "=", "torch", ".", "sigmoid", "(", "preds", ")", "\n", "\n", "inter", "=", "torch", ".", "sum", "(", "target", "*", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.nldf.loss.GradLayer.set_weight": [[12, 18], ["torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["None"], ["union", "=", "torch", ".", "sum", "(", "target", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "+", "torch", ".", "sum", "(", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "-", "inter", "\n", "iou_loss", "=", "1", "-", "(", "inter", "/", "union", ")", ".", "mean", "(", ")", "\n", "return", "iou_loss", "\n", "\n", "", "def", "Loss", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "# preds: Dict type. Customarily, preds['final'] is the final prediction without sigmoid.", "\n", "    ", "bce", "=", "nn", ".", "BCEWithLogitsLoss", "(", "reduction", "=", "'none'", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.nldf.loss.GradLayer.forward": [[19, 23], ["loss.GradLayer.grad_x", "loss.GradLayer.grad_y", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow"], "methods", ["None"], ["\n", "loss", "=", "0", "\n", "for", "pred", "in", "preds", "[", "'sal'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "target", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "loss", "+=", "IOU", "(", "pred", ",", "target", ",", "config", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.nldf.loss.Loss_orig.__init__": [[37, 42], ["torch.nn.Module.__init__", "loss.GradLayer"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], []], "home.repos.pwc.inspect_result.moothes_salod.nldf.loss.Loss_orig.forward": [[43, 56], ["torch.binary_cross_entropy", "torch.binary_cross_entropy", "torch.tanh", "torch.tanh", "torch.gt().float", "torch.gt().float", "torch.gt().float", "torch.gt().float", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "F.binary_cross_entropy.Loss_orig.gradlayer", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.gt", "torch.gt", "torch.gt", "torch.gt", "F.binary_cross_entropy.Loss_orig.gradlayer", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "x.sum", "label.sum"], "methods", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.nldf.loss.Loss": [[25, 35], ["pred.sigmoid_.sigmoid_", "torch.binary_cross_entropy", "pred.sigmoid_.sum", "target.sum"], "function", ["None"], ["", "gt_edge", "=", "label_edge_prediction", "(", "target", ")", "\n", "for", "pred", "in", "preds", "[", "'detail'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "gt_edge", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "\n", "", "gt_body", "=", "(", "target", "-", "gt_edge", ")", ".", "gt", "(", "0.5", ")", "\n", "for", "pred", "in", "preds", "[", "'body'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "gt_body", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "\n", "", "return", "loss", "\n", "\n", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.nldf.model.ConvConstract.__init__": [[15, 19], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.AvgPool2d", "torch.nn.AvgPool2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.nldf.model.ConvConstract.forward": [[20, 24], ["torch.relu", "torch.relu", "model.ConvConstract.cons1", "model.ConvConstract.conv1"], "methods", ["None"], ["self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "input1", ",", "input2", "=", "[", "0", ",", "0", ",", "0", ",", "0", "]", ")", ":", "\n", "        ", "out0", "=", "F", ".", "relu", "(", "self", ".", "bn0", "(", "self", ".", "conv0", "(", "input1", "[", "0", "]", "+", "input2", "[", "0", "]", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out0", "=", "F", ".", "interpolate", "(", "out0", ",", "size", "=", "input1", "[", "1", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.nldf.model.Network.__init__": [[30, 53], ["torch.nn.Module.__init__", "enumerate", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "feat_layers.append", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.AdaptiveAvgPool2d", "torch.nn.AdaptiveAvgPool2d", "model.ConvConstract", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["return", "out3", "\n", "\n", "", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n", "\n", "", "", "class", "Encoder", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "conv1b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.nldf.model.Network.forward": [[54, 86], ["range", "model.Network.glob", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "range", "model.Network.conv_g", "model.Network.conv_l", "list", "len", "model.Network.encoder", "torch.relu", "torch.relu", "sources.append", "b", "torch.relu", "torch.relu", "zip", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["self", ".", "conv4b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "conv1d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "out1", ")", ":", "\n", "        ", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2", "=", "F", ".", "max_pool2d", "(", "out1", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3", "=", "F", ".", "max_pool2d", "(", "out2", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4", "=", "F", ".", "max_pool2d", "(", "out3", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out4", "=", "F", ".", "relu", "(", "self", ".", "bn4", "(", "self", ".", "conv4", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "out1b", "=", "F", ".", "relu", "(", "self", ".", "bn1b", "(", "self", ".", "conv1b", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2b", "=", "F", ".", "relu", "(", "self", ".", "bn2b", "(", "self", ".", "conv2b", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3b", "=", "F", ".", "relu", "(", "self", ".", "bn3b", "(", "self", ".", "conv3b", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4b", "=", "F", ".", "relu", "(", "self", ".", "bn4b", "(", "self", ".", "conv4b", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "out1d", "=", "F", ".", "relu", "(", "self", ".", "bn1d", "(", "self", ".", "conv1d", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2d", "=", "F", ".", "relu", "(", "self", ".", "bn2d", "(", "self", ".", "conv2d", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3d", "=", "F", ".", "relu", "(", "self", ".", "bn3d", "(", "self", ".", "conv3d", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4d", "=", "F", ".", "relu", "(", "self", ".", "bn4d", "(", "self", ".", "conv4d", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "return", "(", "out4b", ",", "out3b", ",", "out2b", ",", "out1b", ")", ",", "(", "out4d", ",", "out3d", ",", "out2d", ",", "out1d", ")", "\n", "\n", "", "def", "initialize", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.dss.config.get_config": [[8, 19], ["base.config.base_config", "base.config.base_config.parse_args", "vars", "base.config.cfg_convert", "print"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.config.base_config", "home.repos.pwc.inspect_result.moothes_salod.base.config.cfg_convert"], ["    ", "strategy", "=", "'base_sgd'", "\n", "parser", "=", "base_config", "(", "strategy", ")", "\n", "# Add custom params here", "\n", "# parser.add_argument('--size', default=320, type=int, help='Input size')", "\n", "\n", "params", "=", "parser", ".", "parse_args", "(", ")", "\n", "config", "=", "vars", "(", "params", ")", "\n", "cfg_convert", "(", "config", ")", "\n", "print", "(", "'Training {} network with {} backbone using Gpu: {}'", ".", "format", "(", "config", "[", "'model_name'", "]", ",", "config", "[", "'backbone'", "]", ",", "config", "[", "'gpus'", "]", ")", ")", "\n", "\n", "# Config post-process", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.dss.loss.CTLoss": [[6, 11], ["torch.nn.BCEWithLogitsLoss", "torch.avg_pool2d", "label_edge_prediction", "nn.BCEWithLogitsLoss."], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.util.label_edge_prediction"], ["\n", "\n", "def", "IOU", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "    ", "pred", "=", "torch", ".", "sigmoid", "(", "preds", ")", "\n", "\n", "inter", "=", "torch", ".", "sum", "(", "target", "*", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.dss.loss.Fscore": [[13, 24], ["torch.sigmoid", "fs.mean", "torch.avg_pool2d", "tp.sum", "torch.sigmoid.sum", "label_edge_prediction", "target.sum"], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.util.label_edge_prediction"], ["iou_loss", "=", "1", "-", "(", "inter", "/", "union", ")", ".", "mean", "(", ")", "\n", "return", "iou_loss", "\n", "\n", "", "def", "Loss", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "# preds: Dict type. Customarily, preds['final'] is the final prediction without sigmoid.", "\n", "    ", "bce", "=", "nn", ".", "BCEWithLogitsLoss", "(", "reduction", "=", "'none'", ")", "\n", "\n", "loss", "=", "0", "\n", "for", "pred", "in", "preds", "[", "'sal'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "target", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "loss", "+=", "IOU", "(", "pred", ",", "target", ",", "config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.dss.loss.cff_loss": [[25, 30], ["loss.CTLoss", "loss.Fscore"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.loss.CTLoss", "home.repos.pwc.inspect_result.moothes_salod.base.loss.Fscore"], ["", "gt_edge", "=", "label_edge_prediction", "(", "target", ")", "\n", "for", "pred", "in", "preds", "[", "'detail'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "gt_edge", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "\n", "", "gt_body", "=", "(", "target", "-", "gt_edge", ")", ".", "gt", "(", "0.5", ")", "\n", "for", "pred", "in", "preds", "[", "'body'", "]", ":", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.dss.loss.Loss_new": [[32, 39], ["zip", "loss.cff_loss"], "function", ["home.repos.pwc.inspect_result.moothes_salod.itsd.loss.cff_loss"], ["\n", "", "return", "loss", "\n", "\n", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.dss.loss.Loss": [[40, 47], ["zip", "torch.binary_cross_entropy_with_logits"], "function", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.dss.model.ConcatLayer.__init__": [[38, 46], ["torch.nn.Module.__init__", "range", "torch.nn.ModuleList", "torch.nn.Conv2d", "len", "up.append", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.dss.model.ConcatLayer.forward": [[47, 62], ["enumerate", "elem_x.append", "model.ConcatLayer.deconv", "model.ConcatLayer.conv", "model.ConcatLayer.conv", "torch.cat", "torch.cat"], "methods", ["None"], ["\n", "self", ".", "conv1b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "conv1d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.dss.model.FeatLayer.__init__": [[66, 71], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["", "def", "forward", "(", "self", ",", "out1", ")", ":", "\n", "        ", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2", "=", "F", ".", "max_pool2d", "(", "out1", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3", "=", "F", ".", "max_pool2d", "(", "out2", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.dss.model.FeatLayer.forward": [[72, 74], ["model.FeatLayer.main"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.None.test.main"], ["out4", "=", "F", ".", "max_pool2d", "(", "out3", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out4", "=", "F", ".", "relu", "(", "self", ".", "bn4", "(", "self", ".", "conv4", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.dss.model.FusionLayer.__init__": [[78, 83], ["torch.nn.Module.__init__", "torch.nn.Parameter", "model.FusionLayer._reset_parameters", "torch.randn"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.dss.model.FusionLayer._reset_parameters"], ["out4b", "=", "F", ".", "relu", "(", "self", ".", "bn4b", "(", "self", ".", "conv4b", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "out1d", "=", "F", ".", "relu", "(", "self", ".", "bn1d", "(", "self", ".", "conv1d", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2d", "=", "F", ".", "relu", "(", "self", ".", "bn2d", "(", "self", ".", "conv2d", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3d", "=", "F", ".", "relu", "(", "self", ".", "bn3d", "(", "self", ".", "conv3d", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4d", "=", "F", ".", "relu", "(", "self", ".", "bn4d", "(", "self", ".", "conv4d", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.dss.model.FusionLayer._reset_parameters": [[84, 86], ["torch.nn.init.constant_"], "methods", ["None"], ["return", "(", "out4b", ",", "out3b", ",", "out2b", ",", "out1b", ")", ",", "(", "out4d", ",", "out3d", ",", "out2d", ",", "out1d", ")", "\n", "\n", "", "def", "initialize", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.dss.model.FusionLayer.forward": [[87, 91], ["range"], "methods", ["None"], ["        ", "weight_init", "(", "self", ")", "\n", "\n", "\n", "", "", "class", "Network", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "config", ",", "encoder", ",", "feat", ")", ":", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.dss.model.DSS.__init__": [[110, 120], ["torch.nn.Module.__init__", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.AvgPool2d", "model.FusionLayer"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["self", ".", "linearb", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "lineard", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ",", "phase", "=", "'test'", ")", ":", "\n", "        ", "shape", "=", "x", ".", "size", "(", ")", "[", "2", ":", "]", "\n", "out1", ",", "out2", ",", "out3", ",", "out4", ",", "out5", "=", "self", ".", "encoder", "(", "x", ")", "\n", "out2b", ",", "out3b", ",", "out4b", ",", "out5b", "=", "self", ".", "conv2b", "(", "out2", ")", ",", "self", ".", "conv3b", "(", "out3", ")", ",", "self", ".", "conv4b", "(", "out4", ")", ",", "self", ".", "conv5b", "(", "out5", ")", "\n", "out2d", ",", "out3d", ",", "out4d", ",", "out5d", "=", "self", ".", "conv2d", "(", "out2", ")", ",", "self", ".", "conv3d", "(", "out3", ")", ",", "self", ".", "conv4d", "(", "out4", ")", ",", "self", ".", "conv5d", "(", "out5", ")", "\n", "\n", "outb1", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.dss.model.DSS.forward": [[121, 152], ["model.DSS.base", "range", "y.append", "enumerate", "torch.cat().mean", "list", "list", "list", "len", "y.append", "range", "back.append", "back.append", "back.append", "model.DSS.pool", "len", "model.DSS.fuse", "torch.cat().mean", "torch.cat", "torch.cat"], "methods", ["None"], ["outd1", "=", "self", ".", "decoderd", "(", "[", "out5d", ",", "out4d", ",", "out3d", ",", "out2d", "]", ")", "\n", "out1", "=", "torch", ".", "cat", "(", "[", "outb1", ",", "outd1", "]", ",", "dim", "=", "1", ")", "\n", "outb2", ",", "outd2", "=", "self", ".", "encoder1", "(", "out1", ")", "\n", "outb2", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ",", "outb2", ")", "\n", "outd2", "=", "self", ".", "decoderd", "(", "[", "out5d", ",", "out4d", ",", "out3d", ",", "out2d", "]", ",", "outd2", ")", "\n", "out2", "=", "torch", ".", "cat", "(", "[", "outb2", ",", "outd2", "]", ",", "dim", "=", "1", ")", "\n", "\n", "out1", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outb1", "=", "F", ".", "interpolate", "(", "self", ".", "linearb", "(", "outb1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outd1", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "\n", "out2", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outb2", "=", "F", ".", "interpolate", "(", "self", ".", "linearb", "(", "outb2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outd2", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "#return outb1, outd1, out1, outb2, outd2, out2", "\n", "\n", "OutDict", "=", "{", "}", "\n", "OutDict", "[", "'final'", "]", "=", "out2", "\n", "OutDict", "[", "'body'", "]", "=", "[", "outb1", ",", "outb2", "]", "\n", "OutDict", "[", "'detail'", "]", "=", "[", "outd1", ",", "outd2", "]", "\n", "OutDict", "[", "'sal'", "]", "=", "[", "out1", ",", "out2", "]", "\n", "return", "OutDict", "\n", "\n", "\n", "\n", "", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.dss.model.extra_layer": [[94, 105], ["enumerate", "model.FeatLayer", "model.ConcatLayer"], "function", ["None"], ["        ", "super", "(", "Network", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "conv5b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv2b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv5d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.dss.model.build_model": [[155, 157], ["model.DSS", "model.extra_layer", "base.encoder.vgg.vgg"], "function", ["home.repos.pwc.inspect_result.moothes_salod.poolnet.model_new.extra_layer", "home.repos.pwc.inspect_result.moothes_salod.encoder.vgg.vgg"], []], "home.repos.pwc.inspect_result.moothes_salod.dss.model.Network": [[158, 168], ["model.DSS", "model.extra_layer"], "function", ["home.repos.pwc.inspect_result.moothes_salod.poolnet.model_new.extra_layer"], []], "home.repos.pwc.inspect_result.moothes_salod.dss.model.xavier": [[170, 172], ["torch.nn.init.xavier_uniform_"], "function", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.dss.model.weights_init": [[174, 180], ["isinstance", "model.xavier", "isinstance", "torch.nn.init.constant_", "torch.nn.init.constant_"], "function", ["home.repos.pwc.inspect_result.moothes_salod.egnet.model.xavier"], []], "home.repos.pwc.inspect_result.moothes_salod.picanet.config.get_config": [[7, 23], ["base.config.base_config", "base.config.base_config.parse_args", "vars", "base.config.cfg_convert", "print"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.config.base_config", "home.repos.pwc.inspect_result.moothes_salod.base.config.cfg_convert"], ["def", "get_config", "(", ")", ":", "\n", "    ", "strategy", "=", "'base_sgd'", "\n", "parser", "=", "base_config", "(", "strategy", ")", "\n", "# Add custom params here", "\n", "# parser.add_argument('--size', default=320, type=int, help='Input size')", "\n", "\n", "params", "=", "parser", ".", "parse_args", "(", ")", "\n", "config", "=", "vars", "(", "params", ")", "\n", "cfg_convert", "(", "config", ")", "\n", "print", "(", "'Training {} network with {} backbone using Gpu: {}'", ".", "format", "(", "config", "[", "'model_name'", "]", ",", "config", "[", "'backbone'", "]", ",", "config", "[", "'gpus'", "]", ")", ")", "\n", "\n", "# Config post-process", "\n", "\n", "return", "config", "", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.picanet.loss.Loss": [[8, 24], ["torch.nn.BCEWithLogitsLoss", "zip", "torch.nn.functional.interpolate", "tar.gt().float.gt().float", "nn.BCEWithLogitsLoss.mean", "tar.gt().float.gt", "pred.size", "nn.BCEWithLogitsLoss."], "function", ["None"], ["def", "IOU", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "    ", "pred", "=", "torch", ".", "sigmoid", "(", "preds", ")", "\n", "\n", "inter", "=", "torch", ".", "sum", "(", "target", "*", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "\n", "union", "=", "torch", ".", "sum", "(", "target", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "+", "torch", ".", "sum", "(", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "-", "inter", "\n", "iou_loss", "=", "1", "-", "(", "inter", "/", "union", ")", ".", "mean", "(", ")", "\n", "return", "iou_loss", "\n", "\n", "", "def", "Loss", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "# preds: Dict type. Customarily, preds['final'] is the final prediction without sigmoid.", "\n", "    ", "bce", "=", "nn", ".", "BCEWithLogitsLoss", "(", "reduction", "=", "'none'", ")", "\n", "\n", "loss", "=", "0", "\n", "for", "pred", "in", "preds", "[", "'sal'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "target", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "loss", "+=", "IOU", "(", "pred", ",", "target", ",", "config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.picanet.model.DecoderCell.__init__": [[31, 50], ["torch.nn.Module.__init__", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "model.PicanetG", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "model.PicanetL"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["\n", "", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n", "\n", "", "", "class", "Encoder", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "conv1b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.picanet.model.DecoderCell.forward": [[51, 83], ["model.DecoderCell.bn_en", "torch.nn.functional.relu", "torch.cat", "model.DecoderCell.conv1", "torch.nn.functional.relu", "len", "torch.nn.functional.interpolate", "model.DecoderCell.picanet", "torch.cat", "model.DecoderCell.conv2", "model.DecoderCell.bn_feature", "torch.nn.functional.relu", "model.DecoderCell.conv3", "model.DecoderCell.conv2", "torch.nn.functional.relu.size", "torch.nn.functional.interpolate.size", "torch.nn.functional.interpolate.size", "torch.nn.functional.relu.size"], "methods", ["None"], ["self", ".", "bn2b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "conv1d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "out1", ")", ":", "\n", "        ", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2", "=", "F", ".", "max_pool2d", "(", "out1", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3", "=", "F", ".", "max_pool2d", "(", "out2", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4", "=", "F", ".", "max_pool2d", "(", "out3", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out4", "=", "F", ".", "relu", "(", "self", ".", "bn4", "(", "self", ".", "conv4", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "out1b", "=", "F", ".", "relu", "(", "self", ".", "bn1b", "(", "self", ".", "conv1b", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2b", "=", "F", ".", "relu", "(", "self", ".", "bn2b", "(", "self", ".", "conv2b", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3b", "=", "F", ".", "relu", "(", "self", ".", "bn3b", "(", "self", ".", "conv3b", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4b", "=", "F", ".", "relu", "(", "self", ".", "bn4b", "(", "self", ".", "conv4b", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "out1d", "=", "F", ".", "relu", "(", "self", ".", "bn1d", "(", "self", ".", "conv1d", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2d", "=", "F", ".", "relu", "(", "self", ".", "bn2d", "(", "self", ".", "conv2d", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3d", "=", "F", ".", "relu", "(", "self", ".", "bn3d", "(", "self", ".", "conv3d", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4d", "=", "F", ".", "relu", "(", "self", ".", "bn4d", "(", "self", ".", "conv4d", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.picanet.model.PicanetG.__init__": [[86, 91], ["torch.nn.Module.__init__", "model.Renet"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n", "\n", "", "", "class", "Network", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "config", ",", "encoder", ",", "feat", ")", ":", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.picanet.model.PicanetG.forward": [[92, 109], ["x.reshape.reshape.size", "model.PicanetG.renet", "torch.nn.functional.softmax", "torch.nn.functional.unfold", "x.reshape.reshape.reshape", "kernel.reshape.reshape.reshape", "torch.matmul", "x.reshape.reshape.reshape"], "methods", ["None"], ["# encoder: backbone, forward function output 5 encoder features. details in methods/base/model.py", "\n", "# feat: length of encoder features. e.g.: VGG:[64, 128, 256, 512, 512]; Resnet:[64, 256, 512, 1024, 2048]", "\n", "        ", "super", "(", "Network", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "conv5b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv2b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv5d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "encoder1", "=", "Encoder", "(", ")", "\n", "self", ".", "decoderb", "=", "Decoder", "(", ")", "\n", "self", ".", "decoderd", "=", "Decoder", "(", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.picanet.model.PicanetL.__init__": [[130, 134], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["outd1", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "\n", "out2", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outb2", "=", "F", ".", "interpolate", "(", "self", ".", "linearb", "(", "outb2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outd2", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.picanet.model.PicanetL.forward": [[135, 151], ["x.reshape.reshape.size", "model.PicanetL.conv1", "model.PicanetL.conv2", "torch.nn.functional.softmax", "kernel.reshape.reshape.reshape", "torch.nn.functional.unfold", "x.reshape.reshape.reshape", "torch.mul", "torch.sum", "x.reshape.reshape.reshape"], "methods", ["None"], ["#return outb1, outd1, out1, outb2, outd2, out2", "\n", "\n", "OutDict", "=", "{", "}", "\n", "OutDict", "[", "'final'", "]", "=", "out2", "\n", "OutDict", "[", "'body'", "]", "=", "[", "outb1", ",", "outb2", "]", "\n", "OutDict", "[", "'detail'", "]", "=", "[", "outd1", ",", "outd2", "]", "\n", "OutDict", "[", "'sal'", "]", "=", "[", "out1", ",", "out2", "]", "\n", "return", "OutDict", "\n", "\n", "\n", "\n", "", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.picanet.model.Renet.__init__": [[154, 164], ["torch.nn.Module.__init__", "torch.nn.LSTM", "torch.nn.LSTM", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], []], "home.repos.pwc.inspect_result.moothes_salod.picanet.model.Renet.forward": [[165, 181], ["torch.transpose", "range", "torch.stack", "range", "torch.stack", "torch.transpose", "model.Renet.conv", "model.Renet.vertical", "temp.append", "model.Renet.horizontal", "temp.append", "model.Renet.size", "model.Renet.size"], "methods", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.picanet.model.Decoder.__init__": [[193, 216], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "feat.append", "torch.nn.ModuleList", "range", "model.Decoder.decoder.append", "model.Decoder.decoder.append", "model.DecoderCell", "model.DecoderCell"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], []], "home.repos.pwc.inspect_result.moothes_salod.picanet.model.Decoder.forward": [[217, 231], ["en_out.append", "range", "torch.nn.functional.interpolate", "model.Decoder.enc_conv", "pred.append"], "methods", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.picanet.model.Network.__init__": [[233, 257], ["torch.nn.Module.__init__", "model.Decoder"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], []], "home.repos.pwc.inspect_result.moothes_salod.picanet.model.Network.forward": [[258, 277], ["model.Network.encoder", "model.Network.decoder", "x.size"], "methods", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.picanet.model.make_layers": [[10, 27], ["torch.nn.Sequential", "torch.nn.MaxPool2d", "torch.nn.MaxPool2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU"], "function", ["None"], ["class", "Decoder", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv0", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn0", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "input1", ",", "input2", "=", "[", "0", ",", "0", ",", "0", ",", "0", "]", ")", ":", "\n", "        ", "out0", "=", "F", ".", "relu", "(", "self", ".", "bn0", "(", "self", ".", "conv0", "(", "input1", "[", "0", "]", "+", "input2", "[", "0", "]", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out0", "=", "F", ".", "interpolate", "(", "out0", ",", "size", "=", "input1", "[", "1", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "input1", "[", "1", "]", "+", "input2", "[", "1", "]", "+", "out0", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out1", "=", "F", ".", "interpolate", "(", "out1", ",", "size", "=", "input1", "[", "2", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "input1", "[", "2", "]", "+", "input2", "[", "2", "]", "+", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.pfsnet.config.get_config": [[7, 22], ["base.config.base_config", "base.config.base_config.parse_args", "vars", "base.config.cfg_convert", "print"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.config.base_config", "home.repos.pwc.inspect_result.moothes_salod.base.config.cfg_convert"], ["def", "get_config", "(", ")", ":", "\n", "    ", "strategy", "=", "'base_sgd'", "\n", "parser", "=", "base_config", "(", "strategy", ")", "\n", "# Add custom params here", "\n", "# parser.add_argument('--size', default=320, type=int, help='Input size')", "\n", "\n", "params", "=", "parser", ".", "parse_args", "(", ")", "\n", "config", "=", "vars", "(", "params", ")", "\n", "cfg_convert", "(", "config", ")", "\n", "print", "(", "'Training {} network with {} backbone using Gpu: {}'", ".", "format", "(", "config", "[", "'model_name'", "]", ",", "config", "[", "'backbone'", "]", ",", "config", "[", "'gpus'", "]", ")", ")", "\n", "\n", "# Config post-process", "\n", "\n", "return", "config", "", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.pfsnet.loss.IOU": [[8, 15], ["torch.sigmoid", "torch.sum", "torch.sum", "torch.sum"], "function", ["None"], ["def", "IOU", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "    ", "pred", "=", "torch", ".", "sigmoid", "(", "preds", ")", "\n", "\n", "inter", "=", "torch", ".", "sum", "(", "target", "*", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "\n", "union", "=", "torch", ".", "sum", "(", "target", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "+", "torch", ".", "sum", "(", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "-", "inter", "\n", "iou_loss", "=", "1", "-", "(", "inter", "/", "union", ")", ".", "mean", "(", ")", "\n", "return", "iou_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.pfsnet.loss.Loss": [[16, 23], ["torch.nn.BCEWithLogitsLoss", "nn.BCEWithLogitsLoss.mean", "loss.IOU", "target.gt().float", "nn.BCEWithLogitsLoss.", "target.gt().float", "target.gt", "target.gt"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.loss.IOU"], ["", "def", "Loss", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "# preds: Dict type. Customarily, preds['final'] is the final prediction without sigmoid.", "\n", "    ", "bce", "=", "nn", ".", "BCEWithLogitsLoss", "(", "reduction", "=", "'none'", ")", "\n", "\n", "loss", "=", "0", "\n", "for", "pred", "in", "preds", "[", "'sal'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "target", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "loss", "+=", "IOU", "(", "pred", ",", "target", ",", "config", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.pfsnet.model.Rblock.__init__": [[34, 43], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.AdaptiveAvgPool2d", "torch.nn.Conv2d", "torch.nn.Softmax", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["\n", "\n", "", "", "class", "Encoder", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.pfsnet.model.Rblock.forward": [[44, 52], ["model.Rblock.squeeze2", "torch.cat", "model.Rblock.convg", "torch.mul", "torch.nn.functional.relu", "model.Rblock.squeeze1", "model.Rblock.squeeze1", "model.Rblock.gap", "model.Rblock.bnAB", "model.Rblock.sftmax", "model.Rblock.convAB"], "methods", ["None"], ["self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "conv1b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.pfsnet.model.Rblock.initialize": [[52, 55], ["weight_init", "print"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.gcpa.model.weight_init"], ["self", ".", "conv3b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.pfsnet.model.Yblock.__init__": [[57, 71], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.AdaptiveAvgPool2d", "torch.nn.Conv2d", "torch.nn.Softmax"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["self", ".", "conv1d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "out1", ")", ":", "\n", "        ", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2", "=", "F", ".", "max_pool2d", "(", "out1", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3", "=", "F", ".", "max_pool2d", "(", "out2", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.pfsnet.model.Yblock.forward": [[73, 85], ["torch.mul", "torch.nn.functional.relu", "torch.nn.functional.relu", "torch.cat", "model.Yblock.convg", "torch.mul", "torch.nn.functional.relu", "torch.nn.functional.interpolate", "model.Yblock.bnB1", "model.Yblock.bnA1", "model.Yblock.gap", "model.Yblock.bnAB", "torch.nn.functional.relu.size", "torch.nn.functional.interpolate.size", "model.Yblock.convB1", "model.Yblock.convA1", "model.Yblock.sftmax", "model.Yblock.convAB", "torch.nn.functional.relu.size"], "methods", ["None"], ["out4", "=", "F", ".", "relu", "(", "self", ".", "bn4", "(", "self", ".", "conv4", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "out1b", "=", "F", ".", "relu", "(", "self", ".", "bn1b", "(", "self", ".", "conv1b", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2b", "=", "F", ".", "relu", "(", "self", ".", "bn2b", "(", "self", ".", "conv2b", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3b", "=", "F", ".", "relu", "(", "self", ".", "bn3b", "(", "self", ".", "conv3b", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4b", "=", "F", ".", "relu", "(", "self", ".", "bn4b", "(", "self", ".", "conv4b", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "out1d", "=", "F", ".", "relu", "(", "self", ".", "bn1d", "(", "self", ".", "conv1d", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2d", "=", "F", ".", "relu", "(", "self", ".", "bn2d", "(", "self", ".", "conv2d", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3d", "=", "F", ".", "relu", "(", "self", ".", "bn3d", "(", "self", ".", "conv3d", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4d", "=", "F", ".", "relu", "(", "self", ".", "bn4d", "(", "self", ".", "conv4d", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "return", "(", "out4b", ",", "out3b", ",", "out2b", ",", "out1b", ")", ",", "(", "out4d", ",", "out3d", ",", "out2d", ",", "out1d", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.pfsnet.model.Yblock.initialize": [[86, 89], ["weight_init", "print"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.gcpa.model.weight_init"], ["", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.pfsnet.model.Network.__init__": [[91, 127], ["torch.nn.Module.__init__", "model.Rblock", "model.Rblock", "model.Rblock", "model.Rblock", "model.Rblock", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "model.Yblock", "model.Yblock", "model.Yblock", "model.Yblock", "model.Yblock", "model.Yblock", "model.Yblock", "model.Yblock", "model.Yblock", "model.Yblock", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ",", "encoder", ",", "feat", ")", ":", "\n", "# encoder: backbone, forward function output 5 encoder features. details in methods/base/model.py", "\n", "# feat: length of encoder features. e.g.: VGG:[64, 128, 256, 512, 512]; Resnet:[64, 256, 512, 1024, 2048]", "\n", "        ", "super", "(", "Network", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "conv5b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv2b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv5d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "encoder1", "=", "Encoder", "(", ")", "\n", "self", ".", "decoderb", "=", "Decoder", "(", ")", "\n", "self", ".", "decoderd", "=", "Decoder", "(", ")", "\n", "self", ".", "linearb", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "lineard", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ",", "phase", "=", "'test'", ")", ":", "\n", "        ", "shape", "=", "x", ".", "size", "(", ")", "[", "2", ":", "]", "\n", "out1", ",", "out2", ",", "out3", ",", "out4", ",", "out5", "=", "self", ".", "encoder", "(", "x", ")", "\n", "out2b", ",", "out3b", ",", "out4b", ",", "out5b", "=", "self", ".", "conv2b", "(", "out2", ")", ",", "self", ".", "conv3b", "(", "out3", ")", ",", "self", ".", "conv4b", "(", "out4", ")", ",", "self", ".", "conv5b", "(", "out5", ")", "\n", "out2d", ",", "out3d", ",", "out4d", ",", "out5d", "=", "self", ".", "conv2d", "(", "out2", ")", ",", "self", ".", "conv3d", "(", "out3", ")", ",", "self", ".", "conv4d", "(", "out4", ")", ",", "self", ".", "conv5d", "(", "out5", ")", "\n", "\n", "outb1", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ")", "\n", "outd1", "=", "self", ".", "decoderd", "(", "[", "out5d", ",", "out4d", ",", "out3d", ",", "out2d", "]", ")", "\n", "out1", "=", "torch", ".", "cat", "(", "[", "outb1", ",", "outd1", "]", ",", "dim", "=", "1", ")", "\n", "outb2", ",", "outd2", "=", "self", ".", "encoder1", "(", "out1", ")", "\n", "outb2", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ",", "outb2", ")", "\n", "outd2", "=", "self", ".", "decoderd", "(", "[", "out5d", ",", "out4d", ",", "out3d", ",", "out2d", "]", ",", "outd2", ")", "\n", "out2", "=", "torch", ".", "cat", "(", "[", "outb2", ",", "outd2", "]", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.pfsnet.model.Network.forward": [[129, 169], ["model.Network.encoder", "model.Network.squeeze5", "torch.nn.functional.interpolate", "torch.nn.functional.relu", "model.Network.squeeze4", "torch.nn.functional.interpolate", "torch.nn.functional.relu", "model.Network.squeeze3", "torch.nn.functional.interpolate", "torch.nn.functional.relu", "model.Network.squeeze2", "torch.nn.functional.interpolate", "torch.nn.functional.relu", "model.Network.squeeze1", "model.Network.Y14", "model.Network.Y13", "model.Network.Y12", "model.Network.Y11", "model.Network.Y21", "model.Network.Y22", "model.Network.Y23", "model.Network.Y32", "model.Network.Y31", "model.Network.Y41", "torch.nn.functional.interpolate", "torch.cuda.empty_cache", "x.size", "model.Network.bn1", "model.Network.bn2", "model.Network.bn3", "model.Network.bn4", "model.Network.linearp1", "model.Network.conv1", "model.Network.conv2", "model.Network.conv3", "model.Network.conv4", "model.Network.size", "model.Network.size", "model.Network.size", "s1.size"], "methods", ["None"], ["outb1", "=", "F", ".", "interpolate", "(", "self", ".", "linearb", "(", "outb1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outd1", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "\n", "out2", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outb2", "=", "F", ".", "interpolate", "(", "self", ".", "linearb", "(", "outb2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outd2", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "#return outb1, outd1, out1, outb2, outd2, out2", "\n", "\n", "OutDict", "=", "{", "}", "\n", "OutDict", "[", "'final'", "]", "=", "out2", "\n", "OutDict", "[", "'body'", "]", "=", "[", "outb1", ",", "outb2", "]", "\n", "OutDict", "[", "'detail'", "]", "=", "[", "outd1", ",", "outd2", "]", "\n", "OutDict", "[", "'sal'", "]", "=", "[", "out1", ",", "out2", "]", "\n", "return", "OutDict", "\n", "\n", "\n", "\n", "", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.scrn.config.get_config": [[8, 19], ["base.config.base_config", "base.config.base_config.parse_args", "vars", "base.config.cfg_convert", "print"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.config.base_config", "home.repos.pwc.inspect_result.moothes_salod.base.config.cfg_convert"], ["    ", "strategy", "=", "'base_sgd'", "\n", "parser", "=", "base_config", "(", "strategy", ")", "\n", "# Add custom params here", "\n", "# parser.add_argument('--size', default=320, type=int, help='Input size')", "\n", "\n", "params", "=", "parser", ".", "parse_args", "(", ")", "\n", "config", "=", "vars", "(", "params", ")", "\n", "cfg_convert", "(", "config", ")", "\n", "print", "(", "'Training {} network with {} backbone using Gpu: {}'", ".", "format", "(", "config", "[", "'model_name'", "]", ",", "config", "[", "'backbone'", "]", ",", "config", "[", "'gpus'", "]", ")", ")", "\n", "\n", "# Config post-process", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.scrn.loss.Loss": [[10, 23], ["torch.nn.BCEWithLogitsLoss", "target.gt().float().cuda", "nn.BCEWithLogitsLoss.", "util.label_edge_prediction", "nn.BCEWithLogitsLoss.", "target.gt().float", "target.gt"], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.util.label_edge_prediction"], ["\n", "inter", "=", "torch", ".", "sum", "(", "target", "*", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "\n", "union", "=", "torch", ".", "sum", "(", "target", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "+", "torch", ".", "sum", "(", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "-", "inter", "\n", "iou_loss", "=", "1", "-", "(", "inter", "/", "union", ")", ".", "mean", "(", ")", "\n", "return", "iou_loss", "\n", "\n", "", "def", "Loss", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "# preds: Dict type. Customarily, preds['final'] is the final prediction without sigmoid.", "\n", "    ", "bce", "=", "nn", ".", "BCEWithLogitsLoss", "(", "reduction", "=", "'none'", ")", "\n", "\n", "loss", "=", "0", "\n", "for", "pred", "in", "preds", "[", "'sal'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "target", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "loss", "+=", "IOU", "(", "pred", ",", "target", ",", "config", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.scrn.model.BasicConv2d.__init__": [[11, 18], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv0", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn0", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.scrn.model.BasicConv2d.forward": [[20, 23], ["model.BasicConv2d.conv_bn"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.mobilev3.conv_bn"], ["self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "input1", ",", "input2", "=", "[", "0", ",", "0", ",", "0", ",", "0", "]", ")", ":", "\n", "        ", "out0", "=", "F", ".", "relu", "(", "self", ".", "bn0", "(", "self", ".", "conv0", "(", "input1", "[", "0", "]", "+", "input2", "[", "0", "]", ")", ")", ",", "inplace", "=", "True", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.scrn.model.Reduction.__init__": [[26, 32], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["out1", "=", "F", ".", "interpolate", "(", "out1", ",", "size", "=", "input1", "[", "2", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "input1", "[", "2", "]", "+", "input2", "[", "2", "]", "+", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2", "=", "F", ".", "interpolate", "(", "out2", ",", "size", "=", "input1", "[", "3", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "input1", "[", "3", "]", "+", "input2", "[", "3", "]", "+", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "return", "out3", "\n", "\n", "", "def", "initialize", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.scrn.model.Reduction.forward": [[34, 36], ["model.Reduction.reduce"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.unet.model.Network.reduce"], ["\n", "\n", "", "", "class", "Encoder", "(", "nn", ".", "Module", ")", ":", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.scrn.model.conv_upsample.__init__": [[39, 42], ["torch.Module.__init__", "model.BasicConv2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.scrn.model.conv_upsample.forward": [[43, 47], ["model.conv_upsample.conv", "model.conv_upsample.size", "target.size", "torch.upsample", "torch.upsample", "torch.upsample", "target.size"], "methods", ["None"], ["self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.scrn.model.DenseFusion.__init__": [[51, 98], ["torch.Module.__init__", "model.conv_upsample", "model.conv_upsample", "model.conv_upsample", "model.conv_upsample", "model.conv_upsample", "model.conv_upsample", "model.conv_upsample", "model.conv_upsample", "model.conv_upsample", "model.conv_upsample", "model.conv_upsample", "model.conv_upsample", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["self", ".", "bn2b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "conv1d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "out1", ")", ":", "\n", "        ", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2", "=", "F", ".", "max_pool2d", "(", "out1", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3", "=", "F", ".", "max_pool2d", "(", "out2", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4", "=", "F", ".", "max_pool2d", "(", "out3", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out4", "=", "F", ".", "relu", "(", "self", ".", "bn4", "(", "self", ".", "conv4", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "out1b", "=", "F", ".", "relu", "(", "self", ".", "bn1b", "(", "self", ".", "conv1b", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2b", "=", "F", ".", "relu", "(", "self", ".", "bn2b", "(", "self", ".", "conv2b", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3b", "=", "F", ".", "relu", "(", "self", ".", "bn3b", "(", "self", ".", "conv3b", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4b", "=", "F", ".", "relu", "(", "self", ".", "bn4b", "(", "self", ".", "conv4b", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "out1d", "=", "F", ".", "relu", "(", "self", ".", "bn1d", "(", "self", ".", "conv1d", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2d", "=", "F", ".", "relu", "(", "self", ".", "bn2d", "(", "self", ".", "conv2d", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3d", "=", "F", ".", "relu", "(", "self", ".", "bn3d", "(", "self", ".", "conv3d", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4d", "=", "F", ".", "relu", "(", "self", ".", "bn4d", "(", "self", ".", "conv4d", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "return", "(", "out4b", ",", "out3b", ",", "out2b", ",", "out1b", ")", ",", "(", "out4d", ",", "out3d", ",", "out2d", ",", "out1d", ")", "\n", "\n", "", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n", "\n", "", "", "class", "Network", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "config", ",", "encoder", ",", "feat", ")", ":", "\n", "# encoder: backbone, forward function output 5 encoder features. details in methods/base/model.py", "\n", "# feat: length of encoder features. e.g.: VGG:[64, 128, 256, 512, 512]; Resnet:[64, 256, 512, 1024, 2048]", "\n", "        ", "super", "(", "Network", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "conv5b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.scrn.model.DenseFusion.forward": [[100, 124], ["model.DenseFusion.conv_f1", "model.DenseFusion.conv_f2", "model.DenseFusion.conv_f3", "model.DenseFusion.conv_f4", "model.DenseFusion.conv_f5", "model.DenseFusion.conv_f6", "model.DenseFusion.conv_f7", "model.DenseFusion.conv_f8", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.DenseFusion.conv9", "model.DenseFusion.conv11", "model.DenseFusion.conv12", "model.DenseFusion.conv1", "model.DenseFusion.conv2", "model.DenseFusion.conv3", "model.DenseFusion.conv4", "model.DenseFusion.conv5", "model.DenseFusion.conv6", "model.DenseFusion.conv8", "model.DenseFusion.conv10", "model.DenseFusion.conv7"], "methods", ["None"], ["self", ".", "conv2b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv5d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "encoder1", "=", "Encoder", "(", ")", "\n", "self", ".", "decoderb", "=", "Decoder", "(", ")", "\n", "self", ".", "decoderd", "=", "Decoder", "(", ")", "\n", "self", ".", "linearb", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "lineard", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ",", "phase", "=", "'test'", ")", ":", "\n", "        ", "shape", "=", "x", ".", "size", "(", ")", "[", "2", ":", "]", "\n", "out1", ",", "out2", ",", "out3", ",", "out4", ",", "out5", "=", "self", ".", "encoder", "(", "x", ")", "\n", "out2b", ",", "out3b", ",", "out4b", ",", "out5b", "=", "self", ".", "conv2b", "(", "out2", ")", ",", "self", ".", "conv3b", "(", "out3", ")", ",", "self", ".", "conv4b", "(", "out4", ")", ",", "self", ".", "conv5b", "(", "out5", ")", "\n", "out2d", ",", "out3d", ",", "out4d", ",", "out5d", "=", "self", ".", "conv2d", "(", "out2", ")", ",", "self", ".", "conv3d", "(", "out3", ")", ",", "self", ".", "conv4d", "(", "out4", ")", ",", "self", ".", "conv5d", "(", "out5", ")", "\n", "\n", "outb1", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ")", "\n", "outd1", "=", "self", ".", "decoderd", "(", "[", "out5d", ",", "out4d", ",", "out3d", ",", "out2d", "]", ")", "\n", "out1", "=", "torch", ".", "cat", "(", "[", "outb1", ",", "outd1", "]", ",", "dim", "=", "1", ")", "\n", "outb2", ",", "outd2", "=", "self", ".", "encoder1", "(", "out1", ")", "\n", "outb2", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ",", "outb2", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.scrn.model.ConcatOutput.__init__": [[127, 149], ["torch.Module.__init__", "torch.Upsample", "torch.Upsample", "torch.Upsample", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["\n", "out1", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outb1", "=", "F", ".", "interpolate", "(", "self", ".", "linearb", "(", "outb1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outd1", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "\n", "out2", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outb2", "=", "F", ".", "interpolate", "(", "self", ".", "linearb", "(", "outb2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outd2", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "#return outb1, outd1, out1, outb2, outd2, out2", "\n", "\n", "OutDict", "=", "{", "}", "\n", "OutDict", "[", "'final'", "]", "=", "out2", "\n", "OutDict", "[", "'body'", "]", "=", "[", "outb1", ",", "outb2", "]", "\n", "OutDict", "[", "'detail'", "]", "=", "[", "outd1", ",", "outd2", "]", "\n", "OutDict", "[", "'sal'", "]", "=", "[", "out1", ",", "out2", "]", "\n", "return", "OutDict", "\n", "\n", "\n", "\n", "", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.scrn.model.ConcatOutput.forward": [[151, 163], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.ConcatOutput.conv_cat1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.ConcatOutput.conv_cat2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.ConcatOutput.conv_cat3", "model.ConcatOutput.output", "model.ConcatOutput.conv_upsample1", "model.ConcatOutput.conv_upsample2", "model.ConcatOutput.conv_upsample3", "model.ConcatOutput.upsample", "model.ConcatOutput.upsample", "model.ConcatOutput.upsample"], "methods", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.scrn.model.decoder.__init__": [[167, 195], ["torch.Module.__init__", "model.Reduction", "model.Reduction", "model.Reduction", "model.Reduction", "model.Reduction", "model.Reduction", "model.Reduction", "model.Reduction", "model.DenseFusion", "model.DenseFusion", "model.DenseFusion", "model.DenseFusion", "model.ConcatOutput", "model.ConcatOutput", "model.decoder.modules", "isinstance", "m.weight.data.normal_", "isinstance", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], []], "home.repos.pwc.inspect_result.moothes_salod.scrn.model.decoder.forward": [[197, 238], ["model.decoder.reduce_s1", "model.decoder.reduce_s2", "model.decoder.reduce_s3", "model.decoder.reduce_s4", "model.decoder.reduce_e1", "model.decoder.reduce_e2", "model.decoder.reduce_e3", "model.decoder.reduce_e4", "model.decoder.df1", "model.decoder.df2", "model.decoder.df3", "model.decoder.df4", "model.decoder.output_s", "model.decoder.output_e", "torch.upsample", "torch.upsample", "torch.upsample", "torch.upsample", "torch.upsample", "torch.upsample"], "methods", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.scrn.model.Network.__init__": [[243, 247], ["torch.Module.__init__", "model.decoder"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], []], "home.repos.pwc.inspect_result.moothes_salod.scrn.model.Network.forward": [[248, 253], ["model.Network.encoder", "model.Network.decoder", "model.Network.size"], "methods", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.egnet.config.get_config": [[8, 18], ["base.config.base_config", "base.config.base_config.parse_args", "vars", "base.config.cfg_convert", "print"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.config.base_config", "home.repos.pwc.inspect_result.moothes_salod.base.config.cfg_convert"], ["    ", "strategy", "=", "'base_sgd'", "\n", "parser", "=", "base_config", "(", "strategy", ")", "\n", "# Add custom params here", "\n", "# parser.add_argument('--size', default=320, type=int, help='Input size')", "\n", "\n", "params", "=", "parser", ".", "parse_args", "(", ")", "\n", "config", "=", "vars", "(", "params", ")", "\n", "cfg_convert", "(", "config", ")", "\n", "print", "(", "'Training {} network with {} backbone using Gpu: {}'", ".", "format", "(", "config", "[", "'model_name'", "]", ",", "config", "[", "'backbone'", "]", ",", "config", "[", "'gpus'", "]", ")", ")", "\n", "\n", "# Config post-process", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.egnet.loss.Loss": [[8, 32], ["label_edge_prediction", "sum", "sum", "sum.append", "sal_loss1.append", "loss.bce2d_new", "torch.nn.functional.binary_cross_entropy_with_logits"], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.util.label_edge_prediction", "home.repos.pwc.inspect_result.moothes_salod.egnet.loss.bce2d_new"], ["def", "IOU", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "    ", "pred", "=", "torch", ".", "sigmoid", "(", "preds", ")", "\n", "\n", "inter", "=", "torch", ".", "sum", "(", "target", "*", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "\n", "union", "=", "torch", ".", "sum", "(", "target", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "+", "torch", ".", "sum", "(", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "-", "inter", "\n", "iou_loss", "=", "1", "-", "(", "inter", "/", "union", ")", ".", "mean", "(", ")", "\n", "return", "iou_loss", "\n", "\n", "", "def", "Loss", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "# preds: Dict type. Customarily, preds['final'] is the final prediction without sigmoid.", "\n", "    ", "bce", "=", "nn", ".", "BCEWithLogitsLoss", "(", "reduction", "=", "'none'", ")", "\n", "\n", "loss", "=", "0", "\n", "for", "pred", "in", "preds", "[", "'sal'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "target", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "loss", "+=", "IOU", "(", "pred", ",", "target", ",", "config", ")", "\n", "\n", "", "gt_edge", "=", "label_edge_prediction", "(", "target", ")", "\n", "for", "pred", "in", "preds", "[", "'detail'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "gt_edge", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "\n", "", "gt_body", "=", "(", "target", "-", "gt_edge", ")", ".", "gt", "(", "0.5", ")", "\n", "for", "pred", "in", "preds", "[", "'body'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "gt_body", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.egnet.loss.bce2d_new": [[35, 52], ["torch.eq().float", "torch.eq().float", "torch.sum", "torch.sum", "torch.nn.functional.binary_cross_entropy_with_logits", "input.size", "target.size", "torch.eq", "torch.eq"], "function", ["None"], ["", ""]], "home.repos.pwc.inspect_result.moothes_salod.egnet.model.ConvertLayer.__init__": [[16, 23], ["torch.nn.Module.__init__", "range", "torch.nn.ModuleList", "torch.nn.ModuleList", "len", "up0.append", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "input1", ",", "input2", "=", "[", "0", ",", "0", ",", "0", ",", "0", "]", ")", ":", "\n", "        ", "out0", "=", "F", ".", "relu", "(", "self", ".", "bn0", "(", "self", ".", "conv0", "(", "input1", "[", "0", "]", "+", "input2", "[", "0", "]", ")", ")", ",", "inplace", "=", "True", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.egnet.model.ConvertLayer.forward": [[24, 30], ["enumerate", "resl.append"], "methods", ["None"], ["out0", "=", "F", ".", "interpolate", "(", "out0", ",", "size", "=", "input1", "[", "1", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "input1", "[", "1", "]", "+", "input2", "[", "1", "]", "+", "out0", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out1", "=", "F", ".", "interpolate", "(", "out1", ",", "size", "=", "input1", "[", "2", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "input1", "[", "2", "]", "+", "input2", "[", "2", "]", "+", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2", "=", "F", ".", "interpolate", "(", "out2", ",", "size", "=", "input1", "[", "3", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "input1", "[", "3", "]", "+", "input2", "[", "3", "]", "+", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "return", "out3", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.egnet.model.MergeLayer1.__init__": [[32, 45], ["torch.nn.Module.__init__", "trans.append", "torch.nn.ReLU", "torch.nn.ReLU", "up.append", "score.append", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "trans.append", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n", "\n", "", "", "class", "Encoder", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.egnet.model.MergeLayer1.forward": [[46, 74], ["len", "sal_feature.append", "up_sal.append", "range", "edge_feature.append", "up_edge.append", "torch.interpolate", "torch.interpolate", "sal_feature.append", "up_sal.append", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "list_x[].size", "U_tmp.size", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "list_x[].size", "list_x[].size", "list_x[].size"], "methods", ["None"], ["self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "conv1b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "conv1d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "out1", ")", ":", "\n", "        ", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2", "=", "F", ".", "max_pool2d", "(", "out1", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3", "=", "F", ".", "max_pool2d", "(", "out2", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4", "=", "F", ".", "max_pool2d", "(", "out3", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out4", "=", "F", ".", "relu", "(", "self", ".", "bn4", "(", "self", ".", "conv4", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.egnet.model.MergeLayer2.__init__": [[76, 98], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.ReLU", "torch.nn.ReLU", "enumerate", "trans.append", "up.append", "score.append", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "tmp.append", "tmp_up.append", "tmp_score.append", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["out2b", "=", "F", ".", "relu", "(", "self", ".", "bn2b", "(", "self", ".", "conv2b", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3b", "=", "F", ".", "relu", "(", "self", ".", "bn3b", "(", "self", ".", "conv3b", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4b", "=", "F", ".", "relu", "(", "self", ".", "bn4b", "(", "self", ".", "conv4b", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "out1d", "=", "F", ".", "relu", "(", "self", ".", "bn1d", "(", "self", ".", "conv1d", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2d", "=", "F", ".", "relu", "(", "self", ".", "bn2d", "(", "self", ".", "conv2d", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3d", "=", "F", ".", "relu", "(", "self", ".", "bn3d", "(", "self", ".", "conv3d", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4d", "=", "F", ".", "relu", "(", "self", ".", "bn4d", "(", "self", ".", "conv4d", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "return", "(", "out4b", ",", "out3b", ",", "out2b", ",", "out1b", ")", ",", "(", "out4d", ",", "out3d", ",", "out2d", ",", "out1d", ")", "\n", "\n", "", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n", "\n", "", "", "class", "Network", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "config", ",", "encoder", ",", "feat", ")", ":", "\n", "# encoder: backbone, forward function output 5 encoder features. details in methods/base/model.py", "\n", "# feat: length of encoder features. e.g.: VGG:[64, 128, 256, 512, 512]; Resnet:[64, 256, 512, 1024, 2048]", "\n", "        ", "super", "(", "Network", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "conv5b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.egnet.model.MergeLayer2.forward": [[99, 117], ["enumerate", "range", "up_score.append", "enumerate", "model.MergeLayer2.relu", "torch.interpolate", "torch.interpolate", "up_score.append", "tmp_feature.append", "len", "torch.add", "torch.add", "torch.add", "torch.add", "model.MergeLayer2.final_score", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "i_x.size", "tmp_feature[].size"], "methods", ["None"], ["self", ".", "conv3b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv2b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv5d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "encoder1", "=", "Encoder", "(", ")", "\n", "self", ".", "decoderb", "=", "Decoder", "(", ")", "\n", "self", ".", "decoderd", "=", "Decoder", "(", ")", "\n", "self", ".", "linearb", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "lineard", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ",", "phase", "=", "'test'", ")", ":", "\n", "        ", "shape", "=", "x", ".", "size", "(", ")", "[", "2", ":", "]", "\n", "out1", ",", "out2", ",", "out3", ",", "out4", ",", "out5", "=", "self", ".", "encoder", "(", "x", ")", "\n", "out2b", ",", "out3b", ",", "out4b", ",", "out5b", "=", "self", ".", "conv2b", "(", "out2", ")", ",", "self", ".", "conv3b", "(", "out3", ")", ",", "self", ".", "conv4b", "(", "out4", ")", ",", "self", ".", "conv5b", "(", "out5", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.egnet.model.decoder.__init__": [[130, 142], ["torch.nn.Module.__init__", "model.ConvertLayer"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["outd1", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "\n", "out2", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outb2", "=", "F", ".", "interpolate", "(", "self", ".", "linearb", "(", "outb2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outd2", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "#return outb1, outd1, out1, outb2, outd2, out2", "\n", "\n", "OutDict", "=", "{", "}", "\n", "OutDict", "[", "'final'", "]", "=", "out2", "\n", "OutDict", "[", "'body'", "]", "=", "[", "outb1", ",", "outb2", "]", "\n", "OutDict", "[", "'detail'", "]", "=", "[", "outd1", ",", "outd2", "]", "\n", "OutDict", "[", "'sal'", "]", "=", "[", "out1", ",", "out2", "]", "\n", "return", "OutDict", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.egnet.model.decoder.forward": [[143, 153], ["model.decoder.merge1", "model.decoder.merge2", "model.decoder.convert"], "methods", ["None"], ["\n", "\n", "\n", "", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.egnet.model.TUN_bone.__init__": [[156, 171], ["torch.nn.Module.__init__", "model.decoder", "model.decoder"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], []], "home.repos.pwc.inspect_result.moothes_salod.egnet.model.TUN_bone.forward": [[174, 185], ["model.TUN_bone.encoder", "model.TUN_bone.decoder", "x.size"], "methods", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.egnet.model.extra_layer": [[119, 128], ["model.MergeLayer1", "model.MergeLayer2"], "function", ["None"], ["\n", "outb1", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ")", "\n", "outd1", "=", "self", ".", "decoderd", "(", "[", "out5d", ",", "out4d", ",", "out3d", ",", "out2d", "]", ")", "\n", "out1", "=", "torch", ".", "cat", "(", "[", "outb1", ",", "outd1", "]", ",", "dim", "=", "1", ")", "\n", "outb2", ",", "outd2", "=", "self", ".", "encoder1", "(", "out1", ")", "\n", "outb2", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ",", "outb2", ")", "\n", "outd2", "=", "self", ".", "decoderd", "(", "[", "out5d", ",", "out4d", ",", "out3d", ",", "out2d", "]", ",", "outd2", ")", "\n", "out2", "=", "torch", ".", "cat", "(", "[", "outb2", ",", "outd2", "]", ",", "dim", "=", "1", ")", "\n", "\n", "out1", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.egnet.model.xavier": [[187, 190], ["torch.nn.init.xavier_uniform_"], "function", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.egnet.model.weights_init": [[191, 197], ["isinstance", "m.weight.data.normal_", "m.bias.data.zero_"], "function", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.egnet.model.Network": [[198, 218], ["model.TUN_bone", "model.extra_layer"], "function", ["home.repos.pwc.inspect_result.moothes_salod.poolnet.model_new.extra_layer"], []], "home.repos.pwc.inspect_result.moothes_salod.basnet.config.get_config": [[8, 21], ["base.config.base_config", "base.config.base_config.parse_args", "vars", "base.config.cfg_convert", "print"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.config.base_config", "home.repos.pwc.inspect_result.moothes_salod.base.config.cfg_convert"], ["    ", "strategy", "=", "'base_sgd'", "\n", "parser", "=", "base_config", "(", "strategy", ")", "\n", "# Add custom params here", "\n", "# parser.add_argument('--size', default=320, type=int, help='Input size')", "\n", "\n", "params", "=", "parser", ".", "parse_args", "(", ")", "\n", "config", "=", "vars", "(", "params", ")", "\n", "cfg_convert", "(", "config", ")", "\n", "print", "(", "'Training {} network with {} backbone using Gpu: {}'", ".", "format", "(", "config", "[", "'model_name'", "]", ",", "config", "[", "'backbone'", "]", ",", "config", "[", "'gpus'", "]", ")", ")", "\n", "\n", "# Config post-process", "\n", "\n", "return", "config", "", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.basnet.loss.SSIM.__init__": [[49, 55], ["super().__init__", "loss.create_window"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.base.loss.create_window"], []], "home.repos.pwc.inspect_result.moothes_salod.basnet.loss.SSIM.forward": [[56, 73], ["img1.size", "loss._ssim", "loss.create_window", "window.cuda.cuda.type_as", "loss.SSIM.window.data.type", "img1.data.type", "window.cuda.cuda.cuda", "img1.get_device"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.base.loss._ssim", "home.repos.pwc.inspect_result.moothes_salod.base.loss.create_window"], []], "home.repos.pwc.inspect_result.moothes_salod.basnet.loss.LOGSSIM.__init__": [[99, 105], ["super().__init__", "loss.create_window"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.base.loss.create_window"], []], "home.repos.pwc.inspect_result.moothes_salod.basnet.loss.LOGSSIM.forward": [[106, 123], ["img1.size", "loss._logssim", "loss.create_window", "window.cuda.cuda.type_as", "loss.LOGSSIM.window.data.type", "img1.data.type", "window.cuda.cuda.cuda", "img1.get_device"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.basnet.new_loss._logssim", "home.repos.pwc.inspect_result.moothes_salod.base.loss.create_window"], []], "home.repos.pwc.inspect_result.moothes_salod.basnet.loss.gaussian": [[16, 19], ["torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor.sum", "math.exp", "range", "float"], "function", ["None"], ["", "def", "Loss", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "# preds: Dict type. Customarily, preds['final'] is the final prediction without sigmoid.", "\n", "    ", "bce", "=", "nn", ".", "BCEWithLogitsLoss", "(", "reduction", "=", "'none'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.basnet.loss.create_window": [[20, 25], ["gaussian().unsqueeze", "gaussian().unsqueeze.mm().float().unsqueeze().unsqueeze", "torch.autograd.Variable", "_1D_window.mm().float().unsqueeze().unsqueeze.expand().contiguous", "loss.gaussian", "gaussian().unsqueeze.mm().float().unsqueeze", "_1D_window.mm().float().unsqueeze().unsqueeze.expand", "gaussian().unsqueeze.mm().float", "gaussian().unsqueeze.mm", "gaussian().unsqueeze.t"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.loss.gaussian"], ["loss", "=", "0", "\n", "for", "pred", "in", "preds", "[", "'sal'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "target", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "loss", "+=", "IOU", "(", "pred", ",", "target", ",", "config", ")", "\n", "\n", "", "gt_edge", "=", "label_edge_prediction", "(", "target", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.basnet.loss._ssim": [[26, 47], ["torch.conv2d", "torch.conv2d", "F.conv2d.pow", "F.conv2d.pow", "torch.conv2d", "torch.conv2d", "torch.conv2d", "ssim_map.mean", "ssim_map.mean().mean().mean", "ssim_map.mean().mean", "ssim_map.mean"], "function", ["None"], ["for", "pred", "in", "preds", "[", "'detail'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "gt_edge", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "\n", "", "gt_body", "=", "(", "target", "-", "gt_edge", ")", ".", "gt", "(", "0.5", ")", "\n", "for", "pred", "in", "preds", "[", "'body'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "gt_body", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "\n", "", "return", "loss", "\n", "\n", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.basnet.loss._logssim": [[74, 97], ["torch.conv2d", "torch.conv2d", "F.conv2d.pow", "F.conv2d.pow", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.log", "torch.log", "torch.log", "torch.log", "ssim_map.mean", "ssim_map.mean().mean().mean", "torch.min", "torch.min", "torch.min", "torch.min", "torch.max", "torch.max", "torch.max", "torch.max", "torch.min", "torch.min", "torch.min", "torch.min", "ssim_map.mean().mean", "ssim_map.mean"], "function", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.basnet.loss.ssim": [[125, 134], ["img1.size", "loss.create_window", "window.cuda.type_as", "loss._ssim", "window.cuda.cuda", "img1.get_device"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.loss.create_window", "home.repos.pwc.inspect_result.moothes_salod.base.loss._ssim"], []], "home.repos.pwc.inspect_result.moothes_salod.basnet.loss.IOU": [[135, 140], ["torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum"], "function", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.basnet.loss.bce_ssim_loss": [[141, 150], ["loss.IOU", "torch.BCELoss", "loss.SSIM"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.loss.IOU", "home.repos.pwc.inspect_result.moothes_salod.base.loss.SSIM"], []], "home.repos.pwc.inspect_result.moothes_salod.basnet.loss.Loss": [[151, 157], ["loss.bce_ssim_loss", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "function", ["home.repos.pwc.inspect_result.moothes_salod.basnet.new_loss.bce_ssim_loss"], []], "home.repos.pwc.inspect_result.moothes_salod.basnet.loss.CTLoss": [[158, 163], ["torch.BCEWithLogitsLoss", "torch.avg_pool2d", "label_edge_prediction", "nn.BCEWithLogitsLoss."], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.util.label_edge_prediction"], []], "home.repos.pwc.inspect_result.moothes_salod.basnet.loss.Fscore": [[165, 176], ["torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "fs.mean", "torch.avg_pool2d", "tp.sum", "torch.sigmoid.sum", "label_edge_prediction", "target.sum"], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.util.label_edge_prediction"], []], "home.repos.pwc.inspect_result.moothes_salod.basnet.loss.cff_loss": [[177, 182], ["loss.CTLoss", "loss.Fscore"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.loss.CTLoss", "home.repos.pwc.inspect_result.moothes_salod.base.loss.Fscore"], []], "home.repos.pwc.inspect_result.moothes_salod.basnet.loss.Loss_new": [[183, 188], ["loss.cff_loss"], "function", ["home.repos.pwc.inspect_result.moothes_salod.itsd.loss.cff_loss"], []], "home.repos.pwc.inspect_result.moothes_salod.basnet.model.RefUnet.__init__": [[11, 67], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Upsample", "torch.Upsample", "torch.Upsample"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv0", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn0", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "input1", ",", "input2", "=", "[", "0", ",", "0", ",", "0", ",", "0", "]", ")", ":", "\n", "        ", "out0", "=", "F", ".", "relu", "(", "self", ".", "bn0", "(", "self", ".", "conv0", "(", "input1", "[", "0", "]", "+", "input2", "[", "0", "]", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out0", "=", "F", ".", "interpolate", "(", "out0", ",", "size", "=", "input1", "[", "1", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "input1", "[", "1", "]", "+", "input2", "[", "1", "]", "+", "out0", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out1", "=", "F", ".", "interpolate", "(", "out1", ",", "size", "=", "input1", "[", "2", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "input1", "[", "2", "]", "+", "input2", "[", "2", "]", "+", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2", "=", "F", ".", "interpolate", "(", "out2", ",", "size", "=", "input1", "[", "3", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "input1", "[", "3", "]", "+", "input2", "[", "3", "]", "+", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "return", "out3", "\n", "\n", "", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n", "\n", "", "", "class", "Encoder", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "conv1b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "conv1d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "out1", ")", ":", "\n", "        ", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.basnet.model.RefUnet.forward": [[69, 104], ["model.RefUnet.conv0", "model.RefUnet.relu1", "model.RefUnet.pool1", "model.RefUnet.relu2", "model.RefUnet.pool2", "model.RefUnet.relu3", "model.RefUnet.pool3", "model.RefUnet.relu4", "model.RefUnet.pool4", "model.RefUnet.relu5", "model.RefUnet.upscore2", "model.RefUnet.relu_d4", "model.RefUnet.upscore2", "model.RefUnet.relu_d3", "model.RefUnet.upscore2", "model.RefUnet.relu_d2", "model.RefUnet.upscore2", "model.RefUnet.relu_d1", "model.RefUnet.conv_d0", "model.RefUnet.bn1", "model.RefUnet.bn2", "model.RefUnet.bn3", "model.RefUnet.bn4", "model.RefUnet.bn5", "model.RefUnet.bn_d4", "model.RefUnet.bn_d3", "model.RefUnet.bn_d2", "model.RefUnet.bn_d1", "model.RefUnet.conv1", "model.RefUnet.conv2", "model.RefUnet.conv3", "model.RefUnet.conv4", "model.RefUnet.conv5", "model.RefUnet.conv_d4", "model.RefUnet.conv_d3", "model.RefUnet.conv_d2", "model.RefUnet.conv_d1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3", "=", "F", ".", "max_pool2d", "(", "out2", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4", "=", "F", ".", "max_pool2d", "(", "out3", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out4", "=", "F", ".", "relu", "(", "self", ".", "bn4", "(", "self", ".", "conv4", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "out1b", "=", "F", ".", "relu", "(", "self", ".", "bn1b", "(", "self", ".", "conv1b", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2b", "=", "F", ".", "relu", "(", "self", ".", "bn2b", "(", "self", ".", "conv2b", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3b", "=", "F", ".", "relu", "(", "self", ".", "bn3b", "(", "self", ".", "conv3b", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4b", "=", "F", ".", "relu", "(", "self", ".", "bn4b", "(", "self", ".", "conv4b", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "out1d", "=", "F", ".", "relu", "(", "self", ".", "bn1d", "(", "self", ".", "conv1d", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2d", "=", "F", ".", "relu", "(", "self", ".", "bn2d", "(", "self", ".", "conv2d", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3d", "=", "F", ".", "relu", "(", "self", ".", "bn3d", "(", "self", ".", "conv3d", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4d", "=", "F", ".", "relu", "(", "self", ".", "bn4d", "(", "self", ".", "conv4d", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "return", "(", "out4b", ",", "out3b", ",", "out2b", ",", "out1b", ")", ",", "(", "out4d", ",", "out3d", ",", "out2d", ",", "out1d", ")", "\n", "\n", "", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n", "\n", "", "", "class", "Network", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "config", ",", "encoder", ",", "feat", ")", ":", "\n", "# encoder: backbone, forward function output 5 encoder features. details in methods/base/model.py", "\n", "# feat: length of encoder features. e.g.: VGG:[64, 128, 256, 512, 512]; Resnet:[64, 256, 512, 1024, 2048]", "\n", "        ", "super", "(", "Network", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "conv5b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv2b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv5d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.basnet.model.Network.__init__": [[106, 249], ["torch.Module.__init__", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "base.encoder.resnet.BasicBlock", "base.encoder.resnet.BasicBlock", "base.encoder.resnet.BasicBlock", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "base.encoder.resnet.BasicBlock", "base.encoder.resnet.BasicBlock", "base.encoder.resnet.BasicBlock", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "model.RefUnet", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["\n", "self", ".", "encoder1", "=", "Encoder", "(", ")", "\n", "self", ".", "decoderb", "=", "Decoder", "(", ")", "\n", "self", ".", "decoderd", "=", "Decoder", "(", ")", "\n", "self", ".", "linearb", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "lineard", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ",", "phase", "=", "'test'", ")", ":", "\n", "        ", "shape", "=", "x", ".", "size", "(", ")", "[", "2", ":", "]", "\n", "out1", ",", "out2", ",", "out3", ",", "out4", ",", "out5", "=", "self", ".", "encoder", "(", "x", ")", "\n", "out2b", ",", "out3b", ",", "out4b", ",", "out5b", "=", "self", ".", "conv2b", "(", "out2", ")", ",", "self", ".", "conv3b", "(", "out3", ")", ",", "self", ".", "conv4b", "(", "out4", ")", ",", "self", ".", "conv5b", "(", "out5", ")", "\n", "out2d", ",", "out3d", ",", "out4d", ",", "out5d", "=", "self", ".", "conv2d", "(", "out2", ")", ",", "self", ".", "conv3d", "(", "out3", ")", ",", "self", ".", "conv4d", "(", "out4", ")", ",", "self", ".", "conv5d", "(", "out5", ")", "\n", "\n", "outb1", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ")", "\n", "outd1", "=", "self", ".", "decoderd", "(", "[", "out5d", ",", "out4d", ",", "out3d", ",", "out2d", "]", ")", "\n", "out1", "=", "torch", ".", "cat", "(", "[", "outb1", ",", "outd1", "]", ",", "dim", "=", "1", ")", "\n", "outb2", ",", "outd2", "=", "self", ".", "encoder1", "(", "out1", ")", "\n", "outb2", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ",", "outb2", ")", "\n", "outd2", "=", "self", ".", "decoderd", "(", "[", "out5d", ",", "out4d", ",", "out3d", ",", "out2d", "]", ",", "outd2", ")", "\n", "out2", "=", "torch", ".", "cat", "(", "[", "outb2", ",", "outd2", "]", ",", "dim", "=", "1", ")", "\n", "\n", "out1", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outb1", "=", "F", ".", "interpolate", "(", "self", ".", "linearb", "(", "outb1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outd1", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "\n", "out2", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outb2", "=", "F", ".", "interpolate", "(", "self", ".", "linearb", "(", "outb2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outd2", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "#return outb1, outd1, out1, outb2, outd2, out2", "\n", "\n", "OutDict", "=", "{", "}", "\n", "OutDict", "[", "'final'", "]", "=", "out2", "\n", "OutDict", "[", "'body'", "]", "=", "[", "outb1", ",", "outb2", "]", "\n", "OutDict", "[", "'detail'", "]", "=", "[", "outd1", ",", "outd2", "]", "\n", "OutDict", "[", "'sal'", "]", "=", "[", "out1", ",", "out2", "]", "\n", "return", "OutDict", "\n", "\n", "\n", "\n", "", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.basnet.model.Network.forward": [[251, 355], ["model.Network.pool4", "model.Network.resb5_1", "model.Network.resb5_2", "model.Network.resb5_3", "model.Network.pool5", "model.Network.resb6_1", "model.Network.resb6_2", "model.Network.resb6_3", "model.Network.relubg_1", "model.Network.relubg_m", "model.Network.relubg_2", "model.Network.relu6d_1", "model.Network.relu6d_m", "model.Network.relu6d_2", "model.Network.upscore2", "model.Network.relu5d_1", "model.Network.relu5d_m", "model.Network.relu5d_2", "model.Network.upscore2", "model.Network.relu4d_1", "model.Network.relu4d_m", "model.Network.relu4d_2", "model.Network.upscore2", "model.Network.relu3d_1", "model.Network.relu3d_m", "model.Network.relu3d_2", "model.Network.upscore2", "model.Network.relu2d_1", "model.Network.relu2d_m", "model.Network.relu2d_2", "model.Network.upscore2", "model.Network.relu1d_1", "model.Network.relu1d_m", "model.Network.relu1d_2", "model.Network.outconvb", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "model.Network.outconv6", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "model.Network.outconv5", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "model.Network.outconv4", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "model.Network.outconv3", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "model.Network.outconv2", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "model.Network.outconv1", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "model.Network.refunet", "x.size", "model.Network.encoder", "model.Network.post1", "model.Network.post2", "model.Network.post3", "model.Network.post4", "model.Network.bnbg_1", "model.Network.bnbg_m", "model.Network.bnbg_2", "model.Network.bn6d_1", "model.Network.bn6d_m", "model.Network.bn6d_2", "model.Network.bn5d_1", "model.Network.bn5d_m", "model.Network.bn5d_2", "model.Network.bn4d_1", "model.Network.bn4d_m", "model.Network.bn4d_2", "model.Network.bn3d_1", "model.Network.bn3d_m", "model.Network.bn3d_2", "model.Network.bn2d_1", "model.Network.bn2d_m", "model.Network.bn2d_2", "model.Network.bn1d_1", "model.Network.bn1d_m", "model.Network.bn1d_2", "model.Network.encoder", "model.Network.convbg_1", "model.Network.convbg_m", "model.Network.convbg_2", "model.Network.conv6d_1", "model.Network.conv6d_m", "model.Network.conv6d_2", "model.Network.conv5d_1", "model.Network.conv5d_m", "model.Network.conv5d_2", "model.Network.conv4d_1", "model.Network.conv4d_m", "model.Network.conv4d_2", "model.Network.conv3d_1", "model.Network.conv3d_m", "model.Network.conv3d_2", "model.Network.conv2d_1", "model.Network.conv2d_m", "model.Network.conv2d_2", "model.Network.conv1d_1", "model.Network.conv1d_m", "model.Network.conv1d_2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.basnet.new_loss.SSIM.__init__": [[49, 55], ["super().__init__", "new_loss.create_window"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.base.loss.create_window"], ["    ", "def", "__init__", "(", "self", ",", "window_size", "=", "11", ",", "size_average", "=", "True", ")", ":", "\n", "        ", "super", "(", "SSIM", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "window_size", "=", "window_size", "\n", "self", ".", "size_average", "=", "size_average", "\n", "self", ".", "channel", "=", "1", "\n", "self", ".", "window", "=", "create_window", "(", "window_size", ",", "self", ".", "channel", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.basnet.new_loss.SSIM.forward": [[56, 73], ["img1.size", "new_loss._ssim", "new_loss.create_window", "window.cuda.cuda.type_as", "new_loss.SSIM.window.data.type", "img1.data.type", "window.cuda.cuda.cuda", "img1.get_device"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.base.loss._ssim", "home.repos.pwc.inspect_result.moothes_salod.base.loss.create_window"], ["", "def", "forward", "(", "self", ",", "img1", ",", "img2", ")", ":", "\n", "        ", "(", "_", ",", "channel", ",", "_", ",", "_", ")", "=", "img1", ".", "size", "(", ")", "\n", "\n", "if", "channel", "==", "self", ".", "channel", "and", "self", ".", "window", ".", "data", ".", "type", "(", ")", "==", "img1", ".", "data", ".", "type", "(", ")", ":", "\n", "            ", "window", "=", "self", ".", "window", "\n", "", "else", ":", "\n", "            ", "window", "=", "create_window", "(", "self", ".", "window_size", ",", "channel", ")", "\n", "\n", "if", "img1", ".", "is_cuda", ":", "\n", "                ", "window", "=", "window", ".", "cuda", "(", "img1", ".", "get_device", "(", ")", ")", "\n", "", "window", "=", "window", ".", "type_as", "(", "img1", ")", "\n", "\n", "self", ".", "window", "=", "window", "\n", "self", ".", "channel", "=", "channel", "\n", "\n", "\n", "", "return", "_ssim", "(", "img1", ",", "img2", ",", "window", ",", "self", ".", "window_size", ",", "channel", ",", "self", ".", "size_average", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.basnet.new_loss.LOGSSIM.__init__": [[99, 105], ["super().__init__", "new_loss.create_window"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.base.loss.create_window"], ["    ", "def", "__init__", "(", "self", ",", "window_size", "=", "11", ",", "size_average", "=", "True", ")", ":", "\n", "        ", "super", "(", "LOGSSIM", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "window_size", "=", "window_size", "\n", "self", ".", "size_average", "=", "size_average", "\n", "self", ".", "channel", "=", "1", "\n", "self", ".", "window", "=", "create_window", "(", "window_size", ",", "self", ".", "channel", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.basnet.new_loss.LOGSSIM.forward": [[106, 123], ["img1.size", "new_loss._logssim", "new_loss.create_window", "window.cuda.cuda.type_as", "new_loss.LOGSSIM.window.data.type", "img1.data.type", "window.cuda.cuda.cuda", "img1.get_device"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.basnet.new_loss._logssim", "home.repos.pwc.inspect_result.moothes_salod.base.loss.create_window"], ["", "def", "forward", "(", "self", ",", "img1", ",", "img2", ")", ":", "\n", "        ", "(", "_", ",", "channel", ",", "_", ",", "_", ")", "=", "img1", ".", "size", "(", ")", "\n", "\n", "if", "channel", "==", "self", ".", "channel", "and", "self", ".", "window", ".", "data", ".", "type", "(", ")", "==", "img1", ".", "data", ".", "type", "(", ")", ":", "\n", "            ", "window", "=", "self", ".", "window", "\n", "", "else", ":", "\n", "            ", "window", "=", "create_window", "(", "self", ".", "window_size", ",", "channel", ")", "\n", "\n", "if", "img1", ".", "is_cuda", ":", "\n", "                ", "window", "=", "window", ".", "cuda", "(", "img1", ".", "get_device", "(", ")", ")", "\n", "", "window", "=", "window", ".", "type_as", "(", "img1", ")", "\n", "\n", "self", ".", "window", "=", "window", "\n", "self", ".", "channel", "=", "channel", "\n", "\n", "\n", "", "return", "_logssim", "(", "img1", ",", "img2", ",", "window", ",", "self", ".", "window_size", ",", "channel", ",", "self", ".", "size_average", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.basnet.new_loss.gaussian": [[16, 19], ["torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor.sum", "math.exp", "range", "float"], "function", ["None"], ["def", "gaussian", "(", "window_size", ",", "sigma", ")", ":", "\n", "    ", "gauss", "=", "torch", ".", "Tensor", "(", "[", "exp", "(", "-", "(", "x", "-", "window_size", "//", "2", ")", "**", "2", "/", "float", "(", "2", "*", "sigma", "**", "2", ")", ")", "for", "x", "in", "range", "(", "window_size", ")", "]", ")", "\n", "return", "gauss", "/", "gauss", ".", "sum", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.basnet.new_loss.create_window": [[20, 25], ["gaussian().unsqueeze", "gaussian().unsqueeze.mm().float().unsqueeze().unsqueeze", "torch.autograd.Variable", "_1D_window.mm().float().unsqueeze().unsqueeze.expand().contiguous", "new_loss.gaussian", "gaussian().unsqueeze.mm().float().unsqueeze", "_1D_window.mm().float().unsqueeze().unsqueeze.expand", "gaussian().unsqueeze.mm().float", "gaussian().unsqueeze.mm", "gaussian().unsqueeze.t"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.loss.gaussian"], ["", "def", "create_window", "(", "window_size", ",", "channel", ")", ":", "\n", "    ", "_1D_window", "=", "gaussian", "(", "window_size", ",", "1.5", ")", ".", "unsqueeze", "(", "1", ")", "\n", "_2D_window", "=", "_1D_window", ".", "mm", "(", "_1D_window", ".", "t", "(", ")", ")", ".", "float", "(", ")", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", "\n", "window", "=", "Variable", "(", "_2D_window", ".", "expand", "(", "channel", ",", "1", ",", "window_size", ",", "window_size", ")", ".", "contiguous", "(", ")", ")", "\n", "return", "window", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.basnet.new_loss._ssim": [[26, 47], ["torch.conv2d", "torch.conv2d", "F.conv2d.pow", "F.conv2d.pow", "torch.conv2d", "torch.conv2d", "torch.conv2d", "ssim_map.mean", "ssim_map.mean().mean().mean", "ssim_map.mean().mean", "ssim_map.mean"], "function", ["None"], ["", "def", "_ssim", "(", "img1", ",", "img2", ",", "window", ",", "window_size", ",", "channel", ",", "size_average", "=", "True", ")", ":", "\n", "    ", "mu1", "=", "F", ".", "conv2d", "(", "img1", ",", "window", ",", "padding", "=", "window_size", "//", "2", ",", "groups", "=", "channel", ")", "\n", "mu2", "=", "F", ".", "conv2d", "(", "img2", ",", "window", ",", "padding", "=", "window_size", "//", "2", ",", "groups", "=", "channel", ")", "\n", "\n", "mu1_sq", "=", "mu1", ".", "pow", "(", "2", ")", "\n", "mu2_sq", "=", "mu2", ".", "pow", "(", "2", ")", "\n", "mu1_mu2", "=", "mu1", "*", "mu2", "\n", "\n", "sigma1_sq", "=", "F", ".", "conv2d", "(", "img1", "*", "img1", ",", "window", ",", "padding", "=", "window_size", "//", "2", ",", "groups", "=", "channel", ")", "-", "mu1_sq", "\n", "sigma2_sq", "=", "F", ".", "conv2d", "(", "img2", "*", "img2", ",", "window", ",", "padding", "=", "window_size", "//", "2", ",", "groups", "=", "channel", ")", "-", "mu2_sq", "\n", "sigma12", "=", "F", ".", "conv2d", "(", "img1", "*", "img2", ",", "window", ",", "padding", "=", "window_size", "//", "2", ",", "groups", "=", "channel", ")", "-", "mu1_mu2", "\n", "\n", "C1", "=", "0.01", "**", "2", "\n", "C2", "=", "0.03", "**", "2", "\n", "\n", "ssim_map", "=", "(", "(", "2", "*", "mu1_mu2", "+", "C1", ")", "*", "(", "2", "*", "sigma12", "+", "C2", ")", ")", "/", "(", "(", "mu1_sq", "+", "mu2_sq", "+", "C1", ")", "*", "(", "sigma1_sq", "+", "sigma2_sq", "+", "C2", ")", ")", "\n", "\n", "if", "size_average", ":", "\n", "        ", "return", "ssim_map", ".", "mean", "(", ")", "\n", "", "else", ":", "\n", "        ", "return", "ssim_map", ".", "mean", "(", "1", ")", ".", "mean", "(", "1", ")", ".", "mean", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.basnet.new_loss._logssim": [[74, 97], ["torch.conv2d", "torch.conv2d", "F.conv2d.pow", "F.conv2d.pow", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.log", "torch.log", "torch.log", "torch.log", "ssim_map.mean", "ssim_map.mean().mean().mean", "torch.min", "torch.min", "torch.min", "torch.min", "torch.max", "torch.max", "torch.max", "torch.max", "torch.min", "torch.min", "torch.min", "torch.min", "ssim_map.mean().mean", "ssim_map.mean"], "function", ["None"], ["", "", "def", "_logssim", "(", "img1", ",", "img2", ",", "window", ",", "window_size", ",", "channel", ",", "size_average", "=", "True", ")", ":", "\n", "    ", "mu1", "=", "F", ".", "conv2d", "(", "img1", ",", "window", ",", "padding", "=", "window_size", "//", "2", ",", "groups", "=", "channel", ")", "\n", "mu2", "=", "F", ".", "conv2d", "(", "img2", ",", "window", ",", "padding", "=", "window_size", "//", "2", ",", "groups", "=", "channel", ")", "\n", "\n", "mu1_sq", "=", "mu1", ".", "pow", "(", "2", ")", "\n", "mu2_sq", "=", "mu2", ".", "pow", "(", "2", ")", "\n", "mu1_mu2", "=", "mu1", "*", "mu2", "\n", "\n", "sigma1_sq", "=", "F", ".", "conv2d", "(", "img1", "*", "img1", ",", "window", ",", "padding", "=", "window_size", "//", "2", ",", "groups", "=", "channel", ")", "-", "mu1_sq", "\n", "sigma2_sq", "=", "F", ".", "conv2d", "(", "img2", "*", "img2", ",", "window", ",", "padding", "=", "window_size", "//", "2", ",", "groups", "=", "channel", ")", "-", "mu2_sq", "\n", "sigma12", "=", "F", ".", "conv2d", "(", "img1", "*", "img2", ",", "window", ",", "padding", "=", "window_size", "//", "2", ",", "groups", "=", "channel", ")", "-", "mu1_mu2", "\n", "\n", "C1", "=", "0.01", "**", "2", "\n", "C2", "=", "0.03", "**", "2", "\n", "\n", "ssim_map", "=", "(", "(", "2", "*", "mu1_mu2", "+", "C1", ")", "*", "(", "2", "*", "sigma12", "+", "C2", ")", ")", "/", "(", "(", "mu1_sq", "+", "mu2_sq", "+", "C1", ")", "*", "(", "sigma1_sq", "+", "sigma2_sq", "+", "C2", ")", ")", "\n", "ssim_map", "=", "(", "ssim_map", "-", "torch", ".", "min", "(", "ssim_map", ")", ")", "/", "(", "torch", ".", "max", "(", "ssim_map", ")", "-", "torch", ".", "min", "(", "ssim_map", ")", ")", "\n", "ssim_map", "=", "-", "torch", ".", "log", "(", "ssim_map", "+", "1e-8", ")", "\n", "\n", "if", "size_average", ":", "\n", "        ", "return", "ssim_map", ".", "mean", "(", ")", "\n", "", "else", ":", "\n", "        ", "return", "ssim_map", ".", "mean", "(", "1", ")", ".", "mean", "(", "1", ")", ".", "mean", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.basnet.new_loss.ssim": [[125, 134], ["img1.size", "new_loss.create_window", "window.cuda.type_as", "new_loss._ssim", "window.cuda.cuda", "img1.get_device"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.loss.create_window", "home.repos.pwc.inspect_result.moothes_salod.base.loss._ssim"], ["", "", "def", "ssim", "(", "img1", ",", "img2", ",", "window_size", "=", "11", ",", "size_average", "=", "True", ")", ":", "\n", "    ", "(", "_", ",", "channel", ",", "_", ",", "_", ")", "=", "img1", ".", "size", "(", ")", "\n", "window", "=", "create_window", "(", "window_size", ",", "channel", ")", "\n", "\n", "if", "img1", ".", "is_cuda", ":", "\n", "        ", "window", "=", "window", ".", "cuda", "(", "img1", ".", "get_device", "(", ")", ")", "\n", "", "window", "=", "window", ".", "type_as", "(", "img1", ")", "\n", "\n", "return", "_ssim", "(", "img1", ",", "img2", ",", "window", ",", "window_size", ",", "channel", ",", "size_average", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.basnet.new_loss.IOU": [[135, 140], ["torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum"], "function", ["None"], ["", "def", "IOU", "(", "pred", ",", "target", ")", ":", "\n", "    ", "inter", "=", "torch", ".", "sum", "(", "target", "*", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "\n", "union", "=", "torch", ".", "sum", "(", "target", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "+", "torch", ".", "sum", "(", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "-", "inter", "\n", "iou_loss", "=", "1", "-", "(", "inter", "/", "union", ")", ".", "mean", "(", ")", "\n", "return", "iou_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.basnet.new_loss.bce_ssim_loss": [[141, 150], ["new_loss.IOU", "torch.BCELoss", "new_loss.SSIM"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.loss.IOU", "home.repos.pwc.inspect_result.moothes_salod.base.loss.SSIM"], ["", "def", "bce_ssim_loss", "(", "pred", ",", "target", ")", ":", "\n", "\n", "\t", "bce_out", "=", "nn", ".", "BCELoss", "(", "size_average", "=", "True", ")", "(", "pred", ",", "target", ")", "\n", "ssim_out", "=", "1", "-", "SSIM", "(", "window_size", "=", "11", ",", "size_average", "=", "True", ")", "(", "pred", ",", "target", ")", "\n", "iou_out", "=", "IOU", "(", "pred", ",", "target", ")", "\n", "\n", "loss", "=", "bce_out", "+", "ssim_out", "+", "iou_out", "\n", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.basnet.new_loss.Loss": [[151, 157], ["new_loss.bce_ssim_loss", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "function", ["home.repos.pwc.inspect_result.moothes_salod.basnet.new_loss.bce_ssim_loss"], ["", "def", "Loss", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "#loss = bce_ssim_loss(torch.sigmoid(preds['final']), target)", "\n", "    ", "loss", "=", "0", "\n", "for", "pred", "in", "preds", "[", "'sal'", "]", ":", "\n", "        ", "loss", "+=", "bce_ssim_loss", "(", "torch", ".", "sigmoid", "(", "pred", ")", ",", "target", ")", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.basnet.new_loss.CTLoss": [[158, 163], ["torch.BCEWithLogitsLoss", "torch.avg_pool2d", "label_edge_prediction", "nn.BCEWithLogitsLoss."], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.util.label_edge_prediction"], ["", "def", "CTLoss", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "    ", "bce", "=", "nn", ".", "BCEWithLogitsLoss", "(", "reduction", "=", "'none'", ")", "\n", "wm", "=", "F", ".", "avg_pool2d", "(", "label_edge_prediction", "(", "target", ")", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "*", "4", "+", "1", "\n", "loss", "=", "(", "bce", "(", "preds", ",", "target", ")", "*", "wm", ")", ".", "mean", "(", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.basnet.new_loss.Fscore": [[165, 176], ["torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "fs.mean", "torch.avg_pool2d", "tp.sum", "torch.sigmoid.sum", "label_edge_prediction", "target.sum"], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.util.label_edge_prediction"], ["", "def", "Fscore", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "    ", "wm", "=", "F", ".", "avg_pool2d", "(", "label_edge_prediction", "(", "target", ")", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "*", "0.8", "+", "0.2", "\n", "pred", "=", "torch", ".", "sigmoid", "(", "preds", ")", "\n", "tp", "=", "wm", "*", "pred", "*", "target", "\n", "pred", "=", "wm", "*", "pred", "\n", "target", "=", "wm", "*", "target", "\n", "\n", "fs", "=", "1.3", "*", "tp", ".", "sum", "(", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "/", "(", "pred", ".", "sum", "(", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "+", "target", ".", "sum", "(", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "*", "0.3", ")", "\n", "loss", "=", "1", "-", "fs", ".", "mean", "(", ")", "\n", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.basnet.new_loss.cff_loss": [[177, 182], ["new_loss.CTLoss", "new_loss.Fscore"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.loss.CTLoss", "home.repos.pwc.inspect_result.moothes_salod.base.loss.Fscore"], ["", "def", "cff_loss", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "    ", "c", "=", "CTLoss", "(", "preds", ",", "target", ",", "config", ")", "\n", "f", "=", "Fscore", "(", "preds", ",", "target", ",", "config", ")", "\n", "\n", "return", "c", "+", "2", "*", "f", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.basnet.new_loss.Loss_new": [[183, 188], ["new_loss.cff_loss"], "function", ["home.repos.pwc.inspect_result.moothes_salod.itsd.loss.cff_loss"], ["", "def", "Loss_new", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "    ", "loss", "=", "0", "\n", "for", "pred", "in", "preds", "[", "'sal'", "]", ":", "\n", "        ", "loss", "+=", "cff_loss", "(", "pred", ",", "target", ",", "config", ")", "\n", "", "return", "loss", "\n", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.edn.config.get_config": [[7, 21], ["base.config.base_config", "base.config.base_config.parse_args", "vars", "base.config.cfg_convert", "print"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.config.base_config", "home.repos.pwc.inspect_result.moothes_salod.base.config.cfg_convert"], ["def", "get_config", "(", ")", ":", "\n", "    ", "strategy", "=", "'base_sgd'", "\n", "parser", "=", "base_config", "(", "strategy", ")", "\n", "# Add custom params here", "\n", "# parser.add_argument('--size', default=320, type=int, help='Input size')", "\n", "\n", "params", "=", "parser", ".", "parse_args", "(", ")", "\n", "config", "=", "vars", "(", "params", ")", "\n", "cfg_convert", "(", "config", ")", "\n", "print", "(", "'Training {} network with {} backbone using Gpu: {}'", ".", "format", "(", "config", "[", "'model_name'", "]", ",", "config", "[", "'backbone'", "]", ",", "config", "[", "'gpus'", "]", ")", ")", "\n", "\n", "# Config post-process", "\n", "\n", "return", "config", "", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.edn.loss.BCEDiceLoss": [[7, 14], ["torch.nn.functional.binary_cross_entropy", "inputs.sum", "targets.sum"], "function", ["None"], ["\n", "def", "IOU", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "    ", "pred", "=", "torch", ".", "sigmoid", "(", "preds", ")", "\n", "\n", "inter", "=", "torch", ".", "sum", "(", "target", "*", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "\n", "union", "=", "torch", ".", "sum", "(", "target", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "+", "torch", ".", "sum", "(", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "-", "inter", "\n", "iou_loss", "=", "1", "-", "(", "inter", "/", "union", ")", ".", "mean", "(", ")", "\n", "return", "iou_loss", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.edn.loss.Loss": [[15, 25], ["loss.BCEDiceLoss", "torch.sigmoid"], "function", ["home.repos.pwc.inspect_result.moothes_salod.edn.loss.BCEDiceLoss"], ["\n", "", "def", "Loss", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "# preds: Dict type. Customarily, preds['final'] is the final prediction without sigmoid.", "\n", "    ", "bce", "=", "nn", ".", "BCEWithLogitsLoss", "(", "reduction", "=", "'none'", ")", "\n", "\n", "loss", "=", "0", "\n", "for", "pred", "in", "preds", "[", "'sal'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "target", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "loss", "+=", "IOU", "(", "pred", ",", "target", ",", "config", ")", "\n", "\n", "", "gt_edge", "=", "label_edge_prediction", "(", "target", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.edn.model.FrozenBatchNorm2d.__init__": [[15, 21], ["torch.nn.Module.__init__", "model.FrozenBatchNorm2d.register_buffer", "model.FrozenBatchNorm2d.register_buffer", "model.FrozenBatchNorm2d.register_buffer", "model.FrozenBatchNorm2d.register_buffer", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.edn.model.FrozenBatchNorm2d.forward": [[22, 35], ["scale.reshape.reshape.reshape", "bias.reshape.reshape.reshape", "model.FrozenBatchNorm2d.weight.half", "model.FrozenBatchNorm2d.bias.half", "model.FrozenBatchNorm2d.running_mean.half", "model.FrozenBatchNorm2d.running_var.half", "model.FrozenBatchNorm2d.running_var.rsqrt"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input1", ",", "input2", "=", "[", "0", ",", "0", ",", "0", ",", "0", "]", ")", ":", "\n", "        ", "out0", "=", "F", ".", "relu", "(", "self", ".", "bn0", "(", "self", ".", "conv0", "(", "input1", "[", "0", "]", "+", "input2", "[", "0", "]", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out0", "=", "F", ".", "interpolate", "(", "out0", ",", "size", "=", "input1", "[", "1", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "input1", "[", "1", "]", "+", "input2", "[", "1", "]", "+", "out0", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out1", "=", "F", ".", "interpolate", "(", "out1", ",", "size", "=", "input1", "[", "2", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "input1", "[", "2", "]", "+", "input2", "[", "2", "]", "+", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2", "=", "F", ".", "interpolate", "(", "out2", ",", "size", "=", "input1", "[", "3", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "input1", "[", "3", "]", "+", "input2", "[", "3", "]", "+", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "return", "out3", "\n", "\n", "", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.edn.model.FrozenBatchNorm2d.__repr__": [[36, 40], ["None"], "methods", ["None"], ["", "", "class", "Encoder", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.edn.model.ConvBNReLU.__init__": [[44, 61], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "model.FrozenBatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "conv1b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "conv1d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.edn.model.ConvBNReLU.forward": [[62, 72], ["model.ConvBNReLU.conv", "model.ConvBNReLU.bn", "model.ConvBNReLU.act"], "methods", ["None"], ["self", ".", "bn3d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "out1", ")", ":", "\n", "        ", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2", "=", "F", ".", "max_pool2d", "(", "out1", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3", "=", "F", ".", "max_pool2d", "(", "out2", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4", "=", "F", ".", "max_pool2d", "(", "out3", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.edn.model.ResidualConvBlock.__init__": [[75, 84], ["torch.nn.Module.__init__", "model.ConvBNReLU", "model.ConvBNReLU"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["out1b", "=", "F", ".", "relu", "(", "self", ".", "bn1b", "(", "self", ".", "conv1b", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2b", "=", "F", ".", "relu", "(", "self", ".", "bn2b", "(", "self", ".", "conv2b", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3b", "=", "F", ".", "relu", "(", "self", ".", "bn3b", "(", "self", ".", "conv3b", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4b", "=", "F", ".", "relu", "(", "self", ".", "bn4b", "(", "self", ".", "conv4b", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "out1d", "=", "F", ".", "relu", "(", "self", ".", "bn1d", "(", "self", ".", "conv1d", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2d", "=", "F", ".", "relu", "(", "self", ".", "bn2d", "(", "self", ".", "conv2d", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3d", "=", "F", ".", "relu", "(", "self", ".", "bn3d", "(", "self", ".", "conv3d", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4d", "=", "F", ".", "relu", "(", "self", ".", "bn4d", "(", "self", ".", "conv4d", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "return", "(", "out4b", ",", "out3b", ",", "out2b", ",", "out1b", ")", ",", "(", "out4d", ",", "out3d", ",", "out2d", ",", "out1d", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.edn.model.ResidualConvBlock.forward": [[85, 88], ["model.ResidualConvBlock.conv", "model.ResidualConvBlock.residual_conv"], "methods", ["None"], ["\n", "", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.edn.model.ReceptiveConv.__init__": [[91, 126], ["torch.nn.Module.__init__", "int", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "range", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "math.floor", "model.ReceptiveConv.bns.append", "model.ReceptiveConv.convs.append", "model.ReceptiveConv.convs.append", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ",", "encoder", ",", "feat", ")", ":", "\n", "# encoder: backbone, forward function output 5 encoder features. details in methods/base/model.py", "\n", "# feat: length of encoder features. e.g.: VGG:[64, 128, 256, 512, 512]; Resnet:[64, 256, 512, 1024, 2048]", "\n", "        ", "super", "(", "Network", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "conv5b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv2b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv5d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "encoder1", "=", "Encoder", "(", ")", "\n", "self", ".", "decoderb", "=", "Decoder", "(", ")", "\n", "self", ".", "decoderd", "=", "Decoder", "(", ")", "\n", "self", ".", "linearb", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "lineard", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ",", "phase", "=", "'test'", ")", ":", "\n", "        ", "shape", "=", "x", ".", "size", "(", ")", "[", "2", ":", "]", "\n", "out1", ",", "out2", ",", "out3", ",", "out4", ",", "out5", "=", "self", ".", "encoder", "(", "x", ")", "\n", "out2b", ",", "out3b", ",", "out4b", ",", "out5b", "=", "self", ".", "conv2b", "(", "out2", ")", ",", "self", ".", "conv3b", "(", "out3", ")", ",", "self", ".", "conv4b", "(", "out4", ")", ",", "self", ".", "conv5b", "(", "out5", ")", "\n", "out2d", ",", "out3d", ",", "out4d", ",", "out5d", "=", "self", ".", "conv2d", "(", "out2", ")", ",", "self", ".", "conv3d", "(", "out3", ")", ",", "self", ".", "conv4d", "(", "out4", ")", ",", "self", ".", "conv5d", "(", "out5", ")", "\n", "\n", "outb1", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ")", "\n", "outd1", "=", "self", ".", "decoderd", "(", "[", "out5d", ",", "out4d", ",", "out3d", ",", "out2d", "]", ")", "\n", "out1", "=", "torch", ".", "cat", "(", "[", "outb1", ",", "outd1", "]", ",", "dim", "=", "1", ")", "\n", "outb2", ",", "outd2", "=", "self", ".", "encoder1", "(", "out1", ")", "\n", "outb2", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ",", "outb2", ")", "\n", "outd2", "=", "self", ".", "decoderd", "(", "[", "out5d", ",", "out4d", ",", "out3d", ",", "out2d", "]", ",", "outd2", ")", "\n", "out2", "=", "torch", ".", "cat", "(", "[", "outb2", ",", "outd2", "]", ",", "dim", "=", "1", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.edn.model.ReceptiveConv.forward": [[127, 149], ["model.ReceptiveConv.conv1", "model.ReceptiveConv.bn1", "model.ReceptiveConv.relu", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "range", "model.ReceptiveConv.conv3", "model.ReceptiveConv.bn3", "model.ReceptiveConv.relu", "model.ReceptiveConv.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["\n", "out1", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outb1", "=", "F", ".", "interpolate", "(", "self", ".", "linearb", "(", "outb1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outd1", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "\n", "out2", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outb2", "=", "F", ".", "interpolate", "(", "self", ".", "linearb", "(", "outb2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outd2", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "#return outb1, outd1, out1, outb2, outd2, out2", "\n", "\n", "OutDict", "=", "{", "}", "\n", "OutDict", "[", "'final'", "]", "=", "out2", "\n", "OutDict", "[", "'body'", "]", "=", "[", "outb1", ",", "outb2", "]", "\n", "OutDict", "[", "'detail'", "]", "=", "[", "outd1", ",", "outd2", "]", "\n", "OutDict", "[", "'sal'", "]", "=", "[", "out1", ",", "out2", "]", "\n", "return", "OutDict", "\n", "\n", "\n", "\n", "", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.edn.model.InvertedResidual.__init__": [[151, 174], ["torch.nn.Module.__init__", "int", "layers.extend", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "round", "layers.append", "model.ConvBNReLU", "model.ConvBNReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], []], "home.repos.pwc.inspect_result.moothes_salod.edn.model.InvertedResidual.forward": [[175, 180], ["model.InvertedResidual.conv", "model.InvertedResidual.conv"], "methods", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.edn.model.Network.__init__": [[194, 262], ["torch.nn.Module.__init__", "torch.nn.AdaptiveAvgPool2d", "torch.nn.AdaptiveAvgPool2d", "torch.nn.AdaptiveAvgPool2d", "torch.nn.AdaptiveAvgPool2d", "model.CustomDecoder", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "feat.append", "feat.append", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "feat.append", "feat.append", "torch.nn.MaxPool2d", "torch.nn.MaxPool2d", "torch.nn.MaxPool2d", "torch.nn.MaxPool2d", "model.ConvBNReLU", "model.ConvBNReLU", "torch.nn.MaxPool2d", "torch.nn.MaxPool2d", "torch.nn.MaxPool2d", "torch.nn.MaxPool2d", "model.ConvBNReLU", "model.ConvBNReLU", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "feat.append", "feat.append", "feat.append", "feat.append", "model.Network._make_layer", "model.Network._make_layer", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "model.InvertedResidual", "model.InvertedResidual", "model.InvertedResidual", "model.InvertedResidual"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.ResNet._make_layer"], []], "home.repos.pwc.inspect_result.moothes_salod.edn.model.Network._make_layer": [[264, 289], ["layers.append", "range", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "base.encoder.resnet.Bottleneck", "layers.append", "model.conv1x1", "norm_layer", "base.encoder.resnet.Bottleneck"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.conv1x1"], []], "home.repos.pwc.inspect_result.moothes_salod.edn.model.Network.forward": [[290, 316], ["model.Network.encoder", "model.Network.conv6", "model.Network.conv7", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "model.Network.fpn", "enumerate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.Network.gap", "saliency_maps.append", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "getattr", "str"], "methods", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.edn.model.CustomDecoder.__init__": [[320, 337], ["torch.nn.Module.__init__", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "range", "model.CustomDecoder.inners_a.append", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "range", "model.CustomDecoder.inners_a.append", "model.CustomDecoder.inners_b.append", "model.ConvBNReLU", "len", "model.CustomDecoder.fuse.append", "len", "model.ConvBNReLU", "model.ConvBNReLU", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "len", "model.ReceptiveConv", "model.ReceptiveConv", "len"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], []], "home.repos.pwc.inspect_result.moothes_salod.edn.model.CustomDecoder.forward": [[338, 358], ["range", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "results.insert", "len", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.edn.model.conv3x3": [[182, 186], ["torch.nn.Conv2d"], "function", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.edn.model.conv1x1": [[188, 191], ["torch.nn.Conv2d"], "function", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.cpd.config.get_config": [[8, 19], ["base.config.base_config", "base.config.base_config.parse_args", "vars", "base.config.cfg_convert", "print"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.config.base_config", "home.repos.pwc.inspect_result.moothes_salod.base.config.cfg_convert"], ["    ", "strategy", "=", "'base_sgd'", "\n", "parser", "=", "base_config", "(", "strategy", ")", "\n", "# Add custom params here", "\n", "# parser.add_argument('--size', default=320, type=int, help='Input size')", "\n", "\n", "params", "=", "parser", ".", "parse_args", "(", ")", "\n", "config", "=", "vars", "(", "params", ")", "\n", "cfg_convert", "(", "config", ")", "\n", "print", "(", "'Training {} network with {} backbone using Gpu: {}'", ".", "format", "(", "config", "[", "'model_name'", "]", ",", "config", "[", "'backbone'", "]", ",", "config", "[", "'gpus'", "]", ")", ")", "\n", "\n", "# Config post-process", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.cpd.loss.CTLoss": [[8, 13], ["torch.nn.BCEWithLogitsLoss", "torch.nn.functional.avg_pool2d", "label_edge_prediction", "nn.BCEWithLogitsLoss."], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.util.label_edge_prediction"], ["def", "IOU", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "    ", "pred", "=", "torch", ".", "sigmoid", "(", "preds", ")", "\n", "\n", "inter", "=", "torch", ".", "sum", "(", "target", "*", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "\n", "union", "=", "torch", ".", "sum", "(", "target", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "+", "torch", ".", "sum", "(", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "-", "inter", "\n", "iou_loss", "=", "1", "-", "(", "inter", "/", "union", ")", ".", "mean", "(", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.cpd.loss.Fscore": [[15, 26], ["torch.sigmoid", "fs.mean", "torch.nn.functional.avg_pool2d", "tp.sum", "torch.sigmoid.sum", "label_edge_prediction", "target.sum"], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.util.label_edge_prediction"], ["\n", "", "def", "Loss", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "# preds: Dict type. Customarily, preds['final'] is the final prediction without sigmoid.", "\n", "    ", "bce", "=", "nn", ".", "BCEWithLogitsLoss", "(", "reduction", "=", "'none'", ")", "\n", "\n", "loss", "=", "0", "\n", "for", "pred", "in", "preds", "[", "'sal'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "target", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "loss", "+=", "IOU", "(", "pred", ",", "target", ",", "config", ")", "\n", "\n", "", "gt_edge", "=", "label_edge_prediction", "(", "target", ")", "\n", "for", "pred", "in", "preds", "[", "'detail'", "]", ":", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.cpd.loss.cff_loss": [[27, 32], ["loss.CTLoss", "loss.Fscore"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.loss.CTLoss", "home.repos.pwc.inspect_result.moothes_salod.base.loss.Fscore"], ["        ", "loss", "+=", "bce", "(", "pred", ",", "gt_edge", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "\n", "", "gt_body", "=", "(", "target", "-", "gt_edge", ")", ".", "gt", "(", "0.5", ")", "\n", "for", "pred", "in", "preds", "[", "'body'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "gt_body", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.cpd.loss.Loss_new": [[34, 40], ["loss.cff_loss"], "function", ["home.repos.pwc.inspect_result.moothes_salod.itsd.loss.cff_loss"], ["\n", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.cpd.loss.Loss": [[41, 49], ["torch.nn.BCEWithLogitsLoss", "nn.BCEWithLogitsLoss."], "function", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.cpd.model.HA.__init__": [[36, 41], ["torch.Module.__init__", "numpy.float32", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "model.gkern", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.cpd.model.gkern"], ["", "", "class", "Encoder", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.cpd.model.HA.forward": [[42, 47], ["torch.nn.functional.conv2d", "torch.nn.functional.conv2d", "model.min_max_norm", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "min_max_norm.max"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.cpd.model.min_max_norm"], ["self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.cpd.model.BasicConv2d.__init__": [[49, 56], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["self", ".", "bn1b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.cpd.model.BasicConv2d.forward": [[57, 61], ["model.BasicConv2d.conv", "model.BasicConv2d.bn"], "methods", ["None"], ["self", ".", "conv1d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.cpd.model.RFB.__init__": [[65, 91], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["\n", "", "def", "forward", "(", "self", ",", "out1", ")", ":", "\n", "        ", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2", "=", "F", ".", "max_pool2d", "(", "out1", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3", "=", "F", ".", "max_pool2d", "(", "out2", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4", "=", "F", ".", "max_pool2d", "(", "out3", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out4", "=", "F", ".", "relu", "(", "self", ".", "bn4", "(", "self", ".", "conv4", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "out1b", "=", "F", ".", "relu", "(", "self", ".", "bn1b", "(", "self", ".", "conv1b", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2b", "=", "F", ".", "relu", "(", "self", ".", "bn2b", "(", "self", ".", "conv2b", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3b", "=", "F", ".", "relu", "(", "self", ".", "bn3b", "(", "self", ".", "conv3b", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4b", "=", "F", ".", "relu", "(", "self", ".", "bn4b", "(", "self", ".", "conv4b", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "out1d", "=", "F", ".", "relu", "(", "self", ".", "bn1d", "(", "self", ".", "conv1d", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2d", "=", "F", ".", "relu", "(", "self", ".", "bn2d", "(", "self", ".", "conv2d", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3d", "=", "F", ".", "relu", "(", "self", ".", "bn3d", "(", "self", ".", "conv3d", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4d", "=", "F", ".", "relu", "(", "self", ".", "bn4d", "(", "self", ".", "conv4d", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "return", "(", "out4b", ",", "out3b", ",", "out2b", ",", "out1b", ")", ",", "(", "out4d", ",", "out3d", ",", "out2d", ",", "out1d", ")", "\n", "\n", "", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n", "\n", "", "", "class", "Network", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "config", ",", "encoder", ",", "feat", ")", ":", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.cpd.model.RFB.forward": [[92, 102], ["model.RFB.branch0", "model.RFB.branch1", "model.RFB.branch2", "model.RFB.branch3", "model.RFB.conv_cat", "model.RFB.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.RFB.conv_res"], "methods", ["None"], ["# encoder: backbone, forward function output 5 encoder features. details in methods/base/model.py", "\n", "# feat: length of encoder features. e.g.: VGG:[64, 128, 256, 512, 512]; Resnet:[64, 256, 512, 1024, 2048]", "\n", "        ", "super", "(", "Network", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "conv5b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv2b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv5d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.cpd.model.aggregation.__init__": [[107, 122], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.Upsample", "torch.Upsample", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["self", ".", "encoder1", "=", "Encoder", "(", ")", "\n", "self", ".", "decoderb", "=", "Decoder", "(", ")", "\n", "self", ".", "decoderd", "=", "Decoder", "(", ")", "\n", "self", ".", "linearb", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "lineard", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ",", "phase", "=", "'test'", ")", ":", "\n", "        ", "shape", "=", "x", ".", "size", "(", ")", "[", "2", ":", "]", "\n", "out1", ",", "out2", ",", "out3", ",", "out4", ",", "out5", "=", "self", ".", "encoder", "(", "x", ")", "\n", "out2b", ",", "out3b", ",", "out4b", ",", "out5b", "=", "self", ".", "conv2b", "(", "out2", ")", ",", "self", ".", "conv3b", "(", "out3", ")", ",", "self", ".", "conv4b", "(", "out4", ")", ",", "self", ".", "conv5b", "(", "out5", ")", "\n", "out2d", ",", "out3d", ",", "out4d", ",", "out5d", "=", "self", ".", "conv2d", "(", "out2", ")", ",", "self", ".", "conv3d", "(", "out3", ")", ",", "self", ".", "conv4d", "(", "out4", ")", ",", "self", ".", "conv5d", "(", "out5", ")", "\n", "\n", "outb1", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ")", "\n", "outd1", "=", "self", ".", "decoderd", "(", "[", "out5d", ",", "out4d", ",", "out3d", ",", "out2d", "]", ")", "\n", "out1", "=", "torch", ".", "cat", "(", "[", "outb1", ",", "outd1", "]", ",", "dim", "=", "1", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.cpd.model.aggregation.forward": [[123, 139], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.aggregation.conv_concat2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.aggregation.conv_concat3", "model.aggregation.conv4", "model.aggregation.conv5", "model.aggregation.conv_upsample1", "model.aggregation.upsample", "model.aggregation.conv_upsample2", "model.aggregation.conv_upsample3", "model.aggregation.conv_upsample4", "model.aggregation.conv_upsample5", "model.aggregation.upsample", "model.aggregation.upsample", "model.aggregation.upsample", "model.aggregation.upsample", "model.aggregation.upsample"], "methods", ["None"], ["outb2", ",", "outd2", "=", "self", ".", "encoder1", "(", "out1", ")", "\n", "outb2", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ",", "outb2", ")", "\n", "outd2", "=", "self", ".", "decoderd", "(", "[", "out5d", ",", "out4d", ",", "out3d", ",", "out2d", "]", ",", "outd2", ")", "\n", "out2", "=", "torch", ".", "cat", "(", "[", "outb2", ",", "outd2", "]", ",", "dim", "=", "1", ")", "\n", "\n", "out1", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outb1", "=", "F", ".", "interpolate", "(", "self", ".", "linearb", "(", "outb1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outd1", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "\n", "out2", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outb2", "=", "F", ".", "interpolate", "(", "self", ".", "linearb", "(", "outb2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outd2", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "#return outb1, outd1, out1, outb2, outd2, out2", "\n", "\n", "OutDict", "=", "{", "}", "\n", "OutDict", "[", "'final'", "]", "=", "out2", "\n", "OutDict", "[", "'body'", "]", "=", "[", "outb1", ",", "outb2", "]", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.cpd.model.Network.__init__": [[157, 188], ["torch.Module.__init__", "model.RFB", "model.RFB", "model.RFB", "model.aggregation", "model.RFB", "model.RFB", "model.RFB", "model.aggregation", "torch.Upsample", "torch.Upsample", "model.HA", "model.Network.encoder._make_layer", "model.Network.encoder._make_layer", "model.make_layers", "model.make_layers"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.moothes_salod.encoder.vgg.make_layers", "home.repos.pwc.inspect_result.moothes_salod.encoder.vgg.make_layers"], []], "home.repos.pwc.inspect_result.moothes_salod.cpd.model.Network.forward": [[189, 212], ["model.Network.encoder", "model.Network.rfb2_1", "model.Network.rfb3_1", "model.Network.rfb4_1", "model.Network.agg1", "model.Network.HA", "model.Network.cv1", "model.Network.cv2", "model.Network.rfb2_2", "model.Network.rfb3_2", "model.Network.rfb4_2", "model.Network.agg2", "model.Network.upsample", "model.Network.upsample", "model.Network.sigmoid"], "methods", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.cpd.model.Network.initialize_weights": [[213, 231], ["torchvision.resnet50", "torchvision.resnet50.state_dict", "model.Network.resnet.state_dict().items", "model.Network.resnet.load_state_dict", "len", "len", "model.Network.resnet.state_dict", "models.resnet50.state_dict.keys", "all_params.keys", "model.Network.resnet.state_dict().keys", "model.Network.resnet.state_dict", "k.split", "k.split", "k.split", "k.split"], "methods", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.cpd.model.gkern": [[18, 25], ["numpy.linspace", "numpy.diff", "numpy.sqrt", "scipy.norm.cdf", "numpy.outer", "np.sqrt.sum"], "function", ["None"], ["self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "input1", ",", "input2", "=", "[", "0", ",", "0", ",", "0", ",", "0", "]", ")", ":", "\n", "        ", "out0", "=", "F", ".", "relu", "(", "self", ".", "bn0", "(", "self", ".", "conv0", "(", "input1", "[", "0", "]", "+", "input2", "[", "0", "]", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out0", "=", "F", ".", "interpolate", "(", "out0", ",", "size", "=", "input1", "[", "1", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "input1", "[", "1", "]", "+", "input2", "[", "1", "]", "+", "out0", ")", ")", ",", "inplace", "=", "True", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.cpd.model.min_max_norm": [[27, 32], ["[].unsqueeze().unsqueeze().expand_as", "[].unsqueeze().unsqueeze().expand_as", "in_.div", "[].unsqueeze().unsqueeze", "[].unsqueeze().unsqueeze", "[].unsqueeze", "[].unsqueeze", "[].max", "[].min", "in_.max", "in_.min"], "function", ["None"], ["out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "input1", "[", "2", "]", "+", "input2", "[", "2", "]", "+", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2", "=", "F", ".", "interpolate", "(", "out2", ",", "size", "=", "input1", "[", "3", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "input1", "[", "3", "]", "+", "input2", "[", "3", "]", "+", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "return", "out3", "\n", "\n", "", "def", "initialize", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.cpd.model.make_layers": [[141, 154], ["torch.Sequential", "torch.Conv2d", "torch.MaxPool2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "function", ["None"], ["OutDict", "[", "'sal'", "]", "=", "[", "out1", ",", "out2", "]", "\n", "return", "OutDict", "\n", "\n", "\n", "\n", "", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.template.config.get_config": [[7, 21], ["base.config.base_config", "base.config.base_config.parse_args", "vars", "base.config.cfg_convert", "print"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.config.base_config", "home.repos.pwc.inspect_result.moothes_salod.base.config.cfg_convert"], ["def", "get_config", "(", ")", ":", "\n", "    ", "strategy", "=", "'base_sgd'", "\n", "parser", "=", "base_config", "(", "strategy", ")", "\n", "# Add custom params here", "\n", "# parser.add_argument('--size', default=320, type=int, help='Input size')", "\n", "\n", "params", "=", "parser", ".", "parse_args", "(", ")", "\n", "config", "=", "vars", "(", "params", ")", "\n", "cfg_convert", "(", "config", ")", "\n", "print", "(", "'Training {} network with {} backbone using Gpu: {}'", ".", "format", "(", "config", "[", "'model_name'", "]", ",", "config", "[", "'backbone'", "]", ",", "config", "[", "'gpus'", "]", ")", ")", "\n", "\n", "# Config post-process", "\n", "\n", "return", "config", "", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.template.loss.Loss": [[8, 14], ["torch.nn.BCEWithLogitsLoss", "nn.BCEWithLogitsLoss.mean", "nn.BCEWithLogitsLoss.", "target.gt().float", "target.gt"], "function", ["None"], ["def", "IOU", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "    ", "pred", "=", "torch", ".", "sigmoid", "(", "preds", ")", "\n", "\n", "inter", "=", "torch", ".", "sum", "(", "target", "*", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "\n", "union", "=", "torch", ".", "sum", "(", "target", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "+", "torch", ".", "sum", "(", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "-", "inter", "\n", "iou_loss", "=", "1", "-", "(", "inter", "/", "union", ")", ".", "mean", "(", ")", "\n", "return", "iou_loss", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.template.model.Network.__init__": [[10, 17], ["torch.nn.Module.__init__", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["class", "Decoder", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv0", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn0", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.template.model.Network.forward": [[18, 29], ["model.Network.encoder", "model.Network.decoder", "torch.nn.functional.interpolate", "model.Network.size"], "methods", ["None"], ["self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "input1", ",", "input2", "=", "[", "0", ",", "0", ",", "0", ",", "0", "]", ")", ":", "\n", "        ", "out0", "=", "F", ".", "relu", "(", "self", ".", "bn0", "(", "self", ".", "conv0", "(", "input1", "[", "0", "]", "+", "input2", "[", "0", "]", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out0", "=", "F", ".", "interpolate", "(", "out0", ",", "size", "=", "input1", "[", "1", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "input1", "[", "1", "]", "+", "input2", "[", "1", "]", "+", "out0", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out1", "=", "F", ".", "interpolate", "(", "out1", ",", "size", "=", "input1", "[", "2", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "input1", "[", "2", "]", "+", "input2", "[", "2", "]", "+", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2", "=", "F", ".", "interpolate", "(", "out2", ",", "size", "=", "input1", "[", "3", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "input1", "[", "3", "]", "+", "input2", "[", "3", "]", "+", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.unet.config.get_config": [[7, 21], ["base.config.base_config", "base.config.base_config.parse_args", "vars", "base.config.cfg_convert", "print"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.config.base_config", "home.repos.pwc.inspect_result.moothes_salod.base.config.cfg_convert"], ["def", "get_config", "(", ")", ":", "\n", "    ", "strategy", "=", "'base_sgd'", "\n", "parser", "=", "base_config", "(", "strategy", ")", "\n", "# Add custom params here", "\n", "# parser.add_argument('--size', default=320, type=int, help='Input size')", "\n", "\n", "params", "=", "parser", ".", "parse_args", "(", ")", "\n", "config", "=", "vars", "(", "params", ")", "\n", "cfg_convert", "(", "config", ")", "\n", "print", "(", "'Training {} network with {} backbone using Gpu: {}'", ".", "format", "(", "config", "[", "'model_name'", "]", ",", "config", "[", "'backbone'", "]", ",", "config", "[", "'gpus'", "]", ")", ")", "\n", "\n", "# Config post-process", "\n", "\n", "return", "config", "", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.unet.loss.Loss": [[8, 14], ["torch.nn.BCEWithLogitsLoss", "nn.BCEWithLogitsLoss.mean", "nn.BCEWithLogitsLoss.", "target.gt().float", "target.gt"], "function", ["None"], ["def", "IOU", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "    ", "pred", "=", "torch", ".", "sigmoid", "(", "preds", ")", "\n", "\n", "inter", "=", "torch", ".", "sum", "(", "target", "*", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "\n", "union", "=", "torch", ".", "sum", "(", "target", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "+", "torch", ".", "sum", "(", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "-", "inter", "\n", "iou_loss", "=", "1", "-", "(", "inter", "/", "union", ")", ".", "mean", "(", ")", "\n", "return", "iou_loss", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.unet.model.conv_block.__init__": [[14, 21], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["self", ".", "bn0", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.unet.model.conv_block.forward": [[23, 26], ["model.conv_block.conv"], "methods", ["None"], ["        ", "out0", "=", "F", ".", "relu", "(", "self", ".", "bn0", "(", "self", ".", "conv0", "(", "input1", "[", "0", "]", "+", "input2", "[", "0", "]", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out0", "=", "F", ".", "interpolate", "(", "out0", ",", "size", "=", "input1", "[", "1", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "input1", "[", "1", "]", "+", "input2", "[", "1", "]", "+", "out0", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out1", "=", "F", ".", "interpolate", "(", "out1", ",", "size", "=", "input1", "[", "2", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.unet.model.up_conv.__init__": [[32, 39], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Upsample", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n", "\n", "", "", "class", "Encoder", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.unet.model.up_conv.forward": [[41, 44], ["model.up_conv.up"], "methods", ["None"], ["self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.unet.model.U_Net.__init__": [[51, 81], ["torch.nn.Module.__init__", "torch.nn.MaxPool2d", "torch.nn.MaxPool2d", "torch.nn.MaxPool2d", "torch.nn.MaxPool2d", "model.conv_block", "model.conv_block", "model.conv_block", "model.conv_block", "model.conv_block", "model.up_conv", "model.conv_block", "model.up_conv", "model.conv_block", "model.up_conv", "model.conv_block", "model.up_conv", "model.conv_block", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["self", ".", "bn2b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "conv1d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "out1", ")", ":", "\n", "        ", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2", "=", "F", ".", "max_pool2d", "(", "out1", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3", "=", "F", ".", "max_pool2d", "(", "out2", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4", "=", "F", ".", "max_pool2d", "(", "out3", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out4", "=", "F", ".", "relu", "(", "self", ".", "bn4", "(", "self", ".", "conv4", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "out1b", "=", "F", ".", "relu", "(", "self", ".", "bn1b", "(", "self", ".", "conv1b", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2b", "=", "F", ".", "relu", "(", "self", ".", "bn2b", "(", "self", ".", "conv2b", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3b", "=", "F", ".", "relu", "(", "self", ".", "bn3b", "(", "self", ".", "conv3b", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4b", "=", "F", ".", "relu", "(", "self", ".", "bn4b", "(", "self", ".", "conv4b", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "out1d", "=", "F", ".", "relu", "(", "self", ".", "bn1d", "(", "self", ".", "conv1d", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2d", "=", "F", ".", "relu", "(", "self", ".", "bn2d", "(", "self", ".", "conv2d", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.unet.model.U_Net.forward": [[84, 122], ["model.U_Net.Conv1", "model.U_Net.Maxpool1", "model.U_Net.Conv2", "model.U_Net.Maxpool2", "model.U_Net.Conv3", "model.U_Net.Maxpool3", "model.U_Net.Conv4", "model.U_Net.Maxpool4", "model.U_Net.Conv5", "model.U_Net.Up5", "torch.cat", "model.U_Net.Up_conv5", "model.U_Net.Up4", "torch.cat", "model.U_Net.Up_conv4", "model.U_Net.Up3", "torch.cat", "model.U_Net.Up_conv3", "model.U_Net.Up2", "torch.cat", "model.U_Net.Up_conv2", "model.U_Net.Conv"], "methods", ["None"], ["return", "(", "out4b", ",", "out3b", ",", "out2b", ",", "out1b", ")", ",", "(", "out4d", ",", "out3d", ",", "out2d", ",", "out1d", ")", "\n", "\n", "", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n", "\n", "", "", "class", "Network", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "config", ",", "encoder", ",", "feat", ")", ":", "\n", "# encoder: backbone, forward function output 5 encoder features. details in methods/base/model.py", "\n", "# feat: length of encoder features. e.g.: VGG:[64, 128, 256, 512, 512]; Resnet:[64, 256, 512, 1024, 2048]", "\n", "        ", "super", "(", "Network", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "conv5b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv2b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv5d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "encoder1", "=", "Encoder", "(", ")", "\n", "self", ".", "decoderb", "=", "Decoder", "(", ")", "\n", "self", ".", "decoderd", "=", "Decoder", "(", ")", "\n", "self", ".", "linearb", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "lineard", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ",", "phase", "=", "'test'", ")", ":", "\n", "        ", "shape", "=", "x", ".", "size", "(", ")", "[", "2", ":", "]", "\n", "out1", ",", "out2", ",", "out3", ",", "out4", ",", "out5", "=", "self", ".", "encoder", "(", "x", ")", "\n", "out2b", ",", "out3b", ",", "out4b", ",", "out5b", "=", "self", ".", "conv2b", "(", "out2", ")", ",", "self", ".", "conv3b", "(", "out3", ")", ",", "self", ".", "conv4b", "(", "out4", ")", ",", "self", ".", "conv5b", "(", "out5", ")", "\n", "out2d", ",", "out3d", ",", "out4d", ",", "out5d", "=", "self", ".", "conv2d", "(", "out2", ")", ",", "self", ".", "conv3d", "(", "out3", ")", ",", "self", ".", "conv4d", "(", "out4", ")", ",", "self", ".", "conv5d", "(", "out5", ")", "\n", "\n", "outb1", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ")", "\n", "outd1", "=", "self", ".", "decoderd", "(", "[", "out5d", ",", "out4d", ",", "out3d", ",", "out2d", "]", ")", "\n", "out1", "=", "torch", ".", "cat", "(", "[", "outb1", ",", "outd1", "]", ",", "dim", "=", "1", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.unet.model.Network.__init__": [[125, 146], ["torch.nn.Module.__init__", "model.up_conv", "model.conv_block", "model.up_conv", "model.conv_block", "model.up_conv", "model.conv_block", "model.up_conv", "model.conv_block", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["outd2", "=", "self", ".", "decoderd", "(", "[", "out5d", ",", "out4d", ",", "out3d", ",", "out2d", "]", ",", "outd2", ")", "\n", "out2", "=", "torch", ".", "cat", "(", "[", "outb2", ",", "outd2", "]", ",", "dim", "=", "1", ")", "\n", "\n", "out1", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outb1", "=", "F", ".", "interpolate", "(", "self", ".", "linearb", "(", "outb1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outd1", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "\n", "out2", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outb2", "=", "F", ".", "interpolate", "(", "self", ".", "linearb", "(", "outb2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outd2", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "#return outb1, outd1, out1, outb2, outd2, out2", "\n", "\n", "OutDict", "=", "{", "}", "\n", "OutDict", "[", "'final'", "]", "=", "out2", "\n", "OutDict", "[", "'body'", "]", "=", "[", "outb1", ",", "outb2", "]", "\n", "OutDict", "[", "'detail'", "]", "=", "[", "outd1", ",", "outd2", "]", "\n", "OutDict", "[", "'sal'", "]", "=", "[", "out1", ",", "out2", "]", "\n", "return", "OutDict", "\n", "\n", "\n", "\n", "", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.unet.model.Network.reduce": [[147, 150], ["x.size", "torch.max", "x.view"], "methods", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.unet.model.Network.forward": [[151, 188], ["model.Network.encoder", "model.Network.reduce", "model.Network.reduce", "model.Network.reduce", "model.Network.reduce", "model.Network.reduce", "model.Network.Up5", "torch.cat", "model.Network.Up_conv5", "model.Network.Up4", "torch.cat", "model.Network.Up_conv4", "model.Network.Up3", "torch.cat", "model.Network.Up_conv3", "model.Network.Up2", "torch.cat", "model.Network.Up_conv2", "model.Network.Conv", "torch.nn.functional.interpolate", "x.size"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.unet.model.Network.reduce", "home.repos.pwc.inspect_result.moothes_salod.unet.model.Network.reduce", "home.repos.pwc.inspect_result.moothes_salod.unet.model.Network.reduce", "home.repos.pwc.inspect_result.moothes_salod.unet.model.Network.reduce", "home.repos.pwc.inspect_result.moothes_salod.unet.model.Network.reduce"], []], "home.repos.pwc.inspect_result.moothes_salod.pfa.config.get_config": [[7, 22], ["base.config.base_config", "base.config.base_config.add_argument", "base.config.base_config.add_argument", "base.config.base_config.add_argument", "base.config.base_config.parse_args", "vars", "base.config.cfg_convert", "print"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.config.base_config", "home.repos.pwc.inspect_result.moothes_salod.base.config.cfg_convert"], ["def", "get_config", "(", ")", ":", "\n", "    ", "strategy", "=", "'base_sgd'", "\n", "parser", "=", "base_config", "(", "strategy", ")", "\n", "# Add custom params here", "\n", "# parser.add_argument('--size', default=320, type=int, help='Input size')", "\n", "\n", "params", "=", "parser", ".", "parse_args", "(", ")", "\n", "config", "=", "vars", "(", "params", ")", "\n", "cfg_convert", "(", "config", ")", "\n", "print", "(", "'Training {} network with {} backbone using Gpu: {}'", ".", "format", "(", "config", "[", "'model_name'", "]", ",", "config", "[", "'backbone'", "]", ",", "config", "[", "'gpus'", "]", ")", ")", "\n", "\n", "# Config post-process", "\n", "\n", "return", "config", "", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.pfa.loss.logit": [[7, 12], ["torch.clamp", "torch.log"], "function", ["None"], ["\n", "def", "IOU", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "    ", "pred", "=", "torch", ".", "sigmoid", "(", "preds", ")", "\n", "\n", "inter", "=", "torch", ".", "sum", "(", "target", "*", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "\n", "union", "=", "torch", ".", "sum", "(", "target", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "+", "torch", ".", "sum", "(", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "-", "inter", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.pfa.loss.cross_entropy": [[13, 15], ["torch.mean", "torch.log", "torch.exp"], "function", ["None"], ["iou_loss", "=", "1", "-", "(", "inter", "/", "union", ")", ".", "mean", "(", ")", "\n", "return", "iou_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.pfa.loss.weighted_cross_entropy": [[16, 18], ["torch.mean", "torch.log", "torch.log", "torch.exp", "torch.exp"], "function", ["None"], ["", "def", "Loss", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "# preds: Dict type. Customarily, preds['final'] is the final prediction without sigmoid.", "\n", "    ", "bce", "=", "nn", ".", "BCEWithLogitsLoss", "(", "reduction", "=", "'none'", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.pfa.loss.get_edge": [[41, 45], ["torch.nn.functional.conv2d", "torch.abs", "torch.tanh"], "function", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.pfa.loss.Loss": [[46, 56], ["torch.sigmoid", "loss.weighted_cross_entropy"], "function", ["home.repos.pwc.inspect_result.moothes_salod.pfa.loss.weighted_cross_entropy"], []], "home.repos.pwc.inspect_result.moothes_salod.pfa.model.decoder.__init__": [[24, 77], ["torch.Module.__init__", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["out0", "=", "F", ".", "interpolate", "(", "out0", ",", "size", "=", "input1", "[", "1", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "input1", "[", "1", "]", "+", "input2", "[", "1", "]", "+", "out0", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out1", "=", "F", ".", "interpolate", "(", "out1", ",", "size", "=", "input1", "[", "2", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "input1", "[", "2", "]", "+", "input2", "[", "2", "]", "+", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2", "=", "F", ".", "interpolate", "(", "out2", ",", "size", "=", "input1", "[", "3", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "input1", "[", "3", "]", "+", "input2", "[", "3", "]", "+", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "return", "out3", "\n", "\n", "", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n", "\n", "", "", "class", "Encoder", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "conv1b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "conv1d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "out1", ")", ":", "\n", "        ", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2", "=", "F", ".", "max_pool2d", "(", "out1", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3", "=", "F", ".", "max_pool2d", "(", "out2", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4", "=", "F", ".", "max_pool2d", "(", "out3", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out4", "=", "F", ".", "relu", "(", "self", ".", "bn4", "(", "self", ".", "conv4", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "out1b", "=", "F", ".", "relu", "(", "self", ".", "bn1b", "(", "self", ".", "conv1b", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2b", "=", "F", ".", "relu", "(", "self", ".", "bn2b", "(", "self", ".", "conv2b", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3b", "=", "F", ".", "relu", "(", "self", ".", "bn3b", "(", "self", ".", "conv3b", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.pfa.model.decoder.forward": [[79, 117], ["model.decoder.conv14", "model.decoder.relu", "model.decoder.conv15", "model.decoder.relu", "model.concatenate", "model.decoder.conv16", "model.decoder.relu", "model.decoder.relu", "model.decoder.relu", "model.decoder.relu", "model.concatenate", "model.decoder.conv29", "model.decoder.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.decoder.conv34", "model.decoder.bn1", "model.decoder.bn2", "model.decoder.bn3", "model.decoder.bn4", "model.decoder.bn5", "model.decoder.bn6", "model.decoder.linear1", "model.decoder.linear2().view().repeat", "model.decoder.bn7", "torch.UpsamplingBilinear2d", "torch.UpsamplingBilinear2d", "torch.UpsamplingBilinear2d", "model.decoder.relu", "model.decoder.relu", "model.decoder.relu", "model.decoder.relu", "model.decoder.sigmoid", "SA.repeat.repeat.repeat", "model.concatenate", "model.concatenate", "model.concatenate", "model.decoder.bn8", "model.decoder.bn9", "model.decoder.bn10", "model.decoder.bn11", "torch.UpsamplingBilinear2d", "torch.UpsamplingBilinear2d", "torch.UpsamplingBilinear2d", "model.decoder.linear2().view", "model.decoder.conv30", "model.decoder.conv31", "model.decoder.conv32", "model.decoder.conv33", "model.decoder.conv17", "model.decoder.conv18", "model.decoder.conv19", "model.decoder.conv20", "model.decoder.conv21", "model.decoder.conv22", "model.decoder.conv23", "model.decoder.conv24", "model.decoder.conv25", "model.decoder.conv26", "model.decoder.conv27", "model.decoder.conv28", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "model.decoder.linear2"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.pfa.model.concatenate", "home.repos.pwc.inspect_result.moothes_salod.pfa.model.concatenate", "home.repos.pwc.inspect_result.moothes_salod.pfa.model.concatenate", "home.repos.pwc.inspect_result.moothes_salod.pfa.model.concatenate", "home.repos.pwc.inspect_result.moothes_salod.pfa.model.concatenate"], ["\n", "out1d", "=", "F", ".", "relu", "(", "self", ".", "bn1d", "(", "self", ".", "conv1d", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2d", "=", "F", ".", "relu", "(", "self", ".", "bn2d", "(", "self", ".", "conv2d", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3d", "=", "F", ".", "relu", "(", "self", ".", "bn3d", "(", "self", ".", "conv3d", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4d", "=", "F", ".", "relu", "(", "self", ".", "bn4d", "(", "self", ".", "conv4d", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "return", "(", "out4b", ",", "out3b", ",", "out2b", ",", "out1b", ")", ",", "(", "out4d", ",", "out3d", ",", "out2d", ",", "out1d", ")", "\n", "\n", "", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n", "\n", "", "", "class", "Network", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "config", ",", "encoder", ",", "feat", ")", ":", "\n", "# encoder: backbone, forward function output 5 encoder features. details in methods/base/model.py", "\n", "# feat: length of encoder features. e.g.: VGG:[64, 128, 256, 512, 512]; Resnet:[64, 256, 512, 1024, 2048]", "\n", "        ", "super", "(", "Network", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "conv5b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv2b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv5d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "encoder1", "=", "Encoder", "(", ")", "\n", "self", ".", "decoderb", "=", "Decoder", "(", ")", "\n", "self", ".", "decoderd", "=", "Decoder", "(", ")", "\n", "self", ".", "linearb", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "lineard", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ",", "phase", "=", "'test'", ")", ":", "\n", "        ", "shape", "=", "x", ".", "size", "(", ")", "[", "2", ":", "]", "\n", "out1", ",", "out2", ",", "out3", ",", "out4", ",", "out5", "=", "self", ".", "encoder", "(", "x", ")", "\n", "out2b", ",", "out3b", ",", "out4b", ",", "out5b", "=", "self", ".", "conv2b", "(", "out2", ")", ",", "self", ".", "conv3b", "(", "out3", ")", ",", "self", ".", "conv4b", "(", "out4", ")", ",", "self", ".", "conv5b", "(", "out5", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.pfa.model.Network.__init__": [[120, 125], ["torch.Module.__init__", "model.decoder"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["outb1", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ")", "\n", "outd1", "=", "self", ".", "decoderd", "(", "[", "out5d", ",", "out4d", ",", "out3d", ",", "out2d", "]", ")", "\n", "out1", "=", "torch", ".", "cat", "(", "[", "outb1", ",", "outd1", "]", ",", "dim", "=", "1", ")", "\n", "outb2", ",", "outd2", "=", "self", ".", "encoder1", "(", "out1", ")", "\n", "outb2", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ",", "outb2", ")", "\n", "outd2", "=", "self", ".", "decoderd", "(", "[", "out5d", ",", "out4d", ",", "out3d", ",", "out2d", "]", ",", "outd2", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.pfa.model.Network.forward": [[126, 132], ["model.Network.encoder", "model.Network.decoder"], "methods", ["None"], ["out2", "=", "torch", ".", "cat", "(", "[", "outb2", ",", "outd2", "]", ",", "dim", "=", "1", ")", "\n", "\n", "out1", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outb1", "=", "F", ".", "interpolate", "(", "self", ".", "linearb", "(", "outb1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outd1", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "\n", "out2", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.pfa.model.concatenate": [[11, 22], ["torch.cat", "torch.cat", "torch.cat", "upsample.append", "torch.UpsamplingBilinear2d"], "function", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv0", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn0", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "input1", ",", "input2", "=", "[", "0", ",", "0", ",", "0", ",", "0", "]", ")", ":", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.config.get_config": [[7, 18], ["base.config.base_config", "base.config.base_config.parse_args", "vars", "base.config.cfg_convert", "print"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.config.base_config", "home.repos.pwc.inspect_result.moothes_salod.base.config.cfg_convert"], ["def", "get_config", "(", ")", ":", "\n", "    ", "strategy", "=", "'base_sgd'", "\n", "parser", "=", "base_config", "(", "strategy", ")", "\n", "# Add custom params here", "\n", "# parser.add_argument('--size', default=320, type=int, help='Input size')", "\n", "\n", "params", "=", "parser", ".", "parse_args", "(", ")", "\n", "config", "=", "vars", "(", "params", ")", "\n", "cfg_convert", "(", "config", ")", "\n", "print", "(", "'Training {} network with {} backbone using Gpu: {}'", ".", "format", "(", "config", "[", "'model_name'", "]", ",", "config", "[", "'backbone'", "]", ",", "config", "[", "'gpus'", "]", ")", ")", "\n", "\n", "# Config post-process", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.vgg.vgg16.__init__": [[32, 44], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "vgg.vgg16.modules", "vgg.vgg", "isinstance", "m.weight.data.normal_", "isinstance", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.encoder.vgg.vgg"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "vgg16", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cfg", "=", "{", "'tun'", ":", "[", "64", ",", "64", ",", "'M'", ",", "128", ",", "128", ",", "'M'", ",", "256", ",", "256", ",", "256", ",", "'M'", ",", "512", ",", "512", ",", "512", ",", "'M'", ",", "512", ",", "512", ",", "512", ",", "'M'", "]", ",", "'tun_ex'", ":", "[", "512", ",", "512", ",", "512", "]", "}", "\n", "self", ".", "extract", "=", "[", "8", ",", "15", ",", "22", ",", "29", "]", "# [3, 8, 15, 22, 29]", "\n", "self", ".", "base", "=", "nn", ".", "ModuleList", "(", "vgg", "(", "self", ".", "cfg", "[", "'tun'", "]", ",", "3", ")", ")", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.01", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.vgg.vgg16.load_pretrained_model": [[45, 47], ["vgg.vgg16.base.load_state_dict"], "methods", ["None"], ["", "", "", "def", "load_pretrained_model", "(", "self", ",", "model", ")", ":", "\n", "        ", "self", ".", "base", ".", "load_state_dict", "(", "model", ",", "strict", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.vgg.vgg16.forward": [[48, 55], ["range", "len", "tmp_x.append"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "tmp_x", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "len", "(", "self", ".", "base", ")", ")", ":", "\n", "            ", "x", "=", "self", ".", "base", "[", "k", "]", "(", "x", ")", "\n", "if", "k", "in", "self", ".", "extract", ":", "\n", "                ", "tmp_x", ".", "append", "(", "x", ")", "\n", "", "", "return", "tmp_x", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.vgg.vgg16_locate.__init__": [[57, 80], ["torch.Module.__init__", "vgg.vgg16", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "vgg.vgg16_locate.modules", "ppms.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "infos.append", "isinstance", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "m.weight.data.normal_", "isinstance", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "vgg16_locate", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "vgg16", "=", "vgg16", "(", ")", "\n", "self", ".", "in_planes", "=", "512", "\n", "self", ".", "out_planes", "=", "[", "512", ",", "256", ",", "128", "]", "\n", "\n", "ppms", ",", "infos", "=", "[", "]", ",", "[", "]", "\n", "for", "ii", "in", "[", "1", ",", "3", ",", "5", "]", ":", "\n", "            ", "ppms", ".", "append", "(", "nn", ".", "Sequential", "(", "nn", ".", "AdaptiveAvgPool2d", "(", "ii", ")", ",", "nn", ".", "Conv2d", "(", "self", ".", "in_planes", ",", "self", ".", "in_planes", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ")", "\n", "", "self", ".", "ppms", "=", "nn", ".", "ModuleList", "(", "ppms", ")", "\n", "\n", "self", ".", "ppm_cat", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "self", ".", "in_planes", "*", "4", ",", "self", ".", "in_planes", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "for", "ii", "in", "self", ".", "out_planes", ":", "\n", "            ", "infos", ".", "append", "(", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "self", ".", "in_planes", ",", "ii", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ")", "\n", "", "self", ".", "infos", "=", "nn", ".", "ModuleList", "(", "infos", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.01", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.vgg.vgg16_locate.load_pretrained_model": [[81, 83], ["vgg.vgg16_locate.vgg16.load_pretrained_model"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.poolnet.model_new.vgg16_locate.load_pretrained_model"], ["", "", "", "def", "load_pretrained_model", "(", "self", ",", "model", ")", ":", "\n", "        ", "self", ".", "vgg16", ".", "load_pretrained_model", "(", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.vgg.vgg16_locate.forward": [[84, 97], ["vgg.vgg16_locate.vgg16", "range", "vgg.vgg16_locate.ppm_cat", "range", "x.size", "len", "vgg.vgg16_locate.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "len", "infos.append", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "xs[].size", "xs[].size", "len"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_size", "=", "x", ".", "size", "(", ")", "[", "2", ":", "]", "\n", "xs", "=", "self", ".", "vgg16", "(", "x", ")", "\n", "\n", "xls", "=", "[", "xs", "[", "-", "1", "]", "]", "\n", "for", "k", "in", "range", "(", "len", "(", "self", ".", "ppms", ")", ")", ":", "\n", "            ", "xls", ".", "append", "(", "F", ".", "interpolate", "(", "self", ".", "ppms", "[", "k", "]", "(", "xs", "[", "-", "1", "]", ")", ",", "xs", "[", "-", "1", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", ")", "\n", "", "xls", "=", "self", ".", "ppm_cat", "(", "torch", ".", "cat", "(", "xls", ",", "dim", "=", "1", ")", ")", "\n", "infos", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "len", "(", "self", ".", "infos", ")", ")", ":", "\n", "            ", "infos", ".", "append", "(", "self", ".", "infos", "[", "k", "]", "(", "F", ".", "interpolate", "(", "xls", ",", "xs", "[", "len", "(", "self", ".", "infos", ")", "-", "1", "-", "k", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", ")", ")", "\n", "\n", "", "return", "xs", ",", "infos", "\n", "", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.vgg.vgg": [[8, 30], ["torch.Conv2d", "torch.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "function", ["None"], ["def", "vgg", "(", "cfg", ",", "i", ",", "batch_norm", "=", "False", ")", ":", "\n", "    ", "layers", "=", "[", "]", "\n", "in_channels", "=", "i", "\n", "stage", "=", "1", "\n", "for", "v", "in", "cfg", ":", "\n", "        ", "if", "v", "==", "'M'", ":", "\n", "            ", "stage", "+=", "1", "\n", "if", "stage", "==", "6", ":", "\n", "                ", "layers", "+=", "[", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "]", "\n", "", "else", ":", "\n", "                ", "layers", "+=", "[", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "]", "\n", "", "", "else", ":", "\n", "            ", "if", "stage", "==", "6", ":", "\n", "                ", "conv2d", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "v", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "", "else", ":", "\n", "                ", "conv2d", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "v", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "", "if", "batch_norm", ":", "\n", "                ", "layers", "+=", "[", "conv2d", ",", "nn", ".", "BatchNorm2d", "(", "v", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "", "else", ":", "\n", "                ", "layers", "+=", "[", "conv2d", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "", "in_channels", "=", "v", "\n", "", "", "return", "layers", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model_orig.ConvertLayer.__init__": [[19, 25], ["torch.nn.Module.__init__", "range", "torch.nn.ModuleList", "torch.nn.ModuleList", "len", "up.append", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["self", ".", "scale", "=", "scale", "\n", "if", "scale", "==", "1", ":", "\n", "            ", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "channel", ",", "1", ",", "1", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "channel", ",", "1", ",", "1", ",", "dilation", "=", "3", ")", "\n", "\n", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model_orig.ConvertLayer.forward": [[26, 31], ["range", "len", "resl.append"], "methods", ["None"], ["        ", "x_size", "=", "x", ".", "size", "(", ")", "\n", "\n", "x", "=", "self", ".", "conv", "(", "x", ")", ".", "sigmoid_", "(", ")", "\n", "if", "self", ".", "scale", ">", "1", ":", "\n", "            ", "x", "=", "F", ".", "max_pool2d", "(", "x", ",", "kernel_size", "=", "(", "self", ".", "scale", ",", "self", ".", "scale", ")", ",", "stride", "=", "(", "self", ".", "scale", ",", "self", ".", "scale", ")", ")", "\n", "", "x", "=", "F", ".", "softmax", "(", "F", ".", "interpolate", "(", "x", ",", "size", "=", "x_size", "[", "-", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", ".", "view", "(", "x_size", "[", "0", "]", ",", "-", "1", ")", ",", "dim", "=", "1", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model_orig.DeepPoolLayer.__init__": [[33, 48], ["torch.nn.Module.__init__", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "pools.append", "convs.append", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.AvgPool2d", "torch.nn.AvgPool2d", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["#x_size[1] = 1", "\n", "return", "x", ".", "view", "(", "x_size", "[", "0", "]", ",", "1", ",", "x_size", "[", "2", "]", ",", "x_size", "[", "3", "]", ")", "\n", "\n", "", "", "class", "decoder", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "feat", ")", ":", "\n", "        ", "super", "(", "decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "new_feat", "=", "[", "64", ",", "128", ",", "256", ",", "256", ",", "512", ",", "512", "]", "\n", "\n", "self", ".", "sal_out", "=", "[", "nn", ".", "Sequential", "(", "*", "list", "(", "gen_conv", "(", "feat", "[", "i", "]", ",", "new_feat", "[", "i", "]", ")", ")", ")", ".", "cuda", "(", ")", "for", "i", "in", "range", "(", "6", ")", "]", "\n", "self", ".", "edge_out", "=", "[", "nn", ".", "Sequential", "(", "*", "list", "(", "gen_conv", "(", "feat", "[", "i", "]", ",", "new_feat", "[", "i", "]", ")", ")", ")", ".", "cuda", "(", ")", "for", "i", "in", "range", "(", "5", ")", "]", "\n", "\n", "self", ".", "sal6_conv", "=", "nn", ".", "Conv2d", "(", "new_feat", "[", "5", "]", ",", "1", ",", "1", ")", "\n", "\n", "self", ".", "edge5_conv", "=", "nn", ".", "Conv2d", "(", "new_feat", "[", "4", "]", ",", "1", ",", "1", ")", "\n", "self", ".", "sal5_conv", "=", "nn", ".", "Conv2d", "(", "new_feat", "[", "4", "]", "+", "1", ",", "256", ",", "3", ",", "padding", "=", "1", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model_orig.DeepPoolLayer.forward": [[49, 62], ["x.size", "range", "model_orig.DeepPoolLayer.relu", "model_orig.DeepPoolLayer.conv_sum", "len", "torch.add", "torch.add", "torch.add", "torch.add", "torch.interpolate", "torch.interpolate", "model_orig.DeepPoolLayer.conv_sum_c", "torch.interpolate", "torch.interpolate", "torch.add", "torch.add", "torch.add", "torch.add", "x2.size", "torch.add", "torch.add", "torch.add", "torch.add"], "methods", ["None"], ["self", ".", "atten5a", "=", "Atten", "(", "256", ",", "1", ")", "#nn.Conv2d(256, 1, 1)", "\n", "self", ".", "atten5b", "=", "Atten", "(", "256", ",", "2", ")", "#nn.Conv2d(256, 1, 1, dilation=3)", "\n", "#self.atten5b_mp = nn.MaxUnpool2d(2, 2)", "\n", "self", ".", "sal5_out", "=", "nn", ".", "Conv2d", "(", "257", ",", "256", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "sal5_up", "=", "nn", ".", "Conv2d", "(", "256", ",", "1", ",", "1", ")", "\n", "\n", "self", ".", "edge4_conv_1", "=", "nn", ".", "Conv2d", "(", "new_feat", "[", "3", "]", "+", "1", ",", "128", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "edge4_conv", "=", "nn", ".", "Conv2d", "(", "128", ",", "1", ",", "1", ")", "\n", "\n", "self", ".", "sal4_conv_1", "=", "nn", ".", "Conv2d", "(", "new_feat", "[", "3", "]", "+", "2", ",", "128", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "atten4a", "=", "Atten", "(", "128", ",", "1", ")", "\n", "self", ".", "atten4b", "=", "Atten", "(", "128", ",", "2", ")", "\n", "self", ".", "atten4c", "=", "Atten", "(", "128", ",", "4", ")", "\n", "self", ".", "sal4_out", "=", "nn", ".", "Conv2d", "(", "129", ",", "128", ",", "3", ",", "padding", "=", "1", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model_orig.ScoreLayer.__init__": [[64, 67], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["\n", "self", ".", "edge3_conv_1", "=", "nn", ".", "Conv2d", "(", "new_feat", "[", "2", "]", "+", "2", ",", "128", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "edge3_conv", "=", "nn", ".", "Conv2d", "(", "128", ",", "1", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model_orig.ScoreLayer.forward": [[68, 73], ["model_orig.ScoreLayer.score", "torch.interpolate", "torch.interpolate"], "methods", ["None"], ["self", ".", "sal3_conv_1", "=", "nn", ".", "Conv2d", "(", "new_feat", "[", "2", "]", "+", "3", ",", "128", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "atten3a", "=", "Atten", "(", "128", ",", "1", ")", "\n", "self", ".", "atten3b", "=", "Atten", "(", "128", ",", "2", ")", "\n", "self", ".", "atten3c", "=", "Atten", "(", "128", ",", "4", ")", "\n", "self", ".", "atten3d", "=", "Atten", "(", "128", ",", "8", ")", "\n", "self", ".", "sal3_out", "=", "nn", ".", "Conv2d", "(", "129", ",", "128", ",", "3", ",", "padding", "=", "1", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model_orig.PoolNet.__init__": [[91, 99], ["torch.nn.Module.__init__", "torch.nn.ModuleList", "torch.nn.ModuleList"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["self", ".", "sal1_conv_1", "=", "nn", ".", "Conv2d", "(", "new_feat", "[", "0", "]", "+", "5", ",", "32", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "atten1a", "=", "Atten", "(", "32", ",", "1", ")", "\n", "self", ".", "atten1b", "=", "Atten", "(", "32", ",", "2", ")", "\n", "self", ".", "atten1c", "=", "Atten", "(", "32", ",", "4", ")", "\n", "self", ".", "atten1d", "=", "Atten", "(", "32", ",", "8", ")", "\n", "self", ".", "atten1e", "=", "Atten", "(", "32", ",", "16", ")", "\n", "self", ".", "atten1f", "=", "Atten", "(", "32", ",", "32", ")", "\n", "self", ".", "sal1_out", "=", "nn", ".", "Conv2d", "(", "33", ",", "32", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "sal1_up", "=", "nn", ".", "Conv2d", "(", "32", ",", "1", ",", "1", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model_orig.PoolNet.forward": [[100, 117], ["x.size", "model_orig.PoolNet.base", "range", "model_orig.PoolNet.score", "model_orig.PoolNet.convert", "len"], "methods", ["None"], ["\n", "", "def", "forward", "(", "self", ",", "xs", ",", "x0_size", ",", "phase", "=", "'test'", ")", ":", "\n", "        ", "batch", "=", "x0_size", "[", "0", "]", "\n", "x_size", "=", "x0_size", "[", "-", "2", ":", "]", "\n", "\n", "sal_xs", "=", "[", "self", ".", "sal_out", "[", "i", "]", "(", "xs", "[", "i", "]", ")", "for", "i", "in", "range", "(", "6", ")", "]", "\n", "edge_xs", "=", "[", "self", ".", "edge_out", "[", "i", "]", "(", "xs", "[", "i", "]", ")", "for", "i", "in", "range", "(", "5", ")", "]", "\n", "\n", "# 6666666666666666666666666666666", "\n", "sal6", "=", "self", ".", "sal6_conv", "(", "sal_xs", "[", "5", "]", ")", "\n", "\n", "# 555555555555555555555555", "\n", "s5_size", "=", "sal_xs", "[", "4", "]", ".", "size", "(", ")", "[", "-", "2", ":", "]", "\n", "edge5", "=", "self", ".", "edge5_conv", "(", "edge_xs", "[", "4", "]", ")", "\n", "\n", "sal_t5", "=", "F", ".", "interpolate", "(", "sal6", ",", "size", "=", "s5_size", ",", "mode", "=", "'bilinear'", ")", ".", "sigmoid_", "(", ")", "\n", "sal5_out", "=", "self", ".", "sal5_conv", "(", "torch", ".", "cat", "(", "[", "sal_xs", "[", "4", "]", ",", "sal_t5", "]", ",", "dim", "=", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model_orig.extra_layer": [[74, 88], ["model_orig.ConvertLayer", "range", "model_orig.ScoreLayer", "len", "model_orig.DeepPoolLayer"], "function", ["None"], ["self", ".", "sal3_up", "=", "nn", ".", "Conv2d", "(", "128", ",", "1", ",", "1", ")", "\n", "\n", "self", ".", "edge2_conv_1", "=", "nn", ".", "Conv2d", "(", "new_feat", "[", "1", "]", "+", "3", ",", "64", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "edge2_conv", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "1", ")", "\n", "\n", "self", ".", "sal2_conv_1", "=", "nn", ".", "Conv2d", "(", "new_feat", "[", "1", "]", "+", "4", ",", "64", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "atten2a", "=", "Atten", "(", "64", ",", "1", ")", "\n", "self", ".", "atten2b", "=", "Atten", "(", "64", ",", "2", ")", "\n", "self", ".", "atten2c", "=", "Atten", "(", "64", ",", "4", ")", "\n", "self", ".", "atten2d", "=", "Atten", "(", "64", ",", "8", ")", "\n", "self", ".", "atten2e", "=", "Atten", "(", "64", ",", "16", ")", "\n", "self", ".", "sal2_out", "=", "nn", ".", "Conv2d", "(", "65", ",", "64", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "sal2_up", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "1", ")", "\n", "\n", "self", ".", "edge1_conv_1", "=", "nn", ".", "Conv2d", "(", "new_feat", "[", "0", "]", "+", "4", ",", "32", ",", "3", ",", "padding", "=", "1", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model_orig.Network": [[118, 132], ["PoolNet.apply", "PoolNet.base.resnet.load_state_dict", "PoolNet.eval", "model_orig.PoolNet", "torch.load", "torch.load", "model_orig.PoolNet", "model_orig.extra_layer", "vgg.vgg16_locate", "model_orig.extra_layer", "deeplab_resnet.resnet50_locate"], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.test.eval", "home.repos.pwc.inspect_result.moothes_salod.poolnet.model_new.extra_layer", "home.repos.pwc.inspect_result.moothes_salod.poolnet.model_new.extra_layer", "home.repos.pwc.inspect_result.moothes_salod.poolnet.model.resnet50_locate"], ["atten5a", "=", "self", ".", "atten5a", "(", "sal5_out", ")", "\n", "atten5b", "=", "self", ".", "atten5b", "(", "sal5_out", ")", "\n", "atten5", "=", "(", "atten5a", "+", "atten5b", ")", "/", "2.", "\n", "sal5_out", "=", "sal5_out", "*", "(", "atten5", "+", "1", ")", "\n", "sal5_out", "=", "torch", ".", "cat", "(", "[", "sal5_out", ",", "edge5", "]", ",", "dim", "=", "1", ")", "\n", "sal5_out", "=", "self", ".", "sal5_out", "(", "sal5_out", ")", ".", "sigmoid_", "(", ")", "\n", "sal5", "=", "self", ".", "sal5_up", "(", "sal5_out", ")", "\n", "\n", "# 4444444444444444444444444444444444444", "\n", "s4_size", "=", "sal_xs", "[", "3", "]", ".", "size", "(", ")", "[", "-", "2", ":", "]", "\n", "edge_t4", "=", "F", ".", "interpolate", "(", "edge5", ",", "size", "=", "s4_size", ",", "mode", "=", "'bilinear'", ")", ".", "sigmoid_", "(", ")", "\n", "edge4", "=", "self", ".", "edge4_conv_1", "(", "torch", ".", "cat", "(", "[", "edge_xs", "[", "3", "]", ",", "edge_t4", "]", ",", "dim", "=", "1", ")", ")", ".", "sigmoid_", "(", ")", "\n", "edge4", "=", "self", ".", "edge4_conv", "(", "edge4", ")", ".", "sigmoid_", "(", ")", "\n", "\n", "sal_t41", "=", "F", ".", "interpolate", "(", "sal6", ",", "size", "=", "s4_size", ",", "mode", "=", "'bilinear'", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model_orig.build_model": [[133, 138], ["model_orig.PoolNet", "model_orig.PoolNet", "model_orig.extra_layer", "vgg.vgg16_locate", "model_orig.extra_layer", "deeplab_resnet.resnet50_locate"], "function", ["home.repos.pwc.inspect_result.moothes_salod.poolnet.model_new.extra_layer", "home.repos.pwc.inspect_result.moothes_salod.poolnet.model_new.extra_layer", "home.repos.pwc.inspect_result.moothes_salod.poolnet.model.resnet50_locate"], ["sal_t42", "=", "F", ".", "interpolate", "(", "sal5", ",", "size", "=", "s4_size", ",", "mode", "=", "'bilinear'", ")", "\n", "sal4_out", "=", "torch", ".", "cat", "(", "[", "sal_xs", "[", "3", "]", ",", "sal_t41", ",", "sal_t42", "]", ",", "dim", "=", "1", ")", "\n", "sal4_out", "=", "self", ".", "sal4_conv_1", "(", "sal4_out", ")", ".", "sigmoid_", "(", ")", "\n", "\n", "atten4a", "=", "self", ".", "atten4a", "(", "sal4_out", ")", "\n", "atten4b", "=", "self", ".", "atten4b", "(", "sal4_out", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model_orig.weights_init": [[139, 144], ["isinstance", "m.weight.data.normal_", "m.bias.data.zero_"], "function", ["None"], ["atten4c", "=", "self", ".", "atten4c", "(", "sal4_out", ")", "\n", "atten4", "=", "(", "atten4a", "+", "atten4b", "+", "atten4c", ")", "/", "3.", "\n", "sal4_out", "=", "sal4_out", "*", "(", "atten4", "+", "1", ")", "\n", "sal4_out", "=", "torch", ".", "cat", "(", "[", "sal4_out", ",", "edge4", "]", ",", "dim", "=", "1", ")", "\n", "sal4_out", "=", "self", ".", "sal4_out", "(", "sal4_out", ")", ".", "sigmoid_", "(", ")", "\n", "sal4", "=", "self", ".", "sal4_up", "(", "sal4_out", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.deeplab_resnet.BasicBlock.__init__": [[16, 25], ["torch.Module.__init__", "deeplab_resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "deeplab_resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.conv3x3", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ",", "affine", "=", "affine_par", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ",", "affine", "=", "affine_par", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.deeplab_resnet.BasicBlock.forward": [[26, 43], ["deeplab_resnet.BasicBlock.conv1", "deeplab_resnet.BasicBlock.bn1", "deeplab_resnet.BasicBlock.relu", "deeplab_resnet.BasicBlock.conv2", "deeplab_resnet.BasicBlock.bn2", "deeplab_resnet.BasicBlock.relu", "deeplab_resnet.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.deeplab_resnet.Bottleneck.__init__": [[48, 71], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "deeplab_resnet.Bottleneck.bn1.parameters", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "deeplab_resnet.Bottleneck.bn2.parameters", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "deeplab_resnet.Bottleneck.bn3.parameters", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "dilation_", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", "# change", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ",", "affine", "=", "affine_par", ")", "\n", "for", "i", "in", "self", ".", "bn1", ".", "parameters", "(", ")", ":", "\n", "            ", "i", ".", "requires_grad", "=", "False", "\n", "", "padding", "=", "1", "\n", "if", "dilation_", "==", "2", ":", "\n", "            ", "padding", "=", "2", "\n", "", "elif", "dilation_", "==", "4", ":", "\n", "            ", "padding", "=", "4", "\n", "", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "# change", "\n", "padding", "=", "padding", ",", "bias", "=", "False", ",", "dilation", "=", "dilation_", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ",", "affine", "=", "affine_par", ")", "\n", "for", "i", "in", "self", ".", "bn2", ".", "parameters", "(", ")", ":", "\n", "            ", "i", ".", "requires_grad", "=", "False", "\n", "", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "*", "4", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "4", ",", "affine", "=", "affine_par", ")", "\n", "for", "i", "in", "self", ".", "bn3", ".", "parameters", "(", ")", ":", "\n", "            ", "i", ".", "requires_grad", "=", "False", "\n", "", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.deeplab_resnet.Bottleneck.forward": [[72, 93], ["deeplab_resnet.Bottleneck.conv1", "deeplab_resnet.Bottleneck.bn1", "deeplab_resnet.Bottleneck.relu", "deeplab_resnet.Bottleneck.conv2", "deeplab_resnet.Bottleneck.bn2", "deeplab_resnet.Bottleneck.relu", "deeplab_resnet.Bottleneck.conv3", "deeplab_resnet.Bottleneck.bn3", "deeplab_resnet.Bottleneck.relu", "deeplab_resnet.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.deeplab_resnet.ResNet.__init__": [[95, 117], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "deeplab_resnet.ResNet.bn1.parameters", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "deeplab_resnet.ResNet._make_layer", "deeplab_resnet.ResNet._make_layer", "deeplab_resnet.ResNet._make_layer", "deeplab_resnet.ResNet._make_layer", "deeplab_resnet.ResNet.modules", "isinstance", "m.weight.data.normal_", "isinstance", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ")", ":", "\n", "        ", "self", ".", "inplanes", "=", "64", "\n", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ",", "affine", "=", "affine_par", ")", "\n", "for", "i", "in", "self", ".", "bn1", ".", "parameters", "(", ")", ":", "\n", "            ", "i", ".", "requires_grad", "=", "False", "\n", "", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "ceil_mode", "=", "True", ")", "# change", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "1", ",", "dilation__", "=", "2", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.01", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.deeplab_resnet.ResNet._make_layer": [[118, 135], ["torch.Sequential._modules[].parameters", "layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "block"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ",", "dilation__", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", "or", "dilation__", "==", "2", "or", "dilation__", "==", "4", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ",", "affine", "=", "affine_par", ")", ",", "\n", ")", "\n", "", "for", "i", "in", "downsample", ".", "_modules", "[", "'1'", "]", ".", "parameters", "(", ")", ":", "\n", "            ", "i", ".", "requires_grad", "=", "False", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "dilation_", "=", "dilation__", ",", "downsample", "=", "downsample", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "dilation_", "=", "dilation__", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.deeplab_resnet.ResNet.forward": [[136, 154], ["deeplab_resnet.ResNet.conv1", "deeplab_resnet.ResNet.bn1", "deeplab_resnet.ResNet.relu", "tmp_x.append", "deeplab_resnet.ResNet.maxpool", "deeplab_resnet.ResNet.layer1", "tmp_x.append", "deeplab_resnet.ResNet.layer2", "tmp_x.append", "deeplab_resnet.ResNet.layer3", "tmp_x.append", "deeplab_resnet.ResNet.layer4", "tmp_x.append"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "tmp_x", "=", "[", "]", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "tmp_x", ".", "append", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "tmp_x", ".", "append", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "tmp_x", ".", "append", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "tmp_x", ".", "append", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "tmp_x", ".", "append", "(", "x", ")", "\n", "\n", "return", "tmp_x", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.deeplab_resnet.ResNet_locate.__init__": [[157, 181], ["torch.Module.__init__", "deeplab_resnet.ResNet", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "deeplab_resnet.ResNet_locate.modules", "ppms.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "infos.append", "isinstance", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "m.weight.data.normal_", "isinstance", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ")", ":", "\n", "        ", "super", "(", "ResNet_locate", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "resnet", "=", "ResNet", "(", "block", ",", "layers", ")", "\n", "self", ".", "in_planes", "=", "512", "\n", "self", ".", "out_planes", "=", "[", "512", ",", "256", ",", "256", ",", "128", "]", "\n", "\n", "self", ".", "ppms_pre", "=", "nn", ".", "Conv2d", "(", "2048", ",", "self", ".", "in_planes", ",", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "ppms", ",", "infos", "=", "[", "]", ",", "[", "]", "\n", "for", "ii", "in", "[", "1", ",", "3", ",", "5", "]", ":", "\n", "            ", "ppms", ".", "append", "(", "nn", ".", "Sequential", "(", "nn", ".", "AdaptiveAvgPool2d", "(", "ii", ")", ",", "nn", ".", "Conv2d", "(", "self", ".", "in_planes", ",", "self", ".", "in_planes", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ")", "\n", "", "self", ".", "ppms", "=", "nn", ".", "ModuleList", "(", "ppms", ")", "\n", "\n", "self", ".", "ppm_cat", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "self", ".", "in_planes", "*", "4", ",", "self", ".", "in_planes", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "for", "ii", "in", "self", ".", "out_planes", ":", "\n", "            ", "infos", ".", "append", "(", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "self", ".", "in_planes", ",", "ii", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ")", "\n", "", "self", ".", "infos", "=", "nn", ".", "ModuleList", "(", "infos", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.01", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.deeplab_resnet.ResNet_locate.load_pretrained_model": [[182, 184], ["deeplab_resnet.ResNet_locate.resnet.load_state_dict"], "methods", ["None"], ["", "", "", "def", "load_pretrained_model", "(", "self", ",", "model", ")", ":", "\n", "        ", "self", ".", "resnet", ".", "load_state_dict", "(", "model", ",", "strict", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.deeplab_resnet.ResNet_locate.forward": [[185, 200], ["deeplab_resnet.ResNet_locate.resnet", "deeplab_resnet.ResNet_locate.ppms_pre", "range", "deeplab_resnet.ResNet_locate.ppm_cat", "range", "x.size", "len", "deeplab_resnet.ResNet_locate.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "len", "infos.append", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "deeplab_resnet.ResNet_locate.size", "xs[].size", "len"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.resnet"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_size", "=", "x", ".", "size", "(", ")", "[", "2", ":", "]", "\n", "xs", "=", "self", ".", "resnet", "(", "x", ")", "\n", "\n", "xs_1", "=", "self", ".", "ppms_pre", "(", "xs", "[", "-", "1", "]", ")", "\n", "xls", "=", "[", "xs_1", "]", "\n", "for", "k", "in", "range", "(", "len", "(", "self", ".", "ppms", ")", ")", ":", "\n", "            ", "xls", ".", "append", "(", "F", ".", "interpolate", "(", "self", ".", "ppms", "[", "k", "]", "(", "xs_1", ")", ",", "xs_1", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", ")", "\n", "", "xls", "=", "self", ".", "ppm_cat", "(", "torch", ".", "cat", "(", "xls", ",", "dim", "=", "1", ")", ")", "\n", "\n", "infos", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "len", "(", "self", ".", "infos", ")", ")", ":", "\n", "            ", "infos", ".", "append", "(", "self", ".", "infos", "[", "k", "]", "(", "F", ".", "interpolate", "(", "xls", ",", "xs", "[", "len", "(", "self", ".", "infos", ")", "-", "1", "-", "k", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", ")", ")", "\n", "\n", "", "return", "xs", ",", "infos", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.deeplab_resnet.conv3x3": [[8, 12], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"3x3 convolution with padding\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.deeplab_resnet.resnet50_locate": [[201, 204], ["deeplab_resnet.ResNet_locate"], "function", ["None"], ["", "", "def", "resnet50_locate", "(", ")", ":", "\n", "    ", "model", "=", "ResNet_locate", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ")", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.loss.CTLoss": [[9, 14], ["torch.nn.BCEWithLogitsLoss", "torch.nn.functional.avg_pool2d", "label_edge_prediction", "nn.BCEWithLogitsLoss."], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.util.label_edge_prediction"], ["    ", "pred", "=", "torch", ".", "sigmoid", "(", "preds", ")", "\n", "\n", "inter", "=", "torch", ".", "sum", "(", "target", "*", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "\n", "union", "=", "torch", ".", "sum", "(", "target", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "+", "torch", ".", "sum", "(", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "-", "inter", "\n", "iou_loss", "=", "1", "-", "(", "inter", "/", "union", ")", ".", "mean", "(", ")", "\n", "return", "iou_loss", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.loss.Fscore": [[16, 27], ["torch.sigmoid", "fs.mean", "torch.nn.functional.avg_pool2d", "tp.sum", "torch.sigmoid.sum", "label_edge_prediction", "target.sum"], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.util.label_edge_prediction"], ["", "def", "Loss", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "# preds: Dict type. Customarily, preds['final'] is the final prediction without sigmoid.", "\n", "    ", "bce", "=", "nn", ".", "BCEWithLogitsLoss", "(", "reduction", "=", "'none'", ")", "\n", "\n", "loss", "=", "0", "\n", "for", "pred", "in", "preds", "[", "'sal'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "target", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "loss", "+=", "IOU", "(", "pred", ",", "target", ",", "config", ")", "\n", "\n", "", "gt_edge", "=", "label_edge_prediction", "(", "target", ")", "\n", "for", "pred", "in", "preds", "[", "'detail'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "gt_edge", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.loss.cff_loss": [[28, 33], ["loss.CTLoss", "loss.Fscore"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.loss.CTLoss", "home.repos.pwc.inspect_result.moothes_salod.base.loss.Fscore"], ["\n", "", "gt_body", "=", "(", "target", "-", "gt_edge", ")", ".", "gt", "(", "0.5", ")", "\n", "for", "pred", "in", "preds", "[", "'body'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "gt_body", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "\n", "", "return", "loss", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.loss.Loss_new": [[34, 42], ["loss.cff_loss"], "function", ["home.repos.pwc.inspect_result.moothes_salod.itsd.loss.cff_loss"], ["\n", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.loss.Loss": [[43, 50], ["torch.nn.functional.binary_cross_entropy_with_logits"], "function", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model.BasicBlock.__init__": [[30, 39], ["torch.nn.Module.__init__", "model.conv3x3", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "model.conv3x3", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.conv3x3", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.conv3x3"], ["return", "out3", "\n", "\n", "", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n", "\n", "", "", "class", "Encoder", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model.BasicBlock.forward": [[40, 57], ["model.BasicBlock.conv1", "model.BasicBlock.bn1", "model.BasicBlock.relu", "model.BasicBlock.conv2", "model.BasicBlock.bn2", "model.BasicBlock.relu", "model.BasicBlock.downsample"], "methods", ["None"], ["self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "conv1b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "conv1d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model.Bottleneck.__init__": [[62, 85], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["self", ".", "bn3d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "out1", ")", ":", "\n", "        ", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2", "=", "F", ".", "max_pool2d", "(", "out1", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3", "=", "F", ".", "max_pool2d", "(", "out2", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4", "=", "F", ".", "max_pool2d", "(", "out3", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out4", "=", "F", ".", "relu", "(", "self", ".", "bn4", "(", "self", ".", "conv4", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "out1b", "=", "F", ".", "relu", "(", "self", ".", "bn1b", "(", "self", ".", "conv1b", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2b", "=", "F", ".", "relu", "(", "self", ".", "bn2b", "(", "self", ".", "conv2b", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3b", "=", "F", ".", "relu", "(", "self", ".", "bn3b", "(", "self", ".", "conv3b", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4b", "=", "F", ".", "relu", "(", "self", ".", "bn4b", "(", "self", ".", "conv4b", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "out1d", "=", "F", ".", "relu", "(", "self", ".", "bn1d", "(", "self", ".", "conv1d", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2d", "=", "F", ".", "relu", "(", "self", ".", "bn2d", "(", "self", ".", "conv2d", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3d", "=", "F", ".", "relu", "(", "self", ".", "bn3d", "(", "self", ".", "conv3d", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4d", "=", "F", ".", "relu", "(", "self", ".", "bn4d", "(", "self", ".", "conv4d", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "return", "(", "out4b", ",", "out3b", ",", "out2b", ",", "out1b", ")", ",", "(", "out4d", ",", "out3d", ",", "out2d", ",", "out1d", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model.Bottleneck.forward": [[86, 107], ["model.Bottleneck.conv1", "model.Bottleneck.bn1", "model.Bottleneck.relu", "model.Bottleneck.conv2", "model.Bottleneck.bn2", "model.Bottleneck.relu", "model.Bottleneck.conv3", "model.Bottleneck.bn3", "model.Bottleneck.relu", "model.Bottleneck.downsample"], "methods", ["None"], ["", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n", "\n", "", "", "class", "Network", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "config", ",", "encoder", ",", "feat", ")", ":", "\n", "# encoder: backbone, forward function output 5 encoder features. details in methods/base/model.py", "\n", "# feat: length of encoder features. e.g.: VGG:[64, 128, 256, 512, 512]; Resnet:[64, 256, 512, 1024, 2048]", "\n", "        ", "super", "(", "Network", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "conv5b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv2b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv5d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "encoder1", "=", "Encoder", "(", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model.ResNet_locate.__init__": [[109, 136], ["torch.nn.Module.__init__", "base.encoder.resnet.resnet", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "ppms.append", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "infos.append", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.AdaptiveAvgPool2d", "torch.nn.AdaptiveAvgPool2d", "torch.nn.AdaptiveAvgPool2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.resnet"], ["self", ".", "decoderd", "=", "Decoder", "(", ")", "\n", "self", ".", "linearb", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "lineard", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ",", "phase", "=", "'test'", ")", ":", "\n", "        ", "shape", "=", "x", ".", "size", "(", ")", "[", "2", ":", "]", "\n", "out1", ",", "out2", ",", "out3", ",", "out4", ",", "out5", "=", "self", ".", "encoder", "(", "x", ")", "\n", "out2b", ",", "out3b", ",", "out4b", ",", "out5b", "=", "self", ".", "conv2b", "(", "out2", ")", ",", "self", ".", "conv3b", "(", "out3", ")", ",", "self", ".", "conv4b", "(", "out4", ")", ",", "self", ".", "conv5b", "(", "out5", ")", "\n", "out2d", ",", "out3d", ",", "out4d", ",", "out5d", "=", "self", ".", "conv2d", "(", "out2", ")", ",", "self", ".", "conv3d", "(", "out3", ")", ",", "self", ".", "conv4d", "(", "out4", ")", ",", "self", ".", "conv5d", "(", "out5", ")", "\n", "\n", "outb1", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ")", "\n", "outd1", "=", "self", ".", "decoderd", "(", "[", "out5d", ",", "out4d", ",", "out3d", ",", "out2d", "]", ")", "\n", "out1", "=", "torch", ".", "cat", "(", "[", "outb1", ",", "outd1", "]", ",", "dim", "=", "1", ")", "\n", "outb2", ",", "outd2", "=", "self", ".", "encoder1", "(", "out1", ")", "\n", "outb2", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ",", "outb2", ")", "\n", "outd2", "=", "self", ".", "decoderd", "(", "[", "out5d", ",", "out4d", ",", "out3d", ",", "out2d", "]", ",", "outd2", ")", "\n", "out2", "=", "torch", ".", "cat", "(", "[", "outb2", ",", "outd2", "]", ",", "dim", "=", "1", ")", "\n", "\n", "out1", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outb1", "=", "F", ".", "interpolate", "(", "self", ".", "linearb", "(", "outb1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outd1", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "\n", "out2", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outb2", "=", "F", ".", "interpolate", "(", "self", ".", "linearb", "(", "outb2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outd2", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "#return outb1, outd1, out1, outb2, outd2, out2", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model.ResNet_locate.load_pretrained_model": [[137, 139], ["model.ResNet_locate.resnet.load_state_dict"], "methods", ["None"], ["OutDict", "=", "{", "}", "\n", "OutDict", "[", "'final'", "]", "=", "out2", "\n", "OutDict", "[", "'body'", "]", "=", "[", "outb1", ",", "outb2", "]", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model.ResNet_locate.forward": [[140, 155], ["model.ResNet_locate.resnet", "model.ResNet_locate.ppms_pre", "range", "model.ResNet_locate.ppm_cat", "range", "x.size", "len", "model.ResNet_locate.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "len", "infos.append", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "model.ResNet_locate.size", "xs[].size", "len"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.resnet"], ["OutDict", "[", "'detail'", "]", "=", "[", "outd1", ",", "outd2", "]", "\n", "OutDict", "[", "'sal'", "]", "=", "[", "out1", ",", "out2", "]", "\n", "return", "OutDict", "\n", "\n", "\n", "\n", "", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model.base_locate.__init__": [[162, 182], ["torch.nn.Module.__init__", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "ppms.append", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "infos.append", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.AdaptiveAvgPool2d", "torch.nn.AdaptiveAvgPool2d", "torch.nn.AdaptiveAvgPool2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], []], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model.base_locate.forward": [[183, 201], ["model.base_locate.base", "range", "model.base_locate.ppm_cat", "range", "x.size", "model.base_locate.ppms_pre", "len", "model.base_locate.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "len", "infos.append", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "model.base_locate.size", "xs[].size", "len"], "methods", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model.ConvertLayer.__init__": [[204, 210], ["torch.nn.Module.__init__", "range", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "len", "up.append", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], []], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model.ConvertLayer.forward": [[211, 216], ["range", "len", "resl.append"], "methods", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model.DeepPoolLayer.__init__": [[218, 233], ["torch.nn.Module.__init__", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "pools.append", "convs.append", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.AvgPool2d", "torch.nn.AvgPool2d", "torch.nn.AvgPool2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], []], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model.DeepPoolLayer.forward": [[234, 251], ["x.size", "range", "model.DeepPoolLayer.relu", "model.DeepPoolLayer.conv_sum", "len", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.interpolate", "torch.interpolate", "torch.interpolate", "model.DeepPoolLayer.conv_sum_c", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "x2.size", "x3.size"], "methods", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model.ScoreLayer.__init__": [[253, 256], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], []], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model.ScoreLayer.forward": [[257, 262], ["model.ScoreLayer.score", "torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model.PoolNet.__init__": [[280, 288], ["torch.nn.Module.__init__", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], []], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model.PoolNet.forward": [[289, 311], ["x.size", "model.PoolNet.base", "torch.interpolate", "torch.interpolate", "torch.interpolate", "range", "model.PoolNet.score", "model.PoolNet.convert", "conv2merge[].size", "len"], "methods", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model.conv3x3": [[22, 26], ["torch.nn.Conv2d"], "function", ["None"], ["", "def", "forward", "(", "self", ",", "input1", ",", "input2", "=", "[", "0", ",", "0", ",", "0", ",", "0", "]", ")", ":", "\n", "        ", "out0", "=", "F", ".", "relu", "(", "self", ".", "bn0", "(", "self", ".", "conv0", "(", "input1", "[", "0", "]", "+", "input2", "[", "0", "]", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out0", "=", "F", ".", "interpolate", "(", "out0", ",", "size", "=", "input1", "[", "1", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "input1", "[", "1", "]", "+", "input2", "[", "1", "]", "+", "out0", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out1", "=", "F", ".", "interpolate", "(", "out1", ",", "size", "=", "input1", "[", "2", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model.resnet50_locate": [[156, 159], ["model.ResNet_locate"], "function", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model.extra_layer": [[263, 277], ["model.ConvertLayer", "range", "model.ScoreLayer", "len", "model.DeepPoolLayer"], "function", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model.Network": [[312, 333], ["model.base_locate", "model.PoolNet", "model.extra_layer"], "function", ["home.repos.pwc.inspect_result.moothes_salod.poolnet.model_new.extra_layer"], []], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model.build_model": [[334, 339], ["model.PoolNet", "model.PoolNet", "model.extra_layer", "vgg16_locate", "model.extra_layer", "model.resnet50_locate"], "function", ["home.repos.pwc.inspect_result.moothes_salod.poolnet.model_new.extra_layer", "home.repos.pwc.inspect_result.moothes_salod.poolnet.model_new.extra_layer", "home.repos.pwc.inspect_result.moothes_salod.poolnet.model.resnet50_locate"], []], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model.weights_init": [[340, 345], ["isinstance", "m.weight.data.normal_", "m.bias.data.zero_"], "function", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model_new.vgg16_locate.__init__": [[25, 48], ["torch.nn.Module.__init__", "base.encoder.vgg.vgg", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.ModuleList", "torch.nn.ModuleList", "model_new.vgg16_locate.modules", "ppms.append", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "infos.append", "isinstance", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "m.weight.data.normal_", "isinstance", "torch.nn.AdaptiveAvgPool2d", "torch.nn.AdaptiveAvgPool2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.encoder.vgg.vgg"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "vgg16_locate", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "vgg16", "=", "vgg", "(", "'vgg16'", ",", "multi", "=", "True", ",", "pretrain", "=", "True", ")", "\n", "self", ".", "in_planes", "=", "512", "\n", "self", ".", "out_planes", "=", "[", "512", ",", "256", ",", "128", "]", "\n", "\n", "ppms", ",", "infos", "=", "[", "]", ",", "[", "]", "\n", "for", "ii", "in", "[", "1", ",", "3", ",", "5", "]", ":", "\n", "            ", "ppms", ".", "append", "(", "nn", ".", "Sequential", "(", "nn", ".", "AdaptiveAvgPool2d", "(", "ii", ")", ",", "nn", ".", "Conv2d", "(", "self", ".", "in_planes", ",", "self", ".", "in_planes", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ")", "\n", "", "self", ".", "ppms", "=", "nn", ".", "ModuleList", "(", "ppms", ")", "\n", "\n", "self", ".", "ppm_cat", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "self", ".", "in_planes", "*", "4", ",", "self", ".", "in_planes", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "for", "ii", "in", "self", ".", "out_planes", ":", "\n", "            ", "infos", ".", "append", "(", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "self", ".", "in_planes", ",", "ii", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ")", "\n", "", "self", ".", "infos", "=", "nn", ".", "ModuleList", "(", "infos", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.01", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model_new.vgg16_locate.load_pretrained_model": [[49, 51], ["model_new.vgg16_locate.vgg16.load_pretrained_model"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.poolnet.model_new.vgg16_locate.load_pretrained_model"], ["", "", "", "def", "load_pretrained_model", "(", "self", ",", "model", ")", ":", "\n", "        ", "self", ".", "vgg16", ".", "load_pretrained_model", "(", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model_new.vgg16_locate.forward": [[52, 65], ["model_new.vgg16_locate.vgg16", "range", "model_new.vgg16_locate.ppm_cat", "range", "x.size", "len", "model_new.vgg16_locate.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "len", "infos.append", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "xs[].size", "xs[].size", "len"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_size", "=", "x", ".", "size", "(", ")", "[", "2", ":", "]", "\n", "xs", "=", "self", ".", "vgg16", "(", "x", ")", "\n", "\n", "xls", "=", "[", "xs", "[", "-", "1", "]", "]", "\n", "for", "k", "in", "range", "(", "len", "(", "self", ".", "ppms", ")", ")", ":", "\n", "            ", "xls", ".", "append", "(", "F", ".", "interpolate", "(", "self", ".", "ppms", "[", "k", "]", "(", "xs", "[", "-", "1", "]", ")", ",", "xs", "[", "-", "1", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", ")", "\n", "", "xls", "=", "self", ".", "ppm_cat", "(", "torch", ".", "cat", "(", "xls", ",", "dim", "=", "1", ")", ")", "\n", "infos", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "len", "(", "self", ".", "infos", ")", ")", ":", "\n", "            ", "infos", ".", "append", "(", "self", ".", "infos", "[", "k", "]", "(", "F", ".", "interpolate", "(", "xls", ",", "xs", "[", "len", "(", "self", ".", "infos", ")", "-", "1", "-", "k", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", ")", ")", "\n", "\n", "", "return", "xs", ",", "infos", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model_new.ResNet_locate.__init__": [[68, 84], ["torch.nn.Module.__init__", "base.encoder.resnet.resnet50", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.ModuleList", "torch.nn.ModuleList", "ppms.append", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "infos.append", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.AdaptiveAvgPool2d", "torch.nn.AdaptiveAvgPool2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "ResNet_locate", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "resnet", "=", "resnet50", "(", "pretrained", "=", "True", ")", "\n", "self", ".", "in_planes", "=", "512", "\n", "self", ".", "out_planes", "=", "[", "512", ",", "256", ",", "256", ",", "128", "]", "\n", "\n", "self", ".", "ppms_pre", "=", "nn", ".", "Conv2d", "(", "2048", ",", "self", ".", "in_planes", ",", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "ppms", ",", "infos", "=", "[", "]", ",", "[", "]", "\n", "for", "ii", "in", "[", "1", ",", "3", ",", "5", "]", ":", "\n", "            ", "ppms", ".", "append", "(", "nn", ".", "Sequential", "(", "nn", ".", "AdaptiveAvgPool2d", "(", "ii", ")", ",", "nn", ".", "Conv2d", "(", "self", ".", "in_planes", ",", "self", ".", "in_planes", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ")", "\n", "", "self", ".", "ppms", "=", "nn", ".", "ModuleList", "(", "ppms", ")", "\n", "\n", "self", ".", "ppm_cat", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "self", ".", "in_planes", "*", "4", ",", "self", ".", "in_planes", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "for", "ii", "in", "self", ".", "out_planes", ":", "\n", "            ", "infos", ".", "append", "(", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "self", ".", "in_planes", ",", "ii", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ")", "\n", "", "self", ".", "infos", "=", "nn", ".", "ModuleList", "(", "infos", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model_new.ResNet_locate.forward": [[85, 100], ["model_new.ResNet_locate.resnet", "model_new.ResNet_locate.ppms_pre", "range", "model_new.ResNet_locate.ppm_cat", "range", "x.size", "len", "model_new.ResNet_locate.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "len", "infos.append", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "model_new.ResNet_locate.size", "xs[].size", "len"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.resnet"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_size", "=", "x", ".", "size", "(", ")", "[", "2", ":", "]", "\n", "xs", "=", "self", ".", "resnet", "(", "x", ")", "\n", "\n", "xs_1", "=", "self", ".", "ppms_pre", "(", "xs", "[", "-", "1", "]", ")", "\n", "xls", "=", "[", "xs_1", "]", "\n", "for", "k", "in", "range", "(", "len", "(", "self", ".", "ppms", ")", ")", ":", "\n", "            ", "xls", ".", "append", "(", "F", ".", "interpolate", "(", "self", ".", "ppms", "[", "k", "]", "(", "xs_1", ")", ",", "xs_1", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", ")", "\n", "", "xls", "=", "self", ".", "ppm_cat", "(", "torch", ".", "cat", "(", "xls", ",", "dim", "=", "1", ")", ")", "\n", "\n", "infos", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "len", "(", "self", ".", "infos", ")", ")", ":", "\n", "            ", "infos", ".", "append", "(", "self", ".", "infos", "[", "k", "]", "(", "F", ".", "interpolate", "(", "xls", ",", "xs", "[", "len", "(", "self", ".", "infos", ")", "-", "1", "-", "k", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", ")", ")", "\n", "\n", "", "return", "xs", ",", "infos", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model_new.ConvertLayer.__init__": [[102, 108], ["torch.nn.Module.__init__", "range", "torch.nn.ModuleList", "torch.nn.ModuleList", "len", "up.append", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["    ", "def", "__init__", "(", "self", ",", "list_k", ")", ":", "\n", "        ", "super", "(", "ConvertLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "up", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "list_k", "[", "0", "]", ")", ")", ":", "\n", "            ", "up", ".", "append", "(", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "list_k", "[", "0", "]", "[", "i", "]", ",", "list_k", "[", "1", "]", "[", "i", "]", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ")", "\n", "", "self", ".", "convert0", "=", "nn", ".", "ModuleList", "(", "up", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model_new.ConvertLayer.forward": [[109, 114], ["range", "len", "resl.append"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "list_x", ")", ":", "\n", "        ", "resl", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "list_x", ")", ")", ":", "\n", "            ", "resl", ".", "append", "(", "self", ".", "convert0", "[", "i", "]", "(", "list_x", "[", "i", "]", ")", ")", "\n", "", "return", "resl", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model_new.DeepPoolLayer.__init__": [[116, 131], ["torch.nn.Module.__init__", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "pools.append", "convs.append", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.AvgPool2d", "torch.nn.AvgPool2d", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["    ", "def", "__init__", "(", "self", ",", "k", ",", "k_out", ",", "need_x2", ",", "need_fuse", ")", ":", "\n", "        ", "super", "(", "DeepPoolLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pools_sizes", "=", "[", "2", ",", "4", ",", "8", "]", "\n", "self", ".", "need_x2", "=", "need_x2", "\n", "self", ".", "need_fuse", "=", "need_fuse", "\n", "pools", ",", "convs", "=", "[", "]", ",", "[", "]", "\n", "for", "i", "in", "self", ".", "pools_sizes", ":", "\n", "            ", "pools", ".", "append", "(", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "i", ",", "stride", "=", "i", ")", ")", "\n", "convs", ".", "append", "(", "nn", ".", "Conv2d", "(", "k", ",", "k", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ")", "\n", "", "self", ".", "pools", "=", "nn", ".", "ModuleList", "(", "pools", ")", "\n", "self", ".", "convs", "=", "nn", ".", "ModuleList", "(", "convs", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "conv_sum", "=", "nn", ".", "Conv2d", "(", "k", ",", "k_out", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "if", "self", ".", "need_fuse", ":", "\n", "            ", "self", ".", "conv_sum_c", "=", "nn", ".", "Conv2d", "(", "k_out", ",", "k_out", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model_new.DeepPoolLayer.forward": [[132, 145], ["x.size", "range", "model_new.DeepPoolLayer.relu", "model_new.DeepPoolLayer.conv_sum", "len", "torch.add", "torch.add", "torch.add", "torch.add", "torch.interpolate", "torch.interpolate", "model_new.DeepPoolLayer.conv_sum_c", "torch.interpolate", "torch.interpolate", "torch.add", "torch.add", "torch.add", "torch.add", "x2.size", "torch.add", "torch.add", "torch.add", "torch.add"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "x2", "=", "None", ",", "x3", "=", "None", ")", ":", "\n", "        ", "x_size", "=", "x", ".", "size", "(", ")", "\n", "resl", "=", "x", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "pools_sizes", ")", ")", ":", "\n", "            ", "y", "=", "self", ".", "convs", "[", "i", "]", "(", "self", ".", "pools", "[", "i", "]", "(", "x", ")", ")", "\n", "resl", "=", "torch", ".", "add", "(", "resl", ",", "F", ".", "interpolate", "(", "y", ",", "x_size", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", ")", "\n", "", "resl", "=", "self", ".", "relu", "(", "resl", ")", "\n", "if", "self", ".", "need_x2", ":", "\n", "            ", "resl", "=", "F", ".", "interpolate", "(", "resl", ",", "x2", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "", "resl", "=", "self", ".", "conv_sum", "(", "resl", ")", "\n", "if", "self", ".", "need_fuse", ":", "\n", "            ", "resl", "=", "self", ".", "conv_sum_c", "(", "torch", ".", "add", "(", "torch", ".", "add", "(", "resl", ",", "x2", ")", ",", "x3", ")", ")", "\n", "", "return", "resl", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model_new.ScoreLayer.__init__": [[147, 150], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["    ", "def", "__init__", "(", "self", ",", "k", ")", ":", "\n", "        ", "super", "(", "ScoreLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "score", "=", "nn", ".", "Conv2d", "(", "k", ",", "1", ",", "1", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model_new.ScoreLayer.forward": [[151, 156], ["model_new.ScoreLayer.score", "torch.interpolate", "torch.interpolate"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "x_size", "=", "None", ")", ":", "\n", "        ", "x", "=", "self", ".", "score", "(", "x", ")", "\n", "if", "x_size", "is", "not", "None", ":", "\n", "            ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "x_size", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model_new.deocder.__init__": [[174, 181], ["torch.nn.Module.__init__", "torch.nn.ModuleList", "torch.nn.ModuleList"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["    ", "def", "__init__", "(", "self", ",", "base_model_cfg", ",", "convert_layers", ",", "deep_pool_layers", ",", "score_layers", ")", ":", "\n", "        ", "super", "(", "deocder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "base_model_cfg", "=", "base_model_cfg", "\n", "self", ".", "deep_pool", "=", "nn", ".", "ModuleList", "(", "deep_pool_layers", ")", "\n", "self", ".", "score", "=", "score_layers", "\n", "if", "self", ".", "base_model_cfg", "==", "'resnet'", ":", "\n", "            ", "self", ".", "convert", "=", "convert_layers", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model_new.deocder.forward": [[182, 206], ["torch.interpolate", "torch.interpolate", "range", "model_new.deocder.score", "model_new.deocder.convert", "conv2merge[].size", "len"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "conv2merge", ",", "infos", ",", "x_size", ")", ":", "\n", "#x_size = x.size()", "\n", "#conv2merge, infos = self.encoder(x)", "\n", "        ", "if", "self", ".", "base_model_cfg", "==", "'resnet'", ":", "\n", "            ", "conv2merge", "=", "self", ".", "convert", "(", "conv2merge", ")", "\n", "", "conv2merge", "=", "conv2merge", "[", ":", ":", "-", "1", "]", "\n", "\n", "edge_merge", "=", "[", "]", "\n", "#for l in conv2merge:", "\n", "#    print(l.size())", "\n", "#print(conv2merge[0].size())", "\n", "conv2merge", "[", "0", "]", "=", "F", ".", "interpolate", "(", "conv2merge", "[", "0", "]", ",", "conv2merge", "[", "1", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "#print(conv2merge[0].size())", "\n", "#print(conv2merge[0].size(), conv2merge[1].size(), infos[0].size())", "\n", "merge", "=", "self", ".", "deep_pool", "[", "0", "]", "(", "conv2merge", "[", "0", "]", ",", "conv2merge", "[", "1", "]", ",", "infos", "[", "0", "]", ")", "\n", "for", "k", "in", "range", "(", "1", ",", "len", "(", "conv2merge", ")", "-", "1", ")", ":", "\n", "            ", "merge", "=", "self", ".", "deep_pool", "[", "k", "]", "(", "merge", ",", "conv2merge", "[", "k", "+", "1", "]", ",", "infos", "[", "k", "]", ")", "\n", "\n", "", "merge", "=", "self", ".", "deep_pool", "[", "-", "1", "]", "(", "merge", ")", "\n", "merge", "=", "self", ".", "score", "(", "merge", ",", "x_size", ")", "\n", "\n", "out_dict", "=", "{", "}", "\n", "out_dict", "[", "'final'", "]", "=", "merge", "\n", "return", "out_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model_new.PoolNet.__init__": [[208, 213], ["torch.nn.Module.__init__", "model_new.deocder"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["    ", "def", "__init__", "(", "self", ",", "base_model_cfg", ",", "base", ",", "convert_layers", ",", "deep_pool_layers", ",", "score_layers", ")", ":", "\n", "        ", "super", "(", "PoolNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "base_model_cfg", "=", "base_model_cfg", "\n", "self", ".", "encoder", "=", "base", "\n", "self", ".", "decoder", "=", "deocder", "(", "self", ".", "base_model_cfg", ",", "convert_layers", ",", "deep_pool_layers", ",", "score_layers", ")", "\n", "#self.decoder.apply(weights_init)", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model_new.PoolNet.forward": [[215, 220], ["x.size", "model_new.PoolNet.encoder", "model_new.PoolNet.decoder"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_size", "=", "x", ".", "size", "(", ")", "\n", "conv2merge", ",", "infos", "=", "self", ".", "encoder", "(", "x", ")", "\n", "out", "=", "self", ".", "decoder", "(", "conv2merge", ",", "infos", ",", "x_size", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model_new.extra_layer": [[157, 171], ["model_new.ConvertLayer", "range", "model_new.ScoreLayer", "len", "model_new.DeepPoolLayer"], "function", ["None"], ["", "", "def", "extra_layer", "(", "base_model_cfg", ",", "vgg", ")", ":", "\n", "    ", "if", "base_model_cfg", "==", "'vgg16'", ":", "\n", "        ", "config", "=", "config_vgg", "\n", "", "elif", "base_model_cfg", "==", "'resnet'", ":", "\n", "        ", "config", "=", "config_resnet", "\n", "", "convert_layers", ",", "deep_pool_layers", ",", "score_layers", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "convert_layers", "=", "ConvertLayer", "(", "config", "[", "'convert'", "]", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "config", "[", "'deep_pool'", "]", "[", "0", "]", ")", ")", ":", "\n", "        ", "deep_pool_layers", "+=", "[", "DeepPoolLayer", "(", "config", "[", "'deep_pool'", "]", "[", "0", "]", "[", "i", "]", ",", "config", "[", "'deep_pool'", "]", "[", "1", "]", "[", "i", "]", ",", "config", "[", "'deep_pool'", "]", "[", "2", "]", "[", "i", "]", ",", "config", "[", "'deep_pool'", "]", "[", "3", "]", "[", "i", "]", ")", "]", "\n", "\n", "", "score_layers", "=", "ScoreLayer", "(", "config", "[", "'score'", "]", ")", "\n", "\n", "return", "vgg", ",", "convert_layers", ",", "deep_pool_layers", ",", "score_layers", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model_new.initModule": [[221, 225], ["torch.nn.init.kaiming_normal_", "type", "type"], "function", ["None"], ["", "", "def", "initModule", "(", "modules", ")", ":", "\n", "    ", "for", "module", "in", "modules", ":", "\n", "        ", "if", "type", "(", "module", ")", "is", "nn", ".", "Conv2d", "or", "type", "(", "module", ")", "is", "nn", ".", "Linear", ":", "\n", "            ", "nn", ".", "init", ".", "kaiming_normal_", "(", "module", ".", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model_new.Network": [[226, 245], ["PoolNet.apply", "torch.load", "torch.load", "PoolNet.encoder.resnet.state_dict", "torch.load.items", "PoolNet.encoder.resnet.load_state_dict", "PoolNet.train", "model_new.PoolNet", "model_new.PoolNet", "model.encoder.resnet.state_dict.keys", "model_new.extra_layer", "model_new.vgg16_locate", "model_new.extra_layer", "model_new.ResNet_locate"], "function", ["home.repos.pwc.inspect_result.moothes_salod.poolnet.model_new.extra_layer", "home.repos.pwc.inspect_result.moothes_salod.poolnet.model_new.extra_layer"], ["", "", "", "def", "Network", "(", "config", ")", ":", "\n", "    ", "if", "config", "[", "'backbone'", "]", "==", "'vgg16'", ":", "\n", "        ", "model", "=", "PoolNet", "(", "config", "[", "'backbone'", "]", ",", "*", "extra_layer", "(", "config", "[", "'backbone'", "]", ",", "vgg16_locate", "(", ")", ")", ")", "\n", "", "elif", "config", "[", "'backbone'", "]", "==", "'resnet'", ":", "\n", "        ", "model", "=", "PoolNet", "(", "config", "[", "'backbone'", "]", ",", "*", "extra_layer", "(", "config", "[", "'backbone'", "]", ",", "ResNet_locate", "(", ")", ")", ")", "\n", "\n", "", "model", ".", "apply", "(", "weights_init", ")", "\n", "pre_st", "=", "torch", ".", "load", "(", "'../PretrainModel/resnet50.pth'", ")", "\n", "ex_st", "=", "model", ".", "encoder", ".", "resnet", ".", "state_dict", "(", ")", "\n", "for", "k", ",", "v", "in", "pre_st", ".", "items", "(", ")", ":", "\n", "        ", "if", "k", "in", "ex_st", ".", "keys", "(", ")", ":", "\n", "#print(k)", "\n", "            ", "ex_st", "[", "k", "]", "=", "v", "\n", "#ex_st.update(state_dict)", "\n", "", "", "model", ".", "encoder", ".", "resnet", ".", "load_state_dict", "(", "ex_st", ")", "\n", "model", ".", "train", "(", ")", "\n", "#model.eval()", "\n", "#model.apply(weights_init)", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.poolnet.model_new.weights_init": [[246, 253], ["isinstance", "m.weight.data.normal_", "m.bias.data.zero_"], "function", ["None"], ["", "def", "weights_init", "(", "m", ")", ":", "\n", "    ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "#print(m)", "\n", "#nn.init.kaiming_normal_(m.weight)", "\n", "        ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.01", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "            ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.minet.config.get_config": [[7, 17], ["base.config.base_config", "base.config.base_config.parse_args", "vars", "base.config.cfg_convert", "print"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.config.base_config", "home.repos.pwc.inspect_result.moothes_salod.base.config.cfg_convert"], ["def", "get_config", "(", ")", ":", "\n", "    ", "strategy", "=", "'base_sgd'", "\n", "parser", "=", "base_config", "(", "strategy", ")", "\n", "# Add custom params here", "\n", "# parser.add_argument('--size', default=320, type=int, help='Input size')", "\n", "\n", "params", "=", "parser", ".", "parse_args", "(", ")", "\n", "config", "=", "vars", "(", "params", ")", "\n", "cfg_convert", "(", "config", ")", "\n", "print", "(", "'Training {} network with {} backbone using Gpu: {}'", ".", "format", "(", "config", "[", "'model_name'", "]", ",", "config", "[", "'backbone'", "]", ",", "config", "[", "'gpus'", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.minet.loss.CTLoss": [[7, 12], ["torch.nn.BCEWithLogitsLoss", "torch.nn.functional.avg_pool2d", "label_edge_prediction", "nn.BCEWithLogitsLoss."], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.util.label_edge_prediction"], ["\n", "def", "IOU", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "    ", "pred", "=", "torch", ".", "sigmoid", "(", "preds", ")", "\n", "\n", "inter", "=", "torch", ".", "sum", "(", "target", "*", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "\n", "union", "=", "torch", ".", "sum", "(", "target", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "+", "torch", ".", "sum", "(", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "-", "inter", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.minet.loss.Fscore": [[14, 25], ["torch.sigmoid", "fs.mean", "torch.nn.functional.avg_pool2d", "tp.sum", "torch.sigmoid.sum", "label_edge_prediction", "target.sum"], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.util.label_edge_prediction"], ["return", "iou_loss", "\n", "\n", "", "def", "Loss", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "# preds: Dict type. Customarily, preds['final'] is the final prediction without sigmoid.", "\n", "    ", "bce", "=", "nn", ".", "BCEWithLogitsLoss", "(", "reduction", "=", "'none'", ")", "\n", "\n", "loss", "=", "0", "\n", "for", "pred", "in", "preds", "[", "'sal'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "target", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "loss", "+=", "IOU", "(", "pred", ",", "target", ",", "config", ")", "\n", "\n", "", "gt_edge", "=", "label_edge_prediction", "(", "target", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.minet.loss.cff_loss": [[27, 32], ["loss.CTLoss", "loss.Fscore"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.loss.CTLoss", "home.repos.pwc.inspect_result.moothes_salod.base.loss.Fscore"], ["        ", "loss", "+=", "bce", "(", "pred", ",", "gt_edge", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "\n", "", "gt_body", "=", "(", "target", "-", "gt_edge", ")", ".", "gt", "(", "0.5", ")", "\n", "for", "pred", "in", "preds", "[", "'body'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "gt_body", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.minet.loss.Loss_new": [[33, 37], ["loss.cff_loss", "target.gt().float", "target.gt"], "function", ["home.repos.pwc.inspect_result.moothes_salod.itsd.loss.cff_loss"], ["", "return", "loss", "\n", "\n", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.minet.loss.Loss": [[38, 51], ["torch.nn.BCEWithLogitsLoss", "nn.BCEWithLogitsLoss.", "torch.sigmoid", "target.gt().float", "torch.sigmoid.sum", "target.sum", "target.gt"], "function", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.minet.model.SIM.__init__": [[18, 40], ["torch.Module.__init__", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "input1", ",", "input2", "=", "[", "0", ",", "0", ",", "0", ",", "0", "]", ")", ":", "\n", "        ", "out0", "=", "F", ".", "relu", "(", "self", ".", "bn0", "(", "self", ".", "conv0", "(", "input1", "[", "0", "]", "+", "input2", "[", "0", "]", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out0", "=", "F", ".", "interpolate", "(", "out0", ",", "size", "=", "input1", "[", "1", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "input1", "[", "1", "]", "+", "input2", "[", "1", "]", "+", "out0", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out1", "=", "F", ".", "interpolate", "(", "out1", ",", "size", "=", "input1", "[", "2", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "input1", "[", "2", "]", "+", "input2", "[", "2", "]", "+", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2", "=", "F", ".", "interpolate", "(", "out2", ",", "size", "=", "input1", "[", "3", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "input1", "[", "3", "]", "+", "input2", "[", "3", "]", "+", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "return", "out3", "\n", "\n", "", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n", "\n", "", "", "class", "Encoder", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.minet.model.SIM.forward": [[41, 62], ["model.SIM.relu", "model.SIM.relu", "model.SIM.h2h_1", "model.SIM.h2l_1", "model.SIM.l2l_1", "model.SIM.l2h_1", "model.SIM.relu", "model.SIM.relu", "model.SIM.h2h_2", "model.SIM.l2h_2", "model.SIM.relu", "model.SIM.bnh_0", "model.SIM.bnl_0", "model.SIM.h2l_pool", "model.SIM.l2h_up", "model.SIM.bnh_1", "model.SIM.bnl_1", "model.SIM.l2h_up", "model.SIM.bnh_2", "model.SIM.h2h_0", "model.SIM.h2l_0", "model.SIM.h2l_pool"], "methods", ["None"], ["self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "conv1b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "conv1d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.minet.model.conv_2nV1.__init__": [[65, 113], ["torch.Module.__init__", "min", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["\n", "", "def", "forward", "(", "self", ",", "out1", ")", ":", "\n", "        ", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2", "=", "F", ".", "max_pool2d", "(", "out1", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3", "=", "F", ".", "max_pool2d", "(", "out2", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4", "=", "F", ".", "max_pool2d", "(", "out3", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out4", "=", "F", ".", "relu", "(", "self", ".", "bn4", "(", "self", ".", "conv4", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "out1b", "=", "F", ".", "relu", "(", "self", ".", "bn1b", "(", "self", ".", "conv1b", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2b", "=", "F", ".", "relu", "(", "self", ".", "bn2b", "(", "self", ".", "conv2b", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3b", "=", "F", ".", "relu", "(", "self", ".", "bn3b", "(", "self", ".", "conv3b", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4b", "=", "F", ".", "relu", "(", "self", ".", "bn4b", "(", "self", ".", "conv4b", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "out1d", "=", "F", ".", "relu", "(", "self", ".", "bn1d", "(", "self", ".", "conv1d", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2d", "=", "F", ".", "relu", "(", "self", ".", "bn2d", "(", "self", ".", "conv2d", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3d", "=", "F", ".", "relu", "(", "self", ".", "bn3d", "(", "self", ".", "conv3d", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4d", "=", "F", ".", "relu", "(", "self", ".", "bn4d", "(", "self", ".", "conv4d", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "return", "(", "out4b", ",", "out3b", ",", "out2b", ",", "out1b", ")", ",", "(", "out4d", ",", "out3d", ",", "out2d", ",", "out1d", ")", "\n", "\n", "", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n", "\n", "", "", "class", "Network", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "config", ",", "encoder", ",", "feat", ")", ":", "\n", "# encoder: backbone, forward function output 5 encoder features. details in methods/base/model.py", "\n", "# feat: length of encoder features. e.g.: VGG:[64, 128, 256, 512, 512]; Resnet:[64, 256, 512, 1024, 2048]", "\n", "        ", "super", "(", "Network", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "conv5b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv2b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv5d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "encoder1", "=", "Encoder", "(", ")", "\n", "self", ".", "decoderb", "=", "Decoder", "(", ")", "\n", "self", ".", "decoderd", "=", "Decoder", "(", ")", "\n", "self", ".", "linearb", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "lineard", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.minet.model.conv_2nV1.forward": [[114, 148], ["model.conv_2nV1.relu", "model.conv_2nV1.relu", "model.conv_2nV1.h2h_1", "model.conv_2nV1.h2l_1", "model.conv_2nV1.l2l_1", "model.conv_2nV1.l2h_1", "model.conv_2nV1.relu", "model.conv_2nV1.relu", "model.conv_2nV1.bnh_0", "model.conv_2nV1.bnl_0", "model.conv_2nV1.h2l_pool", "model.conv_2nV1.l2h_up", "model.conv_2nV1.bnh_1", "model.conv_2nV1.bnl_1", "model.conv_2nV1.h2h_2", "model.conv_2nV1.l2h_2", "model.conv_2nV1.relu", "model.conv_2nV1.relu", "model.conv_2nV1.h2h_0", "model.conv_2nV1.l2l_0", "model.conv_2nV1.l2h_up", "model.conv_2nV1.bnh_2", "model.conv_2nV1.h2l_2", "model.conv_2nV1.l2l_2", "model.conv_2nV1.relu", "model.conv_2nV1.relu", "model.conv_2nV1.bnh_3", "model.conv_2nV1.identity", "model.conv_2nV1.h2l_pool", "model.conv_2nV1.bnl_2", "model.conv_2nV1.h2h_3", "model.conv_2nV1.bnl_3", "model.conv_2nV1.identity", "model.conv_2nV1.l2l_3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "phase", "=", "'test'", ")", ":", "\n", "        ", "shape", "=", "x", ".", "size", "(", ")", "[", "2", ":", "]", "\n", "out1", ",", "out2", ",", "out3", ",", "out4", ",", "out5", "=", "self", ".", "encoder", "(", "x", ")", "\n", "out2b", ",", "out3b", ",", "out4b", ",", "out5b", "=", "self", ".", "conv2b", "(", "out2", ")", ",", "self", ".", "conv3b", "(", "out3", ")", ",", "self", ".", "conv4b", "(", "out4", ")", ",", "self", ".", "conv5b", "(", "out5", ")", "\n", "out2d", ",", "out3d", ",", "out4d", ",", "out5d", "=", "self", ".", "conv2d", "(", "out2", ")", ",", "self", ".", "conv3d", "(", "out3", ")", ",", "self", ".", "conv4d", "(", "out4", ")", ",", "self", ".", "conv5d", "(", "out5", ")", "\n", "\n", "outb1", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ")", "\n", "outd1", "=", "self", ".", "decoderd", "(", "[", "out5d", ",", "out4d", ",", "out3d", ",", "out2d", "]", ")", "\n", "out1", "=", "torch", ".", "cat", "(", "[", "outb1", ",", "outd1", "]", ",", "dim", "=", "1", ")", "\n", "outb2", ",", "outd2", "=", "self", ".", "encoder1", "(", "out1", ")", "\n", "outb2", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ",", "outb2", ")", "\n", "outd2", "=", "self", ".", "decoderd", "(", "[", "out5d", ",", "out4d", ",", "out3d", ",", "out2d", "]", ",", "outd2", ")", "\n", "out2", "=", "torch", ".", "cat", "(", "[", "outb2", ",", "outd2", "]", ",", "dim", "=", "1", ")", "\n", "\n", "out1", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outb1", "=", "F", ".", "interpolate", "(", "self", ".", "linearb", "(", "outb1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outd1", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "\n", "out2", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outb2", "=", "F", ".", "interpolate", "(", "self", ".", "linearb", "(", "outb2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outd2", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "#return outb1, outd1, out1, outb2, outd2, out2", "\n", "\n", "OutDict", "=", "{", "}", "\n", "OutDict", "[", "'final'", "]", "=", "out2", "\n", "OutDict", "[", "'body'", "]", "=", "[", "outb1", ",", "outb2", "]", "\n", "OutDict", "[", "'detail'", "]", "=", "[", "outd1", ",", "outd2", "]", "\n", "OutDict", "[", "'sal'", "]", "=", "[", "out1", ",", "out2", "]", "\n", "return", "OutDict", "\n", "\n", "\n", "\n", "", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.minet.model.conv_3nV1.__init__": [[151, 190], ["torch.Module.__init__", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "min", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], []], "home.repos.pwc.inspect_result.moothes_salod.minet.model.conv_3nV1.forward": [[191, 221], ["model.conv_3nV1.relu", "model.conv_3nV1.relu", "model.conv_3nV1.relu", "model.conv_3nV1.h2h_1", "model.conv_3nV1.m2h_1", "model.conv_3nV1.h2m_1", "model.conv_3nV1.m2m_1", "model.conv_3nV1.l2m_1", "model.conv_3nV1.m2l_1", "model.conv_3nV1.l2l_1", "model.conv_3nV1.relu", "model.conv_3nV1.relu", "model.conv_3nV1.relu", "model.conv_3nV1.h2m_2", "model.conv_3nV1.m2m_2", "model.conv_3nV1.l2m_2", "model.conv_3nV1.relu", "model.conv_3nV1.relu", "model.conv_3nV1.bnh_0", "model.conv_3nV1.bnm_0", "model.conv_3nV1.bnl_0", "model.conv_3nV1.upsample", "model.conv_3nV1.downsample", "model.conv_3nV1.upsample", "model.conv_3nV1.downsample", "model.conv_3nV1.bnh_1", "model.conv_3nV1.bnm_1", "model.conv_3nV1.bnl_1", "model.conv_3nV1.downsample", "model.conv_3nV1.upsample", "model.conv_3nV1.bnm_2", "model.conv_3nV1.h2h_0", "model.conv_3nV1.m2m_0", "model.conv_3nV1.l2l_0", "model.conv_3nV1.bnm_3", "model.conv_3nV1.identity", "model.conv_3nV1.m2m_3"], "methods", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.minet.model.AIM.__init__": [[224, 233], ["torch.Module.__init__", "model.conv_2nV1", "model.conv_3nV1", "model.conv_3nV1", "model.conv_3nV1", "model.conv_2nV1"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], []], "home.repos.pwc.inspect_result.moothes_salod.minet.model.AIM.forward": [[234, 244], ["out_xs.append", "out_xs.append", "out_xs.append", "out_xs.append", "out_xs.append", "model.AIM.conv0", "model.AIM.conv1", "model.AIM.conv2", "model.AIM.conv3", "model.AIM.conv4"], "methods", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.minet.model.BasicConv2d.__init__": [[246, 272], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], []], "home.repos.pwc.inspect_result.moothes_salod.minet.model.BasicConv2d.forward": [[274, 276], ["model.BasicConv2d.basicconv"], "methods", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.minet.model.Network.__init__": [[279, 305], ["torch.Module.__init__", "model.AIM", "model.SIM", "model.SIM", "model.SIM", "model.SIM", "model.SIM", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "model.BasicConv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "model.BasicConv2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], []], "home.repos.pwc.inspect_result.moothes_salod.minet.model.Network.forward": [[306, 336], ["model.Network.encoder", "model.Network.trans", "model.Network.upconv5", "model.Network.upsample_add", "model.Network.upconv4", "model.Network.upsample_add", "model.Network.upconv3", "model.Network.upsample_add", "model.Network.upconv2", "model.Network.upsample_add", "model.Network.upconv1", "model.Network.classifier", "model.Network.upconv0", "model.Network.sim32", "model.Network.sim16", "model.Network.sim8", "model.Network.sim4", "model.Network.sim2", "model.Network.upsample"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.minet.model.upsample_add", "home.repos.pwc.inspect_result.moothes_salod.minet.model.upsample_add", "home.repos.pwc.inspect_result.moothes_salod.minet.model.upsample_add", "home.repos.pwc.inspect_result.moothes_salod.minet.model.upsample_add"], []], "home.repos.pwc.inspect_result.moothes_salod.minet.model.cus_sample": [[5, 8], ["torch.interpolate", "len", "kwargs.keys", "list", "kwargs.keys"], "function", ["None"], ["\n", "from", "base", ".", "encoder", ".", "vgg", "import", "vgg", "\n", "from", "base", ".", "encoder", ".", "resnet", "import", "resnet", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.minet.model.upsample_add": [[10, 15], ["torch.interpolate", "y.size"], "function", ["None"], ["class", "Decoder", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv0", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn0", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.itsd.config.get_config": [[7, 19], ["base.config.base_config", "base.config.base_config.parse_args", "vars", "base.config.cfg_convert", "print"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.config.base_config", "home.repos.pwc.inspect_result.moothes_salod.base.config.cfg_convert"], ["def", "get_config", "(", ")", ":", "\n", "    ", "strategy", "=", "'base_sgd'", "\n", "parser", "=", "base_config", "(", "strategy", ")", "\n", "# Add custom params here", "\n", "# parser.add_argument('--size', default=320, type=int, help='Input size')", "\n", "\n", "params", "=", "parser", ".", "parse_args", "(", ")", "\n", "config", "=", "vars", "(", "params", ")", "\n", "cfg_convert", "(", "config", ")", "\n", "print", "(", "'Training {} network with {} backbone using Gpu: {}'", ".", "format", "(", "config", "[", "'model_name'", "]", ",", "config", "[", "'backbone'", "]", ",", "config", "[", "'gpus'", "]", ")", ")", "\n", "\n", "# Config post-process", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.itsd.loss.CTLoss": [[8, 13], ["torch.nn.BCEWithLogitsLoss", "torch.nn.functional.avg_pool2d", "label_edge_prediction", "nn.BCEWithLogitsLoss."], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.util.label_edge_prediction"], ["def", "IOU", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "    ", "pred", "=", "torch", ".", "sigmoid", "(", "preds", ")", "\n", "\n", "inter", "=", "torch", ".", "sum", "(", "target", "*", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "\n", "union", "=", "torch", ".", "sum", "(", "target", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "+", "torch", ".", "sum", "(", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "-", "inter", "\n", "iou_loss", "=", "1", "-", "(", "inter", "/", "union", ")", ".", "mean", "(", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.itsd.loss.Fscore": [[15, 26], ["torch.sigmoid", "fs.mean", "torch.nn.functional.avg_pool2d", "tp.sum", "torch.sigmoid.sum", "label_edge_prediction", "target.sum"], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.util.label_edge_prediction"], ["\n", "", "def", "Loss", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "# preds: Dict type. Customarily, preds['final'] is the final prediction without sigmoid.", "\n", "    ", "bce", "=", "nn", ".", "BCEWithLogitsLoss", "(", "reduction", "=", "'none'", ")", "\n", "\n", "loss", "=", "0", "\n", "for", "pred", "in", "preds", "[", "'sal'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "target", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "loss", "+=", "IOU", "(", "pred", ",", "target", ",", "config", ")", "\n", "\n", "", "gt_edge", "=", "label_edge_prediction", "(", "target", ")", "\n", "for", "pred", "in", "preds", "[", "'detail'", "]", ":", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.itsd.loss.cff_loss": [[27, 32], ["loss.CTLoss", "loss.Fscore"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.loss.CTLoss", "home.repos.pwc.inspect_result.moothes_salod.base.loss.Fscore"], ["        ", "loss", "+=", "bce", "(", "pred", ",", "gt_edge", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "\n", "", "gt_body", "=", "(", "target", "-", "gt_edge", ")", ".", "gt", "(", "0.5", ")", "\n", "for", "pred", "in", "preds", "[", "'body'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "gt_body", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.itsd.loss.Loss": [[33, 61], ["torch.nn.BCEWithLogitsLoss", "batchs.cuda", "zip", "label_edge_prediction", "torch.nn.functional.interpolate().squeeze().float", "torch.where", "loss.cff_loss", "int", "torch.nn.functional.avg_pool2d().gt().float", "label_edge_prediction", "ctr_pred.sigmoid_().float", "torch.where", "loss.cff_loss", "batchs.cuda.gt().float", "torch.nn.functional.interpolate().squeeze", "batchs.cuda.size", "slc_pred.size", "torch.nn.functional.avg_pool2d().gt", "ctr_pred.sigmoid_", "nn.BCEWithLogitsLoss.mean", "batchs.cuda.gt", "torch.nn.functional.interpolate", "torch.nn.functional.avg_pool2d", "nn.BCEWithLogitsLoss.", "batchs.cuda.size"], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.util.label_edge_prediction", "home.repos.pwc.inspect_result.moothes_salod.itsd.loss.cff_loss", "home.repos.pwc.inspect_result.moothes_salod.None.util.label_edge_prediction", "home.repos.pwc.inspect_result.moothes_salod.itsd.loss.cff_loss"], ["", "return", "loss", "\n", "\n", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.itsd.loss.Loss_orig": [[64, 90], ["torch.nn.BCEWithLogitsLoss", "target.gt().float.gt().float", "zip", "label_edge_prediction", "torch.nn.functional.interpolate().squeeze().float", "torch.where", "int", "torch.nn.functional.avg_pool2d().gt().float", "label_edge_prediction", "ctr_pred.sigmoid_().float", "torch.where", "target.gt().float.gt", "torch.nn.functional.interpolate().squeeze", "target.gt().float.size", "slc_pred.size", "torch.nn.functional.avg_pool2d().gt", "ctr_pred.sigmoid_", "nn.BCEWithLogitsLoss.mean", "torch.nn.functional.interpolate", "nn.BCEWithLogitsLoss.", "torch.nn.functional.avg_pool2d", "nn.BCEWithLogitsLoss.", "nn.BCEWithLogitsLoss.", "target.gt().float.size"], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.util.label_edge_prediction", "home.repos.pwc.inspect_result.moothes_salod.None.util.label_edge_prediction"], []], "home.repos.pwc.inspect_result.moothes_salod.itsd.model.pred_block.__init__": [[49, 55], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["self", ".", "bn1b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4b", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.itsd.model.pred_block.forward": [[56, 63], ["torch.nn.functional.relu", "model.pred_block.pr_conv", "model.pred_block.final_conv", "torch.max", "torch.nn.functional.interpolate"], "methods", ["None"], ["\n", "self", ".", "conv1d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3d", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4d", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.itsd.model.res_block.__init__": [[65, 77], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "model.res_block.initialize", "torch.nn.Sequential", "list", "list", "list", "list", "model.gen_convs", "model.gen_fuse", "model.gen_final", "model.gen_fuse"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.itsd.model.ctr_block.initialize", "home.repos.pwc.inspect_result.moothes_salod.itsd.model.gen_convs", "home.repos.pwc.inspect_result.moothes_salod.itsd.model.gen_fuse", "home.repos.pwc.inspect_result.moothes_salod.itsd.model.gen_final", "home.repos.pwc.inspect_result.moothes_salod.itsd.model.gen_fuse"], ["\n", "", "def", "forward", "(", "self", ",", "out1", ")", ":", "\n", "        ", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2", "=", "F", ".", "max_pool2d", "(", "out1", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3", "=", "F", ".", "max_pool2d", "(", "out2", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4", "=", "F", ".", "max_pool2d", "(", "out3", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "out4", "=", "F", ".", "relu", "(", "self", ".", "bn4", "(", "self", ".", "conv4", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "out1b", "=", "F", ".", "relu", "(", "self", ".", "bn1b", "(", "self", ".", "conv1b", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2b", "=", "F", ".", "relu", "(", "self", ".", "bn2b", "(", "self", ".", "conv2b", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3b", "=", "F", ".", "relu", "(", "self", ".", "bn3b", "(", "self", ".", "conv3b", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.itsd.model.res_block.forward": [[78, 91], ["model.res_block.convs", "model.cp", "model.res_block.conv2", "torch.cat", "model.res_block.final", "torch.nn.functional.interpolate", "model.cp", "model.res_block.conv4", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.itsd.model.cp", "home.repos.pwc.inspect_result.moothes_salod.itsd.model.cp"], ["out4b", "=", "F", ".", "relu", "(", "self", ".", "bn4b", "(", "self", ".", "conv4b", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "out1d", "=", "F", ".", "relu", "(", "self", ".", "bn1d", "(", "self", ".", "conv1d", "(", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2d", "=", "F", ".", "relu", "(", "self", ".", "bn2d", "(", "self", ".", "conv2d", "(", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out3d", "=", "F", ".", "relu", "(", "self", ".", "bn3d", "(", "self", ".", "conv3d", "(", "out3", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out4d", "=", "F", ".", "relu", "(", "self", ".", "bn4d", "(", "self", ".", "conv4d", "(", "out4", ")", ")", ",", "inplace", "=", "True", ")", "\n", "return", "(", "out4b", ",", "out3b", ",", "out2b", ",", "out1b", ")", ",", "(", "out4d", ",", "out3d", ",", "out2d", ",", "out1d", ")", "\n", "\n", "", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n", "\n", "", "", "class", "Network", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "config", ",", "encoder", ",", "feat", ")", ":", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.itsd.model.res_block.initialize": [[92, 99], ["model.initModule", "model.initModule", "model.initModule", "model.initModule"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.itsd.model.initModule", "home.repos.pwc.inspect_result.moothes_salod.itsd.model.initModule", "home.repos.pwc.inspect_result.moothes_salod.itsd.model.initModule", "home.repos.pwc.inspect_result.moothes_salod.itsd.model.initModule"], ["# encoder: backbone, forward function output 5 encoder features. details in methods/base/model.py", "\n", "# feat: length of encoder features. e.g.: VGG:[64, 128, 256, 512, 512]; Resnet:[64, 256, 512, 1024, 2048]", "\n", "        ", "super", "(", "Network", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "conv5b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.itsd.model.ctr_block.__init__": [[101, 108], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "model.ctr_block.initialize", "list", "list", "list", "model.gen_convs", "model.gen_fuse", "model.gen_final"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.itsd.model.ctr_block.initialize", "home.repos.pwc.inspect_result.moothes_salod.itsd.model.gen_convs", "home.repos.pwc.inspect_result.moothes_salod.itsd.model.gen_fuse", "home.repos.pwc.inspect_result.moothes_salod.itsd.model.gen_final"], ["\n", "self", ".", "conv5d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "4", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv4d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "3", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv3d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "2", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "feat", "[", "1", "]", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "encoder1", "=", "Encoder", "(", ")", "\n", "self", ".", "decoderb", "=", "Decoder", "(", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.itsd.model.ctr_block.forward": [[109, 116], ["model.ctr_block.conv1", "model.ctr_block.conv2", "model.ctr_block.final", "torch.nn.functional.interpolate"], "methods", ["None"], ["self", ".", "decoderd", "=", "Decoder", "(", ")", "\n", "self", ".", "linearb", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "lineard", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ",", "phase", "=", "'test'", ")", ":", "\n", "        ", "shape", "=", "x", ".", "size", "(", ")", "[", "2", ":", "]", "\n", "out1", ",", "out2", ",", "out3", ",", "out4", ",", "out5", "=", "self", ".", "encoder", "(", "x", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.itsd.model.ctr_block.initialize": [[117, 121], ["model.initModule", "model.initModule", "model.initModule"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.itsd.model.initModule", "home.repos.pwc.inspect_result.moothes_salod.itsd.model.initModule", "home.repos.pwc.inspect_result.moothes_salod.itsd.model.initModule"], ["out2b", ",", "out3b", ",", "out4b", ",", "out5b", "=", "self", ".", "conv2b", "(", "out2", ")", ",", "self", ".", "conv3b", "(", "out3", ")", ",", "self", ".", "conv4b", "(", "out4", ")", ",", "self", ".", "conv5b", "(", "out5", ")", "\n", "out2d", ",", "out3d", ",", "out4d", ",", "out5d", "=", "self", ".", "conv2d", "(", "out2", ")", ",", "self", ".", "conv3d", "(", "out3", ")", ",", "self", ".", "conv4d", "(", "out4", ")", ",", "self", ".", "conv5d", "(", "out5", ")", "\n", "\n", "outb1", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ")", "\n", "outd1", "=", "self", ".", "decoderd", "(", "[", "out5d", ",", "out4d", ",", "out3d", ",", "out2d", "]", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.itsd.model.final_block.__init__": [[123, 128], ["torch.nn.Module.__init__", "torch.nn.ModuleList", "torch.nn.Conv2d", "torch.nn.Sequential", "range", "list", "model.decode_conv"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.itsd.model.decode_conv"], ["outb2", ",", "outd2", "=", "self", ".", "encoder1", "(", "out1", ")", "\n", "outb2", "=", "self", ".", "decoderb", "(", "[", "out5b", ",", "out4b", ",", "out3b", ",", "out2b", "]", ",", "outb2", ")", "\n", "outd2", "=", "self", ".", "decoderd", "(", "[", "out5d", ",", "out4d", ",", "out3d", ",", "out2d", "]", ",", "outd2", ")", "\n", "out2", "=", "torch", ".", "cat", "(", "[", "outb2", ",", "outd2", "]", ",", "dim", "=", "1", ")", "\n", "\n", "out1", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.itsd.model.final_block.forward": [[129, 140], ["torch.cat", "model.final_block.conv", "model.final_block.backbone.startswith", "torch.nn.functional.interpolate", "range", "torch.max"], "methods", ["None"], ["outb1", "=", "F", ".", "interpolate", "(", "self", ".", "linearb", "(", "outb1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outd1", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd1", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "\n", "out2", "=", "F", ".", "interpolate", "(", "self", ".", "linear", "(", "out2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outb2", "=", "F", ".", "interpolate", "(", "self", ".", "linearb", "(", "outb2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "outd2", "=", "F", ".", "interpolate", "(", "self", ".", "lineard", "(", "outd2", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "#return outb1, outd1, out1, outb2, outd2, out2", "\n", "\n", "OutDict", "=", "{", "}", "\n", "OutDict", "[", "'final'", "]", "=", "out2", "\n", "OutDict", "[", "'body'", "]", "=", "[", "outb1", ",", "outb2", "]", "\n", "OutDict", "[", "'detail'", "]", "=", "[", "outd1", ",", "outd2", "]", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.itsd.model.baseU.__init__": [[142, 156], ["torch.nn.Module.__init__", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "model.final_block", "model.adapter", "model.res_block", "model.pred_block", "model.ctr_block", "model.pred_block", "range", "range", "range", "range"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["return", "OutDict", "\n", "\n", "\n", "\n", "", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.itsd.model.baseU.forward": [[157, 185], ["range", "model.baseU.final", "torch.cat", "slcs.append", "ctrs.append", "slc_maps.append", "ctr_maps.append", "enumerate", "torch.cat", "ctrs.append", "model.cp", "model.cp"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.itsd.model.cp", "home.repos.pwc.inspect_result.moothes_salod.itsd.model.cp"], []], "home.repos.pwc.inspect_result.moothes_salod.itsd.model.adapter.__init__": [[187, 192], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], []], "home.repos.pwc.inspect_result.moothes_salod.itsd.model.adapter.forward": [[193, 199], ["model.adapter.size", "model.adapter.relu", "torch.max", "model.adapter.conv", "model.adapter.view"], "methods", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.itsd.model.Network.__init__": [[201, 207], ["torch.nn.Module.__init__", "model.baseU"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], []], "home.repos.pwc.inspect_result.moothes_salod.itsd.model.Network.forward": [[208, 212], ["model.Network.encoder", "model.Network.decoder"], "methods", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.itsd.model.initModule": [[12, 16], ["torch.nn.init.kaiming_normal_", "type", "type"], "function", ["None"], ["        ", "super", "(", "Decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv0", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn0", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.itsd.model.gen_convs": [[17, 22], ["range", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU"], "function", ["None"], ["self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "input1", ",", "input2", "=", "[", "0", ",", "0", ",", "0", ",", "0", "]", ")", ":", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.itsd.model.gen_fuse": [[23, 28], ["torch.nn.Conv2d", "torch.nn.GroupNorm", "torch.nn.ReLU"], "function", ["None"], ["        ", "out0", "=", "F", ".", "relu", "(", "self", ".", "bn0", "(", "self", ".", "conv0", "(", "input1", "[", "0", "]", "+", "input2", "[", "0", "]", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out0", "=", "F", ".", "interpolate", "(", "out0", ",", "size", "=", "input1", "[", "1", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "input1", "[", "1", "]", "+", "input2", "[", "1", "]", "+", "out0", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out1", "=", "F", ".", "interpolate", "(", "out1", ",", "size", "=", "input1", "[", "2", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "input1", "[", "2", "]", "+", "input2", "[", "2", "]", "+", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2", "=", "F", ".", "interpolate", "(", "out2", ",", "size", "=", "input1", "[", "3", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.itsd.model.cp": [[29, 34], ["x.size", "x.view", "torch.max"], "function", ["None"], ["out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "input1", "[", "3", "]", "+", "input2", "[", "3", "]", "+", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "return", "out3", "\n", "\n", "", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.itsd.model.gen_final": [[35, 38], ["torch.nn.Conv2d", "torch.nn.ReLU"], "function", ["None"], ["\n", "", "", "class", "Encoder", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.itsd.model.decode_conv": [[39, 47], ["range", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.Upsample"], "function", ["None"], ["self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.base.config.base_config": [[6, 74], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument"], "function", ["None"], ["\n", "def", "get_config", "(", ")", ":", "\n", "    ", "strategy", "=", "'base_sgd'", "\n", "parser", "=", "base_config", "(", "strategy", ")", "\n", "# Add custom params here", "\n", "# parser.add_argument('--size', default=320, type=int, help='Input size')", "\n", "\n", "params", "=", "parser", ".", "parse_args", "(", ")", "\n", "config", "=", "vars", "(", "params", ")", "\n", "cfg_convert", "(", "config", ")", "\n", "print", "(", "'Training {} network with {} backbone using Gpu: {}'", ".", "format", "(", "config", "[", "'model_name'", "]", ",", "config", "[", "'backbone'", "]", ",", "config", "[", "'gpus'", "]", ")", ")", "\n", "\n", "# Config post-process", "\n", "\n", "return", "config", "", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.base.config.cfg_convert": [[75, 128], ["os.path.join", "check_path", "os.path.join", "check_path", "config[].split"], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.util.check_path", "home.repos.pwc.inspect_result.moothes_salod.None.util.check_path"], []], "home.repos.pwc.inspect_result.moothes_salod.base.strategy.base_sgd": [[16, 20], ["None"], "function", ["None"], ["def", "base_sgd", "(", "optimizer", ",", "current_iter", ",", "total_iter", ",", "config", ")", ":", "\n", "    ", "factor", "=", "1", "if", "(", "current_iter", "/", "total_iter", ")", "<", "0.66", "else", "0.1", "\n", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", "=", "factor", "*", "config", "[", "'lr'", "]", "*", "0.1", "\n", "optimizer", ".", "param_groups", "[", "1", "]", "[", "'lr'", "]", "=", "factor", "*", "config", "[", "'lr'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.base.strategy.base_adam": [[28, 32], ["None"], "function", ["None"], ["def", "base_adam", "(", "optimizer", ",", "current_iter", ",", "total_iter", ",", "config", ")", ":", "\n", "    ", "factor", "=", "1", "if", "(", "current_iter", "/", "total_iter", ")", "<", "0.66", "else", "0.1", "\n", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", "=", "factor", "*", "config", "[", "'lr'", "]", "*", "0.1", "\n", "optimizer", ".", "param_groups", "[", "1", "]", "[", "'lr'", "]", "=", "factor", "*", "config", "[", "'lr'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.base.strategy.sche_1": [[41, 45], ["pow"], "function", ["None"], ["def", "sche_1", "(", "optimizer", ",", "current_iter", ",", "total_iter", ",", "config", ")", ":", "\n", "    ", "factor", "=", "1.", "/", "pow", "(", "2", ",", "(", "10", "*", "current_iter", ")", "//", "total_iter", ")", "\n", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", "=", "factor", "*", "config", "[", "'lr'", "]", "*", "0.1", "\n", "optimizer", ".", "param_groups", "[", "1", "]", "[", "'lr'", "]", "=", "factor", "*", "config", "[", "'lr'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.base.strategy.sche_f3net": [[53, 57], ["abs"], "function", ["None"], ["def", "sche_f3net", "(", "optimizer", ",", "current_iter", ",", "total_iter", ",", "config", ")", ":", "\n", "    ", "factor", "=", "(", "1", "-", "abs", "(", "current_iter", "/", "total_iter", "*", "2", "-", "1", ")", ")", "\n", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", "=", "factor", "*", "config", "[", "'lr'", "]", "*", "0.1", "\n", "optimizer", ".", "param_groups", "[", "1", "]", "[", "'lr'", "]", "=", "factor", "*", "config", "[", "'lr'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.base.strategy.sche_new": [[66, 70], ["pow"], "function", ["None"], ["def", "sche_new", "(", "optimizer", ",", "current_iter", ",", "total_iter", ",", "config", ")", ":", "\n", "    ", "factor", "=", "pow", "(", "(", "1", "-", "1.0", "*", "current_iter", "/", "total_iter", ")", ",", "0.9", ")", "\n", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", "=", "factor", "*", "config", "[", "'lr'", "]", "*", "0.1", "\n", "optimizer", ".", "param_groups", "[", "1", "]", "[", "'lr'", "]", "=", "factor", "*", "config", "[", "'lr'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.base.strategy.Strategy": [[73, 101], ["eval", "config.update", "eval", "config.keys", "model.named_parameters", "SGD", "Adam", "getattr().parameters", "encoder.append", "others.append", "AdamW", "getattr"], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.test.eval", "home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_wfm.update", "home.repos.pwc.inspect_result.moothes_salod.None.test.eval"], ["", "def", "Strategy", "(", "model", ",", "config", ")", ":", "\n", "    ", "strategy", "=", "config", "[", "'strategy'", "]", "\n", "stra_config", "=", "eval", "(", "strategy", "+", "'_config'", ")", "\n", "config", ".", "update", "(", "stra_config", ")", "\n", "\n", "if", "'params'", "in", "config", ".", "keys", "(", ")", ":", "\n", "        ", "module_lr", "=", "[", "{", "'params'", ":", "getattr", "(", "model", ",", "p", "[", "0", "]", ")", ".", "parameters", "(", ")", ",", "'lr'", ":", "p", "[", "1", "]", "}", "for", "p", "in", "config", "[", "'params'", "]", "]", "\n", "", "else", ":", "\n", "        ", "encoder", "=", "[", "]", "\n", "others", "=", "[", "]", "\n", "for", "param", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "'encoder.'", "in", "param", "[", "0", "]", ":", "\n", "                ", "encoder", ".", "append", "(", "param", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "                ", "others", ".", "append", "(", "param", "[", "1", "]", ")", "\n", "\n", "", "", "module_lr", "=", "[", "{", "'params'", ":", "encoder", ",", "'lr'", ":", "config", "[", "'lr'", "]", "*", "0.1", "}", ",", "{", "'params'", ":", "others", ",", "'lr'", ":", "config", "[", "'lr'", "]", "}", "]", "\n", "\n", "", "optim", "=", "config", "[", "'optim'", "]", "\n", "if", "optim", "==", "'SGD'", ":", "\n", "        ", "optimizer", "=", "SGD", "(", "params", "=", "module_lr", ",", "lr", "=", "config", "[", "'lr'", "]", ",", "momentum", "=", "0.9", ",", "weight_decay", "=", "0.0005", ")", "\n", "", "elif", "optim", "==", "'Adam'", ":", "\n", "        ", "optimizer", "=", "Adam", "(", "params", "=", "module_lr", ",", "lr", "=", "config", "[", "'lr'", "]", ",", "weight_decay", "=", "0.0005", ")", "\n", "", "elif", "optim", "==", "'AdamW'", ":", "\n", "        ", "optimizer", "=", "AdamW", "(", "params", "=", "module_lr", ",", "lr", "=", "config", "[", "'lr'", "]", ",", "weight_decay", "=", "0.05", ")", "# ", "\n", "\n", "", "schedule", "=", "eval", "(", "strategy", ")", "\n", "return", "optimizer", ",", "schedule", "\n", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.base.loss.Loss_factory.__init__": [[141, 151], ["torch.nn.Module.__init__", "len", "len", "len", "float", "config[].split"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], []], "home.repos.pwc.inspect_result.moothes_salod.base.loss.Loss_factory.forward": [[152, 166], ["zip", "preds.keys", "zip"], "methods", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.base.loss.gaussian": [[9, 12], ["torch.Tensor", "torch.Tensor.sum", "math.exp", "range", "float"], "function", ["None"], ["    ", "pred", "=", "torch", ".", "sigmoid", "(", "preds", ")", "\n", "\n", "inter", "=", "torch", ".", "sum", "(", "target", "*", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "\n", "union", "=", "torch", ".", "sum", "(", "target", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "+", "torch", ".", "sum", "(", "pred", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "-", "inter", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.base.loss.create_window": [[13, 18], ["gaussian().unsqueeze", "gaussian().unsqueeze.mm().float().unsqueeze().unsqueeze", "Variable", "_1D_window.mm().float().unsqueeze().unsqueeze.expand().contiguous", "loss.gaussian", "gaussian().unsqueeze.mm().float().unsqueeze", "_1D_window.mm().float().unsqueeze().unsqueeze.expand", "gaussian().unsqueeze.mm().float", "gaussian().unsqueeze.mm", "gaussian().unsqueeze.t"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.loss.gaussian"], ["iou_loss", "=", "1", "-", "(", "inter", "/", "union", ")", ".", "mean", "(", ")", "\n", "return", "iou_loss", "\n", "\n", "", "def", "Loss", "(", "preds", ",", "target", ",", "config", ")", ":", "\n", "# preds: Dict type. Customarily, preds['final'] is the final prediction without sigmoid.", "\n", "    ", "bce", "=", "nn", ".", "BCEWithLogitsLoss", "(", "reduction", "=", "'none'", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.base.loss._ssim": [[19, 40], ["torch.nn.functional.conv2d", "torch.nn.functional.conv2d", "F.conv2d.pow", "F.conv2d.pow", "torch.nn.functional.conv2d", "torch.nn.functional.conv2d", "torch.nn.functional.conv2d", "ssim_map.mean", "ssim_map.mean().mean().mean", "ssim_map.mean().mean", "ssim_map.mean"], "function", ["None"], ["\n", "loss", "=", "0", "\n", "for", "pred", "in", "preds", "[", "'sal'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "target", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "loss", "+=", "IOU", "(", "pred", ",", "target", ",", "config", ")", "\n", "\n", "", "gt_edge", "=", "label_edge_prediction", "(", "target", ")", "\n", "for", "pred", "in", "preds", "[", "'detail'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "gt_edge", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "\n", "", "gt_body", "=", "(", "target", "-", "gt_edge", ")", ".", "gt", "(", "0.5", ")", "\n", "for", "pred", "in", "preds", "[", "'body'", "]", ":", "\n", "        ", "loss", "+=", "bce", "(", "pred", ",", "gt_body", ".", "gt", "(", "0.5", ")", ".", "float", "(", ")", ")", ".", "mean", "(", ")", "\n", "\n", "", "return", "loss", "\n", "\n", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.base.loss.SSIM": [[41, 48], ["torch.sigmoid", "create_window().cuda", "torch.sigmoid.size", "loss._ssim", "loss.create_window"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.loss._ssim", "home.repos.pwc.inspect_result.moothes_salod.base.loss.create_window"], []], "home.repos.pwc.inspect_result.moothes_salod.base.loss.BCE": [[49, 53], ["torch.nn.BCEWithLogitsLoss", "nn.BCEWithLogitsLoss."], "function", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.base.loss.CTLoss": [[54, 64], ["torch.nn.BCEWithLogitsLoss", "torch.sigmoid", "torch.nn.functional.avg_pool2d", "label_edge_prediction", "nn.BCEWithLogitsLoss."], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.util.label_edge_prediction"], []], "home.repos.pwc.inspect_result.moothes_salod.base.loss.IOU": [[65, 72], ["torch.sigmoid", "torch.sum", "torch.sum", "torch.sum"], "function", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.base.loss.DICE": [[73, 82], ["torch.sigmoid", "torch.sum", "torch.sum", "torch.sum"], "function", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.base.loss.Edge": [[83, 87], ["torch.nn.BCEWithLogitsLoss", "nn.BCEWithLogitsLoss.", "label_edge_prediction"], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.util.label_edge_prediction"], []], "home.repos.pwc.inspect_result.moothes_salod.base.loss.Fscore": [[88, 96], ["torch.sigmoid", "fs.mean", "tp.sum", "torch.sigmoid.sum", "target.sum"], "function", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.base.loss.wFs": [[97, 111], ["torch.sigmoid", "fs.mean", "torch.nn.functional.avg_pool2d", "tp.sum", "torch.sigmoid.sum", "label_edge_prediction", "target.sum"], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.util.label_edge_prediction"], []], "home.repos.pwc.inspect_result.moothes_salod.base.loss.Focal": [[113, 122], ["torch.nn.BCEWithLogitsLoss", "torch.sigmoid", "torch.pow", "nn.BCEWithLogitsLoss."], "function", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.base.loss.mse": [[123, 135], ["torch.nn.MSELoss", "torch.sigmoid", "nn.MSELoss.mean", "nn.MSELoss."], "function", ["None"], []], "home.repos.pwc.inspect_result.moothes_salod.base.model.Network": [[14, 43], ["importlib.import_module().Network", "encoder.vgg.vgg", "encoder.resnet.resnet", "importlib.import_module", "encoder.efficientnet.EfficientNet.from_pretrained", "encoder.mobile.mobilenet", "encoder.mobilev3.mobilenetv3", "encoder.ghost.ghostnet", "encoder.res2net.res2net50_14w_8s", "encoder.resnet.resnet"], "function", ["home.repos.pwc.inspect_result.moothes_salod.base.model.Network", "home.repos.pwc.inspect_result.moothes_salod.encoder.vgg.vgg", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.resnet", "home.repos.pwc.inspect_result.moothes_salod.encoder.efficientnet.EfficientNet.from_pretrained", "home.repos.pwc.inspect_result.moothes_salod.encoder.mobile.mobilenet", "home.repos.pwc.inspect_result.moothes_salod.encoder.mobilev3.mobilenetv3", "home.repos.pwc.inspect_result.moothes_salod.encoder.ghost.ghostnet", "home.repos.pwc.inspect_result.moothes_salod.encoder.res2net.res2net50_14w_8s", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.resnet"], ["self", ".", "bn0", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "input1", ",", "input2", "=", "[", "0", ",", "0", ",", "0", ",", "0", "]", ")", ":", "\n", "        ", "out0", "=", "F", ".", "relu", "(", "self", ".", "bn0", "(", "self", ".", "conv0", "(", "input1", "[", "0", "]", "+", "input2", "[", "0", "]", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out0", "=", "F", ".", "interpolate", "(", "out0", ",", "size", "=", "input1", "[", "1", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "input1", "[", "1", "]", "+", "input2", "[", "1", "]", "+", "out0", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out1", "=", "F", ".", "interpolate", "(", "out1", ",", "size", "=", "input1", "[", "2", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "input1", "[", "2", "]", "+", "input2", "[", "2", "]", "+", "out1", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out2", "=", "F", ".", "interpolate", "(", "out2", ",", "size", "=", "input1", "[", "3", "]", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "out3", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "input1", "[", "3", "]", "+", "input2", "[", "3", "]", "+", "out2", ")", ")", ",", "inplace", "=", "True", ")", "\n", "return", "out3", "\n", "\n", "", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n", "\n", "", "", "class", "Encoder", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.base.framework_factory.params_count": [[9, 11], ["numpy.sum().item", "numpy.sum", "p.numel", "model.parameters"], "function", ["None"], ["def", "params_count", "(", "model", ")", ":", "\n", "    ", "return", "np", ".", "sum", "(", "[", "p", ".", "numel", "(", ")", "for", "p", "in", "model", ".", "parameters", "(", ")", "]", ")", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.base.framework_factory.load_framework": [[12, 95], ["importlib.import_module().get_config", "importlib.import_module().Network", "range", "model.cuda.cuda", "importlib.import_module().Strategy", "torch.randn", "torch.randn", "profile", "framework_factory.params_count", "print", "importlib.import_module().Loss_factory", "os.path.exists", "len", "len", "importlib.import_module", "importlib.import_module", "importlib.import_module", "importlib.import_module", "config[].split", "torch.nn.DataParallel", "torch.nn.DataParallel", "importlib.import_module", "importlib.import_module"], "function", ["home.repos.pwc.inspect_result.moothes_salod.itsd.config.get_config", "home.repos.pwc.inspect_result.moothes_salod.base.model.Network", "home.repos.pwc.inspect_result.moothes_salod.base.strategy.Strategy", "home.repos.pwc.inspect_result.moothes_salod.base.framework_factory.params_count"], ["", "def", "load_framework", "(", "net_name", ")", ":", "\n", "# Load Configure", "\n", "    ", "config", "=", "importlib", ".", "import_module", "(", "'methods.{}.config'", ".", "format", "(", "net_name", ")", ")", ".", "get_config", "(", ")", "\n", "#print(config)", "\n", "os", ".", "environ", "[", "\"CUDA_VISIBLE_DEVICES\"", "]", "=", "config", "[", "'gpus'", "]", "\n", "\n", "# Constructing network", "\n", "model", "=", "importlib", ".", "import_module", "(", "'base.model'", ")", ".", "Network", "(", "net_name", ",", "config", ")", "\n", "\n", "if", "config", "[", "'show_param'", "]", ":", "\n", "        ", "from", "thop", "import", "profile", "\n", "input", "=", "torch", ".", "randn", "(", "1", ",", "3", ",", "config", "[", "'size'", "]", ",", "config", "[", "'size'", "]", ")", "\n", "macs", ",", "params", "=", "profile", "(", "model", ",", "inputs", "=", "(", "input", ",", ")", ")", "\n", "params", "=", "params_count", "(", "model", ")", "\n", "print", "(", "'MACs: {:.2f} G, Params: {:.2f} M.'", ".", "format", "(", "macs", "/", "1e9", ",", "params", "/", "1e6", ")", ")", "\n", "\n", "", "if", "config", "[", "'loss'", "]", "==", "''", ":", "\n", "        ", "loss", "=", "importlib", ".", "import_module", "(", "'methods.{}.loss'", ".", "format", "(", "net_name", ")", ")", ".", "Loss", "\n", "", "else", ":", "\n", "        ", "loss", "=", "importlib", ".", "import_module", "(", "'base.loss'", ")", ".", "Loss_factory", "(", "config", ")", "\n", "\n", "# Loading Saver if it exists", "\n", "#print(os.path.exists('methods/{}/saver.py'.format(net_name)))", "\n", "", "if", "config", "[", "'save'", "]", "and", "os", ".", "path", ".", "exists", "(", "'methods/{}/saver.py'", ".", "format", "(", "net_name", ")", ")", ":", "\n", "        ", "saver", "=", "importlib", ".", "import_module", "(", "'methods.{}.saver'", ".", "format", "(", "net_name", ")", ")", ".", "Saver", "\n", "", "else", ":", "\n", "        ", "saver", "=", "None", "\n", "#print(saver is None)", "\n", "\n", "", "gpus", "=", "range", "(", "len", "(", "config", "[", "'gpus'", "]", ".", "split", "(", "','", ")", ")", ")", "# [int(x) for x in config['gpus'].split(',')]", "\n", "\n", "if", "len", "(", "gpus", ")", ">", "1", ":", "\n", "        ", "model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "model", ",", "device_ids", "=", "gpus", ")", ".", "module", "\n", "", "model", "=", "model", ".", "cuda", "(", ")", "\n", "\n", "optimizer", ",", "schedule", "=", "importlib", ".", "import_module", "(", "'base.strategy'", ")", ".", "Strategy", "(", "model", ",", "config", ")", "\n", "# Set optimizer and schedule", "\n", "'''\n    optim = config['optim']\n    if optim == 'SGD':\n        if 'params' in config.keys():\n            module_lr = [{'params' : getattr(model, p[0]).parameters(), 'lr' : p[1]} for p in config['params']]\n            optimizer = SGD(params=module_lr, lr=config['lr'], momentum=0.9, weight_decay=0.0005)\n        else:\n            encoder = []\n            others = []\n            for param in model.named_parameters():\n                if 'encoder.' in param[0]:\n                    encoder.append(param[1])\n                else:\n                    others.append(param[1])\n                    \n            module_lr = [{'params' : encoder, 'lr' : config['lr']*0.1}, {'params' : others, 'lr' : config['lr']}]\n            optimizer = SGD(params=module_lr, lr=config['lr'], momentum=0.9)\n    elif optim == 'Adam':\n        optimizer = Adam(filter(lambda p: p.requires_grad, model.parameters()), lr=config['lr'], weight_decay=0.0005)\n    elif optim == 'AdamW':\n        encoder = []\n        others = []\n        for param in model.named_parameters():\n            if 'encoder.' in param[0]:\n                encoder.append(param[1])\n            else:\n                others.append(param[1])\n                \n        module_lr = [{'params' : encoder, 'lr' : config['lr']*0.1}, {'params' : others, 'lr' : config['lr']}]\n        optimizer = AdamW(module_lr, lr = config['lr'], weight_decay=5.e-2)  # \n        \n    \n    # If get_config function doesn't return a valid schedule, it will be set here.\n    if schedule is None:\n        schedule = config['schedule']\n        if schedule == 'StepLR':\n            scheduler = sche.MultiStepLR(optimizer, milestones=config['step_size'], gamma=config['gamma'])\n        elif schedule == 'poly':\n            scheduler = poly_scheduler(optimizer, config['epoch'], config['lr_decay'])\n        elif schedule == 'pfa':\n            scheduler = pfa_scheduler(optimizer, config['epoch'])\n        else:\n            scheduler = sche.MultiStepLR(optimizer, milestones=[15, 20], gamma=0.5)\n    '''", "\n", "\n", "return", "config", ",", "model", ",", "optimizer", ",", "schedule", ",", "loss", ",", "saver", "\n", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.encoder.vgg.VGG.__init__": [[26, 44], ["torch.Module.__init__", "vgg.VGG._initialize_weights"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.encoder.mobilev3.MobileNetV3._initialize_weights"], ["", "else", ":", "\n", "                ", "layers", "+=", "[", "conv2d", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "", "in_channels", "=", "v", "\n", "", "", "return", "layers", "\n", "\n", "", "class", "vgg16", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "vgg16", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cfg", "=", "{", "'tun'", ":", "[", "64", ",", "64", ",", "'M'", ",", "128", ",", "128", ",", "'M'", ",", "256", ",", "256", ",", "256", ",", "'M'", ",", "512", ",", "512", ",", "512", ",", "'M'", ",", "512", ",", "512", ",", "512", ",", "'M'", "]", ",", "'tun_ex'", ":", "[", "512", ",", "512", ",", "512", "]", "}", "\n", "self", ".", "extract", "=", "[", "8", ",", "15", ",", "22", ",", "29", "]", "# [3, 8, 15, 22, 29]", "\n", "self", ".", "base", "=", "nn", ".", "ModuleList", "(", "vgg", "(", "self", ".", "cfg", "[", "'tun'", "]", ",", "3", ")", ")", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.01", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.vgg.VGG.forward": [[45, 58], ["range", "len", "xs.append"], "methods", ["None"], ["", "", "", "def", "load_pretrained_model", "(", "self", ",", "model", ")", ":", "\n", "        ", "self", ".", "base", ".", "load_state_dict", "(", "model", ",", "strict", "=", "False", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "tmp_x", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "len", "(", "self", ".", "base", ")", ")", ":", "\n", "            ", "x", "=", "self", ".", "base", "[", "k", "]", "(", "x", ")", "\n", "if", "k", "in", "self", ".", "extract", ":", "\n", "                ", "tmp_x", ".", "append", "(", "x", ")", "\n", "", "", "return", "tmp_x", "\n", "\n", "", "", "class", "vgg16_locate", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "vgg16_locate", ",", "self", ")", ".", "__init__", "(", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.vgg.VGG._initialize_weights": [[59, 71], ["vgg.VGG.modules", "isinstance", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "torch.init.normal_", "torch.init.normal_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["self", ".", "vgg16", "=", "vgg16", "(", ")", "\n", "self", ".", "in_planes", "=", "512", "\n", "self", ".", "out_planes", "=", "[", "512", ",", "256", ",", "128", "]", "\n", "\n", "ppms", ",", "infos", "=", "[", "]", ",", "[", "]", "\n", "for", "ii", "in", "[", "1", ",", "3", ",", "5", "]", ":", "\n", "            ", "ppms", ".", "append", "(", "nn", ".", "Sequential", "(", "nn", ".", "AdaptiveAvgPool2d", "(", "ii", ")", ",", "nn", ".", "Conv2d", "(", "self", ".", "in_planes", ",", "self", ".", "in_planes", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ")", "\n", "", "self", ".", "ppms", "=", "nn", ".", "ModuleList", "(", "ppms", ")", "\n", "\n", "self", ".", "ppm_cat", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "self", ".", "in_planes", "*", "4", ",", "self", ".", "in_planes", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "for", "ii", "in", "self", ".", "out_planes", ":", "\n", "            ", "infos", ".", "append", "(", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "self", ".", "in_planes", ",", "ii", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ")", "\n", "", "self", ".", "infos", "=", "nn", ".", "ModuleList", "(", "infos", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.vgg.make_layers": [[73, 87], ["torch.Sequential", "torch.Conv2d", "torch.MaxPool2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "function", ["None"], ["for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.01", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n", "", "", "", "def", "load_pretrained_model", "(", "self", ",", "model", ")", ":", "\n", "        ", "self", ".", "vgg16", ".", "load_pretrained_model", "(", "model", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_size", "=", "x", ".", "size", "(", ")", "[", "2", ":", "]", "\n", "xs", "=", "self", ".", "vgg16", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.vgg._vgg": [[97, 108], ["vgg.VGG", "vgg.make_layers", "VGG.load_state_dict", "torch.load", "torch.load"], "function", ["home.repos.pwc.inspect_result.moothes_salod.encoder.vgg.make_layers"], ["", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.encoder.vgg.vgg": [[110, 118], ["vgg._vgg"], "function", ["home.repos.pwc.inspect_result.moothes_salod.encoder.vgg._vgg"], []], "home.repos.pwc.inspect_result.moothes_salod.encoder.efficientnet.MBConvBlock.__init__": [[50, 90], ["torch.nn.Module.__init__", "utils.get_same_padding_conv2d", "utils.get_same_padding_conv2d.", "torch.nn.BatchNorm2d", "utils.calculate_output_image_size", "utils.get_same_padding_conv2d", "utils.get_same_padding_conv2d.", "torch.nn.BatchNorm2d", "utils.MemoryEfficientSwish", "utils.get_same_padding_conv2d", "utils.get_same_padding_conv2d.", "torch.nn.BatchNorm2d", "utils.get_same_padding_conv2d", "max", "utils.get_same_padding_conv2d.", "utils.get_same_padding_conv2d.", "int"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.get_same_padding_conv2d", "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.calculate_output_image_size", "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.get_same_padding_conv2d", "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.get_same_padding_conv2d", "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.get_same_padding_conv2d"], ["def", "__init__", "(", "self", ",", "block_args", ",", "global_params", ",", "image_size", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_block_args", "=", "block_args", "\n", "self", ".", "_bn_mom", "=", "1", "-", "global_params", ".", "batch_norm_momentum", "# pytorch's difference from tensorflow", "\n", "self", ".", "_bn_eps", "=", "global_params", ".", "batch_norm_epsilon", "\n", "self", ".", "has_se", "=", "(", "self", ".", "_block_args", ".", "se_ratio", "is", "not", "None", ")", "and", "(", "0", "<", "self", ".", "_block_args", ".", "se_ratio", "<=", "1", ")", "\n", "self", ".", "id_skip", "=", "block_args", ".", "id_skip", "# whether to use skip connection and drop connect", "\n", "\n", "# Expansion phase (Inverted Bottleneck)", "\n", "inp", "=", "self", ".", "_block_args", ".", "input_filters", "# number of input channels", "\n", "oup", "=", "self", ".", "_block_args", ".", "input_filters", "*", "self", ".", "_block_args", ".", "expand_ratio", "# number of output channels", "\n", "if", "self", ".", "_block_args", ".", "expand_ratio", "!=", "1", ":", "\n", "            ", "Conv2d", "=", "get_same_padding_conv2d", "(", "image_size", "=", "image_size", ")", "\n", "self", ".", "_expand_conv", "=", "Conv2d", "(", "in_channels", "=", "inp", ",", "out_channels", "=", "oup", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "_bn0", "=", "nn", ".", "BatchNorm2d", "(", "num_features", "=", "oup", ",", "momentum", "=", "self", ".", "_bn_mom", ",", "eps", "=", "self", ".", "_bn_eps", ")", "\n", "# image_size = calculate_output_image_size(image_size, 1) <-- this wouldn't modify image_size", "\n", "\n", "# Depthwise convolution phase", "\n", "", "k", "=", "self", ".", "_block_args", ".", "kernel_size", "\n", "s", "=", "self", ".", "_block_args", ".", "stride", "\n", "Conv2d", "=", "get_same_padding_conv2d", "(", "image_size", "=", "image_size", ")", "\n", "self", ".", "_depthwise_conv", "=", "Conv2d", "(", "\n", "in_channels", "=", "oup", ",", "out_channels", "=", "oup", ",", "groups", "=", "oup", ",", "# groups makes it depthwise", "\n", "kernel_size", "=", "k", ",", "stride", "=", "s", ",", "bias", "=", "False", ")", "\n", "self", ".", "_bn1", "=", "nn", ".", "BatchNorm2d", "(", "num_features", "=", "oup", ",", "momentum", "=", "self", ".", "_bn_mom", ",", "eps", "=", "self", ".", "_bn_eps", ")", "\n", "image_size", "=", "calculate_output_image_size", "(", "image_size", ",", "s", ")", "\n", "\n", "# Squeeze and Excitation layer, if desired", "\n", "if", "self", ".", "has_se", ":", "\n", "            ", "Conv2d", "=", "get_same_padding_conv2d", "(", "image_size", "=", "(", "1", ",", "1", ")", ")", "\n", "num_squeezed_channels", "=", "max", "(", "1", ",", "int", "(", "self", ".", "_block_args", ".", "input_filters", "*", "self", ".", "_block_args", ".", "se_ratio", ")", ")", "\n", "self", ".", "_se_reduce", "=", "Conv2d", "(", "in_channels", "=", "oup", ",", "out_channels", "=", "num_squeezed_channels", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "_se_expand", "=", "Conv2d", "(", "in_channels", "=", "num_squeezed_channels", ",", "out_channels", "=", "oup", ",", "kernel_size", "=", "1", ")", "\n", "\n", "# Pointwise convolution phase", "\n", "", "final_oup", "=", "self", ".", "_block_args", ".", "output_filters", "\n", "Conv2d", "=", "get_same_padding_conv2d", "(", "image_size", "=", "image_size", ")", "\n", "self", ".", "_project_conv", "=", "Conv2d", "(", "in_channels", "=", "oup", ",", "out_channels", "=", "final_oup", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "_bn2", "=", "nn", ".", "BatchNorm2d", "(", "num_features", "=", "final_oup", ",", "momentum", "=", "self", ".", "_bn_mom", ",", "eps", "=", "self", ".", "_bn_eps", ")", "\n", "self", ".", "_swish", "=", "MemoryEfficientSwish", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.efficientnet.MBConvBlock.forward": [[91, 133], ["efficientnet.MBConvBlock._depthwise_conv", "efficientnet.MBConvBlock._bn1", "efficientnet.MBConvBlock._swish", "efficientnet.MBConvBlock._project_conv", "efficientnet.MBConvBlock._bn2", "efficientnet.MBConvBlock._expand_conv", "efficientnet.MBConvBlock._bn0", "efficientnet.MBConvBlock._swish", "torch.nn.functional.adaptive_avg_pool2d", "efficientnet.MBConvBlock._se_reduce", "efficientnet.MBConvBlock._swish", "efficientnet.MBConvBlock._se_expand", "torch.sigmoid", "utils.drop_connect"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.drop_connect"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "drop_connect_rate", "=", "None", ")", ":", "\n", "        ", "\"\"\"MBConvBlock's forward function.\n\n        Args:\n            inputs (tensor): Input tensor.\n            drop_connect_rate (bool): Drop connect rate (float, between 0 and 1).\n\n        Returns:\n            Output of this block after processing.\n        \"\"\"", "\n", "\n", "# Expansion and Depthwise Convolution", "\n", "x", "=", "inputs", "\n", "if", "self", ".", "_block_args", ".", "expand_ratio", "!=", "1", ":", "\n", "            ", "x", "=", "self", ".", "_expand_conv", "(", "inputs", ")", "\n", "x", "=", "self", ".", "_bn0", "(", "x", ")", "\n", "x", "=", "self", ".", "_swish", "(", "x", ")", "\n", "\n", "", "x", "=", "self", ".", "_depthwise_conv", "(", "x", ")", "\n", "x", "=", "self", ".", "_bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "_swish", "(", "x", ")", "\n", "\n", "# Squeeze and Excitation", "\n", "if", "self", ".", "has_se", ":", "\n", "            ", "x_squeezed", "=", "F", ".", "adaptive_avg_pool2d", "(", "x", ",", "1", ")", "\n", "x_squeezed", "=", "self", ".", "_se_reduce", "(", "x_squeezed", ")", "\n", "x_squeezed", "=", "self", ".", "_swish", "(", "x_squeezed", ")", "\n", "x_squeezed", "=", "self", ".", "_se_expand", "(", "x_squeezed", ")", "\n", "x", "=", "torch", ".", "sigmoid", "(", "x_squeezed", ")", "*", "x", "\n", "\n", "# Pointwise Convolution", "\n", "", "x", "=", "self", ".", "_project_conv", "(", "x", ")", "\n", "x", "=", "self", ".", "_bn2", "(", "x", ")", "\n", "\n", "# Skip connection and drop connect", "\n", "input_filters", ",", "output_filters", "=", "self", ".", "_block_args", ".", "input_filters", ",", "self", ".", "_block_args", ".", "output_filters", "\n", "if", "self", ".", "id_skip", "and", "self", ".", "_block_args", ".", "stride", "==", "1", "and", "input_filters", "==", "output_filters", ":", "\n", "# The combination of skip connection and drop connect brings about stochastic depth.", "\n", "            ", "if", "drop_connect_rate", ":", "\n", "                ", "x", "=", "drop_connect", "(", "x", ",", "p", "=", "drop_connect_rate", ",", "training", "=", "self", ".", "training", ")", "\n", "", "x", "=", "x", "+", "inputs", "# skip connection", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.efficientnet.MBConvBlock.set_swish": [[134, 141], ["utils.MemoryEfficientSwish", "utils.Swish"], "methods", ["None"], ["", "def", "set_swish", "(", "self", ",", "memory_efficient", "=", "True", ")", ":", "\n", "        ", "\"\"\"Sets swish function as memory efficient (for training) or standard (for export).\n\n        Args:\n            memory_efficient (bool): Whether to use memory-efficient version of swish.\n        \"\"\"", "\n", "self", ".", "_swish", "=", "MemoryEfficientSwish", "(", ")", "if", "memory_efficient", "else", "Swish", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.efficientnet.EfficientNet.__init__": [[165, 219], ["torch.nn.Module.__init__", "isinstance", "utils.get_same_padding_conv2d", "utils.round_filters", "utils.get_same_padding_conv2d.", "torch.nn.BatchNorm2d", "utils.calculate_output_image_size", "torch.nn.ModuleList", "utils.round_filters", "utils.get_same_padding_conv2d", "utils.get_same_padding_conv2d.", "torch.nn.BatchNorm2d", "torch.nn.AdaptiveAvgPool2d", "torch.nn.Dropout", "torch.nn.Linear", "utils.MemoryEfficientSwish", "len", "block_args._replace._replace._replace", "efficientnet.EfficientNet._blocks.append", "utils.calculate_output_image_size", "range", "efficientnet.MBConvBlock", "block_args._replace._replace._replace", "efficientnet.EfficientNet._blocks.append", "utils.round_filters", "utils.round_filters", "utils.round_repeats", "efficientnet.MBConvBlock"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.get_same_padding_conv2d", "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.round_filters", "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.calculate_output_image_size", "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.round_filters", "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.get_same_padding_conv2d", "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.calculate_output_image_size", "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.round_filters", "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.round_filters", "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.round_repeats"], ["def", "__init__", "(", "self", ",", "blocks_args", "=", "None", ",", "global_params", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "assert", "isinstance", "(", "blocks_args", ",", "list", ")", ",", "'blocks_args should be a list'", "\n", "assert", "len", "(", "blocks_args", ")", ">", "0", ",", "'block args must be greater than 0'", "\n", "self", ".", "_global_params", "=", "global_params", "\n", "self", ".", "_blocks_args", "=", "blocks_args", "\n", "\n", "# Batch norm parameters", "\n", "bn_mom", "=", "1", "-", "self", ".", "_global_params", ".", "batch_norm_momentum", "\n", "bn_eps", "=", "self", ".", "_global_params", ".", "batch_norm_epsilon", "\n", "\n", "# Get stem static or dynamic convolution depending on image size", "\n", "image_size", "=", "global_params", ".", "image_size", "\n", "Conv2d", "=", "get_same_padding_conv2d", "(", "image_size", "=", "image_size", ")", "\n", "\n", "# Stem", "\n", "in_channels", "=", "3", "# rgb", "\n", "out_channels", "=", "round_filters", "(", "32", ",", "self", ".", "_global_params", ")", "# number of output channels", "\n", "self", ".", "_conv_stem", "=", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "bias", "=", "False", ")", "\n", "self", ".", "_bn0", "=", "nn", ".", "BatchNorm2d", "(", "num_features", "=", "out_channels", ",", "momentum", "=", "bn_mom", ",", "eps", "=", "bn_eps", ")", "\n", "image_size", "=", "calculate_output_image_size", "(", "image_size", ",", "2", ")", "\n", "\n", "# Build blocks", "\n", "self", ".", "_blocks", "=", "nn", ".", "ModuleList", "(", "[", "]", ")", "\n", "for", "block_args", "in", "self", ".", "_blocks_args", ":", "\n", "\n", "# Update block input and output filters based on depth multiplier.", "\n", "            ", "block_args", "=", "block_args", ".", "_replace", "(", "\n", "input_filters", "=", "round_filters", "(", "block_args", ".", "input_filters", ",", "self", ".", "_global_params", ")", ",", "\n", "output_filters", "=", "round_filters", "(", "block_args", ".", "output_filters", ",", "self", ".", "_global_params", ")", ",", "\n", "num_repeat", "=", "round_repeats", "(", "block_args", ".", "num_repeat", ",", "self", ".", "_global_params", ")", "\n", ")", "\n", "\n", "# The first block needs to take care of stride and filter size increase.", "\n", "self", ".", "_blocks", ".", "append", "(", "MBConvBlock", "(", "block_args", ",", "self", ".", "_global_params", ",", "image_size", "=", "image_size", ")", ")", "\n", "image_size", "=", "calculate_output_image_size", "(", "image_size", ",", "block_args", ".", "stride", ")", "\n", "if", "block_args", ".", "num_repeat", ">", "1", ":", "# modify block_args to keep same output size", "\n", "                ", "block_args", "=", "block_args", ".", "_replace", "(", "input_filters", "=", "block_args", ".", "output_filters", ",", "stride", "=", "1", ")", "\n", "", "for", "_", "in", "range", "(", "block_args", ".", "num_repeat", "-", "1", ")", ":", "\n", "                ", "self", ".", "_blocks", ".", "append", "(", "MBConvBlock", "(", "block_args", ",", "self", ".", "_global_params", ",", "image_size", "=", "image_size", ")", ")", "\n", "# image_size = calculate_output_image_size(image_size, block_args.stride)  # stride = 1", "\n", "\n", "# Head", "\n", "", "", "in_channels", "=", "block_args", ".", "output_filters", "# output of final block", "\n", "out_channels", "=", "round_filters", "(", "1280", ",", "self", ".", "_global_params", ")", "\n", "Conv2d", "=", "get_same_padding_conv2d", "(", "image_size", "=", "image_size", ")", "\n", "self", ".", "_conv_head", "=", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "_bn1", "=", "nn", ".", "BatchNorm2d", "(", "num_features", "=", "out_channels", ",", "momentum", "=", "bn_mom", ",", "eps", "=", "bn_eps", ")", "\n", "\n", "# Final linear layer", "\n", "self", ".", "_avg_pooling", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "_dropout", "=", "nn", ".", "Dropout", "(", "self", ".", "_global_params", ".", "dropout_rate", ")", "\n", "self", ".", "_fc", "=", "nn", ".", "Linear", "(", "out_channels", ",", "self", ".", "_global_params", ".", "num_classes", ")", "\n", "self", ".", "_swish", "=", "MemoryEfficientSwish", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.efficientnet.EfficientNet.set_swish": [[220, 230], ["utils.MemoryEfficientSwish", "utils.Swish", "block.set_swish"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.efficientnet.EfficientNet.set_swish"], ["", "def", "set_swish", "(", "self", ",", "memory_efficient", "=", "True", ")", ":", "\n", "        ", "\"\"\"Sets swish function as memory efficient (for training) or standard (for export).\n\n        Args:\n            memory_efficient (bool): Whether to use memory-efficient version of swish.\n\n        \"\"\"", "\n", "self", ".", "_swish", "=", "MemoryEfficientSwish", "(", ")", "if", "memory_efficient", "else", "Swish", "(", ")", "\n", "for", "block", "in", "self", ".", "_blocks", ":", "\n", "            ", "block", ".", "set_swish", "(", "memory_efficient", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.efficientnet.EfficientNet.extract_endpoints": [[231, 274], ["dict", "efficientnet.EfficientNet._swish", "enumerate", "efficientnet.EfficientNet._swish", "efficientnet.EfficientNet._bn0", "block", "efficientnet.EfficientNet._bn1", "efficientnet.EfficientNet._conv_stem", "prev_x.size", "block.size", "efficientnet.EfficientNet._conv_head", "float", "len", "len", "len"], "methods", ["None"], ["", "", "def", "extract_endpoints", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "\"\"\"Use convolution layer to extract features\n        from reduction levels i in [1, 2, 3, 4, 5].\n\n        Args:\n            inputs (tensor): Input tensor.\n\n        Returns:\n            Dictionary of last intermediate features\n            with reduction levels i in [1, 2, 3, 4, 5].\n            Example:\n                >>> import torch\n                >>> from efficientnet.model import EfficientNet\n                >>> inputs = torch.rand(1, 3, 224, 224)\n                >>> model = EfficientNet.from_pretrained('efficientnet-b0')\n                >>> endpoints = model.extract_endpoints(inputs)\n                >>> print(endpoints['reduction_1'].shape)  # torch.Size([1, 16, 112, 112])\n                >>> print(endpoints['reduction_2'].shape)  # torch.Size([1, 24, 56, 56])\n                >>> print(endpoints['reduction_3'].shape)  # torch.Size([1, 40, 28, 28])\n                >>> print(endpoints['reduction_4'].shape)  # torch.Size([1, 112, 14, 14])\n                >>> print(endpoints['reduction_5'].shape)  # torch.Size([1, 1280, 7, 7])\n        \"\"\"", "\n", "endpoints", "=", "dict", "(", ")", "\n", "\n", "# Stem", "\n", "x", "=", "self", ".", "_swish", "(", "self", ".", "_bn0", "(", "self", ".", "_conv_stem", "(", "inputs", ")", ")", ")", "\n", "prev_x", "=", "x", "\n", "\n", "# Blocks", "\n", "for", "idx", ",", "block", "in", "enumerate", "(", "self", ".", "_blocks", ")", ":", "\n", "            ", "drop_connect_rate", "=", "self", ".", "_global_params", ".", "drop_connect_rate", "\n", "if", "drop_connect_rate", ":", "\n", "                ", "drop_connect_rate", "*=", "float", "(", "idx", ")", "/", "len", "(", "self", ".", "_blocks", ")", "# scale drop connect_rate", "\n", "", "x", "=", "block", "(", "x", ",", "drop_connect_rate", "=", "drop_connect_rate", ")", "\n", "if", "prev_x", ".", "size", "(", "2", ")", ">", "x", ".", "size", "(", "2", ")", ":", "\n", "                ", "endpoints", "[", "'reduction_{}'", ".", "format", "(", "len", "(", "endpoints", ")", "+", "1", ")", "]", "=", "prev_x", "\n", "", "prev_x", "=", "x", "\n", "\n", "# Head", "\n", "", "x", "=", "self", ".", "_swish", "(", "self", ".", "_bn1", "(", "self", ".", "_conv_head", "(", "x", ")", ")", ")", "\n", "endpoints", "[", "'reduction_{}'", ".", "format", "(", "len", "(", "endpoints", ")", "+", "1", ")", "]", "=", "x", "\n", "\n", "return", "endpoints", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.efficientnet.EfficientNet.forward": [[275, 308], ["efficientnet.EfficientNet._swish", "enumerate", "efficientnet.EfficientNet._swish", "xs.append", "efficientnet.EfficientNet._bn0", "block", "efficientnet.EfficientNet._bn1", "efficientnet.EfficientNet._conv_stem", "xs.append", "efficientnet.EfficientNet._conv_head", "float", "len"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "\"\"\"use convolution layer to extract feature .\n\n        Args:\n            inputs (tensor): Input tensor.\n\n        Returns:\n            Output of the final convolution\n            layer in the efficientnet model.\n        \"\"\"", "\n", "\n", "xs", "=", "[", "]", "\n", "\n", "# Stem", "\n", "x", "=", "self", ".", "_swish", "(", "self", ".", "_bn0", "(", "self", ".", "_conv_stem", "(", "inputs", ")", ")", ")", "\n", "\n", "#print(x.size())", "\n", "# Blocks", "\n", "for", "idx", ",", "block", "in", "enumerate", "(", "self", ".", "_blocks", ")", ":", "\n", "            ", "drop_connect_rate", "=", "self", ".", "_global_params", ".", "drop_connect_rate", "\n", "if", "drop_connect_rate", ":", "\n", "                ", "drop_connect_rate", "*=", "float", "(", "idx", ")", "/", "len", "(", "self", ".", "_blocks", ")", "# scale drop connect_rate", "\n", "", "x", "=", "block", "(", "x", ",", "drop_connect_rate", "=", "drop_connect_rate", ")", "\n", "if", "idx", "in", "(", "0", ",", "2", ",", "4", ",", "10", ")", ":", "\n", "                ", "xs", ".", "append", "(", "x", ")", "\n", "#print(x.size())", "\n", "\n", "# Head", "\n", "", "", "x", "=", "self", ".", "_swish", "(", "self", ".", "_bn1", "(", "self", ".", "_conv_head", "(", "x", ")", ")", ")", "\n", "xs", ".", "append", "(", "x", ")", "\n", "#print(x.size())", "\n", "\n", "return", "xs", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.efficientnet.EfficientNet.from_name": [[310, 334], ["cls._check_model_name_is_valid", "utils.get_model_params", "cls", "cls._change_in_channels"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.efficientnet.EfficientNet._check_model_name_is_valid", "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.get_model_params", "home.repos.pwc.inspect_result.moothes_salod.encoder.efficientnet.EfficientNet._change_in_channels"], ["", "@", "classmethod", "\n", "def", "from_name", "(", "cls", ",", "model_name", ",", "in_channels", "=", "3", ",", "**", "override_params", ")", ":", "\n", "        ", "\"\"\"create an efficientnet model according to name.\n\n        Args:\n            model_name (str): Name for efficientnet.\n            in_channels (int): Input data's channel number.\n            override_params (other key word params):\n                Params to override model's global_params.\n                Optional key:\n                    'width_coefficient', 'depth_coefficient',\n                    'image_size', 'dropout_rate',\n                    'num_classes', 'batch_norm_momentum',\n                    'batch_norm_epsilon', 'drop_connect_rate',\n                    'depth_divisor', 'min_depth'\n\n        Returns:\n            An efficientnet model.\n        \"\"\"", "\n", "cls", ".", "_check_model_name_is_valid", "(", "model_name", ")", "\n", "blocks_args", ",", "global_params", "=", "get_model_params", "(", "model_name", ",", "override_params", ")", "\n", "model", "=", "cls", "(", "blocks_args", ",", "global_params", ")", "\n", "model", ".", "_change_in_channels", "(", "in_channels", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.efficientnet.EfficientNet.from_pretrained": [[335, 368], ["cls.from_name", "utils.load_pretrained_weights", "cls.from_name._change_in_channels"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.efficientnet.EfficientNet.from_name", "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.load_pretrained_weights", "home.repos.pwc.inspect_result.moothes_salod.encoder.efficientnet.EfficientNet._change_in_channels"], ["", "@", "classmethod", "\n", "def", "from_pretrained", "(", "cls", ",", "model_name", ",", "weights_path", "=", "None", ",", "advprop", "=", "False", ",", "\n", "in_channels", "=", "3", ",", "num_classes", "=", "1000", ",", "**", "override_params", ")", ":", "\n", "        ", "\"\"\"create an efficientnet model according to name.\n\n        Args:\n            model_name (str): Name for efficientnet.\n            weights_path (None or str):\n                str: path to pretrained weights file on the local disk.\n                None: use pretrained weights downloaded from the Internet.\n            advprop (bool):\n                Whether to load pretrained weights\n                trained with advprop (valid when weights_path is None).\n            in_channels (int): Input data's channel number.\n            num_classes (int):\n                Number of categories for classification.\n                It controls the output size for final linear layer.\n            override_params (other key word params):\n                Params to override model's global_params.\n                Optional key:\n                    'width_coefficient', 'depth_coefficient',\n                    'image_size', 'dropout_rate',\n                    'batch_norm_momentum',\n                    'batch_norm_epsilon', 'drop_connect_rate',\n                    'depth_divisor', 'min_depth'\n\n        Returns:\n            A pretrained efficientnet model.\n        \"\"\"", "\n", "model", "=", "cls", ".", "from_name", "(", "model_name", ",", "num_classes", "=", "num_classes", ",", "**", "override_params", ")", "\n", "load_pretrained_weights", "(", "model", ",", "model_name", ",", "weights_path", "=", "weights_path", ",", "load_fc", "=", "(", "num_classes", "==", "1000", ")", ",", "advprop", "=", "advprop", ")", "\n", "model", ".", "_change_in_channels", "(", "in_channels", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.efficientnet.EfficientNet.get_image_size": [[369, 382], ["cls._check_model_name_is_valid", "utils.efficientnet_params"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.efficientnet.EfficientNet._check_model_name_is_valid", "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.efficientnet_params"], ["", "@", "classmethod", "\n", "def", "get_image_size", "(", "cls", ",", "model_name", ")", ":", "\n", "        ", "\"\"\"Get the input image size for a given efficientnet model.\n\n        Args:\n            model_name (str): Name for efficientnet.\n\n        Returns:\n            Input image size (resolution).\n        \"\"\"", "\n", "cls", ".", "_check_model_name_is_valid", "(", "model_name", ")", "\n", "_", ",", "_", ",", "res", ",", "_", "=", "efficientnet_params", "(", "model_name", ")", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.efficientnet.EfficientNet._check_model_name_is_valid": [[383, 395], ["ValueError"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "_check_model_name_is_valid", "(", "cls", ",", "model_name", ")", ":", "\n", "        ", "\"\"\"Validates model name.\n\n        Args:\n            model_name (str): Name for efficientnet.\n\n        Returns:\n            bool: Is a valid name or not.\n        \"\"\"", "\n", "if", "model_name", "not", "in", "VALID_MODELS", ":", "\n", "            ", "raise", "ValueError", "(", "'model_name should be one of: '", "+", "', '", ".", "join", "(", "VALID_MODELS", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.efficientnet.EfficientNet._change_in_channels": [[396, 406], ["utils.get_same_padding_conv2d", "utils.round_filters", "utils.get_same_padding_conv2d."], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.get_same_padding_conv2d", "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.round_filters"], ["", "", "def", "_change_in_channels", "(", "self", ",", "in_channels", ")", ":", "\n", "        ", "\"\"\"Adjust model's first convolution layer to in_channels, if in_channels not equals 3.\n\n        Args:\n            in_channels (int): Input data's channel number.\n        \"\"\"", "\n", "if", "in_channels", "!=", "3", ":", "\n", "            ", "Conv2d", "=", "get_same_padding_conv2d", "(", "image_size", "=", "self", ".", "_global_params", ".", "image_size", ")", "\n", "out_channels", "=", "round_filters", "(", "32", ",", "self", ".", "_global_params", ")", "\n", "self", ".", "_conv_stem", "=", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "bias", "=", "False", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.encoder.res2net.Bottle2neck.__init__": [[22, 61], ["torch.Module.__init__", "int", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "range", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "math.floor", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "convs.append", "bns.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "baseWidth", "=", "26", ",", "scale", "=", "4", ",", "stype", "=", "'normal'", ")", ":", "\n", "        ", "\"\"\" Constructor\n        Args:\n            inplanes: input channel dimensionality\n            planes: output channel dimensionality\n            stride: conv stride. Replaces pooling layer.\n            downsample: None when stride = 1\n            baseWidth: basic width of conv3x3\n            scale: number of scale.\n            type: 'normal': normal set. 'stage': first block of a new stage.\n        \"\"\"", "\n", "super", "(", "Bottle2neck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "width", "=", "int", "(", "math", ".", "floor", "(", "planes", "*", "(", "baseWidth", "/", "64.0", ")", ")", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "width", "*", "scale", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "width", "*", "scale", ")", "\n", "\n", "if", "scale", "==", "1", ":", "\n", "          ", "self", ".", "nums", "=", "1", "\n", "", "else", ":", "\n", "          ", "self", ".", "nums", "=", "scale", "-", "1", "\n", "", "if", "stype", "==", "'stage'", ":", "\n", "            ", "self", ".", "pool", "=", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ")", "\n", "", "convs", "=", "[", "]", "\n", "bns", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "nums", ")", ":", "\n", "          ", "convs", ".", "append", "(", "nn", ".", "Conv2d", "(", "width", ",", "width", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ")", "\n", "bns", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "width", ")", ")", "\n", "", "self", ".", "convs", "=", "nn", ".", "ModuleList", "(", "convs", ")", "\n", "self", ".", "bns", "=", "nn", ".", "ModuleList", "(", "bns", ")", "\n", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "width", "*", "scale", ",", "planes", "*", "self", ".", "expansion", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stype", "=", "stype", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "width", "=", "width", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.res2net.Bottle2neck.forward": [[62, 96], ["res2net.Bottle2neck.conv1", "res2net.Bottle2neck.bn1", "res2net.Bottle2neck.relu", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "range", "res2net.Bottle2neck.conv3", "res2net.Bottle2neck.bn3", "res2net.Bottle2neck.relu", "res2net.Bottle2neck.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "res2net.Bottle2neck.downsample", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "res2net.Bottle2neck.pool"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "spx", "=", "torch", ".", "split", "(", "out", ",", "self", ".", "width", ",", "1", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "nums", ")", ":", "\n", "          ", "if", "i", "==", "0", "or", "self", ".", "stype", "==", "'stage'", ":", "\n", "            ", "sp", "=", "spx", "[", "i", "]", "\n", "", "else", ":", "\n", "            ", "sp", "=", "sp", "+", "spx", "[", "i", "]", "\n", "", "sp", "=", "self", ".", "convs", "[", "i", "]", "(", "sp", ")", "\n", "sp", "=", "self", ".", "relu", "(", "self", ".", "bns", "[", "i", "]", "(", "sp", ")", ")", "\n", "if", "i", "==", "0", ":", "\n", "            ", "out", "=", "sp", "\n", "", "else", ":", "\n", "            ", "out", "=", "torch", ".", "cat", "(", "(", "out", ",", "sp", ")", ",", "1", ")", "\n", "", "", "if", "self", ".", "scale", "!=", "1", "and", "self", ".", "stype", "==", "'normal'", ":", "\n", "          ", "out", "=", "torch", ".", "cat", "(", "(", "out", ",", "spx", "[", "self", ".", "nums", "]", ")", ",", "1", ")", "\n", "", "elif", "self", ".", "scale", "!=", "1", "and", "self", ".", "stype", "==", "'stage'", ":", "\n", "          ", "out", "=", "torch", ".", "cat", "(", "(", "out", ",", "self", ".", "pool", "(", "spx", "[", "self", ".", "nums", "]", ")", ")", ",", "1", ")", "\n", "\n", "", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.res2net.Res2Net.__init__": [[99, 122], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "res2net.Res2Net._make_layer", "res2net.Res2Net._make_layer", "res2net.Res2Net._make_layer", "res2net.Res2Net._make_layer", "res2net.Res2Net.modules", "isinstance", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "baseWidth", "=", "26", ",", "scale", "=", "4", ",", "num_classes", "=", "1000", ")", ":", "\n", "        ", "self", ".", "inplanes", "=", "64", "\n", "super", "(", "Res2Net", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "baseWidth", "=", "baseWidth", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "#self.avgpool = nn.AdaptiveAvgPool2d(1)", "\n", "#self.fc = nn.Linear(512 * block.expansion, num_classes)", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.res2net.Res2Net._make_layer": [[123, 140], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "block"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", "=", "downsample", ",", "\n", "stype", "=", "'stage'", ",", "baseWidth", "=", "self", ".", "baseWidth", ",", "scale", "=", "self", ".", "scale", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "baseWidth", "=", "self", ".", "baseWidth", ",", "scale", "=", "self", ".", "scale", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.res2net.Res2Net.forward": [[141, 167], ["res2net.Res2Net.conv1", "res2net.Res2Net.bn1", "res2net.Res2Net.relu", "xs.append", "res2net.Res2Net.maxpool", "res2net.Res2Net.layer1", "xs.append", "res2net.Res2Net.layer2", "xs.append", "res2net.Res2Net.layer3", "xs.append", "res2net.Res2Net.layer4", "xs.append"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "xs", "=", "[", "]", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "xs", ".", "append", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "xs", ".", "append", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "xs", ".", "append", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "xs", ".", "append", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "xs", ".", "append", "(", "x", ")", "\n", "\n", "#for x1 in xs:", "\n", "#    print(x1.size())", "\n", "#x = self.avgpool(x)", "\n", "#x = x.view(x.size(0), -1)", "\n", "#x = self.fc(x)", "\n", "\n", "#return x", "\n", "\n", "return", "xs", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.res2net.res2net50": [[170, 180], ["res2net.Res2Net", "Res2Net.load_state_dict", "torch.load_url"], "function", ["None"], ["", "", "def", "res2net50", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a Res2Net-50 model.\n    Res2Net-50 refers to the Res2Net-50_26w_4s.\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "Res2Net", "(", "Bottle2neck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "baseWidth", "=", "26", ",", "scale", "=", "4", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'res2net50_26w_4s'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.res2net.res2net50_26w_4s": [[181, 190], ["res2net.Res2Net", "Res2Net.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "res2net50_26w_4s", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a Res2Net-50_26w_4s model.\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "Res2Net", "(", "Bottle2neck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "baseWidth", "=", "26", ",", "scale", "=", "4", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'res2net50_26w_4s'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.res2net.res2net101_26w_4s": [[191, 200], ["res2net.Res2Net", "Res2Net.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "res2net101_26w_4s", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a Res2Net-50_26w_4s model.\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "Res2Net", "(", "Bottle2neck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "baseWidth", "=", "26", ",", "scale", "=", "4", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'res2net101_26w_4s'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.res2net.res2net50_26w_6s": [[201, 210], ["res2net.Res2Net", "Res2Net.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "res2net50_26w_6s", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a Res2Net-50_26w_4s model.\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "Res2Net", "(", "Bottle2neck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "baseWidth", "=", "26", ",", "scale", "=", "6", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'res2net50_26w_6s'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.res2net.res2net50_26w_8s": [[211, 220], ["res2net.Res2Net", "Res2Net.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "res2net50_26w_8s", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a Res2Net-50_26w_4s model.\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "Res2Net", "(", "Bottle2neck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "baseWidth", "=", "26", ",", "scale", "=", "8", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'res2net50_26w_8s'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.res2net.res2net50_48w_2s": [[221, 230], ["res2net.Res2Net", "Res2Net.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "res2net50_48w_2s", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a Res2Net-50_48w_2s model.\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "Res2Net", "(", "Bottle2neck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "baseWidth", "=", "48", ",", "scale", "=", "2", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'res2net50_48w_2s'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.res2net.res2net50_14w_8s": [[231, 249], ["res2net.Res2Net", "print", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load.items", "Res2Net.load_state_dict"], "function", ["None"], ["", "def", "res2net50_14w_8s", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a Res2Net-50_14w_8s model.\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "Res2Net", "(", "Bottle2neck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "baseWidth", "=", "14", ",", "scale", "=", "8", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model_path", "=", "'../PretrainModel/res2net50_14w_8s.pth'", "\n", "print", "(", "\"Load pretrained model from {}.\"", ".", "format", "(", "model_path", ")", ")", "\n", "saved_dict", "=", "torch", ".", "load", "(", "model_path", ")", "\n", "new_dict", "=", "{", "}", "\n", "for", "k", ",", "v", "in", "saved_dict", ".", "items", "(", ")", ":", "\n", "            ", "if", "'fc.'", "not", "in", "k", ":", "\n", "                ", "new_dict", "[", "k", "]", "=", "v", "\n", "#else: ", "\n", "#    print(k)", "\n", "", "", "model", ".", "load_state_dict", "(", "new_dict", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.hrnet.BasicBlock.__init__": [[36, 45], ["torch.Module.__init__", "hrnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "hrnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.conv3x3", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ",", "momentum", "=", "BN_MOMENTUM", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ",", "momentum", "=", "BN_MOMENTUM", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.hrnet.BasicBlock.forward": [[46, 63], ["hrnet.BasicBlock.conv1", "hrnet.BasicBlock.bn1", "hrnet.BasicBlock.relu", "hrnet.BasicBlock.conv2", "hrnet.BasicBlock.bn2", "hrnet.BasicBlock.relu", "hrnet.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.hrnet.Bottleneck.__init__": [[68, 82], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ",", "momentum", "=", "BN_MOMENTUM", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ",", "momentum", "=", "BN_MOMENTUM", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ",", "kernel_size", "=", "1", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "self", ".", "expansion", ",", "\n", "momentum", "=", "BN_MOMENTUM", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.hrnet.Bottleneck.forward": [[83, 104], ["hrnet.Bottleneck.conv1", "hrnet.Bottleneck.bn1", "hrnet.Bottleneck.relu", "hrnet.Bottleneck.conv2", "hrnet.Bottleneck.bn2", "hrnet.Bottleneck.relu", "hrnet.Bottleneck.conv3", "hrnet.Bottleneck.bn3", "hrnet.Bottleneck.relu", "hrnet.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.hrnet.HighResolutionModule.__init__": [[107, 123], ["torch.Module.__init__", "hrnet.HighResolutionModule._check_branches", "hrnet.HighResolutionModule._make_branches", "hrnet.HighResolutionModule._make_fuse_layers", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.encoder.hrnet.HighResolutionModule._check_branches", "home.repos.pwc.inspect_result.moothes_salod.encoder.hrnet.HighResolutionModule._make_branches", "home.repos.pwc.inspect_result.moothes_salod.encoder.hrnet.HighResolutionModule._make_fuse_layers"], ["    ", "def", "__init__", "(", "self", ",", "num_branches", ",", "blocks", ",", "num_blocks", ",", "num_inchannels", ",", "\n", "num_channels", ",", "fuse_method", ",", "multi_scale_output", "=", "True", ")", ":", "\n", "        ", "super", "(", "HighResolutionModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_check_branches", "(", "\n", "num_branches", ",", "blocks", ",", "num_blocks", ",", "num_inchannels", ",", "num_channels", ")", "\n", "\n", "self", ".", "num_inchannels", "=", "num_inchannels", "\n", "self", ".", "fuse_method", "=", "fuse_method", "\n", "self", ".", "num_branches", "=", "num_branches", "\n", "\n", "self", ".", "multi_scale_output", "=", "multi_scale_output", "\n", "\n", "self", ".", "branches", "=", "self", ".", "_make_branches", "(", "\n", "num_branches", ",", "blocks", ",", "num_blocks", ",", "num_channels", ")", "\n", "self", ".", "fuse_layers", "=", "self", ".", "_make_fuse_layers", "(", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.hrnet.HighResolutionModule._check_branches": [[124, 143], ["len", "logger.error", "ValueError", "len", "logger.error", "ValueError", "len", "logger.error", "ValueError", "len", "len", "len"], "methods", ["None"], ["", "def", "_check_branches", "(", "self", ",", "num_branches", ",", "blocks", ",", "num_blocks", ",", "\n", "num_inchannels", ",", "num_channels", ")", ":", "\n", "        ", "if", "num_branches", "!=", "len", "(", "num_blocks", ")", ":", "\n", "            ", "error_msg", "=", "'NUM_BRANCHES({}) <> NUM_BLOCKS({})'", ".", "format", "(", "\n", "num_branches", ",", "len", "(", "num_blocks", ")", ")", "\n", "logger", ".", "error", "(", "error_msg", ")", "\n", "raise", "ValueError", "(", "error_msg", ")", "\n", "\n", "", "if", "num_branches", "!=", "len", "(", "num_channels", ")", ":", "\n", "            ", "error_msg", "=", "'NUM_BRANCHES({}) <> NUM_CHANNELS({})'", ".", "format", "(", "\n", "num_branches", ",", "len", "(", "num_channels", ")", ")", "\n", "logger", ".", "error", "(", "error_msg", ")", "\n", "raise", "ValueError", "(", "error_msg", ")", "\n", "\n", "", "if", "num_branches", "!=", "len", "(", "num_inchannels", ")", ":", "\n", "            ", "error_msg", "=", "'NUM_BRANCHES({}) <> NUM_INCHANNELS({})'", ".", "format", "(", "\n", "num_branches", ",", "len", "(", "num_inchannels", ")", ")", "\n", "logger", ".", "error", "(", "error_msg", ")", "\n", "raise", "ValueError", "(", "error_msg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.hrnet.HighResolutionModule._make_one_branch": [[144, 167], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "block"], "methods", ["None"], ["", "", "def", "_make_one_branch", "(", "self", ",", "branch_index", ",", "block", ",", "num_blocks", ",", "num_channels", ",", "\n", "stride", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "num_inchannels", "[", "branch_index", "]", "!=", "num_channels", "[", "branch_index", "]", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "num_inchannels", "[", "branch_index", "]", ",", "\n", "num_channels", "[", "branch_index", "]", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "num_channels", "[", "branch_index", "]", "*", "block", ".", "expansion", ",", "\n", "momentum", "=", "BN_MOMENTUM", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "num_inchannels", "[", "branch_index", "]", ",", "\n", "num_channels", "[", "branch_index", "]", ",", "stride", ",", "downsample", ")", ")", "\n", "self", ".", "num_inchannels", "[", "branch_index", "]", "=", "num_channels", "[", "branch_index", "]", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "num_blocks", "[", "branch_index", "]", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "num_inchannels", "[", "branch_index", "]", ",", "\n", "num_channels", "[", "branch_index", "]", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.hrnet.HighResolutionModule._make_branches": [[168, 176], ["range", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "branches.append", "hrnet.HighResolutionModule._make_one_branch"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.hrnet.HighResolutionModule._make_one_branch"], ["", "def", "_make_branches", "(", "self", ",", "num_branches", ",", "block", ",", "num_blocks", ",", "num_channels", ")", ":", "\n", "        ", "branches", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "num_branches", ")", ":", "\n", "            ", "branches", ".", "append", "(", "\n", "self", ".", "_make_one_branch", "(", "i", ",", "block", ",", "num_blocks", ",", "num_channels", ")", ")", "\n", "\n", "", "return", "nn", ".", "ModuleList", "(", "branches", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.hrnet.HighResolutionModule._make_fuse_layers": [[177, 224], ["range", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "fuse_layers.append", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "fuse_layer.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "fuse_layer.append", "range", "fuse_layer.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "conv3x3s.append", "conv3x3s.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["None"], ["", "def", "_make_fuse_layers", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "num_branches", "==", "1", ":", "\n", "            ", "return", "None", "\n", "\n", "", "num_branches", "=", "self", ".", "num_branches", "\n", "num_inchannels", "=", "self", ".", "num_inchannels", "\n", "fuse_layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_branches", "if", "self", ".", "multi_scale_output", "else", "1", ")", ":", "\n", "            ", "fuse_layer", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "num_branches", ")", ":", "\n", "                ", "if", "j", ">", "i", ":", "\n", "                    ", "fuse_layer", ".", "append", "(", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "num_inchannels", "[", "j", "]", ",", "\n", "num_inchannels", "[", "i", "]", ",", "\n", "1", ",", "\n", "1", ",", "\n", "0", ",", "\n", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "num_inchannels", "[", "i", "]", ",", "\n", "momentum", "=", "BN_MOMENTUM", ")", ",", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", "**", "(", "j", "-", "i", ")", ",", "mode", "=", "'nearest'", ")", ")", ")", "\n", "", "elif", "j", "==", "i", ":", "\n", "                    ", "fuse_layer", ".", "append", "(", "None", ")", "\n", "", "else", ":", "\n", "                    ", "conv3x3s", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "i", "-", "j", ")", ":", "\n", "                        ", "if", "k", "==", "i", "-", "j", "-", "1", ":", "\n", "                            ", "num_outchannels_conv3x3", "=", "num_inchannels", "[", "i", "]", "\n", "conv3x3s", ".", "append", "(", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "num_inchannels", "[", "j", "]", ",", "\n", "num_outchannels_conv3x3", ",", "\n", "3", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "num_outchannels_conv3x3", ",", "\n", "momentum", "=", "BN_MOMENTUM", ")", ")", ")", "\n", "", "else", ":", "\n", "                            ", "num_outchannels_conv3x3", "=", "num_inchannels", "[", "j", "]", "\n", "conv3x3s", ".", "append", "(", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "num_inchannels", "[", "j", "]", ",", "\n", "num_outchannels_conv3x3", ",", "\n", "3", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "num_outchannels_conv3x3", ",", "\n", "momentum", "=", "BN_MOMENTUM", ")", ",", "\n", "nn", ".", "ReLU", "(", "False", ")", ")", ")", "\n", "", "", "fuse_layer", ".", "append", "(", "nn", ".", "Sequential", "(", "*", "conv3x3s", ")", ")", "\n", "", "", "fuse_layers", ".", "append", "(", "nn", ".", "ModuleList", "(", "fuse_layer", ")", ")", "\n", "\n", "", "return", "nn", ".", "ModuleList", "(", "fuse_layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.hrnet.HighResolutionModule.get_num_inchannels": [[225, 227], ["None"], "methods", ["None"], ["", "def", "get_num_inchannels", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "num_inchannels", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.hrnet.HighResolutionModule.forward": [[228, 246], ["range", "range", "len", "range", "x_fuse.append", "hrnet.HighResolutionModule.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "num_branches", "==", "1", ":", "\n", "            ", "return", "[", "self", ".", "branches", "[", "0", "]", "(", "x", "[", "0", "]", ")", "]", "\n", "\n", "", "for", "i", "in", "range", "(", "self", ".", "num_branches", ")", ":", "\n", "            ", "x", "[", "i", "]", "=", "self", ".", "branches", "[", "i", "]", "(", "x", "[", "i", "]", ")", "\n", "\n", "", "x_fuse", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "fuse_layers", ")", ")", ":", "\n", "            ", "y", "=", "x", "[", "0", "]", "if", "i", "==", "0", "else", "self", ".", "fuse_layers", "[", "i", "]", "[", "0", "]", "(", "x", "[", "0", "]", ")", "\n", "for", "j", "in", "range", "(", "1", ",", "self", ".", "num_branches", ")", ":", "\n", "                ", "if", "i", "==", "j", ":", "\n", "                    ", "y", "=", "y", "+", "x", "[", "j", "]", "\n", "", "else", ":", "\n", "                    ", "y", "=", "y", "+", "self", ".", "fuse_layers", "[", "i", "]", "[", "j", "]", "(", "x", "[", "j", "]", ")", "\n", "", "", "x_fuse", ".", "append", "(", "self", ".", "relu", "(", "y", ")", ")", "\n", "\n", "", "return", "x_fuse", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.hrnet.HighResolutionNet.__init__": [[256, 309], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "hrnet.HighResolutionNet._make_layer", "hrnet.HighResolutionNet._make_transition_layer", "hrnet.HighResolutionNet._make_stage", "hrnet.HighResolutionNet._make_transition_layer", "hrnet.HighResolutionNet._make_stage", "hrnet.HighResolutionNet._make_transition_layer", "hrnet.HighResolutionNet._make_stage", "hrnet.HighResolutionNet._make_head", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "range", "range", "range", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.moothes_salod.encoder.hrnet.HighResolutionNet._make_transition_layer", "home.repos.pwc.inspect_result.moothes_salod.encoder.mobile.MobileNet2._make_stage", "home.repos.pwc.inspect_result.moothes_salod.encoder.hrnet.HighResolutionNet._make_transition_layer", "home.repos.pwc.inspect_result.moothes_salod.encoder.mobile.MobileNet2._make_stage", "home.repos.pwc.inspect_result.moothes_salod.encoder.hrnet.HighResolutionNet._make_transition_layer", "home.repos.pwc.inspect_result.moothes_salod.encoder.mobile.MobileNet2._make_stage", "home.repos.pwc.inspect_result.moothes_salod.encoder.hrnet.HighResolutionNet._make_head"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "HighResolutionNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ",", "momentum", "=", "BN_MOMENTUM", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ",", "momentum", "=", "BN_MOMENTUM", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "stage1_cfg", "=", "cfg", "[", "'MODEL'", "]", "[", "'EXTRA'", "]", "[", "'STAGE1'", "]", "\n", "num_channels", "=", "self", ".", "stage1_cfg", "[", "'NUM_CHANNELS'", "]", "[", "0", "]", "\n", "block", "=", "blocks_dict", "[", "self", ".", "stage1_cfg", "[", "'BLOCK'", "]", "]", "\n", "num_blocks", "=", "self", ".", "stage1_cfg", "[", "'NUM_BLOCKS'", "]", "[", "0", "]", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "num_channels", ",", "num_blocks", ")", "\n", "stage1_out_channel", "=", "block", ".", "expansion", "*", "num_channels", "\n", "\n", "self", ".", "stage2_cfg", "=", "cfg", "[", "'MODEL'", "]", "[", "'EXTRA'", "]", "[", "'STAGE2'", "]", "\n", "num_channels", "=", "self", ".", "stage2_cfg", "[", "'NUM_CHANNELS'", "]", "\n", "block", "=", "blocks_dict", "[", "self", ".", "stage2_cfg", "[", "'BLOCK'", "]", "]", "\n", "num_channels", "=", "[", "\n", "num_channels", "[", "i", "]", "*", "block", ".", "expansion", "for", "i", "in", "range", "(", "len", "(", "num_channels", ")", ")", "]", "\n", "self", ".", "transition1", "=", "self", ".", "_make_transition_layer", "(", "\n", "[", "stage1_out_channel", "]", ",", "num_channels", ")", "\n", "self", ".", "stage2", ",", "pre_stage_channels", "=", "self", ".", "_make_stage", "(", "\n", "self", ".", "stage2_cfg", ",", "num_channels", ")", "\n", "\n", "self", ".", "stage3_cfg", "=", "cfg", "[", "'MODEL'", "]", "[", "'EXTRA'", "]", "[", "'STAGE3'", "]", "\n", "num_channels", "=", "self", ".", "stage3_cfg", "[", "'NUM_CHANNELS'", "]", "\n", "block", "=", "blocks_dict", "[", "self", ".", "stage3_cfg", "[", "'BLOCK'", "]", "]", "\n", "num_channels", "=", "[", "\n", "num_channels", "[", "i", "]", "*", "block", ".", "expansion", "for", "i", "in", "range", "(", "len", "(", "num_channels", ")", ")", "]", "\n", "self", ".", "transition2", "=", "self", ".", "_make_transition_layer", "(", "\n", "pre_stage_channels", ",", "num_channels", ")", "\n", "self", ".", "stage3", ",", "pre_stage_channels", "=", "self", ".", "_make_stage", "(", "\n", "self", ".", "stage3_cfg", ",", "num_channels", ")", "\n", "\n", "self", ".", "stage4_cfg", "=", "cfg", "[", "'MODEL'", "]", "[", "'EXTRA'", "]", "[", "'STAGE4'", "]", "\n", "num_channels", "=", "self", ".", "stage4_cfg", "[", "'NUM_CHANNELS'", "]", "\n", "block", "=", "blocks_dict", "[", "self", ".", "stage4_cfg", "[", "'BLOCK'", "]", "]", "\n", "num_channels", "=", "[", "\n", "num_channels", "[", "i", "]", "*", "block", ".", "expansion", "for", "i", "in", "range", "(", "len", "(", "num_channels", ")", ")", "]", "\n", "self", ".", "transition3", "=", "self", ".", "_make_transition_layer", "(", "\n", "pre_stage_channels", ",", "num_channels", ")", "\n", "self", ".", "stage4", ",", "pre_stage_channels", "=", "self", ".", "_make_stage", "(", "\n", "self", ".", "stage4_cfg", ",", "num_channels", ",", "multi_scale_output", "=", "True", ")", "\n", "\n", "# Classification Head", "\n", "self", ".", "incre_modules", ",", "self", ".", "downsamp_modules", ",", "self", ".", "final_layer", "=", "self", ".", "_make_head", "(", "pre_stage_channels", ")", "\n", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "2048", ",", "1000", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.hrnet.HighResolutionNet._make_head": [[310, 358], ["enumerate", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "hrnet.HighResolutionNet._make_layer", "torch.ModuleList.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ModuleList.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "len", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.ResNet._make_layer"], ["", "def", "_make_head", "(", "self", ",", "pre_stage_channels", ")", ":", "\n", "        ", "head_block", "=", "Bottleneck", "\n", "head_channels", "=", "[", "32", ",", "64", ",", "128", ",", "256", "]", "\n", "\n", "# Increasing the #channels on each resolution ", "\n", "# from C, 2C, 4C, 8C to 128, 256, 512, 1024", "\n", "incre_modules", "=", "[", "]", "\n", "for", "i", ",", "channels", "in", "enumerate", "(", "pre_stage_channels", ")", ":", "\n", "            ", "incre_module", "=", "self", ".", "_make_layer", "(", "head_block", ",", "\n", "channels", ",", "\n", "head_channels", "[", "i", "]", ",", "\n", "1", ",", "\n", "stride", "=", "1", ")", "\n", "incre_modules", ".", "append", "(", "incre_module", ")", "\n", "", "incre_modules", "=", "nn", ".", "ModuleList", "(", "incre_modules", ")", "\n", "\n", "# downsampling modules", "\n", "downsamp_modules", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "pre_stage_channels", ")", "-", "1", ")", ":", "\n", "            ", "in_channels", "=", "head_channels", "[", "i", "]", "*", "head_block", ".", "expansion", "\n", "out_channels", "=", "head_channels", "[", "i", "+", "1", "]", "*", "head_block", ".", "expansion", "\n", "\n", "downsamp_module", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "in_channels", ",", "\n", "out_channels", "=", "out_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ",", "momentum", "=", "BN_MOMENTUM", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", ")", "\n", "\n", "downsamp_modules", ".", "append", "(", "downsamp_module", ")", "\n", "", "downsamp_modules", "=", "nn", ".", "ModuleList", "(", "downsamp_modules", ")", "\n", "\n", "final_layer", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "\n", "in_channels", "=", "head_channels", "[", "3", "]", "*", "head_block", ".", "expansion", ",", "\n", "out_channels", "=", "2048", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", "\n", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2048", ",", "momentum", "=", "BN_MOMENTUM", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", ")", "\n", "\n", "return", "incre_modules", ",", "downsamp_modules", ",", "final_layer", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.hrnet.HighResolutionNet._make_transition_layer": [[359, 394], ["len", "len", "range", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "transition_layers.append", "transition_layers.append", "transition_layers.append", "conv3x3s.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["None"], ["", "def", "_make_transition_layer", "(", "\n", "self", ",", "num_channels_pre_layer", ",", "num_channels_cur_layer", ")", ":", "\n", "        ", "num_branches_cur", "=", "len", "(", "num_channels_cur_layer", ")", "\n", "num_branches_pre", "=", "len", "(", "num_channels_pre_layer", ")", "\n", "\n", "transition_layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_branches_cur", ")", ":", "\n", "            ", "if", "i", "<", "num_branches_pre", ":", "\n", "                ", "if", "num_channels_cur_layer", "[", "i", "]", "!=", "num_channels_pre_layer", "[", "i", "]", ":", "\n", "                    ", "transition_layers", ".", "append", "(", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "num_channels_pre_layer", "[", "i", "]", ",", "\n", "num_channels_cur_layer", "[", "i", "]", ",", "\n", "3", ",", "\n", "1", ",", "\n", "1", ",", "\n", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "\n", "num_channels_cur_layer", "[", "i", "]", ",", "momentum", "=", "BN_MOMENTUM", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ")", "\n", "", "else", ":", "\n", "                    ", "transition_layers", ".", "append", "(", "None", ")", "\n", "", "", "else", ":", "\n", "                ", "conv3x3s", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "i", "+", "1", "-", "num_branches_pre", ")", ":", "\n", "                    ", "inchannels", "=", "num_channels_pre_layer", "[", "-", "1", "]", "\n", "outchannels", "=", "num_channels_cur_layer", "[", "i", "]", "if", "j", "==", "i", "-", "num_branches_pre", "else", "inchannels", "\n", "conv3x3s", ".", "append", "(", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "\n", "inchannels", ",", "outchannels", ",", "3", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "outchannels", ",", "momentum", "=", "BN_MOMENTUM", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ")", "\n", "", "transition_layers", ".", "append", "(", "nn", ".", "Sequential", "(", "*", "conv3x3s", ")", ")", "\n", "\n", "", "", "return", "nn", ".", "ModuleList", "(", "transition_layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.hrnet.HighResolutionNet._make_layer": [[395, 411], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "inplanes", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ",", "momentum", "=", "BN_MOMENTUM", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ")", ")", "\n", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "inplanes", ",", "planes", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.hrnet.HighResolutionNet._make_stage": [[412, 441], ["range", "modules.append", "modules[].get_num_inchannels", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "hrnet.HighResolutionModule"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.hrnet.HighResolutionModule.get_num_inchannels"], ["", "def", "_make_stage", "(", "self", ",", "layer_config", ",", "num_inchannels", ",", "\n", "multi_scale_output", "=", "True", ")", ":", "\n", "        ", "num_modules", "=", "layer_config", "[", "'NUM_MODULES'", "]", "\n", "num_branches", "=", "layer_config", "[", "'NUM_BRANCHES'", "]", "\n", "num_blocks", "=", "layer_config", "[", "'NUM_BLOCKS'", "]", "\n", "num_channels", "=", "layer_config", "[", "'NUM_CHANNELS'", "]", "\n", "block", "=", "blocks_dict", "[", "layer_config", "[", "'BLOCK'", "]", "]", "\n", "fuse_method", "=", "layer_config", "[", "'FUSE_METHOD'", "]", "\n", "\n", "modules", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_modules", ")", ":", "\n", "# multi_scale_output is only used last module", "\n", "            ", "if", "not", "multi_scale_output", "and", "i", "==", "num_modules", "-", "1", ":", "\n", "                ", "reset_multi_scale_output", "=", "False", "\n", "", "else", ":", "\n", "                ", "reset_multi_scale_output", "=", "True", "\n", "\n", "", "modules", ".", "append", "(", "\n", "HighResolutionModule", "(", "num_branches", ",", "\n", "block", ",", "\n", "num_blocks", ",", "\n", "num_inchannels", ",", "\n", "num_channels", ",", "\n", "fuse_method", ",", "\n", "reset_multi_scale_output", ")", "\n", ")", "\n", "num_inchannels", "=", "modules", "[", "-", "1", "]", ".", "get_num_inchannels", "(", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "modules", ")", ",", "num_inchannels", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.hrnet.HighResolutionNet.forward": [[442, 496], ["hrnet.HighResolutionNet.conv1", "hrnet.HighResolutionNet.bn1", "hrnet.HighResolutionNet.relu", "hrnet.HighResolutionNet.conv2", "hrnet.HighResolutionNet.bn2", "hrnet.HighResolutionNet.relu", "hrnet.HighResolutionNet.layer1", "range", "hrnet.HighResolutionNet.stage2", "range", "hrnet.HighResolutionNet.stage3", "range", "hrnet.HighResolutionNet.stage4", "print", "x_list.append", "x_list.append", "x_list.append", "x_list.append", "x_list.append", "x_list.append", "y1.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "x", "=", "self", ".", "bn2", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "\n", "x_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "stage2_cfg", "[", "'NUM_BRANCHES'", "]", ")", ":", "\n", "            ", "if", "self", ".", "transition1", "[", "i", "]", "is", "not", "None", ":", "\n", "                ", "x_list", ".", "append", "(", "self", ".", "transition1", "[", "i", "]", "(", "x", ")", ")", "\n", "", "else", ":", "\n", "                ", "x_list", ".", "append", "(", "x", ")", "\n", "", "", "y_list", "=", "self", ".", "stage2", "(", "x_list", ")", "\n", "\n", "x_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "stage3_cfg", "[", "'NUM_BRANCHES'", "]", ")", ":", "\n", "            ", "if", "self", ".", "transition2", "[", "i", "]", "is", "not", "None", ":", "\n", "                ", "x_list", ".", "append", "(", "self", ".", "transition2", "[", "i", "]", "(", "y_list", "[", "-", "1", "]", ")", ")", "\n", "", "else", ":", "\n", "                ", "x_list", ".", "append", "(", "y_list", "[", "i", "]", ")", "\n", "", "", "y_list", "=", "self", ".", "stage3", "(", "x_list", ")", "\n", "\n", "x_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "stage4_cfg", "[", "'NUM_BRANCHES'", "]", ")", ":", "\n", "            ", "if", "self", ".", "transition3", "[", "i", "]", "is", "not", "None", ":", "\n", "                ", "x_list", ".", "append", "(", "self", ".", "transition3", "[", "i", "]", "(", "y_list", "[", "-", "1", "]", ")", ")", "\n", "", "else", ":", "\n", "                ", "x_list", ".", "append", "(", "y_list", "[", "i", "]", ")", "\n", "", "", "y_list", "=", "self", ".", "stage4", "(", "x_list", ")", "\n", "\n", "for", "y1", "in", "y_list", ":", "\n", "            ", "print", "(", "y1", ".", "size", "(", ")", ")", "\n", "\n", "", "'''\n        # Classification Head\n        y = self.incre_modules[0](y_list[0])\n        for i in range(len(self.downsamp_modules)):\n            y = self.incre_modules[i+1](y_list[i+1]) + \\\n                        self.downsamp_modules[i](y)\n\n        y = self.final_layer(y)\n\n        if torch._C._get_tracing_state():\n            y = y.flatten(start_dim=2).mean(dim=2)\n        else:\n            y = F.avg_pool2d(y, kernel_size=y.size()\n                                 [2:]).view(y.size(0), -1)\n\n        y = self.classifier(y)\n        '''", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.hrnet.HighResolutionNet.init_weights": [[497, 517], ["logger.info", "hrnet.HighResolutionNet.modules", "os.path.isfile", "isinstance", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "logger.info", "hrnet.HighResolutionNet.state_dict", "torch.load.items", "torch.load.items", "torch.load.items", "torch.load.items", "hrnet.HighResolutionNet.update", "hrnet.HighResolutionNet.load_state_dict", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "logger.info", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.load.items", "torch.load.items", "torch.load.items", "torch.load.items", "hrnet.HighResolutionNet.keys"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_wfm.update"], ["", "def", "init_weights", "(", "self", ",", "pretrained", "=", "''", ",", ")", ":", "\n", "        ", "logger", ".", "info", "(", "'=> init weights from normal distribution'", ")", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "\n", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "if", "os", ".", "path", ".", "isfile", "(", "pretrained", ")", ":", "\n", "            ", "pretrained_dict", "=", "torch", ".", "load", "(", "pretrained", ")", "\n", "logger", ".", "info", "(", "'=> loading pretrained model {}'", ".", "format", "(", "pretrained", ")", ")", "\n", "model_dict", "=", "self", ".", "state_dict", "(", ")", "\n", "pretrained_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "pretrained_dict", ".", "items", "(", ")", "\n", "if", "k", "in", "model_dict", ".", "keys", "(", ")", "}", "\n", "for", "k", ",", "_", "in", "pretrained_dict", ".", "items", "(", ")", ":", "\n", "                ", "logger", ".", "info", "(", "\n", "'=> loading {} pretrained model {}'", ".", "format", "(", "k", ",", "pretrained", ")", ")", "\n", "", "model_dict", ".", "update", "(", "pretrained_dict", ")", "\n", "self", ".", "load_state_dict", "(", "model_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.hrnet.conv3x3": [[27, 31], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.hrnet.get_cls_net": [[519, 523], ["hrnet.HighResolutionNet", "hrnet.HighResolutionNet.init_weights"], "function", ["home.repos.pwc.inspect_result.moothes_salod.encoder.hrnet.HighResolutionNet.init_weights"], ["", "", "", "def", "get_cls_net", "(", "config", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "HighResolutionNet", "(", "config", ",", "**", "kwargs", ")", "\n", "model", ".", "init_weights", "(", ")", "\n", "return", "model", "", "", ""]], "home.repos.pwc.inspect_result.moothes_salod.encoder.mobile.LinearBottleneck.__init__": [[30, 44], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "activation"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inplanes", ",", "outplanes", ",", "stride", "=", "1", ",", "t", "=", "6", ",", "activation", "=", "nn", ".", "ReLU6", ")", ":", "\n", "        ", "super", "(", "LinearBottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "inplanes", "*", "t", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "inplanes", "*", "t", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "inplanes", "*", "t", ",", "inplanes", "*", "t", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "\n", "groups", "=", "inplanes", "*", "t", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "inplanes", "*", "t", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "inplanes", "*", "t", ",", "outplanes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "outplanes", ")", "\n", "self", ".", "activation", "=", "activation", "(", "inplace", "=", "True", ")", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "t", "=", "t", "\n", "self", ".", "inplanes", "=", "inplanes", "\n", "self", ".", "outplanes", "=", "outplanes", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.mobile.LinearBottleneck.forward": [[45, 63], ["mobile.LinearBottleneck.conv1", "mobile.LinearBottleneck.bn1", "mobile.LinearBottleneck.activation", "mobile.LinearBottleneck.conv2", "mobile.LinearBottleneck.bn2", "mobile.LinearBottleneck.activation", "mobile.LinearBottleneck.conv3", "mobile.LinearBottleneck.bn3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "activation", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "activation", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "stride", "==", "1", "and", "self", ".", "inplanes", "==", "self", ".", "outplanes", ":", "\n", "            ", "out", "+=", "residual", "\n", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.mobile.MobileNet2.__init__": [[69, 109], ["torch.Module.__init__", "activation", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "mobile.MobileNet2._make_bottlenecks", "mobile.MobileNet2.init_params", "mobile._make_divisible"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.encoder.mobile.MobileNet2._make_bottlenecks", "home.repos.pwc.inspect_result.moothes_salod.encoder.mobile.MobileNet2.init_params", "home.repos.pwc.inspect_result.moothes_salod.encoder.ghost._make_divisible"], ["def", "__init__", "(", "self", ",", "scale", "=", "1.0", ",", "input_size", "=", "224", ",", "t", "=", "6", ",", "in_channels", "=", "3", ",", "num_classes", "=", "1000", ",", "activation", "=", "nn", ".", "ReLU6", ")", ":", "\n", "        ", "\"\"\"\n        MobileNet2 constructor.\n        :param in_channels: (int, optional): number of channels in the input tensor.\n                Default is 3 for RGB image inputs.\n        :param input_size:\n        :param num_classes: number of classes to predict. Default\n                is 1000 for ImageNet.\n        :param scale:\n        :param t:\n        :param activation:\n        \"\"\"", "\n", "\n", "super", "(", "MobileNet2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "t", "=", "t", "\n", "self", ".", "activation_type", "=", "activation", "\n", "self", ".", "activation", "=", "activation", "(", "inplace", "=", "True", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "num_of_channels", "=", "[", "32", ",", "16", ",", "24", ",", "32", ",", "64", ",", "96", ",", "160", ",", "320", "]", "\n", "# assert (input_size % 32 == 0)", "\n", "\n", "self", ".", "c", "=", "[", "_make_divisible", "(", "ch", "*", "self", ".", "scale", ",", "8", ")", "for", "ch", "in", "self", ".", "num_of_channels", "]", "\n", "self", ".", "n", "=", "[", "1", ",", "1", ",", "2", ",", "3", ",", "4", ",", "3", ",", "3", ",", "1", "]", "\n", "self", ".", "s", "=", "[", "2", ",", "1", ",", "2", ",", "2", ",", "2", ",", "1", ",", "2", ",", "1", "]", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "self", ".", "c", "[", "0", "]", ",", "kernel_size", "=", "3", ",", "bias", "=", "False", ",", "stride", "=", "self", ".", "s", "[", "0", "]", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "c", "[", "0", "]", ")", "\n", "self", ".", "bottlenecks", "=", "self", ".", "_make_bottlenecks", "(", ")", "\n", "#print(self.bottlenecks)", "\n", "\n", "# Last convolution has 1280 output channels for scale <= 1", "\n", "#self.last_conv_out_ch = 1280 if self.scale <= 1 else _make_divisible(1280 * self.scale, 8)", "\n", "#self.conv_last = nn.Conv2d(self.c[-1], self.last_conv_out_ch, kernel_size=1, bias=False)", "\n", "#self.bn_last = nn.BatchNorm2d(self.last_conv_out_ch)", "\n", "#self.avgpool = nn.AdaptiveAvgPool2d(1)", "\n", "#self.dropout = nn.Dropout(p=0.2, inplace=True)  # confirmed by paper authors", "\n", "#self.fc = nn.Linear(self.last_conv_out_ch, self.num_classes)", "\n", "self", ".", "init_params", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.mobile.MobileNet2.init_params": [[112, 125], ["mobile.MobileNet2.modules", "isinstance", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "isinstance", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "isinstance", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "init_params", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "init", ".", "normal_", "(", "m", ".", "weight", ",", "std", "=", "0.001", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.mobile.MobileNet2._make_stage": [[126, 143], ["collections.OrderedDict", "mobile.LinearBottleneck", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mobile.LinearBottleneck"], "methods", ["None"], ["", "", "", "", "def", "_make_stage", "(", "self", ",", "inplanes", ",", "outplanes", ",", "n", ",", "stride", ",", "t", ",", "stage", ")", ":", "\n", "        ", "modules", "=", "OrderedDict", "(", ")", "\n", "stage_name", "=", "\"LinearBottleneck{}\"", ".", "format", "(", "stage", ")", "\n", "\n", "# First module is the only one utilizing stride", "\n", "first_module", "=", "LinearBottleneck", "(", "inplanes", "=", "inplanes", ",", "outplanes", "=", "outplanes", ",", "stride", "=", "stride", ",", "t", "=", "t", ",", "\n", "activation", "=", "self", ".", "activation_type", ")", "\n", "modules", "[", "stage_name", "+", "\"_0\"", "]", "=", "first_module", "\n", "\n", "# add more LinearBottleneck depending on number of repeats", "\n", "for", "i", "in", "range", "(", "n", "-", "1", ")", ":", "\n", "            ", "name", "=", "stage_name", "+", "\"_{}\"", ".", "format", "(", "i", "+", "1", ")", "\n", "module", "=", "LinearBottleneck", "(", "inplanes", "=", "outplanes", ",", "outplanes", "=", "outplanes", ",", "stride", "=", "1", ",", "t", "=", "6", ",", "\n", "activation", "=", "self", ".", "activation_type", ")", "\n", "modules", "[", "name", "]", "=", "module", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "modules", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.mobile.MobileNet2._make_bottlenecks": [[144, 163], ["collections.OrderedDict", "mobile.MobileNet2._make_stage", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mobile.MobileNet2._make_stage", "len"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.mobile.MobileNet2._make_stage", "home.repos.pwc.inspect_result.moothes_salod.encoder.mobile.MobileNet2._make_stage"], ["", "def", "_make_bottlenecks", "(", "self", ")", ":", "\n", "        ", "modules", "=", "OrderedDict", "(", ")", "\n", "stage_name", "=", "\"Bottlenecks\"", "\n", "\n", "# First module is the only one with t=1", "\n", "bottleneck1", "=", "self", ".", "_make_stage", "(", "inplanes", "=", "self", ".", "c", "[", "0", "]", ",", "outplanes", "=", "self", ".", "c", "[", "1", "]", ",", "n", "=", "self", ".", "n", "[", "1", "]", ",", "stride", "=", "self", ".", "s", "[", "1", "]", ",", "t", "=", "1", ",", "\n", "stage", "=", "0", ")", "\n", "modules", "[", "stage_name", "+", "\"_0\"", "]", "=", "bottleneck1", "\n", "\n", "# add more LinearBottleneck depending on number of repeats", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "self", ".", "c", ")", "-", "1", ")", ":", "\n", "            ", "name", "=", "stage_name", "+", "\"_{}\"", ".", "format", "(", "i", ")", "\n", "module", "=", "self", ".", "_make_stage", "(", "inplanes", "=", "self", ".", "c", "[", "i", "]", ",", "outplanes", "=", "self", ".", "c", "[", "i", "+", "1", "]", ",", "n", "=", "self", ".", "n", "[", "i", "+", "1", "]", ",", "\n", "stride", "=", "self", ".", "s", "[", "i", "+", "1", "]", ",", "\n", "t", "=", "self", ".", "t", ",", "stage", "=", "i", ")", "\n", "modules", "[", "name", "]", "=", "module", "\n", "\n", "#print(modules)", "\n", "", "return", "nn", ".", "Sequential", "(", "modules", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.mobile.MobileNet2.forward": [[164, 191], ["mobile.MobileNet2.conv1", "mobile.MobileNet2.bn1", "mobile.MobileNet2.activation", "enumerate", "module", "feat_list.append"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feat_list", "=", "[", "]", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "\n", "for", "i", ",", "module", "in", "enumerate", "(", "self", ".", "bottlenecks", ")", ":", "\n", "            ", "x", "=", "module", "(", "x", ")", "\n", "if", "i", "in", "(", "0", ",", "1", ",", "2", ",", "3", ",", "5", ")", ":", "\n", "                ", "feat_list", ".", "append", "(", "x", ")", "\n", "#x = self.bottlenecks(x)", "\n", "#x = self.conv_last(x)", "\n", "#x = self.bn_last(x)", "\n", "#x = self.activation(x)", "\n", "#feat_list.append(x)", "\n", "\n", "#for a in feat_list:", "\n", "#    print(a.size())", "\n", "\n", "# average pooling layer", "\n", "#x = self.avgpool(x)", "\n", "#x = self.dropout(x)", "\n", "\n", "# flatten for input to fully-connected layer", "\n", "#x = x.view(x.size(0), -1)", "\n", "#x = self.fc(x)", "\n", "", "", "return", "feat_list", "#F.log_softmax(x, dim=1) #TODO not needed(?)", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.mobile._make_divisible": [[9, 27], ["max", "int"], "function", ["None"], ["def", "_make_divisible", "(", "v", ",", "divisor", ",", "min_value", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    This function is taken from the original tf repo.\n    It ensures that all layers have a channel number that is divisible by 8\n    It can be seen here:\n    https://github.com/tensorflow/models/blob/master/research/slim/nets/mobilenet/mobilenet.py\n    :param v:\n    :param divisor:\n    :param min_value:\n    :return:\n    \"\"\"", "\n", "if", "min_value", "is", "None", ":", "\n", "        ", "min_value", "=", "divisor", "\n", "", "new_v", "=", "max", "(", "min_value", ",", "int", "(", "v", "+", "divisor", "/", "2", ")", "//", "divisor", "*", "divisor", ")", "\n", "# Make sure that round down does not go down by more than 10%.", "\n", "if", "new_v", "<", "0.9", "*", "v", ":", "\n", "        ", "new_v", "+=", "divisor", "\n", "", "return", "new_v", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.mobile.mobilenet": [[192, 205], ["mobile.MobileNet2", "pretrain.items", "MobileNet2.load_state_dict", "torch.load", "torch.load", "torch.load", "new_pre.items", "MobileNet2.state_dict"], "function", ["None"], ["", "", "def", "mobilenet", "(", ")", ":", "\n", "    ", "model", "=", "MobileNet2", "(", ")", "\n", "\n", "pretrain", "=", "torch", ".", "load", "(", "'../PretrainModel/mobilev2.pth.tar'", ",", "map_location", "=", "{", "'cuda:1'", ":", "'cuda:0'", "}", ")", "[", "'state_dict'", "]", "\n", "\n", "new_pre", "=", "{", "}", "\n", "for", "key", ",", "val", "in", "pretrain", ".", "items", "(", ")", ":", "\n", "        ", "new_pre", "[", "key", "[", "7", ":", "]", "]", "=", "val", "\n", "\n", "", "exist_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "new_pre", ".", "items", "(", ")", "if", "k", "in", "model", ".", "state_dict", "(", ")", "}", "\n", "model", ".", "load_state_dict", "(", "exist_dict", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.BasicBlock.__init__": [[41, 58], ["torch.Module.__init__", "resnet.conv3x3", "norm_layer", "torch.ReLU", "torch.ReLU", "resnet.conv3x3", "norm_layer", "ValueError", "NotImplementedError"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.conv3x3", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "if", "groups", "!=", "1", "or", "base_width", "!=", "64", ":", "\n", "            ", "raise", "ValueError", "(", "'BasicBlock only supports groups=1 and base_width=64'", ")", "\n", "", "if", "dilation", ">", "1", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"Dilation > 1 not supported in BasicBlock\"", ")", "\n", "# Both self.conv1 and self.downsample layers downsample the input when stride != 1", "\n", "", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "norm_layer", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.BasicBlock.forward": [[59, 76], ["resnet.BasicBlock.conv1", "resnet.BasicBlock.bn1", "resnet.BasicBlock.relu", "resnet.BasicBlock.conv2", "resnet.BasicBlock.bn2", "resnet.BasicBlock.relu", "resnet.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.Bottleneck.__init__": [[87, 103], ["torch.Module.__init__", "resnet.conv1x1", "norm_layer", "resnet.conv3x3", "norm_layer", "resnet.conv1x1", "norm_layer", "torch.ReLU", "torch.ReLU", "int"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.conv1x1", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.conv3x3", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.conv1x1"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "width", "=", "int", "(", "planes", "*", "(", "base_width", "/", "64.", ")", ")", "*", "groups", "\n", "# Both self.conv2 and self.downsample layers downsample the input when stride != 1", "\n", "self", ".", "conv1", "=", "conv1x1", "(", "inplanes", ",", "width", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "width", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "width", ",", "width", ",", "stride", ",", "groups", ",", "dilation", ")", "\n", "self", ".", "bn2", "=", "norm_layer", "(", "width", ")", "\n", "self", ".", "conv3", "=", "conv1x1", "(", "width", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "bn3", "=", "norm_layer", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.Bottleneck.forward": [[104, 125], ["resnet.Bottleneck.conv1", "resnet.Bottleneck.bn1", "resnet.Bottleneck.relu", "resnet.Bottleneck.conv2", "resnet.Bottleneck.bn2", "resnet.Bottleneck.relu", "resnet.Bottleneck.conv3", "resnet.Bottleneck.bn3", "resnet.Bottleneck.relu", "resnet.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.ResNet.__init__": [[129, 179], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet.modules", "len", "ValueError", "isinstance", "resnet.ResNet.modules", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "num_classes", "=", "1000", ",", "zero_init_residual", "=", "False", ",", "\n", "groups", "=", "1", ",", "width_per_group", "=", "64", ",", "replace_stride_with_dilation", "=", "None", ",", "\n", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "self", ".", "_norm_layer", "=", "norm_layer", "\n", "\n", "self", ".", "inplanes", "=", "64", "\n", "self", ".", "dilation", "=", "1", "\n", "if", "replace_stride_with_dilation", "is", "None", ":", "\n", "# each element in the tuple indicates if we should replace", "\n", "# the 2x2 stride with a dilated convolution instead", "\n", "            ", "replace_stride_with_dilation", "=", "[", "False", ",", "False", ",", "False", "]", "\n", "", "if", "len", "(", "replace_stride_with_dilation", ")", "!=", "3", ":", "\n", "            ", "raise", "ValueError", "(", "\"replace_stride_with_dilation should be None \"", "\n", "\"or a 3-element tuple, got {}\"", ".", "format", "(", "replace_stride_with_dilation", ")", ")", "\n", "", "self", ".", "groups", "=", "groups", "\n", "self", ".", "base_width", "=", "width_per_group", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "self", ".", "inplanes", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "self", ".", "inplanes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ",", "\n", "dilate", "=", "replace_stride_with_dilation", "[", "0", "]", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ",", "\n", "dilate", "=", "replace_stride_with_dilation", "[", "1", "]", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ",", "\n", "dilate", "=", "replace_stride_with_dilation", "[", "2", "]", ")", "\n", "#self.avgpool = nn.AdaptiveAvgPool2d((1, 1))", "\n", "#self.fc = nn.Linear(512 * block.expansion, num_classes)", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "(", "nn", ".", "BatchNorm2d", ",", "nn", ".", "GroupNorm", ")", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n", "# Zero-initialize the last BN in each residual branch,", "\n", "# so that the residual branch starts with zeros, and each residual block behaves like an identity.", "\n", "# This improves the model by 0.2~0.3% according to https://arxiv.org/abs/1706.02677", "\n", "", "", "if", "zero_init_residual", ":", "\n", "            ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "m", ",", "Bottleneck", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn3", ".", "weight", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "BasicBlock", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn2", ".", "weight", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.ResNet._make_layer": [[180, 203], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "resnet.conv1x1", "norm_layer", "block"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.conv1x1"], ["", "", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ",", "dilate", "=", "False", ")", ":", "\n", "        ", "norm_layer", "=", "self", ".", "_norm_layer", "\n", "downsample", "=", "None", "\n", "previous_dilation", "=", "self", ".", "dilation", "\n", "if", "dilate", ":", "\n", "            ", "self", ".", "dilation", "*=", "stride", "\n", "stride", "=", "1", "\n", "", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "conv1x1", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "stride", ")", ",", "\n", "norm_layer", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ",", "self", ".", "groups", ",", "\n", "self", ".", "base_width", ",", "previous_dilation", ",", "norm_layer", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "_", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "groups", "=", "self", ".", "groups", ",", "\n", "base_width", "=", "self", ".", "base_width", ",", "dilation", "=", "self", ".", "dilation", ",", "\n", "norm_layer", "=", "norm_layer", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.ResNet._forward_impl": [[204, 223], ["resnet.ResNet.conv1", "resnet.ResNet.bn1", "resnet.ResNet.relu", "xs.append", "resnet.ResNet.maxpool", "resnet.ResNet.layer1", "xs.append", "resnet.ResNet.layer2", "xs.append", "resnet.ResNet.layer3", "xs.append", "resnet.ResNet.layer4", "xs.append"], "methods", ["None"], ["", "def", "_forward_impl", "(", "self", ",", "x", ")", ":", "\n", "# See note [TorchScript super()]", "\n", "        ", "xs", "=", "[", "]", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "xs", ".", "append", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "xs", ".", "append", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "xs", ".", "append", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "xs", ".", "append", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "xs", ".", "append", "(", "x", ")", "\n", "\n", "return", "xs", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.ResNet.forward": [[224, 226], ["resnet.ResNet._forward_impl"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.ResNet._forward_impl"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "_forward_impl", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.conv3x3": [[27, 31], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ",", "groups", "=", "1", ",", "dilation", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "dilation", ",", "groups", "=", "groups", ",", "bias", "=", "False", ",", "dilation", "=", "dilation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.conv1x1": [[33, 36], ["torch.Conv2d"], "function", ["None"], ["", "def", "conv1x1", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"1x1 convolution\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet._resnet": [[228, 236], ["resnet.ResNet", "torch.load", "torch.load", "ResNet.state_dict", "model.state_dict.update", "ResNet.load_state_dict"], "function", ["home.repos.pwc.inspect_result.moothes_salod.None.metric.cal_wfm.update"], ["", "", "def", "_resnet", "(", "arch", ",", "block", ",", "layers", ",", "pretrained", ",", "progress", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "block", ",", "layers", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "state_dict", "=", "torch", ".", "load", "(", "'../PretrainModel/'", "+", "arch", "+", "'.pth'", ",", "map_location", "=", "'cpu'", ")", "\n", "existing_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "existing_dict", ".", "update", "(", "state_dict", ")", "\n", "model", ".", "load_state_dict", "(", "existing_dict", ",", "strict", "=", "False", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.resnet.resnet": [[238, 247], ["resnet._resnet"], "function", ["home.repos.pwc.inspect_result.moothes_salod.encoder.resnet._resnet"], ["", "def", "resnet", "(", "pretrained", "=", "True", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNet-50 model from\n    `\"Deep Residual Learning for Image Recognition\" <https://arxiv.org/pdf/1512.03385.pdf>`_\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "return", "_resnet", "(", "'resnet50'", ",", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "pretrained", ",", "progress", ",", "\n", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.ghost.SqueezeExcite.__init__": [[42, 51], ["torch.Module.__init__", "ghost._make_divisible", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "act_layer", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.encoder.ghost._make_divisible"], ["    ", "def", "__init__", "(", "self", ",", "in_chs", ",", "se_ratio", "=", "0.25", ",", "reduced_base_chs", "=", "None", ",", "\n", "act_layer", "=", "nn", ".", "ReLU", ",", "gate_fn", "=", "hard_sigmoid", ",", "divisor", "=", "4", ",", "**", "_", ")", ":", "\n", "        ", "super", "(", "SqueezeExcite", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "gate_fn", "=", "gate_fn", "\n", "reduced_chs", "=", "_make_divisible", "(", "(", "reduced_base_chs", "or", "in_chs", ")", "*", "se_ratio", ",", "divisor", ")", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "conv_reduce", "=", "nn", ".", "Conv2d", "(", "in_chs", ",", "reduced_chs", ",", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "act1", "=", "act_layer", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv_expand", "=", "nn", ".", "Conv2d", "(", "reduced_chs", ",", "in_chs", ",", "1", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.ghost.SqueezeExcite.forward": [[52, 59], ["ghost.SqueezeExcite.avg_pool", "ghost.SqueezeExcite.conv_reduce", "ghost.SqueezeExcite.act1", "ghost.SqueezeExcite.conv_expand", "ghost.SqueezeExcite.gate_fn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_se", "=", "self", ".", "avg_pool", "(", "x", ")", "\n", "x_se", "=", "self", ".", "conv_reduce", "(", "x_se", ")", "\n", "x_se", "=", "self", ".", "act1", "(", "x_se", ")", "\n", "x_se", "=", "self", ".", "conv_expand", "(", "x_se", ")", "\n", "x", "=", "x", "*", "self", ".", "gate_fn", "(", "x_se", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.ghost.ConvBnAct.__init__": [[62, 68], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "act_layer"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_chs", ",", "out_chs", ",", "kernel_size", ",", "\n", "stride", "=", "1", ",", "act_layer", "=", "nn", ".", "ReLU", ")", ":", "\n", "        ", "super", "(", "ConvBnAct", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "in_chs", ",", "out_chs", ",", "kernel_size", ",", "stride", ",", "kernel_size", "//", "2", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "out_chs", ")", "\n", "self", ".", "act1", "=", "act_layer", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.ghost.ConvBnAct.forward": [[69, 74], ["ghost.ConvBnAct.conv", "ghost.ConvBnAct.bn1", "ghost.ConvBnAct.act1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "act1", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.ghost.GhostModule.__init__": [[77, 93], ["torch.Module.__init__", "math.ceil", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Sequential", "torch.Sequential", "torch.Sequential"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inp", ",", "oup", ",", "kernel_size", "=", "1", ",", "ratio", "=", "2", ",", "dw_size", "=", "3", ",", "stride", "=", "1", ",", "relu", "=", "True", ")", ":", "\n", "        ", "super", "(", "GhostModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "oup", "=", "oup", "\n", "init_channels", "=", "math", ".", "ceil", "(", "oup", "/", "ratio", ")", "\n", "new_channels", "=", "init_channels", "*", "(", "ratio", "-", "1", ")", "\n", "\n", "self", ".", "primary_conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "inp", ",", "init_channels", ",", "kernel_size", ",", "stride", ",", "kernel_size", "//", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "init_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "if", "relu", "else", "nn", ".", "Sequential", "(", ")", ",", "\n", ")", "\n", "\n", "self", ".", "cheap_operation", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "init_channels", ",", "new_channels", ",", "dw_size", ",", "1", ",", "dw_size", "//", "2", ",", "groups", "=", "init_channels", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "new_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "if", "relu", "else", "nn", ".", "Sequential", "(", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.ghost.GhostModule.forward": [[95, 100], ["ghost.GhostModule.primary_conv", "ghost.GhostModule.cheap_operation", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x1", "=", "self", ".", "primary_conv", "(", "x", ")", "\n", "x2", "=", "self", ".", "cheap_operation", "(", "x1", ")", "\n", "out", "=", "torch", ".", "cat", "(", "[", "x1", ",", "x2", "]", ",", "dim", "=", "1", ")", "\n", "return", "out", "[", ":", ",", ":", "self", ".", "oup", ",", ":", ",", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.ghost.GhostBottleneck.__init__": [[105, 140], ["torch.Module.__init__", "ghost.GhostModule", "ghost.GhostModule", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "ghost.SqueezeExcite", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["def", "__init__", "(", "self", ",", "in_chs", ",", "mid_chs", ",", "out_chs", ",", "dw_kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "act_layer", "=", "nn", ".", "ReLU", ",", "se_ratio", "=", "0.", ")", ":", "\n", "        ", "super", "(", "GhostBottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "has_se", "=", "se_ratio", "is", "not", "None", "and", "se_ratio", ">", "0.", "\n", "self", ".", "stride", "=", "stride", "\n", "\n", "# Point-wise expansion", "\n", "self", ".", "ghost1", "=", "GhostModule", "(", "in_chs", ",", "mid_chs", ",", "relu", "=", "True", ")", "\n", "\n", "# Depth-wise convolution", "\n", "if", "self", ".", "stride", ">", "1", ":", "\n", "            ", "self", ".", "conv_dw", "=", "nn", ".", "Conv2d", "(", "mid_chs", ",", "mid_chs", ",", "dw_kernel_size", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "(", "dw_kernel_size", "-", "1", ")", "//", "2", ",", "\n", "groups", "=", "mid_chs", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn_dw", "=", "nn", ".", "BatchNorm2d", "(", "mid_chs", ")", "\n", "\n", "# Squeeze-and-excitation", "\n", "", "if", "has_se", ":", "\n", "            ", "self", ".", "se", "=", "SqueezeExcite", "(", "mid_chs", ",", "se_ratio", "=", "se_ratio", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "se", "=", "None", "\n", "\n", "# Point-wise linear projection", "\n", "", "self", ".", "ghost2", "=", "GhostModule", "(", "mid_chs", ",", "out_chs", ",", "relu", "=", "False", ")", "\n", "\n", "# shortcut", "\n", "if", "(", "in_chs", "==", "out_chs", "and", "self", ".", "stride", "==", "1", ")", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_chs", ",", "in_chs", ",", "dw_kernel_size", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "(", "dw_kernel_size", "-", "1", ")", "//", "2", ",", "groups", "=", "in_chs", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "in_chs", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_chs", ",", "out_chs", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_chs", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.ghost.GhostBottleneck.forward": [[143, 163], ["ghost.GhostBottleneck.ghost1", "ghost.GhostBottleneck.ghost2", "ghost.GhostBottleneck.shortcut", "ghost.GhostBottleneck.conv_dw", "ghost.GhostBottleneck.bn_dw", "ghost.GhostBottleneck.se"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "# 1st ghost bottleneck", "\n", "x", "=", "self", ".", "ghost1", "(", "x", ")", "\n", "\n", "# Depth-wise convolution", "\n", "if", "self", ".", "stride", ">", "1", ":", "\n", "            ", "x", "=", "self", ".", "conv_dw", "(", "x", ")", "\n", "x", "=", "self", ".", "bn_dw", "(", "x", ")", "\n", "\n", "# Squeeze-and-excitation", "\n", "", "if", "self", ".", "se", "is", "not", "None", ":", "\n", "            ", "x", "=", "self", ".", "se", "(", "x", ")", "\n", "\n", "# 2nd ghost bottleneck", "\n", "", "x", "=", "self", ".", "ghost2", "(", "x", ")", "\n", "\n", "x", "+=", "self", ".", "shortcut", "(", "residual", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.ghost.GhostNet.__init__": [[166, 198], ["torch.Module.__init__", "ghost._make_divisible", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "ghost._make_divisible", "stages.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "stages.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "ghost._make_divisible", "ghost._make_divisible", "layers.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "ghost.ConvBnAct", "block"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.encoder.ghost._make_divisible", "home.repos.pwc.inspect_result.moothes_salod.encoder.ghost._make_divisible", "home.repos.pwc.inspect_result.moothes_salod.encoder.ghost._make_divisible", "home.repos.pwc.inspect_result.moothes_salod.encoder.ghost._make_divisible"], ["    ", "def", "__init__", "(", "self", ",", "cfgs", ",", "num_classes", "=", "1000", ",", "width", "=", "1.0", ",", "dropout", "=", "0.2", ")", ":", "\n", "        ", "super", "(", "GhostNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# setting of inverted residual blocks", "\n", "self", ".", "cfgs", "=", "cfgs", "\n", "self", ".", "dropout", "=", "dropout", "\n", "\n", "# building first layer", "\n", "output_channel", "=", "_make_divisible", "(", "16", "*", "width", ",", "4", ")", "\n", "self", ".", "conv_stem", "=", "nn", ".", "Conv2d", "(", "3", ",", "output_channel", ",", "3", ",", "2", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "output_channel", ")", "\n", "self", ".", "act1", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "input_channel", "=", "output_channel", "\n", "\n", "# building inverted residual blocks", "\n", "stages", "=", "[", "]", "\n", "block", "=", "GhostBottleneck", "\n", "for", "cfg", "in", "self", ".", "cfgs", ":", "\n", "            ", "layers", "=", "[", "]", "\n", "for", "k", ",", "exp_size", ",", "c", ",", "se_ratio", ",", "s", "in", "cfg", ":", "\n", "                ", "output_channel", "=", "_make_divisible", "(", "c", "*", "width", ",", "4", ")", "\n", "hidden_channel", "=", "_make_divisible", "(", "exp_size", "*", "width", ",", "4", ")", "\n", "layers", ".", "append", "(", "block", "(", "input_channel", ",", "hidden_channel", ",", "output_channel", ",", "k", ",", "s", ",", "\n", "se_ratio", "=", "se_ratio", ")", ")", "\n", "input_channel", "=", "output_channel", "\n", "", "stages", ".", "append", "(", "nn", ".", "Sequential", "(", "*", "layers", ")", ")", "\n", "\n", "", "output_channel", "=", "_make_divisible", "(", "exp_size", "*", "width", ",", "4", ")", "\n", "stages", ".", "append", "(", "nn", ".", "Sequential", "(", "ConvBnAct", "(", "input_channel", ",", "output_channel", ",", "1", ")", ")", ")", "\n", "input_channel", "=", "output_channel", "\n", "\n", "#self.blocks = stages", "\n", "self", ".", "blocks", "=", "nn", ".", "Sequential", "(", "*", "stages", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.ghost.GhostNet.forward": [[206, 221], ["ghost.GhostNet.conv_stem", "ghost.GhostNet.bn1", "ghost.GhostNet.act1", "enumerate", "block", "xs.append"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv_stem", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "act1", "(", "x", ")", "\n", "xs", "=", "[", "]", "\n", "#x = self.blocks(x)", "\n", "for", "i", ",", "block", "in", "enumerate", "(", "self", ".", "blocks", ")", ":", "\n", "            ", "x", "=", "block", "(", "x", ")", "\n", "if", "i", "in", "(", "0", ",", "2", ",", "4", ",", "6", ",", "9", ")", ":", "\n", "                ", "xs", ".", "append", "(", "x", ")", "\n", "\n", "#x = self.global_pool(x)", "\n", "#x = self.conv_head(x)", "\n", "#x = self.act2(x)", "\n", "", "", "return", "xs", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.ghost._make_divisible": [[18, 32], ["max", "int"], "function", ["None"], ["def", "_make_divisible", "(", "v", ",", "divisor", ",", "min_value", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    This function is taken from the original tf repo.\n    It ensures that all layers have a channel number that is divisible by 8\n    It can be seen here:\n    https://github.com/tensorflow/models/blob/master/research/slim/nets/mobilenet/mobilenet.py\n    \"\"\"", "\n", "if", "min_value", "is", "None", ":", "\n", "        ", "min_value", "=", "divisor", "\n", "", "new_v", "=", "max", "(", "min_value", ",", "int", "(", "v", "+", "divisor", "/", "2", ")", "//", "divisor", "*", "divisor", ")", "\n", "# Make sure that round down does not go down by more than 10%.", "\n", "if", "new_v", "<", "0.9", "*", "v", ":", "\n", "        ", "new_v", "+=", "divisor", "\n", "", "return", "new_v", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.ghost.hard_sigmoid": [[34, 39], ["x.add_().clamp_().div_", "torch.relu6", "x.add_().clamp_", "x.add_"], "function", ["None"], ["", "def", "hard_sigmoid", "(", "x", ",", "inplace", ":", "bool", "=", "False", ")", ":", "\n", "    ", "if", "inplace", ":", "\n", "        ", "return", "x", ".", "add_", "(", "3.", ")", ".", "clamp_", "(", "0.", ",", "6.", ")", ".", "div_", "(", "6.", ")", "\n", "", "else", ":", "\n", "        ", "return", "F", ".", "relu6", "(", "x", "+", "3.", ")", "/", "6.", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.ghost.ghostnet": [[223, 263], ["ghost.GhostNet", "torch.load", "torch.load", "torch.load", "torch.load.items", "GhostNet.load_state_dict"], "function", ["None"], ["", "", "def", "ghostnet", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"\n    Constructs a GhostNet model\n    \"\"\"", "\n", "cfgs", "=", "[", "\n", "# k, t, c, SE, s ", "\n", "# stage1", "\n", "[", "[", "3", ",", "16", ",", "16", ",", "0", ",", "1", "]", "]", ",", "\n", "# stage2", "\n", "[", "[", "3", ",", "48", ",", "24", ",", "0", ",", "2", "]", "]", ",", "\n", "[", "[", "3", ",", "72", ",", "24", ",", "0", ",", "1", "]", "]", ",", "\n", "# stage3", "\n", "[", "[", "5", ",", "72", ",", "40", ",", "0.25", ",", "2", "]", "]", ",", "\n", "[", "[", "5", ",", "120", ",", "40", ",", "0.25", ",", "1", "]", "]", ",", "\n", "# stage4", "\n", "[", "[", "3", ",", "240", ",", "80", ",", "0", ",", "2", "]", "]", ",", "\n", "[", "[", "3", ",", "200", ",", "80", ",", "0", ",", "1", "]", ",", "\n", "[", "3", ",", "184", ",", "80", ",", "0", ",", "1", "]", ",", "\n", "[", "3", ",", "184", ",", "80", ",", "0", ",", "1", "]", ",", "\n", "[", "3", ",", "480", ",", "112", ",", "0.25", ",", "1", "]", ",", "\n", "[", "3", ",", "672", ",", "112", ",", "0.25", ",", "1", "]", "\n", "]", ",", "\n", "# stage5", "\n", "[", "[", "5", ",", "672", ",", "160", ",", "0.25", ",", "2", "]", "]", ",", "\n", "[", "[", "5", ",", "960", ",", "160", ",", "0", ",", "1", "]", ",", "\n", "[", "5", ",", "960", ",", "160", ",", "0.25", ",", "1", "]", ",", "\n", "[", "5", ",", "960", ",", "160", ",", "0", ",", "1", "]", ",", "\n", "[", "5", ",", "960", ",", "160", ",", "0.25", ",", "1", "]", "\n", "]", "\n", "]", "\n", "\n", "model", "=", "GhostNet", "(", "cfgs", ",", "**", "kwargs", ")", "\n", "saved_dict", "=", "torch", ".", "load", "(", "'../PretrainModel/ghost.pth'", ")", "\n", "new_dict", "=", "{", "}", "\n", "for", "k", ",", "v", "in", "saved_dict", ".", "items", "(", ")", ":", "\n", "        ", "if", "'conv_head'", "not", "in", "k", "and", "'classifier'", "not", "in", "k", ":", "\n", "#del saved_dict[k]", "\n", "            ", "new_dict", "[", "k", "]", "=", "v", "\n", "", "", "model", ".", "load_state_dict", "(", "new_dict", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.mobilev3.Hswish.__init__": [[26, 29], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inplace", "=", "True", ")", ":", "\n", "        ", "super", "(", "Hswish", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "inplace", "=", "inplace", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.mobilev3.Hswish.forward": [[30, 32], ["torch.relu6", "torch.relu6", "torch.relu6"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", "*", "F", ".", "relu6", "(", "x", "+", "3.", ",", "inplace", "=", "self", ".", "inplace", ")", "/", "6.", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.mobilev3.Hsigmoid.__init__": [[35, 38], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inplace", "=", "True", ")", ":", "\n", "        ", "super", "(", "Hsigmoid", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "inplace", "=", "inplace", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.mobilev3.Hsigmoid.forward": [[39, 41], ["torch.relu6", "torch.relu6", "torch.relu6"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "F", ".", "relu6", "(", "x", "+", "3.", ",", "inplace", "=", "self", ".", "inplace", ")", "/", "6.", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.mobilev3.SEModule.__init__": [[44, 52], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "mobilev3.Hsigmoid"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "reduction", "=", "4", ")", ":", "\n", "        ", "super", "(", "SEModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "channel", ",", "channel", "//", "reduction", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "channel", "//", "reduction", ",", "channel", ",", "bias", "=", "False", ")", ",", "\n", "Hsigmoid", "(", ")", "\n", "# nn.Sigmoid()", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.mobilev3.SEModule.forward": [[55, 60], ["x.size", "mobilev3.SEModule.avg_pool().view", "mobilev3.SEModule.fc().view", "mobilev3.SEModule.expand_as", "mobilev3.SEModule.avg_pool", "mobilev3.SEModule.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "b", ",", "c", ",", "_", ",", "_", "=", "x", ".", "size", "(", ")", "\n", "y", "=", "self", ".", "avg_pool", "(", "x", ")", ".", "view", "(", "b", ",", "c", ")", "\n", "y", "=", "self", ".", "fc", "(", "y", ")", ".", "view", "(", "b", ",", "c", ",", "1", ",", "1", ")", "\n", "return", "x", "*", "y", ".", "expand_as", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.mobilev3.Identity.__init__": [[63, 65], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ")", ":", "\n", "        ", "super", "(", "Identity", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.mobilev3.Identity.forward": [[66, 68], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.mobilev3.MobileBottleneck.__init__": [[76, 109], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "conv_layer", "norm_layer", "nlin_layer", "conv_layer", "norm_layer", "SELayer", "nlin_layer", "conv_layer", "norm_layer"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inp", ",", "oup", ",", "kernel", ",", "stride", ",", "exp", ",", "se", "=", "False", ",", "nl", "=", "'RE'", ")", ":", "\n", "        ", "super", "(", "MobileBottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "stride", "in", "[", "1", ",", "2", "]", "\n", "assert", "kernel", "in", "[", "3", ",", "5", "]", "\n", "padding", "=", "(", "kernel", "-", "1", ")", "//", "2", "\n", "self", ".", "use_res_connect", "=", "stride", "==", "1", "and", "inp", "==", "oup", "\n", "\n", "conv_layer", "=", "nn", ".", "Conv2d", "\n", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "if", "nl", "==", "'RE'", ":", "\n", "            ", "nlin_layer", "=", "nn", ".", "ReLU", "# or ReLU6", "\n", "", "elif", "nl", "==", "'HS'", ":", "\n", "            ", "nlin_layer", "=", "Hswish", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "", "if", "se", ":", "\n", "            ", "SELayer", "=", "SEModule", "\n", "", "else", ":", "\n", "            ", "SELayer", "=", "Identity", "\n", "\n", "", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "# pw", "\n", "conv_layer", "(", "inp", ",", "exp", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "\n", "norm_layer", "(", "exp", ")", ",", "\n", "nlin_layer", "(", "inplace", "=", "True", ")", ",", "\n", "# dw", "\n", "conv_layer", "(", "exp", ",", "exp", ",", "kernel", ",", "stride", ",", "padding", ",", "groups", "=", "exp", ",", "bias", "=", "False", ")", ",", "\n", "norm_layer", "(", "exp", ")", ",", "\n", "SELayer", "(", "exp", ")", ",", "\n", "nlin_layer", "(", "inplace", "=", "True", ")", ",", "\n", "# pw-linear", "\n", "conv_layer", "(", "exp", ",", "oup", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "\n", "norm_layer", "(", "oup", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.mobilev3.MobileBottleneck.forward": [[111, 116], ["mobilev3.MobileBottleneck.conv", "mobilev3.MobileBottleneck.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "use_res_connect", ":", "\n", "            ", "return", "x", "+", "self", ".", "conv", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "conv", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.mobilev3.MobileNetV3.__init__": [[119, 202], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mobilev3.MobileNetV3._initialize_weights", "mobilev3.make_divisible", "mobilev3.conv_bn", "mobilev3.make_divisible", "mobilev3.make_divisible", "mobilev3.MobileNetV3.features.append", "mobilev3.make_divisible", "mobilev3.MobileNetV3.features.append", "mobilev3.MobileNetV3.features.append", "mobilev3.MobileNetV3.features.append", "mobilev3.MobileNetV3.features.append", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "mobilev3.MobileBottleneck", "mobilev3.conv_1x1_bn", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "mobilev3.Hswish", "mobilev3.make_divisible", "mobilev3.MobileNetV3.features.append", "mobilev3.MobileNetV3.features.append", "mobilev3.MobileNetV3.features.append", "mobilev3.MobileNetV3.features.append", "mobilev3.conv_1x1_bn", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "mobilev3.Hswish"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__", "home.repos.pwc.inspect_result.moothes_salod.encoder.mobilev3.MobileNetV3._initialize_weights", "home.repos.pwc.inspect_result.moothes_salod.encoder.mobilev3.make_divisible", "home.repos.pwc.inspect_result.moothes_salod.encoder.mobilev3.conv_bn", "home.repos.pwc.inspect_result.moothes_salod.encoder.mobilev3.make_divisible", "home.repos.pwc.inspect_result.moothes_salod.encoder.mobilev3.make_divisible", "home.repos.pwc.inspect_result.moothes_salod.encoder.mobilev3.make_divisible", "home.repos.pwc.inspect_result.moothes_salod.encoder.mobilev3.conv_1x1_bn", "home.repos.pwc.inspect_result.moothes_salod.encoder.mobilev3.make_divisible", "home.repos.pwc.inspect_result.moothes_salod.encoder.mobilev3.conv_1x1_bn"], ["    ", "def", "__init__", "(", "self", ",", "n_class", "=", "1000", ",", "input_size", "=", "224", ",", "dropout", "=", "0.8", ",", "mode", "=", "'small'", ",", "width_mult", "=", "1.0", ")", ":", "\n", "        ", "super", "(", "MobileNetV3", ",", "self", ")", ".", "__init__", "(", ")", "\n", "input_channel", "=", "16", "\n", "last_channel", "=", "1280", "\n", "if", "mode", "==", "'large'", ":", "\n", "# refer to Table 1 in paper", "\n", "            ", "mobile_setting", "=", "[", "\n", "# k, exp, c,  se,     nl,  s,", "\n", "[", "3", ",", "16", ",", "16", ",", "False", ",", "'RE'", ",", "1", "]", ",", "\n", "[", "3", ",", "64", ",", "24", ",", "False", ",", "'RE'", ",", "2", "]", ",", "\n", "[", "3", ",", "72", ",", "24", ",", "False", ",", "'RE'", ",", "1", "]", ",", "\n", "[", "5", ",", "72", ",", "40", ",", "True", ",", "'RE'", ",", "2", "]", ",", "\n", "[", "5", ",", "120", ",", "40", ",", "True", ",", "'RE'", ",", "1", "]", ",", "\n", "[", "5", ",", "120", ",", "40", ",", "True", ",", "'RE'", ",", "1", "]", ",", "\n", "[", "3", ",", "240", ",", "80", ",", "False", ",", "'HS'", ",", "2", "]", ",", "\n", "[", "3", ",", "200", ",", "80", ",", "False", ",", "'HS'", ",", "1", "]", ",", "\n", "[", "3", ",", "184", ",", "80", ",", "False", ",", "'HS'", ",", "1", "]", ",", "\n", "[", "3", ",", "184", ",", "80", ",", "False", ",", "'HS'", ",", "1", "]", ",", "\n", "[", "3", ",", "480", ",", "112", ",", "True", ",", "'HS'", ",", "1", "]", ",", "\n", "[", "3", ",", "672", ",", "112", ",", "True", ",", "'HS'", ",", "1", "]", ",", "\n", "[", "5", ",", "672", ",", "160", ",", "True", ",", "'HS'", ",", "2", "]", ",", "\n", "[", "5", ",", "960", ",", "160", ",", "True", ",", "'HS'", ",", "1", "]", ",", "\n", "[", "5", ",", "960", ",", "160", ",", "True", ",", "'HS'", ",", "1", "]", ",", "\n", "]", "\n", "", "elif", "mode", "==", "'small'", ":", "\n", "# refer to Table 2 in paper", "\n", "            ", "mobile_setting", "=", "[", "\n", "# k, exp, c,  se,     nl,  s,", "\n", "[", "3", ",", "16", ",", "16", ",", "True", ",", "'RE'", ",", "2", "]", ",", "\n", "[", "3", ",", "72", ",", "24", ",", "False", ",", "'RE'", ",", "2", "]", ",", "\n", "[", "3", ",", "88", ",", "24", ",", "False", ",", "'RE'", ",", "1", "]", ",", "\n", "[", "5", ",", "96", ",", "40", ",", "True", ",", "'HS'", ",", "2", "]", ",", "\n", "[", "5", ",", "240", ",", "40", ",", "True", ",", "'HS'", ",", "1", "]", ",", "\n", "[", "5", ",", "240", ",", "40", ",", "True", ",", "'HS'", ",", "1", "]", ",", "\n", "[", "5", ",", "120", ",", "48", ",", "True", ",", "'HS'", ",", "1", "]", ",", "\n", "[", "5", ",", "144", ",", "48", ",", "True", ",", "'HS'", ",", "1", "]", ",", "\n", "[", "5", ",", "288", ",", "96", ",", "True", ",", "'HS'", ",", "2", "]", ",", "\n", "[", "5", ",", "576", ",", "96", ",", "True", ",", "'HS'", ",", "1", "]", ",", "\n", "[", "5", ",", "576", ",", "96", ",", "True", ",", "'HS'", ",", "1", "]", ",", "\n", "]", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n", "# building first layer", "\n", "", "assert", "input_size", "%", "32", "==", "0", "\n", "last_channel", "=", "make_divisible", "(", "last_channel", "*", "width_mult", ")", "if", "width_mult", ">", "1.0", "else", "last_channel", "\n", "self", ".", "features", "=", "[", "conv_bn", "(", "3", ",", "input_channel", ",", "2", ",", "nlin_layer", "=", "Hswish", ")", "]", "\n", "self", ".", "classifier", "=", "[", "]", "\n", "\n", "# building mobile blocks", "\n", "for", "k", ",", "exp", ",", "c", ",", "se", ",", "nl", ",", "s", "in", "mobile_setting", ":", "\n", "            ", "output_channel", "=", "make_divisible", "(", "c", "*", "width_mult", ")", "\n", "exp_channel", "=", "make_divisible", "(", "exp", "*", "width_mult", ")", "\n", "self", ".", "features", ".", "append", "(", "MobileBottleneck", "(", "input_channel", ",", "output_channel", ",", "k", ",", "s", ",", "exp_channel", ",", "se", ",", "nl", ")", ")", "\n", "input_channel", "=", "output_channel", "\n", "\n", "# building last several layers", "\n", "", "if", "mode", "==", "'large'", ":", "\n", "            ", "last_conv", "=", "make_divisible", "(", "960", "*", "width_mult", ")", "\n", "self", ".", "features", ".", "append", "(", "conv_1x1_bn", "(", "input_channel", ",", "last_conv", ",", "nlin_layer", "=", "Hswish", ")", ")", "\n", "self", ".", "features", ".", "append", "(", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", ")", "\n", "self", ".", "features", ".", "append", "(", "nn", ".", "Conv2d", "(", "last_conv", ",", "last_channel", ",", "1", ",", "1", ",", "0", ")", ")", "\n", "self", ".", "features", ".", "append", "(", "Hswish", "(", "inplace", "=", "True", ")", ")", "\n", "", "elif", "mode", "==", "'small'", ":", "\n", "            ", "last_conv", "=", "make_divisible", "(", "576", "*", "width_mult", ")", "\n", "self", ".", "features", ".", "append", "(", "conv_1x1_bn", "(", "input_channel", ",", "last_conv", ",", "nlin_layer", "=", "Hswish", ")", ")", "\n", "# self.features.append(SEModule(last_conv))  # refer to paper Table2, but I think this is a mistake", "\n", "self", ".", "features", ".", "append", "(", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", ")", "\n", "self", ".", "features", ".", "append", "(", "nn", ".", "Conv2d", "(", "last_conv", ",", "last_channel", ",", "1", ",", "1", ",", "0", ")", ")", "\n", "self", ".", "features", ".", "append", "(", "Hswish", "(", "inplace", "=", "True", ")", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n", "# make it nn.Sequential", "\n", "", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "features", ")", "\n", "\n", "# building classifier", "\n", "self", ".", "classifier", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Dropout", "(", "p", "=", "dropout", ")", ",", "# refer to paper section 6", "\n", "nn", ".", "Linear", "(", "last_channel", ",", "n_class", ")", ",", "\n", ")", "\n", "\n", "self", ".", "_initialize_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.mobilev3.MobileNetV3.forward": [[203, 214], ["enumerate", "feat", "xs.append"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "xs", "=", "[", "]", "\n", "for", "i", ",", "feat", "in", "enumerate", "(", "self", ".", "features", ")", ":", "\n", "            ", "x", "=", "feat", "(", "x", ")", "\n", "if", "i", "in", "(", "0", ",", "1", ",", "3", ",", "8", ",", "12", ")", ":", "\n", "                ", "xs", ".", "append", "(", "x", ")", "\n", "#print(x.size())", "\n", "#x = self.features(x)", "\n", "#x = x.mean(3).mean(2)", "\n", "#x = self.classifier(x)", "\n", "", "", "return", "xs", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.mobilev3.MobileNetV3._initialize_weights": [[215, 229], ["mobilev3.MobileNetV3.modules", "isinstance", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "torch.init.zeros_", "torch.init.zeros_", "torch.init.zeros_", "torch.init.ones_", "torch.init.ones_", "torch.init.ones_", "torch.init.zeros_", "torch.init.zeros_", "torch.init.zeros_", "isinstance", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.zeros_", "torch.init.zeros_", "torch.init.zeros_"], "methods", ["None"], ["", "def", "_initialize_weights", "(", "self", ")", ":", "\n", "# weight initialization", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "nn", ".", "init", ".", "zeros_", "(", "m", ".", "bias", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "ones_", "(", "m", ".", "weight", ")", "\n", "nn", ".", "init", ".", "zeros_", "(", "m", ".", "bias", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "nn", ".", "init", ".", "normal_", "(", "m", ".", "weight", ",", "0", ",", "0.01", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "nn", ".", "init", ".", "zeros_", "(", "m", ".", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.mobilev3.conv_bn": [[9, 14], ["torch.Sequential", "conv_layer", "norm_layer", "nlin_layer"], "function", ["None"], ["def", "conv_bn", "(", "inp", ",", "oup", ",", "stride", ",", "conv_layer", "=", "nn", ".", "Conv2d", ",", "norm_layer", "=", "nn", ".", "BatchNorm2d", ",", "nlin_layer", "=", "nn", ".", "ReLU", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "conv_layer", "(", "inp", ",", "oup", ",", "3", ",", "stride", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "norm_layer", "(", "oup", ")", ",", "\n", "nlin_layer", "(", "inplace", "=", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.mobilev3.conv_1x1_bn": [[17, 22], ["torch.Sequential", "conv_layer", "norm_layer", "nlin_layer"], "function", ["None"], ["", "def", "conv_1x1_bn", "(", "inp", ",", "oup", ",", "conv_layer", "=", "nn", ".", "Conv2d", ",", "norm_layer", "=", "nn", ".", "BatchNorm2d", ",", "nlin_layer", "=", "nn", ".", "ReLU", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "conv_layer", "(", "inp", ",", "oup", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "\n", "norm_layer", "(", "oup", ")", ",", "\n", "nlin_layer", "(", "inplace", "=", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.mobilev3.make_divisible": [[70, 73], ["int", "np.ceil"], "function", ["None"], ["", "", "def", "make_divisible", "(", "x", ",", "divisible_by", "=", "8", ")", ":", "\n", "    ", "import", "numpy", "as", "np", "\n", "return", "int", "(", "np", ".", "ceil", "(", "x", "*", "1.", "/", "divisible_by", ")", "*", "divisible_by", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.mobilev3.mobilenetv3": [[231, 238], ["mobilev3.MobileNetV3", "torch.load", "torch.load", "torch.load", "MobileNetV3.load_state_dict"], "function", ["None"], ["", "", "", "", "", "def", "mobilenetv3", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "MobileNetV3", "(", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "state_dict", "=", "torch", ".", "load", "(", "'../PretrainModel/mobilenetv3_small_67.4.pth.tar'", ")", "\n", "model", ".", "load_state_dict", "(", "state_dict", ",", "strict", "=", "True", ")", "\n", "# raise NotImplementedError", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.Swish.forward": [[56, 58], ["torch.sigmoid"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", "*", "torch", ".", "sigmoid", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.SwishImplementation.forward": [[62, 67], ["ctx.save_for_backward", "torch.sigmoid"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "i", ")", ":", "\n", "        ", "result", "=", "i", "*", "torch", ".", "sigmoid", "(", "i", ")", "\n", "ctx", ".", "save_for_backward", "(", "i", ")", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.SwishImplementation.backward": [[68, 73], ["torch.sigmoid"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_output", ")", ":", "\n", "        ", "i", "=", "ctx", ".", "saved_tensors", "[", "0", "]", "\n", "sigmoid_i", "=", "torch", ".", "sigmoid", "(", "i", ")", "\n", "return", "grad_output", "*", "(", "sigmoid_i", "*", "(", "1", "+", "i", "*", "(", "1", "-", "sigmoid_i", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MemoryEfficientSwish.forward": [[75, 77], ["SwishImplementation.apply"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "SwishImplementation", ".", "apply", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.Conv2dDynamicSamePadding.__init__": [[228, 231], ["torch.nn.Conv2d.__init__", "len"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "0", ",", "dilation", ",", "groups", ",", "bias", ")", "\n", "self", ".", "stride", "=", "self", ".", "stride", "if", "len", "(", "self", ".", "stride", ")", "==", "2", "else", "[", "self", ".", "stride", "[", "0", "]", "]", "*", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.Conv2dDynamicSamePadding.forward": [[232, 242], ["max", "max", "torch.nn.functional.conv2d", "torch.nn.functional.pad.size", "utils.Conv2dDynamicSamePadding.weight.size", "math.ceil", "math.ceil", "torch.nn.functional.pad"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "ih", ",", "iw", "=", "x", ".", "size", "(", ")", "[", "-", "2", ":", "]", "\n", "kh", ",", "kw", "=", "self", ".", "weight", ".", "size", "(", ")", "[", "-", "2", ":", "]", "\n", "sh", ",", "sw", "=", "self", ".", "stride", "\n", "oh", ",", "ow", "=", "math", ".", "ceil", "(", "ih", "/", "sh", ")", ",", "math", ".", "ceil", "(", "iw", "/", "sw", ")", "# change the output size according to stride ! ! !", "\n", "pad_h", "=", "max", "(", "(", "oh", "-", "1", ")", "*", "self", ".", "stride", "[", "0", "]", "+", "(", "kh", "-", "1", ")", "*", "self", ".", "dilation", "[", "0", "]", "+", "1", "-", "ih", ",", "0", ")", "\n", "pad_w", "=", "max", "(", "(", "ow", "-", "1", ")", "*", "self", ".", "stride", "[", "1", "]", "+", "(", "kw", "-", "1", ")", "*", "self", ".", "dilation", "[", "1", "]", "+", "1", "-", "iw", ",", "0", ")", "\n", "if", "pad_h", ">", "0", "or", "pad_w", ">", "0", ":", "\n", "            ", "x", "=", "F", ".", "pad", "(", "x", ",", "[", "pad_w", "//", "2", ",", "pad_w", "-", "pad_w", "//", "2", ",", "pad_h", "//", "2", ",", "pad_h", "-", "pad_h", "//", "2", "]", ")", "\n", "", "return", "F", ".", "conv2d", "(", "x", ",", "self", ".", "weight", ",", "self", ".", "bias", ",", "self", ".", "stride", ",", "self", ".", "padding", ",", "self", ".", "dilation", ",", "self", ".", "groups", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.Conv2dStaticSamePadding.__init__": [[251, 268], ["torch.nn.Conv2d.__init__", "max", "max", "isinstance", "utils.Conv2dStaticSamePadding.weight.size", "math.ceil", "math.ceil", "torch.nn.ZeroPad2d", "torch.nn.Identity", "len"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "image_size", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "**", "kwargs", ")", "\n", "self", ".", "stride", "=", "self", ".", "stride", "if", "len", "(", "self", ".", "stride", ")", "==", "2", "else", "[", "self", ".", "stride", "[", "0", "]", "]", "*", "2", "\n", "\n", "# Calculate padding based on image size and save it", "\n", "assert", "image_size", "is", "not", "None", "\n", "ih", ",", "iw", "=", "(", "image_size", ",", "image_size", ")", "if", "isinstance", "(", "image_size", ",", "int", ")", "else", "image_size", "\n", "kh", ",", "kw", "=", "self", ".", "weight", ".", "size", "(", ")", "[", "-", "2", ":", "]", "\n", "sh", ",", "sw", "=", "self", ".", "stride", "\n", "oh", ",", "ow", "=", "math", ".", "ceil", "(", "ih", "/", "sh", ")", ",", "math", ".", "ceil", "(", "iw", "/", "sw", ")", "\n", "pad_h", "=", "max", "(", "(", "oh", "-", "1", ")", "*", "self", ".", "stride", "[", "0", "]", "+", "(", "kh", "-", "1", ")", "*", "self", ".", "dilation", "[", "0", "]", "+", "1", "-", "ih", ",", "0", ")", "\n", "pad_w", "=", "max", "(", "(", "ow", "-", "1", ")", "*", "self", ".", "stride", "[", "1", "]", "+", "(", "kw", "-", "1", ")", "*", "self", ".", "dilation", "[", "1", "]", "+", "1", "-", "iw", ",", "0", ")", "\n", "if", "pad_h", ">", "0", "or", "pad_w", ">", "0", ":", "\n", "            ", "self", ".", "static_padding", "=", "nn", ".", "ZeroPad2d", "(", "(", "pad_w", "-", "pad_w", "//", "2", ",", "pad_w", "-", "pad_w", "//", "2", ",", "\n", "pad_h", "-", "pad_h", "//", "2", ",", "pad_h", "-", "pad_h", "//", "2", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "static_padding", "=", "nn", ".", "Identity", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.Conv2dStaticSamePadding.forward": [[269, 273], ["utils.Conv2dStaticSamePadding.static_padding", "torch.nn.functional.conv2d"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "static_padding", "(", "x", ")", "\n", "x", "=", "F", ".", "conv2d", "(", "x", ",", "self", ".", "weight", ",", "self", ".", "bias", ",", "self", ".", "stride", ",", "self", ".", "padding", ",", "self", ".", "dilation", ",", "self", ".", "groups", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dDynamicSamePadding.__init__": [[296, 301], ["torch.nn.MaxPool2d.__init__", "isinstance", "isinstance", "isinstance"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["def", "__init__", "(", "self", ",", "kernel_size", ",", "stride", ",", "padding", "=", "0", ",", "dilation", "=", "1", ",", "return_indices", "=", "False", ",", "ceil_mode", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "kernel_size", ",", "stride", ",", "padding", ",", "dilation", ",", "return_indices", ",", "ceil_mode", ")", "\n", "self", ".", "stride", "=", "[", "self", ".", "stride", "]", "*", "2", "if", "isinstance", "(", "self", ".", "stride", ",", "int", ")", "else", "self", ".", "stride", "\n", "self", ".", "kernel_size", "=", "[", "self", ".", "kernel_size", "]", "*", "2", "if", "isinstance", "(", "self", ".", "kernel_size", ",", "int", ")", "else", "self", ".", "kernel_size", "\n", "self", ".", "dilation", "=", "[", "self", ".", "dilation", "]", "*", "2", "if", "isinstance", "(", "self", ".", "dilation", ",", "int", ")", "else", "self", ".", "dilation", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dDynamicSamePadding.forward": [[302, 313], ["max", "max", "torch.nn.functional.max_pool2d", "torch.nn.functional.pad.size", "math.ceil", "math.ceil", "torch.nn.functional.pad"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "ih", ",", "iw", "=", "x", ".", "size", "(", ")", "[", "-", "2", ":", "]", "\n", "kh", ",", "kw", "=", "self", ".", "kernel_size", "\n", "sh", ",", "sw", "=", "self", ".", "stride", "\n", "oh", ",", "ow", "=", "math", ".", "ceil", "(", "ih", "/", "sh", ")", ",", "math", ".", "ceil", "(", "iw", "/", "sw", ")", "\n", "pad_h", "=", "max", "(", "(", "oh", "-", "1", ")", "*", "self", ".", "stride", "[", "0", "]", "+", "(", "kh", "-", "1", ")", "*", "self", ".", "dilation", "[", "0", "]", "+", "1", "-", "ih", ",", "0", ")", "\n", "pad_w", "=", "max", "(", "(", "ow", "-", "1", ")", "*", "self", ".", "stride", "[", "1", "]", "+", "(", "kw", "-", "1", ")", "*", "self", ".", "dilation", "[", "1", "]", "+", "1", "-", "iw", ",", "0", ")", "\n", "if", "pad_h", ">", "0", "or", "pad_w", ">", "0", ":", "\n", "            ", "x", "=", "F", ".", "pad", "(", "x", ",", "[", "pad_w", "//", "2", ",", "pad_w", "-", "pad_w", "//", "2", ",", "pad_h", "//", "2", ",", "pad_h", "-", "pad_h", "//", "2", "]", ")", "\n", "", "return", "F", ".", "max_pool2d", "(", "x", ",", "self", ".", "kernel_size", ",", "self", ".", "stride", ",", "self", ".", "padding", ",", "\n", "self", ".", "dilation", ",", "self", ".", "ceil_mode", ",", "self", ".", "return_indices", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__": [[319, 337], ["torch.nn.MaxPool2d.__init__", "max", "max", "isinstance", "isinstance", "isinstance", "isinstance", "math.ceil", "math.ceil", "torch.nn.ZeroPad2d", "torch.nn.Identity"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.__init__"], ["def", "__init__", "(", "self", ",", "kernel_size", ",", "stride", ",", "image_size", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "kernel_size", ",", "stride", ",", "**", "kwargs", ")", "\n", "self", ".", "stride", "=", "[", "self", ".", "stride", "]", "*", "2", "if", "isinstance", "(", "self", ".", "stride", ",", "int", ")", "else", "self", ".", "stride", "\n", "self", ".", "kernel_size", "=", "[", "self", ".", "kernel_size", "]", "*", "2", "if", "isinstance", "(", "self", ".", "kernel_size", ",", "int", ")", "else", "self", ".", "kernel_size", "\n", "self", ".", "dilation", "=", "[", "self", ".", "dilation", "]", "*", "2", "if", "isinstance", "(", "self", ".", "dilation", ",", "int", ")", "else", "self", ".", "dilation", "\n", "\n", "# Calculate padding based on image size and save it", "\n", "assert", "image_size", "is", "not", "None", "\n", "ih", ",", "iw", "=", "(", "image_size", ",", "image_size", ")", "if", "isinstance", "(", "image_size", ",", "int", ")", "else", "image_size", "\n", "kh", ",", "kw", "=", "self", ".", "kernel_size", "\n", "sh", ",", "sw", "=", "self", ".", "stride", "\n", "oh", ",", "ow", "=", "math", ".", "ceil", "(", "ih", "/", "sh", ")", ",", "math", ".", "ceil", "(", "iw", "/", "sw", ")", "\n", "pad_h", "=", "max", "(", "(", "oh", "-", "1", ")", "*", "self", ".", "stride", "[", "0", "]", "+", "(", "kh", "-", "1", ")", "*", "self", ".", "dilation", "[", "0", "]", "+", "1", "-", "ih", ",", "0", ")", "\n", "pad_w", "=", "max", "(", "(", "ow", "-", "1", ")", "*", "self", ".", "stride", "[", "1", "]", "+", "(", "kw", "-", "1", ")", "*", "self", ".", "dilation", "[", "1", "]", "+", "1", "-", "iw", ",", "0", ")", "\n", "if", "pad_h", ">", "0", "or", "pad_w", ">", "0", ":", "\n", "            ", "self", ".", "static_padding", "=", "nn", ".", "ZeroPad2d", "(", "(", "pad_w", "//", "2", ",", "pad_w", "-", "pad_w", "//", "2", ",", "pad_h", "//", "2", ",", "pad_h", "-", "pad_h", "//", "2", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "static_padding", "=", "nn", ".", "Identity", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.MaxPool2dStaticSamePadding.forward": [[338, 343], ["utils.MaxPool2dStaticSamePadding.static_padding", "torch.nn.functional.max_pool2d"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "static_padding", "(", "x", ")", "\n", "x", "=", "F", ".", "max_pool2d", "(", "x", ",", "self", ".", "kernel_size", ",", "self", ".", "stride", ",", "self", ".", "padding", ",", "\n", "self", ".", "dilation", ",", "self", ".", "ceil_mode", ",", "self", ".", "return_indices", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.BlockDecoder._decode_block_string": [[361, 395], ["isinstance", "block_string.split", "BlockArgs", "re.split", "len", "int", "int", "int", "int", "int", "len", "len", "int", "float"], "methods", ["None"], ["@", "staticmethod", "\n", "def", "_decode_block_string", "(", "block_string", ")", ":", "\n", "        ", "\"\"\"Get a block through a string notation of arguments.\n\n        Args:\n            block_string (str): A string notation of arguments.\n                                Examples: 'r1_k3_s11_e1_i32_o16_se0.25_noskip'.\n\n        Returns:\n            BlockArgs: The namedtuple defined at the top of this file.\n        \"\"\"", "\n", "assert", "isinstance", "(", "block_string", ",", "str", ")", "\n", "\n", "ops", "=", "block_string", ".", "split", "(", "'_'", ")", "\n", "options", "=", "{", "}", "\n", "for", "op", "in", "ops", ":", "\n", "            ", "splits", "=", "re", ".", "split", "(", "r'(\\d.*)'", ",", "op", ")", "\n", "if", "len", "(", "splits", ")", ">=", "2", ":", "\n", "                ", "key", ",", "value", "=", "splits", "[", ":", "2", "]", "\n", "options", "[", "key", "]", "=", "value", "\n", "\n", "# Check stride", "\n", "", "", "assert", "(", "(", "'s'", "in", "options", "and", "len", "(", "options", "[", "'s'", "]", ")", "==", "1", ")", "or", "\n", "(", "len", "(", "options", "[", "'s'", "]", ")", "==", "2", "and", "options", "[", "'s'", "]", "[", "0", "]", "==", "options", "[", "'s'", "]", "[", "1", "]", ")", ")", "\n", "\n", "return", "BlockArgs", "(", "\n", "num_repeat", "=", "int", "(", "options", "[", "'r'", "]", ")", ",", "\n", "kernel_size", "=", "int", "(", "options", "[", "'k'", "]", ")", ",", "\n", "stride", "=", "[", "int", "(", "options", "[", "'s'", "]", "[", "0", "]", ")", "]", ",", "\n", "expand_ratio", "=", "int", "(", "options", "[", "'e'", "]", ")", ",", "\n", "input_filters", "=", "int", "(", "options", "[", "'i'", "]", ")", ",", "\n", "output_filters", "=", "int", "(", "options", "[", "'o'", "]", ")", ",", "\n", "se_ratio", "=", "float", "(", "options", "[", "'se'", "]", ")", "if", "'se'", "in", "options", "else", "None", ",", "\n", "id_skip", "=", "(", "'noskip'", "not", "in", "block_string", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.BlockDecoder._encode_block_string": [[396, 419], ["args.append", "args.append"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_encode_block_string", "(", "block", ")", ":", "\n", "        ", "\"\"\"Encode a block to a string.\n\n        Args:\n            block (namedtuple): A BlockArgs type argument.\n\n        Returns:\n            block_string: A String form of BlockArgs.\n        \"\"\"", "\n", "args", "=", "[", "\n", "'r%d'", "%", "block", ".", "num_repeat", ",", "\n", "'k%d'", "%", "block", ".", "kernel_size", ",", "\n", "'s%d%d'", "%", "(", "block", ".", "strides", "[", "0", "]", ",", "block", ".", "strides", "[", "1", "]", ")", ",", "\n", "'e%s'", "%", "block", ".", "expand_ratio", ",", "\n", "'i%d'", "%", "block", ".", "input_filters", ",", "\n", "'o%d'", "%", "block", ".", "output_filters", "\n", "]", "\n", "if", "0", "<", "block", ".", "se_ratio", "<=", "1", ":", "\n", "            ", "args", ".", "append", "(", "'se%s'", "%", "block", ".", "se_ratio", ")", "\n", "", "if", "block", ".", "id_skip", "is", "False", ":", "\n", "            ", "args", ".", "append", "(", "'noskip'", ")", "\n", "", "return", "'_'", ".", "join", "(", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.BlockDecoder.decode": [[420, 435], ["isinstance", "blocks_args.append", "utils.BlockDecoder._decode_block_string"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.BlockDecoder._decode_block_string"], ["", "@", "staticmethod", "\n", "def", "decode", "(", "string_list", ")", ":", "\n", "        ", "\"\"\"Decode a list of string notations to specify blocks inside the network.\n\n        Args:\n            string_list (list[str]): A list of strings, each string is a notation of block.\n\n        Returns:\n            blocks_args: A list of BlockArgs namedtuples of block args.\n        \"\"\"", "\n", "assert", "isinstance", "(", "string_list", ",", "list", ")", "\n", "blocks_args", "=", "[", "]", "\n", "for", "block_string", "in", "string_list", ":", "\n", "            ", "blocks_args", ".", "append", "(", "BlockDecoder", ".", "_decode_block_string", "(", "block_string", ")", ")", "\n", "", "return", "blocks_args", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.BlockDecoder.encode": [[436, 450], ["block_strings.append", "utils.BlockDecoder._encode_block_string"], "methods", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.BlockDecoder._encode_block_string"], ["", "@", "staticmethod", "\n", "def", "encode", "(", "blocks_args", ")", ":", "\n", "        ", "\"\"\"Encode a list of BlockArgs to a list of strings.\n\n        Args:\n            blocks_args (list[namedtuples]): A list of BlockArgs namedtuples of block args.\n\n        Returns:\n            block_strings: A list of strings, each string is a notation of block.\n        \"\"\"", "\n", "block_strings", "=", "[", "]", "\n", "for", "block", "in", "blocks_args", ":", "\n", "            ", "block_strings", ".", "append", "(", "BlockDecoder", ".", "_encode_block_string", "(", "block", ")", ")", "\n", "", "return", "block_strings", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.round_filters": [[79, 105], ["max", "int", "int"], "function", ["None"], ["", "", "def", "round_filters", "(", "filters", ",", "global_params", ")", ":", "\n", "    ", "\"\"\"Calculate and round number of filters based on width multiplier.\n       Use width_coefficient, depth_divisor and min_depth of global_params.\n\n    Args:\n        filters (int): Filters number to be calculated.\n        global_params (namedtuple): Global params of the model.\n\n    Returns:\n        new_filters: New filters number after calculating.\n    \"\"\"", "\n", "multiplier", "=", "global_params", ".", "width_coefficient", "\n", "if", "not", "multiplier", ":", "\n", "        ", "return", "filters", "\n", "# TODO: modify the params names.", "\n", "#       maybe the names (width_divisor,min_width)", "\n", "#       are more suitable than (depth_divisor,min_depth).", "\n", "", "divisor", "=", "global_params", ".", "depth_divisor", "\n", "min_depth", "=", "global_params", ".", "min_depth", "\n", "filters", "*=", "multiplier", "\n", "min_depth", "=", "min_depth", "or", "divisor", "# pay attention to this line when using min_depth", "\n", "# follow the formula transferred from official TensorFlow implementation", "\n", "new_filters", "=", "max", "(", "min_depth", ",", "int", "(", "filters", "+", "divisor", "/", "2", ")", "//", "divisor", "*", "divisor", ")", "\n", "if", "new_filters", "<", "0.9", "*", "filters", ":", "# prevent rounding by more than 10%", "\n", "        ", "new_filters", "+=", "divisor", "\n", "", "return", "int", "(", "new_filters", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.round_repeats": [[107, 123], ["int", "math.ceil"], "function", ["None"], ["", "def", "round_repeats", "(", "repeats", ",", "global_params", ")", ":", "\n", "    ", "\"\"\"Calculate module's repeat number of a block based on depth multiplier.\n       Use depth_coefficient of global_params.\n\n    Args:\n        repeats (int): num_repeat to be calculated.\n        global_params (namedtuple): Global params of the model.\n\n    Returns:\n        new repeat: New repeat number after calculating.\n    \"\"\"", "\n", "multiplier", "=", "global_params", ".", "depth_coefficient", "\n", "if", "not", "multiplier", ":", "\n", "        ", "return", "repeats", "\n", "# follow the formula transferred from official TensorFlow implementation", "\n", "", "return", "int", "(", "math", ".", "ceil", "(", "multiplier", "*", "repeats", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.drop_connect": [[125, 151], ["torch.rand", "torch.floor"], "function", ["None"], ["", "def", "drop_connect", "(", "inputs", ",", "p", ",", "training", ")", ":", "\n", "    ", "\"\"\"Drop connect.\n\n    Args:\n        input (tensor: BCWH): Input of this structure.\n        p (float: 0.0~1.0): Probability of drop connection.\n        training (bool): The running mode.\n\n    Returns:\n        output: Output after drop connection.\n    \"\"\"", "\n", "assert", "0", "<=", "p", "<=", "1", ",", "'p must be in range of [0,1]'", "\n", "\n", "if", "not", "training", ":", "\n", "        ", "return", "inputs", "\n", "\n", "", "batch_size", "=", "inputs", ".", "shape", "[", "0", "]", "\n", "keep_prob", "=", "1", "-", "p", "\n", "\n", "# generate binary_tensor mask according to probability (p for 0, 1-p for 1)", "\n", "random_tensor", "=", "keep_prob", "\n", "random_tensor", "+=", "torch", ".", "rand", "(", "[", "batch_size", ",", "1", ",", "1", ",", "1", "]", ",", "dtype", "=", "inputs", ".", "dtype", ",", "device", "=", "inputs", ".", "device", ")", "\n", "binary_tensor", "=", "torch", ".", "floor", "(", "random_tensor", ")", "\n", "\n", "output", "=", "inputs", "/", "keep_prob", "*", "binary_tensor", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.get_width_and_height_from_size": [[153, 168], ["isinstance", "isinstance", "isinstance", "TypeError"], "function", ["None"], ["", "def", "get_width_and_height_from_size", "(", "x", ")", ":", "\n", "    ", "\"\"\"Obtain height and width from x.\n\n    Args:\n        x (int, tuple or list): Data size.\n\n    Returns:\n        size: A tuple or list (H,W).\n    \"\"\"", "\n", "if", "isinstance", "(", "x", ",", "int", ")", ":", "\n", "        ", "return", "x", ",", "x", "\n", "", "if", "isinstance", "(", "x", ",", "list", ")", "or", "isinstance", "(", "x", ",", "tuple", ")", ":", "\n", "        ", "return", "x", "\n", "", "else", ":", "\n", "        ", "raise", "TypeError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.calculate_output_image_size": [[170, 188], ["utils.get_width_and_height_from_size", "int", "int", "isinstance", "math.ceil", "math.ceil"], "function", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.get_width_and_height_from_size"], ["", "", "def", "calculate_output_image_size", "(", "input_image_size", ",", "stride", ")", ":", "\n", "    ", "\"\"\"Calculates the output image size when using Conv2dSamePadding with a stride.\n       Necessary for static padding. Thanks to mannatsingh for pointing this out.\n\n    Args:\n        input_image_size (int, tuple or list): Size of input image.\n        stride (int, tuple or list): Conv2d operation's stride.\n\n    Returns:\n        output_image_size: A list [H,W].\n    \"\"\"", "\n", "if", "input_image_size", "is", "None", ":", "\n", "        ", "return", "None", "\n", "", "image_height", ",", "image_width", "=", "get_width_and_height_from_size", "(", "input_image_size", ")", "\n", "stride", "=", "stride", "if", "isinstance", "(", "stride", ",", "int", ")", "else", "stride", "[", "0", "]", "\n", "image_height", "=", "int", "(", "math", ".", "ceil", "(", "image_height", "/", "stride", ")", ")", "\n", "image_width", "=", "int", "(", "math", ".", "ceil", "(", "image_width", "/", "stride", ")", ")", "\n", "return", "[", "image_height", ",", "image_width", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.get_same_padding_conv2d": [[195, 209], ["functools.partial"], "function", ["None"], ["", "def", "get_same_padding_conv2d", "(", "image_size", "=", "None", ")", ":", "\n", "    ", "\"\"\"Chooses static padding if you have specified an image size, and dynamic padding otherwise.\n       Static padding is necessary for ONNX exporting of models.\n\n    Args:\n        image_size (int or tuple): Size of the image.\n\n    Returns:\n        Conv2dDynamicSamePadding or Conv2dStaticSamePadding.\n    \"\"\"", "\n", "if", "image_size", "is", "None", ":", "\n", "        ", "return", "Conv2dDynamicSamePadding", "\n", "", "else", ":", "\n", "        ", "return", "partial", "(", "Conv2dStaticSamePadding", ",", "image_size", "=", "image_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.get_same_padding_maxPool2d": [[275, 289], ["functools.partial"], "function", ["None"], ["", "", "def", "get_same_padding_maxPool2d", "(", "image_size", "=", "None", ")", ":", "\n", "    ", "\"\"\"Chooses static padding if you have specified an image size, and dynamic padding otherwise.\n       Static padding is necessary for ONNX exporting of models.\n\n    Args:\n        image_size (int or tuple): Size of the image.\n\n    Returns:\n        MaxPool2dDynamicSamePadding or MaxPool2dStaticSamePadding.\n    \"\"\"", "\n", "if", "image_size", "is", "None", ":", "\n", "        ", "return", "MaxPool2dDynamicSamePadding", "\n", "", "else", ":", "\n", "        ", "return", "partial", "(", "MaxPool2dStaticSamePadding", ",", "image_size", "=", "image_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.efficientnet_params": [[452, 475], ["None"], "function", ["None"], ["", "", "def", "efficientnet_params", "(", "model_name", ")", ":", "\n", "    ", "\"\"\"Map EfficientNet model name to parameter coefficients.\n\n    Args:\n        model_name (str): Model name to be queried.\n\n    Returns:\n        params_dict[model_name]: A (width,depth,res,dropout) tuple.\n    \"\"\"", "\n", "params_dict", "=", "{", "\n", "# Coefficients:   width,depth,res,dropout", "\n", "'efficientnet-b0'", ":", "(", "1.0", ",", "1.0", ",", "224", ",", "0.2", ")", ",", "\n", "'efficientnet-b1'", ":", "(", "1.0", ",", "1.1", ",", "240", ",", "0.2", ")", ",", "\n", "'efficientnet-b2'", ":", "(", "1.1", ",", "1.2", ",", "260", ",", "0.3", ")", ",", "\n", "'efficientnet-b3'", ":", "(", "1.2", ",", "1.4", ",", "300", ",", "0.3", ")", ",", "\n", "'efficientnet-b4'", ":", "(", "1.4", ",", "1.8", ",", "380", ",", "0.4", ")", ",", "\n", "'efficientnet-b5'", ":", "(", "1.6", ",", "2.2", ",", "456", ",", "0.4", ")", ",", "\n", "'efficientnet-b6'", ":", "(", "1.8", ",", "2.6", ",", "528", ",", "0.5", ")", ",", "\n", "'efficientnet-b7'", ":", "(", "2.0", ",", "3.1", ",", "600", ",", "0.5", ")", ",", "\n", "'efficientnet-b8'", ":", "(", "2.2", ",", "3.6", ",", "672", ",", "0.5", ")", ",", "\n", "'efficientnet-l2'", ":", "(", "4.3", ",", "5.3", ",", "800", ",", "0.5", ")", ",", "\n", "}", "\n", "return", "params_dict", "[", "model_name", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.efficientnet": [[477, 524], ["utils.BlockDecoder.decode", "GlobalParams"], "function", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.BlockDecoder.decode"], ["", "def", "efficientnet", "(", "width_coefficient", "=", "None", ",", "depth_coefficient", "=", "None", ",", "image_size", "=", "None", ",", "\n", "dropout_rate", "=", "0.2", ",", "drop_connect_rate", "=", "0.2", ",", "num_classes", "=", "1000", ",", "include_top", "=", "True", ")", ":", "\n", "    ", "\"\"\"Create BlockArgs and GlobalParams for efficientnet model.\n\n    Args:\n        width_coefficient (float)\n        depth_coefficient (float)\n        image_size (int)\n        dropout_rate (float)\n        drop_connect_rate (float)\n        num_classes (int)\n\n        Meaning as the name suggests.\n\n    Returns:\n        blocks_args, global_params.\n    \"\"\"", "\n", "\n", "# Blocks args for the whole model(efficientnet-b0 by default)", "\n", "# It will be modified in the construction of EfficientNet Class according to model", "\n", "blocks_args", "=", "[", "\n", "'r1_k3_s11_e1_i32_o16_se0.25'", ",", "\n", "'r2_k3_s22_e6_i16_o24_se0.25'", ",", "\n", "'r2_k5_s22_e6_i24_o40_se0.25'", ",", "\n", "'r3_k3_s22_e6_i40_o80_se0.25'", ",", "\n", "'r3_k5_s11_e6_i80_o112_se0.25'", ",", "\n", "'r4_k5_s22_e6_i112_o192_se0.25'", ",", "\n", "'r1_k3_s11_e6_i192_o320_se0.25'", ",", "\n", "]", "\n", "blocks_args", "=", "BlockDecoder", ".", "decode", "(", "blocks_args", ")", "\n", "\n", "global_params", "=", "GlobalParams", "(", "\n", "width_coefficient", "=", "width_coefficient", ",", "\n", "depth_coefficient", "=", "depth_coefficient", ",", "\n", "image_size", "=", "image_size", ",", "\n", "dropout_rate", "=", "dropout_rate", ",", "\n", "\n", "num_classes", "=", "num_classes", ",", "\n", "batch_norm_momentum", "=", "0.99", ",", "\n", "batch_norm_epsilon", "=", "1e-3", ",", "\n", "drop_connect_rate", "=", "drop_connect_rate", ",", "\n", "depth_divisor", "=", "8", ",", "\n", "min_depth", "=", "None", ",", "\n", "include_top", "=", "include_top", ",", "\n", ")", "\n", "\n", "return", "blocks_args", ",", "global_params", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.get_model_params": [[526, 547], ["model_name.startswith", "utils.efficientnet_params", "utils.efficientnet", "NotImplementedError", "global_params._replace._replace"], "function", ["home.repos.pwc.inspect_result.moothes_salod.encoder.utils.efficientnet_params", "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.efficientnet"], ["", "def", "get_model_params", "(", "model_name", ",", "override_params", ")", ":", "\n", "    ", "\"\"\"Get the block args and global params for a given model name.\n\n    Args:\n        model_name (str): Model's name.\n        override_params (dict): A dict to modify global_params.\n\n    Returns:\n        blocks_args, global_params\n    \"\"\"", "\n", "if", "model_name", ".", "startswith", "(", "'efficientnet'", ")", ":", "\n", "        ", "w", ",", "d", ",", "s", ",", "p", "=", "efficientnet_params", "(", "model_name", ")", "\n", "# note: all models have drop connect rate = 0.2", "\n", "blocks_args", ",", "global_params", "=", "efficientnet", "(", "\n", "width_coefficient", "=", "w", ",", "depth_coefficient", "=", "d", ",", "dropout_rate", "=", "p", ",", "image_size", "=", "s", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'model name is not pre-defined: {}'", ".", "format", "(", "model_name", ")", ")", "\n", "", "if", "override_params", ":", "\n", "# ValueError will be raised here if override_params has fields not included in global_params.", "\n", "        ", "global_params", "=", "global_params", ".", "_replace", "(", "**", "override_params", ")", "\n", "", "return", "blocks_args", ",", "global_params", "\n", "\n"]], "home.repos.pwc.inspect_result.moothes_salod.encoder.utils.load_pretrained_weights": [[579, 611], ["isinstance", "print", "torch.load", "torch.utils.model_zoo.load_url", "model.load_state_dict", "model_zoo.load_url.pop", "model_zoo.load_url.pop", "model.load_state_dict", "set", "set"], "function", ["None"], ["def", "load_pretrained_weights", "(", "model", ",", "model_name", ",", "weights_path", "=", "None", ",", "load_fc", "=", "True", ",", "advprop", "=", "False", ")", ":", "\n", "    ", "\"\"\"Loads pretrained weights from weights path or download using url.\n\n    Args:\n        model (Module): The whole model of efficientnet.\n        model_name (str): Model name of efficientnet.\n        weights_path (None or str):\n            str: path to pretrained weights file on the local disk.\n            None: use pretrained weights downloaded from the Internet.\n        load_fc (bool): Whether to load pretrained weights for fc layer at the end of the model.\n        advprop (bool): Whether to load pretrained weights\n                        trained with advprop (valid when weights_path is None).\n    \"\"\"", "\n", "if", "isinstance", "(", "weights_path", ",", "str", ")", ":", "\n", "        ", "state_dict", "=", "torch", ".", "load", "(", "weights_path", ")", "\n", "", "else", ":", "\n", "# AutoAugment or Advprop (different preprocessing)", "\n", "        ", "url_map_", "=", "url_map_advprop", "if", "advprop", "else", "url_map", "\n", "state_dict", "=", "model_zoo", ".", "load_url", "(", "url_map_", "[", "model_name", "]", ")", "\n", "\n", "", "if", "load_fc", ":", "\n", "        ", "ret", "=", "model", ".", "load_state_dict", "(", "state_dict", ",", "strict", "=", "False", ")", "\n", "assert", "not", "ret", ".", "missing_keys", ",", "'Missing keys when loading pretrained weights: {}'", ".", "format", "(", "ret", ".", "missing_keys", ")", "\n", "", "else", ":", "\n", "        ", "state_dict", ".", "pop", "(", "'_fc.weight'", ")", "\n", "state_dict", ".", "pop", "(", "'_fc.bias'", ")", "\n", "ret", "=", "model", ".", "load_state_dict", "(", "state_dict", ",", "strict", "=", "False", ")", "\n", "assert", "set", "(", "ret", ".", "missing_keys", ")", "==", "set", "(", "\n", "[", "'_fc.weight'", ",", "'_fc.bias'", "]", ")", ",", "'Missing keys when loading pretrained weights: {}'", ".", "format", "(", "ret", ".", "missing_keys", ")", "\n", "", "assert", "not", "ret", ".", "unexpected_keys", ",", "'Missing keys when loading pretrained weights: {}'", ".", "format", "(", "ret", ".", "unexpected_keys", ")", "\n", "\n", "print", "(", "'Loaded pretrained weights for {}'", ".", "format", "(", "model_name", ")", ")", "\n", "", ""]]}