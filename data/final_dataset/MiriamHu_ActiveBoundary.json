{"home.repos.pwc.inspect_result.MiriamHu_ActiveBoundary.None.options.set": [[9, 74], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "os.getcwd", "keras.utils.data_utils.get_file", "os.path.isdir", "os.mkdir", "keras.utils.data_utils.get_file", "keras.utils.data_utils.get_file", "os.path.join", "os.path.join", "os.path.isdir", "os.mkdir", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "datetime.datetime.now().strftime", "datetime.datetime.now"], "function", ["None"], ["def", "set", "(", ")", ":", "\n", "# parse input arguments", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\"query_strategy\"", ",", "metavar", "=", "\"query_strategy\"", ",", "help", "=", "\"Type of query strategy.\"", ",", "\n", "choices", "=", "[", "\"random\"", ",", "\"uncertainty\"", ",", "\"uncertainty-dense\"", ",", "\"clustercentroids\"", "]", ")", "\n", "parser", ".", "add_argument", "(", "\"--percentage_labeled\"", ",", "type", "=", "float", ",", "default", "=", "0.2", ",", "\n", "help", "=", "\"Percentage of data set that should be initially labeled.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--al_batch_size\"", ",", "type", "=", "int", ",", "default", "=", "1", ",", "\n", "help", "=", "\"Active learning batch size. The number of samples \"", "\n", "\"that will be labeled on each active learning iteration.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--iterations\"", ",", "type", "=", "int", ",", "default", "=", "150", ",", "\n", "help", "=", "\"Number of active learning iterations. If batch size = 1, \"", "\n", "\"this equals the number of queries.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--enable_gpu\"", ",", "action", "=", "\"store_true\"", ",", "help", "=", "\"Enable gpu to generate line queries (image rows).\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--dataset\"", ",", "default", "=", "\"shoebag\"", ",", "help", "=", "\"The dataset\"", ",", "choices", "=", "[", "\"shoebag\"", ",", "\"mnist08\"", ",", "\"svhn08\"", "]", ")", "\n", "parser", ".", "add_argument", "(", "\"--oracle_type\"", ",", "help", "=", "\"The type of oracle.\"", ",", "default", "=", "\"line_labeler\"", ",", "\n", "choices", "=", "[", "\"line_labeler\"", ",", "\"noisy_line_labeler\"", ",", "\"human_line_labeler\"", "]", ")", "\n", "parser", ".", "add_argument", "(", "\"--save_path\"", ",", "default", "=", "\"results_\"", "+", "datetime", ".", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "\"%Y-%m-%d_%H%M\"", ")", ",", "help", "=", "\"Save path for all algorithm output.\"", ")", "\n", "\n", "opt", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "# --- below are automatically set ---", "\n", "opt", ".", "hyperparameters", "=", "{", "\"lambda_r\"", ":", "1.0", ",", "\n", "\"gamma\"", ":", "0.5", ",", "\n", "\"weight_hinge\"", ":", "0.5", ",", "\n", "\"learning_rate\"", ":", "0.005", ",", "\n", "\"decay\"", ":", "0.0", ",", "\n", "\"factor\"", ":", "0.9", ",", "\n", "\"interval\"", ":", "5", ",", "\n", "\"batch_size\"", ":", "32", ",", "\n", "\"max_epochs\"", ":", "100", "\n", "}", "\n", "opt", ".", "n_images_line_query", "=", "14", "\n", "opt", ".", "cluster_batch_size", "=", "5", "# only used in case the query strategy is \"clustercentroids\".", "\n", "opt", ".", "std_noise", "=", "0.5", "# only used when noisy oracle is used.", "\n", "opt", ".", "base_precision", "=", "0.25", "# distance between two images on line query. So the precision with which humans can", "\n", "# label (because images uniformly sampled on query line).", "\n", "\n", "if", "opt", ".", "dataset", "==", "\"shoebag\"", ":", "\n", "        ", "opt", ".", "main_loop_path", "=", "\"models/shoebag_256dim.tar\"", "\n", "opt", ".", "hdf5_dataset", "=", "\"data/shoebag.hdf5\"", "\n", "opt", ".", "hdf5_dataset_encoded", "=", "\"data/shoebag_encoded.hdf5\"", "\n", "", "elif", "opt", ".", "dataset", "==", "\"mnist08\"", ":", "\n", "        ", "opt", ".", "main_loop_path", "=", "\"models/mnist_0_8_100dim.tar\"", "\n", "opt", ".", "hdf5_dataset", "=", "\"data/mnist_train_test_0_8.hdf5\"", "\n", "opt", ".", "hdf5_dataset_encoded", "=", "\"data/mnist_train_test_0_8_encoded.hdf5\"", "\n", "", "elif", "opt", ".", "dataset", "==", "\"svhn08\"", ":", "\n", "        ", "opt", ".", "main_loop_path", "=", "\"models/svhn_10_8_100dim.tar\"", "\n", "opt", ".", "hdf5_dataset", "=", "\"data/svhn_train_test_10_8.hdf5\"", "\n", "opt", ".", "hdf5_dataset_encoded", "=", "\"data/svhn_train_test_10_8_encoded.hdf5\"", "\n", "\n", "# Download required data and model", "\n", "", "if", "not", "os", ".", "path", ".", "isdir", "(", "\"data\"", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "\"data\"", ")", "\n", "", "cwd", "=", "os", ".", "getcwd", "(", ")", "\n", "if", "opt", ".", "enable_gpu", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "isdir", "(", "\"models\"", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "\"models\"", ")", "\n", "", "get_file", "(", "os", ".", "path", ".", "join", "(", "cwd", ",", "opt", ".", "main_loop_path", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "\"https://activeboundary.blob.core.windows.net/\"", ",", "opt", ".", "main_loop_path", ")", ")", "\n", "get_file", "(", "os", ".", "path", ".", "join", "(", "cwd", ",", "opt", ".", "hdf5_dataset", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "\"https://activeboundary.blob.core.windows.net/\"", ",", "opt", ".", "hdf5_dataset", ")", ")", "\n", "", "get_file", "(", "os", ".", "path", ".", "join", "(", "cwd", ",", "opt", ".", "hdf5_dataset_encoded", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "\"https://activeboundary.blob.core.windows.net/\"", ",", "opt", ".", "hdf5_dataset_encoded", ")", ")", "\n", "return", "opt", "\n", "", ""]], "home.repos.pwc.inspect_result.MiriamHu_ActiveBoundary.None.plot_utils.plot_base": [[12, 26], ["matplotlib.figure", "plt.figure.suptitle", "matplotlib.subplot", "plot_utils.plot_data_points", "plot_utils.plot_intersection_points", "plot_utils.plot_groundtruth_decision_boundary", "plot_utils.plot_estimated_decision_boundary", "plt.subplot.get_position", "plt.subplot.set_position", "plt.subplot.legend", "matplotlib.show"], "function", ["home.repos.pwc.inspect_result.MiriamHu_ActiveBoundary.None.plot_utils.plot_data_points", "home.repos.pwc.inspect_result.MiriamHu_ActiveBoundary.None.plot_utils.plot_intersection_points", "home.repos.pwc.inspect_result.MiriamHu_ActiveBoundary.None.plot_utils.plot_groundtruth_decision_boundary", "home.repos.pwc.inspect_result.MiriamHu_ActiveBoundary.None.plot_utils.plot_estimated_decision_boundary"], ["def", "plot_base", "(", "dataset", ",", "labeler", ",", "model", ",", "iteration", ",", "show", "=", "True", ")", ":", "\n", "    ", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "fig", ".", "suptitle", "(", "\"Iteration %d\"", "%", "iteration", ")", "\n", "ax", "=", "plt", ".", "subplot", "(", "111", ")", "\n", "plot_data_points", "(", "dataset", ".", "data", "[", "\"features\"", "]", ",", "dataset", ".", "data", "[", "\"targets\"", "]", ",", "dataset", ".", "mu", ",", "dataset", ".", "unlabeled_class", ")", "\n", "plot_intersection_points", "(", "dataset", ".", "db_points", ",", "dataset", ".", "mu", ")", "\n", "plot_groundtruth_decision_boundary", "(", "labeler", ".", "w", ",", "labeler", ".", "b0", ",", "dataset", ".", "mu", ")", "\n", "plot_estimated_decision_boundary", "(", "model", ".", "w", ",", "model", ".", "b", ",", "dataset", ".", "mu", ")", "\n", "box", "=", "ax", ".", "get_position", "(", ")", "\n", "ax", ".", "set_position", "(", "[", "box", ".", "x0", ",", "box", ".", "y0", ",", "box", ".", "width", "*", "0.8", ",", "box", ".", "height", "]", ")", "\n", "# Put a legend to the right of the current axis", "\n", "ax", ".", "legend", "(", "loc", "=", "'center left'", ",", "bbox_to_anchor", "=", "(", "1", ",", "0.5", ")", ",", "numpoints", "=", "1", ")", "\n", "if", "show", ":", "\n", "        ", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MiriamHu_ActiveBoundary.None.plot_utils.plot_after_query": [[28, 32], ["plot_utils.plot_base", "plot_utils.plot_line_query_segment", "matplotlib.show"], "function", ["home.repos.pwc.inspect_result.MiriamHu_ActiveBoundary.None.plot_utils.plot_base", "home.repos.pwc.inspect_result.MiriamHu_ActiveBoundary.None.plot_utils.plot_line_query_segment"], ["", "", "def", "plot_after_query", "(", "line_segment", ",", "point_query", ",", "dataset", ",", "labeler", ",", "model", ",", "iteration", ")", ":", "\n", "    ", "plot_base", "(", "dataset", ",", "labeler", ",", "model", ",", "iteration", ",", "show", "=", "False", ")", "\n", "plot_line_query_segment", "(", "line_segment", ",", "point_query", ",", "dataset", ".", "mu", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MiriamHu_ActiveBoundary.None.plot_utils.plot_after_label": [[34, 49], ["matplotlib.figure", "plt.figure.suptitle", "matplotlib.subplot", "plot_utils.plot_data_points", "plot_utils.plot_intersection_points", "plot_utils.plot_groundtruth_decision_boundary", "plot_utils.plot_estimated_decision_boundary", "plt.subplot.get_position", "plt.subplot.set_position", "plt.subplot.legend", "plot_utils.plot_line_query_segment", "matplotlib.show"], "function", ["home.repos.pwc.inspect_result.MiriamHu_ActiveBoundary.None.plot_utils.plot_data_points", "home.repos.pwc.inspect_result.MiriamHu_ActiveBoundary.None.plot_utils.plot_intersection_points", "home.repos.pwc.inspect_result.MiriamHu_ActiveBoundary.None.plot_utils.plot_groundtruth_decision_boundary", "home.repos.pwc.inspect_result.MiriamHu_ActiveBoundary.None.plot_utils.plot_estimated_decision_boundary", "home.repos.pwc.inspect_result.MiriamHu_ActiveBoundary.None.plot_utils.plot_line_query_segment"], ["", "def", "plot_after_label", "(", "line_segment", ",", "point_query", ",", "dataset", ",", "labeler", ",", "model", ",", "iteration", ")", ":", "\n", "    ", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "fig", ".", "suptitle", "(", "\"Iteration %d\"", "%", "iteration", ")", "\n", "ax", "=", "plt", ".", "subplot", "(", "111", ")", "\n", "plot_data_points", "(", "dataset", ".", "data", "[", "\"features\"", "]", ",", "dataset", ".", "data", "[", "\"targets\"", "]", ",", "dataset", ".", "mu", ",", "dataset", ".", "unlabeled_class", ")", "\n", "plot_intersection_points", "(", "dataset", ".", "db_points", ",", "dataset", ".", "mu", ")", "\n", "plot_groundtruth_decision_boundary", "(", "labeler", ".", "w", ",", "labeler", ".", "b0", ",", "dataset", ".", "mu", ")", "\n", "plot_estimated_decision_boundary", "(", "model", ".", "w", ",", "model", ".", "b", ",", "dataset", ".", "mu", ",", "old_mu", "=", "dataset", ".", "_old_mu", ")", "\n", "box", "=", "ax", ".", "get_position", "(", ")", "\n", "ax", ".", "set_position", "(", "[", "box", ".", "x0", ",", "box", ".", "y0", ",", "box", ".", "width", "*", "0.8", ",", "box", ".", "height", "]", ")", "\n", "# Put a legend to the right of the current axis", "\n", "ax", ".", "legend", "(", "loc", "=", "'center left'", ",", "bbox_to_anchor", "=", "(", "1", ",", "0.5", ")", ",", "numpoints", "=", "1", ")", "\n", "updated_line_segment", "=", "line_segment", "+", "dataset", ".", "_old_mu", "-", "dataset", ".", "mu", "\n", "plot_line_query_segment", "(", "updated_line_segment", ",", "point_query", ",", "dataset", ".", "mu", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MiriamHu_ActiveBoundary.None.plot_utils.plot_data_points": [[51, 67], ["matplotlib.ylim", "matplotlib.xlim", "numpy.unique", "range", "matplotlib.plot", "len", "matplotlib.plot", "str", "int"], "function", ["None"], ["", "def", "plot_data_points", "(", "X", ",", "y", ",", "mu", ",", "unlabeled_class", ",", "labeled_colour", "=", "\"g\"", ",", "unlabeled_marker", "=", "\"o\"", ",", "markers", "=", "(", "\"s\"", ",", "\"^\"", ")", ")", ":", "\n", "    ", "all_points", "=", "X", "\n", "if", "centered_in_old", ":", "\n", "        ", "all_points", "=", "X", "+", "mu", "\n", "", "plt", ".", "ylim", "(", "-", "10", ",", "10", ")", "\n", "# plt.ylim(0,5)", "\n", "# plt.xlim([min(all_points[:,0]) - 1, max(all_points[:,0]) + 1])", "\n", "plt", ".", "xlim", "(", "-", "10", ",", "10", ")", "\n", "\n", "classes", "=", "np", ".", "unique", "(", "y", "[", "y", "!=", "unlabeled_class", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "classes", ")", ")", ":", "\n", "        ", "points", "=", "all_points", "[", "(", "y", "==", "classes", "[", "i", "]", ")", ".", "flatten", "(", ")", ",", ":", "]", "\n", "plt", ".", "plot", "(", "points", "[", ":", ",", "0", "]", ",", "points", "[", ":", ",", "1", "]", ",", "markers", "[", "i", "]", "+", "labeled_colour", ",", "label", "=", "\"Class \"", "+", "str", "(", "int", "(", "classes", "[", "i", "]", ")", ")", ")", "\n", "", "unlabeled_points", "=", "all_points", "[", "(", "y", "==", "unlabeled_class", ")", ".", "flatten", "(", ")", ",", ":", "]", "\n", "plt", ".", "plot", "(", "unlabeled_points", "[", ":", ",", "0", "]", ",", "unlabeled_points", "[", ":", ",", "1", "]", ",", "unlabeled_marker", "+", "labeled_colour", ",", "alpha", "=", "0.5", ",", "\n", "label", "=", "\"Unlabeled\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MiriamHu_ActiveBoundary.None.plot_utils.plot_estimated_decision_boundary": [[69, 79], ["numpy.linspace", "matplotlib.plot", "numpy.array", "y"], "function", ["None"], ["", "def", "plot_estimated_decision_boundary", "(", "w", ",", "b", ",", "mu", ",", "colour", "=", "\"g\"", ",", "old_mu", "=", "None", ")", ":", "\n", "    ", "a", "=", "(", "-", "w", "[", "0", ",", "0", "]", "/", "w", "[", "1", ",", "0", "]", ")", "\n", "y", "=", "lambda", "x", ":", "a", "*", "x", "-", "b", "/", "w", "[", "1", ",", "0", "]", "\n", "x", "=", "np", ".", "linspace", "(", "-", "10", ",", "10", ")", "\n", "decision_boundary", "=", "np", ".", "array", "(", "[", "x", ",", "y", "(", "x", ")", "]", ")", ".", "T", "\n", "if", "old_mu", "is", "not", "None", ":", "\n", "        ", "decision_boundary", "=", "decision_boundary", "+", "old_mu", "-", "mu", "\n", "", "if", "centered_in_old", ":", "\n", "        ", "decision_boundary", "=", "decision_boundary", "+", "mu", "\n", "", "plt", ".", "plot", "(", "decision_boundary", "[", ":", ",", "0", "]", ",", "decision_boundary", "[", ":", ",", "1", "]", ",", "\"-\"", "+", "colour", ",", "label", "=", "\"Estimated decision boundary\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MiriamHu_ActiveBoundary.None.plot_utils.plot_groundtruth_decision_boundary": [[81, 89], ["numpy.linspace", "matplotlib.plot", "numpy.array", "y"], "function", ["None"], ["", "def", "plot_groundtruth_decision_boundary", "(", "w", ",", "b", ",", "mu", ",", "colour", "=", "\"k\"", ")", ":", "\n", "    ", "a", "=", "(", "-", "w", "[", "0", ",", "0", "]", "/", "w", "[", "1", ",", "0", "]", ")", "\n", "y", "=", "lambda", "x", ":", "a", "*", "x", "-", "b", "/", "w", "[", "1", ",", "0", "]", "\n", "x", "=", "np", ".", "linspace", "(", "-", "10", ",", "10", ")", "\n", "decision_boundary", "=", "np", ".", "array", "(", "[", "x", ",", "y", "(", "x", ")", "]", ")", ".", "T", "\n", "if", "not", "centered_in_old", ":", "\n", "        ", "decision_boundary", "=", "decision_boundary", "-", "mu", "\n", "", "plt", ".", "plot", "(", "decision_boundary", "[", ":", ",", "0", "]", ",", "decision_boundary", "[", ":", ",", "1", "]", ",", "colour", "+", "'-'", ",", "label", "=", "\"Ground truth decision boundary\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MiriamHu_ActiveBoundary.None.plot_utils.plot_intersection_points": [[91, 97], ["matplotlib.plot"], "function", ["None"], ["", "def", "plot_intersection_points", "(", "points", ",", "mu", ",", "colour", "=", "\"g\"", ",", "marker", "=", "\"x\"", ")", ":", "\n", "    ", "if", "points", "is", "not", "None", ":", "\n", "        ", "p", "=", "points", "\n", "if", "centered_in_old", ":", "\n", "            ", "p", "=", "points", "+", "mu", "\n", "", "plt", ".", "plot", "(", "p", "[", ":", ",", "0", "]", ",", "p", "[", ":", ",", "1", "]", ",", "colour", "+", "marker", ",", "label", "=", "\"Intersection point\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MiriamHu_ActiveBoundary.None.plot_utils.plot_line_query_segment": [[99, 113], ["matplotlib.plot", "matplotlib.plot"], "function", ["None"], ["", "", "def", "plot_line_query_segment", "(", "line_segment", ",", "point_query", ",", "mu", ",", "colour", "=", "\"g\"", ")", ":", "\n", "    ", "\"\"\"\n\n    :param line_segment: shape (n_points, n_features)\n    :return:\n    \"\"\"", "\n", "point", "=", "point_query", "\n", "line", "=", "line_segment", "\n", "if", "centered_in_old", ":", "\n", "# add mu to line_segment and point_query", "\n", "        ", "point", "=", "point_query", "+", "mu", "\n", "line", "=", "line_segment", "+", "mu", "\n", "", "plt", ".", "plot", "(", "point", "[", "0", "]", ",", "point", "[", "1", "]", ",", "'o'", "+", "colour", ")", "\n", "plt", ".", "plot", "(", "line", "[", ":", ",", "0", "]", ",", "line", "[", ":", ",", "1", "]", ",", "'--'", "+", "colour", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.MiriamHu_ActiveBoundary.None.generative_model.GenerativeALIModel.__init__": [[11, 14], ["generative_model.GenerativeALIModel._load_model", "isinstance"], "methods", ["home.repos.pwc.inspect_result.MiriamHu_ActiveBoundary.None.generative_model.GenerativeALIModel._load_model"], ["    ", "def", "__init__", "(", "self", ",", "main_loop_path", ")", ":", "\n", "        ", "self", ".", "ali", "=", "self", ".", "_load_model", "(", "main_loop_path", ")", "\n", "assert", "(", "isinstance", "(", "self", ".", "ali", ",", "ALI", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MiriamHu_ActiveBoundary.None.generative_model.GenerativeALIModel._load_model": [[15, 20], ["open", "blocks.serialization.load"], "methods", ["None"], ["", "def", "_load_model", "(", "self", ",", "main_loop_path", ")", ":", "\n", "        ", "with", "open", "(", "main_loop_path", ",", "'rb'", ")", "as", "src", ":", "\n", "            ", "main_loop", "=", "load", "(", "src", ",", "use_cpickle", "=", "True", ")", "\n", "", "ali", ",", "=", "main_loop", ".", "model", ".", "top_bricks", "\n", "return", "ali", "\n", "\n"]], "home.repos.pwc.inspect_result.MiriamHu_ActiveBoundary.None.generative_model.GenerativeALIModel.encode": [[21, 30], ["theano.tensor.tensor4", "theano.function", "theano.function.", "generative_model.GenerativeALIModel.ali.encoder.apply"], "methods", ["None"], ["", "def", "encode", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"\n\n        :param x: (n_samples, n_channels, height, width)\n        :return:\n        \"\"\"", "\n", "xs", "=", "tensor", ".", "tensor4", "(", "'features'", ")", "\n", "encode", "=", "theano", ".", "function", "(", "[", "xs", "]", ",", "self", ".", "ali", ".", "encoder", ".", "apply", "(", "xs", ")", ")", "\n", "return", "encode", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MiriamHu_ActiveBoundary.None.generative_model.GenerativeALIModel.decode": [[31, 47], ["z.reshape.reshape.reshape", "theano.tensor.tensor4", "theano.function", "theano.function.", "numpy.transpose", "generative_model.GenerativeALIModel.ali.decoder.apply", "z.reshape.reshape.reshape"], "methods", ["None"], ["", "def", "decode", "(", "self", ",", "z", ")", ":", "\n", "        ", "\"\"\"\n\n        :param z: of shape (n_dim,) or (n_dim, 1) or (n_samples, n_dim)\n        :return:\n        \"\"\"", "\n", "try", ":", "\n", "            ", "z", ".", "shape", "[", "1", "]", "\n", "", "except", "IndexError", ":", "\n", "            ", "z", "=", "z", ".", "reshape", "(", "1", ",", "z", ".", "shape", "[", "0", "]", ")", "\n", "", "if", "z", ".", "shape", "[", "1", "]", "==", "1", "and", "z", ".", "shape", "[", "0", "]", ">", "1", ":", "\n", "            ", "z", "=", "np", ".", "transpose", "(", "z", ")", "\n", "", "z", "=", "z", ".", "reshape", "(", "z", ".", "shape", "[", "0", "]", ",", "z", ".", "shape", "[", "1", "]", ",", "1", ",", "1", ")", "\n", "zs", "=", "tensor", ".", "tensor4", "(", "'z'", ")", "\n", "decode", "=", "theano", ".", "function", "(", "[", "zs", "]", ",", "self", ".", "ali", ".", "decoder", ".", "apply", "(", "zs", ")", ")", "\n", "return", "decode", "(", "z", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.MiriamHu_ActiveBoundary.None.callbacks.LR_scheduler_factory": [[5, 21], ["keras.callbacks.LearningRateScheduler", "int", "print"], "function", ["None"], ["def", "LR_scheduler_factory", "(", "initial_lr", ",", "interval", "=", "2", ",", "factor", "=", "0.75", ")", ":", "\n", "    ", "\"\"\"\n    :param initial_lr: Initial learning rate\n    :param interval: change learning rate every n epochs\n    :param factor: change lr by multiplying with this factor\n    :return:\n    \"\"\"", "\n", "\n", "# half learning rate every 10 epochs", "\n", "def", "scheduler", "(", "epochs", ")", ":", "\n", "        ", "decay_times", "=", "int", "(", "epochs", "/", "interval", ")", "\n", "lr", "=", "initial_lr", "*", "(", "factor", "**", "decay_times", ")", "\n", "print", "(", "\"Learning Rate is now %0.15f\"", "%", "lr", ")", "\n", "return", "lr", "\n", "\n", "", "return", "keras", ".", "callbacks", ".", "LearningRateScheduler", "(", "schedule", "=", "scheduler", ")", "", "", ""]], "home.repos.pwc.inspect_result.MiriamHu_ActiveBoundary.None.objectives.my_accuracy": [[5, 8], ["keras.backend.sign", "keras.backend.mean", "keras.backend.equal"], "function", ["None"], ["def", "my_accuracy", "(", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "y_pred", "=", "K", ".", "sign", "(", "y_pred", ")", "\n", "return", "K", ".", "mean", "(", "K", ".", "equal", "(", "y_true", ",", "y_pred", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MiriamHu_ActiveBoundary.None.objectives.gmse_factory": [[9, 13], ["keras.objectives.mean_squared_error"], "function", ["None"], ["", "def", "gmse_factory", "(", "gamma", ")", ":", "\n", "    ", "def", "gamma_mse", "(", "y_true", ",", "y_pred", ")", ":", "\n", "        ", "return", "gamma", "*", "mean_squared_error", "(", "y_true", ",", "y_pred", ")", "\n", "", "return", "gamma_mse", "", "", ""]]}