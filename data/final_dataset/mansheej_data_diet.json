{"home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.models.SimpleCNN.__call__": [[18, 28], ["jax.numpy.mean", "flax.linen.relu", "flax.linen.relu", "flax.linen.Dense", "flax.linen.Conv", "flax.linen.Conv"], "methods", ["None"], ["@", "nn", ".", "compact", "\n", "def", "__call__", "(", "self", ",", "x", ",", "train", "=", "False", ")", ":", "# train is a dummy argument, model does not have different train and eval modes", "\n", "    ", "for", "nc", "in", "self", ".", "num_channels", ":", "\n", "      ", "x", "=", "nn", ".", "Conv", "(", "nc", ",", "(", "3", ",", "3", ")", ",", "padding", "=", "'SAME'", ",", "dtype", "=", "self", ".", "dtype", ")", "(", "x", ")", "\n", "x", "=", "nn", ".", "relu", "(", "x", ")", "\n", "x", "=", "nn", ".", "Conv", "(", "nc", ",", "(", "3", ",", "3", ")", ",", "(", "2", ",", "2", ")", ",", "'SAME'", ",", "dtype", "=", "self", ".", "dtype", ")", "(", "x", ")", "\n", "x", "=", "nn", ".", "relu", "(", "x", ")", "\n", "", "x", "=", "jnp", ".", "mean", "(", "x", ",", "axis", "=", "(", "1", ",", "2", ")", ")", "\n", "x", "=", "nn", ".", "Dense", "(", "self", ".", "num_classes", ",", "dtype", "=", "self", ".", "dtype", ")", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.models.ResNetBlock.__call__": [[45, 59], ["models.ResNetBlock.act", "models.ResNetBlock.act", "models.ResNetBlock.conv", "models.ResNetBlock.norm", "models.ResNetBlock.conv", "models.ResNetBlock.norm", "models.ResNetBlock.conv", "models.ResNetBlock.norm"], "methods", ["None"], ["@", "nn", ".", "compact", "\n", "def", "__call__", "(", "self", ",", "x", ",", ")", ":", "\n", "    ", "residual", "=", "x", "\n", "y", "=", "self", ".", "conv", "(", "self", ".", "filters", ",", "(", "3", ",", "3", ")", ",", "self", ".", "strides", ")", "(", "x", ")", "\n", "y", "=", "self", ".", "norm", "(", ")", "(", "y", ")", "\n", "y", "=", "self", ".", "act", "(", "y", ")", "\n", "y", "=", "self", ".", "conv", "(", "self", ".", "filters", ",", "(", "3", ",", "3", ")", ")", "(", "y", ")", "\n", "y", "=", "self", ".", "norm", "(", ")", "(", "y", ")", "\n", "\n", "if", "residual", ".", "shape", "!=", "y", ".", "shape", ":", "\n", "      ", "residual", "=", "self", ".", "conv", "(", "self", ".", "filters", ",", "(", "1", ",", "1", ")", ",", "self", ".", "strides", ",", "name", "=", "'conv_proj'", ")", "(", "residual", ")", "\n", "residual", "=", "self", ".", "norm", "(", "name", "=", "'norm_proj'", ")", "(", "residual", ")", "\n", "\n", "", "return", "self", ".", "act", "(", "residual", "+", "y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.models.BottleneckResNetBlock.__call__": [[69, 87], ["models.BottleneckResNetBlock.act", "models.BottleneckResNetBlock.act", "models.BottleneckResNetBlock.act", "models.BottleneckResNetBlock.conv", "models.BottleneckResNetBlock.norm", "models.BottleneckResNetBlock.conv", "models.BottleneckResNetBlock.norm", "models.BottleneckResNetBlock.conv", "models.BottleneckResNetBlock.norm", "models.BottleneckResNetBlock.conv", "models.BottleneckResNetBlock.norm"], "methods", ["None"], ["@", "nn", ".", "compact", "\n", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "    ", "residual", "=", "x", "\n", "y", "=", "self", ".", "conv", "(", "self", ".", "filters", ",", "(", "1", ",", "1", ")", ")", "(", "x", ")", "\n", "y", "=", "self", ".", "norm", "(", ")", "(", "y", ")", "\n", "y", "=", "self", ".", "act", "(", "y", ")", "\n", "y", "=", "self", ".", "conv", "(", "self", ".", "filters", ",", "(", "3", ",", "3", ")", ",", "self", ".", "strides", ")", "(", "y", ")", "\n", "y", "=", "self", ".", "norm", "(", ")", "(", "y", ")", "\n", "y", "=", "self", ".", "act", "(", "y", ")", "\n", "y", "=", "self", ".", "conv", "(", "self", ".", "filters", "*", "4", ",", "(", "1", ",", "1", ")", ")", "(", "y", ")", "\n", "y", "=", "self", ".", "norm", "(", "scale_init", "=", "nn", ".", "initializers", ".", "zeros", ")", "(", "y", ")", "\n", "\n", "if", "residual", ".", "shape", "!=", "y", ".", "shape", ":", "\n", "      ", "residual", "=", "self", ".", "conv", "(", "self", ".", "filters", "*", "4", ",", "(", "1", ",", "1", ")", ",", "\n", "self", ".", "strides", ",", "name", "=", "'conv_proj'", ")", "(", "residual", ")", "\n", "residual", "=", "self", ".", "norm", "(", "name", "=", "'norm_proj'", ")", "(", "residual", ")", "\n", "\n", "", "return", "self", ".", "act", "(", "residual", "+", "y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.models.ResNet.__call__": [[99, 121], ["functools.partial", "functools.partial", "flax.linen.relu", "enumerate", "jax.numpy.mean", "jax.numpy.asarray", "functools.partial.", "functools.partial.", "flax.linen.max_pool", "range", "flax.linen.Dense", "models.ResNet.block_cls"], "methods", ["None"], ["@", "nn", ".", "compact", "\n", "def", "__call__", "(", "self", ",", "x", ",", "train", ":", "bool", "=", "True", ")", ":", "\n", "    ", "conv", "=", "partial", "(", "nn", ".", "Conv", ",", "use_bias", "=", "False", ",", "dtype", "=", "self", ".", "dtype", ")", "\n", "norm", "=", "partial", "(", "nn", ".", "BatchNorm", ",", "use_running_average", "=", "not", "train", ",", "momentum", "=", "0.9", ",", "epsilon", "=", "1e-5", ",", "dtype", "=", "self", ".", "dtype", ")", "\n", "\n", "x", "=", "conv", "(", "self", ".", "num_filters", ",", "\n", "(", "3", ",", "3", ")", "if", "self", ".", "lowres", "else", "(", "7", ",", "7", ")", ",", "\n", "(", "1", ",", "1", ")", "if", "self", ".", "lowres", "else", "(", "2", ",", "2", ")", ",", "\n", "padding", "=", "'SAME'", ",", "\n", "name", "=", "'conv_init'", ")", "(", "x", ")", "\n", "x", "=", "norm", "(", "name", "=", "'bn_init'", ")", "(", "x", ")", "\n", "x", "=", "nn", ".", "relu", "(", "x", ")", "\n", "if", "not", "self", ".", "lowres", ":", "\n", "      ", "x", "=", "nn", ".", "max_pool", "(", "x", ",", "(", "3", ",", "3", ")", ",", "strides", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "'SAME'", ")", "\n", "", "for", "i", ",", "block_size", "in", "enumerate", "(", "self", ".", "stage_sizes", ")", ":", "\n", "      ", "for", "j", "in", "range", "(", "block_size", ")", ":", "\n", "        ", "strides", "=", "(", "2", ",", "2", ")", "if", "i", ">", "0", "and", "j", "==", "0", "else", "(", "1", ",", "1", ")", "\n", "x", "=", "self", ".", "block_cls", "(", "self", ".", "num_filters", "*", "2", "**", "i", ",", "strides", "=", "strides", ",", "conv", "=", "conv", ",", "norm", "=", "norm", ",", "act", "=", "self", ".", "act", ")", "(", "x", ")", "\n", "", "", "x", "=", "jnp", ".", "mean", "(", "x", ",", "axis", "=", "(", "1", ",", "2", ")", ")", "\n", "x", "=", "nn", ".", "Dense", "(", "self", ".", "num_classes", ",", "dtype", "=", "self", ".", "dtype", ")", "(", "x", ")", "\n", "x", "=", "jnp", ".", "asarray", "(", "x", ",", "self", ".", "dtype", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.models.get_model": [[131, 141], ["ResNet18", "ResNet50", "models.SimpleCNN"], "function", ["None"], ["def", "get_model", "(", "args", ")", ":", "\n", "  ", "if", "args", ".", "model", "==", "'resnet18_lowres'", ":", "\n", "    ", "model", "=", "ResNet18", "(", "num_classes", "=", "args", ".", "num_classes", ",", "lowres", "=", "True", ")", "\n", "", "elif", "args", ".", "model", "==", "'resnet50_lowres'", ":", "\n", "    ", "model", "=", "ResNet50", "(", "num_classes", "=", "args", ".", "num_classes", ",", "lowres", "=", "True", ")", "\n", "", "elif", "args", ".", "model", "==", "'simple_cnn_0'", ":", "\n", "    ", "model", "=", "SimpleCNN", "(", "num_channels", "=", "[", "32", ",", "64", ",", "128", "]", ",", "num_classes", "=", "args", ".", "num_classes", ")", "\n", "", "else", ":", "\n", "    ", "raise", "NotImplementedError", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.models.get_num_params": [[143, 145], ["int", "sum", "numpy.prod", "jax.tree_util.tree_flatten"], "function", ["None"], ["", "def", "get_num_params", "(", "params", ")", ":", "\n", "  ", "return", "int", "(", "sum", "(", "[", "np", ".", "prod", "(", "w", ".", "shape", ")", "for", "w", "in", "tree_flatten", "(", "params", ")", "[", "0", "]", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.models.get_apply_fn_test": [[147, 153], ["model.apply"], "function", ["None"], ["", "def", "get_apply_fn_test", "(", "model", ")", ":", "\n", "  ", "def", "apply_fn_test", "(", "params", ",", "model_state", ",", "x", ")", ":", "\n", "    ", "vs", "=", "{", "'params'", ":", "params", ",", "**", "model_state", "}", "\n", "logits", "=", "model", ".", "apply", "(", "vs", ",", "x", ",", "train", "=", "False", ",", "mutable", "=", "False", ")", "\n", "return", "logits", "\n", "", "return", "apply_fn_test", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.models.get_apply_fn_train": [[155, 161], ["model.apply", "list", "model_state.keys"], "function", ["None"], ["", "def", "get_apply_fn_train", "(", "model", ")", ":", "\n", "  ", "def", "apply_fn_train", "(", "params", ",", "model_state", ",", "x", ")", ":", "\n", "    ", "vs", "=", "{", "'params'", ":", "params", ",", "**", "model_state", "}", "\n", "logits", ",", "model_state", "=", "model", ".", "apply", "(", "vs", ",", "x", ",", "mutable", "=", "list", "(", "model_state", ".", "keys", "(", ")", ")", ")", "\n", "return", "logits", ",", "model_state", "\n", "", "return", "apply_fn_train", "\n", "", ""]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.metrics.cross_entropy_loss": [[5, 7], ["jax.numpy.mean", "jax.numpy.sum", "flax.linen.log_softmax"], "function", ["None"], ["def", "cross_entropy_loss", "(", "logits", ",", "labels", ")", ":", "\n", "  ", "return", "jnp", ".", "mean", "(", "-", "jnp", ".", "sum", "(", "nn", ".", "log_softmax", "(", "logits", ")", "*", "labels", ",", "axis", "=", "-", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.metrics.correct": [[9, 11], ["jax.numpy.argmax", "jax.numpy.argmax"], "function", ["None"], ["", "def", "correct", "(", "logits", ",", "labels", ")", ":", "\n", "  ", "return", "jnp", ".", "argmax", "(", "logits", ",", "axis", "=", "-", "1", ")", "==", "jnp", ".", "argmax", "(", "labels", ",", "axis", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.metrics.accuracy": [[13, 15], ["jax.numpy.mean", "metrics.correct"], "function", ["home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.metrics.correct"], ["", "def", "accuracy", "(", "logits", ",", "labels", ")", ":", "\n", "  ", "return", "jnp", ".", "mean", "(", "correct", "(", "logits", ",", "labels", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.gradients.flatten_jacobian": [[8, 11], ["jax.concatenate", "jax.tree_util.tree_flatten", "jax.tree_util.tree_map", "jax.vmap"], "function", ["None"], ["def", "flatten_jacobian", "(", "J", ")", ":", "\n", "  ", "\"\"\"Jacobian pytree -> Jacobian matrix\"\"\"", "\n", "return", "jnp", ".", "concatenate", "(", "tree_flatten", "(", "tree_map", "(", "vmap", "(", "jnp", ".", "ravel", ")", ",", "J", ")", ")", "[", "0", "]", ",", "axis", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.gradients.get_mean_logit_gradients_fn": [[13, 16], ["gradients.flatten_jacobian", "jax.jacrev", "fn().mean", "fn"], "function", ["home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.gradients.flatten_jacobian"], ["", "def", "get_mean_logit_gradients_fn", "(", "fn", ",", "params", ",", "state", ")", ":", "\n", "  ", "\"\"\"fn, params, state -> (X -> mean logit gradients of fn(X; params, state))\"\"\"", "\n", "return", "lambda", "X", ":", "flatten_jacobian", "(", "jacrev", "(", "lambda", "p", ",", "x", ":", "fn", "(", "p", ",", "state", ",", "x", ")", ".", "mean", "(", "0", ")", ")", "(", "params", ",", "X", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.gradients.compute_mean_logit_gradients": [[18, 38], ["numpy.split", "jax.jit", "tqdm.tqdm", "gradients.get_mean_logit_gradients_fn", "numpy.array", "jax.jit."], "function", ["home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.gradients.get_mean_logit_gradients_fn"], ["", "def", "compute_mean_logit_gradients", "(", "fn", ",", "params", ",", "state", ",", "X", ",", "batch_sz", ")", ":", "\n", "  ", "\"\"\"compute_mean_logit_gradients: fn, params, state, X, batch_sz -> mlg\n  In:\n    fn      : func           : params, state, X -> logits of X at (params, state)\n    params  : pytree         : parameters\n    state   : pytree         : model state\n    X       : nparr(n, image): images\n    batch_sz: int            : image batch size for computation\n  Out:\n    mlgs: nparr(n_cls, n_params): mean logit gradients\n  \"\"\"", "\n", "# batch data for computation", "\n", "n_batches", "=", "X", ".", "shape", "[", "0", "]", "//", "batch_sz", "\n", "Xs", "=", "np", ".", "split", "(", "X", ",", "n_batches", ")", "\n", "# compute mean logit gradients", "\n", "mean_logit_gradients", "=", "jit", "(", "get_mean_logit_gradients_fn", "(", "fn", ",", "params", ",", "state", ")", ")", "\n", "mlgs", "=", "0", "\n", "for", "X", "in", "tqdm", "(", "Xs", ")", ":", "\n", "    ", "mlgs", "+=", "np", ".", "array", "(", "mean_logit_gradients", "(", "X", ")", ")", "/", "n_batches", "\n", "", "return", "mlgs", "\n", "", ""]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.scores.get_lord_error_fn": [[10, 18], ["jax.linalg.norm", "numpy.array", "flax.softmax", "scores.get_lord_error_fn.lord_error"], "function", ["None"], ["def", "get_lord_error_fn", "(", "fn", ",", "params", ",", "state", ",", "ord", ")", ":", "\n", "  ", "@", "jit", "\n", "def", "lord_error", "(", "X", ",", "Y", ")", ":", "\n", "    ", "errors", "=", "nn", ".", "softmax", "(", "fn", "(", "params", ",", "state", ",", "X", ")", ")", "-", "Y", "\n", "scores", "=", "jnp", ".", "linalg", ".", "norm", "(", "errors", ",", "ord", "=", "ord", ",", "axis", "=", "-", "1", ")", "\n", "return", "scores", "\n", "", "np_lord_error", "=", "lambda", "X", ",", "Y", ":", "np", ".", "array", "(", "lord_error", "(", "X", ",", "Y", ")", ")", "\n", "return", "np_lord_error", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.scores.get_margin_error": [[20, 35], ["jax.jit", "numpy.array", "Y.astype", "fn", "flax.softmax", "P[].reshape", "P[].reshape", "numpy.max", "jax.jit.", "numpy.sum"], "function", ["None"], ["", "def", "get_margin_error", "(", "fn", ",", "params", ",", "state", ",", "score_type", ")", ":", "\n", "  ", "fn_jit", "=", "jit", "(", "lambda", "X", ":", "fn", "(", "params", ",", "state", ",", "X", ")", ")", "\n", "\n", "def", "margin_error", "(", "X", ",", "Y", ")", ":", "\n", "    ", "batch_sz", "=", "X", ".", "shape", "[", "0", "]", "\n", "P", "=", "np", ".", "array", "(", "nn", ".", "softmax", "(", "fn_jit", "(", "X", ")", ")", ")", "\n", "correct_logits", "=", "Y", ".", "astype", "(", "bool", ")", "\n", "margins", "=", "P", "[", "~", "correct_logits", "]", ".", "reshape", "(", "batch_sz", ",", "-", "1", ")", "-", "P", "[", "correct_logits", "]", ".", "reshape", "(", "batch_sz", ",", "1", ")", "\n", "if", "score_type", "==", "'max'", ":", "\n", "      ", "scores", "=", "np", ".", "max", "(", "margins", ",", "-", "1", ")", "\n", "", "elif", "score_type", "==", "'sum'", ":", "\n", "      ", "scores", "=", "np", ".", "sum", "(", "margins", ",", "-", "1", ")", "\n", "", "return", "scores", "\n", "\n", "", "return", "margin_error", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.scores.get_grad_norm_fn": [[37, 47], ["gradients.flatten_jacobian", "jax.linalg.norm", "numpy.array", "scores.get_grad_norm_fn.score_fn"], "function", ["home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.gradients.flatten_jacobian"], ["", "def", "get_grad_norm_fn", "(", "fn", ",", "params", ",", "state", ")", ":", "\n", "\n", "  ", "@", "jit", "\n", "def", "score_fn", "(", "X", ",", "Y", ")", ":", "\n", "    ", "per_sample_loss_fn", "=", "lambda", "p", ",", "x", ",", "y", ":", "vmap", "(", "cross_entropy_loss", ")", "(", "fn", "(", "p", ",", "state", ",", "x", ")", ",", "y", ")", "\n", "loss_grads", "=", "flatten_jacobian", "(", "jacrev", "(", "per_sample_loss_fn", ")", "(", "params", ",", "X", ",", "Y", ")", ")", "\n", "scores", "=", "jnp", ".", "linalg", ".", "norm", "(", "loss_grads", ",", "axis", "=", "-", "1", ")", "\n", "return", "scores", "\n", "\n", "", "return", "lambda", "X", ",", "Y", ":", "np", ".", "array", "(", "score_fn", "(", "X", ",", "Y", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.scores.get_score_fn": [[49, 68], ["print", "scores.get_lord_error_fn", "print", "scores.get_lord_error_fn", "print", "scores.get_margin_error", "print", "scores.get_margin_error", "print", "scores.get_grad_norm_fn"], "function", ["home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.scores.get_lord_error_fn", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.scores.get_lord_error_fn", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.scores.get_margin_error", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.scores.get_margin_error", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.scores.get_grad_norm_fn"], ["", "def", "get_score_fn", "(", "fn", ",", "params", ",", "state", ",", "score_type", ")", ":", "\n", "  ", "if", "score_type", "==", "'l2_error'", ":", "\n", "    ", "print", "(", "f'compute {score_type}...'", ")", "\n", "score_fn", "=", "get_lord_error_fn", "(", "fn", ",", "params", ",", "state", ",", "2", ")", "\n", "", "elif", "score_type", "==", "'l1_error'", ":", "\n", "    ", "print", "(", "f'compute {score_type}...'", ")", "\n", "score_fn", "=", "get_lord_error_fn", "(", "fn", ",", "params", ",", "state", ",", "1", ")", "\n", "", "elif", "score_type", "==", "'max_margin'", ":", "\n", "    ", "print", "(", "f'compute {score_type}...'", ")", "\n", "score_fn", "=", "get_margin_error", "(", "fn", ",", "params", ",", "state", ",", "'max'", ")", "\n", "", "elif", "score_type", "==", "'sum_margin'", ":", "\n", "    ", "print", "(", "f'compute {score_type}...'", ")", "\n", "score_fn", "=", "get_margin_error", "(", "fn", ",", "params", ",", "state", ",", "'sum'", ")", "\n", "", "elif", "score_type", "==", "'grad_norm'", ":", "\n", "    ", "print", "(", "f'compute {score_type}...'", ")", "\n", "score_fn", "=", "get_grad_norm_fn", "(", "fn", ",", "params", ",", "state", ")", "\n", "", "else", ":", "\n", "    ", "raise", "NotImplementedError", "\n", "", "return", "score_fn", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.scores.compute_scores": [[70, 80], ["scores.get_score_fn", "enumerate", "numpy.concatenate", "numpy.split", "numpy.split", "zip", "print", "np.concatenate.append", "get_score_fn."], "function", ["home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.scores.get_score_fn"], ["", "def", "compute_scores", "(", "fn", ",", "params", ",", "state", ",", "X", ",", "Y", ",", "batch_sz", ",", "score_type", ")", ":", "\n", "  ", "n_batches", "=", "X", ".", "shape", "[", "0", "]", "//", "batch_sz", "\n", "Xs", ",", "Ys", "=", "np", ".", "split", "(", "X", ",", "n_batches", ")", ",", "np", ".", "split", "(", "Y", ",", "n_batches", ")", "\n", "score_fn", "=", "get_score_fn", "(", "fn", ",", "params", ",", "state", ",", "score_type", ")", "\n", "scores", "=", "[", "]", "\n", "for", "i", ",", "(", "X", ",", "Y", ")", "in", "enumerate", "(", "zip", "(", "Xs", ",", "Ys", ")", ")", ":", "\n", "    ", "print", "(", "f'score batch {i+1} of {n_batches}'", ")", "\n", "scores", ".", "append", "(", "score_fn", "(", "X", ",", "Y", ")", ")", "\n", "", "scores", "=", "np", ".", "concatenate", "(", "scores", ")", "\n", "return", "scores", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.scores.compute_unclog_scores": [[82, 95], ["numpy.split", "data.get_class_balanced_random_subset", "gradients.compute_mean_logit_gradients", "gradients.get_mean_logit_gradients_fn", "jax.jit", "enumerate", "numpy.array", "np.array.append", "jax.linalg.norm", "print", "jax.jit.item", "jax.jit.", "gradients.get_mean_logit_gradients_fn."], "function", ["home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.get_class_balanced_random_subset", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.gradients.compute_mean_logit_gradients", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.gradients.get_mean_logit_gradients_fn"], ["", "def", "compute_unclog_scores", "(", "fn", ",", "params", ",", "state", ",", "X", ",", "Y", ",", "cls_smpl_sz", ",", "seed", ",", "batch_sz_mlgs", ")", ":", "\n", "  ", "n_batches", "=", "X", ".", "shape", "[", "0", "]", "\n", "Xs", "=", "np", ".", "split", "(", "X", ",", "n_batches", ")", "\n", "X_mlgs", ",", "_", "=", "get_class_balanced_random_subset", "(", "X", ",", "Y", ",", "cls_smpl_sz", ",", "seed", ")", "\n", "mlgs", "=", "compute_mean_logit_gradients", "(", "fn", ",", "params", ",", "state", ",", "X_mlgs", ",", "batch_sz_mlgs", ")", "\n", "logit_grads_fn", "=", "get_mean_logit_gradients_fn", "(", "fn", ",", "params", ",", "state", ")", "\n", "score_fn", "=", "jit", "(", "lambda", "X", ":", "jnp", ".", "linalg", ".", "norm", "(", "(", "logit_grads_fn", "(", "X", ")", "-", "mlgs", ")", ".", "sum", "(", "0", ")", ")", ")", "\n", "scores", "=", "[", "]", "\n", "for", "i", ",", "X", "in", "enumerate", "(", "Xs", ")", ":", "\n", "    ", "if", "i", "%", "500", "==", "0", ":", "print", "(", "f'images {i} of {n_batches}'", ")", "\n", "scores", ".", "append", "(", "score_fn", "(", "X", ")", ".", "item", "(", ")", ")", "\n", "", "scores", "=", "np", ".", "array", "(", "scores", ")", "\n", "return", "scores", "\n", "", ""]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.train.create_vitaly_learning_rate_schedule": [[20, 29], ["None"], "function", ["None"], ["def", "create_vitaly_learning_rate_schedule", "(", ")", ":", "\n", "  ", "def", "learning_rate", "(", "step", ")", ":", "\n", "    ", "base_lr", ",", "top", ",", "total", "=", "0.2", ",", "4680", ",", "31200", "\n", "if", "step", "<=", "top", ":", "\n", "      ", "lr", "=", "base_lr", "*", "step", "/", "top", "\n", "", "else", ":", "\n", "      ", "lr", "=", "base_lr", "-", "base_lr", "*", "(", "step", "-", "top", ")", "/", "(", "total", "-", "top", ")", "\n", "", "return", "lr", "\n", "", "return", "learning_rate", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.train.get_lr_schedule": [[31, 41], ["train.create_vitaly_learning_rate_schedule", "flax.training.lr_schedule.create_stepped_learning_rate_schedule", "flax.training.lr_schedule.create_constant_learning_rate_schedule", "lr_schedule.create_stepped_learning_rate_schedule.item", "enumerate", "lr_schedule.create_stepped_learning_rate_schedule."], "function", ["home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.train.create_vitaly_learning_rate_schedule"], ["", "def", "get_lr_schedule", "(", "args", ")", ":", "\n", "  ", "if", "args", ".", "lr_vitaly", ":", "\n", "    ", "lr", "=", "create_vitaly_learning_rate_schedule", "(", ")", "\n", "", "elif", "args", ".", "decay_steps", ":", "\n", "    ", "lr_sched_steps", "=", "[", "[", "e", ",", "args", ".", "decay_factor", "**", "(", "i", "+", "1", ")", "]", "for", "i", ",", "e", "in", "enumerate", "(", "args", ".", "decay_steps", ")", "]", "\n", "lr_", "=", "lr_schedule", ".", "create_stepped_learning_rate_schedule", "(", "args", ".", "lr", ",", "1", ",", "lr_sched_steps", ")", "\n", "lr", "=", "lambda", "step", ":", "lr_", "(", "step", ")", ".", "item", "(", ")", "\n", "", "else", ":", "\n", "    ", "lr", "=", "lr_schedule", ".", "create_constant_learning_rate_schedule", "(", "args", ".", "lr", ",", "args", ".", "steps_per_epoch", ")", "\n", "", "return", "lr", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.train.get_loss_fn": [[43, 50], ["f_train", "metrics.cross_entropy_loss", "metrics.accuracy"], "function", ["home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.metrics.cross_entropy_loss", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.metrics.accuracy"], ["", "def", "get_loss_fn", "(", "f_train", ")", ":", "\n", "  ", "def", "loss_fn", "(", "params", ",", "model_state", ",", "x", ",", "y", ")", ":", "\n", "    ", "logits", ",", "model_state", "=", "f_train", "(", "params", ",", "model_state", ",", "x", ")", "\n", "loss", "=", "cross_entropy_loss", "(", "logits", ",", "y", ")", "\n", "acc", "=", "accuracy", "(", "logits", ",", "y", ")", "\n", "return", "loss", ",", "(", "acc", ",", "logits", ",", "model_state", ")", "\n", "", "return", "loss_fn", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.train.get_train_step": [[52, 59], ["loss_and_grad_fn", "train_state.TrainState.optim.apply_gradient", "train_state.TrainState"], "function", ["None"], ["", "def", "get_train_step", "(", "loss_and_grad_fn", ")", ":", "\n", "  ", "def", "train_step", "(", "state", ",", "x", ",", "y", ",", "lr", ")", ":", "\n", "    ", "(", "loss", ",", "(", "acc", ",", "logits", ",", "model_state", ")", ")", ",", "gradient", "=", "loss_and_grad_fn", "(", "state", ".", "optim", ".", "target", ",", "state", ".", "model", ",", "x", ",", "y", ")", "\n", "new_optim", "=", "state", ".", "optim", ".", "apply_gradient", "(", "gradient", ",", "learning_rate", "=", "lr", ")", "\n", "state", "=", "TrainState", "(", "optim", "=", "new_optim", ",", "model", "=", "model_state", ")", "\n", "return", "state", ",", "logits", ",", "loss", ",", "acc", "\n", "", "return", "train_step", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.train._log_and_save_args": [[65, 69], ["print", "utils.print_args", "utils.save_args"], "function", ["home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.utils.print_args", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.utils.save_args"], ["", "def", "_log_and_save_args", "(", "args", ")", ":", "\n", "  ", "print", "(", "'train args:'", ")", "\n", "print_args", "(", "args", ")", "\n", "save_args", "(", "args", ",", "args", ".", "save_dir", ",", "verbose", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.train._make_dirs": [[71, 75], ["utils.make_dir", "utils.make_dir", "utils.make_dir"], "function", ["home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.utils.make_dir", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.utils.make_dir", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.utils.make_dir"], ["", "def", "_make_dirs", "(", "args", ")", ":", "\n", "  ", "make_dir", "(", "args", ".", "save_dir", ")", "\n", "make_dir", "(", "args", ".", "save_dir", "+", "'/ckpts'", ")", "\n", "if", "args", ".", "track_forgetting", ":", "make_dir", "(", "args", ".", "save_dir", "+", "'/forget_scores'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.train._print_stats": [[77, 83], ["print"], "function", ["None"], ["", "def", "_print_stats", "(", "t", ",", "T", ",", "t_incr", ",", "t_tot", ",", "lr", ",", "train_acc", ",", "test_acc", ",", "init", "=", "False", ")", ":", "\n", "  ", "prog", "=", "t", "/", "T", "*", "100", "\n", "lr", "=", "'  init'", "if", "init", "else", "f'{lr:.4f}'", "\n", "train_acc", "=", "' init'", "if", "init", "else", "f'{train_acc:.3f}'", "\n", "print", "(", "f'{prog:6.2f}% | time: {t_incr:5.1f}s ({t_tot/60:5.1f}m) | step: {t:6d} |'", ",", "\n", "f'lr: {lr} | train acc: {train_acc} | test acc: {test_acc:.3f}'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.train._record_test": [[85, 91], ["recorder.record_test_stats", "time.time", "train._print_stats"], "function", ["home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.recorder.record_test_stats", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.train._print_stats"], ["", "def", "_record_test", "(", "rec", ",", "t", ",", "T", ",", "t_prev", ",", "t_start", ",", "lr", ",", "train_acc", ",", "test_acc", ",", "test_loss", ",", "init", "=", "False", ")", ":", "\n", "  ", "rec", "=", "record_test_stats", "(", "rec", ",", "t", ",", "test_loss", ",", "test_acc", ")", "\n", "t_now", "=", "time", ".", "time", "(", ")", "\n", "t_incr", ",", "t_tot", "=", "t_now", "-", "t_prev", ",", "t_now", "-", "t_start", "\n", "_print_stats", "(", "t", ",", "T", ",", "t_incr", ",", "t_tot", ",", "lr", ",", "train_acc", ",", "test_acc", ",", "init", ")", "\n", "return", "rec", ",", "t_now", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.train._save_checkpoint": [[93, 98], ["flax.training.checkpoints.save_checkpoint", "recorder.record_ckpt", "forgetting.save_forget_scores"], "function", ["home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.recorder.record_ckpt", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.forgetting.save_forget_scores"], ["", "def", "_save_checkpoint", "(", "save_dir", ",", "step", ",", "state", ",", "rec", ",", "forget_stats", "=", "None", ")", ":", "\n", "  ", "checkpoints", ".", "save_checkpoint", "(", "save_dir", "+", "'/ckpts'", ",", "state", ",", "step", ",", "keep", "=", "10000", ")", "\n", "if", "forget_stats", ":", "save_forget_scores", "(", "save_dir", ",", "step", ",", "forget_stats", ")", "\n", "rec", "=", "record_ckpt", "(", "rec", ",", "step", ")", "\n", "return", "rec", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.train.train": [[104, 161], ["utils.set_global_seed", "train._make_dirs", "data.load_data", "models.get_model", "train_state.get_train_state", "jax.jit", "jax.jit", "train.get_lr_schedule", "recorder.init_recorder", "train._log_and_save_args", "time.time", "print", "test.test", "train._record_test", "train._save_checkpoint", "data.train_batches", "recorder.save_recorder", "models.get_apply_fn_train", "models.get_apply_fn_test", "test.get_test_step", "train.get_train_step", "forgetting.init_forget_stats", "jax.jit.", "recorder.record_train_stats", "jax.value_and_grad", "get_lr_schedule.", "numpy.array", "forgetting.update_forget_stats", "loss.item", "acc.item", "get_lr_schedule.", "test.test", "train._record_test", "train._save_checkpoint", "train.get_loss_fn", "metrics.correct().astype", "get_lr_schedule.", "test.test", "train._record_test", "get_lr_schedule.", "metrics.correct"], "function", ["home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.utils.set_global_seed", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.train._make_dirs", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.load_data", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.models.get_model", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.train_state.get_train_state", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.train.get_lr_schedule", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.recorder.init_recorder", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.train._log_and_save_args", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.test.test", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.train._record_test", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.train._save_checkpoint", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.train_batches", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.recorder.save_recorder", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.models.get_apply_fn_train", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.models.get_apply_fn_test", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.test.get_test_step", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.train.get_train_step", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.forgetting.init_forget_stats", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.recorder.record_train_stats", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.forgetting.update_forget_stats", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.test.test", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.train._record_test", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.train._save_checkpoint", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.train.get_loss_fn", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.test.test", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.train._record_test", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.metrics.correct"], ["", "def", "train", "(", "args", ")", ":", "\n", "# setup", "\n", "  ", "set_global_seed", "(", ")", "\n", "_make_dirs", "(", "args", ")", "\n", "I_train", ",", "X_train", ",", "Y_train", ",", "X_test", ",", "Y_test", ",", "args", "=", "load_data", "(", "args", ")", "\n", "model", "=", "get_model", "(", "args", ")", "\n", "state", ",", "args", "=", "get_train_state", "(", "args", ",", "model", ")", "\n", "f_train", ",", "f_test", "=", "get_apply_fn_train", "(", "model", ")", ",", "get_apply_fn_test", "(", "model", ")", "\n", "test_step", "=", "jit", "(", "get_test_step", "(", "f_test", ")", ")", "\n", "train_step", "=", "jit", "(", "get_train_step", "(", "value_and_grad", "(", "get_loss_fn", "(", "f_train", ")", ",", "has_aux", "=", "True", ")", ")", ")", "\n", "lr", "=", "get_lr_schedule", "(", "args", ")", "\n", "rec", "=", "init_recorder", "(", ")", "\n", "forget_stats", "=", "init_forget_stats", "(", "args", ")", "if", "args", ".", "track_forgetting", "else", "None", "\n", "\n", "# info", "\n", "_log_and_save_args", "(", "args", ")", "\n", "time_start", "=", "time", ".", "time", "(", ")", "\n", "time_now", "=", "time_start", "\n", "print", "(", "'train net...'", ")", "\n", "\n", "# log and save init", "\n", "test_loss", ",", "test_acc", "=", "test", "(", "test_step", ",", "state", ",", "X_test", ",", "Y_test", ",", "args", ".", "test_batch_size", ")", "\n", "rec", ",", "time_now", "=", "_record_test", "(", "\n", "rec", ",", "args", ".", "ckpt", ",", "args", ".", "num_steps", ",", "time_now", ",", "time_start", ",", "None", ",", "None", ",", "test_acc", ",", "test_loss", ",", "True", ")", "\n", "rec", "=", "_save_checkpoint", "(", "args", ".", "save_dir", ",", "args", ".", "ckpt", ",", "state", ",", "rec", ",", "forget_stats", ")", "\n", "\n", "# train loop", "\n", "for", "t", ",", "idxs", ",", "x", ",", "y", "in", "train_batches", "(", "I_train", ",", "X_train", ",", "Y_train", ",", "args", ")", ":", "\n", "# train step", "\n", "    ", "state", ",", "logits", ",", "loss", ",", "acc", "=", "train_step", "(", "state", ",", "x", ",", "y", ",", "lr", "(", "t", ")", ")", "\n", "if", "args", ".", "track_forgetting", ":", "\n", "      ", "batch_accs", "=", "np", ".", "array", "(", "correct", "(", "logits", ",", "y", ")", ".", "astype", "(", "int", ")", ")", "\n", "forget_stats", "=", "update_forget_stats", "(", "forget_stats", ",", "idxs", ",", "batch_accs", ")", "\n", "", "rec", "=", "record_train_stats", "(", "rec", ",", "t", "-", "1", ",", "loss", ".", "item", "(", ")", ",", "acc", ".", "item", "(", ")", ",", "lr", "(", "t", ")", ")", "\n", "\n", "#  BOOKKEEPING  #", "\n", "\n", "# test and log every log_steps", "\n", "if", "t", "%", "args", ".", "log_steps", "==", "0", ":", "\n", "      ", "test_loss", ",", "test_acc", "=", "test", "(", "test_step", ",", "state", ",", "X_test", ",", "Y_test", ",", "args", ".", "test_batch_size", ")", "\n", "rec", ",", "time_now", "=", "_record_test", "(", "rec", ",", "t", ",", "args", ".", "num_steps", ",", "time_now", ",", "time_start", ",", "lr", "(", "t", ")", ",", "acc", ",", "test_acc", ",", "test_loss", ")", "\n", "\n", "# every early_save_steps before early_step and save_steps after early_step, and at end of training", "\n", "", "if", "(", "(", "t", "<=", "args", ".", "early_step", "and", "t", "%", "args", ".", "early_save_steps", "==", "0", ")", "or", "\n", "(", "t", ">", "args", ".", "early_step", "and", "t", "%", "args", ".", "save_steps", "==", "0", ")", "or", "\n", "(", "t", "==", "args", ".", "num_steps", ")", ")", ":", "\n", "\n", "# test and log if not done already", "\n", "      ", "if", "t", "%", "args", ".", "log_steps", "!=", "0", ":", "\n", "        ", "test_loss", ",", "test_acc", "=", "test", "(", "test_step", ",", "state", ",", "X_test", ",", "Y_test", ",", "args", ".", "test_batch_size", ")", "\n", "rec", ",", "time_now", "=", "_record_test", "(", "rec", ",", "t", ",", "args", ".", "num_steps", ",", "time_now", ",", "time_start", ",", "lr", "(", "t", ")", ",", "acc", ",", "test_acc", ",", "test_loss", ")", "\n", "\n", "# save checkpoint", "\n", "", "rec", "=", "_save_checkpoint", "(", "args", ".", "save_dir", ",", "t", ",", "state", ",", "rec", ",", "forget_stats", ")", "\n", "\n", "# wrap it up", "\n", "", "", "save_recorder", "(", "args", ".", "save_dir", ",", "rec", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.one_hot": [[12, 14], ["numpy.arange"], "function", ["None"], ["def", "one_hot", "(", "labels", ",", "num_classes", ",", "dtype", "=", "np", ".", "float32", ")", ":", "\n", "  ", "return", "(", "labels", "[", ":", ",", "None", "]", "==", "np", ".", "arange", "(", "num_classes", ")", ")", ".", "astype", "(", "dtype", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.normalize_cifar10_images": [[16, 21], ["numpy.array", "numpy.array", "X.astype"], "function", ["None"], ["", "def", "normalize_cifar10_images", "(", "X", ")", ":", "\n", "  ", "mean_rgb", "=", "np", ".", "array", "(", "[", "[", "[", "[", "0.4914", "*", "255", ",", "0.4822", "*", "255", ",", "0.4465", "*", "255", "]", "]", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "std_rgb", "=", "np", ".", "array", "(", "[", "[", "[", "[", "0.2470", "*", "255", ",", "0.2435", "*", "255", ",", "0.2616", "*", "255", "]", "]", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "X", "=", "(", "X", ".", "astype", "(", "np", ".", "float32", ")", "-", "mean_rgb", ")", "/", "std_rgb", "\n", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.normalize_cifar100_images": [[23, 26], ["data.normalize_cifar10_images"], "function", ["home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.normalize_cifar10_images"], ["", "def", "normalize_cifar100_images", "(", "X", ")", ":", "\n", "  ", "X", "=", "normalize_cifar10_images", "(", "X", ")", "\n", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.normalize_cinic10_images": [[28, 33], ["numpy.array", "numpy.array", "X.astype"], "function", ["None"], ["", "def", "normalize_cinic10_images", "(", "X", ")", ":", "\n", "  ", "mean_rgb", "=", "np", ".", "array", "(", "[", "[", "[", "[", "0.47889522", "*", "255", ",", "0.47227842", "*", "255", ",", "0.43047404", "*", "255", "]", "]", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "std_rgb", "=", "np", ".", "array", "(", "[", "[", "[", "[", "0.24205776", "*", "255", ",", "0.23828046", "*", "255", ",", "0.25874835", "*", "255", "]", "]", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "X", "=", "(", "X", ".", "astype", "(", "np", ".", "float32", ")", "-", "mean_rgb", ")", "/", "std_rgb", "\n", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.sort_by_class": [[35, 39], ["Y.argmax().argsort", "Y.argmax"], "function", ["None"], ["", "def", "sort_by_class", "(", "X", ",", "Y", ")", ":", "\n", "  ", "sort_idxs", "=", "Y", ".", "argmax", "(", "1", ")", ".", "argsort", "(", ")", "\n", "X", ",", "Y", "=", "X", "[", "sort_idxs", "]", ",", "Y", "[", "sort_idxs", "]", "\n", "return", "X", ",", "Y", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.update_data_args": [[41, 49], ["int", "numpy.ceil"], "function", ["None"], ["", "def", "update_data_args", "(", "args", ",", "X_train", ",", "Y_train", ",", "X_test", ",", "Y_test", ")", ":", "\n", "  ", "args", ".", "image_shape", "=", "X_train", ".", "shape", "[", "1", ":", "]", "\n", "args", ".", "num_classes", "=", "Y_train", ".", "shape", "[", "1", "]", "\n", "args", ".", "num_train_examples", "=", "X_train", ".", "shape", "[", "0", "]", "\n", "args", ".", "num_test_examples", "=", "X_test", ".", "shape", "[", "0", "]", "\n", "args", ".", "steps_per_epoch", "=", "args", ".", "num_train_examples", "//", "args", ".", "train_batch_size", "\n", "args", ".", "steps_per_test", "=", "int", "(", "np", ".", "ceil", "(", "args", ".", "num_test_examples", "/", "args", ".", "test_batch_size", ")", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.load_cifar10": [[51, 69], ["print", "time.time", "tensorflow_datasets.as_numpy", "print", "data.sort_by_class", "data.sort_by_class", "data.update_data_args", "tensorflow_datasets.load", "data.normalize_cifar10_images", "data.normalize_cifar10_images", "data.one_hot", "data.one_hot", "int", "time.time"], "function", ["home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.sort_by_class", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.sort_by_class", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.update_data_args", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.normalize_cifar10_images", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.normalize_cifar10_images", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.one_hot", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.one_hot"], ["", "def", "load_cifar10", "(", "args", ")", ":", "\n", "# load cifar10", "\n", "  ", "print", "(", "'load cifar10... '", ",", "end", "=", "''", ")", "\n", "time_start", "=", "time", ".", "time", "(", ")", "\n", "(", "X_train", ",", "Y_train", ")", ",", "(", "X_test", ",", "Y_test", ")", "=", "tfds", ".", "as_numpy", "(", "tfds", ".", "load", "(", "\n", "name", "=", "'cifar10'", ",", "split", "=", "[", "'train'", ",", "'test'", "]", ",", "data_dir", "=", "args", ".", "data_dir", ",", "\n", "batch_size", "=", "-", "1", ",", "download", "=", "False", ",", "as_supervised", "=", "True", ")", ")", "\n", "print", "(", "f'{int(time.time() - time_start)}s'", ")", "\n", "# normalize images, one hot labels", "\n", "num_classes", "=", "10", "\n", "X_train", ",", "X_test", "=", "normalize_cifar10_images", "(", "X_train", ")", ",", "normalize_cifar10_images", "(", "X_test", ")", "\n", "Y_train", ",", "Y_test", "=", "one_hot", "(", "Y_train", ",", "num_classes", ")", ",", "one_hot", "(", "Y_test", ",", "num_classes", ")", "\n", "# sort by class", "\n", "X_train", ",", "Y_train", "=", "sort_by_class", "(", "X_train", ",", "Y_train", ")", "\n", "X_test", ",", "Y_test", "=", "sort_by_class", "(", "X_test", ",", "Y_test", ")", "\n", "# update args", "\n", "args", "=", "update_data_args", "(", "args", ",", "X_train", ",", "Y_train", ",", "X_test", ",", "Y_test", ")", "\n", "return", "X_train", ",", "Y_train", ",", "X_test", ",", "Y_test", ",", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.load_cifar100": [[71, 89], ["print", "time.time", "tensorflow_datasets.as_numpy", "print", "data.sort_by_class", "data.sort_by_class", "data.update_data_args", "tensorflow_datasets.load", "data.normalize_cifar100_images", "data.normalize_cifar100_images", "data.one_hot", "data.one_hot", "int", "time.time"], "function", ["home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.sort_by_class", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.sort_by_class", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.update_data_args", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.normalize_cifar100_images", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.normalize_cifar100_images", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.one_hot", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.one_hot"], ["", "def", "load_cifar100", "(", "args", ")", ":", "\n", "# load cifar100", "\n", "  ", "print", "(", "'load cifar100... '", ",", "end", "=", "''", ")", "\n", "time_start", "=", "time", ".", "time", "(", ")", "\n", "(", "X_train", ",", "Y_train", ")", ",", "(", "X_test", ",", "Y_test", ")", "=", "tfds", ".", "as_numpy", "(", "tfds", ".", "load", "(", "\n", "name", "=", "'cifar100'", ",", "split", "=", "[", "'train'", ",", "'test'", "]", ",", "data_dir", "=", "args", ".", "data_dir", ",", "\n", "batch_size", "=", "-", "1", ",", "download", "=", "False", ",", "as_supervised", "=", "True", ")", ")", "\n", "print", "(", "f'{int(time.time() - time_start)}s'", ")", "\n", "# normalize images, one hot labels", "\n", "num_classes", "=", "100", "\n", "X_train", ",", "X_test", "=", "normalize_cifar100_images", "(", "X_train", ")", ",", "normalize_cifar100_images", "(", "X_test", ")", "\n", "Y_train", ",", "Y_test", "=", "one_hot", "(", "Y_train", ",", "num_classes", ")", ",", "one_hot", "(", "Y_test", ",", "num_classes", ")", "\n", "# sort by class", "\n", "X_train", ",", "Y_train", "=", "sort_by_class", "(", "X_train", ",", "Y_train", ")", "\n", "X_test", ",", "Y_test", "=", "sort_by_class", "(", "X_test", ",", "Y_test", ")", "\n", "# update args", "\n", "args", "=", "update_data_args", "(", "args", ",", "X_train", ",", "Y_train", ",", "X_test", ",", "Y_test", ")", "\n", "return", "X_train", ",", "Y_train", ",", "X_test", ",", "Y_test", ",", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.load_cinic10": [[91, 112], ["print", "time.time", "numpy.concatenate", "numpy.concatenate", "data.sort_by_class", "data.sort_by_class", "data.update_data_args", "print", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "data.normalize_cinic10_images", "data.normalize_cinic10_images", "data.one_hot", "data.one_hot", "int", "time.time"], "function", ["home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.sort_by_class", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.sort_by_class", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.update_data_args", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.normalize_cinic10_images", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.normalize_cinic10_images", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.one_hot", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.one_hot"], ["", "def", "load_cinic10", "(", "args", ")", ":", "\n", "  ", "print", "(", "'load cinic10... '", ",", "end", "=", "''", ")", "\n", "time_start", "=", "time", ".", "time", "(", ")", "\n", "# load cifar10", "\n", "path", "=", "args", ".", "data_dir", "+", "'/cinic10'", "\n", "X_train", ",", "Y_train", "=", "np", ".", "load", "(", "path", "+", "'/X_train.npy'", ")", ",", "np", ".", "load", "(", "path", "+", "'/Y_train.npy'", ")", "\n", "X_valid", ",", "Y_valid", "=", "np", ".", "load", "(", "path", "+", "'/X_valid.npy'", ")", ",", "np", ".", "load", "(", "path", "+", "'/Y_valid.npy'", ")", "\n", "X_test", ",", "Y_test", "=", "np", ".", "load", "(", "path", "+", "'/X_test.npy'", ")", ",", "np", ".", "load", "(", "path", "+", "'/Y_test.npy'", ")", "\n", "X_train", "=", "np", ".", "concatenate", "(", "(", "X_train", ",", "X_valid", ")", ")", "\n", "Y_train", "=", "np", ".", "concatenate", "(", "(", "Y_train", ",", "Y_valid", ")", ")", "\n", "# normalize, one hot", "\n", "num_classes", "=", "10", "\n", "X_train", ",", "X_test", "=", "normalize_cinic10_images", "(", "X_train", ")", ",", "normalize_cinic10_images", "(", "X_test", ")", "\n", "Y_train", ",", "Y_test", "=", "one_hot", "(", "Y_train", ",", "num_classes", ")", ",", "one_hot", "(", "Y_test", ",", "num_classes", ")", "\n", "# sort by class", "\n", "X_train", ",", "Y_train", "=", "sort_by_class", "(", "X_train", ",", "Y_train", ")", "\n", "X_test", ",", "Y_test", "=", "sort_by_class", "(", "X_test", ",", "Y_test", ")", "\n", "# update args", "\n", "args", "=", "update_data_args", "(", "args", ",", "X_train", ",", "Y_train", ",", "X_test", ",", "Y_test", ")", "\n", "print", "(", "f'{int(time.time() - time_start)}s'", ")", "\n", "return", "X_train", ",", "Y_train", ",", "X_test", ",", "Y_test", ",", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.load_dataset": [[114, 124], ["data.load_cifar10", "data.load_cifar100", "data.load_cinic10"], "function", ["home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.load_cifar10", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.load_cifar100", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.load_cinic10"], ["", "def", "load_dataset", "(", "args", ")", ":", "\n", "  ", "if", "args", ".", "dataset", "==", "'cifar10'", ":", "\n", "    ", "X_train", ",", "Y_train", ",", "X_test", ",", "Y_test", ",", "args", "=", "load_cifar10", "(", "args", ")", "\n", "", "elif", "args", ".", "dataset", "==", "'cifar100'", ":", "\n", "    ", "X_train", ",", "Y_train", ",", "X_test", ",", "Y_test", ",", "args", "=", "load_cifar100", "(", "args", ")", "\n", "", "elif", "args", ".", "dataset", "==", "'cinic10'", ":", "\n", "    ", "X_train", ",", "Y_train", ",", "X_test", ",", "Y_test", ",", "args", "=", "load_cinic10", "(", "args", ")", "\n", "", "else", ":", "\n", "    ", "raise", "NotImplementedError", "\n", "", "return", "X_train", ",", "Y_train", ",", "X_test", ",", "Y_test", ",", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.update_train_data_args": [[126, 130], ["None"], "function", ["None"], ["", "def", "update_train_data_args", "(", "args", ",", "I", ")", ":", "\n", "  ", "args", ".", "num_train_examples", "=", "I", ".", "shape", "[", "0", "]", "\n", "args", ".", "steps_per_epoch", "=", "args", ".", "num_train_examples", "//", "args", ".", "train_batch_size", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.subset_train_idxs_randomly": [[132, 137], ["numpy.random.RandomState", "numpy.sort().astype", "data.update_train_data_args", "numpy.sort", "np.random.RandomState.choice"], "function", ["home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.update_train_data_args"], ["", "def", "subset_train_idxs_randomly", "(", "I", ",", "args", ")", ":", "\n", "  ", "rng", "=", "np", ".", "random", ".", "RandomState", "(", "args", ".", "random_subset_seed", ")", "\n", "I", "=", "np", ".", "sort", "(", "rng", ".", "choice", "(", "I", ".", "shape", "[", "0", "]", ",", "args", ".", "subset_size", ",", "replace", "=", "False", ")", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "args", "=", "update_train_data_args", "(", "args", ",", "I", ")", "\n", "return", "I", ",", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.subset_train_idxs_by_scores": [[139, 154], ["numpy.load", "numpy.sort().astype", "data.update_train_data_args", "np.load.argsort", "numpy.sort", "np.load.argsort", "numpy.abs().argsort", "numpy.abs().argsort", "numpy.abs", "numpy.abs"], "function", ["home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.update_train_data_args"], ["", "def", "subset_train_idxs_by_scores", "(", "I", ",", "args", ")", ":", "\n", "  ", "scores", "=", "np", ".", "load", "(", "args", ".", "scores_path", ")", "\n", "if", "args", ".", "subset", "==", "'keep_min_scores'", ":", "\n", "    ", "idxs", "=", "scores", ".", "argsort", "(", ")", "[", ":", "args", ".", "subset_size", "]", "\n", "", "elif", "args", ".", "subset", "==", "'keep_max_scores'", ":", "\n", "    ", "idxs", "=", "scores", ".", "argsort", "(", ")", "[", "-", "args", ".", "subset_size", ":", "]", "\n", "", "elif", "args", ".", "subset", "==", "'keep_min_abs_scores'", ":", "\n", "    ", "idxs", "=", "np", ".", "abs", "(", "scores", ")", ".", "argsort", "(", ")", "[", ":", "args", ".", "subset_size", "]", "\n", "", "elif", "args", ".", "subset", "==", "'keep_max_abs_scores'", ":", "\n", "    ", "idxs", "=", "np", ".", "abs", "(", "scores", ")", ".", "argsort", "(", ")", "[", "-", "args", ".", "subset_size", ":", "]", "\n", "", "else", ":", "\n", "    ", "raise", "NotImplementedError", "\n", "", "I", "=", "np", ".", "sort", "(", "idxs", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "args", "=", "update_train_data_args", "(", "args", ",", "I", ")", "\n", "return", "I", ",", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.subset_train_idxs_by_offset": [[156, 162], ["numpy.load", "numpy.sort().astype", "data.update_train_data_args", "np.load.argsort", "numpy.sort"], "function", ["home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.update_train_data_args"], ["", "def", "subset_train_idxs_by_offset", "(", "I", ",", "args", ")", ":", "\n", "  ", "scores", "=", "np", ".", "load", "(", "args", ".", "scores_path", ")", "\n", "idxs", "=", "scores", ".", "argsort", "(", ")", "[", "args", ".", "subset_offset", ":", "args", ".", "subset_offset", "+", "args", ".", "subset_size", "]", "\n", "I", "=", "np", ".", "sort", "(", "idxs", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "args", "=", "update_train_data_args", "(", "args", ",", "I", ")", "\n", "return", "I", ",", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.subset_train_idxs": [[164, 172], ["data.subset_train_idxs_randomly", "data.subset_train_idxs_by_offset", "data.subset_train_idxs_by_scores"], "function", ["home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.subset_train_idxs_randomly", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.subset_train_idxs_by_offset", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.subset_train_idxs_by_scores"], ["", "def", "subset_train_idxs", "(", "I", ",", "args", ")", ":", "\n", "  ", "if", "args", ".", "subset", "==", "'random'", ":", "\n", "    ", "I", ",", "args", "=", "subset_train_idxs_randomly", "(", "I", ",", "args", ")", "\n", "", "elif", "args", ".", "subset", "==", "'offset'", ":", "\n", "    ", "I", ",", "args", "=", "subset_train_idxs_by_offset", "(", "I", ",", "args", ")", "\n", "", "else", ":", "\n", "    ", "I", ",", "args", "=", "subset_train_idxs_by_scores", "(", "I", ",", "args", ")", "\n", "", "return", "I", ",", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.randomize_labels": [[174, 183], ["numpy.random.RandomState", "int", "np.random.RandomState.choice", "Y.copy", "data.sort_by_class", "numpy.sort"], "function", ["home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.sort_by_class"], ["", "def", "randomize_labels", "(", "X", ",", "Y", ",", "fraction", ",", "seed", ")", ":", "\n", "  ", "rng", "=", "np", ".", "random", ".", "RandomState", "(", "seed", ")", "\n", "num_labels", "=", "Y", ".", "shape", "[", "0", "]", "\n", "num_randomize", "=", "int", "(", "num_labels", "*", "fraction", ")", "\n", "rand_idxs", "=", "rng", ".", "choice", "(", "num_labels", ",", "num_randomize", ",", "replace", "=", "False", ")", "\n", "Y_rand", "=", "Y", ".", "copy", "(", ")", "\n", "Y_rand", "[", "np", ".", "sort", "(", "rand_idxs", ")", "]", "=", "Y_rand", "[", "rand_idxs", "]", "\n", "X", ",", "Y_rand", "=", "sort_by_class", "(", "X", ",", "Y_rand", ")", "\n", "return", "X", ",", "Y_rand", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.load_data": [[185, 206], ["data.load_dataset", "numpy.arange", "hasattr", "data.randomize_labels", "data.subset_train_idxs"], "function", ["home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.load_dataset", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.randomize_labels", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.subset_train_idxs"], ["", "def", "load_data", "(", "args", ")", ":", "\n", "  ", "'''load_data: args -> I_train, X_train, Y_train, X_test, Y_test, args\n  I, Xs and Ys are sorted by class.\n  In:\n    args: SimpleNamespace: data loading args\n  Out:\n    I_train: nparr(M)       : train (sub)set idxs\n    X_train: nparr(N, img)  : all train images\n    Y_train: nparr(N, C)    : all train labels\n    X_test : nparr(N, img)  : test images\n    Y_test : nparr(N, C)    : test labels\n    args   : SimpleNamespace: updated dataset arguments\n  '''", "\n", "X_train", ",", "Y_train", ",", "X_test", ",", "Y_test", ",", "args", "=", "load_dataset", "(", "args", ")", "\n", "if", "not", "hasattr", "(", "args", ",", "'random_label_fraction'", ")", ":", "args", ".", "random_label_fraction", "=", "0", "\n", "if", "args", ".", "random_label_fraction", ">", "0", ":", "\n", "    ", "X_train", ",", "Y_train", "=", "randomize_labels", "(", "X_train", ",", "Y_train", ",", "args", ".", "random_label_fraction", ",", "args", ".", "random_label_seed", ")", "\n", "", "I_train", "=", "np", ".", "arange", "(", "X_train", ".", "shape", "[", "0", "]", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "if", "args", ".", "subset", ":", "\n", "    ", "I_train", ",", "args", "=", "subset_train_idxs", "(", "I_train", ",", "args", ")", "\n", "", "return", "I_train", ",", "X_train", ",", "Y_train", ",", "X_test", ",", "Y_test", ",", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.augment_cifar10_data": [[212, 221], ["tensorflow.constant", "tensorflow.pad", "tensorflow.image.random_crop", "tensorflow.image.random_flip_left_right", "X.numpy.numpy", "key[].item", "key[].item"], "function", ["None"], ["", "def", "augment_cifar10_data", "(", "X", ",", "Y", ",", "key", ")", ":", "\n", "  ", "B", ",", "H", ",", "W", ",", "C", "=", "X", ".", "shape", "\n", "crop_seed", ",", "flip_seed", "=", "key", "[", "0", "]", ".", "item", "(", ")", ",", "key", "[", "1", "]", ".", "item", "(", ")", "\n", "paddings", "=", "tf", ".", "constant", "(", "[", "[", "0", ",", "0", "]", ",", "[", "4", ",", "4", "]", ",", "[", "4", ",", "4", "]", ",", "[", "0", ",", "0", "]", "]", ")", "\n", "X", "=", "tf", ".", "pad", "(", "X", ",", "paddings", ",", "'REFLECT'", ")", "\n", "X", "=", "tf", ".", "image", ".", "random_crop", "(", "X", ",", "[", "B", ",", "H", ",", "W", ",", "C", "]", ",", "crop_seed", ")", "\n", "X", "=", "tf", ".", "image", ".", "random_flip_left_right", "(", "X", ",", "flip_seed", ")", "\n", "X", "=", "X", ".", "numpy", "(", ")", "\n", "return", "X", ",", "Y", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.augment_cifar100_data": [[223, 226], ["data.augment_cifar10_data"], "function", ["home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.augment_cifar10_data"], ["", "def", "augment_cifar100_data", "(", "X", ",", "Y", ",", "key", ")", ":", "\n", "  ", "X", ",", "Y", "=", "augment_cifar10_data", "(", "X", ",", "Y", ",", "key", ")", "\n", "return", "X", ",", "Y", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.augment_cinic10_data": [[228, 231], ["data.augment_cifar10_data"], "function", ["home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.augment_cifar10_data"], ["", "def", "augment_cinic10_data", "(", "X", ",", "Y", ",", "key", ")", ":", "\n", "  ", "X", ",", "Y", "=", "augment_cifar10_data", "(", "X", ",", "Y", ",", "key", ")", "\n", "return", "X", ",", "Y", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.augment_data": [[233, 244], ["data.augment_cifar10_data", "data.augment_cifar100_data", "data.augment_cinic10_data"], "function", ["home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.augment_cifar10_data", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.augment_cifar100_data", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.augment_cinic10_data"], ["", "def", "augment_data", "(", "X", ",", "Y", ",", "key", ",", "args", ")", ":", "\n", "  ", "if", "args", ".", "augment", ":", "\n", "    ", "if", "args", ".", "dataset", "==", "'cifar10'", ":", "\n", "      ", "X", ",", "Y", "=", "augment_cifar10_data", "(", "X", ",", "Y", ",", "key", ")", "\n", "", "elif", "args", ".", "dataset", "==", "'cifar100'", ":", "\n", "      ", "X", ",", "Y", "=", "augment_cifar100_data", "(", "X", ",", "Y", ",", "key", ")", "\n", "", "elif", "args", ".", "dataset", "==", "'cinic10'", ":", "\n", "      ", "X", ",", "Y", "=", "augment_cinic10_data", "(", "X", ",", "Y", ",", "key", ")", "\n", "", "else", ":", "\n", "      ", "raise", "NotImplementedError", "\n", "", "", "return", "X", ",", "Y", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.train_batches": [[246, 283], ["jax.random.split", "jax.random.split", "numpy.array", "jax.random.PRNGKey", "jax.random.permutation", "jax.random.split", "numpy.array", "jax.random.split", "data.augment_data", "jax.random.permutation"], "function", ["home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.augment_data"], ["", "def", "train_batches", "(", "I", ",", "X", ",", "Y", ",", "args", ")", ":", "\n", "  ", "\"\"\"train_batches: I, X, Y, args -> (curr_step, I_batch, X_batch, Y_batch), ...\n  In:\n    I   : nparr(M)       : train (sub)set idxs\n    X   : nparr(N, img)  : all train images\n    Y   : nparr(N, C)    : all train labels\n    args: SimpleNamespace: data generation args\n  Gen:\n    curr_step: int          : current train step\n    I_batch  : nparr(B)     : batch train idxs\n    X_batch  : nparr(B, img): batch train images\n    Y_batch  : nparr(B, C)  : batch train labels\n  \"\"\"", "\n", "num_examples", "=", "I", ".", "shape", "[", "0", "]", "\n", "shuffle_key", ",", "augment_key", "=", "random", ".", "split", "(", "random", ".", "PRNGKey", "(", "args", ".", "train_seed", ")", ")", "\n", "# initial shuffle", "\n", "shuffle_key", ",", "key", "=", "random", ".", "split", "(", "shuffle_key", ")", "\n", "I", "=", "np", ".", "array", "(", "random", ".", "permutation", "(", "key", ",", "I", ")", ")", "\n", "# generate batches", "\n", "curr_step", ",", "start_idx", "=", "args", ".", "ckpt", "+", "1", ",", "0", "\n", "while", "curr_step", "<=", "args", ".", "num_steps", ":", "\n", "    ", "end_idx", "=", "start_idx", "+", "args", ".", "train_batch_size", "\n", "# shuffle at end of epoch", "\n", "if", "end_idx", ">", "num_examples", ":", "\n", "      ", "shuffle_key", ",", "key", "=", "random", ".", "split", "(", "shuffle_key", ")", "\n", "I", "=", "np", ".", "array", "(", "random", ".", "permutation", "(", "key", ",", "I", ")", ")", "\n", "start_idx", "=", "0", "\n", "# augment and yield train batch", "\n", "", "else", ":", "\n", "      ", "augment_key", ",", "key", "=", "random", ".", "split", "(", "augment_key", ")", "\n", "I_batch", "=", "I", "[", "start_idx", ":", "end_idx", "]", "\n", "X_batch", ",", "Y_batch", "=", "augment_data", "(", "X", "[", "I_batch", "]", ",", "Y", "[", "I_batch", "]", ",", "key", ",", "args", ")", "\n", "# yield batch", "\n", "yield", "curr_step", ",", "I_batch", ",", "X_batch", ",", "Y_batch", "\n", "# end step", "\n", "curr_step", "+=", "1", "\n", "start_idx", "=", "end_idx", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.test_batches": [[285, 304], ["min"], "function", ["None"], ["", "", "", "def", "test_batches", "(", "X", ",", "Y", ",", "batch_size", ")", ":", "\n", "  ", "\"\"\"test_batches: X, Y, batch_size -> (B, X_batch, Y_batch), ...\n  In:\n    X         : nparr(N, img): all test images\n    Y         : nparr(N, C)  : all test labels\n    batch_size: int          : maximum batch size\n  Gen:\n    B      : int          : current batch size\n    X_batch: nparr(B, img): batch test images\n    Y_batch: nparr(B, C)  : batch test labels\n  \"\"\"", "\n", "num_examples", "=", "X", ".", "shape", "[", "0", "]", "\n", "start_idx", "=", "0", "\n", "while", "start_idx", "<", "num_examples", ":", "\n", "    ", "end_idx", "=", "min", "(", "start_idx", "+", "batch_size", ",", "num_examples", ")", "\n", "B", "=", "end_idx", "-", "start_idx", "\n", "X_batch", ",", "Y_batch", "=", "X", "[", "start_idx", ":", "end_idx", "]", ",", "Y", "[", "start_idx", ":", "end_idx", "]", "\n", "yield", "B", ",", "X_batch", ",", "Y_batch", "\n", "start_idx", "=", "end_idx", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.get_class_balanced_random_subset": [[310, 330], ["numpy.random.RandomState", "numpy.concatenate", "numpy.concatenate", "numpy.stack", "numpy.stack", "np.random.RandomState.choice", "numpy.split", "numpy.split", "range", "range", "range"], "function", ["None"], ["", "", "def", "get_class_balanced_random_subset", "(", "X", ",", "Y", ",", "cls_smpl_sz", ",", "seed", ")", ":", "\n", "  ", "\"\"\"get_class_balanced_random_subset: X, Y, cls_smpl_sz, seed -> X, Y\n  In:\n    X          : nparr(N, img): all images, ASSUME sorted by class\n    Y          : nparr(N, C)  : corresponding labels, ASSUME equal number of examples per class\n    cls_smpl_sz: int          : number of examples per class in subset\n    seed       : int          : random seed\n  Out:\n    X: nparr(C * cls_smpl_sz, img): subsampled images, cls_smpl_sz examples per class, sorted by class\n    Y: nparr(C * cls_smpl_sz, C)  : corresponding labels\n  \"\"\"", "\n", "# reshape to class x batch x image/label", "\n", "n_cls", "=", "Y", ".", "shape", "[", "1", "]", "\n", "X_c", ",", "Y_c", "=", "np", ".", "stack", "(", "np", ".", "split", "(", "X", ",", "n_cls", ")", ")", ",", "np", ".", "stack", "(", "np", ".", "split", "(", "Y", ",", "n_cls", ")", ")", "\n", "# sample from batch dimension", "\n", "rng", "=", "np", ".", "random", ".", "RandomState", "(", "seed", ")", "\n", "idxs", "=", "[", "rng", ".", "choice", "(", "X_c", ".", "shape", "[", "1", "]", ",", "cls_smpl_sz", ",", "replace", "=", "False", ")", "for", "_", "in", "range", "(", "n_cls", ")", "]", "\n", "X", "=", "np", ".", "concatenate", "(", "[", "X_c", "[", "c", ",", "idxs", "[", "c", "]", "]", "for", "c", "in", "range", "(", "n_cls", ")", "]", ")", "\n", "Y", "=", "np", ".", "concatenate", "(", "[", "Y_c", "[", "c", ",", "idxs", "[", "c", "]", "]", "for", "c", "in", "range", "(", "n_cls", ")", "]", ")", "\n", "return", "X", ",", "Y", "\n", "", ""]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.test.get_test_step": [[5, 12], ["f_test", "metrics.cross_entropy_loss", "metrics.accuracy"], "function", ["home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.metrics.cross_entropy_loss", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.metrics.accuracy"], ["def", "get_test_step", "(", "f_test", ")", ":", "\n", "  ", "def", "test_step", "(", "state", ",", "x", ",", "y", ")", ":", "\n", "    ", "logits", "=", "f_test", "(", "state", ".", "optim", ".", "target", ",", "state", ".", "model", ",", "x", ")", "\n", "loss", "=", "cross_entropy_loss", "(", "logits", ",", "y", ")", "\n", "acc", "=", "accuracy", "(", "logits", ",", "y", ")", "\n", "return", "loss", ",", "acc", ",", "logits", "\n", "", "return", "test_step", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.test.test": [[14, 22], ["data.test_batches", "test.get_test_step.test_step", "loss.item", "acc.item"], "function", ["home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.data.test_batches"], ["", "def", "test", "(", "test_step", ",", "state", ",", "X", ",", "Y", ",", "batch_size", ")", ":", "\n", "  ", "loss", ",", "acc", ",", "N", "=", "0", ",", "0", ",", "X", ".", "shape", "[", "0", "]", "\n", "for", "n", ",", "x", ",", "y", "in", "test_batches", "(", "X", ",", "Y", ",", "batch_size", ")", ":", "\n", "    ", "step_loss", ",", "step_acc", ",", "_", "=", "test_step", "(", "state", ",", "x", ",", "y", ")", "\n", "loss", "+=", "step_loss", "*", "n", "\n", "acc", "+=", "step_acc", "*", "n", "\n", "", "loss", ",", "acc", "=", "loss", ".", "item", "(", ")", "/", "N", ",", "acc", ".", "item", "(", ")", "/", "N", "\n", "return", "loss", ",", "acc", "\n", "", ""]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.train_state.create_train_state": [[17, 27], ["init().pop", "flax.optim.Momentum().create", "train_state.TrainState", "model.init", "jax.random.PRNGKey", "jax.ones", "hasattr", "train_state.create_train_state.init"], "function", ["None"], ["", "def", "create_train_state", "(", "args", ",", "model", ")", ":", "\n", "  ", "@", "jit", "\n", "def", "init", "(", "*", "args", ")", ":", "\n", "    ", "return", "model", ".", "init", "(", "*", "args", ")", "\n", "", "key", ",", "input", "=", "random", ".", "PRNGKey", "(", "args", ".", "model_seed", ")", ",", "jnp", ".", "ones", "(", "(", "1", ",", "*", "args", ".", "image_shape", ")", ",", "model", ".", "dtype", ")", "\n", "model_state", ",", "params", "=", "init", "(", "key", ",", "input", ")", ".", "pop", "(", "'params'", ")", "\n", "if", "not", "hasattr", "(", "args", ",", "'nesterov'", ")", ":", "args", ".", "nesterov", "=", "False", "\n", "opt", "=", "optim", ".", "Momentum", "(", "args", ".", "lr", ",", "args", ".", "beta", ",", "args", ".", "weight_decay", ",", "args", ".", "nesterov", ")", ".", "create", "(", "params", ")", "\n", "train_state", "=", "TrainState", "(", "optim", "=", "opt", ",", "model", "=", "model_state", ")", "\n", "return", "train_state", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.train_state.get_train_state": [[29, 39], ["time.time", "print", "train_state.create_train_state", "models.get_num_params", "print", "print", "flax.training.checkpoints.restore_checkpoint", "int", "time.time"], "function", ["home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.train_state.create_train_state", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.models.get_num_params"], ["", "def", "get_train_state", "(", "args", ",", "model", ")", ":", "\n", "  ", "time_start", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "'get train state... '", ",", "end", "=", "''", ")", "\n", "state", "=", "create_train_state", "(", "args", ",", "model", ")", "\n", "if", "args", ".", "load_dir", ":", "\n", "    ", "print", "(", "f'load from {args.load_dir}/ckpts/checkpoint_{args.ckpt}... '", ",", "end", "=", "''", ")", "\n", "state", "=", "checkpoints", ".", "restore_checkpoint", "(", "args", ".", "load_dir", "+", "'/ckpts'", ",", "state", ",", "args", ".", "ckpt", ")", "\n", "", "args", ".", "num_params", "=", "get_num_params", "(", "state", ".", "optim", ".", "target", ")", "\n", "print", "(", "f'{int(time.time() - time_start)}s'", ")", "\n", "return", "state", ",", "args", "\n", "", ""]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.forgetting.init_forget_stats": [[5, 11], ["types.SimpleNamespace", "numpy.zeros", "numpy.zeros", "numpy.arange"], "function", ["None"], ["def", "init_forget_stats", "(", "args", ")", ":", "\n", "  ", "forget_stats", "=", "SimpleNamespace", "(", ")", "\n", "forget_stats", ".", "prev_accs", "=", "np", ".", "zeros", "(", "args", ".", "num_train_examples", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "forget_stats", ".", "num_forgets", "=", "np", ".", "zeros", "(", "args", ".", "num_train_examples", ",", "dtype", "=", "float", ")", "\n", "forget_stats", ".", "never_correct", "=", "np", ".", "arange", "(", "args", ".", "num_train_examples", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "return", "forget_stats", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.forgetting.update_forget_stats": [[13, 18], ["numpy.setdiff1d", "accs.astype"], "function", ["None"], ["", "def", "update_forget_stats", "(", "forget_stats", ",", "idxs", ",", "accs", ")", ":", "\n", "  ", "forget_stats", ".", "num_forgets", "[", "idxs", "[", "forget_stats", ".", "prev_accs", "[", "idxs", "]", ">", "accs", "]", "]", "+=", "1", "\n", "forget_stats", ".", "prev_accs", "[", "idxs", "]", "=", "accs", "\n", "forget_stats", ".", "never_correct", "=", "np", ".", "setdiff1d", "(", "forget_stats", ".", "never_correct", ",", "idxs", "[", "accs", ".", "astype", "(", "bool", ")", "]", ",", "True", ")", "\n", "return", "forget_stats", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.forgetting.save_forget_scores": [[20, 24], ["forget_stats.num_forgets.copy", "numpy.save"], "function", ["None"], ["", "def", "save_forget_scores", "(", "save_dir", ",", "ckpt", ",", "forget_stats", ")", ":", "\n", "  ", "forget_scores", "=", "forget_stats", ".", "num_forgets", ".", "copy", "(", ")", "\n", "forget_scores", "[", "forget_stats", ".", "never_correct", "]", "=", "np", ".", "inf", "\n", "np", ".", "save", "(", "save_dir", "+", "f'/forget_scores/ckpt_{ckpt}.npy'", ",", "forget_scores", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.forgetting.load_forget_scores": [[26, 28], ["numpy.load"], "function", ["None"], ["", "def", "load_forget_scores", "(", "load_dir", ",", "ckpt", ")", ":", "\n", "  ", "return", "np", ".", "load", "(", "load_dir", "+", "f'/forget_scores/ckpt_{ckpt}.npy'", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.utils.save_args": [[15, 20], ["open", "json.dump", "print", "vars"], "function", ["None"], ["def", "save_args", "(", "args", ",", "save_dir", ",", "verbose", "=", "True", ")", ":", "\n", "  ", "save_path", "=", "save_dir", "+", "'/args.json'", "\n", "with", "open", "(", "save_path", ",", "'w'", ")", "as", "f", ":", "json", ".", "dump", "(", "vars", "(", "args", ")", ",", "f", ",", "indent", "=", "4", ")", "\n", "if", "verbose", ":", "print", "(", "f'Save args to {save_path}'", ")", "\n", "return", "save_dir", "+", "'/args.json'", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.utils.load_args": [[22, 27], ["open", "types.SimpleNamespace", "print", "json.load"], "function", ["None"], ["", "def", "load_args", "(", "load_dir", ",", "verbose", "=", "True", ")", ":", "\n", "  ", "load_path", "=", "load_dir", "+", "'/args.json'", "\n", "with", "open", "(", "load_path", ",", "'r'", ")", "as", "f", ":", "args", "=", "SimpleNamespace", "(", "**", "json", ".", "load", "(", "f", ")", ")", "\n", "if", "verbose", ":", "print", "(", "f'Load args from {load_path}'", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.utils.print_args": [[29, 31], ["print", "json.dumps", "vars"], "function", ["None"], ["", "def", "print_args", "(", "args", ")", ":", "\n", "  ", "print", "(", "json", ".", "dumps", "(", "vars", "(", "args", ")", ",", "indent", "=", "4", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.utils.make_dir": [[37, 41], ["os.path.exists", "os.makedirs", "shutil.rmtree"], "function", ["None"], ["", "def", "make_dir", "(", "path", ")", ":", "\n", "  ", "if", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "\n", "    ", "shutil", ".", "rmtree", "(", "path", ")", "\n", "", "os", ".", "makedirs", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.utils.get_fn_params_state": [[47, 53], ["models.get_model", "models.get_apply_fn_test", "train_state.get_train_state"], "function", ["home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.models.get_model", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.models.get_apply_fn_test", "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.train_state.get_train_state"], ["", "def", "get_fn_params_state", "(", "args", ")", ":", "\n", "  ", "model", "=", "get_model", "(", "args", ")", "\n", "fn", "=", "get_apply_fn_test", "(", "model", ")", "\n", "state", ",", "args", "=", "get_train_state", "(", "args", ",", "model", ")", "\n", "params", ",", "state", "=", "state", ".", "optim", ".", "target", ",", "state", ".", "model", "\n", "return", "fn", ",", "params", ",", "state", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.utils.set_global_seed": [[59, 62], ["numpy.random.seed", "tensorflow.random.set_seed"], "function", ["None"], ["", "def", "set_global_seed", "(", "seed", "=", "0", ")", ":", "\n", "  ", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "tf", ".", "random", ".", "set_seed", "(", "seed", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.recorder.init_recorder": [[5, 16], ["types.SimpleNamespace"], "function", ["None"], ["def", "init_recorder", "(", ")", ":", "\n", "  ", "rec", "=", "SimpleNamespace", "(", ")", "\n", "rec", ".", "train_step", "=", "[", "]", "\n", "rec", ".", "train_loss", "=", "[", "]", "\n", "rec", ".", "train_acc", "=", "[", "]", "\n", "rec", ".", "lr", "=", "[", "]", "\n", "rec", ".", "test_step", "=", "[", "]", "\n", "rec", ".", "test_loss", "=", "[", "]", "\n", "rec", ".", "test_acc", "=", "[", "]", "\n", "rec", ".", "ckpts", "=", "[", "]", "\n", "return", "rec", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.recorder.record_train_stats": [[18, 24], ["rec.train_step.append", "rec.train_loss.append", "rec.train_acc.append", "rec.lr.append"], "function", ["None"], ["", "def", "record_train_stats", "(", "rec", ",", "step", ",", "loss", ",", "acc", ",", "lr", ")", ":", "\n", "  ", "rec", ".", "train_step", ".", "append", "(", "step", ")", "\n", "rec", ".", "train_loss", ".", "append", "(", "loss", ")", "\n", "rec", ".", "train_acc", ".", "append", "(", "acc", ")", "\n", "rec", ".", "lr", ".", "append", "(", "lr", ")", "\n", "return", "rec", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.recorder.record_test_stats": [[26, 31], ["rec.test_step.append", "rec.test_loss.append", "rec.test_acc.append"], "function", ["None"], ["", "def", "record_test_stats", "(", "rec", ",", "step", ",", "loss", ",", "acc", ")", ":", "\n", "  ", "rec", ".", "test_step", ".", "append", "(", "step", ")", "\n", "rec", ".", "test_loss", ".", "append", "(", "loss", ")", "\n", "rec", ".", "test_acc", ".", "append", "(", "acc", ")", "\n", "return", "rec", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.recorder.record_ckpt": [[33, 36], ["rec.ckpts.append"], "function", ["None"], ["", "def", "record_ckpt", "(", "rec", ",", "step", ")", ":", "\n", "  ", "rec", ".", "ckpts", ".", "append", "(", "step", ")", "\n", "return", "rec", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.recorder.save_recorder": [[38, 43], ["open", "pickle.dump", "print", "vars"], "function", ["None"], ["", "def", "save_recorder", "(", "save_dir", ",", "rec", ",", "verbose", "=", "True", ")", ":", "\n", "  ", "save_path", "=", "save_dir", "+", "'/recorder.pkl'", "\n", "with", "open", "(", "save_path", ",", "'wb'", ")", "as", "f", ":", "pickle", ".", "dump", "(", "vars", "(", "rec", ")", ",", "f", ")", "\n", "if", "verbose", ":", "print", "(", "f'Save record to {save_path}'", ")", "\n", "return", "save_path", "\n", "\n"]], "home.repos.pwc.inspect_result.mansheej_data_diet.data_diet.recorder.load_recorder": [[45, 50], ["open", "types.SimpleNamespace", "print", "pickle.load"], "function", ["None"], ["", "def", "load_recorder", "(", "load_dir", ",", "verbose", "=", "True", ")", ":", "\n", "  ", "load_path", "=", "load_dir", "+", "'/recorder.pkl'", "\n", "with", "open", "(", "load_path", ",", "'rb'", ")", "as", "f", ":", "rec", "=", "SimpleNamespace", "(", "**", "pickle", ".", "load", "(", "f", ")", ")", "\n", "if", "verbose", ":", "print", "(", "f'Load record from {load_path}'", ")", "\n", "return", "rec", "\n", "", ""]]}