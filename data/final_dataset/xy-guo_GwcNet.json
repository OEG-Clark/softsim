{"home.repos.pwc.inspect_result.xy-guo_GwcNet.None.main.train": [[91, 135], ["range", "adjust_learning_rate", "enumerate", "gc.collect", "AverageMeterDict", "enumerate", "avg_test_scalars.mean.mean", "save_scalars", "print", "gc.collect", "time.time", "main.train_sample", "print", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "time.time", "main.test_sample", "avg_test_scalars.mean.update", "print", "save_scalars", "save_images", "model.state_dict", "optimizer.state_dict", "save_scalars", "save_images", "len", "len", "len", "len", "len", "time.time", "time.time"], "function", ["home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.adjust_learning_rate", "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.AverageMeterDict.mean", "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.save_scalars", "home.repos.pwc.inspect_result.xy-guo_GwcNet.None.main.train_sample", "home.repos.pwc.inspect_result.xy-guo_GwcNet.None.save_disp.test_sample", "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.AverageMeterDict.update", "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.save_scalars", "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.save_images", "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.save_scalars", "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.save_images"], ["def", "train", "(", ")", ":", "\n", "    ", "for", "epoch_idx", "in", "range", "(", "start_epoch", ",", "args", ".", "epochs", ")", ":", "\n", "        ", "adjust_learning_rate", "(", "optimizer", ",", "epoch_idx", ",", "args", ".", "lr", ",", "args", ".", "lrepochs", ")", "\n", "\n", "# training", "\n", "for", "batch_idx", ",", "sample", "in", "enumerate", "(", "TrainImgLoader", ")", ":", "\n", "            ", "global_step", "=", "len", "(", "TrainImgLoader", ")", "*", "epoch_idx", "+", "batch_idx", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "do_summary", "=", "global_step", "%", "args", ".", "summary_freq", "==", "0", "\n", "loss", ",", "scalar_outputs", ",", "image_outputs", "=", "train_sample", "(", "sample", ",", "compute_metrics", "=", "do_summary", ")", "\n", "if", "do_summary", ":", "\n", "                ", "save_scalars", "(", "logger", ",", "'train'", ",", "scalar_outputs", ",", "global_step", ")", "\n", "save_images", "(", "logger", ",", "'train'", ",", "image_outputs", ",", "global_step", ")", "\n", "", "del", "scalar_outputs", ",", "image_outputs", "\n", "print", "(", "'Epoch {}/{}, Iter {}/{}, train loss = {:.3f}, time = {:.3f}'", ".", "format", "(", "epoch_idx", ",", "args", ".", "epochs", ",", "\n", "batch_idx", ",", "\n", "len", "(", "TrainImgLoader", ")", ",", "loss", ",", "\n", "time", ".", "time", "(", ")", "-", "start_time", ")", ")", "\n", "# saving checkpoints", "\n", "", "if", "(", "epoch_idx", "+", "1", ")", "%", "args", ".", "save_freq", "==", "0", ":", "\n", "            ", "checkpoint_data", "=", "{", "'epoch'", ":", "epoch_idx", ",", "'model'", ":", "model", ".", "state_dict", "(", ")", ",", "'optimizer'", ":", "optimizer", ".", "state_dict", "(", ")", "}", "\n", "torch", ".", "save", "(", "checkpoint_data", ",", "\"{}/checkpoint_{:0>6}.ckpt\"", ".", "format", "(", "args", ".", "logdir", ",", "epoch_idx", ")", ")", "\n", "", "gc", ".", "collect", "(", ")", "\n", "\n", "# testing", "\n", "avg_test_scalars", "=", "AverageMeterDict", "(", ")", "\n", "for", "batch_idx", ",", "sample", "in", "enumerate", "(", "TestImgLoader", ")", ":", "\n", "            ", "global_step", "=", "len", "(", "TestImgLoader", ")", "*", "epoch_idx", "+", "batch_idx", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "do_summary", "=", "global_step", "%", "args", ".", "summary_freq", "==", "0", "\n", "loss", ",", "scalar_outputs", ",", "image_outputs", "=", "test_sample", "(", "sample", ",", "compute_metrics", "=", "do_summary", ")", "\n", "if", "do_summary", ":", "\n", "                ", "save_scalars", "(", "logger", ",", "'test'", ",", "scalar_outputs", ",", "global_step", ")", "\n", "save_images", "(", "logger", ",", "'test'", ",", "image_outputs", ",", "global_step", ")", "\n", "", "avg_test_scalars", ".", "update", "(", "scalar_outputs", ")", "\n", "del", "scalar_outputs", ",", "image_outputs", "\n", "print", "(", "'Epoch {}/{}, Iter {}/{}, test loss = {:.3f}, time = {:3f}'", ".", "format", "(", "epoch_idx", ",", "args", ".", "epochs", ",", "\n", "batch_idx", ",", "\n", "len", "(", "TestImgLoader", ")", ",", "loss", ",", "\n", "time", ".", "time", "(", ")", "-", "start_time", ")", ")", "\n", "", "avg_test_scalars", "=", "avg_test_scalars", ".", "mean", "(", ")", "\n", "save_scalars", "(", "logger", ",", "'fulltest'", ",", "avg_test_scalars", ",", "len", "(", "TrainImgLoader", ")", "*", "(", "epoch_idx", "+", "1", ")", ")", "\n", "print", "(", "\"avg_test_scalars\"", ",", "avg_test_scalars", ")", "\n", "gc", ".", "collect", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.None.main.train_sample": [[138, 166], ["model.train", "imgL.cuda.cuda", "imgR.cuda.cuda", "disp_gt.cuda.cuda", "optimizer.zero_grad", "model", "models.model_loss", "models.model_loss.backward", "optimizer.step", "tensor2float", "tensor2float", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "EPE_metric", "D1_metric", "Thres_metric", "Thres_metric", "Thres_metric", "disp_error_image_func"], "function", ["home.repos.pwc.inspect_result.xy-guo_GwcNet.None.main.train", "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.loss.model_loss", "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.visualization.disp_error_image_func.backward", "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.tensor2float", "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.tensor2float", "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.metrics.EPE_metric", "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.metrics.D1_metric", "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.metrics.Thres_metric", "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.metrics.Thres_metric", "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.metrics.Thres_metric"], ["", "", "def", "train_sample", "(", "sample", ",", "compute_metrics", "=", "False", ")", ":", "\n", "    ", "model", ".", "train", "(", ")", "\n", "\n", "imgL", ",", "imgR", ",", "disp_gt", "=", "sample", "[", "'left'", "]", ",", "sample", "[", "'right'", "]", ",", "sample", "[", "'disparity'", "]", "\n", "imgL", "=", "imgL", ".", "cuda", "(", ")", "\n", "imgR", "=", "imgR", ".", "cuda", "(", ")", "\n", "disp_gt", "=", "disp_gt", ".", "cuda", "(", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "disp_ests", "=", "model", "(", "imgL", ",", "imgR", ")", "\n", "mask", "=", "(", "disp_gt", "<", "args", ".", "maxdisp", ")", "&", "(", "disp_gt", ">", "0", ")", "\n", "loss", "=", "model_loss", "(", "disp_ests", ",", "disp_gt", ",", "mask", ")", "\n", "\n", "scalar_outputs", "=", "{", "\"loss\"", ":", "loss", "}", "\n", "image_outputs", "=", "{", "\"disp_est\"", ":", "disp_ests", ",", "\"disp_gt\"", ":", "disp_gt", ",", "\"imgL\"", ":", "imgL", ",", "\"imgR\"", ":", "imgR", "}", "\n", "if", "compute_metrics", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "image_outputs", "[", "\"errormap\"", "]", "=", "[", "disp_error_image_func", "(", ")", "(", "disp_est", ",", "disp_gt", ")", "for", "disp_est", "in", "disp_ests", "]", "\n", "scalar_outputs", "[", "\"EPE\"", "]", "=", "[", "EPE_metric", "(", "disp_est", ",", "disp_gt", ",", "mask", ")", "for", "disp_est", "in", "disp_ests", "]", "\n", "scalar_outputs", "[", "\"D1\"", "]", "=", "[", "D1_metric", "(", "disp_est", ",", "disp_gt", ",", "mask", ")", "for", "disp_est", "in", "disp_ests", "]", "\n", "scalar_outputs", "[", "\"Thres1\"", "]", "=", "[", "Thres_metric", "(", "disp_est", ",", "disp_gt", ",", "mask", ",", "1.0", ")", "for", "disp_est", "in", "disp_ests", "]", "\n", "scalar_outputs", "[", "\"Thres2\"", "]", "=", "[", "Thres_metric", "(", "disp_est", ",", "disp_gt", ",", "mask", ",", "2.0", ")", "for", "disp_est", "in", "disp_ests", "]", "\n", "scalar_outputs", "[", "\"Thres3\"", "]", "=", "[", "Thres_metric", "(", "disp_est", ",", "disp_gt", ",", "mask", ",", "3.0", ")", "for", "disp_est", "in", "disp_ests", "]", "\n", "", "", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "return", "tensor2float", "(", "loss", ")", ",", "tensor2float", "(", "scalar_outputs", ")", ",", "image_outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.None.main.test_sample": [[169, 195], ["model.eval", "imgL.cuda.cuda", "imgR.cuda.cuda", "disp_gt.cuda.cuda", "model", "models.model_loss", "D1_metric", "EPE_metric", "Thres_metric", "Thres_metric", "Thres_metric", "tensor2float", "tensor2float", "disp_error_image_func"], "function", ["home.repos.pwc.inspect_result.xy-guo_GwcNet.models.loss.model_loss", "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.metrics.D1_metric", "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.metrics.EPE_metric", "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.metrics.Thres_metric", "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.metrics.Thres_metric", "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.metrics.Thres_metric", "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.tensor2float", "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.tensor2float"], ["", "@", "make_nograd_func", "\n", "def", "test_sample", "(", "sample", ",", "compute_metrics", "=", "True", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "\n", "imgL", ",", "imgR", ",", "disp_gt", "=", "sample", "[", "'left'", "]", ",", "sample", "[", "'right'", "]", ",", "sample", "[", "'disparity'", "]", "\n", "imgL", "=", "imgL", ".", "cuda", "(", ")", "\n", "imgR", "=", "imgR", ".", "cuda", "(", ")", "\n", "disp_gt", "=", "disp_gt", ".", "cuda", "(", ")", "\n", "\n", "disp_ests", "=", "model", "(", "imgL", ",", "imgR", ")", "\n", "mask", "=", "(", "disp_gt", "<", "args", ".", "maxdisp", ")", "&", "(", "disp_gt", ">", "0", ")", "\n", "loss", "=", "model_loss", "(", "disp_ests", ",", "disp_gt", ",", "mask", ")", "\n", "\n", "scalar_outputs", "=", "{", "\"loss\"", ":", "loss", "}", "\n", "image_outputs", "=", "{", "\"disp_est\"", ":", "disp_ests", ",", "\"disp_gt\"", ":", "disp_gt", ",", "\"imgL\"", ":", "imgL", ",", "\"imgR\"", ":", "imgR", "}", "\n", "\n", "scalar_outputs", "[", "\"D1\"", "]", "=", "[", "D1_metric", "(", "disp_est", ",", "disp_gt", ",", "mask", ")", "for", "disp_est", "in", "disp_ests", "]", "\n", "scalar_outputs", "[", "\"EPE\"", "]", "=", "[", "EPE_metric", "(", "disp_est", ",", "disp_gt", ",", "mask", ")", "for", "disp_est", "in", "disp_ests", "]", "\n", "scalar_outputs", "[", "\"Thres1\"", "]", "=", "[", "Thres_metric", "(", "disp_est", ",", "disp_gt", ",", "mask", ",", "1.0", ")", "for", "disp_est", "in", "disp_ests", "]", "\n", "scalar_outputs", "[", "\"Thres2\"", "]", "=", "[", "Thres_metric", "(", "disp_est", ",", "disp_gt", ",", "mask", ",", "2.0", ")", "for", "disp_est", "in", "disp_ests", "]", "\n", "scalar_outputs", "[", "\"Thres3\"", "]", "=", "[", "Thres_metric", "(", "disp_est", ",", "disp_gt", ",", "mask", ",", "3.0", ")", "for", "disp_est", "in", "disp_ests", "]", "\n", "\n", "if", "compute_metrics", ":", "\n", "        ", "image_outputs", "[", "\"errormap\"", "]", "=", "[", "disp_error_image_func", "(", ")", "(", "disp_est", ",", "disp_gt", ")", "for", "disp_est", "in", "disp_ests", "]", "\n", "\n", "", "return", "tensor2float", "(", "loss", ")", ",", "tensor2float", "(", "scalar_outputs", ")", ",", "image_outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.None.save_disp.test": [[53, 71], ["os.makedirs", "enumerate", "time.time", "tensor2numpy", "tensor2numpy", "tensor2numpy", "print", "zip", "save_disp.test_sample", "numpy.array", "os.path.join", "print", "numpy.round().astype", "skimage.io.imsave", "len", "len", "time.time", "os.path.join.split", "numpy.round"], "function", ["home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.tensor2numpy", "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.tensor2numpy", "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.tensor2numpy", "home.repos.pwc.inspect_result.xy-guo_GwcNet.None.save_disp.test_sample"], ["def", "test", "(", ")", ":", "\n", "    ", "os", ".", "makedirs", "(", "'./predictions'", ",", "exist_ok", "=", "True", ")", "\n", "for", "batch_idx", ",", "sample", "in", "enumerate", "(", "TestImgLoader", ")", ":", "\n", "        ", "start_time", "=", "time", ".", "time", "(", ")", "\n", "disp_est_np", "=", "tensor2numpy", "(", "test_sample", "(", "sample", ")", ")", "\n", "top_pad_np", "=", "tensor2numpy", "(", "sample", "[", "\"top_pad\"", "]", ")", "\n", "right_pad_np", "=", "tensor2numpy", "(", "sample", "[", "\"right_pad\"", "]", ")", "\n", "left_filenames", "=", "sample", "[", "\"left_filename\"", "]", "\n", "print", "(", "'Iter {}/{}, time = {:3f}'", ".", "format", "(", "batch_idx", ",", "len", "(", "TestImgLoader", ")", ",", "\n", "time", ".", "time", "(", ")", "-", "start_time", ")", ")", "\n", "\n", "for", "disp_est", ",", "top_pad", ",", "right_pad", ",", "fn", "in", "zip", "(", "disp_est_np", ",", "top_pad_np", ",", "right_pad_np", ",", "left_filenames", ")", ":", "\n", "            ", "assert", "len", "(", "disp_est", ".", "shape", ")", "==", "2", "\n", "disp_est", "=", "np", ".", "array", "(", "disp_est", "[", "top_pad", ":", ",", ":", "-", "right_pad", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "fn", "=", "os", ".", "path", ".", "join", "(", "\"predictions\"", ",", "fn", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ")", "\n", "print", "(", "\"saving to\"", ",", "fn", ",", "disp_est", ".", "shape", ")", "\n", "disp_est_uint", "=", "np", ".", "round", "(", "disp_est", "*", "256", ")", ".", "astype", "(", "np", ".", "uint16", ")", "\n", "skimage", ".", "io", ".", "imsave", "(", "fn", ",", "disp_est_uint", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.None.save_disp.test_sample": [[74, 79], ["model.eval", "model", "sample[].cuda", "sample[].cuda"], "function", ["None"], ["", "", "", "@", "make_nograd_func", "\n", "def", "test_sample", "(", "sample", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "disp_ests", "=", "model", "(", "sample", "[", "'left'", "]", ".", "cuda", "(", ")", ",", "sample", "[", "'right'", "]", ".", "cuda", "(", ")", ")", "\n", "return", "disp_ests", "[", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.metrics.check_shape_for_metric_computation": [[15, 20], ["isinstance", "len", "var.size", "vars[].size", "var.size"], "function", ["None"], ["def", "check_shape_for_metric_computation", "(", "*", "vars", ")", ":", "\n", "    ", "assert", "isinstance", "(", "vars", ",", "tuple", ")", "\n", "for", "var", "in", "vars", ":", "\n", "        ", "assert", "len", "(", "var", ".", "size", "(", ")", ")", "==", "3", "\n", "assert", "var", ".", "size", "(", ")", "==", "vars", "[", "0", "]", ".", "size", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.metrics.compute_metric_for_each_image": [[22, 42], ["metrics.check_shape_for_metric_computation", "range", "len", "print", "torch.tensor", "torch.tensor", "torch.stack().mean", "torch.stack().mean", "print", "metric_func", "results.append", "isinstance", "masks[].float().mean", "torch.stack", "torch.stack", "masks[].float"], "function", ["home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.metrics.check_shape_for_metric_computation", "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.AverageMeterDict.mean", "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.AverageMeterDict.mean", "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.AverageMeterDict.mean"], ["", "", "def", "compute_metric_for_each_image", "(", "metric_func", ")", ":", "\n", "    ", "def", "wrapper", "(", "D_ests", ",", "D_gts", ",", "masks", ",", "*", "nargs", ")", ":", "\n", "        ", "check_shape_for_metric_computation", "(", "D_ests", ",", "D_gts", ",", "masks", ")", "\n", "bn", "=", "D_gts", ".", "shape", "[", "0", "]", "# batch size", "\n", "results", "=", "[", "]", "# a list to store results for each image", "\n", "# compute result one by one", "\n", "for", "idx", "in", "range", "(", "bn", ")", ":", "\n", "# if tensor, then pick idx, else pass the same value", "\n", "            ", "cur_nargs", "=", "[", "x", "[", "idx", "]", "if", "isinstance", "(", "x", ",", "(", "Tensor", ",", "Variable", ")", ")", "else", "x", "for", "x", "in", "nargs", "]", "\n", "if", "masks", "[", "idx", "]", ".", "float", "(", ")", ".", "mean", "(", ")", "/", "(", "D_gts", "[", "idx", "]", ">", "0", ")", ".", "float", "(", ")", ".", "mean", "(", ")", "<", "0.1", ":", "\n", "                ", "print", "(", "\"masks[idx].float().mean() too small, skip\"", ")", "\n", "", "else", ":", "\n", "                ", "ret", "=", "metric_func", "(", "D_ests", "[", "idx", "]", ",", "D_gts", "[", "idx", "]", ",", "masks", "[", "idx", "]", ",", "*", "cur_nargs", ")", "\n", "results", ".", "append", "(", "ret", ")", "\n", "", "", "if", "len", "(", "results", ")", "==", "0", ":", "\n", "            ", "print", "(", "\"masks[idx].float().mean() too small for all images in this batch, return 0\"", ")", "\n", "return", "torch", ".", "tensor", "(", "0", ",", "dtype", "=", "torch", ".", "float32", ",", "device", "=", "D_gts", ".", "device", ")", "\n", "", "else", ":", "\n", "            ", "return", "torch", ".", "stack", "(", "results", ")", ".", "mean", "(", ")", "\n", "", "", "return", "wrapper", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.metrics.D1_metric": [[43, 50], ["torch.abs", "torch.abs", "torch.mean", "torch.mean", "err_mask.float", "D_gt.abs"], "function", ["home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.AverageMeterDict.mean", "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.AverageMeterDict.mean"], ["", "@", "make_nograd_func", "\n", "@", "compute_metric_for_each_image", "\n", "def", "D1_metric", "(", "D_est", ",", "D_gt", ",", "mask", ")", ":", "\n", "    ", "D_est", ",", "D_gt", "=", "D_est", "[", "mask", "]", ",", "D_gt", "[", "mask", "]", "\n", "E", "=", "torch", ".", "abs", "(", "D_gt", "-", "D_est", ")", "\n", "err_mask", "=", "(", "E", ">", "3", ")", "&", "(", "E", "/", "D_gt", ".", "abs", "(", ")", ">", "0.05", ")", "\n", "return", "torch", ".", "mean", "(", "err_mask", ".", "float", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.metrics.Thres_metric": [[51, 59], ["isinstance", "torch.abs", "torch.abs", "torch.mean", "torch.mean", "err_mask.float"], "function", ["home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.AverageMeterDict.mean", "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.AverageMeterDict.mean"], ["", "@", "make_nograd_func", "\n", "@", "compute_metric_for_each_image", "\n", "def", "Thres_metric", "(", "D_est", ",", "D_gt", ",", "mask", ",", "thres", ")", ":", "\n", "    ", "assert", "isinstance", "(", "thres", ",", "(", "int", ",", "float", ")", ")", "\n", "D_est", ",", "D_gt", "=", "D_est", "[", "mask", "]", ",", "D_gt", "[", "mask", "]", "\n", "E", "=", "torch", ".", "abs", "(", "D_gt", "-", "D_est", ")", "\n", "err_mask", "=", "E", ">", "thres", "\n", "return", "torch", ".", "mean", "(", "err_mask", ".", "float", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.metrics.EPE_metric": [[61, 66], ["torch.l1_loss"], "function", ["None"], ["", "@", "make_nograd_func", "\n", "@", "compute_metric_for_each_image", "\n", "def", "EPE_metric", "(", "D_est", ",", "D_gt", ",", "mask", ")", ":", "\n", "    ", "D_est", ",", "D_gt", "=", "D_est", "[", "mask", "]", ",", "D_gt", "[", "mask", "]", "\n", "return", "F", ".", "l1_loss", "(", "D_est", ",", "D_gt", ",", "size_average", "=", "True", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.visualization.disp_error_image_func.forward": [[31, 56], ["D_gt_tensor.detach().cpu().numpy", "D_est_tensor.detach().cpu().numpy", "numpy.abs", "numpy.minimum", "numpy.zeros", "range", "range", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "numpy.ascontiguousarray", "D_gt_tensor.detach().cpu", "D_est_tensor.detach().cpu", "numpy.logical_not", "numpy.logical_not", "numpy.zeros.transpose", "numpy.logical_and", "D_gt_tensor.detach", "D_est_tensor.detach"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "D_est_tensor", ",", "D_gt_tensor", ",", "abs_thres", "=", "3.", ",", "rel_thres", "=", "0.05", ",", "dilate_radius", "=", "1", ")", ":", "\n", "        ", "D_gt_np", "=", "D_gt_tensor", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "D_est_np", "=", "D_est_tensor", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "B", ",", "H", ",", "W", "=", "D_gt_np", ".", "shape", "\n", "# valid mask", "\n", "mask", "=", "D_gt_np", ">", "0", "\n", "# error in percentage. When error <= 1, the pixel is valid since <= 3px & 5%", "\n", "error", "=", "np", ".", "abs", "(", "D_gt_np", "-", "D_est_np", ")", "\n", "error", "[", "np", ".", "logical_not", "(", "mask", ")", "]", "=", "0", "\n", "error", "[", "mask", "]", "=", "np", ".", "minimum", "(", "error", "[", "mask", "]", "/", "abs_thres", ",", "(", "error", "[", "mask", "]", "/", "D_gt_np", "[", "mask", "]", ")", "/", "rel_thres", ")", "\n", "# get colormap", "\n", "cols", "=", "error_colormap", "\n", "# create error image", "\n", "error_image", "=", "np", ".", "zeros", "(", "[", "B", ",", "H", ",", "W", ",", "3", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "i", "in", "range", "(", "cols", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "error_image", "[", "np", ".", "logical_and", "(", "error", ">=", "cols", "[", "i", "]", "[", "0", "]", ",", "error", "<", "cols", "[", "i", "]", "[", "1", "]", ")", "]", "=", "cols", "[", "i", ",", "2", ":", "]", "\n", "# TODO: imdilate", "\n", "# error_image = cv2.imdilate(D_err, strel('disk', dilate_radius));", "\n", "", "error_image", "[", "np", ".", "logical_not", "(", "mask", ")", "]", "=", "0.", "\n", "# show color tag in the top-left cornor of the image", "\n", "for", "i", "in", "range", "(", "cols", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "distance", "=", "20", "\n", "error_image", "[", ":", ",", ":", "10", ",", "i", "*", "distance", ":", "(", "i", "+", "1", ")", "*", "distance", ",", ":", "]", "=", "cols", "[", "i", ",", "2", ":", "]", "\n", "\n", "", "return", "torch", ".", "from_numpy", "(", "np", ".", "ascontiguousarray", "(", "error_image", ".", "transpose", "(", "[", "0", ",", "3", ",", "1", ",", "2", "]", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.visualization.disp_error_image_func.backward": [[57, 59], ["None"], "methods", ["None"], ["", "def", "backward", "(", "self", ",", "grad_output", ")", ":", "\n", "        ", "return", "None", "\n", "", "", ""]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.visualization.gen_error_colormap": [[11, 25], ["numpy.array"], "function", ["None"], ["def", "gen_error_colormap", "(", ")", ":", "\n", "    ", "cols", "=", "np", ".", "array", "(", "\n", "[", "[", "0", "/", "3.0", ",", "0.1875", "/", "3.0", ",", "49", ",", "54", ",", "149", "]", ",", "\n", "[", "0.1875", "/", "3.0", ",", "0.375", "/", "3.0", ",", "69", ",", "117", ",", "180", "]", ",", "\n", "[", "0.375", "/", "3.0", ",", "0.75", "/", "3.0", ",", "116", ",", "173", ",", "209", "]", ",", "\n", "[", "0.75", "/", "3.0", ",", "1.5", "/", "3.0", ",", "171", ",", "217", ",", "233", "]", ",", "\n", "[", "1.5", "/", "3.0", ",", "3", "/", "3.0", ",", "224", ",", "243", ",", "248", "]", ",", "\n", "[", "3", "/", "3.0", ",", "6", "/", "3.0", ",", "254", ",", "224", ",", "144", "]", ",", "\n", "[", "6", "/", "3.0", ",", "12", "/", "3.0", ",", "253", ",", "174", ",", "97", "]", ",", "\n", "[", "12", "/", "3.0", ",", "24", "/", "3.0", ",", "244", ",", "109", ",", "67", "]", ",", "\n", "[", "24", "/", "3.0", ",", "48", "/", "3.0", ",", "215", ",", "48", ",", "39", "]", ",", "\n", "[", "48", "/", "3.0", ",", "np", ".", "inf", ",", "165", ",", "0", ",", "38", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "cols", "[", ":", ",", "2", ":", "5", "]", "/=", "255.", "\n", "return", "cols", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.AverageMeter.__init__": [[113, 116], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "sum_value", "=", "0.", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.AverageMeter.update": [[117, 121], ["experiment.check_allfloat"], "methods", ["home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.check_allfloat"], ["", "def", "update", "(", "self", ",", "x", ")", ":", "\n", "        ", "check_allfloat", "(", "x", ")", "\n", "self", ".", "sum_value", "+=", "x", "\n", "self", ".", "count", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.AverageMeter.mean": [[122, 124], ["None"], "methods", ["None"], ["", "def", "mean", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "sum_value", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.AverageMeterDict.__init__": [[127, 130], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "data", "=", "None", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.AverageMeterDict.update": [[131, 145], ["experiment.check_allfloat", "copy.deepcopy", "x.items", "isinstance", "isinstance", "isinstance", "enumerate", "NotImplementedError"], "methods", ["home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.check_allfloat"], ["", "def", "update", "(", "self", ",", "x", ")", ":", "\n", "        ", "check_allfloat", "(", "x", ")", "\n", "self", ".", "count", "+=", "1", "\n", "if", "self", ".", "data", "is", "None", ":", "\n", "            ", "self", ".", "data", "=", "copy", ".", "deepcopy", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "for", "k1", ",", "v1", "in", "x", ".", "items", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "v1", ",", "float", ")", ":", "\n", "                    ", "self", ".", "data", "[", "k1", "]", "+=", "v1", "\n", "", "elif", "isinstance", "(", "v1", ",", "tuple", ")", "or", "isinstance", "(", "v1", ",", "list", ")", ":", "\n", "                    ", "for", "idx", ",", "v2", "in", "enumerate", "(", "v1", ")", ":", "\n", "                        ", "self", ".", "data", "[", "k1", "]", "[", "idx", "]", "+=", "v2", "\n", "", "", "else", ":", "\n", "                    ", "assert", "NotImplementedError", "(", "\"error input type for update AvgMeterDict\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.AverageMeterDict.mean": [[146, 152], ["experiment.AverageMeterDict.mean.get_mean"], "methods", ["None"], ["", "", "", "", "def", "mean", "(", "self", ")", ":", "\n", "        ", "@", "make_iterative_func", "\n", "def", "get_mean", "(", "v", ")", ":", "\n", "            ", "return", "v", "/", "float", "(", "self", ".", "count", ")", "\n", "\n", "", "return", "get_mean", "(", "self", ".", "data", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.make_iterative_func": [[13, 25], ["isinstance", "isinstance", "experiment.make_iterative_func.wrapper"], "function", ["None"], ["def", "make_iterative_func", "(", "func", ")", ":", "\n", "    ", "def", "wrapper", "(", "vars", ")", ":", "\n", "        ", "if", "isinstance", "(", "vars", ",", "list", ")", ":", "\n", "            ", "return", "[", "wrapper", "(", "x", ")", "for", "x", "in", "vars", "]", "\n", "", "elif", "isinstance", "(", "vars", ",", "tuple", ")", ":", "\n", "            ", "return", "tuple", "(", "[", "wrapper", "(", "x", ")", "for", "x", "in", "vars", "]", ")", "\n", "", "elif", "isinstance", "(", "vars", ",", "dict", ")", ":", "\n", "            ", "return", "{", "k", ":", "wrapper", "(", "v", ")", "for", "k", ",", "v", "in", "vars", ".", "items", "(", ")", "}", "\n", "", "else", ":", "\n", "            ", "return", "func", "(", "vars", ")", "\n", "\n", "", "", "return", "wrapper", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.make_nograd_func": [[27, 34], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "func"], "function", ["None"], ["", "def", "make_nograd_func", "(", "func", ")", ":", "\n", "    ", "def", "wrapper", "(", "*", "f_args", ",", "**", "f_kwargs", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "ret", "=", "func", "(", "*", "f_args", ",", "**", "f_kwargs", ")", "\n", "", "return", "ret", "\n", "\n", "", "return", "wrapper", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.tensor2float": [[36, 44], ["isinstance", "isinstance", "vars.data.item", "NotImplementedError"], "function", ["None"], ["", "@", "make_iterative_func", "\n", "def", "tensor2float", "(", "vars", ")", ":", "\n", "    ", "if", "isinstance", "(", "vars", ",", "float", ")", ":", "\n", "        ", "return", "vars", "\n", "", "elif", "isinstance", "(", "vars", ",", "torch", ".", "Tensor", ")", ":", "\n", "        ", "return", "vars", ".", "data", ".", "item", "(", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "(", "\"invalid input type for tensor2float\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.tensor2numpy": [[46, 54], ["isinstance", "isinstance", "vars.data.cpu().numpy", "NotImplementedError", "vars.data.cpu"], "function", ["None"], ["", "", "@", "make_iterative_func", "\n", "def", "tensor2numpy", "(", "vars", ")", ":", "\n", "    ", "if", "isinstance", "(", "vars", ",", "np", ".", "ndarray", ")", ":", "\n", "        ", "return", "vars", "\n", "", "elif", "isinstance", "(", "vars", ",", "torch", ".", "Tensor", ")", ":", "\n", "        ", "return", "vars", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "(", "\"invalid input type for tensor2numpy\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.check_allfloat": [[56, 59], ["isinstance"], "function", ["None"], ["", "", "@", "make_iterative_func", "\n", "def", "check_allfloat", "(", "vars", ")", ":", "\n", "    ", "assert", "isinstance", "(", "vars", ",", "float", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.save_scalars": [[61, 71], ["experiment.tensor2float", "tensor2float.items", "enumerate", "logger.add_scalar", "isinstance", "isinstance", "str"], "function", ["home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.tensor2float"], ["", "def", "save_scalars", "(", "logger", ",", "mode_tag", ",", "scalar_dict", ",", "global_step", ")", ":", "\n", "    ", "scalar_dict", "=", "tensor2float", "(", "scalar_dict", ")", "\n", "for", "tag", ",", "values", "in", "scalar_dict", ".", "items", "(", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "values", ",", "list", ")", "and", "not", "isinstance", "(", "values", ",", "tuple", ")", ":", "\n", "            ", "values", "=", "[", "values", "]", "\n", "", "for", "idx", ",", "value", "in", "enumerate", "(", "values", ")", ":", "\n", "            ", "scalar_name", "=", "'{}/{}'", ".", "format", "(", "mode_tag", ",", "tag", ")", "\n", "# if len(values) > 1:", "\n", "scalar_name", "=", "scalar_name", "+", "\"_\"", "+", "str", "(", "idx", ")", "\n", "logger", ".", "add_scalar", "(", "scalar_name", ",", "value", ",", "global_step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.save_images": [[73, 89], ["experiment.tensor2numpy", "tensor2numpy.items", "enumerate", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "logger.add_image", "isinstance", "isinstance", "len", "len", "torchvision.make_grid", "str"], "function", ["home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.tensor2numpy"], ["", "", "", "def", "save_images", "(", "logger", ",", "mode_tag", ",", "images_dict", ",", "global_step", ")", ":", "\n", "    ", "images_dict", "=", "tensor2numpy", "(", "images_dict", ")", "\n", "for", "tag", ",", "values", "in", "images_dict", ".", "items", "(", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "values", ",", "list", ")", "and", "not", "isinstance", "(", "values", ",", "tuple", ")", ":", "\n", "            ", "values", "=", "[", "values", "]", "\n", "", "for", "idx", ",", "value", "in", "enumerate", "(", "values", ")", ":", "\n", "            ", "if", "len", "(", "value", ".", "shape", ")", "==", "3", ":", "\n", "                ", "value", "=", "value", "[", ":", ",", "np", ".", "newaxis", ",", ":", ",", ":", "]", "\n", "", "value", "=", "value", "[", ":", "1", "]", "\n", "value", "=", "torch", ".", "from_numpy", "(", "value", ")", "\n", "\n", "image_name", "=", "'{}/{}'", ".", "format", "(", "mode_tag", ",", "tag", ")", "\n", "if", "len", "(", "values", ")", ">", "1", ":", "\n", "                ", "image_name", "=", "image_name", "+", "\"_\"", "+", "str", "(", "idx", ")", "\n", "", "logger", ".", "add_image", "(", "image_name", ",", "vutils", ".", "make_grid", "(", "value", ",", "padding", "=", "0", ",", "nrow", "=", "1", ",", "normalize", "=", "True", ",", "scale_each", "=", "True", ")", ",", "\n", "global_step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.utils.experiment.adjust_learning_rate": [[91, 110], ["lrepochs.split", "float", "print", "print", "len", "int", "splits[].split"], "function", ["None"], ["", "", "", "def", "adjust_learning_rate", "(", "optimizer", ",", "epoch", ",", "base_lr", ",", "lrepochs", ")", ":", "\n", "    ", "splits", "=", "lrepochs", ".", "split", "(", "':'", ")", "\n", "assert", "len", "(", "splits", ")", "==", "2", "\n", "\n", "# parse the epochs to downscale the learning rate (before :)", "\n", "downscale_epochs", "=", "[", "int", "(", "eid_str", ")", "for", "eid_str", "in", "splits", "[", "0", "]", ".", "split", "(", "','", ")", "]", "\n", "# parse downscale rate (after :)", "\n", "downscale_rate", "=", "float", "(", "splits", "[", "1", "]", ")", "\n", "print", "(", "\"downscale epochs: {}, downscale rate: {}\"", ".", "format", "(", "downscale_epochs", ",", "downscale_rate", ")", ")", "\n", "\n", "lr", "=", "base_lr", "\n", "for", "eid", "in", "downscale_epochs", ":", "\n", "        ", "if", "epoch", ">=", "eid", ":", "\n", "            ", "lr", "/=", "downscale_rate", "\n", "", "else", ":", "\n", "            ", "break", "\n", "", "", "print", "(", "\"setting learning rate to {}\"", ".", "format", "(", "lr", ")", ")", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.datasets.sceneflow_dataset.SceneFlowDatset.__init__": [[10, 14], ["sceneflow_dataset.SceneFlowDatset.load_path"], "methods", ["home.repos.pwc.inspect_result.xy-guo_GwcNet.datasets.kitti_dataset.KITTIDataset.load_path"], ["    ", "def", "__init__", "(", "self", ",", "datapath", ",", "list_filename", ",", "training", ")", ":", "\n", "        ", "self", ".", "datapath", "=", "datapath", "\n", "self", ".", "left_filenames", ",", "self", ".", "right_filenames", ",", "self", ".", "disp_filenames", "=", "self", ".", "load_path", "(", "list_filename", ")", "\n", "self", ".", "training", "=", "training", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.datasets.sceneflow_dataset.SceneFlowDatset.load_path": [[15, 22], ["datasets.data_io.read_all_lines", "line.split"], "methods", ["home.repos.pwc.inspect_result.xy-guo_GwcNet.datasets.data_io.read_all_lines"], ["", "def", "load_path", "(", "self", ",", "list_filename", ")", ":", "\n", "        ", "lines", "=", "read_all_lines", "(", "list_filename", ")", "\n", "splits", "=", "[", "line", ".", "split", "(", ")", "for", "line", "in", "lines", "]", "\n", "left_images", "=", "[", "x", "[", "0", "]", "for", "x", "in", "splits", "]", "\n", "right_images", "=", "[", "x", "[", "1", "]", "for", "x", "in", "splits", "]", "\n", "disp_images", "=", "[", "x", "[", "2", "]", "for", "x", "in", "splits", "]", "\n", "return", "left_images", ",", "right_images", ",", "disp_images", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.datasets.sceneflow_dataset.SceneFlowDatset.load_image": [[23, 25], ["PIL.Image.open().convert", "PIL.Image.open"], "methods", ["None"], ["", "def", "load_image", "(", "self", ",", "filename", ")", ":", "\n", "        ", "return", "Image", ".", "open", "(", "filename", ")", ".", "convert", "(", "'RGB'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.datasets.sceneflow_dataset.SceneFlowDatset.load_disp": [[26, 30], ["datasets.data_io.pfm_imread", "numpy.ascontiguousarray"], "methods", ["home.repos.pwc.inspect_result.xy-guo_GwcNet.datasets.data_io.pfm_imread"], ["", "def", "load_disp", "(", "self", ",", "filename", ")", ":", "\n", "        ", "data", ",", "scale", "=", "pfm_imread", "(", "filename", ")", "\n", "data", "=", "np", ".", "ascontiguousarray", "(", "data", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.datasets.sceneflow_dataset.SceneFlowDatset.__len__": [[31, 33], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "left_filenames", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.datasets.sceneflow_dataset.SceneFlowDatset.__getitem__": [[34, 76], ["sceneflow_dataset.SceneFlowDatset.load_image", "sceneflow_dataset.SceneFlowDatset.load_image", "sceneflow_dataset.SceneFlowDatset.load_disp", "os.path.join", "os.path.join", "os.path.join", "random.randint", "random.randint", "datasets.data_io.get_transform.crop", "datasets.data_io.get_transform.crop", "datasets.data_io.get_transform", "datasets.data_io.get_transform.", "datasets.data_io.get_transform.", "datasets.data_io.get_transform.crop", "datasets.data_io.get_transform.crop", "datasets.data_io.get_transform", "datasets.data_io.get_transform.", "datasets.data_io.get_transform."], "methods", ["home.repos.pwc.inspect_result.xy-guo_GwcNet.datasets.kitti_dataset.KITTIDataset.load_image", "home.repos.pwc.inspect_result.xy-guo_GwcNet.datasets.kitti_dataset.KITTIDataset.load_image", "home.repos.pwc.inspect_result.xy-guo_GwcNet.datasets.kitti_dataset.KITTIDataset.load_disp", "home.repos.pwc.inspect_result.xy-guo_GwcNet.datasets.data_io.get_transform", "home.repos.pwc.inspect_result.xy-guo_GwcNet.datasets.data_io.get_transform"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "left_img", "=", "self", ".", "load_image", "(", "os", ".", "path", ".", "join", "(", "self", ".", "datapath", ",", "self", ".", "left_filenames", "[", "index", "]", ")", ")", "\n", "right_img", "=", "self", ".", "load_image", "(", "os", ".", "path", ".", "join", "(", "self", ".", "datapath", ",", "self", ".", "right_filenames", "[", "index", "]", ")", ")", "\n", "disparity", "=", "self", ".", "load_disp", "(", "os", ".", "path", ".", "join", "(", "self", ".", "datapath", ",", "self", ".", "disp_filenames", "[", "index", "]", ")", ")", "\n", "\n", "if", "self", ".", "training", ":", "\n", "            ", "w", ",", "h", "=", "left_img", ".", "size", "\n", "crop_w", ",", "crop_h", "=", "512", ",", "256", "\n", "\n", "x1", "=", "random", ".", "randint", "(", "0", ",", "w", "-", "crop_w", ")", "\n", "y1", "=", "random", ".", "randint", "(", "0", ",", "h", "-", "crop_h", ")", "\n", "\n", "# random crop", "\n", "left_img", "=", "left_img", ".", "crop", "(", "(", "x1", ",", "y1", ",", "x1", "+", "crop_w", ",", "y1", "+", "crop_h", ")", ")", "\n", "right_img", "=", "right_img", ".", "crop", "(", "(", "x1", ",", "y1", ",", "x1", "+", "crop_w", ",", "y1", "+", "crop_h", ")", ")", "\n", "disparity", "=", "disparity", "[", "y1", ":", "y1", "+", "crop_h", ",", "x1", ":", "x1", "+", "crop_w", "]", "\n", "\n", "# to tensor, normalize", "\n", "processed", "=", "get_transform", "(", ")", "\n", "left_img", "=", "processed", "(", "left_img", ")", "\n", "right_img", "=", "processed", "(", "right_img", ")", "\n", "\n", "return", "{", "\"left\"", ":", "left_img", ",", "\n", "\"right\"", ":", "right_img", ",", "\n", "\"disparity\"", ":", "disparity", "}", "\n", "", "else", ":", "\n", "            ", "w", ",", "h", "=", "left_img", ".", "size", "\n", "crop_w", ",", "crop_h", "=", "960", ",", "512", "\n", "\n", "left_img", "=", "left_img", ".", "crop", "(", "(", "w", "-", "crop_w", ",", "h", "-", "crop_h", ",", "w", ",", "h", ")", ")", "\n", "right_img", "=", "right_img", ".", "crop", "(", "(", "w", "-", "crop_w", ",", "h", "-", "crop_h", ",", "w", ",", "h", ")", ")", "\n", "disparity", "=", "disparity", "[", "h", "-", "crop_h", ":", "h", ",", "w", "-", "crop_w", ":", "w", "]", "\n", "\n", "processed", "=", "get_transform", "(", ")", "\n", "left_img", "=", "processed", "(", "left_img", ")", "\n", "right_img", "=", "processed", "(", "right_img", ")", "\n", "\n", "return", "{", "\"left\"", ":", "left_img", ",", "\n", "\"right\"", ":", "right_img", ",", "\n", "\"disparity\"", ":", "disparity", ",", "\n", "\"top_pad\"", ":", "0", ",", "\n", "\"right_pad\"", ":", "0", "}", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.datasets.data_io.get_transform": [[6, 13], ["torchvision.Compose", "torchvision.ToTensor", "torchvision.Normalize"], "function", ["None"], ["def", "get_transform", "(", ")", ":", "\n", "    ", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", "\n", "\n", "return", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "mean", ",", "std", "=", "std", ")", ",", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.datasets.data_io.read_all_lines": [[17, 21], ["open", "line.rstrip", "f.readlines"], "function", ["None"], ["", "def", "read_all_lines", "(", "filename", ")", ":", "\n", "    ", "with", "open", "(", "filename", ")", "as", "f", ":", "\n", "        ", "lines", "=", "[", "line", ".", "rstrip", "(", ")", "for", "line", "in", "f", ".", "readlines", "(", ")", "]", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.datasets.data_io.pfm_imread": [[24, 59], ["open", "open.readline().decode().rstrip", "re.match", "float", "numpy.fromfile", "numpy.reshape", "numpy.flipud", "open.readline().decode", "map", "Exception", "open.readline().rstrip", "open.readline().decode", "Exception", "re.match.groups", "open.readline", "open.readline", "open.readline"], "function", ["None"], ["", "def", "pfm_imread", "(", "filename", ")", ":", "\n", "    ", "file", "=", "open", "(", "filename", ",", "'rb'", ")", "\n", "color", "=", "None", "\n", "width", "=", "None", "\n", "height", "=", "None", "\n", "scale", "=", "None", "\n", "endian", "=", "None", "\n", "\n", "header", "=", "file", ".", "readline", "(", ")", ".", "decode", "(", "'utf-8'", ")", ".", "rstrip", "(", ")", "\n", "if", "header", "==", "'PF'", ":", "\n", "        ", "color", "=", "True", "\n", "", "elif", "header", "==", "'Pf'", ":", "\n", "        ", "color", "=", "False", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "'Not a PFM file.'", ")", "\n", "\n", "", "dim_match", "=", "re", ".", "match", "(", "r'^(\\d+)\\s(\\d+)\\s$'", ",", "file", ".", "readline", "(", ")", ".", "decode", "(", "'utf-8'", ")", ")", "\n", "if", "dim_match", ":", "\n", "        ", "width", ",", "height", "=", "map", "(", "int", ",", "dim_match", ".", "groups", "(", ")", ")", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "'Malformed PFM header.'", ")", "\n", "\n", "", "scale", "=", "float", "(", "file", ".", "readline", "(", ")", ".", "rstrip", "(", ")", ")", "\n", "if", "scale", "<", "0", ":", "# little-endian", "\n", "        ", "endian", "=", "'<'", "\n", "scale", "=", "-", "scale", "\n", "", "else", ":", "\n", "        ", "endian", "=", "'>'", "# big-endian", "\n", "\n", "", "data", "=", "np", ".", "fromfile", "(", "file", ",", "endian", "+", "'f'", ")", "\n", "shape", "=", "(", "height", ",", "width", ",", "3", ")", "if", "color", "else", "(", "height", ",", "width", ")", "\n", "\n", "data", "=", "np", ".", "reshape", "(", "data", ",", "shape", ")", "\n", "data", "=", "np", ".", "flipud", "(", "data", ")", "\n", "return", "data", ",", "scale", "\n", "", ""]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.datasets.kitti_dataset.KITTIDataset.__init__": [[10, 16], ["kitti_dataset.KITTIDataset.load_path"], "methods", ["home.repos.pwc.inspect_result.xy-guo_GwcNet.datasets.kitti_dataset.KITTIDataset.load_path"], ["    ", "def", "__init__", "(", "self", ",", "datapath", ",", "list_filename", ",", "training", ")", ":", "\n", "        ", "self", ".", "datapath", "=", "datapath", "\n", "self", ".", "left_filenames", ",", "self", ".", "right_filenames", ",", "self", ".", "disp_filenames", "=", "self", ".", "load_path", "(", "list_filename", ")", "\n", "self", ".", "training", "=", "training", "\n", "if", "self", ".", "training", ":", "\n", "            ", "assert", "self", ".", "disp_filenames", "is", "not", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.datasets.kitti_dataset.KITTIDataset.load_path": [[17, 27], ["datasets.data_io.read_all_lines", "line.split", "len"], "methods", ["home.repos.pwc.inspect_result.xy-guo_GwcNet.datasets.data_io.read_all_lines"], ["", "", "def", "load_path", "(", "self", ",", "list_filename", ")", ":", "\n", "        ", "lines", "=", "read_all_lines", "(", "list_filename", ")", "\n", "splits", "=", "[", "line", ".", "split", "(", ")", "for", "line", "in", "lines", "]", "\n", "left_images", "=", "[", "x", "[", "0", "]", "for", "x", "in", "splits", "]", "\n", "right_images", "=", "[", "x", "[", "1", "]", "for", "x", "in", "splits", "]", "\n", "if", "len", "(", "splits", "[", "0", "]", ")", "==", "2", ":", "# ground truth not available", "\n", "            ", "return", "left_images", ",", "right_images", ",", "None", "\n", "", "else", ":", "\n", "            ", "disp_images", "=", "[", "x", "[", "2", "]", "for", "x", "in", "splits", "]", "\n", "return", "left_images", ",", "right_images", ",", "disp_images", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.datasets.kitti_dataset.KITTIDataset.load_image": [[28, 30], ["PIL.Image.open().convert", "PIL.Image.open"], "methods", ["None"], ["", "", "def", "load_image", "(", "self", ",", "filename", ")", ":", "\n", "        ", "return", "Image", ".", "open", "(", "filename", ")", ".", "convert", "(", "'RGB'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.datasets.kitti_dataset.KITTIDataset.load_disp": [[31, 35], ["PIL.Image.open", "numpy.array"], "methods", ["None"], ["", "def", "load_disp", "(", "self", ",", "filename", ")", ":", "\n", "        ", "data", "=", "Image", ".", "open", "(", "filename", ")", "\n", "data", "=", "np", ".", "array", "(", "data", ",", "dtype", "=", "np", ".", "float32", ")", "/", "256.", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.datasets.kitti_dataset.KITTIDataset.__len__": [[36, 38], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "left_filenames", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.datasets.kitti_dataset.KITTIDataset.__getitem__": [[39, 102], ["kitti_dataset.KITTIDataset.load_image", "kitti_dataset.KITTIDataset.load_image", "os.path.join", "os.path.join", "kitti_dataset.KITTIDataset.load_disp", "random.randint", "random.randint", "numpy.lib.pad.crop", "numpy.lib.pad.crop", "datasets.data_io.get_transform", "datasets.data_io.get_transform.", "datasets.data_io.get_transform.", "datasets.data_io.get_transform", "datasets.data_io.get_transform.numpy", "datasets.data_io.get_transform.numpy", "numpy.lib.pad", "numpy.lib.pad", "os.path.join", "numpy.lib.pad", "datasets.data_io.get_transform.", "datasets.data_io.get_transform.", "len"], "methods", ["home.repos.pwc.inspect_result.xy-guo_GwcNet.datasets.kitti_dataset.KITTIDataset.load_image", "home.repos.pwc.inspect_result.xy-guo_GwcNet.datasets.kitti_dataset.KITTIDataset.load_image", "home.repos.pwc.inspect_result.xy-guo_GwcNet.datasets.kitti_dataset.KITTIDataset.load_disp", "home.repos.pwc.inspect_result.xy-guo_GwcNet.datasets.data_io.get_transform", "home.repos.pwc.inspect_result.xy-guo_GwcNet.datasets.data_io.get_transform"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "left_img", "=", "self", ".", "load_image", "(", "os", ".", "path", ".", "join", "(", "self", ".", "datapath", ",", "self", ".", "left_filenames", "[", "index", "]", ")", ")", "\n", "right_img", "=", "self", ".", "load_image", "(", "os", ".", "path", ".", "join", "(", "self", ".", "datapath", ",", "self", ".", "right_filenames", "[", "index", "]", ")", ")", "\n", "\n", "if", "self", ".", "disp_filenames", ":", "# has disparity ground truth", "\n", "            ", "disparity", "=", "self", ".", "load_disp", "(", "os", ".", "path", ".", "join", "(", "self", ".", "datapath", ",", "self", ".", "disp_filenames", "[", "index", "]", ")", ")", "\n", "", "else", ":", "\n", "            ", "disparity", "=", "None", "\n", "\n", "", "if", "self", ".", "training", ":", "\n", "            ", "w", ",", "h", "=", "left_img", ".", "size", "\n", "crop_w", ",", "crop_h", "=", "512", ",", "256", "\n", "\n", "x1", "=", "random", ".", "randint", "(", "0", ",", "w", "-", "crop_w", ")", "\n", "y1", "=", "random", ".", "randint", "(", "0", ",", "h", "-", "crop_h", ")", "\n", "\n", "# random crop", "\n", "left_img", "=", "left_img", ".", "crop", "(", "(", "x1", ",", "y1", ",", "x1", "+", "crop_w", ",", "y1", "+", "crop_h", ")", ")", "\n", "right_img", "=", "right_img", ".", "crop", "(", "(", "x1", ",", "y1", ",", "x1", "+", "crop_w", ",", "y1", "+", "crop_h", ")", ")", "\n", "disparity", "=", "disparity", "[", "y1", ":", "y1", "+", "crop_h", ",", "x1", ":", "x1", "+", "crop_w", "]", "\n", "\n", "# to tensor, normalize", "\n", "processed", "=", "get_transform", "(", ")", "\n", "left_img", "=", "processed", "(", "left_img", ")", "\n", "right_img", "=", "processed", "(", "right_img", ")", "\n", "\n", "return", "{", "\"left\"", ":", "left_img", ",", "\n", "\"right\"", ":", "right_img", ",", "\n", "\"disparity\"", ":", "disparity", "}", "\n", "", "else", ":", "\n", "            ", "w", ",", "h", "=", "left_img", ".", "size", "\n", "\n", "# normalize", "\n", "processed", "=", "get_transform", "(", ")", "\n", "left_img", "=", "processed", "(", "left_img", ")", ".", "numpy", "(", ")", "\n", "right_img", "=", "processed", "(", "right_img", ")", ".", "numpy", "(", ")", "\n", "\n", "# pad to size 1248x384", "\n", "top_pad", "=", "384", "-", "h", "\n", "right_pad", "=", "1248", "-", "w", "\n", "assert", "top_pad", ">", "0", "and", "right_pad", ">", "0", "\n", "# pad images", "\n", "left_img", "=", "np", ".", "lib", ".", "pad", "(", "left_img", ",", "(", "(", "0", ",", "0", ")", ",", "(", "top_pad", ",", "0", ")", ",", "(", "0", ",", "right_pad", ")", ")", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "0", ")", "\n", "right_img", "=", "np", ".", "lib", ".", "pad", "(", "right_img", ",", "(", "(", "0", ",", "0", ")", ",", "(", "top_pad", ",", "0", ")", ",", "(", "0", ",", "right_pad", ")", ")", ",", "mode", "=", "'constant'", ",", "\n", "constant_values", "=", "0", ")", "\n", "# pad disparity gt", "\n", "if", "disparity", "is", "not", "None", ":", "\n", "                ", "assert", "len", "(", "disparity", ".", "shape", ")", "==", "2", "\n", "disparity", "=", "np", ".", "lib", ".", "pad", "(", "disparity", ",", "(", "(", "top_pad", ",", "0", ")", ",", "(", "0", ",", "right_pad", ")", ")", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "0", ")", "\n", "\n", "", "if", "disparity", "is", "not", "None", ":", "\n", "                ", "return", "{", "\"left\"", ":", "left_img", ",", "\n", "\"right\"", ":", "right_img", ",", "\n", "\"disparity\"", ":", "disparity", ",", "\n", "\"top_pad\"", ":", "top_pad", ",", "\n", "\"right_pad\"", ":", "right_pad", "}", "\n", "", "else", ":", "\n", "                ", "return", "{", "\"left\"", ":", "left_img", ",", "\n", "\"right\"", ":", "right_img", ",", "\n", "\"top_pad\"", ":", "top_pad", ",", "\n", "\"right_pad\"", ":", "right_pad", ",", "\n", "\"left_filename\"", ":", "self", ".", "left_filenames", "[", "index", "]", ",", "\n", "\"right_filename\"", ":", "self", ".", "right_filenames", "[", "index", "]", "}", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.submodule.BasicBlock.__init__": [[69, 79], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "submodule.convbn", "submodule.convbn", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.xy-guo_GwcNet.models.gwcnet.GwcNet.__init__", "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.submodule.convbn", "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.submodule.convbn"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ",", "pad", ",", "dilation", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "convbn", "(", "inplanes", ",", "planes", ",", "3", ",", "stride", ",", "pad", ",", "dilation", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv2", "=", "convbn", "(", "planes", ",", "planes", ",", "3", ",", "1", ",", "pad", ",", "dilation", ")", "\n", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.submodule.BasicBlock.forward": [[80, 90], ["submodule.BasicBlock.conv1", "submodule.BasicBlock.conv2", "submodule.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "x", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "x", "\n", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.submodule.convbn": [[11, 15], ["torch.Sequential", "torch.Conv2d", "torch.BatchNorm2d"], "function", ["None"], ["def", "convbn", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "pad", ",", "dilation", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "dilation", "if", "dilation", ">", "1", "else", "pad", ",", "dilation", "=", "dilation", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.submodule.convbn_3d": [[17, 21], ["torch.Sequential", "torch.Conv3d", "torch.BatchNorm3d"], "function", ["None"], ["", "def", "convbn_3d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "pad", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "nn", ".", "Conv3d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "pad", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "out_channels", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.submodule.disparity_regression": [[23, 28], ["torch.arange", "torch.arange", "torch.arange", "torch.arange", "disp_values.view.view", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "len"], "function", ["None"], ["", "def", "disparity_regression", "(", "x", ",", "maxdisp", ")", ":", "\n", "    ", "assert", "len", "(", "x", ".", "shape", ")", "==", "4", "\n", "disp_values", "=", "torch", ".", "arange", "(", "0", ",", "maxdisp", ",", "dtype", "=", "x", ".", "dtype", ",", "device", "=", "x", ".", "device", ")", "\n", "disp_values", "=", "disp_values", ".", "view", "(", "1", ",", "maxdisp", ",", "1", ",", "1", ")", "\n", "return", "torch", ".", "sum", "(", "x", "*", "disp_values", ",", "1", ",", "keepdim", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.submodule.build_concat_volume": [[30, 42], ["refimg_fea.new_zeros", "range", "volume.contiguous.contiguous"], "function", ["None"], ["", "def", "build_concat_volume", "(", "refimg_fea", ",", "targetimg_fea", ",", "maxdisp", ")", ":", "\n", "    ", "B", ",", "C", ",", "H", ",", "W", "=", "refimg_fea", ".", "shape", "\n", "volume", "=", "refimg_fea", ".", "new_zeros", "(", "[", "B", ",", "2", "*", "C", ",", "maxdisp", ",", "H", ",", "W", "]", ")", "\n", "for", "i", "in", "range", "(", "maxdisp", ")", ":", "\n", "        ", "if", "i", ">", "0", ":", "\n", "            ", "volume", "[", ":", ",", ":", "C", ",", "i", ",", ":", ",", "i", ":", "]", "=", "refimg_fea", "[", ":", ",", ":", ",", ":", ",", "i", ":", "]", "\n", "volume", "[", ":", ",", "C", ":", ",", "i", ",", ":", ",", "i", ":", "]", "=", "targetimg_fea", "[", ":", ",", ":", ",", ":", ",", ":", "-", "i", "]", "\n", "", "else", ":", "\n", "            ", "volume", "[", ":", ",", ":", "C", ",", "i", ",", ":", ",", ":", "]", "=", "refimg_fea", "\n", "volume", "[", ":", ",", "C", ":", ",", "i", ",", ":", ",", ":", "]", "=", "targetimg_fea", "\n", "", "", "volume", "=", "volume", ".", "contiguous", "(", ")", "\n", "return", "volume", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.submodule.groupwise_correlation": [[44, 51], ["None"], "function", ["None"], ["", "def", "groupwise_correlation", "(", "fea1", ",", "fea2", ",", "num_groups", ")", ":", "\n", "    ", "B", ",", "C", ",", "H", ",", "W", "=", "fea1", ".", "shape", "\n", "assert", "C", "%", "num_groups", "==", "0", "\n", "channels_per_group", "=", "C", "//", "num_groups", "\n", "cost", "=", "(", "fea1", "*", "fea2", ")", ".", "view", "(", "[", "B", ",", "num_groups", ",", "channels_per_group", ",", "H", ",", "W", "]", ")", ".", "mean", "(", "dim", "=", "2", ")", "\n", "assert", "cost", ".", "shape", "==", "(", "B", ",", "num_groups", ",", "H", ",", "W", ")", "\n", "return", "cost", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.submodule.build_gwc_volume": [[53, 64], ["refimg_fea.new_zeros", "range", "volume.contiguous.contiguous", "submodule.groupwise_correlation", "submodule.groupwise_correlation"], "function", ["home.repos.pwc.inspect_result.xy-guo_GwcNet.models.submodule.groupwise_correlation", "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.submodule.groupwise_correlation"], ["", "def", "build_gwc_volume", "(", "refimg_fea", ",", "targetimg_fea", ",", "maxdisp", ",", "num_groups", ")", ":", "\n", "    ", "B", ",", "C", ",", "H", ",", "W", "=", "refimg_fea", ".", "shape", "\n", "volume", "=", "refimg_fea", ".", "new_zeros", "(", "[", "B", ",", "num_groups", ",", "maxdisp", ",", "H", ",", "W", "]", ")", "\n", "for", "i", "in", "range", "(", "maxdisp", ")", ":", "\n", "        ", "if", "i", ">", "0", ":", "\n", "            ", "volume", "[", ":", ",", ":", ",", "i", ",", ":", ",", "i", ":", "]", "=", "groupwise_correlation", "(", "refimg_fea", "[", ":", ",", ":", ",", ":", ",", "i", ":", "]", ",", "targetimg_fea", "[", ":", ",", ":", ",", ":", ",", ":", "-", "i", "]", ",", "\n", "num_groups", ")", "\n", "", "else", ":", "\n", "            ", "volume", "[", ":", ",", ":", ",", "i", ",", ":", ",", ":", "]", "=", "groupwise_correlation", "(", "refimg_fea", ",", "targetimg_fea", ",", "num_groups", ")", "\n", "", "", "volume", "=", "volume", ".", "contiguous", "(", ")", "\n", "return", "volume", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.gwcnet.feature_extraction.__init__": [[12, 34], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "gwcnet.feature_extraction._make_layer", "gwcnet.feature_extraction._make_layer", "gwcnet.feature_extraction._make_layer", "gwcnet.feature_extraction._make_layer", "convbn", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "convbn", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "convbn", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "convbn", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.xy-guo_GwcNet.models.gwcnet.GwcNet.__init__", "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.gwcnet.feature_extraction._make_layer", "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.gwcnet.feature_extraction._make_layer", "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.gwcnet.feature_extraction._make_layer", "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.gwcnet.feature_extraction._make_layer", "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.submodule.convbn", "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.submodule.convbn", "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.submodule.convbn", "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.submodule.convbn"], ["    ", "def", "__init__", "(", "self", ",", "concat_feature", "=", "False", ",", "concat_feature_channel", "=", "12", ")", ":", "\n", "        ", "super", "(", "feature_extraction", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "concat_feature", "=", "concat_feature", "\n", "\n", "self", ".", "inplanes", "=", "32", "\n", "self", ".", "firstconv", "=", "nn", ".", "Sequential", "(", "convbn", "(", "3", ",", "32", ",", "3", ",", "2", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "convbn", "(", "32", ",", "32", ",", "3", ",", "1", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "convbn", "(", "32", ",", "32", ",", "3", ",", "1", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "BasicBlock", ",", "32", ",", "3", ",", "1", ",", "1", ",", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "BasicBlock", ",", "64", ",", "16", ",", "2", ",", "1", ",", "1", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "BasicBlock", ",", "128", ",", "3", ",", "1", ",", "1", ",", "1", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "BasicBlock", ",", "128", ",", "3", ",", "1", ",", "1", ",", "2", ")", "\n", "\n", "if", "self", ".", "concat_feature", ":", "\n", "            ", "self", ".", "lastconv", "=", "nn", ".", "Sequential", "(", "convbn", "(", "320", ",", "128", ",", "3", ",", "1", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "128", ",", "concat_feature_channel", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ",", "\n", "bias", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.gwcnet.feature_extraction._make_layer": [[35, 50], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "block"], "methods", ["None"], ["", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", ",", "pad", ",", "dilation", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ",", "pad", ",", "dilation", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "1", ",", "None", ",", "pad", ",", "dilation", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.gwcnet.feature_extraction.forward": [[51, 65], ["gwcnet.feature_extraction.firstconv", "gwcnet.feature_extraction.layer1", "gwcnet.feature_extraction.layer2", "gwcnet.feature_extraction.layer3", "gwcnet.feature_extraction.layer4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "gwcnet.feature_extraction.lastconv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "firstconv", "(", "x", ")", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "l2", "=", "self", ".", "layer2", "(", "x", ")", "\n", "l3", "=", "self", ".", "layer3", "(", "l2", ")", "\n", "l4", "=", "self", ".", "layer4", "(", "l3", ")", "\n", "\n", "gwc_feature", "=", "torch", ".", "cat", "(", "(", "l2", ",", "l3", ",", "l4", ")", ",", "dim", "=", "1", ")", "\n", "\n", "if", "not", "self", ".", "concat_feature", ":", "\n", "            ", "return", "{", "\"gwc_feature\"", ":", "gwc_feature", "}", "\n", "", "else", ":", "\n", "            ", "concat_feature", "=", "self", ".", "lastconv", "(", "gwc_feature", ")", "\n", "return", "{", "\"gwc_feature\"", ":", "gwc_feature", ",", "\"concat_feature\"", ":", "concat_feature", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.gwcnet.hourglass.__init__": [[68, 93], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "convbn_3d", "convbn_3d", "convbn_3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "convbn_3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "convbn_3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "convbn_3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["home.repos.pwc.inspect_result.xy-guo_GwcNet.models.gwcnet.GwcNet.__init__", "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.submodule.convbn_3d", "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.submodule.convbn_3d", "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.submodule.convbn_3d", "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.submodule.convbn_3d", "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.submodule.convbn_3d", "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.submodule.convbn_3d"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ")", ":", "\n", "        ", "super", "(", "hourglass", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "convbn_3d", "(", "in_channels", ",", "in_channels", "*", "2", ",", "3", ",", "2", ",", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv2", "=", "nn", ".", "Sequential", "(", "convbn_3d", "(", "in_channels", "*", "2", ",", "in_channels", "*", "2", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv3", "=", "nn", ".", "Sequential", "(", "convbn_3d", "(", "in_channels", "*", "2", ",", "in_channels", "*", "4", ",", "3", ",", "2", ",", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv4", "=", "nn", ".", "Sequential", "(", "convbn_3d", "(", "in_channels", "*", "4", ",", "in_channels", "*", "4", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv5", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ConvTranspose3d", "(", "in_channels", "*", "4", ",", "in_channels", "*", "2", ",", "3", ",", "padding", "=", "1", ",", "output_padding", "=", "1", ",", "stride", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "in_channels", "*", "2", ")", ")", "\n", "\n", "self", ".", "conv6", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ConvTranspose3d", "(", "in_channels", "*", "2", ",", "in_channels", ",", "3", ",", "padding", "=", "1", ",", "output_padding", "=", "1", ",", "stride", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "in_channels", ")", ")", "\n", "\n", "self", ".", "redir1", "=", "convbn_3d", "(", "in_channels", ",", "in_channels", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "pad", "=", "0", ")", "\n", "self", ".", "redir2", "=", "convbn_3d", "(", "in_channels", "*", "2", ",", "in_channels", "*", "2", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "pad", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.gwcnet.hourglass.forward": [[94, 105], ["gwcnet.hourglass.conv1", "gwcnet.hourglass.conv2", "gwcnet.hourglass.conv3", "gwcnet.hourglass.conv4", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "gwcnet.hourglass.conv5", "gwcnet.hourglass.redir2", "gwcnet.hourglass.conv6", "gwcnet.hourglass.redir1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "conv1", "=", "self", ".", "conv1", "(", "x", ")", "\n", "conv2", "=", "self", ".", "conv2", "(", "conv1", ")", "\n", "\n", "conv3", "=", "self", ".", "conv3", "(", "conv2", ")", "\n", "conv4", "=", "self", ".", "conv4", "(", "conv3", ")", "\n", "\n", "conv5", "=", "F", ".", "relu", "(", "self", ".", "conv5", "(", "conv4", ")", "+", "self", ".", "redir2", "(", "conv2", ")", ",", "inplace", "=", "True", ")", "\n", "conv6", "=", "F", ".", "relu", "(", "self", ".", "conv6", "(", "conv5", ")", "+", "self", ".", "redir1", "(", "x", ")", ",", "inplace", "=", "True", ")", "\n", "\n", "return", "conv6", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.gwcnet.GwcNet.__init__": [[108, 169], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "gwcnet.hourglass", "gwcnet.hourglass", "gwcnet.hourglass", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "gwcnet.GwcNet.modules", "gwcnet.feature_extraction", "gwcnet.feature_extraction", "convbn_3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "convbn_3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "convbn_3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "convbn_3d", "convbn_3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "convbn_3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "convbn_3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "convbn_3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.xy-guo_GwcNet.models.gwcnet.GwcNet.__init__", "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.submodule.convbn_3d", "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.submodule.convbn_3d", "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.submodule.convbn_3d", "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.submodule.convbn_3d", "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.submodule.convbn_3d", "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.submodule.convbn_3d", "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.submodule.convbn_3d", "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.submodule.convbn_3d"], ["    ", "def", "__init__", "(", "self", ",", "maxdisp", ",", "use_concat_volume", "=", "False", ")", ":", "\n", "        ", "super", "(", "GwcNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "maxdisp", "=", "maxdisp", "\n", "self", ".", "use_concat_volume", "=", "use_concat_volume", "\n", "\n", "self", ".", "num_groups", "=", "40", "\n", "\n", "if", "self", ".", "use_concat_volume", ":", "\n", "            ", "self", ".", "concat_channels", "=", "12", "\n", "self", ".", "feature_extraction", "=", "feature_extraction", "(", "concat_feature", "=", "True", ",", "\n", "concat_feature_channel", "=", "self", ".", "concat_channels", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "concat_channels", "=", "0", "\n", "self", ".", "feature_extraction", "=", "feature_extraction", "(", "concat_feature", "=", "False", ")", "\n", "\n", "", "self", ".", "dres0", "=", "nn", ".", "Sequential", "(", "convbn_3d", "(", "self", ".", "num_groups", "+", "self", ".", "concat_channels", "*", "2", ",", "32", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "convbn_3d", "(", "32", ",", "32", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "dres1", "=", "nn", ".", "Sequential", "(", "convbn_3d", "(", "32", ",", "32", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "convbn_3d", "(", "32", ",", "32", ",", "3", ",", "1", ",", "1", ")", ")", "\n", "\n", "self", ".", "dres2", "=", "hourglass", "(", "32", ")", "\n", "\n", "self", ".", "dres3", "=", "hourglass", "(", "32", ")", "\n", "\n", "self", ".", "dres4", "=", "hourglass", "(", "32", ")", "\n", "\n", "self", ".", "classif0", "=", "nn", ".", "Sequential", "(", "convbn_3d", "(", "32", ",", "32", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv3d", "(", "32", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", ")", "\n", "\n", "self", ".", "classif1", "=", "nn", ".", "Sequential", "(", "convbn_3d", "(", "32", ",", "32", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv3d", "(", "32", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", ")", "\n", "\n", "self", ".", "classif2", "=", "nn", ".", "Sequential", "(", "convbn_3d", "(", "32", ",", "32", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv3d", "(", "32", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", ")", "\n", "\n", "self", ".", "classif3", "=", "nn", ".", "Sequential", "(", "convbn_3d", "(", "32", ",", "32", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv3d", "(", "32", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Conv3d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "kernel_size", "[", "2", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm3d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.gwcnet.GwcNet.forward": [[170, 224], ["gwcnet.GwcNet.feature_extraction", "gwcnet.GwcNet.feature_extraction", "build_gwc_volume", "gwcnet.GwcNet.dres0", "gwcnet.GwcNet.dres2", "gwcnet.GwcNet.dres3", "gwcnet.GwcNet.dres4", "build_concat_volume", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "gwcnet.GwcNet.dres1", "gwcnet.GwcNet.classif0", "gwcnet.GwcNet.classif1", "gwcnet.GwcNet.classif2", "gwcnet.GwcNet.classif3", "torch.upsample", "torch.upsample", "torch.upsample", "torch.upsample", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "disparity_regression", "torch.upsample", "torch.upsample", "torch.upsample", "torch.upsample", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "disparity_regression", "torch.upsample", "torch.upsample", "torch.upsample", "torch.upsample", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "disparity_regression", "torch.upsample", "torch.upsample", "torch.upsample", "torch.upsample", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "disparity_regression", "gwcnet.GwcNet.classif3", "torch.upsample", "torch.upsample", "torch.upsample", "torch.upsample", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "disparity_regression", "left.size", "left.size", "left.size", "left.size", "left.size", "left.size", "left.size", "left.size", "left.size", "left.size"], "methods", ["home.repos.pwc.inspect_result.xy-guo_GwcNet.models.submodule.build_gwc_volume", "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.submodule.build_concat_volume", "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.submodule.disparity_regression", "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.submodule.disparity_regression", "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.submodule.disparity_regression", "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.submodule.disparity_regression", "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.submodule.disparity_regression"], ["", "", "", "def", "forward", "(", "self", ",", "left", ",", "right", ")", ":", "\n", "        ", "features_left", "=", "self", ".", "feature_extraction", "(", "left", ")", "\n", "features_right", "=", "self", ".", "feature_extraction", "(", "right", ")", "\n", "\n", "gwc_volume", "=", "build_gwc_volume", "(", "features_left", "[", "\"gwc_feature\"", "]", ",", "features_right", "[", "\"gwc_feature\"", "]", ",", "self", ".", "maxdisp", "//", "4", ",", "\n", "self", ".", "num_groups", ")", "\n", "if", "self", ".", "use_concat_volume", ":", "\n", "            ", "concat_volume", "=", "build_concat_volume", "(", "features_left", "[", "\"concat_feature\"", "]", ",", "features_right", "[", "\"concat_feature\"", "]", ",", "\n", "self", ".", "maxdisp", "//", "4", ")", "\n", "volume", "=", "torch", ".", "cat", "(", "(", "gwc_volume", ",", "concat_volume", ")", ",", "1", ")", "\n", "", "else", ":", "\n", "            ", "volume", "=", "gwc_volume", "\n", "\n", "", "cost0", "=", "self", ".", "dres0", "(", "volume", ")", "\n", "cost0", "=", "self", ".", "dres1", "(", "cost0", ")", "+", "cost0", "\n", "\n", "out1", "=", "self", ".", "dres2", "(", "cost0", ")", "\n", "out2", "=", "self", ".", "dres3", "(", "out1", ")", "\n", "out3", "=", "self", ".", "dres4", "(", "out2", ")", "\n", "\n", "if", "self", ".", "training", ":", "\n", "            ", "cost0", "=", "self", ".", "classif0", "(", "cost0", ")", "\n", "cost1", "=", "self", ".", "classif1", "(", "out1", ")", "\n", "cost2", "=", "self", ".", "classif2", "(", "out2", ")", "\n", "cost3", "=", "self", ".", "classif3", "(", "out3", ")", "\n", "\n", "cost0", "=", "F", ".", "upsample", "(", "cost0", ",", "[", "self", ".", "maxdisp", ",", "left", ".", "size", "(", ")", "[", "2", "]", ",", "left", ".", "size", "(", ")", "[", "3", "]", "]", ",", "mode", "=", "'trilinear'", ")", "\n", "cost0", "=", "torch", ".", "squeeze", "(", "cost0", ",", "1", ")", "\n", "pred0", "=", "F", ".", "softmax", "(", "cost0", ",", "dim", "=", "1", ")", "\n", "pred0", "=", "disparity_regression", "(", "pred0", ",", "self", ".", "maxdisp", ")", "\n", "\n", "cost1", "=", "F", ".", "upsample", "(", "cost1", ",", "[", "self", ".", "maxdisp", ",", "left", ".", "size", "(", ")", "[", "2", "]", ",", "left", ".", "size", "(", ")", "[", "3", "]", "]", ",", "mode", "=", "'trilinear'", ")", "\n", "cost1", "=", "torch", ".", "squeeze", "(", "cost1", ",", "1", ")", "\n", "pred1", "=", "F", ".", "softmax", "(", "cost1", ",", "dim", "=", "1", ")", "\n", "pred1", "=", "disparity_regression", "(", "pred1", ",", "self", ".", "maxdisp", ")", "\n", "\n", "cost2", "=", "F", ".", "upsample", "(", "cost2", ",", "[", "self", ".", "maxdisp", ",", "left", ".", "size", "(", ")", "[", "2", "]", ",", "left", ".", "size", "(", ")", "[", "3", "]", "]", ",", "mode", "=", "'trilinear'", ")", "\n", "cost2", "=", "torch", ".", "squeeze", "(", "cost2", ",", "1", ")", "\n", "pred2", "=", "F", ".", "softmax", "(", "cost2", ",", "dim", "=", "1", ")", "\n", "pred2", "=", "disparity_regression", "(", "pred2", ",", "self", ".", "maxdisp", ")", "\n", "\n", "cost3", "=", "F", ".", "upsample", "(", "cost3", ",", "[", "self", ".", "maxdisp", ",", "left", ".", "size", "(", ")", "[", "2", "]", ",", "left", ".", "size", "(", ")", "[", "3", "]", "]", ",", "mode", "=", "'trilinear'", ")", "\n", "cost3", "=", "torch", ".", "squeeze", "(", "cost3", ",", "1", ")", "\n", "pred3", "=", "F", ".", "softmax", "(", "cost3", ",", "dim", "=", "1", ")", "\n", "pred3", "=", "disparity_regression", "(", "pred3", ",", "self", ".", "maxdisp", ")", "\n", "return", "[", "pred0", ",", "pred1", ",", "pred2", ",", "pred3", "]", "\n", "\n", "", "else", ":", "\n", "            ", "cost3", "=", "self", ".", "classif3", "(", "out3", ")", "\n", "cost3", "=", "F", ".", "upsample", "(", "cost3", ",", "[", "self", ".", "maxdisp", ",", "left", ".", "size", "(", ")", "[", "2", "]", ",", "left", ".", "size", "(", ")", "[", "3", "]", "]", ",", "mode", "=", "'trilinear'", ")", "\n", "cost3", "=", "torch", ".", "squeeze", "(", "cost3", ",", "1", ")", "\n", "pred3", "=", "F", ".", "softmax", "(", "cost3", ",", "dim", "=", "1", ")", "\n", "pred3", "=", "disparity_regression", "(", "pred3", ",", "self", ".", "maxdisp", ")", "\n", "return", "[", "pred3", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.gwcnet.GwcNet_G": [[226, 228], ["gwcnet.GwcNet"], "function", ["None"], ["", "", "", "def", "GwcNet_G", "(", "d", ")", ":", "\n", "    ", "return", "GwcNet", "(", "d", ",", "use_concat_volume", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.gwcnet.GwcNet_GC": [[230, 232], ["gwcnet.GwcNet"], "function", ["None"], ["", "def", "GwcNet_GC", "(", "d", ")", ":", "\n", "    ", "return", "GwcNet", "(", "d", ",", "use_concat_volume", "=", "True", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.xy-guo_GwcNet.models.loss.model_loss": [[4, 10], ["zip", "sum", "all_losses.append", "torch.smooth_l1_loss"], "function", ["None"], ["def", "model_loss", "(", "disp_ests", ",", "disp_gt", ",", "mask", ")", ":", "\n", "    ", "weights", "=", "[", "0.5", ",", "0.5", ",", "0.7", ",", "1.0", "]", "\n", "all_losses", "=", "[", "]", "\n", "for", "disp_est", ",", "weight", "in", "zip", "(", "disp_ests", ",", "weights", ")", ":", "\n", "        ", "all_losses", ".", "append", "(", "weight", "*", "F", ".", "smooth_l1_loss", "(", "disp_est", "[", "mask", "]", ",", "disp_gt", "[", "mask", "]", ",", "size_average", "=", "True", ")", ")", "\n", "", "return", "sum", "(", "all_losses", ")", "\n", "", ""]]}