{"home.repos.pwc.inspect_result.zjukg_morse.None.post_trainer.PostTrainer.__init__": [[11, 25], ["trainer.Trainer.__init__", "post_trainer.PostTrainer.load_metatrain", "utils.get_posttrain_train_valid_dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.optim.Adam", "list", "list", "list", "post_trainer.PostTrainer.kge_model.parameters", "post_trainer.PostTrainer.ent_init.parameters", "post_trainer.PostTrainer.rgcn.parameters"], "methods", ["home.repos.pwc.inspect_result.zjukg_morse.None.datasets.KGEEvalDataset.__init__", "home.repos.pwc.inspect_result.zjukg_morse.None.post_trainer.PostTrainer.load_metatrain", "home.repos.pwc.inspect_result.zjukg_morse.None.utils.get_posttrain_train_valid_dataset"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "PostTrainer", ",", "self", ")", ".", "__init__", "(", "args", ")", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "load_metatrain", "(", ")", "\n", "\n", "# dataloader", "\n", "train_dataset", ",", "valid_dataset", "=", "get_posttrain_train_valid_dataset", "(", "args", ")", "\n", "self", ".", "train_dataloader", "=", "DataLoader", "(", "train_dataset", ",", "batch_size", "=", "self", ".", "args", ".", "posttrain_bs", ",", "\n", "collate_fn", "=", "KGETrainDataset", ".", "collate_fn", ")", "\n", "self", ".", "valid_dataloader", "=", "DataLoader", "(", "valid_dataset", ",", "batch_size", "=", "args", ".", "indtest_eval_bs", ",", "\n", "collate_fn", "=", "KGEEvalDataset", ".", "collate_fn", ")", "\n", "\n", "self", ".", "optimizer", "=", "optim", ".", "Adam", "(", "list", "(", "self", ".", "ent_init", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "rgcn", ".", "parameters", "(", ")", ")", "\n", "+", "list", "(", "self", ".", "kge_model", ".", "parameters", "(", ")", ")", ",", "lr", "=", "self", ".", "args", ".", "posttrain_lr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.post_trainer.PostTrainer.load_metatrain": [[26, 31], ["torch.load", "post_trainer.PostTrainer.ent_init.load_state_dict", "post_trainer.PostTrainer.rgcn.load_state_dict", "post_trainer.PostTrainer.kge_model.load_state_dict"], "methods", ["None"], ["", "def", "load_metatrain", "(", "self", ")", ":", "\n", "        ", "state", "=", "torch", ".", "load", "(", "self", ".", "args", ".", "metatrain_state", ",", "map_location", "=", "self", ".", "args", ".", "gpu", ")", "\n", "self", ".", "ent_init", ".", "load_state_dict", "(", "state", "[", "'ent_init'", "]", ")", "\n", "self", ".", "rgcn", ".", "load_state_dict", "(", "state", "[", "'rgcn'", "]", ")", "\n", "self", ".", "kge_model", ".", "load_state_dict", "(", "state", "[", "'kge_model'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.post_trainer.PostTrainer.get_ent_emb": [[32, 37], ["post_trainer.PostTrainer.ent_init", "post_trainer.PostTrainer.rgcn"], "methods", ["None"], ["", "def", "get_ent_emb", "(", "self", ",", "sup_g_bidir", ")", ":", "\n", "        ", "self", ".", "ent_init", "(", "sup_g_bidir", ")", "\n", "ent_emb", "=", "self", ".", "rgcn", "(", "sup_g_bidir", ")", "\n", "\n", "return", "ent_emb", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.post_trainer.PostTrainer.train": [[38, 62], ["post_trainer.PostTrainer.logger.info", "post_trainer.PostTrainer.evaluate_indtest_test_triples", "range", "post_trainer.PostTrainer.logger.info", "post_trainer.PostTrainer.get_ent_emb", "post_trainer.PostTrainer.get_loss", "post_trainer.PostTrainer.optimizer.zero_grad", "post_trainer.PostTrainer.backward", "post_trainer.PostTrainer.optimizer.step", "losses.append", "post_trainer.PostTrainer.evaluate_indtest_test_triples", "b.to", "post_trainer.PostTrainer.item", "numpy.mean"], "methods", ["home.repos.pwc.inspect_result.zjukg_morse.None.trainer.Trainer.evaluate_indtest_test_triples", "home.repos.pwc.inspect_result.zjukg_morse.None.trainer.Trainer.get_ent_emb", "home.repos.pwc.inspect_result.zjukg_morse.None.trainer.Trainer.get_loss", "home.repos.pwc.inspect_result.zjukg_morse.None.trainer.Trainer.evaluate_indtest_test_triples"], ["", "def", "train", "(", "self", ")", ":", "\n", "        ", "self", ".", "logger", ".", "info", "(", "'start fine-tuning'", ")", "\n", "\n", "# print epoch test rst", "\n", "self", ".", "evaluate_indtest_test_triples", "(", "num_cand", "=", "50", ")", "\n", "\n", "for", "i", "in", "range", "(", "1", ",", "self", ".", "args", ".", "posttrain_num_epoch", "+", "1", ")", ":", "\n", "            ", "losses", "=", "[", "]", "\n", "for", "batch", "in", "self", ".", "train_dataloader", ":", "\n", "                ", "pos_triple", ",", "neg_tail_ent", ",", "neg_head_ent", "=", "[", "b", ".", "to", "(", "self", ".", "args", ".", "gpu", ")", "for", "b", "in", "batch", "]", "\n", "\n", "ent_emb", "=", "self", ".", "get_ent_emb", "(", "self", ".", "indtest_train_g", ")", "\n", "loss", "=", "self", ".", "get_loss", "(", "pos_triple", ",", "neg_tail_ent", ",", "neg_head_ent", ",", "ent_emb", ")", "\n", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "\n", "losses", ".", "append", "(", "loss", ".", "item", "(", ")", ")", "\n", "\n", "", "self", ".", "logger", ".", "info", "(", "'epoch: {} | loss: {:.4f}'", ".", "format", "(", "i", ",", "np", ".", "mean", "(", "losses", ")", ")", ")", "\n", "\n", "if", "i", "%", "self", ".", "args", ".", "posttrain_check_per_epoch", "==", "0", ":", "\n", "                ", "self", ".", "evaluate_indtest_test_triples", "(", "num_cand", "=", "50", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.post_trainer.PostTrainer.evaluate_indtest_valid_triples": [[63, 74], ["post_trainer.PostTrainer.get_ent_emb", "post_trainer.PostTrainer.evaluate", "post_trainer.PostTrainer.logger.info", "post_trainer.PostTrainer.logger.info"], "methods", ["home.repos.pwc.inspect_result.zjukg_morse.None.trainer.Trainer.get_ent_emb", "home.repos.pwc.inspect_result.zjukg_morse.None.trainer.Trainer.evaluate"], ["", "", "", "def", "evaluate_indtest_valid_triples", "(", "self", ",", "num_cand", "=", "'all'", ")", ":", "\n", "        ", "ent_emb", "=", "self", ".", "get_ent_emb", "(", "self", ".", "indtest_train_g", ")", "\n", "\n", "results", "=", "self", ".", "evaluate", "(", "ent_emb", ",", "self", ".", "valid_dataloader", ",", "num_cand", ")", "\n", "\n", "self", ".", "logger", ".", "info", "(", "'valid on ind-test-graph'", ")", "\n", "self", ".", "logger", ".", "info", "(", "'mrr: {:.4f}, hits@1: {:.4f}, hits@5: {:.4f}, hits@10: {:.4f}'", ".", "format", "(", "\n", "results", "[", "'mrr'", "]", ",", "results", "[", "'hits@1'", "]", ",", "\n", "results", "[", "'hits@5'", "]", ",", "results", "[", "'hits@10'", "]", ")", ")", "\n", "\n", "return", "results", "\n", "", "", ""]], "home.repos.pwc.inspect_result.zjukg_morse.None.kge_model.KGEModel.__init__": [[6, 26], ["torch.Module.__init__", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Parameter", "torch.Parameter", "torch.init.uniform_", "torch.init.uniform_", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "ValueError", "kge_model.KGEModel.embedding_range.item", "kge_model.KGEModel.embedding_range.item", "kge_model.KGEModel.gamma.item"], "methods", ["home.repos.pwc.inspect_result.zjukg_morse.None.datasets.KGEEvalDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "KGEModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "model_name", "=", "args", ".", "kge", "\n", "self", ".", "nrelation", "=", "args", ".", "num_rel", "\n", "self", ".", "emb_dim", "=", "args", ".", "emb_dim", "\n", "self", ".", "epsilon", "=", "2.0", "\n", "\n", "self", ".", "gamma", "=", "torch", ".", "Tensor", "(", "[", "args", ".", "gamma", "]", ")", "\n", "\n", "self", ".", "embedding_range", "=", "torch", ".", "Tensor", "(", "[", "(", "self", ".", "gamma", ".", "item", "(", ")", "+", "self", ".", "epsilon", ")", "/", "args", ".", "emb_dim", "]", ")", "\n", "self", ".", "relation_embedding", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "self", ".", "nrelation", ",", "self", ".", "args", ".", "rel_dim", ")", ")", "\n", "nn", ".", "init", ".", "uniform_", "(", "\n", "tensor", "=", "self", ".", "relation_embedding", ",", "\n", "a", "=", "-", "self", ".", "embedding_range", ".", "item", "(", ")", ",", "\n", "b", "=", "self", ".", "embedding_range", ".", "item", "(", ")", "\n", ")", "\n", "\n", "if", "self", ".", "model_name", "not", "in", "[", "'TransE'", ",", "'DistMult'", ",", "'ComplEx'", ",", "'RotatE'", "]", ":", "\n", "            ", "raise", "ValueError", "(", "'model %s not supported'", "%", "self", ".", "model_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.kge_model.KGEModel.forward": [[27, 157], ["torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "ValueError", "sample.size", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "kge_model.KGEModel.entity_embedding.unsqueeze", "torch.index_select().view", "torch.index_select().view", "torch.index_select().view", "torch.index_select().view", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "head_part.size", "head_part.size", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "kge_model.KGEModel.entity_embedding.unsqueeze", "torch.index_select().view", "torch.index_select().view", "torch.index_select().view", "torch.index_select().view", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "ValueError", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "kge_model.KGEModel.relation_embedding.unsqueeze", "torch.index_select().view", "torch.index_select().view", "torch.index_select().view", "torch.index_select().view", "tail_part.size", "tail_part.size", "print", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "tail_part.size", "tail_part.size", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "head_part.view", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "tail_part.view", "tail_part.view"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "sample", ",", "ent_emb", ",", "mode", "=", "'single'", ")", ":", "\n", "        ", "'''\n        Forward function that calculate the score of a batch of triples.\n        In the 'single' mode, sample is a batch of triple.\n        In the 'head-batch' or 'tail-batch' mode, sample consists two part.\n        The first part is usually the positive sample.\n        And the second part is the entities in the negative samples.\n        Because negative samples and positive samples usually share two elements\n        in their triple ((head, relation) or (relation, tail)).\n        '''", "\n", "self", ".", "entity_embedding", "=", "ent_emb", "\n", "\n", "if", "mode", "==", "'single'", ":", "\n", "            ", "batch_size", ",", "negative_sample_size", "=", "sample", ".", "size", "(", "0", ")", ",", "1", "\n", "\n", "head", "=", "torch", ".", "index_select", "(", "\n", "self", ".", "entity_embedding", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "sample", "[", ":", ",", "0", "]", "\n", ")", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "relation", "=", "torch", ".", "index_select", "(", "\n", "self", ".", "relation_embedding", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "sample", "[", ":", ",", "1", "]", "\n", ")", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "tail", "=", "torch", ".", "index_select", "(", "\n", "self", ".", "entity_embedding", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "sample", "[", ":", ",", "2", "]", "\n", ")", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "", "elif", "mode", "==", "'head-batch'", ":", "\n", "            ", "tail_part", ",", "head_part", "=", "sample", "\n", "if", "head_part", "!=", "None", ":", "\n", "                ", "batch_size", ",", "negative_sample_size", "=", "head_part", ".", "size", "(", "0", ")", ",", "head_part", ".", "size", "(", "1", ")", "\n", "\n", "", "if", "head_part", "==", "None", ":", "\n", "                ", "head", "=", "self", ".", "entity_embedding", ".", "unsqueeze", "(", "0", ")", "\n", "", "else", ":", "\n", "                ", "head", "=", "torch", ".", "index_select", "(", "\n", "self", ".", "entity_embedding", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "head_part", ".", "view", "(", "-", "1", ")", "\n", ")", ".", "view", "(", "batch_size", ",", "negative_sample_size", ",", "-", "1", ")", "\n", "\n", "", "relation", "=", "torch", ".", "index_select", "(", "\n", "self", ".", "relation_embedding", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "tail_part", "[", ":", ",", "1", "]", "\n", ")", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "tail", "=", "torch", ".", "index_select", "(", "\n", "self", ".", "entity_embedding", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "tail_part", "[", ":", ",", "2", "]", "\n", ")", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "", "elif", "mode", "==", "'tail-batch'", ":", "\n", "            ", "head_part", ",", "tail_part", "=", "sample", "\n", "if", "tail_part", "!=", "None", ":", "\n", "                ", "try", ":", "\n", "                    ", "batch_size", ",", "negative_sample_size", "=", "tail_part", ".", "size", "(", "0", ")", ",", "tail_part", ".", "size", "(", "1", ")", "\n", "", "except", "IndexError", ":", "\n", "                    ", "print", "(", "tail_part", ")", "\n", "\n", "", "", "head", "=", "torch", ".", "index_select", "(", "\n", "self", ".", "entity_embedding", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "head_part", "[", ":", ",", "0", "]", "\n", ")", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "relation", "=", "torch", ".", "index_select", "(", "\n", "self", ".", "relation_embedding", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "head_part", "[", ":", ",", "1", "]", "\n", ")", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "if", "tail_part", "==", "None", ":", "\n", "                ", "tail", "=", "self", ".", "entity_embedding", ".", "unsqueeze", "(", "0", ")", "\n", "", "else", ":", "\n", "                ", "tail", "=", "torch", ".", "index_select", "(", "\n", "self", ".", "entity_embedding", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "tail_part", ".", "view", "(", "-", "1", ")", "\n", ")", ".", "view", "(", "batch_size", ",", "negative_sample_size", ",", "-", "1", ")", "\n", "\n", "", "", "elif", "mode", "==", "'rel-batch'", ":", "\n", "            ", "head_part", ",", "tail_part", "=", "sample", "\n", "if", "tail_part", "!=", "None", ":", "\n", "                ", "batch_size", ",", "negative_sample_size", "=", "tail_part", ".", "size", "(", "0", ")", ",", "tail_part", ".", "size", "(", "1", ")", "\n", "\n", "", "head", "=", "torch", ".", "index_select", "(", "\n", "self", ".", "entity_embedding", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "head_part", "[", ":", ",", "0", "]", "\n", ")", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "tail", "=", "torch", ".", "index_select", "(", "\n", "self", ".", "entity_embedding", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "head_part", "[", ":", ",", "2", "]", "\n", ")", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "if", "tail_part", "==", "None", ":", "\n", "                ", "relation", "=", "self", ".", "relation_embedding", ".", "unsqueeze", "(", "0", ")", "\n", "", "else", ":", "\n", "                ", "relation", "=", "torch", ".", "index_select", "(", "\n", "self", ".", "relation_embedding", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "tail_part", ".", "view", "(", "-", "1", ")", "\n", ")", ".", "view", "(", "batch_size", ",", "negative_sample_size", ",", "-", "1", ")", "\n", "\n", "", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'mode %s not supported'", "%", "mode", ")", "\n", "\n", "", "model_func", "=", "{", "\n", "'TransE'", ":", "self", ".", "TransE", ",", "\n", "'DistMult'", ":", "self", ".", "DistMult", ",", "\n", "'ComplEx'", ":", "self", ".", "ComplEx", ",", "\n", "'RotatE'", ":", "self", ".", "RotatE", ",", "\n", "}", "\n", "\n", "if", "self", ".", "model_name", "in", "model_func", ":", "\n", "            ", "score", "=", "model_func", "[", "self", ".", "model_name", "]", "(", "head", ",", "relation", ",", "tail", ",", "mode", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'model %s not supported'", "%", "self", ".", "model_name", ")", "\n", "\n", "", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.kge_model.KGEModel.TransE": [[158, 166], ["kge_model.KGEModel.gamma.item", "torch.norm", "torch.norm", "torch.norm", "torch.norm"], "methods", ["None"], ["", "def", "TransE", "(", "self", ",", "head", ",", "relation", ",", "tail", ",", "mode", ")", ":", "\n", "        ", "if", "mode", "==", "'head-batch'", ":", "\n", "            ", "score", "=", "head", "+", "(", "relation", "-", "tail", ")", "\n", "", "else", ":", "\n", "            ", "score", "=", "(", "head", "+", "relation", ")", "-", "tail", "\n", "\n", "", "score", "=", "self", ".", "gamma", ".", "item", "(", ")", "-", "torch", ".", "norm", "(", "score", ",", "p", "=", "1", ",", "dim", "=", "2", ")", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.kge_model.KGEModel.DistMult": [[167, 175], ["score.sum.sum.sum"], "methods", ["None"], ["", "def", "DistMult", "(", "self", ",", "head", ",", "relation", ",", "tail", ",", "mode", ")", ":", "\n", "        ", "if", "mode", "==", "'head-batch'", ":", "\n", "            ", "score", "=", "head", "*", "(", "relation", "*", "tail", ")", "\n", "", "else", ":", "\n", "            ", "score", "=", "(", "head", "*", "relation", ")", "*", "tail", "\n", "\n", "", "score", "=", "score", ".", "sum", "(", "dim", "=", "2", ")", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.kge_model.KGEModel.ComplEx": [[176, 192], ["torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "score.sum.sum.sum"], "methods", ["None"], ["", "def", "ComplEx", "(", "self", ",", "head", ",", "relation", ",", "tail", ",", "mode", ")", ":", "\n", "        ", "re_head", ",", "im_head", "=", "torch", ".", "chunk", "(", "head", ",", "2", ",", "dim", "=", "2", ")", "\n", "re_relation", ",", "im_relation", "=", "torch", ".", "chunk", "(", "relation", ",", "2", ",", "dim", "=", "2", ")", "\n", "re_tail", ",", "im_tail", "=", "torch", ".", "chunk", "(", "tail", ",", "2", ",", "dim", "=", "2", ")", "\n", "\n", "if", "mode", "==", "'head-batch'", ":", "\n", "            ", "re_score", "=", "re_relation", "*", "re_tail", "+", "im_relation", "*", "im_tail", "\n", "im_score", "=", "re_relation", "*", "im_tail", "-", "im_relation", "*", "re_tail", "\n", "score", "=", "re_head", "*", "re_score", "+", "im_head", "*", "im_score", "\n", "", "else", ":", "\n", "            ", "re_score", "=", "re_head", "*", "re_relation", "-", "im_head", "*", "im_relation", "\n", "im_score", "=", "re_head", "*", "im_relation", "+", "im_head", "*", "re_relation", "\n", "score", "=", "re_score", "*", "re_tail", "+", "im_score", "*", "im_tail", "\n", "\n", "", "score", "=", "score", ".", "sum", "(", "dim", "=", "2", ")", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.kge_model.KGEModel.RotatE": [[193, 222], ["torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "score.norm.norm.norm", "kge_model.KGEModel.gamma.item", "score.norm.norm.sum", "kge_model.KGEModel.embedding_range.item"], "methods", ["None"], ["", "def", "RotatE", "(", "self", ",", "head", ",", "relation", ",", "tail", ",", "mode", ")", ":", "\n", "        ", "pi", "=", "3.14159265358979323846", "\n", "\n", "re_head", ",", "im_head", "=", "torch", ".", "chunk", "(", "head", ",", "2", ",", "dim", "=", "2", ")", "\n", "re_tail", ",", "im_tail", "=", "torch", ".", "chunk", "(", "tail", ",", "2", ",", "dim", "=", "2", ")", "\n", "\n", "# Make phases of relations uniformly distributed in [-pi, pi]", "\n", "\n", "phase_relation", "=", "relation", "/", "(", "self", ".", "embedding_range", ".", "item", "(", ")", "/", "pi", ")", "\n", "\n", "re_relation", "=", "torch", ".", "cos", "(", "phase_relation", ")", "\n", "im_relation", "=", "torch", ".", "sin", "(", "phase_relation", ")", "\n", "\n", "if", "mode", "==", "'head-batch'", ":", "\n", "            ", "re_score", "=", "re_relation", "*", "re_tail", "+", "im_relation", "*", "im_tail", "\n", "im_score", "=", "re_relation", "*", "im_tail", "-", "im_relation", "*", "re_tail", "\n", "re_score", "=", "re_score", "-", "re_head", "\n", "im_score", "=", "im_score", "-", "im_head", "\n", "", "else", ":", "\n", "            ", "re_score", "=", "re_head", "*", "re_relation", "-", "im_head", "*", "im_relation", "\n", "im_score", "=", "re_head", "*", "im_relation", "+", "im_head", "*", "re_relation", "\n", "re_score", "=", "re_score", "-", "re_tail", "\n", "im_score", "=", "im_score", "-", "im_tail", "\n", "\n", "", "score", "=", "torch", ".", "stack", "(", "[", "re_score", ",", "im_score", "]", ",", "dim", "=", "0", ")", "\n", "score", "=", "score", ".", "norm", "(", "dim", "=", "0", ")", "\n", "\n", "score", "=", "self", ".", "gamma", ".", "item", "(", ")", "-", "score", ".", "sum", "(", "dim", "=", "2", ")", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.trainer.Trainer.__init__": [[17, 40], ["torch.utils.tensorboard.SummaryWriter", "torch.utils.tensorboard.SummaryWriter", "utils.Log().get_logger", "trainer.Trainer.logger.info", "os.path.join", "utils.get_indtest_test_dataset_and_train_g", "indtest_train_g.to", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "ent_init_model.EntInit().to", "rgcn_model.RGCN().to", "kge_model.KGEModel().to", "os.path.join", "json.dumps", "os.path.exists", "os.makedirs", "utils.Log", "vars", "ent_init_model.EntInit", "rgcn_model.RGCN", "kge_model.KGEModel"], "methods", ["home.repos.pwc.inspect_result.zjukg_morse.None.utils.FileLog.get_logger", "home.repos.pwc.inspect_result.zjukg_morse.None.utils.get_indtest_test_dataset_and_train_g"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "\n", "# writer and logger", "\n", "self", ".", "name", "=", "args", ".", "name", "\n", "self", ".", "writer", "=", "SummaryWriter", "(", "os", ".", "path", ".", "join", "(", "args", ".", "tb_log_dir", ",", "self", ".", "name", ")", ")", "\n", "self", ".", "logger", "=", "Log", "(", "args", ".", "log_dir", ",", "self", ".", "name", ")", ".", "get_logger", "(", ")", "\n", "self", ".", "logger", ".", "info", "(", "json", ".", "dumps", "(", "vars", "(", "args", ")", ")", ")", "\n", "\n", "# state dir", "\n", "self", ".", "state_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "state_dir", ",", "self", ".", "name", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "state_path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "self", ".", "state_path", ")", "\n", "\n", "", "indtest_test_dataset", ",", "indtest_train_g", "=", "get_indtest_test_dataset_and_train_g", "(", "args", ")", "\n", "self", ".", "indtest_train_g", "=", "indtest_train_g", ".", "to", "(", "args", ".", "gpu", ")", "\n", "self", ".", "indtest_test_dataloader", "=", "DataLoader", "(", "indtest_test_dataset", ",", "batch_size", "=", "args", ".", "indtest_eval_bs", ",", "\n", "shuffle", "=", "False", ",", "collate_fn", "=", "KGEEvalDataset", ".", "collate_fn", ")", "\n", "\n", "# models", "\n", "self", ".", "ent_init", "=", "EntInit", "(", "args", ")", ".", "to", "(", "args", ".", "gpu", ")", "\n", "self", ".", "rgcn", "=", "RGCN", "(", "args", ")", ".", "to", "(", "args", ".", "gpu", ")", "\n", "self", ".", "kge_model", "=", "KGEModel", "(", "args", ")", ".", "to", "(", "args", ".", "gpu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.trainer.Trainer.save_checkpoint": [[41, 52], ["os.listdir", "torch.save", "torch.save", "torch.save", "torch.save", "trainer.Trainer.ent_init.state_dict", "trainer.Trainer.rgcn.state_dict", "trainer.Trainer.kge_model.state_dict", "os.path.join", "os.path.isfile", "os.remove", "filename.split", "os.path.join", "os.path.join", "str"], "methods", ["None"], ["", "def", "save_checkpoint", "(", "self", ",", "step", ")", ":", "\n", "        ", "state", "=", "{", "'ent_init'", ":", "self", ".", "ent_init", ".", "state_dict", "(", ")", ",", "\n", "'rgcn'", ":", "self", ".", "rgcn", ".", "state_dict", "(", ")", ",", "\n", "'kge_model'", ":", "self", ".", "kge_model", ".", "state_dict", "(", ")", "}", "\n", "# delete previous checkpoint", "\n", "for", "filename", "in", "os", ".", "listdir", "(", "self", ".", "state_path", ")", ":", "\n", "            ", "if", "self", ".", "name", "in", "filename", ".", "split", "(", "'.'", ")", "and", "os", ".", "path", ".", "isfile", "(", "os", ".", "path", ".", "join", "(", "self", ".", "state_path", ",", "filename", ")", ")", ":", "\n", "                ", "os", ".", "remove", "(", "os", ".", "path", ".", "join", "(", "self", ".", "state_path", ",", "filename", ")", ")", "\n", "# save checkpoint", "\n", "", "", "torch", ".", "save", "(", "state", ",", "os", ".", "path", ".", "join", "(", "self", ".", "args", ".", "state_dir", ",", "self", ".", "name", ",", "\n", "self", ".", "name", "+", "'.'", "+", "str", "(", "step", ")", "+", "'.ckpt'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.trainer.Trainer.save_model": [[53, 56], ["os.rename", "os.path.join", "os.path.join", "str"], "methods", ["None"], ["", "def", "save_model", "(", "self", ",", "best_step", ")", ":", "\n", "        ", "os", ".", "rename", "(", "os", ".", "path", ".", "join", "(", "self", ".", "state_path", ",", "self", ".", "name", "+", "'.'", "+", "str", "(", "best_step", ")", "+", "'.ckpt'", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "state_path", ",", "self", ".", "name", "+", "'.best'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.trainer.Trainer.write_training_loss": [[57, 59], ["trainer.Trainer.writer.add_scalar"], "methods", ["None"], ["", "def", "write_training_loss", "(", "self", ",", "loss", ",", "step", ")", ":", "\n", "        ", "self", ".", "writer", ".", "add_scalar", "(", "\"training/loss\"", ",", "loss", ",", "step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.trainer.Trainer.write_evaluation_result": [[60, 65], ["trainer.Trainer.writer.add_scalar", "trainer.Trainer.writer.add_scalar", "trainer.Trainer.writer.add_scalar", "trainer.Trainer.writer.add_scalar"], "methods", ["None"], ["", "def", "write_evaluation_result", "(", "self", ",", "results", ",", "e", ")", ":", "\n", "        ", "self", ".", "writer", ".", "add_scalar", "(", "\"evaluation/mrr\"", ",", "results", "[", "'mrr'", "]", ",", "e", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "\"evaluation/hits10\"", ",", "results", "[", "'hits@10'", "]", ",", "e", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "\"evaluation/hits5\"", ",", "results", "[", "'hits@5'", "]", ",", "e", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "\"evaluation/hits1\"", ",", "results", "[", "'hits@1'", "]", ",", "e", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.trainer.Trainer.before_test_load": [[66, 71], ["torch.load", "torch.load", "torch.load", "torch.load", "trainer.Trainer.ent_init.load_state_dict", "trainer.Trainer.rgcn.load_state_dict", "trainer.Trainer.kge_model.load_state_dict", "os.path.join"], "methods", ["None"], ["", "def", "before_test_load", "(", "self", ")", ":", "\n", "        ", "state", "=", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "self", ".", "state_path", ",", "self", ".", "name", "+", "'.best'", ")", ",", "map_location", "=", "self", ".", "args", ".", "gpu", ")", "\n", "self", ".", "ent_init", ".", "load_state_dict", "(", "state", "[", "'ent_init'", "]", ")", "\n", "self", ".", "rgcn", ".", "load_state_dict", "(", "state", "[", "'rgcn'", "]", ")", "\n", "self", ".", "kge_model", ".", "load_state_dict", "(", "state", "[", "'kge_model'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.trainer.Trainer.get_loss": [[72, 87], ["trainer.Trainer.kge_model", "trainer.Trainer.kge_model", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "trainer.Trainer.kge_model", "torch.logsigmoid().squeeze", "torch.logsigmoid().squeeze", "torch.logsigmoid().squeeze.mean", "torch.cat.mean", "torch.cat.mean", "torch.logsigmoid", "torch.logsigmoid", "torch.softmax().detach", "torch.softmax().detach", "torch.logsigmoid", "torch.logsigmoid", "torch.softmax", "torch.softmax"], "methods", ["None"], ["", "def", "get_loss", "(", "self", ",", "tri", ",", "neg_tail_ent", ",", "neg_head_ent", ",", "ent_emb", ")", ":", "\n", "        ", "neg_tail_score", "=", "self", ".", "kge_model", "(", "(", "tri", ",", "neg_tail_ent", ")", ",", "ent_emb", ",", "mode", "=", "'tail-batch'", ")", "\n", "neg_head_score", "=", "self", ".", "kge_model", "(", "(", "tri", ",", "neg_head_ent", ")", ",", "ent_emb", ",", "mode", "=", "'head-batch'", ")", "\n", "neg_score", "=", "torch", ".", "cat", "(", "[", "neg_tail_score", ",", "neg_head_score", "]", ")", "\n", "neg_score", "=", "(", "F", ".", "softmax", "(", "neg_score", "*", "self", ".", "args", ".", "adv_temp", ",", "dim", "=", "1", ")", ".", "detach", "(", ")", "\n", "*", "F", ".", "logsigmoid", "(", "-", "neg_score", ")", ")", ".", "sum", "(", "dim", "=", "1", ")", "\n", "\n", "pos_score", "=", "self", ".", "kge_model", "(", "tri", ",", "ent_emb", ")", "\n", "pos_score", "=", "F", ".", "logsigmoid", "(", "pos_score", ")", ".", "squeeze", "(", "dim", "=", "1", ")", "\n", "\n", "positive_sample_loss", "=", "-", "pos_score", ".", "mean", "(", ")", "\n", "negative_sample_loss", "=", "-", "neg_score", ".", "mean", "(", ")", "\n", "loss", "=", "(", "positive_sample_loss", "+", "negative_sample_loss", ")", "/", "2", "\n", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.trainer.Trainer.get_ent_emb": [[88, 93], ["trainer.Trainer.ent_init", "trainer.Trainer.rgcn"], "methods", ["None"], ["", "def", "get_ent_emb", "(", "self", ",", "sup_g_bidir", ")", ":", "\n", "        ", "self", ".", "ent_init", "(", "sup_g_bidir", ")", "\n", "ent_emb", "=", "self", ".", "rgcn", "(", "sup_g_bidir", ")", "\n", "\n", "return", "ent_emb", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.trainer.Trainer.evaluate": [[94, 168], ["collections.defaultdict", "collections.defaultdict.items", "range", "collections.defaultdict.items", "trainer.Trainer.kge_model", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.where", "torch.where", "torch.where", "torch.where", "trainer.Trainer.kge_model", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.where", "torch.where", "torch.where", "torch.where", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "ranks.float.float.float", "torch.numel", "torch.numel", "torch.numel", "torch.numel", "torch.sum().item", "torch.sum().item", "torch.sum().item", "torch.sum().item", "torch.sum().item", "torch.sum().item", "torch.sum().item", "torch.sum().item", "b.to", "tail_label.byte", "head_label.byte", "torch.numel", "torch.numel", "torch.numel", "torch.numel", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "trainer.Trainer.kge_model", "trainer.Trainer.kge_model", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "ranks.float.float.float", "torch.numel", "torch.numel", "torch.numel", "torch.numel", "torch.sum().item", "torch.sum().item", "torch.sum().item", "torch.sum().item", "torch.sum().item", "torch.sum().item", "torch.sum().item", "torch.sum().item", "trainer.Trainer.size", "torch.argsort", "torch.argsort", "torch.argsort", "torch.argsort", "trainer.Trainer.size", "torch.argsort", "torch.argsort", "torch.argsort", "torch.argsort", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "b.to", "torch.numel", "torch.numel", "torch.numel", "torch.numel", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.argsort", "torch.argsort", "torch.argsort", "torch.argsort", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.argsort", "torch.argsort", "torch.argsort", "torch.argsort", "pos_triple.size", "pos_triple.size", "torch.argsort", "torch.argsort", "torch.argsort", "torch.argsort", "torch.argsort", "torch.argsort", "torch.argsort", "torch.argsort", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.argsort", "torch.argsort", "torch.argsort", "torch.argsort", "torch.argsort", "torch.argsort", "torch.argsort", "torch.argsort"], "methods", ["None"], ["", "def", "evaluate", "(", "self", ",", "ent_emb", ",", "eval_dataloader", ",", "num_cand", "=", "'all'", ")", ":", "\n", "        ", "results", "=", "ddict", "(", "float", ")", "\n", "count", "=", "0", "\n", "\n", "eval_dataloader", ".", "dataset", ".", "num_cand", "=", "num_cand", "\n", "\n", "if", "num_cand", "==", "'all'", ":", "\n", "            ", "for", "batch", "in", "eval_dataloader", ":", "\n", "                ", "pos_triple", ",", "tail_label", ",", "head_label", "=", "[", "b", ".", "to", "(", "self", ".", "args", ".", "gpu", ")", "for", "b", "in", "batch", "]", "\n", "head_idx", ",", "rel_idx", ",", "tail_idx", "=", "pos_triple", "[", ":", ",", "0", "]", ",", "pos_triple", "[", ":", ",", "1", "]", ",", "pos_triple", "[", ":", ",", "2", "]", "\n", "\n", "# tail prediction", "\n", "pred", "=", "self", ".", "kge_model", "(", "(", "pos_triple", ",", "None", ")", ",", "ent_emb", ",", "mode", "=", "'tail-batch'", ")", "\n", "\n", "b_range", "=", "torch", ".", "arange", "(", "pred", ".", "size", "(", ")", "[", "0", "]", ",", "device", "=", "self", ".", "args", ".", "gpu", ")", "\n", "target_pred", "=", "pred", "[", "b_range", ",", "tail_idx", "]", "\n", "pred", "=", "torch", ".", "where", "(", "tail_label", ".", "byte", "(", ")", ",", "-", "torch", ".", "ones_like", "(", "pred", ")", "*", "10000000", ",", "pred", ")", "\n", "pred", "[", "b_range", ",", "tail_idx", "]", "=", "target_pred", "\n", "\n", "tail_ranks", "=", "1", "+", "torch", ".", "argsort", "(", "torch", ".", "argsort", "(", "pred", ",", "dim", "=", "1", ",", "descending", "=", "True", ")", ",", "\n", "dim", "=", "1", ",", "descending", "=", "False", ")", "[", "b_range", ",", "tail_idx", "]", "\n", "\n", "# head prediction", "\n", "pred", "=", "self", ".", "kge_model", "(", "(", "pos_triple", ",", "None", ")", ",", "ent_emb", ",", "mode", "=", "'head-batch'", ")", "\n", "\n", "b_range", "=", "torch", ".", "arange", "(", "pred", ".", "size", "(", ")", "[", "0", "]", ",", "device", "=", "self", ".", "args", ".", "gpu", ")", "\n", "target_pred", "=", "pred", "[", "b_range", ",", "head_idx", "]", "\n", "pred", "=", "torch", ".", "where", "(", "head_label", ".", "byte", "(", ")", ",", "-", "torch", ".", "ones_like", "(", "pred", ")", "*", "10000000", ",", "pred", ")", "\n", "pred", "[", "b_range", ",", "head_idx", "]", "=", "target_pred", "\n", "\n", "head_ranks", "=", "1", "+", "torch", ".", "argsort", "(", "torch", ".", "argsort", "(", "pred", ",", "dim", "=", "1", ",", "descending", "=", "True", ")", ",", "\n", "dim", "=", "1", ",", "descending", "=", "False", ")", "[", "b_range", ",", "head_idx", "]", "\n", "\n", "ranks", "=", "torch", ".", "cat", "(", "[", "tail_ranks", ",", "head_ranks", "]", ")", "\n", "ranks", "=", "ranks", ".", "float", "(", ")", "\n", "count", "+=", "torch", ".", "numel", "(", "ranks", ")", "\n", "results", "[", "'mr'", "]", "+=", "torch", ".", "sum", "(", "ranks", ")", ".", "item", "(", ")", "\n", "results", "[", "'mrr'", "]", "+=", "torch", ".", "sum", "(", "1.0", "/", "ranks", ")", ".", "item", "(", ")", "\n", "\n", "for", "k", "in", "[", "1", ",", "5", ",", "10", "]", ":", "\n", "                    ", "results", "[", "'hits@{}'", ".", "format", "(", "k", ")", "]", "+=", "torch", ".", "numel", "(", "ranks", "[", "ranks", "<=", "k", "]", ")", "\n", "\n", "", "", "for", "k", ",", "v", "in", "results", ".", "items", "(", ")", ":", "\n", "                ", "results", "[", "k", "]", "=", "v", "/", "count", "\n", "\n", "", "", "else", ":", "\n", "            ", "for", "i", "in", "range", "(", "self", ".", "args", ".", "num_sample_cand", ")", ":", "\n", "                ", "for", "batch", "in", "eval_dataloader", ":", "\n", "                    ", "pos_triple", ",", "tail_cand", ",", "head_cand", "=", "[", "b", ".", "to", "(", "self", ".", "args", ".", "gpu", ")", "for", "b", "in", "batch", "]", "\n", "\n", "b_range", "=", "torch", ".", "arange", "(", "pos_triple", ".", "size", "(", ")", "[", "0", "]", ",", "device", "=", "self", ".", "args", ".", "gpu", ")", "\n", "target_idx", "=", "torch", ".", "zeros", "(", "pos_triple", ".", "size", "(", ")", "[", "0", "]", ",", "device", "=", "self", ".", "args", ".", "gpu", ",", "dtype", "=", "torch", ".", "int64", ")", "\n", "# tail prediction", "\n", "pred", "=", "self", ".", "kge_model", "(", "(", "pos_triple", ",", "tail_cand", ")", ",", "ent_emb", ",", "mode", "=", "'tail-batch'", ")", "\n", "tail_ranks", "=", "1", "+", "torch", ".", "argsort", "(", "torch", ".", "argsort", "(", "pred", ",", "dim", "=", "1", ",", "descending", "=", "True", ")", ",", "\n", "dim", "=", "1", ",", "descending", "=", "False", ")", "[", "b_range", ",", "target_idx", "]", "\n", "# head prediction", "\n", "pred", "=", "self", ".", "kge_model", "(", "(", "pos_triple", ",", "head_cand", ")", ",", "ent_emb", ",", "mode", "=", "'head-batch'", ")", "\n", "head_ranks", "=", "1", "+", "torch", ".", "argsort", "(", "torch", ".", "argsort", "(", "pred", ",", "dim", "=", "1", ",", "descending", "=", "True", ")", ",", "\n", "dim", "=", "1", ",", "descending", "=", "False", ")", "[", "b_range", ",", "target_idx", "]", "\n", "\n", "ranks", "=", "torch", ".", "cat", "(", "[", "tail_ranks", ",", "head_ranks", "]", ")", "\n", "ranks", "=", "ranks", ".", "float", "(", ")", "\n", "count", "+=", "torch", ".", "numel", "(", "ranks", ")", "\n", "results", "[", "'mr'", "]", "+=", "torch", ".", "sum", "(", "ranks", ")", ".", "item", "(", ")", "\n", "results", "[", "'mrr'", "]", "+=", "torch", ".", "sum", "(", "1.0", "/", "ranks", ")", ".", "item", "(", ")", "\n", "\n", "for", "k", "in", "[", "1", ",", "5", ",", "10", "]", ":", "\n", "                        ", "results", "[", "'hits@{}'", ".", "format", "(", "k", ")", "]", "+=", "torch", ".", "numel", "(", "ranks", "[", "ranks", "<=", "k", "]", ")", "\n", "\n", "", "", "", "for", "k", ",", "v", "in", "results", ".", "items", "(", ")", ":", "\n", "                ", "results", "[", "k", "]", "=", "v", "/", "count", "\n", "\n", "", "", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.trainer.Trainer.evaluate_indtest_test_triples": [[169, 181], ["trainer.Trainer.get_ent_emb", "trainer.Trainer.evaluate", "trainer.Trainer.logger.info", "trainer.Trainer.logger.info"], "methods", ["home.repos.pwc.inspect_result.zjukg_morse.None.trainer.Trainer.get_ent_emb", "home.repos.pwc.inspect_result.zjukg_morse.None.trainer.Trainer.evaluate"], ["", "def", "evaluate_indtest_test_triples", "(", "self", ",", "num_cand", "=", "'all'", ")", ":", "\n", "        ", "\"\"\"do evaluation on test triples of ind-test-graph\"\"\"", "\n", "ent_emb", "=", "self", ".", "get_ent_emb", "(", "self", ".", "indtest_train_g", ")", "\n", "\n", "results", "=", "self", ".", "evaluate", "(", "ent_emb", ",", "self", ".", "indtest_test_dataloader", ",", "num_cand", "=", "num_cand", ")", "\n", "\n", "self", ".", "logger", ".", "info", "(", "f'test on ind-test-graph, sample {num_cand}'", ")", "\n", "self", ".", "logger", ".", "info", "(", "'mrr: {:.4f}, hits@1: {:.4f}, hits@5: {:.4f}, hits@10: {:.4f}'", ".", "format", "(", "\n", "results", "[", "'mrr'", "]", ",", "results", "[", "'hits@1'", "]", ",", "\n", "results", "[", "'hits@5'", "]", ",", "results", "[", "'hits@10'", "]", ")", ")", "\n", "\n", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.ent_init_model.EntInit.__init__": [[7, 16], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.init.calculate_gain", "torch.init.calculate_gain", "torch.init.calculate_gain", "torch.init.calculate_gain"], "methods", ["home.repos.pwc.inspect_result.zjukg_morse.None.datasets.KGEEvalDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "EntInit", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "args", "=", "args", "\n", "\n", "self", ".", "rel_head_emb", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "args", ".", "num_rel", ",", "args", ".", "ent_dim", ")", ")", "\n", "self", ".", "rel_tail_emb", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "args", ".", "num_rel", ",", "args", ".", "ent_dim", ")", ")", "\n", "\n", "nn", ".", "init", ".", "xavier_normal_", "(", "self", ".", "rel_head_emb", ",", "gain", "=", "nn", ".", "init", ".", "calculate_gain", "(", "'relu'", ")", ")", "\n", "nn", ".", "init", ".", "xavier_normal_", "(", "self", ".", "rel_tail_emb", ",", "gain", "=", "nn", ".", "init", ".", "calculate_gain", "(", "'relu'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.ent_init_model.EntInit.forward": [[17, 30], ["g_bidir.num_edges", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "dgl.function.copy_e", "dgl.function.mean", "g_bidir.update_all", "g_bidir.edata.pop", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "g_bidir", ")", ":", "\n", "        ", "num_edge", "=", "g_bidir", ".", "num_edges", "(", ")", "\n", "etypes", "=", "g_bidir", ".", "edata", "[", "'type'", "]", "\n", "g_bidir", ".", "edata", "[", "'ent_e'", "]", "=", "torch", ".", "zeros", "(", "num_edge", ",", "self", ".", "args", ".", "ent_dim", ")", ".", "to", "(", "self", ".", "args", ".", "gpu", ")", "\n", "rh_idx", "=", "etypes", "<", "self", ".", "args", ".", "num_rel", "\n", "rt_idx", "=", "etypes", ">=", "self", ".", "args", ".", "num_rel", "\n", "g_bidir", ".", "edata", "[", "'ent_e'", "]", "[", "rh_idx", "]", "=", "self", ".", "rel_head_emb", "[", "etypes", "[", "rh_idx", "]", "]", "\n", "g_bidir", ".", "edata", "[", "'ent_e'", "]", "[", "rt_idx", "]", "=", "self", ".", "rel_tail_emb", "[", "etypes", "[", "rt_idx", "]", "-", "self", ".", "args", ".", "num_rel", "]", "\n", "\n", "message_func", "=", "dgl", ".", "function", ".", "copy_e", "(", "'ent_e'", ",", "'msg'", ")", "\n", "reduce_func", "=", "dgl", ".", "function", ".", "mean", "(", "'msg'", ",", "'feat'", ")", "\n", "g_bidir", ".", "update_all", "(", "message_func", ",", "reduce_func", ")", "\n", "g_bidir", ".", "edata", ".", "pop", "(", "'ent_e'", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.zjukg_morse.None.rgcn_model.Identity.__init__": [[7, 9], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.zjukg_morse.None.datasets.KGEEvalDataset.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Identity", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.rgcn_model.Identity.forward": [[10, 13], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"Return input\"\"\"", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.rgcn_model.Aggregator.__init__": [[16, 18], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.zjukg_morse.None.datasets.KGEEvalDataset.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Aggregator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.rgcn_model.Aggregator.forward": [[19, 26], ["torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "rgcn_model.Aggregator.update_embedding", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "node.mailbox[].transpose"], "methods", ["home.repos.pwc.inspect_result.zjukg_morse.None.rgcn_model.Aggregator.update_embedding"], ["", "def", "forward", "(", "self", ",", "node", ")", ":", "\n", "        ", "curr_emb", "=", "node", ".", "mailbox", "[", "'curr_emb'", "]", "[", ":", ",", "0", ",", ":", "]", "# (B, F)", "\n", "nei_msg", "=", "torch", ".", "bmm", "(", "node", ".", "mailbox", "[", "'alpha'", "]", ".", "transpose", "(", "1", ",", "2", ")", ",", "node", ".", "mailbox", "[", "'msg'", "]", ")", ".", "squeeze", "(", "1", ")", "# (B, F)", "\n", "\n", "new_emb", "=", "self", ".", "update_embedding", "(", "curr_emb", ",", "nei_msg", ")", "\n", "\n", "return", "{", "'h'", ":", "new_emb", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.rgcn_model.Aggregator.update_embedding": [[27, 31], ["None"], "methods", ["None"], ["", "def", "update_embedding", "(", "self", ",", "curr_emb", ",", "nei_msg", ")", ":", "\n", "        ", "new_emb", "=", "nei_msg", "+", "curr_emb", "\n", "\n", "return", "new_emb", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.rgcn_model.RGCNLayer.__init__": [[34, 68], ["torch.nn.Module.__init__", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "rgcn_model.Aggregator", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.init.zeros_", "torch.nn.init.zeros_", "torch.nn.init.calculate_gain", "torch.nn.init.calculate_gain", "torch.nn.init.calculate_gain", "torch.nn.init.calculate_gain", "torch.nn.init.calculate_gain", "torch.nn.init.calculate_gain", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.zjukg_morse.None.datasets.KGEEvalDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_dim", ",", "out_dim", ",", "num_rels", ",", "num_bases", "=", "None", ",", "has_bias", "=", "False", ",", "activation", "=", "None", ",", "\n", "is_input_layer", "=", "False", ")", ":", "\n", "        ", "super", "(", "RGCNLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_dim", "=", "in_dim", "\n", "self", ".", "out_dim", "=", "out_dim", "\n", "self", ".", "num_rels", "=", "num_rels", "\n", "self", ".", "num_bases", "=", "num_bases", "\n", "if", "self", ".", "num_bases", "is", "None", "or", "self", ".", "num_bases", ">", "self", ".", "num_rels", "or", "self", ".", "num_bases", "<=", "0", ":", "\n", "            ", "self", ".", "num_bases", "=", "self", ".", "num_rels", "\n", "\n", "# for msg_func", "\n", "", "self", ".", "rel_weight", "=", "None", "\n", "self", ".", "input_", "=", "None", "\n", "\n", "self", ".", "has_bias", "=", "has_bias", "\n", "self", ".", "activation", "=", "activation", "\n", "\n", "self", ".", "is_input_layer", "=", "is_input_layer", "\n", "\n", "# add basis weights", "\n", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "self", ".", "num_bases", ",", "self", ".", "in_dim", ",", "self", ".", "out_dim", ")", ")", "\n", "self", ".", "w_comp", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "self", ".", "num_rels", "*", "2", ",", "self", ".", "num_bases", ")", ")", "\n", "self", ".", "self_loop_weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "self", ".", "in_dim", ",", "self", ".", "out_dim", ")", ")", "\n", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "weight", ",", "gain", "=", "nn", ".", "init", ".", "calculate_gain", "(", "'relu'", ")", ")", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "w_comp", ",", "gain", "=", "nn", ".", "init", ".", "calculate_gain", "(", "'relu'", ")", ")", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "self_loop_weight", ",", "gain", "=", "nn", ".", "init", ".", "calculate_gain", "(", "'relu'", ")", ")", "\n", "\n", "self", ".", "aggregator", "=", "Aggregator", "(", ")", "\n", "\n", "# bias", "\n", "if", "self", ".", "has_bias", ":", "\n", "            ", "self", ".", "bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "self", ".", "out_dim", ")", ")", "\n", "nn", ".", "init", ".", "zeros_", "(", "self", ".", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.rgcn_model.RGCNLayer.msg_func": [[69, 76], ["rgcn_model.RGCNLayer.rel_weight.index_select", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "edges.dst[].to().to().reshape", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "edges.src[].unsqueeze", "edges.dst[].to().to", "edges.dst[].to"], "methods", ["None"], ["", "", "def", "msg_func", "(", "self", ",", "edges", ")", ":", "\n", "        ", "w", "=", "self", ".", "rel_weight", ".", "index_select", "(", "0", ",", "edges", ".", "data", "[", "'type'", "]", ")", "\n", "msg", "=", "torch", ".", "bmm", "(", "edges", ".", "src", "[", "self", ".", "input_", "]", ".", "unsqueeze", "(", "1", ")", ",", "w", ")", ".", "squeeze", "(", "1", ")", "\n", "curr_emb", "=", "torch", ".", "mm", "(", "edges", ".", "dst", "[", "self", ".", "input_", "]", ",", "self", ".", "self_loop_weight", ")", "# (B, F)", "\n", "a", "=", "1", "/", "edges", ".", "dst", "[", "'in_d'", "]", ".", "to", "(", "torch", ".", "float32", ")", ".", "to", "(", "device", "=", "w", ".", "device", ")", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "\n", "return", "{", "'curr_emb'", ":", "curr_emb", ",", "'msg'", ":", "msg", ",", "'alpha'", ":", "a", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.rgcn_model.RGCNLayer.apply_node_func": [[77, 87], ["rgcn_model.RGCNLayer.activation"], "methods", ["None"], ["", "def", "apply_node_func", "(", "self", ",", "nodes", ")", ":", "\n", "        ", "node_repr", "=", "nodes", ".", "data", "[", "'h'", "]", "\n", "\n", "if", "self", ".", "has_bias", ":", "\n", "            ", "node_repr", "=", "node_repr", "+", "self", ".", "bias", "\n", "\n", "", "if", "self", ".", "activation", ":", "\n", "            ", "node_repr", "=", "self", ".", "activation", "(", "node_repr", ")", "\n", "\n", "", "return", "{", "'h'", ":", "node_repr", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.rgcn_model.RGCNLayer.forward": [[88, 106], ["rgcn_model.RGCNLayer.weight.view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "g.in_degrees", "g.update_all", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "g", ")", ":", "\n", "# generate all relations' weight from bases", "\n", "        ", "weight", "=", "self", ".", "weight", ".", "view", "(", "self", ".", "num_bases", ",", "self", ".", "in_dim", "*", "self", ".", "out_dim", ")", "\n", "self", ".", "rel_weight", "=", "torch", ".", "matmul", "(", "self", ".", "w_comp", ",", "weight", ")", ".", "view", "(", "\n", "self", ".", "num_rels", "*", "2", ",", "self", ".", "in_dim", ",", "self", ".", "out_dim", ")", "\n", "\n", "# normalization constant", "\n", "g", ".", "dstdata", "[", "'in_d'", "]", "=", "g", ".", "in_degrees", "(", ")", "\n", "\n", "self", ".", "input_", "=", "'feat'", "if", "self", ".", "is_input_layer", "else", "'h'", "\n", "\n", "g", ".", "update_all", "(", "self", ".", "msg_func", ",", "self", ".", "aggregator", ",", "self", ".", "apply_node_func", ")", "\n", "\n", "\n", "if", "self", ".", "is_input_layer", ":", "\n", "            ", "g", ".", "ndata", "[", "'repr'", "]", "=", "torch", ".", "cat", "(", "[", "g", ".", "ndata", "[", "'feat'", "]", ",", "g", ".", "ndata", "[", "'h'", "]", "]", ",", "dim", "=", "1", ")", "\n", "", "else", ":", "\n", "            ", "g", ".", "ndata", "[", "'repr'", "]", "=", "torch", ".", "cat", "(", "[", "g", ".", "ndata", "[", "'repr'", "]", ",", "g", ".", "ndata", "[", "'h'", "]", "]", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.rgcn_model.RGCN.__init__": [[109, 123], ["torch.nn.Module.__init__", "torch.nn.ModuleList", "torch.nn.ModuleList", "rgcn_model.RGCN.build_model", "torch.nn.Linear", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.zjukg_morse.None.datasets.KGEEvalDataset.__init__", "home.repos.pwc.inspect_result.zjukg_morse.None.rgcn_model.RGCN.build_model"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "RGCN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "emb_dim", "=", "args", ".", "ent_dim", "\n", "self", ".", "num_rel", "=", "args", ".", "num_rel", "\n", "self", ".", "num_bases", "=", "args", ".", "num_bases", "\n", "self", ".", "num_layers", "=", "args", ".", "num_layers", "\n", "self", ".", "device", "=", "args", ".", "gpu", "\n", "\n", "# create rgcn layers", "\n", "self", ".", "layers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "build_model", "(", ")", "\n", "\n", "self", ".", "jk_linear", "=", "nn", ".", "Linear", "(", "self", ".", "emb_dim", "*", "(", "self", ".", "num_layers", "+", "1", ")", ",", "self", ".", "emb_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.rgcn_model.RGCN.build_model": [[124, 132], ["rgcn_model.RGCN.build_input_layer", "rgcn_model.RGCN.layers.append", "range", "rgcn_model.RGCN.build_hidden_layer", "rgcn_model.RGCN.layers.append"], "methods", ["home.repos.pwc.inspect_result.zjukg_morse.None.rgcn_model.RGCN.build_input_layer", "home.repos.pwc.inspect_result.zjukg_morse.None.rgcn_model.RGCN.build_hidden_layer"], ["", "def", "build_model", "(", "self", ")", ":", "\n", "# i2h", "\n", "        ", "i2h", "=", "self", ".", "build_input_layer", "(", ")", "\n", "self", ".", "layers", ".", "append", "(", "i2h", ")", "\n", "# h2h", "\n", "for", "idx", "in", "range", "(", "self", ".", "num_layers", "-", "1", ")", ":", "\n", "            ", "h2h", "=", "self", ".", "build_hidden_layer", "(", ")", "\n", "self", ".", "layers", ".", "append", "(", "h2h", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.rgcn_model.RGCN.build_input_layer": [[133, 141], ["rgcn_model.RGCNLayer"], "methods", ["None"], ["", "", "def", "build_input_layer", "(", "self", ")", ":", "\n", "        ", "return", "RGCNLayer", "(", "self", ".", "emb_dim", ",", "\n", "self", ".", "emb_dim", ",", "\n", "self", ".", "num_rel", ",", "\n", "self", ".", "num_bases", ",", "\n", "has_bias", "=", "True", ",", "\n", "activation", "=", "F", ".", "relu", ",", "\n", "is_input_layer", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.rgcn_model.RGCN.build_hidden_layer": [[142, 149], ["rgcn_model.RGCNLayer"], "methods", ["None"], ["", "def", "build_hidden_layer", "(", "self", ")", ":", "\n", "        ", "return", "RGCNLayer", "(", "self", ".", "emb_dim", ",", "\n", "self", ".", "emb_dim", ",", "\n", "self", ".", "num_rel", ",", "\n", "self", ".", "num_bases", ",", "\n", "has_bias", "=", "True", ",", "\n", "activation", "=", "F", ".", "relu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.rgcn_model.RGCN.forward": [[150, 156], ["enumerate", "rgcn_model.RGCN.jk_linear", "layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "g", ")", ":", "\n", "        ", "for", "idx", ",", "layer", "in", "enumerate", "(", "self", ".", "layers", ")", ":", "\n", "            ", "layer", "(", "g", ")", "\n", "\n", "", "g", ".", "ndata", "[", "'h'", "]", "=", "self", ".", "jk_linear", "(", "g", ".", "ndata", "[", "'repr'", "]", ")", "\n", "return", "g", ".", "ndata", "[", "'h'", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.zjukg_morse.None.meta_trainer.MetaTrainer.__init__": [[12, 25], ["trainer.Trainer.__init__", "datasets.TrainSubgraphDataset", "datasets.ValidSubgraphDataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.optim.Adam", "list", "list", "list", "meta_trainer.MetaTrainer.kge_model.parameters", "meta_trainer.MetaTrainer.ent_init.parameters", "meta_trainer.MetaTrainer.rgcn.parameters"], "methods", ["home.repos.pwc.inspect_result.zjukg_morse.None.datasets.KGEEvalDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "MetaTrainer", ",", "self", ")", ".", "__init__", "(", "args", ")", "\n", "# dataloader", "\n", "train_subgraph_dataset", "=", "TrainSubgraphDataset", "(", "args", ")", "\n", "valid_subgraph_dataset", "=", "ValidSubgraphDataset", "(", "args", ")", "\n", "self", ".", "train_subgraph_dataloader", "=", "DataLoader", "(", "train_subgraph_dataset", ",", "batch_size", "=", "args", ".", "metatrain_bs", ",", "\n", "shuffle", "=", "True", ",", "collate_fn", "=", "TrainSubgraphDataset", ".", "collate_fn", ")", "\n", "self", ".", "valid_subgraph_dataloader", "=", "DataLoader", "(", "valid_subgraph_dataset", ",", "batch_size", "=", "args", ".", "metatrain_bs", ",", "\n", "shuffle", "=", "False", ",", "collate_fn", "=", "ValidSubgraphDataset", ".", "collate_fn", ")", "\n", "\n", "# optim", "\n", "self", ".", "optimizer", "=", "optim", ".", "Adam", "(", "list", "(", "self", ".", "ent_init", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "rgcn", ".", "parameters", "(", ")", ")", "\n", "+", "list", "(", "self", ".", "kge_model", ".", "parameters", "(", ")", ")", ",", "lr", "=", "self", ".", "args", ".", "metatrain_lr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.meta_trainer.MetaTrainer.load_pretrain": [[26, 31], ["torch.load", "meta_trainer.MetaTrainer.ent_init.load_state_dict", "meta_trainer.MetaTrainer.rgcn.load_state_dict", "meta_trainer.MetaTrainer.kge_model.load_state_dict"], "methods", ["None"], ["", "def", "load_pretrain", "(", "self", ")", ":", "\n", "        ", "state", "=", "torch", ".", "load", "(", "self", ".", "args", ".", "pretrain_state", ",", "map_location", "=", "self", ".", "args", ".", "gpu", ")", "\n", "self", ".", "ent_init", ".", "load_state_dict", "(", "state", "[", "'ent_init'", "]", ")", "\n", "self", ".", "rgcn", ".", "load_state_dict", "(", "state", "[", "'rgcn'", "]", ")", "\n", "self", ".", "kge_model", ".", "load_state_dict", "(", "state", "[", "'kge_model'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.meta_trainer.MetaTrainer.train": [[32, 88], ["meta_trainer.MetaTrainer.logger.info", "range", "meta_trainer.MetaTrainer.logger.info", "meta_trainer.MetaTrainer.logger.info", "meta_trainer.MetaTrainer.save_model", "meta_trainer.MetaTrainer.logger.info", "meta_trainer.MetaTrainer.before_test_load", "meta_trainer.MetaTrainer.evaluate_indtest_test_triples", "dgl.batch().to", "meta_trainer.MetaTrainer.get_ent_emb", "dgl.unbatch", "enumerate", "len", "meta_trainer.MetaTrainer.optimizer.zero_grad", "batch_loss.backward", "meta_trainer.MetaTrainer.optimizer.step", "meta_trainer.MetaTrainer.logger.info", "meta_trainer.MetaTrainer.write_training_loss", "meta_trainer.MetaTrainer.get_loss", "batch_loss.item", "meta_trainer.MetaTrainer.evaluate_valid_subgraphs", "meta_trainer.MetaTrainer.write_evaluation_result", "dgl.batch", "d.to", "batch_loss.item", "meta_trainer.MetaTrainer.logger.info", "meta_trainer.MetaTrainer.save_checkpoint", "meta_trainer.MetaTrainer.logger.info", "utils.get_g_bidir"], "methods", ["home.repos.pwc.inspect_result.zjukg_morse.None.trainer.Trainer.save_model", "home.repos.pwc.inspect_result.zjukg_morse.None.trainer.Trainer.before_test_load", "home.repos.pwc.inspect_result.zjukg_morse.None.trainer.Trainer.evaluate_indtest_test_triples", "home.repos.pwc.inspect_result.zjukg_morse.None.trainer.Trainer.get_ent_emb", "home.repos.pwc.inspect_result.zjukg_morse.None.trainer.Trainer.write_training_loss", "home.repos.pwc.inspect_result.zjukg_morse.None.trainer.Trainer.get_loss", "home.repos.pwc.inspect_result.zjukg_morse.None.meta_trainer.MetaTrainer.evaluate_valid_subgraphs", "home.repos.pwc.inspect_result.zjukg_morse.None.trainer.Trainer.write_evaluation_result", "home.repos.pwc.inspect_result.zjukg_morse.None.trainer.Trainer.save_checkpoint", "home.repos.pwc.inspect_result.zjukg_morse.None.utils.get_g_bidir"], ["", "def", "train", "(", "self", ")", ":", "\n", "        ", "step", "=", "0", "\n", "best_step", "=", "0", "\n", "best_eval_rst", "=", "{", "'mrr'", ":", "0", ",", "'hits@1'", ":", "0", ",", "'hits@5'", ":", "0", ",", "'hits@10'", ":", "0", "}", "\n", "bad_count", "=", "0", "\n", "self", ".", "logger", ".", "info", "(", "'start meta-training'", ")", "\n", "\n", "for", "e", "in", "range", "(", "self", ".", "args", ".", "metatrain_num_epoch", ")", ":", "\n", "            ", "for", "batch", "in", "self", ".", "train_subgraph_dataloader", ":", "\n", "                ", "batch_loss", "=", "0", "\n", "\n", "batch_sup_g", "=", "dgl", ".", "batch", "(", "[", "get_g_bidir", "(", "d", "[", "0", "]", ",", "self", ".", "args", ")", "for", "d", "in", "batch", "]", ")", ".", "to", "(", "self", ".", "args", ".", "gpu", ")", "\n", "self", ".", "get_ent_emb", "(", "batch_sup_g", ")", "\n", "sup_g_list", "=", "dgl", ".", "unbatch", "(", "batch_sup_g", ")", "\n", "for", "batch_i", ",", "data", "in", "enumerate", "(", "batch", ")", ":", "\n", "                    ", "que_tri", ",", "que_neg_tail_ent", ",", "que_neg_head_ent", "=", "[", "d", ".", "to", "(", "self", ".", "args", ".", "gpu", ")", "for", "d", "in", "data", "[", "1", ":", "]", "]", "\n", "ent_emb", "=", "sup_g_list", "[", "batch_i", "]", ".", "ndata", "[", "'h'", "]", "\n", "# kge loss", "\n", "loss", "=", "self", ".", "get_loss", "(", "que_tri", ",", "que_neg_tail_ent", ",", "que_neg_head_ent", ",", "ent_emb", ")", "\n", "\n", "batch_loss", "+=", "loss", "\n", "\n", "", "batch_loss", "/=", "len", "(", "batch", ")", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "batch_loss", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "\n", "step", "+=", "1", "\n", "self", ".", "logger", ".", "info", "(", "'step: {} | loss: {:.4f}'", ".", "format", "(", "step", ",", "batch_loss", ".", "item", "(", ")", ")", ")", "\n", "self", ".", "write_training_loss", "(", "batch_loss", ".", "item", "(", ")", ",", "step", ")", "\n", "\n", "if", "step", "%", "self", ".", "args", ".", "metatrain_check_per_step", "==", "0", ":", "\n", "                    ", "eval_res", "=", "self", ".", "evaluate_valid_subgraphs", "(", ")", "\n", "self", ".", "write_evaluation_result", "(", "eval_res", ",", "step", ")", "\n", "\n", "if", "eval_res", "[", "'mrr'", "]", ">", "best_eval_rst", "[", "'mrr'", "]", ":", "\n", "                        ", "best_eval_rst", "=", "eval_res", "\n", "best_step", "=", "step", "\n", "self", ".", "logger", ".", "info", "(", "'best model | mrr {:.4f}'", ".", "format", "(", "best_eval_rst", "[", "'mrr'", "]", ")", ")", "\n", "self", ".", "save_checkpoint", "(", "step", ")", "\n", "bad_count", "=", "0", "\n", "", "else", ":", "\n", "                        ", "bad_count", "+=", "1", "\n", "self", ".", "logger", ".", "info", "(", "'best model is at step {0}, mrr {1:.4f}, bad count {2}'", ".", "format", "(", "\n", "best_step", ",", "best_eval_rst", "[", "'mrr'", "]", ",", "bad_count", ")", ")", "\n", "\n", "", "", "", "", "self", ".", "logger", ".", "info", "(", "'finish meta-training'", ")", "\n", "self", ".", "logger", ".", "info", "(", "'save best model'", ")", "\n", "self", ".", "save_model", "(", "best_step", ")", "\n", "\n", "self", ".", "logger", ".", "info", "(", "'best validation | mrr: {:.4f}, hits@1: {:.4f}, hits@5: {:.4f}, hits@10: {:.4f}'", ".", "format", "(", "\n", "best_eval_rst", "[", "'mrr'", "]", ",", "best_eval_rst", "[", "'hits@1'", "]", ",", "\n", "best_eval_rst", "[", "'hits@5'", "]", ",", "best_eval_rst", "[", "'hits@10'", "]", ")", ")", "\n", "\n", "self", ".", "before_test_load", "(", ")", "\n", "self", ".", "evaluate_indtest_test_triples", "(", "num_cand", "=", "50", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.meta_trainer.MetaTrainer.evaluate_valid_subgraphs": [[89, 114], ["collections.defaultdict", "collections.defaultdict.items", "meta_trainer.MetaTrainer.logger.info", "meta_trainer.MetaTrainer.logger.info", "dgl.batch().to", "meta_trainer.MetaTrainer.get_ent_emb", "dgl.unbatch", "enumerate", "meta_trainer.MetaTrainer.evaluate", "meta_trainer.MetaTrainer.items", "dgl.batch", "utils.get_g_bidir"], "methods", ["home.repos.pwc.inspect_result.zjukg_morse.None.trainer.Trainer.get_ent_emb", "home.repos.pwc.inspect_result.zjukg_morse.None.trainer.Trainer.evaluate", "home.repos.pwc.inspect_result.zjukg_morse.None.utils.get_g_bidir"], ["", "def", "evaluate_valid_subgraphs", "(", "self", ")", ":", "\n", "        ", "all_results", "=", "ddict", "(", "int", ")", "\n", "for", "batch", "in", "self", ".", "valid_subgraph_dataloader", ":", "\n", "            ", "batch_sup_g", "=", "dgl", ".", "batch", "(", "[", "get_g_bidir", "(", "d", "[", "0", "]", ",", "self", ".", "args", ")", "for", "d", "in", "batch", "]", ")", ".", "to", "(", "self", ".", "args", ".", "gpu", ")", "\n", "self", ".", "get_ent_emb", "(", "batch_sup_g", ")", "\n", "sup_g_list", "=", "dgl", ".", "unbatch", "(", "batch_sup_g", ")", "\n", "\n", "for", "batch_i", ",", "data", "in", "enumerate", "(", "batch", ")", ":", "\n", "                ", "que_dataloader", "=", "data", "[", "1", "]", "\n", "ent_emb", "=", "sup_g_list", "[", "batch_i", "]", ".", "ndata", "[", "'h'", "]", "\n", "\n", "results", "=", "self", ".", "evaluate", "(", "ent_emb", ",", "que_dataloader", ")", "\n", "\n", "for", "k", ",", "v", "in", "results", ".", "items", "(", ")", ":", "\n", "                    ", "all_results", "[", "k", "]", "+=", "v", "\n", "\n", "", "", "", "for", "k", ",", "v", "in", "all_results", ".", "items", "(", ")", ":", "\n", "            ", "all_results", "[", "k", "]", "=", "v", "/", "self", ".", "args", ".", "num_valid_subgraph", "\n", "\n", "", "self", ".", "logger", ".", "info", "(", "'valid on valid subgraphs'", ")", "\n", "self", ".", "logger", ".", "info", "(", "'mrr: {:.4f}, hits@1: {:.4f}, hits@5: {:.4f}, hits@10: {:.4f}'", ".", "format", "(", "\n", "all_results", "[", "'mrr'", "]", ",", "all_results", "[", "'hits@1'", "]", ",", "\n", "all_results", "[", "'hits@5'", "]", ",", "all_results", "[", "'hits@10'", "]", ")", ")", "\n", "\n", "return", "all_results", "", "", "", ""]], "home.repos.pwc.inspect_result.zjukg_morse.None.utils.Log.__init__": [[129, 151], ["logging.getLogger", "utils.Log.logger.setLevel", "logging.Formatter", "os.path.join", "logging.FileHandler", "logging.FileHandler.setLevel", "logging.FileHandler.setFormatter", "logging.StreamHandler", "logging.StreamHandler.setLevel", "logging.StreamHandler.setFormatter", "utils.Log.logger.addHandler", "utils.Log.logger.addHandler", "logging.FileHandler.close", "logging.StreamHandler.close"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "log_dir", ",", "name", ")", ":", "\n", "        ", "self", ".", "logger", "=", "logging", ".", "getLogger", "(", "name", ")", "\n", "self", ".", "logger", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "formatter", "=", "logging", ".", "Formatter", "(", "'%(asctime)s | %(name)s | %(message)s'", ",", "\n", "\"%Y-%m-%d %H:%M:%S\"", ")", "\n", "\n", "# file handler", "\n", "log_file", "=", "os", ".", "path", ".", "join", "(", "log_dir", ",", "name", "+", "'.log'", ")", "\n", "fh", "=", "logging", ".", "FileHandler", "(", "log_file", ")", "\n", "fh", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "fh", ".", "setFormatter", "(", "formatter", ")", "\n", "\n", "# console handler", "\n", "sh", "=", "logging", ".", "StreamHandler", "(", ")", "\n", "sh", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "sh", ".", "setFormatter", "(", "formatter", ")", "\n", "\n", "self", ".", "logger", ".", "addHandler", "(", "fh", ")", "\n", "self", ".", "logger", ".", "addHandler", "(", "sh", ")", "\n", "\n", "fh", ".", "close", "(", ")", "\n", "sh", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.utils.Log.get_logger": [[152, 154], ["None"], "methods", ["None"], ["", "def", "get_logger", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "logger", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.utils.FileLog.__init__": [[156, 171], ["logging.getLogger", "utils.FileLog.logger.setLevel", "logging.Formatter", "os.path.join", "logging.FileHandler", "logging.FileHandler.setLevel", "logging.FileHandler.setFormatter", "utils.FileLog.logger.addHandler", "logging.FileHandler.close"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "log_dir", ",", "name", ")", ":", "\n", "        ", "self", ".", "logger", "=", "logging", ".", "getLogger", "(", "name", ")", "\n", "self", ".", "logger", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "formatter", "=", "logging", ".", "Formatter", "(", "'%(asctime)s | %(name)s | %(message)s'", ",", "\n", "\"%Y-%m-%d %H:%M:%S\"", ")", "\n", "\n", "# file handler", "\n", "log_file", "=", "os", ".", "path", ".", "join", "(", "log_dir", ",", "name", "+", "'.log'", ")", "\n", "fh", "=", "logging", ".", "FileHandler", "(", "log_file", ")", "\n", "fh", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "fh", ".", "setFormatter", "(", "formatter", ")", "\n", "\n", "self", ".", "logger", ".", "addHandler", "(", "fh", ")", "\n", "\n", "fh", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.utils.FileLog.get_logger": [[172, 174], ["None"], "methods", ["None"], ["", "def", "get_logger", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "logger", "", "", "", ""]], "home.repos.pwc.inspect_result.zjukg_morse.None.utils.get_g": [[11, 16], ["numpy.array", "dgl.graph", "torch.tensor"], "function", ["None"], ["def", "get_g", "(", "tri_list", ")", ":", "\n", "    ", "triples", "=", "np", ".", "array", "(", "tri_list", ")", "\n", "g", "=", "dgl", ".", "graph", "(", "(", "triples", "[", ":", ",", "0", "]", ".", "T", ",", "triples", "[", ":", ",", "2", "]", ".", "T", ")", ")", "\n", "g", ".", "edata", "[", "'rel'", "]", "=", "torch", ".", "tensor", "(", "triples", "[", ":", ",", "1", "]", ".", "T", ")", "\n", "return", "g", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.utils.get_g_bidir": [[18, 23], ["dgl.graph", "torch.cat", "torch.cat", "torch.cat"], "function", ["None"], ["", "def", "get_g_bidir", "(", "triples", ",", "args", ")", ":", "\n", "    ", "g", "=", "dgl", ".", "graph", "(", "(", "torch", ".", "cat", "(", "[", "triples", "[", ":", ",", "0", "]", ".", "T", ",", "triples", "[", ":", ",", "2", "]", ".", "T", "]", ")", ",", "\n", "torch", ".", "cat", "(", "[", "triples", "[", ":", ",", "2", "]", ".", "T", ",", "triples", "[", ":", ",", "0", "]", ".", "T", "]", ")", ")", ")", "\n", "g", ".", "edata", "[", "'type'", "]", "=", "torch", ".", "cat", "(", "[", "triples", "[", ":", ",", "1", "]", ".", "T", ",", "triples", "[", ":", ",", "1", "]", ".", "T", "+", "args", ".", "num_rel", "]", ")", "\n", "return", "g", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.utils.get_hr2t_rt2h": [[25, 34], ["collections.defaultdict", "collections.defaultdict", "hr2t[].append", "rt2h[].append"], "function", ["None"], ["", "def", "get_hr2t_rt2h", "(", "tris", ")", ":", "\n", "    ", "hr2t", "=", "ddict", "(", "list", ")", "\n", "rt2h", "=", "ddict", "(", "list", ")", "\n", "for", "tri", "in", "tris", ":", "\n", "        ", "h", ",", "r", ",", "t", "=", "tri", "\n", "hr2t", "[", "(", "h", ",", "r", ")", "]", ".", "append", "(", "t", ")", "\n", "rt2h", "[", "(", "r", ",", "t", ")", "]", ".", "append", "(", "h", ")", "\n", "\n", "", "return", "hr2t", ",", "rt2h", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.utils.get_hr2t_rt2h_sup_que": [[35, 56], ["collections.defaultdict", "collections.defaultdict", "dict", "dict", "hr2t[].append", "rt2h[].append", "hr2t[].append", "rt2h[].append"], "function", ["None"], ["", "def", "get_hr2t_rt2h_sup_que", "(", "sup_tris", ",", "que_tris", ")", ":", "\n", "    ", "hr2t", "=", "ddict", "(", "list", ")", "\n", "rt2h", "=", "ddict", "(", "list", ")", "\n", "for", "tri", "in", "sup_tris", ":", "\n", "        ", "h", ",", "r", ",", "t", "=", "tri", "\n", "hr2t", "[", "(", "h", ",", "r", ")", "]", ".", "append", "(", "t", ")", "\n", "rt2h", "[", "(", "r", ",", "t", ")", "]", ".", "append", "(", "h", ")", "\n", "\n", "", "for", "tri", "in", "que_tris", ":", "\n", "        ", "h", ",", "r", ",", "t", "=", "tri", "\n", "hr2t", "[", "(", "h", ",", "r", ")", "]", ".", "append", "(", "t", ")", "\n", "rt2h", "[", "(", "r", ",", "t", ")", "]", ".", "append", "(", "h", ")", "\n", "\n", "", "que_hr2t", "=", "dict", "(", ")", "\n", "que_rt2h", "=", "dict", "(", ")", "\n", "for", "tri", "in", "que_tris", ":", "\n", "        ", "h", ",", "r", ",", "t", "=", "tri", "\n", "que_hr2t", "[", "(", "h", ",", "r", ")", "]", "=", "hr2t", "[", "(", "h", ",", "r", ")", "]", "\n", "que_rt2h", "[", "(", "r", ",", "t", ")", "]", "=", "rt2h", "[", "(", "r", ",", "t", ")", "]", "\n", "\n", "", "return", "que_hr2t", ",", "que_rt2h", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.utils.get_indtest_test_dataset_and_train_g": [[58, 70], ["len", "utils.get_hr2t_rt2h", "KGEEvalDataset", "utils.get_g_bidir", "pickle.load", "numpy.unique", "torch.LongTensor", "open", "numpy.array"], "function", ["home.repos.pwc.inspect_result.zjukg_morse.None.utils.get_hr2t_rt2h", "home.repos.pwc.inspect_result.zjukg_morse.None.utils.get_g_bidir"], ["", "def", "get_indtest_test_dataset_and_train_g", "(", "args", ")", ":", "\n", "    ", "data", "=", "pickle", ".", "load", "(", "open", "(", "args", ".", "data_path", ",", "'rb'", ")", ")", "[", "'ind_test_graph'", "]", "\n", "num_ent", "=", "len", "(", "np", ".", "unique", "(", "np", ".", "array", "(", "data", "[", "'train'", "]", ")", "[", ":", ",", "[", "0", ",", "2", "]", "]", ")", ")", "\n", "\n", "hr2t", ",", "rt2h", "=", "get_hr2t_rt2h", "(", "data", "[", "'train'", "]", ")", "\n", "\n", "from", "datasets", "import", "KGEEvalDataset", "\n", "test_dataset", "=", "KGEEvalDataset", "(", "args", ",", "data", "[", "'test'", "]", ",", "num_ent", ",", "hr2t", ",", "rt2h", ")", "\n", "\n", "g", "=", "get_g_bidir", "(", "torch", ".", "LongTensor", "(", "data", "[", "'train'", "]", ")", ",", "args", ")", "\n", "\n", "return", "test_dataset", ",", "g", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.utils.get_posttrain_train_valid_dataset": [[72, 85], ["len", "utils.get_hr2t_rt2h", "KGETrainDataset", "KGEEvalDataset", "pickle.load", "numpy.unique", "open", "numpy.array"], "function", ["home.repos.pwc.inspect_result.zjukg_morse.None.utils.get_hr2t_rt2h"], ["", "def", "get_posttrain_train_valid_dataset", "(", "args", ")", ":", "\n", "    ", "data", "=", "pickle", ".", "load", "(", "open", "(", "args", ".", "data_path", ",", "'rb'", ")", ")", "[", "'ind_test_graph'", "]", "\n", "num_ent", "=", "len", "(", "np", ".", "unique", "(", "np", ".", "array", "(", "data", "[", "'train'", "]", ")", "[", ":", ",", "[", "0", ",", "2", "]", "]", ")", ")", "\n", "\n", "hr2t", ",", "rt2h", "=", "get_hr2t_rt2h", "(", "data", "[", "'train'", "]", ")", "\n", "\n", "from", "datasets", "import", "KGETrainDataset", ",", "KGEEvalDataset", "\n", "train_dataset", "=", "KGETrainDataset", "(", "args", ",", "data", "[", "'train'", "]", ",", "\n", "num_ent", ",", "args", ".", "posttrain_num_neg", ",", "hr2t", ",", "rt2h", ")", "\n", "\n", "valid_dataset", "=", "KGEEvalDataset", "(", "args", ",", "data", "[", "'valid'", "]", ",", "num_ent", ",", "hr2t", ",", "rt2h", ")", "\n", "\n", "return", "train_dataset", ",", "valid_dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.utils.get_num_rel": [[87, 92], ["pickle.load", "len", "open", "numpy.unique", "numpy.array"], "function", ["None"], ["", "def", "get_num_rel", "(", "args", ")", ":", "\n", "    ", "data", "=", "pickle", ".", "load", "(", "open", "(", "args", ".", "data_path", ",", "'rb'", ")", ")", "\n", "num_rel", "=", "len", "(", "np", ".", "unique", "(", "np", ".", "array", "(", "data", "[", "'train_graph'", "]", "[", "'train'", "]", ")", "[", ":", ",", "1", "]", ")", ")", "\n", "\n", "return", "num_rel", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.utils.serialize": [[94, 96], ["pickle.dumps"], "function", ["None"], ["", "def", "serialize", "(", "data", ")", ":", "\n", "    ", "return", "pickle", ".", "dumps", "(", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.utils.deserialize": [[98, 101], ["pickle.loads"], "function", ["None"], ["", "def", "deserialize", "(", "data", ")", ":", "\n", "    ", "data_tuple", "=", "pickle", ".", "loads", "(", "data", ")", "\n", "return", "data_tuple", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.utils.set_seed": [[103, 112], ["dgl.seed", "dgl.random.seed", "random.seed", "numpy.random.seed", "torch.manual_seed", "torch.cuda.manual_seed_all"], "function", ["None"], ["", "def", "set_seed", "(", "seed", ")", ":", "\n", "    ", "dgl", ".", "seed", "(", "seed", ")", "\n", "dgl", ".", "random", ".", "seed", "(", "seed", ")", "\n", "\n", "random", ".", "seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "seed", ")", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.utils.init_dir": [[114, 126], ["os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs"], "function", ["None"], ["", "def", "init_dir", "(", "args", ")", ":", "\n", "# state", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "state_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "state_dir", ")", "\n", "\n", "# tensorboard log", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "tb_log_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "tb_log_dir", ")", "\n", "\n", "# logging", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "log_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "log_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.subgraph.gen_subgraph_datasets": [[12, 35], ["print", "pickle.load", "utils.get_g", "lmdb.open", "lmdb.open.open_db", "lmdb.open.open_db", "tqdm.tqdm", "tqdm.tqdm", "open", "subgraph.get_average_subgraph_size", "range", "subgraph.sample_one_subgraph", "range", "subgraph.sample_one_subgraph", "lmdb.open.begin", "txn.put", "lmdb.open.begin", "txn.put", "utils.serialize", "utils.serialize"], "function", ["home.repos.pwc.inspect_result.zjukg_morse.None.utils.get_g", "home.repos.pwc.inspect_result.zjukg_morse.None.subgraph.get_average_subgraph_size", "home.repos.pwc.inspect_result.zjukg_morse.None.subgraph.sample_one_subgraph", "home.repos.pwc.inspect_result.zjukg_morse.None.subgraph.sample_one_subgraph", "home.repos.pwc.inspect_result.zjukg_morse.None.utils.serialize", "home.repos.pwc.inspect_result.zjukg_morse.None.utils.serialize"], ["def", "gen_subgraph_datasets", "(", "args", ")", ":", "\n", "    ", "print", "(", "f'-----There is no sub-graphs for {args.data_name}, so start generating sub-graphs before meta-training!-----'", ")", "\n", "data", "=", "pickle", ".", "load", "(", "open", "(", "args", ".", "data_path", ",", "'rb'", ")", ")", "\n", "train_g", "=", "get_g", "(", "data", "[", "'train_graph'", "]", "[", "'train'", "]", "+", "data", "[", "'train_graph'", "]", "[", "'valid'", "]", "\n", "+", "data", "[", "'train_graph'", "]", "[", "'test'", "]", ")", "\n", "\n", "BYTES_PER_DATUM", "=", "get_average_subgraph_size", "(", "args", ",", "args", ".", "num_sample_for_estimate_size", ",", "train_g", ")", "*", "2", "\n", "map_size", "=", "(", "args", ".", "num_train_subgraph", "+", "args", ".", "num_valid_subgraph", ")", "*", "BYTES_PER_DATUM", "\n", "env", "=", "lmdb", ".", "open", "(", "args", ".", "db_path", ",", "map_size", "=", "map_size", ",", "max_dbs", "=", "2", ")", "\n", "train_subgraphs_db", "=", "env", ".", "open_db", "(", "\"train_subgraphs\"", ".", "encode", "(", ")", ")", "\n", "valid_subgraphs_db", "=", "env", ".", "open_db", "(", "\"valid_subgraphs\"", ".", "encode", "(", ")", ")", "\n", "\n", "for", "idx", "in", "tqdm", "(", "range", "(", "args", ".", "num_train_subgraph", ")", ")", ":", "\n", "        ", "str_id", "=", "'{:08}'", ".", "format", "(", "idx", ")", ".", "encode", "(", "'ascii'", ")", "\n", "datum", "=", "sample_one_subgraph", "(", "args", ",", "train_g", ")", "\n", "with", "env", ".", "begin", "(", "write", "=", "True", ",", "db", "=", "train_subgraphs_db", ")", "as", "txn", ":", "\n", "            ", "txn", ".", "put", "(", "str_id", ",", "serialize", "(", "datum", ")", ")", "\n", "\n", "", "", "for", "idx", "in", "tqdm", "(", "range", "(", "args", ".", "num_valid_subgraph", ")", ")", ":", "\n", "        ", "str_id", "=", "'{:08}'", ".", "format", "(", "idx", ")", ".", "encode", "(", "'ascii'", ")", "\n", "datum", "=", "sample_one_subgraph", "(", "args", ",", "train_g", ")", "\n", "with", "env", ".", "begin", "(", "write", "=", "True", ",", "db", "=", "valid_subgraphs_db", ")", "as", "txn", ":", "\n", "            ", "txn", ".", "put", "(", "str_id", ",", "serialize", "(", "datum", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.subgraph.sample_one_subgraph": [[37, 110], ["dgl.graph", "utils.get_hr2t_rt2h_sup_que", "torch.stack", "sub_tri.T.tolist.T.tolist", "random.shuffle", "collections.defaultdict", "collections.defaultdict", "dict", "enumerate", "sup_tris.extend", "torch.cat", "torch.cat", "range", "dgl.node_subgraph", "triples_reidx.append", "len", "int", "dgl.sampling.random_walk", "sel_nodes.extend", "dgl.node_subgraph.num_nodes", "dict.keys", "dict.keys", "que_tris.append", "sup_tris.append", "len", "int", "numpy.arange", "numpy.random.choice().repeat", "numpy.unique", "list", "dgl.node_subgraph.edges", "dgl.node_subgraph.edges", "len", "bg_train_g.edges", "bg_train_g.edges", "bg_train_g.edges", "bg_train_g.edges", "bg_train_g.num_nodes", "rw.reshape", "numpy.unique", "list", "len", "numpy.random.choice", "numpy.unique"], "function", ["home.repos.pwc.inspect_result.zjukg_morse.None.utils.get_hr2t_rt2h_sup_que"], ["", "", "", "def", "sample_one_subgraph", "(", "args", ",", "bg_train_g", ")", ":", "\n", "# get graph with bi-direction", "\n", "    ", "bg_train_g_undir", "=", "dgl", ".", "graph", "(", "(", "torch", ".", "cat", "(", "[", "bg_train_g", ".", "edges", "(", ")", "[", "0", "]", ",", "bg_train_g", ".", "edges", "(", ")", "[", "1", "]", "]", ")", ",", "\n", "torch", ".", "cat", "(", "[", "bg_train_g", ".", "edges", "(", ")", "[", "1", "]", ",", "bg_train_g", ".", "edges", "(", ")", "[", "0", "]", "]", ")", ")", ")", "\n", "\n", "# induce sub-graph by sampled nodes", "\n", "while", "True", ":", "\n", "        ", "while", "True", ":", "\n", "            ", "sel_nodes", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "args", ".", "rw_0", ")", ":", "\n", "                ", "if", "i", "==", "0", ":", "\n", "                    ", "cand_nodes", "=", "np", ".", "arange", "(", "bg_train_g", ".", "num_nodes", "(", ")", ")", "\n", "", "else", ":", "\n", "                    ", "cand_nodes", "=", "sel_nodes", "\n", "", "rw", ",", "_", "=", "dgl", ".", "sampling", ".", "random_walk", "(", "bg_train_g_undir", ",", "\n", "np", ".", "random", ".", "choice", "(", "cand_nodes", ",", "1", ",", "replace", "=", "False", ")", ".", "repeat", "(", "args", ".", "rw_1", ")", ",", "\n", "length", "=", "args", ".", "rw_2", ")", "\n", "sel_nodes", ".", "extend", "(", "np", ".", "unique", "(", "rw", ".", "reshape", "(", "-", "1", ")", ")", ")", "\n", "sel_nodes", "=", "list", "(", "np", ".", "unique", "(", "sel_nodes", ")", ")", "if", "-", "1", "not", "in", "sel_nodes", "else", "list", "(", "np", ".", "unique", "(", "sel_nodes", ")", ")", "[", "1", ":", "]", "\n", "", "sub_g", "=", "dgl", ".", "node_subgraph", "(", "bg_train_g", ",", "sel_nodes", ")", "\n", "\n", "if", "sub_g", ".", "num_nodes", "(", ")", ">=", "50", ":", "\n", "                ", "break", "\n", "\n", "", "", "sub_tri", "=", "torch", ".", "stack", "(", "[", "sub_g", ".", "edges", "(", ")", "[", "0", "]", ",", "\n", "sub_g", ".", "edata", "[", "'rel'", "]", ",", "\n", "sub_g", ".", "edges", "(", ")", "[", "1", "]", "]", ")", "\n", "sub_tri", "=", "sub_tri", ".", "T", ".", "tolist", "(", ")", "\n", "random", ".", "shuffle", "(", "sub_tri", ")", "\n", "\n", "ent_freq", "=", "ddict", "(", "int", ")", "\n", "rel_freq", "=", "ddict", "(", "int", ")", "\n", "triples_reidx", "=", "[", "]", "\n", "ent_reidx", "=", "dict", "(", ")", "\n", "entidx", "=", "0", "\n", "for", "tri", "in", "sub_tri", ":", "\n", "            ", "h", ",", "r", ",", "t", "=", "tri", "\n", "if", "h", "not", "in", "ent_reidx", ".", "keys", "(", ")", ":", "\n", "                ", "ent_reidx", "[", "h", "]", "=", "entidx", "\n", "entidx", "+=", "1", "\n", "", "if", "t", "not", "in", "ent_reidx", ".", "keys", "(", ")", ":", "\n", "                ", "ent_reidx", "[", "t", "]", "=", "entidx", "\n", "entidx", "+=", "1", "\n", "", "ent_freq", "[", "ent_reidx", "[", "h", "]", "]", "+=", "1", "\n", "ent_freq", "[", "ent_reidx", "[", "t", "]", "]", "+=", "1", "\n", "rel_freq", "[", "r", "]", "+=", "1", "\n", "triples_reidx", ".", "append", "(", "[", "ent_reidx", "[", "h", "]", ",", "r", ",", "ent_reidx", "[", "t", "]", "]", ")", "\n", "\n", "# randomly get query triples", "\n", "", "que_tris", "=", "[", "]", "\n", "sup_tris", "=", "[", "]", "\n", "for", "idx", ",", "tri", "in", "enumerate", "(", "triples_reidx", ")", ":", "\n", "            ", "h", ",", "r", ",", "t", "=", "tri", "\n", "if", "ent_freq", "[", "h", "]", ">", "2", "and", "ent_freq", "[", "t", "]", ">", "2", "and", "rel_freq", "[", "r", "]", ">", "2", ":", "\n", "                ", "que_tris", ".", "append", "(", "tri", ")", "\n", "ent_freq", "[", "h", "]", "-=", "1", "\n", "ent_freq", "[", "t", "]", "-=", "1", "\n", "rel_freq", "[", "r", "]", "-=", "1", "\n", "", "else", ":", "\n", "                ", "sup_tris", ".", "append", "(", "tri", ")", "\n", "\n", "", "if", "len", "(", "que_tris", ")", ">=", "int", "(", "len", "(", "triples_reidx", ")", "*", "0.1", ")", ":", "\n", "                ", "break", "\n", "\n", "", "", "sup_tris", ".", "extend", "(", "triples_reidx", "[", "idx", "+", "1", ":", "]", ")", "\n", "\n", "if", "len", "(", "que_tris", ")", ">=", "int", "(", "len", "(", "triples_reidx", ")", "*", "0.05", ")", ":", "\n", "            ", "break", "\n", "\n", "# hr2t, rt2h", "\n", "", "", "hr2t", ",", "rt2h", "=", "get_hr2t_rt2h_sup_que", "(", "sup_tris", ",", "que_tris", ")", "\n", "\n", "return", "sup_tris", ",", "que_tris", ",", "hr2t", ",", "rt2h", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.subgraph.get_average_subgraph_size": [[112, 118], ["range", "subgraph.sample_one_subgraph", "len", "utils.serialize"], "function", ["home.repos.pwc.inspect_result.zjukg_morse.None.subgraph.sample_one_subgraph", "home.repos.pwc.inspect_result.zjukg_morse.None.utils.serialize"], ["", "def", "get_average_subgraph_size", "(", "args", ",", "sample_size", ",", "bg_train_g", ")", ":", "\n", "    ", "total_size", "=", "0", "\n", "for", "i", "in", "range", "(", "sample_size", ")", ":", "\n", "        ", "datum", "=", "sample_one_subgraph", "(", "args", ",", "bg_train_g", ")", "\n", "total_size", "+=", "len", "(", "serialize", "(", "datum", ")", ")", "\n", "", "return", "total_size", "/", "sample_size", "", "", ""]], "home.repos.pwc.inspect_result.zjukg_morse.None.pre_process.reidx": [[4, 22], ["dict", "dict", "tri_reidx.append", "dict", "dict", "dict.keys", "dict.keys", "dict.keys"], "function", ["None"], ["def", "reidx", "(", "tri", ")", ":", "\n", "    ", "tri_reidx", "=", "[", "]", "\n", "ent_reidx", "=", "dict", "(", ")", "\n", "entidx", "=", "0", "\n", "rel_reidx", "=", "dict", "(", ")", "\n", "relidx", "=", "0", "\n", "for", "h", ",", "r", ",", "t", "in", "tri", ":", "\n", "        ", "if", "h", "not", "in", "ent_reidx", ".", "keys", "(", ")", ":", "\n", "            ", "ent_reidx", "[", "h", "]", "=", "entidx", "\n", "entidx", "+=", "1", "\n", "", "if", "t", "not", "in", "ent_reidx", ".", "keys", "(", ")", ":", "\n", "            ", "ent_reidx", "[", "t", "]", "=", "entidx", "\n", "entidx", "+=", "1", "\n", "", "if", "r", "not", "in", "rel_reidx", ".", "keys", "(", ")", ":", "\n", "            ", "rel_reidx", "[", "r", "]", "=", "relidx", "\n", "relidx", "+=", "1", "\n", "", "tri_reidx", ".", "append", "(", "[", "ent_reidx", "[", "h", "]", ",", "rel_reidx", "[", "r", "]", ",", "ent_reidx", "[", "t", "]", "]", ")", "\n", "", "return", "tri_reidx", ",", "dict", "(", "rel_reidx", ")", ",", "dict", "(", "ent_reidx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.pre_process.reidx_withr": [[24, 37], ["dict", "tri_reidx.append", "dict", "dict.keys", "dict.keys"], "function", ["None"], ["", "def", "reidx_withr", "(", "tri", ",", "rel_reidx", ")", ":", "\n", "    ", "tri_reidx", "=", "[", "]", "\n", "ent_reidx", "=", "dict", "(", ")", "\n", "entidx", "=", "0", "\n", "for", "h", ",", "r", ",", "t", "in", "tri", ":", "\n", "        ", "if", "h", "not", "in", "ent_reidx", ".", "keys", "(", ")", ":", "\n", "            ", "ent_reidx", "[", "h", "]", "=", "entidx", "\n", "entidx", "+=", "1", "\n", "", "if", "t", "not", "in", "ent_reidx", ".", "keys", "(", ")", ":", "\n", "            ", "ent_reidx", "[", "t", "]", "=", "entidx", "\n", "entidx", "+=", "1", "\n", "", "tri_reidx", ".", "append", "(", "[", "ent_reidx", "[", "h", "]", ",", "rel_reidx", "[", "r", "]", ",", "ent_reidx", "[", "t", "]", "]", ")", "\n", "", "return", "tri_reidx", ",", "dict", "(", "ent_reidx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.pre_process.reidx_withr_ande": [[39, 44], ["tri_reidx.append"], "function", ["None"], ["", "def", "reidx_withr_ande", "(", "tri", ",", "rel_reidx", ",", "ent_reidx", ")", ":", "\n", "    ", "tri_reidx", "=", "[", "]", "\n", "for", "h", ",", "r", ",", "t", "in", "tri", ":", "\n", "        ", "tri_reidx", ".", "append", "(", "[", "ent_reidx", "[", "h", "]", ",", "rel_reidx", "[", "r", "]", ",", "ent_reidx", "[", "t", "]", "]", ")", "\n", "", "return", "tri_reidx", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.pre_process.data2pkl": [[46, 87], ["open", "train_tri.extend", "open.close", "open", "reidx_withr_ande.extend", "open.close", "open", "reidx_withr_ande.extend", "open.close", "pre_process.reidx", "pre_process.reidx_withr_ande", "pre_process.reidx_withr_ande", "open", "open.close", "open", "open.close", "open", "open.close", "pre_process.reidx_withr", "pre_process.reidx_withr_ande", "pre_process.reidx_withr_ande", "pickle.dump", "l.strip().split", "l.strip().split", "l.strip().split", "open", "l.strip().split", "l.strip().split", "l.strip().split", "open.readlines", "open.readlines", "open.readlines", "open.readlines", "open.readlines", "open.readlines", "l.strip", "l.strip", "l.strip", "l.strip", "l.strip", "l.strip"], "function", ["home.repos.pwc.inspect_result.zjukg_morse.None.pre_process.reidx", "home.repos.pwc.inspect_result.zjukg_morse.None.pre_process.reidx_withr_ande", "home.repos.pwc.inspect_result.zjukg_morse.None.pre_process.reidx_withr_ande", "home.repos.pwc.inspect_result.zjukg_morse.None.pre_process.reidx_withr", "home.repos.pwc.inspect_result.zjukg_morse.None.pre_process.reidx_withr_ande", "home.repos.pwc.inspect_result.zjukg_morse.None.pre_process.reidx_withr_ande"], ["", "def", "data2pkl", "(", "data_name", ")", ":", "\n", "    ", "train_tri", "=", "[", "]", "\n", "file", "=", "open", "(", "'../MetaEmbClean/data/{}/train.txt'", ".", "format", "(", "data_name", ")", ")", "\n", "train_tri", ".", "extend", "(", "[", "l", ".", "strip", "(", ")", ".", "split", "(", ")", "for", "l", "in", "file", ".", "readlines", "(", ")", "]", ")", "\n", "file", ".", "close", "(", ")", "\n", "\n", "valid_tri", "=", "[", "]", "\n", "file", "=", "open", "(", "'../MetaEmbClean/data/{}/valid.txt'", ".", "format", "(", "data_name", ")", ")", "\n", "valid_tri", ".", "extend", "(", "[", "l", ".", "strip", "(", ")", ".", "split", "(", ")", "for", "l", "in", "file", ".", "readlines", "(", ")", "]", ")", "\n", "file", ".", "close", "(", ")", "\n", "\n", "test_tri", "=", "[", "]", "\n", "file", "=", "open", "(", "'../MetaEmbClean/data/{}/test.txt'", ".", "format", "(", "data_name", ")", ")", "\n", "test_tri", ".", "extend", "(", "[", "l", ".", "strip", "(", ")", ".", "split", "(", ")", "for", "l", "in", "file", ".", "readlines", "(", ")", "]", ")", "\n", "file", ".", "close", "(", ")", "\n", "\n", "train_tri", ",", "fix_rel_reidx", ",", "ent_reidx", "=", "reidx", "(", "train_tri", ")", "\n", "valid_tri", "=", "reidx_withr_ande", "(", "valid_tri", ",", "fix_rel_reidx", ",", "ent_reidx", ")", "\n", "test_tri", "=", "reidx_withr_ande", "(", "test_tri", ",", "fix_rel_reidx", ",", "ent_reidx", ")", "\n", "\n", "\n", "file", "=", "open", "(", "'../MetaEmbClean/data/{}_ind/train.txt'", ".", "format", "(", "data_name", ")", ")", "\n", "ind_train_tri", "=", "(", "[", "l", ".", "strip", "(", ")", ".", "split", "(", ")", "for", "l", "in", "file", ".", "readlines", "(", ")", "]", ")", "\n", "file", ".", "close", "(", ")", "\n", "\n", "file", "=", "open", "(", "'../MetaEmbClean/data/{}_ind/valid.txt'", ".", "format", "(", "data_name", ")", ")", "\n", "ind_valid_tri", "=", "(", "[", "l", ".", "strip", "(", ")", ".", "split", "(", ")", "for", "l", "in", "file", ".", "readlines", "(", ")", "]", ")", "\n", "file", ".", "close", "(", ")", "\n", "\n", "file", "=", "open", "(", "'../MetaEmbClean/data/{}_ind/test.txt'", ".", "format", "(", "data_name", ")", ")", "\n", "ind_test_tri", "=", "(", "[", "l", ".", "strip", "(", ")", ".", "split", "(", ")", "for", "l", "in", "file", ".", "readlines", "(", ")", "]", ")", "\n", "file", ".", "close", "(", ")", "\n", "\n", "test_train_tri", ",", "ent_reidx_ind", "=", "reidx_withr", "(", "ind_train_tri", ",", "fix_rel_reidx", ")", "\n", "test_valid_tri", "=", "reidx_withr_ande", "(", "ind_valid_tri", ",", "fix_rel_reidx", ",", "ent_reidx_ind", ")", "\n", "test_test_tri", "=", "reidx_withr_ande", "(", "ind_test_tri", ",", "fix_rel_reidx", ",", "ent_reidx_ind", ")", "\n", "\n", "save_data", "=", "{", "'train_graph'", ":", "{", "'train'", ":", "train_tri", ",", "'valid'", ":", "valid_tri", ",", "'test'", ":", "test_tri", "}", ",", "\n", "'ind_test_graph'", ":", "{", "'train'", ":", "test_train_tri", ",", "'valid'", ":", "test_valid_tri", ",", "'test'", ":", "test_test_tri", "}", "}", "\n", "\n", "pickle", ".", "dump", "(", "save_data", ",", "open", "(", "f'./data/{data_name}.pkl'", ",", "'wb'", ")", ")", "", "", ""]], "home.repos.pwc.inspect_result.zjukg_morse.None.datasets.TrainSubgraphDataset.__init__": [[9, 13], ["lmdb.open", "datasets.TrainSubgraphDataset.env.open_db"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "env", "=", "lmdb", ".", "open", "(", "args", ".", "db_path", ",", "readonly", "=", "True", ",", "max_dbs", "=", "5", ",", "lock", "=", "False", ")", "\n", "self", ".", "subgraphs_db", "=", "self", ".", "env", ".", "open_db", "(", "\"train_subgraphs\"", ".", "encode", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.datasets.TrainSubgraphDataset.__len__": [[14, 16], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "args", ".", "num_train_subgraph", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.datasets.TrainSubgraphDataset.collate_fn": [[17, 20], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "collate_fn", "(", "data", ")", ":", "\n", "        ", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.datasets.TrainSubgraphDataset.__getitem__": [[21, 36], ["len", "datasets.TrainSubgraphDataset.env.begin", "utils.deserialize", "numpy.unique", "numpy.random.choice", "numpy.random.choice", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "txn.get", "numpy.delete", "numpy.delete", "numpy.array", "numpy.arange", "numpy.arange"], "methods", ["home.repos.pwc.inspect_result.zjukg_morse.None.utils.deserialize"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "with", "self", ".", "env", ".", "begin", "(", "db", "=", "self", ".", "subgraphs_db", ")", "as", "txn", ":", "\n", "            ", "str_id", "=", "'{:08}'", ".", "format", "(", "idx", ")", ".", "encode", "(", "'ascii'", ")", "\n", "sup_tri", ",", "que_tri", ",", "hr2t", ",", "rt2h", "=", "deserialize", "(", "txn", ".", "get", "(", "str_id", ")", ")", "\n", "\n", "", "nentity", "=", "len", "(", "np", ".", "unique", "(", "np", ".", "array", "(", "sup_tri", ")", "[", ":", ",", "[", "0", ",", "2", "]", "]", ")", ")", "\n", "\n", "que_neg_tail_ent", "=", "[", "np", ".", "random", ".", "choice", "(", "np", ".", "delete", "(", "np", ".", "arange", "(", "nentity", ")", ",", "hr2t", "[", "(", "h", ",", "r", ")", "]", ")", ",", "\n", "self", ".", "args", ".", "metatrain_num_neg", ")", "for", "h", ",", "r", ",", "t", "in", "que_tri", "]", "\n", "\n", "que_neg_head_ent", "=", "[", "np", ".", "random", ".", "choice", "(", "np", ".", "delete", "(", "np", ".", "arange", "(", "nentity", ")", ",", "rt2h", "[", "(", "r", ",", "t", ")", "]", ")", ",", "\n", "self", ".", "args", ".", "metatrain_num_neg", ")", "for", "h", ",", "r", ",", "t", "in", "que_tri", "]", "\n", "\n", "return", "torch", ".", "tensor", "(", "sup_tri", ")", ",", "torch", ".", "tensor", "(", "que_tri", ")", ",", "torch", ".", "tensor", "(", "que_neg_tail_ent", ")", ",", "torch", ".", "tensor", "(", "que_neg_head_ent", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.datasets.ValidSubgraphDataset.__init__": [[39, 43], ["lmdb.open", "datasets.ValidSubgraphDataset.env.open_db"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "env", "=", "lmdb", ".", "open", "(", "args", ".", "db_path", ",", "readonly", "=", "True", ",", "max_dbs", "=", "5", ",", "lock", "=", "False", ")", "\n", "self", ".", "subgraphs_db", "=", "self", ".", "env", ".", "open_db", "(", "\"valid_subgraphs\"", ".", "encode", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.datasets.ValidSubgraphDataset.__len__": [[44, 48], ["datasets.ValidSubgraphDataset.env.begin", "datasets.ValidSubgraphDataset.stat"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "txn", "=", "self", ".", "env", ".", "begin", "(", "db", "=", "self", ".", "subgraphs_db", ")", "\n", "num", "=", "txn", ".", "stat", "(", ")", "[", "'entries'", "]", "\n", "return", "num", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.datasets.ValidSubgraphDataset.collate_fn": [[49, 52], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "collate_fn", "(", "data", ")", ":", "\n", "        ", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.datasets.ValidSubgraphDataset.__getitem__": [[53, 65], ["len", "datasets.KGEEvalDataset", "torch.utils.data.DataLoader", "datasets.ValidSubgraphDataset.env.begin", "utils.deserialize", "numpy.unique", "torch.tensor", "txn.get", "len", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.zjukg_morse.None.utils.deserialize"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "with", "self", ".", "env", ".", "begin", "(", "db", "=", "self", ".", "subgraphs_db", ")", "as", "txn", ":", "\n", "            ", "str_id", "=", "'{:08}'", ".", "format", "(", "idx", ")", ".", "encode", "(", "'ascii'", ")", "\n", "sup_tri", ",", "que_tri", ",", "hr2t", ",", "rt2h", "=", "deserialize", "(", "txn", ".", "get", "(", "str_id", ")", ")", "\n", "\n", "", "nentity", "=", "len", "(", "np", ".", "unique", "(", "np", ".", "array", "(", "sup_tri", ")", "[", ":", ",", "[", "0", ",", "2", "]", "]", ")", ")", "\n", "\n", "que_dataset", "=", "KGEEvalDataset", "(", "self", ".", "args", ",", "que_tri", ",", "nentity", ",", "hr2t", ",", "rt2h", ")", "\n", "que_dataloader", "=", "DataLoader", "(", "que_dataset", ",", "batch_size", "=", "len", "(", "que_tri", ")", ",", "\n", "collate_fn", "=", "KGEEvalDataset", ".", "collate_fn", ")", "\n", "\n", "return", "torch", ".", "tensor", "(", "sup_tri", ")", ",", "que_dataloader", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.datasets.KGETrainDataset.__init__": [[68, 75], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "train_triples", ",", "num_ent", ",", "num_neg", ",", "hr2t", ",", "rt2h", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "triples", "=", "train_triples", "\n", "self", ".", "num_ent", "=", "num_ent", "\n", "self", ".", "num_neg", "=", "num_neg", "\n", "self", ".", "hr2t", "=", "hr2t", "\n", "self", ".", "rt2h", "=", "rt2h", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.datasets.KGETrainDataset.__len__": [[76, 78], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "triples", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.datasets.KGETrainDataset.__getitem__": [[79, 94], ["numpy.random.choice", "numpy.random.choice", "torch.LongTensor", "torch.from_numpy", "torch.from_numpy", "numpy.delete", "numpy.delete", "numpy.arange", "numpy.arange"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "pos_triple", "=", "self", ".", "triples", "[", "idx", "]", "\n", "h", ",", "r", ",", "t", "=", "pos_triple", "\n", "\n", "neg_tail_ent", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "delete", "(", "np", ".", "arange", "(", "self", ".", "num_ent", ")", ",", "self", ".", "hr2t", "[", "(", "h", ",", "r", ")", "]", ")", ",", "\n", "self", ".", "num_neg", ")", "\n", "\n", "neg_head_ent", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "delete", "(", "np", ".", "arange", "(", "self", ".", "num_ent", ")", ",", "self", ".", "rt2h", "[", "(", "r", ",", "t", ")", "]", ")", ",", "\n", "self", ".", "num_neg", ")", "\n", "\n", "pos_triple", "=", "torch", ".", "LongTensor", "(", "pos_triple", ")", "\n", "neg_tail_ent", "=", "torch", ".", "from_numpy", "(", "neg_tail_ent", ")", "\n", "neg_head_ent", "=", "torch", ".", "from_numpy", "(", "neg_head_ent", ")", "\n", "\n", "return", "pos_triple", ",", "neg_tail_ent", ",", "neg_head_ent", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.datasets.KGETrainDataset.collate_fn": [[95, 101], ["torch.stack", "torch.stack", "torch.stack"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "collate_fn", "(", "data", ")", ":", "\n", "        ", "pos_triple", "=", "torch", ".", "stack", "(", "[", "_", "[", "0", "]", "for", "_", "in", "data", "]", ",", "dim", "=", "0", ")", "\n", "neg_tail_ent", "=", "torch", ".", "stack", "(", "[", "_", "[", "1", "]", "for", "_", "in", "data", "]", ",", "dim", "=", "0", ")", "\n", "neg_head_ent", "=", "torch", ".", "stack", "(", "[", "_", "[", "2", "]", "for", "_", "in", "data", "]", ",", "dim", "=", "0", ")", "\n", "return", "pos_triple", ",", "neg_tail_ent", ",", "neg_head_ent", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.datasets.KGEEvalDataset.__init__": [[104, 111], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "eval_triples", ",", "num_ent", ",", "hr2t", ",", "rt2h", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "triples", "=", "eval_triples", "\n", "self", ".", "num_ent", "=", "num_ent", "\n", "self", ".", "hr2t", "=", "hr2t", "\n", "self", ".", "rt2h", "=", "rt2h", "\n", "self", ".", "num_cand", "=", "'all'", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.datasets.KGEEvalDataset.__len__": [[112, 114], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "triples", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.datasets.KGEEvalDataset.__getitem__": [[115, 135], ["datasets.KGEEvalDataset.get_label", "torch.LongTensor", "numpy.random.choice", "numpy.random.choice", "torch.from_numpy", "torch.from_numpy", "torch.LongTensor", "numpy.delete", "numpy.delete", "numpy.concatenate", "numpy.concatenate", "numpy.arange", "numpy.arange"], "methods", ["home.repos.pwc.inspect_result.zjukg_morse.None.datasets.KGEEvalDataset.get_label"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "pos_triple", "=", "self", ".", "triples", "[", "idx", "]", "\n", "h", ",", "r", ",", "t", "=", "pos_triple", "\n", "if", "self", ".", "num_cand", "==", "'all'", ":", "\n", "            ", "tail_label", ",", "head_label", "=", "self", ".", "get_label", "(", "self", ".", "hr2t", "[", "(", "h", ",", "r", ")", "]", ",", "self", ".", "rt2h", "[", "(", "r", ",", "t", ")", "]", ")", "\n", "pos_triple", "=", "torch", ".", "LongTensor", "(", "pos_triple", ")", "\n", "\n", "return", "pos_triple", ",", "tail_label", ",", "head_label", "\n", "", "else", ":", "\n", "            ", "neg_tail_cand", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "delete", "(", "np", ".", "arange", "(", "self", ".", "num_ent", ")", ",", "self", ".", "hr2t", "[", "(", "h", ",", "r", ")", "]", ")", ",", "\n", "self", ".", "num_cand", ")", "\n", "\n", "neg_head_cand", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "delete", "(", "np", ".", "arange", "(", "self", ".", "num_ent", ")", ",", "self", ".", "rt2h", "[", "(", "r", ",", "t", ")", "]", ")", ",", "\n", "self", ".", "num_cand", ")", "\n", "tail_cand", "=", "torch", ".", "from_numpy", "(", "np", ".", "concatenate", "(", "(", "[", "t", "]", ",", "neg_tail_cand", ")", ")", ")", "\n", "head_cand", "=", "torch", ".", "from_numpy", "(", "np", ".", "concatenate", "(", "(", "[", "h", "]", ",", "neg_head_cand", ")", ")", ")", "\n", "\n", "pos_triple", "=", "torch", ".", "LongTensor", "(", "pos_triple", ")", "\n", "\n", "return", "pos_triple", ",", "tail_cand", ",", "head_cand", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.datasets.KGEEvalDataset.get_label": [[136, 145], ["numpy.zeros", "numpy.zeros", "torch.FloatTensor", "torch.FloatTensor"], "methods", ["None"], ["", "", "def", "get_label", "(", "self", ",", "true_tail", ",", "true_head", ")", ":", "\n", "        ", "y_tail", "=", "np", ".", "zeros", "(", "[", "self", ".", "num_ent", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "e", "in", "true_tail", ":", "\n", "            ", "y_tail", "[", "e", "]", "=", "1.0", "\n", "", "y_head", "=", "np", ".", "zeros", "(", "[", "self", ".", "num_ent", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "e", "in", "true_head", ":", "\n", "            ", "y_head", "[", "e", "]", "=", "1.0", "\n", "\n", "", "return", "torch", ".", "FloatTensor", "(", "y_tail", ")", ",", "torch", ".", "FloatTensor", "(", "y_head", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zjukg_morse.None.datasets.KGEEvalDataset.collate_fn": [[146, 152], ["torch.stack", "torch.stack", "torch.stack"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "collate_fn", "(", "data", ")", ":", "\n", "        ", "pos_triple", "=", "torch", ".", "stack", "(", "[", "_", "[", "0", "]", "for", "_", "in", "data", "]", ",", "dim", "=", "0", ")", "\n", "tail_label_or_cand", "=", "torch", ".", "stack", "(", "[", "_", "[", "1", "]", "for", "_", "in", "data", "]", ",", "dim", "=", "0", ")", "\n", "head_label_or_cand", "=", "torch", ".", "stack", "(", "[", "_", "[", "2", "]", "for", "_", "in", "data", "]", ",", "dim", "=", "0", ")", "\n", "return", "pos_triple", ",", "tail_label_or_cand", ",", "head_label_or_cand", "\n", "", "", ""]]}