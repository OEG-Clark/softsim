{"home.repos.pwc.inspect_result.luuleitner_deepMTJ.process.filter.pre_filter": [[27, 36], ["scipy.stats.zscore", "numpy.abs", "pandas.DataFrame", "s.interpolate().ffill().bfill.interpolate().ffill().bfill", "s.interpolate().ffill().bfill.interpolate().ffill", "s.interpolate().ffill().bfill.interpolate"], "function", ["None"], ["def", "pre_filter", "(", "signal", ",", "n_sigmas", "=", "2", ")", ":", "\n", "    ", "s", "=", "signal", ".", "values", "\n", "z_scores", "=", "zscore", "(", "s", ",", "axis", "=", "0", ")", "\n", "abs_z_scores", "=", "np", ".", "abs", "(", "z_scores", ")", "\n", "filtered_entries", "=", "(", "abs_z_scores", "<", "n_sigmas", ")", "\n", "s", "[", "~", "filtered_entries", "[", ":", ",", "0", "]", "]", "=", "np", ".", "nan", "\n", "s", "=", "pd", ".", "DataFrame", "(", "s", ",", "columns", "=", "[", "'x'", ",", "'y'", "]", ")", "\n", "s", "=", "s", ".", "interpolate", "(", "method", "=", "'linear'", ",", "axis", "=", "0", ",", "limit", "=", "20", ")", ".", "ffill", "(", ")", ".", "bfill", "(", ")", "\n", "return", "s", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.process.filter.hampel_filter": [[40, 53], ["input_series.to_numpy.to_numpy", "len", "input_series.to_numpy.copy", "range", "numpy.median", "numpy.median", "numpy.abs", "indices.append", "numpy.abs"], "function", ["None"], ["", "def", "hampel_filter", "(", "input_series", ",", "window_size", ",", "n_sigmas", "=", "3", ")", ":", "\n", "    ", "input_series", "=", "input_series", ".", "to_numpy", "(", ")", "\n", "n", "=", "len", "(", "input_series", ")", "\n", "new_series", "=", "input_series", ".", "copy", "(", ")", "\n", "k", "=", "1.4826", "\n", "indices", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "(", "window_size", ")", ",", "(", "n", "-", "window_size", ")", ")", ":", "\n", "        ", "x0", "=", "np", ".", "median", "(", "input_series", "[", "(", "i", "-", "window_size", ")", ":", "(", "i", "+", "window_size", ")", "]", ")", "\n", "S0", "=", "k", "*", "np", ".", "median", "(", "np", ".", "abs", "(", "input_series", "[", "(", "i", "-", "window_size", ")", ":", "(", "i", "+", "window_size", ")", "]", "-", "x0", ")", ")", "\n", "if", "(", "np", ".", "abs", "(", "input_series", "[", "i", "]", "-", "x0", ")", ">", "n_sigmas", "*", "S0", ")", ":", "\n", "            ", "new_series", "[", "i", "]", "=", "x0", "\n", "indices", ".", "append", "(", "i", ")", "\n", "", "", "return", "new_series", "", "", ""]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.network.up_and_concate": [[31, 48], ["keras.layers.core.Lambda.", "keras.layers.UpSampling2D", "keras.layers.core.Lambda", "keras.layers.core.Lambda", "down_layer.get_shape().as_list", "down_layer.get_shape().as_list", "keras.concatenate", "keras.concatenate", "down_layer.get_shape", "down_layer.get_shape"], "function", ["None"], ["def", "up_and_concate", "(", "down_layer", ",", "layer", ",", "data_format", "=", "'channels_last'", ")", ":", "\n", "    ", "if", "data_format", "==", "'channels_last'", ":", "\n", "        ", "in_channel", "=", "down_layer", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "3", "]", "\n", "", "else", ":", "\n", "        ", "in_channel", "=", "down_layer", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "1", "]", "\n", "\n", "# up = Conv2DTranspose(out_channel, [2, 2], strides=[2, 2])(down_layer)", "\n", "", "up", "=", "UpSampling2D", "(", "size", "=", "(", "2", ",", "2", ")", ",", "data_format", "=", "data_format", ")", "(", "down_layer", ")", "\n", "\n", "if", "data_format", "==", "'channels_last'", ":", "\n", "        ", "my_concat", "=", "Lambda", "(", "lambda", "x", ":", "K", ".", "concatenate", "(", "[", "x", "[", "0", "]", ",", "x", "[", "1", "]", "]", ",", "axis", "=", "3", ")", ")", "\n", "", "else", ":", "\n", "        ", "my_concat", "=", "Lambda", "(", "lambda", "x", ":", "K", ".", "concatenate", "(", "[", "x", "[", "0", "]", ",", "x", "[", "1", "]", "]", ",", "axis", "=", "1", ")", ")", "\n", "\n", "", "concate", "=", "my_concat", "(", "[", "up", ",", "layer", "]", ")", "\n", "\n", "return", "concate", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.network.attention_up_and_concate": [[50, 67], ["network.attention_block_2d", "keras.layers.core.Lambda.", "keras.layers.UpSampling2D", "keras.layers.core.Lambda", "keras.layers.core.Lambda", "down_layer.get_shape().as_list", "down_layer.get_shape().as_list", "keras.concatenate", "keras.concatenate", "down_layer.get_shape", "down_layer.get_shape"], "function", ["home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.network.attention_block_2d"], ["", "def", "attention_up_and_concate", "(", "down_layer", ",", "skip", ",", "data_format", "=", "'channels_last'", ")", ":", "\n", "    ", "if", "data_format", "==", "'channels_last'", ":", "\n", "        ", "in_channel", "=", "down_layer", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "3", "]", "\n", "", "else", ":", "\n", "        ", "in_channel", "=", "down_layer", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "1", "]", "\n", "# up = Conv2DTranspose(out_channel, [2, 2], strides=[2, 2])(down_layer)", "\n", "", "up", "=", "UpSampling2D", "(", "size", "=", "(", "2", ",", "2", ")", ",", "data_format", "=", "data_format", ")", "(", "down_layer", ")", "\n", "\n", "skip", ",", "att_map", "=", "attention_block_2d", "(", "x", "=", "skip", ",", "g", "=", "up", ",", "inter_channel", "=", "in_channel", "//", "4", ",", "data_format", "=", "data_format", ")", "\n", "\n", "if", "data_format", "==", "'channels_last'", ":", "\n", "        ", "concat", "=", "Lambda", "(", "lambda", "x", ":", "K", ".", "concatenate", "(", "[", "x", "[", "0", "]", ",", "x", "[", "1", "]", "]", ",", "axis", "=", "3", ")", ")", "\n", "", "else", ":", "\n", "        ", "concat", "=", "Lambda", "(", "lambda", "x", ":", "K", ".", "concatenate", "(", "[", "x", "[", "0", "]", ",", "x", "[", "1", "]", "]", ",", "axis", "=", "1", ")", ")", "\n", "\n", "", "x", "=", "concat", "(", "[", "up", ",", "skip", "]", ")", "\n", "return", "x", ",", "att_map", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.network.attention_block_2d": [[69, 95], ["keras.layers.multiply", "keras.layers.Conv2D", "keras.layers.Conv2D", "keras.layers.Activation", "keras.layers.add", "keras.layers.Conv2D", "keras.layers.Activation"], "function", ["None"], ["", "def", "attention_block_2d", "(", "x", ",", "g", ",", "inter_channel", ",", "data_format", "=", "'channels_last'", ")", ":", "\n", "# theta_x(?,g_height,g_width,inter_channel)", "\n", "\n", "    ", "theta_x", "=", "Conv2D", "(", "inter_channel", ",", "[", "1", ",", "1", "]", ",", "strides", "=", "[", "1", ",", "1", "]", ",", "data_format", "=", "data_format", ")", "(", "x", ")", "\n", "\n", "# phi_g(?,g_height,g_width,inter_channel)", "\n", "\n", "phi_g", "=", "Conv2D", "(", "inter_channel", ",", "[", "1", ",", "1", "]", ",", "strides", "=", "[", "1", ",", "1", "]", ",", "data_format", "=", "data_format", ")", "(", "g", ")", "\n", "\n", "# f(?,g_height,g_width,inter_channel)", "\n", "\n", "f", "=", "Activation", "(", "'relu'", ")", "(", "add", "(", "[", "theta_x", ",", "phi_g", "]", ")", ")", "\n", "\n", "# psi_f(?,g_height,g_width,1)", "\n", "\n", "psi_f", "=", "Conv2D", "(", "1", ",", "[", "1", ",", "1", "]", ",", "strides", "=", "[", "1", ",", "1", "]", ",", "data_format", "=", "data_format", ")", "(", "f", ")", "\n", "\n", "att_map", "=", "Activation", "(", "'sigmoid'", ")", "(", "psi_f", ")", "\n", "\n", "# att_map(?,x_height,x_width)", "\n", "\n", "# x(?,x_height,x_width,x_channel)", "\n", "\n", "x", "=", "multiply", "(", "[", "x", ",", "att_map", "]", ")", "\n", "\n", "return", "x", ",", "att_map", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.network.res_block": [[97, 121], ["range", "keras.layers.add", "input_layer.get_shape().as_list", "input_layer.get_shape().as_list", "keras.layers.Conv2D", "keras.layers.Activation", "keras.layers.Conv2D", "keras.layers.Conv2D", "keras.layers.Conv2D", "keras.layers.BatchNormalization", "input_layer.get_shape", "input_layer.get_shape"], "function", ["None"], ["", "def", "res_block", "(", "input_layer", ",", "out_n_filters", ",", "batch_normalization", "=", "False", ",", "kernel_size", "=", "[", "3", ",", "3", "]", ",", "stride", "=", "[", "1", ",", "1", "]", ",", "\n", "\n", "padding", "=", "'same'", ",", "data_format", "=", "'channels_last'", ")", ":", "\n", "    ", "if", "data_format", "==", "'channels_last'", ":", "\n", "        ", "input_n_filters", "=", "input_layer", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "3", "]", "\n", "", "else", ":", "\n", "        ", "input_n_filters", "=", "input_layer", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "1", "]", "\n", "\n", "", "layer", "=", "input_layer", "\n", "for", "i", "in", "range", "(", "2", ")", ":", "\n", "        ", "layer", "=", "Conv2D", "(", "out_n_filters", "//", "4", ",", "[", "1", ",", "1", "]", ",", "strides", "=", "stride", ",", "padding", "=", "padding", ",", "data_format", "=", "data_format", ")", "(", "layer", ")", "\n", "if", "batch_normalization", ":", "\n", "            ", "layer", "=", "BatchNormalization", "(", ")", "(", "layer", ")", "\n", "", "layer", "=", "Activation", "(", "'relu'", ")", "(", "layer", ")", "\n", "layer", "=", "Conv2D", "(", "out_n_filters", "//", "4", ",", "kernel_size", ",", "strides", "=", "stride", ",", "padding", "=", "padding", ",", "data_format", "=", "data_format", ")", "(", "layer", ")", "\n", "layer", "=", "Conv2D", "(", "out_n_filters", ",", "[", "1", ",", "1", "]", ",", "strides", "=", "stride", ",", "padding", "=", "padding", ",", "data_format", "=", "data_format", ")", "(", "layer", ")", "\n", "\n", "", "if", "out_n_filters", "!=", "input_n_filters", ":", "\n", "        ", "skip_layer", "=", "Conv2D", "(", "out_n_filters", ",", "[", "1", ",", "1", "]", ",", "strides", "=", "stride", ",", "padding", "=", "padding", ",", "data_format", "=", "data_format", ")", "(", "\n", "input_layer", ")", "\n", "", "else", ":", "\n", "        ", "skip_layer", "=", "input_layer", "\n", "", "out_layer", "=", "add", "(", "[", "layer", ",", "skip_layer", "]", ")", "\n", "return", "out_layer", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.network.rec_res_block": [[124, 158], ["range", "keras.layers.add", "range", "input_layer.get_shape().as_list", "input_layer.get_shape().as_list", "keras.layers.Conv2D", "keras.layers.Conv2D", "keras.layers.add", "keras.layers.Activation", "input_layer.get_shape", "input_layer.get_shape", "keras.layers.Conv2D", "keras.layers.Activation", "keras.layers.BatchNormalization", "keras.layers.BatchNormalization"], "function", ["None"], ["", "def", "rec_res_block", "(", "input_layer", ",", "out_n_filters", ",", "batch_normalization", "=", "False", ",", "kernel_size", "=", "[", "3", ",", "3", "]", ",", "stride", "=", "[", "1", ",", "1", "]", ",", "\n", "\n", "padding", "=", "'same'", ",", "data_format", "=", "'channels_last'", ")", ":", "\n", "    ", "if", "data_format", "==", "'channels_last'", ":", "\n", "        ", "input_n_filters", "=", "input_layer", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "3", "]", "\n", "", "else", ":", "\n", "        ", "input_n_filters", "=", "input_layer", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "1", "]", "\n", "\n", "", "if", "out_n_filters", "!=", "input_n_filters", ":", "\n", "        ", "skip_layer", "=", "Conv2D", "(", "out_n_filters", ",", "[", "1", ",", "1", "]", ",", "strides", "=", "stride", ",", "padding", "=", "padding", ",", "data_format", "=", "data_format", ")", "(", "\n", "input_layer", ")", "\n", "", "else", ":", "\n", "        ", "skip_layer", "=", "input_layer", "\n", "\n", "", "layer", "=", "skip_layer", "\n", "for", "j", "in", "range", "(", "2", ")", ":", "\n", "\n", "        ", "for", "i", "in", "range", "(", "2", ")", ":", "\n", "            ", "if", "i", "==", "0", ":", "\n", "\n", "                ", "layer1", "=", "Conv2D", "(", "out_n_filters", ",", "kernel_size", ",", "strides", "=", "stride", ",", "padding", "=", "padding", ",", "data_format", "=", "data_format", ")", "(", "\n", "layer", ")", "\n", "if", "batch_normalization", ":", "\n", "                    ", "layer1", "=", "BatchNormalization", "(", ")", "(", "layer1", ")", "\n", "", "layer1", "=", "Activation", "(", "'relu'", ")", "(", "layer1", ")", "\n", "", "layer1", "=", "Conv2D", "(", "out_n_filters", ",", "kernel_size", ",", "strides", "=", "stride", ",", "padding", "=", "padding", ",", "data_format", "=", "data_format", ")", "(", "\n", "add", "(", "[", "layer1", ",", "layer", "]", ")", ")", "\n", "if", "batch_normalization", ":", "\n", "                ", "layer1", "=", "BatchNormalization", "(", ")", "(", "layer1", ")", "\n", "", "layer1", "=", "Activation", "(", "'relu'", ")", "(", "layer1", ")", "\n", "", "layer", "=", "layer1", "\n", "\n", "", "out_layer", "=", "add", "(", "[", "layer", ",", "skip_layer", "]", ")", "\n", "return", "out_layer", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.network.unet": [[162, 195], ["keras.layers.Input", "range", "reversed", "keras.models.Model", "skips.append", "keras.layers.Conv2D", "keras.layers.Dropout", "keras.layers.Conv2D", "range", "keras.layers.merge.concatenate", "keras.layers.Conv2D", "keras.layers.core.Activation", "keras.layers.Conv2D", "keras.layers.Dropout", "keras.layers.Conv2D", "keras.layers.MaxPooling2D", "keras.layers.UpSampling2D", "keras.layers.Conv2D", "keras.layers.Dropout", "keras.layers.Conv2D"], "function", ["None"], ["", "def", "unet", "(", "img_w", ",", "img_h", ",", "n_label", ",", "data_format", "=", "'channels_last'", ")", ":", "\n", "    ", "inputs", "=", "Input", "(", "(", "3", ",", "img_w", ",", "img_h", ")", ")", "\n", "x", "=", "inputs", "\n", "depth", "=", "4", "\n", "features", "=", "64", "\n", "skips", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "depth", ")", ":", "\n", "        ", "x", "=", "Conv2D", "(", "features", ",", "(", "3", ",", "3", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "data_format", "=", "data_format", ")", "(", "x", ")", "\n", "x", "=", "Dropout", "(", "0.2", ")", "(", "x", ")", "\n", "x", "=", "Conv2D", "(", "features", ",", "(", "3", ",", "3", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "data_format", "=", "data_format", ")", "(", "x", ")", "\n", "skips", ".", "append", "(", "x", ")", "\n", "x", "=", "MaxPooling2D", "(", "(", "2", ",", "2", ")", ",", "data_format", "=", "data_format", ")", "(", "x", ")", "\n", "features", "=", "features", "*", "2", "\n", "\n", "", "x", "=", "Conv2D", "(", "features", ",", "(", "3", ",", "3", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "data_format", "=", "data_format", ")", "(", "x", ")", "\n", "x", "=", "Dropout", "(", "0.2", ")", "(", "x", ")", "\n", "x", "=", "Conv2D", "(", "features", ",", "(", "3", ",", "3", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "data_format", "=", "data_format", ")", "(", "x", ")", "\n", "\n", "for", "i", "in", "reversed", "(", "range", "(", "depth", ")", ")", ":", "\n", "        ", "features", "=", "features", "//", "2", "\n", "# attention_up_and_concate(x,[skips[i])", "\n", "x", "=", "UpSampling2D", "(", "size", "=", "(", "2", ",", "2", ")", ",", "data_format", "=", "data_format", ")", "(", "x", ")", "\n", "x", "=", "concatenate", "(", "[", "skips", "[", "i", "]", ",", "x", "]", ",", "axis", "=", "1", ")", "\n", "x", "=", "Conv2D", "(", "features", ",", "(", "3", ",", "3", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "data_format", "=", "data_format", ")", "(", "x", ")", "\n", "x", "=", "Dropout", "(", "0.2", ")", "(", "x", ")", "\n", "x", "=", "Conv2D", "(", "features", ",", "(", "3", ",", "3", ")", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "data_format", "=", "data_format", ")", "(", "x", ")", "\n", "\n", "", "conv6", "=", "Conv2D", "(", "n_label", ",", "(", "1", ",", "1", ")", ",", "padding", "=", "'same'", ",", "data_format", "=", "data_format", ")", "(", "x", ")", "\n", "conv7", "=", "core", ".", "Activation", "(", "'sigmoid'", ")", "(", "conv6", ")", "\n", "model", "=", "Model", "(", "inputs", "=", "inputs", ",", "outputs", "=", "conv7", ")", "\n", "\n", "# model.compile(optimizer=Adam(lr=1e-5), loss=[focal_loss()], metrics=['accuracy', dice_coef])", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.network.att_unet": [[199, 244], ["keras.layers.Input", "range", "reversed", "keras.models.Model", "keras.models.Model", "skips.append", "keras.layers.Conv2D", "keras.layers.BatchNormalization", "keras.layers.ReLU", "keras.layers.Dropout", "keras.layers.Conv2D", "keras.layers.BatchNormalization", "keras.layers.ReLU", "range", "network.attention_up_and_concate", "att_maps.append", "keras.layers.Conv2D", "keras.layers.core.Activation", "keras.layers.Conv2D", "keras.layers.BatchNormalization", "keras.layers.ReLU", "keras.layers.Dropout", "keras.layers.Conv2D", "keras.layers.BatchNormalization", "keras.layers.ReLU", "keras.layers.MaxPooling2D", "keras.layers.Conv2D", "keras.layers.BatchNormalization", "keras.layers.ReLU", "keras.layers.Dropout", "keras.layers.Conv2D", "keras.layers.BatchNormalization", "keras.layers.ReLU"], "function", ["home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.network.attention_up_and_concate"], ["", "def", "att_unet", "(", "img_h", ",", "img_w", ",", "channels", ",", "n_label", ",", "data_format", "=", "'channels_last'", ")", ":", "\n", "    ", "inputs", "=", "Input", "(", "(", "img_h", ",", "img_w", ",", "channels", ")", ")", "\n", "x", "=", "inputs", "\n", "depth", "=", "4", "\n", "features", "=", "64", "\n", "skips", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "depth", ")", ":", "\n", "        ", "x", "=", "Conv2D", "(", "features", ",", "(", "3", ",", "3", ")", ",", "padding", "=", "'same'", ",", "data_format", "=", "data_format", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "ReLU", "(", ")", "(", "x", ")", "\n", "x", "=", "Dropout", "(", "0.", ")", "(", "x", ")", "\n", "x", "=", "Conv2D", "(", "features", ",", "(", "3", ",", "3", ")", ",", "padding", "=", "'same'", ",", "data_format", "=", "data_format", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "ReLU", "(", ")", "(", "x", ")", "\n", "skips", ".", "append", "(", "x", ")", "\n", "x", "=", "MaxPooling2D", "(", "(", "2", ",", "2", ")", ",", "data_format", "=", "'channels_last'", ")", "(", "x", ")", "\n", "features", "=", "features", "*", "2", "\n", "\n", "", "x", "=", "Conv2D", "(", "features", ",", "(", "3", ",", "3", ")", ",", "padding", "=", "'same'", ",", "data_format", "=", "data_format", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "ReLU", "(", ")", "(", "x", ")", "\n", "x", "=", "Dropout", "(", "0.", ")", "(", "x", ")", "\n", "x", "=", "Conv2D", "(", "features", ",", "(", "3", ",", "3", ")", ",", "padding", "=", "'same'", ",", "data_format", "=", "data_format", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "ReLU", "(", ")", "(", "x", ")", "\n", "\n", "att_maps", "=", "[", "]", "\n", "for", "i", "in", "reversed", "(", "range", "(", "depth", ")", ")", ":", "\n", "        ", "features", "=", "features", "//", "2", "\n", "x", ",", "att_map", "=", "attention_up_and_concate", "(", "x", ",", "skips", "[", "i", "]", ",", "data_format", "=", "data_format", ")", "\n", "att_maps", ".", "append", "(", "att_map", ")", "\n", "x", "=", "Conv2D", "(", "features", ",", "(", "3", ",", "3", ")", ",", "padding", "=", "'same'", ",", "data_format", "=", "data_format", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "ReLU", "(", ")", "(", "x", ")", "\n", "x", "=", "Dropout", "(", "0.", ")", "(", "x", ")", "\n", "x", "=", "Conv2D", "(", "features", ",", "(", "3", ",", "3", ")", ",", "padding", "=", "'same'", ",", "data_format", "=", "data_format", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "ReLU", "(", ")", "(", "x", ")", "\n", "\n", "", "conv6", "=", "Conv2D", "(", "n_label", ",", "(", "1", ",", "1", ")", ",", "padding", "=", "'same'", ",", "data_format", "=", "data_format", ")", "(", "x", ")", "\n", "out", "=", "core", ".", "Activation", "(", "'sigmoid'", ")", "(", "conv6", ")", "\n", "model", "=", "Model", "(", "inputs", "=", "inputs", ",", "outputs", "=", "out", ")", "\n", "att_model", "=", "Model", "(", "inputs", "=", "inputs", ",", "outputs", "=", "[", "out", ",", "*", "att_maps", "]", ")", "\n", "\n", "return", "model", ",", "att_model", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.network.r2_unet": [[248, 272], ["keras.layers.Input", "range", "network.rec_res_block", "reversed", "keras.models.Model", "network.rec_res_block", "skips.append", "range", "network.up_and_concate", "network.rec_res_block", "keras.layers.Conv2D", "keras.layers.core.Activation", "keras.layers.MaxPooling2D"], "function", ["home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.network.rec_res_block", "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.network.rec_res_block", "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.network.up_and_concate", "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.network.rec_res_block"], ["", "def", "r2_unet", "(", "img_w", ",", "img_h", ",", "n_label", ",", "data_format", "=", "'channels_last'", ")", ":", "\n", "    ", "inputs", "=", "Input", "(", "(", "3", ",", "img_w", ",", "img_h", ")", ")", "\n", "x", "=", "inputs", "\n", "depth", "=", "4", "\n", "features", "=", "64", "\n", "skips", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "depth", ")", ":", "\n", "        ", "x", "=", "rec_res_block", "(", "x", ",", "features", ",", "data_format", "=", "data_format", ")", "\n", "skips", ".", "append", "(", "x", ")", "\n", "x", "=", "MaxPooling2D", "(", "(", "2", ",", "2", ")", ",", "data_format", "=", "data_format", ")", "(", "x", ")", "\n", "\n", "features", "=", "features", "*", "2", "\n", "\n", "", "x", "=", "rec_res_block", "(", "x", ",", "features", ",", "data_format", "=", "data_format", ")", "\n", "\n", "for", "i", "in", "reversed", "(", "range", "(", "depth", ")", ")", ":", "\n", "        ", "features", "=", "features", "//", "2", "\n", "x", "=", "up_and_concate", "(", "x", ",", "skips", "[", "i", "]", ",", "data_format", "=", "data_format", ")", "\n", "x", "=", "rec_res_block", "(", "x", ",", "features", ",", "data_format", "=", "data_format", ")", "\n", "\n", "", "conv6", "=", "Conv2D", "(", "n_label", ",", "(", "1", ",", "1", ")", ",", "padding", "=", "'same'", ",", "data_format", "=", "data_format", ")", "(", "x", ")", "\n", "conv7", "=", "core", ".", "Activation", "(", "'sigmoid'", ")", "(", "conv6", ")", "\n", "model", "=", "Model", "(", "inputs", "=", "inputs", ",", "outputs", "=", "conv7", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.network.att_r2_unet": [[276, 300], ["keras.layers.Input", "range", "network.rec_res_block", "reversed", "keras.models.Model", "network.rec_res_block", "skips.append", "range", "network.attention_up_and_concate", "network.rec_res_block", "keras.layers.Conv2D", "keras.layers.core.Activation", "keras.layers.MaxPooling2D"], "function", ["home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.network.rec_res_block", "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.network.rec_res_block", "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.network.attention_up_and_concate", "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.network.rec_res_block"], ["", "def", "att_r2_unet", "(", "img_w", ",", "img_h", ",", "n_label", ",", "data_format", "=", "'channels_last'", ")", ":", "\n", "    ", "inputs", "=", "Input", "(", "(", "3", ",", "img_w", ",", "img_h", ")", ")", "\n", "x", "=", "inputs", "\n", "depth", "=", "4", "\n", "features", "=", "64", "\n", "skips", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "depth", ")", ":", "\n", "        ", "x", "=", "rec_res_block", "(", "x", ",", "features", ",", "data_format", "=", "data_format", ")", "\n", "skips", ".", "append", "(", "x", ")", "\n", "x", "=", "MaxPooling2D", "(", "(", "2", ",", "2", ")", ",", "data_format", "=", "data_format", ")", "(", "x", ")", "\n", "\n", "features", "=", "features", "*", "2", "\n", "\n", "", "x", "=", "rec_res_block", "(", "x", ",", "features", ",", "data_format", "=", "data_format", ")", "\n", "\n", "for", "i", "in", "reversed", "(", "range", "(", "depth", ")", ")", ":", "\n", "        ", "features", "=", "features", "//", "2", "\n", "x", "=", "attention_up_and_concate", "(", "x", ",", "skips", "[", "i", "]", ",", "data_format", "=", "data_format", ")", "\n", "x", "=", "rec_res_block", "(", "x", ",", "features", ",", "data_format", "=", "data_format", ")", "\n", "\n", "", "conv6", "=", "Conv2D", "(", "n_label", ",", "(", "1", ",", "1", ")", ",", "padding", "=", "'same'", ",", "data_format", "=", "data_format", ")", "(", "x", ")", "\n", "conv7", "=", "core", ".", "Activation", "(", "'sigmoid'", ")", "(", "conv6", ")", "\n", "model", "=", "Model", "(", "inputs", "=", "inputs", ",", "outputs", "=", "conv7", ")", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.model.AttentionUNet.__init__": [[125, 135], ["tensorflow.keras.optimizers.SGD", "mtj_tracking.train.network.att_unet", "model.compile", "print"], "methods", ["home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.network.att_unet"], ["    ", "def", "__init__", "(", "self", ",", "height", ",", "width", ",", "channels", "=", "1", ",", "\n", "optimizer", "=", "SGD", "(", "lr", "=", "0.01", ",", "momentum", "=", "0.9", ",", "decay", "=", "0.0000001", ")", ",", "\n", "loss", "=", "model_loss", ",", "\n", "metrics", "=", "[", "]", ")", ":", "\n", "#", "\n", "        ", "model", ",", "attention_map_model", "=", "att_unet", "(", "height", ",", "width", ",", "channels", ",", "1", ")", "\n", "model", ".", "compile", "(", "optimizer", "=", "optimizer", ",", "loss", "=", "loss", ",", "metrics", "=", "metrics", ")", "\n", "print", "(", "\"Generated Model\"", ")", "\n", "self", ".", "model", "=", "model", "\n", "self", ".", "attention_map_model", "=", "attention_map_model", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.model.AttentionUNet.loadWeights": [[136, 146], ["os.makedirs", "len", "os.path.join", "int", "max", "model.AttentionUNet.model.load_weights", "os.path.basename().replace", "glob.glob", "os.path.join", "os.path.join", "os.path.basename"], "methods", ["None"], ["", "def", "loadWeights", "(", "self", ",", "base_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "base_path", ",", "'weights'", ")", ",", "exist_ok", "=", "True", ")", "\n", "pastepochs", "=", "[", "int", "(", "os", ".", "path", ".", "basename", "(", "file", ")", ".", "replace", "(", "'.hdf5'", ",", "''", ")", ")", "\n", "for", "file", "in", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "base_path", ",", "'weights'", ",", "'*.hdf5'", ")", ")", "]", "\n", "\n", "start_epoch", "=", "0", "\n", "if", "len", "(", "pastepochs", ")", ":", "\n", "            ", "start_epoch", "=", "max", "(", "pastepochs", ")", "\n", "self", ".", "model", ".", "load_weights", "(", "os", ".", "path", ".", "join", "(", "base_path", ",", "'weights'", ",", "'%d.hdf5'", ")", "%", "start_epoch", ")", "\n", "", "return", "start_epoch", "\n", "", "", ""]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.model.distance": [[35, 44], ["zip", "numpy.mean", "model.position", "model.position", "dist.append", "numpy.sqrt", "numpy.sqrt"], "function", ["home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.model.position", "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.model.position"], ["def", "distance", "(", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "dist", "=", "[", "]", "\n", "for", "y_t", ",", "y_p", "in", "zip", "(", "y_true", ",", "y_pred", ")", ":", "\n", "        ", "pos_t", "=", "position", "(", "y_t", ")", "\n", "pos_p", "=", "position", "(", "y_p", ")", "\n", "dx", "=", "(", "pos_t", "[", "0", "]", "-", "pos_p", "[", "0", "]", ")", "*", "2", "\n", "dy", "=", "(", "pos_t", "[", "1", "]", "-", "pos_p", "[", "1", "]", ")", "\n", "dist", ".", "append", "(", "np", ".", "sqrt", "(", "dx", "*", "dx", "+", "dy", "*", "dy", ")", "/", "np", ".", "sqrt", "(", "5", ")", ")", "\n", "", "return", "np", ".", "mean", "(", "dist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.model.position": [[46, 50], ["numpy.argwhere", "numpy.max"], "function", ["None"], ["", "def", "position", "(", "y", ")", ":", "\n", "# return first position of max probability", "\n", "    ", "for", "pos", "in", "np", ".", "argwhere", "(", "y", "[", "...", ",", "0", "]", "==", "np", ".", "max", "(", "y", "[", "...", ",", "0", "]", ")", ")", ":", "\n", "        ", "return", "pos", "[", "1", "]", ",", "pos", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.model.correct": [[52, 61], ["zip", "numpy.mean", "model.position", "model.position", "correct.append", "numpy.sqrt"], "function", ["home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.model.position", "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.model.position"], ["", "", "def", "correct", "(", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "correct", "=", "[", "]", "\n", "for", "y_t", ",", "y_p", "in", "zip", "(", "y_true", ",", "y_pred", ")", ":", "\n", "        ", "pos_t", "=", "position", "(", "y_t", ")", "\n", "pos_p", "=", "position", "(", "y_p", ")", "\n", "dx", "=", "(", "pos_t", "[", "0", "]", "-", "pos_p", "[", "0", "]", ")", "\n", "dy", "=", "(", "pos_t", "[", "1", "]", "-", "pos_p", "[", "1", "]", ")", "\n", "correct", ".", "append", "(", "(", "np", ".", "sqrt", "(", "dx", "*", "dx", "+", "dy", "*", "dy", ")", ")", "<", "20", ")", "# calculate in pixels", "\n", "", "return", "np", ".", "mean", "(", "correct", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.model.squared_distance": [[63, 68], ["keras.backend.mean", "keras.backend.abs"], "function", ["None"], ["", "def", "squared_distance", "(", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "dx", "=", "(", "y_true", "[", "...", ",", "0", "]", "-", "y_pred", "[", "...", ",", "0", "]", ")", "*", "128", "\n", "dy", "=", "(", "y_true", "[", "...", ",", "1", "]", "-", "y_pred", "[", "...", ",", "1", "]", ")", "*", "64", "\n", "\n", "return", "K", ".", "mean", "(", "K", ".", "abs", "(", "dx", "*", "dx", "+", "dy", "*", "dy", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.model.model_loss": [[70, 73], ["model.class_loss"], "function", ["home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.model.class_loss"], ["", "def", "model_loss", "(", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "c_loss", "=", "class_loss", "(", "y_true", ",", "y_pred", ")", "\n", "return", "c_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.model.distance_loss": [[75, 80], ["keras.backend.square", "keras.backend.square", "keras.backend.sum", "keras.backend.sum"], "function", ["None"], ["", "def", "distance_loss", "(", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "d_loss", "=", "K", ".", "square", "(", "y_true", "[", "...", ",", "1", "]", "-", "y_pred", "[", "...", ",", "1", "]", ")", "+", "K", ".", "square", "(", "y_true", "[", "...", ",", "2", "]", "-", "y_pred", "[", "...", ",", "2", "]", ")", "\n", "d_loss", "=", "d_loss", "*", "y_true", "[", "...", ",", "0", "]", "# ignore loss if not class 1", "\n", "d_loss", "=", "K", ".", "sum", "(", "d_loss", ")", "/", "(", "K", ".", "sum", "(", "y_true", "[", "...", ",", "0", "]", ")", "+", "1e-8", ")", "\n", "return", "d_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.model.class_loss": [[82, 88], ["keras.backend.binary_crossentropy", "keras.backend.mean"], "function", ["None"], ["", "def", "class_loss", "(", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "norm", "=", "10", "\n", "c_loss", "=", "K", ".", "binary_crossentropy", "(", "y_true", "[", "...", ",", "0", "]", ",", "y_pred", "[", "...", ",", "0", "]", ")", "\n", "c_loss", "=", "y_true", "[", "...", ",", "0", "]", "*", "c_loss", "+", "(", "1", "-", "y_true", "[", "...", ",", "0", "]", ")", "*", "c_loss", "/", "norm", "\n", "c_loss", "=", "K", ".", "mean", "(", "c_loss", ")", "\n", "return", "c_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.model.model_accuracy": [[90, 92], ["keras.metrics.BinaryAccuracy"], "function", ["None"], ["", "def", "model_accuracy", "(", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "return", "BinaryAccuracy", "(", ")", "(", "y_true", "[", "...", ",", "0", "]", ",", "y_pred", "[", "...", ",", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.model.model_recall": [[94, 96], ["keras.metrics.Recall"], "function", ["None"], ["", "def", "model_recall", "(", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "return", "Recall", "(", ")", "(", "y_true", "[", "...", ",", "0", "]", ",", "y_pred", "[", "...", ",", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.model.normed_rms_distance": [[98, 104], ["keras.backend.constant", "keras.backend.mean", "keras.backend.floatx", "keras.backend.sqrt"], "function", ["None"], ["", "def", "normed_rms_distance", "(", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "c", "=", "K", ".", "constant", "(", "143.1", ",", "dtype", "=", "K", ".", "floatx", "(", ")", ")", "\n", "dx", "=", "(", "y_true", "[", "...", ",", "0", "]", "-", "y_pred", "[", "...", ",", "0", "]", ")", "*", "128", "\n", "dy", "=", "(", "y_true", "[", "...", ",", "1", "]", "-", "y_pred", "[", "...", ",", "1", "]", ")", "*", "64", "\n", "\n", "return", "K", ".", "mean", "(", "K", ".", "sqrt", "(", "dx", "*", "dx", "+", "dy", "*", "dy", ")", ")", "/", "c", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.model.mse": [[106, 111], ["keras.backend.mean"], "function", ["None"], ["", "def", "mse", "(", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "dx", "=", "(", "y_true", "[", "...", ",", "0", "]", "-", "y_pred", "[", "...", ",", "0", "]", ")", "*", "128", "\n", "dy", "=", "(", "y_true", "[", "...", ",", "1", "]", "-", "y_pred", "[", "...", ",", "1", "]", ")", "*", "64", "\n", "\n", "return", "K", ".", "mean", "(", "dx", "*", "dx", "+", "dy", "*", "dy", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.model.std": [[113, 120], ["keras.backend.sqrt", "print", "keras.backend.std"], "function", ["home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.model.std"], ["", "def", "std", "(", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "dx", "=", "(", "y_true", "[", "...", ",", "0", "]", "-", "y_pred", "[", "...", ",", "0", "]", ")", "*", "128", "\n", "dy", "=", "(", "y_true", "[", "...", ",", "1", "]", "-", "y_pred", "[", "...", ",", "1", "]", ")", "*", "64", "\n", "\n", "distance", "=", "K", ".", "sqrt", "(", "dx", "*", "dx", "+", "dy", "*", "dy", ")", "\n", "print", "(", "distance", ")", "\n", "return", "K", ".", "std", "(", "distance", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.callback.PlotCallback.__init__": [[39, 49], ["keras.callbacks.Callback.__init__", "random.sample", "os.makedirs", "range", "len"], "methods", ["home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.plot_widget.PlotWidget.__init__"], ["    ", "def", "__init__", "(", "self", ",", "x", ",", "y", ",", "att_model", ",", "base_path", "=", "'progress'", ",", "prefix", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "idx", "=", "sample", "(", "range", "(", "0", ",", "len", "(", "x", ")", ")", ",", "8", ")", "\n", "\n", "self", ".", "data_x", "=", "x", "[", "idx", "]", "\n", "self", ".", "data_y", "=", "y", "[", "idx", "]", "\n", "self", ".", "att_model", "=", "att_model", "\n", "self", ".", "base_path", "=", "base_path", "\n", "self", ".", "prefix", "=", "prefix", "\n", "os", ".", "makedirs", "(", "base_path", ",", "exist_ok", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.callback.PlotCallback.on_epoch_end": [[50, 87], ["len", "callback.PlotCallback.att_model.predict", "matplotlib.pyplot.subplots", "zip", "fig.tight_layout", "fig.savefig", "matplotlib.pyplot.close", "len", "row[].imshow", "row[].axis", "numpy.argwhere", "numpy.argwhere", "row[].imshow", "row[].axis", "numpy.copy", "row[].imshow", "row[].imshow", "row[].axis", "numpy.copy", "row[].imshow", "zip", "row[].scatter", "row[].scatter", "ax.axis", "ax.imshow", "os.path.join", "numpy.max", "numpy.max"], "methods", ["None"], ["", "def", "on_epoch_end", "(", "self", ",", "epoch", ",", "logs", "=", "None", ")", ":", "\n", "        ", "n_samples", "=", "len", "(", "self", ".", "data_x", ")", "\n", "predictions", ",", "*", "att_maps", "=", "self", ".", "att_model", ".", "predict", "(", "self", ".", "data_x", ")", "\n", "n_columns", "=", "3", "+", "len", "(", "att_maps", ")", "\n", "\n", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "n_samples", ",", "n_columns", ",", "figsize", "=", "(", "n_columns", "*", "6", ",", "n_samples", "*", "3", ")", ")", "\n", "for", "row", ",", "x", ",", "y", ",", "prediction", ",", "*", "att_map", "in", "zip", "(", "axs", ",", "self", ".", "data_x", ",", "self", ".", "data_y", ",", "predictions", ",", "*", "att_maps", ")", ":", "\n", "            ", "row", "[", "0", "]", ".", "imshow", "(", "x", "[", "...", ",", "0", "]", ",", "cmap", "=", "'gray'", ")", "\n", "row", "[", "0", "]", ".", "axis", "(", "'off'", ")", "\n", "label", "=", "y", "\n", "for", "pos", "in", "np", ".", "argwhere", "(", "label", "[", "...", ",", "0", "]", "==", "np", ".", "max", "(", "label", "[", "...", ",", "0", "]", ")", ")", ":", "\n", "                ", "row", "[", "0", "]", ".", "scatter", "(", "pos", "[", "1", "]", ",", "pos", "[", "0", "]", ",", "color", "=", "'blue'", ")", "\n", "", "label", "=", "prediction", "\n", "for", "pos", "in", "np", ".", "argwhere", "(", "label", "[", "...", ",", "0", "]", "==", "np", ".", "max", "(", "label", "[", "...", ",", "0", "]", ")", ")", ":", "\n", "                ", "row", "[", "0", "]", ".", "scatter", "(", "pos", "[", "1", "]", ",", "pos", "[", "0", "]", ",", "color", "=", "'magenta'", ")", "\n", "\n", "# ground truth probability map", "\n", "", "row", "[", "1", "]", ".", "imshow", "(", "x", "[", "...", ",", "0", "]", ",", "cmap", "=", "'gray'", ")", "\n", "row", "[", "1", "]", ".", "axis", "(", "'off'", ")", "\n", "prob_map", "=", "np", ".", "copy", "(", "y", "[", "...", ",", "0", "]", ")", "\n", "prob_map", "[", "prob_map", "<", "0.2", "]", "=", "np", ".", "NaN", "\n", "row", "[", "1", "]", ".", "imshow", "(", "prob_map", ",", "vmin", "=", "0", ",", "vmax", "=", "1", ",", "alpha", "=", "0.5", ")", "\n", "# predicted probability map", "\n", "row", "[", "2", "]", ".", "imshow", "(", "x", "[", "...", ",", "0", "]", ",", "cmap", "=", "'gray'", ")", "\n", "row", "[", "2", "]", ".", "axis", "(", "'off'", ")", "\n", "prob_map", "=", "np", ".", "copy", "(", "prediction", "[", "...", ",", "0", "]", ")", "\n", "prob_map", "[", "prob_map", "<", "0.2", "]", "=", "np", ".", "NaN", "\n", "row", "[", "2", "]", ".", "imshow", "(", "prob_map", ",", "vmin", "=", "0", ",", "vmax", "=", "1", ",", "alpha", "=", "0.5", ")", "\n", "\n", "for", "ax", ",", "att", "in", "zip", "(", "row", "[", "3", ":", "]", ",", "att_map", ")", ":", "\n", "                ", "ax", ".", "axis", "(", "'off'", ")", "\n", "ax", ".", "imshow", "(", "att", "[", "...", ",", "0", "]", ",", "vmin", "=", "0", ",", "vmax", "=", "1", ")", "\n", "\n", "", "", "fig", ".", "tight_layout", "(", ")", "\n", "plot_name", "=", "self", ".", "prefix", "+", "'_%03d.jpg'", "if", "self", ".", "prefix", "else", "'%03d.jpg'", "\n", "fig", ".", "savefig", "(", "os", ".", "path", ".", "join", "(", "self", ".", "base_path", ",", "plot_name", ")", "%", "epoch", ",", "dpi", "=", "100", ")", "\n", "plt", ".", "close", "(", "'all'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.callback.PlotSegmentationCallback.__init__": [[91, 100], ["random.sample", "os.makedirs", "range", "len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "x", ",", "y", ",", "model", ",", "attention_model", ",", "base_path", "=", "'progress'", ")", ":", "\n", "        ", "idx", "=", "sample", "(", "range", "(", "0", ",", "len", "(", "x", ")", ")", ",", "8", ")", "\n", "\n", "self", ".", "data_x", "=", "x", "[", "idx", "]", "\n", "self", ".", "data_y", "=", "y", "[", "idx", "]", "\n", "self", ".", "model", "=", "model", "\n", "self", ".", "attention_model", "=", "attention_model", "\n", "self", ".", "base_path", "=", "base_path", "\n", "os", ".", "makedirs", "(", "base_path", ",", "exist_ok", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.callback.PlotSegmentationCallback.on_epoch_end": [[101, 148], ["len", "callback.PlotSegmentationCallback.model.predict", "callback.PlotSegmentationCallback.attention_model.predict", "matplotlib.pyplot.figure", "enumerate", "matplotlib.pyplot.tight_layout", "matplotlib.pyplot.savefig", "matplotlib.pyplot.close", "zip", "matplotlib.pyplot.subplot", "matplotlib.pyplot.imshow", "matplotlib.pyplot.axis", "numpy.argwhere", "numpy.argwhere", "skimage.transform.pyramid_expand", "numpy.sqrt", "matplotlib.pyplot.subplot", "matplotlib.pyplot.imshow", "matplotlib.pyplot.imshow", "matplotlib.pyplot.axis", "matplotlib.pyplot.subplot", "matplotlib.pyplot.imshow", "matplotlib.pyplot.axis", "matplotlib.pyplot.scatter", "matplotlib.pyplot.scatter", "numpy.multiply", "skimage.transform.pyramid_expand", "os.path.join", "len"], "methods", ["None"], ["", "def", "on_epoch_end", "(", "self", ",", "epoch", ",", "logs", "=", "None", ")", ":", "\n", "        ", "n_samples", "=", "len", "(", "self", ".", "data_x", ")", "\n", "predictons", "=", "self", ".", "model", ".", "predict", "(", "self", ".", "data_x", ")", "\n", "attention_maps", "=", "self", ".", "attention_model", ".", "predict", "(", "self", ".", "data_x", ")", "\n", "n_columns", "=", "1", "+", "2", "\n", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "n_columns", "*", "6", ",", "n_samples", "*", "3", ")", ")", "\n", "for", "i", ",", "(", "x", ",", "y", ",", "predicton", ",", "*", "attention_map", ")", "in", "enumerate", "(", "\n", "zip", "(", "self", ".", "data_x", ",", "self", ".", "data_y", ",", "predictons", ",", "*", "attention_maps", ")", ")", ":", "\n", "            ", "plt", ".", "subplot", "(", "n_samples", ",", "n_columns", ",", "i", "*", "n_columns", "+", "1", ")", "\n", "plt", ".", "imshow", "(", "x", "[", "...", ",", "0", "]", ",", "cmap", "=", "'gray'", ")", "\n", "plt", ".", "axis", "(", "'off'", ")", "\n", "\n", "label", "=", "y", "\n", "for", "pos", "in", "np", ".", "argwhere", "(", "label", "[", "...", ",", "0", "]", ">=", "0.5", ")", ":", "\n", "                ", "d_x", "=", "label", "[", "pos", "[", "0", "]", ",", "pos", "[", "1", "]", ",", "1", "]", "\n", "d_y", "=", "label", "[", "pos", "[", "0", "]", ",", "pos", "[", "1", "]", ",", "2", "]", "\n", "plt", ".", "scatter", "(", "(", "pos", "[", "1", "]", "+", "d_x", ")", "*", "x", ".", "shape", "[", "0", "]", "/", "label", ".", "shape", "[", "0", "]", ",", "\n", "(", "pos", "[", "0", "]", "+", "d_y", ")", "*", "x", ".", "shape", "[", "1", "]", "/", "label", ".", "shape", "[", "1", "]", ",", "\n", "color", "=", "'blue'", ")", "\n", "", "label", "=", "predicton", "\n", "for", "pos", "in", "np", ".", "argwhere", "(", "label", "[", "...", ",", "0", "]", ">=", "0.5", ")", ":", "\n", "                ", "d_x", "=", "label", "[", "pos", "[", "0", "]", ",", "pos", "[", "1", "]", ",", "1", "]", "\n", "d_y", "=", "label", "[", "pos", "[", "0", "]", ",", "pos", "[", "1", "]", ",", "2", "]", "\n", "plt", ".", "scatter", "(", "(", "pos", "[", "1", "]", "+", "d_x", ")", "*", "x", ".", "shape", "[", "0", "]", "/", "label", ".", "shape", "[", "0", "]", ",", "\n", "(", "pos", "[", "0", "]", "+", "d_y", ")", "*", "x", ".", "shape", "[", "1", "]", "/", "label", ".", "shape", "[", "1", "]", ",", "\n", "color", "=", "'red'", ",", "alpha", "=", "label", "[", "pos", "[", "0", "]", ",", "pos", "[", "1", "]", ",", "0", "]", ")", "\n", "\n", "", "am2", "=", "attention_map", "[", "1", "]", "\n", "am1", "=", "pyramid_expand", "(", "attention_map", "[", "0", "]", ",", "upscale", "=", "attention_map", "[", "1", "]", ".", "shape", "[", "0", "]", "//", "attention_map", "[", "0", "]", ".", "shape", "[", "0", "]", ")", "\n", "am", "=", "np", ".", "sqrt", "(", "np", ".", "multiply", "(", "am1", ",", "am2", ")", ")", "\n", "am", "=", "am", "[", "...", ",", "0", "]", "if", "len", "(", "am", ".", "shape", ")", "==", "3", "else", "am", "\n", "\n", "plt", ".", "subplot", "(", "n_samples", ",", "n_columns", ",", "i", "*", "n_columns", "+", "2", ")", "\n", "plt", ".", "imshow", "(", "x", "[", "...", ",", "0", "]", ",", "cmap", "=", "'gray'", ")", "\n", "scale", "=", "x", ".", "shape", "[", "0", "]", "//", "am", ".", "shape", "[", "0", "]", "\n", "att_map", "=", "pyramid_expand", "(", "am", ",", "upscale", "=", "scale", ")", "if", "scale", ">", "1", "else", "am", "\n", "plt", ".", "imshow", "(", "att_map", ",", "alpha", "=", "0.3", ",", "cmap", "=", "'inferno'", ")", "\n", "plt", ".", "axis", "(", "'off'", ")", "\n", "\n", "plt", ".", "subplot", "(", "n_samples", ",", "n_columns", ",", "i", "*", "n_columns", "+", "3", ")", "\n", "plt", ".", "imshow", "(", "am", ",", "cmap", "=", "'inferno'", ")", "\n", "plt", ".", "axis", "(", "'off'", ")", "\n", "\n", "", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "savefig", "(", "os", ".", "path", ".", "join", "(", "self", ".", "base_path", ",", "'segmentation_%03d.jpg'", ")", "%", "epoch", ",", "dpi", "=", "100", ")", "\n", "plt", ".", "close", "(", "'all'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.callback.ValidationCallback.__init__": [[152, 165], ["os.path.join", "os.path.exists", "keras.callbacks.Callback.__init__", "callback.ValidationCallback.data_generators.keys", "open", "pickle.load"], "methods", ["home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.plot_widget.PlotWidget.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model", ",", "base_path", ",", "data_generators", ":", "Dict", ")", ":", "\n", "        ", "self", ".", "model", "=", "model", "\n", "self", ".", "data_generators", "=", "data_generators", "\n", "self", ".", "base_path", "=", "base_path", "\n", "self", ".", "performance", "=", "{", "key", ":", "{", "'loss'", ":", "[", "]", ",", "'accuracy'", ":", "[", "]", ",", "'recall'", ":", "[", "]", ",", "'distance'", ":", "[", "]", ",", "'correct'", ":", "[", "]", "}", "for", "key", "in", "\n", "self", ".", "data_generators", ".", "keys", "(", ")", "}", "\n", "self", ".", "history_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "base_path", ",", "'validation_history.pickle'", ")", "\n", "\n", "if", "os", ".", "path", ".", "exists", "(", "self", ".", "history_path", ")", ":", "\n", "            ", "with", "open", "(", "self", ".", "history_path", ",", "'rb'", ")", "as", "f", ":", "\n", "                ", "self", ".", "performance", "=", "pickle", ".", "load", "(", "f", ")", "\n", "\n", "", "", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.callback.ValidationCallback.on_epoch_end": [[166, 181], ["callback.ValidationCallback.data_generators.items", "callback.ValidationCallback.plot", "callback.ValidationCallback.model.evaluate", "callback.ValidationCallback.model.predict", "open", "pickle.dump", "multiprocessing.Pool", "p.map", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "mtj_tracking.train.model.distance", "mtj_tracking.train.model.correct", "range", "numpy.concatenate", "numpy.concatenate", "len"], "methods", ["home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.callback.ValidationCallback.plot", "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.model.distance", "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.model.correct"], ["", "def", "on_epoch_end", "(", "self", ",", "epoch", ",", "logs", "=", "None", ")", ":", "\n", "        ", "for", "key", ",", "gen", "in", "self", ".", "data_generators", ".", "items", "(", ")", ":", "\n", "            ", "with", "Pool", "(", "16", ")", "as", "p", ":", "\n", "                ", "data", "=", "p", ".", "map", "(", "gen", ".", "__getitem__", ",", "range", "(", "len", "(", "gen", ")", ")", ")", "\n", "", "loss", ",", "accuracy", ",", "recall", ",", "_", "=", "self", ".", "model", ".", "evaluate", "(", "np", ".", "concatenate", "(", "[", "d", "[", "0", "]", "for", "d", "in", "data", "]", ")", ",", "\n", "np", ".", "concatenate", "(", "[", "d", "[", "1", "]", "for", "d", "in", "data", "]", ")", ")", "\n", "prediction", "=", "self", ".", "model", ".", "predict", "(", "np", ".", "concatenate", "(", "[", "d", "[", "0", "]", "for", "d", "in", "data", "]", ")", ")", "\n", "self", ".", "performance", "[", "key", "]", "[", "'loss'", "]", "+=", "[", "loss", "]", "\n", "self", ".", "performance", "[", "key", "]", "[", "'accuracy'", "]", "+=", "[", "accuracy", "]", "\n", "self", ".", "performance", "[", "key", "]", "[", "'recall'", "]", "+=", "[", "recall", "]", "\n", "self", ".", "performance", "[", "key", "]", "[", "'distance'", "]", "+=", "[", "distance", "(", "np", ".", "concatenate", "(", "[", "d", "[", "1", "]", "for", "d", "in", "data", "]", ")", ",", "prediction", ")", "]", "\n", "self", ".", "performance", "[", "key", "]", "[", "'correct'", "]", "+=", "[", "correct", "(", "np", ".", "concatenate", "(", "[", "d", "[", "1", "]", "for", "d", "in", "data", "]", ")", ",", "prediction", ")", "]", "\n", "", "with", "open", "(", "self", ".", "history_path", ",", "'wb'", ")", "as", "f", ":", "\n", "            ", "pickle", ".", "dump", "(", "self", ".", "performance", ",", "f", ")", "\n", "", "self", ".", "plot", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.callback.ValidationCallback.plot": [[182, 222], ["matplotlib.pyplot.subplots", "callback.ValidationCallback.performance.items", "axs[].set_ylabel", "axs[].set_xlabel", "axs[].legend", "axs[].xaxis.set_major_locator", "callback.ValidationCallback.performance.items", "axs[].set_ylabel", "axs[].set_xlabel", "axs[].legend", "axs[].xaxis.set_major_locator", "callback.ValidationCallback.performance.items", "axs[].set_ylabel", "axs[].set_xlabel", "axs[].legend", "axs[].xaxis.set_major_locator", "callback.ValidationCallback.performance.items", "axs[].set_ylabel", "axs[].set_xlabel", "axs[].legend", "axs[].xaxis.set_major_locator", "callback.ValidationCallback.performance.items", "axs[].set_ylabel", "axs[].set_xlabel", "axs[].legend", "axs[].xaxis.set_major_locator", "matplotlib.pyplot.tight_layout", "matplotlib.pyplot.savefig", "matplotlib.pyplot.close", "axs[].plot", "matplotlib.ticker.MaxNLocator", "axs[].plot", "matplotlib.ticker.MaxNLocator", "axs[].plot", "matplotlib.ticker.MaxNLocator", "axs[].plot", "matplotlib.ticker.MaxNLocator", "axs[].plot", "matplotlib.ticker.MaxNLocator", "os.path.join", "range", "range", "range", "range", "range", "len", "len", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.callback.ValidationCallback.plot", "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.callback.ValidationCallback.plot", "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.callback.ValidationCallback.plot", "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.callback.ValidationCallback.plot", "home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.callback.ValidationCallback.plot"], ["", "def", "plot", "(", "self", ")", ":", "\n", "        ", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "5", ",", "1", ",", "figsize", "=", "(", "8", ",", "15", ")", ")", "\n", "for", "key", ",", "values", "in", "self", ".", "performance", ".", "items", "(", ")", ":", "\n", "            ", "axs", "[", "0", "]", ".", "plot", "(", "range", "(", "len", "(", "values", "[", "'loss'", "]", ")", ")", ",", "values", "[", "'loss'", "]", ",", "'-o'", ",", "label", "=", "key", ")", "\n", "", "axs", "[", "0", "]", ".", "set_ylabel", "(", "'Loss'", ")", "\n", "axs", "[", "0", "]", ".", "set_xlabel", "(", "'Epoch'", ")", "\n", "axs", "[", "0", "]", ".", "legend", "(", ")", "\n", "axs", "[", "0", "]", ".", "xaxis", ".", "set_major_locator", "(", "MaxNLocator", "(", "integer", "=", "True", ")", ")", "\n", "\n", "for", "key", ",", "values", "in", "self", ".", "performance", ".", "items", "(", ")", ":", "\n", "            ", "axs", "[", "1", "]", ".", "plot", "(", "range", "(", "len", "(", "values", "[", "'accuracy'", "]", ")", ")", ",", "values", "[", "'accuracy'", "]", ",", "'-o'", ",", "label", "=", "key", ")", "\n", "", "axs", "[", "1", "]", ".", "set_ylabel", "(", "'Accuracy'", ")", "\n", "axs", "[", "1", "]", ".", "set_xlabel", "(", "'Epoch'", ")", "\n", "axs", "[", "1", "]", ".", "legend", "(", ")", "\n", "axs", "[", "1", "]", ".", "xaxis", ".", "set_major_locator", "(", "MaxNLocator", "(", "integer", "=", "True", ")", ")", "\n", "\n", "for", "key", ",", "values", "in", "self", ".", "performance", ".", "items", "(", ")", ":", "\n", "            ", "axs", "[", "2", "]", ".", "plot", "(", "range", "(", "len", "(", "values", "[", "'recall'", "]", ")", ")", ",", "values", "[", "'recall'", "]", ",", "'-o'", ",", "label", "=", "key", ")", "\n", "", "axs", "[", "2", "]", ".", "set_ylabel", "(", "'Recall'", ")", "\n", "axs", "[", "2", "]", ".", "set_xlabel", "(", "'Epoch'", ")", "\n", "axs", "[", "2", "]", ".", "legend", "(", ")", "\n", "axs", "[", "2", "]", ".", "xaxis", ".", "set_major_locator", "(", "MaxNLocator", "(", "integer", "=", "True", ")", ")", "\n", "\n", "for", "key", ",", "values", "in", "self", ".", "performance", ".", "items", "(", ")", ":", "\n", "            ", "axs", "[", "3", "]", ".", "plot", "(", "range", "(", "len", "(", "values", "[", "'distance'", "]", ")", ")", ",", "values", "[", "'distance'", "]", ",", "'-o'", ",", "label", "=", "key", ")", "\n", "", "axs", "[", "3", "]", ".", "set_ylabel", "(", "'Distance'", ")", "\n", "axs", "[", "3", "]", ".", "set_xlabel", "(", "'Epoch'", ")", "\n", "axs", "[", "3", "]", ".", "legend", "(", ")", "\n", "axs", "[", "3", "]", ".", "xaxis", ".", "set_major_locator", "(", "MaxNLocator", "(", "integer", "=", "True", ")", ")", "\n", "\n", "for", "key", ",", "values", "in", "self", ".", "performance", ".", "items", "(", ")", ":", "\n", "            ", "axs", "[", "4", "]", ".", "plot", "(", "range", "(", "len", "(", "values", "[", "'correct'", "]", ")", ")", ",", "values", "[", "'correct'", "]", ",", "'-o'", ",", "label", "=", "key", ")", "\n", "", "axs", "[", "4", "]", ".", "set_ylabel", "(", "'Correct'", ")", "\n", "axs", "[", "4", "]", ".", "set_xlabel", "(", "'Epoch'", ")", "\n", "axs", "[", "4", "]", ".", "legend", "(", ")", "\n", "axs", "[", "4", "]", ".", "xaxis", ".", "set_major_locator", "(", "MaxNLocator", "(", "integer", "=", "True", ")", ")", "\n", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "savefig", "(", "os", ".", "path", ".", "join", "(", "self", ".", "base_path", ",", "'validation_history.jpg'", ")", ",", "dpi", "=", "100", ")", "\n", "plt", ".", "close", "(", "'all'", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.predict.predict.find_coordinates": [[35, 47], ["skimage.measure.label", "scipy.ndimage.center_of_mass", "numpy.argmax", "range"], "function", ["None"], ["def", "find_coordinates", "(", "prediction", ")", ":", "\n", "    ", "detection", "=", "prediction", ">=", "0.5", "\n", "l", ",", "num_features", "=", "label", "(", "detection", ",", "return_num", "=", "True", ")", "\n", "if", "num_features", "==", "0", ":", "\n", "        ", "return", "(", "np", ".", "NAN", ",", "np", ".", "NAN", ")", "\n", "", "if", "num_features", ">", "1", ":", "# find the most likely detection (usually there is only 1 position)", "\n", "        ", "idx", "=", "np", ".", "argmax", "(", "[", "(", "l", "==", "(", "i", "+", "1", ")", ")", ".", "sum", "(", ")", "for", "i", "in", "range", "(", "num_features", ")", "]", ")", "+", "1", "\n", "", "else", ":", "\n", "        ", "idx", "=", "1", "\n", "", "detection_mask", "=", "(", "l", "==", "idx", ")", "\n", "y", ",", "x", ",", "_", "=", "center_of_mass", "(", "prediction", "*", "detection_mask", ")", "\n", "return", "x", ",", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.predict.predict.track_videos": [[49, 72], ["os.path.join", "mtj_tracking.train.network.att_unet", "model.load_weights", "mtj_tracking.data.generator.PredictionGenerator", "model.predict_generator", "numpy.array", "pandas.DataFrame", "str", "os.path.exists", "os.makedirs", "urllib.request.urlretrieve", "pathlib.Path.home", "os.path.join", "predict.find_coordinates", "str", "pathlib.Path.home"], "function", ["home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.network.att_unet", "home.repos.pwc.inspect_result.luuleitner_deepMTJ.predict.predict.find_coordinates"], ["", "def", "track_videos", "(", "files", ",", "frame", ",", "frame_coordinates", "=", "True", ")", ":", "\n", "    ", "model_path", "=", "os", ".", "path", ".", "join", "(", "str", "(", "Path", ".", "home", "(", ")", ")", ",", "'.deepMTJ'", ",", "'version1_0.tf'", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "model_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "str", "(", "Path", ".", "home", "(", ")", ")", ",", "'.deepMTJ'", ")", ",", "exist_ok", "=", "True", ")", "\n", "urlretrieve", "(", "'https://storage.googleapis.com/deepmtj/IEEEtbme_model_2021/2021_Unet_deepmtj_ieeetbme_model.tf'", ",", "model_path", ",", ")", "\n", "\n", "", "model", ",", "_", "=", "att_unet", "(", "128", ",", "256", ",", "1", ",", "1", ")", "\n", "model", ".", "load_weights", "(", "model_path", ")", "\n", "\n", "data_generator", "=", "PredictionGenerator", "(", "files", ",", "frame", "=", "frame", ")", "\n", "predictions", "=", "model", ".", "predict_generator", "(", "data_generator", ",", "verbose", "=", "1", ")", "\n", "\n", "coordinates", "=", "np", ".", "array", "(", "[", "find_coordinates", "(", "p", ")", "for", "p", "in", "predictions", "]", ")", "\n", "\n", "x", ",", "y", ",", "w", ",", "h", "=", "frame", ".", "value", "\n", "result", "=", "{", "\n", "'file'", ":", "[", "f", "for", "f", ",", "idx", "in", "data_generator", ".", "info", "]", ",", "\n", "'frame_num'", ":", "[", "idx", "for", "f", ",", "idx", "in", "data_generator", ".", "info", "]", ",", "\n", "'x'", ":", "coordinates", "[", ":", ",", "0", "]", "if", "frame_coordinates", "else", "coordinates", "[", ":", ",", "0", "]", "/", "256", "*", "w", "+", "x", ",", "\n", "'y'", ":", "coordinates", "[", ":", ",", "1", "]", "if", "frame_coordinates", "else", "coordinates", "[", ":", ",", "1", "]", "/", "128", "*", "h", "+", "y", "}", "\n", "\n", "result_df", "=", "pd", ".", "DataFrame", "(", "result", ")", "\n", "return", "result_df", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.data.generator.PredictionGenerator.__init__": [[37, 46], ["generator.PredictionGenerator.loadVideos", "numpy.array", "os.path.exists"], "methods", ["home.repos.pwc.inspect_result.luuleitner_deepMTJ.data.loader.DataLoader.loadVideos"], ["    ", "def", "__init__", "(", "self", ",", "video_files", ",", "image_size", "=", "[", "128", ",", "256", "]", ",", "frame", "=", "Frame", ".", "ESAOTE", ",", "batch_size", "=", "10", ")", ":", "\n", "        ", "for", "f", "in", "video_files", ":", "\n", "            ", "assert", "os", ".", "path", ".", "exists", "(", "f", ")", ",", "'Invalid video path: %s does not exist'", "%", "f", "\n", "", "self", ".", "image_size", "=", "image_size", "\n", "self", ".", "frame", "=", "frame", "\n", "frames", "=", "self", ".", "loadVideos", "(", "video_files", ")", "\n", "self", ".", "data", "=", "np", ".", "array", "(", "[", "frame", "for", "video_id", ",", "idx", ",", "frame", "in", "frames", "]", ")", "\n", "self", ".", "info", "=", "[", "(", "video_id", ",", "idx", ")", "for", "video_id", ",", "idx", ",", "frame", "in", "frames", "]", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.data.generator.PredictionGenerator.__len__": [[47, 49], ["int", "numpy.ceil", "len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "int", "(", "np", ".", "ceil", "(", "len", "(", "self", ".", "data", ")", "/", "self", ".", "batch_size", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.data.generator.PredictionGenerator.__getitem__": [[50, 56], ["numpy.expand_dims", "numpy.array", "numpy.mean", "numpy.std"], "methods", ["home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.model.std"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "x_batch", "=", "self", ".", "data", "[", "idx", "*", "self", ".", "batch_size", ":", "(", "idx", "+", "1", ")", "*", "self", ".", "batch_size", "]", "\n", "x_batch", "=", "np", ".", "expand_dims", "(", "x_batch", ",", "-", "1", ")", "\n", "x_batch", "=", "(", "x_batch", "-", "np", ".", "mean", "(", "x_batch", ",", "axis", "=", "(", "1", ",", "2", ",", "3", ")", ",", "keepdims", "=", "True", ")", ")", "/", "(", "\n", "np", ".", "std", "(", "x_batch", ",", "axis", "=", "(", "1", ",", "2", ",", "3", ")", ",", "keepdims", "=", "True", ")", "+", "1e-8", ")", "\n", "return", "np", ".", "array", "(", "x_batch", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.data.generator.PredictionGenerator.loadVideos": [[57, 63], ["multiprocessing.Pool", "tqdm.tqdm.tqdm", "p.imap", "len"], "methods", ["None"], ["", "def", "loadVideos", "(", "self", ",", "files", ")", ":", "\n", "        ", "data", "=", "[", "]", "\n", "with", "Pool", "(", "24", ")", "as", "p", ":", "\n", "            ", "for", "frames", "in", "tqdm", "(", "p", ".", "imap", "(", "self", ".", "convertFile", ",", "files", ")", ",", "total", "=", "len", "(", "files", ")", ",", "desc", "=", "'Loading videos'", ")", ":", "\n", "                ", "data", "=", "data", "+", "frames", "\n", "", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.data.generator.PredictionGenerator.convertFile": [[64, 68], ["mtj_tracking.data.loader.loadVideo", "mtj_tracking.data.loader.adjustFrame", "enumerate"], "methods", ["home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.main.MainWindow.loadVideo", "home.repos.pwc.inspect_result.luuleitner_deepMTJ.data.loader.adjustFrame"], ["", "def", "convertFile", "(", "self", ",", "file", ")", ":", "\n", "        ", "video_id", ",", "video", "=", "loadVideo", "(", "file", ")", "\n", "frames", "=", "[", "(", "video_id", ",", "i", ",", "adjustFrame", "(", "image", ",", "self", ".", "frame", ",", "self", ".", "image_size", ")", ")", "for", "i", ",", "image", "in", "enumerate", "(", "video", ")", "]", "\n", "return", "frames", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.data.generator.PredictionGenerator.createKey": [[69, 71], ["None"], "methods", ["None"], ["", "def", "createKey", "(", "self", ",", "active", ")", ":", "\n", "        ", "return", "\"%s_%05d\"", "%", "(", "active", "[", "0", "]", ",", "active", "[", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.data.generator.TrainGenerator.__init__": [[75, 83], ["sklearn.utils.shuffle", "keras_preprocessing.image.ImageDataGenerator"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "x_data", ",", "y_data", ",", "batch_size", "=", "10", ",", "augmentation", "=", "True", ",", "image_shape", "=", "None", ")", ":", "\n", "        ", "self", ".", "x_data", ",", "self", ".", "y_data", "=", "shuffle", "(", "x_data", ",", "y_data", ")", "\n", "self", ".", "image_shape", "=", "image_shape", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "augmentation", "=", "augmentation", "\n", "self", ".", "image_transform", "=", "ImageDataGenerator", "(", "rotation_range", "=", "20", ",", "horizontal_flip", "=", "True", ",", "vertical_flip", "=", "True", ",", "\n", "zoom_range", "=", "0.3", ",", "width_shift_range", "=", "0.1", ",", "height_shift_range", "=", "0.1", ",", "\n", "shear_range", "=", "0.2", ",", "fill_mode", "=", "'reflect'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.data.generator.TrainGenerator.__len__": [[84, 86], ["int", "numpy.ceil", "len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "int", "(", "np", ".", "ceil", "(", "len", "(", "self", ".", "x_data", ")", "/", "self", ".", "batch_size", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.data.generator.TrainGenerator.__getitem__": [[87, 93], ["generator.TrainGenerator.transform", "numpy.array", "numpy.array", "zip"], "methods", ["home.repos.pwc.inspect_result.luuleitner_deepMTJ.data.generator.TrainGenerator.transform"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "x_batch", ",", "y_batch", "=", "self", ".", "x_data", "[", "idx", "*", "self", ".", "batch_size", ":", "(", "idx", "+", "1", ")", "*", "self", ".", "batch_size", "]", ",", "self", ".", "y_data", "[", "\n", "idx", "*", "self", ".", "batch_size", ":", "(", "\n", "idx", "+", "1", ")", "*", "self", ".", "batch_size", "]", "\n", "batch", "=", "[", "self", ".", "transform", "(", "x", ",", "y", ")", "for", "x", ",", "y", "in", "zip", "(", "x_batch", ",", "y_batch", ")", "]", "\n", "return", "np", ".", "array", "(", "[", "d", "[", "0", "]", "for", "d", "in", "batch", "]", ")", ",", "np", ".", "array", "(", "[", "d", "[", "1", "]", "for", "d", "in", "batch", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.data.generator.TrainGenerator.transform": [[94, 111], ["numpy.expand_dims", "numpy.dstack", "int", "int", "scipy.stats.multivariate_normal.pdf", "numpy.expand_dims", "generator.TrainGenerator.prepImage", "generator.TrainGenerator.prepTarget", "generator.TrainGenerator.image_transform.get_random_transform", "generator.TrainGenerator.image_transform.apply_transform", "generator.TrainGenerator.image_transform.apply_transform"], "methods", ["home.repos.pwc.inspect_result.luuleitner_deepMTJ.data.generator.TrainGenerator.prepImage", "home.repos.pwc.inspect_result.luuleitner_deepMTJ.data.generator.TrainGenerator.prepTarget"], ["", "def", "transform", "(", "self", ",", "image", ",", "label", ")", ":", "\n", "        ", "image", "=", "np", ".", "expand_dims", "(", "image", ",", "-", "1", ")", "\n", "x", ",", "y", "=", "np", ".", "mgrid", "[", "0", ":", "image", ".", "shape", "[", "0", "]", ",", "0", ":", "image", ".", "shape", "[", "1", "]", "]", "\n", "pos", "=", "np", ".", "dstack", "(", "(", "x", ",", "y", ")", ")", "\n", "y0", "=", "int", "(", "label", "[", "1", "]", "*", "(", "pos", ".", "shape", "[", "0", "]", "-", "1", ")", ")", "\n", "x0", "=", "int", "(", "label", "[", "0", "]", "*", "(", "pos", ".", "shape", "[", "1", "]", "-", "1", ")", ")", "\n", "target", "=", "multivariate_normal", ".", "pdf", "(", "pos", ",", "[", "y0", ",", "x0", "]", ",", "[", "100", ",", "100", "]", ")", "\n", "target", "=", "np", ".", "expand_dims", "(", "target", ",", "axis", "=", "-", "1", ")", "\n", "if", "self", ".", "augmentation", ":", "\n", "            ", "params", "=", "self", ".", "image_transform", ".", "get_random_transform", "(", "image", ".", "shape", ")", "\n", "image", "=", "self", ".", "image_transform", ".", "apply_transform", "(", "image", ",", "params", ")", "\n", "target", "=", "self", ".", "image_transform", ".", "apply_transform", "(", "target", ",", "params", ")", "\n", "\n", "", "image", "=", "self", ".", "prepImage", "(", "image", ")", "\n", "target", "=", "self", ".", "prepTarget", "(", "target", ")", "\n", "\n", "return", "image", ",", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.data.generator.TrainGenerator.prepTarget": [[112, 117], ["skimage.transform.resize", "numpy.min", "numpy.max", "numpy.min"], "methods", ["None"], ["", "def", "prepTarget", "(", "self", ",", "target", ")", ":", "\n", "        ", "if", "self", ".", "image_shape", ":", "\n", "            ", "target", "=", "resize", "(", "target", ",", "self", ".", "image_shape", ",", "order", "=", "3", ")", "\n", "", "target", "=", "(", "target", "-", "np", ".", "min", "(", "target", ")", ")", "/", "(", "np", ".", "max", "(", "target", ")", "-", "np", ".", "min", "(", "target", ")", ")", "# normalize", "\n", "return", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.data.generator.TrainGenerator.prepImage": [[118, 123], ["skimage.transform.resize", "numpy.mean", "numpy.std"], "methods", ["home.repos.pwc.inspect_result.luuleitner_deepMTJ.train.model.std"], ["", "def", "prepImage", "(", "self", ",", "image", ")", ":", "\n", "        ", "if", "self", ".", "image_shape", ":", "\n", "            ", "image", "=", "resize", "(", "image", ",", "self", ".", "image_shape", ",", "order", "=", "3", ")", "\n", "", "image", "=", "(", "image", "-", "np", ".", "mean", "(", "image", ")", ")", "/", "(", "np", ".", "std", "(", "image", ")", "+", "1e-8", ")", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.data.generator.TrainGenerator.on_epoch_end": [[124, 126], ["sklearn.utils.shuffle"], "methods", ["None"], ["", "def", "on_epoch_end", "(", "self", ")", ":", "\n", "        ", "self", ".", "x_data", ",", "self", ".", "y_data", "=", "shuffle", "(", "self", ".", "x_data", ",", "self", ".", "y_data", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.data.loader.DataLoader.__init__": [[47, 50], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "image_size", "=", "[", "128", ",", "256", "]", ")", ":", "\n", "# ------> Define Image Conversion Parameters", "\n", "        ", "self", ".", "image_size", "=", "image_size", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.data.loader.DataLoader.loadDataSet": [[51, 77], ["loader.DataLoader.loadLabels", "print", "print", "loader.DataLoader.loadVideos", "print", "print", "loader.DataLoader.loadVideos", "print", "print", "os.path.join", "random.sample", "sklearn.model_selection.train_test_split", "loader.DataLoader.loadFiles", "os.environ.get", "len", "len"], "methods", ["home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.main.MainWindow.loadLabels", "home.repos.pwc.inspect_result.luuleitner_deepMTJ.data.loader.DataLoader.loadVideos", "home.repos.pwc.inspect_result.luuleitner_deepMTJ.data.loader.DataLoader.loadVideos", "home.repos.pwc.inspect_result.luuleitner_deepMTJ.data.loader.DataLoader.loadFiles"], ["", "def", "loadDataSet", "(", "self", ",", "*", "data_paths", ",", "\n", "labels_path", "=", "None", ",", "\n", "valid_split", "=", "0.1", ",", "\n", "sample_size", "=", "False", ",", ")", ":", "\n", "# ------> Load Filenames from the paths", "\n", "        ", "files", "=", "[", "f", "for", "data_path", "in", "data_paths", "for", "f", "in", "self", ".", "loadFiles", "(", "data_path", ")", "]", "\n", "\n", "# ------> Load Labels", "\n", "labels_path", "=", "os", ".", "path", ".", "join", "(", "os", ".", "environ", ".", "get", "(", "\"HOME\"", ")", ",", "\"labels.csv\"", ")", "if", "labels_path", "is", "None", "else", "labels_path", "\n", "labels", "=", "self", ".", "loadLabels", "(", "labels_path", ")", "\n", "\n", "# ------> Include Data Sampling", "\n", "if", "sample_size", ":", "\n", "            ", "files", "=", "random", ".", "sample", "(", "files", ",", "sample_size", ")", "\n", "\n", "# ------> Create Training and Validation Datasets and Return", "\n", "", "train_files", ",", "valid_files", "=", "train_test_split", "(", "files", ",", "test_size", "=", "valid_split", ",", ")", "if", "valid_split", ">", "0", "else", "(", "files", ",", "[", "]", ")", "\n", "print", "(", "''", ")", "\n", "print", "(", "'Load frames of %d videos included in TRAINING dataset:'", "%", "len", "(", "train_files", ")", ")", "\n", "data", "=", "self", ".", "loadVideos", "(", "train_files", ",", "labels", ")", "\n", "print", "(", "''", ")", "\n", "print", "(", "'Load frames of %d videos included in VALIDATION dataset:'", "%", "len", "(", "valid_files", ")", ")", "\n", "valid_data", "=", "self", ".", "loadVideos", "(", "valid_files", ",", "labels", ")", "\n", "print", "(", "''", ")", "\n", "print", "(", "'Building Dataset...Done'", ")", "\n", "return", "data", ",", "valid_data", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.data.loader.DataLoader.loadFiles": [[78, 81], ["glob.glob", "glob.glob", "os.path.join", "os.path.join"], "methods", ["None"], ["", "def", "loadFiles", "(", "self", ",", "data_path", ")", ":", "\n", "        ", "return", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data_path", ",", "'**'", ",", "'*.avi'", ")", ",", "recursive", "=", "True", ")", "+", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data_path", ",", "'**'", ",", "'*.AVI'", ")", ",", "recursive", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.data.loader.DataLoader.loadLabels": [[82, 86], ["pandas.read_csv", "pandas.read_csv.iterrows"], "methods", ["None"], ["", "def", "loadLabels", "(", "self", ",", "labels_path", ")", ":", "\n", "        ", "df", "=", "read_csv", "(", "labels_path", ",", "header", "=", "None", ")", "\n", "labels", "=", "{", "d", "[", "0", "]", ":", "(", "d", "[", "1", "]", ",", "d", "[", "2", "]", ")", "for", "idx", ",", "d", "in", "df", ".", "iterrows", "(", ")", "}", "\n", "return", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.data.loader.DataLoader.loadVideos": [[87, 94], ["multiprocessing.pool.Pool", "tqdm.tqdm.tqdm", "p.imap_unordered", "len"], "methods", ["None"], ["", "def", "loadVideos", "(", "self", ",", "files", ",", "labels", ")", ":", "\n", "        ", "data", "=", "[", "]", "\n", "iter_elements", "=", "[", "(", "f", ",", "labels", ")", "for", "f", "in", "files", "]", "\n", "with", "Pool", "(", "24", ")", "as", "p", ":", "\n", "            ", "for", "frames", "in", "tqdm", "(", "p", ".", "imap_unordered", "(", "self", ".", "convertFile", ",", "iter_elements", ")", ",", "total", "=", "len", "(", "iter_elements", ")", ")", ":", "\n", "                ", "data", "=", "data", "+", "frames", "\n", "", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.data.loader.DataLoader.convertFile": [[95, 115], ["loader.DataLoader.loadVideo", "loader.DataLoader.createKey", "loader.adjustFrame", "loader.adjustLabels", "enumerate", "loader.DataLoader.createKey", "labels.keys", "Exception", "loader.DataLoader.createKey"], "methods", ["home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.main.MainWindow.loadVideo", "home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.main.MainWindow.createKey", "home.repos.pwc.inspect_result.luuleitner_deepMTJ.data.loader.adjustFrame", "home.repos.pwc.inspect_result.luuleitner_deepMTJ.data.loader.adjustLabels", "home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.main.MainWindow.createKey", "home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.main.MainWindow.createKey"], ["", "def", "convertFile", "(", "self", ",", "params", ")", ":", "\n", "        ", "file", ",", "labels", "=", "params", "\n", "video_id", ",", "video", "=", "self", ".", "loadVideo", "(", "file", ")", "\n", "if", "'E1'", "in", "video_id", ":", "\n", "            ", "frame", "=", "Frame", ".", "ESAOTE", "\n", "", "elif", "'Te1'", "in", "video_id", ":", "\n", "            ", "frame", "=", "Frame", ".", "TELEMED", "\n", "", "elif", "'Te2'", "in", "video_id", ":", "\n", "            ", "frame", "=", "Frame", ".", "TELEMED_3", "\n", "", "elif", "'Te3'", "in", "video_id", ":", "\n", "            ", "frame", "=", "Frame", ".", "TELEMED_3", "\n", "", "elif", "'Aix1'", "in", "video_id", ":", "\n", "            ", "frame", "=", "Frame", ".", "AIXPLORER", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "'Invalid videoID encountered: %s (%s)'", "%", "(", "video_id", ",", "file", ")", ")", "\n", "", "frames", "=", "[", "(", "self", ".", "createKey", "(", "(", "video_id", ",", "i", ")", ")", ",", "\n", "adjustFrame", "(", "image", ",", "frame", ",", "self", ".", "image_size", ")", ",", "\n", "adjustLabels", "(", "labels", "[", "self", ".", "createKey", "(", "(", "video_id", ",", "i", ")", ")", "]", ",", "frame", ")", ",", "video_id", ")", "\n", "for", "i", ",", "image", "in", "enumerate", "(", "video", ")", "if", "self", ".", "createKey", "(", "(", "video_id", ",", "i", ")", ")", "in", "labels", ".", "keys", "(", ")", "]", "\n", "return", "frames", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.data.loader.DataLoader.loadVideo": [[116, 126], ["cv2.VideoCapture", "cv2.VideoCapture.read", "os.path.basename", "video.append", "cv2.VideoCapture.read"], "methods", ["None"], ["", "def", "loadVideo", "(", "self", ",", "data_path", ")", ":", "\n", "        ", "vidcap", "=", "cv2", ".", "VideoCapture", "(", "data_path", ")", "\n", "\n", "video", "=", "[", "]", "\n", "success", ",", "image", "=", "vidcap", ".", "read", "(", ")", "\n", "while", "success", ":", "\n", "            ", "video", ".", "append", "(", "image", ")", "\n", "success", ",", "image", "=", "vidcap", ".", "read", "(", ")", "\n", "", "video_id", "=", "os", ".", "path", ".", "basename", "(", "data_path", ")", "\n", "return", "video_id", ",", "video", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.data.loader.DataLoader.createKey": [[127, 129], ["None"], "methods", ["None"], ["", "def", "createKey", "(", "self", ",", "active", ")", ":", "\n", "        ", "return", "\"%s_%05d\"", "%", "(", "active", "[", "0", "]", ",", "active", "[", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.data.loader.adjustLabels": [[131, 140], ["None"], "function", ["None"], ["", "", "def", "adjustLabels", "(", "label", ",", "frame", ")", ":", "\n", "    ", "x", ",", "y", ",", "w", ",", "h", "=", "frame", ".", "value", "\n", "label_x", "=", "(", "label", "[", "0", "]", "-", "x", ")", "/", "(", "w", "-", "1", ")", "\n", "label_y", "=", "(", "label", "[", "1", "]", "-", "y", ")", "/", "(", "h", "-", "1", ")", "\n", "\n", "# adjust out of frame labels", "\n", "label_x", "=", "1", "if", "label_x", ">", "1", "else", "0", "if", "label_x", "<", "0", "else", "label_x", "\n", "label_y", "=", "1", "if", "label_y", ">", "1", "else", "0", "if", "label_y", "<", "0", "else", "label_y", "\n", "return", "label_x", ",", "label_y", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.data.loader.loadVideo": [[142, 152], ["cv2.VideoCapture", "cv2.VideoCapture.read", "os.path.basename", "video.append", "cv2.VideoCapture.read"], "function", ["None"], ["", "def", "loadVideo", "(", "data_path", ")", ":", "\n", "    ", "vidcap", "=", "cv2", ".", "VideoCapture", "(", "data_path", ")", "\n", "\n", "video", "=", "[", "]", "\n", "success", ",", "image", "=", "vidcap", ".", "read", "(", ")", "\n", "while", "success", ":", "\n", "        ", "video", ".", "append", "(", "image", ")", "\n", "success", ",", "image", "=", "vidcap", ".", "read", "(", ")", "\n", "", "video_id", "=", "os", ".", "path", ".", "basename", "(", "data_path", ")", "\n", "return", "video_id", ",", "video", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.data.loader.adjustFrame": [[154, 163], ["cv2.cvtColor", "skimage.transform.resize", "skimage.transform.resize.astype"], "function", ["None"], ["", "def", "adjustFrame", "(", "image", ",", "frame", ",", "image_size", ")", ":", "\n", "    ", "image", "=", "cv2", ".", "cvtColor", "(", "image", ",", "cv2", ".", "COLOR_BGR2GRAY", ")", "\n", "\n", "x", ",", "y", ",", "w", ",", "h", "=", "frame", ".", "value", "\n", "image", "=", "image", "[", "y", ":", "y", "+", "h", ",", "x", ":", "x", "+", "w", "]", "\n", "\n", "image", "=", "resize", "(", "image", ",", "image_size", ",", "order", "=", "3", ")", "\n", "\n", "return", "image", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.main.MainWindow.__init__": [[45, 66], ["PyQt5.QtWidgets.QMainWindow.__init__", "Ui_MainWindow.__init__", "main.MainWindow.setupUi", "main.MainWindow.folder_select_button.clicked.connect", "main.MainWindow.start_button.clicked.connect", "main.MainWindow.plot_widget.coordinate_selection.connect", "main.MainWindow.backward_button.clicked.connect", "main.MainWindow.forward_button.clicked.connect", "main.MainWindow.set_button.clicked.connect", "main.MainWindow.action_change_label_path.triggered.connect", "os.path.join", "main.MainWindow.loadLabels", "os.environ.get"], "methods", ["home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.plot_widget.PlotWidget.__init__", "home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.plot_widget.PlotWidget.__init__", "home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.main.MainWindow.loadLabels"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "QtWidgets", ".", "QMainWindow", ".", "__init__", "(", "self", ")", "\n", "Ui_MainWindow", ".", "__init__", "(", "self", ")", "\n", "self", ".", "setupUi", "(", "self", ")", "\n", "\n", "self", ".", "folder_select_button", ".", "clicked", ".", "connect", "(", "self", ".", "selectFolder", ")", "\n", "self", ".", "start_button", ".", "clicked", ".", "connect", "(", "self", ".", "start", ")", "\n", "self", ".", "plot_widget", ".", "coordinate_selection", ".", "connect", "(", "self", ".", "labelFrame", ")", "\n", "self", ".", "backward_button", ".", "clicked", ".", "connect", "(", "self", ".", "loadPrevious", ")", "\n", "self", ".", "forward_button", ".", "clicked", ".", "connect", "(", "self", ".", "loadNext", ")", "\n", "self", ".", "set_button", ".", "clicked", ".", "connect", "(", "self", ".", "setFrame", ")", "\n", "self", ".", "action_change_label_path", ".", "triggered", ".", "connect", "(", "self", ".", "changeLabelPath", ")", "\n", "\n", "self", ".", "queue", "=", "[", "]", "\n", "self", ".", "queue_idx", "=", "None", "\n", "self", ".", "videos", "=", "{", "}", "\n", "self", ".", "labels", "=", "{", "}", "\n", "self", ".", "labels_path", "=", "os", ".", "path", ".", "join", "(", "os", ".", "environ", ".", "get", "(", "\"HOME\"", ")", ",", "\"labels.csv\"", ")", "\n", "self", ".", "loadLabels", "(", ")", "\n", "\n", "self", ".", "max_videos", "=", "5", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.main.MainWindow.loadVideo": [[67, 78], ["main.MainWindow.video_input.setText", "cv2.VideoCapture", "cv2.VideoCapture.read", "os.path.basename", "video.append", "cv2.VideoCapture.read"], "methods", ["None"], ["", "def", "loadVideo", "(", "self", ",", "path", ")", ":", "\n", "        ", "self", ".", "video_input", ".", "setText", "(", "path", ")", "\n", "vidcap", "=", "cv2", ".", "VideoCapture", "(", "path", ")", "\n", "\n", "video", "=", "[", "]", "\n", "success", ",", "image", "=", "vidcap", ".", "read", "(", ")", "\n", "while", "success", ":", "\n", "            ", "video", ".", "append", "(", "image", ")", "\n", "success", ",", "image", "=", "vidcap", ".", "read", "(", ")", "\n", "", "video_id", "=", "os", ".", "path", ".", "basename", "(", "path", ")", "\n", "self", ".", "videos", "[", "video_id", "]", "=", "video", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.main.MainWindow.loadNext": [[79, 93], ["main.MainWindow.changeFrame", "len", "len", "len", "main.MainWindow.loadVideoBatch", "main.MainWindow.queueVideos", "main.MainWindow.loadNext", "len"], "methods", ["home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.main.MainWindow.changeFrame", "home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.main.MainWindow.loadVideoBatch", "home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.main.MainWindow.queueVideos", "home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.main.MainWindow.loadNext"], ["", "def", "loadNext", "(", "self", ")", ":", "\n", "        ", "if", "len", "(", "self", ".", "queue", ")", "==", "0", ":", "\n", "            ", "return", "\n", "", "self", ".", "queue_idx", "=", "self", ".", "queue_idx", "+", "1", "if", "self", ".", "queue_idx", "is", "not", "None", "else", "0", "\n", "if", "self", ".", "queue_idx", ">=", "len", "(", "self", ".", "queue", ")", ":", "\n", "            ", "if", "len", "(", "self", ".", "files", ")", ">", "0", ":", "\n", "                ", "self", ".", "loadVideoBatch", "(", ")", "\n", "self", ".", "queueVideos", "(", ")", "\n", "self", ".", "loadNext", "(", ")", "\n", "return", "\n", "", "self", ".", "queue_idx", "=", "len", "(", "self", ".", "queue", ")", "-", "1", "\n", "", "active", "=", "self", ".", "queue", "[", "self", ".", "queue_idx", "]", "\n", "\n", "self", ".", "changeFrame", "(", "active", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.main.MainWindow.loadPrevious": [[94, 106], ["main.MainWindow.changeFrame", "len", "len"], "methods", ["home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.main.MainWindow.changeFrame"], ["", "def", "loadPrevious", "(", "self", ")", ":", "\n", "        ", "if", "len", "(", "self", ".", "queue", ")", "==", "0", ":", "\n", "            ", "return", "\n", "", "self", ".", "queue_idx", "=", "self", ".", "queue_idx", "-", "1", "if", "self", ".", "queue_idx", "is", "not", "None", "else", "-", "1", "\n", "if", "self", ".", "queue_idx", "<", "0", "and", "len", "(", "self", ".", "queue", ")", "==", "0", ":", "\n", "            ", "self", ".", "queue_idx", "=", "None", "\n", "return", "\n", "", "if", "self", ".", "queue_idx", "<", "0", ":", "\n", "            ", "self", ".", "queue_idx", "=", "0", "\n", "", "active", "=", "self", ".", "queue", "[", "self", ".", "queue_idx", "]", "\n", "\n", "self", ".", "changeFrame", "(", "active", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.main.MainWindow.changeFrame": [[107, 115], ["main.MainWindow.frame_spin.setMaximum", "main.MainWindow.frame_slider.setMaximum", "main.MainWindow.frame_spin.setValue", "main.MainWindow.frame_slider.setValue", "main.MainWindow.plot_widget.loadFrame", "main.MainWindow.video_input.setText", "main.MainWindow.labels.get", "len", "len", "main.MainWindow.createKey"], "methods", ["home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.plot_widget.PlotWidget.loadFrame", "home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.main.MainWindow.createKey"], ["", "def", "changeFrame", "(", "self", ",", "active", ")", ":", "\n", "        ", "video", "=", "self", ".", "videos", "[", "active", "[", "0", "]", "]", "\n", "self", ".", "frame_spin", ".", "setMaximum", "(", "len", "(", "video", ")", "-", "1", ")", "\n", "self", ".", "frame_slider", ".", "setMaximum", "(", "len", "(", "video", ")", "-", "1", ")", "\n", "self", ".", "frame_spin", ".", "setValue", "(", "active", "[", "1", "]", ")", "\n", "self", ".", "frame_slider", ".", "setValue", "(", "active", "[", "1", "]", ")", "\n", "self", ".", "plot_widget", ".", "loadFrame", "(", "video", "[", "active", "[", "1", "]", "]", ",", "self", ".", "labels", ".", "get", "(", "self", ".", "createKey", "(", "active", ")", ",", "None", ")", ")", "\n", "self", ".", "video_input", ".", "setText", "(", "active", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.main.MainWindow.selectFolder": [[116, 122], ["PyQt5.QtWidgets.QFileDialog.Options", "PyQt5.QtWidgets.QFileDialog.getExistingDirectory", "main.MainWindow.folder_input.setText", "main.MainWindow.folder_input.text"], "methods", ["None"], ["", "def", "selectFolder", "(", "self", ")", ":", "\n", "        ", "options", "=", "QFileDialog", ".", "Options", "(", ")", "\n", "options", "|=", "QFileDialog", ".", "DontUseNativeDialog", "\n", "path", "=", "QFileDialog", ".", "getExistingDirectory", "(", "directory", "=", "self", ".", "folder_input", ".", "text", "(", ")", ",", "options", "=", "options", ")", "\n", "if", "path", ":", "\n", "            ", "self", ".", "folder_input", ".", "setText", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.main.MainWindow.start": [[123, 133], ["main.MainWindow.plot_widget.clear", "main.MainWindow.loadVideoBatch", "main.MainWindow.queueVideos", "main.MainWindow.loadNext", "glob.glob", "glob.glob", "os.path.join", "os.path.join", "main.MainWindow.folder_input.text", "main.MainWindow.folder_input.text"], "methods", ["home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.plot_widget.PlotWidget.clear", "home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.main.MainWindow.loadVideoBatch", "home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.main.MainWindow.queueVideos", "home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.main.MainWindow.loadNext"], ["", "", "def", "start", "(", "self", ")", ":", "\n", "        ", "self", ".", "plot_widget", ".", "clear", "(", ")", "\n", "files", "=", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "self", ".", "folder_input", ".", "text", "(", ")", ",", "'**'", ",", "'*.avi'", ")", ",", "recursive", "=", "True", ")", "+", "glob", ".", "glob", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "folder_input", ".", "text", "(", ")", ",", "'**'", ",", "'*.AVI'", ")", ",", "recursive", "=", "True", ")", "\n", "self", ".", "files", "=", "files", "\n", "\n", "# queue maximum of videos", "\n", "self", ".", "loadVideoBatch", "(", ")", "\n", "self", ".", "queueVideos", "(", ")", "\n", "self", ".", "loadNext", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.main.MainWindow.loadVideoBatch": [[134, 138], ["range", "main.MainWindow.loadVideo", "main.MainWindow.files.pop"], "methods", ["home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.main.MainWindow.loadVideo"], ["", "def", "loadVideoBatch", "(", "self", ")", ":", "\n", "        ", "self", ".", "videos", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "self", ".", "max_videos", ")", ":", "\n", "            ", "self", ".", "loadVideo", "(", "self", ".", "files", ".", "pop", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.main.MainWindow.queueVideos": [[139, 157], ["main.MainWindow.per_video_spin.value", "main.MainWindow.videos.items", "main.MainWindow.labeled_radio.isChecked", "main.MainWindow.unlabeled_radio.isChecked", "main.MainWindow.random_radio.isChecked", "main.MainWindow.sample_radio.isChecked", "main.MainWindow.per_video_radio.isChecked", "sklearn.utils.shuffle", "int", "numpy.ceil", "main.MainWindow.sample_spin.value", "main.MainWindow.createKey", "main.MainWindow.createKey", "len", "range", "range", "len", "len"], "methods", ["home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.main.MainWindow.createKey", "home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.main.MainWindow.createKey"], ["", "", "def", "queueVideos", "(", "self", ")", ":", "\n", "        ", "self", ".", "queue", "=", "[", "]", "\n", "n_per_video", "=", "self", ".", "per_video_spin", ".", "value", "(", ")", "\n", "for", "video_id", ",", "video", "in", "self", ".", "videos", ".", "items", "(", ")", ":", "\n", "            ", "if", "self", ".", "per_video_radio", ".", "isChecked", "(", ")", ":", "\n", "                ", "sample_step", "=", "int", "(", "np", ".", "ceil", "(", "len", "(", "video", ")", "/", "(", "n_per_video", "+", "1", ")", ")", ")", "\n", "self", ".", "queue", "=", "self", ".", "queue", "+", "[", "(", "video_id", ",", "i", ")", "for", "i", "in", "range", "(", "sample_step", ",", "len", "(", "video", ")", ",", "sample_step", ")", "]", "\n", "", "else", ":", "\n", "                ", "self", ".", "queue", "=", "self", ".", "queue", "+", "[", "(", "video_id", ",", "i", ")", "for", "i", "in", "range", "(", "len", "(", "video", ")", ")", "]", "\n", "", "", "if", "self", ".", "labeled_radio", ".", "isChecked", "(", ")", ":", "\n", "            ", "self", ".", "queue", "=", "[", "q", "for", "q", "in", "self", ".", "queue", "if", "self", ".", "createKey", "(", "q", ")", "in", "self", ".", "labels", "]", "\n", "", "if", "self", ".", "unlabeled_radio", ".", "isChecked", "(", ")", ":", "\n", "            ", "self", ".", "queue", "=", "[", "q", "for", "q", "in", "self", ".", "queue", "if", "self", ".", "createKey", "(", "q", ")", "not", "in", "self", ".", "labels", "]", "\n", "", "if", "self", ".", "random_radio", ".", "isChecked", "(", ")", ":", "\n", "            ", "self", ".", "queue", "=", "shuffle", "(", "self", ".", "queue", ")", "\n", "", "if", "self", ".", "sample_radio", ".", "isChecked", "(", ")", ":", "\n", "            ", "self", ".", "queue", "=", "self", ".", "queue", "[", ":", ":", "self", ".", "sample_spin", ".", "value", "(", ")", "]", "\n", "", "self", ".", "queue_idx", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.main.MainWindow.labelFrame": [[158, 167], ["os.path.exists", "main.MainWindow.loadNext", "os.remove", "open", "main.MainWindow.labels.items", "main.MainWindow.createKey", "f.write"], "methods", ["home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.main.MainWindow.loadNext", "home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.main.MainWindow.createKey"], ["", "def", "labelFrame", "(", "self", ",", "coordinates", ")", ":", "\n", "        ", "active", "=", "self", ".", "queue", "[", "self", ".", "queue_idx", "]", "\n", "self", ".", "labels", "[", "self", ".", "createKey", "(", "active", ")", "]", "=", "coordinates", "\n", "if", "os", ".", "path", ".", "exists", "(", "self", ".", "labels_path", ")", ":", "\n", "            ", "os", ".", "remove", "(", "self", ".", "labels_path", ")", "\n", "", "with", "open", "(", "self", ".", "labels_path", ",", "'w'", ")", "as", "f", ":", "\n", "            ", "for", "key", ",", "value", "in", "self", ".", "labels", ".", "items", "(", ")", ":", "\n", "                ", "f", ".", "write", "(", "\"%s,%d,%d\\n\"", "%", "(", "key", ",", "value", "[", "0", "]", ",", "value", "[", "1", "]", ")", ")", "\n", "", "", "self", ".", "loadNext", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.main.MainWindow.createKey": [[168, 170], ["None"], "methods", ["None"], ["", "def", "createKey", "(", "self", ",", "active", ")", ":", "\n", "        ", "return", "\"%s_%05d\"", "%", "(", "active", "[", "0", "]", ",", "active", "[", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.main.MainWindow.setFrame": [[171, 178], ["main.MainWindow.queue.insert", "main.MainWindow.loadNext", "main.MainWindow.frame_spin.value"], "methods", ["home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.main.MainWindow.loadNext"], ["", "def", "setFrame", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "queue_idx", "is", "None", ":", "\n", "            ", "return", "\n", "", "active", "=", "self", ".", "queue", "[", "self", ".", "queue_idx", "]", "\n", "self", ".", "queue", ".", "insert", "(", "self", ".", "queue_idx", "+", "1", ",", "(", "active", "[", "0", "]", ",", "self", ".", "frame_spin", ".", "value", "(", ")", ")", ")", "\n", "\n", "self", ".", "loadNext", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.main.MainWindow.changeLabelPath": [[179, 185], ["PyQt5.QtWidgets.QFileDialog.getSaveFileName", "main.MainWindow.loadLabels"], "methods", ["home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.main.MainWindow.loadLabels"], ["", "def", "changeLabelPath", "(", "self", ")", ":", "\n", "        ", "file_path", ",", "_", "=", "QFileDialog", ".", "getSaveFileName", "(", "directory", "=", "self", ".", "labels_path", ")", "\n", "if", "not", "file_path", ":", "\n", "            ", "return", "\n", "", "self", ".", "labels_path", "=", "file_path", "\n", "self", ".", "loadLabels", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.main.MainWindow.loadLabels": [[186, 192], ["os.path.exists", "pandas.read_csv", "pandas.read_csv.iterrows"], "methods", ["None"], ["", "def", "loadLabels", "(", "self", ")", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "labels_path", ")", ":", "\n", "            ", "self", ".", "labels", "=", "{", "}", "\n", "", "else", ":", "\n", "            ", "df", "=", "read_csv", "(", "self", ".", "labels_path", ",", "header", "=", "None", ")", "\n", "self", ".", "labels", "=", "{", "d", "[", "0", "]", ":", "(", "d", "[", "1", "]", ",", "d", "[", "2", "]", ")", "for", "idx", ",", "d", "in", "df", ".", "iterrows", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.main.main": [[194, 199], ["PyQt5.QtWidgets.QApplication", "main.MainWindow", "MainWindow.show", "QtWidgets.QApplication.exec_"], "function", ["None"], ["", "", "", "def", "main", "(", ")", ":", "\n", "    ", "app", "=", "QtWidgets", ".", "QApplication", "(", "sys", ".", "argv", ")", "\n", "window", "=", "MainWindow", "(", ")", "\n", "window", ".", "show", "(", ")", "\n", "app", ".", "exec_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.plot_widget.MplCanvas.__init__": [[35, 40], ["matplotlib.figure.Figure", "matplotlib.backends.backend_qt5agg.FigureCanvasQTAgg.__init__", "matplotlib.backends.backend_qt5agg.FigureCanvasQTAgg.setSizePolicy", "matplotlib.backends.backend_qt5agg.FigureCanvasQTAgg.updateGeometry"], "methods", ["home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.plot_widget.PlotWidget.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "fig", "=", "Figure", "(", ")", "\n", "Canvas", ".", "__init__", "(", "self", ",", "self", ".", "fig", ")", "\n", "Canvas", ".", "setSizePolicy", "(", "self", ",", "QtWidgets", ".", "QSizePolicy", ".", "Expanding", ",", "QtWidgets", ".", "QSizePolicy", ".", "Expanding", ")", "\n", "Canvas", ".", "updateGeometry", "(", "self", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.plot_widget.PlotWidget.__init__": [[46, 57], ["PyQt5.QtWidgets.QWidget.__init__", "plot_widget.MplCanvas", "matplotlib.backends.backend_qt5.NavigationToolbar2QT", "PyQt5.QtWidgets.QVBoxLayout", "plot_widget.PlotWidget.vbl.addWidget", "plot_widget.PlotWidget.vbl.addWidget", "plot_widget.PlotWidget.setLayout", "plot_widget.PlotWidget.canvas.fig.canvas.mpl_connect"], "methods", ["home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.plot_widget.PlotWidget.__init__"], ["def", "__init__", "(", "self", ",", "parent", "=", "None", ")", ":", "\n", "        ", "QtWidgets", ".", "QWidget", ".", "__init__", "(", "self", ",", "parent", ")", "\n", "self", ".", "canvas", "=", "MplCanvas", "(", ")", "\n", "self", ".", "toolbar", "=", "NavigationToolbar2QT", "(", "self", ".", "canvas", ",", "self", ")", "\n", "\n", "self", ".", "vbl", "=", "QtWidgets", ".", "QVBoxLayout", "(", ")", "\n", "self", ".", "vbl", ".", "addWidget", "(", "self", ".", "canvas", ")", "\n", "self", ".", "vbl", ".", "addWidget", "(", "self", ".", "toolbar", ")", "\n", "self", ".", "setLayout", "(", "self", ".", "vbl", ")", "\n", "\n", "self", ".", "canvas", ".", "fig", ".", "canvas", ".", "mpl_connect", "(", "'button_press_event'", ",", "self", ".", "onclick", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.plot_widget.PlotWidget.loadFrame": [[58, 66], ["plot_widget.PlotWidget.canvas.fig.clear", "plot_widget.PlotWidget.canvas.figure.add_axes", "plot_widget.PlotWidget.axis", "plot_widget.PlotWidget.imshow", "plot_widget.PlotWidget.canvas.draw", "plot_widget.PlotWidget.scatter"], "methods", ["home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.plot_widget.PlotWidget.clear"], ["", "def", "loadFrame", "(", "self", ",", "frame", ",", "coord", ")", ":", "\n", "        ", "self", ".", "canvas", ".", "fig", ".", "clear", "(", ")", "\n", "ax", "=", "self", ".", "canvas", ".", "figure", ".", "add_axes", "(", "[", "0", ",", "0", ",", "1", ",", "1", "]", ")", "\n", "ax", ".", "axis", "(", "'off'", ")", "\n", "ax", ".", "imshow", "(", "frame", ")", "\n", "if", "coord", "is", "not", "None", ":", "\n", "            ", "ax", ".", "scatter", "(", "coord", "[", "0", "]", ",", "coord", "[", "1", "]", ",", "color", "=", "\"red\"", ")", "\n", "", "self", ".", "canvas", ".", "draw", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.plot_widget.PlotWidget.onclick": [[67, 72], ["plot_widget.PlotWidget.coordinate_selection.emit", "numpy.round", "numpy.round"], "methods", ["None"], ["", "def", "onclick", "(", "self", ",", "event", ")", ":", "\n", "        ", "ix", ",", "iy", "=", "event", ".", "xdata", ",", "event", ".", "ydata", "\n", "if", "ix", "is", "None", "or", "iy", "is", "None", ":", "\n", "            ", "return", "\n", "", "self", ".", "coordinate_selection", ".", "emit", "(", "(", "np", ".", "round", "(", "ix", ")", ",", "np", ".", "round", "(", "iy", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.plot_widget.PlotWidget.clear": [[73, 76], ["plot_widget.PlotWidget.canvas.fig.clear", "plot_widget.PlotWidget.canvas.draw"], "methods", ["home.repos.pwc.inspect_result.luuleitner_deepMTJ.label.plot_widget.PlotWidget.clear"], ["", "def", "clear", "(", "self", ")", ":", "\n", "        ", "self", ".", "canvas", ".", "fig", ".", "clear", "(", ")", "\n", "self", ".", "canvas", ".", "draw", "(", ")", "\n", "", "", ""]]}