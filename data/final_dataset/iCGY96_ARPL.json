{"home.repos.pwc.inspect_result.iCGY96_ARPL.None.osr.main_worker": [[57, 188], ["torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "print", "print", "options.update", "importlib.import_module", "os.path.join", "time.time", "range", "round", "str", "print", "print", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "print", "datasets.osr_dataloader.MNIST_OSR", "models.models.classifier32ABN", "models.models.classifier32", "print", "torch.FloatTensor().normal_", "torch.FloatTensor().normal_", "torch.FloatTensor().normal_", "torch.FloatTensor().normal_", "torch.FloatTensor().normal_", "torch.BCELoss", "getattr", "torch.DataParallel().cuda", "criterion.cuda.cuda", "os.path.exists", "os.makedirs", "utils.load_networks", "core.test", "print", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.lr_scheduler.MultiStepLR", "print", "core.train", "datetime.timedelta", "datasets.osr_dataloader.CIFAR10_OSR", "models.gan.Generator", "models.gan.Discriminator", "models.gan.Generator32", "models.gan.Discriminator32", "torch.DataParallel().cuda", "torch.DataParallel().cuda", "torch.FloatTensor().normal_.cuda", "nn.DataParallel().cuda.parameters", "criterion.cuda.parameters", "nn.DataParallel().cuda.parameters", "nn.DataParallel().cuda.parameters", "core.train_cs", "print", "core.test", "print", "utils.save_networks", "lr_scheduler.MultiStepLR.step", "time.time", "datasets.osr_dataloader.SVHN_OSR", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.DataParallel", "datasets.osr_dataloader.CIFAR10_OSR", "datasets.osr_dataloader.CIFAR100_OSR", "datasets.osr_dataloader.Tiny_ImageNet_OSR", "torch.DataParallel", "torch.DataParallel", "range", "range", "len", "len", "options[].split", "options[].split"], "function", ["home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.load_networks", "home.repos.pwc.inspect_result.iCGY96_ARPL.core.test.test", "home.repos.pwc.inspect_result.iCGY96_ARPL.core.train.train", "home.repos.pwc.inspect_result.iCGY96_ARPL.models.gan.Generator", "home.repos.pwc.inspect_result.iCGY96_ARPL.models.gan.Discriminator", "home.repos.pwc.inspect_result.iCGY96_ARPL.models.gan.Generator32", "home.repos.pwc.inspect_result.iCGY96_ARPL.models.gan.Discriminator32", "home.repos.pwc.inspect_result.iCGY96_ARPL.core.train.train_cs", "home.repos.pwc.inspect_result.iCGY96_ARPL.core.test.test", "home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.save_networks"], ["def", "main_worker", "(", "options", ")", ":", "\n", "    ", "torch", ".", "manual_seed", "(", "options", "[", "'seed'", "]", ")", "\n", "os", ".", "environ", "[", "'CUDA_VISIBLE_DEVICES'", "]", "=", "options", "[", "'gpu'", "]", "\n", "use_gpu", "=", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "if", "options", "[", "'use_cpu'", "]", ":", "use_gpu", "=", "False", "\n", "\n", "if", "use_gpu", ":", "\n", "        ", "print", "(", "\"Currently using GPU: {}\"", ".", "format", "(", "options", "[", "'gpu'", "]", ")", ")", "\n", "cudnn", ".", "benchmark", "=", "True", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "options", "[", "'seed'", "]", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"Currently using CPU\"", ")", "\n", "\n", "# Dataset", "\n", "", "print", "(", "\"{} Preparation\"", ".", "format", "(", "options", "[", "'dataset'", "]", ")", ")", "\n", "if", "'mnist'", "in", "options", "[", "'dataset'", "]", ":", "\n", "        ", "Data", "=", "MNIST_OSR", "(", "known", "=", "options", "[", "'known'", "]", ",", "dataroot", "=", "options", "[", "'dataroot'", "]", ",", "batch_size", "=", "options", "[", "'batch_size'", "]", ",", "img_size", "=", "options", "[", "'img_size'", "]", ")", "\n", "trainloader", ",", "testloader", ",", "outloader", "=", "Data", ".", "train_loader", ",", "Data", ".", "test_loader", ",", "Data", ".", "out_loader", "\n", "", "elif", "'cifar10'", "==", "options", "[", "'dataset'", "]", ":", "\n", "        ", "Data", "=", "CIFAR10_OSR", "(", "known", "=", "options", "[", "'known'", "]", ",", "dataroot", "=", "options", "[", "'dataroot'", "]", ",", "batch_size", "=", "options", "[", "'batch_size'", "]", ",", "img_size", "=", "options", "[", "'img_size'", "]", ")", "\n", "trainloader", ",", "testloader", ",", "outloader", "=", "Data", ".", "train_loader", ",", "Data", ".", "test_loader", ",", "Data", ".", "out_loader", "\n", "", "elif", "'svhn'", "in", "options", "[", "'dataset'", "]", ":", "\n", "        ", "Data", "=", "SVHN_OSR", "(", "known", "=", "options", "[", "'known'", "]", ",", "dataroot", "=", "options", "[", "'dataroot'", "]", ",", "batch_size", "=", "options", "[", "'batch_size'", "]", ",", "img_size", "=", "options", "[", "'img_size'", "]", ")", "\n", "trainloader", ",", "testloader", ",", "outloader", "=", "Data", ".", "train_loader", ",", "Data", ".", "test_loader", ",", "Data", ".", "out_loader", "\n", "", "elif", "'cifar100'", "in", "options", "[", "'dataset'", "]", ":", "\n", "        ", "Data", "=", "CIFAR10_OSR", "(", "known", "=", "options", "[", "'known'", "]", ",", "dataroot", "=", "options", "[", "'dataroot'", "]", ",", "batch_size", "=", "options", "[", "'batch_size'", "]", ",", "img_size", "=", "options", "[", "'img_size'", "]", ")", "\n", "trainloader", ",", "testloader", "=", "Data", ".", "train_loader", ",", "Data", ".", "test_loader", "\n", "out_Data", "=", "CIFAR100_OSR", "(", "known", "=", "options", "[", "'unknown'", "]", ",", "dataroot", "=", "options", "[", "'dataroot'", "]", ",", "batch_size", "=", "options", "[", "'batch_size'", "]", ",", "img_size", "=", "options", "[", "'img_size'", "]", ")", "\n", "outloader", "=", "out_Data", ".", "test_loader", "\n", "", "else", ":", "\n", "        ", "Data", "=", "Tiny_ImageNet_OSR", "(", "known", "=", "options", "[", "'known'", "]", ",", "dataroot", "=", "options", "[", "'dataroot'", "]", ",", "batch_size", "=", "options", "[", "'batch_size'", "]", ",", "img_size", "=", "options", "[", "'img_size'", "]", ")", "\n", "trainloader", ",", "testloader", ",", "outloader", "=", "Data", ".", "train_loader", ",", "Data", ".", "test_loader", ",", "Data", ".", "out_loader", "\n", "\n", "", "options", "[", "'num_classes'", "]", "=", "Data", ".", "num_classes", "\n", "\n", "# Model", "\n", "print", "(", "\"Creating model: {}\"", ".", "format", "(", "options", "[", "'model'", "]", ")", ")", "\n", "if", "options", "[", "'cs'", "]", ":", "\n", "        ", "net", "=", "classifier32ABN", "(", "num_classes", "=", "options", "[", "'num_classes'", "]", ")", "\n", "", "else", ":", "\n", "        ", "net", "=", "classifier32", "(", "num_classes", "=", "options", "[", "'num_classes'", "]", ")", "\n", "", "feat_dim", "=", "128", "\n", "\n", "if", "options", "[", "'cs'", "]", ":", "\n", "        ", "print", "(", "\"Creating GAN\"", ")", "\n", "nz", ",", "ns", "=", "options", "[", "'nz'", "]", ",", "1", "\n", "if", "'tiny_imagenet'", "in", "options", "[", "'dataset'", "]", ":", "\n", "            ", "netG", "=", "gan", ".", "Generator", "(", "1", ",", "nz", ",", "64", ",", "3", ")", "\n", "netD", "=", "gan", ".", "Discriminator", "(", "1", ",", "3", ",", "64", ")", "\n", "", "else", ":", "\n", "            ", "netG", "=", "gan", ".", "Generator32", "(", "1", ",", "nz", ",", "64", ",", "3", ")", "\n", "netD", "=", "gan", ".", "Discriminator32", "(", "1", ",", "3", ",", "64", ")", "\n", "", "fixed_noise", "=", "torch", ".", "FloatTensor", "(", "64", ",", "nz", ",", "1", ",", "1", ")", ".", "normal_", "(", "0", ",", "1", ")", "\n", "criterionD", "=", "nn", ".", "BCELoss", "(", ")", "\n", "\n", "# Loss", "\n", "", "options", ".", "update", "(", "\n", "{", "\n", "'feat_dim'", ":", "feat_dim", ",", "\n", "'use_gpu'", ":", "use_gpu", "\n", "}", "\n", ")", "\n", "\n", "Loss", "=", "importlib", ".", "import_module", "(", "'loss.'", "+", "options", "[", "'loss'", "]", ")", "\n", "criterion", "=", "getattr", "(", "Loss", ",", "options", "[", "'loss'", "]", ")", "(", "**", "options", ")", "\n", "\n", "if", "use_gpu", ":", "\n", "        ", "net", "=", "nn", ".", "DataParallel", "(", "net", ")", ".", "cuda", "(", ")", "\n", "criterion", "=", "criterion", ".", "cuda", "(", ")", "\n", "if", "options", "[", "'cs'", "]", ":", "\n", "            ", "netG", "=", "nn", ".", "DataParallel", "(", "netG", ",", "device_ids", "=", "[", "i", "for", "i", "in", "range", "(", "len", "(", "options", "[", "'gpu'", "]", ".", "split", "(", "','", ")", ")", ")", "]", ")", ".", "cuda", "(", ")", "\n", "netD", "=", "nn", ".", "DataParallel", "(", "netD", ",", "device_ids", "=", "[", "i", "for", "i", "in", "range", "(", "len", "(", "options", "[", "'gpu'", "]", ".", "split", "(", "','", ")", ")", ")", "]", ")", ".", "cuda", "(", ")", "\n", "fixed_noise", ".", "cuda", "(", ")", "\n", "\n", "", "", "model_path", "=", "os", ".", "path", ".", "join", "(", "options", "[", "'outf'", "]", ",", "'models'", ",", "options", "[", "'dataset'", "]", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "model_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "model_path", ")", "\n", "\n", "", "if", "options", "[", "'dataset'", "]", "==", "'cifar100'", ":", "\n", "        ", "model_path", "+=", "'_50'", "\n", "file_name", "=", "'{}_{}_{}_{}_{}'", ".", "format", "(", "options", "[", "'model'", "]", ",", "options", "[", "'loss'", "]", ",", "50", ",", "options", "[", "'item'", "]", ",", "options", "[", "'cs'", "]", ")", "\n", "", "else", ":", "\n", "        ", "file_name", "=", "'{}_{}_{}_{}'", ".", "format", "(", "options", "[", "'model'", "]", ",", "options", "[", "'loss'", "]", ",", "options", "[", "'item'", "]", ",", "options", "[", "'cs'", "]", ")", "\n", "\n", "", "if", "options", "[", "'eval'", "]", ":", "\n", "        ", "net", ",", "criterion", "=", "load_networks", "(", "net", ",", "model_path", ",", "file_name", ",", "criterion", "=", "criterion", ")", "\n", "results", "=", "test", "(", "net", ",", "criterion", ",", "testloader", ",", "outloader", ",", "epoch", "=", "0", ",", "**", "options", ")", "\n", "print", "(", "\"Acc (%): {:.3f}\\t AUROC (%): {:.3f}\\t OSCR (%): {:.3f}\\t\"", ".", "format", "(", "results", "[", "'ACC'", "]", ",", "results", "[", "'AUROC'", "]", ",", "results", "[", "'OSCR'", "]", ")", ")", "\n", "\n", "return", "results", "\n", "\n", "", "params_list", "=", "[", "{", "'params'", ":", "net", ".", "parameters", "(", ")", "}", ",", "\n", "{", "'params'", ":", "criterion", ".", "parameters", "(", ")", "}", "]", "\n", "\n", "if", "options", "[", "'dataset'", "]", "==", "'tiny_imagenet'", ":", "\n", "        ", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "params_list", ",", "lr", "=", "options", "[", "'lr'", "]", ")", "\n", "", "else", ":", "\n", "        ", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "params_list", ",", "lr", "=", "options", "[", "'lr'", "]", ",", "momentum", "=", "0.9", ",", "weight_decay", "=", "1e-4", ")", "\n", "", "if", "options", "[", "'cs'", "]", ":", "\n", "        ", "optimizerD", "=", "torch", ".", "optim", ".", "Adam", "(", "netD", ".", "parameters", "(", ")", ",", "lr", "=", "options", "[", "'gan_lr'", "]", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ")", "\n", "optimizerG", "=", "torch", ".", "optim", ".", "Adam", "(", "netG", ".", "parameters", "(", ")", ",", "lr", "=", "options", "[", "'gan_lr'", "]", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ")", "\n", "\n", "", "if", "options", "[", "'stepsize'", "]", ">", "0", ":", "\n", "        ", "scheduler", "=", "lr_scheduler", ".", "MultiStepLR", "(", "optimizer", ",", "milestones", "=", "[", "30", ",", "60", ",", "90", ",", "120", "]", ")", "\n", "\n", "", "start_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "options", "[", "'max_epoch'", "]", ")", ":", "\n", "        ", "print", "(", "\"==> Epoch {}/{}\"", ".", "format", "(", "epoch", "+", "1", ",", "options", "[", "'max_epoch'", "]", ")", ")", "\n", "\n", "if", "options", "[", "'cs'", "]", ":", "\n", "            ", "train_cs", "(", "net", ",", "netD", ",", "netG", ",", "criterion", ",", "criterionD", ",", "\n", "optimizer", ",", "optimizerD", ",", "optimizerG", ",", "\n", "trainloader", ",", "epoch", "=", "epoch", ",", "**", "options", ")", "\n", "\n", "", "train", "(", "net", ",", "criterion", ",", "optimizer", ",", "trainloader", ",", "epoch", "=", "epoch", ",", "**", "options", ")", "\n", "\n", "if", "options", "[", "'eval_freq'", "]", ">", "0", "and", "(", "epoch", "+", "1", ")", "%", "options", "[", "'eval_freq'", "]", "==", "0", "or", "(", "epoch", "+", "1", ")", "==", "options", "[", "'max_epoch'", "]", ":", "\n", "            ", "print", "(", "\"==> Test\"", ",", "options", "[", "'loss'", "]", ")", "\n", "results", "=", "test", "(", "net", ",", "criterion", ",", "testloader", ",", "outloader", ",", "epoch", "=", "epoch", ",", "**", "options", ")", "\n", "print", "(", "\"Acc (%): {:.3f}\\t AUROC (%): {:.3f}\\t OSCR (%): {:.3f}\\t\"", ".", "format", "(", "results", "[", "'ACC'", "]", ",", "results", "[", "'AUROC'", "]", ",", "results", "[", "'OSCR'", "]", ")", ")", "\n", "\n", "save_networks", "(", "net", ",", "model_path", ",", "file_name", ",", "criterion", "=", "criterion", ")", "\n", "\n", "", "if", "options", "[", "'stepsize'", "]", ">", "0", ":", "scheduler", ".", "step", "(", ")", "\n", "\n", "", "elapsed", "=", "round", "(", "time", ".", "time", "(", ")", "-", "start_time", ")", "\n", "elapsed", "=", "str", "(", "datetime", ".", "timedelta", "(", "seconds", "=", "elapsed", ")", ")", "\n", "print", "(", "\"Finished. Total elapsed time (h:m:s): {}\"", ".", "format", "(", "elapsed", ")", ")", "\n", "\n", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.None.ood.main": [[69, 181], ["torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "options.update", "datasets.create", "datasets.create", "options.update", "print", "importlib.import_module", "os.path.join", "os.path.join", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "time.time", "range", "round", "str", "print", "print", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "print", "models.models.ConvNet", "print", "models.gan.Generator32", "models.gan.Discriminator32", "torch.FloatTensor().normal_", "torch.FloatTensor().normal_", "torch.FloatTensor().normal_", "torch.BCELoss", "getattr", "torch.DataParallel().cuda", "criterion.cuda.cuda", "str", "str", "utils.load_networks", "core.test", "print", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.lr_scheduler.MultiStepLR", "print", "core.train", "datetime.timedelta", "models.resnetABN.resnet34ABN", "models.resnet.ResNet34", "torch.DataParallel().cuda", "torch.DataParallel().cuda", "torch.FloatTensor().normal_.cuda", "models.resnet.ResNet34.parameters", "criterion.cuda.parameters", "nn.DataParallel().cuda.parameters", "nn.DataParallel().cuda.parameters", "core.train_cs", "print", "core.test", "print", "utils.save_networks", "lr_scheduler.MultiStepLR.step", "time.time", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.DataParallel", "utils.save_GAN", "nn.DataParallel().cuda.", "os.path.join", "os.path.join", "utils.mkdir_if_missing", "torchvision.save_image", "torch.DataParallel", "torch.DataParallel", "range", "len", "range", "range", "options[].split", "len", "len", "options[].split", "options[].split"], "function", ["home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.iCGY96_ARPL.datasets.datasets.create", "home.repos.pwc.inspect_result.iCGY96_ARPL.datasets.datasets.create", "home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.iCGY96_ARPL.models.gan.Generator32", "home.repos.pwc.inspect_result.iCGY96_ARPL.models.gan.Discriminator32", "home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.load_networks", "home.repos.pwc.inspect_result.iCGY96_ARPL.core.test.test", "home.repos.pwc.inspect_result.iCGY96_ARPL.core.train.train", "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.resnet34ABN", "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnet.ResNet34", "home.repos.pwc.inspect_result.iCGY96_ARPL.core.train.train_cs", "home.repos.pwc.inspect_result.iCGY96_ARPL.core.test.test", "home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.save_networks", "home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.save_GAN", "home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.mkdir_if_missing"], ["def", "main", "(", ")", ":", "\n", "    ", "torch", ".", "manual_seed", "(", "options", "[", "'seed'", "]", ")", "\n", "os", ".", "environ", "[", "'CUDA_VISIBLE_DEVICES'", "]", "=", "options", "[", "'gpu'", "]", "\n", "use_gpu", "=", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "if", "options", "[", "'use_cpu'", "]", ":", "use_gpu", "=", "False", "\n", "\n", "feat_dim", "=", "2", "if", "'cnn'", "in", "options", "[", "'model'", "]", "else", "512", "\n", "\n", "options", ".", "update", "(", "\n", "{", "\n", "'feat_dim'", ":", "feat_dim", ",", "\n", "'use_gpu'", ":", "use_gpu", "\n", "}", "\n", ")", "\n", "\n", "if", "use_gpu", ":", "\n", "        ", "print", "(", "\"Currently using GPU: {}\"", ".", "format", "(", "options", "[", "'gpu'", "]", ")", ")", "\n", "cudnn", ".", "benchmark", "=", "True", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "options", "[", "'seed'", "]", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"Currently using CPU\"", ")", "\n", "\n", "", "dataset", "=", "datasets", ".", "create", "(", "options", "[", "'dataset'", "]", ",", "**", "options", ")", "\n", "out_dataset", "=", "datasets", ".", "create", "(", "options", "[", "'out_dataset'", "]", ",", "**", "options", ")", "\n", "\n", "trainloader", ",", "testloader", "=", "dataset", ".", "trainloader", ",", "dataset", ".", "testloader", "\n", "outloader", "=", "out_dataset", ".", "testloader", "\n", "\n", "options", ".", "update", "(", "\n", "{", "\n", "'num_classes'", ":", "dataset", ".", "num_classes", "\n", "}", "\n", ")", "\n", "\n", "print", "(", "\"Creating model: {}\"", ".", "format", "(", "options", "[", "'model'", "]", ")", ")", "\n", "if", "'cnn'", "in", "options", "[", "'model'", "]", ":", "\n", "        ", "net", "=", "ConvNet", "(", "num_classes", "=", "dataset", ".", "num_classes", ")", "\n", "", "else", ":", "\n", "        ", "if", "options", "[", "'cs'", "]", ":", "\n", "            ", "net", "=", "resnet34ABN", "(", "num_classes", "=", "dataset", ".", "num_classes", ",", "num_bns", "=", "2", ")", "\n", "", "else", ":", "\n", "            ", "net", "=", "ResNet34", "(", "dataset", ".", "num_classes", ")", "\n", "\n", "\n", "", "", "if", "options", "[", "'cs'", "]", ":", "\n", "        ", "print", "(", "\"Creating GAN\"", ")", "\n", "nz", "=", "options", "[", "'nz'", "]", "\n", "netG", "=", "gan", ".", "Generator32", "(", "1", ",", "nz", ",", "64", ",", "3", ")", "# ngpu, nz, ngf, nc", "\n", "netD", "=", "gan", ".", "Discriminator32", "(", "1", ",", "3", ",", "64", ")", "# ngpu, nc, ndf", "\n", "fixed_noise", "=", "torch", ".", "FloatTensor", "(", "64", ",", "nz", ",", "1", ",", "1", ")", ".", "normal_", "(", "0", ",", "1", ")", "\n", "criterionD", "=", "nn", ".", "BCELoss", "(", ")", "\n", "\n", "", "Loss", "=", "importlib", ".", "import_module", "(", "'loss.'", "+", "options", "[", "'loss'", "]", ")", "\n", "criterion", "=", "getattr", "(", "Loss", ",", "options", "[", "'loss'", "]", ")", "(", "**", "options", ")", "\n", "\n", "if", "use_gpu", ":", "\n", "        ", "net", "=", "nn", ".", "DataParallel", "(", "net", ",", "device_ids", "=", "[", "i", "for", "i", "in", "range", "(", "len", "(", "options", "[", "'gpu'", "]", ".", "split", "(", "','", ")", ")", ")", "]", ")", ".", "cuda", "(", ")", "\n", "criterion", "=", "criterion", ".", "cuda", "(", ")", "\n", "if", "options", "[", "'cs'", "]", ":", "\n", "            ", "netG", "=", "nn", ".", "DataParallel", "(", "netG", ",", "device_ids", "=", "[", "i", "for", "i", "in", "range", "(", "len", "(", "options", "[", "'gpu'", "]", ".", "split", "(", "','", ")", ")", ")", "]", ")", ".", "cuda", "(", ")", "\n", "netD", "=", "nn", ".", "DataParallel", "(", "netD", ",", "device_ids", "=", "[", "i", "for", "i", "in", "range", "(", "len", "(", "options", "[", "'gpu'", "]", ".", "split", "(", "','", ")", ")", ")", "]", ")", ".", "cuda", "(", ")", "\n", "fixed_noise", ".", "cuda", "(", ")", "\n", "\n", "", "", "model_path", "=", "os", ".", "path", ".", "join", "(", "options", "[", "'outf'", "]", ",", "'models'", ",", "options", "[", "'dataset'", "]", ")", "\n", "file_name", "=", "'{}_{}_{}_{}_{}'", ".", "format", "(", "options", "[", "'model'", "]", ",", "options", "[", "'dataset'", "]", ",", "options", "[", "'loss'", "]", ",", "str", "(", "options", "[", "'weight_pl'", "]", ")", ",", "str", "(", "options", "[", "'cs'", "]", ")", ")", "\n", "if", "options", "[", "'eval'", "]", ":", "\n", "        ", "net", ",", "criterion", "=", "load_networks", "(", "net", ",", "model_path", ",", "file_name", ",", "criterion", "=", "criterion", ")", "\n", "results", "=", "test", "(", "net", ",", "criterion", ",", "testloader", ",", "outloader", ",", "epoch", "=", "0", ",", "**", "options", ")", "\n", "print", "(", "\"Acc (%): {:.3f}\\t AUROC (%): {:.3f}\\t OSCR (%): {:.3f}\\t\"", ".", "format", "(", "results", "[", "'ACC'", "]", ",", "results", "[", "'AUROC'", "]", ",", "results", "[", "'OSCR'", "]", ")", ")", "\n", "return", "\n", "\n", "", "params_list", "=", "[", "{", "'params'", ":", "net", ".", "parameters", "(", ")", "}", ",", "\n", "{", "'params'", ":", "criterion", ".", "parameters", "(", ")", "}", "]", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "params_list", ",", "lr", "=", "options", "[", "'lr'", "]", ")", "\n", "if", "options", "[", "'cs'", "]", ":", "\n", "        ", "optimizerD", "=", "torch", ".", "optim", ".", "Adam", "(", "netD", ".", "parameters", "(", ")", ",", "lr", "=", "options", "[", "'gan_lr'", "]", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ")", "\n", "optimizerG", "=", "torch", ".", "optim", ".", "Adam", "(", "netG", ".", "parameters", "(", ")", ",", "lr", "=", "options", "[", "'gan_lr'", "]", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ")", "\n", "\n", "", "if", "options", "[", "'stepsize'", "]", ">", "0", ":", "\n", "        ", "scheduler", "=", "lr_scheduler", ".", "MultiStepLR", "(", "optimizer", ",", "milestones", "=", "[", "30", ",", "60", ",", "90", ",", "120", "]", ")", "\n", "\n", "", "start_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "score_now", "=", "0.0", "\n", "for", "epoch", "in", "range", "(", "options", "[", "'max_epoch'", "]", ")", ":", "\n", "        ", "print", "(", "\"==> Epoch {}/{}\"", ".", "format", "(", "epoch", "+", "1", ",", "options", "[", "'max_epoch'", "]", ")", ")", "\n", "\n", "if", "options", "[", "'cs'", "]", ":", "\n", "            ", "train_cs", "(", "net", ",", "netD", ",", "netG", ",", "criterion", ",", "criterionD", ",", "\n", "optimizer", ",", "optimizerD", ",", "optimizerG", ",", "\n", "trainloader", ",", "epoch", "=", "epoch", ",", "**", "options", ")", "\n", "\n", "", "train", "(", "net", ",", "criterion", ",", "optimizer", ",", "trainloader", ",", "epoch", "=", "epoch", ",", "**", "options", ")", "\n", "\n", "if", "options", "[", "'eval_freq'", "]", ">", "0", "and", "(", "epoch", "+", "1", ")", "%", "options", "[", "'eval_freq'", "]", "==", "0", "or", "(", "epoch", "+", "1", ")", "==", "options", "[", "'max_epoch'", "]", ":", "\n", "            ", "print", "(", "\"==> Test\"", ")", "\n", "results", "=", "test", "(", "net", ",", "criterion", ",", "testloader", ",", "outloader", ",", "epoch", "=", "epoch", ",", "**", "options", ")", "\n", "print", "(", "\"Acc (%): {:.3f}\\t AUROC (%): {:.3f}\\t OSCR (%): {:.3f}\\t\"", ".", "format", "(", "results", "[", "'ACC'", "]", ",", "results", "[", "'AUROC'", "]", ",", "results", "[", "'OSCR'", "]", ")", ")", "\n", "\n", "save_networks", "(", "net", ",", "model_path", ",", "file_name", ",", "criterion", "=", "criterion", ")", "\n", "if", "options", "[", "'cs'", "]", ":", "\n", "                ", "save_GAN", "(", "netG", ",", "netD", ",", "model_path", ",", "file_name", ")", "\n", "fake", "=", "netG", "(", "fixed_noise", ")", "\n", "GAN_path", "=", "os", ".", "path", ".", "join", "(", "model_path", ",", "'samples'", ")", "\n", "mkdir_if_missing", "(", "GAN_path", ")", "\n", "vutils", ".", "save_image", "(", "fake", ".", "data", ",", "'%s/gan_samples_epoch_%03d.png'", "%", "(", "GAN_path", ",", "epoch", ")", ",", "normalize", "=", "True", ")", "\n", "\n", "", "", "if", "options", "[", "'stepsize'", "]", ">", "0", ":", "scheduler", ".", "step", "(", ")", "\n", "\n", "", "elapsed", "=", "round", "(", "time", ".", "time", "(", ")", "-", "start_time", ")", "\n", "elapsed", "=", "str", "(", "datetime", ".", "timedelta", "(", "seconds", "=", "elapsed", ")", ")", "\n", "print", "(", "\"Finished. Total elapsed time (h:m:s): {}\"", ".", "format", "(", "elapsed", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.AverageMeter.__init__": [[21, 23], ["utils.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.AverageMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.AverageMeter.reset": [[24, 29], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.AverageMeter.update": [[30, 35], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.Logger.__init__": [[42, 48], ["utils.mkdir_if_missing", "open", "os.path.dirname", "os.path.dirname", "os.path.dirname", "os.path.dirname"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.mkdir_if_missing"], ["def", "__init__", "(", "self", ",", "fpath", "=", "None", ")", ":", "\n", "        ", "self", ".", "console", "=", "sys", ".", "stdout", "\n", "self", ".", "file", "=", "None", "\n", "if", "fpath", "is", "not", "None", ":", "\n", "            ", "mkdir_if_missing", "(", "os", ".", "path", ".", "dirname", "(", "fpath", ")", ")", "\n", "self", ".", "file", "=", "open", "(", "fpath", ",", "'w'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.Logger.__del__": [[49, 51], ["utils.Logger.close"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.Logger.close"], ["", "", "def", "__del__", "(", "self", ")", ":", "\n", "        ", "self", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.Logger.__enter__": [[52, 54], ["None"], "methods", ["None"], ["", "def", "__enter__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.Logger.__exit__": [[55, 57], ["utils.Logger.close"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.Logger.close"], ["", "def", "__exit__", "(", "self", ",", "*", "args", ")", ":", "\n", "        ", "self", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.Logger.write": [[58, 62], ["utils.Logger.console.write", "utils.Logger.file.write"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.Logger.write", "home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.Logger.write"], ["", "def", "write", "(", "self", ",", "msg", ")", ":", "\n", "        ", "self", ".", "console", ".", "write", "(", "msg", ")", "\n", "if", "self", ".", "file", "is", "not", "None", ":", "\n", "            ", "self", ".", "file", ".", "write", "(", "msg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.Logger.flush": [[63, 68], ["utils.Logger.console.flush", "utils.Logger.file.flush", "os.fsync", "os.fsync", "os.fsync", "os.fsync", "utils.Logger.file.fileno"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.Logger.flush", "home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.Logger.flush"], ["", "", "def", "flush", "(", "self", ")", ":", "\n", "        ", "self", ".", "console", ".", "flush", "(", ")", "\n", "if", "self", ".", "file", "is", "not", "None", ":", "\n", "            ", "self", ".", "file", ".", "flush", "(", ")", "\n", "os", ".", "fsync", "(", "self", ".", "file", ".", "fileno", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.Logger.close": [[69, 73], ["utils.Logger.console.close", "utils.Logger.file.close"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.Logger.close", "home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.Logger.close"], ["", "", "def", "close", "(", "self", ")", ":", "\n", "        ", "self", ".", "console", ".", "close", "(", ")", "\n", "if", "self", ".", "file", "is", "not", "None", ":", "\n", "            ", "self", ".", "file", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.mkdir_if_missing": [[8, 15], ["os.exists", "os.makedirs", "os.makedirs"], "function", ["None"], ["def", "mkdir_if_missing", "(", "directory", ")", ":", "\n", "    ", "if", "not", "osp", ".", "exists", "(", "directory", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "os", ".", "makedirs", "(", "directory", ")", "\n", "", "except", "OSError", "as", "e", ":", "\n", "            ", "if", "e", ".", "errno", "!=", "errno", ".", "EEXIST", ":", "\n", "                ", "raise", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.save_networks": [[74, 83], ["utils.mkdir_if_missing", "networks.state_dict", "torch.save", "os.join", "criterion.state_dict", "torch.save"], "function", ["home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.mkdir_if_missing"], ["", "", "", "def", "save_networks", "(", "networks", ",", "result_dir", ",", "name", "=", "''", ",", "loss", "=", "''", ",", "criterion", "=", "None", ")", ":", "\n", "    ", "mkdir_if_missing", "(", "osp", ".", "join", "(", "result_dir", ",", "'checkpoints'", ")", ")", "\n", "weights", "=", "networks", ".", "state_dict", "(", ")", "\n", "filename", "=", "'{}/checkpoints/{}_{}.pth'", ".", "format", "(", "result_dir", ",", "name", ",", "loss", ")", "\n", "torch", ".", "save", "(", "weights", ",", "filename", ")", "\n", "if", "criterion", ":", "\n", "        ", "weights", "=", "criterion", ".", "state_dict", "(", ")", "\n", "filename", "=", "'{}/checkpoints/{}_{}_criterion.pth'", ".", "format", "(", "result_dir", ",", "name", ",", "loss", ")", "\n", "torch", ".", "save", "(", "weights", ",", "filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.save_GAN": [[84, 92], ["utils.mkdir_if_missing", "netG.state_dict", "torch.save", "netD.state_dict", "torch.save", "os.join"], "function", ["home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.mkdir_if_missing"], ["", "", "def", "save_GAN", "(", "netG", ",", "netD", ",", "result_dir", ",", "name", "=", "''", ")", ":", "\n", "    ", "mkdir_if_missing", "(", "osp", ".", "join", "(", "result_dir", ",", "'checkpoints'", ")", ")", "\n", "weights", "=", "netG", ".", "state_dict", "(", ")", "\n", "filename", "=", "'{}/{}_G.pth'", ".", "format", "(", "result_dir", ",", "name", ")", "\n", "torch", ".", "save", "(", "weights", ",", "filename", ")", "\n", "weights", "=", "netD", ".", "state_dict", "(", ")", "\n", "filename", "=", "'{}/{}_D.pth'", ".", "format", "(", "result_dir", ",", "name", ")", "\n", "torch", ".", "save", "(", "weights", ",", "filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.load_networks": [[93, 103], ["networks.state_dict", "networks.load_state_dict", "torch.load", "criterion.state_dict", "criterion.load_state_dict", "torch.load"], "function", ["None"], ["", "def", "load_networks", "(", "networks", ",", "result_dir", ",", "name", "=", "''", ",", "loss", "=", "''", ",", "criterion", "=", "None", ")", ":", "\n", "    ", "weights", "=", "networks", ".", "state_dict", "(", ")", "\n", "filename", "=", "'{}/checkpoints/{}_{}.pth'", ".", "format", "(", "result_dir", ",", "name", ",", "loss", ")", "\n", "networks", ".", "load_state_dict", "(", "torch", ".", "load", "(", "filename", ")", ")", "\n", "if", "criterion", ":", "\n", "        ", "weights", "=", "criterion", ".", "state_dict", "(", ")", "\n", "filename", "=", "'{}/checkpoints/{}_{}_criterion.pth'", ".", "format", "(", "result_dir", ",", "name", ",", "loss", ")", "\n", "criterion", ".", "load_state_dict", "(", "torch", ".", "load", "(", "filename", ")", ")", "\n", "\n", "", "return", "networks", ",", "criterion", "\n", "", ""]], "home.repos.pwc.inspect_result.iCGY96_ARPL.datasets.osr_dataloader.MNISTRGB.__getitem__": [[12, 24], ["PIL.Image.fromarray", "osr_dataloader.MNISTRGB.convert", "int", "osr_dataloader.MNISTRGB.numpy", "osr_dataloader.MNISTRGB.transform", "osr_dataloader.MNISTRGB.target_transform"], "methods", ["None"], ["def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "img", ",", "target", "=", "self", ".", "data", "[", "index", "]", ",", "int", "(", "self", ".", "targets", "[", "index", "]", ")", "\n", "img", "=", "Image", ".", "fromarray", "(", "img", ".", "numpy", "(", ")", ",", "mode", "=", "'L'", ")", "\n", "img", "=", "img", ".", "convert", "(", "\"RGB\"", ")", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "target_transform", "(", "target", ")", "\n", "\n", "", "return", "img", ",", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.datasets.osr_dataloader.MNIST_Filter.__Filter__": [[28, 38], ["osr_dataloader.MNIST_Filter.targets.data.numpy", "range", "numpy.array", "torch.tensor().long", "torch.index_select", "len", "torch.tensor().long.append", "new_targets.append", "torch.tensor", "known.index"], "methods", ["None"], ["def", "__Filter__", "(", "self", ",", "known", ")", ":", "\n", "        ", "targets", "=", "self", ".", "targets", ".", "data", ".", "numpy", "(", ")", "\n", "mask", ",", "new_targets", "=", "[", "]", ",", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "targets", ")", ")", ":", "\n", "            ", "if", "targets", "[", "i", "]", "in", "known", ":", "\n", "                ", "mask", ".", "append", "(", "i", ")", "\n", "new_targets", ".", "append", "(", "known", ".", "index", "(", "targets", "[", "i", "]", ")", ")", "\n", "", "", "self", ".", "targets", "=", "np", ".", "array", "(", "new_targets", ")", "\n", "mask", "=", "torch", ".", "tensor", "(", "mask", ")", ".", "long", "(", ")", "\n", "self", ".", "data", "=", "torch", ".", "index_select", "(", "self", ".", "data", ",", "0", ",", "mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.datasets.osr_dataloader.MNIST_OSR.__init__": [[40, 87], ["len", "list", "print", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "osr_dataloader.MNIST_Filter", "print", "osr_dataloader.MNIST_Filter.__Filter__", "torch.utils.data.DataLoader", "osr_dataloader.MNIST_Filter", "print", "osr_dataloader.MNIST_Filter.__Filter__", "torch.utils.data.DataLoader", "osr_dataloader.MNIST_Filter", "osr_dataloader.MNIST_Filter.__Filter__", "torch.utils.data.DataLoader", "print", "print", "len", "len", "len", "len", "len", "set", "set", "torchvision.transforms.Resize", "torchvision.transforms.ToTensor", "torchvision.transforms.Resize", "torchvision.transforms.ToTensor", "len", "len", "list", "range"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.datasets.osr_dataloader.Tiny_ImageNet_Filter.__Filter__", "home.repos.pwc.inspect_result.iCGY96_ARPL.datasets.osr_dataloader.Tiny_ImageNet_Filter.__Filter__", "home.repos.pwc.inspect_result.iCGY96_ARPL.datasets.osr_dataloader.Tiny_ImageNet_Filter.__Filter__"], ["    ", "def", "__init__", "(", "self", ",", "known", ",", "dataroot", "=", "'./data/mnist'", ",", "use_gpu", "=", "True", ",", "num_workers", "=", "8", ",", "batch_size", "=", "128", ",", "img_size", "=", "32", ")", ":", "\n", "        ", "self", ".", "num_classes", "=", "len", "(", "known", ")", "\n", "self", ".", "known", "=", "known", "\n", "self", ".", "unknown", "=", "list", "(", "set", "(", "list", "(", "range", "(", "0", ",", "10", ")", ")", ")", "-", "set", "(", "known", ")", ")", "\n", "\n", "print", "(", "'Selected Labels: '", ",", "known", ")", "\n", "\n", "train_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "img_size", ",", "img_size", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", "\n", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "img_size", ",", "img_size", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", "\n", "\n", "pin_memory", "=", "True", "if", "use_gpu", "else", "False", "\n", "\n", "trainset", "=", "MNIST_Filter", "(", "root", "=", "dataroot", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "train_transform", ")", "\n", "print", "(", "'All Train Data:'", ",", "len", "(", "trainset", ")", ")", "\n", "trainset", ".", "__Filter__", "(", "known", "=", "self", ".", "known", ")", "\n", "\n", "self", ".", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "trainset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "num_workers", ",", "pin_memory", "=", "pin_memory", ",", "\n", ")", "\n", "\n", "testset", "=", "MNIST_Filter", "(", "root", "=", "dataroot", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n", "print", "(", "'All Test Data:'", ",", "len", "(", "testset", ")", ")", "\n", "testset", ".", "__Filter__", "(", "known", "=", "self", ".", "known", ")", "\n", "\n", "self", ".", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "testset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "num_workers", ",", "pin_memory", "=", "pin_memory", ",", "\n", ")", "\n", "\n", "outset", "=", "MNIST_Filter", "(", "root", "=", "dataroot", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n", "outset", ".", "__Filter__", "(", "known", "=", "self", ".", "unknown", ")", "\n", "\n", "self", ".", "out_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "outset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "num_workers", ",", "pin_memory", "=", "pin_memory", ",", "\n", ")", "\n", "\n", "print", "(", "'Train: '", ",", "len", "(", "trainset", ")", ",", "'Test: '", ",", "len", "(", "testset", ")", ",", "'Out: '", ",", "len", "(", "outset", ")", ")", "\n", "print", "(", "'All Test: '", ",", "(", "len", "(", "testset", ")", "+", "len", "(", "outset", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.datasets.osr_dataloader.CIFAR10_Filter.__Filter__": [[91, 99], ["range", "numpy.array", "numpy.array", "len", "numpy.squeeze", "numpy.array", "mask.append", "new_targets.append", "numpy.take", "known.index"], "methods", ["None"], ["def", "__Filter__", "(", "self", ",", "known", ")", ":", "\n", "        ", "datas", ",", "targets", "=", "np", ".", "array", "(", "self", ".", "data", ")", ",", "np", ".", "array", "(", "self", ".", "targets", ")", "\n", "mask", ",", "new_targets", "=", "[", "]", ",", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "targets", ")", ")", ":", "\n", "            ", "if", "targets", "[", "i", "]", "in", "known", ":", "\n", "                ", "mask", ".", "append", "(", "i", ")", "\n", "new_targets", ".", "append", "(", "known", ".", "index", "(", "targets", "[", "i", "]", ")", ")", "\n", "", "", "self", ".", "data", ",", "self", ".", "targets", "=", "np", ".", "squeeze", "(", "np", ".", "take", "(", "datas", ",", "mask", ",", "axis", "=", "0", ")", ")", ",", "np", ".", "array", "(", "new_targets", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.datasets.osr_dataloader.CIFAR10_OSR.__init__": [[102, 151], ["len", "list", "print", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "osr_dataloader.CIFAR10_Filter", "print", "osr_dataloader.CIFAR10_Filter.__Filter__", "torch.utils.data.DataLoader", "osr_dataloader.CIFAR10_Filter", "print", "osr_dataloader.CIFAR10_Filter.__Filter__", "torch.utils.data.DataLoader", "osr_dataloader.CIFAR10_Filter", "osr_dataloader.CIFAR10_Filter.__Filter__", "torch.utils.data.DataLoader", "print", "print", "len", "len", "len", "len", "len", "set", "set", "torchvision.transforms.Resize", "torchvision.transforms.RandomCrop", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.ToTensor", "torchvision.transforms.Resize", "torchvision.transforms.ToTensor", "len", "len", "list", "range"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.datasets.osr_dataloader.Tiny_ImageNet_Filter.__Filter__", "home.repos.pwc.inspect_result.iCGY96_ARPL.datasets.osr_dataloader.Tiny_ImageNet_Filter.__Filter__", "home.repos.pwc.inspect_result.iCGY96_ARPL.datasets.osr_dataloader.Tiny_ImageNet_Filter.__Filter__"], ["    ", "def", "__init__", "(", "self", ",", "known", ",", "dataroot", "=", "'./data/cifar10'", ",", "use_gpu", "=", "True", ",", "num_workers", "=", "8", ",", "batch_size", "=", "128", ",", "img_size", "=", "32", ")", ":", "\n", "        ", "self", ".", "num_classes", "=", "len", "(", "known", ")", "\n", "self", ".", "known", "=", "known", "\n", "self", ".", "unknown", "=", "list", "(", "set", "(", "list", "(", "range", "(", "0", ",", "10", ")", ")", ")", "-", "set", "(", "known", ")", ")", "\n", "\n", "print", "(", "'Selected Labels: '", ",", "known", ")", "\n", "\n", "train_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "img_size", ",", "img_size", ")", ")", ",", "\n", "transforms", ".", "RandomCrop", "(", "img_size", ",", "padding", "=", "4", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", "\n", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "img_size", ",", "img_size", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", "\n", "\n", "pin_memory", "=", "True", "if", "use_gpu", "else", "False", "\n", "\n", "trainset", "=", "CIFAR10_Filter", "(", "root", "=", "dataroot", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "train_transform", ")", "\n", "print", "(", "'All Train Data:'", ",", "len", "(", "trainset", ")", ")", "\n", "trainset", ".", "__Filter__", "(", "known", "=", "self", ".", "known", ")", "\n", "\n", "self", ".", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "trainset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "num_workers", ",", "pin_memory", "=", "pin_memory", ",", "\n", ")", "\n", "\n", "testset", "=", "CIFAR10_Filter", "(", "root", "=", "dataroot", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n", "print", "(", "'All Test Data:'", ",", "len", "(", "testset", ")", ")", "\n", "testset", ".", "__Filter__", "(", "known", "=", "self", ".", "known", ")", "\n", "\n", "self", ".", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "testset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "num_workers", ",", "pin_memory", "=", "pin_memory", ",", "\n", ")", "\n", "\n", "outset", "=", "CIFAR10_Filter", "(", "root", "=", "dataroot", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n", "outset", ".", "__Filter__", "(", "known", "=", "self", ".", "unknown", ")", "\n", "\n", "self", ".", "out_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "outset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "num_workers", ",", "pin_memory", "=", "pin_memory", ",", "\n", ")", "\n", "\n", "print", "(", "'Train: '", ",", "len", "(", "trainset", ")", ",", "'Test: '", ",", "len", "(", "testset", ")", ",", "'Out: '", ",", "len", "(", "outset", ")", ")", "\n", "print", "(", "'All Test: '", ",", "(", "len", "(", "testset", ")", "+", "len", "(", "outset", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.datasets.osr_dataloader.CIFAR100_Filter.__Filter__": [[155, 163], ["range", "numpy.array", "numpy.array", "len", "numpy.squeeze", "numpy.array", "mask.append", "new_targets.append", "numpy.take", "known.index"], "methods", ["None"], ["def", "__Filter__", "(", "self", ",", "known", ")", ":", "\n", "        ", "datas", ",", "targets", "=", "np", ".", "array", "(", "self", ".", "data", ")", ",", "np", ".", "array", "(", "self", ".", "targets", ")", "\n", "mask", ",", "new_targets", "=", "[", "]", ",", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "targets", ")", ")", ":", "\n", "            ", "if", "targets", "[", "i", "]", "in", "known", ":", "\n", "                ", "mask", ".", "append", "(", "i", ")", "\n", "new_targets", ".", "append", "(", "known", ".", "index", "(", "targets", "[", "i", "]", ")", ")", "\n", "", "", "self", ".", "data", ",", "self", ".", "targets", "=", "np", ".", "squeeze", "(", "np", ".", "take", "(", "datas", ",", "mask", ",", "axis", "=", "0", ")", ")", ",", "np", ".", "array", "(", "new_targets", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.datasets.osr_dataloader.CIFAR100_OSR.__init__": [[165, 185], ["len", "list", "print", "torchvision.transforms.Compose", "osr_dataloader.CIFAR100_Filter", "osr_dataloader.CIFAR100_Filter.__Filter__", "torch.utils.data.DataLoader", "set", "set", "torchvision.transforms.Resize", "torchvision.transforms.ToTensor", "list", "range"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.datasets.osr_dataloader.Tiny_ImageNet_Filter.__Filter__"], ["    ", "def", "__init__", "(", "self", ",", "known", ",", "dataroot", "=", "'./data/cifar100'", ",", "use_gpu", "=", "True", ",", "num_workers", "=", "8", ",", "batch_size", "=", "128", ",", "img_size", "=", "32", ")", ":", "\n", "        ", "self", ".", "num_classes", "=", "len", "(", "known", ")", "\n", "self", ".", "known", "=", "known", "\n", "self", ".", "unknown", "=", "list", "(", "set", "(", "list", "(", "range", "(", "0", ",", "100", ")", ")", ")", "-", "set", "(", "known", ")", ")", "\n", "\n", "print", "(", "'Selected Labels: '", ",", "known", ")", "\n", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "img_size", ",", "img_size", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", "\n", "\n", "pin_memory", "=", "True", "if", "use_gpu", "else", "False", "\n", "\n", "testset", "=", "CIFAR100_Filter", "(", "root", "=", "dataroot", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n", "testset", ".", "__Filter__", "(", "known", "=", "self", ".", "known", ")", "\n", "\n", "self", ".", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "testset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "num_workers", ",", "pin_memory", "=", "pin_memory", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.datasets.osr_dataloader.SVHN_Filter.__Filter__": [[191, 199], ["numpy.array", "range", "len", "numpy.array", "mask.append", "new_targets.append", "known.index"], "methods", ["None"], ["def", "__Filter__", "(", "self", ",", "known", ")", ":", "\n", "        ", "targets", "=", "np", ".", "array", "(", "self", ".", "labels", ")", "\n", "mask", ",", "new_targets", "=", "[", "]", ",", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "targets", ")", ")", ":", "\n", "            ", "if", "targets", "[", "i", "]", "in", "known", ":", "\n", "                ", "mask", ".", "append", "(", "i", ")", "\n", "new_targets", ".", "append", "(", "known", ".", "index", "(", "targets", "[", "i", "]", ")", ")", "\n", "", "", "self", ".", "data", ",", "self", ".", "labels", "=", "self", ".", "data", "[", "mask", "]", ",", "np", ".", "array", "(", "new_targets", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.datasets.osr_dataloader.SVHN_OSR.__init__": [[201, 250], ["len", "list", "print", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "osr_dataloader.SVHN_Filter", "print", "osr_dataloader.SVHN_Filter.__Filter__", "torch.utils.data.DataLoader", "osr_dataloader.SVHN_Filter", "print", "osr_dataloader.SVHN_Filter.__Filter__", "torch.utils.data.DataLoader", "osr_dataloader.SVHN_Filter", "osr_dataloader.SVHN_Filter.__Filter__", "torch.utils.data.DataLoader", "print", "print", "len", "len", "len", "len", "len", "set", "set", "torchvision.transforms.Resize", "torchvision.transforms.RandomCrop", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.ToTensor", "torchvision.transforms.Resize", "torchvision.transforms.ToTensor", "len", "len", "list", "range"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.datasets.osr_dataloader.Tiny_ImageNet_Filter.__Filter__", "home.repos.pwc.inspect_result.iCGY96_ARPL.datasets.osr_dataloader.Tiny_ImageNet_Filter.__Filter__", "home.repos.pwc.inspect_result.iCGY96_ARPL.datasets.osr_dataloader.Tiny_ImageNet_Filter.__Filter__"], ["    ", "def", "__init__", "(", "self", ",", "known", ",", "dataroot", "=", "'./data/svhn'", ",", "use_gpu", "=", "True", ",", "num_workers", "=", "8", ",", "batch_size", "=", "128", ",", "img_size", "=", "32", ")", ":", "\n", "        ", "self", ".", "num_classes", "=", "len", "(", "known", ")", "\n", "self", ".", "known", "=", "known", "\n", "self", ".", "unknown", "=", "list", "(", "set", "(", "list", "(", "range", "(", "0", ",", "10", ")", ")", ")", "-", "set", "(", "known", ")", ")", "\n", "\n", "print", "(", "'Selected Labels: '", ",", "known", ")", "\n", "\n", "train_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "img_size", ",", "img_size", ")", ")", ",", "\n", "transforms", ".", "RandomCrop", "(", "img_size", ",", "padding", "=", "4", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", "\n", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "img_size", ",", "img_size", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", "\n", "\n", "pin_memory", "=", "True", "if", "use_gpu", "else", "False", "\n", "\n", "trainset", "=", "SVHN_Filter", "(", "root", "=", "dataroot", ",", "split", "=", "'train'", ",", "download", "=", "True", ",", "transform", "=", "train_transform", ")", "\n", "print", "(", "'All Train Data:'", ",", "len", "(", "trainset", ")", ")", "\n", "trainset", ".", "__Filter__", "(", "known", "=", "self", ".", "known", ")", "\n", "\n", "self", ".", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "trainset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "num_workers", ",", "pin_memory", "=", "pin_memory", ",", "\n", ")", "\n", "\n", "testset", "=", "SVHN_Filter", "(", "root", "=", "dataroot", ",", "split", "=", "'test'", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n", "print", "(", "'All Test Data:'", ",", "len", "(", "testset", ")", ")", "\n", "testset", ".", "__Filter__", "(", "known", "=", "self", ".", "known", ")", "\n", "\n", "self", ".", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "testset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "num_workers", ",", "pin_memory", "=", "pin_memory", ",", "\n", ")", "\n", "\n", "outset", "=", "SVHN_Filter", "(", "root", "=", "dataroot", ",", "split", "=", "'test'", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n", "outset", ".", "__Filter__", "(", "known", "=", "self", ".", "unknown", ")", "\n", "\n", "self", ".", "out_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "outset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "num_workers", ",", "pin_memory", "=", "pin_memory", ",", "\n", ")", "\n", "\n", "print", "(", "'Train: '", ",", "len", "(", "trainset", ")", ",", "'Test: '", ",", "len", "(", "testset", ")", ",", "'Out: '", ",", "len", "(", "outset", ")", ")", "\n", "print", "(", "'All Test: '", ",", "(", "len", "(", "testset", ")", "+", "len", "(", "outset", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.datasets.osr_dataloader.Tiny_ImageNet_Filter.__Filter__": [[254, 265], ["range", "len", "new_datas.append", "new_targets.append", "known.index", "known.index"], "methods", ["None"], ["def", "__Filter__", "(", "self", ",", "known", ")", ":", "\n", "        ", "datas", ",", "targets", "=", "self", ".", "imgs", ",", "self", ".", "targets", "\n", "new_datas", ",", "new_targets", "=", "[", "]", ",", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "datas", ")", ")", ":", "\n", "            ", "if", "datas", "[", "i", "]", "[", "1", "]", "in", "known", ":", "\n", "                ", "new_item", "=", "(", "datas", "[", "i", "]", "[", "0", "]", ",", "known", ".", "index", "(", "datas", "[", "i", "]", "[", "1", "]", ")", ")", "\n", "new_datas", ".", "append", "(", "new_item", ")", "\n", "# new_targets.append(targets[i])", "\n", "new_targets", ".", "append", "(", "known", ".", "index", "(", "targets", "[", "i", "]", ")", ")", "\n", "", "", "datas", ",", "targets", "=", "new_datas", ",", "new_targets", "\n", "self", ".", "samples", ",", "self", ".", "imgs", ",", "self", ".", "targets", "=", "datas", ",", "datas", ",", "targets", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.datasets.osr_dataloader.Tiny_ImageNet_OSR.__init__": [[267, 316], ["len", "list", "print", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "osr_dataloader.Tiny_ImageNet_Filter", "print", "osr_dataloader.Tiny_ImageNet_Filter.__Filter__", "torch.utils.data.DataLoader", "osr_dataloader.Tiny_ImageNet_Filter", "print", "osr_dataloader.Tiny_ImageNet_Filter.__Filter__", "torch.utils.data.DataLoader", "osr_dataloader.Tiny_ImageNet_Filter", "osr_dataloader.Tiny_ImageNet_Filter.__Filter__", "torch.utils.data.DataLoader", "print", "print", "os.path.join", "len", "os.path.join", "len", "os.path.join", "len", "len", "len", "set", "set", "torchvision.transforms.Resize", "torchvision.transforms.RandomCrop", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.ToTensor", "torchvision.transforms.Resize", "torchvision.transforms.ToTensor", "len", "len", "list", "range"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.datasets.osr_dataloader.Tiny_ImageNet_Filter.__Filter__", "home.repos.pwc.inspect_result.iCGY96_ARPL.datasets.osr_dataloader.Tiny_ImageNet_Filter.__Filter__", "home.repos.pwc.inspect_result.iCGY96_ARPL.datasets.osr_dataloader.Tiny_ImageNet_Filter.__Filter__"], ["    ", "def", "__init__", "(", "self", ",", "known", ",", "dataroot", "=", "'./data/tiny_imagenet'", ",", "use_gpu", "=", "True", ",", "num_workers", "=", "8", ",", "batch_size", "=", "128", ",", "img_size", "=", "64", ")", ":", "\n", "        ", "self", ".", "num_classes", "=", "len", "(", "known", ")", "\n", "self", ".", "known", "=", "known", "\n", "self", ".", "unknown", "=", "list", "(", "set", "(", "list", "(", "range", "(", "0", ",", "200", ")", ")", ")", "-", "set", "(", "known", ")", ")", "\n", "\n", "print", "(", "'Selected Labels: '", ",", "known", ")", "\n", "\n", "train_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "img_size", ",", "img_size", ")", ")", ",", "\n", "transforms", ".", "RandomCrop", "(", "img_size", ",", "padding", "=", "4", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", "\n", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "img_size", ",", "img_size", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", "\n", "\n", "pin_memory", "=", "True", "if", "use_gpu", "else", "False", "\n", "\n", "trainset", "=", "Tiny_ImageNet_Filter", "(", "os", ".", "path", ".", "join", "(", "dataroot", ",", "'tiny-imagenet-200'", ",", "'train'", ")", ",", "train_transform", ")", "\n", "print", "(", "'All Train Data:'", ",", "len", "(", "trainset", ")", ")", "\n", "trainset", ".", "__Filter__", "(", "known", "=", "self", ".", "known", ")", "\n", "\n", "self", ".", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "trainset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "num_workers", ",", "pin_memory", "=", "pin_memory", ",", "\n", ")", "\n", "\n", "testset", "=", "Tiny_ImageNet_Filter", "(", "os", ".", "path", ".", "join", "(", "dataroot", ",", "'tiny-imagenet-200'", ",", "'val'", ")", ",", "transform", ")", "\n", "print", "(", "'All Test Data:'", ",", "len", "(", "testset", ")", ")", "\n", "testset", ".", "__Filter__", "(", "known", "=", "self", ".", "known", ")", "\n", "\n", "self", ".", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "testset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "num_workers", ",", "pin_memory", "=", "pin_memory", ",", "\n", ")", "\n", "\n", "outset", "=", "Tiny_ImageNet_Filter", "(", "os", ".", "path", ".", "join", "(", "dataroot", ",", "'tiny-imagenet-200'", ",", "'val'", ")", ",", "transform", ")", "\n", "outset", ".", "__Filter__", "(", "known", "=", "self", ".", "unknown", ")", "\n", "\n", "self", ".", "out_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "outset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "num_workers", ",", "pin_memory", "=", "pin_memory", ",", "\n", ")", "\n", "\n", "print", "(", "'Train: '", ",", "len", "(", "trainset", ")", ",", "'Test: '", ",", "len", "(", "testset", ")", ",", "'Out: '", ",", "len", "(", "outset", ")", ")", "\n", "print", "(", "'All Test: '", ",", "(", "len", "(", "testset", ")", "+", "len", "(", "outset", ")", ")", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.iCGY96_ARPL.datasets.datasets.MNISTRGB.__getitem__": [[17, 29], ["PIL.Image.fromarray", "datasets.MNISTRGB.convert", "int", "datasets.MNISTRGB.numpy", "datasets.MNISTRGB.transform", "datasets.MNISTRGB.target_transform"], "methods", ["None"], ["def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "img", ",", "target", "=", "self", ".", "data", "[", "index", "]", ",", "int", "(", "self", ".", "targets", "[", "index", "]", ")", "\n", "img", "=", "Image", ".", "fromarray", "(", "img", ".", "numpy", "(", ")", ",", "mode", "=", "'L'", ")", "\n", "img", "=", "img", ".", "convert", "(", "\"RGB\"", ")", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "target_transform", "(", "target", ")", "\n", "\n", "", "return", "img", ",", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.datasets.datasets.KMNISTRGB.__getitem__": [[33, 45], ["PIL.Image.fromarray", "datasets.KMNISTRGB.convert", "int", "datasets.KMNISTRGB.numpy", "datasets.KMNISTRGB.transform", "datasets.KMNISTRGB.target_transform"], "methods", ["None"], ["def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "img", ",", "target", "=", "self", ".", "data", "[", "index", "]", ",", "int", "(", "self", ".", "targets", "[", "index", "]", ")", "\n", "img", "=", "Image", ".", "fromarray", "(", "img", ".", "numpy", "(", ")", ",", "mode", "=", "'L'", ")", "\n", "img", "=", "img", ".", "convert", "(", "\"RGB\"", ")", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "target_transform", "(", "target", ")", "\n", "\n", "", "return", "img", ",", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.datasets.datasets.MNIST.__init__": [[47, 75], ["torchvision.Compose", "torchvision.Compose", "os.path.join", "datasets.MNISTRGB", "torch.utils.data.DataLoader", "datasets.MNISTRGB", "torch.utils.data.DataLoader", "torchvision.Resize", "torchvision.Resize", "torchvision.ToTensor", "torchvision.ToTensor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "**", "options", ")", ":", "\n", "        ", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "32", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", "\n", "\n", "batch_size", "=", "options", "[", "'batch_size'", "]", "\n", "data_root", "=", "os", ".", "path", ".", "join", "(", "options", "[", "'dataroot'", "]", ",", "'mnist'", ")", "\n", "\n", "pin_memory", "=", "True", "if", "options", "[", "'use_gpu'", "]", "else", "False", "\n", "\n", "trainset", "=", "MNISTRGB", "(", "root", "=", "data_root", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n", "\n", "trainloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "trainset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "options", "[", "'workers'", "]", ",", "pin_memory", "=", "pin_memory", ",", "\n", ")", "\n", "\n", "testset", "=", "MNISTRGB", "(", "root", "=", "data_root", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n", "\n", "testloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "testset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "options", "[", "'workers'", "]", ",", "pin_memory", "=", "pin_memory", ",", "\n", ")", "\n", "\n", "self", ".", "trainloader", "=", "trainloader", "\n", "self", ".", "testloader", "=", "testloader", "\n", "self", ".", "num_classes", "=", "10", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.datasets.datasets.KMNIST.__init__": [[77, 105], ["torchvision.Compose", "torchvision.Compose", "os.path.join", "datasets.KMNISTRGB", "torch.utils.data.DataLoader", "datasets.KMNISTRGB", "torch.utils.data.DataLoader", "torchvision.Resize", "torchvision.Resize", "torchvision.ToTensor", "torchvision.ToTensor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "**", "options", ")", ":", "\n", "        ", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "32", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", "\n", "\n", "batch_size", "=", "options", "[", "'batch_size'", "]", "\n", "data_root", "=", "os", ".", "path", ".", "join", "(", "options", "[", "'dataroot'", "]", ",", "'kmnist'", ")", "\n", "\n", "pin_memory", "=", "True", "if", "options", "[", "'use_gpu'", "]", "else", "False", "\n", "\n", "trainset", "=", "KMNISTRGB", "(", "root", "=", "data_root", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n", "\n", "trainloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "trainset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "options", "[", "'workers'", "]", ",", "pin_memory", "=", "pin_memory", ",", "\n", ")", "\n", "\n", "testset", "=", "KMNISTRGB", "(", "root", "=", "data_root", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n", "\n", "testloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "testset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "options", "[", "'workers'", "]", ",", "pin_memory", "=", "pin_memory", ",", "\n", ")", "\n", "\n", "self", ".", "trainloader", "=", "trainloader", "\n", "self", ".", "testloader", "=", "testloader", "\n", "self", ".", "num_classes", "=", "10", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.datasets.datasets.CIFAR10.__init__": [[107, 140], ["torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "os.path.join", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "torch.utils.data.DataLoader", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "torch.utils.data.DataLoader", "torchvision.RandomCrop", "torchvision.RandomCrop", "torchvision.RandomHorizontalFlip", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.ToTensor", "torchvision.ToTensor", "torchvision.ToTensor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "**", "options", ")", ":", "\n", "\n", "        ", "transform_train", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomCrop", "(", "32", ",", "padding", "=", "4", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", "\n", "\n", "batch_size", "=", "options", "[", "'batch_size'", "]", "\n", "data_root", "=", "os", ".", "path", ".", "join", "(", "options", "[", "'dataroot'", "]", ",", "'cifar10'", ")", "\n", "\n", "pin_memory", "=", "True", "if", "options", "[", "'use_gpu'", "]", "else", "False", "\n", "\n", "trainset", "=", "torchvision", ".", "datasets", ".", "CIFAR10", "(", "root", "=", "data_root", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "transform_train", ")", "\n", "\n", "trainloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "trainset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "options", "[", "'workers'", "]", ",", "pin_memory", "=", "pin_memory", ",", "\n", ")", "\n", "\n", "testset", "=", "torchvision", ".", "datasets", ".", "CIFAR10", "(", "root", "=", "data_root", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n", "\n", "testloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "testset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "options", "[", "'workers'", "]", ",", "pin_memory", "=", "pin_memory", ",", "\n", ")", "\n", "\n", "self", ".", "num_classes", "=", "10", "\n", "self", ".", "trainloader", "=", "trainloader", "\n", "self", ".", "testloader", "=", "testloader", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.datasets.datasets.CIFAR100.__init__": [[142, 174], ["torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "os.path.join", "torchvision.datasets.CIFAR100", "torchvision.datasets.CIFAR100", "torchvision.datasets.CIFAR100", "torchvision.datasets.CIFAR100", "torch.utils.data.DataLoader", "torchvision.datasets.CIFAR100", "torchvision.datasets.CIFAR100", "torchvision.datasets.CIFAR100", "torchvision.datasets.CIFAR100", "torch.utils.data.DataLoader", "torchvision.RandomCrop", "torchvision.RandomCrop", "torchvision.RandomHorizontalFlip", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.ToTensor", "torchvision.ToTensor", "torchvision.ToTensor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "**", "options", ")", ":", "\n", "        ", "transform_train", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomCrop", "(", "32", ",", "padding", "=", "4", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", "\n", "\n", "batch_size", "=", "options", "[", "'batch_size'", "]", "\n", "data_root", "=", "os", ".", "path", ".", "join", "(", "options", "[", "'dataroot'", "]", ",", "'cifar100'", ")", "\n", "\n", "pin_memory", "=", "True", "if", "options", "[", "'use_gpu'", "]", "else", "False", "\n", "\n", "trainset", "=", "torchvision", ".", "datasets", ".", "CIFAR100", "(", "root", "=", "data_root", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "transform_train", ")", "\n", "\n", "trainloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "trainset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "options", "[", "'workers'", "]", ",", "pin_memory", "=", "pin_memory", ",", "\n", ")", "\n", "\n", "testset", "=", "torchvision", ".", "datasets", ".", "CIFAR100", "(", "root", "=", "data_root", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n", "\n", "testloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "testset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "options", "[", "'workers'", "]", ",", "pin_memory", "=", "pin_memory", ",", "\n", ")", "\n", "\n", "self", ".", "num_classes", "=", "100", "\n", "self", ".", "trainloader", "=", "trainloader", "\n", "self", ".", "testloader", "=", "testloader", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.datasets.datasets.SVHN.__init__": [[177, 209], ["torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "os.path.join", "torchvision.datasets.SVHN", "torchvision.datasets.SVHN", "torchvision.datasets.SVHN", "torchvision.datasets.SVHN", "torch.utils.data.DataLoader", "torchvision.datasets.SVHN", "torchvision.datasets.SVHN", "torchvision.datasets.SVHN", "torchvision.datasets.SVHN", "torch.utils.data.DataLoader", "torchvision.RandomCrop", "torchvision.RandomCrop", "torchvision.RandomHorizontalFlip", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.ToTensor", "torchvision.ToTensor", "torchvision.ToTensor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "**", "options", ")", ":", "\n", "        ", "transform_train", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomCrop", "(", "32", ",", "padding", "=", "4", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", "\n", "\n", "batch_size", "=", "options", "[", "'batch_size'", "]", "\n", "data_root", "=", "os", ".", "path", ".", "join", "(", "options", "[", "'dataroot'", "]", ",", "'svhn'", ")", "\n", "\n", "pin_memory", "=", "True", "if", "options", "[", "'use_gpu'", "]", "else", "False", "\n", "\n", "trainset", "=", "torchvision", ".", "datasets", ".", "SVHN", "(", "root", "=", "data_root", ",", "split", "=", "'train'", ",", "download", "=", "True", ",", "transform", "=", "transform_train", ")", "\n", "\n", "trainloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "trainset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "options", "[", "'workers'", "]", ",", "pin_memory", "=", "pin_memory", ",", "\n", ")", "\n", "\n", "testset", "=", "torchvision", ".", "datasets", ".", "SVHN", "(", "root", "=", "data_root", ",", "split", "=", "'test'", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n", "\n", "testloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "testset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "options", "[", "'workers'", "]", ",", "pin_memory", "=", "pin_memory", ",", "\n", ")", "\n", "\n", "self", ".", "num_classes", "=", "10", "\n", "self", ".", "trainloader", "=", "trainloader", "\n", "self", ".", "testloader", "=", "testloader", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.datasets.datasets.create": [[219, 223], ["__factory.keys", "KeyError"], "function", ["None"], ["def", "create", "(", "name", ",", "**", "options", ")", ":", "\n", "    ", "if", "name", "not", "in", "__factory", ".", "keys", "(", ")", ":", "\n", "        ", "raise", "KeyError", "(", "\"Unknown dataset: {}\"", ".", "format", "(", "name", ")", ")", "\n", "", "return", "__factory", "[", "name", "]", "(", "**", "options", ")", "", "", ""]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.models.ConvNet.__init__": [[8, 28], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Linear", "torch.Linear", "torch.PReLU", "torch.PReLU", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.loss.ARPLoss.ARPLoss.__init__"], ["def", "__init__", "(", "self", ",", "num_classes", ")", ":", "\n", "        ", "super", "(", "ConvNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1_1", "=", "nn", ".", "Conv2d", "(", "3", ",", "32", ",", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", "\n", "self", ".", "prelu1_1", "=", "nn", ".", "PReLU", "(", ")", "\n", "self", ".", "conv1_2", "=", "nn", ".", "Conv2d", "(", "32", ",", "32", ",", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", "\n", "self", ".", "prelu1_2", "=", "nn", ".", "PReLU", "(", ")", "\n", "\n", "self", ".", "conv2_1", "=", "nn", ".", "Conv2d", "(", "32", ",", "64", ",", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", "\n", "self", ".", "prelu2_1", "=", "nn", ".", "PReLU", "(", ")", "\n", "self", ".", "conv2_2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", "\n", "self", ".", "prelu2_2", "=", "nn", ".", "PReLU", "(", ")", "\n", "\n", "self", ".", "conv3_1", "=", "nn", ".", "Conv2d", "(", "64", ",", "128", ",", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", "\n", "self", ".", "prelu3_1", "=", "nn", ".", "PReLU", "(", ")", "\n", "self", ".", "conv3_2", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", "\n", "self", ".", "prelu3_2", "=", "nn", ".", "PReLU", "(", ")", "\n", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "128", "*", "4", "*", "4", ",", "2", ")", "\n", "self", ".", "prelu_fc1", "=", "nn", ".", "PReLU", "(", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "2", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.models.ConvNet.forward": [[29, 49], ["models.ConvNet.prelu1_1", "models.ConvNet.prelu1_2", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool2d", "models.ConvNet.prelu2_1", "models.ConvNet.prelu2_2", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool2d", "models.ConvNet.prelu3_1", "models.ConvNet.prelu3_2", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool2d", "models.ConvNet.view", "models.ConvNet.prelu_fc1", "models.ConvNet.fc2", "models.ConvNet.conv1_1", "models.ConvNet.conv1_2", "models.ConvNet.conv2_1", "models.ConvNet.conv2_2", "models.ConvNet.conv3_1", "models.ConvNet.conv3_2", "models.ConvNet.fc1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "rf", "=", "False", ")", ":", "\n", "        ", "x", "=", "self", ".", "prelu1_1", "(", "self", ".", "conv1_1", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "prelu1_2", "(", "self", ".", "conv1_2", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "max_pool2d", "(", "x", ",", "2", ")", "\n", "\n", "x", "=", "self", ".", "prelu2_1", "(", "self", ".", "conv2_1", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "prelu2_2", "(", "self", ".", "conv2_2", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "max_pool2d", "(", "x", ",", "2", ")", "\n", "\n", "x", "=", "self", ".", "prelu3_1", "(", "self", ".", "conv3_1", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "prelu3_2", "(", "self", ".", "conv3_2", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "max_pool2d", "(", "x", ",", "2", ")", "\n", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "128", "*", "4", "*", "4", ")", "\n", "x", "=", "self", ".", "prelu_fc1", "(", "self", ".", "fc1", "(", "x", ")", ")", "\n", "y", "=", "self", ".", "fc2", "(", "x", ")", "\n", "\n", "if", "rf", ":", "\n", "            ", "return", "x", ",", "y", "\n", "", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.models.classifier32.__init__": [[60, 96], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Linear", "torch.Linear", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "models.classifier32.apply", "models.classifier32.cuda"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.loss.ARPLoss.ARPLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "self", ".", "__class__", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "128", ",", "3", ",", "2", ",", "1", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv5", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv6", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "2", ",", "1", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "conv7", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv8", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv9", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "2", ",", "1", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "128", ")", "\n", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "128", ")", "\n", "self", ".", "bn5", "=", "nn", ".", "BatchNorm2d", "(", "128", ")", "\n", "self", ".", "bn6", "=", "nn", ".", "BatchNorm2d", "(", "128", ")", "\n", "\n", "self", ".", "bn7", "=", "nn", ".", "BatchNorm2d", "(", "128", ")", "\n", "self", ".", "bn8", "=", "nn", ".", "BatchNorm2d", "(", "128", ")", "\n", "self", ".", "bn9", "=", "nn", ".", "BatchNorm2d", "(", "128", ")", "\n", "self", ".", "bn10", "=", "nn", ".", "BatchNorm2d", "(", "128", ")", "\n", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "128", ",", "num_classes", ",", "bias", "=", "False", ")", "\n", "self", ".", "dr1", "=", "nn", ".", "Dropout2d", "(", "0.2", ")", "\n", "self", ".", "dr2", "=", "nn", ".", "Dropout2d", "(", "0.2", ")", "\n", "self", ".", "dr3", "=", "nn", ".", "Dropout2d", "(", "0.2", ")", "\n", "\n", "self", ".", "apply", "(", "weights_init", ")", "\n", "self", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.models.classifier32.forward": [[97, 138], ["models.classifier32.dr1", "models.classifier32.conv1", "models.classifier32.bn1", "models.classifier32.conv2", "models.classifier32.bn2", "models.classifier32.conv3", "models.classifier32.bn3", "models.classifier32.dr2", "models.classifier32.conv4", "models.classifier32.bn4", "models.classifier32.conv5", "models.classifier32.bn5", "models.classifier32.conv6", "models.classifier32.bn6", "models.classifier32.dr3", "models.classifier32.conv7", "models.classifier32.bn7", "models.classifier32.conv8", "models.classifier32.bn8", "models.classifier32.conv9", "models.classifier32.bn9", "models.classifier32.avgpool", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "models.classifier32.fc", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "return_feature", "=", "False", ")", ":", "\n", "        ", "x", "=", "self", ".", "dr1", "(", "x", ")", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "nn", ".", "LeakyReLU", "(", "0.2", ")", "(", "x", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "x", "=", "self", ".", "bn2", "(", "x", ")", "\n", "x", "=", "nn", ".", "LeakyReLU", "(", "0.2", ")", "(", "x", ")", "\n", "x", "=", "self", ".", "conv3", "(", "x", ")", "\n", "x", "=", "self", ".", "bn3", "(", "x", ")", "\n", "x", "=", "nn", ".", "LeakyReLU", "(", "0.2", ")", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "dr2", "(", "x", ")", "\n", "x", "=", "self", ".", "conv4", "(", "x", ")", "\n", "x", "=", "self", ".", "bn4", "(", "x", ")", "\n", "x", "=", "nn", ".", "LeakyReLU", "(", "0.2", ")", "(", "x", ")", "\n", "x", "=", "self", ".", "conv5", "(", "x", ")", "\n", "x", "=", "self", ".", "bn5", "(", "x", ")", "\n", "x", "=", "nn", ".", "LeakyReLU", "(", "0.2", ")", "(", "x", ")", "\n", "x", "=", "self", ".", "conv6", "(", "x", ")", "\n", "x", "=", "self", ".", "bn6", "(", "x", ")", "\n", "x", "=", "nn", ".", "LeakyReLU", "(", "0.2", ")", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "dr3", "(", "x", ")", "\n", "x", "=", "self", ".", "conv7", "(", "x", ")", "\n", "x", "=", "self", ".", "bn7", "(", "x", ")", "\n", "x", "=", "nn", ".", "LeakyReLU", "(", "0.2", ")", "(", "x", ")", "\n", "x", "=", "self", ".", "conv8", "(", "x", ")", "\n", "x", "=", "self", ".", "bn8", "(", "x", ")", "\n", "x", "=", "nn", ".", "LeakyReLU", "(", "0.2", ")", "(", "x", ")", "\n", "x", "=", "self", ".", "conv9", "(", "x", ")", "\n", "x", "=", "self", ".", "bn9", "(", "x", ")", "\n", "x", "=", "nn", ".", "LeakyReLU", "(", "0.2", ")", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "torch", ".", "flatten", "(", "x", ",", "1", ")", "\n", "y", "=", "self", ".", "fc", "(", "x", ")", "\n", "if", "return_feature", ":", "\n", "            ", "return", "x", ",", "y", "\n", "", "else", ":", "\n", "            ", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.models.classifier32ABN.__init__": [[154, 190], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "models.ABN.MultiBatchNorm", "models.ABN.MultiBatchNorm", "models.ABN.MultiBatchNorm", "models.ABN.MultiBatchNorm", "models.ABN.MultiBatchNorm", "models.ABN.MultiBatchNorm", "models.ABN.MultiBatchNorm", "models.ABN.MultiBatchNorm", "models.ABN.MultiBatchNorm", "models.ABN.MultiBatchNorm", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Linear", "torch.Linear", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "models.classifier32ABN.apply", "models.classifier32ABN.cuda"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.loss.ARPLoss.ARPLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "10", ",", "num_ABN", "=", "2", ")", ":", "\n", "        ", "super", "(", "self", ".", "__class__", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "128", ",", "3", ",", "2", ",", "1", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv5", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv6", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "2", ",", "1", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "conv7", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv8", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv9", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "2", ",", "1", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "bn1", "=", "MultiBatchNorm", "(", "64", ",", "num_ABN", ")", "\n", "self", ".", "bn2", "=", "MultiBatchNorm", "(", "64", ",", "num_ABN", ")", "\n", "self", ".", "bn3", "=", "MultiBatchNorm", "(", "128", ",", "num_ABN", ")", "\n", "\n", "self", ".", "bn4", "=", "MultiBatchNorm", "(", "128", ",", "num_ABN", ")", "\n", "self", ".", "bn5", "=", "MultiBatchNorm", "(", "128", ",", "num_ABN", ")", "\n", "self", ".", "bn6", "=", "MultiBatchNorm", "(", "128", ",", "num_ABN", ")", "\n", "\n", "self", ".", "bn7", "=", "MultiBatchNorm", "(", "128", ",", "num_ABN", ")", "\n", "self", ".", "bn8", "=", "MultiBatchNorm", "(", "128", ",", "num_ABN", ")", "\n", "self", ".", "bn9", "=", "MultiBatchNorm", "(", "128", ",", "num_ABN", ")", "\n", "self", ".", "bn10", "=", "MultiBatchNorm", "(", "128", ",", "num_ABN", ")", "\n", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "128", ",", "num_classes", ",", "bias", "=", "False", ")", "\n", "self", ".", "dr1", "=", "nn", ".", "Dropout2d", "(", "0.2", ")", "\n", "self", ".", "dr2", "=", "nn", ".", "Dropout2d", "(", "0.2", ")", "\n", "self", ".", "dr3", "=", "nn", ".", "Dropout2d", "(", "0.2", ")", "\n", "\n", "self", ".", "apply", "(", "weights_init_ABN", ")", "\n", "self", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.models.classifier32ABN.forward": [[191, 234], ["models.classifier32ABN.dr1", "models.classifier32ABN.conv1", "models.classifier32ABN.bn1", "models.classifier32ABN.conv2", "models.classifier32ABN.bn2", "models.classifier32ABN.conv3", "models.classifier32ABN.bn3", "models.classifier32ABN.dr2", "models.classifier32ABN.conv4", "models.classifier32ABN.bn4", "models.classifier32ABN.conv5", "models.classifier32ABN.bn5", "models.classifier32ABN.conv6", "models.classifier32ABN.bn6", "models.classifier32ABN.dr3", "models.classifier32ABN.conv7", "models.classifier32ABN.bn7", "models.classifier32ABN.conv8", "models.classifier32ABN.bn8", "models.classifier32ABN.conv9", "models.classifier32ABN.bn9", "models.classifier32ABN.avgpool", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "models.classifier32ABN.fc", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "return_feature", "=", "False", ",", "bn_label", "=", "None", ")", ":", "\n", "        ", "if", "bn_label", "is", "None", ":", "\n", "            ", "bn_label", "=", "0", "*", "torch", ".", "ones", "(", "x", ".", "shape", "[", "0", "]", ",", "dtype", "=", "torch", ".", "long", ")", ".", "cuda", "(", ")", "\n", "", "x", "=", "self", ".", "dr1", "(", "x", ")", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", ",", "_", "=", "self", ".", "bn1", "(", "x", ",", "bn_label", ")", "\n", "x", "=", "nn", ".", "LeakyReLU", "(", "0.2", ")", "(", "x", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "x", ",", "_", "=", "self", ".", "bn2", "(", "x", ",", "bn_label", ")", "\n", "x", "=", "nn", ".", "LeakyReLU", "(", "0.2", ")", "(", "x", ")", "\n", "x", "=", "self", ".", "conv3", "(", "x", ")", "\n", "x", ",", "_", "=", "self", ".", "bn3", "(", "x", ",", "bn_label", ")", "\n", "x", "=", "nn", ".", "LeakyReLU", "(", "0.2", ")", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "dr2", "(", "x", ")", "\n", "x", "=", "self", ".", "conv4", "(", "x", ")", "\n", "x", ",", "_", "=", "self", ".", "bn4", "(", "x", ",", "bn_label", ")", "\n", "x", "=", "nn", ".", "LeakyReLU", "(", "0.2", ")", "(", "x", ")", "\n", "x", "=", "self", ".", "conv5", "(", "x", ")", "\n", "x", ",", "_", "=", "self", ".", "bn5", "(", "x", ",", "bn_label", ")", "\n", "x", "=", "nn", ".", "LeakyReLU", "(", "0.2", ")", "(", "x", ")", "\n", "x", "=", "self", ".", "conv6", "(", "x", ")", "\n", "x", ",", "_", "=", "self", ".", "bn6", "(", "x", ",", "bn_label", ")", "\n", "x", "=", "nn", ".", "LeakyReLU", "(", "0.2", ")", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "dr3", "(", "x", ")", "\n", "x", "=", "self", ".", "conv7", "(", "x", ")", "\n", "x", ",", "_", "=", "self", ".", "bn7", "(", "x", ",", "bn_label", ")", "\n", "x", "=", "nn", ".", "LeakyReLU", "(", "0.2", ")", "(", "x", ")", "\n", "x", "=", "self", ".", "conv8", "(", "x", ")", "\n", "x", ",", "_", "=", "self", ".", "bn8", "(", "x", ",", "bn_label", ")", "\n", "x", "=", "nn", ".", "LeakyReLU", "(", "0.2", ")", "(", "x", ")", "\n", "x", "=", "self", ".", "conv9", "(", "x", ")", "\n", "x", ",", "_", "=", "self", ".", "bn9", "(", "x", ",", "bn_label", ")", "\n", "x", "=", "nn", ".", "LeakyReLU", "(", "0.2", ")", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "torch", ".", "flatten", "(", "x", ",", "1", ")", "\n", "y", "=", "self", ".", "fc", "(", "x", ")", "\n", "if", "return_feature", ":", "\n", "            ", "return", "x", ",", "y", "\n", "", "else", ":", "\n", "            ", "return", "y", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.models.weights_init": [[50, 58], ["classname.find", "m.weight.data.normal_", "classname.find", "m.weight.data.normal_", "m.bias.data.fill_"], "function", ["None"], ["", "", "def", "weights_init", "(", "m", ")", ":", "\n", "    ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "# TODO: what about fully-connected layers?", "\n", "if", "classname", ".", "find", "(", "'Conv'", ")", "!=", "-", "1", ":", "\n", "        ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0.0", ",", "0.05", ")", "\n", "", "elif", "classname", ".", "find", "(", "'BatchNorm'", ")", "!=", "-", "1", ":", "\n", "        ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "1.0", ",", "0.02", ")", "\n", "m", ".", "bias", ".", "data", ".", "fill_", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.models.weights_init_ABN": [[139, 152], ["classname.find", "m.weight.data.normal_", "classname.find", "m.bns[].weight.data.normal_", "m.bns[].bias.data.fill_", "m.bns[].weight.data.normal_", "m.bns[].bias.data.fill_", "classname.find", "m.weight.data.normal_", "m.bias.data.fill_"], "function", ["None"], ["", "", "", "def", "weights_init_ABN", "(", "m", ")", ":", "\n", "    ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "# TODO: what about fully-connected layers?", "\n", "if", "classname", ".", "find", "(", "'Conv'", ")", "!=", "-", "1", ":", "\n", "        ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0.0", ",", "0.05", ")", "\n", "", "elif", "classname", ".", "find", "(", "'MultiBatchNorm'", ")", "!=", "-", "1", ":", "\n", "        ", "m", ".", "bns", "[", "0", "]", ".", "weight", ".", "data", ".", "normal_", "(", "1.0", ",", "0.02", ")", "\n", "m", ".", "bns", "[", "0", "]", ".", "bias", ".", "data", ".", "fill_", "(", "0", ")", "\n", "m", ".", "bns", "[", "1", "]", ".", "weight", ".", "data", ".", "normal_", "(", "1.0", ",", "0.02", ")", "\n", "m", ".", "bns", "[", "1", "]", ".", "bias", ".", "data", ".", "fill_", "(", "0", ")", "\n", "", "elif", "classname", ".", "find", "(", "'BatchNorm'", ")", "!=", "-", "1", ":", "\n", "        ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "1.0", ",", "0.02", ")", "\n", "m", ".", "bias", ".", "data", ".", "fill_", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.gan._netD32.__init__": [[18, 41], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.loss.ARPLoss.ARPLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ngpu", ",", "nc", ",", "ndf", ")", ":", "\n", "        ", "super", "(", "_netD32", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ngpu", "=", "ngpu", "\n", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "\n", "# input size. (nc) x 32 x 32", "\n", "nn", ".", "Conv2d", "(", "nc", ",", "ndf", "*", "2", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "# state size. (ndf*2) x 16 x 16", "\n", "nn", ".", "Conv2d", "(", "ndf", "*", "2", ",", "ndf", "*", "4", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ndf", "*", "4", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "# state size. (ndf*4) x 8 x 8", "\n", "nn", ".", "Conv2d", "(", "ndf", "*", "4", ",", "ndf", "*", "8", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ndf", "*", "8", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "# state size. (ndf*8) x 4 x 4", "\n", "nn", ".", "Conv2d", "(", "ndf", "*", "8", ",", "ndf", "*", "16", ",", "4", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "ndf", "*", "16", ",", "1", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.gan._netD32.forward": [[43, 54], ["gan._netD32.avgpool", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "gan._netD32.classifier().flatten", "isinstance", "torch.parallel.data_parallel", "torch.parallel.data_parallel", "torch.parallel.data_parallel", "gan._netD32.main", "range", "gan._netD32.classifier"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.None.ood.main"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "if", "isinstance", "(", "input", ".", "data", ",", "torch", ".", "cuda", ".", "FloatTensor", ")", "and", "self", ".", "ngpu", ">", "1", ":", "\n", "            ", "output", "=", "nn", ".", "parallel", ".", "data_parallel", "(", "self", ".", "main", ",", "input", ",", "range", "(", "self", ".", "ngpu", ")", ")", "\n", "", "else", ":", "\n", "            ", "output", "=", "self", ".", "main", "(", "input", ")", "\n", "\n", "", "output", "=", "self", ".", "avgpool", "(", "output", ")", "\n", "output", "=", "torch", ".", "flatten", "(", "output", ",", "1", ")", "\n", "output", "=", "self", ".", "classifier", "(", "output", ")", ".", "flatten", "(", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.gan._netG32.__init__": [[56, 75], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.loss.ARPLoss.ARPLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ngpu", ",", "nz", ",", "ngf", ",", "nc", ")", ":", "\n", "        ", "super", "(", "_netG32", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ngpu", "=", "ngpu", "\n", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "\n", "# input is Z, going into a convolution", "\n", "nn", ".", "ConvTranspose2d", "(", "nz", ",", "ngf", "*", "8", ",", "4", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", "*", "8", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "# state size. (ngf*8) x 4 x 4", "\n", "nn", ".", "ConvTranspose2d", "(", "ngf", "*", "8", ",", "ngf", "*", "4", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", "*", "4", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "# state size. (ngf*4) x 8 x 8", "\n", "nn", ".", "ConvTranspose2d", "(", "ngf", "*", "4", ",", "ngf", "*", "2", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", "*", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "# state size. (ngf*2) x 16 x 16", "\n", "nn", ".", "ConvTranspose2d", "(", "ngf", "*", "2", ",", "nc", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", "# state size. (nc) x 32 x 32", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.gan._netG32.forward": [[78, 85], ["isinstance", "torch.parallel.data_parallel", "torch.parallel.data_parallel", "torch.parallel.data_parallel", "gan._netG32.main", "range"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.None.ood.main"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "if", "isinstance", "(", "input", ".", "data", ",", "torch", ".", "cuda", ".", "FloatTensor", ")", "and", "self", ".", "ngpu", ">", "1", ":", "\n", "            ", "output", "=", "nn", ".", "parallel", ".", "data_parallel", "(", "self", ".", "main", ",", "input", ",", "range", "(", "self", ".", "ngpu", ")", ")", "\n", "", "else", ":", "\n", "            ", "output", "=", "self", ".", "main", "(", "input", ")", "\n", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.gan._netD.__init__": [[98, 121], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.loss.ARPLoss.ARPLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ngpu", ",", "nc", ",", "ndf", ")", ":", "\n", "        ", "super", "(", "_netD", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ngpu", "=", "ngpu", "\n", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "\n", "# input size. (nc) x 32 x 32", "\n", "nn", ".", "Conv2d", "(", "nc", ",", "ndf", "*", "2", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "# state size. (ndf*2) x 16 x 16", "\n", "nn", ".", "Conv2d", "(", "ndf", "*", "2", ",", "ndf", "*", "4", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ndf", "*", "4", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "# state size. (ndf*4) x 8 x 8", "\n", "nn", ".", "Conv2d", "(", "ndf", "*", "4", ",", "ndf", "*", "8", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ndf", "*", "8", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "# state size. (ndf*8) x 4 x 4", "\n", "nn", ".", "Conv2d", "(", "ndf", "*", "8", ",", "ndf", "*", "16", ",", "4", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "ndf", "*", "16", ",", "1", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.gan._netD.forward": [[123, 134], ["gan._netD.avgpool", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "gan._netD.classifier().flatten", "isinstance", "torch.parallel.data_parallel", "torch.parallel.data_parallel", "torch.parallel.data_parallel", "gan._netD.main", "range", "gan._netD.classifier"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.None.ood.main"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "if", "isinstance", "(", "input", ".", "data", ",", "torch", ".", "cuda", ".", "FloatTensor", ")", "and", "self", ".", "ngpu", ">", "1", ":", "\n", "            ", "output", "=", "nn", ".", "parallel", ".", "data_parallel", "(", "self", ".", "main", ",", "input", ",", "range", "(", "self", ".", "ngpu", ")", ")", "\n", "", "else", ":", "\n", "            ", "output", "=", "self", ".", "main", "(", "input", ")", "\n", "\n", "", "output", "=", "self", ".", "avgpool", "(", "output", ")", "\n", "output", "=", "torch", ".", "flatten", "(", "output", ",", "1", ")", "\n", "output", "=", "self", ".", "classifier", "(", "output", ")", ".", "flatten", "(", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.gan._netG.__init__": [[136, 159], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.loss.ARPLoss.ARPLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ngpu", ",", "nz", ",", "ngf", ",", "nc", ")", ":", "\n", "        ", "super", "(", "_netG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ngpu", "=", "ngpu", "\n", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "\n", "# input is Z, going into a convolution", "\n", "nn", ".", "ConvTranspose2d", "(", "nz", ",", "ngf", "*", "8", ",", "4", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", "*", "8", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "# state size. (ngf*8) x 4 x 4", "\n", "nn", ".", "ConvTranspose2d", "(", "ngf", "*", "8", ",", "ngf", "*", "4", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", "*", "4", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "# state size. (ngf*4) x 8 x 8", "\n", "nn", ".", "ConvTranspose2d", "(", "ngf", "*", "4", ",", "ngf", "*", "2", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", "*", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "# state size. (ngf*2) x 16 x 16", "\n", "nn", ".", "ConvTranspose2d", "(", "ngf", "*", "2", ",", "ngf", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "# state size. (nc) x 32 x 32", "\n", "nn", ".", "ConvTranspose2d", "(", "ngf", ",", "nc", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.gan._netG.forward": [[161, 168], ["isinstance", "torch.parallel.data_parallel", "torch.parallel.data_parallel", "torch.parallel.data_parallel", "gan._netG.main", "range"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.None.ood.main"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "if", "isinstance", "(", "input", ".", "data", ",", "torch", ".", "cuda", ".", "FloatTensor", ")", "and", "self", ".", "ngpu", ">", "1", ":", "\n", "            ", "output", "=", "nn", ".", "parallel", ".", "data_parallel", "(", "self", ".", "main", ",", "input", ",", "range", "(", "self", ".", "ngpu", ")", ")", "\n", "", "else", ":", "\n", "            ", "output", "=", "self", ".", "main", "(", "input", ")", "\n", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.gan.weights_init": [[9, 16], ["classname.find", "m.weight.data.normal_", "classname.find", "m.weight.data.normal_", "m.bias.data.fill_"], "function", ["None"], ["def", "weights_init", "(", "m", ")", ":", "\n", "    ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "classname", ".", "find", "(", "'Conv'", ")", "!=", "-", "1", ":", "\n", "        ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0.0", ",", "0.02", ")", "\n", "", "elif", "classname", ".", "find", "(", "'BatchNorm'", ")", "!=", "-", "1", ":", "\n", "        ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "1.0", ",", "0.02", ")", "\n", "m", ".", "bias", ".", "data", ".", "fill_", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.gan.Generator32": [[86, 90], ["gan._netG32", "_netG32.apply"], "function", ["None"], ["", "", "def", "Generator32", "(", "n_gpu", ",", "nz", ",", "ngf", ",", "nc", ")", ":", "\n", "    ", "model", "=", "_netG32", "(", "n_gpu", ",", "nz", ",", "ngf", ",", "nc", ")", "\n", "model", ".", "apply", "(", "weights_init", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.gan.Discriminator32": [[91, 95], ["gan._netD32", "_netD32.apply"], "function", ["None"], ["", "def", "Discriminator32", "(", "n_gpu", ",", "nc", ",", "ndf", ")", ":", "\n", "    ", "model", "=", "_netD32", "(", "n_gpu", ",", "nc", ",", "ndf", ")", "\n", "model", ".", "apply", "(", "weights_init", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.gan.Generator": [[169, 173], ["gan._netG", "_netG.apply"], "function", ["None"], ["", "", "def", "Generator", "(", "n_gpu", ",", "nz", ",", "ngf", ",", "nc", ")", ":", "\n", "    ", "model", "=", "_netG", "(", "n_gpu", ",", "nz", ",", "ngf", ",", "nc", ")", "\n", "model", ".", "apply", "(", "weights_init", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.gan.Discriminator": [[174, 178], ["gan._netD", "_netD.apply"], "function", ["None"], ["", "def", "Discriminator", "(", "n_gpu", ",", "nc", ",", "ndf", ")", ":", "\n", "    ", "model", "=", "_netD", "(", "n_gpu", ",", "nc", ",", "ndf", ")", "\n", "model", ".", "apply", "(", "weights_init", ")", "\n", "return", "model", "", "", ""]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnet.BasicBlock.__init__": [[26, 38], ["torch.Module.__init__", "resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.loss.ARPLoss.ARPLoss.__init__", "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.conv3x3", "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.conv3x3"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "in_planes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnet.BasicBlock.forward": [[40, 46], ["torch.relu", "torch.relu", "torch.relu", "resnet.BasicBlock.bn2", "resnet.BasicBlock.shortcut", "torch.relu", "torch.relu", "torch.relu", "resnet.BasicBlock.bn1", "resnet.BasicBlock.conv2", "resnet.BasicBlock.conv1"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnet.PreActBlock.__init__": [[52, 62], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "resnet.conv3x3", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.loss.ARPLoss.ARPLoss.__init__", "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.conv3x3", "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.conv3x3"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "PreActBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "in_planes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnet.PreActBlock.forward": [[64, 71], ["torch.relu", "torch.relu", "torch.relu", "resnet.PreActBlock.conv1", "resnet.PreActBlock.conv2", "resnet.PreActBlock.bn1", "hasattr", "resnet.PreActBlock.shortcut", "torch.relu", "torch.relu", "torch.relu", "resnet.PreActBlock.bn2"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "x", ")", ")", "\n", "shortcut", "=", "self", ".", "shortcut", "(", "out", ")", "if", "hasattr", "(", "self", ",", "'shortcut'", ")", "else", "x", "\n", "out", "=", "self", ".", "conv1", "(", "out", ")", "\n", "out", "=", "self", ".", "conv2", "(", "F", ".", "relu", "(", "self", ".", "bn2", "(", "out", ")", ")", ")", "\n", "out", "+=", "shortcut", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnet.Bottleneck.__init__": [[76, 90], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.loss.ARPLoss.ARPLoss.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnet.Bottleneck.forward": [[92, 99], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "resnet.Bottleneck.bn3", "resnet.Bottleneck.shortcut", "torch.relu", "torch.relu", "torch.relu", "resnet.Bottleneck.bn1", "resnet.Bottleneck.bn2", "resnet.Bottleneck.conv3", "resnet.Bottleneck.conv1", "resnet.Bottleneck.conv2"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", ")", "\n", "out", "=", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out", ")", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnet.PreActBottleneck.__init__": [[105, 117], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.loss.ARPLoss.ARPLoss.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "PreActBottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnet.PreActBottleneck.forward": [[119, 127], ["torch.relu", "torch.relu", "torch.relu", "resnet.PreActBottleneck.conv1", "resnet.PreActBottleneck.conv2", "resnet.PreActBottleneck.conv3", "resnet.PreActBottleneck.bn1", "hasattr", "resnet.PreActBottleneck.shortcut", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "resnet.PreActBottleneck.bn2", "resnet.PreActBottleneck.bn3"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "x", ")", ")", "\n", "shortcut", "=", "self", ".", "shortcut", "(", "out", ")", "if", "hasattr", "(", "self", ",", "'shortcut'", ")", "else", "x", "\n", "out", "=", "self", ".", "conv1", "(", "out", ")", "\n", "out", "=", "self", ".", "conv2", "(", "F", ".", "relu", "(", "self", ".", "bn2", "(", "out", ")", ")", ")", "\n", "out", "=", "self", ".", "conv3", "(", "F", ".", "relu", "(", "self", ".", "bn3", "(", "out", ")", ")", ")", "\n", "out", "+=", "shortcut", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnet.ResNet.__init__": [[130, 142], ["torch.Module.__init__", "resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.loss.ARPLoss.ARPLoss.__init__", "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.conv3x3", "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.ResNetABN._make_layer", "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.ResNetABN._make_layer", "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.ResNetABN._make_layer", "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.ResNetABN._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "num_blocks", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_planes", "=", "64", "\n", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "3", ",", "64", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "num_blocks", "[", "0", "]", ",", "stride", "=", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "num_blocks", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "num_blocks", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "num_blocks", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnet.ResNet._make_layer": [[143, 150], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "num_blocks", ",", "stride", ")", ":", "\n", "        ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "num_blocks", "-", "1", ")", "\n", "layers", "=", "[", "]", "\n", "for", "stride", "in", "strides", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "in_planes", ",", "planes", ",", "stride", ")", ")", "\n", "self", ".", "in_planes", "=", "planes", "*", "block", ".", "expansion", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnet.ResNet.forward": [[151, 165], ["torch.relu", "torch.relu", "torch.relu", "resnet.ResNet.layer1", "resnet.ResNet.layer2", "resnet.ResNet.layer3", "resnet.ResNet.layer4", "resnet.ResNet.avgpool", "out.view.view.view", "resnet.ResNet.linear", "resnet.ResNet.bn1", "out.view.view.size", "resnet.ResNet.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "return_feature", "=", "False", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "self", ".", "layer4", "(", "out", ")", "\n", "# out = F.avg_pool2d(out, 4)", "\n", "out", "=", "self", ".", "avgpool", "(", "out", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "y", "=", "self", ".", "linear", "(", "out", ")", "\n", "if", "return_feature", ":", "\n", "            ", "return", "out", ",", "y", "\n", "", "else", ":", "\n", "            ", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnet.ResNet.feature_list": [[167, 183], ["torch.relu", "torch.relu", "torch.relu", "out_list.append", "resnet.ResNet.layer1", "out_list.append", "resnet.ResNet.layer2", "out_list.append", "resnet.ResNet.layer3", "out_list.append", "resnet.ResNet.layer4", "out_list.append", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "out.view.view.view", "resnet.ResNet.linear", "resnet.ResNet.bn1", "out.view.view.size", "resnet.ResNet.conv1"], "methods", ["None"], ["", "", "def", "feature_list", "(", "self", ",", "x", ")", ":", "\n", "        ", "out_list", "=", "[", "]", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out_list", ".", "append", "(", "out", ")", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out_list", ".", "append", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out_list", ".", "append", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out_list", ".", "append", "(", "out", ")", "\n", "out", "=", "self", ".", "layer4", "(", "out", ")", "\n", "out_list", ".", "append", "(", "out", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "4", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "y", "=", "self", ".", "linear", "(", "out", ")", "\n", "return", "y", ",", "out_list", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnet.ResNet.intermediate_forward": [[185, 202], ["torch.relu", "torch.relu", "torch.relu", "resnet.ResNet.bn1", "resnet.ResNet.layer1", "resnet.ResNet.conv1", "resnet.ResNet.layer1", "resnet.ResNet.layer2", "resnet.ResNet.layer1", "resnet.ResNet.layer2", "resnet.ResNet.layer3", "resnet.ResNet.layer1", "resnet.ResNet.layer2", "resnet.ResNet.layer3", "resnet.ResNet.layer4"], "methods", ["None"], ["", "def", "intermediate_forward", "(", "self", ",", "x", ",", "layer_index", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "if", "layer_index", "==", "1", ":", "\n", "            ", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "", "elif", "layer_index", "==", "2", ":", "\n", "            ", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "", "elif", "layer_index", "==", "3", ":", "\n", "            ", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "", "elif", "layer_index", "==", "4", ":", "\n", "            ", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "self", ".", "layer4", "(", "out", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnet.ResNet.penultimate_forward": [[204, 214], ["torch.relu", "torch.relu", "torch.relu", "resnet.ResNet.layer1", "resnet.ResNet.layer2", "resnet.ResNet.layer3", "resnet.ResNet.layer4", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "out.view.view.view", "resnet.ResNet.linear", "resnet.ResNet.bn1", "out.view.view.size", "resnet.ResNet.conv1"], "methods", ["None"], ["", "def", "penultimate_forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "penultimate", "=", "self", ".", "layer4", "(", "out", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "penultimate", ",", "4", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "y", "=", "self", ".", "linear", "(", "out", ")", "\n", "return", "y", ",", "penultimate", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnet.conv3x3": [[19, 21], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnet.ResNet18": [[215, 217], ["resnet.ResNet"], "function", ["None"], ["", "", "def", "ResNet18", "(", "num_c", ")", ":", "\n", "    ", "return", "ResNet", "(", "PreActBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "num_classes", "=", "num_c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnet.ResNet34": [[218, 220], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet34", "(", "num_c", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "num_classes", "=", "num_c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnet.ResNet50": [[221, 223], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet50", "(", ")", ":", "\n", "    ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnet.ResNet101": [[224, 226], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet101", "(", ")", ":", "\n", "    ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnet.ResNet152": [[227, 229], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet152", "(", ")", ":", "\n", "    ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnet.test": [[231, 235], ["resnet.ResNet18", "ResNet18.", "print", "torch.autograd.Variable", "net.size", "torch.randn", "torch.randn", "torch.randn"], "function", ["home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnet.ResNet18"], ["", "def", "test", "(", ")", ":", "\n", "    ", "net", "=", "ResNet18", "(", ")", "\n", "y", "=", "net", "(", "Variable", "(", "torch", ".", "randn", "(", "1", ",", "3", ",", "32", ",", "32", ")", ")", ")", "\n", "print", "(", "y", ".", "size", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.ABN._MultiBatchNorm.__init__": [[7, 13], ["torch.nn.Module.__init__", "torch.nn.ModuleList", "torch.nn.BatchNorm2d", "range"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.loss.ARPLoss.ARPLoss.__init__"], ["def", "__init__", "(", "self", ",", "num_features", ",", "num_classes", ",", "eps", "=", "1e-5", ",", "momentum", "=", "0.1", ",", "affine", "=", "True", ",", "\n", "track_running_stats", "=", "True", ")", ":", "\n", "        ", "super", "(", "_MultiBatchNorm", ",", "self", ")", ".", "__init__", "(", ")", "\n", "#         self.bns = nn.ModuleList([nn.modules.batchnorm._BatchNorm(num_features, eps, momentum, affine, track_running_stats) for _ in range(num_classes)])", "\n", "self", ".", "bns", "=", "nn", ".", "ModuleList", "(", "\n", "[", "nn", ".", "BatchNorm2d", "(", "num_features", ",", "eps", ",", "momentum", ",", "affine", ",", "track_running_stats", ")", "for", "_", "in", "range", "(", "num_classes", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.ABN._MultiBatchNorm.reset_running_stats": [[14, 17], ["bn.reset_running_stats"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.models.ABN._MultiBatchNorm.reset_running_stats"], ["", "def", "reset_running_stats", "(", "self", ")", ":", "\n", "        ", "for", "bn", "in", "self", ".", "bns", ":", "\n", "            ", "bn", ".", "reset_running_stats", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.ABN._MultiBatchNorm.reset_parameters": [[18, 21], ["bn.reset_parameters"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.models.ABN._MultiBatchNorm.reset_parameters"], ["", "", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "for", "bn", "in", "self", ".", "bns", ":", "\n", "            ", "bn", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.ABN._MultiBatchNorm._check_input_dim": [[22, 24], ["None"], "methods", ["None"], ["", "", "def", "_check_input_dim", "(", "self", ",", "input", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.ABN._MultiBatchNorm.forward": [[25, 29], ["ABN._MultiBatchNorm._check_input_dim", "bn"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.models.ABN.MultiBatchNorm._check_input_dim"], ["", "def", "forward", "(", "self", ",", "x", ",", "domain_label", ")", ":", "\n", "        ", "self", ".", "_check_input_dim", "(", "x", ")", "\n", "bn", "=", "self", ".", "bns", "[", "domain_label", "[", "0", "]", "]", "\n", "return", "bn", "(", "x", ")", ",", "domain_label", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.ABN.MultiBatchNorm._check_input_dim": [[32, 36], ["input.dim", "ValueError", "input.dim"], "methods", ["None"], ["    ", "def", "_check_input_dim", "(", "self", ",", "input", ")", ":", "\n", "        ", "if", "input", ".", "dim", "(", ")", "!=", "4", ":", "\n", "            ", "raise", "ValueError", "(", "'expected 4D input (got {}D input)'", "\n", ".", "format", "(", "input", ".", "dim", "(", ")", ")", ")", "", "", "", "", ""]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.Conv2d.__init__": [[42, 51], ["_pair", "_pair", "_pair", "_pair", "torch.nn.modules.conv._ConvNd.__init__", "_pair"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.loss.ARPLoss.ARPLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "bias", "=", "True", ")", ":", "\n", "        ", "kernel_size", "=", "_pair", "(", "kernel_size", ")", "\n", "stride", "=", "_pair", "(", "stride", ")", "\n", "padding", "=", "_pair", "(", "padding", ")", "\n", "dilation", "=", "_pair", "(", "dilation", ")", "\n", "super", "(", "Conv2d", ",", "self", ")", ".", "__init__", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "padding", ",", "dilation", ",", "\n", "False", ",", "_pair", "(", "0", ")", ",", "groups", ",", "bias", ",", "padding_mode", "=", "'zeros'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.Conv2d.forward": [[52, 55], ["torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ",", "domain_label", ")", ":", "\n", "        ", "return", "F", ".", "conv2d", "(", "input", ",", "self", ".", "weight", ",", "self", ".", "bias", ",", "self", ".", "stride", ",", "\n", "self", ".", "padding", ",", "self", ".", "dilation", ",", "self", ".", "groups", ")", ",", "domain_label", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.TwoInputSequential.__init__": [[61, 69], ["torch.Module.__init__", "isinstance", "args[].items", "enumerate", "len", "resnetABN.TwoInputSequential.add_module", "resnetABN.TwoInputSequential.add_module", "str"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.loss.ARPLoss.ARPLoss.__init__"], ["def", "__init__", "(", "self", ",", "*", "args", ")", ":", "\n", "        ", "super", "(", "TwoInputSequential", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "len", "(", "args", ")", "==", "1", "and", "isinstance", "(", "args", "[", "0", "]", ",", "OrderedDict", ")", ":", "\n", "            ", "for", "key", ",", "module", "in", "args", "[", "0", "]", ".", "items", "(", ")", ":", "\n", "                ", "self", ".", "add_module", "(", "key", ",", "module", ")", "\n", "", "", "else", ":", "\n", "            ", "for", "idx", ",", "module", "in", "enumerate", "(", "args", ")", ":", "\n", "                ", "self", ".", "add_module", "(", "str", "(", "idx", ")", ",", "module", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.TwoInputSequential._get_item_by_idx": [[70, 78], ["len", "operator.index", "next", "IndexError", "itertools.islice"], "methods", ["None"], ["", "", "", "def", "_get_item_by_idx", "(", "self", ",", "iterator", ",", "idx", ")", ":", "\n", "        ", "\"\"\"Get the idx-th item of the iterator\"\"\"", "\n", "size", "=", "len", "(", "self", ")", "\n", "idx", "=", "operator", ".", "index", "(", "idx", ")", "\n", "if", "not", "-", "size", "<=", "idx", "<", "size", ":", "\n", "            ", "raise", "IndexError", "(", "'index {} is out of range'", ".", "format", "(", "idx", ")", ")", "\n", "", "idx", "%=", "size", "\n", "return", "next", "(", "islice", "(", "iterator", ",", "idx", ",", "None", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.TwoInputSequential.__getitem__": [[79, 84], ["isinstance", "resnetABN.TwoInputSequential", "resnetABN.TwoInputSequential._get_item_by_idx", "collections.OrderedDict", "resnetABN.TwoInputSequential._modules.values", "list", "resnetABN.TwoInputSequential._modules.items"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.TwoInputSequential._get_item_by_idx"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "isinstance", "(", "idx", ",", "slice", ")", ":", "\n", "            ", "return", "TwoInputSequential", "(", "OrderedDict", "(", "list", "(", "self", ".", "_modules", ".", "items", "(", ")", ")", "[", "idx", "]", ")", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "_get_item_by_idx", "(", "self", ".", "_modules", ".", "values", "(", ")", ",", "idx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.TwoInputSequential.__setitem__": [[85, 88], ["resnetABN.TwoInputSequential._get_item_by_idx", "setattr", "resnetABN.TwoInputSequential._modules.keys"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.TwoInputSequential._get_item_by_idx"], ["", "", "def", "__setitem__", "(", "self", ",", "idx", ",", "module", ")", ":", "\n", "        ", "key", "=", "self", ".", "_get_item_by_idx", "(", "self", ".", "_modules", ".", "keys", "(", ")", ",", "idx", ")", "\n", "return", "setattr", "(", "self", ",", "key", ",", "module", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.TwoInputSequential.__delitem__": [[89, 96], ["isinstance", "resnetABN.TwoInputSequential._get_item_by_idx", "delattr", "list", "delattr", "resnetABN.TwoInputSequential._modules.keys", "resnetABN.TwoInputSequential._modules.keys"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.TwoInputSequential._get_item_by_idx"], ["", "def", "__delitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "isinstance", "(", "idx", ",", "slice", ")", ":", "\n", "            ", "for", "key", "in", "list", "(", "self", ".", "_modules", ".", "keys", "(", ")", ")", "[", "idx", "]", ":", "\n", "                ", "delattr", "(", "self", ",", "key", ")", "\n", "", "", "else", ":", "\n", "            ", "key", "=", "self", ".", "_get_item_by_idx", "(", "self", ".", "_modules", ".", "keys", "(", ")", ",", "idx", ")", "\n", "delattr", "(", "self", ",", "key", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.TwoInputSequential.__len__": [[97, 99], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "_modules", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.TwoInputSequential.__dir__": [[100, 104], ["torch.Module.__dir__", "key.isdigit"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.TwoInputSequential.__dir__"], ["", "def", "__dir__", "(", "self", ")", ":", "\n", "        ", "keys", "=", "super", "(", "TwoInputSequential", ",", "self", ")", ".", "__dir__", "(", ")", "\n", "keys", "=", "[", "key", "for", "key", "in", "keys", "if", "not", "key", ".", "isdigit", "(", ")", "]", "\n", "return", "keys", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.TwoInputSequential.forward": [[105, 109], ["resnetABN.TwoInputSequential._modules.values", "module"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input1", ",", "input2", ")", ":", "\n", "        ", "for", "module", "in", "self", ".", "_modules", ".", "values", "(", ")", ":", "\n", "            ", "input1", ",", "input2", "=", "module", "(", "input1", ",", "input2", ")", "\n", "", "return", "input1", ",", "input2", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.ResNetABN.__init__": [[173, 186], ["torch.Module.__init__", "resnetABN.conv3x3", "models.ABN.MultiBatchNorm", "resnetABN.ResNetABN._make_layer", "resnetABN.ResNetABN._make_layer", "resnetABN.ResNetABN._make_layer", "resnetABN.ResNetABN._make_layer", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.loss.ARPLoss.ARPLoss.__init__", "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.conv3x3", "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.ResNetABN._make_layer", "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.ResNetABN._make_layer", "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.ResNetABN._make_layer", "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.ResNetABN._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "num_classes", "=", "10", ",", "num_bns", "=", "2", ")", ":", "\n", "        ", "self", ".", "inplanes", "=", "64", "\n", "self", ".", "num_bns", "=", "num_bns", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "super", "(", "ResNetABN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "3", ",", "64", ")", "\n", "self", ".", "bn1", "=", "MultiBatchNorm", "(", "64", ",", "self", ".", "num_bns", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ",", "stride", "=", "1", ",", "num_bns", "=", "self", ".", "num_bns", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ",", "num_bns", "=", "self", ".", "num_bns", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ",", "num_bns", "=", "self", ".", "num_bns", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ",", "num_bns", "=", "self", ".", "num_bns", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.ResNetABN._make_layer": [[187, 204], ["layers.append", "range", "resnetABN.TwoInputSequential", "resnetABN.TwoInputSequential", "block", "layers.append", "resnetABN.Conv2d", "models.ABN.MultiBatchNorm", "block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ",", "num_bns", "=", "2", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "TwoInputSequential", "(", "\n", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "MultiBatchNorm", "(", "planes", "*", "block", ".", "expansion", ",", "num_bns", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ",", "num_bns", "=", "num_bns", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "\n", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "num_bns", "=", "num_bns", ")", ")", "\n", "\n", "", "return", "TwoInputSequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.ResNetABN.forward": [[205, 224], ["resnetABN.ResNetABN.conv1", "resnetABN.ResNetABN.bn1", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "resnetABN.ResNetABN.layer1", "resnetABN.ResNetABN.layer2", "resnetABN.ResNetABN.layer3", "resnetABN.ResNetABN.layer4", "resnetABN.ResNetABN.avgpool", "resnetABN.ResNetABN.view", "resnetABN.ResNetABN.fc", "resnetABN.ResNetABN.size", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "rf", "=", "False", ",", "domain_label", "=", "None", ")", ":", "\n", "        ", "if", "domain_label", "is", "None", ":", "\n", "            ", "domain_label", "=", "0", "*", "torch", ".", "ones", "(", "x", ".", "shape", "[", "0", "]", ",", "dtype", "=", "torch", ".", "long", ")", ".", "cuda", "(", ")", "\n", "", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", ",", "_", "=", "self", ".", "bn1", "(", "x", ",", "domain_label", ")", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "x", ",", "_", "=", "self", ".", "layer1", "(", "x", ",", "domain_label", ")", "\n", "x", ",", "_", "=", "self", ".", "layer2", "(", "x", ",", "domain_label", ")", "\n", "x", ",", "_", "=", "self", ".", "layer3", "(", "x", ",", "domain_label", ")", "\n", "x", ",", "_", "=", "self", ".", "layer4", "(", "x", ",", "domain_label", ")", "\n", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "feat", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "fc", "(", "feat", ")", "\n", "\n", "if", "rf", ":", "\n", "            ", "return", "feat", ",", "x", "\n", "", "else", ":", "\n", "            ", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.BasicBlock.__init__": [[229, 237], ["torch.Module.__init__", "resnetABN.conv3x3", "models.ABN.MultiBatchNorm", "resnetABN.conv3x3", "models.ABN.MultiBatchNorm"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.loss.ARPLoss.ARPLoss.__init__", "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.conv3x3", "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "num_bns", "=", "2", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "MultiBatchNorm", "(", "planes", ",", "num_bns", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "MultiBatchNorm", "(", "planes", ",", "num_bns", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.BasicBlock.forward": [[238, 255], ["resnetABN.BasicBlock.conv1", "resnetABN.BasicBlock.bn1", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "resnetABN.BasicBlock.conv2", "resnetABN.BasicBlock.bn2", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "resnetABN.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "domain_label", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", ",", "_", "=", "self", ".", "bn1", "(", "out", ",", "domain_label", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", ",", "_", "=", "self", ".", "bn2", "(", "out", ",", "domain_label", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", ",", "_", "=", "self", ".", "downsample", "(", "x", ",", "domain_label", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", ",", "domain_label", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.Bottleneck.__init__": [[260, 272], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "models.ABN.MultiBatchNorm", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "models.ABN.MultiBatchNorm", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "models.ABN.MultiBatchNorm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.loss.ARPLoss.ARPLoss.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "num_bns", "=", "2", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "MultiBatchNorm", "(", "planes", ",", "num_bns", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "MultiBatchNorm", "(", "planes", ",", "num_bns", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "*", "4", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "MultiBatchNorm", "(", "planes", "*", "4", ",", "num_bns", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.Bottleneck.forward": [[273, 294], ["resnetABN.Bottleneck.conv1", "resnetABN.Bottleneck.bn1", "resnetABN.Bottleneck.relu", "resnetABN.Bottleneck.conv2", "resnetABN.Bottleneck.bn2", "resnetABN.Bottleneck.relu", "resnetABN.Bottleneck.conv3", "resnetABN.Bottleneck.bn3", "resnetABN.Bottleneck.relu", "resnetABN.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "domain_label", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", ",", "_", "=", "self", ".", "bn1", "(", "out", ",", "domain_label", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", ",", "_", "=", "self", ".", "bn2", "(", "out", ",", "domain_label", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", ",", "_", "=", "self", ".", "bn3", "(", "out", ",", "domain_label", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", ",", "_", "=", "self", ".", "downsample", "(", "x", ",", "domain_label", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", ",", "domain_label", "", "", "", ""]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.conv3x3": [[27, 31], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.resnet18ABN": [[111, 115], ["resnetABN.ResNetABN"], "function", ["None"], ["", "", "def", "resnet18ABN", "(", "num_classes", "=", "10", ",", "num_bns", "=", "2", ")", ":", "\n", "    ", "model", "=", "ResNetABN", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "num_classes", "=", "num_classes", ",", "num_bns", "=", "num_bns", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.resnet34ABN": [[117, 121], ["resnetABN.ResNetABN"], "function", ["None"], ["", "def", "resnet34ABN", "(", "num_classes", "=", "10", ",", "num_bns", "=", "2", ")", ":", "\n", "    ", "model", "=", "ResNetABN", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "num_classes", "=", "num_classes", ",", "num_bns", "=", "num_bns", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN.resnet50ABN": [[122, 126], ["resnetABN.ResNetABN"], "function", ["None"], ["", "def", "resnet50ABN", "(", "num_classes", "=", "10", ",", "num_bns", "=", "2", ")", ":", "\n", "    ", "model", "=", "ResNetABN", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "num_classes", "=", "num_classes", ",", "num_bns", "=", "num_bns", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.models.resnetABN._update_initial_weights_ABN": [[131, 170], ["state_dict.copy", "state_dict.items", "list", "len", "state_dict.copy.keys", "range", "range", "range", "range", "print", "val.data.clone", "range", "val.data.clone", "val.data.clone", "val.data.clone", "val.data.clone", "state_dict.copy.keys", "len"], "function", ["None"], ["", "def", "_update_initial_weights_ABN", "(", "state_dict", ",", "num_classes", "=", "1000", ",", "num_bns", "=", "2", ",", "ABN_type", "=", "'all'", ")", ":", "\n", "    ", "new_state_dict", "=", "state_dict", ".", "copy", "(", ")", "\n", "\n", "for", "key", ",", "val", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "        ", "update_dict", "=", "False", "\n", "if", "(", "(", "(", "'bn'", "in", "key", "or", "'downsample.1'", "in", "key", ")", "and", "ABN_type", "==", "'all'", ")", "or", "\n", "(", "(", "'bn1'", "in", "key", ")", "and", "ABN_type", "==", "'partial-bn1'", ")", ")", ":", "\n", "            ", "update_dict", "=", "True", "\n", "\n", "", "if", "(", "update_dict", ")", ":", "\n", "            ", "if", "'weight'", "in", "key", ":", "\n", "                ", "for", "d", "in", "range", "(", "num_bns", ")", ":", "\n", "                    ", "new_state_dict", "[", "key", "[", "0", ":", "-", "6", "]", "+", "'bns.{}.weight'", ".", "format", "(", "d", ")", "]", "=", "val", ".", "data", ".", "clone", "(", ")", "\n", "\n", "", "", "elif", "'bias'", "in", "key", ":", "\n", "                ", "for", "d", "in", "range", "(", "num_bns", ")", ":", "\n", "                    ", "new_state_dict", "[", "key", "[", "0", ":", "-", "4", "]", "+", "'bns.{}.bias'", ".", "format", "(", "d", ")", "]", "=", "val", ".", "data", ".", "clone", "(", ")", "\n", "\n", "", "", "if", "'running_mean'", "in", "key", ":", "\n", "                ", "for", "d", "in", "range", "(", "num_bns", ")", ":", "\n", "                    ", "new_state_dict", "[", "key", "[", "0", ":", "-", "12", "]", "+", "'bns.{}.running_mean'", ".", "format", "(", "d", ")", "]", "=", "val", ".", "data", ".", "clone", "(", ")", "\n", "\n", "", "", "if", "'running_var'", "in", "key", ":", "\n", "                ", "for", "d", "in", "range", "(", "num_bns", ")", ":", "\n", "                    ", "new_state_dict", "[", "key", "[", "0", ":", "-", "11", "]", "+", "'bns.{}.running_var'", ".", "format", "(", "d", ")", "]", "=", "val", ".", "data", ".", "clone", "(", ")", "\n", "\n", "", "", "if", "'num_batches_tracked'", "in", "key", ":", "\n", "                ", "for", "d", "in", "range", "(", "num_bns", ")", ":", "\n", "                    ", "new_state_dict", "[", "\n", "key", "[", "0", ":", "-", "len", "(", "'num_batches_tracked'", ")", "]", "+", "'bns.{}.num_batches_tracked'", ".", "format", "(", "d", ")", "]", "=", "val", ".", "data", ".", "clone", "(", ")", "\n", "\n", "", "", "", "", "if", "num_classes", "!=", "1000", "or", "len", "(", "[", "key", "for", "key", "in", "new_state_dict", ".", "keys", "(", ")", "if", "'fc'", "in", "key", "]", ")", ">", "1", ":", "\n", "        ", "key_list", "=", "list", "(", "new_state_dict", ".", "keys", "(", ")", ")", "\n", "for", "key", "in", "key_list", ":", "\n", "            ", "if", "'fc'", "in", "key", ":", "\n", "                ", "print", "(", "'pretrained {} are not used as initial params.'", ".", "format", "(", "key", ")", ")", "\n", "del", "new_state_dict", "[", "key", "]", "\n", "\n", "", "", "", "return", "new_state_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.core.train.train": [[6, 34], ["net.train", "utils.AverageMeter", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "enumerate", "utils.AverageMeter.update", "torch.set_grad_enabled", "torch.set_grad_enabled", "optimizer.zero_grad", "net", "criterion", "loss.backward", "optimizer.step", "loss.item", "labels.size", "print", "data.cuda", "labels.cuda", "len"], "function", ["home.repos.pwc.inspect_result.iCGY96_ARPL.core.train.train", "home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.AverageMeter.update"], ["def", "train", "(", "net", ",", "criterion", ",", "optimizer", ",", "trainloader", ",", "epoch", "=", "None", ",", "**", "options", ")", ":", "\n", "    ", "net", ".", "train", "(", ")", "\n", "losses", "=", "AverageMeter", "(", ")", "\n", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "\n", "loss_all", "=", "0", "\n", "for", "batch_idx", ",", "(", "data", ",", "labels", ")", "in", "enumerate", "(", "trainloader", ")", ":", "\n", "        ", "if", "options", "[", "'use_gpu'", "]", ":", "\n", "            ", "data", ",", "labels", "=", "data", ".", "cuda", "(", ")", ",", "labels", ".", "cuda", "(", ")", "\n", "\n", "", "with", "torch", ".", "set_grad_enabled", "(", "True", ")", ":", "\n", "            ", "optimizer", ".", "zero_grad", "(", ")", "\n", "x", ",", "y", "=", "net", "(", "data", ",", "True", ")", "\n", "logits", ",", "loss", "=", "criterion", "(", "x", ",", "y", ",", "labels", ")", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "labels", ".", "size", "(", "0", ")", ")", "\n", "\n", "if", "(", "batch_idx", "+", "1", ")", "%", "options", "[", "'print_freq'", "]", "==", "0", ":", "\n", "            ", "print", "(", "\"Batch {}/{}\\t Loss {:.6f} ({:.6f})\"", ".", "format", "(", "batch_idx", "+", "1", ",", "len", "(", "trainloader", ")", ",", "losses", ".", "val", ",", "losses", ".", "avg", ")", ")", "\n", "\n", "", "loss_all", "+=", "losses", ".", "avg", "\n", "\n", "", "return", "loss_all", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.core.train.train_cs": [[35, 130], ["print", "net.train", "netD.train", "netG.train", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "enumerate", "utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "torch.FloatTensor().fill_", "torch.FloatTensor().fill_", "torch.FloatTensor().normal_().cuda", "torch.FloatTensor().normal_().cuda", "torch.autograd.Variable", "netG", "gan_target.cuda.fill_", "torch.autograd.Variable", "optimizerD.zero_grad", "netD", "criterionD", "criterionD.backward", "torch.autograd.Variable", "netD", "criterionD", "criterionD.backward", "optimizerD.step", "optimizerG.zero_grad", "torch.autograd.Variable", "netD", "criterionD", "net", "criterion.fake_loss().mean", "generator_loss.backward", "optimizerG.step", "lossesG.update", "lossesD.update", "optimizer.zero_grad", "net", "criterion", "torch.FloatTensor().normal_().cuda", "torch.FloatTensor().normal_().cuda", "torch.autograd.Variable", "netG", "net", "criterion.fake_loss().mean", "total_loss.backward", "optimizer.step", "losses.update", "data.cuda.cuda", "labels.cuda.cuda", "gan_target.cuda.cuda", "torch.autograd.Variable", "torch.autograd.Variable", "noise.cuda.cuda", "gan_target.cuda.fill_", "netG.detach", "gan_target.cuda.fill_", "generator_loss.item", "labels.cuda.size", "errD.item", "labels.cuda.size", "noise.cuda.cuda", "total_loss.item", "labels.cuda.size", "print", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor().normal_", "torch.FloatTensor().normal_", "torch.ones().cuda", "torch.ones().cuda", "criterion.fake_loss", "torch.ones().cuda", "torch.ones().cuda", "torch.FloatTensor().normal_", "torch.FloatTensor().normal_", "torch.ones().cuda", "torch.ones().cuda", "criterion.fake_loss", "labels.cuda.size", "len", "torch.FloatTensor", "torch.FloatTensor", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.FloatTensor", "torch.FloatTensor", "torch.ones", "torch.ones", "data.cuda.size", "data.cuda.size"], "function", ["home.repos.pwc.inspect_result.iCGY96_ARPL.core.train.train", "home.repos.pwc.inspect_result.iCGY96_ARPL.core.train.train", "home.repos.pwc.inspect_result.iCGY96_ARPL.core.train.train", "home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.iCGY96_ARPL.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.iCGY96_ARPL.loss.ARPLoss.ARPLoss.fake_loss", "home.repos.pwc.inspect_result.iCGY96_ARPL.loss.ARPLoss.ARPLoss.fake_loss"], ["", "def", "train_cs", "(", "net", ",", "netD", ",", "netG", ",", "criterion", ",", "criterionD", ",", "optimizer", ",", "optimizerD", ",", "optimizerG", ",", "\n", "trainloader", ",", "epoch", "=", "None", ",", "**", "options", ")", ":", "\n", "    ", "print", "(", "'train with confusing samples'", ")", "\n", "losses", ",", "lossesG", ",", "lossesD", "=", "AverageMeter", "(", ")", ",", "AverageMeter", "(", ")", ",", "AverageMeter", "(", ")", "\n", "\n", "net", ".", "train", "(", ")", "\n", "netD", ".", "train", "(", ")", "\n", "netG", ".", "train", "(", ")", "\n", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "\n", "loss_all", ",", "real_label", ",", "fake_label", "=", "0", ",", "1", ",", "0", "\n", "for", "batch_idx", ",", "(", "data", ",", "labels", ")", "in", "enumerate", "(", "trainloader", ")", ":", "\n", "        ", "gan_target", "=", "torch", ".", "FloatTensor", "(", "labels", ".", "size", "(", ")", ")", ".", "fill_", "(", "0", ")", "\n", "if", "options", "[", "'use_gpu'", "]", ":", "\n", "            ", "data", "=", "data", ".", "cuda", "(", "non_blocking", "=", "True", ")", "\n", "labels", "=", "labels", ".", "cuda", "(", "non_blocking", "=", "True", ")", "\n", "gan_target", "=", "gan_target", ".", "cuda", "(", ")", "\n", "\n", "", "data", ",", "labels", "=", "Variable", "(", "data", ")", ",", "Variable", "(", "labels", ")", "\n", "\n", "noise", "=", "torch", ".", "FloatTensor", "(", "data", ".", "size", "(", "0", ")", ",", "options", "[", "'nz'", "]", ",", "options", "[", "'ns'", "]", ",", "options", "[", "'ns'", "]", ")", ".", "normal_", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", "\n", "if", "options", "[", "'use_gpu'", "]", ":", "\n", "            ", "noise", "=", "noise", ".", "cuda", "(", ")", "\n", "", "noise", "=", "Variable", "(", "noise", ")", "\n", "fake", "=", "netG", "(", "noise", ")", "\n", "\n", "###########################", "\n", "# (1) Update D network    #", "\n", "###########################", "\n", "# train with real", "\n", "gan_target", ".", "fill_", "(", "real_label", ")", "\n", "targetv", "=", "Variable", "(", "gan_target", ")", "\n", "optimizerD", ".", "zero_grad", "(", ")", "\n", "output", "=", "netD", "(", "data", ")", "\n", "errD_real", "=", "criterionD", "(", "output", ",", "targetv", ")", "\n", "errD_real", ".", "backward", "(", ")", "\n", "\n", "# train with fake", "\n", "targetv", "=", "Variable", "(", "gan_target", ".", "fill_", "(", "fake_label", ")", ")", "\n", "output", "=", "netD", "(", "fake", ".", "detach", "(", ")", ")", "\n", "errD_fake", "=", "criterionD", "(", "output", ",", "targetv", ")", "\n", "errD_fake", ".", "backward", "(", ")", "\n", "errD", "=", "errD_real", "+", "errD_fake", "\n", "optimizerD", ".", "step", "(", ")", "\n", "\n", "###########################", "\n", "# (2) Update G network    #", "\n", "###########################", "\n", "optimizerG", ".", "zero_grad", "(", ")", "\n", "# Original GAN loss", "\n", "targetv", "=", "Variable", "(", "gan_target", ".", "fill_", "(", "real_label", ")", ")", "\n", "output", "=", "netD", "(", "fake", ")", "\n", "errG", "=", "criterionD", "(", "output", ",", "targetv", ")", "\n", "\n", "# minimize the true distribution", "\n", "x", ",", "y", "=", "net", "(", "fake", ",", "True", ",", "1", "*", "torch", ".", "ones", "(", "data", ".", "shape", "[", "0", "]", ",", "dtype", "=", "torch", ".", "long", ")", ".", "cuda", "(", ")", ")", "\n", "errG_F", "=", "criterion", ".", "fake_loss", "(", "x", ")", ".", "mean", "(", ")", "\n", "generator_loss", "=", "errG", "+", "options", "[", "'beta'", "]", "*", "errG_F", "\n", "generator_loss", ".", "backward", "(", ")", "\n", "optimizerG", ".", "step", "(", ")", "\n", "\n", "lossesG", ".", "update", "(", "generator_loss", ".", "item", "(", ")", ",", "labels", ".", "size", "(", "0", ")", ")", "\n", "lossesD", ".", "update", "(", "errD", ".", "item", "(", ")", ",", "labels", ".", "size", "(", "0", ")", ")", "\n", "\n", "\n", "###########################", "\n", "# (3) Update classifier   #", "\n", "###########################", "\n", "# cross entropy loss", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "x", ",", "y", "=", "net", "(", "data", ",", "True", ",", "0", "*", "torch", ".", "ones", "(", "data", ".", "shape", "[", "0", "]", ",", "dtype", "=", "torch", ".", "long", ")", ".", "cuda", "(", ")", ")", "\n", "_", ",", "loss", "=", "criterion", "(", "x", ",", "y", ",", "labels", ")", "\n", "\n", "# KL divergence", "\n", "noise", "=", "torch", ".", "FloatTensor", "(", "data", ".", "size", "(", "0", ")", ",", "options", "[", "'nz'", "]", ",", "options", "[", "'ns'", "]", ",", "options", "[", "'ns'", "]", ")", ".", "normal_", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", "\n", "if", "options", "[", "'use_gpu'", "]", ":", "\n", "            ", "noise", "=", "noise", ".", "cuda", "(", ")", "\n", "", "noise", "=", "Variable", "(", "noise", ")", "\n", "fake", "=", "netG", "(", "noise", ")", "\n", "x", ",", "y", "=", "net", "(", "fake", ",", "True", ",", "1", "*", "torch", ".", "ones", "(", "data", ".", "shape", "[", "0", "]", ",", "dtype", "=", "torch", ".", "long", ")", ".", "cuda", "(", ")", ")", "\n", "F_loss_fake", "=", "criterion", ".", "fake_loss", "(", "x", ")", ".", "mean", "(", ")", "\n", "total_loss", "=", "loss", "+", "options", "[", "'beta'", "]", "*", "F_loss_fake", "\n", "total_loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "losses", ".", "update", "(", "total_loss", ".", "item", "(", ")", ",", "labels", ".", "size", "(", "0", ")", ")", "\n", "\n", "if", "(", "batch_idx", "+", "1", ")", "%", "options", "[", "'print_freq'", "]", "==", "0", ":", "\n", "            ", "print", "(", "\"Batch {}/{}\\t Net {:.3f} ({:.3f}) G {:.3f} ({:.3f}) D {:.3f} ({:.3f})\"", ".", "format", "(", "batch_idx", "+", "1", ",", "len", "(", "trainloader", ")", ",", "losses", ".", "val", ",", "losses", ".", "avg", ",", "lossesG", ".", "val", ",", "lossesG", ".", "avg", ",", "lossesD", ".", "val", ",", "lossesD", ".", "avg", ")", ")", "\n", "\n", "", "loss_all", "+=", "losses", ".", "avg", "\n", "\n", "", "return", "loss_all", "\n", "", ""]], "home.repos.pwc.inspect_result.iCGY96_ARPL.core.test.test": [[11, 63], ["net.eval", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "print", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "core.evaluation.compute_oscr", "torch.no_grad", "torch.no_grad", "enumerate", "float", "numpy.max", "numpy.max", "core.evaluation.metric_ood", "float", "torch.set_grad_enabled", "torch.set_grad_enabled", "net", "criterion", "labels.size", "np.concatenate.append", "np.concatenate.append", "torch.set_grad_enabled", "torch.set_grad_enabled", "net", "criterion", "np.concatenate.append", "data.cuda", "labels.cuda", "logits.data.max", "logits.data.cpu().numpy", "labels.data.cpu().numpy", "data.cuda", "labels.cuda", "logits.data.cpu().numpy", "logits.data.cpu", "labels.data.cpu", "logits.data.cpu"], "function", ["home.repos.pwc.inspect_result.iCGY96_ARPL.core.evaluation.compute_oscr", "home.repos.pwc.inspect_result.iCGY96_ARPL.core.evaluation.metric_ood"], ["def", "test", "(", "net", ",", "criterion", ",", "testloader", ",", "outloader", ",", "epoch", "=", "None", ",", "**", "options", ")", ":", "\n", "    ", "net", ".", "eval", "(", ")", "\n", "correct", ",", "total", "=", "0", ",", "0", "\n", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "\n", "_pred_k", ",", "_pred_u", ",", "_labels", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "data", ",", "labels", "in", "testloader", ":", "\n", "            ", "if", "options", "[", "'use_gpu'", "]", ":", "\n", "                ", "data", ",", "labels", "=", "data", ".", "cuda", "(", ")", ",", "labels", ".", "cuda", "(", ")", "\n", "\n", "", "with", "torch", ".", "set_grad_enabled", "(", "False", ")", ":", "\n", "                ", "x", ",", "y", "=", "net", "(", "data", ",", "True", ")", "\n", "logits", ",", "_", "=", "criterion", "(", "x", ",", "y", ")", "\n", "predictions", "=", "logits", ".", "data", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "total", "+=", "labels", ".", "size", "(", "0", ")", "\n", "correct", "+=", "(", "predictions", "==", "labels", ".", "data", ")", ".", "sum", "(", ")", "\n", "\n", "_pred_k", ".", "append", "(", "logits", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "_labels", ".", "append", "(", "labels", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "", "", "for", "batch_idx", ",", "(", "data", ",", "labels", ")", "in", "enumerate", "(", "outloader", ")", ":", "\n", "            ", "if", "options", "[", "'use_gpu'", "]", ":", "\n", "                ", "data", ",", "labels", "=", "data", ".", "cuda", "(", ")", ",", "labels", ".", "cuda", "(", ")", "\n", "\n", "", "with", "torch", ".", "set_grad_enabled", "(", "False", ")", ":", "\n", "                ", "x", ",", "y", "=", "net", "(", "data", ",", "True", ")", "\n", "# x, y = net(data, return_feature=True)", "\n", "logits", ",", "_", "=", "criterion", "(", "x", ",", "y", ")", "\n", "_pred_u", ".", "append", "(", "logits", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "# Accuracy", "\n", "", "", "", "acc", "=", "float", "(", "correct", ")", "*", "100.", "/", "float", "(", "total", ")", "\n", "print", "(", "'Acc: {:.5f}'", ".", "format", "(", "acc", ")", ")", "\n", "\n", "_pred_k", "=", "np", ".", "concatenate", "(", "_pred_k", ",", "0", ")", "\n", "_pred_u", "=", "np", ".", "concatenate", "(", "_pred_u", ",", "0", ")", "\n", "_labels", "=", "np", ".", "concatenate", "(", "_labels", ",", "0", ")", "\n", "\n", "# Out-of-Distribution detction evaluation", "\n", "x1", ",", "x2", "=", "np", ".", "max", "(", "_pred_k", ",", "axis", "=", "1", ")", ",", "np", ".", "max", "(", "_pred_u", ",", "axis", "=", "1", ")", "\n", "results", "=", "evaluation", ".", "metric_ood", "(", "x1", ",", "x2", ")", "[", "'Bas'", "]", "\n", "\n", "# OSCR", "\n", "_oscr_socre", "=", "evaluation", ".", "compute_oscr", "(", "_pred_k", ",", "_pred_u", ",", "_labels", ")", "\n", "\n", "results", "[", "'ACC'", "]", "=", "acc", "\n", "results", "[", "'OSCR'", "]", "=", "_oscr_socre", "*", "100.", "\n", "\n", "return", "results", "", "", ""]], "home.repos.pwc.inspect_result.iCGY96_ARPL.core.evaluation.get_curve_online": [[5, 40], ["dict", "dict", "dict", "known.sort", "novel.sort", "numpy.max", "numpy.min", "range", "numpy.abs().argmin", "numpy.ones", "numpy.ones", "numpy.max", "numpy.max", "numpy.min", "numpy.min", "numpy.arange", "numpy.abs", "numpy.arange"], "function", ["None"], ["def", "get_curve_online", "(", "known", ",", "novel", ",", "stypes", "=", "[", "'Bas'", "]", ")", ":", "\n", "    ", "tp", ",", "fp", "=", "dict", "(", ")", ",", "dict", "(", ")", "\n", "tnr_at_tpr95", "=", "dict", "(", ")", "\n", "for", "stype", "in", "stypes", ":", "\n", "        ", "known", ".", "sort", "(", ")", "\n", "novel", ".", "sort", "(", ")", "\n", "end", "=", "np", ".", "max", "(", "[", "np", ".", "max", "(", "known", ")", ",", "np", ".", "max", "(", "novel", ")", "]", ")", "\n", "start", "=", "np", ".", "min", "(", "[", "np", ".", "min", "(", "known", ")", ",", "np", ".", "min", "(", "novel", ")", "]", ")", "\n", "num_k", "=", "known", ".", "shape", "[", "0", "]", "\n", "num_n", "=", "novel", ".", "shape", "[", "0", "]", "\n", "tp", "[", "stype", "]", "=", "-", "np", ".", "ones", "(", "[", "num_k", "+", "num_n", "+", "1", "]", ",", "dtype", "=", "int", ")", "\n", "fp", "[", "stype", "]", "=", "-", "np", ".", "ones", "(", "[", "num_k", "+", "num_n", "+", "1", "]", ",", "dtype", "=", "int", ")", "\n", "tp", "[", "stype", "]", "[", "0", "]", ",", "fp", "[", "stype", "]", "[", "0", "]", "=", "num_k", ",", "num_n", "\n", "k", ",", "n", "=", "0", ",", "0", "\n", "for", "l", "in", "range", "(", "num_k", "+", "num_n", ")", ":", "\n", "            ", "if", "k", "==", "num_k", ":", "\n", "                ", "tp", "[", "stype", "]", "[", "l", "+", "1", ":", "]", "=", "tp", "[", "stype", "]", "[", "l", "]", "\n", "fp", "[", "stype", "]", "[", "l", "+", "1", ":", "]", "=", "np", ".", "arange", "(", "fp", "[", "stype", "]", "[", "l", "]", "-", "1", ",", "-", "1", ",", "-", "1", ")", "\n", "break", "\n", "", "elif", "n", "==", "num_n", ":", "\n", "                ", "tp", "[", "stype", "]", "[", "l", "+", "1", ":", "]", "=", "np", ".", "arange", "(", "tp", "[", "stype", "]", "[", "l", "]", "-", "1", ",", "-", "1", ",", "-", "1", ")", "\n", "fp", "[", "stype", "]", "[", "l", "+", "1", ":", "]", "=", "fp", "[", "stype", "]", "[", "l", "]", "\n", "break", "\n", "", "else", ":", "\n", "                ", "if", "novel", "[", "n", "]", "<", "known", "[", "k", "]", ":", "\n", "                    ", "n", "+=", "1", "\n", "tp", "[", "stype", "]", "[", "l", "+", "1", "]", "=", "tp", "[", "stype", "]", "[", "l", "]", "\n", "fp", "[", "stype", "]", "[", "l", "+", "1", "]", "=", "fp", "[", "stype", "]", "[", "l", "]", "-", "1", "\n", "", "else", ":", "\n", "                    ", "k", "+=", "1", "\n", "tp", "[", "stype", "]", "[", "l", "+", "1", "]", "=", "tp", "[", "stype", "]", "[", "l", "]", "-", "1", "\n", "fp", "[", "stype", "]", "[", "l", "+", "1", "]", "=", "fp", "[", "stype", "]", "[", "l", "]", "\n", "", "", "", "tpr95_pos", "=", "np", ".", "abs", "(", "tp", "[", "stype", "]", "/", "num_k", "-", ".95", ")", ".", "argmin", "(", ")", "\n", "tnr_at_tpr95", "[", "stype", "]", "=", "1.", "-", "fp", "[", "stype", "]", "[", "tpr95_pos", "]", "/", "num_n", "\n", "", "return", "tp", ",", "fp", ",", "tnr_at_tpr95", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.core.evaluation.metric_ood": [[41, 98], ["evaluation.get_curve_online", "dict", "print", "print", "dict", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "print", "print", "print", "print", "print", "print", "numpy.trapz", "print", "print", "numpy.trapz", "numpy.trapz"], "function", ["home.repos.pwc.inspect_result.iCGY96_ARPL.core.evaluation.get_curve_online"], ["", "def", "metric_ood", "(", "x1", ",", "x2", ",", "stypes", "=", "[", "'Bas'", "]", ",", "verbose", "=", "True", ")", ":", "\n", "    ", "tp", ",", "fp", ",", "tnr_at_tpr95", "=", "get_curve_online", "(", "x1", ",", "x2", ",", "stypes", ")", "\n", "results", "=", "dict", "(", ")", "\n", "mtypes", "=", "[", "'TNR'", ",", "'AUROC'", ",", "'DTACC'", ",", "'AUIN'", ",", "'AUOUT'", "]", "\n", "if", "verbose", ":", "\n", "        ", "print", "(", "'      '", ",", "end", "=", "''", ")", "\n", "for", "mtype", "in", "mtypes", ":", "\n", "            ", "print", "(", "' {mtype:6s}'", ".", "format", "(", "mtype", "=", "mtype", ")", ",", "end", "=", "''", ")", "\n", "", "print", "(", "''", ")", "\n", "\n", "", "for", "stype", "in", "stypes", ":", "\n", "        ", "if", "verbose", ":", "\n", "            ", "print", "(", "'{stype:5s} '", ".", "format", "(", "stype", "=", "stype", ")", ",", "end", "=", "''", ")", "\n", "", "results", "[", "stype", "]", "=", "dict", "(", ")", "\n", "\n", "# TNR", "\n", "mtype", "=", "'TNR'", "\n", "results", "[", "stype", "]", "[", "mtype", "]", "=", "100.", "*", "tnr_at_tpr95", "[", "stype", "]", "\n", "if", "verbose", ":", "\n", "            ", "print", "(", "' {val:6.3f}'", ".", "format", "(", "val", "=", "results", "[", "stype", "]", "[", "mtype", "]", ")", ",", "end", "=", "''", ")", "\n", "\n", "# AUROC", "\n", "", "mtype", "=", "'AUROC'", "\n", "tpr", "=", "np", ".", "concatenate", "(", "[", "[", "1.", "]", ",", "tp", "[", "stype", "]", "/", "tp", "[", "stype", "]", "[", "0", "]", ",", "[", "0.", "]", "]", ")", "\n", "fpr", "=", "np", ".", "concatenate", "(", "[", "[", "1.", "]", ",", "fp", "[", "stype", "]", "/", "fp", "[", "stype", "]", "[", "0", "]", ",", "[", "0.", "]", "]", ")", "\n", "results", "[", "stype", "]", "[", "mtype", "]", "=", "100.", "*", "(", "-", "np", ".", "trapz", "(", "1.", "-", "fpr", ",", "tpr", ")", ")", "\n", "if", "verbose", ":", "\n", "            ", "print", "(", "' {val:6.3f}'", ".", "format", "(", "val", "=", "results", "[", "stype", "]", "[", "mtype", "]", ")", ",", "end", "=", "''", ")", "\n", "\n", "# DTACC", "\n", "", "mtype", "=", "'DTACC'", "\n", "results", "[", "stype", "]", "[", "mtype", "]", "=", "100.", "*", "(", ".5", "*", "(", "tp", "[", "stype", "]", "/", "tp", "[", "stype", "]", "[", "0", "]", "+", "1.", "-", "fp", "[", "stype", "]", "/", "fp", "[", "stype", "]", "[", "0", "]", ")", ".", "max", "(", ")", ")", "\n", "if", "verbose", ":", "\n", "            ", "print", "(", "' {val:6.3f}'", ".", "format", "(", "val", "=", "results", "[", "stype", "]", "[", "mtype", "]", ")", ",", "end", "=", "''", ")", "\n", "\n", "# AUIN", "\n", "", "mtype", "=", "'AUIN'", "\n", "denom", "=", "tp", "[", "stype", "]", "+", "fp", "[", "stype", "]", "\n", "denom", "[", "denom", "==", "0.", "]", "=", "-", "1.", "\n", "pin_ind", "=", "np", ".", "concatenate", "(", "[", "[", "True", "]", ",", "denom", ">", "0.", ",", "[", "True", "]", "]", ")", "\n", "pin", "=", "np", ".", "concatenate", "(", "[", "[", ".5", "]", ",", "tp", "[", "stype", "]", "/", "denom", ",", "[", "0.", "]", "]", ")", "\n", "results", "[", "stype", "]", "[", "mtype", "]", "=", "100.", "*", "(", "-", "np", ".", "trapz", "(", "pin", "[", "pin_ind", "]", ",", "tpr", "[", "pin_ind", "]", ")", ")", "\n", "if", "verbose", ":", "\n", "            ", "print", "(", "' {val:6.3f}'", ".", "format", "(", "val", "=", "results", "[", "stype", "]", "[", "mtype", "]", ")", ",", "end", "=", "''", ")", "\n", "\n", "# AUOUT", "\n", "", "mtype", "=", "'AUOUT'", "\n", "denom", "=", "tp", "[", "stype", "]", "[", "0", "]", "-", "tp", "[", "stype", "]", "+", "fp", "[", "stype", "]", "[", "0", "]", "-", "fp", "[", "stype", "]", "\n", "denom", "[", "denom", "==", "0.", "]", "=", "-", "1.", "\n", "pout_ind", "=", "np", ".", "concatenate", "(", "[", "[", "True", "]", ",", "denom", ">", "0.", ",", "[", "True", "]", "]", ")", "\n", "pout", "=", "np", ".", "concatenate", "(", "[", "[", "0.", "]", ",", "(", "fp", "[", "stype", "]", "[", "0", "]", "-", "fp", "[", "stype", "]", ")", "/", "denom", ",", "[", ".5", "]", "]", ")", "\n", "results", "[", "stype", "]", "[", "mtype", "]", "=", "100.", "*", "(", "np", ".", "trapz", "(", "pout", "[", "pout_ind", "]", ",", "1.", "-", "fpr", "[", "pout_ind", "]", ")", ")", "\n", "if", "verbose", ":", "\n", "            ", "print", "(", "' {val:6.3f}'", ".", "format", "(", "val", "=", "results", "[", "stype", "]", "[", "mtype", "]", ")", ",", "end", "=", "''", ")", "\n", "print", "(", "''", ")", "\n", "\n", "", "", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.core.evaluation.compute_oscr": [[99, 147], ["numpy.argmax", "numpy.zeros", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "len", "np.concatenate.argsort", "range", "sorted", "range", "numpy.max", "numpy.max", "len", "s_k_target[].sum", "s_u_target[].sum", "zip", "numpy.zeros", "numpy.zeros", "numpy.ones", "range", "range", "float", "float", "float", "float", "len", "len", "len", "len", "len"], "function", ["None"], ["", "def", "compute_oscr", "(", "pred_k", ",", "pred_u", ",", "labels", ")", ":", "\n", "    ", "x1", ",", "x2", "=", "np", ".", "max", "(", "pred_k", ",", "axis", "=", "1", ")", ",", "np", ".", "max", "(", "pred_u", ",", "axis", "=", "1", ")", "\n", "pred", "=", "np", ".", "argmax", "(", "pred_k", ",", "axis", "=", "1", ")", "\n", "correct", "=", "(", "pred", "==", "labels", ")", "\n", "m_x1", "=", "np", ".", "zeros", "(", "len", "(", "x1", ")", ")", "\n", "m_x1", "[", "pred", "==", "labels", "]", "=", "1", "\n", "k_target", "=", "np", ".", "concatenate", "(", "(", "m_x1", ",", "np", ".", "zeros", "(", "len", "(", "x2", ")", ")", ")", ",", "axis", "=", "0", ")", "\n", "u_target", "=", "np", ".", "concatenate", "(", "(", "np", ".", "zeros", "(", "len", "(", "x1", ")", ")", ",", "np", ".", "ones", "(", "len", "(", "x2", ")", ")", ")", ",", "axis", "=", "0", ")", "\n", "predict", "=", "np", ".", "concatenate", "(", "(", "x1", ",", "x2", ")", ",", "axis", "=", "0", ")", "\n", "n", "=", "len", "(", "predict", ")", "\n", "\n", "# Cutoffs are of prediction values", "\n", "\n", "CCR", "=", "[", "0", "for", "x", "in", "range", "(", "n", "+", "2", ")", "]", "\n", "FPR", "=", "[", "0", "for", "x", "in", "range", "(", "n", "+", "2", ")", "]", "\n", "\n", "idx", "=", "predict", ".", "argsort", "(", ")", "\n", "\n", "s_k_target", "=", "k_target", "[", "idx", "]", "\n", "s_u_target", "=", "u_target", "[", "idx", "]", "\n", "\n", "for", "k", "in", "range", "(", "n", "-", "1", ")", ":", "\n", "        ", "CC", "=", "s_k_target", "[", "k", "+", "1", ":", "]", ".", "sum", "(", ")", "\n", "FP", "=", "s_u_target", "[", "k", ":", "]", ".", "sum", "(", ")", "\n", "\n", "# True\tPositive Rate", "\n", "CCR", "[", "k", "]", "=", "float", "(", "CC", ")", "/", "float", "(", "len", "(", "x1", ")", ")", "\n", "# False Positive Rate", "\n", "FPR", "[", "k", "]", "=", "float", "(", "FP", ")", "/", "float", "(", "len", "(", "x2", ")", ")", "\n", "\n", "", "CCR", "[", "n", "]", "=", "0.0", "\n", "FPR", "[", "n", "]", "=", "0.0", "\n", "CCR", "[", "n", "+", "1", "]", "=", "1.0", "\n", "FPR", "[", "n", "+", "1", "]", "=", "1.0", "\n", "\n", "# Positions of ROC curve (FPR, TPR)", "\n", "ROC", "=", "sorted", "(", "zip", "(", "FPR", ",", "CCR", ")", ",", "reverse", "=", "True", ")", "\n", "\n", "OSCR", "=", "0", "\n", "\n", "# Compute AUROC Using Trapezoidal Rule", "\n", "for", "j", "in", "range", "(", "n", "+", "1", ")", ":", "\n", "        ", "h", "=", "ROC", "[", "j", "]", "[", "0", "]", "-", "ROC", "[", "j", "+", "1", "]", "[", "0", "]", "\n", "w", "=", "(", "ROC", "[", "j", "]", "[", "1", "]", "+", "ROC", "[", "j", "+", "1", "]", "[", "1", "]", ")", "/", "2.0", "\n", "\n", "OSCR", "=", "OSCR", "+", "h", "*", "w", "\n", "\n", "", "return", "OSCR", "", "", ""]], "home.repos.pwc.inspect_result.iCGY96_ARPL.loss.RPLoss.RPLoss.__init__": [[7, 16], ["torch.CrossEntropyLoss.__init__", "float", "loss.Dist.Dist", "torch.Parameter", "torch.Parameter", "torch.Parameter", "RPLoss.RPLoss.radius.data.fill_", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.loss.ARPLoss.ARPLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "**", "options", ")", ":", "\n", "        ", "super", "(", "RPLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "weight_pl", "=", "float", "(", "options", "[", "'weight_pl'", "]", ")", "\n", "self", ".", "temp", "=", "options", "[", "'temp'", "]", "\n", "self", ".", "Dist", "=", "Dist", "(", "num_classes", "=", "options", "[", "'num_classes'", "]", ",", "feat_dim", "=", "options", "[", "'feat_dim'", "]", ",", "num_centers", "=", "options", "[", "'num_centers'", "]", ")", "\n", "self", ".", "radius", "=", "1", "\n", "\n", "self", ".", "radius", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "self", ".", "radius", ")", ")", "\n", "self", ".", "radius", ".", "data", ".", "fill_", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.loss.RPLoss.RPLoss.forward": [[17, 28], ["RPLoss.RPLoss.Dist", "torch.softmax", "torch.softmax", "torch.softmax", "torch.cross_entropy", "torch.cross_entropy", "torch.cross_entropy", "torch.mse_loss", "torch.mse_loss", "torch.mse_loss"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ",", "labels", "=", "None", ")", ":", "\n", "        ", "dist", "=", "self", ".", "Dist", "(", "x", ")", "\n", "logits", "=", "F", ".", "softmax", "(", "dist", ",", "dim", "=", "1", ")", "\n", "if", "labels", "is", "None", ":", "return", "logits", ",", "0", "\n", "loss", "=", "F", ".", "cross_entropy", "(", "dist", "/", "self", ".", "temp", ",", "labels", ")", "\n", "center_batch", "=", "self", ".", "Dist", ".", "centers", "[", "labels", ",", ":", "]", "\n", "_dis", "=", "(", "x", "-", "center_batch", ")", ".", "pow", "(", "2", ")", ".", "mean", "(", "1", ")", "\n", "loss_r", "=", "F", ".", "mse_loss", "(", "_dis", ",", "self", ".", "radius", ")", "\n", "loss", "=", "loss", "+", "self", ".", "weight_pl", "*", "loss_r", "\n", "\n", "return", "logits", ",", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.loss.GCPLoss.GCPLoss.__init__": [[7, 12], ["torch.CrossEntropyLoss.__init__", "loss.Dist.Dist"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.loss.ARPLoss.ARPLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "**", "options", ")", ":", "\n", "        ", "super", "(", "GCPLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "weight_pl", "=", "options", "[", "'weight_pl'", "]", "\n", "self", ".", "temp", "=", "options", "[", "'temp'", "]", "\n", "self", ".", "Dist", "=", "Dist", "(", "num_classes", "=", "options", "[", "'num_classes'", "]", ",", "feat_dim", "=", "options", "[", "'feat_dim'", "]", ")", "# ", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.loss.GCPLoss.GCPLoss.forward": [[13, 23], ["GCPLoss.GCPLoss.Dist", "torch.softmax", "torch.softmax", "torch.softmax", "torch.cross_entropy", "torch.cross_entropy", "torch.cross_entropy", "torch.mse_loss", "torch.mse_loss", "torch.mse_loss"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ",", "labels", "=", "None", ")", ":", "\n", "        ", "dist", "=", "self", ".", "Dist", "(", "x", ")", "\n", "logits", "=", "F", ".", "softmax", "(", "-", "dist", ",", "dim", "=", "1", ")", "\n", "if", "labels", "is", "None", ":", "return", "logits", ",", "0", "\n", "loss", "=", "F", ".", "cross_entropy", "(", "-", "dist", "/", "self", ".", "temp", ",", "labels", ")", "\n", "center_batch", "=", "self", ".", "Dist", ".", "centers", "[", "labels", ",", ":", "]", "\n", "loss_r", "=", "F", ".", "mse_loss", "(", "x", ",", "center_batch", ")", "/", "2", "\n", "loss", "=", "loss", "+", "self", ".", "weight_pl", "*", "loss_r", "\n", "\n", "return", "logits", ",", "loss", "", "", "", ""]], "home.repos.pwc.inspect_result.iCGY96_ARPL.loss.Softmax.Softmax.__init__": [[6, 9], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.loss.ARPLoss.ARPLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "**", "options", ")", ":", "\n", "        ", "super", "(", "Softmax", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "temp", "=", "options", "[", "'temp'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.loss.Softmax.Softmax.forward": [[10, 15], ["torch.softmax", "torch.softmax", "torch.softmax", "torch.cross_entropy", "torch.cross_entropy", "torch.cross_entropy"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ",", "labels", "=", "None", ")", ":", "\n", "        ", "logits", "=", "F", ".", "softmax", "(", "y", ",", "dim", "=", "1", ")", "\n", "if", "labels", "is", "None", ":", "return", "logits", ",", "0", "\n", "loss", "=", "F", ".", "cross_entropy", "(", "y", "/", "self", ".", "temp", ",", "labels", ")", "\n", "return", "logits", ",", "loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.iCGY96_ARPL.loss.Dist.Dist.__init__": [[7, 18], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "Dist.Dist.centers.data.fill_", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.loss.ARPLoss.ARPLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "10", ",", "num_centers", "=", "1", ",", "feat_dim", "=", "2", ",", "init", "=", "'random'", ")", ":", "\n", "        ", "super", "(", "Dist", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "feat_dim", "=", "feat_dim", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "num_centers", "=", "num_centers", "\n", "\n", "if", "init", "==", "'random'", ":", "\n", "            ", "self", ".", "centers", "=", "nn", ".", "Parameter", "(", "0.1", "*", "torch", ".", "randn", "(", "num_classes", "*", "num_centers", ",", "self", ".", "feat_dim", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "centers", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "num_classes", "*", "num_centers", ",", "self", ".", "feat_dim", ")", ")", "\n", "self", ".", "centers", ".", "data", ".", "fill_", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.loss.Dist.Dist.forward": [[19, 39], ["torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "features.matmul", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "float", "center.t", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "features", ",", "center", "=", "None", ",", "metric", "=", "'l2'", ")", ":", "\n", "        ", "if", "metric", "==", "'l2'", ":", "\n", "            ", "f_2", "=", "torch", ".", "sum", "(", "torch", ".", "pow", "(", "features", ",", "2", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "if", "center", "is", "None", ":", "\n", "                ", "c_2", "=", "torch", ".", "sum", "(", "torch", ".", "pow", "(", "self", ".", "centers", ",", "2", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "dist", "=", "f_2", "-", "2", "*", "torch", ".", "matmul", "(", "features", ",", "torch", ".", "transpose", "(", "self", ".", "centers", ",", "1", ",", "0", ")", ")", "+", "torch", ".", "transpose", "(", "c_2", ",", "1", ",", "0", ")", "\n", "", "else", ":", "\n", "                ", "c_2", "=", "torch", ".", "sum", "(", "torch", ".", "pow", "(", "center", ",", "2", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "dist", "=", "f_2", "-", "2", "*", "torch", ".", "matmul", "(", "features", ",", "torch", ".", "transpose", "(", "center", ",", "1", ",", "0", ")", ")", "+", "torch", ".", "transpose", "(", "c_2", ",", "1", ",", "0", ")", "\n", "", "dist", "=", "dist", "/", "float", "(", "features", ".", "shape", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "            ", "if", "center", "is", "None", ":", "\n", "                ", "center", "=", "self", ".", "centers", "\n", "", "else", ":", "\n", "                ", "center", "=", "center", "\n", "", "dist", "=", "features", ".", "matmul", "(", "center", ".", "t", "(", ")", ")", "\n", "", "dist", "=", "torch", ".", "reshape", "(", "dist", ",", "[", "-", "1", ",", "self", ".", "num_classes", ",", "self", ".", "num_centers", "]", ")", "\n", "dist", "=", "torch", ".", "mean", "(", "dist", ",", "dim", "=", "2", ")", "\n", "\n", "return", "dist", "\n", "", "", ""]], "home.repos.pwc.inspect_result.iCGY96_ARPL.loss.ARPLoss.ARPLoss.__init__": [[7, 17], ["torch.CrossEntropyLoss.__init__", "float", "loss.Dist.Dist", "torch.Parameter", "torch.Parameter", "torch.Parameter", "ARPLoss.ARPLoss.radius.data.fill_", "torch.MarginRankingLoss", "torch.MarginRankingLoss", "torch.MarginRankingLoss", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.iCGY96_ARPL.loss.ARPLoss.ARPLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "**", "options", ")", ":", "\n", "        ", "super", "(", "ARPLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "use_gpu", "=", "options", "[", "'use_gpu'", "]", "\n", "self", ".", "weight_pl", "=", "float", "(", "options", "[", "'weight_pl'", "]", ")", "\n", "self", ".", "temp", "=", "options", "[", "'temp'", "]", "\n", "self", ".", "Dist", "=", "Dist", "(", "num_classes", "=", "options", "[", "'num_classes'", "]", ",", "feat_dim", "=", "options", "[", "'feat_dim'", "]", ")", "\n", "self", ".", "points", "=", "self", ".", "Dist", ".", "centers", "\n", "self", ".", "radius", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "1", ")", ")", "\n", "self", ".", "radius", ".", "data", ".", "fill_", "(", "0", ")", "\n", "self", ".", "margin_loss", "=", "nn", ".", "MarginRankingLoss", "(", "margin", "=", "1.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.loss.ARPLoss.ARPLoss.forward": [[19, 35], ["ARPLoss.ARPLoss.Dist", "ARPLoss.ARPLoss.Dist", "torch.cross_entropy", "torch.cross_entropy", "torch.cross_entropy", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "ARPLoss.ARPLoss.margin_loss", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "_dis_known.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ",", "labels", "=", "None", ")", ":", "\n", "        ", "dist_dot_p", "=", "self", ".", "Dist", "(", "x", ",", "center", "=", "self", ".", "points", ",", "metric", "=", "'dot'", ")", "\n", "dist_l2_p", "=", "self", ".", "Dist", "(", "x", ",", "center", "=", "self", ".", "points", ")", "\n", "logits", "=", "dist_l2_p", "-", "dist_dot_p", "\n", "\n", "if", "labels", "is", "None", ":", "return", "logits", ",", "0", "\n", "loss", "=", "F", ".", "cross_entropy", "(", "logits", "/", "self", ".", "temp", ",", "labels", ")", "\n", "\n", "center_batch", "=", "self", ".", "points", "[", "labels", ",", ":", "]", "\n", "_dis_known", "=", "(", "x", "-", "center_batch", ")", ".", "pow", "(", "2", ")", ".", "mean", "(", "1", ")", "\n", "target", "=", "torch", ".", "ones", "(", "_dis_known", ".", "size", "(", ")", ")", ".", "cuda", "(", ")", "\n", "loss_r", "=", "self", ".", "margin_loss", "(", "self", ".", "radius", ",", "_dis_known", ",", "target", ")", "\n", "\n", "loss", "=", "loss", "+", "self", ".", "weight_pl", "*", "loss_r", "\n", "\n", "return", "logits", ",", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.iCGY96_ARPL.loss.ARPLoss.ARPLoss.fake_loss": [[36, 42], ["ARPLoss.ARPLoss.Dist", "torch.softmax", "torch.softmax", "torch.softmax", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log"], "methods", ["None"], ["", "def", "fake_loss", "(", "self", ",", "x", ")", ":", "\n", "        ", "logits", "=", "self", ".", "Dist", "(", "x", ",", "center", "=", "self", ".", "points", ")", "\n", "prob", "=", "F", ".", "softmax", "(", "logits", ",", "dim", "=", "1", ")", "\n", "loss", "=", "(", "prob", "*", "torch", ".", "log", "(", "prob", ")", ")", ".", "sum", "(", "1", ")", ".", "mean", "(", ")", ".", "exp", "(", ")", "\n", "\n", "return", "loss", "\n", "", "", ""]]}