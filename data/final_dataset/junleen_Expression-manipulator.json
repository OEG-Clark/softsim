{"home.repos.pwc.inspect_result.junleen_Expression-manipulator.src.train.Train.__init__": [[13, 29], ["options.train_option.TrainOptions().parse", "data.dataset.CustomDatasetDataLoader", "data.dataset.CustomDatasetDataLoader", "train.Train.data_loader_train.load_data", "train.Train.data_loader_test.load_data", "len", "len", "print", "print", "models.models.ModelsFactory.get_by_name", "utils.tb_visualizer.TBVisualizer", "train.Train._train", "options.train_option.TrainOptions"], "methods", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.options.base_option.BaseOptions.parse", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset.CustomDatasetDataLoader.load_data", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset.CustomDatasetDataLoader.load_data", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset.DatasetFactory.get_by_name", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.src.train.Train._train"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "_opt", "=", "TrainOptions", "(", ")", ".", "parse", "(", ")", "\n", "self", ".", "data_loader_train", "=", "CustomDatasetDataLoader", "(", "self", ".", "_opt", ",", "is_for_train", "=", "True", ")", "\n", "self", ".", "data_loader_test", "=", "CustomDatasetDataLoader", "(", "self", ".", "_opt", ",", "is_for_train", "=", "False", ")", "\n", "self", ".", "_dataset_train", "=", "self", ".", "data_loader_train", ".", "load_data", "(", ")", "\n", "self", ".", "_dataset_test", "=", "self", ".", "data_loader_test", ".", "load_data", "(", ")", "\n", "\n", "self", ".", "_dataset_train_size", "=", "len", "(", "self", ".", "data_loader_train", ")", "\n", "self", ".", "_dataset_test_size", "=", "len", "(", "self", ".", "data_loader_test", ")", "\n", "print", "(", "'#train images = %s'", "%", "self", ".", "_dataset_train_size", ")", "\n", "print", "(", "'#test images = %s'", "%", "self", ".", "_dataset_test_size", ")", "\n", "\n", "self", ".", "_model", "=", "ModelsFactory", ".", "get_by_name", "(", "self", ".", "_opt", ".", "model", ",", "self", ".", "_opt", ")", "\n", "self", ".", "_tb_visualizer", "=", "TBVisualizer", "(", "self", ".", "_opt", ")", "\n", "\n", "self", ".", "_train", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.src.train.Train._train": [[30, 58], ["time.time", "range", "time.time", "train.Train._train_epoch", "print", "print", "train.Train._model.save", "time.time", "train.Train._model.update_learning_rate"], "methods", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.src.train.Train._train_epoch", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel.save", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel.update_learning_rate"], ["", "def", "_train", "(", "self", ")", ":", "\n", "        ", "self", ".", "_total_steps", "=", "self", ".", "_opt", ".", "load_epoch", "*", "self", ".", "_dataset_train_size", "/", "self", ".", "_opt", ".", "batch_size", "\n", "self", ".", "_iters_per_epoch", "=", "self", ".", "_dataset_train_size", "/", "self", ".", "_opt", ".", "batch_size", "\n", "\n", "self", ".", "_last_print_time", "=", "time", ".", "time", "(", ")", "\n", "self", ".", "_last_display_time", "=", "None", "\n", "self", ".", "_last_save_latest_time", "=", "None", "\n", "for", "i_epoch", "in", "range", "(", "self", ".", "_opt", ".", "load_epoch", "+", "1", ",", "self", ".", "_opt", ".", "nepochs_no_decay", "+", "self", ".", "_opt", ".", "nepochs_decay", "+", "1", ")", ":", "\n", "            ", "epoch_start_time", "=", "time", ".", "time", "(", ")", "\n", "if", "i_epoch", "==", "30", ":", "\n", "                ", "self", ".", "_opt", ".", "train_G_every_n_iterations", "=", "3", "\n", "# train epoch", "\n", "", "self", ".", "_train_epoch", "(", "i_epoch", ")", "\n", "\n", "# save model", "\n", "if", "(", "i_epoch", "-", "self", ".", "_opt", ".", "load_epoch", "-", "1", ")", "%", "self", ".", "_opt", ".", "save_every_epoch", "==", "0", ":", "\n", "                ", "print", "(", "'saving the model at the end of epoch %d, iters %d'", "%", "(", "i_epoch", ",", "self", ".", "_total_steps", ")", ")", "\n", "self", ".", "_model", ".", "save", "(", "i_epoch", ")", "\n", "\n", "# print epoch info", "\n", "", "time_epoch", "=", "time", ".", "time", "(", ")", "-", "epoch_start_time", "\n", "print", "(", "'End of epoch %d / %d \\t Time Taken: %d sec (%d min or %d h)'", "%", "(", "i_epoch", ",", "self", ".", "_opt", ".", "nepochs_no_decay", "+", "self", ".", "_opt", ".", "nepochs_decay", ",", "time_epoch", ",", "\n", "time_epoch", "/", "60", ",", "time_epoch", "/", "3600", ")", ")", "\n", "\n", "# update learning rate", "\n", "if", "i_epoch", ">", "self", ".", "_opt", ".", "nepochs_no_decay", ":", "\n", "                ", "self", ".", "_model", ".", "update_learning_rate", "(", "i_epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.src.train.Train._train_epoch": [[59, 97], ["train.Train._model.set_train", "enumerate", "time.time", "train.Train._model.set_input", "train.Train._model.optimize_parameters", "train.Train._display_terminal", "time.time", "train.Train._display_visualizer_train", "train.Train._display_visualizer_val", "time.time", "print", "train.Train._model.save", "time.time", "time.time", "time.time", "time.time"], "methods", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel.set_train", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel.set_input", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel.optimize_parameters", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.src.train.Train._display_terminal", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.src.train.Train._display_visualizer_train", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.src.train.Train._display_visualizer_val", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel.save"], ["", "", "", "def", "_train_epoch", "(", "self", ",", "i_epoch", ")", ":", "\n", "        ", "epoch_iter", "=", "0", "\n", "self", ".", "_model", ".", "set_train", "(", ")", "\n", "for", "i_train_batch", ",", "train_batch", "in", "enumerate", "(", "self", ".", "_dataset_train", ")", ":", "\n", "            ", "iter_start_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "# display flags", "\n", "do_visuals", "=", "self", ".", "_last_display_time", "is", "None", "or", "time", ".", "time", "(", ")", "-", "self", ".", "_last_display_time", ">", "self", ".", "_opt", ".", "display_freq_s", "\n", "do_print_terminal", "=", "time", ".", "time", "(", ")", "-", "self", ".", "_last_print_time", ">", "self", ".", "_opt", ".", "print_freq_s", "or", "do_visuals", "\n", "\n", "# train model", "\n", "self", ".", "_model", ".", "set_input", "(", "train_batch", ")", "\n", "train_generator", "=", "(", "(", "i_train_batch", "+", "1", ")", "%", "self", ".", "_opt", ".", "train_G_every_n_iterations", "==", "0", ")", "or", "do_visuals", "or", "i_epoch", "<=", "self", ".", "_opt", ".", "nepochs_warm_up", "\n", "self", ".", "_model", ".", "optimize_parameters", "(", "train_generator", "=", "train_generator", ",", "keep_data_for_visuals", "=", "do_visuals", ")", "\n", "\n", "# update epoch info", "\n", "self", ".", "_total_steps", "+=", "1", "# self._opt.batch_size", "\n", "epoch_iter", "+=", "1", "# self._opt.batch_size", "\n", "\n", "# display terminal", "\n", "if", "do_print_terminal", ":", "\n", "                ", "self", ".", "_display_terminal", "(", "iter_start_time", ",", "i_epoch", ",", "i_train_batch", ",", "do_visuals", ")", "\n", "self", ".", "_last_print_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "# display visualizer", "\n", "", "if", "do_visuals", ":", "\n", "                ", "self", ".", "_display_visualizer_train", "(", "self", ".", "_total_steps", ")", "\n", "self", ".", "_display_visualizer_val", "(", "i_epoch", ",", "self", ".", "_total_steps", ")", "\n", "self", ".", "_last_display_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "# save model", "\n", "", "if", "(", "self", ".", "_last_save_latest_time", "is", "None", "or", "time", ".", "time", "(", ")", "-", "self", ".", "_last_save_latest_time", ">", "self", ".", "_opt", ".", "save_latest_freq_s", ")", "and", "i_epoch", "%", "self", ".", "_opt", ".", "save_every_epoch", "==", "0", ":", "\n", "                ", "print", "(", "'Saving the latest model (epoch %d, total steps %d)'", "%", "(", "i_epoch", ",", "self", ".", "_total_steps", ")", ")", "\n", "self", ".", "_model", ".", "save", "(", "i_epoch", ")", "\n", "self", ".", "_last_save_latest_time", "=", "time", ".", "time", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.src.train.Train._display_terminal": [[98, 102], ["train.Train._model.get_current_errors", "train.Train._tb_visualizer.print_current_train_errors", "time.time"], "methods", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel.get_current_errors", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.tb_visualizer.TBVisualizer.print_current_train_errors"], ["", "", "", "def", "_display_terminal", "(", "self", ",", "iter_start_time", ",", "i_epoch", ",", "i_train_batch", ",", "visuals_flag", ")", ":", "\n", "        ", "errors", "=", "self", ".", "_model", ".", "get_current_errors", "(", ")", "\n", "t", "=", "(", "time", ".", "time", "(", ")", "-", "iter_start_time", ")", "/", "self", ".", "_opt", ".", "batch_size", "\n", "self", ".", "_tb_visualizer", ".", "print_current_train_errors", "(", "i_epoch", ",", "i_train_batch", ",", "self", ".", "_iters_per_epoch", ",", "errors", ",", "t", ",", "visuals_flag", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.src.train.Train._display_visualizer_train": [[103, 107], ["train.Train._tb_visualizer.display_current_results", "train.Train._tb_visualizer.plot_scalars", "train.Train._tb_visualizer.plot_scalars", "train.Train._model.get_current_visuals", "train.Train._model.get_current_errors", "train.Train._model.get_current_scalars"], "methods", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.tb_visualizer.TBVisualizer.display_current_results", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.tb_visualizer.TBVisualizer.plot_scalars", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.tb_visualizer.TBVisualizer.plot_scalars", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel.get_current_visuals", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel.get_current_errors", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel.get_current_scalars"], ["", "def", "_display_visualizer_train", "(", "self", ",", "total_steps", ")", ":", "\n", "        ", "self", ".", "_tb_visualizer", ".", "display_current_results", "(", "self", ".", "_model", ".", "get_current_visuals", "(", ")", ",", "total_steps", ",", "is_train", "=", "True", ")", "\n", "self", ".", "_tb_visualizer", ".", "plot_scalars", "(", "self", ".", "_model", ".", "get_current_errors", "(", ")", ",", "total_steps", ",", "is_train", "=", "True", ")", "\n", "self", ".", "_tb_visualizer", ".", "plot_scalars", "(", "self", ".", "_model", ".", "get_current_scalars", "(", ")", ",", "total_steps", ",", "is_train", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.src.train.Train._display_visualizer_val": [[108, 144], ["time.time", "train.Train._model.set_eval", "collections.OrderedDict", "enumerate", "collections.OrderedDict.keys", "train.Train._tb_visualizer.print_current_validate_errors", "train.Train._tb_visualizer.plot_scalars", "train.Train._tb_visualizer.display_current_results", "train.Train._model.set_train", "train.Train._model.set_input", "train.Train._model.forward", "train.Train._model.get_current_errors", "train.Train.items", "time.time", "train.Train._model.get_current_visuals"], "methods", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel.set_eval", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.tb_visualizer.TBVisualizer.print_current_validate_errors", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.tb_visualizer.TBVisualizer.plot_scalars", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.tb_visualizer.TBVisualizer.display_current_results", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel.set_train", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel.set_input", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.UNet_MSF_Generator.forward", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel.get_current_errors", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel.get_current_visuals"], ["", "def", "_display_visualizer_val", "(", "self", ",", "i_epoch", ",", "total_steps", ")", ":", "\n", "        ", "val_start_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "# set model to eval", "\n", "self", ".", "_model", ".", "set_eval", "(", ")", "\n", "\n", "# evaluate self._opt.num_iters_validate epochs", "\n", "val_errors", "=", "OrderedDict", "(", ")", "\n", "for", "i_val_batch", ",", "val_batch", "in", "enumerate", "(", "self", ".", "_dataset_test", ")", ":", "\n", "            ", "if", "i_val_batch", "==", "self", ".", "_opt", ".", "num_iters_validate", ":", "\n", "                ", "break", "\n", "\n", "# evaluate model", "\n", "", "self", ".", "_model", ".", "set_input", "(", "val_batch", ")", "\n", "self", ".", "_model", ".", "forward", "(", "keep_data_for_visuals", "=", "True", "if", "i_val_batch", "==", "0", "else", "False", ",", "return_estimates", "=", "(", "i_val_batch", "==", "0", ")", ")", "\n", "errors", "=", "self", ".", "_model", ".", "get_current_errors", "(", ")", "\n", "\n", "# store current batch errors", "\n", "for", "k", ",", "v", "in", "errors", ".", "items", "(", ")", ":", "\n", "                ", "if", "k", "in", "val_errors", ":", "\n", "                    ", "val_errors", "[", "k", "]", "+=", "v", "\n", "", "else", ":", "\n", "                    ", "val_errors", "[", "k", "]", "=", "v", "\n", "\n", "# normalize errors", "\n", "", "", "", "for", "k", "in", "val_errors", ".", "keys", "(", ")", ":", "\n", "            ", "val_errors", "[", "k", "]", "/=", "self", ".", "_opt", ".", "num_iters_validate", "\n", "\n", "# visualize", "\n", "", "t", "=", "(", "time", ".", "time", "(", ")", "-", "val_start_time", ")", "\n", "self", ".", "_tb_visualizer", ".", "print_current_validate_errors", "(", "i_epoch", ",", "val_errors", ",", "t", ")", "\n", "self", ".", "_tb_visualizer", ".", "plot_scalars", "(", "val_errors", ",", "total_steps", ",", "is_train", "=", "False", ")", "\n", "self", ".", "_tb_visualizer", ".", "display_current_results", "(", "self", ".", "_model", ".", "get_current_visuals", "(", ")", ",", "total_steps", ",", "is_train", "=", "False", ")", "\n", "\n", "# set model back to train", "\n", "self", ".", "_model", ".", "set_train", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.plots.plot_au": [[5, 70], ["matplotlib.figure", "plt.figure.add_subplot", "fig.add_subplot.axis", "plt.figure.subplots_adjust", "fig.add_subplot.imshow", "plt.figure.canvas.draw", "numpy.fromstring", "data.reshape.reshape", "matplotlib.close", "len", "zip", "zip", "fig.add_subplot.text", "plt.figure.canvas.tostring_rgb", "fig.add_subplot.text", "fig.add_subplot.text", "fig.add_subplot.text", "fig.add_subplot.text", "plt.figure.canvas.get_width_height"], "function", ["None"], ["def", "plot_au", "(", "img", ",", "aus", ",", "title", "=", "None", ")", ":", "\n", "    ", "'''\n    Plot action Units\n    Args:\n        img: HxWx3\n        aux: N\n    return:\n        a image\n    '''", "\n", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "ax", "=", "fig", ".", "add_subplot", "(", "1", ",", "1", ",", "1", ")", "\n", "ax", ".", "axis", "(", "'off'", ")", "\n", "fig", ".", "subplots_adjust", "(", "0", ",", "0", ",", "0.8", ",", "1", ")", "# get rid of margins", "\n", "\n", "# display img", "\n", "ax", ".", "imshow", "(", "img", ")", "\n", "\n", "if", "len", "(", "aus", ")", "==", "11", ":", "\n", "        ", "au_ids", "=", "[", "'1'", ",", "'2'", ",", "'4'", ",", "'5'", ",", "'6'", ",", "'9'", ",", "'12'", ",", "'17'", ",", "'20'", ",", "'25'", ",", "'26'", "]", "\n", "x", "=", "0.1", "\n", "y", "=", "0.39", "\n", "i", "=", "0", "\n", "for", "au", ",", "id", "in", "zip", "(", "aus", ",", "au_ids", ")", ":", "\n", "            ", "if", "id", "==", "'9'", ":", "\n", "                ", "x", "=", "0.5", "\n", "y", "-=", ".15", "\n", "i", "=", "0", "\n", "", "elif", "id", "==", "'12'", ":", "\n", "                ", "x", "=", "0.1", "\n", "y", "-=", ".15", "\n", "i", "=", "0", "\n", "\n", "", "ax", ".", "text", "(", "x", "+", "i", "*", "0.2", ",", "y", ",", "id", ",", "horizontalalignment", "=", "'center'", ",", "verticalalignment", "=", "'center'", ",", "\n", "transform", "=", "ax", ".", "transAxes", ",", "color", "=", "'r'", ",", "fontsize", "=", "20", ")", "\n", "ax", ".", "text", "(", "(", "x", "-", "0.001", ")", "+", "i", "*", "0.2", ",", "y", "-", "0.07", ",", "au", ",", "horizontalalignment", "=", "'center'", ",", "verticalalignment", "=", "'center'", ",", "\n", "transform", "=", "ax", ".", "transAxes", ",", "color", "=", "'b'", ",", "fontsize", "=", "20", ")", "\n", "i", "+=", "1", "\n", "\n", "", "", "else", ":", "\n", "        ", "au_ids", "=", "[", "'1'", ",", "'2'", ",", "'4'", ",", "'5'", ",", "'6'", ",", "'7'", ",", "'9'", ",", "'10'", ",", "'12'", ",", "'14'", ",", "'15'", ",", "'17'", ",", "'20'", ",", "'23'", ",", "'25'", ",", "'26'", ",", "'45'", "]", "\n", "x", "=", "0.1", "\n", "y", "=", "0.39", "\n", "i", "=", "0", "\n", "for", "au", ",", "id", "in", "zip", "(", "aus", ",", "au_ids", ")", ":", "\n", "            ", "if", "id", "==", "'9'", "or", "id", "==", "'20'", ":", "\n", "                ", "x", "=", "0.1", "\n", "y", "-=", ".15", "\n", "i", "=", "0", "\n", "\n", "", "ax", ".", "text", "(", "x", "+", "i", "*", "0.2", ",", "y", ",", "id", ",", "horizontalalignment", "=", "'center'", ",", "verticalalignment", "=", "'center'", ",", "\n", "transform", "=", "ax", ".", "transAxes", ",", "color", "=", "'r'", ",", "fontsize", "=", "20", ")", "\n", "ax", ".", "text", "(", "(", "x", "-", "0.001", ")", "+", "i", "*", "0.2", ",", "y", "-", "0.07", ",", "au", ",", "horizontalalignment", "=", "'center'", ",", "verticalalignment", "=", "'center'", ",", "\n", "transform", "=", "ax", ".", "transAxes", ",", "color", "=", "'b'", ",", "fontsize", "=", "20", ")", "\n", "i", "+=", "1", "\n", "\n", "", "", "if", "title", "is", "not", "None", ":", "\n", "        ", "ax", ".", "text", "(", "0.5", ",", "0.95", ",", "title", ",", "horizontalalignment", "=", "'center'", ",", "verticalalignment", "=", "'center'", ",", "\n", "transform", "=", "ax", ".", "transAxes", ",", "color", "=", "'r'", ",", "fontsize", "=", "20", ")", "\n", "\n", "", "fig", ".", "canvas", ".", "draw", "(", ")", "\n", "data", "=", "np", ".", "fromstring", "(", "fig", ".", "canvas", ".", "tostring_rgb", "(", ")", ",", "dtype", "=", "np", ".", "uint8", ",", "sep", "=", "''", ")", "\n", "data", "=", "data", ".", "reshape", "(", "fig", ".", "canvas", ".", "get_width_height", "(", ")", "[", ":", ":", "-", "1", "]", "+", "(", "3", ",", ")", ")", "\n", "plt", ".", "close", "(", "fig", ")", "\n", "\n", "return", "data", "", "", ""]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.face_utils.FaceDetector.__init__": [[6, 11], ["face_alignment.FaceAlignment"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "scale", "=", "1.1", ")", ":", "\n", "        ", "self", ".", "bbox", "=", "[", "]", "\n", "self", ".", "landmarks", "=", "[", "]", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "detector", "=", "face_alignment", ".", "FaceAlignment", "(", "face_alignment", ".", "LandmarksType", ".", "_2D", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.face_utils.FaceDetector.detect_faces": [[12, 43], ["face_utils.FaceDetector.bbox.clear", "face_utils.FaceDetector.landmarks.clear", "face_utils.FaceDetector.detector.get_landmarks", "isinstance", "type", "bbs.append", "face_utils.FaceDetector.landmarks.append", "face_utils.FaceDetector.bbox.append", "_landmark.min", "_landmark.max", "int", "int", "int", "int", "numpy.array"], "methods", ["None"], ["", "def", "detect_faces", "(", "self", ",", "img", ")", ":", "\n", "        ", "'''\n        Detect faces in image\n        :param img: cv::mat HxWx3 RGB\n        :return: yield 4 <x,y,w,h>\n        '''", "\n", "self", ".", "bbox", ".", "clear", "(", ")", "\n", "self", ".", "landmarks", ".", "clear", "(", ")", "\n", "img_h", ",", "img_w", "=", "img", ".", "shape", "[", ":", "2", "]", "\n", "# detect faces", "\n", "landmarks", "=", "self", ".", "detector", ".", "get_landmarks", "(", "img", ")", "\n", "bbs", "=", "[", "]", "\n", "if", "isinstance", "(", "landmarks", ",", "type", "(", "None", ")", ")", ":", "\n", "            ", "return", "\n", "", "for", "_landmark", "in", "landmarks", ":", "\n", "            ", "(", "left", ",", "top", ")", ",", "(", "right", ",", "bottom", ")", "=", "_landmark", ".", "min", "(", "axis", "=", "0", ")", ",", "_landmark", ".", "max", "(", "axis", "=", "0", ")", "\n", "bbs", ".", "append", "(", "[", "left", ",", "top", ",", "right", ",", "bottom", "]", ")", "\n", "self", ".", "landmarks", ".", "append", "(", "_landmark", ")", "\n", "\n", "", "for", "region", "in", "bbs", ":", "\n", "            ", "left", ",", "top", ",", "right", ",", "bottom", "=", "region", "\n", "center", "=", "(", "top", "+", "(", "bottom", "-", "top", ")", "/", "2", ",", "left", "+", "(", "right", "-", "left", ")", "/", "2", ")", "\n", "size", "=", "self", ".", "scale", "*", "(", "right", "-", "left", "+", "bottom", "-", "top", ")", "/", "2", "\n", "top", ",", "bottom", "=", "int", "(", "center", "[", "0", "]", "-", "size", "/", "2", ")", ",", "int", "(", "center", "[", "0", "]", "+", "size", "/", "2", ")", "\n", "left", ",", "right", "=", "int", "(", "center", "[", "1", "]", "-", "size", "/", "2", ")", ",", "int", "(", "center", "[", "1", "]", "+", "size", "/", "2", ")", "\n", "# boundary detection", "\n", "top", "=", "0", "if", "top", "<", "0", "else", "top", "\n", "bottom", "=", "img_h", "if", "bottom", ">", "img_h", "else", "bottom", "\n", "left", "=", "0", "if", "left", "<", "0", "else", "left", "\n", "right", "=", "img_w", "if", "right", ">", "img_w", "else", "right", "\n", "self", ".", "bbox", ".", "append", "(", "np", ".", "array", "(", "[", "left", ",", "top", ",", "right", ",", "bottom", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.face_utils.crop_face_with_bb": [[45, 54], ["None"], "function", ["None"], ["", "", "", "def", "crop_face_with_bb", "(", "img", ",", "bb", ")", ":", "\n", "    ", "'''\n    Crop face in image given bb\n    :param img: cv::mat HxWx3\n    :param bb: 4 (<x,y,w,h>)\n    :return: HxWx3\n    '''", "\n", "x", ",", "y", ",", "w", ",", "h", "=", "bb", "\n", "return", "img", "[", "y", ":", "y", "+", "h", ",", "x", ":", "x", "+", "w", ",", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.face_utils.place_face": [[55, 60], ["face_utils.resize_face"], "function", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.face_utils.resize_face"], ["", "def", "place_face", "(", "img", ",", "face", ",", "bb", ")", ":", "\n", "    ", "x", ",", "y", ",", "w", ",", "h", "=", "bb", "\n", "face", "=", "resize_face", "(", "face", ",", "size", "=", "(", "w", ",", "h", ")", ")", "\n", "img", "[", "y", ":", "y", "+", "h", ",", "x", ":", "x", "+", "w", "]", "=", "face", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.face_utils.resize_face": [[61, 69], ["cv2.resize"], "function", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.cv_utils.resize"], ["", "def", "resize_face", "(", "face_img", ",", "size", "=", "(", "128", ",", "128", ")", ")", ":", "\n", "    ", "'''\n    Resize face to a given size\n    :param face_img: cv::mat HxWx3\n    :param size: new H and W (size x size). 128 by default.\n    :return: cv::mat size x size x 3\n    '''", "\n", "return", "cv2", ".", "resize", "(", "face_img", ",", "size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.face_utils.generate_crop_box": [[71, 106], ["numpy.array", "int", "numpy.max", "numpy.min", "numpy.max", "numpy.min", "numpy.max"], "function", ["None"], ["", "def", "generate_crop_box", "(", "image_info", "=", "None", ",", "scale", "=", "1.1", ")", ":", "\n", "    ", "'''\n    giving provided image_info and rescale the box to new size\n    Args:\n        image_info: the bounding box or the landmarks\n\n    Return:\n        a box with 4 values: [left, top, right, bottom] or a\n        list contains several box, each has 4 landmarks\n    '''", "\n", "box", "=", "None", "\n", "if", "image_info", "is", "not", "None", ":", "\n", "        ", "if", "np", ".", "max", "(", "image_info", ".", "shape", ")", ">", "4", ":", "# key points to get bounding box", "\n", "            ", "kpt", "=", "image_info", "\n", "if", "kpt", ".", "shape", "[", "0", "]", "<", "3", ":", "\n", "                ", "kpt", "=", "kpt", ".", "T", "# nof_marks x 2", "\n", "", "if", "kpt", ".", "shape", "[", "0", "]", "<=", "5", ":", "# 5 x 2", "\n", "                ", "scale", "=", "scale", "*", "scale", "\n", "", "left", "=", "np", ".", "min", "(", "kpt", "[", ":", ",", "0", "]", ")", "\n", "right", "=", "np", ".", "max", "(", "kpt", "[", ":", ",", "0", "]", ")", "\n", "top", "=", "np", ".", "min", "(", "kpt", "[", ":", ",", "1", "]", ")", "\n", "bottom", "=", "np", ".", "max", "(", "kpt", "[", ":", ",", "1", "]", ")", "\n", "", "else", ":", "# bounding box", "\n", "            ", "bbox", "=", "image_info", "\n", "left", "=", "bbox", "[", "0", "]", "\n", "right", "=", "bbox", "[", "2", "]", "\n", "top", "=", "bbox", "[", "1", "]", "\n", "bottom", "=", "bbox", "[", "3", "]", "\n", "\n", "", "old_size", "=", "(", "right", "-", "left", "+", "bottom", "-", "top", ")", "/", "2", "\n", "center", "=", "np", ".", "array", "(", "[", "right", "-", "(", "right", "-", "left", ")", "/", "2.0", ",", "bottom", "-", "(", "bottom", "-", "top", ")", "/", "2.0", "]", ")", "\n", "size", "=", "int", "(", "old_size", "*", "scale", ")", "\n", "box", "=", "[", "center", "[", "0", "]", "-", "size", "/", "2", ",", "center", "[", "1", "]", "-", "size", "/", "2", ",", "\n", "center", "[", "0", "]", "+", "size", "/", "2", ",", "center", "[", "1", "]", "+", "size", "/", "2", "]", "\n", "", "return", "box", "", "", ""]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.cv_utils.read_cv2_img": [[6, 23], ["cv2.imread", "cv2.cvtColor", "len"], "function", ["None"], ["def", "read_cv2_img", "(", "path", ")", ":", "\n", "    ", "'''\n    Read color images\n    Args:\n        path: Path to image\n    return:\n        Only returns color images\n    '''", "\n", "img", "=", "cv2", ".", "imread", "(", "path", ",", "-", "1", ")", "\n", "\n", "if", "img", "is", "not", "None", ":", "\n", "        ", "if", "len", "(", "img", ".", "shape", ")", "!=", "3", ":", "\n", "            ", "return", "None", "\n", "\n", "", "img", "=", "cv2", ".", "cvtColor", "(", "img", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.cv_utils.resize": [[24, 31], ["isinstance", "cv2.resize", "isinstance", "isinstance", "cv2.resize"], "function", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.cv_utils.resize", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.cv_utils.resize"], ["", "def", "resize", "(", "img", ",", "dst_size", ")", ":", "\n", "    ", "if", "isinstance", "(", "dst_size", ",", "int", ")", ":", "\n", "        ", "img", "=", "cv2", ".", "resize", "(", "img", ",", "(", "dst_size", ",", "dst_size", ")", ",", "cv2", ".", "INTER_CUBIC", ")", "\n", "", "elif", "isinstance", "(", "dst_size", ",", "tuple", ")", "or", "isinstance", "(", "dst_size", ",", "list", ")", ":", "\n", "        ", "img", "=", "cv2", ".", "resize", "(", "img", ",", "(", "dst_size", "[", "0", "]", ",", "dst_size", "[", "1", "]", ")", ",", "cv2", ".", "INTER_CUBIC", ")", "\n", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.cv_utils.show_cv2_img": [[32, 43], ["matplotlib.imshow", "matplotlib.title", "matplotlib.axis", "matplotlib.show"], "function", ["None"], ["", "def", "show_cv2_img", "(", "img", ",", "title", "=", "'img'", ")", ":", "\n", "    ", "'''\n    Display cv2 image\n    :param img: cv::mat\n    :param title: title\n    :return: None\n    '''", "\n", "plt", ".", "imshow", "(", "img", ")", "\n", "plt", ".", "title", "(", "title", ")", "\n", "plt", ".", "axis", "(", "'off'", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.cv_utils.show_images_row": [[45, 68], ["len", "matplotlib.figure", "enumerate", "matplotlib.show", "zip", "plt.figure.add_subplot", "matplotlib.imshow", "fig.add_subplot.set_title", "matplotlib.axis", "len", "len", "numpy.ceil", "matplotlib.gray", "range", "float"], "function", ["None"], ["", "def", "show_images_row", "(", "imgs", ",", "titles", ",", "rows", "=", "1", ")", ":", "\n", "    ", "'''\n    Display grid of cv2 images image\n    Args:\n        imgs: list [cv::mat]\n        titles: titles\n    return: None\n    '''", "\n", "assert", "(", "(", "titles", "is", "None", ")", "or", "(", "len", "(", "imgs", ")", "==", "len", "(", "titles", ")", ")", ")", "\n", "num_images", "=", "len", "(", "imgs", ")", "\n", "\n", "if", "titles", "is", "None", ":", "\n", "        ", "titles", "=", "[", "'Image (%d)'", "%", "i", "for", "i", "in", "range", "(", "1", ",", "num_images", "+", "1", ")", "]", "\n", "\n", "", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "for", "n", ",", "(", "image", ",", "title", ")", "in", "enumerate", "(", "zip", "(", "imgs", ",", "titles", ")", ")", ":", "\n", "        ", "ax", "=", "fig", ".", "add_subplot", "(", "rows", ",", "np", ".", "ceil", "(", "num_images", "/", "float", "(", "rows", ")", ")", ",", "n", "+", "1", ")", "\n", "if", "image", ".", "ndim", "==", "2", ":", "\n", "            ", "plt", ".", "gray", "(", ")", "\n", "", "plt", ".", "imshow", "(", "image", ")", "\n", "ax", ".", "set_title", "(", "title", ")", "\n", "plt", ".", "axis", "(", "'off'", ")", "\n", "", "plt", ".", "show", "(", ")", "", "", ""]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.util.mkdirs": [[8, 14], ["isinstance", "util.mkdir", "isinstance", "util.mkdir"], "function", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.util.mkdir", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.util.mkdir"], ["def", "mkdirs", "(", "paths", ")", ":", "\n", "    ", "if", "isinstance", "(", "paths", ",", "list", ")", "and", "not", "isinstance", "(", "paths", ",", "str", ")", ":", "\n", "        ", "for", "path", "in", "paths", ":", "\n", "            ", "mkdir", "(", "path", ")", "\n", "", "", "else", ":", "\n", "        ", "mkdir", "(", "paths", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.util.mkdir": [[15, 18], ["os.path.exists", "os.makedirs"], "function", ["None"], ["", "", "def", "mkdir", "(", "path", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.util.save_image": [[19, 23], ["util.mkdir", "PIL.Image.fromarray", "Image.fromarray.save", "os.path.dirname"], "function", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.util.mkdir", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel.save"], ["", "", "def", "save_image", "(", "image_numpy", ",", "image_path", ")", ":", "\n", "    ", "mkdir", "(", "os", ".", "path", ".", "dirname", "(", "image_path", ")", ")", "\n", "image_pil", "=", "Image", ".", "fromarray", "(", "image_numpy", ")", "\n", "image_pil", ".", "save", "(", "image_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.util.save_str_data": [[24, 27], ["util.mkdir", "numpy.savetxt", "os.path.dirname"], "function", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.util.mkdir"], ["", "def", "save_str_data", "(", "data", ",", "path", ")", ":", "\n", "    ", "mkdir", "(", "os", ".", "path", ".", "dirname", "(", "path", ")", ")", "\n", "np", ".", "savetxt", "(", "path", ",", "data", ",", "delimiter", "=", "\",\"", ",", "fmt", "=", "\"%s\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.util.tensor2im": [[28, 46], ["img.cpu().float.cpu().float", "img.cpu().float.detach().numpy", "numpy.transpose", "np.transpose.astype", "len", "zip", "int", "torchvision.utils.make_grid", "img.cpu().float.cpu", "i.mul_().add_", "img.cpu().float.detach", "math.sqrt", "img.cpu().float.size", "i.mul_"], "function", ["None"], ["", "def", "tensor2im", "(", "img", ",", "imtype", "=", "np", ".", "uint8", ",", "unnormalize", "=", "True", ",", "idx", "=", "0", ",", "nrows", "=", "None", ")", ":", "\n", "    ", "if", "len", "(", "img", ".", "shape", ")", "==", "4", ":", "\n", "        ", "nrows", "=", "nrows", "if", "nrows", "is", "not", "None", "else", "int", "(", "sqrt", "(", "img", ".", "size", "(", "0", ")", ")", ")", "\n", "img", "=", "img", "[", "idx", "]", "if", "idx", ">", "0", "else", "torchvision", ".", "utils", ".", "make_grid", "(", "img", ",", "nrows", ")", "\n", "\n", "", "img", "=", "img", ".", "cpu", "(", ")", ".", "float", "(", ")", "\n", "if", "unnormalize", ":", "\n", "        ", "mean", "=", "[", "0.5", ",", "0.5", ",", "0.5", "]", "\n", "std", "=", "[", "0.5", ",", "0.5", ",", "0.5", "]", "\n", "\n", "for", "i", ",", "m", ",", "s", "in", "zip", "(", "img", ",", "mean", ",", "std", ")", ":", "\n", "            ", "i", ".", "mul_", "(", "s", ")", ".", "add_", "(", "m", ")", "\n", "\n", "", "", "image_numpy", "=", "img", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "image_numpy_t", "=", "np", ".", "transpose", "(", "image_numpy", ",", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "image_numpy_t", "=", "image_numpy_t", "*", "255.0", "\n", "\n", "return", "image_numpy_t", ".", "astype", "(", "imtype", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.util.tensor2maskim": [[47, 52], ["util.tensor2im", "numpy.repeat"], "function", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.util.tensor2im"], ["", "def", "tensor2maskim", "(", "mask", ",", "imtype", "=", "np", ".", "uint8", ",", "idx", "=", "0", ",", "nrows", "=", "None", ")", ":", "\n", "    ", "im", "=", "tensor2im", "(", "mask", ",", "imtype", "=", "imtype", ",", "idx", "=", "idx", ",", "unnormalize", "=", "False", ",", "nrows", "=", "nrows", ")", "\n", "if", "im", ".", "shape", "[", "2", "]", "==", "1", ":", "\n", "        ", "im", "=", "np", ".", "repeat", "(", "im", ",", "3", ",", "axis", "=", "1", ")", "\n", "", "return", "im", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.tb_visualizer.TBVisualizer.__init__": [[8, 19], ["os.path.join", "os.path.join", "os.path.join", "tensorboardX.SummaryWriter", "open", "time.strftime", "log_file.write"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "opt", ")", ":", "\n", "        ", "self", ".", "_opt", "=", "opt", "\n", "self", ".", "_save_path", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "checkpoints_dir", ",", "opt", ".", "name", ")", "\n", "\n", "self", ".", "_log_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "_save_path", ",", "'loss_log2.txt'", ")", "\n", "self", ".", "_tb_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "_save_path", ",", "'summary.json'", ")", "\n", "self", ".", "_writer", "=", "SummaryWriter", "(", "self", ".", "_save_path", ")", "\n", "\n", "with", "open", "(", "self", ".", "_log_path", ",", "'a'", ")", "as", "log_file", ":", "\n", "            ", "now", "=", "time", ".", "strftime", "(", "\"%c\"", ")", "\n", "log_file", ".", "write", "(", "'================ Training Loss (%s) ================\\n'", "%", "now", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.tb_visualizer.TBVisualizer.__del__": [[20, 22], ["tb_visualizer.TBVisualizer._writer.close"], "methods", ["None"], ["", "", "def", "__del__", "(", "self", ")", ":", "\n", "        ", "self", ".", "_writer", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.tb_visualizer.TBVisualizer.display_current_results": [[23, 34], ["visuals.items", "tb_visualizer.TBVisualizer._writer.export_scalars_to_json", "tb_visualizer.TBVisualizer._writer.add_image", "util.save_image", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.util.save_image"], ["", "def", "display_current_results", "(", "self", ",", "visuals", ",", "it", ",", "is_train", ",", "save_visuals", "=", "True", ")", ":", "\n", "        ", "for", "label", ",", "image_numpy", "in", "visuals", ".", "items", "(", ")", ":", "\n", "            ", "sum_name", "=", "'{}/{}'", ".", "format", "(", "'Train'", "if", "is_train", "else", "'Test'", ",", "label", ")", "\n", "self", ".", "_writer", ".", "add_image", "(", "sum_name", ",", "image_numpy", ",", "it", ",", "dataformats", "=", "'HWC'", ")", "\n", "\n", "if", "save_visuals", ":", "\n", "                ", "util", ".", "save_image", "(", "image_numpy", ",", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "_opt", ".", "checkpoints_dir", ",", "self", ".", "_opt", ".", "name", ",", "\n", "'event_imgs'", ",", "sum_name", ",", "'%08d.png'", "%", "it", ")", ")", "\n", "\n", "", "", "self", ".", "_writer", ".", "export_scalars_to_json", "(", "self", ".", "_tb_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.tb_visualizer.TBVisualizer.plot_scalars": [[35, 39], ["scalars.items", "tb_visualizer.TBVisualizer._writer.add_scalar"], "methods", ["None"], ["", "def", "plot_scalars", "(", "self", ",", "scalars", ",", "it", ",", "is_train", ")", ":", "\n", "        ", "for", "label", ",", "scalar", "in", "scalars", ".", "items", "(", ")", ":", "\n", "            ", "sum_name", "=", "'{}/{}'", ".", "format", "(", "'Train'", "if", "is_train", "else", "'Test'", ",", "label", ")", "\n", "self", ".", "_writer", ".", "add_scalar", "(", "sum_name", ",", "scalar", ",", "it", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.tb_visualizer.TBVisualizer.print_current_train_errors": [[40, 52], ["print", "time.strftime", "print", "errors.items", "print", "open", "log_file.write", "log_file.flush"], "methods", ["None"], ["", "", "def", "print_current_train_errors", "(", "self", ",", "epoch", ",", "i", ",", "iters_per_epoch", ",", "errors", ",", "t", ",", "visuals_were_stored", ")", ":", "\n", "        ", "print", "(", "'=='", "*", "20", ",", "'Training'", ",", "'=='", "*", "20", ")", "\n", "log_time", "=", "time", ".", "strftime", "(", "\"[%d/%m/%Y %H:%M:%S]\"", ")", "\n", "visuals_info", "=", "\"v\"", "if", "visuals_were_stored", "else", "\"\"", "\n", "message", "=", "'%s (T%s, epoch: %d, it: %d/%d, t/smpl: %.3fs) '", "%", "(", "log_time", ",", "visuals_info", ",", "epoch", ",", "i", ",", "iters_per_epoch", ",", "t", ")", "\n", "print", "(", "message", ")", "\n", "for", "k", ",", "v", "in", "errors", ".", "items", "(", ")", ":", "\n", "            ", "message", "+=", "'%s: %.6f'", "%", "(", "k", ",", "v", ")", "\n", "print", "(", "'%20s: %.6f'", "%", "(", "k", ",", "v", ")", ")", "\n", "", "with", "open", "(", "self", ".", "_log_path", ",", "'a'", ")", "as", "log_file", ":", "\n", "            ", "log_file", ".", "write", "(", "'%s\\n'", "%", "message", ")", "\n", "log_file", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.tb_visualizer.TBVisualizer.print_current_validate_errors": [[53, 64], ["print", "time.strftime", "print", "errors.items", "print", "open", "log_file.write", "log_file.flush"], "methods", ["None"], ["", "", "def", "print_current_validate_errors", "(", "self", ",", "epoch", ",", "errors", ",", "t", ")", ":", "\n", "        ", "print", "(", "'=='", "*", "20", ",", "'Validating'", ",", "'=='", "*", "20", ")", "\n", "log_time", "=", "time", ".", "strftime", "(", "\"[%d/%m/%Y %H:%M:%S]\"", ")", "\n", "message", "=", "'%s (V, epoch: %d, time_to_val: %ds) '", "%", "(", "log_time", ",", "epoch", ",", "t", ")", "\n", "print", "(", "message", ")", "\n", "for", "k", ",", "v", "in", "errors", ".", "items", "(", ")", ":", "\n", "            ", "message", "+=", "'%s: %.6f'", "%", "(", "k", ",", "v", ")", "\n", "print", "(", "'%20s: %.6f'", "%", "(", "k", ",", "v", ")", ")", "\n", "", "with", "open", "(", "self", ".", "_log_path", ",", "'a'", ")", "as", "log_file", ":", "\n", "            ", "log_file", ".", "write", "(", "'validating:%s\\n'", "%", "message", ")", "\n", "log_file", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.tb_visualizer.TBVisualizer.save_images": [[65, 70], ["visuals.items", "os.path.join", "util.save_image"], "methods", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.util.save_image"], ["", "", "def", "save_images", "(", "self", ",", "visuals", ")", ":", "\n", "        ", "for", "label", ",", "image_numpy", "in", "visuals", ".", "items", "(", ")", ":", "\n", "            ", "image_name", "=", "'%s.png'", "%", "label", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "_save_path", ",", "\"samples\"", ",", "image_name", ")", "\n", "util", ".", "save_image", "(", "image_numpy", ",", "save_path", ")", "", "", "", "", ""]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.ModelsFactory.__init__": [[6, 8], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.ModelsFactory.get_by_name": [[9, 20], ["print", "FineGrainedGAN", "ValueError"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_by_name", "(", "model_name", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "model", "=", "None", "\n", "if", "model_name", "==", "'expression_manipulator'", ":", "\n", "            ", "from", ".", "fine_grained_gan", "import", "FineGrainedGAN", "\n", "model", "=", "FineGrainedGAN", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\"Model %s not recognized. Expect FineGrainedGAN\"", "%", "model_name", ")", "\n", "\n", "", "print", "(", "\"Model %s was created\"", "%", "model", ".", "name", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel.__init__": [[25, 34], ["os.path.join"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "opt", ")", ":", "\n", "        ", "self", ".", "_name", "=", "'BaseModel'", "\n", "\n", "self", ".", "_opt", "=", "opt", "\n", "self", ".", "_gpu_ids", "=", "opt", ".", "gpu_ids", "\n", "self", ".", "_is_train", "=", "opt", ".", "is_train", "\n", "\n", "self", ".", "_Tensor", "=", "torch", ".", "cuda", ".", "FloatTensor", "if", "self", ".", "_gpu_ids", "else", "torch", ".", "Tensor", "\n", "self", ".", "_save_dir", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "checkpoints_dir", ",", "opt", ".", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel.name": [[36, 39], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "name", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_name", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel.set_input": [[40, 42], ["None"], "methods", ["None"], ["", "def", "set_input", "(", "self", ",", "input", ")", ":", "\n", "        ", "assert", "False", ",", "\"set_input not implemented\"", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel.set_train": [[43, 45], ["None"], "methods", ["None"], ["", "def", "set_train", "(", "self", ")", ":", "\n", "        ", "assert", "False", ",", "\"set_train not implemented\"", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel.set_eval": [[46, 48], ["None"], "methods", ["None"], ["", "def", "set_eval", "(", "self", ")", ":", "\n", "        ", "assert", "False", ",", "\"set_eval not implemented\"", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel.forward": [[49, 51], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "keep_data_for_visuals", "=", "False", ")", ":", "\n", "        ", "assert", "False", ",", "\"forward not implemented\"", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel.test": [[53, 55], ["None"], "methods", ["None"], ["", "def", "test", "(", "self", ")", ":", "\n", "        ", "assert", "False", ",", "\"test not implemented\"", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel.get_image_paths": [[56, 58], ["None"], "methods", ["None"], ["", "def", "get_image_paths", "(", "self", ")", ":", "\n", "        ", "return", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel.optimize_parameters": [[59, 61], ["None"], "methods", ["None"], ["", "def", "optimize_parameters", "(", "self", ")", ":", "\n", "        ", "assert", "False", ",", "\"optimize_parameters not implemented\"", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel.get_current_visuals": [[62, 64], ["None"], "methods", ["None"], ["", "def", "get_current_visuals", "(", "self", ")", ":", "\n", "        ", "return", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel.get_current_errors": [[65, 67], ["None"], "methods", ["None"], ["", "def", "get_current_errors", "(", "self", ")", ":", "\n", "        ", "return", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel.get_current_scalars": [[68, 70], ["None"], "methods", ["None"], ["", "def", "get_current_scalars", "(", "self", ")", ":", "\n", "        ", "return", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel.save": [[71, 73], ["None"], "methods", ["None"], ["", "def", "save", "(", "self", ",", "label", ")", ":", "\n", "        ", "assert", "False", ",", "\"save not implemented\"", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel.load": [[74, 76], ["None"], "methods", ["None"], ["", "def", "load", "(", "self", ")", ":", "\n", "        ", "assert", "False", ",", "\"load not implemented\"", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel._save_optimizer": [[77, 83], ["os.path.join", "torch.save", "print", "optimizer.state_dict"], "methods", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel.save"], ["", "def", "_save_optimizer", "(", "self", ",", "optimizer", ",", "optimizer_label", ",", "epoch_label", ")", ":", "\n", "        ", "save_filename", "=", "'opt_epoch_%s_id_%s.pth'", "%", "(", "epoch_label", ",", "optimizer_label", ")", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "_save_dir", ",", "save_filename", ")", "\n", "torch", ".", "save", "(", "optimizer", ".", "state_dict", "(", ")", ",", "save_path", ")", "\n", "\n", "print", "(", "'saved optimizer: %s'", "%", "save_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel._load_optimizer": [[84, 90], ["os.path.join", "os.path.exists", "optimizer.load_state_dict", "print", "torch.load"], "methods", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel.load"], ["", "def", "_load_optimizer", "(", "self", ",", "optimizer", ",", "optimizer_label", ",", "epoch_label", ")", ":", "\n", "        ", "load_filename", "=", "'opt_epoch_%s_id_%s.pth'", "%", "(", "epoch_label", ",", "optimizer_label", ")", "\n", "load_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "_save_dir", ",", "load_filename", ")", "\n", "assert", "os", ".", "path", ".", "exists", "(", "load_path", ")", ",", "'Weights file not found. Have you trained a model!? We are not providing one'", "%", "load_path", "\n", "optimizer", ".", "load_state_dict", "(", "torch", ".", "load", "(", "load_path", ")", ")", "\n", "print", "(", "'loaded optimizer: %s'", "%", "load_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel._save_network": [[91, 100], ["os.path.join", "print", "len", "torch.save", "torch.save", "network.module.state_dict", "network.state_dict"], "methods", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel.save", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel.save"], ["", "def", "_save_network", "(", "self", ",", "network", ",", "network_label", ",", "epoch_label", ")", ":", "\n", "        ", "save_filename", "=", "'net_epoch_%s_id_%s.pth'", "%", "(", "epoch_label", ",", "network_label", ")", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "_save_dir", ",", "save_filename", ")", "\n", "if", "len", "(", "self", ".", "_gpu_ids", ")", ">", "1", ":", "\n", "            ", "torch", ".", "save", "(", "network", ".", "module", ".", "state_dict", "(", ")", ",", "save_path", ")", "\n", "", "else", ":", "\n", "            ", "torch", ".", "save", "(", "network", ".", "state_dict", "(", ")", ",", "save_path", ")", "\n", "\n", "", "print", "(", "'saved net: %s'", "%", "save_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel._load_network": [[101, 107], ["os.path.join", "os.path.exists", "network.load_state_dict", "print", "torch.load"], "methods", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel.load"], ["", "def", "_load_network", "(", "self", ",", "network", ",", "network_label", ",", "epoch_label", ")", ":", "\n", "        ", "load_filename", "=", "'net_epoch_%s_id_%s.pth'", "%", "(", "epoch_label", ",", "network_label", ")", "\n", "load_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "_save_dir", ",", "load_filename", ")", "\n", "assert", "os", ".", "path", ".", "exists", "(", "load_path", ")", ",", "'Weights file not found. Have you trained a model!? We are not providing one'", "%", "load_path", "\n", "network", ".", "load_state_dict", "(", "torch", ".", "load", "(", "load_path", ")", ")", "\n", "print", "(", "'loaded net: %s'", "%", "load_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel.update_learning_rate": [[108, 110], ["None"], "methods", ["None"], ["", "def", "update_learning_rate", "(", "self", ",", "epoch_i", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel.print_network": [[111, 117], ["network.parameters", "print", "print", "param.numel"], "methods", ["None"], ["", "def", "print_network", "(", "self", ",", "network", ")", ":", "\n", "        ", "num_params", "=", "0", "\n", "for", "param", "in", "network", ".", "parameters", "(", ")", ":", "\n", "            ", "num_params", "+=", "param", ".", "numel", "(", ")", "\n", "", "print", "(", "network", ")", "\n", "print", "(", "'Total number of parameters: %d'", "%", "num_params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel._get_scheduler": [[118, 132], ["torch.optim.lr_scheduler.LambdaLR", "torch.optim.lr_scheduler.StepLR", "torch.optim.lr_scheduler.ReduceLROnPlateau", "NotImplementedError", "max", "float"], "methods", ["None"], ["", "def", "_get_scheduler", "(", "self", ",", "optimizer", ",", "opt", ")", ":", "\n", "        ", "if", "opt", ".", "lr_policy", "==", "'lambda'", ":", "\n", "            ", "def", "lambda_rule", "(", "epoch", ")", ":", "\n", "                ", "lr_l", "=", "1.0", "-", "max", "(", "0", ",", "epoch", "+", "1", "+", "opt", ".", "epoch_count", "-", "opt", ".", "niter", ")", "/", "float", "(", "opt", ".", "niter_decay", "+", "1", ")", "\n", "return", "lr_l", "\n", "\n", "", "scheduler", "=", "lr_scheduler", ".", "LambdaLR", "(", "optimizer", ",", "lr_lambda", "=", "lambda_rule", ")", "\n", "", "elif", "opt", ".", "lr_policy", "==", "'step'", ":", "\n", "            ", "scheduler", "=", "lr_scheduler", ".", "StepLR", "(", "optimizer", ",", "step_size", "=", "opt", ".", "lr_decay_iters", ",", "gamma", "=", "0.1", ")", "\n", "", "elif", "opt", ".", "lr_policy", "==", "'plateau'", ":", "\n", "            ", "scheduler", "=", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "optimizer", ",", "mode", "=", "'min'", ",", "factor", "=", "0.2", ",", "threshold", "=", "0.01", ",", "patience", "=", "5", ")", "\n", "", "else", ":", "\n", "            ", "return", "NotImplementedError", "(", "'learning rate policy [%s] is not implemented'", ",", "opt", ".", "lr_policy", ")", "\n", "", "return", "scheduler", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.discriminator.Discriminator_Plus.__init__": [[23, 45], ["networks.NetworkBase.__init__", "layers.append", "range", "torch.Sequential", "torch.Sequential", "layers.append", "torch.Sequential", "torch.Sequential", "int", "layers.append", "torch.Sequential", "torch.Sequential", "discriminator.downconv_norm_lrelu", "layers.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "discriminator.downconv_norm_lrelu", "numpy.power"], "methods", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.options.base_option.BaseOptions.__init__", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.downconv_norm_lrelu", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.downconv_norm_lrelu"], ["def", "__init__", "(", "self", ",", "image_size", "=", "128", ",", "conv_dim", "=", "64", ",", "c_dim", "=", "17", ",", "repeat_num", "=", "6", ",", "normtype", "=", "'None'", ",", "sn", "=", "False", ")", ":", "\n", "        ", "super", "(", "Discriminator_Plus", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_name", "=", "'discriminator_wgan_plus'", "\n", "\n", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "downconv_norm_lrelu", "(", "3", ",", "conv_dim", ",", "kernel", "=", "5", ",", "stride", "=", "2", ",", "padding", "=", "2", ",", "bias", "=", "False", ",", "\n", "normtype", "=", "normtype", ",", "sn", "=", "sn", ")", ")", "\n", "curr_dim", "=", "conv_dim", "\n", "for", "i", "in", "range", "(", "1", ",", "repeat_num", ")", ":", "\n", "            ", "layers", ".", "append", "(", "downconv_norm_lrelu", "(", "curr_dim", ",", "curr_dim", "*", "2", ",", "kernel", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ",", "normtype", "=", "normtype", ",", "sn", "=", "sn", ")", ")", "\n", "curr_dim", "=", "curr_dim", "*", "2", "\n", "", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "nn", ".", "Conv2d", "(", "curr_dim", ",", "1", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n", "layers", "=", "[", "]", "\n", "k_size", "=", "int", "(", "image_size", "/", "np", ".", "power", "(", "2", ",", "repeat_num", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "Conv2d", "(", "curr_dim", ",", "c_dim", ",", "kernel_size", "=", "k_size", ",", "bias", "=", "False", ")", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.discriminator.Discriminator_Plus.forward": [[46, 51], ["discriminator.Discriminator_Plus.main", "discriminator.Discriminator_Plus.conv1", "discriminator.Discriminator_Plus.conv2", "discriminator.Discriminator_Plus.squeeze", "discriminator.Discriminator_Plus.squeeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "h", "=", "self", ".", "main", "(", "x", ")", "\n", "out_real", "=", "self", ".", "conv1", "(", "h", ")", "\n", "out_aux", "=", "self", ".", "conv2", "(", "h", ")", "\n", "return", "out_real", ".", "squeeze", "(", ")", ",", "out_aux", ".", "squeeze", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.discriminator.downconv_norm_lrelu": [[8, 19], ["torch.Conv2d", "networks.normalize.get_norm_layer", "torch.LeakyReLU", "torch.Sequential", "torch"], "function", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.normalize.get_norm_layer"], ["def", "downconv_norm_lrelu", "(", "input_dim", ",", "output_dim", ",", "kernel", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "normtype", "=", "'batchnorm'", ",", "sn", "=", "False", ")", ":", "\n", "    ", "conv", "=", "nn", ".", "Conv2d", "(", "input_dim", ",", "output_dim", ",", "kernel_size", "=", "kernel", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "bias", "=", "bias", ")", "\n", "norm", "=", "get_norm_layer", "(", "output_dim", ",", "normtype", ")", "\n", "lrelu", "=", "nn", ".", "LeakyReLU", "(", "inplace", "=", "True", ")", "\n", "if", "sn", ":", "\n", "        ", "conv", "=", "spectral_norm", "(", "conv", ")", "\n", "", "if", "norm", "is", "not", "None", ":", "\n", "        ", "layer", "=", "[", "conv", ",", "norm", ",", "lrelu", "]", "\n", "", "else", ":", "\n", "        ", "layer", "=", "[", "conv", ",", "lrelu", "]", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.networks.NetworksFactory.__init__": [[5, 7], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.networks.NetworksFactory.get_by_name": [[8, 30], ["print", "UNet_MSF_Generator", "Discriminator_Plus", "ValueError"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_by_name", "(", "network_name", ",", "opt", ")", ":", "\n", "        ", "image_size", "=", "opt", ".", "image_size", "\n", "ngf", "=", "opt", ".", "ngf", "\n", "ndf", "=", "opt", ".", "ndf", "\n", "normtype_D", "=", "opt", ".", "normtype_D", "\n", "normtype_G", "=", "opt", ".", "normtype_G", "\n", "sn_G", "=", "opt", ".", "use_sn_G", "\n", "sn_D", "=", "opt", ".", "use_sn_D", "\n", "if", "network_name", "==", "'unet_msf_generator'", ":", "\n", "            ", "from", ".", "generator", "import", "UNet_MSF_Generator", "\n", "network", "=", "UNet_MSF_Generator", "(", "conv_dim", "=", "ngf", ",", "c_dim", "=", "opt", ".", "cond_nc", ",", "normtype", "=", "normtype_G", ",", "sn", "=", "sn_G", ")", "\n", "", "elif", "network_name", "==", "'discriminator_wgan_plus'", ":", "\n", "            ", "from", ".", "discriminator", "import", "Discriminator_Plus", "\n", "network", "=", "Discriminator_Plus", "(", "image_size", "=", "image_size", ",", "conv_dim", "=", "ndf", ",", "c_dim", "=", "opt", ".", "cond_nc", ",", "\n", "normtype", "=", "normtype_D", ",", "sn", "=", "sn_D", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\"Network %s not recognized.\"", "%", "network_name", ")", "\n", "\n", "", "print", "(", "\"Network %s was created\"", "%", "network_name", ")", "\n", "\n", "return", "network", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.networks.NetworkBase.__init__": [[33, 36], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.options.base_option.BaseOptions.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "NetworkBase", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_name", "=", "'BaseNetwork'", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.networks.NetworkBase.name": [[37, 40], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "name", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_name", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.networks.NetworkBase.init_weights": [[41, 43], ["networks.NetworkBase.apply"], "methods", ["None"], ["", "def", "init_weights", "(", "self", ")", ":", "\n", "        ", "self", ".", "apply", "(", "self", ".", "_weights_init_fn", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.networks.NetworkBase._weights_init_fn": [[44, 53], ["classname.find", "m.weight.data.normal_", "hasattr", "m.bias.data.fill_", "classname.find", "m.weight.data.normal_", "m.bias.data.fill_"], "methods", ["None"], ["", "def", "_weights_init_fn", "(", "self", ",", "m", ")", ":", "\n", "        ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "classname", ".", "find", "(", "'Conv'", ")", "!=", "-", "1", ":", "\n", "            ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0.0", ",", "0.02", ")", "\n", "if", "hasattr", "(", "m", ".", "bias", ",", "'data'", ")", ":", "\n", "                ", "m", ".", "bias", ".", "data", ".", "fill_", "(", "0", ")", "\n", "", "", "elif", "classname", ".", "find", "(", "'BatchNorm2d'", ")", "!=", "-", "1", ":", "\n", "            ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "1.0", ",", "0.02", ")", "\n", "m", ".", "bias", ".", "data", ".", "fill_", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.networks.NetworkBase._get_norm_layer": [[54, 65], ["functools.partial", "functools.partial", "NotImplementedError"], "methods", ["None"], ["", "", "def", "_get_norm_layer", "(", "self", ",", "norm_type", "=", "'batch'", ")", ":", "\n", "        ", "if", "norm_type", "==", "'batch'", ":", "\n", "            ", "norm_layer", "=", "functools", ".", "partial", "(", "nn", ".", "BatchNorm2d", ",", "affine", "=", "True", ")", "\n", "", "elif", "norm_type", "==", "'instance'", ":", "\n", "            ", "norm_layer", "=", "functools", ".", "partial", "(", "nn", ".", "InstanceNorm2d", ",", "affine", "=", "False", ")", "\n", "", "elif", "norm_type", "==", "'batchnorm2d'", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", "'normalization layer [%s] is not found'", "%", "norm_type", ")", "\n", "\n", "", "return", "norm_layer", "\n", "", "", ""]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.normalize.get_norm_layer": [[3, 13], ["torch.BatchNorm2d", "torch.InstanceNorm2d", "torch.LayerNorm"], "function", ["None"], ["def", "get_norm_layer", "(", "dims", ",", "normtype", ")", ":", "\n", "    ", "if", "normtype", "==", "'batchnorm'", ":", "\n", "        ", "norm", "=", "nn", ".", "BatchNorm2d", "(", "dims", ")", "\n", "", "elif", "normtype", "==", "'instancenorm'", ":", "\n", "        ", "norm", "=", "nn", ".", "InstanceNorm2d", "(", "dims", ",", "affine", "=", "True", ")", "\n", "", "elif", "normtype", "==", "'layernorm'", ":", "\n", "        ", "norm", "=", "nn", ".", "LayerNorm", "(", "dims", ")", "\n", "", "else", ":", "\n", "        ", "norm", "=", "None", "\n", "", "return", "norm", "\n", "", ""]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.ResidualBlock.__init__": [[59, 68], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "generator.conv_norm_relu", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.options.base_option.BaseOptions.__init__", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.conv_norm_relu"], ["def", "__init__", "(", "self", ",", "dim_in", ",", "dim_out", ",", "normtype", "=", "'batchnorm'", ",", "sn", "=", "False", ")", ":", "\n", "        ", "super", "(", "ResidualBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "\n", "conv_norm_relu", "(", "dim_in", ",", "dim_out", ",", "kernel", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "normtype", "=", "normtype", ",", "sn", "=", "sn", ")", ",", "\n", "nn", ".", "Conv2d", "(", "dim_out", ",", "dim_out", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "InstanceNorm2d", "(", "dim_out", ",", "affine", "=", "True", ")", ")", "\n", "self", ".", "downsample", "=", "None", "\n", "if", "dim_out", "!=", "dim_in", ":", "\n", "            ", "self", ".", "downsample", "=", "nn", ".", "Conv2d", "(", "dim_in", ",", "dim_out", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.ResidualBlock.forward": [[69, 75], ["generator.ResidualBlock.main", "generator.ResidualBlock.downsample"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "out", "=", "self", ".", "main", "(", "x", ")", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "", "return", "residual", "+", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.MultiScaleModule.__init__": [[77, 94], ["torch.Module.__init__", "generator.conv_norm_relu", "min", "generator.downconv_norm_lrelu", "min", "generator.upconv_norm_lrelu", "generator.conv_norm_relu", "generator.conv_norm_relu", "generator.conv_norm_relu"], "methods", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.options.base_option.BaseOptions.__init__", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.conv_norm_relu", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.downconv_norm_lrelu", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.upconv_norm_lrelu", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.conv_norm_relu", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.conv_norm_relu", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.conv_norm_relu"], ["    ", "def", "__init__", "(", "self", ",", "input_dim", ",", "dconv_dim", ",", "output_dim", ",", "c_dim", "=", "17", ",", "normtype", "=", "'batchnorm'", ",", "sn", "=", "False", ")", ":", "\n", "        ", "super", "(", "MultiScaleModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_conv", "=", "conv_norm_relu", "(", "input_dim", "+", "c_dim", ",", "input_dim", ",", "kernel", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ",", "normtype", "=", "normtype", ",", "sn", "=", "sn", ")", "\n", "downconv_dim", "=", "min", "(", "input_dim", ",", "dconv_dim", ")", "\n", "self", ".", "down_conv", "=", "downconv_norm_lrelu", "(", "input_dim", "+", "c_dim", ",", "downconv_dim", ",", "kernel", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ",", "normtype", "=", "normtype", ",", "sn", "=", "sn", ")", "\n", "transconv_dim", "=", "min", "(", "dconv_dim", ",", "output_dim", ")", "\n", "self", ".", "transpose_conv", "=", "upconv_norm_lrelu", "(", "downconv_dim", "+", "dconv_dim", ",", "transconv_dim", ",", "kernel", "=", "4", ",", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ",", "normtype", "=", "normtype", ",", "sn", "=", "sn", ")", "\n", "\n", "self", ".", "out_conv1x1", "=", "conv_norm_relu", "(", "transconv_dim", "+", "input_dim", ",", "output_dim", ",", "kernel", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "\n", "bias", "=", "False", ",", "normtype", "=", "normtype", ",", "sn", "=", "sn", ")", "\n", "self", ".", "out_conv3x3", "=", "conv_norm_relu", "(", "transconv_dim", "+", "input_dim", ",", "output_dim", ",", "kernel", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ",", "normtype", "=", "normtype", ",", "sn", "=", "sn", ")", "\n", "self", ".", "out_conv", "=", "conv_norm_relu", "(", "output_dim", "*", "2", ",", "output_dim", ",", "kernel", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ",", "normtype", "=", "normtype", ",", "sn", "=", "sn", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.MultiScaleModule.forward": [[95, 112], ["c.expand.expand.unsqueeze().unsqueeze", "c.expand.expand.expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "generator.MultiScaleModule.in_conv", "generator.MultiScaleModule.down_conv", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "generator.MultiScaleModule.transpose_conv", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "generator.MultiScaleModule.out_conv1x1", "generator.MultiScaleModule.out_conv3x3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "generator.MultiScaleModule.out_conv", "c.expand.expand.size", "c.expand.expand.size", "torch.cat.size", "torch.cat.size", "torch.cat.size", "torch.cat.size", "torch.cat.size", "torch.cat.size", "c.expand.expand.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "dconv_x", ",", "c", ")", ":", "\n", "        ", "c", "=", "c", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "c", "=", "c", ".", "expand", "(", "c", ".", "size", "(", "0", ")", ",", "c", ".", "size", "(", "1", ")", ",", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "c", "]", ",", "dim", "=", "1", ")", "\n", "# higher resolution", "\n", "alpha", "=", "self", ".", "in_conv", "(", "x", ")", "\n", "# lower resolution", "\n", "encoded_feature", "=", "self", ".", "down_conv", "(", "x", ")", "\n", "low_resolution", "=", "torch", ".", "cat", "(", "[", "encoded_feature", ",", "dconv_x", "]", ",", "dim", "=", "1", ")", "\n", "beta", "=", "self", ".", "transpose_conv", "(", "low_resolution", ")", "\n", "\n", "out", "=", "torch", ".", "cat", "(", "[", "alpha", ",", "beta", "]", ",", "dim", "=", "1", ")", "\n", "out1", "=", "self", ".", "out_conv1x1", "(", "out", ")", "\n", "out2", "=", "self", ".", "out_conv3x3", "(", "out", ")", "\n", "out", "=", "torch", ".", "cat", "(", "[", "out1", ",", "out2", "]", ",", "dim", "=", "1", ")", "\n", "out", "=", "self", ".", "out_conv", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.FusionBlock.__init__": [[115, 125], ["torch.Module.__init__", "generator.conv_norm_relu", "generator.downconv_norm_lrelu", "generator.upconv_norm_lrelu", "generator.conv_norm_relu"], "methods", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.options.base_option.BaseOptions.__init__", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.conv_norm_relu", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.downconv_norm_lrelu", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.upconv_norm_lrelu", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.conv_norm_relu"], ["    ", "def", "__init__", "(", "self", ",", "input_hr_dim", ",", "input_lr_dim", ",", "output_hr_dim", ",", "output_lr_dim", ",", "normtype", "=", "'instancenorm'", ",", "sn", "=", "False", ")", ":", "\n", "        ", "super", "(", "FusionBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "hr_to_hr", "=", "conv_norm_relu", "(", "input_hr_dim", ",", "output_hr_dim", "//", "2", ",", "kernel", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ",", "normtype", "=", "normtype", ",", "sn", "=", "sn", ")", "\n", "self", ".", "hr_to_lr", "=", "downconv_norm_lrelu", "(", "input_hr_dim", ",", "output_lr_dim", "//", "2", ",", "kernel", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ",", "normtype", "=", "normtype", ",", "sn", "=", "sn", ")", "\n", "self", ".", "lr_to_hr", "=", "upconv_norm_lrelu", "(", "input_lr_dim", ",", "output_hr_dim", "-", "output_hr_dim", "//", "2", ",", "kernel", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ",", "normtype", "=", "normtype", ",", "sn", "=", "sn", ")", "\n", "self", ".", "lr_to_lr", "=", "conv_norm_relu", "(", "input_lr_dim", ",", "output_lr_dim", "-", "output_lr_dim", "//", "2", ",", "kernel", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ",", "normtype", "=", "normtype", ",", "sn", "=", "sn", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.FusionBlock.forward": [[126, 135], ["generator.FusionBlock.hr_to_hr", "generator.FusionBlock.lr_to_hr", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "generator.FusionBlock.hr_to_lr", "generator.FusionBlock.lr_to_lr", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "hr_x", ",", "lr_x", ")", ":", "\n", "        ", "out_hr1", "=", "self", ".", "hr_to_hr", "(", "hr_x", ")", "\n", "out_hr2", "=", "self", ".", "lr_to_hr", "(", "lr_x", ")", "\n", "out_hr_x", "=", "torch", ".", "cat", "(", "[", "out_hr1", ",", "out_hr2", "]", ",", "dim", "=", "1", ")", "\n", "\n", "out_lr1", "=", "self", ".", "hr_to_lr", "(", "hr_x", ")", "\n", "out_lr2", "=", "self", ".", "lr_to_lr", "(", "lr_x", ")", "\n", "out_lr_x", "=", "torch", ".", "cat", "(", "[", "out_lr1", ",", "out_lr2", "]", ",", "dim", "=", "1", ")", "\n", "return", "out_hr_x", ",", "out_lr_x", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.MultiScaleFusion.__init__": [[137, 153], ["torch.Module.__init__", "generator.conv_norm_relu", "generator.FusionBlock", "min", "generator.upconv_norm_lrelu", "generator.conv_norm_relu", "generator.conv_norm_relu"], "methods", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.options.base_option.BaseOptions.__init__", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.conv_norm_relu", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.upconv_norm_lrelu", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.conv_norm_relu", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.conv_norm_relu"], ["    ", "def", "__init__", "(", "self", ",", "input_dim", ",", "dconv_dim", ",", "output_dim", ",", "c_dim", "=", "17", ",", "normtype", "=", "'instancenorm'", ",", "sn", "=", "False", ")", ":", "\n", "        ", "super", "(", "MultiScaleFusion", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_conv", "=", "conv_norm_relu", "(", "input_dim", "+", "c_dim", ",", "input_dim", ",", "kernel", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ",", "\n", "bias", "=", "False", ",", "normtype", "=", "normtype", ",", "sn", "=", "sn", ")", "\n", "# Block1", "\n", "self", ".", "block1", "=", "FusionBlock", "(", "input_hr_dim", "=", "input_dim", ",", "input_lr_dim", "=", "dconv_dim", ",", "\n", "output_hr_dim", "=", "input_dim", ",", "output_lr_dim", "=", "dconv_dim", ",", "normtype", "=", "normtype", ",", "sn", "=", "sn", ")", "\n", "# self.block2 = FusionBlock(input_hr_dim=input_dim, input_lr_dim=dconv_dim, output_hr_dim=input_dim, output_lr_dim=dconv_dim, normtype=normtype, sn=sn)", "\n", "\n", "transconv_dim", "=", "min", "(", "dconv_dim", ",", "output_dim", ")", "\n", "self", ".", "transpose_conv", "=", "upconv_norm_lrelu", "(", "dconv_dim", ",", "transconv_dim", ",", "kernel", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ",", "normtype", "=", "normtype", ",", "sn", "=", "sn", ")", "\n", "self", ".", "out_conv1", "=", "conv_norm_relu", "(", "transconv_dim", "+", "input_dim", ",", "output_dim", "//", "2", ",", "kernel", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ",", "normtype", "=", "normtype", ",", "sn", "=", "sn", ")", "\n", "self", ".", "out_conv2", "=", "conv_norm_relu", "(", "transconv_dim", "+", "input_dim", ",", "output_dim", "-", "output_dim", "//", "2", ",", "kernel", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ",", "\n", "bias", "=", "False", ",", "normtype", "=", "normtype", ",", "sn", "=", "sn", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.MultiScaleFusion.forward": [[154, 169], ["c.expand.expand.unsqueeze().unsqueeze", "c.expand.expand.expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "generator.MultiScaleFusion.in_conv", "generator.MultiScaleFusion.block1", "generator.MultiScaleFusion.transpose_conv", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "generator.MultiScaleFusion.out_conv1", "generator.MultiScaleFusion.out_conv2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "c.expand.expand.size", "c.expand.expand.size", "torch.cat.size", "torch.cat.size", "torch.cat.size", "torch.cat.size", "torch.cat.size", "torch.cat.size", "c.expand.expand.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "dconv_x", ",", "c", ")", ":", "\n", "        ", "c", "=", "c", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "c", "=", "c", ".", "expand", "(", "c", ".", "size", "(", "0", ")", ",", "c", ".", "size", "(", "1", ")", ",", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "c", "]", ",", "dim", "=", "1", ")", "# input_dim+c_dim x HR", "\n", "# higher resolution", "\n", "high_resolution", "=", "self", ".", "in_conv", "(", "x", ")", "# input_dim x HR", "\n", "# lower resolution", "\n", "high_resolution", ",", "low_resolution", "=", "self", ".", "block1", "(", "high_resolution", ",", "dconv_x", ")", "# input_dim, dconv_dim", "\n", "# high_resolution, low_resolution = self.block2(high_resolution, low_resolution)  # input_dim, dconv_dim", "\n", "\n", "out", "=", "self", ".", "transpose_conv", "(", "low_resolution", ")", "\n", "out", "=", "torch", ".", "cat", "(", "[", "high_resolution", ",", "out", "]", ",", "dim", "=", "1", ")", "\n", "out1", "=", "self", ".", "out_conv1", "(", "out", ")", "\n", "out2", "=", "self", ".", "out_conv2", "(", "out", ")", "\n", "return", "torch", ".", "cat", "(", "[", "out1", ",", "out2", "]", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.UNet_MSF_Generator.__init__": [[172, 209], ["networks.NetworkBase.__init__", "min", "torch.Sequential", "torch.Sequential", "torch.Sequential", "generator.downconv_norm_lrelu", "generator.downconv_norm_lrelu", "generator.downconv_norm_lrelu", "generator.downconv_norm_lrelu", "torch.Sequential", "torch.Sequential", "torch.Sequential", "generator.MultiScaleFusion", "generator.MultiScaleFusion", "generator.MultiScaleFusion", "generator.upconv_norm_relu", "generator.upconv_norm_relu", "generator.upconv_norm_relu", "generator.upconv_norm_relu", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "generator.conv_norm_relu", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.options.base_option.BaseOptions.__init__", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.downconv_norm_lrelu", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.downconv_norm_lrelu", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.downconv_norm_lrelu", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.downconv_norm_lrelu", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.upconv_norm_relu", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.upconv_norm_relu", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.upconv_norm_relu", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.upconv_norm_relu", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.conv_norm_relu"], ["    ", "def", "__init__", "(", "self", ",", "conv_dim", "=", "64", ",", "c_dim", "=", "17", ",", "normtype", "=", "'instancenorm'", ",", "sn", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_name", "=", "'unet_msf_generator'", "\n", "bottle_neck_dim", "=", "min", "(", "512", ",", "conv_dim", "*", "16", ")", "\n", "# Conv0", "\n", "self", ".", "conv0", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "conv_dim", ",", "kernel_size", "=", "7", ",", "stride", "=", "1", ",", "padding", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "InstanceNorm2d", "(", "conv_dim", ",", "affine", "=", "True", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "# 128 x 128", "\n", "\n", "# Down sampling", "\n", "self", ".", "downconv1", "=", "downconv_norm_lrelu", "(", "conv_dim", ",", "conv_dim", "*", "2", ",", "normtype", "=", "normtype", ",", "sn", "=", "sn", ")", "# 64 x 64", "\n", "self", ".", "downconv2", "=", "downconv_norm_lrelu", "(", "conv_dim", "*", "2", ",", "conv_dim", "*", "4", ",", "normtype", "=", "normtype", ",", "sn", "=", "sn", ")", "# 32 x 32", "\n", "self", ".", "downconv3", "=", "downconv_norm_lrelu", "(", "conv_dim", "*", "4", ",", "conv_dim", "*", "8", ",", "normtype", "=", "normtype", ",", "sn", "=", "sn", ")", "# 16 x 16", "\n", "self", ".", "downconv4", "=", "downconv_norm_lrelu", "(", "conv_dim", "*", "8", ",", "bottle_neck_dim", ",", "normtype", "=", "normtype", ",", "sn", "=", "sn", ")", "# 8 x 8", "\n", "self", ".", "resblock", "=", "nn", ".", "Sequential", "(", "\n", "conv_norm_relu", "(", "bottle_neck_dim", "+", "c_dim", ",", "bottle_neck_dim", ",", "normtype", "=", "normtype", ",", "sn", "=", "sn", ")", ",", "\n", "# ResidualBlock(bottle_neck_dim, bottle_neck_dim, normtype=normtype, sn=sn)", "\n", ")", "# 8 x 8", "\n", "\n", "# Multi-scale Unit", "\n", "self", ".", "skipu1", "=", "MultiScaleFusion", "(", "input_dim", "=", "conv_dim", "*", "2", ",", "dconv_dim", "=", "conv_dim", "*", "4", ",", "output_dim", "=", "conv_dim", "*", "2", ",", "\n", "c_dim", "=", "c_dim", ",", "normtype", "=", "normtype", ",", "sn", "=", "sn", ")", "# 64 x 64", "\n", "self", ".", "skipu2", "=", "MultiScaleFusion", "(", "input_dim", "=", "conv_dim", "*", "4", ",", "dconv_dim", "=", "conv_dim", "*", "8", ",", "output_dim", "=", "conv_dim", "*", "4", ",", "\n", "c_dim", "=", "c_dim", ",", "normtype", "=", "normtype", ",", "sn", "=", "sn", ")", "# 32 x 32", "\n", "self", ".", "skipu3", "=", "MultiScaleFusion", "(", "input_dim", "=", "conv_dim", "*", "8", ",", "dconv_dim", "=", "bottle_neck_dim", ",", "output_dim", "=", "conv_dim", "*", "8", ",", "\n", "c_dim", "=", "c_dim", ",", "normtype", "=", "normtype", ",", "sn", "=", "sn", ")", "# 16 x 16", "\n", "# Up sampling", "\n", "self", ".", "upconv4", "=", "upconv_norm_relu", "(", "bottle_neck_dim", ",", "conv_dim", "*", "8", ",", "normtype", "=", "normtype", ",", "sn", "=", "sn", ")", "# conv_dim*8 x 16 x 16", "\n", "self", ".", "upconv3", "=", "upconv_norm_relu", "(", "conv_dim", "*", "8", "+", "conv_dim", "*", "8", ",", "conv_dim", "*", "4", ",", "normtype", "=", "normtype", ",", "sn", "=", "sn", ")", "# 32 x 32", "\n", "self", ".", "upconv2", "=", "upconv_norm_relu", "(", "conv_dim", "*", "4", "+", "conv_dim", "*", "4", ",", "conv_dim", "*", "2", ",", "normtype", "=", "normtype", ",", "sn", "=", "sn", ")", "# conv_dim*4 x 64 x 64", "\n", "self", ".", "upconv1", "=", "upconv_norm_relu", "(", "conv_dim", "*", "2", "+", "conv_dim", "*", "2", ",", "conv_dim", "*", "1", ",", "normtype", "=", "normtype", ",", "sn", "=", "sn", ")", "# conv_dim*2 x 128 x 128", "\n", "\n", "self", ".", "out_conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "conv_dim", "*", "1", ",", "3", ",", "kernel_size", "=", "7", ",", "stride", "=", "1", ",", "padding", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.UNet_MSF_Generator.forward": [[211, 235], ["generator.UNet_MSF_Generator.conv0", "generator.UNet_MSF_Generator.downconv1", "generator.UNet_MSF_Generator.downconv2", "generator.UNet_MSF_Generator.downconv3", "generator.UNet_MSF_Generator.downconv4", "c.unsqueeze().unsqueeze", "cmap.expand.expand.expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "generator.UNet_MSF_Generator.resblock", "generator.UNet_MSF_Generator.skipu3", "generator.UNet_MSF_Generator.skipu2", "generator.UNet_MSF_Generator.skipu1", "generator.UNet_MSF_Generator.upconv4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "generator.UNet_MSF_Generator.upconv3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "generator.UNet_MSF_Generator.upconv2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "generator.UNet_MSF_Generator.upconv1", "generator.UNet_MSF_Generator.out_conv", "cmap.expand.expand.size", "cmap.expand.expand.size", "generator.UNet_MSF_Generator.size", "generator.UNet_MSF_Generator.size", "c.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "c", ")", ":", "\n", "        ", "features", "=", "self", ".", "conv0", "(", "x", ")", "\n", "down1", "=", "self", ".", "downconv1", "(", "features", ")", "# conv_dim*2 x 64 x 64", "\n", "down2", "=", "self", ".", "downconv2", "(", "down1", ")", "# conv_dim*4 x 32 x 32", "\n", "down3", "=", "self", ".", "downconv3", "(", "down2", ")", "# conv_dim*8 x 16 x 16", "\n", "down4", "=", "self", ".", "downconv4", "(", "down3", ")", "# bottle_neck_dim x 8 x 8", "\n", "cmap", "=", "c", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", "\n", "cmap", "=", "cmap", ".", "expand", "(", "cmap", ".", "size", "(", "0", ")", ",", "cmap", ".", "size", "(", "1", ")", ",", "down4", ".", "size", "(", "2", ")", ",", "down4", ".", "size", "(", "3", ")", ")", "\n", "blockin", "=", "torch", ".", "cat", "(", "[", "down4", ",", "cmap", "]", ",", "dim", "=", "1", ")", "# conv_dim*12+c_dim x 8 x 8", "\n", "blockout", "=", "self", ".", "resblock", "(", "blockin", ")", "# conv_dim*12 x 8 x 8", "\n", "\n", "skip3", "=", "self", ".", "skipu3", "(", "down3", ",", "blockout", ",", "c", ")", "# bottle_neck_dim x 16 x 16", "\n", "skip2", "=", "self", ".", "skipu2", "(", "down2", ",", "skip3", ",", "c", ")", "# conv_dim*8 x 32 x 32", "\n", "skip1", "=", "self", ".", "skipu1", "(", "down1", ",", "skip2", ",", "c", ")", "# conv_dim*4 x 64 x 64", "\n", "\n", "out", "=", "self", ".", "upconv4", "(", "blockout", ")", "# conv_dim*8 x 16 x 16", "\n", "out", "=", "torch", ".", "cat", "(", "[", "out", ",", "skip3", "]", ",", "dim", "=", "1", ")", "# conv_dim*8+bottle_neck_dim x 16 x 16", "\n", "out", "=", "self", ".", "upconv3", "(", "out", ")", "# conv_dim*8 x 32 x 32", "\n", "out", "=", "torch", ".", "cat", "(", "[", "out", ",", "skip2", "]", ",", "dim", "=", "1", ")", "# conv_dim*8+conv_dim*8 x 32 x 32", "\n", "out", "=", "self", ".", "upconv2", "(", "out", ")", "# conv_dim*4 x 64 x 64", "\n", "out", "=", "torch", ".", "cat", "(", "[", "out", ",", "skip1", "]", ",", "dim", "=", "1", ")", "# conv_dim*4+conv_dim*4 x 64 x 64", "\n", "out", "=", "self", ".", "upconv1", "(", "out", ")", "# conv_dim*2 x 128 x 128", "\n", "\n", "return", "self", ".", "out_conv", "(", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.downconv_norm_lrelu": [[8, 19], ["torch.Conv2d", "networks.normalize.get_norm_layer", "torch.LeakyReLU", "torch.Sequential", "torch"], "function", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.normalize.get_norm_layer"], ["def", "downconv_norm_lrelu", "(", "input_dim", ",", "output_dim", ",", "kernel", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "normtype", "=", "'batchnorm'", ",", "sn", "=", "False", ")", ":", "\n", "    ", "conv", "=", "nn", ".", "Conv2d", "(", "input_dim", ",", "output_dim", ",", "kernel_size", "=", "kernel", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "bias", "=", "bias", ")", "\n", "norm", "=", "get_norm_layer", "(", "output_dim", ",", "normtype", ")", "\n", "lrelu", "=", "nn", ".", "LeakyReLU", "(", ")", "\n", "if", "sn", ":", "\n", "        ", "conv", "=", "spectral_norm", "(", "conv", ")", "\n", "", "if", "norm", "is", "not", "None", ":", "\n", "        ", "layer", "=", "[", "conv", ",", "norm", ",", "lrelu", "]", "\n", "", "else", ":", "\n", "        ", "layer", "=", "[", "conv", ",", "lrelu", "]", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.upconv_norm_lrelu": [[20, 31], ["torch.ConvTranspose2d", "networks.normalize.get_norm_layer", "torch.LeakyReLU", "torch.Sequential", "torch"], "function", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.normalize.get_norm_layer"], ["", "def", "upconv_norm_lrelu", "(", "input_dim", ",", "output_dim", ",", "kernel", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "normtype", "=", "'batchnorm'", ",", "sn", "=", "False", ")", ":", "\n", "    ", "conv", "=", "nn", ".", "ConvTranspose2d", "(", "input_dim", ",", "output_dim", ",", "kernel_size", "=", "kernel", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "bias", "=", "bias", ")", "\n", "norm", "=", "get_norm_layer", "(", "output_dim", ",", "normtype", ")", "\n", "lrelu", "=", "nn", ".", "LeakyReLU", "(", ")", "\n", "if", "sn", ":", "\n", "        ", "conv", "=", "spectral_norm", "(", "conv", ")", "\n", "", "if", "norm", "is", "not", "None", ":", "\n", "        ", "layer", "=", "[", "conv", ",", "norm", ",", "lrelu", "]", "\n", "", "else", ":", "\n", "        ", "layer", "=", "[", "conv", ",", "lrelu", "]", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.upconv_norm_relu": [[32, 43], ["torch.ConvTranspose2d", "networks.normalize.get_norm_layer", "torch.ReLU", "torch.Sequential", "torch"], "function", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.normalize.get_norm_layer"], ["", "def", "upconv_norm_relu", "(", "input_dim", ",", "output_dim", ",", "kernel", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "normtype", "=", "'batchnorm'", ",", "sn", "=", "False", ")", ":", "\n", "    ", "conv", "=", "nn", ".", "ConvTranspose2d", "(", "input_dim", ",", "output_dim", ",", "kernel_size", "=", "kernel", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "bias", "=", "bias", ")", "\n", "norm", "=", "get_norm_layer", "(", "output_dim", ",", "normtype", ")", "\n", "lrelu", "=", "nn", ".", "ReLU", "(", ")", "\n", "if", "sn", ":", "\n", "        ", "conv", "=", "spectral_norm", "(", "conv", ")", "\n", "", "if", "norm", "is", "not", "None", ":", "\n", "        ", "layer", "=", "[", "conv", ",", "norm", ",", "lrelu", "]", "\n", "", "else", ":", "\n", "        ", "layer", "=", "[", "conv", ",", "lrelu", "]", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.generator.conv_norm_relu": [[44, 55], ["torch.Conv2d", "networks.normalize.get_norm_layer", "torch.ReLU", "torch.Sequential", "torch"], "function", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.networks.normalize.get_norm_layer"], ["", "def", "conv_norm_relu", "(", "input_dim", ",", "output_dim", ",", "kernel", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "normtype", "=", "'batchnorm'", ",", "sn", "=", "False", ")", ":", "\n", "    ", "conv", "=", "nn", ".", "Conv2d", "(", "input_dim", ",", "output_dim", ",", "kernel_size", "=", "kernel", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "bias", "=", "bias", ")", "\n", "norm", "=", "get_norm_layer", "(", "output_dim", ",", "normtype", ")", "\n", "lrelu", "=", "nn", ".", "ReLU", "(", ")", "\n", "if", "sn", ":", "\n", "        ", "conv", "=", "spectral_norm", "(", "conv", ")", "\n", "", "if", "norm", "is", "not", "None", ":", "\n", "        ", "layer", "=", "[", "conv", ",", "norm", ",", "lrelu", "]", "\n", "", "else", ":", "\n", "        ", "layer", "=", "[", "conv", ",", "lrelu", "]", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset.CustomDatasetDataLoader.__init__": [[7, 12], ["dataset.CustomDatasetDataLoader._create_dataset"], "methods", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset.CustomDatasetDataLoader._create_dataset"], ["    ", "def", "__init__", "(", "self", ",", "opt", ",", "is_for_train", "=", "True", ")", ":", "\n", "        ", "self", ".", "_opt", "=", "opt", "\n", "self", ".", "_is_for_train", "=", "is_for_train", "\n", "self", ".", "_num_threds", "=", "opt", ".", "n_threads_train", "if", "is_for_train", "else", "opt", ".", "n_threads_test", "\n", "self", ".", "_create_dataset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset.CustomDatasetDataLoader._create_dataset": [[13, 15], ["dataset.DatasetFactory.get_by_name"], "methods", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset.DatasetFactory.get_by_name"], ["", "def", "_create_dataset", "(", "self", ")", ":", "\n", "        ", "self", ".", "_dataset", "=", "DatasetFactory", ".", "get_by_name", "(", "self", ".", "_opt", ".", "dataset_mode", ",", "self", ".", "_opt", ",", "self", ".", "_is_for_train", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset.CustomDatasetDataLoader.load_data": [[17, 25], ["torch.utils.data.DataLoader", "int"], "methods", ["None"], ["", "def", "load_data", "(", "self", ")", ":", "\n", "        ", "self", ".", "_dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "self", ".", "_dataset", ",", "\n", "batch_size", "=", "self", ".", "_opt", ".", "batch_size", ",", "\n", "shuffle", "=", "not", "self", ".", "_opt", ".", "serial_batches", ",", "\n", "num_workers", "=", "int", "(", "self", ".", "_num_threds", ")", ",", "\n", "drop_last", "=", "True", ")", "\n", "return", "self", ".", "_dataloader", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset.CustomDatasetDataLoader.__len__": [[26, 28], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "_dataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset.DatasetFactory.__init__": [[31, 33], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset.DatasetFactory.get_by_name": [[34, 44], ["print", "AusDataset", "ValueError"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_by_name", "(", "dataset_name", ",", "opt", ",", "is_for_train", ")", ":", "\n", "        ", "if", "dataset_name", "==", "'aus'", ":", "\n", "            ", "from", "data", ".", "dataset_aus", "import", "AusDataset", "\n", "dataset", "=", "AusDataset", "(", "opt", ",", "is_for_train", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\"Dataset [%s] not find.\"", "%", "(", "dataset_name", ")", ")", "\n", "\n", "", "print", "(", "'Dataset {} was created.'", ".", "format", "(", "dataset", ".", "name", ")", ")", "\n", "return", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset.DatasetBase.__init__": [[47, 59], ["super().__init__", "dataset.DatasetBase._create_transform"], "methods", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.options.base_option.BaseOptions.__init__", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset_aus.AusDataset._create_transform"], ["    ", "def", "__init__", "(", "self", ",", "opt", ",", "is_for_train", ")", ":", "\n", "        ", "super", "(", "DatasetBase", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_name", "=", "'BaseDataset'", "\n", "self", ".", "_root", "=", "None", "\n", "self", ".", "_opt", "=", "opt", "\n", "self", ".", "_is_for_train", "=", "is_for_train", "\n", "self", ".", "_image_size", "=", "self", ".", "_opt", ".", "image_size", "\n", "self", ".", "_create_transform", "(", ")", "\n", "\n", "self", ".", "_IMG_EXTENSIONS", "=", "[", "\n", "'.jpg'", ",", "'.JPG'", ",", "'.jpeg'", ",", "'.JPEG'", ",", "\n", "'.png'", ",", "'.PNG'", ",", "'.ppm'", ",", "'.PPM'", ",", "'.bmp'", ",", "'.BMP'", ",", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset.DatasetBase.name": [[61, 64], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "name", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_name", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset.DatasetBase.path": [[65, 68], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "path", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_root", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset.DatasetBase._create_transform": [[69, 71], ["torchvision.Compose"], "methods", ["None"], ["", "def", "_create_transform", "(", "self", ")", ":", "\n", "        ", "self", ".", "_transform", "=", "transforms", ".", "Compose", "(", "[", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset.DatasetBase.get_transform": [[72, 74], ["None"], "methods", ["None"], ["", "def", "get_transform", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_transform", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset.DatasetBase._is_image_file": [[75, 77], ["any", "filename.endswith"], "methods", ["None"], ["", "def", "_is_image_file", "(", "self", ",", "filename", ")", ":", "\n", "        ", "return", "any", "(", "filename", ".", "endswith", "(", "extention", ")", "for", "extention", "in", "self", ".", "_IMG_EXTENSIONS", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset.DatasetBase._is_csv_file": [[78, 80], ["filename.endswith"], "methods", ["None"], ["", "def", "_is_csv_file", "(", "self", ",", "filename", ")", ":", "\n", "        ", "return", "filename", ".", "endswith", "(", "'.csv'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset.DatasetBase._get_all_files_in_subfolders": [[81, 102], ["os.path.isdir", "sorted", "os.walk", "is_file", "os.path.join", "images.append"], "methods", ["None"], ["", "def", "_get_all_files_in_subfolders", "(", "self", ",", "dir", ",", "is_file", ")", ":", "\n", "        ", "'''\n        to get all files paths in dir\n        Args:\n            dir: input dataset directory\n            is_file: a function which judge is a file is image or csv document.\n        return:\n            a list contains files paths\n        '''", "\n", "\n", "images", "=", "[", "]", "\n", "\n", "assert", "os", ".", "path", ".", "isdir", "(", "dir", ")", ",", "'%s is not a valid directory'", "%", "dir", "\n", "\n", "for", "root", ",", "_", ",", "fnames", "in", "sorted", "(", "os", ".", "walk", "(", "dir", ")", ")", ":", "\n", "            ", "for", "fname", "in", "fnames", ":", "\n", "                ", "if", "is_file", "(", "fname", ")", ":", "\n", "                    ", "path", "=", "os", ".", "path", ".", "join", "(", "root", ",", "fname", ")", "\n", "images", ".", "append", "(", "path", ")", "\n", "\n", "", "", "", "return", "images", "\n", "", "", ""]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset_aus.AusDataset.__init__": [[13, 18], ["data.dataset.DatasetBase.__init__", "dataset_aus.AusDataset._read_dataset"], "methods", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.options.base_option.BaseOptions.__init__", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset_aus.AusDataset._read_dataset"], ["    ", "def", "__init__", "(", "self", ",", "opt", ",", "is_for_train", ")", ":", "\n", "        ", "super", "(", "AusDataset", ",", "self", ")", ".", "__init__", "(", "opt", ",", "is_for_train", ")", "\n", "self", ".", "_name", "=", "\"AusDataset\"", "\n", "self", ".", "_read_dataset", "(", ")", "\n", "self", ".", "_cond_nc", "=", "opt", ".", "cond_nc", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset_aus.AusDataset.__len__": [[19, 21], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_dataset_size", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset_aus.AusDataset.__getitem__": [[22, 54], ["numpy.random.uniform", "dataset_aus.AusDataset._generate_random_cond", "dataset_aus.AusDataset._transform", "dataset_aus.AusDataset._transform", "dataset_aus.AusDataset._get_id", "dataset_aus.AusDataset._get_img_by_id", "dataset_aus.AusDataset._get_cond_by_id", "PIL.Image.fromarray", "PIL.Image.fromarray", "print", "random.randint", "print", "random.randint"], "methods", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset_aus.AusDataset._generate_random_cond", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset_aus.AusDataset._get_id", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset_aus.AusDataset._get_img_by_id", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset_aus.AusDataset._get_cond_by_id"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "assert", "(", "idx", "<", "self", ".", "_dataset_size", ")", "\n", "real_img", "=", "None", "\n", "real_cond", "=", "None", "\n", "real_img_path", "=", "None", "\n", "while", "real_img", "is", "None", "or", "real_cond", "is", "None", ":", "\n", "# get sample data", "\n", "            ", "sample_id", "=", "self", ".", "_get_id", "(", "idx", ")", "\n", "\n", "real_img", ",", "real_img_path", "=", "self", ".", "_get_img_by_id", "(", "idx", ")", "\n", "real_cond", "=", "self", ".", "_get_cond_by_id", "(", "idx", ")", "\n", "if", "real_img", "is", "None", ":", "\n", "                ", "print", "(", "'error reading image %s, skipping sample'", "%", "real_img_path", ")", "\n", "idx", "=", "random", ".", "randint", "(", "0", ",", "self", ".", "_dataset_size", "-", "1", ")", "\n", "", "if", "real_cond", "is", "None", ":", "\n", "                ", "print", "(", "'error reading aus %s, skipping sample'", "%", "sample_id", ")", "\n", "idx", "=", "random", ".", "randint", "(", "0", ",", "self", ".", "_dataset_size", "-", "1", ")", "\n", "", "", "real_cond", "+=", "np", ".", "random", ".", "uniform", "(", "-", "0.02", ",", "0.02", ",", "real_cond", ".", "shape", ")", "\n", "desired_img", ",", "desired_cond", ",", "noise", "=", "self", ".", "_generate_random_cond", "(", ")", "\n", "\n", "# transform data", "\n", "real_img", "=", "self", ".", "_transform", "(", "Image", ".", "fromarray", "(", "real_img", ")", ")", "\n", "desired_img", "=", "self", ".", "_transform", "(", "Image", ".", "fromarray", "(", "desired_img", ")", ")", "\n", "\n", "# pack data", "\n", "sample", "=", "{", "'real_img'", ":", "real_img", ",", "\n", "'real_cond'", ":", "real_cond", ",", "\n", "'desired_img'", ":", "desired_img", ",", "\n", "'desired_cond'", ":", "desired_cond", ",", "\n", "'cond_diff'", ":", "desired_cond", "-", "real_cond", ",", "\n", "}", "\n", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset_aus.AusDataset._create_transform": [[55, 70], ["torchvision.Compose", "torchvision.RandomHorizontalFlip", "torchvision.Resize", "torchvision.Pad", "torchvision.RandomCrop", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Normalize"], "methods", ["None"], ["", "def", "_create_transform", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_is_for_train", ":", "\n", "            ", "transform_list", "=", "[", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "Resize", "(", "self", ".", "_image_size", ")", ",", "\n", "transforms", ".", "Pad", "(", "self", ".", "_image_size", "//", "16", ")", ",", "\n", "transforms", ".", "RandomCrop", "(", "self", ".", "_image_size", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "std", "=", "[", "0.5", ",", "0.5", ",", "0.5", "]", ")", "]", "\n", "\n", "", "else", ":", "\n", "            ", "transform_list", "=", "[", "transforms", ".", "Resize", "(", "self", ".", "_image_size", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "std", "=", "[", "0.5", ",", "0.5", ",", "0.5", "]", ")", "]", "\n", "\n", "", "self", ".", "_transform", "=", "transforms", ".", "Compose", "(", "transform_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset_aus.AusDataset._read_dataset": [[71, 81], ["os.path.join", "os.path.join", "dataset_aus.AusDataset._read_pkl", "len"], "methods", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset_aus.AusDataset._read_pkl"], ["", "def", "_read_dataset", "(", "self", ")", ":", "\n", "        ", "self", ".", "_root", "=", "self", ".", "_opt", ".", "data_dir", "\n", "self", ".", "_imgs_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "_root", ",", "self", ".", "_opt", ".", "images_folder", ")", "\n", "\n", "annotations_file", "=", "self", ".", "_opt", ".", "train_annotations_file", "if", "self", ".", "_is_for_train", "else", "self", ".", "_opt", ".", "test_annotations_file", "\n", "pkl_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "_root", ",", "annotations_file", ")", "\n", "self", ".", "_info", "=", "self", ".", "_read_pkl", "(", "pkl_path", ")", "\n", "self", ".", "_image_size", "=", "self", ".", "_opt", ".", "image_size", "\n", "# dataset size", "\n", "self", ".", "_dataset_size", "=", "len", "(", "self", ".", "_info", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset_aus.AusDataset._read_pkl": [[82, 86], ["os.path.exists", "file_path.endswith", "open", "pickle.load"], "methods", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.models.models.BaseModel.load"], ["", "def", "_read_pkl", "(", "self", ",", "file_path", ")", ":", "\n", "        ", "assert", "os", ".", "path", ".", "exists", "(", "file_path", ")", "and", "file_path", ".", "endswith", "(", "'.pkl'", ")", ",", "'Read pkl file error. Cannot open %s'", "%", "file_path", "\n", "with", "open", "(", "file_path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "return", "pickle", ".", "load", "(", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset_aus.AusDataset._get_id": [[87, 90], ["os.path.splitext"], "methods", ["None"], ["", "", "def", "_get_id", "(", "self", ",", "idx", ")", ":", "\n", "        ", "id", "=", "self", ".", "_info", "[", "idx", "]", "[", "'file_path'", "]", "\n", "return", "os", ".", "path", ".", "splitext", "(", "id", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset_aus.AusDataset._get_cond_by_id": [[91, 96], ["None"], "methods", ["None"], ["", "def", "_get_cond_by_id", "(", "self", ",", "idx", ")", ":", "\n", "        ", "cond", "=", "None", "\n", "if", "idx", "<", "self", ".", "_dataset_size", ":", "\n", "            ", "cond", "=", "self", ".", "_info", "[", "idx", "]", "[", "'aus'", "]", "/", "5.0", "\n", "", "return", "cond", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset_aus.AusDataset._get_img_by_id": [[98, 106], ["os.path.join", "utils.cv_utils.read_cv2_img", "print"], "methods", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.cv_utils.read_cv2_img"], ["", "def", "_get_img_by_id", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "idx", "<", "self", ".", "_dataset_size", ":", "\n", "            ", "img_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "_imgs_dir", ",", "self", ".", "_info", "[", "idx", "]", "[", "'file_path'", "]", ")", "\n", "img", "=", "cv_utils", ".", "read_cv2_img", "(", "img_path", ")", "\n", "return", "img", ",", "self", ".", "_info", "[", "idx", "]", "[", "'file_path'", "]", "\n", "", "else", ":", "\n", "            ", "print", "(", "'You input idx\uff1a '", ",", "idx", ")", "\n", "return", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset_aus.AusDataset._generate_random_cond": [[107, 119], ["dataset_aus.AusDataset._get_img_by_id", "numpy.random.uniform", "random.randint", "dataset_aus.AusDataset._get_cond_by_id", "dataset_aus.AusDataset._generate_random_cond"], "methods", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset_aus.AusDataset._get_img_by_id", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset_aus.AusDataset._get_cond_by_id", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.data.dataset_aus.AusDataset._generate_random_cond"], ["", "", "def", "_generate_random_cond", "(", "self", ")", ":", "\n", "        ", "cond", "=", "None", "\n", "rand_sample_id", "=", "-", "1", "\n", "while", "cond", "is", "None", ":", "\n", "            ", "rand_sample_id", "=", "random", ".", "randint", "(", "0", ",", "self", ".", "_dataset_size", "-", "1", ")", "\n", "cond", "=", "self", ".", "_get_cond_by_id", "(", "rand_sample_id", ")", "\n", "", "img", ",", "_", "=", "self", ".", "_get_img_by_id", "(", "rand_sample_id", ")", "\n", "noise", "=", "np", ".", "random", ".", "uniform", "(", "-", "0.1", ",", "0.1", ",", "cond", ".", "shape", ")", "\n", "if", "img", "is", "None", ":", "\n", "            ", "img", ",", "cond", ",", "noise", "=", "self", ".", "_generate_random_cond", "(", ")", "\n", "", "cond", "+=", "noise", "\n", "return", "img", ",", "cond", ",", "noise", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.losses.model_loss.get_cycle_loss": [[4, 6], ["torch.L1Loss().cuda", "torch.L1Loss"], "function", ["None"], ["def", "get_cycle_loss", "(", ")", ":", "\n", "    ", "return", "nn", ".", "L1Loss", "(", ")", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.losses.model_loss.get_cond_loss": [[7, 9], ["torch.MSELoss().cuda", "torch.MSELoss"], "function", ["None"], ["", "def", "get_cond_loss", "(", ")", ":", "\n", "    ", "return", "nn", ".", "MSELoss", "(", ")", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.options.base_option.BaseOptions.__init__": [[7, 10], ["argparse.ArgumentParser"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "_parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "self", ".", "_initialized", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.options.base_option.BaseOptions.initialize": [[11, 35], ["base_option.BaseOptions._parser.add_argument", "base_option.BaseOptions._parser.add_argument", "base_option.BaseOptions._parser.add_argument", "base_option.BaseOptions._parser.add_argument", "base_option.BaseOptions._parser.add_argument", "base_option.BaseOptions._parser.add_argument", "base_option.BaseOptions._parser.add_argument", "base_option.BaseOptions._parser.add_argument", "base_option.BaseOptions._parser.add_argument", "base_option.BaseOptions._parser.add_argument", "base_option.BaseOptions._parser.add_argument", "base_option.BaseOptions._parser.add_argument", "base_option.BaseOptions._parser.add_argument", "base_option.BaseOptions._parser.add_argument", "base_option.BaseOptions._parser.add_argument", "base_option.BaseOptions._parser.add_argument", "base_option.BaseOptions._parser.add_argument", "base_option.BaseOptions._parser.add_argument"], "methods", ["None"], ["", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "self", ".", "_parser", ".", "add_argument", "(", "'--data_dir'", ",", "type", "=", "str", ",", "required", "=", "True", ",", "help", "=", "'path to dataset'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--images_folder'", ",", "type", "=", "str", ",", "default", "=", "'imgs'", ",", "help", "=", "'images folder'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--train_annotations_file'", ",", "type", "=", "str", ",", "default", "=", "'train_1.1_selected.pkl'", ",", "help", "=", "'file containing samples aus'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--test_annotations_file'", ",", "type", "=", "str", ",", "default", "=", "'validation_1.1_selected.pkl'", ",", "help", "=", "'file containing samples aus'", ")", "\n", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--load_epoch'", ",", "type", "=", "int", ",", "default", "=", "-", "1", ",", "help", "=", "'which epoch to load? set to -1 to use latest cached model'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--batch_size'", ",", "type", "=", "int", ",", "default", "=", "25", ",", "help", "=", "'input batch size'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--image_size'", ",", "type", "=", "int", ",", "default", "=", "128", ",", "help", "=", "'input image size'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--cond_nc'", ",", "type", "=", "int", ",", "default", "=", "13", ",", "help", "=", "'# of conditions'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--gpu_ids'", ",", "type", "=", "str", ",", "default", "=", "'0,1'", ",", "help", "=", "'gpu ids: e.g. 0  0,1,2, 0,2. use -1 for CPU'", ")", "\n", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--name'", ",", "type", "=", "str", ",", "default", "=", "'experiment_1'", ",", "help", "=", "'name of the experiment. It decides where to store samples and models'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--dataset_mode'", ",", "type", "=", "str", ",", "default", "=", "'aus'", ",", "help", "=", "'chooses dataset to be used'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--model'", ",", "type", "=", "str", ",", "default", "=", "'expression_manipulator'", ",", "help", "=", "'model to run[au_net_model]'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--n_threads_test'", ",", "default", "=", "2", ",", "type", "=", "int", ",", "help", "=", "'# threads for loading data'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--checkpoints_dir'", ",", "type", "=", "str", ",", "default", "=", "'./checkpoints'", ",", "help", "=", "'models are saved here'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--serial_batches'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "help", "=", "'if true, takes images in order to make batches, otherwise takes them randomly'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--do_saturate_mask'", ",", "action", "=", "\"store_true\"", ",", "default", "=", "False", ",", "help", "=", "'do use mask_fake for mask_cyc'", ")", "\n", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--generator_name'", ",", "type", "=", "str", ",", "default", "=", "'unet_msf_generator'", ",", "help", "=", "'generator_naive_wgan, adain_generator_wgan, cat_generator_wgan'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--discriminator_name'", ",", "type", "=", "str", ",", "default", "=", "'discriminator_wgan_plus'", ",", "help", "=", "'discriminator_naive_wgan, condition_discriminator_wgan1,  condition_discriminator_wgan2'", ")", "\n", "\n", "self", ".", "_initialized", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.options.base_option.BaseOptions.parse": [[36, 59], ["base_option.BaseOptions._parser.parse_args", "base_option.BaseOptions._set_and_check_load_epoch", "base_option.BaseOptions._get_set_gpus", "vars", "base_option.BaseOptions._print", "base_option.BaseOptions._save", "base_option.BaseOptions.initialize"], "methods", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.options.base_option.BaseOptions._set_and_check_load_epoch", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.options.base_option.BaseOptions._get_set_gpus", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.options.base_option.BaseOptions._print", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.options.base_option.BaseOptions._save", "home.repos.pwc.inspect_result.junleen_Expression-manipulator.options.train_option.TrainOptions.initialize"], ["", "def", "parse", "(", "self", ")", ":", "\n", "        ", "if", "not", "self", ".", "_initialized", ":", "\n", "            ", "self", ".", "initialize", "(", ")", "\n", "", "self", ".", "_opt", "=", "self", ".", "_parser", ".", "parse_args", "(", ")", "\n", "\n", "# set is train or set", "\n", "self", ".", "_opt", ".", "is_train", "=", "self", ".", "is_train", "\n", "\n", "# set and check load_epoch", "\n", "self", ".", "_set_and_check_load_epoch", "(", ")", "\n", "\n", "# get and set gpus", "\n", "self", ".", "_get_set_gpus", "(", ")", "\n", "\n", "args", "=", "vars", "(", "self", ".", "_opt", ")", "\n", "\n", "# print in terminal args", "\n", "self", ".", "_print", "(", "args", ")", "\n", "\n", "# save args to file", "\n", "self", ".", "_save", "(", "args", ")", "\n", "\n", "return", "self", ".", "_opt", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.options.base_option.BaseOptions._set_and_check_load_epoch": [[60, 79], ["os.path.join", "os.path.exists", "os.listdir", "os.listdir", "file.startswith", "file.startswith", "max", "int", "int", "file.split", "file.split"], "methods", ["None"], ["", "def", "_set_and_check_load_epoch", "(", "self", ")", ":", "\n", "        ", "models_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "_opt", ".", "checkpoints_dir", ",", "self", ".", "_opt", ".", "name", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "models_dir", ")", ":", "\n", "            ", "if", "self", ".", "_opt", ".", "load_epoch", "==", "-", "1", ":", "\n", "                ", "load_epoch", "=", "0", "\n", "for", "file", "in", "os", ".", "listdir", "(", "models_dir", ")", ":", "\n", "                    ", "if", "file", ".", "startswith", "(", "\"net_epoch_\"", ")", ":", "\n", "                        ", "load_epoch", "=", "max", "(", "load_epoch", ",", "int", "(", "file", ".", "split", "(", "'_'", ")", "[", "2", "]", ")", ")", "\n", "", "", "self", ".", "_opt", ".", "load_epoch", "=", "load_epoch", "\n", "", "else", ":", "\n", "                ", "found", "=", "False", "\n", "for", "file", "in", "os", ".", "listdir", "(", "models_dir", ")", ":", "\n", "                    ", "if", "file", ".", "startswith", "(", "\"net_epoch_\"", ")", ":", "\n", "                        ", "found", "=", "int", "(", "file", ".", "split", "(", "'_'", ")", "[", "2", "]", ")", "==", "self", ".", "_opt", ".", "load_epoch", "\n", "if", "found", ":", "break", "\n", "", "", "assert", "found", ",", "'Model for epoch %i not found'", "%", "self", ".", "_opt", ".", "load_epoch", "\n", "", "", "else", ":", "\n", "            ", "assert", "self", ".", "_opt", ".", "load_epoch", "<", "1", ",", "'Model for epoch %i not found'", "%", "self", ".", "_opt", ".", "load_epoch", "\n", "self", ".", "_opt", ".", "load_epoch", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.options.base_option.BaseOptions._get_set_gpus": [[80, 92], ["base_option.BaseOptions._opt.gpu_ids.split", "int", "len", "torch.cuda.set_device", "base_option.BaseOptions._opt.gpu_ids.append"], "methods", ["None"], ["", "", "def", "_get_set_gpus", "(", "self", ")", ":", "\n", "# get gpu ids", "\n", "        ", "str_ids", "=", "self", ".", "_opt", ".", "gpu_ids", ".", "split", "(", "','", ")", "\n", "self", ".", "_opt", ".", "gpu_ids", "=", "[", "]", "\n", "for", "str_id", "in", "str_ids", ":", "\n", "            ", "id", "=", "int", "(", "str_id", ")", "\n", "if", "id", ">=", "0", ":", "\n", "                ", "self", ".", "_opt", ".", "gpu_ids", ".", "append", "(", "id", ")", "\n", "\n", "# set gpu ids", "\n", "", "", "if", "len", "(", "self", ".", "_opt", ".", "gpu_ids", ")", ">", "0", ":", "\n", "            ", "torch", ".", "cuda", ".", "set_device", "(", "self", ".", "_opt", ".", "gpu_ids", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.options.base_option.BaseOptions._print": [[93, 98], ["print", "sorted", "print", "args.items", "print", "str", "str"], "methods", ["None"], ["", "", "def", "_print", "(", "self", ",", "args", ")", ":", "\n", "        ", "print", "(", "'------------ Options -------------'", ")", "\n", "for", "k", ",", "v", "in", "sorted", "(", "args", ".", "items", "(", ")", ")", ":", "\n", "            ", "print", "(", "'%s: %s'", "%", "(", "str", "(", "k", ")", ",", "str", "(", "v", ")", ")", ")", "\n", "", "print", "(", "'-------------- End ----------------'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.options.base_option.BaseOptions._save": [[99, 110], ["os.path.join", "print", "os.path.join", "os.path.exists", "os.mkdir", "open", "opt_file.write", "sorted", "opt_file.write", "args.items", "opt_file.write", "str", "str"], "methods", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.utils.util.mkdir"], ["", "def", "_save", "(", "self", ",", "args", ")", ":", "\n", "        ", "expr_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "_opt", ".", "checkpoints_dir", ",", "self", ".", "_opt", ".", "name", ")", "\n", "print", "(", "expr_dir", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "expr_dir", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "expr_dir", ")", "\n", "", "file_name", "=", "os", ".", "path", ".", "join", "(", "expr_dir", ",", "'opt_%s.txt'", "%", "(", "'train'", "if", "self", ".", "is_train", "else", "'test'", ")", ")", "\n", "with", "open", "(", "file_name", ",", "'wt'", ")", "as", "opt_file", ":", "\n", "            ", "opt_file", ".", "write", "(", "'------------ Options -------------\\n'", ")", "\n", "for", "k", ",", "v", "in", "sorted", "(", "args", ".", "items", "(", ")", ")", ":", "\n", "                ", "opt_file", ".", "write", "(", "'%s: %s\\n'", "%", "(", "str", "(", "k", ")", ",", "str", "(", "v", ")", ")", ")", "\n", "", "opt_file", ".", "write", "(", "'-------------- End ----------------\\n'", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.junleen_Expression-manipulator.options.train_option.TrainOptions.initialize": [[4, 46], ["base_option.BaseOptions.initialize", "train_option.TrainOptions._parser.add_argument", "train_option.TrainOptions._parser.add_argument", "train_option.TrainOptions._parser.add_argument", "train_option.TrainOptions._parser.add_argument", "train_option.TrainOptions._parser.add_argument", "train_option.TrainOptions._parser.add_argument", "train_option.TrainOptions._parser.add_argument", "train_option.TrainOptions._parser.add_argument", "train_option.TrainOptions._parser.add_argument", "train_option.TrainOptions._parser.add_argument", "train_option.TrainOptions._parser.add_argument", "train_option.TrainOptions._parser.add_argument", "train_option.TrainOptions._parser.add_argument", "train_option.TrainOptions._parser.add_argument", "train_option.TrainOptions._parser.add_argument", "train_option.TrainOptions._parser.add_argument", "train_option.TrainOptions._parser.add_argument", "train_option.TrainOptions._parser.add_argument", "train_option.TrainOptions._parser.add_argument", "train_option.TrainOptions._parser.add_argument", "train_option.TrainOptions._parser.add_argument", "train_option.TrainOptions._parser.add_argument", "train_option.TrainOptions._parser.add_argument", "train_option.TrainOptions._parser.add_argument", "train_option.TrainOptions._parser.add_argument", "train_option.TrainOptions._parser.add_argument", "train_option.TrainOptions._parser.add_argument", "train_option.TrainOptions._parser.add_argument", "train_option.TrainOptions._parser.add_argument", "train_option.TrainOptions._parser.add_argument", "train_option.TrainOptions._parser.add_argument"], "methods", ["home.repos.pwc.inspect_result.junleen_Expression-manipulator.options.train_option.TrainOptions.initialize"], ["    ", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "BaseOptions", ".", "initialize", "(", "self", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--n_threads_train'", ",", "default", "=", "4", ",", "type", "=", "int", ",", "help", "=", "'# threads for loading data'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--num_iters_validate'", ",", "default", "=", "2", ",", "type", "=", "int", ",", "help", "=", "'# batches to use when validating'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--print_freq_s'", ",", "type", "=", "int", ",", "default", "=", "60", ",", "help", "=", "'frequency of showing training results on console'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--display_freq_s'", ",", "type", "=", "int", ",", "default", "=", "300", ",", "help", "=", "'frequency [s] of showing training results on screen'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--save_latest_freq_s'", ",", "type", "=", "int", ",", "default", "=", "3600", ",", "help", "=", "'frequency of saving the latest results'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--save_every_epoch'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "help", "=", "\"save for every #save_every_epoch epoch\"", ")", "\n", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--nepochs_no_decay'", ",", "type", "=", "int", ",", "default", "=", "30", ",", "help", "=", "'# of epochs at starting learning rate'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--nepochs_decay'", ",", "type", "=", "int", ",", "default", "=", "20", ",", "help", "=", "'# of epochs to linearly decay learning rate to zero'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--lr_policy'", ",", "type", "=", "str", ",", "default", "=", "'step'", ",", "help", "=", "'type of learning rate decay'", ")", "\n", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--ngf'", ",", "type", "=", "int", ",", "default", "=", "64", ",", "help", "=", "'num of filters in first convolution layer in G'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--ndf'", ",", "type", "=", "int", ",", "default", "=", "64", ",", "help", "=", "'num of filters in first convolution layer in D'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--normtype_G'", ",", "type", "=", "str", ",", "default", "=", "'instancenorm'", ",", "help", "=", "'normtype of G'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--normtype_D'", ",", "type", "=", "str", ",", "default", "=", "'none'", ",", "help", "=", "'normtype of D'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--use_sn_G'", ",", "action", "=", "\"store_true\"", ",", "default", "=", "False", ",", "help", "=", "'use spectral norm for G'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--use_sn_D'", ",", "action", "=", "\"store_true\"", ",", "default", "=", "False", ",", "help", "=", "'use spectral norm for D'", ")", "\n", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--train_G_every_n_iterations'", ",", "type", "=", "int", ",", "default", "=", "4", ",", "help", "=", "'train G every n interations'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--poses_g_sigma'", ",", "type", "=", "float", ",", "default", "=", "0.06", ",", "help", "=", "'initial learning rate for adam'", ")", "\n", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--lr_G'", ",", "type", "=", "float", ",", "default", "=", "0.0001", ",", "help", "=", "'initial learning rate for G adam'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--G_adam_b1'", ",", "type", "=", "float", ",", "default", "=", "0.5", ",", "help", "=", "'beta1 for G adam'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--G_adam_b2'", ",", "type", "=", "float", ",", "default", "=", "0.999", ",", "help", "=", "'beta2 for G adam'", ")", "\n", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--lr_D'", ",", "type", "=", "float", ",", "default", "=", "0.0001", ",", "help", "=", "'initial learning rate for D adam'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--D_adam_b1'", ",", "type", "=", "float", ",", "default", "=", "0.5", ",", "help", "=", "'beta1 for D adam'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--D_adam_b2'", ",", "type", "=", "float", ",", "default", "=", "0.999", ",", "help", "=", "'beta2 for D adam'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--lr_decays_to'", ",", "type", "=", "float", ",", "default", "=", "5e-6", ",", "help", "=", "'learning rate decay terminal value'", ")", "\n", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--lambda_D_prob'", ",", "type", "=", "float", ",", "default", "=", "10", ",", "help", "=", "'lambda for real/fake discriminator loss'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--lambda_D_cond'", ",", "type", "=", "float", ",", "default", "=", "150", ",", "help", "=", "'lambda for condition discriminator loss'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--lambda_D_gp'", ",", "type", "=", "float", ",", "default", "=", "10", ",", "help", "=", "'lambda gradient penalty loss'", ")", "\n", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--lambda_G_fake_cond'", ",", "type", "=", "float", ",", "default", "=", "150", ",", "help", "=", "'lambda for condition in generator fake image cond loss'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--lambda_rec_l1'", ",", "type", "=", "float", ",", "default", "=", "30", ",", "help", "=", "'lambda self-reconstruction loss'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--lambda_cyc_l1'", ",", "type", "=", "float", ",", "default", "=", "30", ",", "help", "=", "'lambda cycle loss'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--lambda_smooth'", ",", "type", "=", "float", ",", "default", "=", "1e-5", ",", "help", "=", "'lambda smooth loss'", ")", "\n", "\n", "self", ".", "is_train", "=", "True", "\n", "", "", ""]]}