{"home.repos.pwc.inspect_result.megayeye_triangle-net.None.train_partseg.calculate_shape_IoU": [[36, 60], ["label.squeeze.squeeze", "range", "shape_ious.append", "range", "range", "numpy.argmax", "numpy.sum", "numpy.sum", "part_ious.append", "numpy.mean", "numpy.logical_and", "numpy.logical_or", "float"], "function", ["None"], ["def", "calculate_shape_IoU", "(", "pred_np", ",", "seg_np", ",", "label", ",", "class_choice", ")", ":", "\n", "    ", "label", "=", "label", ".", "squeeze", "(", ")", "\n", "shape_ious", "=", "[", "]", "\n", "for", "shape_idx", "in", "range", "(", "seg_np", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "if", "not", "class_choice", ":", "\n", "            ", "start_index", "=", "index_start", "[", "label", "[", "shape_idx", "]", "]", "\n", "num", "=", "seg_num", "[", "label", "[", "shape_idx", "]", "]", "\n", "parts", "=", "range", "(", "start_index", ",", "start_index", "+", "num", ")", "\n", "", "else", ":", "\n", "            ", "parts", "=", "range", "(", "seg_num", "[", "label", "[", "0", "]", "]", ")", "\n", "", "part_ious", "=", "[", "]", "\n", "for", "part", "in", "parts", ":", "\n", "            ", "pred", "=", "np", ".", "argmax", "(", "pred_np", "[", "shape_idx", ",", ":", ",", "start_index", ":", "start_index", "+", "num", "]", ",", "axis", "=", "-", "1", ")", "\n", "a", "=", "pred", "==", "(", "part", "-", "start_index", ")", "\n", "b", "=", "seg_np", "[", "shape_idx", "]", "==", "part", "\n", "I", "=", "np", ".", "sum", "(", "np", ".", "logical_and", "(", "a", ",", "b", ")", ")", "\n", "U", "=", "np", ".", "sum", "(", "np", ".", "logical_or", "(", "a", ",", "b", ")", ")", "\n", "if", "U", "==", "0", ":", "\n", "                ", "iou", "=", "1", "# If the union of groundtruth and prediction points is empty, then count part IoU as 1", "\n", "", "else", ":", "\n", "                ", "iou", "=", "I", "/", "float", "(", "U", ")", "\n", "", "part_ious", ".", "append", "(", "iou", ")", "\n", "", "shape_ious", ".", "append", "(", "np", ".", "mean", "(", "part_ious", ")", ")", "\n", "", "return", "shape_ious", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.segment_data_preprocess.PartNormalDataset.__init__": [[17, 87], ["os.path.join", "dict", "segment_data_preprocess.PartNormalDataset.cat.keys", "open", "zip", "open", "set", "open", "set", "open", "set", "os.path.join", "sorted", "line.strip().split", "segment_data_preprocess.PartNormalDataset.cat.items", "range", "os.path.join", "os.path.join", "os.path.join", "os.listdir", "segment_data_preprocess.PartNormalDataset.meta[].append", "segment_data_preprocess.PartNormalDataset.datapath.append", "len", "segment_data_preprocess.PartNormalDataset.cat.items", "str", "str", "str", "os.path.splitext", "os.path.join", "line.strip", "json.load", "json.load", "json.load", "os.path.basename", "d.split", "d.split", "d.split", "print", "exit"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "root", "=", "'./data/shapenetcore_partanno_segmentation_benchmark_v0_normal'", ",", "npoints", "=", "2500", ",", "split", "=", "'train'", ",", "class_choice", "=", "None", ",", "normal_channel", "=", "True", ")", ":", "\n", "        ", "self", ".", "npoints", "=", "npoints", "\n", "self", ".", "root", "=", "root", "\n", "self", ".", "catfile", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'synsetoffset2category.txt'", ")", "\n", "self", ".", "cat", "=", "{", "}", "\n", "self", ".", "normal_channel", "=", "normal_channel", "\n", "\n", "\n", "with", "open", "(", "self", ".", "catfile", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "ls", "=", "line", ".", "strip", "(", ")", ".", "split", "(", ")", "\n", "self", ".", "cat", "[", "ls", "[", "0", "]", "]", "=", "ls", "[", "1", "]", "\n", "", "", "self", ".", "cat", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "self", ".", "cat", ".", "items", "(", ")", "}", "\n", "self", ".", "classes_original", "=", "dict", "(", "zip", "(", "self", ".", "cat", ",", "range", "(", "len", "(", "self", ".", "cat", ")", ")", ")", ")", "\n", "\n", "if", "not", "class_choice", "is", "None", ":", "\n", "            ", "self", ".", "cat", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "self", ".", "cat", ".", "items", "(", ")", "if", "k", "in", "class_choice", "}", "\n", "# print(self.cat)", "\n", "\n", "", "self", ".", "meta", "=", "{", "}", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'train_test_split'", ",", "'shuffled_train_file_list.json'", ")", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "train_ids", "=", "set", "(", "[", "str", "(", "d", ".", "split", "(", "'/'", ")", "[", "2", "]", ")", "for", "d", "in", "json", ".", "load", "(", "f", ")", "]", ")", "\n", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'train_test_split'", ",", "'shuffled_val_file_list.json'", ")", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "val_ids", "=", "set", "(", "[", "str", "(", "d", ".", "split", "(", "'/'", ")", "[", "2", "]", ")", "for", "d", "in", "json", ".", "load", "(", "f", ")", "]", ")", "\n", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'train_test_split'", ",", "'shuffled_test_file_list.json'", ")", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "test_ids", "=", "set", "(", "[", "str", "(", "d", ".", "split", "(", "'/'", ")", "[", "2", "]", ")", "for", "d", "in", "json", ".", "load", "(", "f", ")", "]", ")", "\n", "", "for", "item", "in", "self", ".", "cat", ":", "\n", "# print('category', item)", "\n", "            ", "self", ".", "meta", "[", "item", "]", "=", "[", "]", "\n", "dir_point", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "cat", "[", "item", "]", ")", "\n", "fns", "=", "sorted", "(", "os", ".", "listdir", "(", "dir_point", ")", ")", "\n", "# print(fns[0][0:-4])", "\n", "if", "split", "==", "'trainval'", ":", "\n", "                ", "fns", "=", "[", "fn", "for", "fn", "in", "fns", "if", "(", "(", "fn", "[", "0", ":", "-", "4", "]", "in", "train_ids", ")", "or", "(", "fn", "[", "0", ":", "-", "4", "]", "in", "val_ids", ")", ")", "]", "\n", "", "elif", "split", "==", "'train'", ":", "\n", "                ", "fns", "=", "[", "fn", "for", "fn", "in", "fns", "if", "fn", "[", "0", ":", "-", "4", "]", "in", "train_ids", "]", "\n", "", "elif", "split", "==", "'val'", ":", "\n", "                ", "fns", "=", "[", "fn", "for", "fn", "in", "fns", "if", "fn", "[", "0", ":", "-", "4", "]", "in", "val_ids", "]", "\n", "", "elif", "split", "==", "'test'", ":", "\n", "                ", "fns", "=", "[", "fn", "for", "fn", "in", "fns", "if", "fn", "[", "0", ":", "-", "4", "]", "in", "test_ids", "]", "\n", "", "else", ":", "\n", "                ", "print", "(", "'Unknown split: %s. Exiting..'", "%", "(", "split", ")", ")", "\n", "exit", "(", "-", "1", ")", "\n", "\n", "# print(os.path.basename(fns))", "\n", "", "for", "fn", "in", "fns", ":", "\n", "                ", "token", "=", "(", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "fn", ")", ")", "[", "0", "]", ")", "\n", "self", ".", "meta", "[", "item", "]", ".", "append", "(", "os", ".", "path", ".", "join", "(", "dir_point", ",", "token", "+", "'.txt'", ")", ")", "\n", "\n", "", "", "self", ".", "datapath", "=", "[", "]", "\n", "for", "item", "in", "self", ".", "cat", ":", "\n", "            ", "for", "fn", "in", "self", ".", "meta", "[", "item", "]", ":", "\n", "                ", "self", ".", "datapath", ".", "append", "(", "(", "item", ",", "fn", ")", ")", "\n", "\n", "", "", "self", ".", "classes", "=", "{", "}", "\n", "for", "i", "in", "self", ".", "cat", ".", "keys", "(", ")", ":", "\n", "            ", "self", ".", "classes", "[", "i", "]", "=", "self", ".", "classes_original", "[", "i", "]", "\n", "\n", "# Mapping from category ('Chair') to a list of int [10,11,12,13] as segmentation labels", "\n", "", "self", ".", "seg_classes", "=", "{", "'Earphone'", ":", "[", "16", ",", "17", ",", "18", "]", ",", "'Motorbike'", ":", "[", "30", ",", "31", ",", "32", ",", "33", ",", "34", ",", "35", "]", ",", "'Rocket'", ":", "[", "41", ",", "42", ",", "43", "]", ",", "\n", "'Car'", ":", "[", "8", ",", "9", ",", "10", ",", "11", "]", ",", "'Laptop'", ":", "[", "28", ",", "29", "]", ",", "'Cap'", ":", "[", "6", ",", "7", "]", ",", "'Skateboard'", ":", "[", "44", ",", "45", ",", "46", "]", ",", "\n", "'Mug'", ":", "[", "36", ",", "37", "]", ",", "'Guitar'", ":", "[", "19", ",", "20", ",", "21", "]", ",", "'Bag'", ":", "[", "4", ",", "5", "]", ",", "'Lamp'", ":", "[", "24", ",", "25", ",", "26", ",", "27", "]", ",", "\n", "'Table'", ":", "[", "47", ",", "48", ",", "49", "]", ",", "'Airplane'", ":", "[", "0", ",", "1", ",", "2", ",", "3", "]", ",", "'Pistol'", ":", "[", "38", ",", "39", ",", "40", "]", ",", "\n", "'Chair'", ":", "[", "12", ",", "13", ",", "14", ",", "15", "]", ",", "'Knife'", ":", "[", "22", ",", "23", "]", "}", "\n", "\n", "# for cat in sorted(self.seg_classes.keys()):", "\n", "#     print(cat, self.seg_classes[cat])", "\n", "\n", "self", ".", "cache", "=", "{", "}", "# from index to (point_set, cls, seg) tuple", "\n", "self", ".", "cache_size", "=", "20000", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.segment_data_preprocess.PartNormalDataset.__getitem__": [[89, 113], ["numpy.random.choice", "numpy.array().astype", "numpy.loadtxt().astype", "data[].astype", "len", "len", "numpy.array", "numpy.loadtxt"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "if", "index", "in", "self", ".", "cache", ":", "\n", "            ", "ppoint_set", ",", "cls", ",", "seg", "=", "self", ".", "cache", "[", "index", "]", "\n", "", "else", ":", "\n", "            ", "fn", "=", "self", ".", "datapath", "[", "index", "]", "\n", "cat", "=", "self", ".", "datapath", "[", "index", "]", "[", "0", "]", "\n", "cls", "=", "self", ".", "classes", "[", "cat", "]", "\n", "cls", "=", "np", ".", "array", "(", "[", "cls", "]", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "data", "=", "np", ".", "loadtxt", "(", "fn", "[", "1", "]", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "if", "not", "self", ".", "normal_channel", ":", "\n", "                ", "point_set", "=", "data", "[", ":", ",", "0", ":", "3", "]", "\n", "", "else", ":", "\n", "                ", "point_set", "=", "data", "[", ":", ",", "0", ":", "6", "]", "\n", "", "seg", "=", "data", "[", ":", ",", "-", "1", "]", ".", "astype", "(", "np", ".", "int32", ")", "\n", "if", "len", "(", "self", ".", "cache", ")", "<", "self", ".", "cache_size", ":", "\n", "                ", "self", ".", "cache", "[", "index", "]", "=", "(", "point_set", ",", "cls", ",", "seg", ")", "\n", "# point_set[:, 0:3] = pc_normalize(point_set[:, 0:3])", "\n", "\n", "", "", "choice", "=", "np", ".", "random", ".", "choice", "(", "len", "(", "seg", ")", ",", "self", ".", "npoints", ",", "replace", "=", "True", ")", "\n", "# resample", "\n", "point_set", "=", "point_set", "[", "choice", ",", ":", "]", "\n", "seg", "=", "seg", "[", "choice", "]", "\n", "\n", "return", "point_set", ",", "cls", ",", "seg", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.segment_data_preprocess.PartNormalDataset.__len__": [[114, 116], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "datapath", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.segment_data_preprocess.pc_normalize": [[9, 15], ["numpy.mean", "numpy.max", "numpy.sqrt", "numpy.sum"], "function", ["None"], ["def", "pc_normalize", "(", "pc", ")", ":", "\n", "    ", "centroid", "=", "np", ".", "mean", "(", "pc", ",", "axis", "=", "0", ")", "\n", "pc", "=", "pc", "-", "centroid", "\n", "m", "=", "np", ".", "max", "(", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "pc", "**", "2", ",", "axis", "=", "1", ")", ")", ")", "\n", "pc", "=", "pc", "/", "m", "\n", "return", "pc", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.model.Reconstruction.__init__": [[45, 91], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "model.Reconstruction.main.apply", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.ScanObjectNNDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "z_dim", "=", "1024", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "\n", "\n", "nn", ".", "ConvTranspose3d", "(", "\n", "in_channels", "=", "z_dim", ",", "\n", "out_channels", "=", "64", "*", "4", ",", "\n", "kernel_size", "=", "4", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", "\n", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "64", "*", "4", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "\n", "nn", ".", "ConvTranspose3d", "(", "\n", "in_channels", "=", "64", "*", "4", ",", "\n", "out_channels", "=", "64", "*", "2", ",", "\n", "kernel_size", "=", "4", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", "\n", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "64", "*", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "\n", "nn", ".", "ConvTranspose3d", "(", "\n", "in_channels", "=", "64", "*", "2", ",", "\n", "out_channels", "=", "64", "*", "1", ",", "\n", "kernel_size", "=", "4", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", "\n", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "64", "*", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "\n", "nn", ".", "ConvTranspose3d", "(", "\n", "in_channels", "=", "64", "*", "1", ",", "\n", "out_channels", "=", "1", ",", "\n", "kernel_size", "=", "4", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", "\n", ")", ",", "\n", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "self", ".", "main", ".", "apply", "(", "init_weights", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.model.Reconstruction.forward": [[92, 97], ["x.view.view.view", "model.Reconstruction.main", "x.view.view.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "x", ".", "view", "(", "x", ".", "shape", "[", "0", "]", ",", "x", ".", "shape", "[", "1", "]", ",", "1", ",", "1", ",", "1", ")", "\n", "x", "=", "self", ".", "main", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "shape", "[", "0", "]", ",", "x", ".", "shape", "[", "2", "]", ",", "x", ".", "shape", "[", "3", "]", ",", "x", ".", "shape", "[", "4", "]", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.model.Encoder_slim.__init__": [[99, 107], ["torch.Module.__init__", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d"], "methods", ["home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.ScanObjectNNDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inp", "=", "4", ")", ":", "\n", "        ", "super", "(", "Encoder_slim", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "torch", ".", "nn", ".", "Conv1d", "(", "inp", ",", "64", ",", "1", ")", "\n", "self", ".", "conv2", "=", "torch", ".", "nn", ".", "Conv1d", "(", "64", ",", "128", ",", "1", ")", "\n", "self", ".", "conv3", "=", "torch", ".", "nn", ".", "Conv1d", "(", "128", ",", "1024", ",", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm1d", "(", "64", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm1d", "(", "128", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm1d", "(", "1024", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.model.Encoder_slim.forward": [[109, 116], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "model.Encoder_slim.bn3", "model.Encoder_slim.bn1", "model.Encoder_slim.bn2", "model.Encoder_slim.conv3", "model.Encoder_slim.conv1", "model.Encoder_slim.conv2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "x", ")", ")", ")", "\n", "x", "=", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "x", ")", ")", "\n", "# x = torch.max(x, 2, keepdim=True)[0]", "\n", "# x = x.view(-1, 1024)", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.model.Encoder_middle.__init__": [[118, 127], ["torch.Module.__init__", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d"], "methods", ["home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.ScanObjectNNDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inp", "=", "4", ")", ":", "\n", "        ", "super", "(", "Encoder_middle", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "torch", ".", "nn", ".", "Conv1d", "(", "inp", ",", "64", ",", "1", ")", "\n", "self", ".", "conv2", "=", "torch", ".", "nn", ".", "Conv1d", "(", "64", "+", "inp", ",", "128", ",", "1", ")", "\n", "self", ".", "conv3", "=", "torch", ".", "nn", ".", "Conv1d", "(", "128", "+", "inp", ",", "512", ",", "1", ")", "\n", "self", ".", "conv4", "=", "torch", ".", "nn", ".", "Conv1d", "(", "512", "+", "inp", ",", "1024", ",", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm1d", "(", "64", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm1d", "(", "128", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm1d", "(", "512", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.model.Encoder_middle.forward": [[129, 141], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.Encoder_middle.conv4", "model.Encoder_middle.bn1", "model.Encoder_middle.bn2", "model.Encoder_middle.bn3", "model.Encoder_middle.conv1", "model.Encoder_middle.conv2", "model.Encoder_middle.conv3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "in_x", "=", "x", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "in_x", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "x", ")", ")", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "in_x", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "x", ")", ")", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "in_x", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "self", ".", "conv4", "(", "x", ")", "\n", "# x = torch.max(x, 2, keepdim=True)[0]", "\n", "# x = x.view(-1, 1024)", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.model.Encoder.__init__": [[143, 155], ["torch.Module.__init__", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d"], "methods", ["home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.ScanObjectNNDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inp", "=", "4", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "torch", ".", "nn", ".", "Conv1d", "(", "inp", ",", "64", ",", "1", ")", "\n", "self", ".", "conv2", "=", "torch", ".", "nn", ".", "Conv1d", "(", "64", "+", "inp", ",", "128", ",", "1", ")", "\n", "self", ".", "conv3", "=", "torch", ".", "nn", ".", "Conv1d", "(", "128", "+", "inp", ",", "512", ",", "1", ")", "\n", "self", ".", "conv4", "=", "torch", ".", "nn", ".", "Conv1d", "(", "512", "+", "inp", ",", "1024", ",", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm1d", "(", "64", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm1d", "(", "128", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm1d", "(", "512", ")", "\n", "self", ".", "f", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv1d", "(", "64", "+", "128", "+", "512", "+", "inp", ",", "1024", ",", "1", ")", ",", "\n", "# nn.ReLU()", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.model.Encoder.forward": [[160, 172], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.Encoder.bn1", "model.Encoder.bn2", "model.Encoder.bn3", "model.Encoder.conv4", "model.Encoder.f", "model.Encoder.conv1", "model.Encoder.conv2", "model.Encoder.conv3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "in_x", "=", "x", "\n", "x1", "=", "x", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x1", ",", "in_x", "]", ",", "dim", "=", "1", ")", "\n", "x2", "=", "x", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "x", ")", ")", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x2", ",", "in_x", "]", ",", "dim", "=", "1", ")", "\n", "x3", "=", "x", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "x", ")", ")", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x3", ",", "in_x", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "self", ".", "conv4", "(", "x", ")", "+", "self", ".", "f", "(", "torch", ".", "cat", "(", "[", "x3", ",", "x2", ",", "x1", ",", "in_x", "]", ",", "dim", "=", "1", ")", ")", "\n", "# x = torch.max(x, 2, keepdim=True)[0]", "\n", "# x = x.view(-1, 1024)", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.model.TriangleNet.__init__": [[175, 201], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "model.Encoder", "model.Encoder_middle", "model.Encoder_slim"], "methods", ["home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.ScanObjectNNDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "k", "=", "2", ",", "inp", "=", "4", ",", "feature_num", "=", "4096", ",", "descriptor_type", "=", "'A'", ",", "scale_invariant", "=", "False", ",", "point_feature", "=", "False", ",", "encoder_type", "=", "\"slim\"", ")", ":", "\n", "        ", "super", "(", "TriangleNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "feature_num", "=", "feature_num", "\n", "self", ".", "scale_invariant", "=", "scale_invariant", "\n", "if", "encoder_type", "==", "\"full\"", ":", "\n", "            ", "self", ".", "feat", "=", "Encoder", "(", "inp", "=", "inp", ")", "\n", "", "elif", "encoder_type", "==", "\"middle\"", ":", "\n", "            ", "self", ".", "feat", "=", "Encoder_middle", "(", "inp", "=", "inp", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "feat", "=", "Encoder_slim", "(", "inp", "=", "inp", ")", "\n", "", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "1024", ",", "512", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "512", ",", "256", ")", "\n", "self", ".", "fc3", "=", "nn", ".", "Linear", "(", "256", ",", "k", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "0.3", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm1d", "(", "512", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm1d", "(", "256", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "point_feature", "=", "point_feature", "\n", "if", "descriptor_type", "==", "'A'", ":", "\n", "            ", "self", ".", "extractor", "=", "self", ".", "extract_feature_A", "\n", "", "elif", "descriptor_type", "==", "'B'", ":", "\n", "            ", "self", ".", "extractor", "=", "self", ".", "extract_feature_B", "\n", "", "elif", "descriptor_type", "==", "'C'", ":", "\n", "            ", "self", ".", "extractor", "=", "self", ".", "extract_feature_C", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.model.TriangleNet.extract_feature_A": [[202, 219], ["torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "model.vlen", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "buf[].max", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "methods", ["home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.vlen", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch"], ["", "", "def", "extract_feature_A", "(", "self", ",", "points", ",", "norms", ",", "f_num", ")", ":", "\n", "        ", "p_num", "=", "points", ".", "shape", "[", "1", "]", "\n", "idx", "=", "torch", ".", "randint", "(", "p_num", ",", "size", "=", "(", "f_num", ",", "3", ")", ")", "\n", "idx0", "=", "torch", ".", "arange", "(", "p_num", ")", ".", "view", "(", "-", "1", ",", "1", ")", ".", "repeat", "(", "(", "1", ",", "f_num", "//", "p_num", ")", ")", ".", "flatten", "(", ")", "\n", "p1", ",", "p2", "=", "points", "[", ":", ",", "idx0", "]", ",", "points", "[", ":", ",", "idx", "[", ":", ",", "1", "]", "]", "\n", "n1", ",", "n2", "=", "norms", "[", ":", ",", "idx0", "]", ",", "norms", "[", ":", ",", "idx", "[", ":", ",", "1", "]", "]", "\n", "dis1", "=", "vlen", "(", "p1", "-", "p2", ")", "\n", "ang1a", "=", "angle_between_batch", "(", "p1", "-", "p2", ",", "n1", ")", "\n", "ang1b", "=", "angle_between_batch", "(", "p2", "-", "p1", ",", "n2", ")", "\n", "ang1c", "=", "angle_between_batch", "(", "n1", ",", "n2", ")", "\n", "buf", "=", "torch", ".", "cat", "(", "[", "dis1", ",", "ang1a", ",", "ang1b", ",", "ang1c", "]", ",", "dim", "=", "2", ")", "\n", "\n", "if", "self", ".", "scale_invariant", ":", "\n", "            ", "max_dis", "=", "buf", "[", ":", ",", "0", "]", ".", "max", "(", ")", "\n", "buf", "[", ":", ",", "0", "]", "=", "buf", "[", ":", ",", "0", "]", "/", "max_dis", "\n", "\n", "", "return", "buf", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.model.TriangleNet.extract_feature_B": [[220, 249], ["torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "model.vlen", "model.vlen", "model.vlen", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "buf[].max", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "methods", ["home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.vlen", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.vlen", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.vlen", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch"], ["", "def", "extract_feature_B", "(", "self", ",", "points", ",", "norms", ",", "f_num", ")", ":", "\n", "        ", "p_num", "=", "points", ".", "shape", "[", "1", "]", "\n", "idx", "=", "torch", ".", "randint", "(", "p_num", ",", "size", "=", "(", "f_num", ",", "2", ")", ")", "\n", "\n", "idx0", "=", "torch", ".", "arange", "(", "p_num", ")", ".", "view", "(", "-", "1", ",", "1", ")", ".", "repeat", "(", "(", "1", ",", "f_num", "//", "p_num", ")", ")", ".", "flatten", "(", ")", "\n", "p1", ",", "p2", ",", "p3", "=", "points", "[", ":", ",", "idx0", "]", ",", "points", "[", ":", ",", "idx", "[", ":", ",", "1", "]", "]", ",", "points", "[", ":", ",", "idx", "[", ":", ",", "2", "]", "]", "\n", "n1", ",", "n2", ",", "n3", "=", "norms", "[", ":", ",", "idx0", "]", ",", "norms", "[", ":", ",", "idx", "[", ":", ",", "1", "]", "]", ",", "norms", "[", ":", ",", "idx", "[", ":", ",", "2", "]", "]", "\n", "dis1", "=", "vlen", "(", "p1", "-", "p2", ")", "\n", "dis2", "=", "vlen", "(", "p2", "-", "p3", ")", "\n", "dis3", "=", "vlen", "(", "p3", "-", "p1", ")", "\n", "\n", "ang1a", "=", "angle_between_batch", "(", "p1", "-", "p2", ",", "n1", ")", "\n", "ang1b", "=", "angle_between_batch", "(", "p1", "-", "p3", ",", "n1", ")", "\n", "ang2a", "=", "angle_between_batch", "(", "p2", "-", "p1", ",", "n2", ")", "\n", "ang2b", "=", "angle_between_batch", "(", "p2", "-", "p3", ",", "n2", ")", "\n", "ang3a", "=", "angle_between_batch", "(", "p3", "-", "p1", ",", "n3", ")", "\n", "ang3b", "=", "angle_between_batch", "(", "p3", "-", "p2", ",", "n3", ")", "\n", "\n", "angt1", "=", "angle_between_batch", "(", "p1", "-", "p2", ",", "p1", "-", "p3", ")", "\n", "angt2", "=", "angle_between_batch", "(", "p2", "-", "p1", ",", "p2", "-", "p3", ")", "\n", "angt3", "=", "angle_between_batch", "(", "p3", "-", "p1", ",", "p3", "-", "p2", ")", "\n", "\n", "buf", "=", "torch", ".", "cat", "(", "[", "dis1", ",", "dis2", ",", "dis3", ",", "ang1a", ",", "ang1b", ",", "ang2a", ",", "ang2b", ",", "ang3a", ",", "ang3b", ",", "angt1", ",", "angt2", ",", "angt3", "]", ",", "dim", "=", "2", ")", "\n", "\n", "if", "self", ".", "scale_invariant", ":", "\n", "            ", "dis_index", "=", "[", "0", ",", "1", ",", "2", "]", "\n", "max_dis", "=", "buf", "[", ":", ",", "dis_index", "]", ".", "max", "(", ")", "\n", "buf", "[", ":", ",", "dis_index", "]", "=", "buf", "[", ":", ",", "dis_index", "]", "/", "max_dis", "\n", "", "return", "buf", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.model.TriangleNet.extract_feature_C": [[250, 297], ["torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "model.vlen", "model.vlen", "model.vlen", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "model.vlen", "model.vlen", "model.vlen", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "buf[].max", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "methods", ["home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.vlen", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.vlen", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.vlen", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.vlen", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.vlen", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.vlen", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch"], ["", "def", "extract_feature_C", "(", "self", ",", "points", ",", "norms", ",", "f_num", ")", ":", "\n", "        ", "p_num", "=", "points", ".", "shape", "[", "1", "]", "\n", "idx", "=", "torch", ".", "randint", "(", "p_num", ",", "size", "=", "(", "f_num", ",", "3", ")", ")", "\n", "idx0", "=", "torch", ".", "arange", "(", "p_num", ")", ".", "view", "(", "-", "1", ",", "1", ")", ".", "repeat", "(", "(", "1", ",", "f_num", "//", "p_num", ")", ")", ".", "flatten", "(", ")", "\n", "\n", "p1", ",", "p2", ",", "p3", "=", "points", "[", ":", ",", "idx0", "]", ",", "points", "[", ":", ",", "idx", "[", ":", ",", "1", "]", "]", ",", "points", "[", ":", ",", "idx", "[", ":", ",", "2", "]", "]", "\n", "n1", ",", "n2", ",", "n3", "=", "norms", "[", ":", ",", "idx0", "]", ",", "norms", "[", ":", ",", "idx", "[", ":", ",", "1", "]", "]", ",", "norms", "[", ":", ",", "idx", "[", ":", ",", "2", "]", "]", "\n", "dis1", "=", "vlen", "(", "p1", "-", "p2", ")", "\n", "dis2", "=", "vlen", "(", "p2", "-", "p3", ")", "\n", "dis3", "=", "vlen", "(", "p3", "-", "p1", ")", "\n", "\n", "ang1a", "=", "angle_between_batch", "(", "p1", "-", "p2", ",", "n1", ")", "\n", "ang1b", "=", "angle_between_batch", "(", "p1", "-", "p3", ",", "n1", ")", "\n", "ang2a", "=", "angle_between_batch", "(", "p2", "-", "p1", ",", "n2", ")", "\n", "ang2b", "=", "angle_between_batch", "(", "p2", "-", "p3", ",", "n2", ")", "\n", "ang3a", "=", "angle_between_batch", "(", "p3", "-", "p1", ",", "n3", ")", "\n", "ang3b", "=", "angle_between_batch", "(", "p3", "-", "p2", ",", "n3", ")", "\n", "\n", "angt1", "=", "angle_between_batch", "(", "p1", "-", "p2", ",", "p1", "-", "p3", ")", "\n", "angt2", "=", "angle_between_batch", "(", "p2", "-", "p1", ",", "p2", "-", "p3", ")", "\n", "angt3", "=", "angle_between_batch", "(", "p3", "-", "p1", ",", "p3", "-", "p2", ")", "\n", "\n", "buf", "=", "torch", ".", "cat", "(", "[", "dis1", ",", "dis2", ",", "dis3", ",", "ang1a", ",", "ang1b", ",", "ang2a", ",", "ang2b", ",", "ang3a", ",", "ang3b", ",", "angt1", ",", "angt2", ",", "angt3", "]", ",", "dim", "=", "2", ")", "\n", "\n", "mid", "=", "(", "p1", "+", "p2", "+", "p3", ")", "/", "3", "\n", "\n", "mn1", "=", "angle_between_batch", "(", "p1", "-", "mid", ",", "n1", ")", "\n", "mn2", "=", "angle_between_batch", "(", "p2", "-", "mid", ",", "n2", ")", "\n", "mn3", "=", "angle_between_batch", "(", "p3", "-", "mid", ",", "n3", ")", "\n", "\n", "dism1", "=", "vlen", "(", "p1", "-", "mid", ")", "\n", "dism2", "=", "vlen", "(", "p2", "-", "mid", ")", "\n", "dism3", "=", "vlen", "(", "p3", "-", "mid", ")", "\n", "\n", "angm1a", "=", "angle_between_batch", "(", "p1", "-", "p2", ",", "p1", "-", "mid", ")", "\n", "angm1b", "=", "angle_between_batch", "(", "p1", "-", "p3", ",", "p1", "-", "mid", ")", "\n", "angm2a", "=", "angle_between_batch", "(", "p2", "-", "p1", ",", "p2", "-", "mid", ")", "\n", "angm2b", "=", "angle_between_batch", "(", "p2", "-", "p3", ",", "p2", "-", "mid", ")", "\n", "angm3a", "=", "angle_between_batch", "(", "p3", "-", "p1", ",", "p3", "-", "mid", ")", "\n", "angm3b", "=", "angle_between_batch", "(", "p3", "-", "p2", ",", "p3", "-", "mid", ")", "\n", "\n", "if", "self", ".", "scale_invariant", ":", "\n", "            ", "dis_index", "=", "[", "0", ",", "1", ",", "2", ",", "15", ",", "16", ",", "17", "]", "\n", "max_dis", "=", "buf", "[", ":", ",", "dis_index", "]", ".", "max", "(", ")", "\n", "buf", "[", ":", ",", "dis_index", "]", "=", "buf", "[", ":", ",", "dis_index", "]", "/", "max_dis", "\n", "\n", "", "return", "torch", ".", "cat", "(", "[", "buf", ",", "mn1", ",", "mn2", ",", "mn3", ",", "dism1", ",", "dism2", ",", "dism3", ",", "angm1a", ",", "angm1b", ",", "angm2a", ",", "angm2b", ",", "angm3a", ",", "angm3b", "]", ",", "dim", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.model.TriangleNet.forward": [[299, 317], ["model.TriangleNet.extractor", "model.TriangleNet.transpose", "model.TriangleNet.feat", "model.TriangleNet.view", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "model.TriangleNet.fc3", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "model.TriangleNet.bn1", "model.TriangleNet.bn2", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "model.TriangleNet.fc1", "model.TriangleNet.dropout", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "model.TriangleNet.fc2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "points", ",", "norms", ")", ":", "\n", "        ", "batch", ",", "n_points", "=", "points", ".", "shape", "[", "0", "]", ",", "points", ".", "shape", "[", "1", "]", "\n", "\n", "x", "=", "self", ".", "extractor", "(", "points", ",", "norms", ",", "self", ".", "feature_num", ")", "\n", "# t = time.time()", "\n", "\n", "x", "=", "x", ".", "transpose", "(", "2", ",", "1", ")", "#batch, 24, f_num", "\n", "feature", "=", "self", ".", "feat", "(", "x", ")", "#batch, 1024,f_num", "\n", "x_point", "=", "feature", ".", "view", "(", "batch", ",", "1024", ",", "n_points", ",", "self", ".", "feature_num", "//", "n_points", ")", "#32,1024,16,256", "\n", "x_point", "=", "torch", ".", "max", "(", "x_point", ",", "3", ")", "[", "0", "]", "#32,1024,16", "\n", "x_global", "=", "torch", ".", "max", "(", "x_point", ",", "2", ")", "[", "0", "]", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "fc1", "(", "x_global", ")", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "dropout", "(", "self", ".", "fc2", "(", "x", ")", ")", ")", ")", "\n", "x", "=", "self", ".", "fc3", "(", "x", ")", "\n", "# print(time.time()-t)", "\n", "if", "self", ".", "point_feature", ":", "\n", "            ", "return", "F", ".", "log_softmax", "(", "x", ",", "dim", "=", "1", ")", ",", "x_global", ",", "x_point", "\n", "", "return", "F", ".", "log_softmax", "(", "x", ",", "dim", "=", "1", ")", ",", "x_global", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.model.TriangleNet_Seg.__init__": [[322, 354], ["torch.Module.__init__", "model.Encoder", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d"], "methods", ["home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.ScanObjectNNDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "part_num", "=", "50", ",", "inp", "=", "24", ",", "feature_num", "=", "4096", ",", "descriptor_type", "=", "'C'", ",", "scale_invariant", "=", "False", ")", ":", "\n", "        ", "super", "(", "TriangleNet_Seg", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "feature_num", "=", "feature_num", "\n", "self", ".", "part_num", "=", "part_num", "\n", "self", ".", "scale_invariant", "=", "scale_invariant", "\n", "self", ".", "feat", "=", "Encoder", "(", "inp", "=", "inp", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "0.3", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm1d", "(", "512", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm1d", "(", "256", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "if", "descriptor_type", "==", "'A'", ":", "\n", "            ", "self", ".", "extractor", "=", "self", ".", "extract_feature_A", "\n", "", "elif", "descriptor_type", "==", "'B'", ":", "\n", "            ", "self", ".", "extractor", "=", "self", ".", "extract_feature_B", "\n", "", "elif", "descriptor_type", "==", "'C'", ":", "\n", "            ", "self", ".", "extractor", "=", "self", ".", "extract_feature_C", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "\n", "\n", "\n", "", "self", ".", "seg_net", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv1d", "(", "2048", "+", "16", ",", "256", ",", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "256", ")", ",", "\n", "nn", ".", "Conv1d", "(", "256", ",", "256", ",", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv1d", "(", "256", ",", "128", ",", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv1d", "(", "128", ",", "part_num", ",", "1", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.model.TriangleNet_Seg.extract_feature_A": [[356, 373], ["torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "model.vlen", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "buf[].max", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "methods", ["home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.vlen", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch"], ["", "def", "extract_feature_A", "(", "self", ",", "points", ",", "norms", ",", "f_num", ")", ":", "\n", "        ", "p_num", "=", "points", ".", "shape", "[", "1", "]", "\n", "idx", "=", "torch", ".", "randint", "(", "p_num", ",", "size", "=", "(", "f_num", ",", "3", ")", ")", "\n", "idx0", "=", "torch", ".", "arange", "(", "p_num", ")", ".", "view", "(", "-", "1", ",", "1", ")", ".", "repeat", "(", "(", "1", ",", "f_num", "//", "p_num", ")", ")", ".", "flatten", "(", ")", "\n", "p1", ",", "p2", "=", "points", "[", ":", ",", "idx0", "]", ",", "points", "[", ":", ",", "idx", "[", ":", ",", "1", "]", "]", "\n", "n1", ",", "n2", "=", "norms", "[", ":", ",", "idx0", "]", ",", "norms", "[", ":", ",", "idx", "[", ":", ",", "1", "]", "]", "\n", "dis1", "=", "vlen", "(", "p1", "-", "p2", ")", "\n", "ang1a", "=", "angle_between_batch", "(", "p1", "-", "p2", ",", "n1", ")", "\n", "ang1b", "=", "angle_between_batch", "(", "p2", "-", "p1", ",", "n2", ")", "\n", "ang1c", "=", "angle_between_batch", "(", "n1", ",", "n2", ")", "\n", "buf", "=", "torch", ".", "cat", "(", "[", "dis1", ",", "ang1a", ",", "ang1b", ",", "ang1c", "]", ",", "dim", "=", "2", ")", "\n", "\n", "if", "self", ".", "scale_invariant", ":", "\n", "            ", "max_dis", "=", "buf", "[", ":", ",", "0", "]", ".", "max", "(", ")", "\n", "buf", "[", ":", ",", "0", "]", "=", "buf", "[", ":", ",", "0", "]", "/", "max_dis", "\n", "\n", "", "return", "buf", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.model.TriangleNet_Seg.extract_feature_B": [[374, 403], ["torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "model.vlen", "model.vlen", "model.vlen", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "buf[].max", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "methods", ["home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.vlen", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.vlen", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.vlen", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch"], ["", "def", "extract_feature_B", "(", "self", ",", "points", ",", "norms", ",", "f_num", ")", ":", "\n", "        ", "p_num", "=", "points", ".", "shape", "[", "1", "]", "\n", "idx", "=", "torch", ".", "randint", "(", "p_num", ",", "size", "=", "(", "f_num", ",", "2", ")", ")", "\n", "\n", "idx0", "=", "torch", ".", "arange", "(", "p_num", ")", ".", "view", "(", "-", "1", ",", "1", ")", ".", "repeat", "(", "(", "1", ",", "f_num", "//", "p_num", ")", ")", ".", "flatten", "(", ")", "\n", "p1", ",", "p2", ",", "p3", "=", "points", "[", ":", ",", "idx0", "]", ",", "points", "[", ":", ",", "idx", "[", ":", ",", "1", "]", "]", ",", "points", "[", ":", ",", "idx", "[", ":", ",", "2", "]", "]", "\n", "n1", ",", "n2", ",", "n3", "=", "norms", "[", ":", ",", "idx0", "]", ",", "norms", "[", ":", ",", "idx", "[", ":", ",", "1", "]", "]", ",", "norms", "[", ":", ",", "idx", "[", ":", ",", "2", "]", "]", "\n", "dis1", "=", "vlen", "(", "p1", "-", "p2", ")", "\n", "dis2", "=", "vlen", "(", "p2", "-", "p3", ")", "\n", "dis3", "=", "vlen", "(", "p3", "-", "p1", ")", "\n", "\n", "ang1a", "=", "angle_between_batch", "(", "p1", "-", "p2", ",", "n1", ")", "\n", "ang1b", "=", "angle_between_batch", "(", "p1", "-", "p3", ",", "n1", ")", "\n", "ang2a", "=", "angle_between_batch", "(", "p2", "-", "p1", ",", "n2", ")", "\n", "ang2b", "=", "angle_between_batch", "(", "p2", "-", "p3", ",", "n2", ")", "\n", "ang3a", "=", "angle_between_batch", "(", "p3", "-", "p1", ",", "n3", ")", "\n", "ang3b", "=", "angle_between_batch", "(", "p3", "-", "p2", ",", "n3", ")", "\n", "\n", "angt1", "=", "angle_between_batch", "(", "p1", "-", "p2", ",", "p1", "-", "p3", ")", "\n", "angt2", "=", "angle_between_batch", "(", "p2", "-", "p1", ",", "p2", "-", "p3", ")", "\n", "angt3", "=", "angle_between_batch", "(", "p3", "-", "p1", ",", "p3", "-", "p2", ")", "\n", "\n", "buf", "=", "torch", ".", "cat", "(", "[", "dis1", ",", "dis2", ",", "dis3", ",", "ang1a", ",", "ang1b", ",", "ang2a", ",", "ang2b", ",", "ang3a", ",", "ang3b", ",", "angt1", ",", "angt2", ",", "angt3", "]", ",", "dim", "=", "2", ")", "\n", "\n", "if", "self", ".", "scale_invariant", ":", "\n", "            ", "dis_index", "=", "[", "0", ",", "1", ",", "2", "]", "\n", "max_dis", "=", "buf", "[", ":", ",", "dis_index", "]", ".", "max", "(", ")", "\n", "buf", "[", ":", ",", "dis_index", "]", "=", "buf", "[", ":", ",", "dis_index", "]", "/", "max_dis", "\n", "", "return", "buf", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.model.TriangleNet_Seg.extract_feature_C": [[404, 451], ["torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "torch.arange().view().repeat().flatten", "model.vlen", "model.vlen", "model.vlen", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "model.vlen", "model.vlen", "model.vlen", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "model.angle_between_batch", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "buf[].max", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "methods", ["home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.vlen", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.vlen", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.vlen", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.vlen", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.vlen", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.vlen", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch"], ["", "def", "extract_feature_C", "(", "self", ",", "points", ",", "norms", ",", "f_num", ")", ":", "\n", "        ", "p_num", "=", "points", ".", "shape", "[", "1", "]", "\n", "idx", "=", "torch", ".", "randint", "(", "p_num", ",", "size", "=", "(", "f_num", ",", "3", ")", ")", "\n", "idx0", "=", "torch", ".", "arange", "(", "p_num", ")", ".", "view", "(", "-", "1", ",", "1", ")", ".", "repeat", "(", "(", "1", ",", "f_num", "//", "p_num", ")", ")", ".", "flatten", "(", ")", "\n", "\n", "p1", ",", "p2", ",", "p3", "=", "points", "[", ":", ",", "idx0", "]", ",", "points", "[", ":", ",", "idx", "[", ":", ",", "1", "]", "]", ",", "points", "[", ":", ",", "idx", "[", ":", ",", "2", "]", "]", "\n", "n1", ",", "n2", ",", "n3", "=", "norms", "[", ":", ",", "idx0", "]", ",", "norms", "[", ":", ",", "idx", "[", ":", ",", "1", "]", "]", ",", "norms", "[", ":", ",", "idx", "[", ":", ",", "2", "]", "]", "\n", "dis1", "=", "vlen", "(", "p1", "-", "p2", ")", "\n", "dis2", "=", "vlen", "(", "p2", "-", "p3", ")", "\n", "dis3", "=", "vlen", "(", "p3", "-", "p1", ")", "\n", "\n", "ang1a", "=", "angle_between_batch", "(", "p1", "-", "p2", ",", "n1", ")", "\n", "ang1b", "=", "angle_between_batch", "(", "p1", "-", "p3", ",", "n1", ")", "\n", "ang2a", "=", "angle_between_batch", "(", "p2", "-", "p1", ",", "n2", ")", "\n", "ang2b", "=", "angle_between_batch", "(", "p2", "-", "p3", ",", "n2", ")", "\n", "ang3a", "=", "angle_between_batch", "(", "p3", "-", "p1", ",", "n3", ")", "\n", "ang3b", "=", "angle_between_batch", "(", "p3", "-", "p2", ",", "n3", ")", "\n", "\n", "angt1", "=", "angle_between_batch", "(", "p1", "-", "p2", ",", "p1", "-", "p3", ")", "\n", "angt2", "=", "angle_between_batch", "(", "p2", "-", "p1", ",", "p2", "-", "p3", ")", "\n", "angt3", "=", "angle_between_batch", "(", "p3", "-", "p1", ",", "p3", "-", "p2", ")", "\n", "\n", "buf", "=", "torch", ".", "cat", "(", "[", "dis1", ",", "dis2", ",", "dis3", ",", "ang1a", ",", "ang1b", ",", "ang2a", ",", "ang2b", ",", "ang3a", ",", "ang3b", ",", "angt1", ",", "angt2", ",", "angt3", "]", ",", "dim", "=", "2", ")", "\n", "\n", "mid", "=", "(", "p1", "+", "p2", "+", "p3", ")", "/", "3", "\n", "\n", "mn1", "=", "angle_between_batch", "(", "p1", "-", "mid", ",", "n1", ")", "\n", "mn2", "=", "angle_between_batch", "(", "p2", "-", "mid", ",", "n2", ")", "\n", "mn3", "=", "angle_between_batch", "(", "p3", "-", "mid", ",", "n3", ")", "\n", "\n", "dism1", "=", "vlen", "(", "p1", "-", "mid", ")", "\n", "dism2", "=", "vlen", "(", "p2", "-", "mid", ")", "\n", "dism3", "=", "vlen", "(", "p3", "-", "mid", ")", "\n", "\n", "angm1a", "=", "angle_between_batch", "(", "p1", "-", "p2", ",", "p1", "-", "mid", ")", "\n", "angm1b", "=", "angle_between_batch", "(", "p1", "-", "p3", ",", "p1", "-", "mid", ")", "\n", "angm2a", "=", "angle_between_batch", "(", "p2", "-", "p1", ",", "p2", "-", "mid", ")", "\n", "angm2b", "=", "angle_between_batch", "(", "p2", "-", "p3", ",", "p2", "-", "mid", ")", "\n", "angm3a", "=", "angle_between_batch", "(", "p3", "-", "p1", ",", "p3", "-", "mid", ")", "\n", "angm3b", "=", "angle_between_batch", "(", "p3", "-", "p2", ",", "p3", "-", "mid", ")", "\n", "\n", "if", "self", ".", "scale_invariant", ":", "\n", "            ", "dis_index", "=", "[", "0", ",", "1", ",", "2", ",", "15", ",", "16", ",", "17", "]", "\n", "max_dis", "=", "buf", "[", ":", ",", "dis_index", "]", ".", "max", "(", ")", "\n", "buf", "[", ":", ",", "dis_index", "]", "=", "buf", "[", ":", ",", "dis_index", "]", "/", "max_dis", "\n", "\n", "", "return", "torch", ".", "cat", "(", "[", "buf", ",", "mn1", ",", "mn2", ",", "mn3", ",", "dism1", ",", "dism2", ",", "dism3", ",", "angm1a", ",", "angm1b", ",", "angm2a", ",", "angm2b", ",", "angm3a", ",", "angm3b", "]", ",", "dim", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.model.TriangleNet_Seg.forward": [[453, 474], ["model.TriangleNet_Seg.extractor", "x.transpose.transpose.transpose", "model.TriangleNet_Seg.feat", "model.TriangleNet_Seg.view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.view().repeat", "torch.cat.view().repeat", "torch.cat.view().repeat", "torch.cat.view().repeat", "torch.cat.view().repeat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.TriangleNet_Seg.seg_net", "seg_result.view.view.transpose().contiguous", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "seg_result.view.view.view", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "seg_result.view.view.view", "torch.cat.view", "torch.cat.view", "torch.cat.view", "torch.cat.view", "torch.cat.view", "seg_result.view.view.transpose"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "points", ",", "norms", ",", "label", ")", ":", "\n", "        ", "batch", ",", "n_points", "=", "points", ".", "shape", "[", "0", "]", ",", "points", ".", "shape", "[", "1", "]", "\n", "\n", "x", "=", "self", ".", "extractor", "(", "points", ",", "norms", ",", "self", ".", "feature_num", ")", "\n", "\n", "x", "=", "x", ".", "transpose", "(", "2", ",", "1", ")", "#batch, 24, f_num", "\n", "feature", "=", "self", ".", "feat", "(", "x", ")", "#batch, 1024,f_num", "\n", "x_point", "=", "feature", ".", "view", "(", "batch", ",", "1024", ",", "n_points", ",", "self", ".", "feature_num", "//", "n_points", ")", "#32,1024,16,256", "\n", "x_point", "=", "torch", ".", "max", "(", "x_point", ",", "3", ")", "[", "0", "]", "#32,1024,16", "\n", "x_global", "=", "torch", ".", "max", "(", "x_point", ",", "2", ")", "[", "0", "]", "#32,1024", "\n", "\n", "x_global_label", "=", "torch", ".", "cat", "(", "[", "x_global", ",", "label", "]", ",", "1", ")", "#1024+16", "\n", "expand", "=", "x_global_label", ".", "view", "(", "-", "1", ",", "1024", "+", "16", ",", "1", ")", ".", "repeat", "(", "1", ",", "1", ",", "n_points", ")", "\n", "concat", "=", "torch", ".", "cat", "(", "[", "expand", ",", "x_point", "]", ",", "1", ")", "#32,2064,1024", "\n", "seg_result", "=", "self", ".", "seg_net", "(", "concat", ")", "#32, 50, 1024", "\n", "\n", "seg_result", "=", "seg_result", ".", "transpose", "(", "2", ",", "1", ")", ".", "contiguous", "(", ")", "#32,1024,50", "\n", "seg_result", "=", "F", ".", "log_softmax", "(", "seg_result", ".", "view", "(", "-", "1", ",", "self", ".", "part_num", ")", ",", "dim", "=", "-", "1", ")", "\n", "seg_result", "=", "seg_result", ".", "view", "(", "batch", ",", "n_points", ",", "self", ".", "part_num", ")", "# [B, N, 50]", "\n", "\n", "return", "seg_result", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.model.count_parameters": [[10, 22], ["PrettyTable", "model.named_parameters", "print", "print", "parameter.numel", "PrettyTable.add_row"], "function", ["None"], ["def", "count_parameters", "(", "model", ")", ":", "\n", "    ", "from", "prettytable", "import", "PrettyTable", "\n", "table", "=", "PrettyTable", "(", "[", "\"Modules\"", ",", "\"Parameters\"", "]", ")", "\n", "total_params", "=", "0", "\n", "for", "name", ",", "parameter", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "        ", "if", "not", "parameter", ".", "requires_grad", ":", "continue", "\n", "param", "=", "parameter", ".", "numel", "(", ")", "\n", "table", ".", "add_row", "(", "[", "name", ",", "param", "]", ")", "\n", "total_params", "+=", "param", "\n", "", "print", "(", "table", ")", "\n", "print", "(", "f\"Total Trainable Params: {total_params}\"", ")", "\n", "return", "total_params", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.model.init_weights": [[26, 31], ["classname.find", "torch.init.normal_", "torch.init.constant_"], "function", ["None"], ["", "def", "init_weights", "(", "m", ")", ":", "\n", "    ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "classname", ".", "find", "(", "'Conv'", ")", "!=", "-", "1", ":", "\n", "        ", "nn", ".", "init", ".", "normal_", "(", "m", ".", "weight", ".", "data", ",", "0.0", ",", "0.02", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ".", "data", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.model.vlen": [[32, 34], ["torch.norm().detach", "torch.norm().detach", "torch.norm().detach", "torch.norm().detach", "torch.norm().detach", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm"], "function", ["None"], ["", "", "def", "vlen", "(", "q", ")", ":", "\n", "    ", "return", "torch", ".", "norm", "(", "q", ",", "p", "=", "2", ",", "dim", "=", "2", ",", "keepdim", "=", "True", ")", ".", "detach", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.model.angle_between_batch": [[35, 43], ["torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.acos", "torch.acos", "torch.acos", "torch.acos", "torch.acos", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "model.vlen", "model.vlen"], "function", ["home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.vlen", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.vlen"], ["", "def", "angle_between_batch", "(", "v1", ",", "v2", ")", ":", "\n", "    ", "v1_norm", "=", "v1", "/", "(", "1e-8", "+", "vlen", "(", "v1", ")", ")", "\n", "v2_norm", "=", "v2", "/", "(", "1e-8", "+", "vlen", "(", "v2", ")", ")", "\n", "\n", "dot_prod", "=", "torch", ".", "sum", "(", "v1_norm", "*", "v2_norm", ",", "dim", "=", "2", ",", "keepdim", "=", "True", ")", "\n", "ang", "=", "torch", ".", "acos", "(", "torch", ".", "clamp", "(", "dot_prod", ",", "min", "=", "-", "1", ",", "max", "=", "1", ")", ")", "\n", "\n", "return", "ang", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.ModelNetDataLoader.__init__": [[97, 106], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data", ",", "labels", ",", "point_num", "=", "16", ",", "rot", "=", "False", ",", "use_buffer", "=", "True", ",", "use_voxel", "=", "False", ",", "rot_type", "=", "\"SO3\"", ")", ":", "\n", "        ", "self", ".", "data", ",", "self", ".", "labels", "=", "data", ",", "labels", "\n", "self", ".", "point_num", "=", "point_num", "\n", "self", ".", "o3dmodel", "=", "{", "}", "\n", "self", ".", "voxel_buffer", "=", "{", "}", "\n", "self", ".", "rot", "=", "rot", "\n", "self", ".", "use_buffer", "=", "use_buffer", "\n", "self", ".", "use_voxel", "=", "use_voxel", "\n", "self", ".", "rot_type", "=", "rot_type", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.ModelNetDataLoader.rotate_point_cloud_random_SO3": [[107, 112], ["scipy.spatial.transform.Rotation.from_euler", "pc.rotate.rotate.rotate", "scipy.spatial.transform.Rotation.from_euler.as_dcm", "numpy.random.rand", "numpy.random.rand", "numpy.array", "numpy.array"], "methods", ["None"], ["", "def", "rotate_point_cloud_random_SO3", "(", "self", ",", "pc", ")", ":", "\n", "        ", "roll", ",", "pitch", ",", "yaw", "=", "np", ".", "random", ".", "rand", "(", "3", ")", "*", "np", ".", "pi", "*", "2", "\n", "rot", "=", "R", ".", "from_euler", "(", "'ZYX'", ",", "(", "yaw", ",", "pitch", ",", "roll", ")", ")", "\n", "pc", "=", "pc", ".", "rotate", "(", "rot", ".", "as_dcm", "(", ")", ",", "center", "=", "np", ".", "array", "(", "[", "0", ",", "0", ",", "0", "]", ")", ")", "\n", "return", "pc", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.ModelNetDataLoader.rotate_point_cloud_random_z": [[113, 120], ["scipy.spatial.transform.Rotation.from_euler", "pc.rotate.rotate.rotate", "scipy.spatial.transform.Rotation.from_euler.as_dcm", "numpy.random.rand", "numpy.random.rand", "numpy.array", "numpy.array"], "methods", ["None"], ["", "def", "rotate_point_cloud_random_z", "(", "self", ",", "pc", ")", ":", "\n", "        ", "roll", ",", "pitch", ",", "yaw", "=", "np", ".", "random", ".", "rand", "(", "3", ")", "*", "np", ".", "pi", "*", "2", "\n", "pitch", ",", "yaw", "=", "0", ",", "0", "\n", "rot", "=", "R", ".", "from_euler", "(", "'ZYX'", ",", "(", "yaw", ",", "pitch", ",", "roll", ")", ")", "\n", "pc", "=", "pc", ".", "rotate", "(", "rot", ".", "as_dcm", "(", ")", ",", "center", "=", "np", ".", "array", "(", "[", "0", ",", "0", ",", "0", "]", ")", ")", "\n", "\n", "return", "pc", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.ModelNetDataLoader.__len__": [[121, 123], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.ModelNetDataLoader.__getitem__": [[124, 153], ["numpy.asarray().astype", "numpy.asarray().astype", "numpy.asarray().astype", "numpy.asarray().astype", "numpy.random.choice().reshape", "numpy.random.choice().reshape", "dataloader.add_normal", "dataloader.add_normal", "dataloader.ModelNetDataLoader.rotate_point_cloud_random_SO3", "dataloader.ModelNetDataLoader.rotate_point_cloud_random_z", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.random.choice", "numpy.random.choice", "create_voxel().astype", "dataloader.create_voxel"], "methods", ["home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.add_normal", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.add_normal", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.ScanObjectNNDataLoader.rotate_point_cloud_random_SO3", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.SegmentationLoader.rotate_point_cloud_random_z", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.create_voxel"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "if", "self", ".", "use_buffer", ":", "\n", "            ", "if", "index", "not", "in", "self", ".", "o3dmodel", ":", "\n", "                ", "self", ".", "o3dmodel", "[", "index", "]", "=", "add_normal", "(", "self", ".", "data", "[", "index", "]", ")", "\n", "", "o3dpc", "=", "self", ".", "o3dmodel", "[", "index", "]", "\n", "", "else", ":", "\n", "            ", "o3dpc", "=", "add_normal", "(", "self", ".", "data", "[", "index", "]", ")", "\n", "\n", "", "if", "self", ".", "rot", ":", "\n", "            ", "if", "self", ".", "rot_type", "==", "\"SO3\"", ":", "\n", "                ", "o3dpc", "=", "self", ".", "rotate_point_cloud_random_SO3", "(", "o3dpc", ")", "\n", "", "if", "self", ".", "rot_type", "==", "\"z\"", ":", "\n", "                ", "o3dpc", "=", "self", ".", "rotate_point_cloud_random_z", "(", "o3dpc", ")", "\n", "\n", "", "", "points", "=", "np", ".", "asarray", "(", "o3dpc", ".", "points", ")", ".", "astype", "(", "np", ".", "float32", ")", "#2048,30", "\n", "norms", "=", "np", ".", "asarray", "(", "o3dpc", ".", "normals", ")", ".", "astype", "(", "np", ".", "float32", ")", "#2048,30", "\n", "\n", "sel_pts_idx", "=", "np", ".", "random", ".", "choice", "(", "points", ".", "shape", "[", "0", "]", ",", "size", "=", "self", ".", "point_num", ",", "replace", "=", "False", ")", ".", "reshape", "(", "-", "1", ")", "\n", "points", "=", "points", "[", "sel_pts_idx", "]", "\n", "norms", "=", "norms", "[", "sel_pts_idx", "]", "\n", "\n", "if", "self", ".", "use_voxel", ":", "\n", "            ", "if", "index", "not", "in", "self", ".", "voxel_buffer", ":", "\n", "                ", "self", ".", "voxel_buffer", "[", "index", "]", "=", "create_voxel", "(", "self", ".", "data", "[", "index", "]", ",", "[", "32", ",", "32", ",", "32", "]", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "voxel", "=", "self", ".", "voxel_buffer", "[", "index", "]", "\n", "", "if", "self", ".", "use_voxel", ":", "\n", "            ", "return", "points", ",", "norms", ",", "voxel", ",", "self", ".", "labels", "[", "index", "]", "\n", "", "else", ":", "\n", "            ", "return", "points", ",", "norms", ",", "self", ".", "labels", "[", "index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.SegmentationLoader.__init__": [[156, 165], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "point_norm", ",", "lb", ",", "segs", ",", "p_num", "=", "1024", ",", "num_classes", "=", "16", ",", "rot", "=", "False", ",", "rot_type", "=", "\"SO3\"", ")", ":", "\n", "        ", "self", ".", "point_norm", "=", "point_norm", "\n", "self", ".", "lb", "=", "lb", "\n", "self", ".", "segs", "=", "segs", "\n", "self", ".", "p_num", "=", "p_num", "\n", "self", ".", "rot", "=", "rot", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "rot_type", "=", "rot_type", "\n", "self", ".", "o3dmodel", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.SegmentationLoader.rotate_point_cloud_random_SO3": [[166, 174], ["scipy.spatial.transform.Rotation.from_euler", "numpy.zeros", "numpy.zeros", "pc.rotate.rotate.rotate", "scipy.spatial.transform.Rotation.from_euler.as_dcm", "numpy.random.rand", "numpy.random.rand"], "methods", ["None"], ["", "def", "rotate_point_cloud_random_SO3", "(", "self", ",", "pc", ")", ":", "\n", "        ", "roll", ",", "pitch", ",", "yaw", "=", "np", ".", "random", ".", "rand", "(", "3", ")", "*", "np", ".", "pi", "*", "2", "\n", "rot", "=", "R", ".", "from_euler", "(", "'ZYX'", ",", "(", "yaw", ",", "pitch", ",", "roll", ")", ")", "\n", "# center = np.mean(np.asarray(pc.points).astype(np.float32),0, keepdims=True).T", "\n", "center", "=", "np", ".", "zeros", "(", "(", "3", ",", "1", ")", ")", "\n", "pc", "=", "pc", ".", "rotate", "(", "rot", ".", "as_dcm", "(", ")", ",", "center", "=", "center", ")", "\n", "\n", "return", "pc", "\n", "", "def", "rotate_point_cloud_random_z", "(", "self", ",", "pc", ")", ":", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.SegmentationLoader.rotate_point_cloud_random_z": [[174, 182], ["scipy.spatial.transform.Rotation.from_euler", "numpy.zeros", "numpy.zeros", "pc.rotate.rotate.rotate", "scipy.spatial.transform.Rotation.from_euler.as_dcm", "numpy.random.rand", "numpy.random.rand"], "methods", ["None"], ["", "def", "rotate_point_cloud_random_z", "(", "self", ",", "pc", ")", ":", "\n", "        ", "roll", ",", "pitch", ",", "yaw", "=", "np", ".", "random", ".", "rand", "(", "3", ")", "*", "np", ".", "pi", "*", "2", "\n", "pitch", ",", "yaw", "=", "0", ",", "0", "\n", "rot", "=", "R", ".", "from_euler", "(", "'ZYX'", ",", "(", "yaw", ",", "pitch", ",", "roll", ")", ")", "\n", "center", "=", "np", ".", "zeros", "(", "(", "3", ",", "1", ")", ")", "\n", "pc", "=", "pc", ".", "rotate", "(", "rot", ".", "as_dcm", "(", ")", ",", "center", "=", "center", ")", "\n", "\n", "return", "pc", "\n", "", "def", "__len__", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.SegmentationLoader.__len__": [[182, 184], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "lb", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.SegmentationLoader.one_hot": [[185, 190], ["lb.flatten.flatten.flatten", "numpy.zeros().astype", "numpy.zeros().astype", "numpy.zeros", "numpy.zeros"], "methods", ["None"], ["", "def", "one_hot", "(", "self", ",", "lb", ")", ":", "\n", "        ", "lb", "=", "lb", ".", "flatten", "(", ")", "\n", "a", "=", "np", ".", "zeros", "(", "(", "self", ".", "num_classes", ",", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "a", "[", "lb", "]", "=", "1", "\n", "return", "a", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.SegmentationLoader.__getitem__": [[192, 210], ["numpy.random.choice", "numpy.random.choice", "numpy.concatenate", "numpy.concatenate", "len", "open3d.geometry.PointCloud", "open3d.utility.Vector3dVector", "open3d.utility.Vector3dVector", "numpy.asarray().astype", "numpy.asarray().astype", "numpy.asarray().astype", "numpy.asarray().astype", "dataloader.SegmentationLoader.one_hot", "dataloader.SegmentationLoader.rotate_point_cloud_random_z", "dataloader.SegmentationLoader.rotate_point_cloud_random_SO3", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray"], "methods", ["home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.SegmentationLoader.one_hot", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.SegmentationLoader.rotate_point_cloud_random_z", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.ScanObjectNNDataLoader.rotate_point_cloud_random_SO3"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "rand_idx", "=", "np", ".", "random", ".", "choice", "(", "len", "(", "self", ".", "point_norm", "[", "index", "]", ")", ",", "self", ".", "p_num", ",", "replace", "=", "False", ")", "\n", "points", "=", "self", ".", "point_norm", "[", "index", "]", "[", "rand_idx", "]", "[", ":", ",", ":", "3", "]", "\n", "normals", "=", "self", ".", "point_norm", "[", "index", "]", "[", "rand_idx", "]", "[", ":", ",", "3", ":", "]", "\n", "if", "self", ".", "rot", ":", "\n", "            ", "pc", "=", "o3d", ".", "geometry", ".", "PointCloud", "(", ")", "\n", "pc", ".", "points", "=", "o3d", ".", "utility", ".", "Vector3dVector", "(", "points", ")", "\n", "pc", ".", "normals", "=", "o3d", ".", "utility", ".", "Vector3dVector", "(", "normals", ")", "\n", "if", "self", ".", "rot_type", "==", "\"z\"", ":", "\n", "                ", "pc", "=", "self", ".", "rotate_point_cloud_random_z", "(", "pc", ")", "\n", "", "if", "self", ".", "rot_type", "==", "\"SO3\"", ":", "\n", "                ", "pc", "=", "self", ".", "rotate_point_cloud_random_SO3", "(", "pc", ")", "\n", "\n", "", "points", "=", "np", ".", "asarray", "(", "pc", ".", "points", ")", ".", "astype", "(", "np", ".", "float32", ")", "#2048,30", "\n", "normals", "=", "np", ".", "asarray", "(", "pc", ".", "normals", ")", ".", "astype", "(", "np", ".", "float32", ")", "#2048,30", "\n", "\n", "", "point_normal", "=", "np", ".", "concatenate", "(", "[", "points", ",", "normals", "]", ",", "axis", "=", "-", "1", ")", "\n", "return", "point_normal", ",", "self", ".", "one_hot", "(", "self", ".", "lb", "[", "index", "]", ")", ",", "self", ".", "segs", "[", "index", "]", "[", "rand_idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.ScanObjectNNDataLoader.__init__": [[213, 229], ["numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "dataloader.add_normal", "numpy.asarray().astype", "numpy.asarray().astype", "numpy.asarray().astype", "numpy.asarray().astype", "points.append", "normals.append", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray"], "methods", ["home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.add_normal"], ["    ", "def", "__init__", "(", "self", ",", "point", ",", "lb", ",", "num_classes", "=", "15", ",", "n_points", "=", "2048", ",", "rot", "=", "False", ",", "rot_type", "=", "\"SO3\"", ")", ":", "\n", "        ", "points", "=", "[", "]", "\n", "normals", "=", "[", "]", "\n", "for", "p", "in", "point", ":", "\n", "            ", "pcd", "=", "add_normal", "(", "p", ")", "\n", "p", "=", "np", ".", "asarray", "(", "pcd", ".", "points", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "n", "=", "np", ".", "asarray", "(", "pcd", ".", "normals", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "points", ".", "append", "(", "p", "[", "None", ",", "...", "]", ")", "\n", "normals", ".", "append", "(", "n", "[", "None", ",", "...", "]", ")", "\n", "", "self", ".", "points", "=", "np", ".", "concatenate", "(", "points", ",", "axis", "=", "0", ")", "\n", "self", ".", "normals", "=", "np", ".", "concatenate", "(", "normals", ",", "axis", "=", "0", ")", "\n", "self", ".", "lb", "=", "lb", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "n_points", "=", "n_points", "\n", "self", ".", "rot", "=", "rot", "\n", "self", ".", "rot_type", "=", "rot_type", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.ScanObjectNNDataLoader.__len__": [[230, 232], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "lb", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.ScanObjectNNDataLoader.rotate_point_cloud_random_SO3": [[233, 241], ["scipy.spatial.transform.Rotation.from_euler", "numpy.zeros", "numpy.zeros", "pc.rotate.rotate.rotate", "scipy.spatial.transform.Rotation.from_euler.as_dcm", "numpy.random.rand", "numpy.random.rand"], "methods", ["None"], ["", "def", "rotate_point_cloud_random_SO3", "(", "self", ",", "pc", ")", ":", "\n", "        ", "roll", ",", "pitch", ",", "yaw", "=", "np", ".", "random", ".", "rand", "(", "3", ")", "*", "np", ".", "pi", "*", "2", "\n", "rot", "=", "R", ".", "from_euler", "(", "'ZYX'", ",", "(", "yaw", ",", "pitch", ",", "roll", ")", ")", "\n", "# center = np.mean(np.asarray(pc.points).astype(np.float32),0, keepdims=True).T", "\n", "center", "=", "np", ".", "zeros", "(", "(", "3", ",", "1", ")", ")", "\n", "pc", "=", "pc", ".", "rotate", "(", "rot", ".", "as_dcm", "(", ")", ",", "center", "=", "center", ")", "\n", "\n", "return", "pc", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.ScanObjectNNDataLoader.__getitem__": [[243, 261], ["numpy.random.choice", "numpy.random.choice", "open3d.geometry.PointCloud", "open3d.utility.Vector3dVector", "open3d.utility.Vector3dVector", "numpy.asarray().astype", "numpy.asarray().astype", "numpy.asarray().astype", "numpy.asarray().astype", "dataloader.ScanObjectNNDataLoader.rotate_point_cloud_random_z", "dataloader.ScanObjectNNDataLoader.rotate_point_cloud_random_SO3", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray"], "methods", ["home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.SegmentationLoader.rotate_point_cloud_random_z", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.ScanObjectNNDataLoader.rotate_point_cloud_random_SO3"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "idx", "=", "np", ".", "random", ".", "choice", "(", "self", ".", "points", ".", "shape", "[", "1", "]", ",", "size", "=", "(", "self", ".", "n_points", ",", ")", ")", "\n", "points", "=", "self", ".", "points", "[", "index", "]", "[", "idx", "]", "\n", "normals", "=", "self", ".", "normals", "[", "index", "]", "[", "idx", "]", "\n", "if", "self", ".", "rot", ":", "\n", "            ", "pc", "=", "o3d", ".", "geometry", ".", "PointCloud", "(", ")", "\n", "pc", ".", "points", "=", "o3d", ".", "utility", ".", "Vector3dVector", "(", "points", ")", "\n", "pc", ".", "normals", "=", "o3d", ".", "utility", ".", "Vector3dVector", "(", "normals", ")", "\n", "if", "self", ".", "rot_type", "==", "\"z\"", ":", "\n", "                ", "pc", "=", "self", ".", "rotate_point_cloud_random_z", "(", "pc", ")", "\n", "", "if", "self", ".", "rot_type", "==", "\"SO3\"", ":", "\n", "                ", "pc", "=", "self", ".", "rotate_point_cloud_random_SO3", "(", "pc", ")", "\n", "\n", "", "points", "=", "np", ".", "asarray", "(", "pc", ".", "points", ")", ".", "astype", "(", "np", ".", "float32", ")", "#2048,30", "\n", "normals", "=", "np", ".", "asarray", "(", "pc", ".", "normals", ")", ".", "astype", "(", "np", ".", "float32", ")", "#2048,30", "\n", "\n", "\n", "", "return", "points", ",", "normals", ",", "self", ".", "lb", "[", "index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.create_voxel": [[16, 49], ["pts_np.min", "pts_np.max", "range", "numpy.clip", "numpy.clip", "numpy.clip", "numpy.ravel_multi_index", "numpy.zeros", "np.zeros.reshape", "max", "numpy.linspace", "segments.append", "shape.append", "numpy.searchsorted", "numpy.searchsorted", "numpy.searchsorted", "numpy.unique"], "function", ["None"], ["def", "create_voxel", "(", "points_np", ",", "size3d", ")", ":", "\n", "    ", "x_y_z", "=", "size3d", "\n", "pts_np", "=", "points_np", "\n", "\n", "xyzmin", "=", "pts_np", ".", "min", "(", "0", ")", "\n", "xyzmax", "=", "pts_np", ".", "max", "(", "0", ")", "\n", "\n", "margin", "=", "max", "(", "xyzmax", "-", "xyzmin", ")", "-", "(", "xyzmax", "-", "xyzmin", ")", "\n", "xyzmin", "=", "xyzmin", "-", "margin", "/", "2", "\n", "xyzmax", "=", "xyzmax", "+", "margin", "/", "2", "\n", "\n", "segments", "=", "[", "]", "\n", "shape", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "3", ")", ":", "\n", "# note the +1 in num", "\n", "        ", "s", ",", "step", "=", "np", ".", "linspace", "(", "xyzmin", "[", "i", "]", ",", "xyzmax", "[", "i", "]", ",", "num", "=", "(", "x_y_z", "[", "i", "]", "+", "1", ")", ",", "retstep", "=", "True", ")", "\n", "segments", ".", "append", "(", "s", ")", "\n", "shape", ".", "append", "(", "step", ")", "\n", "\n", "", "n_voxels", "=", "x_y_z", "[", "0", "]", "*", "x_y_z", "[", "1", "]", "*", "x_y_z", "[", "2", "]", "\n", "\n", "voxel_x", "=", "np", ".", "clip", "(", "np", ".", "searchsorted", "(", "segments", "[", "0", "]", ",", "pts_np", "[", ":", ",", "0", "]", ")", "-", "1", ",", "0", ",", "x_y_z", "[", "0", "]", ")", "\n", "voxel_y", "=", "np", ".", "clip", "(", "np", ".", "searchsorted", "(", "segments", "[", "1", "]", ",", "pts_np", "[", ":", ",", "1", "]", ")", "-", "1", ",", "0", ",", "x_y_z", "[", "1", "]", ")", "\n", "voxel_z", "=", "np", ".", "clip", "(", "np", ".", "searchsorted", "(", "segments", "[", "2", "]", ",", "pts_np", "[", ":", ",", "2", "]", ")", "-", "1", ",", "0", ",", "x_y_z", "[", "2", "]", ")", "\n", "\n", "voxel_n", "=", "np", ".", "ravel_multi_index", "(", "[", "voxel_x", ",", "voxel_y", ",", "voxel_z", "]", ",", "x_y_z", ")", "\n", "\n", "vector", "=", "np", ".", "zeros", "(", "n_voxels", ")", "\n", "\n", "vector", "[", "np", ".", "unique", "(", "voxel_n", ")", "]", "=", "1", "\n", "\n", "voxel", "=", "vector", ".", "reshape", "(", "x_y_z", ")", "\n", "return", "voxel", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.add_normal": [[50, 55], ["open3d.geometry.PointCloud", "open3d.utility.Vector3dVector", "o3d.geometry.PointCloud.estimate_normals", "open3d.geometry.KDTreeSearchParamHybrid"], "function", ["None"], ["", "def", "add_normal", "(", "np_pts", ")", ":", "\n", "    ", "pc", "=", "o3d", ".", "geometry", ".", "PointCloud", "(", ")", "\n", "pc", ".", "points", "=", "o3d", ".", "utility", ".", "Vector3dVector", "(", "np_pts", ")", "\n", "pc", ".", "estimate_normals", "(", "search_param", "=", "o3d", ".", "geometry", ".", "KDTreeSearchParamHybrid", "(", "radius", "=", "0.1", ",", "max_nn", "=", "16", ")", ")", "\n", "return", "pc", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.vlen": [[57, 59], ["torch.norm().detach", "torch.norm"], "function", ["None"], ["", "def", "vlen", "(", "q", ")", ":", "\n", "    ", "return", "torch", ".", "norm", "(", "q", ",", "p", "=", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ".", "detach", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.angle_between_batch": [[60, 66], ["torch.sum", "torch.acos", "torch.clamp", "dataloader.vlen", "dataloader.vlen"], "function", ["home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.vlen", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.vlen"], ["", "def", "angle_between_batch", "(", "v1", ",", "v2", ")", ":", "\n", "    ", "v1_norm", "=", "v1", "/", "(", "1e-8", "+", "vlen", "(", "v1", ")", ")", "\n", "v2_norm", "=", "v2", "/", "(", "1e-8", "+", "vlen", "(", "v2", ")", ")", "\n", "\n", "dot_prod", "=", "torch", ".", "sum", "(", "v1_norm", "*", "v2_norm", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "ang", "=", "torch", ".", "acos", "(", "torch", ".", "clamp", "(", "dot_prod", ",", "min", "=", "-", "1", ",", "max", "=", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.load_h5": [[67, 73], ["h5py.File"], "function", ["None"], ["", "def", "load_h5", "(", "h5_filename", ")", ":", "\n", "    ", "f", "=", "h5py", ".", "File", "(", "h5_filename", ")", "\n", "data", "=", "f", "[", "'data'", "]", "[", ":", "]", "\n", "label", "=", "f", "[", "'label'", "]", "[", ":", "]", "\n", "seg", "=", "[", "]", "\n", "return", "(", "data", ",", "label", ",", "seg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.load_data": [[76, 95], ["dataloader.load_h5", "dataloader.load_h5", "dataloader.load_h5", "dataloader.load_h5", "dataloader.load_h5", "dataloader.load_h5", "dataloader.load_h5", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate"], "function", ["home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.load_h5", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.load_h5", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.load_h5", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.load_h5", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.load_h5", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.load_h5", "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.load_h5"], ["", "def", "load_data", "(", "dir", ",", "classification", "=", "False", ")", ":", "\n", "    ", "data_train0", ",", "label_train0", ",", "Seglabel_train0", "=", "load_h5", "(", "dir", "+", "'ply_data_train0.h5'", ")", "\n", "data_train1", ",", "label_train1", ",", "Seglabel_train1", "=", "load_h5", "(", "dir", "+", "'ply_data_train1.h5'", ")", "\n", "data_train2", ",", "label_train2", ",", "Seglabel_train2", "=", "load_h5", "(", "dir", "+", "'ply_data_train2.h5'", ")", "\n", "data_train3", ",", "label_train3", ",", "Seglabel_train3", "=", "load_h5", "(", "dir", "+", "'ply_data_train3.h5'", ")", "\n", "data_train4", ",", "label_train4", ",", "Seglabel_train4", "=", "load_h5", "(", "dir", "+", "'ply_data_train4.h5'", ")", "\n", "data_test0", ",", "label_test0", ",", "Seglabel_test0", "=", "load_h5", "(", "dir", "+", "'ply_data_test0.h5'", ")", "\n", "data_test1", ",", "label_test1", ",", "Seglabel_test1", "=", "load_h5", "(", "dir", "+", "'ply_data_test1.h5'", ")", "\n", "train_data", "=", "np", ".", "concatenate", "(", "[", "data_train0", ",", "data_train1", ",", "data_train2", ",", "data_train3", ",", "data_train4", "]", ")", "\n", "train_label", "=", "np", ".", "concatenate", "(", "[", "label_train0", ",", "label_train1", ",", "label_train2", ",", "label_train3", ",", "label_train4", "]", ")", "\n", "train_Seglabel", "=", "np", ".", "concatenate", "(", "[", "Seglabel_train0", ",", "Seglabel_train1", ",", "Seglabel_train2", ",", "Seglabel_train3", ",", "Seglabel_train4", "]", ")", "\n", "test_data", "=", "np", ".", "concatenate", "(", "[", "data_test0", ",", "data_test1", "]", ")", "\n", "test_label", "=", "np", ".", "concatenate", "(", "[", "label_test0", ",", "label_test1", "]", ")", "\n", "test_Seglabel", "=", "np", ".", "concatenate", "(", "[", "Seglabel_test0", ",", "Seglabel_test1", "]", ")", "\n", "\n", "if", "classification", ":", "\n", "        ", "return", "train_data", ",", "train_label", ",", "test_data", ",", "test_label", "\n", "", "else", ":", "\n", "        ", "return", "train_data", ",", "train_Seglabel", ",", "test_data", ",", "test_Seglabel", "\n", "\n"]], "home.repos.pwc.inspect_result.megayeye_triangle-net.None.dataloader.load_h5_scanobjectNN": [[263, 271], ["h5py.File", "h5py.File"], "function", ["None"], ["", "", "def", "load_h5_scanobjectNN", "(", "h5_train", ",", "h5_test", ")", ":", "\n", "    ", "f", "=", "h5py", ".", "File", "(", "h5_train", ")", "\n", "train_data", "=", "f", "[", "'data'", "]", "[", ":", "]", "\n", "train_label", "=", "f", "[", "'label'", "]", "[", ":", "]", "\n", "f", "=", "h5py", ".", "File", "(", "h5_test", ")", "\n", "test_data", "=", "f", "[", "'data'", "]", "[", ":", "]", "\n", "test_label", "=", "f", "[", "'label'", "]", "[", ":", "]", "\n", "return", "train_data", ",", "train_label", ",", "test_data", ",", "test_label", "\n", "\n"]]}