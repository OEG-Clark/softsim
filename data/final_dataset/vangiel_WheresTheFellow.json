{"home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.testAll.xxx_rads": [[17, 27], ["isinstance", "testAll.xxx_rads.xxx_rads_item"], "function", ["None"], ["def", "xxx_rads", "(", "a", ")", ":", "\n", "    ", "def", "xxx_rads_item", "(", "a", ")", ":", "\n", "        ", "while", "a", ">", "math", ".", "pi", ":", "\n", "            ", "a", "-=", "2.", "*", "math", ".", "pi", "\n", "", "while", "a", "<", "-", "math", ".", "pi", ":", "\n", "            ", "a", "+=", "2.", "*", "math", ".", "pi", "\n", "", "return", "a", "\n", "", "if", "isinstance", "(", "a", ",", "list", ")", ":", "\n", "        ", "return", "[", "xxx_rads_item", "(", "x", ")", "for", "x", "in", "a", "]", "\n", "", "return", "xxx_rads_item", "(", "a", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.testAll.xxx_degrees": [[28, 38], ["isinstance", "testAll.xxx_degrees.xxx_degrees_item"], "function", ["None"], ["", "def", "xxx_degrees", "(", "a", ")", ":", "\n", "    ", "def", "xxx_degrees_item", "(", "a", ")", ":", "\n", "        ", "while", "a", ">", "180", ":", "\n", "            ", "a", "-=", "360", "\n", "", "while", "a", "<", "-", "180", ":", "\n", "            ", "a", "+=", "360", "\n", "", "return", "a", "\n", "", "if", "isinstance", "(", "a", ",", "list", ")", ":", "\n", "        ", "return", "[", "xxx_degrees_item", "(", "x", ")", "for", "x", "in", "a", "]", "\n", "", "return", "xxx_degrees_item", "(", "a", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.testAll.rads2degrees": [[39, 43], ["None"], "function", ["None"], ["", "def", "rads2degrees", "(", "a", ")", ":", "\n", "    ", "if", "a", "<", "0", ":", "\n", "        ", "a", "+=", "2.", "*", "math", ".", "pi", "\n", "", "return", "a", "*", "180", "/", "math", ".", "pi", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.testAll.to_error": [[45, 50], ["copy.deepcopy", "range", "len", "testAll.xxx_degrees"], "function", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.test.xxx_degrees"], ["", "def", "to_error", "(", "got", ",", "ground_truth", ")", ":", "\n", "    ", "e", "=", "copy", ".", "deepcopy", "(", "got", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "e", ")", ")", ":", "\n", "        ", "e", "[", "i", "]", "=", "xxx_degrees", "(", "e", "[", "i", "]", "-", "ground_truth", "[", "i", "]", ")", "\n", "", "return", "e", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.testAll.processData": [[52, 217], ["graph_generator.CalibrationDataset", "list", "trackerapi.TrackerAPI", "nets.mlpnet.MLPNet", "torch.tensor", "torch.tensor", "torch.utils.data.TensorDataset", "torch.utils.data.DataLoader", "print", "nets.mlpnet.MLPNet.predict", "range", "dict", "print", "numpy.array().mean", "numpy.array().mean", "testAll.to_error", "numpy.array().mean", "numpy.array().mean", "numpy.array().mean", "testAll.to_error", "numpy.array().mean", "numpy.array().mean", "numpy.array().mean", "testAll.to_error", "numpy.array().mean", "print", "print", "print", "print", "print", "print", "print", "print", "open", "f.read", "nets.mlpnet.MLPNet.load_data_2D", "nets.mlpnet.MLPNet.load_data", "len", "int", "xyz_gtMSE.append", "xyz_gtMSE.append", "xyz_gtMSE.append", "sc_gtMSE.append", "sc_gtMSE.append", "xyz_gnnMSE.append", "xyz_gnnMSE.append", "xyz_gnnMSE.append", "sc_gnnMSE.append", "sc_gnnMSE.append", "xyz_mlpMSE.append", "xyz_mlpMSE.append", "xyz_mlpMSE.append", "sc_mlpMSE.append", "sc_mlpMSE.append", "range", "len", "sklearn.metrics.mean_squared_error", "sklearn.metrics.mean_squared_error", "sklearn.metrics.mean_squared_error", "sklearn.metrics.mean_squared_error", "sklearn.metrics.mean_squared_error", "sklearn.metrics.mean_squared_error", "json.loads", "trackerapi.TrackerAPI.predict", "len", "len", "len", "x_gt.append", "z_gt.append", "a_gt.append", "range", "x_cc.append", "z_cc.append", "range", "a_cc.append", "x_nn.append", "z_nn.append", "a_nn.append", "x_mlp.append", "z_mlp.append", "a_mlp.append", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "math.sin", "math.sin", "math.cos", "math.cos", "testAll.rads2degrees", "len", "len", "math.atan2", "math.atan2", "testAll.rads2degrees", "testAll.rads2degrees", "testAll.rads2degrees", "math.sin", "math.sin", "math.cos", "math.cos", "math.atan2", "math.atan2", "math.atan2", "math.atan2", "abs", "abs", "abs", "abs", "abs", "abs", "abs", "abs", "abs", "range", "range", "range", "range", "range", "range", "range", "range", "range", "len", "len", "len", "x_nn[].item", "len", "z_nn[].item", "len", "len", "x_mlp[].item", "len", "z_mlp[].item", "len", "len"], "function", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.mlpnet.MLPNet.predict", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.test.to_error", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.test.to_error", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.test.to_error", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.mlpnet.MLPNet.load_data_2D", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.mlpnet.MLPNet.load_data", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.mlpnet.MLPNet.predict", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.test.rads2degrees", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.test.rads2degrees", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.test.rads2degrees", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.test.rads2degrees"], ["", "def", "processData", "(", "filename", ")", ":", "\n", "    ", "test_dataset", "=", "graph_generator", ".", "CalibrationDataset", "(", "filename", ",", "'run'", ",", "'1'", ")", "\n", "\n", "with", "open", "(", "filename", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "raw", "=", "f", ".", "read", "(", ")", "\n", "", "raw", "=", "list", "(", "raw", ")", "\n", "\n", "raws", "=", "''", ".", "join", "(", "raw", ")", "\n", "data", "=", "json", ".", "loads", "(", "raws", ")", "[", "'data_set'", "]", "[", ":", "]", "\n", "\n", "USING", "=", "'MLPNET'", "\n", "\n", "model_gnn", "=", "trackerapi", ".", "TrackerAPI", "(", "'.'", ",", "test_dataset", ")", "\n", "results_gnn", "=", "[", "x", "for", "x", "in", "model_gnn", ".", "predict", "(", ")", "]", "\n", "train_2D", "=", "False", "# False->3D, True->2D", "\n", "model_mlp", "=", "MLPNet", "(", "train_2D", ")", "\n", "if", "train_2D", ":", "\n", "        ", "test_data", "=", "MLPNet", ".", "load_data_2D", "(", "filename", ")", "\n", "", "else", ":", "\n", "        ", "test_data", "=", "MLPNet", ".", "load_data", "(", "filename", ")", "\n", "", "X", "=", "torch", ".", "tensor", "(", "test_data", "[", "'data'", "]", ")", "\n", "Y", "=", "torch", ".", "tensor", "(", "test_data", "[", "'groundtruth'", "]", ")", "\n", "test_dataset", "=", "torch", ".", "utils", ".", "data", ".", "TensorDataset", "(", "X", ",", "Y", ")", "\n", "test_loader", "=", "DataLoader", "(", "test_dataset", ",", "batch_size", "=", "1000", ",", "shuffle", "=", "False", ")", "\n", "print", "(", "\"mlp dataset len\"", ",", "len", "(", "test_loader", ".", "dataset", ")", ")", "\n", "results_mlp", "=", "model_mlp", ".", "predict", "(", "test_loader", ")", "\n", "\n", "x_gt", "=", "[", "]", "\n", "x_cc", "=", "[", "]", "\n", "x_nn", "=", "[", "]", "\n", "x_mlp", "=", "[", "]", "\n", "z_gt", "=", "[", "]", "\n", "z_cc", "=", "[", "]", "\n", "z_nn", "=", "[", "]", "\n", "z_mlp", "=", "[", "]", "\n", "a_gt", "=", "[", "]", "\n", "a_cc", "=", "[", "]", "\n", "a_nn", "=", "[", "]", "\n", "a_mlp", "=", "[", "]", "\n", "\n", "xyz_gtMSE", "=", "[", "]", "\n", "sc_gtMSE", "=", "[", "]", "\n", "xyz_gnnMSE", "=", "[", "]", "\n", "sc_gnnMSE", "=", "[", "]", "\n", "xyz_mlpMSE", "=", "[", "]", "\n", "sc_mlpMSE", "=", "[", "]", "\n", "\n", "\n", "\n", "\n", "\n", "s", "=", "0", "\n", "ang_prev", "=", "0", "\n", "for", "n", "in", "range", "(", "int", "(", "len", "(", "results_gnn", ")", ")", ")", ":", "\n", "        ", "xyz_gtMSE", ".", "append", "(", "data", "[", "n", "]", "[", "'superbody'", "]", "[", "0", "]", "[", "'ground_truth'", "]", "[", "0", "]", "/", "4000", ")", "\n", "xyz_gtMSE", ".", "append", "(", "data", "[", "n", "]", "[", "'superbody'", "]", "[", "0", "]", "[", "'ground_truth'", "]", "[", "1", "]", "/", "4000", ")", "\n", "xyz_gtMSE", ".", "append", "(", "data", "[", "n", "]", "[", "'superbody'", "]", "[", "0", "]", "[", "'ground_truth'", "]", "[", "2", "]", "/", "4000", ")", "\n", "sc_gtMSE", ".", "append", "(", "math", ".", "sin", "(", "data", "[", "n", "]", "[", "'superbody'", "]", "[", "0", "]", "[", "'ground_truth'", "]", "[", "3", "]", ")", "*", "0.7", ")", "\n", "sc_gtMSE", ".", "append", "(", "math", ".", "cos", "(", "data", "[", "n", "]", "[", "'superbody'", "]", "[", "0", "]", "[", "'ground_truth'", "]", "[", "3", "]", ")", "*", "0.7", ")", "\n", "\n", "xyz_gnnMSE", ".", "append", "(", "results_gnn", "[", "n", "]", "[", "0", "]", ")", "\n", "xyz_gnnMSE", ".", "append", "(", "results_gnn", "[", "n", "]", "[", "1", "]", ")", "\n", "xyz_gnnMSE", ".", "append", "(", "results_gnn", "[", "n", "]", "[", "2", "]", ")", "\n", "sc_gnnMSE", ".", "append", "(", "results_gnn", "[", "n", "]", "[", "3", "]", ")", "\n", "sc_gnnMSE", ".", "append", "(", "results_gnn", "[", "n", "]", "[", "4", "]", ")", "\n", "\n", "xyz_mlpMSE", ".", "append", "(", "results_mlp", "[", "n", "]", "[", "0", "]", ")", "\n", "xyz_mlpMSE", ".", "append", "(", "results_mlp", "[", "n", "]", "[", "1", "]", ")", "\n", "xyz_mlpMSE", ".", "append", "(", "results_mlp", "[", "n", "]", "[", "2", "]", ")", "\n", "sc_mlpMSE", ".", "append", "(", "results_mlp", "[", "n", "]", "[", "3", "]", ")", "\n", "sc_mlpMSE", ".", "append", "(", "results_mlp", "[", "n", "]", "[", "4", "]", ")", "\n", "\n", "\n", "n_joints", "=", "0", "\n", "for", "cam", "in", "range", "(", "len", "(", "data", "[", "n", "]", "[", "'superbody'", "]", ")", ")", ":", "\n", "           ", "n_joints", "+=", "len", "(", "data", "[", "n", "]", "[", "'superbody'", "]", "[", "cam", "]", "[", "'joints'", "]", ")", "\n", "\n", "", "if", "n_joints", "<", "3", ":", "\n", "            ", "continue", "\n", "\n", "", "s", "+=", "1", "\n", "\n", "if", "s", ">=", "2", "and", "s", "%", "1", "==", "0", ":", "\n", "            ", "i", "=", "n", "\n", "x_gt", ".", "append", "(", "data", "[", "i", "]", "[", "'superbody'", "]", "[", "0", "]", "[", "'ground_truth'", "]", "[", "0", "]", ")", "\n", "z_gt", ".", "append", "(", "data", "[", "i", "]", "[", "'superbody'", "]", "[", "0", "]", "[", "'ground_truth'", "]", "[", "2", "]", ")", "\n", "a_gt", ".", "append", "(", "rads2degrees", "(", "data", "[", "i", "]", "[", "'superbody'", "]", "[", "0", "]", "[", "'ground_truth'", "]", "[", "3", "]", ")", ")", "\n", "\n", "val_x_cc", "=", "0", "\n", "val_z_cc", "=", "0", "\n", "ncams", "=", "0", "\n", "for", "cam", "in", "range", "(", "0", ",", "len", "(", "data", "[", "i", "]", "[", "'superbody'", "]", ")", ")", ":", "\n", "                ", "val_x_cc", "+=", "data", "[", "i", "]", "[", "'superbody'", "]", "[", "cam", "]", "[", "'world'", "]", "[", "0", "]", "\n", "val_z_cc", "+=", "data", "[", "i", "]", "[", "'superbody'", "]", "[", "cam", "]", "[", "'world'", "]", "[", "2", "]", "\n", "ncams", "+=", "1", "\n", "\n", "", "x_cc", ".", "append", "(", "val_x_cc", "/", "ncams", ")", "\n", "z_cc", ".", "append", "(", "val_z_cc", "/", "ncams", ")", "\n", "\n", "val_sin_cc", "=", "0", "\n", "val_cos_cc", "=", "0", "\n", "ncams", "=", "0", "\n", "for", "cam", "in", "range", "(", "0", ",", "len", "(", "data", "[", "i", "]", "[", "'superbody'", "]", ")", ")", ":", "\n", "                ", "joints", "=", "data", "[", "i", "]", "[", "'superbody'", "]", "[", "cam", "]", "[", "\"joints\"", "]", "\n", "if", "(", "\"right_shoulder\"", "in", "joints", "and", "\"left_shoulder\"", "in", "joints", ")", "or", "(", "\"right_hip\"", "in", "joints", "and", "\"left_hip\"", "in", "joints", ")", ":", "\n", "                    ", "val_sin_cc", "+=", "math", ".", "sin", "(", "data", "[", "i", "]", "[", "'superbody'", "]", "[", "cam", "]", "[", "'world'", "]", "[", "3", "]", ")", "\n", "val_cos_cc", "+=", "math", ".", "cos", "(", "data", "[", "i", "]", "[", "'superbody'", "]", "[", "cam", "]", "[", "'world'", "]", "[", "3", "]", ")", "\n", "ncams", "+=", "1", "\n", "\n", "", "", "if", "ncams", ">", "0", ":", "\n", "                ", "val_a_cc", "=", "math", ".", "atan2", "(", "val_sin_cc", "/", "ncams", ",", "val_cos_cc", "/", "ncams", ")", "\n", "ang_prev", "=", "val_a_cc", "\n", "", "else", ":", "\n", "                ", "val_a_cc", "=", "ang_prev", "\n", "\n", "\n", "", "a_cc", ".", "append", "(", "rads2degrees", "(", "val_a_cc", ")", ")", "\n", "\n", "x_nn", ".", "append", "(", "results_gnn", "[", "i", "]", "[", "0", "]", "*", "4000", ")", "\n", "z_nn", ".", "append", "(", "results_gnn", "[", "i", "]", "[", "2", "]", "*", "4000", ")", "\n", "a_nn", ".", "append", "(", "rads2degrees", "(", "math", ".", "atan2", "(", "results_gnn", "[", "i", "]", "[", "3", "]", "/", "0.7", ",", "results_gnn", "[", "i", "]", "[", "4", "]", "/", "0.7", ")", ")", ")", "\n", "x_mlp", ".", "append", "(", "results_mlp", "[", "i", "]", "[", "0", "]", "*", "4000", ")", "\n", "z_mlp", ".", "append", "(", "results_mlp", "[", "i", "]", "[", "2", "]", "*", "4000", ")", "\n", "a_mlp", ".", "append", "(", "rads2degrees", "(", "math", ".", "atan2", "(", "results_mlp", "[", "i", "]", "[", "3", "]", "/", "0.7", ",", "results_mlp", "[", "i", "]", "[", "4", "]", "/", "0.7", ")", ")", ")", "\n", "\n", "", "", "error_dict", "=", "dict", "(", ")", "\n", "\n", "print", "(", "\"dataset len\"", ",", "len", "(", "x_gt", ")", ")", "\n", "\n", "err_x_cc", "=", "np", ".", "array", "(", "[", "abs", "(", "x_cc", "[", "i", "]", "-", "x_gt", "[", "i", "]", ")", "for", "i", "in", "range", "(", "len", "(", "x_gt", ")", ")", "]", ")", ".", "mean", "(", ")", "\n", "error_dict", "[", "'err_x_cc'", "]", "=", "err_x_cc", "\n", "err_z_cc", "=", "np", ".", "array", "(", "[", "abs", "(", "z_cc", "[", "i", "]", "-", "z_gt", "[", "i", "]", ")", "for", "i", "in", "range", "(", "len", "(", "z_gt", ")", ")", "]", ")", ".", "mean", "(", ")", "\n", "error_dict", "[", "'err_z_cc'", "]", "=", "err_z_cc", "\n", "list_err_a_cc", "=", "to_error", "(", "a_cc", ",", "a_gt", ")", "\n", "err_a_cc", "=", "np", ".", "array", "(", "[", "abs", "(", "list_err_a_cc", "[", "i", "]", ")", "for", "i", "in", "range", "(", "len", "(", "a_gt", ")", ")", "]", ")", ".", "mean", "(", ")", "\n", "error_dict", "[", "'err_a_cc'", "]", "=", "err_a_cc", "\n", "\n", "err_x_nn", "=", "np", ".", "array", "(", "[", "abs", "(", "x_nn", "[", "i", "]", ".", "item", "(", ")", "-", "x_gt", "[", "i", "]", ")", "for", "i", "in", "range", "(", "len", "(", "x_gt", ")", ")", "]", ")", ".", "mean", "(", ")", "\n", "error_dict", "[", "'err_x_nn'", "]", "=", "err_x_nn", "\n", "err_z_nn", "=", "np", ".", "array", "(", "[", "abs", "(", "z_nn", "[", "i", "]", ".", "item", "(", ")", "-", "z_gt", "[", "i", "]", ")", "for", "i", "in", "range", "(", "len", "(", "z_gt", ")", ")", "]", ")", ".", "mean", "(", ")", "\n", "error_dict", "[", "'err_z_nn'", "]", "=", "err_z_nn", "\n", "list_err_a_nn", "=", "to_error", "(", "a_nn", ",", "a_gt", ")", "\n", "err_a_nn", "=", "np", ".", "array", "(", "[", "abs", "(", "list_err_a_nn", "[", "i", "]", ")", "for", "i", "in", "range", "(", "len", "(", "a_gt", ")", ")", "]", ")", ".", "mean", "(", ")", "\n", "error_dict", "[", "'err_a_nn'", "]", "=", "err_a_nn", "\n", "\n", "err_x_mlp", "=", "np", ".", "array", "(", "[", "abs", "(", "x_mlp", "[", "i", "]", ".", "item", "(", ")", "-", "x_gt", "[", "i", "]", ")", "for", "i", "in", "range", "(", "len", "(", "x_gt", ")", ")", "]", ")", ".", "mean", "(", ")", "\n", "error_dict", "[", "'err_x_mlp'", "]", "=", "err_x_mlp", "\n", "err_z_mlp", "=", "np", ".", "array", "(", "[", "abs", "(", "z_mlp", "[", "i", "]", ".", "item", "(", ")", "-", "z_gt", "[", "i", "]", ")", "for", "i", "in", "range", "(", "len", "(", "z_gt", ")", ")", "]", ")", ".", "mean", "(", ")", "\n", "error_dict", "[", "'err_z_mlp'", "]", "=", "err_z_mlp", "\n", "list_err_a_mlp", "=", "to_error", "(", "a_mlp", ",", "a_gt", ")", "\n", "err_a_mlp", "=", "np", ".", "array", "(", "[", "abs", "(", "list_err_a_mlp", "[", "i", "]", ")", "for", "i", "in", "range", "(", "len", "(", "a_gt", ")", ")", "]", ")", ".", "mean", "(", ")", "\n", "error_dict", "[", "'err_a_mlp'", "]", "=", "err_a_mlp", "\n", "\n", "print", "(", "\"---------------------------------------------\"", ")", "\n", "print", "(", "\"GNN MSE GLOBAL:\"", ",", "mean_squared_error", "(", "xyz_gtMSE", "+", "sc_gtMSE", ",", "xyz_gnnMSE", "+", "sc_gnnMSE", ")", ")", "\n", "print", "(", "\"GNN MSE sin cos:\"", ",", "mean_squared_error", "(", "sc_gtMSE", ",", "sc_gnnMSE", ")", ")", "\n", "print", "(", "\"GNN MSE xyz:\"", ",", "mean_squared_error", "(", "xyz_gtMSE", ",", "xyz_gnnMSE", ")", ")", "\n", "\n", "print", "(", "\"---------------------------------------------\"", ")", "\n", "print", "(", "\"MLP MSE GLOBAL:\"", ",", "mean_squared_error", "(", "xyz_gtMSE", "+", "sc_gtMSE", ",", "xyz_mlpMSE", "+", "sc_mlpMSE", ")", ")", "\n", "print", "(", "\"MLP MSE sin cos:\"", ",", "mean_squared_error", "(", "sc_gtMSE", ",", "sc_mlpMSE", ")", ")", "\n", "print", "(", "\"MLP MSE xyz:\"", ",", "mean_squared_error", "(", "xyz_gtMSE", ",", "xyz_mlpMSE", ")", ")", "\n", "\n", "\n", "return", "error_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.ui_drawGraph.Ui_CalibrationWidget.setupUi": [[14, 35], ["CalibrationWidget.setObjectName", "CalibrationWidget.resize", "PySide2.QtWidgets.QHBoxLayout", "ui_drawGraph.Ui_CalibrationWidget.horizontalLayout.setSpacing", "ui_drawGraph.Ui_CalibrationWidget.horizontalLayout.setContentsMargins", "ui_drawGraph.Ui_CalibrationWidget.horizontalLayout.setObjectName", "PySide2.QtWidgets.QWidget", "ui_drawGraph.Ui_CalibrationWidget.widget.setMinimumSize", "ui_drawGraph.Ui_CalibrationWidget.widget.setObjectName", "ui_drawGraph.Ui_CalibrationWidget.horizontalLayout.addWidget", "PySide2.QtWidgets.QTableWidget", "ui_drawGraph.Ui_CalibrationWidget.tableWidget.setMinimumSize", "ui_drawGraph.Ui_CalibrationWidget.tableWidget.setStyleSheet", "ui_drawGraph.Ui_CalibrationWidget.tableWidget.setObjectName", "ui_drawGraph.Ui_CalibrationWidget.tableWidget.setColumnCount", "ui_drawGraph.Ui_CalibrationWidget.tableWidget.setRowCount", "ui_drawGraph.Ui_CalibrationWidget.horizontalLayout.addWidget", "ui_drawGraph.Ui_CalibrationWidget.retranslateUi", "PySide2.QtCore.QMetaObject.connectSlotsByName", "PySide2.QtCore.QSize", "PySide2.QtCore.QSize"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.ui_drawGraph.Ui_CalibrationWidget.retranslateUi"], ["    ", "def", "setupUi", "(", "self", ",", "CalibrationWidget", ")", ":", "\n", "        ", "CalibrationWidget", ".", "setObjectName", "(", "\"Graph2ImageWidget\"", ")", "\n", "CalibrationWidget", ".", "resize", "(", "640", ",", "557", ")", "\n", "self", ".", "horizontalLayout", "=", "QtWidgets", ".", "QHBoxLayout", "(", "CalibrationWidget", ")", "\n", "self", ".", "horizontalLayout", ".", "setSpacing", "(", "0", ")", "\n", "self", ".", "horizontalLayout", ".", "setContentsMargins", "(", "0", ",", "0", ",", "0", ",", "0", ")", "\n", "self", ".", "horizontalLayout", ".", "setObjectName", "(", "\"horizontalLayout\"", ")", "\n", "self", ".", "widget", "=", "QtWidgets", ".", "QWidget", "(", "CalibrationWidget", ")", "\n", "self", ".", "widget", ".", "setMinimumSize", "(", "QtCore", ".", "QSize", "(", "200", ",", "0", ")", ")", "\n", "self", ".", "widget", ".", "setObjectName", "(", "\"widget\"", ")", "\n", "self", ".", "horizontalLayout", ".", "addWidget", "(", "self", ".", "widget", ")", "\n", "self", ".", "tableWidget", "=", "QtWidgets", ".", "QTableWidget", "(", "CalibrationWidget", ")", "\n", "self", ".", "tableWidget", ".", "setMinimumSize", "(", "QtCore", ".", "QSize", "(", "400", ",", "0", ")", ")", "\n", "self", ".", "tableWidget", ".", "setStyleSheet", "(", "\"font: 15pt \\\"Ubuntu\\\";\"", ")", "\n", "self", ".", "tableWidget", ".", "setObjectName", "(", "\"tableWidget\"", ")", "\n", "self", ".", "tableWidget", ".", "setColumnCount", "(", "0", ")", "\n", "self", ".", "tableWidget", ".", "setRowCount", "(", "0", ")", "\n", "self", ".", "horizontalLayout", ".", "addWidget", "(", "self", ".", "tableWidget", ")", "\n", "\n", "self", ".", "retranslateUi", "(", "CalibrationWidget", ")", "\n", "QtCore", ".", "QMetaObject", ".", "connectSlotsByName", "(", "CalibrationWidget", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.ui_drawGraph.Ui_CalibrationWidget.retranslateUi": [[36, 38], ["CalibrationWidget.setWindowTitle", "PySide2.QtWidgets.QApplication.translate"], "methods", ["None"], ["", "def", "retranslateUi", "(", "self", ",", "CalibrationWidget", ")", ":", "\n", "        ", "CalibrationWidget", ".", "setWindowTitle", "(", "QtWidgets", ".", "QApplication", ".", "translate", "(", "\"CalibrationWidget\"", ",", "\"Calibration graph inspector\"", ",", "None", ",", "-", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.__init__": [[26, 42], ["dgl.DGLGraph.__init__", "graph_generator.HumanGraph.set_n_initializer", "graph_generator.HumanGraph.set_e_initializer", "graph_generator.HumanGraph.initializeWithAlternative1", "print", "sys.exit"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.pg_rgcn_gat3.PRGAT3.__init__", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.initializeWithAlternative1"], ["    ", "def", "__init__", "(", "self", ",", "data", ",", "alt", ",", "mode", "=", "'train'", ",", "debug", "=", "False", ")", ":", "\n", "        ", "super", "(", "HumanGraph", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "labels", "=", "None", "\n", "self", ".", "features", "=", "None", "\n", "self", ".", "num_rels", "=", "-", "1", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "debug", "=", "debug", "\n", "\n", "self", ".", "set_n_initializer", "(", "dgl", ".", "init", ".", "zero_initializer", ")", "\n", "self", ".", "set_e_initializer", "(", "dgl", ".", "init", ".", "zero_initializer", ")", "\n", "\n", "if", "alt", "==", "'1'", ":", "\n", "            ", "self", ".", "initializeWithAlternative1", "(", "data", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "f'Unknown network alternative {alt}'", ")", "\n", "sys", ".", "exit", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_node_types_one_hot": [[43, 48], ["None"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "get_node_types_one_hot", "(", ")", ":", "\n", "        ", "return", "[", "'superbody'", ",", "'body'", ",", "'nose'", ",", "'left_ear'", ",", "'left_eye'", ",", "'left_shoulder'", ",", "'left_elbow'", ",", "'left_wrist'", ",", "\n", "'left_hip'", ",", "'left_knee'", ",", "'left_ankle'", ",", "'right_ear'", ",", "'right_eye'", ",", "'right_shoulder'", ",", "'right_elbow'", ",", "\n", "'right_wrist'", ",", "'right_hip'", ",", "'right_knee'", ",", "'right_ankle'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_cam_types": [[49, 52], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_cam_types", "(", ")", ":", "\n", "        ", "return", "[", "'cam1'", ",", "'cam2'", ",", "'cam3'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_body_parts": [[54, 57], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_body_parts", "(", ")", ":", "\n", "        ", "return", "{", "'e'", ",", "'ey'", ",", "'n'", ",", "'s'", ",", "'el'", ",", "'w'", ",", "'h'", ",", "'k'", ",", "'a'", "}", "\n", "# e  = ear          r = right", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_body_rels": [[67, 70], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_body_rels", "(", ")", ":", "\n", "        ", "return", "{", "'s_el'", ",", "'el_w'", ",", "'s_h'", ",", "'h_k'", ",", "'k_a'", ",", "'n_e'", ",", "'n_s'", ",", "'n_ey'", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_all_features": [[71, 74], ["graph_generator.HumanGraph.get_joint_metric_features", "graph_generator.HumanGraph.get_node_types_one_hot", "graph_generator.HumanGraph.get_cam_types"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_joint_metric_features", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_node_types_one_hot", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_cam_types"], ["", "@", "staticmethod", "\n", "def", "get_all_features", "(", ")", ":", "\n", "        ", "return", "HumanGraph", ".", "get_node_types_one_hot", "(", ")", "+", "HumanGraph", ".", "get_cam_types", "(", ")", "+", "HumanGraph", ".", "get_joint_metric_features", "(", ")", "#+ HumanGraph.get_body_metric_features()", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_joint_metric_features": [[75, 81], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_joint_metric_features", "(", ")", ":", "\n", "        ", "if", "USING_3D", ":", "\n", "            ", "return", "[", "'x_position'", ",", "'y_position'", ",", "'z_position'", ",", "'i_coordinate'", ",", "'j_coordinate'", ",", "'score'", "]", "\n", "", "else", ":", "\n", "            ", "return", "[", "'i_coordinate'", ",", "'j_coordinate'", ",", "'score'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_body_metric_features": [[82, 85], ["None"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "get_body_metric_features", "(", ")", ":", "\n", "        ", "return", "[", "'x'", ",", "'y'", ",", "'z'", ",", "'orientation_sin'", ",", "'orientation_cos'", "]", "#, 'timestamp']", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_rels": [[86, 121], ["set", "graph_generator.HumanGraph.get_body_parts", "graph_generator.HumanGraph.get_body_rels", "list", "set.add", "set.add", "set.add", "sorted", "relations.split", "e.split", "set.add", "list", "set.add", "set.add", "set.add", "set.add", "set.add", "set.add", "set.add", "set.add", "set.add", "set.add", "set.add"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_body_parts", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_body_rels"], ["", "@", "staticmethod", "\n", "def", "get_rels", "(", ")", ":", "\n", "        ", "rels", "=", "set", "(", ")", "\n", "body_parts", "=", "HumanGraph", ".", "get_body_parts", "(", ")", "\n", "body_rels", "=", "HumanGraph", ".", "get_body_rels", "(", ")", "\n", "# Add body relations", "\n", "for", "relations", "in", "body_rels", ":", "\n", "            ", "split", "=", "relations", ".", "split", "(", "'_'", ")", "\n", "if", "split", "[", "0", "]", "==", "'n'", ":", "\n", "                ", "rels", ".", "add", "(", "split", "[", "0", "]", "+", "'_'", "+", "'r'", "+", "split", "[", "1", "]", ")", "\n", "rels", ".", "add", "(", "split", "[", "0", "]", "+", "'_'", "+", "'l'", "+", "split", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "                ", "rels", ".", "add", "(", "'r'", "+", "split", "[", "0", "]", "+", "'_'", "+", "'r'", "+", "split", "[", "1", "]", ")", "\n", "rels", ".", "add", "(", "'l'", "+", "split", "[", "0", "]", "+", "'_'", "+", "'l'", "+", "split", "[", "1", "]", ")", "\n", "# Add pair relations, relations with body (global node) and self relations", "\n", "", "", "for", "part", "in", "body_parts", ":", "\n", "            ", "if", "part", "==", "'n'", ":", "\n", "                ", "rels", ".", "add", "(", "'b_n'", ")", "\n", "rels", ".", "add", "(", "'n_n'", ")", "# self-loop", "\n", "", "else", ":", "\n", "                ", "rels", ".", "add", "(", "'r'", "+", "part", "+", "'_'", "+", "'l'", "+", "part", ")", "\n", "rels", ".", "add", "(", "'r'", "+", "part", "+", "'_'", "+", "'r'", "+", "part", ")", "# self-loops", "\n", "rels", ".", "add", "(", "'l'", "+", "part", "+", "'_'", "+", "'l'", "+", "part", ")", "# self-loops", "\n", "rels", ".", "add", "(", "'b'", "+", "'_'", "+", "'r'", "+", "part", ")", "\n", "rels", ".", "add", "(", "'b'", "+", "'_'", "+", "'l'", "+", "part", ")", "\n", "# Adding inverses", "\n", "", "", "for", "e", "in", "list", "(", "rels", ")", ":", "\n", "            ", "split", "=", "e", ".", "split", "(", "'_'", ")", "\n", "rels", ".", "add", "(", "split", "[", "1", "]", "+", "'_'", "+", "split", "[", "0", "]", ")", "\n", "# Add global self relations", "\n", "", "rels", ".", "add", "(", "'b_b'", ")", "# self-loop", "\n", "rels", ".", "add", "(", "'sb2b'", ")", "\n", "rels", ".", "add", "(", "'b2sb'", ")", "\n", "\n", "return", "sorted", "(", "list", "(", "rels", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.initializeWithAlternative1": [[122, 228], ["dict", "len", "graph_generator.HumanGraph.get_body_metric_features", "graph_generator.HumanGraph.get_all_features", "len", "numpy.zeros", "numpy.zeros", "graph_generator.HumanGraph.add_nodes", "graph_generator.HumanGraph.get_rels", "math.sin", "math.cos", "dict", "dict", "dict", "dict.clear", "graph_generator.HumanGraph.add_edge", "graph_generator.HumanGraph.add_edge", "cam[].items", "graph_generator.HumanGraph.get_rels", "len", "len", "graph_generator.HumanGraph.get_body_metric_features", "graph_generator.HumanGraph.get_body_metric_features", "graph_generator.HumanGraph.get_body_metric_features", "graph_generator.HumanGraph.get_body_metric_features", "graph_generator.HumanGraph.get_body_metric_features", "graph_generator.HumanGraph.get_cam_types", "graph_generator.HumanGraph.edges_debug[].append", "graph_generator.HumanGraph.edges_debug[].append", "relation.split", "copy.deepcopy", "graph_generator.HumanGraph.get_all_features", "RelTensor", "NormTensor", "tuple", "RelTensor", "NormTensor", "tuple", "graph_generator.HumanGraph.add_edge", "graph_generator.HumanGraph.get_all_features", "graph_generator.HumanGraph.get_all_features", "graph_generator.HumanGraph.edges_debug[].append", "graph_generator.HumanGraph.get_all_features", "graph_generator.HumanGraph.get_all_features", "graph_generator.HumanGraph.get_all_features", "graph_generator.HumanGraph.get_all_features", "graph_generator.HumanGraph.get_all_features", "RelTensor", "NormTensor", "tuple", "HumanGraph.get_rels().index", "HumanGraph.get_rels().index", "joint.split", "joint.split", "graph_generator.HumanGraph.get_all_features", "graph_generator.HumanGraph.get_all_features", "graph_generator.HumanGraph.get_all_features", "joint.split", "joint.split", "graph_generator.HumanGraph.get_rels", "graph_generator.HumanGraph.get_rels", "joint.split", "HumanGraph.get_rels().index", "graph_generator.HumanGraph.get_rels"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_body_metric_features", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_all_features", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_rels", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_rels", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_body_metric_features", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_body_metric_features", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_body_metric_features", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_body_metric_features", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_body_metric_features", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_cam_types", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_all_features", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_all_features", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_all_features", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_all_features", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_all_features", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_all_features", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_all_features", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_all_features", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_all_features", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_all_features", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_all_features", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_rels", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_rels", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_rels"], ["", "def", "initializeWithAlternative1", "(", "self", ",", "data", ")", ":", "\n", "\n", "# We create a map to store the types of the nodes. We'll use it to compute edges' types", "\n", "        ", "id_by_type", "=", "dict", "(", ")", "\n", "self", ".", "num_rels", "=", "len", "(", "HumanGraph", ".", "get_rels", "(", ")", ")", "\n", "\n", "# Feature dimensions", "\n", "body_metric_features", "=", "HumanGraph", ".", "get_body_metric_features", "(", ")", "\n", "all_features", "=", "HumanGraph", ".", "get_all_features", "(", ")", "\n", "feature_dimensions", "=", "len", "(", "all_features", ")", "\n", "\n", "# Compute the number of nodes", "\n", "# One for superbody (global node) + cameras*joints", "\n", "n_nodes", "=", "1", "\n", "for", "cam", "in", "data", "[", "'superbody'", "]", ":", "\n", "            ", "n_nodes", "+=", "1", "+", "len", "(", "cam", "[", "'joints'", "]", ")", "\n", "\n", "# print('Nodes {} body(1) joints({})'.format(n_nodes, len(data['joints'])))", "\n", "\n", "# Create the tensors", "\n", "", "self", ".", "features", "=", "np", ".", "zeros", "(", "[", "n_nodes", ",", "feature_dimensions", "]", ")", "\n", "self", ".", "labels", "=", "np", ".", "zeros", "(", "[", "1", ",", "len", "(", "body_metric_features", ")", "]", ")", "# A 1x5 tensor", "\n", "# Generate the graph itself and fill tensor's data", "\n", "self", ".", "add_nodes", "(", "n_nodes", ")", "\n", "# print(minId, data['links'])", "\n", "self", ".", "labels", "[", "0", "]", "[", "body_metric_features", ".", "index", "(", "'x'", ")", "]", "=", "data", "[", "'superbody'", "]", "[", "0", "]", "[", "'ground_truth'", "]", "[", "0", "]", "/", "4000.", "\n", "self", ".", "labels", "[", "0", "]", "[", "body_metric_features", ".", "index", "(", "'y'", ")", "]", "=", "data", "[", "'superbody'", "]", "[", "0", "]", "[", "'ground_truth'", "]", "[", "1", "]", "/", "4000.", "\n", "self", ".", "labels", "[", "0", "]", "[", "body_metric_features", ".", "index", "(", "'z'", ")", "]", "=", "data", "[", "'superbody'", "]", "[", "0", "]", "[", "'ground_truth'", "]", "[", "2", "]", "/", "4000.", "\n", "self", ".", "labels", "[", "0", "]", "[", "body_metric_features", ".", "index", "(", "'orientation_sin'", ")", "]", "=", "0.7", "*", "math", ".", "sin", "(", "data", "[", "'superbody'", "]", "[", "0", "]", "[", "'ground_truth'", "]", "[", "3", "]", ")", "\n", "self", ".", "labels", "[", "0", "]", "[", "body_metric_features", ".", "index", "(", "'orientation_cos'", ")", "]", "=", "0.7", "*", "math", ".", "cos", "(", "data", "[", "'superbody'", "]", "[", "0", "]", "[", "'ground_truth'", "]", "[", "3", "]", ")", "\n", "#        self.labels[0][body_metric_features.index('timestamp')] = 0.", "\n", "\n", "self", ".", "features", "[", "0", ",", "all_features", ".", "index", "(", "'superbody'", ")", "]", "=", "1.", "\n", "max_used_id", "=", "1", "# 0 for the superbody (global node)", "\n", "\n", "# Feature vectors and ids #", "\n", "# Create subgraph for each camera", "\n", "if", "self", ".", "debug", ":", "\n", "            ", "self", ".", "type_map_debug", "=", "dict", "(", ")", "\n", "self", ".", "edges_debug", "=", "dict", "(", ")", "\n", "counter", "=", "0", "\n", "", "for", "cam", "in", "data", "[", "'superbody'", "]", ":", "\n", "            ", "camera_number", "=", "cam", "[", "'cameraId'", "]", "\n", "typeMap", "=", "dict", "(", ")", "\n", "id_by_type", ".", "clear", "(", ")", "\n", "if", "self", ".", "debug", ":", "\n", "                ", "counter", "+=", "1", "\n", "# print(cam['cameraId'])", "\n", "self", ".", "edges_debug", "[", "camera_number", "]", "=", "[", "]", "\n", "\n", "", "typeMap", "[", "max_used_id", "]", "=", "'b'", "\n", "id_by_type", "[", "'b'", "]", "=", "max_used_id", "\n", "self", ".", "features", "[", "max_used_id", ",", "all_features", ".", "index", "(", "'body'", ")", "]", "=", "1.", "\n", "camera_feature", "=", "HumanGraph", ".", "get_cam_types", "(", ")", "[", "camera_number", "-", "1", "]", "\n", "self", ".", "features", "[", "max_used_id", ",", "all_features", ".", "index", "(", "camera_feature", ")", "]", "=", "1.", "\n", "self", ".", "add_edge", "(", "0", ",", "max_used_id", ",", "{", "'rel_type'", ":", "RelTensor", "(", "[", "[", "HumanGraph", ".", "get_rels", "(", ")", ".", "index", "(", "'sb2b'", ")", "]", "]", ")", ",", "\n", "'norm'", ":", "NormTensor", "(", "[", "[", "1.", "]", "]", ")", "}", ")", "\n", "if", "self", ".", "debug", ":", "\n", "                ", "self", ".", "edges_debug", "[", "camera_number", "]", ".", "append", "(", "tuple", "(", "[", "0", ",", "max_used_id", "]", ")", ")", "\n", "", "self", ".", "add_edge", "(", "max_used_id", ",", "0", ",", "{", "'rel_type'", ":", "RelTensor", "(", "[", "[", "HumanGraph", ".", "get_rels", "(", ")", ".", "index", "(", "'b2sb'", ")", "]", "]", ")", ",", "\n", "'norm'", ":", "NormTensor", "(", "[", "[", "1.", "]", "]", ")", "}", ")", "\n", "if", "self", ".", "debug", ":", "\n", "                ", "self", ".", "edges_debug", "[", "camera_number", "]", ".", "append", "(", "tuple", "(", "[", "max_used_id", ",", "0", "]", ")", ")", "\n", "\n", "", "max_used_id", "+=", "1", "\n", "\n", "# Joints", "\n", "for", "joint", ",", "values", "in", "cam", "[", "'joints'", "]", ".", "items", "(", ")", ":", "\n", "                ", "if", "joint", "==", "'nose'", ":", "# Special case because it hasn't got underscore", "\n", "                    ", "typeMap", "[", "max_used_id", "]", "=", "'n'", "\n", "id_by_type", "[", "'n'", "]", "=", "max_used_id", "\n", "", "elif", "joint", ".", "split", "(", "'_'", ")", "[", "1", "]", "==", "'elbow'", "or", "joint", ".", "split", "(", "'_'", ")", "[", "1", "]", "==", "'eye'", ":", "# Special case because the abbreviation has 2 letters (el, ey)", "\n", "                    ", "typeMap", "[", "max_used_id", "]", "=", "joint", "[", "0", "]", "+", "joint", ".", "split", "(", "'_'", ")", "[", "1", "]", "[", "0", "]", "+", "joint", ".", "split", "(", "'_'", ")", "[", "1", "]", "[", "1", "]", "\n", "id_by_type", "[", "typeMap", "[", "max_used_id", "]", "]", "=", "max_used_id", "\n", "", "else", ":", "\n", "                    ", "typeMap", "[", "max_used_id", "]", "=", "joint", "[", "0", "]", "+", "joint", ".", "split", "(", "'_'", ")", "[", "1", "]", "[", "0", "]", "\n", "id_by_type", "[", "typeMap", "[", "max_used_id", "]", "]", "=", "max_used_id", "\n", "", "self", ".", "features", "[", "max_used_id", ",", "all_features", ".", "index", "(", "joint", ")", "]", "=", "1.", "\n", "if", "USING_3D", ":", "\n", "                    ", "self", ".", "features", "[", "max_used_id", ",", "all_features", ".", "index", "(", "'x_position'", ")", "]", "=", "values", "[", "0", "]", "/", "4000.", "\n", "self", ".", "features", "[", "max_used_id", ",", "all_features", ".", "index", "(", "'y_position'", ")", "]", "=", "values", "[", "1", "]", "/", "4000.", "\n", "self", ".", "features", "[", "max_used_id", ",", "all_features", ".", "index", "(", "'z_position'", ")", "]", "=", "values", "[", "2", "]", "/", "4000.", "\n", "", "self", ".", "features", "[", "max_used_id", ",", "all_features", ".", "index", "(", "'i_coordinate'", ")", "]", "=", "(", "values", "[", "3", "]", "-", "320.", ")", "/", "320.", "\n", "self", ".", "features", "[", "max_used_id", ",", "all_features", ".", "index", "(", "'j_coordinate'", ")", "]", "=", "(", "240.", "-", "values", "[", "4", "]", ")", "/", "240.", "\n", "self", ".", "features", "[", "max_used_id", ",", "all_features", ".", "index", "(", "'score'", ")", "]", "=", "values", "[", "5", "]", "\n", "self", ".", "features", "[", "max_used_id", ",", "all_features", ".", "index", "(", "camera_feature", ")", "]", "=", "1.", "\n", "max_used_id", "+=", "1", "\n", "\n", "# Edges #", "\n", "", "for", "relation", "in", "HumanGraph", ".", "get_rels", "(", ")", ":", "\n", "                ", "if", "relation", "in", "[", "'sb2b'", ",", "'b2sb'", "]", ":", "\n", "                    ", "continue", "\n", "", "split", "=", "relation", ".", "split", "(", "'_'", ")", "\n", "node_type1", "=", "split", "[", "0", "]", "\n", "node_type2", "=", "split", "[", "1", "]", "\n", "if", "(", "node_type1", "in", "id_by_type", ")", "and", "(", "node_type2", "in", "id_by_type", ")", ":", "\n", "                    ", "self", ".", "add_edge", "(", "id_by_type", "[", "node_type1", "]", ",", "id_by_type", "[", "node_type2", "]", ",", "\n", "{", "'rel_type'", ":", "RelTensor", "(", "[", "[", "HumanGraph", ".", "get_rels", "(", ")", ".", "index", "(", "relation", ")", "]", "]", ")", ",", "\n", "'norm'", ":", "NormTensor", "(", "[", "[", "1.", "]", "]", ")", "}", ")", "\n", "if", "self", ".", "debug", ":", "\n", "                        ", "self", ".", "edges_debug", "[", "camera_number", "]", ".", "append", "(", "tuple", "(", "[", "id_by_type", "[", "node_type1", "]", ",", "id_by_type", "[", "node_type2", "]", "]", ")", ")", "\n", "\n", "", "", "", "if", "self", ".", "debug", ":", "\n", "                ", "self", ".", "type_map_debug", "[", "camera_number", "]", "=", "copy", ".", "deepcopy", "(", "typeMap", ")", "\n", "if", "counter", "==", "1", ":", "\n", "                    ", "self", ".", "type_map_debug", "[", "camera_number", "]", "[", "0", "]", "=", "'sb'", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.CalibrationDataset.__init__": [[234, 253], ["object.__init__", "graph_generator.CalibrationDataset._preprocess", "print", "graph_generator.CalibrationDataset.load_from_file", "graph_generator.CalibrationDataset._load", "graph_generator.CalibrationDataset._load", "len"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.pg_rgcn_gat3.PRGAT3.__init__", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.CalibrationDataset._preprocess", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.CalibrationDataset.load_from_file", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.CalibrationDataset._load", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.CalibrationDataset._load"], ["    ", "def", "__init__", "(", "self", ",", "path", ",", "mode", ",", "alt", ",", "init_line", "=", "-", "1", ",", "end_line", "=", "-", "1", ",", "verbose", "=", "True", ")", ":", "\n", "        ", "super", "(", "CalibrationDataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "path", "=", "path", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "alt", "=", "alt", "\n", "self", ".", "init_line", "=", "init_line", "\n", "self", ".", "end_line", "=", "end_line", "\n", "self", ".", "data", "=", "[", "]", "\n", "self", ".", "num_rels", "=", "-", "1", "\n", "try", ":", "\n", "            ", "if", "self", ".", "mode", "!=", "'run'", ":", "\n", "                ", "self", ".", "load_from_file", "(", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "_load", "(", "alt", ")", "\n", "", "", "except", "FileNotFoundError", ":", "\n", "            ", "self", ".", "_load", "(", "alt", ")", "\n", "", "self", ".", "_preprocess", "(", ")", "\n", "if", "verbose", ":", "\n", "            ", "print", "(", "'{} scenarios loaded.'", ".", "format", "(", "len", "(", "self", ".", "data", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.CalibrationDataset.set_of_cams": [[254, 256], ["set"], "methods", ["None"], ["", "", "def", "set_of_cams", "(", "self", ",", "l", ")", ":", "\n", "        ", "return", "set", "(", "[", "scenario", ".", "camera_identifier", "for", "scenario", "in", "l", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.CalibrationDataset.all_cameras": [[257, 261], ["graph_generator.CalibrationDataset.set_of_cams", "len"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.CalibrationDataset.set_of_cams"], ["", "def", "all_cameras", "(", "self", ",", "l", ")", ":", "\n", "        ", "set_cams", "=", "self", ".", "set_of_cams", "(", "l", ")", "\n", "lencams", "=", "len", "(", "set_cams", ")", "\n", "return", "lencams", ">=", "3", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.CalibrationDataset.compute_delta": [[262, 266], ["None"], "methods", ["None"], ["", "def", "compute_delta", "(", "self", ",", "a", ",", "b", ")", ":", "\n", "        ", "delta", "=", "self", ".", "scenarios", "[", "b", "]", "[", "'timestamp'", "]", "-", "self", ".", "scenarios", "[", "a", "]", "[", "'timestamp'", "]", "\n", "assert", "(", "delta", ">=", "0", ")", "\n", "return", "delta", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.CalibrationDataset._load": [[267, 289], ["dgl.batch", "torch.from_numpy", "torch.from_numpy", "type", "open", "range", "delattr", "graph_generator.CalibrationDataset.data.append", "numpy.concatenate", "numpy.concatenate", "graph_generator.CalibrationDataset.save_to_file", "json.loads", "len", "graph_generator.CalibrationDataset.data.append", "graph_generator.HumanGraph", "open.read", "print", "graph_generator.HumanGraph"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.CalibrationDataset.save_to_file"], ["", "def", "_load", "(", "self", ",", "alt", ")", ":", "\n", "        ", "if", "type", "(", "self", ".", "path", ")", "is", "str", ":", "\n", "            ", "file", "=", "open", "(", "self", ".", "path", ",", "\"rb\"", ")", "\n", "self", ".", "scenarios", "=", "json", ".", "loads", "(", "file", ".", "read", "(", ")", ")", "[", "'data_set'", "]", "\n", "# For every measurement...", "\n", "for", "idx", "in", "range", "(", "len", "(", "self", ".", "scenarios", ")", ")", ":", "\n", "# print('==========================================================')", "\n", "                ", "if", "idx", "%", "100", "==", "0", ":", "\n", "                    ", "print", "(", "idx", ")", "\n", "", "if", "idx", ">=", "limit", ":", "\n", "                    ", "break", "\n", "", "self", ".", "data", ".", "append", "(", "HumanGraph", "(", "self", ".", "scenarios", "[", "idx", "]", ",", "alt", ")", ")", "\n", "", "delattr", "(", "self", ",", "'scenarios'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "data", ".", "append", "(", "HumanGraph", "(", "self", ".", "path", ",", "alt", ")", ")", "\n", "\n", "", "self", ".", "num_rels", "=", "self", ".", "data", "[", "0", "]", ".", "num_rels", "\n", "self", ".", "graph", "=", "dgl", ".", "batch", "(", "self", ".", "data", ")", "\n", "self", ".", "features", "=", "torch", ".", "from_numpy", "(", "np", ".", "concatenate", "(", "[", "element", ".", "features", "for", "element", "in", "self", ".", "data", "]", ")", ")", "\n", "self", ".", "labels", "=", "torch", ".", "from_numpy", "(", "np", ".", "concatenate", "(", "[", "element", ".", "labels", "for", "element", "in", "self", ".", "data", "]", ")", ")", "\n", "if", "self", ".", "mode", "is", "not", "'run'", ":", "\n", "            ", "self", ".", "save_to_file", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.CalibrationDataset.get_dataset_name": [[290, 292], ["str"], "methods", ["None"], ["", "", "def", "get_dataset_name", "(", "self", ")", ":", "\n", "        ", "return", "'dataset_'", "+", "self", ".", "mode", "+", "'_s_'", "+", "str", "(", "limit", ")", "+", "'.pickle'", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.CalibrationDataset.load_from_file": [[293, 303], ["graph_generator.CalibrationDataset.get_dataset_name", "dgl.batch", "torch.from_numpy", "torch.from_numpy", "open", "pickle.load", "numpy.concatenate", "numpy.concatenate"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.CalibrationDataset.get_dataset_name"], ["", "def", "load_from_file", "(", "self", ")", ":", "\n", "        ", "filename", "=", "self", ".", "get_dataset_name", "(", ")", "\n", "\n", "with", "open", "(", "path_saves", "+", "filename", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "data", "=", "pickle", ".", "load", "(", "f", ")", "\n", "\n", "", "self", ".", "num_rels", "=", "self", ".", "data", "[", "0", "]", ".", "num_rels", "\n", "self", ".", "graph", "=", "dgl", ".", "batch", "(", "self", ".", "data", ")", "\n", "self", ".", "features", "=", "torch", ".", "from_numpy", "(", "np", ".", "concatenate", "(", "[", "element", ".", "features", "for", "element", "in", "self", ".", "data", "]", ")", ")", "\n", "self", ".", "labels", "=", "torch", ".", "from_numpy", "(", "np", ".", "concatenate", "(", "[", "element", ".", "labels", "for", "element", "in", "self", ".", "data", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.CalibrationDataset.save_to_file": [[304, 310], ["graph_generator.CalibrationDataset.get_dataset_name", "os.makedirs", "os.path.dirname", "open", "pickle.dump"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.CalibrationDataset.get_dataset_name"], ["", "def", "save_to_file", "(", "self", ")", ":", "\n", "        ", "filename", "=", "self", ".", "get_dataset_name", "(", ")", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "dirname", "(", "path_saves", ")", ",", "exist_ok", "=", "True", ")", "\n", "\n", "with", "open", "(", "path_saves", "+", "filename", ",", "'wb'", ")", "as", "f", ":", "\n", "            ", "pickle", ".", "dump", "(", "self", ".", "data", ",", "f", ",", "pickle", ".", "HIGHEST_PROTOCOL", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.CalibrationDataset._preprocess": [[311, 313], ["None"], "methods", ["None"], ["", "", "def", "_preprocess", "(", "self", ")", ":", "\n", "        ", "pass", "# We don't really need to do anything, all pre-processing is done in the _load method", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.CalibrationDataset.__len__": [[314, 316], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.CalibrationDataset.__getitem__": [[317, 319], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "return", "self", ".", "data", "[", "item", "]", ",", "self", ".", "data", "[", "item", "]", ".", "features", ",", "self", ".", "data", "[", "item", "]", ".", "labels", "\n", "", "", ""]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.train.activation_functions": [[24, 39], ["tuple", "ret.append", "ret.append", "ret.append", "ret.append", "print", "sys.exit"], "function", ["None"], ["", "def", "activation_functions", "(", "activation_tuple_src", ")", ":", "\n", "    ", "ret", "=", "[", "]", "\n", "for", "x", "in", "activation_tuple_src", ":", "\n", "        ", "if", "x", "==", "'relu'", ":", "\n", "            ", "ret", ".", "append", "(", "F", ".", "relu", ")", "\n", "", "elif", "x", "==", "'elu'", ":", "\n", "            ", "ret", ".", "append", "(", "F", ".", "elu", ")", "\n", "", "elif", "x", "==", "'tanh'", ":", "\n", "            ", "ret", ".", "append", "(", "torch", ".", "tanh", ")", "\n", "", "elif", "x", "==", "'leaky_relu'", ":", "\n", "            ", "ret", ".", "append", "(", "F", ".", "leaky_relu", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'Unknown activation function {}.'", ".", "format", "(", "x", ")", ")", "\n", "sys", ".", "exit", "(", "-", "1", ")", "\n", "", "", "return", "tuple", "(", "ret", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.train.describe_model": [[40, 45], ["print", "model.state_dict", "print", "[].size", "model.state_dict"], "function", ["None"], ["", "def", "describe_model", "(", "model", ")", ":", "\n", "# Print model's state_dict", "\n", "    ", "print", "(", "\"Model's state_dict:\"", ")", "\n", "for", "param_tensor", "in", "model", ".", "state_dict", "(", ")", ":", "\n", "        ", "print", "(", "param_tensor", ",", "\"\\t\"", ",", "model", ".", "state_dict", "(", ")", "[", "param_tensor", "]", ".", "size", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.train.collate": [[47, 53], ["map", "dgl.batch", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "zip", "numpy.concatenate", "numpy.concatenate"], "function", ["None"], ["", "", "def", "collate", "(", "sample", ")", ":", "\n", "    ", "graphs", ",", "feats", ",", "labels", "=", "map", "(", "list", ",", "zip", "(", "*", "sample", ")", ")", "\n", "graph", "=", "dgl", ".", "batch", "(", "graphs", ")", "\n", "feats", "=", "torch", ".", "from_numpy", "(", "np", ".", "concatenate", "(", "feats", ")", ")", "\n", "labels", "=", "torch", ".", "from_numpy", "(", "np", ".", "concatenate", "(", "labels", ")", ")", "\n", "return", "graph", ",", "feats", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.train.evaluate": [[55, 71], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "model.eval", "loss_fcn", "output[].data.cpu().numpy", "sklearn.metrics.mean_squared_error", "labels.float", "labels.data.cpu().numpy", "loss_fcn.item", "model", "model", "train.getMaskForBatch", "output[].data.cpu", "feats.float", "subgraph.edata[].to().squeeze", "feats.float", "labels.data.cpu", "subgraph.edata[].to", "train.getMaskForBatch"], "function", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.train_batched.getMaskForBatch", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.train_batched.getMaskForBatch"], ["", "def", "evaluate", "(", "feats", ",", "model", ",", "subgraph", ",", "labels", ",", "loss_fcn", ",", "fw", ",", "net_class", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "model", ".", "eval", "(", ")", "\n", "if", "fw", "==", "'dgl'", ":", "\n", "            ", "model", ".", "g", "=", "subgraph", "\n", "for", "layer", "in", "model", ".", "layers", ":", "\n", "                ", "layer", ".", "g", "=", "subgraph", "\n", "", "if", "net_class", "in", "[", "RGCN", "]", ":", "\n", "                ", "output", "=", "model", "(", "feats", ".", "float", "(", ")", ",", "subgraph", ".", "edata", "[", "'rel_type'", "]", ".", "to", "(", "device", ")", ".", "squeeze", "(", ")", ")", "\n", "", "else", ":", "\n", "                ", "output", "=", "model", "(", "feats", ".", "float", "(", ")", ")", "\n", "", "", "oput", "=", "output", "[", "getMaskForBatch", "(", "subgraph", ")", "]", "\n", "loss_data", "=", "loss_fcn", "(", "oput", ",", "labels", ".", "float", "(", ")", ")", "\n", "predict", "=", "output", "[", "getMaskForBatch", "(", "subgraph", ")", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "score", "=", "mean_squared_error", "(", "labels", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "predict", ")", "\n", "return", "score", ",", "loss_data", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.train.getMaskForBatch": [[73, 80], ["dgl.unbatch", "indexes.append", "g.number_of_nodes"], "function", ["None"], ["", "", "def", "getMaskForBatch", "(", "subgraph", ")", ":", "\n", "    ", "first_node_index_in_the_next_graph", "=", "0", "\n", "indexes", "=", "[", "]", "\n", "for", "g", "in", "dgl", ".", "unbatch", "(", "subgraph", ")", ":", "\n", "        ", "indexes", ".", "append", "(", "first_node_index_in_the_next_graph", ")", "\n", "first_node_index_in_the_next_graph", "+=", "g", ".", "number_of_nodes", "(", ")", "\n", "", "return", "indexes", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.train.num_of_params": [[82, 85], ["filter", "sum", "model.parameters", "numpy.prod", "p.size"], "function", ["None"], ["", "def", "num_of_params", "(", "model", ")", ":", "\n", "    ", "model_parameters", "=", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "model", ".", "parameters", "(", ")", ")", "\n", "return", "sum", "(", "[", "np", ".", "prod", "(", "p", ".", "size", "(", ")", ")", "for", "p", "in", "model_parameters", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.train.signal_handler": [[88, 98], ["print", "print", "sys.exit"], "function", ["None"], ["def", "signal_handler", "(", "sig", ",", "frame", ")", ":", "\n", "    ", "global", "ctrl_c_counter", "\n", "ctrl_c_counter", "+=", "1", "\n", "if", "ctrl_c_counter", ">=", "6", ":", "\n", "        ", "sys", ".", "exit", "(", "-", "1", ")", "\n", "", "elif", "ctrl_c_counter", ">=", "3", ":", "\n", "        ", "global", "stop_training", "\n", "stop_training", "=", "True", "\n", "", "print", "(", "'\\nIf you press Ctr+c 3  times we will stop    _SAVING_   the training information ({} times)'", ".", "format", "(", "ctrl_c_counter", ")", ")", "\n", "print", "(", "'If you press Ctr+c 6+ times we will stop  _NOT SAVING_ the training information ({} times)'", ".", "format", "(", "ctrl_c_counter", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.train.main": [[103, 292], ["print", "torch.nn.MSELoss", "torch.nn.MSELoss", "torch.nn.MSELoss", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "graph_generator.CalibrationDataset", "print", "graph_generator.CalibrationDataset", "print", "graph_generator.CalibrationDataset", "print", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "len", "print", "print", "print", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "nets.rgcnDGL.RGCN.to", "range", "nets.rgcnDGL.RGCN.eval", "enumerate", "print", "pickle.dump", "print", "net.lower", "graph_generator.HumanGraph.get_rels", "nets.rgcnDGL.RGCN.parameters", "nets.rgcnDGL.RGCN.train", "enumerate", "numpy.array().mean", "print", "subgraph.set_n_initializer", "subgraph.set_e_initializer", "feats.to.to", "labels.to.to", "test_score_list.append", "numpy.array().mean", "train.num_of_params", "open", "numpy.array().mean", "net.lower", "net_class", "print", "subgraph.set_n_initializer", "subgraph.set_e_initializer", "feats.to.to", "labels.to.to", "torch.nn.MSELoss.", "torch.optim.Adam.zero_grad", "[].clone", "loss_fcn.backward", "torch.optim.Adam.step", "[].clone", "torch.equal", "torch.equal", "torch.equal", "loss_list.append", "enumerate", "numpy.array().mean", "numpy.array().mean", "numpy.array().mean", "train.num_of_params", "train.activation_functions", "nets.rgcnDGL.RGCN", "print", "print", "sys.exit", "labels.to.float", "print", "sys.exit", "loss_fcn.item", "numpy.array", "print", "subgraph.set_n_initializer", "subgraph.set_e_initializer", "feats.to.to", "labels.to.to", "train.evaluate", "score_list.append", "val_loss_list.append", "print", "print", "torch.save", "torch.save", "torch.save", "pickle.dump", "train.evaluate", "numpy.array", "numpy.array", "nets.rgcnDGL.RGCN.", "nets.rgcnDGL.RGCN.", "feats.to.float", "labels.to.float", "numpy.array", "numpy.array", "nets.rgcnDGL.RGCN.state_dict", "open", "labels.to.float", "numpy.array", "train.activation_functions", "feats.to.float", "subgraph.edata[].squeeze().to", "feats.to.float", "train.getMaskForBatch", "list", "list", "train.activation_functions", "nets.rgcnDGL.RGCN.parameters", "nets.rgcnDGL.RGCN.parameters", "subgraph.edata[].squeeze"], "function", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_rels", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.train_batched.num_of_params", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.train_batched.num_of_params", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.train_batched.activation_functions", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.train_batched.evaluate", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.train_batched.evaluate", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.train_batched.activation_functions", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.train_batched.getMaskForBatch", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.train_batched.activation_functions"], ["def", "main", "(", "training_file", ",", "dev_file", ",", "test_file", ",", "epochs", "=", "None", ",", "patience", "=", "None", ",", "heads", "=", "None", ",", "num_layers", "=", "None", ",", "\n", "num_hidden", "=", "None", ",", "residual", "=", "None", ",", "in_drop", "=", "None", ",", "attn_drop", "=", "None", ",", "lr", "=", "None", ",", "weight_decay", "=", "None", ",", "\n", "alpha", "=", "None", ",", "batch_size", "=", "None", ",", "graph_type", "=", "None", ",", "net", "=", "None", ",", "activations", "=", "(", "'elu'", ",", "'tanh'", ")", ",", "fw", "=", "'dgl'", ")", ":", "\n", "\n", "    ", "if", "net", ".", "lower", "(", ")", "==", "'GAT'", ".", "lower", "(", ")", ":", "\n", "        ", "net_class", "=", "GAT", "\n", "", "elif", "net", ".", "lower", "(", ")", "==", "'RGCN'", ".", "lower", "(", ")", ":", "\n", "        ", "net_class", "=", "RGCN", "\n", "\n", "", "print", "(", "'DEVICE'", ",", "device", ")", "\n", "\n", "# define loss function", "\n", "loss_fcn", "=", "torch", ".", "nn", ".", "MSELoss", "(", ")", "\n", "\n", "print", "(", "'========================='", ")", "\n", "print", "(", "'HEADS'", ",", "heads", ")", "\n", "print", "(", "'LAYERS'", ",", "num_layers", ")", "\n", "print", "(", "'HIDDEN'", ",", "num_hidden", ")", "\n", "print", "(", "'RESIDUAL'", ",", "residual", ")", "\n", "print", "(", "'inDROP'", ",", "in_drop", ")", "\n", "print", "(", "'atDROP'", ",", "attn_drop", ")", "\n", "print", "(", "'LR'", ",", "lr", ")", "\n", "print", "(", "'DECAY'", ",", "weight_decay", ")", "\n", "print", "(", "'ALPHA'", ",", "alpha", ")", "\n", "print", "(", "'BATCH'", ",", "batch_size", ")", "\n", "print", "(", "'GRAPH_ALT'", ",", "graph_type", ")", "\n", "print", "(", "'ARCHITECTURE'", ",", "net", ")", "\n", "print", "(", "'========================='", ")", "\n", "\n", "# create the dataset", "\n", "print", "(", "'Loading training set...'", ")", "\n", "train_dataset", "=", "CalibrationDataset", "(", "training_file", ",", "mode", "=", "'train'", ",", "alt", "=", "graph_type", ")", "\n", "print", "(", "'Loading dev set...'", ")", "\n", "valid_dataset", "=", "CalibrationDataset", "(", "dev_file", ",", "mode", "=", "'valid'", ",", "alt", "=", "graph_type", ")", "\n", "print", "(", "'Loading test set...'", ")", "\n", "test_dataset", "=", "CalibrationDataset", "(", "test_file", ",", "mode", "=", "'test'", ",", "alt", "=", "graph_type", ")", "\n", "print", "(", "'Done loading files'", ")", "\n", "train_dataloader", "=", "DataLoader", "(", "train_dataset", ",", "batch_size", "=", "batch_size", ",", "collate_fn", "=", "collate", ")", "\n", "valid_dataloader", "=", "DataLoader", "(", "valid_dataset", ",", "batch_size", "=", "batch_size", ",", "collate_fn", "=", "collate", ")", "\n", "test_dataloader", "=", "DataLoader", "(", "test_dataset", ",", "batch_size", "=", "batch_size", ",", "collate_fn", "=", "collate", ")", "\n", "\n", "num_rels", "=", "len", "(", "HumanGraph", ".", "get_rels", "(", ")", ")", "\n", "cur_step", "=", "0", "\n", "best_loss", "=", "-", "1", "\n", "n_classes", "=", "train_dataset", ".", "labels", ".", "shape", "[", "1", "]", "\n", "print", "(", "'Number of classes:  {}'", ".", "format", "(", "n_classes", ")", ")", "\n", "num_feats", "=", "train_dataset", ".", "features", ".", "shape", "[", "1", "]", "\n", "print", "(", "'Number of features: {}'", ".", "format", "(", "num_feats", ")", ")", "\n", "g", "=", "train_dataset", ".", "graph", "\n", "# define the model", "\n", "\n", "print", "(", "'LAST'", ",", "fw", ",", "net", ")", "\n", "\n", "\n", "\n", "if", "fw", "==", "'dgl'", ":", "\n", "        ", "if", "net_class", "in", "[", "GAT", "]", ":", "\n", "            ", "model", "=", "net_class", "(", "g", ",", "num_layers", ",", "num_feats", ",", "num_hidden", ",", "n_classes", ",", "heads", ",", "activation_functions", "(", "activations", ")", ",", "\n", "in_drop", ",", "attn_drop", ",", "alpha", ",", "residual", ")", "\n", "", "elif", "net_class", "in", "[", "RGCN", "]", ":", "\n", "            ", "model", "=", "RGCN", "(", "g", ",", "gnn_layers", "=", "num_layers", ",", "in_dim", "=", "num_feats", ",", "hidden_dimensions", "=", "num_hidden", ",", "num_rels", "=", "num_rels", ",", "\n", "activations", "=", "activation_functions", "(", "activations", ")", ",", "feat_drop", "=", "in_drop", ")", "\n", "print", "(", "f'CREATING RGCN(GRAPH, gnn_layers:{num_layers}, num_feats:{num_feats}, num_hidden:{num_hidden}, num_rels:{num_rels}, non-linearity:{activation_functions(activations)}, drop:{in_drop})'", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'Unhandled'", ",", "net", ")", "\n", "sys", ".", "exit", "(", "1", ")", "\n", "#Describe the model", "\n", "#describe_model(model)", "\n", "\n", "# define the optimizer", "\n", "", "", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "weight_decay", "=", "weight_decay", ")", "\n", "# for name, param in model.named_parameters():", "\n", "# if param.requires_grad:", "\n", "# print(name, param.data.shape)", "\n", "model", "=", "model", ".", "to", "(", "device", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "epochs", ")", ":", "\n", "        ", "if", "stop_training", ":", "\n", "            ", "print", "(", "\"Stopping training. Please wait.\"", ")", "\n", "break", "\n", "", "model", ".", "train", "(", ")", "\n", "loss_list", "=", "[", "]", "\n", "for", "batch", ",", "data", "in", "enumerate", "(", "train_dataloader", ")", ":", "\n", "            ", "subgraph", ",", "feats", ",", "labels", "=", "data", "\n", "subgraph", ".", "set_n_initializer", "(", "dgl", ".", "init", ".", "zero_initializer", ")", "\n", "subgraph", ".", "set_e_initializer", "(", "dgl", ".", "init", ".", "zero_initializer", ")", "\n", "feats", "=", "feats", ".", "to", "(", "device", ")", "\n", "labels", "=", "labels", ".", "to", "(", "device", ")", "\n", "if", "fw", "==", "'dgl'", ":", "\n", "                ", "model", ".", "g", "=", "subgraph", "\n", "for", "layer", "in", "model", ".", "layers", ":", "\n", "                    ", "layer", ".", "g", "=", "subgraph", "\n", "", "if", "net_class", "in", "[", "RGCN", "]", ":", "\n", "                    ", "logits", "=", "model", "(", "feats", ".", "float", "(", ")", ",", "subgraph", ".", "edata", "[", "'rel_type'", "]", ".", "squeeze", "(", ")", ".", "to", "(", "device", ")", ")", "\n", "", "else", ":", "\n", "                    ", "logits", "=", "model", "(", "feats", ".", "float", "(", ")", ")", "\n", "", "", "loss", "=", "loss_fcn", "(", "logits", "[", "getMaskForBatch", "(", "subgraph", ")", "]", ",", "labels", ".", "float", "(", ")", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "a", "=", "list", "(", "model", ".", "parameters", "(", ")", ")", "[", "0", "]", ".", "clone", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "b", "=", "list", "(", "model", ".", "parameters", "(", ")", ")", "[", "0", "]", ".", "clone", "(", ")", "\n", "not_learning", "=", "torch", ".", "equal", "(", "a", ".", "data", ",", "b", ".", "data", ")", "\n", "if", "not_learning", ":", "\n", "                ", "print", "(", "'Not learning'", ")", "\n", "sys", ".", "exit", "(", "1", ")", "\n", "", "loss_list", ".", "append", "(", "loss", ".", "item", "(", ")", ")", "\n", "", "loss_data", "=", "np", ".", "array", "(", "loss_list", ")", ".", "mean", "(", ")", "\n", "print", "(", "'Loss: {}'", ".", "format", "(", "loss_data", ")", ")", "\n", "if", "epoch", "%", "5", "==", "0", ":", "\n", "            ", "if", "epoch", "%", "5", "==", "0", ":", "\n", "                ", "print", "(", "\"Epoch {:05d} | Loss: {:.4f} | Patience: {} | \"", ".", "format", "(", "epoch", ",", "loss_data", ",", "cur_step", ")", ",", "end", "=", "''", ")", "\n", "", "score_list", "=", "[", "]", "\n", "val_loss_list", "=", "[", "]", "\n", "for", "batch", ",", "valid_data", "in", "enumerate", "(", "valid_dataloader", ")", ":", "\n", "                ", "subgraph", ",", "feats", ",", "labels", "=", "valid_data", "\n", "subgraph", ".", "set_n_initializer", "(", "dgl", ".", "init", ".", "zero_initializer", ")", "\n", "subgraph", ".", "set_e_initializer", "(", "dgl", ".", "init", ".", "zero_initializer", ")", "\n", "feats", "=", "feats", ".", "to", "(", "device", ")", "\n", "labels", "=", "labels", ".", "to", "(", "device", ")", "\n", "score", ",", "val_loss", "=", "evaluate", "(", "feats", ".", "float", "(", ")", ",", "model", ",", "subgraph", ",", "labels", ".", "float", "(", ")", ",", "loss_fcn", ",", "fw", ",", "net_class", ")", "\n", "score_list", ".", "append", "(", "score", ")", "\n", "val_loss_list", ".", "append", "(", "val_loss", ")", "\n", "", "mean_score", "=", "np", ".", "array", "(", "score_list", ")", ".", "mean", "(", ")", "\n", "mean_val_loss", "=", "np", ".", "array", "(", "val_loss_list", ")", ".", "mean", "(", ")", "\n", "if", "epoch", "%", "5", "==", "0", ":", "\n", "                ", "print", "(", "\"Score: {:.4f} MEAN: {:.4f} BEST: {:.4f}\"", ".", "format", "(", "mean_score", ",", "mean_val_loss", ",", "best_loss", ")", ")", "\n", "# early stop", "\n", "", "if", "best_loss", ">", "mean_val_loss", "or", "best_loss", "<", "0", ":", "\n", "                ", "print", "(", "'Saving...'", ")", "\n", "best_loss", "=", "mean_val_loss", "\n", "# Save the model", "\n", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "'calibration_'", "+", "fw", "+", "'_'", "+", "net", "+", "'.tch'", ")", "\n", "params", "=", "{", "'loss'", ":", "best_loss", ",", "\n", "'net'", ":", "net", ",", "\n", "'fw'", ":", "fw", ",", "\n", "'num_layers'", ":", "num_layers", ",", "\n", "'num_feats'", ":", "num_feats", ",", "\n", "'num_hidden'", ":", "num_hidden", ",", "\n", "'graph_type'", ":", "graph_type", ",", "\n", "'n_classes'", ":", "n_classes", ",", "\n", "'heads'", ":", "heads", ",", "\n", "'F'", ":", "F", ".", "relu", ",", "\n", "'in_drop'", ":", "in_drop", ",", "\n", "'attn_drop'", ":", "attn_drop", ",", "\n", "'alpha'", ":", "alpha", ",", "\n", "'residual'", ":", "residual", ",", "\n", "'non-linearity'", ":", "activations", ",", "\n", "'num_rels'", ":", "num_rels", "\n", "}", "\n", "pickle", ".", "dump", "(", "params", ",", "open", "(", "'calibration_'", "+", "fw", "+", "'_'", "+", "net", "+", "'_tmp.prms'", ",", "'wb'", ")", ")", "\n", "cur_step", "=", "0", "\n", "", "else", ":", "\n", "                ", "cur_step", "+=", "1", "\n", "if", "cur_step", ">=", "patience", ":", "\n", "                    ", "break", "\n", "", "", "", "", "model", ".", "eval", "(", ")", "\n", "test_score_list", "=", "[", "]", "\n", "for", "batch", ",", "test_data", "in", "enumerate", "(", "test_dataloader", ")", ":", "\n", "        ", "subgraph", ",", "feats", ",", "labels", "=", "test_data", "\n", "subgraph", ".", "set_n_initializer", "(", "dgl", ".", "init", ".", "zero_initializer", ")", "\n", "subgraph", ".", "set_e_initializer", "(", "dgl", ".", "init", ".", "zero_initializer", ")", "\n", "feats", "=", "feats", ".", "to", "(", "device", ")", "\n", "labels", "=", "labels", ".", "to", "(", "device", ")", "\n", "test_score_list", ".", "append", "(", "evaluate", "(", "feats", ",", "model", ",", "subgraph", ",", "labels", ".", "float", "(", ")", ",", "loss_fcn", ",", "fw", ",", "net_class", ")", "[", "1", "]", ")", "\n", "", "print", "(", "\"MSE for the test set {}\"", ".", "format", "(", "np", ".", "array", "(", "test_score_list", ")", ".", "mean", "(", ")", ")", ")", "\n", "params", "=", "{", "'loss'", ":", "best_loss", ",", "\n", "'test_loss'", ":", "np", ".", "array", "(", "test_score_list", ")", ".", "mean", "(", ")", ",", "\n", "'net'", ":", "net", ",", "\n", "'fw'", ":", "fw", ",", "\n", "'num_gnn_layers'", ":", "num_layers", ",", "\n", "'num_feats'", ":", "num_feats", ",", "\n", "'num_hidden'", ":", "num_hidden", ",", "\n", "'graph_type'", ":", "graph_type", ",", "\n", "'n_classes'", ":", "n_classes", ",", "\n", "'heads'", ":", "heads", ",", "\n", "'F'", ":", "F", ".", "relu", ",", "\n", "'in_drop'", ":", "in_drop", ",", "\n", "'attn_drop'", ":", "attn_drop", ",", "\n", "'alpha'", ":", "alpha", ",", "\n", "'residual'", ":", "residual", ",", "\n", "'non-linearity'", ":", "activations", ",", "\n", "'num_rels'", ":", "num_rels", ",", "\n", "'parameters'", ":", "num_of_params", "(", "model", ")", "\n", "}", "\n", "pickle", ".", "dump", "(", "params", ",", "open", "(", "'calibration_'", "+", "fw", "+", "'_'", "+", "net", "+", "'.prms'", ",", "'wb'", ")", ")", "\n", "print", "(", "'Number of parameters in the model {}.'", ".", "format", "(", "num_of_params", "(", "model", ")", ")", ")", "\n", "\n", "return", "best_loss", ",", "np", ".", "array", "(", "test_score_list", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.testgui.TestGUI.__init__": [[18, 86], ["PySide2.QtWidgets.QApplication", "QFile", "QFile.open", "PySide2.QtUiTools.QUiLoader", "PySide2.QtUiTools.QUiLoader.load", "QFile.close", "PySide2.QtWidgets.QGraphicsScene", "testgui.TestGUI.scene_gt.setSceneRect", "PySide2.QtWidgets.QGraphicsView", "testgui.TestGUI.view_gt.scale", "testgui.TestGUI.view_gt.resize", "testgui.TestGUI.scene_gt.addEllipse", "testgui.TestGUI.personPos_gt.setFlag", "testgui.TestGUI.personPos_gt.setPos", "testgui.TestGUI.scene_gt.addRect", "testgui.TestGUI.personAng_gt.setFlag", "testgui.TestGUI.personAng_gt.setPos", "PySide2.QtWidgets.QGraphicsScene", "testgui.TestGUI.scene_cc.setSceneRect", "PySide2.QtWidgets.QGraphicsView", "testgui.TestGUI.view_cc.scale", "testgui.TestGUI.view_cc.resize", "testgui.TestGUI.scene_cc.addEllipse", "testgui.TestGUI.personPos_cc.setFlag", "testgui.TestGUI.personPos_cc.setPos", "testgui.TestGUI.scene_cc.addRect", "testgui.TestGUI.personAng_cc.setFlag", "testgui.TestGUI.personAng_cc.setPos", "PySide2.QtWidgets.QGraphicsScene", "testgui.TestGUI.scene_nn.setSceneRect", "PySide2.QtWidgets.QGraphicsView", "testgui.TestGUI.view_nn.scale", "testgui.TestGUI.view_nn.resize", "testgui.TestGUI.scene_nn.addEllipse", "testgui.TestGUI.personPos_nn.setFlag", "testgui.TestGUI.personPos_nn.setPos", "testgui.TestGUI.scene_nn.addRect", "testgui.TestGUI.personAng_nn.setFlag", "testgui.TestGUI.personAng_nn.setPos", "testgui.TestGUI.loadData", "testgui.TestGUI.window.instantScrollBar.valueChanged.connect", "QTimer", "testgui.TestGUI.timer.timeout.connect", "testgui.TestGUI.timer.start", "testgui.TestGUI.window.show", "testgui.TestGUI.app.exec_", "sys.exit", "sys.exit", "sys.exit", "sys.exit", "testgui.TestGUI.window.scene_gt.geometry().width", "testgui.TestGUI.window.scene_gt.geometry().height", "QRectF", "QPen", "QBrush", "QRectF", "QPen", "QBrush", "testgui.TestGUI.window.scene_cc.geometry().width", "testgui.TestGUI.window.scene_cc.geometry().height", "QRectF", "QPen", "QBrush", "QRectF", "QPen", "QBrush", "testgui.TestGUI.window.scene_nn.geometry().width", "testgui.TestGUI.window.scene_nn.geometry().height", "QRectF", "QPen", "QBrush", "QRectF", "QPen", "QBrush", "QColor", "QColor", "QColor", "QColor", "QColor", "QColor", "QColor", "QColor", "QColor", "QColor", "QColor", "QColor", "testgui.TestGUI.window.scene_gt.geometry", "testgui.TestGUI.window.scene_gt.geometry", "testgui.TestGUI.window.scene_cc.geometry", "testgui.TestGUI.window.scene_cc.geometry", "testgui.TestGUI.window.scene_nn.geometry", "testgui.TestGUI.window.scene_nn.geometry"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.testgui.TestGUI.loadData"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "app", "=", "QApplication", "(", "sys", ".", "argv", ")", "\n", "ui_file", "=", "QFile", "(", "\"testgui.ui\"", ")", "\n", "ui_file", ".", "open", "(", "QFile", ".", "ReadOnly", ")", "\n", "\n", "loader", "=", "QUiLoader", "(", ")", "\n", "self", ".", "window", "=", "loader", ".", "load", "(", "ui_file", ")", "\n", "ui_file", ".", "close", "(", ")", "\n", "self", ".", "scene_gt", "=", "QGraphicsScene", "(", ")", "\n", "self", ".", "scene_gt", ".", "setSceneRect", "(", "-", "2000", ",", "-", "3000", ",", "4000", ",", "6000", ")", "\n", "\n", "self", ".", "view_gt", "=", "QGraphicsView", "(", "self", ".", "scene_gt", ",", "self", ".", "window", ".", "scene_gt", ")", "\n", "self", ".", "view_gt", ".", "scale", "(", "-", "0.1", ",", "0.1", ")", ";", "\n", "\n", "self", ".", "view_gt", ".", "resize", "(", "self", ".", "window", ".", "scene_gt", ".", "geometry", "(", ")", ".", "width", "(", ")", ",", "self", ".", "window", ".", "scene_gt", ".", "geometry", "(", ")", ".", "height", "(", ")", ")", "\n", "\n", "self", ".", "personPos_gt", "=", "self", ".", "scene_gt", ".", "addEllipse", "(", "QRectF", "(", "-", "200", ",", "-", "200", ",", "400", ",", "400", ")", ",", "QPen", "(", "QColor", "(", "\"LightGreen\"", ")", ")", ",", "QBrush", "(", "QColor", "(", "\"LightGreen\"", ")", ")", ")", "\n", "self", ".", "personPos_gt", ".", "setFlag", "(", "QGraphicsItem", ".", "ItemIsMovable", ")", "\n", "self", ".", "personPos_gt", ".", "setPos", "(", "0", ",", "0", ")", "\n", "self", ".", "personAng_gt", "=", "self", ".", "scene_gt", ".", "addRect", "(", "QRectF", "(", "-", "10", ",", "0", ",", "20", ",", "300", ")", ",", "QPen", "(", "QColor", "(", "\"Green\"", ")", ")", ",", "QBrush", "(", "QColor", "(", "\"Green\"", ")", ")", ")", "\n", "self", ".", "personAng_gt", ".", "setFlag", "(", "QGraphicsItem", ".", "ItemIsMovable", ")", "\n", "self", ".", "personAng_gt", ".", "setPos", "(", "0", ",", "0", ")", "\n", "\n", "\n", "self", ".", "scene_cc", "=", "QGraphicsScene", "(", ")", "\n", "self", ".", "scene_cc", ".", "setSceneRect", "(", "-", "2000", ",", "-", "3000", ",", "4000", ",", "6000", ")", "\n", "\n", "self", ".", "view_cc", "=", "QGraphicsView", "(", "self", ".", "scene_cc", ",", "self", ".", "window", ".", "scene_cc", ")", "\n", "self", ".", "view_cc", ".", "scale", "(", "-", "0.1", ",", "0.1", ")", ";", "\n", "\n", "self", ".", "view_cc", ".", "resize", "(", "self", ".", "window", ".", "scene_cc", ".", "geometry", "(", ")", ".", "width", "(", ")", ",", "self", ".", "window", ".", "scene_cc", ".", "geometry", "(", ")", ".", "height", "(", ")", ")", "\n", "\n", "self", ".", "personPos_cc", "=", "self", ".", "scene_cc", ".", "addEllipse", "(", "QRectF", "(", "-", "200", ",", "-", "200", ",", "400", ",", "400", ")", ",", "QPen", "(", "QColor", "(", "\"Red\"", ")", ")", ",", "QBrush", "(", "QColor", "(", "\"Red\"", ")", ")", ")", "\n", "self", ".", "personPos_cc", ".", "setFlag", "(", "QGraphicsItem", ".", "ItemIsMovable", ")", "\n", "self", ".", "personPos_cc", ".", "setPos", "(", "0", ",", "0", ")", "\n", "self", ".", "personAng_cc", "=", "self", ".", "scene_cc", ".", "addRect", "(", "QRectF", "(", "-", "10", ",", "0", ",", "20", ",", "300", ")", ",", "QPen", "(", "QColor", "(", "\"Black\"", ")", ")", ",", "QBrush", "(", "QColor", "(", "\"Black\"", ")", ")", ")", "\n", "self", ".", "personAng_cc", ".", "setFlag", "(", "QGraphicsItem", ".", "ItemIsMovable", ")", "\n", "self", ".", "personAng_cc", ".", "setPos", "(", "0", ",", "0", ")", "\n", "\n", "self", ".", "scene_nn", "=", "QGraphicsScene", "(", ")", "\n", "self", ".", "scene_nn", ".", "setSceneRect", "(", "-", "2000", ",", "-", "3000", ",", "4000", ",", "6000", ")", "\n", "\n", "self", ".", "view_nn", "=", "QGraphicsView", "(", "self", ".", "scene_nn", ",", "self", ".", "window", ".", "scene_nn", ")", "\n", "self", ".", "view_nn", ".", "scale", "(", "-", "0.1", ",", "0.1", ")", ";", "\n", "\n", "self", ".", "view_nn", ".", "resize", "(", "self", ".", "window", ".", "scene_nn", ".", "geometry", "(", ")", ".", "width", "(", ")", ",", "self", ".", "window", ".", "scene_nn", ".", "geometry", "(", ")", ".", "height", "(", ")", ")", "\n", "\n", "self", ".", "personPos_nn", "=", "self", ".", "scene_nn", ".", "addEllipse", "(", "QRectF", "(", "-", "200", ",", "-", "200", ",", "400", ",", "400", ")", ",", "QPen", "(", "QColor", "(", "\"LightBlue\"", ")", ")", ",", "QBrush", "(", "QColor", "(", "\"LightBlue\"", ")", ")", ")", "\n", "self", ".", "personPos_nn", ".", "setFlag", "(", "QGraphicsItem", ".", "ItemIsMovable", ")", "\n", "self", ".", "personPos_nn", ".", "setPos", "(", "0", ",", "0", ")", "\n", "self", ".", "personAng_nn", "=", "self", ".", "scene_nn", ".", "addRect", "(", "QRectF", "(", "-", "10", ",", "0", ",", "20", ",", "300", ")", ",", "QPen", "(", "QColor", "(", "\"Blue\"", ")", ")", ",", "QBrush", "(", "QColor", "(", "\"Blue\"", ")", ")", ")", "\n", "self", ".", "personAng_nn", ".", "setFlag", "(", "QGraphicsItem", ".", "ItemIsMovable", ")", "\n", "self", ".", "personAng_nn", ".", "setPos", "(", "0", ",", "0", ")", "\n", "\n", "self", ".", "loadData", "(", "sys", ".", "argv", "[", "1", "]", ")", "\n", "\n", "self", ".", "window", ".", "instantScrollBar", ".", "valueChanged", ".", "connect", "(", "self", ".", "changeInstant", ")", "\n", "\n", "self", ".", "it", "=", "0", "\n", "self", ".", "timer", "=", "QTimer", "(", ")", "\n", "self", ".", "timer", ".", "timeout", ".", "connect", "(", "self", ".", "compute", ")", "\n", "self", ".", "timer", ".", "start", "(", "150", ")", "\n", "\n", "\n", "self", ".", "window", ".", "show", "(", ")", "\n", "\n", "r", "=", "self", ".", "app", ".", "exec_", "(", ")", "\n", "sys", ".", "exit", "(", "r", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.testgui.TestGUI.loadData": [[87, 210], ["graph_generator.CalibrationDataset", "list", "trackerapi.TrackerAPI", "range", "numpy.array", "print", "testgui.TestGUI.scene_gt.addPolygon", "testgui.TestGUI.scene_cc.addPolygon", "testgui.TestGUI.scene_nn.addPolygon", "testgui.TestGUI.window.instantScrollBar.setMaximum", "open", "f.read", "json.loads", "int", "range", "testgui.TestGUI.x_gt.append", "testgui.TestGUI.z_gt.append", "testgui.TestGUI.a_gt.append", "testgui.TestGUI.trajectory.append", "range", "testgui.TestGUI.x_cc.append", "testgui.TestGUI.z_cc.append", "range", "testgui.TestGUI.a_cc.append", "testgui.TestGUI.x_nn.append", "testgui.TestGUI.z_nn.append", "testgui.TestGUI.a_nn.append", "eX_cc.append", "eZ_cc.append", "eA_cc.append", "eX_nn.append", "eZ_nn.append", "eA_nn.append", "len", "QPen", "QPen", "QPen", "open", "pickle.load", "len", "len", "len", "QPointF", "len", "len", "math.atan2", "math.atan2", "math.atan2", "math.atan2", "abs", "abs", "abs", "abs", "abs", "abs", "QColor", "QColor", "QColor", "len", "open", "pickle.dump", "math.sin", "math.sin", "math.sin", "math.sin", "math.cos", "math.cos", "math.cos", "math.cos", "trackerapi.TrackerAPI.predict", "math.atan2", "math.atan2", "math.atan2", "math.atan2", "abs", "testgui.TestGUI.x_nn[].item", "testgui.TestGUI.z_nn[].item", "abs"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.mlpnet.MLPNet.predict"], ["", "def", "loadData", "(", "self", ",", "filename", ")", ":", "\n", "        ", "test_dataset", "=", "graph_generator", ".", "CalibrationDataset", "(", "filename", ",", "'run'", ",", "'1'", ")", "\n", "with", "open", "(", "sys", ".", "argv", "[", "1", "]", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "raw", "=", "f", ".", "read", "(", ")", "\n", "", "raw", "=", "list", "(", "raw", ")", "\n", "\n", "raws", "=", "''", ".", "join", "(", "raw", ")", "\n", "data", "=", "json", ".", "loads", "(", "raws", ")", "[", "'data_set'", "]", "\n", "\n", "model", "=", "trackerapi", ".", "TrackerAPI", "(", "'.'", ",", "test_dataset", ")", "\n", "\n", "self", ".", "x_gt", "=", "[", "]", "\n", "self", ".", "x_cc", "=", "[", "]", "\n", "self", ".", "x_nn", "=", "[", "]", "\n", "self", ".", "z_gt", "=", "[", "]", "\n", "self", ".", "z_cc", "=", "[", "]", "\n", "self", ".", "z_nn", "=", "[", "]", "\n", "self", ".", "a_gt", "=", "[", "]", "\n", "self", ".", "a_cc", "=", "[", "]", "\n", "self", ".", "a_nn", "=", "[", "]", "\n", "\n", "try", ":", "\n", "            ", "with", "open", "(", "'kk'", ",", "'rb'", ")", "as", "f", ":", "\n", "                ", "results", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "", "except", ":", "\n", "            ", "results", "=", "[", "x", "for", "x", "in", "model", ".", "predict", "(", ")", "]", "\n", "with", "open", "(", "'kk'", ",", "'wb'", ")", "as", "f", ":", "\n", "                ", "pickle", ".", "dump", "(", "results", ",", "f", ",", "pickle", ".", "HIGHEST_PROTOCOL", ")", "\n", "\n", "", "", "eX_cc", "=", "[", "]", "\n", "eZ_cc", "=", "[", "]", "\n", "eA_cc", "=", "[", "]", "\n", "eX_nn", "=", "[", "]", "\n", "eZ_nn", "=", "[", "]", "\n", "eA_nn", "=", "[", "]", "\n", "\n", "self", ".", "trajectory", "=", "[", "]", "\n", "\n", "s", "=", "0", "\n", "ang_prev", "=", "0", "\n", "for", "i", "in", "range", "(", "int", "(", "len", "(", "results", ")", ")", ")", ":", "\n", "\n", "            ", "n_joints", "=", "0", "\n", "for", "cam", "in", "range", "(", "len", "(", "data", "[", "i", "]", "[", "'superbody'", "]", ")", ")", ":", "\n", "               ", "n_joints", "+=", "len", "(", "data", "[", "i", "]", "[", "'superbody'", "]", "[", "cam", "]", "[", "'joints'", "]", ")", "\n", "\n", "", "if", "n_joints", "<", "3", ":", "\n", "                ", "continue", "\n", "\n", "", "s", "+=", "1", "\n", "if", "s", "<", "2", "or", "s", "%", "1", "!=", "0", ":", "\n", "                ", "continue", "\n", "\n", "\n", "", "self", ".", "x_gt", ".", "append", "(", "data", "[", "i", "]", "[", "'superbody'", "]", "[", "0", "]", "[", "'ground_truth'", "]", "[", "0", "]", ")", "\n", "self", ".", "z_gt", ".", "append", "(", "data", "[", "i", "]", "[", "'superbody'", "]", "[", "0", "]", "[", "'ground_truth'", "]", "[", "2", "]", ")", "\n", "self", ".", "a_gt", ".", "append", "(", "data", "[", "i", "]", "[", "'superbody'", "]", "[", "0", "]", "[", "'ground_truth'", "]", "[", "3", "]", "*", "180.", "/", "math", ".", "pi", ")", "\n", "\n", "self", ".", "trajectory", ".", "append", "(", "QPointF", "(", "self", ".", "x_gt", "[", "-", "1", "]", ",", "self", ".", "z_gt", "[", "-", "1", "]", ")", ")", "\n", "\n", "x_cc", "=", "0", "\n", "z_cc", "=", "0", "\n", "ncams", "=", "0", "\n", "for", "cam", "in", "range", "(", "0", ",", "len", "(", "data", "[", "i", "]", "[", "'superbody'", "]", ")", ")", ":", "\n", "                ", "x_cc", "+=", "data", "[", "i", "]", "[", "'superbody'", "]", "[", "cam", "]", "[", "'world'", "]", "[", "0", "]", "\n", "z_cc", "+=", "data", "[", "i", "]", "[", "'superbody'", "]", "[", "cam", "]", "[", "'world'", "]", "[", "2", "]", "\n", "ncams", "+=", "1", "\n", "\n", "", "self", ".", "x_cc", ".", "append", "(", "x_cc", "/", "ncams", ")", "\n", "self", ".", "z_cc", ".", "append", "(", "z_cc", "/", "ncams", ")", "\n", "\n", "s_cc", "=", "0", "\n", "c_cc", "=", "0", "\n", "ncams", "=", "0", "\n", "for", "cam", "in", "range", "(", "0", ",", "len", "(", "data", "[", "i", "]", "[", "'superbody'", "]", ")", ")", ":", "\n", "                ", "joints", "=", "data", "[", "i", "]", "[", "'superbody'", "]", "[", "cam", "]", "[", "\"joints\"", "]", "\n", "if", "(", "\"right_shoulder\"", "in", "joints", "and", "\"left_shoulder\"", "in", "joints", ")", "or", "(", "\"right_hip\"", "in", "joints", "and", "\"left_hip\"", "in", "joints", ")", ":", "\n", "                    ", "s_cc", "=", "math", ".", "sin", "(", "data", "[", "i", "]", "[", "'superbody'", "]", "[", "cam", "]", "[", "'world'", "]", "[", "3", "]", ")", "\n", "c_cc", "=", "math", ".", "cos", "(", "data", "[", "i", "]", "[", "'superbody'", "]", "[", "cam", "]", "[", "'world'", "]", "[", "3", "]", ")", "\n", "ncams", "+=", "1", "\n", "\n", "", "", "if", "ncams", ">", "0", ":", "\n", "                ", "a_cc", "=", "math", ".", "atan2", "(", "s_cc", "/", "ncams", ",", "c_cc", "/", "ncams", ")", "\n", "ang_prev", "=", "a_cc", "\n", "", "else", ":", "\n", "                ", "a_cc", "=", "ang_prev", "\n", "\n", "", "self", ".", "a_cc", ".", "append", "(", "a_cc", "*", "180.", "/", "math", ".", "pi", ")", "\n", "\n", "self", ".", "x_nn", ".", "append", "(", "results", "[", "i", "]", "[", "0", "]", "*", "4000", ")", "\n", "self", ".", "z_nn", ".", "append", "(", "results", "[", "i", "]", "[", "2", "]", "*", "4000", ")", "\n", "self", ".", "a_nn", ".", "append", "(", "math", ".", "atan2", "(", "results", "[", "i", "]", "[", "3", "]", "/", "0.7", ",", "results", "[", "i", "]", "[", "4", "]", "/", "0.7", ")", "*", "180.", "/", "math", ".", "pi", ")", "\n", "eX_cc", ".", "append", "(", "abs", "(", "self", ".", "x_gt", "[", "-", "1", "]", "-", "self", ".", "x_cc", "[", "-", "1", "]", ")", ")", "\n", "eZ_cc", ".", "append", "(", "abs", "(", "self", ".", "z_gt", "[", "-", "1", "]", "-", "self", ".", "z_cc", "[", "-", "1", "]", ")", ")", "\n", "eAng", "=", "180", "-", "abs", "(", "abs", "(", "self", ".", "a_gt", "[", "-", "1", "]", "-", "self", ".", "a_cc", "[", "-", "1", "]", ")", "-", "180", ")", "\n", "if", "eAng", "<", "0", ":", "\n", "                ", "eAng", "=", "360", "+", "eAng", "\n", "", "eA_cc", ".", "append", "(", "eAng", ")", "\n", "\n", "eX_nn", ".", "append", "(", "abs", "(", "self", ".", "x_gt", "[", "-", "1", "]", "-", "self", ".", "x_nn", "[", "-", "1", "]", ".", "item", "(", ")", ")", ")", "\n", "eZ_nn", ".", "append", "(", "abs", "(", "self", ".", "z_gt", "[", "-", "1", "]", "-", "self", ".", "z_nn", "[", "-", "1", "]", ".", "item", "(", ")", ")", ")", "\n", "eAng", "=", "180", "-", "abs", "(", "abs", "(", "self", ".", "a_gt", "[", "-", "1", "]", "-", "self", ".", "a_nn", "[", "-", "1", "]", ")", "-", "180", ")", "\n", "if", "eAng", "<", "0", ":", "\n", "                ", "eAng", "=", "360", "+", "eAng", "\n", "", "eA_nn", ".", "append", "(", "eAng", ")", "\n", "\n", "", "array_err_z", "=", "np", ".", "array", "(", "eZ_nn", ")", "\n", "print", "(", "\"len array error\"", ",", "len", "(", "array_err_z", ")", ")", "\n", "\n", "\n", "#        self.window.eX_cc.display(np.array(eX_cc).mean())", "\n", "#        self.window.eZ_cc.display(np.array(eZ_cc).mean())", "\n", "#        self.window.eA_cc.display(np.array(eA_cc).mean())", "\n", "\n", "#        self.window.eX_nn.display(np.array(eX_nn).mean())", "\n", "#        self.window.eZ_nn.display(np.array(eZ_nn).mean())", "\n", "#        self.window.eA_nn.display(np.array(eA_nn).mean())", "\n", "\n", "self", ".", "scene_gt", ".", "addPolygon", "(", "self", ".", "trajectory", ",", "QPen", "(", "QColor", "(", "\"Black\"", ")", ")", ")", "\n", "self", ".", "scene_cc", ".", "addPolygon", "(", "self", ".", "trajectory", ",", "QPen", "(", "QColor", "(", "\"Black\"", ")", ")", ")", "\n", "self", ".", "scene_nn", ".", "addPolygon", "(", "self", ".", "trajectory", ",", "QPen", "(", "QColor", "(", "\"Black\"", ")", ")", ")", "\n", "\n", "self", ".", "window", ".", "instantScrollBar", ".", "setMaximum", "(", "len", "(", "self", ".", "a_gt", ")", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.testgui.TestGUI.compute": [[212, 219], ["testgui.TestGUI.window.playButton.isChecked", "testgui.TestGUI.movePerson", "testgui.TestGUI.window.instantScrollBar.setValue", "len"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.testgui.TestGUI.movePerson"], ["", "def", "compute", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "window", ".", "playButton", ".", "isChecked", "(", ")", ":", "\n", "            ", "if", "self", ".", "it", ">=", "len", "(", "self", ".", "x_gt", ")", ":", "\n", "                ", "self", ".", "it", "=", "0", "\n", "", "self", ".", "movePerson", "(", ")", "\n", "self", ".", "it", "+=", "1", "\n", "self", ".", "window", ".", "instantScrollBar", ".", "setValue", "(", "self", ".", "it", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.testgui.TestGUI.changeInstant": [[220, 223], ["testgui.TestGUI.movePerson"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.testgui.TestGUI.movePerson"], ["", "", "def", "changeInstant", "(", "self", ",", "instant", ")", ":", "\n", "        ", "self", ".", "it", "=", "instant", "\n", "self", ".", "movePerson", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.testgui.TestGUI.movePerson": [[224, 237], ["testgui.TestGUI.personPos_gt.setPos", "testgui.TestGUI.personAng_gt.setPos", "testgui.TestGUI.personAng_gt.setRotation", "testgui.TestGUI.personPos_cc.setPos", "testgui.TestGUI.personAng_cc.setPos", "testgui.TestGUI.personAng_cc.setRotation", "testgui.TestGUI.personPos_nn.setPos", "testgui.TestGUI.personAng_nn.setPos", "testgui.TestGUI.personAng_nn.setRotation"], "methods", ["None"], ["", "def", "movePerson", "(", "self", ")", ":", "\n", "\n", "        ", "self", ".", "personPos_gt", ".", "setPos", "(", "self", ".", "x_gt", "[", "self", ".", "it", "]", ",", "self", ".", "z_gt", "[", "self", ".", "it", "]", ")", "\n", "self", ".", "personAng_gt", ".", "setPos", "(", "self", ".", "x_gt", "[", "self", ".", "it", "]", ",", "self", ".", "z_gt", "[", "self", ".", "it", "]", ")", "\n", "self", ".", "personAng_gt", ".", "setRotation", "(", "self", ".", "a_gt", "[", "self", ".", "it", "]", ")", "\n", "\n", "self", ".", "personPos_cc", ".", "setPos", "(", "self", ".", "x_cc", "[", "self", ".", "it", "]", ",", "self", ".", "z_cc", "[", "self", ".", "it", "]", ")", "\n", "self", ".", "personAng_cc", ".", "setPos", "(", "self", ".", "x_cc", "[", "self", ".", "it", "]", ",", "self", ".", "z_cc", "[", "self", ".", "it", "]", ")", "\n", "self", ".", "personAng_cc", ".", "setRotation", "(", "self", ".", "a_cc", "[", "self", ".", "it", "]", ")", "\n", "\n", "self", ".", "personPos_nn", ".", "setPos", "(", "self", ".", "x_nn", "[", "self", ".", "it", "]", ",", "self", ".", "z_nn", "[", "self", ".", "it", "]", ")", "\n", "self", ".", "personAng_nn", ".", "setPos", "(", "self", ".", "x_nn", "[", "self", ".", "it", "]", ",", "self", ".", "z_nn", "[", "self", ".", "it", "]", ")", "\n", "self", ".", "personAng_nn", ".", "setRotation", "(", "self", ".", "a_nn", "[", "self", ".", "it", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.drawGraph3h.MainClass.__init__": [[25, 49], ["PySide2.QtWidgets.QWidget.__init__", "ui_drawGraph.Ui_CalibrationWidget", "drawGraph3h.MainClass.ui.setupUi", "drawGraph3h.MainClass.show", "drawGraph3h.MainClass.installEventFilter", "drawGraph3h.MainClass.load_next", "drawGraph3h.MainClass.ui.tableWidget.setRowCount", "drawGraph3h.MainClass.ui.tableWidget.setColumnCount", "drawGraph3h.MainClass.ui.tableWidget.setColumnWidth", "drawGraph3h.MainClass.ui.tableWidget.show", "drawGraph3h.MainClass.ui.tableWidget.setHorizontalHeaderItem", "drawGraph3h.MainClass.ui.tableWidget.horizontalHeader().hide", "drawGraph3h.MainClass.ui.tableWidget.setVerticalHeaderItem", "drawGraph3h.MainClass.ui.tableWidget.setItem", "drawGraph3h.MainClass.view.graph.get_all_features", "enumerate", "PySide2.QtWidgets.QTableWidgetItem", "PySide2.QtWidgets.QTableWidgetItem", "PySide2.QtWidgets.QTableWidgetItem", "drawGraph3h.MainClass.ui.tableWidget.setVerticalHeaderItem", "drawGraph3h.MainClass.ui.tableWidget.setItem", "drawGraph3h.MainClass.ui.tableWidget.horizontalHeader", "PySide2.QtWidgets.QTableWidgetItem", "PySide2.QtWidgets.QTableWidgetItem"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.pg_rgcn_gat3.PRGAT3.__init__", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.ui_drawGraph.Ui_CalibrationWidget.setupUi", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.drawGraph3h.MainClass.load_next", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_all_features"], ["    ", "def", "__init__", "(", "self", ",", "scenarios", ",", "start", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "scenarios", "=", "scenarios", "\n", "self", ".", "ui", "=", "ui_drawGraph", ".", "Ui_CalibrationWidget", "(", ")", "\n", "self", ".", "ui", ".", "setupUi", "(", "self", ")", "\n", "self", ".", "next_index", "=", "start", "\n", "self", ".", "view", "=", "None", "\n", "self", ".", "show", "(", ")", "\n", "self", ".", "installEventFilter", "(", "self", ")", "\n", "self", ".", "load_next", "(", ")", "\n", "self", ".", "ui", ".", "tableWidget", ".", "setRowCount", "(", "self", ".", "view", ".", "graph", ".", "features", ".", "shape", "[", "1", "]", "+", "1", ")", "\n", "self", ".", "ui", ".", "tableWidget", ".", "setColumnCount", "(", "1", ")", "\n", "self", ".", "ui", ".", "tableWidget", ".", "setColumnWidth", "(", "0", ",", "200", ")", "\n", "self", ".", "ui", ".", "tableWidget", ".", "show", "(", ")", "\n", "\n", "# Initialize table", "\n", "self", ".", "ui", ".", "tableWidget", ".", "setHorizontalHeaderItem", "(", "0", ",", "QtWidgets", ".", "QTableWidgetItem", "(", "'value'", ")", ")", "\n", "self", ".", "ui", ".", "tableWidget", ".", "horizontalHeader", "(", ")", ".", "hide", "(", ")", "\n", "self", ".", "ui", ".", "tableWidget", ".", "setVerticalHeaderItem", "(", "0", ",", "QtWidgets", ".", "QTableWidgetItem", "(", "'type'", ")", ")", "\n", "self", ".", "ui", ".", "tableWidget", ".", "setItem", "(", "0", ",", "0", ",", "QtWidgets", ".", "QTableWidgetItem", "(", "'0'", ")", ")", "\n", "features_aux", "=", "self", ".", "view", ".", "graph", ".", "get_all_features", "(", ")", "\n", "for", "idx", ",", "feature", "in", "enumerate", "(", "features_aux", ",", "1", ")", ":", "\n", "            ", "self", ".", "ui", ".", "tableWidget", ".", "setVerticalHeaderItem", "(", "idx", ",", "QtWidgets", ".", "QTableWidgetItem", "(", "feature", ")", ")", "\n", "self", ".", "ui", ".", "tableWidget", ".", "setItem", "(", "idx", ",", "0", ",", "QtWidgets", ".", "QTableWidgetItem", "(", "'0'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.drawGraph3h.MainClass.load_next": [[50, 64], ["drawGraph3h.MyView", "drawGraph3h.MainClass.view.setParent", "drawGraph3h.MainClass.view.show", "drawGraph3h.MainClass.ui.widget.setFixedSize", "drawGraph3h.MainClass.show", "range", "drawGraph3h.MainClass.view.close", "drawGraph3h.MainClass.view.width", "drawGraph3h.MainClass.view.height", "drawGraph3h.MainClass.ui.tableWidget.setItem", "PySide2.QtWidgets.QTableWidgetItem"], "methods", ["None"], ["", "", "def", "load_next", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "view", ":", "\n", "            ", "self", ".", "view", ".", "close", "(", ")", "\n", "del", "self", ".", "view", "\n", "", "self", ".", "view", "=", "MyView", "(", "self", ".", "scenarios", "[", "self", ".", "next_index", "]", ",", "self", ".", "ui", ".", "tableWidget", ")", "\n", "self", ".", "next_index", "+=", "1", "\n", "self", ".", "view", ".", "setParent", "(", "self", ".", "ui", ".", "widget", ")", "\n", "self", ".", "view", ".", "show", "(", ")", "\n", "self", ".", "ui", ".", "widget", ".", "setFixedSize", "(", "self", ".", "view", ".", "width", "(", ")", ",", "self", ".", "view", ".", "height", "(", ")", ")", "\n", "self", ".", "show", "(", ")", "\n", "\n", "# Initialize table with zeros", "\n", "for", "idx", "in", "range", "(", "self", ".", "view", ".", "graph", ".", "features", ".", "shape", "[", "1", "]", "+", "2", ")", ":", "\n", "            ", "self", ".", "ui", ".", "tableWidget", ".", "setItem", "(", "idx", ",", "0", ",", "QtWidgets", ".", "QTableWidgetItem", "(", "'0'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.drawGraph3h.MainClass.eventFilter": [[65, 77], ["event.type", "event.key", "sys.exit", "drawGraph3h.MainClass.load_next", "drawGraph3h.MainClass.close"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.drawGraph3h.MainClass.load_next"], ["", "", "def", "eventFilter", "(", "self", ",", "widget", ",", "event", ")", ":", "\n", "        ", "if", "event", ".", "type", "(", ")", "==", "QtCore", ".", "QEvent", ".", "KeyPress", ":", "\n", "            ", "key", "=", "event", ".", "key", "(", ")", "\n", "if", "key", "==", "QtCore", ".", "Qt", ".", "Key_Escape", ":", "\n", "                ", "sys", ".", "exit", "(", "0", ")", "\n", "", "else", ":", "\n", "                ", "if", "key", "==", "QtCore", ".", "Qt", ".", "Key_Return", ":", "\n", "                    ", "self", ".", "load_next", "(", ")", "\n", "", "elif", "key", "==", "QtCore", ".", "Qt", ".", "Key_Enter", ":", "\n", "                    ", "self", ".", "close", "(", ")", "\n", "", "return", "True", "\n", "", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.drawGraph3h.MyView.__init__": [[80, 86], ["PySide2.QtWidgets.QGraphicsView.__init__", "drawGraph3h.MyView.setFixedSize", "drawGraph3h.MyView.create_scene", "drawGraph3h.MyView.installEventFilter"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.pg_rgcn_gat3.PRGAT3.__init__", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.drawGraph3h.MyView.create_scene"], ["    ", "def", "__init__", "(", "self", ",", "scenario", ",", "table", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "table", "=", "table", "\n", "self", ".", "setFixedSize", "(", "1002", ",", "1002", ")", "\n", "self", ".", "create_scene", "(", "scenario", ")", "\n", "self", ".", "installEventFilter", "(", "self", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.drawGraph3h.MyView.create_scene": [[87, 149], ["graph_generator.HumanGraph", "dict", "dict", "PySide2.QtWidgets.QGraphicsScene", "drawGraph3h.MyView.scene.setSceneRect", "drawGraph3h.MyView.set_pixmap", "drawGraph3h.MyView.setScene", "PySide2.QtCore.QRectF", "drawGraph3h.MyView.graph.type_map_debug[].values", "drawGraph3h.MyView.graph.type_map_debug[].values", "drawGraph3h.MyView.coordinates_for_node_type", "drawGraph3h.MyView.scene.addEllipse", "drawGraph3h.MyView.coordinates_for_node_type", "drawGraph3h.MyView.coordinates_for_node_type", "PySide2.QtGui.QPen", "drawGraph3h.MyView.type_to_colour_width", "PySide2.QtGui.QPen.setColor", "PySide2.QtGui.QPen.setWidth", "drawGraph3h.MyView.scene.addLine", "drawGraph3h.MyView.coordinates_for_node_type", "drawGraph3h.MyView.scene.addText", "drawGraph3h.MyView.setDefaultTextColor", "drawGraph3h.MyView.setPos", "drawGraph3h.MyView.coordinates_for_node_type"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.drawGraph3h.MyView.set_pixmap", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.drawGraph3h.MyView.coordinates_for_node_type", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.drawGraph3h.MyView.coordinates_for_node_type", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.drawGraph3h.MyView.coordinates_for_node_type", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.drawGraph3h.MyView.type_to_colour_width", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.drawGraph3h.MyView.coordinates_for_node_type", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.drawGraph3h.MyView.coordinates_for_node_type"], ["", "def", "create_scene", "(", "self", ",", "human", ")", ":", "\n", "\n", "        ", "self", ".", "graph", "=", "HumanGraph", "(", "human", ",", "'1'", ",", "mode", "=", "'run'", ",", "debug", "=", "True", ")", "\n", "self", ".", "all_types", "=", "dict", "(", ")", "# Store all IDs and its types", "\n", "self", ".", "nodeItems", "=", "dict", "(", ")", "\n", "self", ".", "scene", "=", "QtWidgets", ".", "QGraphicsScene", "(", "self", ")", "\n", "\n", "self", ".", "scene", ".", "setSceneRect", "(", "QtCore", ".", "QRectF", "(", "-", "500", ",", "-", "500", ",", "1000", ",", "1000", ")", ")", "\n", "self", ".", "set_pixmap", "(", "'images/draw/threeHumans.png'", ")", "\n", "\n", "for", "cam", "in", "self", ".", "graph", ".", "type_map_debug", ":", "\n", "            ", "self", ".", "all_types", "=", "{", "**", "self", ".", "graph", ".", "type_map_debug", "[", "cam", "]", ",", "**", "self", ".", "all_types", "}", "\n", "for", "n_type", "in", "self", ".", "graph", ".", "type_map_debug", "[", "cam", "]", ".", "values", "(", ")", ":", "\n", "# if self.coordinates_for_node_type_center(n_type, cam) is None:", "\n", "#     continue", "\n", "                ", "x", ",", "y", "=", "self", ".", "coordinates_for_node_type", "(", "n_type", ",", "cam", ")", "\n", "if", "n_type", "==", "'sb'", ":", "\n", "                    ", "colour", "=", "QtCore", ".", "Qt", ".", "lightGray", "\n", "node_radius", "=", "30", "\n", "", "elif", "n_type", "==", "'b'", ":", "\n", "                    ", "colour", "=", "QtCore", ".", "Qt", ".", "lightGray", "\n", "node_radius", "=", "25", "\n", "", "else", ":", "\n", "                    ", "colour", "=", "QtCore", ".", "Qt", ".", "black", "\n", "node_radius", "=", "7", "\n", "\n", "", "item", "=", "self", ".", "scene", ".", "addEllipse", "(", "x", "-", "node_radius", ",", "y", "-", "node_radius", ",", "\n", "node_radius", "*", "2", ",", "node_radius", "*", "2", ",", "\n", "brush", "=", "colour", ")", "\n", "self", ".", "nodeItems", "[", "n_type", "]", "=", "item", "\n", "", "", "self", ".", "setScene", "(", "self", ".", "scene", ")", "\n", "for", "cam", "in", "self", ".", "graph", ".", "type_map_debug", ":", "\n", "            ", "edges", "=", "self", ".", "graph", ".", "edges_debug", "[", "cam", "]", "\n", "for", "edge", "in", "edges", ":", "\n", "\n", "                ", "edge_a", "=", "self", ".", "all_types", "[", "edge", "[", "0", "]", "]", "\n", "edge_b", "=", "self", ".", "all_types", "[", "edge", "[", "1", "]", "]", "\n", "\n", "# if edge_a == 'b' or edge_b == 'b':", "\n", "#     continue", "\n", "if", "edge_a", "==", "edge_b", ":", "# No self edges", "\n", "                    ", "continue", "\n", "\n", "", "ax", ",", "ay", "=", "self", ".", "coordinates_for_node_type", "(", "edge_a", ",", "cam", ")", "\n", "bx", ",", "by", "=", "self", ".", "coordinates_for_node_type", "(", "edge_b", ",", "cam", ")", "\n", "pen", "=", "QtGui", ".", "QPen", "(", ")", "\n", "\n", "colour", ",", "width", "=", "self", ".", "type_to_colour_width", "(", "edge_a", ",", "\n", "edge_b", ")", "\n", "pen", ".", "setColor", "(", "colour", ")", "\n", "pen", ".", "setWidth", "(", "width", ")", "\n", "\n", "self", ".", "scene", ".", "addLine", "(", "ax", ",", "ay", ",", "bx", ",", "by", ",", "pen", "=", "pen", ")", "\n", "\n", "", "for", "n_type", "in", "self", ".", "graph", ".", "type_map_debug", "[", "cam", "]", ".", "values", "(", ")", ":", "\n", "                ", "if", "self", ".", "coordinates_for_node_type", "(", "n_type", ",", "cam", ")", "is", "None", ":", "\n", "                    ", "continue", "\n", "", "c", "=", "self", ".", "coordinates_for_node_type", "(", "n_type", ",", "cam", ")", "\n", "item", "=", "self", ".", "scene", ".", "addText", "(", "n_type", ")", "\n", "item", ".", "setDefaultTextColor", "(", "QtCore", ".", "Qt", ".", "magenta", ")", "\n", "item", ".", "setPos", "(", "*", "c", ")", "\n", "self", ".", "nodeItems", "[", "n_type", "]", "=", "item", "\n", "# print(len(self.graph))", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.drawGraph3h.MyView.coordinates_for_node_type": [[151, 178], ["None"], "methods", ["None"], ["", "", "", "@", "staticmethod", "\n", "def", "coordinates_for_node_type", "(", "t", ",", "cam", ")", ":", "\n", "        ", "mapping", "=", "{", "\n", "'sb'", ":", "(", "-", "95", ",", "-", "400", ")", ",", "\n", "'b'", ":", "(", "-", "95", ",", "-", "250", ")", ",", "\n", "'n'", ":", "(", "6", ",", "-", "185", ")", ",", "\n", "'le'", ":", "(", "32", ",", "-", "200", ")", ",", "\n", "'ley'", ":", "(", "14", ",", "-", "201", ")", ",", "\n", "'ls'", ":", "(", "73", ",", "-", "116", ")", ",", "\n", "'lel'", ":", "(", "85", ",", "-", "25", ")", ",", "\n", "'lw'", ":", "(", "106", ",", "48", ")", ",", "\n", "'lh'", ":", "(", "48", ",", "35", ")", ",", "\n", "'lk'", ":", "(", "34", ",", "193", ")", ",", "\n", "'la'", ":", "(", "28", ",", "317", ")", ",", "\n", "'re'", ":", "(", "-", "26", ",", "-", "200", ")", ",", "\n", "'rey'", ":", "(", "-", "7", ",", "-", "201", ")", ",", "\n", "'rs'", ":", "(", "-", "63", ",", "-", "116", ")", ",", "\n", "'rel'", ":", "(", "-", "75", ",", "-", "25", ")", ",", "\n", "'rw'", ":", "(", "-", "91", ",", "48", ")", ",", "\n", "'rh'", ":", "(", "-", "35", ",", "35", ")", ",", "\n", "'rk'", ":", "(", "-", "24", ",", "193", ")", ",", "\n", "'ra'", ":", "(", "-", "18", ",", "317", ")", "\n", "}", "\n", "ret", "=", "mapping", "[", "t", "]", "\n", "if", "t", "==", "'sb'", ":", "\n", "            ", "return", "ret", "\n", "", "return", "(", "ret", "[", "0", "]", "+", "311", "*", "(", "cam", "-", "1", ")", "-", "312", ",", "ret", "[", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.drawGraph3h.MyView.type_to_colour_width": [[185, 205], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "type_to_colour_width", "(", "type1", ",", "type2", ")", ":", "\n", "        ", "if", "type1", "==", "'sb'", "or", "type2", "==", "'sb'", ":", "\n", "            ", "colour", "=", "QtCore", ".", "Qt", ".", "lightGray", "\n", "width", "=", "5", "\n", "", "elif", "type1", "==", "'b'", "or", "type2", "==", "'b'", ":", "\n", "            ", "colour", "=", "QtCore", ".", "Qt", ".", "lightGray", "\n", "width", "=", "1", "\n", "", "elif", "type1", "==", "'n'", "or", "type2", "==", "'n'", ":", "# The only special case, no left or right", "\n", "            ", "colour", "=", "QtCore", ".", "Qt", ".", "black", "\n", "width", "=", "5", "\n", "", "else", ":", "\n", "            ", "if", "type1", "[", "1", ":", "]", "==", "type2", "[", "1", ":", "]", ":", "\n", "                ", "colour", "=", "QtCore", ".", "Qt", ".", "green", "\n", "width", "=", "1.5", "\n", "", "else", ":", "\n", "                ", "colour", "=", "QtCore", ".", "Qt", ".", "black", "\n", "width", "=", "5", "\n", "\n", "", "", "return", "colour", ",", "width", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.drawGraph3h.MyView.node_type": [[206, 214], ["graph.get_node_types_one_hot", "dict.fromkeys", "enumerate", "dict.fromkeys.get", "dict.fromkeys.keys"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_node_types_one_hot"], ["", "@", "staticmethod", "\n", "def", "node_type", "(", "n_type", ",", "graph", ")", ":", "\n", "        ", "labels", "=", "graph", ".", "get_node_types_one_hot", "(", ")", "\n", "mapping", "=", "dict", ".", "fromkeys", "(", "parts", ",", "0", ")", "\n", "for", "idx", ",", "key", "in", "enumerate", "(", "mapping", ".", "keys", "(", ")", ")", ":", "\n", "            ", "mapping", "[", "key", "]", "=", "labels", "[", "idx", "]", "\n", "\n", "", "return", "mapping", ".", "get", "(", "n_type", ",", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.drawGraph3h.MyView.closest_node_view": [[215, 230], ["drawGraph3h.MyView.coordinates_for_node_type", "abs", "abs"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.drawGraph3h.MyView.coordinates_for_node_type"], ["", "def", "closest_node_view", "(", "self", ",", "event_x", ",", "event_y", ")", ":", "\n", "        ", "x_mouse", "=", "(", "event_x", "-", "493", ")", "\n", "y_mouse", "=", "(", "event_y", "-", "493", ")", "\n", "# print(str(x_mouse) + ', ' + str(y_mouse))", "\n", "closest_node", "=", "0", "\n", "old_dist", "=", "10000", "\n", "for", "cam", "in", "self", ".", "graph", ".", "type_map_debug", ":", "\n", "            ", "for", "n_id", "in", "self", ".", "graph", ".", "type_map_debug", "[", "cam", "]", ":", "\n", "                ", "key", "=", "self", ".", "all_types", "[", "n_id", "]", "\n", "x", ",", "y", "=", "self", ".", "coordinates_for_node_type", "(", "key", ",", "cam", ")", "\n", "dist", "=", "abs", "(", "x", "-", "x_mouse", ")", "+", "abs", "(", "y", "-", "y_mouse", ")", "\n", "if", "dist", "<", "old_dist", ":", "\n", "                    ", "old_dist", "=", "dist", "\n", "closest_node", "=", "n_id", "\n", "", "", "", "return", "closest_node", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.drawGraph3h.MyView.set_pixmap": [[231, 237], ["PySide2.QtGui.QPixmap", "PySide2.QtWidgets.QGraphicsPixmapItem", "PySide2.QtWidgets.QGraphicsPixmapItem.setPos", "PySide2.QtWidgets.QGraphicsPixmapItem.setScale", "drawGraph3h.MyView.scene.addItem"], "methods", ["None"], ["", "def", "set_pixmap", "(", "self", ",", "pixmap_path", ")", ":", "\n", "        ", "pixmap", "=", "QtGui", ".", "QPixmap", "(", "pixmap_path", ")", "\n", "pixmap_item", "=", "QtWidgets", ".", "QGraphicsPixmapItem", "(", "pixmap", ")", "\n", "pixmap_item", ".", "setPos", "(", "-", "455", ",", "-", "500", ")", "\n", "pixmap_item", ".", "setScale", "(", "1.", ")", "\n", "self", ".", "scene", ".", "addItem", "(", "pixmap_item", ")", "\n", "#  self.scene.addRect(-30, -30, 60, 60, pen=QtGui.QPen(QtCore.Qt.white), brush=QtGui.QBrush(QtCore.Qt.white))", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.drawGraph3h.MyView.eventFilter": [[239, 258], ["event.type", "drawGraph3h.MyView.closest_node_view", "drawGraph3h.MyView.table.setItem", "enumerate", "print", "PySide2.QtWidgets.QTableWidgetItem", "str", "drawGraph3h.MyView.table.setItem", "event.x", "event.y", "int", "PySide2.QtWidgets.QTableWidgetItem", "str", "drawGraph3h.MyView.node_type", "len", "len", "drawGraph3h.MyView.graph.get_node_types_one_hot", "drawGraph3h.MyView.graph.get_node_types_one_hot", "len"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.drawGraph3h.MyView.closest_node_view", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.drawGraph3h.MyView.node_type", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_node_types_one_hot", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_node_types_one_hot"], ["", "def", "eventFilter", "(", "self", ",", "widget", ",", "event", ")", ":", "\n", "        ", "if", "event", ".", "type", "(", ")", "==", "QtCore", ".", "QEvent", ".", "MouseButtonPress", ":", "\n", "            ", "closest_node_id", "=", "self", ".", "closest_node_view", "(", "event", ".", "x", "(", ")", "-", "7", ",", "event", ".", "y", "(", ")", "-", "7", ")", "\n", "n_type", "=", "self", ".", "all_types", "[", "closest_node_id", "]", "\n", "if", "n_type", "is", "None", ":", "\n", "                ", "print", "(", "'Not valid label'", ")", "\n", "", "self", ".", "table", ".", "setItem", "(", "0", ",", "0", ",", "QtWidgets", ".", "QTableWidgetItem", "(", "self", ".", "node_type", "(", "n_type", ",", "self", ".", "graph", ")", "+", "' '", "+", "str", "(", "closest_node_id", ")", ")", ")", "\n", "\n", "# print(features)", "\n", "features", "=", "self", ".", "graph", ".", "features", "[", "closest_node_id", "]", "\n", "one_hot", "=", "[", "str", "(", "int", "(", "x", ")", ")", "for", "x", "in", "features", "[", "0", ":", "len", "(", "self", ".", "graph", ".", "get_node_types_one_hot", "(", ")", ")", "]", "]", "\n", "rest", "=", "[", "'{:1.3f}'", ".", "format", "(", "x", ")", "for", "x", "in", "features", "[", "len", "(", "self", ".", "graph", ".", "get_node_types_one_hot", "(", ")", ")", ":", "(", "len", "(", "features", ")", "+", "1", ")", "]", "]", "\n", "features_format", "=", "one_hot", "+", "rest", "\n", "\n", "for", "idx", ",", "feature", "in", "enumerate", "(", "features_format", ",", "1", ")", ":", "\n", "                ", "self", ".", "table", ".", "setItem", "(", "idx", ",", "0", ",", "QtWidgets", ".", "QTableWidgetItem", "(", "feature", ")", ")", "\n", "\n", "", "return", "True", "\n", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.test1by1.xxx_degrees": [[13, 23], ["isinstance", "test1by1.xxx_degrees.xxx_degrees_item"], "function", ["None"], ["def", "xxx_degrees", "(", "a", ")", ":", "\n", "    ", "def", "xxx_degrees_item", "(", "a", ")", ":", "\n", "        ", "while", "a", ">", "180", ":", "\n", "            ", "a", "-=", "360", "\n", "", "while", "a", "<", "-", "180", ":", "\n", "            ", "a", "+=", "360", "\n", "", "return", "a", "\n", "", "if", "isinstance", "(", "a", ",", "list", ")", ":", "\n", "        ", "return", "[", "xxx_degrees_item", "(", "x", ")", "for", "x", "in", "a", "]", "\n", "", "return", "xxx_degrees_item", "(", "a", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.test1by1.rads2degrees": [[24, 28], ["None"], "function", ["None"], ["", "def", "rads2degrees", "(", "a", ")", ":", "\n", "    ", "if", "a", "<", "0", ":", "\n", "        ", "a", "+=", "2.", "*", "math", ".", "pi", "\n", "", "return", "a", "*", "180", "/", "math", ".", "pi", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.test.xxx_rads": [[18, 28], ["isinstance", "test.xxx_rads.xxx_rads_item"], "function", ["None"], ["def", "xxx_rads", "(", "a", ")", ":", "\n", "    ", "def", "xxx_rads_item", "(", "a", ")", ":", "\n", "        ", "while", "a", ">", "math", ".", "pi", ":", "\n", "            ", "a", "-=", "2.", "*", "math", ".", "pi", "\n", "", "while", "a", "<", "-", "math", ".", "pi", ":", "\n", "            ", "a", "+=", "2.", "*", "math", ".", "pi", "\n", "", "return", "a", "\n", "", "if", "isinstance", "(", "a", ",", "list", ")", ":", "\n", "        ", "return", "[", "xxx_rads_item", "(", "x", ")", "for", "x", "in", "a", "]", "\n", "", "return", "xxx_rads_item", "(", "a", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.test.xxx_degrees": [[29, 39], ["isinstance", "test.xxx_degrees.xxx_degrees_item"], "function", ["None"], ["", "def", "xxx_degrees", "(", "a", ")", ":", "\n", "    ", "def", "xxx_degrees_item", "(", "a", ")", ":", "\n", "        ", "while", "a", ">", "180", "+", "100", ":", "\n", "            ", "a", "-=", "360", "\n", "", "while", "a", "<", "-", "180", "+", "70", ":", "\n", "            ", "a", "+=", "360", "\n", "", "return", "a", "\n", "", "if", "isinstance", "(", "a", ",", "list", ")", ":", "\n", "        ", "return", "[", "xxx_degrees_item", "(", "x", ")", "for", "x", "in", "a", "]", "\n", "", "return", "xxx_degrees_item", "(", "a", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.test.rads2degrees": [[40, 44], ["None"], "function", ["None"], ["", "def", "rads2degrees", "(", "a", ")", ":", "\n", "    ", "if", "a", "<", "0", ":", "\n", "        ", "a", "+=", "2.", "*", "math", ".", "pi", "\n", "", "return", "a", "*", "180", "/", "math", ".", "pi", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.test.to_error": [[46, 51], ["copy.deepcopy", "range", "len", "test.xxx_degrees"], "function", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.test.xxx_degrees"], ["", "def", "to_error", "(", "got", ",", "ground_truth", ")", ":", "\n", "    ", "e", "=", "copy", ".", "deepcopy", "(", "got", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "e", ")", ")", ":", "\n", "        ", "e", "[", "i", "]", "=", "xxx_degrees", "(", "e", "[", "i", "]", "-", "ground_truth", "[", "i", "]", ")", "\n", "", "return", "e", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.trackerapi.TrackerAPI.__init__": [[41, 81], ["torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "print", "pickle.load", "trackerapi.TrackerAPI.params[].lower", "print", "print", "trackerapi.TrackerAPI.GNNmodel.load_state_dict", "trackerapi.TrackerAPI.GNNmodel.to", "trackerapi.TrackerAPI.GNNmodel.eval", "open", "gat.GAT", "torch.load", "torch.load", "torch.load", "torch.load", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "rgcnDGL.RGCN", "print", "sys.exit", "trackerapi.activation_functions", "trackerapi.activation_functions"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.train_batched.activation_functions", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.train_batched.activation_functions"], ["    ", "def", "__init__", "(", "self", ",", "base", ",", "dataset", ",", "device", "=", "'cpu'", ")", ":", "\n", "        ", "self", ".", "device", "=", "torch", ".", "device", "(", "device", ")", "# For gpu change it to cuda", "\n", "self", ".", "device2", "=", "torch", ".", "device", "(", "'cpu'", ")", "\n", "print", "(", "base", ")", "\n", "self", ".", "params", "=", "pickle", ".", "load", "(", "open", "(", "base", "+", "'/calibration.prms'", ",", "'rb'", ")", ",", "fix_imports", "=", "True", ")", "\n", "self", ".", "params", "[", "'net'", "]", "=", "self", ".", "params", "[", "'net'", "]", ".", "lower", "(", ")", "\n", "print", "(", "self", ".", "params", ")", "\n", "print", "(", "self", ".", "params", "[", "'net'", "]", ")", "\n", "if", "self", ".", "params", "[", "'net'", "]", "in", "[", "'gat'", "]", ":", "\n", "            ", "self", ".", "GNNmodel", "=", "GAT", "(", "g", "=", "None", ",", "\n", "num_layers", "=", "self", ".", "params", "[", "'num_gnn_layers'", "]", ",", "\n", "in_dim", "=", "self", ".", "params", "[", "'num_feats'", "]", ",", "\n", "num_units", "=", "self", ".", "params", "[", "'num_hidden'", "]", ",", "\n", "outputs", "=", "5", ",", "\n", "heads", "=", "self", ".", "params", "[", "'heads'", "]", ",", "\n", "activations", "=", "activation_functions", "(", "self", ".", "params", "[", "'non-linearity'", "]", ")", ",", "\n", "feat_drop", "=", "self", ".", "params", "[", "'in_drop'", "]", ",", "\n", "attn_drop", "=", "self", ".", "params", "[", "'attn_drop'", "]", ",", "\n", "negative_slope", "=", "self", ".", "params", "[", "'alpha'", "]", ",", "\n", "residual", "=", "self", ".", "params", "[", "'residual'", "]", ")", "\n", "", "elif", "self", ".", "params", "[", "'net'", "]", "in", "[", "'rgcn'", "]", ":", "\n", "            ", "self", ".", "GNNmodel", "=", "RGCN", "(", "g", "=", "None", ",", "\n", "gnn_layers", "=", "self", ".", "params", "[", "'num_gnn_layers'", "]", ",", "\n", "in_dim", "=", "self", ".", "params", "[", "'num_feats'", "]", ",", "\n", "hidden_dimensions", "=", "self", ".", "params", "[", "'num_hidden'", "]", ",", "# feats hidden", "\n", "num_rels", "=", "self", ".", "params", "[", "'num_rels'", "]", ",", "\n", "activations", "=", "activation_functions", "(", "self", ".", "params", "[", "'non-linearity'", "]", ")", ",", "\n", "feat_drop", "=", "self", ".", "params", "[", "'in_drop'", "]", ",", "\n", "num_bases", "=", "self", ".", "params", "[", "'num_bases'", "]", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'Unknown/unsupported model in the parameters file'", ")", "\n", "sys", ".", "exit", "(", "0", ")", "\n", "\n", "\n", "", "self", ".", "GNNmodel", ".", "load_state_dict", "(", "torch", ".", "load", "(", "base", "+", "'/calibration.tch'", ",", "map_location", "=", "device", ")", ")", "\n", "self", ".", "GNNmodel", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "GNNmodel", ".", "eval", "(", ")", "\n", "\n", "if", "dataset", "is", "not", "None", ":", "\n", "            ", "self", ".", "test_dataloader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "1", ",", "collate_fn", "=", "collate", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.trackerapi.TrackerAPI.predictOneGraph": [[83, 87], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "trackerapi.TrackerAPI.predict"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.mlpnet.MLPNet.predict"], ["", "", "def", "predictOneGraph", "(", "self", ",", "g", ")", ":", "\n", "        ", "self", ".", "test_dataloader", "=", "DataLoader", "(", "g", ",", "batch_size", "=", "1", ",", "collate_fn", "=", "collate", ")", "\n", "logits", "=", "self", ".", "predict", "(", ")", "\n", "return", "logits", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.trackerapi.TrackerAPI.predict": [[88, 101], ["enumerate", "feats.to.to.to", "trackerapi.TrackerAPI.GNNmodel.set_g", "result.append", "trackerapi.TrackerAPI.GNNmodel", "trackerapi.TrackerAPI.GNNmodel", "feats.to.to.float", "subgraph.edata[].squeeze().to", "feats.to.to.float", "subgraph.edata[].squeeze"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.gat2.GAT2.set_g"], ["", "def", "predict", "(", "self", ")", ":", "\n", "        ", "result", "=", "[", "]", "\n", "for", "batch", ",", "data", "in", "enumerate", "(", "self", ".", "test_dataloader", ")", ":", "\n", "            ", "subgraph", ",", "feats", ",", "labels", "=", "data", "\n", "feats", "=", "feats", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "GNNmodel", ".", "set_g", "(", "subgraph", ")", "\n", "if", "self", ".", "params", "[", "'net'", "]", "in", "[", "'rgcn'", "]", ":", "\n", "                ", "logits", "=", "self", ".", "GNNmodel", "(", "feats", ".", "float", "(", ")", ",", "subgraph", ".", "edata", "[", "'rel_type'", "]", ".", "squeeze", "(", ")", ".", "to", "(", "self", ".", "device", ")", ")", "\n", "", "else", ":", "\n", "                ", "logits", "=", "self", ".", "GNNmodel", "(", "feats", ".", "float", "(", ")", ")", "\n", "", "result", ".", "append", "(", "logits", "[", "0", "]", ")", "\n", "#            yield logits[0]", "\n", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.trackerapi.activation_functions": [[10, 25], ["tuple", "ret.append", "ret.append", "ret.append", "ret.append", "print", "sys.exit"], "function", ["None"], ["def", "activation_functions", "(", "activation_tuple_src", ")", ":", "\n", "    ", "ret", "=", "[", "]", "\n", "for", "x", "in", "activation_tuple_src", ":", "\n", "        ", "if", "x", "==", "'relu'", ":", "\n", "            ", "ret", ".", "append", "(", "F", ".", "relu", ")", "\n", "", "elif", "x", "==", "'elu'", ":", "\n", "            ", "ret", ".", "append", "(", "F", ".", "elu", ")", "\n", "", "elif", "x", "==", "'tanh'", ":", "\n", "            ", "ret", ".", "append", "(", "torch", ".", "tanh", ")", "\n", "", "elif", "x", "==", "'leaky_relu'", ":", "\n", "            ", "ret", ".", "append", "(", "F", ".", "leaky_relu", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'Unknown activation function {}.'", ".", "format", "(", "x", ")", ")", "\n", "sys", ".", "exit", "(", "-", "1", ")", "\n", "", "", "return", "tuple", "(", "ret", ")", "\n", "", "sys", ".", "path", ".", "append", "(", "'nets'", ")", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.trackerapi.collate": [[32, 38], ["map", "dgl.batch", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "zip", "numpy.concatenate", "numpy.concatenate"], "function", ["None"], ["def", "collate", "(", "sample", ")", ":", "\n", "    ", "graphs", ",", "feats", ",", "labels", "=", "map", "(", "list", ",", "zip", "(", "*", "sample", ")", ")", "\n", "graph", "=", "dgl", ".", "batch", "(", "graphs", ")", "\n", "feats", "=", "torch", ".", "from_numpy", "(", "np", ".", "concatenate", "(", "feats", ")", ")", "\n", "labels", "=", "torch", ".", "from_numpy", "(", "np", ".", "concatenate", "(", "labels", ")", ")", "\n", "return", "graph", ",", "feats", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.generate_training_hyperparameter_samples.print_best_options": [[15, 75], ["range", "print", "print", "print", "print", "print", "best.keys", "print", "len", "print", "print", "print", "matplotlib.plot", "matplotlib.plot", "matplotlib.legend", "matplotlib.show", "print", "int", "int", "print", "print", "range", "math.floor", "math.floor", "len", "range", "len"], "function", ["None"], ["def", "print_best_options", "(", "list_of_tasks", ")", ":", "\n", "    ", "best_loss", "=", "-", "1", "\n", "best", "=", "None", "\n", "best_index", "=", "None", "\n", "pending", ",", "failed", ",", "done", "=", "0", ",", "0", ",", "0", "\n", "for", "index", "in", "range", "(", "len", "(", "list_of_tasks", ")", ")", ":", "\n", "# Get info", "\n", "        ", "selected", "=", "list_of_tasks", "[", "index", "]", "\n", "loss", ",", "fw", ",", "net", "=", "selected", "[", "'test_loss'", "]", ",", "selected", "[", "'fw'", "]", ",", "selected", "[", "'gnn_network'", "]", "\n", "# Handle: pending/failed/done", "\n", "if", "loss", "<", "0.0", ":", "\n", "            ", "if", "selected", "[", "'train_loss'", "]", "==", "0.0", ":", "\n", "                ", "failed", "+=", "1", "\n", "", "else", ":", "\n", "                ", "pending", "+=", "1", "\n", "", "", "else", ":", "\n", "            ", "done", "+=", "1", "\n", "print", "(", "'DONE'", ",", "selected", ")", "\n", "# Handle overall best", "\n", "", "if", "(", "loss", "<", "best_loss", "and", "loss", ">", "0.", ")", "or", "best_loss", "<=", "0", ":", "\n", "            ", "best_loss", "=", "loss", "\n", "best", "=", "list_of_tasks", "[", "index", "]", "\n", "best_index", "=", "index", "\n", "# Handle best by type", "\n", "", "if", "(", "fw", ",", "net", ")", "in", "best_by_option", ":", "\n", "            ", "if", "loss", ">", "0", ":", "\n", "                ", "if", "loss", "<", "best_by_option", "[", "(", "fw", ",", "net", ")", "]", "[", "'test_loss'", "]", ":", "\n", "                    ", "best_by_option", "[", "(", "fw", ",", "net", ")", "]", "=", "selected", "\n", "", "", "", "elif", "loss", ">", "0", ":", "\n", "            ", "best_by_option", "[", "(", "fw", ",", "net", ")", "]", "=", "selected", "\n", "\n", "", "", "print", "(", "'BEST BY OPTION'", ")", "\n", "for", "k", "in", "best_by_option", ":", "\n", "        ", "print", "(", "k", ")", "\n", "print", "(", "best_by_option", "[", "k", "]", ")", "\n", "print", "(", "''", ")", "\n", "", "print", "(", "'Pending:'", ",", "pending", ")", "\n", "print", "(", "'Failed:'", ",", "failed", ")", "\n", "print", "(", "'Done:'", ",", "done", ")", "\n", "print", "(", "'Best result:'", ")", "\n", "for", "k", "in", "best", ".", "keys", "(", ")", ":", "\n", "        ", "if", "'_scores'", "in", "k", ":", "\n", "            ", "continue", "\n", "", "if", "k", "==", "'elapsed'", ":", "\n", "            ", "v", "=", "best", "[", "k", "]", "\n", "hours", "=", "int", "(", "floor", "(", "v", "/", "3600", ")", ")", "\n", "v", "=", "v", "-", "hours", "*", "3600", "\n", "minutes", "=", "int", "(", "floor", "(", "v", "/", "60", ")", ")", "\n", "print", "(", "f'elapsed: {hours}h {minutes}m'", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "k", ",", "best", "[", "k", "]", ")", "\n", "", "", "print", "(", "'Best index:'", ",", "best_index", ")", "\n", "\n", "try", ":", "\n", "        ", "plt", ".", "plot", "(", "range", "(", "1", ",", "len", "(", "list_of_tasks", "[", "best_index", "]", "[", "'train_scores'", "]", ")", ")", ",", "list_of_tasks", "[", "best_index", "]", "[", "'train_scores'", "]", "[", "1", ":", "]", ",", "'-'", ",", "label", "=", "'train'", ")", "\n", "plt", ".", "plot", "(", "[", "5.", "*", "x", "for", "x", "in", "range", "(", "1", ",", "len", "(", "list_of_tasks", "[", "best_index", "]", "[", "'dev_scores'", "]", ")", ")", "]", ",", "list_of_tasks", "[", "best_index", "]", "[", "'dev_scores'", "]", "[", "1", ":", "]", ",", "'-'", ",", "label", "=", "'dev'", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "show", "(", ")", "\n", "", "except", "KeyError", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.generate_training_hyperparameter_samples.get_random_hyperparameters": [[77, 141], ["random.randrange", "random.randrange", "range", "gnn_units.append", "gnn_heads.append", "random.choice", "random.randrange", "random.randrange", "float", "float", "float", "float", "int", "int", "gnn_units.append", "gnn_heads.append", "random.randrange", "random.choice", "random.choice", "random.choice", "random.choice", "random.uniform", "random.choice", "random.randrange", "len", "random.choice"], "function", ["None"], ["", "", "def", "get_random_hyperparameters", "(", "identifier", ")", ":", "\n", "    ", "fw_net_map", "=", "{", "0", ":", "(", "'dgl'", ",", "'rgcn'", ")", ",", "1", ":", "(", "'dgl'", ",", "'gat'", ")", "}", "\n", "\n", "fw", ",", "net", "=", "fw_net_map", "[", "randrange", "(", "len", "(", "fw_net_map", ")", ")", "]", "\n", "if", "net", "in", "[", "'rgcn'", "]", ":", "\n", "        ", "graph_type", "=", "choice", "(", "[", "'1'", "]", ")", "\n", "", "else", ":", "\n", "        ", "graph_type", "=", "'1'", "\n", "\n", "\n", "", "gnn_layers", "=", "randrange", "(", "start", "=", "2", ",", "stop", "=", "6", ")", "\n", "# print('gnn_layers: {}'.format(gnn_layers))", "\n", "last_gnn_units", "=", "5", "# x, y, z, cos/sin", "\n", "# print('last_gnn_units: {}'.format(last_gnn_units))", "\n", "first_gnn_units", "=", "randrange", "(", "start", "=", "10", ",", "stop", "=", "70", ")", "\n", "\n", "# print('first_gnn_units: {}'.format(first_gnn_units))", "\n", "gnn_units", "=", "[", "first_gnn_units", "]", "\n", "\n", "if", "'gat'", "in", "net", ":", "\n", "        ", "first_gnn_heads", "=", "randrange", "(", "start", "=", "3", ",", "stop", "=", "20", ")", "\n", "# print('first_gnn_heads: {}'.format(first_gnn_heads))", "\n", "last_gnn_heads", "=", "randrange", "(", "start", "=", "3", ",", "stop", "=", "20", ")", "\n", "# print('last_gnn_heads: {}'.format(first_gnn_heads))", "\n", "", "else", ":", "\n", "        ", "first_gnn_heads", "=", "1", "\n", "last_gnn_heads", "=", "1", "\n", "", "gnn_heads", "=", "[", "first_gnn_heads", "]", "\n", "\n", "diff_units", "=", "float", "(", "last_gnn_units", "-", "first_gnn_units", ")", "/", "float", "(", "gnn_layers", "-", "1", ")", "\n", "diff_heads", "=", "float", "(", "last_gnn_heads", "-", "first_gnn_heads", ")", "/", "float", "(", "gnn_layers", "-", "1", ")", "\n", "for", "l", "in", "range", "(", "1", ",", "gnn_layers", "-", "1", ")", ":", "\n", "        ", "hidden_units", "=", "int", "(", "first_gnn_units", "+", "diff_units", "*", "l", ")", "\n", "hidden_heads", "=", "int", "(", "first_gnn_heads", "+", "diff_heads", "*", "l", ")", "\n", "gnn_units", ".", "append", "(", "hidden_units", ")", "\n", "gnn_heads", ".", "append", "(", "hidden_heads", ")", "\n", "", "gnn_units", ".", "append", "(", "last_gnn_units", ")", "\n", "gnn_heads", ".", "append", "(", "last_gnn_heads", ")", "\n", "\n", "hyperparameters", "=", "{", "\n", "'identifier'", ":", "identifier", ",", "\n", "'fw'", ":", "fw", ",", "\n", "'gnn_network'", ":", "net", ",", "\n", "'graph_type'", ":", "graph_type", ",", "\n", "'epochs'", ":", "1000", ",", "# 1000", "\n", "'patience'", ":", "6", ",", "\n", "'outputs'", ":", "5", ",", "\n", "'batch_size'", ":", "randrange", "(", "start", "=", "5", ",", "stop", "=", "15", ")", ",", "# start=100, stop=1500", "\n", "'num_gnn_units'", ":", "gnn_units", ",", "\n", "'num_gnn_heads'", ":", "gnn_heads", ",", "\n", "'lr'", ":", "choice", "(", "[", "0.0001", ",", "0.00025", ",", "0.0005", "]", ")", ",", "\n", "'num_gnn_layers'", ":", "gnn_layers", ",", "\n", "'weight_decay'", ":", "choice", "(", "[", "0.", ",", "0.00000001", ",", "0.00000000001", "]", ")", ",", "\n", "'non-linearity'", ":", "[", "choice", "(", "[", "'relu'", ",", "'elu'", "]", ")", "]", "*", "(", "gnn_layers", "-", "1", ")", "+", "[", "'tanh'", "]", ",", "\n", "'num_bases'", ":", "choice", "(", "[", "-", "1", ",", "-", "1", ",", "-", "1", ",", "-", "1", ",", "-", "1", ",", "4", ",", "8", ",", "10", ",", "16", ",", "20", "]", ")", ",", "\n", "'in_drop'", ":", "choice", "(", "[", "0.00001", ",", "0.000001", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", "]", ")", ",", "\n", "'alpha'", ":", "uniform", "(", "0.1", ",", "0.3", ")", ",", "\n", "'attn_drop'", ":", "choice", "(", "[", "0.00001", ",", "0.000001", ",", "0.00001", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0", ",", "0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0", ",", "0", ",", "0.0", ",", "0.0", "]", ")", ",", "\n", "'train_loss'", ":", "-", "1.", ",", "\n", "'dev_loss'", ":", "-", "1.", ",", "\n", "'test_loss'", ":", "-", "1.", ",", "\n", "'test_time'", ":", "-", "1.", "\n", "}", "\n", "return", "hyperparameters", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.train_batched.activation_functions": [[33, 49], ["print", "tuple", "ret.append", "ret.append", "ret.append", "ret.append", "print", "sys.exit"], "function", ["None"], ["def", "activation_functions", "(", "activation_tuple_src", ")", ":", "\n", "    ", "ret", "=", "[", "]", "\n", "for", "x", "in", "activation_tuple_src", ":", "\n", "        ", "if", "x", "==", "'relu'", ":", "\n", "            ", "ret", ".", "append", "(", "F", ".", "relu", ")", "\n", "", "elif", "x", "==", "'elu'", ":", "\n", "            ", "ret", ".", "append", "(", "F", ".", "elu", ")", "\n", "", "elif", "x", "==", "'tanh'", ":", "\n", "            ", "ret", ".", "append", "(", "torch", ".", "tanh", ")", "\n", "", "elif", "x", "==", "'leaky_relu'", ":", "\n", "            ", "ret", ".", "append", "(", "F", ".", "leaky_relu", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'Unknown activation function {}.'", ".", "format", "(", "x", ")", ")", "\n", "sys", ".", "exit", "(", "-", "1", ")", "\n", "", "", "print", "(", "f'ACTIVATIONS: {ret}'", ")", "\n", "return", "tuple", "(", "ret", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.train_batched.num_of_params": [[50, 53], ["filter", "sum", "model.parameters", "numpy.prod", "p.size"], "function", ["None"], ["", "def", "num_of_params", "(", "model", ")", ":", "\n", "    ", "model_parameters", "=", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "model", ".", "parameters", "(", ")", ")", "\n", "return", "sum", "(", "[", "np", ".", "prod", "(", "p", ".", "size", "(", ")", ")", "for", "p", "in", "model_parameters", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.train_batched.describe_model": [[59, 64], ["print", "model.state_dict", "print", "[].size", "model.state_dict"], "function", ["None"], ["", "def", "describe_model", "(", "model", ")", ":", "\n", "# Print model's state_dict", "\n", "    ", "print", "(", "\"Model's state_dict:\"", ")", "\n", "for", "param_tensor", "in", "model", ".", "state_dict", "(", ")", ":", "\n", "        ", "print", "(", "param_tensor", ",", "\"\\t\"", ",", "model", ".", "state_dict", "(", ")", "[", "param_tensor", "]", ".", "size", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.train_batched.collate": [[66, 72], ["map", "dgl.batch", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "zip", "numpy.concatenate", "numpy.concatenate"], "function", ["None"], ["", "", "def", "collate", "(", "sample", ")", ":", "\n", "    ", "graphs", ",", "feats", ",", "labels", "=", "map", "(", "list", ",", "zip", "(", "*", "sample", ")", ")", "\n", "graph", "=", "dgl", ".", "batch", "(", "graphs", ")", "\n", "feats", "=", "torch", ".", "from_numpy", "(", "np", ".", "concatenate", "(", "feats", ")", ")", "\n", "labels", "=", "torch", ".", "from_numpy", "(", "np", ".", "concatenate", "(", "labels", ")", ")", "\n", "return", "graph", ",", "feats", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.train_batched.evaluate": [[74, 90], ["torch.no_grad", "torch.no_grad", "model.eval", "loss_fcn", "output[].data.cpu().numpy", "sklearn.metrics.mean_squared_error", "labels.float", "labels.data.cpu().numpy", "loss_fcn.item", "model", "model", "train_batched.getMaskForBatch", "output[].data.cpu", "feats.float", "subgraph.edata[].to().squeeze", "feats.float", "labels.data.cpu", "subgraph.edata[].to", "train_batched.getMaskForBatch"], "function", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.train_batched.getMaskForBatch", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.train_batched.getMaskForBatch"], ["", "def", "evaluate", "(", "feats", ",", "model", ",", "subgraph", ",", "labels", ",", "loss_fcn", ",", "fw", ",", "net", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "model", ".", "eval", "(", ")", "\n", "if", "fw", "==", "'dgl'", ":", "\n", "            ", "model", ".", "g", "=", "subgraph", "\n", "for", "layer", "in", "model", ".", "layers", ":", "\n", "                ", "layer", ".", "g", "=", "subgraph", "\n", "", "if", "net", "in", "[", "'rgcn'", "]", ":", "\n", "                ", "output", "=", "model", "(", "feats", ".", "float", "(", ")", ",", "subgraph", ".", "edata", "[", "'rel_type'", "]", ".", "to", "(", "device", ")", ".", "squeeze", "(", ")", ")", "\n", "", "else", ":", "\n", "                ", "output", "=", "model", "(", "feats", ".", "float", "(", ")", ")", "\n", "", "", "oput", "=", "output", "[", "getMaskForBatch", "(", "subgraph", ")", "]", "\n", "loss_data", "=", "loss_fcn", "(", "oput", ",", "labels", ".", "float", "(", ")", ")", "\n", "predict", "=", "output", "[", "getMaskForBatch", "(", "subgraph", ")", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "score", "=", "mean_squared_error", "(", "labels", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "predict", ")", "\n", "return", "score", ",", "loss_data", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.train_batched.getMaskForBatch": [[92, 99], ["dgl.unbatch", "indexes.append", "g.number_of_nodes"], "function", ["None"], ["", "", "def", "getMaskForBatch", "(", "subgraph", ")", ":", "\n", "    ", "first_node_index_in_the_next_graph", "=", "0", "\n", "indexes", "=", "[", "]", "\n", "for", "g", "in", "dgl", ".", "unbatch", "(", "subgraph", ")", ":", "\n", "        ", "indexes", ".", "append", "(", "first_node_index_in_the_next_graph", ")", "\n", "first_node_index_in_the_next_graph", "+=", "g", ".", "number_of_nodes", "(", ")", "\n", "", "return", "indexes", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.train_batched.signal_handler": [[102, 112], ["print", "print", "sys.exit"], "function", ["None"], ["def", "signal_handler", "(", "sig", ",", "frame", ")", ":", "\n", "    ", "global", "ctrl_c_counter", "\n", "ctrl_c_counter", "+=", "1", "\n", "if", "ctrl_c_counter", ">=", "6", ":", "\n", "        ", "sys", ".", "exit", "(", "-", "1", ")", "\n", "", "elif", "ctrl_c_counter", ">=", "3", ":", "\n", "        ", "global", "stop_training", "\n", "stop_training", "=", "True", "\n", "", "print", "(", "'\\nIf you press Ctr+c 3  times we will stop    _SAVING_   the training information ({} times)'", ".", "format", "(", "ctrl_c_counter", ")", ")", "\n", "print", "(", "'If you press Ctr+c 6+ times we will stop  _NOT SAVING_ the training information ({} times)'", ".", "format", "(", "ctrl_c_counter", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.train_batched.main": [[119, 313], ["float", "float", "train_batched.activation_functions", "torch.nn.MSELoss", "torch.nn.MSELoss", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "graph_generator.CalibrationDataset", "print", "graph_generator.CalibrationDataset", "print", "graph_generator.CalibrationDataset", "print", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "len", "print", "dgl.batch", "torch.optim.Adam", "torch.optim.Adam", "nets.rgcnDGL.RGCN.to", "range", "time.time", "time.time", "enumerate", "time.time", "time.time", "float", "numpy.array().mean", "print", "graph_generator.HumanGraph.get_rels", "nets.rgcnDGL.RGCN.parameters", "nets.rgcnDGL.RGCN.load_state_dict", "nets.rgcnDGL.RGCN.train", "enumerate", "numpy.array().mean", "print", "output_list_records_train_loss.append", "subgraph.set_n_initializer", "subgraph.set_e_initializer", "feats.to.to", "labels.to.to", "test_score_list.append", "train_batched.num_of_params", "print", "nets.gat.GAT", "torch.load", "torch.load", "print", "subgraph.set_n_initializer", "subgraph.set_e_initializer", "feats.to.to", "labels.to.to", "torch.nn.MSELoss.", "torch.optim.Adam.zero_grad", "[].clone", "loss_fcn.backward", "torch.optim.Adam.step", "[].clone", "torch.equal", "torch.equal", "loss_list.append", "float", "print", "enumerate", "numpy.array().mean", "numpy.array().mean", "print", "output_list_records_dev_loss.append", "numpy.array", "print", "nets.rgcnDGL.RGCN", "print", "sys.exit", "labels.to.float", "print", "sys.exit", "loss_fcn.item", "numpy.array", "subgraph.set_n_initializer", "subgraph.set_e_initializer", "feats.to.to", "labels.to.to", "train_batched.evaluate", "score_list.append", "val_loss_list.append", "print", "str().zfill", "os.system", "nets.rgcnDGL.RGCN.eval", "torch.save", "torch.save", "pickle.dump", "train_batched.evaluate", "nets.rgcnDGL.RGCN.", "nets.rgcnDGL.RGCN.", "feats.to.float", "labels.to.float", "numpy.array", "numpy.array", "nets.rgcnDGL.RGCN.state_dict", "open", "labels.to.float", "feats.to.float", "subgraph.edata[].squeeze().to", "feats.to.float", "train_batched.getMaskForBatch", "list", "list", "str", "nets.rgcnDGL.RGCN.parameters", "nets.rgcnDGL.RGCN.parameters", "subgraph.edata[].squeeze"], "function", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.train_batched.activation_functions", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.graph_generator.HumanGraph.get_rels", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.train_batched.num_of_params", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.train_batched.evaluate", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.train_batched.evaluate", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.None.train_batched.getMaskForBatch"], ["def", "main", "(", "training_file", ",", "dev_file", ",", "test_file", ",", "task", ",", "previous_model", "=", "None", ")", ":", "\n", "    ", "global", "stop_training", "\n", "\n", "graph_type", "=", "task", "[", "'graph_type'", "]", "\n", "net", "=", "task", "[", "'gnn_network'", "]", "\n", "epochs", "=", "task", "[", "'epochs'", "]", "\n", "patience", "=", "task", "[", "'patience'", "]", "\n", "batch_size", "=", "task", "[", "'batch_size'", "]", "\n", "num_hidden", "=", "task", "[", "'num_gnn_units'", "]", "\n", "heads", "=", "task", "[", "'num_gnn_heads'", "]", "\n", "residual", "=", "False", "\n", "lr", "=", "task", "[", "'lr'", "]", "\n", "outputs", "=", "task", "[", "'outputs'", "]", "\n", "weight_decay", "=", "task", "[", "'weight_decay'", "]", "\n", "gnn_layers", "=", "task", "[", "'num_gnn_layers'", "]", "\n", "in_drop", "=", "task", "[", "'in_drop'", "]", "\n", "alpha", "=", "task", "[", "'alpha'", "]", "\n", "attn_drop", "=", "task", "[", "'attn_drop'", "]", "\n", "num_bases", "=", "task", "[", "'num_bases'", "]", "\n", "\n", "fw", "=", "task", "[", "'fw'", "]", "\n", "identifier", "=", "task", "[", "'identifier'", "]", "\n", "nonlinearity_str", "=", "task", "[", "'non-linearity'", "]", "\n", "min_train_loss", "=", "float", "(", "\"inf\"", ")", "\n", "min_dev_loss", "=", "float", "(", "\"inf\"", ")", "\n", "\n", "nonlinearity", "=", "activation_functions", "(", "nonlinearity_str", ")", "\n", "\n", "output_list_records_train_loss", "=", "[", "]", "\n", "output_list_records_dev_loss", "=", "[", "]", "\n", "\n", "loss_fcn", "=", "torch", ".", "nn", ".", "MSELoss", "(", ")", "#(reduction='sum')", "\n", "\n", "print", "(", "'========================='", ")", "\n", "print", "(", "'HEADS'", ",", "heads", ")", "\n", "print", "(", "'GNN LAYERS'", ",", "gnn_layers", ")", "\n", "print", "(", "'HIDDEN'", ",", "num_hidden", ")", "\n", "print", "(", "'RESIDUAL'", ",", "residual", ")", "\n", "print", "(", "'inDROP'", ",", "in_drop", ")", "\n", "print", "(", "'atDROP'", ",", "attn_drop", ")", "\n", "print", "(", "'LR'", ",", "lr", ")", "\n", "print", "(", "'DECAY'", ",", "weight_decay", ")", "\n", "print", "(", "'ALPHA'", ",", "alpha", ")", "\n", "print", "(", "'BATCH'", ",", "batch_size", ")", "\n", "print", "(", "'GRAPH_ALT'", ",", "graph_type", ")", "\n", "print", "(", "'ARCHITECTURE'", ",", "net", ")", "\n", "print", "(", "'========================='", ")", "\n", "\n", "# create the dataset", "\n", "print", "(", "'Loading training set...'", ")", "\n", "train_dataset", "=", "CalibrationDataset", "(", "training_file", ",", "mode", "=", "'train'", ",", "alt", "=", "graph_type", ")", "\n", "print", "(", "'Loading dev set...'", ")", "\n", "valid_dataset", "=", "CalibrationDataset", "(", "dev_file", ",", "mode", "=", "'valid'", ",", "alt", "=", "graph_type", ")", "\n", "print", "(", "'Loading test set...'", ")", "\n", "test_dataset", "=", "CalibrationDataset", "(", "test_file", ",", "mode", "=", "'test'", ",", "alt", "=", "graph_type", ")", "\n", "print", "(", "'Done loading files'", ")", "\n", "train_dataloader", "=", "DataLoader", "(", "train_dataset", ",", "batch_size", "=", "batch_size", ",", "collate_fn", "=", "collate", ")", "\n", "valid_dataloader", "=", "DataLoader", "(", "valid_dataset", ",", "batch_size", "=", "batch_size", ",", "collate_fn", "=", "collate", ")", "\n", "test_dataloader", "=", "DataLoader", "(", "test_dataset", ",", "batch_size", "=", "batch_size", ",", "collate_fn", "=", "collate", ")", "\n", "\n", "num_rels", "=", "len", "(", "HumanGraph", ".", "get_rels", "(", ")", ")", "\n", "\n", "if", "num_bases", "<", "0", ":", "\n", "        ", "num_bases", "=", "num_rels", "\n", "\n", "", "cur_step", "=", "0", "\n", "best_loss", "=", "-", "1", "\n", "num_feats", "=", "train_dataset", "[", "0", "]", "[", "0", "]", ".", "features", ".", "shape", "[", "1", "]", "\n", "print", "(", "'Number of features: {}'", ".", "format", "(", "num_feats", ")", ")", "\n", "g", "=", "dgl", ".", "batch", "(", "train_dataset", ".", "data", ")", "\n", "# define the model", "\n", "if", "fw", "==", "'dgl'", ":", "\n", "        ", "if", "net", "in", "[", "'gat'", "]", ":", "\n", "            ", "print", "(", "f'CREATING GAT(GRAPH, gnn_layers:{gnn_layers}, num_feats:{num_feats}, num_hidden:{num_hidden}, output {outputs},  heads:{heads}, non-linearity:{nonlinearity}, drop:{in_drop}, attn_drop:{attn_drop})'", ")", "\n", "model", "=", "GAT", "(", "g", ",", "gnn_layers", ",", "num_feats", ",", "num_hidden", ",", "outputs", ",", "heads", ",", "nonlinearity", ",", "in_drop", ",", "attn_drop", ",", "residual", ")", "\n", "", "elif", "net", "in", "[", "'rgcn'", "]", ":", "\n", "            ", "print", "(", "f'CREATING RGCN(GRAPH, gnn_layers:{gnn_layers}, num_feats:{num_feats}, num_hidden:{num_hidden}, num_rels:{num_rels}, non-linearity:{nonlinearity}, drop:{in_drop})'", ")", "\n", "model", "=", "RGCN", "(", "g", ",", "gnn_layers", ",", "num_feats", ",", "num_hidden", ",", "num_rels", ",", "nonlinearity", ",", "in_drop", ",", "num_bases", "=", "num_bases", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'No valid GNN model specified'", ")", "\n", "sys", ".", "exit", "(", "0", ")", "\n", "\n", "", "", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "weight_decay", "=", "weight_decay", ")", "\n", "if", "previous_model", "is", "not", "None", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "previous_model", ",", "map_location", "=", "device", ")", ")", "\n", "\n", "", "model", "=", "model", ".", "to", "(", "device", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "epochs", ")", ":", "\n", "        ", "if", "stop_training", ":", "\n", "            ", "print", "(", "\"Stopping training. Please wait.\"", ")", "\n", "break", "\n", "", "model", ".", "train", "(", ")", "\n", "loss_list", "=", "[", "]", "\n", "for", "batch", ",", "data", "in", "enumerate", "(", "train_dataloader", ")", ":", "\n", "            ", "subgraph", ",", "feats", ",", "labels", "=", "data", "\n", "subgraph", ".", "set_n_initializer", "(", "dgl", ".", "init", ".", "zero_initializer", ")", "\n", "subgraph", ".", "set_e_initializer", "(", "dgl", ".", "init", ".", "zero_initializer", ")", "\n", "feats", "=", "feats", ".", "to", "(", "device", ")", "\n", "labels", "=", "labels", ".", "to", "(", "device", ")", "\n", "if", "fw", "==", "'dgl'", ":", "\n", "                ", "model", ".", "g", "=", "subgraph", "\n", "for", "layer", "in", "model", ".", "layers", ":", "\n", "                    ", "layer", ".", "g", "=", "subgraph", "\n", "", "if", "net", "in", "[", "'rgcn'", "]", ":", "\n", "                    ", "logits", "=", "model", "(", "feats", ".", "float", "(", ")", ",", "subgraph", ".", "edata", "[", "'rel_type'", "]", ".", "squeeze", "(", ")", ".", "to", "(", "device", ")", ")", "\n", "", "else", ":", "\n", "                    ", "logits", "=", "model", "(", "feats", ".", "float", "(", ")", ")", "\n", "", "", "loss", "=", "loss_fcn", "(", "logits", "[", "getMaskForBatch", "(", "subgraph", ")", "]", ",", "labels", ".", "float", "(", ")", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "a", "=", "list", "(", "model", ".", "parameters", "(", ")", ")", "[", "0", "]", ".", "clone", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "b", "=", "list", "(", "model", ".", "parameters", "(", ")", ")", "[", "0", "]", ".", "clone", "(", ")", "\n", "not_learning", "=", "torch", ".", "equal", "(", "a", ".", "data", ",", "b", ".", "data", ")", "\n", "if", "not_learning", ":", "\n", "                ", "print", "(", "'Not learning'", ")", "\n", "sys", ".", "exit", "(", "1", ")", "\n", "", "loss_list", ".", "append", "(", "loss", ".", "item", "(", ")", ")", "\n", "", "loss_data", "=", "np", ".", "array", "(", "loss_list", ")", ".", "mean", "(", ")", "\n", "if", "loss_data", "<", "min_train_loss", ":", "\n", "            ", "min_train_loss", "=", "loss_data", "\n", "", "print", "(", "'Loss: {}'", ".", "format", "(", "loss_data", ")", ")", "\n", "output_list_records_train_loss", ".", "append", "(", "float", "(", "loss_data", ")", ")", "\n", "if", "epoch", "%", "5", "==", "0", ":", "\n", "            ", "print", "(", "\"Epoch {:05d} | Loss: {:.6f} | Patience: {} | \"", ".", "format", "(", "epoch", ",", "loss_data", ",", "cur_step", ")", ",", "end", "=", "''", ")", "\n", "score_list", "=", "[", "]", "\n", "val_loss_list", "=", "[", "]", "\n", "for", "batch", ",", "valid_data", "in", "enumerate", "(", "valid_dataloader", ")", ":", "\n", "                ", "subgraph", ",", "feats", ",", "labels", "=", "valid_data", "\n", "subgraph", ".", "set_n_initializer", "(", "dgl", ".", "init", ".", "zero_initializer", ")", "\n", "subgraph", ".", "set_e_initializer", "(", "dgl", ".", "init", ".", "zero_initializer", ")", "\n", "feats", "=", "feats", ".", "to", "(", "device", ")", "\n", "labels", "=", "labels", ".", "to", "(", "device", ")", "\n", "score", ",", "val_loss", "=", "evaluate", "(", "feats", ".", "float", "(", ")", ",", "model", ",", "subgraph", ",", "labels", ".", "float", "(", ")", ",", "loss_fcn", ",", "fw", ",", "net", ")", "\n", "score_list", ".", "append", "(", "score", ")", "\n", "val_loss_list", ".", "append", "(", "val_loss", ")", "\n", "", "mean_score", "=", "np", ".", "array", "(", "score_list", ")", ".", "mean", "(", ")", "\n", "mean_val_loss", "=", "np", ".", "array", "(", "val_loss_list", ")", ".", "mean", "(", ")", "\n", "print", "(", "\"Score: {:.6f} MEAN: {:.6f} BEST: {:.6f}\"", ".", "format", "(", "mean_score", ",", "mean_val_loss", ",", "best_loss", ")", ")", "\n", "output_list_records_dev_loss", ".", "append", "(", "mean_val_loss", ")", "\n", "\n", "# early stop", "\n", "if", "best_loss", ">", "mean_val_loss", "or", "best_loss", "<", "0", ":", "\n", "                ", "print", "(", "'Saving...'", ")", "\n", "directory", "=", "str", "(", "identifier", ")", ".", "zfill", "(", "5", ")", "\n", "os", ".", "system", "(", "'mkdir '", "+", "directory", "+", "' 2> /dev/null'", ")", "\n", "best_loss", "=", "mean_val_loss", "\n", "if", "best_loss", "<", "min_dev_loss", ":", "\n", "                    ", "min_dev_loss", "=", "best_loss", "\n", "\n", "# Save the model", "\n", "", "model", ".", "eval", "(", ")", "\n", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "directory", "+", "'/calibration.tch'", ")", "\n", "params", "=", "{", "\n", "'train_loss'", ":", "min_train_loss", ",", "\n", "'dev_loss'", ":", "min_dev_loss", ",", "\n", "'net'", ":", "net", ",", "\n", "'fw'", ":", "fw", ",", "\n", "'num_gnn_layers'", ":", "gnn_layers", ",", "\n", "'num_feats'", ":", "num_feats", ",", "\n", "'num_hidden'", ":", "num_hidden", ",", "\n", "'graph_type'", ":", "graph_type", ",", "\n", "'heads'", ":", "heads", ",", "\n", "'non-linearity'", ":", "nonlinearity_str", ",", "\n", "'in_drop'", ":", "in_drop", ",", "\n", "'attn_drop'", ":", "attn_drop", ",", "\n", "'alpha'", ":", "alpha", ",", "\n", "'residual'", ":", "residual", ",", "\n", "'num_rels'", ":", "num_rels", ",", "\n", "'num_bases'", ":", "num_bases", ",", "\n", "'train_scores'", ":", "output_list_records_train_loss", ",", "\n", "'dev_scores'", ":", "output_list_records_dev_loss", "\n", "}", "\n", "pickle", ".", "dump", "(", "params", ",", "open", "(", "directory", "+", "'/calibration.prms'", ",", "'wb'", ")", ")", "\n", "cur_step", "=", "0", "\n", "", "else", ":", "\n", "                ", "cur_step", "+=", "1", "\n", "if", "cur_step", ">=", "patience", ":", "\n", "                    ", "break", "\n", "", "", "", "", "time_a", "=", "time", ".", "time", "(", ")", "\n", "test_score_list", "=", "[", "]", "\n", "for", "batch", ",", "test_data", "in", "enumerate", "(", "test_dataloader", ")", ":", "\n", "        ", "subgraph", ",", "feats", ",", "labels", "=", "test_data", "\n", "subgraph", ".", "set_n_initializer", "(", "dgl", ".", "init", ".", "zero_initializer", ")", "\n", "subgraph", ".", "set_e_initializer", "(", "dgl", ".", "init", ".", "zero_initializer", ")", "\n", "feats", "=", "feats", ".", "to", "(", "device", ")", "\n", "labels", "=", "labels", ".", "to", "(", "device", ")", "\n", "test_score_list", ".", "append", "(", "evaluate", "(", "feats", ",", "model", ",", "subgraph", ",", "labels", ".", "float", "(", ")", ",", "loss_fcn", ",", "fw", ",", "net", ")", "[", "1", "]", ")", "\n", "", "time_b", "=", "time", ".", "time", "(", ")", "\n", "time_delta", "=", "float", "(", "time_b", "-", "time_a", ")", "\n", "test_loss", "=", "np", ".", "array", "(", "test_score_list", ")", ".", "mean", "(", ")", "\n", "print", "(", "\"MSE for the test set {}\"", ".", "format", "(", "test_loss", ")", ")", "\n", "return", "min_train_loss", ",", "min_dev_loss", ",", "test_loss", ",", "time_delta", ",", "num_of_params", "(", "model", ")", ",", "epoch", ",", "output_list_records_train_loss", ",", "output_list_records_dev_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.rgcn2.RGCNLayer.__init__": [[9, 35], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "print", "print", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.init.calculate_gain", "torch.init.calculate_gain", "torch.init.calculate_gain", "torch.init.calculate_gain", "torch.init.calculate_gain", "torch.init.calculate_gain", "torch.init.calculate_gain", "torch.init.calculate_gain", "torch.init.calculate_gain", "torch.init.calculate_gain", "torch.init.calculate_gain", "torch.init.calculate_gain"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.pg_rgcn_gat3.PRGAT3.__init__"], ["    ", "def", "__init__", "(", "self", ",", "g", ",", "in_feat", ",", "out_feat", ",", "num_rels", ",", "bias", "=", "None", ",", "activation", "=", "None", ",", "is_input_layer", "=", "False", ")", ":", "\n", "        ", "super", "(", "RGCNLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "g", "=", "g", "\n", "self", ".", "in_feat", "=", "in_feat", "\n", "self", ".", "out_feat", "=", "out_feat", "\n", "self", ".", "num_rels", "=", "num_rels", "\n", "self", ".", "bias", "=", "bias", "\n", "self", ".", "activation", "=", "activation", "\n", "self", ".", "is_input_layer", "=", "is_input_layer", "\n", "\n", "# weight in equation (3)", "\n", "self", ".", "weight1", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "self", ".", "num_rels", ",", "self", ".", "in_feat", ",", "self", ".", "in_feat", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "weight2", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "self", ".", "num_rels", ",", "self", ".", "in_feat", ",", "self", ".", "out_feat", ")", ",", "requires_grad", "=", "True", ")", "\n", "# add bias", "\n", "if", "self", ".", "bias", ":", "\n", "            ", "self", ".", "bias1", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "in_feat", ",", "1", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "bias2", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "out_feat", ",", "1", ")", ",", "requires_grad", "=", "True", ")", "\n", "print", "(", "self", ".", "bias1", ".", "shape", ")", "\n", "print", "(", "self", ".", "bias2", ".", "shape", ")", "\n", "\n", "# init trainable parameters", "\n", "", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "weight1", ",", "gain", "=", "nn", ".", "init", ".", "calculate_gain", "(", "'relu'", ")", ")", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "weight2", ",", "gain", "=", "nn", ".", "init", ".", "calculate_gain", "(", "'relu'", ")", ")", "\n", "if", "self", ".", "bias", ":", "\n", "            ", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "bias1", ",", "gain", "=", "nn", ".", "init", ".", "calculate_gain", "(", "'relu'", ")", ")", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "bias2", ",", "gain", "=", "nn", ".", "init", ".", "calculate_gain", "(", "'relu'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.rgcn2.RGCNLayer.forward": [[36, 60], ["rgcn2.RGCNLayer.g.ndata.update", "rgcn2.RGCNLayer.g.update_all", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "dgl.sum", "rgcn2.RGCNLayer.activation", "edges.data[].squeeze", "edges.data[].squeeze", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "rgcn2.RGCNLayer.bias1.squeeze", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "rgcn2.RGCNLayer.bias2.squeeze", "edges.src[].unsqueeze", "rgcn2.RGCNLayer.activation().unsqueeze", "rgcn2.RGCNLayer.activation"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "self", ".", "g", ".", "ndata", ".", "update", "(", "{", "'h'", ":", "inputs", "}", ")", "\n", "weight1", "=", "self", ".", "weight1", "\n", "weight2", "=", "self", ".", "weight2", "\n", "def", "message_func", "(", "edges", ")", ":", "\n", "            ", "w1", "=", "weight1", "[", "edges", ".", "data", "[", "'rel_type'", "]", ".", "squeeze", "(", ")", "]", "\n", "w2", "=", "weight2", "[", "edges", ".", "data", "[", "'rel_type'", "]", ".", "squeeze", "(", ")", "]", "\n", "msg", "=", "torch", ".", "bmm", "(", "edges", ".", "src", "[", "'h'", "]", ".", "unsqueeze", "(", "1", ")", ",", "w1", ")", ".", "squeeze", "(", "1", ")", "\n", "if", "self", ".", "bias", ":", "\n", "                ", "msg", "=", "msg", "+", "self", ".", "bias1", ".", "squeeze", "(", "1", ")", "\n", "", "msg", "=", "torch", ".", "bmm", "(", "self", ".", "activation", "(", "msg", ")", ".", "unsqueeze", "(", "1", ")", ",", "w2", ")", ".", "squeeze", "(", "1", ")", "\n", "msg", "=", "msg", "*", "edges", ".", "data", "[", "'norm'", "]", "\n", "return", "{", "'msg'", ":", "msg", "}", "\n", "\n", "", "def", "apply_func", "(", "nodes", ")", ":", "\n", "            ", "h", "=", "nodes", ".", "data", "[", "'h'", "]", "\n", "if", "self", ".", "bias", ":", "\n", "                ", "h", "=", "h", "+", "self", ".", "bias2", ".", "squeeze", "(", "1", ")", "\n", "", "if", "self", ".", "activation", ":", "\n", "                ", "h", "=", "self", ".", "activation", "(", "h", ")", "\n", "", "return", "{", "'h'", ":", "h", "}", "\n", "\n", "", "self", ".", "g", ".", "update_all", "(", "message_func", ",", "fn", ".", "sum", "(", "msg", "=", "'msg'", ",", "out", "=", "'h'", ")", ",", "apply_func", ")", "\n", "return", "self", ".", "g", ".", "ndata", "[", "'h'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.rgcn2.RGCN.__init__": [[63, 74], ["torch.Module.__init__", "rgcn2.RGCN.build_model"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.pg_rgcn_gat3.PRGAT3.__init__", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.rgcnDGL.RGCN.build_model"], ["    ", "def", "__init__", "(", "self", ",", "g", ",", "in_dim", ",", "h_dim", ",", "out_dim", ",", "num_rels", ",", "num_hidden_layers", "=", "1", ")", ":", "\n", "        ", "super", "(", "RGCN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "g", "=", "g", "\n", "self", ".", "in_dim", "=", "in_dim", "\n", "self", ".", "h_dim", "=", "h_dim", "\n", "self", ".", "out_dim", "=", "out_dim", "\n", "self", ".", "num_rels", "=", "num_rels", "\n", "self", ".", "num_hidden_layers", "=", "num_hidden_layers", "\n", "\n", "# create RGCN layers", "\n", "self", ".", "build_model", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.rgcn2.RGCN.build_model": [[75, 87], ["torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "rgcn2.RGCN.build_input_layer", "rgcn2.RGCN.layers.append", "range", "rgcn2.RGCN.build_output_layer", "rgcn2.RGCN.layers.append", "rgcn2.RGCN.build_hidden_layer", "rgcn2.RGCN.layers.append"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.rgcnDGL.RGCN.build_input_layer", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.rgcnDGL.RGCN.build_output_layer", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.rgcnDGL.RGCN.build_hidden_layer"], ["", "def", "build_model", "(", "self", ")", ":", "\n", "        ", "self", ".", "layers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "# input to hidden", "\n", "i2h", "=", "self", ".", "build_input_layer", "(", ")", "\n", "self", ".", "layers", ".", "append", "(", "i2h", ")", "\n", "# hidden to hidden", "\n", "for", "_", "in", "range", "(", "self", ".", "num_hidden_layers", ")", ":", "\n", "            ", "h2h", "=", "self", ".", "build_hidden_layer", "(", ")", "\n", "self", ".", "layers", ".", "append", "(", "h2h", ")", "\n", "# hidden to output", "\n", "", "h2o", "=", "self", ".", "build_output_layer", "(", ")", "\n", "self", ".", "layers", ".", "append", "(", "h2o", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.rgcn2.RGCN.build_input_layer": [[88, 91], ["print", "rgcn2.RGCNLayer"], "methods", ["None"], ["", "def", "build_input_layer", "(", "self", ")", ":", "\n", "        ", "print", "(", "'Building an INPUT  layer of {}x{}'", ".", "format", "(", "self", ".", "in_dim", ",", "self", ".", "h_dim", ")", ")", "\n", "return", "RGCNLayer", "(", "self", ".", "g", ",", "self", ".", "in_dim", ",", "self", ".", "h_dim", ",", "self", ".", "num_rels", ",", "bias", "=", "True", ",", "activation", "=", "F", ".", "relu", ",", "is_input_layer", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.rgcn2.RGCN.build_hidden_layer": [[92, 95], ["print", "rgcn2.RGCNLayer"], "methods", ["None"], ["", "def", "build_hidden_layer", "(", "self", ")", ":", "\n", "        ", "print", "(", "'Building an HIDDEN  layer of {}x{}'", ".", "format", "(", "self", ".", "h_dim", ",", "self", ".", "h_dim", ")", ")", "\n", "return", "RGCNLayer", "(", "self", ".", "g", ",", "self", ".", "h_dim", ",", "self", ".", "h_dim", ",", "self", ".", "num_rels", ",", "bias", "=", "True", ",", "activation", "=", "F", ".", "relu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.rgcn2.RGCN.build_output_layer": [[96, 99], ["print", "rgcn2.RGCNLayer"], "methods", ["None"], ["", "def", "build_output_layer", "(", "self", ")", ":", "\n", "        ", "print", "(", "'Building an OUTPUT  layer of {}x{}'", ".", "format", "(", "self", ".", "h_dim", ",", "self", ".", "out_dim", ")", ")", "\n", "return", "RGCNLayer", "(", "self", ".", "g", ",", "self", ".", "h_dim", ",", "self", ".", "out_dim", ",", "self", ".", "num_rels", ",", "bias", "=", "True", ",", "activation", "=", "F", ".", "relu", ")", "\n", "# return RGCNLayer(self.g, self.h_dim, self.out_dim, self.num_rels, bias=True, activation=partial(F.softmax, dim=1))", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.rgcn2.RGCN.forward": [[101, 109], ["rgcn2.RGCN.g.ndata.pop", "layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "features", ")", ":", "\n", "        ", "h", "=", "features", "\n", "self", ".", "g", ".", "ndata", "[", "'h'", "]", "=", "features", "\n", "for", "layer", "in", "self", ".", "layers", ":", "\n", "            ", "h", "=", "layer", "(", "h", ")", "\n", "", "ret", "=", "self", ".", "g", ".", "ndata", ".", "pop", "(", "'h'", ")", "\n", "# print ('RET: ({})'.format(ret.shape))", "\n", "return", "ret", "\n", "", "", ""]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.rgcn.RGCNLayer.__init__": [[8, 43], ["torch.Module.__init__", "print", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.pg_rgcn_gat3.PRGAT3.__init__"], ["    ", "def", "__init__", "(", "self", ",", "g", ",", "in_feat", ",", "out_feat", ",", "num_rels", ",", "feat_drop", ",", "num_bases", "=", "-", "1", ",", "activation", "=", "None", ",", "freeze", "=", "(", "0", ",", "0", ")", ")", ":", "\n", "        ", "super", "(", "RGCNLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "g", "=", "g", "\n", "self", ".", "in_feat", "=", "in_feat", "\n", "self", ".", "out_feat", "=", "out_feat", "\n", "self", ".", "num_rels", "=", "num_rels", "\n", "self", ".", "feat_drop", "=", "feat_drop", "\n", "self", ".", "num_bases", "=", "num_bases", "\n", "if", "self", ".", "num_bases", "<", "1", ":", "\n", "            ", "self", ".", "num_bases", "=", "self", ".", "num_rels", "\n", "", "self", ".", "activation", "=", "activation", "\n", "self", ".", "freeze", "=", "freeze", "\n", "print", "(", "'BASES'", ",", "self", ".", "num_bases", ")", "\n", "if", "self", ".", "num_bases", "<=", "0", "or", "self", ".", "num_bases", ">", "self", ".", "num_rels", ":", "\n", "            ", "self", ".", "num_bases", "=", "self", ".", "num_rels", "\n", "", "if", "feat_drop", ":", "\n", "            ", "self", ".", "feat_drop", "=", "nn", ".", "Dropout", "(", "feat_drop", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "feat_drop", "=", "lambda", "x", ":", "x", "\n", "# print(\"in_feat:{}, out_feat:{}, num_rels:{}\".format(self.in_feat, self.out_feat, self.num_rels, end=' '))", "\n", "# print(\"num_bases:{}, activation:{}\".format(self.num_bases, self.activation))", "\n", "\n", "# add basis weights", "\n", "", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "self", ".", "num_bases", ",", "self", ".", "in_feat", "+", "self", ".", "freeze", "[", "0", "]", ",", "self", ".", "out_feat", ")", ")", "\n", "\n", "if", "self", ".", "num_bases", "<", "self", ".", "num_rels", ":", "\n", "# linear combination coefficients", "\n", "            ", "self", ".", "w_comp", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "self", ".", "num_rels", ",", "self", ".", "num_bases", ")", ")", "\n", "\n", "# nn.init.xavier_uniform_(self.weight, gain=nn.init.calculate_gain('elu'))", "\n", "", "nn", ".", "init", ".", "xavier_normal_", "(", "self", ".", "weight", ",", "gain", "=", "1.414", ")", "\n", "\n", "if", "self", ".", "num_bases", "<", "self", ".", "num_rels", ":", "\n", "# nn.init.xavier_uniform_(self.w_comp, gain=nn.init.calculate_gain('elu'))", "\n", "            ", "nn", ".", "init", ".", "xavier_normal_", "(", "self", ".", "w_comp", ",", "gain", "=", "1.414", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.rgcn.RGCNLayer.forward": [[44, 71], ["rgcn.RGCNLayer.feat_drop", "rgcn.RGCNLayer.g.ndata.update", "rgcn.RGCNLayer.g.update_all", "rgcn.RGCNLayer.weight.view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "edges.data[].to", "dgl.sum", "rgcn.RGCNLayer.activation", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "edges.data[].squeeze", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "edges.src[].unsqueeze"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "inputs", "=", "self", ".", "feat_drop", "(", "inputs", ")", "\n", "self", ".", "g", ".", "ndata", ".", "update", "(", "{", "'h'", ":", "inputs", "}", ")", "\n", "if", "self", ".", "num_bases", "<", "self", ".", "num_rels", ":", "\n", "# generate all weights from bases", "\n", "            ", "weight", "=", "self", ".", "weight", ".", "view", "(", "self", ".", "in_feat", "+", "self", ".", "freeze", "[", "0", "]", ",", "self", ".", "num_bases", ",", "self", ".", "out_feat", ")", "\n", "weight", "=", "torch", ".", "matmul", "(", "self", ".", "w_comp", ",", "weight", ")", ".", "view", "(", "self", ".", "num_rels", ",", "self", ".", "in_feat", "+", "self", ".", "freeze", "[", "0", "]", ",", "self", ".", "out_feat", ")", "\n", "", "else", ":", "\n", "            ", "weight", "=", "self", ".", "weight", "\n", "\n", "", "def", "message_func", "(", "edges", ")", ":", "\n", "            ", "w", "=", "weight", "[", "edges", ".", "data", "[", "'rel_type'", "]", ".", "squeeze", "(", ")", "]", "\n", "msg", "=", "torch", ".", "bmm", "(", "edges", ".", "src", "[", "'h'", "]", ".", "unsqueeze", "(", "1", ")", ",", "w", ")", ".", "squeeze", "(", "1", ")", "\n", "edges", ".", "data", "[", "'norm'", "]", "=", "edges", ".", "data", "[", "'norm'", "]", ".", "to", "(", "device", "=", "msg", ".", "device", ")", "\n", "msg", "=", "msg", "*", "edges", ".", "data", "[", "'norm'", "]", "\n", "return", "{", "'msg'", ":", "msg", "}", "\n", "\n", "", "def", "apply_func", "(", "nodes", ")", ":", "\n", "            ", "h", "=", "nodes", ".", "data", "[", "'h'", "]", "\n", "if", "self", ".", "activation", ":", "\n", "                ", "h", "=", "self", ".", "activation", "(", "h", ")", "\n", "", "if", "self", ".", "freeze", "[", "1", "]", ">", "0", ":", "\n", "                ", "return", "{", "'h'", ":", "torch", ".", "cat", "(", "(", "self", ".", "g", ".", "ndata", "[", "'frozen'", "]", ",", "h", ")", ",", "1", ")", "}", "\n", "", "return", "{", "'h'", ":", "h", "}", "\n", "\n", "", "self", ".", "g", ".", "update_all", "(", "message_func", ",", "fn", ".", "sum", "(", "msg", "=", "'msg'", ",", "out", "=", "'h'", ")", ",", "apply_func", ")", "\n", "return", "self", ".", "g", ".", "ndata", "[", "'h'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.rgcn.RGCN.__init__": [[74, 87], ["torch.Module.__init__", "rgcn.RGCN.build_model"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.pg_rgcn_gat3.PRGAT3.__init__", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.rgcnDGL.RGCN.build_model"], ["    ", "def", "__init__", "(", "self", ",", "g", ",", "in_dim", ",", "h_dim", ",", "out_dim", ",", "num_rels", ",", "feat_drop", ",", "num_bases", "=", "-", "1", ",", "num_hidden_layers", "=", "1", ",", "freeze", "=", "0", ")", ":", "\n", "        ", "super", "(", "RGCN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "g", "=", "g", "\n", "self", ".", "in_dim", "=", "in_dim", "\n", "self", ".", "h_dim", "=", "h_dim", "\n", "self", ".", "out_dim", "=", "out_dim", "\n", "self", ".", "num_rels", "=", "num_rels", "\n", "self", ".", "feat_drop", "=", "feat_drop", "\n", "self", ".", "num_bases", "=", "num_bases", "\n", "self", ".", "num_hidden_layers", "=", "num_hidden_layers", "\n", "self", ".", "freeze", "=", "freeze", "\n", "# create RGCN layers", "\n", "self", ".", "build_model", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.rgcn.RGCN.build_model": [[88, 100], ["torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "rgcn.RGCN.build_input_layer", "rgcn.RGCN.layers.append", "range", "rgcn.RGCN.build_output_layer", "rgcn.RGCN.layers.append", "rgcn.RGCN.build_hidden_layer", "rgcn.RGCN.layers.append"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.rgcnDGL.RGCN.build_input_layer", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.rgcnDGL.RGCN.build_output_layer", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.rgcnDGL.RGCN.build_hidden_layer"], ["", "def", "build_model", "(", "self", ")", ":", "\n", "        ", "self", ".", "layers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "# input to hidden", "\n", "i2h", "=", "self", ".", "build_input_layer", "(", ")", "\n", "self", ".", "layers", ".", "append", "(", "i2h", ")", "\n", "# hidden to hidden", "\n", "for", "_", "in", "range", "(", "self", ".", "num_hidden_layers", ")", ":", "\n", "            ", "h2h", "=", "self", ".", "build_hidden_layer", "(", ")", "\n", "self", ".", "layers", ".", "append", "(", "h2h", ")", "\n", "# hidden to output", "\n", "", "h2o", "=", "self", ".", "build_output_layer", "(", ")", "\n", "self", ".", "layers", ".", "append", "(", "h2o", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.rgcn.RGCN.build_input_layer": [[101, 104], ["print", "rgcn.RGCNLayer"], "methods", ["None"], ["", "def", "build_input_layer", "(", "self", ")", ":", "\n", "        ", "print", "(", "'Building an INPUT  layer of {}x{}'", ".", "format", "(", "self", ".", "in_dim", ",", "self", ".", "h_dim", ")", ")", "\n", "return", "RGCNLayer", "(", "self", ".", "g", ",", "self", ".", "in_dim", ",", "self", ".", "h_dim", ",", "self", ".", "num_rels", ",", "self", ".", "feat_drop", ",", "self", ".", "num_bases", ",", "activation", "=", "F", ".", "leaky_relu", ",", "freeze", "=", "(", "0", ",", "self", ".", "freeze", ")", ")", "# elu?", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.rgcn.RGCN.build_hidden_layer": [[105, 108], ["print", "rgcn.RGCNLayer"], "methods", ["None"], ["", "def", "build_hidden_layer", "(", "self", ")", ":", "\n", "        ", "print", "(", "'Building an HIDDEN  layer of {}x{}'", ".", "format", "(", "self", ".", "h_dim", ",", "self", ".", "h_dim", ")", ")", "\n", "return", "RGCNLayer", "(", "self", ".", "g", ",", "self", ".", "h_dim", ",", "self", ".", "h_dim", ",", "self", ".", "num_rels", ",", "self", ".", "feat_drop", ",", "self", ".", "num_bases", ",", "activation", "=", "F", ".", "leaky_relu", ",", "freeze", "=", "(", "self", ".", "freeze", ",", "self", ".", "freeze", ")", ")", "# elu?", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.rgcn.RGCN.build_output_layer": [[109, 112], ["print", "rgcn.RGCNLayer"], "methods", ["None"], ["", "def", "build_output_layer", "(", "self", ")", ":", "\n", "        ", "print", "(", "'Building an OUTPUT  layer of {}x{}'", ".", "format", "(", "self", ".", "h_dim", ",", "self", ".", "out_dim", ")", ")", "\n", "return", "RGCNLayer", "(", "self", ".", "g", ",", "self", ".", "h_dim", ",", "self", ".", "out_dim", ",", "self", ".", "num_rels", ",", "self", ".", "feat_drop", ",", "self", ".", "num_bases", ",", "activation", "=", "torch", ".", "tanh", ",", "freeze", "=", "(", "self", ".", "freeze", ",", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.rgcn.RGCN.forward": [[113, 122], ["rgcn.RGCN.g.ndata.pop", "layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "features", ")", ":", "\n", "        ", "h", "=", "features", "\n", "self", ".", "g", ".", "ndata", "[", "'frozen'", "]", "=", "h", "[", ":", ",", ":", "self", ".", "freeze", "]", "\n", "self", ".", "g", ".", "ndata", "[", "'h'", "]", "=", "features", "\n", "for", "layer", "in", "self", ".", "layers", ":", "\n", "            ", "h", "=", "layer", "(", "h", ")", "\n", "", "ret", "=", "self", ".", "g", ".", "ndata", ".", "pop", "(", "'h'", ")", "\n", "# print ('RET: ({})'.format(ret.shape))", "\n", "return", "ret", "\n", "", "", ""]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.pg_rgcn_gat.PRGAT.__init__": [[9, 42], ["super().__init__", "torch_geometric.nn.RGCNConv", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "pg_rgcn_gat.PRGAT.layers.append", "range", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "pg_rgcn_gat.PRGAT.layers.append", "torch_geometric.nn.GATConv", "torch_geometric.nn.GATConv", "torch_geometric.nn.GATConv", "torch_geometric.nn.RGCNConv", "pg_rgcn_gat.PRGAT.layers.append", "pg_rgcn_gat.PRGAT.layers.append", "torch_geometric.nn.GATConv", "torch_geometric.nn.GATConv"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.pg_rgcn_gat3.PRGAT3.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "n_classes", ",", "num_heads", ",", "num_rels", ",", "num_bases", ",", "num_hidden", ",", "num_hidden_layers_rgcn", ",", "num_hidden_layers_gat", ",", "dropout", ",", "activation", ",", "alpha", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "PRGAT", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "concat", "=", "True", "\n", "self", ".", "neg_slope", "=", "alpha", "\n", "self", ".", "num_hidden_layers_rgcn", "=", "num_hidden_layers_rgcn", "\n", "self", ".", "num_hidden_layers_gat", "=", "num_hidden_layers_gat", "\n", "# dropout", "\n", "if", "dropout", ":", "\n", "            ", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "dropout", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "0.", ")", "\n", "# activation", "\n", "", "self", ".", "activation", "=", "activation", "\n", "# RGCN input layer", "\n", "self", ".", "rgcn_input", "=", "RGCNConv", "(", "num_features", ",", "num_hidden", ",", "num_rels", ",", "num_bases", ",", "bias", "=", "bias", ")", "#aggr values ['add', 'mean', 'max'] default : add", "\n", "# RGCN Hidden layers", "\n", "self", ".", "layers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "_", "in", "range", "(", "num_hidden_layers_rgcn", ")", ":", "\n", "            ", "self", ".", "layers", ".", "append", "(", "RGCNConv", "(", "num_hidden", ",", "num_hidden", ",", "num_rels", ",", "num_bases", ",", "bias", "=", "bias", ")", ")", "\n", "# GAT input layer", "\n", "", "self", ".", "layers", ".", "append", "(", "GATConv", "(", "num_hidden", ",", "num_hidden", ",", "heads", "=", "num_heads", ",", "concat", "=", "self", ".", "concat", ",", "negative_slope", "=", "self", ".", "neg_slope", ",", "dropout", "=", "dropout", ",", "bias", "=", "bias", ")", ")", "\n", "\n", "# GAT Hidden layers", "\n", "for", "_", "in", "range", "(", "num_hidden_layers_gat", ")", ":", "\n", "            ", "if", "self", ".", "concat", ":", "\n", "                ", "self", ".", "layers", ".", "append", "(", "GATConv", "(", "num_hidden", "*", "num_heads", ",", "num_hidden", ",", "heads", "=", "num_heads", ",", "concat", "=", "self", ".", "concat", ",", "negative_slope", "=", "self", ".", "neg_slope", ",", "dropout", "=", "dropout", ",", "bias", "=", "bias", ")", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "layers", ".", "append", "(", "GATConv", "(", "num_hidden", ",", "num_hidden", ",", "heads", "=", "num_heads", ",", "concat", "=", "self", ".", "concat", ",", "negative_slope", "=", "self", ".", "neg_slope", ",", "dropout", "=", "dropout", ",", "bias", "=", "bias", ")", ")", "\n", "# GAT output layer", "\n", "", "", "if", "self", ".", "concat", ":", "\n", "            ", "self", ".", "gat_output", "=", "GATConv", "(", "num_hidden", "*", "num_heads", ",", "n_classes", ",", "heads", "=", "num_heads", ",", "concat", "=", "self", ".", "concat", ",", "negative_slope", "=", "self", ".", "neg_slope", ",", "dropout", "=", "dropout", ",", "bias", "=", "bias", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "gat_output", "=", "GATConv", "(", "num_hidden", ",", "n_classes", ",", "heads", "=", "num_heads", ",", "concat", "=", "self", ".", "concat", ",", "negative_slope", "=", "self", ".", "neg_slope", ",", "dropout", "=", "dropout", ",", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.pg_rgcn_gat.PRGAT.forward": [[44, 61], ["pg_rgcn_gat.PRGAT.rgcn_input", "pg_rgcn_gat.PRGAT.activation", "pg_rgcn_gat.PRGAT.dropout", "range", "range", "pg_rgcn_gat.PRGAT.gat_output", "pg_rgcn_gat.PRGAT.mean().unsqueeze", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "pg_rgcn_gat.PRGAT.activation", "pg_rgcn_gat.PRGAT.dropout", "pg_rgcn_gat.PRGAT.activation", "pg_rgcn_gat.PRGAT.dropout", "pg_rgcn_gat.PRGAT.mean"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "data", ")", ":", "\n", "        ", "x", ",", "edge_index", ",", "edge_type", "=", "data", ".", "x", ",", "data", ".", "edge_index", ",", "data", ".", "edge_type", "\n", "x", "=", "self", ".", "rgcn_input", "(", "x", ",", "edge_index", ",", "edge_type", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "#print(x.shape)", "\n", "for", "i", "in", "range", "(", "self", ".", "num_hidden_layers_rgcn", ")", ":", "\n", "            ", "x", "=", "self", ".", "layers", "[", "i", "]", "(", "x", ",", "edge_index", ",", "edge_type", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "", "for", "i", "in", "range", "(", "self", ".", "num_hidden_layers_gat", "+", "1", ")", ":", "\n", "            ", "x", "=", "self", ".", "layers", "[", "i", "+", "self", ".", "num_hidden_layers_rgcn", "]", "(", "x", ",", "edge_index", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "", "x", "=", "self", ".", "gat_output", "(", "x", ",", "edge_index", ")", "\n", "x", "=", "x", ".", "mean", "(", "1", ")", ".", "unsqueeze", "(", "dim", "=", "1", ")", "\n", "return", "torch", ".", "tanh", "(", "x", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.mlpnet.MLPNet.__init__": [[14, 41], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "mlpnet.MLPNet.fc.append", "mlpnet.MLPNet.load_or_train", "len", "mlpnet.MLPNet.conv.append", "mlpnet.MLPNet.fc.append", "mlpnet.MLPNet.fc.append", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "mlpnet.MLPNet.conv.append", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "int", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "int"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.pg_rgcn_gat3.PRGAT3.__init__", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.mlpnet.MLPNet.load_or_train"], ["    ", "def", "__init__", "(", "self", ",", "train_2D", ")", ":", "\n", "        ", "super", "(", "MLPNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "train_2D", ":", "\n", "            ", "input_size", ",", "Hconv", ",", "Hfc", ",", "output_size", "=", "306", ",", "[", "4", "*", "128", "]", "*", "6", ",", "[", "4", "*", "128", "]", "*", "6", ",", "5", "\n", "", "else", ":", "\n", "            ", "input_size", ",", "Hconv", ",", "Hfc", ",", "output_size", "=", "612", ",", "[", "4", "*", "128", "]", "*", "6", ",", "[", "4", "*", "128", "]", "*", "6", ",", "5", "\n", "\n", "", "self", ".", "input_size", "=", "input_size", "\n", "self", ".", "conv", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "fc", "=", "nn", ".", "ModuleList", "(", ")", "\n", "if", "len", "(", "Hconv", ")", ">", "1", ":", "\n", "          ", "self", ".", "conv", ".", "append", "(", "nn", ".", "Conv1d", "(", "1", ",", "Hconv", "[", "0", "]", ",", "int", "(", "input_size", "/", "3", ")", ",", "stride", "=", "int", "(", "input_size", "/", "3", ")", ")", ")", "\n", "h0", "=", "Hconv", "[", "0", "]", "\n", "for", "h", "in", "Hconv", "[", "1", ":", "]", ":", "\n", "            ", "self", ".", "conv", ".", "append", "(", "nn", ".", "Conv1d", "(", "h0", ",", "h", ",", "1", ",", "stride", "=", "1", ")", ")", "\n", "h0", "=", "h", "\n", "", "self", ".", "fc", ".", "append", "(", "nn", ".", "Linear", "(", "3", "*", "h0", ",", "Hfc", "[", "0", "]", ")", ")", "\n", "", "h0", "=", "Hfc", "[", "0", "]", "\n", "for", "h", "in", "Hfc", "[", "1", ":", "]", ":", "\n", "          ", "self", ".", "fc", ".", "append", "(", "nn", ".", "Linear", "(", "h0", ",", "h", ")", ")", "\n", "h0", "=", "h", "\n", "", "self", ".", "fc", ".", "append", "(", "nn", ".", "Linear", "(", "h0", ",", "output_size", ")", ")", "\n", "\n", "self", ".", "train_2D", "=", "train_2D", "\n", "\n", "self", ".", "load_or_train", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.mlpnet.MLPNet.forward": [[42, 52], ["torch.relu.view", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "conv", "fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "x", "[", ":", ",", "None", ",", ":", "]", "\n", "for", "conv", "in", "self", ".", "conv", ":", "\n", "          ", "x", "=", "F", ".", "relu", "(", "conv", "(", "x", ")", ")", "\n", "", "x", "=", "x", ".", "view", "(", "x", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "#x = F.dropout(x,p=0.5)", "\n", "for", "fc", "in", "self", ".", "fc", "[", ":", "-", "1", "]", ":", "\n", "          ", "x", "=", "F", ".", "relu", "(", "fc", "(", "x", ")", ")", "\n", "", "x", "=", "self", ".", "fc", "[", "-", "1", "]", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.mlpnet.MLPNet.load_data": [[53, 99], ["open", "json.load", "dict", "dict", "dict", "dict", "data_rows.append", "ground_truth_rows.append", "sorted", "math.sin", "math.cos", "len"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "load_data", "(", "filename", ")", ":", "\n", "        ", "json_file", "=", "open", "(", "filename", ")", "\n", "data", "=", "json", ".", "load", "(", "json_file", ")", "[", "'data_set'", "]", "\n", "\n", "joint_labels", "=", "[", "'left_ankle'", ",", "'left_ear'", ",", "'left_elbow'", ",", "'left_eye'", ",", "'left_hip'", ",", "'left_knee'", ",", "'left_shoulder'", ",", "'left_wrist'", ",", "'nose'", ",", "'right_ankle'", ",", "'right_ear'", ",", "'right_elbow'", ",", "'right_eye'", ",", "'right_hip'", ",", "'right_knee'", ",", "'right_shoulder'", ",", "'right_wrist'", "]", "\n", "cameras", "=", "[", "1", ",", "2", ",", "3", "]", "\n", "\n", "data_rows", "=", "[", "]", "\n", "ground_truth_rows", "=", "[", "]", "\n", "for", "x", "in", "data", ":", "\n", "            ", "cam_joints", "=", "dict", "(", ")", "\n", "cam_joints_exists", "=", "dict", "(", ")", "\n", "cam_timestamp", "=", "dict", "(", ")", "\n", "cam_ground_truth", "=", "dict", "(", ")", "\n", "\n", "for", "y", "in", "x", "[", "'superbody'", "]", ":", "\n", "                ", "cameraId", "=", "y", "[", "'cameraId'", "]", "\n", "cam_ground_truth", "[", "cameraId", "]", "=", "y", "[", "'ground_truth'", "]", "\n", "cam_joints", "[", "cameraId", "]", "=", "[", "]", "\n", "cam_joints_exists", "[", "cameraId", "]", "=", "[", "]", "\n", "for", "jl", "in", "joint_labels", ":", "\n", "                    ", "if", "jl", "in", "y", "[", "'joints'", "]", ":", "\n", "                        ", "z", "=", "y", "[", "'joints'", "]", "[", "jl", "]", "\n", "cam_joints", "[", "cameraId", "]", "+=", "[", "z", "[", "0", "]", "/", "4000", ",", "z", "[", "1", "]", "/", "4000", ",", "z", "[", "2", "]", "/", "4000", ",", "(", "z", "[", "3", "]", "-", "320.", ")", "/", "320", ",", "(", "240.", "-", "z", "[", "4", "]", ")", "/", "240", ",", "z", "[", "5", "]", "]", "\n", "cam_joints_exists", "[", "cameraId", "]", "+=", "[", "1", "]", "*", "6", "\n", "", "else", ":", "\n", "                        ", "cam_joints", "[", "cameraId", "]", "+=", "[", "0", "]", "*", "6", "\n", "cam_joints_exists", "[", "cameraId", "]", "+=", "[", "0", "]", "*", "6", "\n", "", "", "cam_timestamp", "[", "cameraId", "]", "=", "y", "[", "'timestamp'", "]", "\n", "\n", "", "last_camera", "=", "sorted", "(", "cam_timestamp", ",", "key", "=", "cam_timestamp", ".", "get", ",", "reverse", "=", "True", ")", "[", "0", "]", "\n", "ground_truth", "=", "cam_ground_truth", "[", "last_camera", "]", "\n", "z", "=", "ground_truth", "\n", "ground_truth", "=", "[", "z", "[", "0", "]", "/", "4000", ",", "z", "[", "1", "]", "/", "4000", ",", "z", "[", "2", "]", "/", "4000", ",", ".7", "*", "sin", "(", "z", "[", "3", "]", ")", ",", ".7", "*", "cos", "(", "z", "[", "3", "]", ")", "]", "\n", "row", "=", "[", "]", "\n", "for", "c", "in", "cameras", ":", "\n", "                ", "if", "c", "in", "cam_joints", ":", "\n", "                    ", "row", "+=", "cam_joints", "[", "c", "]", "+", "cam_joints_exists", "[", "c", "]", "\n", "", "else", ":", "\n", "                    ", "row", "+=", "[", "0", "]", "*", "len", "(", "joint_labels", ")", "*", "6", "*", "2", "\n", "", "", "data_rows", ".", "append", "(", "row", ")", "\n", "ground_truth_rows", ".", "append", "(", "ground_truth", ")", "\n", "\n", "", "datastruct", "=", "{", "'data'", ":", "data_rows", ",", "'groundtruth'", ":", "ground_truth_rows", "}", "\n", "return", "datastruct", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.mlpnet.MLPNet.load_data_2D": [[100, 146], ["open", "json.load", "dict", "dict", "dict", "dict", "data_rows.append", "ground_truth_rows.append", "sorted", "math.sin", "math.cos", "len"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "load_data_2D", "(", "filename", ")", ":", "\n", "        ", "json_file", "=", "open", "(", "filename", ")", "\n", "data", "=", "json", ".", "load", "(", "json_file", ")", "[", "'data_set'", "]", "\n", "\n", "joint_labels", "=", "[", "'left_ankle'", ",", "'left_ear'", ",", "'left_elbow'", ",", "'left_eye'", ",", "'left_hip'", ",", "'left_knee'", ",", "'left_shoulder'", ",", "'left_wrist'", ",", "'nose'", ",", "'right_ankle'", ",", "'right_ear'", ",", "'right_elbow'", ",", "'right_eye'", ",", "'right_hip'", ",", "'right_knee'", ",", "'right_shoulder'", ",", "'right_wrist'", "]", "\n", "cameras", "=", "[", "1", ",", "2", ",", "3", "]", "\n", "\n", "data_rows", "=", "[", "]", "\n", "ground_truth_rows", "=", "[", "]", "\n", "for", "x", "in", "data", ":", "\n", "            ", "cam_joints", "=", "dict", "(", ")", "\n", "cam_joints_exists", "=", "dict", "(", ")", "\n", "cam_timestamp", "=", "dict", "(", ")", "\n", "cam_ground_truth", "=", "dict", "(", ")", "\n", "\n", "for", "y", "in", "x", "[", "'superbody'", "]", ":", "\n", "                ", "cameraId", "=", "y", "[", "'cameraId'", "]", "\n", "cam_ground_truth", "[", "cameraId", "]", "=", "y", "[", "'ground_truth'", "]", "\n", "cam_joints", "[", "cameraId", "]", "=", "[", "]", "\n", "cam_joints_exists", "[", "cameraId", "]", "=", "[", "]", "\n", "for", "jl", "in", "joint_labels", ":", "\n", "                    ", "if", "jl", "in", "y", "[", "'joints'", "]", ":", "\n", "                        ", "z", "=", "y", "[", "'joints'", "]", "[", "jl", "]", "\n", "cam_joints", "[", "cameraId", "]", "+=", "[", "(", "z", "[", "3", "]", "-", "320.", ")", "/", "320", ",", "(", "240.", "-", "z", "[", "4", "]", ")", "/", "240", ",", "z", "[", "5", "]", "]", "\n", "cam_joints_exists", "[", "cameraId", "]", "+=", "[", "1", "]", "*", "3", "\n", "", "else", ":", "\n", "                        ", "cam_joints", "[", "cameraId", "]", "+=", "[", "0", "]", "*", "3", "\n", "cam_joints_exists", "[", "cameraId", "]", "+=", "[", "0", "]", "*", "3", "\n", "", "", "cam_timestamp", "[", "cameraId", "]", "=", "y", "[", "'timestamp'", "]", "\n", "\n", "", "last_camera", "=", "sorted", "(", "cam_timestamp", ",", "key", "=", "cam_timestamp", ".", "get", ",", "reverse", "=", "True", ")", "[", "0", "]", "\n", "ground_truth", "=", "cam_ground_truth", "[", "last_camera", "]", "\n", "z", "=", "ground_truth", "\n", "ground_truth", "=", "[", "z", "[", "0", "]", "/", "4000", ",", "z", "[", "1", "]", "/", "4000", ",", "z", "[", "2", "]", "/", "4000", ",", ".7", "*", "sin", "(", "z", "[", "3", "]", ")", ",", ".7", "*", "cos", "(", "z", "[", "3", "]", ")", "]", "\n", "row", "=", "[", "]", "\n", "for", "c", "in", "cameras", ":", "\n", "                ", "if", "c", "in", "cam_joints", ":", "\n", "                    ", "row", "+=", "cam_joints", "[", "c", "]", "+", "cam_joints_exists", "[", "c", "]", "\n", "", "else", ":", "\n", "                    ", "row", "+=", "[", "0", "]", "*", "len", "(", "joint_labels", ")", "*", "3", "*", "2", "\n", "", "", "data_rows", ".", "append", "(", "row", ")", "\n", "ground_truth_rows", ".", "append", "(", "ground_truth", ")", "\n", "\n", "", "datastruct", "=", "{", "'data'", ":", "data_rows", ",", "'groundtruth'", ":", "ground_truth_rows", "}", "\n", "return", "datastruct", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.mlpnet.MLPNet.train_f": [[147, 156], ["mlpnet.MLPNet.train", "x.cuda.cuda.cuda", "t.cuda.cuda.cuda", "optimizer.zero_grad", "loss_fun", "loss_fun.backward", "optimizer.step", "mlpnet.MLPNet."], "methods", ["None"], ["", "def", "train_f", "(", "self", ",", "dataloader", ",", "optimizer", ",", "loss_fun", ")", ":", "\n", "        ", "self", ".", "train", "(", ")", "\n", "for", "x", ",", "t", "in", "dataloader", ":", "\n", "            ", "x", "=", "x", ".", "cuda", "(", ")", "\n", "t", "=", "t", ".", "cuda", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "L", "=", "loss_fun", "(", "self", "(", "x", ")", ",", "t", ")", "\n", "L", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.mlpnet.MLPNet.test": [[157, 169], ["mlpnet.MLPNet.eval", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "len", "print", "x.cuda.cuda.cuda", "t.cuda.cuda.cuda", "mlpnet.MLPNet.", "loss_fun"], "methods", ["None"], ["", "", "def", "test", "(", "self", ",", "dataloader", ",", "loss_fun", ")", ":", "\n", "        ", "self", ".", "eval", "(", ")", "\n", "total_L", "=", "0", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "x", ",", "t", "in", "dataloader", ":", "\n", "                ", "x", "=", "x", ".", "cuda", "(", ")", "\n", "t", "=", "t", ".", "cuda", "(", ")", "\n", "out", "=", "self", "(", "x", ")", "\n", "total_L", "+=", "loss_fun", "(", "out", ",", "t", ")", "\n", "", "total_L", "/=", "len", "(", "dataloader", ".", "dataset", ")", "\n", "print", "(", "'Test set: Avg. loss: {:.4f}'", ".", "format", "(", "total_L", ")", ")", "\n", "return", "total_L", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.mlpnet.MLPNet.test_detailed": [[170, 193], ["mlpnet.MLPNet.eval", "errors.items", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "print", "x.cuda.cuda.cuda", "t.cuda.cuda.cuda", "mlpnet.MLPNet.", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "enumerate", "len", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.atan2", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos"], "methods", ["None"], ["", "", "def", "test_detailed", "(", "self", ",", "dataloader", ")", ":", "\n", "        ", "self", ".", "eval", "(", ")", "\n", "errors", "=", "{", "'X'", ":", "0", ",", "'Y'", ":", "0", ",", "'Z'", ":", "0", ",", "'angle'", ":", "0", "}", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "x", ",", "t", "in", "dataloader", ":", "\n", "                ", "x", "=", "x", ".", "cuda", "(", ")", "\n", "t", "=", "t", ".", "cuda", "(", ")", "\n", "out", "=", "self", "(", "x", ")", "\n", "dx", "=", "torch", ".", "sum", "(", "torch", ".", "abs", "(", "4000", "*", "(", "out", "[", ":", ",", "0", ":", "3", "]", "-", "t", "[", ":", ",", "0", ":", "3", "]", ")", ")", ",", "axis", "=", "0", ")", "\n", "a1", "=", "torch", ".", "atan2", "(", "out", "[", ":", ",", "3", "]", ",", "out", "[", ":", ",", "4", "]", ")", "\n", "a2", "=", "torch", ".", "atan2", "(", "t", "[", ":", ",", "3", "]", ",", "t", "[", ":", ",", "4", "]", ")", "\n", "da", "=", "a1", "-", "a2", "\n", "da", "=", "180", "*", "torch", ".", "atan2", "(", "torch", ".", "sin", "(", "da", ")", ",", "torch", ".", "cos", "(", "da", ")", ")", "/", "3.141592653589793", "\n", "da", "=", "torch", ".", "sum", "(", "torch", ".", "abs", "(", "da", ")", ",", "axis", "=", "0", ")", "\n", "\n", "for", "i", ",", "s", "in", "enumerate", "(", "[", "'X'", ",", "'Y'", ",", "'Z'", "]", ")", ":", "\n", "                    ", "errors", "[", "s", "]", "+=", "dx", "[", "i", "]", "\n", "", "errors", "[", "'angle'", "]", "+=", "da", "\n", "\n", "", "", "for", "s", ",", "v", "in", "errors", ".", "items", "(", ")", ":", "\n", "            ", "errors", "[", "s", "]", "=", "v", "/", "len", "(", "dataloader", ".", "dataset", ")", "\n", "print", "(", "f'Error in {s}: {errors[s]}'", ")", "\n", "", "return", "errors", "\n", "# print('\\nTest set: Avg. loss: {:.4f}\\n'.format(total_L))", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.mlpnet.MLPNet.model_file_name": [[195, 200], ["None"], "methods", ["None"], ["", "def", "model_file_name", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "train_2D", ":", "\n", "            ", "return", "'net_2D.dat'", "\n", "", "else", ":", "\n", "            ", "return", "'net_3D.dat'", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.mlpnet.MLPNet.load_or_train": [[201, 261], ["mlpnet.MLPNet.cuda", "os.path.exists", "mlpnet.MLPNet.load_data", "mlpnet.MLPNet.load_data", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "range", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "matplotlib.plot", "matplotlib.legend", "matplotlib.show", "mlpnet.MLPNet.model_file_name", "print", "mlpnet.MLPNet.load_state_dict", "pickle.dump", "pickle.dump", "pickle.dump", "pickle.dump", "pickle.load", "pickle.load", "pickle.load", "pickle.load", "mlpnet.MLPNet.parameters", "print", "mlpnet.MLPNet.train_f", "print", "mlpnet.MLPNet.test", "error_plots[].append", "mlpnet.MLPNet.test_detailed", "mlpnet.MLPNet.items", "mlpnet.MLPNet.state_dict", "mlpnet.MLPNet.model_file_name", "range", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "open", "open", "open", "open", "open", "open", "open", "open", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss", "error_plots[].append", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "len", "mlpnet.MLPNet.model_file_name", "mlpnet.MLPNet.state_dict", "len", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "mlpnet.MLPNet.parameters", "lr_schedule.pop"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.mlpnet.MLPNet.load_data", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.mlpnet.MLPNet.load_data", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.mlpnet.MLPNet.model_file_name", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.mlpnet.MLPNet.train_f", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.mlpnet.MLPNet.test", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.mlpnet.MLPNet.test_detailed", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.mlpnet.MLPNet.model_file_name", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.mlpnet.MLPNet.model_file_name"], ["", "", "def", "load_or_train", "(", "self", ")", ":", "\n", "        ", "self", ".", "cuda", "(", ")", "\n", "if", "exists", "(", "self", ".", "model_file_name", "(", ")", ")", ":", "\n", "            ", "print", "(", "'loading existing model...'", ")", "\n", "self", ".", "load_state_dict", "(", "torch", ".", "load", "(", "self", ".", "model_file_name", "(", ")", ")", ")", "\n", "return", "\n", "", "training_data", "=", "MLPNet", ".", "load_data", "(", "'./datasets/training_DS1.json'", ")", "\n", "test_data", "=", "MLPNet", ".", "load_data", "(", "'./datasets/test.json'", ")", "\n", "if", "self", ".", "train_2D", ":", "\n", "            ", "pickle", ".", "dump", "(", "training_data", ",", "open", "(", "'training_data_2d.p'", ",", "'wb'", ")", ")", "\n", "pickle", ".", "dump", "(", "test_data", ",", "open", "(", "'test_data_2d.p'", ",", "'wb'", ")", ")", "\n", "", "else", ":", "\n", "            ", "pickle", ".", "dump", "(", "training_data", ",", "open", "(", "'training_data.p'", ",", "'wb'", ")", ")", "\n", "pickle", ".", "dump", "(", "test_data", ",", "open", "(", "'test_data.p'", ",", "'wb'", ")", ")", "\n", "\n", "", "if", "self", ".", "train_2D", ":", "\n", "            ", "training_data", "=", "pickle", ".", "load", "(", "open", "(", "'training_data_2d.p'", ",", "'rb'", ")", ")", "\n", "test_data", "=", "pickle", ".", "load", "(", "open", "(", "'test_data_2d.p'", ",", "'rb'", ")", ")", "\n", "", "else", ":", "\n", "            ", "training_data", "=", "pickle", ".", "load", "(", "open", "(", "'training_data.p'", ",", "'rb'", ")", ")", "\n", "test_data", "=", "pickle", ".", "load", "(", "open", "(", "'test_data.p'", ",", "'rb'", ")", ")", "\n", "\n", "", "X", "=", "torch", ".", "tensor", "(", "training_data", "[", "'data'", "]", ")", "\n", "Y", "=", "torch", ".", "tensor", "(", "training_data", "[", "'groundtruth'", "]", ")", "\n", "train_dataset", "=", "torch", ".", "utils", ".", "data", ".", "TensorDataset", "(", "X", ",", "Y", ")", "\n", "\n", "X", "=", "torch", ".", "tensor", "(", "test_data", "[", "'data'", "]", ")", "\n", "Y", "=", "torch", ".", "tensor", "(", "test_data", "[", "'groundtruth'", "]", ")", "\n", "test_dataset", "=", "torch", ".", "utils", ".", "data", ".", "TensorDataset", "(", "X", ",", "Y", ")", "\n", "\n", "train_loader", "=", "DataLoader", "(", "train_dataset", ",", "batch_size", "=", "64", ",", "shuffle", "=", "True", ")", "\n", "test_loader", "=", "DataLoader", "(", "test_dataset", ",", "batch_size", "=", "1000", ",", "shuffle", "=", "False", ")", "\n", "\n", "\n", "# optim_SGD = optim.RMSprop(mlpnet.parameters(), lr=0.0001)", "\n", "optimizer", "=", "optim", ".", "Adam", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "0.0001", ")", "\n", "\n", "error_plots", "=", "{", "'X'", ":", "[", "]", ",", "'Y'", ":", "[", "]", ",", "'Z'", ":", "[", "]", ",", "'angle'", ":", "[", "]", ",", "'mse'", ":", "[", "]", "}", "\n", "\n", "lr_schedule", "=", "[", "0.000001", ",", "0.00001", "]", "\n", "NUM_EPOCHS", "=", "500", "\n", "for", "e", "in", "range", "(", "NUM_EPOCHS", ")", ":", "\n", "            ", "print", "(", "f'Epoch: {e+1}/{NUM_EPOCHS}. Training ...'", ")", "\n", "self", ".", "train_f", "(", "train_loader", ",", "optimizer", ",", "nn", ".", "MSELoss", "(", ")", ")", "\n", "print", "(", "'Testing ...'", ")", "\n", "L", "=", "self", ".", "test", "(", "test_loader", ",", "nn", ".", "MSELoss", "(", "reduction", "=", "'sum'", ")", ")", "\n", "error_plots", "[", "'mse'", "]", ".", "append", "(", "L", ")", "\n", "error", "=", "self", ".", "test_detailed", "(", "test_loader", ")", "\n", "for", "s", ",", "v", "in", "error", ".", "items", "(", ")", ":", "\n", "                ", "error_plots", "[", "s", "]", ".", "append", "(", "v", ")", "\n", "", "if", "e", "in", "[", "50", ",", "300", ",", "499", "]", ":", "\n", "                ", "torch", ".", "save", "(", "self", ".", "state_dict", "(", ")", ",", "f'net{e:03d}.dat'", ")", "\n", "if", "len", "(", "lr_schedule", ")", ">", "0", ":", "\n", "                    ", "optimizer", "=", "optim", ".", "Adam", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "lr_schedule", ".", "pop", "(", ")", ")", "\n", "\n", "", "", "", "torch", ".", "save", "(", "self", ".", "state_dict", "(", ")", ",", "self", ".", "model_file_name", "(", ")", ")", "\n", "\n", "plt", ".", "plot", "(", "range", "(", "len", "(", "error_plots", "[", "'mse'", "]", ")", ")", ",", "error_plots", "[", "'mse'", "]", ",", "'-'", ",", "label", "=", "'angle'", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.mlpnet.MLPNet.run_tests": [[264, 268], ["mlpnet.MLPNet.run_test"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.mlpnet.MLPNet.run_test"], ["", "def", "run_tests", "(", "self", ")", ":", "\n", "        ", "test_datasets", "=", "[", "'./datasets/test.json'", "]", "\n", "for", "test_path", "in", "test_datasets", ":", "\n", "            ", "self", ".", "run_test", "(", "test_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.mlpnet.MLPNet.run_test": [[269, 284], ["torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "print", "mlpnet.MLPNet.test", "print", "mlpnet.MLPNet.test_detailed", "print", "mlpnet.MLPNet.load_data_2D", "mlpnet.MLPNet.load_data", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.mlpnet.MLPNet.test", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.mlpnet.MLPNet.test_detailed", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.mlpnet.MLPNet.load_data_2D", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.mlpnet.MLPNet.load_data"], ["", "", "def", "run_test", "(", "self", ",", "test_path", ")", ":", "\n", "        ", "if", "self", ".", "train_2D", ":", "\n", "            ", "test_data", "=", "MLPNet", ".", "load_data_2D", "(", "test_path", ")", "\n", "", "else", ":", "\n", "            ", "test_data", "=", "MLPNet", ".", "load_data", "(", "test_path", ")", "\n", "", "X", "=", "torch", ".", "tensor", "(", "test_data", "[", "'data'", "]", ")", "\n", "Y", "=", "torch", ".", "tensor", "(", "test_data", "[", "'groundtruth'", "]", ")", "\n", "test_dataset", "=", "torch", ".", "utils", ".", "data", ".", "TensorDataset", "(", "X", ",", "Y", ")", "\n", "test_loader", "=", "DataLoader", "(", "test_dataset", ",", "batch_size", "=", "1000", ",", "shuffle", "=", "False", ")", "\n", "\n", "print", "(", "test_path", ")", "\n", "L", "=", "self", ".", "test", "(", "test_loader", ",", "nn", ".", "MSELoss", "(", "reduction", "=", "'sum'", ")", ")", "\n", "print", "(", "f'mse={L}'", ")", "\n", "error", "=", "self", ".", "test_detailed", "(", "test_loader", ")", "\n", "print", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.mlpnet.MLPNet.predict": [[285, 297], ["mlpnet.MLPNet.eval", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "x.cuda.cuda.cuda", "t.cuda.cuda.cuda", "mlpnet.MLPNet.", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "predict", "(", "self", ",", "dataloader", ")", ":", "\n", "        ", "self", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "x", ",", "t", "in", "dataloader", ":", "\n", "                ", "x", "=", "x", ".", "cuda", "(", ")", "\n", "t", "=", "t", ".", "cuda", "(", ")", "\n", "out", "=", "self", "(", "x", ")", "\n", "try", ":", "\n", "                    ", "result", "=", "torch", ".", "cat", "(", "(", "result", ",", "out", ")", ",", "0", ")", "\n", "", "except", "UnboundLocalError", ":", "\n", "                    ", "result", "=", "out", "\n", "", "", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.pg_rgcn.PRGCN.__init__": [[7, 24], ["super().__init__", "torch_geometric.nn.RGCNConv", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch_geometric.nn.RGCNConv", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "pg_rgcn.PRGCN.layers.append", "torch_geometric.nn.RGCNConv"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.pg_rgcn_gat3.PRGAT3.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "n_classes", ",", "num_rels", ",", "num_bases", ",", "num_hidden", ",", "num_hidden_layers", ",", "dropout", ",", "activation", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "PRGCN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# dropout", "\n", "if", "dropout", ":", "\n", "            ", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "dropout", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "0.", ")", "\n", "# activation", "\n", "", "self", ".", "activation", "=", "activation", "\n", "# input layer", "\n", "self", ".", "rgcn_input", "=", "RGCNConv", "(", "num_features", ",", "num_hidden", ",", "num_rels", ",", "num_bases", ",", "bias", "=", "bias", ")", "#aggr values ['add', 'mean', 'max'] default : add", "\n", "# Hidden layers", "\n", "self", ".", "layers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "_", "in", "range", "(", "num_hidden_layers", ")", ":", "\n", "            ", "self", ".", "layers", ".", "append", "(", "RGCNConv", "(", "num_hidden", ",", "num_hidden", ",", "num_rels", ",", "num_bases", ",", "bias", "=", "bias", ")", ")", "\n", "# output layer", "\n", "", "self", ".", "rgcn_output", "=", "RGCNConv", "(", "num_hidden", ",", "n_classes", ",", "num_rels", ",", "num_bases", ",", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.pg_rgcn.PRGCN.forward": [[25, 36], ["pg_rgcn.PRGCN.rgcn_input", "pg_rgcn.PRGCN.activation", "pg_rgcn.PRGCN.dropout", "pg_rgcn.PRGCN.rgcn_output", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "layer", "pg_rgcn.PRGCN.activation", "pg_rgcn.PRGCN.dropout"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "data", ")", ":", "\n", "        ", "x", ",", "edge_index", ",", "edge_type", "=", "data", ".", "x", ",", "data", ".", "edge_index", ",", "data", ".", "edge_type", "\n", "x", "=", "self", ".", "rgcn_input", "(", "x", ",", "edge_index", ",", "edge_type", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "for", "layer", "in", "self", ".", "layers", ":", "\n", "            ", "x", "=", "layer", "(", "x", ",", "edge_index", ",", "edge_type", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "", "x", "=", "self", ".", "rgcn_output", "(", "x", ",", "edge_index", ",", "edge_type", ")", "\n", "return", "torch", ".", "tanh", "(", "x", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.pg_gcn.PGCN.__init__": [[7, 24], ["super().__init__", "torch_geometric.nn.GCNConv", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch_geometric.nn.GCNConv", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "pg_gcn.PGCN.layers.append", "torch_geometric.nn.GCNConv"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.pg_rgcn_gat3.PRGAT3.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "n_classes", ",", "num_hidden", ",", "num_hidden_layers", ",", "dropout", ",", "activation", ",", "improved", "=", "True", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "PGCN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# dropout", "\n", "if", "dropout", ":", "\n", "            ", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "dropout", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "0.", ")", "\n", "#activation", "\n", "", "self", ".", "activation", "=", "activation", "\n", "# input layer", "\n", "self", ".", "conv_input", "=", "GCNConv", "(", "num_features", ",", "num_hidden", ",", "improved", "=", "improved", ",", "bias", "=", "bias", ")", "\n", "# Hidden layers", "\n", "self", ".", "layers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "_", "in", "range", "(", "num_hidden_layers", ")", ":", "\n", "            ", "self", ".", "layers", ".", "append", "(", "GCNConv", "(", "num_hidden", ",", "num_hidden", ",", "improved", "=", "improved", ",", "bias", "=", "bias", ")", ")", "\n", "# output layer", "\n", "", "self", ".", "conv_output", "=", "GCNConv", "(", "num_hidden", ",", "n_classes", ",", "improved", "=", "improved", ",", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.pg_gcn.PGCN.forward": [[25, 36], ["pg_gcn.PGCN.dropout", "pg_gcn.PGCN.conv_input", "pg_gcn.PGCN.activation", "pg_gcn.PGCN.conv_output", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "layer", "pg_gcn.PGCN.activation", "pg_gcn.PGCN.dropout"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "data", ")", ":", "\n", "        ", "x", ",", "edge_index", "=", "data", ".", "x", ",", "data", ".", "edge_index", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "x", "=", "self", ".", "conv_input", "(", "x", ",", "edge_index", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "for", "layer", "in", "self", ".", "layers", ":", "\n", "             ", "x", "=", "layer", "(", "x", ",", "edge_index", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "", "x", "=", "self", ".", "conv_output", "(", "x", ",", "edge_index", ")", "\n", "return", "torch", ".", "tanh", "(", "x", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.gat.GAT.__init__": [[15, 37], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "print", "gat.GAT.layers.append", "range", "print", "gat.GAT.layers.append", "len", "len", "dgl.nn.pytorch.conv.gatconv.GATConv", "print", "gat.GAT.layers.append", "dgl.nn.pytorch.conv.gatconv.GATConv", "dgl.nn.pytorch.conv.gatconv.GATConv"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.pg_rgcn_gat3.PRGAT3.__init__"], ["    ", "def", "__init__", "(", "self", ",", "g", ",", "num_layers", ",", "in_dim", ",", "num_units", ",", "outputs", ",", "heads", ",", "activations", ",", "feat_drop", ",", "\n", "attn_drop", ",", "negative_slope", ",", "residual", "=", "False", ")", ":", "\n", "        ", "super", "(", "GAT", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "(", "len", "(", "heads", ")", "==", "num_layers", ")", ",", "'The length of the heads list must be the number of layers'", "\n", "assert", "(", "len", "(", "num_units", ")", "==", "num_layers", ")", ",", "'The length of the num_units list must be the number of layers'", "\n", "\n", "self", ".", "g", "=", "g", "\n", "self", ".", "layers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "# First layer", "\n", "print", "(", "'L:{}   I({})   O({})'", ".", "format", "(", "0", ",", "in_dim", ",", "num_units", "[", "0", "]", "*", "heads", "[", "0", "]", ")", ")", "\n", "self", ".", "layers", ".", "append", "(", "\n", "GATConv", "(", "in_dim", ",", "num_units", "[", "0", "]", ",", "heads", "[", "0", "]", ",", "feat_drop", ",", "attn_drop", ",", "negative_slope", ",", "False", ",", "activations", "[", "0", "]", ")", ")", "\n", "# Hidden layers", "\n", "for", "layer_number", "in", "range", "(", "1", ",", "num_layers", "-", "1", ")", ":", "\n", "            ", "print", "(", "'L:{}   I({})   O({})'", ".", "format", "(", "layer_number", ",", "num_units", "[", "layer_number", "-", "1", "]", "*", "heads", "[", "layer_number", "-", "1", "]", ",", "num_units", "[", "layer_number", "]", "*", "heads", "[", "layer_number", "]", ")", ")", "\n", "self", ".", "layers", ".", "append", "(", "\n", "GATConv", "(", "num_units", "[", "layer_number", "-", "1", "]", "*", "heads", "[", "layer_number", "-", "1", "]", ",", "num_units", "[", "layer_number", "]", ",", "heads", "[", "layer_number", "]", ",", "\n", "feat_drop", ",", "attn_drop", ",", "negative_slope", ",", "residual", ",", "activations", "[", "layer_number", "]", ")", ")", "\n", "# Output layer", "\n", "", "print", "(", "'L:{}   I({})   O({})'", ".", "format", "(", "num_layers", "-", "1", ",", "num_units", "[", "-", "2", "]", "*", "heads", "[", "-", "2", "]", ",", "num_units", "[", "0", "]", "*", "heads", "[", "0", "]", ")", ")", "\n", "self", ".", "layers", ".", "append", "(", "GATConv", "(", "num_units", "[", "-", "2", "]", "*", "heads", "[", "-", "2", "]", ",", "num_units", "[", "-", "1", "]", ",", "outputs", ",", "feat_drop", ",", "attn_drop", ",", "\n", "negative_slope", ",", "residual", ",", "activations", "[", "-", "1", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.gat.GAT.set_g": [[38, 40], ["None"], "methods", ["None"], ["", "def", "set_g", "(", "self", ",", "g", ")", ":", "\n", "        ", "self", ".", "g", "=", "g", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.gat.GAT.forward": [[41, 47], ["gat.GAT.g.to", "range", "len"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "h", "=", "inputs", "\n", "g", "=", "self", ".", "g", ".", "to", "(", "h", ".", "device", ")", "\n", "for", "layer_number", "in", "range", "(", "len", "(", "self", ".", "layers", ")", "-", "1", ")", ":", "\n", "            ", "h", "=", "self", ".", "layers", "[", "layer_number", "]", "(", "g", ",", "h", ")", ".", "flatten", "(", "1", ")", "\n", "", "return", "self", ".", "layers", "[", "-", "1", "]", "(", "g", ",", "h", ")", ".", "mean", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.rgcnDGL.RGCN.__init__": [[6, 19], ["torch.Module.__init__", "rgcnDGL.RGCN.build_model"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.pg_rgcn_gat3.PRGAT3.__init__", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.rgcnDGL.RGCN.build_model"], ["    ", "def", "__init__", "(", "self", ",", "g", ",", "gnn_layers", ",", "in_dim", ",", "hidden_dimensions", ",", "num_rels", ",", "activations", ",", "feat_drop", ",", "num_bases", "=", "-", "1", ")", ":", "\n", "        ", "super", "(", "RGCN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "g", "=", "g", "\n", "self", ".", "in_dim", "=", "in_dim", "\n", "self", ".", "hidden_dimensions", "=", "hidden_dimensions", "\n", "self", ".", "num_channels", "=", "hidden_dimensions", "[", "-", "1", "]", "\n", "self", ".", "num_rels", "=", "num_rels", "\n", "self", ".", "feat_drop", "=", "feat_drop", "\n", "self", ".", "num_bases", "=", "num_bases", "\n", "self", ".", "activations", "=", "activations", "\n", "self", ".", "gnn_layers", "=", "gnn_layers", "\n", "# create RGCN layers", "\n", "self", ".", "build_model", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.rgcnDGL.RGCN.set_g": [[20, 22], ["None"], "methods", ["None"], ["", "def", "set_g", "(", "self", ",", "g", ")", ":", "\n", "        ", "self", ".", "g", "=", "g", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.rgcnDGL.RGCN.build_model": [[23, 35], ["torch.ModuleList", "rgcnDGL.RGCN.build_input_layer", "rgcnDGL.RGCN.layers.append", "range", "rgcnDGL.RGCN.build_output_layer", "rgcnDGL.RGCN.layers.append", "rgcnDGL.RGCN.build_hidden_layer", "rgcnDGL.RGCN.layers.append"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.rgcnDGL.RGCN.build_input_layer", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.rgcnDGL.RGCN.build_output_layer", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.rgcnDGL.RGCN.build_hidden_layer"], ["", "def", "build_model", "(", "self", ")", ":", "\n", "        ", "self", ".", "layers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "# input to hidden", "\n", "i2h", "=", "self", ".", "build_input_layer", "(", ")", "\n", "self", ".", "layers", ".", "append", "(", "i2h", ")", "\n", "# hidden to hidden", "\n", "for", "i", "in", "range", "(", "self", ".", "gnn_layers", "-", "2", ")", ":", "\n", "            ", "h2h", "=", "self", ".", "build_hidden_layer", "(", "i", ")", "\n", "self", ".", "layers", ".", "append", "(", "h2h", ")", "\n", "# hidden to output", "\n", "", "h2o", "=", "self", ".", "build_output_layer", "(", ")", "\n", "self", ".", "layers", ".", "append", "(", "h2o", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.rgcnDGL.RGCN.build_input_layer": [[37, 42], ["print", "dgl.nn.pytorch.conv.relgraphconv.RelGraphConv"], "methods", ["None"], ["", "def", "build_input_layer", "(", "self", ")", ":", "\n", "        ", "print", "(", "'Building an INPUT  layer of {}x{} (rels:{})'", ".", "format", "(", "self", ".", "in_dim", ",", "self", ".", "hidden_dimensions", "[", "0", "]", ",", "\n", "self", ".", "num_rels", ")", ")", "\n", "return", "RelGraphConv", "(", "self", ".", "in_dim", ",", "self", ".", "hidden_dimensions", "[", "0", "]", ",", "self", ".", "num_rels", ",", "regularizer", "=", "'basis'", ",", "\n", "dropout", "=", "self", ".", "feat_drop", ",", "num_bases", "=", "self", ".", "num_bases", ",", "activation", "=", "self", ".", "activations", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.rgcnDGL.RGCN.build_hidden_layer": [[43, 47], ["print", "dgl.nn.pytorch.conv.relgraphconv.RelGraphConv"], "methods", ["None"], ["", "def", "build_hidden_layer", "(", "self", ",", "i", ")", ":", "\n", "        ", "print", "(", "'Building an HIDDEN  layer of {}x{}'", ".", "format", "(", "self", ".", "hidden_dimensions", "[", "i", "]", ",", "self", ".", "hidden_dimensions", "[", "i", "+", "1", "]", ")", ")", "\n", "return", "RelGraphConv", "(", "self", ".", "hidden_dimensions", "[", "i", "]", ",", "self", ".", "hidden_dimensions", "[", "i", "+", "1", "]", ",", "self", ".", "num_rels", ",", "regularizer", "=", "'basis'", ",", "\n", "dropout", "=", "self", ".", "feat_drop", ",", "num_bases", "=", "self", ".", "num_bases", ",", "activation", "=", "self", ".", "activations", "[", "i", "+", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.rgcnDGL.RGCN.build_output_layer": [[48, 52], ["print", "dgl.nn.pytorch.conv.relgraphconv.RelGraphConv"], "methods", ["None"], ["", "def", "build_output_layer", "(", "self", ")", ":", "\n", "        ", "print", "(", "'Building an OUTPUT  layer of {}x{}'", ".", "format", "(", "self", ".", "hidden_dimensions", "[", "-", "2", "]", ",", "self", ".", "hidden_dimensions", "[", "-", "1", "]", ")", ")", "\n", "return", "RelGraphConv", "(", "self", ".", "hidden_dimensions", "[", "-", "2", "]", ",", "self", ".", "hidden_dimensions", "[", "-", "1", "]", ",", "self", ".", "num_rels", ",", "regularizer", "=", "'basis'", ",", "\n", "dropout", "=", "self", ".", "feat_drop", ",", "num_bases", "=", "self", ".", "num_bases", ",", "activation", "=", "self", ".", "activations", "[", "-", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.rgcnDGL.RGCN.forward": [[53, 60], ["rgcnDGL.RGCN.g.edata[].to", "layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "features", ",", "etypes", ")", ":", "\n", "        ", "h", "=", "features", "\n", "self", ".", "g", ".", "edata", "[", "'norm'", "]", "=", "self", ".", "g", ".", "edata", "[", "'norm'", "]", ".", "to", "(", "device", "=", "features", ".", "device", ")", "\n", "\n", "for", "layer", "in", "self", ".", "layers", ":", "\n", "            ", "h", "=", "layer", "(", "self", ".", "g", ",", "h", ",", "etypes", ")", "\n", "", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.gcn.GCNLayer.__init__": [[14, 37], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "gcn.GCNLayer.reset_parameters", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Parameter", "torch.Parameter", "torch.Dropout", "torch.Dropout", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.pg_rgcn_gat3.PRGAT3.__init__", "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.gcn.GCNLayer.reset_parameters"], ["    ", "def", "__init__", "(", "self", ",", "\n", "g", ",", "\n", "in_feats", ",", "\n", "out_feats", ",", "\n", "activation", ",", "\n", "dropout", ",", "\n", "bias", "=", "True", ",", "\n", "freeze", "=", "0", ")", ":", "\n", "        ", "super", "(", "GCNLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "g", "=", "g", "\n", "self", ".", "freeze", "=", "0", "\n", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "in_feats", "+", "freeze", ",", "out_feats", ")", ")", "\n", "nn", ".", "init", ".", "xavier_normal_", "(", "self", ".", "weight", ",", "gain", "=", "1.414", ")", "\n", "if", "bias", ":", "\n", "            ", "self", ".", "bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "out_feats", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "bias", "=", "None", "\n", "", "self", ".", "activation", "=", "activation", "\n", "if", "dropout", ":", "\n", "            ", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "dropout", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "dropout", "=", "0.", "\n", "", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.gcn.GCNLayer.reset_parameters": [[38, 43], ["gcn.GCNLayer.weight.data.uniform_", "math.sqrt", "gcn.GCNLayer.bias.data.uniform_", "gcn.GCNLayer.weight.size"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "stdv", "=", "1.", "/", "math", ".", "sqrt", "(", "self", ".", "weight", ".", "size", "(", "1", ")", ")", "\n", "self", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "stdv", ",", "stdv", ")", "\n", "if", "self", ".", "bias", "is", "not", "None", ":", "\n", "            ", "self", ".", "bias", ".", "data", ".", "uniform_", "(", "-", "stdv", ",", "stdv", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.gcn.GCNLayer.forward": [[44, 62], ["torch.mm", "torch.mm", "torch.mm", "torch.mm", "gcn.GCNLayer.g.update_all", "gcn.GCNLayer.g.ndata.pop", "gcn.GCNLayer.dropout", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "dgl.copy_src", "dgl.sum", "gcn.GCNLayer.activation"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "h", ")", ":", "\n", "        ", "if", "self", ".", "dropout", ":", "\n", "            ", "h", "=", "self", ".", "dropout", "(", "h", ")", "\n", "", "h", "=", "torch", ".", "mm", "(", "torch", ".", "cat", "(", "(", "self", ".", "g", ".", "ndata", "[", "'frozen'", "]", ",", "h", ")", ",", "1", ")", ",", "self", ".", "weight", ")", "\n", "# normalization by square root of src degree", "\n", "h", "=", "h", "*", "self", ".", "g", ".", "ndata", "[", "'norm'", "]", "\n", "self", ".", "g", ".", "ndata", "[", "'h'", "]", "=", "h", "\n", "self", ".", "g", ".", "update_all", "(", "fn", ".", "copy_src", "(", "src", "=", "'h'", ",", "out", "=", "'m'", ")", ",", "\n", "fn", ".", "sum", "(", "msg", "=", "'m'", ",", "out", "=", "'h'", ")", ")", "\n", "h", "=", "self", ".", "g", ".", "ndata", ".", "pop", "(", "'h'", ")", "\n", "# normalization by square root of dst degree", "\n", "h", "=", "h", "*", "self", ".", "g", ".", "ndata", "[", "'norm'", "]", "\n", "# bias", "\n", "if", "self", ".", "bias", "is", "not", "None", ":", "\n", "            ", "h", "=", "h", "+", "self", ".", "bias", "\n", "", "if", "self", ".", "activation", ":", "\n", "            ", "h", "=", "self", ".", "activation", "(", "h", ")", "\n", "", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.gcn.GCN.__init__": [[64, 84], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "gcn.GCN.layers.append", "range", "gcn.GCN.layers.append", "gcn.GCNLayer", "gcn.GCN.layers.append", "gcn.GCNLayer", "gcn.GCNLayer"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.pg_rgcn_gat3.PRGAT3.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "g", ",", "\n", "in_feats", ",", "\n", "n_hidden", ",", "\n", "n_classes", ",", "\n", "n_layers", ",", "\n", "activation", ",", "\n", "dropout", ",", "\n", "freeze", "=", "0", ")", ":", "\n", "        ", "super", "(", "GCN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "g", "=", "g", "\n", "self", ".", "freeze", "=", "freeze", "\n", "self", ".", "layers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "# input layer", "\n", "self", ".", "layers", ".", "append", "(", "GCNLayer", "(", "g", ",", "in_feats", ",", "n_hidden", ",", "activation", ",", "0.", ",", "freeze", "=", "0", ")", ")", "\n", "# hidden layers", "\n", "for", "i", "in", "range", "(", "n_layers", "-", "1", ")", ":", "\n", "            ", "self", ".", "layers", ".", "append", "(", "GCNLayer", "(", "g", ",", "n_hidden", ",", "n_hidden", ",", "activation", ",", "dropout", ",", "freeze", "=", "self", ".", "freeze", ")", ")", "\n", "# output layer", "\n", "", "self", ".", "layers", ".", "append", "(", "GCNLayer", "(", "g", ",", "n_hidden", ",", "n_classes", ",", "torch", ".", "tanh", ",", "dropout", ",", "freeze", "=", "self", ".", "freeze", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.gcn.GCN.forward": [[86, 100], ["gcn.GCN.g.in_degrees().float", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "norm.to.to.to", "norm.to.to.unsqueeze", "layer", "gcn.GCN.g.in_degrees", "torch.isinf", "torch.isinf", "torch.isinf", "torch.isinf"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "features", ")", ":", "\n", "# normalization", "\n", "        ", "degs", "=", "self", ".", "g", ".", "in_degrees", "(", ")", ".", "float", "(", ")", "\n", "norm", "=", "torch", ".", "pow", "(", "degs", ",", "-", "0.5", ")", "\n", "norm", "[", "torch", ".", "isinf", "(", "norm", ")", "]", "=", "0", "\n", "norm", "=", "norm", ".", "to", "(", "device", "=", "features", ".", "device", ")", "\n", "self", ".", "g", ".", "ndata", "[", "'norm'", "]", "=", "norm", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "self", ".", "g", ".", "ndata", "[", "'frozen'", "]", "=", "features", "[", ":", ",", ":", "self", ".", "freeze", "]", "\n", "\n", "h", "=", "features", "\n", "for", "layer", "in", "self", ".", "layers", ":", "\n", "            ", "h", "=", "layer", "(", "h", ")", "\n", "", "return", "h", "\n", "", "", ""]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.pg_ggn.GGN.__init__": [[6, 9], ["super().__init__", "torch_geometric.nn.GatedGraphConv"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.pg_rgcn_gat3.PRGAT3.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "num_layers", ",", "aggr", "=", "'mean'", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "GGN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "gnn", "=", "GatedGraphConv", "(", "num_features", ",", "num_layers", ",", "aggr", "=", "aggr", ",", "bias", "=", "bias", ")", "#aggr values ['add', 'mean', 'max'] default : add", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.pg_ggn.GGN.forward": [[11, 16], ["pg_ggn.GGN.gnn", "x.mean().unsqueeze.mean().unsqueeze.mean().unsqueeze", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "x.mean().unsqueeze.mean().unsqueeze.mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "data", ")", ":", "\n", "        ", "x", ",", "edge_index", "=", "data", ".", "x", ",", "data", ".", "edge_index", "\n", "x", "=", "self", ".", "gnn", "(", "x", ",", "edge_index", ")", "\n", "x", "=", "x", ".", "mean", "(", "1", ")", ".", "unsqueeze", "(", "dim", "=", "1", ")", "\n", "return", "torch", ".", "tanh", "(", "x", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.pg_rgcn_gat2.PRGAT2.__init__": [[9, 36], ["super().__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "pg_rgcn_gat2.PRGAT2.layers.append", "pg_rgcn_gat2.PRGAT2.layers.append", "pg_rgcn_gat2.PRGAT2.layers.append", "pg_rgcn_gat2.PRGAT2.layers.append", "torch_geometric.nn.RGCNConv", "torch_geometric.nn.RGCNConv", "torch_geometric.nn.GATConv", "torch_geometric.nn.GATConv"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.pg_rgcn_gat3.PRGAT3.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "n_classes", ",", "num_heads", ",", "num_rels", ",", "num_bases", ",", "num_hidden", ",", "num_hidden_layer_pairs", ",", "dropout", ",", "activation", ",", "alpha", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "PRGAT2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "neg_slope", "=", "alpha", "\n", "self", ".", "num_hidden_layer_pairs", "=", "num_hidden_layer_pairs", "\n", "# dropout", "\n", "if", "dropout", ":", "\n", "            ", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "dropout", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "0.", ")", "\n", "# activation", "\n", "", "self", ".", "activation", "=", "activation", "\n", "\n", "if", "num_bases", "<", "0", ":", "\n", "            ", "num_bases", "=", "num_rels", "\n", "\n", "", "self", ".", "layers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "num_layer", "in", "range", "(", "num_hidden_layer_pairs", ")", ":", "\n", "# RGCN", "\n", "            ", "if", "num_layer", "==", "0", ":", "\n", "                ", "self", ".", "layers", ".", "append", "(", "RGCNConv", "(", "num_features", ",", "num_hidden", ",", "num_rels", ",", "num_bases", ",", "bias", "=", "bias", ")", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "layers", ".", "append", "(", "RGCNConv", "(", "num_hidden", "*", "num_heads", ",", "num_hidden", ",", "num_rels", ",", "num_bases", ",", "bias", "=", "bias", ")", ")", "\n", "# GAT", "\n", "", "if", "num_layer", "==", "num_hidden_layer_pairs", "-", "1", ":", "\n", "               ", "self", ".", "layers", ".", "append", "(", "GATConv", "(", "num_hidden", ",", "n_classes", ",", "heads", "=", "num_heads", ",", "concat", "=", "False", ",", "negative_slope", "=", "self", ".", "neg_slope", ",", "dropout", "=", "dropout", ",", "bias", "=", "bias", ")", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "layers", ".", "append", "(", "GATConv", "(", "num_hidden", ",", "num_hidden", ",", "heads", "=", "num_heads", ",", "concat", "=", "True", ",", "negative_slope", "=", "self", ".", "neg_slope", ",", "dropout", "=", "0", ",", "bias", "=", "bias", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.pg_rgcn_gat2.PRGAT2.forward": [[38, 52], ["range", "pg_rgcn_gat2.PRGAT2.mean().unsqueeze", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "pg_rgcn_gat2.PRGAT2.activation", "pg_rgcn_gat2.PRGAT2.dropout", "pg_rgcn_gat2.PRGAT2.mean"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "data", ")", ":", "\n", "        ", "x", ",", "edge_index", ",", "edge_type", "=", "data", ".", "x", ",", "data", ".", "edge_index", ",", "data", ".", "edge_type", "\n", "for", "i", "in", "range", "(", "self", ".", "num_hidden_layer_pairs", "*", "2", ")", ":", "\n", "# Layer", "\n", "            ", "if", "i", "%", "2", "==", "0", ":", "\n", "                ", "x", "=", "self", ".", "layers", "[", "i", "]", "(", "x", ",", "edge_index", ",", "edge_type", ")", "\n", "", "else", ":", "\n", "                ", "x", "=", "self", ".", "layers", "[", "i", "]", "(", "x", ",", "edge_index", ")", "\n", "#  Dropout & activation for hidden layers (not output)", "\n", "", "if", "i", "!=", "self", ".", "num_hidden_layer_pairs", "*", "2", "-", "1", ":", "\n", "                ", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "", "", "x", "=", "x", ".", "mean", "(", "1", ")", ".", "unsqueeze", "(", "dim", "=", "1", ")", "\n", "return", "torch", ".", "tanh", "(", "x", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.gat2.GraphAttention2.__init__": [[17, 49], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "dgl.nn.pytorch.softmax.EdgeSoftmax", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Linear", "torch.Linear", "torch.Linear", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.pg_rgcn_gat3.PRGAT3.__init__"], ["    ", "def", "__init__", "(", "self", ",", "g", ",", "in_dim", ",", "out_dim", ",", "num_heads", ",", "feat_drop", ",", "attn_drop", ",", "alpha", ",", "name", ",", "residual", "=", "False", ")", ":", "\n", "        ", "super", "(", "GraphAttention2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "g", "=", "g", "\n", "self", ".", "num_heads", "=", "num_heads", "\n", "self", ".", "name", "=", "name", "\n", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "in_dim", ",", "in_dim", ",", "bias", "=", "False", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "in_dim", ",", "num_heads", "*", "out_dim", ",", "bias", "=", "False", ")", "\n", "if", "feat_drop", ":", "\n", "            ", "self", ".", "feat_drop", "=", "nn", ".", "Dropout", "(", "feat_drop", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "feat_drop", "=", "lambda", "x", ":", "x", "\n", "", "if", "attn_drop", ":", "\n", "            ", "self", ".", "attn_drop", "=", "nn", ".", "Dropout", "(", "attn_drop", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "attn_drop", "=", "lambda", "x", ":", "x", "\n", "", "self", ".", "attn_l", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "size", "=", "(", "num_heads", ",", "out_dim", ",", "1", ")", ")", ")", "\n", "self", ".", "attn_r", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "size", "=", "(", "num_heads", ",", "out_dim", ",", "1", ")", ")", ")", "\n", "nn", ".", "init", ".", "xavier_normal_", "(", "self", ".", "fc1", ".", "weight", ".", "data", ",", "gain", "=", "1.414", ")", "\n", "nn", ".", "init", ".", "xavier_normal_", "(", "self", ".", "fc2", ".", "weight", ".", "data", ",", "gain", "=", "1.414", ")", "\n", "nn", ".", "init", ".", "xavier_normal_", "(", "self", ".", "attn_l", ".", "data", ",", "gain", "=", "1.414", ")", "\n", "nn", ".", "init", ".", "xavier_normal_", "(", "self", ".", "attn_r", ".", "data", ",", "gain", "=", "1.414", ")", "\n", "self", ".", "leaky_relu1", "=", "nn", ".", "LeakyReLU", "(", "alpha", ")", "\n", "self", ".", "leaky_relu2", "=", "nn", ".", "LeakyReLU", "(", "alpha", ")", "\n", "self", ".", "softmax", "=", "EdgeSoftmax", "(", ")", "\n", "self", ".", "residual", "=", "residual", "\n", "if", "residual", ":", "\n", "            ", "if", "in_dim", "!=", "out_dim", ":", "\n", "                ", "self", ".", "res_fc", "=", "nn", ".", "Linear", "(", "in_dim", ",", "num_heads", "*", "out_dim", ",", "bias", "=", "False", ")", "\n", "nn", ".", "init", ".", "xavier_normal_", "(", "self", ".", "res_fc", ".", "weight", ".", "data", ",", "gain", "=", "1.414", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "res_fc", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.gat2.GraphAttention2.forward": [[50, 77], ["gat2.GraphAttention2.feat_drop", "gat2.GraphAttention2.fc1", "gat2.GraphAttention2.leaky_relu1", "gat2.GraphAttention2.fc2().reshape", "gat2.GraphAttention2.transpose", "torch.bmm().transpose", "torch.bmm().transpose", "torch.bmm().transpose", "torch.bmm().transpose", "torch.bmm().transpose", "torch.bmm().transpose", "torch.bmm().transpose", "torch.bmm().transpose", "torch.bmm().transpose", "torch.bmm().transpose", "torch.bmm().transpose", "torch.bmm().transpose", "torch.bmm().transpose", "torch.bmm().transpose", "torch.bmm().transpose", "torch.bmm().transpose", "torch.bmm().transpose", "torch.bmm().transpose", "gat2.GraphAttention2.g.ndata.update", "gat2.GraphAttention2.g.apply_edges", "gat2.GraphAttention2.edge_softmax", "gat2.GraphAttention2.g.update_all", "dgl.src_mul_edge", "dgl.sum", "gat2.GraphAttention2.fc2", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "gat2.GraphAttention2.res_fc().reshape", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "gat2.GraphAttention2.res_fc"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.gat2.GraphAttention2.edge_softmax"], ["", "", "", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "# prepare", "\n", "        ", "h", "=", "self", ".", "feat_drop", "(", "inputs", ")", "# NxD", "\n", "ft1", "=", "self", ".", "fc1", "(", "h", ")", "# NxHxD'", "\n", "h2", "=", "self", ".", "leaky_relu1", "(", "ft1", ")", "\n", "ft2", "=", "self", ".", "fc2", "(", "h2", ")", ".", "reshape", "(", "(", "h2", ".", "shape", "[", "0", "]", ",", "self", ".", "num_heads", ",", "-", "1", ")", ")", "# NxHxD'", "\n", "head_ft", "=", "ft2", ".", "transpose", "(", "0", ",", "1", ")", "# HxNxD'", "\n", "a1", "=", "torch", ".", "bmm", "(", "head_ft", ",", "self", ".", "attn_l", ")", ".", "transpose", "(", "0", ",", "1", ")", "# NxHx1", "\n", "a2", "=", "torch", ".", "bmm", "(", "head_ft", ",", "self", ".", "attn_r", ")", ".", "transpose", "(", "0", ",", "1", ")", "# NxHx1", "\n", "self", ".", "g", ".", "ndata", ".", "update", "(", "{", "'ft'", ":", "ft2", ",", "'a1'", ":", "a1", ",", "'a2'", ":", "a2", "}", ")", "\n", "# 1. compute edge attention", "\n", "self", ".", "g", ".", "apply_edges", "(", "self", ".", "edge_attention", ")", "\n", "# 2. compute softmax in two parts: exp(x - max(x)) and sum(exp(x - max(x)))", "\n", "self", ".", "edge_softmax", "(", ")", "\n", "# 2. compute the aggregated node features scaled by the dropped,", "\n", "# unnormalized attention values.", "\n", "self", ".", "g", ".", "update_all", "(", "fn", ".", "src_mul_edge", "(", "'ft'", ",", "'a_drop'", ",", "'ft'", ")", ",", "fn", ".", "sum", "(", "'ft'", ",", "'ft'", ")", ")", "\n", "# 3. apply normalizer", "\n", "ret", "=", "self", ".", "g", ".", "ndata", "[", "'ft'", "]", "#/ self.g.ndata['z']  # NxHxD'", "\n", "# 4. residual", "\n", "if", "self", ".", "residual", ":", "\n", "            ", "if", "self", ".", "res_fc", "is", "not", "None", ":", "\n", "                ", "resval", "=", "self", ".", "res_fc", "(", "h", ")", ".", "reshape", "(", "(", "h", ".", "shape", "[", "0", "]", ",", "self", ".", "num_heads", ",", "-", "1", ")", ")", "# NxHxD'", "\n", "", "else", ":", "\n", "                ", "resval", "=", "torch", ".", "unsqueeze", "(", "h", ",", "1", ")", "# Nx1xD'", "\n", "", "ret", "=", "resval", "+", "ret", "\n", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.gat2.GraphAttention2.edge_attention": [[78, 82], ["gat2.GraphAttention2.leaky_relu1"], "methods", ["None"], ["", "def", "edge_attention", "(", "self", ",", "edges", ")", ":", "\n", "# an edge UDF to compute unnormalized attention values from src and dst", "\n", "        ", "a", "=", "self", ".", "leaky_relu1", "(", "edges", ".", "src", "[", "'a1'", "]", "+", "edges", ".", "dst", "[", "'a2'", "]", ")", "\n", "return", "{", "'a'", ":", "a", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.gat2.GraphAttention2.edge_softmax": [[83, 89], ["gat2.GraphAttention2.softmax.apply", "gat2.GraphAttention2.attn_drop"], "methods", ["None"], ["", "def", "edge_softmax", "(", "self", ")", ":", "\n", "        ", "scores", "=", "self", ".", "softmax", ".", "apply", "(", "self", ".", "g", ",", "self", ".", "g", ".", "edata", "[", "'a'", "]", ")", "\n", "# Save normalizer", "\n", "#self.g.ndata['z'] = normalizer", "\n", "# Dropout attention scores and save them", "\n", "self", ".", "g", ".", "edata", "[", "'a_drop'", "]", "=", "self", ".", "attn_drop", "(", "scores", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.gat2.GAT2.__init__": [[91, 131], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "gat2.GAT2.layers.append", "range", "gat2.GAT2.layers.append", "gat2.GraphAttention2", "gat2.GraphAttention2", "gat2.GAT2.layers.append", "gat2.GraphAttention2", "str"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.pg_rgcn_gat3.PRGAT3.__init__"], ["    ", "def", "__init__", "(", "self", ",", "g", ",", "num_layers", ",", "in_dim", ",", "num_hidden", ",", "num_classes", ",", "heads", ",", "activation", ",", "feat_drop", ",", "attn_drop", ",", "alpha", ",", "\n", "residual", ")", ":", "\n", "        ", "super", "(", "GAT2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "g", "=", "g", "\n", "self", ".", "num_layers", "=", "num_layers", "\n", "self", ".", "layers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "activation", "=", "activation", "\n", "# input projection (no residual)", "\n", "self", ".", "layers", ".", "append", "(", "GraphAttention2", "(", "g", ",", "\n", "in_dim", "=", "in_dim", ",", "\n", "out_dim", "=", "num_hidden", ",", "\n", "num_heads", "=", "heads", "[", "0", "]", ",", "\n", "feat_drop", "=", "feat_drop", ",", "\n", "attn_drop", "=", "attn_drop", ",", "\n", "alpha", "=", "alpha", ",", "\n", "residual", "=", "False", ",", "\n", "name", "=", "'0'", ")", ")", "\n", "# hidden layers", "\n", "for", "l", "in", "range", "(", "1", ",", "num_layers", ")", ":", "\n", "# due to multi-head, the in_dim = num_hidden * num_heads", "\n", "            ", "lyr", "=", "GraphAttention2", "(", "g", ",", "\n", "in_dim", "=", "num_hidden", "*", "heads", "[", "l", "-", "1", "]", ",", "\n", "out_dim", "=", "num_hidden", ",", "\n", "num_heads", "=", "heads", "[", "l", "]", ",", "\n", "feat_drop", "=", "feat_drop", ",", "\n", "attn_drop", "=", "attn_drop", ",", "\n", "alpha", "=", "alpha", ",", "\n", "residual", "=", "residual", ",", "\n", "name", "=", "str", "(", "l", ")", ")", "\n", "self", ".", "layers", ".", "append", "(", "lyr", ")", "\n", "# output projection", "\n", "", "self", ".", "layers", ".", "append", "(", "GraphAttention2", "(", "g", ",", "\n", "in_dim", "=", "num_hidden", "*", "heads", "[", "-", "2", "]", ",", "\n", "out_dim", "=", "num_classes", ",", "\n", "num_heads", "=", "heads", "[", "-", "1", "]", ",", "\n", "feat_drop", "=", "feat_drop", ",", "\n", "attn_drop", "=", "attn_drop", ",", "\n", "alpha", "=", "alpha", ",", "\n", "residual", "=", "residual", ",", "\n", "name", "=", "'X'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.gat2.GAT2.forward": [[132, 142], ["range", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "gat2.GAT2.activation"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "h", "=", "inputs", "\n", "for", "l", "in", "range", "(", "self", ".", "num_layers", "-", "1", ")", ":", "\n", "            ", "h", "=", "self", ".", "layers", "[", "l", "]", "(", "h", ")", ".", "flatten", "(", "1", ")", "\n", "h", "=", "self", ".", "activation", "(", "h", ")", "\n", "", "h", "=", "self", ".", "layers", "[", "self", ".", "num_layers", "-", "1", "]", "(", "h", ")", ".", "flatten", "(", "1", ")", "\n", "h", "=", "torch", ".", "tanh", "(", "h", ")", "\n", "# output projection", "\n", "logits", "=", "self", ".", "layers", "[", "-", "1", "]", "(", "h", ")", ".", "mean", "(", "1", ")", "\n", "return", "logits", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.gat2.GAT2.set_g": [[143, 147], ["range"], "methods", ["None"], ["", "def", "set_g", "(", "self", ",", "g", ")", ":", "\n", "        ", "self", ".", "g", "=", "g", "\n", "for", "l", "in", "range", "(", "self", ".", "num_layers", ")", ":", "\n", "            ", "self", ".", "layers", "[", "l", "]", ".", "g", "=", "g", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.pg_gat.PGAT.__init__": [[8, 27], ["super().__init__", "torch_geometric.nn.GATConv", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch_geometric.nn.GATConv", "torch_geometric.nn.GATConv", "pg_gat.PGAT.layers.append", "pg_gat.PGAT.layers.append", "torch_geometric.nn.GATConv", "torch_geometric.nn.GATConv"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.pg_rgcn_gat3.PRGAT3.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "n_classes", ",", "num_heads", ",", "dropout", ",", "num_hidden", ",", "num_hidden_layers", ",", "activation", ",", "concat", "=", "True", ",", "neg_slope", "=", "0.2", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "PGAT", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# Activation", "\n", "self", ".", "activation", "=", "activation", "\n", "# input layer", "\n", "self", ".", "gat_input", "=", "GATConv", "(", "num_features", ",", "num_hidden", ",", "heads", "=", "num_heads", ",", "concat", "=", "concat", ",", "negative_slope", "=", "neg_slope", ",", "dropout", "=", "dropout", ",", "bias", "=", "bias", ")", "\n", "# Hidden layers", "\n", "self", ".", "layers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "_", "in", "range", "(", "num_hidden_layers", ")", ":", "\n", "            ", "if", "concat", ":", "\n", "                ", "self", ".", "layers", ".", "append", "(", "GATConv", "(", "num_hidden", "*", "num_heads", ",", "num_hidden", ",", "heads", "=", "num_heads", ",", "concat", "=", "concat", ",", "negative_slope", "=", "neg_slope", ",", "dropout", "=", "dropout", ",", "bias", "=", "bias", ")", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "layers", ".", "append", "(", "GATConv", "(", "num_hidden", ",", "num_hidden", ",", "heads", "=", "num_heads", ",", "concat", "=", "concat", ",", "negative_slope", "=", "neg_slope", ",", "dropout", "=", "dropout", ",", "bias", "=", "bias", ")", ")", "\n", "# output layer", "\n", "", "", "if", "concat", ":", "\n", "# print('XXXXXX', n_classes, num_heads)", "\n", "            ", "self", ".", "gat_output", "=", "GATConv", "(", "num_hidden", "*", "num_heads", ",", "n_classes", ",", "heads", "=", "1", ",", "concat", "=", "concat", ",", "negative_slope", "=", "neg_slope", ",", "dropout", "=", "dropout", ",", "bias", "=", "bias", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "gat_output", "=", "GATConv", "(", "num_hidden", ",", "n_classes", ",", "heads", "=", "1", ",", "concat", "=", "concat", ",", "negative_slope", "=", "neg_slope", ",", "dropout", "=", "dropout", ",", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.pg_gat.PGAT.forward": [[30, 45], ["pg_gat.PGAT.gat_input", "pg_gat.PGAT.activation", "pg_gat.PGAT.gat_output", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "layer", "pg_gat.PGAT.activation"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "data", ")", ":", "\n", "        ", "x", ",", "edge_index", "=", "data", ".", "x", ",", "data", ".", "edge_index", "\n", "x", "=", "self", ".", "gat_input", "(", "x", ",", "edge_index", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "# print('input shape', x.shape)", "\n", "for", "layer", "in", "self", ".", "layers", ":", "\n", "            ", "x", "=", "layer", "(", "x", ",", "edge_index", ")", "\n", "# print('hidden shape', x.shape)", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "", "x", "=", "self", ".", "gat_output", "(", "x", ",", "edge_index", ")", "\n", "# print('out shapeA', x.shape)", "\n", "# x = x.mean(1).unsqueeze(dim=1)", "\n", "# print('out shapeB', x.shape)", "\n", "# sys.exit(0)", "\n", "return", "torch", ".", "tanh", "(", "x", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.pg_rgcn_gat3.PRGAT3.__init__": [[9, 39], ["super().__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "int", "pg_rgcn_gat3.PRGAT3.layers.append", "pg_rgcn_gat3.PRGAT3.layers.append", "pg_rgcn_gat3.PRGAT3.layers.append", "pg_rgcn_gat3.PRGAT3.layers.append", "torch_geometric.nn.RGCNConv", "torch_geometric.nn.RGCNConv", "torch_geometric.nn.GATConv", "torch_geometric.nn.GATConv", "layer_size", "layer_size", "layer_size", "layer_size", "layer_size", "layer_size"], "methods", ["home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.pg_rgcn_gat3.PRGAT3.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "n_classes", ",", "num_heads", ",", "num_rels", ",", "num_bases", ",", "num_hidden", ",", "num_hidden_layer_pairs", ",", "dropout", ",", "activation", ",", "alpha", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "PRGAT3", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "neg_slope", "=", "alpha", "\n", "self", ".", "num_hidden_layer_pairs", "=", "num_hidden_layer_pairs", "\n", "# dropout", "\n", "if", "dropout", ":", "\n", "            ", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "dropout", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "0.", ")", "\n", "# activation", "\n", "", "self", ".", "activation", "=", "activation", "\n", "\n", "if", "num_bases", "<", "0", ":", "\n", "            ", "num_bases", "=", "num_rels", "\n", "\n", "", "self", ".", "layers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "\n", "layer_size", "=", "lambda", "i", ":", "int", "(", "(", "1.", "-", "i", "/", "num_hidden_layer_pairs", ")", "*", "num_hidden", "+", "0.5", ")", "\n", "\n", "for", "i", "in", "range", "(", "num_hidden_layer_pairs", ")", ":", "\n", "# RGCN", "\n", "            ", "if", "i", "==", "0", ":", "\n", "                ", "self", ".", "layers", ".", "append", "(", "RGCNConv", "(", "num_features", ",", "layer_size", "(", "i", ")", ",", "num_rels", ",", "num_bases", ",", "bias", "=", "bias", ")", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "layers", ".", "append", "(", "RGCNConv", "(", "layer_size", "(", "i", "-", "1", ")", "*", "num_heads", ",", "layer_size", "(", "i", ")", ",", "num_rels", ",", "num_bases", ",", "bias", "=", "bias", ")", ")", "\n", "# GAT", "\n", "", "if", "i", "==", "num_hidden_layer_pairs", "-", "1", ":", "\n", "                ", "self", ".", "layers", ".", "append", "(", "GATConv", "(", "layer_size", "(", "i", ")", ",", "n_classes", ",", "heads", "=", "num_heads", ",", "concat", "=", "False", ",", "negative_slope", "=", "self", ".", "neg_slope", ",", "dropout", "=", "dropout", ",", "bias", "=", "bias", ")", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "layers", ".", "append", "(", "GATConv", "(", "layer_size", "(", "i", ")", ",", "layer_size", "(", "i", ")", ",", "heads", "=", "num_heads", ",", "concat", "=", "True", ",", "negative_slope", "=", "self", ".", "neg_slope", ",", "dropout", "=", "0", ",", "bias", "=", "bias", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vangiel_WheresTheFellow.nets.pg_rgcn_gat3.PRGAT3.forward": [[41, 55], ["range", "pg_rgcn_gat3.PRGAT3.mean().unsqueeze", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "pg_rgcn_gat3.PRGAT3.activation", "pg_rgcn_gat3.PRGAT3.dropout", "pg_rgcn_gat3.PRGAT3.mean"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "data", ")", ":", "\n", "        ", "x", ",", "edge_index", ",", "edge_type", "=", "data", ".", "x", ",", "data", ".", "edge_index", ",", "data", ".", "edge_type", "\n", "for", "i", "in", "range", "(", "self", ".", "num_hidden_layer_pairs", "*", "2", ")", ":", "\n", "# Layer", "\n", "            ", "if", "i", "%", "2", "==", "0", ":", "\n", "                ", "x", "=", "self", ".", "layers", "[", "i", "]", "(", "x", ",", "edge_index", ",", "edge_type", ")", "\n", "", "else", ":", "\n", "                ", "x", "=", "self", ".", "layers", "[", "i", "]", "(", "x", ",", "edge_index", ")", "\n", "#  Dropout & activation for hidden layers (not output)", "\n", "", "if", "i", "!=", "self", ".", "num_hidden_layer_pairs", "*", "2", "-", "1", ":", "\n", "                ", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "", "", "x", "=", "x", ".", "mean", "(", "1", ")", ".", "unsqueeze", "(", "dim", "=", "1", ")", "\n", "return", "torch", ".", "tanh", "(", "x", ")", "\n", "", "", ""]]}