{"home.repos.pwc.inspect_result.NVlabs_Bi3D.src.run_continuous_depth_estimation.main": [[53, 164], ["vars", "print", "print", "PIL.Image.open().convert", "PIL.Image.open().convert", "torchvision.functional.to_tensor", "torchvision.functional.to_tensor", "torchvision.functional.normalize", "torchvision.functional.normalize", "int", "int", "numpy.linspace", "torch.from_numpy().type().cuda", "numpy.linspace", "torch.from_numpy().type().cuda", "disp_long_3x_main[].expand", "disp_float_main[].expand", "random.randint", "random.randint", "torch.nn.ZeroPad2d", "torch.nn.ZeroPad2d.", "torch.nn.ZeroPad2d.", "model.eval", "output_disp[].cpu().clone().numpy", "cv2.imwrite", "print", "os.path.isdir", "os.mkdir", "os.path.splitext", "torch.load", "print", "exit", "transforms.functional.normalize.type", "transforms.functional.normalize.type", "max", "max", "torch.no_grad", "torch.clamp", "util.disp2rgb", "os.path.join", "os.path.basename", "PIL.Image.open", "PIL.Image.open", "torch.from_numpy().type", "torch.from_numpy().type", "model", "model", "output_disp[].cpu().clone", "torch.from_numpy", "torch.from_numpy", "min", "min", "min", "min", "output_disp[].cpu"], "function", ["home.repos.pwc.inspect_result.NVlabs_Bi3D.src.util.disp2rgb"], ["def", "main", "(", ")", ":", "\n", "\n", "    ", "options", "=", "vars", "(", "args", ")", "\n", "print", "(", "\"==> ALL PARAMETERS\"", ")", "\n", "for", "key", "in", "options", ":", "\n", "        ", "print", "(", "\"{} : {}\"", ".", "format", "(", "key", ",", "options", "[", "key", "]", ")", ")", "\n", "\n", "", "out_dir", "=", "\"out\"", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "out_dir", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "out_dir", ")", "\n", "\n", "", "base_name", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "args", ".", "img_left", ")", ")", "[", "0", "]", "\n", "\n", "# Model", "\n", "if", "args", ".", "pretrained", ":", "\n", "        ", "network_data", "=", "torch", ".", "load", "(", "args", ".", "pretrained", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"Need an input model\"", ")", "\n", "exit", "(", ")", "\n", "\n", "", "print", "(", "\"=> using pre-trained model '{}'\"", ".", "format", "(", "args", ".", "arch", ")", ")", "\n", "model", "=", "models", ".", "__dict__", "[", "args", ".", "arch", "]", "(", "options", ",", "network_data", ")", ".", "cuda", "(", ")", "\n", "\n", "# Inputs", "\n", "img_left", "=", "Image", ".", "open", "(", "args", ".", "img_left", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "img_right", "=", "Image", ".", "open", "(", "args", ".", "img_right", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "img_left", "=", "transforms", ".", "functional", ".", "to_tensor", "(", "img_left", ")", "\n", "img_right", "=", "transforms", ".", "functional", ".", "to_tensor", "(", "img_right", ")", "\n", "img_left", "=", "transforms", ".", "functional", ".", "normalize", "(", "img_left", ",", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "[", "0.5", ",", "0.5", ",", "0.5", "]", ")", "\n", "img_right", "=", "transforms", ".", "functional", ".", "normalize", "(", "img_right", ",", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "[", "0.5", ",", "0.5", ",", "0.5", "]", ")", "\n", "img_left", "=", "img_left", ".", "type", "(", "torch", ".", "cuda", ".", "FloatTensor", ")", "[", "None", ",", ":", ",", ":", ",", ":", "]", "\n", "img_right", "=", "img_right", ".", "type", "(", "torch", ".", "cuda", ".", "FloatTensor", ")", "[", "None", ",", ":", ",", ":", ",", ":", "]", "\n", "\n", "# Prepare Disparities", "\n", "max_disparity", "=", "args", ".", "disp_range_max", "\n", "min_disparity", "=", "args", ".", "disp_range_min", "\n", "\n", "assert", "max_disparity", "%", "3", "==", "0", "and", "min_disparity", "%", "3", "==", "0", ",", "\"disparities should be divisible by 3\"", "\n", "\n", "if", "args", ".", "arch", "==", "\"bi3dnet_continuous_depth_3D\"", ":", "\n", "        ", "assert", "(", "\n", "max_disparity", "-", "min_disparity", "\n", ")", "%", "48", "==", "0", ",", "\"for 3D regularization the difference in disparities should be divisible by 48\"", "\n", "\n", "", "max_disp_levels", "=", "(", "max_disparity", "-", "min_disparity", ")", "+", "1", "\n", "\n", "max_disparity_3x", "=", "int", "(", "max_disparity", "/", "3", ")", "\n", "min_disparity_3x", "=", "int", "(", "min_disparity", "/", "3", ")", "\n", "max_disp_levels_3x", "=", "(", "max_disparity_3x", "-", "min_disparity_3x", ")", "+", "1", "\n", "disp_3x", "=", "np", ".", "linspace", "(", "min_disparity_3x", ",", "max_disparity_3x", ",", "max_disp_levels_3x", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "disp_long_3x_main", "=", "torch", ".", "from_numpy", "(", "disp_3x", ")", ".", "type", "(", "torch", ".", "LongTensor", ")", ".", "cuda", "(", ")", "\n", "disp_float_main", "=", "np", ".", "linspace", "(", "min_disparity", ",", "max_disparity", ",", "max_disp_levels", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "disp_float_main", "=", "torch", ".", "from_numpy", "(", "disp_float_main", ")", ".", "type", "(", "torch", ".", "float32", ")", ".", "cuda", "(", ")", "\n", "delta", "=", "1", "\n", "d_min_GT", "=", "min_disparity", "-", "0.5", "*", "delta", "\n", "d_max_GT", "=", "max_disparity", "+", "0.5", "*", "delta", "\n", "disp_long_3x", "=", "disp_long_3x_main", "[", "None", ",", ":", "]", ".", "expand", "(", "img_left", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "disp_float", "=", "disp_float_main", "[", "None", ",", ":", "]", ".", "expand", "(", "img_left", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "\n", "# Pad Inputs", "\n", "tw", "=", "args", ".", "crop_width", "\n", "th", "=", "args", ".", "crop_height", "\n", "assert", "tw", "%", "96", "==", "0", ",", "\"image dimensions should be multiple of 96\"", "\n", "assert", "th", "%", "96", "==", "0", ",", "\"image dimensions should be multiple of 96\"", "\n", "h", "=", "img_left", ".", "shape", "[", "2", "]", "\n", "w", "=", "img_left", ".", "shape", "[", "3", "]", "\n", "x1", "=", "random", ".", "randint", "(", "0", ",", "max", "(", "0", ",", "w", "-", "tw", ")", ")", "\n", "y1", "=", "random", ".", "randint", "(", "0", ",", "max", "(", "0", ",", "h", "-", "th", ")", ")", "\n", "pad_w", "=", "tw", "-", "w", "if", "tw", "-", "w", ">", "0", "else", "0", "\n", "pad_h", "=", "th", "-", "h", "if", "th", "-", "h", ">", "0", "else", "0", "\n", "pad_opr", "=", "torch", ".", "nn", ".", "ZeroPad2d", "(", "(", "pad_w", ",", "0", ",", "pad_h", ",", "0", ")", ")", "\n", "img_left", "=", "img_left", "[", ":", ",", ":", ",", "y1", ":", "y1", "+", "min", "(", "th", ",", "h", ")", ",", "x1", ":", "x1", "+", "min", "(", "tw", ",", "w", ")", "]", "\n", "img_right", "=", "img_right", "[", ":", ",", ":", ",", "y1", ":", "y1", "+", "min", "(", "th", ",", "h", ")", ",", "x1", ":", "x1", "+", "min", "(", "tw", ",", "w", ")", "]", "\n", "img_left_pad", "=", "pad_opr", "(", "img_left", ")", "\n", "img_right_pad", "=", "pad_opr", "(", "img_right", ")", "\n", "\n", "# Inference", "\n", "model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "if", "args", ".", "arch", "==", "\"bi3dnet_continuous_depth_2D\"", ":", "\n", "            ", "output_seg_low_res_upsample", ",", "output_disp_normalized", "=", "model", "(", "\n", "img_left_pad", ",", "img_right_pad", ",", "disp_long_3x", "\n", ")", "\n", "output_seg", "=", "output_seg_low_res_upsample", "\n", "", "else", ":", "\n", "            ", "(", "\n", "output_seg_low_res_upsample", ",", "\n", "output_seg_low_res_upsample_refined", ",", "\n", "output_disp_normalized_no_reg", ",", "\n", "output_disp_normalized", ",", "\n", ")", "=", "model", "(", "img_left_pad", ",", "img_right_pad", ",", "disp_long_3x", ")", "\n", "output_seg", "=", "output_seg_low_res_upsample_refined", "\n", "\n", "", "output_seg", "=", "output_seg", "[", ":", ",", ":", ",", "pad_h", ":", ",", "pad_w", ":", "]", "\n", "output_disp_normalized", "=", "output_disp_normalized", "[", ":", ",", ":", ",", "pad_h", ":", ",", "pad_w", ":", "]", "\n", "output_disp", "=", "torch", ".", "clamp", "(", "\n", "output_disp_normalized", "*", "delta", "*", "max_disp_levels", "+", "d_min_GT", ",", "min", "=", "d_min_GT", ",", "max", "=", "d_max_GT", "\n", ")", "\n", "\n", "# Write Results", "\n", "", "max_disparity_color", "=", "192", "\n", "output_disp_clamp", "=", "output_disp", "[", "0", ",", "0", ",", ":", ",", ":", "]", ".", "cpu", "(", ")", ".", "clone", "(", ")", ".", "numpy", "(", ")", "\n", "output_disp_clamp", "[", "output_disp_clamp", "<", "min_disparity", "]", "=", "0", "\n", "output_disp_clamp", "[", "output_disp_clamp", ">", "max_disparity", "]", "=", "max_disparity_color", "\n", "disp_np_ours_color", "=", "disp2rgb", "(", "output_disp_clamp", "/", "max_disparity_color", ")", "*", "255.0", "\n", "cv2", ".", "imwrite", "(", "\n", "os", ".", "path", ".", "join", "(", "out_dir", ",", "\"%s_%s_%d_%d.png\"", "%", "(", "base_name", ",", "args", ".", "arch", ",", "min_disparity", ",", "max_disparity", ")", ")", ",", "\n", "disp_np_ours_color", ",", "\n", ")", "\n", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.src.run_binary_depth_estimation.main": [[53, 154], ["vars", "print", "torch.load", "print", "PIL.Image.open().convert", "torchvision.functional.to_tensor", "torchvision.functional.normalize", "PIL.Image.open().convert", "torchvision.functional.to_tensor", "torchvision.functional.normalize", "numpy.concatenate", "numpy.insert", "numpy.append", "numpy.argmax().astype", "np.argmax().astype.astype", "disp_vals.insert", "disp_vals.append", "range", "numpy.clip", "cv2.imwrite", "print", "os.path.isdir", "os.mkdir", "os.path.splitext", "transforms.functional.normalize.type", "transforms.functional.normalize.type", "torch.Tensor().type().cuda", "random.randint", "random.randint", "torch.nn.ZeroPad2d", "torch.nn.ZeroPad2d.", "torch.nn.ZeroPad2d.", "model.eval", "[].clone().cpu().detach().numpy", "numpy.transpose", "cv2.imwrite", "np.append.append", "numpy.ones", "numpy.zeros", "os.path.join", "os.path.basename", "PIL.Image.open", "PIL.Image.open", "max", "max", "torch.no_grad", "os.path.join", "[].clone().cpu().detach().numpy", "numpy.argmax", "len", "torch.Tensor().type", "[].clone().cpu().detach", "util.disp2rgb", "model", "[].clone().cpu().detach", "torch.Tensor", "min", "min", "min", "min", "[].clone().cpu", "[].clone().cpu", "[].clone", "[].clone"], "function", ["home.repos.pwc.inspect_result.NVlabs_Bi3D.src.util.disp2rgb"], ["def", "main", "(", ")", ":", "\n", "\n", "    ", "options", "=", "vars", "(", "args", ")", "\n", "print", "(", "\"==> ALL PARAMETERS\"", ")", "\n", "for", "key", "in", "options", ":", "\n", "        ", "print", "(", "\"{} : {}\"", ".", "format", "(", "key", ",", "options", "[", "key", "]", ")", ")", "\n", "\n", "", "out_dir", "=", "\"out\"", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "out_dir", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "out_dir", ")", "\n", "\n", "", "base_name", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "args", ".", "img_left", ")", ")", "[", "0", "]", "\n", "\n", "# Model", "\n", "network_data", "=", "torch", ".", "load", "(", "args", ".", "pretrained", ")", "\n", "print", "(", "\"=> using pre-trained model '{}'\"", ".", "format", "(", "args", ".", "arch", ")", ")", "\n", "model", "=", "models", ".", "__dict__", "[", "args", ".", "arch", "]", "(", "options", ",", "network_data", ")", ".", "cuda", "(", ")", "\n", "\n", "# Inputs", "\n", "img_left", "=", "Image", ".", "open", "(", "args", ".", "img_left", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "img_left", "=", "transforms", ".", "functional", ".", "to_tensor", "(", "img_left", ")", "\n", "img_left", "=", "transforms", ".", "functional", ".", "normalize", "(", "img_left", ",", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "[", "0.5", ",", "0.5", ",", "0.5", "]", ")", "\n", "img_left", "=", "img_left", ".", "type", "(", "torch", ".", "cuda", ".", "FloatTensor", ")", "[", "None", ",", ":", ",", ":", ",", ":", "]", "\n", "img_right", "=", "Image", ".", "open", "(", "args", ".", "img_right", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "img_right", "=", "transforms", ".", "functional", ".", "to_tensor", "(", "img_right", ")", "\n", "img_right", "=", "transforms", ".", "functional", ".", "normalize", "(", "img_right", ",", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "[", "0.5", ",", "0.5", ",", "0.5", "]", ")", "\n", "img_right", "=", "img_right", ".", "type", "(", "torch", ".", "cuda", ".", "FloatTensor", ")", "[", "None", ",", ":", ",", ":", ",", ":", "]", "\n", "\n", "segs", "=", "[", "]", "\n", "for", "disp_val", "in", "args", ".", "disp_vals", ":", "\n", "\n", "        ", "assert", "disp_val", "%", "3", "==", "0", ",", "\"disparity value should be a multiple of 3 as we downsample the image by 3\"", "\n", "disp_long", "=", "torch", ".", "Tensor", "(", "[", "[", "disp_val", "/", "3", "]", "]", ")", ".", "type", "(", "torch", ".", "LongTensor", ")", ".", "cuda", "(", ")", "\n", "\n", "# Pad inputs", "\n", "tw", "=", "args", ".", "crop_width", "\n", "th", "=", "args", ".", "crop_height", "\n", "assert", "tw", "%", "96", "==", "0", ",", "\"image dimensions should be a multiple of 96\"", "\n", "assert", "th", "%", "96", "==", "0", ",", "\"image dimensions should be a multiple of 96\"", "\n", "h", "=", "img_left", ".", "shape", "[", "2", "]", "\n", "w", "=", "img_left", ".", "shape", "[", "3", "]", "\n", "x1", "=", "random", ".", "randint", "(", "0", ",", "max", "(", "0", ",", "w", "-", "tw", ")", ")", "\n", "y1", "=", "random", ".", "randint", "(", "0", ",", "max", "(", "0", ",", "h", "-", "th", ")", ")", "\n", "pad_w", "=", "tw", "-", "w", "if", "tw", "-", "w", ">", "0", "else", "0", "\n", "pad_h", "=", "th", "-", "h", "if", "th", "-", "h", ">", "0", "else", "0", "\n", "pad_opr", "=", "torch", ".", "nn", ".", "ZeroPad2d", "(", "(", "pad_w", ",", "0", ",", "pad_h", ",", "0", ")", ")", "\n", "img_left", "=", "img_left", "[", ":", ",", ":", ",", "y1", ":", "y1", "+", "min", "(", "th", ",", "h", ")", ",", "x1", ":", "x1", "+", "min", "(", "tw", ",", "w", ")", "]", "\n", "img_right", "=", "img_right", "[", ":", ",", ":", ",", "y1", ":", "y1", "+", "min", "(", "th", ",", "h", ")", ",", "x1", ":", "x1", "+", "min", "(", "tw", ",", "w", ")", "]", "\n", "img_left_pad", "=", "pad_opr", "(", "img_left", ")", "\n", "img_right_pad", "=", "pad_opr", "(", "img_right", ")", "\n", "\n", "# Inference", "\n", "model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "output", "=", "model", "(", "img_left_pad", ",", "img_right_pad", ",", "disp_long", ")", "[", "1", "]", "[", ":", ",", ":", ",", "pad_h", ":", ",", "pad_w", ":", "]", "\n", "\n", "# Write binary depth results", "\n", "", "seg_img", "=", "output", "[", "0", ",", "0", "]", "[", "None", ",", ":", ",", ":", "]", ".", "clone", "(", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "seg_img", "=", "np", ".", "transpose", "(", "seg_img", "*", "255.0", ",", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "cv2", ".", "imwrite", "(", "\n", "os", ".", "path", ".", "join", "(", "out_dir", ",", "\"%s_%s_seg_confidence_%d.png\"", "%", "(", "base_name", ",", "args", ".", "arch", ",", "disp_val", ")", ")", ",", "seg_img", "\n", ")", "\n", "\n", "segs", ".", "append", "(", "output", "[", "0", ",", "0", "]", "[", "None", ",", ":", ",", ":", "]", ".", "clone", "(", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "# Generate quantized depth results", "\n", "", "segs", "=", "np", ".", "concatenate", "(", "segs", ",", "axis", "=", "0", ")", "\n", "segs", "=", "np", ".", "insert", "(", "segs", ",", "0", ",", "np", ".", "ones", "(", "(", "1", ",", "h", ",", "w", ")", ",", "dtype", "=", "np", ".", "float32", ")", ",", "axis", "=", "0", ")", "\n", "segs", "=", "np", ".", "append", "(", "segs", ",", "np", ".", "zeros", "(", "(", "1", ",", "h", ",", "w", ")", ",", "dtype", "=", "np", ".", "float32", ")", ",", "axis", "=", "0", ")", "\n", "\n", "segs", "=", "1.0", "-", "segs", "\n", "\n", "# Get the pdf values for each segmented region", "\n", "pdf_method", "=", "segs", "[", "1", ":", ",", ":", ",", ":", "]", "-", "segs", "[", ":", "-", "1", ",", ":", ",", ":", "]", "\n", "\n", "# Get the labels", "\n", "labels_method", "=", "np", ".", "argmax", "(", "pdf_method", ",", "axis", "=", "0", ")", ".", "astype", "(", "np", ".", "int", ")", "\n", "disp_map", "=", "labels_method", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "disp_vals", "=", "args", ".", "disp_vals", "\n", "disp_vals", ".", "insert", "(", "0", ",", "0", ")", "\n", "disp_vals", ".", "append", "(", "args", ".", "bi3dnet_max_disparity", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "disp_vals", ")", "-", "1", ")", ":", "\n", "        ", "min_disp", "=", "disp_vals", "[", "i", "]", "\n", "max_disp", "=", "disp_vals", "[", "i", "+", "1", "]", "\n", "mid_disp", "=", "0.5", "*", "(", "min_disp", "+", "max_disp", ")", "\n", "disp_map", "[", "labels_method", "==", "i", "]", "=", "mid_disp", "\n", "\n", "", "disp_vals_str_list", "=", "[", "\"%d\"", "%", "disp_val", "for", "disp_val", "in", "disp_vals", "]", "\n", "disp_vals_str", "=", "\"-\"", ".", "join", "(", "disp_vals_str_list", ")", "\n", "\n", "img_disp", "=", "np", ".", "clip", "(", "disp_map", ",", "0", ",", "args", ".", "bi3dnet_max_disparity", ")", "\n", "img_disp", "=", "img_disp", "/", "args", ".", "bi3dnet_max_disparity", "\n", "img_disp", "=", "(", "disp2rgb", "(", "img_disp", ")", "*", "255.0", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n", "cv2", ".", "imwrite", "(", "\n", "os", ".", "path", ".", "join", "(", "out_dir", ",", "\"%s_%s_quant_depth_%s.png\"", "%", "(", "base_name", ",", "args", ".", "arch", ",", "disp_vals_str", ")", ")", ",", "img_disp", "\n", ")", "\n", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.src.util.disp2rgb": [[13, 55], ["disp.flatten", "numpy.array", "numpy.cumsum", "numpy.minimum", "numpy.reciprocal", "numpy.append", "numpy.multiply", "numpy.minimum", "numpy.reshape().astype", "numpy.sum", "numpy.array", "numpy.maximum", "numpy.reshape", "numpy.repeat", "numpy.repeat", "numpy.multiply", "numpy.multiply", "numpy.repeat", "numpy.repeat"], "function", ["None"], ["def", "disp2rgb", "(", "disp", ")", ":", "\n", "    ", "H", "=", "disp", ".", "shape", "[", "0", "]", "\n", "W", "=", "disp", ".", "shape", "[", "1", "]", "\n", "\n", "I", "=", "disp", ".", "flatten", "(", ")", "\n", "\n", "map", "=", "np", ".", "array", "(", "\n", "[", "\n", "[", "0", ",", "0", ",", "0", ",", "114", "]", ",", "\n", "[", "0", ",", "0", ",", "1", ",", "185", "]", ",", "\n", "[", "1", ",", "0", ",", "0", ",", "114", "]", ",", "\n", "[", "1", ",", "0", ",", "1", ",", "174", "]", ",", "\n", "[", "0", ",", "1", ",", "0", ",", "114", "]", ",", "\n", "[", "0", ",", "1", ",", "1", ",", "185", "]", ",", "\n", "[", "1", ",", "1", ",", "0", ",", "114", "]", ",", "\n", "[", "1", ",", "1", ",", "1", ",", "0", "]", ",", "\n", "]", "\n", ")", "\n", "bins", "=", "map", "[", ":", "-", "1", ",", "3", "]", "\n", "cbins", "=", "np", ".", "cumsum", "(", "bins", ")", "\n", "bins", "=", "bins", "/", "cbins", "[", "-", "1", "]", "\n", "cbins", "=", "cbins", "[", ":", "-", "1", "]", "/", "cbins", "[", "-", "1", "]", "\n", "\n", "ind", "=", "np", ".", "minimum", "(", "\n", "np", ".", "sum", "(", "np", ".", "repeat", "(", "I", "[", "None", ",", ":", "]", ",", "6", ",", "axis", "=", "0", ")", ">", "np", ".", "repeat", "(", "cbins", "[", ":", ",", "None", "]", ",", "I", ".", "shape", "[", "0", "]", ",", "axis", "=", "1", ")", ",", "axis", "=", "0", ")", ",", "6", "\n", ")", "\n", "bins", "=", "np", ".", "reciprocal", "(", "bins", ")", "\n", "cbins", "=", "np", ".", "append", "(", "np", ".", "array", "(", "[", "[", "0", "]", "]", ")", ",", "cbins", "[", ":", ",", "None", "]", ")", "\n", "\n", "I", "=", "np", ".", "multiply", "(", "I", "-", "cbins", "[", "ind", "]", ",", "bins", "[", "ind", "]", ")", "\n", "I", "=", "np", ".", "minimum", "(", "\n", "np", ".", "maximum", "(", "\n", "np", ".", "multiply", "(", "map", "[", "ind", ",", "0", ":", "3", "]", ",", "np", ".", "repeat", "(", "1", "-", "I", "[", ":", ",", "None", "]", ",", "3", ",", "axis", "=", "1", ")", ")", "\n", "+", "np", ".", "multiply", "(", "map", "[", "ind", "+", "1", ",", "0", ":", "3", "]", ",", "np", ".", "repeat", "(", "I", "[", ":", ",", "None", "]", ",", "3", ",", "axis", "=", "1", ")", ")", ",", "\n", "0", ",", "\n", ")", ",", "\n", "1", ",", "\n", ")", "\n", "\n", "I", "=", "np", ".", "reshape", "(", "I", ",", "[", "H", ",", "W", ",", "3", "]", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "return", "I", "\n", "\n"]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.src.util.str2bool": [[57, 66], ["isinstance", "bool_input_string.lower", "bool_input_string.lower", "NameError"], "function", ["None"], ["", "def", "str2bool", "(", "bool_input_string", ")", ":", "\n", "    ", "if", "isinstance", "(", "bool_input_string", ",", "bool", ")", ":", "\n", "        ", "return", "bool_input_string", "\n", "", "if", "bool_input_string", ".", "lower", "(", ")", "in", "(", "\"true\"", ")", ":", "\n", "        ", "return", "True", "\n", "", "elif", "bool_input_string", ".", "lower", "(", ")", "in", "(", "\"false\"", ")", ":", "\n", "        ", "return", "False", "\n", "", "else", ":", "\n", "        ", "raise", "NameError", "(", "\"Please provide boolean type.\"", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.Bi3DNet.Bi3DNetContinuousDepth2D.__init__": [[55, 74], ["torch.Module.__init__", "int"], "methods", ["home.repos.pwc.inspect_result.NVlabs_Bi3D.models.RefineNet3D.SegRegNet3D.__init__"], ["    ", "def", "__init__", "(", "self", ",", "options", ",", "featnet_arch", ",", "segnet_arch", ",", "refinenet_arch", "=", "None", ",", "max_disparity", "=", "192", ")", ":", "\n", "\n", "        ", "super", "(", "Bi3DNetContinuousDepth2D", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "max_disparity", "=", "max_disparity", "\n", "self", ".", "max_disparity_seg", "=", "int", "(", "self", ".", "max_disparity", "/", "3", ")", "\n", "self", ".", "is_disps_per_example", "=", "False", "\n", "self", ".", "is_save_memory", "=", "False", "\n", "\n", "self", ".", "is_refine", "=", "True", "\n", "if", "refinenet_arch", "==", "None", ":", "\n", "            ", "self", ".", "is_refine", "=", "False", "\n", "\n", "", "self", ".", "featnet", "=", "FeatNet", ".", "__dict__", "[", "featnet_arch", "]", "(", "options", ",", "data", "=", "None", ")", "\n", "self", ".", "segnet", "=", "SegNet", ".", "__dict__", "[", "segnet_arch", "]", "(", "options", ",", "data", "=", "None", ")", "\n", "if", "self", ".", "is_refine", ":", "\n", "            ", "self", ".", "refinenet", "=", "RefineNet", ".", "__dict__", "[", "refinenet_arch", "]", "(", "options", ",", "data", "=", "None", ")", "\n", "\n", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.Bi3DNet.Bi3DNetContinuousDepth2D.forward": [[75, 123], ["Bi3DNet.Bi3DNetContinuousDepth2D.featnet", "Bi3DNet.Bi3DNetContinuousDepth2D.featnet", "Bi3DNet.compute_cost_volume", "psv.view.view.view", "seg_raw_low_res.view.view.view", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "Bi3DNet.Bi3DNetContinuousDepth2D.segnet", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "Bi3DNet.Bi3DNetContinuousDepth2D.refinenet", "img_left.size", "img_left.size"], "methods", ["home.repos.pwc.inspect_result.NVlabs_Bi3D.models.Bi3DNet.compute_cost_volume"], ["", "def", "forward", "(", "self", ",", "img_left", ",", "img_right", ",", "disp_ids", ")", ":", "\n", "\n", "        ", "batch_size", "=", "img_left", ".", "shape", "[", "0", "]", "\n", "psv_size", "=", "disp_ids", ".", "shape", "[", "1", "]", "\n", "\n", "if", "psv_size", "==", "1", ":", "\n", "            ", "self", ".", "is_disps_per_example", "=", "True", "\n", "", "else", ":", "\n", "            ", "self", ".", "is_disps_per_example", "=", "False", "\n", "\n", "# Feature Extraction", "\n", "", "features_left", "=", "self", ".", "featnet", "(", "img_left", ")", "\n", "features_right", "=", "self", ".", "featnet", "(", "img_right", ")", "\n", "feature_size", "=", "features_left", ".", "shape", "[", "1", "]", "\n", "H", "=", "features_left", ".", "shape", "[", "2", "]", "\n", "W", "=", "features_left", ".", "shape", "[", "3", "]", "\n", "\n", "# Cost Volume Generation", "\n", "psv", "=", "compute_cost_volume", "(", "\n", "features_left", ",", "features_right", ",", "disp_ids", ",", "self", ".", "max_disparity_seg", ",", "self", ".", "is_disps_per_example", "\n", ")", "\n", "\n", "psv", "=", "psv", ".", "view", "(", "batch_size", "*", "psv_size", ",", "feature_size", "*", "2", ",", "H", ",", "W", "+", "self", ".", "max_disparity_seg", ")", "\n", "\n", "# Segmentation Network", "\n", "seg_raw_low_res", "=", "self", ".", "segnet", "(", "psv", ")", "[", ":", ",", ":", ",", ":", ",", ":", "W", "]", "\n", "seg_raw_low_res", "=", "seg_raw_low_res", ".", "view", "(", "batch_size", ",", "1", ",", "psv_size", ",", "H", ",", "W", ")", "\n", "\n", "# Upsampling", "\n", "seg_prob_low_res_up", "=", "torch", ".", "sigmoid", "(", "\n", "F", ".", "interpolate", "(", "\n", "seg_raw_low_res", ",", "\n", "size", "=", "[", "psv_size", "*", "3", ",", "img_left", ".", "size", "(", ")", "[", "-", "2", "]", ",", "img_left", ".", "size", "(", ")", "[", "-", "1", "]", "]", ",", "\n", "mode", "=", "\"trilinear\"", ",", "\n", "align_corners", "=", "False", ",", "\n", ")", "\n", ")", "\n", "seg_prob_low_res_up", "=", "seg_prob_low_res_up", "[", ":", ",", "0", ",", "1", ":", "-", "1", ",", ":", ",", ":", "]", "\n", "\n", "# Projection", "\n", "disparity_normalized", "=", "torch", ".", "mean", "(", "(", "seg_prob_low_res_up", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "\n", "# Refinement", "\n", "if", "self", ".", "is_refine", ":", "\n", "            ", "refine_net_input", "=", "torch", ".", "cat", "(", "(", "disparity_normalized", ",", "img_left", ")", ",", "dim", "=", "1", ")", "\n", "disparity_normalized", "=", "self", ".", "refinenet", "(", "refine_net_input", ")", "\n", "\n", "", "return", "seg_prob_low_res_up", ",", "disparity_normalized", "\n", "\n"]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.Bi3DNet.Bi3DNetContinuousDepth3D.__init__": [[152, 180], ["torch.Module.__init__", "int"], "methods", ["home.repos.pwc.inspect_result.NVlabs_Bi3D.models.RefineNet3D.SegRegNet3D.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "options", ",", "\n", "featnet_arch", ",", "\n", "segnet_arch", ",", "\n", "refinenet_arch", "=", "None", ",", "\n", "refinenet3d_arch", "=", "None", ",", "\n", "max_disparity", "=", "192", ",", "\n", ")", ":", "\n", "\n", "        ", "super", "(", "Bi3DNetContinuousDepth3D", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "max_disparity", "=", "max_disparity", "\n", "self", ".", "max_disparity_seg", "=", "int", "(", "self", ".", "max_disparity", "/", "3", ")", "\n", "self", ".", "is_disps_per_example", "=", "False", "\n", "self", ".", "is_save_memory", "=", "False", "\n", "\n", "self", ".", "is_refine", "=", "True", "\n", "if", "refinenet_arch", "==", "None", ":", "\n", "            ", "self", ".", "is_refine", "=", "False", "\n", "\n", "", "self", ".", "featnet", "=", "FeatNet", ".", "__dict__", "[", "featnet_arch", "]", "(", "options", ",", "data", "=", "None", ")", "\n", "self", ".", "segnet", "=", "SegNet", ".", "__dict__", "[", "segnet_arch", "]", "(", "options", ",", "data", "=", "None", ")", "\n", "if", "self", ".", "is_refine", ":", "\n", "            ", "self", ".", "refinenet", "=", "RefineNet", ".", "__dict__", "[", "refinenet_arch", "]", "(", "options", ",", "data", "=", "None", ")", "\n", "self", ".", "refinenet3d", "=", "RefineNet3D", ".", "__dict__", "[", "refinenet3d_arch", "]", "(", "options", ",", "data", "=", "None", ")", "\n", "\n", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.Bi3DNet.Bi3DNetContinuousDepth3D.forward": [[181, 251], ["Bi3DNet.Bi3DNetContinuousDepth3D.featnet", "Bi3DNet.Bi3DNetContinuousDepth3D.featnet", "Bi3DNet.compute_cost_volume", "psv.view.view.view", "seg_raw_low_res.view.view.view", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "Bi3DNet.Bi3DNetContinuousDepth3D.refinenet3d", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "Bi3DNet.Bi3DNetContinuousDepth3D.segnet", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "Bi3DNet.Bi3DNetContinuousDepth3D.refinenet", "img_left.size", "img_left.size", "img_left.size", "img_left.size"], "methods", ["home.repos.pwc.inspect_result.NVlabs_Bi3D.models.Bi3DNet.compute_cost_volume"], ["", "def", "forward", "(", "self", ",", "img_left", ",", "img_right", ",", "disp_ids", ")", ":", "\n", "\n", "        ", "batch_size", "=", "img_left", ".", "shape", "[", "0", "]", "\n", "psv_size", "=", "disp_ids", ".", "shape", "[", "1", "]", "\n", "\n", "if", "psv_size", "==", "1", ":", "\n", "            ", "self", ".", "is_disps_per_example", "=", "True", "\n", "", "else", ":", "\n", "            ", "self", ".", "is_disps_per_example", "=", "False", "\n", "\n", "# Feature Extraction", "\n", "", "features_left", "=", "self", ".", "featnet", "(", "img_left", ")", "\n", "features_right", "=", "self", ".", "featnet", "(", "img_right", ")", "\n", "feature_size", "=", "features_left", ".", "shape", "[", "1", "]", "\n", "H", "=", "features_left", ".", "shape", "[", "2", "]", "\n", "W", "=", "features_left", ".", "shape", "[", "3", "]", "\n", "\n", "# Cost Volume Generation", "\n", "psv", "=", "compute_cost_volume", "(", "\n", "features_left", ",", "features_right", ",", "disp_ids", ",", "self", ".", "max_disparity_seg", ",", "self", ".", "is_disps_per_example", "\n", ")", "\n", "\n", "psv", "=", "psv", ".", "view", "(", "batch_size", "*", "psv_size", ",", "feature_size", "*", "2", ",", "H", ",", "W", "+", "self", ".", "max_disparity_seg", ")", "\n", "\n", "# Segmentation Network", "\n", "seg_raw_low_res", "=", "self", ".", "segnet", "(", "psv", ")", "[", ":", ",", ":", ",", ":", ",", ":", "W", "]", "# cropped to remove excess boundary", "\n", "seg_raw_low_res", "=", "seg_raw_low_res", ".", "view", "(", "batch_size", ",", "1", ",", "psv_size", ",", "H", ",", "W", ")", "\n", "\n", "# Upsampling", "\n", "seg_prob_low_res_up", "=", "torch", ".", "sigmoid", "(", "\n", "F", ".", "interpolate", "(", "\n", "seg_raw_low_res", ",", "\n", "size", "=", "[", "psv_size", "*", "3", ",", "img_left", ".", "size", "(", ")", "[", "-", "2", "]", ",", "img_left", ".", "size", "(", ")", "[", "-", "1", "]", "]", ",", "\n", "mode", "=", "\"trilinear\"", ",", "\n", "align_corners", "=", "False", ",", "\n", ")", "\n", ")", "\n", "\n", "seg_prob_low_res_up", "=", "seg_prob_low_res_up", "[", ":", ",", "0", ",", "1", ":", "-", "1", ",", ":", ",", ":", "]", "\n", "\n", "# Upsampling after 3D Regularization", "\n", "seg_raw_low_res_refined", "=", "seg_raw_low_res", "\n", "seg_raw_low_res_refined", "[", ":", ",", ":", ",", "1", ":", ",", ":", ",", ":", "]", "=", "self", ".", "refinenet3d", "(", "\n", "features_left", ",", "seg_raw_low_res_refined", "[", ":", ",", ":", ",", "1", ":", ",", ":", ",", ":", "]", "\n", ")", "\n", "\n", "seg_prob_low_res_refined_up", "=", "torch", ".", "sigmoid", "(", "\n", "F", ".", "interpolate", "(", "\n", "seg_raw_low_res_refined", ",", "\n", "size", "=", "[", "psv_size", "*", "3", ",", "img_left", ".", "size", "(", ")", "[", "-", "2", "]", ",", "img_left", ".", "size", "(", ")", "[", "-", "1", "]", "]", ",", "\n", "mode", "=", "\"trilinear\"", ",", "\n", "align_corners", "=", "False", ",", "\n", ")", "\n", ")", "\n", "\n", "seg_prob_low_res_refined_up", "=", "seg_prob_low_res_refined_up", "[", ":", ",", "0", ",", "1", ":", "-", "1", ",", ":", ",", ":", "]", "\n", "\n", "# Projection", "\n", "disparity_normalized_noisy", "=", "torch", ".", "mean", "(", "(", "seg_prob_low_res_refined_up", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "\n", "# Refinement", "\n", "if", "self", ".", "is_refine", ":", "\n", "            ", "refine_net_input", "=", "torch", ".", "cat", "(", "(", "disparity_normalized_noisy", ",", "img_left", ")", ",", "dim", "=", "1", ")", "\n", "disparity_normalized", "=", "self", ".", "refinenet", "(", "refine_net_input", ")", "\n", "\n", "", "return", "(", "\n", "seg_prob_low_res_up", ",", "\n", "seg_prob_low_res_refined_up", ",", "\n", "disparity_normalized_noisy", ",", "\n", "disparity_normalized", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.Bi3DNet.Bi3DNetBinaryDepth.__init__": [[282, 310], ["torch.Module.__init__", "int"], "methods", ["home.repos.pwc.inspect_result.NVlabs_Bi3D.models.RefineNet3D.SegRegNet3D.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "options", ",", "\n", "featnet_arch", ",", "\n", "segnet_arch", ",", "\n", "refinenet_arch", "=", "None", ",", "\n", "featnethr_arch", "=", "None", ",", "\n", "max_disparity", "=", "192", ",", "\n", "is_disps_per_example", "=", "False", ",", "\n", ")", ":", "\n", "\n", "        ", "super", "(", "Bi3DNetBinaryDepth", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "max_disparity", "=", "max_disparity", "\n", "self", ".", "max_disparity_seg", "=", "int", "(", "max_disparity", "/", "3", ")", "\n", "self", ".", "is_disps_per_example", "=", "is_disps_per_example", "\n", "\n", "self", ".", "is_refine", "=", "True", "\n", "if", "refinenet_arch", "==", "None", ":", "\n", "            ", "self", ".", "is_refine", "=", "False", "\n", "\n", "", "self", ".", "featnet", "=", "FeatNet", ".", "__dict__", "[", "featnet_arch", "]", "(", "options", ",", "data", "=", "None", ")", "\n", "self", ".", "featnethr", "=", "FeatNet", ".", "__dict__", "[", "featnethr_arch", "]", "(", "options", ",", "data", "=", "None", ")", "\n", "self", ".", "segnet", "=", "SegNet", ".", "__dict__", "[", "segnet_arch", "]", "(", "options", ",", "data", "=", "None", ")", "\n", "if", "self", ".", "is_refine", ":", "\n", "            ", "self", ".", "refinenet", "=", "RefineNet", ".", "__dict__", "[", "refinenet_arch", "]", "(", "options", ",", "data", "=", "None", ")", "\n", "\n", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.Bi3DNet.Bi3DNetBinaryDepth.forward": [[311, 376], ["Bi3DNet.Bi3DNetBinaryDepth.featnet", "Bi3DNet.compute_cost_volume", "psv.view.view.view", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "seg_prob_low_res.view.view.view", "torch.interpolate", "torch.interpolate", "torch.interpolate", "out.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "Bi3DNet.Bi3DNetBinaryDepth.featnethr", "Bi3DNet.Bi3DNetBinaryDepth.segnet", "torch.interpolate", "torch.interpolate", "torch.interpolate", "features_lefthr[].expand().contiguous", "features_left_expand.view.view.view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "Bi3DNet.Bi3DNetBinaryDepth.refinenet", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "seg_prob_high_res.view.view.view", "out.append", "out.append", "img_left.size", "features_lefthr[].expand", "Bi3DNet.Bi3DNetBinaryDepth.size", "Bi3DNet.Bi3DNetBinaryDepth.size", "Bi3DNet.Bi3DNetBinaryDepth.size", "img_left.size", "img_left.size", "img_left.size"], "methods", ["home.repos.pwc.inspect_result.NVlabs_Bi3D.models.Bi3DNet.compute_cost_volume"], ["", "def", "forward", "(", "self", ",", "img_left", ",", "img_right", ",", "disp_ids", ")", ":", "\n", "\n", "        ", "batch_size", "=", "img_left", ".", "shape", "[", "0", "]", "\n", "psv_size", "=", "disp_ids", ".", "shape", "[", "1", "]", "\n", "\n", "if", "psv_size", "==", "1", ":", "\n", "            ", "self", ".", "is_disps_per_example", "=", "True", "\n", "", "else", ":", "\n", "            ", "self", ".", "is_disps_per_example", "=", "False", "\n", "\n", "# Feature Extraction", "\n", "", "features", "=", "self", ".", "featnet", "(", "torch", ".", "cat", "(", "(", "img_left", ",", "img_right", ")", ",", "dim", "=", "0", ")", ")", "\n", "\n", "features_left", "=", "features", "[", ":", "batch_size", ",", ":", ",", ":", ",", ":", "]", "\n", "features_right", "=", "features", "[", "batch_size", ":", ",", ":", ",", ":", ",", ":", "]", "\n", "\n", "if", "self", ".", "is_refine", ":", "\n", "            ", "features_lefthr", "=", "self", ".", "featnethr", "(", "img_left", ")", "\n", "", "feature_size", "=", "features_left", ".", "shape", "[", "1", "]", "\n", "H", "=", "features_left", ".", "shape", "[", "2", "]", "\n", "W", "=", "features_left", ".", "shape", "[", "3", "]", "\n", "\n", "# Cost Volume Generation", "\n", "psv", "=", "compute_cost_volume", "(", "\n", "features_left", ",", "features_right", ",", "disp_ids", ",", "self", ".", "max_disparity_seg", ",", "self", ".", "is_disps_per_example", "\n", ")", "\n", "\n", "psv", "=", "psv", ".", "view", "(", "batch_size", "*", "psv_size", ",", "feature_size", "*", "2", ",", "H", ",", "W", "+", "self", ".", "max_disparity_seg", ")", "\n", "\n", "# Segmentation Network", "\n", "seg_raw_low_res", "=", "self", ".", "segnet", "(", "psv", ")", "[", ":", ",", ":", ",", ":", ",", ":", "W", "]", "# cropped to remove excess boundary", "\n", "seg_prob_low_res", "=", "torch", ".", "sigmoid", "(", "seg_raw_low_res", ")", "\n", "seg_prob_low_res", "=", "seg_prob_low_res", ".", "view", "(", "batch_size", ",", "psv_size", ",", "H", ",", "W", ")", "\n", "\n", "seg_prob_low_res_up", "=", "F", ".", "interpolate", "(", "\n", "seg_prob_low_res", ",", "size", "=", "img_left", ".", "size", "(", ")", "[", "-", "2", ":", "]", ",", "mode", "=", "\"bilinear\"", ",", "align_corners", "=", "False", "\n", ")", "\n", "out", "=", "[", "]", "\n", "out", ".", "append", "(", "seg_prob_low_res_up", ")", "\n", "\n", "# Refinement", "\n", "if", "self", ".", "is_refine", ":", "\n", "            ", "seg_raw_high_res", "=", "F", ".", "interpolate", "(", "\n", "seg_raw_low_res", ",", "size", "=", "img_left", ".", "size", "(", ")", "[", "-", "2", ":", "]", ",", "mode", "=", "\"bilinear\"", ",", "align_corners", "=", "False", "\n", ")", "\n", "# Refine Net", "\n", "features_left_expand", "=", "(", "\n", "features_lefthr", "[", ":", ",", "None", ",", ":", ",", ":", ",", ":", "]", ".", "expand", "(", "-", "1", ",", "psv_size", ",", "-", "1", ",", "-", "1", ",", "-", "1", ")", ".", "contiguous", "(", ")", "\n", ")", "\n", "features_left_expand", "=", "features_left_expand", ".", "view", "(", "\n", "-", "1", ",", "features_lefthr", ".", "size", "(", ")", "[", "1", "]", ",", "features_lefthr", ".", "size", "(", ")", "[", "2", "]", ",", "features_lefthr", ".", "size", "(", ")", "[", "3", "]", "\n", ")", "\n", "refine_net_input", "=", "torch", ".", "cat", "(", "(", "seg_raw_high_res", ",", "features_left_expand", ")", ",", "dim", "=", "1", ")", "\n", "\n", "seg_raw_high_res", "=", "self", ".", "refinenet", "(", "refine_net_input", ")", "\n", "\n", "seg_prob_high_res", "=", "torch", ".", "sigmoid", "(", "seg_raw_high_res", ")", "\n", "seg_prob_high_res", "=", "seg_prob_high_res", ".", "view", "(", "\n", "batch_size", ",", "psv_size", ",", "img_left", ".", "size", "(", ")", "[", "-", "2", "]", ",", "img_left", ".", "size", "(", ")", "[", "-", "1", "]", "\n", ")", "\n", "out", ".", "append", "(", "seg_prob_high_res", ")", "\n", "", "else", ":", "\n", "            ", "out", ".", "append", "(", "seg_prob_low_res_up", ")", "\n", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.Bi3DNet.compute_cost_volume": [[24, 47], ["torch.autograd.Variable().cuda", "range", "psv.contiguous.contiguous", "range", "psv.contiguous.contiguous", "torch.autograd.Variable", "features_left.new_zeros"], "function", ["None"], ["def", "compute_cost_volume", "(", "features_left", ",", "features_right", ",", "disp_ids", ",", "max_disp", ",", "is_disps_per_example", ")", ":", "\n", "\n", "    ", "batch_size", "=", "features_left", ".", "shape", "[", "0", "]", "\n", "feature_size", "=", "features_left", ".", "shape", "[", "1", "]", "\n", "H", "=", "features_left", ".", "shape", "[", "2", "]", "\n", "W", "=", "features_left", ".", "shape", "[", "3", "]", "\n", "\n", "psv_size", "=", "disp_ids", ".", "shape", "[", "1", "]", "\n", "\n", "psv", "=", "Variable", "(", "features_left", ".", "new_zeros", "(", "batch_size", ",", "psv_size", ",", "feature_size", "*", "2", ",", "H", ",", "W", "+", "max_disp", ")", ")", ".", "cuda", "(", ")", "\n", "\n", "if", "is_disps_per_example", ":", "\n", "        ", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "psv", "[", "i", ",", "0", ",", ":", "feature_size", ",", ":", ",", "0", ":", "W", "]", "=", "features_left", "[", "i", "]", "\n", "psv", "[", "i", ",", "0", ",", "feature_size", ":", ",", ":", ",", "disp_ids", "[", "i", ",", "0", "]", ":", "W", "+", "disp_ids", "[", "i", ",", "0", "]", "]", "=", "features_right", "[", "i", "]", "\n", "", "psv", "=", "psv", ".", "contiguous", "(", ")", "\n", "", "else", ":", "\n", "        ", "for", "i", "in", "range", "(", "psv_size", ")", ":", "\n", "            ", "psv", "[", ":", ",", "i", ",", ":", "feature_size", ",", ":", ",", "0", ":", "W", "]", "=", "features_left", "\n", "psv", "[", ":", ",", "i", ",", "feature_size", ":", ",", ":", ",", "disp_ids", "[", "0", ",", "i", "]", ":", "W", "+", "disp_ids", "[", "0", ",", "i", "]", "]", "=", "features_right", "\n", "", "psv", "=", "psv", ".", "contiguous", "(", ")", "\n", "\n", "", "return", "psv", "\n", "\n"]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.Bi3DNet.bi3dnet_continuous_depth_2D": [[125, 144], ["print", "Bi3DNet.Bi3DNetContinuousDepth2D", "Bi3DNetContinuousDepth2D.load_state_dict", "print"], "function", ["None"], ["", "", "def", "bi3dnet_continuous_depth_2D", "(", "options", ",", "data", "=", "None", ")", ":", "\n", "\n", "    ", "print", "(", "\"==> USING Bi3DNetContinuousDepth2D\"", ")", "\n", "for", "key", "in", "options", ":", "\n", "        ", "if", "\"bi3dnet\"", "in", "key", ":", "\n", "            ", "print", "(", "\"{} : {}\"", ".", "format", "(", "key", ",", "options", "[", "key", "]", ")", ")", "\n", "\n", "", "", "model", "=", "Bi3DNetContinuousDepth2D", "(", "\n", "options", ",", "\n", "featnet_arch", "=", "options", "[", "\"bi3dnet_featnet_arch\"", "]", ",", "\n", "segnet_arch", "=", "options", "[", "\"bi3dnet_segnet_arch\"", "]", ",", "\n", "refinenet_arch", "=", "options", "[", "\"bi3dnet_refinenet_arch\"", "]", ",", "\n", "max_disparity", "=", "options", "[", "\"bi3dnet_max_disparity\"", "]", ",", "\n", ")", "\n", "\n", "if", "data", "is", "not", "None", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "data", "[", "\"state_dict\"", "]", ")", "\n", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.Bi3DNet.bi3dnet_continuous_depth_3D": [[254, 274], ["print", "Bi3DNet.Bi3DNetContinuousDepth3D", "Bi3DNetContinuousDepth3D.load_state_dict", "print"], "function", ["None"], ["", "", "def", "bi3dnet_continuous_depth_3D", "(", "options", ",", "data", "=", "None", ")", ":", "\n", "\n", "    ", "print", "(", "\"==> USING Bi3DNetContinuousDepth3D\"", ")", "\n", "for", "key", "in", "options", ":", "\n", "        ", "if", "\"bi3dnet\"", "in", "key", ":", "\n", "            ", "print", "(", "\"{} : {}\"", ".", "format", "(", "key", ",", "options", "[", "key", "]", ")", ")", "\n", "\n", "", "", "model", "=", "Bi3DNetContinuousDepth3D", "(", "\n", "options", ",", "\n", "featnet_arch", "=", "options", "[", "\"bi3dnet_featnet_arch\"", "]", ",", "\n", "segnet_arch", "=", "options", "[", "\"bi3dnet_segnet_arch\"", "]", ",", "\n", "refinenet_arch", "=", "options", "[", "\"bi3dnet_refinenet_arch\"", "]", ",", "\n", "refinenet3d_arch", "=", "options", "[", "\"bi3dnet_regnet_arch\"", "]", ",", "\n", "max_disparity", "=", "options", "[", "\"bi3dnet_max_disparity\"", "]", ",", "\n", ")", "\n", "\n", "if", "data", "is", "not", "None", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "data", "[", "\"state_dict\"", "]", ")", "\n", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.Bi3DNet.bi3dnet_binary_depth": [[378, 399], ["print", "Bi3DNet.Bi3DNetBinaryDepth", "Bi3DNetBinaryDepth.load_state_dict", "print"], "function", ["None"], ["", "", "def", "bi3dnet_binary_depth", "(", "options", ",", "data", "=", "None", ")", ":", "\n", "\n", "    ", "print", "(", "\"==> USING Bi3DNetBinaryDepth\"", ")", "\n", "for", "key", "in", "options", ":", "\n", "        ", "if", "\"bi3dnet\"", "in", "key", ":", "\n", "            ", "print", "(", "\"{} : {}\"", ".", "format", "(", "key", ",", "options", "[", "key", "]", ")", ")", "\n", "\n", "", "", "model", "=", "Bi3DNetBinaryDepth", "(", "\n", "options", ",", "\n", "featnet_arch", "=", "options", "[", "\"bi3dnet_featnet_arch\"", "]", ",", "\n", "segnet_arch", "=", "options", "[", "\"bi3dnet_segnet_arch\"", "]", ",", "\n", "refinenet_arch", "=", "options", "[", "\"bi3dnet_refinenet_arch\"", "]", ",", "\n", "featnethr_arch", "=", "options", "[", "\"bi3dnet_featnethr_arch\"", "]", ",", "\n", "max_disparity", "=", "options", "[", "\"bi3dnet_max_disparity\"", "]", ",", "\n", "is_disps_per_example", "=", "options", "[", "\"bi3dnet_disps_per_example_true\"", "]", ",", "\n", ")", "\n", "\n", "if", "data", "is", "not", "None", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "data", "[", "\"state_dict\"", "]", ")", "\n", "\n", "", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.FeatExtractNet.FeatExtractNetHR.__init__": [[29, 56], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "FeatExtractNet.FeatExtractNetHR.modules", "models.PSMNet.conv2d_relu", "models.PSMNet.conv2d_relu", "torch.Conv2d", "torch.Conv2d", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.NVlabs_Bi3D.models.RefineNet3D.SegRegNet3D.__init__", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.PSMNet.conv2d_relu", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.PSMNet.conv2d_relu"], ["    ", "def", "__init__", "(", "self", ",", "out_planes", "=", "16", ")", ":", "\n", "\n", "        ", "super", "(", "FeatExtractNetHR", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "\n", "conv2d_relu", "(", "3", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "pad", "=", "1", ",", "dilation", "=", "1", ")", ",", "\n", "conv2d_relu", "(", "out_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "pad", "=", "1", ",", "dilation", "=", "1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "out_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.0", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Conv3d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "kernel_size", "[", "2", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.0", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm3d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n", "", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.FeatExtractNet.FeatExtractNetHR.forward": [[57, 61], ["FeatExtractNet.FeatExtractNetHR.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "\n", "        ", "output", "=", "self", ".", "conv1", "(", "input", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.FeatExtractNet.featextractnethr": [[63, 76], ["print", "FeatExtractNet.FeatExtractNetHR", "FeatExtractNetHR.load_state_dict", "print"], "function", ["None"], ["", "", "def", "featextractnethr", "(", "options", ",", "data", "=", "None", ")", ":", "\n", "\n", "    ", "print", "(", "\"==> USING FeatExtractNetHR\"", ")", "\n", "for", "key", "in", "options", ":", "\n", "        ", "if", "\"featextractnethr\"", "in", "key", ":", "\n", "            ", "print", "(", "\"{} : {}\"", ".", "format", "(", "key", ",", "options", "[", "key", "]", ")", ")", "\n", "\n", "", "", "model", "=", "FeatExtractNetHR", "(", "out_planes", "=", "options", "[", "\"featextractnethr_out_planes\"", "]", ")", "\n", "\n", "if", "data", "is", "not", "None", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "data", "[", "\"state_dict\"", "]", ")", "\n", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.FeatExtractNet.featextractnetspp": [[85, 98], ["print", "models.PSMNet.FeatExtractNetSPP", "models.PSMNet.FeatExtractNetSPP.load_state_dict", "print"], "function", ["None"], ["def", "featextractnetspp", "(", "options", ",", "data", "=", "None", ")", ":", "\n", "\n", "    ", "print", "(", "\"==> USING FeatExtractNetSPP\"", ")", "\n", "for", "key", "in", "options", ":", "\n", "        ", "if", "\"feat\"", "in", "key", ":", "\n", "            ", "print", "(", "\"{} : {}\"", ".", "format", "(", "key", ",", "options", "[", "key", "]", ")", ")", "\n", "\n", "", "", "model", "=", "FeatExtractNetSPP", "(", ")", "\n", "\n", "if", "data", "is", "not", "None", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "data", "[", "\"state_dict\"", "]", ")", "\n", "\n", "", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.GCNet.feature3d.__init__": [[51, 81], ["torch.Module.__init__", "GCNet.conv3d_relu", "GCNet.conv3d_relu", "GCNet.conv3d_relu", "GCNet.conv3d_relu", "GCNet.conv3d_relu", "GCNet.conv3d_relu", "GCNet.conv3d_relu", "GCNet.conv3d_relu", "GCNet.conv3d_relu", "GCNet.conv3d_relu", "GCNet.conv3d_relu", "GCNet.conv3d_relu", "GCNet.conv3d_relu", "GCNet.conv3d_relu", "GCNet.deconv3d_relu", "GCNet.deconv3d_relu", "GCNet.deconv3d_relu", "GCNet.deconv3d_relu", "torch.Conv3d", "torch.Conv3d"], "methods", ["home.repos.pwc.inspect_result.NVlabs_Bi3D.models.RefineNet3D.SegRegNet3D.__init__", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.GCNet.conv3d_relu", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.GCNet.conv3d_relu", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.GCNet.conv3d_relu", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.GCNet.conv3d_relu", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.GCNet.conv3d_relu", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.GCNet.conv3d_relu", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.GCNet.conv3d_relu", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.GCNet.conv3d_relu", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.GCNet.conv3d_relu", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.GCNet.conv3d_relu", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.GCNet.conv3d_relu", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.GCNet.conv3d_relu", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.GCNet.conv3d_relu", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.GCNet.conv3d_relu", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.GCNet.deconv3d_relu", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.GCNet.deconv3d_relu", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.GCNet.deconv3d_relu", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.GCNet.deconv3d_relu"], ["    ", "def", "__init__", "(", "self", ",", "num_F", ")", ":", "\n", "\n", "        ", "super", "(", "feature3d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "F", "=", "num_F", "\n", "\n", "self", ".", "l19", "=", "conv3d_relu", "(", "self", ".", "F", "+", "32", ",", "self", ".", "F", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "l20", "=", "conv3d_relu", "(", "self", ".", "F", ",", "self", ".", "F", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "\n", "self", ".", "l21", "=", "conv3d_relu", "(", "self", ".", "F", "+", "32", ",", "self", ".", "F", "*", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "self", ".", "l22", "=", "conv3d_relu", "(", "self", ".", "F", "*", "2", ",", "self", ".", "F", "*", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "l23", "=", "conv3d_relu", "(", "self", ".", "F", "*", "2", ",", "self", ".", "F", "*", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "\n", "self", ".", "l24", "=", "conv3d_relu", "(", "self", ".", "F", "*", "2", ",", "self", ".", "F", "*", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "self", ".", "l25", "=", "conv3d_relu", "(", "self", ".", "F", "*", "2", ",", "self", ".", "F", "*", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "l26", "=", "conv3d_relu", "(", "self", ".", "F", "*", "2", ",", "self", ".", "F", "*", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "\n", "self", ".", "l27", "=", "conv3d_relu", "(", "self", ".", "F", "*", "2", ",", "self", ".", "F", "*", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "self", ".", "l28", "=", "conv3d_relu", "(", "self", ".", "F", "*", "2", ",", "self", ".", "F", "*", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "l29", "=", "conv3d_relu", "(", "self", ".", "F", "*", "2", ",", "self", ".", "F", "*", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "\n", "self", ".", "l30", "=", "conv3d_relu", "(", "self", ".", "F", "*", "2", ",", "self", ".", "F", "*", "4", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "self", ".", "l31", "=", "conv3d_relu", "(", "self", ".", "F", "*", "4", ",", "self", ".", "F", "*", "4", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "l32", "=", "conv3d_relu", "(", "self", ".", "F", "*", "4", ",", "self", ".", "F", "*", "4", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "\n", "self", ".", "l33", "=", "deconv3d_relu", "(", "self", ".", "F", "*", "4", ",", "self", ".", "F", "*", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "self", ".", "l34", "=", "deconv3d_relu", "(", "self", ".", "F", "*", "2", ",", "self", ".", "F", "*", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "self", ".", "l35", "=", "deconv3d_relu", "(", "self", ".", "F", "*", "2", ",", "self", ".", "F", "*", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "self", ".", "l36", "=", "deconv3d_relu", "(", "self", ".", "F", "*", "2", ",", "self", ".", "F", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "\n", "self", ".", "l37", "=", "nn", ".", "Conv3d", "(", "self", ".", "F", ",", "1", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.GCNet.feature3d.forward": [[82, 109], ["GCNet.feature3d.l21", "GCNet.feature3d.l24", "GCNet.feature3d.l27", "GCNet.feature3d.l30", "GCNet.feature3d.l31", "GCNet.feature3d.l32", "GCNet.feature3d.l29", "GCNet.feature3d.l26", "GCNet.feature3d.l23", "GCNet.feature3d.l20", "GCNet.feature3d.l37", "GCNet.feature3d.l28", "GCNet.feature3d.l33", "GCNet.feature3d.l25", "GCNet.feature3d.l34", "GCNet.feature3d.l22", "GCNet.feature3d.l35", "GCNet.feature3d.l19", "GCNet.feature3d.l36"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "x18", "=", "x", "\n", "x21", "=", "self", ".", "l21", "(", "x18", ")", "\n", "x24", "=", "self", ".", "l24", "(", "x21", ")", "\n", "x27", "=", "self", ".", "l27", "(", "x24", ")", "\n", "x30", "=", "self", ".", "l30", "(", "x27", ")", "\n", "x31", "=", "self", ".", "l31", "(", "x30", ")", "\n", "x32", "=", "self", ".", "l32", "(", "x31", ")", "\n", "\n", "x29", "=", "self", ".", "l29", "(", "self", ".", "l28", "(", "x27", ")", ")", "\n", "x33", "=", "self", ".", "l33", "(", "x32", ")", "+", "x29", "\n", "\n", "x26", "=", "self", ".", "l26", "(", "self", ".", "l25", "(", "x24", ")", ")", "\n", "x34", "=", "self", ".", "l34", "(", "x33", ")", "+", "x26", "\n", "\n", "x23", "=", "self", ".", "l23", "(", "self", ".", "l22", "(", "x21", ")", ")", "\n", "x35", "=", "self", ".", "l35", "(", "x34", ")", "+", "x23", "\n", "\n", "x20", "=", "self", ".", "l20", "(", "self", ".", "l19", "(", "x18", ")", ")", "\n", "x36", "=", "self", ".", "l36", "(", "x35", ")", "+", "x20", "\n", "\n", "x37", "=", "self", ".", "l37", "(", "x36", ")", "\n", "\n", "conf_volume_wo_sig", "=", "x37", "\n", "\n", "return", "conf_volume_wo_sig", "\n", "", "", ""]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.GCNet.conv3d_relu": [[24, 29], ["torch.ReLU", "torch.Sequential", "torch.Conv3d"], "function", ["None"], ["def", "conv3d_relu", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "activefun", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ":", "\n", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", ",", "stride", ",", "padding", "=", "(", "kernel_size", "-", "1", ")", "//", "2", ",", "bias", "=", "True", ")", ",", "\n", "activefun", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.GCNet.deconv3d_relu": [[32, 42], ["torch.ReLU", "torch.Sequential", "torch.ConvTranspose3d"], "function", ["None"], ["", "def", "deconv3d_relu", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "activefun", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ":", "\n", "\n", "    ", "assert", "stride", ">", "1", "\n", "p", "=", "(", "kernel_size", "-", "1", ")", "//", "2", "\n", "op", "=", "stride", "-", "(", "kernel_size", "-", "2", "*", "p", ")", "\n", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ConvTranspose3d", "(", "\n", "in_planes", ",", "out_planes", ",", "kernel_size", ",", "stride", ",", "padding", "=", "p", ",", "output_padding", "=", "op", ",", "bias", "=", "True", "\n", ")", ",", "\n", "activefun", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.DispRefine2D.BasicBlock.__init__": [[42, 51], ["torch.Module.__init__", "models.PSMNet.conv2d_lrelu", "models.PSMNet.conv2d"], "methods", ["home.repos.pwc.inspect_result.NVlabs_Bi3D.models.RefineNet3D.SegRegNet3D.__init__", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.PSMNet.conv2d_lrelu", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.PSMNet.conv2d"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ",", "pad", ",", "dilation", ")", ":", "\n", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "conv2d_lrelu", "(", "inplanes", ",", "planes", ",", "3", ",", "stride", ",", "pad", ",", "dilation", ")", "\n", "self", ".", "conv2", "=", "conv2d", "(", "planes", ",", "planes", ",", "3", ",", "1", ",", "pad", ",", "dilation", ")", "\n", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.DispRefine2D.BasicBlock.forward": [[52, 63], ["DispRefine2D.BasicBlock.conv1", "DispRefine2D.BasicBlock.conv2", "DispRefine2D.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "x", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "x", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.DispRefine2D.DispRefineNet.__init__": [[66, 102], ["torch.Module.__init__", "models.PSMNet.conv2d_lrelu", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "DispRefine2D.DispRefineNet.modules", "DispRefine2D.DispRefineNet.residual_astrous_blocks.append", "isinstance", "DispRefine2D.BasicBlock", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.NVlabs_Bi3D.models.RefineNet3D.SegRegNet3D.__init__", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.PSMNet.conv2d_lrelu"], ["    ", "def", "__init__", "(", "self", ",", "out_planes", "=", "32", ")", ":", "\n", "\n", "        ", "super", "(", "DispRefineNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "out_planes", "=", "out_planes", "\n", "\n", "self", ".", "conv2d_feature", "=", "conv2d_lrelu", "(", "\n", "in_planes", "=", "4", ",", "out_planes", "=", "self", ".", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "pad", "=", "1", ",", "dilation", "=", "1", "\n", ")", "\n", "\n", "self", ".", "residual_astrous_blocks", "=", "nn", ".", "ModuleList", "(", ")", "\n", "astrous_list", "=", "[", "1", ",", "2", ",", "4", ",", "8", ",", "1", ",", "1", "]", "\n", "for", "di", "in", "astrous_list", ":", "\n", "            ", "self", ".", "residual_astrous_blocks", ".", "append", "(", "\n", "BasicBlock", "(", "self", ".", "out_planes", ",", "self", ".", "out_planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "pad", "=", "1", ",", "dilation", "=", "di", ")", "\n", ")", "\n", "\n", "", "self", ".", "conv2d_out", "=", "nn", ".", "Conv2d", "(", "self", ".", "out_planes", ",", "1", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.0", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Conv3d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "kernel_size", "[", "2", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.0", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm3d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n", "", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.DispRefine2D.DispRefineNet.forward": [[103, 115], ["DispRefine2D.DispRefineNet.conv2d_feature", "DispRefine2D.DispRefineNet.conv2d_out", "astrous_block"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "disp", "=", "x", "[", ":", ",", "0", ",", ":", ",", ":", "]", "[", ":", ",", "None", ",", ":", ",", ":", "]", "\n", "output", "=", "self", ".", "conv2d_feature", "(", "x", ")", "\n", "\n", "for", "astrous_block", "in", "self", ".", "residual_astrous_blocks", ":", "\n", "            ", "output", "=", "astrous_block", "(", "output", ")", "\n", "\n", "", "output", "=", "self", ".", "conv2d_out", "(", "output", ")", "# residual disparity", "\n", "output", "=", "output", "+", "disp", "# final disparity", "\n", "\n", "return", "output", "\n", "", "", ""]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.SegNet2D.SegNet2D.__init__": [[46, 107], ["torch.Module.__init__", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "SegNet2D.conv", "SegNet2D.conv", "SegNet2D.conv", "SegNet2D.conv", "SegNet2D.conv", "SegNet2D.conv", "SegNet2D.conv", "SegNet2D.conv", "SegNet2D.conv", "SegNet2D.conv", "SegNet2D.deconv", "SegNet2D.conv", "SegNet2D.deconv", "SegNet2D.conv", "SegNet2D.deconv", "SegNet2D.conv", "SegNet2D.deconv", "SegNet2D.conv", "SegNet2D.deconv", "SegNet2D.conv", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "SegNet2D.SegNet2D.modules", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.NVlabs_Bi3D.models.RefineNet3D.SegRegNet3D.__init__", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.SegNet2D.conv", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.SegNet2D.conv", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.SegNet2D.conv", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.SegNet2D.conv", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.SegNet2D.conv", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.SegNet2D.conv", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.SegNet2D.conv", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.SegNet2D.conv", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.SegNet2D.conv", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.SegNet2D.conv", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.SegNet2D.deconv", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.SegNet2D.conv", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.SegNet2D.deconv", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.SegNet2D.conv", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.SegNet2D.deconv", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.SegNet2D.conv", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.SegNet2D.deconv", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.SegNet2D.conv", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.SegNet2D.deconv", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.SegNet2D.conv"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "\n", "        ", "super", "(", "SegNet2D", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "activefun", "=", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", "\n", "\n", "cps", "=", "[", "64", ",", "128", ",", "256", ",", "512", ",", "512", ",", "512", "]", "\n", "dps", "=", "[", "512", ",", "512", ",", "256", ",", "128", ",", "64", "]", "\n", "\n", "# Encoder", "\n", "self", ".", "conv1", "=", "conv", "(", "cps", "[", "0", "]", ",", "cps", "[", "1", "]", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "activefun", "=", "self", ".", "activefun", ")", "\n", "self", ".", "conv1_1", "=", "conv", "(", "cps", "[", "1", "]", ",", "cps", "[", "1", "]", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "activefun", "=", "self", ".", "activefun", ")", "\n", "\n", "self", ".", "conv2", "=", "conv", "(", "cps", "[", "1", "]", ",", "cps", "[", "2", "]", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "activefun", "=", "self", ".", "activefun", ")", "\n", "self", ".", "conv2_1", "=", "conv", "(", "cps", "[", "2", "]", ",", "cps", "[", "2", "]", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "activefun", "=", "self", ".", "activefun", ")", "\n", "\n", "self", ".", "conv3", "=", "conv", "(", "cps", "[", "2", "]", ",", "cps", "[", "3", "]", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "activefun", "=", "self", ".", "activefun", ")", "\n", "self", ".", "conv3_1", "=", "conv", "(", "cps", "[", "3", "]", ",", "cps", "[", "3", "]", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "activefun", "=", "self", ".", "activefun", ")", "\n", "\n", "self", ".", "conv4", "=", "conv", "(", "cps", "[", "3", "]", ",", "cps", "[", "4", "]", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "activefun", "=", "self", ".", "activefun", ")", "\n", "self", ".", "conv4_1", "=", "conv", "(", "cps", "[", "4", "]", ",", "cps", "[", "4", "]", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "activefun", "=", "self", ".", "activefun", ")", "\n", "\n", "self", ".", "conv5", "=", "conv", "(", "cps", "[", "4", "]", ",", "cps", "[", "5", "]", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "activefun", "=", "self", ".", "activefun", ")", "\n", "self", ".", "conv5_1", "=", "conv", "(", "cps", "[", "5", "]", ",", "cps", "[", "5", "]", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "activefun", "=", "self", ".", "activefun", ")", "\n", "\n", "# Decoder", "\n", "self", ".", "deconv5", "=", "deconv", "(", "cps", "[", "5", "]", ",", "dps", "[", "0", "]", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "activefun", "=", "self", ".", "activefun", ")", "\n", "self", ".", "deconv5_1", "=", "conv", "(", "dps", "[", "0", "]", "+", "cps", "[", "4", "]", ",", "dps", "[", "0", "]", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "activefun", "=", "self", ".", "activefun", ")", "\n", "\n", "self", ".", "deconv4", "=", "deconv", "(", "cps", "[", "4", "]", ",", "dps", "[", "1", "]", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "activefun", "=", "self", ".", "activefun", ")", "\n", "self", ".", "deconv4_1", "=", "conv", "(", "dps", "[", "1", "]", "+", "cps", "[", "3", "]", ",", "dps", "[", "1", "]", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "activefun", "=", "self", ".", "activefun", ")", "\n", "\n", "self", ".", "deconv3", "=", "deconv", "(", "dps", "[", "1", "]", ",", "dps", "[", "2", "]", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "activefun", "=", "self", ".", "activefun", ")", "\n", "self", ".", "deconv3_1", "=", "conv", "(", "dps", "[", "2", "]", "+", "cps", "[", "2", "]", ",", "dps", "[", "2", "]", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "activefun", "=", "self", ".", "activefun", ")", "\n", "\n", "self", ".", "deconv2", "=", "deconv", "(", "dps", "[", "2", "]", ",", "dps", "[", "3", "]", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "activefun", "=", "self", ".", "activefun", ")", "\n", "self", ".", "deconv2_1", "=", "conv", "(", "dps", "[", "3", "]", "+", "cps", "[", "1", "]", ",", "dps", "[", "3", "]", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "activefun", "=", "self", ".", "activefun", ")", "\n", "\n", "self", ".", "deconv1", "=", "deconv", "(", "dps", "[", "3", "]", ",", "dps", "[", "4", "]", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "activefun", "=", "self", ".", "activefun", ")", "\n", "self", ".", "deconv1_1", "=", "conv", "(", "dps", "[", "4", "]", "+", "cps", "[", "0", "]", ",", "dps", "[", "4", "]", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "activefun", "=", "self", ".", "activefun", ")", "\n", "\n", "self", ".", "last_conv", "=", "nn", ".", "Conv2d", "(", "dps", "[", "4", "]", ",", "1", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", "\n", "\n", "# Init", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.0", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Conv3d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "kernel_size", "[", "2", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.0", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm3d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n", "", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.SegNet2D.SegNet2D.forward": [[108, 135], ["SegNet2D.SegNet2D.conv1_1", "SegNet2D.SegNet2D.conv2_1", "SegNet2D.SegNet2D.conv3_1", "SegNet2D.SegNet2D.conv4_1", "SegNet2D.SegNet2D.conv5_1", "SegNet2D.SegNet2D.deconv5", "SegNet2D.SegNet2D.deconv5_1", "SegNet2D.SegNet2D.deconv4", "SegNet2D.SegNet2D.deconv4_1", "SegNet2D.SegNet2D.deconv3", "SegNet2D.SegNet2D.deconv3_1", "SegNet2D.SegNet2D.deconv2", "SegNet2D.SegNet2D.deconv2_1", "SegNet2D.SegNet2D.deconv1", "SegNet2D.SegNet2D.deconv1_1", "SegNet2D.SegNet2D.last_conv", "SegNet2D.SegNet2D.conv1", "SegNet2D.SegNet2D.conv2", "SegNet2D.SegNet2D.conv3", "SegNet2D.SegNet2D.conv4", "SegNet2D.SegNet2D.conv5", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "out_conv0", "=", "x", "\n", "out_conv1", "=", "self", ".", "conv1_1", "(", "self", ".", "conv1", "(", "out_conv0", ")", ")", "\n", "out_conv2", "=", "self", ".", "conv2_1", "(", "self", ".", "conv2", "(", "out_conv1", ")", ")", "\n", "out_conv3", "=", "self", ".", "conv3_1", "(", "self", ".", "conv3", "(", "out_conv2", ")", ")", "\n", "out_conv4", "=", "self", ".", "conv4_1", "(", "self", ".", "conv4", "(", "out_conv3", ")", ")", "\n", "out_conv5", "=", "self", ".", "conv5_1", "(", "self", ".", "conv5", "(", "out_conv4", ")", ")", "\n", "\n", "out_deconv5", "=", "self", ".", "deconv5", "(", "out_conv5", ")", "\n", "out_deconv5_1", "=", "self", ".", "deconv5_1", "(", "torch", ".", "cat", "(", "(", "out_conv4", ",", "out_deconv5", ")", ",", "1", ")", ")", "\n", "\n", "out_deconv4", "=", "self", ".", "deconv4", "(", "out_deconv5_1", ")", "\n", "out_deconv4_1", "=", "self", ".", "deconv4_1", "(", "torch", ".", "cat", "(", "(", "out_conv3", ",", "out_deconv4", ")", ",", "1", ")", ")", "\n", "\n", "out_deconv3", "=", "self", ".", "deconv3", "(", "out_deconv4_1", ")", "\n", "out_deconv3_1", "=", "self", ".", "deconv3_1", "(", "torch", ".", "cat", "(", "(", "out_conv2", ",", "out_deconv3", ")", ",", "1", ")", ")", "\n", "\n", "out_deconv2", "=", "self", ".", "deconv2", "(", "out_deconv3_1", ")", "\n", "out_deconv2_1", "=", "self", ".", "deconv2_1", "(", "torch", ".", "cat", "(", "(", "out_conv1", ",", "out_deconv2", ")", ",", "1", ")", ")", "\n", "\n", "out_deconv1", "=", "self", ".", "deconv1", "(", "out_deconv2_1", ")", "\n", "out_deconv1_1", "=", "self", ".", "deconv1_1", "(", "torch", ".", "cat", "(", "(", "out_conv0", ",", "out_deconv1", ")", ",", "1", ")", ")", "\n", "\n", "raw_seg", "=", "self", ".", "last_conv", "(", "out_deconv1_1", ")", "\n", "\n", "return", "raw_seg", "\n", "\n"]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.SegNet2D.conv": [[20, 32], ["torch.LeakyReLU", "torch.Sequential", "torch.Conv2d"], "function", ["None"], ["def", "conv", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "activefun", "=", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", ")", ":", "\n", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "\n", "in_planes", ",", "\n", "out_planes", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "(", "kernel_size", "-", "1", ")", "//", "2", ",", "\n", "bias", "=", "True", ",", "\n", ")", ",", "\n", "activefun", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.SegNet2D.deconv": [[35, 42], ["torch.LeakyReLU", "torch.Sequential", "torch.ConvTranspose2d"], "function", ["None"], ["", "def", "deconv", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "activefun", "=", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", ")", ":", "\n", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ConvTranspose2d", "(", "\n", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "True", "\n", ")", ",", "\n", "activefun", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.SegNet2D.segnet2d": [[137, 150], ["print", "SegNet2D.SegNet2D", "SegNet2D.load_state_dict", "print"], "function", ["None"], ["", "", "def", "segnet2d", "(", "options", ",", "data", "=", "None", ")", ":", "\n", "\n", "    ", "print", "(", "\"==> USING SegNet2D\"", ")", "\n", "for", "key", "in", "options", ":", "\n", "        ", "if", "\"segnet2d\"", "in", "key", ":", "\n", "            ", "print", "(", "\"{} : {}\"", ".", "format", "(", "key", ",", "options", "[", "key", "]", ")", ")", "\n", "\n", "", "", "model", "=", "SegNet2D", "(", ")", "\n", "\n", "if", "data", "is", "not", "None", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "data", "[", "\"state_dict\"", "]", ")", "\n", "\n", "", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.PSMNet.BasicBlock.__init__": [[85, 94], ["torch.Module.__init__", "PSMNet.conv2d_relu", "PSMNet.conv2d"], "methods", ["home.repos.pwc.inspect_result.NVlabs_Bi3D.models.RefineNet3D.SegRegNet3D.__init__", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.PSMNet.conv2d_relu", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.PSMNet.conv2d"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ",", "pad", ",", "dilation", ")", ":", "\n", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "conv2d_relu", "(", "inplanes", ",", "planes", ",", "3", ",", "stride", ",", "pad", ",", "dilation", ")", "\n", "self", ".", "conv2", "=", "conv2d", "(", "planes", ",", "planes", ",", "3", ",", "1", ",", "pad", ",", "dilation", ")", "\n", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.PSMNet.BasicBlock.forward": [[95, 106], ["PSMNet.BasicBlock.conv1", "PSMNet.BasicBlock.conv2", "PSMNet.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "x", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "x", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.PSMNet.FeatExtractNetSPP.__init__": [[109, 150], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "PSMNet.FeatExtractNetSPP._make_layer", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "PSMNet.FeatExtractNetSPP.modules", "PSMNet.conv2d_relu", "PSMNet.conv2d_relu", "PSMNet.conv2d_relu", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "PSMNet.conv2d_relu", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "PSMNet.conv2d_relu", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "PSMNet.conv2d_relu", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "PSMNet.conv2d_relu", "PSMNet.conv2d_relu", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.NVlabs_Bi3D.models.RefineNet3D.SegRegNet3D.__init__", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.PSMNet.FeatExtractNetSPP._make_layer", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.PSMNet.conv2d_relu", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.PSMNet.conv2d_relu", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.PSMNet.conv2d_relu", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.PSMNet.conv2d_relu", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.PSMNet.conv2d_relu", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.PSMNet.conv2d_relu", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.PSMNet.conv2d_relu", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.PSMNet.conv2d_relu"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "\n", "        ", "super", "(", "FeatExtractNetSPP", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "align_corners", "=", "False", "\n", "self", ".", "inplanes", "=", "32", "\n", "\n", "self", ".", "firstconv", "=", "nn", ".", "Sequential", "(", "\n", "conv2d_relu", "(", "3", ",", "32", ",", "3", ",", "3", ",", "1", ",", "1", ")", ",", "conv2d_relu", "(", "32", ",", "32", ",", "3", ",", "1", ",", "1", ",", "1", ")", ",", "conv2d_relu", "(", "32", ",", "32", ",", "3", ",", "1", ",", "1", ",", "1", ")", "\n", ")", "\n", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "BasicBlock", ",", "32", ",", "2", ",", "1", ",", "1", ",", "2", ")", "\n", "\n", "self", ".", "branch1", "=", "nn", ".", "Sequential", "(", "nn", ".", "AvgPool2d", "(", "(", "64", ",", "64", ")", ",", "stride", "=", "(", "64", ",", "64", ")", ")", ",", "conv2d_relu", "(", "32", ",", "32", ",", "1", ",", "1", ",", "0", ",", "1", ")", ")", "\n", "\n", "self", ".", "branch2", "=", "nn", ".", "Sequential", "(", "nn", ".", "AvgPool2d", "(", "(", "32", ",", "32", ")", ",", "stride", "=", "(", "32", ",", "32", ")", ")", ",", "conv2d_relu", "(", "32", ",", "32", ",", "1", ",", "1", ",", "0", ",", "1", ")", ")", "\n", "\n", "self", ".", "branch3", "=", "nn", ".", "Sequential", "(", "nn", ".", "AvgPool2d", "(", "(", "16", ",", "16", ")", ",", "stride", "=", "(", "16", ",", "16", ")", ")", ",", "conv2d_relu", "(", "32", ",", "32", ",", "1", ",", "1", ",", "0", ",", "1", ")", ")", "\n", "\n", "self", ".", "branch4", "=", "nn", ".", "Sequential", "(", "nn", ".", "AvgPool2d", "(", "(", "8", ",", "8", ")", ",", "stride", "=", "(", "8", ",", "8", ")", ")", ",", "conv2d_relu", "(", "32", ",", "32", ",", "1", ",", "1", ",", "0", ",", "1", ")", ")", "\n", "\n", "self", ".", "lastconv", "=", "nn", ".", "Sequential", "(", "\n", "conv2d_relu", "(", "160", ",", "64", ",", "3", ",", "1", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "32", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.0", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Conv3d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "kernel_size", "[", "2", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.0", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm3d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.PSMNet.FeatExtractNetSPP._make_layer": [[151, 166], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "block"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", ",", "pad", ",", "dilation", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ",", "pad", ",", "dilation", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "1", ",", "None", ",", "pad", ",", "dilation", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.PSMNet.FeatExtractNetSPP.forward": [[167, 211], ["PSMNet.FeatExtractNetSPP.firstconv", "PSMNet.FeatExtractNetSPP.layer1", "PSMNet.FeatExtractNetSPP.branch1", "torch.interpolate", "torch.interpolate", "torch.interpolate", "PSMNet.FeatExtractNetSPP.branch2", "torch.interpolate", "torch.interpolate", "torch.interpolate", "PSMNet.FeatExtractNetSPP.branch3", "torch.interpolate", "torch.interpolate", "torch.interpolate", "PSMNet.FeatExtractNetSPP.branch4", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "PSMNet.FeatExtractNetSPP.lastconv", "PSMNet.FeatExtractNetSPP.size", "PSMNet.FeatExtractNetSPP.size", "PSMNet.FeatExtractNetSPP.size", "PSMNet.FeatExtractNetSPP.size", "PSMNet.FeatExtractNetSPP.size", "PSMNet.FeatExtractNetSPP.size", "PSMNet.FeatExtractNetSPP.size", "PSMNet.FeatExtractNetSPP.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "\n", "        ", "output0", "=", "self", ".", "firstconv", "(", "input", ")", "\n", "output1", "=", "self", ".", "layer1", "(", "output0", ")", "\n", "\n", "output_branch1", "=", "self", ".", "branch1", "(", "output1", ")", "\n", "output_branch1", "=", "F", ".", "interpolate", "(", "\n", "output_branch1", ",", "\n", "(", "output1", ".", "size", "(", ")", "[", "2", "]", ",", "output1", ".", "size", "(", ")", "[", "3", "]", ")", ",", "\n", "mode", "=", "\"bilinear\"", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ",", "\n", ")", "\n", "\n", "output_branch2", "=", "self", ".", "branch2", "(", "output1", ")", "\n", "output_branch2", "=", "F", ".", "interpolate", "(", "\n", "output_branch2", ",", "\n", "(", "output1", ".", "size", "(", ")", "[", "2", "]", ",", "output1", ".", "size", "(", ")", "[", "3", "]", ")", ",", "\n", "mode", "=", "\"bilinear\"", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ",", "\n", ")", "\n", "\n", "output_branch3", "=", "self", ".", "branch3", "(", "output1", ")", "\n", "output_branch3", "=", "F", ".", "interpolate", "(", "\n", "output_branch3", ",", "\n", "(", "output1", ".", "size", "(", ")", "[", "2", "]", ",", "output1", ".", "size", "(", ")", "[", "3", "]", ")", ",", "\n", "mode", "=", "\"bilinear\"", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ",", "\n", ")", "\n", "\n", "output_branch4", "=", "self", ".", "branch4", "(", "output1", ")", "\n", "output_branch4", "=", "F", ".", "interpolate", "(", "\n", "output_branch4", ",", "\n", "(", "output1", ".", "size", "(", ")", "[", "2", "]", ",", "output1", ".", "size", "(", ")", "[", "3", "]", ")", ",", "\n", "mode", "=", "\"bilinear\"", ",", "\n", "align_corners", "=", "self", ".", "align_corners", ",", "\n", ")", "\n", "\n", "output_feature", "=", "torch", ".", "cat", "(", "\n", "(", "output1", ",", "output_branch4", ",", "output_branch3", ",", "output_branch2", ",", "output_branch1", ")", ",", "1", "\n", ")", "\n", "\n", "output_feature", "=", "self", ".", "lastconv", "(", "output_feature", ")", "\n", "\n", "return", "output_feature", "\n", "", "", ""]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.PSMNet.conv2d": [[34, 45], ["torch.Sequential", "torch.Conv2d"], "function", ["None"], ["def", "conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", ",", "stride", ",", "pad", ",", "dilation", ")", ":", "\n", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "\n", "in_planes", ",", "\n", "out_planes", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "dilation", "if", "dilation", ">", "1", "else", "pad", ",", "\n", "dilation", "=", "dilation", ",", "\n", "bias", "=", "True", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.PSMNet.conv2d_relu": [[49, 62], ["torch.Sequential", "torch.Conv2d", "torch.ReLU"], "function", ["None"], ["", "def", "conv2d_relu", "(", "in_planes", ",", "out_planes", ",", "kernel_size", ",", "stride", ",", "pad", ",", "dilation", ")", ":", "\n", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "\n", "in_planes", ",", "\n", "out_planes", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "dilation", "if", "dilation", ">", "1", "else", "pad", ",", "\n", "dilation", "=", "dilation", ",", "\n", "bias", "=", "True", ",", "\n", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.PSMNet.conv2d_lrelu": [[65, 78], ["torch.Sequential", "torch.Conv2d", "torch.LeakyReLU"], "function", ["None"], ["", "def", "conv2d_lrelu", "(", "in_planes", ",", "out_planes", ",", "kernel_size", ",", "stride", ",", "pad", ",", "dilation", "=", "1", ")", ":", "\n", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "\n", "in_planes", ",", "\n", "out_planes", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "dilation", "if", "dilation", ">", "1", "else", "pad", ",", "\n", "dilation", "=", "dilation", ",", "\n", "bias", "=", "True", ",", "\n", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.RefineNet2D.SegRefineNet.__init__": [[56, 79], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "RefineNet2D.SegRefineNet.modules", "models.PSMNet.conv2d_lrelu", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.NVlabs_Bi3D.models.RefineNet3D.SegRegNet3D.__init__", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.PSMNet.conv2d_lrelu"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", "=", "17", ",", "out_planes", "=", "8", ")", ":", "\n", "\n", "        ", "super", "(", "SegRefineNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "conv2d_lrelu", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "pad", "=", "1", ")", ")", "\n", "\n", "self", ".", "classif1", "=", "nn", ".", "Conv2d", "(", "out_planes", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.0", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Conv3d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "kernel_size", "[", "2", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.0", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm3d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.RefineNet2D.SegRefineNet.forward": [[80, 86], ["RefineNet2D.SegRefineNet.conv1", "RefineNet2D.SegRefineNet.classif1"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "\n", "        ", "output0", "=", "self", ".", "conv1", "(", "input", ")", "\n", "output", "=", "self", ".", "classif1", "(", "output0", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.RefineNet2D.disprefinenet": [[33, 46], ["print", "models.DispRefine2D.DispRefineNet", "models.DispRefine2D.DispRefineNet.load_state_dict", "print"], "function", ["None"], ["def", "disprefinenet", "(", "options", ",", "data", "=", "None", ")", ":", "\n", "\n", "    ", "print", "(", "\"==> USING DispRefineNet\"", ")", "\n", "for", "key", "in", "options", ":", "\n", "        ", "if", "\"disprefinenet\"", "in", "key", ":", "\n", "            ", "print", "(", "\"{} : {}\"", ".", "format", "(", "key", ",", "options", "[", "key", "]", ")", ")", "\n", "\n", "", "", "model", "=", "DispRefineNet", "(", "out_planes", "=", "options", "[", "\"disprefinenet_out_planes\"", "]", ")", "\n", "\n", "if", "data", "is", "not", "None", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "data", "[", "\"state_dict\"", "]", ")", "\n", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.RefineNet2D.segrefinenet": [[88, 103], ["print", "RefineNet2D.SegRefineNet", "SegRefineNet.load_state_dict", "print"], "function", ["None"], ["", "", "def", "segrefinenet", "(", "options", ",", "data", "=", "None", ")", ":", "\n", "\n", "    ", "print", "(", "\"==> USING SegRefineNet\"", ")", "\n", "for", "key", "in", "options", ":", "\n", "        ", "if", "\"segrefinenet\"", "in", "key", ":", "\n", "            ", "print", "(", "\"{} : {}\"", ".", "format", "(", "key", ",", "options", "[", "key", "]", ")", ")", "\n", "\n", "", "", "model", "=", "SegRefineNet", "(", "\n", "in_planes", "=", "options", "[", "\"segrefinenet_in_planes\"", "]", ",", "out_planes", "=", "options", "[", "\"segrefinenet_out_planes\"", "]", "\n", ")", "\n", "\n", "if", "data", "is", "not", "None", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "data", "[", "\"state_dict\"", "]", ")", "\n", "\n", "", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.RefineNet3D.SegRegNet3D.__init__": [[46, 54], ["torch.Module.__init__", "models.GCNet.conv3d_relu", "models.GCNet.feature3d", "RefineNet3D.net_init"], "methods", ["home.repos.pwc.inspect_result.NVlabs_Bi3D.models.RefineNet3D.SegRegNet3D.__init__", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.GCNet.conv3d_relu", "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.RefineNet3D.net_init"], ["    ", "def", "__init__", "(", "self", ",", "F", "=", "16", ")", ":", "\n", "\n", "        ", "super", "(", "SegRegNet3D", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conf_preprocess", "=", "conv3d_relu", "(", "1", ",", "F", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "layer3d", "=", "feature3d", "(", "F", ")", "\n", "\n", "net_init", "(", "self", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.RefineNet3D.SegRegNet3D.forward": [[55, 63], ["fL[].repeat", "RefineNet3D.SegRegNet3D.conf_preprocess", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "RefineNet3D.SegRegNet3D.layer3d", "int"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "fL", ",", "conf_volume", ")", ":", "\n", "\n", "        ", "fL_stack", "=", "fL", "[", ":", ",", ":", ",", "None", ",", ":", ",", ":", "]", ".", "repeat", "(", "1", ",", "1", ",", "int", "(", "conf_volume", ".", "shape", "[", "2", "]", ")", ",", "1", ",", "1", ")", "\n", "conf_vol_preprocess", "=", "self", ".", "conf_preprocess", "(", "conf_volume", ")", "\n", "input_volume", "=", "torch", ".", "cat", "(", "(", "fL_stack", ",", "conf_vol_preprocess", ")", ",", "dim", "=", "1", ")", "\n", "oL", "=", "self", ".", "layer3d", "(", "input_volume", ")", "\n", "\n", "return", "oL", "\n", "\n"]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.RefineNet3D.net_init": [[20, 43], ["net.modules", "isinstance", "fanin_init", "isinstance", "m.weight.data.size", "m.weight.data.normal_", "isinstance", "numpy.sqrt", "m.weight.data.normal_", "isinstance", "numpy.sqrt", "m.weight.data.normal_", "isinstance", "numpy.sqrt", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "m.weight.data.fill_", "m.bias.data.zero_"], "function", ["None"], ["def", "net_init", "(", "net", ")", ":", "\n", "\n", "    ", "for", "m", "in", "net", ".", "modules", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "            ", "m", ".", "weight", ".", "data", "=", "fanin_init", "(", "m", ".", "weight", ".", "data", ".", "size", "(", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Conv3d", ")", ":", "\n", "            ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "kernel_size", "[", "2", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "np", ".", "sqrt", "(", "2.0", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "            ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "np", ".", "sqrt", "(", "2.0", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Conv1d", ")", ":", "\n", "            ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "np", ".", "sqrt", "(", "2.0", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm3d", ")", ":", "\n", "            ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "            ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm1d", ")", ":", "\n", "            ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NVlabs_Bi3D.models.RefineNet3D.segregnet3d": [[65, 77], ["print", "RefineNet3D.SegRegNet3D", "SegRegNet3D.load_state_dict", "print"], "function", ["None"], ["", "", "def", "segregnet3d", "(", "options", ",", "data", "=", "None", ")", ":", "\n", "\n", "    ", "print", "(", "\"==> USING SegRegNet3D\"", ")", "\n", "for", "key", "in", "options", ":", "\n", "        ", "if", "\"regnet\"", "in", "key", ":", "\n", "            ", "print", "(", "\"{} : {}\"", ".", "format", "(", "key", ",", "options", "[", "key", "]", ")", ")", "\n", "\n", "", "", "model", "=", "SegRegNet3D", "(", "F", "=", "options", "[", "\"regnet_out_planes\"", "]", ")", "\n", "if", "data", "is", "not", "None", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "data", "[", "\"state_dict\"", "]", ")", "\n", "\n", "", "return", "model", "\n", "", ""]]}