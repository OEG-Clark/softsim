{"home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.InChannelWider": [[7, 25], ["weight.size", "torch.Parameter", "hasattr", "torch.randint", "torch.randint", "torch.randint", "torch.cat", "torch.cat", "torch.cat", "hasattr", "id", "weight[].clone"], "function", ["None"], ["def", "InChannelWider", "(", "module", ",", "new_channels", ",", "index", "=", "None", ")", ":", "\n", "    ", "weight", "=", "module", ".", "weight", "\n", "in_channels", "=", "weight", ".", "size", "(", "1", ")", "\n", "\n", "if", "index", "is", "None", ":", "\n", "        ", "index", "=", "torch", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "in_channels", ",", "\n", "size", "=", "(", "new_channels", "-", "in_channels", ",", ")", ")", "\n", "", "module", ".", "weight", "=", "nn", ".", "Parameter", "(", "\n", "torch", ".", "cat", "(", "[", "weight", ",", "weight", "[", ":", ",", "index", ",", ":", ",", ":", "]", ".", "clone", "(", ")", "]", ",", "dim", "=", "1", ")", ",", "requires_grad", "=", "True", ")", "\n", "\n", "module", ".", "in_channels", "=", "new_channels", "\n", "module", ".", "weight", ".", "in_index", "=", "index", "\n", "module", ".", "weight", ".", "t", "=", "'conv'", "\n", "if", "hasattr", "(", "weight", ",", "'out_index'", ")", ":", "\n", "        ", "module", ".", "weight", ".", "out_index", "=", "weight", ".", "out_index", "\n", "", "module", ".", "weight", ".", "raw_id", "=", "weight", ".", "raw_id", "if", "hasattr", "(", "\n", "weight", ",", "'raw_id'", ")", "else", "id", "(", "weight", ")", "\n", "return", "module", ",", "index", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.OutChannelWider": [[28, 46], ["weight.size", "torch.Parameter", "hasattr", "torch.randint", "torch.randint", "torch.randint", "torch.cat", "torch.cat", "torch.cat", "hasattr", "id", "weight[].clone"], "function", ["None"], ["", "def", "OutChannelWider", "(", "module", ",", "new_channels", ",", "index", "=", "None", ")", ":", "\n", "    ", "weight", "=", "module", ".", "weight", "\n", "out_channels", "=", "weight", ".", "size", "(", "0", ")", "\n", "\n", "if", "index", "is", "None", ":", "\n", "        ", "index", "=", "torch", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "out_channels", ",", "\n", "size", "=", "(", "new_channels", "-", "out_channels", ",", ")", ")", "\n", "", "module", ".", "weight", "=", "nn", ".", "Parameter", "(", "\n", "torch", ".", "cat", "(", "[", "weight", ",", "weight", "[", "index", ",", ":", ",", ":", ",", ":", "]", ".", "clone", "(", ")", "]", ",", "dim", "=", "0", ")", ",", "requires_grad", "=", "True", ")", "\n", "\n", "module", ".", "out_channels", "=", "new_channels", "\n", "module", ".", "weight", ".", "out_index", "=", "index", "\n", "module", ".", "weight", ".", "t", "=", "'conv'", "\n", "if", "hasattr", "(", "weight", ",", "'in_index'", ")", ":", "\n", "        ", "module", ".", "weight", ".", "in_index", "=", "weight", ".", "in_index", "\n", "", "module", ".", "weight", ".", "raw_id", "=", "weight", ".", "raw_id", "if", "hasattr", "(", "\n", "weight", ",", "'raw_id'", ")", "else", "id", "(", "weight", ")", "\n", "return", "module", ",", "index", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.BNWider": [[48, 77], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.randint", "torch.randint", "torch.randint", "torch.Parameter", "torch.Parameter", "running_mean[].clone", "running_var[].clone", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "hasattr", "id", "hasattr", "id", "weight[].clone", "bias[].clone"], "function", ["None"], ["", "def", "BNWider", "(", "module", ",", "new_features", ",", "index", "=", "None", ")", ":", "\n", "    ", "running_mean", "=", "module", ".", "running_mean", "\n", "running_var", "=", "module", ".", "running_var", "\n", "if", "module", ".", "affine", ":", "\n", "        ", "weight", "=", "module", ".", "weight", "\n", "bias", "=", "module", ".", "bias", "\n", "", "num_features", "=", "module", ".", "num_features", "\n", "\n", "if", "index", "is", "None", ":", "\n", "        ", "index", "=", "torch", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "num_features", ",", "\n", "size", "=", "(", "new_features", "-", "num_features", ",", ")", ")", "\n", "", "module", ".", "running_mean", "=", "torch", ".", "cat", "(", "[", "running_mean", ",", "running_mean", "[", "index", "]", ".", "clone", "(", ")", "]", ")", "\n", "module", ".", "running_var", "=", "torch", ".", "cat", "(", "[", "running_var", ",", "running_var", "[", "index", "]", ".", "clone", "(", ")", "]", ")", "\n", "if", "module", ".", "affine", ":", "\n", "        ", "module", ".", "weight", "=", "nn", ".", "Parameter", "(", "\n", "torch", ".", "cat", "(", "[", "weight", ",", "weight", "[", "index", "]", ".", "clone", "(", ")", "]", ",", "dim", "=", "0", ")", ",", "requires_grad", "=", "True", ")", "\n", "module", ".", "bias", "=", "nn", ".", "Parameter", "(", "\n", "torch", ".", "cat", "(", "[", "bias", ",", "bias", "[", "index", "]", ".", "clone", "(", ")", "]", ",", "dim", "=", "0", ")", ",", "requires_grad", "=", "True", ")", "\n", "\n", "module", ".", "weight", ".", "out_index", "=", "index", "\n", "module", ".", "bias", ".", "out_index", "=", "index", "\n", "module", ".", "weight", ".", "t", "=", "'bn'", "\n", "module", ".", "bias", ".", "t", "=", "'bn'", "\n", "module", ".", "weight", ".", "raw_id", "=", "weight", ".", "raw_id", "if", "hasattr", "(", "\n", "weight", ",", "'raw_id'", ")", "else", "id", "(", "weight", ")", "\n", "module", ".", "bias", ".", "raw_id", "=", "bias", ".", "raw_id", "if", "hasattr", "(", "\n", "bias", ",", "'raw_id'", ")", "else", "id", "(", "bias", ")", "\n", "", "module", ".", "num_features", "=", "new_features", "\n", "return", "module", ",", "index", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.configure_optimizer": [[79, 111], ["enumerate", "print", "hasattr", "torch.cat", "torch.cat", "torch.cat", "optimizer_old.state_dict", "hasattr", "hasattr", "hasattr", "hasattr", "[].clone", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "[].clone", "[].clone"], "function", ["None"], ["", "def", "configure_optimizer", "(", "optimizer_old", ",", "optimizer_new", ")", ":", "\n", "    ", "for", "i", ",", "p", "in", "enumerate", "(", "optimizer_new", ".", "param_groups", "[", "0", "]", "[", "'params'", "]", ")", ":", "\n", "        ", "if", "not", "hasattr", "(", "p", ",", "'raw_id'", ")", ":", "\n", "            ", "optimizer_new", ".", "state", "[", "p", "]", "=", "optimizer_old", ".", "state", "[", "p", "]", "\n", "continue", "\n", "", "state_old", "=", "optimizer_old", ".", "state_dict", "(", ")", "[", "'state'", "]", "[", "p", ".", "raw_id", "]", "\n", "state_new", "=", "optimizer_new", ".", "state", "[", "p", "]", "\n", "\n", "state_new", "[", "'momentum_buffer'", "]", "=", "state_old", "[", "'momentum_buffer'", "]", "\n", "if", "p", ".", "t", "==", "'bn'", ":", "\n", "# BN layer", "\n", "            ", "state_new", "[", "'momentum_buffer'", "]", "=", "torch", ".", "cat", "(", "\n", "[", "state_new", "[", "'momentum_buffer'", "]", ",", "state_new", "[", "'momentum_buffer'", "]", "[", "p", ".", "out_index", "]", ".", "clone", "(", ")", "]", ",", "dim", "=", "0", ")", "\n", "# clean to enable multiple call", "\n", "del", "p", ".", "t", ",", "p", ".", "raw_id", ",", "p", ".", "out_index", "\n", "\n", "", "elif", "p", ".", "t", "==", "'conv'", ":", "\n", "# conv layer", "\n", "            ", "if", "hasattr", "(", "p", ",", "'in_index'", ")", ":", "\n", "                ", "state_new", "[", "'momentum_buffer'", "]", "=", "torch", ".", "cat", "(", "\n", "[", "state_new", "[", "'momentum_buffer'", "]", ",", "state_new", "[", "'momentum_buffer'", "]", "[", ":", ",", "p", ".", "in_index", ",", ":", ",", ":", "]", ".", "clone", "(", ")", "]", ",", "dim", "=", "1", ")", "\n", "", "if", "hasattr", "(", "p", ",", "'out_index'", ")", ":", "\n", "                ", "state_new", "[", "'momentum_buffer'", "]", "=", "torch", ".", "cat", "(", "\n", "[", "state_new", "[", "'momentum_buffer'", "]", ",", "state_new", "[", "'momentum_buffer'", "]", "[", "p", ".", "out_index", ",", ":", ",", ":", ",", ":", "]", ".", "clone", "(", ")", "]", ",", "dim", "=", "0", ")", "\n", "# clean to enable multiple call", "\n", "", "del", "p", ".", "t", ",", "p", ".", "raw_id", "\n", "if", "hasattr", "(", "p", ",", "'in_index'", ")", ":", "\n", "                ", "del", "p", ".", "in_index", "\n", "", "if", "hasattr", "(", "p", ",", "'out_index'", ")", ":", "\n", "                ", "del", "p", ".", "out_index", "\n", "", "", "", "print", "(", "'%d momemtum buffers loaded'", "%", "(", "i", "+", "1", ")", ")", "\n", "return", "optimizer_new", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.configure_scheduler": [[113, 117], ["scheduler_new.load_state_dict", "print", "scheduler_old.state_dict"], "function", ["None"], ["", "def", "configure_scheduler", "(", "scheduler_old", ",", "scheduler_new", ")", ":", "\n", "    ", "scheduler_new", ".", "load_state_dict", "(", "scheduler_old", ".", "state_dict", "(", ")", ")", "\n", "print", "(", "'scheduler loaded'", ")", "\n", "return", "scheduler_new", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.architect.Architect.__init__": [[13, 23], ["torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "architect.Architect.model.arch_parameters"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.arch_parameters"], ["  ", "def", "__init__", "(", "self", ",", "model", ",", "args", ")", ":", "\n", "    ", "self", ".", "network_momentum", "=", "args", ".", "momentum", "\n", "self", ".", "network_weight_decay", "=", "args", ".", "weight_decay", "\n", "self", ".", "model", "=", "model", "\n", "if", "args", ".", "reg_type", "==", "'l2'", ":", "\n", "      ", "weight_decay", "=", "args", ".", "reg_scale", "\n", "", "elif", "args", ".", "reg_type", "==", "'kl'", ":", "\n", "      ", "weight_decay", "=", "0", "\n", "", "self", ".", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "model", ".", "arch_parameters", "(", ")", ",", "\n", "lr", "=", "args", ".", "arch_learning_rate", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "weight_decay", "=", "weight_decay", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.architect.Architect._compute_unrolled_model": [[24, 34], ["architect.Architect.model._loss", "architect.Architect._construct_model_from_theta", "architect._concat", "_concat().mul_", "theta.sub", "architect.Architect.model.parameters", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "architect._concat", "architect._concat", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "architect.Architect.model.parameters", "architect.Architect.model.parameters"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network._loss", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.architect.Architect._construct_model_from_theta", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.architect._concat", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.architect._concat", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.architect._concat"], ["", "def", "_compute_unrolled_model", "(", "self", ",", "input", ",", "target", ",", "eta", ",", "network_optimizer", ")", ":", "\n", "    ", "loss", "=", "self", ".", "model", ".", "_loss", "(", "input", ",", "target", ")", "\n", "theta", "=", "_concat", "(", "self", ".", "model", ".", "parameters", "(", ")", ")", ".", "data", "\n", "try", ":", "\n", "      ", "moment", "=", "_concat", "(", "network_optimizer", ".", "state", "[", "v", "]", "[", "'momentum_buffer'", "]", "for", "v", "in", "self", ".", "model", ".", "parameters", "(", ")", ")", ".", "mul_", "(", "self", ".", "network_momentum", ")", "\n", "", "except", ":", "\n", "      ", "moment", "=", "torch", ".", "zeros_like", "(", "theta", ")", "\n", "", "dtheta", "=", "_concat", "(", "torch", ".", "autograd", ".", "grad", "(", "loss", ",", "self", ".", "model", ".", "parameters", "(", ")", ")", ")", ".", "data", "+", "self", ".", "network_weight_decay", "*", "theta", "\n", "unrolled_model", "=", "self", ".", "_construct_model_from_theta", "(", "theta", ".", "sub", "(", "eta", ",", "moment", "+", "dtheta", ")", ")", "\n", "return", "unrolled_model", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.architect.Architect.step": [[35, 42], ["architect.Architect.optimizer.zero_grad", "architect.Architect.optimizer.step", "architect.Architect._backward_step_unrolled", "architect.Architect._backward_step"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.architect.Architect.step", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.architect.Architect._backward_step_unrolled", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.architect.Architect._backward_step"], ["", "def", "step", "(", "self", ",", "input_train", ",", "target_train", ",", "input_valid", ",", "target_valid", ",", "eta", ",", "network_optimizer", ",", "unrolled", ")", ":", "\n", "    ", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "if", "unrolled", ":", "\n", "        ", "self", ".", "_backward_step_unrolled", "(", "input_train", ",", "target_train", ",", "input_valid", ",", "target_valid", ",", "eta", ",", "network_optimizer", ")", "\n", "", "else", ":", "\n", "        ", "self", ".", "_backward_step", "(", "input_valid", ",", "target_valid", ")", "\n", "", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.architect.Architect._backward_step": [[52, 55], ["architect.Architect.model._loss", "architect.Architect.backward"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network._loss"], ["", "def", "_backward_step", "(", "self", ",", "input_valid", ",", "target_valid", ")", ":", "\n", "    ", "loss", "=", "self", ".", "model", ".", "_loss", "(", "input_valid", ",", "target_valid", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.architect.Architect._backward_step_unrolled": [[56, 73], ["architect.Architect._compute_unrolled_model", "architect.Architect._loss", "architect.Architect._loss.backward", "architect.Architect._hessian_vector_product", "zip", "zip", "g.data.sub_", "architect.Architect.model.arch_parameters", "architect.Architect.arch_parameters", "architect.Architect.parameters", "torch.autograd.Variable", "torch.autograd.Variable", "v.grad.data.copy_"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.architect.Architect._compute_unrolled_model", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network._loss", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.architect.Architect._hessian_vector_product", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.arch_parameters", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.arch_parameters"], ["", "def", "_backward_step_unrolled", "(", "self", ",", "input_train", ",", "target_train", ",", "input_valid", ",", "target_valid", ",", "eta", ",", "network_optimizer", ")", ":", "\n", "    ", "unrolled_model", "=", "self", ".", "_compute_unrolled_model", "(", "input_train", ",", "target_train", ",", "eta", ",", "network_optimizer", ")", "\n", "unrolled_loss", "=", "unrolled_model", ".", "_loss", "(", "input_valid", ",", "target_valid", ")", "\n", "\n", "unrolled_loss", ".", "backward", "(", ")", "\n", "dalpha", "=", "[", "v", ".", "grad", "for", "v", "in", "unrolled_model", ".", "arch_parameters", "(", ")", "]", "\n", "vector", "=", "[", "v", ".", "grad", ".", "data", "for", "v", "in", "unrolled_model", ".", "parameters", "(", ")", "]", "\n", "implicit_grads", "=", "self", ".", "_hessian_vector_product", "(", "vector", ",", "input_train", ",", "target_train", ")", "\n", "\n", "for", "g", ",", "ig", "in", "zip", "(", "dalpha", ",", "implicit_grads", ")", ":", "\n", "      ", "g", ".", "data", ".", "sub_", "(", "eta", ",", "ig", ".", "data", ")", "\n", "\n", "", "for", "v", ",", "g", "in", "zip", "(", "self", ".", "model", ".", "arch_parameters", "(", ")", ",", "dalpha", ")", ":", "\n", "      ", "if", "v", ".", "grad", "is", "None", ":", "\n", "        ", "v", ".", "grad", "=", "Variable", "(", "g", ".", "data", ")", "\n", "", "else", ":", "\n", "        ", "v", ".", "grad", ".", "data", ".", "copy_", "(", "g", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.architect.Architect._construct_model_from_theta": [[74, 88], ["architect.Architect.model.new", "architect.Architect.model.state_dict", "architect.Architect.model.named_parameters", "architect.Architect.update", "architect.Architect.load_state_dict", "architect.Architect.cuda", "numpy.prod", "theta[].view", "len", "v.size", "v.size"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.new", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update"], ["", "", "", "def", "_construct_model_from_theta", "(", "self", ",", "theta", ")", ":", "\n", "    ", "model_new", "=", "self", ".", "model", ".", "new", "(", ")", "\n", "model_dict", "=", "self", ".", "model", ".", "state_dict", "(", ")", "\n", "\n", "params", ",", "offset", "=", "{", "}", ",", "0", "\n", "for", "k", ",", "v", "in", "self", ".", "model", ".", "named_parameters", "(", ")", ":", "\n", "      ", "v_length", "=", "np", ".", "prod", "(", "v", ".", "size", "(", ")", ")", "\n", "params", "[", "k", "]", "=", "theta", "[", "offset", ":", "offset", "+", "v_length", "]", ".", "view", "(", "v", ".", "size", "(", ")", ")", "\n", "offset", "+=", "v_length", "\n", "\n", "", "assert", "offset", "==", "len", "(", "theta", ")", "\n", "model_dict", ".", "update", "(", "params", ")", "\n", "model_new", ".", "load_state_dict", "(", "model_dict", ")", "\n", "return", "model_new", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.architect.Architect._hessian_vector_product": [[89, 105], ["zip", "architect.Architect.model._loss", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "zip", "architect.Architect.model._loss", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "zip", "_concat().norm", "architect.Architect.model.parameters", "p.data.add_", "architect.Architect.model.arch_parameters", "architect.Architect.model.parameters", "p.data.sub_", "architect.Architect.model.arch_parameters", "architect.Architect.model.parameters", "p.data.add_", "zip", "architect._concat"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network._loss", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network._loss", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.arch_parameters", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.arch_parameters", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.architect._concat"], ["", "def", "_hessian_vector_product", "(", "self", ",", "vector", ",", "input", ",", "target", ",", "r", "=", "1e-2", ")", ":", "\n", "    ", "R", "=", "r", "/", "_concat", "(", "vector", ")", ".", "norm", "(", ")", "\n", "for", "p", ",", "v", "in", "zip", "(", "self", ".", "model", ".", "parameters", "(", ")", ",", "vector", ")", ":", "\n", "      ", "p", ".", "data", ".", "add_", "(", "R", ",", "v", ")", "\n", "", "loss", "=", "self", ".", "model", ".", "_loss", "(", "input", ",", "target", ")", "\n", "grads_p", "=", "torch", ".", "autograd", ".", "grad", "(", "loss", ",", "self", ".", "model", ".", "arch_parameters", "(", ")", ")", "\n", "\n", "for", "p", ",", "v", "in", "zip", "(", "self", ".", "model", ".", "parameters", "(", ")", ",", "vector", ")", ":", "\n", "      ", "p", ".", "data", ".", "sub_", "(", "2", "*", "R", ",", "v", ")", "\n", "", "loss", "=", "self", ".", "model", ".", "_loss", "(", "input", ",", "target", ")", "\n", "grads_n", "=", "torch", ".", "autograd", ".", "grad", "(", "loss", ",", "self", ".", "model", ".", "arch_parameters", "(", ")", ")", "\n", "\n", "for", "p", ",", "v", "in", "zip", "(", "self", ".", "model", ".", "parameters", "(", ")", ",", "vector", ")", ":", "\n", "      ", "p", ".", "data", ".", "add_", "(", "R", ",", "v", ")", "\n", "\n", "", "return", "[", "(", "x", "-", "y", ")", ".", "div_", "(", "2", "*", "R", ")", "for", "x", ",", "y", "in", "zip", "(", "grads_p", ",", "grads_n", ")", "]", "", "", "", ""]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.architect._concat": [[7, 9], ["torch.cat", "torch.cat", "x.view"], "function", ["None"], ["def", "_concat", "(", "xs", ")", ":", "\n", "  ", "return", "torch", ".", "cat", "(", "[", "x", ".", "view", "(", "-", "1", ")", "for", "x", "in", "xs", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.__init__": [[13, 15], ["utils.AvgrageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.reset"], ["  ", "def", "__init__", "(", "self", ")", ":", "\n", "    ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.reset": [[16, 20], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "    ", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "cnt", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update": [[21, 25], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "    ", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "cnt", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "cnt", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.Cutout.__init__": [[43, 45], ["None"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "length", ")", ":", "\n", "    ", "self", ".", "length", "=", "length", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.Cutout.__call__": [[46, 62], ["numpy.ones", "numpy.random.randint", "numpy.random.randint", "numpy.clip", "numpy.clip", "numpy.clip", "numpy.clip", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "mask.expand_as.expand_as.expand_as", "img.size", "img.size"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "    ", "h", ",", "w", "=", "img", ".", "size", "(", "1", ")", ",", "img", ".", "size", "(", "2", ")", "\n", "mask", "=", "np", ".", "ones", "(", "(", "h", ",", "w", ")", ",", "np", ".", "float32", ")", "\n", "y", "=", "np", ".", "random", ".", "randint", "(", "h", ")", "\n", "x", "=", "np", ".", "random", ".", "randint", "(", "w", ")", "\n", "\n", "y1", "=", "np", ".", "clip", "(", "y", "-", "self", ".", "length", "//", "2", ",", "0", ",", "h", ")", "\n", "y2", "=", "np", ".", "clip", "(", "y", "+", "self", ".", "length", "//", "2", ",", "0", ",", "h", ")", "\n", "x1", "=", "np", ".", "clip", "(", "x", "-", "self", ".", "length", "//", "2", ",", "0", ",", "w", ")", "\n", "x2", "=", "np", ".", "clip", "(", "x", "+", "self", ".", "length", "//", "2", ",", "0", ",", "w", ")", "\n", "\n", "mask", "[", "y1", ":", "y2", ",", "x1", ":", "x2", "]", "=", "0.", "\n", "mask", "=", "torch", ".", "from_numpy", "(", "mask", ")", "\n", "mask", "=", "mask", ".", "expand_as", "(", "img", ")", "\n", "img", "*=", "mask", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.accuracy": [[27, 40], ["max", "target.size", "output.topk", "pred.t.t", "pred.t.eq", "target.view().expand_as", "correct[].view().float().sum", "res.append", "correct[].view().float().sum.mul_", "target.view", "correct[].view().float", "correct[].view"], "function", ["None"], ["", "", "def", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", ")", ")", ":", "\n", "  ", "maxk", "=", "max", "(", "topk", ")", "\n", "batch_size", "=", "target", ".", "size", "(", "0", ")", "\n", "\n", "_", ",", "pred", "=", "output", ".", "topk", "(", "maxk", ",", "1", ",", "True", ",", "True", ")", "\n", "pred", "=", "pred", ".", "t", "(", ")", "\n", "correct", "=", "pred", ".", "eq", "(", "target", ".", "view", "(", "1", ",", "-", "1", ")", ".", "expand_as", "(", "pred", ")", ")", "\n", "\n", "res", "=", "[", "]", "\n", "for", "k", "in", "topk", ":", "\n", "    ", "correct_k", "=", "correct", "[", ":", "k", "]", ".", "view", "(", "-", "1", ")", ".", "float", "(", ")", ".", "sum", "(", "0", ")", "\n", "res", ".", "append", "(", "correct_k", ".", "mul_", "(", "100.0", "/", "batch_size", ")", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils._data_transforms_svhn": [[64, 83], ["torchvision.Compose", "torchvision.Compose", "transforms.Compose.transforms.append", "torchvision.RandomCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.Normalize", "utils.Cutout", "torchvision.ToTensor", "torchvision.Normalize"], "function", ["None"], ["", "", "def", "_data_transforms_svhn", "(", "args", ")", ":", "\n", "  ", "SVHN_MEAN", "=", "[", "0.4377", ",", "0.4438", ",", "0.4728", "]", "\n", "SVHN_STD", "=", "[", "0.1980", ",", "0.2010", ",", "0.1970", "]", "\n", "\n", "train_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomCrop", "(", "32", ",", "padding", "=", "4", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "SVHN_MEAN", ",", "SVHN_STD", ")", ",", "\n", "]", ")", "\n", "if", "args", ".", "cutout", ":", "\n", "    ", "train_transform", ".", "transforms", ".", "append", "(", "Cutout", "(", "args", ".", "cutout_length", ",", "\n", "args", ".", "cutout_prob", ")", ")", "\n", "\n", "", "valid_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "SVHN_MEAN", ",", "SVHN_STD", ")", ",", "\n", "]", ")", "\n", "return", "train_transform", ",", "valid_transform", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils._data_transforms_cifar100": [[85, 104], ["torchvision.Compose", "torchvision.Compose", "transforms.Compose.transforms.append", "torchvision.RandomCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.Normalize", "utils.Cutout", "torchvision.ToTensor", "torchvision.Normalize"], "function", ["None"], ["", "def", "_data_transforms_cifar100", "(", "args", ")", ":", "\n", "  ", "CIFAR_MEAN", "=", "[", "0.5071", ",", "0.4865", ",", "0.4409", "]", "\n", "CIFAR_STD", "=", "[", "0.2673", ",", "0.2564", ",", "0.2762", "]", "\n", "\n", "train_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomCrop", "(", "32", ",", "padding", "=", "4", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "CIFAR_MEAN", ",", "CIFAR_STD", ")", ",", "\n", "]", ")", "\n", "if", "args", ".", "cutout", ":", "\n", "    ", "train_transform", ".", "transforms", ".", "append", "(", "Cutout", "(", "args", ".", "cutout_length", ",", "\n", "args", ".", "cutout_prob", ")", ")", "\n", "\n", "", "valid_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "CIFAR_MEAN", ",", "CIFAR_STD", ")", ",", "\n", "]", ")", "\n", "return", "train_transform", ",", "valid_transform", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils._data_transforms_cifar10": [[106, 124], ["torchvision.Compose", "torchvision.Compose", "transforms.Compose.transforms.append", "torchvision.RandomCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.Normalize", "utils.Cutout", "torchvision.ToTensor", "torchvision.Normalize"], "function", ["None"], ["", "def", "_data_transforms_cifar10", "(", "args", ")", ":", "\n", "  ", "CIFAR_MEAN", "=", "[", "0.49139968", ",", "0.48215827", ",", "0.44653124", "]", "\n", "CIFAR_STD", "=", "[", "0.24703233", ",", "0.24348505", ",", "0.26158768", "]", "\n", "\n", "train_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomCrop", "(", "32", ",", "padding", "=", "4", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "CIFAR_MEAN", ",", "CIFAR_STD", ")", ",", "\n", "]", ")", "\n", "if", "args", ".", "cutout", ":", "\n", "    ", "train_transform", ".", "transforms", ".", "append", "(", "Cutout", "(", "args", ".", "cutout_length", ")", ")", "\n", "\n", "", "valid_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "CIFAR_MEAN", ",", "CIFAR_STD", ")", ",", "\n", "]", ")", "\n", "return", "train_transform", ",", "valid_transform", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.count_parameters_in_MB": [[126, 128], ["numpy.sum", "numpy.prod", "v.size", "model.named_parameters"], "function", ["None"], ["", "def", "count_parameters_in_MB", "(", "model", ")", ":", "\n", "  ", "return", "np", ".", "sum", "(", "np", ".", "prod", "(", "v", ".", "size", "(", ")", ")", "for", "name", ",", "v", "in", "model", ".", "named_parameters", "(", ")", "if", "\"auxiliary\"", "not", "in", "name", ")", "/", "1e6", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.save_checkpoint": [[130, 136], ["os.path.join", "torch.save", "torch.save", "torch.save", "os.path.join", "shutil.copyfile"], "function", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.save", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.save", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.save"], ["", "def", "save_checkpoint", "(", "state", ",", "is_best", ",", "save", ")", ":", "\n", "  ", "filename", "=", "os", ".", "path", ".", "join", "(", "save", ",", "'checkpoint.pth.tar'", ")", "\n", "torch", ".", "save", "(", "state", ",", "filename", ")", "\n", "if", "is_best", ":", "\n", "    ", "best_filename", "=", "os", ".", "path", ".", "join", "(", "save", ",", "'model_best.pth.tar'", ")", "\n", "shutil", ".", "copyfile", "(", "filename", ",", "best_filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.save": [[138, 140], ["torch.save", "torch.save", "torch.save", "model.state_dict"], "function", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.save", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.save", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.save"], ["", "", "def", "save", "(", "model", ",", "model_path", ")", ":", "\n", "  ", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "model_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.load": [[142, 144], ["model.load_state_dict", "torch.load", "torch.load", "torch.load"], "function", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.load", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.load", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.load"], ["", "def", "load", "(", "model", ",", "model_path", ")", ":", "\n", "  ", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "model_path", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.drop_path": [[146, 153], ["torch.autograd.Variable", "x.div_", "x.mul_", "torch.cuda.FloatTensor().bernoulli_", "torch.cuda.FloatTensor().bernoulli_", "torch.cuda.FloatTensor().bernoulli_", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "x.size"], "function", ["None"], ["", "def", "drop_path", "(", "x", ",", "drop_prob", ")", ":", "\n", "  ", "if", "drop_prob", ">", "0.", ":", "\n", "    ", "keep_prob", "=", "1.", "-", "drop_prob", "\n", "mask", "=", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "x", ".", "size", "(", "0", ")", ",", "1", ",", "1", ",", "1", ")", ".", "bernoulli_", "(", "keep_prob", ")", ")", "\n", "x", ".", "div_", "(", "keep_prob", ")", "\n", "x", ".", "mul_", "(", "mask", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.create_exp_dir": [[155, 165], ["print", "os.path.exists", "os.mkdir", "os.mkdir", "os.path.join", "os.path.join", "shutil.copyfile", "os.path.basename"], "function", ["None"], ["", "def", "create_exp_dir", "(", "path", ",", "scripts_to_save", "=", "None", ")", ":", "\n", "  ", "if", "not", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "\n", "    ", "os", ".", "mkdir", "(", "path", ")", "\n", "", "print", "(", "'Experiment dir : {}'", ".", "format", "(", "path", ")", ")", "\n", "\n", "if", "scripts_to_save", "is", "not", "None", ":", "\n", "    ", "os", ".", "mkdir", "(", "os", ".", "path", ".", "join", "(", "path", ",", "'scripts'", ")", ")", "\n", "for", "script", "in", "scripts_to_save", ":", "\n", "      ", "dst_file", "=", "os", ".", "path", ".", "join", "(", "path", ",", "'scripts'", ",", "os", ".", "path", ".", "basename", "(", "script", ")", ")", "\n", "shutil", ".", "copyfile", "(", "script", ",", "dst_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.process_step_vector": [[167, 184], ["torch.softmax", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like.sum", "torch.distributions.dirichlet.Dirichlet().rsample", "torch.distributions.dirichlet.Dirichlet().rsample", "torch.distributions.dirichlet.Dirichlet().rsample", "torch.gumbel_softmax", "torch.distributions.dirichlet.Dirichlet", "torch.distributions.dirichlet.Dirichlet", "torch.distributions.dirichlet.Dirichlet", "torch.elu"], "function", ["None"], ["", "", "", "def", "process_step_vector", "(", "x", ",", "method", ",", "mask", ",", "tau", "=", "None", ")", ":", "\n", "  ", "if", "method", "==", "'softmax'", ":", "\n", "    ", "output", "=", "F", ".", "softmax", "(", "x", ",", "dim", "=", "-", "1", ")", "\n", "", "elif", "method", "==", "'dirichlet'", ":", "\n", "    ", "output", "=", "torch", ".", "distributions", ".", "dirichlet", ".", "Dirichlet", "(", "\n", "F", ".", "elu", "(", "x", ")", "+", "1", ")", ".", "rsample", "(", ")", "\n", "", "elif", "method", "==", "'gumbel'", ":", "\n", "    ", "output", "=", "F", ".", "gumbel_softmax", "(", "x", ",", "tau", "=", "tau", ",", "hard", "=", "False", ",", "dim", "=", "-", "1", ")", "\n", "\n", "", "if", "mask", "is", "None", ":", "\n", "    ", "return", "output", "\n", "", "else", ":", "\n", "    ", "output_pruned", "=", "torch", ".", "zeros_like", "(", "output", ")", "\n", "output_pruned", "[", "mask", "]", "=", "output", "[", "mask", "]", "\n", "output_pruned", "/=", "output_pruned", ".", "sum", "(", ")", "\n", "assert", "(", "output_pruned", "[", "~", "mask", "]", "==", "0.0", ")", ".", "all", "(", ")", "\n", "return", "output_pruned", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.process_step_matrix": [[186, 195], ["torch.stack", "torch.stack", "torch.stack", "enumerate", "weights.append", "weights.append", "utils.process_step_vector", "utils.process_step_vector"], "function", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.process_step_vector", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.process_step_vector"], ["", "", "def", "process_step_matrix", "(", "x", ",", "method", ",", "mask", ",", "tau", "=", "None", ")", ":", "\n", "  ", "weights", "=", "[", "]", "\n", "if", "mask", "is", "None", ":", "\n", "    ", "for", "line", "in", "x", ":", "\n", "      ", "weights", ".", "append", "(", "process_step_vector", "(", "line", ",", "method", ",", "None", ",", "tau", ")", ")", "\n", "", "", "else", ":", "\n", "    ", "for", "i", ",", "line", "in", "enumerate", "(", "x", ")", ":", "\n", "      ", "weights", ".", "append", "(", "process_step_vector", "(", "line", ",", "method", ",", "mask", "[", "i", "]", ",", "tau", ")", ")", "\n", "", "", "return", "torch", ".", "stack", "(", "weights", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.prune": [[197, 208], ["x.topk", "torch.zeros_like().scatter", "torch.zeros_like().scatter", "torch.zeros_like().scatter", "x.data.copy_", "x.data.copy_", "torch.zeros_like().scatter", "torch.zeros_like().scatter", "torch.zeros_like().scatter", "torch.zeros_like().scatter", "torch.zeros_like().scatter", "torch.zeros_like().scatter", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.randn_like", "torch.randn_like", "torch.randn_like"], "function", ["None"], ["", "def", "prune", "(", "x", ",", "num_keep", ",", "mask", ",", "reset", "=", "False", ")", ":", "\n", "  ", "if", "not", "mask", "is", "None", ":", "\n", "    ", "x", ".", "data", "[", "~", "mask", "]", "-=", "1000000", "\n", "", "src", ",", "index", "=", "x", ".", "topk", "(", "k", "=", "num_keep", ",", "dim", "=", "-", "1", ")", "\n", "if", "not", "reset", ":", "\n", "    ", "x", ".", "data", ".", "copy_", "(", "torch", ".", "zeros_like", "(", "x", ")", ".", "scatter", "(", "dim", "=", "1", ",", "index", "=", "index", ",", "src", "=", "src", ")", ")", "\n", "", "else", ":", "\n", "    ", "x", ".", "data", ".", "copy_", "(", "torch", ".", "zeros_like", "(", "x", ")", ".", "scatter", "(", "dim", "=", "1", ",", "index", "=", "index", ",", "src", "=", "1e-3", "*", "torch", ".", "randn_like", "(", "src", ")", ")", ")", "\n", "", "mask", "=", "torch", ".", "zeros_like", "(", "x", ",", "dtype", "=", "torch", ".", "bool", ")", ".", "scatter", "(", "\n", "dim", "=", "1", ",", "index", "=", "index", ",", "src", "=", "torch", ".", "ones_like", "(", "src", ",", "dtype", "=", "torch", ".", "bool", ")", ")", "\n", "return", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.train_search_progressive.distill": [[90, 107], ["result.split.split", "result[].replace().split", "result[].replace().split", "result[].replace().split", "float", "float", "float", "float", "float", "float", "float", "float", "[].strip", "[].strip", "[].strip", "[].strip", "[].strip", "[].strip", "[].strip", "[].strip", "result[].replace", "result[].replace", "result[].replace", "cifar10[].strip", "cifar100[].strip", "cifar100[].strip", "imagenet16[].strip", "imagenet16[].strip"], "function", ["None"], ["", "def", "distill", "(", "result", ")", ":", "\n", "    ", "result", "=", "result", ".", "split", "(", "'\\n'", ")", "\n", "cifar10", "=", "result", "[", "5", "]", ".", "replace", "(", "' '", ",", "''", ")", ".", "split", "(", "':'", ")", "\n", "cifar100", "=", "result", "[", "7", "]", ".", "replace", "(", "' '", ",", "''", ")", ".", "split", "(", "':'", ")", "\n", "imagenet16", "=", "result", "[", "9", "]", ".", "replace", "(", "' '", ",", "''", ")", ".", "split", "(", "':'", ")", "\n", "\n", "cifar10_train", "=", "float", "(", "cifar10", "[", "1", "]", ".", "strip", "(", "',test'", ")", "[", "-", "7", ":", "-", "2", "]", ".", "strip", "(", "'='", ")", ")", "\n", "cifar10_test", "=", "float", "(", "cifar10", "[", "2", "]", "[", "-", "7", ":", "-", "2", "]", ".", "strip", "(", "'='", ")", ")", "\n", "cifar100_train", "=", "float", "(", "cifar100", "[", "1", "]", ".", "strip", "(", "',valid'", ")", "[", "-", "7", ":", "-", "2", "]", ".", "strip", "(", "'='", ")", ")", "\n", "cifar100_valid", "=", "float", "(", "cifar100", "[", "2", "]", ".", "strip", "(", "',test'", ")", "[", "-", "7", ":", "-", "2", "]", ".", "strip", "(", "'='", ")", ")", "\n", "cifar100_test", "=", "float", "(", "cifar100", "[", "3", "]", "[", "-", "7", ":", "-", "2", "]", ".", "strip", "(", "'='", ")", ")", "\n", "imagenet16_train", "=", "float", "(", "imagenet16", "[", "1", "]", ".", "strip", "(", "',valid'", ")", "[", "-", "7", ":", "-", "2", "]", ".", "strip", "(", "'='", ")", ")", "\n", "imagenet16_valid", "=", "float", "(", "imagenet16", "[", "2", "]", ".", "strip", "(", "',test'", ")", "[", "-", "7", ":", "-", "2", "]", ".", "strip", "(", "'='", ")", ")", "\n", "imagenet16_test", "=", "float", "(", "imagenet16", "[", "3", "]", "[", "-", "7", ":", "-", "2", "]", ".", "strip", "(", "'='", ")", ")", "\n", "\n", "return", "cifar10_train", ",", "cifar10_test", ",", "cifar100_train", ",", "cifar100_valid", ",", "cifar100_test", ",", "imagenet16_train", ",", "imagenet16_valid", ",", "imagenet16_test", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.train_search_progressive.main": [[109, 261], ["torch.set_num_threads", "torch.set_num_threads", "torch.set_num_threads", "torch.set_num_threads", "torch.set_num_threads", "numpy.random.seed", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "logging.info", "logging.info", "torch.CrossEntropyLoss", "criterion.cuda.cuda", "search_model.TinyNetwork.cuda", "logging.info", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "len", "list", "int", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "architect.Architect", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "enumerate", "search_model.TinyNetwork.genotype", "logging.info", "search_model.TinyNetwork.show_arch_parameters", "writer.close", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "logging.info", "sys.exit", "nas_201_api.NASBench201API", "search_model.TinyNetwork", "utils.count_parameters_in_MB", "search_model.TinyNetwork.get_weights", "utils._data_transforms_cifar10", "torchvision.CIFAR10", "range", "numpy.floor", "float", "range", "search_model.TinyNetwork", "utils._data_transforms_cifar100", "torchvision.CIFAR100", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.sampler.SubsetRandomSampler", "sum", "logging.info", "search_model.TinyNetwork.genotype", "logging.info", "search_model.TinyNetwork.show_arch_parameters", "train_search_progressive.train", "logging.info", "train_search_progressive.infer", "logging.info", "net2wider.configure_scheduler.step", "search_model.TinyNetwork.pruning", "search_model.TinyNetwork.wider", "net2wider.configure_optimizer", "net2wider.configure_scheduler", "logging.info", "logging.info", "search_model.TinyNetwork", "utils._data_transforms_svhn", "torchvision.SVHN", "net2wider.configure_scheduler.get_lr", "nas_201_api.NASBench201API.query_by_arch", "logging.info", "train_search_progressive.distill", "logging.info", "logging.info", "logging.info", "writer.add_scalars", "writer.add_scalars", "writer.add_scalars", "writer.add_scalars", "writer.add_scalars", "utils.save_checkpoint", "logging.info", "search_model.TinyNetwork.set_tau", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "transforms.Compose", "ImageNet16", "search_model.TinyNetwork.genotype", "len", "search_model.TinyNetwork.get_weights", "float", "transforms.RandomHorizontalFlip", "transforms.RandomCrop", "transforms.ToTensor", "transforms.Normalize", "len", "search_model.TinyNetwork.state_dict", "net2wider.configure_optimizer.state_dict", "search_model.TinyNetwork.arch_parameters", "sum", "os.path.join"], "function", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.genotype", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.show_arch_parameters", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.count_parameters_in_MB", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_model_gdas.TinyNetworkGDAS.get_weights", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils._data_transforms_cifar10", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils._data_transforms_cifar100", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.genotype", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.show_arch_parameters", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.train_search_imagenet.train", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.train_search_imagenet.infer", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.architect.Architect.step", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.pruning", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.wider", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.configure_optimizer", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.configure_scheduler", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils._data_transforms_svhn", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.train_search.distill", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.save_checkpoint", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_model_gdas.TinyNetworkGDAS.set_tau", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.genotype", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_model_gdas.TinyNetworkGDAS.get_weights", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.arch_parameters"], ["", "def", "main", "(", ")", ":", "\n", "    ", "torch", ".", "set_num_threads", "(", "3", ")", "\n", "if", "not", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "logging", ".", "info", "(", "'no gpu device available'", ")", "\n", "sys", ".", "exit", "(", "1", ")", "\n", "\n", "", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "cuda", ".", "set_device", "(", "args", ".", "gpu", ")", "\n", "cudnn", ".", "benchmark", "=", "True", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "cudnn", ".", "enabled", "=", "True", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "logging", ".", "info", "(", "'gpu device = %d'", "%", "args", ".", "gpu", ")", "\n", "logging", ".", "info", "(", "\"args = %s\"", ",", "args", ")", "\n", "\n", "if", "not", "'debug'", "in", "args", ".", "save", ":", "\n", "        ", "api", "=", "API", "(", "'pth file path'", ")", "\n", "", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "criterion", "=", "criterion", ".", "cuda", "(", ")", "\n", "\n", "if", "args", ".", "method", "==", "'snas'", ":", "\n", "# Create the decrease step for the gumbel softmax temperature", "\n", "        ", "args", ".", "epochs", "=", "100", "\n", "tau_step", "=", "(", "args", ".", "tau_min", "-", "args", ".", "tau_max", ")", "/", "args", ".", "epochs", "\n", "tau_epoch", "=", "args", ".", "tau_max", "\n", "model", "=", "TinyNetwork", "(", "C", "=", "args", ".", "init_channels", ",", "N", "=", "5", ",", "max_nodes", "=", "4", ",", "num_classes", "=", "n_classes", ",", "\n", "criterion", "=", "criterion", ",", "search_space", "=", "NAS_BENCH_201", ",", "k", "=", "args", ".", "k", ",", "species", "=", "'gumbel'", ")", "\n", "", "elif", "args", ".", "method", "==", "'dirichlet'", ":", "\n", "        ", "model", "=", "TinyNetwork", "(", "C", "=", "args", ".", "init_channels", ",", "N", "=", "5", ",", "max_nodes", "=", "4", ",", "num_classes", "=", "n_classes", ",", "\n", "criterion", "=", "criterion", ",", "search_space", "=", "NAS_BENCH_201", ",", "k", "=", "args", ".", "k", ",", "species", "=", "'dirichlet'", ",", "\n", "reg_type", "=", "args", ".", "reg_type", ",", "reg_scale", "=", "args", ".", "reg_scale", ")", "\n", "", "elif", "args", ".", "method", "==", "'darts'", ":", "\n", "        ", "model", "=", "TinyNetwork", "(", "C", "=", "args", ".", "init_channels", ",", "N", "=", "5", ",", "max_nodes", "=", "4", ",", "num_classes", "=", "n_classes", ",", "\n", "criterion", "=", "criterion", ",", "search_space", "=", "NAS_BENCH_201", ",", "k", "=", "args", ".", "k", ",", "species", "=", "'softmax'", ")", "\n", "", "model", "=", "model", ".", "cuda", "(", ")", "\n", "logging", ".", "info", "(", "\"param size = %fMB\"", ",", "utils", ".", "count_parameters_in_MB", "(", "model", ")", ")", "\n", "\n", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "\n", "model", ".", "get_weights", "(", ")", ",", "\n", "args", ".", "learning_rate", ",", "\n", "momentum", "=", "args", ".", "momentum", ",", "\n", "weight_decay", "=", "args", ".", "weight_decay", ")", "\n", "\n", "if", "args", ".", "dataset", "==", "'cifar10'", ":", "\n", "        ", "train_transform", ",", "valid_transform", "=", "utils", ".", "_data_transforms_cifar10", "(", "args", ")", "\n", "train_data", "=", "dset", ".", "CIFAR10", "(", "root", "=", "args", ".", "data", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "train_transform", ")", "\n", "", "elif", "args", ".", "dataset", "==", "'cifar100'", ":", "\n", "        ", "train_transform", ",", "valid_transform", "=", "utils", ".", "_data_transforms_cifar100", "(", "args", ")", "\n", "train_data", "=", "dset", ".", "CIFAR100", "(", "root", "=", "args", ".", "data", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "train_transform", ")", "\n", "", "elif", "args", ".", "dataset", "==", "'svhn'", ":", "\n", "        ", "train_transform", ",", "valid_transform", "=", "utils", ".", "_data_transforms_svhn", "(", "args", ")", "\n", "train_data", "=", "dset", ".", "SVHN", "(", "root", "=", "args", ".", "data", ",", "split", "=", "'train'", ",", "download", "=", "True", ",", "transform", "=", "train_transform", ")", "\n", "", "elif", "args", ".", "dataset", "==", "'imagenet16-120'", ":", "\n", "        ", "import", "torchvision", ".", "transforms", "as", "transforms", "\n", "from", "nasbench201", ".", "DownsampledImageNet", "import", "ImageNet16", "\n", "mean", "=", "[", "x", "/", "255", "for", "x", "in", "[", "122.68", ",", "116.66", ",", "104.01", "]", "]", "\n", "std", "=", "[", "x", "/", "255", "for", "x", "in", "[", "63.22", ",", "61.26", ",", "65.09", "]", "]", "\n", "lists", "=", "[", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "transforms", ".", "RandomCrop", "(", "16", ",", "padding", "=", "2", ")", ",", "transforms", ".", "ToTensor", "(", ")", ",", "transforms", ".", "Normalize", "(", "mean", ",", "std", ")", "]", "\n", "train_transform", "=", "transforms", ".", "Compose", "(", "lists", ")", "\n", "train_data", "=", "ImageNet16", "(", "root", "=", "os", ".", "path", ".", "join", "(", "args", ".", "data", ",", "'imagenet16'", ")", ",", "train", "=", "True", ",", "transform", "=", "train_transform", ",", "use_num_of_class_only", "=", "120", ")", "\n", "assert", "len", "(", "train_data", ")", "==", "151700", "\n", "\n", "", "num_train", "=", "len", "(", "train_data", ")", "\n", "indices", "=", "list", "(", "range", "(", "num_train", ")", ")", "\n", "split", "=", "int", "(", "np", ".", "floor", "(", "args", ".", "train_portion", "*", "num_train", ")", ")", "\n", "\n", "train_queue", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "train_data", ",", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "sampler", "=", "torch", ".", "utils", ".", "data", ".", "sampler", ".", "SubsetRandomSampler", "(", "indices", "[", ":", "split", "]", ")", ",", "\n", "pin_memory", "=", "True", ")", "\n", "\n", "valid_queue", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "train_data", ",", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "sampler", "=", "torch", ".", "utils", ".", "data", ".", "sampler", ".", "SubsetRandomSampler", "(", "indices", "[", "split", ":", "num_train", "]", ")", ",", "\n", "pin_memory", "=", "True", ")", "\n", "\n", "architect", "=", "Architect", "(", "model", ",", "args", ")", "\n", "\n", "# configure progressive parameter", "\n", "epoch", "=", "0", "\n", "ks", "=", "[", "4", ",", "2", "]", "\n", "num_keeps", "=", "[", "5", ",", "3", "]", "\n", "train_epochs", "=", "[", "2", ",", "2", "]", "if", "'debug'", "in", "args", ".", "save", "else", "[", "50", ",", "50", "]", "\n", "scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "CosineAnnealingLR", "(", "\n", "optimizer", ",", "float", "(", "sum", "(", "train_epochs", ")", ")", ",", "eta_min", "=", "args", ".", "learning_rate_min", ")", "\n", "\n", "for", "i", ",", "current_epochs", "in", "enumerate", "(", "train_epochs", ")", ":", "\n", "        ", "for", "e", "in", "range", "(", "current_epochs", ")", ":", "\n", "            ", "lr", "=", "scheduler", ".", "get_lr", "(", ")", "[", "0", "]", "\n", "logging", ".", "info", "(", "'epoch %d lr %e'", ",", "epoch", ",", "lr", ")", "\n", "genotype", "=", "model", ".", "genotype", "(", ")", "\n", "logging", ".", "info", "(", "'genotype = %s'", ",", "genotype", ")", "\n", "model", ".", "show_arch_parameters", "(", ")", "\n", "\n", "# training", "\n", "train_acc", ",", "train_obj", "=", "train", "(", "train_queue", ",", "valid_queue", ",", "model", ",", "architect", ",", "criterion", ",", "optimizer", ",", "lr", ",", "e", ")", "\n", "logging", ".", "info", "(", "'train_acc %f'", ",", "train_acc", ")", "\n", "\n", "# validation", "\n", "valid_acc", ",", "valid_obj", "=", "infer", "(", "valid_queue", ",", "model", ",", "criterion", ")", "\n", "logging", ".", "info", "(", "'valid_acc %f'", ",", "valid_acc", ")", "\n", "\n", "if", "not", "'debug'", "in", "args", ".", "save", ":", "\n", "# nasbench201", "\n", "                ", "result", "=", "api", ".", "query_by_arch", "(", "model", ".", "genotype", "(", ")", ")", "\n", "logging", ".", "info", "(", "'{:}'", ".", "format", "(", "result", ")", ")", "\n", "cifar10_train", ",", "cifar10_test", ",", "cifar100_train", ",", "cifar100_valid", ",", "cifar100_test", ",", "imagenet16_train", ",", "imagenet16_valid", ",", "imagenet16_test", "=", "distill", "(", "result", ")", "\n", "logging", ".", "info", "(", "'cifar10 train %f test %f'", ",", "cifar10_train", ",", "cifar10_test", ")", "\n", "logging", ".", "info", "(", "'cifar100 train %f valid %f test %f'", ",", "cifar100_train", ",", "cifar100_valid", ",", "cifar100_test", ")", "\n", "logging", ".", "info", "(", "'imagenet16 train %f valid %f test %f'", ",", "imagenet16_train", ",", "imagenet16_valid", ",", "imagenet16_test", ")", "\n", "\n", "# tensorboard", "\n", "writer", ".", "add_scalars", "(", "'accuracy'", ",", "{", "'train'", ":", "train_acc", ",", "'valid'", ":", "valid_acc", "}", ",", "epoch", ")", "\n", "writer", ".", "add_scalars", "(", "'loss'", ",", "{", "'train'", ":", "train_obj", ",", "'valid'", ":", "valid_obj", "}", ",", "epoch", ")", "\n", "writer", ".", "add_scalars", "(", "'nasbench201/cifar10'", ",", "{", "'train'", ":", "cifar10_train", ",", "'test'", ":", "cifar10_test", "}", ",", "epoch", ")", "\n", "writer", ".", "add_scalars", "(", "'nasbench201/cifar100'", ",", "{", "'train'", ":", "cifar100_train", ",", "'valid'", ":", "cifar100_valid", ",", "'test'", ":", "cifar100_test", "}", ",", "epoch", ")", "\n", "writer", ".", "add_scalars", "(", "'nasbench201/imagenet16'", ",", "{", "'train'", ":", "imagenet16_train", ",", "'valid'", ":", "imagenet16_valid", ",", "'test'", ":", "imagenet16_test", "}", ",", "epoch", ")", "\n", "\n", "utils", ".", "save_checkpoint", "(", "{", "\n", "'epoch'", ":", "epoch", "+", "1", ",", "\n", "'state_dict'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'optimizer'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'alpha'", ":", "model", ".", "arch_parameters", "(", ")", "\n", "}", ",", "False", ",", "args", ".", "save", ")", "\n", "\n", "", "epoch", "+=", "1", "\n", "scheduler", ".", "step", "(", ")", "\n", "if", "args", ".", "method", "==", "'snas'", ":", "\n", "# Decrease the temperature for the gumbel softmax linearly", "\n", "                ", "tau_epoch", "+=", "tau_step", "\n", "logging", ".", "info", "(", "'tau %f'", ",", "tau_epoch", ")", "\n", "model", ".", "set_tau", "(", "tau_epoch", ")", "\n", "\n", "", "", "if", "not", "i", "==", "len", "(", "train_epochs", ")", "-", "1", ":", "\n", "            ", "model", ".", "pruning", "(", "num_keeps", "[", "i", "+", "1", "]", ")", "\n", "# architect.pruning([model._mask])", "\n", "model", ".", "wider", "(", "ks", "[", "i", "+", "1", "]", ")", "\n", "optimizer", "=", "configure_optimizer", "(", "optimizer", ",", "torch", ".", "optim", ".", "SGD", "(", "\n", "model", ".", "get_weights", "(", ")", ",", "\n", "args", ".", "learning_rate", ",", "\n", "momentum", "=", "args", ".", "momentum", ",", "\n", "weight_decay", "=", "args", ".", "weight_decay", ")", ")", "\n", "scheduler", "=", "configure_scheduler", "(", "scheduler", ",", "torch", ".", "optim", ".", "lr_scheduler", ".", "CosineAnnealingLR", "(", "\n", "optimizer", ",", "float", "(", "sum", "(", "train_epochs", ")", ")", ",", "eta_min", "=", "args", ".", "learning_rate_min", ")", ")", "\n", "logging", ".", "info", "(", "'pruning finish, %d ops left per edge'", ",", "num_keeps", "[", "i", "+", "1", "]", ")", "\n", "logging", ".", "info", "(", "'network wider finish, current pc parameter %d'", ",", "ks", "[", "i", "+", "1", "]", ")", "\n", "\n", "", "", "genotype", "=", "model", ".", "genotype", "(", ")", "\n", "logging", ".", "info", "(", "'genotype = %s'", ",", "genotype", ")", "\n", "model", ".", "show_arch_parameters", "(", ")", "\n", "writer", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.train_search_progressive.train": [[263, 305], ["utils.AvgrageMeter", "utils.AvgrageMeter", "utils.AvgrageMeter", "enumerate", "model.train", "input.cuda.size", "input.cuda.cuda", "target.cuda.cuda", "next", "input_search.cuda.cuda", "target_search.cuda.cuda", "optimizer.zero_grad", "architect.optimizer.zero_grad", "model", "criterion", "criterion.backward", "torch.utils.clip_grad_norm_", "optimizer.step", "optimizer.zero_grad", "architect.optimizer.zero_grad", "utils.accuracy", "utils.AvgrageMeter.update", "utils.AvgrageMeter.update", "utils.AvgrageMeter.update", "iter", "architect.step", "model.parameters", "logging.info"], "function", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.train_search_imagenet.train", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.architect.Architect.step", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.accuracy", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.architect.Architect.step"], ["", "def", "train", "(", "train_queue", ",", "valid_queue", ",", "model", ",", "architect", ",", "criterion", ",", "optimizer", ",", "lr", ",", "epoch", ")", ":", "\n", "    ", "objs", "=", "utils", ".", "AvgrageMeter", "(", ")", "\n", "top1", "=", "utils", ".", "AvgrageMeter", "(", ")", "\n", "top5", "=", "utils", ".", "AvgrageMeter", "(", ")", "\n", "\n", "for", "step", ",", "(", "input", ",", "target", ")", "in", "enumerate", "(", "train_queue", ")", ":", "\n", "        ", "model", ".", "train", "(", ")", "\n", "n", "=", "input", ".", "size", "(", "0", ")", "\n", "\n", "input", "=", "input", ".", "cuda", "(", ")", "\n", "target", "=", "target", ".", "cuda", "(", "non_blocking", "=", "True", ")", "\n", "\n", "# get a random minibatch from the search queue with replacement", "\n", "input_search", ",", "target_search", "=", "next", "(", "iter", "(", "valid_queue", ")", ")", "\n", "input_search", "=", "input_search", ".", "cuda", "(", ")", "\n", "target_search", "=", "target_search", ".", "cuda", "(", "non_blocking", "=", "True", ")", "\n", "\n", "if", "epoch", ">=", "10", ":", "\n", "            ", "architect", ".", "step", "(", "input", ",", "target", ",", "input_search", ",", "target_search", ",", "lr", ",", "optimizer", ",", "unrolled", "=", "args", ".", "unrolled", ")", "\n", "", "optimizer", ".", "zero_grad", "(", ")", "\n", "architect", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "logits", "=", "model", "(", "input", ")", "\n", "loss", "=", "criterion", "(", "logits", ",", "target", ")", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "model", ".", "parameters", "(", ")", ",", "args", ".", "grad_clip", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "architect", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "prec1", ",", "prec5", "=", "utils", ".", "accuracy", "(", "logits", ",", "target", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "objs", ".", "update", "(", "loss", ".", "data", ",", "n", ")", "\n", "top1", ".", "update", "(", "prec1", ".", "data", ",", "n", ")", "\n", "top5", ".", "update", "(", "prec5", ".", "data", ",", "n", ")", "\n", "\n", "if", "step", "%", "args", ".", "report_freq", "==", "0", ":", "\n", "            ", "logging", ".", "info", "(", "'train %03d %e %f %f'", ",", "step", ",", "objs", ".", "avg", ",", "top1", ".", "avg", ",", "top5", ".", "avg", ")", "\n", "", "if", "'debug'", "in", "args", ".", "save", ":", "\n", "            ", "break", "\n", "\n", "", "", "return", "top1", ".", "avg", ",", "objs", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.train_search_progressive.infer": [[307, 333], ["utils.AvgrageMeter", "utils.AvgrageMeter", "utils.AvgrageMeter", "model.eval", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "input.cuda.cuda", "target.cuda.cuda", "model", "criterion", "utils.accuracy", "input.cuda.size", "utils.AvgrageMeter.update", "utils.AvgrageMeter.update", "utils.AvgrageMeter.update", "logging.info"], "function", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.accuracy", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update"], ["", "def", "infer", "(", "valid_queue", ",", "model", ",", "criterion", ")", ":", "\n", "    ", "objs", "=", "utils", ".", "AvgrageMeter", "(", ")", "\n", "top1", "=", "utils", ".", "AvgrageMeter", "(", ")", "\n", "top5", "=", "utils", ".", "AvgrageMeter", "(", ")", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "step", ",", "(", "input", ",", "target", ")", "in", "enumerate", "(", "valid_queue", ")", ":", "\n", "            ", "input", "=", "input", ".", "cuda", "(", ")", "\n", "target", "=", "target", ".", "cuda", "(", "non_blocking", "=", "True", ")", "\n", "\n", "logits", "=", "model", "(", "input", ")", "\n", "loss", "=", "criterion", "(", "logits", ",", "target", ")", "\n", "\n", "prec1", ",", "prec5", "=", "utils", ".", "accuracy", "(", "logits", ",", "target", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "n", "=", "input", ".", "size", "(", "0", ")", "\n", "objs", ".", "update", "(", "loss", ".", "data", ",", "n", ")", "\n", "top1", ".", "update", "(", "prec1", ".", "data", ",", "n", ")", "\n", "top5", ".", "update", "(", "prec5", ".", "data", ",", "n", ")", "\n", "\n", "if", "step", "%", "args", ".", "report_freq", "==", "0", ":", "\n", "                ", "logging", ".", "info", "(", "'valid %03d %e %f %f'", ",", "step", ",", "objs", ".", "avg", ",", "top1", ".", "avg", ",", "top5", ".", "avg", ")", "\n", "", "if", "'debug'", "in", "args", ".", "save", ":", "\n", "                ", "break", "\n", "\n", "", "", "", "return", "top1", ".", "avg", ",", "objs", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.genotypes.Structure.__init__": [[22, 35], ["enumerate", "isinstance", "isinstance", "type", "len", "genotypes.Structure.node_N.append", "genotypes.Structure.nodes.append", "isinstance", "isinstance", "type", "len", "len", "len", "tuple", "isinstance", "isinstance", "type", "copy.deepcopy", "len"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "genotype", ")", ":", "\n", "    ", "assert", "isinstance", "(", "genotype", ",", "list", ")", "or", "isinstance", "(", "genotype", ",", "tuple", ")", ",", "'invalid class of genotype : {:}'", ".", "format", "(", "type", "(", "genotype", ")", ")", "\n", "self", ".", "node_num", "=", "len", "(", "genotype", ")", "+", "1", "\n", "self", ".", "nodes", "=", "[", "]", "\n", "self", ".", "node_N", "=", "[", "]", "\n", "for", "idx", ",", "node_info", "in", "enumerate", "(", "genotype", ")", ":", "\n", "      ", "assert", "isinstance", "(", "node_info", ",", "list", ")", "or", "isinstance", "(", "node_info", ",", "tuple", ")", ",", "'invalid class of node_info : {:}'", ".", "format", "(", "type", "(", "node_info", ")", ")", "\n", "assert", "len", "(", "node_info", ")", ">=", "1", ",", "'invalid length : {:}'", ".", "format", "(", "len", "(", "node_info", ")", ")", "\n", "for", "node_in", "in", "node_info", ":", "\n", "        ", "assert", "isinstance", "(", "node_in", ",", "list", ")", "or", "isinstance", "(", "node_in", ",", "tuple", ")", ",", "'invalid class of in-node : {:}'", ".", "format", "(", "type", "(", "node_in", ")", ")", "\n", "assert", "len", "(", "node_in", ")", "==", "2", "and", "node_in", "[", "1", "]", "<=", "idx", ",", "'invalid in-node : {:}'", ".", "format", "(", "node_in", ")", "\n", "", "self", ".", "node_N", ".", "append", "(", "len", "(", "node_info", ")", ")", "\n", "self", ".", "nodes", ".", "append", "(", "tuple", "(", "deepcopy", "(", "node_info", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.genotypes.Structure.tolist": [[36, 48], ["list", "sorted", "tuple", "genotypes.append", "filter", "len"], "methods", ["None"], ["", "", "def", "tolist", "(", "self", ",", "remove_str", ")", ":", "\n", "# convert this class to the list, if remove_str is 'none', then remove the 'none' operation.", "\n", "# note that we re-order the input node in this function", "\n", "# return the-genotype-list and success [if unsuccess, it is not a connectivity]", "\n", "    ", "genotypes", "=", "[", "]", "\n", "for", "node_info", "in", "self", ".", "nodes", ":", "\n", "      ", "node_info", "=", "list", "(", "node_info", ")", "\n", "node_info", "=", "sorted", "(", "node_info", ",", "key", "=", "lambda", "x", ":", "(", "x", "[", "1", "]", ",", "x", "[", "0", "]", ")", ")", "\n", "node_info", "=", "tuple", "(", "filter", "(", "lambda", "x", ":", "x", "[", "0", "]", "!=", "remove_str", ",", "node_info", ")", ")", "\n", "if", "len", "(", "node_info", ")", "==", "0", ":", "return", "None", ",", "False", "\n", "genotypes", ".", "append", "(", "node_info", ")", "\n", "", "return", "genotypes", ",", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.genotypes.Structure.node": [[49, 52], ["len", "len"], "methods", ["None"], ["", "def", "node", "(", "self", ",", "index", ")", ":", "\n", "    ", "assert", "index", ">", "0", "and", "index", "<=", "len", "(", "self", ")", ",", "'invalid index={:} < {:}'", ".", "format", "(", "index", ",", "len", "(", "self", ")", ")", "\n", "return", "self", ".", "nodes", "[", "index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.genotypes.Structure.tostr": [[53, 60], ["strings.append"], "methods", ["None"], ["", "def", "tostr", "(", "self", ")", ":", "\n", "    ", "strings", "=", "[", "]", "\n", "for", "node_info", "in", "self", ".", "nodes", ":", "\n", "      ", "string", "=", "'|'", ".", "join", "(", "[", "x", "[", "0", "]", "+", "'~{:}'", ".", "format", "(", "x", "[", "1", "]", ")", "for", "x", "in", "node_info", "]", ")", "\n", "string", "=", "'|{:}|'", ".", "format", "(", "string", ")", "\n", "strings", ".", "append", "(", "string", ")", "\n", "", "return", "'+'", ".", "join", "(", "strings", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.genotypes.Structure.check_valid": [[61, 71], ["enumerate", "sums.append", "sum", "len"], "methods", ["None"], ["", "def", "check_valid", "(", "self", ")", ":", "\n", "    ", "nodes", "=", "{", "0", ":", "True", "}", "\n", "for", "i", ",", "node_info", "in", "enumerate", "(", "self", ".", "nodes", ")", ":", "\n", "      ", "sums", "=", "[", "]", "\n", "for", "op", ",", "xin", "in", "node_info", ":", "\n", "        ", "if", "op", "==", "'none'", "or", "nodes", "[", "xin", "]", "is", "False", ":", "x", "=", "False", "\n", "else", ":", "x", "=", "True", "\n", "sums", ".", "append", "(", "x", ")", "\n", "", "nodes", "[", "i", "+", "1", "]", "=", "sum", "(", "sums", ")", ">", "0", "\n", "", "return", "nodes", "[", "len", "(", "self", ".", "nodes", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.genotypes.Structure.to_unique_str": [[72, 91], ["enumerate", "cur_node.append", "sorted", "len"], "methods", ["None"], ["", "def", "to_unique_str", "(", "self", ",", "consider_zero", "=", "False", ")", ":", "\n", "# this is used to identify the isomorphic cell, which rerquires the prior knowledge of operation", "\n", "# two operations are special, i.e., none and skip_connect", "\n", "    ", "nodes", "=", "{", "0", ":", "'0'", "}", "\n", "for", "i_node", ",", "node_info", "in", "enumerate", "(", "self", ".", "nodes", ")", ":", "\n", "      ", "cur_node", "=", "[", "]", "\n", "for", "op", ",", "xin", "in", "node_info", ":", "\n", "        ", "if", "consider_zero", "is", "None", ":", "\n", "          ", "x", "=", "'('", "+", "nodes", "[", "xin", "]", "+", "')'", "+", "'@{:}'", ".", "format", "(", "op", ")", "\n", "", "elif", "consider_zero", ":", "\n", "          ", "if", "op", "==", "'none'", "or", "nodes", "[", "xin", "]", "==", "'#'", ":", "x", "=", "'#'", "# zero", "\n", "elif", "op", "==", "'skip_connect'", ":", "x", "=", "nodes", "[", "xin", "]", "\n", "else", ":", "x", "=", "'('", "+", "nodes", "[", "xin", "]", "+", "')'", "+", "'@{:}'", ".", "format", "(", "op", ")", "\n", "", "else", ":", "\n", "          ", "if", "op", "==", "'skip_connect'", ":", "x", "=", "nodes", "[", "xin", "]", "\n", "else", ":", "x", "=", "'('", "+", "nodes", "[", "xin", "]", "+", "')'", "+", "'@{:}'", ".", "format", "(", "op", ")", "\n", "", "cur_node", ".", "append", "(", "x", ")", "\n", "", "nodes", "[", "i_node", "+", "1", "]", "=", "'+'", ".", "join", "(", "sorted", "(", "cur_node", ")", ")", "\n", "", "return", "nodes", "[", "len", "(", "self", ".", "nodes", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.genotypes.Structure.check_valid_op": [[92, 98], ["None"], "methods", ["None"], ["", "def", "check_valid_op", "(", "self", ",", "op_names", ")", ":", "\n", "    ", "for", "node_info", "in", "self", ".", "nodes", ":", "\n", "      ", "for", "inode_edge", "in", "node_info", ":", "\n", "#assert inode_edge[0] in op_names, 'invalid op-name : {:}'.format(inode_edge[0])", "\n", "        ", "if", "inode_edge", "[", "0", "]", "not", "in", "op_names", ":", "return", "False", "\n", "", "", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.genotypes.Structure.__repr__": [[99, 101], ["genotypes.Structure.tostr"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.genotypes.Structure.tostr"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "    ", "return", "(", "'{name}({node_num} nodes with {node_info})'", ".", "format", "(", "name", "=", "self", ".", "__class__", ".", "__name__", ",", "node_info", "=", "self", ".", "tostr", "(", ")", ",", "**", "self", ".", "__dict__", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.genotypes.Structure.__len__": [[102, 104], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "    ", "return", "len", "(", "self", ".", "nodes", ")", "+", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.genotypes.Structure.__getitem__": [[105, 107], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "    ", "return", "self", ".", "nodes", "[", "index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.genotypes.Structure.str2structure": [[108, 120], ["isinstance", "xstr.split", "enumerate", "genotypes.Structure", "type", "list", "tuple", "genotypes.append", "filter", "xi.split", "node_str.split", "len", "xinput.split", "int"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "str2structure", "(", "xstr", ")", ":", "\n", "    ", "assert", "isinstance", "(", "xstr", ",", "str", ")", ",", "'must take string (not {:}) as input'", ".", "format", "(", "type", "(", "xstr", ")", ")", "\n", "nodestrs", "=", "xstr", ".", "split", "(", "'+'", ")", "\n", "genotypes", "=", "[", "]", "\n", "for", "i", ",", "node_str", "in", "enumerate", "(", "nodestrs", ")", ":", "\n", "      ", "inputs", "=", "list", "(", "filter", "(", "lambda", "x", ":", "x", "!=", "''", ",", "node_str", ".", "split", "(", "'|'", ")", ")", ")", "\n", "for", "xinput", "in", "inputs", ":", "assert", "len", "(", "xinput", ".", "split", "(", "'~'", ")", ")", "==", "2", ",", "'invalid input length : {:}'", ".", "format", "(", "xinput", ")", "\n", "inputs", "=", "(", "xi", ".", "split", "(", "'~'", ")", "for", "xi", "in", "inputs", ")", "\n", "input_infos", "=", "tuple", "(", "(", "op", ",", "int", "(", "IDX", ")", ")", "for", "(", "op", ",", "IDX", ")", "in", "inputs", ")", "\n", "genotypes", ".", "append", "(", "input_infos", ")", "\n", "", "return", "Structure", "(", "genotypes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.genotypes.Structure.str2fullstructure": [[121, 137], ["isinstance", "xstr.split", "enumerate", "genotypes.Structure", "type", "list", "list", "list", "range", "sorted", "genotypes.append", "filter", "xi.split", "tuple", "node_str.split", "len", "list.append", "xinput.split", "int"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "str2fullstructure", "(", "xstr", ",", "default_name", "=", "'none'", ")", ":", "\n", "    ", "assert", "isinstance", "(", "xstr", ",", "str", ")", ",", "'must take string (not {:}) as input'", ".", "format", "(", "type", "(", "xstr", ")", ")", "\n", "nodestrs", "=", "xstr", ".", "split", "(", "'+'", ")", "\n", "genotypes", "=", "[", "]", "\n", "for", "i", ",", "node_str", "in", "enumerate", "(", "nodestrs", ")", ":", "\n", "      ", "inputs", "=", "list", "(", "filter", "(", "lambda", "x", ":", "x", "!=", "''", ",", "node_str", ".", "split", "(", "'|'", ")", ")", ")", "\n", "for", "xinput", "in", "inputs", ":", "assert", "len", "(", "xinput", ".", "split", "(", "'~'", ")", ")", "==", "2", ",", "'invalid input length : {:}'", ".", "format", "(", "xinput", ")", "\n", "inputs", "=", "(", "xi", ".", "split", "(", "'~'", ")", "for", "xi", "in", "inputs", ")", "\n", "input_infos", "=", "list", "(", "(", "op", ",", "int", "(", "IDX", ")", ")", "for", "(", "op", ",", "IDX", ")", "in", "inputs", ")", "\n", "all_in_nodes", "=", "list", "(", "x", "[", "1", "]", "for", "x", "in", "input_infos", ")", "\n", "for", "j", "in", "range", "(", "i", ")", ":", "\n", "        ", "if", "j", "not", "in", "all_in_nodes", ":", "input_infos", ".", "append", "(", "(", "default_name", ",", "j", ")", ")", "\n", "", "node_info", "=", "sorted", "(", "input_infos", ",", "key", "=", "lambda", "x", ":", "(", "x", "[", "1", "]", ",", "x", "[", "0", "]", ")", ")", "\n", "genotypes", ".", "append", "(", "tuple", "(", "node_info", ")", ")", "\n", "", "return", "Structure", "(", "genotypes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.genotypes.Structure.gen_all": [[138, 157], ["genotypes.get_combination", "enumerate", "range", "isinstance", "isinstance", "type", "genotypes.get_combination", "tuple", "genotypes.Structure", "new_all_archs.append", "tuple"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.genotypes.get_combination", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.genotypes.get_combination"], ["", "@", "staticmethod", "\n", "def", "gen_all", "(", "search_space", ",", "num", ",", "return_ori", ")", ":", "\n", "    ", "assert", "isinstance", "(", "search_space", ",", "list", ")", "or", "isinstance", "(", "search_space", ",", "tuple", ")", ",", "'invalid class of search-space : {:}'", ".", "format", "(", "type", "(", "search_space", ")", ")", "\n", "assert", "num", ">=", "2", ",", "'There should be at least two nodes in a neural cell instead of {:}'", ".", "format", "(", "num", ")", "\n", "all_archs", "=", "get_combination", "(", "search_space", ",", "1", ")", "\n", "for", "i", ",", "arch", "in", "enumerate", "(", "all_archs", ")", ":", "\n", "      ", "all_archs", "[", "i", "]", "=", "[", "tuple", "(", "arch", ")", "]", "\n", "\n", "", "for", "inode", "in", "range", "(", "2", ",", "num", ")", ":", "\n", "      ", "cur_nodes", "=", "get_combination", "(", "search_space", ",", "inode", ")", "\n", "new_all_archs", "=", "[", "]", "\n", "for", "previous_arch", "in", "all_archs", ":", "\n", "        ", "for", "cur_node", "in", "cur_nodes", ":", "\n", "          ", "new_all_archs", ".", "append", "(", "previous_arch", "+", "[", "tuple", "(", "cur_node", ")", "]", ")", "\n", "", "", "all_archs", "=", "new_all_archs", "\n", "", "if", "return_ori", ":", "\n", "      ", "return", "all_archs", "\n", "", "else", ":", "\n", "      ", "return", "[", "Structure", "(", "x", ")", "for", "x", "in", "all_archs", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.genotypes.get_combination": [[4, 18], ["range", "combs.append", "new_combs.append"], "function", ["None"], ["def", "get_combination", "(", "space", ",", "num", ")", ":", "\n", "  ", "combs", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num", ")", ":", "\n", "    ", "if", "i", "==", "0", ":", "\n", "      ", "for", "func", "in", "space", ":", "\n", "        ", "combs", ".", "append", "(", "[", "(", "func", ",", "i", ")", "]", ")", "\n", "", "", "else", ":", "\n", "      ", "new_combs", "=", "[", "]", "\n", "for", "string", "in", "combs", ":", "\n", "        ", "for", "func", "in", "space", ":", "\n", "          ", "xstring", "=", "string", "+", "[", "(", "func", ",", "i", ")", "]", "\n", "new_combs", ".", "append", "(", "xstring", ")", "\n", "", "", "combs", "=", "new_combs", "\n", "", "", "return", "combs", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.DownsampledImageNet.ImageNet16.__init__": [[47, 80], ["enumerate", "numpy.vstack().reshape", "DownsampledImageNet.ImageNet16.data.transpose", "DownsampledImageNet.ImageNet16._check_integrity", "RuntimeError", "os.path.join", "zip", "open", "DownsampledImageNet.ImageNet16.data.append", "DownsampledImageNet.ImageNet16.targets.extend", "numpy.vstack", "isinstance", "pickle.load", "pickle.load", "new_data.append", "new_targets.append"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.DownsampledImageNet.ImageNet16._check_integrity", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.load", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.load"], ["def", "__init__", "(", "self", ",", "root", ",", "train", ",", "transform", ",", "use_num_of_class_only", "=", "None", ")", ":", "\n", "    ", "self", ".", "root", "=", "root", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "train", "=", "train", "# training set or valid set", "\n", "if", "not", "self", ".", "_check_integrity", "(", ")", ":", "raise", "RuntimeError", "(", "'Dataset not found or corrupted.'", ")", "\n", "\n", "if", "self", ".", "train", ":", "downloaded_list", "=", "self", ".", "train_list", "\n", "else", ":", "downloaded_list", "=", "self", ".", "valid_list", "\n", "self", ".", "data", "=", "[", "]", "\n", "self", ".", "targets", "=", "[", "]", "\n", "\n", "# now load the picked numpy arrays", "\n", "for", "i", ",", "(", "file_name", ",", "checksum", ")", "in", "enumerate", "(", "downloaded_list", ")", ":", "\n", "      ", "file_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "file_name", ")", "\n", "#print ('Load {:}/{:02d}-th : {:}'.format(i, len(downloaded_list), file_path))", "\n", "with", "open", "(", "file_path", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "if", "sys", ".", "version_info", "[", "0", "]", "==", "2", ":", "\n", "          ", "entry", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "else", ":", "\n", "          ", "entry", "=", "pickle", ".", "load", "(", "f", ",", "encoding", "=", "'latin1'", ")", "\n", "", "self", ".", "data", ".", "append", "(", "entry", "[", "'data'", "]", ")", "\n", "self", ".", "targets", ".", "extend", "(", "entry", "[", "'labels'", "]", ")", "\n", "", "", "self", ".", "data", "=", "np", ".", "vstack", "(", "self", ".", "data", ")", ".", "reshape", "(", "-", "1", ",", "3", ",", "16", ",", "16", ")", "\n", "self", ".", "data", "=", "self", ".", "data", ".", "transpose", "(", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", "# convert to HWC", "\n", "if", "use_num_of_class_only", "is", "not", "None", ":", "\n", "      ", "assert", "isinstance", "(", "use_num_of_class_only", ",", "int", ")", "and", "use_num_of_class_only", ">", "0", "and", "use_num_of_class_only", "<", "1000", ",", "'invalid use_num_of_class_only : {:}'", ".", "format", "(", "use_num_of_class_only", ")", "\n", "new_data", ",", "new_targets", "=", "[", "]", ",", "[", "]", "\n", "for", "I", ",", "L", "in", "zip", "(", "self", ".", "data", ",", "self", ".", "targets", ")", ":", "\n", "        ", "if", "1", "<=", "L", "<=", "use_num_of_class_only", ":", "\n", "          ", "new_data", ".", "append", "(", "I", ")", "\n", "new_targets", ".", "append", "(", "L", ")", "\n", "", "", "self", ".", "data", "=", "new_data", "\n", "self", ".", "targets", "=", "new_targets", "\n", "#    self.mean.append(entry['mean'])", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.DownsampledImageNet.ImageNet16.__getitem__": [[89, 98], ["PIL.Image.fromarray", "DownsampledImageNet.ImageNet16.transform"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "    ", "img", ",", "target", "=", "self", ".", "data", "[", "index", "]", ",", "self", ".", "targets", "[", "index", "]", "-", "1", "\n", "\n", "img", "=", "Image", ".", "fromarray", "(", "img", ")", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "      ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "", "return", "img", ",", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.DownsampledImageNet.ImageNet16.__len__": [[99, 101], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "    ", "return", "len", "(", "self", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.DownsampledImageNet.ImageNet16._check_integrity": [[102, 110], ["os.path.join", "DownsampledImageNet.check_integrity"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.DownsampledImageNet.check_integrity"], ["", "def", "_check_integrity", "(", "self", ")", ":", "\n", "    ", "root", "=", "self", ".", "root", "\n", "for", "fentry", "in", "(", "self", ".", "train_list", "+", "self", ".", "valid_list", ")", ":", "\n", "      ", "filename", ",", "md5", "=", "fentry", "[", "0", "]", ",", "fentry", "[", "1", "]", "\n", "fpath", "=", "os", ".", "path", ".", "join", "(", "root", ",", "filename", ")", "\n", "if", "not", "check_integrity", "(", "fpath", ",", "md5", ")", ":", "\n", "        ", "return", "False", "\n", "", "", "return", "True", "", "", "", ""]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.DownsampledImageNet.calculate_md5": [[8, 14], ["hashlib.md5", "hashlib.md5.hexdigest", "open", "iter", "hashlib.md5.update", "f.read"], "function", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update"], ["def", "calculate_md5", "(", "fpath", ",", "chunk_size", "=", "1024", "*", "1024", ")", ":", "\n", "  ", "md5", "=", "hashlib", ".", "md5", "(", ")", "\n", "with", "open", "(", "fpath", ",", "'rb'", ")", "as", "f", ":", "\n", "    ", "for", "chunk", "in", "iter", "(", "lambda", ":", "f", ".", "read", "(", "chunk_size", ")", ",", "b''", ")", ":", "\n", "      ", "md5", ".", "update", "(", "chunk", ")", "\n", "", "", "return", "md5", ".", "hexdigest", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.DownsampledImageNet.check_md5": [[16, 18], ["DownsampledImageNet.calculate_md5"], "function", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.DownsampledImageNet.calculate_md5"], ["", "def", "check_md5", "(", "fpath", ",", "md5", ",", "**", "kwargs", ")", ":", "\n", "  ", "return", "md5", "==", "calculate_md5", "(", "fpath", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.DownsampledImageNet.check_integrity": [[20, 24], ["os.path.isfile", "DownsampledImageNet.check_md5"], "function", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.DownsampledImageNet.check_md5"], ["", "def", "check_integrity", "(", "fpath", ",", "md5", "=", "None", ")", ":", "\n", "  ", "if", "not", "os", ".", "path", ".", "isfile", "(", "fpath", ")", ":", "return", "False", "\n", "if", "md5", "is", "None", ":", "return", "True", "\n", "else", ":", "return", "check_md5", "(", "fpath", ",", "md5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_model.TinyNetwork.__init__": [[18, 58], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "enumerate", "copy.deepcopy", "len", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.distributions.dirichlet.Dirichlet", "torch.distributions.dirichlet.Dirichlet", "torch.distributions.dirichlet.Dirichlet", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "zip", "search_model.TinyNetwork.cells.append", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ones_like().cuda", "torch.ones_like().cuda", "torch.ones_like().cuda", "torch.ones_like().cuda", "torch.ones_like().cuda", "torch.ones_like().cuda", "torch.ones_like().cuda", "torch.ones_like().cuda", "torch.ones_like().cuda", "cell_operations.ResNetBasicblock", "search_cells.NAS201SearchCell_PartialChannel", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "len", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.NetworkImageNet.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C", ",", "N", ",", "max_nodes", ",", "num_classes", ",", "criterion", ",", "search_space", ",", "affine", "=", "False", ",", "track_running_stats", "=", "True", ",", "k", "=", "2", ",", "species", "=", "'softmax'", ",", "reg_type", "=", "'l2'", ",", "reg_scale", "=", "1e-3", ")", ":", "\n", "    ", "super", "(", "TinyNetwork", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_C", "=", "C", "\n", "self", ".", "_layerN", "=", "N", "\n", "self", ".", "max_nodes", "=", "max_nodes", "\n", "self", ".", "_criterion", "=", "criterion", "\n", "self", ".", "k", "=", "k", "\n", "self", ".", "species", "=", "species", "\n", "self", ".", "stem", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "C", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "C", ")", ")", "\n", "\n", "layer_channels", "=", "[", "C", "]", "*", "N", "+", "[", "C", "*", "2", "]", "+", "[", "C", "*", "2", "]", "*", "N", "+", "[", "C", "*", "4", "]", "+", "[", "C", "*", "4", "]", "*", "N", "\n", "layer_reductions", "=", "[", "False", "]", "*", "N", "+", "[", "True", "]", "+", "[", "False", "]", "*", "N", "+", "[", "True", "]", "+", "[", "False", "]", "*", "N", "\n", "\n", "C_prev", ",", "num_edge", ",", "edge2index", "=", "C", ",", "None", ",", "None", "\n", "self", ".", "cells", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "index", ",", "(", "C_curr", ",", "reduction", ")", "in", "enumerate", "(", "zip", "(", "layer_channels", ",", "layer_reductions", ")", ")", ":", "\n", "      ", "if", "reduction", ":", "\n", "        ", "cell", "=", "ResNetBasicblock", "(", "C_prev", ",", "C_curr", ",", "2", ")", "\n", "", "else", ":", "\n", "        ", "cell", "=", "SearchCell", "(", "C_prev", ",", "C_curr", ",", "1", ",", "max_nodes", ",", "search_space", ",", "affine", ",", "track_running_stats", ",", "k", ")", "\n", "if", "num_edge", "is", "None", ":", "num_edge", ",", "edge2index", "=", "cell", ".", "num_edges", ",", "cell", ".", "edge2index", "\n", "else", ":", "assert", "num_edge", "==", "cell", ".", "num_edges", "and", "edge2index", "==", "cell", ".", "edge2index", ",", "'invalid {:} vs. {:}.'", ".", "format", "(", "num_edge", ",", "cell", ".", "num_edges", ")", "\n", "", "self", ".", "cells", ".", "append", "(", "cell", ")", "\n", "C_prev", "=", "cell", ".", "out_dim", "\n", "", "self", ".", "op_names", "=", "deepcopy", "(", "search_space", ")", "\n", "self", ".", "_Layer", "=", "len", "(", "self", ".", "cells", ")", "\n", "self", ".", "edge2index", "=", "edge2index", "\n", "self", ".", "lastact", "=", "nn", ".", "Sequential", "(", "nn", ".", "BatchNorm2d", "(", "C_prev", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "global_pooling", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "C_prev", ",", "num_classes", ")", "\n", "self", ".", "_arch_parameters", "=", "nn", ".", "Parameter", "(", "1e-3", "*", "torch", ".", "randn", "(", "num_edge", ",", "len", "(", "search_space", ")", ")", ")", "\n", "self", ".", "tau", "=", "10", "if", "species", "==", "'gumbel'", "else", "None", "\n", "self", ".", "_mask", "=", "None", "\n", "\n", "#### reg", "\n", "self", ".", "reg_type", "=", "reg_type", "\n", "self", ".", "reg_scale", "=", "reg_scale", "\n", "self", ".", "anchor", "=", "Dirichlet", "(", "torch", ".", "ones_like", "(", "self", ".", "_arch_parameters", ")", ".", "cuda", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_model.TinyNetwork._loss": [[59, 65], ["search_model.TinyNetwork.", "search_model.TinyNetwork._criterion", "search_model.TinyNetwork._get_kl_reg"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search.Network._get_kl_reg"], ["", "def", "_loss", "(", "self", ",", "input", ",", "target", ")", ":", "\n", "    ", "logits", "=", "self", "(", "input", ")", "\n", "loss", "=", "self", ".", "_criterion", "(", "logits", ",", "target", ")", "\n", "if", "self", ".", "reg_type", "==", "'kl'", ":", "\n", "      ", "loss", "+=", "self", ".", "_get_kl_reg", "(", ")", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_model.TinyNetwork._get_kl_reg": [[66, 73], ["torch.distributions.dirichlet.Dirichlet", "torch.distributions.dirichlet.Dirichlet", "torch.distributions.dirichlet.Dirichlet", "torch.elu", "torch.elu", "torch.elu", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.distributions.kl.kl_divergence", "torch.distributions.kl.kl_divergence", "torch.distributions.kl.kl_divergence"], "methods", ["None"], ["", "def", "_get_kl_reg", "(", "self", ")", ":", "\n", "    ", "assert", "(", "self", ".", "species", "==", "'dirichlet'", ")", "# kl implemented only for Dirichlet", "\n", "cons", "=", "(", "F", ".", "elu", "(", "self", ".", "_arch_parameters", ")", "+", "1", ")", "\n", "q", "=", "Dirichlet", "(", "cons", ")", "\n", "p", "=", "self", ".", "anchor", "\n", "kl_reg", "=", "self", ".", "reg_scale", "*", "torch", ".", "sum", "(", "kl_divergence", "(", "q", ",", "p", ")", ")", "\n", "return", "kl_reg", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_model.TinyNetwork.get_weights": [[74, 79], ["list", "list", "list", "list", "list", "search_model.TinyNetwork.classifier.parameters", "search_model.TinyNetwork.stem.parameters", "search_model.TinyNetwork.cells.parameters", "search_model.TinyNetwork.lastact.parameters", "search_model.TinyNetwork.global_pooling.parameters"], "methods", ["None"], ["", "def", "get_weights", "(", "self", ")", ":", "\n", "    ", "xlist", "=", "list", "(", "self", ".", "stem", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "cells", ".", "parameters", "(", ")", ")", "\n", "xlist", "+=", "list", "(", "self", ".", "lastact", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "global_pooling", ".", "parameters", "(", ")", ")", "\n", "xlist", "+=", "list", "(", "self", ".", "classifier", ".", "parameters", "(", ")", ")", "\n", "return", "xlist", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_model.TinyNetwork.set_tau": [[80, 82], ["None"], "methods", ["None"], ["", "def", "set_tau", "(", "self", ",", "tau", ")", ":", "\n", "    ", "self", ".", "tau", "=", "tau", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_model.TinyNetwork.get_tau": [[83, 85], ["None"], "methods", ["None"], ["", "def", "get_tau", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "tau", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_model.TinyNetwork.arch_parameters": [[86, 88], ["None"], "methods", ["None"], ["", "def", "arch_parameters", "(", "self", ")", ":", "\n", "    ", "return", "[", "self", ".", "_arch_parameters", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_model.TinyNetwork.show_arch_parameters": [[89, 94], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "logging.info", "logging.info", "utils.process_step_matrix().cpu", "utils.process_step_matrix", "torch.elu", "torch.elu", "torch.elu"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.process_step_matrix"], ["", "def", "show_arch_parameters", "(", "self", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "      ", "logging", ".", "info", "(", "'arch-parameters :\\n{:}'", ".", "format", "(", "process_step_matrix", "(", "self", ".", "_arch_parameters", ",", "'softmax'", ",", "self", ".", "_mask", ")", ".", "cpu", "(", ")", ")", ")", "\n", "if", "self", ".", "species", "==", "'dirichlet'", ":", "\n", "        ", "logging", ".", "info", "(", "'concentration :\\n{:}'", ".", "format", "(", "(", "F", ".", "elu", "(", "self", ".", "_arch_parameters", ")", "+", "1", ")", ".", "cpu", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_model.TinyNetwork.get_message": [[95, 100], ["search_model.TinyNetwork.extra_repr", "enumerate", "len", "cell.extra_repr"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_cells.NAS201SearchCell.extra_repr", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_cells.NAS201SearchCell.extra_repr"], ["", "", "", "def", "get_message", "(", "self", ")", ":", "\n", "    ", "string", "=", "self", ".", "extra_repr", "(", ")", "\n", "for", "i", ",", "cell", "in", "enumerate", "(", "self", ".", "cells", ")", ":", "\n", "      ", "string", "+=", "'\\n {:02d}/{:02d} :: {:}'", ".", "format", "(", "i", ",", "len", "(", "self", ".", "cells", ")", ",", "cell", ".", "extra_repr", "(", ")", ")", "\n", "", "return", "string", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_model.TinyNetwork.extra_repr": [[101, 103], ["None"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", ":", "\n", "    ", "return", "(", "'{name}(C={_C}, Max-Nodes={max_nodes}, N={_layerN}, L={_Layer})'", ".", "format", "(", "name", "=", "self", ".", "__class__", ".", "__name__", ",", "**", "self", ".", "__dict__", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_model.TinyNetwork.genotype": [[104, 117], ["utils.process_step_matrix", "range", "genotypes.Structure", "range", "genotypes.append", "xlist.append", "tuple", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "weights.argmax().item", "weights.argmax"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.process_step_matrix"], ["", "def", "genotype", "(", "self", ")", ":", "\n", "    ", "genotypes", "=", "[", "]", "\n", "alphas", "=", "process_step_matrix", "(", "self", ".", "_arch_parameters", ",", "'softmax'", ",", "self", ".", "_mask", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "self", ".", "max_nodes", ")", ":", "\n", "      ", "xlist", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "i", ")", ":", "\n", "        ", "node_str", "=", "'{:}<-{:}'", ".", "format", "(", "i", ",", "j", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "          ", "weights", "=", "alphas", "[", "self", ".", "edge2index", "[", "node_str", "]", "]", "\n", "op_name", "=", "self", ".", "op_names", "[", "weights", ".", "argmax", "(", ")", ".", "item", "(", ")", "]", "\n", "", "xlist", ".", "append", "(", "(", "op_name", ",", "j", ")", ")", "\n", "", "genotypes", ".", "append", "(", "tuple", "(", "xlist", ")", ")", "\n", "", "return", "Structure", "(", "genotypes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_model.TinyNetwork.pruning": [[118, 120], ["utils.prune"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.prune"], ["", "def", "pruning", "(", "self", ",", "num_keep", ")", ":", "\n", "    ", "self", ".", "_mask", "=", "prune", "(", "self", ".", "_arch_parameters", ",", "num_keep", ",", "self", ".", "_mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_model.TinyNetwork.forward": [[121, 136], ["utils.process_step_matrix", "search_model.TinyNetwork.stem", "enumerate", "search_model.TinyNetwork.lastact", "search_model.TinyNetwork.global_pooling", "out.view.view.view", "search_model.TinyNetwork.classifier", "isinstance", "out.view.view.size", "cell", "cell"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.process_step_matrix"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "    ", "alphas", "=", "process_step_matrix", "(", "self", ".", "_arch_parameters", ",", "self", ".", "species", ",", "self", ".", "_mask", ",", "self", ".", "tau", ")", "\n", "\n", "feature", "=", "self", ".", "stem", "(", "inputs", ")", "\n", "for", "i", ",", "cell", "in", "enumerate", "(", "self", ".", "cells", ")", ":", "\n", "      ", "if", "isinstance", "(", "cell", ",", "SearchCell", ")", ":", "\n", "        ", "feature", "=", "cell", "(", "feature", ",", "alphas", ")", "\n", "", "else", ":", "\n", "        ", "feature", "=", "cell", "(", "feature", ")", "\n", "\n", "", "", "out", "=", "self", ".", "lastact", "(", "feature", ")", "\n", "out", "=", "self", ".", "global_pooling", "(", "out", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "logits", "=", "self", ".", "classifier", "(", "out", ")", "\n", "return", "logits", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_model.TinyNetwork.wider": [[137, 142], ["isinstance", "cell.wider"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.wider"], ["", "def", "wider", "(", "self", ",", "k", ")", ":", "\n", "    ", "self", ".", "k", "=", "k", "\n", "for", "cell", "in", "self", ".", "cells", ":", "\n", "      ", "if", "isinstance", "(", "cell", ",", "SearchCell", ")", ":", "\n", "        ", "cell", ".", "wider", "(", "k", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_model_gdas.TinyNetworkGDAS.__init__": [[15, 47], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.ModuleList", "torch.ModuleList", "enumerate", "copy.deepcopy", "len", "torch.Sequential", "torch.Sequential", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Linear", "torch.Linear", "torch.Parameter", "torch.Parameter", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "zip", "search_model_gdas.TinyNetworkGDAS.cells.append", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "cell_operations.ResNetBasicblock", "search_cells.NAS201SearchCell", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "len"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.NetworkImageNet.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C", ",", "N", ",", "max_nodes", ",", "num_classes", ",", "criterion", ",", "search_space", ",", "affine", "=", "False", ",", "track_running_stats", "=", "True", ")", ":", "\n", "    ", "super", "(", "TinyNetworkGDAS", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_C", "=", "C", "\n", "self", ".", "_layerN", "=", "N", "\n", "self", ".", "max_nodes", "=", "max_nodes", "\n", "self", ".", "_criterion", "=", "criterion", "\n", "self", ".", "stem", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "C", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "C", ")", ")", "\n", "\n", "layer_channels", "=", "[", "C", "]", "*", "N", "+", "[", "C", "*", "2", "]", "+", "[", "C", "*", "2", "]", "*", "N", "+", "[", "C", "*", "4", "]", "+", "[", "C", "*", "4", "]", "*", "N", "\n", "layer_reductions", "=", "[", "False", "]", "*", "N", "+", "[", "True", "]", "+", "[", "False", "]", "*", "N", "+", "[", "True", "]", "+", "[", "False", "]", "*", "N", "\n", "\n", "C_prev", ",", "num_edge", ",", "edge2index", "=", "C", ",", "None", ",", "None", "\n", "self", ".", "cells", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "index", ",", "(", "C_curr", ",", "reduction", ")", "in", "enumerate", "(", "zip", "(", "layer_channels", ",", "layer_reductions", ")", ")", ":", "\n", "      ", "if", "reduction", ":", "\n", "        ", "cell", "=", "ResNetBasicblock", "(", "C_prev", ",", "C_curr", ",", "2", ")", "\n", "", "else", ":", "\n", "        ", "cell", "=", "SearchCell", "(", "C_prev", ",", "C_curr", ",", "1", ",", "max_nodes", ",", "search_space", ",", "affine", ",", "track_running_stats", ")", "\n", "if", "num_edge", "is", "None", ":", "num_edge", ",", "edge2index", "=", "cell", ".", "num_edges", ",", "cell", ".", "edge2index", "\n", "else", ":", "assert", "num_edge", "==", "cell", ".", "num_edges", "and", "edge2index", "==", "cell", ".", "edge2index", ",", "'invalid {:} vs. {:}.'", ".", "format", "(", "num_edge", ",", "cell", ".", "num_edges", ")", "\n", "", "self", ".", "cells", ".", "append", "(", "cell", ")", "\n", "C_prev", "=", "cell", ".", "out_dim", "\n", "", "self", ".", "op_names", "=", "deepcopy", "(", "search_space", ")", "\n", "self", ".", "_Layer", "=", "len", "(", "self", ".", "cells", ")", "\n", "self", ".", "edge2index", "=", "edge2index", "\n", "self", ".", "lastact", "=", "nn", ".", "Sequential", "(", "nn", ".", "BatchNorm2d", "(", "C_prev", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "global_pooling", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "C_prev", ",", "num_classes", ")", "\n", "self", ".", "_arch_parameters", "=", "nn", ".", "Parameter", "(", "1e-3", "*", "torch", ".", "randn", "(", "num_edge", ",", "len", "(", "search_space", ")", ")", ")", "\n", "self", ".", "tau", "=", "10", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_model_gdas.TinyNetworkGDAS._loss": [[48, 51], ["search_model_gdas.TinyNetworkGDAS.", "search_model_gdas.TinyNetworkGDAS._criterion"], "methods", ["None"], ["", "def", "_loss", "(", "self", ",", "input", ",", "target", ",", "updateType", "=", "None", ")", ":", "\n", "    ", "logits", "=", "self", "(", "input", ",", "updateType", ")", "\n", "return", "self", ".", "_criterion", "(", "logits", ",", "target", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_model_gdas.TinyNetworkGDAS.get_weights": [[52, 57], ["list", "list", "list", "list", "list", "search_model_gdas.TinyNetworkGDAS.classifier.parameters", "search_model_gdas.TinyNetworkGDAS.stem.parameters", "search_model_gdas.TinyNetworkGDAS.cells.parameters", "search_model_gdas.TinyNetworkGDAS.lastact.parameters", "search_model_gdas.TinyNetworkGDAS.global_pooling.parameters"], "methods", ["None"], ["", "def", "get_weights", "(", "self", ")", ":", "\n", "    ", "xlist", "=", "list", "(", "self", ".", "stem", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "cells", ".", "parameters", "(", ")", ")", "\n", "xlist", "+=", "list", "(", "self", ".", "lastact", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "global_pooling", ".", "parameters", "(", ")", ")", "\n", "xlist", "+=", "list", "(", "self", ".", "classifier", ".", "parameters", "(", ")", ")", "\n", "return", "xlist", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_model_gdas.TinyNetworkGDAS.set_tau": [[58, 60], ["None"], "methods", ["None"], ["", "def", "set_tau", "(", "self", ",", "tau", ")", ":", "\n", "    ", "self", ".", "tau", "=", "tau", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_model_gdas.TinyNetworkGDAS.get_tau": [[61, 63], ["None"], "methods", ["None"], ["", "def", "get_tau", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "tau", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_model_gdas.TinyNetworkGDAS.arch_parameters": [[64, 66], ["None"], "methods", ["None"], ["", "def", "arch_parameters", "(", "self", ")", ":", "\n", "    ", "return", "[", "self", ".", "_arch_parameters", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_model_gdas.TinyNetworkGDAS.show_arch_parameters": [[67, 70], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "logging.info", "utils.process_step_matrix().cpu", "utils.process_step_matrix"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.process_step_matrix"], ["", "def", "show_arch_parameters", "(", "self", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "      ", "logging", ".", "info", "(", "'arch-parameters :\\n{:}'", ".", "format", "(", "process_step_matrix", "(", "self", ".", "_arch_parameters", ",", "'softmax'", ",", "None", ")", ".", "cpu", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_model_gdas.TinyNetworkGDAS.get_message": [[71, 76], ["search_model_gdas.TinyNetworkGDAS.extra_repr", "enumerate", "len", "cell.extra_repr"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_cells.NAS201SearchCell.extra_repr", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_cells.NAS201SearchCell.extra_repr"], ["", "", "def", "get_message", "(", "self", ")", ":", "\n", "    ", "string", "=", "self", ".", "extra_repr", "(", ")", "\n", "for", "i", ",", "cell", "in", "enumerate", "(", "self", ".", "cells", ")", ":", "\n", "      ", "string", "+=", "'\\n {:02d}/{:02d} :: {:}'", ".", "format", "(", "i", ",", "len", "(", "self", ".", "cells", ")", ",", "cell", ".", "extra_repr", "(", ")", ")", "\n", "", "return", "string", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_model_gdas.TinyNetworkGDAS.extra_repr": [[77, 79], ["None"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", ":", "\n", "    ", "return", "(", "'{name}(C={_C}, Max-Nodes={max_nodes}, N={_layerN}, L={_Layer})'", ".", "format", "(", "name", "=", "self", ".", "__class__", ".", "__name__", ",", "**", "self", ".", "__dict__", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_model_gdas.TinyNetworkGDAS.genotype": [[80, 92], ["range", "genotypes.Structure", "range", "genotypes.append", "xlist.append", "tuple", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "weights.argmax().item", "weights.argmax"], "methods", ["None"], ["", "def", "genotype", "(", "self", ")", ":", "\n", "    ", "genotypes", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "self", ".", "max_nodes", ")", ":", "\n", "      ", "xlist", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "i", ")", ":", "\n", "        ", "node_str", "=", "'{:}<-{:}'", ".", "format", "(", "i", ",", "j", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "          ", "weights", "=", "self", ".", "_arch_parameters", "[", "self", ".", "edge2index", "[", "node_str", "]", "]", "\n", "op_name", "=", "self", ".", "op_names", "[", "weights", ".", "argmax", "(", ")", ".", "item", "(", ")", "]", "\n", "", "xlist", ".", "append", "(", "(", "op_name", ",", "j", ")", ")", "\n", "", "genotypes", ".", "append", "(", "tuple", "(", "xlist", ")", ")", "\n", "", "return", "Structure", "(", "genotypes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_model_gdas.TinyNetworkGDAS.forward": [[93, 117], ["search_model_gdas.TinyNetworkGDAS.stem", "enumerate", "search_model_gdas.TinyNetworkGDAS.lastact", "search_model_gdas.TinyNetworkGDAS.global_pooling", "out.view.view.view", "search_model_gdas.TinyNetworkGDAS.classifier", "torch.functional.softmax", "torch.functional.softmax", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "isinstance", "out.view.view.size", "torch.empty_like().exponential_().log", "torch.empty_like().exponential_().log", "torch.empty_like().exponential_().log", "torch.empty_like().exponential_().log", "torch.functional.softmax.max", "torch.isinf().any", "torch.isinf().any", "torch.isinf().any", "torch.isinf().any", "torch.isinf().any", "torch.isinf().any", "torch.isinf().any", "torch.isinf().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "cell.forward_gdas", "cell", "search_model_gdas.TinyNetworkGDAS._arch_parameters.log_softmax", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.functional.softmax.detach", "torch.empty_like().exponential_", "torch.empty_like().exponential_", "torch.empty_like().exponential_", "torch.empty_like().exponential_", "torch.isinf", "torch.isinf", "torch.isinf", "torch.isinf", "torch.isinf", "torch.isinf", "torch.isinf", "torch.isinf", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.empty_like", "torch.empty_like", "torch.empty_like", "torch.empty_like"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_cells.NAS201SearchCell.forward_gdas"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "updateType", "=", "None", ")", ":", "\n", "    ", "while", "True", ":", "\n", "      ", "gumbels", "=", "-", "torch", ".", "empty_like", "(", "self", ".", "_arch_parameters", ")", ".", "exponential_", "(", ")", ".", "log", "(", ")", "\n", "logits", "=", "(", "self", ".", "_arch_parameters", ".", "log_softmax", "(", "dim", "=", "1", ")", "+", "gumbels", ")", "/", "self", ".", "tau", "\n", "probs", "=", "nn", ".", "functional", ".", "softmax", "(", "logits", ",", "dim", "=", "1", ")", "\n", "index", "=", "probs", ".", "max", "(", "-", "1", ",", "keepdim", "=", "True", ")", "[", "1", "]", "\n", "one_h", "=", "torch", ".", "zeros_like", "(", "logits", ")", ".", "scatter_", "(", "-", "1", ",", "index", ",", "1.0", ")", "\n", "hardwts", "=", "one_h", "-", "probs", ".", "detach", "(", ")", "+", "probs", "\n", "if", "(", "torch", ".", "isinf", "(", "gumbels", ")", ".", "any", "(", ")", ")", "or", "(", "torch", ".", "isinf", "(", "probs", ")", ".", "any", "(", ")", ")", "or", "(", "torch", ".", "isnan", "(", "probs", ")", ".", "any", "(", ")", ")", ":", "\n", "        ", "continue", "\n", "", "else", ":", "break", "\n", "\n", "", "feature", "=", "self", ".", "stem", "(", "inputs", ")", "\n", "for", "i", ",", "cell", "in", "enumerate", "(", "self", ".", "cells", ")", ":", "\n", "      ", "if", "isinstance", "(", "cell", ",", "SearchCell", ")", ":", "\n", "        ", "feature", "=", "cell", ".", "forward_gdas", "(", "feature", ",", "hardwts", ",", "index", ")", "\n", "", "else", ":", "\n", "        ", "feature", "=", "cell", "(", "feature", ")", "\n", "", "", "out", "=", "self", ".", "lastact", "(", "feature", ")", "\n", "out", "=", "self", ".", "global_pooling", "(", "out", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "logits", "=", "self", ".", "classifier", "(", "out", ")", "\n", "\n", "return", "logits", "\n", "", "", ""]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.train_search.distill": [[95, 112], ["result.split.split", "result[].replace().split", "result[].replace().split", "result[].replace().split", "float", "float", "float", "float", "float", "float", "float", "float", "[].strip", "[].strip", "[].strip", "[].strip", "[].strip", "[].strip", "[].strip", "[].strip", "result[].replace", "result[].replace", "result[].replace", "cifar10[].strip", "cifar100[].strip", "cifar100[].strip", "imagenet16[].strip", "imagenet16[].strip"], "function", ["None"], ["", "def", "distill", "(", "result", ")", ":", "\n", "    ", "result", "=", "result", ".", "split", "(", "'\\n'", ")", "\n", "cifar10", "=", "result", "[", "5", "]", ".", "replace", "(", "' '", ",", "''", ")", ".", "split", "(", "':'", ")", "\n", "cifar100", "=", "result", "[", "7", "]", ".", "replace", "(", "' '", ",", "''", ")", ".", "split", "(", "':'", ")", "\n", "imagenet16", "=", "result", "[", "9", "]", ".", "replace", "(", "' '", ",", "''", ")", ".", "split", "(", "':'", ")", "\n", "\n", "cifar10_train", "=", "float", "(", "cifar10", "[", "1", "]", ".", "strip", "(", "',test'", ")", "[", "-", "7", ":", "-", "2", "]", ".", "strip", "(", "'='", ")", ")", "\n", "cifar10_test", "=", "float", "(", "cifar10", "[", "2", "]", "[", "-", "7", ":", "-", "2", "]", ".", "strip", "(", "'='", ")", ")", "\n", "cifar100_train", "=", "float", "(", "cifar100", "[", "1", "]", ".", "strip", "(", "',valid'", ")", "[", "-", "7", ":", "-", "2", "]", ".", "strip", "(", "'='", ")", ")", "\n", "cifar100_valid", "=", "float", "(", "cifar100", "[", "2", "]", ".", "strip", "(", "',test'", ")", "[", "-", "7", ":", "-", "2", "]", ".", "strip", "(", "'='", ")", ")", "\n", "cifar100_test", "=", "float", "(", "cifar100", "[", "3", "]", "[", "-", "7", ":", "-", "2", "]", ".", "strip", "(", "'='", ")", ")", "\n", "imagenet16_train", "=", "float", "(", "imagenet16", "[", "1", "]", ".", "strip", "(", "',valid'", ")", "[", "-", "7", ":", "-", "2", "]", ".", "strip", "(", "'='", ")", ")", "\n", "imagenet16_valid", "=", "float", "(", "imagenet16", "[", "2", "]", ".", "strip", "(", "',test'", ")", "[", "-", "7", ":", "-", "2", "]", ".", "strip", "(", "'='", ")", ")", "\n", "imagenet16_test", "=", "float", "(", "imagenet16", "[", "3", "]", "[", "-", "7", ":", "-", "2", "]", ".", "strip", "(", "'='", ")", ")", "\n", "\n", "return", "cifar10_train", ",", "cifar10_test", ",", "cifar100_train", ",", "cifar100_valid", ",", "cifar100_test", ",", "imagenet16_train", ",", "imagenet16_valid", ",", "imagenet16_test", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.train_search.main": [[114, 245], ["torch.set_num_threads", "torch.set_num_threads", "torch.set_num_threads", "torch.set_num_threads", "torch.set_num_threads", "numpy.random.seed", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "logging.info", "logging.info", "torch.CrossEntropyLoss", "criterion.cuda.cuda", "search_model.TinyNetwork.cuda", "logging.info", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "len", "list", "int", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "architect.Architect", "range", "writer.close", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "logging.info", "sys.exit", "nas_201_api.NASBench201API", "utils.count_parameters_in_MB", "search_model.TinyNetwork.get_weights", "utils._data_transforms_cifar10", "torchvision.CIFAR10", "range", "numpy.floor", "float", "logging.info", "search_model.TinyNetwork.genotype", "logging.info", "search_model.TinyNetwork.show_arch_parameters", "train_search.train", "logging.info", "train_search.infer", "logging.info", "torch.optim.lr_scheduler.CosineAnnealingLR.step", "search_model_gdas.TinyNetworkGDAS", "search_model.TinyNetwork", "search_model.TinyNetwork", "utils._data_transforms_cifar100", "torchvision.CIFAR100", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.sampler.SubsetRandomSampler", "torch.optim.lr_scheduler.CosineAnnealingLR.get_lr", "nas_201_api.NASBench201API.query_by_arch", "logging.info", "train_search.distill", "logging.info", "logging.info", "logging.info", "writer.add_scalars", "writer.add_scalars", "writer.add_scalars", "writer.add_scalars", "writer.add_scalars", "utils.save_checkpoint", "logging.info", "search_model.TinyNetwork.set_tau", "search_model.TinyNetwork", "utils._data_transforms_svhn", "torchvision.SVHN", "search_model.TinyNetwork.genotype", "transforms.Compose", "ImageNet16", "search_model.TinyNetwork.state_dict", "torch.optim.SGD.state_dict", "search_model.TinyNetwork.arch_parameters", "transforms.RandomHorizontalFlip", "transforms.RandomCrop", "transforms.ToTensor", "transforms.Normalize", "len", "os.path.join"], "function", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.count_parameters_in_MB", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_model_gdas.TinyNetworkGDAS.get_weights", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils._data_transforms_cifar10", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.genotype", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.show_arch_parameters", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.train_search_imagenet.train", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.train_search_imagenet.infer", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.architect.Architect.step", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils._data_transforms_cifar100", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.train_search.distill", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.save_checkpoint", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_model_gdas.TinyNetworkGDAS.set_tau", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils._data_transforms_svhn", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.genotype", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.arch_parameters"], ["", "def", "main", "(", ")", ":", "\n", "    ", "torch", ".", "set_num_threads", "(", "3", ")", "\n", "if", "not", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "logging", ".", "info", "(", "'no gpu device available'", ")", "\n", "sys", ".", "exit", "(", "1", ")", "\n", "\n", "", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "cuda", ".", "set_device", "(", "args", ".", "gpu", ")", "\n", "cudnn", ".", "benchmark", "=", "True", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "cudnn", ".", "enabled", "=", "True", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "logging", ".", "info", "(", "'gpu device = %d'", "%", "args", ".", "gpu", ")", "\n", "logging", ".", "info", "(", "\"args = %s\"", ",", "args", ")", "\n", "\n", "if", "not", "'debug'", "in", "args", ".", "save", ":", "\n", "        ", "api", "=", "API", "(", "'pth file path'", ")", "\n", "", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "criterion", "=", "criterion", ".", "cuda", "(", ")", "\n", "\n", "if", "args", ".", "method", "==", "'gdas'", "or", "args", ".", "method", "==", "'snas'", ":", "\n", "# Create the decrease step for the gumbel softmax temperature", "\n", "        ", "tau_step", "=", "(", "args", ".", "tau_min", "-", "args", ".", "tau_max", ")", "/", "args", ".", "epochs", "\n", "tau_epoch", "=", "args", ".", "tau_max", "\n", "if", "args", ".", "method", "==", "'gdas'", ":", "\n", "            ", "model", "=", "TinyNetworkGDAS", "(", "C", "=", "args", ".", "init_channels", ",", "N", "=", "5", ",", "max_nodes", "=", "4", ",", "num_classes", "=", "n_classes", ",", "criterion", "=", "criterion", ",", "search_space", "=", "NAS_BENCH_201", ")", "\n", "", "else", ":", "\n", "            ", "model", "=", "TinyNetwork", "(", "C", "=", "args", ".", "init_channels", ",", "N", "=", "5", ",", "max_nodes", "=", "4", ",", "num_classes", "=", "n_classes", ",", "\n", "criterion", "=", "criterion", ",", "search_space", "=", "NAS_BENCH_201", ",", "k", "=", "args", ".", "k", ",", "species", "=", "'gumbel'", ")", "\n", "", "", "elif", "args", ".", "method", "==", "'dirichlet'", ":", "\n", "        ", "model", "=", "TinyNetwork", "(", "C", "=", "args", ".", "init_channels", ",", "N", "=", "5", ",", "max_nodes", "=", "4", ",", "num_classes", "=", "n_classes", ",", "\n", "criterion", "=", "criterion", ",", "search_space", "=", "NAS_BENCH_201", ",", "k", "=", "args", ".", "k", ",", "species", "=", "'dirichlet'", ",", "\n", "reg_type", "=", "args", ".", "reg_type", ",", "reg_scale", "=", "args", ".", "reg_scale", ")", "\n", "", "elif", "args", ".", "method", "==", "'darts'", ":", "\n", "        ", "model", "=", "TinyNetwork", "(", "C", "=", "args", ".", "init_channels", ",", "N", "=", "5", ",", "max_nodes", "=", "4", ",", "num_classes", "=", "n_classes", ",", "\n", "criterion", "=", "criterion", ",", "search_space", "=", "NAS_BENCH_201", ",", "k", "=", "args", ".", "k", ",", "species", "=", "'softmax'", ")", "\n", "", "model", "=", "model", ".", "cuda", "(", ")", "\n", "logging", ".", "info", "(", "\"param size = %fMB\"", ",", "utils", ".", "count_parameters_in_MB", "(", "model", ")", ")", "\n", "\n", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "\n", "model", ".", "get_weights", "(", ")", ",", "\n", "args", ".", "learning_rate", ",", "\n", "momentum", "=", "args", ".", "momentum", ",", "\n", "weight_decay", "=", "args", ".", "weight_decay", ")", "\n", "\n", "if", "args", ".", "dataset", "==", "'cifar10'", ":", "\n", "        ", "train_transform", ",", "valid_transform", "=", "utils", ".", "_data_transforms_cifar10", "(", "args", ")", "\n", "train_data", "=", "dset", ".", "CIFAR10", "(", "root", "=", "args", ".", "data", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "train_transform", ")", "\n", "", "elif", "args", ".", "dataset", "==", "'cifar100'", ":", "\n", "        ", "train_transform", ",", "valid_transform", "=", "utils", ".", "_data_transforms_cifar100", "(", "args", ")", "\n", "train_data", "=", "dset", ".", "CIFAR100", "(", "root", "=", "args", ".", "data", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "train_transform", ")", "\n", "", "elif", "args", ".", "dataset", "==", "'svhn'", ":", "\n", "        ", "train_transform", ",", "valid_transform", "=", "utils", ".", "_data_transforms_svhn", "(", "args", ")", "\n", "train_data", "=", "dset", ".", "SVHN", "(", "root", "=", "args", ".", "data", ",", "split", "=", "'train'", ",", "download", "=", "True", ",", "transform", "=", "train_transform", ")", "\n", "", "elif", "args", ".", "dataset", "==", "'imagenet16-120'", ":", "\n", "        ", "import", "torchvision", ".", "transforms", "as", "transforms", "\n", "from", "nasbench201", ".", "DownsampledImageNet", "import", "ImageNet16", "\n", "mean", "=", "[", "x", "/", "255", "for", "x", "in", "[", "122.68", ",", "116.66", ",", "104.01", "]", "]", "\n", "std", "=", "[", "x", "/", "255", "for", "x", "in", "[", "63.22", ",", "61.26", ",", "65.09", "]", "]", "\n", "lists", "=", "[", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "transforms", ".", "RandomCrop", "(", "16", ",", "padding", "=", "2", ")", ",", "transforms", ".", "ToTensor", "(", ")", ",", "transforms", ".", "Normalize", "(", "mean", ",", "std", ")", "]", "\n", "train_transform", "=", "transforms", ".", "Compose", "(", "lists", ")", "\n", "train_data", "=", "ImageNet16", "(", "root", "=", "os", ".", "path", ".", "join", "(", "args", ".", "data", ",", "'imagenet16'", ")", ",", "train", "=", "True", ",", "transform", "=", "train_transform", ",", "use_num_of_class_only", "=", "120", ")", "\n", "assert", "len", "(", "train_data", ")", "==", "151700", "\n", "\n", "", "num_train", "=", "len", "(", "train_data", ")", "\n", "indices", "=", "list", "(", "range", "(", "num_train", ")", ")", "\n", "split", "=", "int", "(", "np", ".", "floor", "(", "args", ".", "train_portion", "*", "num_train", ")", ")", "\n", "\n", "train_queue", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "train_data", ",", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "sampler", "=", "torch", ".", "utils", ".", "data", ".", "sampler", ".", "SubsetRandomSampler", "(", "indices", "[", ":", "split", "]", ")", ",", "\n", "pin_memory", "=", "True", ")", "\n", "\n", "valid_queue", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "train_data", ",", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "sampler", "=", "torch", ".", "utils", ".", "data", ".", "sampler", ".", "SubsetRandomSampler", "(", "indices", "[", "split", ":", "num_train", "]", ")", ",", "\n", "pin_memory", "=", "True", ")", "\n", "\n", "scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "CosineAnnealingLR", "(", "\n", "optimizer", ",", "float", "(", "args", ".", "epochs", ")", ",", "eta_min", "=", "args", ".", "learning_rate_min", ")", "\n", "\n", "architect", "=", "Architect", "(", "model", ",", "args", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "args", ".", "epochs", ")", ":", "\n", "        ", "lr", "=", "scheduler", ".", "get_lr", "(", ")", "[", "0", "]", "\n", "logging", ".", "info", "(", "'epoch %d lr %e'", ",", "epoch", ",", "lr", ")", "\n", "\n", "genotype", "=", "model", ".", "genotype", "(", ")", "\n", "logging", ".", "info", "(", "'genotype = %s'", ",", "genotype", ")", "\n", "model", ".", "show_arch_parameters", "(", ")", "\n", "\n", "# training", "\n", "train_acc", ",", "train_obj", "=", "train", "(", "train_queue", ",", "valid_queue", ",", "model", ",", "architect", ",", "criterion", ",", "optimizer", ",", "lr", ",", "epoch", ")", "\n", "logging", ".", "info", "(", "'train_acc %f'", ",", "train_acc", ")", "\n", "\n", "# validation", "\n", "valid_acc", ",", "valid_obj", "=", "infer", "(", "valid_queue", ",", "model", ",", "criterion", ")", "\n", "logging", ".", "info", "(", "'valid_acc %f'", ",", "valid_acc", ")", "\n", "\n", "if", "not", "'debug'", "in", "args", ".", "save", ":", "\n", "# nasbench201", "\n", "            ", "result", "=", "api", ".", "query_by_arch", "(", "model", ".", "genotype", "(", ")", ")", "\n", "logging", ".", "info", "(", "'{:}'", ".", "format", "(", "result", ")", ")", "\n", "cifar10_train", ",", "cifar10_test", ",", "cifar100_train", ",", "cifar100_valid", ",", "cifar100_test", ",", "imagenet16_train", ",", "imagenet16_valid", ",", "imagenet16_test", "=", "distill", "(", "result", ")", "\n", "logging", ".", "info", "(", "'cifar10 train %f test %f'", ",", "cifar10_train", ",", "cifar10_test", ")", "\n", "logging", ".", "info", "(", "'cifar100 train %f valid %f test %f'", ",", "cifar100_train", ",", "cifar100_valid", ",", "cifar100_test", ")", "\n", "logging", ".", "info", "(", "'imagenet16 train %f valid %f test %f'", ",", "imagenet16_train", ",", "imagenet16_valid", ",", "imagenet16_test", ")", "\n", "\n", "# tensorboard", "\n", "writer", ".", "add_scalars", "(", "'accuracy'", ",", "{", "'train'", ":", "train_acc", ",", "'valid'", ":", "valid_acc", "}", ",", "epoch", ")", "\n", "writer", ".", "add_scalars", "(", "'loss'", ",", "{", "'train'", ":", "train_obj", ",", "'valid'", ":", "valid_obj", "}", ",", "epoch", ")", "\n", "writer", ".", "add_scalars", "(", "'nasbench201/cifar10'", ",", "{", "'train'", ":", "cifar10_train", ",", "'test'", ":", "cifar10_test", "}", ",", "epoch", ")", "\n", "writer", ".", "add_scalars", "(", "'nasbench201/cifar100'", ",", "{", "'train'", ":", "cifar100_train", ",", "'valid'", ":", "cifar100_valid", ",", "'test'", ":", "cifar100_test", "}", ",", "epoch", ")", "\n", "writer", ".", "add_scalars", "(", "'nasbench201/imagenet16'", ",", "{", "'train'", ":", "imagenet16_train", ",", "'valid'", ":", "imagenet16_valid", ",", "'test'", ":", "imagenet16_test", "}", ",", "epoch", ")", "\n", "\n", "utils", ".", "save_checkpoint", "(", "{", "\n", "'epoch'", ":", "epoch", "+", "1", ",", "\n", "'state_dict'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'optimizer'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'alpha'", ":", "model", ".", "arch_parameters", "(", ")", "\n", "}", ",", "False", ",", "args", ".", "save", ")", "\n", "\n", "", "scheduler", ".", "step", "(", ")", "\n", "if", "args", ".", "method", "==", "'gdas'", "or", "args", ".", "method", "==", "'snas'", ":", "\n", "# Decrease the temperature for the gumbel softmax linearly", "\n", "            ", "tau_epoch", "+=", "tau_step", "\n", "logging", ".", "info", "(", "'tau %f'", ",", "tau_epoch", ")", "\n", "model", ".", "set_tau", "(", "tau_epoch", ")", "\n", "\n", "", "", "writer", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.train_search.train": [[247, 289], ["utils.AvgrageMeter", "utils.AvgrageMeter", "utils.AvgrageMeter", "enumerate", "model.train", "input.cuda.size", "input.cuda.cuda", "target.cuda.cuda", "next", "input_search.cuda.cuda", "target_search.cuda.cuda", "architect.step", "optimizer.zero_grad", "architect.optimizer.zero_grad", "model", "criterion", "criterion.backward", "torch.utils.clip_grad_norm_", "optimizer.step", "optimizer.zero_grad", "architect.optimizer.zero_grad", "utils.accuracy", "utils.AvgrageMeter.update", "utils.AvgrageMeter.update", "utils.AvgrageMeter.update", "iter", "model.parameters", "logging.info"], "function", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.train_search_imagenet.train", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.architect.Architect.step", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.architect.Architect.step", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.accuracy", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update"], ["", "def", "train", "(", "train_queue", ",", "valid_queue", ",", "model", ",", "architect", ",", "criterion", ",", "optimizer", ",", "lr", ",", "epoch", ")", ":", "\n", "    ", "objs", "=", "utils", ".", "AvgrageMeter", "(", ")", "\n", "top1", "=", "utils", ".", "AvgrageMeter", "(", ")", "\n", "top5", "=", "utils", ".", "AvgrageMeter", "(", ")", "\n", "\n", "for", "step", ",", "(", "input", ",", "target", ")", "in", "enumerate", "(", "train_queue", ")", ":", "\n", "        ", "model", ".", "train", "(", ")", "\n", "n", "=", "input", ".", "size", "(", "0", ")", "\n", "\n", "input", "=", "input", ".", "cuda", "(", ")", "\n", "target", "=", "target", ".", "cuda", "(", "non_blocking", "=", "True", ")", "\n", "\n", "# get a random minibatch from the search queue with replacement", "\n", "input_search", ",", "target_search", "=", "next", "(", "iter", "(", "valid_queue", ")", ")", "\n", "input_search", "=", "input_search", ".", "cuda", "(", ")", "\n", "target_search", "=", "target_search", ".", "cuda", "(", "non_blocking", "=", "True", ")", "\n", "\n", "# if epoch >= 15:", "\n", "architect", ".", "step", "(", "input", ",", "target", ",", "input_search", ",", "target_search", ",", "lr", ",", "optimizer", ",", "unrolled", "=", "args", ".", "unrolled", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "architect", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "logits", "=", "model", "(", "input", ")", "\n", "loss", "=", "criterion", "(", "logits", ",", "target", ")", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "model", ".", "parameters", "(", ")", ",", "args", ".", "grad_clip", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "architect", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "prec1", ",", "prec5", "=", "utils", ".", "accuracy", "(", "logits", ",", "target", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "objs", ".", "update", "(", "loss", ".", "data", ",", "n", ")", "\n", "top1", ".", "update", "(", "prec1", ".", "data", ",", "n", ")", "\n", "top5", ".", "update", "(", "prec5", ".", "data", ",", "n", ")", "\n", "\n", "if", "step", "%", "args", ".", "report_freq", "==", "0", ":", "\n", "            ", "logging", ".", "info", "(", "'train %03d %e %f %f'", ",", "step", ",", "objs", ".", "avg", ",", "top1", ".", "avg", ",", "top5", ".", "avg", ")", "\n", "", "if", "'debug'", "in", "args", ".", "save", ":", "\n", "            ", "break", "\n", "\n", "", "", "return", "top1", ".", "avg", ",", "objs", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.train_search.infer": [[291, 316], ["utils.AvgrageMeter", "utils.AvgrageMeter", "utils.AvgrageMeter", "model.eval", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "input.cuda.cuda", "target.cuda.cuda", "model", "criterion", "utils.accuracy", "input.cuda.size", "utils.AvgrageMeter.update", "utils.AvgrageMeter.update", "utils.AvgrageMeter.update", "logging.info"], "function", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.accuracy", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update"], ["", "def", "infer", "(", "valid_queue", ",", "model", ",", "criterion", ")", ":", "\n", "    ", "objs", "=", "utils", ".", "AvgrageMeter", "(", ")", "\n", "top1", "=", "utils", ".", "AvgrageMeter", "(", ")", "\n", "top5", "=", "utils", ".", "AvgrageMeter", "(", ")", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "step", ",", "(", "input", ",", "target", ")", "in", "enumerate", "(", "valid_queue", ")", ":", "\n", "            ", "input", "=", "input", ".", "cuda", "(", ")", "\n", "target", "=", "target", ".", "cuda", "(", "non_blocking", "=", "True", ")", "\n", "\n", "logits", "=", "model", "(", "input", ")", "\n", "loss", "=", "criterion", "(", "logits", ",", "target", ")", "\n", "\n", "prec1", ",", "prec5", "=", "utils", ".", "accuracy", "(", "logits", ",", "target", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "n", "=", "input", ".", "size", "(", "0", ")", "\n", "objs", ".", "update", "(", "loss", ".", "data", ",", "n", ")", "\n", "top1", ".", "update", "(", "prec1", ".", "data", ",", "n", ")", "\n", "top5", ".", "update", "(", "prec5", ".", "data", ",", "n", ")", "\n", "\n", "if", "step", "%", "args", ".", "report_freq", "==", "0", ":", "\n", "                ", "logging", ".", "info", "(", "'valid %03d %e %f %f'", ",", "step", ",", "objs", ".", "avg", ",", "top1", ".", "avg", ",", "top5", ".", "avg", ")", "\n", "", "if", "'debug'", "in", "args", ".", "save", ":", "\n", "                ", "break", "\n", "", "", "", "return", "top1", ".", "avg", ",", "objs", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.cell_operations.ReLUConvBN.__init__": [[34, 40], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.NetworkImageNet.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", ",", "padding", ",", "dilation", ",", "affine", ",", "track_running_stats", "=", "True", ")", ":", "\n", "    ", "super", "(", "ReLUConvBN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "op", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "C_out", ",", "affine", "=", "affine", ",", "track_running_stats", "=", "track_running_stats", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.cell_operations.ReLUConvBN.forward": [[42, 44], ["cell_operations.ReLUConvBN.op"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "op", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.cell_operations.ReLUConvBN.wider": [[45, 53], ["net2wider.InChannelWider", "net2wider.OutChannelWider", "net2wider.BNWider"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.InChannelWider", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.OutChannelWider", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.BNWider"], ["", "def", "wider", "(", "self", ",", "new_C_in", ",", "new_C_out", ")", ":", "\n", "    ", "conv", "=", "self", ".", "op", "[", "1", "]", "\n", "bn", "=", "self", ".", "op", "[", "2", "]", "\n", "conv", ",", "_", "=", "InChannelWider", "(", "conv", ",", "new_C_in", ")", "\n", "conv", ",", "index", "=", "OutChannelWider", "(", "conv", ",", "new_C_out", ")", "\n", "bn", ",", "_", "=", "BNWider", "(", "bn", ",", "new_C_out", ",", "index", "=", "index", ")", "\n", "self", ".", "op", "[", "1", "]", "=", "conv", "\n", "self", ".", "op", "[", "2", "]", "=", "bn", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.cell_operations.SepConv.__init__": [[57, 64], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.NetworkImageNet.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", ",", "padding", ",", "dilation", ",", "affine", ",", "track_running_stats", "=", "True", ")", ":", "\n", "    ", "super", "(", "SepConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "op", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "C_in", ",", "C_in", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "groups", "=", "C_in", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "C_in", ",", "C_out", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "C_out", ",", "affine", "=", "affine", ",", "track_running_stats", "=", "track_running_stats", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.cell_operations.SepConv.forward": [[66, 68], ["cell_operations.SepConv.op"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "op", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.cell_operations.DualSepConv.__init__": [[72, 76], ["torch.Module.__init__", "cell_operations.SepConv", "cell_operations.SepConv"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.NetworkImageNet.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", ",", "padding", ",", "dilation", ",", "affine", ",", "track_running_stats", "=", "True", ")", ":", "\n", "    ", "super", "(", "DualSepConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "op_a", "=", "SepConv", "(", "C_in", ",", "C_in", ",", "kernel_size", ",", "stride", ",", "padding", ",", "dilation", ",", "affine", ",", "track_running_stats", ")", "\n", "self", ".", "op_b", "=", "SepConv", "(", "C_in", ",", "C_out", ",", "kernel_size", ",", "1", ",", "padding", ",", "dilation", ",", "affine", ",", "track_running_stats", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.cell_operations.DualSepConv.forward": [[77, 81], ["cell_operations.DualSepConv.op_a", "cell_operations.DualSepConv.op_b"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "x", "=", "self", ".", "op_a", "(", "x", ")", "\n", "x", "=", "self", ".", "op_b", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.cell_operations.ResNetBasicblock.__init__": [[85, 102], ["torch.Module.__init__", "cell_operations.ReLUConvBN", "cell_operations.ReLUConvBN", "torch.Sequential", "torch.Sequential", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Conv2d", "torch.Conv2d", "cell_operations.ReLUConvBN"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.NetworkImageNet.__init__"], ["  ", "def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", ",", "affine", "=", "True", ")", ":", "\n", "    ", "super", "(", "ResNetBasicblock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "stride", "==", "1", "or", "stride", "==", "2", ",", "'invalid stride {:}'", ".", "format", "(", "stride", ")", "\n", "self", ".", "conv_a", "=", "ReLUConvBN", "(", "inplanes", ",", "planes", ",", "3", ",", "stride", ",", "1", ",", "1", ",", "affine", ")", "\n", "self", ".", "conv_b", "=", "ReLUConvBN", "(", "planes", ",", "planes", ",", "3", ",", "1", ",", "1", ",", "1", ",", "affine", ")", "\n", "if", "stride", "==", "2", ":", "\n", "      ", "self", ".", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ")", "\n", "", "elif", "inplanes", "!=", "planes", ":", "\n", "      ", "self", ".", "downsample", "=", "ReLUConvBN", "(", "inplanes", ",", "planes", ",", "1", ",", "1", ",", "0", ",", "1", ",", "affine", ")", "\n", "", "else", ":", "\n", "      ", "self", ".", "downsample", "=", "None", "\n", "", "self", ".", "in_dim", "=", "inplanes", "\n", "self", ".", "out_dim", "=", "planes", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "num_conv", "=", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.cell_operations.ResNetBasicblock.extra_repr": [[103, 106], ["None"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", ":", "\n", "    ", "string", "=", "'{name}(inC={in_dim}, outC={out_dim}, stride={stride})'", ".", "format", "(", "name", "=", "self", ".", "__class__", ".", "__name__", ",", "**", "self", ".", "__dict__", ")", "\n", "return", "string", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.cell_operations.ResNetBasicblock.forward": [[107, 117], ["cell_operations.ResNetBasicblock.conv_a", "cell_operations.ResNetBasicblock.conv_b", "cell_operations.ResNetBasicblock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "\n", "    ", "basicblock", "=", "self", ".", "conv_a", "(", "inputs", ")", "\n", "basicblock", "=", "self", ".", "conv_b", "(", "basicblock", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "      ", "residual", "=", "self", ".", "downsample", "(", "inputs", ")", "\n", "", "else", ":", "\n", "      ", "residual", "=", "inputs", "\n", "", "return", "residual", "+", "basicblock", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.cell_operations.POOLING.__init__": [[121, 130], ["torch.Module.__init__", "cell_operations.ReLUConvBN", "torch.AvgPool2d", "torch.AvgPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "ValueError"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.NetworkImageNet.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "stride", ",", "mode", ",", "affine", "=", "True", ",", "track_running_stats", "=", "True", ")", ":", "\n", "    ", "super", "(", "POOLING", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "C_in", "==", "C_out", ":", "\n", "      ", "self", ".", "preprocess", "=", "None", "\n", "", "else", ":", "\n", "      ", "self", ".", "preprocess", "=", "ReLUConvBN", "(", "C_in", ",", "C_out", ",", "1", ",", "1", ",", "0", ",", "affine", ",", "track_running_stats", ")", "\n", "", "if", "mode", "==", "'avg'", ":", "self", ".", "op", "=", "nn", ".", "AvgPool2d", "(", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "count_include_pad", "=", "False", ")", "\n", "elif", "mode", "==", "'max'", ":", "self", ".", "op", "=", "nn", ".", "MaxPool2d", "(", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ")", "\n", "else", ":", "raise", "ValueError", "(", "'Invalid mode={:} in POOLING'", ".", "format", "(", "mode", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.cell_operations.POOLING.forward": [[131, 135], ["cell_operations.POOLING.op", "cell_operations.POOLING.preprocess"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "    ", "if", "self", ".", "preprocess", ":", "x", "=", "self", ".", "preprocess", "(", "inputs", ")", "\n", "else", ":", "x", "=", "inputs", "\n", "return", "self", ".", "op", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.cell_operations.POOLING.wider": [[136, 139], ["cell_operations.POOLING.preprocess.wider"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.wider"], ["", "def", "wider", "(", "self", ",", "new_C_in", ",", "new_C_out", ")", ":", "\n", "    ", "if", "self", ".", "preprocess", ":", "\n", "      ", "self", ".", "preprocess", ".", "wider", "(", "new_C_in", ",", "new_C_out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.cell_operations.Identity.__init__": [[143, 145], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.NetworkImageNet.__init__"], ["  ", "def", "__init__", "(", "self", ")", ":", "\n", "    ", "super", "(", "Identity", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.cell_operations.Identity.forward": [[146, 148], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.cell_operations.Identity.wider": [[149, 151], ["None"], "methods", ["None"], ["", "def", "wider", "(", "self", ",", "new_C_in", ",", "new_C_out", ")", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.cell_operations.Zero.__init__": [[155, 161], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.NetworkImageNet.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "stride", ")", ":", "\n", "    ", "super", "(", "Zero", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "C_in", "=", "C_in", "\n", "self", ".", "C_out", "=", "C_out", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "is_zero", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.cell_operations.Zero.forward": [[162, 171], ["list", "x.new_zeros", "x.mul", "x[].mul"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "if", "self", ".", "C_in", "==", "self", ".", "C_out", ":", "\n", "      ", "if", "self", ".", "stride", "==", "1", ":", "return", "x", ".", "mul", "(", "0.", ")", "\n", "else", ":", "return", "x", "[", ":", ",", ":", ",", ":", ":", "self", ".", "stride", ",", ":", ":", "self", ".", "stride", "]", ".", "mul", "(", "0.", ")", "\n", "", "else", ":", "\n", "      ", "shape", "=", "list", "(", "x", ".", "shape", ")", "\n", "shape", "[", "1", "]", "=", "self", ".", "C_out", "\n", "zeros", "=", "x", ".", "new_zeros", "(", "shape", ",", "dtype", "=", "x", ".", "dtype", ",", "device", "=", "x", ".", "device", ")", "\n", "return", "zeros", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.cell_operations.Zero.extra_repr": [[172, 174], ["None"], "methods", ["None"], ["", "", "def", "extra_repr", "(", "self", ")", ":", "\n", "    ", "return", "'C_in={C_in}, C_out={C_out}, stride={stride}'", ".", "format", "(", "**", "self", ".", "__dict__", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.cell_operations.Zero.wider": [[175, 177], ["None"], "methods", ["None"], ["", "def", "wider", "(", "self", ",", "new_C_in", ",", "new_C_out", ")", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.cell_operations.FactorizedReduce.__init__": [[181, 199], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ModuleList", "torch.ModuleList", "range", "torch.ConstantPad2d", "torch.ConstantPad2d", "cell_operations.FactorizedReduce.convs.append", "torch.Conv2d", "torch.Conv2d", "ValueError", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.NetworkImageNet.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "stride", ",", "affine", ",", "track_running_stats", ")", ":", "\n", "    ", "super", "(", "FactorizedReduce", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "C_in", "=", "C_in", "\n", "self", ".", "C_out", "=", "C_out", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", "\n", "if", "stride", "==", "2", ":", "\n", "#assert C_out % 2 == 0, 'C_out : {:}'.format(C_out)", "\n", "      ", "C_outs", "=", "[", "C_out", "//", "2", ",", "C_out", "-", "C_out", "//", "2", "]", "\n", "self", ".", "convs", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "i", "in", "range", "(", "2", ")", ":", "\n", "        ", "self", ".", "convs", ".", "append", "(", "nn", ".", "Conv2d", "(", "C_in", ",", "C_outs", "[", "i", "]", ",", "1", ",", "stride", "=", "stride", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ")", "\n", "", "self", ".", "pad", "=", "nn", ".", "ConstantPad2d", "(", "(", "0", ",", "1", ",", "0", ",", "1", ")", ",", "0", ")", "\n", "", "elif", "stride", "==", "1", ":", "\n", "      ", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "C_in", ",", "C_out", ",", "1", ",", "stride", "=", "stride", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "", "else", ":", "\n", "      ", "raise", "ValueError", "(", "'Invalid stride : {:}'", ".", "format", "(", "stride", ")", ")", "\n", "", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "C_out", ",", "affine", "=", "affine", ",", "track_running_stats", "=", "track_running_stats", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.cell_operations.FactorizedReduce.forward": [[200, 209], ["cell_operations.FactorizedReduce.bn", "cell_operations.FactorizedReduce.relu", "cell_operations.FactorizedReduce.pad", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "cell_operations.FactorizedReduce.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "if", "self", ".", "stride", "==", "2", ":", "\n", "      ", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "y", "=", "self", ".", "pad", "(", "x", ")", "\n", "out", "=", "torch", ".", "cat", "(", "[", "self", ".", "convs", "[", "0", "]", "(", "x", ")", ",", "self", ".", "convs", "[", "1", "]", "(", "y", "[", ":", ",", ":", ",", "1", ":", ",", "1", ":", "]", ")", "]", ",", "dim", "=", "1", ")", "\n", "", "else", ":", "\n", "      ", "out", "=", "self", ".", "conv", "(", "x", ")", "\n", "", "out", "=", "self", ".", "bn", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.cell_operations.FactorizedReduce.extra_repr": [[210, 212], ["None"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", ":", "\n", "    ", "return", "'C_in={C_in}, C_out={C_out}, stride={stride}'", ".", "format", "(", "**", "self", ".", "__dict__", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.cell_operations.FactorizedReduce.wider": [[213, 224], ["net2wider.InChannelWider", "net2wider.OutChannelWider", "net2wider.InChannelWider", "net2wider.OutChannelWider", "net2wider.BNWider", "net2wider.InChannelWider", "net2wider.OutChannelWider", "net2wider.BNWider", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.InChannelWider", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.OutChannelWider", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.InChannelWider", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.OutChannelWider", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.BNWider", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.InChannelWider", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.OutChannelWider", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.BNWider"], ["", "def", "wider", "(", "self", ",", "new_C_in", ",", "new_C_out", ")", ":", "\n", "    ", "if", "self", ".", "stride", "==", "2", ":", "\n", "      ", "self", ".", "convs", "[", "0", "]", ",", "_", "=", "InChannelWider", "(", "self", ".", "convs", "[", "0", "]", ",", "new_C_in", ")", "\n", "self", ".", "convs", "[", "0", "]", ",", "index1", "=", "OutChannelWider", "(", "self", ".", "convs", "[", "0", "]", ",", "new_C_out", "//", "2", ")", "\n", "self", ".", "convs", "[", "1", "]", ",", "_", "=", "InChannelWider", "(", "self", ".", "convs", "[", "1", "]", ",", "new_C_in", ")", "\n", "self", ".", "convs", "[", "1", "]", ",", "index2", "=", "OutChannelWider", "(", "self", ".", "convs", "[", "1", "]", ",", "new_C_out", "-", "new_C_out", "//", "2", ")", "\n", "self", ".", "bn", ",", "_", "=", "BNWider", "(", "self", ".", "bn", ",", "new_C_out", ",", "index", "=", "torch", ".", "cat", "(", "[", "index1", ",", "index2", "]", ")", ")", "\n", "", "elif", "self", ".", "stride", "==", "1", ":", "\n", "      ", "self", ".", "conv", ",", "_", "=", "InChannelWider", "(", "self", ".", "conv", ",", "new_C_in", ")", "\n", "self", ".", "conv", ",", "index", "=", "OutChannelWider", "(", "self", ".", "conv", ",", "new_C_out", ")", "\n", "self", ".", "bn", ",", "_", "=", "BNWider", "(", "self", ".", "bn", ",", "new_C_out", ",", "index", "=", "index", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_cells.NAS201SearchCell.__init__": [[13, 32], ["torch.Module.__init__", "copy.deepcopy", "torch.ModuleDict", "torch.ModuleDict", "torch.ModuleDict", "range", "sorted", "len", "range", "list", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "search_cells.NAS201SearchCell.edges.keys", "enumerate"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.NetworkImageNet.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "stride", ",", "max_nodes", ",", "op_names", ",", "affine", "=", "False", ",", "track_running_stats", "=", "True", ")", ":", "\n", "    ", "super", "(", "NAS201SearchCell", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "op_names", "=", "deepcopy", "(", "op_names", ")", "\n", "self", ".", "edges", "=", "nn", ".", "ModuleDict", "(", ")", "\n", "self", ".", "max_nodes", "=", "max_nodes", "\n", "self", ".", "in_dim", "=", "C_in", "\n", "self", ".", "out_dim", "=", "C_out", "\n", "for", "i", "in", "range", "(", "1", ",", "max_nodes", ")", ":", "\n", "      ", "for", "j", "in", "range", "(", "i", ")", ":", "\n", "        ", "node_str", "=", "'{:}<-{:}'", ".", "format", "(", "i", ",", "j", ")", "\n", "if", "j", "==", "0", ":", "\n", "          ", "xlists", "=", "[", "OPS", "[", "op_name", "]", "(", "C_in", ",", "C_out", ",", "stride", ",", "affine", ",", "track_running_stats", ")", "for", "op_name", "in", "op_names", "]", "\n", "", "else", ":", "\n", "          ", "xlists", "=", "[", "OPS", "[", "op_name", "]", "(", "C_in", ",", "C_out", ",", "1", ",", "affine", ",", "track_running_stats", ")", "for", "op_name", "in", "op_names", "]", "\n", "", "self", ".", "edges", "[", "node_str", "]", "=", "nn", ".", "ModuleList", "(", "xlists", ")", "\n", "", "", "self", ".", "edge_keys", "=", "sorted", "(", "list", "(", "self", ".", "edges", ".", "keys", "(", ")", ")", ")", "\n", "self", ".", "edge2index", "=", "{", "key", ":", "i", "for", "i", ",", "key", "in", "enumerate", "(", "self", ".", "edge_keys", ")", "}", "\n", "self", ".", "num_edges", "=", "len", "(", "self", ".", "edges", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_cells.NAS201SearchCell.extra_repr": [[33, 36], ["None"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", ":", "\n", "    ", "string", "=", "'info :: {max_nodes} nodes, inC={in_dim}, outC={out_dim}'", ".", "format", "(", "**", "self", ".", "__dict__", ")", "\n", "return", "string", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_cells.NAS201SearchCell.forward": [[37, 47], ["range", "range", "nodes.append", "inter_nodes.append", "sum", "sum", "layer", "zip"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "weightss", ")", ":", "\n", "    ", "nodes", "=", "[", "inputs", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "self", ".", "max_nodes", ")", ":", "\n", "      ", "inter_nodes", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "i", ")", ":", "\n", "        ", "node_str", "=", "'{:}<-{:}'", ".", "format", "(", "i", ",", "j", ")", "\n", "weights", "=", "weightss", "[", "self", ".", "edge2index", "[", "node_str", "]", "]", "\n", "inter_nodes", ".", "append", "(", "sum", "(", "layer", "(", "nodes", "[", "j", "]", ")", "*", "w", "for", "layer", ",", "w", "in", "zip", "(", "self", ".", "edges", "[", "node_str", "]", ",", "weights", ")", ")", ")", "\n", "", "nodes", ".", "append", "(", "sum", "(", "inter_nodes", ")", ")", "\n", "", "return", "nodes", "[", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_cells.NAS201SearchCell.forward_gdas": [[49, 61], ["range", "range", "nodes.append", "index[].item", "sum", "inter_nodes.append", "sum", "enumerate", "edge"], "methods", ["None"], ["", "def", "forward_gdas", "(", "self", ",", "inputs", ",", "hardwts", ",", "index", ")", ":", "\n", "    ", "nodes", "=", "[", "inputs", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "self", ".", "max_nodes", ")", ":", "\n", "      ", "inter_nodes", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "i", ")", ":", "\n", "        ", "node_str", "=", "'{:}<-{:}'", ".", "format", "(", "i", ",", "j", ")", "\n", "weights", "=", "hardwts", "[", "self", ".", "edge2index", "[", "node_str", "]", "]", "\n", "argmaxs", "=", "index", "[", "self", ".", "edge2index", "[", "node_str", "]", "]", ".", "item", "(", ")", "\n", "weigsum", "=", "sum", "(", "weights", "[", "_ie", "]", "*", "edge", "(", "nodes", "[", "j", "]", ")", "if", "_ie", "==", "argmaxs", "else", "weights", "[", "_ie", "]", "for", "_ie", ",", "edge", "in", "enumerate", "(", "self", ".", "edges", "[", "node_str", "]", ")", ")", "\n", "inter_nodes", ".", "append", "(", "weigsum", ")", "\n", "", "nodes", ".", "append", "(", "sum", "(", "inter_nodes", ")", ")", "\n", "", "return", "nodes", "[", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_cells.NAS201SearchCell.forward_joint": [[63, 75], ["range", "range", "nodes.append", "sum", "inter_nodes.append", "sum", "layer", "zip"], "methods", ["None"], ["", "def", "forward_joint", "(", "self", ",", "inputs", ",", "weightss", ")", ":", "\n", "    ", "nodes", "=", "[", "inputs", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "self", ".", "max_nodes", ")", ":", "\n", "      ", "inter_nodes", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "i", ")", ":", "\n", "        ", "node_str", "=", "'{:}<-{:}'", ".", "format", "(", "i", ",", "j", ")", "\n", "weights", "=", "weightss", "[", "self", ".", "edge2index", "[", "node_str", "]", "]", "\n", "#aggregation = sum( layer(nodes[j]) * w for layer, w in zip(self.edges[node_str], weights) ) / weights.numel()", "\n", "aggregation", "=", "sum", "(", "layer", "(", "nodes", "[", "j", "]", ")", "*", "w", "for", "layer", ",", "w", "in", "zip", "(", "self", ".", "edges", "[", "node_str", "]", ",", "weights", ")", ")", "\n", "inter_nodes", ".", "append", "(", "aggregation", ")", "\n", "", "nodes", ".", "append", "(", "sum", "(", "inter_nodes", ")", ")", "\n", "", "return", "nodes", "[", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_cells.NAS201SearchCell.forward_urs": [[77, 94], ["range", "enumerate", "nodes.append", "range", "inter_nodes.append", "sum", "random.choice", "sops.append", "random.choice.", "hasattr"], "methods", ["None"], ["", "def", "forward_urs", "(", "self", ",", "inputs", ")", ":", "\n", "    ", "nodes", "=", "[", "inputs", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "self", ".", "max_nodes", ")", ":", "\n", "      ", "while", "True", ":", "# to avoid select zero for all ops", "\n", "        ", "sops", ",", "has_non_zero", "=", "[", "]", ",", "False", "\n", "for", "j", "in", "range", "(", "i", ")", ":", "\n", "          ", "node_str", "=", "'{:}<-{:}'", ".", "format", "(", "i", ",", "j", ")", "\n", "candidates", "=", "self", ".", "edges", "[", "node_str", "]", "\n", "select_op", "=", "random", ".", "choice", "(", "candidates", ")", "\n", "sops", ".", "append", "(", "select_op", ")", "\n", "if", "not", "hasattr", "(", "select_op", ",", "'is_zero'", ")", "or", "select_op", ".", "is_zero", "is", "False", ":", "has_non_zero", "=", "True", "\n", "", "if", "has_non_zero", ":", "break", "\n", "", "inter_nodes", "=", "[", "]", "\n", "for", "j", ",", "select_op", "in", "enumerate", "(", "sops", ")", ":", "\n", "        ", "inter_nodes", ".", "append", "(", "select_op", "(", "nodes", "[", "j", "]", ")", ")", "\n", "", "nodes", ".", "append", "(", "sum", "(", "inter_nodes", ")", ")", "\n", "", "return", "nodes", "[", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_cells.NAS201SearchCell.forward_select": [[96, 107], ["range", "range", "nodes.append", "inter_nodes.append", "sum", "weights.argmax().item", "weights.argmax"], "methods", ["None"], ["", "def", "forward_select", "(", "self", ",", "inputs", ",", "weightss", ")", ":", "\n", "    ", "nodes", "=", "[", "inputs", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "self", ".", "max_nodes", ")", ":", "\n", "      ", "inter_nodes", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "i", ")", ":", "\n", "        ", "node_str", "=", "'{:}<-{:}'", ".", "format", "(", "i", ",", "j", ")", "\n", "weights", "=", "weightss", "[", "self", ".", "edge2index", "[", "node_str", "]", "]", "\n", "inter_nodes", ".", "append", "(", "self", ".", "edges", "[", "node_str", "]", "[", "weights", ".", "argmax", "(", ")", ".", "item", "(", ")", "]", "(", "nodes", "[", "j", "]", ")", ")", "\n", "#inter_nodes.append( sum( layer(nodes[j]) * w for layer, w in zip(self.edges[node_str], weights) ) )", "\n", "", "nodes", ".", "append", "(", "sum", "(", "inter_nodes", ")", ")", "\n", "", "return", "nodes", "[", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_cells.NAS201SearchCell.forward_dynamic": [[109, 120], ["range", "nodes.append", "search_cells.NAS201SearchCell.op_names.index", "inter_nodes.append", "sum"], "methods", ["None"], ["", "def", "forward_dynamic", "(", "self", ",", "inputs", ",", "structure", ")", ":", "\n", "    ", "nodes", "=", "[", "inputs", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "self", ".", "max_nodes", ")", ":", "\n", "      ", "cur_op_node", "=", "structure", ".", "nodes", "[", "i", "-", "1", "]", "\n", "inter_nodes", "=", "[", "]", "\n", "for", "op_name", ",", "j", "in", "cur_op_node", ":", "\n", "        ", "node_str", "=", "'{:}<-{:}'", ".", "format", "(", "i", ",", "j", ")", "\n", "op_index", "=", "self", ".", "op_names", ".", "index", "(", "op_name", ")", "\n", "inter_nodes", ".", "append", "(", "self", ".", "edges", "[", "node_str", "]", "[", "op_index", "]", "(", "nodes", "[", "j", "]", ")", ")", "\n", "", "nodes", ".", "append", "(", "sum", "(", "inter_nodes", ")", ")", "\n", "", "return", "nodes", "[", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_cells.NAS201SearchCell_PartialChannel.__init__": [[136, 156], ["search_cells.NAS201SearchCell.__init__", "copy.deepcopy", "torch.ModuleDict", "torch.ModuleDict", "torch.ModuleDict", "range", "sorted", "len", "range", "list", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "search_cells.NAS201SearchCell_PartialChannel.edges.keys", "enumerate"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.NetworkImageNet.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "stride", ",", "max_nodes", ",", "op_names", ",", "affine", "=", "False", ",", "track_running_stats", "=", "True", ",", "k", "=", "4", ")", ":", "\n", "    ", "super", "(", "NAS201SearchCell", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "k", "=", "k", "\n", "self", ".", "op_names", "=", "deepcopy", "(", "op_names", ")", "\n", "self", ".", "edges", "=", "nn", ".", "ModuleDict", "(", ")", "\n", "self", ".", "max_nodes", "=", "max_nodes", "\n", "self", ".", "in_dim", "=", "C_in", "\n", "self", ".", "out_dim", "=", "C_out", "\n", "for", "i", "in", "range", "(", "1", ",", "max_nodes", ")", ":", "\n", "      ", "for", "j", "in", "range", "(", "i", ")", ":", "\n", "        ", "node_str", "=", "'{:}<-{:}'", ".", "format", "(", "i", ",", "j", ")", "\n", "if", "j", "==", "0", ":", "\n", "          ", "xlists", "=", "[", "OPS", "[", "op_name", "]", "(", "C_in", "//", "self", ".", "k", ",", "C_out", "//", "self", ".", "k", ",", "stride", ",", "affine", ",", "track_running_stats", ")", "for", "op_name", "in", "op_names", "]", "\n", "", "else", ":", "\n", "          ", "xlists", "=", "[", "OPS", "[", "op_name", "]", "(", "C_in", "//", "self", ".", "k", ",", "C_out", "//", "self", ".", "k", ",", "1", ",", "affine", ",", "track_running_stats", ")", "for", "op_name", "in", "op_names", "]", "\n", "", "self", ".", "edges", "[", "node_str", "]", "=", "nn", ".", "ModuleList", "(", "xlists", ")", "\n", "", "", "self", ".", "edge_keys", "=", "sorted", "(", "list", "(", "self", ".", "edges", ".", "keys", "(", ")", ")", ")", "\n", "self", ".", "edge2index", "=", "{", "key", ":", "i", "for", "i", ",", "key", "in", "enumerate", "(", "self", ".", "edge_keys", ")", "}", "\n", "self", ".", "num_edges", "=", "len", "(", "self", ".", "edges", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_cells.NAS201SearchCell_PartialChannel.MixedOp": [[157, 167], ["sum", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "search_cells.channel_shuffle", "op", "zip"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.channel_shuffle"], ["", "def", "MixedOp", "(", "self", ",", "x", ",", "ops", ",", "weights", ")", ":", "\n", "    ", "dim_2", "=", "x", ".", "shape", "[", "1", "]", "\n", "xtemp", "=", "x", "[", ":", ",", ":", "dim_2", "//", "self", ".", "k", ",", ":", ",", ":", "]", "\n", "xtemp2", "=", "x", "[", ":", ",", "dim_2", "//", "self", ".", "k", ":", ",", ":", ",", ":", "]", "\n", "temp1", "=", "sum", "(", "w", "*", "op", "(", "xtemp", ")", "for", "w", ",", "op", "in", "zip", "(", "weights", ",", "ops", ")", "if", "not", "w", "==", "0", ")", "\n", "if", "self", ".", "k", "==", "1", ":", "\n", "      ", "return", "temp1", "\n", "", "ans", "=", "torch", ".", "cat", "(", "[", "temp1", ",", "xtemp2", "]", ",", "dim", "=", "1", ")", "\n", "ans", "=", "channel_shuffle", "(", "ans", ",", "self", ".", "k", ")", "\n", "return", "ans", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_cells.NAS201SearchCell_PartialChannel.forward": [[168, 178], ["range", "range", "nodes.append", "inter_nodes.append", "sum", "search_cells.NAS201SearchCell_PartialChannel.MixedOp"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_cells.NAS201SearchCell_PartialChannel.MixedOp"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "weightss", ")", ":", "\n", "    ", "nodes", "=", "[", "inputs", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "self", ".", "max_nodes", ")", ":", "\n", "      ", "inter_nodes", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "i", ")", ":", "\n", "        ", "node_str", "=", "'{:}<-{:}'", ".", "format", "(", "i", ",", "j", ")", "\n", "weights", "=", "weightss", "[", "self", ".", "edge2index", "[", "node_str", "]", "]", "\n", "inter_nodes", ".", "append", "(", "self", ".", "MixedOp", "(", "x", "=", "nodes", "[", "j", "]", ",", "ops", "=", "self", ".", "edges", "[", "node_str", "]", ",", "weights", "=", "weights", ")", ")", "\n", "", "nodes", ".", "append", "(", "sum", "(", "inter_nodes", ")", ")", "\n", "", "return", "nodes", "[", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_cells.NAS201SearchCell_PartialChannel.wider": [[179, 184], ["search_cells.NAS201SearchCell_PartialChannel.edges.keys", "op.wider"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.wider"], ["", "def", "wider", "(", "self", ",", "k", ")", ":", "\n", "    ", "self", ".", "k", "=", "k", "\n", "for", "key", "in", "self", ".", "edges", ".", "keys", "(", ")", ":", "\n", "      ", "for", "op", "in", "self", ".", "edges", "[", "key", "]", ":", "\n", "        ", "op", ".", "wider", "(", "self", ".", "in_dim", "//", "k", ",", "self", ".", "out_dim", "//", "k", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_cells.channel_shuffle": [[122, 132], ["x.view.data.size", "x.view.view", "torch.transpose().contiguous", "torch.transpose().contiguous", "torch.transpose().contiguous", "x.view.view", "torch.transpose", "torch.transpose", "torch.transpose"], "function", ["None"], ["", "", "def", "channel_shuffle", "(", "x", ",", "groups", ")", ":", "\n", "  ", "batchsize", ",", "num_channels", ",", "height", ",", "width", "=", "x", ".", "data", ".", "size", "(", ")", "\n", "channels_per_group", "=", "num_channels", "//", "groups", "\n", "# reshape", "\n", "x", "=", "x", ".", "view", "(", "batchsize", ",", "groups", ",", "\n", "channels_per_group", ",", "height", ",", "width", ")", "\n", "x", "=", "torch", ".", "transpose", "(", "x", ",", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "# flatten", "\n", "x", "=", "x", ".", "view", "(", "batchsize", ",", "-", "1", ",", "height", ",", "width", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.operations.AvgPoolBN.__init__": [[29, 34], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.AvgPool2d", "torch.AvgPool2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.NetworkImageNet.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C_out", ",", "stride", ")", ":", "\n", "    ", "super", "(", "AvgPoolBN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "op", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "AvgPool2d", "(", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "count_include_pad", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "C_out", ",", "affine", "=", "False", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.operations.AvgPoolBN.forward": [[36, 38], ["operations.AvgPoolBN.op"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "op", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.operations.AvgPoolBN.wider": [[39, 43], ["net2wider.BNWider"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.BNWider"], ["", "def", "wider", "(", "self", ",", "new_C_in", ",", "new_C_out", ")", ":", "\n", "    ", "bn", "=", "self", ".", "op", "[", "1", "]", "\n", "bn", ",", "_", "=", "BNWider", "(", "bn", ",", "new_C_out", ")", "\n", "self", ".", "op", "[", "1", "]", "=", "bn", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.operations.MaxPoolBN.__init__": [[47, 52], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.MaxPool2d", "torch.MaxPool2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.NetworkImageNet.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C_out", ",", "stride", ")", ":", "\n", "    ", "super", "(", "MaxPoolBN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "op", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "MaxPool2d", "(", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "C_out", ",", "affine", "=", "False", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.operations.MaxPoolBN.forward": [[54, 56], ["operations.MaxPoolBN.op"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "op", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.operations.MaxPoolBN.wider": [[57, 61], ["net2wider.BNWider"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.BNWider"], ["", "def", "wider", "(", "self", ",", "new_C_in", ",", "new_C_out", ")", ":", "\n", "    ", "bn", "=", "self", ".", "op", "[", "1", "]", "\n", "bn", ",", "_", "=", "BNWider", "(", "bn", ",", "new_C_out", ")", "\n", "self", ".", "op", "[", "1", "]", "=", "bn", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.operations.ReLUConvBN.__init__": [[65, 71], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.NetworkImageNet.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", ",", "padding", ",", "affine", "=", "True", ")", ":", "\n", "    ", "super", "(", "ReLUConvBN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "op", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "C_out", ",", "affine", "=", "affine", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.operations.ReLUConvBN.forward": [[73, 75], ["operations.ReLUConvBN.op"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "op", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.operations.ReLUConvBN.wider": [[76, 84], ["net2wider.InChannelWider", "net2wider.OutChannelWider", "net2wider.BNWider"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.InChannelWider", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.OutChannelWider", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.BNWider"], ["", "def", "wider", "(", "self", ",", "new_C_in", ",", "new_C_out", ")", ":", "\n", "    ", "conv", "=", "self", ".", "op", "[", "1", "]", "\n", "bn", "=", "self", ".", "op", "[", "2", "]", "\n", "conv", ",", "_", "=", "InChannelWider", "(", "conv", ",", "new_C_in", ")", "\n", "conv", ",", "index", "=", "OutChannelWider", "(", "conv", ",", "new_C_out", ")", "\n", "bn", ",", "_", "=", "BNWider", "(", "bn", ",", "new_C_out", ",", "index", "=", "index", ")", "\n", "self", ".", "op", "[", "1", "]", "=", "conv", "\n", "self", ".", "op", "[", "2", "]", "=", "bn", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.operations.DilConv.__init__": [[88, 95], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.NetworkImageNet.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", ",", "padding", ",", "dilation", ",", "affine", "=", "True", ")", ":", "\n", "    ", "super", "(", "DilConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "op", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "C_in", ",", "C_in", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "groups", "=", "C_in", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "C_in", ",", "C_out", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "C_out", ",", "affine", "=", "affine", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.operations.DilConv.forward": [[97, 99], ["operations.DilConv.op"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "op", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.operations.DilConv.wider": [[100, 112], ["net2wider.OutChannelWider", "net2wider.InChannelWider", "net2wider.OutChannelWider", "net2wider.BNWider"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.OutChannelWider", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.InChannelWider", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.OutChannelWider", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.BNWider"], ["", "def", "wider", "(", "self", ",", "new_C_in", ",", "new_C_out", ")", ":", "\n", "    ", "conv1", "=", "self", ".", "op", "[", "1", "]", "\n", "conv2", "=", "self", ".", "op", "[", "2", "]", "\n", "bn", "=", "self", ".", "op", "[", "3", "]", "\n", "conv1", ",", "index", "=", "OutChannelWider", "(", "conv1", ",", "new_C_out", ")", "\n", "conv1", ".", "groups", "=", "new_C_in", "\n", "conv2", ",", "_", "=", "InChannelWider", "(", "conv2", ",", "new_C_in", ",", "index", "=", "index", ")", "\n", "conv2", ",", "index", "=", "OutChannelWider", "(", "conv2", ",", "new_C_out", ")", "\n", "bn", ",", "_", "=", "BNWider", "(", "bn", ",", "new_C_out", ",", "index", "=", "index", ")", "\n", "self", ".", "op", "[", "1", "]", "=", "conv1", "\n", "self", ".", "op", "[", "2", "]", "=", "conv2", "\n", "self", ".", "op", "[", "3", "]", "=", "bn", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.operations.SepConv.__init__": [[116, 127], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.NetworkImageNet.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", ",", "padding", ",", "affine", "=", "True", ")", ":", "\n", "    ", "super", "(", "SepConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "op", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "C_in", ",", "C_in", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "groups", "=", "C_in", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "C_in", ",", "C_in", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "C_in", ",", "affine", "=", "affine", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "C_in", ",", "C_in", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "padding", ",", "groups", "=", "C_in", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "C_in", ",", "C_out", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "C_out", ",", "affine", "=", "affine", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.operations.SepConv.forward": [[129, 131], ["operations.SepConv.op"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "op", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.operations.SepConv.wider": [[132, 156], ["net2wider.OutChannelWider", "net2wider.InChannelWider", "net2wider.OutChannelWider", "net2wider.BNWider", "net2wider.OutChannelWider", "net2wider.InChannelWider", "net2wider.OutChannelWider", "net2wider.BNWider"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.OutChannelWider", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.InChannelWider", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.OutChannelWider", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.BNWider", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.OutChannelWider", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.InChannelWider", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.OutChannelWider", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.BNWider"], ["", "def", "wider", "(", "self", ",", "new_C_in", ",", "new_C_out", ")", ":", "\n", "    ", "conv1", "=", "self", ".", "op", "[", "1", "]", "\n", "conv2", "=", "self", ".", "op", "[", "2", "]", "\n", "conv3", "=", "self", ".", "op", "[", "5", "]", "\n", "conv4", "=", "self", ".", "op", "[", "6", "]", "\n", "bn1", "=", "self", ".", "op", "[", "3", "]", "\n", "bn2", "=", "self", ".", "op", "[", "7", "]", "\n", "conv1", ",", "index", "=", "OutChannelWider", "(", "conv1", ",", "new_C_out", ")", "\n", "conv1", ".", "groups", "=", "new_C_in", "\n", "conv2", ",", "_", "=", "InChannelWider", "(", "conv2", ",", "new_C_in", ",", "index", "=", "index", ")", "\n", "conv2", ",", "index", "=", "OutChannelWider", "(", "conv2", ",", "new_C_out", ")", "\n", "bn1", ",", "_", "=", "BNWider", "(", "bn1", ",", "new_C_out", ",", "index", "=", "index", ")", "\n", "\n", "conv3", ",", "index", "=", "OutChannelWider", "(", "conv3", ",", "new_C_out", ")", "\n", "conv3", ".", "groups", "=", "new_C_in", "\n", "conv4", ",", "_", "=", "InChannelWider", "(", "conv4", ",", "new_C_in", ",", "index", "=", "index", ")", "\n", "conv4", ",", "index", "=", "OutChannelWider", "(", "conv4", ",", "new_C_out", ")", "\n", "bn2", ",", "_", "=", "BNWider", "(", "bn2", ",", "new_C_out", ",", "index", "=", "index", ")", "\n", "self", ".", "op", "[", "1", "]", "=", "conv1", "\n", "self", ".", "op", "[", "2", "]", "=", "conv2", "\n", "self", ".", "op", "[", "5", "]", "=", "conv3", "\n", "self", ".", "op", "[", "6", "]", "=", "conv4", "\n", "self", ".", "op", "[", "3", "]", "=", "bn1", "\n", "self", ".", "op", "[", "7", "]", "=", "bn2", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.operations.Identity.__init__": [[160, 162], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.NetworkImageNet.__init__"], ["  ", "def", "__init__", "(", "self", ")", ":", "\n", "    ", "super", "(", "Identity", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.operations.Identity.forward": [[163, 165], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.operations.Identity.wider": [[166, 168], ["None"], "methods", ["None"], ["", "def", "wider", "(", "self", ",", "new_C_in", ",", "new_C_out", ")", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.operations.Zero.__init__": [[172, 175], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.NetworkImageNet.__init__"], ["  ", "def", "__init__", "(", "self", ",", "stride", ")", ":", "\n", "    ", "super", "(", "Zero", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.operations.Zero.forward": [[176, 180], ["x[].mul", "x.mul"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "if", "self", ".", "stride", "==", "1", ":", "\n", "      ", "return", "x", ".", "mul", "(", "0.", ")", "\n", "", "return", "x", "[", ":", ",", ":", ",", ":", ":", "self", ".", "stride", ",", ":", ":", "self", ".", "stride", "]", ".", "mul", "(", "0.", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.operations.Zero.wider": [[181, 183], ["None"], "methods", ["None"], ["", "def", "wider", "(", "self", ",", "new_C_in", ",", "new_C_out", ")", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.operations.FactorizedReduce.__init__": [[187, 194], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.NetworkImageNet.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "affine", "=", "True", ")", ":", "\n", "    ", "super", "(", "FactorizedReduce", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "C_out", "%", "2", "==", "0", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", "\n", "self", ".", "conv_1", "=", "nn", ".", "Conv2d", "(", "C_in", ",", "C_out", "//", "2", ",", "1", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv_2", "=", "nn", ".", "Conv2d", "(", "C_in", ",", "C_out", "//", "2", ",", "1", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "C_out", ",", "affine", "=", "affine", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.operations.FactorizedReduce.forward": [[195, 200], ["operations.FactorizedReduce.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "operations.FactorizedReduce.bn", "operations.FactorizedReduce.conv_1", "operations.FactorizedReduce.conv_2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "out", "=", "torch", ".", "cat", "(", "[", "self", ".", "conv_1", "(", "x", ")", ",", "self", ".", "conv_2", "(", "x", "[", ":", ",", ":", ",", "1", ":", ",", "1", ":", "]", ")", "]", ",", "dim", "=", "1", ")", "\n", "out", "=", "self", ".", "bn", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.operations.FactorizedReduce.wider": [[201, 207], ["net2wider.InChannelWider", "net2wider.OutChannelWider", "net2wider.InChannelWider", "net2wider.OutChannelWider", "net2wider.BNWider", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.InChannelWider", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.OutChannelWider", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.InChannelWider", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.OutChannelWider", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.BNWider"], ["", "def", "wider", "(", "self", ",", "new_C_in", ",", "new_C_out", ")", ":", "\n", "    ", "self", ".", "conv_1", ",", "_", "=", "InChannelWider", "(", "self", ".", "conv_1", ",", "new_C_in", ")", "\n", "self", ".", "conv_1", ",", "index1", "=", "OutChannelWider", "(", "self", ".", "conv_1", ",", "new_C_out", "//", "2", ")", "\n", "self", ".", "conv_2", ",", "_", "=", "InChannelWider", "(", "self", ".", "conv_2", ",", "new_C_in", ")", "\n", "self", ".", "conv_2", ",", "index2", "=", "OutChannelWider", "(", "self", ".", "conv_2", ",", "new_C_out", "//", "2", ")", "\n", "self", ".", "bn", ",", "_", "=", "BNWider", "(", "self", ".", "bn", ",", "new_C_out", ",", "index", "=", "torch", ".", "cat", "(", "[", "index1", ",", "index2", "]", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.train_imagenet.CrossEntropyLabelSmooth.__init__": [[64, 69], ["torch.Module.__init__", "torch.LogSoftmax", "torch.LogSoftmax", "torch.LogSoftmax", "torch.LogSoftmax"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.NetworkImageNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", ",", "epsilon", ")", ":", "\n", "        ", "super", "(", "CrossEntropyLabelSmooth", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "epsilon", "=", "epsilon", "\n", "self", ".", "logsoftmax", "=", "nn", ".", "LogSoftmax", "(", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.train_imagenet.CrossEntropyLabelSmooth.forward": [[70, 76], ["train_imagenet.CrossEntropyLabelSmooth.logsoftmax", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_.unsqueeze", "torch.zeros_like().scatter_.unsqueeze", "torch.zeros_like().scatter_.unsqueeze", "torch.zeros_like().scatter_.unsqueeze", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "targets", ")", ":", "\n", "        ", "log_probs", "=", "self", ".", "logsoftmax", "(", "inputs", ")", "\n", "targets", "=", "torch", ".", "zeros_like", "(", "log_probs", ")", ".", "scatter_", "(", "1", ",", "targets", ".", "unsqueeze", "(", "1", ")", ",", "1", ")", "\n", "targets", "=", "(", "1", "-", "self", ".", "epsilon", ")", "*", "targets", "+", "self", ".", "epsilon", "/", "self", ".", "num_classes", "\n", "loss", "=", "(", "-", "targets", "*", "log_probs", ")", ".", "mean", "(", "0", ")", ".", "sum", "(", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.train_imagenet.main": [[78, 191], ["numpy.random.seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "logging.info", "logging.info", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "eval", "print", "logging.info", "print", "model.NetworkImageNet", "logging.info", "torch.CrossEntropyLoss", "criterion.cuda.cuda", "train_imagenet.CrossEntropyLabelSmooth", "criterion_smooth.cuda.cuda", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "os.path.join", "os.path.join", "torchvision.Normalize", "torchvision.ImageFolder", "torchvision.ImageFolder", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "range", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "logging.info", "sys.exit", "torch.DataParallel", "model.cuda.cuda", "model.cuda.cuda", "utils.count_parameters_in_MB", "model.cuda.parameters", "torchvision.Compose", "torchvision.Compose", "float", "logging.info", "time.time", "train_imagenet.train", "logging.info", "train_imagenet.infer", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "utils.save_checkpoint", "torch.optim.lr_scheduler.CosineAnnealingLR.step", "logging.info", "time.time", "torchvision.RandomResizedCrop", "torchvision.RandomHorizontalFlip", "torchvision.ColorJitter", "torchvision.ToTensor", "torchvision.Resize", "torchvision.CenterCrop", "torchvision.ToTensor", "torch.optim.lr_scheduler.CosineAnnealingLR.get_lr", "train_imagenet.adjust_lr", "print", "sys.exit", "model.cuda.state_dict", "torch.optim.SGD.state_dict"], "function", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.count_parameters_in_MB", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.train_search_imagenet.train", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.train_search_imagenet.infer", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.save_checkpoint", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.architect.Architect.step", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.train_imagenet.adjust_lr"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "if", "not", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "logging", ".", "info", "(", "'No GPU device available'", ")", "\n", "sys", ".", "exit", "(", "1", ")", "\n", "", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "cudnn", ".", "benchmark", "=", "True", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "cudnn", ".", "enabled", "=", "True", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "logging", ".", "info", "(", "\"args = %s\"", ",", "args", ")", "\n", "logging", ".", "info", "(", "\"unparsed_args = %s\"", ",", "unparsed", ")", "\n", "num_gpus", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "genotype", "=", "eval", "(", "\"genotypes.%s\"", "%", "args", ".", "arch", ")", "\n", "print", "(", "'---------Genotype---------'", ")", "\n", "logging", ".", "info", "(", "genotype", ")", "\n", "print", "(", "'--------------------------'", ")", "\n", "model", "=", "Network", "(", "args", ".", "init_channels", ",", "CLASSES", ",", "args", ".", "layers", ",", "args", ".", "auxiliary", ",", "genotype", ")", "\n", "if", "num_gpus", ">", "1", ":", "\n", "        ", "model", "=", "nn", ".", "DataParallel", "(", "model", ")", "\n", "model", "=", "model", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "        ", "model", "=", "model", ".", "cuda", "(", ")", "\n", "", "logging", ".", "info", "(", "\"param size = %fMB\"", ",", "utils", ".", "count_parameters_in_MB", "(", "model", ")", ")", "\n", "\n", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "criterion", "=", "criterion", ".", "cuda", "(", ")", "\n", "criterion_smooth", "=", "CrossEntropyLabelSmooth", "(", "CLASSES", ",", "args", ".", "label_smooth", ")", "\n", "criterion_smooth", "=", "criterion_smooth", ".", "cuda", "(", ")", "\n", "\n", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "\n", "model", ".", "parameters", "(", ")", ",", "\n", "args", ".", "learning_rate", ",", "\n", "momentum", "=", "args", ".", "momentum", ",", "\n", "weight_decay", "=", "args", ".", "weight_decay", "\n", ")", "\n", "\n", "traindir", "=", "os", ".", "path", ".", "join", "(", "args", ".", "data", ",", "'train'", ")", "\n", "validdir", "=", "os", ".", "path", ".", "join", "(", "args", ".", "data", ",", "'val'", ")", "\n", "normalize", "=", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "train_data", "=", "dset", ".", "ImageFolder", "(", "\n", "traindir", ",", "\n", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "224", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ColorJitter", "(", "\n", "brightness", "=", "0.4", ",", "\n", "contrast", "=", "0.4", ",", "\n", "saturation", "=", "0.4", ",", "\n", "hue", "=", "0.2", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", ",", "\n", "]", ")", ")", "\n", "valid_data", "=", "dset", ".", "ImageFolder", "(", "\n", "validdir", ",", "\n", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "256", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "224", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", ",", "\n", "]", ")", ")", "\n", "\n", "train_queue", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "train_data", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "pin_memory", "=", "True", ",", "num_workers", "=", "args", ".", "workers", ")", "\n", "\n", "valid_queue", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "valid_data", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "False", ",", "pin_memory", "=", "True", ",", "num_workers", "=", "args", ".", "workers", ")", "\n", "\n", "#    scheduler = torch.optim.lr_scheduler.StepLR(optimizer, args.decay_period, gamma=args.gamma)", "\n", "scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "CosineAnnealingLR", "(", "optimizer", ",", "float", "(", "args", ".", "epochs", ")", ")", "\n", "best_acc_top1", "=", "0", "\n", "best_acc_top5", "=", "0", "\n", "lr", "=", "args", ".", "learning_rate", "\n", "for", "epoch", "in", "range", "(", "args", ".", "epochs", ")", ":", "\n", "        ", "if", "args", ".", "lr_scheduler", "==", "'cosine'", ":", "\n", "            ", "scheduler", ".", "step", "(", ")", "\n", "current_lr", "=", "scheduler", ".", "get_lr", "(", ")", "[", "0", "]", "\n", "", "elif", "args", ".", "lr_scheduler", "==", "'linear'", ":", "\n", "            ", "current_lr", "=", "adjust_lr", "(", "optimizer", ",", "epoch", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'Wrong lr type, exit'", ")", "\n", "sys", ".", "exit", "(", "1", ")", "\n", "", "logging", ".", "info", "(", "'Epoch: %d lr %e'", ",", "epoch", ",", "current_lr", ")", "\n", "if", "epoch", "<", "5", "and", "args", ".", "batch_size", ">", "256", ":", "\n", "            ", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "                ", "param_group", "[", "'lr'", "]", "=", "lr", "*", "(", "epoch", "+", "1", ")", "/", "5.0", "\n", "", "logging", ".", "info", "(", "'Warming-up Epoch: %d, LR: %e'", ",", "epoch", ",", "lr", "*", "(", "epoch", "+", "1", ")", "/", "5.0", ")", "\n", "", "if", "num_gpus", ">", "1", ":", "\n", "            ", "model", ".", "module", ".", "drop_path_prob", "=", "args", ".", "drop_path_prob", "*", "epoch", "/", "args", ".", "epochs", "\n", "", "else", ":", "\n", "            ", "model", ".", "drop_path_prob", "=", "args", ".", "drop_path_prob", "*", "epoch", "/", "args", ".", "epochs", "\n", "", "epoch_start", "=", "time", ".", "time", "(", ")", "\n", "train_acc", ",", "train_obj", "=", "train", "(", "train_queue", ",", "model", ",", "criterion_smooth", ",", "optimizer", ")", "\n", "logging", ".", "info", "(", "'Train_acc: %f'", ",", "train_acc", ")", "\n", "\n", "valid_acc_top1", ",", "valid_acc_top5", ",", "valid_obj", "=", "infer", "(", "valid_queue", ",", "model", ",", "criterion", ")", "\n", "logging", ".", "info", "(", "'Valid_acc_top1: %f'", ",", "valid_acc_top1", ")", "\n", "logging", ".", "info", "(", "'Valid_acc_top5: %f'", ",", "valid_acc_top5", ")", "\n", "epoch_duration", "=", "time", ".", "time", "(", ")", "-", "epoch_start", "\n", "logging", ".", "info", "(", "'Epoch time: %ds.'", ",", "epoch_duration", ")", "\n", "is_best", "=", "False", "\n", "if", "valid_acc_top5", ">", "best_acc_top5", ":", "\n", "            ", "best_acc_top5", "=", "valid_acc_top5", "\n", "", "if", "valid_acc_top1", ">", "best_acc_top1", ":", "\n", "            ", "best_acc_top1", "=", "valid_acc_top1", "\n", "is_best", "=", "True", "\n", "", "logging", ".", "info", "(", "'Best_acc_top1: %f'", ",", "best_acc_top1", ")", "\n", "logging", ".", "info", "(", "'Best_acc_top5: %f'", ",", "best_acc_top5", ")", "\n", "utils", ".", "save_checkpoint", "(", "{", "\n", "'epoch'", ":", "epoch", "+", "1", ",", "\n", "'state_dict'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'best_acc_top1'", ":", "best_acc_top1", ",", "\n", "'optimizer'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "}", ",", "is_best", ",", "args", ".", "save", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.train_imagenet.adjust_lr": [[193, 202], ["None"], "function", ["None"], ["", "", "def", "adjust_lr", "(", "optimizer", ",", "epoch", ")", ":", "\n", "# Smaller slope for the last 5 epochs because lr * 1/250 is relatively large", "\n", "    ", "if", "args", ".", "epochs", "-", "epoch", ">", "5", ":", "\n", "        ", "lr", "=", "args", ".", "learning_rate", "*", "(", "args", ".", "epochs", "-", "5", "-", "epoch", ")", "/", "(", "args", ".", "epochs", "-", "5", ")", "\n", "", "else", ":", "\n", "        ", "lr", "=", "args", ".", "learning_rate", "*", "(", "args", ".", "epochs", "-", "epoch", ")", "/", "(", "(", "args", ".", "epochs", "-", "5", ")", "*", "5", ")", "\n", "", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "", "return", "lr", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.train_imagenet.train": [[204, 245], ["utils.AvgrageMeter", "utils.AvgrageMeter", "utils.AvgrageMeter", "utils.AvgrageMeter", "model.train", "enumerate", "target.cuda.cuda", "input.cuda.cuda", "time.time", "optimizer.zero_grad", "model", "criterion", "criterion.backward", "torch.utils.clip_grad_norm_", "optimizer.step", "utils.AvgrageMeter.update", "utils.accuracy", "input.cuda.size", "utils.AvgrageMeter.update", "utils.AvgrageMeter.update", "utils.AvgrageMeter.update", "criterion", "model.parameters", "time.time", "logging.info", "time.time", "time.time", "time.time"], "function", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.train_search_imagenet.train", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.architect.Architect.step", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.accuracy", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update"], ["", "def", "train", "(", "train_queue", ",", "model", ",", "criterion", ",", "optimizer", ")", ":", "\n", "    ", "objs", "=", "utils", ".", "AvgrageMeter", "(", ")", "\n", "top1", "=", "utils", ".", "AvgrageMeter", "(", ")", "\n", "top5", "=", "utils", ".", "AvgrageMeter", "(", ")", "\n", "batch_time", "=", "utils", ".", "AvgrageMeter", "(", ")", "\n", "model", ".", "train", "(", ")", "\n", "\n", "for", "step", ",", "(", "input", ",", "target", ")", "in", "enumerate", "(", "train_queue", ")", ":", "\n", "        ", "target", "=", "target", ".", "cuda", "(", "non_blocking", "=", "True", ")", "\n", "input", "=", "input", ".", "cuda", "(", "non_blocking", "=", "True", ")", "\n", "b_start", "=", "time", ".", "time", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "logits", ",", "logits_aux", "=", "model", "(", "input", ")", "\n", "loss", "=", "criterion", "(", "logits", ",", "target", ")", "\n", "if", "args", ".", "auxiliary", ":", "\n", "            ", "loss_aux", "=", "criterion", "(", "logits_aux", ",", "target", ")", "\n", "loss", "+=", "args", ".", "auxiliary_weight", "*", "loss_aux", "\n", "\n", "", "loss", ".", "backward", "(", ")", "\n", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "model", ".", "parameters", "(", ")", ",", "args", ".", "grad_clip", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "b_start", ")", "\n", "\n", "prec1", ",", "prec5", "=", "utils", ".", "accuracy", "(", "logits", ",", "target", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "n", "=", "input", ".", "size", "(", "0", ")", "\n", "objs", ".", "update", "(", "loss", ".", "data", ",", "n", ")", "\n", "top1", ".", "update", "(", "prec1", ".", "data", ",", "n", ")", "\n", "top5", ".", "update", "(", "prec5", ".", "data", ",", "n", ")", "\n", "\n", "if", "step", "%", "args", ".", "report_freq", "==", "0", ":", "\n", "            ", "end_time", "=", "time", ".", "time", "(", ")", "\n", "if", "step", "==", "0", ":", "\n", "                ", "duration", "=", "0", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "", "else", ":", "\n", "                ", "duration", "=", "end_time", "-", "start_time", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "", "logging", ".", "info", "(", "'TRAIN Step: %03d Objs: %e R1: %f R5: %f Duration: %ds BTime: %.3fs'", ",", "\n", "step", ",", "objs", ".", "avg", ",", "top1", ".", "avg", ",", "top5", ".", "avg", ",", "duration", ",", "batch_time", ".", "avg", ")", "\n", "\n", "", "", "return", "top1", ".", "avg", ",", "objs", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.train_imagenet.infer": [[247, 279], ["utils.AvgrageMeter", "utils.AvgrageMeter", "utils.AvgrageMeter", "model.eval", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "input.cuda.cuda", "target.cuda.cuda", "model", "criterion", "utils.accuracy", "input.cuda.size", "utils.AvgrageMeter.update", "utils.AvgrageMeter.update", "utils.AvgrageMeter.update", "time.time", "logging.info", "time.time", "time.time"], "function", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.accuracy", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update"], ["", "def", "infer", "(", "valid_queue", ",", "model", ",", "criterion", ")", ":", "\n", "    ", "objs", "=", "utils", ".", "AvgrageMeter", "(", ")", "\n", "top1", "=", "utils", ".", "AvgrageMeter", "(", ")", "\n", "top5", "=", "utils", ".", "AvgrageMeter", "(", ")", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "step", ",", "(", "input", ",", "target", ")", "in", "enumerate", "(", "valid_queue", ")", ":", "\n", "            ", "input", "=", "input", ".", "cuda", "(", ")", "\n", "target", "=", "target", ".", "cuda", "(", "non_blocking", "=", "True", ")", "\n", "\n", "logits", ",", "_", "=", "model", "(", "input", ")", "\n", "loss", "=", "criterion", "(", "logits", ",", "target", ")", "\n", "\n", "prec1", ",", "prec5", "=", "utils", ".", "accuracy", "(", "logits", ",", "target", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "n", "=", "input", ".", "size", "(", "0", ")", "\n", "objs", ".", "update", "(", "loss", ".", "data", ",", "n", ")", "\n", "top1", ".", "update", "(", "prec1", ".", "data", ",", "n", ")", "\n", "top5", ".", "update", "(", "prec5", ".", "data", ",", "n", ")", "\n", "\n", "if", "step", "%", "args", ".", "report_freq", "==", "0", ":", "\n", "                ", "end_time", "=", "time", ".", "time", "(", ")", "\n", "if", "step", "==", "0", ":", "\n", "                    ", "duration", "=", "0", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "", "else", ":", "\n", "                    ", "duration", "=", "end_time", "-", "start_time", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "", "logging", ".", "info", "(", "'VALID Step: %03d Objs: %e R1: %f R5: %f Duration: %ds'", ",", "\n", "step", ",", "objs", ".", "avg", ",", "top1", ".", "avg", ",", "top5", ".", "avg", ",", "duration", ")", "\n", "\n", "", "", "", "return", "top1", ".", "avg", ",", "top5", ".", "avg", ",", "objs", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search.MixedOp.__init__": [[28, 40], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "model_search.MixedOp._ops.append"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.NetworkImageNet.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C", ",", "stride", ",", "k", ")", ":", "\n", "    ", "super", "(", "MixedOp", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "k", "=", "k", "\n", "self", ".", "C", "=", "C", "\n", "self", ".", "_ops", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "mp", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "2", ")", "\n", "\n", "for", "primitive", "in", "PRIMITIVES", ":", "\n", "      ", "op", "=", "OPS", "[", "primitive", "]", "(", "C", "//", "self", ".", "k", ",", "stride", ",", "False", ")", "\n", "# if 'pool' in primitive:", "\n", "#   op = nn.Sequential(op, nn.BatchNorm2d(C //self.k, affine=False))", "\n", "self", ".", "_ops", ".", "append", "(", "op", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search.MixedOp.forward": [[41, 57], ["sum", "model_search.channel_shuffle", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "op", "zip", "model_search.MixedOp.mp"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.channel_shuffle"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "weights", ")", ":", "\n", "    ", "dim_2", "=", "x", ".", "shape", "[", "1", "]", "\n", "xtemp", "=", "x", "[", ":", ",", ":", "dim_2", "//", "self", ".", "k", ",", ":", ",", ":", "]", "\n", "xtemp2", "=", "x", "[", ":", ",", "dim_2", "//", "self", ".", "k", ":", ",", ":", ",", ":", "]", "\n", "temp1", "=", "sum", "(", "w", "*", "op", "(", "xtemp", ")", "for", "w", ",", "op", "in", "zip", "(", "weights", ",", "self", ".", "_ops", ")", "if", "not", "w", "==", "0", ")", "\n", "if", "self", ".", "k", "==", "1", ":", "\n", "      ", "return", "temp1", "\n", "#reduction cell needs pooling before concat", "\n", "", "if", "temp1", ".", "shape", "[", "2", "]", "==", "x", ".", "shape", "[", "2", "]", ":", "\n", "      ", "ans", "=", "torch", ".", "cat", "(", "[", "temp1", ",", "xtemp2", "]", ",", "dim", "=", "1", ")", "\n", "", "else", ":", "\n", "      ", "ans", "=", "torch", ".", "cat", "(", "[", "temp1", ",", "self", ".", "mp", "(", "xtemp2", ")", "]", ",", "dim", "=", "1", ")", "\n", "", "ans", "=", "channel_shuffle", "(", "ans", ",", "self", ".", "k", ")", "\n", "#ans = torch.cat([ans[ : ,  dim_2//4:, :, :],ans[ : , :  dim_2//4, :, :]],dim=1)", "\n", "#except channe shuffle, channel shift also works", "\n", "return", "ans", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search.MixedOp.wider": [[58, 62], ["op.wider"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.wider"], ["", "def", "wider", "(", "self", ",", "k", ")", ":", "\n", "    ", "self", ".", "k", "=", "k", "\n", "for", "op", "in", "self", ".", "_ops", ":", "\n", "      ", "op", ".", "wider", "(", "self", ".", "C", "//", "k", ",", "self", ".", "C", "//", "k", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search.Cell.__init__": [[66, 86], ["torch.Module.__init__", "operations.ReLUConvBN", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "operations.FactorizedReduce", "operations.ReLUConvBN", "range", "model_search.MixedOp", "model_search.Cell._ops.append"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.NetworkImageNet.__init__", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_cells.NAS201SearchCell_PartialChannel.MixedOp"], ["  ", "def", "__init__", "(", "self", ",", "steps", ",", "multiplier", ",", "C_prev_prev", ",", "C_prev", ",", "C", ",", "reduction", ",", "reduction_prev", ",", "k", ")", ":", "\n", "    ", "super", "(", "Cell", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "reduction", "=", "reduction", "\n", "self", ".", "k", "=", "k", "\n", "\n", "if", "reduction_prev", ":", "\n", "      ", "self", ".", "preprocess0", "=", "FactorizedReduce", "(", "C_prev_prev", ",", "C", ",", "affine", "=", "False", ")", "\n", "", "else", ":", "\n", "      ", "self", ".", "preprocess0", "=", "ReLUConvBN", "(", "C_prev_prev", ",", "C", ",", "1", ",", "1", ",", "0", ",", "affine", "=", "False", ")", "\n", "", "self", ".", "preprocess1", "=", "ReLUConvBN", "(", "C_prev", ",", "C", ",", "1", ",", "1", ",", "0", ",", "affine", "=", "False", ")", "\n", "self", ".", "_steps", "=", "steps", "\n", "self", ".", "_multiplier", "=", "multiplier", "\n", "\n", "self", ".", "_ops", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "_bns", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "_steps", ")", ":", "\n", "      ", "for", "j", "in", "range", "(", "2", "+", "i", ")", ":", "\n", "        ", "stride", "=", "2", "if", "reduction", "and", "j", "<", "2", "else", "1", "\n", "op", "=", "MixedOp", "(", "C", ",", "stride", ",", "self", ".", "k", ")", "\n", "self", ".", "_ops", ".", "append", "(", "op", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search.Cell.forward": [[87, 99], ["model_search.Cell.preprocess0", "model_search.Cell.preprocess1", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "sum", "len", "states.append", "enumerate"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "s0", ",", "s1", ",", "weights", ")", ":", "\n", "    ", "s0", "=", "self", ".", "preprocess0", "(", "s0", ")", "\n", "s1", "=", "self", ".", "preprocess1", "(", "s1", ")", "\n", "\n", "states", "=", "[", "s0", ",", "s1", "]", "\n", "offset", "=", "0", "\n", "for", "i", "in", "range", "(", "self", ".", "_steps", ")", ":", "\n", "      ", "s", "=", "sum", "(", "self", ".", "_ops", "[", "offset", "+", "j", "]", "(", "h", ",", "weights", "[", "offset", "+", "j", "]", ")", "for", "j", ",", "h", "in", "enumerate", "(", "states", ")", ")", "\n", "offset", "+=", "len", "(", "states", ")", "\n", "states", ".", "append", "(", "s", ")", "\n", "\n", "", "return", "torch", ".", "cat", "(", "states", "[", "-", "self", ".", "_multiplier", ":", "]", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search.Cell.wider": [[100, 104], ["op.wider"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.wider"], ["", "def", "wider", "(", "self", ",", "k", ")", ":", "\n", "    ", "self", ".", "k", "=", "k", "\n", "for", "op", "in", "self", ".", "_ops", ":", "\n", "      ", "op", ".", "wider", "(", "k", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search.Network.__init__": [[108, 149], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "model_search.Network._initialize_alphas", "torch.distributions.dirichlet.Dirichlet", "torch.distributions.dirichlet.Dirichlet", "torch.distributions.dirichlet.Dirichlet", "torch.distributions.dirichlet.Dirichlet", "torch.distributions.dirichlet.Dirichlet", "torch.distributions.dirichlet.Dirichlet", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "model_search.Cell", "torch.ones_like().cuda", "torch.ones_like().cuda", "torch.ones_like().cuda", "torch.ones_like().cuda", "torch.ones_like().cuda", "torch.ones_like().cuda", "torch.ones_like().cuda", "torch.ones_like().cuda", "torch.ones_like().cuda", "torch.ones_like().cuda", "torch.ones_like().cuda", "torch.ones_like().cuda", "torch.ones_like().cuda", "torch.ones_like().cuda", "torch.ones_like().cuda", "torch.ones_like().cuda", "torch.ones_like().cuda", "torch.ones_like().cuda", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.NetworkImageNet.__init__", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network._initialize_alphas"], ["  ", "def", "__init__", "(", "self", ",", "C", ",", "num_classes", ",", "layers", ",", "criterion", ",", "steps", "=", "4", ",", "multiplier", "=", "4", ",", "stem_multiplier", "=", "3", ",", "k", "=", "4", ",", "\n", "reg_type", "=", "'l2'", ",", "reg_scale", "=", "1e-3", ")", ":", "\n", "    ", "super", "(", "Network", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_C", "=", "C", "\n", "self", ".", "_num_classes", "=", "num_classes", "\n", "self", ".", "_layers", "=", "layers", "\n", "self", ".", "_criterion", "=", "criterion", "\n", "self", ".", "_steps", "=", "steps", "\n", "self", ".", "_multiplier", "=", "multiplier", "\n", "self", ".", "k", "=", "k", "\n", "\n", "C_curr", "=", "stem_multiplier", "*", "C", "\n", "self", ".", "stem", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "C_curr", ",", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "C_curr", ")", "\n", ")", "\n", "\n", "C_prev_prev", ",", "C_prev", ",", "C_curr", "=", "C_curr", ",", "C_curr", ",", "C", "\n", "self", ".", "cells", "=", "nn", ".", "ModuleList", "(", ")", "\n", "reduction_prev", "=", "False", "\n", "for", "i", "in", "range", "(", "layers", ")", ":", "\n", "      ", "if", "i", "in", "[", "layers", "//", "3", ",", "2", "*", "layers", "//", "3", "]", ":", "\n", "        ", "C_curr", "*=", "2", "\n", "reduction", "=", "True", "\n", "", "else", ":", "\n", "        ", "reduction", "=", "False", "\n", "", "cell", "=", "Cell", "(", "steps", ",", "multiplier", ",", "C_prev_prev", ",", "C_prev", ",", "C_curr", ",", "reduction", ",", "reduction_prev", ",", "k", ")", "\n", "reduction_prev", "=", "reduction", "\n", "self", ".", "cells", "+=", "[", "cell", "]", "\n", "C_prev_prev", ",", "C_prev", "=", "C_prev", ",", "multiplier", "*", "C_curr", "\n", "\n", "", "self", ".", "global_pooling", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "C_prev", ",", "num_classes", ")", "\n", "\n", "self", ".", "_initialize_alphas", "(", ")", "\n", "\n", "#### reg", "\n", "self", ".", "reg_type", "=", "reg_type", "\n", "self", ".", "reg_scale", "=", "reg_scale", "\n", "self", ".", "anchor_normal", "=", "Dirichlet", "(", "torch", ".", "ones_like", "(", "self", ".", "alphas_normal", ")", ".", "cuda", "(", ")", ")", "\n", "self", ".", "anchor_reduce", "=", "Dirichlet", "(", "torch", ".", "ones_like", "(", "self", ".", "alphas_reduce", ")", ".", "cuda", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search.Network.new": [[150, 155], ["Network().cuda", "zip", "Network().cuda.arch_parameters", "model_search.Network.arch_parameters", "x.data.copy_", "model_search.Network"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.arch_parameters", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.arch_parameters"], ["", "def", "new", "(", "self", ")", ":", "\n", "    ", "model_new", "=", "Network", "(", "self", ".", "_C", ",", "self", ".", "_num_classes", ",", "self", ".", "_layers", ",", "self", ".", "_criterion", ")", ".", "cuda", "(", ")", "\n", "for", "x", ",", "y", "in", "zip", "(", "model_new", ".", "arch_parameters", "(", ")", ",", "self", ".", "arch_parameters", "(", ")", ")", ":", "\n", "        ", "x", ".", "data", ".", "copy_", "(", "y", ".", "data", ")", "\n", "", "return", "model_new", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search.Network.show_arch_parameters": [[156, 162], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "logging.info", "logging.info", "logging.info", "logging.info", "utils.process_step_matrix().cpu", "utils.process_step_matrix().cpu", "utils.process_step_matrix", "utils.process_step_matrix", "torch.elu", "torch.elu", "torch.elu", "torch.elu", "torch.elu", "torch.elu"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.process_step_matrix", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.process_step_matrix"], ["", "def", "show_arch_parameters", "(", "self", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "      ", "logging", ".", "info", "(", "'alphas normal :\\n{:}'", ".", "format", "(", "process_step_matrix", "(", "self", ".", "alphas_normal", ",", "'softmax'", ",", "self", ".", "mask_normal", ")", ".", "cpu", "(", ")", ")", ")", "\n", "logging", ".", "info", "(", "'alphas reduce :\\n{:}'", ".", "format", "(", "process_step_matrix", "(", "self", ".", "alphas_reduce", ",", "'softmax'", ",", "self", ".", "mask_reduce", ")", ".", "cpu", "(", ")", ")", ")", "\n", "logging", ".", "info", "(", "'concentration normal:\\n{:}'", ".", "format", "(", "(", "F", ".", "elu", "(", "self", ".", "alphas_normal", ")", "+", "1", ")", ".", "cpu", "(", ")", ")", ")", "\n", "logging", ".", "info", "(", "'concentration reduce:\\n{:}'", ".", "format", "(", "(", "F", ".", "elu", "(", "self", ".", "alphas_reduce", ")", "+", "1", ")", ".", "cpu", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search.Network.pruning": [[163, 167], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "utils.prune", "utils.prune"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.prune", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.prune"], ["", "", "def", "pruning", "(", "self", ",", "num_keep", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "      ", "self", ".", "mask_normal", "=", "prune", "(", "self", ".", "alphas_normal", ",", "num_keep", ",", "self", ".", "mask_normal", ")", "\n", "self", ".", "mask_reduce", "=", "prune", "(", "self", ".", "alphas_reduce", ",", "num_keep", ",", "self", ".", "mask_reduce", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search.Network.wider": [[168, 172], ["cell.wider"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.wider"], ["", "", "def", "wider", "(", "self", ",", "k", ")", ":", "\n", "    ", "self", ".", "k", "=", "k", "\n", "for", "cell", "in", "self", ".", "cells", ":", "\n", "      ", "cell", ".", "wider", "(", "k", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search.Network.forward": [[173, 192], ["model_search.Network.stem", "utils.process_step_matrix", "utils.process_step_matrix", "enumerate", "model_search.Network.global_pooling", "model_search.Network.classifier", "model_search.Network.view", "cell", "model_search.Network.size"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.process_step_matrix", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.process_step_matrix"], ["", "", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "    ", "s0", "=", "s1", "=", "self", ".", "stem", "(", "input", ")", "\n", "\n", "weights_normal", "=", "process_step_matrix", "(", "self", ".", "alphas_normal", ",", "'dirichlet'", ",", "self", ".", "mask_normal", ")", "\n", "weights_reduce", "=", "process_step_matrix", "(", "self", ".", "alphas_reduce", ",", "'dirichlet'", ",", "self", ".", "mask_reduce", ")", "\n", "if", "not", "self", ".", "mask_normal", "is", "None", ":", "\n", "      ", "assert", "(", "weights_normal", "[", "~", "self", ".", "mask_normal", "]", "==", "0.0", ")", ".", "all", "(", ")", "\n", "", "if", "not", "self", ".", "mask_reduce", "is", "None", ":", "\n", "      ", "assert", "(", "weights_reduce", "[", "~", "self", ".", "mask_reduce", "]", "==", "0.0", ")", ".", "all", "(", ")", "\n", "\n", "", "for", "i", ",", "cell", "in", "enumerate", "(", "self", ".", "cells", ")", ":", "\n", "      ", "if", "cell", ".", "reduction", ":", "\n", "        ", "weights", "=", "weights_reduce", "\n", "", "else", ":", "\n", "        ", "weights", "=", "weights_normal", "\n", "", "s0", ",", "s1", "=", "s1", ",", "cell", "(", "s0", ",", "s1", ",", "weights", ")", "\n", "", "out", "=", "self", ".", "global_pooling", "(", "s1", ")", "\n", "logits", "=", "self", ".", "classifier", "(", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", "\n", "return", "logits", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search.Network._loss": [[193, 199], ["model_search.Network.", "model_search.Network._criterion", "model_search.Network._get_kl_reg"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search.Network._get_kl_reg"], ["", "def", "_loss", "(", "self", ",", "input", ",", "target", ")", ":", "\n", "    ", "logits", "=", "self", "(", "input", ")", "\n", "loss", "=", "self", ".", "_criterion", "(", "logits", ",", "target", ")", "\n", "if", "self", ".", "reg_type", "==", "'kl'", ":", "\n", "      ", "loss", "+=", "self", ".", "_get_kl_reg", "(", ")", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search.Network._get_kl_reg": [[200, 210], ["torch.distributions.dirichlet.Dirichlet", "torch.distributions.dirichlet.Dirichlet", "torch.distributions.dirichlet.Dirichlet", "torch.distributions.dirichlet.Dirichlet", "torch.distributions.dirichlet.Dirichlet", "torch.distributions.dirichlet.Dirichlet", "torch.elu", "torch.elu", "torch.elu", "torch.elu", "torch.elu", "torch.elu", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.distributions.kl.kl_divergence", "torch.distributions.kl.kl_divergence", "torch.distributions.kl.kl_divergence", "torch.distributions.kl.kl_divergence", "torch.distributions.kl.kl_divergence", "torch.distributions.kl.kl_divergence"], "methods", ["None"], ["", "def", "_get_kl_reg", "(", "self", ")", ":", "\n", "    ", "cons_normal", "=", "(", "F", ".", "elu", "(", "self", ".", "alphas_normal", ")", "+", "1", ")", "\n", "cons_reduce", "=", "(", "F", ".", "elu", "(", "self", ".", "alphas_reduce", ")", "+", "1", ")", "\n", "q_normal", "=", "Dirichlet", "(", "cons_normal", ")", "\n", "q_reduce", "=", "Dirichlet", "(", "cons_reduce", ")", "\n", "p_normal", "=", "self", ".", "anchor_normal", "\n", "p_reduce", "=", "self", ".", "anchor_reduce", "\n", "kl_reg", "=", "self", ".", "reg_scale", "*", "(", "torch", ".", "sum", "(", "kl_divergence", "(", "q_reduce", ",", "p_reduce", ")", ")", "+", "torch", ".", "sum", "(", "kl_divergence", "(", "q_normal", ",", "p_normal", ")", ")", ")", "\n", "return", "kl_reg", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search.Network._initialize_alphas": [[211, 223], ["sum", "len", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "range", "range", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn"], "methods", ["None"], ["", "def", "_initialize_alphas", "(", "self", ")", ":", "\n", "    ", "k", "=", "sum", "(", "1", "for", "i", "in", "range", "(", "self", ".", "_steps", ")", "for", "n", "in", "range", "(", "2", "+", "i", ")", ")", "\n", "num_ops", "=", "len", "(", "PRIMITIVES", ")", "\n", "\n", "self", ".", "alphas_normal", "=", "Variable", "(", "1e-3", "*", "torch", ".", "randn", "(", "k", ",", "num_ops", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "alphas_reduce", "=", "Variable", "(", "1e-3", "*", "torch", ".", "randn", "(", "k", ",", "num_ops", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "_arch_parameters", "=", "[", "\n", "self", ".", "alphas_normal", ",", "\n", "self", ".", "alphas_reduce", ",", "\n", "]", "\n", "self", ".", "mask_normal", "=", "None", "\n", "self", ".", "mask_reduce", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search.Network.arch_parameters": [[224, 226], ["None"], "methods", ["None"], ["", "def", "arch_parameters", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "_arch_parameters", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search.Network.genotype": [[227, 262], ["model_search.Network.genotype._parse"], "methods", ["None"], ["", "def", "genotype", "(", "self", ")", ":", "\n", "\n", "    ", "def", "_parse", "(", "weights", ")", ":", "\n", "      ", "gene", "=", "[", "]", "\n", "n", "=", "2", "\n", "start", "=", "0", "\n", "for", "i", "in", "range", "(", "self", ".", "_steps", ")", ":", "\n", "        ", "end", "=", "start", "+", "n", "\n", "W", "=", "weights", "[", "start", ":", "end", "]", ".", "copy", "(", ")", "\n", "# edges = sorted(range(i + 2), key=lambda x: -max(W[x][k] for k in range(len(W[x])) if k != PRIMITIVES.index('none')))[:2]", "\n", "edges", "=", "sorted", "(", "range", "(", "i", "+", "2", ")", ",", "key", "=", "lambda", "x", ":", "-", "max", "(", "W", "[", "x", "]", "[", "k", "]", "for", "k", "in", "range", "(", "len", "(", "W", "[", "x", "]", ")", ")", ")", ")", "[", ":", "2", "]", "\n", "for", "j", "in", "edges", ":", "\n", "          ", "k_best", "=", "None", "\n", "for", "k", "in", "range", "(", "len", "(", "W", "[", "j", "]", ")", ")", ":", "\n", "# if k != PRIMITIVES.index('none'):", "\n", "            ", "if", "k_best", "is", "None", "or", "W", "[", "j", "]", "[", "k", "]", ">", "W", "[", "j", "]", "[", "k_best", "]", ":", "\n", "              ", "k_best", "=", "k", "\n", "", "", "gene", ".", "append", "(", "(", "PRIMITIVES", "[", "k_best", "]", ",", "j", ")", ")", "\n", "", "start", "=", "end", "\n", "n", "+=", "1", "\n", "", "return", "gene", "\n", "\n", "# gene_normal = _parse(F.softmax(self.alphas_normal, dim=-1).data.cpu().numpy())", "\n", "# gene_reduce = _parse(F.softmax(self.alphas_reduce, dim=-1).data.cpu().numpy())", "\n", "", "gene_normal", "=", "_parse", "(", "process_step_matrix", "(", "self", ".", "alphas_normal", ",", "'softmax'", ",", "\n", "self", ".", "mask_normal", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "gene_reduce", "=", "_parse", "(", "process_step_matrix", "(", "self", ".", "alphas_reduce", ",", "'softmax'", ",", "\n", "self", ".", "mask_reduce", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "concat", "=", "range", "(", "2", "+", "self", ".", "_steps", "-", "self", ".", "_multiplier", ",", "self", ".", "_steps", "+", "2", ")", "\n", "genotype", "=", "Genotype", "(", "\n", "normal", "=", "gene_normal", ",", "normal_concat", "=", "concat", ",", "\n", "reduce", "=", "gene_reduce", ",", "reduce_concat", "=", "concat", "\n", ")", "\n", "return", "genotype", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search.channel_shuffle": [[14, 24], ["x.view.data.size", "x.view.view", "torch.transpose().contiguous", "torch.transpose().contiguous", "torch.transpose().contiguous", "x.view.view", "torch.transpose", "torch.transpose", "torch.transpose"], "function", ["None"], ["def", "channel_shuffle", "(", "x", ",", "groups", ")", ":", "\n", "    ", "batchsize", ",", "num_channels", ",", "height", ",", "width", "=", "x", ".", "data", ".", "size", "(", ")", "\n", "channels_per_group", "=", "num_channels", "//", "groups", "\n", "# reshape", "\n", "x", "=", "x", ".", "view", "(", "batchsize", ",", "groups", ",", "\n", "channels_per_group", ",", "height", ",", "width", ")", "\n", "x", "=", "torch", ".", "transpose", "(", "x", ",", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "# flatten", "\n", "x", "=", "x", ".", "view", "(", "batchsize", ",", "-", "1", ",", "height", ",", "width", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.train.main": [[66, 128], ["numpy.random.seed", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "logging.info", "logging.info", "eval", "print", "logging.info", "print", "model.NetworkCIFAR", "model.cuda.cuda", "logging.info", "torch.CrossEntropyLoss", "criterion.cuda.cuda", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "utils._data_transforms_cifar10", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "range", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "logging.info", "sys.exit", "utils.count_parameters_in_MB", "model.cuda.parameters", "torchvision.CIFAR100", "torchvision.CIFAR100", "torchvision.CIFAR10", "torchvision.CIFAR10", "float", "logging.info", "train.train", "logging.info", "train.infer", "logging.info", "torch.optim.lr_scheduler.CosineAnnealingLR.step", "utils.save", "os.path.join", "torch.optim.lr_scheduler.CosineAnnealingLR.get_lr"], "function", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils._data_transforms_cifar10", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.count_parameters_in_MB", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.train_search_imagenet.train", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.train_search_imagenet.infer", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.architect.Architect.step", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.save"], ["", "def", "main", "(", ")", ":", "\n", "  ", "if", "not", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "    ", "logging", ".", "info", "(", "'no gpu device available'", ")", "\n", "sys", ".", "exit", "(", "1", ")", "\n", "\n", "", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "cuda", ".", "set_device", "(", "args", ".", "gpu", ")", "\n", "cudnn", ".", "benchmark", "=", "True", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "cudnn", ".", "enabled", "=", "True", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "logging", ".", "info", "(", "'gpu device = %d'", "%", "args", ".", "gpu", ")", "\n", "logging", ".", "info", "(", "\"args = %s\"", ",", "args", ")", "\n", "\n", "genotype", "=", "eval", "(", "\"genotypes.%s\"", "%", "args", ".", "arch", ")", "\n", "print", "(", "'---------Genotype---------'", ")", "\n", "logging", ".", "info", "(", "genotype", ")", "\n", "print", "(", "'--------------------------'", ")", "\n", "model", "=", "Network", "(", "args", ".", "init_channels", ",", "CIFAR_CLASSES", ",", "args", ".", "layers", ",", "args", ".", "auxiliary", ",", "genotype", ")", "\n", "model", "=", "model", ".", "cuda", "(", ")", "\n", "\n", "logging", ".", "info", "(", "\"param size = %fMB\"", ",", "utils", ".", "count_parameters_in_MB", "(", "model", ")", ")", "\n", "\n", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "criterion", "=", "criterion", ".", "cuda", "(", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "\n", "model", ".", "parameters", "(", ")", ",", "\n", "args", ".", "learning_rate", ",", "\n", "momentum", "=", "args", ".", "momentum", ",", "\n", "weight_decay", "=", "args", ".", "weight_decay", "\n", ")", "\n", "\n", "train_transform", ",", "valid_transform", "=", "utils", ".", "_data_transforms_cifar10", "(", "args", ")", "\n", "if", "args", ".", "dataset", "==", "'cifar100'", ":", "\n", "      ", "train_data", "=", "dset", ".", "CIFAR100", "(", "root", "=", "args", ".", "data", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "train_transform", ")", "\n", "valid_data", "=", "dset", ".", "CIFAR100", "(", "root", "=", "args", ".", "data", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "valid_transform", ")", "\n", "", "else", ":", "\n", "      ", "train_data", "=", "dset", ".", "CIFAR10", "(", "root", "=", "args", ".", "data", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "train_transform", ")", "\n", "valid_data", "=", "dset", ".", "CIFAR10", "(", "root", "=", "args", ".", "data", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "valid_transform", ")", "\n", "\n", "", "train_queue", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "train_data", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "pin_memory", "=", "True", ")", "\n", "\n", "valid_queue", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "valid_data", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "False", ",", "pin_memory", "=", "True", ")", "\n", "\n", "scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "CosineAnnealingLR", "(", "optimizer", ",", "float", "(", "args", ".", "epochs", ")", ")", "\n", "best_acc", "=", "0.0", "\n", "for", "epoch", "in", "range", "(", "args", ".", "epochs", ")", ":", "\n", "    ", "logging", ".", "info", "(", "'epoch %d lr %e'", ",", "epoch", ",", "scheduler", ".", "get_lr", "(", ")", "[", "0", "]", ")", "\n", "model", ".", "drop_path_prob", "=", "args", ".", "drop_path_prob", "*", "epoch", "/", "args", ".", "epochs", "\n", "\n", "train_acc", ",", "train_obj", "=", "train", "(", "train_queue", ",", "model", ",", "criterion", ",", "optimizer", ")", "\n", "logging", ".", "info", "(", "'train_acc %f'", ",", "train_acc", ")", "\n", "\n", "valid_acc", ",", "valid_obj", "=", "infer", "(", "valid_queue", ",", "model", ",", "criterion", ")", "\n", "if", "valid_acc", ">", "best_acc", ":", "\n", "        ", "best_acc", "=", "valid_acc", "\n", "", "logging", ".", "info", "(", "'valid_acc %f, best_acc %f'", ",", "valid_acc", ",", "best_acc", ")", "\n", "\n", "scheduler", ".", "step", "(", ")", "\n", "utils", ".", "save", "(", "model", ",", "os", ".", "path", ".", "join", "(", "args", ".", "save", ",", "'weights.pt'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.train.train": [[130, 162], ["utils.AvgrageMeter", "utils.AvgrageMeter", "utils.AvgrageMeter", "model.train", "enumerate", "input.cuda.cuda", "target.cuda.cuda", "optimizer.zero_grad", "model", "criterion", "criterion.backward", "torch.utils.clip_grad_norm_", "optimizer.step", "utils.accuracy", "input.cuda.size", "utils.AvgrageMeter.update", "utils.AvgrageMeter.update", "utils.AvgrageMeter.update", "criterion", "model.parameters", "logging.info"], "function", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.train_search_imagenet.train", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.architect.Architect.step", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.accuracy", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update"], ["", "", "def", "train", "(", "train_queue", ",", "model", ",", "criterion", ",", "optimizer", ")", ":", "\n", "  ", "objs", "=", "utils", ".", "AvgrageMeter", "(", ")", "\n", "top1", "=", "utils", ".", "AvgrageMeter", "(", ")", "\n", "top5", "=", "utils", ".", "AvgrageMeter", "(", ")", "\n", "model", ".", "train", "(", ")", "\n", "\n", "for", "step", ",", "(", "input", ",", "target", ")", "in", "enumerate", "(", "train_queue", ")", ":", "\n", "    ", "input", "=", "input", ".", "cuda", "(", ")", "\n", "target", "=", "target", ".", "cuda", "(", "non_blocking", "=", "True", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "logits", ",", "logits_aux", "=", "model", "(", "input", ")", "\n", "loss", "=", "criterion", "(", "logits", ",", "target", ")", "\n", "if", "args", ".", "auxiliary", ":", "\n", "      ", "loss_aux", "=", "criterion", "(", "logits_aux", ",", "target", ")", "\n", "loss", "+=", "args", ".", "auxiliary_weight", "*", "loss_aux", "\n", "", "loss", ".", "backward", "(", ")", "\n", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "model", ".", "parameters", "(", ")", ",", "args", ".", "grad_clip", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "prec1", ",", "prec5", "=", "utils", ".", "accuracy", "(", "logits", ",", "target", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "n", "=", "input", ".", "size", "(", "0", ")", "\n", "objs", ".", "update", "(", "loss", ".", "data", ",", "n", ")", "\n", "top1", ".", "update", "(", "prec1", ".", "data", ",", "n", ")", "\n", "top5", ".", "update", "(", "prec5", ".", "data", ",", "n", ")", "\n", "\n", "if", "step", "%", "args", ".", "report_freq", "==", "0", ":", "\n", "      ", "logging", ".", "info", "(", "'train %03d %e %f %f'", ",", "step", ",", "objs", ".", "avg", ",", "top1", ".", "avg", ",", "top5", ".", "avg", ")", "\n", "", "if", "'debug'", "in", "args", ".", "save", ":", "\n", "      ", "break", "\n", "\n", "", "", "return", "top1", ".", "avg", ",", "objs", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.train.infer": [[164, 190], ["utils.AvgrageMeter", "utils.AvgrageMeter", "utils.AvgrageMeter", "model.eval", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "input.cuda.cuda", "target.cuda.cuda", "model", "criterion", "utils.accuracy", "input.cuda.size", "utils.AvgrageMeter.update", "utils.AvgrageMeter.update", "utils.AvgrageMeter.update", "logging.info"], "function", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.accuracy", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update"], ["", "def", "infer", "(", "valid_queue", ",", "model", ",", "criterion", ")", ":", "\n", "  ", "objs", "=", "utils", ".", "AvgrageMeter", "(", ")", "\n", "top1", "=", "utils", ".", "AvgrageMeter", "(", ")", "\n", "top5", "=", "utils", ".", "AvgrageMeter", "(", ")", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "    ", "for", "step", ",", "(", "input", ",", "target", ")", "in", "enumerate", "(", "valid_queue", ")", ":", "\n", "      ", "input", "=", "input", ".", "cuda", "(", ")", "\n", "target", "=", "target", ".", "cuda", "(", "non_blocking", "=", "True", ")", "\n", "\n", "logits", ",", "_", "=", "model", "(", "input", ")", "\n", "loss", "=", "criterion", "(", "logits", ",", "target", ")", "\n", "\n", "prec1", ",", "prec5", "=", "utils", ".", "accuracy", "(", "logits", ",", "target", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "n", "=", "input", ".", "size", "(", "0", ")", "\n", "objs", ".", "update", "(", "loss", ".", "data", ",", "n", ")", "\n", "top1", ".", "update", "(", "prec1", ".", "data", ",", "n", ")", "\n", "top5", ".", "update", "(", "prec5", ".", "data", ",", "n", ")", "\n", "\n", "if", "step", "%", "args", ".", "report_freq", "==", "0", ":", "\n", "        ", "logging", ".", "info", "(", "'valid %03d %e %f %f'", ",", "step", ",", "objs", ".", "avg", ",", "top1", ".", "avg", ",", "top5", ".", "avg", ")", "\n", "", "if", "'debug'", "in", "args", ".", "save", ":", "\n", "        ", "break", "\n", "\n", "", "", "", "return", "top1", ".", "avg", ",", "objs", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.train_search.main": [[69, 164], ["numpy.random.seed", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "logging.info", "logging.info", "torch.CrossEntropyLoss", "criterion.cuda.cuda", "model_search.Network", "model.cuda.cuda", "logging.info", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "utils._data_transforms_cifar10", "len", "list", "int", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "architect.Architect", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "enumerate", "model.cuda.genotype", "logging.info", "model.cuda.show_arch_parameters", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "logging.info", "sys.exit", "utils.count_parameters_in_MB", "model.cuda.parameters", "torchvision.CIFAR100", "torchvision.CIFAR10", "range", "numpy.floor", "float", "range", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.sampler.SubsetRandomSampler", "sum", "logging.info", "model.cuda.genotype", "logging.info", "model.cuda.show_arch_parameters", "train_search.train", "logging.info", "train_search.infer", "logging.info", "net2wider.configure_scheduler.step", "utils.save", "model.cuda.pruning", "model.cuda.wider", "net2wider.configure_optimizer", "net2wider.configure_scheduler", "logging.info", "logging.info", "net2wider.configure_scheduler.get_lr", "os.path.join", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "len", "model.cuda.parameters", "float", "sum"], "function", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils._data_transforms_cifar10", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.genotype", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.show_arch_parameters", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.count_parameters_in_MB", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.genotype", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.show_arch_parameters", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.train_search_imagenet.train", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.train_search_imagenet.infer", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.architect.Architect.step", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.save", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.pruning", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.wider", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.configure_optimizer", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.configure_scheduler"], ["", "if", "not", "args", ".", "weight_decay", "==", "3e-4", ":", "\n", "    ", "args", ".", "save", "+=", "'-weight_l2-'", "+", "str", "(", "args", ".", "weight_decay", ")", "\n", "", "if", "not", "args", ".", "arch_weight_decay", "==", "1e-3", ":", "\n", "    ", "args", ".", "save", "+=", "'-alpha_l2-'", "+", "str", "(", "args", ".", "arch_weight_decay", ")", "\n", "", "if", "not", "args", ".", "method", "==", "'gdas'", ":", "\n", "    ", "args", ".", "save", "+=", "'-pc-'", "+", "str", "(", "args", ".", "k", ")", "\n", "\n", "", "utils", ".", "create_exp_dir", "(", "args", ".", "save", ",", "scripts_to_save", "=", "glob", ".", "glob", "(", "'*.py'", ")", ")", "\n", "\n", "log_format", "=", "'%(asctime)s %(message)s'", "\n", "logging", ".", "basicConfig", "(", "stream", "=", "sys", ".", "stdout", ",", "level", "=", "logging", ".", "INFO", ",", "\n", "format", "=", "log_format", ",", "datefmt", "=", "'%m/%d %I:%M:%S %p'", ")", "\n", "fh", "=", "logging", ".", "FileHandler", "(", "os", ".", "path", ".", "join", "(", "args", ".", "save", ",", "'log.txt'", ")", ")", "\n", "fh", ".", "setFormatter", "(", "logging", ".", "Formatter", "(", "log_format", ")", ")", "\n", "logging", ".", "getLogger", "(", ")", ".", "addHandler", "(", "fh", ")", "\n", "writer", "=", "SummaryWriter", "(", "args", ".", "save", "+", "'/runs'", ")", "\n", "\n", "\n", "if", "args", ".", "dataset", "==", "'cifar100'", ":", "\n", "    ", "n_classes", "=", "100", "\n", "", "elif", "args", ".", "dataset", "==", "'imagenet16-120'", ":", "\n", "    ", "n_classes", "=", "120", "\n", "", "else", ":", "\n", "    ", "n_classes", "=", "10", "\n", "\n", "\n", "", "def", "distill", "(", "result", ")", ":", "\n", "    ", "result", "=", "result", ".", "split", "(", "'\\n'", ")", "\n", "cifar10", "=", "result", "[", "5", "]", ".", "replace", "(", "' '", ",", "''", ")", ".", "split", "(", "':'", ")", "\n", "cifar100", "=", "result", "[", "7", "]", ".", "replace", "(", "' '", ",", "''", ")", ".", "split", "(", "':'", ")", "\n", "imagenet16", "=", "result", "[", "9", "]", ".", "replace", "(", "' '", ",", "''", ")", ".", "split", "(", "':'", ")", "\n", "\n", "cifar10_train", "=", "float", "(", "cifar10", "[", "1", "]", ".", "strip", "(", "',test'", ")", "[", "-", "7", ":", "-", "2", "]", ".", "strip", "(", "'='", ")", ")", "\n", "cifar10_test", "=", "float", "(", "cifar10", "[", "2", "]", "[", "-", "7", ":", "-", "2", "]", ".", "strip", "(", "'='", ")", ")", "\n", "cifar100_train", "=", "float", "(", "cifar100", "[", "1", "]", ".", "strip", "(", "',valid'", ")", "[", "-", "7", ":", "-", "2", "]", ".", "strip", "(", "'='", ")", ")", "\n", "cifar100_valid", "=", "float", "(", "cifar100", "[", "2", "]", ".", "strip", "(", "',test'", ")", "[", "-", "7", ":", "-", "2", "]", ".", "strip", "(", "'='", ")", ")", "\n", "cifar100_test", "=", "float", "(", "cifar100", "[", "3", "]", "[", "-", "7", ":", "-", "2", "]", ".", "strip", "(", "'='", ")", ")", "\n", "imagenet16_train", "=", "float", "(", "imagenet16", "[", "1", "]", ".", "strip", "(", "',valid'", ")", "[", "-", "7", ":", "-", "2", "]", ".", "strip", "(", "'='", ")", ")", "\n", "imagenet16_valid", "=", "float", "(", "imagenet16", "[", "2", "]", ".", "strip", "(", "',test'", ")", "[", "-", "7", ":", "-", "2", "]", ".", "strip", "(", "'='", ")", ")", "\n", "imagenet16_test", "=", "float", "(", "imagenet16", "[", "3", "]", "[", "-", "7", ":", "-", "2", "]", ".", "strip", "(", "'='", ")", ")", "\n", "\n", "return", "cifar10_train", ",", "cifar10_test", ",", "cifar100_train", ",", "cifar100_valid", ",", "cifar100_test", ",", "imagenet16_train", ",", "imagenet16_valid", ",", "imagenet16_test", "\n", "\n", "\n", "", "def", "main", "(", ")", ":", "\n", "    ", "torch", ".", "set_num_threads", "(", "3", ")", "\n", "if", "not", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "logging", ".", "info", "(", "'no gpu device available'", ")", "\n", "sys", ".", "exit", "(", "1", ")", "\n", "\n", "", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "cuda", ".", "set_device", "(", "args", ".", "gpu", ")", "\n", "cudnn", ".", "benchmark", "=", "True", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "cudnn", ".", "enabled", "=", "True", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "logging", ".", "info", "(", "'gpu device = %d'", "%", "args", ".", "gpu", ")", "\n", "logging", ".", "info", "(", "\"args = %s\"", ",", "args", ")", "\n", "\n", "if", "not", "'debug'", "in", "args", ".", "save", ":", "\n", "        ", "api", "=", "API", "(", "'pth file path'", ")", "\n", "", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "criterion", "=", "criterion", ".", "cuda", "(", ")", "\n", "\n", "if", "args", ".", "method", "==", "'gdas'", "or", "args", ".", "method", "==", "'snas'", ":", "\n", "# Create the decrease step for the gumbel softmax temperature", "\n", "        ", "tau_step", "=", "(", "args", ".", "tau_min", "-", "args", ".", "tau_max", ")", "/", "args", ".", "epochs", "\n", "tau_epoch", "=", "args", ".", "tau_max", "\n", "if", "args", ".", "method", "==", "'gdas'", ":", "\n", "            ", "model", "=", "TinyNetworkGDAS", "(", "C", "=", "args", ".", "init_channels", ",", "N", "=", "5", ",", "max_nodes", "=", "4", ",", "num_classes", "=", "n_classes", ",", "criterion", "=", "criterion", ",", "search_space", "=", "NAS_BENCH_201", ")", "\n", "", "else", ":", "\n", "            ", "model", "=", "TinyNetwork", "(", "C", "=", "args", ".", "init_channels", ",", "N", "=", "5", ",", "max_nodes", "=", "4", ",", "num_classes", "=", "n_classes", ",", "\n", "criterion", "=", "criterion", ",", "search_space", "=", "NAS_BENCH_201", ",", "k", "=", "args", ".", "k", ",", "species", "=", "'gumbel'", ")", "\n", "", "", "elif", "args", ".", "method", "==", "'dirichlet'", ":", "\n", "        ", "model", "=", "TinyNetwork", "(", "C", "=", "args", ".", "init_channels", ",", "N", "=", "5", ",", "max_nodes", "=", "4", ",", "num_classes", "=", "n_classes", ",", "\n", "criterion", "=", "criterion", ",", "search_space", "=", "NAS_BENCH_201", ",", "k", "=", "args", ".", "k", ",", "species", "=", "'dirichlet'", ",", "\n", "reg_type", "=", "args", ".", "reg_type", ",", "reg_scale", "=", "args", ".", "reg_scale", ")", "\n", "", "elif", "args", ".", "method", "==", "'darts'", ":", "\n", "        ", "model", "=", "TinyNetwork", "(", "C", "=", "args", ".", "init_channels", ",", "N", "=", "5", ",", "max_nodes", "=", "4", ",", "num_classes", "=", "n_classes", ",", "\n", "criterion", "=", "criterion", ",", "search_space", "=", "NAS_BENCH_201", ",", "k", "=", "args", ".", "k", ",", "species", "=", "'softmax'", ")", "\n", "", "model", "=", "model", ".", "cuda", "(", ")", "\n", "logging", ".", "info", "(", "\"param size = %fMB\"", ",", "utils", ".", "count_parameters_in_MB", "(", "model", ")", ")", "\n", "\n", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "\n", "model", ".", "get_weights", "(", ")", ",", "\n", "args", ".", "learning_rate", ",", "\n", "momentum", "=", "args", ".", "momentum", ",", "\n", "weight_decay", "=", "args", ".", "weight_decay", ")", "\n", "\n", "if", "args", ".", "dataset", "==", "'cifar10'", ":", "\n", "        ", "train_transform", ",", "valid_transform", "=", "utils", ".", "_data_transforms_cifar10", "(", "args", ")", "\n", "train_data", "=", "dset", ".", "CIFAR10", "(", "root", "=", "args", ".", "data", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "train_transform", ")", "\n", "", "elif", "args", ".", "dataset", "==", "'cifar100'", ":", "\n", "        ", "train_transform", ",", "valid_transform", "=", "utils", ".", "_data_transforms_cifar100", "(", "args", ")", "\n", "train_data", "=", "dset", ".", "CIFAR100", "(", "root", "=", "args", ".", "data", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "train_transform", ")", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.train_search.train": [[166, 207], ["utils.AvgrageMeter", "utils.AvgrageMeter", "utils.AvgrageMeter", "enumerate", "model.train", "input.cuda.size", "input.cuda.cuda", "target.cuda.cuda", "next", "input_search.cuda.cuda", "target_search.cuda.cuda", "optimizer.zero_grad", "architect.optimizer.zero_grad", "model", "criterion", "criterion.backward", "torch.utils.clip_grad_norm_", "optimizer.step", "optimizer.zero_grad", "architect.optimizer.zero_grad", "utils.accuracy", "utils.AvgrageMeter.update", "utils.AvgrageMeter.update", "utils.AvgrageMeter.update", "iter", "architect.step", "model.parameters", "logging.info"], "function", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.train_search_imagenet.train", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.architect.Architect.step", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.accuracy", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.architect.Architect.step"], ["        ", "train_transform", ",", "valid_transform", "=", "utils", ".", "_data_transforms_svhn", "(", "args", ")", "\n", "train_data", "=", "dset", ".", "SVHN", "(", "root", "=", "args", ".", "data", ",", "split", "=", "'train'", ",", "download", "=", "True", ",", "transform", "=", "train_transform", ")", "\n", "", "elif", "args", ".", "dataset", "==", "'imagenet16-120'", ":", "\n", "        ", "import", "torchvision", ".", "transforms", "as", "transforms", "\n", "from", "nasbench201", ".", "DownsampledImageNet", "import", "ImageNet16", "\n", "mean", "=", "[", "x", "/", "255", "for", "x", "in", "[", "122.68", ",", "116.66", ",", "104.01", "]", "]", "\n", "std", "=", "[", "x", "/", "255", "for", "x", "in", "[", "63.22", ",", "61.26", ",", "65.09", "]", "]", "\n", "lists", "=", "[", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "transforms", ".", "RandomCrop", "(", "16", ",", "padding", "=", "2", ")", ",", "transforms", ".", "ToTensor", "(", ")", ",", "transforms", ".", "Normalize", "(", "mean", ",", "std", ")", "]", "\n", "train_transform", "=", "transforms", ".", "Compose", "(", "lists", ")", "\n", "train_data", "=", "ImageNet16", "(", "root", "=", "os", ".", "path", ".", "join", "(", "args", ".", "data", ",", "'imagenet16'", ")", ",", "train", "=", "True", ",", "transform", "=", "train_transform", ",", "use_num_of_class_only", "=", "120", ")", "\n", "assert", "len", "(", "train_data", ")", "==", "151700", "\n", "\n", "", "num_train", "=", "len", "(", "train_data", ")", "\n", "indices", "=", "list", "(", "range", "(", "num_train", ")", ")", "\n", "split", "=", "int", "(", "np", ".", "floor", "(", "args", ".", "train_portion", "*", "num_train", ")", ")", "\n", "\n", "train_queue", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "train_data", ",", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "sampler", "=", "torch", ".", "utils", ".", "data", ".", "sampler", ".", "SubsetRandomSampler", "(", "indices", "[", ":", "split", "]", ")", ",", "\n", "pin_memory", "=", "True", ")", "\n", "\n", "valid_queue", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "train_data", ",", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "sampler", "=", "torch", ".", "utils", ".", "data", ".", "sampler", ".", "SubsetRandomSampler", "(", "indices", "[", "split", ":", "num_train", "]", ")", ",", "\n", "pin_memory", "=", "True", ")", "\n", "\n", "scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "CosineAnnealingLR", "(", "\n", "optimizer", ",", "float", "(", "args", ".", "epochs", ")", ",", "eta_min", "=", "args", ".", "learning_rate_min", ")", "\n", "\n", "architect", "=", "Architect", "(", "model", ",", "args", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "args", ".", "epochs", ")", ":", "\n", "        ", "lr", "=", "scheduler", ".", "get_lr", "(", ")", "[", "0", "]", "\n", "logging", ".", "info", "(", "'epoch %d lr %e'", ",", "epoch", ",", "lr", ")", "\n", "\n", "genotype", "=", "model", ".", "genotype", "(", ")", "\n", "logging", ".", "info", "(", "'genotype = %s'", ",", "genotype", ")", "\n", "model", ".", "show_arch_parameters", "(", ")", "\n", "\n", "# training", "\n", "train_acc", ",", "train_obj", "=", "train", "(", "train_queue", ",", "valid_queue", ",", "model", ",", "architect", ",", "criterion", ",", "optimizer", ",", "lr", ",", "epoch", ")", "\n", "logging", ".", "info", "(", "'train_acc %f'", ",", "train_acc", ")", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.train_search.infer": [[209, 235], ["utils.AvgrageMeter", "utils.AvgrageMeter", "utils.AvgrageMeter", "model.eval", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "input.cuda.cuda", "target.cuda.cuda", "model", "criterion", "utils.accuracy", "input.cuda.size", "utils.AvgrageMeter.update", "utils.AvgrageMeter.update", "utils.AvgrageMeter.update", "logging.info"], "function", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.accuracy", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update"], ["# validation", "\n", "valid_acc", ",", "valid_obj", "=", "infer", "(", "valid_queue", ",", "model", ",", "criterion", ")", "\n", "logging", ".", "info", "(", "'valid_acc %f'", ",", "valid_acc", ")", "\n", "\n", "if", "not", "'debug'", "in", "args", ".", "save", ":", "\n", "# nasbench201", "\n", "            ", "result", "=", "api", ".", "query_by_arch", "(", "model", ".", "genotype", "(", ")", ")", "\n", "logging", ".", "info", "(", "'{:}'", ".", "format", "(", "result", ")", ")", "\n", "cifar10_train", ",", "cifar10_test", ",", "cifar100_train", ",", "cifar100_valid", ",", "cifar100_test", ",", "imagenet16_train", ",", "imagenet16_valid", ",", "imagenet16_test", "=", "distill", "(", "result", ")", "\n", "logging", ".", "info", "(", "'cifar10 train %f test %f'", ",", "cifar10_train", ",", "cifar10_test", ")", "\n", "logging", ".", "info", "(", "'cifar100 train %f valid %f test %f'", ",", "cifar100_train", ",", "cifar100_valid", ",", "cifar100_test", ")", "\n", "logging", ".", "info", "(", "'imagenet16 train %f valid %f test %f'", ",", "imagenet16_train", ",", "imagenet16_valid", ",", "imagenet16_test", ")", "\n", "\n", "# tensorboard", "\n", "writer", ".", "add_scalars", "(", "'accuracy'", ",", "{", "'train'", ":", "train_acc", ",", "'valid'", ":", "valid_acc", "}", ",", "epoch", ")", "\n", "writer", ".", "add_scalars", "(", "'loss'", ",", "{", "'train'", ":", "train_obj", ",", "'valid'", ":", "valid_obj", "}", ",", "epoch", ")", "\n", "writer", ".", "add_scalars", "(", "'nasbench201/cifar10'", ",", "{", "'train'", ":", "cifar10_train", ",", "'test'", ":", "cifar10_test", "}", ",", "epoch", ")", "\n", "writer", ".", "add_scalars", "(", "'nasbench201/cifar100'", ",", "{", "'train'", ":", "cifar100_train", ",", "'valid'", ":", "cifar100_valid", ",", "'test'", ":", "cifar100_test", "}", ",", "epoch", ")", "\n", "writer", ".", "add_scalars", "(", "'nasbench201/imagenet16'", ",", "{", "'train'", ":", "imagenet16_train", ",", "'valid'", ":", "imagenet16_valid", ",", "'test'", ":", "imagenet16_test", "}", ",", "epoch", ")", "\n", "\n", "utils", ".", "save_checkpoint", "(", "{", "\n", "'epoch'", ":", "epoch", "+", "1", ",", "\n", "'state_dict'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'optimizer'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'alpha'", ":", "model", ".", "arch_parameters", "(", ")", "\n", "}", ",", "False", ",", "args", ".", "save", ")", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.MixedOp.__init__": [[27, 38], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "model_search_imagenet.MixedOp._ops.append"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.NetworkImageNet.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C", ",", "stride", ",", "k", ")", ":", "\n", "    ", "super", "(", "MixedOp", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "k", "=", "k", "\n", "self", ".", "C", "=", "C", "\n", "self", ".", "_ops", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "mp", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "2", ")", "\n", "for", "primitive", "in", "PRIMITIVES", ":", "\n", "      ", "op", "=", "OPS", "[", "primitive", "]", "(", "C", "//", "self", ".", "k", ",", "stride", ",", "False", ")", "\n", "# if 'pool' in primitive:", "\n", "#   op = nn.Sequential(op, nn.BatchNorm2d(C//2, affine=False))", "\n", "self", ".", "_ops", ".", "append", "(", "op", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.MixedOp.forward": [[39, 53], ["sum", "model_search_imagenet.channel_shuffle", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "w.to", "op", "zip", "model_search_imagenet.MixedOp.mp"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.channel_shuffle"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "weights", ")", ":", "\n", "\n", "    ", "dim_2", "=", "x", ".", "shape", "[", "1", "]", "\n", "xtemp", "=", "x", "[", ":", ",", ":", "dim_2", "//", "self", ".", "k", ",", ":", ",", ":", "]", "\n", "xtemp2", "=", "x", "[", ":", ",", "dim_2", "//", "self", ".", "k", ":", ",", ":", ",", ":", "]", "\n", "temp1", "=", "sum", "(", "w", ".", "to", "(", "xtemp", ".", "device", ")", "*", "op", "(", "xtemp", ")", "for", "w", ",", "op", "in", "zip", "(", "weights", ",", "self", ".", "_ops", ")", "if", "not", "w", "==", "0", ")", "\n", "if", "self", ".", "k", "==", "1", ":", "\n", "      ", "return", "temp1", "\n", "", "if", "temp1", ".", "shape", "[", "2", "]", "==", "x", ".", "shape", "[", "2", "]", ":", "\n", "      ", "ans", "=", "torch", ".", "cat", "(", "[", "temp1", ",", "xtemp2", "]", ",", "dim", "=", "1", ")", "\n", "", "else", ":", "\n", "      ", "ans", "=", "torch", ".", "cat", "(", "[", "temp1", ",", "self", ".", "mp", "(", "xtemp2", ")", "]", ",", "dim", "=", "1", ")", "\n", "", "ans", "=", "channel_shuffle", "(", "ans", ",", "self", ".", "k", ")", "\n", "return", "ans", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.MixedOp.wider": [[54, 58], ["op.wider"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.wider"], ["", "def", "wider", "(", "self", ",", "k", ")", ":", "\n", "    ", "self", ".", "k", "=", "k", "\n", "for", "op", "in", "self", ".", "_ops", ":", "\n", "      ", "op", ".", "wider", "(", "self", ".", "C", "//", "k", ",", "self", ".", "C", "//", "k", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Cell.__init__": [[62, 82], ["torch.Module.__init__", "operations.ReLUConvBN", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "operations.FactorizedReduce", "operations.ReLUConvBN", "range", "model_search_imagenet.MixedOp", "model_search_imagenet.Cell._ops.append"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.NetworkImageNet.__init__", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.201-space.search_cells.NAS201SearchCell_PartialChannel.MixedOp"], ["  ", "def", "__init__", "(", "self", ",", "steps", ",", "multiplier", ",", "C_prev_prev", ",", "C_prev", ",", "C", ",", "reduction", ",", "reduction_prev", ",", "k", ")", ":", "\n", "    ", "super", "(", "Cell", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "reduction", "=", "reduction", "\n", "self", ".", "k", "=", "k", "\n", "\n", "if", "reduction_prev", ":", "\n", "      ", "self", ".", "preprocess0", "=", "FactorizedReduce", "(", "C_prev_prev", ",", "C", ",", "affine", "=", "False", ")", "\n", "", "else", ":", "\n", "      ", "self", ".", "preprocess0", "=", "ReLUConvBN", "(", "C_prev_prev", ",", "C", ",", "1", ",", "1", ",", "0", ",", "affine", "=", "False", ")", "\n", "", "self", ".", "preprocess1", "=", "ReLUConvBN", "(", "C_prev", ",", "C", ",", "1", ",", "1", ",", "0", ",", "affine", "=", "False", ")", "\n", "self", ".", "_steps", "=", "steps", "\n", "self", ".", "_multiplier", "=", "multiplier", "\n", "\n", "self", ".", "_ops", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "_bns", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "_steps", ")", ":", "\n", "      ", "for", "j", "in", "range", "(", "2", "+", "i", ")", ":", "\n", "        ", "stride", "=", "2", "if", "reduction", "and", "j", "<", "2", "else", "1", "\n", "op", "=", "MixedOp", "(", "C", ",", "stride", ",", "self", ".", "k", ")", "\n", "self", ".", "_ops", ".", "append", "(", "op", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Cell.forward": [[83, 96], ["model_search_imagenet.Cell.preprocess0", "model_search_imagenet.Cell.preprocess1", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "sum", "len", "states.append", "enumerate"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "s0", ",", "s1", ",", "weights", ")", ":", "\n", "    ", "s0", "=", "self", ".", "preprocess0", "(", "s0", ")", "\n", "s1", "=", "self", ".", "preprocess1", "(", "s1", ")", "\n", "\n", "states", "=", "[", "s0", ",", "s1", "]", "\n", "offset", "=", "0", "\n", "for", "i", "in", "range", "(", "self", ".", "_steps", ")", ":", "\n", "      ", "s", "=", "sum", "(", "self", ".", "_ops", "[", "offset", "+", "j", "]", "(", "h", ",", "weights", "[", "offset", "+", "j", "]", ")", "for", "j", ",", "h", "in", "enumerate", "(", "states", ")", ")", "\n", "#s = channel_shuffle(s,4)", "\n", "offset", "+=", "len", "(", "states", ")", "\n", "states", ".", "append", "(", "s", ")", "\n", "\n", "", "return", "torch", ".", "cat", "(", "states", "[", "-", "self", ".", "_multiplier", ":", "]", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Cell.wider": [[97, 101], ["op.wider"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.wider"], ["", "def", "wider", "(", "self", ",", "k", ")", ":", "\n", "    ", "self", ".", "k", "=", "k", "\n", "for", "op", "in", "self", ".", "_ops", ":", "\n", "      ", "op", ".", "wider", "(", "k", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.__init__": [[105, 149], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "model_search_imagenet.Network._initialize_alphas", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "model_search_imagenet.Cell"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.NetworkImageNet.__init__", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network._initialize_alphas"], ["  ", "def", "__init__", "(", "self", ",", "C", ",", "num_classes", ",", "layers", ",", "criterion", ",", "steps", "=", "4", ",", "multiplier", "=", "4", ",", "stem_multiplier", "=", "3", ",", "k", "=", "4", ")", ":", "\n", "    ", "super", "(", "Network", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_C", "=", "C", "\n", "self", ".", "_num_classes", "=", "num_classes", "\n", "self", ".", "_layers", "=", "layers", "\n", "self", ".", "_criterion", "=", "criterion", "\n", "self", ".", "_steps", "=", "steps", "\n", "self", ".", "_multiplier", "=", "multiplier", "\n", "self", ".", "k", "=", "k", "\n", "\n", "C_curr", "=", "stem_multiplier", "*", "C", "\n", "self", ".", "stem0", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "C_curr", "//", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "C_curr", "//", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "C_curr", "//", "2", ",", "C_curr", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "C_curr", ")", ",", "\n", ")", "\n", "\n", "self", ".", "stem1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "C_curr", ",", "C_curr", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "C_curr", ")", ",", "\n", ")", "\n", "\n", "\n", "C_prev_prev", ",", "C_prev", ",", "C_curr", "=", "C_curr", ",", "C_curr", ",", "C", "\n", "self", ".", "cells", "=", "nn", ".", "ModuleList", "(", ")", "\n", "reduction_prev", "=", "True", "\n", "for", "i", "in", "range", "(", "layers", ")", ":", "\n", "      ", "if", "i", "in", "[", "layers", "//", "3", ",", "2", "*", "layers", "//", "3", "]", ":", "\n", "        ", "C_curr", "*=", "2", "\n", "reduction", "=", "True", "\n", "", "else", ":", "\n", "        ", "reduction", "=", "False", "\n", "", "cell", "=", "Cell", "(", "steps", ",", "multiplier", ",", "C_prev_prev", ",", "C_prev", ",", "C_curr", ",", "reduction", ",", "reduction_prev", ",", "k", ")", "\n", "reduction_prev", "=", "reduction", "\n", "self", ".", "cells", "+=", "[", "cell", "]", "\n", "C_prev_prev", ",", "C_prev", "=", "C_prev", ",", "multiplier", "*", "C_curr", "\n", "\n", "", "self", ".", "global_pooling", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "C_prev", ",", "num_classes", ")", "\n", "\n", "self", ".", "_initialize_alphas", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.new": [[150, 155], ["Network().cuda", "zip", "Network().cuda.arch_parameters", "model_search_imagenet.Network.arch_parameters", "x.data.copy_", "model_search_imagenet.Network"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.arch_parameters", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.arch_parameters"], ["", "def", "new", "(", "self", ")", ":", "\n", "    ", "model_new", "=", "Network", "(", "self", ".", "_C", ",", "self", ".", "_num_classes", ",", "self", ".", "_layers", ",", "self", ".", "_criterion", ")", ".", "cuda", "(", ")", "\n", "for", "x", ",", "y", "in", "zip", "(", "model_new", ".", "arch_parameters", "(", ")", ",", "self", ".", "arch_parameters", "(", ")", ")", ":", "\n", "        ", "x", ".", "data", ".", "copy_", "(", "y", ".", "data", ")", "\n", "", "return", "model_new", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.show_arch_parameters": [[156, 162], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "logging.info", "logging.info", "logging.info", "logging.info", "utils.process_step_matrix().cpu", "utils.process_step_matrix().cpu", "utils.process_step_matrix", "utils.process_step_matrix", "torch.elu", "torch.elu", "torch.elu", "torch.elu", "torch.elu", "torch.elu"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.process_step_matrix", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.process_step_matrix"], ["", "def", "show_arch_parameters", "(", "self", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "      ", "logging", ".", "info", "(", "'alphas normal :\\n{:}'", ".", "format", "(", "process_step_matrix", "(", "self", ".", "alphas_normal", ",", "'softmax'", ",", "self", ".", "mask_normal", ")", ".", "cpu", "(", ")", ")", ")", "\n", "logging", ".", "info", "(", "'alphas reduce :\\n{:}'", ".", "format", "(", "process_step_matrix", "(", "self", ".", "alphas_reduce", ",", "'softmax'", ",", "self", ".", "mask_reduce", ")", ".", "cpu", "(", ")", ")", ")", "\n", "logging", ".", "info", "(", "'concentration normal:\\n{:}'", ".", "format", "(", "(", "F", ".", "elu", "(", "self", ".", "alphas_normal", ")", "+", "1", ")", ".", "cpu", "(", ")", ")", ")", "\n", "logging", ".", "info", "(", "'concentration reduce:\\n{:}'", ".", "format", "(", "(", "F", ".", "elu", "(", "self", ".", "alphas_reduce", ")", "+", "1", ")", ".", "cpu", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.pruning": [[163, 167], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "utils.prune", "utils.prune"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.prune", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.prune"], ["", "", "def", "pruning", "(", "self", ",", "num_keep", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "      ", "self", ".", "mask_normal", "=", "prune", "(", "self", ".", "alphas_normal", ",", "num_keep", ",", "self", ".", "mask_normal", ")", "\n", "self", ".", "mask_reduce", "=", "prune", "(", "self", ".", "alphas_reduce", ",", "num_keep", ",", "self", ".", "mask_reduce", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.wider": [[168, 172], ["cell.wider"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.wider"], ["", "", "def", "wider", "(", "self", ",", "k", ")", ":", "\n", "    ", "self", ".", "k", "=", "k", "\n", "for", "cell", "in", "self", ".", "cells", ":", "\n", "      ", "cell", ".", "wider", "(", "k", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.forward": [[173, 193], ["model_search_imagenet.Network.stem0", "model_search_imagenet.Network.stem1", "utils.process_step_matrix", "utils.process_step_matrix", "enumerate", "model_search_imagenet.Network.global_pooling", "model_search_imagenet.Network.classifier", "model_search_imagenet.Network.view", "cell", "model_search_imagenet.Network.size"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.process_step_matrix", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.process_step_matrix"], ["", "", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "    ", "s0", "=", "self", ".", "stem0", "(", "input", ")", "\n", "s1", "=", "self", ".", "stem1", "(", "s0", ")", "\n", "\n", "weights_normal", "=", "process_step_matrix", "(", "self", ".", "alphas_normal", ",", "'dirichlet'", ",", "self", ".", "mask_normal", ")", "\n", "weights_reduce", "=", "process_step_matrix", "(", "self", ".", "alphas_reduce", ",", "'dirichlet'", ",", "self", ".", "mask_reduce", ")", "\n", "if", "not", "self", ".", "mask_normal", "is", "None", ":", "\n", "      ", "assert", "(", "weights_normal", "[", "~", "self", ".", "mask_normal", "]", "==", "0.0", ")", ".", "all", "(", ")", "\n", "", "if", "not", "self", ".", "mask_reduce", "is", "None", ":", "\n", "      ", "assert", "(", "weights_reduce", "[", "~", "self", ".", "mask_reduce", "]", "==", "0.0", ")", ".", "all", "(", ")", "\n", "\n", "", "for", "i", ",", "cell", "in", "enumerate", "(", "self", ".", "cells", ")", ":", "\n", "      ", "if", "cell", ".", "reduction", ":", "\n", "        ", "weights", "=", "weights_reduce", "\n", "", "else", ":", "\n", "        ", "weights", "=", "weights_normal", "\n", "", "s0", ",", "s1", "=", "s1", ",", "cell", "(", "s0", ",", "s1", ",", "weights", ")", "\n", "", "out", "=", "self", ".", "global_pooling", "(", "s1", ")", "\n", "logits", "=", "self", ".", "classifier", "(", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", "\n", "return", "logits", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network._loss": [[194, 197], ["model_search_imagenet.Network.", "model_search_imagenet.Network._criterion"], "methods", ["None"], ["", "def", "_loss", "(", "self", ",", "input", ",", "target", ")", ":", "\n", "    ", "logits", "=", "self", "(", "input", ")", "\n", "return", "self", ".", "_criterion", "(", "logits", ",", "target", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network._initialize_alphas": [[198, 210], ["sum", "len", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "range", "range", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn"], "methods", ["None"], ["", "def", "_initialize_alphas", "(", "self", ")", ":", "\n", "    ", "k", "=", "sum", "(", "1", "for", "i", "in", "range", "(", "self", ".", "_steps", ")", "for", "n", "in", "range", "(", "2", "+", "i", ")", ")", "\n", "num_ops", "=", "len", "(", "PRIMITIVES", ")", "\n", "\n", "self", ".", "alphas_normal", "=", "Variable", "(", "1e-3", "*", "torch", ".", "randn", "(", "k", ",", "num_ops", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "alphas_reduce", "=", "Variable", "(", "1e-3", "*", "torch", ".", "randn", "(", "k", ",", "num_ops", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "_arch_parameters", "=", "[", "\n", "self", ".", "alphas_normal", ",", "\n", "self", ".", "alphas_reduce", ",", "\n", "]", "\n", "self", ".", "mask_normal", "=", "None", "\n", "self", ".", "mask_reduce", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.arch_parameters": [[211, 213], ["None"], "methods", ["None"], ["", "def", "arch_parameters", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "_arch_parameters", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.genotype": [[214, 249], ["model_search_imagenet.Network.genotype._parse"], "methods", ["None"], ["", "def", "genotype", "(", "self", ")", ":", "\n", "\n", "    ", "def", "_parse", "(", "weights", ")", ":", "\n", "      ", "gene", "=", "[", "]", "\n", "n", "=", "2", "\n", "start", "=", "0", "\n", "for", "i", "in", "range", "(", "self", ".", "_steps", ")", ":", "\n", "        ", "end", "=", "start", "+", "n", "\n", "W", "=", "weights", "[", "start", ":", "end", "]", ".", "copy", "(", ")", "\n", "# edges = sorted(range(i + 2), key=lambda x: -max(W[x][k] for k in range(len(W[x])) if k != PRIMITIVES.index('none')))[:2]", "\n", "edges", "=", "sorted", "(", "range", "(", "i", "+", "2", ")", ",", "key", "=", "lambda", "x", ":", "-", "max", "(", "W", "[", "x", "]", "[", "k", "]", "for", "k", "in", "range", "(", "len", "(", "W", "[", "x", "]", ")", ")", ")", ")", "[", ":", "2", "]", "\n", "for", "j", "in", "edges", ":", "\n", "          ", "k_best", "=", "None", "\n", "for", "k", "in", "range", "(", "len", "(", "W", "[", "j", "]", ")", ")", ":", "\n", "# if k != PRIMITIVES.index('none'):", "\n", "            ", "if", "k_best", "is", "None", "or", "W", "[", "j", "]", "[", "k", "]", ">", "W", "[", "j", "]", "[", "k_best", "]", ":", "\n", "              ", "k_best", "=", "k", "\n", "", "", "gene", ".", "append", "(", "(", "PRIMITIVES", "[", "k_best", "]", ",", "j", ")", ")", "\n", "", "start", "=", "end", "\n", "n", "+=", "1", "\n", "", "return", "gene", "\n", "\n", "# gene_normal = _parse(F.softmax(self.alphas_normal, dim=-1).data.cpu().numpy())", "\n", "# gene_reduce = _parse(F.softmax(self.alphas_reduce, dim=-1).data.cpu().numpy())", "\n", "", "gene_normal", "=", "_parse", "(", "process_step_matrix", "(", "self", ".", "alphas_normal", ",", "'softmax'", ",", "\n", "self", ".", "mask_normal", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "gene_reduce", "=", "_parse", "(", "process_step_matrix", "(", "self", ".", "alphas_reduce", ",", "'softmax'", ",", "\n", "self", ".", "mask_reduce", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "concat", "=", "range", "(", "2", "+", "self", ".", "_steps", "-", "self", ".", "_multiplier", ",", "self", ".", "_steps", "+", "2", ")", "\n", "genotype", "=", "Genotype", "(", "\n", "normal", "=", "gene_normal", ",", "normal_concat", "=", "concat", ",", "\n", "reduce", "=", "gene_reduce", ",", "reduce_concat", "=", "concat", "\n", ")", "\n", "return", "genotype", "\n", "", "", ""]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.channel_shuffle": [[13, 23], ["x.view.data.size", "x.view.view", "torch.transpose().contiguous", "torch.transpose().contiguous", "torch.transpose().contiguous", "x.view.view", "torch.transpose", "torch.transpose", "torch.transpose"], "function", ["None"], ["def", "channel_shuffle", "(", "x", ",", "groups", ")", ":", "\n", "    ", "batchsize", ",", "num_channels", ",", "height", ",", "width", "=", "x", ".", "data", ".", "size", "(", ")", "\n", "channels_per_group", "=", "num_channels", "//", "groups", "\n", "# reshape", "\n", "x", "=", "x", ".", "view", "(", "batchsize", ",", "groups", ",", "\n", "channels_per_group", ",", "height", ",", "width", ")", "\n", "x", "=", "torch", ".", "transpose", "(", "x", ",", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "# flatten", "\n", "x", "=", "x", ".", "view", "(", "batchsize", ",", "-", "1", ",", "height", ",", "width", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.train_search_imagenet.main": [[69, 186], ["numpy.random.seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "logging.info", "os.path.join", "os.path.join", "torchvision.Normalize", "torch.CrossEntropyLoss", "criterion.cuda.cuda", "torchvision.ImageFolder", "torchvision.ImageFolder", "len", "len", "print", "print", "model_search_imagenet.Network", "torch.DataParallel", "model.cuda.cuda", "logging.info", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "enumerate", "model.cuda.module.genotype", "logging.info", "model.cuda.module.show_arch_parameters", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "logging.info", "sys.exit", "torchvision.Compose", "torchvision.Compose", "utils.count_parameters_in_MB", "utils.count_parameters_in_MB", "model.cuda.parameters", "model.cuda.module.arch_parameters", "float", "range", "sum", "logging.info", "model.cuda.module.genotype", "logging.info", "model.cuda.module.show_arch_parameters", "time.time", "train_search_imagenet.train", "logging.info", "net2wider.configure_scheduler.step", "logging.info", "model.cuda.module.pruning", "model.cuda.module.wider", "net2wider.configure_optimizer", "net2wider.configure_scheduler", "logging.info", "logging.info", "torchvision.RandomResizedCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.RandomResizedCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "net2wider.configure_scheduler.get_lr", "logging.info", "print", "train_search_imagenet.infer", "logging.info", "time.time", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "len", "model.cuda.parameters", "float", "sum"], "function", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.genotype", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.show_arch_parameters", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.count_parameters_in_MB", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.count_parameters_in_MB", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.arch_parameters", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.genotype", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.show_arch_parameters", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.train_search_imagenet.train", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.architect.Architect.step", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.pruning", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.wider", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.configure_optimizer", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.net2wider.configure_scheduler", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.train_search_imagenet.infer"], ["def", "main", "(", ")", ":", "\n", "    ", "if", "not", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "logging", ".", "info", "(", "'no gpu device available'", ")", "\n", "sys", ".", "exit", "(", "1", ")", "\n", "\n", "", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "cudnn", ".", "benchmark", "=", "True", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "cudnn", ".", "enabled", "=", "True", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "logging", ".", "info", "(", "\"args = %s\"", ",", "args", ")", "\n", "\n", "traindir", "=", "os", ".", "path", ".", "join", "(", "args", ".", "data", ",", "'train'", ")", "\n", "valdir", "=", "os", ".", "path", ".", "join", "(", "args", ".", "data", ",", "'val'", ")", "\n", "\n", "normalize", "=", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "criterion", "=", "criterion", ".", "cuda", "(", ")", "\n", "#dataset split     ", "\n", "train_data", "=", "dset", ".", "ImageFolder", "(", "traindir", ",", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "224", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", ",", "\n", "]", ")", ")", "\n", "valid_data", "=", "dset", ".", "ImageFolder", "(", "valdir", ",", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "224", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", ",", "\n", "]", ")", ")", "\n", "\n", "num_train", "=", "len", "(", "train_data", ")", "\n", "num_val", "=", "len", "(", "valid_data", ")", "\n", "print", "(", "'# images to train network: %d'", "%", "num_train", ")", "\n", "print", "(", "'# images to validate network: %d'", "%", "num_val", ")", "\n", "\n", "model", "=", "Network", "(", "args", ".", "init_channels", ",", "CLASSES", ",", "args", ".", "layers", ",", "criterion", ",", "k", "=", "args", ".", "k", ")", "\n", "model", "=", "nn", ".", "DataParallel", "(", "model", ")", "\n", "model", "=", "model", ".", "cuda", "(", ")", "\n", "logging", ".", "info", "(", "\"param size = %fMB\"", ",", "utils", ".", "count_parameters_in_MB", "(", "model", ")", ")", "\n", "\n", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "\n", "model", ".", "parameters", "(", ")", ",", "\n", "args", ".", "learning_rate", ",", "\n", "momentum", "=", "args", ".", "momentum", ",", "\n", "weight_decay", "=", "args", ".", "weight_decay", ")", "\n", "optimizer_a", "=", "torch", ".", "optim", ".", "Adam", "(", "\n", "model", ".", "module", ".", "arch_parameters", "(", ")", ",", "\n", "lr", "=", "args", ".", "arch_learning_rate", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "\n", "weight_decay", "=", "args", ".", "arch_weight_decay", ")", "\n", "\n", "train_queue", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "train_data", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "\n", "pin_memory", "=", "True", ",", "num_workers", "=", "args", ".", "workers", ")", "\n", "\n", "valid_queue", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "valid_data", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "\n", "pin_memory", "=", "True", ",", "num_workers", "=", "args", ".", "workers", ")", "\n", "\n", "# configure progressive parameter", "\n", "epoch", "=", "0", "\n", "ks", "=", "[", "6", ",", "3", "]", "\n", "num_keeps", "=", "[", "7", ",", "4", "]", "\n", "train_epochs", "=", "[", "2", ",", "2", "]", "if", "'debug'", "in", "args", ".", "save", "else", "[", "25", ",", "25", "]", "\n", "scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "CosineAnnealingLR", "(", "\n", "optimizer", ",", "float", "(", "sum", "(", "train_epochs", ")", ")", ",", "eta_min", "=", "args", ".", "learning_rate_min", ")", "\n", "\n", "lr", "=", "args", ".", "learning_rate", "\n", "for", "i", ",", "current_epochs", "in", "enumerate", "(", "train_epochs", ")", ":", "\n", "        ", "for", "e", "in", "range", "(", "current_epochs", ")", ":", "\n", "            ", "current_lr", "=", "scheduler", ".", "get_lr", "(", ")", "[", "0", "]", "\n", "logging", ".", "info", "(", "'Epoch: %d lr: %e'", ",", "epoch", ",", "current_lr", ")", "\n", "if", "epoch", "<", "5", "and", "args", ".", "batch_size", ">", "256", ":", "\n", "                ", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "                    ", "param_group", "[", "'lr'", "]", "=", "lr", "*", "(", "epoch", "+", "1", ")", "/", "5.0", "\n", "", "logging", ".", "info", "(", "'Warming-up Epoch: %d, LR: %e'", ",", "epoch", ",", "lr", "*", "(", "epoch", "+", "1", ")", "/", "5.0", ")", "\n", "print", "(", "optimizer", ")", "\n", "\n", "", "genotype", "=", "model", ".", "module", ".", "genotype", "(", ")", "\n", "logging", ".", "info", "(", "'genotype = %s'", ",", "genotype", ")", "\n", "model", ".", "module", ".", "show_arch_parameters", "(", ")", "\n", "\n", "epoch_start", "=", "time", ".", "time", "(", ")", "\n", "# training", "\n", "train_acc", ",", "train_obj", "=", "train", "(", "train_queue", ",", "valid_queue", ",", "model", ",", "optimizer", ",", "optimizer_a", ",", "criterion", ",", "e", ")", "\n", "logging", ".", "info", "(", "'Train_acc %f'", ",", "train_acc", ")", "\n", "\n", "# validation", "\n", "if", "epoch", ">=", "47", ":", "\n", "                ", "valid_acc", ",", "valid_obj", "=", "infer", "(", "valid_queue", ",", "model", ",", "criterion", ")", "\n", "logging", ".", "info", "(", "'Valid_acc %f'", ",", "valid_acc", ")", "\n", "#test_acc, test_obj = infer(test_queue, model, criterion)", "\n", "#logging.info('Test_acc %f', test_acc)", "\n", "\n", "", "epoch", "+=", "1", "\n", "scheduler", ".", "step", "(", ")", "\n", "epoch_duration", "=", "time", ".", "time", "(", ")", "-", "epoch_start", "\n", "logging", ".", "info", "(", "'Epoch time: %ds.'", ",", "epoch_duration", ")", "\n", "# utils.save(model, os.path.join(args.save, 'weights.pt'))", "\n", "\n", "", "if", "not", "i", "==", "len", "(", "train_epochs", ")", "-", "1", ":", "\n", "            ", "model", ".", "module", ".", "pruning", "(", "num_keeps", "[", "i", "+", "1", "]", ")", "\n", "model", ".", "module", ".", "wider", "(", "ks", "[", "i", "+", "1", "]", ")", "\n", "optimizer", "=", "configure_optimizer", "(", "optimizer", ",", "torch", ".", "optim", ".", "SGD", "(", "\n", "model", ".", "parameters", "(", ")", ",", "\n", "args", ".", "learning_rate", ",", "\n", "momentum", "=", "args", ".", "momentum", ",", "\n", "weight_decay", "=", "args", ".", "weight_decay", ")", ")", "\n", "scheduler", "=", "configure_scheduler", "(", "scheduler", ",", "torch", ".", "optim", ".", "lr_scheduler", ".", "CosineAnnealingLR", "(", "\n", "optimizer", ",", "float", "(", "sum", "(", "train_epochs", ")", ")", ",", "eta_min", "=", "args", ".", "learning_rate_min", ")", ")", "\n", "logging", ".", "info", "(", "'pruning finish, %d ops left per edge'", ",", "num_keeps", "[", "i", "+", "1", "]", ")", "\n", "logging", ".", "info", "(", "'network wider finish, current pc parameter %d'", ",", "ks", "[", "i", "+", "1", "]", ")", "\n", "\n", "", "", "genotype", "=", "model", ".", "module", ".", "genotype", "(", ")", "\n", "logging", ".", "info", "(", "'genotype = %s'", ",", "genotype", ")", "\n", "model", ".", "module", ".", "show_arch_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.train_search_imagenet.train": [[188, 245], ["utils.AvgrageMeter", "utils.AvgrageMeter", "utils.AvgrageMeter", "utils.AvgrageMeter", "utils.AvgrageMeter", "utils.AvgrageMeter", "enumerate", "model.train", "input.cuda.size", "input.cuda.cuda", "target.cuda.cuda", "input_search.cuda.cuda", "target_search.cuda.cuda", "optimizer.zero_grad", "model", "criterion", "criterion.backward", "torch.utils.clip_grad_norm_", "optimizer.step", "utils.accuracy", "utils.accuracy", "utils.AvgrageMeter.update", "utils.AvgrageMeter.update", "utils.AvgrageMeter.update", "next", "optimizer_a.zero_grad", "model", "criterion", "criterion.sum().backward", "torch.utils.clip_grad_norm_", "optimizer_a.step", "model.module.parameters", "criterion.data.item", "prec1.data.item", "prec5.data.item", "time.time", "logging.info", "iter", "next", "model.module.arch_parameters", "time.time", "time.time", "criterion.sum"], "function", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.train_search_imagenet.train", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.architect.Architect.step", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.accuracy", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.accuracy", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.architect.Architect.step", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model_search_imagenet.Network.arch_parameters"], ["", "def", "train", "(", "train_queue", ",", "valid_queue", ",", "model", ",", "optimizer", ",", "optimizer_a", ",", "criterion", ",", "epoch", ")", ":", "\n", "    ", "objs", "=", "utils", ".", "AvgrageMeter", "(", ")", "\n", "top1", "=", "utils", ".", "AvgrageMeter", "(", ")", "\n", "top5", "=", "utils", ".", "AvgrageMeter", "(", ")", "\n", "\n", "for", "step", ",", "(", "input", ",", "target", ")", "in", "enumerate", "(", "train_queue", ")", ":", "\n", "        ", "model", ".", "train", "(", ")", "\n", "n", "=", "input", ".", "size", "(", "0", ")", "\n", "\n", "input", "=", "input", ".", "cuda", "(", "non_blocking", "=", "True", ")", "\n", "target", "=", "target", ".", "cuda", "(", "non_blocking", "=", "True", ")", "\n", "\n", "# get a random minibatch from the search queue with replacement", "\n", "try", ":", "\n", "            ", "input_search", ",", "target_search", "=", "next", "(", "valid_queue_iter", ")", "\n", "", "except", ":", "\n", "            ", "valid_queue_iter", "=", "iter", "(", "valid_queue", ")", "\n", "input_search", ",", "target_search", "=", "next", "(", "valid_queue_iter", ")", "\n", "", "input_search", "=", "input_search", ".", "cuda", "(", "non_blocking", "=", "True", ")", "\n", "target_search", "=", "target_search", ".", "cuda", "(", "non_blocking", "=", "True", ")", "\n", "\n", "if", "epoch", ">=", "args", ".", "begin", ":", "\n", "            ", "optimizer_a", ".", "zero_grad", "(", ")", "\n", "logits", "=", "model", "(", "input_search", ")", "\n", "loss_a", "=", "criterion", "(", "logits", ",", "target_search", ")", "\n", "loss_a", ".", "sum", "(", ")", ".", "backward", "(", ")", "\n", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "model", ".", "module", ".", "arch_parameters", "(", ")", ",", "args", ".", "grad_clip", ")", "\n", "optimizer_a", ".", "step", "(", ")", "\n", "#architect.step(input, target, input_search, target_search, lr, optimizer, unrolled=args.unrolled)", "\n", "\n", "", "optimizer", ".", "zero_grad", "(", ")", "\n", "logits", "=", "model", "(", "input", ")", "\n", "loss", "=", "criterion", "(", "logits", ",", "target", ")", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "model", ".", "module", ".", "parameters", "(", ")", ",", "args", ".", "grad_clip", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "prec1", ",", "prec5", "=", "utils", ".", "accuracy", "(", "logits", ",", "target", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "objs", ".", "update", "(", "loss", ".", "data", ".", "item", "(", ")", ",", "n", ")", "\n", "top1", ".", "update", "(", "prec1", ".", "data", ".", "item", "(", ")", ",", "n", ")", "\n", "top5", ".", "update", "(", "prec5", ".", "data", ".", "item", "(", ")", ",", "n", ")", "\n", "\n", "if", "step", "%", "args", ".", "report_freq", "==", "0", ":", "\n", "            ", "end_time", "=", "time", ".", "time", "(", ")", "\n", "if", "step", "==", "0", ":", "\n", "                ", "duration", "=", "0", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "", "else", ":", "\n", "                ", "duration", "=", "end_time", "-", "start_time", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "", "logging", ".", "info", "(", "'TRAIN Step: %03d Objs: %e R1: %f R5: %f Duration: %ds'", ",", "\n", "step", ",", "objs", ".", "avg", ",", "top1", ".", "avg", ",", "top5", ".", "avg", ",", "duration", ")", "\n", "", "if", "'debug'", "in", "args", ".", "save", ":", "\n", "            ", "break", "\n", "\n", "", "", "return", "top1", ".", "avg", ",", "objs", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.train_search_imagenet.infer": [[247, 273], ["utils.AvgrageMeter", "utils.AvgrageMeter", "utils.AvgrageMeter", "utils.AvgrageMeter", "utils.AvgrageMeter", "utils.AvgrageMeter", "model.eval", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "input.cuda.cuda", "target.cuda.cuda", "model", "criterion", "utils.accuracy", "utils.accuracy", "input.cuda.size", "utils.AvgrageMeter.update", "utils.AvgrageMeter.update", "utils.AvgrageMeter.update", "logging.info"], "function", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.accuracy", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.accuracy", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.AvgrageMeter.update"], ["", "def", "infer", "(", "valid_queue", ",", "model", ",", "criterion", ")", ":", "\n", "    ", "objs", "=", "utils", ".", "AvgrageMeter", "(", ")", "\n", "top1", "=", "utils", ".", "AvgrageMeter", "(", ")", "\n", "top5", "=", "utils", ".", "AvgrageMeter", "(", ")", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "step", ",", "(", "input", ",", "target", ")", "in", "enumerate", "(", "valid_queue", ")", ":", "\n", "            ", "input", "=", "input", ".", "cuda", "(", ")", "\n", "target", "=", "target", ".", "cuda", "(", "non_blocking", "=", "True", ")", "\n", "\n", "logits", "=", "model", "(", "input", ")", "\n", "loss", "=", "criterion", "(", "logits", ",", "target", ")", "\n", "\n", "prec1", ",", "prec5", "=", "utils", ".", "accuracy", "(", "logits", ",", "target", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "n", "=", "input", ".", "size", "(", "0", ")", "\n", "objs", ".", "update", "(", "loss", ".", "data", ",", "n", ")", "\n", "top1", ".", "update", "(", "prec1", ".", "data", ",", "n", ")", "\n", "top5", ".", "update", "(", "prec5", ".", "data", ",", "n", ")", "\n", "\n", "if", "step", "%", "args", ".", "report_freq", "==", "0", ":", "\n", "                ", "logging", ".", "info", "(", "'valid %03d %e %f %f'", ",", "step", ",", "objs", ".", "avg", ",", "top1", ".", "avg", ",", "top5", ".", "avg", ")", "\n", "", "if", "'debug'", "in", "args", ".", "save", ":", "\n", "                ", "break", "\n", "\n", "", "", "", "return", "top1", ".", "avg", ",", "objs", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.Cell.__init__": [[11, 28], ["torch.Module.__init__", "print", "operations.ReLUConvBN", "model.Cell._compile", "operations.FactorizedReduce", "operations.ReLUConvBN", "zip", "zip"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.NetworkImageNet.__init__", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.Cell._compile"], ["  ", "def", "__init__", "(", "self", ",", "genotype", ",", "C_prev_prev", ",", "C_prev", ",", "C", ",", "reduction", ",", "reduction_prev", ")", ":", "\n", "    ", "super", "(", "Cell", ",", "self", ")", ".", "__init__", "(", ")", "\n", "print", "(", "C_prev_prev", ",", "C_prev", ",", "C", ")", "\n", "\n", "if", "reduction_prev", ":", "\n", "      ", "self", ".", "preprocess0", "=", "FactorizedReduce", "(", "C_prev_prev", ",", "C", ")", "\n", "", "else", ":", "\n", "      ", "self", ".", "preprocess0", "=", "ReLUConvBN", "(", "C_prev_prev", ",", "C", ",", "1", ",", "1", ",", "0", ")", "\n", "", "self", ".", "preprocess1", "=", "ReLUConvBN", "(", "C_prev", ",", "C", ",", "1", ",", "1", ",", "0", ")", "\n", "\n", "if", "reduction", ":", "\n", "      ", "op_names", ",", "indices", "=", "zip", "(", "*", "genotype", ".", "reduce", ")", "\n", "concat", "=", "genotype", ".", "reduce_concat", "\n", "", "else", ":", "\n", "      ", "op_names", ",", "indices", "=", "zip", "(", "*", "genotype", ".", "normal", ")", "\n", "concat", "=", "genotype", ".", "normal_concat", "\n", "", "self", ".", "_compile", "(", "C", ",", "op_names", ",", "indices", ",", "concat", ",", "reduction", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.Cell._compile": [[29, 41], ["len", "torch.ModuleList", "torch.ModuleList", "zip", "len", "len", "len"], "methods", ["None"], ["", "def", "_compile", "(", "self", ",", "C", ",", "op_names", ",", "indices", ",", "concat", ",", "reduction", ")", ":", "\n", "    ", "assert", "len", "(", "op_names", ")", "==", "len", "(", "indices", ")", "\n", "self", ".", "_steps", "=", "len", "(", "op_names", ")", "//", "2", "\n", "self", ".", "_concat", "=", "concat", "\n", "self", ".", "multiplier", "=", "len", "(", "concat", ")", "\n", "\n", "self", ".", "_ops", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "name", ",", "index", "in", "zip", "(", "op_names", ",", "indices", ")", ":", "\n", "      ", "stride", "=", "2", "if", "reduction", "and", "index", "<", "2", "else", "1", "\n", "op", "=", "OPS", "[", "name", "]", "(", "C", ",", "stride", ",", "True", ")", "\n", "self", ".", "_ops", "+=", "[", "op", "]", "\n", "", "self", ".", "_indices", "=", "indices", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.Cell.forward": [[42, 62], ["model.Cell.preprocess0", "model.Cell.preprocess1", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "op1", "op2", "isinstance", "utils.drop_path", "isinstance", "utils.drop_path"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.drop_path", "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.None.utils.drop_path"], ["", "def", "forward", "(", "self", ",", "s0", ",", "s1", ",", "drop_prob", ")", ":", "\n", "    ", "s0", "=", "self", ".", "preprocess0", "(", "s0", ")", "\n", "s1", "=", "self", ".", "preprocess1", "(", "s1", ")", "\n", "\n", "states", "=", "[", "s0", ",", "s1", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "_steps", ")", ":", "\n", "      ", "h1", "=", "states", "[", "self", ".", "_indices", "[", "2", "*", "i", "]", "]", "\n", "h2", "=", "states", "[", "self", ".", "_indices", "[", "2", "*", "i", "+", "1", "]", "]", "\n", "op1", "=", "self", ".", "_ops", "[", "2", "*", "i", "]", "\n", "op2", "=", "self", ".", "_ops", "[", "2", "*", "i", "+", "1", "]", "\n", "h1", "=", "op1", "(", "h1", ")", "\n", "h2", "=", "op2", "(", "h2", ")", "\n", "if", "self", ".", "training", "and", "drop_prob", ">", "0.", ":", "\n", "        ", "if", "not", "isinstance", "(", "op1", ",", "Identity", ")", ":", "\n", "          ", "h1", "=", "drop_path", "(", "h1", ",", "drop_prob", ")", "\n", "", "if", "not", "isinstance", "(", "op2", ",", "Identity", ")", ":", "\n", "          ", "h2", "=", "drop_path", "(", "h2", ",", "drop_prob", ")", "\n", "", "", "s", "=", "h1", "+", "h2", "\n", "states", "+=", "[", "s", "]", "\n", "", "return", "torch", ".", "cat", "(", "[", "states", "[", "i", "]", "for", "i", "in", "self", ".", "_concat", "]", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.AuxiliaryHeadCIFAR.__init__": [[66, 80], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.NetworkImageNet.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C", ",", "num_classes", ")", ":", "\n", "    ", "\"\"\"assuming input size 8x8\"\"\"", "\n", "super", "(", "AuxiliaryHeadCIFAR", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "AvgPool2d", "(", "5", ",", "stride", "=", "3", ",", "padding", "=", "0", ",", "count_include_pad", "=", "False", ")", ",", "# image size = 2 x 2", "\n", "nn", ".", "Conv2d", "(", "C", ",", "128", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "128", ",", "768", ",", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "768", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "768", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.AuxiliaryHeadCIFAR.forward": [[81, 85], ["model.AuxiliaryHeadCIFAR.features", "model.AuxiliaryHeadCIFAR.classifier", "model.AuxiliaryHeadCIFAR.view", "model.AuxiliaryHeadCIFAR.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "x", "=", "self", ".", "classifier", "(", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.AuxiliaryHeadImageNet.__init__": [[89, 105], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.NetworkImageNet.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C", ",", "num_classes", ")", ":", "\n", "    ", "\"\"\"assuming input size 14x14\"\"\"", "\n", "super", "(", "AuxiliaryHeadImageNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "AvgPool2d", "(", "5", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "count_include_pad", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "C", ",", "128", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "128", ",", "768", ",", "2", ",", "bias", "=", "False", ")", ",", "\n", "# NOTE: This batchnorm was omitted in my earlier implementation due to a typo.", "\n", "# Commenting it out for consistency with the experiments in the paper.", "\n", "# nn.BatchNorm2d(768),", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "768", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.AuxiliaryHeadImageNet.forward": [[106, 110], ["model.AuxiliaryHeadImageNet.features", "model.AuxiliaryHeadImageNet.classifier", "model.AuxiliaryHeadImageNet.view", "model.AuxiliaryHeadImageNet.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "x", "=", "self", ".", "classifier", "(", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.NetworkCIFAR.__init__": [[114, 146], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.ModuleList", "torch.ModuleList", "range", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Linear", "torch.Linear", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "model.Cell", "model.AuxiliaryHeadCIFAR"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.NetworkImageNet.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C", ",", "num_classes", ",", "layers", ",", "auxiliary", ",", "genotype", ")", ":", "\n", "    ", "super", "(", "NetworkCIFAR", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_layers", "=", "layers", "\n", "self", ".", "_auxiliary", "=", "auxiliary", "\n", "\n", "stem_multiplier", "=", "3", "\n", "C_curr", "=", "stem_multiplier", "*", "C", "\n", "self", ".", "stem", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "C_curr", ",", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "C_curr", ")", "\n", ")", "\n", "\n", "C_prev_prev", ",", "C_prev", ",", "C_curr", "=", "C_curr", ",", "C_curr", ",", "C", "\n", "self", ".", "cells", "=", "nn", ".", "ModuleList", "(", ")", "\n", "reduction_prev", "=", "False", "\n", "for", "i", "in", "range", "(", "layers", ")", ":", "\n", "      ", "if", "i", "in", "[", "layers", "//", "3", ",", "2", "*", "layers", "//", "3", "]", ":", "\n", "        ", "C_curr", "*=", "2", "\n", "reduction", "=", "True", "\n", "", "else", ":", "\n", "        ", "reduction", "=", "False", "\n", "", "cell", "=", "Cell", "(", "genotype", ",", "C_prev_prev", ",", "C_prev", ",", "C_curr", ",", "reduction", ",", "reduction_prev", ")", "\n", "reduction_prev", "=", "reduction", "\n", "self", ".", "cells", "+=", "[", "cell", "]", "\n", "C_prev_prev", ",", "C_prev", "=", "C_prev", ",", "cell", ".", "multiplier", "*", "C_curr", "\n", "if", "i", "==", "2", "*", "layers", "//", "3", ":", "\n", "        ", "C_to_auxiliary", "=", "C_prev", "\n", "\n", "", "", "if", "auxiliary", ":", "\n", "      ", "self", ".", "auxiliary_head", "=", "AuxiliaryHeadCIFAR", "(", "C_to_auxiliary", ",", "num_classes", ")", "\n", "", "self", ".", "global_pooling", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "C_prev", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.NetworkCIFAR.forward": [[147, 158], ["model.NetworkCIFAR.stem", "enumerate", "model.NetworkCIFAR.global_pooling", "model.NetworkCIFAR.classifier", "model.NetworkCIFAR.view", "cell", "model.NetworkCIFAR.size", "model.NetworkCIFAR.auxiliary_head"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "    ", "logits_aux", "=", "None", "\n", "s0", "=", "s1", "=", "self", ".", "stem", "(", "input", ")", "\n", "for", "i", ",", "cell", "in", "enumerate", "(", "self", ".", "cells", ")", ":", "\n", "      ", "s0", ",", "s1", "=", "s1", ",", "cell", "(", "s0", ",", "s1", ",", "self", ".", "drop_path_prob", ")", "\n", "if", "i", "==", "2", "*", "self", ".", "_layers", "//", "3", ":", "\n", "        ", "if", "self", ".", "_auxiliary", "and", "self", ".", "training", ":", "\n", "          ", "logits_aux", "=", "self", ".", "auxiliary_head", "(", "s1", ")", "\n", "", "", "", "out", "=", "self", ".", "global_pooling", "(", "s1", ")", "\n", "logits", "=", "self", ".", "classifier", "(", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", "\n", "return", "logits", ",", "logits_aux", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.NetworkImageNet.__init__": [[162, 202], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ModuleList", "torch.ModuleList", "range", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Linear", "torch.Linear", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "model.Cell", "model.AuxiliaryHeadImageNet"], "methods", ["home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.NetworkImageNet.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C", ",", "num_classes", ",", "layers", ",", "auxiliary", ",", "genotype", ")", ":", "\n", "    ", "super", "(", "NetworkImageNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_layers", "=", "layers", "\n", "self", ".", "_auxiliary", "=", "auxiliary", "\n", "\n", "self", ".", "stem0", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "C", "//", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "C", "//", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "C", "//", "2", ",", "C", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "C", ")", ",", "\n", ")", "\n", "\n", "self", ".", "stem1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "C", ",", "C", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "C", ")", ",", "\n", ")", "\n", "\n", "C_prev_prev", ",", "C_prev", ",", "C_curr", "=", "C", ",", "C", ",", "C", "\n", "\n", "self", ".", "cells", "=", "nn", ".", "ModuleList", "(", ")", "\n", "reduction_prev", "=", "True", "\n", "for", "i", "in", "range", "(", "layers", ")", ":", "\n", "      ", "if", "i", "in", "[", "layers", "//", "3", ",", "2", "*", "layers", "//", "3", "]", ":", "\n", "        ", "C_curr", "*=", "2", "\n", "reduction", "=", "True", "\n", "", "else", ":", "\n", "        ", "reduction", "=", "False", "\n", "", "cell", "=", "Cell", "(", "genotype", ",", "C_prev_prev", ",", "C_prev", ",", "C_curr", ",", "reduction", ",", "reduction_prev", ")", "\n", "reduction_prev", "=", "reduction", "\n", "self", ".", "cells", "+=", "[", "cell", "]", "\n", "C_prev_prev", ",", "C_prev", "=", "C_prev", ",", "cell", ".", "multiplier", "*", "C_curr", "\n", "if", "i", "==", "2", "*", "layers", "//", "3", ":", "\n", "        ", "C_to_auxiliary", "=", "C_prev", "\n", "\n", "", "", "if", "auxiliary", ":", "\n", "      ", "self", ".", "auxiliary_head", "=", "AuxiliaryHeadImageNet", "(", "C_to_auxiliary", ",", "num_classes", ")", "\n", "", "self", ".", "global_pooling", "=", "nn", ".", "AvgPool2d", "(", "7", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "C_prev", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangning-chen_DrNAS.DARTS-space.model.NetworkImageNet.forward": [[203, 215], ["model.NetworkImageNet.stem0", "model.NetworkImageNet.stem1", "enumerate", "model.NetworkImageNet.global_pooling", "model.NetworkImageNet.classifier", "model.NetworkImageNet.view", "cell", "model.NetworkImageNet.size", "model.NetworkImageNet.auxiliary_head"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "    ", "logits_aux", "=", "None", "\n", "s0", "=", "self", ".", "stem0", "(", "input", ")", "\n", "s1", "=", "self", ".", "stem1", "(", "s0", ")", "\n", "for", "i", ",", "cell", "in", "enumerate", "(", "self", ".", "cells", ")", ":", "\n", "      ", "s0", ",", "s1", "=", "s1", ",", "cell", "(", "s0", ",", "s1", ",", "self", ".", "drop_path_prob", ")", "\n", "if", "i", "==", "2", "*", "self", ".", "_layers", "//", "3", ":", "\n", "        ", "if", "self", ".", "_auxiliary", "and", "self", ".", "training", ":", "\n", "          ", "logits_aux", "=", "self", ".", "auxiliary_head", "(", "s1", ")", "\n", "", "", "", "out", "=", "self", ".", "global_pooling", "(", "s1", ")", "\n", "logits", "=", "self", ".", "classifier", "(", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", "\n", "return", "logits", ",", "logits_aux", "\n", "", "", ""]]}